{
    "entry0": {
        "function_address": "0x0804f0b0",
        "instructions": [
            "push eax",
            "call fcn.0804f396",
            "jmp 0x804f0c6",
            "pushal",
            "mov esi, dword [esp + 0x24]",
            "mov edi, dword [esp + 0x2c]",
            "or ebp, 0xffffffff",
            "jmp 0x804f0e2",
            "mov al, byte [esi]",
            "inc esi",
            "mov byte [edi], al",
            "inc edi",
            "add ebx, ebx",
            "jne 0x804f0e9",
            "mov ebx, dword [esi]",
            "sub esi, 0xfffffffc",
            "adc ebx, ebx",
            "mov al, byte [edi]",
            "jb 0x804f0d8",
            "mov eax, 1",
            "add ebx, ebx",
            "jne 0x804f0fd",
            "mov ebx, dword [esi]",
            "sub esi, 0xfffffffc",
            "adc ebx, ebx",
            "adc eax, eax",
            "add ebx, ebx",
            "jae 0x804f10e",
            "jne 0x804f12d",
            "mov ebx, dword [esi]",
            "sub esi, 0xfffffffc",
            "adc ebx, ebx",
            "jb 0x804f12d",
            "dec eax",
            "add ebx, ebx",
            "jne 0x804f11a",
            "mov ebx, dword [esi]",
            "sub esi, 0xfffffffc",
            "adc ebx, ebx",
            "adc eax, eax",
            "jmp 0x804f0f2",
            "add ebx, ebx",
            "jne 0x804f129",
            "mov ebx, dword [esi]",
            "sub esi, 0xfffffffc",
            "adc ebx, ebx",
            "adc ecx, ecx",
            "jmp 0x804f17f",
            "xor ecx, ecx",
            "sub eax, 3",
            "jb 0x804f145",
            "shl eax, 8",
            "mov al, byte [esi]",
            "inc esi",
            "xor eax, 0xffffffff",
            "je 0x804f1ba",
            "sar eax, 1",
            "mov ebp, eax",
            "jmp 0x804f150",
            "add ebx, ebx",
            "jne 0x804f150",
            "mov ebx, dword [esi]",
            "sub esi, 0xfffffffc",
            "adc ebx, ebx",
            "jb 0x804f11e",
            "inc ecx",
            "add ebx, ebx",
            "jne 0x804f15e",
            "mov ebx, dword [esi]",
            "sub esi, 0xfffffffc",
            "adc ebx, ebx",
            "jb 0x804f11e",
            "add ebx, ebx",
            "jne 0x804f16b",
            "mov ebx, dword [esi]",
            "sub esi, 0xfffffffc",
            "adc ebx, ebx",
            "adc ecx, ecx",
            "add ebx, ebx",
            "jae 0x804f160",
            "jne 0x804f17c",
            "mov ebx, dword [esi]",
            "sub esi, 0xfffffffc",
            "adc ebx, ebx",
            "jae 0x804f160",
            "add ecx, 2",
            "cmp ebp, 0xfffffb00",
            "adc ecx, 2",
            "lea edx, [edi + ebp]",
            "cmp ebp, 0xfffffffc",
            "mov al, byte [edi + ecx]",
            "jbe 0x804f1a4",
            "mov al, byte [edx]",
            "inc edx",
            "mov byte [edi], al",
            "inc edi",
            "dec ecx",
            "jne 0x804f193",
            "jmp 0x804f0de",
            "mov eax, dword [edx]",
            "add edx, 4",
            "mov dword [edi], eax",
            "add edi, 4",
            "sub ecx, 4",
            "ja 0x804f1a4",
            "add edi, ecx",
            "jmp 0x804f0de",
            "mov edx, dword [esp + 0x24]",
            "add edx, dword [esp + 0x28]",
            "cmp esi, edx",
            "je 0x804f1c7",
            "dec eax",
            "sub edi, dword [esp + 0x2c]",
            "mov edx, dword [esp + 0x30]",
            "mov dword [edx], edi",
            "mov dword [esp + 0x1c], eax",
            "popal",
            "ret"
        ]
    },
    "fcn.0804f396": {
        "function_address": "0x0804f396",
        "instructions": [
            "pop ebp",
            "call fcn.0804f2e3",
            "lodsb al, byte [esi]",
            "add byte [eax], al",
            "add byte [esi + eax + 0x5c40000], ch",
            "add byte [eax], al",
            "or byte [ecx + 9], cl",
            "add bl, bh",
            "invalid"
        ]
    },
    "fcn.0804f2e3": {
        "function_address": "0x0804f2e3",
        "instructions": [
            "pop esi",
            "lodsd eax, dword [esi]",
            "lea edi, [ebp - 0xa]",
            "sub edi, dword [edi]",
            "call 0x804f301",
            "das",
            "jo 0x804f367",
            "outsd dx, dword [esi]",
            "arpl word [edi], bp",
            "jae 0x804f35f",
            "insb byte es:[edi], dx",
            "das",
            "js 0x804f365",
            "add byte [ebx + 0x29], bl",
            "leave",
            "push 5",
            "pop eax",
            "int 0x80",
            "push eax",
            "push 0",
            "mov edx, esi",
            "push 0xffffffffffffffff",
            "sub edx, edi",
            "push 0x22",
            "add edx, dword [esi]",
            "push 3",
            "push edx",
            "push 0",
            "call fcn.0804f382",
            "pop ecx",
            "push ecx",
            "push edx",
            "push eax",
            "mov edx, esi",
            "push 0",
            "sub edx, edi",
            "push ecx",
            "add edx, dword [esi + 4]",
            "push 0x12",
            "push 3",
            "push edx",
            "push eax",
            "call fcn.0804f382",
            "mov edx, eax",
            "sub eax, edi",
            "add eax, esi",
            "mov ecx, eax",
            "push eax",
            "add ecx, dword [esi]",
            "mov eax, ebp",
            "sub eax, edi",
            "add eax, edx",
            "and eax, 0xfffff000",
            "sub ecx, eax",
            "pop edx",
            "push edx",
            "push ecx",
            "push eax",
            "lodsd eax, dword [esi]",
            "push eax",
            "mov ebx, esp",
            "lodsd eax, dword [esi]",
            "xchg ecx, eax",
            "lodsd eax, dword [esi]",
            "push eax",
            "push ebx",
            "push edx",
            "push ecx",
            "push esi",
            "call ebp",
            "add esp, 0x18",
            "pop ebx",
            "sbb byte [ebx + 0x59], bl",
            "pop ecx",
            "push 5",
            "pop edx",
            "push 0x7d",
            "pop eax",
            "int 0x80",
            "pop edx",
            "pop eax",
            "push eax",
            "sub ebp, edi",
            "add ebp, eax",
            "add eax, dword [esi - 0x10]",
            "mov ecx, dword [ebp - 0xa]",
            "jmp edx"
        ]
    },
    "unk.0x804f301": {
        "function_address": "0x0804f301",
        "instructions": [
            "pop esi",
            "lodsd eax, dword [esi]",
            "lea edi, [ebp - 0xa]",
            "sub edi, dword [edi]",
            "call 0x804f301",
            "das",
            "jo 0x804f367",
            "outsd dx, dword [esi]",
            "arpl word [edi], bp",
            "jae 0x804f35f",
            "insb byte es:[edi], dx",
            "das",
            "js 0x804f365",
            "add byte [ebx + 0x29], bl",
            "leave",
            "push 5",
            "pop eax",
            "int 0x80",
            "push eax",
            "push 0",
            "mov edx, esi",
            "push 0xffffffffffffffff",
            "sub edx, edi",
            "push 0x22",
            "add edx, dword [esi]",
            "push 3",
            "push edx",
            "push 0",
            "call fcn.0804f382",
            "pop ecx",
            "push ecx",
            "push edx",
            "push eax",
            "mov edx, esi",
            "push 0",
            "sub edx, edi",
            "push ecx",
            "add edx, dword [esi + 4]",
            "push 0x12",
            "push 3",
            "push edx",
            "push eax",
            "call fcn.0804f382",
            "mov edx, eax",
            "sub eax, edi",
            "add eax, esi",
            "mov ecx, eax",
            "push eax",
            "add ecx, dword [esi]",
            "mov eax, ebp",
            "sub eax, edi",
            "add eax, edx",
            "and eax, 0xfffff000",
            "sub ecx, eax",
            "pop edx",
            "push edx",
            "push ecx",
            "push eax",
            "lodsd eax, dword [esi]",
            "push eax",
            "mov ebx, esp",
            "lodsd eax, dword [esi]",
            "xchg ecx, eax",
            "lodsd eax, dword [esi]",
            "push eax",
            "push ebx",
            "push edx",
            "push ecx",
            "push esi",
            "call ebp",
            "add esp, 0x18",
            "pop ebx",
            "sbb byte [ebx + 0x59], bl",
            "pop ecx",
            "push 5",
            "pop edx",
            "push 0x7d",
            "pop eax",
            "int 0x80",
            "pop edx",
            "pop eax",
            "push eax",
            "sub ebp, edi",
            "add ebp, eax",
            "add eax, dword [esi - 0x10]",
            "mov ecx, dword [ebp - 0xa]",
            "jmp edx"
        ]
    },
    "fcn.0804f382": {
        "function_address": "0x0804f382",
        "instructions": [
            "lea ebx, [esp + 4]",
            "push 0x5a",
            "pop eax",
            "int 0x80",
            "cmp eax, 0xfffff000",
            "jl 0x804f393",
            "hlt",
            "ret 0x18"
        ]
    }
}