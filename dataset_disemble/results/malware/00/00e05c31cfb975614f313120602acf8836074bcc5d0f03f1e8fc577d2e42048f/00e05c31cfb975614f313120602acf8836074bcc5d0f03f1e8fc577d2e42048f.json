{
    "entry0": {
        "function_address": "0x00011ff4",
        "instructions": [
            "sub sp, sp, 0x18",
            "bl fcn.00012ae8",
            "ldrb ip, [sp]",
            "cmp ip, 0xe",
            "bne 0x129ec",
            "push {r2, r3, fp, lr}",
            "ldrb fp, [r0]",
            "mov ip, 0x600",
            "lsr fp, fp, 3",
            "lsl ip, ip, fp",
            "mov fp, sp",
            "add ip, ip, 0xe80",
            "sub sp, sp, ip",
            "ldr ip, [r3]",
            "str r3, [sp, 8]",
            "str ip, [sp, 4]",
            "str r2, [sp]",
            "add r3, sp, 0xc",
            "mov ip, 0",
            "str ip, [r3], 4",
            "cmp r3, fp",
            "bne 0x12040",
            "add r3, sp, 0xc",
            "sub r2, r1, 2",
            "mov r1, r0",
            "ldrb ip, [r1], 1",
            "and ip, ip, 7",
            "strb ip, [sp, 0x12]",
            "ldrb ip, [r1], 1",
            "lsr r0, ip, 4",
            "strb r0, [sp, 0x11]",
            "and ip, ip, 0xf",
            "strb ip, [sp, 0x10]",
            "add r0, sp, 0x10",
            "bl fcn.000120b4",
            "mov sp, fp",
            "mov r3, r0",
            "pop {r0, r1}",
            "ldr r1, [r1]",
            "add r1, r1, r0",
            "mov r2, 0",
            "mov ip, r7",
            "mov r7, 2",
            "orr r7, r7, 0xf0000",
            "svc 0",
            "mov r7, ip",
            "mov r0, r3",
            "pop {fp, pc}",
            "stmdbmi r4!, {r1, r3}",
            "blo 0x1bec3b0",
            "andeq r0, r0, r0, lsr 20"
        ]
    },
    "fcn.00012ae8": {
        "function_address": "0x00012ae8",
        "instructions": [
            "ldr r0, [lr, -0x10]",
            "sub r6, lr, 0x10",
            "str lr, [sp, 0x10]",
            "sub r6, r6, r0",
            "str r6, [sp]",
            "mov sb, r0",
            "sub r0, pc, 0x30",
            "mov r1, 0",
            "mov r7, 5",
            "svc 0",
            "str r0, [sp, 4]",
            "ldr r3, [lr, -0xc]",
            "bl fcn.000129f8",
            "andeq r0, r0, ip, lsr 1",
            "andeq r0, r0, ip, asr sl",
            "andeq r0, r0, r7, lsr r6",
            "andeq r5, r0, lr",
            "andeq r0, r0, sl, lsl r3",
            "adcs pc, fp, 12, 10"
        ]
    },
    "fcn.000120b4": {
        "function_address": "0x000120b4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x30"
        ]
    },
    "fcn.000129f8": {
        "function_address": "0x000129f8",
        "instructions": [
            "str r3, [sp, 0x14]",
            "mvn sl, r6",
            "add sl, sl, 1",
            "add r6, lr, 4",
            "add lr, r6, sl",
            "ldr r1, [r6]",
            "mov r5, 0",
            "mvn r4, 0",
            "mov r2, 3",
            "add r1, r1, lr",
            "mov r0, 0",
            "str r1, [sp, 0xc]",
            "mov r7, 0xc0",
            "svc 0",
            "str r0, [sp, 8]",
            "ldr r1, [r6, 4]",
            "ldr r4, [sp, 4]",
            "mov r3, 0x12",
            "add r1, r1, lr",
            "mov r7, 0xc0",
            "svc 0",
            "add sl, r0, sl",
            "ldr r3, [r6]",
            "str r3, [sp, -4]!",
            "mov r3, sp",
            "ldrb r0, [r6, 8]",
            "str r0, [sp, -4]!",
            "add r2, r6, sl",
            "ldr r1, [r6, 4]",
            "add r0, r6, 0xc",
            "mov r4, r2",
            "mov lr, pc",
            "ldr pc, [sp, 0x18]"
        ]
    }
}