{
    "sym.unregister_sound_special": {
        "function_address": "0x08000128",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r4, r0",
            "mov r5, r1",
            "ldr r0, [0x08000120]",
            "bl _raw_spin_lock",
            "mov r1, r5",
            "mov r0, r4",
            "bl fcn.08000068",
            "mov r4, r0",
            "ldr r0, [0x08000120]",
            "bl _raw_spin_unlock",
            "cmp r4, 0",
            "popeq {r4, r5, r6, pc}",
            "ldr r3, [0x08000124]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "bne 0x8000100",
            "add r3, r4, 0xc",
            "mov r2, 1",
            "ldr r1, [r4]",
            "mov r0, 0xe",
            "bl __unregister_chrdev",
            "ldr r3, [0x08000120]",
            "ldr r1, [r4]",
            "ldr r0, [r3, 4]",
            "orr r1, r1, 0xe00000",
            "bl device_destroy",
            "mov r0, r4",
            "pop {r4, r5, r6, lr}",
            "b kfree",
            "ands r3, r0, 0x8000000f",
            "mov r1, r0",
            "submi r3, r3, 1",
            "ldr r0, [0x0800014c]",
            "mvnmi r3, r3, lsl 28",
            "mvnmi r3, r3, lsr 28",
            "addmi r3, r3, 1",
            "add r0, r0, r3, lsl 2",
            "b 0x80000a8"
        ]
    },
    "fcn.08000068": {
        "function_address": "0x08000068",
        "instructions": [
            "push {r4, lr}",
            "ldr r4, [r0]",
            "cmp r4, 0",
            "beq 0x8000094",
            "ldr r3, [r4]",
            "cmp r3, r1",
            "ldreq r3, [r4, 8]",
            "streq r3, [r0]",
            "beq 0x800009c",
            "add r0, r4, 8",
            "b 0x800006c",
            "ldr r0, [0x080000a4]",
            "bl printk",
            "mov r0, r4",
            "pop {r4, pc}"
        ]
    },
    "sym.register_sound_dsp": {
        "function_address": "0x0800036c",
        "instructions": [
            "push {r0, r1, r2, r3, r4, lr}",
            "mov r3, 0",
            "str r3, [sp, 8]",
            "mov r2, r1",
            "ldr r3, [0x080003a4]",
            "mov r1, r0",
            "ldr r0, [0x080003a8]",
            "str r3, [sp, 4]",
            "mov r3, 0x83",
            "str r3, [sp]",
            "mov r3, 3",
            "bl fcn.08000180",
            "add sp, sp, 0x14",
            "pop {pc}"
        ]
    },
    "fcn.08000180": {
        "function_address": "0x08000180",
        "instructions": [
            "push {r0, r1, r2, r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r3",
            "ldr r3, [reloc.kmalloc_caches]",
            "mov r6, r0",
            "mov sb, r1",
            "mov r1, 0xd0",
            "mov r7, r2",
            "ldr sl, [sp, 0x30]",
            "ldr r0, [r3, 0x18]",
            "bl kmem_cache_alloc",
            "subs r5, r0, 0",
            "mvneq r4, 0xb",
            "beq 0x8000344",
            "ldr r0, [0x08000354]",
            "lsl r8, r7, 4",
            "bl _raw_spin_lock",
            "cmp r7, 0",
            "movlt r3, r6",
            "bge 0x800021c",
            "ldr r2, [r3]",
            "cmp r2, 0",
            "beq 0x800020c",
            "ldr r1, [r2]",
            "cmp r4, r1",
            "ble 0x800020c",
            "add r3, r2, 8",
            "b 0x80001cc",
            "ldr r2, [r3]",
            "cmp r2, 0",
            "beq 0x8000244",
            "ldr r1, [r2]",
            "cmp r1, r4",
            "bgt 0x8000244",
            "add r3, r2, 8",
            "add r4, r4, 0x10",
            "cmp sl, r4",
            "bgt 0x80001ec",
            "mvn r4, 1",
            "b 0x800025c",
            "add r4, r4, r8",
            "mov r3, r6",
            "ldr r2, [r3]",
            "cmp r2, 0",
            "beq 0x8000244",
            "ldr r1, [r2]",
            "cmp r4, r1",
            "beq 0x8000258",
            "addge r3, r2, 8",
            "bge 0x8000224",
            "stm r5, {r4, sb}",
            "ldr r2, [r3]",
            "str r2, [r5, 8]",
            "str r5, [r3]",
            "b 0x800025c",
            "mvn r4, 0xf",
            "ldr r0, [0x08000354]",
            "bl _raw_spin_unlock",
            "cmp r4, 0",
            "blt 0x800033c",
            "cmp r4, 0xf",
            "add fp, r5, 0xc",
            "bgt 0x800028c",
            "ldr r2, [sp, 0x34]",
            "mov r0, fp",
            "ldr r1, [0x08000358]",
            "bl sprintf",
            "b 0x80002a0",
            "asr r3, r4, 4",
            "ldr r2, [sp, 0x34]",
            "ldr r1, [0x0800035c]",
            "mov r0, fp",
            "bl sprintf",
            "ldr r3, [0x08000360]",
            "ldr r4, [0x08000354]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "bne 0x800030c",
            "ldr r3, [0x08000364]",
            "mov r2, 1",
            "mov r0, 0xe",
            "str r3, [sp]",
            "mov r3, fp",
            "ldr r1, [r5]",
            "bl __register_chrdev",
            "cmp r0, 0",
            "bge 0x800030c",
            "mov r0, r4",
            "bl _raw_spin_lock",
            "ldr r1, [r5]",
            "mov r0, r6",
            "bl fcn.08000068",
            "cmp r7, 0",
            "ldrlt r4, [r5]",
            "addlt r4, r4, 0x10",
            "blt 0x80001c0",
            "mov r0, r4",
            "mvn r4, 0xf",
            "bl _raw_spin_unlock",
            "b 0x8000344",
            "mov r3, r5",
            "ldr r1, [sp, 0x38]",
            "ldr r2, [r3], 0x12",
            "orr r2, r2, 0xe00000",
            "str r3, [sp, 4]",
            "ldr r3, [0x08000368]",
            "str r3, [sp]",
            "mov r3, 0",
            "ldr r0, [r4, 4]",
            "bl device_create",
            "ldr r4, [r5]",
            "b 0x8000344",
            "mov r0, r5",
            "bl kfree",
            "mov r0, r4",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.register_sound_special_device": {
        "function_address": "0x08000428",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "ands r4, r1, 0x8000000f",
            "submi r4, r4, 1",
            "sub sp, sp, 0x24",
            "mov r6, r0",
            "mov r5, r1",
            "mvnmi r4, r4, lsl 28",
            "mov r7, r2",
            "mvnmi r4, r4, lsr 28",
            "addmi r4, r4, 1",
            "cmp r4, 0xe",
            "ldrls pc, [pc, r4, lsl 2]",
            "b 0x8000508",
            "mov r2, r4",
            "ldr r1, [0x08000590]",
            "add r0, sp, 0x10",
            "bl sprintf",
            "cmp r5, 0xf",
            "ble 0x8000538",
            "ldr r1, [0x08000594]",
            "add r0, sp, 0x10",
            "bl strcat",
            "b 0x8000538",
            "add r3, sp, 0x10",
            "mov r2, 0x100",
            "ldr r0, [0x0800059c]",
            "mov r1, r6",
            "stm sp, {r2, r3, r7}",
            "add r0, r0, r4, lsl 2",
            "mov r3, r5",
            "mvn r2, 0",
            "bl fcn.08000180",
            "add sp, sp, 0x24",
            "pop {r4, r5, r6, r7, pc}",
            "andeq r0, r0, r0",
            "andeq r0, r0, r0",
            "andeq r0, r0, r0",
            "andeq r0, r0, r0",
            "andeq r0, r0, r0",
            "andeq r0, r0, r0",
            "andeq r0, r0, r0",
            "andeq r0, r0, r0",
            "andeq r0, r0, r0",
            "andeq r0, r0, r0",
            "andeq r0, r0, r0",
            "andeq r0, r0, r0",
            "andeq r0, r0, r0",
            "andeq r0, r0, r0",
            "andeq r0, r0, r0",
            "andeq r0, r0, r0",
            "andeq r0, r0, r0",
            "andeq r0, r0, r0",
            "invalid",
            "cmnvc r3, 0x17c",
            "andeq r0, r0, r0",
            "andeq r0, r0, r0",
            "strhhi sl, [r1], -r0",
            "andeq r0, r0, r0",
            "strhthi fp, [r8], r0",
            "ldclvs p1, c6, [r2, -0x1c0]!",
            "ldrbvs r7, [r0, -0x974]!",
            "ldrbvs r7, [r2, -0x3d]!",
            "stmdbvs r1!, {r0, r1, r5, r6, sl, fp, sp, lr} ^",
            "invalid",
            "strhs r6, [0x080004f2]!",
            "movwlo r0, 0x1073",
            "invalid",
            "mrcvs p15, 3, r6, c5, c3, 2",
            "strbvs r2, [r4, -0x64]!",
            "strbvs r6, [r3, -0x976]!",
            "rsbhs r2, r4, r0, lsr 10",
            "strbtvc r6, [lr], -0x577",
            "invalid"
        ]
    },
    "sym.register_sound_mixer": {
        "function_address": "0x080003ec",
        "instructions": [
            "push {r0, r1, r2, r3, r4, lr}",
            "mov r3, 0",
            "ldr r2, [0x08000420]",
            "str r3, [sp, 8]",
            "str r2, [sp, 4]",
            "mov r2, 0x80",
            "str r2, [sp]",
            "mov r2, r1",
            "mov r1, r0",
            "ldr r0, [0x08000424]",
            "bl fcn.08000180",
            "add sp, sp, 0x14",
            "pop {pc}"
        ]
    },
    "sym.register_sound_midi": {
        "function_address": "0x080003ac",
        "instructions": [
            "push {r0, r1, r2, r3, r4, lr}",
            "mov r3, 0",
            "str r3, [sp, 8]",
            "mov r2, r1",
            "ldr r3, [0x080003e4]",
            "mov r1, r0",
            "ldr r0, [0x080003e8]",
            "str r3, [sp, 4]",
            "mov r3, 0x82",
            "str r3, [sp]",
            "mov r3, 2",
            "bl fcn.08000180",
            "add sp, sp, 0x14",
            "pop {pc}"
        ]
    }
}