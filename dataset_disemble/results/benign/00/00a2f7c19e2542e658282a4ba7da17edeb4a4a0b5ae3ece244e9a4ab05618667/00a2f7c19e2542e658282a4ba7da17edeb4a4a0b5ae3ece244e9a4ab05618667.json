{
    "entry0": {
        "function_address": "0x00001380",
        "instructions": [
            "push {r4, lr}",
            "ldr r4, [0x000013e4]",
            "ldr r3, [0x000013e8]",
            "add r4, pc, r4",
            "ldrb r3, [r4, r3]",
            "cmp r3, 0",
            "popne {r4, pc}",
            "ldr r3, [0x000013ec]",
            "ldr r3, [r4, r3]",
            "cmp r3, 0",
            "beq 0x13b8",
            "ldr r3, [0x000013f0]",
            "ldr r0, [r4, r3]",
            "bl sym.imp.__cxa_finalize",
            "ldr r3, [0x000013f4]",
            "ldr r3, [r4, r3]",
            "cmp r3, 0",
            "beq 0x13d4",
            "ldr r0, [0x000013f8]",
            "add r0, r4, r0",
            "bl loc.imp.__deregister_frame_info",
            "ldr r3, [0x000013e8]",
            "mov r2, 1",
            "strb r2, [r4, r3]",
            "pop {r4, pc}"
        ]
    },
    "sym.imp.__cxa_finalize": {
        "function_address": "0x00001110",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 12, 20",
            "ldr pc, [ip, 0xc08]!"
        ]
    },
    "loc.imp.__deregister_frame_info": {
        "function_address": "0x000011a0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 12, 20",
            "ldr pc, [ip, 0xba8]!"
        ]
    },
    "sym.compute_password_element": {
        "function_address": "0x00002ab0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x64",
            "ldr r4, [0x000030d4]",
            "mov r6, r0",
            "str r1, [sp, 0x10]",
            "str r2, [sp, 0x20]",
            "add r4, pc, r4",
            "str r3, [sp, 0x24]",
            "bl loc.imp.HMAC_CTX_new",
            "subs r7, r0, 0",
            "bne 0x2b04",
            "ldr r3, [0x000030d8]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "ble 0x3054",
            "ldr r1, [0x000030dc]",
            "add r0, r0, 0x10",
            "add r1, r4, r1",
            "bl loc.imp.radlog",
            "b 0x3054",
            "ldr r2, [sp, 0x10]",
            "sub r3, r2, 0x13",
            "cmp r3, 7",
            "addls pc, pc, r3, lsl 2",
            "b 0x2b50",
            "b 0x2b7c",
            "b 0x2b84",
            "b 0x2b38",
            "b 0x2b50",
            "b 0x2b50",
            "b 0x2b50",
            "b 0x2b40",
            "b 0x2b48",
            "mov r0, 0x2cc",
            "b 0x2b88",
            "movw r0, 0x199",
            "b 0x2b88",
            "movw r0, 0x2c9",
            "b 0x2b88",
            "ldr r3, [0x000030d8]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "ble 0x306c",
            "ldr r1, [0x000030e0]",
            "mov r0, 0x10",
            "ldr r2, [sp, 0x10]",
            "add r1, r4, r1",
            "bl loc.imp.radlog",
            "b 0x306c",
            "movw r0, 0x19f",
            "b 0x2b88",
            "movw r0, 0x2cb",
            "mov sl, 0",
            "str sl, [r6, 0x130]",
            "str sl, [r6, 0x134]",
            "str sl, [r6, 0x138]",
            "bl loc.imp.EC_GROUP_new_by_curve_name",
            "cmp r0, sl",
            "mov r5, r0",
            "str r0, [r6, 0x12c]",
            "bne 0x2be0",
            "ldr r3, [0x000030d8]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "cmp r3, sl",
            "ble 0x2bd0",
            "ldr r1, [0x000030e4]",
            "mov r0, 0x10",
            "add r1, r4, r1",
            "bl loc.imp.radlog",
            "mvn r6, 0",
            "mov fp, r5",
            "mov sb, r5",
            "b 0x3080",
            "bl loc.imp.BN_new",
            "subs sb, r0, 0",
            "beq 0x2c3c",
            "bl loc.imp.BN_new",
            "subs fp, r0, 0",
            "beq 0x2c40",
            "ldr r0, [r6, 0x12c]",
            "bl loc.imp.EC_POINT_new",
            "cmp r0, 0",
            "str r0, [r6, 0x130]",
            "beq 0x2c40",
            "bl loc.imp.BN_new",
            "cmp r0, 0",
            "str r0, [r6, 0x134]",
            "beq 0x2c40",
            "bl loc.imp.BN_new",
            "cmp r0, 0",
            "str r0, [r6, 0x138]",
            "beq 0x2c40",
            "bl loc.imp.BN_new",
            "subs r8, r0, 0",
            "bne 0x2c68",
            "b 0x2c40",
            "mov fp, sb",
            "ldr r3, [0x000030d8]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "ble 0x3078",
            "ldr r1, [0x000030e8]",
            "mov r0, 0x10",
            "add r1, r4, r1",
            "bl loc.imp.radlog",
            "b 0x3078",
            "str sl, [sp]",
            "mov r2, sl",
            "ldr r0, [r6, 0x12c]",
            "mov r3, sl",
            "ldr r1, [r6, 0x138]",
            "bl loc.imp.EC_GROUP_get_curve_GFp",
            "subs r5, r0, 0",
            "bne 0x2ca8",
            "ldr r3, [0x000030d8]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "ble 0x3094",
            "add r0, r0, 0x10",
            "ldr r1, [0x000030ec]",
            "b 0x2d84",
            "ldr r0, [r6, 0x12c]",
            "mov r2, sl",
            "ldr r1, [r6, 0x134]",
            "bl loc.imp.EC_GROUP_get_order",
            "cmp r0, 0",
            "bne 0x2ce0",
            "ldr r3, [0x000030d8]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "ble 0x3088",
            "add r0, r0, 0x10",
            "ldr r1, [0x000030f0]",
            "b 0x2d14",
            "ldr r0, [r6, 0x12c]",
            "mov r1, fp",
            "mov r2, sl",
            "bl loc.imp.EC_GROUP_get_cofactor",
            "cmp r0, 0",
            "bne 0x2d20",
            "ldr r3, [0x000030d8]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "ble 0x3088",
            "ldr r1, [0x000030f4]",
            "add r0, r0, 0x10",
            "add r1, r4, r1",
            "bl loc.imp.radlog",
            "b 0x3088",
            "ldr r0, [r6, 0x138]",
            "bl loc.imp.BN_num_bits",
            "str r0, [sp, 0xc]",
            "ldr r0, [r6, 0x138]",
            "bl loc.imp.BN_num_bits",
            "adds r3, r0, 7",
            "mov r1, 1",
            "addmi r0, r0, 0xe",
            "movpl r0, r3",
            "ldr r3, [0x000030f8]",
            "asr r0, r0, 3",
            "str r0, [sp, 0x18]",
            "add r3, r4, r3",
            "mov r0, r6",
            "ldr r2, [sp, 0x18]",
            "bl loc.imp._talloc_zero_array",
            "subs r5, r0, 0",
            "bne 0x2d90",
            "ldr r3, [0x000030d8]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "ble 0x3094",
            "ldr r1, [0x000030fc]",
            "add r0, r0, 0x10",
            "add r1, r4, r1",
            "bl loc.imp.radlog",
            "b 0x3094",
            "ldr r2, [sp, 0xc]",
            "mov r3, 0",
            "strb r3, [sp, 0x5f]",
            "mov sl, r5",
            "ands r3, r2, 0x80000007",
            "submi r3, r3, 1",
            "mvnmi r3, r3, lsl 29",
            "mvnmi r3, r3, lsr 29",
            "addmi r3, r3, 1",
            "rsb r3, r3, 8",
            "str r3, [sp, 0x1c]",
            "ldr r3, [0x00003100]",
            "add r3, r4, r3",
            "str r3, [sp, 0x28]",
            "ldr r3, [0x000030d8]",
            "str r3, [sp, 0x14]",
            "ldr r3, [0x00003104]",
            "add r3, r4, r3",
            "str r3, [sp, 0x2c]",
            "ldr r3, [0x00003108]",
            "add r3, r4, r3",
            "str r3, [sp, 0x30]",
            "ldr r3, [0x0000310c]",
            "add r3, r4, r3",
            "str r3, [sp, 0x34]",
            "ldrb r3, [sp, 0x5f]",
            "cmp r3, 0xa",
            "bls 0x2e30",
            "ldr r3, [0x000030d8]",
            "mov r5, sl",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "ble 0x3094",
            "ldr r1, [0x00003110]",
            "mov r0, 0x10",
            "ldr r2, [sp, 0x10]",
            "add r1, r4, r1",
            "bl loc.imp.radlog",
            "b 0x3094",
            "add r3, r3, 1",
            "add r5, sp, 0x60",
            "strb r3, [r5, -1]!",
            "mov r0, r7",
            "bl fcn.00002888",
            "mov r0, r7",
            "ldr r1, [sp, 0x98]",
            "mov r2, 4",
            "bl fcn.000028d4",
            "mov r0, r7",
            "ldr r1, [sp, 0x90]",
            "ldr r2, [sp, 0x94]",
            "bl fcn.000028d4",
            "mov r0, r7",
            "ldr r1, [sp, 0x88]",
            "ldr r2, [sp, 0x8c]",
            "bl fcn.000028d4",
            "mov r0, r7",
            "ldr r1, [sp, 0x20]",
            "ldr r2, [sp, 0x24]",
            "bl fcn.000028d4",
            "mov r1, r5",
            "mov r2, 1",
            "add r5, sp, 0x3c",
            "mov r0, r7",
            "bl fcn.000028d4",
            "mov r0, r7",
            "mov r1, r5",
            "bl fcn.000028d8",
            "mov r1, 0x20",
            "mov r2, sb",
            "mov r0, r5",
            "bl loc.imp.BN_bin2bn",
            "ldr r2, [sp, 0xc]",
            "mov r0, r5",
            "ldr r1, [sp, 0x28]",
            "mov r3, sl",
            "str r2, [sp]",
            "mov r2, 0x1b",
            "bl fcn.000028f0",
            "cmp r0, 0",
            "beq 0x2efc",
            "ldr r3, [0x000030d8]",
            "mov r5, sl",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "ble 0x3094",
            "mov r0, 0x10",
            "ldr r1, [0x00003114]",
            "b 0x2d84",
            "mov r0, sl",
            "ldr r1, [sp, 0x18]",
            "mov r2, r8",
            "bl loc.imp.BN_bin2bn",
            "ldr r3, [sp, 0xc]",
            "tst r3, 7",
            "beq 0x2f28",
            "mov r0, r8",
            "mov r1, r8",
            "ldr r2, [sp, 0x1c]",
            "bl loc.imp.BN_rshift",
            "mov r0, r8",
            "ldr r1, [r6, 0x138]",
            "bl loc.imp.BN_ucmp",
            "cmp r0, 0",
            "bge 0x2df4",
            "ldr r3, [sb, 4]",
            "mov r5, 0",
            "mov r2, r8",
            "cmp r3, 0",
            "ldrgt r3, [sb]",
            "movle r3, 0",
            "ldrgt r3, [r3]",
            "str r5, [sp]",
            "ldr r0, [r6, 0x12c]",
            "andgt r3, r3, 1",
            "ldr r1, [r6, 0x130]",
            "bl loc.imp.EC_POINT_set_compressed_coordinates_GFp",
            "cmp r0, r5",
            "beq 0x2df4",
            "ldr r0, [r6, 0x12c]",
            "mov r2, r5",
            "ldr r1, [r6, 0x130]",
            "bl loc.imp.EC_POINT_is_on_curve",
            "cmp r0, r5",
            "bne 0x2fac",
            "ldr r2, [sp, 0x14]",
            "ldr r3, [r4, r2]",
            "ldr r3, [r3]",
            "cmp r3, r5",
            "movgt r0, 0x10",
            "ldrgt r1, [sp, 0x34]",
            "bgt 0x3038",
            "b 0x2df4",
            "bl loc.imp.BN_value_one",
            "mov r1, r0",
            "mov r0, fp",
            "bl loc.imp.BN_cmp",
            "cmp r0, 0",
            "beq 0x3040",
            "ldr r1, [r6, 0x130]",
            "mov r2, r5",
            "str fp, [sp]",
            "str r5, [sp, 4]",
            "mov r3, r1",
            "ldr r0, [r6, 0x12c]",
            "bl loc.imp.EC_POINT_mul",
            "cmp r0, 0",
            "bne 0x3008",
            "ldr r2, [sp, 0x14]",
            "ldr r3, [r4, r2]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "addgt r0, r0, 0x10",
            "ldrgt r1, [sp, 0x30]",
            "bgt 0x3038",
            "b 0x2df4",
            "ldr r0, [r6, 0x12c]",
            "ldr r1, [r6, 0x130]",
            "bl loc.imp.EC_POINT_is_at_infinity",
            "cmp r0, 0",
            "beq 0x3040",
            "ldr r2, [sp, 0x14]",
            "ldr r3, [r4, r2]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "ble 0x2df4",
            "ldr r1, [sp, 0x2c]",
            "mov r0, 0x10",
            "bl loc.imp.radlog",
            "b 0x2df4",
            "ldr r3, [sp, 0x10]",
            "mov r5, sl",
            "strh r3, [r6, 2]",
            "mov r6, 0",
            "b 0x3098",
            "mvn r6, 0",
            "mov r5, r7",
            "mov fp, r7",
            "mov sb, r7",
            "mov r8, r7",
            "b 0x3098",
            "mvn r6, 0",
            "mov r5, 0",
            "b 0x2bd4",
            "mvn r6, 0",
            "mov r5, 0",
            "mov r8, r5",
            "b 0x3098",
            "mvn r6, 0",
            "mov r5, 0",
            "b 0x3098",
            "mvn r6, 0",
            "mov r0, fp",
            "bl loc.imp.BN_clear_free",
            "mov r0, r8",
            "bl loc.imp.BN_clear_free",
            "mov r0, sb",
            "bl loc.imp.BN_clear_free",
            "ldr r1, [0x00003118]",
            "mov r0, r5",
            "add r1, r4, r1",
            "bl loc.imp._talloc_free",
            "mov r0, r7",
            "bl loc.imp.HMAC_CTX_free",
            "mov r0, r6",
            "add sp, sp, 0x64",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "loc.imp.HMAC_CTX_new": {
        "function_address": "0x00001320",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 12, 20",
            "ldr pc, [ip, 0xaa8]!"
        ]
    },
    "loc.imp.radlog": {
        "function_address": "0x000011d0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 12, 20",
            "ldr pc, [ip, 0xb88]!"
        ]
    },
    "loc.imp.EC_GROUP_new_by_curve_name": {
        "function_address": "0x000012f0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 12, 20",
            "ldr pc, [ip, 0xac8]!"
        ]
    },
    "loc.imp.BN_new": {
        "function_address": "0x00001344",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 12, 20",
            "ldr pc, [ip, 0xa90]!"
        ]
    },
    "loc.imp.EC_POINT_new": {
        "function_address": "0x000011ac",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 12, 20",
            "ldr pc, [ip, 0xba0]!"
        ]
    },
    "loc.imp.EC_GROUP_get_curve_GFp": {
        "function_address": "0x00001290",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 12, 20",
            "ldr pc, [ip, 0xb08]!"
        ]
    },
    "loc.imp.EC_GROUP_get_order": {
        "function_address": "0x00001068",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 12, 20",
            "ldr pc, [ip, 0xc78]!"
        ]
    },
    "loc.imp.EC_GROUP_get_cofactor": {
        "function_address": "0x000012e4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 12, 20",
            "ldr pc, [ip, 0xad0]!"
        ]
    },
    "loc.imp.BN_num_bits": {
        "function_address": "0x00001164",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 12, 20",
            "ldr pc, [ip, 0xbd0]!"
        ]
    },
    "loc.imp._talloc_zero_array": {
        "function_address": "0x00001278",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 12, 20",
            "ldr pc, [ip, 0xb18]!"
        ]
    },
    "fcn.00002888": {
        "function_address": "0x00002888",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "sub sp, sp, 0x28",
            "add r5, sp, 8",
            "mov r4, 0x20",
            "mov r2, r4",
            "mov r6, r0",
            "mov r1, 0",
            "mov r0, r5",
            "bl sym.imp.memset",
            "bl loc.imp.EVP_sha256",
            "mov r2, 0",
            "mov r3, r0",
            "str r2, [sp]",
            "mov r0, r6",
            "mov r1, r5",
            "mov r2, r4",
            "bl loc.imp.HMAC_Init_ex",
            "add sp, sp, 0x28",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.000028d4": {
        "function_address": "0x000028d4",
        "instructions": [
            "b loc.imp.HMAC_Update"
        ]
    },
    "fcn.000028d8": {
        "function_address": "0x000028d8",
        "instructions": [
            "push {r0, r1, r2, lr}",
            "mov r3, 0x20",
            "add r2, sp, 8",
            "str r3, [r2, -4]!",
            "bl loc.imp.HMAC_Final",
            "pop {r1, r2, r3, pc}"
        ]
    },
    "loc.imp.BN_bin2bn": {
        "function_address": "0x00001074",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 12, 20",
            "ldr pc, [ip, 0xc70]!"
        ]
    },
    "fcn.000028f0": {
        "function_address": "0x000028f0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov fp, r3",
            "sub sp, sp, 0x4c",
            "mov r3, 0x20",
            "ldr r5, [0x00002aa4]",
            "str r0, [sp, 8]",
            "str r1, [sp, 0xc]",
            "str r2, [sp, 0x10]",
            "add r5, pc, r5",
            "ldr r4, [sp, 0x70]",
            "str r3, [sp, 0x40]",
            "bl loc.imp.HMAC_CTX_new",
            "subs r6, r0, 0",
            "bne 0x2950",
            "ldr r3, [0x00002aa8]",
            "ldr r3, [r5, r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "ble 0x2a98",
            "ldr r1, [0x00002aac]",
            "add r0, r0, 0x10",
            "add r1, r5, r1",
            "bl loc.imp.radlog",
            "b 0x2a98",
            "ubfx r3, r4, 8, 8",
            "add r2, sp, 0x46",
            "orr r3, r3, r4, lsl 8",
            "adds sl, r4, 7",
            "addmi sl, r4, 0xe",
            "str r2, [sp, 0x14]",
            "strh r3, [sp, 0x44]",
            "mov r5, 0",
            "add r3, sp, 0x44",
            "add r2, sp, 0x40",
            "asr sl, sl, 3",
            "mov r7, r5",
            "add r8, sp, 0x20",
            "str r3, [sp, 0x18]",
            "str r2, [sp, 0x1c]",
            "mov sb, r4",
            "b 0x2a48",
            "add r7, r7, 1",
            "uxth r7, r7",
            "lsl r3, r7, 8",
            "orr r3, r3, r7, lsr 8",
            "strh r3, [sp, 0x46]",
            "bl loc.imp.EVP_sha256",
            "mov r2, 0",
            "mov r3, r0",
            "str r2, [sp]",
            "mov r0, r6",
            "ldr r1, [sp, 8]",
            "add r2, r2, 0x20",
            "bl loc.imp.HMAC_Init_ex",
            "cmp r7, 1",
            "bls 0x29e0",
            "mov r0, r6",
            "mov r1, r8",
            "ldr r2, [sp, 0x40]",
            "bl loc.imp.HMAC_Update",
            "ldr r1, [sp, 0x14]",
            "mov r2, 2",
            "mov r0, r6",
            "bl loc.imp.HMAC_Update",
            "ldr r1, [sp, 0xc]",
            "mov r0, r6",
            "ldr r2, [sp, 0x10]",
            "bl loc.imp.HMAC_Update",
            "ldr r1, [sp, 0x18]",
            "mov r2, 2",
            "mov r0, r6",
            "bl loc.imp.HMAC_Update",
            "mov r1, r8",
            "ldr r2, [sp, 0x1c]",
            "mov r0, r6",
            "bl loc.imp.HMAC_Final",
            "ldr r4, [sp, 0x40]",
            "add r0, fp, r5",
            "add r3, r5, r4",
            "cmp r3, sl",
            "rsbgt r2, r5, sl",
            "add r5, r5, r4",
            "movgt r1, r8",
            "movle r1, r8",
            "movle r2, r4",
            "bl sym.imp.memcpy",
            "cmp r5, sl",
            "blt 0x2994",
            "mov r0, r6",
            "mov r4, sb",
            "bl loc.imp.HMAC_CTX_free",
            "ands r0, sb, 7",
            "beq 0x2a9c",
            "ands r4, sb, 0x80000007",
            "sub sl, sl, 1",
            "submi r4, r4, 1",
            "ldrb r3, [fp, sl]",
            "mvnmi r4, r4, lsl 29",
            "mov r2, 0xff",
            "mov r0, 0",
            "mvnmi r4, r4, lsr 29",
            "addmi r4, r4, 1",
            "rsb r4, r4, 8",
            "and r4, r3, r2, lsl r4",
            "strb r4, [fp, sl]",
            "b 0x2a9c",
            "mvn r0, 0",
            "add sp, sp, 0x4c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "loc.imp.BN_rshift": {
        "function_address": "0x0000105c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 12, 20",
            "ldr pc, [ip, 0xc80]!"
        ]
    },
    "loc.imp.BN_ucmp": {
        "function_address": "0x00001314",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 12, 20",
            "ldr pc, [ip, 0xab0]!"
        ]
    },
    "loc.imp.EC_POINT_set_compressed_coordinates_GFp": {
        "function_address": "0x00001230",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 12, 20",
            "ldr pc, [ip, 0xb48]!"
        ]
    },
    "loc.imp.EC_POINT_is_on_curve": {
        "function_address": "0x000010a4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 12, 20",
            "ldr pc, [ip, 0xc50]!"
        ]
    },
    "loc.imp.BN_value_one": {
        "function_address": "0x00001098",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 12, 20",
            "ldr pc, [ip, 0xc58]!"
        ]
    },
    "loc.imp.BN_cmp": {
        "function_address": "0x00001368",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 12, 20",
            "ldr pc, [ip, 0xa78]!"
        ]
    },
    "loc.imp.EC_POINT_mul": {
        "function_address": "0x0000111c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 12, 20",
            "ldr pc, [ip, 0xc00]!"
        ]
    },
    "loc.imp.EC_POINT_is_at_infinity": {
        "function_address": "0x00001128",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 12, 20",
            "ldr pc, [ip, 0xbf8]!"
        ]
    },
    "loc.imp.BN_clear_free": {
        "function_address": "0x0000132c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 12, 20",
            "ldr pc, [ip, 0xaa0]!"
        ]
    },
    "loc.imp._talloc_free": {
        "function_address": "0x000010c8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 12, 20",
            "ldr pc, [ip, 0xc38]!"
        ]
    },
    "loc.imp.HMAC_CTX_free": {
        "function_address": "0x0000129c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 12, 20",
            "ldr pc, [ip, 0xb00]!"
        ]
    },
    "sym.compute_peer_confirm": {
        "function_address": "0x00003ce0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x14",
            "ldr r7, [0x00004218]",
            "mov r4, r0",
            "mov fp, r1",
            "mov sb, r2",
            "bl loc.imp.HMAC_CTX_new",
            "subs r6, r0, 0",
            "add r7, pc, r7",
            "bne 0x3d30",
            "ldr r3, [0x0000421c]",
            "ldr r3, [r7, r3]",
            "ldr r3, [r3]",
            "cmp r3, 1",
            "ble 0x41c0",
            "ldr r1, [0x00004220]",
            "add r0, r0, 0x10",
            "add r1, r7, r1",
            "bl loc.imp.radlog",
            "b 0x41c0",
            "ldr r0, [r4, 0x138]",
            "bl loc.imp.BN_num_bits",
            "ldr r3, [0x00004224]",
            "adds r2, r0, 7",
            "addmi r2, r0, 0xe",
            "mov r1, 1",
            "mov r0, r4",
            "asr r2, r2, 3",
            "add r3, r7, r3",
            "bl loc.imp._talloc_zero_array",
            "subs r5, r0, 0",
            "beq 0x3d7c",
            "bl loc.imp.BN_new",
            "subs sl, r0, 0",
            "beq 0x3d80",
            "bl loc.imp.BN_new",
            "subs r8, r0, 0",
            "bne 0x3da8",
            "b 0x3d80",
            "mov sl, r5",
            "ldr r3, [0x0000421c]",
            "ldr r3, [r7, r3]",
            "ldr r3, [r3]",
            "cmp r3, 1",
            "ble 0x41d4",
            "ldr r1, [0x00004228]",
            "mov r0, 0x10",
            "add r1, r7, r1",
            "bl loc.imp.radlog",
            "b 0x41d4",
            "mov r0, r6",
            "bl fcn.00002888",
            "ldr r0, [r4, 0x138]",
            "bl loc.imp.BN_num_bits",
            "mov r3, r0",
            "ldr r0, [r4, 0x13c]",
            "str r3, [sp, 0xc]",
            "bl loc.imp.BN_num_bits",
            "ldr r3, [sp, 0xc]",
            "adds r1, r0, 7",
            "addmi r0, r0, 0xe",
            "movpl r0, r1",
            "adds r1, r3, 7",
            "addmi r1, r3, 0xe",
            "asr r1, r1, 3",
            "sub r1, r1, r0, asr 3",
            "ldr r0, [r4, 0x13c]",
            "add r1, r5, r1",
            "bl loc.imp.BN_bn2bin",
            "ldr r0, [r4, 0x138]",
            "bl loc.imp.BN_num_bits",
            "adds r2, r0, 7",
            "mov r1, r5",
            "addmi r2, r0, 0xe",
            "mov r0, r6",
            "asr r2, r2, 3",
            "bl fcn.000028d4",
            "str sb, [sp]",
            "mov r2, sl",
            "ldr r0, [r4, 0x12c]",
            "mov r3, r8",
            "ldr r1, [r4, 0x150]",
            "bl loc.imp.EC_POINT_get_affine_coordinates_GFp",
            "cmp r0, 0",
            "bne 0x3e54",
            "ldr r3, [0x0000421c]",
            "ldr r3, [r7, r3]",
            "ldr r3, [r3]",
            "cmp r3, 1",
            "ble 0x41e0",
            "add r0, r0, 0x10",
            "ldr r1, [0x0000422c]",
            "b 0x401c",
            "ldr r0, [r4, 0x138]",
            "bl loc.imp.BN_num_bits",
            "adds r2, r0, 7",
            "mov r1, 0",
            "addmi r2, r0, 0xe",
            "mov r0, r5",
            "asr r2, r2, 3",
            "bl sym.imp.memset",
            "ldr r0, [r4, 0x138]",
            "bl loc.imp.BN_num_bits",
            "mov r3, r0",
            "mov r0, sl",
            "str r3, [sp, 0xc]",
            "bl loc.imp.BN_num_bits",
            "ldr r3, [sp, 0xc]",
            "adds r1, r0, 7",
            "addmi r0, r0, 0xe",
            "movpl r0, r1",
            "adds r1, r3, 7",
            "addmi r1, r3, 0xe",
            "asr r1, r1, 3",
            "sub r1, r1, r0, asr 3",
            "mov r0, sl",
            "add r1, r5, r1",
            "bl loc.imp.BN_bn2bin",
            "ldr r0, [r4, 0x138]",
            "bl loc.imp.BN_num_bits",
            "adds r2, r0, 7",
            "mov r1, r5",
            "addmi r2, r0, 0xe",
            "mov r0, r6",
            "asr r2, r2, 3",
            "bl fcn.000028d4",
            "ldr r0, [r4, 0x138]",
            "bl loc.imp.BN_num_bits",
            "adds r2, r0, 7",
            "mov r1, 0",
            "addmi r2, r0, 0xe",
            "mov r0, r5",
            "asr r2, r2, 3",
            "bl sym.imp.memset",
            "ldr r0, [r4, 0x138]",
            "bl loc.imp.BN_num_bits",
            "mov r3, r0",
            "mov r0, r8",
            "str r3, [sp, 0xc]",
            "bl loc.imp.BN_num_bits",
            "ldr r3, [sp, 0xc]",
            "adds r1, r0, 7",
            "addmi r0, r0, 0xe",
            "movpl r0, r1",
            "adds r1, r3, 7",
            "addmi r1, r3, 0xe",
            "asr r1, r1, 3",
            "sub r1, r1, r0, asr 3",
            "mov r0, r8",
            "add r1, r5, r1",
            "bl loc.imp.BN_bn2bin",
            "ldr r0, [r4, 0x138]",
            "bl loc.imp.BN_num_bits",
            "adds r2, r0, 7",
            "mov r1, r5",
            "addmi r2, r0, 0xe",
            "mov r0, r6",
            "asr r2, r2, 3",
            "bl fcn.000028d4",
            "ldr r0, [r4, 0x138]",
            "bl loc.imp.BN_num_bits",
            "adds r2, r0, 7",
            "mov r1, 0",
            "addmi r2, r0, 0xe",
            "mov r0, r5",
            "asr r2, r2, 3",
            "bl sym.imp.memset",
            "ldr r0, [r4, 0x134]",
            "bl loc.imp.BN_num_bits",
            "mov r3, r0",
            "ldr r0, [r4, 0x144]",
            "str r3, [sp, 0xc]",
            "bl loc.imp.BN_num_bits",
            "ldr r3, [sp, 0xc]",
            "adds r1, r0, 7",
            "addmi r0, r0, 0xe",
            "movpl r0, r1",
            "adds r1, r3, 7",
            "addmi r1, r3, 0xe",
            "asr r1, r1, 3",
            "sub r1, r1, r0, asr 3",
            "ldr r0, [r4, 0x144]",
            "add r1, r5, r1",
            "bl loc.imp.BN_bn2bin",
            "ldr r0, [r4, 0x134]",
            "bl loc.imp.BN_num_bits",
            "adds r2, r0, 7",
            "mov r1, r5",
            "addmi r2, r0, 0xe",
            "mov r0, r6",
            "asr r2, r2, 3",
            "bl fcn.000028d4",
            "str sb, [sp]",
            "mov r2, sl",
            "ldr r0, [r4, 0x12c]",
            "mov r3, r8",
            "ldr r1, [r4, 0x14c]",
            "bl loc.imp.EC_POINT_get_affine_coordinates_GFp",
            "cmp r0, 0",
            "bne 0x4028",
            "ldr r3, [0x0000421c]",
            "ldr r3, [r7, r3]",
            "ldr r3, [r3]",
            "cmp r3, 1",
            "ble 0x41e0",
            "ldr r1, [0x00004230]",
            "add r0, r0, 0x10",
            "add r1, r7, r1",
            "bl loc.imp.radlog",
            "b 0x41e0",
            "ldr r0, [r4, 0x138]",
            "bl loc.imp.BN_num_bits",
            "adds r2, r0, 7",
            "mov r1, 0",
            "addmi r2, r0, 0xe",
            "mov r0, r5",
            "asr r2, r2, 3",
            "bl sym.imp.memset",
            "ldr r0, [r4, 0x138]",
            "bl loc.imp.BN_num_bits",
            "mov sb, r0",
            "mov r0, sl",
            "bl loc.imp.BN_num_bits",
            "adds r1, r0, 7",
            "addmi r0, r0, 0xe",
            "movpl r0, r1",
            "adds r1, sb, 7",
            "addmi r1, sb, 0xe",
            "asr r1, r1, 3",
            "sub r1, r1, r0, asr 3",
            "mov r0, sl",
            "add r1, r5, r1",
            "bl loc.imp.BN_bn2bin",
            "ldr r0, [r4, 0x138]",
            "bl loc.imp.BN_num_bits",
            "adds r2, r0, 7",
            "mov r1, r5",
            "addmi r2, r0, 0xe",
            "mov r0, r6",
            "asr r2, r2, 3",
            "bl fcn.000028d4",
            "ldr r0, [r4, 0x138]",
            "bl loc.imp.BN_num_bits",
            "adds r2, r0, 7",
            "mov r1, 0",
            "addmi r2, r0, 0xe",
            "mov r0, r5",
            "asr r2, r2, 3",
            "bl sym.imp.memset",
            "ldr r0, [r4, 0x138]",
            "bl loc.imp.BN_num_bits",
            "mov sb, r0",
            "mov r0, r8",
            "bl loc.imp.BN_num_bits",
            "adds r1, r0, 7",
            "addmi r0, r0, 0xe",
            "movpl r0, r1",
            "adds r1, sb, 7",
            "addmi r1, sb, 0xe",
            "asr r1, r1, 3",
            "sub r1, r1, r0, asr 3",
            "mov r0, r8",
            "add r1, r5, r1",
            "bl loc.imp.BN_bn2bin",
            "ldr r0, [r4, 0x138]",
            "bl loc.imp.BN_num_bits",
            "adds r2, r0, 7",
            "mov r1, r5",
            "addmi r2, r0, 0xe",
            "mov r0, r6",
            "asr r2, r2, 3",
            "bl fcn.000028d4",
            "ldr r0, [r4, 0x138]",
            "bl loc.imp.BN_num_bits",
            "adds r2, r0, 7",
            "mov r1, 0",
            "addmi r2, r0, 0xe",
            "mov r0, r5",
            "asr r2, r2, 3",
            "bl sym.imp.memset",
            "ldr r0, [r4, 0x134]",
            "bl loc.imp.BN_num_bits",
            "mov sb, r0",
            "ldr r0, [r4, 0x148]",
            "bl loc.imp.BN_num_bits",
            "adds r1, r0, 7",
            "addmi r0, r0, 0xe",
            "movpl r0, r1",
            "adds r1, sb, 7",
            "addmi r1, sb, 0xe",
            "asr r1, r1, 3",
            "sub r1, r1, r0, asr 3",
            "ldr r0, [r4, 0x148]",
            "add r1, r5, r1",
            "bl loc.imp.BN_bn2bin",
            "ldr r0, [r4, 0x134]",
            "bl loc.imp.BN_num_bits",
            "adds r2, r0, 7",
            "mov r1, r5",
            "addmi r2, r0, 0xe",
            "mov r0, r6",
            "asr r2, r2, 3",
            "bl fcn.000028d4",
            "add r1, r4, 4",
            "mov r0, r6",
            "mov r2, 4",
            "mov r4, 0",
            "bl fcn.000028d4",
            "mov r0, r6",
            "mov r1, fp",
            "bl fcn.000028d8",
            "b 0x41e4",
            "mvn r4, 0",
            "mov r5, r6",
            "mov r8, r6",
            "mov sl, r6",
            "b 0x41e4",
            "mvn r4, 0",
            "mov r8, 0",
            "b 0x41e4",
            "mvn r4, 0",
            "ldr r1, [0x00004234]",
            "mov r0, r5",
            "add r1, r7, r1",
            "bl loc.imp._talloc_free",
            "mov r0, sl",
            "bl loc.imp.BN_free",
            "mov r0, r8",
            "bl loc.imp.BN_free",
            "mov r0, r6",
            "bl loc.imp.HMAC_CTX_free",
            "mov r0, r4",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "loc.imp.BN_bn2bin": {
        "function_address": "0x000010bc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 12, 20",
            "ldr pc, [ip, 0xc40]!"
        ]
    },
    "loc.imp.EC_POINT_get_affine_coordinates_GFp": {
        "function_address": "0x000012b4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 12, 20",
            "ldr pc, [ip, 0xaf0]!"
        ]
    },
    "sym.imp.memset": {
        "function_address": "0x00001260",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 12, 20",
            "ldr pc, [ip, 0xb28]!"
        ]
    },
    "loc.imp.BN_free": {
        "function_address": "0x0000123c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 12, 20",
            "ldr pc, [ip, 0xb40]!"
        ]
    },
    "sym.compute_keys": {
        "function_address": "0x00004238",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0xdc",
            "ldr r7, [0x00004568]",
            "mov r4, r0",
            "mov fp, r1",
            "str r2, [sp, 8]",
            "str r3, [sp, 0xc]",
            "add r7, pc, r7",
            "bl loc.imp.HMAC_CTX_new",
            "subs r5, r0, 0",
            "bne 0x428c",
            "ldr r3, [0x0000456c]",
            "ldr r3, [r7, r3]",
            "ldr r3, [r3]",
            "cmp r3, 1",
            "ble 0x4534",
            "ldr r1, [0x00004570]",
            "add r0, r0, 0x10",
            "add r1, r7, r1",
            "bl loc.imp.radlog",
            "b 0x4534",
            "ldr r0, [r4, 0x138]",
            "bl loc.imp.BN_num_bits",
            "ldr r3, [0x00004574]",
            "adds r2, r0, 7",
            "addmi r2, r0, 0xe",
            "mov r1, 1",
            "mov r0, r4",
            "asr r2, r2, 3",
            "add r3, r7, r3",
            "bl loc.imp._talloc_array",
            "subs r6, r0, 0",
            "bne 0x42dc",
            "ldr r3, [0x0000456c]",
            "ldr r3, [r7, r3]",
            "ldr r3, [r3]",
            "cmp r3, 1",
            "ble 0x4540",
            "add r0, r0, 0x10",
            "ldr r1, [0x00004578]",
            "b 0x4504",
            "mov r3, 0x34",
            "add r8, sp, 0xd8",
            "strb r3, [r8, -0x44]!",
            "mov r0, r5",
            "bl fcn.00002888",
            "add r1, r4, 4",
            "mov r2, 4",
            "mov r0, r5",
            "bl fcn.000028d4",
            "ldr r0, [r4, 0x134]",
            "bl loc.imp.BN_num_bits",
            "mov sb, r0",
            "ldr r0, [r4, 0x144]",
            "bl loc.imp.BN_num_bits",
            "mov sl, r0",
            "ldr r0, [r4, 0x138]",
            "bl loc.imp.BN_num_bits",
            "adds r2, r0, 7",
            "mov r1, 0",
            "addmi r2, r0, 0xe",
            "mov r0, r6",
            "asr r2, r2, 3",
            "bl sym.imp.memset",
            "adds r1, sl, 7",
            "ldr r0, [r4, 0x144]",
            "addmi sl, sl, 0xe",
            "movpl sl, r1",
            "adds r1, sb, 7",
            "addmi r1, sb, 0xe",
            "asr r1, r1, 3",
            "sub r1, r1, sl, asr 3",
            "add r1, r6, r1",
            "bl loc.imp.BN_bn2bin",
            "ldr r0, [r4, 0x134]",
            "bl loc.imp.BN_num_bits",
            "adds r2, r0, 7",
            "mov r1, r6",
            "addmi r2, r0, 0xe",
            "mov r0, r5",
            "asr r2, r2, 3",
            "bl fcn.000028d4",
            "ldr r0, [r4, 0x134]",
            "bl loc.imp.BN_num_bits",
            "mov sb, r0",
            "ldr r0, [r4, 0x148]",
            "bl loc.imp.BN_num_bits",
            "mov sl, r0",
            "ldr r0, [r4, 0x138]",
            "bl loc.imp.BN_num_bits",
            "adds r2, r0, 7",
            "mov r1, 0",
            "addmi r2, r0, 0xe",
            "mov r0, r6",
            "asr r2, r2, 3",
            "bl sym.imp.memset",
            "adds r1, sl, 7",
            "ldr r0, [r4, 0x148]",
            "addmi sl, sl, 0xe",
            "movpl sl, r1",
            "adds r1, sb, 7",
            "addmi r1, sb, 0xe",
            "asr r1, r1, 3",
            "sub r1, r1, sl, asr 3",
            "add r1, r6, r1",
            "bl loc.imp.BN_bn2bin",
            "ldr r0, [r4, 0x134]",
            "bl loc.imp.BN_num_bits",
            "adds r2, r0, 7",
            "mov r1, r6",
            "addmi r2, r0, 0xe",
            "mov r0, r5",
            "asr r2, r2, 3",
            "bl fcn.000028d4",
            "add r1, r8, 1",
            "mov r0, r5",
            "bl fcn.000028d8",
            "mov r0, r5",
            "bl fcn.00002888",
            "ldr r0, [r4, 0x138]",
            "bl loc.imp.BN_num_bits",
            "adds r2, r0, 7",
            "mov r1, 0",
            "addmi r2, r0, 0xe",
            "mov r0, r6",
            "asr r2, r2, 3",
            "bl sym.imp.memset",
            "ldr r0, [r4, 0x138]",
            "bl loc.imp.BN_num_bits",
            "mov sl, r0",
            "ldr r0, [r4, 0x13c]",
            "bl loc.imp.BN_num_bits",
            "adds r1, r0, 7",
            "addmi r0, r0, 0xe",
            "movpl r0, r1",
            "adds r1, sl, 7",
            "addmi r1, sl, 0xe",
            "add sl, sp, 0xb8",
            "asr r1, r1, 3",
            "sub r1, r1, r0, asr 3",
            "ldr r0, [r4, 0x13c]",
            "add r1, r6, r1",
            "bl loc.imp.BN_bn2bin",
            "ldr r0, [r4, 0x138]",
            "bl loc.imp.BN_num_bits",
            "adds r2, r0, 7",
            "mov r1, r6",
            "addmi r2, r0, 0xe",
            "mov r0, r5",
            "asr r2, r2, 3",
            "bl fcn.000028d4",
            "mov r0, r5",
            "mov r1, fp",
            "mov r2, 0x20",
            "bl fcn.000028d4",
            "add r1, r4, 0x154",
            "mov r2, 0x20",
            "mov r0, r5",
            "add r4, sp, 0x14",
            "bl fcn.000028d4",
            "mov r0, r5",
            "mov r1, sl",
            "bl fcn.000028d8",
            "mov r3, 0x400",
            "mov r1, r8",
            "str r3, [sp]",
            "mov r0, sl",
            "mov r2, 0x21",
            "mov r3, r4",
            "bl fcn.000028f0",
            "subs r8, r0, 0",
            "beq 0x4510",
            "ldr r3, [0x0000456c]",
            "ldr r3, [r7, r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "ble 0x4540",
            "ldr r1, [0x0000457c]",
            "mov r0, 0x10",
            "add r1, r7, r1",
            "bl loc.imp.radlog",
            "b 0x4540",
            "mov r1, r4",
            "ldr r0, [sp, 8]",
            "mov r2, 0x40",
            "bl sym.imp.memcpy",
            "ldr r0, [sp, 0xc]",
            "add r1, r4, 0x40",
            "mov r2, 0x40",
            "bl sym.imp.memcpy",
            "b 0x4544",
            "mvn r8, 0",
            "mov r6, r5",
            "b 0x4544",
            "mvn r8, 0",
            "ldr r1, [0x00004580]",
            "mov r0, r6",
            "add r1, r7, r1",
            "bl loc.imp._talloc_free",
            "mov r0, r5",
            "bl loc.imp.HMAC_CTX_free",
            "mov r0, r8",
            "add sp, sp, 0xdc",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "loc.imp._talloc_array": {
        "function_address": "0x000012cc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 12, 20",
            "ldr pc, [ip, 0xae0]!"
        ]
    },
    "sym.imp.memcpy": {
        "function_address": "0x000010e0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 12, 20",
            "ldr pc, [ip, 0xc28]!"
        ]
    },
    "sym.compute_server_confirm": {
        "function_address": "0x00003788",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x14",
            "ldr r7, [0x00003cc0]",
            "mov r4, r0",
            "mov fp, r1",
            "mov sb, r2",
            "bl loc.imp.HMAC_CTX_new",
            "subs r6, r0, 0",
            "add r7, pc, r7",
            "bne 0x37d8",
            "ldr r3, [0x00003cc4]",
            "ldr r3, [r7, r3]",
            "ldr r3, [r3]",
            "cmp r3, 1",
            "ble 0x3c68",
            "ldr r1, [0x00003cc8]",
            "add r0, r0, 0x10",
            "add r1, r7, r1",
            "bl loc.imp.radlog",
            "b 0x3c68",
            "ldr r0, [r4, 0x138]",
            "bl loc.imp.BN_num_bits",
            "ldr r3, [0x00003ccc]",
            "adds r2, r0, 7",
            "addmi r2, r0, 0xe",
            "mov r1, 1",
            "mov r0, r4",
            "asr r2, r2, 3",
            "add r3, r7, r3",
            "bl loc.imp._talloc_zero_array",
            "subs r5, r0, 0",
            "beq 0x3824",
            "bl loc.imp.BN_new",
            "subs sl, r0, 0",
            "beq 0x3828",
            "bl loc.imp.BN_new",
            "subs r8, r0, 0",
            "bne 0x3850",
            "b 0x3828",
            "mov sl, r5",
            "ldr r3, [0x00003cc4]",
            "ldr r3, [r7, r3]",
            "ldr r3, [r3]",
            "cmp r3, 1",
            "ble 0x3c7c",
            "ldr r1, [0x00003cd0]",
            "mov r0, 0x10",
            "add r1, r7, r1",
            "bl loc.imp.radlog",
            "b 0x3c7c",
            "mov r0, r6",
            "bl fcn.00002888",
            "ldr r0, [r4, 0x138]",
            "bl loc.imp.BN_num_bits",
            "mov r3, r0",
            "ldr r0, [r4, 0x13c]",
            "str r3, [sp, 0xc]",
            "bl loc.imp.BN_num_bits",
            "ldr r3, [sp, 0xc]",
            "adds r1, r0, 7",
            "addmi r0, r0, 0xe",
            "movpl r0, r1",
            "adds r1, r3, 7",
            "addmi r1, r3, 0xe",
            "asr r1, r1, 3",
            "sub r1, r1, r0, asr 3",
            "ldr r0, [r4, 0x13c]",
            "add r1, r5, r1",
            "bl loc.imp.BN_bn2bin",
            "ldr r0, [r4, 0x138]",
            "bl loc.imp.BN_num_bits",
            "adds r2, r0, 7",
            "mov r1, r5",
            "addmi r2, r0, 0xe",
            "mov r0, r6",
            "asr r2, r2, 3",
            "bl fcn.000028d4",
            "str sb, [sp]",
            "mov r2, sl",
            "ldr r0, [r4, 0x12c]",
            "mov r3, r8",
            "ldr r1, [r4, 0x14c]",
            "bl loc.imp.EC_POINT_get_affine_coordinates_GFp",
            "cmp r0, 0",
            "bne 0x38fc",
            "ldr r3, [0x00003cc4]",
            "ldr r3, [r7, r3]",
            "ldr r3, [r3]",
            "cmp r3, 1",
            "ble 0x3c88",
            "add r0, r0, 0x10",
            "ldr r1, [0x00003cd4]",
            "b 0x3ac4",
            "ldr r0, [r4, 0x138]",
            "bl loc.imp.BN_num_bits",
            "adds r2, r0, 7",
            "mov r1, 0",
            "addmi r2, r0, 0xe",
            "mov r0, r5",
            "asr r2, r2, 3",
            "bl sym.imp.memset",
            "ldr r0, [r4, 0x138]",
            "bl loc.imp.BN_num_bits",
            "mov r3, r0",
            "mov r0, sl",
            "str r3, [sp, 0xc]",
            "bl loc.imp.BN_num_bits",
            "ldr r3, [sp, 0xc]",
            "adds r1, r0, 7",
            "addmi r0, r0, 0xe",
            "movpl r0, r1",
            "adds r1, r3, 7",
            "addmi r1, r3, 0xe",
            "asr r1, r1, 3",
            "sub r1, r1, r0, asr 3",
            "mov r0, sl",
            "add r1, r5, r1",
            "bl loc.imp.BN_bn2bin",
            "ldr r0, [r4, 0x138]",
            "bl loc.imp.BN_num_bits",
            "adds r2, r0, 7",
            "mov r1, r5",
            "addmi r2, r0, 0xe",
            "mov r0, r6",
            "asr r2, r2, 3",
            "bl fcn.000028d4",
            "ldr r0, [r4, 0x138]",
            "bl loc.imp.BN_num_bits",
            "adds r2, r0, 7",
            "mov r1, 0",
            "addmi r2, r0, 0xe",
            "mov r0, r5",
            "asr r2, r2, 3",
            "bl sym.imp.memset",
            "ldr r0, [r4, 0x138]",
            "bl loc.imp.BN_num_bits",
            "mov r3, r0",
            "mov r0, r8",
            "str r3, [sp, 0xc]",
            "bl loc.imp.BN_num_bits",
            "ldr r3, [sp, 0xc]",
            "adds r1, r0, 7",
            "addmi r0, r0, 0xe",
            "movpl r0, r1",
            "adds r1, r3, 7",
            "addmi r1, r3, 0xe",
            "asr r1, r1, 3",
            "sub r1, r1, r0, asr 3",
            "mov r0, r8",
            "add r1, r5, r1",
            "bl loc.imp.BN_bn2bin",
            "ldr r0, [r4, 0x138]",
            "bl loc.imp.BN_num_bits",
            "adds r2, r0, 7",
            "mov r1, r5",
            "addmi r2, r0, 0xe",
            "mov r0, r6",
            "asr r2, r2, 3",
            "bl fcn.000028d4",
            "ldr r0, [r4, 0x138]",
            "bl loc.imp.BN_num_bits",
            "adds r2, r0, 7",
            "mov r1, 0",
            "addmi r2, r0, 0xe",
            "mov r0, r5",
            "asr r2, r2, 3",
            "bl sym.imp.memset",
            "ldr r0, [r4, 0x134]",
            "bl loc.imp.BN_num_bits",
            "mov r3, r0",
            "ldr r0, [r4, 0x148]",
            "str r3, [sp, 0xc]",
            "bl loc.imp.BN_num_bits",
            "ldr r3, [sp, 0xc]",
            "adds r1, r0, 7",
            "addmi r0, r0, 0xe",
            "movpl r0, r1",
            "adds r1, r3, 7",
            "addmi r1, r3, 0xe",
            "asr r1, r1, 3",
            "sub r1, r1, r0, asr 3",
            "ldr r0, [r4, 0x148]",
            "add r1, r5, r1",
            "bl loc.imp.BN_bn2bin",
            "ldr r0, [r4, 0x134]",
            "bl loc.imp.BN_num_bits",
            "adds r2, r0, 7",
            "mov r1, r5",
            "addmi r2, r0, 0xe",
            "mov r0, r6",
            "asr r2, r2, 3",
            "bl fcn.000028d4",
            "str sb, [sp]",
            "mov r2, sl",
            "ldr r0, [r4, 0x12c]",
            "mov r3, r8",
            "ldr r1, [r4, 0x150]",
            "bl loc.imp.EC_POINT_get_affine_coordinates_GFp",
            "cmp r0, 0",
            "bne 0x3ad0",
            "ldr r3, [0x00003cc4]",
            "ldr r3, [r7, r3]",
            "ldr r3, [r3]",
            "cmp r3, 1",
            "ble 0x3c88",
            "ldr r1, [0x00003cd8]",
            "add r0, r0, 0x10",
            "add r1, r7, r1",
            "bl loc.imp.radlog",
            "b 0x3c88",
            "ldr r0, [r4, 0x138]",
            "bl loc.imp.BN_num_bits",
            "adds r2, r0, 7",
            "mov r1, 0",
            "addmi r2, r0, 0xe",
            "mov r0, r5",
            "asr r2, r2, 3",
            "bl sym.imp.memset",
            "ldr r0, [r4, 0x138]",
            "bl loc.imp.BN_num_bits",
            "mov sb, r0",
            "mov r0, sl",
            "bl loc.imp.BN_num_bits",
            "adds r1, r0, 7",
            "addmi r0, r0, 0xe",
            "movpl r0, r1",
            "adds r1, sb, 7",
            "addmi r1, sb, 0xe",
            "asr r1, r1, 3",
            "sub r1, r1, r0, asr 3",
            "mov r0, sl",
            "add r1, r5, r1",
            "bl loc.imp.BN_bn2bin",
            "ldr r0, [r4, 0x138]",
            "bl loc.imp.BN_num_bits",
            "adds r2, r0, 7",
            "mov r1, r5",
            "addmi r2, r0, 0xe",
            "mov r0, r6",
            "asr r2, r2, 3",
            "bl fcn.000028d4",
            "ldr r0, [r4, 0x138]",
            "bl loc.imp.BN_num_bits",
            "adds r2, r0, 7",
            "mov r1, 0",
            "addmi r2, r0, 0xe",
            "mov r0, r5",
            "asr r2, r2, 3",
            "bl sym.imp.memset",
            "ldr r0, [r4, 0x138]",
            "bl loc.imp.BN_num_bits",
            "mov sb, r0",
            "mov r0, r8",
            "bl loc.imp.BN_num_bits",
            "adds r1, r0, 7",
            "addmi r0, r0, 0xe",
            "movpl r0, r1",
            "adds r1, sb, 7",
            "addmi r1, sb, 0xe",
            "asr r1, r1, 3",
            "sub r1, r1, r0, asr 3",
            "mov r0, r8",
            "add r1, r5, r1",
            "bl loc.imp.BN_bn2bin",
            "ldr r0, [r4, 0x138]",
            "bl loc.imp.BN_num_bits",
            "adds r2, r0, 7",
            "mov r1, r5",
            "addmi r2, r0, 0xe",
            "mov r0, r6",
            "asr r2, r2, 3",
            "bl fcn.000028d4",
            "ldr r0, [r4, 0x138]",
            "bl loc.imp.BN_num_bits",
            "adds r2, r0, 7",
            "mov r1, 0",
            "addmi r2, r0, 0xe",
            "mov r0, r5",
            "asr r2, r2, 3",
            "bl sym.imp.memset",
            "ldr r0, [r4, 0x134]",
            "bl loc.imp.BN_num_bits",
            "mov sb, r0",
            "ldr r0, [r4, 0x144]",
            "bl loc.imp.BN_num_bits",
            "adds r1, r0, 7",
            "addmi r0, r0, 0xe",
            "movpl r0, r1",
            "adds r1, sb, 7",
            "addmi r1, sb, 0xe",
            "asr r1, r1, 3",
            "sub r1, r1, r0, asr 3",
            "ldr r0, [r4, 0x144]",
            "add r1, r5, r1",
            "bl loc.imp.BN_bn2bin",
            "ldr r0, [r4, 0x134]",
            "bl loc.imp.BN_num_bits",
            "adds r2, r0, 7",
            "mov r1, r5",
            "addmi r2, r0, 0xe",
            "mov r0, r6",
            "asr r2, r2, 3",
            "bl fcn.000028d4",
            "add r1, r4, 4",
            "mov r0, r6",
            "mov r2, 4",
            "mov r4, 0",
            "bl fcn.000028d4",
            "mov r0, r6",
            "mov r1, fp",
            "bl fcn.000028d8",
            "b 0x3c8c",
            "mvn r4, 0",
            "mov r5, r6",
            "mov r8, r6",
            "mov sl, r6",
            "b 0x3c8c",
            "mvn r4, 0",
            "mov r8, 0",
            "b 0x3c8c",
            "mvn r4, 0",
            "ldr r1, [0x00003cdc]",
            "mov r0, r5",
            "add r1, r7, r1",
            "bl loc.imp._talloc_free",
            "mov r0, sl",
            "bl loc.imp.BN_free",
            "mov r0, r8",
            "bl loc.imp.BN_free",
            "mov r0, r6",
            "bl loc.imp.HMAC_CTX_free",
            "mov r0, r4",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.process_peer_commit": {
        "function_address": "0x000032ec",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x1c",
            "ldr r5, [0x00003758]",
            "mov r4, r0",
            "str r1, [sp, 0x10]",
            "str r2, [sp, 0x14]",
            "add r5, pc, r5",
            "str r3, [sp, 0xc]",
            "bl loc.imp.BN_new",
            "cmp r0, 0",
            "str r0, [r4, 0x144]",
            "beq 0x3388",
            "bl loc.imp.BN_new",
            "cmp r0, 0",
            "str r0, [r4, 0x13c]",
            "beq 0x3388",
            "bl loc.imp.BN_new",
            "subs sl, r0, 0",
            "beq 0x33a0",
            "bl loc.imp.BN_new",
            "subs sb, r0, 0",
            "beq 0x33b4",
            "bl loc.imp.BN_new",
            "subs fp, r0, 0",
            "beq 0x33c4",
            "ldr r0, [r4, 0x12c]",
            "bl loc.imp.EC_POINT_new",
            "subs r6, r0, 0",
            "beq 0x33d0",
            "ldr r0, [r4, 0x12c]",
            "bl loc.imp.EC_POINT_new",
            "subs r8, r0, 0",
            "beq 0x33d4",
            "ldr r0, [r4, 0x12c]",
            "bl loc.imp.EC_POINT_new",
            "cmp r0, 0",
            "str r0, [r4, 0x150]",
            "bne 0x33f4",
            "b 0x33d4",
            "mov r6, r0",
            "mov r8, r0",
            "mov sl, r0",
            "mov fp, r0",
            "mov sb, r0",
            "b 0x33d4",
            "mov r6, sl",
            "mov r8, sl",
            "mov fp, sl",
            "mov sb, sl",
            "b 0x33d4",
            "mov r6, sb",
            "mov r8, sb",
            "mov fp, sb",
            "b 0x33d4",
            "mov r6, fp",
            "mov r8, fp",
            "b 0x33d4",
            "mov r8, r6",
            "ldr r3, [0x0000375c]",
            "ldr r3, [r5, r3]",
            "ldr r3, [r3]",
            "cmp r3, 1",
            "ble 0x3720",
            "mov r0, 0x10",
            "ldr r1, [0x00003760]",
            "b 0x3718",
            "ldr r0, [r4, 0x12c]",
            "mov r1, sl",
            "mov r2, 0",
            "bl loc.imp.EC_GROUP_get_cofactor",
            "cmp r0, 0",
            "bne 0x342c",
            "ldr r3, [0x0000375c]",
            "ldr r3, [r5, r3]",
            "ldr r3, [r3]",
            "cmp r3, 1",
            "ble 0x3720",
            "add r0, r0, 0x10",
            "ldr r1, [0x00003764]",
            "b 0x3718",
            "ldr r0, [r4, 0x138]",
            "bl loc.imp.BN_num_bits",
            "adds r7, r0, 7",
            "addmi r7, r0, 0xe",
            "ldr r0, [r4, 0x134]",
            "bl loc.imp.BN_num_bits",
            "adds r3, r0, 7",
            "asr r7, r7, 3",
            "addmi r0, r0, 0xe",
            "movpl r0, r3",
            "ldr r2, [sp, 0x14]",
            "asr r0, r0, 3",
            "add r0, r0, r7, lsl 1",
            "cmp r2, r0",
            "bhs 0x3488",
            "ldr r3, [0x0000375c]",
            "ldr r3, [r5, r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "ble 0x3720",
            "mov r0, 0x10",
            "ldr r1, [0x00003768]",
            "b 0x3718",
            "mov r1, r7",
            "mov r2, sb",
            "ldr r0, [sp, 0x10]",
            "bl loc.imp.BN_bin2bn",
            "ldr r2, [sp, 0x10]",
            "mov r1, r7",
            "add r3, r2, r7",
            "mov r2, fp",
            "mov r0, r3",
            "str r3, [sp, 8]",
            "bl loc.imp.BN_bin2bn",
            "ldr r0, [r4, 0x134]",
            "bl loc.imp.BN_num_bits",
            "ldr r3, [sp, 8]",
            "adds r1, r0, 7",
            "addmi r1, r0, 0xe",
            "ldr r2, [r4, 0x144]",
            "asr r1, r1, 3",
            "add r0, r3, r7",
            "bl loc.imp.BN_bin2bn",
            "ldr r3, [sp, 0xc]",
            "mov r2, sb",
            "ldr r0, [r4, 0x12c]",
            "ldr r1, [r4, 0x150]",
            "str r3, [sp]",
            "mov r3, fp",
            "bl loc.imp.EC_POINT_set_affine_coordinates_GFp",
            "cmp r0, 0",
            "bne 0x351c",
            "ldr r3, [0x0000375c]",
            "ldr r3, [r5, r3]",
            "ldr r3, [r3]",
            "cmp r3, 1",
            "ble 0x3720",
            "add r0, r0, 0x10",
            "ldr r1, [0x0000376c]",
            "b 0x3718",
            "bl loc.imp.BN_value_one",
            "mov r1, r0",
            "mov r0, sl",
            "bl loc.imp.BN_cmp",
            "cmp r0, 0",
            "beq 0x35ac",
            "mov r2, 0",
            "ldr r0, [r4, 0x12c]",
            "mov r1, r6",
            "ldr r3, [r4, 0x150]",
            "str sl, [sp]",
            "str r2, [sp, 4]",
            "bl loc.imp.EC_POINT_mul",
            "cmp r0, 0",
            "bne 0x3578",
            "ldr r3, [0x0000375c]",
            "ldr r3, [r5, r3]",
            "ldr r3, [r3]",
            "cmp r3, 1",
            "ble 0x3720",
            "add r0, r0, 0x10",
            "ldr r1, [0x00003770]",
            "b 0x3718",
            "ldr r0, [r4, 0x12c]",
            "mov r1, r6",
            "bl loc.imp.EC_POINT_is_at_infinity",
            "cmp r0, 0",
            "beq 0x35ac",
            "ldr r3, [0x0000375c]",
            "ldr r3, [r5, r3]",
            "ldr r3, [r3]",
            "cmp r3, 1",
            "ble 0x3720",
            "mov r0, 0x10",
            "ldr r1, [0x00003774]",
            "b 0x3718",
            "ldr r3, [r4, 0x144]",
            "mov r1, r8",
            "ldr r2, [sp, 0xc]",
            "ldr r0, [r4, 0x12c]",
            "str r3, [sp]",
            "str r2, [sp, 4]",
            "mov r2, 0",
            "ldr r3, [r4, 0x130]",
            "bl loc.imp.EC_POINT_mul",
            "cmp r0, 0",
            "beq 0x3628",
            "ldr r3, [sp, 0xc]",
            "mov r1, r8",
            "ldr r0, [r4, 0x12c]",
            "mov r2, r8",
            "str r3, [sp]",
            "ldr r3, [r4, 0x150]",
            "bl loc.imp.EC_POINT_add",
            "cmp r0, 0",
            "beq 0x3628",
            "ldr r3, [r4, 0x140]",
            "mov r1, r8",
            "ldr r2, [sp, 0xc]",
            "ldr r0, [r4, 0x12c]",
            "str r3, [sp]",
            "mov r3, r8",
            "str r2, [sp, 4]",
            "mov r2, 0",
            "bl loc.imp.EC_POINT_mul",
            "cmp r0, 0",
            "bne 0x3648",
            "ldr r3, [0x0000375c]",
            "ldr r3, [r5, r3]",
            "ldr r3, [r3]",
            "cmp r3, 1",
            "ble 0x3720",
            "mov r0, 0x10",
            "ldr r1, [0x00003778]",
            "b 0x3718",
            "bl loc.imp.BN_value_one",
            "mov r1, r0",
            "mov r0, sl",
            "bl loc.imp.BN_cmp",
            "cmp r0, 0",
            "beq 0x36a4",
            "mov r2, 0",
            "ldr r0, [r4, 0x12c]",
            "mov r1, r8",
            "mov r3, r8",
            "str sl, [sp]",
            "str r2, [sp, 4]",
            "bl loc.imp.EC_POINT_mul",
            "cmp r0, 0",
            "bne 0x36a4",
            "ldr r3, [0x0000375c]",
            "ldr r3, [r5, r3]",
            "ldr r3, [r3]",
            "cmp r3, 1",
            "ble 0x3720",
            "add r0, r0, 0x10",
            "ldr r1, [0x0000377c]",
            "b 0x3718",
            "ldr r0, [r4, 0x12c]",
            "mov r1, r8",
            "bl loc.imp.EC_POINT_is_at_infinity",
            "subs r7, r0, 0",
            "beq 0x36d8",
            "ldr r3, [0x0000375c]",
            "ldr r3, [r5, r3]",
            "ldr r3, [r3]",
            "cmp r3, 1",
            "ble 0x3720",
            "mov r0, 0x10",
            "ldr r1, [0x00003780]",
            "b 0x3718",
            "ldr r3, [sp, 0xc]",
            "mov r1, r8",
            "ldr r0, [r4, 0x12c]",
            "ldr r2, [r4, 0x13c]",
            "str r3, [sp]",
            "mov r3, r7",
            "bl loc.imp.EC_POINT_get_affine_coordinates_GFp",
            "cmp r0, 0",
            "bne 0x3724",
            "ldr r3, [0x0000375c]",
            "ldr r3, [r5, r3]",
            "ldr r3, [r3]",
            "cmp r3, 1",
            "ble 0x3720",
            "ldr r1, [0x00003784]",
            "add r0, r0, 0x10",
            "add r1, r5, r1",
            "bl loc.imp.radlog",
            "mov r7, 1",
            "mov r0, r8",
            "bl loc.imp.EC_POINT_clear_free",
            "mov r0, r6",
            "bl loc.imp.EC_POINT_clear_free",
            "mov r0, sl",
            "bl loc.imp.BN_clear_free",
            "mov r0, sb",
            "bl loc.imp.BN_clear_free",
            "mov r0, fp",
            "bl loc.imp.BN_clear_free",
            "mov r0, r7",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "loc.imp.EC_POINT_set_affine_coordinates_GFp": {
        "function_address": "0x00001248",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 12, 20",
            "ldr pc, [ip, 0xb38]!"
        ]
    },
    "loc.imp.EC_POINT_add": {
        "function_address": "0x000012c0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 12, 20",
            "ldr pc, [ip, 0xae8]!"
        ]
    },
    "loc.imp.EC_POINT_clear_free": {
        "function_address": "0x00001158",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 12, 20",
            "ldr pc, [ip, 0xbd8]!"
        ]
    },
    "sym.compute_scalar_element": {
        "function_address": "0x0000311c",
        "instructions": [
            "push {r0, r1, r2, r4, r5, r6, r7, lr}",
            "mov r4, r0",
            "ldr r5, [0x000032d0]",
            "mov r7, r1",
            "bl loc.imp.BN_new",
            "cmp r0, 0",
            "add r5, pc, r5",
            "str r0, [r4, 0x140]",
            "beq 0x3170",
            "ldr r0, [r4, 0x12c]",
            "bl loc.imp.EC_POINT_new",
            "cmp r0, 0",
            "str r0, [r4, 0x14c]",
            "beq 0x3170",
            "bl loc.imp.BN_new",
            "cmp r0, 0",
            "str r0, [r4, 0x148]",
            "beq 0x3170",
            "bl loc.imp.BN_new",
            "subs r6, r0, 0",
            "bne 0x3198",
            "ldr r3, [0x000032d4]",
            "ldr r3, [r5, r3]",
            "ldr r3, [r3]",
            "cmp r3, 1",
            "ble 0x32b0",
            "ldr r1, [0x000032d8]",
            "mov r0, 0x10",
            "add r1, r5, r1",
            "bl loc.imp.radlog",
            "b 0x32b0",
            "ldr r0, [r4, 0x140]",
            "ldr r1, [r4, 0x134]",
            "bl loc.imp.BN_rand_range",
            "cmp r0, 1",
            "beq 0x31cc",
            "ldr r3, [0x000032d4]",
            "ldr r3, [r5, r3]",
            "ldr r3, [r3]",
            "cmp r3, 1",
            "ble 0x32bc",
            "mov r0, 0x10",
            "ldr r1, [0x000032dc]",
            "b 0x32a4",
            "mov r0, r6",
            "ldr r1, [r4, 0x134]",
            "bl loc.imp.BN_rand_range",
            "cmp r0, 1",
            "beq 0x3200",
            "ldr r3, [0x000032d4]",
            "ldr r3, [r5, r3]",
            "ldr r3, [r3]",
            "cmp r3, 1",
            "ble 0x32bc",
            "mov r0, 0x10",
            "ldr r1, [0x000032e0]",
            "b 0x32a4",
            "ldr r1, [r4, 0x140]",
            "mov r2, r6",
            "ldr r0, [r4, 0x148]",
            "bl loc.imp.BN_add",
            "ldr r1, [r4, 0x148]",
            "mov r0, 0",
            "str r7, [sp]",
            "ldr r3, [r4, 0x134]",
            "mov r2, r1",
            "bl loc.imp.BN_div",
            "str r6, [sp]",
            "mov r2, 0",
            "str r7, [sp, 4]",
            "ldr r0, [r4, 0x12c]",
            "ldr r1, [r4, 0x14c]",
            "ldr r3, [r4, 0x130]",
            "bl loc.imp.EC_POINT_mul",
            "cmp r0, 0",
            "bne 0x326c",
            "ldr r3, [0x000032d4]",
            "ldr r3, [r5, r3]",
            "ldr r3, [r3]",
            "cmp r3, 1",
            "ble 0x32bc",
            "add r0, r0, 0x10",
            "ldr r1, [0x000032e4]",
            "b 0x32a4",
            "ldr r0, [r4, 0x12c]",
            "mov r2, r7",
            "ldr r1, [r4, 0x14c]",
            "bl loc.imp.EC_POINT_invert",
            "cmp r0, 0",
            "movne r4, 0",
            "bne 0x32c0",
            "ldr r3, [0x000032d4]",
            "ldr r3, [r5, r3]",
            "ldr r3, [r3]",
            "cmp r3, 1",
            "ble 0x32bc",
            "ldr r1, [0x000032e8]",
            "add r0, r0, 0x10",
            "add r1, r5, r1",
            "bl loc.imp.radlog",
            "b 0x32bc",
            "mvn r4, 0",
            "mov r6, 0",
            "b 0x32c0",
            "mvn r4, 0",
            "mov r0, r6",
            "bl loc.imp.BN_clear_free",
            "mov r0, r4",
            "pop {r1, r2, r3, r4, r5, r6, r7, pc}"
        ]
    },
    "loc.imp.BN_rand_range": {
        "function_address": "0x000010b0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 12, 20",
            "ldr pc, [ip, 0xc48]!"
        ]
    },
    "loc.imp.BN_add": {
        "function_address": "0x00001134",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 12, 20",
            "ldr pc, [ip, 0xbf0]!"
        ]
    },
    "loc.imp.BN_div": {
        "function_address": "0x000011b8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 12, 20",
            "ldr pc, [ip, 0xb98]!"
        ]
    },
    "loc.imp.EC_POINT_invert": {
        "function_address": "0x000012a8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 12, 20",
            "ldr pc, [ip, 0xaf8]!"
        ]
    },
    "entry.init0": {
        "function_address": "0x000013fc",
        "instructions": [
            "push {r4, lr}",
            "ldr r4, [0x00001458]",
            "ldr r3, [0x0000145c]",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "cmp r3, 0",
            "beq 0x142c",
            "ldr r0, [0x00001460]",
            "ldr r1, [0x00001464]",
            "add r0, r4, r0",
            "add r1, r4, r1",
            "bl loc.imp.__register_frame_info",
            "ldr r3, [0x00001468]",
            "add r0, r4, r3",
            "ldr r3, [r4, r3]",
            "cmp r3, 0",
            "popeq {r4, pc}",
            "ldr r3, [0x0000146c]",
            "ldr r3, [r4, r3]",
            "cmp r3, 0",
            "popeq {r4, pc}",
            "blx r3",
            "pop {r4, pc}"
        ]
    },
    "loc.imp.__register_frame_info": {
        "function_address": "0x00001350",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 12, 20",
            "ldr pc, [ip, 0xa88]!"
        ]
    },
    "fcn.00001594": {
        "function_address": "0x00001594",
        "instructions": [
            "push {r0, r1, r2, r4, r5, r6, r7, lr}",
            "mov r4, r0",
            "ldr r0, [r0, 0x128]",
            "mov r6, r1",
            "mov r2, 0x34",
            "ldr r3, [r4, 0x124]",
            "add r0, r0, 1",
            "ldr r5, [0x00001750]",
            "rsb r0, r3, r0",
            "ldr r3, [r1]",
            "mov r1, 1",
            "add r5, pc, r5",
            "str r1, [r3]",
            "ldr r3, [r6]",
            "str r2, [r3, 0xc]",
            "ldr r3, [r6]",
            "ldr r2, [r4, 0x110]",
            "cmp r0, r2",
            "strls r0, [r3, 0x10]",
            "strhi r2, [r3, 0x10]",
            "ldr r3, [0x00001754]",
            "ldr r7, [r6]",
            "add r3, r5, r3",
            "mov r0, r7",
            "ldr r2, [r7, 0x10]",
            "bl loc.imp._talloc_zero_array",
            "str r0, [r7, 0x14]",
            "ldr r3, [r6]",
            "ldr ip, [r3, 0x14]",
            "ldrh r3, [r4]",
            "cmp r3, 2",
            "beq 0x1630",
            "cmp r3, 3",
            "beq 0x163c",
            "cmp r3, 1",
            "ldrbeq r3, [ip]",
            "orreq r3, r3, 1",
            "bne 0x1668",
            "b 0x1644",
            "ldrb r3, [ip]",
            "orr r3, r3, 2",
            "b 0x1644",
            "ldrb r3, [ip]",
            "orr r3, r3, 3",
            "strb r3, [ip]",
            "ldr r3, [r4, 0x124]",
            "ldr r2, [r4, 0x128]",
            "ldr r1, [r4, 0x110]",
            "rsb r2, r3, r2",
            "add r0, r2, 1",
            "cmp r0, r1",
            "bhi 0x1680",
            "b 0x1718",
            "ldr r1, [0x00001758]",
            "mov r0, 4",
            "add r1, r5, r1",
            "bl loc.imp.radlog",
            "mov r0, 0",
            "b 0x174c",
            "ldrb r2, [ip]",
            "mov r0, ip",
            "orr r2, r2, 0x40",
            "strb r2, [r0], 1",
            "ldr r3, [r4, 0x124]",
            "cmp r3, 0",
            "bne 0x16f0",
            "mvn r3, r2, lsl 25",
            "mov r5, ip",
            "add r1, sp, 8",
            "mvn r3, r3, lsr 25",
            "strb r3, [r5], 3",
            "ldr r3, [r4, 0x128]",
            "ubfx r2, r3, 8, 8",
            "orr r3, r2, r3, lsl 8",
            "mov r2, 2",
            "strh r3, [r1, -2]!",
            "bl sym.imp.memcpy",
            "ldr r2, [r4, 0x110]",
            "mov r0, r5",
            "ldr r1, [r4, 0x120]",
            "sub r2, r2, 3",
            "bl sym.imp.memcpy",
            "ldr r2, [r4, 0x124]",
            "ldr r3, [r4, 0x110]",
            "add r3, r2, r3",
            "sub r3, r3, 3",
            "b 0x1744",
            "ldr r2, [r4, 0x110]",
            "ldr r1, [r4, 0x120]",
            "sub r2, r2, 1",
            "add r1, r1, r3",
            "bl sym.imp.memcpy",
            "ldr r2, [r4, 0x124]",
            "ldr r3, [r4, 0x110]",
            "add r3, r2, r3",
            "sub r3, r3, 1",
            "b 0x1744",
            "ldr r1, [r4, 0x120]",
            "add r0, ip, 1",
            "add r1, r1, r3",
            "bl sym.imp.memcpy",
            "ldr r1, [0x0000175c]",
            "ldr r0, [r4, 0x120]",
            "add r1, r5, r1",
            "bl loc.imp._talloc_free",
            "mov r3, 0",
            "str r3, [r4, 0x120]",
            "str r3, [r4, 0x128]",
            "mov r0, 1",
            "str r3, [r4, 0x124]",
            "pop {r1, r2, r3, r4, r5, r6, r7, pc}"
        ]
    },
    "loc.imp.EVP_sha256": {
        "function_address": "0x000012d8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 12, 20",
            "ldr pc, [ip, 0xad8]!"
        ]
    },
    "loc.imp.HMAC_Init_ex": {
        "function_address": "0x000010f8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 12, 20",
            "ldr pc, [ip, 0xc18]!"
        ]
    },
    "loc.imp.HMAC_Final": {
        "function_address": "0x000010ec",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 12, 20",
            "ldr pc, [ip, 0xc20]!"
        ]
    },
    "loc.imp.HMAC_Update": {
        "function_address": "0x00001374",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 12, 20",
            "ldr pc, [ip, 0xa70]!"
        ]
    }
}