{
    "entry0": {
        "function_address": "0x00000a08",
        "instructions": [
            "push {r4, lr}",
            "ldr r4, [0x00000a6c]",
            "ldr r3, [0x00000a70]",
            "add r4, pc, r4",
            "ldrb r3, [r4, r3]",
            "cmp r3, 0",
            "popne {r4, pc}",
            "ldr r3, [0x00000a74]",
            "ldr r3, [r4, r3]",
            "cmp r3, 0",
            "beq 0xa40",
            "ldr r3, [0x00000a78]",
            "ldr r0, [r4, r3]",
            "bl sym.imp.__cxa_finalize",
            "ldr r3, [0x00000a7c]",
            "ldr r3, [r4, r3]",
            "cmp r3, 0",
            "beq 0xa5c",
            "ldr r0, [0x00000a80]",
            "add r0, r4, r0",
            "bl loc.imp.__deregister_frame_info",
            "ldr r3, [0x00000a70]",
            "mov r2, 1",
            "strb r2, [r4, r3]",
            "pop {r4, pc}"
        ]
    },
    "sym.imp.__cxa_finalize": {
        "function_address": "0x00000990",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 8, 20",
            "ldr pc, [ip, 0x8d0]!"
        ]
    },
    "loc.imp.__deregister_frame_info": {
        "function_address": "0x000009fc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 8, 20",
            "ldr pc, [ip, 0x888]!"
        ]
    },
    "sym.no_old_whitelist_config": {
        "function_address": "0x00000b48",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "cmp r0, 0",
            "ldr r6, [0x00000c84]",
            "sub sp, sp, 0xc",
            "mov r4, r1",
            "mov fp, r2",
            "add r6, pc, r6",
            "beq 0xc7c",
            "ldr r5, [r0, 0xc]",
            "cmp r5, 0",
            "beq 0xc7c",
            "ldr sb, [0x00000c88]",
            "b 0xb94",
            "ldr r3, [r6, sb]",
            "ldr r3, [r3]",
            "blx r3",
            "ldr r5, [r5, 0x18]",
            "cmp r5, 0",
            "beq 0xc7c",
            "ldr r3, [r5, 0xc]",
            "ldr r0, [r3, 0xc]",
            "bl sym.imp.xmlNodeGetContent",
            "mov r1, r4",
            "mov r8, r0",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "mov r0, r8",
            "bne 0xb7c",
            "ldr r7, [r5, 0xc]",
            "cmp r7, 0",
            "beq 0xc6c",
            "ldr r3, [0x00000c8c]",
            "ldr r5, [0x00000c90]",
            "add r3, r6, r3",
            "str r3, [sp, 4]",
            "add r5, r6, r5",
            "ldr r3, [0x00000c94]",
            "add r3, r6, r3",
            "str r3, [sp]",
            "ldr r0, [r7, 8]",
            "ldr r1, [sp, 4]",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0xc60",
            "ldr r4, [r7, 0xc]",
            "cmp r4, 0",
            "bne 0xc14",
            "b 0xc60",
            "ldr r4, [r4, 0x18]",
            "cmp r4, 0",
            "beq 0xc60",
            "ldr r0, [r4, 8]",
            "mov r1, r5",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0xc08",
            "ldr r0, [r4, 0xc]",
            "bl sym.imp.xmlNodeGetContent",
            "mov sl, r0",
            "ldr r1, [sp]",
            "mov r2, sl",
            "mov r0, fp",
            "bl sym.imp.fprintf",
            "ldr r3, [r6, sb]",
            "mov r0, sl",
            "ldr r3, [r3]",
            "blx r3",
            "ldr r4, [r4, 0x18]",
            "cmp r4, 0",
            "bne 0xc14",
            "ldr r7, [r7, 0x18]",
            "cmp r7, 0",
            "bne 0xbe4",
            "ldr r3, [r6, sb]",
            "mov r0, r8",
            "ldr r3, [r3]",
            "blx r3",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.imp.xmlNodeGetContent": {
        "function_address": "0x0000096c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 8, 20",
            "ldr pc, [ip, 0x8e8]!"
        ]
    },
    "sym.imp.strcmp": {
        "function_address": "0x000009f0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 8, 20",
            "ldr pc, [ip, 0x890]!"
        ]
    },
    "sym.imp.fprintf": {
        "function_address": "0x000009d8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 8, 20",
            "ldr pc, [ip, 0x8a0]!"
        ]
    },
    "sym.get_rpc_node": {
        "function_address": "0x00000b0c",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "subs r4, r1, 0",
            "mov r5, r0",
            "bne 0xb2c",
            "b 0xb40",
            "ldr r4, [r4, 0x18]",
            "cmp r4, 0",
            "beq 0xb40",
            "ldr r1, [r4, 8]",
            "mov r0, r5",
            "bl sym.imp.xmlStrEqual",
            "cmp r0, 0",
            "beq 0xb20",
            "mov r0, r4",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.imp.xmlStrEqual": {
        "function_address": "0x00000948",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 8, 20",
            "ldr pc, [ip, 0x900]!"
        ]
    },
    "sym.callback_portal_whitelist_captive_portal_whitelist": {
        "function_address": "0x00000dfc",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "mov r7, r3",
            "ldr r4, [0x00000ed0]",
            "sub sp, sp, 0xcc",
            "mov r6, r2",
            "mov r1, 0",
            "ldr r3, [0x00000ed4]",
            "mov r2, 0xc6",
            "add r4, pc, r4",
            "ldr r5, [0x00000ed8]",
            "add r0, sp, 2",
            "ldrh r3, [r4, r3]",
            "add r5, r4, r5",
            "strh r3, [sp]",
            "bl sym.imp.memset",
            "mov r0, r5",
            "bl sym.imp.unlink",
            "mov r0, r6",
            "mov r1, r7",
            "mov r2, r5",
            "bl rsym.whitelist_profile_traverse_new",
            "ldr r1, [0x00000edc]",
            "mov r0, r5",
            "add r1, r4, r1",
            "bl sym.imp.fopen",
            "subs r6, r0, 0",
            "beq 0xeb4",
            "ldr r0, [0x00000ee0]",
            "mov r1, 1",
            "mov r2, 0xa",
            "mov r3, r6",
            "mov r7, sp",
            "add r0, r4, r0",
            "bl sym.imp.fwrite",
            "mov r0, r6",
            "bl sym.imp.fclose",
            "ldr r2, [0x00000ee4]",
            "mov r1, 0xc8",
            "mov r3, r5",
            "mov r0, sp",
            "add r2, r4, r2",
            "bl sym.imp.snprintf",
            "mov r0, sp",
            "bl sym.imp.system",
            "tst r0, 0x7f",
            "beq 0xec0",
            "mov r0, 1",
            "add sp, sp, 0xcc",
            "pop {r4, r5, r6, r7, pc}",
            "ubfx r0, r0, 8, 8",
            "subs r0, r0, 0",
            "movne r0, 1",
            "b 0xeb8"
        ]
    },
    "sym.imp.memset": {
        "function_address": "0x000009cc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 8, 20",
            "ldr pc, [ip, 0x8a8]!"
        ]
    },
    "sym.imp.unlink": {
        "function_address": "0x000009c0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 8, 20",
            "ldr pc, [ip, 0x8b0]!"
        ]
    },
    "rsym.whitelist_profile_traverse_new": {
        "function_address": "0x000009e4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 8, 20",
            "ldr pc, [ip, 0x898]!"
        ]
    },
    "sym.imp.fopen": {
        "function_address": "0x000009b4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 8, 20",
            "ldr pc, [ip, 0x8b8]!"
        ]
    },
    "sym.imp.fwrite": {
        "function_address": "0x00000978",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 8, 20",
            "ldr pc, [ip, 0x8e0]!"
        ]
    },
    "sym.imp.fclose": {
        "function_address": "0x000009a8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 8, 20",
            "ldr pc, [ip, 0x8c0]!"
        ]
    },
    "sym.imp.snprintf": {
        "function_address": "0x0000099c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 8, 20",
            "ldr pc, [ip, 0x8c8]!"
        ]
    },
    "sym.imp.system": {
        "function_address": "0x00000984",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 8, 20",
            "ldr pc, [ip, 0x8d8]!"
        ]
    },
    "sym.whitelist_profile_traverse_new": {
        "function_address": "0x00000c98",
        "instructions": [
            "ldr r3, [r1, 4]",
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r8, r1",
            "ldr r7, [0x00000dd8]",
            "mov r6, r0",
            "cmp r3, 1",
            "mov r5, r2",
            "ldr r4, [r1, 0xc]",
            "add r7, pc, r7",
            "beq 0xce8",
            "cmp r4, 0",
            "popeq {r4, r5, r6, r7, r8, sb, sl, pc}",
            "mov r1, r4",
            "mov r0, r6",
            "mov r2, r5",
            "bl rsym.whitelist_profile_traverse_new",
            "ldr r4, [r4, 0x18]",
            "cmp r4, 0",
            "bne 0xcc8",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}",
            "ldr r1, [0x00000ddc]",
            "mov r0, r2",
            "add r1, r7, r1",
            "bl sym.imp.fopen",
            "subs sl, r0, 0",
            "popeq {r4, r5, r6, r7, r8, sb, sl, pc}",
            "mov r0, r4",
            "bl sym.imp.xmlNodeGetContent",
            "ldr r8, [r8, 8]",
            "mov sb, r0",
            "ldr r1, [0x00000de0]",
            "mov r0, r8",
            "add r1, r7, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0xd98",
            "ldr r1, [0x00000de4]",
            "mov r0, r8",
            "add r1, r7, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0xdc0",
            "ldr r1, [0x00000de8]",
            "mov r0, r8",
            "add r1, r7, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0xd80",
            "ldr r3, [0x00000dec]",
            "mov r0, sb",
            "ldr r3, [r7, r3]",
            "ldr r3, [r3]",
            "blx r3",
            "mov r0, sl",
            "bl sym.imp.fclose",
            "cmp r4, 0",
            "bne 0xcc8",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}",
            "ldr r1, [0x00000df0]",
            "mov r0, sl",
            "mov r2, sb",
            "add r1, r7, r1",
            "bl sym.imp.fprintf",
            "b 0xd58",
            "ldr r1, [0x00000df4]",
            "mov r2, sb",
            "mov r0, sl",
            "add r1, r7, r1",
            "bl sym.imp.fprintf",
            "mov r0, r6",
            "mov r1, sb",
            "mov r2, sl",
            "bl rsym.no_old_whitelist_config",
            "b 0xd58",
            "ldr r1, [0x00000df8]",
            "mov r0, sl",
            "mov r2, sb",
            "add r1, r7, r1",
            "bl sym.imp.fprintf",
            "b 0xd58"
        ]
    },
    "rsym.no_old_whitelist_config": {
        "function_address": "0x00000960",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 8, 20",
            "ldr pc, [ip, 0x8f0]!"
        ]
    },
    "entry.init0": {
        "function_address": "0x00000a84",
        "instructions": [
            "push {r4, lr}",
            "ldr r4, [0x00000ae0]",
            "ldr r3, [0x00000ae4]",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "cmp r3, 0",
            "beq 0xab4",
            "ldr r0, [0x00000ae8]",
            "ldr r1, [0x00000aec]",
            "add r0, r4, r0",
            "add r1, r4, r1",
            "bl loc.imp.__register_frame_info",
            "ldr r3, [0x00000af0]",
            "add r0, r4, r3",
            "ldr r3, [r4, r3]",
            "cmp r3, 0",
            "popeq {r4, pc}",
            "ldr r3, [0x00000af4]",
            "ldr r3, [r4, r3]",
            "cmp r3, 0",
            "popeq {r4, pc}",
            "blx r3",
            "pop {r4, pc}"
        ]
    },
    "loc.imp.__register_frame_info": {
        "function_address": "0x00000954",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 8, 20",
            "ldr pc, [ip, 0x8f8]!"
        ]
    }
}