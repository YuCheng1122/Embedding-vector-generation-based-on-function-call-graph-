{
    "sym.avahi_address_cmp": {
        "function_address": "0x00003164",
        "instructions": [
            "lui gp, 2",
            "addiu gp, gp, 0x767c",
            "addu gp, gp, t9",
            "addiu sp, sp, -0x28",
            "sw ra, 0x24(sp)",
            "sw fp, 0x20(sp)",
            "sw s1, 0x1c(sp)",
            "sw s0, 0x18(sp)",
            "move fp, sp",
            "sw gp, 0x10(sp)",
            "sw a0, 0x28(fp)",
            "sw a1, 0x2c(fp)",
            "lw v0, 0x28(fp)",
            "nop",
            "bnez v0, 0x31e0",
            "nop",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a0, v0, 0x11b0",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a1, v0, 0x11b4",
            "addiu a2, zero, 0x2f",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a3, v0, 0x1370",
            "lw v0, -sym.imp.__assert(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw v0, 0x2c(fp)",
            "nop",
            "bnez v0, 0x322c",
            "nop",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a0, v0, 0x11d4",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a1, v0, 0x11b4",
            "addiu a2, zero, 0x30",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a3, v0, 0x1370",
            "lw v0, -sym.imp.__assert(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw v0, 0x28(fp)",
            "nop",
            "lw v1, (v0)",
            "lw v0, 0x2c(fp)",
            "nop",
            "lw v0, (v0)",
            "nop",
            "beq v1, v0, 0x325c",
            "nop",
            "addiu v0, zero, -1",
            "b 0x32b8",
            "nop",
            "lw v0, 0x28(fp)",
            "nop",
            "addiu s1, v0, 4",
            "lw v0, 0x2c(fp)",
            "nop",
            "addiu s0, v0, 4",
            "lw a0, 0x28(fp)",
            "lw v0, -0x7fd8(gp)",
            "nop",
            "addiu v0, v0, fcn.00003090",
            "move t9, v0",
            "bal fcn.00003090",
            "nop",
            "lw gp, 0x10(fp)",
            "move a0, s1",
            "move a1, s0",
            "move a2, v0",
            "lw v0, -sym.imp.memcmp(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "move sp, fp",
            "lw ra, 0x24(sp)",
            "lw fp, 0x20(sp)",
            "lw s1, 0x1c(sp)",
            "lw s0, 0x18(sp)",
            "addiu sp, sp, 0x28",
            "jr ra",
            "nop"
        ]
    },
    "fcn.00003090": {
        "function_address": "0x00003090",
        "instructions": [
            "lui gp, 2",
            "addiu gp, gp, 0x7750",
            "addu gp, gp, t9",
            "addiu sp, sp, -0x20",
            "sw ra, 0x1c(sp)",
            "sw fp, 0x18(sp)",
            "move fp, sp",
            "sw gp, 0x10(sp)",
            "sw a0, 0x20(fp)",
            "lw v0, 0x20(fp)",
            "nop",
            "bnez v0, 0x3100",
            "nop",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a0, v0, 0x11b0",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a1, v0, 0x11b4",
            "addiu a2, zero, 0x24",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a3, v0, 0x1384",
            "lw v0, -sym.imp.__assert(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw v0, 0x20(fp)",
            "nop",
            "lw v0, (v0)",
            "nop",
            "bnez v0, 0x3124",
            "nop",
            "addiu v0, zero, 4",
            "b 0x314c",
            "nop",
            "lw v0, 0x20(fp)",
            "nop",
            "lw v1, (v0)",
            "addiu v0, zero, 1",
            "bne v1, v0, 0x3148",
            "nop",
            "addiu v0, zero, 0x10",
            "b 0x314c",
            "nop",
            "move v0, zero",
            "move sp, fp",
            "lw ra, 0x1c(sp)",
            "lw fp, 0x18(sp)",
            "addiu sp, sp, 0x20",
            "jr ra",
            "nop"
        ]
    },
    "sym._fini": {
        "function_address": "0x00011010",
        "instructions": [
            "lui gp, 2",
            "addiu gp, gp, -0x6830",
            "addu gp, gp, t9",
            "addiu sp, sp, -0x20",
            "sw gp, 0x10(sp)",
            "sw ra, 0x1c(sp)",
            "sw gp, 0x18(sp)",
            "bal 0x11034",
            "nop",
            "lui gp, 2",
            "addiu gp, gp, -0x6854",
            "addu gp, gp, ra",
            "lw t9, -0x7fd8(gp)",
            "nop",
            "addiu t9, t9, entry0",
            "bal entry0",
            "nop",
            "lw gp, 0x10(sp)",
            "nop",
            "lw ra, 0x1c(sp)",
            "jr ra",
            "addiu sp, sp, 0x20"
        ]
    },
    "unk.0x11034": {
        "function_address": "0x00011034",
        "instructions": [
            "lui gp, 2",
            "addiu gp, gp, -0x6830",
            "addu gp, gp, t9",
            "addiu sp, sp, -0x20",
            "sw gp, 0x10(sp)",
            "sw ra, 0x1c(sp)",
            "sw gp, 0x18(sp)",
            "bal 0x11034",
            "nop",
            "lui gp, 2",
            "addiu gp, gp, -0x6854",
            "addu gp, gp, ra",
            "lw t9, -0x7fd8(gp)",
            "nop",
            "addiu t9, t9, entry0",
            "bal entry0",
            "nop",
            "lw gp, 0x10(sp)",
            "nop",
            "lw ra, 0x1c(sp)",
            "jr ra",
            "addiu sp, sp, 0x20"
        ]
    },
    "pc": {
        "function_address": "0x00001f90",
        "instructions": [
            "lui gp, 3",
            "addiu gp, gp, -0x77b0",
            "addu gp, gp, t9",
            "addiu sp, sp, -0x30",
            "sw s0, 0x1c(sp)",
            "lw s0, -0x7fe8(gp)",
            "sw gp, 0x10(sp)",
            "sw ra, 0x2c(sp)",
            "lbu v0, 0x2a00(s0)",
            "sw s3, 0x28(sp)",
            "sw s2, 0x24(sp)",
            "sw s1, 0x20(sp)",
            "bnez v0, 0x2074",
            "nop",
            "lw v0, -0x7e54(gp)",
            "nop",
            "beqz v0, 0x1ff4",
            "nop",
            "lw v0, -0x7fe4(gp)",
            "lw t9, -0x7e54(gp)",
            "lw a0, (v0)",
            "jalr t9",
            "nop",
            "lw gp, 0x10(sp)",
            "nop",
            "lw s2, -0x7fe8(gp)",
            "lw s3, -0x7fe0(gp)",
            "lw s1, -0x7fe8(gp)",
            "addiu s2, s2, 0x26fc",
            "subu s3, s3, s2",
            "sra s3, s3, 2",
            "b 0x2034",
            "addiu s3, s3, -1",
            "sw v0, 0x2a04(s1)",
            "sll v0, v0, 2",
            "addu v0, v0, s2",
            "lw t9, (v0)",
            "nop",
            "jalr t9",
            "nop",
            "lw gp, 0x10(sp)",
            "lw v0, 0x2a04(s1)",
            "nop",
            "sltu v1, v0, s3",
            "bnez v1, 0x2014",
            "addiu v0, v0, 1",
            "lw v0, -0x7dfc(gp)",
            "nop",
            "beqz v0, 0x2070",
            "addiu v0, zero, 1",
            "lw a0, -0x7fdc(gp)",
            "lw t9, -0x7dfc(gp)",
            "nop",
            "jalr t9",
            "addiu a0, a0, 0x26b4",
            "addiu v0, zero, 1",
            "sb v0, 0x2a00(s0)",
            "lw ra, 0x2c(sp)",
            "lw s3, 0x28(sp)",
            "lw s2, 0x24(sp)",
            "lw s1, 0x20(sp)",
            "lw s0, 0x1c(sp)",
            "jr ra",
            "addiu sp, sp, 0x30"
        ]
    },
    "sym.avahi_threaded_poll_new": {
        "function_address": "0x0000d550",
        "instructions": [
            "lui gp, 2",
            "addiu gp, gp, -0x2d70",
            "addu gp, gp, t9",
            "addiu sp, sp, -0x28",
            "sw ra, 0x24(sp)",
            "sw fp, 0x20(sp)",
            "move fp, sp",
            "sw gp, 0x10(sp)",
            "addiu a0, zero, 1",
            "addiu a1, zero, 0x28",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu v0, v0, -0x2d70",
            "move t9, v0",
            "bal fcn.0000d290",
            "nop",
            "lw gp, 0x10(fp)",
            "sw v0, 0x18(fp)",
            "lw v0, 0x18(fp)",
            "nop",
            "beqz v0, 0xd670",
            "nop",
            "lw v0, -sym.avahi_simple_poll_new(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "move v1, v0",
            "lw v0, 0x18(fp)",
            "nop",
            "sw v1, (v0)",
            "lw v0, 0x18(fp)",
            "nop",
            "lw v0, (v0)",
            "nop",
            "beqz v0, 0xd67c",
            "nop",
            "lw v0, 0x18(fp)",
            "nop",
            "addiu v0, v0, 8",
            "move a0, v0",
            "move a1, zero",
            "lw v0, -sym.imp.pthread_mutex_init(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "lw v0, 0x18(fp)",
            "nop",
            "lw v1, (v0)",
            "lw v0, 0x18(fp)",
            "nop",
            "addiu v0, v0, 8",
            "move a0, v1",
            "lw v1, -0x7fdc(gp)",
            "nop",
            "addiu a1, v1, -0x2c88",
            "move a2, v0",
            "lw v0, -sym.avahi_simple_poll_set_func(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "lw v0, 0x18(fp)",
            "nop",
            "sw zero, 0x20(v0)",
            "lw v0, 0x18(fp)",
            "b 0xd71c",
            "nop",
            "nop",
            "b 0xd680",
            "nop",
            "nop",
            "lw v0, 0x18(fp)",
            "nop",
            "beqz v0, 0xd718",
            "nop",
            "lw v0, 0x18(fp)",
            "nop",
            "lw v0, (v0)",
            "nop",
            "beqz v0, 0xd6fc",
            "nop",
            "lw v0, 0x18(fp)",
            "nop",
            "lw v0, (v0)",
            "nop",
            "move a0, v0",
            "lw v0, -sym.avahi_simple_poll_free(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "lw v0, 0x18(fp)",
            "nop",
            "addiu v0, v0, 8",
            "move a0, v0",
            "lw v0, -sym.imp.pthread_mutex_destroy(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "lw a0, 0x18(fp)",
            "lw v0, -sym.avahi_free(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "move v0, zero",
            "move sp, fp",
            "lw ra, 0x24(sp)",
            "lw fp, 0x20(sp)",
            "addiu sp, sp, 0x28",
            "jr ra",
            "nop"
        ]
    },
    "fcn.0000d290": {
        "function_address": "0x0000d290",
        "instructions": [
            "lui gp, 2",
            "addiu gp, gp, -0x2ab0",
            "addu gp, gp, t9",
            "addiu sp, sp, -0x20",
            "sw ra, 0x1c(sp)",
            "sw fp, 0x18(sp)",
            "move fp, sp",
            "sw gp, 0x10(sp)",
            "sw a0, 0x20(fp)",
            "sw a1, 0x24(fp)",
            "lui v0, 0x7fff",
            "ori v1, v0, 0xffff",
            "lw v0, 0x24(fp)",
            "nop",
            "bnez v0, 0xd2d4",
            "divu zero, v1, v0",
            "break 7",
            "mfhi v1",
            "mflo v0",
            "move v1, v0",
            "lw v0, 0x20(fp)",
            "nop",
            "sltu v0, v0, v1",
            "bnez v0, 0xd330",
            "nop",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a0, v0, 0x22b0",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a1, v0, 0x22c4",
            "addiu a2, zero, 0x31",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a3, v0, 0x247c",
            "lw v0, -sym.imp.__assert(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw v1, 0x20(fp)",
            "lw v0, 0x24(fp)",
            "nop",
            "mult v1, v0",
            "mflo v0",
            "move a0, v0",
            "lw v0, -sym.avahi_malloc(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "move sp, fp",
            "lw ra, 0x1c(sp)",
            "lw fp, 0x18(sp)",
            "addiu sp, sp, 0x20",
            "jr ra",
            "nop"
        ]
    },
    "sym.avahi_alternative_host_name": {
        "function_address": "0x00004084",
        "instructions": [
            "lui gp, 2",
            "addiu gp, gp, 0x675c",
            "addu gp, gp, t9",
            "addiu sp, sp, -0x40",
            "sw ra, 0x3c(sp)",
            "sw fp, 0x38(sp)",
            "move fp, sp",
            "sw gp, 0x10(sp)",
            "sw a0, 0x40(fp)",
            "lw v0, 0x40(fp)",
            "nop",
            "bnez v0, 0x40f4",
            "nop",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a0, v0, 0x13d0",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a1, v0, 0x13ac",
            "addiu a2, zero, 0x37",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a3, v0, 0x1458",
            "lw v0, -sym.imp.__assert(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw a0, 0x40(fp)",
            "lw v0, -sym.avahi_is_valid_host_name(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "bnez v0, 0x4124",
            "nop",
            "move v0, zero",
            "b 0x4520",
            "nop",
            "lw a0, 0x40(fp)",
            "addiu a1, zero, 0x2d",
            "lw v0, -sym.imp.strrchr(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "sw v0, 0x18(fp)",
            "lw v0, 0x18(fp)",
            "nop",
            "beqz v0, 0x422c",
            "nop",
            "lw v0, 0x18(fp)",
            "nop",
            "addiu v0, v0, 1",
            "sw v0, 0x18(fp)",
            "lw v0, 0x18(fp)",
            "nop",
            "sw v0, 0x20(fp)",
            "b 0x41d0",
            "nop",
            "lw v0, -0x7ef0(gp)",
            "nop",
            "lw v1, (v0)",
            "lw v0, 0x20(fp)",
            "nop",
            "lb v0, (v0)",
            "nop",
            "sll v0, v0, 1",
            "addu v0, v1, v0",
            "lhu v0, (v0)",
            "nop",
            "andi v0, v0, 8",
            "bnez v0, 0x41c0",
            "nop",
            "sw zero, 0x18(fp)",
            "b 0x41e8",
            "nop",
            "lw v0, 0x20(fp)",
            "nop",
            "addiu v0, v0, 1",
            "sw v0, 0x20(fp)",
            "lw v0, 0x20(fp)",
            "nop",
            "lb v0, (v0)",
            "nop",
            "bnez v0, 0x417c",
            "nop",
            "lw v0, 0x18(fp)",
            "nop",
            "beqz v0, 0x422c",
            "nop",
            "lw v0, 0x18(fp)",
            "nop",
            "lb v1, (v0)",
            "addiu v0, zero, 0x30",
            "beq v1, v0, 0x4228",
            "nop",
            "lw v0, 0x18(fp)",
            "nop",
            "lb v0, (v0)",
            "nop",
            "bnez v0, 0x422c",
            "nop",
            "sw zero, 0x18(fp)",
            "lw v0, 0x18(fp)",
            "nop",
            "beqz v0, 0x4410",
            "nop",
            "lw a0, 0x18(fp)",
            "lw v0, -sym.imp.atoi(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "addiu v0, v0, 1",
            "sw v0, 0x28(fp)",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a0, v0, 0x13d4",
            "lw a1, 0x28(fp)",
            "lw v0, -sym.avahi_strdup_printf(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "sw v0, 0x2c(fp)",
            "lw v0, 0x2c(fp)",
            "nop",
            "bnez v0, 0x42a8",
            "nop",
            "move v0, zero",
            "b 0x4520",
            "nop",
            "lw v1, 0x18(fp)",
            "lw v0, 0x40(fp)",
            "nop",
            "subu v0, v1, v0",
            "addiu v0, v0, -1",
            "sw v0, 0x24(fp)",
            "lw a0, 0x2c(fp)",
            "lw v0, -sym.imp.strlen(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "addiu v1, zero, 0x3e",
            "subu v1, v1, v0",
            "lw v0, 0x24(fp)",
            "nop",
            "sltu v0, v0, v1",
            "bnez v0, 0x4320",
            "nop",
            "lw a0, 0x2c(fp)",
            "lw v0, -sym.imp.strlen(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "addiu v1, zero, 0x3e",
            "subu v0, v1, v0",
            "sw v0, 0x24(fp)",
            "lw a0, 0x40(fp)",
            "lw a1, 0x24(fp)",
            "lw v0, -sym.avahi_strndup(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "sw v0, 0x30(fp)",
            "lw v0, 0x30(fp)",
            "nop",
            "bnez v0, 0x437c",
            "nop",
            "lw a0, 0x2c(fp)",
            "lw v0, -sym.avahi_free(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "move v0, zero",
            "b 0x4520",
            "nop",
            "lw a0, 0x30(fp)",
            "lw v0, -0x7fd8(gp)",
            "nop",
            "addiu v0, v0, fcn.00003f60",
            "move t9, v0",
            "bal fcn.00003f60",
            "nop",
            "lw gp, 0x10(fp)",
            "nop",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a0, v0, 0x13d8",
            "lw a1, 0x30(fp)",
            "lw a2, 0x2c(fp)",
            "lw v0, -sym.avahi_strdup_printf(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "sw v0, 0x1c(fp)",
            "lw a0, 0x30(fp)",
            "lw v0, -sym.avahi_free(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "lw a0, 0x2c(fp)",
            "lw v0, -sym.avahi_free(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "b 0x44bc",
            "nop",
            "lw a0, 0x40(fp)",
            "addiu a1, zero, 0x3d",
            "lw v0, -sym.avahi_strndup(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "sw v0, 0x34(fp)",
            "lw v0, 0x34(fp)",
            "nop",
            "bnez v0, 0x4450",
            "nop",
            "move v0, zero",
            "b 0x4520",
            "nop",
            "lw a0, 0x34(fp)",
            "lw v0, -0x7fd8(gp)",
            "nop",
            "addiu v0, v0, fcn.00003f60",
            "move t9, v0",
            "bal fcn.00003f60",
            "nop",
            "lw gp, 0x10(fp)",
            "nop",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a0, v0, 0x13e0",
            "lw a1, 0x34(fp)",
            "lw v0, -sym.avahi_strdup_printf(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "sw v0, 0x1c(fp)",
            "lw a0, 0x34(fp)",
            "lw v0, -sym.avahi_free(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "lw a0, 0x1c(fp)",
            "lw v0, -sym.avahi_is_valid_host_name(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "bnez v0, 0x451c",
            "nop",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a0, v0, 0x13e8",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a1, v0, 0x13ac",
            "addiu a2, zero, 0x70",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a3, v0, 0x1458",
            "lw v0, -sym.imp.__assert(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw v0, 0x1c(fp)",
            "move sp, fp",
            "lw ra, 0x3c(sp)",
            "lw fp, 0x38(sp)",
            "addiu sp, sp, 0x40",
            "jr ra",
            "nop"
        ]
    },
    "fcn.00003f60": {
        "function_address": "0x00003f60",
        "instructions": [
            "lui gp, 2",
            "addiu gp, gp, 0x6880",
            "addu gp, gp, t9",
            "addiu sp, sp, -0x28",
            "sw ra, 0x24(sp)",
            "sw fp, 0x20(sp)",
            "move fp, sp",
            "sw gp, 0x10(sp)",
            "sw a0, 0x28(fp)",
            "lw a0, 0x28(fp)",
            "move a1, zero",
            "lw v0, -sym.imp.strchr(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "addiu v0, v0, -1",
            "sw v0, 0x18(fp)",
            "b 0x4048",
            "nop",
            "lw a0, 0x28(fp)",
            "lw v0, -sym.avahi_utf8_valid(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "bnez v0, 0x4068",
            "nop",
            "lw v0, 0x18(fp)",
            "nop",
            "lb v0, (v0)",
            "nop",
            "bltz v0, 0x402c",
            "nop",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a0, v0, 0x13a0",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a1, v0, 0x13ac",
            "addiu a2, zero, 0x2c",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a3, v0, 0x1474",
            "lw v0, -sym.imp.__assert(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw v0, 0x18(fp)",
            "nop",
            "sb zero, (v0)",
            "lw v0, 0x18(fp)",
            "nop",
            "addiu v0, v0, -1",
            "sw v0, 0x18(fp)",
            "lw v1, 0x18(fp)",
            "lw v0, 0x28(fp)",
            "nop",
            "sltu v0, v1, v0",
            "beqz v0, 0x3fb4",
            "nop",
            "b 0x406c",
            "nop",
            "nop",
            "move sp, fp",
            "lw ra, 0x24(sp)",
            "lw fp, 0x20(sp)",
            "addiu sp, sp, 0x28",
            "jr ra",
            "nop"
        ]
    },
    "sym.avahi_malloc0": {
        "function_address": "0x00002624",
        "instructions": [
            "lui gp, 3",
            "addiu gp, gp, -sym.avahi_is_valid_service_type_generic",
            "addu gp, gp, t9",
            "addiu sp, sp, -0x28",
            "sw ra, 0x24(sp)",
            "sw fp, 0x20(sp)",
            "move fp, sp",
            "sw gp, 0x10(sp)",
            "sw a0, 0x28(fp)",
            "lw v0, 0x28(fp)",
            "nop",
            "bnez v0, 0x2664",
            "nop",
            "move v0, zero",
            "b 0x27cc",
            "nop",
            "lw v0, -0x7fe8(gp)",
            "nop",
            "lw v0, 0x2a20(v0)",
            "nop",
            "bnez v0, 0x26a8",
            "nop",
            "addiu a0, zero, 1",
            "lw a1, 0x28(fp)",
            "lw v0, -0x7fd8(gp)",
            "nop",
            "addiu v0, v0, fcn.0000244c",
            "move t9, v0",
            "bal fcn.0000244c",
            "nop",
            "lw gp, 0x10(fp)",
            "b 0x27cc",
            "nop",
            "lw v0, -0x7fe8(gp)",
            "nop",
            "lw v0, 0x2a20(v0)",
            "nop",
            "lw v0, 0xc(v0)",
            "nop",
            "beqz v0, 0x26fc",
            "nop",
            "lw v0, -0x7fe8(gp)",
            "nop",
            "lw v0, 0x2a20(v0)",
            "nop",
            "lw v0, 0xc(v0)",
            "addiu a0, zero, 1",
            "lw a1, 0x28(fp)",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "b 0x27cc",
            "nop",
            "lw v0, -0x7fe8(gp)",
            "nop",
            "lw v0, 0x2a20(v0)",
            "nop",
            "lw v0, (v0)",
            "nop",
            "bnez v0, 0x2758",
            "nop",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a0, v0, 0x10a0",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a1, v0, 0x10b4",
            "addiu a2, zero, 0x7d",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a3, v0, 0x1168",
            "lw v0, -sym.imp.__assert(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw v0, -0x7fe8(gp)",
            "nop",
            "lw v0, 0x2a20(v0)",
            "nop",
            "lw v0, (v0)",
            "lw a0, 0x28(fp)",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "sw v0, 0x18(fp)",
            "lw v0, 0x18(fp)",
            "nop",
            "beqz v0, 0x27c8",
            "nop",
            "lw v0, 0x18(fp)",
            "nop",
            "move v1, v0",
            "lw v0, 0x28(fp)",
            "move a0, v1",
            "move a1, zero",
            "move a2, v0",
            "lw v0, -sym.imp.memset(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "lw v0, 0x18(fp)",
            "move sp, fp",
            "lw ra, 0x24(sp)",
            "lw fp, 0x20(sp)",
            "addiu sp, sp, 0x28",
            "jr ra",
            "nop"
        ]
    },
    "fcn.0000244c": {
        "function_address": "0x0000244c",
        "instructions": [
            "lui gp, 3",
            "addiu gp, gp, -0x7c6c",
            "addu gp, gp, t9",
            "addiu sp, sp, -0x28",
            "sw ra, 0x24(sp)",
            "sw fp, 0x20(sp)",
            "move fp, sp",
            "sw gp, 0x10(sp)",
            "sw a0, 0x28(fp)",
            "sw a1, 0x2c(fp)",
            "lw v0, 0x2c(fp)",
            "nop",
            "beqz v0, 0x2494",
            "nop",
            "lw v0, 0x28(fp)",
            "nop",
            "bnez v0, 0x24a0",
            "nop",
            "move v0, zero",
            "b 0x24f0",
            "nop",
            "lw a0, 0x28(fp)",
            "lw a1, 0x2c(fp)",
            "lw v0, -sym.imp.calloc(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "sw v0, 0x18(fp)",
            "lw v0, 0x18(fp)",
            "nop",
            "bnez v0, 0x24ec",
            "nop",
            "lw v0, -0x7fd8(gp)",
            "nop",
            "addiu v0, v0, fcn.00002208",
            "move t9, v0",
            "bal fcn.00002208",
            "nop",
            "lw v0, 0x18(fp)",
            "move sp, fp",
            "lw ra, 0x24(sp)",
            "lw fp, 0x20(sp)",
            "addiu sp, sp, 0x28",
            "jr ra",
            "nop"
        ]
    },
    "sym.avahi_alternative_service_name": {
        "function_address": "0x00004538",
        "instructions": [
            "lui gp, 2",
            "addiu gp, gp, 0x62a8",
            "addu gp, gp, t9",
            "addiu sp, sp, -0x48",
            "sw ra, 0x44(sp)",
            "sw fp, 0x40(sp)",
            "move fp, sp",
            "sw gp, 0x10(sp)",
            "sw a0, 0x48(fp)",
            "lw v0, 0x48(fp)",
            "nop",
            "bnez v0, 0x45a8",
            "nop",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a0, v0, 0x13d0",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a1, v0, 0x13ac",
            "addiu a2, zero, 0x79",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a3, v0, 0x1438",
            "lw v0, -sym.imp.__assert(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw a0, 0x48(fp)",
            "lw v0, -sym.avahi_is_valid_service_name(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "bnez v0, 0x45d8",
            "nop",
            "move v0, zero",
            "b 0x4a30",
            "nop",
            "lw a0, 0x48(fp)",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a1, v0, 0x1404",
            "lw v0, -sym.imp.strstr(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "sw v0, 0x18(fp)",
            "lw v0, 0x18(fp)",
            "nop",
            "beqz v0, 0x473c",
            "nop",
            "lw v0, 0x18(fp)",
            "nop",
            "addiu v0, v0, 2",
            "sw v0, 0x18(fp)",
            "b 0x463c",
            "nop",
            "lw v0, 0x28(fp)",
            "nop",
            "addiu v0, v0, 2",
            "sw v0, 0x18(fp)",
            "lw a0, 0x18(fp)",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a1, v0, 0x1404",
            "lw v0, -sym.imp.strstr(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "sw v0, 0x28(fp)",
            "lw v0, 0x28(fp)",
            "nop",
            "bnez v0, 0x462c",
            "nop",
            "lw v0, 0x18(fp)",
            "nop",
            "sw v0, 0x20(fp)",
            "b 0x46e0",
            "nop",
            "lw v0, -0x7ef0(gp)",
            "nop",
            "lw v1, (v0)",
            "lw v0, 0x20(fp)",
            "nop",
            "lb v0, (v0)",
            "nop",
            "sll v0, v0, 1",
            "addu v0, v1, v0",
            "lhu v0, (v0)",
            "nop",
            "andi v0, v0, 8",
            "bnez v0, 0x46d0",
            "nop",
            "sw zero, 0x18(fp)",
            "b 0x46f8",
            "nop",
            "lw v0, 0x20(fp)",
            "nop",
            "addiu v0, v0, 1",
            "sw v0, 0x20(fp)",
            "lw v0, 0x20(fp)",
            "nop",
            "lb v0, (v0)",
            "nop",
            "bnez v0, 0x468c",
            "nop",
            "lw v0, 0x18(fp)",
            "nop",
            "beqz v0, 0x473c",
            "nop",
            "lw v0, 0x18(fp)",
            "nop",
            "lb v1, (v0)",
            "addiu v0, zero, 0x30",
            "beq v1, v0, 0x4738",
            "nop",
            "lw v0, 0x18(fp)",
            "nop",
            "lb v0, (v0)",
            "nop",
            "bnez v0, 0x473c",
            "nop",
            "sw zero, 0x18(fp)",
            "lw v0, 0x18(fp)",
            "nop",
            "beqz v0, 0x4920",
            "nop",
            "lw a0, 0x18(fp)",
            "lw v0, -sym.imp.atoi(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "addiu v0, v0, 1",
            "sw v0, 0x2c(fp)",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a0, v0, 0x13d4",
            "lw a1, 0x2c(fp)",
            "lw v0, -sym.avahi_strdup_printf(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "sw v0, 0x30(fp)",
            "lw v0, 0x30(fp)",
            "nop",
            "bnez v0, 0x47b8",
            "nop",
            "move v0, zero",
            "b 0x4a30",
            "nop",
            "lw v1, 0x18(fp)",
            "lw v0, 0x48(fp)",
            "nop",
            "subu v0, v1, v0",
            "addiu v0, v0, -2",
            "sw v0, 0x24(fp)",
            "lw a0, 0x30(fp)",
            "lw v0, -sym.imp.strlen(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "addiu v1, zero, 0x3d",
            "subu v1, v1, v0",
            "lw v0, 0x24(fp)",
            "nop",
            "sltu v0, v0, v1",
            "bnez v0, 0x4830",
            "nop",
            "lw a0, 0x30(fp)",
            "lw v0, -sym.imp.strlen(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "addiu v1, zero, 0x3d",
            "subu v0, v1, v0",
            "sw v0, 0x24(fp)",
            "lw a0, 0x48(fp)",
            "lw a1, 0x24(fp)",
            "lw v0, -sym.avahi_strndup(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "sw v0, 0x34(fp)",
            "lw v0, 0x34(fp)",
            "nop",
            "bnez v0, 0x488c",
            "nop",
            "lw a0, 0x30(fp)",
            "lw v0, -sym.avahi_free(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "move v0, zero",
            "b 0x4a30",
            "nop",
            "lw a0, 0x34(fp)",
            "lw v0, -0x7fd8(gp)",
            "nop",
            "addiu v0, v0, fcn.00003f60",
            "move t9, v0",
            "bal fcn.00003f60",
            "nop",
            "lw gp, 0x10(fp)",
            "nop",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a0, v0, 0x1408",
            "lw a1, 0x34(fp)",
            "lw a2, 0x30(fp)",
            "lw v0, -sym.avahi_strdup_printf(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "sw v0, 0x1c(fp)",
            "lw a0, 0x34(fp)",
            "lw v0, -sym.avahi_free(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "lw a0, 0x30(fp)",
            "lw v0, -sym.avahi_free(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "b 0x49cc",
            "nop",
            "lw a0, 0x48(fp)",
            "addiu a1, zero, 0x3c",
            "lw v0, -sym.avahi_strndup(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "sw v0, 0x38(fp)",
            "lw v0, 0x38(fp)",
            "nop",
            "bnez v0, 0x4960",
            "nop",
            "move v0, zero",
            "b 0x4a30",
            "nop",
            "lw a0, 0x38(fp)",
            "lw v0, -0x7fd8(gp)",
            "nop",
            "addiu v0, v0, fcn.00003f60",
            "move t9, v0",
            "bal fcn.00003f60",
            "nop",
            "lw gp, 0x10(fp)",
            "nop",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a0, v0, 0x1410",
            "lw a1, 0x38(fp)",
            "lw v0, -sym.avahi_strdup_printf(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "sw v0, 0x1c(fp)",
            "lw a0, 0x38(fp)",
            "lw v0, -sym.avahi_free(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "lw a0, 0x1c(fp)",
            "lw v0, -sym.avahi_is_valid_service_name(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "bnez v0, 0x4a2c",
            "nop",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a0, v0, 0x1418",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a1, v0, 0x13ac",
            "addiu a2, zero, 0xb3",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a3, v0, 0x1438",
            "lw v0, -sym.imp.__assert(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw v0, 0x1c(fp)",
            "move sp, fp",
            "lw ra, 0x44(sp)",
            "lw fp, 0x40(sp)",
            "addiu sp, sp, 0x48",
            "jr ra",
            "nop"
        ]
    },
    "sym.avahi_rlist_prepend": {
        "function_address": "0x0000e1e8",
        "instructions": [
            "lui gp, 2",
            "addiu gp, gp, -0x3a08",
            "addu gp, gp, t9",
            "addiu sp, sp, -0x30",
            "sw ra, 0x2c(sp)",
            "sw fp, 0x28(sp)",
            "move fp, sp",
            "sw gp, 0x10(sp)",
            "sw a0, 0x30(fp)",
            "sw a1, 0x34(fp)",
            "addiu a0, zero, 1",
            "addiu a1, zero, 0xc",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu v0, v0, -0x1f00",
            "move t9, v0",
            "bal fcn.0000e100",
            "nop",
            "lw gp, 0x10(fp)",
            "sw v0, 0x18(fp)",
            "lw v0, 0x18(fp)",
            "nop",
            "bnez v0, 0xe254",
            "nop",
            "move v0, zero",
            "b 0xe32c",
            "nop",
            "lw v0, 0x18(fp)",
            "lw v1, 0x34(fp)",
            "nop",
            "sw v1, 8(v0)",
            "addiu v0, fp, 0x30",
            "sw v0, 0x1c(fp)",
            "lw v0, 0x18(fp)",
            "nop",
            "sw v0, 0x20(fp)",
            "lw v0, 0x20(fp)",
            "nop",
            "bnez v0, 0xe2c4",
            "nop",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a0, v0, 0x24c0",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a1, v0, 0x24c8",
            "addiu a2, zero, 0x25",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a3, v0, 0x2528",
            "lw v0, -sym.imp.__assert(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw v0, 0x1c(fp)",
            "nop",
            "lw v1, (v0)",
            "lw v0, 0x20(fp)",
            "nop",
            "sw v1, (v0)",
            "lw v0, 0x20(fp)",
            "nop",
            "lw v0, (v0)",
            "nop",
            "beqz v0, 0xe30c",
            "nop",
            "lw v0, 0x20(fp)",
            "nop",
            "lw v0, (v0)",
            "lw v1, 0x20(fp)",
            "nop",
            "sw v1, 4(v0)",
            "lw v0, 0x20(fp)",
            "nop",
            "sw zero, 4(v0)",
            "lw v0, 0x1c(fp)",
            "lw v1, 0x20(fp)",
            "nop",
            "sw v1, (v0)",
            "lw v0, 0x30(fp)",
            "move sp, fp",
            "lw ra, 0x2c(sp)",
            "lw fp, 0x28(sp)",
            "addiu sp, sp, 0x30",
            "jr ra",
            "nop"
        ]
    },
    "fcn.0000e100": {
        "function_address": "0x0000e100",
        "instructions": [
            "lui gp, 2",
            "addiu gp, gp, -0x3920",
            "addu gp, gp, t9",
            "addiu sp, sp, -0x20",
            "sw ra, 0x1c(sp)",
            "sw fp, 0x18(sp)",
            "move fp, sp",
            "sw gp, 0x10(sp)",
            "sw a0, 0x20(fp)",
            "sw a1, 0x24(fp)",
            "lui v0, 0x7fff",
            "ori v1, v0, 0xffff",
            "lw v0, 0x24(fp)",
            "nop",
            "bnez v0, 0xe144",
            "divu zero, v1, v0",
            "break 7",
            "mfhi v1",
            "mflo v0",
            "move v1, v0",
            "lw v0, 0x20(fp)",
            "nop",
            "sltu v0, v0, v1",
            "bnez v0, 0xe1a0",
            "nop",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a0, v0, 0x2490",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a1, v0, 0x24a4",
            "addiu a2, zero, 0x31",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a3, v0, 0x253c",
            "lw v0, -sym.imp.__assert(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw v1, 0x20(fp)",
            "lw v0, 0x24(fp)",
            "nop",
            "mult v1, v0",
            "mflo v0",
            "move a0, v0",
            "lw v0, -sym.avahi_malloc(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "move sp, fp",
            "lw ra, 0x1c(sp)",
            "lw fp, 0x18(sp)",
            "addiu sp, sp, 0x20",
            "jr ra",
            "nop"
        ]
    },
    "sym.avahi_string_list_to_string": {
        "function_address": "0x00005210",
        "instructions": [
            "lui gp, 2",
            "addiu gp, gp, 0x55d0",
            "addu gp, gp, t9",
            "addiu sp, sp, -0x30",
            "sw ra, 0x2c(sp)",
            "sw fp, 0x28(sp)",
            "move fp, sp",
            "sw gp, 0x10(sp)",
            "sw a0, 0x30(fp)",
            "sw zero, 0x1c(fp)",
            "lw v0, 0x30(fp)",
            "nop",
            "sw v0, 0x18(fp)",
            "b 0x52a4",
            "nop",
            "lw v1, 0x18(fp)",
            "lw v0, 0x30(fp)",
            "nop",
            "beq v1, v0, 0x5270",
            "nop",
            "lw v0, 0x1c(fp)",
            "nop",
            "addiu v0, v0, 1",
            "sw v0, 0x1c(fp)",
            "lw v0, 0x18(fp)",
            "nop",
            "lw v1, 4(v0)",
            "lw v0, 0x1c(fp)",
            "nop",
            "addu v0, v1, v0",
            "addiu v0, v0, 2",
            "sw v0, 0x1c(fp)",
            "lw v0, 0x18(fp)",
            "nop",
            "lw v0, (v0)",
            "nop",
            "sw v0, 0x18(fp)",
            "lw v0, 0x18(fp)",
            "nop",
            "bnez v0, 0x524c",
            "nop",
            "lw v0, 0x1c(fp)",
            "nop",
            "addiu v0, v0, 1",
            "move a0, v0",
            "addiu a1, zero, 1",
            "lw v0, -0x7fd8(gp)",
            "nop",
            "addiu v0, v0, fcn.00004b40",
            "move t9, v0",
            "bal fcn.00004b40",
            "nop",
            "lw gp, 0x10(fp)",
            "sw v0, 0x20(fp)",
            "lw v0, 0x20(fp)",
            "nop",
            "sw v0, 0x24(fp)",
            "lw v0, 0x24(fp)",
            "nop",
            "bnez v0, 0x5310",
            "nop",
            "move v0, zero",
            "b 0x54cc",
            "nop",
            "lw a0, 0x30(fp)",
            "lw v0, -sym.avahi_string_list_reverse(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "sw v0, 0x30(fp)",
            "lw v0, 0x30(fp)",
            "nop",
            "sw v0, 0x18(fp)",
            "b 0x548c",
            "nop",
            "lw v1, 0x18(fp)",
            "lw v0, 0x30(fp)",
            "nop",
            "beq v1, v0, 0x5374",
            "nop",
            "lw v0, 0x20(fp)",
            "addiu v1, zero, 0x20",
            "sb v1, (v0)",
            "lw v0, 0x20(fp)",
            "nop",
            "addiu v0, v0, 1",
            "sw v0, 0x20(fp)",
            "lw v0, 0x20(fp)",
            "addiu v1, zero, 0x22",
            "sb v1, (v0)",
            "lw v0, 0x20(fp)",
            "nop",
            "addiu v0, v0, 1",
            "sw v0, 0x20(fp)",
            "lw v0, 0x18(fp)",
            "nop",
            "addiu v0, v0, 8",
            "move v1, v0",
            "lw v0, 0x18(fp)",
            "nop",
            "lw v0, 4(v0)",
            "lw a0, 0x20(fp)",
            "move a1, v1",
            "move a2, v0",
            "lw v0, -sym.imp.strncpy(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "lw v0, 0x18(fp)",
            "nop",
            "lw v0, 4(v0)",
            "lw v1, 0x20(fp)",
            "nop",
            "addu v0, v1, v0",
            "sb zero, (v0)",
            "lw a0, 0x20(fp)",
            "move a1, zero",
            "lw v0, -sym.imp.strchr(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "sw v0, 0x20(fp)",
            "lw v0, 0x20(fp)",
            "addiu v1, zero, 0x22",
            "sb v1, (v0)",
            "lw v0, 0x20(fp)",
            "nop",
            "addiu v0, v0, 1",
            "sw v0, 0x20(fp)",
            "lw v0, 0x20(fp)",
            "nop",
            "bnez v0, 0x5478",
            "nop",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a0, v0, 0x19b4",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a1, v0, 0x1984",
            "addiu a2, zero, 0x9e",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a3, v0, 0x1b28",
            "lw v0, -sym.imp.__assert(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw v0, 0x18(fp)",
            "nop",
            "lw v0, (v0)",
            "nop",
            "sw v0, 0x18(fp)",
            "lw v0, 0x18(fp)",
            "nop",
            "bnez v0, 0x5344",
            "nop",
            "lw a0, 0x30(fp)",
            "lw v0, -sym.avahi_string_list_reverse(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "sw v0, 0x30(fp)",
            "lw v0, 0x20(fp)",
            "nop",
            "sb zero, (v0)",
            "lw v0, 0x24(fp)",
            "move sp, fp",
            "lw ra, 0x2c(sp)",
            "lw fp, 0x28(sp)",
            "addiu sp, sp, 0x30",
            "jr ra",
            "nop"
        ]
    },
    "fcn.00004b40": {
        "function_address": "0x00004b40",
        "instructions": [
            "lui gp, 2",
            "addiu gp, gp, 0x5ca0",
            "addu gp, gp, t9",
            "addiu sp, sp, -0x20",
            "sw ra, 0x1c(sp)",
            "sw fp, 0x18(sp)",
            "move fp, sp",
            "sw gp, 0x10(sp)",
            "sw a0, 0x20(fp)",
            "sw a1, 0x24(fp)",
            "lui v0, 0x7fff",
            "ori v1, v0, 0xffff",
            "lw v0, 0x24(fp)",
            "nop",
            "bnez v0, 0x4b84",
            "divu zero, v1, v0",
            "break 7",
            "mfhi v1",
            "mflo v0",
            "move v1, v0",
            "lw v0, 0x20(fp)",
            "nop",
            "sltu v0, v0, v1",
            "bnez v0, 0x4be0",
            "nop",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a0, v0, 0x1940",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a1, v0, 0x1954",
            "addiu a2, zero, 0x31",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a3, v0, 0x1b44",
            "lw v0, -sym.imp.__assert(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw v1, 0x20(fp)",
            "lw v0, 0x24(fp)",
            "nop",
            "mult v1, v0",
            "mflo v0",
            "move a0, v0",
            "lw v0, -sym.avahi_malloc(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "move sp, fp",
            "lw ra, 0x1c(sp)",
            "lw fp, 0x18(sp)",
            "addiu sp, sp, 0x20",
            "jr ra",
            "nop"
        ]
    },
    "sym.avahi_elapse_time": {
        "function_address": "0x00009db8",
        "instructions": [
            "lui gp, 2",
            "addiu gp, gp, 0xa28",
            "addu gp, gp, t9",
            "addiu sp, sp, -0x48",
            "sw ra, 0x44(sp)",
            "sw fp, 0x40(sp)",
            "sw s7, 0x3c(sp)",
            "sw s6, 0x38(sp)",
            "sw s5, 0x34(sp)",
            "sw s4, 0x30(sp)",
            "sw s3, 0x2c(sp)",
            "sw s2, 0x28(sp)",
            "sw s1, 0x24(sp)",
            "sw s0, 0x20(sp)",
            "move fp, sp",
            "sw gp, 0x10(sp)",
            "sw a0, 0x48(fp)",
            "sw a1, 0x4c(fp)",
            "sw a2, 0x50(fp)",
            "lw v0, 0x48(fp)",
            "nop",
            "bnez v0, 0x9e50",
            "nop",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a0, v0, 0x1e88",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a1, v0, 0x1e64",
            "addiu a2, zero, 0x57",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a3, v0, 0x1e8c",
            "lw v0, -sym.imp.__assert(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw a0, 0x48(fp)",
            "move a1, zero",
            "lw v0, -sym.imp.gettimeofday(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "lw v0, 0x4c(fp)",
            "nop",
            "beqz v0, 0x9f34",
            "nop",
            "lw s4, 0x4c(fp)",
            "move s5, zero",
            "move v0, s4",
            "move v1, s5",
            "srl a0, v0, 0x1e",
            "sll s7, v1, 2",
            "or s7, a0, s7",
            "sll s6, v0, 2",
            "move v0, s6",
            "move v1, s7",
            "srl a0, v0, 0x1b",
            "sll s1, v1, 5",
            "or s1, a0, s1",
            "sll s0, v0, 5",
            "subu a0, s0, v0",
            "sltu a2, s0, a0",
            "subu a1, s1, v1",
            "subu v0, a1, a2",
            "move a1, v0",
            "move s0, a0",
            "move s1, a1",
            "addu v0, s0, s4",
            "sltu a0, v0, s0",
            "addu v1, s1, s5",
            "addu a0, a0, v1",
            "move v1, a0",
            "move s0, v0",
            "move s1, v1",
            "srl v0, s0, 0x1d",
            "sll s3, s1, 3",
            "or s3, v0, s3",
            "sll s2, s0, 3",
            "move s0, s2",
            "move s1, s3",
            "move v0, s0",
            "move v1, s1",
            "lw a0, 0x48(fp)",
            "move a2, v0",
            "move a3, v1",
            "lw v0, -sym.avahi_timeval_add(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "lw v0, 0x50(fp)",
            "nop",
            "beqz v0, 0xa124",
            "nop",
            "move a0, zero",
            "lw v0, -sym.imp.time(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "sw v0, 0x18(fp)",
            "lw v0, -0x7fe8(gp)",
            "nop",
            "addiu a0, v0, 0x2a30",
            "lw v0, -sym.imp.pthread_mutex_lock(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "nop",
            "lw v0, -0x7fe8(gp)",
            "nop",
            "lw v0, 0x2a48(v0)",
            "nop",
            "addiu v1, v0, 0xa",
            "lw v0, 0x18(fp)",
            "nop",
            "slt v0, v0, v1",
            "bnez v0, 0x9fec",
            "nop",
            "lw v0, -0x7fe8(gp)",
            "lw v1, 0x18(fp)",
            "nop",
            "sw v1, 0x2a48(v0)",
            "lw v0, -sym.imp.rand(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "move v1, v0",
            "lw v0, -0x7fe8(gp)",
            "nop",
            "sw v1, 0x2a4c(v0)",
            "lw v0, -0x7fe8(gp)",
            "nop",
            "lw v0, 0x2a4c(v0)",
            "nop",
            "sw v0, 0x1c(fp)",
            "lw v0, -0x7fe8(gp)",
            "nop",
            "addiu a0, v0, 0x2a30",
            "lw v0, -sym.imp.pthread_mutex_unlock(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "nop",
            "lw v0, -fcn.00010440(gp)",
            "lw a0, 0x50(fp)",
            "move t9, v0",
            "bal fcn.00010440",
            "nop",
            "lw gp, 0x10(fp)",
            "nop",
            "lw a2, -0x7fdc(gp)",
            "lw t0, -fcn.0000fd80(gp)",
            "move a0, v0",
            "move a1, v1",
            "lw a3, 0x1ef4(a2)",
            "lw a2, 0x1ef0(a2)",
            "move t9, t0",
            "bal fcn.0000fd80",
            "nop",
            "lw gp, 0x10(fp)",
            "move s0, v0",
            "move s1, v1",
            "lw v0, -fcn.00010360(gp)",
            "lw a0, 0x1c(fp)",
            "move t9, v0",
            "bal fcn.00010360",
            "nop",
            "lw gp, 0x10(fp)",
            "nop",
            "lw t0, -fcn.0000fd80(gp)",
            "move a0, s0",
            "move a1, s1",
            "move a2, v0",
            "move a3, v1",
            "move t9, t0",
            "bal fcn.0000fd80",
            "nop",
            "lw gp, 0x10(fp)",
            "nop",
            "lw a2, -0x7fdc(gp)",
            "lw t0, -sym.avahi_is_valid_service_type_strict(gp)",
            "move a0, v0",
            "move a1, v1",
            "lw a3, sym._init(a2)",
            "lw a2, 0x1ef8(a2)",
            "move t9, t0",
            "bal fcn.000100a0",
            "nop",
            "lw gp, 0x10(fp)",
            "nop",
            "lw a2, -fcn.0000eb50(gp)",
            "move a0, v0",
            "move a1, v1",
            "move t9, a2",
            "bal fcn.0000eb50",
            "nop",
            "lw gp, 0x10(fp)",
            "lw a0, 0x48(fp)",
            "move a2, v0",
            "move a3, v1",
            "lw v0, -sym.avahi_timeval_add(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "lw v0, 0x48(fp)",
            "move sp, fp",
            "lw ra, 0x44(sp)",
            "lw fp, 0x40(sp)",
            "lw s7, 0x3c(sp)",
            "lw s6, 0x38(sp)",
            "lw s5, 0x34(sp)",
            "lw s4, 0x30(sp)",
            "lw s3, 0x2c(sp)",
            "lw s2, 0x28(sp)",
            "lw s1, 0x24(sp)",
            "lw s0, 0x20(sp)",
            "addiu sp, sp, 0x48",
            "jr ra",
            "nop"
        ]
    },
    "fcn.00010440": {
        "function_address": "0x00010440",
        "instructions": [
            "lui gp, 2",
            "addiu gp, gp, -0x5c60",
            "addu gp, gp, t9",
            "addiu sp, sp, -0x48",
            "sw gp, 0x10(sp)",
            "sw s0, 0x34(sp)",
            "sw ra, 0x44(sp)",
            "sw s3, 0x40(sp)",
            "sw s2, 0x3c(sp)",
            "sw s1, 0x38(sp)",
            "move s0, a0",
            "bnez a0, 0x10480",
            "sw zero, 0x1c(sp)",
            "addiu v0, zero, 2",
            "b 0x10528",
            "sw v0, 0x18(sp)",
            "lw t9, -fcn.000105f0(gp)",
            "addiu v0, zero, 3",
            "sw v0, 0x18(sp)",
            "addiu v0, zero, 0x3c",
            "sw v0, 0x20(sp)",
            "sw a0, 0x28(sp)",
            "bal fcn.000105f0",
            "sw zero, 0x2c(sp)",
            "addiu a2, v0, 0x1d",
            "lw gp, 0x10(sp)",
            "bgez a2, 0x104f8",
            "move s1, v0",
            "lw t9, -fcn.000105a0(gp)",
            "negu s2, a2",
            "addiu a0, zero, 1",
            "move a1, zero",
            "bal fcn.000105a0",
            "move a2, s2",
            "lw gp, 0x10(sp)",
            "addiu s3, v0, -1",
            "and s3, s3, s0",
            "lw t9, -fcn.00010560(gp)",
            "move a0, s0",
            "move a1, zero",
            "bal fcn.00010560",
            "move a2, s2",
            "sltu s3, zero, s3",
            "lw gp, 0x10(sp)",
            "b 0x10514",
            "or v0, s3, v0",
            "beqz a2, 0x10528",
            "move a0, s0",
            "lw t9, -fcn.000105a0(gp)",
            "nop",
            "bal fcn.000105a0",
            "move a1, zero",
            "lw gp, 0x10(sp)",
            "sw v0, 0x28(sp)",
            "addiu v0, zero, 0x1f",
            "subu s1, v0, s1",
            "sw v1, 0x2c(sp)",
            "sw s1, 0x20(sp)",
            "lw t9, -fcn.00010700(gp)",
            "nop",
            "bal fcn.00010700",
            "addiu a0, sp, 0x18",
            "lw ra, 0x44(sp)",
            "lw s3, 0x40(sp)",
            "lw s2, 0x3c(sp)",
            "lw s1, 0x38(sp)",
            "lw s0, 0x34(sp)",
            "jr ra",
            "addiu sp, sp, 0x48"
        ]
    },
    "fcn.0000fd80": {
        "function_address": "0x0000fd80",
        "instructions": [
            "lui gp, 2",
            "addiu gp, gp, -0x55a0",
            "addu gp, gp, t9",
            "lw t9, -fcn.00010940(gp)",
            "addiu sp, sp, -0x78",
            "sw gp, 0x10(sp)",
            "sw ra, 0x74(sp)",
            "sw a0, 0x20(sp)",
            "sw a1, 0x24(sp)",
            "sw a2, 0x18(sp)",
            "sw a3, 0x1c(sp)",
            "addiu a0, sp, 0x20",
            "bal fcn.00010940",
            "addiu a1, sp, 0x58",
            "lw gp, 0x10(sp)",
            "addiu a0, sp, 0x18",
            "lw t9, -fcn.00010940(gp)",
            "nop",
            "bal fcn.00010940",
            "addiu a1, sp, 0x40",
            "lw v1, 0x58(sp)",
            "lw gp, 0x10(sp)",
            "sltiu v0, v1, 2",
            "bnez v0, 0xfe14",
            "nop",
            "lw v0, 0x40(sp)",
            "nop",
            "sltiu a0, v0, 2",
            "bnez a0, 0xfe48",
            "nop",
            "addiu a0, zero, 4",
            "bne v1, a0, 0xfe30",
            "nop",
            "addiu v1, zero, 2",
            "lw a0, -0x7f9c(gp)",
            "beq v0, v1, 0x10074",
            "nop",
            "lw v1, 0x5c(sp)",
            "lw v0, 0x44(sp)",
            "nop",
            "xor v0, v1, v0",
            "sltu v0, zero, v0",
            "b 0xfe80",
            "sw v0, 0x5c(sp)",
            "bne v0, a0, 0xfe64",
            "addiu a2, zero, 2",
            "addiu v0, zero, 2",
            "lw a0, -0x7f9c(gp)",
            "beq v1, v0, 0x10074",
            "nop",
            "lw v0, 0x44(sp)",
            "lw v1, 0x5c(sp)",
            "nop",
            "xor v0, v1, v0",
            "sltu v0, zero, v0",
            "b 0xfe98",
            "sw v0, 0x44(sp)",
            "lw a1, 0x5c(sp)",
            "lw a0, 0x44(sp)",
            "bne v1, a2, 0xfe88",
            "nop",
            "xor a0, a1, a0",
            "sltu a0, zero, a0",
            "sw a0, 0x5c(sp)",
            "b 0x10074",
            "addiu a0, sp, 0x58",
            "bne v0, a2, 0xfea0",
            "xor a0, a1, a0",
            "sltu a0, zero, a0",
            "sw a0, 0x44(sp)",
            "b 0x10074",
            "addiu a0, sp, 0x40",
            "lw v0, 0x68(sp)",
            "lw a0, 0x50(sp)",
            "lw t0, 0x54(sp)",
            "lw a1, 0x6c(sp)",
            "multu v0, a0",
            "mflo a2",
            "mfhi a3",
            "nop",
            "nop",
            "multu t0, v0",
            "mfhi v1",
            "mflo v0",
            "nop",
            "nop",
            "multu a1, t0",
            "mflo t0",
            "mfhi t1",
            "nop",
            "nop",
            "multu a1, a0",
            "mflo a0",
            "addu t3, a0, v0",
            "sltu t2, t3, a0",
            "mfhi a1",
            "addu a0, a1, v1",
            "addu t2, t2, a0",
            "sltu a0, t2, v1",
            "bnez a0, 0xff34",
            "nop",
            "bne t2, v1, 0xff28",
            "nop",
            "sltu v0, t3, v0",
            "bnez v0, 0xff34",
            "nop",
            "move v0, zero",
            "b 0xff3c",
            "move v1, zero",
            "move v0, zero",
            "addiu v1, zero, 1",
            "addu a0, t3, a3",
            "move a1, a2",
            "sltu a2, a0, a3",
            "beqz a2, 0xff64",
            "nop",
            "addiu a2, v0, 1",
            "sltu a3, a2, v0",
            "addu a3, a3, v1",
            "move v0, a2",
            "move v1, a3",
            "addu a2, t2, t0",
            "sltu t2, a2, t2",
            "addu t2, t2, t1",
            "addu v0, a2, v0",
            "sltu a2, v0, a2",
            "addu t2, t2, v1",
            "lw a3, 0x60(sp)",
            "addu v1, a2, t2",
            "lw a2, 0x48(sp)",
            "lw t0, 0x5c(sp)",
            "addu a2, a3, a2",
            "lw a3, 0x44(sp)",
            "addiu a2, a2, 4",
            "xor a3, t0, a3",
            "sltu a3, zero, a3",
            "sw a3, 0x2c(sp)",
            "lui t0, 0x2000",
            "b 0xffe0",
            "lui a3, 0x8000",
            "beqz t1, 0xffd0",
            "sll t1, v1, 0x1f",
            "sll t1, a0, 0x1f",
            "srl a1, a1, 1",
            "srl a0, a0, 1",
            "or a1, t1, a1",
            "or a0, a3, a0",
            "sll t1, v1, 0x1f",
            "srl v0, v0, 1",
            "or v0, t1, v0",
            "srl v1, v1, 1",
            "addiu a2, a2, 1",
            "sltu t1, v1, t0",
            "beqz t1, 0xffb0",
            "andi t1, v0, 1",
            "b 0x10008",
            "lui a3, 0x1000",
            "srl t0, a1, 0x1f",
            "sll a0, a0, 1",
            "sll a1, a1, 1",
            "or a0, t0, a0",
            "addiu a2, a2, -1",
            "sltu t0, v1, a3",
            "beqz t0, 0x1002c",
            "srl t0, v0, 0x1f",
            "sll v1, v1, 1",
            "sll v0, v0, 1",
            "bgez a0, 0xfff4",
            "or v1, t0, v1",
            "b 0xfff4",
            "ori v0, v0, 1",
            "sw a2, 0x30(sp)",
            "andi a3, v0, 0xff",
            "addiu a2, zero, 0x80",
            "bne a3, a2, 0x10060",
            "andi a2, v0, 0x100",
            "bnez a2, 0x10060",
            "or a0, a1, a0",
            "beqz a0, 0x10060",
            "addiu a0, v0, 0x80",
            "sltu a1, a0, v0",
            "addiu v0, zero, -0x100",
            "and v0, v0, a0",
            "addu v1, a1, v1",
            "sw v0, 0x38(sp)",
            "addiu v0, zero, 3",
            "sw v1, 0x3c(sp)",
            "sw v0, 0x28(sp)",
            "addiu a0, sp, 0x28",
            "lw t9, -fcn.00010700(gp)",
            "nop",
            "bal fcn.00010700",
            "nop",
            "lw ra, 0x74(sp)",
            "nop",
            "jr ra",
            "addiu sp, sp, 0x78"
        ]
    },
    "fcn.00010360": {
        "function_address": "0x00010360",
        "instructions": [
            "lui gp, 2",
            "addiu gp, gp, -0x5b80",
            "addu gp, gp, t9",
            "addiu sp, sp, -0x40",
            "addiu v0, zero, 3",
            "sw gp, 0x10(sp)",
            "sw v0, 0x18(sp)",
            "srl v0, a0, 0x1f",
            "sw ra, 0x3c(sp)",
            "sw s1, 0x38(sp)",
            "sw s0, 0x34(sp)",
            "bnez a0, 0x103a0",
            "sw v0, 0x1c(sp)",
            "addiu v0, zero, 2",
            "b 0x10408",
            "sw v0, 0x18(sp)",
            "addiu v1, zero, 0x3c",
            "sw v1, 0x20(sp)",
            "beqz v0, 0x103bc",
            "move s1, a0",
            "lui v0, 0x8000",
            "beq a0, v0, 0x10420",
            "negu s1, a0",
            "lw t9, -fcn.000105f0(gp)",
            "sw s1, 0x28(sp)",
            "sw zero, 0x2c(sp)",
            "bal fcn.000105f0",
            "move a0, s1",
            "addiu a2, v0, 0x1d",
            "lw gp, 0x10(sp)",
            "blez a2, 0x10408",
            "move s0, v0",
            "lw t9, -fcn.000105a0(gp)",
            "move a0, s1",
            "bal fcn.000105a0",
            "move a1, zero",
            "sw v0, 0x28(sp)",
            "lw gp, 0x10(sp)",
            "addiu v0, zero, 0x1f",
            "subu s0, v0, s0",
            "sw v1, 0x2c(sp)",
            "sw s0, 0x20(sp)",
            "lw t9, -fcn.00010700(gp)",
            "nop",
            "bal fcn.00010700",
            "addiu a0, sp, 0x18",
            "b 0x1042c",
            "nop",
            "lw v1, -0x7fdc(gp)",
            "move v0, zero",
            "lw v1, 0x2564(v1)",
            "lw ra, 0x3c(sp)",
            "lw s1, 0x38(sp)",
            "lw s0, 0x34(sp)",
            "jr ra",
            "addiu sp, sp, 0x40"
        ]
    },
    "fcn.000100a0": {
        "function_address": "0x000100a0",
        "instructions": [
            "lui gp, 2",
            "addiu gp, gp, -0x58c0",
            "addu gp, gp, t9",
            "lw t9, -fcn.00010940(gp)",
            "addiu sp, sp, -0x60",
            "sw gp, 0x10(sp)",
            "sw ra, 0x5c(sp)",
            "sw a0, 0x20(sp)",
            "sw a1, 0x24(sp)",
            "sw a2, 0x18(sp)",
            "sw a3, 0x1c(sp)",
            "addiu a0, sp, 0x20",
            "bal fcn.00010940",
            "addiu a1, sp, 0x40",
            "lw gp, 0x10(sp)",
            "addiu a0, sp, 0x18",
            "lw t9, -fcn.00010940(gp)",
            "nop",
            "bal fcn.00010940",
            "addiu a1, sp, 0x28",
            "lw v1, 0x40(sp)",
            "lw gp, 0x10(sp)",
            "sltiu v0, v1, 2",
            "bnez v0, 0x10298",
            "addiu a0, sp, 0x40",
            "lw v0, 0x28(sp)",
            "nop",
            "sltiu a1, v0, 2",
            "bnez a1, 0x10298",
            "addiu a0, sp, 0x28",
            "lw a1, 0x44(sp)",
            "lw a0, 0x2c(sp)",
            "nop",
            "xor a0, a1, a0",
            "sw a0, 0x44(sp)",
            "addiu a0, zero, 4",
            "beq v1, a0, 0x10140",
            "addiu a1, zero, 2",
            "bne v1, a1, 0x10154",
            "nop",
            "lw a0, -0x7f9c(gp)",
            "bne v1, v0, 0x10294",
            "nop",
            "b 0x10298",
            "nop",
            "bne v0, a0, 0x10170",
            "move v1, zero",
            "move v0, zero",
            "sw v0, 0x50(sp)",
            "sw v1, 0x54(sp)",
            "b 0x10294",
            "sw zero, 0x48(sp)",
            "bne v0, a1, 0x10180",
            "nop",
            "b 0x10294",
            "sw a0, 0x40(sp)",
            "lw v1, 0x48(sp)",
            "lw v0, 0x30(sp)",
            "lw a3, 0x54(sp)",
            "lw t0, 0x3c(sp)",
            "subu v0, v1, v0",
            "sw v0, 0x48(sp)",
            "sltu v1, a3, t0",
            "lw a2, 0x50(sp)",
            "lw t2, 0x38(sp)",
            "bnez v1, 0x101c4",
            "srl v1, a2, 0x1f",
            "bne t0, a3, 0x101dc",
            "addiu t1, zero, 0x3d",
            "sltu v1, a2, t2",
            "beqz v1, 0x101e0",
            "move a0, zero",
            "srl v1, a2, 0x1f",
            "sll a3, a3, 1",
            "addiu v0, v0, -1",
            "sll a2, a2, 1",
            "or a3, v1, a3",
            "sw v0, 0x48(sp)",
            "addiu t1, zero, 0x3d",
            "move a0, zero",
            "lui a1, 0x1000",
            "move v0, zero",
            "move v1, zero",
            "sltu t3, a3, t0",
            "bnez t3, 0x10234",
            "srl t3, a1, 1",
            "bne t0, a3, 0x10210",
            "or t3, v1, a1",
            "sltu t3, a2, t2",
            "bnez t3, 0x10234",
            "srl t3, a1, 1",
            "or t3, v1, a1",
            "or t4, v0, a0",
            "move v1, t3",
            "subu t3, a2, t2",
            "move v0, t4",
            "subu a3, a3, t0",
            "sltu t4, a2, t3",
            "subu a3, a3, t4",
            "move a2, t3",
            "srl t3, a1, 1",
            "sll t5, a1, 0x1f",
            "srl t4, a0, 1",
            "move a1, t3",
            "sll a3, a3, 1",
            "srl t3, a2, 0x1f",
            "addiu t1, t1, -1",
            "or a0, t5, t4",
            "sll a2, a2, 1",
            "bnez t1, 0x101ec",
            "or a3, t3, a3",
            "andi t1, v0, 0xff",
            "addiu a1, zero, 0x80",
            "bne t1, a1, 0x1028c",
            "andi a1, v0, 0x100",
            "bnez a1, 0x1028c",
            "or a2, a2, a3",
            "beqz a2, 0x1028c",
            "addiu a1, v0, 0x80",
            "sltu a0, a1, v0",
            "addiu a2, zero, -0x100",
            "and v0, a2, a1",
            "addu v1, a0, v1",
            "sw v0, 0x50(sp)",
            "sw v1, 0x54(sp)",
            "addiu a0, sp, 0x40",
            "lw t9, -fcn.00010700(gp)",
            "nop",
            "bal fcn.00010700",
            "nop",
            "lw ra, 0x5c(sp)",
            "nop",
            "jr ra",
            "addiu sp, sp, 0x60"
        ]
    },
    "fcn.0000eb50": {
        "function_address": "0x0000eb50",
        "instructions": [
            "lui gp, 2",
            "addiu gp, gp, -0x4370",
            "addu gp, gp, t9",
            "addiu sp, sp, -0x28",
            "lw t9, -fcn.000102c0(gp)",
            "sw s1, 0x20(sp)",
            "sw s0, 0x1c(sp)",
            "move s1, a0",
            "move s0, a1",
            "sw gp, 0x10(sp)",
            "sw ra, 0x24(sp)",
            "move a0, s1",
            "move a1, s0",
            "move a2, zero",
            "bal fcn.000102c0",
            "move a3, zero",
            "lw gp, 0x10(sp)",
            "nop",
            "lw t9, -0x7fb4(gp)",
            "bgez v0, 0xebd8",
            "move a0, s1",
            "lui v0, 0x8000",
            "xor v0, v0, s0",
            "bal 0xebf0",
            "move a1, v0",
            "lw ra, 0x24(sp)",
            "negu v0, v0",
            "sltu a0, zero, v0",
            "negu v1, v1",
            "subu v1, v1, a0",
            "lw s1, 0x20(sp)",
            "lw s0, 0x1c(sp)",
            "jr ra",
            "addiu sp, sp, 0x28",
            "move a1, s0",
            "lw ra, 0x24(sp)",
            "lw s1, 0x20(sp)",
            "lw s0, 0x1c(sp)",
            "b 0xebf0",
            "addiu sp, sp, 0x28",
            "lui gp, 2",
            "addiu gp, gp, -0x4410",
            "addu gp, gp, t9",
            "lw v0, -0x7fdc(gp)",
            "lw t9, -fcn.0000fd80(gp)",
            "addiu sp, sp, -0x28",
            "lw a2, 0x2550(v0)",
            "lw a3, 0x2554(v0)",
            "sw ra, 0x24(sp)",
            "sw gp, 0x10(sp)",
            "sw s2, 0x20(sp)",
            "sw s1, 0x1c(sp)",
            "sw s0, 0x18(sp)",
            "move s0, a0",
            "bal fcn.0000fd80",
            "move s1, a1",
            "lw gp, 0x10(sp)",
            "move a1, v1",
            "lw t9, -fcn.00010650(gp)",
            "nop",
            "bal fcn.00010650",
            "move a0, v0",
            "lw gp, 0x10(sp)",
            "move a0, v0",
            "lw t9, -fcn.00010440(gp)",
            "nop",
            "bal fcn.00010440",
            "move s2, v0",
            "lw gp, 0x10(sp)",
            "move a0, v0",
            "lw v0, -0x7fdc(gp)",
            "lw t9, -fcn.0000fd80(gp)",
            "lw a2, 0x2558(v0)",
            "lw a3, 0x255c(v0)",
            "bal fcn.0000fd80",
            "move a1, v1",
            "lw gp, 0x10(sp)",
            "move a0, s0",
            "move a1, s1",
            "lw t9, -fcn.0000fcdc(gp)",
            "move a2, v0",
            "bal fcn.0000fcdc",
            "move a3, v1",
            "lw gp, 0x10(sp)",
            "move a1, v1",
            "lw t9, -fcn.00010650(gp)",
            "nop",
            "bal fcn.00010650",
            "move a0, v0",
            "lw ra, 0x24(sp)",
            "move v1, s2",
            "lw s1, 0x1c(sp)",
            "lw s2, 0x20(sp)",
            "lw s0, 0x18(sp)",
            "jr ra",
            "addiu sp, sp, 0x28"
        ]
    },
    "sym._init": {
        "function_address": "0x00001efc",
        "instructions": [
            "lui gp, 3",
            "addiu gp, gp, -0x771c",
            "addu gp, gp, t9",
            "addiu sp, sp, -0x20",
            "sw gp, 0x10(sp)",
            "sw ra, 0x1c(sp)",
            "sw gp, 0x18(sp)",
            "bal 0x1f20",
            "nop",
            "lui gp, 3",
            "addiu gp, gp, -0x7740",
            "addu gp, gp, ra",
            "lw t9, -0x7fd8(gp)",
            "nop",
            "addiu t9, t9, fcn.00002090",
            "bal fcn.00002090",
            "nop",
            "lw gp, 0x10(sp)",
            "nop",
            "bal 0x1f50",
            "nop",
            "lui gp, 3",
            "addiu gp, gp, -0x7770",
            "addu gp, gp, ra",
            "lw t9, -0x7fdc(gp)",
            "nop",
            "addiu t9, t9, 0xcc0",
            "bal fcn.00010cc0",
            "nop",
            "lw gp, 0x10(sp)",
            "nop",
            "lw ra, 0x1c(sp)",
            "jr ra",
            "addiu sp, sp, 0x20"
        ]
    },
    "unk.0x1f20": {
        "function_address": "0x00001f20",
        "instructions": [
            "lui gp, 3",
            "addiu gp, gp, -0x771c",
            "addu gp, gp, t9",
            "addiu sp, sp, -0x20",
            "sw gp, 0x10(sp)",
            "sw ra, 0x1c(sp)",
            "sw gp, 0x18(sp)",
            "bal 0x1f20",
            "nop",
            "lui gp, 3",
            "addiu gp, gp, -0x7740",
            "addu gp, gp, ra",
            "lw t9, -0x7fd8(gp)",
            "nop",
            "addiu t9, t9, fcn.00002090",
            "bal fcn.00002090",
            "nop",
            "lw gp, 0x10(sp)",
            "nop",
            "bal 0x1f50",
            "nop",
            "lui gp, 3",
            "addiu gp, gp, -0x7770",
            "addu gp, gp, ra",
            "lw t9, -0x7fdc(gp)",
            "nop",
            "addiu t9, t9, 0xcc0",
            "bal fcn.00010cc0",
            "nop",
            "lw gp, 0x10(sp)",
            "nop",
            "lw ra, 0x1c(sp)",
            "jr ra",
            "addiu sp, sp, 0x20"
        ]
    },
    "fcn.00002090": {
        "function_address": "0x00002090",
        "instructions": [
            "lui gp, 3",
            "addiu gp, gp, -0x78b0",
            "addu gp, gp, t9",
            "lw v0, -0x7e4c(gp)",
            "addiu sp, sp, -0x20",
            "sw gp, 0x10(sp)",
            "beqz v0, 0x20d0",
            "sw ra, 0x1c(sp)",
            "lw a0, -0x7fdc(gp)",
            "lw a1, -0x7fe8(gp)",
            "lw t9, -0x7e4c(gp)",
            "addiu a0, a0, 0x26b4",
            "jalr t9",
            "addiu a1, a1, 0x2a08",
            "lw gp, 0x10(sp)",
            "nop",
            "lw a0, -0x7fe8(gp)",
            "nop",
            "lw v0, 0x2704(a0)",
            "nop",
            "beqz v0, 0x2104",
            "nop",
            "lw t9, -0x7e20(gp)",
            "nop",
            "beqz t9, 0x2104",
            "addiu a0, a0, 0x2704",
            "lw ra, 0x1c(sp)",
            "jr t9",
            "addiu sp, sp, 0x20",
            "lw ra, 0x1c(sp)",
            "nop",
            "jr ra",
            "addiu sp, sp, 0x20"
        ]
    },
    "unk.0x1f50": {
        "function_address": "0x00001f50",
        "instructions": [
            "lui gp, 3",
            "addiu gp, gp, -0x771c",
            "addu gp, gp, t9",
            "addiu sp, sp, -0x20",
            "sw gp, 0x10(sp)",
            "sw ra, 0x1c(sp)",
            "sw gp, 0x18(sp)",
            "bal 0x1f20",
            "nop",
            "lui gp, 3",
            "addiu gp, gp, -0x7740",
            "addu gp, gp, ra",
            "lw t9, -0x7fd8(gp)",
            "nop",
            "addiu t9, t9, fcn.00002090",
            "bal fcn.00002090",
            "nop",
            "lw gp, 0x10(sp)",
            "nop",
            "bal 0x1f50",
            "nop",
            "lui gp, 3",
            "addiu gp, gp, -0x7770",
            "addu gp, gp, ra",
            "lw t9, -0x7fdc(gp)",
            "nop",
            "addiu t9, t9, 0xcc0",
            "bal fcn.00010cc0",
            "nop",
            "lw gp, 0x10(sp)",
            "nop",
            "lw ra, 0x1c(sp)",
            "jr ra",
            "addiu sp, sp, 0x20"
        ]
    },
    "fcn.00010cc0": {
        "function_address": "0x00010cc0",
        "instructions": [
            "lui gp, 2",
            "addiu gp, gp, -0x64e0",
            "addu gp, gp, t9",
            "addiu sp, sp, -0x28",
            "sw s0, 0x1c(sp)",
            "lw s0, -0x7fe8(gp)",
            "sw gp, 0x10(sp)",
            "sw s1, 0x20(sp)",
            "sw ra, 0x24(sp)",
            "addiu s0, s0, 0x26f4",
            "b 0x10cf8",
            "addiu s1, zero, -1",
            "jalr t9",
            "addiu s0, s0, -4",
            "lw t9, (s0)",
            "nop",
            "bne t9, s1, 0x10cf0",
            "nop",
            "lw ra, 0x24(sp)",
            "lw s1, 0x20(sp)",
            "lw s0, 0x1c(sp)",
            "jr ra",
            "addiu sp, sp, 0x28"
        ]
    },
    "sym.avahi_simple_poll_new": {
        "function_address": "0x0000ba30",
        "instructions": [
            "lui gp, 2",
            "addiu gp, gp, -0x1250",
            "addu gp, gp, t9",
            "addiu sp, sp, -0x28",
            "sw ra, 0x24(sp)",
            "sw fp, 0x20(sp)",
            "move fp, sp",
            "sw gp, 0x10(sp)",
            "addiu a0, zero, 1",
            "addiu a1, zero, 0x68",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu v0, v0, -0x5ea0",
            "move t9, v0",
            "bal fcn.0000a160",
            "nop",
            "lw gp, 0x10(fp)",
            "sw v0, 0x18(fp)",
            "lw v0, 0x18(fp)",
            "nop",
            "bnez v0, 0xba94",
            "nop",
            "move v0, zero",
            "b 0xbcc4",
            "nop",
            "lw v0, 0x18(fp)",
            "nop",
            "addiu v0, v0, 0x54",
            "move a0, v0",
            "lw v0, -sym.imp.pipe(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "bgez v0, 0xbaec",
            "nop",
            "lw a0, 0x18(fp)",
            "lw v0, -sym.avahi_free(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "move v0, zero",
            "b 0xbcc4",
            "nop",
            "lw v0, 0x18(fp)",
            "nop",
            "lw v0, 0x54(v0)",
            "nop",
            "move a0, v0",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu v0, v0, -0x5c24",
            "move t9, v0",
            "bal fcn.0000a3dc",
            "nop",
            "lw gp, 0x10(fp)",
            "lw v0, 0x18(fp)",
            "nop",
            "lw v0, 0x58(v0)",
            "nop",
            "move a0, v0",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu v0, v0, -0x5c24",
            "move t9, v0",
            "bal fcn.0000a3dc",
            "nop",
            "lw gp, 0x10(fp)",
            "lw v0, 0x18(fp)",
            "lw v1, 0x18(fp)",
            "nop",
            "sw v1, (v0)",
            "lw v0, 0x18(fp)",
            "lw v1, -0x7fdc(gp)",
            "nop",
            "addiu v1, v1, -0x5b0c",
            "sw v1, 4(v0)",
            "lw v0, 0x18(fp)",
            "lw v1, -0x7fdc(gp)",
            "nop",
            "addiu v1, v1, -0x53a0",
            "sw v1, 0x10(v0)",
            "lw v0, 0x18(fp)",
            "lw v1, -0x7fdc(gp)",
            "nop",
            "addiu v1, v1, -0x57a4",
            "sw v1, 8(v0)",
            "lw v0, 0x18(fp)",
            "lw v1, -0x7fdc(gp)",
            "nop",
            "addiu v1, v1, -0x55b0",
            "sw v1, 0xc(v0)",
            "lw v0, 0x18(fp)",
            "lw v1, -0x7fdc(gp)",
            "nop",
            "addiu v1, v1, -0x4e94",
            "sw v1, 0x14(v0)",
            "lw v0, 0x18(fp)",
            "lw v1, -0x7fdc(gp)",
            "nop",
            "addiu v1, v1, -0x4a44",
            "sw v1, 0x1c(v0)",
            "lw v0, 0x18(fp)",
            "lw v1, -0x7fdc(gp)",
            "nop",
            "addiu v1, v1, -0x4b9c",
            "sw v1, 0x18(v0)",
            "lw v0, 0x18(fp)",
            "nop",
            "sw zero, 0x28(v0)",
            "lw v0, 0x18(fp)",
            "nop",
            "sw zero, 0x2c(v0)",
            "lw v0, 0x18(fp)",
            "nop",
            "lw v1, 0x2c(v0)",
            "lw v0, 0x18(fp)",
            "nop",
            "sw v1, 0x30(v0)",
            "lw v0, 0x18(fp)",
            "addiu v1, zero, 1",
            "sw v1, 0x34(v0)",
            "lw v0, 0x18(fp)",
            "nop",
            "sw zero, 0x40(v0)",
            "lw v0, 0x18(fp)",
            "nop",
            "sw zero, 0x48(v0)",
            "lw v0, 0x18(fp)",
            "nop",
            "sw zero, 0x44(v0)",
            "lw v0, 0x18(fp)",
            "nop",
            "sw zero, 0x38(v0)",
            "lw v0, 0x18(fp)",
            "nop",
            "sw zero, 0x3c(v0)",
            "lw v0, 0x18(fp)",
            "nop",
            "sw zero, 0x60(v0)",
            "lw v0, 0x18(fp)",
            "nop",
            "sw zero, 0x64(v0)",
            "lw v0, 0x18(fp)",
            "nop",
            "sw zero, 0x5c(v0)",
            "lw a0, 0x18(fp)",
            "move a1, zero",
            "move a2, zero",
            "lw v0, -sym.avahi_simple_poll_set_func(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "lw v0, 0x18(fp)",
            "nop",
            "sw zero, 0x4c(v0)",
            "lw v0, 0x18(fp)",
            "nop",
            "sw zero, 0x50(v0)",
            "lw v0, 0x18(fp)",
            "move sp, fp",
            "lw ra, 0x24(sp)",
            "lw fp, 0x20(sp)",
            "addiu sp, sp, 0x28",
            "jr ra",
            "nop"
        ]
    },
    "fcn.0000a160": {
        "function_address": "0x0000a160",
        "instructions": [
            "lui gp, 2",
            "addiu gp, gp, 0x680",
            "addu gp, gp, t9",
            "addiu sp, sp, -0x20",
            "sw ra, 0x1c(sp)",
            "sw fp, 0x18(sp)",
            "move fp, sp",
            "sw gp, 0x10(sp)",
            "sw a0, 0x20(fp)",
            "sw a1, 0x24(fp)",
            "lui v0, 0x7fff",
            "ori v1, v0, 0xffff",
            "lw v0, 0x24(fp)",
            "nop",
            "bnez v0, 0xa1a4",
            "divu zero, v1, v0",
            "break 7",
            "mfhi v1",
            "mflo v0",
            "move v1, v0",
            "lw v0, 0x20(fp)",
            "nop",
            "sltu v0, v0, v1",
            "bnez v0, 0xa200",
            "nop",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a0, v0, 0x1f00",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a1, v0, 0x1f14",
            "addiu a2, zero, 0x31",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a3, v0, 0x21b4",
            "lw v0, -sym.imp.__assert(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw v1, 0x20(fp)",
            "lw v0, 0x24(fp)",
            "nop",
            "mult v1, v0",
            "mflo v0",
            "move a0, v0",
            "lw v0, -sym.avahi_malloc(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "move sp, fp",
            "lw ra, 0x1c(sp)",
            "lw fp, 0x18(sp)",
            "addiu sp, sp, 0x20",
            "jr ra",
            "nop"
        ]
    },
    "fcn.0000a3dc": {
        "function_address": "0x0000a3dc",
        "instructions": [
            "lui gp, 2",
            "addiu gp, gp, 0x404",
            "addu gp, gp, t9",
            "addiu sp, sp, -0x28",
            "sw ra, 0x24(sp)",
            "sw fp, 0x20(sp)",
            "move fp, sp",
            "sw gp, 0x10(sp)",
            "sw a0, 0x28(fp)",
            "lw v0, 0x28(fp)",
            "nop",
            "bgez v0, 0xa44c",
            "nop",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a0, v0, 0x1f58",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a1, v0, 0x1f34",
            "addiu a2, zero, 0x79",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a3, v0, 0x2284",
            "lw v0, -sym.imp.__assert(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw a0, 0x28(fp)",
            "addiu a1, zero, 3",
            "lw v0, -sym.imp.fcntl(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "sw v0, 0x18(fp)",
            "lw v0, 0x18(fp)",
            "nop",
            "bgez v0, 0xa48c",
            "nop",
            "addiu v0, zero, -1",
            "b 0xa4dc",
            "nop",
            "lw v0, 0x18(fp)",
            "nop",
            "andi v0, v0, 0x80",
            "beqz v0, 0xa4ac",
            "nop",
            "move v0, zero",
            "b 0xa4dc",
            "nop",
            "lw v0, 0x18(fp)",
            "nop",
            "ori v0, v0, 0x80",
            "lw a0, 0x28(fp)",
            "addiu a1, zero, 4",
            "move a2, v0",
            "lw v0, -sym.imp.fcntl(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "move sp, fp",
            "lw ra, 0x24(sp)",
            "lw fp, 0x20(sp)",
            "addiu sp, sp, 0x28",
            "jr ra",
            "nop"
        ]
    },
    "sym.avahi_simple_poll_dispatch": {
        "function_address": "0x0000ca44",
        "instructions": [
            "lui gp, 2",
            "addiu gp, gp, -0x2264",
            "addu gp, gp, t9",
            "addiu sp, sp, -0x28",
            "sw ra, 0x24(sp)",
            "sw fp, 0x20(sp)",
            "move fp, sp",
            "sw gp, 0x10(sp)",
            "sw a0, 0x28(fp)",
            "lw v0, 0x28(fp)",
            "nop",
            "bnez v0, 0xcab4",
            "nop",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a0, v0, 0x1f30",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a1, v0, 0x1f34",
            "addiu a2, zero, 0x227",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a3, v0, 0x211c",
            "lw v0, -sym.imp.__assert(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw v0, 0x28(fp)",
            "nop",
            "lw v1, 0x64(v0)",
            "addiu v0, zero, 4",
            "beq v1, v0, 0xcb08",
            "nop",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a0, v0, 0x207c",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a1, v0, 0x1f34",
            "addiu a2, zero, 0x228",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a3, v0, 0x211c",
            "lw v0, -sym.imp.__assert(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw v0, 0x28(fp)",
            "addiu v1, zero, 5",
            "sw v1, 0x64(v0)",
            "lw a0, 0x28(fp)",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu v0, v0, -0x3e48",
            "move t9, v0",
            "bal fcn.0000c1b8",
            "nop",
            "lw gp, 0x10(fp)",
            "sw v0, 0x1c(fp)",
            "lw v0, 0x1c(fp)",
            "nop",
            "beqz v0, 0xcbf8",
            "nop",
            "lw v0, 0x1c(fp)",
            "nop",
            "lw v0, 0xc(v0)",
            "nop",
            "bnez v0, 0xcba0",
            "nop",
            "lw v0, 0x1c(fp)",
            "nop",
            "lw v0, 0x10(v0)",
            "nop",
            "bnez v0, 0xcba0",
            "nop",
            "lw a0, 0x1c(fp)",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu v0, v0, -0x3ce0",
            "move t9, v0",
            "bal fcn.0000c320",
            "nop",
            "lw gp, 0x10(fp)",
            "b 0xcdb4",
            "nop",
            "lw v0, 0x1c(fp)",
            "nop",
            "addiu v0, v0, 0xc",
            "move a0, v0",
            "lw v0, -sym.avahi_age(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "bltz v1, 0xcbf8",
            "nop",
            "lw a0, 0x1c(fp)",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu v0, v0, -0x3ce0",
            "move t9, v0",
            "bal fcn.0000c320",
            "nop",
            "lw gp, 0x10(fp)",
            "b 0xcdb4",
            "nop",
            "lw v0, 0x28(fp)",
            "nop",
            "lw v0, 0x4c(v0)",
            "nop",
            "sw v0, 0x18(fp)",
            "b 0xcda4",
            "nop",
            "lw v0, 0x18(fp)",
            "nop",
            "lw v0, 4(v0)",
            "nop",
            "bnez v0, 0xcd8c",
            "nop",
            "lw v0, 0x18(fp)",
            "nop",
            "lw v0, 8(v0)",
            "nop",
            "bgez v0, 0xcc80",
            "nop",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a0, v0, 0x2094",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a1, v0, 0x1f34",
            "addiu a2, zero, 0x245",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a3, v0, 0x211c",
            "lw v0, -sym.imp.__assert(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw v0, 0x18(fp)",
            "nop",
            "lw v1, 8(v0)",
            "lw v0, 0x28(fp)",
            "nop",
            "lw v0, 0x2c(v0)",
            "nop",
            "slt v0, v1, v0",
            "bnez v0, 0xcce4",
            "nop",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a0, v0, 0x20a0",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a1, v0, 0x1f34",
            "addiu a2, zero, 0x246",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a3, v0, 0x211c",
            "lw v0, -sym.imp.__assert(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw v0, 0x28(fp)",
            "nop",
            "lw v1, 0x28(v0)",
            "lw v0, 0x18(fp)",
            "nop",
            "lw v0, 8(v0)",
            "nop",
            "sll v0, v0, 3",
            "addu v0, v1, v0",
            "lh v0, 6(v0)",
            "nop",
            "beqz v0, 0xcd90",
            "nop",
            "lw v0, 0x18(fp)",
            "nop",
            "lw v0, 0x14(v0)",
            "lw v1, 0x18(fp)",
            "nop",
            "lw a1, 0xc(v1)",
            "lw v1, 0x28(fp)",
            "nop",
            "lw a0, 0x28(v1)",
            "lw v1, 0x18(fp)",
            "nop",
            "lw v1, 8(v1)",
            "nop",
            "sll v1, v1, 3",
            "addu v1, a0, v1",
            "lh v1, 6(v1)",
            "nop",
            "move a2, v1",
            "lw v1, 0x18(fp)",
            "nop",
            "lw v1, 0x18(v1)",
            "lw a0, 0x18(fp)",
            "move a3, v1",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "b 0xcdb4",
            "nop",
            "nop",
            "lw v0, 0x18(fp)",
            "nop",
            "lw v0, 0x1c(v0)",
            "nop",
            "sw v0, 0x18(fp)",
            "lw v0, 0x18(fp)",
            "nop",
            "bnez v0, 0xcc14",
            "nop",
            "lw v0, 0x28(fp)",
            "addiu v1, zero, 6",
            "sw v1, 0x64(v0)",
            "move v0, zero",
            "move sp, fp",
            "lw ra, 0x24(sp)",
            "lw fp, 0x20(sp)",
            "addiu sp, sp, 0x28",
            "jr ra",
            "nop"
        ]
    },
    "fcn.0000c1b8": {
        "function_address": "0x0000c1b8",
        "instructions": [
            "lui gp, 2",
            "addiu gp, gp, -0x19d8",
            "addu gp, gp, t9",
            "addiu sp, sp, -0x28",
            "sw ra, 0x24(sp)",
            "sw fp, 0x20(sp)",
            "move fp, sp",
            "sw gp, 0x10(sp)",
            "sw a0, 0x28(fp)",
            "sw zero, 0x1c(fp)",
            "lw v0, 0x28(fp)",
            "nop",
            "bnez v0, 0xc22c",
            "nop",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a0, v0, 0x1f30",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a1, v0, 0x1f34",
            "addiu a2, zero, 0x1ab",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a3, v0, 0x2180",
            "lw v0, -sym.imp.__assert(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw v0, 0x28(fp)",
            "nop",
            "lw v0, 0x50(v0)",
            "nop",
            "sw v0, 0x18(fp)",
            "b 0xc2f4",
            "nop",
            "lw v0, 0x18(fp)",
            "nop",
            "lw v0, 4(v0)",
            "nop",
            "bnez v0, 0xc2dc",
            "nop",
            "lw v0, 0x18(fp)",
            "nop",
            "lw v0, 8(v0)",
            "nop",
            "beqz v0, 0xc2dc",
            "nop",
            "lw v0, 0x1c(fp)",
            "nop",
            "beqz v0, 0xc2c8",
            "nop",
            "lw v0, 0x18(fp)",
            "nop",
            "addiu v1, v0, 0xc",
            "lw v0, 0x1c(fp)",
            "nop",
            "addiu v0, v0, 0xc",
            "move a0, v1",
            "move a1, v0",
            "lw v0, -sym.avahi_timeval_compare(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "bgez v0, 0xc2e0",
            "nop",
            "lw v0, 0x18(fp)",
            "nop",
            "sw v0, 0x1c(fp)",
            "b 0xc2e0",
            "nop",
            "nop",
            "lw v0, 0x18(fp)",
            "nop",
            "lw v0, 0x1c(v0)",
            "nop",
            "sw v0, 0x18(fp)",
            "lw v0, 0x18(fp)",
            "nop",
            "bnez v0, 0xc248",
            "nop",
            "lw v0, 0x1c(fp)",
            "move sp, fp",
            "lw ra, 0x24(sp)",
            "lw fp, 0x20(sp)",
            "addiu sp, sp, 0x28",
            "jr ra",
            "nop"
        ]
    },
    "fcn.0000c320": {
        "function_address": "0x0000c320",
        "instructions": [
            "lui gp, 2",
            "addiu gp, gp, -0x1b40",
            "addu gp, gp, t9",
            "addiu sp, sp, -0x20",
            "sw ra, 0x1c(sp)",
            "sw fp, 0x18(sp)",
            "move fp, sp",
            "sw gp, 0x10(sp)",
            "sw a0, 0x20(fp)",
            "lw v0, 0x20(fp)",
            "nop",
            "bnez v0, 0xc390",
            "nop",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a0, v0, 0x1fa8",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a1, v0, 0x1f34",
            "addiu a2, zero, 0x1ba",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a3, v0, 0x216c",
            "lw v0, -sym.imp.__assert(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw v0, 0x20(fp)",
            "nop",
            "lw v0, 4(v0)",
            "nop",
            "beqz v0, 0xc3e4",
            "nop",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a0, v0, 0x1fac",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a1, v0, 0x1f34",
            "addiu a2, zero, 0x1bb",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a3, v0, 0x216c",
            "lw v0, -sym.imp.__assert(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw v0, 0x20(fp)",
            "nop",
            "lw v0, 8(v0)",
            "nop",
            "bnez v0, 0xc438",
            "nop",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a0, v0, 0x1fe4",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a1, v0, 0x1f34",
            "addiu a2, zero, 0x1bc",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a3, v0, 0x216c",
            "lw v0, -sym.imp.__assert(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw v0, 0x20(fp)",
            "nop",
            "sw zero, 8(v0)",
            "lw v0, 0x20(fp)",
            "nop",
            "lw v0, 0x14(v0)",
            "lw v1, 0x20(fp)",
            "nop",
            "lw v1, 0x18(v1)",
            "lw a0, 0x20(fp)",
            "move a1, v1",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "move sp, fp",
            "lw ra, 0x1c(sp)",
            "lw fp, 0x18(sp)",
            "addiu sp, sp, 0x20",
            "jr ra",
            "nop"
        ]
    },
    "sym.avahi_strndup": {
        "function_address": "0x00002b38",
        "instructions": [
            "lui gp, 2",
            "addiu gp, gp, 0x7ca8",
            "addu gp, gp, t9",
            "addiu sp, sp, -0x30",
            "sw ra, 0x2c(sp)",
            "sw fp, 0x28(sp)",
            "move fp, sp",
            "sw gp, 0x10(sp)",
            "sw a0, 0x30(fp)",
            "sw a1, 0x34(fp)",
            "lw v0, 0x30(fp)",
            "nop",
            "bnez v0, 0x2b7c",
            "nop",
            "move v0, zero",
            "b 0x2c80",
            "nop",
            "lw v0, 0x30(fp)",
            "nop",
            "sw v0, 0x1c(fp)",
            "sw zero, 0x18(fp)",
            "b 0x2bb4",
            "nop",
            "lw v0, 0x1c(fp)",
            "nop",
            "addiu v0, v0, 1",
            "sw v0, 0x1c(fp)",
            "lw v0, 0x18(fp)",
            "nop",
            "addiu v0, v0, 1",
            "sw v0, 0x18(fp)",
            "lw v1, 0x18(fp)",
            "lw v0, 0x34(fp)",
            "nop",
            "sltu v0, v1, v0",
            "beqz v0, 0x2be4",
            "nop",
            "lw v0, 0x1c(fp)",
            "nop",
            "lb v0, (v0)",
            "nop",
            "bnez v0, 0x2b94",
            "nop",
            "lw v0, 0x18(fp)",
            "nop",
            "addiu v0, v0, 1",
            "move a0, v0",
            "addiu a1, zero, 1",
            "lw v0, -0x7fd8(gp)",
            "nop",
            "addiu v0, v0, fcn.00002120",
            "move t9, v0",
            "bal fcn.00002120",
            "nop",
            "lw gp, 0x10(fp)",
            "sw v0, 0x20(fp)",
            "lw v0, 0x20(fp)",
            "nop",
            "bnez v0, 0x2c34",
            "nop",
            "move v0, zero",
            "b 0x2c80",
            "nop",
            "lw v1, 0x20(fp)",
            "lw v0, 0x30(fp)",
            "move a0, v1",
            "move v1, v0",
            "lw v0, 0x18(fp)",
            "move a1, v1",
            "move a2, v0",
            "lw v0, -sym.imp.memcpy(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "lw v1, 0x20(fp)",
            "lw v0, 0x18(fp)",
            "nop",
            "addu v0, v1, v0",
            "sb zero, (v0)",
            "lw v0, 0x20(fp)",
            "move sp, fp",
            "lw ra, 0x2c(sp)",
            "lw fp, 0x28(sp)",
            "addiu sp, sp, 0x30",
            "jr ra",
            "nop"
        ]
    },
    "fcn.00002120": {
        "function_address": "0x00002120",
        "instructions": [
            "lui gp, 3",
            "addiu gp, gp, -0x7940",
            "addu gp, gp, t9",
            "addiu sp, sp, -0x20",
            "sw ra, 0x1c(sp)",
            "sw fp, 0x18(sp)",
            "move fp, sp",
            "sw gp, 0x10(sp)",
            "sw a0, 0x20(fp)",
            "sw a1, 0x24(fp)",
            "lui v0, 0x7fff",
            "ori v1, v0, 0xffff",
            "lw v0, 0x24(fp)",
            "nop",
            "bnez v0, 0x2164",
            "divu zero, v1, v0",
            "break 7",
            "mfhi v1",
            "mflo v0",
            "move v1, v0",
            "lw v0, 0x20(fp)",
            "nop",
            "sltu v0, v0, v1",
            "bnez v0, 0x21c0",
            "nop",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a0, v0, 0x1070",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a1, v0, 0x1084",
            "addiu a2, zero, 0x31",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a3, v0, 0x1138",
            "lw v0, -sym.imp.__assert(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw v1, 0x20(fp)",
            "lw v0, 0x24(fp)",
            "nop",
            "mult v1, v0",
            "mflo v0",
            "move a0, v0",
            "lw v0, -sym.avahi_malloc(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "move sp, fp",
            "lw ra, 0x1c(sp)",
            "lw fp, 0x18(sp)",
            "addiu sp, sp, 0x20",
            "jr ra",
            "nop"
        ]
    },
    "sym.avahi_simple_poll_free": {
        "function_address": "0x0000bcdc",
        "instructions": [
            "lui gp, 2",
            "addiu gp, gp, -0x14fc",
            "addu gp, gp, t9",
            "addiu sp, sp, -0x20",
            "sw ra, 0x1c(sp)",
            "sw fp, 0x18(sp)",
            "move fp, sp",
            "sw gp, 0x10(sp)",
            "sw a0, 0x20(fp)",
            "lw v0, 0x20(fp)",
            "nop",
            "bnez v0, 0xbd4c",
            "nop",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a0, v0, 0x1f30",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a1, v0, 0x1f34",
            "addiu a2, zero, 0x170",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a3, v0, 0x219c",
            "lw v0, -sym.imp.__assert(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw a0, 0x20(fp)",
            "addiu a1, zero, 1",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu v0, v0, -0x46fc",
            "move t9, v0",
            "bal fcn.0000b904",
            "nop",
            "lw gp, 0x10(fp)",
            "lw a0, 0x20(fp)",
            "addiu a1, zero, 1",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu v0, v0, -0x4fc0",
            "move t9, v0",
            "bal fcn.0000b040",
            "nop",
            "lw gp, 0x10(fp)",
            "lw v0, 0x20(fp)",
            "nop",
            "lw v0, 0x48(v0)",
            "nop",
            "beqz v0, 0xbde8",
            "nop",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a0, v0, 0x1fb8",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a1, v0, 0x1f34",
            "addiu a2, zero, 0x174",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a3, v0, 0x219c",
            "lw v0, -sym.imp.__assert(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw v0, 0x20(fp)",
            "nop",
            "lw v0, 0x28(v0)",
            "nop",
            "move a0, v0",
            "lw v0, -sym.avahi_free(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "lw v0, 0x20(fp)",
            "nop",
            "lw v0, 0x54(v0)",
            "nop",
            "bltz v0, 0xbe58",
            "nop",
            "lw v0, 0x20(fp)",
            "nop",
            "lw v0, 0x54(v0)",
            "nop",
            "move a0, v0",
            "lw v0, -sym.imp.close(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "lw v0, 0x20(fp)",
            "nop",
            "lw v0, 0x58(v0)",
            "nop",
            "bltz v0, 0xbe9c",
            "nop",
            "lw v0, 0x20(fp)",
            "nop",
            "lw v0, 0x58(v0)",
            "nop",
            "move a0, v0",
            "lw v0, -sym.imp.close(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "lw a0, 0x20(fp)",
            "lw v0, -sym.avahi_free(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "move sp, fp",
            "lw ra, 0x1c(sp)",
            "lw fp, 0x18(sp)",
            "addiu sp, sp, 0x20",
            "jr ra",
            "nop"
        ]
    },
    "fcn.0000b904": {
        "function_address": "0x0000b904",
        "instructions": [
            "lui gp, 2",
            "addiu gp, gp, -0x1124",
            "addu gp, gp, t9",
            "addiu sp, sp, -0x28",
            "sw ra, 0x24(sp)",
            "sw fp, 0x20(sp)",
            "move fp, sp",
            "sw gp, 0x10(sp)",
            "sw a0, 0x28(fp)",
            "sw a1, 0x2c(fp)",
            "lw v0, 0x28(fp)",
            "nop",
            "bnez v0, 0xb978",
            "nop",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a0, v0, 0x1f30",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a1, v0, 0x1f34",
            "addiu a2, zero, 0x132",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a3, v0, 0x21c8",
            "lw v0, -sym.imp.__assert(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw v0, 0x28(fp)",
            "nop",
            "lw v0, 0x50(v0)",
            "nop",
            "sw v0, 0x18(fp)",
            "b 0xb9fc",
            "nop",
            "lw v0, 0x18(fp)",
            "nop",
            "lw v0, 0x1c(v0)",
            "nop",
            "sw v0, 0x1c(fp)",
            "lw v0, 0x2c(fp)",
            "nop",
            "bnez v0, 0xb9d0",
            "nop",
            "lw v0, 0x18(fp)",
            "nop",
            "lw v0, 4(v0)",
            "nop",
            "beqz v0, 0xb9f0",
            "nop",
            "lw a0, 0x18(fp)",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu v0, v0, -0x491c",
            "move t9, v0",
            "bal fcn.0000b6e4",
            "nop",
            "lw gp, 0x10(fp)",
            "lw v0, 0x1c(fp)",
            "nop",
            "sw v0, 0x18(fp)",
            "lw v0, 0x18(fp)",
            "nop",
            "bnez v0, 0xb994",
            "nop",
            "lw v0, 0x28(fp)",
            "nop",
            "sw zero, 0x3c(v0)",
            "move sp, fp",
            "lw ra, 0x24(sp)",
            "lw fp, 0x20(sp)",
            "addiu sp, sp, 0x28",
            "jr ra",
            "nop"
        ]
    },
    "fcn.0000b040": {
        "function_address": "0x0000b040",
        "instructions": [
            "lui gp, 2",
            "addiu gp, gp, -0x860",
            "addu gp, gp, t9",
            "addiu sp, sp, -0x28",
            "sw ra, 0x24(sp)",
            "sw fp, 0x20(sp)",
            "move fp, sp",
            "sw gp, 0x10(sp)",
            "sw a0, 0x28(fp)",
            "sw a1, 0x2c(fp)",
            "lw v0, 0x28(fp)",
            "nop",
            "bnez v0, 0xb0b4",
            "nop",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a0, v0, 0x1f30",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a1, v0, 0x1f34",
            "addiu a2, zero, 0xe8",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a3, v0, 0x2218",
            "lw v0, -sym.imp.__assert(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw v0, 0x28(fp)",
            "nop",
            "lw v0, 0x4c(v0)",
            "nop",
            "sw v0, 0x18(fp)",
            "b 0xb138",
            "nop",
            "lw v0, 0x18(fp)",
            "nop",
            "lw v0, 0x1c(v0)",
            "nop",
            "sw v0, 0x1c(fp)",
            "lw v0, 0x2c(fp)",
            "nop",
            "bnez v0, 0xb10c",
            "nop",
            "lw v0, 0x18(fp)",
            "nop",
            "lw v0, 4(v0)",
            "nop",
            "beqz v0, 0xb12c",
            "nop",
            "lw a0, 0x18(fp)",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu v0, v0, -0x5238",
            "move t9, v0",
            "bal fcn.0000adc8",
            "nop",
            "lw gp, 0x10(fp)",
            "lw v0, 0x1c(fp)",
            "nop",
            "sw v0, 0x18(fp)",
            "lw v0, 0x18(fp)",
            "nop",
            "bnez v0, 0xb0d0",
            "nop",
            "lw v0, 0x28(fp)",
            "nop",
            "sw zero, 0x3c(v0)",
            "move sp, fp",
            "lw ra, 0x24(sp)",
            "lw fp, 0x20(sp)",
            "addiu sp, sp, 0x28",
            "jr ra",
            "nop"
        ]
    },
    "sym.avahi_timeval_add": {
        "function_address": "0x00009ac8",
        "instructions": [
            "lui gp, 2",
            "addiu gp, gp, 0xd18",
            "addu gp, gp, t9",
            "addiu sp, sp, -0x30",
            "sw ra, 0x2c(sp)",
            "sw fp, 0x28(sp)",
            "sw s0, 0x24(sp)",
            "move fp, sp",
            "sw gp, 0x10(sp)",
            "sw a0, 0x30(fp)",
            "sw a2, 0x38(fp)",
            "sw a3, 0x3c(fp)",
            "lw v0, 0x30(fp)",
            "nop",
            "bnez v0, 0x9b44",
            "nop",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a0, v0, 0x1e60",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a1, v0, 0x1e64",
            "addiu a2, zero, 0x3d",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a3, v0, 0x1eac",
            "lw v0, -sym.imp.__assert(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw v0, 0x30(fp)",
            "nop",
            "lw v0, 4(v0)",
            "nop",
            "move t0, v0",
            "sra v0, v0, 0x1f",
            "move t1, v0",
            "lw a0, 0x38(fp)",
            "lw a1, 0x3c(fp)",
            "addu v0, t0, a0",
            "sltu a2, v0, t0",
            "addu v1, t1, a1",
            "addu a0, a2, v1",
            "move v1, a0",
            "sw v0, 0x18(fp)",
            "sw v1, 0x1c(fp)",
            "lw v0, 0x1c(fp)",
            "nop",
            "bltz v0, 0x9c28",
            "nop",
            "lw v0, 0x18(fp)",
            "lw v1, 0x1c(fp)",
            "lw t0, -fcn.0000f2c0(gp)",
            "move a0, v0",
            "move a1, v1",
            "lui a2, 0xf",
            "ori a2, a2, 0x4240",
            "move a3, zero",
            "move t9, t0",
            "bal fcn.0000f2c0",
            "nop",
            "lw gp, 0x10(fp)",
            "move v1, v0",
            "lw v0, 0x30(fp)",
            "nop",
            "sw v1, 4(v0)",
            "lw v0, 0x30(fp)",
            "nop",
            "lw s0, (v0)",
            "lw v0, 0x18(fp)",
            "lw v1, 0x1c(fp)",
            "lw t0, -fcn.0000ecd0(gp)",
            "move a0, v0",
            "move a1, v1",
            "lui a2, 0xf",
            "ori a2, a2, 0x4240",
            "move a3, zero",
            "move t9, t0",
            "bal fcn.0000ecd0",
            "nop",
            "lw gp, 0x10(fp)",
            "addu v1, s0, v0",
            "lw v0, 0x30(fp)",
            "nop",
            "sw v1, (v0)",
            "b 0x9cc8",
            "nop",
            "lw v0, 0x18(fp)",
            "lw v1, 0x1c(fp)",
            "lw t0, -fcn.0000f2c0(gp)",
            "move a0, v0",
            "move a1, v1",
            "lui a2, 0xf",
            "ori a2, a2, 0x4240",
            "move a3, zero",
            "move t9, t0",
            "bal fcn.0000f2c0",
            "nop",
            "lw gp, 0x10(fp)",
            "move v1, v0",
            "lui v0, 0xf",
            "ori v0, v0, 0x4240",
            "addu v0, v1, v0",
            "move v1, v0",
            "lw v0, 0x30(fp)",
            "nop",
            "sw v1, 4(v0)",
            "lw v0, 0x30(fp)",
            "nop",
            "lw s0, (v0)",
            "lw v0, 0x18(fp)",
            "lw v1, 0x1c(fp)",
            "lw t0, -fcn.0000ecd0(gp)",
            "move a0, v0",
            "move a1, v1",
            "lui a2, 0xf",
            "ori a2, a2, 0x4240",
            "move a3, zero",
            "move t9, t0",
            "bal fcn.0000ecd0",
            "nop",
            "lw gp, 0x10(fp)",
            "addiu v0, v0, -1",
            "addu v1, s0, v0",
            "lw v0, 0x30(fp)",
            "nop",
            "sw v1, (v0)",
            "lw v0, 0x30(fp)",
            "move sp, fp",
            "lw ra, 0x2c(sp)",
            "lw fp, 0x28(sp)",
            "lw s0, 0x24(sp)",
            "addiu sp, sp, 0x30",
            "jr ra",
            "nop"
        ]
    },
    "fcn.0000f2c0": {
        "function_address": "0x0000f2c0",
        "instructions": [
            "lui gp, 2",
            "addiu gp, gp, -0x4ae0",
            "addu gp, gp, t9",
            "move t6, a2",
            "move t7, a3",
            "bgez a1, 0xf2f0",
            "move t5, zero",
            "negu a0, a0",
            "sltu v0, zero, a0",
            "negu a1, a1",
            "subu a1, a1, v0",
            "addiu t5, zero, -1",
            "bgez a3, 0xf30c",
            "move t1, t6",
            "negu t6, a2",
            "sltu v0, zero, t6",
            "negu a3, a3",
            "subu t7, a3, v0",
            "move t1, t6",
            "move v0, a0",
            "bnez t7, 0xf690",
            "move v1, a1",
            "sltu a2, a1, t6",
            "beqz a2, 0xf45c",
            "lui a2, 1",
            "sltu a2, t6, a2",
            "beqz a2, 0xf340",
            "lui a3, 0x100",
            "sltiu a2, t6, 0x100",
            "sltiu a2, a2, 1",
            "b 0xf350",
            "sll a2, a2, 3",
            "sltu a3, t6, a3",
            "beqz a3, 0xf350",
            "addiu a2, zero, 0x18",
            "addiu a2, zero, 0x10",
            "lw t0, -0x7fa8(gp)",
            "srlv a3, t6, a2",
            "addiu t2, zero, 0x20",
            "addu a3, t0, a3",
            "lbu t3, (a3)",
            "nop",
            "addu a2, t3, a2",
            "subu t2, t2, a2",
            "beqz t2, 0xf388",
            "sllv a1, a1, t2",
            "srlv a2, a0, a2",
            "sllv t1, t6, t2",
            "or v1, a1, a2",
            "sllv v0, a0, t2",
            "srl a2, t1, 0x10",
            "bnez a2, 0xf398",
            "divu zero, v1, a2",
            "break 7",
            "andi t0, t1, 0xffff",
            "srl a0, v0, 0x10",
            "mflo t6",
            "mfhi t4",
            "sll t4, t4, 0x10",
            "or t4, t4, a0",
            "bnez a2, 0xf3bc",
            "divu zero, v1, a2",
            "break 7",
            "mult t6, t0",
            "mflo t6",
            "sltu v1, t4, t6",
            "beqz v1, 0xf3f4",
            "subu v1, t4, t6",
            "addu t4, t4, t1",
            "sltu v1, t4, t1",
            "bnez v1, 0xf3f4",
            "subu v1, t4, t6",
            "sltu v1, t4, t6",
            "beqz v1, 0xf3f4",
            "subu v1, t4, t6",
            "addu t4, t4, t1",
            "subu v1, t4, t6",
            "bnez a2, 0xf400",
            "divu zero, v1, a2",
            "break 7",
            "andi v0, v0, 0xffff",
            "mflo a0",
            "mfhi a1",
            "sll a1, a1, 0x10",
            "or a1, a1, v0",
            "bnez a2, 0xf420",
            "divu zero, v1, a2",
            "break 7",
            "mult a0, t0",
            "mflo t0",
            "sltu v0, a1, t0",
            "beqz v0, 0xf684",
            "subu v0, a1, t0",
            "addu a1, a1, t1",
            "sltu v0, a1, t1",
            "bnez v0, 0xf684",
            "subu v0, a1, t0",
            "sltu v0, a1, t0",
            "beqz v0, 0xf454",
            "nop",
            "addu a1, a1, t1",
            "b 0xf684",
            "subu v0, a1, t0",
            "bnez t6, 0xf478",
            "lui v1, 1",
            "addiu t1, zero, 1",
            "bnez t7, 0xf474",
            "divu zero, t1, t7",
            "break 7",
            "mflo t1",
            "sltu v1, t1, v1",
            "beqz v1, 0xf494",
            "lui v1, 0x100",
            "sltiu a3, t1, 0x100",
            "sltiu a3, a3, 1",
            "b 0xf4a4",
            "sll a3, a3, 3",
            "sltu v1, t1, v1",
            "beqz v1, 0xf4a4",
            "addiu a3, zero, 0x18",
            "addiu a3, zero, 0x10",
            "lw a2, -0x7fa8(gp)",
            "srlv v1, t1, a3",
            "addiu t2, zero, 0x20",
            "addu v1, a2, v1",
            "lbu v1, (v1)",
            "nop",
            "addu a3, v1, a3",
            "subu t2, t2, a3",
            "bnez t2, 0xf4d4",
            "srlv a2, a1, a3",
            "b 0xf5b4",
            "subu a1, a1, t1",
            "sllv t1, t1, t2",
            "srl v1, t1, 0x10",
            "bnez v1, 0xf4e8",
            "divu zero, a2, v1",
            "break 7",
            "sllv a1, a1, t2",
            "srlv a3, a0, a3",
            "sllv v0, a0, t2",
            "andi t0, t1, 0xffff",
            "or a3, a1, a3",
            "mflo a0",
            "mfhi a1",
            "sll a1, a1, 0x10",
            "nop",
            "bnez v1, 0xf518",
            "divu zero, a2, v1",
            "break 7",
            "srl a2, a3, 0x10",
            "or a1, a1, a2",
            "mult a0, t0",
            "mflo a0",
            "sltu a2, a1, a0",
            "beqz a2, 0xf550",
            "nop",
            "addu a1, a1, t1",
            "sltu a2, a1, t1",
            "bnez a2, 0xf550",
            "sltu a2, a1, a0",
            "beqz a2, 0xf550",
            "nop",
            "addu a1, a1, t1",
            "subu a0, a1, a0",
            "bnez v1, 0xf560",
            "divu zero, a0, v1",
            "break 7",
            "andi a3, a3, 0xffff",
            "mflo a1",
            "mfhi a2",
            "sll a2, a2, 0x10",
            "or a2, a2, a3",
            "bnez v1, 0xf580",
            "divu zero, a0, v1",
            "break 7",
            "mult a1, t0",
            "mflo a1",
            "sltu v1, a2, a1",
            "beqz v1, 0xf5b0",
            "nop",
            "addu a2, a2, t1",
            "sltu v1, a2, t1",
            "bnez v1, 0xf5b0",
            "sltu v1, a2, a1",
            "beqz v1, 0xf5b0",
            "nop",
            "addu a2, a2, t1",
            "subu a1, a2, a1",
            "srl v1, t1, 0x10",
            "bnez v1, 0xf5c4",
            "divu zero, a1, v1",
            "break 7",
            "andi a2, t1, 0xffff",
            "srl t0, v0, 0x10",
            "mflo a3",
            "mfhi a0",
            "sll a0, a0, 0x10",
            "or a0, a0, t0",
            "bnez v1, 0xf5e8",
            "divu zero, a1, v1",
            "break 7",
            "mult a3, a2",
            "mflo a3",
            "sltu a1, a0, a3",
            "beqz a1, 0xf620",
            "subu a1, a0, a3",
            "addu a0, a0, t1",
            "sltu a1, a0, t1",
            "bnez a1, 0xf620",
            "subu a1, a0, a3",
            "sltu a1, a0, a3",
            "beqz a1, 0xf620",
            "subu a1, a0, a3",
            "addu a0, a0, t1",
            "subu a1, a0, a3",
            "bnez v1, 0xf62c",
            "divu zero, a1, v1",
            "break 7",
            "andi v0, v0, 0xffff",
            "mflo a0",
            "mfhi a3",
            "sll a3, a3, 0x10",
            "or a3, a3, v0",
            "bnez v1, 0xf64c",
            "divu zero, a1, v1",
            "break 7",
            "mult a0, a2",
            "mflo a2",
            "sltu v0, a3, a2",
            "beqz v0, 0xf684",
            "subu v0, a3, a2",
            "addu a3, a3, t1",
            "sltu v0, a3, t1",
            "bnez v0, 0xf684",
            "subu v0, a3, a2",
            "sltu v0, a3, a2",
            "beqz v0, 0xf680",
            "nop",
            "addu a3, a3, t1",
            "subu v0, a3, a2",
            "srlv v0, v0, t2",
            "b 0xf880",
            "move v1, zero",
            "sltu a2, a1, t7",
            "beqz a2, 0xf6a8",
            "lui a2, 1",
            "move v0, a0",
            "b 0xf880",
            "move v1, a1",
            "sltu a2, t7, a2",
            "beqz a2, 0xf6c4",
            "lui a2, 0x100",
            "sltiu t4, t7, 0x100",
            "sltiu t4, t4, 1",
            "b 0xf6d4",
            "sll t4, t4, 3",
            "sltu a2, t7, a2",
            "beqz a2, 0xf6d4",
            "addiu t4, zero, 0x18",
            "addiu t4, zero, 0x10",
            "lw a3, -0x7fa8(gp)",
            "srlv a2, t7, t4",
            "addiu t3, zero, 0x20",
            "addu a2, a3, a2",
            "lbu t2, (a2)",
            "nop",
            "addu t4, t2, t4",
            "subu t3, t3, t4",
            "bnez t3, 0xf724",
            "sllv a2, t6, t3",
            "sltu a2, t7, a1",
            "bnez a2, 0xf710",
            "sltu a2, a0, t6",
            "bnez a2, 0xf880",
            "nop",
            "subu v0, a0, t6",
            "subu a1, a1, t7",
            "sltu a0, a0, v0",
            "b 0xf880",
            "subu v1, a1, a0",
            "srlv v0, t6, t4",
            "sllv a3, t7, t3",
            "or a3, a3, v0",
            "srl t1, a3, 0x10",
            "srlv t6, a1, t4",
            "bnez t1, 0xf744",
            "divu zero, t6, t1",
            "break 7",
            "srlv v0, a0, t4",
            "sllv a1, a1, t3",
            "andi t7, a3, 0xffff",
            "or a1, a1, v0",
            "srl v1, a1, 0x10",
            "sllv a0, a0, t3",
            "mflo t8",
            "mfhi v0",
            "sll v0, v0, 0x10",
            "or v0, v0, v1",
            "bnez t1, 0xf778",
            "divu zero, t6, t1",
            "break 7",
            "mult t8, t7",
            "mflo t0",
            "sltu v1, v0, t0",
            "beqz v1, 0xf7b0",
            "move t6, t8",
            "addu v0, v0, a3",
            "sltu v1, v0, a3",
            "bnez v1, 0xf7b0",
            "addiu t6, t8, -1",
            "sltu v1, v0, t0",
            "beqz v1, 0xf7b0",
            "nop",
            "addiu t6, t8, -2",
            "addu v0, v0, a3",
            "subu t0, v0, t0",
            "bnez t1, 0xf7c0",
            "divu zero, t0, t1",
            "break 7",
            "andi a1, a1, 0xffff",
            "mflo t8",
            "mfhi v0",
            "sll v0, v0, 0x10",
            "or a1, v0, a1",
            "bnez t1, 0xf7e0",
            "divu zero, t0, t1",
            "break 7",
            "mult t8, t7",
            "mflo t7",
            "sltu v1, a1, t7",
            "beqz v1, 0xf818",
            "move v0, t8",
            "addu a1, a1, a3",
            "sltu v1, a1, a3",
            "bnez v1, 0xf818",
            "addiu v0, t8, -1",
            "sltu v1, a1, t7",
            "beqz v1, 0xf81c",
            "sll t0, t6, 0x10",
            "addiu v0, t8, -2",
            "addu a1, a1, a3",
            "sll t0, t6, 0x10",
            "or t0, v0, t0",
            "multu t0, a2",
            "subu t7, a1, t7",
            "mfhi t1",
            "sltu v0, t7, t1",
            "mflo t0",
            "bnez v0, 0xf84c",
            "move v1, t1",
            "bne t1, t7, 0xf860",
            "sltu v0, a0, t0",
            "beqz v0, 0xf860",
            "nop",
            "subu a2, t0, a2",
            "sltu t0, t0, a2",
            "subu v1, v1, a3",
            "subu v1, v1, t0",
            "move t0, a2",
            "subu t0, a0, t0",
            "sltu a0, a0, t0",
            "subu v1, t7, v1",
            "subu v1, v1, a0",
            "sllv v0, v1, t4",
            "srlv t0, t0, t3",
            "or v0, v0, t0",
            "srlv v1, v1, t3",
            "beqz t5, 0xf898",
            "nop",
            "negu v0, v0",
            "sltu a2, zero, v0",
            "negu v1, v1",
            "subu v1, v1, a2",
            "jr ra",
            "nop"
        ]
    },
    "fcn.0000ecd0": {
        "function_address": "0x0000ecd0",
        "instructions": [
            "lui gp, 2",
            "addiu gp, gp, -0x44f0",
            "addu gp, gp, t9",
            "move v0, a2",
            "move t4, a3",
            "bgez a1, 0xed00",
            "move t2, zero",
            "negu a0, a0",
            "sltu v1, zero, a0",
            "negu a1, a1",
            "subu a1, a1, v1",
            "addiu t2, zero, -1",
            "bgez a3, 0xed20",
            "move t0, v0",
            "negu v0, a2",
            "sltu v1, zero, v0",
            "negu a3, a3",
            "nor t2, zero, t2",
            "subu t4, a3, v1",
            "move t0, v0",
            "move v1, a0",
            "bnez t4, 0xf0c8",
            "move t1, a1",
            "sltu a2, a1, v0",
            "beqz a2, 0xee74",
            "lui a2, 1",
            "sltu a2, v0, a2",
            "beqz a2, 0xed54",
            "lui a3, 0x100",
            "sltiu a2, v0, 0x100",
            "sltiu a2, a2, 1",
            "b 0xed64",
            "sll a2, a2, 3",
            "sltu a3, v0, a3",
            "beqz a3, 0xed64",
            "addiu a2, zero, 0x18",
            "addiu a2, zero, 0x10",
            "lw t3, -0x7fa8(gp)",
            "srlv a3, v0, a2",
            "addu a3, t3, a3",
            "lbu a3, (a3)",
            "addiu t3, zero, 0x20",
            "addu a2, a3, a2",
            "subu t3, t3, a2",
            "beqz t3, 0xed98",
            "sllv a1, a1, t3",
            "srlv a2, a0, a2",
            "sllv t0, v0, t3",
            "or t1, a1, a2",
            "sllv v1, a0, t3",
            "srl v0, t0, 0x10",
            "bnez v0, 0xeda8",
            "divu zero, t1, v0",
            "break 7",
            "andi a3, t0, 0xffff",
            "srl t3, v1, 0x10",
            "mflo a2",
            "mfhi a0",
            "sll a1, a0, 0x10",
            "or a1, a1, t3",
            "bnez v0, 0xedcc",
            "divu zero, t1, v0",
            "break 7",
            "mult a2, a3",
            "mflo t1",
            "sltu t3, a1, t1",
            "beqz t3, 0xee04",
            "move a0, a2",
            "addu a1, a1, t0",
            "sltu t3, a1, t0",
            "bnez t3, 0xee04",
            "addiu a0, a2, -1",
            "sltu t3, a1, t1",
            "beqz t3, 0xee04",
            "nop",
            "addiu a0, a2, -2",
            "addu a1, a1, t0",
            "subu a1, a1, t1",
            "bnez v0, 0xee14",
            "divu zero, a1, v0",
            "break 7",
            "andi v1, v1, 0xffff",
            "mflo a2",
            "mfhi t1",
            "sll t1, t1, 0x10",
            "or v1, t1, v1",
            "bnez v0, 0xee34",
            "divu zero, a1, v0",
            "break 7",
            "mult a2, a3",
            "mflo a3",
            "sltu a1, v1, a3",
            "beqz a1, 0xee68",
            "move v0, a2",
            "addu v1, v1, t0",
            "sltu t0, v1, t0",
            "bnez t0, 0xee68",
            "addiu v0, a2, -1",
            "sltu a3, v1, a3",
            "beqz a3, 0xee68",
            "nop",
            "addiu v0, a2, -2",
            "sll a3, a0, 0x10",
            "b 0xf280",
            "or a3, v0, a3",
            "bnez v0, 0xee90",
            "lui v0, 1",
            "addiu t0, zero, 1",
            "bnez t4, 0xee8c",
            "divu zero, t0, t4",
            "break 7",
            "mflo t0",
            "sltu v0, t0, v0",
            "beqz v0, 0xeeac",
            "lui v0, 0x100",
            "sltiu t3, t0, 0x100",
            "sltiu t3, t3, 1",
            "b 0xeebc",
            "sll t3, t3, 3",
            "sltu v0, t0, v0",
            "beqz v0, 0xeebc",
            "addiu t3, zero, 0x18",
            "addiu t3, zero, 0x10",
            "lw a2, -0x7fa8(gp)",
            "srlv v0, t0, t3",
            "addu v0, a2, v0",
            "lbu v0, (v0)",
            "nop",
            "addu t3, v0, t3",
            "addiu v0, zero, 0x20",
            "subu v0, v0, t3",
            "bnez v0, 0xeeec",
            "addiu t1, zero, 1",
            "b 0xefe4",
            "subu a1, a1, t0",
            "sllv t0, t0, v0",
            "srlv t1, a1, t3",
            "sllv v1, a0, v0",
            "sllv a1, a1, v0",
            "srl v0, t0, 0x10",
            "bnez v0, 0xef0c",
            "divu zero, t1, v0",
            "break 7",
            "srlv t3, a0, t3",
            "or t3, a1, t3",
            "andi a1, t0, 0xffff",
            "srl t4, t3, 0x10",
            "mflo a3",
            "mfhi a0",
            "sll a2, a0, 0x10",
            "or a2, a2, t4",
            "bnez v0, 0xef38",
            "divu zero, t1, v0",
            "break 7",
            "mult a3, a1",
            "mflo t1",
            "sltu t4, a2, t1",
            "beqz t4, 0xef70",
            "move a0, a3",
            "addu a2, a2, t0",
            "sltu t4, a2, t0",
            "bnez t4, 0xef70",
            "addiu a0, a3, -1",
            "sltu t4, a2, t1",
            "beqz t4, 0xef70",
            "nop",
            "addiu a0, a3, -2",
            "addu a2, a2, t0",
            "subu a2, a2, t1",
            "bnez v0, 0xef80",
            "divu zero, a2, v0",
            "break 7",
            "andi t3, t3, 0xffff",
            "mflo a3",
            "mfhi t1",
            "sll t1, t1, 0x10",
            "or t3, t1, t3",
            "bnez v0, 0xefa0",
            "divu zero, a2, v0",
            "break 7",
            "mult a3, a1",
            "mflo a1",
            "sltu a2, t3, a1",
            "beqz a2, 0xefd8",
            "move v0, a3",
            "addu t3, t3, t0",
            "sltu a2, t3, t0",
            "bnez a2, 0xefd8",
            "addiu v0, a3, -1",
            "sltu a2, t3, a1",
            "beqz a2, 0xefdc",
            "sll t1, a0, 0x10",
            "addiu v0, a3, -2",
            "addu t3, t3, t0",
            "sll t1, a0, 0x10",
            "subu a1, t3, a1",
            "or t1, v0, t1",
            "srl v0, t0, 0x10",
            "bnez v0, 0xeff4",
            "divu zero, a1, v0",
            "break 7",
            "andi a3, t0, 0xffff",
            "srl t4, v1, 0x10",
            "mflo a2",
            "mfhi a0",
            "nop",
            "nop",
            "bnez v0, 0xf018",
            "divu zero, a1, v0",
            "break 7",
            "sll a1, a0, 0x10",
            "or a1, a1, t4",
            "mult a2, a3",
            "mflo t3",
            "sltu t4, a1, t3",
            "beqz t4, 0xf058",
            "move a0, a2",
            "addu a1, a1, t0",
            "sltu t4, a1, t0",
            "bnez t4, 0xf058",
            "addiu a0, a2, -1",
            "sltu t4, a1, t3",
            "beqz t4, 0xf058",
            "nop",
            "addiu a0, a2, -2",
            "addu a1, a1, t0",
            "subu a1, a1, t3",
            "bnez v0, 0xf068",
            "divu zero, a1, v0",
            "break 7",
            "andi v1, v1, 0xffff",
            "mflo a2",
            "mfhi t3",
            "sll t3, t3, 0x10",
            "or v1, t3, v1",
            "bnez v0, 0xf088",
            "divu zero, a1, v0",
            "break 7",
            "mult a2, a3",
            "mflo a3",
            "sltu a1, v1, a3",
            "beqz a1, 0xf0bc",
            "move v0, a2",
            "addu v1, v1, t0",
            "sltu t0, v1, t0",
            "bnez t0, 0xf0bc",
            "addiu v0, a2, -1",
            "sltu a3, v1, a3",
            "beqz a3, 0xf0bc",
            "nop",
            "addiu v0, a2, -2",
            "sll a3, a0, 0x10",
            "b 0xf294",
            "or a3, v0, a3",
            "sltu v1, a1, t4",
            "bnez v1, 0xf288",
            "move t1, zero",
            "lui v1, 1",
            "sltu v1, t4, v1",
            "beqz v1, 0xf0f4",
            "lui v1, 0x100",
            "sltiu t5, t4, 0x100",
            "sltiu t5, t5, 1",
            "b 0xf104",
            "sll t5, t5, 3",
            "sltu v1, t4, v1",
            "beqz v1, 0xf104",
            "addiu t5, zero, 0x18",
            "addiu t5, zero, 0x10",
            "lw a2, -0x7fa8(gp)",
            "srlv v1, t4, t5",
            "addiu t3, zero, 0x20",
            "addu v1, a2, v1",
            "lbu v1, (v1)",
            "nop",
            "addu t5, v1, t5",
            "subu t3, t3, t5",
            "bnez t3, 0xf14c",
            "sllv t0, t4, t3",
            "sltu a1, t4, a1",
            "bnez a1, 0xf290",
            "move t1, zero",
            "sltu v0, a0, v0",
            "beqz v0, 0xf290",
            "move a3, zero",
            "b 0xf298",
            "move v0, a3",
            "srlv v1, v0, t5",
            "or t0, t0, v1",
            "srlv t1, a1, t5",
            "srl v1, t0, 0x10",
            "bnez v1, 0xf168",
            "divu zero, t1, v1",
            "break 7",
            "sllv a1, a1, t3",
            "srlv t5, a0, t5",
            "or t5, a1, t5",
            "andi a1, t0, 0xffff",
            "sllv v0, v0, t3",
            "mflo t4",
            "mfhi a2",
            "sll a2, a2, 0x10",
            "nop",
            "bnez v1, 0xf198",
            "divu zero, t1, v1",
            "break 7",
            "srl t1, t5, 0x10",
            "or a2, a2, t1",
            "mult t4, a1",
            "mflo a3",
            "sltu t6, a2, a3",
            "beqz t6, 0xf1d8",
            "move t1, t4",
            "addu a2, a2, t0",
            "sltu t6, a2, t0",
            "bnez t6, 0xf1d8",
            "addiu t1, t4, -1",
            "sltu t6, a2, a3",
            "beqz t6, 0xf1d8",
            "nop",
            "addiu t1, t4, -2",
            "addu a2, a2, t0",
            "subu a3, a2, a3",
            "bnez v1, 0xf1e8",
            "divu zero, a3, v1",
            "break 7",
            "andi t5, t5, 0xffff",
            "mflo t4",
            "mfhi a2",
            "sll a2, a2, 0x10",
            "or a2, a2, t5",
            "bnez v1, 0xf208",
            "divu zero, a3, v1",
            "break 7",
            "mult t4, a1",
            "mflo a1",
            "sltu a3, a2, a1",
            "beqz a3, 0xf240",
            "move v1, t4",
            "addu a2, a2, t0",
            "sltu a3, a2, t0",
            "bnez a3, 0xf240",
            "addiu v1, t4, -1",
            "sltu a3, a2, a1",
            "beqz a3, 0xf244",
            "sll a3, t1, 0x10",
            "addiu v1, t4, -2",
            "addu a2, a2, t0",
            "sll a3, t1, 0x10",
            "or a3, v1, a3",
            "multu a3, v0",
            "subu a1, a2, a1",
            "mfhi v1",
            "sltu t0, a1, v1",
            "mflo v0",
            "bnez t0, 0xf27c",
            "nop",
            "bne v1, a1, 0xf294",
            "move t1, zero",
            "sllv a0, a0, t3",
            "sltu v0, a0, v0",
            "beqz v0, 0xf298",
            "move v0, a3",
            "addiu a3, a3, -1",
            "b 0xf294",
            "move t1, zero",
            "b 0xf294",
            "move a3, zero",
            "addiu a3, zero, 1",
            "move v0, a3",
            "beqz t2, 0xf2b0",
            "move v1, t1",
            "negu v0, a3",
            "sltu a0, zero, v0",
            "negu v1, t1",
            "subu v1, v1, a0",
            "jr ra",
            "nop"
        ]
    },
    "sym.avahi_simple_poll_prepare": {
        "function_address": "0x0000c48c",
        "instructions": [
            "lui gp, 2",
            "addiu gp, gp, -0x1cac",
            "addu gp, gp, t9",
            "addiu sp, sp, -0x40",
            "sw ra, 0x3c(sp)",
            "sw fp, 0x38(sp)",
            "move fp, sp",
            "sw gp, 0x10(sp)",
            "sw a0, 0x40(fp)",
            "sw a1, 0x44(fp)",
            "lw v0, 0x40(fp)",
            "nop",
            "bnez v0, 0xc500",
            "nop",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a0, v0, 0x1f30",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a1, v0, 0x1f34",
            "addiu a2, zero, 0x1c5",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a3, v0, 0x2150",
            "lw v0, -sym.imp.__assert(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw v0, 0x40(fp)",
            "nop",
            "lw v0, 0x64(v0)",
            "nop",
            "beqz v0, 0xc584",
            "nop",
            "lw v0, 0x40(fp)",
            "nop",
            "lw v1, 0x64(v0)",
            "addiu v0, zero, 6",
            "beq v1, v0, 0xc584",
            "nop",
            "lw v0, 0x40(fp)",
            "nop",
            "lw v1, 0x64(v0)",
            "addiu v0, zero, 8",
            "beq v1, v0, 0xc584",
            "nop",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a0, v0, 0x1ff0",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a1, v0, 0x1f34",
            "addiu a2, zero, 0x1c6",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a3, v0, 0x2150",
            "lw v0, -sym.imp.__assert(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw v0, 0x40(fp)",
            "addiu v1, zero, 1",
            "sw v1, 0x64(v0)",
            "lw a0, 0x40(fp)",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu v0, v0, -0x5ce4",
            "move t9, v0",
            "bal fcn.0000a31c",
            "nop",
            "lw gp, 0x10(fp)",
            "lw v0, 0x40(fp)",
            "nop",
            "lw v0, 0x38(v0)",
            "nop",
            "beqz v0, 0xc5ec",
            "nop",
            "lw a0, 0x40(fp)",
            "move a1, zero",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu v0, v0, -0x4fc0",
            "move t9, v0",
            "bal fcn.0000b040",
            "nop",
            "lw gp, 0x10(fp)",
            "lw v0, 0x40(fp)",
            "nop",
            "lw v0, 0x3c(v0)",
            "nop",
            "beqz v0, 0xc628",
            "nop",
            "lw a0, 0x40(fp)",
            "move a1, zero",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu v0, v0, -0x46fc",
            "move t9, v0",
            "bal fcn.0000b904",
            "nop",
            "lw gp, 0x10(fp)",
            "lw v0, 0x40(fp)",
            "nop",
            "lw v0, 0x40(v0)",
            "nop",
            "beqz v0, 0xc658",
            "nop",
            "lw v0, 0x40(fp)",
            "addiu v1, zero, 7",
            "sw v1, 0x64(v0)",
            "addiu v0, zero, 1",
            "b 0xc840",
            "nop",
            "lw v0, 0x40(fp)",
            "nop",
            "lw v0, 0x34(v0)",
            "nop",
            "beqz v0, 0xc6b0",
            "nop",
            "lw a0, 0x40(fp)",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu v0, v0, -0x4130",
            "move t9, v0",
            "bal fcn.0000bed0",
            "nop",
            "lw gp, 0x10(fp)",
            "bgez v0, 0xc6b0",
            "nop",
            "lw v0, 0x40(fp)",
            "addiu v1, zero, 8",
            "sw v1, 0x64(v0)",
            "addiu v0, zero, -1",
            "b 0xc840",
            "nop",
            "lw a0, 0x40(fp)",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu v0, v0, -0x3e48",
            "move t9, v0",
            "bal fcn.0000c1b8",
            "nop",
            "lw gp, 0x10(fp)",
            "sw v0, 0x18(fp)",
            "lw v0, 0x18(fp)",
            "nop",
            "beqz v0, 0xc820",
            "nop",
            "lw v0, 0x18(fp)",
            "nop",
            "lw v0, 0xc(v0)",
            "nop",
            "bnez v0, 0xc720",
            "nop",
            "lw v0, 0x18(fp)",
            "nop",
            "lw v0, 0x10(v0)",
            "nop",
            "bnez v0, 0xc720",
            "nop",
            "sw zero, 0x44(fp)",
            "b 0xc820",
            "nop",
            "addiu v0, fp, 0x2c",
            "move a0, v0",
            "move a1, zero",
            "lw v0, -sym.imp.gettimeofday(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "lw v0, 0x18(fp)",
            "nop",
            "addiu v1, v0, 0xc",
            "addiu v0, fp, 0x2c",
            "move a0, v1",
            "move a1, v0",
            "lw v0, -sym.avahi_timeval_diff(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "sw v0, 0x20(fp)",
            "sw v1, 0x24(fp)",
            "lw v0, 0x24(fp)",
            "nop",
            "bgtz v0, 0xc7b8",
            "nop",
            "lw v0, 0x24(fp)",
            "nop",
            "bnez v0, 0xc7ac",
            "nop",
            "lw v0, 0x20(fp)",
            "nop",
            "bnez v0, 0xc7b8",
            "nop",
            "sw zero, 0x44(fp)",
            "b 0xc820",
            "nop",
            "lw v0, 0x20(fp)",
            "lw v1, 0x24(fp)",
            "lw t0, -fcn.0000ecd0(gp)",
            "move a0, v0",
            "move a1, v1",
            "addiu a2, zero, 0x3e8",
            "move a3, zero",
            "move t9, t0",
            "bal fcn.0000ecd0",
            "nop",
            "lw gp, 0x10(fp)",
            "addiu v0, v0, 1",
            "sw v0, 0x28(fp)",
            "lw v0, 0x44(fp)",
            "nop",
            "bltz v0, 0xc814",
            "nop",
            "lw v1, 0x44(fp)",
            "lw v0, 0x28(fp)",
            "nop",
            "slt v0, v0, v1",
            "beqz v0, 0xc820",
            "nop",
            "lw v0, 0x28(fp)",
            "nop",
            "sw v0, 0x44(fp)",
            "lw v0, 0x40(fp)",
            "lw v1, 0x44(fp)",
            "nop",
            "sw v1, 0x60(v0)",
            "lw v0, 0x40(fp)",
            "addiu v1, zero, 2",
            "sw v1, 0x64(v0)",
            "move v0, zero",
            "move sp, fp",
            "lw ra, 0x3c(sp)",
            "lw fp, 0x38(sp)",
            "addiu sp, sp, 0x40",
            "jr ra",
            "nop"
        ]
    },
    "fcn.0000a31c": {
        "function_address": "0x0000a31c",
        "instructions": [
            "lui gp, 2",
            "addiu gp, gp, 0x4c4",
            "addu gp, gp, t9",
            "addiu sp, sp, -0x30",
            "sw ra, 0x2c(sp)",
            "sw fp, 0x28(sp)",
            "move fp, sp",
            "sw gp, 0x10(sp)",
            "sw a0, 0x30(fp)",
            "lw v0, 0x30(fp)",
            "nop",
            "lw v0, 0x5c(v0)",
            "nop",
            "beqz v0, 0xa3c0",
            "nop",
            "lw v0, 0x30(fp)",
            "nop",
            "sw zero, 0x5c(v0)",
            "b 0xa370",
            "nop",
            "nop",
            "lw v0, 0x30(fp)",
            "nop",
            "lw v0, 0x54(v0)",
            "nop",
            "move a0, v0",
            "addiu v0, fp, 0x18",
            "move a1, v0",
            "addiu a2, zero, 0xa",
            "lw v0, -sym.imp.read(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "move v1, v0",
            "addiu v0, zero, 0xa",
            "beq v1, v0, 0xa36c",
            "nop",
            "b 0xa3c4",
            "nop",
            "nop",
            "move sp, fp",
            "lw ra, 0x2c(sp)",
            "lw fp, 0x28(sp)",
            "addiu sp, sp, 0x30",
            "jr ra",
            "nop"
        ]
    },
    "fcn.0000bed0": {
        "function_address": "0x0000bed0",
        "instructions": [
            "lui gp, 2",
            "addiu gp, gp, -0x16f0",
            "addu gp, gp, t9",
            "addiu sp, sp, -0x30",
            "sw ra, 0x2c(sp)",
            "sw fp, 0x28(sp)",
            "move fp, sp",
            "sw gp, 0x10(sp)",
            "sw a0, 0x30(fp)",
            "lw v0, 0x30(fp)",
            "nop",
            "bnez v0, 0xbf40",
            "nop",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a0, v0, 0x1f30",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a1, v0, 0x1f34",
            "addiu a2, zero, 0x185",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a3, v0, 0x2194",
            "lw v0, -sym.imp.__assert(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw v0, 0x30(fp)",
            "nop",
            "lw v0, 0x48(v0)",
            "nop",
            "addiu v1, v0, 1",
            "lw v0, 0x30(fp)",
            "nop",
            "lw v0, 0x30(v0)",
            "nop",
            "slt v0, v0, v1",
            "beqz v0, 0xc000",
            "nop",
            "lw v0, 0x30(fp)",
            "nop",
            "lw v0, 0x48(v0)",
            "nop",
            "addiu v1, v0, 0xa",
            "lw v0, 0x30(fp)",
            "nop",
            "sw v1, 0x30(v0)",
            "lw v0, 0x30(fp)",
            "nop",
            "lw v1, 0x28(v0)",
            "lw v0, 0x30(fp)",
            "nop",
            "lw v0, 0x30(v0)",
            "nop",
            "sll v0, v0, 3",
            "move a0, v1",
            "move a1, v0",
            "lw v0, -sym.avahi_realloc(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "sw v0, 0x20(fp)",
            "lw v0, 0x20(fp)",
            "nop",
            "bnez v0, 0xbff0",
            "nop",
            "addiu v0, zero, -1",
            "b 0xc1a0",
            "nop",
            "lw v0, 0x30(fp)",
            "lw v1, 0x20(fp)",
            "nop",
            "sw v1, 0x28(v0)",
            "lw v0, 0x30(fp)",
            "nop",
            "lw v0, 0x28(v0)",
            "lw v1, 0x30(fp)",
            "nop",
            "lw v1, 0x54(v1)",
            "nop",
            "sw v1, (v0)",
            "lw v0, 0x30(fp)",
            "nop",
            "lw v0, 0x28(v0)",
            "addiu v1, zero, 1",
            "sh v1, 4(v0)",
            "lw v0, 0x30(fp)",
            "nop",
            "lw v0, 0x28(v0)",
            "nop",
            "sh zero, 6(v0)",
            "addiu v0, zero, 1",
            "sw v0, 0x1c(fp)",
            "lw v0, 0x30(fp)",
            "nop",
            "lw v0, 0x4c(v0)",
            "nop",
            "sw v0, 0x18(fp)",
            "b 0xc164",
            "nop",
            "lw v0, 0x18(fp)",
            "nop",
            "lw v0, 4(v0)",
            "nop",
            "bnez v0, 0xc14c",
            "nop",
            "lw v0, 0x18(fp)",
            "nop",
            "lw v1, 8(v0)",
            "lw v0, 0x30(fp)",
            "nop",
            "lw v0, 0x30(v0)",
            "nop",
            "slt v0, v1, v0",
            "bnez v0, 0xc0e8",
            "nop",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a0, v0, 0x1fcc",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a1, v0, 0x1f34",
            "addiu a2, zero, 0x19e",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a3, v0, 0x2194",
            "lw v0, -sym.imp.__assert(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw v0, 0x30(fp)",
            "nop",
            "lw v1, 0x28(v0)",
            "lw v0, 0x18(fp)",
            "lw a0, 0x1c(fp)",
            "nop",
            "sw a0, 8(v0)",
            "lw v0, 0x18(fp)",
            "nop",
            "lw v0, 8(v0)",
            "nop",
            "sll v0, v0, 3",
            "addu v0, v1, v0",
            "lw v1, 0x18(fp)",
            "nop",
            "lw a0, 0xc(v1)",
            "lw v1, 0x10(v1)",
            "sw a0, (v0)",
            "sw v1, 4(v0)",
            "lw v0, 0x1c(fp)",
            "nop",
            "addiu v0, v0, 1",
            "sw v0, 0x1c(fp)",
            "b 0xc150",
            "nop",
            "nop",
            "lw v0, 0x18(fp)",
            "nop",
            "lw v0, 0x1c(v0)",
            "nop",
            "sw v0, 0x18(fp)",
            "lw v0, 0x18(fp)",
            "nop",
            "bnez v0, 0xc06c",
            "nop",
            "lw v0, 0x30(fp)",
            "lw v1, 0x1c(fp)",
            "nop",
            "sw v1, 0x2c(v0)",
            "lw v0, 0x30(fp)",
            "nop",
            "sw zero, 0x44(v0)",
            "lw v0, 0x30(fp)",
            "nop",
            "sw zero, 0x34(v0)",
            "move v0, zero",
            "move sp, fp",
            "lw ra, 0x2c(sp)",
            "lw fp, 0x28(sp)",
            "addiu sp, sp, 0x30",
            "jr ra",
            "nop"
        ]
    },
    "sym.avahi_malloc": {
        "function_address": "0x00002508",
        "instructions": [
            "lui gp, 3",
            "addiu gp, gp, -0x7d28",
            "addu gp, gp, t9",
            "addiu sp, sp, -0x20",
            "sw ra, 0x1c(sp)",
            "sw fp, 0x18(sp)",
            "move fp, sp",
            "sw gp, 0x10(sp)",
            "sw a0, 0x20(fp)",
            "lw v0, 0x20(fp)",
            "nop",
            "bnez v0, 0x2548",
            "nop",
            "move v0, zero",
            "b 0x260c",
            "nop",
            "lw v0, -0x7fe8(gp)",
            "nop",
            "lw v0, 0x2a20(v0)",
            "nop",
            "bnez v0, 0x2588",
            "nop",
            "lw a0, 0x20(fp)",
            "lw v0, -0x7fd8(gp)",
            "nop",
            "addiu v0, v0, fcn.000022e0",
            "move t9, v0",
            "bal fcn.000022e0",
            "nop",
            "lw gp, 0x10(fp)",
            "b 0x260c",
            "nop",
            "lw v0, -0x7fe8(gp)",
            "nop",
            "lw v0, 0x2a20(v0)",
            "nop",
            "lw v0, (v0)",
            "nop",
            "bnez v0, 0x25e4",
            "nop",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a0, v0, 0x10a0",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a1, v0, 0x10b4",
            "addiu a2, zero, 0x6d",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a3, v0, 0x1178",
            "lw v0, -sym.imp.__assert(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw v0, -0x7fe8(gp)",
            "nop",
            "lw v0, 0x2a20(v0)",
            "nop",
            "lw v0, (v0)",
            "lw a0, 0x20(fp)",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "move sp, fp",
            "lw ra, 0x1c(sp)",
            "lw fp, 0x18(sp)",
            "addiu sp, sp, 0x20",
            "jr ra",
            "nop"
        ]
    },
    "fcn.000022e0": {
        "function_address": "0x000022e0",
        "instructions": [
            "lui gp, 3",
            "addiu gp, gp, -sym.avahi_normalize_name_strdup",
            "addu gp, gp, t9",
            "addiu sp, sp, -0x28",
            "sw ra, 0x24(sp)",
            "sw fp, 0x20(sp)",
            "move fp, sp",
            "sw gp, 0x10(sp)",
            "sw a0, 0x28(fp)",
            "lw v0, 0x28(fp)",
            "nop",
            "bnez v0, 0x2320",
            "nop",
            "move v0, zero",
            "b 0x236c",
            "nop",
            "lw a0, 0x28(fp)",
            "lw v0, -sym.imp.malloc(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "sw v0, 0x18(fp)",
            "lw v0, 0x18(fp)",
            "nop",
            "bnez v0, 0x2368",
            "nop",
            "lw v0, -0x7fd8(gp)",
            "nop",
            "addiu v0, v0, fcn.00002208",
            "move t9, v0",
            "bal fcn.00002208",
            "nop",
            "lw v0, 0x18(fp)",
            "move sp, fp",
            "lw ra, 0x24(sp)",
            "lw fp, 0x20(sp)",
            "addiu sp, sp, 0x28",
            "jr ra",
            "nop"
        ]
    },
    "sym.avahi_realloc": {
        "function_address": "0x000028fc",
        "instructions": [
            "lui gp, 2",
            "addiu gp, gp, 0x7ee4",
            "addu gp, gp, t9",
            "addiu sp, sp, -0x20",
            "sw ra, 0x1c(sp)",
            "sw fp, 0x18(sp)",
            "move fp, sp",
            "sw gp, 0x10(sp)",
            "sw a0, 0x20(fp)",
            "sw a1, 0x24(fp)",
            "lw v0, 0x24(fp)",
            "nop",
            "bnez v0, 0x295c",
            "nop",
            "lw a0, 0x20(fp)",
            "lw v0, -sym.avahi_free(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "move v0, zero",
            "b 0x2a28",
            "nop",
            "lw v0, -0x7fe8(gp)",
            "nop",
            "lw v0, 0x2a20(v0)",
            "nop",
            "bnez v0, 0x29a0",
            "nop",
            "lw a0, 0x20(fp)",
            "lw a1, 0x24(fp)",
            "lw v0, -0x7fd8(gp)",
            "nop",
            "addiu v0, v0, fcn.00002384",
            "move t9, v0",
            "bal fcn.00002384",
            "nop",
            "lw gp, 0x10(fp)",
            "b 0x2a28",
            "nop",
            "lw v0, -0x7fe8(gp)",
            "nop",
            "lw v0, 0x2a20(v0)",
            "nop",
            "lw v0, 8(v0)",
            "nop",
            "bnez v0, 0x29fc",
            "nop",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a0, v0, 0x10e0",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a1, v0, 0x10b4",
            "addiu a2, zero, 0x9c",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a3, v0, 0x114c",
            "lw v0, -sym.imp.__assert(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw v0, -0x7fe8(gp)",
            "nop",
            "lw v0, 0x2a20(v0)",
            "nop",
            "lw v0, 8(v0)",
            "lw a0, 0x20(fp)",
            "lw a1, 0x24(fp)",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "move sp, fp",
            "lw ra, 0x1c(sp)",
            "lw fp, 0x18(sp)",
            "addiu sp, sp, 0x20",
            "jr ra",
            "nop"
        ]
    },
    "fcn.00002384": {
        "function_address": "0x00002384",
        "instructions": [
            "lui gp, 3",
            "addiu gp, gp, -0x7ba4",
            "addu gp, gp, t9",
            "addiu sp, sp, -0x20",
            "sw ra, 0x1c(sp)",
            "sw fp, 0x18(sp)",
            "move fp, sp",
            "sw gp, 0x10(sp)",
            "sw a0, 0x20(fp)",
            "sw a1, 0x24(fp)",
            "lw v0, 0x24(fp)",
            "nop",
            "bnez v0, 0x23e4",
            "nop",
            "lw a0, 0x20(fp)",
            "lw v0, -sym.imp.free(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "move v0, zero",
            "b 0x2434",
            "nop",
            "lw a0, 0x20(fp)",
            "lw a1, 0x24(fp)",
            "lw v0, -sym.imp.realloc(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "sw v0, 0x20(fp)",
            "lw v0, 0x20(fp)",
            "nop",
            "bnez v0, 0x2430",
            "nop",
            "lw v0, -0x7fd8(gp)",
            "nop",
            "addiu v0, v0, fcn.00002208",
            "move t9, v0",
            "bal fcn.00002208",
            "nop",
            "lw v0, 0x20(fp)",
            "move sp, fp",
            "lw ra, 0x1c(sp)",
            "lw fp, 0x18(sp)",
            "addiu sp, sp, 0x20",
            "jr ra",
            "nop"
        ]
    },
    "fcn.00002208": {
        "function_address": "0x00002208",
        "instructions": [
            "lui gp, 3",
            "addiu gp, gp, -0x7a28",
            "addu gp, gp, t9",
            "addiu sp, sp, -0x28",
            "sw ra, 0x24(sp)",
            "sw fp, 0x20(sp)",
            "move fp, sp",
            "sw gp, 0x10(sp)",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu v0, v0, 0x1188",
            "sw v0, 0x18(fp)",
            "b 0x22a8",
            "nop",
            "lw a0, 0x18(fp)",
            "lw v0, -sym.imp.strlen(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "addiu a0, zero, 2",
            "lw a1, 0x18(fp)",
            "move a2, v0",
            "lw v0, -sym.imp.write(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "sw v0, 0x1c(fp)",
            "lw v0, 0x1c(fp)",
            "nop",
            "bltz v0, 0x22c8",
            "nop",
            "lw v0, 0x1c(fp)",
            "lw v1, 0x18(fp)",
            "nop",
            "addu v0, v1, v0",
            "sw v0, 0x18(fp)",
            "lw v0, 0x18(fp)",
            "nop",
            "lb v0, (v0)",
            "nop",
            "bnez v0, 0x2240",
            "nop",
            "b 0x22cc",
            "nop",
            "nop",
            "lw v0, -sym.imp.abort(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop"
        ]
    },
    "fcn.000105f0": {
        "function_address": "0x000105f0",
        "instructions": [
            "lui gp, 2",
            "addiu gp, gp, -0x5e10",
            "addu gp, gp, t9",
            "lui v0, 1",
            "sltu v0, a0, v0",
            "beqz v0, 0x10618",
            "sltiu v1, a0, 0x100",
            "sltiu v1, v1, 1",
            "b 0x1062c",
            "sll v1, v1, 3",
            "lui v0, 0x100",
            "sltu v0, a0, v0",
            "beqz v0, 0x1062c",
            "addiu v1, zero, 0x18",
            "addiu v1, zero, 0x10",
            "addiu v0, zero, 0x20",
            "subu v0, v0, v1",
            "srlv v1, a0, v1",
            "lw a0, -0x7fa8(gp)",
            "nop",
            "addu v1, a0, v1",
            "lbu v1, (v1)",
            "jr ra",
            "subu v0, v0, v1"
        ]
    },
    "fcn.000105a0": {
        "function_address": "0x000105a0",
        "instructions": [
            "beqz a2, 0x105dc",
            "move v0, a0",
            "addiu v1, zero, 0x20",
            "subu v1, v1, a2",
            "bgtz v1, 0x105c8",
            "nop",
            "negu a1, v1",
            "move a0, zero",
            "b 0x105d8",
            "sllv a1, v0, a1",
            "srlv v0, v0, v1",
            "sllv a1, a1, a2",
            "sllv a0, a0, a2",
            "or a1, v0, a1",
            "move v0, a0",
            "jr ra",
            "move v1, a1"
        ]
    },
    "fcn.00010560": {
        "function_address": "0x00010560",
        "instructions": [
            "beqz a2, 0x10598",
            "move v0, a0",
            "addiu v1, zero, 0x20",
            "subu v1, v1, a2",
            "bgtz v1, 0x10584",
            "move a0, zero",
            "negu v0, v1",
            "b 0x10594",
            "srlv v0, a1, v0",
            "srlv a0, a1, a2",
            "srlv v0, v0, a2",
            "sllv a1, a1, v1",
            "or v0, a1, v0",
            "move a1, a0",
            "jr ra",
            "move v1, a1"
        ]
    },
    "fcn.00010700": {
        "function_address": "0x00010700",
        "instructions": [
            "lui gp, 2",
            "addiu gp, gp, -0x5f20",
            "addu gp, gp, t9",
            "lw v0, (a0)",
            "addiu sp, sp, -0x40",
            "sw s5, 0x30(sp)",
            "sw gp, 0x10(sp)",
            "sw ra, 0x3c(sp)",
            "sw s7, 0x38(sp)",
            "sw s6, 0x34(sp)",
            "sw s4, 0x2c(sp)",
            "sw s3, 0x28(sp)",
            "sw s2, 0x24(sp)",
            "sw s1, 0x20(sp)",
            "sw s0, 0x1c(sp)",
            "sltiu v1, v0, 2",
            "lw s0, 0x10(a0)",
            "lw s1, 0x14(a0)",
            "lw s5, 4(a0)",
            "beqz v1, 0x10770",
            "addiu v1, zero, 4",
            "lui v0, 7",
            "ori v0, v0, 0xffff",
            "or v0, s1, v0",
            "addiu s0, zero, -1",
            "move s1, v0",
            "b 0x108e0",
            "addiu s4, zero, 0x7ff",
            "beq v0, v1, 0x108d4",
            "addiu v1, zero, 2",
            "beq v0, v1, 0x108cc",
            "or v0, s0, s1",
            "beqz v0, 0x108e0",
            "move s4, zero",
            "lw s4, 8(a0)",
            "nop",
            "slti v0, s4, -0x3fe",
            "beqz v0, 0x10858",
            "slti v0, s4, 0x400",
            "addiu v0, zero, -0x3fe",
            "subu s4, v0, s4",
            "slti v0, s4, 0x39",
            "move s2, zero",
            "beqz v0, 0x1080c",
            "move s3, zero",
            "lw t9, -fcn.00010560(gp)",
            "move a0, s0",
            "move a1, s1",
            "bal fcn.00010560",
            "move a2, s4",
            "lw gp, 0x10(sp)",
            "addiu a0, zero, 1",
            "move a1, zero",
            "lw t9, -fcn.000105a0(gp)",
            "move a2, s4",
            "move s7, v0",
            "bal fcn.000105a0",
            "move s6, v1",
            "addiu a0, v0, -1",
            "sltiu v0, v0, 1",
            "subu v1, v1, v0",
            "and a0, a0, s0",
            "and v1, v1, s1",
            "or a0, a0, v1",
            "sltu a0, zero, a0",
            "or s2, a0, s7",
            "move s3, s6",
            "andi v1, s2, 0xff",
            "addiu v0, zero, 0x80",
            "bne v1, v0, 0x10828",
            "addiu v0, s2, 0x7f",
            "andi v0, s2, 0x100",
            "beqz v0, 0x10838",
            "addiu v0, s2, 0x80",
            "sltu v1, v0, s2",
            "addu v1, v1, s3",
            "move s2, v0",
            "move s3, v1",
            "lui s4, 0x1000",
            "sltu s4, s3, s4",
            "sll v0, s3, 0x18",
            "srl s0, s2, 8",
            "xori s4, s4, 1",
            "or s0, v0, s0",
            "b 0x108e0",
            "srl s1, s3, 8",
            "beqz v0, 0x108d4",
            "andi v1, s0, 0xff",
            "addiu v0, zero, 0x80",
            "bne v1, v0, 0x10878",
            "addiu v0, s0, 0x7f",
            "andi v0, s0, 0x100",
            "beqz v0, 0x10888",
            "addiu v0, s0, 0x80",
            "sltu v1, v0, s0",
            "addu v1, v1, s1",
            "move s0, v0",
            "move s1, v1",
            "lui v0, 0x2000",
            "sltu v0, s1, v0",
            "beqz v0, 0x108a0",
            "sll a0, s1, 0x1f",
            "b 0x108b4",
            "addiu s4, s4, 0x3ff",
            "srl v1, s0, 1",
            "srl v0, s1, 1",
            "or s0, a0, v1",
            "move s1, v0",
            "addiu s4, s4, 0x400",
            "sll a0, s1, 0x18",
            "srl v1, s0, 8",
            "srl v0, s1, 8",
            "or s0, a0, v1",
            "b 0x108e0",
            "move s1, v0",
            "b 0x108d8",
            "move s4, zero",
            "addiu s4, zero, 0x7ff",
            "move s0, zero",
            "move s1, zero",
            "andi s4, s4, 0x7ff",
            "sll v0, s4, 0x14",
            "lui s4, 0xf",
            "ori s4, s4, 0xffff",
            "and s4, s4, s1",
            "lw ra, 0x3c(sp)",
            "or s4, s4, v0",
            "sll s5, s5, 0x1f",
            "or a0, s4, s5",
            "move v0, s0",
            "move v1, a0",
            "lw s7, 0x38(sp)",
            "lw s6, 0x34(sp)",
            "lw s5, 0x30(sp)",
            "lw s4, 0x2c(sp)",
            "lw s3, 0x28(sp)",
            "lw s2, 0x24(sp)",
            "lw s1, 0x20(sp)",
            "lw s0, 0x1c(sp)",
            "jr ra",
            "addiu sp, sp, 0x40"
        ]
    },
    "fcn.00010940": {
        "function_address": "0x00010940",
        "instructions": [
            "lw a2, 4(a0)",
            "lui v1, 0xf",
            "lw v0, (a0)",
            "ori v1, v1, 0xffff",
            "srl a0, a2, 0x14",
            "and v1, a2, v1",
            "andi a0, a0, 0x7ff",
            "srl a2, a2, 0x1f",
            "bnez a0, 0x109c4",
            "sw a2, 4(a1)",
            "or a0, v0, v1",
            "bnez a0, 0x1097c",
            "addiu a0, zero, -0x3fe",
            "b 0x109e0",
            "addiu v0, zero, 2",
            "sw a0, 8(a1)",
            "sll v1, v1, 8",
            "srl a0, v0, 0x18",
            "or v1, a0, v1",
            "addiu a0, zero, 3",
            "sw a0, (a1)",
            "sll v0, v0, 8",
            "lui a0, 0x1000",
            "sltu a2, v1, a0",
            "beqz a2, 0x109f4",
            "srl a2, v0, 0x1f",
            "sll v1, v1, 1",
            "or v1, a2, v1",
            "lw a2, 8(a1)",
            "sll v0, v0, 1",
            "addiu a2, a2, -1",
            "b 0x1099c",
            "sw a2, 8(a1)",
            "addiu a2, zero, 0x7ff",
            "bne a0, a2, 0x109fc",
            "addiu a0, a0, -0x3ff",
            "or a0, v0, v1",
            "bnez a0, 0x109e8",
            "lui a0, 8",
            "addiu v0, zero, 4",
            "jr ra",
            "sw v0, (a1)",
            "and a0, a0, v1",
            "sltiu a0, a0, 1",
            "sw a0, (a1)",
            "b 0x10a24",
            "sw v0, 0x10(a1)",
            "sw a0, 8(a1)",
            "addiu a0, zero, 3",
            "sw a0, (a1)",
            "sll v1, v1, 8",
            "srl a0, v0, 0x18",
            "sll v0, v0, 8",
            "or v1, a0, v1",
            "sw v0, 0x10(a1)",
            "lui v0, 0x1000",
            "or v1, v0, v1",
            "sw v1, 0x14(a1)",
            "jr ra",
            "nop"
        ]
    },
    "fcn.000102c0": {
        "function_address": "0x000102c0",
        "instructions": [
            "lui gp, 2",
            "addiu gp, gp, -0x5ae0",
            "addu gp, gp, t9",
            "lw t9, -fcn.00010940(gp)",
            "addiu sp, sp, -0x60",
            "sw gp, 0x10(sp)",
            "sw ra, 0x5c(sp)",
            "sw a0, 0x20(sp)",
            "sw a1, 0x24(sp)",
            "sw a2, 0x18(sp)",
            "sw a3, 0x1c(sp)",
            "addiu a0, sp, 0x20",
            "bal fcn.00010940",
            "addiu a1, sp, 0x40",
            "lw gp, 0x10(sp)",
            "addiu a0, sp, 0x18",
            "lw t9, -fcn.00010940(gp)",
            "nop",
            "bal fcn.00010940",
            "addiu a1, sp, 0x28",
            "lw v1, 0x40(sp)",
            "lw gp, 0x10(sp)",
            "sltiu v1, v1, 2",
            "bnez v1, 0x10348",
            "addiu v0, zero, 1",
            "lw v1, 0x28(sp)",
            "nop",
            "sltiu v1, v1, 2",
            "bnez v1, 0x10348",
            "addiu a0, sp, 0x40",
            "lw t9, -fcn.00010a30(gp)",
            "nop",
            "bal fcn.00010a30",
            "addiu a1, sp, 0x28",
            "lw ra, 0x5c(sp)",
            "nop",
            "jr ra",
            "addiu sp, sp, 0x60"
        ]
    },
    "unk.0xebf0": {
        "function_address": "0x0000ebf0",
        "instructions": [
            "lui gp, 2",
            "addiu gp, gp, -0x4370",
            "addu gp, gp, t9",
            "addiu sp, sp, -0x28",
            "lw t9, -fcn.000102c0(gp)",
            "sw s1, 0x20(sp)",
            "sw s0, 0x1c(sp)",
            "move s1, a0",
            "move s0, a1",
            "sw gp, 0x10(sp)",
            "sw ra, 0x24(sp)",
            "move a0, s1",
            "move a1, s0",
            "move a2, zero",
            "bal fcn.000102c0",
            "move a3, zero",
            "lw gp, 0x10(sp)",
            "nop",
            "lw t9, -0x7fb4(gp)",
            "bgez v0, 0xebd8",
            "move a0, s1",
            "lui v0, 0x8000",
            "xor v0, v0, s0",
            "bal 0xebf0",
            "move a1, v0",
            "lw ra, 0x24(sp)",
            "negu v0, v0",
            "sltu a0, zero, v0",
            "negu v1, v1",
            "subu v1, v1, a0",
            "lw s1, 0x20(sp)",
            "lw s0, 0x1c(sp)",
            "jr ra",
            "addiu sp, sp, 0x28",
            "move a1, s0",
            "lw ra, 0x24(sp)",
            "lw s1, 0x20(sp)",
            "lw s0, 0x1c(sp)",
            "b 0xebf0",
            "addiu sp, sp, 0x28",
            "lui gp, 2",
            "addiu gp, gp, -0x4410",
            "addu gp, gp, t9",
            "lw v0, -0x7fdc(gp)",
            "lw t9, -fcn.0000fd80(gp)",
            "addiu sp, sp, -0x28",
            "lw a2, 0x2550(v0)",
            "lw a3, 0x2554(v0)",
            "sw ra, 0x24(sp)",
            "sw gp, 0x10(sp)",
            "sw s2, 0x20(sp)",
            "sw s1, 0x1c(sp)",
            "sw s0, 0x18(sp)",
            "move s0, a0",
            "bal fcn.0000fd80",
            "move s1, a1",
            "lw gp, 0x10(sp)",
            "move a1, v1",
            "lw t9, -fcn.00010650(gp)",
            "nop",
            "bal fcn.00010650",
            "move a0, v0",
            "lw gp, 0x10(sp)",
            "move a0, v0",
            "lw t9, -fcn.00010440(gp)",
            "nop",
            "bal fcn.00010440",
            "move s2, v0",
            "lw gp, 0x10(sp)",
            "move a0, v0",
            "lw v0, -0x7fdc(gp)",
            "lw t9, -fcn.0000fd80(gp)",
            "lw a2, 0x2558(v0)",
            "lw a3, 0x255c(v0)",
            "bal fcn.0000fd80",
            "move a1, v1",
            "lw gp, 0x10(sp)",
            "move a0, s0",
            "move a1, s1",
            "lw t9, -fcn.0000fcdc(gp)",
            "move a2, v0",
            "bal fcn.0000fcdc",
            "move a3, v1",
            "lw gp, 0x10(sp)",
            "move a1, v1",
            "lw t9, -fcn.00010650(gp)",
            "nop",
            "bal fcn.00010650",
            "move a0, v0",
            "lw ra, 0x24(sp)",
            "move v1, s2",
            "lw s1, 0x1c(sp)",
            "lw s2, 0x20(sp)",
            "lw s0, 0x18(sp)",
            "jr ra",
            "addiu sp, sp, 0x28"
        ]
    },
    "fcn.00010650": {
        "function_address": "0x00010650",
        "instructions": [
            "lui gp, 2",
            "addiu gp, gp, -0x5e70",
            "addu gp, gp, t9",
            "addiu sp, sp, -0x28",
            "sw s2, 0x20(sp)",
            "lw s2, -0x7fdc(gp)",
            "lw t9, -fcn.00010b50(gp)",
            "sw gp, 0x10(sp)",
            "lw a2, 0x2690(s2)",
            "lw a3, 0x2694(s2)",
            "sw s1, 0x1c(sp)",
            "sw s0, 0x18(sp)",
            "sw ra, 0x24(sp)",
            "move s0, a0",
            "bal fcn.00010b50",
            "move s1, a1",
            "lw gp, 0x10(sp)",
            "bltz v0, 0x106d4",
            "move a0, s0",
            "lw t9, -fcn.0000fcdc(gp)",
            "lw a2, 0x2690(s2)",
            "lw a3, 0x2694(s2)",
            "bal fcn.0000fcdc",
            "move a1, s1",
            "lw gp, 0x10(sp)",
            "move a1, v1",
            "lw t9, -fcn.00010bf0(gp)",
            "nop",
            "bal fcn.00010bf0",
            "move a0, v0",
            "lui v1, 0x8000",
            "b 0x106e4",
            "addu v0, v0, v1",
            "lw t9, -fcn.00010bf0(gp)",
            "nop",
            "bal fcn.00010bf0",
            "move a1, s1",
            "lw ra, 0x24(sp)",
            "lw s2, 0x20(sp)",
            "lw s1, 0x1c(sp)",
            "lw s0, 0x18(sp)",
            "jr ra",
            "addiu sp, sp, 0x28"
        ]
    },
    "fcn.0000fcdc": {
        "function_address": "0x0000fcdc",
        "instructions": [
            "lui gp, 2",
            "addiu gp, gp, -0x54fc",
            "addu gp, gp, t9",
            "lw t9, -fcn.00010940(gp)",
            "addiu sp, sp, -0x78",
            "sw ra, 0x74(sp)",
            "sw a3, 0x1c(sp)",
            "sw gp, 0x10(sp)",
            "sw a2, 0x18(sp)",
            "sw a0, 0x20(sp)",
            "sw a1, 0x24(sp)",
            "addiu a0, sp, 0x20",
            "bal fcn.00010940",
            "addiu a1, sp, 0x58",
            "lw gp, 0x10(sp)",
            "addiu a0, sp, 0x18",
            "lw t9, -fcn.00010940(gp)",
            "nop",
            "bal fcn.00010940",
            "addiu a1, sp, 0x40",
            "lw gp, 0x10(sp)",
            "lw v0, 0x44(sp)",
            "addiu a1, sp, 0x40",
            "lw t9, -0x7fdc(gp)",
            "xori v0, v0, 1",
            "addiu a2, sp, 0x28",
            "addiu a0, sp, 0x58",
            "addiu t9, t9, -0x760",
            "bal fcn.0000f8a0",
            "sw v0, 0x44(sp)",
            "lw gp, 0x10(sp)",
            "nop",
            "lw t9, -fcn.00010700(gp)",
            "nop",
            "bal fcn.00010700",
            "move a0, v0",
            "lw ra, 0x74(sp)",
            "nop",
            "jr ra",
            "addiu sp, sp, 0x78"
        ]
    },
    "fcn.00010a30": {
        "function_address": "0x00010a30",
        "instructions": [
            "lw a2, (a0)",
            "nop",
            "sltiu v1, a2, 2",
            "bnez v1, 0x10b48",
            "addiu v0, zero, 1",
            "lw v1, (a1)",
            "nop",
            "sltiu a3, v1, 2",
            "bnez a3, 0x10b48",
            "nop",
            "addiu v0, zero, 4",
            "bne a2, v0, 0x10a7c",
            "nop",
            "lw v0, 4(a0)",
            "bne v1, a2, 0x10b14",
            "nop",
            "lw v1, 4(a1)",
            "jr ra",
            "subu v0, v1, v0",
            "beq v1, v0, 0x10a98",
            "nop",
            "addiu a3, zero, 2",
            "bne a2, a3, 0x10aa4",
            "nop",
            "beq v1, a2, 0x10b48",
            "move v0, zero",
            "lw v0, 4(a1)",
            "b 0x10b18",
            "sltiu v0, v0, 1",
            "lw v0, 4(a0)",
            "beq v1, a3, 0x10b14",
            "nop",
            "lw v1, 4(a1)",
            "nop",
            "bne v0, v1, 0x10b14",
            "nop",
            "lw a2, 8(a0)",
            "lw v1, 8(a1)",
            "nop",
            "slt a3, v1, a2",
            "bnez a3, 0x10b14",
            "nop",
            "slt v1, a2, v1",
            "bnez v1, 0x10b3c",
            "nop",
            "lw v1, 0x14(a0)",
            "lw a2, 0x10(a0)",
            "lw a0, 0x14(a1)",
            "lw a3, 0x10(a1)",
            "sltu a1, a0, v1",
            "bnez a1, 0x10b14",
            "nop",
            "bne v1, a0, 0x10b24",
            "sltu a1, v1, a0",
            "sltu a1, a3, a2",
            "beqz a1, 0x10b24",
            "sltu a1, v1, a0",
            "sltu v0, zero, v0",
            "negu v0, v0",
            "jr ra",
            "ori v0, v0, 1",
            "bnez a1, 0x10b3c",
            "nop",
            "bne a0, v1, 0x10b44",
            "sltu a2, a2, a3",
            "beqz a2, 0x10b44",
            "nop",
            "b 0x10b18",
            "sltiu v0, v0, 1",
            "move v0, zero",
            "jr ra",
            "nop"
        ]
    },
    "fcn.00010b50": {
        "function_address": "0x00010b50",
        "instructions": [
            "lui gp, 2",
            "addiu gp, gp, -0x6370",
            "addu gp, gp, t9",
            "lw t9, -fcn.00010940(gp)",
            "addiu sp, sp, -0x60",
            "sw gp, 0x10(sp)",
            "sw ra, 0x5c(sp)",
            "sw a0, 0x20(sp)",
            "sw a1, 0x24(sp)",
            "sw a2, 0x18(sp)",
            "sw a3, 0x1c(sp)",
            "addiu a0, sp, 0x20",
            "bal fcn.00010940",
            "addiu a1, sp, 0x40",
            "lw gp, 0x10(sp)",
            "addiu a0, sp, 0x18",
            "lw t9, -fcn.00010940(gp)",
            "nop",
            "bal fcn.00010940",
            "addiu a1, sp, 0x28",
            "lw v1, 0x40(sp)",
            "lw gp, 0x10(sp)",
            "sltiu v1, v1, 2",
            "bnez v1, 0x10bd8",
            "addiu v0, zero, -1",
            "lw v1, 0x28(sp)",
            "nop",
            "sltiu v1, v1, 2",
            "bnez v1, 0x10bd8",
            "addiu a0, sp, 0x40",
            "lw t9, -fcn.00010a30(gp)",
            "nop",
            "bal fcn.00010a30",
            "addiu a1, sp, 0x28",
            "lw ra, 0x5c(sp)",
            "nop",
            "jr ra",
            "addiu sp, sp, 0x60"
        ]
    },
    "fcn.00010bf0": {
        "function_address": "0x00010bf0",
        "instructions": [
            "lui gp, 2",
            "addiu gp, gp, -0x6410",
            "addu gp, gp, t9",
            "lw t9, -fcn.00010940(gp)",
            "addiu sp, sp, -0x40",
            "sw gp, 0x10(sp)",
            "sw a0, 0x18(sp)",
            "sw a1, 0x1c(sp)",
            "addiu a0, sp, 0x18",
            "sw ra, 0x3c(sp)",
            "bal fcn.00010940",
            "addiu a1, sp, 0x20",
            "lw v1, 0x20(sp)",
            "addiu a0, zero, 2",
            "lw gp, 0x10(sp)",
            "beq v1, a0, 0x10cb0",
            "move v0, zero",
            "sltiu a0, v1, 2",
            "bnez a0, 0x10cb0",
            "addiu a0, zero, 4",
            "beq v1, a0, 0x10c64",
            "nop",
            "lw v1, 0x28(sp)",
            "nop",
            "bltz v1, 0x10cb0",
            "nop",
            "slti v0, v1, 0x1f",
            "bnez v0, 0x10c7c",
            "addiu a2, zero, 0x3c",
            "lw v0, 0x24(sp)",
            "nop",
            "beqz v0, 0x10ca8",
            "lui v0, 0x8000",
            "b 0x10cb0",
            "nop",
            "lw t9, -fcn.00010560(gp)",
            "lw a0, 0x30(sp)",
            "lw a1, 0x34(sp)",
            "bal fcn.00010560",
            "subu a2, a2, v1",
            "lw v1, 0x24(sp)",
            "nop",
            "beqz v1, 0x10cb0",
            "nop",
            "b 0x10cb0",
            "negu v0, v0",
            "lui v0, 0x7fff",
            "ori v0, v0, 0xffff",
            "lw ra, 0x3c(sp)",
            "nop",
            "jr ra",
            "addiu sp, sp, 0x40"
        ]
    },
    "fcn.0000f8a0": {
        "function_address": "0x0000f8a0",
        "instructions": [
            "lui gp, 2",
            "addiu gp, gp, -0x50c0",
            "addu gp, gp, t9",
            "lw v0, (a0)",
            "addiu sp, sp, -0x48",
            "sw gp, 0x10(sp)",
            "sltiu v1, v0, 2",
            "sw s4, 0x30(sp)",
            "sw s3, 0x2c(sp)",
            "sw s2, 0x28(sp)",
            "sw ra, 0x44(sp)",
            "sw fp, 0x40(sp)",
            "sw s7, 0x3c(sp)",
            "sw s6, 0x38(sp)",
            "sw s5, 0x34(sp)",
            "sw s1, 0x24(sp)",
            "sw s0, 0x20(sp)",
            "move s3, a0",
            "move s4, a1",
            "bnez v1, 0xfc10",
            "move s2, a2",
            "lw v1, (a1)",
            "nop",
            "sltiu a0, v1, 2",
            "bnez a0, 0xfc0c",
            "addiu a0, zero, 4",
            "bne v0, a0, 0xf934",
            "nop",
            "bne v1, v0, 0xfc10",
            "nop",
            "lw v1, 4(s3)",
            "lw v0, 4(a1)",
            "nop",
            "bne v1, v0, 0xfc00",
            "nop",
            "b 0xfc10",
            "nop",
            "beq v1, a0, 0xfc0c",
            "addiu a0, zero, 2",
            "bne v1, a0, 0xf974",
            "nop",
            "bne v0, v1, 0xfc10",
            "move a0, a2",
            "lw t9, -sym.imp.memcpy(gp)",
            "move a1, s3",
            "jalr t9",
            "addiu a2, zero, 0x18",
            "lw v1, 4(s4)",
            "lw v0, 4(s3)",
            "nop",
            "and v0, v1, v0",
            "b 0xfbf8",
            "sw v0, 4(s2)",
            "beq v0, a0, 0xfc0c",
            "nop",
            "lw s5, 8(s3)",
            "lw v1, 8(a1)",
            "lw t0, 0x10(s3)",
            "lw t1, 0x14(s3)",
            "subu v0, s5, v1",
            "sra a0, v0, 0x1f",
            "xor s6, a0, v0",
            "subu s6, s6, a0",
            "slti a0, s6, 0x40",
            "lw s0, 0x10(a1)",
            "lw s1, 0x14(a1)",
            "beqz a0, 0xfa94",
            "nop",
            "blez v0, 0xfa20",
            "move a0, s0",
            "lw t9, -fcn.00010560(gp)",
            "move a1, s1",
            "sw t0, 0x18(sp)",
            "sw t1, 0x1c(sp)",
            "bal fcn.00010560",
            "move a2, s6",
            "lw gp, 0x10(sp)",
            "addiu a0, zero, 1",
            "move a1, zero",
            "lw t9, -fcn.000105a0(gp)",
            "move a2, s6",
            "move s7, v0",
            "bal fcn.000105a0",
            "move fp, v1",
            "addiu a0, v0, -1",
            "sltiu v0, v0, 1",
            "subu v1, v1, v0",
            "and a0, a0, s0",
            "and v1, v1, s1",
            "or a0, a0, v1",
            "sltu a0, zero, a0",
            "or s0, a0, s7",
            "lw t0, 0x18(sp)",
            "lw t1, 0x1c(sp)",
            "b 0xfab8",
            "move s1, fp",
            "beqz v0, 0xfab8",
            "move a0, t0",
            "lw t9, -fcn.00010560(gp)",
            "move a1, t1",
            "sw t0, 0x18(sp)",
            "sw t1, 0x1c(sp)",
            "bal fcn.00010560",
            "move a2, s6",
            "lw gp, 0x10(sp)",
            "addiu a0, zero, 1",
            "move a1, zero",
            "lw t9, -fcn.000105a0(gp)",
            "move a2, s6",
            "move s7, v0",
            "bal fcn.000105a0",
            "move fp, v1",
            "lw t0, 0x18(sp)",
            "lw t1, 0x1c(sp)",
            "addiu a0, v0, -1",
            "sltiu v0, v0, 1",
            "subu v1, v1, v0",
            "and a0, a0, t0",
            "and v1, v1, t1",
            "or a0, a0, v1",
            "sltu a0, zero, a0",
            "addu s5, s5, s6",
            "or t0, a0, s7",
            "b 0xfab8",
            "move t1, fp",
            "slt v0, v1, s5",
            "beqz v0, 0xfaac",
            "nop",
            "move s0, zero",
            "b 0xfab8",
            "move s1, zero",
            "move s5, v1",
            "move t0, zero",
            "move t1, zero",
            "lw v0, 4(s3)",
            "lw v1, 4(s4)",
            "nop",
            "beq v0, v1, 0xfb90",
            "addu v1, s1, t1",
            "beqz v0, 0xfae0",
            "subu v1, s0, t0",
            "sltu v0, s0, v1",
            "b 0xfaec",
            "subu a0, s1, t1",
            "subu v1, t0, s0",
            "sltu v0, t0, v1",
            "subu a0, t1, s1",
            "subu v0, a0, v0",
            "bltz v0, 0xfb04",
            "addiu a0, zero, 1",
            "sw zero, 4(s2)",
            "b 0xfb1c",
            "sw s5, 8(s2)",
            "negu v1, v1",
            "sw a0, 4(s2)",
            "negu v0, v0",
            "sltu a0, zero, v1",
            "sw s5, 8(s2)",
            "subu v0, v0, a0",
            "sw v1, 0x10(s2)",
            "lui v1, 0x1000",
            "sw v0, 0x14(s2)",
            "b 0xfb54",
            "addiu a3, v1, -1",
            "srl a0, v0, 0x1f",
            "sll v0, v0, 1",
            "sw v0, 0x10(s2)",
            "lw v0, 8(s2)",
            "sll a1, a1, 1",
            "or a1, a1, a0",
            "addiu v0, v0, -1",
            "sw a1, 0x14(s2)",
            "sw v0, 8(s2)",
            "lw v0, 0x10(s2)",
            "lw a1, 0x14(s2)",
            "addiu a0, v0, -1",
            "sltu t0, a0, v0",
            "addiu a2, a1, -1",
            "addu a2, t0, a2",
            "sltu t0, a2, v1",
            "beqz t0, 0xfbac",
            "nop",
            "bne a2, a3, 0xfb30",
            "sltiu a0, a0, -1",
            "bnez a0, 0xfb34",
            "srl a0, v0, 0x1f",
            "b 0xfbac",
            "nop",
            "sw v0, 4(s2)",
            "addu v0, s0, t0",
            "sltu a0, v0, s0",
            "addu v1, a0, v1",
            "sw s5, 8(s2)",
            "sw v0, 0x10(s2)",
            "sw v1, 0x14(s2)",
            "lw v1, 0x14(s2)",
            "lui a0, 0x2000",
            "addiu v0, zero, 3",
            "sltu a0, v1, a0",
            "sw v0, (s2)",
            "lw v0, 0x10(s2)",
            "bnez a0, 0xfbf8",
            "nop",
            "andi a0, v0, 1",
            "sll a1, v1, 0x1f",
            "srl v0, v0, 1",
            "or v0, a1, v0",
            "or v0, a0, v0",
            "sw v0, 0x10(s2)",
            "lw v0, 8(s2)",
            "srl v1, v1, 1",
            "sw v1, 0x14(s2)",
            "addiu v0, v0, 1",
            "sw v0, 8(s2)",
            "b 0xfc10",
            "move s3, s2",
            "lw s3, -0x7f9c(gp)",
            "b 0xfc10",
            "nop",
            "move s3, s4",
            "lw ra, 0x44(sp)",
            "move v0, s3",
            "lw fp, 0x40(sp)",
            "lw s7, 0x3c(sp)",
            "lw s6, 0x38(sp)",
            "lw s5, 0x34(sp)",
            "lw s4, 0x30(sp)",
            "lw s3, 0x2c(sp)",
            "lw s2, 0x28(sp)",
            "lw s1, 0x24(sp)",
            "lw s0, 0x20(sp)",
            "jr ra",
            "addiu sp, sp, 0x48"
        ]
    },
    "fcn.0000adc8": {
        "function_address": "0x0000adc8",
        "instructions": [
            "lui gp, 2",
            "addiu gp, gp, -0x5e8",
            "addu gp, gp, t9",
            "addiu sp, sp, -0x28",
            "sw ra, 0x24(sp)",
            "sw fp, 0x20(sp)",
            "move fp, sp",
            "sw gp, 0x10(sp)",
            "sw a0, 0x28(fp)",
            "lw v0, 0x28(fp)",
            "nop",
            "bnez v0, 0xae38",
            "nop",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a0, v0, 0x1f78",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a1, v0, 0x1f34",
            "addiu a2, zero, 0xdb",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a3, v0, 0x2228",
            "lw v0, -sym.imp.__assert(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw a0, 0x28(fp)",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu v0, v0, -0x5460",
            "move t9, v0",
            "bal fcn.0000aba0",
            "nop",
            "lw gp, 0x10(fp)",
            "lw v0, 0x28(fp)",
            "nop",
            "lw v0, (v0)",
            "nop",
            "addiu v0, v0, 0x4c",
            "sw v0, 0x18(fp)",
            "lw v0, 0x28(fp)",
            "nop",
            "sw v0, 0x1c(fp)",
            "lw v0, 0x1c(fp)",
            "nop",
            "bnez v0, 0xaec8",
            "nop",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a0, v0, 0x1f70",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a1, v0, 0x1f34",
            "addiu a2, zero, 0xde",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a3, v0, 0x2228",
            "lw v0, -sym.imp.__assert(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw v0, 0x1c(fp)",
            "nop",
            "lw v0, 0x1c(v0)",
            "nop",
            "beqz v0, 0xaf00",
            "nop",
            "lw v0, 0x1c(fp)",
            "nop",
            "lw v0, 0x1c(v0)",
            "lw v1, 0x1c(fp)",
            "nop",
            "lw v1, 0x20(v1)",
            "nop",
            "sw v1, 0x20(v0)",
            "lw v0, 0x1c(fp)",
            "nop",
            "lw v0, 0x20(v0)",
            "nop",
            "beqz v0, 0xaf40",
            "nop",
            "lw v0, 0x1c(fp)",
            "nop",
            "lw v0, 0x20(v0)",
            "lw v1, 0x1c(fp)",
            "nop",
            "lw v1, 0x1c(v1)",
            "nop",
            "sw v1, 0x1c(v0)",
            "b 0xafb0",
            "nop",
            "lw v0, 0x18(fp)",
            "nop",
            "lw v1, (v0)",
            "lw v0, 0x1c(fp)",
            "nop",
            "beq v1, v0, 0xaf98",
            "nop",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a0, v0, 0x1f98",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a1, v0, 0x1f34",
            "addiu a2, zero, 0xde",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a3, v0, 0x2228",
            "lw v0, -sym.imp.__assert(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw v0, 0x1c(fp)",
            "nop",
            "lw v1, 0x1c(v0)",
            "lw v0, 0x18(fp)",
            "nop",
            "sw v1, (v0)",
            "lw v0, 0x1c(fp)",
            "nop",
            "sw zero, 0x20(v0)",
            "lw v0, 0x1c(fp)",
            "nop",
            "lw v1, 0x20(v0)",
            "lw v0, 0x1c(fp)",
            "nop",
            "sw v1, 0x1c(v0)",
            "lw v0, 0x28(fp)",
            "nop",
            "lw v0, 4(v0)",
            "nop",
            "bnez v0, 0xb00c",
            "nop",
            "lw v0, 0x28(fp)",
            "nop",
            "lw v0, (v0)",
            "nop",
            "lw v1, 0x48(v0)",
            "nop",
            "addiu v1, v1, -1",
            "sw v1, 0x48(v0)",
            "lw a0, 0x28(fp)",
            "lw v0, -sym.avahi_free(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "move sp, fp",
            "lw ra, 0x24(sp)",
            "lw fp, 0x20(sp)",
            "addiu sp, sp, 0x28",
            "jr ra",
            "nop"
        ]
    },
    "fcn.0000aba0": {
        "function_address": "0x0000aba0",
        "instructions": [
            "lui gp, 2",
            "addiu gp, gp, -0x3c0",
            "addu gp, gp, t9",
            "addiu sp, sp, -0x20",
            "sw ra, 0x1c(sp)",
            "sw fp, 0x18(sp)",
            "move fp, sp",
            "sw gp, 0x10(sp)",
            "sw a0, 0x20(fp)",
            "lw v0, 0x20(fp)",
            "nop",
            "bnez v0, 0xac10",
            "nop",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a0, v0, 0x1f78",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a1, v0, 0x1f34",
            "addiu a2, zero, 0xc3",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a3, v0, 0x2244",
            "lw v0, -sym.imp.__assert(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw v0, 0x20(fp)",
            "nop",
            "lw v1, 8(v0)",
            "addiu v0, zero, -1",
            "beq v1, v0, 0xac44",
            "nop",
            "lw v0, 0x20(fp)",
            "nop",
            "lw v0, (v0)",
            "addiu v1, zero, 1",
            "sw v1, 0x34(v0)",
            "b 0xac48",
            "nop",
            "nop",
            "move sp, fp",
            "lw ra, 0x1c(sp)",
            "lw fp, 0x18(sp)",
            "addiu sp, sp, 0x20",
            "jr ra",
            "nop"
        ]
    },
    "fcn.0000b6e4": {
        "function_address": "0x0000b6e4",
        "instructions": [
            "lui gp, 2",
            "addiu gp, gp, -0xf04",
            "addu gp, gp, t9",
            "addiu sp, sp, -0x28",
            "sw ra, 0x24(sp)",
            "sw fp, 0x20(sp)",
            "move fp, sp",
            "sw gp, 0x10(sp)",
            "sw a0, 0x28(fp)",
            "lw v0, 0x28(fp)",
            "nop",
            "bnez v0, 0xb754",
            "nop",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a0, v0, 0x1fa8",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a1, v0, 0x1f34",
            "addiu a2, zero, 0x129",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a3, v0, 0x21dc",
            "lw v0, -sym.imp.__assert(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw v0, 0x28(fp)",
            "nop",
            "lw v0, (v0)",
            "nop",
            "addiu v0, v0, 0x50",
            "sw v0, 0x18(fp)",
            "lw v0, 0x28(fp)",
            "nop",
            "sw v0, 0x1c(fp)",
            "lw v0, 0x1c(fp)",
            "nop",
            "bnez v0, 0xb7c4",
            "nop",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a0, v0, 0x1f70",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a1, v0, 0x1f34",
            "addiu a2, zero, 0x12b",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a3, v0, 0x21dc",
            "lw v0, -sym.imp.__assert(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw v0, 0x1c(fp)",
            "nop",
            "lw v0, 0x1c(v0)",
            "nop",
            "beqz v0, 0xb7fc",
            "nop",
            "lw v0, 0x1c(fp)",
            "nop",
            "lw v0, 0x1c(v0)",
            "lw v1, 0x1c(fp)",
            "nop",
            "lw v1, 0x20(v1)",
            "nop",
            "sw v1, 0x20(v0)",
            "lw v0, 0x1c(fp)",
            "nop",
            "lw v0, 0x20(v0)",
            "nop",
            "beqz v0, 0xb83c",
            "nop",
            "lw v0, 0x1c(fp)",
            "nop",
            "lw v0, 0x20(v0)",
            "lw v1, 0x1c(fp)",
            "nop",
            "lw v1, 0x1c(v1)",
            "nop",
            "sw v1, 0x1c(v0)",
            "b 0xb8ac",
            "nop",
            "lw v0, 0x18(fp)",
            "nop",
            "lw v1, (v0)",
            "lw v0, 0x1c(fp)",
            "nop",
            "beq v1, v0, 0xb894",
            "nop",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a0, v0, 0x1f98",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a1, v0, 0x1f34",
            "addiu a2, zero, 0x12b",
            "lw v0, -0x7fdc(gp)",
            "nop",
            "addiu a3, v0, 0x21dc",
            "lw v0, -sym.imp.__assert(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw v0, 0x1c(fp)",
            "nop",
            "lw v1, 0x1c(v0)",
            "lw v0, 0x18(fp)",
            "nop",
            "sw v1, (v0)",
            "lw v0, 0x1c(fp)",
            "nop",
            "sw zero, 0x20(v0)",
            "lw v0, 0x1c(fp)",
            "nop",
            "lw v1, 0x20(v0)",
            "lw v0, 0x1c(fp)",
            "nop",
            "sw v1, 0x1c(v0)",
            "lw a0, 0x28(fp)",
            "lw v0, -sym.avahi_free(gp)",
            "nop",
            "move t9, v0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(fp)",
            "move sp, fp",
            "lw ra, 0x24(sp)",
            "lw fp, 0x20(sp)",
            "addiu sp, sp, 0x28",
            "jr ra",
            "nop"
        ]
    }
}