{
    "main": {
        "function_address": "0x0000967c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x3540",
            "ldr r4, [r1]",
            "sub sp, sp, 0x34",
            "mov r5, r1",
            "mov r6, r0",
            "mov r1, 0x2f",
            "mov r0, r4",
            "bl sym.imp.strrchr",
            "cmp r0, 0",
            "ldr r1, aav.0x00009110",
            "addne r4, r0, 1",
            "mov r0, 0xa",
            "bl sym.imp.signal",
            "ldr r1, aav.0x00009184",
            "mov r0, 0xc",
            "bl sym.imp.signal",
            "mov r0, r4",
            "ldr r1, str.heartbeat",
            "bl sym.imp.strstr",
            "cmp r0, 0",
            "beq 0xa204",
            "mov r0, 1",
            "mov r1, r0",
            "bl sym.imp.daemon",
            "cmn r0, 1",
            "beq 0xa390",
            "mov fp, 0",
            "movw r7, 0x8889",
            "ldr r5, [0x0000a3a8]",
            "add r4, sp, 0x18",
            "str fp, [sp, 0x10]",
            "movt r7, 0x8888",
            "bl fcn.0000a784",
            "ldr r0, str.wlg_wlanstate",
            "ldr r1, str.Enable",
            "bl sym.imp.acosNvramConfig_match",
            "cmp r0, 0",
            "bne 0x972c",
            "ldr r0, str.wl1_radio",
            "ldr r1, aav.0x0000bda0",
            "bl sym.imp.acosNvramConfig_match",
            "cmp r0, 0",
            "beq 0x9740",
            "ldr r0, str.enable_sta_mode",
            "ldr r1, aav.0x0000bd94",
            "bl sym.imp.acosNvramConfig_match",
            "cmp r0, 0",
            "bne 0x9d20",
            "ldr r1, aav.0x0000bda0",
            "ldr r0, str.debug_httpd_log",
            "bl sym.imp.acosNvramConfig_match",
            "ldr r1, aav.0x0000bda0",
            "mov r6, r0",
            "ldr r0, str.debug_httpd_auto_bring_up",
            "bl sym.imp.acosNvramConfig_match",
            "orrs r1, r0, r6",
            "mov sl, r0",
            "beq 0x97b4",
            "movw r3, 0xcaa8",
            "add ip, sp, 0x3540",
            "mov r8, 0",
            "movt r3, 0xffff",
            "add ip, ip, 0x30",
            "add r0, r4, 4",
            "mov r1, r8",
            "mov r2, 0x7c",
            "str r8, [ip, r3]",
            "bl sym.imp.memset",
            "cmp r6, r8",
            "add lr, sp, 0x3000",
            "str r8, [lr, 0x444]",
            "bne 0xa04c",
            "ldr r3, [r5, 0x70]",
            "add r3, r3, 1",
            "cmp r3, 2",
            "str r3, [r5, 0x70]",
            "bgt 0x9d64",
            "add r0, sp, 0x3480",
            "add r0, r0, 0x30",
            "bl sym.imp.sysinfo",
            "add r2, sp, 0x3000",
            "movw r0, 0xaaab",
            "ldr r1, [r2, 0x4b0]",
            "umull r3, sb, r7, r1",
            "lsr sb, sb, 5",
            "movt r0, 0xaaaa",
            "umull r6, r8, r7, sb",
            "lsr r8, r8, 5",
            "mov r2, sb",
            "umull ip, r0, r0, r8",
            "rsb sb, sb, sb, lsl 4",
            "lsr r6, r0, 4",
            "mov r3, r8",
            "sub sb, r1, sb, lsl 2",
            "rsb r8, r8, r8, lsl 4",
            "mov sl, r6",
            "add r1, sp, 0x3440",
            "add r6, r6, r6, lsl 1",
            "add r1, r1, 0x30",
            "sub r8, r2, r8, lsl 2",
            "mov r0, 1",
            "sub r6, r3, r6, lsl 3",
            "bl sym.imp.get_eth_link_status",
            "add r0, sp, 0x3440",
            "ldr r1, str.Link_Down",
            "add r0, r0, 0x30",
            "bl sym.imp.stristr",
            "cmp r0, 0",
            "beq 0x9fd8",
            "add r0, sp, 0x3500",
            "ldr r1, str._lu_days__02lu:_02lu:_02lu__Link_Down_n",
            "add r0, r0, 0x30",
            "mov r2, sl",
            "mov r3, r6",
            "stm sp, {r8, sb}",
            "bl sym.imp.sprintf",
            "ldr r0, str._tmp_offset",
            "ldr r1, aav.0x0000b48c",
            "bl sym.imp.fopen",
            "cmp r0, 0",
            "beq 0xa190",
            "bl sym.imp.fclose",
            "ldr r1, aav.0x0000b48c",
            "ldr r0, str._tmp_offset",
            "bl sym.imp.fopen",
            "add r2, sp, 0x3540",
            "mov r6, r0",
            "add r2, r2, 0x2c",
            "ldr r1, aav.0x0000bbcc",
            "bl sym.imp.fscanf",
            "mov r0, r6",
            "bl sym.imp.fclose",
            "ldr r1, aav.0x0000b48c",
            "ldr r0, str._tmp_Internet_connection_debug_log",
            "bl sym.imp.fopen",
            "add ip, sp, 0x3000",
            "mov r2, 0",
            "ldr r1, [ip, 0x56c]",
            "mov r6, r0",
            "bl sym.imp.fseek",
            "add r0, sp, 0x34c0",
            "mov r2, r6",
            "mov r1, 0x1e",
            "add r0, r0, 0x30",
            "bl sym.imp.fgets",
            "add r0, sp, 0x34c0",
            "ldr r1, aav.0x0000bbd0",
            "add r0, r0, 0x30",
            "bl sym.imp.strtok",
            "ldr r1, aav.0x0000bbd4",
            "mov r0, 0",
            "bl sym.imp.strtok",
            "mov r8, r0",
            "mov r0, r6",
            "bl sym.imp.fclose",
            "add r0, sp, 0x3500",
            "add r1, sp, 0x3500",
            "add r1, r1, 0x30",
            "add r0, r0, 0x10",
            "bl sym.imp.strcpy",
            "add r0, sp, 0x3500",
            "ldr r1, aav.0x0000bbd0",
            "add r0, r0, 0x10",
            "bl sym.imp.strtok",
            "ldr r1, aav.0x0000bbd4",
            "mov r0, 0",
            "bl sym.imp.strtok",
            "mov r1, r8",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x9c98",
            "ldr r0, str.enable_sta_mode",
            "ldr r1, aav.0x0000bda0",
            "bl sym.imp.acosNvramConfig_match",
            "cmp r0, 0",
            "bne 0x9c54",
            "ldr r0, str.access_mac_record",
            "bl sym.imp.acosNvramConfig_get",
            "ldrsb r6, [r0]",
            "cmp r6, 0",
            "beq 0x9a94",
            "ldr r6, [r5]",
            "ldr r8, [0x0000a3a8]",
            "cmp r6, 0",
            "beq 0x9a60",
            "cmp r6, 1",
            "beq 0x9a04",
            "ldr r0, str.TM_WOL_ENABLE",
            "bl sym.imp.acosNvramConfig_get",
            "bl sym.imp.atoi",
            "cmp r0, 0",
            "bne 0x9a48",
            "ldr r0, str.wan_proto",
            "ldr r1, str.pppoe",
            "bl sym.imp.acosNvramConfig_match",
            "cmp r0, 0",
            "bne 0x99a8",
            "ldr r0, str.wan_proto",
            "ldr r1, str.pptp",
            "bl sym.imp.acosNvramConfig_match",
            "cmp r0, 0",
            "beq 0xa078",
            "ldr r0, str.second_wan_status",
            "ldr r1, aav.0x0000bda0",
            "bl sym.imp.acosNvramConfig_match",
            "ldr r3, [r5, 0x84]",
            "subs r6, r0, 0",
            "movne r6, 1",
            "cmp r6, r3",
            "beq 0x9704",
            "bl sym.imp.is_russian_case",
            "cmp r0, 0",
            "beq 0x9704",
            "ldr r3, [0x0000a3a8]",
            "ldr r0, str.igmp_proxying_enable",
            "ldr r1, aav.0x0000bda0",
            "str r6, [r3, 0x84]",
            "bl sym.imp.acosNvramConfig_match",
            "cmp r0, 0",
            "beq 0x9704",
            "cmp r6, 0",
            "beq 0xa0fc",
            "ldr r0, str.killall__SIGUSR1_swresetd",
            "bl sym.imp.system",
            "b 0x9704",
            "bl fcn.0000b154",
            "movw r0, 0xd090",
            "movt r0, 3",
            "bl sym.imp.usleep",
            "bl fcn.0000b154",
            "movw r0, 0x71b0",
            "movt r0, 0xb",
            "bl sym.imp.usleep",
            "bl fcn.0000b154",
            "movw r0, 0xd090",
            "movt r0, 3",
            "bl sym.imp.usleep",
            "bl fcn.0000b154",
            "movw r0, 0x71b0",
            "movt r0, 0xb",
            "bl sym.imp.usleep",
            "b 0x9a04",
            "ldr r0, str._usr_sbin_wol",
            "bl sym.imp.system",
            "ldr r1, aav.0x0000bd94",
            "ldr r0, str.TM_WOL_ENABLE",
            "bl sym.imp.acosNvramConfig_set",
            "b 0x9980",
            "bl fcn.0000a990",
            "bl fcn.0000af7c",
            "bl fcn.0000af58",
            "ldr r3, [r8, 8]",
            "cmp r3, 1",
            "beq 0xa128",
            "ldr r3, [r8, 4]",
            "cmp r3, 0",
            "beq 0x9d2c",
            "str r6, [r8, 4]",
            "bl sym.imp.acosNvramConfig_save",
            "ldr r6, [r8]",
            "b 0x9964",
            "add r3, sp, 0x3000",
            "add r0, sp, 0x3540",
            "str r6, [r3, 0x550]",
            "mov r2, 0xe",
            "mov r1, r6",
            "add r0, r0, 0x14",
            "bl sym.imp.memset",
            "mov r2, 0x2000",
            "mov r1, r6",
            "mov r0, r4",
            "bl sym.imp.memset",
            "ldr r0, str.wl0_ifname",
            "bl sym.imp.acosNvramConfig_get",
            "mov r1, r4",
            "bl fcn.00009160",
            "subs r2, r0, 0",
            "bne 0x9aec",
            "add r0, sp, 0x2000",
            "mov r1, r4",
            "add r0, r0, 0x18",
            "bl fcn.0000921c",
            "ldr r6, [r4]",
            "ldr r0, str.wl1_ifname",
            "bl sym.imp.acosNvramConfig_get",
            "ldrsb r3, [r0]",
            "cmp r3, 0",
            "bne 0xa0a0",
            "ldr r0, str.wl0_vifs",
            "bl sym.imp.acosNvramConfig_get",
            "ldr r1, str.wl0.1",
            "bl sym.imp.stristr",
            "cmp r0, 0",
            "beq 0x9b3c",
            "mov r1, 0",
            "mov r2, 0x2000",
            "mov r0, r4",
            "bl sym.imp.memset",
            "ldr r0, str.wl0.1",
            "mov r1, r4",
            "bl fcn.00009160",
            "cmp r0, 0",
            "beq 0xa108",
            "ldr r0, str.wl1_vifs",
            "bl sym.imp.acosNvramConfig_get",
            "ldr r1, str.wl1.1",
            "bl sym.imp.stristr",
            "cmp r0, 0",
            "beq 0x9b94",
            "mov r1, 0",
            "mov r2, 0x2000",
            "mov r0, r4",
            "bl sym.imp.memset",
            "ldr r0, str.wl1.1",
            "mov r1, r4",
            "bl fcn.00009160",
            "cmp r0, 0",
            "bne 0x9b94",
            "add r0, sp, 0x2000",
            "mov r2, r6",
            "add r0, r0, 0x18",
            "mov r1, r4",
            "bl fcn.0000921c",
            "ldr r3, [r4]",
            "add r6, r6, r3",
            "cmp r6, 0",
            "ble 0x9be8",
            "add lr, sp, 0x3540",
            "sub r6, r6, 1",
            "add lr, lr, 0x30",
            "mov ip, 0x50",
            "mla ip, ip, r6, lr",
            "ldr r1, str._02X__02X__02X__02X__02X__02X",
            "add r0, sp, 0x3540",
            "add r0, r0, 0x10",
            "sub ip, ip, 0x1540",
            "sub ip, ip, 0x18",
            "ldrb r2, [ip, 4]",
            "ldrb r3, [ip, 5]",
            "ldrb lr, [ip, 6]",
            "ldrb r6, [ip, 7]",
            "ldrb r8, [ip, 8]",
            "ldrb ip, [ip, 9]",
            "str lr, [sp]",
            "stmib sp, {r6, r8, ip}",
            "bl sym.imp.sprintf",
            "add r1, sp, 0x3500",
            "ldrb r1, [r1, 0x50]",
            "sxtb r3, r1",
            "cmp r3, 0",
            "beq 0x9954",
            "add r6, sp, 0x3540",
            "movw r2, 0xbc80",
            "mov r3, 0",
            "add lr, sp, 0x30",
            "movt r2, 0",
            "add r6, r6, 0x10",
            "str r2, [r4, 4]",
            "movw ip, 0xcaa8",
            "str r6, [r4, 8]",
            "add r6, sp, 0x3540",
            "str r3, [r4, 0xc]",
            "sub r4, lr, 0x18",
            "movw lr, 0xbc7c",
            "movt ip, 0xffff",
            "movt lr, 0",
            "add r6, r6, 0x30",
            "mov r2, r3",
            "mov r0, r4",
            "ldr r1, str.__dev_console",
            "str lr, [r6, ip]",
            "bl sym.imp._eval",
            "b 0x9954",
            "ldr r0, aav.0x0000bbdc",
            "ldr r1, aav.0x0000bd94",
            "bl sym.imp.acosNvramConfig_match",
            "cmp r0, 0",
            "beq 0x9d3c",
            "mov r0, 0",
            "bl fcn.000092a8",
            "subs r6, r0, 0",
            "beq 0xa090",
            "mov r1, 1",
            "bl fcn.000095ac",
            "cmp fp, r6",
            "beq 0x9940",
            "ldr r0, str.killall__SIGUSR1_udhcpc",
            "mov fp, r6",
            "bl sym.imp.system",
            "b 0x9940",
            "ldr r1, aav.0x0000b48c",
            "ldr r0, str._tmp_Internet_connection_debug_log",
            "bl sym.imp.fopen",
            "mov r2, 2",
            "mov r6, r0",
            "mov r1, 0",
            "bl sym.imp.fseek",
            "mov r0, r6",
            "bl sym.imp.ftell",
            "add lr, sp, 0x3000",
            "str r0, [lr, 0x56c]",
            "mov r0, r6",
            "bl sym.imp.fclose",
            "ldr r1, aav.0x0000bbc8",
            "ldr r0, str._tmp_offset",
            "bl sym.imp.fopen",
            "add r1, sp, 0x3000",
            "mov r6, r0",
            "ldr r2, [r1, 0x56c]",
            "ldr r1, aav.0x0000bbcc",
            "bl sym.imp.fprintf",
            "mov r0, r6",
            "bl sym.imp.fclose",
            "ldr r0, str._tmp_Internet_connection_debug_log",
            "ldr r1, aav.0x0000bbd8",
            "bl sym.imp.fopen",
            "mov r6, r0",
            "add r0, sp, 0x3500",
            "mov r1, r6",
            "add r0, r0, 0x30",
            "bl sym.imp.fputs",
            "mov r0, r6",
            "bl sym.imp.fclose",
            "b 0x992c",
            "ldr r0, str.wl__i_eth2_up",
            "bl sym.imp.system",
            "b 0x9740",
            "mov r0, 1",
            "bl sym.imp.sleep",
            "ldr r6, [r8]",
            "b 0x9964",
            "mov r0, 1",
            "bl fcn.000092a8",
            "subs r6, r0, 0",
            "beq 0xa0e8",
            "mov r0, 1",
            "mov r1, r6",
            "bl fcn.000095ac",
            "cmp fp, r6",
            "bne 0x9c88",
            "b 0x9940",
            "ldr r3, [0x0000a3a8]",
            "mov r8, 0",
            "add r0, sp, 0x3540",
            "mov r1, r8",
            "mov r2, 0x10",
            "add r0, r0, 0x10",
            "str r8, [r3, 0x70]",
            "bl sym.imp.memset",
            "add r3, sp, 0x3540",
            "mov ip, 2",
            "add r3, r3, 0x10",
            "add lr, sp, 0x3500",
            "add r2, r3, 4",
            "strh ip, [lr, 0x50]",
            "ldr r1, str.127.0.0.1",
            "mov r0, 2",
            "bl sym.imp.inet_pton",
            "mov r2, 0x5000",
            "add r3, sp, 0x3500",
            "add ip, sp, 0x3000",
            "strh r2, [r3, 0x52]",
            "mov r3, 3",
            "str r8, [ip, 0x568]",
            "ldr r0, str._tmp_var_run_httpd.pid",
            "ldr r1, aav.0x0000b48c",
            "str r3, [ip, 0x564]",
            "bl sym.imp.fopen",
            "subs r8, r0, 0",
            "moveq sb, r8",
            "beq 0x9e00",
            "mov r1, 0x7f",
            "mov r2, r8",
            "mov r0, r4",
            "bl sym.imp.fgets",
            "mov r0, r4",
            "bl sym.imp.atoi",
            "mov sb, r0",
            "mov r0, r8",
            "bl sym.imp.fclose",
            "mov r0, sb",
            "bl sym.imp.isPidExist",
            "mov r1, 1",
            "mov r8, r0",
            "mov r2, 0",
            "mov r0, 2",
            "bl sym.imp.socket",
            "movw lr, 0x42b0",
            "cmn r0, 1",
            "movt lr, 1",
            "str r0, [lr, 8]",
            "beq 0x9e58",
            "cmp r8, 0",
            "beq 0x9e48",
            "ldr r3, [r5, 0x74]",
            "ldr r8, [0x0000a3a8]",
            "cmp r3, 0",
            "beq 0xa234",
            "movw r1, 0x42b0",
            "movt r1, 1",
            "ldr r0, [r1, 8]",
            "bl sym.imp.close",
            "mov r0, sb",
            "bl sym.imp.isPidExist",
            "cmp r0, 0",
            "bne 0x97b4",
            "ldr r3, [r5, 0x80]",
            "cmp r3, 0",
            "bne 0x97b4",
            "ldr r0, str.restart_all_processes",
            "ldr r1, aav.0x0000bda0",
            "bl sym.imp.acosNvramConfig_match",
            "cmp r0, 0",
            "bne 0x97b4",
            "cmp r6, 0",
            "beq 0x9f70",
            "ldr r0, str.echo__httpd_pid_not_found_______tmp_httpd_dbg.txt",
            "bl sym.imp.system",
            "ldr r0, str.version_____tmp_httpd_dbg.txt",
            "bl sym.imp.system",
            "ldr r0, str.ps_____tmp_httpd_dbg.txt",
            "bl sym.imp.system",
            "ldr r0, str.uptime_____tmp_httpd_dbg.txt",
            "bl sym.imp.system",
            "ldr r0, str.ifconfig_____tmp_httpd_dbg.txt",
            "bl sym.imp.system",
            "ldr r0, str.cat__proc_meminfo_____tmp_httpd_dbg.txt",
            "bl sym.imp.system",
            "ldr r0, str.cat__proc_slabinfo_____tmp_httpd_dbg.txt",
            "bl sym.imp.system",
            "ldr r0, str.mount_____tmp_httpd_dbg.txt",
            "bl sym.imp.system",
            "ldr r0, str.route_____tmp_httpd_dbg.txt",
            "bl sym.imp.system",
            "ldr r0, str.netstat__an_____tmp_httpd_dbg.txt",
            "bl sym.imp.system",
            "ldr r0, str.echo_wl_mac_start____tmp_httpd_dbg.txt",
            "bl sym.imp.system",
            "ldr r0, str.wl_mac_____tmp_httpd_dbg.txt",
            "bl sym.imp.system",
            "ldr r0, str.echo_wl_mac_end____tmp_httpd_dbg.txt",
            "bl sym.imp.system",
            "ldr r0, str.echo_wl__i_eth2_mac_start____tmp_httpd_dbg.txt",
            "bl sym.imp.system",
            "ldr r0, str.wl__i_eth2_mac____tmp_httpd_dbg.txt",
            "bl sym.imp.system",
            "ldr r0, str.echo_wl__i_eth2_mac_end____tmp_httpd_dbg.txt",
            "bl sym.imp.system",
            "ldr r0, str.echo_arp____tmp_httpd_dbg.txt",
            "bl sym.imp.system",
            "ldr r0, str.cat__proc_net_arp_____tmp_httpd_dbg.txt",
            "bl sym.imp.system",
            "ldr r0, str.echo_route____tmp_httpd_dbg.txt",
            "bl sym.imp.system",
            "ldr r0, str.route_____tmp_httpd_dbg.txt",
            "bl sym.imp.system",
            "ldr r0, str.echo_netstat__a____tmp_httpd_dbg.txt",
            "bl sym.imp.system",
            "ldr r0, str.netstat__an_____tmp_httpd_dbg.txt",
            "bl sym.imp.system",
            "ldr r0, str.echo_nvram____tmp_httpd_dbg.txt",
            "bl sym.imp.system",
            "ldr r0, str.nvram_show_____tmp_httpd_dbg.txt",
            "bl sym.imp.system",
            "ldr r0, str.cat__tmp_httpd_dbg.txt_____tmp_media_nand_httpd_dbg.txt",
            "bl sym.imp.system",
            "ldr r0, str.cat__tmp_httpd_dbg_old.txt_____tmp_media_nand_httpd_dbg_old.txt",
            "bl sym.imp.system",
            "ldr r0, str.rm__tmp_httpd_dbg.txt",
            "bl sym.imp.system",
            "ldr r0, str.rm__tmp_httpd_dbg_old.txt",
            "bl sym.imp.system",
            "cmp sl, 0",
            "mov r3, 1",
            "str r3, [r5, 0x80]",
            "beq 0x97b4",
            "ldr r1, aav.0x0000bda0",
            "mov r6, 0x1e",
            "ldr r0, str.restart_httpd",
            "bl sym.imp.acosNvramConfig_set",
            "ldr r0, str.httpd__S__E__usr_sbin_ca.pem__usr_sbin_httpsd.pem",
            "bl sym.imp.system",
            "b 0x9fa4",
            "subs r6, r6, 1",
            "beq 0x9fc0",
            "mov r0, 1",
            "bl sym.imp.sleep",
            "ldr r0, str.restart_httpd",
            "ldr r1, aav.0x0000bd94",
            "bl sym.imp.acosNvramConfig_match",
            "cmp r0, 0",
            "beq 0x9f9c",
            "ldr r0, str.restart_httpd",
            "ldr r1, aav.0x0000bd94",
            "bl sym.imp.acosNvramConfig_set",
            "mov r3, 0",
            "str r3, [r5, 0x80]",
            "b 0x97b4",
            "add r0, sp, 0x3440",
            "ldr r1, str.1000M",
            "add r0, r0, 0x30",
            "bl sym.imp.stristr",
            "cmp r0, 0",
            "ldrne r2, str.1000",
            "strne r2, [sp, 0x14]",
            "beq 0xa1d4",
            "add r0, sp, 0x3440",
            "ldr r1, str.Full",
            "add r0, r0, 0x30",
            "bl sym.imp.stristr",
            "movw r3, 0xb3a4",
            "cmp r0, 0",
            "movt r3, 0",
            "movw ip, 0xb3ac",
            "movt ip, 0",
            "movne ip, r3",
            "mov r3, r6",
            "ldr r6, [sp, 0x14]",
            "add r0, sp, 0x3500",
            "ldr r1, str._lu_days__02lu:_02lu:_02lu___sM__s_n",
            "mov r2, sl",
            "add r0, r0, 0x30",
            "stm sp, {r8, sb}",
            "str r6, [sp, 8]",
            "str ip, [sp, 0xc]",
            "bl sym.imp.sprintf",
            "b 0x9850",
            "add r1, sp, 0x3400",
            "ldr r0, aav.0x0000b5c0",
            "add r1, r1, 0x18",
            "bl sym.imp.stat",
            "add r1, sp, 0x3000",
            "ldr r3, [r1, 0x444]",
            "cmp r3, 0x4b000",
            "ble 0x97a0",
            "ldr r0, str.mv__tmp_httpd_dbg.txt__tmp_httpd_dbg_old.txt",
            "bl sym.imp.system",
            "b 0x97a0",
            "ldr r0, str.wan_proto",
            "ldr r1, str.l2tp",
            "bl sym.imp.acosNvramConfig_match",
            "cmp r0, 0",
            "beq 0x9704",
            "b 0x99a8",
            "mov r1, 1",
            "mov fp, r6",
            "bl fcn.000095ac",
            "b 0x9940",
            "mov r2, 0x2000",
            "mov r1, 0",
            "mov r0, r4",
            "bl sym.imp.memset",
            "ldr r0, str.wl1_ifname",
            "bl sym.imp.acosNvramConfig_get",
            "mov r1, r4",
            "bl fcn.00009160",
            "cmp r0, 0",
            "bne 0x9b00",
            "add r0, sp, 0x2000",
            "mov r2, r6",
            "add r0, r0, 0x18",
            "mov r1, r4",
            "bl fcn.0000921c",
            "ldr r3, [r4]",
            "add r6, r6, r3",
            "b 0x9b00",
            "mov r1, r6",
            "mov r0, 1",
            "mov fp, r6",
            "bl fcn.000095ac",
            "b 0x9940",
            "ldr r0, str.killall__SIGUSR2_swresetd",
            "bl sym.imp.system",
            "b 0x9704",
            "add r0, sp, 0x2000",
            "mov r2, r6",
            "add r0, r0, 0x18",
            "mov r1, r4",
            "bl fcn.0000921c",
            "ldr r3, [r4]",
            "add r6, r6, r3",
            "b 0x9b3c",
            "ldr r0, [sp, 0x10]",
            "bl fcn.0000b1b4",
            "mov r6, r0",
            "movw r0, 0xd090",
            "movt r0, 3",
            "bl sym.imp.usleep",
            "mov r0, r6",
            "bl fcn.0000b1b4",
            "mov r6, r0",
            "movw r0, 0xd090",
            "movt r0, 3",
            "bl sym.imp.usleep",
            "mov r0, r6",
            "bl fcn.0000b1b4",
            "mov r6, r0",
            "movw r0, 0xd090",
            "movt r0, 3",
            "bl sym.imp.usleep",
            "mov r0, r6",
            "bl fcn.0000b1b4",
            "str r0, [sp, 0x10]",
            "movw r0, 0xd090",
            "movt r0, 3",
            "bl sym.imp.usleep",
            "ldr r6, [r8]",
            "b 0x9964",
            "ldr r0, str._tmp_Internet_connection_debug_log",
            "ldr r1, aav.0x0000b48c",
            "bl sym.imp.fopen",
            "cmp r0, 0",
            "bne 0x9868",
            "ldr r1, aav.0x0000bbc8",
            "ldr r0, str._tmp_offset",
            "bl sym.imp.fopen",
            "mov r6, r0",
            "mov r0, 0x30",
            "mov r1, r6",
            "bl sym.imp.fputc",
            "mov r0, r6",
            "bl sym.imp.fclose",
            "ldr r0, str._tmp_Internet_connection_debug_log",
            "ldr r1, aav.0x0000bbc8",
            "b 0x9cfc",
            "add r0, sp, 0x3440",
            "ldr r1, str.100M",
            "add r0, r0, 0x30",
            "bl sym.imp.stristr",
            "movw r1, 0xb3a0",
            "movw lr, 0xb394",
            "movt r1, 0",
            "cmp r0, 0",
            "movt lr, 0",
            "movne lr, r1",
            "str lr, [sp, 0x14]",
            "b 0x9ff8",
            "mov r0, r4",
            "ldr r1, str.wanled",
            "bl sym.imp.strstr",
            "cmp r0, 0",
            "beq 0xa224",
            "mov r0, r6",
            "mov r1, r5",
            "bl fcn.0000a8d8",
            "mov r0, 0",
            "add sp, sp, 0x174",
            "add sp, sp, 0x3400",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r0, str.restart_all_processes",
            "ldr r1, aav.0x0000bda0",
            "bl sym.imp.acosNvramConfig_match",
            "cmp r0, 0",
            "bne 0x9e48",
            "ldr r3, [0x0000a4e8]",
            "add r1, sp, 0x3540",
            "add r1, r1, 0x10",
            "mov r2, 0x10",
            "ldr r0, [r3, 8]",
            "add r3, sp, 0x3540",
            "add r3, r3, 0x24",
            "bl sym.imp.connectWithTimeout",
            "cmp r0, 0",
            "str r0, [r8, 0x78]",
            "streq r0, [r8, 0x7c]",
            "beq 0x9e48",
            "ldr r0, str.echo__Cant_connect_to_httpd_port_80_first_3_times________tmp_httpd_dbg.txt",
            "bl sym.imp.system",
            "ldr r0, str.netstat__a_____tmp_httpd_dbg.txt",
            "bl sym.imp.system",
            "ldr r3, [r8, 0x7c]",
            "add r3, r3, 1",
            "cmp r3, 2",
            "str r3, [r8, 0x7c]",
            "ble 0x9e48",
            "cmp r6, 0",
            "beq 0xa384",
            "ldr r0, str.echo__Cant_connect_to_httpd_port_80_______tmp_httpd_dbg.txt",
            "bl sym.imp.system",
            "ldr r0, str.version_____tmp_httpd_dbg.txt",
            "bl sym.imp.system",
            "ldr r0, str.ps_____tmp_httpd_dbg.txt",
            "bl sym.imp.system",
            "ldr r0, str.uptime_____tmp_httpd_dbg.txt",
            "bl sym.imp.system",
            "ldr r0, str.ifconfig_____tmp_httpd_dbg.txt",
            "bl sym.imp.system",
            "ldr r0, str.cat__proc_meminfo_____tmp_httpd_dbg.txt",
            "bl sym.imp.system",
            "ldr r0, str.cat__proc_slabinfo_____tmp_httpd_dbg.txt",
            "bl sym.imp.system",
            "ldr r0, str.mount_____tmp_httpd_dbg.txt",
            "bl sym.imp.system",
            "ldr r0, str.route_____tmp_httpd_dbg.txt",
            "bl sym.imp.system",
            "ldr r0, str.netstat__a_____tmp_httpd_dbg.txt",
            "bl sym.imp.system",
            "ldr r0, str.echo_wl_mac_start____tmp_httpd_dbg.txt",
            "bl sym.imp.system",
            "ldr r0, str.wl_mac_____tmp_httpd_dbg.txt",
            "bl sym.imp.system",
            "ldr r0, str.echo_wl_mac_end____tmp_httpd_dbg.txt",
            "bl sym.imp.system",
            "ldr r0, str.echo_wl__i_eth2_mac_start____tmp_httpd_dbg.txt",
            "bl sym.imp.system",
            "ldr r0, str.wl__i_eth2_mac____tmp_httpd_dbg.txt",
            "bl sym.imp.system",
            "ldr r0, str.echo_wl__i_eth2_mac_end____tmp_httpd_dbg.txt",
            "bl sym.imp.system",
            "ldr r0, str.echo_arp____tmp_httpd_dbg.txt",
            "bl sym.imp.system",
            "ldr r0, str.cat__proc_net_arp_____tmp_httpd_dbg.txt",
            "bl sym.imp.system",
            "ldr r0, str.echo_route____tmp_httpd_dbg.txt",
            "bl sym.imp.system",
            "ldr r0, str.route_____tmp_httpd_dbg.txt",
            "bl sym.imp.system",
            "ldr r0, str.echo_netstat__a____tmp_httpd_dbg.txt",
            "bl sym.imp.system",
            "ldr r0, str.netstat__a_____tmp_httpd_dbg.txt",
            "bl sym.imp.system",
            "ldr r0, str.echo_nvram____tmp_httpd_dbg.txt",
            "bl sym.imp.system",
            "ldr r0, str.nvram_show_____tmp_httpd_dbg.txt",
            "bl sym.imp.system",
            "ldr r0, str.cat__tmp_httpd_dbg.txt_____tmp_media_nand_httpd_dbg.txt",
            "bl sym.imp.system",
            "ldr r0, str.cat__tmp_httpd_dbg_old.txt_____tmp_media_nand_httpd_dbg_old.txt",
            "bl sym.imp.system",
            "ldr r0, str.rm__tmp_httpd_dbg.txt",
            "bl sym.imp.system",
            "ldr r0, str.rm__tmp_httpd_dbg_old.txt",
            "bl sym.imp.system",
            "mov r3, 1",
            "str r3, [r5, 0x74]",
            "b 0x9e48",
            "ldr r0, str.daemon",
            "bl sym.imp.perror",
            "b 0x96e8"
        ]
    },
    "sym.imp.strrchr": {
        "function_address": "0x00008dd8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xb000",
            "ldr pc, [ip, 0x3fc]!"
        ]
    },
    "sym.imp.signal": {
        "function_address": "0x0000900c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xb000",
            "ldr pc, [ip, 0x284]!"
        ]
    },
    "sym.imp.strstr": {
        "function_address": "0x00008fa0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xb000",
            "ldr pc, [ip, 0x2cc]!"
        ]
    },
    "sym.imp.daemon": {
        "function_address": "0x00008d6c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xb000",
            "ldr pc, [ip, 0x444]!"
        ]
    },
    "fcn.0000a784": {
        "function_address": "0x0000a784",
        "instructions": [
            "movw r0, 0x4544",
            "push {r3, r4, r5, lr}",
            "movw r1, 0x3b6",
            "movt r0, 0x574c",
            "bl sym.imp.msgget",
            "cmp r0, 0",
            "blt 0xa854",
            "ldr r0, str.wan_proto",
            "ldr r1, str.dhcp",
            "bl sym.imp.acosNvramConfig_match",
            "cmp r0, 0",
            "beq 0xa7c8",
            "ldr r3, [0x0000a8ac]",
            "mov r2, 1",
            "mov r0, 0",
            "str r2, [r3, 8]",
            "pop {r3, r4, r5, pc}",
            "ldr r0, str.wan_proto",
            "ldr r1, str.pppoe",
            "bl sym.imp.acosNvramConfig_match",
            "cmp r0, 0",
            "beq 0xa7f0",
            "ldr r3, [0x0000a8ac]",
            "mov r2, 1",
            "mov r0, 0",
            "str r2, [r3]",
            "pop {r3, r4, r5, pc}",
            "ldr r0, str.wan_proto",
            "ldr r1, str.l2tp",
            "bl sym.imp.acosNvramConfig_match",
            "cmp r0, 0",
            "bne 0xa7dc",
            "ldr r0, str.wan_proto",
            "ldr r1, str.pptp",
            "bl sym.imp.acosNvramConfig_match",
            "subs r4, r0, 0",
            "bne 0xa7dc",
            "ldr r0, str.wan_proto",
            "ldr r1, str.static",
            "bl sym.imp.acosNvramConfig_match",
            "subs r5, r0, 0",
            "bne 0xa864",
            "ldr r0, str.wan_proto",
            "ldr r1, aav.0x0000bdec",
            "bl sym.imp.acosNvramConfig_match",
            "cmp r0, 0",
            "beq 0xa884",
            "ldr r3, [0x0000a8ac]",
            "mov r2, 1",
            "mov r0, r5",
            "str r2, [r3, 4]",
            "pop {r3, r4, r5, pc}",
            "ldr r0, str.msgget_create",
            "bl sym.imp.perror",
            "mvn r0, 0",
            "pop {r3, r4, r5, pc}",
            "ldr r3, [0x0000a8ac]",
            "mov r2, 1",
            "ldr r0, str.static_if_status",
            "ldr r1, aav.0x0000bd94",
            "str r2, [r3, 0xc]",
            "bl sym.imp.acosNvramConfig_set",
            "mov r0, r4",
            "pop {r3, r4, r5, pc}",
            "ldr r3, loc.__bss_start__",
            "mov r1, 1",
            "mov r2, 0x26",
            "ldr r0, str.Unknown_WAN_protocol._Stop_heartbeat._n",
            "ldr r3, [r3]",
            "bl sym.imp.fwrite",
            "mvn r0, 0",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.imp.acosNvramConfig_match": {
        "function_address": "0x00008d78",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xb000",
            "ldr pc, [ip, 0x43c]!"
        ]
    },
    "sym.imp.memset": {
        "function_address": "0x00008f34",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xb000",
            "ldr pc, [ip, 0x314]!"
        ]
    },
    "sym.imp.sysinfo": {
        "function_address": "0x00008dc0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xb000",
            "ldr pc, [ip, 0x40c]!"
        ]
    },
    "sym.imp.get_eth_link_status": {
        "function_address": "0x00008eb0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xb000",
            "ldr pc, [ip, 0x36c]!"
        ]
    },
    "sym.imp.stristr": {
        "function_address": "0x00008e08",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xb000",
            "ldr pc, [ip, 0x3dc]!"
        ]
    },
    "sym.imp.sprintf": {
        "function_address": "0x00008f64",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xb000",
            "ldr pc, [ip, 0x2f4]!"
        ]
    },
    "sym.imp.fopen": {
        "function_address": "0x00008e80",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xb000",
            "ldr pc, [ip, 0x38c]!"
        ]
    },
    "sym.imp.fclose": {
        "function_address": "0x00008e68",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xb000",
            "ldr pc, [ip, 0x39c]!"
        ]
    },
    "sym.imp.fscanf": {
        "function_address": "0x00008ff4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xb000",
            "ldr pc, [ip, 0x294]!"
        ]
    },
    "sym.imp.fseek": {
        "function_address": "0x00008f7c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xb000",
            "ldr pc, [ip, 0x2e4]!"
        ]
    },
    "sym.imp.fgets": {
        "function_address": "0x00008eec",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xb000",
            "ldr pc, [ip, 0x344]!"
        ]
    },
    "sym.imp.strtok": {
        "function_address": "0x00008e8c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xb000",
            "ldr pc, [ip, 0x384]!"
        ]
    },
    "sym.imp.strcpy": {
        "function_address": "0x00009024",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xb000",
            "ldr pc, [ip, 0x274]!"
        ]
    },
    "sym.imp.strcmp": {
        "function_address": "0x00008fac",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xb000",
            "ldr pc, [ip, 0x2c4]!"
        ]
    },
    "sym.imp.acosNvramConfig_get": {
        "function_address": "0x00008f88",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xb000",
            "ldr pc, [ip, 0x2dc]!"
        ]
    },
    "sym.imp.atoi": {
        "function_address": "0x00008fc4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xb000",
            "ldr pc, [ip, 0x2b4]!"
        ]
    },
    "sym.imp.is_russian_case": {
        "function_address": "0x00008f1c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xb000",
            "ldr pc, [ip, 0x324]!"
        ]
    },
    "sym.imp.system": {
        "function_address": "0x00008d90",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xb000",
            "ldr pc, [ip, 0x42c]!"
        ]
    },
    "fcn.0000b154": {
        "function_address": "0x0000b154",
        "instructions": [
            "push {r4, lr}",
            "ldr r4, [0x0000b1b0]",
            "ldr r3, [r4, 0x17c]",
            "cmp r3, 0",
            "bne 0xb18c",
            "mov r0, 1",
            "mov r1, r0",
            "bl sym.imp.brcm_gpio_set",
            "mov r0, 2",
            "mov r1, 1",
            "bl sym.imp.brcm_gpio_set",
            "mov r3, 1",
            "str r3, [r4, 0x17c]",
            "pop {r4, pc}",
            "mov r0, 1",
            "mov r1, r0",
            "bl sym.imp.brcm_gpio_set",
            "mov r0, 2",
            "mov r1, 0",
            "bl sym.imp.brcm_gpio_set",
            "mov r3, 0",
            "str r3, [r4, 0x17c]",
            "pop {r4, pc}"
        ]
    },
    "sym.imp.usleep": {
        "function_address": "0x00008d9c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xb000",
            "ldr pc, [ip, 0x424]!"
        ]
    },
    "sym.imp.acosNvramConfig_set": {
        "function_address": "0x00008dcc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xb000",
            "ldr pc, [ip, 0x404]!"
        ]
    },
    "fcn.0000a990": {
        "function_address": "0x0000a990",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x184",
            "add r5, sp, 0x108",
            "add r6, sp, 0x150",
            "mov r4, 0",
            "add r3, r5, 4",
            "add ip, r6, 4",
            "add r7, sp, 0x88",
            "str r4, [r3], 4",
            "mov r1, r4",
            "str r4, [r3], 4",
            "mov r2, 0x80",
            "str r4, [r3], 4",
            "mov r0, r7",
            "str r4, [r3], 4",
            "add r8, sp, 0x13c",
            "str r4, [r3], 4",
            "add sl, sp, 8",
            "str r4, [r3], 4",
            "str r4, [ip], 4",
            "str r4, [r3], 4",
            "str r4, [ip], 4",
            "str r4, [r3], 4",
            "str r4, [ip], 4",
            "str r4, [r3], 4",
            "str r4, [ip]",
            "str r4, [r3], 4",
            "str r4, [r3], 4",
            "strh r4, [r3], 2",
            "strb r4, [r3]",
            "str r4, [sp, 0x108]",
            "str r4, [sp, 0x150]",
            "bl sym.imp.memset",
            "add r3, r8, 4",
            "mov r1, r4",
            "str r4, [r3], 4",
            "mov r2, 0x80",
            "str r4, [r3], 4",
            "mov r0, sl",
            "str r4, [r3], 4",
            "str r4, [r3]",
            "str r4, [sp, 0x13c]",
            "bl sym.imp.memset",
            "movw r0, 0x4544",
            "mov r1, r4",
            "movt r0, 0x574c",
            "bl sym.imp.msgget",
            "cmp r0, r4",
            "blt 0xac04",
            "mov ip, 0x800",
            "add r1, sp, 0x178",
            "mov r2, 1",
            "mov r3, r4",
            "str ip, [sp]",
            "bl sym.imp.msgrcv",
            "cmp r0, 0",
            "blt 0xaa88",
            "ldr r3, [sp, 0x178]",
            "cmp r3, 1",
            "beq 0xac2c",
            "cmp r3, 2",
            "beq 0xac38",
            "ldr r3, [0x0000aed4]",
            "ldr r3, [r3, 4]",
            "cmp r3, 0",
            "beq 0xabe8",
            "ldr r4, [0x0000aed8]",
            "ldr r3, [r4, 8]",
            "cmp r3, 0",
            "bne 0xaab4",
            "ldr fp, [r4, 4]",
            "cmp fp, 0",
            "beq 0xaabc",
            "bl sym.imp.get_wan_port_link_status",
            "mov fp, r0",
            "add sb, sp, 0x164",
            "mov r2, 0x14",
            "mov r1, sb",
            "ldr r0, str.wan_ipaddr",
            "bl sym.imp.acosNvramConfig_read",
            "ldr r0, str.wan_dns_sel",
            "bl sym.imp.acosNvramConfig_get",
            "ldr r1, aav.0x0000bd94",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0xabf0",
            "mov r1, r5",
            "mov r2, 0x33",
            "ldr r0, str.wan_dns",
            "bl sym.imp.acosNvramConfig_read",
            "mov r1, r6",
            "mov r2, 0x14",
            "ldr r0, str.pptp_user_ip",
            "bl sym.imp.acosNvramConfig_read",
            "mov r1, r7",
            "mov r2, 0x80",
            "ldr r0, str.pptp_serv_ip",
            "bl sym.imp.acosNvramConfig_read",
            "mov r1, r8",
            "mov r2, 0x14",
            "ldr r0, str.l2tp_user_ip",
            "bl sym.imp.acosNvramConfig_read",
            "mov r1, sl",
            "mov r2, 0x80",
            "ldr r0, str.l2tp_serv_ip",
            "bl sym.imp.acosNvramConfig_read",
            "ldr r0, str.enable_ap_mode",
            "ldr r1, aav.0x0000bda0",
            "bl sym.imp.acosNvramConfig_match",
            "cmp r0, 0",
            "bne 0xad9c",
            "mov r0, sb",
            "ldr r1, aav.0x0000bf64",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0xab98",
            "ldrb r3, [sp, 0x164]",
            "cmp r3, 0",
            "beq 0xab98",
            "sxtb r3, r3",
            "cmp r3, 0",
            "beq 0xab98",
            "ldr r3, [r4]",
            "cmp r3, 0",
            "beq 0xac48",
            "mov r0, sb",
            "ldr r1, str.10.64.64.64",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0xac48",
            "mov r0, 1",
            "ldr r5, [0x0000aed8]",
            "bl fcn.0000a4fc",
            "ldr r3, [r4, 8]",
            "cmp fp, 0",
            "cmpne r3, 0",
            "bne 0xac10",
            "ldr r3, [r5]",
            "cmp r3, 0",
            "beq 0xabe8",
            "ldr r0, str.pause_wan_lan_conflict",
            "ldr r1, aav.0x0000bda0",
            "bl sym.imp.acosNvramConfig_match",
            "cmp r0, 0",
            "beq 0xad14",
            "ldr r0, str.blank_state",
            "ldr r1, aav.0x0000bda0",
            "bl sym.imp.acosNvramConfig_match",
            "cmp r0, 0",
            "beq 0xad14",
            "add sp, sp, 0x184",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "mov r1, r5",
            "mov r2, 0x33",
            "ldr r0, str.wan_dns1",
            "bl sym.imp.acosNvramConfig_read",
            "b 0xaaf8",
            "ldr r0, str.msgget__n",
            "bl sym.imp.perror",
            "b 0xaa88",
            "ldr r3, [r5, 0x14]",
            "cmp r3, 1",
            "bne 0xabe8",
            "bl sym.imp.dhcp_lease_renew",
            "mov r3, 0",
            "str r3, [r5, 0x14]",
            "b 0xabe8",
            "ldr r3, [0x0000aed4]",
            "str r4, [r3, 4]",
            "b 0xabe8",
            "ldr r3, [0x0000aed4]",
            "mov r2, 1",
            "str r2, [r3, 4]",
            "b 0xaa98",
            "ldr r0, str.0.0.0.0",
            "mov r1, sb",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0xad20",
            "ldr r0, [0x0000af20]",
            "mov r1, r5",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0xad20",
            "ldr r0, [0x0000af24]",
            "mov r1, r6",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0xad20",
            "ldr r0, [0x0000af28]",
            "mov r1, r7",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0xad20",
            "ldr r0, [0x0000af2c]",
            "mov r1, r8",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0xad20",
            "ldr r0, [0x0000af30]",
            "mov r1, sl",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0xad20",
            "ldr r0, [r4, 8]",
            "ldr r3, [0x0000aed8]",
            "cmp r0, 0",
            "beq 0xae20",
            "cmp fp, 0",
            "bne 0xadf0",
            "ldr r0, str.wan_proto",
            "ldr r1, str.dhcp",
            "bl sym.imp.acosNvramConfig_match",
            "cmp r0, 0",
            "bne 0xaeac",
            "ldr r3, [r4, 0x14]",
            "cmp r3, 0",
            "bne 0xad00",
            "ldr r0, str.acos_service_delStaRoute_",
            "bl sym.imp.system",
            "mov r3, 1",
            "mov r0, r3",
            "str r3, [r4, 0x14]",
            "bl fcn.0000a4fc",
            "b 0xabe8",
            "mov r0, 1",
            "bl sym.imp.checkWanLanConflict",
            "b 0xabe8",
            "mov r1, sb",
            "ldr r0, str.0.0.0.0",
            "bl sym.imp.strcpy",
            "mov r1, r5",
            "ldr r0, [0x0000af20]",
            "bl sym.imp.strcpy",
            "mov r1, r6",
            "ldr r0, [0x0000af24]",
            "bl sym.imp.strcpy",
            "mov r1, r7",
            "ldr r0, [0x0000af28]",
            "bl sym.imp.strcpy",
            "mov r1, r8",
            "ldr r0, [0x0000af2c]",
            "bl sym.imp.strcpy",
            "mov r1, sl",
            "ldr r0, [0x0000af30]",
            "bl sym.imp.strcpy",
            "ldr r0, str.pause_wan_lan_conflict",
            "ldr r1, aav.0x0000bda0",
            "bl sym.imp.acosNvramConfig_match",
            "cmp r0, 0",
            "beq 0xad90",
            "ldr r0, str.blank_state",
            "ldr r1, aav.0x0000bda0",
            "bl sym.imp.acosNvramConfig_match",
            "cmp r0, 0",
            "bne 0xacc0",
            "mov r0, 0",
            "bl sym.imp.checkWanLanConflict",
            "b 0xacc0",
            "ldr r0, str.ap_dyn_ip",
            "bl sym.imp.acosNvramConfig_get",
            "bl sym.imp.atoi",
            "subs r5, r0, 0",
            "beq 0xadfc",
            "cmp fp, 0",
            "bne 0xadd8",
            "ldr r3, [r4, 0x10]",
            "cmp r3, 0",
            "beq 0xae5c",
            "mov r3, 1",
            "mov r0, r3",
            "str r3, [r4, 0x10]",
            "bl fcn.0000a4fc",
            "b 0xabe8",
            "ldr r3, [r4, 0x10]",
            "cmp r3, 1",
            "beq 0xae68",
            "bl sym.imp.has_apmode_ip",
            "cmp r0, 0",
            "beq 0xae50",
            "mov r0, 0",
            "bl fcn.0000a4fc",
            "b 0xabe8",
            "bl sym.imp.has_apmode_ip",
            "cmp r0, 0",
            "beq 0xae14",
            "mov r0, r5",
            "bl fcn.0000a4fc",
            "b 0xabe8",
            "mov r0, 1",
            "bl fcn.0000a4fc",
            "b 0xabe8",
            "ldr r4, [r3]",
            "cmp r4, 0",
            "bne 0xae54",
            "ldr r5, [r3, 0xc]",
            "cmp r5, 0",
            "bne 0xae8c",
            "ldr r3, [r3, 4]",
            "cmp r3, 0",
            "beq 0xabe8",
            "bl sym.imp.bpaloginGetConnectionStatus",
            "cmp r0, 2",
            "beq 0xae08",
            "mov r0, 1",
            "bl fcn.0000a4fc",
            "b 0xabe8",
            "ldr r0, str.acos_service_delStaRoute_",
            "bl sym.imp.system",
            "b 0xadc4",
            "ldr r1, aav.0x0000bf64",
            "ldr r0, str.lan_ipaddr",
            "bl sym.imp.acosNvramConfig_set",
            "ldr r0, str.killall__SIGUSR1_udhcpc",
            "bl sym.imp.system",
            "ldr r3, [0x0000aed8]",
            "mov r2, 0",
            "str r2, [r3, 0x10]",
            "b 0xabe8",
            "ldr r0, str.static_if_status",
            "ldr r1, aav.0x0000bda0",
            "bl sym.imp.acosNvramConfig_match",
            "cmp r0, 0",
            "beq 0xae50",
            "mov r0, r4",
            "bl fcn.0000a4fc",
            "b 0xabe8",
            "ldr r1, aav.0x0000bf64",
            "ldr r0, str.wan_ipaddr",
            "bl sym.imp.acosNvramConfig_set",
            "ldr r1, aav.0x0000bf64",
            "ldr r0, str.wan_netmask",
            "bl sym.imp.acosNvramConfig_set",
            "ldr r1, aav.0x0000bf64",
            "ldr r0, str.wan_gateway",
            "bl sym.imp.acosNvramConfig_set",
            "b 0xacec"
        ]
    },
    "fcn.0000af7c": {
        "function_address": "0x0000af7c",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "sub sp, sp, 0x84",
            "ldr r6, [0x0000b130]",
            "bl sym.imp.get_lan_port_link_status",
            "ldr r3, [r6, 0x174]",
            "subs r4, r0, 0",
            "movne r4, 1",
            "mov r5, r0",
            "cmp r3, 0",
            "movne r2, 0",
            "andeq r2, r4, 1",
            "cmp r2, 0",
            "bne 0xb0a8",
            "rsbs r2, r0, 1",
            "movlo r2, 0",
            "cmp r3, 0",
            "moveq r2, 0",
            "cmp r2, 0",
            "bne 0xb120",
            "cmp r5, r3",
            "moveq r4, 0",
            "andne r4, r4, 1",
            "cmp r4, 0",
            "beq 0xb050",
            "mov r4, 1",
            "mov r7, sp",
            "asr r3, r3, r4",
            "asr r2, r5, r4",
            "tst r3, 1",
            "beq 0xb01c",
            "tst r2, 1",
            "beq 0xb0d8",
            "add r4, r4, 1",
            "cmp r4, 5",
            "beq 0xb050",
            "ldr r3, [r6, 0x174]",
            "asr r2, r5, r4",
            "asr r3, r3, r4",
            "tst r3, 1",
            "bne 0xaff4",
            "tst r2, 1",
            "beq 0xaffc",
            "bl sym.imp.sys_uptime",
            "mov r3, r4",
            "mov r2, r0",
            "ldr r1, str.echo__lu____tmp_lan_d_time",
            "mov r0, sp",
            "bl sym.imp.sprintf",
            "add r4, r4, 1",
            "mov r0, sp",
            "bl sym.imp.system",
            "cmp r4, 5",
            "bne 0xb008",
            "str r5, [r6, 0x174]",
            "bl sym.imp.get_wan_port_link_status",
            "ldr r3, [r6, 0x178]",
            "subs r2, r0, 0",
            "movne r2, 1",
            "mov r4, r0",
            "cmp r3, 0",
            "movne r2, 0",
            "cmp r2, 0",
            "bne 0xb0f4",
            "rsbs r2, r0, 1",
            "movlo r2, 0",
            "cmp r3, 0",
            "moveq r2, 0",
            "cmp r2, 0",
            "bne 0xb09c",
            "str r4, [r6, 0x178]",
            "add sp, sp, 0x84",
            "pop {r4, r5, r6, r7, pc}",
            "ldr r0, str.rm__tmp_wan_dev__tmp_wan_time",
            "bl sym.imp.system",
            "b 0xb090",
            "ldr r0, str.cp__proc_net_dev__tmp_lan_dev",
            "mov r7, sp",
            "bl sym.imp.system",
            "bl sym.imp.sys_uptime",
            "ldr r1, str.echo__lu____tmp_lan_time",
            "mov r2, r0",
            "mov r0, sp",
            "bl sym.imp.sprintf",
            "mov r0, sp",
            "bl sym.imp.system",
            "ldr r3, [r6, 0x174]",
            "b 0xafc8",
            "mov r2, r4",
            "mov r0, sp",
            "ldr r1, str.rm__tmp_lan_d_time",
            "bl sym.imp.sprintf",
            "mov r0, sp",
            "bl sym.imp.system",
            "b 0xaffc",
            "ldr r0, str.cp__proc_net_dev__tmp_wan_dev",
            "mov r5, sp",
            "bl sym.imp.system",
            "bl sym.imp.sys_uptime",
            "ldr r1, str.echo__lu____tmp_wan_time",
            "mov r2, r0",
            "mov r0, sp",
            "bl sym.imp.sprintf",
            "mov r0, sp",
            "bl sym.imp.system",
            "b 0xb090",
            "ldr r0, str.rm__tmp_lan_dev__tmp_lan_time",
            "bl sym.imp.system",
            "ldr r3, [r6, 0x174]",
            "b 0xafc8"
        ]
    },
    "fcn.0000af58": {
        "function_address": "0x0000af58",
        "instructions": [
            "push {r3, lr}",
            "bl sym.imp.get_lan_port_speed_status",
            "ldr r3, [0x0000af78]",
            "ldrh r2, [r3, 0x1c]",
            "eor r2, r0, r2",
            "tst r2, 0x1e",
            "strhne r0, [r3, 0x1c]",
            "pop {r3, pc}"
        ]
    },
    "sym.imp.acosNvramConfig_save": {
        "function_address": "0x00008e98",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xb000",
            "ldr pc, [ip, 0x37c]!"
        ]
    },
    "fcn.00009160": {
        "function_address": "0x00009160",
        "instructions": [
            "push {r3, lr}",
            "movw r3, 0x554",
            "mov r2, r1",
            "str r3, [r1]",
            "mov r1, 0x9f",
            "mov r3, 0x2000",
            "bl sym.imp.wl_ioctl",
            "and r0, r0, r0, asr 31",
            "pop {r3, pc}"
        ]
    },
    "fcn.0000921c": {
        "function_address": "0x0000921c",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sl, lr}",
            "mov r8, r1",
            "ldr r3, [r1]",
            "mov r7, r2",
            "cmp r3, 0",
            "beq 0x929c",
            "cmp r2, 0x3f",
            "bgt 0x929c",
            "add r5, r2, r2, lsl 2",
            "add r6, r1, 4",
            "mov r4, 0",
            "add r5, r0, r5, lsl 4",
            "movw sl, 0x553",
            "b 0x925c",
            "cmp r2, 0x3f",
            "bgt 0x929c",
            "add r0, r5, 4",
            "mov r1, r6",
            "mov r2, 6",
            "add r4, r4, 1",
            "bl sym.imp.memcpy",
            "ldr r3, [r8]",
            "add r2, r7, r4",
            "add r6, r6, 6",
            "add r5, r5, 0x50",
            "cmp r3, r4",
            "movls r3, 0",
            "movhi r3, 1",
            "cmp r4, sl",
            "movgt r3, 0",
            "cmp r3, 0",
            "bne 0x9254",
            "mov r0, 0",
            "pop {r3, r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "sym.imp._eval": {
        "function_address": "0x00008f04",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xb000",
            "ldr pc, [ip, 0x334]!"
        ]
    },
    "fcn.000092a8": {
        "function_address": "0x000092a8",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r3, 0",
            "sub sp, sp, 0x100",
            "mov r4, r0",
            "mov r1, r3",
            "mov r2, 0x1b",
            "add r0, sp, 0xd9",
            "str r3, [sp, 0xfc]",
            "bl sym.imp.memset",
            "cmp r4, 0",
            "ldr r3, str.eth1",
            "ldrne r3, str.eth2",
            "add r4, sp, 0xd4",
            "mov r6, 0",
            "add r2, sp, 0xfc",
            "ldm r3, {r0, r1}",
            "mov r3, 4",
            "str r6, [sp, 0xf4]",
            "strh r6, [sp, 0xf8]",
            "str r0, [sp, 0xd4]",
            "mov r0, r4",
            "strb r1, [sp, 0xd8]",
            "mov r1, 0xa2",
            "bl sym.imp.wl_ioctl",
            "cmp r0, r6",
            "blt 0x9344",
            "ldr r5, [sp, 0xfc]",
            "cmp r5, r6",
            "moveq r0, r5",
            "bne 0x9328",
            "add sp, sp, 0x100",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}",
            "mov r0, r4",
            "mov r1, 0x17",
            "add r2, sp, 0xf4",
            "mov r3, 6",
            "bl sym.imp.wl_ioctl",
            "cmp r0, r6",
            "bge 0x934c",
            "mov r0, r6",
            "b 0x9320",
            "ldrb r7, [sp, 0xf4]",
            "cmp r7, r6",
            "bne 0x93e4",
            "ldrb r3, [sp, 0xf5]",
            "cmp r3, r6",
            "bne 0x93e4",
            "ldrb r3, [sp, 0xf6]",
            "cmp r3, r6",
            "bne 0x93e4",
            "ldrb r3, [sp, 0xf7]",
            "cmp r3, r6",
            "bne 0x93e4",
            "ldrb r3, [sp, 0xf8]",
            "cmp r3, r6",
            "bne 0x93e4",
            "ldrb r6, [sp, 0xf9]",
            "cmp r6, 0",
            "bne 0x93e4",
            "add r5, sp, 0x14",
            "mov r1, r6",
            "mov r2, 0xa0",
            "mov r0, r5",
            "bl sym.imp.memset",
            "ldr r3, str.sta_info",
            "ldm r3, {r0, r1, r2}",
            "mov r3, r5",
            "stm r3!, {r0, r1}",
            "add r1, r5, 9",
            "strb r2, [r3]",
            "ldr r0, [0x00009508]",
            "bl sym.imp.ether_atoe",
            "mov r0, r4",
            "movw r1, 0x106",
            "mov r2, r5",
            "mov r3, 0xa0",
            "bl sym.imp.wl_ioctl",
            "mov r0, r6",
            "b 0x9320",
            "mov r5, 0",
            "add r3, sp, 0xbc",
            "add r6, sp, 0x14",
            "str r5, [r3], 4",
            "mov r1, r5",
            "str r5, [r3], 4",
            "mov r2, 0xa0",
            "str r5, [r3], 4",
            "mov r0, r6",
            "str r5, [r3], 4",
            "str r5, [r3], 4",
            "mov sb, r6",
            "str r5, [r3]",
            "str r5, [sp, 0xb4]",
            "str r5, [sp, 0xb8]",
            "bl sym.imp.memset",
            "ldr r2, str.sta_info",
            "ldrb lr, [sp, 0xf6]",
            "ldrb ip, [sp, 0xf7]",
            "ldrb r8, [sp, 0xf8]",
            "ldm r2, {r0, r1, r2}",
            "ldrb sl, [sp, 0xf9]",
            "ldrb r3, [sp, 0xf5]",
            "stm sb!, {r0, r1}",
            "ldr r1, str._02x:_02X:_02X:_02X:_02X:_02X",
            "strb r2, [sb]",
            "mov r2, r7",
            "ldr r0, [0x00009508]",
            "str lr, [sp]",
            "str ip, [sp, 4]",
            "str r8, [sp, 8]",
            "str sl, [sp, 0xc]",
            "bl sym.imp.sprintf",
            "add r1, r6, 9",
            "ldr r0, [0x00009508]",
            "bl sym.imp.ether_atoe",
            "mov r0, r4",
            "movw r1, 0x106",
            "mov r2, r6",
            "mov r3, 0xa0",
            "bl sym.imp.wl_ioctl",
            "cmp r0, r5",
            "bne 0x94b0",
            "ldr r0, str.wlg_secu_type",
            "ldr r1, str.None",
            "bl sym.imp.acosNvramConfig_match",
            "cmp r0, r5",
            "beq 0x94c4",
            "ldr r0, [r6, 8]",
            "ubfx r0, r0, 4, 1",
            "b 0x9320",
            "ldr r0, str._s:_wifi_ioctl_error.__n",
            "ldr r1, str.wlan_is_assoc",
            "bl sym.imp.printf",
            "mov r0, r5",
            "b 0x9320",
            "ldr r0, str.wlg_secu_type",
            "ldr r1, aav.0x0000b308",
            "bl sym.imp.acosNvramConfig_match",
            "cmp r0, 0",
            "beq 0x94f0",
            "ldr r0, [r6, 8]",
            "and r0, r0, 0x18",
            "cmp r0, 0x18",
            "movne r0, 0",
            "moveq r0, 1",
            "b 0x9320",
            "ldr r0, [r6, 8]",
            "ubfx r0, r0, 5, 1",
            "b 0x9320"
        ]
    },
    "fcn.000095ac": {
        "function_address": "0x000095ac",
        "instructions": [
            "cmp r0, 1",
            "push {r3, r4, r5, lr}",
            "mov r5, r1",
            "beq 0x963c",
            "ldr r4, [0x00009670]",
            "ldr r3, [r4]",
            "cmp r3, 0",
            "ble 0x95e4",
            "sub r3, r3, 1",
            "cmp r3, 0x1e",
            "str r3, [r4]",
            "beq 0x9660",
            "cmp r3, 0",
            "beq 0x964c",
            "cmp r5, 1",
            "moveq r3, 0x3c",
            "streq r3, [r4, 4]",
            "beq 0x961c",
            "ldr r2, [r4, 4]",
            "ldr r3, [0x00009670]",
            "cmp r2, 0",
            "ble 0x961c",
            "sub r2, r2, 1",
            "cmp r2, 0x1e",
            "str r2, [r3, 4]",
            "beq 0x9668",
            "cmp r2, 0",
            "beq 0x9624",
            "mov r0, 0",
            "pop {r3, r4, r5, pc}",
            "mov r2, 0x1e",
            "ldr r0, str.wlconf_eth2_start",
            "str r2, [r3, 4]",
            "bl sym.imp.system",
            "mov r0, 0",
            "pop {r3, r4, r5, pc}",
            "ldr r4, [0x00009670]",
            "mov r3, 0x3c",
            "str r3, [r4]",
            "b 0x95e4",
            "mov r3, 0x1e",
            "ldr r0, str.wlconf_eth1_start",
            "str r3, [r4]",
            "bl sym.imp.system",
            "b 0x95e4",
            "bl fcn.0000957c",
            "b 0x95e4",
            "bl fcn.00009594",
            "b 0x961c"
        ]
    },
    "sym.imp.ftell": {
        "function_address": "0x00008fb8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xb000",
            "ldr pc, [ip, 0x2bc]!"
        ]
    },
    "sym.imp.fprintf": {
        "function_address": "0x00008f4c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xb000",
            "ldr pc, [ip, 0x304]!"
        ]
    },
    "sym.imp.fputs": {
        "function_address": "0x00008f28",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xb000",
            "ldr pc, [ip, 0x31c]!"
        ]
    },
    "sym.imp.sleep": {
        "function_address": "0x00008db4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xb000",
            "ldr pc, [ip, 0x414]!"
        ]
    },
    "sym.imp.inet_pton": {
        "function_address": "0x00008dfc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xb000",
            "ldr pc, [ip, 0x3e4]!"
        ]
    },
    "sym.imp.isPidExist": {
        "function_address": "0x00008f94",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xb000",
            "ldr pc, [ip, 0x2d4]!"
        ]
    },
    "sym.imp.socket": {
        "function_address": "0x00008f70",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xb000",
            "ldr pc, [ip, 0x2ec]!"
        ]
    },
    "sym.imp.close": {
        "function_address": "0x00008ebc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xb000",
            "ldr pc, [ip, 0x364]!"
        ]
    },
    "sym.imp.stat": {
        "function_address": "0x00008e20",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xb000",
            "ldr pc, [ip, 0x3cc]!"
        ]
    },
    "fcn.0000b1b4": {
        "function_address": "0x0000b1b4",
        "instructions": [
            "cmp r0, 0",
            "push {r4, lr}",
            "sub sp, sp, 0x30",
            "bne 0xb204",
            "ldr r1, str.gpio__d_1",
            "mov r2, 6",
            "mov r0, sp",
            "mov r4, sp",
            "bl sym.imp.sprintf",
            "mov r0, sp",
            "bl sym.imp.system",
            "ldr r1, str.gpio__d_0",
            "mov r2, 7",
            "mov r0, sp",
            "bl sym.imp.sprintf",
            "mov r0, sp",
            "bl sym.imp.system",
            "mov r0, 1",
            "add sp, sp, 0x30",
            "pop {r4, pc}",
            "ldr r1, str.gpio__d_0",
            "mov r2, 6",
            "mov r0, sp",
            "mov r4, sp",
            "bl sym.imp.sprintf",
            "mov r0, sp",
            "bl sym.imp.system",
            "ldr r1, str.gpio__d_1",
            "mov r2, 7",
            "mov r0, sp",
            "bl sym.imp.sprintf",
            "mov r0, sp",
            "bl sym.imp.system",
            "mov r0, 0",
            "b 0xb1fc"
        ]
    },
    "sym.imp.fputc": {
        "function_address": "0x00008ec8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xb000",
            "ldr pc, [ip, 0x35c]!"
        ]
    },
    "fcn.0000a8d8": {
        "function_address": "0x0000a8d8",
        "instructions": [
            "cmp r0, 2",
            "push {r3, r4, r5, lr}",
            "mov r4, r0",
            "bne 0xa934",
            "ldr r5, [r1, 4]",
            "ldr r1, str.stop",
            "mov r0, r5",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0xa944",
            "mov r0, r5",
            "ldr r1, aav.0x0000b354",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0xa968",
            "mov r0, r5",
            "bl sym.imp.atoi",
            "subs r3, r0, 0",
            "beq 0xa95c",
            "cmp r3, 1",
            "beq 0xa95c",
            "mov r0, 0",
            "pop {r3, r4, r5, pc}",
            "ldr r0, str.Usage:_wanled__stopstart01__nExample:_wanled_0",
            "bl sym.imp.puts",
            "mov r0, 0",
            "pop {r3, r4, r5, pc}",
            "mov r0, 1",
            "bl fcn.0000a70c",
            "ldr r0, str.WAN_led_indicator_function_has_been_stopped.",
            "bl sym.imp.puts",
            "mov r0, 0",
            "pop {r3, r4, r5, pc}",
            "bl fcn.0000a4fc",
            "mov r0, 0",
            "pop {r3, r4, r5, pc}",
            "mov r0, r4",
            "bl fcn.0000a70c",
            "ldr r0, str.WAN_led_indicator_function_has_been_started.",
            "bl sym.imp.puts",
            "b 0xa92c"
        ]
    },
    "sym.imp.connectWithTimeout": {
        "function_address": "0x00008e50",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xb000",
            "ldr pc, [ip, 0x3ac]!"
        ]
    },
    "sym.imp.perror": {
        "function_address": "0x00008f40",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xb000",
            "ldr pc, [ip, 0x30c]!"
        ]
    },
    "entry.init0": {
        "function_address": "0x000090bc",
        "instructions": [
            "push {r3, lr}",
            "ldr r3, [0x000090fc]",
            "cmp r3, 0",
            "beq 0x90d8",
            "ldr r0, [0x00009100]",
            "ldr r1, [0x00009104]",
            "bl loc.imp.__register_frame_info",
            "ldr r0, [0x00009108]",
            "ldr r3, [r0]",
            "cmp r3, 0",
            "popeq {r3, pc}",
            "ldr r3, [0x0000910c]",
            "cmp r3, 0",
            "popeq {r3, pc}",
            "blx r3",
            "pop {r3, pc}"
        ]
    },
    "loc.imp.__register_frame_info": {
        "function_address": "0x00008d60",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xb000",
            "ldr pc, [ip, 0x44c]!"
        ]
    },
    "entry.fini0": {
        "function_address": "0x00009078",
        "instructions": [
            "push {r3, lr}",
            "ldr r3, [0x000090b0]",
            "ldrb r3, [r3]",
            "cmp r3, 0",
            "popne {r3, pc}",
            "ldr r3, [0x000090b4]",
            "cmp r3, 0",
            "beq 0x90a0",
            "ldr r0, [0x000090b8]",
            "bl loc.imp.__deregister_frame_info",
            "ldr r3, [0x000090b0]",
            "mov r2, 1",
            "strb r2, [r3]",
            "pop {r3, pc}"
        ]
    },
    "loc.imp.__deregister_frame_info": {
        "function_address": "0x00009030",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xb000",
            "ldr pc, [ip, 0x26c]!"
        ]
    },
    "fcn.0000957c": {
        "function_address": "0x0000957c",
        "instructions": [
            "movw r0, 0xb338",
            "push {r4, lr}",
            "movt r0, 0",
            "bl sym.imp.system",
            "movw r0, 0xb348",
            "movt r0, 0",
            "pop {r4, lr}",
            "b sym.imp.system",
            "push {r4, lr}",
            "bl fcn.00009524",
            "mov r0, 5",
            "bl sym.imp.sleep",
            "pop {r4, lr}",
            "b 0x9530"
        ]
    },
    "fcn.00009524": {
        "function_address": "0x00009524",
        "instructions": [
            "movw r0, 0xb324",
            "movt r0, 0",
            "b sym.imp.system"
        ]
    },
    "fcn.00009594": {
        "function_address": "0x00009594",
        "instructions": [
            "movw r0, 0xb370",
            "push {r4, lr}",
            "movt r0, 0",
            "bl sym.imp.system",
            "movw r0, 0xb380",
            "movt r0, 0",
            "pop {r4, lr}",
            "b sym.imp.system",
            "push {r4, lr}",
            "bl fcn.00009550",
            "mov r0, 5",
            "bl sym.imp.sleep",
            "pop {r4, lr}",
            "b 0x955c"
        ]
    },
    "fcn.00009550": {
        "function_address": "0x00009550",
        "instructions": [
            "movw r0, 0xb35c",
            "movt r0, 0",
            "b sym.imp.system"
        ]
    },
    "sym.imp.msgget": {
        "function_address": "0x00008fdc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xb000",
            "ldr pc, [ip, 0x2a4]!"
        ]
    },
    "sym.imp.fwrite": {
        "function_address": "0x00008d84",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xb000",
            "ldr pc, [ip, 0x434]!"
        ]
    },
    "sym.imp.brcm_gpio_set": {
        "function_address": "0x00008ef8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xb000",
            "ldr pc, [ip, 0x33c]!"
        ]
    },
    "sym.imp.msgrcv": {
        "function_address": "0x00008ee0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xb000",
            "ldr pc, [ip, 0x34c]!"
        ]
    },
    "sym.imp.get_wan_port_link_status": {
        "function_address": "0x00008ea4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xb000",
            "ldr pc, [ip, 0x374]!"
        ]
    },
    "sym.imp.acosNvramConfig_read": {
        "function_address": "0x00008e14",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xb000",
            "ldr pc, [ip, 0x3d4]!"
        ]
    },
    "fcn.0000a4fc": {
        "function_address": "0x0000a4fc",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r4, r0",
            "ldr r5, [0x0000a6c8]",
            "sub sp, sp, 0x30",
            "ldr r3, [r5]",
            "cmp r3, r0",
            "beq 0xa5a8",
            "cmp r0, 0",
            "beq 0xa5b4",
            "ldr r1, aav.0x0000b330",
            "ldr r0, str.wan_status",
            "bl sym.imp.acosNvramConfig_set",
            "bl sym.imp.is_russian_case",
            "cmp r0, 0",
            "beq 0xa6a8",
            "ldr r0, str.wan_proto",
            "ldr r1, str.pppoe",
            "bl sym.imp.acosNvramConfig_match",
            "cmp r0, 0",
            "beq 0xa680",
            "ldr r3, [0x0000a6dc]",
            "ldr r2, [r3]",
            "cmp r2, 0",
            "bne 0xa66c",
            "ldr r3, [r3, 4]",
            "cmp r3, 0",
            "bne 0xa66c",
            "cmp r4, 0",
            "beq 0xa630",
            "ldr r1, str.gpio__d_0",
            "mov r2, 6",
            "mov r0, sp",
            "mov r6, sp",
            "bl sym.imp.sprintf",
            "mov r0, sp",
            "bl sym.imp.system",
            "ldr r1, str.gpio__d_1",
            "mov r2, 7",
            "mov r0, sp",
            "bl sym.imp.sprintf",
            "mov r0, sp",
            "bl sym.imp.system",
            "str r4, [r5]",
            "mov r0, 0",
            "add sp, sp, 0x30",
            "pop {r4, r5, r6, pc}",
            "ldr r1, aav.0x0000b344",
            "ldr r0, str.wan_status",
            "bl sym.imp.acosNvramConfig_set",
            "bl sym.imp.is_russian_case",
            "cmp r0, 0",
            "beq 0xa608",
            "ldr r0, str.wan_proto",
            "ldr r1, str.pppoe",
            "bl sym.imp.acosNvramConfig_match",
            "cmp r0, 0",
            "bne 0xa54c",
            "ldr r0, str.wan_proto",
            "ldr r1, str.pptp",
            "bl sym.imp.acosNvramConfig_match",
            "cmp r0, 0",
            "bne 0xa54c",
            "ldr r0, str.wan_proto",
            "ldr r1, str.l2tp",
            "bl sym.imp.acosNvramConfig_match",
            "cmp r0, 0",
            "bne 0xa54c",
            "ldr r0, str.igmp_proxying_enable",
            "ldr r1, aav.0x0000bda0",
            "bl sym.imp.acosNvramConfig_match",
            "cmp r0, 0",
            "beq 0xa54c",
            "ldr r0, str.killall__SIGUSR1_swresetd",
            "bl sym.imp.system",
            "b 0xa54c",
            "ldr r0, str.killall__SIGUSR2_dnsmasq",
            "bl sym.imp.system",
            "ldr r1, str.gpio__d_1",
            "mov r2, 6",
            "mov r0, sp",
            "mov r6, sp",
            "bl sym.imp.sprintf",
            "mov r0, sp",
            "bl sym.imp.system",
            "ldr r1, str.gpio__d_0",
            "mov r2, 7",
            "mov r0, sp",
            "bl sym.imp.sprintf",
            "mov r0, sp",
            "bl sym.imp.system",
            "str r4, [r5]",
            "b 0xa5a8",
            "cmp r4, 0",
            "beq 0xa628",
            "ldr r0, str.killall__SIGINT_dnsmasq",
            "bl sym.imp.system",
            "b 0xa570",
            "ldr r0, str.wan_proto",
            "ldr r1, str.pptp",
            "bl sym.imp.acosNvramConfig_match",
            "cmp r0, 0",
            "bne 0xa54c",
            "ldr r0, str.wan_proto",
            "ldr r1, str.l2tp",
            "bl sym.imp.acosNvramConfig_match",
            "cmp r0, 0",
            "bne 0xa54c",
            "ldr r0, str.igmp_proxying_enable",
            "ldr r1, aav.0x0000bda0",
            "bl sym.imp.acosNvramConfig_match",
            "cmp r0, 0",
            "beq 0xa54c",
            "ldr r0, str.killall__SIGUSR2_swresetd",
            "bl sym.imp.system",
            "b 0xa54c"
        ]
    },
    "sym.imp.dhcp_lease_renew": {
        "function_address": "0x00008ed4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xb000",
            "ldr pc, [ip, 0x354]!"
        ]
    },
    "sym.imp.checkWanLanConflict": {
        "function_address": "0x00008f10",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xb000",
            "ldr pc, [ip, 0x32c]!"
        ]
    },
    "sym.imp.has_apmode_ip": {
        "function_address": "0x00009018",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xb000",
            "ldr pc, [ip, 0x27c]!"
        ]
    },
    "sym.imp.bpaloginGetConnectionStatus": {
        "function_address": "0x00009000",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xb000",
            "ldr pc, [ip, 0x28c]!"
        ]
    },
    "sym.imp.get_lan_port_link_status": {
        "function_address": "0x00008e2c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xb000",
            "ldr pc, [ip, 0x3c4]!"
        ]
    },
    "sym.imp.sys_uptime": {
        "function_address": "0x00008e44",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xb000",
            "ldr pc, [ip, 0x3b4]!"
        ]
    },
    "sym.imp.get_lan_port_speed_status": {
        "function_address": "0x00008e74",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xb000",
            "ldr pc, [ip, 0x394]!"
        ]
    },
    "sym.imp.wl_ioctl": {
        "function_address": "0x00008de4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xb000",
            "ldr pc, [ip, 0x3f4]!"
        ]
    },
    "sym.imp.memcpy": {
        "function_address": "0x00008da8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xb000",
            "ldr pc, [ip, 0x41c]!"
        ]
    },
    "sym.imp.ether_atoe": {
        "function_address": "0x00008e38",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xb000",
            "ldr pc, [ip, 0x3bc]!"
        ]
    },
    "sym.imp.printf": {
        "function_address": "0x00008fd0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xb000",
            "ldr pc, [ip, 0x2ac]!"
        ]
    },
    "sym.imp.puts": {
        "function_address": "0x00008fe8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xb000",
            "ldr pc, [ip, 0x29c]!"
        ]
    },
    "fcn.0000a70c": {
        "function_address": "0x0000a70c",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r0",
            "movw r0, 0x4544",
            "sub sp, sp, 8",
            "movt r0, 0x574c",
            "mov r1, 0",
            "bl sym.imp.msgget",
            "cmp r0, 0",
            "blt 0xa75c",
            "add r1, sp, 8",
            "mov r2, 1",
            "str r4, [r1, -8]!",
            "mov r3, 0",
            "mov r1, sp",
            "bl sym.imp.msgsnd",
            "cmp r0, 0",
            "movge r0, 0",
            "blt 0xa76c",
            "add sp, sp, 8",
            "pop {r4, pc}",
            "ldr r0, str.msgget__n",
            "bl sym.imp.perror",
            "mvn r0, 0",
            "b 0xa754",
            "ldr r0, str.msgsnd",
            "bl sym.imp.perror",
            "mvn r0, 0",
            "b 0xa754"
        ]
    },
    "sym.imp.msgsnd": {
        "function_address": "0x00008d54",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0xb000",
            "ldr pc, [ip, 0x454]!"
        ]
    }
}