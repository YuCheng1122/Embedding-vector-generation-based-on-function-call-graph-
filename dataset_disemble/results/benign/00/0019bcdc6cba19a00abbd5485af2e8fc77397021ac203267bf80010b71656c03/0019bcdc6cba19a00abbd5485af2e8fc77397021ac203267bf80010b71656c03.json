{
    "sym.sfe_drv_destroy_ipv4_rule_msg": {
        "function_address": "0x08000c04",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "mov r5, r0",
            "sub sp, sp, 0x2c",
            "mov r0, 0",
            "mov r4, r1",
            "bl fcn.080000bc",
            "subs r6, r0, 0",
            "bne 0x8000c4c",
            "ldr r4, [0x08000cd0]",
            "add r0, r4, 0x10",
            "bl _raw_spin_lock_bh",
            "ldr r3, [r4, 0x58]",
            "add r0, r4, 0x10",
            "add r3, r3, 1",
            "str r3, [r4, 0x58]",
            "bl _raw_spin_unlock_bh",
            "mov r0, 2",
            "b 0x8000cc8",
            "ldrb r3, [r4, 0x28]",
            "mov r0, sp",
            "mov r7, 0",
            "str r3, [sp]",
            "ldr r3, [r4, 0x1c]",
            "str r3, [sp, 4]",
            "ldr r3, [r4, 0x20]",
            "str r3, [sp, 0x14]",
            "ldrh r3, [r4, 0x24]",
            "strh r3, [sp, 0x24]",
            "ldrh r3, [r4, 0x26]",
            "strh r3, [sp, 0x26]",
            "bl sfe_ipv4_destroy_rule",
            "str r7, [r4, 4]",
            "add r4, r5, 0x10",
            "str r7, [r6, 0x10]",
            "mov r0, r4",
            "bl _raw_spin_lock_bh",
            "ldr r3, [r5, 0xc]",
            "add r2, r5, 8",
            "str r6, [r5, 0xc]",
            "mov r0, r4",
            "stm r6, {r2, r3}",
            "str r6, [r3]",
            "bl _raw_spin_unlock_bh",
            "ldr r3, [0x08000cd4]",
            "mov r0, 4",
            "add r2, r5, 0x14",
            "ldr r1, [r3]",
            "bl queue_work_on",
            "mov r0, r7",
            "add sp, sp, 0x2c",
            "pop {r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.080000bc": {
        "function_address": "0x080000bc",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "subs r5, r0, 0",
            "mov r7, r1",
            "beq 0x80000f8",
            "cmp r5, 1",
            "beq 0x8000100",
            "mov r2, 0xff",
            "ldr r1, [0x08000158]",
            "ldr r0, [0x0800015c]",
            "bl printk",
            "mov r1, r5",
            "ldr r0, [0x08000160]",
            "bl printk",
            "mov r0, 0",
            "pop {r3, r4, r5, r6, r7, pc}",
            "mov r6, 0xb0",
            "b 0x8000104",
            "mov r6, 0xbc",
            "add r0, r6, 0xc",
            "movw r1, 0x8020",
            "bl __kmalloc",
            "subs r4, r0, 0",
            "bne 0x8000134",
            "ldr r1, [0x08000158]",
            "movw r2, 0x105",
            "ldr r0, [0x0800015c]",
            "bl printk",
            "ldr r0, [0x08000164]",
            "bl printk",
            "b 0x8000150",
            "cmp r7, 0",
            "str r5, [r4, 8]",
            "beq 0x8000150",
            "add r0, r4, 0xc",
            "mov r1, r7",
            "mov r2, r6",
            "bl memcpy",
            "mov r0, r4",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "sym.sfe_drv_create_ipv4_rule_msg": {
        "function_address": "0x080007e4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, lr}",
            "mov r6, r0",
            "sub sp, sp, 0xbc",
            "mov r0, 0",
            "mov r4, r1",
            "bl fcn.080000bc",
            "subs r5, r0, 0",
            "bne 0x800082c",
            "ldr r4, [0x08000bf8]",
            "add r0, r4, 0x10",
            "bl _raw_spin_lock_bh",
            "ldr r3, [r4, 0x58]",
            "add r0, r4, 0x10",
            "add r3, r3, 1",
            "str r3, [r4, 0x58]",
            "bl _raw_spin_unlock_bh",
            "mov r0, 2",
            "b 0x8000bf0",
            "ldrh r1, [r4, 0x1c]",
            "tst r1, 1",
            "bne 0x8000854",
            "ldr r7, [0x08000bf8]",
            "add r0, r7, 0x10",
            "bl _raw_spin_lock_bh",
            "ldr r3, [r7, 0x3c]",
            "add r3, r3, 1",
            "str r3, [r7, 0x3c]",
            "b 0x800099c",
            "ldrh r2, [r4, 0x1e]",
            "and r0, r2, 2",
            "uxth r0, r0",
            "cmp r0, 0",
            "beq 0x8000890",
            "ldr r7, [0x08000bf8]",
            "add r0, r7, 0x10",
            "bl _raw_spin_lock_bh",
            "ldr r3, [r7, 0x40]",
            "add r0, r7, 0x10",
            "add r3, r3, 1",
            "str r3, [r7, 0x40]",
            "bl _raw_spin_unlock_bh",
            "mov r3, 2",
            "b 0x8000ad8",
            "ldr ip, [r4, 0x20]",
            "ldrb r3, [r4, 0x2c]",
            "str r0, [sp, 0x10]",
            "str ip, [sp, 0x1c]",
            "cmp r3, 6",
            "ldr ip, [r4, 0x24]",
            "str r3, [sp, 4]",
            "str ip, [sp, 0x3c]",
            "ldr ip, [r4, 0x54]",
            "str ip, [sp, 0x2c]",
            "ldr ip, [r4, 0x58]",
            "str ip, [sp, 0x4c]",
            "beq 0x80008f0",
            "cmp r3, 0x11",
            "bne 0x8000984",
            "ldrh r3, [r4, 0x28]",
            "strh r3, [sp, 0x5c]",
            "ldrh r3, [r4, 0x2a]",
            "strh r3, [sp, 0x60]",
            "ldrh r3, [r4, 0x5c]",
            "strh r3, [sp, 0x5e]",
            "ldrh r3, [r4, 0x5e]",
            "strh r3, [sp, 0x62]",
            "b 0x80009ac",
            "tst r1, 2",
            "bne 0x8000914",
            "ldr r7, [0x08000bf8]",
            "add r0, r7, 0x10",
            "bl _raw_spin_lock_bh",
            "ldr r3, [r7, 0x44]",
            "add r3, r3, 1",
            "str r3, [r7, 0x44]",
            "b 0x800099c",
            "ldrh r3, [r4, 0x28]",
            "tst r2, 1",
            "strh r3, [sp, 0x5c]",
            "ldrh r3, [r4, 0x2a]",
            "strh r3, [sp, 0x60]",
            "ldrh r3, [r4, 0x5c]",
            "strh r3, [sp, 0x5e]",
            "ldrh r3, [r4, 0x5e]",
            "strh r3, [sp, 0x62]",
            "ldrb r3, [r4, 0x78]",
            "strb r3, [sp, 0x7c]",
            "ldr r3, [r4, 0x60]",
            "str r3, [sp, 0x80]",
            "ldr r3, [r4, 0x68]",
            "str r3, [sp, 0x84]",
            "ldr r3, [r4, 0x70]",
            "str r3, [sp, 0x88]",
            "ldrb r3, [r4, 0x79]",
            "strb r3, [sp, 0x8c]",
            "ldr r3, [r4, 0x64]",
            "str r3, [sp, 0x90]",
            "ldr r3, [r4, 0x6c]",
            "str r3, [sp, 0x94]",
            "ldr r3, [r4, 0x74]",
            "str r3, [sp, 0x98]",
            "movne r3, 1",
            "strne r3, [sp, 0x10]",
            "b 0x80009ac",
            "ldr r7, [0x08000bf8]",
            "add r0, r7, 0x10",
            "bl _raw_spin_lock_bh",
            "ldr r3, [r7, 0x48]",
            "add r3, r3, 1",
            "str r3, [r7, 0x48]",
            "add r0, r7, 0x10",
            "bl _raw_spin_unlock_bh",
            "mov r3, 4",
            "b 0x8000ad8",
            "mov r3, r4",
            "mov r1, 6",
            "ldr r0, [r3, 0x30]!",
            "ldrh r3, [r3, 4]",
            "str r0, [sp, 0x64]",
            "add r0, sp, 0x6a",
            "strh r3, [sp, 0x68]",
            "bl __memzero",
            "add r0, sp, 0x70",
            "mov r1, 6",
            "bl __memzero",
            "mov r3, r4",
            "ldr r2, [r3, 0x36]!",
            "ldr r0, [0x08000bfc]",
            "ldr r1, [r4, 0x44]",
            "ldrh r3, [r3, 4]",
            "str r2, [sp, 0x76]",
            "strh r3, [sp, 0x7a]",
            "bl dev_get_by_index",
            "subs r8, r0, 0",
            "beq 0x8000a18",
            "ldr r3, [r8, 0x1a4]",
            "cmp r3, 0",
            "beq 0x8000a18",
            "ldr r3, [r3, 0xc]",
            "cmp r3, 0",
            "bne 0x8000a4c",
            "ldr r7, [0x08000bf8]",
            "add r0, r7, 0x10",
            "bl _raw_spin_lock_bh",
            "ldr r3, [r7, 0x4c]",
            "add r0, r7, 0x10",
            "add r3, r3, 1",
            "str r3, [r7, 0x4c]",
            "bl _raw_spin_unlock_bh",
            "cmp r8, 0",
            "mov r3, 2",
            "movne r7, 0",
            "bne 0x8000a90",
            "b 0x8000ad8",
            "ldr r0, [0x08000bfc]",
            "ldr r1, [r4, 0x48]",
            "bl dev_get_by_index",
            "subs r7, r0, 0",
            "beq 0x8000a6c",
            "ldr r3, [r7, 0x1a4]",
            "cmp r3, 0",
            "bne 0x8000b24",
            "ldr sb, [0x08000bf8]",
            "add r0, sb, 0x10",
            "bl _raw_spin_lock_bh",
            "ldr r3, [sb, 0x50]",
            "add r0, sb, 0x10",
            "add r3, r3, 1",
            "str r3, [sb, 0x50]",
            "bl _raw_spin_unlock_bh",
            "mov r3, 2",
            "mrs r0, apsr",
            "cpsid i",
            "ldr r2, [r8, 0x244]",
            "mrc p15, 0, r1, c13, c0, 4",
            "ldr ip, [r1, r2]",
            "sub ip, ip, 1",
            "str ip, [r1, r2]",
            "msr cpsr_c, r0",
            "cmp r7, 0",
            "beq 0x8000ad8",
            "mrs r0, apsr",
            "cpsid i",
            "ldr r2, [r7, 0x244]",
            "mrc p15, 0, r1, c13, c0, 4",
            "ldr ip, [r1, r2]",
            "sub ip, ip, 1",
            "str ip, [r1, r2]",
            "msr cpsr_c, r0",
            "str r3, [r4, 4]",
            "add r4, r6, 0x10",
            "str r3, [r5, 0x10]",
            "mov r0, r4",
            "bl _raw_spin_lock_bh",
            "ldr r3, [r6, 0xc]",
            "add r2, r6, 8",
            "str r5, [r6, 0xc]",
            "mov r0, r4",
            "stm r5, {r2, r3}",
            "str r5, [r3]",
            "bl _raw_spin_unlock_bh",
            "ldr r3, [0x08000c00]",
            "mov r0, 4",
            "add r2, r6, 0x14",
            "ldr r1, [r3]",
            "bl queue_work_on",
            "mov r0, 0",
            "b 0x8000bf0",
            "ldr r3, [r3, 0xc]",
            "cmp r3, 0",
            "beq 0x8000a6c",
            "ldr r3, [r4, 0x4c]",
            "str r8, [sp, 8]",
            "str r7, [sp, 0xc]",
            "str r3, [sp, 0x14]",
            "ldr r3, [r4, 0x50]",
            "str r3, [sp, 0x18]",
            "ldrh r3, [r4, 0x1c]",
            "tst r3, 8",
            "beq 0x8000b70",
            "ldr r2, [r4, 0x8c]",
            "str r2, [sp, 0xa8]",
            "ldr r2, [r4, 0x90]",
            "str r2, [sp, 0xac]",
            "ldr r2, [sp, 0x10]",
            "orr r2, r2, 2",
            "str r2, [sp, 0x10]",
            "tst r3, 0x20",
            "beq 0x8000b94",
            "ldrb r2, [r4, 0x94]",
            "str r2, [sp, 0xb0]",
            "ldrb r2, [r4, 0x95]",
            "str r2, [sp, 0xb4]",
            "ldr r2, [sp, 0x10]",
            "orr r2, r2, 4",
            "str r2, [sp, 0x10]",
            "tst r3, 0x100",
            "add r0, sp, 4",
            "ldrbne r3, [r4, 0xa8]",
            "moveq r3, 1",
            "streq r3, [sp, 0xa4]",
            "streq r3, [sp, 0xa0]",
            "strne r3, [sp, 0xa0]",
            "ldrbne r3, [r4, 0xa9]",
            "strne r3, [sp, 0xa4]",
            "bl sfe_ipv4_create_rule",
            "cmp r0, 0",
            "moveq r3, r0",
            "beq 0x8000a90",
            "ldr sb, [0x08000bf8]",
            "add r0, sb, 0x10",
            "bl _raw_spin_lock_bh",
            "ldr r3, [sb, 0x54]",
            "add r0, sb, 0x10",
            "add r3, r3, 1",
            "str r3, [sb, 0x54]",
            "bl _raw_spin_unlock_bh",
            "mov r3, 4",
            "b 0x8000a90",
            "add sp, sp, 0xbc",
            "pop {r4, r5, r6, r7, r8, sb, pc}"
        ]
    },
    "sym.sfe_drv_destroy_ipv6_rule_msg": {
        "function_address": "0x080011b0",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "mov r5, r0",
            "sub sp, sp, 0x2c",
            "mov r0, 1",
            "mov r4, r1",
            "bl fcn.080000bc",
            "subs r6, r0, 0",
            "bne 0x80011f8",
            "ldr r4, [0x080012c4]",
            "add r0, r4, 0x10",
            "bl _raw_spin_lock_bh",
            "ldr r3, [r4, 0x58]",
            "add r0, r4, 0x10",
            "add r3, r3, 1",
            "str r3, [r4, 0x58]",
            "bl _raw_spin_unlock_bh",
            "mov r0, 2",
            "b 0x80012bc",
            "ldrb r3, [r4, 0x40]",
            "add r2, sp, 0x28",
            "add r7, r4, 0x2c",
            "str r3, [r2, -0x28]!",
            "add r3, r4, 0x1c",
            "add lr, r2, 4",
            "ldr r0, [r3]",
            "add r3, r3, 8",
            "ldr r1, [r3, -4]",
            "cmp r3, r7",
            "mov ip, lr",
            "stm ip!, {r0, r1}",
            "mov lr, ip",
            "bne 0x8001210",
            "add lr, r2, 0x14",
            "add r7, r4, 0x3c",
            "ldr r0, [r3]",
            "add r3, r3, 8",
            "ldr r1, [r3, -4]",
            "cmp r3, r7",
            "mov ip, lr",
            "stm ip!, {r0, r1}",
            "mov lr, ip",
            "bne 0x8001238",
            "ldrh r3, [r4, 0x3c]",
            "mov r0, sp",
            "mov r7, 0",
            "strh r3, [sp, 0x24]",
            "ldrh r3, [r4, 0x3e]",
            "strh r3, [sp, 0x26]",
            "bl sfe_ipv6_destroy_rule",
            "str r7, [r4, 4]",
            "add r4, r5, 0x10",
            "str r7, [r6, 0x10]",
            "mov r0, r4",
            "bl _raw_spin_lock_bh",
            "ldr r3, [r5, 0xc]",
            "add r2, r5, 8",
            "str r6, [r5, 0xc]",
            "mov r0, r4",
            "stm r6, {r2, r3}",
            "str r6, [r3]",
            "bl _raw_spin_unlock_bh",
            "ldr r3, [reloc.system_wq]",
            "mov r0, 4",
            "add r2, r5, 0x14",
            "ldr r1, [r3]",
            "bl queue_work_on",
            "mov r0, r7",
            "add sp, sp, 0x2c",
            "pop {r4, r5, r6, r7, pc}"
        ]
    },
    "sym.sfe_drv_create_ipv6_rule_msg": {
        "function_address": "0x08000d24",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r7, r0",
            "sub sp, sp, 0xc4",
            "mov r0, 1",
            "mov r4, r1",
            "bl fcn.080000bc",
            "subs r6, r0, 0",
            "bne 0x8000d6c",
            "ldr r4, [0x080011a4]",
            "add r0, r4, 0x10",
            "bl _raw_spin_lock_bh",
            "ldr r3, [r4, 0x58]",
            "add r0, r4, 0x10",
            "add r3, r3, 1",
            "str r3, [r4, 0x58]",
            "bl _raw_spin_unlock_bh",
            "mov r0, 2",
            "b 0x800119c",
            "ldrh sb, [r4, 0x1c]",
            "tst sb, 1",
            "bne 0x8000d94",
            "ldr r5, [0x080011a4]",
            "add r0, r5, 0x10",
            "bl _raw_spin_lock_bh",
            "ldr r3, [r5, 0x3c]",
            "add r3, r3, 1",
            "str r3, [r5, 0x3c]",
            "b 0x8000f60",
            "ldrh fp, [r4, 0x1e]",
            "tst fp, 2",
            "beq 0x8000dc8",
            "ldr r5, [0x080011a4]",
            "add r0, r5, 0x10",
            "bl _raw_spin_lock_bh",
            "ldr r3, [r5, 0x40]",
            "add r0, r5, 0x10",
            "add r3, r3, 1",
            "str r3, [r5, 0x40]",
            "bl _raw_spin_unlock_bh",
            "mov r3, 2",
            "b 0x80010a0",
            "ldrb ip, [r4, 0x44]",
            "add r5, sp, 0xc0",
            "add sl, r4, 0x20",
            "add lr, r4, 0x30",
            "str ip, [r5, -0xb4]!",
            "add r8, r5, 0x18",
            "mov r3, sl",
            "ldr r0, [r3]",
            "add r3, r3, 8",
            "ldr r1, [r3, -4]",
            "cmp r3, lr",
            "mov r2, r8",
            "stm r2!, {r0, r1}",
            "mov r8, r2",
            "bne 0x8000de4",
            "add r8, r5, 0x38",
            "mov r3, lr",
            "add r2, r4, 0x40",
            "str r2, [sp, 4]",
            "ldr r0, [r3]",
            "mov r2, r8",
            "ldr r1, [r3, 4]",
            "add r3, r3, 8",
            "stm r2!, {r0, r1}",
            "mov r8, r2",
            "ldr r2, [sp, 4]",
            "cmp r3, r2",
            "bne 0x8000e14",
            "add r2, r5, 0x28",
            "add r8, sl, 0x10",
            "ldr r0, [sl]",
            "add sl, sl, 8",
            "ldr r1, [sl, -4]",
            "cmp sl, r8",
            "mov r3, r2",
            "stm r3!, {r0, r1}",
            "mov r2, r3",
            "bne 0x8000e40",
            "add r2, r5, 0x48",
            "add r8, lr, 0x10",
            "ldr r0, [lr]",
            "add lr, lr, 8",
            "ldr r1, [lr, -4]",
            "cmp lr, r8",
            "mov r3, r2",
            "stm r3!, {r0, r1}",
            "mov r2, r3",
            "bne 0x8000e68",
            "cmp ip, 6",
            "mov r3, 0",
            "str r3, [sp, 0x18]",
            "beq 0x8000ebc",
            "cmp ip, 0x11",
            "bne 0x8000f48",
            "ldrh r2, [r4, 0x40]",
            "ldrh r3, [r4, 0x42]",
            "strh r2, [sp, 0x64]",
            "strh r3, [sp, 0x68]",
            "strh r2, [sp, 0x66]",
            "strh r3, [sp, 0x6a]",
            "b 0x8000f70",
            "tst sb, 2",
            "bne 0x8000ee0",
            "ldr r5, [0x080011a4]",
            "add r0, r5, 0x10",
            "bl _raw_spin_lock_bh",
            "ldr r3, [r5, 0x44]",
            "add r3, r3, 1",
            "str r3, [r5, 0x44]",
            "b 0x8000f60",
            "ldrh r3, [r4, 0x42]",
            "tst fp, 1",
            "ldrh r2, [r4, 0x40]",
            "strh r3, [sp, 0x68]",
            "strh r3, [sp, 0x6a]",
            "ldrb r3, [r4, 0x84]",
            "strh r2, [sp, 0x64]",
            "strh r2, [sp, 0x66]",
            "strb r3, [sp, 0x84]",
            "ldr r3, [r4, 0x6c]",
            "str r3, [sp, 0x88]",
            "ldr r3, [r4, 0x74]",
            "str r3, [sp, 0x8c]",
            "ldr r3, [r4, 0x7c]",
            "str r3, [sp, 0x90]",
            "ldrb r3, [r4, 0x85]",
            "strb r3, [sp, 0x94]",
            "ldr r3, [r4, 0x70]",
            "str r3, [sp, 0x98]",
            "ldr r3, [r4, 0x78]",
            "str r3, [sp, 0x9c]",
            "ldr r3, [r4, 0x80]",
            "str r3, [sp, 0xa0]",
            "movne r3, 1",
            "strne r3, [sp, 0x18]",
            "b 0x8000f70",
            "ldr r5, [0x080011a4]",
            "add r0, r5, 0x10",
            "bl _raw_spin_lock_bh",
            "ldr r3, [r5, 0x48]",
            "add r3, r3, 1",
            "str r3, [r5, 0x48]",
            "add r0, r5, 0x10",
            "bl _raw_spin_unlock_bh",
            "mov r3, 4",
            "b 0x80010a0",
            "mov r3, r4",
            "mov r1, 6",
            "ldr r0, [r3, 0x48]!",
            "ldrh r3, [r3, 4]",
            "str r0, [sp, 0x6c]",
            "add r0, r5, 0x66",
            "strh r3, [sp, 0x70]",
            "bl __memzero",
            "add r0, r5, 0x6c",
            "mov r1, 6",
            "bl __memzero",
            "mov r3, r4",
            "ldr r2, [r3, 0x4e]!",
            "ldr r0, [reloc.init_net]",
            "ldr r1, [r4, 0x5c]",
            "ldrh r3, [r3, 4]",
            "str r2, [sp, 0x7e]",
            "strh r3, [sp, 0x82]",
            "bl dev_get_by_index",
            "subs sb, r0, 0",
            "beq 0x8000fe0",
            "ldr r3, [sb, 0x1ac]",
            "cmp r3, 0",
            "beq 0x8000fe0",
            "add r2, r3, 4",
            "ldr r3, [r3, 4]",
            "cmp r3, r2",
            "bne 0x8001014",
            "ldr r5, [0x080011a4]",
            "add r0, r5, 0x10",
            "bl _raw_spin_lock_bh",
            "ldr r3, [r5, 0x4c]",
            "add r0, r5, 0x10",
            "add r3, r3, 1",
            "str r3, [r5, 0x4c]",
            "bl _raw_spin_unlock_bh",
            "cmp sb, 0",
            "mov r3, 2",
            "movne r8, 0",
            "bne 0x8001058",
            "b 0x80010a0",
            "ldr r0, [reloc.init_net]",
            "ldr r1, [r4, 0x60]",
            "bl dev_get_by_index",
            "subs r8, r0, 0",
            "beq 0x8001034",
            "ldr r3, [r8, 0x1ac]",
            "cmp r3, 0",
            "bne 0x80010ec",
            "ldr r5, [0x080011a4]",
            "add r0, r5, 0x10",
            "bl _raw_spin_lock_bh",
            "ldr r3, [r5, 0x50]",
            "add r0, r5, 0x10",
            "add r3, r3, 1",
            "str r3, [r5, 0x50]",
            "bl _raw_spin_unlock_bh",
            "mov r3, 2",
            "mrs r0, apsr",
            "cpsid i",
            "ldr r2, [sb, 0x244]",
            "mrc p15, 0, r1, c13, c0, 4",
            "ldr ip, [r1, r2]",
            "sub ip, ip, 1",
            "str ip, [r1, r2]",
            "msr cpsr_c, r0",
            "cmp r8, 0",
            "beq 0x80010a0",
            "mrs r0, apsr",
            "cpsid i",
            "ldr r2, [r8, 0x244]",
            "mrc p15, 0, r1, c13, c0, 4",
            "ldr ip, [r1, r2]",
            "sub ip, ip, 1",
            "str ip, [r1, r2]",
            "msr cpsr_c, r0",
            "str r3, [r4, 4]",
            "add r4, r7, 0x10",
            "str r3, [r6, 0x10]",
            "mov r0, r4",
            "bl _raw_spin_lock_bh",
            "ldr r3, [r7, 0xc]",
            "add r2, r7, 8",
            "str r6, [r7, 0xc]",
            "mov r0, r4",
            "stm r6, {r2, r3}",
            "str r6, [r3]",
            "bl _raw_spin_unlock_bh",
            "ldr r3, [0x080011ac]",
            "mov r0, 4",
            "add r2, r7, 0x14",
            "ldr r1, [r3]",
            "bl queue_work_on",
            "mov r0, 0",
            "b 0x800119c",
            "add r2, r3, 4",
            "ldr r3, [r3, 4]",
            "cmp r3, r2",
            "beq 0x8001034",
            "ldr r3, [r4, 0x64]",
            "str sb, [sp, 0x10]",
            "str r8, [sp, 0x14]",
            "str r3, [sp, 0x1c]",
            "ldr r3, [r4, 0x68]",
            "str r3, [sp, 0x20]",
            "ldrh r3, [r4, 0x1c]",
            "tst r3, 8",
            "ldrne r2, [r4, 0x98]",
            "strne r2, [sp, 0xb0]",
            "ldrne r2, [r4, 0x9c]",
            "strne r2, [sp, 0xb4]",
            "tst r3, 0x20",
            "mov r0, r5",
            "ldrbne r2, [r4, 0xa0]",
            "strne r2, [sp, 0xb8]",
            "ldrbne r2, [r4, 0xa1]",
            "strne r2, [sp, 0xbc]",
            "tst r3, 0x100",
            "ldrbne r3, [r4, 0xb4]",
            "moveq r3, 1",
            "streq r3, [sp, 0xac]",
            "streq r3, [sp, 0xa8]",
            "strne r3, [sp, 0xa8]",
            "ldrbne r3, [r4, 0xb5]",
            "strne r3, [sp, 0xac]",
            "bl sfe_ipv6_create_rule",
            "cmp r0, 0",
            "moveq r3, r0",
            "beq 0x8001058",
            "ldr r5, [0x080011a4]",
            "add r0, r5, 0x10",
            "bl _raw_spin_lock_bh",
            "ldr r3, [r5, 0x54]",
            "add r0, r5, 0x10",
            "add r3, r3, 1",
            "str r3, [r5, 0x54]",
            "bl _raw_spin_unlock_bh",
            "mov r3, 4",
            "b 0x8001058",
            "add sp, sp, 0xc4",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    }
}