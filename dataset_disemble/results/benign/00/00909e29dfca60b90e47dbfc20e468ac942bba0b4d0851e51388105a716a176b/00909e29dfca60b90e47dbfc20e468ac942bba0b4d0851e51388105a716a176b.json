{
    "sym.gconv": {
        "function_address": "0x000006b8",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "ldr sl, [r1, 8]",
            "sub sp, sp, 0x5c",
            "add ip, r1, 0x24",
            "tst sl, 1",
            "mov r5, r3",
            "ldr r3, [0x00001254]",
            "add r4, r0, 0x3c",
            "str ip, [sp, 0x3c]",
            "movne ip, 0",
            "str r4, [sp, 0x38]",
            "add r3, pc, r3",
            "mov r6, r1",
            "mov fp, r0",
            "mov r7, r2",
            "ldr r4, [sp, 0x88]",
            "strne ip, [sp, 0x30]",
            "bne 0x728",
            "ldr r2, [r0, 0x3c]",
            "ldr ip, [r0, 0x50]",
            "cmp r2, 0",
            "str ip, [sp, 0x30]",
            "beq 0x728",
            "ldr r2, [0x00001258]",
            "ldr r3, [r3, r2]",
            "ldr r3, [r3]",
            "eor ip, ip, r3",
            "str ip, [sp, 0x30]",
            "cmp r4, 0",
            "bne 0xd54",
            "ldr r4, [sp, 0x80]",
            "cmp r4, 0",
            "ldrne r4, [sp, 0x80]",
            "ldreq ip, [r6]",
            "ldrne r4, [r4]",
            "streq ip, [sp, 0x24]",
            "ldr ip, [sp, 0x84]",
            "ldr r2, [fp, 0x38]",
            "strne r4, [sp, 0x24]",
            "cmp ip, 0",
            "ldr r4, [r6, 4]",
            "mov r3, 0",
            "addne r8, sp, 0x48",
            "ldreq r8, [sp, 0x84]",
            "cmp r2, 0",
            "str r3, [sp, 0x48]",
            "str r4, [sp, 0x1c]",
            "beq 0x958",
            "ldr ip, [sp, 0x8c]",
            "cmp ip, 0",
            "beq 0x958",
            "ldr ip, [r6, 0x14]",
            "str ip, [sp, 0x18]",
            "ldr ip, [ip]",
            "ands r3, ip, 7",
            "beq 0x958",
            "ldr r4, [sp, 0x80]",
            "cmp r4, 0",
            "bne 0x1008",
            "ldr r4, [sp, 0x24]",
            "ldr r0, [r7]",
            "cmp r3, 4",
            "str r4, [sp, 0x54]",
            "str r0, [sp, 0x50]",
            "mov r4, r3",
            "bhi 0xfe8",
            "cmp r3, 0",
            "moveq r2, 4",
            "beq 0x7fc",
            "ldr r2, [sp, 0x80]",
            "str r0, [sp, 0x20]",
            "add sb, sp, 0x4c",
            "ldr r0, [sp, 0x18]",
            "add r1, r0, r2",
            "ldrb r1, [r1, 4]",
            "strb r1, [sb, r2]",
            "add r2, r2, 1",
            "cmp r2, r3",
            "bne 0x7d8",
            "ldr r0, [sp, 0x20]",
            "rsb r2, r3, 4",
            "add r2, r0, r2",
            "cmp r5, r2",
            "blo 0xfa0",
            "ldr r1, [sp, 0x24]",
            "ldr r2, [sp, 0x1c]",
            "cmp r1, r2",
            "bhs 0xd44",
            "add sb, sp, 0x4c",
            "sub r1, r3, 1",
            "mov r2, r0",
            "add r1, sb, r1",
            "mov r0, r4",
            "add r2, r2, 1",
            "str r2, [sp, 0x50]",
            "ldrb r4, [r2, -1]",
            "cmp r5, r2",
            "add r0, r0, 1",
            "str r4, [sp, 0x20]",
            "movls r4, 0",
            "movhi r4, 1",
            "cmp r0, 3",
            "movhi r4, 0",
            "cmp r4, 0",
            "ldr r4, [sp, 0x20]",
            "strb r4, [r1, 1]!",
            "bne 0x82c",
            "ldr r2, [sp, 0x4c]",
            "ldr r1, [0x0000125c]",
            "add r4, sb, r0",
            "cmp r2, r1",
            "str sb, [sp, 0x50]",
            "str r4, [sp, 0x20]",
            "bhi 0x1028",
            "ldr r3, [0x00001260]",
            "cmp r2, 0x7f",
            "add r3, pc, r3",
            "add r3, r3, 0x400",
            "bls 0x8b8",
            "ldr r1, [0x00001264]",
            "add r1, pc, r1",
            "add r1, r1, 0x400",
            "add r1, r1, 8",
            "ldrh r0, [r1, 2]",
            "cmp r2, r0",
            "mov r3, r1",
            "add r1, r1, 8",
            "bhi 0x8a4",
            "ldrh r1, [r3]",
            "cmp r2, r1",
            "blo 0x103c",
            "ldr r1, [0x00001268]",
            "ldr r3, [r3, 4]",
            "add r1, pc, r1",
            "add r1, r1, r2",
            "add r3, r1, r3",
            "ldrb r3, [r3, 0x458]",
            "cmp r3, 0",
            "beq 0x11e8",
            "ldr r4, [sp, 0x24]",
            "add r2, r4, 1",
            "str r2, [sp, 0x54]",
            "strb r3, [r4]",
            "ldr r3, [sp, 0x50]",
            "add r3, r3, 4",
            "str r3, [sp, 0x50]",
            "mov r0, 0",
            "cmp r3, sb",
            "beq 0x1108",
            "ldr r4, [sp, 0x18]",
            "ldr ip, [r4]",
            "mov r2, r3",
            "and r3, ip, 7",
            "rsb r2, sb, r2",
            "cmp r3, r2",
            "bge 0x11b0",
            "ldr r4, [sp, 0x54]",
            "ldr r1, [r7]",
            "rsb r3, r3, r2",
            "str r4, [sp, 0x24]",
            "ldr r4, [sp, 0x18]",
            "bic ip, ip, 7",
            "add r3, r1, r3",
            "str r3, [r7]",
            "str ip, [r4]",
            "ldr r2, [fp, 0x38]",
            "ldr sl, [r6, 8]",
            "b 0x95c",
            "ldr r3, [r7]",
            "ldr r4, [0x0000126c]",
            "ldr r1, [0x00001270]",
            "add r4, pc, r4",
            "str r4, [sp, 0x18]",
            "ldr ip, [0x00001274]",
            "ldr r4, [0x00001278]",
            "add r1, pc, r1",
            "str r3, [sp, 0x2c]",
            "add ip, pc, ip",
            "add r3, r1, 0x400",
            "add r4, pc, r4",
            "cmp r2, 0",
            "str r3, [sp, 0x20]",
            "str ip, [sp, 0x40]",
            "str r4, [sp, 0x44]",
            "beq 0xc64",
            "ldr ip, [sp, 0x24]",
            "ldr r4, [sp, 0x2c]",
            "str ip, [sp, 0x54]",
            "and sl, sl, 2",
            "mov sb, ip",
            "mov ip, 4",
            "mov r3, ip",
            "str r4, [sp, 0x50]",
            "str sl, [sp, 0x28]",
            "mov ip, r4",
            "mov r0, r3",
            "cmp r5, ip",
            "beq 0xa70",
            "add r3, ip, 4",
            "cmp r5, r3",
            "blo 0xf94",
            "ldr r4, [sp, 0x1c]",
            "cmp r4, sb",
            "bls 0xf88",
            "ldr r4, [ip]",
            "ldr r1, [0x0000125c]",
            "cmp r4, r1",
            "bhi 0xa80",
            "cmp r4, 0x7f",
            "ldrls r3, [sp, 0x40]",
            "addls r2, r3, 0x400",
            "bls 0xa24",
            "ldr r1, [sp, 0x20]",
            "add r3, r1, 8",
            "ldrh r1, [r3, 2]",
            "cmp r4, r1",
            "mov r2, r3",
            "add r3, r3, 8",
            "bhi 0xa10",
            "ldrh r3, [r2]",
            "cmp r4, r3",
            "blo 0xa94",
            "ldr r1, [sp, 0x18]",
            "ldr r3, [r2, 4]",
            "add r2, r1, r4",
            "add r3, r2, r3",
            "ldrb r3, [r3, 0x458]",
            "cmp r3, 0",
            "beq 0xf7c",
            "add r2, sb, 1",
            "str r2, [sp, 0x54]",
            "strb r3, [sb]",
            "ldr ip, [sp, 0x50]",
            "add ip, ip, 4",
            "cmp r5, ip",
            "str ip, [sp, 0x50]",
            "ldr sb, [sp, 0x54]",
            "bne 0x9d0",
            "mov r3, r0",
            "mov r0, ip",
            "mov ip, r3",
            "b 0xb44",
            "lsr r4, r4, 7",
            "cmp r4, 0x1c00",
            "streq r3, [sp, 0x50]",
            "moveq ip, r3",
            "beq 0x9c8",
            "cmp r8, 0",
            "beq 0xb3c",
            "ldr r4, [r6, 0x20]",
            "cmp r4, 0",
            "beq 0xb14",
            "add sl, sp, 0x50",
            "add sb, sp, 0x54",
            "b 0xac0",
            "ldr r4, [r4, 0x10]",
            "cmp r4, 0",
            "beq 0xb0c",
            "ldr r0, [r4]",
            "bl sym.imp._dl_mcount_wrapper_check",
            "ldr r2, [r4, 0xc]",
            "ldr r3, [r7]",
            "mov r0, fp",
            "str sl, [sp]",
            "stmib sp, {r5, sb}",
            "str r8, [sp, 0xc]",
            "mov r1, r6",
            "ldr ip, [r4]",
            "mov lr, pc",
            "bx ip",
            "cmp r0, 6",
            "beq 0xab4",
            "cmp r0, 5",
            "beq 0xf6c",
            "ldr ip, [sp, 0x50]",
            "ldr sb, [sp, 0x54]",
            "b 0x9c8",
            "ldr ip, [sp, 0x50]",
            "ldr sb, [sp, 0x54]",
            "ldr r4, [sp, 0x28]",
            "cmp r4, 0",
            "beq 0xb3c",
            "ldr r3, [r8]",
            "add ip, ip, 4",
            "add r3, r3, 1",
            "str ip, [sp, 0x50]",
            "str r3, [r8]",
            "mov r0, 6",
            "b 0x9c8",
            "mov r0, ip",
            "mov ip, 6",
            "ldr r4, [sp, 0x80]",
            "cmp r4, 0",
            "str r0, [r7]",
            "bne 0xcf8",
            "ldr r4, [r6, 0x20]",
            "cmp r4, 0",
            "beq 0xbb8",
            "str r5, [sp, 0x34]",
            "ldr sl, [sp, 0x24]",
            "mov r5, r4",
            "str ip, [sp, 0x28]",
            "ldr r4, [sp, 0x2c]",
            "ldr r0, [r5, 4]",
            "cmp r0, 0",
            "beq 0xba4",
            "bl sym.imp._dl_mcount_wrapper_check",
            "ldr r0, [r5, 0xc]",
            "ldr r2, [r7]",
            "mov r1, r4",
            "str sb, [sp]",
            "mov r3, sl",
            "ldr ip, [r5, 4]",
            "mov lr, pc",
            "bx ip",
            "ldr r5, [r5, 0x10]",
            "cmp r5, 0",
            "bne 0xb74",
            "ldr ip, [sp, 0x28]",
            "ldr r5, [sp, 0x34]",
            "ldr r3, [r6, 0xc]",
            "ldr sl, [r6, 8]",
            "add r3, r3, 1",
            "ands sl, sl, 1",
            "str r3, [r6, 0xc]",
            "bne 0xf2c",
            "ldr r4, [sp, 0x24]",
            "cmp sb, r4",
            "bls 0xd14",
            "ldr r3, [r6]",
            "add r4, sp, 0x58",
            "str r3, [r4, -4]!",
            "ldr r0, [sp, 0x30]",
            "str ip, [sp, 0x14]",
            "bl sym.imp._dl_mcount_wrapper_check",
            "mov r2, r4",
            "ldr r4, [sp, 0x84]",
            "stmib sp, {r4, sl}",
            "ldr r4, [sp, 0x8c]",
            "str sl, [sp]",
            "str r4, [sp, 0xc]",
            "add r0, sp, 0x38",
            "ldm r0, {r0, r1}",
            "mov r3, sb",
            "ldr r4, [sp, 0x30]",
            "mov lr, pc",
            "bx r4",
            "cmp r0, 4",
            "ldr ip, [sp, 0x14]",
            "beq 0xd0c",
            "ldr r3, [sp, 0x54]",
            "cmp r3, sb",
            "bne 0xf0c",
            "cmp r0, 0",
            "bne 0xd20",
            "ldr r2, [fp, 0x38]",
            "ldr ip, [r6]",
            "ldr r4, [r7]",
            "cmp r2, 0",
            "str ip, [sp, 0x24]",
            "ldr sl, [r6, 8]",
            "str r4, [sp, 0x2c]",
            "bne 0x99c",
            "ldr ip, [sp, 0x2c]",
            "cmp r5, ip",
            "beq 0xee8",
            "ldr r4, [sp, 0x24]",
            "ldr ip, [sp, 0x1c]",
            "add sb, r4, 4",
            "cmp ip, sb",
            "blo 0xed8",
            "str fp, [sp, 0x28]",
            "str r6, [sp, 0x34]",
            "and sl, sl, 2",
            "ldr r3, [sp, 0x2c]",
            "mov r0, r4",
            "mov ip, 4",
            "ldr fp, [sp, 0x1c]",
            "ldr r6, [sp, 0x44]",
            "b 0xcbc",
            "add r2, sb, 4",
            "cmp fp, r2",
            "blo 0xe94",
            "mov r0, sb",
            "mov sb, r2",
            "mov r1, r3",
            "ldrb r4, [r3], 1",
            "ldr r2, [r6, r4, lsl 2]",
            "cmp r2, 0",
            "beq 0xea4",
            "str r2, [r0]",
            "mov r1, r3",
            "cmp r5, r3",
            "bne 0xca8",
            "ldr fp, [sp, 0x28]",
            "ldr r6, [sp, 0x34]",
            "ldr r4, [sp, 0x80]",
            "cmp r4, 0",
            "str r1, [r7]",
            "beq 0xb54",
            "mov r0, ip",
            "str sb, [r4]",
            "add sp, sp, 0x5c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "bx lr",
            "cmp ip, 5",
            "beq 0xc44",
            "mov r0, ip",
            "cmp r0, 0",
            "beq 0xc44",
            "ldr r3, [fp, 0x38]",
            "cmp r3, 0",
            "beq 0xd38",
            "ldr ip, [sp, 0x8c]",
            "cmp ip, 0",
            "bne 0xde8",
            "add sp, sp, 0x5c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "bx lr",
            "mov r0, 5",
            "add sp, sp, 0x5c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "bx lr",
            "ldr ip, [sp, 0x80]",
            "cmp ip, 0",
            "bne 0xe54",
            "ldr r2, [r6, 0x14]",
            "ldr ip, [sp, 0x80]",
            "mov r3, r2",
            "strb ip, [r3], 1",
            "add r3, r3, 1",
            "strb ip, [r2, 1]",
            "strb ip, [r3], 1",
            "strb ip, [r3], 1",
            "strb ip, [r3], 1",
            "strb ip, [r3], 1",
            "strb ip, [r3], 1",
            "strb ip, [r3]",
            "ldr r3, [r6, 8]",
            "tst r3, 1",
            "ldrne r0, [sp, 0x80]",
            "bne 0xd38",
            "ldr r0, [sp, 0x30]",
            "bl sym.imp._dl_mcount_wrapper_check",
            "ldr r2, [sp, 0x80]",
            "ldr ip, [sp, 0x84]",
            "str r4, [sp, 8]",
            "ldr r4, [sp, 0x8c]",
            "str ip, [sp, 4]",
            "str r2, [sp]",
            "str r4, [sp, 0xc]",
            "add r0, sp, 0x38",
            "ldm r0, {r0, r1}",
            "mov r3, r2",
            "ldr ip, [sp, 0x30]",
            "mov lr, pc",
            "bx ip",
            "add sp, sp, 0x5c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "bx lr",
            "cmp r0, 7",
            "bne 0xd38",
            "ldr r3, [r7]",
            "rsb r2, r3, r5",
            "cmp r2, 3",
            "bgt 0xe74",
            "cmp r5, r3",
            "mov r2, 0",
            "bls 0xe34",
            "add r1, r3, 1",
            "ldr ip, [r6, 0x14]",
            "str r1, [r7]",
            "ldrb r1, [r3]",
            "add r3, ip, r2",
            "strb r1, [r3, 4]",
            "ldr r3, [r7]",
            "cmp r5, r3",
            "add r2, r2, 1",
            "bhi 0xe0c",
            "ldr r3, [r6, 0x14]",
            "ldr r1, [r3]",
            "bic r1, r1, 7",
            "orr r2, r2, r1",
            "str r2, [r3]",
            "add sp, sp, 0x5c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "bx lr",
            "ldr r0, [0x0000127c]",
            "ldr r1, [0x00001280]",
            "ldr r3, [0x00001284]",
            "add r0, pc, r0",
            "add r1, pc, r1",
            "mov r2, 0x1a0",
            "add r3, pc, r3",
            "bl sym.imp.__assert_fail",
            "ldr r0, [0x00001288]",
            "ldr r1, [0x0000128c]",
            "ldr r3, [0x00001290]",
            "add r0, pc, r0",
            "add r1, pc, r1",
            "ldr r2, [0x00001294]",
            "add r3, pc, r3",
            "bl sym.imp.__assert_fail",
            "ldr fp, [sp, 0x28]",
            "ldr r6, [sp, 0x34]",
            "mov ip, 5",
            "b 0xce8",
            "cmp r4, 0",
            "beq 0xcd0",
            "cmp r8, 0",
            "beq 0xef8",
            "cmp sl, 0",
            "beq 0xef8",
            "ldr r2, [r8]",
            "add r2, r2, 1",
            "mov sb, r0",
            "str r2, [r8]",
            "mov r1, r3",
            "mov ip, 6",
            "b 0xcd8",
            "ldr r1, [sp, 0x2c]",
            "ldr sb, [sp, 0x24]",
            "mov ip, 5",
            "b 0xce8",
            "mov r1, r5",
            "ldr sb, [sp, 0x24]",
            "mov ip, 4",
            "b 0xce8",
            "ldr fp, [sp, 0x28]",
            "ldr r6, [sp, 0x34]",
            "mov sb, r0",
            "mov ip, 6",
            "b 0xce8",
            "ldr r2, [fp, 0x38]",
            "cmp r2, 0",
            "beq 0xf4c",
            "ldr r2, [r7]",
            "rsb r3, r3, sb",
            "sub r3, r2, r3, lsl 2",
            "str r3, [r7]",
            "b 0xc3c",
            "ldr r4, [sp, 0x84]",
            "ldr r3, [sp, 0x48]",
            "ldr r2, [r4]",
            "add r3, r2, r3",
            "str sb, [r6]",
            "mov r0, ip",
            "str r3, [r4]",
            "b 0xd20",
            "rsb r3, r3, sb",
            "add r1, r3, 3",
            "ldr r2, [r7]",
            "cmp r3, 0",
            "movlt r3, r1",
            "sub r3, r2, r3, asr 2",
            "str r3, [r7]",
            "b 0xc3c",
            "mov ip, r0",
            "add r0, sp, 0x50",
            "ldm r0, {r0, sb}",
            "b 0xb44",
            "cmp r4, 0",
            "beq 0xa4c",
            "b 0xa94",
            "mov r0, ip",
            "mov ip, 5",
            "b 0xb44",
            "mov r0, ip",
            "mov ip, 7",
            "b 0xb44",
            "cmp r5, r0",
            "str r5, [r7]",
            "bls 0xfd8",
            "add r0, r0, 1",
            "add r5, r5, 1",
            "str r0, [sp, 0x50]",
            "ldr r4, [sp, 0x18]",
            "ldrb r1, [r0, -1]",
            "add r0, r0, 1",
            "add r2, r4, r3",
            "cmp r0, r5",
            "strb r1, [r2, 4]",
            "add r3, r3, 1",
            "bne 0xfb4",
            "mov r0, 7",
            "add sp, sp, 0x5c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "bx lr",
            "ldr r0, [0x00001298]",
            "ldr r1, [0x0000129c]",
            "ldr r3, [0x000012a0]",
            "add r0, pc, r0",
            "add r1, pc, r1",
            "mov r2, 0x188",
            "add r3, pc, r3",
            "bl sym.imp.__assert_fail",
            "ldr r0, [0x000012a4]",
            "ldr r1, [0x000012a8]",
            "ldr r3, [0x000012ac]",
            "add r0, pc, r0",
            "add r1, pc, r1",
            "ldr r2, [0x000012b0]",
            "add r3, pc, r3",
            "bl sym.imp.__assert_fail",
            "lsr r2, r2, 7",
            "cmp r2, 0x1c00",
            "addeq r2, sp, 0x50",
            "streq r2, [sp, 0x50]",
            "beq 0x91c",
            "cmp r8, 0",
            "beq 0x11d8",
            "ldr r4, [r6, 0x20]",
            "cmp r4, 0",
            "beq 0x11d0",
            "add ip, sp, 0x50",
            "str ip, [sp, 0x2c]",
            "add ip, sp, 0x54",
            "str ip, [sp, 0x28]",
            "b 0x1070",
            "ldr r4, [r4, 0x10]",
            "cmp r4, 0",
            "beq 0x10d4",
            "ldr r0, [r4]",
            "bl sym.imp._dl_mcount_wrapper_check",
            "ldr ip, [sp, 0x2c]",
            "ldr r2, [r4, 0xc]",
            "ldr r3, [r7]",
            "str ip, [sp]",
            "ldr ip, [sp, 0x20]",
            "str ip, [sp, 4]",
            "ldr ip, [sp, 0x28]",
            "str r8, [sp, 0xc]",
            "str ip, [sp, 8]",
            "mov r0, fp",
            "mov r1, r6",
            "ldr ip, [r4]",
            "mov lr, pc",
            "bx ip",
            "cmp r0, 6",
            "beq 0x1064",
            "ldr r2, [sp, 0x50]",
            "cmp r2, sb",
            "beq 0x1100",
            "ldr r4, [sp, 0x18]",
            "ldr ip, [r4]",
            "and r3, ip, 7",
            "b 0x91c",
            "ldr r3, [sp, 0x50]",
            "tst sl, 2",
            "moveq r0, 6",
            "beq 0x904",
            "ldr r2, [r8]",
            "add r3, r3, 4",
            "add r2, r2, 1",
            "str r3, [sp, 0x50]",
            "str r2, [r8]",
            "mov r0, 6",
            "b 0x904",
            "cmp r0, 7",
            "beq 0x1120",
            "cmp r0, 0",
            "bne 0xd38",
            "ldr r3, [r7]",
            "ldr r2, [fp, 0x38]",
            "ldr sl, [r6, 8]",
            "b 0x95c",
            "ldr ip, [sp, 0x20]",
            "ldr r4, [sp, 0x2c]",
            "cmp ip, r4",
            "beq 0x1234",
            "ldr ip, [sp, 0x18]",
            "ldr r4, [sp, 0x20]",
            "ldr r2, [ip]",
            "rsb r3, sb, r4",
            "and r1, r2, 7",
            "ldr r0, [r7]",
            "bic r2, r2, 7",
            "rsb r1, r1, r3",
            "add r1, r0, r1",
            "cmp r3, r2",
            "str r1, [r7]",
            "ble 0x1214",
            "cmp r3, 4",
            "bhi 0x11f4",
            "ldr ip, [sp, 0x20]",
            "ldr r4, [sp, 0x18]",
            "orr r3, r3, r2",
            "cmp ip, sb",
            "str r3, [r4]",
            "bls 0xfd8",
            "add r3, ip, r4",
            "rsb sb, sb, r3",
            "mov fp, r4",
            "add r3, sp, 0x4d",
            "str r3, [sp, 0x50]",
            "ldrb r2, [r3, -1]",
            "add fp, fp, 1",
            "strb r2, [fp, 3]",
            "cmp fp, sb",
            "add r3, r3, 1",
            "bne 0x1190",
            "b 0xfd8",
            "ldr r0, [0x000012b4]",
            "ldr r1, [0x000012b8]",
            "ldr r3, [0x000012bc]",
            "add r0, pc, r0",
            "add r1, pc, r1",
            "mov r2, 0x1c0",
            "add r3, pc, r3",
            "bl sym.imp.__assert_fail",
            "mov r3, sb",
            "b 0x10d8",
            "mov r0, 6",
            "add sp, sp, 0x5c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "bx lr",
            "cmp r2, 0",
            "beq 0x8e4",
            "b 0x103c",
            "ldr r0, [0x000012c0]",
            "ldr r1, [0x000012c4]",
            "ldr r3, [0x000012c8]",
            "add r0, pc, r0",
            "add r1, pc, r1",
            "ldr r2, [0x000012cc]",
            "add r3, pc, r3",
            "bl sym.imp.__assert_fail",
            "ldr r0, [0x000012d0]",
            "ldr r1, [0x000012d4]",
            "ldr r3, [0x000012d8]",
            "add r0, pc, r0",
            "add r1, pc, r1",
            "mov r2, 0x1dc",
            "add r3, pc, r3",
            "bl sym.imp.__assert_fail",
            "ldr r0, [0x000012dc]",
            "ldr r1, [0x000012e0]",
            "ldr r3, [0x000012e4]",
            "add r0, pc, r0",
            "add r1, pc, r1",
            "ldr r2, [0x000012e8]",
            "add r3, pc, r3",
            "bl sym.imp.__assert_fail"
        ]
    },
    "sym.imp._dl_mcount_wrapper_check": {
        "function_address": "0x00000430",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x9000",
            "ldr pc, [ip, 0xbdc]!"
        ]
    },
    "sym.imp.__assert_fail": {
        "function_address": "0x00000448",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x9000",
            "ldr pc, [ip, 0xbcc]!"
        ]
    },
    "sym.gconv_init": {
        "function_address": "0x00000614",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "ldr r5, [0x000006b0]",
            "add r5, pc, r5",
            "mov r4, r0",
            "mov r1, r5",
            "ldr r0, [r0, 0xc]",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x670",
            "ldr r1, [0x000006b4]",
            "mov r2, 1",
            "mov r3, 4",
            "add r1, pc, r1",
            "str r0, [r4, 0x38]",
            "str r1, [r4, 0x18]",
            "str r2, [r4, 0x24]",
            "str r2, [r4, 0x28]",
            "str r3, [r4, 0x2c]",
            "str r3, [r4, 0x30]",
            "mov r0, 0",
            "str r0, [r4, 0x34]",
            "pop {r3, r4, r5, lr}",
            "bx lr",
            "mov r1, r5",
            "ldr r0, [r4, 0x10]",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x6a8",
            "mov r2, 4",
            "mov r3, 1",
            "mvn r1, 0",
            "str r1, [r4, 0x38]",
            "str r2, [r4, 0x24]",
            "str r2, [r4, 0x28]",
            "str r3, [r4, 0x2c]",
            "str r3, [r4, 0x30]",
            "b 0x660",
            "mov r0, 1",
            "b 0x668"
        ]
    },
    "sym.imp.strcmp": {
        "function_address": "0x00000418",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x9000",
            "ldr pc, [ip, 0xbec]!"
        ]
    },
    "entry.fini0": {
        "function_address": "0x00000540",
        "instructions": [
            "push {r3, lr}",
            "ldr r3, [0x00000594]",
            "add r3, pc, r3",
            "ldrb r3, [r3]",
            "cmp r3, 0",
            "ldr r3, [0x00000598]",
            "add r3, pc, r3",
            "bne 0x58c",
            "ldr r2, [0x0000059c]",
            "ldr r3, [r3, r2]",
            "cmp r3, 0",
            "ldrne r3, [0x000005a0]",
            "ldrne r0, [0x00000578]",
            "blne sym.imp.__cxa_finalize",
            "bl fcn.00000478",
            "ldr r3, [0x000005a4]",
            "mov r2, 1",
            "add r3, pc, r3",
            "strb r2, [r3]",
            "pop {r3, lr}",
            "bx lr"
        ]
    },
    "sym.imp.__cxa_finalize": {
        "function_address": "0x00000424",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x9000",
            "ldr pc, [ip, 0xbe4]!"
        ]
    },
    "fcn.00000478": {
        "function_address": "0x00000478",
        "instructions": [
            "push {r3, lr}",
            "ldr r3, [0x000004c8]",
            "ldr r0, [0x000004cc]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 3",
            "rsb r3, r0, r3",
            "cmp r3, 6",
            "ldr r3, [0x000004d0]",
            "add r3, pc, r3",
            "bhi 0x4ac",
            "pop {r3, lr}",
            "bx lr",
            "ldr r2, [0x000004d4]",
            "ldr r3, [r3, r2]",
            "cmp r3, 0",
            "beq 0x4a4",
            "mov lr, pc",
            "bx r3",
            "b 0x4a4"
        ]
    }
}