{
    "entry0": {
        "function_address": "0x00401440",
        "instructions": [
            "move zero, ra",
            "bal 0x40144c",
            "nop",
            "lui gp, 0x43",
            "addiu gp, gp, -0x6540",
            "move ra, zero",
            "lw a0, -main(gp)",
            "lw a1, (sp)",
            "addiu a2, sp, 4",
            "addiu at, zero, -8",
            "and sp, sp, at",
            "addiu sp, sp, -0x20",
            "lw a3, -sym._init(gp)",
            "lw t0, -sym._fini(gp)",
            "sw t0, 0x10(sp)",
            "sw v0, 0x14(sp)",
            "sw sp, 0x18(sp)",
            "lw t9, -sym.imp.__uClibc_main(gp)",
            "jalr t9",
            "nop",
            "b 0x401490",
            "nop"
        ]
    },
    "unk.0x40144c": {
        "function_address": "0x0040144c",
        "instructions": [
            "move zero, ra",
            "bal 0x40144c",
            "nop",
            "lui gp, 0x43",
            "addiu gp, gp, -0x6540",
            "move ra, zero",
            "lw a0, -main(gp)",
            "lw a1, (sp)",
            "addiu a2, sp, 4",
            "addiu at, zero, -8",
            "and sp, sp, at",
            "addiu sp, sp, -0x20",
            "lw a3, -sym._init(gp)",
            "lw t0, -sym._fini(gp)",
            "sw t0, 0x10(sp)",
            "sw v0, 0x14(sp)",
            "sw sp, 0x18(sp)",
            "lw t9, -sym.imp.__uClibc_main(gp)",
            "jalr t9",
            "nop",
            "b 0x401490",
            "nop"
        ]
    },
    "sym.NEAP_InsertAttributeAtTail": {
        "function_address": "0x00407f7c",
        "instructions": [
            "addiu sp, sp, -0x20",
            "sw ra, 0x1c(sp)",
            "sw s0, 0x18(sp)",
            "sw gp, 0x10(sp)",
            "move s0, a0",
            "move a0, a1",
            "move a1, a2",
            "move a2, a3",
            "lw a3, 0x30(sp)",
            "jal fcn.00407e18",
            "nop",
            "move a0, v0",
            "lw gp, 0x10(sp)",
            "beqz a0, 0x407ff4",
            "move v0, zero",
            "beqz s0, 0x407ff4",
            "addiu v0, zero, 1",
            "lw v1, 0x24(s0)",
            "nop",
            "beqz v1, 0x407fec",
            "nop",
            "move v0, v1",
            "lw v1, (v1)",
            "nop",
            "bnez v1, 0x407fd0",
            "nop",
            "b 0x407ff0",
            "sw a0, (v0)",
            "sw a0, 0x24(s0)",
            "addiu v0, zero, 1",
            "lw ra, 0x1c(sp)",
            "lw s0, 0x18(sp)",
            "jr ra",
            "addiu sp, sp, 0x20"
        ]
    },
    "fcn.00407e18": {
        "function_address": "0x00407e18",
        "instructions": [
            "lui gp, 0x43",
            "addiu sp, sp, -0x30",
            "addiu gp, gp, -0x6540",
            "sw ra, 0x2c(sp)",
            "sw s4, 0x28(sp)",
            "sw s3, 0x24(sp)",
            "sw s2, 0x20(sp)",
            "sw s1, 0x1c(sp)",
            "sw s0, 0x18(sp)",
            "sw gp, 0x10(sp)",
            "move s1, a0",
            "move s3, a1",
            "move s2, a2",
            "bltz a0, 0x407ef4",
            "move s4, a3",
            "beqz a1, 0x407ef8",
            "move s0, zero",
            "lw t9, -sym.imp.malloc(gp)",
            "nop",
            "jalr t9",
            "addiu a0, zero, 0x2c",
            "lw gp, 0x10(sp)",
            "beqz v0, 0x407ef8",
            "move s0, v0",
            "lw t9, -sym.imp.memset(gp)",
            "move a0, v0",
            "move a1, zero",
            "jalr t9",
            "addiu a2, zero, 0x2c",
            "lw gp, 0x10(sp)",
            "move a1, s3",
            "sb s1, 4(s0)",
            "lw t9, -sym.imp.memcpy(gp)",
            "move a2, s1",
            "jalr t9",
            "addiu a0, s0, 5",
            "lw gp, 0x10(sp)",
            "blez s2, 0x407ef8",
            "nop",
            "beqz s4, 0x407ef8",
            "move a0, s2",
            "lw t9, -sym.imp.malloc(gp)",
            "nop",
            "jalr t9",
            "sh s2, 0x24(s0)",
            "lw gp, 0x10(sp)",
            "sw v0, 0x28(s0)",
            "move a0, v0",
            "lw t9, -sym.imp.memcpy(gp)",
            "move a1, s4",
            "jalr t9",
            "move a2, s2",
            "lw gp, 0x10(sp)",
            "b 0x407ef8",
            "nop",
            "move s0, zero",
            "lw ra, 0x2c(sp)",
            "move v0, s0",
            "lw s4, 0x28(sp)",
            "lw s3, 0x24(sp)",
            "lw s2, 0x20(sp)",
            "lw s1, 0x1c(sp)",
            "lw s0, 0x18(sp)",
            "jr ra",
            "addiu sp, sp, 0x30"
        ]
    },
    "sym._init": {
        "function_address": "0x004013b8",
        "instructions": [
            "lui gp, 3",
            "addiu gp, gp, -0x78f8",
            "addu gp, gp, t9",
            "addiu sp, sp, -0x20",
            "sw gp, 0x10(sp)",
            "sw ra, 0x1c(sp)",
            "sw gp, 0x18(sp)",
            "bal 0x4013dc",
            "nop",
            "lui gp, 0x43",
            "addiu gp, gp, -0x6540",
            "lw t9, -segment.LOAD0(gp)",
            "nop",
            "addiu t9, t9, 0x1570",
            "jalr t9",
            "nop",
            "lw gp, 0x10(sp)",
            "nop",
            "bal 0x401408",
            "nop",
            "lui gp, 0x43",
            "addiu gp, gp, -0x6540",
            "lw t9, -0x7fe4(gp)",
            "nop",
            "addiu t9, t9, -0xa80",
            "jalr t9",
            "nop",
            "lw gp, 0x10(sp)",
            "nop",
            "lw ra, 0x1c(sp)",
            "jr ra",
            "addiu sp, sp, 0x20"
        ]
    },
    "unk.0x4013dc": {
        "function_address": "0x004013dc",
        "instructions": [
            "lui gp, 3",
            "addiu gp, gp, -0x78f8",
            "addu gp, gp, t9",
            "addiu sp, sp, -0x20",
            "sw gp, 0x10(sp)",
            "sw ra, 0x1c(sp)",
            "sw gp, 0x18(sp)",
            "bal 0x4013dc",
            "nop",
            "lui gp, 0x43",
            "addiu gp, gp, -0x6540",
            "lw t9, -segment.LOAD0(gp)",
            "nop",
            "addiu t9, t9, 0x1570",
            "jalr t9",
            "nop",
            "lw gp, 0x10(sp)",
            "nop",
            "bal 0x401408",
            "nop",
            "lui gp, 0x43",
            "addiu gp, gp, -0x6540",
            "lw t9, -0x7fe4(gp)",
            "nop",
            "addiu t9, t9, -0xa80",
            "jalr t9",
            "nop",
            "lw gp, 0x10(sp)",
            "nop",
            "lw ra, 0x1c(sp)",
            "jr ra",
            "addiu sp, sp, 0x20"
        ]
    },
    "unk.0x401408": {
        "function_address": "0x00401408",
        "instructions": [
            "lui gp, 3",
            "addiu gp, gp, -0x78f8",
            "addu gp, gp, t9",
            "addiu sp, sp, -0x20",
            "sw gp, 0x10(sp)",
            "sw ra, 0x1c(sp)",
            "sw gp, 0x18(sp)",
            "bal 0x4013dc",
            "nop",
            "lui gp, 0x43",
            "addiu gp, gp, -0x6540",
            "lw t9, -segment.LOAD0(gp)",
            "nop",
            "addiu t9, t9, 0x1570",
            "jalr t9",
            "nop",
            "lw gp, 0x10(sp)",
            "nop",
            "bal 0x401408",
            "nop",
            "lui gp, 0x43",
            "addiu gp, gp, -0x6540",
            "lw t9, -0x7fe4(gp)",
            "nop",
            "addiu t9, t9, -0xa80",
            "jalr t9",
            "nop",
            "lw gp, 0x10(sp)",
            "nop",
            "lw ra, 0x1c(sp)",
            "jr ra",
            "addiu sp, sp, 0x20"
        ]
    },
    "main": {
        "function_address": "0x004019a0",
        "instructions": [
            "lui gp, 0x43",
            "addiu sp, sp, -0x170",
            "addiu gp, gp, -0x6540",
            "sw ra, 0x16c(sp)",
            "sw fp, 0x168(sp)",
            "sw s7, 0x164(sp)",
            "sw s6, 0x160(sp)",
            "sw s5, 0x15c(sp)",
            "sw s4, 0x158(sp)",
            "sw s3, 0x154(sp)",
            "sw s2, 0x150(sp)",
            "sw s1, 0x14c(sp)",
            "sw s0, 0x148(sp)",
            "sw gp, 0x20(sp)",
            "lui v0, 0x41",
            "sw a0, 0x170(sp)",
            "sw a1, 0x174(sp)",
            "addiu fp, v0, -0x558",
            "addiu s7, zero, 0x68",
            "addiu s6, zero, 0x69",
            "lui s5, 0x42",
            "lw s1, -0x7fc8(gp)",
            "addiu s4, zero, 0x76",
            "lui s0, 0x42",
            "addiu s3, zero, 0x63",
            "b 0x401a88",
            "lui s2, 0x42",
            "beq v1, s7, 0x401a44",
            "slti v0, v1, 0x69",
            "beqz v0, 0x401a2c",
            "nop",
            "bne v1, s3, 0x401a78",
            "addiu a0, zero, -1",
            "b 0x401a6c",
            "nop",
            "beq v1, s6, 0x401a60",
            "nop",
            "bne v1, s4, 0x401a78",
            "addiu a0, zero, -1",
            "b 0x401a4c",
            "nop",
            "b 0x401a78",
            "move a0, zero",
            "lw v0, 0x1d04(s0)",
            "nop",
            "addiu v0, v0, 1",
            "b 0x401a88",
            "sw v0, 0x1d04(s0)",
            "lw v0, (s1)",
            "b 0x401a88",
            "sw v0, 0x1d00(s5)",
            "lw v0, (s1)",
            "b 0x401a88",
            "sw v0, 0x1cfc(s2)",
            "jal fcn.004018dc",
            "nop",
            "lw gp, 0x20(sp)",
            "nop",
            "lw t9, -sym.imp.getopt(gp)",
            "lw a0, 0x170(sp)",
            "lw a1, 0x174(sp)",
            "jalr t9",
            "move a2, fp",
            "lw gp, 0x20(sp)",
            "bgtz v0, 0x401a0c",
            "move v1, v0",
            "lui v0, 0x42",
            "lw v0, 0x1d00(v0)",
            "nop",
            "bnez v0, 0x401ae4",
            "lui v0, 0x42",
            "lw v0, -0x7f10(gp)",
            "lw t9, -sym.imp.fputs(gp)",
            "lui a0, 0x41",
            "lw a1, (v0)",
            "jalr t9",
            "addiu a0, a0, -0x550",
            "jal fcn.00401890",
            "addiu a0, zero, 1",
            "lw gp, 0x20(sp)",
            "lui v0, 0x42",
            "lw v0, 0x1cfc(v0)",
            "nop",
            "bnez v0, 0x401b18",
            "lui v0, 0x42",
            "lw v0, -0x7f10(gp)",
            "lw t9, -sym.imp.fputs(gp)",
            "lui a0, 0x41",
            "lw a1, (v0)",
            "jalr t9",
            "addiu a0, a0, -0x538",
            "jal fcn.00401890",
            "addiu a0, zero, 2",
            "lui v0, 0x42",
            "lw a1, 0x1d00(v0)",
            "lui a0, 0x41",
            "addiu a0, a0, -0x524",
            "jal sym.verbose",
            "lui s0, 0x42",
            "lw a1, 0x1cfc(s0)",
            "lui a0, 0x41",
            "jal sym.verbose",
            "addiu a0, a0, -0x514",
            "lw gp, 0x20(sp)",
            "lw s0, 0x1cfc(s0)",
            "lui a1, 0x41",
            "lw t9, -sym.imp.fopen(gp)",
            "addiu a1, a1, 0x1150",
            "jalr t9",
            "move a0, s0",
            "lw gp, 0x20(sp)",
            "bnez v0, 0x401ffc",
            "move s2, v0",
            "lui a0, 0x41",
            "addiu a0, a0, -0x504",
            "jal sym.verbose",
            "move a1, s0",
            "b 0x402054",
            "nop",
            "lw t9, -sym.imp.strlen(gp)",
            "nop",
            "jalr t9",
            "move a0, s0",
            "addu a0, s0, v0",
            "lw gp, 0x20(sp)",
            "addiu v0, v0, -1",
            "addiu t0, zero, 0x20",
            "addiu a3, zero, 9",
            "addiu a2, zero, 0xa",
            "b 0x401bb4",
            "addiu a1, zero, 0xd",
            "sb zero, -1(a0)",
            "addiu a0, a0, -1",
            "bltz v0, 0x401c14",
            "addiu s1, sp, 0x48",
            "lb v1, -1(a0)",
            "nop",
            "beq v1, t0, 0x401bac",
            "addiu v0, v0, -1",
            "beq v1, a3, 0x401bac",
            "nop",
            "beq v1, a2, 0x401bac",
            "nop",
            "beq v1, a1, 0x401bac",
            "nop",
            "b 0x401c18",
            "addiu a2, zero, 0x20",
            "beq v1, a2, 0x401c0c",
            "nop",
            "beq v1, a1, 0x401c0c",
            "nop",
            "beq v1, a0, 0x401c0c",
            "nop",
            "bne v1, v0, 0x401c3c",
            "nop",
            "b 0x401c24",
            "addiu s1, s1, 1",
            "addiu a2, zero, 0x20",
            "addiu a1, zero, 9",
            "addiu a0, zero, 0xa",
            "addiu v0, zero, 0xd",
            "lb v1, (s1)",
            "nop",
            "bnez v1, 0x401bec",
            "nop",
            "b 0x402020",
            "nop",
            "addiu v0, zero, 0x23",
            "beq v1, v0, 0x402020",
            "move a0, s1",
            "lw t9, -sym.imp.strchr(gp)",
            "nop",
            "jalr t9",
            "addiu a1, zero, 0x3d",
            "lw gp, 0x20(sp)",
            "beqz v0, 0x402020",
            "addiu s0, v0, 1",
            "lui a0, 0x41",
            "sb zero, (v0)",
            "addiu a0, a0, -0x4dc",
            "move a1, s1",
            "jal sym.verbose",
            "move a2, s0",
            "lw gp, 0x20(sp)",
            "lui a1, 0x41",
            "move a0, s1",
            "lw t9, -sym.imp.strcmp(gp)",
            "nop",
            "jalr t9",
            "addiu a1, a1, -0x4cc",
            "lw gp, 0x20(sp)",
            "bnez v0, 0x401d30",
            "lui a1, 0x41",
            "lw t9, -sym.imp.inet_addr(gp)",
            "nop",
            "jalr t9",
            "move a0, s0",
            "lui v1, 0x42",
            "lw v1, 0x1d04(v1)",
            "lw gp, 0x20(sp)",
            "beqz v1, 0x402020",
            "sw v0, 0x1cd0(s3)",
            "move s0, zero",
            "b 0x401cf0",
            "addiu s1, zero, 4",
            "bnez v0, 0x401cf0",
            "nop",
            "lw t9, -sym.imp.putchar(gp)",
            "nop",
            "jalr t9",
            "addiu a0, zero, 0xa",
            "lw gp, 0x20(sp)",
            "addu v0, s7, s0",
            "lw t9, -sym.imp.printf(gp)",
            "lbu a1, (v0)",
            "addiu s0, s0, 1",
            "jalr t9",
            "move a0, fp",
            "lw gp, 0x20(sp)",
            "bne s0, s1, 0x401cd4",
            "andi v0, s0, 0xf",
            "lw t9, -sym.imp.putchar(gp)",
            "nop",
            "jalr t9",
            "addiu a0, zero, 0xa",
            "lw gp, 0x20(sp)",
            "b 0x402020",
            "nop",
            "lw t9, -sym.imp.strcmp(gp)",
            "move a0, s1",
            "jalr t9",
            "addiu a1, a1, -0x4bc",
            "lw gp, 0x20(sp)",
            "bnez v0, 0x401d6c",
            "lui a1, 0x41",
            "lw t9, -sym.imp.inet_addr(gp)",
            "nop",
            "jalr t9",
            "move a0, s0",
            "lui v1, 0x42",
            "lw gp, 0x20(sp)",
            "b 0x402020",
            "sw v0, 0x1cd4(v1)",
            "lw t9, -sym.imp.strcmp(gp)",
            "move a0, s1",
            "jalr t9",
            "addiu a1, a1, -0x4b4",
            "lw gp, 0x20(sp)",
            "bnez v0, 0x401e90",
            "addiu t0, zero, 0x3a",
            "move a1, s5",
            "b 0x401e78",
            "addiu a3, zero, 0x2e",
            "beq v0, t0, 0x401da4",
            "nop",
            "bne v0, a3, 0x401da8",
            "nop",
            "addiu s0, s0, 1",
            "lb v0, (s0)",
            "nop",
            "andi a0, v0, 0xff",
            "addiu v0, a0, -0x30",
            "andi v1, v0, 0xff",
            "sltiu v0, v1, 0xa",
            "bnez v0, 0x401df8",
            "addiu s0, s0, 1",
            "addiu v0, a0, -0x61",
            "andi v0, v0, 0xff",
            "sltiu v0, v0, 6",
            "bnez v0, 0x401df4",
            "addiu v0, a0, -0x57",
            "addiu v0, a0, -0x41",
            "andi v0, v0, 0xff",
            "sltiu v0, v0, 6",
            "beqz v0, 0x401df8",
            "move v1, zero",
            "addiu v0, a0, -0x37",
            "andi v1, v0, 0xff",
            "sb v1, (a1)",
            "lb v0, (s0)",
            "nop",
            "beqz v0, 0x401e6c",
            "sll v0, v1, 4",
            "andi a2, v0, 0xff",
            "sb a2, (a1)",
            "lbu a0, (s0)",
            "nop",
            "addiu v0, a0, -0x30",
            "andi v1, v0, 0xff",
            "sltiu v0, v1, 0xa",
            "bnez v0, 0x401e64",
            "addu v0, v1, a2",
            "addiu v0, a0, -0x61",
            "andi v0, v0, 0xff",
            "sltiu v0, v0, 6",
            "bnez v0, 0x401e5c",
            "addiu v0, a0, -0x57",
            "addiu v0, a0, -0x41",
            "andi v0, v0, 0xff",
            "sltiu v0, v0, 6",
            "beqz v0, 0x401e60",
            "move v1, zero",
            "addiu v0, a0, -0x37",
            "andi v1, v0, 0xff",
            "addu v0, v1, a2",
            "sb v0, (a1)",
            "addiu s0, s0, 1",
            "addiu a1, a1, 1",
            "beq a1, s6, 0x402020",
            "nop",
            "lb v0, (s0)",
            "nop",
            "bnez v0, 0x401d94",
            "nop",
            "b 0x402020",
            "nop",
            "lw t9, -sym.imp.strcmp(gp)",
            "lui a1, 0x41",
            "move a0, s1",
            "jalr t9",
            "addiu a1, a1, -0x4ac",
            "lw gp, 0x20(sp)",
            "bnez v0, 0x401ed0",
            "move a0, s1",
            "lw t9, -sym.imp.strdup(gp)",
            "nop",
            "jalr t9",
            "move a0, s0",
            "lui v1, 0x42",
            "lw gp, 0x20(sp)",
            "b 0x402020",
            "sw v0, 0x1ce0(v1)",
            "lw t9, -sym.imp.strcmp(gp)",
            "nop",
            "jalr t9",
            "addiu a1, s4, -0x4a4",
            "lw gp, 0x20(sp)",
            "bnez v0, 0x401f0c",
            "lui a1, 0x41",
            "lw t9, -sym.imp.strdup(gp)",
            "nop",
            "jalr t9",
            "move a0, s0",
            "lui v1, 0x42",
            "lw gp, 0x20(sp)",
            "b 0x402020",
            "sw v0, 0x1ce8(v1)",
            "lw t9, -sym.imp.strcmp(gp)",
            "addiu a1, a1, -0x49c",
            "jalr t9",
            "move a0, s1",
            "lw gp, 0x20(sp)",
            "bnez v0, 0x401f48",
            "lui a1, 0x41",
            "lw t9, -sym.imp.strdup(gp)",
            "nop",
            "jalr t9",
            "move a0, s0",
            "lui v1, 0x42",
            "lw gp, 0x20(sp)",
            "b 0x402020",
            "sw v0, 0x1ce4(v1)",
            "lw t9, -sym.imp.strcmp(gp)",
            "addiu a1, a1, -0xd4",
            "jalr t9",
            "move a0, s1",
            "lw gp, 0x20(sp)",
            "bnez v0, 0x401f84",
            "lui a1, 0x41",
            "lw t9, -sym.imp.strdup(gp)",
            "nop",
            "jalr t9",
            "move a0, s0",
            "lui v1, 0x42",
            "lw gp, 0x20(sp)",
            "b 0x402020",
            "sw v0, 0x1cec(v1)",
            "lw t9, -sym.imp.strcmp(gp)",
            "addiu a1, a1, -0x490",
            "jalr t9",
            "move a0, s1",
            "lw gp, 0x20(sp)",
            "bnez v0, 0x401fc0",
            "lui a1, 0x41",
            "lw t9, -sym.imp.strdup(gp)",
            "nop",
            "jalr t9",
            "move a0, s0",
            "lui v1, 0x42",
            "lw gp, 0x20(sp)",
            "b 0x402020",
            "sw v0, 0x1cf0(v1)",
            "lw t9, -sym.imp.strcmp(gp)",
            "move a0, s1",
            "jalr t9",
            "addiu a1, a1, -0x488",
            "lw gp, 0x20(sp)",
            "bnez v0, 0x402020",
            "nop",
            "lw t9, -sym.imp.strdup(gp)",
            "nop",
            "jalr t9",
            "move a0, s0",
            "lui v1, 0x42",
            "lw gp, 0x20(sp)",
            "b 0x402020",
            "sw v0, 0x1cf4(v1)",
            "lui v0, 0x42",
            "addiu s5, v0, 0x1cd8",
            "lui v0, 0x42",
            "lui s3, 0x42",
            "addiu s6, v0, 0x1cde",
            "lui v0, 0x41",
            "addiu fp, v0, -0x4c4",
            "lui s4, 0x41",
            "addiu s7, s3, 0x1cd0",
            "lw t9, -sym.imp.fgets(gp)",
            "addiu s0, sp, 0x48",
            "move a0, s0",
            "addiu a1, zero, 0x100",
            "jalr t9",
            "move a2, s2",
            "lw gp, 0x20(sp)",
            "bnez v0, 0x401b7c",
            "nop",
            "lw t9, -sym.imp.fclose(gp)",
            "nop",
            "jalr t9",
            "move a0, s2",
            "lw gp, 0x20(sp)",
            "addiu s2, sp, 0x28",
            "move a0, s2",
            "lw t9, -sym.imp.memset(gp)",
            "move a1, zero",
            "lui v0, 0x42",
            "lw s3, 0x1d00(v0)",
            "jalr t9",
            "addiu a2, zero, 0x20",
            "lw gp, 0x20(sp)",
            "addiu a0, zero, 2",
            "addiu a1, zero, 3",
            "lw t9, -sym.imp.socket(gp)",
            "nop",
            "jalr t9",
            "addiu a2, zero, 0xff",
            "lw gp, 0x20(sp)",
            "bltz v0, 0x4021cc",
            "move s0, v0",
            "lw t9, -sym.imp.strcpy(gp)",
            "addiu v0, zero, 2",
            "move a0, s2",
            "move a1, s3",
            "jalr t9",
            "sh v0, 0x38(sp)",
            "lw gp, 0x20(sp)",
            "move a0, s0",
            "ori a1, zero, 0x8927",
            "lw t9, -sym.imp.ioctl(gp)",
            "nop",
            "jalr t9",
            "move a2, s2",
            "lw gp, 0x20(sp)",
            "beqz v0, 0x40210c",
            "addiu v0, sp, 0x3a",
            "lui a0, 0x41",
            "jal sym.verbose",
            "addiu a0, a0, -0x47c",
            "lw gp, 0x20(sp)",
            "nop",
            "lw t9, -sym.imp.close(gp)",
            "nop",
            "jalr t9",
            "move a0, s0",
            "b 0x40226c",
            "nop",
            "lhu a1, 4(v0)",
            "lhu a2, 2(v0)",
            "lhu v0, 0x3a(sp)",
            "lui a0, 0x42",
            "lw t9, -sym.imp.ioctl(gp)",
            "addiu v1, a0, 0x1cd8",
            "sh a1, 4(v1)",
            "sh v0, 0x1cd8(a0)",
            "sh a2, 2(v1)",
            "move a0, s0",
            "ori a1, zero, 0x8915",
            "jalr t9",
            "move a2, s2",
            "lw gp, 0x20(sp)",
            "beqz v0, 0x402168",
            "addiu s1, sp, 0x38",
            "lw t9, -sym.imp.close(gp)",
            "nop",
            "jalr t9",
            "move a0, s0",
            "lui a0, 0x41",
            "b 0x4021ac",
            "addiu a0, a0, -0x464",
            "lw v0, 4(s1)",
            "lw t9, -sym.imp.ioctl(gp)",
            "lui v1, 0x42",
            "sw v0, 0x1cd0(v1)",
            "move a2, s2",
            "move a0, s0",
            "jalr t9",
            "ori a1, zero, 0x891b",
            "lw gp, 0x20(sp)",
            "nop",
            "lw t9, -sym.imp.close(gp)",
            "beqz v0, 0x4021bc",
            "lui v0, 0x42",
            "jalr t9",
            "move a0, s0",
            "lui a0, 0x41",
            "addiu a0, a0, -0x450",
            "jal sym.verbose",
            "nop",
            "b 0x40226c",
            "nop",
            "lw v1, 4(s1)",
            "move a0, s0",
            "jalr t9",
            "sw v1, 0x1cd4(v0)",
            "lui a0, 0x41",
            "move a1, s3",
            "jal sym.verbose",
            "addiu a0, a0, -0x438",
            "lw gp, 0x20(sp)",
            "lui v0, 0x42",
            "lw a0, 0x1cd0(v0)",
            "lw t9, -sym.imp.inet_ntoa(gp)",
            "nop",
            "jalr t9",
            "nop",
            "lui a0, 0x41",
            "move a1, v0",
            "jal sym.verbose",
            "addiu a0, a0, -0x430",
            "lw gp, 0x20(sp)",
            "lui v0, 0x42",
            "lw a0, 0x1cd4(v0)",
            "lw t9, -sym.imp.inet_ntoa(gp)",
            "nop",
            "jalr t9",
            "nop",
            "lui a0, 0x41",
            "move a1, v0",
            "jal sym.verbose",
            "addiu a0, a0, -0x428",
            "lui v1, 0x42",
            "addiu v0, v1, 0x1cd8",
            "lbu a1, 0x1cd8(v1)",
            "lbu a2, 1(v0)",
            "lbu a3, 2(v0)",
            "lbu t0, 5(v0)",
            "lbu v1, 3(v0)",
            "lbu v0, 4(v0)",
            "lui a0, 0x41",
            "addiu a0, a0, 0x5ac",
            "sw v1, 0x10(sp)",
            "sw v0, 0x14(sp)",
            "jal sym.verbose",
            "sw t0, 0x18(sp)",
            "lw gp, 0x20(sp)",
            "nop",
            "lw t9, -sym.NEAP_Initialize(gp)",
            "nop",
            "jalr t9",
            "nop",
            "lw gp, 0x20(sp)",
            "nop",
            "lw t9, -sym.NEAP_OpenNEAPService(gp)",
            "nop",
            "jalr t9",
            "nop",
            "lui v1, 0x42",
            "lw s0, 0x1cf0(v1)",
            "lw gp, 0x20(sp)",
            "beqz s0, 0x4022e0",
            "move s1, v0",
            "lw t9, -sym.imp.strlen(gp)",
            "nop",
            "jalr t9",
            "move a0, s0",
            "lw gp, 0x20(sp)",
            "move a2, s0",
            "move a3, v0",
            "lw t9, -sym.NEAP_SetSecurity(gp)",
            "move a0, s1",
            "jalr t9",
            "addiu a1, zero, 1",
            "lw gp, 0x20(sp)",
            "beqz s1, 0x402338",
            "lui v0, 0x42",
            "lw t9, -sym.NEAP_BindAdapter(gp)",
            "lw a1, 0x1d00(v0)",
            "jalr t9",
            "move a0, s1",
            "lw gp, 0x20(sp)",
            "lui a2, 0x40",
            "addiu a2, a2, 0x244c",
            "lw t9, -sym.NEAP_ListenAdapter(gp)",
            "move a0, s1",
            "move a1, zero",
            "jalr t9",
            "move a3, zero",
            "lw gp, 0x20(sp)",
            "nop",
            "lw t9, -sym.NEAP_CloseNEAPService(gp)",
            "nop",
            "jalr t9",
            "move a0, s1",
            "lw gp, 0x20(sp)",
            "nop",
            "lw t9, -sym.NEAP_Deinitialize(gp)",
            "nop",
            "jalr t9",
            "nop",
            "lui v0, 0x42",
            "lw a0, 0x1ce0(v0)",
            "lw gp, 0x20(sp)",
            "beqz a0, 0x402374",
            "lui v0, 0x42",
            "lw t9, -sym.imp.free(gp)",
            "nop",
            "jalr t9",
            "nop",
            "lw gp, 0x20(sp)",
            "lui v0, 0x42",
            "lw a0, 0x1ce4(v0)",
            "nop",
            "beqz a0, 0x40239c",
            "lui v0, 0x42",
            "lw t9, -sym.imp.free(gp)",
            "nop",
            "jalr t9",
            "nop",
            "lw gp, 0x20(sp)",
            "lui v0, 0x42",
            "lw a0, 0x1ce8(v0)",
            "nop",
            "beqz a0, 0x4023c4",
            "lui v0, 0x42",
            "lw t9, -sym.imp.free(gp)",
            "nop",
            "jalr t9",
            "nop",
            "lw gp, 0x20(sp)",
            "lui v0, 0x42",
            "lw a0, 0x1cec(v0)",
            "nop",
            "beqz a0, 0x4023ec",
            "lui v0, 0x42",
            "lw t9, -sym.imp.free(gp)",
            "nop",
            "jalr t9",
            "nop",
            "lw gp, 0x20(sp)",
            "lui v0, 0x42",
            "lw a0, 0x1cf4(v0)",
            "nop",
            "beqz a0, 0x40240c",
            "nop",
            "lw t9, -sym.imp.free(gp)",
            "nop",
            "jalr t9",
            "nop",
            "jal fcn.00401890",
            "move a0, zero",
            "lw ra, 0x16c(sp)",
            "lw gp, 0x20(sp)",
            "move v0, zero",
            "lw fp, 0x168(sp)",
            "lw s7, 0x164(sp)",
            "lw s6, 0x160(sp)",
            "lw s5, 0x15c(sp)",
            "lw s4, 0x158(sp)",
            "lw s3, 0x154(sp)",
            "lw s2, 0x150(sp)",
            "lw s1, 0x14c(sp)",
            "lw s0, 0x148(sp)",
            "jr ra",
            "addiu sp, sp, 0x170"
        ]
    },
    "fcn.004018dc": {
        "function_address": "0x004018dc",
        "instructions": [
            "lui gp, 0x43",
            "addiu sp, sp, -0x20",
            "addiu gp, gp, -0x6540",
            "sw ra, 0x1c(sp)",
            "sw s0, 0x18(sp)",
            "sw gp, 0x10(sp)",
            "lw t9, -sym.imp.printf(gp)",
            "move s0, a0",
            "lui a1, 0x41",
            "lui a0, 0x41",
            "addiu a1, a1, -0x618",
            "jalr t9",
            "addiu a0, a0, -0x610",
            "lw gp, 0x10(sp)",
            "lui a0, 0x41",
            "lw t9, -sym.imp.puts(gp)",
            "nop",
            "jalr t9",
            "addiu a0, a0, -0x5f8",
            "lw gp, 0x10(sp)",
            "lui a0, 0x41",
            "lw t9, -sym.imp.puts(gp)",
            "nop",
            "jalr t9",
            "addiu a0, a0, -0x5c8",
            "lw gp, 0x10(sp)",
            "lui a0, 0x41",
            "lw t9, -sym.imp.puts(gp)",
            "nop",
            "jalr t9",
            "addiu a0, a0, -0x5a4",
            "lw gp, 0x10(sp)",
            "lui a0, 0x41",
            "lw t9, -sym.imp.puts(gp)",
            "nop",
            "jalr t9",
            "addiu a0, a0, -0x57c",
            "lw gp, 0x10(sp)",
            "nop",
            "lw t9, -sym.imp.putchar(gp)",
            "nop",
            "jalr t9",
            "addiu a0, zero, 0xa",
            "lw gp, 0x10(sp)",
            "move a0, s0",
            "lw ra, 0x1c(sp)",
            "lw s0, 0x18(sp)",
            "j fcn.00401890",
            "addiu sp, sp, 0x20"
        ]
    },
    "fcn.00401890": {
        "function_address": "0x00401890",
        "instructions": [
            "lui gp, 0x43",
            "addiu sp, sp, -0x20",
            "addiu gp, gp, -0x6540",
            "sw ra, 0x1c(sp)",
            "sw s0, 0x18(sp)",
            "sw gp, 0x10(sp)",
            "move s0, a0",
            "lui a1, 0x41",
            "lui a0, 0x41",
            "addiu a0, a0, -0x630",
            "addiu a1, a1, -0x618",
            "jal sym.verbose",
            "move a2, s0",
            "lw gp, 0x10(sp)",
            "nop",
            "lw t9, -sym.imp.exit(gp)",
            "nop",
            "jalr t9",
            "move a0, s0"
        ]
    },
    "sym.verbose": {
        "function_address": "0x00401834",
        "instructions": [
            "lui gp, 0x43",
            "addiu sp, sp, -0x28",
            "addiu gp, gp, -0x6540",
            "sw ra, 0x24(sp)",
            "sw gp, 0x10(sp)",
            "lui v0, 0x42",
            "lw v0, 0x1d04(v0)",
            "sw a1, 0x2c(sp)",
            "sw a2, 0x30(sp)",
            "sw a3, 0x34(sp)",
            "beqz v0, 0x401880",
            "move a1, a0",
            "lw v0, -0x7f10(gp)",
            "lw t9, -sym.imp.vfprintf(gp)",
            "addiu a2, sp, 0x2c",
            "lw a0, (v0)",
            "jalr t9",
            "sw a2, 0x18(sp)",
            "lw gp, 0x10(sp)",
            "lw ra, 0x24(sp)",
            "nop",
            "jr ra",
            "addiu sp, sp, 0x28"
        ]
    },
    "sym.NEAP_SendSetResponse": {
        "function_address": "0x0040829c",
        "instructions": [
            "addiu sp, sp, -0x20",
            "sw ra, 0x1c(sp)",
            "sw gp, 0x10(sp)",
            "lbu v0, 0xa(a2)",
            "andi a1, a1, 0xf",
            "andi v0, v0, 0xf0",
            "or a1, a1, v0",
            "addiu v0, zero, 4",
            "sb a1, 0xa(a2)",
            "sb v0, 4(a2)",
            "move a1, a2",
            "jal fcn.00408004",
            "addiu a2, zero, 1",
            "lw ra, 0x1c(sp)",
            "nor v0, zero, v0",
            "lw gp, 0x10(sp)",
            "srl v0, v0, 0x1f",
            "jr ra",
            "addiu sp, sp, 0x20"
        ]
    },
    "fcn.00408004": {
        "function_address": "0x00408004",
        "instructions": [
            "lui gp, 0x43",
            "addiu sp, sp, -0x1000",
            "addiu gp, gp, -0x6540",
            "sw ra, 0xffc(sp)",
            "sw s5, 0xff8(sp)",
            "sw s4, 0xff4(sp)",
            "sw s3, 0xff0(sp)",
            "sw s2, 0xfec(sp)",
            "sw s1, 0xfe8(sp)",
            "sw s0, 0xfe4(sp)",
            "sw gp, 0x18(sp)",
            "lhu v1, 4(a0)",
            "lw t9, -sym.imp.memcpy(gp)",
            "addiu v0, zero, 2",
            "addiu s1, sp, 0x40",
            "sh v0, 0x20(sp)",
            "addiu v0, zero, -1",
            "move s0, a1",
            "move s4, a0",
            "sh v1, 0x22(sp)",
            "move a0, s1",
            "sw v0, 0x24(sp)",
            "move s5, a2",
            "sw zero, 0x28(sp)",
            "sw zero, 0x2c(sp)",
            "jalr t9",
            "addiu a2, zero, 0x24",
            "move s2, s1",
            "lw gp, 0x18(sp)",
            "lw s0, 0x24(s0)",
            "b 0x4080f0",
            "addiu s1, zero, 0x24",
            "lbu a2, 4(s0)",
            "jalr t9",
            "addiu a2, a2, 1",
            "lbu v1, 4(s0)",
            "lhu v0, 0x24(s0)",
            "lw gp, 0x18(sp)",
            "addiu a0, v1, 1",
            "addu a0, a0, s1",
            "addiu v0, v0, 3",
            "addu v0, v0, v1",
            "addu v1, s2, a0",
            "sh v0, (v1)",
            "lhu a2, 0x24(s0)",
            "nop",
            "beqz a2, 0x4080ec",
            "addiu s1, a0, 2",
            "lw v0, 0x28(s0)",
            "lw t9, -sym.imp.memcpy(gp)",
            "addu a0, s2, s1",
            "beqz v0, 0x4080ec",
            "move a1, v0",
            "jalr t9",
            "nop",
            "lhu v0, 0x24(s0)",
            "lw gp, 0x18(sp)",
            "addu s1, s1, v0",
            "lw s0, (s0)",
            "lw t9, -sym.imp.memcpy(gp)",
            "addu a0, s2, s1",
            "bnez s0, 0x408084",
            "addiu a1, s0, 4",
            "lbu v0, 0xa(s2)",
            "lw t9, -sym.imp.memset(gp)",
            "addiu s3, sp, 0x4c",
            "andi v0, v0, 0xf",
            "sb v0, 0xa(s2)",
            "sh s1, 6(s2)",
            "move a0, s3",
            "move a1, zero",
            "jalr t9",
            "addiu a2, zero, 0x10",
            "lw gp, 0x18(sp)",
            "beqz s5, 0x40819c",
            "andi v1, s5, 0xff",
            "addiu v0, zero, 1",
            "bne v1, v0, 0x40819c",
            "sb v1, 0x17(s4)",
            "lbu v0, 0x17(s4)",
            "lbu v1, 0xa(s2)",
            "lw a2, 0x18(s4)",
            "sll v0, v0, 4",
            "lw a3, 0x1c(s4)",
            "lw t9, -sym.hmac_md5(gp)",
            "andi v1, v1, 0x8f",
            "andi v0, v0, 0x70",
            "or v0, v0, v1",
            "addiu s0, sp, 0x30",
            "sb v0, 0xa(s2)",
            "move a0, s2",
            "move a1, s1",
            "jalr t9",
            "sw s0, 0x10(sp)",
            "lw gp, 0x18(sp)",
            "move a0, s3",
            "move a1, s0",
            "lw t9, -sym.imp.memcpy(gp)",
            "nop",
            "jalr t9",
            "addiu a2, zero, 0x10",
            "lw gp, 0x18(sp)",
            "lw a0, (s4)",
            "lw t9, -sym.imp.sendto(gp)",
            "addiu v0, sp, 0x20",
            "sw v0, 0x10(sp)",
            "addiu v0, zero, 0x10",
            "sw v0, 0x14(sp)",
            "move a2, s1",
            "addiu a1, sp, 0x40",
            "jalr t9",
            "move a3, zero",
            "lw gp, 0x18(sp)",
            "bgez v0, 0x408228",
            "move s3, v0",
            "lw t9, -sym.imp.__errno_location(gp)",
            "lw v0, -0x7f10(gp)",
            "lw s2, (s4)",
            "lw s1, (v0)",
            "jalr t9",
            "nop",
            "lw gp, 0x18(sp)",
            "lw s0, (v0)",
            "lw t9, -sym.imp.strerror(gp)",
            "nop",
            "jalr t9",
            "move a0, s0",
            "lw gp, 0x18(sp)",
            "lui a1, 0x41",
            "sw v0, 0x10(sp)",
            "lw t9, -sym.imp.fprintf(gp)",
            "move a0, s1",
            "addiu a1, a1, 0x6c0",
            "move a2, s2",
            "jalr t9",
            "move a3, s0",
            "lw gp, 0x18(sp)",
            "lw ra, 0xffc(sp)",
            "move v0, s3",
            "lw s5, 0xff8(sp)",
            "lw s4, 0xff4(sp)",
            "lw s3, 0xff0(sp)",
            "lw s2, 0xfec(sp)",
            "lw s1, 0xfe8(sp)",
            "lw s0, 0xfe4(sp)",
            "jr ra",
            "addiu sp, sp, 0x1000"
        ]
    },
    "sym.NEAP_SendGetResponse": {
        "function_address": "0x00408250",
        "instructions": [
            "addiu sp, sp, -0x20",
            "sw ra, 0x1c(sp)",
            "sw gp, 0x10(sp)",
            "lbu v0, 0xa(a2)",
            "andi a1, a1, 0xf",
            "andi v0, v0, 0xf0",
            "or a1, a1, v0",
            "addiu v0, zero, 6",
            "sb a1, 0xa(a2)",
            "sb v0, 4(a2)",
            "move a1, a2",
            "jal fcn.00408004",
            "addiu a2, zero, 1",
            "lw ra, 0x1c(sp)",
            "nor v0, zero, v0",
            "lw gp, 0x10(sp)",
            "srl v0, v0, 0x1f",
            "jr ra",
            "addiu sp, sp, 0x20"
        ]
    },
    "sym.xmldbc_set": {
        "function_address": "0x0040eb90",
        "instructions": [
            "lui gp, 0x43",
            "addiu sp, sp, -0x230",
            "addiu gp, gp, -0x6540",
            "sw ra, 0x22c(sp)",
            "sw s2, 0x228(sp)",
            "sw s1, 0x224(sp)",
            "sw s0, 0x220(sp)",
            "sw gp, 0x18(sp)",
            "lw t9, -sym.imp.snprintf(gp)",
            "addiu s0, sp, 0x20",
            "move v0, a2",
            "lui a2, 0x41",
            "sw a3, 0x10(sp)",
            "addiu a2, a2, -0xa4",
            "move a3, v0",
            "move s1, a0",
            "move s2, a1",
            "move a0, s0",
            "jalr t9",
            "addiu a1, zero, 0x1ff",
            "lw gp, 0x18(sp)",
            "move a0, s0",
            "lw t9, -sym.imp.strlen(gp)",
            "nop",
            "jalr t9",
            "sb zero, 0x21f(sp)",
            "addiu v0, v0, 1",
            "move a0, s1",
            "move a2, s2",
            "move a3, s0",
            "addiu a1, zero, 2",
            "jal fcn.0040e71c",
            "sw v0, 0x10(sp)",
            "lw ra, 0x22c(sp)",
            "lw gp, 0x18(sp)",
            "lw s2, 0x228(sp)",
            "lw s1, 0x224(sp)",
            "lw s0, 0x220(sp)",
            "jr ra",
            "addiu sp, sp, 0x230"
        ]
    },
    "fcn.0040e71c": {
        "function_address": "0x0040e71c",
        "instructions": [
            "lui gp, 0x43",
            "addiu sp, sp, -0x48",
            "addiu gp, gp, -0x6540",
            "sw ra, 0x44(sp)",
            "sw s4, 0x40(sp)",
            "sw s3, 0x3c(sp)",
            "sw s2, 0x38(sp)",
            "sw s1, 0x34(sp)",
            "sw s0, 0x30(sp)",
            "sw gp, 0x18(sp)",
            "move s3, a2",
            "move s4, a3",
            "jal fcn.0040e59c",
            "andi s2, a1, 0xffff",
            "lw gp, 0x18(sp)",
            "move s1, v0",
            "bltz v0, 0x40e7bc",
            "addiu s0, zero, -1",
            "lhu v0, 0x5a(sp)",
            "move a1, s2",
            "move a2, s3",
            "move a3, s4",
            "move a0, s1",
            "jal fcn.0040e680",
            "sw v0, 0x10(sp)",
            "lw gp, 0x18(sp)",
            "bltz v0, 0x40e7a8",
            "addiu s0, zero, -1",
            "lw t9, -sym.imp.read(gp)",
            "move a0, s1",
            "addiu a1, sp, 0x20",
            "jalr t9",
            "addiu a2, zero, 0xc",
            "lw gp, 0x18(sp)",
            "lw s0, 0x28(sp)",
            "lw t9, -sym.imp.close(gp)",
            "nop",
            "jalr t9",
            "move a0, s1",
            "lw gp, 0x18(sp)",
            "lw ra, 0x44(sp)",
            "move v0, s0",
            "lw s4, 0x40(sp)",
            "lw s3, 0x3c(sp)",
            "lw s2, 0x38(sp)",
            "lw s1, 0x34(sp)",
            "lw s0, 0x30(sp)",
            "jr ra",
            "addiu sp, sp, 0x48"
        ]
    },
    "fcn.0040e59c": {
        "function_address": "0x0040e59c",
        "instructions": [
            "lui gp, 0x43",
            "addiu sp, sp, -0x98",
            "addiu gp, gp, -0x6540",
            "sw ra, 0x94(sp)",
            "sw s1, 0x90(sp)",
            "sw s0, 0x8c(sp)",
            "sw gp, 0x10(sp)",
            "lw t9, -sym.imp.socket(gp)",
            "move s1, a0",
            "addiu a1, zero, 2",
            "addiu a0, zero, 1",
            "jalr t9",
            "move a2, zero",
            "lw gp, 0x10(sp)",
            "bgez v0, 0x40e5e4",
            "move s0, v0",
            "b 0x40e668",
            "addiu s0, zero, -1",
            "lw t9, -sym.imp.fcntl(gp)",
            "move a0, v0",
            "addiu a1, zero, 2",
            "jalr t9",
            "addiu a2, zero, 1",
            "lw gp, 0x10(sp)",
            "bnez s1, 0x40e608",
            "lui v0, 0x41",
            "addiu s1, v0, 0x1450",
            "lw t9, -sym.imp.snprintf(gp)",
            "addiu v0, zero, 1",
            "lui a2, 0x41",
            "addiu a2, a2, 0x7b8",
            "move a3, s1",
            "addiu a0, sp, 0x1a",
            "addiu a1, zero, 0x6c",
            "jalr t9",
            "sh v0, 0x18(sp)",
            "lw gp, 0x10(sp)",
            "move a0, s0",
            "addiu a1, sp, 0x18",
            "lw t9, -sym.imp.connect(gp)",
            "nop",
            "jalr t9",
            "addiu a2, zero, 0x6e",
            "lw gp, 0x10(sp)",
            "bgez v0, 0x40e668",
            "move a0, s0",
            "lw t9, -sym.imp.close(gp)",
            "nop",
            "jalr t9",
            "addiu s0, zero, -1",
            "lw gp, 0x10(sp)",
            "lw ra, 0x94(sp)",
            "move v0, s0",
            "lw s1, 0x90(sp)",
            "lw s0, 0x8c(sp)",
            "jr ra",
            "addiu sp, sp, 0x98"
        ]
    },
    "fcn.0040e680": {
        "function_address": "0x0040e680",
        "instructions": [
            "lui gp, 0x43",
            "addiu sp, sp, -0x38",
            "addiu gp, gp, -0x6540",
            "sw ra, 0x34(sp)",
            "sw s2, 0x30(sp)",
            "sw s1, 0x2c(sp)",
            "sw s0, 0x28(sp)",
            "sw gp, 0x10(sp)",
            "lhu s0, 0x4a(sp)",
            "lw t9, -sym.imp.send(gp)",
            "sh a1, 0x18(sp)",
            "sw a2, 0x1c(sp)",
            "move s2, a3",
            "sh s0, 0x1a(sp)",
            "addiu a1, sp, 0x18",
            "addiu a2, zero, 0xc",
            "addiu a3, zero, 0x4000",
            "jalr t9",
            "move s1, a0",
            "lw gp, 0x10(sp)",
            "blez v0, 0x40e700",
            "addiu v1, zero, -1",
            "lw t9, -sym.imp.send(gp)",
            "move a0, s1",
            "move a1, s2",
            "move a2, s0",
            "jalr t9",
            "addiu a3, zero, 0x4000",
            "lw gp, 0x10(sp)",
            "bgtz v0, 0x40e700",
            "move v1, zero",
            "addiu v1, zero, -1",
            "lw ra, 0x34(sp)",
            "move v0, v1",
            "lw s2, 0x30(sp)",
            "lw s1, 0x2c(sp)",
            "lw s0, 0x28(sp)",
            "jr ra",
            "addiu sp, sp, 0x38"
        ]
    },
    "sym.MD5Final": {
        "function_address": "0x0040e38c",
        "instructions": [
            "addiu sp, sp, -0x30",
            "sw ra, 0x2c(sp)",
            "sw s1, 0x28(sp)",
            "sw s0, 0x24(sp)",
            "sw gp, 0x10(sp)",
            "lw v1, 0x10(a1)",
            "move s0, a1",
            "lw a1, 0x14(a1)",
            "srl v0, v1, 3",
            "andi t3, v0, 0x3f",
            "move s1, a0",
            "srl v0, v1, 8",
            "srl t2, a1, 0x18",
            "srl a0, v1, 0x10",
            "srl a2, v1, 0x18",
            "srl a3, a1, 8",
            "srl t0, a1, 0x10",
            "sltiu t1, t3, 0x38",
            "sb v0, 0x19(sp)",
            "sb a0, 0x1a(sp)",
            "sb a2, 0x1b(sp)",
            "sb a3, 0x1d(sp)",
            "sb t0, 0x1e(sp)",
            "sb t2, 0x1f(sp)",
            "sb v1, 0x18(sp)",
            "sb a1, 0x1c(sp)",
            "bnez t1, 0x40e400",
            "addiu v0, zero, 0x38",
            "addiu v0, zero, 0x78",
            "lui a1, 0x42",
            "subu a2, v0, t3",
            "addiu a1, a1, 0x1a80",
            "jal sym.MD5Update",
            "move a0, s0",
            "move a0, s0",
            "addiu a1, sp, 0x18",
            "jal sym.MD5Update",
            "addiu a2, zero, 8",
            "lw gp, 0x10(sp)",
            "move a0, s1",
            "move v1, s0",
            "move a1, zero",
            "addiu a2, zero, 0x10",
            "lw v0, (v1)",
            "addiu a1, a1, 4",
            "sb v0, (a0)",
            "lw v0, (v1)",
            "nop",
            "srl v0, v0, 8",
            "sb v0, 1(a0)",
            "lhu v0, (v1)",
            "nop",
            "sb v0, 2(a0)",
            "lbu v0, (v1)",
            "addiu v1, v1, 4",
            "sb v0, 3(a0)",
            "bne a1, a2, 0x40e438",
            "addiu a0, a0, 4",
            "move a0, s0",
            "addiu v0, s0, 0x58",
            "sb zero, (a0)",
            "addiu a0, a0, 1",
            "bne a0, v0, 0x40e47c",
            "nop",
            "lw ra, 0x2c(sp)",
            "lw s1, 0x28(sp)",
            "lw s0, 0x24(sp)",
            "jr ra",
            "addiu sp, sp, 0x30"
        ]
    },
    "sym.MD5Update": {
        "function_address": "0x0040e248",
        "instructions": [
            "addiu sp, sp, -0x30",
            "sw ra, 0x2c(sp)",
            "sw s4, 0x28(sp)",
            "sw s3, 0x24(sp)",
            "sw s2, 0x20(sp)",
            "sw s1, 0x1c(sp)",
            "sw s0, 0x18(sp)",
            "sw gp, 0x10(sp)",
            "lw v0, 0x10(a0)",
            "sll v1, a2, 3",
            "move s2, a0",
            "addu a0, v1, v0",
            "sltu v1, a0, v1",
            "srl v0, v0, 3",
            "move s4, a1",
            "move s3, a2",
            "andi a1, v0, 0x3f",
            "beqz v1, 0x40e2a4",
            "sw a0, 0x10(s2)",
            "lw v0, 0x14(s2)",
            "nop",
            "addiu v0, v0, 1",
            "sw v0, 0x14(s2)",
            "lw v1, 0x14(s2)",
            "addiu v0, zero, 0x40",
            "subu s1, v0, a1",
            "srl v0, s3, 0x1d",
            "addu v1, v1, v0",
            "sltu v0, s3, s1",
            "sw v1, 0x14(s2)",
            "bnez v0, 0x40e334",
            "move s0, zero",
            "addiu v0, a1, 0x18",
            "addu a2, s2, v0",
            "move a1, zero",
            "addu v0, s4, a1",
            "lbu a0, (v0)",
            "addu v1, a2, a1",
            "addiu a1, a1, 1",
            "sltu v0, a1, s1",
            "bnez v0, 0x40e2d4",
            "sb a0, (v1)",
            "move a0, s2",
            "jal fcn.0040d4ac",
            "addiu a1, s2, 0x18",
            "move s0, s1",
            "lw gp, 0x10(sp)",
            "b 0x40e318",
            "addu s1, s4, s1",
            "jal fcn.0040d4ac",
            "addiu s0, s0, 0x40",
            "lw gp, 0x10(sp)",
            "addiu v0, s0, 0x3f",
            "sltu v0, v0, s3",
            "move a1, s1",
            "move a0, s2",
            "bnez v0, 0x40e30c",
            "addiu s1, s1, 0x40",
            "move a1, zero",
            "addiu v0, a1, 0x18",
            "addu a0, s2, v0",
            "subu v1, s3, s0",
            "addu a1, s4, s0",
            "b 0x40e358",
            "move a3, zero",
            "lbu v0, (t1)",
            "nop",
            "sb v0, (t0)",
            "sltu v0, a3, v1",
            "addu t1, a1, a3",
            "addu t0, a0, a3",
            "bnez v0, 0x40e34c",
            "addiu a3, a3, 1",
            "lw ra, 0x2c(sp)",
            "lw s4, 0x28(sp)",
            "lw s3, 0x24(sp)",
            "lw s2, 0x20(sp)",
            "lw s1, 0x1c(sp)",
            "lw s0, 0x18(sp)",
            "jr ra",
            "addiu sp, sp, 0x30"
        ]
    },
    "sym.xmldbc_get_wb": {
        "function_address": "0x0040ee34",
        "instructions": [
            "lui gp, 0x43",
            "addiu sp, sp, -0x38",
            "addiu gp, gp, -0x6540",
            "sw ra, 0x34(sp)",
            "sw s4, 0x30(sp)",
            "sw s3, 0x2c(sp)",
            "sw s2, 0x28(sp)",
            "sw s1, 0x24(sp)",
            "sw s0, 0x20(sp)",
            "sw gp, 0x18(sp)",
            "move s3, a1",
            "move s2, a2",
            "jal fcn.0040e59c",
            "move s4, a3",
            "lw gp, 0x18(sp)",
            "move s0, v0",
            "bltz v0, 0x40eee0",
            "addiu s1, zero, -1",
            "lw t9, -sym.imp.strlen(gp)",
            "nop",
            "jalr t9",
            "move a0, s2",
            "addiu v0, v0, 1",
            "andi v0, v0, 0xffff",
            "move a2, s3",
            "move a3, s2",
            "move a0, s0",
            "addiu a1, zero, 1",
            "jal fcn.0040e680",
            "sw v0, 0x10(sp)",
            "lw gp, 0x18(sp)",
            "bltz v0, 0x40eecc",
            "move a1, s4",
            "lw a2, 0x48(sp)",
            "jal fcn.0040ec30",
            "move a0, s0",
            "lw gp, 0x18(sp)",
            "move s1, zero",
            "lw t9, -sym.imp.close(gp)",
            "nop",
            "jalr t9",
            "move a0, s0",
            "lw gp, 0x18(sp)",
            "lw ra, 0x34(sp)",
            "move v0, s1",
            "lw s4, 0x30(sp)",
            "lw s3, 0x2c(sp)",
            "lw s2, 0x28(sp)",
            "lw s1, 0x24(sp)",
            "lw s0, 0x20(sp)",
            "jr ra",
            "addiu sp, sp, 0x38"
        ]
    },
    "fcn.0040ec30": {
        "function_address": "0x0040ec30",
        "instructions": [
            "lui gp, 0x43",
            "addiu sp, sp, -0xc8",
            "addiu gp, gp, -0x6540",
            "sw ra, 0xc4(sp)",
            "sw fp, 0xc0(sp)",
            "sw s7, 0xbc(sp)",
            "sw s6, 0xb8(sp)",
            "sw s5, 0xb4(sp)",
            "sw s4, 0xb0(sp)",
            "sw s3, 0xac(sp)",
            "sw s2, 0xa8(sp)",
            "sw s1, 0xa4(sp)",
            "sw s0, 0xa0(sp)",
            "sw gp, 0x18(sp)",
            "srl v1, a0, 5",
            "sll v1, v1, 2",
            "addiu s3, sp, 0x20",
            "addiu v0, zero, 1",
            "move s2, a0",
            "move s7, a1",
            "move s6, a2",
            "sllv s4, v0, a0",
            "addu s1, s3, v1",
            "move s0, zero",
            "addiu fp, sp, 0xa0",
            "addiu s5, a0, 1",
            "move v0, s3",
            "sw zero, (v0)",
            "addiu v0, v0, 4",
            "bne v0, fp, 0x40ec9c",
            "move a0, s5",
            "lw v0, (s1)",
            "lw t9, -sym.imp.select(gp)",
            "sw zero, 0x10(sp)",
            "or v0, v0, s4",
            "sw v0, (s1)",
            "move a1, s3",
            "move a2, zero",
            "jalr t9",
            "move a3, zero",
            "lw gp, 0x18(sp)",
            "bltz v0, 0x40ec9c",
            "move v0, s3",
            "lw v0, (s1)",
            "nop",
            "and v0, s4, v0",
            "beqz v0, 0x40ec9c",
            "move v0, s3",
            "lw t9, -sym.imp.read(gp)",
            "move a0, s2",
            "addu a1, s7, s0",
            "jalr t9",
            "subu a2, s6, s0",
            "lw gp, 0x18(sp)",
            "blez v0, 0x40ed30",
            "nop",
            "addu s0, s0, v0",
            "addu v0, s7, s0",
            "lb v0, -1(v0)",
            "nop",
            "beqz v0, 0x40ed30",
            "sltu v0, s6, s0",
            "bnez v0, 0x40ec9c",
            "move v0, s3",
            "lw ra, 0xc4(sp)",
            "move v0, s0",
            "lw fp, 0xc0(sp)",
            "lw s7, 0xbc(sp)",
            "lw s6, 0xb8(sp)",
            "lw s5, 0xb4(sp)",
            "lw s4, 0xb0(sp)",
            "lw s3, 0xac(sp)",
            "lw s2, 0xa8(sp)",
            "lw s1, 0xa4(sp)",
            "lw s0, 0xa0(sp)",
            "jr ra",
            "addiu sp, sp, 0xc8"
        ]
    },
    "sym.NEAP_ListenAdapter": {
        "function_address": "0x004088d8",
        "instructions": [
            "lui gp, 0x43",
            "addiu sp, sp, -0x10c0",
            "addiu gp, gp, -0x6540",
            "sw ra, 0x10bc(sp)",
            "sw fp, 0x10b8(sp)",
            "sw s7, 0x10b4(sp)",
            "sw s6, 0x10b0(sp)",
            "sw s5, 0x10ac(sp)",
            "sw s4, 0x10a8(sp)",
            "sw s3, 0x10a4(sp)",
            "sw s2, 0x10a0(sp)",
            "sw s1, 0x109c(sp)",
            "sw s0, 0x1098(sp)",
            "sw gp, 0x18(sp)",
            "sw a2, 0x10c8(sp)",
            "move s4, a0",
            "sw a3, 0x10cc(sp)",
            "addiu s1, sp, 0x54",
            "bnez a2, 0x40895c",
            "addiu v0, sp, 0xd4",
            "lw ra, 0x10bc(sp)",
            "move v0, zero",
            "lw fp, 0x10b8(sp)",
            "lw s7, 0x10b4(sp)",
            "lw s6, 0x10b0(sp)",
            "lw s5, 0x10ac(sp)",
            "lw s4, 0x10a8(sp)",
            "lw s3, 0x10a4(sp)",
            "lw s2, 0x10a0(sp)",
            "lw s1, 0x109c(sp)",
            "lw s0, 0x1098(sp)",
            "jr ra",
            "addiu sp, sp, 0x10c0",
            "sw zero, (s1)",
            "addiu s1, s1, 4",
            "bne s1, v0, 0x40895c",
            "addiu a2, sp, 0x20",
            "lw a1, (s4)",
            "addiu v0, zero, 1",
            "srl v1, a1, 5",
            "sll v1, v1, 2",
            "addu v1, a2, v1",
            "lw a0, 0x34(v1)",
            "sllv v0, v0, a1",
            "addiu t9, s4, 0x10",
            "or a0, a0, v0",
            "addiu v0, zero, 0x10",
            "sw a0, 0x34(v1)",
            "sw v0, 0x20(sp)",
            "addiu v1, sp, 0xe0",
            "addiu v0, sp, 0xf0",
            "sw v0, 0x1080(sp)",
            "sw v1, 0x107c(sp)",
            "sw t9, 0x1078(sp)",
            "addiu v0, sp, 0x54",
            "addiu v1, sp, 0x44",
            "addiu t9, sp, 0x34",
            "sw a2, 0x108c(sp)",
            "sw v0, 0x1084(sp)",
            "addiu s5, sp, 0xd4",
            "sw v1, 0x1088(sp)",
            "addiu fp, zero, 1",
            "sw t9, 0x1090(sp)",
            "addiu s7, sp, 0x24",
            "addiu s6, zero, 5",
            "lw a0, (s4)",
            "lw t9, -sym.imp.select(gp)",
            "lw a1, 0x1084(sp)",
            "sw zero, 0x10(sp)",
            "addiu a0, a0, 1",
            "move a2, zero",
            "jalr t9",
            "move a3, zero",
            "lw gp, 0x18(sp)",
            "blez v0, 0x4089dc",
            "move a1, s5",
            "lw v0, 0x1088(sp)",
            "lw v1, 0x108c(sp)",
            "lw a0, (s4)",
            "lw t9, -sym.imp.recvfrom(gp)",
            "sw v0, 0x10(sp)",
            "sw v1, 0x14(sp)",
            "addiu a2, zero, 0xfa0",
            "jalr t9",
            "move a3, zero",
            "lw gp, 0x18(sp)",
            "bltz v0, 0x4089dc",
            "move s3, v0",
            "lw v0, (s1)",
            "lui t9, 0x92b",
            "ori t9, t9, 0x1338",
            "bne v0, t9, 0x4089dc",
            "addiu v1, zero, 2",
            "lbu v0, 0x22(s1)",
            "nop",
            "bne v0, v1, 0x4089dc",
            "nop",
            "lhu s2, 6(s1)",
            "nop",
            "bne s2, s3, 0x4089dc",
            "addiu t9, zero, 3",
            "lbu s0, 4(s1)",
            "nop",
            "beq s0, t9, 0x408a84",
            "nop",
            "bne s0, s6, 0x408aac",
            "nop",
            "lw t9, -sym.imp.memcmp(gp)",
            "lw a1, -obj.g_mac(gp)",
            "lw a0, 0x1080(sp)",
            "jalr t9",
            "addiu a2, zero, 6",
            "lw gp, 0x18(sp)",
            "bnez v0, 0x4089dc",
            "addiu v0, zero, 3",
            "b 0x408abc",
            "nop",
            "bne s0, fp, 0x4089dc",
            "nop",
            "b 0x408ae0",
            "nop",
            "beq s0, v0, 0x408acc",
            "nop",
            "bne s0, s6, 0x408ae0",
            "nop",
            "lbu v0, 0xa(s1)",
            "nop",
            "andi v0, v0, 0x70",
            "beqz v0, 0x4089dc",
            "nop",
            "lbu v0, 0xa(s1)",
            "nop",
            "andi v0, v0, 0x70",
            "srl v0, v0, 4",
            "bne v0, fp, 0x408c24",
            "nop",
            "lw t9, -sym.imp.memcpy(gp)",
            "lw a0, 0x1090(sp)",
            "lw a1, 0x107c(sp)",
            "jalr t9",
            "addiu a2, zero, 0x10",
            "lw gp, 0x18(sp)",
            "lw a0, 0x107c(sp)",
            "addiu a2, zero, 0x10",
            "lw t9, -sym.imp.memset(gp)",
            "nop",
            "jalr t9",
            "move a1, zero",
            "lw a2, 0x18(s4)",
            "lw gp, 0x18(sp)",
            "beqz a2, 0x408b58",
            "nop",
            "lw a3, 0x1c(s4)",
            "nop",
            "blez a3, 0x408b58",
            "move a1, s2",
            "lw t9, -sym.hmac_md5(gp)",
            "sw s7, 0x10(sp)",
            "b 0x408b74",
            "move a0, s5",
            "lw t9, -sym.hmac_md5(gp)",
            "lui a2, 0x41",
            "sw s7, 0x10(sp)",
            "move a1, s2",
            "move a0, s5",
            "addiu a2, a2, -0x404",
            "move a3, zero",
            "jalr t9",
            "nop",
            "lw gp, 0x18(sp)",
            "lw a1, 0x1090(sp)",
            "move a0, s7",
            "lw t9, -sym.imp.memcmp(gp)",
            "nop",
            "jalr t9",
            "addiu a2, zero, 0x10",
            "beqz v0, 0x408c24",
            "nop",
            "lhu v0, 0x46(sp)",
            "lbu a0, 0x22(s1)",
            "lw a1, 0x1078(sp)",
            "jal fcn.00407ce0",
            "sh v0, 4(s4)",
            "lbu v1, 5(s1)",
            "lbu a0, 4(s1)",
            "move s0, v0",
            "bne a0, fp, 0x408be0",
            "sb v1, 5(v0)",
            "move a0, s4",
            "addiu a1, zero, 1",
            "jal sym.NEAP_SendDiscoverResponse",
            "move a2, v0",
            "b 0x408c14",
            "nop",
            "addiu v1, zero, 3",
            "bne a0, v1, 0x408c00",
            "addiu a1, zero, 1",
            "move a0, s4",
            "jal sym.NEAP_SendSetResponse",
            "move a2, v0",
            "b 0x408c14",
            "nop",
            "bne a0, s6, 0x408c14",
            "move a0, s4",
            "addiu a1, zero, 1",
            "jal sym.NEAP_SendGetResponse",
            "move a2, v0",
            "jal fcn.00407b78",
            "move a0, s0",
            "b 0x408ca4",
            "nop",
            "lhu v0, 0x46(sp)",
            "lbu a0, 0x22(s1)",
            "lw a1, 0x1078(sp)",
            "jal fcn.00407ce0",
            "sh v0, 4(s4)",
            "move a2, s3",
            "move a0, v0",
            "move a1, s5",
            "jal fcn.00408320",
            "move s0, v0",
            "bnez v0, 0x408c6c",
            "move a0, s4",
            "lbu a2, 4(s1)",
            "lw a1, 0x10cc(sp)",
            "lw t9, 0x10c8(sp)",
            "nop",
            "jalr t9",
            "move a3, s0",
            "jal fcn.00407b78",
            "move a0, s0",
            "lw gp, 0x18(sp)",
            "addiu t9, zero, 7",
            "lw v1, -obj.reboot(gp)",
            "nop",
            "lw v0, (v1)",
            "nop",
            "bne v0, t9, 0x4089dc",
            "lui a0, 0x41",
            "lw t9, -sym.lxmldbc_system(gp)",
            "nop",
            "jalr t9",
            "addiu a0, a0, 0x75c",
            "lw gp, 0x18(sp)",
            "b 0x4089dc",
            "nop"
        ]
    },
    "fcn.00407ce0": {
        "function_address": "0x00407ce0",
        "instructions": [
            "lui gp, 0x43",
            "addiu sp, sp, -0x28",
            "addiu gp, gp, -0x6540",
            "sw ra, 0x24(sp)",
            "sw s2, 0x20(sp)",
            "sw s1, 0x1c(sp)",
            "sw s0, 0x18(sp)",
            "sw gp, 0x10(sp)",
            "lw t9, -sym.imp.malloc(gp)",
            "move s2, a0",
            "addiu a0, zero, 0x28",
            "jalr t9",
            "move s1, a1",
            "lw gp, 0x10(sp)",
            "beqz v0, 0x407d64",
            "move s0, v0",
            "lw t9, -sym.imp.memset(gp)",
            "move a0, v0",
            "move a1, zero",
            "jalr t9",
            "addiu a2, zero, 0x28",
            "lw gp, 0x10(sp)",
            "beqz s1, 0x407d58",
            "sb s2, 0x22(s0)",
            "lw t9, -sym.imp.memcpy(gp)",
            "move a1, s1",
            "addiu a0, s0, 0x1c",
            "jalr t9",
            "addiu a2, zero, 6",
            "lw gp, 0x10(sp)",
            "lui v0, 0x92b",
            "ori v0, v0, 0x1338",
            "sw v0, (s0)",
            "lw ra, 0x24(sp)",
            "move v0, s0",
            "lw s2, 0x20(sp)",
            "lw s1, 0x1c(sp)",
            "lw s0, 0x18(sp)",
            "jr ra",
            "addiu sp, sp, 0x28"
        ]
    },
    "sym.NEAP_SendDiscoverResponse": {
        "function_address": "0x004082e8",
        "instructions": [
            "addiu sp, sp, -0x20",
            "sw ra, 0x1c(sp)",
            "sw gp, 0x10(sp)",
            "addiu v0, zero, 2",
            "move a1, a2",
            "sb v0, 4(a2)",
            "jal fcn.00408004",
            "move a2, zero",
            "lw ra, 0x1c(sp)",
            "nor v0, zero, v0",
            "lw gp, 0x10(sp)",
            "srl v0, v0, 0x1f",
            "jr ra",
            "addiu sp, sp, 0x20"
        ]
    },
    "fcn.00407b78": {
        "function_address": "0x00407b78",
        "instructions": [
            "lui gp, 0x43",
            "addiu sp, sp, -0x20",
            "addiu gp, gp, -0x6540",
            "sw ra, 0x1c(sp)",
            "sw s0, 0x18(sp)",
            "sw gp, 0x10(sp)",
            "bnez a0, 0x407bb0",
            "move s0, a0",
            "b 0x407bd8",
            "nop",
            "lw v0, (v0)",
            "jal fcn.00407a40",
            "sw v0, 0x24(s0)",
            "lw gp, 0x10(sp)",
            "lw v0, 0x24(s0)",
            "nop",
            "bnez v0, 0x407ba0",
            "move a0, v0",
            "lw t9, -sym.imp.free(gp)",
            "move a0, s0",
            "lw ra, 0x1c(sp)",
            "lw s0, 0x18(sp)",
            "jr t9",
            "addiu sp, sp, 0x20",
            "lw ra, 0x1c(sp)",
            "lw s0, 0x18(sp)",
            "jr ra",
            "addiu sp, sp, 0x20"
        ]
    },
    "fcn.00408320": {
        "function_address": "0x00408320",
        "instructions": [
            "lui gp, 0x43",
            "addiu sp, sp, -0x30",
            "addiu gp, gp, -0x6540",
            "sw ra, 0x2c(sp)",
            "sw s4, 0x28(sp)",
            "sw s3, 0x24(sp)",
            "sw s2, 0x20(sp)",
            "sw s1, 0x1c(sp)",
            "sw s0, 0x18(sp)",
            "sw gp, 0x10(sp)",
            "lbu v1, 0x22(a1)",
            "addiu v0, zero, 2",
            "move a3, a2",
            "move s0, a1",
            "move s3, a0",
            "bne v1, v0, 0x408440",
            "addiu a2, zero, -1",
            "lw t9, -sym.imp.memcpy(gp)",
            "addiu a2, zero, 0x24",
            "addiu s2, a3, -0x24",
            "jalr t9",
            "addiu s1, s0, 0x24",
            "lw gp, 0x10(sp)",
            "b 0x408438",
            "addiu s4, zero, -3",
            "lbu a0, (s1)",
            "nop",
            "addu v0, s1, a0",
            "lhu s0, 1(v0)",
            "nop",
            "slt v0, s2, s0",
            "bnez v0, 0x4083b0",
            "addiu v0, a0, 2",
            "slt v0, v0, s0",
            "bnez v0, 0x4083d4",
            "addiu a3, a0, 3",
            "lw v0, -0x7f10(gp)",
            "lw t9, -sym.imp.fputs(gp)",
            "lui a0, 0x41",
            "lw a1, (v0)",
            "jalr t9",
            "addiu a0, a0, 0x6d8",
            "lw gp, 0x10(sp)",
            "b 0x408440",
            "addiu a2, zero, -1",
            "subu a2, s4, a0",
            "addu a2, s0, a2",
            "andi a2, a2, 0xffff",
            "addu a3, s1, a3",
            "jal fcn.00407e18",
            "addiu a1, s1, 1",
            "lw gp, 0x10(sp)",
            "beqz s3, 0x408430",
            "nop",
            "beqz v0, 0x408430",
            "nop",
            "lw v1, 0x24(s3)",
            "nop",
            "beqz v1, 0x40842c",
            "nop",
            "move a0, v1",
            "lw v1, (v1)",
            "nop",
            "bnez v1, 0x408410",
            "nop",
            "b 0x408430",
            "sw v0, (a0)",
            "sw v0, 0x24(s3)",
            "subu s2, s2, s0",
            "addu s1, s1, s0",
            "bgtz s2, 0x408384",
            "move a2, zero",
            "lw ra, 0x2c(sp)",
            "move v0, a2",
            "lw s4, 0x28(sp)",
            "lw s3, 0x24(sp)",
            "lw s2, 0x20(sp)",
            "lw s1, 0x1c(sp)",
            "lw s0, 0x18(sp)",
            "jr ra",
            "addiu sp, sp, 0x30"
        ]
    },
    "fcn.00407a40": {
        "function_address": "0x00407a40",
        "instructions": [
            "lui gp, 0x43",
            "addiu sp, sp, -0x20",
            "addiu gp, gp, -0x6540",
            "sw ra, 0x1c(sp)",
            "sw s0, 0x18(sp)",
            "sw gp, 0x10(sp)",
            "beqz a0, 0x407aa0",
            "move s0, a0",
            "lw a0, 0x28(a0)",
            "nop",
            "beqz a0, 0x407a88",
            "nop",
            "lw t9, -sym.imp.free(gp)",
            "nop",
            "jalr t9",
            "nop",
            "lw gp, 0x10(sp)",
            "nop",
            "lw t9, -sym.imp.free(gp)",
            "move a0, s0",
            "lw ra, 0x1c(sp)",
            "lw s0, 0x18(sp)",
            "jr t9",
            "addiu sp, sp, 0x20",
            "lw ra, 0x1c(sp)",
            "lw s0, 0x18(sp)",
            "jr ra",
            "addiu sp, sp, 0x20"
        ]
    },
    "fcn.0040d4ac": {
        "function_address": "0x0040d4ac",
        "instructions": [
            "addiu sp, sp, -0x78",
            "sw fp, 0x74(sp)",
            "sw s7, 0x70(sp)",
            "sw s6, 0x6c(sp)",
            "sw s5, 0x68(sp)",
            "sw s4, 0x64(sp)",
            "sw s3, 0x60(sp)",
            "sw s2, 0x5c(sp)",
            "sw s1, 0x58(sp)",
            "sw s0, 0x54(sp)",
            "sw gp, (sp)",
            "lw t2, (a0)",
            "lw t0, 4(a0)",
            "lw a3, 8(a0)",
            "lw t1, 0xc(a0)",
            "addiu v0, sp, 8",
            "move fp, a0",
            "sw v0, 0x4c(sp)",
            "move a2, a1",
            "sw v0, 0x48(sp)",
            "addiu t3, sp, 0x48",
            "lbu v0, 1(a2)",
            "lbu v1, 2(a2)",
            "lbu a1, (a2)",
            "lbu a0, 3(a2)",
            "sll v1, v1, 0x10",
            "sll v0, v0, 8",
            "or v0, v0, v1",
            "lw v1, 0x48(sp)",
            "or v0, v0, a1",
            "sll a0, a0, 0x18",
            "or v0, v0, a0",
            "sw v0, (v1)",
            "addiu v1, v1, 4",
            "sw v1, 0x48(sp)",
            "bne v1, t3, 0x40d500",
            "addiu a2, a2, 4",
            "lw s5, 8(sp)",
            "lui v0, 0xd76a",
            "nor v1, zero, t0",
            "ori v0, v0, 0xa478",
            "and a0, a3, t0",
            "addu v0, s5, v0",
            "and v1, v1, t1",
            "or v1, v1, a0",
            "addu v0, v0, t2",
            "addu v0, v0, v1",
            "sll a1, v0, 7",
            "srl v0, v0, 0x19",
            "lw t9, 0xc(sp)",
            "or a1, a1, v0",
            "addu a1, a1, t0",
            "lui v0, 0xe8c7",
            "nor v1, zero, a1",
            "ori v0, v0, 0xb756",
            "and a0, a1, t0",
            "addu v0, t9, v0",
            "and v1, v1, a3",
            "or v1, v1, a0",
            "addu v0, v0, t1",
            "addu v0, v0, v1",
            "sll a2, v0, 0xc",
            "srl v0, v0, 0x14",
            "lw a0, 0x10(sp)",
            "or a2, a2, v0",
            "addu a2, a2, a1",
            "lui v0, 0x2420",
            "nor v1, zero, a2",
            "ori v0, v0, 0x70db",
            "addu v0, a0, v0",
            "and v1, v1, t0",
            "and a0, a2, a1",
            "or v1, v1, a0",
            "addu v0, v0, a3",
            "addu v0, v0, v1",
            "sll a3, v0, 0x11",
            "srl v0, v0, 0xf",
            "lw s7, 0x14(sp)",
            "or a3, a3, v0",
            "addu a3, a3, a2",
            "lui v0, 0xc1bd",
            "nor v1, zero, a3",
            "ori v0, v0, 0xceee",
            "and a0, a3, a2",
            "addu v0, s7, v0",
            "and v1, v1, a1",
            "or v1, v1, a0",
            "addu v0, v0, t0",
            "addu v0, v0, v1",
            "sll t0, v0, 0x16",
            "srl v0, v0, 0xa",
            "lw a0, 0x18(sp)",
            "or t0, t0, v0",
            "addu t0, t0, a3",
            "lui v0, 0xf57c",
            "nor v1, zero, t0",
            "ori v0, v0, 0xfaf",
            "addu v0, a0, v0",
            "and v1, v1, a2",
            "and a0, t0, a3",
            "or v1, v1, a0",
            "addu v0, v0, a1",
            "addu v0, v0, v1",
            "sll a1, v0, 7",
            "srl v0, v0, 0x19",
            "lw s3, 0x1c(sp)",
            "or a1, a1, v0",
            "addu a1, a1, t0",
            "lui v0, 0x4787",
            "nor v1, zero, a1",
            "ori v0, v0, 0xc62a",
            "and a0, a1, t0",
            "addu v0, s3, v0",
            "and v1, v1, a3",
            "or v1, v1, a0",
            "addu v0, v0, a2",
            "addu v0, v0, v1",
            "sll a2, v0, 0xc",
            "srl v0, v0, 0x14",
            "lw t8, 0x20(sp)",
            "or a2, a2, v0",
            "addu a2, a2, a1",
            "lui v0, 0xa830",
            "nor v1, zero, a2",
            "ori v0, v0, 0x4613",
            "and a0, a2, a1",
            "addu v0, t8, v0",
            "and v1, v1, t0",
            "or v1, v1, a0",
            "addu v0, v0, a3",
            "addu v0, v0, v1",
            "sll a3, v0, 0x11",
            "srl v0, v0, 0xf",
            "lw s0, 0x24(sp)",
            "or a3, a3, v0",
            "addu a3, a3, a2",
            "lui v0, 0xfd46",
            "nor v1, zero, a3",
            "ori v0, v0, 0x9501",
            "and a0, a3, a2",
            "addu v0, s0, v0",
            "and v1, v1, a1",
            "or v1, v1, a0",
            "addu v0, v0, t0",
            "addu v0, v0, v1",
            "sll t0, v0, 0x16",
            "srl v0, v0, 0xa",
            "lw s4, 0x28(sp)",
            "or t0, t0, v0",
            "addu t0, t0, a3",
            "lui v0, 0x6980",
            "nor v1, zero, t0",
            "ori v0, v0, 0x98d8",
            "and a0, t0, a3",
            "addu v0, s4, v0",
            "and v1, v1, a2",
            "or v1, v1, a0",
            "addu v0, v0, a1",
            "addu v0, v0, v1",
            "sll a1, v0, 7",
            "srl v0, v0, 0x19",
            "lw t4, 0x2c(sp)",
            "or a1, a1, v0",
            "addu a1, a1, t0",
            "lui v0, 0x8b44",
            "nor v1, zero, a1",
            "ori v0, v0, 0xf7af",
            "and a0, a1, t0",
            "addu v0, t4, v0",
            "and v1, v1, a3",
            "or v1, v1, a0",
            "addu v0, v0, a2",
            "addu v0, v0, v1",
            "sll a2, v0, 0xc",
            "srl v0, v0, 0x14",
            "lw s1, 0x30(sp)",
            "or a2, a2, v0",
            "addu a2, a2, a1",
            "lui v0, 0xffff",
            "nor v1, zero, a2",
            "ori v0, v0, 0x5bb1",
            "and a0, a2, a1",
            "addu v0, s1, v0",
            "and v1, v1, t0",
            "or v1, v1, a0",
            "addu v0, v0, a3",
            "addu v0, v0, v1",
            "sll t1, v0, 0x11",
            "srl v0, v0, 0xf",
            "lw s6, 0x34(sp)",
            "or t1, t1, v0",
            "addu t1, t1, a2",
            "lui v0, 0x895c",
            "nor v1, zero, t1",
            "ori v0, v0, 0xd7be",
            "and a0, t1, a2",
            "addu v0, s6, v0",
            "and v1, v1, a1",
            "or v1, v1, a0",
            "addu v0, v0, t0",
            "addu v0, v0, v1",
            "sll t2, v0, 0x16",
            "srl v0, v0, 0xa",
            "lw t6, 0x38(sp)",
            "or t2, t2, v0",
            "addu t2, t2, t1",
            "lui v0, 0x6b90",
            "nor v1, zero, t2",
            "ori v0, v0, 0x1122",
            "and a0, t2, t1",
            "addu v0, t6, v0",
            "and v1, v1, a2",
            "or v1, v1, a0",
            "addu v0, v0, a1",
            "addu v0, v0, v1",
            "sll a3, v0, 7",
            "srl v0, v0, 0x19",
            "lw s2, 0x3c(sp)",
            "or a3, a3, v0",
            "addu a3, a3, t2",
            "lui v0, 0xfd98",
            "nor v1, zero, a3",
            "ori v0, v0, 0x7193",
            "and a0, a3, t2",
            "addu v0, s2, v0",
            "and v1, v1, t1",
            "or v1, v1, a0",
            "addu v0, v0, a2",
            "addu v0, v0, v1",
            "sll t0, v0, 0xc",
            "srl v0, v0, 0x14",
            "lw t5, 0x40(sp)",
            "or t0, t0, v0",
            "addu t0, t0, a3",
            "lui v0, 0xa679",
            "nor t3, zero, t0",
            "ori v0, v0, 0x438e",
            "and a0, t0, a3",
            "addu v0, t5, v0",
            "and v1, t3, t2",
            "or v1, v1, a0",
            "addu v0, v0, t1",
            "addu v0, v0, v1",
            "sll a2, v0, 0x11",
            "srl v0, v0, 0xf",
            "lw t7, 0x44(sp)",
            "or a2, a2, v0",
            "addu a2, a2, t0",
            "lui v0, 0x49b4",
            "nor t1, zero, a2",
            "ori v0, v0, 0x821",
            "and a0, a2, t0",
            "and v1, t1, a3",
            "addu v0, t7, v0",
            "or v1, v1, a0",
            "addu v0, v0, t2",
            "addu v0, v0, v1",
            "sll a1, v0, 0x16",
            "srl v0, v0, 0xa",
            "or a1, a1, v0",
            "lui v0, 0xf61e",
            "addu a1, a1, a2",
            "ori v0, v0, 0x2562",
            "and v1, a1, t0",
            "addu v0, t9, v0",
            "and t3, a2, t3",
            "addu v0, v0, a3",
            "or v1, v1, t3",
            "addu v0, v0, v1",
            "sll a3, v0, 5",
            "srl v0, v0, 0x1b",
            "or a3, a3, v0",
            "lui v0, 0xc040",
            "addu a3, a3, a1",
            "ori v0, v0, 0xb340",
            "and t1, a1, t1",
            "and v1, a3, a2",
            "addu v0, t8, v0",
            "or v1, v1, t1",
            "addu v0, v0, t0",
            "addu v0, v0, v1",
            "sll t0, v0, 9",
            "srl v0, v0, 0x17",
            "or t0, t0, v0",
            "lui v0, 0x265e",
            "addu t0, t0, a3",
            "nor a0, zero, a1",
            "ori v0, v0, 0x5a51",
            "and a0, a3, a0",
            "and v1, t0, a1",
            "addu v0, s6, v0",
            "or v1, v1, a0",
            "addu v0, v0, a2",
            "addu v0, v0, v1",
            "sll a2, v0, 0xe",
            "srl v0, v0, 0x12",
            "or a2, a2, v0",
            "lui v0, 0xe9b6",
            "addu a2, a2, t0",
            "nor a0, zero, a3",
            "ori v0, v0, 0xc7aa",
            "and a0, t0, a0",
            "and v1, a2, a3",
            "addu v0, s5, v0",
            "or v1, v1, a0",
            "addu v0, v0, a1",
            "addu v0, v0, v1",
            "sll a1, v0, 0x14",
            "srl v0, v0, 0xc",
            "or a1, a1, v0",
            "lui v0, 0xd62f",
            "addu a1, a1, a2",
            "nor a0, zero, t0",
            "ori v0, v0, 0x105d",
            "and a0, a2, a0",
            "and v1, a1, t0",
            "addu v0, s3, v0",
            "or v1, v1, a0",
            "addu v0, v0, a3",
            "addu v0, v0, v1",
            "sll a3, v0, 5",
            "srl v0, v0, 0x1b",
            "or a3, a3, v0",
            "lui v0, 0x244",
            "addu a3, a3, a1",
            "nor a0, zero, a2",
            "ori v0, v0, 0x1453",
            "and a0, a1, a0",
            "and v1, a3, a2",
            "addu v0, s1, v0",
            "or v1, v1, a0",
            "addu v0, v0, t0",
            "addu v0, v0, v1",
            "sll t0, v0, 9",
            "srl v0, v0, 0x17",
            "or t0, t0, v0",
            "lui v0, 0xd8a1",
            "addu t0, t0, a3",
            "nor a0, zero, a1",
            "ori v0, v0, 0xe681",
            "and a0, a3, a0",
            "and v1, t0, a1",
            "addu v0, t7, v0",
            "or v1, v1, a0",
            "addu v0, v0, a2",
            "addu v0, v0, v1",
            "sll a2, v0, 0xe",
            "lw v1, 0x18(sp)",
            "srl v0, v0, 0x12",
            "or a2, a2, v0",
            "lui v0, 0xe7d3",
            "addu a2, a2, t0",
            "nor a0, zero, a3",
            "ori v0, v0, 0xfbc8",
            "and a0, t0, a0",
            "addu v0, v1, v0",
            "and v1, a2, a3",
            "or v1, v1, a0",
            "addu v0, v0, a1",
            "addu v0, v0, v1",
            "sll a1, v0, 0x14",
            "srl v0, v0, 0xc",
            "or a1, a1, v0",
            "lui v0, 0x21e1",
            "addu a1, a1, a2",
            "nor a0, zero, t0",
            "ori v0, v0, 0xcde6",
            "and a0, a2, a0",
            "and v1, a1, t0",
            "addu v0, t4, v0",
            "or v1, v1, a0",
            "addu v0, v0, a3",
            "addu v0, v0, v1",
            "sll a3, v0, 5",
            "srl v0, v0, 0x1b",
            "or a3, a3, v0",
            "lui v0, 0xc337",
            "addu a3, a3, a1",
            "nor a0, zero, a2",
            "ori v0, v0, 0x7d6",
            "and a0, a1, a0",
            "and v1, a3, a2",
            "addu v0, t5, v0",
            "or v1, v1, a0",
            "addu v0, v0, t0",
            "addu v0, v0, v1",
            "sll t0, v0, 9",
            "srl v0, v0, 0x17",
            "or t0, t0, v0",
            "lui v0, 0xf4d5",
            "addu t0, t0, a3",
            "nor a0, zero, a1",
            "ori v0, v0, 0xd87",
            "and a0, a3, a0",
            "and v1, t0, a1",
            "addu v0, s7, v0",
            "or v1, v1, a0",
            "addu v0, v0, a2",
            "addu v0, v0, v1",
            "sll a2, v0, 0xe",
            "srl v0, v0, 0x12",
            "or a2, a2, v0",
            "lui v0, 0x455a",
            "addu a2, a2, t0",
            "nor a0, zero, a3",
            "ori v0, v0, 0x14ed",
            "and a0, t0, a0",
            "and v1, a2, a3",
            "addu v0, s4, v0",
            "or v1, v1, a0",
            "addu v0, v0, a1",
            "addu v0, v0, v1",
            "sll t1, v0, 0x14",
            "srl v0, v0, 0xc",
            "or t1, t1, v0",
            "lui v0, 0xa9e3",
            "addu t1, t1, a2",
            "nor a0, zero, t0",
            "ori v0, v0, 0xe905",
            "and a0, a2, a0",
            "and v1, t1, t0",
            "addu v0, s2, v0",
            "or v1, v1, a0",
            "addu v0, v0, a3",
            "addu v0, v0, v1",
            "sll a1, v0, 5",
            "lw v1, 0x10(sp)",
            "srl v0, v0, 0x1b",
            "or a1, a1, v0",
            "lui v0, 0xfcef",
            "addu a1, a1, t1",
            "nor a0, zero, a2",
            "ori v0, v0, 0xa3f8",
            "and a0, t1, a0",
            "addu v0, v1, v0",
            "and v1, a1, a2",
            "or v1, v1, a0",
            "addu v0, v0, t0",
            "addu v0, v0, v1",
            "sll t0, v0, 9",
            "srl v0, v0, 0x17",
            "or t0, t0, v0",
            "lui v0, 0x676f",
            "addu t0, t0, a1",
            "nor a0, zero, t1",
            "ori v0, v0, 0x2d9",
            "and a0, a1, a0",
            "and v1, t0, t1",
            "addu v0, s0, v0",
            "or v1, v1, a0",
            "addu v0, v0, a2",
            "addu v0, v0, v1",
            "sll a3, v0, 0xe",
            "srl v0, v0, 0x12",
            "or a3, a3, v0",
            "lui v0, 0x8d2a",
            "addu a3, a3, t0",
            "nor a0, zero, a1",
            "ori v0, v0, 0x4c8a",
            "and a0, t0, a0",
            "and v1, a3, a1",
            "addu v0, t6, v0",
            "or v1, v1, a0",
            "addu v0, v0, t1",
            "addu v0, v0, v1",
            "sll a0, v0, 0x14",
            "srl v0, v0, 0xc",
            "or a0, a0, v0",
            "lui v0, 0xfffa",
            "ori v0, v0, 0x3942",
            "addu a0, a0, a3",
            "xor v1, a3, t0",
            "addu v0, s3, v0",
            "xor v1, v1, a0",
            "addu v0, v0, a1",
            "addu v0, v0, v1",
            "sll a1, v0, 4",
            "srl v0, v0, 0x1c",
            "or a1, a1, v0",
            "lui v0, 0x8771",
            "ori v0, v0, 0xf681",
            "addu a1, a1, a0",
            "xor v1, a0, a3",
            "addu v0, s4, v0",
            "xor v1, v1, a1",
            "addu v0, v0, t0",
            "addu v0, v0, v1",
            "sll a2, v0, 0xb",
            "srl v0, v0, 0x15",
            "or a2, a2, v0",
            "lui v0, 0x6d9d",
            "ori v0, v0, 0x6122",
            "addu a2, a2, a1",
            "xor v1, a1, a0",
            "addu v0, s6, v0",
            "xor v1, v1, a2",
            "addu v0, v0, a3",
            "addu v0, v0, v1",
            "sll a3, v0, 0x10",
            "srl v0, v0, 0x10",
            "or a3, a3, v0",
            "lui v0, 0xfde5",
            "ori v0, v0, 0x380c",
            "addu a3, a3, a2",
            "xor v1, a2, a1",
            "addu v0, t5, v0",
            "xor v1, v1, a3",
            "addu v0, v0, a0",
            "addu v0, v0, v1",
            "sll a0, v0, 0x17",
            "srl v0, v0, 9",
            "or a0, a0, v0",
            "lui v0, 0xa4be",
            "ori v0, v0, 0xea44",
            "addu a0, a0, a3",
            "xor v1, a3, a2",
            "addu v0, t9, v0",
            "xor v1, v1, a0",
            "addu v0, v0, a1",
            "addu v0, v0, v1",
            "sll a1, v0, 4",
            "lw v1, 0x18(sp)",
            "srl v0, v0, 0x1c",
            "or a1, a1, v0",
            "lui v0, 0x4bde",
            "ori v0, v0, 0xcfa9",
            "addu a1, a1, a0",
            "addu v0, v1, v0",
            "xor v1, a0, a3",
            "xor v1, v1, a1",
            "addu v0, v0, a2",
            "addu v0, v0, v1",
            "sll a2, v0, 0xb",
            "srl v0, v0, 0x15",
            "or a2, a2, v0",
            "lui v0, 0xf6bb",
            "ori v0, v0, 0x4b60",
            "addu a2, a2, a1",
            "xor v1, a1, a0",
            "addu v0, s0, v0",
            "xor v1, v1, a2",
            "addu v0, v0, a3",
            "addu v0, v0, v1",
            "sll a3, v0, 0x10",
            "srl v0, v0, 0x10",
            "or a3, a3, v0",
            "lui v0, 0xbebf",
            "ori v0, v0, 0xbc70",
            "addu a3, a3, a2",
            "xor v1, a2, a1",
            "addu v0, s1, v0",
            "xor v1, v1, a3",
            "addu v0, v0, a0",
            "addu v0, v0, v1",
            "sll a0, v0, 0x17",
            "srl v0, v0, 9",
            "or a0, a0, v0",
            "lui v0, 0x289b",
            "ori v0, v0, 0x7ec6",
            "addu a0, a0, a3",
            "xor v1, a3, a2",
            "addu v0, s2, v0",
            "xor v1, v1, a0",
            "addu v0, v0, a1",
            "addu v0, v0, v1",
            "sll a1, v0, 4",
            "srl v0, v0, 0x1c",
            "or a1, a1, v0",
            "lui v0, 0xeaa1",
            "ori v0, v0, 0x27fa",
            "addu a1, a1, a0",
            "xor v1, a0, a3",
            "addu v0, s5, v0",
            "xor v1, v1, a1",
            "addu v0, v0, a2",
            "addu v0, v0, v1",
            "sll a2, v0, 0xb",
            "srl v0, v0, 0x15",
            "or a2, a2, v0",
            "lui v0, 0xd4ef",
            "ori v0, v0, 0x3085",
            "addu a2, a2, a1",
            "xor v1, a1, a0",
            "addu v0, s7, v0",
            "xor v1, v1, a2",
            "addu v0, v0, a3",
            "addu v0, v0, v1",
            "sll a3, v0, 0x10",
            "srl v0, v0, 0x10",
            "or a3, a3, v0",
            "lui v0, 0x488",
            "ori v0, v0, 0x1d05",
            "addu a3, a3, a2",
            "xor v1, a2, a1",
            "addu v0, t8, v0",
            "xor v1, v1, a3",
            "addu v0, v0, a0",
            "addu v0, v0, v1",
            "sll a0, v0, 0x17",
            "srl v0, v0, 9",
            "or a0, a0, v0",
            "lui v0, 0xd9d4",
            "ori v0, v0, 0xd039",
            "addu a0, a0, a3",
            "xor v1, a3, a2",
            "addu v0, t4, v0",
            "xor v1, v1, a0",
            "addu v0, v0, a1",
            "addu v0, v0, v1",
            "sll a1, v0, 4",
            "srl v0, v0, 0x1c",
            "or a1, a1, v0",
            "lui v0, 0xe6db",
            "ori v0, v0, 0x99e5",
            "addu a1, a1, a0",
            "xor v1, a0, a3",
            "addu v0, t6, v0",
            "xor v1, v1, a1",
            "addu v0, v0, a2",
            "addu v0, v0, v1",
            "sll a2, v0, 0xb",
            "srl v0, v0, 0x15",
            "or a2, a2, v0",
            "lui v0, 0x1fa2",
            "ori v0, v0, 0x7cf8",
            "addu a2, a2, a1",
            "xor v1, a1, a0",
            "addu v0, t7, v0",
            "xor v1, v1, a2",
            "addu v0, v0, a3",
            "addu v0, v0, v1",
            "sll a3, v0, 0x10",
            "lw v1, 0x10(sp)",
            "srl v0, v0, 0x10",
            "or a3, a3, v0",
            "lui v0, 0xc4ac",
            "ori v0, v0, 0x5665",
            "addu a3, a3, a2",
            "addu v0, v1, v0",
            "xor v1, a2, a1",
            "xor v1, v1, a3",
            "addu v0, v0, a0",
            "addu v0, v0, v1",
            "sll a0, v0, 0x17",
            "srl v0, v0, 9",
            "or a0, a0, v0",
            "lui v0, 0xf429",
            "addu a0, a0, a3",
            "nor v1, zero, a2",
            "ori v0, v0, 0x2244",
            "addu s5, s5, v0",
            "or v1, a0, v1",
            "xor v1, v1, a3",
            "addu s5, s5, a1",
            "addu s5, s5, v1",
            "sll a1, s5, 6",
            "srl s5, s5, 0x1a",
            "or a1, a1, s5",
            "lui v0, 0x432a",
            "addu a1, a1, a0",
            "nor v1, zero, a3",
            "ori v0, v0, 0xff97",
            "addu s0, s0, v0",
            "or v1, a1, v1",
            "xor v1, v1, a0",
            "addu s0, s0, a2",
            "addu s0, s0, v1",
            "sll a2, s0, 0xa",
            "srl s0, s0, 0x16",
            "or a2, a2, s0",
            "lui v0, 0xab94",
            "addu a2, a2, a1",
            "nor v1, zero, a0",
            "ori v0, v0, 0x23a7",
            "addu t5, t5, v0",
            "or v1, a2, v1",
            "xor v1, v1, a1",
            "addu t5, t5, a3",
            "addu t5, t5, v1",
            "sll a3, t5, 0xf",
            "srl t5, t5, 0x11",
            "or a3, a3, t5",
            "lui v0, 0xfc93",
            "addu a3, a3, a2",
            "nor v1, zero, a1",
            "ori v0, v0, 0xa039",
            "addu s3, s3, v0",
            "or v1, a3, v1",
            "xor v1, v1, a2",
            "addu s3, s3, a0",
            "addu s3, s3, v1",
            "sll a0, s3, 0x15",
            "srl s3, s3, 0xb",
            "or a0, a0, s3",
            "lui v0, 0x655b",
            "addu a0, a0, a3",
            "nor v1, zero, a2",
            "ori v0, v0, 0x59c3",
            "addu t6, t6, v0",
            "or v1, a0, v1",
            "xor v1, v1, a3",
            "addu t6, t6, a1",
            "addu t6, t6, v1",
            "sll a1, t6, 6",
            "srl t6, t6, 0x1a",
            "or a1, a1, t6",
            "lui v0, 0x8f0c",
            "addu a1, a1, a0",
            "nor v1, zero, a3",
            "ori v0, v0, 0xcc92",
            "addu s7, s7, v0",
            "or v1, a1, v1",
            "xor v1, v1, a0",
            "addu s7, s7, a2",
            "addu s7, s7, v1",
            "sll a2, s7, 0xa",
            "srl s7, s7, 0x16",
            "or a2, a2, s7",
            "lui v0, 0xffef",
            "addu a2, a2, a1",
            "nor v1, zero, a0",
            "ori v0, v0, 0xf47d",
            "addu s1, s1, v0",
            "or v1, a2, v1",
            "xor v1, v1, a1",
            "addu s1, s1, a3",
            "addu s1, s1, v1",
            "sll a3, s1, 0xf",
            "srl s1, s1, 0x11",
            "or a3, a3, s1",
            "lui v0, 0x8584",
            "addu a3, a3, a2",
            "nor v1, zero, a1",
            "ori v0, v0, 0x5dd1",
            "addu t9, t9, v0",
            "or v1, a3, v1",
            "xor v1, v1, a2",
            "addu t9, t9, a0",
            "addu t9, t9, v1",
            "sll a0, t9, 0x15",
            "srl t9, t9, 0xb",
            "or a0, a0, t9",
            "lui v0, 0x6fa8",
            "addu a0, a0, a3",
            "nor v1, zero, a2",
            "ori v0, v0, 0x7e4f",
            "addu s4, s4, v0",
            "or v1, a0, v1",
            "xor v1, v1, a3",
            "addu s4, s4, a1",
            "addu s4, s4, v1",
            "sll a1, s4, 6",
            "srl s4, s4, 0x1a",
            "or a1, a1, s4",
            "lui v0, 0xfe2c",
            "addu a1, a1, a0",
            "nor v1, zero, a3",
            "ori v0, v0, 0xe6e0",
            "addu t7, t7, v0",
            "or v1, a1, v1",
            "xor v1, v1, a0",
            "addu t7, t7, a2",
            "addu t7, t7, v1",
            "sll a2, t7, 0xa",
            "srl t7, t7, 0x16",
            "or a2, a2, t7",
            "lui v0, 0xa301",
            "addu a2, a2, a1",
            "nor v1, zero, a0",
            "ori v0, v0, 0x4314",
            "addu t8, t8, v0",
            "or v1, a2, v1",
            "xor v1, v1, a1",
            "addu t8, t8, a3",
            "addu t8, t8, v1",
            "sll t0, t8, 0xf",
            "srl t8, t8, 0x11",
            "or t0, t0, t8",
            "lui v0, 0x4e08",
            "addu t0, t0, a2",
            "nor v1, zero, a1",
            "ori v0, v0, 0x11a1",
            "addu s2, s2, v0",
            "or v1, t0, v1",
            "xor v1, v1, a2",
            "addu s2, s2, a0",
            "addu s2, s2, v1",
            "lw a0, 0x18(sp)",
            "sll t1, s2, 0x15",
            "srl s2, s2, 0xb",
            "or t1, t1, s2",
            "lui v0, 0xf753",
            "addu t1, t1, t0",
            "nor v1, zero, a2",
            "ori v0, v0, 0x7e82",
            "addu v0, a0, v0",
            "or v1, t1, v1",
            "xor v1, v1, t0",
            "addu v0, v0, a1",
            "addu v0, v0, v1",
            "sll a3, v0, 6",
            "srl v0, v0, 0x1a",
            "or a3, a3, v0",
            "lui v0, 0xbd3a",
            "addu a3, a3, t1",
            "nor v1, zero, t0",
            "ori v0, v0, 0xf235",
            "addu s6, s6, v0",
            "or v1, a3, v1",
            "xor v1, v1, t1",
            "addu s6, s6, a2",
            "addu s6, s6, v1",
            "lw a0, 0x10(sp)",
            "sll a2, s6, 0xa",
            "srl s6, s6, 0x16",
            "or a2, a2, s6",
            "lui v0, 0x2ad7",
            "addu a2, a2, a3",
            "nor v1, zero, t1",
            "ori v0, v0, 0xd2bb",
            "addu v0, a0, v0",
            "or v1, a2, v1",
            "addu v0, v0, t0",
            "xor v1, v1, a3",
            "addu v0, v0, v1",
            "sll a0, v0, 0xf",
            "srl v0, v0, 0x11",
            "or a0, a0, v0",
            "lui v0, 0xeb86",
            "addu a0, a0, a2",
            "ori v0, v0, 0xd391",
            "nor v1, zero, a3",
            "addu t4, t4, v0",
            "or v1, a0, v1",
            "addu t4, t4, t1",
            "xor v1, v1, a2",
            "lw a1, 4(fp)",
            "addu t4, t4, v1",
            "lw t0, (fp)",
            "lw t1, 8(fp)",
            "lw v1, 0xc(fp)",
            "sll v0, t4, 0x15",
            "srl t4, t4, 0xb",
            "or t4, t4, v0",
            "addu a1, a0, a1",
            "addu t0, t0, a3",
            "addu a1, a1, t4",
            "addu t1, t1, a0",
            "addu v1, v1, a2",
            "sw v1, 0xc(fp)",
            "sw t0, (fp)",
            "sw a1, 4(fp)",
            "sw t1, 8(fp)",
            "lw v0, 0x4c(sp)",
            "nop",
            "sb zero, (v0)",
            "lw v1, 0x48(sp)",
            "addiu v0, v0, 1",
            "bne v0, v1, 0x40e200",
            "sw v0, 0x4c(sp)",
            "lw fp, 0x74(sp)",
            "lw s7, 0x70(sp)",
            "lw s6, 0x6c(sp)",
            "lw s5, 0x68(sp)",
            "lw s4, 0x64(sp)",
            "lw s3, 0x60(sp)",
            "lw s2, 0x5c(sp)",
            "lw s1, 0x58(sp)",
            "lw s0, 0x54(sp)",
            "jr ra",
            "addiu sp, sp, 0x78"
        ]
    },
    "sym.NEAP_DuplicateResponse": {
        "function_address": "0x00407d80",
        "instructions": [
            "addiu sp, sp, -0x20",
            "sw ra, 0x1c(sp)",
            "sw s0, 0x18(sp)",
            "sw gp, 0x10(sp)",
            "lui v0, 0x42",
            "lw v0, 0x1d20(v0)",
            "move v1, a0",
            "beqz v0, 0x407ddc",
            "move s0, a1",
            "beqz a0, 0x407de0",
            "move a0, zero",
            "beqz a1, 0x407ddc",
            "nop",
            "lbu a0, 0x22(a1)",
            "jal fcn.00407ce0",
            "addiu a1, v1, 0x10",
            "lw gp, 0x10(sp)",
            "beqz v0, 0x407ddc",
            "move v1, v0",
            "lbu v0, 5(s0)",
            "move a0, v1",
            "b 0x407de0",
            "sb v0, 5(v1)",
            "move a0, zero",
            "lw ra, 0x1c(sp)",
            "move v0, a0",
            "lw s0, 0x18(sp)",
            "jr ra",
            "addiu sp, sp, 0x20"
        ]
    },
    "sym._fini": {
        "function_address": "0x0040f970",
        "instructions": [
            "lui gp, 2",
            "addiu gp, gp, -0x5eb0",
            "addu gp, gp, t9",
            "addiu sp, sp, -0x20",
            "sw gp, 0x10(sp)",
            "sw ra, 0x1c(sp)",
            "sw gp, 0x18(sp)",
            "bal 0x40f994",
            "nop",
            "lui gp, 0x43",
            "addiu gp, gp, -0x6540",
            "lw t9, -segment.LOAD0(gp)",
            "nop",
            "addiu t9, t9, 0x14a0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(sp)",
            "nop",
            "lw ra, 0x1c(sp)",
            "jr ra",
            "addiu sp, sp, 0x20"
        ]
    },
    "unk.0x40f994": {
        "function_address": "0x0040f994",
        "instructions": [
            "lui gp, 2",
            "addiu gp, gp, -0x5eb0",
            "addu gp, gp, t9",
            "addiu sp, sp, -0x20",
            "sw gp, 0x10(sp)",
            "sw ra, 0x1c(sp)",
            "sw gp, 0x18(sp)",
            "bal 0x40f994",
            "nop",
            "lui gp, 0x43",
            "addiu gp, gp, -0x6540",
            "lw t9, -segment.LOAD0(gp)",
            "nop",
            "addiu t9, t9, 0x14a0",
            "jalr t9",
            "nop",
            "lw gp, 0x10(sp)",
            "nop",
            "lw ra, 0x1c(sp)",
            "jr ra",
            "addiu sp, sp, 0x20"
        ]
    },
    "fcn.004015f0": {
        "function_address": "0x004015f0",
        "instructions": [
            "addiu sp, sp, -0x28",
            "sw ra, 0x24(sp)",
            "sw s1, 0x20(sp)",
            "sw s0, 0x1c(sp)",
            "sw gp, 0x10(sp)",
            "move s1, a1",
            "lw a1, (a1)",
            "nop",
            "slt v0, a1, a2",
            "beqz v0, 0x40168c",
            "move s0, a0",
            "b 0x40167c",
            "addu a0, a3, a1",
            "lbu v0, (a0)",
            "nop",
            "bne v1, v0, 0x40167c",
            "addiu s0, s0, 0x10",
            "addiu s0, s0, -0x10",
            "lw a0, 4(s0)",
            "nop",
            "beqz a0, 0x401690",
            "addiu v0, a1, 1",
            "sw v0, (s1)",
            "jal fcn.004015f0",
            "move a1, s1",
            "lw gp, 0x10(sp)",
            "beqz v0, 0x401668",
            "nop",
            "b 0x401690",
            "move s0, v0",
            "lw v0, (s1)",
            "nop",
            "addiu v0, v0, -1",
            "b 0x401690",
            "sw v0, (s1)",
            "lw v1, (s0)",
            "nop",
            "bgez v1, 0x401624",
            "nop",
            "move s0, zero",
            "lw ra, 0x24(sp)",
            "move v0, s0",
            "lw s1, 0x20(sp)",
            "lw s0, 0x1c(sp)",
            "jr ra",
            "addiu sp, sp, 0x28"
        ]
    },
    "fcn.00408464": {
        "function_address": "0x00408464",
        "instructions": [
            "lui gp, 0x43",
            "addiu sp, sp, -0x1078",
            "addiu gp, gp, -0x6540",
            "sw ra, 0x1074(sp)",
            "sw fp, 0x1070(sp)",
            "sw s7, 0x106c(sp)",
            "sw s6, 0x1068(sp)",
            "sw s5, 0x1064(sp)",
            "sw s4, 0x1060(sp)",
            "sw s3, 0x105c(sp)",
            "sw s2, 0x1058(sp)",
            "sw s1, 0x1054(sp)",
            "sw s0, 0x1050(sp)",
            "sw gp, 0x18(sp)",
            "move s3, a0",
            "move s6, a2",
            "sw a3, 0x1084(sp)",
            "addiu v0, sp, 0x28",
            "addiu v1, sp, 0xa8",
            "sw zero, (v0)",
            "addiu v0, v0, 4",
            "bne v0, v1, 0x4084b0",
            "addiu a2, sp, 0x20",
            "lw a1, (s3)",
            "addiu v0, zero, 1",
            "srl v1, a1, 5",
            "sll v1, v1, 2",
            "addu v1, a2, v1",
            "lw a0, 8(v1)",
            "sllv v0, v0, a1",
            "lw s5, -0x7f10(gp)",
            "or a0, a0, v0",
            "lw v0, 0x1088(sp)",
            "sw a0, 8(v1)",
            "sw zero, 0x24(sp)",
            "sw v0, 0x20(sp)",
            "addiu v0, sp, 0x28",
            "sw a2, 0x104c(sp)",
            "sw v0, 0x1048(sp)",
            "addiu s2, sp, 0xa8",
            "addiu s4, zero, 2",
            "addiu fp, zero, 4",
            "addiu s7, zero, 6",
            "lw a0, (s3)",
            "lw v0, 0x104c(sp)",
            "lw t9, -sym.imp.select(gp)",
            "lw a1, 0x1048(sp)",
            "sw v0, 0x10(sp)",
            "addiu a0, a0, 1",
            "move a2, zero",
            "jalr t9",
            "move a3, zero",
            "lw gp, 0x18(sp)",
            "beqz v0, 0x408638",
            "nop",
            "bgez v0, 0x40855c",
            "addiu a2, zero, 0xfa0",
            "lui a0, 0x41",
            "lw t9, -sym.imp.fputs(gp)",
            "lw a1, (s5)",
            "b 0x40858c",
            "addiu a0, a0, 0x704",
            "lw t9, -sym.imp.recv(gp)",
            "lw a0, (s3)",
            "move a1, s2",
            "jalr t9",
            "move a3, zero",
            "lw gp, 0x18(sp)",
            "bgez v0, 0x4085a0",
            "move v1, v0",
            "lw t9, -sym.imp.fputs(gp)",
            "lw a1, (s5)",
            "lui a0, 0x41",
            "addiu a0, a0, 0x718",
            "jalr t9",
            "nop",
            "lw gp, 0x18(sp)",
            "b 0x408510",
            "nop",
            "lw v0, (s2)",
            "lui a0, 0x92b",
            "ori a0, a0, 0x1338",
            "bne v0, a0, 0x408510",
            "nop",
            "lbu v0, 0x22(s2)",
            "nop",
            "bne v0, s4, 0x408510",
            "nop",
            "lhu s0, 6(s2)",
            "nop",
            "bne s0, v1, 0x408510",
            "nop",
            "lbu v0, 4(s2)",
            "nop",
            "beq v0, s4, 0x4085f4",
            "nop",
            "beq v0, fp, 0x4085f4",
            "nop",
            "bne v0, s7, 0x408510",
            "nop",
            "lbu v1, 5(s2)",
            "lbu v0, 0x16(s3)",
            "nop",
            "bne v1, v0, 0x408510",
            "addiu a0, zero, 2",
            "jal fcn.00407ce0",
            "move a1, zero",
            "lw gp, 0x18(sp)",
            "bnez v0, 0x408640",
            "move s1, v0",
            "lw v0, -0x7f10(gp)",
            "lw t9, -sym.imp.fputs(gp)",
            "lui a0, 0x41",
            "lw a1, (v0)",
            "jalr t9",
            "addiu a0, a0, 0x748",
            "lw gp, 0x18(sp)",
            "b 0x40868c",
            "addiu v0, zero, -1",
            "move a2, s0",
            "move a0, v0",
            "jal fcn.00408320",
            "move a1, s2",
            "bnez v0, 0x408678",
            "move s0, zero",
            "b 0x4086bc",
            "addiu s0, zero, 1",
            "lbu a2, 4(s2)",
            "lw a1, 0x1084(sp)",
            "move a3, s1",
            "move t9, s6",
            "jalr t9",
            "addiu s0, zero, 1",
            "jal fcn.00407b78",
            "move a0, s1",
            "lw gp, 0x18(sp)",
            "beqz s0, 0x408510",
            "move v0, zero",
            "lw ra, 0x1074(sp)",
            "lw fp, 0x1070(sp)",
            "lw s7, 0x106c(sp)",
            "lw s6, 0x1068(sp)",
            "lw s5, 0x1064(sp)",
            "lw s4, 0x1060(sp)",
            "lw s3, 0x105c(sp)",
            "lw s2, 0x1058(sp)",
            "lw s1, 0x1054(sp)",
            "lw s0, 0x1050(sp)",
            "jr ra",
            "addiu sp, sp, 0x1078",
            "bnez s6, 0x408660",
            "move a0, s3",
            "b 0x408678",
            "nop"
        ]
    },
    "fcn.0040f07c": {
        "function_address": "0x0040f07c",
        "instructions": [
            "lui gp, 0x43",
            "addiu sp, sp, -0x40",
            "addiu gp, gp, -0x6540",
            "sw ra, 0x3c(sp)",
            "sw s5, 0x38(sp)",
            "sw s4, 0x34(sp)",
            "sw s3, 0x30(sp)",
            "sw s2, 0x2c(sp)",
            "sw s1, 0x28(sp)",
            "sw s0, 0x24(sp)",
            "sw gp, 0x18(sp)",
            "move s4, a2",
            "move s5, a3",
            "lw s2, 0x54(sp)",
            "jal fcn.0040e59c",
            "andi s3, a1, 0xffff",
            "lw gp, 0x18(sp)",
            "move s1, v0",
            "bltz v0, 0x40f134",
            "addiu s0, zero, -1",
            "lhu v0, 0x52(sp)",
            "move a1, s3",
            "move a2, s4",
            "move a3, s5",
            "move a0, s1",
            "jal fcn.0040e680",
            "sw v0, 0x10(sp)",
            "lw gp, 0x18(sp)",
            "bltz v0, 0x40f120",
            "addiu s0, zero, -1",
            "bnez s2, 0x40f110",
            "move a1, s2",
            "lw v0, -0x7ed4(gp)",
            "nop",
            "lw s2, (v0)",
            "nop",
            "move a1, s2",
            "jal fcn.0040ef04",
            "move a0, s1",
            "lw gp, 0x18(sp)",
            "move s0, zero",
            "lw t9, -sym.imp.close(gp)",
            "nop",
            "jalr t9",
            "move a0, s1",
            "lw gp, 0x18(sp)",
            "lw ra, 0x3c(sp)",
            "move v0, s0",
            "lw s5, 0x38(sp)",
            "lw s4, 0x34(sp)",
            "lw s3, 0x30(sp)",
            "lw s2, 0x2c(sp)",
            "lw s1, 0x28(sp)",
            "lw s0, 0x24(sp)",
            "jr ra",
            "addiu sp, sp, 0x40"
        ]
    },
    "fcn.0040ef04": {
        "function_address": "0x0040ef04",
        "instructions": [
            "lui gp, 0x43",
            "addiu sp, sp, -0x4c8",
            "addiu gp, gp, -0x6540",
            "sw ra, 0x4c4(sp)",
            "sw s7, 0x4c0(sp)",
            "sw s6, 0x4bc(sp)",
            "sw s5, 0x4b8(sp)",
            "sw s4, 0x4b4(sp)",
            "sw s3, 0x4b0(sp)",
            "sw s2, 0x4ac(sp)",
            "sw s1, 0x4a8(sp)",
            "sw s0, 0x4a4(sp)",
            "sw gp, 0x18(sp)",
            "srl v1, a0, 5",
            "sll v1, v1, 2",
            "addiu s2, sp, 0x20",
            "addiu v0, zero, 1",
            "move s3, a0",
            "move s5, a1",
            "sllv s4, v0, a0",
            "addu s1, s2, v1",
            "addiu s7, sp, 0xa0",
            "addiu s6, a0, 1",
            "move s0, s2",
            "sw zero, (s0)",
            "addiu s0, s0, 4",
            "bne s0, s7, 0x40ef64",
            "move a0, s6",
            "lw v0, (s1)",
            "lw t9, -sym.imp.select(gp)",
            "sw zero, 0x10(sp)",
            "or v0, v0, s4",
            "sw v0, (s1)",
            "move a1, s2",
            "move a2, zero",
            "jalr t9",
            "move a3, zero",
            "lw gp, 0x18(sp)",
            "bltz v0, 0x40ef60",
            "nop",
            "lw v0, (s1)",
            "nop",
            "and v0, s4, v0",
            "beqz v0, 0x40ef60",
            "addiu a2, zero, 0x400",
            "lw t9, -sym.imp.read(gp)",
            "move a0, s3",
            "jalr t9",
            "move a1, s0",
            "lw gp, 0x18(sp)",
            "blez v0, 0x40f03c",
            "move a2, v0",
            "addu v0, s2, v0",
            "lb v0, 0x7f(v0)",
            "nop",
            "bnez v0, 0x40f020",
            "addiu a1, zero, 1",
            "lw t9, -sym.imp.strlen(gp)",
            "nop",
            "jalr t9",
            "move a0, s0",
            "lw gp, 0x18(sp)",
            "move a0, s0",
            "move a2, v0",
            "lw t9, -sym.imp.fwrite(gp)",
            "addiu a1, zero, 1",
            "jalr t9",
            "move a3, s5",
            "lw gp, 0x18(sp)",
            "b 0x40f03c",
            "nop",
            "lw t9, -sym.imp.fwrite(gp)",
            "move a0, s7",
            "jalr t9",
            "move a3, s5",
            "lw gp, 0x18(sp)",
            "b 0x40ef64",
            "move s0, s2",
            "lw t9, -sym.imp.fflush(gp)",
            "nop",
            "jalr t9",
            "move a0, s5",
            "lw ra, 0x4c4(sp)",
            "lw gp, 0x18(sp)",
            "lw s7, 0x4c0(sp)",
            "lw s6, 0x4bc(sp)",
            "lw s5, 0x4b8(sp)",
            "lw s4, 0x4b4(sp)",
            "lw s3, 0x4b0(sp)",
            "lw s2, 0x4ac(sp)",
            "lw s1, 0x4a8(sp)",
            "lw s0, 0x4a4(sp)",
            "jr ra",
            "addiu sp, sp, 0x4c8"
        ]
    }
}