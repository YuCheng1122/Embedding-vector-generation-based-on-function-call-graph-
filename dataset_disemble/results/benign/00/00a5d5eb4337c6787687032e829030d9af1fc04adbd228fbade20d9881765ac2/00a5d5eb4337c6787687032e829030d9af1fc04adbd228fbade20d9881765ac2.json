{
    "sym.getDaisychainOption": {
        "function_address": "0x00011f0c",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r4, 0",
            "sub sp, sp, 0x90",
            "mov r1, r4",
            "mov r2, 0x7c",
            "mov r6, r0",
            "str r4, [sp, 0x10]",
            "add r0, sp, 0x14",
            "bl sym.imp.memset",
            "str r4, [sp]",
            "mov r1, r4",
            "mov r2, 0xc",
            "add r0, sp, 4",
            "bl sym.imp.memset",
            "ldr r1, [0x00011f9c]",
            "add r3, sp, 0x10",
            "mov r0, r3",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "mov r3, r0",
            "mov r2, sp",
            "ldr r0, [0x00011fa0]",
            "mov r1, r3",
            "add r0, pc, r0",
            "bl fcn.00008788",
            "subs r4, r0, 0",
            "movne r4, 0x10",
            "bne 0x11f90",
            "mov r0, sp",
            "mov r1, r4",
            "mov r2, 0xa",
            "bl sym.imp.strtol",
            "str r0, [r6]",
            "mov r0, r4",
            "add sp, sp, 0x90",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.imp.memset": {
        "function_address": "0x000090d0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x3f4]!"
        ]
    },
    "sym.imp.strcpy": {
        "function_address": "0x000085c0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0xb54]!"
        ]
    },
    "fcn.00008788": {
        "function_address": "0x00008788",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0xa24]!"
        ]
    },
    "sym.imp.strtol": {
        "function_address": "0x00008bb4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x75c]!"
        ]
    },
    "sym.getWIFIChannelInfo": {
        "function_address": "0x0000f730",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "subs r4, r0, 0",
            "ldr r6, [0x0000f8f8]",
            "sub sp, sp, 0x54",
            "add r6, pc, r6",
            "beq 0xf8ec",
            "ldr r0, [0x0000f8fc]",
            "ldr r1, [0x0000f900]",
            "add r0, pc, r0",
            "add r1, pc, r1",
            "bl sym.imp.fopen",
            "subs r5, r0, 0",
            "beq 0xf79c",
            "ldr r3, [0x0000f904]",
            "ldr r7, [0x0000f908]",
            "ldr r8, [0x0000f90c]",
            "ldr sb, [0x0000f910]",
            "ldr sl, [0x0000f914]",
            "ldr fp, [0x0000f918]",
            "add r3, pc, r3",
            "str r3, [sp, 0xc]",
            "add r7, pc, r7",
            "add r8, pc, r8",
            "add sb, pc, sb",
            "add sl, pc, sl",
            "add fp, pc, fp",
            "b 0xf860",
            "ldr r3, [0x0000f91c]",
            "ldr r3, [r6, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0xf7fc",
            "bl sym.imp.time",
            "movw r3, 0xbf3",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000f920]",
            "ldr r0, [0x0000f924]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x340",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x0000f928]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000f92c]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r5, [0x0000f930]",
            "mov r0, r4",
            "add r5, pc, r5",
            "mov r1, r5",
            "bl sym.imp.strcpy",
            "mov r1, r5",
            "add r0, r4, 0x10",
            "bl sym.imp.strcpy",
            "mov r1, r5",
            "add r0, r4, 0x20",
            "bl sym.imp.strcpy",
            "add r0, r4, 0x30",
            "mov r1, r5",
            "bl sym.imp.strcpy",
            "b 0xf8ec",
            "ldr r1, [sp, 0xc]",
            "mov r2, 4",
            "mov r0, r6",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "mov r0, r6",
            "moveq r1, fp",
            "moveq r2, r4",
            "bne 0xf880",
            "bl sym.imp.sscanf",
            "add r6, sp, 0x10",
            "mov r2, r5",
            "mov r0, r6",
            "mov r1, 0x40",
            "bl sym.imp.fgets",
            "subs r2, r0, 0",
            "bne 0xf838",
            "b 0xf8c4",
            "mov r1, r7",
            "mov r2, 3",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "mov r0, r6",
            "moveq r1, sl",
            "addeq r2, r4, 0x10",
            "beq 0xf85c",
            "mov r1, r8",
            "mov r2, 4",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "bne 0xf860",
            "mov r0, r6",
            "mov r1, sb",
            "add r2, r4, 0x30",
            "b 0xf85c",
            "ldr r1, [0x0000f934]",
            "add r0, r4, 0x20",
            "str r2, [sp, 8]",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "mov r0, r5",
            "bl sym.imp.fclose",
            "ldr r2, [sp, 8]",
            "mov r0, r2",
            "b 0xf8f0",
            "mov r0, 0x10",
            "add sp, sp, 0x54",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.imp.fopen": {
        "function_address": "0x00009094",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x41c]!"
        ]
    },
    "sym.imp.time": {
        "function_address": "0x00009124",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x3bc]!"
        ]
    },
    "sym.imp.printf": {
        "function_address": "0x00008674",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0xadc]!"
        ]
    },
    "sym.imp.puts": {
        "function_address": "0x00008914",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x91c]!"
        ]
    },
    "sym.imp.fflush": {
        "function_address": "0x00008aac",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x80c]!"
        ]
    },
    "sym.imp.strncmp": {
        "function_address": "0x00008ea8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x564]!"
        ]
    },
    "sym.imp.sscanf": {
        "function_address": "0x00008fb0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x4b4]!"
        ]
    },
    "sym.imp.fgets": {
        "function_address": "0x00008830",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x9b4]!"
        ]
    },
    "sym.imp.fclose": {
        "function_address": "0x00009118",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x3c4]!"
        ]
    },
    "sym.aes_encrypt_deinit": {
        "function_address": "0x000380f8",
        "instructions": [
            "push {r4, lr}",
            "mov r1, 0",
            "mov r4, r0",
            "mov r2, 0xf4",
            "bl sym.imp.memset",
            "mov r0, r4",
            "pop {r4, lr}",
            "b sym.imp.free"
        ]
    },
    "sym.Log_getAckDownloadLogFile": {
        "function_address": "0x0002ca1c",
        "instructions": [
            "push {r4, lr}",
            "cmp r0, 0",
            "ldr r4, [0x0002cad8]",
            "sub sp, sp, 0x88",
            "add r4, pc, r4",
            "bne 0x2ca94",
            "ldr r3, [0x0002cadc]",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x2cacc",
            "bl sym.imp.time",
            "mov r3, 0x198",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002cae0]",
            "ldr r0, [0x0002cae4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x7f",
            "bl sym.imp.printf",
            "ldr r0, [0x0002cae8]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0002caec]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0x2cacc",
            "mov r4, 0",
            "mov r2, 0x7c",
            "str r4, [sp, 8]",
            "mov r1, r4",
            "add r0, sp, 0xc",
            "bl sym.imp.memset",
            "ldr r1, [0x0002caf0]",
            "add r3, sp, 8",
            "mov r0, r3",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "bl sym.imp.system",
            "mov r0, r4",
            "b 0x2cad0",
            "mov r0, 0x10",
            "add sp, sp, 0x88",
            "pop {r4, pc}"
        ]
    },
    "sym.imp.system": {
        "function_address": "0x00008938",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x904]!"
        ]
    },
    "sym.zyNetCtrl_SpeedTest_StartToDownloadFile": {
        "function_address": "0x0002adbc",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "sub sp, sp, 0x1280",
            "ldr r3, [0x0002b0dc]",
            "sub sp, sp, 8",
            "ldr sb, [0x0002b0e0]",
            "add r2, sp, 0x1280",
            "ldr r8, [0x0002b0e4]",
            "add r2, r2, 8",
            "add sb, pc, sb",
            "mov r5, 0",
            "str r5, [r2, r3]",
            "mov sl, r0",
            "add r8, pc, r8",
            "mov r2, 0x7c",
            "ldr r6, [0x0002b0e8]",
            "mov r1, r5",
            "add r0, sp, 0xc",
            "add r4, sp, 8",
            "add r6, pc, r6",
            "bl sym.imp.memset",
            "ldr r1, [0x0002b0ec]",
            "mov r0, r4",
            "add r7, sp, 0x88",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "mov r0, r4",
            "bl sym.imp.system",
            "ldr r1, [0x0002b0f0]",
            "mov r0, r4",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "mov r0, r4",
            "bl sym.imp.system",
            "ldr r1, [0x0002b0f4]",
            "mov r0, r4",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "mov r0, r4",
            "bl sym.imp.system",
            "ldr r1, [0x0002b0f8]",
            "mov r0, r4",
            "ldr r2, [0x0002b0fc]",
            "add r1, pc, r1",
            "add r2, pc, r2",
            "bl sym.imp.sprintf",
            "mov r0, r4",
            "bl sym.imp.system",
            "ldr r1, [0x0002b100]",
            "mov r3, r8",
            "mov r2, sb",
            "mov r0, r4",
            "add r1, pc, r1",
            "bl sym.imp.sprintf",
            "mov r0, r4",
            "add r4, sp, 0x288",
            "bl sym.imp.system",
            "ldr r3, [0x0002b104]",
            "add r2, sp, 0x1280",
            "add r2, r2, 8",
            "mov r1, r5",
            "add r0, r4, 4",
            "str r5, [r2, r3]",
            "mov r2, 0x3fc",
            "bl sym.imp.memset",
            "ldr r3, [0x0002b108]",
            "add r2, sp, 0x1280",
            "add r2, r2, 8",
            "mov r1, r5",
            "add r0, sp, 0x8c",
            "str r5, [r2, r3]",
            "mov r2, 0x1fc",
            "bl sym.imp.memset",
            "ldr r1, [0x0002b10c]",
            "mov r2, sl",
            "str r8, [sp]",
            "mov r3, sb",
            "add r1, pc, r1",
            "mov r0, r4",
            "bl sym.imp.sprintf",
            "ldr r1, [0x0002b110]",
            "mov r3, r8",
            "mov r2, sb",
            "mov r0, r7",
            "add r1, pc, r1",
            "bl sym.imp.sprintf",
            "mov r0, r7",
            "bl sym.imp.system",
            "mov r0, r4",
            "bl sym.imp.system",
            "ldr r3, [0x0002b114]",
            "ldr r8, [r6, r3]",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "bls 0x2af84",
            "mov r0, r5",
            "bl sym.imp.time",
            "movw r3, 0x21d",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002b118]",
            "ldr r0, [0x0002b11c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xac",
            "bl sym.imp.printf",
            "ldr r0, [0x0002b120]",
            "mov r1, r7",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0002b124]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "bls 0x2afe0",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x21e",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002b128]",
            "ldr r0, [0x0002b12c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xac",
            "bl sym.imp.printf",
            "ldr r0, [0x0002b130]",
            "mov r1, r4",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0002b124]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, 0x64",
            "mov r4, 0",
            "bl sym.imp.usleep",
            "str r4, [sp, 0xa88]",
            "add r0, sp, 0xa80",
            "mov r1, r4",
            "movw r2, 0x7fc",
            "add r0, r0, 0xc",
            "add r7, sp, 0x680",
            "bl sym.imp.memset",
            "str r4, [sp, 0x688]",
            "add r0, sp, 0x680",
            "mov r1, r4",
            "mov r2, 0x3fc",
            "add r0, r0, 0xc",
            "add r7, r7, 8",
            "bl sym.imp.memset",
            "ldr r1, [0x0002b134]",
            "mov r0, r7",
            "ldr r2, [0x0002b138]",
            "add r5, sp, 0xa80",
            "ldr r3, [0x0002b13c]",
            "add r5, r5, 8",
            "add r1, pc, r1",
            "add r2, pc, r2",
            "add r3, pc, r3",
            "bl sym.imp.sprintf",
            "ldr r1, [0x0002b140]",
            "mov r3, r7",
            "ldr r2, [0x0002b144]",
            "mov r0, r5",
            "add r1, pc, r1",
            "add r2, pc, r2",
            "bl sym.imp.sprintf",
            "mov r0, r5",
            "bl sym.imp.system",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "bls 0x2b0cc",
            "mov r0, r4",
            "bl sym.imp.time",
            "movw r3, 0x22a",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002b148]",
            "ldr r0, [0x0002b14c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xac",
            "bl sym.imp.printf",
            "ldr r0, [0x0002b150]",
            "mov r1, r5",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0002b124]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, 0",
            "add sp, sp, 0x1280",
            "add sp, sp, 8",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "sym.imp.sprintf": {
        "function_address": "0x000091f0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x334]!"
        ]
    },
    "sym.imp.usleep": {
        "function_address": "0x000087d0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x9f4]!"
        ]
    },
    "sym.crypto_mod_exp": {
        "function_address": "0x00034b28",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov sl, r1",
            "mov sb, r2",
            "mov r8, r3",
            "mov fp, r0",
            "bl fcn.00009274",
            "mov r7, r0",
            "bl fcn.00009274",
            "mov r6, r0",
            "bl fcn.00009274",
            "mov r5, r0",
            "bl fcn.00009274",
            "cmp r6, 0",
            "cmpne r7, 0",
            "mov r4, r0",
            "bne 0x34b70",
            "mvn r8, 0",
            "b 0x34bf4",
            "cmp r0, 0",
            "cmpne r5, 0",
            "beq 0x34b68",
            "mov r0, r7",
            "mov r1, fp",
            "mov r2, sl",
            "bl fcn.00008f38",
            "cmp r0, 0",
            "blt 0x34b68",
            "mov r0, r6",
            "mov r1, sb",
            "mov r2, r8",
            "bl fcn.00008f38",
            "cmp r0, 0",
            "blt 0x34b68",
            "ldr r1, [sp, 0x28]",
            "mov r0, r5",
            "ldr r2, [sp, 0x2c]",
            "bl fcn.00008f38",
            "cmp r0, 0",
            "blt 0x34b68",
            "mov r0, r7",
            "mov r1, r6",
            "mov r2, r5",
            "mov r3, r4",
            "bl fcn.00009004",
            "cmp r0, 0",
            "blt 0x34b68",
            "ldr r1, [sp, 0x30]",
            "mov r0, r4",
            "ldr r2, [sp, 0x34]",
            "bl fcn.0000946c",
            "mov r8, r0",
            "mov r0, r7",
            "bl fcn.000094c0",
            "mov r0, r6",
            "bl fcn.000094c0",
            "mov r0, r5",
            "bl fcn.000094c0",
            "mov r0, r4",
            "bl fcn.000094c0",
            "mov r0, r8",
            "pop {r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00009274": {
        "function_address": "0x00009274",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x2dc]!"
        ]
    },
    "fcn.00008f38": {
        "function_address": "0x00008f38",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x504]!"
        ]
    },
    "fcn.00009004": {
        "function_address": "0x00009004",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x47c]!"
        ]
    },
    "fcn.0000946c": {
        "function_address": "0x0000946c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x18c]!"
        ]
    },
    "fcn.000094c0": {
        "function_address": "0x000094c0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x154]!"
        ]
    },
    "sym.zyNetCtrl_FWCtrl_FWUpgrade": {
        "function_address": "0x00024270",
        "instructions": [
            "push {r0, r1, r2, r4, r5, r6, r7, lr}",
            "mov r5, r2",
            "ldr r4, [0x000243dc]",
            "ldr r3, [0x000243e0]",
            "add r4, pc, r4",
            "ldr r6, [r4, r3]",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x242e0",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0xbe",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000243e4]",
            "ldr r0, [0x000243e8]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x8b",
            "bl sym.imp.printf",
            "ldr r0, [0x000243ec]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x000243f0]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x000243f4]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "cmp r3, 3",
            "beq 0x2433c",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x243d0",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0xc2",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000243f8]",
            "ldr r0, [0x000243fc]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x8b",
            "bl sym.imp.printf",
            "ldr r0, [0x00024400]",
            "add r0, pc, r0",
            "b 0x24394",
            "ldr r3, [0x00024404]",
            "ldr r3, [r4, r3]",
            "ldr r7, [r3]",
            "cmp r7, 4",
            "bne 0x243ac",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x243d0",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0xc8",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, r7",
            "ldr r3, [0x00024408]",
            "ldr r0, [0x0002440c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x8b",
            "bl sym.imp.printf",
            "ldr r0, [0x00024410]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x000243f0]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0x243d0",
            "cmp r5, 0",
            "beq 0x243c4",
            "ldr r3, [0x00024414]",
            "mov r1, r5",
            "ldr r0, [r4, r3]",
            "bl sym.imp.strcpy",
            "bl fcn.000093b8",
            "mov r0, 0",
            "b 0x243d4",
            "mov r0, 0x10",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.000093b8": {
        "function_address": "0x000093b8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x204]!"
        ]
    },
    "sym.zyNetCtrl_WPS_addSyncList": {
        "function_address": "0x0001f040",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r6, r0",
            "cmp r1, 0",
            "cmpne r0, 0",
            "sub sp, sp, 0x34",
            "ldr r4, [0x0001f87c]",
            "mov r5, r1",
            "moveq r7, 1",
            "movne r7, 0",
            "add r4, pc, r4",
            "bne 0x1f0c0",
            "ldr r3, [0x0001f880]",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x1f870",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0xaa3",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001f884]",
            "ldr r0, [0x0001f888]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x230",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x0001f88c]",
            "add r0, pc, r0",
            "b 0x1f474",
            "mov r0, r7",
            "mov sl, r2",
            "bl sym.imp.time",
            "ldr r3, [0x0001f890]",
            "mov sb, r0",
            "ldr r8, [r4, r3]",
            "ldr r2, [r8]",
            "cmp r2, 0",
            "bne 0x1f238",
            "str r2, [sp, 0x2c]",
            "mov r0, 1",
            "mov r1, 0x24",
            "bl sym.imp.calloc",
            "ldr r2, [sp, 0x2c]",
            "subs r7, r0, 0",
            "bne 0x1f150",
            "ldr r3, [0x0001f880]",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x1f870",
            "bl sym.imp.time",
            "movw r3, 0xab3",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001f894]",
            "ldr r0, [0x0001f898]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x230",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x0001f89c]",
            "add r0, pc, r0",
            "b 0x1f474",
            "str r2, [sp, 0x2c]",
            "mov r0, 1",
            "mov r1, r0",
            "bl sym.imp.calloc",
            "str r0, [r7, 0x14]",
            "cmp r0, 0",
            "ldr r2, [sp, 0x2c]",
            "mov r1, r0",
            "bne 0x1f1c4",
            "ldr r3, [0x0001f880]",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x1f510",
            "bl sym.imp.time",
            "movw r3, 0xab9",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001f8a0]",
            "ldr r0, [0x0001f8a4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x230",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x0001f8a8]",
            "add r0, pc, r0",
            "b 0x1f4fc",
            "ldr r3, [0x0001f8ac]",
            "mov r0, r7",
            "ldr r3, [r4, r3]",
            "str r7, [r3]",
            "mov r3, r2",
            "ldrb ip, [r6, r3]",
            "add r0, r0, 1",
            "add r2, r7, r3",
            "strb ip, [r2, 4]",
            "ldrb r2, [r5, r3]",
            "add r3, r3, 1",
            "cmp r3, 6",
            "strb r2, [r0, 9]",
            "bne 0x1f1d8",
            "ldr r3, [0x0001f8b0]",
            "mov r2, 0",
            "strb sl, [r1]",
            "str sb, [r7, 0x18]",
            "str r2, [r7]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "cmp r3, 1",
            "streq r3, [r7, 0x1c]",
            "beq 0x1f22c",
            "cmp r3, 0",
            "streq r2, [r7, 0x1c]",
            "str r2, [r7, 0x20]",
            "mov r3, 1",
            "b 0x1f578",
            "ldr r3, [0x0001f8ac]",
            "mov r0, r7",
            "ldr r3, [r4, r3]",
            "ldr fp, [r3]",
            "mov r3, fp",
            "cmp r0, r2",
            "bge 0x1f3f4",
            "ldrb ip, [r3, 4]",
            "ldrb r1, [r6]",
            "cmp ip, r1",
            "bne 0x1f3e8",
            "ldrb ip, [r3, 5]",
            "ldrb r1, [r6, 1]",
            "cmp ip, r1",
            "bne 0x1f3e8",
            "ldrb ip, [r3, 6]",
            "ldrb r1, [r6, 2]",
            "cmp ip, r1",
            "bne 0x1f3e8",
            "ldrb ip, [r3, 7]",
            "ldrb r1, [r6, 3]",
            "cmp ip, r1",
            "bne 0x1f3e8",
            "ldrb ip, [r3, 8]",
            "ldrb r1, [r6, 4]",
            "cmp ip, r1",
            "bne 0x1f3e8",
            "ldrb ip, [r3, 9]",
            "ldrb r1, [r6, 5]",
            "cmp ip, r1",
            "bne 0x1f3e8",
            "ldrb ip, [r3, 0xa]",
            "ldrb r1, [r5]",
            "cmp ip, r1",
            "bne 0x1f3e8",
            "ldrb ip, [r3, 0xb]",
            "ldrb r1, [r5, 1]",
            "cmp ip, r1",
            "bne 0x1f3e8",
            "ldrb ip, [r3, 0xc]",
            "ldrb r1, [r5, 2]",
            "cmp ip, r1",
            "bne 0x1f3e8",
            "ldrb ip, [r3, 0xd]",
            "ldrb r1, [r5, 3]",
            "cmp ip, r1",
            "bne 0x1f3e8",
            "ldrb ip, [r3, 0xe]",
            "ldrb r1, [r5, 4]",
            "cmp ip, r1",
            "bne 0x1f3e8",
            "ldrb ip, [r3, 0xf]",
            "ldrb r1, [r5, 5]",
            "cmp ip, r1",
            "bne 0x1f3e8",
            "ldr r1, [r3, 0x14]",
            "ldrb r1, [r1]",
            "cmp r1, sl",
            "bne 0x1f3e8",
            "ldr r2, [0x0001f8b0]",
            "ldr r2, [r4, r2]",
            "ldr r2, [r2]",
            "cmp r2, 0",
            "streq sb, [r3, 0x18]",
            "streq r2, [r3, 0x1c]",
            "ldr r3, [0x0001f880]",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x1f870",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0xaed",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001f8b4]",
            "ldr r0, [0x0001f8b8]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x230",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldrb r0, [r6, 3]",
            "ldrb r1, [r6]",
            "ldrb r2, [r6, 1]",
            "ldrb r3, [r6, 2]",
            "str r0, [sp]",
            "ldrb r0, [r6, 4]",
            "str r0, [sp, 4]",
            "ldrb r0, [r6, 5]",
            "str r0, [sp, 8]",
            "ldrb r0, [r5]",
            "str r0, [sp, 0xc]",
            "ldrb r0, [r5, 1]",
            "str r0, [sp, 0x10]",
            "ldrb r0, [r5, 2]",
            "str r0, [sp, 0x14]",
            "ldrb r0, [r5, 3]",
            "str r0, [sp, 0x18]",
            "ldrb r0, [r5, 4]",
            "str r0, [sp, 0x1c]",
            "ldrb r0, [r5, 5]",
            "str r0, [sp, 0x20]",
            "ldr r0, [0x0001f8bc]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "b 0x1f478",
            "ldr r3, [r3]",
            "add r0, r0, 1",
            "b 0x1f24c",
            "mov r1, 0",
            "sub r2, r2, 1",
            "cmp r1, r2",
            "ldrlt fp, [fp]",
            "addlt r1, r1, 1",
            "blt 0x1f3fc",
            "mov r0, 1",
            "mov r1, 0x24",
            "bl sym.imp.calloc",
            "str r0, [fp]",
            "cmp r0, 0",
            "mov r7, r0",
            "bne 0x1f48c",
            "ldr r3, [0x0001f880]",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x1f870",
            "bl sym.imp.time",
            "movw r3, 0xafc",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001f8c0]",
            "ldr r0, [0x0001f8c4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x230",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x0001f8c8]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0001f8cc]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0x1f870",
            "mov r0, 1",
            "mov r1, r0",
            "bl sym.imp.calloc",
            "str r0, [r7, 0x14]",
            "cmp r0, 0",
            "mov r2, r0",
            "movne r1, r7",
            "movne r3, 0",
            "bne 0x1f51c",
            "ldr r3, [0x0001f880]",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x1f510",
            "bl sym.imp.time",
            "movw r3, 0xb02",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001f8d0]",
            "ldr r0, [0x0001f8d4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x230",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x0001f8d8]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0001f8cc]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, r7",
            "bl fcn.00008cec",
            "b 0x1f870",
            "ldrb ip, [r6, r3]",
            "add r1, r1, 1",
            "add r0, r7, r3",
            "strb ip, [r0, 4]",
            "ldrb r0, [r5, r3]",
            "add r3, r3, 1",
            "cmp r3, 6",
            "strb r0, [r1, 9]",
            "bne 0x1f51c",
            "strb sl, [r2]",
            "mov r3, 0",
            "str r3, [r7]",
            "ldr r3, [0x0001f8b0]",
            "str sb, [r7, 0x18]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "cmp r3, 1",
            "beq 0x1f56c",
            "cmp r3, 0",
            "bne 0x1f570",
            "str r3, [r7, 0x1c]",
            "ldr r3, [r8]",
            "add r3, r3, 1",
            "str r3, [r8]",
            "ldr r3, [0x0001f880]",
            "ldr r6, [r4, r3]",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x1f5e4",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0xb1d",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001f8dc]",
            "ldr r0, [0x0001f8e0]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x230",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x0001f8e4]",
            "ldr r1, [r8]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0001f8cc]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x0001f8ac]",
            "mov r7, 0",
            "ldr sb, [0x0001f8e8]",
            "ldr sl, [0x0001f8ec]",
            "ldr r3, [r4, r3]",
            "add sb, pc, sb",
            "add sl, pc, sl",
            "add sb, sb, 0x230",
            "ldr r5, [r3]",
            "add sl, sl, 0x230",
            "add sb, sb, 1",
            "add sl, sl, 1",
            "ldr r3, [r8]",
            "cmp r7, r3",
            "bge 0x1f840",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x1f6a8",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0xb27",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001f8f0]",
            "ldr r0, [0x0001f8f4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x230",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldrb r1, [r5, 6]",
            "ldrb r3, [r5, 5]",
            "ldrb r2, [r5, 4]",
            "str r1, [sp]",
            "ldrb r1, [r5, 7]",
            "ldr r0, [0x0001f8f8]",
            "str r1, [sp, 4]",
            "ldrb r1, [r5, 8]",
            "add r0, pc, r0",
            "str r1, [sp, 8]",
            "ldrb r1, [r5, 9]",
            "str r1, [sp, 0xc]",
            "mov r1, r7",
            "bl sym.imp.printf",
            "ldr r3, [0x0001f8cc]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x1f71c",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r1, r0",
            "movw r3, 0xb2d",
            "ldr r0, [0x0001f8fc]",
            "mov r2, 4",
            "str r3, [sp]",
            "mov r3, sb",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldrb r0, [r5, 0xd]",
            "ldrb r3, [r5, 0xc]",
            "ldrb r1, [r5, 0xa]",
            "ldrb r2, [r5, 0xb]",
            "str r0, [sp]",
            "ldrb r0, [r5, 0xe]",
            "str r0, [sp, 4]",
            "ldrb r0, [r5, 0xf]",
            "str r0, [sp, 8]",
            "ldr r0, [0x0001f900]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0001f8cc]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x1f774",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r1, r0",
            "movw r3, 0xb2e",
            "ldr r0, [0x0001f904]",
            "mov r2, 4",
            "str r3, [sp]",
            "mov r3, sl",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [r5, 0x14]",
            "ldr r0, [0x0001f908]",
            "ldrb r1, [r3]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0001f8cc]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x1f7d4",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0xb2f",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001f90c]",
            "ldr r0, [0x0001f910]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x230",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x0001f914]",
            "ldr r1, [r5, 0x18]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0001f8cc]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x1f834",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0xb30",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001f918]",
            "ldr r0, [0x0001f91c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x230",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x0001f920]",
            "ldr r1, [r5, 0x1c]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0001f8cc]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r5, [r5]",
            "add r7, r7, 1",
            "b 0x1f614",
            "ldr r3, [0x0001f8b0]",
            "ldr r1, [r4, r3]",
            "ldr r3, [0x0001f924]",
            "ldr r0, [r1]",
            "ldr r2, [r4, r3]",
            "ldr r3, [0x0001f928]",
            "ldr r1, [r2]",
            "ldr r3, [r4, r3]",
            "ldr r2, [r3]",
            "bl fcn.00008bf0",
            "mov r0, 0",
            "b 0x1f874",
            "mov r0, 0x10",
            "add sp, sp, 0x34",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.imp.calloc": {
        "function_address": "0x00008c50",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x6f4]!"
        ]
    },
    "fcn.00008cec": {
        "function_address": "0x00008cec",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x68c]!"
        ]
    },
    "fcn.00008bf0": {
        "function_address": "0x00008bf0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x734]!"
        ]
    },
    "sym.getIntfDesc": {
        "function_address": "0x0000a2c8",
        "instructions": [
            "push {r0, r1, r2, r4, r5, lr}",
            "mov r5, r0",
            "ldr r4, [0x0000a388]",
            "ldr r3, [0x0000a38c]",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0xa338",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x33f",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000a390]",
            "ldr r0, [0x0000a394]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xa0",
            "bl sym.imp.printf",
            "ldr r0, [0x0000a398]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000a39c]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x0000a3a0]",
            "mov r0, 2",
            "ldr r3, [r4, r3]",
            "ldr r1, [r3]",
            "bl fcn.00008980",
            "subs r4, r0, 0",
            "movne r4, 0x10",
            "bne 0xa37c",
            "bl fcn.0000892c",
            "bl fcn.00008710",
            "bl fcn.00008c14",
            "bl fcn.00008e54",
            "bl fcn.00008a7c",
            "mov r0, r5",
            "bl fcn.00008b90",
            "bl fcn.00008e48",
            "bl fcn.000094d8",
            "mov r0, r4",
            "add sp, sp, 0xc",
            "pop {r4, r5, pc}"
        ]
    },
    "fcn.00008980": {
        "function_address": "0x00008980",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x8d4]!"
        ]
    },
    "fcn.0000892c": {
        "function_address": "0x0000892c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x90c]!"
        ]
    },
    "fcn.00008710": {
        "function_address": "0x00008710",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0xa74]!"
        ]
    },
    "fcn.00008c14": {
        "function_address": "0x00008c14",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x71c]!"
        ]
    },
    "fcn.00008e54": {
        "function_address": "0x00008e54",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x59c]!"
        ]
    },
    "fcn.00008a7c": {
        "function_address": "0x00008a7c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x82c]!"
        ]
    },
    "fcn.00008b90": {
        "function_address": "0x00008b90",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x774]!"
        ]
    },
    "fcn.00008e48": {
        "function_address": "0x00008e48",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x5a4]!"
        ]
    },
    "fcn.000094d8": {
        "function_address": "0x000094d8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x144]!"
        ]
    },
    "sym.zyNetCtrl_startNetCtrl": {
        "function_address": "0x00009abc",
        "instructions": [
            "push {r0, r1, r4, lr}",
            "ldr r4, [0x00009b40]",
            "ldr r3, [0x00009b44]",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x9b28",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0xd2",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, fcn.0002eb6c",
            "ldr r0, [0x00009b4c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x16",
            "bl sym.imp.printf",
            "ldr r0, fcn.0002f054",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00009b54]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x00009b58]",
            "mov r2, 2",
            "ldr r3, [r4, r3]",
            "str r2, [r3]",
            "add sp, sp, 8",
            "pop {r4, pc}"
        ]
    },
    "sym.zyNetCtrl_WPS_freebssconfig": {
        "function_address": "0x0001b888",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r0",
            "ldr r0, [r0, 0x6c]",
            "bl fcn.00008cec",
            "ldr r0, [r4, 0x18]",
            "bl fcn.00008cec",
            "ldr r0, [r4, 0x1c]",
            "bl fcn.00008cec",
            "ldr r0, [r4, 0x20]",
            "bl fcn.00008cec",
            "ldr r0, [r4, 0x24]",
            "bl fcn.00008cec",
            "ldr r0, [r4, 0x28]",
            "bl fcn.00008cec",
            "ldr r0, [r4, 0xbc]",
            "bl fcn.00008cec",
            "ldr r0, [r4, 0xc0]",
            "bl fcn.00008cec",
            "ldr r0, [r4, 0xc4]",
            "bl fcn.00008cec",
            "ldr r0, [r4, 0xcc]",
            "bl fcn.00008cec",
            "ldr r0, [r4, 0xd0]",
            "bl fcn.00008cec",
            "ldr r0, [r4, 0xd4]",
            "bl fcn.00008cec",
            "ldr r0, [r4, 0xf0]",
            "bl fcn.00008cec",
            "ldr r0, [r4, 0xf4]",
            "bl fcn.00008cec",
            "mov r0, r4",
            "bl fcn.00008cec",
            "mov r0, 0",
            "pop {r4, pc}"
        ]
    },
    "sym.zyNetCtrl_SpeedTest_getStartTime": {
        "function_address": "0x0002ad94",
        "instructions": [
            "push {r3, lr}",
            "ldr r3, [0x0002adb4]",
            "ldr r2, [0x0002adb8]",
            "add r3, pc, r3",
            "ldr r1, [r3, r2]",
            "bl sym.imp.strcpy",
            "mov r0, 0",
            "pop {r3, pc}"
        ]
    },
    "sym.getFwdRuleList": {
        "function_address": "0x0000c7d8",
        "instructions": [
            "push {r0, r1, r4, lr}",
            "ldr r4, [0x0000c870]",
            "ldr r3, [0x0000c874]",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0xc848",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x6e7",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000c878]",
            "ldr r0, [0x0000c87c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x18c",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x0000c880]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000c884]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x0000c888]",
            "mov r0, 2",
            "ldr r3, [r4, r3]",
            "ldr r1, [r3]",
            "bl fcn.00008980",
            "cmp r0, 0",
            "movne r0, 0x10",
            "moveq r0, 0",
            "add sp, sp, 8",
            "pop {r4, pc}"
        ]
    },
    "sym.zyNetCtrl_WPS_getWPSSyncListByMac": {
        "function_address": "0x0001fd68",
        "instructions": [
            "push {r4, r5, lr}",
            "subs r4, r0, 0",
            "ldr r5, [0x0001fef0]",
            "sub sp, sp, 0x14",
            "moveq r0, 0x10",
            "add r5, pc, r5",
            "beq 0x1fee8",
            "ldr r3, [0x0001fef4]",
            "ldr r3, [r5, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x1fe0c",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0xb43",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001fef8]",
            "ldr r0, [0x0001fefc]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x270",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldrb r0, [r4, 3]",
            "ldrb r3, [r4, 2]",
            "ldrb r1, [r4]",
            "ldrb r2, [r4, 1]",
            "str r0, [sp]",
            "ldrb r0, [r4, 4]",
            "str r0, [sp, 4]",
            "ldrb r0, [r4, 5]",
            "str r0, [sp, 8]",
            "ldr r0, [0x0001ff00]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0001ff04]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x0001ff08]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "cmp r0, 0",
            "strbeq r0, [r4, 7]",
            "strbeq r0, [r4, 8]",
            "beq 0x1fee8",
            "ldr r3, [0x0001ff0c]",
            "mov r2, 0",
            "mov r1, r2",
            "ldr r3, [r5, r3]",
            "ldr r3, [r3]",
            "cmp r1, r0",
            "bge 0x1fed8",
            "ldrb lr, [r4]",
            "ldrb ip, [r3, 4]",
            "cmp lr, ip",
            "bne 0x1fecc",
            "ldrb lr, [r4, 1]",
            "ldrb ip, [r3, 5]",
            "cmp lr, ip",
            "bne 0x1fecc",
            "ldrb lr, [r4, 2]",
            "ldrb ip, [r3, 6]",
            "cmp lr, ip",
            "bne 0x1fecc",
            "ldrb lr, [r4, 3]",
            "ldrb ip, [r3, 7]",
            "cmp lr, ip",
            "bne 0x1fecc",
            "ldrb lr, [r4, 4]",
            "ldrb ip, [r3, 8]",
            "cmp lr, ip",
            "bne 0x1fecc",
            "ldrb lr, [r4, 5]",
            "ldrb ip, [r3, 9]",
            "cmp lr, ip",
            "bne 0x1fecc",
            "ldr ip, [r3, 0x14]",
            "ldrb ip, [ip]",
            "cmp ip, 0",
            "ldreq ip, [r3, 0x1c]",
            "strbeq ip, [r4, 7]",
            "beq 0x1fec8",
            "cmp ip, 1",
            "ldreq ip, [r3, 0x1c]",
            "strbeq ip, [r4, 8]",
            "add r2, r2, 1",
            "ldr r3, [r3]",
            "add r1, r1, 1",
            "b 0x1fe3c",
            "mov r0, 0",
            "cmp r2, 0",
            "strbeq r2, [r4, 7]",
            "strbeq r2, [r4, 8]",
            "add sp, sp, 0x14",
            "pop {r4, r5, pc}"
        ]
    },
    "sym.zyNetCtrl_SpeedTest_setSpeedTestSendCtrlflag": {
        "function_address": "0x0002a204",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "cmp r0, 1",
            "ldr r4, [0x0002a250]",
            "mov r5, r0",
            "add r4, pc, r4",
            "bhi 0x2a248",
            "bne 0x2a234",
            "mov r0, 0",
            "bl sym.imp.time",
            "ldr r3, [0x0002a254]",
            "ldr r3, [r4, r3]",
            "str r0, [r3]",
            "ldr r3, [0x0002a258]",
            "mov r0, 0",
            "ldr r3, [r4, r3]",
            "str r5, [r3]",
            "pop {r3, r4, r5, pc}",
            "mov r0, 0x10",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.FW_downloadByFTP": {
        "function_address": "0x00024a8c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r5, r0",
            "ldr r4, [0x00024c4c]",
            "sub sp, sp, 0x88",
            "ldr r3, [0x00024c50]",
            "mov r7, r1",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "ldrb r2, [r3]",
            "mov r8, r3",
            "cmp r2, 3",
            "bls 0x24b08",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x2f3",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00024c54]",
            "ldr r0, [0x00024c58]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xd5",
            "bl sym.imp.printf",
            "ldr r0, [0x00024c5c]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00024c60]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r6, 0",
            "add r0, sp, 0xc",
            "str r6, [sp, 8]",
            "mov r1, r6",
            "mov r2, 0x7c",
            "bl sym.imp.memset",
            "cmp r5, r6",
            "bne 0x24b38",
            "mov r0, r5",
            "bl fcn.00009034",
            "mov r0, r5",
            "b 0x24c44",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "bls 0x24b94",
            "mov r0, r6",
            "bl sym.imp.time",
            "movw r3, 0x2fd",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00024c64]",
            "ldr r0, [0x00024c68]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xd5",
            "bl sym.imp.printf",
            "ldr r0, [0x00024c6c]",
            "mov r1, r5",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00024c60]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x00024c70]",
            "mov r6, 2",
            "mov r0, r6",
            "add r8, sp, 8",
            "ldr r3, [r4, r3]",
            "str r6, [r3]",
            "bl fcn.00009034",
            "ldr r3, [0x00024c74]",
            "mov r2, 3",
            "ldr r3, [r4, r3]",
            "strb r2, [r3]",
            "bl fcn.000095d4",
            "bl loc.imp.updateFWUpgradeStatus",
            "ldr r0, [0x00024c78]",
            "add r0, pc, r0",
            "bl sym.imp.system",
            "ldr r0, [0x00024c7c]",
            "add r0, pc, r0",
            "bl sym.imp.system",
            "ldr r1, [0x00024c80]",
            "mov r2, r5",
            "mov r0, r8",
            "add r1, pc, r1",
            "bl sym.imp.sprintf",
            "mov r0, r8",
            "bl sym.imp.system",
            "mov r0, 0",
            "bl sym.imp.time",
            "ldr r3, [0x00024c84]",
            "cmp r7, 0",
            "ldr r3, [r4, r3]",
            "str r0, [r3]",
            "ldr r3, [0x00024c88]",
            "ldr r3, [r4, r3]",
            "str r7, [r3]",
            "ldreq r0, [0x00024c8c]",
            "addeq r0, pc, r0",
            "beq 0x24c3c",
            "cmp r7, 1",
            "bne 0x24c40",
            "ldr r0, [0x00024c90]",
            "add r0, pc, r0",
            "bl sym.imp.system",
            "mov r0, r6",
            "add sp, sp, 0x88",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.00009034": {
        "function_address": "0x00009034",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x45c]!"
        ]
    },
    "fcn.000095d4": {
        "function_address": "0x000095d4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x9c]!"
        ]
    },
    "loc.imp.updateFWUpgradeStatus": {
        "function_address": "0x00009334",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x25c]!"
        ]
    },
    "sym.FW_download": {
        "function_address": "0x00024418",
        "instructions": [
            "push {r0, r1, r4, lr}",
            "ldr r4, [0x00024490]",
            "ldr r3, [0x00024494]",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x24484",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x2a1",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00024498]",
            "ldr r0, [0x0002449c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xa6",
            "bl sym.imp.printf",
            "ldr r0, [0x000244a0]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x000244a4]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, 0",
            "add sp, sp, 8",
            "pop {r4, pc}"
        ]
    },
    "sym.initNetCtrl": {
        "function_address": "0x00010bc0",
        "instructions": [
            "push {r0, r1, r4, r5, r6, lr}",
            "ldr r4, [0x00010d50]",
            "ldr r3, [0x00010d54]",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x10c30",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0x204",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00010d58]",
            "ldr r0, [0x00010d5c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x3f4",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x00010d60]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00010d64]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x00010d68]",
            "mov r0, 1",
            "ldr r6, [r4, r3]",
            "ldr r1, [r6]",
            "bl fcn.00008980",
            "subs r5, r0, 0",
            "movne r5, 0x10",
            "bne 0x10d44",
            "ldr r3, [0x00010d6c]",
            "mov r1, r5",
            "mov r2, 0x28",
            "ldr r3, [r4, r3]",
            "str r5, [r6]",
            "str r5, [r3]",
            "ldr r3, [0x00010d70]",
            "ldr r0, [r4, r3]",
            "bl sym.imp.memset",
            "ldr r3, [0x00010d74]",
            "mov r1, r5",
            "mov r2, 0x28",
            "ldr r0, [r4, r3]",
            "bl sym.imp.memset",
            "ldr r3, [0x00010d78]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x10ca0",
            "bl fcn.00008e48",
            "ldr r3, [0x00010d7c]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x10cb8",
            "bl fcn.000088d8",
            "ldr r3, [0x00010d80]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x10cd0",
            "bl fcn.00009454",
            "ldr r3, [0x00010d84]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x10ce8",
            "bl fcn.000094d8",
            "ldr r3, [0x00010d88]",
            "ldr r2, [r4, r3]",
            "mov r3, 0",
            "str r3, [r2]",
            "ldr r2, [0x00010d8c]",
            "ldr r2, [r4, r2]",
            "str r3, [r2]",
            "ldr r2, [0x00010d90]",
            "ldr r2, [r4, r2]",
            "str r3, [r2]",
            "ldr r2, [0x00010d94]",
            "ldr r2, [r4, r2]",
            "str r3, [r2]",
            "ldr r2, [0x00010d98]",
            "ldr r2, [r4, r2]",
            "str r3, [r2]",
            "ldr r2, [0x00010d9c]",
            "ldr r2, [r4, r2]",
            "str r3, [r2]",
            "bl fcn.00009400",
            "bl fcn.000094b4",
            "bl fcn.00008734",
            "bl fcn.0000961c",
            "mov r0, r5",
            "add sp, sp, 8",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.000088d8": {
        "function_address": "0x000088d8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x944]!"
        ]
    },
    "fcn.00009454": {
        "function_address": "0x00009454",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x19c]!"
        ]
    },
    "fcn.00009400": {
        "function_address": "0x00009400",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x1d4]!"
        ]
    },
    "fcn.000094b4": {
        "function_address": "0x000094b4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x15c]!"
        ]
    },
    "fcn.00008734": {
        "function_address": "0x00008734",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0xa5c]!"
        ]
    },
    "fcn.0000961c": {
        "function_address": "0x0000961c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x6c]!"
        ]
    },
    "sym.zyNetCtrl_WPS_checkRenewDevice": {
        "function_address": "0x000207fc",
        "instructions": [
            "push {r0, r1, r4, lr}",
            "ldr r4, [0x00020940]",
            "ldr r3, [0x00020944]",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x20838",
            "ldr r1, [0x00020948]",
            "ldr r1, [r4, r1]",
            "ldr ip, [r1]",
            "cmp ip, 0",
            "movne r2, r0",
            "movne r1, 0",
            "bne 0x208b8",
            "ldr r3, [0x0002094c]",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x20934",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0xd44",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00020950]",
            "ldr r0, [0x00020954]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x2ec",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x00020958]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0002095c]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0x20934",
            "ldrb lr, [r2, 6]",
            "ldrb r0, [r3, 0xa]",
            "cmp lr, r0",
            "beq 0x208c4",
            "ldr r3, [r3]",
            "add r1, r1, 1",
            "cmp r1, ip",
            "blt 0x208a0",
            "b 0x20934",
            "ldrb lr, [r2, 7]",
            "ldrb r0, [r3, 0xb]",
            "cmp lr, r0",
            "bne 0x208b0",
            "ldrb lr, [r2, 8]",
            "ldrb r0, [r3, 0xc]",
            "cmp lr, r0",
            "bne 0x208b0",
            "ldrb lr, [r2, 9]",
            "ldrb r0, [r3, 0xd]",
            "cmp lr, r0",
            "bne 0x208b0",
            "ldrb lr, [r2, 0xa]",
            "ldrb r0, [r3, 0xe]",
            "cmp lr, r0",
            "bne 0x208b0",
            "ldrb lr, [r2, 0xb]",
            "ldrb r0, [r3, 0xf]",
            "cmp lr, r0",
            "bne 0x208b0",
            "ldr r0, [r3, 0x14]",
            "ldrb lr, [r2, 0xd]",
            "ldrb r0, [r0]",
            "cmp r0, lr",
            "bne 0x208b0",
            "bl fcn.00008d4c",
            "mov r0, 0",
            "b 0x20938",
            "mov r0, 0x10",
            "add sp, sp, 8",
            "pop {r4, pc}"
        ]
    },
    "fcn.00008d4c": {
        "function_address": "0x00008d4c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x64c]!"
        ]
    },
    "sym.FWCtrl": {
        "function_address": "0x0000bf38",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0xac4]!",
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0xa54]!",
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x3ac]!",
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x30c]!",
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x26c]!",
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x5c]!",
            "push {r0, r1, r2, r4, r5, r6, r7, r8, sb, lr}",
            "mov r8, r3",
            "ldr r4, [0x0000c584]",
            "mov sb, r0",
            "ldr r3, [0x0000c588]",
            "mov r7, r1",
            "add r4, pc, r4",
            "mov r6, r2",
            "ldr r5, [r4, r3]",
            "ldrb r3, [r5]",
            "cmp r3, 3",
            "bls 0xbfbc",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x5f8",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000c58c]",
            "ldr r0, [0x0000c590]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x168",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x0000c594]",
            "mov r1, sb",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000c598]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r5]",
            "cmp r3, 3",
            "bls 0xc01c",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x5f9",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000c59c]",
            "ldr r0, [0x0000c5a0]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x168",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x0000c5a4]",
            "mov r1, r7",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000c598]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r5]",
            "cmp r3, 3",
            "bls 0xc07c",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x5fa",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000c5a8]",
            "ldr r0, [0x0000c5ac]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x168",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x0000c5b0]",
            "mov r1, r6",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000c598]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r5]",
            "cmp r3, 3",
            "bls 0xc0dc",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x5fb",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000c5b4]",
            "ldr r0, [0x0000c5b8]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x168",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x0000c5bc]",
            "mov r1, r8",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000c598]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x0000c5c0]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "cmp r0, 0",
            "bne 0xc13c",
            "ldrb r3, [r5]",
            "cmp r3, 3",
            "bls 0xc578",
            "bl sym.imp.time",
            "movw r3, 0x605",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000c5c4]",
            "ldr r0, [0x0000c5c8]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x168",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x0000c5cc]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "b 0xc1a4",
            "adds r3, r7, 0",
            "movne r3, 1",
            "cmp r6, 0",
            "movne r3, 0",
            "cmp r3, 0",
            "beq 0xc1b8",
            "ldrb r3, [r5]",
            "cmp r3, 3",
            "bls 0xc578",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x60d",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000c5d0]",
            "ldr r0, [0x0000c5d4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x168",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x0000c5d8]",
            "mov r1, sb",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000c598]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0xc578",
            "cmp sb, 7",
            "addls pc, pc, sb, lsl 2",
            "b 0xc578",
            "b 0xc1e4",
            "b 0xc24c",
            "b 0xc2c0",
            "b 0xc334",
            "b 0xc3a8",
            "b 0xc41c",
            "b 0xc490",
            "b 0xc504",
            "ldrb r3, [r5]",
            "cmp r3, 3",
            "bls 0xc240",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x614",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000c5dc]",
            "ldr r0, [0x0000c5e0]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x168",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x0000c5e4]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000c598]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, lr}",
            "b 0x8740",
            "ldrb r3, [r5]",
            "cmp r3, 3",
            "bls 0xc2a8",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x618",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000c5e8]",
            "ldr r0, [0x0000c5ec]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x168",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x0000c5f0]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000c598]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, r7",
            "mov r1, r6",
            "mov r2, r8",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, lr}",
            "b fcn.000089f8",
            "ldrb r3, [r5]",
            "cmp r3, 3",
            "bls 0xc31c",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x61c",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000c5f4]",
            "ldr r0, [0x0000c5f8]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x168",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x0000c5fc]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000c598]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, r7",
            "mov r1, r6",
            "mov r2, r8",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, lr}",
            "b fcn.000085b4",
            "ldrb r3, [r5]",
            "cmp r3, 3",
            "bls 0xc390",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0x620",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000c600]",
            "ldr r0, [0x0000c604]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x168",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x0000c608]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000c598]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, r7",
            "mov r1, r6",
            "mov r2, r8",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, lr}",
            "b 0x9634",
            "ldrb r3, [r5]",
            "cmp r3, 3",
            "bls 0xc404",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x624",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000c60c]",
            "ldr r0, [0x0000c610]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x168",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x0000c614]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000c598]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, r7",
            "mov r1, r6",
            "mov r2, r8",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, lr}",
            "b 0x8698",
            "ldrb r3, [r5]",
            "cmp r3, 3",
            "bls 0xc478",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x628",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000c618]",
            "ldr r0, [0x0000c61c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x168",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x0000c620]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000c598]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, r7",
            "mov r1, r6",
            "mov r2, r8",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, lr}",
            "b 0x931c",
            "ldrb r3, [r5]",
            "cmp r3, 3",
            "bls 0xc4ec",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x62c",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000c624]",
            "ldr r0, [0x0000c628]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x168",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x0000c62c]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000c598]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, r7",
            "mov r1, r6",
            "mov r2, r8",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, lr}",
            "b 0x913c",
            "ldrb r3, [r5]",
            "cmp r3, 3",
            "bls 0xc560",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0x630",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000c630]",
            "ldr r0, [0x0000c634]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x168",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x0000c638]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000c598]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, r7",
            "mov r1, r6",
            "mov r2, r8",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, lr}",
            "b 0x922c",
            "mov r0, 0x10",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, pc}"
        ]
    },
    "sym.SecurityCtrl_parseM2": {
        "function_address": "0x00011364",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x384]!",
            "push {r0, r1, r2, r4, r5, r6, r7, lr}",
            "mov r7, r0",
            "ldr r4, [0x000113f4]",
            "mov r6, r1",
            "ldr r3, [0x000113f8]",
            "mov r5, r2",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x113dc",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0xf53",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000113fc]",
            "ldr r0, [0x00011400]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x430",
            "add r3, r3, 0xf",
            "bl sym.imp.printf",
            "mov r0, 0xa",
            "bl sym.imp.putchar",
            "ldr r3, [0x00011404]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, r7",
            "mov r1, r6",
            "mov r2, r5",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, lr}",
            "b 0x9178"
        ]
    },
    "sym.imp.putchar": {
        "function_address": "0x00008578",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0xb84]!"
        ]
    },
    "sym.zyNetCtrl_SpeedTest_setSpeedTestStartStop": {
        "function_address": "0x0002b320",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x22c",
            "ldr r4, [0x0002b560]",
            "mov r6, r0",
            "ldr r3, [0x0002b564]",
            "mov r5, r1",
            "add r4, pc, r4",
            "mov sb, r2",
            "ldr r8, [sp, 0x250]",
            "ldr fp, [r4, r3]",
            "ldrb r3, [fp]",
            "cmp r3, 3",
            "bls 0x2b39c",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x231",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002b568]",
            "ldr r0, [0x0002b56c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xfa",
            "bl sym.imp.printf",
            "mov r0, 0xa",
            "bl sym.imp.putchar",
            "ldr r3, [0x0002b570]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r7, 0",
            "mov r2, 0x1fc",
            "str r7, [sp, 0x28]",
            "mov r1, r7",
            "add r0, sp, 0x2c",
            "add sl, sp, 0x28",
            "bl sym.imp.memset",
            "ldr r3, [sp, 0x25c]",
            "mov r0, sl",
            "ldr r2, [sp, 0x258]",
            "str r3, [sp, 8]",
            "ldrb r3, [r6]",
            "ldr r1, [0x0002b574]",
            "str r3, [sp, 0xc]",
            "ldrb r3, [r6, 1]",
            "add r1, pc, r1",
            "str r3, [sp, 0x10]",
            "ldrb r3, [r6, 2]",
            "str r2, [sp, 4]",
            "mov r2, r5",
            "str r3, [sp, 0x14]",
            "ldrb r3, [r6, 3]",
            "str r8, [sp]",
            "str r3, [sp, 0x18]",
            "ldrb r3, [r6, 4]",
            "str r3, [sp, 0x1c]",
            "ldrb r3, [r6, 5]",
            "str r3, [sp, 0x20]",
            "mov r3, sb",
            "bl sym.imp.sprintf",
            "mov r0, sl",
            "bl loc.imp.Outputlog",
            "ldr r3, [0x0002b578]",
            "ldr r2, [sp, 0x258]",
            "ldr r3, [r4, r3]",
            "ldr r1, [sp, 0x25c]",
            "str r2, [r3]",
            "ldr r3, [0x0002b57c]",
            "ldr r0, [r4, r3]",
            "bl sym.imp.strcpy",
            "mov r1, r7",
            "mov r0, r7",
            "bl fcn.000093c4",
            "ldr r3, [0x0002b580]",
            "ldr r1, [sp, 0x254]",
            "ldr r0, [r4, r3]",
            "bl sym.imp.strcpy",
            "cmp r5, 1",
            "bne 0x2b528",
            "mov r0, r7",
            "bl sym.imp.time",
            "ldr r3, [0x0002b584]",
            "ldr r3, [r4, r3]",
            "ldr r2, [r3]",
            "rsb r2, r2, r0",
            "cmp r2, 4",
            "bgt 0x2b4e0",
            "ldrb r3, [fp]",
            "cmp r3, 3",
            "bls 0x2b4d8",
            "mov r0, r7",
            "bl sym.imp.time",
            "movw r3, 0x24b",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002b588]",
            "ldr r0, [0x0002b58c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xfa",
            "bl sym.imp.printf",
            "ldr r0, [0x0002b590]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0002b570]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, 0x10",
            "b 0x2b558",
            "str r0, [r3]",
            "ldr r0, [0x0002b594]",
            "add r0, pc, r0",
            "bl sym.imp.system",
            "ldr r3, [0x0002b598]",
            "mov r1, r8",
            "ldr r0, [r4, r3]",
            "bl sym.imp.strcpy",
            "mov r0, r8",
            "bl fcn.0000859c",
            "mov r0, r5",
            "mov r1, r6",
            "bl fcn.000093c4",
            "ldr r3, [0x0002b59c]",
            "mov r0, r7",
            "ldr r3, [r4, r3]",
            "str sb, [r3]",
            "b 0x2b558",
            "cmp r5, 0",
            "bne 0x2b4d8",
            "mov r1, r5",
            "mov r0, r5",
            "bl fcn.000093c4",
            "ldr r3, [0x0002b584]",
            "ldr r0, [0x0002b5a0]",
            "ldr r3, [r4, r3]",
            "add r0, pc, r0",
            "str r5, [r3]",
            "bl sym.imp.system",
            "mov r0, r5",
            "add sp, sp, 0x22c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "loc.imp.Outputlog": {
        "function_address": "0x00008a88",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x824]!"
        ]
    },
    "fcn.000093c4": {
        "function_address": "0x000093c4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x1fc]!"
        ]
    },
    "fcn.0000859c": {
        "function_address": "0x0000859c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0xb6c]!"
        ]
    },
    "sym.wps_validate_m7": {
        "function_address": "0x0002fd48",
        "instructions": [
            "cmp r0, 0",
            "beq 0x2fdf8",
            "push {r4, r5, lr}",
            "sub sp, sp, 0x1ec",
            "mov r1, sp",
            "bl fcn.00008c8c",
            "cmp r0, 0",
            "bge 0x2fd70",
            "mvn r0, 0",
            "b 0x2fdf0",
            "ldr r5, [sp, 4]",
            "ldr r0, [sp]",
            "adds r4, r5, 0",
            "movne r4, 1",
            "bl fcn.0002f058",
            "cmp r0, 0",
            "bne 0x2fdc0",
            "ldr r0, [sp, 8]",
            "bl fcn.0002efd8",
            "cmp r0, 0",
            "bne 0x2fdc0",
            "ldr r3, [sp, 0x10]",
            "cmp r3, 0",
            "beq 0x2fdc0",
            "ldr r3, [sp, 0xdc]",
            "ldr r2, [sp, 0xe0]",
            "cmp r3, 0",
            "beq 0x2fdc0",
            "cmp r2, 0xf",
            "bhi 0x2fdd0",
            "cmp r4, 0",
            "bne 0x2fd68",
            "mov r0, r4",
            "b 0x2fdf0",
            "mov r0, r5",
            "mov r1, r4",
            "bl fcn.0002ed7c",
            "cmp r0, 0",
            "bne 0x2fdc0",
            "ldr r3, [sp, 0x4c]",
            "cmp r3, 0",
            "beq 0x2fdc0",
            "add sp, sp, 0x1ec",
            "pop {r4, r5, pc}",
            "mvn r0, 0",
            "bx lr"
        ]
    },
    "fcn.00008c8c": {
        "function_address": "0x00008c8c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x6cc]!"
        ]
    },
    "fcn.0002f058": {
        "function_address": "0x0002f058",
        "instructions": [
            "cmp r0, 0",
            "beq 0x2f070",
            "ldrb r0, [r0]",
            "subs r0, r0, 0x10",
            "mvnne r0, 0",
            "bx lr",
            "mvn r0, 0",
            "bx lr"
        ]
    },
    "fcn.0002efd8": {
        "function_address": "0x0002efd8",
        "instructions": [
            "cmp r0, 0",
            "beq 0x2eff8",
            "ldrb r0, [r0]",
            "sub r0, r0, 1",
            "cmp r0, 0xe",
            "movls r0, 0",
            "mvnhi r0, 0",
            "bx lr",
            "mvn r0, 0",
            "bx lr"
        ]
    },
    "fcn.0002ed7c": {
        "function_address": "0x0002ed7c",
        "instructions": [
            "cmp r0, 0",
            "bne 0x2ed90",
            "adds r0, r1, 0",
            "mvnne r0, 0",
            "bx lr",
            "ldrb r0, [r0]",
            "cmp r0, 0x1f",
            "movhi r0, 0",
            "mvnls r0, 0",
            "bx lr"
        ]
    },
    "sym.bignum_sub": {
        "function_address": "0x00037634",
        "instructions": [
            "push {r3, lr}",
            "bl fcn.0003536c",
            "adds r0, r0, 0",
            "mvnne r0, 0",
            "pop {r3, pc}"
        ]
    },
    "fcn.0003536c": {
        "function_address": "0x0003536c",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r6, r0",
            "ldr r5, [r0, 8]",
            "mov r7, r1",
            "ldr r3, [r1, 8]",
            "mov r4, r2",
            "cmp r5, r3",
            "beq 0x35398",
            "str r5, [r2, 8]",
            "pop {r3, r4, r5, r6, r7, lr}",
            "b fcn.0003510c",
            "bl fcn.00034c1c",
            "cmn r0, 1",
            "clzeq r5, r5",
            "lsreq r5, r5, 5",
            "movne r0, r6",
            "strne r5, [r4, 8]",
            "movne r1, r7",
            "streq r5, [r4, 8]",
            "moveq r0, r7",
            "moveq r1, r6",
            "mov r2, r4",
            "pop {r3, r4, r5, r6, r7, lr}",
            "b fcn.00035228"
        ]
    },
    "fcn.00034c1c": {
        "function_address": "0x00034c1c",
        "instructions": [
            "ldr r2, [r0]",
            "ldr r3, [r1]",
            "cmp r2, r3",
            "bgt 0x34c84",
            "blt 0x34c8c",
            "sub r3, r2, 0xc0000001",
            "push {r4, lr}",
            "mvn lr, 3",
            "ldr r0, [r0, 0xc]",
            "ldr ip, [r1, 0xc]",
            "lsl r3, r3, 2",
            "add r0, r0, r3",
            "add ip, ip, r3",
            "mov r3, 0",
            "cmp r3, r2",
            "bge 0x34c7c",
            "mul r1, lr, r3",
            "ldr r4, [r0, r1]",
            "ldr r1, [ip, r1]",
            "cmp r4, r1",
            "bhi 0x34c94",
            "blo 0x34c9c",
            "add r3, r3, 1",
            "b 0x34c54",
            "mov r0, 0",
            "pop {r4, pc}",
            "mov r0, 1",
            "bx lr",
            "mvn r0, 0",
            "bx lr",
            "mov r0, 1",
            "pop {r4, pc}",
            "mvn r0, 0",
            "pop {r4, pc}"
        ]
    },
    "fcn.00034f34": {
        "function_address": "0x00034f34",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r4, r0",
            "ldr r3, [r0, 4]",
            "cmp r3, r1",
            "bge 0x34fb4",
            "ldr r0, [r0, 0xc]",
            "ands r3, r1, 0x80000007",
            "submi r3, r3, 1",
            "mvnmi r3, r3, lsl 29",
            "mvnmi r3, r3, lsr 29",
            "addmi r3, r3, 1",
            "rsb r3, r3, 0x10",
            "add r5, r1, r3",
            "lsl r1, r5, 2",
            "bl sym.imp.realloc",
            "cmp r0, 0",
            "beq 0x34fac",
            "ldr r2, [r4, 4]",
            "str r0, [r4, 0xc]",
            "mov r0, 0",
            "lsl r3, r2, 2",
            "str r5, [r4, 4]",
            "ldr r1, [r4, 4]",
            "cmp r2, r1",
            "bge 0x34fb4",
            "ldr r1, [r4, 0xc]",
            "add r2, r2, 1",
            "str r0, [r1, r3]",
            "add r3, r3, 4",
            "b 0x34f8c",
            "mvn r0, 1",
            "pop {r3, r4, r5, pc}",
            "mov r0, 0",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.imp.realloc": {
        "function_address": "0x00008f20",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x514]!"
        ]
    },
    "sym.getFwdRuleByIndex": {
        "function_address": "0x0000c93c",
        "instructions": [
            "push {r0, r1, r4, lr}",
            "ldr r4, [0x0000c9d4]",
            "ldr r3, [0x0000c9d8]",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0xc9ac",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x70f",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000c9dc]",
            "ldr r0, [0x0000c9e0]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x1a8",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x0000c9e4]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000c9e8]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x0000c9ec]",
            "mov r0, 2",
            "ldr r3, [r4, r3]",
            "ldr r1, [r3]",
            "bl fcn.00008980",
            "cmp r0, 0",
            "movne r0, 0x10",
            "moveq r0, 0",
            "add sp, sp, 8",
            "pop {r4, pc}"
        ]
    },
    "sym.FW_runCheckFW": {
        "function_address": "0x00023e0c",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "sub sp, sp, 0x218",
            "ldr r4, [0x00023ee8]",
            "ldr r3, [0x00023eec]",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x23e7c",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x1f7",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00023ef0]",
            "ldr r0, [0x00023ef4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x63",
            "bl sym.imp.printf",
            "ldr r0, [0x00023ef8]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00023efc]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r4, 0",
            "add r0, sp, 0x1c",
            "str r4, [sp, 0x18]",
            "mov r1, r4",
            "mov r2, 0x1fc",
            "add r6, sp, 8",
            "bl sym.imp.memset",
            "str r4, [sp, 8]",
            "mov r1, r4",
            "mov r2, 0xc",
            "add r0, sp, 0xc",
            "bl sym.imp.memset",
            "mov r0, r6",
            "add r5, sp, 0x18",
            "bl loc.imp.getzy1905Version",
            "ldr r1, [0x00023f00]",
            "mov r3, r6",
            "ldr r2, [0x00023f04]",
            "mov r0, r5",
            "add r1, pc, r1",
            "add r2, pc, r2",
            "bl sym.imp.sprintf",
            "mov r0, r5",
            "bl sym.imp.system",
            "mov r0, r4",
            "add sp, sp, 0x218",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "loc.imp.getzy1905Version": {
        "function_address": "0x00009358",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x244]!"
        ]
    },
    "sym.zyNetCtrl_FWCtrl_DownloadNewFW": {
        "function_address": "0x00028288",
        "instructions": [
            "push {r0, r1, r2, r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r6, r0",
            "ldr r4, [0x000284b0]",
            "mov sl, r1",
            "ldr r3, [0x000284b4]",
            "mov sb, r2",
            "add r4, pc, r4",
            "ldr r7, [r4, r3]",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x28304",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0xe9",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000284b8]",
            "ldr r0, [0x000284bc]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x22c",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x000284c0]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x000284c4]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "bl fcn.000087ac",
            "subs r5, r0, 0",
            "bne 0x28394",
            "ldr r3, [0x000284c8]",
            "ldr r8, [r4, r3]",
            "ldr r3, [r8]",
            "mov fp, r8",
            "cmp r3, 2",
            "bne 0x2839c",
            "bl fcn.0000898c",
            "ldr r3, [r8]",
            "cmp r3, 2",
            "bne 0x2839c",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x28394",
            "mov r0, r5",
            "bl sym.imp.time",
            "mov r3, 0xf6",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000284cc]",
            "ldr r0, [0x000284d0]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x22c",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x000284d4]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x000284c4]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r5, 0x10",
            "b 0x284a4",
            "ldr r3, [0x000284d8]",
            "mov r0, 0",
            "str r0, [fp]",
            "ldr r3, [r4, r3]",
            "ldr r8, [r3]",
            "cmp r8, 4",
            "bne 0x28400",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x28394",
            "bl sym.imp.time",
            "mov r3, 0xfe",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, r8",
            "ldr r3, [0x000284dc]",
            "ldr r0, [0x000284e0]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x22c",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x000284e4]",
            "add r0, pc, r0",
            "b 0x28380",
            "cmp sb, 0",
            "beq 0x28418",
            "ldr r3, [0x000284e8]",
            "mov r1, sb",
            "ldr r0, [r4, r3]",
            "bl sym.imp.strcpy",
            "cmp r6, 0",
            "bne 0x28490",
            "ldr r3, [0x000284ec]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "cmp r3, 8",
            "beq 0x28480",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x28394",
            "mov r0, r6",
            "bl sym.imp.time",
            "movw r3, 0x10d",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000284f0]",
            "ldr r0, [0x000284f4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x22c",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x000284f8]",
            "add r0, pc, r0",
            "b 0x28380",
            "mov r0, r6",
            "mov r1, r6",
            "bl fcn.0000862c",
            "b 0x284a4",
            "cmp r6, 1",
            "bne 0x28394",
            "mov r0, sl",
            "mov r1, 0",
            "bl fcn.00008620",
            "mov r0, r5",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.000087ac": {
        "function_address": "0x000087ac",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0xa0c]!"
        ]
    },
    "fcn.0000898c": {
        "function_address": "0x0000898c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x8cc]!"
        ]
    },
    "fcn.0000862c": {
        "function_address": "0x0000862c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0xb0c]!"
        ]
    },
    "fcn.00008620": {
        "function_address": "0x00008620",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0xb14]!"
        ]
    },
    "sym.zyNetCtrl_check_intf_bridge": {
        "function_address": "0x000175fc",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r5, 0",
            "ldr r3, [0x00017668]",
            "ldr r2, [0x0001766c]",
            "add r3, pc, r3",
            "ldr r6, [0x00017670]",
            "ldr r3, [r3, r2]",
            "ldr r7, [0x00017674]",
            "ldr r4, [r3]",
            "add r6, pc, r6",
            "add r7, pc, r7",
            "cmp r4, 0",
            "beq 0x17660",
            "add r0, r4, 0x14",
            "mov r1, r6",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x17658",
            "add r0, r4, 4",
            "mov r1, r7",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "moveq r5, 1",
            "ldr r4, [r4]",
            "b 0x17628",
            "mov r0, r5",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "sym.imp.strcmp": {
        "function_address": "0x00009190",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x374]!"
        ]
    },
    "sym.wpabuf_concat": {
        "function_address": "0x0002ea9c",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "subs r5, r1, 0",
            "mov r4, r0",
            "beq 0x2eb08",
            "cmp r0, 0",
            "moveq r3, r0",
            "ldrne r3, [r0, 4]",
            "ldr r0, [r5, 4]",
            "add r0, r3, r0",
            "bl fcn.00008ddc",
            "subs r6, r0, 0",
            "beq 0x2eaf0",
            "cmp r4, 0",
            "beq 0x2eae0",
            "ldr r1, [r4, 8]",
            "ldr r2, [r4, 4]",
            "bl fcn.0002ea18",
            "ldr r1, [r5, 8]",
            "mov r0, r6",
            "ldr r2, [r5, 4]",
            "bl fcn.0002ea18",
            "mov r0, r4",
            "bl fcn.00008f74",
            "mov r0, r5",
            "bl fcn.00008f74",
            "mov r0, r6",
            "pop {r4, r5, r6, pc}",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.00008ddc": {
        "function_address": "0x00008ddc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x5ec]!"
        ]
    },
    "fcn.0002ea18": {
        "function_address": "0x0002ea18",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "subs r5, r1, 0",
            "popeq {r3, r4, r5, pc}",
            "mov r4, r2",
            "mov r1, r2",
            "bl fcn.000086d4",
            "mov r1, r5",
            "mov r2, r4",
            "pop {r3, r4, r5, lr}",
            "b sym.imp.memcpy"
        ]
    },
    "fcn.00008f74": {
        "function_address": "0x00008f74",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x4dc]!"
        ]
    },
    "fcn.000086d4": {
        "function_address": "0x000086d4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0xa9c]!"
        ]
    },
    "sym.zyNetCtrl_printDeviceInterface": {
        "function_address": "0x000176f8",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r0",
            "ldr r5, [0x00017bbc]",
            "sub sp, sp, 0x1c",
            "ldr r3, [0x00017bc0]",
            "add r5, pc, r5",
            "ldr r6, [r5, r3]",
            "ldrb r3, [r6]",
            "cmp r3, 4",
            "bls 0x17774",
            "mov r0, 0",
            "movw r7, 0xc9b",
            "bl sym.imp.time",
            "ldr r3, [0x00017bc4]",
            "mov r1, r0",
            "ldr r0, [0x00017bc8]",
            "mov r2, 5",
            "add r3, pc, r3",
            "str r7, [sp]",
            "add r3, r3, 0x104",
            "add r0, pc, r0",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x00017bcc]",
            "mov r1, r7",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00017bd0]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 4",
            "bls 0x177d4",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0xc9c",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 5",
            "ldr r3, [0x00017bd4]",
            "ldr r0, [0x00017bd8]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x104",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x00017bdc]",
            "add r1, r4, 4",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00017bd0]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 4",
            "bls 0x17854",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0xc9d",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 5",
            "ldr r3, [0x00017be0]",
            "ldr r0, [0x00017be4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x104",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldrb r0, [r4, 0x17]",
            "ldrb r3, [r4, 0x16]",
            "str r0, [sp]",
            "ldrb r0, [r4, 0x18]",
            "ldrb r1, [r4, 0x14]",
            "str r0, [sp, 4]",
            "ldrb r0, [r4, 0x19]",
            "ldrb r2, [r4, 0x15]",
            "str r0, [sp, 8]",
            "ldr r0, [0x00017be8]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00017bd0]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 4",
            "bls 0x178b4",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0xc9e",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 5",
            "ldr r3, [0x00017bec]",
            "ldr r0, [0x00017bf0]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x104",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x00017bf4]",
            "ldr r1, [r4, 0x1c]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00017bd0]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 4",
            "bls 0x17914",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0xc9f",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 5",
            "ldr r3, [0x00017bf8]",
            "ldr r0, [0x00017bfc]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x104",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x00017c00]",
            "ldr r1, [r4, 0x20]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00017bd0]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 4",
            "bls 0x17974",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0xca0",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 5",
            "ldr r3, [0x00017c04]",
            "ldr r0, [0x00017c08]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x104",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x00017c0c]",
            "ldr r1, [r4, 0x24]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00017bd0]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 4",
            "bls 0x179d4",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0xca1",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 5",
            "ldr r3, [0x00017c10]",
            "ldr r0, [0x00017c14]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x104",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x00017c18]",
            "ldrb r1, [r4, 0x28]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00017bd0]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 4",
            "bls 0x17a34",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0xca2",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 5",
            "ldr r3, [0x00017c1c]",
            "ldr r0, [0x00017c20]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x104",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x00017c24]",
            "ldr r1, [r4, 0x2c]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00017bd0]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 4",
            "bls 0x17a94",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0xca3",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 5",
            "ldr r3, [0x00017c28]",
            "ldr r0, [0x00017c2c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x104",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x00017c30]",
            "ldr r1, [r4, 0x30]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00017bd0]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 4",
            "bls 0x17af4",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0xca5",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 5",
            "ldr r3, [0x00017c34]",
            "ldr r0, [0x00017c38]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x104",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x00017c3c]",
            "ldrh r1, [r4, 0x40]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00017bd0]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrh r3, [r4, 0x40]",
            "cmp r3, 0",
            "beq 0x17bb4",
            "ldr sb, [0x00017c40]",
            "mov r8, 0",
            "ldr fp, [0x00017c44]",
            "mov r7, r8",
            "add sb, pc, sb",
            "movw sl, 0xcac",
            "ldr r3, [0x00017c48]",
            "add sb, sb, 0x104",
            "add fp, pc, fp",
            "add sb, sb, 2",
            "add r3, pc, r3",
            "str r3, [sp, 0x14]",
            "ldrh r3, [r4, 0x40]",
            "cmp r7, r3",
            "bge 0x17bb4",
            "ldrb r3, [r6]",
            "cmp r3, 4",
            "bls 0x17ba8",
            "mov r0, 0",
            "bl sym.imp.time",
            "str sl, [sp]",
            "mov r1, r0",
            "ldr r0, [sp, 0x14]",
            "mov r2, 5",
            "mov r3, sb",
            "bl sym.imp.printf",
            "ldr r0, [r4, 0x44]",
            "ldrb r1, [r0, r8]!",
            "ldrb lr, [r0, 3]",
            "ldrb r3, [r0, 2]",
            "ldrb r2, [r0, 1]",
            "str lr, [sp]",
            "ldrb lr, [r0, 4]",
            "str lr, [sp, 4]",
            "ldrb r0, [r0, 5]",
            "str r0, [sp, 8]",
            "mov r0, fp",
            "bl sym.imp.printf",
            "ldr r3, [0x00017bd0]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "add r8, r8, 6",
            "add r7, r7, 1",
            "b 0x17b30",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.zyNetCtrl_setNetworkCtrl": {
        "function_address": "0x00017678",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "sub sp, sp, 0x400",
            "mov r5, r0",
            "mov r4, r1",
            "add r0, sp, 4",
            "mov r1, 0",
            "str r1, [sp]",
            "mov r2, 0x3fc",
            "bl sym.imp.memset",
            "cmp r5, 1",
            "movne r0, 0x10",
            "bne 0x176e8",
            "ldr r1, [0x000176f0]",
            "mov r0, r4",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x176e0",
            "ldr r1, [0x000176f4]",
            "mov r0, sp",
            "mov r2, r5",
            "mov r3, r4",
            "add r1, pc, r1",
            "bl sym.imp.sprintf",
            "mov r0, sp",
            "bl sym.imp.system",
            "bl loc.imp.updateNetworkState",
            "mov r0, 0",
            "add sp, sp, 0x400",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "loc.imp.updateNetworkState": {
        "function_address": "0x00009280",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x2d4]!"
        ]
    },
    "sym.wpabuf_put": {
        "function_address": "0x0002e9ec",
        "instructions": [
            "push {r3, lr}",
            "mov r3, r0",
            "ldr r2, [r0, 4]",
            "ldr r0, [r0, 8]",
            "add r1, r2, r1",
            "str r1, [r3, 4]",
            "ldr r3, [r3]",
            "add r0, r0, r2",
            "cmp r1, r3",
            "popls {r3, pc}",
            "bl sym.imp.abort"
        ]
    },
    "sym.imp.abort": {
        "function_address": "0x00008b54",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x79c]!"
        ]
    },
    "sym.zyNetCtrl_WPS_getDeviceConfig": {
        "function_address": "0x0001a418",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x660",
            "ldr r6, [0x0001b038]",
            "sub sp, sp, 0xc",
            "mov r5, r3",
            "mov r4, r1",
            "add r6, pc, r6",
            "ldr r3, [0x0001b03c]",
            "str r0, [sp, 0x14]",
            "str r2, [sp, 0x10]",
            "ldr r8, [r6, r3]",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "bls 0x1a49c",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0xa9",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001b040]",
            "ldr r0, [0x0001b044]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x17",
            "bl sym.imp.printf",
            "ldr r0, [0x0001b048]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0001b1e8]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "cmp r4, 0",
            "beq 0x1a790",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "bls 0x1a4fc",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0xaf",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001b04c]",
            "ldr r0, [0x0001b050]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x17",
            "bl sym.imp.printf",
            "ldr r0, [0x0001b054]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0001b1e8]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r1, 0",
            "add r0, sp, 0x2c",
            "str r1, [sp, 0x28]",
            "mov r2, 0x3c",
            "bl sym.imp.memset",
            "ldr r3, [0x0001b058]",
            "ldr r3, [r6, r3]",
            "ldr r3, [r3]",
            "cmp r3, 1",
            "beq 0x1a52c",
            "cmp r5, 1",
            "bne 0x1a540",
            "ldr r1, [0x0001b05c]",
            "add r0, sp, 0x28",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "b 0x1a57c",
            "ldr r3, [0x0001b060]",
            "ldr r3, [r6, r3]",
            "ldr r1, [r3]",
            "cmp r1, 0",
            "beq 0x1a790",
            "ldrb r3, [r1, 4]",
            "ldr r2, [sp, 0x10]",
            "cmp r3, r2",
            "bne 0x1a574",
            "add r0, sp, 0x28",
            "add r1, r1, 5",
            "bl sym.imp.sprintf",
            "b 0x1a57c",
            "ldr r1, [r1]",
            "b 0x1a54c",
            "ldr r3, [sp, 0x10]",
            "add r5, sp, 0x28",
            "strb r3, [r4, 0xc8]",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "bls 0x1a5e4",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0xe3",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001b064]",
            "ldr r0, [0x0001b068]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x17",
            "bl sym.imp.printf",
            "ldr r0, [0x0001b06c]",
            "mov r1, r5",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0001b1e8]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r1, [0x0001b070]",
            "mov r0, r5",
            "add r1, pc, r1",
            "bl sym.imp.fopen",
            "subs sb, r0, 0",
            "bne 0x1a658",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "bls 0x1a790",
            "bl sym.imp.time",
            "mov r3, 0xe9",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001b074]",
            "ldr r0, [0x0001b078]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x17",
            "bl sym.imp.printf",
            "ldr r0, [0x0001b07c]",
            "mov r1, r5",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0001b1e8]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0x1a790",
            "mov r1, 0",
            "mov r2, 0x1fc",
            "str r1, [sp, 0x68]",
            "add r0, sp, 0x6c",
            "bl sym.imp.memset",
            "ldr r3, [0x0001b080]",
            "ldr r1, [0x0001b084]",
            "add r3, pc, r3",
            "ldr r2, [0x0001b088]",
            "add r3, r3, 0x17",
            "str r3, [sp, 0x20]",
            "ldr r3, [0x0001b08c]",
            "add r1, pc, r1",
            "add r3, pc, r3",
            "add r2, pc, r2",
            "add r3, r3, 0x17",
            "str r1, [sp, 0x18]",
            "str r2, [sp, 0x1c]",
            "str r3, [sp, 0x24]",
            "b 0x1a6e8",
            "mov fp, 0",
            "mov r2, 0x1fc",
            "str fp, [sp, 0x268]",
            "mov r1, fp",
            "add r0, sp, 0x26c",
            "bl sym.imp.memset",
            "str fp, [sp, 0x468]",
            "add r0, sp, 0x460",
            "mov r2, 0x1fc",
            "add r0, r0, 0xc",
            "mov r1, fp",
            "bl sym.imp.memset",
            "ldrb r3, [sp, 0x68]",
            "cmp r3, 0x23",
            "movne r2, fp",
            "bne 0x1a798",
            "add sl, sp, 0x68",
            "mov r1, 0x200",
            "mov r0, sl",
            "mov r2, sb",
            "bl sym.imp.fgets",
            "cmp r0, 0",
            "beq 0x1b1ec",
            "ldr r1, [sp, 0x18]",
            "mov r0, sl",
            "mov r2, 0xa",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "bne 0x1a6a8",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "bls 0x1a770",
            "bl sym.imp.time",
            "mov r3, 0xf3",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001b090]",
            "ldr r0, [0x0001b094]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x17",
            "bl sym.imp.printf",
            "ldr r0, [0x0001b098]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0001b1e8]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r1, [sp, 0x10]",
            "ldr r0, [sp, 0x14]",
            "bl loc.imp.sendAPautoconfigack",
            "ldr r0, [sp, 0x10]",
            "mov r1, 0",
            "bl loc.imp.setAPautoconfigFlagToRenew",
            "mov r0, sb",
            "bl sym.imp.fclose",
            "mov r0, 0x10",
            "b 0x1b5f8",
            "ldrb r3, [sl, fp]",
            "cmp r3, 0",
            "beq 0x1a7b4",
            "cmp r3, 0xa",
            "strbeq r2, [sl, fp]",
            "add fp, fp, 1",
            "b 0x1a798",
            "ldrb r2, [sp, 0x68]",
            "cmp r2, 0",
            "beq 0x1a6e8",
            "ldrb r2, [sl, r3]",
            "cmp r2, 0",
            "beq 0x1a7d4",
            "cmp r2, 0x3d",
            "bne 0x1a850",
            "str r3, [sp, 0xc]",
            "add r7, sp, 0x268",
            "mov r1, sl",
            "mov r2, r3",
            "mov r0, r7",
            "add r5, sp, 0x460",
            "bl sym.imp.memcpy",
            "ldr r3, [sp, 0xc]",
            "add r1, sp, 0x660",
            "add r1, r1, 8",
            "mov ip, 0",
            "add r2, r1, r3",
            "add r5, r5, 8",
            "add r1, r3, 1",
            "mov r0, r5",
            "strb ip, [r2, -0x400]",
            "mov r2, fp",
            "add r1, sl, r1",
            "str ip, [sp, 0xc]",
            "bl sym.imp.memcpy",
            "ldr ip, [sp, 0xc]",
            "add r2, sp, 0x660",
            "ldr r1, [sp, 0x1c]",
            "add r2, r2, 8",
            "add fp, r2, fp",
            "mov r0, r7",
            "strb ip, [fp, -0x200]",
            "bl sym.imp.strcmp",
            "subs sl, r0, 0",
            "beq 0x1a858",
            "b 0x1a8b4",
            "add r3, r3, 1",
            "b 0x1a7c0",
            "mov r0, r5",
            "bl sym.imp.atoi",
            "str r0, [r4, 4]",
            "cmp r0, 2",
            "bls 0x1a6e8",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "bls 0x1a788",
            "mov r0, sl",
            "bl sym.imp.time",
            "movw r3, 0x121",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001b09c]",
            "ldr r0, [0x0001b0a0]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x17",
            "bl sym.imp.printf",
            "ldr r0, [0x0001b0a4]",
            "add r0, pc, r0",
            "b 0x1ab74",
            "ldr r1, [0x0001b0a8]",
            "mov r0, r7",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x1a8dc",
            "mov r0, r5",
            "bl sym.imp.atoi",
            "str r0, [r4, 8]",
            "b 0x1a6e8",
            "ldr r1, [0x0001b0ac]",
            "mov r0, r7",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x1a90c",
            "mov r0, r5",
            "add r1, r4, 0xc",
            "bl fcn.00008f80",
            "cmp r0, 0",
            "beq 0x1a6e8",
            "b 0x1a788",
            "ldr r1, [0x0001b0b0]",
            "mov r0, r7",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x1a934",
            "mov r0, r5",
            "bl sym.imp.atoi",
            "str r0, [r4, 0x14]",
            "b 0x1a6e8",
            "ldr r1, [0x0001b0b4]",
            "mov r0, r7",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "subs sl, r0, 0",
            "bne 0x1a9bc",
            "mov r0, r5",
            "bl sym.imp.strlen",
            "cmp r0, 0x20",
            "bls 0x1a9a4",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "bls 0x1a788",
            "mov r0, sl",
            "bl sym.imp.time",
            "movw r3, 0x13a",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001b0b8]",
            "ldr r0, [0x0001b0bc]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x17",
            "bl sym.imp.printf",
            "ldr r0, [0x0001b0c0]",
            "add r0, pc, r0",
            "b 0x1ab74",
            "ldr r0, [r4, 0x18]",
            "bl fcn.00008cec",
            "mov r0, r5",
            "bl sym.imp.strdup",
            "str r0, [r4, 0x18]",
            "b 0x1a6e8",
            "ldr r1, [0x0001b0c4]",
            "mov r0, r7",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "subs sl, r0, 0",
            "bne 0x1aa44",
            "mov r0, r5",
            "bl sym.imp.strlen",
            "cmp r0, 0x40",
            "bls 0x1aa2c",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "bls 0x1a788",
            "mov r0, sl",
            "bl sym.imp.time",
            "movw r3, 0x145",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001b0c8]",
            "ldr r0, [0x0001b0cc]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x17",
            "bl sym.imp.printf",
            "ldr r0, [0x0001b0d0]",
            "add r0, pc, r0",
            "b 0x1ab74",
            "ldr r0, [r4, 0x1c]",
            "bl fcn.00008cec",
            "mov r0, r5",
            "bl sym.imp.strdup",
            "str r0, [r4, 0x1c]",
            "b 0x1a6e8",
            "ldr r1, [0x0001b0d4]",
            "mov r0, r7",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x1aa74",
            "ldr r0, [r4, 0x20]",
            "bl fcn.00008cec",
            "mov r0, r5",
            "bl sym.imp.strdup",
            "str r0, [r4, 0x20]",
            "b 0x1a6e8",
            "ldr r1, [0x0001b0d8]",
            "mov r0, r7",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x1aaa4",
            "ldr r0, [r4, 0x24]",
            "bl fcn.00008cec",
            "mov r0, r5",
            "bl sym.imp.strdup",
            "str r0, [r4, 0x24]",
            "b 0x1a6e8",
            "ldr r1, [0x0001b0dc]",
            "mov r0, r7",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x1aad4",
            "ldr r0, [r4, 0x28]",
            "bl fcn.00008cec",
            "mov r0, r5",
            "bl sym.imp.strdup",
            "str r0, [r4, 0x28]",
            "b 0x1a6e8",
            "ldr r1, [0x0001b0e0]",
            "mov r0, r7",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x1aafc",
            "mov r0, r5",
            "bl sym.imp.atoi",
            "str r0, [r4]",
            "b 0x1a6e8",
            "ldr r1, [0x0001b0e4]",
            "mov r0, r7",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "subs sl, r0, 0",
            "bne 0x1ab9c",
            "mov r0, r5",
            "bl sym.imp.strlen",
            "str r0, [r4, 0x4c]",
            "sub r3, r0, 1",
            "cmp r3, 0x1f",
            "mov r2, r0",
            "bls 0x1ab84",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "bls 0x1a788",
            "mov r0, sl",
            "bl sym.imp.time",
            "mov r3, 0x164",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001b0e8]",
            "ldr r0, [0x0001b0ec]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x17",
            "bl sym.imp.printf",
            "ldr r0, [0x0001b0f0]",
            "add r0, pc, r0",
            "mov r1, r7",
            "mov r2, r5",
            "bl sym.imp.printf",
            "b 0x1af24",
            "add r0, r4, 0x2c",
            "mov r1, r5",
            "bl sym.imp.memcpy",
            "ldrb r3, [r4, 0x50]",
            "orr r3, r3, 1",
            "b 0x1ac3c",
            "ldr r1, [0x0001b0f4]",
            "mov r0, r7",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "subs sl, r0, 0",
            "bne 0x1ac44",
            "mov r0, r5",
            "bl sym.imp.strlen",
            "sub r3, r0, 8",
            "mov r7, r0",
            "cmp r3, 0x38",
            "bls 0x1ac0c",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "bls 0x1a6e8",
            "mov r0, sl",
            "bl sym.imp.time",
            "mov r1, r0",
            "movw r3, 0x171",
            "ldr r0, [0x0001b0f8]",
            "mov r2, 4",
            "str r3, [sp]",
            "add r0, pc, r0",
            "ldr r3, [sp, 0x24]",
            "bl sym.imp.printf",
            "ldr r0, [0x0001b0fc]",
            "add r0, pc, r0",
            "b 0x1b01c",
            "ldr r0, [r4, 0x6c]",
            "bl fcn.00008cec",
            "mov r0, r5",
            "bl sym.imp.strdup",
            "str r0, [r4, 0x6c]",
            "cmp r0, 0",
            "beq 0x1a6e8",
            "ldr r0, [r4, 0x68]",
            "bl fcn.00008cec",
            "ldrb r3, [r4, 0x50]",
            "str sl, [r4, 0x68]",
            "orr r3, r3, 4",
            "strb r3, [r4, 0x50]",
            "b 0x1a6e8",
            "ldr r1, [0x0001b100]",
            "mov r0, r7",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x1ac70",
            "add r0, r4, 0xa8",
            "mov r1, r5",
            "mov r2, 0x11",
            "bl fcn.00008ce0",
            "b 0x1a6e8",
            "ldr r1, [0x0001b104]",
            "mov r0, r7",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "subs sl, r0, 0",
            "bne 0x1acf8",
            "mov r0, r5",
            "bl sym.imp.strlen",
            "cmp r0, 0x20",
            "bls 0x1ace0",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "bls 0x1a788",
            "mov r0, sl",
            "bl sym.imp.time",
            "movw r3, 0x19d",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001b108]",
            "ldr r0, [0x0001b10c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x17",
            "bl sym.imp.printf",
            "ldr r0, [0x0001b110]",
            "add r0, pc, r0",
            "b 0x1af20",
            "ldr r0, [r4, 0xbc]",
            "bl fcn.00008cec",
            "mov r0, r5",
            "bl sym.imp.strdup",
            "str r0, [r4, 0xbc]",
            "b 0x1a6e8",
            "ldr r1, [0x0001b114]",
            "mov r0, r7",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "subs sl, r0, 0",
            "bne 0x1ad88",
            "mov r0, r5",
            "bl sym.imp.strlen",
            "cmp r0, 0x20",
            "bls 0x1ad70",
            "ldr r3, [0x0001b03c]",
            "ldr r3, [r6, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x1a788",
            "mov r0, sl",
            "bl sym.imp.time",
            "mov r3, 0x1a8",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001b118]",
            "ldr r0, [0x0001b11c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x17",
            "bl sym.imp.printf",
            "ldr r0, [0x0001b120]",
            "add r0, pc, r0",
            "b 0x1af20",
            "ldr r0, [r4, 0xc0]",
            "bl fcn.00008cec",
            "mov r0, r5",
            "bl sym.imp.strdup",
            "str r0, [r4, 0xc0]",
            "b 0x1a6e8",
            "ldr r1, [0x0001b124]",
            "mov r0, r7",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "subs sl, r0, 0",
            "bne 0x1ae18",
            "mov r0, r5",
            "bl sym.imp.strlen",
            "cmp r0, 0x20",
            "bls 0x1ae00",
            "ldr r3, [0x0001b03c]",
            "ldr r3, [r6, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x1a788",
            "mov r0, sl",
            "bl sym.imp.time",
            "movw r3, 0x1b3",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001b128]",
            "ldr r0, [0x0001b12c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x17",
            "bl sym.imp.printf",
            "ldr r0, [0x0001b130]",
            "add r0, pc, r0",
            "b 0x1af20",
            "ldr r0, [r4, 0xc4]",
            "bl fcn.00008cec",
            "mov r0, r5",
            "bl sym.imp.strdup",
            "str r0, [r4, 0xc4]",
            "b 0x1a6e8",
            "ldr r1, [0x0001b134]",
            "mov r0, r7",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x1ae48",
            "ldr r0, [r4, 0xcc]",
            "bl fcn.00008cec",
            "mov r0, r5",
            "bl sym.imp.strdup",
            "str r0, [r4, 0xcc]",
            "b 0x1a6e8",
            "ldr r1, [0x0001b138]",
            "mov r0, r7",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x1ae78",
            "ldr r0, [r4, 0xd0]",
            "bl fcn.00008cec",
            "mov r0, r5",
            "bl sym.imp.strdup",
            "str r0, [r4, 0xd0]",
            "b 0x1a6e8",
            "ldr r1, [0x0001b13c]",
            "mov r0, r7",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x1aea8",
            "ldr r0, [r4, 0xd4]",
            "bl fcn.00008cec",
            "mov r0, r5",
            "bl sym.imp.strdup",
            "str r0, [r4, 0xd4]",
            "b 0x1a6e8",
            "ldr r1, [0x0001b140]",
            "mov r0, r7",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x1af38",
            "mov r0, r5",
            "add r1, r4, 0xd8",
            "bl fcn.00008fa4",
            "cmp r0, 0",
            "beq 0x1a6e8",
            "ldr r3, [0x0001b03c]",
            "ldr r3, [r6, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x1a788",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x1cd",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001b144]",
            "ldr r0, [0x0001b148]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x17",
            "bl sym.imp.printf",
            "ldr r0, [0x0001b14c]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0001b1e8]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0x1a788",
            "ldr r1, [0x0001b150]",
            "mov r0, r7",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x1af60",
            "mov r0, r5",
            "bl sym.imp.atoi",
            "str r0, [r4, 0xec]",
            "b 0x1a6e8",
            "ldr r1, [0x0001b154]",
            "mov r0, r7",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x1af88",
            "mov r0, r5",
            "bl sym.imp.strdup",
            "str r0, [r4, 0xf0]",
            "b 0x1a6e8",
            "ldr r1, [0x0001b158]",
            "mov r0, r7",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x1afb0",
            "mov r0, r5",
            "bl sym.imp.strdup",
            "str r0, [r4, 0xf4]",
            "b 0x1a6e8",
            "ldr r1, [0x0001b15c]",
            "mov r0, r7",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x1afd8",
            "ldr r0, [sp, 0x10]",
            "mov r1, r5",
            "bl loc.imp.setAPautoconfigupdatetime",
            "b 0x1a6e8",
            "ldr r3, [0x0001b03c]",
            "ldr r3, [r6, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x1a6e8",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r1, r0",
            "movw r3, 0x1e5",
            "ldr r0, [0x0001b160]",
            "mov r2, 4",
            "str r3, [sp]",
            "add r0, pc, r0",
            "ldr r3, [sp, 0x20]",
            "bl sym.imp.printf",
            "ldr r0, [0x0001b164]",
            "add r0, pc, r0",
            "mov r1, r7",
            "bl sym.imp.printf",
            "ldr r3, [0x0001b1e8]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0x1a6e8",
            "mov r0, sb",
            "bl sym.imp.fclose",
            "ldr r3, [r4, 4]",
            "sub r3, r3, 1",
            "cmp r3, 1",
            "movhi r3, 1",
            "strhi r3, [r4, 4]",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "bls 0x1b264",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x1f3",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001b168]",
            "ldr r0, [0x0001b16c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x17",
            "bl sym.imp.printf",
            "ldr r0, [0x0001b170]",
            "ldr r1, [r4, 4]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0001b1e8]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "bls 0x1b2c0",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0x1f4",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001b174]",
            "ldr r0, [0x0001b178]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x17",
            "bl sym.imp.printf",
            "ldr r0, [0x0001b17c]",
            "ldr r1, [r4, 8]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0001b1e8]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "bls 0x1b314",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x1fa",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001b180]",
            "ldr r0, [0x0001b184]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x17",
            "bl sym.imp.printf",
            "mov r0, 0xa",
            "bl sym.imp.putchar",
            "ldr r3, [0x0001b1e8]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "bls 0x1b370",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x1fb",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001b188]",
            "ldr r0, [0x0001b18c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x17",
            "bl sym.imp.printf",
            "ldr r0, [0x0001b190]",
            "ldr r1, [r4, 0x14]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0001b1e8]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "bls 0x1b3cc",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0x1fc",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001b194]",
            "ldr r0, [0x0001b198]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x17",
            "bl sym.imp.printf",
            "ldr r0, [0x0001b19c]",
            "ldr r1, [r4, 0x18]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0001b1e8]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "bls 0x1b428",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x1fd",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001b1a0]",
            "ldr r0, [0x0001b1a4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x17",
            "bl sym.imp.printf",
            "ldr r0, [0x0001b1a8]",
            "ldr r1, [r4, 0x1c]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0001b1e8]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "bls 0x1b484",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0x200",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001b1ac]",
            "ldr r0, [0x0001b1b0]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x17",
            "bl sym.imp.printf",
            "ldr r0, [0x0001b1b4]",
            "ldr r1, [r4, 0x28]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0001b1e8]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "bls 0x1b4e0",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x201",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001b1b8]",
            "ldr r0, [0x0001b1bc]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x17",
            "bl sym.imp.printf",
            "ldr r0, [0x0001b1c0]",
            "ldr r1, [r4]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0001b1e8]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "bls 0x1b53c",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x202",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001b1c4]",
            "ldr r0, [0x0001b1c8]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x17",
            "bl sym.imp.printf",
            "ldr r0, [0x0001b1cc]",
            "ldr r1, [r4, 0xec]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0001b1e8]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "bls 0x1b598",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x203",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001b1d0]",
            "ldr r0, [0x0001b1d4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x17",
            "bl sym.imp.printf",
            "ldr r0, [0x0001b1d8]",
            "ldr r1, [r4, 0xf0]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0001b1e8]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r8]",
            "mov r0, 0",
            "cmp r3, 3",
            "bls 0x1b5f8",
            "bl sym.imp.time",
            "mov r3, 0x204",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001b1dc]",
            "ldr r0, [0x0001b1e0]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x17",
            "bl sym.imp.printf",
            "ldr r0, [0x0001b1e4]",
            "ldr r1, [r4, 0xf4]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0001b1e8]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, 0",
            "add sp, sp, 0x660",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "loc.imp.sendAPautoconfigack": {
        "function_address": "0x00008ff8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x484]!"
        ]
    },
    "loc.imp.setAPautoconfigFlagToRenew": {
        "function_address": "0x0000934c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x24c]!"
        ]
    },
    "sym.imp.memcpy": {
        "function_address": "0x000088a8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x964]!"
        ]
    },
    "sym.imp.atoi": {
        "function_address": "0x000094a8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x164]!"
        ]
    },
    "fcn.00008f80": {
        "function_address": "0x00008f80",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x4d4]!"
        ]
    },
    "sym.imp.strlen": {
        "function_address": "0x00009544",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0xfc]!"
        ]
    },
    "sym.imp.strdup": {
        "function_address": "0x00009040",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x454]!"
        ]
    },
    "fcn.00008ce0": {
        "function_address": "0x00008ce0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x694]!"
        ]
    },
    "fcn.00008fa4": {
        "function_address": "0x00008fa4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x4bc]!"
        ]
    },
    "loc.imp.setAPautoconfigupdatetime": {
        "function_address": "0x00008b00",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x7d4]!"
        ]
    },
    "sym.wps_process_ap_settings": {
        "function_address": "0x00033c28",
        "instructions": [
            "ldrh r3, [r0, 0x24]",
            "tst r3, 0x22",
            "beq 0x33a44",
            "ldr r3, [r0, 0x6c]",
            "sub r2, r3, 9",
            "cmp r2, 0x36",
            "bhi 0x33a44",
            "sub r3, r3, 1",
            "add r2, r0, r3",
            "ldrb r2, [r2, 0x29]",
            "cmp r2, 0",
            "streq r3, [r0, 0x6c]",
            "mov r0, 0",
            "bx lr",
            "push {r4, r5, r6, lr}",
            "mov r5, r0",
            "mov r4, r1",
            "mov r0, r1",
            "mov r2, 0x80",
            "mov r1, 0",
            "bl sym.imp.memset",
            "ldr r1, [r5, 0xe4]",
            "mov r0, r4",
            "ldr r2, [r5, 0xe8]",
            "bl fcn.000339b8",
            "cmp r0, 0",
            "bne 0x33d08",
            "ldr r3, [r5, 0x74]",
            "cmp r3, 0",
            "beq 0x33d08",
            "ldrb r2, [r3]",
            "ldrb r3, [r3, 1]",
            "orr r3, r3, r2, lsl 8",
            "strh r3, [r4, 0x24]",
            "ldr r3, [r5, 0x78]",
            "cmp r3, 0",
            "beq 0x33d08",
            "ldrb r2, [r3]",
            "ldrb r3, [r3, 1]",
            "orr r3, r3, r2, lsl 8",
            "strh r3, [r4, 0x26]",
            "ldr r3, [r5, 0x80]",
            "cmp r3, 0",
            "ldrbne r3, [r3]",
            "strbne r3, [r4, 0x28]",
            "ldr r1, [r5, 0xec]",
            "ldr r6, [r5, 0xf0]",
            "cmp r1, 0",
            "bne 0x33cc8",
            "ldr r2, [r4, 0x24]",
            "ldr r3, [0x00033d10]",
            "cmp r2, r3",
            "beq 0x33ce0",
            "b 0x33d08",
            "cmp r6, 0x40",
            "bhi 0x33ce0",
            "add r0, r4, 0x29",
            "mov r2, r6",
            "bl sym.imp.memcpy",
            "str r6, [r4, 0x6c]",
            "ldr r3, [r5, 0x84]",
            "cmp r3, 0",
            "beq 0x33d08",
            "ldr r2, [r3]",
            "mov r0, r4",
            "str r2, [r4, 0x70]",
            "ldrh r3, [r3, 4]",
            "strh r3, [r4, 0x74]",
            "pop {r4, r5, r6, lr}",
            "b 0x33a14",
            "mvn r0, 0",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.000339b8": {
        "function_address": "0x000339b8",
        "instructions": [
            "cmp r1, 0",
            "mov r3, r0",
            "push {r4, lr}",
            "mov r4, r2",
            "beq 0x33a04",
            "cmp r4, 0",
            "beq 0x339f0",
            "sub r2, r4, 1",
            "ldrb r0, [r1, r2]",
            "cmp r0, 0",
            "moveq r4, r2",
            "beq 0x339cc",
            "cmp r4, 0x20",
            "bhi 0x33a0c",
            "mov r0, r3",
            "mov r2, r4",
            "bl sym.imp.memcpy",
            "str r4, [r0, 0x20]",
            "b 0x33a0c",
            "mvn r0, 0",
            "pop {r4, pc}",
            "mov r0, 0",
            "pop {r4, pc}"
        ]
    },
    "sym.wpabuf_alloc_ext_data": {
        "function_address": "0x0002e990",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r5, r0",
            "mov r0, 0x10",
            "mov r4, r1",
            "bl fcn.00008d28",
            "cmp r0, 0",
            "strne r4, [r0]",
            "ldrne r3, [r0, 0xc]",
            "stmibne r0, {r4, r5}",
            "orrne r3, r3, 1",
            "strne r3, [r0, 0xc]",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.00008d28": {
        "function_address": "0x00008d28",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x664]!"
        ]
    },
    "sym.zyEvent_INTFOPERSTATUSCHANGEDEVENTID": {
        "function_address": "0x00018ae4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov sb, r3",
            "ldr r6, [0x00018e48]",
            "sub sp, sp, 0x1c",
            "ldr r3, [0x00018e4c]",
            "mov fp, r0",
            "add r6, pc, r6",
            "mov r4, r1",
            "ldr r8, [sp, 0x40]",
            "mov sl, r2",
            "ldr r7, [r6, r3]",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x18b68",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0xcb",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00018e50]",
            "ldr r0, [0x00018e54]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x75",
            "bl sym.imp.printf",
            "ldr r0, [0x00018e58]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00018e5c]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x18bc4",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0xcc",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00018e60]",
            "ldr r0, [0x00018e64]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x75",
            "bl sym.imp.printf",
            "ldr r0, [0x00018e68]",
            "mov r1, fp",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00018e5c]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x18c40",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0xcd",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00018e6c]",
            "ldr r0, [0x00018e70]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x75",
            "bl sym.imp.printf",
            "ldrb r0, [r4, 3]",
            "ldrb r3, [r4, 2]",
            "str r0, [sp]",
            "ldrb r0, [r4, 4]",
            "ldrb r1, [r4]",
            "str r0, [sp, 4]",
            "ldrb r0, [r4, 5]",
            "ldrb r2, [r4, 1]",
            "str r0, [sp, 8]",
            "ldr r0, [0x00018e74]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00018e5c]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x18c9c",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0xce",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00018e78]",
            "ldr r0, [0x00018e7c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x75",
            "bl sym.imp.printf",
            "ldr r0, [0x00018e80]",
            "mov r1, sl",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00018e5c]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x18cf8",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0xcf",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00018e84]",
            "ldr r0, [0x00018e88]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x75",
            "bl sym.imp.printf",
            "ldr r0, [0x00018e8c]",
            "mov r1, sb",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00018e5c]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x18d54",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0xd0",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00018e90]",
            "ldr r0, [0x00018e94]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x75",
            "bl sym.imp.printf",
            "ldr r0, [0x00018e98]",
            "mov r1, r8",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00018e5c]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, 1",
            "mov r1, 0x24",
            "bl sym.imp.calloc",
            "subs r5, r0, 0",
            "bne 0x18dc0",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x18e40",
            "bl sym.imp.time",
            "mov r3, 0xd5",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00018e9c]",
            "ldr r0, [0x00018ea0]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x75",
            "bl sym.imp.printf",
            "ldr r0, [0x00018ea4]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00018e5c]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0x18e40",
            "mov r1, fp",
            "bl sym.imp.strcpy",
            "ldrb r3, [r4]",
            "strb r3, [r5, 0x10]",
            "ldrb r3, [r4, 1]",
            "strb r3, [r5, 0x11]",
            "ldrb r3, [r4, 2]",
            "strb r3, [r5, 0x12]",
            "ldrb r3, [r4, 3]",
            "strb r3, [r5, 0x13]",
            "ldrb r3, [r4, 4]",
            "strb r3, [r5, 0x14]",
            "ldrb r3, [r4, 5]",
            "str sl, [r5, 0x18]",
            "strb r3, [r5, 0x15]",
            "mov r3, 0",
            "str r3, [sp, 0x14]",
            "ldr r3, [0x00018ea8]",
            "str sb, [r5, 0x1c]",
            "str r8, [r5, 0x20]",
            "ldr r3, [r6, r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x18e30",
            "mov r0, 5",
            "mov r1, r5",
            "add r2, sp, 0x14",
            "blx r3",
            "mov r0, r5",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "b sym.imp.free",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.random_get_bytes": {
        "function_address": "0x00031760",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x7c",
            "ldr r7, [0x0003194c]",
            "mov r8, r1",
            "ldr r4, [0x00031950]",
            "mov sb, r0",
            "add r7, pc, r7",
            "bl fcn.000092b0",
            "add r4, pc, r4",
            "mov sl, r0",
            "mov r6, r8",
            "add fp, r7, 0x14",
            "str fp, [sp, 0xc]",
            "cmp r6, 0",
            "beq 0x31924",
            "ldr r2, [sp, 0xc]",
            "add r5, sp, 0x24",
            "str r5, [sp]",
            "mov r1, 0x14",
            "mov r3, 0x80",
            "mov r0, r7",
            "bl fcn.00008ad0",
            "ldr r0, [0x00031954]",
            "mov r2, 0",
            "ldr r1, [r7, 0x94]",
            "ldr r3, [r7, 0x98]",
            "add r0, pc, r0",
            "str r0, [sp, 8]",
            "ldrb r0, [r5, r2]",
            "and lr, r1, 0x1f",
            "rsb fp, lr, 0x20",
            "cmp r3, 0",
            "lsl ip, r0, lr",
            "sub r3, r3, 1",
            "and r3, r3, 0x1f",
            "add r2, r2, 1",
            "orr ip, ip, r0, lsr fp",
            "moveq r0, 0xe",
            "movne r0, 7",
            "add lr, r3, 0x1a",
            "add r1, r0, r1",
            "add r0, r3, 0x14",
            "and lr, lr, 0x1f",
            "and r0, r0, 0x1f",
            "cmp r2, 0x14",
            "add lr, r4, lr, lsl 2",
            "add r0, r4, r0, lsl 2",
            "ldr fp, [lr, 0x14]",
            "ldr r0, [r0, 0x14]",
            "eor fp, fp, r0",
            "add r0, r4, r3, lsl 2",
            "ldr lr, [r0, 0x14]",
            "eor fp, fp, lr",
            "add lr, r3, 0xe",
            "and lr, lr, 0x1f",
            "add lr, r4, lr, lsl 2",
            "ldr lr, [lr, 0x14]",
            "eor fp, fp, lr",
            "add lr, r3, 7",
            "and lr, lr, 0x1f",
            "add lr, r4, lr, lsl 2",
            "ldr lr, [lr, 0x14]",
            "eor fp, fp, lr",
            "add lr, r3, 1",
            "and lr, lr, 0x1f",
            "add lr, r4, lr, lsl 2",
            "ldr lr, [lr, 0x14]",
            "eor lr, lr, fp",
            "eor ip, ip, lr",
            "ldr fp, [sp, 8]",
            "and lr, ip, 7",
            "ldr lr, [fp, lr, lsl 2]",
            "eor ip, lr, ip, lsr 3",
            "str ip, [r0, 0x14]",
            "bne 0x317d0",
            "ldr r0, [0x00031958]",
            "str r1, [r4, 0x94]",
            "mov r1, 0",
            "add r0, pc, r0",
            "str r3, [r4, 0x98]",
            "rsb ip, r1, r3",
            "add r2, sp, 0x38",
            "and ip, ip, 0x1f",
            "add ip, r0, ip, lsl 2",
            "ldr ip, [ip, 0x14]",
            "str ip, [r2, r1, lsl 2]",
            "add r1, r1, 1",
            "cmp r1, 0x10",
            "bne 0x318a0",
            "str r5, [sp]",
            "mov r1, 0x14",
            "mov r3, 0x40",
            "bl fcn.00008ad0",
            "ldr r2, [sp, 0x24]",
            "add ip, sp, 0x14",
            "ldr r3, [sp, 0x34]",
            "cmp r6, 0x10",
            "eor r3, r3, r2",
            "str r3, [sp, 0x24]",
            "ldm r5, {r0, r1, r2, r3}",
            "stm ip, {r0, r1, r2, r3}",
            "movlo r2, r6",
            "movhs r2, 0x10",
            "mov r3, 0",
            "ldrb r0, [ip, r3]",
            "add r3, r3, 1",
            "ldrb r1, [sb], 1",
            "cmp r3, r2",
            "eor r1, r1, r0",
            "strb r1, [sb, -1]",
            "blo 0x31900",
            "rsb r6, r2, r6",
            "b 0x31794",
            "ldr r3, [0x0003195c]",
            "mov r0, sl",
            "add r3, pc, r3",
            "ldr r2, [r3, 0x9c]",
            "cmp r2, r8",
            "strlo r6, [r3, 0x9c]",
            "rsbhs r8, r8, r2",
            "strhs r8, [r3, 0x9c]",
            "add sp, sp, 0x7c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.000092b0": {
        "function_address": "0x000092b0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x2b4]!"
        ]
    },
    "fcn.00008ad0": {
        "function_address": "0x00008ad0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x7f4]!"
        ]
    },
    "sym.zyNetCtrl_getWIFINeighborList": {
        "function_address": "0x00015838",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x2b4",
            "ldr r5, [0x00015e04]",
            "ldr r3, [0x00015e08]",
            "add r5, pc, r5",
            "ldr r3, [r5, r3]",
            "ldrb r2, [r3]",
            "str r3, [sp, 0x10]",
            "cmp r2, 3",
            "bls 0x158a8",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x77a",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00015e0c]",
            "ldr r0, [0x00015e10]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xa8",
            "bl sym.imp.printf",
            "mov r0, 0xa",
            "bl sym.imp.putchar",
            "ldr r3, [0x00015e14]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r4, [0x00015e18]",
            "bl fcn.000089d4",
            "ldr r1, [0x00015e1c]",
            "add r4, pc, r4",
            "add r1, pc, r1",
            "mov r0, r4",
            "bl sym.imp.fopen",
            "subs r8, r0, 0",
            "bne 0x1592c",
            "ldr r2, [sp, 0x10]",
            "ldrb r3, [r2]",
            "cmp r3, 3",
            "bls 0x15af8",
            "bl sym.imp.time",
            "movw r3, 0x787",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00015e20]",
            "ldr r0, [0x00015e24]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xa8",
            "bl sym.imp.printf",
            "ldr r0, [0x00015e28]",
            "mov r1, r4",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00015e14]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0x15af8",
            "mov r4, 0",
            "mov r2, 0xd",
            "str r4, [sp, 0x3c]",
            "mov r1, r4",
            "add r0, sp, 0x40",
            "bl sym.imp.memset",
            "str r4, [sp, 0x24]",
            "mov r1, r4",
            "str r4, [sp, 0x28]",
            "mov r2, 0xc",
            "str r4, [sp, 0x2c]",
            "add r0, sp, 0x30",
            "bl sym.imp.memset",
            "str r4, [sp, 0x50]",
            "mov r1, r4",
            "mov r2, 0x1c",
            "add r0, sp, 0x54",
            "bl sym.imp.memset",
            "str r4, [sp, 0x70]",
            "mov r1, r4",
            "mov r2, 0x1c",
            "add r0, sp, 0x74",
            "bl sym.imp.memset",
            "str r4, [sp, 0x90]",
            "mov r2, 0x1c",
            "add r0, sp, 0x94",
            "mov r1, r4",
            "bl sym.imp.memset",
            "ldr r3, [0x00015e2c]",
            "ldr r2, [0x00015e30]",
            "add r3, pc, r3",
            "str r3, [sp, 0x14]",
            "ldr r3, [0x00015e34]",
            "add r2, pc, r2",
            "add r3, pc, r3",
            "str r2, [sp, 0x18]",
            "str r3, [sp, 0x1c]",
            "add r4, sp, 0xb0",
            "mov r1, 0x200",
            "mov r0, r4",
            "mov r2, r8",
            "bl sym.imp.fgets",
            "cmp r0, 0",
            "beq 0x15af0",
            "mov r0, 1",
            "mov r1, 0x78",
            "bl sym.imp.calloc",
            "subs r7, r0, 0",
            "moveq r0, r8",
            "beq 0x15ce0",
            "ldr r1, [sp, 0x14]",
            "add r3, sp, 0x28",
            "str r3, [sp]",
            "add r6, sp, 0x2c",
            "str r6, [sp, 4]",
            "add sb, sp, 0x3c",
            "add fp, sp, 0x50",
            "add sl, sp, 0x70",
            "str fp, [sp, 8]",
            "mov r0, r4",
            "str sl, [sp, 0xc]",
            "mov r2, sb",
            "add r3, sp, 0x24",
            "add r4, sp, 0x90",
            "bl sym.imp.sscanf",
            "ldr r1, [sp, 0x18]",
            "mov r0, r6",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "ldreq r1, [0x00015e38]",
            "moveq r0, r4",
            "addeq r1, pc, r1",
            "beq 0x15abc",
            "ldr r1, [sp, 0x1c]",
            "mov r0, r6",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "ldreq r1, [0x00015e3c]",
            "moveq r0, r4",
            "addeq r1, pc, r1",
            "beq 0x15abc",
            "ldr r1, [0x00015e40]",
            "mov r0, r6",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "ldreq r1, [0x00015e44]",
            "moveq r0, r4",
            "addeq r1, pc, r1",
            "beq 0x15abc",
            "ldr r1, [0x00015e48]",
            "mov r0, r6",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "mov r0, r4",
            "ldreq r1, [0x00015e4c]",
            "addeq r1, pc, r1",
            "ldrne r1, [0x00015e50]",
            "addne r1, pc, r1",
            "bl sym.imp.strcpy",
            "ldr r3, [sp, 0x28]",
            "mov r0, r7",
            "str sl, [sp, 8]",
            "mov r1, sb",
            "stm sp, {r3, fp}",
            "str r4, [sp, 0xc]",
            "mov r2, 0x100",
            "ldr r3, [sp, 0x24]",
            "bl fcn.0001546c",
            "mov r0, r7",
            "bl sym.imp.free",
            "b 0x159c0",
            "mov r0, r8",
            "bl sym.imp.fclose",
            "ldr r4, [0x00015e54]",
            "ldr r1, [0x00015e58]",
            "add r4, pc, r4",
            "add r1, pc, r1",
            "mov r0, r4",
            "bl sym.imp.fopen",
            "subs r6, r0, 0",
            "bne 0x15b78",
            "ldr r2, [sp, 0x10]",
            "ldrb r3, [r2]",
            "cmp r3, 3",
            "bls 0x15df8",
            "bl sym.imp.time",
            "mov r3, 0x7c0",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00015e5c]",
            "ldr r0, [0x00015e60]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xa8",
            "bl sym.imp.printf",
            "ldr r0, [0x00015e64]",
            "mov r1, r4",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00015e14]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0x15df8",
            "ldr fp, [0x00015e68]",
            "mov r4, 0",
            "str r4, [sp, 0xb0]",
            "mov r1, r4",
            "add fp, pc, fp",
            "mov r2, 0x7c",
            "add r0, sp, 0xb4",
            "bl sym.imp.memset",
            "str r4, [sp, 0x3c]",
            "mov r1, r4",
            "mov r2, 0xd",
            "add r0, sp, 0x40",
            "bl sym.imp.memset",
            "str r4, [sp, 0x24]",
            "mov r1, r4",
            "str r4, [sp, 0x28]",
            "mov r2, 0xc",
            "str r4, [sp, 0x2c]",
            "add r0, sp, 0x30",
            "bl sym.imp.memset",
            "str r4, [sp, 0x50]",
            "mov r1, r4",
            "mov r2, 0x1c",
            "add r0, sp, 0x54",
            "bl sym.imp.memset",
            "str r4, [sp, 0x70]",
            "mov r1, r4",
            "mov r2, 0x1c",
            "add r0, sp, 0x74",
            "bl sym.imp.memset",
            "str r4, [sp, 0x90]",
            "mov r2, 0x1c",
            "add r0, sp, 0x94",
            "mov r1, r4",
            "bl sym.imp.memset",
            "ldr r3, [0x00015e6c]",
            "ldr r2, [0x00015e70]",
            "add r3, pc, r3",
            "add r2, pc, r2",
            "str r3, [sp, 0x10]",
            "str r2, [sp, 0x14]",
            "b 0x15cac",
            "ldr r1, [sp, 0x10]",
            "add r3, sp, 0x28",
            "str r3, [sp]",
            "add r5, sp, 0x2c",
            "str r5, [sp, 4]",
            "add r8, sp, 0x3c",
            "add sl, sp, 0x50",
            "add sb, sp, 0x70",
            "str sl, [sp, 8]",
            "mov r0, r4",
            "str sb, [sp, 0xc]",
            "mov r2, r8",
            "add r3, sp, 0x24",
            "add r4, sp, 0x90",
            "bl sym.imp.sscanf",
            "ldr r1, [sp, 0x14]",
            "mov r0, r5",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x15cec",
            "ldr r1, [0x00015e74]",
            "mov r0, r4",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "ldr r3, [sp, 0x28]",
            "mov r0, r7",
            "str sb, [sp, 8]",
            "mov r1, r8",
            "stm sp, {r3, sl}",
            "str r4, [sp, 0xc]",
            "movw r2, 0x102",
            "ldr r3, [sp, 0x24]",
            "bl fcn.0001546c",
            "mov r0, r7",
            "bl sym.imp.free",
            "add r4, sp, 0xb0",
            "mov r1, 0x80",
            "mov r0, r4",
            "mov r2, r6",
            "bl sym.imp.fgets",
            "cmp r0, 0",
            "beq 0x15df0",
            "mov r0, 1",
            "mov r1, 0x78",
            "bl sym.imp.calloc",
            "subs r7, r0, 0",
            "bne 0x15c20",
            "mov r0, r6",
            "bl sym.imp.fclose",
            "mov r0, r7",
            "b 0x15dfc",
            "mov r0, r5",
            "mov r1, fp",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "ldreq r1, [0x00015e78]",
            "moveq r0, r4",
            "addeq r1, pc, r1",
            "beq 0x15c7c",
            "ldr r1, [0x00015e7c]",
            "mov r0, r5",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "ldreq r1, [0x00015e80]",
            "moveq r0, r4",
            "addeq r1, pc, r1",
            "beq 0x15c7c",
            "ldr r1, [0x00015e84]",
            "mov r0, r5",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "ldreq r1, [0x00015e88]",
            "moveq r0, r4",
            "addeq r1, pc, r1",
            "beq 0x15c7c",
            "ldr r1, [0x00015e8c]",
            "mov r0, r5",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "ldreq r1, [0x00015e90]",
            "moveq r0, r4",
            "addeq r1, pc, r1",
            "beq 0x15c7c",
            "ldr r1, [0x00015e94]",
            "mov r0, r5",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "ldreq r1, [0x00015e98]",
            "moveq r0, r4",
            "addeq r1, pc, r1",
            "beq 0x15c7c",
            "ldr r1, [0x00015e9c]",
            "mov r0, r5",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "ldreq r1, [0x00015ea0]",
            "moveq r0, r4",
            "addeq r1, pc, r1",
            "beq 0x15c7c",
            "ldr r1, [0x00015ea4]",
            "mov r0, r5",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "mov r0, r4",
            "ldreq r1, [0x00015ea8]",
            "addeq r1, pc, r1",
            "beq 0x15c7c",
            "ldr r1, [0x00015eac]",
            "add r1, pc, r1",
            "b 0x15c7c",
            "mov r0, r6",
            "bl sym.imp.fclose",
            "mov r0, 1",
            "add sp, sp, 0x2b4",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.000089d4": {
        "function_address": "0x000089d4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x89c]!"
        ]
    },
    "fcn.0001546c": {
        "function_address": "0x0001546c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x3a4]!",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x1c",
            "ldr r6, [0x00015794]",
            "mov r4, r0",
            "str r3, [sp, 0x14]",
            "mov ip, r1",
            "add r6, pc, r6",
            "mov fp, r2",
            "ldr r3, [0x00015798]",
            "ldr r5, [sp, 0x40]",
            "ldr sl, [r6, r3]",
            "ldr sb, [sp, 0x44]",
            "ldrb r3, [sl]",
            "ldr r7, [sp, 0x48]",
            "ldr r8, [sp, 0x4c]",
            "cmp r3, 3",
            "bls 0x15500",
            "str r1, [sp, 0x10]",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x6f8",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001579c]",
            "ldr r0, [0x000157a0]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x88",
            "bl sym.imp.printf",
            "mov r0, 0xa",
            "bl sym.imp.putchar",
            "ldr r3, [0x000157a4]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr ip, [sp, 0x10]",
            "cmp r4, 0",
            "beq 0x1578c",
            "cmp ip, 0",
            "beq 0x1578c",
            "mov r3, 0",
            "ldrb r0, [ip, r3]",
            "cmp r0, 0",
            "addne r3, r3, 1",
            "bne 0x15514",
            "cmp r3, 0x11",
            "beq 0x15588",
            "ldrb r3, [sl]",
            "cmp r3, 3",
            "bls 0x1578c",
            "bl sym.imp.time",
            "movw r3, 0x70a",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000157a8]",
            "ldr r0, [0x000157ac]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x88",
            "bl sym.imp.printf",
            "ldr r0, [0x000157b0]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x000157a4]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "b sym.imp.fflush",
            "ldr r1, [0x000157b4]",
            "add r3, r4, 6",
            "str r3, [sp]",
            "add r3, r4, 7",
            "str r3, [sp, 4]",
            "add r3, r4, 8",
            "str r3, [sp, 8]",
            "add r3, r4, 9",
            "str r3, [sp, 0xc]",
            "mov r0, ip",
            "add r1, pc, r1",
            "add r3, r4, 5",
            "add r2, r4, 4",
            "bl sym.imp.sscanf",
            "ldr r3, [r4, 4]",
            "cmp r3, 0",
            "bne 0x155d8",
            "ldrh r3, [r4, 8]",
            "cmp r3, 0",
            "beq 0x1578c",
            "ldrb r3, [sl]",
            "cmp r3, 3",
            "bls 0x15654",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x716",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000157b8]",
            "ldr r0, [0x000157bc]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x88",
            "bl sym.imp.printf",
            "ldrb r0, [r4, 7]",
            "ldrb r3, [r4, 6]",
            "str r0, [sp]",
            "ldrb r0, [r4, 8]",
            "ldrb r1, [r4, 4]",
            "str r0, [sp, 4]",
            "ldrb r0, [r4, 9]",
            "ldrb r2, [r4, 5]",
            "str r0, [sp, 8]",
            "ldr r0, [0x000157c0]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x000157a4]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [sp, 0x14]",
            "cmp r5, 0",
            "str fp, [r4, 0xc]",
            "strh r3, [r4, 0x10]",
            "strh r5, [r4, 0x12]",
            "beq 0x156a8",
            "cmp r5, 7",
            "movle r5, 1",
            "ble 0x156a8",
            "sub r3, r5, 8",
            "cmp r3, 3",
            "movls r5, 2",
            "bls 0x156a8",
            "sub r3, r5, 0xc",
            "cmp r3, 3",
            "movls r5, 3",
            "bls 0x156a8",
            "sub r5, r5, 0x10",
            "cmp r5, 3",
            "movhi r5, 5",
            "movls r5, 4",
            "strh r5, [r4, 0x14]",
            "mov r0, sb",
            "bl sym.imp.strlen",
            "sub r6, r7, 1",
            "mov r5, r0",
            "mov r2, r6",
            "ldrb r3, [r2, 1]!",
            "cmp r3, 0",
            "beq 0x156d8",
            "cmp r3, 0xa",
            "bne 0x156c0",
            "sub r5, r0, 1",
            "mov r2, r5",
            "mov r1, sb",
            "add r5, r4, r5",
            "add r0, r4, 0x16",
            "bl sym.imp.memcpy",
            "mov r3, 0",
            "mov r0, r7",
            "strb r3, [r5, 0x16]",
            "bl sym.imp.strlen",
            "mov r5, r0",
            "mov r2, r6",
            "ldrb r3, [r2, 1]!",
            "cmp r3, 0",
            "beq 0x1571c",
            "cmp r3, 0xa",
            "bne 0x15704",
            "sub r5, r0, 1",
            "mov r2, r5",
            "mov r1, r7",
            "add r5, r4, r5",
            "add r0, r4, 0x36",
            "bl sym.imp.memcpy",
            "mov r3, 0",
            "mov r0, r8",
            "strb r3, [r5, 0x36]",
            "bl sym.imp.strlen",
            "mov r5, r0",
            "ldrb r3, [r6, 1]!",
            "cmp r3, 0",
            "beq 0x1575c",
            "cmp r3, 0xa",
            "bne 0x15744",
            "sub r5, r0, 1",
            "mov r2, r5",
            "add r0, r4, 0x56",
            "add r5, r4, r5",
            "mov r1, r8",
            "add r5, r5, 0x50",
            "bl sym.imp.memcpy",
            "mov r3, 0",
            "mov r0, r4",
            "strb r3, [r5, 6]",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "b 0x9148",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.imp.free": {
        "function_address": "0x000096a0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x14]!"
        ]
    },
    "sym.os_daemonize": {
        "function_address": "0x00033f60",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r5, r0",
            "mov r0, 0",
            "mov r1, r0",
            "bl sym.imp.daemon",
            "subs r4, r0, 0",
            "beq 0x33f90",
            "ldr r0, [0x00033fd8]",
            "mvn r4, 0",
            "add r0, pc, r0",
            "bl sym.imp.perror",
            "b 0x33fd0",
            "cmp r5, 0",
            "beq 0x33fd0",
            "ldr r1, [0x00033fdc]",
            "mov r0, r5",
            "add r1, pc, r1",
            "bl sym.imp.fopen",
            "subs r5, r0, 0",
            "beq 0x33fd0",
            "bl sym.imp.getpid",
            "ldr r1, [0x00033fe0]",
            "mov r2, r0",
            "mov r0, r5",
            "add r1, pc, r1",
            "bl sym.imp.fprintf",
            "mov r0, r5",
            "bl sym.imp.fclose",
            "mov r0, r4",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.imp.daemon": {
        "function_address": "0x00009520",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x114]!"
        ]
    },
    "sym.imp.perror": {
        "function_address": "0x000088f0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x934]!"
        ]
    },
    "sym.imp.getpid": {
        "function_address": "0x00008818",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x9c4]!"
        ]
    },
    "sym.imp.fprintf": {
        "function_address": "0x00008cb0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x6b4]!"
        ]
    },
    "sym.FW_setFWresult": {
        "function_address": "0x000245a8",
        "instructions": [
            "push {r0, r1, r2, r4, r5, lr}",
            "subs r5, r0, 0",
            "ldr r4, [0x00024874]",
            "add r4, pc, r4",
            "bne 0x24650",
            "ldr r3, [0x00024878]",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x24618",
            "bl sym.imp.time",
            "movw r3, 0x323",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002487c]",
            "ldr r0, [0x00024880]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xb2",
            "bl sym.imp.printf",
            "ldr r0, [0x00024884]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00024888]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x0002488c]",
            "mov r5, 0",
            "mov r0, r5",
            "ldr r3, [r4, r3]",
            "str r5, [r3]",
            "ldr r3, [0x00024890]",
            "ldr r3, [r4, r3]",
            "str r5, [r3]",
            "bl fcn.00009034",
            "ldr r3, [0x00024894]",
            "ldr r3, [r4, r3]",
            "strb r5, [r3]",
            "bl loc.imp.updateFWUpgradeStatus",
            "b 0x24868",
            "cmp r5, 2",
            "bne 0x246c8",
            "ldr r3, [0x00024878]",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x246b8",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x32f",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00024898]",
            "ldr r0, [0x0002489c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xb2",
            "bl sym.imp.printf",
            "ldr r0, [0x000248a0]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00024888]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x0002488c]",
            "ldr r3, [r4, r3]",
            "mov r4, 2",
            "b 0x24854",
            "cmp r5, 3",
            "bne 0x24740",
            "ldr r3, [0x00024878]",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x24730",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x336",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000248a4]",
            "ldr r0, [0x000248a8]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xb2",
            "bl sym.imp.printf",
            "ldr r0, [0x000248ac]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00024888]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x0002488c]",
            "ldr r3, [r4, r3]",
            "mov r4, 3",
            "b 0x24854",
            "cmp r5, 4",
            "bne 0x247e0",
            "ldr r3, [0x00024878]",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x247a8",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x33d",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, r5",
            "ldr r3, [0x000248b0]",
            "ldr r0, [0x000248b4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xb2",
            "bl sym.imp.printf",
            "ldr r0, [0x000248b8]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00024888]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x000248bc]",
            "ldr r3, [r4, r3]",
            "ldr r2, [r3]",
            "cmp r2, 1",
            "bne 0x247d0",
            "mov r0, 0",
            "str r0, [r3]",
            "mov r1, r0",
            "mov r2, r0",
            "bl fcn.000085b4",
            "ldr r3, [0x00024890]",
            "ldr r3, [r4, r3]",
            "mov r4, 4",
            "b 0x24854",
            "cmp r5, 5",
            "bne 0x24868",
            "ldr r3, [0x00024878]",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x24848",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x349",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000248c0]",
            "ldr r0, [0x000248c4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xb2",
            "bl sym.imp.printf",
            "ldr r0, [0x000248c8]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00024888]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x00024890]",
            "ldr r3, [r4, r3]",
            "mov r4, 5",
            "str r4, [r3]",
            "mov r0, r4",
            "bl fcn.00009034",
            "mov r0, r4",
            "b 0x2486c",
            "mov r0, 0",
            "add sp, sp, 0xc",
            "pop {r4, r5, pc}"
        ]
    },
    "fcn.000085b4": {
        "function_address": "0x000085b4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0xb5c]!"
        ]
    },
    "sym.wps_build_rf_bands_attr": {
        "function_address": "0x00033950",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r4, r0",
            "mov r5, r1",
            "movw r1, 0x103c",
            "bl fcn.000331d0",
            "mov r0, r4",
            "mov r1, 1",
            "bl fcn.000331d0",
            "mov r0, r4",
            "mov r1, r5",
            "bl fcn.000331f0",
            "mov r0, 0",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.000331d0": {
        "function_address": "0x000331d0",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r1",
            "mov r1, 2",
            "bl fcn.000086d4",
            "lsr r3, r4, 8",
            "strb r3, [r0]",
            "strb r4, [r0, 1]",
            "pop {r4, pc}"
        ]
    },
    "fcn.000331f0": {
        "function_address": "0x000331f0",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r1",
            "mov r1, 1",
            "bl fcn.000086d4",
            "strb r4, [r0]",
            "pop {r4, pc}"
        ]
    },
    "sym.setAPautoconfig": {
        "function_address": "0x0000b844",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x394]!",
            "push {r0, r1, r4, r5, r6, lr}",
            "mov r5, r0",
            "ldr r4, [0x0000b924]",
            "ldr r3, [0x0000b928]",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "ldrb r2, [r3]",
            "mov r6, r3",
            "cmp r2, 3",
            "bls 0xb8b8",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x59c",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000b92c]",
            "ldr r0, [0x0000b930]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x114",
            "bl sym.imp.printf",
            "ldr r0, [0x0000b934]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000b938]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xb914",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x59d",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000b93c]",
            "ldr r0, [0x0000b940]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x114",
            "bl sym.imp.printf",
            "ldr r0, [0x0000b944]",
            "mov r1, r5",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000b938]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, r5",
            "add sp, sp, 8",
            "pop {r4, r5, r6, lr}",
            "b 0x9160"
        ]
    },
    "sym.zyNetCtrl_WPSApporve_init": {
        "function_address": "0x0002909c",
        "instructions": [
            "push {r0, r1, r4, r5, r6, r7, r8, lr}",
            "ldr r4, [0x000291ec]",
            "ldr r3, [0x000291f0]",
            "add r4, pc, r4",
            "ldr r7, [r4, r3]",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x29104",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0x1a",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r0, [0x000291f4]",
            "ldr r3, [0x000291f8]",
            "add r0, pc, r0",
            "add r3, pc, r3",
            "bl sym.imp.printf",
            "ldr r0, [0x000291fc]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00029200]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x00029204]",
            "ldr r8, [r4, r3]",
            "ldr r6, [r8]",
            "cmp r6, 0",
            "beq 0x2915c",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x291e4",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0x1e",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r0, [0x00029208]",
            "ldr r3, [0x0002920c]",
            "add r0, pc, r0",
            "add r3, pc, r3",
            "bl sym.imp.printf",
            "ldr r0, [0x00029210]",
            "add r0, pc, r0",
            "b 0x291b4",
            "mov r0, 1",
            "mov r1, 0x28",
            "bl sym.imp.calloc",
            "str r0, [r8]",
            "cmp r0, 0",
            "mov r5, r0",
            "bne 0x291d0",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x291e4",
            "bl sym.imp.time",
            "mov r3, 0x25",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r0, [0x00029214]",
            "ldr r3, [0x00029218]",
            "add r0, pc, r0",
            "add r3, pc, r3",
            "bl sym.imp.printf",
            "ldr r0, [0x0002921c]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00029200]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "add sp, sp, 8",
            "pop {r4, r5, r6, r7, r8, lr}",
            "b sym.imp.fflush",
            "ldr r1, sym.zyNetCtrl_addWIFINeighborList",
            "str r6, [r0], 8",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "str r6, [r5, 4]",
            "add sp, sp, 8",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "sym.zyNetCtrl_FWCtrl_CancelFWupgrade": {
        "function_address": "0x00028014",
        "instructions": [
            "mov r1, 0",
            "mov r0, 1",
            "push {r3, lr}",
            "mov r2, r1",
            "bl fcn.00008764",
            "ldr r0, [0x0002803c]",
            "add r0, pc, r0",
            "bl sym.imp.system",
            "mov r0, 0",
            "pop {r3, pc}"
        ]
    },
    "fcn.00008764": {
        "function_address": "0x00008764",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0xa3c]!"
        ]
    },
    "sym.wps_build_model_name": {
        "function_address": "0x0003110c",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r5, r0",
            "mov r4, r1",
            "mov r0, r1",
            "movw r1, 0x1023",
            "bl fcn.0003100c",
            "ldr r0, [r5, 0x10]",
            "cmp r0, 0",
            "beq 0x3113c",
            "bl sym.imp.strlen",
            "subs r6, r0, 0",
            "bne 0x31158",
            "mov r0, r4",
            "mov r1, 1",
            "bl fcn.0003100c",
            "mov r0, r4",
            "mov r1, 0x20",
            "bl fcn.00030ff4",
            "b 0x31174",
            "mov r0, r4",
            "uxth r1, r6",
            "bl fcn.0003100c",
            "ldr r1, [r5, 0x10]",
            "mov r0, r4",
            "mov r2, r6",
            "bl fcn.0003102c",
            "mov r0, 0",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.0003100c": {
        "function_address": "0x0003100c",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r1",
            "mov r1, 2",
            "bl fcn.000086d4",
            "lsr r3, r4, 8",
            "strb r3, [r0]",
            "strb r4, [r0, 1]",
            "pop {r4, pc}"
        ]
    },
    "fcn.00030ff4": {
        "function_address": "0x00030ff4",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r1",
            "mov r1, 1",
            "bl fcn.000086d4",
            "strb r4, [r0]",
            "pop {r4, pc}"
        ]
    },
    "fcn.0003102c": {
        "function_address": "0x0003102c",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "subs r5, r1, 0",
            "popeq {r3, r4, r5, pc}",
            "mov r4, r2",
            "mov r1, r2",
            "bl fcn.000086d4",
            "mov r1, r5",
            "mov r2, r4",
            "pop {r3, r4, r5, lr}",
            "b sym.imp.memcpy"
        ]
    },
    "sym.zyEvent_INTFNBRADDEDEVENTID": {
        "function_address": "0x00018eac",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x2c",
            "ldr r5, [0x0001928c]",
            "mov sb, r3",
            "ldrb r3, [sp, 0x54]",
            "mov fp, r0",
            "add r5, pc, r5",
            "mov r4, r1",
            "str r3, [sp, 0x10]",
            "mov sl, r2",
            "ldrb r3, [sp, 0x58]",
            "ldrb r8, [sp, 0x50]",
            "str r3, [sp, 0x14]",
            "ldrb r3, [sp, 0x5c]",
            "str r3, [sp, 0x18]",
            "ldrb r3, [sp, 0x60]",
            "str r3, [sp, 0x1c]",
            "ldr r3, [0x00019290]",
            "ldr r6, [r5, r3]",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x18f50",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0xf2",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00019294]",
            "ldr r0, [0x00019298]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x9a",
            "bl sym.imp.printf",
            "ldr r0, [0x0001929c]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x000192a0]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x18fac",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0xf3",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000192a4]",
            "ldr r0, [0x000192a8]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x9a",
            "bl sym.imp.printf",
            "ldr r0, [0x000192ac]",
            "mov r1, fp",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x000192a0]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x19028",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0xf4",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000192b0]",
            "ldr r0, [0x000192b4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x9a",
            "bl sym.imp.printf",
            "ldrb r0, [r4, 3]",
            "ldrb r3, [r4, 2]",
            "ldrb r1, [r4]",
            "ldrb r2, [r4, 1]",
            "str r0, [sp]",
            "ldrb r0, [r4, 4]",
            "str r0, [sp, 4]",
            "ldrb r0, [r4, 5]",
            "str r0, [sp, 8]",
            "ldr r0, [0x000192b8]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x000192a0]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x19084",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0xf5",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000192bc]",
            "ldr r0, [0x000192c0]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x9a",
            "bl sym.imp.printf",
            "ldr r0, [0x000192c4]",
            "mov r1, sl",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x000192a0]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x19100",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0xf6",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000192c8]",
            "ldr r0, [0x000192cc]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x9a",
            "bl sym.imp.printf",
            "ldr r3, [sp, 0x14]",
            "mov r1, sb",
            "ldr r0, [0x000192d0]",
            "mov r2, r8",
            "str r3, [sp]",
            "ldr r3, [sp, 0x18]",
            "add r0, pc, r0",
            "str r3, [sp, 4]",
            "ldr r3, [sp, 0x1c]",
            "str r3, [sp, 8]",
            "ldr r3, [sp, 0x10]",
            "bl sym.imp.printf",
            "ldr r3, [0x000192a0]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, 1",
            "mov r1, 0x24",
            "bl sym.imp.calloc",
            "subs r7, r0, 0",
            "bne 0x19158",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x19284",
            "bl sym.imp.time",
            "mov r3, 0xfb",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000192d4]",
            "ldr r0, [0x000192d8]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x9a",
            "bl sym.imp.printf",
            "ldr r0, [0x000192dc]",
            "add r0, pc, r0",
            "b 0x19200",
            "mov r1, fp",
            "bl sym.imp.strcpy",
            "ldrb r2, [r4]",
            "mov r1, 1",
            "mov r0, 6",
            "strb r2, [r7, 0x10]",
            "ldrb r2, [r4, 1]",
            "strb r2, [r7, 0x11]",
            "ldrb r2, [r4, 2]",
            "strb r2, [r7, 0x12]",
            "ldrb r2, [r4, 3]",
            "strb r2, [r7, 0x13]",
            "ldrb r2, [r4, 4]",
            "strb r2, [r7, 0x14]",
            "ldrb r2, [r4, 5]",
            "str sl, [r7, 0x18]",
            "strb r2, [r7, 0x15]",
            "strh r1, [r7, 0x1c]",
            "bl sym.imp.calloc",
            "str r0, [r7, 0x20]",
            "cmp r0, 0",
            "mov r4, r0",
            "bne 0x19218",
            "mov r0, r7",
            "bl sym.imp.free",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x19284",
            "mov r0, r4",
            "bl sym.imp.time",
            "mov r3, 0x10c",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000192e0]",
            "ldr r0, [0x000192e4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x9a",
            "bl sym.imp.printf",
            "ldr r0, [0x000192e8]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x000192a0]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0x19284",
            "ldr r3, [sp, 0x10]",
            "mov r2, 0",
            "str r2, [sp, 0x24]",
            "strb r3, [r0, 2]",
            "ldr r3, [sp, 0x14]",
            "ldr r2, [0x000192ec]",
            "strb r3, [r0, 3]",
            "ldr r3, [sp, 0x18]",
            "strb sb, [r0]",
            "strb r3, [r0, 4]",
            "ldr r3, [sp, 0x1c]",
            "strb r8, [r0, 1]",
            "strb r3, [r0, 5]",
            "ldr r2, [r5, r2]",
            "ldr ip, [r2]",
            "cmp ip, 0",
            "beq 0x1926c",
            "mov r0, 7",
            "mov r1, r7",
            "add r2, sp, 0x24",
            "blx ip",
            "ldr r0, [r7, 0x20]",
            "bl sym.imp.free",
            "mov r0, r7",
            "add sp, sp, 0x2c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "b sym.imp.free",
            "add sp, sp, 0x2c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.zyNetCtrl_FWCtrl_setFWState": {
        "function_address": "0x00027cd0",
        "instructions": [
            "push {r0, r1, r4, r5, r6, r7, r8, lr}",
            "mov r5, r0",
            "ldr r4, [0x00027fbc]",
            "mov r6, r1",
            "ldr r3, [0x00027fc0]",
            "mov r7, r2",
            "add r4, pc, r4",
            "ldr r8, [r4, r3]",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "bls 0x27d50",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x385",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00027fc4]",
            "ldr r0, [0x00027fc8]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x1f8",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x00027fcc]",
            "mov r1, r5",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00027fd0]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "bls 0x27db0",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x386",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00027fd4]",
            "ldr r0, [0x00027fd8]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x1f8",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x00027fdc]",
            "mov r1, r6",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00027fd0]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "cmp r6, 0",
            "beq 0x27e18",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "bls 0x27e18",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x389",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00027fe0]",
            "ldr r0, [0x00027fe4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x1f8",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x00027fe8]",
            "mov r1, r7",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00027fd0]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x00027fec]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "cmp r0, 0",
            "bne 0x27f2c",
            "cmp r5, 4",
            "bne 0x27f0c",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "bls 0x27e8c",
            "bl sym.imp.time",
            "mov r3, 0x390",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, r5",
            "ldr r3, [0x00027ff0]",
            "ldr r0, [0x00027ff4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x1f8",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x00027ff8]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00027fd0]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "bl loc.imp.removeallFWupgradelist",
            "cmp r6, 0",
            "cmpne r7, 0",
            "beq 0x27ee0",
            "ldr r3, [0x00027ffc]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "mov r5, r3",
            "cmp r0, 0",
            "beq 0x27eb8",
            "bl sym.imp.free",
            "mov r0, r6",
            "mov r1, 1",
            "bl sym.imp.calloc",
            "str r0, [r5]",
            "cmp r0, 0",
            "bne 0x27ed8",
            "mov r0, 0x10",
            "b 0x27fb4",
            "mov r1, r7",
            "bl sym.imp.strcpy",
            "mov r0, 0",
            "bl sym.imp.time",
            "ldr r3, [0x00028000]",
            "mov r2, 4",
            "ldr r3, [r4, r3]",
            "str r0, [r3]",
            "ldr r3, [0x00028004]",
            "ldr r3, [r4, r3]",
            "strb r2, [r3]",
            "bl fcn.00008c20",
            "b 0x27f9c",
            "cmp r5, 2",
            "bne 0x27ed0",
            "bl sym.imp.time",
            "ldr r3, [0x00028008]",
            "ldr r3, [r4, r3]",
            "str r0, [r3]",
            "bl fcn.00008fe0",
            "b 0x27f9c",
            "cmp r0, 1",
            "bne 0x27f9c",
            "cmp r5, 5",
            "cmpne r5, 1",
            "movhi r3, 1",
            "movls r3, 0",
            "bls 0x27f54",
            "cmp r5, 3",
            "bne 0x27ed0",
            "b 0x27f90",
            "cmp r5, 1",
            "bhi 0x27f78",
            "ldr r2, [0x0002800c]",
            "ldr r2, [r4, r2]",
            "str r3, [r2]",
            "ldr r2, [0x00028010]",
            "ldr r2, [r4, r2]",
            "str r3, [r2]",
            "b 0x27f90",
            "cmp r5, 5",
            "bne 0x27f90",
            "bl fcn.000095d4",
            "ldr r3, [0x00028010]",
            "ldr r3, [r4, r3]",
            "str r5, [r3]",
            "ldr r3, [0x00028004]",
            "ldr r3, [r4, r3]",
            "strb r5, [r3]",
            "ldr r3, [0x00028004]",
            "ldr r3, [r4, r3]",
            "ldrb r0, [r3]",
            "bl loc.imp.sendFWStatechangeResponse",
            "bl loc.imp.updateFWUpgradeStatus",
            "mov r0, 0",
            "add sp, sp, 8",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "loc.imp.removeallFWupgradelist": {
        "function_address": "0x00009298",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x2c4]!"
        ]
    },
    "fcn.00008c20": {
        "function_address": "0x00008c20",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x714]!"
        ]
    },
    "fcn.00008fe0": {
        "function_address": "0x00008fe0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x494]!"
        ]
    },
    "loc.imp.sendFWStatechangeResponse": {
        "function_address": "0x00008b3c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x7ac]!"
        ]
    },
    "sym.SHA1Update": {
        "function_address": "0x00032fc4",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r6, r2",
            "ldr r2, [r0, 0x14]",
            "mov r4, r0",
            "lsl r3, r6, 3",
            "mov r7, r1",
            "ubfx r0, r2, 3, 6",
            "add r2, r3, r2",
            "cmp r2, r3",
            "str r2, [r4, 0x14]",
            "ldrlo r3, [r4, 0x18]",
            "addlo r3, r3, 1",
            "strlo r3, [r4, 0x18]",
            "ldr r3, [r4, 0x18]",
            "add r3, r3, r6, lsr 29",
            "str r3, [r4, 0x18]",
            "add r3, r6, r0",
            "cmp r3, 0x3f",
            "movls r5, 0",
            "bls 0x33058",
            "rsb r5, r0, 0x40",
            "add r0, r4, r0",
            "mov r2, r5",
            "add r0, r0, 0x1c",
            "bl sym.imp.memcpy",
            "mov r0, r4",
            "add r1, r4, 0x1c",
            "bl fcn.00009478",
            "add r3, r5, 0x3f",
            "cmp r3, r6",
            "bhs 0x33054",
            "add r1, r7, r5",
            "mov r0, r4",
            "bl fcn.00009478",
            "add r5, r5, 0x40",
            "b 0x33034",
            "mov r0, 0",
            "add r0, r4, r0",
            "rsb r2, r5, r6",
            "add r1, r7, r5",
            "add r0, r0, 0x1c",
            "pop {r3, r4, r5, r6, r7, lr}",
            "b sym.imp.memcpy"
        ]
    },
    "fcn.00009478": {
        "function_address": "0x00009478",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x184]!"
        ]
    },
    "sym.zyNetCtrl_WPSApporve_adddata": {
        "function_address": "0x0002938c",
        "instructions": [
            "push {r0, r1, r2, r4, r5, lr}",
            "mov r5, r0",
            "ldr r4, [0x0002944c]",
            "ldr r3, [0x00029450]",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x293fc",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0x90",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00029454]",
            "ldr r0, [0x00029458]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x38",
            "bl sym.imp.printf",
            "ldr r0, [0x0002945c]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00029460]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "bl fcn.00008734",
            "ldr r3, [0x00029464]",
            "ldr r1, [r4, r3]",
            "ldr r2, [r1]",
            "ldr r3, [r2, 4]",
            "cmp r3, 0",
            "streq r5, [r2, 4]",
            "beq 0x29430",
            "ldr r2, [r3]",
            "cmp r2, 0",
            "movne r3, r2",
            "bne 0x2941c",
            "str r5, [r3]",
            "ldr r3, [r1]",
            "mov r0, 0",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "add sp, sp, 0xc",
            "pop {r4, r5, pc}"
        ]
    },
    "sym.addFwdRule": {
        "function_address": "0x0000c724",
        "instructions": [
            "push {r0, r1, r4, lr}",
            "ldr r4, fcn.000339b8",
            "ldr r3, [0x0000c7c0]",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0xc794",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x6b3",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000c7c4]",
            "ldr r0, [0x0000c7c8]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x180",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x0000c7cc]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000c7d0]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x0000c7d4]",
            "mov r0, 2",
            "ldr r3, [r4, r3]",
            "ldr r1, [r3]",
            "bl fcn.00008980",
            "cmp r0, 0",
            "movne r0, 0x10",
            "moveq r0, 0",
            "add sp, sp, 8",
            "pop {r4, pc}"
        ]
    },
    "sym.uci_get": {
        "function_address": "0x00011c40",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r5, 0",
            "sub sp, sp, 0x400",
            "mov r7, r0",
            "mov r6, r1",
            "mov r8, r2",
            "str r5, [sp]",
            "mov r1, r5",
            "mov r2, 0x3fc",
            "add r0, sp, 4",
            "bl sym.imp.memset",
            "ldr r1, [0x00011c30]",
            "mov r2, r7",
            "ldr r7, [0x00011c34]",
            "mov r3, r6",
            "add r1, pc, r1",
            "mov r0, sp",
            "add r7, pc, r7",
            "bl sym.imp.sprintf",
            "mov r0, sp",
            "bl sym.imp.system",
            "ldr r1, [0x00011c38]",
            "mov r0, r7",
            "add r1, pc, r1",
            "bl sym.imp.fopen",
            "subs r6, r0, 0",
            "beq 0x11c24",
            "mov r1, 0x400",
            "mov r2, r6",
            "mov r0, sp",
            "bl sym.imp.fgets",
            "ldr r1, [0x00011c3c]",
            "mov r0, sp",
            "mov r2, 3",
            "add r1, pc, r1",
            "bl sym.imp.strncmp",
            "cmp r0, r5",
            "bne 0x11bf8",
            "mov r0, r6",
            "bl sym.imp.fclose",
            "b 0x11c24",
            "mov r0, sp",
            "bl fcn.0000886c",
            "mov r1, sp",
            "mov r0, r8",
            "bl sym.imp.strcpy",
            "mov r0, r6",
            "bl sym.imp.fclose",
            "mov r0, r7",
            "bl sym.imp.remove",
            "mov r0, r5",
            "b 0x11c28",
            "mov r0, 0x10",
            "add sp, sp, 0x400",
            "pop {r4, r5, r6, r7, r8, pc}",
            "cmp r1, 0",
            "cmpne r0, 0",
            "beq 0x11c50",
            "b 0x11b54",
            "mov r0, 0x10",
            "bx lr"
        ]
    },
    "fcn.0000886c": {
        "function_address": "0x0000886c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x98c]!"
        ]
    },
    "sym.imp.remove": {
        "function_address": "0x0000895c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x8ec]!"
        ]
    },
    "sym.reloadwifi_Main_24G": {
        "function_address": "0x0001c9f0",
        "instructions": [
            "push {r0, r1, r4, lr}",
            "ldr r0, [0x0001ca60]",
            "add r0, pc, r0",
            "bl sym.imp.system",
            "ldr r0, [0x0001ca64]",
            "ldr r1, [0x0001ca68]",
            "add r0, pc, r0",
            "add r1, pc, r1",
            "bl sym.imp.fopen",
            "subs r4, r0, 0",
            "beq 0x1ca58",
            "add r0, sp, 4",
            "mov r1, 4",
            "mov r2, r4",
            "bl sym.imp.fgets",
            "ldrb r3, [sp, 4]",
            "cmp r3, 0x30",
            "bne 0x1ca44",
            "ldr r0, [0x0001ca6c]",
            "add r0, pc, r0",
            "bl sym.imp.system",
            "mov r0, r4",
            "bl sym.imp.fclose",
            "ldr r0, [0x0001ca70]",
            "add r0, pc, r0",
            "bl sym.imp.remove",
            "add sp, sp, 8",
            "pop {r4, pc}"
        ]
    },
    "sym.getConfigurestate": {
        "function_address": "0x000123e0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, lr}",
            "mov r4, 0",
            "ldr r6, [0x00012558]",
            "sub sp, sp, 0x184",
            "ldr r5, [0x0001255c]",
            "mov r1, r4",
            "str r4, [sp]",
            "mov r2, 0x3c",
            "add r6, pc, r6",
            "mov sb, r0",
            "add r5, pc, r5",
            "add r0, sp, 4",
            "bl sym.imp.memset",
            "str r4, [sp, 0x40]",
            "mov r1, r4",
            "mov r2, 0x3c",
            "add r0, sp, 0x44",
            "bl sym.imp.memset",
            "str r4, [sp, 0x80]",
            "mov r1, r4",
            "mov r2, 0x3c",
            "add r0, sp, 0x84",
            "bl sym.imp.memset",
            "str r4, [sp, 0xc0]",
            "mov r1, r4",
            "mov r2, 0x3c",
            "add r0, sp, 0xc4",
            "bl sym.imp.memset",
            "str r4, [sp, 0x100]",
            "mov r1, r4",
            "mov r2, 0x3c",
            "add r0, sp, 0x104",
            "bl sym.imp.memset",
            "str r4, [sp, 0x140]",
            "mov r2, 0x3c",
            "mov r1, r4",
            "add r0, sp, 0x144",
            "bl sym.imp.memset",
            "ldr r1, [0x00012560]",
            "mov r0, sp",
            "add r8, sp, 0x40",
            "add r7, sp, 0x80",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "ldr r1, [0x00012564]",
            "mov r0, r8",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "ldr r1, [0x00012568]",
            "mov r0, r7",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "mov r0, r6",
            "mov r1, sp",
            "add r2, sp, 0xc0",
            "bl fcn.00008788",
            "ldr r3, [0x0001256c]",
            "cmp r0, 0",
            "ldr r4, [r5, r3]",
            "bne 0x12528",
            "mov r0, r6",
            "mov r1, r8",
            "add r2, sp, 0x100",
            "bl fcn.00008788",
            "cmp r0, 0",
            "bne 0x12528",
            "mov r0, r6",
            "mov r1, r7",
            "add r2, sp, 0x140",
            "bl fcn.00008788",
            "cmp r0, 0",
            "bne 0x12528",
            "ldrb r3, [sp, 0xc0]",
            "cmp r3, 0",
            "beq 0x12528",
            "ldrb r3, [sp, 0x100]",
            "cmp r3, 0",
            "beq 0x12528",
            "ldrb r3, [sp, 0x140]",
            "cmp r3, 0",
            "movne r3, 1",
            "bne 0x1252c",
            "mov r3, 2",
            "str r3, [r4]",
            "ldr r3, [r4]",
            "cmp r3, 1",
            "ldreq r2, [0x00012570]",
            "moveq r1, 0x1e",
            "ldreq r2, [r5, r2]",
            "streq r1, [r2]",
            "str r3, [sb]",
            "mov r0, 0",
            "add sp, sp, 0x184",
            "pop {r4, r5, r6, r7, r8, sb, pc}"
        ]
    },
    "sym.getWIFICountryCode": {
        "function_address": "0x0001269c",
        "instructions": [
            "push {r4, lr}",
            "sub sp, sp, 0x80",
            "mov r4, r0",
            "mov r1, 0",
            "str r1, [sp]",
            "mov r2, 0x7c",
            "add r0, sp, 4",
            "bl sym.imp.memset",
            "ldr r1, [0x000126f4]",
            "mov r0, sp",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "ldr r0, [0x000126f8]",
            "mov r1, sp",
            "mov r2, r4",
            "add r0, pc, r0",
            "bl fcn.00008788",
            "cmp r0, 0",
            "movne r0, 0x10",
            "moveq r0, 0",
            "add sp, sp, 0x80",
            "pop {r4, pc}"
        ]
    },
    "sym.setNetStatusEventCallbackFunc": {
        "function_address": "0x0000cd78",
        "instructions": [
            "push {r0, r1, r2, r4, r5, lr}",
            "mov r5, r0",
            "ldr r4, [0x0000ce28]",
            "ldr r3, [0x0000ce2c]",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0xcdec",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x797",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000ce30]",
            "ldr r0, [0x0000ce34]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x214",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x0000ce38]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000ce3c]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x0000ce40]",
            "mov r0, 2",
            "ldr r3, [r4, r3]",
            "ldr r1, [r3]",
            "bl fcn.00008980",
            "cmp r0, 0",
            "bne 0xce1c",
            "cmp r5, 0",
            "ldrne r3, [0x0000ce44]",
            "ldrne r3, [r4, r3]",
            "strne r5, [r3]",
            "bne 0xce20",
            "mov r0, 0x10",
            "add sp, sp, 0xc",
            "pop {r4, r5, pc}"
        ]
    },
    "sym.FW_checkFWupgradeReady": {
        "function_address": "0x00028040",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r0, 0",
            "ldr r4, [0x00028248]",
            "sub sp, sp, 0x88",
            "bl sym.imp.time",
            "add r4, pc, r4",
            "mov r6, r0",
            "ldr r3, [0x0002824c]",
            "ldr sb, [r4, r3]",
            "ldrb r3, [sb]",
            "cmp r3, 3",
            "bls 0x280c4",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x6c5",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00028250]",
            "ldr r0, [0x00028254]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x214",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x00028258]",
            "mov r1, r6",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0002825c]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r0, [0x00028260]",
            "add r8, sp, 0xc",
            "ldr r1, [0x00028264]",
            "add r5, sp, 8",
            "add r0, pc, r0",
            "add r1, pc, r1",
            "bl sym.imp.fopen",
            "subs sl, r0, 0",
            "beq 0x2819c",
            "mov r7, 0",
            "mov r2, 0x1c",
            "str r7, [sp, 8]",
            "mov r1, r7",
            "mov r0, r8",
            "bl sym.imp.memset",
            "mov r2, sl",
            "mov r1, 0x20",
            "mov r0, r5",
            "bl sym.imp.fgets",
            "mov r0, sl",
            "bl sym.imp.fclose",
            "mov r0, r5",
            "mov r1, r7",
            "mov r2, 0xa",
            "bl sym.imp.strtol",
            "rsb sl, r0, r6",
            "cmp sl, 0xb3",
            "bgt 0x2819c",
            "ldrb r3, [sb]",
            "cmp r3, 3",
            "bls 0x28194",
            "mov r0, r7",
            "bl sym.imp.time",
            "movw r3, 0x6d7",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00028268]",
            "ldr r0, [0x0002826c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x214",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x00028270]",
            "mov r1, sl",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0002825c]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, 0x10",
            "b 0x28240",
            "ldrb r3, [sb]",
            "cmp r3, 3",
            "bls 0x281fc",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x6dd",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00028274]",
            "ldr r0, [0x00028278]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x214",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x0002827c]",
            "mov r1, r6",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0002825c]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r4, 0",
            "mov r2, 0x7c",
            "str r4, [sp, 8]",
            "mov r1, r4",
            "mov r0, r8",
            "bl sym.imp.memset",
            "ldr r1, [0x00028280]",
            "mov r2, r6",
            "mov r0, r5",
            "add r1, pc, r1",
            "bl sym.imp.sprintf",
            "mov r0, r5",
            "bl sym.imp.system",
            "ldr r0, [0x00028284]",
            "add r0, pc, r0",
            "bl sym.imp.system",
            "mov r0, r4",
            "add sp, sp, 0x88"
        ]
    },
    "sym.dh_derive_shared": {
        "function_address": "0x00034a28",
        "instructions": [
            "cmp r0, 0",
            "cmpne r2, 0",
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r4, r2",
            "sub sp, sp, 0x18",
            "mov r6, r0",
            "bne 0x34a4c",
            "mov r0, 0",
            "b 0x34ac0",
            "cmp r1, 0",
            "mov r7, r1",
            "beq 0x34a44",
            "ldr r0, [r2, 0x10]",
            "str r0, [sp, 0x14]",
            "bl fcn.00008ddc",
            "subs r5, r0, 0",
            "beq 0x34a44",
            "ldr r3, [r4, 0xc]",
            "str r3, [sp]",
            "ldr r3, [r4, 0x10]",
            "str r3, [sp, 4]",
            "ldr r3, [r5, 8]",
            "str r3, [sp, 8]",
            "add r3, sp, 0x14",
            "str r3, [sp, 0xc]",
            "ldr r0, [r6, 8]",
            "ldr r1, [r6, 4]",
            "ldr r2, [r7, 8]",
            "ldr r3, [r7, 4]",
            "bl fcn.000085a8",
            "cmp r0, 0",
            "mov r0, r5",
            "bge 0x34ab4",
            "bl fcn.00008f74",
            "b 0x34a44",
            "ldr r1, [sp, 0x14]",
            "bl fcn.000086d4",
            "mov r0, r5",
            "add sp, sp, 0x18",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.000085a8": {
        "function_address": "0x000085a8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0xb64]!"
        ]
    },
    "sym.wps_build_authenticator": {
        "function_address": "0x00033464",
        "instructions": [
            "ldr r3, [r0, 0x134]",
            "cmp r3, 0",
            "beq 0x334f4",
            "push {r4, r5, lr}",
            "sub sp, sp, 0x3c",
            "ldr r2, [r3, 8]",
            "add r5, sp, 0x18",
            "mov r4, r1",
            "add r0, r0, 0xe4",
            "str r2, [sp, 8]",
            "mov r2, 2",
            "ldr r3, [r3, 4]",
            "str r3, [sp, 0x10]",
            "ldr r3, [r1, 8]",
            "str r3, [sp, 0xc]",
            "ldr r3, [r1, 4]",
            "mov r1, 0x20",
            "str r5, [sp, 4]",
            "str r3, [sp, 0x14]",
            "add r3, sp, 0x10",
            "str r3, [sp]",
            "add r3, sp, 8",
            "bl fcn.00008c08",
            "mov r0, r4",
            "movw r1, 0x1005",
            "bl fcn.000331d0",
            "mov r0, r4",
            "mov r1, 8",
            "bl fcn.000331d0",
            "mov r0, r4",
            "mov r1, r5",
            "mov r2, 8",
            "bl fcn.00033208",
            "mov r0, 0",
            "add sp, sp, 0x3c",
            "pop {r4, r5, pc}",
            "mvn r0, 0",
            "bx lr"
        ]
    },
    "fcn.00008c08": {
        "function_address": "0x00008c08",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x724]!"
        ]
    },
    "fcn.00033208": {
        "function_address": "0x00033208",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "subs r5, r1, 0",
            "popeq {r3, r4, r5, pc}",
            "mov r4, r2",
            "mov r1, r2",
            "bl fcn.000086d4",
            "mov r1, r5",
            "mov r2, r4",
            "pop {r3, r4, r5, lr}",
            "b sym.imp.memcpy"
        ]
    },
    "sym.FW_checkLocalFWFile": {
        "function_address": "0x000288f4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x620",
            "ldr r6, [0x00028fa8]",
            "sub sp, sp, 4",
            "ldr r4, [0x00028fac]",
            "mov r7, 0",
            "str r0, [sp, 8]",
            "mov r1, r7",
            "str r7, [sp, 0x20]",
            "mov r2, 0x7c",
            "add r6, pc, r6",
            "add r0, sp, 0x24",
            "add r4, pc, r4",
            "bl sym.imp.memset",
            "str r7, [sp, 0xa0]",
            "mov r1, r7",
            "mov r2, 0x7c",
            "add r0, sp, 0xa4",
            "bl sym.imp.memset",
            "str r7, [sp, 0x120]",
            "mov r1, r7",
            "mov r2, 0x7c",
            "add r0, sp, 0x124",
            "bl sym.imp.memset",
            "str r7, [sp, 0x1a0]",
            "mov r1, r7",
            "mov r2, 0x7c",
            "add r0, sp, 0x1a4",
            "bl sym.imp.memset",
            "str r7, [sp, 0x220]",
            "mov r1, r7",
            "mov r2, 0x7c",
            "add r0, sp, 0x224",
            "bl sym.imp.memset",
            "str r7, [sp, 0x2a0]",
            "mov r1, r7",
            "mov r2, 0x7c",
            "add r0, sp, 0x2a4",
            "bl sym.imp.memset",
            "ldr r1, [0x00028fb0]",
            "mov r0, r6",
            "add r1, pc, r1",
            "bl sym.imp.fopen",
            "ldr r3, [0x00028fb4]",
            "subs sl, r0, 0",
            "ldr r5, [r4, r3]",
            "beq 0x28a98",
            "add r8, sp, 0x20",
            "mov r1, 0x80",
            "mov r2, sl",
            "mov r0, r8",
            "bl sym.imp.fgets",
            "ldr r1, [0x00028fb8]",
            "add r6, sp, 0xa0",
            "mov r0, r8",
            "mov r2, r6",
            "add r1, pc, r1",
            "bl sym.imp.sscanf",
            "ldrb r3, [r5]",
            "cmp r3, 3",
            "bls 0x28a3c",
            "mov r0, r7",
            "bl sym.imp.time",
            "movw r3, 0x6f8",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00028fbc]",
            "ldr r0, [0x00028fc0]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x274",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x00028fc4]",
            "mov r1, r6",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00028fc8]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, sl",
            "mov sl, 0",
            "bl sym.imp.fclose",
            "str sl, [sp, 0x320]",
            "mov r1, sl",
            "mov r2, 0xfc",
            "add r0, sp, 0x324",
            "bl sym.imp.memset",
            "ldr r1, [0x00028fcc]",
            "add r7, sp, 0x320",
            "ldr r2, [0x00028fd0]",
            "mov r3, r6",
            "add r1, pc, r1",
            "mov r0, r7",
            "add r2, pc, r2",
            "bl sym.imp.sprintf",
            "ldr r1, [0x00028fd4]",
            "mov r0, r7",
            "add r1, pc, r1",
            "bl sym.imp.fopen",
            "subs fp, r0, 0",
            "bne 0x28af8",
            "b 0x28b68",
            "ldrb r3, [r5]",
            "cmp r3, 3",
            "bls 0x28b60",
            "bl sym.imp.time",
            "movw r3, 0x6fe",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00028fd8]",
            "ldr r0, [0x00028fdc]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x274",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x00028fe0]",
            "mov r1, r6",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00028fc8]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0x28b60",
            "ldrb r3, [r5]",
            "cmp r3, 3",
            "bls 0x28b58",
            "mov r0, sl",
            "bl sym.imp.time",
            "movw r3, 0x70a",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00028fe4]",
            "ldr r0, [0x00028fe8]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x274",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x00028fec]",
            "mov r1, r7",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00028fc8]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, fp",
            "bl sym.imp.fclose",
            "mov sb, 0",
            "b 0x28f98",
            "ldrb r3, [r5]",
            "cmp r3, 3",
            "bls 0x28bc4",
            "bl sym.imp.time",
            "movw r3, 0x70f",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00028ff0]",
            "ldr r0, [0x00028ff4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x274",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x00028ff8]",
            "mov r1, r7",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00028fc8]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r1, [0x00028ffc]",
            "mov r0, r7",
            "ldr r2, [0x00029000]",
            "ldr r3, [sp, 8]",
            "add r1, pc, r1",
            "add r2, pc, r2",
            "str r6, [sp]",
            "bl sym.imp.sprintf",
            "ldr r1, [0x00029004]",
            "mov r0, r7",
            "add r1, pc, r1",
            "bl sym.imp.fopen",
            "ldrb r3, [r5]",
            "subs sl, r0, 0",
            "beq 0x28c64",
            "cmp r3, 3",
            "bls 0x28c5c",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x717",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00029008]",
            "ldr r0, [0x0002900c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x274",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x00029010]",
            "mov r1, r7",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00028fc8]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, sl",
            "b 0x28b5c",
            "cmp r3, 3",
            "bls 0x28cbc",
            "bl sym.imp.time",
            "movw r3, 0x71c",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00029014]",
            "ldr r0, [0x00029018]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x274",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x0002901c]",
            "mov r1, r7",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00028fc8]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "add r3, sp, 0x2a0",
            "add r7, sp, 0x120",
            "str r3, [sp, 0xc]",
            "add fp, sp, 0x1a0",
            "ldr r3, [0x00029020]",
            "add sl, sp, 0x220",
            "mov r0, r7",
            "mov r1, fp",
            "add r3, pc, r3",
            "mov r2, sl",
            "str r3, [sp]",
            "add r3, sp, 0x2a0",
            "bl fcn.00009370",
            "ldrb r3, [r5]",
            "subs sb, r0, 0",
            "beq 0x28dbc",
            "cmp r3, 3",
            "bls 0x28d54",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x722",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00029024]",
            "ldr r0, [0x00029028]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x274",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x0002902c]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00028fc8]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r5, 0",
            "add r0, sp, 0x420",
            "str r5, [sp, 0x420]",
            "add r4, sp, 0x620",
            "mov r1, r5",
            "mov r2, 0x1fc",
            "add r0, r0, 4",
            "bl sym.imp.memset",
            "str r5, [r4, -0x610]!",
            "mov r1, r5",
            "mov r2, 0xc",
            "sub r0, r8, 0xc",
            "bl sym.imp.memset",
            "mov r0, r4",
            "add r5, sp, 0x420",
            "bl loc.imp.getzy1905Version",
            "ldr r1, [0x00029030]",
            "mov r0, r5",
            "ldr r3, [0x00029034]",
            "mov r2, r4",
            "add r1, pc, r1",
            "add r3, pc, r3",
            "bl sym.imp.sprintf",
            "mov r0, r5",
            "bl sym.imp.system",
            "b 0x28f94",
            "cmp r3, 3",
            "bls 0x28e24",
            "bl sym.imp.time",
            "movw r3, 0x72c",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00029038]",
            "ldr r0, [0x0002903c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x274",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x00029040]",
            "add r3, sp, 0x2a0",
            "str r3, [sp]",
            "mov r1, r7",
            "add r0, pc, r0",
            "mov r3, sl",
            "mov r2, fp",
            "bl sym.imp.printf",
            "ldr r3, [0x00028fc8]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, r7",
            "mov r1, r6",
            "bl sym.imp.strcmp",
            "subs r8, r0, 0",
            "beq 0x28ea0",
            "ldrb r3, [r5]",
            "cmp r3, 3",
            "bls 0x28b60",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x731",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00029044]",
            "ldr r0, [0x00029048]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x274",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x0002904c]",
            "mov r1, r7",
            "mov r2, r6",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00028fc8]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0x28f98",
            "bl sym.imp.time",
            "ldr r3, [0x00029050]",
            "mov r7, r0",
            "add r3, pc, r3",
            "ldr r3, [r3]",
            "rsb r3, r3, r0",
            "cmp r3, 0xb4",
            "ldrb r3, [r5]",
            "ble 0x28f3c",
            "cmp r3, 3",
            "bls 0x28f1c",
            "mov r0, r8",
            "bl sym.imp.time",
            "movw r3, 0x739",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00029054]",
            "ldr r0, [0x00029058]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x274",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x0002905c]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00028fc8]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x00029060]",
            "mov r2, r6",
            "ldr r0, [sp, 8]",
            "add r3, pc, r3",
            "mov r1, r0",
            "str r7, [r3]",
            "bl fcn.000087e8",
            "b 0x28f94",
            "cmp r3, 3",
            "bls 0x28f94",
            "mov r0, r8",
            "bl sym.imp.time",
            "mov r3, 0x740",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00029064]",
            "ldr r0, [0x00029068]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x274",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x0002906c]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00028fc8]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov sb, 0x10",
            "mov r0, sb",
            "add sp, sp, 0x620",
            "add sp, sp, 4",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00009370": {
        "function_address": "0x00009370",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x234]!"
        ]
    },
    "fcn.000087e8": {
        "function_address": "0x000087e8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x9e4]!"
        ]
    },
    "sym.FW_downloadFWfilefromFTP": {
        "function_address": "0x00025fc8",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "sub sp, sp, 0x880",
            "ldr r5, [0x00026384]",
            "sub sp, sp, 8",
            "ldr r3, [0x00026388]",
            "mov r7, r0",
            "add r5, pc, r5",
            "mov r6, r1",
            "mov sb, r2",
            "ldr r8, [r5, r3]",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "bls 0x26058",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x4a6",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002638c]",
            "ldr r0, [0x00026390]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x174",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x00026394]",
            "mov r3, sb",
            "mov r1, r7",
            "mov r2, r6",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00026398]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r4, 0",
            "mov r2, 0x7c",
            "str r4, [sp, 8]",
            "mov r1, r4",
            "add r0, sp, 0xc",
            "bl sym.imp.memset",
            "str r4, [sp, 0x88]",
            "mov r1, r4",
            "mov r2, 0x7c",
            "add r0, sp, 0x8c",
            "bl sym.imp.memset",
            "str r4, [sp, 0x108]",
            "mov r1, r4",
            "mov r2, 0x7c",
            "add r0, sp, 0x10c",
            "bl sym.imp.memset",
            "str r4, [sp, 0x188]",
            "mov r1, r4",
            "mov r2, 0xfc",
            "add r0, sp, 0x18c",
            "bl sym.imp.memset",
            "str r4, [sp, 0x288]",
            "mov r1, r4",
            "mov r2, 0x1fc",
            "add r0, sp, 0x28c",
            "bl sym.imp.memset",
            "mov r0, r7",
            "mov r1, r6",
            "bl sym.imp.strcmp",
            "cmp r0, r4",
            "add r4, sp, 0x288",
            "mov r0, r4",
            "bne 0x260ec",
            "ldr r1, [0x0002639c]",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "b 0x26104",
            "ldr r1, [0x000263a0]",
            "mov r3, r6",
            "ldr r2, [0x000263a4]",
            "add r1, pc, r1",
            "add r2, pc, r2",
            "bl sym.imp.sprintf",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "bls 0x26164",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x4bc",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000263a8]",
            "ldr r0, [0x000263ac]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x174",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x000263b0]",
            "mov r1, r4",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00026398]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r7, [0x000263b4]",
            "mov r0, r4",
            "add r7, pc, r7",
            "mov r1, r7",
            "bl sym.imp.fopen",
            "cmp r0, 0",
            "bne 0x26194",
            "mov r0, r4",
            "mov r1, r7",
            "bl sym.imp.fopen",
            "cmp r0, 0",
            "beq 0x26218",
            "add sl, sp, 8",
            "bl sym.imp.fclose",
            "str r4, [sp]",
            "mov r0, sl",
            "add r1, sp, 0x88",
            "add r2, sp, 0x108",
            "add r3, sp, 0x188",
            "bl fcn.00009370",
            "subs r7, r0, 0",
            "beq 0x26220",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "bls 0x26218",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x4cb",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000263b8]",
            "ldr r0, [0x000263bc]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x174",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x000263c0]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00026398]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r7, 0x10",
            "b 0x26374",
            "mov r0, sl",
            "mov r1, sb",
            "bl sym.imp.strcmp",
            "ldrb r3, [r8]",
            "cmp r0, 0",
            "beq 0x2628c",
            "cmp r3, 3",
            "bls 0x26218",
            "mov r0, r7",
            "bl sym.imp.time",
            "movw r3, 0x4d4",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000263c4]",
            "ldr r0, [0x000263c8]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x174",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x000263cc]",
            "mov r1, sl",
            "mov r2, sb",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "b 0x26208",
            "cmp r3, 3",
            "bls 0x262e8",
            "bl sym.imp.time",
            "movw r3, 0x4d9",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000263d0]",
            "ldr r0, [0x000263d4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x174",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x000263d8]",
            "mov r1, r6",
            "mov r2, r4",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00026398]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "add sb, sp, 0x480",
            "mov r8, 0",
            "str r8, [sp, 0x488]",
            "add sb, sb, 0xc",
            "mov r1, r8",
            "mov r2, 0x1fc",
            "mov r0, sb",
            "add r5, sp, 0x480",
            "bl sym.imp.memset",
            "ldr r1, [0x000263dc]",
            "add r5, r5, 8",
            "mov r3, r4",
            "mov r2, r6",
            "add r1, pc, r1",
            "mov r0, r5",
            "bl sym.imp.sprintf",
            "mov r0, r5",
            "bl loc.imp.Outputlog",
            "str r8, [sp, 0x488]",
            "mov r1, r8",
            "mov r2, 0x3fc",
            "mov r0, sb",
            "bl sym.imp.memset",
            "ldr r3, [0x000263e0]",
            "mov r0, r5",
            "ldr r1, [0x000263e4]",
            "mov r2, r4",
            "add r3, pc, r3",
            "stm sp, {r3, r6}",
            "ldr r3, [0x000263e8]",
            "add r1, pc, r1",
            "add r3, pc, r3",
            "bl sym.imp.sprintf",
            "mov r0, r5",
            "bl sym.imp.system",
            "mov r0, r7",
            "add sp, sp, 0x880",
            "add sp, sp, 8",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "sym.sha256_done": {
        "function_address": "0x00034778",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r5, r1",
            "ldr r1, [r0, 0x28]",
            "mov r4, r0",
            "cmp r1, 0x3f",
            "bhi 0x3489c",
            "ldrd r2, r3, [r4]",
            "lsl r0, r1, 3",
            "adds r2, r2, r0",
            "adc r3, r3, 0",
            "strd r2, r3, [r4]",
            "add r3, r1, 1",
            "mvn r2, 0x7f",
            "add r1, r4, r1",
            "cmp r3, 0x38",
            "str r3, [r4, 0x28]",
            "strb r2, [r1, 0x2c]",
            "movhi r2, 0",
            "bls 0x347f4",
            "ldr r3, [r4, 0x28]",
            "cmp r3, 0x3f",
            "addls r1, r3, 1",
            "addls r3, r4, r3",
            "strls r1, [r4, 0x28]",
            "strbls r2, [r3, 0x2c]",
            "bls 0x347c4",
            "mov r0, r4",
            "add r1, r4, 0x2c",
            "bl fcn.0003445c",
            "mov r3, 0",
            "str r3, [r4, 0x28]",
            "mov r2, 0",
            "ldr r3, [r4, 0x28]",
            "cmp r3, 0x37",
            "addls r1, r3, 1",
            "addls r3, r4, r3",
            "strls r1, [r4, 0x28]",
            "strbls r2, [r3, 0x2c]",
            "bls 0x347f8",
            "ldr r2, [r4, 4]",
            "mov r0, r4",
            "ldr r3, [r4]",
            "lsr r1, r2, 0x18",
            "strb r1, [r4, 0x64]",
            "lsr r1, r2, 0x10",
            "strb r1, [r4, 0x65]",
            "strb r2, [r4, 0x67]",
            "lsr r1, r2, 8",
            "lsr r2, r3, 0x18",
            "strb r2, [r4, 0x68]",
            "lsr r2, r3, 0x10",
            "strb r2, [r4, 0x69]",
            "lsr r2, r3, 8",
            "strb r1, [r4, 0x66]",
            "add r1, r4, 0x2c",
            "strb r2, [r4, 0x6a]",
            "strb r3, [r4, 0x6b]",
            "bl fcn.0003445c",
            "mov r1, r5",
            "add r2, r5, 0x20",
            "ldr r3, [r4, 8]",
            "add r1, r1, 4",
            "add r4, r4, 4",
            "lsr r0, r3, 0x18",
            "strb r0, [r1, -4]",
            "lsr r0, r3, 0x10",
            "strb r0, [r1, -3]",
            "lsr r0, r3, 8",
            "strb r0, [r1, -2]",
            "strb r3, [r1, -1]",
            "cmp r1, r2",
            "bne 0x34868",
            "b 0x348a4",
            "mvn r0, 0",
            "pop {r3, r4, r5, pc}",
            "mov r0, 0",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.0003445c": {
        "function_address": "0x0003445c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x12c",
            "mov r2, r0",
            "mov r3, 0",
            "add r7, sp, 8",
            "ldr ip, [r2, 8]",
            "add r2, r2, 4",
            "str ip, [r3, r7]",
            "add r3, r3, 4",
            "cmp r3, 0x20",
            "bne 0x34470",
            "mov r3, 0",
            "add r6, sp, 0x28",
            "add r2, r1, r3",
            "ldrb lr, [r1, r3]",
            "ldrb ip, [r2, 3]",
            "orr ip, ip, lr, lsl 24",
            "ldrb lr, [r2, 1]",
            "ldrb r2, [r2, 2]",
            "orr ip, ip, lr, lsl 16",
            "orr r2, ip, r2, lsl 8",
            "str r2, [r3, r6]",
            "add r3, r3, 4",
            "cmp r3, 0x40",
            "bne 0x34490",
            "mov r3, r6",
            "mov r2, 0",
            "ldr ip, [r3, 0x38]",
            "add r3, r3, 4",
            "ldr r4, [r3, 0x20]",
            "ldr lr, [r6, r2]",
            "add r2, r2, 4",
            "ldr r1, [r3]",
            "cmp r2, 0xc0",
            "add lr, r4, lr",
            "ror r4, ip, 0x11",
            "eor r4, r4, ip, ror 19",
            "eor ip, r4, ip, lsr 10",
            "add ip, lr, ip",
            "ror lr, r1, 7",
            "eor lr, lr, r1, ror 18",
            "eor r1, lr, r1, lsr 3",
            "add r1, ip, r1",
            "str r1, [r3, 0x3c]",
            "bne 0x344c8",
            "ldr r8, [0x00034614]",
            "add r2, sp, 0x18",
            "ldr fp, [sp, 0x24]",
            "add r1, sp, 0xc",
            "ldm r2, {r2, r5, ip}",
            "mov lr, 0",
            "ldm r1, {r1, r4, sl}",
            "ldr r3, [sp, 8]",
            "add r8, pc, r8",
            "str r8, [sp, 4]",
            "ldr r8, [sp, 4]",
            "ldr sb, [r6, lr]",
            "ldr r8, [lr, r8]",
            "add lr, lr, 4",
            "cmp lr, 0x100",
            "add sb, sb, r8",
            "ror r8, r2, 6",
            "eor r8, r8, r2, ror 11",
            "eor r8, r8, r2, ror 25",
            "add sb, sb, r8",
            "eor r8, ip, r5",
            "and r8, r8, r2",
            "eor r8, r8, ip",
            "add r8, sb, r8",
            "add fp, r8, fp",
            "orr r8, r1, r3",
            "add sb, sl, fp",
            "and r8, r8, r4",
            "and sl, r1, r3",
            "orr r8, r8, sl",
            "ror sl, r3, 2",
            "eor sl, sl, r3, ror 13",
            "eor sl, sl, r3, ror 22",
            "add r8, r8, sl",
            "add r8, r8, fp",
            "beq 0x345c4",
            "mov fp, ip",
            "mov sl, r4",
            "mov ip, r5",
            "mov r4, r1",
            "mov r5, r2",
            "mov r1, r3",
            "mov r2, sb",
            "mov r3, r8",
            "b 0x34538",
            "str r3, [sp, 0xc]",
            "mov r3, 0",
            "str ip, [sp, 0x24]",
            "str sb, [sp, 0x18]",
            "str r2, [sp, 0x1c]",
            "str r5, [sp, 0x20]",
            "str r8, [sp, 8]",
            "str r1, [sp, 0x10]",
            "str r4, [sp, 0x14]",
            "ldr r1, [r0, 8]",
            "add r0, r0, 4",
            "ldr r2, [r7, r3]",
            "add r3, r3, 4",
            "cmp r3, 0x20",
            "add r2, r1, r2",
            "str r2, [r0, 4]",
            "bne 0x345e8",
            "mov r0, 0",
            "add sp, sp, 0x12c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.wps_config_methods_str2bin": {
        "function_address": "0x0002de60",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "subs r5, r0, 0",
            "beq 0x2dfac",
            "ldr r1, [0x0002dfb8]",
            "add r1, pc, r1",
            "bl sym.imp.strstr",
            "ldr r1, [0x0002dfbc]",
            "cmp r0, 0",
            "mov r0, r5",
            "movne r4, 2",
            "add r1, pc, r1",
            "moveq r4, 0",
            "bl sym.imp.strstr",
            "cmp r0, 0",
            "beq 0x2dea8",
            "cmp r4, 0",
            "movne r4, 6",
            "moveq r4, 4",
            "ldr r1, [0x0002dfc0]",
            "mov r0, r5",
            "add r1, pc, r1",
            "bl sym.imp.strstr",
            "ldr r1, [0x0002dfc4]",
            "cmp r0, 0",
            "mov r0, r5",
            "orrne r4, r4, 8",
            "add r1, pc, r1",
            "bl sym.imp.strstr",
            "ldr r1, [0x0002dfc8]",
            "cmp r0, 0",
            "mov r0, r5",
            "orrne r4, r4, 0x10",
            "add r1, pc, r1",
            "bl sym.imp.strstr",
            "ldr r1, [0x0002dfcc]",
            "cmp r0, 0",
            "mov r0, r5",
            "orrne r4, r4, 0x20",
            "add r1, pc, r1",
            "bl sym.imp.strstr",
            "ldr r1, [0x0002dfd0]",
            "cmp r0, 0",
            "mov r0, r5",
            "orrne r4, r4, 0x40",
            "add r1, pc, r1",
            "bl sym.imp.strstr",
            "ldr r1, [0x0002dfd4]",
            "cmp r0, 0",
            "mov r0, r5",
            "orrne r4, r4, 0x80",
            "add r1, pc, r1",
            "bl sym.imp.strstr",
            "ldr r1, [0x0002dfd8]",
            "cmp r0, 0",
            "mov r0, r5",
            "orrne r4, r4, 0x100",
            "add r1, pc, r1",
            "bl sym.imp.strstr",
            "ldr r1, [0x0002dfdc]",
            "cmp r0, 0",
            "orrne r4, r4, 0x2000",
            "mov r0, r5",
            "add r1, pc, r1",
            "orrne r4, r4, 8",
            "uxthne r4, r4",
            "bl sym.imp.strstr",
            "ldr r1, [0x0002dfe0]",
            "cmp r0, 0",
            "orrne r4, r4, 0x4000",
            "mov r0, r5",
            "add r1, pc, r1",
            "orrne r4, r4, 8",
            "uxthne r4, r4",
            "bl sym.imp.strstr",
            "ldr r1, [0x0002dfe4]",
            "cmp r0, 0",
            "mov r0, r5",
            "orrne r4, r4, 0x280",
            "add r1, pc, r1",
            "bl sym.imp.strstr",
            "cmp r0, 0",
            "orrne r4, r4, 0x480",
            "b 0x2dfb0",
            "movw r4, 0x2148",
            "mov r0, r4",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.imp.strstr": {
        "function_address": "0x00008e24",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x5bc]!"
        ]
    },
    "sym.getLEDvalue": {
        "function_address": "0x00011ed8",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r5, r0",
            "ldr r4, [0x00011f04]",
            "bl fcn.00009484",
            "ldr r3, [0x00011f08]",
            "mov r0, r5",
            "add r4, pc, r4",
            "ldr r1, [r4, r3]",
            "bl sym.imp.strcpy",
            "mov r0, 0",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.00009484": {
        "function_address": "0x00009484",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x17c]!"
        ]
    },
    "sym.zyNetCtrl_genWIFIChannelData": {
        "function_address": "0x00016b90",
        "instructions": [
            "push {r0, r1, r4, r5, r6, lr}",
            "mov r5, r0",
            "ldrb r3, [r2]",
            "mov r6, r1",
            "mov r4, r2",
            "cmp r3, 0",
            "beq 0x16bc4",
            "ldr r1, [0x00016bec]",
            "mov r0, r2",
            "ldr r3, [0x00016bf0]",
            "add r1, pc, r1",
            "add r3, pc, r3",
            "bl sym.imp.sprintf",
            "ldr r1, [0x00016bf4]",
            "mov r0, r4",
            "str r6, [sp]",
            "mov r2, r4",
            "add r1, pc, r1",
            "mov r3, r5",
            "bl sym.imp.sprintf",
            "mov r0, 0",
            "add sp, sp, 8",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.get_DeviceName": {
        "function_address": "0x000128e0",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov ip, r0",
            "ldr r3, [0x00012990]",
            "mov r0, r1",
            "ldr r2, [0x00012994]",
            "add r3, pc, r3",
            "ldr r3, [r3, r2]",
            "ldr lr, [r3]",
            "mov r3, r1",
            "ldrb r4, [r3]",
            "rsb r2, r0, r3",
            "mov r1, r3",
            "add r3, r3, 1",
            "lsl r4, r4, 1",
            "ldrh r4, [lr, r4]",
            "tst r4, 0x20",
            "bne 0x12904",
            "mov r4, r2",
            "ldrb r3, [r0, r2]",
            "cmp r3, 0x3a",
            "cmpne r3, 0",
            "movne r5, 1",
            "moveq r5, 0",
            "beq 0x12958",
            "lsl r3, r3, 1",
            "ldrh r3, [lr, r3]",
            "tst r3, 0x20",
            "bne 0x12980",
            "add r2, r2, 1",
            "b 0x12928",
            "cmp r3, 0x3a",
            "bne 0x12980",
            "rsb r4, r4, r2",
            "cmp r4, 0xf",
            "bgt 0x12980",
            "mov r0, ip",
            "mov r2, r4",
            "bl sym.imp.memcpy",
            "strb r5, [r0, r4]",
            "b 0x12988",
            "mov r3, 0",
            "strb r3, [ip]",
            "mov r0, 1",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.getIPv6Info": {
        "function_address": "0x00010fc0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "subs r7, r0, 0",
            "sub sp, sp, 0x124",
            "beq 0x11148",
            "mov r5, 0",
            "mov r2, 0x7c",
            "str r5, [sp, 0x20]",
            "mov r1, r5",
            "add r0, sp, 0x24",
            "bl sym.imp.memset",
            "ldr r0, [0x00011154]",
            "add r0, pc, r0",
            "bl sym.imp.system",
            "ldr r0, [0x00011158]",
            "ldr r1, [0x0001115c]",
            "add r0, pc, r0",
            "add r1, pc, r1",
            "bl sym.imp.fopen",
            "subs r8, r0, 0",
            "beq 0x11038",
            "add r3, sp, 0x20",
            "mov sb, r5",
            "str r3, [sp, 4]",
            "add r3, sp, 0xa4",
            "str r3, [sp, 0xc]",
            "mov r4, r5",
            "ldr r3, [0x00011160]",
            "add r3, pc, r3",
            "str r3, [sp, 8]",
            "b 0x1109c",
            "str r8, [r7, 4]",
            "b 0x11148",
            "mov r6, 0",
            "mov r2, 0x7c",
            "str r6, [sp, 0xa0]",
            "mov r1, r6",
            "add r0, sp, 0xa4",
            "add fp, sp, 0xa0",
            "bl sym.imp.memset",
            "str r6, [sp, 0x10]",
            "mov r1, r6",
            "mov r2, 0xc",
            "add r0, sp, 0x14",
            "add sl, sp, 0x10",
            "bl sym.imp.memset",
            "ldr r1, [sp, 8]",
            "mov r3, sl",
            "add r0, sp, 0x20",
            "mov r2, fp",
            "bl sym.imp.sscanf",
            "ldrb r3, [sp, 0xa0]",
            "cmp r3, r6",
            "moveq ip, sb",
            "bne 0x110b8",
            "mov sb, ip",
            "add r0, sp, 0x20",
            "mov r1, 0x80",
            "mov r2, r8",
            "bl sym.imp.fgets",
            "subs r6, r0, 0",
            "bne 0x11040",
            "b 0x11124",
            "mov r0, 1",
            "mov r1, 0x84",
            "bl sym.imp.calloc",
            "subs ip, r0, 0",
            "bne 0x110f0",
            "cmp r4, r6",
            "beq 0x11148",
            "ldr r5, [r4]",
            "mov r0, r4",
            "bl sym.imp.free",
            "cmp r5, 0",
            "beq 0x11148",
            "mov r4, r5",
            "b 0x110d4",
            "ldr r1, [sp, 8]",
            "add r0, ip, 4",
            "str ip, [sp]",
            "mov r2, fp",
            "mov r3, sl",
            "add r5, r5, 1",
            "bl sym.imp.sprintf",
            "ldr ip, [sp]",
            "cmp r4, 0",
            "str r6, [ip]",
            "moveq r4, ip",
            "strne ip, [sb]",
            "b 0x11098",
            "mov r0, r8",
            "bl sym.imp.fclose",
            "ldr r0, [0x00011164]",
            "add r0, pc, r0",
            "bl sym.imp.remove",
            "str r5, [r7]",
            "mov r0, r6",
            "str r4, [r7, 4]",
            "b 0x1114c",
            "mov r0, 0x10",
            "add sp, sp, 0x124",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.reloadwifi_Main_5G": {
        "function_address": "0x0001ca74",
        "instructions": [
            "push {r0, r1, r4, lr}",
            "ldr r0, [0x0001cae4]",
            "add r0, pc, r0",
            "bl sym.imp.system",
            "ldr r0, [0x0001cae8]",
            "ldr r1, [0x0001caec]",
            "add r0, pc, r0",
            "add r1, pc, r1",
            "bl sym.imp.fopen",
            "subs r4, r0, 0",
            "beq 0x1cadc",
            "add r0, sp, 4",
            "mov r1, 4",
            "mov r2, r4",
            "bl sym.imp.fgets",
            "ldrb r3, [sp, 4]",
            "cmp r3, 0x30",
            "bne 0x1cac8",
            "ldr r0, [0x0001caf0]",
            "add r0, pc, r0",
            "bl sym.imp.system",
            "mov r0, r4",
            "bl sym.imp.fclose",
            "ldr r0, [0x0001caf4]",
            "add r0, pc, r0",
            "bl sym.imp.remove",
            "add sp, sp, 8",
            "pop {r4, pc}"
        ]
    },
    "sym.zyNetCtrl_WPSApporve_getfiledata": {
        "function_address": "0x00029468",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, lr}",
            "sub sp, sp, 0x21c",
            "ldr r4, [0x00029618]",
            "bl fcn.00008d94",
            "ldr r1, [0x0002961c]",
            "add r4, pc, r4",
            "add r1, pc, r1",
            "mov r0, r4",
            "ldr r5, [0x00029620]",
            "bl sym.imp.fopen",
            "subs r6, r0, 0",
            "add r5, pc, r5",
            "ldrne r8, [0x00029624]",
            "addne r7, sp, 0x18",
            "movne sb, 0",
            "addne r8, pc, r8",
            "bne 0x29574",
            "ldr r3, [0x00029628]",
            "ldr r3, [r5, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x2960c",
            "bl sym.imp.time",
            "mov r3, 0x56",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002962c]",
            "ldr r0, [0x00029630]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x55",
            "bl sym.imp.printf",
            "ldr r0, [0x00029634]",
            "mov r1, r4",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00029638]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0x2960c",
            "mov r0, 1",
            "mov r1, 0x20",
            "bl sym.imp.calloc",
            "subs r4, r0, 0",
            "beq 0x29590",
            "add r3, r4, 6",
            "mov r0, r7",
            "str r3, [sp]",
            "add r3, r4, 7",
            "str r3, [sp, 4]",
            "add r3, r4, 8",
            "str r3, [sp, 8]",
            "add r3, r4, 9",
            "str r3, [sp, 0xc]",
            "add r3, r4, 0xc",
            "str r3, [sp, 0x10]",
            "add r3, r4, 0x10",
            "str r3, [sp, 0x14]",
            "mov r1, r8",
            "add r2, r4, 4",
            "add r3, r4, 5",
            "bl sym.imp.sscanf",
            "str sb, [r4]",
            "mov r0, r4",
            "bl fcn.0000877c",
            "mov r0, r7",
            "mov r1, 0x200",
            "mov r2, r6",
            "bl sym.imp.fgets",
            "subs r4, r0, 0",
            "bne 0x29510",
            "b 0x295fc",
            "ldr r3, [0x00029628]",
            "ldr r3, [r5, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x295ec",
            "bl sym.imp.time",
            "mov r3, 0x62",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002963c]",
            "ldr r0, [0x00029640]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x55",
            "bl sym.imp.printf",
            "ldr r0, [0x00029644]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00029638]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "bl fcn.00008d94",
            "mov r0, r6",
            "bl sym.imp.fclose",
            "b 0x2960c",
            "mov r0, r6",
            "bl sym.imp.fclose",
            "mov r0, r4",
            "b 0x29610",
            "mov r0, 0x10",
            "add sp, sp, 0x21c",
            "pop {r4, r5, r6, r7, r8, sb, pc}"
        ]
    },
    "fcn.00008d94": {
        "function_address": "0x00008d94",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x61c]!"
        ]
    },
    "fcn.0000877c": {
        "function_address": "0x0000877c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0xa2c]!"
        ]
    },
    "sym.wps_build_mac_addr": {
        "function_address": "0x00033918",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r4, r0",
            "mov r5, r1",
            "movw r1, 0x1020",
            "bl fcn.000331d0",
            "mov r0, r4",
            "mov r1, 6",
            "bl fcn.000331d0",
            "mov r0, r4",
            "mov r1, r5",
            "mov r2, 6",
            "bl fcn.00033208",
            "mov r0, 0",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.zyEvent_INTFREMOVEDEVENTID": {
        "function_address": "0x00018164",
        "instructions": [
            "push {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}",
            "mov r6, r0",
            "ldr r5, [0x00018344]",
            "ldr r3, [0x00018348]",
            "add r5, pc, r5",
            "ldr r8, [r5, r3]",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "bls 0x181d8",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0x55",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001834c]",
            "ldr r0, [0x00018350]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x19",
            "bl sym.imp.printf",
            "ldr r0, [0x00018354]",
            "add r1, r6, 4",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00018358]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, 1",
            "mov r1, 8",
            "bl sym.imp.calloc",
            "subs r4, r0, 0",
            "bne 0x18230",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "bls 0x1833c",
            "bl sym.imp.time",
            "mov r3, 0x5a",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001835c]",
            "ldr r0, [0x00018360]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x19",
            "bl sym.imp.printf",
            "ldr r0, [0x00018364]",
            "add r0, pc, r0",
            "b 0x18298",
            "mov r0, 1",
            "mov r1, 0x20",
            "bl sym.imp.calloc",
            "str r0, [r4, 4]",
            "cmp r0, 0",
            "mov r7, r0",
            "bne 0x182b0",
            "mov r0, r4",
            "bl sym.imp.free",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "bls 0x1833c",
            "mov r0, r7",
            "bl sym.imp.time",
            "mov r3, 0x61",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00018368]",
            "ldr r0, [0x0001836c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x19",
            "bl sym.imp.printf",
            "ldr r0, [0x00018370]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00018358]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0x1833c",
            "add r0, r0, 4",
            "add r1, r6, 4",
            "bl sym.imp.strcpy",
            "mov r2, r6",
            "mov r3, 0",
            "ldr r1, [r4, 4]",
            "add r2, r2, 1",
            "ldrb r0, [r2, 0x13]",
            "add r1, r1, r3",
            "add r3, r3, 1",
            "cmp r3, 6",
            "strb r0, [r1, 0x14]",
            "bne 0x182c4",
            "ldr r3, [r4, 4]",
            "ldr r2, [r6, 0x24]",
            "str r2, [r3, 0x1c]",
            "mov r3, 1",
            "strb r3, [r4]",
            "mov r3, 0",
            "str r3, [sp, 0xc]",
            "ldr r3, [0x00018374]",
            "ldr r3, [r5, r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x18324",
            "mov r0, 3",
            "mov r1, r4",
            "add r2, sp, 0xc",
            "blx r3",
            "ldr r0, [r4, 4]",
            "bl sym.imp.free",
            "mov r0, r4",
            "add sp, sp, 0x10",
            "pop {r4, r5, r6, r7, r8, lr}",
            "b sym.imp.free",
            "add sp, sp, 0x10",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "sym.uuid_bin2str": {
        "function_address": "0x0002ec94",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r2",
            "ldrb r2, [r0, 1]",
            "sub sp, sp, 0x40",
            "ldrb r3, [r0]",
            "str r2, [sp]",
            "ldrb r2, [r0, 2]",
            "str r2, [sp, 4]",
            "ldrb r2, [r0, 3]",
            "str r2, [sp, 8]",
            "ldrb r2, [r0, 4]",
            "str r2, [sp, 0xc]",
            "ldrb r2, [r0, 5]",
            "str r2, [sp, 0x10]",
            "ldrb r2, [r0, 6]",
            "str r2, [sp, 0x14]",
            "ldrb r2, [r0, 7]",
            "str r2, [sp, 0x18]",
            "ldrb r2, [r0, 8]",
            "str r2, [sp, 0x1c]",
            "ldrb r2, [r0, 9]",
            "str r2, [sp, 0x20]",
            "ldrb r2, [r0, 0xa]",
            "str r2, [sp, 0x24]",
            "ldrb r2, [r0, 0xb]",
            "str r2, [sp, 0x28]",
            "ldrb r2, [r0, 0xc]",
            "str r2, [sp, 0x2c]",
            "ldrb r2, [r0, 0xd]",
            "str r2, [sp, 0x30]",
            "ldrb r2, [r0, 0xe]",
            "str r2, [sp, 0x34]",
            "ldrb r2, [r0, 0xf]",
            "mov r0, r1",
            "mov r1, r4",
            "str r2, [sp, 0x38]",
            "ldr r2, [0x0002ed4c]",
            "add r2, pc, r2",
            "bl sym.imp.snprintf",
            "cmp r0, r4",
            "movlo r4, 0",
            "movhs r4, 1",
            "orr r0, r4, r0, lsr 31",
            "rsb r0, r0, 0",
            "add sp, sp, 0x40",
            "pop {r4, pc}"
        ]
    },
    "sym.imp.snprintf": {
        "function_address": "0x000086ec",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0xa8c]!"
        ]
    },
    "sym.wps_process_key_wrap_auth": {
        "function_address": "0x00033ad8",
        "instructions": [
            "push {r4, r5, lr}",
            "subs r4, r2, 0",
            "sub sp, sp, 0x2c",
            "beq 0x33b34",
            "ldr r3, [r1, 4]",
            "ldr r2, [r1, 8]",
            "sub r1, r4, 4",
            "sub r3, r3, 0xc",
            "add ip, r2, r3",
            "cmp ip, r1",
            "bne 0x33b34",
            "add r5, sp, 8",
            "mov r1, 0x20",
            "str r5, [sp]",
            "add r0, r0, 0xe4",
            "bl fcn.00008c2c",
            "mov r0, r5",
            "mov r1, r4",
            "mov r2, 8",
            "bl sym.imp.memcmp",
            "adds r0, r0, 0",
            "mvnne r0, 0",
            "b 0x33b38",
            "mvn r0, 0",
            "add sp, sp, 0x2c",
            "pop {r4, r5, pc}"
        ]
    },
    "fcn.00008c2c": {
        "function_address": "0x00008c2c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x70c]!"
        ]
    },
    "sym.imp.memcmp": {
        "function_address": "0x00008f8c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x4cc]!"
        ]
    },
    "sym.resetToDefault": {
        "function_address": "0x0000f46c",
        "instructions": [
            "push {r4, r5, lr}",
            "sub sp, sp, 0x20c",
            "ldr r4, [0x0000f564]",
            "bl fcn.00008d88",
            "cmp r0, 4",
            "mov r5, r0",
            "add r4, pc, r4",
            "bne 0xf4f4",
            "ldr r3, [0x0000f568]",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0xf558",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0xab6",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, r5",
            "ldr r3, [0x0000f56c]",
            "ldr r0, [0x0000f570]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x330",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x0000f574]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000f578]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0xf558",
            "mov r4, 0",
            "mov r2, 0x1fc",
            "str r4, [sp, 8]",
            "mov r1, r4",
            "add r0, sp, 0xc",
            "bl sym.imp.memset",
            "ldr r1, [0x0000f57c]",
            "add r3, sp, 8",
            "mov r0, r3",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "bl loc.imp.Outputlog",
            "ldr r0, [0x0000f580]",
            "add r0, pc, r0",
            "bl sym.imp.system",
            "mov r0, 3",
            "bl sym.imp.sleep",
            "ldr r0, [0x0000f584]",
            "add r0, pc, r0",
            "bl sym.imp.system",
            "ldr r0, [0x0000f588]",
            "add r0, pc, r0",
            "bl sym.imp.system",
            "mov r0, r4",
            "b 0xf55c",
            "mov r0, 0x10",
            "add sp, sp, 0x20c",
            "pop {r4, r5, pc}"
        ]
    },
    "fcn.00008d88": {
        "function_address": "0x00008d88",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x624]!"
        ]
    },
    "sym.imp.sleep": {
        "function_address": "0x000089a4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x8bc]!"
        ]
    },
    "sym.dh5_derive_shared": {
        "function_address": "0x00034afc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0xa04]!",
            "push {r3, r4, r5, lr}",
            "mov r0, 5",
            "mov r4, r1",
            "mov r5, r2",
            "bl fcn.000086bc",
            "mov r2, r0",
            "mov r1, r5",
            "mov r0, r4",
            "pop {r3, r4, r5, lr}",
            "b 0x87b8"
        ]
    },
    "fcn.000086bc": {
        "function_address": "0x000086bc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0xaac]!"
        ]
    },
    "sym.getWPSConfig": {
        "function_address": "0x0000bbd4",
        "instructions": [
            "push {r0, r1, r2, r4, r5, r6, r7, lr}",
            "mov r7, r0",
            "ldr r4, [0x0000bc8c]",
            "mov r6, r1",
            "ldr r3, [0x0000bc90]",
            "mov r5, r2",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0xbc50",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x5bb",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000bc94]",
            "ldr r0, [0x0000bc98]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x140",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x0000bc9c]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000bca0]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x0000bca4]",
            "mov r0, 0",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "str r3, [r7]",
            "ldr r3, [0x0000bca8]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "str r3, [r6]",
            "ldr r3, [0x0000bcac]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "str r3, [r5]",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, pc}"
        ]
    },
    "sym.wps_build_config_methods": {
        "function_address": "0x00033378",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r4, r0",
            "mov r5, r1",
            "movw r1, 0x1008",
            "bl fcn.000331d0",
            "mov r0, r4",
            "mov r1, 2",
            "bl fcn.000331d0",
            "mov r0, r4",
            "mov r1, r5",
            "bl fcn.000331d0",
            "mov r0, 0",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.wpabuf_alloc_copy": {
        "function_address": "0x0002ea40",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r6, r0",
            "mov r0, r1",
            "mov r4, r1",
            "bl fcn.00008ddc",
            "subs r5, r0, 0",
            "beq 0x2ea68",
            "mov r1, r6",
            "mov r2, r4",
            "bl fcn.0002ea18",
            "mov r0, r5",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.FW_vsftpd_StartStop": {
        "function_address": "0x000274c0",
        "instructions": [
            "push {r0, r1, r4, lr}",
            "subs r3, r0, 0",
            "ldr r4, [0x000275e0]",
            "add r4, pc, r4",
            "bne 0x2754c",
            "ldr r3, [0x000275e4]",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x27534",
            "bl sym.imp.time",
            "movw r3, 0x697",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000275e8]",
            "ldr r0, [0x000275ec]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x1bc",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x000275f0]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x000275f4]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r0, [0x000275f8]",
            "add r0, pc, r0",
            "bl sym.imp.system",
            "ldr r0, [0x000275fc]",
            "add r0, pc, r0",
            "b 0x275d0",
            "cmp r3, 1",
            "movne r0, 0x10",
            "bne 0x275d8",
            "ldr r3, [0x000275e4]",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x275bc",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x69e",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00027600]",
            "ldr r0, [0x00027604]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x1bc",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x00027608]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x000275f4]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r0, [0x0002760c]",
            "add r0, pc, r0",
            "bl sym.imp.system",
            "ldr r0, [0x00027610]",
            "add r0, pc, r0",
            "bl sym.imp.system",
            "mov r0, 0",
            "add sp, sp, 8",
            "pop {r4, pc}"
        ]
    },
    "sym.zyNetCtrl_setWIFIChannelSyncList": {
        "function_address": "0x000173b0",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "subs r5, r0, 0",
            "ldr r3, [0x00017414]",
            "add r3, pc, r3",
            "beq 0x1740c",
            "ldr r2, [0x00017418]",
            "ldr r3, [r3, r2]",
            "ldr r4, [r3]",
            "cmp r4, 0",
            "beq 0x17404",
            "mov r0, r5",
            "add r1, r4, 4",
            "mov r2, 6",
            "bl sym.imp.memcmp",
            "cmp r0, 0",
            "bne 0x173fc",
            "mov r3, 0x63",
            "str r3, [r4, 0x118]",
            "pop {r3, r4, r5, pc}",
            "ldr r4, [r4]",
            "b 0x173d0",
            "mov r0, r4",
            "pop {r3, r4, r5, pc}",
            "mov r0, 0x10",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.Log_DownloadLogFile": {
        "function_address": "0x0002c410",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, lr}",
            "sub sp, sp, 0x4d0",
            "ldr r4, [0x0002c640]",
            "sub sp, sp, 0xc",
            "cmp r1, 0",
            "cmpne r0, 0",
            "mov r5, r0",
            "add r4, pc, r4",
            "ldr r8, [sp, 0x4f8]",
            "beq 0x2c458",
            "cmp r3, 0",
            "cmpne r2, 0",
            "mov r7, r2",
            "moveq r1, 1",
            "movne r1, 0",
            "beq 0x2c458",
            "cmp r8, 0",
            "bne 0x2c4a8",
            "ldr r3, [0x0002c644]",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x2c630",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0xf9",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002c648]",
            "ldr r0, [0x0002c64c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x38",
            "bl sym.imp.printf",
            "ldr r0, [0x0002c650]",
            "add r0, pc, r0",
            "b 0x2c504",
            "ldr r3, [0x0002c654]",
            "ldr sb, [r4, r3]",
            "ldr r0, [sb]",
            "cmp r0, 0",
            "bne 0x2c51c",
            "ldr r3, [0x0002c644]",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x2c630",
            "bl sym.imp.time",
            "movw r3, 0x10b",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002c658]",
            "ldr r0, [0x0002c65c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x38",
            "bl sym.imp.printf",
            "ldr r0, [0x0002c660]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0002c664]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0x2c630",
            "str r1, [sp, 0x18]",
            "mov r2, 0x3c",
            "add r0, sp, 0x1c",
            "add r6, sp, 0x18",
            "bl sym.imp.memset",
            "ldrb r1, [r5, 2]",
            "mov r0, r6",
            "ldrb r2, [r5]",
            "ldrb r3, [r5, 1]",
            "str r1, [sp]",
            "ldrb r1, [r5, 3]",
            "str r1, [sp, 4]",
            "ldrb r1, [r5, 4]",
            "str r1, [sp, 8]",
            "ldrb r1, [r5, 5]",
            "str r7, [sp, 0x10]",
            "mov r7, 1",
            "str r1, [sp, 0xc]",
            "ldr r1, [0x0002c668]",
            "add r1, pc, r1",
            "bl sym.imp.sprintf",
            "ldr r4, [sb]",
            "cmp r4, 0",
            "beq 0x2c5ac",
            "add r0, r4, 0x84",
            "mov r1, r5",
            "mov r2, 6",
            "bl sym.imp.memcmp",
            "cmp r0, 0",
            "bne 0x2c5a4",
            "add r0, r4, 4",
            "mov r1, r6",
            "bl sym.imp.strcpy",
            "str r7, [r4, 0x8c]",
            "ldr r4, [r4]",
            "b 0x2c574",
            "ldr r7, [0x0002c66c]",
            "mov r1, r4",
            "str r4, [sp, 0x58]",
            "mov r2, 0x7c",
            "add r7, pc, r7",
            "add r0, sp, 0x5c",
            "bl sym.imp.memset",
            "ldr r1, [0x0002c670]",
            "add r5, sp, 0x58",
            "mov r3, r6",
            "mov r2, r7",
            "add r1, pc, r1",
            "mov r0, r5",
            "bl sym.imp.sprintf",
            "mov r0, r5",
            "add r5, sp, 0xd8",
            "bl sym.imp.system",
            "str r4, [sp, 0xd8]",
            "mov r1, r4",
            "mov r2, 0x3fc",
            "add r0, sp, 0xdc",
            "bl sym.imp.memset",
            "ldr r1, [0x0002c674]",
            "mov r2, r8",
            "str r6, [sp]",
            "mov r3, r7",
            "add r1, pc, r1",
            "mov r0, r5",
            "bl sym.imp.sprintf",
            "mov r0, r5",
            "bl sym.imp.system",
            "mov r0, r4",
            "b 0x2c634",
            "mov r0, 0x10",
            "add sp, sp, 0x4d0",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, pc}"
        ]
    },
    "sym.zyNetCtrl_tremmatchDeviceInterface": {
        "function_address": "0x00013f0c",
        "instructions": [
            "ldr r3, [0x00013f90]",
            "ldr r2, [0x00013f94]",
            "add r3, pc, r3",
            "push {r4, r5, r6, r7, r8, lr}",
            "ldr r2, [r3, r2]",
            "ldr r4, [r2]",
            "mov r7, r2",
            "ldr r2, [0x00013f98]",
            "cmp r4, 0",
            "ldr r5, [r3, r2]",
            "movne r6, 0",
            "bne 0x13f70",
            "str r4, [r5]",
            "mov r0, r4",
            "pop {r4, r5, r6, r7, r8, pc}",
            "ldrh r3, [r4, 0x40]",
            "ldr r8, [r4]",
            "cmp r3, 0",
            "beq 0x13f60",
            "ldr r0, [r4, 0x44]",
            "bl sym.imp.free",
            "mov r0, r4",
            "add r6, r6, 1",
            "mov r4, r8",
            "bl sym.imp.free",
            "ldr r3, [r5]",
            "cmp r6, r3",
            "blt 0x13f48",
            "mov r3, 0",
            "mov r0, 1",
            "str r3, [r5]",
            "str r3, [r7]",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "sym.getBrdgCapability": {
        "function_address": "0x0000a4e4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x26c0",
            "ldr r8, [0x0000a8e8]",
            "sub sp, sp, 0x24",
            "ldr r3, [0x0000a8ec]",
            "add r8, pc, r8",
            "str r0, [sp, 0x10]",
            "ldr r3, [r8, r3]",
            "ldrb r2, [r3]",
            "str r3, [sp, 0x18]",
            "cmp r2, 3",
            "bls 0xa560",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x375",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000a8f0]",
            "ldr r0, [0x0000a8f4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xc1",
            "bl sym.imp.printf",
            "ldr r0, [0x0000a8f8]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000a8fc]",
            "ldr r3, [r8, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x0000a900]",
            "mov r0, 2",
            "ldr r3, [r8, r3]",
            "ldr r1, [r3]",
            "bl fcn.00008980",
            "subs r6, r0, 0",
            "movne r6, 0x10",
            "bne 0xa8d8",
            "add r2, sp, 0x58",
            "add sb, sp, 0x38",
            "str r2, [sp, 0x14]",
            "mov r1, 1",
            "str sb, [sp, 0x68]",
            "mov r2, r6",
            "mov r0, 2",
            "mov sl, r6",
            "bl sym.imp.socket",
            "mov r7, r0",
            "mov r3, 0x400",
            "mov r0, sb",
            "mov r1, 1",
            "add r2, sp, 0x6e0",
            "bl fcn.00008d70",
            "mov r0, r7",
            "movw r1, 0x8940",
            "mov r2, sb",
            "bl sym.imp.ioctl",
            "ldr r3, [sp, 0x10]",
            "str r0, [sp, 0x1c]",
            "strb r6, [r3]",
            "ldr r3, [0x0000a904]",
            "str r6, [sp, 0xc]",
            "add r3, pc, r3",
            "add r3, r3, 0xc1",
            "str r3, [sp, 0x24]",
            "ldr r2, [sp, 0xc]",
            "ldr r3, [sp, 0x1c]",
            "cmp r2, r3",
            "bge 0xa8d0",
            "ldr r2, [sp, 0xc]",
            "add r3, sp, 0x6e0",
            "add r4, sp, 0x28",
            "ldr r0, [r3, r2, lsl 2]",
            "mov r1, r4",
            "bl sym.imp.if_indextoname",
            "cmp r0, 0",
            "bne 0xa678",
            "ldr r2, [sp, 0x18]",
            "ldrb r3, [r2]",
            "cmp r3, 3",
            "bls 0xa8d0",
            "bl sym.imp.time",
            "movw r3, 0x397",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000a908]",
            "ldr r0, [0x0000a90c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xc1",
            "bl sym.imp.printf",
            "ldr r0, [0x0000a910]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000a8fc]",
            "ldr r3, [r8, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0xa8d0",
            "mov r1, r4",
            "mov r2, 0x10",
            "add r0, sp, 0x58",
            "add r4, sp, 0x16c0",
            "bl sym.imp.strncpy",
            "mov r3, 0",
            "mov r0, sb",
            "mov r1, 6",
            "add r2, sp, 0x98",
            "bl fcn.00008d70",
            "add r4, r4, 0x20",
            "movw r1, 0x89f0",
            "add r2, sp, 0x58",
            "mov r0, r7",
            "bl sym.imp.ioctl",
            "mov r0, r4",
            "mov r1, 0",
            "mov r2, 0x1000",
            "bl sym.imp.memset",
            "mov r2, r4",
            "mov r3, 0x400",
            "mov r0, sb",
            "mov r1, 7",
            "bl fcn.00008d70",
            "mov r0, r7",
            "movw r1, 0x89f0",
            "add r2, sp, 0x58",
            "mov r4, 0",
            "bl sym.imp.ioctl",
            "ldr r3, [0x0000a914]",
            "mov r5, r4",
            "add r3, pc, r3",
            "str r3, [sp, 0x20]",
            "add r3, sp, 0x16c0",
            "add r3, r3, 0x20",
            "ldr r0, [r3, r4, lsl 2]",
            "cmp r0, 0",
            "beq 0xa804",
            "add fp, sp, 0x48",
            "mov r1, fp",
            "bl sym.imp.if_indextoname",
            "cmp r0, 0",
            "bne 0xa774",
            "ldr r2, [sp, 0x18]",
            "ldrb r3, [r2]",
            "cmp r3, 3",
            "bls 0xa774",
            "bl sym.imp.time",
            "movw r3, 0x3a9",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [sp, 0x24]",
            "ldr r0, [sp, 0x20]",
            "bl sym.imp.printf",
            "ldr r0, [0x0000a918]",
            "mov r1, r4",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000a8fc]",
            "ldr r3, [r8, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "add r3, sp, 0x78",
            "mov r1, fp",
            "str r3, [sp, 8]",
            "mov r0, r3",
            "mov r2, 0x10",
            "bl sym.imp.strncpy",
            "mov r0, 2",
            "mov r2, 0",
            "mov r1, r0",
            "bl sym.imp.socket",
            "ldr r3, [sp, 8]",
            "movw r1, 0x8927",
            "mov fp, r0",
            "mov r2, r3",
            "bl sym.imp.ioctl",
            "ldr r3, [sp, 8]",
            "cmp r0, 0",
            "bge 0xa7d0",
            "mov r0, r7",
            "bl sym.imp.close",
            "mov r0, fp",
            "bl sym.imp.close",
            "b 0xa8d8",
            "add r2, r3, 0x11",
            "mov r1, 6",
            "add r3, sp, 0xe0",
            "mla r1, r1, r5, r3",
            "mov r3, 0",
            "ldrb r0, [r2, 1]!",
            "strb r0, [r1, r3]",
            "add r3, r3, 1",
            "cmp r3, 6",
            "bne 0xa7e4",
            "mov r0, fp",
            "add r5, r5, 1",
            "bl sym.imp.close",
            "add r4, r4, 1",
            "cmp r4, 0x400",
            "bne 0xa6fc",
            "cmp r5, 0",
            "moveq r4, sl",
            "beq 0xa8bc",
            "ldr r3, [sp, 0xc]",
            "mov r0, 1",
            "mov r1, 0xc",
            "cmp r3, 0",
            "cmpne sl, 0",
            "bne 0xa848",
            "bl sym.imp.calloc",
            "ldr r2, [sp, 0x10]",
            "mov r4, r0",
            "str r0, [r2, 4]",
            "b 0xa854",
            "bl sym.imp.calloc",
            "str r0, [sl]",
            "mov r4, r0",
            "strb r5, [r4, 4]",
            "mov r0, r5",
            "mov r1, 0xc",
            "bl sym.imp.calloc",
            "str r0, [r4, 8]",
            "mov r2, 0",
            "mov lr, 6",
            "add ip, sp, 0xe0",
            "cmp r2, r5",
            "bge 0xa8ac",
            "mul r1, lr, r2",
            "mov r3, 0",
            "add r0, r1, ip",
            "ldr sl, [r4, 8]",
            "ldrb fp, [r0, r3]",
            "add sl, sl, r1",
            "strb fp, [sl, r3]",
            "add r3, r3, 1",
            "cmp r3, 6",
            "bne 0xa888",
            "add r2, r2, 1",
            "b 0xa874",
            "ldr r2, [sp, 0x10]",
            "ldrb r3, [r2]",
            "add r3, r3, 1",
            "strb r3, [r2]",
            "ldr r3, [sp, 0xc]",
            "mov sl, r4",
            "add r3, r3, 1",
            "str r3, [sp, 0xc]",
            "b 0xa5ec",
            "mov r0, r7",
            "b 0xa7c8",
            "mov r0, r6",
            "add sp, sp, 0x26c0",
            "add sp, sp, 0x24",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.imp.socket": {
        "function_address": "0x00008a4c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x84c]!"
        ]
    },
    "fcn.00008d70": {
        "function_address": "0x00008d70",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x634]!"
        ]
    },
    "sym.imp.ioctl": {
        "function_address": "0x00008638",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0xb04]!"
        ]
    },
    "sym.imp.if_indextoname": {
        "function_address": "0x00008644",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0xafc]!"
        ]
    },
    "sym.imp.strncpy": {
        "function_address": "0x00008ed8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x544]!"
        ]
    },
    "sym.imp.close": {
        "function_address": "0x00009658",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x44]!"
        ]
    },
    "sym.zyNetCtrl_getWIFIStateSync": {
        "function_address": "0x00016098",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "cmp r0, 0",
            "sub sp, sp, 0x80",
            "mov r4, r3",
            "ldr r6, [sp, 0x98]",
            "beq 0x16144",
            "mov r5, 0",
            "mov r7, r1",
            "str r5, [sp]",
            "mov r8, r2",
            "mov r1, r5",
            "mov r2, 0x7c",
            "add r0, sp, 4",
            "bl sym.imp.memset",
            "mov r2, r7",
            "mov r1, r8",
            "mov r0, sp",
            "bl sym.imp.memcpy",
            "ldr r1, [0x000161e4]",
            "add r2, sp, 0x80",
            "add r7, r2, r7",
            "mov r0, sp",
            "add r1, pc, r1",
            "strb r5, [r7, -0x80]",
            "bl sym.imp.strtok",
            "ldr r7, [0x000161e8]",
            "add r7, pc, r7",
            "cmp r0, 0",
            "beq 0x1613c",
            "mov r1, 0",
            "mov r2, 0x10",
            "bl sym.imp.strtol",
            "uxtb r0, r0",
            "mov r1, r4",
            "bl fcn.00008ac4",
            "cmp r0, 0",
            "bne 0x16154",
            "mov r1, r7",
            "add r5, r5, 1",
            "bl sym.imp.strtok",
            "b 0x16104",
            "str r5, [r6]",
            "b 0x161c8",
            "mov r1, r3",
            "bl fcn.00008ac4",
            "cmp r0, 0",
            "beq 0x1615c",
            "mov r0, 0x10",
            "b 0x161dc",
            "mov r0, 0x20",
            "mov r1, r4",
            "bl fcn.00008ac4",
            "cmp r0, 0",
            "bne 0x16154",
            "mov r0, 0x40",
            "mov r1, r4",
            "bl fcn.00008ac4",
            "cmp r0, 0",
            "bne 0x16154",
            "mov r0, 1",
            "mov r1, r4",
            "bl fcn.00008ac4",
            "cmp r0, 0",
            "bne 0x16154",
            "mov r0, 0x21",
            "mov r1, r4",
            "bl fcn.00008ac4",
            "cmp r0, 0",
            "bne 0x16154",
            "mov r0, 0x41",
            "mov r1, r4",
            "bl fcn.00008ac4",
            "cmp r0, 0",
            "bne 0x16154",
            "mov r3, 4",
            "str r3, [r6]",
            "mov r0, r4",
            "bl sym.imp.strlen",
            "mov r3, 0",
            "strb r3, [r4, r0]",
            "mov r0, r3",
            "add sp, sp, 0x80",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "sym.imp.strtok": {
        "function_address": "0x00008f5c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x4ec]!"
        ]
    },
    "fcn.00008ac4": {
        "function_address": "0x00008ac4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x7fc]!"
        ]
    },
    "sym.wps_process_m1": {
        "function_address": "0x000308d4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r5, r1",
            "ldr r3, [r1, 0x18]",
            "cmp r3, 0",
            "movne r4, r0",
            "addne r1, r3, 0x10",
            "addne r2, r4, 0x10",
            "beq 0x30a60",
            "ldr r0, [r3], 4",
            "cmp r3, r1",
            "str r0, [r2], 4",
            "bne 0x308f4",
            "ldr r3, [r5, 0x84]",
            "cmp r3, 0",
            "beq 0x30a60",
            "ldr r2, [r3]",
            "add r6, r4, 0x200",
            "str r2, [r4, 0x30]",
            "ldrh r2, [r3, 4]",
            "strh r2, [r4, 0x34]",
            "ldr r2, [r3]",
            "str r2, [r4, 0x200]",
            "ldrh r3, [r3, 4]",
            "strh r3, [r6, 4]",
            "ldr r3, [r5, 0xc]",
            "cmp r3, 0",
            "beq 0x30a60",
            "add r2, r4, 0x36",
            "add r1, r3, 0x10",
            "ldr r0, [r3], 4",
            "cmp r3, r1",
            "str r0, [r2], 4",
            "bne 0x30948",
            "ldr r8, [r5, 0xd4]",
            "ldr r7, [r5, 0xd8]",
            "cmp r8, 0",
            "cmpne r7, 0",
            "beq 0x30a60",
            "ldr r0, [r4, 0xdc]",
            "bl fcn.00008f74",
            "mov r0, r8",
            "mov r1, r7",
            "bl fcn.0000889c",
            "str r0, [r4, 0xdc]",
            "cmp r0, 0",
            "beq 0x30a60",
            "ldr r2, [r5, 0x1c]",
            "cmp r2, 0",
            "beq 0x30a60",
            "ldr r3, [r4]",
            "ldrb r1, [r2]",
            "ldrb r2, [r2, 1]",
            "orr r1, r2, r1, lsl 8",
            "ldrh r2, [r3, 0xe0]",
            "and r1, r1, r2",
            "mov r2, 0x170",
            "cmp r1, 0",
            "strh r1, [r4, r2]",
            "ldrheq r1, [r3, 0xe0]",
            "strheq r1, [r4, r2]",
            "ldr r2, [r5, 0x20]",
            "cmp r2, 0",
            "beq 0x30a60",
            "ldrb r1, [r2]",
            "ldrb r2, [r2, 1]",
            "orr r1, r2, r1, lsl 8",
            "ldrh r2, [r3, 0xde]",
            "and r1, r1, r2",
            "movw r2, 0x16e",
            "cmp r1, 0",
            "strh r1, [r4, r2]",
            "ldrheq r3, [r3, 0xde]",
            "strheq r3, [r4, r2]",
            "ldr r3, [r5, 0x24]",
            "cmp r3, 0",
            "beq 0x30a60",
            "ldr r3, [r5, 0x28]",
            "cmp r3, 0",
            "beq 0x30a60",
            "ldrb r3, [r3, 1]",
            "tst r3, 8",
            "bne 0x30a2c",
            "ldr r3, [r4, 0x2a8]",
            "cmp r3, 0",
            "moveq r3, 1",
            "streq r3, [r4, 0x2a8]",
            "ldr r3, [r5, 0x48]",
            "cmp r3, 0",
            "beq 0x30a60",
            "mov r0, r6",
            "mov r1, r5",
            "bl fcn.00008aa0",
            "cmp r0, 0",
            "bne 0x30a60",
            "ldr r1, [r5, 0x34]",
            "mov r0, r6",
            "bl fcn.00009028",
            "cmp r0, 0",
            "beq 0x30a68",
            "mov r0, 0",
            "pop {r4, r5, r6, r7, r8, pc}",
            "ldr r3, [r5, 0x38]",
            "cmp r3, 0",
            "beq 0x30a60",
            "ldr r3, [r5, 0x40]",
            "cmp r3, 0",
            "beq 0x30a60",
            "ldrb r2, [r3]",
            "ldrb r3, [r3, 1]",
            "orr r2, r3, r2, lsl 8",
            "mov r3, 0x140",
            "strh r2, [r4, r3]",
            "ldr r3, [r5, 0x3c]",
            "cmp r3, 0",
            "beq 0x30a60",
            "ldr r1, [r5, 0x44]",
            "mov r0, r6",
            "bl fcn.00008da0",
            "cmp r0, 0",
            "bne 0x30a60",
            "mov r3, 0xe",
            "mov r0, 1",
            "str r3, [r4, 0xc]",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.0000889c": {
        "function_address": "0x0000889c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x96c]!"
        ]
    },
    "fcn.00008aa0": {
        "function_address": "0x00008aa0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x814]!"
        ]
    },
    "fcn.00009028": {
        "function_address": "0x00009028",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x464]!"
        ]
    },
    "fcn.00008da0": {
        "function_address": "0x00008da0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x614]!"
        ]
    },
    "sym.setFWresult": {
        "function_address": "0x0000f6dc",
        "instructions": [
            "push {r3, lr}",
            "bl fcn.0000871c",
            "mov r0, 0",
            "pop {r3, pc}"
        ]
    },
    "fcn.0000871c": {
        "function_address": "0x0000871c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0xa6c]!"
        ]
    },
    "sym.zyNetCtrl_tremOldNeighborList": {
        "function_address": "0x00014dd0",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "ldr r3, [0x00014e40]",
            "ldr r2, [0x00014e44]",
            "add r3, pc, r3",
            "ldr r2, [r3, r2]",
            "ldr r0, [r2]",
            "mov r6, r2",
            "ldr r2, [0x00014e48]",
            "cmp r0, 0",
            "ldr r4, [r3, r2]",
            "movne r5, 0",
            "bne 0x14e20",
            "str r0, [r4]",
            "pop {r3, r4, r5, r6, r7, pc}",
            "cmp r0, 0",
            "beq 0x14e1c",
            "ldr r7, [r0]",
            "bl sym.imp.free",
            "mov r0, r7",
            "add r5, r5, 1",
            "ldr r3, [r4]",
            "cmp r5, r3",
            "blt 0x14e08",
            "mov r3, 0",
            "mov r0, 1",
            "str r3, [r4]",
            "str r3, [r6]",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "sym.hexstr2bin": {
        "function_address": "0x0002e060",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r5, r0",
            "add r6, r1, r2",
            "mov r4, r1",
            "cmp r4, r6",
            "beq 0x2e094",
            "mov r0, r5",
            "bl fcn.00008db8",
            "cmp r0, 0",
            "blt 0x2e09c",
            "strb r0, [r4], 1",
            "add r5, r5, 2",
            "b 0x2e070",
            "mov r0, 0",
            "pop {r4, r5, r6, pc}",
            "mvn r0, 0",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.00008db8": {
        "function_address": "0x00008db8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x604]!"
        ]
    },
    "sym.setLEDvalue": {
        "function_address": "0x0001191c",
        "instructions": [
            "push {r0, r1, r2, r4, r5, lr}",
            "mov r4, r0",
            "ldr r5, case.0x2e7b0.1",
            "ldr r3, [0x00011a14]",
            "add r5, pc, r5",
            "ldr r3, [r5, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x11994",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0xbcc",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00011a18]",
            "ldr r0, [0x00011a1c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x470",
            "add r3, r3, r2",
            "bl sym.imp.printf",
            "ldr r0, [0x00011a20]",
            "mov r1, r4",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00011a24]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "cmp r4, 1",
            "bne 0x119c4",
            "ldr r0, [0x00011a28]",
            "ldr r1, [0x00011a2c]",
            "ldr r2, [0x00011a30]",
            "add r0, pc, r0",
            "add r1, pc, r1",
            "add r2, pc, r2",
            "bl fcn.00009538",
            "ldr r0, [0x00011a34]",
            "add r0, pc, r0",
            "b 0x119f4",
            "cmp r4, 0",
            "movne r0, 0x10",
            "bne 0x11a08",
            "ldr r0, [0x00011a38]",
            "ldr r1, [0x00011a3c]",
            "ldr r2, [0x00011a40]",
            "add r0, pc, r0",
            "add r1, pc, r1",
            "add r2, pc, r2",
            "bl fcn.00009538",
            "ldr r0, [0x00011a44]",
            "add r0, pc, r0",
            "bl sym.imp.system",
            "ldr r0, [0x00011a48]",
            "add r0, pc, r0",
            "bl fcn.000096ac",
            "mov r0, 0",
            "add sp, sp, 0xc",
            "pop {r4, r5, pc}"
        ]
    },
    "fcn.00009538": {
        "function_address": "0x00009538",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x104]!"
        ]
    },
    "fcn.000096ac": {
        "function_address": "0x000096ac",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0xc]!"
        ]
    },
    "sym.wps_validate_assoc_req": {
        "function_address": "0x0002f48c",
        "instructions": [
            "cmp r0, 0",
            "beq 0x2f504",
            "push {r4, r5, lr}",
            "sub sp, sp, 0x1ec",
            "mov r1, sp",
            "bl fcn.00008c8c",
            "cmp r0, 0",
            "bge 0x2f4b4",
            "mvn r0, 0",
            "b 0x2f4fc",
            "ldr r4, [sp, 4]",
            "ldr r0, [sp]",
            "adds r5, r4, 0",
            "movne r5, 1",
            "bl fcn.0002f058",
            "cmp r0, 0",
            "bne 0x2f4ac",
            "ldr r3, [sp, 0x8c]",
            "cmp r3, 0",
            "beq 0x2f4ac",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bhi 0x2f4ac",
            "mov r0, r4",
            "mov r1, r5",
            "bl fcn.0002ed7c",
            "adds r0, r0, 0",
            "mvnne r0, 0",
            "add sp, sp, 0x1ec",
            "pop {r4, r5, pc}",
            "mvn r0, 0",
            "bx lr"
        ]
    },
    "sym.os_rel2abs_path": {
        "function_address": "0x00034068",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "subs r7, r0, 0",
            "bne 0x3407c",
            "mov r0, 0",
            "pop {r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldrb r3, [r7]",
            "cmp r3, 0x2f",
            "movne r5, 4",
            "movne r4, 0x80",
            "bne 0x340cc",
            "pop {r3, r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "b sym.imp.strdup",
            "mov r1, r4",
            "bl sym.imp.getcwd",
            "subs fp, r0, 0",
            "bne 0x340e0",
            "bl sym.imp.__errno_location",
            "ldr r8, [r0]",
            "mov r0, r6",
            "bl sym.imp.free",
            "cmp r8, 0x22",
            "bne 0x34074",
            "subs r5, r5, 1",
            "lsl r4, r4, 1",
            "beq 0x34074",
            "mov r0, r4",
            "bl sym.imp.malloc",
            "subs r6, r0, 0",
            "bne 0x34098",
            "b 0x34074",
            "add r4, r6, r4",
            "mov r8, 0",
            "strb r8, [r4, -1]",
            "bl sym.imp.strlen",
            "mov r5, r0",
            "mov r0, r7",
            "bl sym.imp.strlen",
            "add sb, r0, r5",
            "mov sl, r0",
            "add r0, sb, 2",
            "bl sym.imp.malloc",
            "subs r4, r0, 0",
            "beq 0x34144",
            "add sb, r4, sb",
            "mov r1, fp",
            "mov r2, r5",
            "bl sym.imp.memcpy",
            "mov r3, 0x2f",
            "add r0, r5, 1",
            "strb r3, [r4, r5]",
            "mov r1, r7",
            "add r0, r4, r0",
            "mov r2, sl",
            "bl sym.imp.memcpy",
            "strb r8, [sb, 1]",
            "mov r0, r6",
            "bl sym.imp.free",
            "mov r0, r4",
            "pop {r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.imp.getcwd": {
        "function_address": "0x000091c0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x354]!"
        ]
    },
    "sym.imp.__errno_location": {
        "function_address": "0x00009424",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x1bc]!"
        ]
    },
    "sym.imp.malloc": {
        "function_address": "0x00008950",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x8f4]!"
        ]
    },
    "sym.zyNetCtrl_getBridgeList": {
        "function_address": "0x000141dc",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x2040",
            "ldr r5, [0x000145e0]",
            "sub sp, sp, 0x3c",
            "ldr r3, [0x000145e4]",
            "add r5, pc, r5",
            "ldr r3, [r5, r3]",
            "ldrb r2, [r3]",
            "str r3, [sp, 0x14]",
            "cmp r2, 3",
            "bls 0x14258",
            "mov r0, 0",
            "movw r4, 0x3b3",
            "bl sym.imp.time",
            "ldr r3, [0x000145e8]",
            "mov r1, r0",
            "ldr r0, [0x000145ec]",
            "mov r2, 4",
            "add r3, pc, r3",
            "str r4, [sp]",
            "add r3, r3, 0x38",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r0, [0x000145f0]",
            "mov r1, r4",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x000145f4]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "add ip, sp, 0x58",
            "add r4, sp, 0x38",
            "str ip, [sp, 0xc]",
            "mov r1, 1",
            "str r4, [sp, 0x68]",
            "mov r2, 0",
            "mov r0, 2",
            "bl sym.imp.socket",
            "mov r7, r0",
            "mov r3, 0x400",
            "mov r0, r4",
            "mov r1, 1",
            "add r2, sp, 0x78",
            "bl fcn.00008d70",
            "mov r2, r4",
            "mov r0, r7",
            "movw r1, 0x8940",
            "mov r4, 0",
            "bl sym.imp.ioctl",
            "ldr r3, [0x000145f8]",
            "mov fp, r4",
            "str r0, [sp, 0x1c]",
            "mov sb, r4",
            "add r3, pc, r3",
            "str r4, [sp, 0x10]",
            "add r3, r3, 0x38",
            "str r3, [sp, 0x24]",
            "ldr ip, [sp, 0x10]",
            "ldr r1, [sp, 0x1c]",
            "cmp ip, r1",
            "bge 0x144e8",
            "ldr ip, [sp, 0x10]",
            "add r3, sp, 0x78",
            "add sl, sp, 0x38",
            "ldr r0, [r3, ip, lsl 2]",
            "sub r6, sl, 0x10",
            "mov r1, r6",
            "bl sym.imp.if_indextoname",
            "cmp r0, 0",
            "bne 0x14354",
            "ldr ip, [sp, 0x14]",
            "ldrb r3, [ip]",
            "cmp r3, 3",
            "bls 0x14498",
            "bl sym.imp.time",
            "mov r3, 0x3d0",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000145fc]",
            "ldr r0, [0x00014600]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x38",
            "bl sym.imp.printf",
            "ldr r0, [0x00014604]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x000145f4]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0x14498",
            "cmp sb, 0",
            "mov r0, 1",
            "mov r1, 0x24",
            "bne 0x14378",
            "bl sym.imp.calloc",
            "subs sb, r0, 0",
            "beq 0x14498",
            "mov r8, sb",
            "b 0x14388",
            "bl sym.imp.calloc",
            "subs r8, r0, 0",
            "beq 0x14498",
            "str r8, [fp]",
            "mov r1, r6",
            "add r0, r8, 4",
            "bl sym.imp.strcpy",
            "mov r1, r6",
            "add r0, r8, 0x14",
            "bl sym.imp.strcpy",
            "ldr r3, [0x00014608]",
            "add r1, sp, 0x2040",
            "add r1, r1, 0x38",
            "mov r2, 7",
            "add r0, sp, 0x1040",
            "add r4, r4, 1",
            "str r2, [r1, r3]",
            "add r0, r0, 0x38",
            "str r0, [sl, 4]",
            "mov r1, 0",
            "str r1, [sl, 8]",
            "mov r2, 0x1000",
            "str r1, [sl, 0xc]",
            "bl sym.imp.memset",
            "ldm r6, {r0, r1, r2, r3}",
            "ldr ip, [sp, 0xc]",
            "stm ip, {r0, r1, r2, r3}",
            "mov r0, r7",
            "str sl, [sp, 0x68]",
            "movw r1, 0x89f0",
            "add r2, sp, 0x58",
            "mov sl, 0xff",
            "bl sym.imp.ioctl",
            "ldr ip, [0x0001460c]",
            "add ip, pc, ip",
            "str ip, [sp, 0x20]",
            "add r3, sp, 0x1040",
            "add r3, r3, 0x38",
            "ldr r0, [r3, sl, lsl 2]",
            "cmp r0, 0",
            "beq 0x144cc",
            "add ip, sp, 0x48",
            "str ip, [sp, 0x18]",
            "mov r1, ip",
            "bl sym.imp.if_indextoname",
            "cmp r0, 0",
            "bne 0x14484",
            "ldr ip, [sp, 0x14]",
            "ldrb r3, [ip]",
            "cmp r3, 3",
            "bls 0x14484",
            "bl sym.imp.time",
            "movw r3, 0x413",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [sp, 0x24]",
            "ldr r0, [sp, 0x20]",
            "bl sym.imp.printf",
            "ldr r0, [0x00014610]",
            "mov r1, sl",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x000145f4]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, 1",
            "mov r1, 0x24",
            "bl sym.imp.calloc",
            "subs fp, r0, 0",
            "bne 0x144a8",
            "mov r0, r7",
            "bl sym.imp.close",
            "mov r0, 0",
            "b 0x145d4",
            "str fp, [r8]",
            "mov r1, r6",
            "add r0, fp, 4",
            "add r4, r4, 1",
            "bl sym.imp.strcpy",
            "mov r8, fp",
            "add r0, fp, 0x14",
            "add r1, sp, 0x48",
            "bl sym.imp.strcpy",
            "subs sl, sl, 1",
            "bhs 0x14408",
            "ldr ip, [sp, 0x10]",
            "mov fp, r8",
            "add ip, ip, 1",
            "str ip, [sp, 0x10]",
            "b 0x142c4",
            "mov r0, r7",
            "bl sym.imp.close",
            "ldr r3, [0x00014614]",
            "ldr r7, [r5, r3]",
            "ldr r3, [r7]",
            "orrs r2, r4, r3",
            "ldr r2, [0x00014618]",
            "ldr r6, [r5, r2]",
            "beq 0x14540",
            "cmp r3, 0",
            "beq 0x14524",
            "cmp r4, 0",
            "bne 0x14534",
            "bl fcn.00009454",
            "b 0x14540",
            "cmp r4, 0",
            "strne sb, [r6]",
            "strne r4, [r7]",
            "bne 0x14540",
            "bl fcn.00009454",
            "str r4, [r7]",
            "str sb, [r6]",
            "ldr sb, [0x0001461c]",
            "mov r4, 0",
            "ldr r8, [0x00014620]",
            "add sb, pc, sb",
            "ldr r6, [r6]",
            "add sb, sb, 0x38",
            "add r8, pc, r8",
            "ldr r3, [r7]",
            "cmp r4, r3",
            "bge 0x145d0",
            "ldr ip, [sp, 0x14]",
            "ldrb r3, [ip]",
            "cmp r3, 4",
            "bls 0x145c4",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x487",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 5",
            "mov r3, sb",
            "mov r0, r8",
            "bl sym.imp.printf",
            "ldr r0, [0x00014624]",
            "add r3, r6, 0x14",
            "mov r1, r4",
            "add r2, r6, 4",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x000145f4]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r6, [r6]",
            "add r4, r4, 1",
            "b 0x1455c",
            "mov r0, 1",
            "add sp, sp, 0x2040",
            "add sp, sp, 0x3c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.FW_CheckFWisNew": {
        "function_address": "0x00025334",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x38c",
            "ldr r4, [0x0002591c]",
            "ldr r3, [0x00025920]",
            "add r4, pc, r4",
            "ldr r6, [r4, r3]",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x253a8",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x225",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00025924]",
            "ldr r0, [0x00025928]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x114",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x0002592c]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00025930]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r7, 0",
            "mov r2, 0x7c",
            "str r7, [sp, 8]",
            "mov r1, r7",
            "add r0, sp, 0xc",
            "bl sym.imp.memset",
            "ldr r0, [0x00025934]",
            "ldr r1, [0x00025938]",
            "add r0, pc, r0",
            "add r1, pc, r1",
            "bl sym.imp.fopen",
            "subs r5, r0, 0",
            "beq 0x2590c",
            "add sb, sp, 8",
            "mov r2, r5",
            "mov r1, 0x80",
            "mov r0, sb",
            "bl sym.imp.fgets",
            "mov r0, r5",
            "bl sym.imp.fclose",
            "ldr r1, [0x0002593c]",
            "mov r0, sb",
            "mov r2, 7",
            "add r1, pc, r1",
            "bl sym.imp.strncmp",
            "subs r5, r0, 0",
            "movne r5, r7",
            "bne 0x25910",
            "str r5, [sp, 0x88]",
            "mov r1, r5",
            "mov r2, 0xfc",
            "add r0, sp, 0x8c",
            "bl sym.imp.memset",
            "str r5, [sp, 0x188]",
            "mov r1, r5",
            "mov r2, 0x1fc",
            "add r0, sp, 0x18c",
            "bl sym.imp.memset",
            "ldr r1, [0x00025940]",
            "add r7, sp, 0x188",
            "ldr r2, [0x00025944]",
            "mov r0, r7",
            "add r1, pc, r1",
            "add r2, pc, r2",
            "bl sym.imp.sprintf",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x254bc",
            "mov r0, r5",
            "bl sym.imp.time",
            "mov r3, 0x23c",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00025948]",
            "ldr r0, [0x0002594c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x114",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x00025950]",
            "mov r1, r7",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00025930]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x00025954]",
            "ldr r8, [r4, r3]",
            "ldr r3, [0x00025958]",
            "mov r0, r8",
            "ldr sl, [r4, r3]",
            "ldr r3, [0x0002595c]",
            "mov r1, sl",
            "ldr fp, [r4, r3]",
            "add r3, sp, 0x88",
            "str r7, [sp]",
            "mov r2, fp",
            "bl fcn.00009370",
            "ldr r3, [0x00025960]",
            "cmp r0, 0",
            "ldr r7, [r4, r3]",
            "ldrb r3, [r6]",
            "beq 0x25578",
            "cmp r3, 3",
            "bls 0x25558",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x241",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00025964]",
            "ldr r0, [0x00025968]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x114",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x0002596c]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00025930]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [r7]",
            "cmp r3, 7",
            "bne 0x2556c",
            "mov r0, 0",
            "bl fcn.00009214",
            "mov r0, 0",
            "bl fcn.00009034",
            "b 0x2590c",
            "cmp r3, 3",
            "bls 0x255d0",
            "bl sym.imp.time",
            "movw r3, 0x24b",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00025970]",
            "ldr r0, [0x00025974]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x114",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x00025978]",
            "mov r1, sl",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00025930]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x25630",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0x24c",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002597c]",
            "ldr r0, [0x00025980]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x114",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x00025984]",
            "mov r1, r8",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00025930]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x25690",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x24d",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00025988]",
            "ldr r0, [0x0002598c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x114",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x00025990]",
            "mov r1, fp",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00025930]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r0, [0x00025994]",
            "ldr r1, [0x00025998]",
            "add r0, pc, r0",
            "add r1, pc, r1",
            "bl sym.imp.fopen",
            "subs fp, r0, 0",
            "bne 0x25720",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x25704",
            "bl sym.imp.time",
            "movw r3, 0x259",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002599c]",
            "ldr r0, [0x000259a0]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x114",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x000259a4]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00025930]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [r7]",
            "cmp r3, 7",
            "bne 0x25718",
            "mov r0, 0",
            "bl fcn.00009214",
            "mov r0, 0",
            "b 0x25904",
            "mov r2, fp",
            "mov r0, sb",
            "mov r1, 0x80",
            "bl sym.imp.fgets",
            "ldr r3, [0x000259a8]",
            "mov r1, sb",
            "ldr sl, [r4, r3]",
            "mov r0, sl",
            "mov sb, sl",
            "bl sym.imp.strcpy",
            "mov r0, fp",
            "bl sym.imp.fclose",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x257b4",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x267",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000259ac]",
            "ldr r0, [0x000259b0]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x114",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x000259b4]",
            "mov r1, sl",
            "mov r2, r8",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00025930]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [sb]",
            "cmp r3, 0",
            "beq 0x257cc",
            "ldrb r3, [r8]",
            "cmp r3, 0",
            "bne 0x25818",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x25704",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x26b",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000259b8]",
            "ldr r0, [0x000259bc]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x114",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x000259c0]",
            "add r0, pc, r0",
            "b 0x256f0",
            "mov r0, sb",
            "mov r1, r8",
            "bl sym.imp.strcmp",
            "ldrb r3, [r6]",
            "cmp r0, 0",
            "bne 0x25894",
            "cmp r3, 3",
            "bls 0x25884",
            "bl sym.imp.time",
            "movw r3, 0x277",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000259c4]",
            "ldr r0, [0x000259c8]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x114",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x000259cc]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00025930]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r5, 7",
            "mov r0, 0",
            "str r5, [r7]",
            "b 0x258fc",
            "cmp r3, 3",
            "bls 0x258f0",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x27f",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000259d0]",
            "ldr r0, [0x000259d4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x114",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x000259d8]",
            "mov r1, r8",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00025930]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, 1",
            "mov r5, 8",
            "str r5, [r7]",
            "bl fcn.00009214",
            "mov r0, 1",
            "bl fcn.00009034",
            "b 0x25910",
            "mov r5, 6",
            "mov r0, r5",
            "add sp, sp, 0x38c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00009214": {
        "function_address": "0x00009214",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x31c]!"
        ]
    },
    "sym.outputWIFIStateResultByBand": {
        "function_address": "0x00016470",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r4, 0",
            "sub sp, sp, 0x230",
            "mov r6, r0",
            "mov r5, r1",
            "mov r2, 0x1fc",
            "str r4, [sp, 0x30]",
            "mov r1, r4",
            "add r0, sp, 0x34",
            "bl sym.imp.memset",
            "str r4, [sp, 0x10]",
            "mov r1, r4",
            "mov r2, 0x1c",
            "add r0, sp, 0x14",
            "bl sym.imp.memset",
            "ldrb r1, [r6, 2]",
            "add r4, sp, 0x10",
            "ldrb r2, [r6]",
            "mov r0, r4",
            "str r1, [sp]",
            "ldrb r1, [r6, 3]",
            "ldrb r3, [r6, 1]",
            "str r1, [sp, 4]",
            "ldrb r1, [r6, 4]",
            "str r1, [sp, 8]",
            "ldrb r1, [r6, 5]",
            "str r1, [sp, 0xc]",
            "ldr r1, [0x0001659c]",
            "add r1, pc, r1",
            "bl sym.imp.sprintf",
            "cmp r5, 0x20",
            "beq 0x1654c",
            "bhi 0x16514",
            "cmp r5, 0",
            "beq 0x1653c",
            "cmp r5, 1",
            "bne 0x16594",
            "ldr r1, [0x000165a0]",
            "add r0, sp, 0x30",
            "add r1, pc, r1",
            "b 0x16578",
            "cmp r5, 0x40",
            "beq 0x1655c",
            "cmp r5, 0x41",
            "beq 0x1656c",
            "cmp r5, 0x21",
            "bne 0x16594",
            "ldr r1, [0x000165a4]",
            "add r0, sp, 0x30",
            "add r1, pc, r1",
            "b 0x16578",
            "ldr r1, [0x000165a8]",
            "add r0, sp, 0x30",
            "add r1, pc, r1",
            "b 0x16578",
            "ldr r1, [0x000165ac]",
            "add r0, sp, 0x30",
            "add r1, pc, r1",
            "b 0x16578",
            "ldr r1, [0x000165b0]",
            "add r0, sp, 0x30",
            "add r1, pc, r1",
            "b 0x16578",
            "ldr r1, [0x000165b4]",
            "add r0, sp, 0x30",
            "add r1, pc, r1",
            "mov r2, r4",
            "bl sym.imp.sprintf",
            "ldr r0, [0x000165b8]",
            "add r0, pc, r0",
            "bl sym.imp.system",
            "add r0, sp, 0x30",
            "bl sym.imp.system",
            "add sp, sp, 0x230",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.DownloadTimeout": {
        "function_address": "0x000248ec",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "mov r0, 0",
            "ldr r4, [0x000249bc]",
            "sub sp, sp, 0xc4",
            "bl sym.imp.time",
            "add r4, pc, r4",
            "ldr r3, [0x000249c0]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "rsb r0, r3, r0",
            "cmp r0, 0x5a",
            "movle r0, 0x10",
            "ble 0x249b4",
            "ldr r3, [0x000249c4]",
            "mov r0, 0",
            "ldr r3, [r4, r3]",
            "str r0, [r3]",
            "bl fcn.00009034",
            "ldr r0, [0x000249c8]",
            "add r0, pc, r0",
            "bl sym.imp.system",
            "ldr r0, [0x000249cc]",
            "ldr r1, [0x000249d0]",
            "add r0, pc, r0",
            "add r1, pc, r1",
            "bl sym.imp.fopen",
            "subs r4, r0, 0",
            "beq 0x249b0",
            "ldr r7, [0x000249d4]",
            "add r6, sp, 0x40",
            "add r7, pc, r7",
            "mov r0, sp",
            "mov r1, 0x40",
            "mov r2, r4",
            "bl sym.imp.fgets",
            "cmp r0, 0",
            "beq 0x2499c",
            "mov r0, r6",
            "mov r1, r7",
            "mov r2, sp",
            "bl sym.imp.sprintf",
            "mov r0, r6",
            "bl sym.imp.system",
            "b 0x24968",
            "mov r0, r4",
            "bl sym.imp.fclose",
            "ldr r0, [0x000249d8]",
            "add r0, pc, r0",
            "bl sym.imp.remove",
            "mov r0, 0",
            "add sp, sp, 0xc4",
            "pop {r4, r5, r6, r7, pc}"
        ]
    },
    "sym.zyNetCtrl_WPSApporve_getApprove": {
        "function_address": "0x0002978c",
        "instructions": [
            "push {r0, r1, r4, lr}",
            "ldr r4, [0x0002980c]",
            "ldr r3, [0x00029810]",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x297f8",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0xb6",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00029814]",
            "ldr r0, [0x00029818]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xb0",
            "bl sym.imp.printf",
            "ldr r0, [0x0002981c]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00029820]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x00029824]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "add sp, sp, 8",
            "pop {r4, pc}"
        ]
    },
    "sym.setWPSConfig": {
        "function_address": "0x0000b948",
        "instructions": [
            "push {r0, r1, r4, r5, r6, r7, r8, lr}",
            "mov r8, r0",
            "ldr r4, [0x0000baec]",
            "mov r7, r1",
            "ldr r3, [0x0000baf0]",
            "mov r6, r2",
            "add r4, pc, r4",
            "ldr r5, [r4, r3]",
            "ldrb r3, [r5]",
            "cmp r3, 3",
            "bls 0xb9c0",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x5a6",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000baf4]",
            "ldr r0, [0x0000baf8]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x124",
            "bl sym.imp.printf",
            "ldr r0, [0x0000bafc]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000bb00]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r5]",
            "cmp r3, 3",
            "bls 0xba1c",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x5a7",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000bb04]",
            "ldr r0, [0x0000bb08]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x124",
            "bl sym.imp.printf",
            "ldr r0, [0x0000bb0c]",
            "mov r1, r8",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000bb00]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r5]",
            "cmp r3, 3",
            "bls 0xba78",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x5a8",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000bb10]",
            "ldr r0, [0x0000bb14]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x124",
            "bl sym.imp.printf",
            "ldr r0, [0x0000bb18]",
            "mov r1, r7",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000bb00]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r5]",
            "cmp r3, 3",
            "bls 0xbad4",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x5a9",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000bb1c]",
            "ldr r0, [0x0000bb20]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x124",
            "bl sym.imp.printf",
            "ldr r0, [0x0000bb24]",
            "mov r1, r6",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000bb00]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, r8",
            "mov r1, r7",
            "mov r2, r6",
            "add sp, sp, 8",
            "pop {r4, r5, r6, r7, r8, lr}",
            "b fcn.00008f50"
        ]
    },
    "sym.zyNetCtrl_WPS_setAPautoconfigFlag": {
        "function_address": "0x0002374c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "subs r7, r0, 0",
            "ldr r8, [0x00023c00]",
            "sub sp, sp, 0x238",
            "add r8, pc, r8",
            "bne 0x2376c",
            "mov r0, 0x10",
            "b 0x23bf8",
            "ldr r3, [0x00023c04]",
            "mov r4, r1",
            "mov r5, r2",
            "ldr r6, [r8, r3]",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x237fc",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x10e2",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00023c08]",
            "ldr r0, [0x00023c0c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x470",
            "add r3, r3, 6",
            "bl sym.imp.printf",
            "ldrb r0, [r7, 3]",
            "ldrb r3, [r7, 2]",
            "ldrb r1, [r7]",
            "ldrb r2, [r7, 1]",
            "str r0, [sp]",
            "ldrb r0, [r7, 4]",
            "str r0, [sp, 4]",
            "ldrb r0, [r7, 5]",
            "str r0, [sp, 8]",
            "ldr r0, [0x00023c10]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00023c14]",
            "ldr r3, [r8, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x2385c",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x10e3",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00023c18]",
            "ldr r0, [0x00023c1c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x470",
            "add r3, r3, 6",
            "bl sym.imp.printf",
            "ldr r0, [0x00023c20]",
            "mov r1, r4",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00023c14]",
            "ldr r3, [r8, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x238bc",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x10e4",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00023c24]",
            "ldr r0, [0x00023c28]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x470",
            "add r3, r3, 6",
            "bl sym.imp.printf",
            "ldr r0, [0x00023c2c]",
            "mov r1, r5",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00023c14]",
            "ldr r3, [r8, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x00023c30]",
            "ldr r3, [r8, r3]",
            "ldr r3, [r3]",
            "cmp r3, 1",
            "bne 0x239dc",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x2392c",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x10e8",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00023c34]",
            "ldr r0, [0x00023c38]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x470",
            "add r3, r3, 6",
            "bl sym.imp.printf",
            "ldr r0, [0x00023c3c]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00023c14]",
            "ldr r3, [r8, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r1, 0",
            "mvn r2, 0",
            "mov r0, r4",
            "mov r6, 0",
            "bl fcn.000095f8",
            "mov r1, r4",
            "mov r2, 0",
            "mov r0, r7",
            "add sb, sp, 0x18",
            "bl fcn.000095bc",
            "str r6, [sp, 0x18]",
            "mov r1, r6",
            "mov r2, 0x1c",
            "add r0, sp, 0x1c",
            "bl sym.imp.memset",
            "mov r1, sb",
            "mov r0, r4",
            "bl fcn.00008ec0",
            "str r6, [sp, 0x38]",
            "mov r1, r6",
            "mov r2, 0x1fc",
            "add r0, sp, 0x3c",
            "bl sym.imp.memset",
            "ldrb r3, [r7]",
            "add r6, sp, 0x38",
            "ldr r1, [0x00023c40]",
            "mov r0, r6",
            "str r3, [sp]",
            "mov r2, sb",
            "ldrb r3, [r7, 1]",
            "add r1, pc, r1",
            "str r3, [sp, 4]",
            "ldrb r3, [r7, 2]",
            "str r3, [sp, 8]",
            "ldrb r3, [r7, 3]",
            "str r3, [sp, 0xc]",
            "ldrb r3, [r7, 4]",
            "str r3, [sp, 0x10]",
            "ldrb r3, [r7, 5]",
            "str r3, [sp, 0x14]",
            "mov r3, r4",
            "bl sym.imp.sprintf",
            "mov r0, r6",
            "bl loc.imp.Outputlog",
            "ldr r3, [0x00023c44]",
            "ldr r3, [r8, r3]",
            "ldr sb, [r3]",
            "mov sl, r3",
            "mov r6, sb",
            "cmp r6, 0",
            "beq 0x23a18",
            "add r0, r6, 4",
            "mov r1, r7",
            "mov r2, 6",
            "bl sym.imp.memcmp",
            "cmp r0, 0",
            "beq 0x23b64",
            "ldr r6, [r6]",
            "b 0x239f0",
            "mov r0, 1",
            "mov r1, 0x6c",
            "bl sym.imp.calloc",
            "subs r3, r0, 0",
            "beq 0x23764",
            "ldr r0, [r7]",
            "cmp r4, 0",
            "str r0, [r3, 4]",
            "ldrh r2, [r7, 4]",
            "streq r5, [r3, 0xc]",
            "strh r2, [r3, 8]",
            "streq r4, [r3, 0x10]",
            "beq 0x23b10",
            "cmp r4, 1",
            "streq r5, [r3, 0x14]",
            "streq r6, [r3, 0x18]",
            "beq 0x23b10",
            "cmp r4, 0x20",
            "streq r5, [r3, 0x1c]",
            "streq r6, [r3, 0x20]",
            "beq 0x23b10",
            "cmp r4, 0x21",
            "streq r5, [r3, 0x24]",
            "streq r6, [r3, 0x28]",
            "beq 0x23b10",
            "cmp r4, 0xc0",
            "streq r5, [r3, 0x34]",
            "streq r6, [r3, 0x38]",
            "beq 0x23b10",
            "cmp r4, 0xe0",
            "streq r5, [r3, 0x2c]",
            "streq r6, [r3, 0x30]",
            "beq 0x23b10",
            "cmp r4, 0xc1",
            "streq r5, [r3, 0x44]",
            "streq r6, [r3, 0x48]",
            "beq 0x23b10",
            "cmp r4, 0xe1",
            "streq r5, [r3, 0x3c]",
            "moveq r2, 0",
            "streq r2, [r3, 0x40]",
            "beq 0x23b10",
            "cmp r4, 0xc9",
            "streq r5, [r3, 0x54]",
            "moveq r2, 0",
            "streq r2, [r3, 0x58]",
            "beq 0x23b10",
            "cmp r4, 0xe9",
            "streq r5, [r3, 0x4c]",
            "moveq r2, 0",
            "streq r2, [r3, 0x50]",
            "beq 0x23b10",
            "cmp r4, 0x40",
            "streq r5, [r3, 0x5c]",
            "moveq r2, 0",
            "streq r2, [r3, 0x60]",
            "beq 0x23b10",
            "cmp r4, 0x41",
            "bne 0x23764",
            "str r5, [r3, 0x64]",
            "mov r2, 0",
            "str r2, [r3, 0x68]",
            "cmp sb, 0",
            "streq r3, [sl]",
            "beq 0x23b30",
            "ldr r2, [sb]",
            "cmp r2, 0",
            "movne sb, r2",
            "bne 0x23b1c",
            "str r3, [sb]",
            "cmp r5, 2",
            "bne 0x23b5c",
            "ldr r3, [0x00023c48]",
            "mov r2, 1",
            "mov r0, 0",
            "ldr r3, [r8, r3]",
            "str r2, [r3]",
            "bl sym.imp.time",
            "ldr r3, [0x00023c4c]",
            "ldr r3, [r8, r3]",
            "str r0, [r3]",
            "mov r0, 0",
            "b 0x23bf8",
            "cmp r4, 0",
            "streq r5, [r6, 0xc]",
            "beq 0x23b30",
            "cmp r4, 1",
            "streq r5, [r6, 0x14]",
            "beq 0x23b30",
            "cmp r4, 0x20",
            "streq r5, [r6, 0x1c]",
            "beq 0x23b30",
            "cmp r4, 0x21",
            "streq r5, [r6, 0x24]",
            "beq 0x23b30",
            "cmp r4, 0xc0",
            "streq r5, [r6, 0x34]",
            "beq 0x23b30",
            "cmp r4, 0xe0",
            "streq r5, [r6, 0x2c]",
            "beq 0x23b30",
            "cmp r4, 0xc1",
            "streq r5, [r6, 0x44]",
            "beq 0x23b30",
            "cmp r4, 0xe1",
            "streq r5, [r6, 0x3c]",
            "beq 0x23b30",
            "cmp r4, 0xc9",
            "streq r5, [r6, 0x54]",
            "beq 0x23b30",
            "cmp r4, 0xe9",
            "streq r5, [r6, 0x4c]",
            "beq 0x23b30",
            "cmp r4, 0x40",
            "streq r5, [r6, 0x5c]",
            "beq 0x23b30",
            "cmp r4, 0x41",
            "streq r5, [r6, 0x64]",
            "bne 0x23764",
            "b 0x23b30",
            "add sp, sp, 0x238",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "fcn.000095f8": {
        "function_address": "0x000095f8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x84]!"
        ]
    },
    "fcn.000095bc": {
        "function_address": "0x000095bc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0xac]!"
        ]
    },
    "fcn.00008ec0": {
        "function_address": "0x00008ec0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x554]!"
        ]
    },
    "sym.setDaisychainOption": {
        "function_address": "0x00011fa4",
        "instructions": [
            "push {r0, r1, r2, r3, r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r6, r0",
            "ldr r5, [0x000121cc]",
            "ldr r3, [0x000121d0]",
            "add r5, pc, r5",
            "ldr r8, [r5, r3]",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "bls 0x12018",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0xdf1",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000121d4]",
            "ldr r0, [0x000121d8]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x480",
            "bl sym.imp.printf",
            "ldr r0, [0x000121dc]",
            "mov r1, r6",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x000121e0]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "cmp r6, 1",
            "bls 0x12084",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "bls 0x1207c",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0xdf4",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000121e4]",
            "ldr r0, [0x000121e8]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x480",
            "bl sym.imp.printf",
            "ldr r0, [0x000121ec]",
            "mov r1, r6",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x000121e0]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r4, 0x10",
            "b 0x121c0",
            "ldr sb, [0x000121f0]",
            "add r7, sp, 0x10",
            "ldr sl, [0x000121f4]",
            "mov r3, 0",
            "add sb, pc, sb",
            "add sl, pc, sl",
            "mov r0, sb",
            "str r3, [r7, -4]!",
            "mov r1, sl",
            "mov r2, r7",
            "bl fcn.00008788",
            "subs r4, r0, 0",
            "bne 0x1207c",
            "mov r0, r7",
            "mov r1, r4",
            "mov r2, 0xa",
            "bl sym.imp.strtol",
            "cmp r0, r6",
            "bne 0x12130",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "bls 0x121c0",
            "mov r0, r4",
            "bl sym.imp.time",
            "movw r3, 0xe02",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000121f8]",
            "ldr r0, [0x000121fc]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x480",
            "bl sym.imp.printf",
            "ldr r0, [0x00012200]",
            "mov r1, r6",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x000121e0]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0x121c0",
            "ldr r1, [0x00012204]",
            "mov r2, r6",
            "mov r0, r7",
            "add r1, pc, r1",
            "bl sym.imp.sprintf",
            "mov r1, sl",
            "mov r2, r7",
            "mov r0, sb",
            "bl fcn.00009538",
            "mov r0, sb",
            "bl fcn.000096ac",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "bls 0x121b4",
            "mov r0, r4",
            "bl sym.imp.time",
            "movw r3, 0xe0b",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00012208]",
            "ldr r0, [0x0001220c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x480",
            "bl sym.imp.printf",
            "ldr r0, [0x00012210]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x000121e0]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r0, [0x00012214]",
            "add r0, pc, r0",
            "bl sym.imp.system",
            "mov r0, r4",
            "add sp, sp, 0x10",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "sym.Log_getResponseLogFile": {
        "function_address": "0x0002c878",
        "instructions": [
            "push {r4, r5, lr}",
            "mov r4, r0",
            "ldr r5, [0x0002c9ec]",
            "sub sp, sp, 0x94",
            "ldr r3, [0x0002c9f0]",
            "add r5, pc, r5",
            "cmp r1, 0",
            "cmpne r0, 0",
            "ldr r3, [r5, r3]",
            "moveq r0, 1",
            "movne r0, 0",
            "ldrb r3, [r3]",
            "bne 0x2c904",
            "cmp r3, 3",
            "bls 0x2c9e0",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0x17c",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002c9f4]",
            "ldr r0, [0x0002c9f8]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x68",
            "bl sym.imp.printf",
            "ldr r0, [0x0002c9fc]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0002ca00]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0x2c9e0",
            "cmp r3, 3",
            "bls 0x2c978",
            "bl sym.imp.time",
            "movw r3, 0x181",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002ca04]",
            "ldr r0, [0x0002ca08]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x68",
            "bl sym.imp.printf",
            "ldrb r0, [r4, 3]",
            "ldrb r3, [r4, 2]",
            "ldrb r1, [r4]",
            "ldrb r2, [r4, 1]",
            "str r0, [sp]",
            "ldrb r0, [r4, 4]",
            "str r0, [sp, 4]",
            "ldrb r0, [r4, 5]",
            "str r0, [sp, 8]",
            "ldr r0, [0x0002ca0c]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0002ca00]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x0002ca10]",
            "add r0, sp, 0x14",
            "ldr r2, [r4]",
            "ldr r3, [r5, r3]",
            "str r2, [r3]",
            "ldrh r2, [r4, 4]",
            "mov r4, 0",
            "str r4, [sp, 0x10]",
            "mov r1, r4",
            "strh r2, [r3, 4]",
            "mov r2, 0x7c",
            "bl sym.imp.memset",
            "ldr r1, [0x0002ca14]",
            "add r3, sp, 0x10",
            "mov r0, r3",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "bl sym.imp.system",
            "ldr r3, [0x0002ca18]",
            "mov r0, 1",
            "ldr r3, [r5, r3]",
            "str r0, [r3]",
            "bl sym.imp.sleep",
            "bl fcn.00008dd0",
            "mov r0, r4",
            "b 0x2c9e4",
            "mov r0, 0x10",
            "add sp, sp, 0x94",
            "pop {r4, r5, pc}"
        ]
    },
    "fcn.00008dd0": {
        "function_address": "0x00008dd0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x5f4]!"
        ]
    },
    "sym.wpabuf_zeropad": {
        "function_address": "0x0002eb0c",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "subs r4, r0, 0",
            "beq 0x2eb70",
            "ldr r7, [r4, 4]",
            "mov r5, r1",
            "cmp r7, r1",
            "bhs 0x2eb70",
            "mov r0, r1",
            "bl fcn.00008ddc",
            "subs r6, r0, 0",
            "beq 0x2eb60",
            "rsb r5, r7, r5",
            "mov r1, r5",
            "bl fcn.000086d4",
            "mov r1, 0",
            "mov r2, r5",
            "bl sym.imp.memset",
            "ldr r1, [r4, 8]",
            "mov r0, r6",
            "ldr r2, [r4, 4]",
            "bl fcn.0002ea18",
            "mov r0, r4",
            "bl fcn.00008f74",
            "mov r0, r6",
            "mov r0, r4",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "sym.zyNetCtrl_getWIFIStateByBand": {
        "function_address": "0x00015f18",
        "instructions": [
            "cmp r0, 0x20",
            "push {r4, r5, r6, lr}",
            "mov r6, r1",
            "sub sp, sp, 0x90",
            "beq 0x15f94",
            "bhi 0x15f4c",
            "cmp r0, 0",
            "beq 0x15f70",
            "cmp r0, 1",
            "bne 0x16024",
            "ldr r4, [0x00016030]",
            "add r4, pc, r4",
            "b 0x15f9c",
            "cmp r0, 0x40",
            "beq 0x15f7c",
            "cmp r0, 0x41",
            "beq 0x15f88",
            "cmp r0, 0x21",
            "bne 0x16024",
            "ldr r4, [0x00016034]",
            "add r4, pc, r4",
            "b 0x15f9c",
            "ldr r4, [0x00016038]",
            "add r4, pc, r4",
            "b 0x15f9c",
            "ldr r4, [0x0001603c]",
            "add r4, pc, r4",
            "b 0x15f9c",
            "ldr r4, [0x00016040]",
            "add r4, pc, r4",
            "b 0x15f9c",
            "ldr r4, [0x00016044]",
            "add r4, pc, r4",
            "mov r5, 0",
            "mov r2, 0x7c",
            "str r5, [sp, 0x10]",
            "mov r1, r5",
            "add r0, sp, 0x14",
            "bl sym.imp.memset",
            "str r5, [sp]",
            "mov r1, r5",
            "mov r2, 0xc",
            "add r0, sp, 4",
            "bl sym.imp.memset",
            "ldr r1, [0x00016048]",
            "add r5, sp, 0x10",
            "mov r2, r4",
            "mov r0, r5",
            "add r1, pc, r1",
            "bl sym.imp.sprintf",
            "ldr r0, [0x0001604c]",
            "mov r1, r5",
            "mov r2, sp",
            "add r0, pc, r0",
            "bl fcn.00008788",
            "cmp r0, 0",
            "bne 0x1601c",
            "ldrb r3, [sp]",
            "cmp r3, 0x30",
            "streq r0, [r6]",
            "beq 0x16028",
            "cmp r3, 0x31",
            "moveq r3, 2",
            "streq r3, [r6]",
            "beq 0x16028",
            "mov r3, 0xff",
            "str r3, [r6]",
            "mov r0, 0x10",
            "add sp, sp, 0x90",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.bignum_mul": {
        "function_address": "0x00037648",
        "instructions": [
            "push {r3, lr}",
            "bl fcn.00035644",
            "adds r0, r0, 0",
            "mvnne r0, 0",
            "pop {r3, pc}"
        ]
    },
    "fcn.00035644": {
        "function_address": "0x00035644",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov ip, r1",
            "ldr r3, [r1, 8]",
            "mov lr, r0",
            "ldr r7, [r0, 8]",
            "mov r4, r2",
            "ldr r5, [r0]",
            "ldr r6, [r1]",
            "subs r7, r7, r3",
            "add r3, r5, r6",
            "movne r7, 1",
            "add r3, r3, 1",
            "cmp r3, 0x200",
            "bge 0x35694",
            "cmp r6, r5",
            "movlt r5, r6",
            "cmp r5, 0x100",
            "bgt 0x35694",
            "bl fcn.000353cc",
            "b 0x356a4",
            "mov r0, lr",
            "mov r1, ip",
            "mov r2, r4",
            "bl fcn.00035518",
            "ldr r3, [r4]",
            "cmp r3, 0",
            "movle r7, 0",
            "str r7, [r4, 8]",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.000353cc": {
        "function_address": "0x000353cc",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r3",
            "ldr r3, [r2, 4]",
            "sub sp, sp, 0x800",
            "sub sp, sp, 0xc",
            "mov r7, r0",
            "cmp r3, r4",
            "mov r8, r1",
            "mov r6, r2",
            "blt 0x3541c",
            "ldr r1, [r8]",
            "mov r5, 0",
            "ldr sl, [r7]",
            "mov ip, 0",
            "add r3, sl, r1",
            "sub r1, r1, 1",
            "cmp r4, r3",
            "movlt r3, r4",
            "mov r4, 0",
            "b 0x35458",
            "mov r0, r2",
            "mov r1, r4",
            "bl fcn.00034f34",
            "cmp r0, 0",
            "beq 0x353f4",
            "b 0x3550c",
            "bic r0, r4, 0xf0000000",
            "add r2, sp, 8",
            "str r0, [r2, ip, lsl 2]",
            "add ip, ip, 1",
            "lsr r2, r4, 0x1c",
            "orr r2, r2, r5, lsl 4",
            "lsr r0, r5, 0x1c",
            "mov r4, r2",
            "mov r5, r0",
            "cmp ip, r3",
            "bge 0x354b8",
            "cmp ip, r1",
            "ldr r0, [r7, 0xc]",
            "movlt r2, ip",
            "ldr lr, [r8, 0xc]",
            "movge r2, r1",
            "rsb sb, r2, ip",
            "add lr, lr, r2, lsl 2",
            "add r2, r2, 1",
            "add r0, r0, sb, lsl 2",
            "rsb sb, sb, sl",
            "cmp sb, r2",
            "movlt r2, sb",
            "str r2, [sp]",
            "mov r2, 0",
            "ldr fp, [sp]",
            "cmp r2, fp",
            "bge 0x35434",
            "ldr sb, [r0], 4",
            "add r2, r2, 1",
            "ldr fp, [lr], -4",
            "umlal r4, r5, sb, fp",
            "b 0x35498",
            "ldr r0, [r6]",
            "mov r2, 0",
            "str r3, [r6]",
            "add r3, r3, 1",
            "ldr r1, [r6, 0xc]",
            "cmp r2, r3",
            "addlt ip, sp, 8",
            "ldrlt ip, [ip, r2, lsl 2]",
            "strlt ip, [r1, r2, lsl 2]",
            "addlt r2, r2, 1",
            "blt 0x354cc",
            "bic r3, r3, r3, asr 31",
            "add r2, r1, r3, lsl 2",
            "mov r1, 0",
            "cmp r3, r0",
            "strlt r1, [r2], 4",
            "addlt r3, r3, 1",
            "blt 0x354f0",
            "mov r0, r6",
            "bl fcn.00034d3c",
            "mov r0, 0",
            "add sp, sp, 0x800",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00035518": {
        "function_address": "0x00035518",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "cmp r3, 0x200",
            "sub sp, sp, 0x24",
            "mov r8, r0",
            "mov sb, r1",
            "mov r6, r3",
            "str r2, [sp]",
            "bge 0x35558",
            "ldr ip, [r1]",
            "ldr lr, [r0]",
            "cmp lr, ip",
            "movlt ip, lr",
            "cmp ip, 0xff",
            "bgt 0x35558",
            "bl fcn.000353cc",
            "b 0x3563c",
            "add r7, sp, 0x10",
            "mov r1, r6",
            "mov r0, r7",
            "bl fcn.00034e5c",
            "cmp r0, 0",
            "bne 0x3563c",
            "ldr r3, [r8]",
            "mov ip, r0",
            "str r6, [sp, 0x10]",
            "str r3, [sp, 8]",
            "ldr r3, [sp, 8]",
            "cmp ip, r3",
            "bge 0x3561c",
            "ldr r3, [sb]",
            "rsb r0, ip, r6",
            "ldr r1, [sp, 0x1c]",
            "mov r4, 0",
            "cmp r0, r3",
            "ldr lr, [sb, 0xc]",
            "movge r0, r3",
            "ldr r3, [r8, 0xc]",
            "add r1, r1, ip, lsl 2",
            "ldr r3, [r3, ip, lsl 2]",
            "mov r2, r1",
            "str r3, [sp, 0xc]",
            "mov r3, r4",
            "cmp r3, r0",
            "bge 0x35604",
            "ldr r5, [lr], 4",
            "add r3, r3, 1",
            "ldr sl, [sp, 0xc]",
            "str r5, [sp, 4]",
            "mov r5, 0",
            "ldr fp, [sp, 4]",
            "umlal r4, r5, fp, sl",
            "ldr fp, [r2]",
            "adds r4, r4, fp",
            "adc r5, r5, 0",
            "bic fp, r4, 0xf0000000",
            "lsr r4, r4, 0x1c",
            "str fp, [r2], 4",
            "orr r4, r4, r5, lsl 4",
            "b 0x355c0",
            "bic r0, r0, r0, asr 31",
            "add r3, ip, r0",
            "add ip, ip, 1",
            "cmp r3, r6",
            "strlt r4, [r1, r0, lsl 2]",
            "b 0x35580",
            "mov r0, r7",
            "bl fcn.00034d3c",
            "ldr r1, [sp]",
            "mov r0, r7",
            "bl fcn.00034d0c",
            "mov r0, r7",
            "bl fcn.00034db0",
            "mov r0, 0",
            "add sp, sp, 0x24",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.PBE_set_PBE_flag": {
        "function_address": "0x0001a2d4",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "subs r4, r0, 0",
            "ldr r5, [0x0001a348]",
            "add r5, pc, r5",
            "bne 0x1a304",
            "ldr r3, [0x0001a34c]",
            "ldr r3, [r5, r3]",
            "str r4, [r3]",
            "ldr r3, [0x0001a350]",
            "ldr r3, [r5, r3]",
            "str r4, [r3]",
            "b 0x1a338",
            "cmp r4, 1",
            "bne 0x1a340",
            "ldr r3, [0x0001a350]",
            "ldr r6, [r5, r3]",
            "ldr r3, [r6]",
            "cmp r3, 1",
            "beq 0x1a340",
            "mov r0, 0",
            "bl sym.imp.time",
            "ldr r3, [0x0001a34c]",
            "ldr r3, [r5, r3]",
            "str r4, [r6]",
            "str r0, [r3]",
            "mov r0, 0",
            "pop {r4, r5, r6, pc}",
            "mov r0, 0x10",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.zyNetCtrl_removeWIFINeighborList": {
        "function_address": "0x000157c4",
        "instructions": [
            "ldr r3, [0x0001582c]",
            "ldr r2, [0x00015830]",
            "add r3, pc, r3",
            "ldr r2, [r3, r2]",
            "ldr r1, [r2]",
            "cmp r1, 0",
            "beq 0x15824",
            "push {r4, r5, r6, lr}",
            "mov r6, r2",
            "ldr r2, [0x00015834]",
            "ldr r3, [r3, r2]",
            "ldr r0, [r3]",
            "mov r5, r3",
            "cmp r0, 0",
            "beq 0x1581c",
            "ldr r4, [r0]",
            "bl sym.imp.free",
            "cmp r4, 0",
            "movne r0, r4",
            "bne 0x15800",
            "str r4, [r6]",
            "str r4, [r5]",
            "mov r0, 1",
            "pop {r4, r5, r6, pc}",
            "mov r0, 1",
            "bx lr"
        ]
    },
    "sym.zyEvent_INTFADDEDEVENTID": {
        "function_address": "0x00017eac",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, lr}",
            "mov r5, r0",
            "ldr r6, [0x00018130]",
            "sub sp, sp, 0x14",
            "ldr r3, [0x00018134]",
            "add r6, pc, r6",
            "ldr r8, [r6, r3]",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "bls 0x17f20",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0x16",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r0, [0x00018138]",
            "ldr r3, [0x0001813c]",
            "add r0, pc, r0",
            "add r3, pc, r3",
            "bl sym.imp.printf",
            "ldr r0, [0x00018140]",
            "add r1, r5, 4",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00018144]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, 1",
            "mov r1, 8",
            "bl sym.imp.calloc",
            "subs r4, r0, 0",
            "bne 0x17f74",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "bls 0x18128",
            "bl sym.imp.time",
            "mov r3, 0x1a",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r0, [0x00018148]",
            "ldr r3, [0x0001814c]",
            "add r0, pc, r0",
            "add r3, pc, r3",
            "bl sym.imp.printf",
            "ldr r0, [0x00018150]",
            "add r0, pc, r0",
            "b 0x180b4",
            "mov r1, 0x48",
            "mov r0, 1",
            "bl sym.imp.calloc",
            "str r0, [r4, 4]",
            "add r1, r5, 4",
            "add r0, r0, 4",
            "mov r7, 0",
            "bl sym.imp.strcpy",
            "mov r3, r5",
            "ldr r2, [r4, 4]",
            "add r3, r3, 1",
            "ldrb r1, [r3, 0x13]",
            "add r2, r2, r7",
            "add r7, r7, 1",
            "cmp r7, 6",
            "strb r1, [r2, 0x14]",
            "bne 0x17f98",
            "ldr r3, [r4, 4]",
            "ldr r2, [r5, 0x1c]",
            "str r2, [r3, 0x1c]",
            "ldr r3, [r4, 4]",
            "ldr r2, [r5, 0x20]",
            "str r2, [r3, 0x20]",
            "ldr r3, [r4, 4]",
            "ldr r2, [r5, 0x24]",
            "str r2, [r3, 0x24]",
            "ldr r3, [r4, 4]",
            "ldr r2, [r5, 0x30]",
            "str r2, [r3, 0x30]",
            "ldr r3, [r4, 4]",
            "ldrh r2, [r5, 0x40]",
            "strh r2, [r3, 0x40]",
            "ldr sb, [r4, 4]",
            "ldrh r3, [sb, 0x40]",
            "cmp r3, 0",
            "bne 0x18040",
            "mov r0, 1",
            "strb r0, [r4]",
            "bl sym.imp.sleep",
            "mov r3, 0",
            "str r3, [sp, 0xc]",
            "ldr r3, [0x00018154]",
            "ldr r3, [r6, r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x180f8",
            "mov r0, 2",
            "mov r1, r4",
            "add r2, sp, 0xc",
            "blx r3",
            "b 0x180f8",
            "ldrh r1, [r5, 0x40]",
            "mov r0, 1",
            "mul r1, r7, r1",
            "bl sym.imp.calloc",
            "str r0, [sb, 0x44]",
            "ldr r0, [r4, 4]",
            "ldr sb, [r0, 0x44]",
            "cmp sb, 0",
            "movne r3, 0",
            "bne 0x180cc",
            "bl sym.imp.free",
            "mov r0, r4",
            "bl sym.imp.free",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "bls 0x18128",
            "mov r0, sb",
            "bl sym.imp.time",
            "mov r3, 0x39",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r0, [0x00018158]",
            "ldr r3, [0x0001815c]",
            "add r0, pc, r0",
            "add r3, pc, r3",
            "bl sym.imp.printf",
            "ldr r0, [0x00018160]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00018144]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0x18128",
            "ldr r2, [r4, 4]",
            "ldrh r1, [r2, 0x40]",
            "mul r1, r7, r1",
            "cmp r3, r1",
            "bhs 0x18004",
            "ldr r1, [r5, 0x44]",
            "ldr r2, [r2, 0x44]",
            "ldrb r1, [r1, r3]",
            "strb r1, [r2, r3]",
            "add r3, r3, 1",
            "b 0x180cc",
            "ldr r3, [r4, 4]",
            "ldrh r2, [r3, 0x40]",
            "cmp r2, 0",
            "beq 0x18110",
            "ldr r0, [r3, 0x44]",
            "bl sym.imp.free",
            "ldr r0, [r4, 4]",
            "bl sym.imp.free",
            "mov r0, r4",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, lr}",
            "b sym.imp.free",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, pc}"
        ]
    },
    "sym.zyNetCtrl_FWCtrl_CheckNewFW": {
        "function_address": "0x000259dc",
        "instructions": [
            "push {r0, r1, r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r7, r0",
            "ldr r4, [0x00025d68]",
            "mov sb, r1",
            "ldr r3, [0x00025d6c]",
            "mov r8, r2",
            "add r4, pc, r4",
            "ldr r5, [r4, r3]",
            "ldrb r3, [r5]",
            "cmp r3, 3",
            "bls 0x25a58",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0x4a",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00025d70]",
            "ldr r0, [0x00025d74]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x124",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x00025d78]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00025d7c]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x00025d80]",
            "ldr r6, [r4, r3]",
            "ldr r3, [r6]",
            "mov sl, r6",
            "cmp r3, 2",
            "bne 0x25ae4",
            "bl fcn.0000898c",
            "ldr r3, [r6]",
            "cmp r3, 2",
            "bne 0x25ae4",
            "ldrb r3, [r5]",
            "cmp r3, 3",
            "bls 0x25adc",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0x54",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00025d84]",
            "ldr r0, [0x00025d88]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x124",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x00025d8c]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00025d7c]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, 0x10",
            "b 0x25d60",
            "ldr r2, [0x00025d90]",
            "mov r0, 0",
            "str r0, [sl]",
            "ldr r2, [r4, r2]",
            "ldr r6, [r2]",
            "cmp r6, 4",
            "bne 0x25b48",
            "ldrb r2, [r5]",
            "cmp r2, 3",
            "bls 0x25adc",
            "bl sym.imp.time",
            "mov r3, 0x5c",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, r6",
            "ldr r3, [0x00025d94]",
            "ldr r0, [0x00025d98]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x124",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x00025d9c]",
            "add r0, pc, r0",
            "b 0x25ac8",
            "str r0, [r2]",
            "cmp r8, 0",
            "beq 0x25b64",
            "ldr r3, [0x00025da0]",
            "mov r1, r8",
            "ldr r0, [r4, r3]",
            "bl sym.imp.strcpy",
            "cmp r7, 0",
            "bne 0x25c60",
            "ldr r7, [0x00025da4]",
            "bl fcn.0000868c",
            "mov r6, 3",
            "mov r0, 3",
            "add r7, pc, r7",
            "bl sym.imp.sleep",
            "add r7, r7, 0x124",
            "add r7, r7, 1",
            "bl fcn.00008944",
            "subs r2, r0, 0",
            "bne 0x25be0",
            "ldrb r3, [r5]",
            "cmp r3, 3",
            "bls 0x25adc",
            "bl sym.imp.time",
            "mov r3, 0x77",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00025da8]",
            "ldr r0, [0x00025dac]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x124",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x00025db0]",
            "add r0, pc, r0",
            "b 0x25ac8",
            "cmp r2, 6",
            "bne 0x25c4c",
            "ldrb r3, [r5]",
            "cmp r3, 3",
            "bls 0x25c38",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r1, r0",
            "mov r3, 0x7d",
            "ldr r0, [0x00025db4]",
            "mov r2, 4",
            "str r3, [sp]",
            "mov r3, r7",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r0, [0x00025db8]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00025d7c]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, 5",
            "bl sym.imp.sleep",
            "subs r6, r6, 1",
            "bne 0x25b8c",
            "b 0x25adc",
            "sub r2, r2, 7",
            "cmp r2, 1",
            "bhi 0x25c38",
            "mov r0, 0",
            "b 0x25d60",
            "cmp r7, 1",
            "bne 0x25adc",
            "ldr r7, [0x00025dbc]",
            "mov r1, 0",
            "mov r0, sb",
            "mov r6, 3",
            "add r7, pc, r7",
            "bl fcn.00008dc4",
            "add r7, r7, 0x124",
            "mov r0, 3",
            "add r7, r7, 1",
            "bl sym.imp.sleep",
            "bl fcn.00008944",
            "subs r2, r0, 0",
            "bne 0x25ce4",
            "ldrb r3, [r5]",
            "cmp r3, 3",
            "bls 0x25adc",
            "bl sym.imp.time",
            "mov r3, 0x9a",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00025dc0]",
            "ldr r0, [0x00025dc4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x124",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x00025dc8]",
            "add r0, pc, r0",
            "b 0x25ac8",
            "cmp r2, 6",
            "bne 0x25d50",
            "ldrb r3, [r5]",
            "cmp r3, 3",
            "bls 0x25d3c",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r1, r0",
            "mov r3, 0xa0",
            "ldr r0, [0x00025dcc]",
            "mov r2, 4",
            "str r3, [sp]",
            "mov r3, r7",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r0, [0x00025dd0]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00025d7c]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, 5",
            "bl sym.imp.sleep",
            "subs r6, r6, 1",
            "bne 0x25c90",
            "b 0x25adc",
            "sub r2, r2, 7",
            "cmp r2, 1",
            "bhi 0x25d3c",
            "b 0x25c58",
            "add sp, sp, 8",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "fcn.0000868c": {
        "function_address": "0x0000868c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0xacc]!"
        ]
    },
    "fcn.00008944": {
        "function_address": "0x00008944",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x8fc]!"
        ]
    },
    "fcn.00008dc4": {
        "function_address": "0x00008dc4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x5fc]!"
        ]
    },
    "sym.getNewFWversion": {
        "function_address": "0x0000c63c",
        "instructions": [
            "push {r3, lr}",
            "bl fcn.00009250",
            "cmp r0, 8",
            "movne r0, 0x10",
            "moveq r0, 0",
            "pop {r3, pc}"
        ]
    },
    "fcn.00009250": {
        "function_address": "0x00009250",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x2f4]!"
        ]
    },
    "sym.aes_128_cbc_decrypt": {
        "function_address": "0x000377d0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r5, r1",
            "sub sp, sp, 0x20",
            "mov r1, 0x10",
            "mov r4, r2",
            "mov sl, r3",
            "bl fcn.0000919c",
            "subs r8, r0, 0",
            "beq 0x378b8",
            "mov r2, r5",
            "add r3, r5, 0x10",
            "mov ip, sp",
            "mov r5, sp",
            "ldr r0, [r2]",
            "add r2, r2, 8",
            "ldr r1, [r2, -4]",
            "mov lr, ip",
            "cmp r2, r3",
            "stm lr!, {r0, r1}",
            "mov ip, lr",
            "bne 0x37804",
            "lsr sl, sl, 4",
            "mov r7, 0",
            "add r6, sp, 0x10",
            "cmp r7, sl",
            "bge 0x378a8",
            "mov r2, r4",
            "mov ip, r6",
            "add sb, r4, 0x10",
            "ldr r0, [r2]",
            "add r2, r2, 8",
            "ldr r1, [r2, -4]",
            "mov r3, ip",
            "cmp r2, sb",
            "stm r3!, {r0, r1}",
            "mov ip, r3",
            "bne 0x37844",
            "mov r2, r4",
            "mov r0, r8",
            "mov r1, r4",
            "bl fcn.00008a28",
            "mov r2, 0",
            "ldrb r3, [r4, r2]",
            "ldrb r1, [r5, r2]",
            "eor r3, r3, r1",
            "strb r3, [r4, r2]",
            "add r2, r2, 1",
            "cmp r2, 0x10",
            "bne 0x37878",
            "ldm r6, {r0, r1, r2, r3}",
            "mov r4, sb",
            "add r7, r7, 1",
            "stm r5, {r0, r1, r2, r3}",
            "b 0x37830",
            "mov r0, r8",
            "bl fcn.000092f8",
            "mov r0, 0",
            "b 0x378bc",
            "mvn r0, 0",
            "add sp, sp, 0x20",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "fcn.0000919c": {
        "function_address": "0x0000919c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x36c]!"
        ]
    },
    "fcn.00008a28": {
        "function_address": "0x00008a28",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x864]!"
        ]
    },
    "fcn.000092f8": {
        "function_address": "0x000092f8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x284]!"
        ]
    },
    "sym.setWiFiconfig": {
        "function_address": "0x0001c414",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov sl, r3",
            "ldr r4, [0x0001c964]",
            "sub sp, sp, 0x620",
            "ldr r3, [0x0001c968]",
            "sub sp, sp, 0xc",
            "add r4, pc, r4",
            "mov r8, r0",
            "mov sb, r1",
            "mov r6, r2",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x1c4a8",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x5a1",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001c96c]",
            "ldr r0, [0x0001c970]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xba",
            "bl sym.imp.printf",
            "ldr r0, [0x0001c974]",
            "mov r3, r6",
            "str sl, [sp]",
            "mov r1, r8",
            "add r0, pc, r0",
            "mov r2, sb",
            "bl sym.imp.printf",
            "ldr r3, [0x0001c978]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r7, 0",
            "add r4, sp, 0x28",
            "str r7, [sp, 0x18]",
            "mov r1, r7",
            "mov r2, 0xc",
            "sub r0, r4, 0xc",
            "bl sym.imp.memset",
            "str r7, [sp, 0x28]",
            "mov r1, r7",
            "mov r2, 0x1c",
            "add r0, sp, 0x2c",
            "bl sym.imp.memset",
            "str r7, [sp, 0x48]",
            "mov r1, r7",
            "mov r2, 0x1c",
            "add r0, sp, 0x4c",
            "bl sym.imp.memset",
            "ldr r3, [0x0001c97c]",
            "mov r1, r7",
            "mov r2, 0x7b",
            "add r5, sp, 0xa8",
            "add r3, pc, r3",
            "ldr r0, [r3, 0xc8]!",
            "ldrb r3, [r3, 4]",
            "str r0, [sp, 0xa8]",
            "add r0, sp, 0xad",
            "strb r3, [sp, 0xac]",
            "bl sym.imp.memset",
            "cmp sb, 1",
            "bne 0x1c540",
            "ldr r1, [0x0001c980]",
            "mov r0, r4",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "ldr r1, [0x0001c984]",
            "add r0, sp, 0x48",
            "add r1, pc, r1",
            "b 0x1c570",
            "cmp sb, 0x20",
            "bne 0x1c574",
            "ldr r7, [0x0001c988]",
            "mov r0, r4",
            "add r7, pc, r7",
            "mov r1, r7",
            "bl sym.imp.strcpy",
            "mov r1, r7",
            "add r0, sp, 0x48",
            "bl sym.imp.strcpy",
            "mov r0, r5",
            "mov r1, sl",
            "bl sym.imp.strcpy",
            "mov r7, 0",
            "mov r2, 0xfc",
            "str r7, [sp, 0x228]",
            "mov r1, r7",
            "add r0, sp, 0x22c",
            "bl sym.imp.memset",
            "str r7, [sp, 0x328]",
            "mov r1, r7",
            "mov r2, 0xfc",
            "add r0, sp, 0x32c",
            "bl sym.imp.memset",
            "str r7, [sp, 0x128]",
            "mov r1, r7",
            "mov r2, 0x7c",
            "add r0, sp, 0x12c",
            "bl sym.imp.memset",
            "str r7, [sp, 0x1a8]",
            "mov r1, r7",
            "mov r2, 0x7c",
            "add r0, sp, 0x1ac",
            "bl sym.imp.memset",
            "str r7, [sp, 0x428]",
            "add r0, sp, 0x420",
            "mov r1, r7",
            "mov r2, 0xfc",
            "add r0, r0, 0xc",
            "bl sym.imp.memset",
            "str r7, [sp, 0x528]",
            "add r0, sp, 0x520",
            "mov r1, r7",
            "mov r2, 0xfc",
            "add r0, r0, 0xc",
            "bl sym.imp.memset",
            "str r7, [sp, 0x68]",
            "mov r1, r7",
            "mov r2, 0x1c",
            "add r0, sp, 0x6c",
            "bl sym.imp.memset",
            "str r7, [sp, 0x88]",
            "add r0, sp, 0x8c",
            "mov r1, r7",
            "mov r2, 0x1c",
            "bl sym.imp.memset",
            "cmp r8, r7",
            "ldreq r1, [0x0001c98c]",
            "addeq r0, sp, 0x18",
            "addeq r1, pc, r1",
            "beq 0x1c774",
            "cmp r8, 1",
            "ldreq r1, [0x0001c990]",
            "addeq r0, sp, 0x18",
            "addeq r1, pc, r1",
            "beq 0x1c774",
            "cmp r8, 0x20",
            "ldreq r1, [0x0001c994]",
            "addeq r0, sp, 0x18",
            "addeq r1, pc, r1",
            "beq 0x1c774",
            "cmp r8, 0x21",
            "ldreq r1, [0x0001c998]",
            "addeq r0, sp, 0x18",
            "addeq r1, pc, r1",
            "beq 0x1c774",
            "and r3, r8, 0xdf",
            "add r2, r3, 0x40",
            "uxtb r2, r2",
            "cmp r2, 1",
            "bls 0x1c68c",
            "cmp r3, 0xc9",
            "bne 0x1c74c",
            "ldr r0, [0x0001c99c]",
            "add r7, sp, 0x48",
            "str r7, [sp]",
            "mov r1, r6",
            "add r0, pc, r0",
            "mov r2, r5",
            "mov r3, r4",
            "bl fcn.00008f98",
            "ldr r0, [0x0001c9a0]",
            "mov r1, r6",
            "str r7, [sp]",
            "mov r2, r5",
            "add r0, pc, r0",
            "mov r3, r4",
            "bl fcn.00008f98",
            "ldr r0, [0x0001c9a4]",
            "mov r1, r6",
            "str r7, [sp]",
            "mov r2, r5",
            "add r0, pc, r0",
            "mov r3, r4",
            "bl fcn.00008f98",
            "ldr r0, [0x0001c9a8]",
            "mov r1, r6",
            "str r7, [sp]",
            "mov r2, r5",
            "add r0, pc, r0",
            "mov r3, r4",
            "bl fcn.00008f98",
            "ldr r0, [0x0001c9ac]",
            "mov r1, r6",
            "str r7, [sp]",
            "mov r2, r5",
            "add r0, pc, r0",
            "mov r3, r4",
            "bl fcn.00008f98",
            "ldr r0, [0x0001c9b0]",
            "mov r1, r6",
            "str r7, [sp]",
            "mov r2, r5",
            "add r0, pc, r0",
            "mov r3, r4",
            "bl fcn.00008f98",
            "ldr r0, [0x0001c9b4]",
            "add r0, pc, r0",
            "bl fcn.000096ac",
            "mov r0, 0x10",
            "b 0x1c958",
            "cmp r8, 0x40",
            "ldreq r1, [0x0001c9b8]",
            "addeq r0, sp, 0x18",
            "addeq r1, pc, r1",
            "beq 0x1c774",
            "cmp r8, 0x41",
            "bne 0x1c958",
            "ldr r1, [0x0001c9bc]",
            "add r0, sp, 0x18",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "ldr r1, [0x0001c9c0]",
            "add r7, sp, 0x18",
            "add fp, sp, 0x228",
            "mov r2, r7",
            "add r1, pc, r1",
            "mov r0, fp",
            "bl sym.imp.sprintf",
            "ldr r1, [0x0001c9c4]",
            "add r8, sp, 0x328",
            "mov r2, r7",
            "mov r0, r8",
            "add r1, pc, r1",
            "add sl, sp, 0x128",
            "bl sym.imp.sprintf",
            "ldr r1, [0x0001c9c8]",
            "mov r2, r7",
            "mov r0, sl",
            "add sb, sp, 0x1a8",
            "add r1, pc, r1",
            "bl sym.imp.sprintf",
            "ldr r1, [0x0001c9cc]",
            "mov r2, r7",
            "ldr r7, [0x0001c9d0]",
            "mov r0, sb",
            "add r1, pc, r1",
            "add r7, pc, r7",
            "bl sym.imp.sprintf",
            "add ip, sp, 0x420",
            "mov r1, fp",
            "add ip, ip, 8",
            "mov r0, r7",
            "str ip, [sp, 8]",
            "mov r2, ip",
            "bl fcn.00008788",
            "add r3, sp, 0x520",
            "mov r1, r8",
            "add r3, r3, 8",
            "mov r0, r7",
            "str r3, [sp, 0xc]",
            "mov r2, r3",
            "bl fcn.00008788",
            "add r3, sp, 0x68",
            "mov r1, sl",
            "str r3, [sp, 0x10]",
            "mov r2, r3",
            "mov r0, r7",
            "bl fcn.00008788",
            "add r3, sp, 0x88",
            "mov r1, sb",
            "str r3, [sp, 0x14]",
            "mov r2, r3",
            "mov r0, r7",
            "bl fcn.00008788",
            "ldr ip, [sp, 8]",
            "mov r0, r6",
            "mov r1, ip",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "moveq r6, r0",
            "beq 0x1c87c",
            "mov r2, r6",
            "mov r0, r7",
            "mov r1, fp",
            "mov r6, 1",
            "bl fcn.00009538",
            "mov r0, r4",
            "add r1, sp, 0x68",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x1c8a8",
            "ldr r0, [0x0001c9d4]",
            "mov r1, sl",
            "mov r2, r4",
            "add r6, r6, 1",
            "add r0, pc, r0",
            "bl fcn.00009538",
            "add r4, sp, 0x48",
            "add r1, sp, 0x88",
            "mov r0, r4",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x1c8d8",
            "ldr r0, [0x0001c9d8]",
            "mov r1, sb",
            "mov r2, r4",
            "add r6, r6, 1",
            "add r0, pc, r0",
            "bl fcn.00009538",
            "add r1, sp, 0x520",
            "mov r0, r5",
            "add r1, r1, 8",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x1c90c",
            "ldr r0, [0x0001c9dc]",
            "mov r1, r8",
            "mov r2, r5",
            "add r6, r6, 1",
            "add r0, pc, r0",
            "bl fcn.00009538",
            "b 0x1c914",
            "cmp r6, 0",
            "beq 0x1c920",
            "ldr r0, [0x0001c9e0]",
            "add r0, pc, r0",
            "bl fcn.000096ac",
            "ldr r4, [0x0001c9e4]",
            "ldr r1, [0x0001c9e8]",
            "ldr r2, [0x0001c9ec]",
            "add r4, pc, r4",
            "add r1, pc, r1",
            "mov r0, r4",
            "add r2, pc, r2",
            "bl fcn.00009538",
            "mov r0, r4",
            "bl fcn.000096ac",
            "cmp r6, 0",
            "moveq r0, 0x10",
            "movne r0, 0",
            "b 0x1c958",
            "add sp, sp, 0x620",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00008f98": {
        "function_address": "0x00008f98",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x4c4]!"
        ]
    },
    "sym.setAPSteering": {
        "function_address": "0x0000be24",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r4, r0",
            "ldr r5, [0x0000bf1c]",
            "sub sp, sp, 0x98",
            "ldr r3, [0x0000bf20]",
            "mov r6, r1",
            "add r5, pc, r5",
            "ldr r3, [r5, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0xbec8",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x5ec",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000bf24]",
            "ldr r0, [0x0000bf28]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x158",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldrb r0, [r4, 3]",
            "ldrb r3, [r4, 2]",
            "ldrb r1, [r4]",
            "ldrb r2, [r4, 1]",
            "str r0, [sp]",
            "ldrb r0, [r4, 4]",
            "str r0, [sp, 4]",
            "ldrb r0, [r4, 5]",
            "str r6, [sp, 0xc]",
            "str r0, [sp, 8]",
            "ldr r0, [0x0000bf2c]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000bf30]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r1, [r4, 2]",
            "ldrb r2, [r4]",
            "ldrb r3, [r4, 1]",
            "str r1, [sp]",
            "ldrb r1, [r4, 3]",
            "str r1, [sp, 4]",
            "ldrb r1, [r4, 4]",
            "str r1, [sp, 8]",
            "ldrb r1, [r4, 5]",
            "add r4, sp, 0x18",
            "str r6, [sp, 0x10]",
            "mov r0, r4",
            "str r1, [sp, 0xc]",
            "ldr r1, [0x0000bf34]",
            "add r1, pc, r1",
            "bl sym.imp.sprintf",
            "mov r0, r4",
            "bl sym.imp.system",
            "mov r0, 0",
            "add sp, sp, 0x98",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.zyEvent_LEDSTATUSEVENTID": {
        "function_address": "0x00019d3c",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "mov r6, r0",
            "ldr r4, [0x00019ef4]",
            "sub sp, sp, 0x14",
            "ldr r3, [0x00019ef8]",
            "add r4, pc, r4",
            "ldr r7, [r4, r3]",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x19db4",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x1a1",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00019efc]",
            "ldr r0, [0x00019f00]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x124",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x00019f04]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00019f08]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x19e14",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x1a2",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00019f0c]",
            "ldr r0, [0x00019f10]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x124",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x00019f14]",
            "mov r1, r6",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00019f08]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, 1",
            "mov r1, 0x20",
            "bl sym.imp.calloc",
            "subs r5, r0, 0",
            "movne r3, r6",
            "movne ip, r5",
            "addne lr, r3, 0x20",
            "bne 0x19e90",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x19eec",
            "bl sym.imp.time",
            "movw r3, 0x1a7",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00019f18]",
            "ldr r0, [0x00019f1c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x124",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x00019f20]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00019f08]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0x19eec",
            "ldr r0, [r3]",
            "add r3, r3, 8",
            "ldr r1, [r3, -4]",
            "mov r2, ip",
            "cmp r3, lr",
            "stm r2!, {r0, r1}",
            "mov ip, r2",
            "bne 0x19e90",
            "mov r3, 0",
            "str r3, [sp, 0xc]",
            "ldr r3, [0x00019f24]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x19edc",
            "mov r0, 0xd",
            "mov r1, r5",
            "add r2, sp, 0xc",
            "blx r3",
            "mov r0, r5",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, lr}",
            "b sym.imp.free",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, pc}"
        ]
    },
    "sym.PBE_sendPBEventNotify": {
        "function_address": "0x00019fa8",
        "instructions": [
            "push {r0, r1, r2, r3, r4, r5, r6, lr}",
            "ldr r5, [0x0001a0d4]",
            "ldr r3, [0x0001a0d8]",
            "add r5, pc, r5",
            "ldr r3, [r5, r3]",
            "ldr r2, [r3]",
            "cmp r2, 0",
            "beq 0x1a038",
            "mov r0, 1",
            "mov r1, 8",
            "mov r6, r3",
            "bl sym.imp.calloc",
            "ldr r3, [0x0001a0dc]",
            "subs r4, r0, 0",
            "ldr r3, [r5, r3]",
            "bne 0x1a040",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x1a038",
            "bl sym.imp.time",
            "mov r3, 0x29",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r0, [0x0001a0e0]",
            "ldr r3, [0x0001a0e4]",
            "add r0, pc, r0",
            "add r3, pc, r3",
            "bl sym.imp.printf",
            "ldr r0, [0x0001a0e8]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0001a0ec]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, 0x10",
            "b 0x1a0cc",
            "ldrb r3, [r3]",
            "mov r0, 0",
            "strh r0, [r4]",
            "strb r0, [r4, 2]",
            "cmp r3, 3",
            "str r0, [r4, 4]",
            "str r0, [sp, 0xc]",
            "bls 0x1a0a4",
            "bl sym.imp.time",
            "mov r3, 0x32",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r0, [0x0001a0f0]",
            "ldr r3, [0x0001a0f4]",
            "add r0, pc, r0",
            "add r3, pc, r3",
            "bl sym.imp.printf",
            "ldr r0, [0x0001a0f8]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0001a0ec]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [r6]",
            "cmp r3, 0",
            "beq 0x1a0c0",
            "mov r0, 4",
            "mov r1, r4",
            "add r2, sp, 0xc",
            "blx r3",
            "mov r0, r4",
            "bl fcn.00008bfc",
            "mov r0, 0",
            "add sp, sp, 0x10",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.00008bfc": {
        "function_address": "0x00008bfc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x72c]!"
        ]
    },
    "sym.setIntfPwrStateByType": {
        "function_address": "0x0000abcc",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r5, r0",
            "ldr r6, [0x0000b048]",
            "sub sp, sp, 0x188",
            "ldr r3, [0x0000b04c]",
            "mov r4, r1",
            "add r6, pc, r6",
            "ldr r7, [r6, r3]",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0xac44",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x439",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000b050]",
            "ldr r0, [0x0000b054]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xda",
            "bl sym.imp.printf",
            "ldr r0, [0x0000b058]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000b05c]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0xaca0",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x43a",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000b060]",
            "ldr r0, [0x0000b064]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xda",
            "bl sym.imp.printf",
            "ldr r0, [0x0000b068]",
            "mov r1, r5",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000b05c]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0xacfc",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x43b",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000b06c]",
            "ldr r0, [0x0000b070]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xda",
            "bl sym.imp.printf",
            "ldr r0, [0x0000b074]",
            "mov r1, r4",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000b05c]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "sub r2, r5, 0x100",
            "movw r3, 0x103",
            "cmp r5, r3",
            "cmpne r2, 1",
            "bhi 0xae04",
            "ldr r0, [0x0000b078]",
            "ldr r6, [0x0000b07c]",
            "add r0, pc, r0",
            "add r6, pc, r6",
            "bl sym.imp.system",
            "ldr r1, [0x0000b080]",
            "mov r0, r6",
            "add r1, pc, r1",
            "bl sym.imp.fopen",
            "subs r5, r0, 0",
            "beq 0xb03c",
            "add r0, sp, 0x48",
            "mov r1, 4",
            "mov r2, r5",
            "bl sym.imp.fgets",
            "cmp r4, 1",
            "bhi 0xad80",
            "ldrb r3, [sp, 0x48]",
            "cmp r3, 0x30",
            "beq 0xad94",
            "ldr r1, [0x0000b084]",
            "add r0, sp, 0x88",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "ldr r1, [0x0000b088]",
            "add r0, sp, 0x108",
            "add r1, pc, r1",
            "b 0xadc4",
            "cmp r4, 2",
            "bne 0xadc8",
            "ldrb r3, [sp, 0x48]",
            "cmp r3, 0x31",
            "bne 0xada8",
            "mov r0, r5",
            "bl sym.imp.fclose",
            "mov r0, r6",
            "bl sym.imp.remove",
            "b 0xaea0",
            "ldr r1, [0x0000b08c]",
            "add r0, sp, 0x88",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "ldr r1, [0x0000b090]",
            "add r0, sp, 0x108",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "mov r0, r5",
            "bl sym.imp.fclose",
            "ldr r0, [0x0000b094]",
            "add r0, pc, r0",
            "bl sym.imp.remove",
            "add r0, sp, 0x88",
            "bl sym.imp.system",
            "add r0, sp, 0x108",
            "bl sym.imp.system",
            "ldr r0, [0x0000b098]",
            "add r0, pc, r0",
            "bl sym.imp.system",
            "ldr r0, [0x0000b09c]",
            "add r0, pc, r0",
            "b 0xaf00",
            "sub r6, r5, 0x104",
            "movw r3, 0x102",
            "cmp r5, r3",
            "cmpne r6, 1",
            "bhi 0xaf0c",
            "ldr r0, [0x0000b0a0]",
            "add r0, pc, r0",
            "bl sym.imp.system",
            "ldr r0, [0x0000b0a4]",
            "ldr r1, [0x0000b0a8]",
            "add r0, pc, r0",
            "add r1, pc, r1",
            "bl sym.imp.fopen",
            "subs r5, r0, 0",
            "beq 0xb03c",
            "add r0, sp, 0x48",
            "mov r1, 4",
            "mov r2, r5",
            "bl sym.imp.fgets",
            "cmp r4, 1",
            "bhi 0xae84",
            "ldrb r3, [sp, 0x48]",
            "cmp r3, 0x30",
            "beq 0xae98",
            "ldr r1, [0x0000b0ac]",
            "add r0, sp, 0x88",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "ldr r1, [0x0000b0b0]",
            "add r0, sp, 0x108",
            "add r1, pc, r1",
            "b 0xaec4",
            "cmp r4, 2",
            "bne 0xaec8",
            "ldrb r3, [sp, 0x48]",
            "cmp r3, 0x31",
            "bne 0xaea8",
            "mov r0, r5",
            "bl sym.imp.fclose",
            "mov r0, 3",
            "b 0xb040",
            "ldr r1, [0x0000b0b4]",
            "add r0, sp, 0x88",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "ldr r1, [0x0000b0b8]",
            "add r0, sp, 0x108",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "mov r0, r5",
            "bl sym.imp.fclose",
            "ldr r0, [0x0000b0bc]",
            "add r0, pc, r0",
            "bl sym.imp.remove",
            "add r0, sp, 0x88",
            "bl sym.imp.system",
            "add r0, sp, 0x108",
            "bl sym.imp.system",
            "ldr r0, [0x0000b0c0]",
            "add r0, pc, r0",
            "bl sym.imp.system",
            "ldr r0, [0x0000b0c4]",
            "add r0, pc, r0",
            "bl sym.imp.system",
            "mov r0, 0",
            "b 0xb040",
            "movw r3, 0x1ff",
            "cmp r5, r3",
            "movne r0, 1",
            "bne 0xb040",
            "cmp r4, 1",
            "bhi 0xafac",
            "ldr r1, [0x0000b0c8]",
            "add r8, sp, 8",
            "mov r0, r8",
            "add r7, sp, 0x48",
            "add r1, pc, r1",
            "add r5, sp, 0x88",
            "bl sym.imp.strcpy",
            "ldr r1, [0x0000b0cc]",
            "mov r0, r7",
            "add r4, sp, 0x108",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "ldr r1, [0x0000b0d0]",
            "mov r0, r5",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "ldr r1, [0x0000b0d4]",
            "mov r0, r4",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "mov r0, r8",
            "bl sym.imp.system",
            "mov r0, r7",
            "bl sym.imp.system",
            "mov r0, r5",
            "bl sym.imp.system",
            "mov r0, r4",
            "bl sym.imp.system",
            "ldr r0, [0x0000b0d8]",
            "add r0, pc, r0",
            "bl sym.imp.system",
            "ldr r0, [0x0000b0dc]",
            "add r0, pc, r0",
            "b 0xaf00",
            "cmp r4, 2",
            "bne 0xb03c",
            "ldr r1, [0x0000b0e0]",
            "add r8, sp, 8",
            "mov r0, r8",
            "add r7, sp, 0x48",
            "add r1, pc, r1",
            "add r5, sp, 0x88",
            "bl sym.imp.strcpy",
            "ldr r1, [0x0000b0e4]",
            "mov r0, r7",
            "add r4, sp, 0x108",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "ldr r1, [0x0000b0e8]",
            "mov r0, r5",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "ldr r1, [0x0000b0ec]",
            "mov r0, r4",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "mov r0, r8",
            "bl sym.imp.system",
            "mov r0, r7",
            "bl sym.imp.system",
            "mov r0, r5",
            "bl sym.imp.system",
            "mov r0, r4",
            "bl sym.imp.system",
            "ldr r0, [0x0000b0f0]",
            "add r0, pc, r0",
            "bl sym.imp.system",
            "ldr r0, [0x0000b0f4]",
            "add r0, pc, r0",
            "b 0xaf00",
            "mov r0, 0x10",
            "add sp, sp, 0x188",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "sym.zyNetCtrl_parseWIFIChannelSyncData": {
        "function_address": "0x00016f04",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "subs r5, r0, 0",
            "sub sp, sp, 0x3bc",
            "moveq r0, 0x10",
            "ldr r7, [sp, 0x3e0]",
            "beq 0x1717c",
            "ldr sb, [0x00017184]",
            "mov r4, 0",
            "str r4, [sp, 0x38]",
            "mov r6, r2",
            "ldr sl, [0x00017188]",
            "mov r1, r4",
            "ldr fp, [0x0001718c]",
            "mov r2, 0x7c",
            "add sb, pc, sb",
            "add r0, sp, 0x3c",
            "add sl, pc, sl",
            "mov r8, r3",
            "add fp, pc, fp",
            "bl sym.imp.memset",
            "add ip, sp, 0x38",
            "mov r1, r8",
            "ldr r8, [0x00017190]",
            "mov r2, r6",
            "mov r0, ip",
            "add r8, pc, r8",
            "bl sym.imp.memcpy",
            "ldr r1, [0x00017194]",
            "add r3, sp, 0x3b8",
            "add r6, r3, r6",
            "add r1, pc, r1",
            "strb r4, [r6, -0x380]",
            "bl sym.imp.strtok",
            "ldr r3, [0x00017198]",
            "mov r4, r0",
            "add r3, pc, r3",
            "str r3, [sp, 0x20]",
            "ldr r3, [0x0001719c]",
            "add r3, pc, r3",
            "str r3, [sp, 0x24]",
            "cmp r4, 0",
            "mov r1, 0",
            "beq 0x17178",
            "str r1, [sp, 0x30]",
            "mov r2, 0xfc",
            "str r1, [sp, 0x34]",
            "add r0, sp, 0xbc",
            "str r1, [sp, 0x2c]",
            "add r6, sp, 0x30",
            "str r1, [sp, 0xb8]",
            "bl sym.imp.memset",
            "ldr r1, [sp, 0x20]",
            "mov r0, r4",
            "mov r2, 4",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "bne 0x17008",
            "ldr r1, [0x000171a0]",
            "mov r0, r6",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "ldr r1, [0x000171a4]",
            "mov r0, r4",
            "add r1, pc, r1",
            "b 0x17068",
            "ldr r1, [sp, 0x24]",
            "mov r0, r4",
            "mov r2, 3",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "bne 0x17038",
            "mov r1, sl",
            "mov r0, r6",
            "bl sym.imp.strcpy",
            "mov r0, r4",
            "mov r1, fp",
            "b 0x17068",
            "ldr r1, [0x000171a8]",
            "mov r0, r4",
            "mov r2, 4",
            "add r1, pc, r1",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "bne 0x17070",
            "mov r1, r8",
            "mov r0, r6",
            "bl sym.imp.strcpy",
            "mov r0, r4",
            "mov r1, sb",
            "add r2, sp, 0x2c",
            "bl sym.imp.sscanf",
            "ldr r1, [0x000171ac]",
            "mov r0, r6",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "subs r3, r0, 0",
            "bne 0x17120",
            "ldr r1, [0x000171b0]",
            "add r4, sp, 0xb8",
            "ldr r2, [sp, 0x2c]",
            "mov r0, r4",
            "add r1, pc, r1",
            "str r3, [sp, 0x1c]",
            "bl sym.imp.sprintf",
            "ldr r3, [sp, 0x1c]",
            "mov r2, 0x1fc",
            "add r0, sp, 0x1bc",
            "str r3, [sp, 0x1b8]",
            "mov r1, r3",
            "bl sym.imp.memset",
            "ldrb r2, [r5, 1]",
            "add ip, sp, 0x1b8",
            "ldrb r3, [r5]",
            "mov r0, ip",
            "str r2, [sp]",
            "ldrb r2, [r5, 2]",
            "ldr r1, [0x000171b4]",
            "str r2, [sp, 4]",
            "ldrb r2, [r5, 3]",
            "add r1, pc, r1",
            "str r2, [sp, 8]",
            "ldrb r2, [r5, 4]",
            "str r2, [sp, 0xc]",
            "ldrb r2, [r5, 5]",
            "str ip, [sp, 0x1c]",
            "str r2, [sp, 0x10]",
            "ldr r2, [sp, 0x2c]",
            "bl sym.imp.sprintf",
            "ldr ip, [sp, 0x1c]",
            "mov r0, ip",
            "bl loc.imp.Outputlog",
            "mov r0, r4",
            "bl sym.imp.system",
            "mov r0, r6",
            "bl fcn.000090e8",
            "ldrb r3, [r7]",
            "cmp r3, 0",
            "beq 0x17148",
            "ldr r1, [0x000171b8]",
            "mov r0, r7",
            "ldr r3, [0x000171bc]",
            "mov r2, r7",
            "add r1, pc, r1",
            "add r3, pc, r3",
            "bl sym.imp.sprintf",
            "ldr r1, [0x000171c0]",
            "mov r2, r7",
            "mov r3, r6",
            "mov r0, r7",
            "add r1, pc, r1",
            "bl sym.imp.sprintf",
            "ldr r1, [0x000171c4]",
            "mov r0, 0",
            "add r1, pc, r1",
            "bl sym.imp.strtok",
            "mov r4, r0",
            "b 0x16fa4",
            "mov r0, r4",
            "add sp, sp, 0x3bc",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.000090e8": {
        "function_address": "0x000090e8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x3e4]!"
        ]
    },
    "sym.zyNetCtrl_WPS_checkAPautoconfigFlag": {
        "function_address": "0x00022628",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "ldr r4, [0x00022840]",
            "ldr r3, [0x00022844]",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "ldr r2, [r3]",
            "cmp r2, 1",
            "beq 0x22650",
            "mov r0, 0x10",
            "pop {r4, r5, r6, pc}",
            "mov r0, 0",
            "mov r6, r3",
            "bl sym.imp.time",
            "ldr r3, [0x00022848]",
            "ldr r2, [0x0002284c]",
            "ldr r5, [r4, r3]",
            "ldr r2, [r4, r2]",
            "ldr r3, [r5]",
            "ldr r2, [r2]",
            "rsb r0, r3, r0",
            "cmp r0, r2",
            "blt 0x22648",
            "mov r0, 0",
            "bl sym.imp.time",
            "ldr r3, [0x00022850]",
            "str r0, [r5]",
            "mov r5, 0",
            "ldr r3, [r4, r3]",
            "ldr r4, [r3]",
            "cmp r4, 0",
            "beq 0x2282c",
            "ldr r3, [r4, 0xc]",
            "cmp r3, 2",
            "bne 0x226c4",
            "add r0, r4, 4",
            "mov r2, 0",
            "mov r1, r0",
            "add r5, r5, 1",
            "bl fcn.000095ec",
            "ldr r3, [r4, 0x14]",
            "cmp r3, 2",
            "bne 0x226e4",
            "add r0, r4, 4",
            "mov r2, 1",
            "mov r1, r0",
            "add r5, r5, 1",
            "bl fcn.000095ec",
            "ldr r3, [r4, 0x1c]",
            "cmp r3, 2",
            "bne 0x22704",
            "add r0, r4, 4",
            "mov r2, 0x20",
            "mov r1, r0",
            "add r5, r5, 1",
            "bl fcn.000095ec",
            "ldr r3, [r4, 0x24]",
            "cmp r3, 2",
            "bne 0x22724",
            "add r0, r4, 4",
            "mov r2, 0x21",
            "mov r1, r0",
            "add r5, r5, 1",
            "bl fcn.000095ec",
            "ldr r3, [r4, 0x34]",
            "cmp r3, 2",
            "bne 0x22744",
            "add r0, r4, 4",
            "mov r2, 0xc0",
            "mov r1, r0",
            "add r5, r5, 1",
            "bl fcn.000095ec",
            "ldr r3, [r4, 0x2c]",
            "cmp r3, 2",
            "bne 0x22764",
            "add r0, r4, 4",
            "mov r2, 0xe0",
            "mov r1, r0",
            "add r5, r5, 1",
            "bl fcn.000095ec",
            "ldr r3, [r4, 0x44]",
            "cmp r3, 2",
            "bne 0x22784",
            "add r0, r4, 4",
            "mov r2, 0xc1",
            "mov r1, r0",
            "add r5, r5, 1",
            "bl fcn.000095ec",
            "ldr r3, [r4, 0x3c]",
            "cmp r3, 2",
            "bne 0x227a4",
            "add r0, r4, 4",
            "mov r2, 0xe1",
            "mov r1, r0",
            "add r5, r5, 1",
            "bl fcn.000095ec",
            "ldr r3, [r4, 0x54]",
            "cmp r3, 2",
            "bne 0x227c4",
            "add r0, r4, 4",
            "mov r2, 0xc9",
            "mov r1, r0",
            "add r5, r5, 1",
            "bl fcn.000095ec",
            "ldr r3, [r4, 0x4c]",
            "cmp r3, 2",
            "bne 0x227e4",
            "add r0, r4, 4",
            "mov r2, 0xe9",
            "mov r1, r0",
            "add r5, r5, 1",
            "bl fcn.000095ec",
            "ldr r3, [r4, 0x5c]",
            "cmp r3, 2",
            "bne 0x22804",
            "add r0, r4, 4",
            "mov r2, 0x40",
            "mov r1, r0",
            "add r5, r5, 1",
            "bl fcn.000095ec",
            "ldr r3, [r4, 0x64]",
            "cmp r3, 2",
            "bne 0x22824",
            "add r0, r4, 4",
            "mov r2, 0x41",
            "mov r1, r0",
            "add r5, r5, 1",
            "bl fcn.000095ec",
            "ldr r4, [r4]",
            "b 0x2269c",
            "cmp r5, 0",
            "streq r5, [r6]",
            "moveq r0, r5",
            "movne r0, r4",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.000095ec": {
        "function_address": "0x000095ec",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x8c]!"
        ]
    },
    "sym.wps_build_dev_password_id": {
        "function_address": "0x000333fc",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r4, r0",
            "mov r5, r1",
            "movw r1, 0x1012",
            "bl fcn.000331d0",
            "mov r0, r4",
            "mov r1, 2",
            "bl fcn.000331d0",
            "mov r0, r4",
            "mov r1, r5",
            "bl fcn.000331d0",
            "mov r0, 0",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.wps_build_ap_channel": {
        "function_address": "0x00033984",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r4, r0",
            "mov r5, r1",
            "movw r1, 0x1001",
            "bl fcn.000331d0",
            "mov r0, r4",
            "mov r1, 2",
            "bl fcn.000331d0",
            "mov r0, r4",
            "mov r1, r5",
            "bl fcn.000331d0",
            "mov r0, 0",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.wps_build_public_key": {
        "function_address": "0x00033230",
        "instructions": [
            "push {r0, r1, r4, r5, r6, lr}",
            "mov r4, r0",
            "ldr r0, [r0, 0xd8]",
            "mov r6, 0",
            "mov r5, r1",
            "bl fcn.00008f74",
            "ldr r0, [r4, 0x298]",
            "str r6, [r4, 0xd8]",
            "bl fcn.000090f4",
            "add r1, sp, 4",
            "add r0, r4, 0xd8",
            "bl fcn.00008f08",
            "str r0, [r4, 0x298]",
            "mov r1, 0xc0",
            "ldr r0, [sp, 4]",
            "bl fcn.000089bc",
            "ldr r3, [r4, 0x298]",
            "str r0, [sp, 4]",
            "cmp r3, r6",
            "beq 0x33294",
            "ldr r3, [r4, 0xd8]",
            "cmp r3, r6",
            "beq 0x33294",
            "cmp r0, r6",
            "bne 0x332a0",
            "bl fcn.00008f74",
            "mvn r5, 0",
            "b 0x33304",
            "mov r0, r5",
            "movw r1, 0x1032",
            "bl fcn.000331d0",
            "ldr r3, [sp, 4]",
            "mov r0, r5",
            "ldrh r1, [r3, 4]",
            "bl fcn.000331d0",
            "ldr r3, [sp, 4]",
            "mov r0, r5",
            "ldr r1, [r3, 8]",
            "ldr r2, [r3, 4]",
            "bl fcn.00033208",
            "ldr r5, [r4, 4]",
            "cmp r5, 0",
            "beq 0x332f4",
            "ldr r0, [r4, 0xe0]",
            "mov r5, r6",
            "bl fcn.00008f74",
            "ldr r3, [sp, 4]",
            "str r3, [r4, 0xe0]",
            "b 0x33304",
            "ldr r0, [r4, 0xdc]",
            "bl fcn.00008f74",
            "ldr r3, [sp, 4]",
            "str r3, [r4, 0xdc]",
            "mov r0, r5",
            "add sp, sp, 8",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.000090f4": {
        "function_address": "0x000090f4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x3dc]!"
        ]
    },
    "fcn.00008f08": {
        "function_address": "0x00008f08",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x524]!"
        ]
    },
    "fcn.000089bc": {
        "function_address": "0x000089bc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x8ac]!"
        ]
    },
    "sym.wps_build_serial_number": {
        "function_address": "0x000311ec",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r5, r0",
            "mov r4, r1",
            "mov r0, r1",
            "movw r1, 0x1042",
            "bl fcn.0003100c",
            "ldr r0, [r5, 0x18]",
            "cmp r0, 0",
            "beq 0x3121c",
            "bl sym.imp.strlen",
            "subs r6, r0, 0",
            "bne 0x31238",
            "mov r0, r4",
            "mov r1, 1",
            "bl fcn.0003100c",
            "mov r0, r4",
            "mov r1, 0x20",
            "bl fcn.00030ff4",
            "b 0x31254",
            "mov r0, r4",
            "uxth r1, r6",
            "bl fcn.0003100c",
            "ldr r1, [r5, 0x18]",
            "mov r0, r4",
            "mov r2, r6",
            "bl fcn.0003102c",
            "mov r0, 0",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.zyNetCtrl_matchDeviceInterface": {
        "function_address": "0x000132e4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x54",
            "ldr r4, [0x00013e84]",
            "ldr r3, [0x00013e88]",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "ldr r2, [r3]",
            "str r3, [sp, 0x44]",
            "ldr r3, [0x00013e8c]",
            "cmp r2, 0",
            "ldr fp, [r4, r3]",
            "bgt 0x1333c",
            "ldr r3, [fp]",
            "cmp r3, 0",
            "ldr r3, [0x00013e90]",
            "movle r6, 0",
            "ldr sb, [r4, r3]",
            "ble 0x13590",
            "ldr r5, [sb]",
            "mov r7, 0",
            "mov r6, r7",
            "b 0x134e8",
            "ldr r3, [0x00013e94]",
            "mov sb, 0",
            "ldr r3, [r4, r3]",
            "ldr r5, [r3]",
            "str sb, [sp, 0x30]",
            "ldr sb, [sp, 0x44]",
            "ldr r3, [sb]",
            "ldr sb, [sp, 0x30]",
            "cmp sb, r3",
            "bge 0x13314",
            "ldr r8, [fp]",
            "cmp r8, 0",
            "beq 0x13390",
            "ldr r3, [0x00013e90]",
            "ldr r3, [r4, r3]",
            "ldr r7, [r3]",
            "cmp r7, 0",
            "movne r6, r7",
            "movne sb, 0",
            "addne sl, r5, 4",
            "bne 0x13498",
            "mov r0, 1",
            "mov r1, 0x48",
            "bl sym.imp.calloc",
            "subs r6, r0, 0",
            "bne 0x133ac",
            "mov r0, 0",
            "b 0x13e7c",
            "ldr r3, [0x00013e90]",
            "add r0, r6, 4",
            "add r1, r5, 4",
            "mov r7, 0",
            "ldr r3, [r4, r3]",
            "str r6, [r3]",
            "bl sym.imp.strcpy",
            "mov r2, r5",
            "mov r3, r6",
            "ldrb r1, [r2, 0x14]",
            "add r7, r7, 1",
            "cmp r7, 6",
            "add r2, r2, 1",
            "strb r1, [r3, 0x14]",
            "add r3, r3, 1",
            "bne 0x133d0",
            "ldr r3, [r5, 0x1c]",
            "str r3, [r6, 0x1c]",
            "ldr r3, [r5, 0x20]",
            "str r3, [r6, 0x20]",
            "ldr r3, [r5, 0x24]",
            "str r3, [r6, 0x24]",
            "ldrb r3, [r5, 0x28]",
            "strb r3, [r6, 0x28]",
            "ldr r3, [r5, 0x30]",
            "str r3, [r6, 0x30]",
            "ldrh r3, [r5, 0x40]",
            "strh r3, [r6, 0x40]",
            "cmp r3, 0",
            "bne 0x13434",
            "ldr r3, [fp]",
            "add r3, r3, 1",
            "str r3, [fp]",
            "b 0x134b0",
            "ldrh r0, [r5, 0x40]",
            "mov r1, r7",
            "bl sym.imp.calloc",
            "str r0, [r6, 0x44]",
            "cmp r0, 0",
            "beq 0x133a4",
            "mov r3, 0",
            "ldrh r2, [r5, 0x40]",
            "mul r2, r7, r2",
            "cmp r3, r2",
            "bhs 0x13424",
            "ldr r2, [r5, 0x44]",
            "ldrb r1, [r2, r3]",
            "ldr r2, [r6, 0x44]",
            "strb r1, [r2, r3]",
            "add r3, r3, 1",
            "b 0x13450",
            "add r0, r6, 4",
            "mov r1, sl",
            "str r0, [sp, 0x28]",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x13a60",
            "ldr r6, [r6]",
            "add sb, sb, 1",
            "cmp sb, r8",
            "blt 0x13478",
            "b 0x13974",
            "ldr sb, [sp, 0x2c]",
            "cmp sb, 0",
            "bne 0x13da8",
            "ldr sb, [sp, 0x30]",
            "ldr r5, [r5]",
            "add sb, sb, 1",
            "b 0x1334c",
            "cmp r8, 0",
            "beq 0x13554",
            "cmp r6, 0",
            "add r6, r6, 1",
            "streq r5, [sp, 0x48]",
            "ldrne r1, [sp, 0x4c]",
            "str r5, [sp, 0x4c]",
            "strne r5, [r1]",
            "ldr r5, [r5]",
            "add r7, r7, 1",
            "ldr r3, [fp]",
            "cmp r7, r3",
            "bge 0x13590",
            "ldr r3, [0x00013e94]",
            "mov r8, 0",
            "ldr r0, [sp, 0x44]",
            "mov sl, r8",
            "ldr r3, [r4, r3]",
            "add r2, r5, 4",
            "ldr ip, [r0]",
            "ldr r3, [r3]",
            "cmp sl, ip",
            "bge 0x134c0",
            "str r2, [sp, 0x1c]",
            "mov r0, r2",
            "str r3, [sp, 0x24]",
            "add r1, r3, 4",
            "str ip, [sp, 0x20]",
            "bl sym.imp.strcmp",
            "ldr r3, [sp, 0x24]",
            "cmp r0, 0",
            "ldr r2, [sp, 0x1c]",
            "addeq r8, r8, 1",
            "ldr ip, [sp, 0x20]",
            "add sl, sl, 1",
            "ldr r3, [r3]",
            "b 0x13514",
            "ldr r8, [r5]",
            "mov r0, r5",
            "bl fcn.00008854",
            "ldr r0, [r5, 0x2c]",
            "cmp r0, 0",
            "beq 0x13570",
            "bl sym.imp.free",
            "ldr r0, [r5, 0x44]",
            "cmp r0, 0",
            "beq 0x13580",
            "bl sym.imp.free",
            "mov r0, r5",
            "mov r5, r8",
            "bl sym.imp.free",
            "b 0x134e4",
            "ldr r3, [0x00013e98]",
            "ldr r2, [sp, 0x48]",
            "str r6, [fp]",
            "str r2, [sb]",
            "ldr r6, [r4, r3]",
            "ldrb r3, [r6]",
            "cmp r3, 4",
            "bls 0x13600",
            "mov r0, 0",
            "mov r5, 0x30c",
            "bl sym.imp.time",
            "ldr r3, [0x00013e9c]",
            "mov r1, r0",
            "ldr r0, [0x00013ea0]",
            "mov r2, 5",
            "add r3, pc, r3",
            "str r5, [sp]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r0, [0x00013ea4]",
            "mov r1, r5",
            "ldr r2, [fp]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00013ea8]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r5, [sb]",
            "mov r7, 0",
            "ldr sb, [0x00013eac]",
            "add sb, pc, sb",
            "str sb, [sp, 0x2c]",
            "ldr sb, [0x00013eb0]",
            "add sb, pc, sb",
            "str sb, [sp, 0x30]",
            "ldr r3, [fp]",
            "cmp r7, r3",
            "bge 0x1396c",
            "ldrb r3, [r6]",
            "cmp r3, 4",
            "bls 0x13680",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x312",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 5",
            "ldr r3, [0x00013eb4]",
            "ldr r0, [sp, 0x2c]",
            "add r3, pc, r3",
            "bl sym.imp.printf",
            "ldr r0, [0x00013eb8]",
            "add r1, r5, 4",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00013ea8]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 4",
            "bls 0x136f8",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x313",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 5",
            "ldr r0, [0x00013ebc]",
            "ldr r3, [0x00013ec0]",
            "add r0, pc, r0",
            "add r3, pc, r3",
            "bl sym.imp.printf",
            "ldrb r0, [r5, 0x17]",
            "ldrb r3, [r5, 0x16]",
            "ldrb r1, [r5, 0x14]",
            "ldrb r2, [r5, 0x15]",
            "str r0, [sp]",
            "ldrb r0, [r5, 0x18]",
            "str r0, [sp, 4]",
            "ldrb r0, [r5, 0x19]",
            "str r0, [sp, 8]",
            "ldr r0, [0x00013ec4]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00013ea8]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 4",
            "bls 0x13750",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0x314",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 5",
            "ldr r0, [0x00013ec8]",
            "ldr r3, [0x00013ecc]",
            "add r0, pc, r0",
            "add r3, pc, r3",
            "bl sym.imp.printf",
            "ldr r0, [0x00013ed0]",
            "ldr r1, [r5, 0x1c]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00013ea8]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 4",
            "bls 0x137a8",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x315",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 5",
            "ldr r0, [0x00013ed4]",
            "ldr r3, [0x00013ed8]",
            "add r0, pc, r0",
            "add r3, pc, r3",
            "bl sym.imp.printf",
            "ldr r0, [0x00013edc]",
            "ldr r1, [r5, 0x20]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00013ea8]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 4",
            "bls 0x13800",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x316",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 5",
            "ldr r0, [0x00013ee0]",
            "ldr r3, [0x00013ee4]",
            "add r0, pc, r0",
            "add r3, pc, r3",
            "bl sym.imp.printf",
            "ldr r0, [0x00013ee8]",
            "ldr r1, [r5, 0x24]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00013ea8]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 4",
            "bls 0x13858",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x319",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 5",
            "ldr r0, [0x00013eec]",
            "ldr r3, [0x00013ef0]",
            "add r0, pc, r0",
            "add r3, pc, r3",
            "bl sym.imp.printf",
            "ldr r0, [0x00013ef4]",
            "ldr r1, [r5, 0x30]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00013ea8]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 4",
            "bls 0x138b0",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0x31c",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 5",
            "ldr r0, [0x00013ef8]",
            "ldr r3, [0x00013efc]",
            "add r0, pc, r0",
            "add r3, pc, r3",
            "bl sym.imp.printf",
            "ldr r0, [0x00013f00]",
            "ldrh r1, [r5, 0x40]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00013ea8]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrh r3, [r5, 0x40]",
            "cmp r3, 0",
            "beq 0x13960",
            "ldr sl, [0x00013f04]",
            "mov sb, 0",
            "ldr r0, [0x00013f08]",
            "mov r8, sb",
            "add sl, pc, sl",
            "add r0, pc, r0",
            "str r0, [sp, 0x28]",
            "ldrh r3, [r5, 0x40]",
            "cmp r8, r3",
            "bge 0x13960",
            "ldrb r3, [r6]",
            "cmp r3, 4",
            "bls 0x13954",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x323",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 5",
            "ldr r0, [sp, 0x30]",
            "mov r3, sl",
            "bl sym.imp.printf",
            "ldr r0, [r5, 0x44]",
            "ldrb r1, [r0, sb]!",
            "ldrb lr, [r0, 3]",
            "ldrb r3, [r0, 2]",
            "ldrb r2, [r0, 1]",
            "str lr, [sp]",
            "ldrb lr, [r0, 4]",
            "str lr, [sp, 4]",
            "ldrb r0, [r0, 5]",
            "str r0, [sp, 8]",
            "ldr r0, [sp, 0x28]",
            "bl sym.imp.printf",
            "ldr r3, [0x00013ea8]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "add sb, sb, 6",
            "add r8, r8, 1",
            "b 0x138d8",
            "ldr r5, [r5]",
            "add r7, r7, 1",
            "b 0x13620",
            "mov r0, 1",
            "b 0x13e7c",
            "mov r0, 1",
            "mov r1, 0x48",
            "bl sym.imp.calloc",
            "subs r6, r0, 0",
            "beq 0x133a4",
            "mov r3, 1",
            "cmp r3, r8",
            "ldrlt r7, [r7]",
            "addlt r3, r3, 1",
            "blt 0x1398c",
            "str r6, [r7]",
            "add r0, r6, 4",
            "add r1, r5, 4",
            "mov r7, 0",
            "bl sym.imp.strcpy",
            "mov r2, r5",
            "mov r3, r6",
            "ldrb r1, [r2, 0x14]",
            "add r7, r7, 1",
            "cmp r7, 6",
            "add r2, r2, 1",
            "strb r1, [r3, 0x14]",
            "add r3, r3, 1",
            "bne 0x139b8",
            "ldr r3, [r5, 0x1c]",
            "str r3, [r6, 0x1c]",
            "ldr r3, [r5, 0x20]",
            "str r3, [r6, 0x20]",
            "ldr r3, [r5, 0x24]",
            "str r3, [r6, 0x24]",
            "ldr r3, [r5, 0x30]",
            "str r3, [r6, 0x30]",
            "ldrh r3, [r5, 0x40]",
            "strh r3, [r6, 0x40]",
            "cmp r3, 0",
            "bne 0x13a1c",
            "ldr r3, [fp]",
            "mov r0, r5",
            "add r3, r3, 1",
            "str r3, [fp]",
            "bl fcn.000089ec",
            "b 0x134b0",
            "ldrh r0, [r5, 0x40]",
            "mov r1, r7",
            "bl sym.imp.calloc",
            "str r0, [r6, 0x44]",
            "cmp r0, 0",
            "beq 0x133a4",
            "mov r3, 0",
            "ldrh r2, [r5, 0x40]",
            "mul r2, r7, r2",
            "cmp r3, r2",
            "bhs 0x13a04",
            "ldr r2, [r5, 0x44]",
            "ldrb r1, [r2, r3]",
            "ldr r2, [r6, 0x44]",
            "strb r1, [r2, r3]",
            "add r3, r3, 1",
            "b 0x13a38",
            "ldr r2, [r6, 0x14]",
            "ldr r3, [r5, 0x14]",
            "cmp r2, r3",
            "bne 0x13a80",
            "ldrh r2, [r6, 0x18]",
            "ldrh r3, [r5, 0x18]",
            "cmp r2, r3",
            "beq 0x13aac",
            "ldr r0, [sp, 0x28]",
            "add r8, r6, 0x14",
            "ldr r2, [r6, 0x24]",
            "add r7, r5, 0x14",
            "mov r3, r7",
            "mov r1, r8",
            "bl fcn.0000937c",
            "ldr r3, [r5, 0x14]",
            "str r3, [r6, 0x14]",
            "ldrh r3, [r5, 0x18]",
            "strh r3, [r6, 0x18]",
            "ldr r3, [r6, 0x1c]",
            "ldr r2, [r5, 0x1c]",
            "cmp r3, r2",
            "beq 0x13ae0",
            "str r2, [sp]",
            "add r1, r5, 0x14",
            "ldr r0, [sp, 0x28]",
            "ldr r2, [r5, 0x24]",
            "bl fcn.000086f8",
            "ldr r3, [r5, 0x1c]",
            "str r3, [r6, 0x1c]",
            "ldr r3, [r5, 0x20]",
            "str r3, [r6, 0x20]",
            "ldr r3, [r5, 0x24]",
            "ldr r2, [r6, 0x24]",
            "cmp r2, r3",
            "strne r3, [r6, 0x24]",
            "ldr r3, [r6, 0x30]",
            "ldr r2, [r5, 0x30]",
            "cmp r3, r2",
            "beq 0x13b1c",
            "str r2, [sp]",
            "add r1, r5, 0x14",
            "ldr r0, [sp, 0x28]",
            "ldr r2, [r5, 0x24]",
            "bl fcn.00008de8",
            "ldr r3, [r5, 0x30]",
            "str r3, [r6, 0x30]",
            "mov r7, 1",
            "mov r8, 0",
            "str r8, [sp, 0x2c]",
            "ldrh r3, [r5, 0x40]",
            "cmp r8, r3",
            "movge r7, 1",
            "movge r8, 0",
            "bge 0x13cfc",
            "add r3, r7, 3",
            "mov r1, 6",
            "str r3, [sp, 0x38]",
            "add ip, r7, 1",
            "ldrh r3, [r6, 0x40]",
            "add r2, r7, 2",
            "mul lr, r1, r8",
            "mul r3, r1, r3",
            "str r2, [sp, 0x3c]",
            "add sb, r7, 4",
            "str r3, [sp, 0x40]",
            "mov r3, 0",
            "str sb, [sp, 0x34]",
            "mov r0, r3",
            "ldr r1, [sp, 0x40]",
            "cmp r3, r1",
            "beq 0x13c00",
            "ldr r2, [r5, 0x44]",
            "ldr r1, [r6, 0x44]",
            "ldrb sl, [r2, lr]",
            "ldrb sb, [r1, r3]",
            "cmp sl, sb",
            "bne 0x13bf8",
            "add r1, r1, r3",
            "ldrb sl, [r2, r7]",
            "ldrb sb, [r1, 1]",
            "cmp sl, sb",
            "bne 0x13bf8",
            "ldrb sl, [r2, ip]",
            "ldrb sb, [r1, 2]",
            "cmp sl, sb",
            "bne 0x13bf8",
            "ldr sb, [sp, 0x3c]",
            "ldrb sl, [r2, sb]",
            "ldrb sb, [r1, 3]",
            "cmp sl, sb",
            "bne 0x13bf8",
            "ldr sb, [sp, 0x38]",
            "ldrb sl, [r2, sb]",
            "ldrb sb, [r1, 4]",
            "cmp sl, sb",
            "bne 0x13bf8",
            "ldr sb, [sp, 0x34]",
            "ldrb r1, [r1, 5]",
            "ldrb r2, [r2, sb]",
            "cmp r2, r1",
            "addeq r0, r0, 1",
            "add r3, r3, 6",
            "b 0x13b74",
            "cmp r0, 0",
            "bne 0x13c60",
            "ldr r2, [r5, 0x44]",
            "ldr sb, [sp, 0x2c]",
            "ldrb r1, [r2, r7]",
            "ldrb r3, [r2, lr]",
            "add sb, sb, 1",
            "str r1, [sp]",
            "ldr r0, [sp, 0x3c]",
            "ldrb r1, [r2, ip]",
            "str sb, [sp, 0x2c]",
            "str r1, [sp, 4]",
            "ldr sb, [sp, 0x38]",
            "ldrb r1, [r2, r0]",
            "ldr r0, [sp, 0x34]",
            "str r1, [sp, 8]",
            "ldrb r1, [r2, sb]",
            "str r1, [sp, 0xc]",
            "add r1, r5, 0x14",
            "ldrb r2, [r2, r0]",
            "ldr r0, [sp, 0x28]",
            "str r2, [sp, 0x10]",
            "ldr r2, [r5, 0x24]",
            "bl fcn.00008758",
            "add r8, r8, 1",
            "add r7, r7, 6",
            "b 0x13b28",
            "ldr r2, [r6, 0x44]",
            "ldr r1, [r5, 0x44]",
            "ldrb sl, [r2, lr]",
            "ldrb sb, [r1, r3]",
            "cmp sl, sb",
            "beq 0x13d44",
            "add r3, r3, 6",
            "ldr r1, [sp, 0x40]",
            "cmp r3, r1",
            "bne 0x13c6c",
            "cmp r0, 0",
            "bne 0x13cf4",
            "ldr r2, [r6, 0x44]",
            "ldr sb, [sp, 0x2c]",
            "ldrb r1, [r2, r7]",
            "ldrb r3, [r2, lr]",
            "add sb, sb, 1",
            "str r1, [sp]",
            "ldr r0, [sp, 0x34]",
            "ldrb r1, [r2, ip]",
            "str sb, [sp, 0x2c]",
            "str r1, [sp, 4]",
            "ldr sb, [sp, 0x3c]",
            "ldrb r1, [r2, r0]",
            "ldr r0, [sp, 0x38]",
            "str r1, [sp, 8]",
            "ldrb r1, [r2, sb]",
            "str r1, [sp, 0xc]",
            "add r1, r6, 0x14",
            "ldrb r2, [r2, r0]",
            "ldr r0, [sp, 0x28]",
            "str r2, [sp, 0x10]",
            "ldr r2, [r6, 0x24]",
            "bl fcn.000093a0",
            "add r8, r8, 1",
            "add r7, r7, 6",
            "ldrh r3, [r6, 0x40]",
            "cmp r8, r3",
            "bge 0x134a4",
            "add r3, r7, 3",
            "mov r1, 6",
            "str r3, [sp, 0x3c]",
            "add r2, r7, 2",
            "ldrh r3, [r5, 0x40]",
            "add sb, r7, 4",
            "mul lr, r1, r8",
            "mul r3, r1, r3",
            "str r2, [sp, 0x34]",
            "add ip, r7, 1",
            "str r3, [sp, 0x40]",
            "mov r3, 0",
            "str sb, [sp, 0x38]",
            "mov r0, r3",
            "b 0x13c88",
            "add r1, r1, r3",
            "ldrb sl, [r2, r7]",
            "ldrb sb, [r1, 1]",
            "cmp sl, sb",
            "bne 0x13c84",
            "ldrb sl, [r2, ip]",
            "ldrb sb, [r1, 2]",
            "cmp sl, sb",
            "bne 0x13c84",
            "ldr sb, [sp, 0x34]",
            "ldrb sl, [r2, sb]",
            "ldrb sb, [r1, 3]",
            "cmp sl, sb",
            "bne 0x13c84",
            "ldr sb, [sp, 0x3c]",
            "ldrb sl, [r2, sb]",
            "ldrb sb, [r1, 4]",
            "cmp sl, sb",
            "bne 0x13c84",
            "ldr sb, [sp, 0x38]",
            "ldrb r1, [r1, 5]",
            "ldrb r2, [r2, sb]",
            "cmp r2, r1",
            "addeq r0, r0, 1",
            "b 0x13c84",
            "ldr r0, [r6, 0x44]",
            "cmp r0, 0",
            "beq 0x13db8",
            "bl sym.imp.free",
            "mov r0, 0",
            "mov r7, 6",
            "strh r0, [r6, 0x40]",
            "mov r0, 1",
            "ldrh r1, [r5, 0x40]",
            "mul r1, r7, r1",
            "bl sym.imp.calloc",
            "str r0, [r6, 0x44]",
            "cmp r0, 0",
            "beq 0x133a4",
            "ldrh r3, [r5, 0x40]",
            "mov r2, 0",
            "strh r3, [r6, 0x40]",
            "mov r3, 1",
            "ldrh r1, [r5, 0x40]",
            "cmp r2, r1",
            "bge 0x134b0",
            "ldr r0, [r5, 0x44]",
            "mul r1, r7, r2",
            "add r2, r2, 1",
            "ldrb ip, [r0, r1]",
            "ldr r0, [r6, 0x44]",
            "strb ip, [r0, r1]",
            "ldr r1, [r5, 0x44]",
            "ldrb r0, [r1, r3]",
            "ldr r1, [r6, 0x44]",
            "strb r0, [r1, r3]",
            "add r1, r3, 1",
            "ldr r0, [r5, 0x44]",
            "ldrb ip, [r0, r1]",
            "ldr r0, [r6, 0x44]",
            "strb ip, [r0, r1]",
            "add r1, r3, 2",
            "ldr r0, [r5, 0x44]",
            "ldrb ip, [r0, r1]",
            "ldr r0, [r6, 0x44]",
            "strb ip, [r0, r1]",
            "add r1, r3, 3",
            "ldr r0, [r5, 0x44]",
            "ldrb ip, [r0, r1]",
            "ldr r0, [r6, 0x44]",
            "strb ip, [r0, r1]",
            "add r1, r3, 4",
            "ldr r0, [r5, 0x44]",
            "add r3, r3, 6",
            "ldrb ip, [r0, r1]",
            "ldr r0, [r6, 0x44]",
            "strb ip, [r0, r1]",
            "b 0x13df0",
            "add sp, sp, 0x54",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00008854": {
        "function_address": "0x00008854",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x99c]!"
        ]
    },
    "fcn.000089ec": {
        "function_address": "0x000089ec",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x88c]!"
        ]
    },
    "fcn.0000937c": {
        "function_address": "0x0000937c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x22c]!"
        ]
    },
    "fcn.000086f8": {
        "function_address": "0x000086f8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0xa84]!"
        ]
    },
    "fcn.00008de8": {
        "function_address": "0x00008de8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x5e4]!"
        ]
    },
    "fcn.00008758": {
        "function_address": "0x00008758",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0xa44]!"
        ]
    },
    "fcn.000093a0": {
        "function_address": "0x000093a0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x214]!"
        ]
    },
    "sym.wps_build_dev_name": {
        "function_address": "0x0003133c",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r5, r0",
            "mov r4, r1",
            "mov r0, r1",
            "movw r1, 0x1011",
            "bl fcn.0003100c",
            "ldr r0, [r5, 8]",
            "cmp r0, 0",
            "beq 0x3136c",
            "bl sym.imp.strlen",
            "subs r6, r0, 0",
            "bne 0x31388",
            "mov r0, r4",
            "mov r1, 1",
            "bl fcn.0003100c",
            "mov r0, r4",
            "mov r1, 0x20",
            "bl fcn.00030ff4",
            "b 0x313a4",
            "mov r0, r4",
            "uxth r1, r6",
            "bl fcn.0003100c",
            "ldr r1, [r5, 8]",
            "mov r0, r4",
            "mov r2, r6",
            "bl fcn.0003102c",
            "mov r0, 0",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.wps_process_device_attrs": {
        "function_address": "0x00031578",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r5, r1",
            "ldr r6, [r1, 0xac]",
            "ldr r7, [r1, 0xb0]",
            "cmp r6, 0",
            "beq 0x315f4",
            "mov r4, r0",
            "ldr r0, [r0, 0xc]",
            "cmp r0, 0",
            "beq 0x315a4",
            "bl sym.imp.free",
            "mov r0, r6",
            "mov r1, r7",
            "bl fcn.00008eb4",
            "str r0, [r4, 0xc]",
            "cmp r0, 0",
            "beq 0x315f4",
            "ldr r6, [r5, 0xb4]",
            "ldr r7, [r5, 0xb8]",
            "cmp r6, 0",
            "beq 0x315f4",
            "ldr r0, [r4, 0x10]",
            "cmp r0, 0",
            "beq 0x315dc",
            "bl sym.imp.free",
            "mov r0, r6",
            "mov r1, r7",
            "bl fcn.00008eb4",
            "str r0, [r4, 0x10]",
            "cmp r0, 0",
            "bne 0x315fc",
            "mvn r0, 0",
            "pop {r3, r4, r5, r6, r7, pc}",
            "ldr r6, [r5, 0xbc]",
            "ldr r7, [r5, 0xc0]",
            "cmp r6, 0",
            "beq 0x315f4",
            "ldr r0, [r4, 0x14]",
            "cmp r0, 0",
            "beq 0x3161c",
            "bl sym.imp.free",
            "mov r0, r6",
            "mov r1, r7",
            "bl fcn.00008eb4",
            "str r0, [r4, 0x14]",
            "cmp r0, 0",
            "beq 0x315f4",
            "ldr r6, [r5, 0xc4]",
            "ldr r7, [r5, 0xc8]",
            "cmp r6, 0",
            "beq 0x315f4",
            "ldr r0, [r4, 0x18]",
            "cmp r0, 0",
            "beq 0x31654",
            "bl sym.imp.free",
            "mov r0, r6",
            "mov r1, r7",
            "bl fcn.00008eb4",
            "str r0, [r4, 0x18]",
            "cmp r0, 0",
            "beq 0x315f4",
            "ldr r3, [r5, 0x30]",
            "cmp r3, 0",
            "beq 0x315f4",
            "ldr r2, [r3]",
            "str r2, [r4, 0x1c]",
            "ldr r2, [r3, 4]",
            "str r2, [r4, 0x20]",
            "ldr r6, [r5, 0xcc]",
            "ldr r5, [r5, 0xd0]",
            "cmp r6, 0",
            "beq 0x315f4",
            "ldr r0, [r4, 8]",
            "cmp r0, 0",
            "beq 0x316a8",
            "bl sym.imp.free",
            "mov r0, r6",
            "mov r1, r5",
            "bl fcn.00008eb4",
            "str r0, [r4, 8]",
            "cmp r0, 0",
            "beq 0x315f4",
            "mov r0, 0",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.00008eb4": {
        "function_address": "0x00008eb4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x55c]!"
        ]
    },
    "sym.wps_decrypt_encr_settings": {
        "function_address": "0x0002dd18",
        "instructions": [
            "cmp r1, 0",
            "cmpne r2, 0x1f",
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r5, r1",
            "bls 0x2ddc4",
            "tst r2, 0xf",
            "bne 0x2ddc4",
            "sub r6, r2, 0x10",
            "mov r7, r0",
            "mov r0, r6",
            "bl fcn.00008ddc",
            "subs r4, r0, 0",
            "beq 0x2ddc4",
            "adds r8, r5, 0x10",
            "beq 0x2dd68",
            "mov r1, r6",
            "bl fcn.000086d4",
            "mov r1, r8",
            "mov r2, r6",
            "bl sym.imp.memcpy",
            "ldr r2, [r4, 8]",
            "mov r1, r5",
            "ldr r3, [r4, 4]",
            "add r0, r7, 0x104",
            "bl fcn.00008a04",
            "subs r5, r0, 0",
            "bne 0x2ddbc",
            "ldr r2, [r4, 4]",
            "ldr r1, [r4, 8]",
            "sub r3, r2, 1",
            "add ip, r1, r3",
            "ldrb r3, [r1, r3]",
            "cmp r3, r2",
            "bhi 0x2ddbc",
            "mov r1, ip",
            "rsb r0, r1, ip",
            "cmp r0, r3",
            "bhs 0x2ddcc",
            "ldrb r0, [r1], -1",
            "cmp r0, r3",
            "beq 0x2dda4",
            "mov r0, r4",
            "bl fcn.00008f74",
            "mov r0, 0",
            "pop {r4, r5, r6, r7, r8, pc}",
            "rsb r3, r3, r2",
            "mov r0, r4",
            "str r3, [r4, 4]",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.00008a04": {
        "function_address": "0x00008a04",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x87c]!"
        ]
    },
    "sym.zyNetCtrl_getWIFIStateSyncByband": {
        "function_address": "0x00016050",
        "instructions": [
            "push {r0, r1, r2, r4, r5, lr}",
            "mov r4, r1",
            "add r1, sp, 8",
            "mov r2, 0xff",
            "mov r5, r0",
            "str r2, [r1, -4]!",
            "bl fcn.000089c8",
            "cmp r0, 0",
            "bne 0x1608c",
            "ldr r1, [sp, 4]",
            "bics r3, r1, 2",
            "bne 0x1608c",
            "mov r0, r5",
            "mov r2, r4",
            "bl fcn.0000955c",
            "mov r0, 0",
            "add sp, sp, 0xc",
            "pop {r4, r5, pc}"
        ]
    },
    "fcn.000089c8": {
        "function_address": "0x000089c8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x8a4]!"
        ]
    },
    "fcn.0000955c": {
        "function_address": "0x0000955c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0xec]!"
        ]
    },
    "sym.hmac_sha1": {
        "function_address": "0x00031acc",
        "instructions": [
            "push {r0, r1, r2, r3, r4, lr}",
            "str r3, [sp, 8]",
            "add r3, sp, 8",
            "str r3, [sp]",
            "ldr r3, [sp, 0x18]",
            "str r2, [sp, 0xc]",
            "mov r2, 1",
            "str r3, [sp, 4]",
            "add r3, sp, 0xc",
            "bl fcn.0000949c",
            "add sp, sp, 0x14",
            "pop {pc}"
        ]
    },
    "fcn.0000949c": {
        "function_address": "0x0000949c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x16c]!"
        ]
    },
    "sym.parseWIFIChannelSyncData": {
        "function_address": "0x0001008c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x85c]!",
            "push {r0, r1, r2, r4, r5, lr}",
            "cmp r0, 0",
            "ldr r4, [0x00010154]",
            "ldr ip, [sp, 0x18]",
            "add r4, pc, r4",
            "beq 0x10148",
            "ldr lr, [0x00010158]",
            "ldr r5, [r4, lr]",
            "ldrb lr, [r5]",
            "sub lr, lr, 3",
            "cmp lr, 2",
            "bhi 0x10124",
            "ldr r3, [0x0001015c]",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x10148",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0xd97",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00010160]",
            "ldr r0, [0x00010164]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x3cc",
            "bl sym.imp.printf",
            "ldr r0, [0x00010168]",
            "ldrb r1, [r5]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0001016c]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0x10148",
            "ldr lr, [0x00010170]",
            "ldr lr, [r4, lr]",
            "ldr lr, [lr]",
            "cmp lr, 1",
            "bne 0x10148",
            "str ip, [sp, 0x18]",
            "add sp, sp, 0xc",
            "pop {r4, r5, lr}",
            "b 0x8a34",
            "mov r0, 0x10",
            "add sp, sp, 0xc",
            "pop {r4, r5, pc}"
        ]
    },
    "sym.zyNetCtrl_WPS_processWPSData": {
        "function_address": "0x000232e8",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov sl, r0",
            "ldr r6, [0x000236fc]",
            "sub sp, sp, 0x3ec",
            "ldr r3, [0x00023700]",
            "add r6, pc, r6",
            "ldr fp, [r6, r3]",
            "ldrb r3, [fp]",
            "cmp r3, 3",
            "bls 0x23360",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x7db",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00023704]",
            "ldr r0, [0x00023708]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x450",
            "add r3, r3, 9",
            "bl sym.imp.printf",
            "ldr r0, [0x0002370c]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00023710]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [sl, 0x10]",
            "mov r0, 0x3e8",
            "ldrb r3, [r3, 9]",
            "str r3, [sp, 0x1fc]",
            "bl fcn.00008ddc",
            "ldrh r3, [sl, 0xc]",
            "mov r8, r0",
            "str r3, [r0, 4]",
            "mov r3, 0",
            "ldrh r2, [sl, 0xc]",
            "cmp r3, r2",
            "bge 0x233a8",
            "ldr r2, [sl, 0x10]",
            "ldrb r1, [r2, r3]",
            "ldr r2, [r8, 8]",
            "strb r1, [r2, r3]",
            "add r3, r3, 1",
            "b 0x23384",
            "mov r0, 6",
            "mov r1, 1",
            "bl sym.imp.calloc",
            "subs r4, r0, 0",
            "bne 0x23418",
            "ldrb r3, [fp]",
            "cmp r3, 3",
            "bls 0x23520",
            "bl sym.imp.time",
            "movw r3, 0x7fe",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00023714]",
            "ldr r0, [0x00023718]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x450",
            "add r3, r3, 9",
            "bl sym.imp.printf",
            "ldr r0, [0x0002371c]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00023710]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0x23520",
            "mov r0, 6",
            "mov r1, 1",
            "bl sym.imp.calloc",
            "subs r5, r0, 0",
            "movne r3, 0",
            "bne 0x23490",
            "ldrb r3, [fp]",
            "cmp r3, 3",
            "bls 0x23488",
            "bl sym.imp.time",
            "movw r3, 0x804",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00023720]",
            "ldr r0, [0x00023724]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x450",
            "add r3, r3, 9",
            "bl sym.imp.printf",
            "ldr r0, [0x00023728]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00023710]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, r4",
            "b 0x2351c",
            "mov r2, sl",
            "ldrb r1, [r2, r3]!",
            "strb r1, [r4, r3]",
            "ldrb r2, [r2, 6]",
            "strb r2, [r5, r3]",
            "add r3, r3, 1",
            "cmp r3, 6",
            "bne 0x23490",
            "add r7, sp, 0x200",
            "mov r0, r8",
            "mov r1, r7",
            "bl fcn.00008c8c",
            "cmp r0, 0",
            "blt 0x23510",
            "ldr r3, [sp, 0x208]",
            "cmp r3, 0",
            "beq 0x23508",
            "ldr r3, [sp, 0x234]",
            "ldrb sb, [r3]",
            "ldr r3, [0x0002372c]",
            "sub sb, sb, 1",
            "ldr r3, [r6, r3]",
            "uxtb sb, sb",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x23508",
            "ldrb r2, [r3, 4]",
            "cmp r2, sb",
            "bne 0x234ec",
            "b 0x23528",
            "mov r0, r8",
            "bl fcn.00008cec",
            "mov r0, r4",
            "bl fcn.00008cec",
            "mov r0, r5",
            "bl fcn.00008cec",
            "mov r0, 0x10",
            "b 0x236f4",
            "mov r1, r5",
            "mov r2, sb",
            "mov r0, r4",
            "bl fcn.0000964c",
            "mov r0, r4",
            "mov r1, r5",
            "mov r2, sb",
            "bl fcn.00009310",
            "subs ip, r0, 0",
            "bne 0x2363c",
            "ldrb r3, [fp]",
            "cmp r3, 3",
            "bls 0x235a8",
            "bl sym.imp.time",
            "movw r3, 0x88c",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00023730]",
            "ldr r0, [0x00023734]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x450",
            "add r3, r3, 9",
            "bl sym.imp.printf",
            "ldr r0, [0x00023738]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00023710]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, r4",
            "mov r1, r5",
            "mov r2, sb",
            "bl fcn.00009208",
            "mov r3, r0",
            "mov r0, r4",
            "cmp r3, 0x10",
            "streq r3, [sp, 0x1f8]",
            "beq 0x23514",
            "mov r1, r5",
            "mov r2, sb",
            "bl fcn.00009310",
            "subs ip, r0, 0",
            "bne 0x2363c",
            "ldrb r3, [fp]",
            "cmp r3, 3",
            "bls 0x23510",
            "bl sym.imp.time",
            "movw r3, 0x898",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002373c]",
            "ldr r0, [0x00023740]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x450",
            "add r3, r3, 9",
            "bl sym.imp.printf",
            "ldr r0, [0x00023744]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00023710]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0x23510",
            "ldr r3, [0x00023748]",
            "ldr r3, [r6, r3]",
            "ldr r2, [r3]",
            "mov r6, r3",
            "cmp r2, 0",
            "bne 0x23690",
            "ldr r3, [sp, 0x1fc]",
            "add r1, sp, 0x210",
            "str ip, [sp, 0x1d8]",
            "mov r2, 0x1d8",
            "str ip, [sp, 0x1f8]",
            "mov r0, sp",
            "str r3, [sp, 0x1e0]",
            "str r8, [sp, 0x1dc]",
            "str r4, [sp, 0x1e4]",
            "str r5, [sp, 0x1e8]",
            "str sb, [sp, 0x1ec]",
            "bl sym.imp.memcpy",
            "ldm r7, {r0, r1, r2, r3}",
            "bl fcn.0000910c",
            "ldr ip, [sp, 0x1f8]",
            "ldr r3, [r6]",
            "cmp r3, 1",
            "bne 0x236d8",
            "ldr r3, [sp, 0x1fc]",
            "add r1, sp, 0x210",
            "str ip, [sp, 0x1d8]",
            "mov r2, 0x1d8",
            "str r3, [sp, 0x1e0]",
            "add sl, sl, 0x14",
            "str r8, [sp, 0x1dc]",
            "mov r0, sp",
            "str r4, [sp, 0x1e4]",
            "str r5, [sp, 0x1e8]",
            "str sb, [sp, 0x1ec]",
            "str sl, [sp, 0x1f0]",
            "bl sym.imp.memcpy",
            "ldm r7, {r0, r1, r2, r3}",
            "bl fcn.00009130",
            "mov r0, r4",
            "bl fcn.00008cec",
            "mov r0, r5",
            "bl fcn.00008cec",
            "mov r0, r8",
            "bl fcn.00008cec",
            "mov r0, 0",
            "add sp, sp, 0x3ec",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0000964c": {
        "function_address": "0x0000964c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x4c]!"
        ]
    },
    "fcn.00009310": {
        "function_address": "0x00009310",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x274]!"
        ]
    },
    "fcn.00009208": {
        "function_address": "0x00009208",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x324]!"
        ]
    },
    "fcn.0000910c": {
        "function_address": "0x0000910c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x3cc]!"
        ]
    },
    "fcn.00009130": {
        "function_address": "0x00009130",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x3b4]!"
        ]
    },
    "sym.wps_validate_beacon_probe_resp": {
        "function_address": "0x0002f1e4",
        "instructions": [
            "cmp r0, 0",
            "push {r4, r5, r6, r7, r8, lr}",
            "sub sp, sp, 0x1e8",
            "bne 0x2f1fc",
            "mvn r5, 0",
            "b 0x2f368",
            "mov r6, r1",
            "mov r1, sp",
            "bl fcn.00008c8c",
            "cmp r0, 0",
            "blt 0x2f1f4",
            "ldr r8, [sp, 4]",
            "ldr r5, [sp, 0x88]",
            "adds r4, r8, 0",
            "movne r4, 1",
            "cmp r5, 0",
            "moveq r7, r5",
            "beq 0x2f238",
            "ldrb r7, [r5]",
            "adds r7, r7, 0",
            "movne r7, 1",
            "ldr r0, [sp]",
            "bl fcn.0002f058",
            "cmp r0, 0",
            "bne 0x2f274",
            "ldr r3, [sp, 0x94]",
            "cmp r3, 0",
            "beq 0x2f260",
            "ldrb r3, [r3]",
            "cmp r3, 1",
            "bhi 0x2f274",
            "cmp r5, 0",
            "beq 0x2f284",
            "ldrb r3, [r5]",
            "cmp r3, 1",
            "bls 0x2f284",
            "cmp r4, 0",
            "bne 0x2f1f4",
            "mov r5, r4",
            "b 0x2f368",
            "ldr r0, [sp, 0x40]",
            "mov r1, r7",
            "bl fcn.0002ee4c",
            "cmp r0, 0",
            "bne 0x2f274",
            "ldr r0, [sp, 0x2c]",
            "mov r1, r4",
            "mov r2, r7",
            "bl fcn.0002ee80",
            "cmp r0, 0",
            "bne 0x2f274",
            "ldr r3, [sp, 0x90]",
            "cmp r3, 0",
            "bne 0x2f2c8",
            "cmp r6, 0",
            "beq 0x2f2d4",
            "b 0x2f274",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bhi 0x2f274",
            "ldr r3, [sp, 0x18]",
            "cmp r3, 0",
            "bne 0x2f2e8",
            "cmp r6, 0",
            "bne 0x2f274",
            "ldr r3, [sp, 0x30]",
            "cmp r3, 0",
            "bne 0x2f2fc",
            "cmp r6, 0",
            "bne 0x2f274",
            "ldr r5, [sp, 0x28]",
            "mov r1, r4",
            "mov r2, r6",
            "mov r0, r5",
            "bl fcn.0002ee14",
            "cmp r0, 0",
            "blt 0x2f274",
            "cmp r5, 0",
            "beq 0x2f32c",
            "ldrb r3, [r5, 1]",
            "tst r3, 0x80",
            "bne 0x2f274",
            "mov r0, r8",
            "mov r1, r4",
            "bl fcn.0002ed7c",
            "subs r5, r0, 0",
            "bne 0x2f274",
            "ldr r3, [sp, 0xf4]",
            "ldr r0, [sp, 0xf8]",
            "cmp r3, 0",
            "beq 0x2f368",
            "cmp r0, 0x1e",
            "bls 0x2f368",
            "mov r1, 6",
            "bl sym.imp.__aeabi_uidivmod",
            "cmp r1, 0",
            "bne 0x2f274",
            "mov r0, r5",
            "add sp, sp, 0x1e8",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.0002ee4c": {
        "function_address": "0x0002ee4c",
        "instructions": [
            "subs r3, r0, 0",
            "bne 0x2ee60",
            "adds r0, r1, 0",
            "mvnne r0, 0",
            "bx lr",
            "ldrb r0, [r3]",
            "ldrb r3, [r3, 1]",
            "orr r0, r3, r0, lsl 8",
            "sub r0, r0, 8",
            "cmp r0, 7",
            "movhi r0, 0",
            "mvnls r0, 0",
            "bx lr"
        ]
    },
    "fcn.0002ee80": {
        "function_address": "0x0002ee80",
        "instructions": [
            "push {r3, lr}",
            "subs r3, r0, 0",
            "bne 0x2ee98",
            "adds r0, r2, 0",
            "mvnne r0, 0",
            "pop {r3, pc}",
            "ldrb r0, [r3]",
            "ldrb r3, [r3, 1]",
            "orr r0, r3, r0, lsl 8",
            "bl fcn.0002eda4",
            "cmp r0, 0",
            "movne r0, 0",
            "mvneq r0, 0",
            "pop {r3, pc}"
        ]
    },
    "fcn.0002ee14": {
        "function_address": "0x0002ee14",
        "instructions": [
            "push {r3, lr}",
            "subs r3, r0, 0",
            "bne 0x2ee2c",
            "adds r0, r2, 0",
            "mvnne r0, 0",
            "pop {r3, pc}",
            "ldrb r0, [r3]",
            "ldrb r3, [r3, 1]",
            "orr r0, r3, r0, lsl 8",
            "bl fcn.0002eda4",
            "cmp r0, 0",
            "movne r0, 0",
            "mvneq r0, 0",
            "pop {r3, pc}"
        ]
    },
    "sym.imp.__aeabi_uidivmod": {
        "function_address": "0x00008a1c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x86c]!"
        ]
    },
    "sym.zyNetCtrl_setWIFIStateByBand": {
        "function_address": "0x000161ec",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r6, 0",
            "ldr sl, [0x0001643c]",
            "sub sp, sp, 0x2dc",
            "mov r7, r2",
            "mov r5, r0",
            "str r6, [sp, 0x28]",
            "mov r2, 0xc",
            "add sl, pc, sl",
            "mov r4, r1",
            "add r0, sp, 0x2c",
            "mov r1, r6",
            "bl sym.imp.memset",
            "str r6, [sp, 0x58]",
            "add r0, sp, 0x5c",
            "mov r1, r6",
            "mov r2, 0x7c",
            "bl sym.imp.memset",
            "cmp r7, r6",
            "str r6, [sp, 0x20]",
            "str r6, [sp, 0x24]",
            "ldreq r1, [0x00016440]",
            "addeq r0, sp, 0x20",
            "addeq r1, pc, r1",
            "beq 0x16264",
            "cmp r7, 2",
            "bne 0x16428",
            "ldr r1, [0x00016444]",
            "add r0, sp, 0x20",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "cmp r4, 0x20",
            "beq 0x162cc",
            "bhi 0x16294",
            "cmp r4, 0",
            "beq 0x162bc",
            "cmp r4, 1",
            "bne 0x16428",
            "ldr r1, [0x00016448]",
            "add r0, sp, 0x28",
            "add r1, pc, r1",
            "b 0x162f8",
            "cmp r4, 0x40",
            "beq 0x162dc",
            "cmp r4, 0x41",
            "beq 0x162ec",
            "cmp r4, 0x21",
            "bne 0x16428",
            "ldr r1, [0x0001644c]",
            "add r0, sp, 0x28",
            "add r1, pc, r1",
            "b 0x162f8",
            "ldr r1, [0x00016450]",
            "add r0, sp, 0x28",
            "add r1, pc, r1",
            "b 0x162f8",
            "ldr r1, [0x00016454]",
            "add r0, sp, 0x28",
            "add r1, pc, r1",
            "b 0x162f8",
            "ldr r1, [0x00016458]",
            "add r0, sp, 0x28",
            "add r1, pc, r1",
            "b 0x162f8",
            "ldr r1, [0x0001645c]",
            "add r0, sp, 0x28",
            "add r1, pc, r1",
            "ldr sb, [0x00016460]",
            "bl sym.imp.strcpy",
            "ldr r1, [0x00016464]",
            "add fp, sp, 0x58",
            "add sb, pc, sb",
            "add r2, sp, 0x28",
            "add r1, pc, r1",
            "add r6, sp, 0x24",
            "mov r0, fp",
            "add r7, sp, 0x20",
            "bl sym.imp.sprintf",
            "mov r1, fp",
            "mov r2, r6",
            "mov r0, sb",
            "bl fcn.00008788",
            "mov r0, r6",
            "mov r1, r7",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "moveq r8, r0",
            "beq 0x16368",
            "mov r1, fp",
            "mov r2, r7",
            "mov r0, sb",
            "mov r8, 1",
            "bl fcn.00009538",
            "mov r0, sb",
            "bl fcn.000096ac",
            "mov r6, 0",
            "mov r2, 0x1c",
            "str r6, [sp, 0x38]",
            "mov r1, r6",
            "add sb, sp, 0x38",
            "add r0, sp, 0x3c",
            "bl sym.imp.memset",
            "mov r1, sb",
            "mov r0, r4",
            "bl fcn.00008ec0",
            "str r6, [sp, 0xd8]",
            "mov r1, r6",
            "mov r2, 0x1fc",
            "add r0, sp, 0xdc",
            "bl sym.imp.memset",
            "str r7, [sp]",
            "mov r2, sb",
            "ldrb r3, [r5]",
            "ldr r1, [0x00016468]",
            "str r3, [sp, 4]",
            "ldrb r3, [r5, 1]",
            "add r1, pc, r1",
            "str r3, [sp, 8]",
            "ldrb r3, [r5, 2]",
            "str r3, [sp, 0xc]",
            "ldrb r3, [r5, 3]",
            "str r3, [sp, 0x10]",
            "ldrb r3, [r5, 4]",
            "str r3, [sp, 0x14]",
            "ldrb r3, [r5, 5]",
            "add r5, sp, 0xd8",
            "mov r0, r5",
            "str r3, [sp, 0x18]",
            "mov r3, r4",
            "bl sym.imp.sprintf",
            "mov r0, r5",
            "bl loc.imp.Outputlog",
            "ldr r3, [0x0001646c]",
            "ldr r3, [sl, r3]",
            "ldr r3, [r3]",
            "cmp r3, 1",
            "bne 0x16430",
            "cmp r8, r6",
            "moveq r0, r8",
            "beq 0x16434",
            "mov r0, r4",
            "bl fcn.00009364",
            "b 0x16430",
            "mov r0, 0x10",
            "b 0x16434",
            "mov r0, r6",
            "add sp, sp, 0x2dc",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00009364": {
        "function_address": "0x00009364",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x23c]!"
        ]
    },
    "sym.wps_build_m1": {
        "function_address": "0x00030ac4",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r1, 0x10",
            "mov r5, r0",
            "add r0, r0, 0x36",
            "bl fcn.00008704",
            "cmp r0, 0",
            "blt 0x30b44",
            "mov r0, 0x3e8",
            "bl fcn.00008ddc",
            "subs r4, r0, 0",
            "beq 0x30b44",
            "ldr r3, [r5]",
            "ldrh r6, [r3, 0xdc]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x30b2c",
            "ldr r3, [r5, 0x2b4]",
            "cmp r3, 0",
            "bne 0x30b2c",
            "ldr r3, [r5, 0x13c]",
            "cmp r3, 0",
            "bne 0x30b24",
            "tst r6, 8",
            "beq 0x30b2c",
            "bic r6, r6, 0x680",
            "uxth r6, r6",
            "mov r0, r4",
            "bl fcn.00008e9c",
            "cmp r0, 0",
            "beq 0x30b4c",
            "mov r0, r4",
            "bl fcn.00008f74",
            "mov r0, 0",
            "pop {r4, r5, r6, pc}",
            "mov r0, r4",
            "mov r1, 4",
            "bl fcn.00009328",
            "cmp r0, 0",
            "bne 0x30b3c",
            "mov r0, r4",
            "add r1, r5, 0x10",
            "bl fcn.000092bc",
            "cmp r0, 0",
            "bne 0x30b3c",
            "mov r0, r4",
            "add r1, r5, 0x30",
            "bl fcn.00008848",
            "cmp r0, 0",
            "bne 0x30b3c",
            "mov r0, r5",
            "mov r1, r4",
            "bl fcn.00009574",
            "cmp r0, 0",
            "bne 0x30b3c",
            "mov r0, r5",
            "mov r1, r4",
            "bl fcn.00008a64",
            "cmp r0, 0",
            "bne 0x30b3c",
            "mov r0, r5",
            "mov r1, r4",
            "bl fcn.000094cc",
            "cmp r0, 0",
            "bne 0x30b3c",
            "mov r0, r5",
            "mov r1, r4",
            "bl fcn.00009688",
            "cmp r0, 0",
            "bne 0x30b3c",
            "mov r0, r5",
            "mov r1, r4",
            "bl fcn.000091d8",
            "cmp r0, 0",
            "bne 0x30b3c",
            "mov r0, r4",
            "mov r1, r6",
            "bl fcn.00008890",
            "cmp r0, 0",
            "bne 0x30b3c",
            "ldr r3, [r5]",
            "mov r1, 2",
            "mov r0, r4",
            "ldr r2, [r3]",
            "cmp r2, 0",
            "moveq r6, 1",
            "ldrbne r6, [r3, 8]",
            "bl fcn.000086d4",
            "mov r3, 0x10",
            "mov r1, 2",
            "strb r3, [r0]",
            "mov r3, 0x44",
            "strb r3, [r0, 1]",
            "mov r0, r4",
            "bl fcn.000086d4",
            "mov r3, 0",
            "mov r1, 1",
            "strb r3, [r0]",
            "strb r1, [r0, 1]",
            "mov r0, r4",
            "bl fcn.000086d4",
            "strb r6, [r0]",
            "mov r1, r4",
            "ldr r0, [r5]",
            "add r0, r0, 0x48",
            "bl fcn.00008c98",
            "cmp r0, 0",
            "bne 0x30b3c",
            "ldr r6, [r5]",
            "ldr r3, [r6, 0x138]",
            "ldr r0, [r6, 0x13c]",
            "blx r3",
            "uxtb r2, r0",
            "mov r1, r4",
            "add r0, r6, 0x48",
            "bl fcn.00008e78",
            "cmp r0, 0",
            "bne 0x30b3c",
            "mov r0, r5",
            "mov r1, r4",
            "bl fcn.00009550",
            "cmp r0, 0",
            "bne 0x30b3c",
            "mov r3, 0x140",
            "mov r0, r4",
            "ldrh r1, [r5, r3]",
            "bl fcn.00008a58",
            "subs r1, r0, 0",
            "bne 0x30b3c",
            "mov r0, r4",
            "bl fcn.00008bc0",
            "cmp r0, 0",
            "bne 0x30b3c",
            "ldr r0, [r5]",
            "mov r1, r4",
            "add r0, r0, 0x48",
            "bl fcn.000092d4",
            "subs r1, r0, 0",
            "bne 0x30b3c",
            "mov r0, r4",
            "mov r2, r1",
            "mov r3, r1",
            "bl fcn.00008b60",
            "cmp r0, 0",
            "bne 0x30b3c",
            "ldr r0, [r5]",
            "mov r1, r4",
            "add r0, r0, 0x48",
            "bl fcn.000093dc",
            "cmp r0, 0",
            "bne 0x30b3c",
            "mov r0, r4",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.00008704": {
        "function_address": "0x00008704",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0xa7c]!"
        ]
    },
    "fcn.00008e9c": {
        "function_address": "0x00008e9c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x56c]!"
        ]
    },
    "fcn.00009328": {
        "function_address": "0x00009328",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x264]!"
        ]
    },
    "fcn.000092bc": {
        "function_address": "0x000092bc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x2ac]!"
        ]
    },
    "fcn.00008848": {
        "function_address": "0x00008848",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x9a4]!"
        ]
    },
    "fcn.00009574": {
        "function_address": "0x00009574",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0xdc]!"
        ]
    },
    "fcn.00008a64": {
        "function_address": "0x00008a64",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x83c]!"
        ]
    },
    "fcn.000094cc": {
        "function_address": "0x000094cc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x14c]!"
        ]
    },
    "fcn.00009688": {
        "function_address": "0x00009688",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x24]!"
        ]
    },
    "fcn.000091d8": {
        "function_address": "0x000091d8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x344]!"
        ]
    },
    "fcn.00008890": {
        "function_address": "0x00008890",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x974]!"
        ]
    },
    "fcn.00008c98": {
        "function_address": "0x00008c98",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x6c4]!"
        ]
    },
    "fcn.00008e78": {
        "function_address": "0x00008e78",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x584]!"
        ]
    },
    "fcn.00009550": {
        "function_address": "0x00009550",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0xf4]!"
        ]
    },
    "fcn.00008a58": {
        "function_address": "0x00008a58",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x844]!"
        ]
    },
    "fcn.00008bc0": {
        "function_address": "0x00008bc0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x754]!"
        ]
    },
    "fcn.000092d4": {
        "function_address": "0x000092d4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x29c]!"
        ]
    },
    "fcn.00008b60": {
        "function_address": "0x00008b60",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x794]!"
        ]
    },
    "fcn.000093dc": {
        "function_address": "0x000093dc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x1ec]!"
        ]
    },
    "sym.getWiFiReload": {
        "function_address": "0x0000fd20",
        "instructions": [
            "push {r0, r1, r2, r4, r5, lr}",
            "mov r5, r0",
            "ldr r4, [0x0000fdb0]",
            "ldr r3, [0x0000fdb4]",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0xfd94",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0xca9",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000fdb8]",
            "ldr r0, [0x0000fdbc]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x394",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x0000fdc0]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000fdc4]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x0000fdc8]",
            "mov r0, 0",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "str r3, [r5]",
            "add sp, sp, 0xc",
            "pop {r4, r5, pc}"
        ]
    },
    "sym.zyNetCtrl_check_dnsmasq_Enable": {
        "function_address": "0x00017548",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r4, 0",
            "ldr r5, [0x000175f0]",
            "sub sp, sp, 0x100",
            "mov r1, r4",
            "mov r2, 0x7c",
            "str r4, [sp]",
            "add r0, sp, 4",
            "add r5, pc, r5",
            "bl sym.imp.memset",
            "str r4, [sp, 0x80]",
            "mov r2, 0x7c",
            "mov r1, r4",
            "add r0, sp, 0x84",
            "bl sym.imp.memset",
            "ldr r1, [0x000175f4]",
            "mov r0, sp",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "mov r0, sp",
            "bl sym.imp.system",
            "ldr r1, [0x000175f8]",
            "mov r0, r5",
            "add r1, pc, r1",
            "bl sym.imp.fopen",
            "subs r4, r0, 0",
            "moveq r6, r4",
            "beq 0x175e4",
            "mov r1, 0x80",
            "mov r2, r4",
            "add r0, sp, 0x80",
            "bl sym.imp.fgets",
            "ldrb r6, [sp, 0x80]",
            "mov r0, r4",
            "adds r6, r6, 0",
            "movne r6, 1",
            "bl sym.imp.fclose",
            "mov r0, r5",
            "bl sym.imp.remove",
            "mov r0, r6",
            "add sp, sp, 0x100",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.sha256_vector": {
        "function_address": "0x000348ac",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, lr}",
            "sub sp, sp, 0x74",
            "mov r7, r0",
            "mov r4, 0",
            "mov r0, sp",
            "mov r8, r1",
            "mov sb, r2",
            "mov r6, r3",
            "bl fcn.00008794",
            "cmp r4, r7",
            "mov r0, sp",
            "beq 0x348f8",
            "ldr r1, [r8, r4, lsl 2]",
            "ldr r2, [sb, r4, lsl 2]",
            "bl fcn.00008d04",
            "cmp r0, 0",
            "bne 0x3490c",
            "add r4, r4, 1",
            "b 0x348d0",
            "mov r1, r6",
            "bl fcn.000087f4",
            "adds r0, r0, 0",
            "mvnne r0, 0",
            "b 0x34910",
            "mvn r0, 0",
            "add sp, sp, 0x74",
            "pop {r4, r5, r6, r7, r8, sb, pc}"
        ]
    },
    "fcn.00008794": {
        "function_address": "0x00008794",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0xa1c]!"
        ]
    },
    "fcn.00008d04": {
        "function_address": "0x00008d04",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x67c]!"
        ]
    },
    "fcn.000087f4": {
        "function_address": "0x000087f4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x9dc]!"
        ]
    },
    "sym.zyNetCtrl_SpeedTest_initSpeedTestData": {
        "function_address": "0x0002b5a4",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "sub sp, sp, 0x410",
            "ldr r4, [0x0002b7a0]",
            "sub sp, sp, 4",
            "ldr r3, [0x0002b7a4]",
            "mov r7, r2",
            "add r4, pc, r4",
            "mov r2, 6",
            "mov r5, r0",
            "ldr r1, [r4, r3]",
            "bl sym.imp.memcmp",
            "ldr r3, [0x0002b7a8]",
            "cmp r0, 0",
            "ldr r6, [r4, r3]",
            "bne 0x2b5f8",
            "ldr r3, [0x0002b7ac]",
            "mov r0, r7",
            "ldr r1, [r4, r3]",
            "bl sym.imp.strcmp",
            "subs r7, r0, 0",
            "beq 0x2b678",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x2b790",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x2b3",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002b7b0]",
            "ldr r0, [0x0002b7b4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x124",
            "bl sym.imp.printf",
            "ldrb r0, [r5, 3]",
            "ldrb r3, [r5, 2]",
            "ldrb r1, [r5]",
            "ldrb r2, [r5, 1]",
            "str r0, [sp]",
            "ldrb r0, [r5, 4]",
            "str r0, [sp, 4]",
            "ldrb r0, [r5, 5]",
            "str r0, [sp, 8]",
            "ldr r0, [0x0002b7b8]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0002b7bc]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0x2b790",
            "str r7, [sp, 0x10]",
            "mov r1, r7",
            "mov r2, 0x3fc",
            "add r0, sp, 0x14",
            "bl sym.imp.memset",
            "ldr r1, [0x0002b7c0]",
            "add r5, sp, 0x10",
            "ldr r2, [0x0002b7c4]",
            "mov r0, r5",
            "add r1, pc, r1",
            "add r2, pc, r2",
            "bl sym.imp.sprintf",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x2b704",
            "mov r0, r7",
            "bl sym.imp.time",
            "movw r3, 0x2bb",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002b7c8]",
            "ldr r0, [0x0002b7cc]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x124",
            "bl sym.imp.printf",
            "ldr r0, [0x0002b7d0]",
            "mov r1, r5",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0002b7bc]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, r5",
            "bl sym.imp.system",
            "ldr r1, [0x0002b7d4]",
            "mov r0, r5",
            "ldr r2, [0x0002b7d8]",
            "add r1, pc, r1",
            "add r2, pc, r2",
            "bl sym.imp.sprintf",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x2b780",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0x2c0",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002b7dc]",
            "ldr r0, [0x0002b7e0]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x124",
            "bl sym.imp.printf",
            "ldr r0, [0x0002b7e4]",
            "mov r1, r5",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0002b7bc]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, r5",
            "bl sym.imp.system",
            "mov r0, 0",
            "b 0x2b794",
            "mov r0, 0x10",
            "add sp, sp, 0x410",
            "add sp, sp, 4",
            "pop {r4, r5, r6, r7, pc}"
        ]
    },
    "sym.zyNetCtrl_WPSApporve_setFlag": {
        "function_address": "0x000296e4",
        "instructions": [
            "push {r0, r1, r2, r4, r5, lr}",
            "mov r5, r0",
            "ldr r4, [0x00029770]",
            "ldr r3, [0x00029774]",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x29758",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0xaf",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00029778]",
            "ldr r0, [0x0002977c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x93",
            "bl sym.imp.printf",
            "ldr r0, [0x00029780]",
            "mov r1, r5",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00029784]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x00029788]",
            "mov r0, 0",
            "ldr r3, [r4, r3]",
            "str r5, [r3]",
            "add sp, sp, 0xc",
            "pop {r4, r5, pc}"
        ]
    },
    "sym.removeFwdRuleById": {
        "function_address": "0x0000cb54",
        "instructions": [
            "push {r0, r1, r4, lr}",
            "ldr r4, [0x0000cbec]",
            "ldr r3, [0x0000cbf0]",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0xcbc4",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x74e",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000cbf4]",
            "ldr r0, [0x0000cbf8]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x1dc",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x0000cbfc]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000cc00]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x0000cc04]",
            "mov r0, 2",
            "ldr r3, [r4, r3]",
            "ldr r1, [r3]",
            "bl fcn.00008980",
            "cmp r0, 0",
            "movne r0, 0x10",
            "moveq r0, 0",
            "add sp, sp, 8",
            "pop {r4, pc}"
        ]
    },
    "sym.setIntfPwrStateById": {
        "function_address": "0x0000b0f8",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r0",
            "ldr sb, [0x0000b408]",
            "sub sp, sp, 0x9c",
            "ldr r3, [0x0000b40c]",
            "mov r8, r1",
            "add sb, pc, sb",
            "mov r5, r2",
            "ldr r6, [sb, r3]",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xb174",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0x4f0",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000b410]",
            "ldr r0, [0x0000b414]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xf0",
            "bl sym.imp.printf",
            "ldr r0, [0x0000b418]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000b41c]",
            "ldr r3, [sb, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xb1f0",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x4f1",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000b420]",
            "ldr r0, [0x0000b424]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xf0",
            "bl sym.imp.printf",
            "ldrb r0, [r4, 3]",
            "ldrb r3, [r4, 2]",
            "str r0, [sp]",
            "ldrb r0, [r4, 4]",
            "ldrb r1, [r4]",
            "str r0, [sp, 4]",
            "ldrb r0, [r4, 5]",
            "ldrb r2, [r4, 1]",
            "str r0, [sp, 8]",
            "ldr r0, [0x0000b428]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000b41c]",
            "ldr r3, [sb, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xb24c",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x4f2",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000b42c]",
            "ldr r0, [0x0000b430]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xf0",
            "bl sym.imp.printf",
            "ldr r0, [0x0000b434]",
            "mov r1, r8",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000b41c]",
            "ldr r3, [sb, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xb2a8",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x4f4",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000b438]",
            "ldr r0, [0x0000b43c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xf0",
            "bl sym.imp.printf",
            "ldr r0, [0x0000b440]",
            "mov r1, r5",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000b41c]",
            "ldr r3, [sb, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x0000b444]",
            "mov r0, 2",
            "ldr r3, [sb, r3]",
            "ldr r1, [r3]",
            "bl fcn.00008980",
            "subs r6, r0, 0",
            "movne r0, 0x10",
            "bne 0xb400",
            "cmp r5, 2",
            "movhi r0, 2",
            "bhi 0xb400",
            "ldr fp, [0x0000b448]",
            "bl fcn.00008e54",
            "ldr r3, [0x0000b44c]",
            "mov r7, r6",
            "ldr r2, [0x0000b450]",
            "ldr r3, [sb, r3]",
            "ldr r2, [sb, r2]",
            "ldr sl, [r3]",
            "ldr r3, [0x0000b454]",
            "add fp, pc, fp",
            "add r3, pc, r3",
            "str r2, [sp, 0x10]",
            "str r3, [sp, 0x14]",
            "ldr r3, [sp, 0x10]",
            "ldr r2, [r3]",
            "cmp r7, r2",
            "bge 0xb3f4",
            "ldrb r1, [sl, 0x14]",
            "ldrb r2, [r4]",
            "cmp r1, r2",
            "bne 0xb3e8",
            "ldrb r1, [sl, 0x15]",
            "ldrb r2, [r4, 1]",
            "cmp r1, r2",
            "bne 0xb3e8",
            "ldrb r1, [sl, 0x16]",
            "ldrb r2, [r4, 2]",
            "cmp r1, r2",
            "bne 0xb3e8",
            "ldrb r1, [sl, 0x17]",
            "ldrb r2, [r4, 3]",
            "cmp r1, r2",
            "bne 0xb3e8",
            "ldrb r1, [sl, 0x18]",
            "ldrb r2, [r4, 4]",
            "cmp r1, r2",
            "bne 0xb3e8",
            "ldrb r1, [sl, 0x19]",
            "ldrb r2, [r4, 5]",
            "cmp r1, r2",
            "bne 0xb3e8",
            "ldr r2, [sl, 0x24]",
            "cmp r2, r8",
            "bne 0xb3e8",
            "ldr r2, [sl, 0x30]",
            "cmp r2, r5",
            "bne 0xb39c",
            "bl fcn.00008e48",
            "mov r0, 3",
            "b 0xb400",
            "mov r1, 0",
            "add r0, sp, 0x1c",
            "str r1, [sp, 0x18]",
            "mov r2, 0x7c",
            "bl sym.imp.memset",
            "cmp r5, 0",
            "add sb, sp, 0x18",
            "add r6, r6, 1",
            "moveq r0, sb",
            "moveq r1, fp",
            "beq 0xb3d8",
            "cmp r5, 2",
            "bne 0xb3e0",
            "ldr r1, [sp, 0x14]",
            "mov r0, sb",
            "add r2, sl, 4",
            "bl sym.imp.sprintf",
            "mov r0, sb",
            "bl sym.imp.system",
            "ldr sl, [sl]",
            "add r7, r7, 1",
            "b 0xb308",
            "bl fcn.00008e48",
            "clz r0, r6",
            "lsr r0, r0, 5",
            "add sp, sp, 0x9c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.wps_build_wfa_ext": {
        "function_address": "0x00033544",
        "instructions": [
            "cmp r1, 0",
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r5, r3",
            "mov r8, r1",
            "mov r4, r0",
            "ldm r0, {r0, r3}",
            "sub r0, r0, r3",
            "moveq r1, 0xa",
            "movne r1, 0xd",
            "subs r7, r2, 0",
            "movne r3, 6",
            "moveq r3, r7",
            "mulne r3, r3, r5",
            "addne r3, r3, 2",
            "add r3, r3, r1",
            "cmp r0, r3",
            "blo 0x3367c",
            "mov r0, r4",
            "movw r1, 0x1049",
            "bl fcn.000331d0",
            "mov r1, 2",
            "mov r0, r4",
            "bl fcn.000086d4",
            "mov r6, r0",
            "mov r1, 3",
            "mov r0, r4",
            "bl fcn.000086d4",
            "mov r3, 0x37",
            "mov r1, 0",
            "strb r3, [r0, 1]",
            "mov r3, 0x2a",
            "strb r3, [r0, 2]",
            "strb r1, [r0]",
            "mov r0, r4",
            "bl fcn.000331f0",
            "mov r0, r4",
            "mov r1, 1",
            "bl fcn.000331f0",
            "mov r0, r4",
            "mov r1, 0x20",
            "bl fcn.000331f0",
            "cmp r8, 0",
            "beq 0x33614",
            "mov r0, r4",
            "mov r1, 3",
            "bl fcn.000331f0",
            "mov r0, r4",
            "mov r1, 1",
            "bl fcn.000331f0",
            "mov r0, r4",
            "mov r1, 1",
            "bl fcn.000331f0",
            "cmp r7, 0",
            "cmpne r5, 0",
            "beq 0x33650",
            "mov r0, r4",
            "mov r1, 1",
            "mov r8, 6",
            "bl fcn.000331f0",
            "smulbb r1, r5, r8",
            "mov r0, r4",
            "and r1, r1, 0xfe",
            "bl fcn.000331f0",
            "mov r0, r4",
            "mov r1, r7",
            "mul r2, r8, r5",
            "bl fcn.00033208",
            "mov r0, r4",
            "mov r1, 0",
            "bl fcn.000086d4",
            "rsb r0, r6, r0",
            "sub r3, r0, 2",
            "mov r0, 0",
            "uxth r3, r3",
            "strb r3, [r6, 1]",
            "lsr r2, r3, 8",
            "strb r2, [r6]",
            "pop {r4, r5, r6, r7, r8, pc}",
            "mvn r0, 0",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "sym.wifiReloadCheckFlag": {
        "function_address": "0x00010e28",
        "instructions": [
            "push {r0, r1, r4, r5, r6, lr}",
            "ldr r4, [0x00010f88]",
            "ldr r3, [0x00010f8c]",
            "add r4, pc, r4",
            "ldr r5, [r4, r3]",
            "ldrb r3, [r5]",
            "cmp r3, 3",
            "bls 0x10e98",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0xec6",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00010f90]",
            "ldr r0, [0x00010f94]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x400",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x00010f98]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00010f9c]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r0, [0x00010fa0]",
            "ldr r1, [0x00010fa4]",
            "add r0, pc, r0",
            "add r1, pc, r1",
            "bl sym.imp.fopen",
            "subs r6, r0, 0",
            "bne 0x10f10",
            "ldrb r3, [r5]",
            "cmp r3, 3",
            "bls 0x10f74",
            "bl sym.imp.time",
            "movw r3, 0xeca",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00010fa8]",
            "ldr r0, [0x00010fac]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x400",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x00010fb0]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00010f9c]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0x10f74",
            "bl sym.imp.fclose",
            "ldrb r3, [r5]",
            "cmp r3, 3",
            "bls 0x10f7c",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0xecf",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00010fb4]",
            "ldr r0, [0x00010fb8]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x400",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x00010fbc]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00010f9c]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0x10f7c",
            "mov r0, r6",
            "b 0x10f80",
            "mov r0, 0x10",
            "add sp, sp, 8",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.FW_checkBUSYstatetimeout": {
        "function_address": "0x00027614",
        "instructions": [
            "push {r0, r1, r2, r4, r5, lr}",
            "mov r0, 0",
            "ldr r4, [0x000276d0]",
            "bl sym.imp.time",
            "ldr r3, [0x000276d4]",
            "add r4, pc, r4",
            "ldr r2, [r4, r3]",
            "ldr r3, [r2]",
            "cmp r3, 0",
            "streq r0, [r2]",
            "beq 0x276c4",
            "rsb r0, r3, r0",
            "cmp r0, 0xf0",
            "ble 0x276c4",
            "ldr r3, [0x000276d8]",
            "mov r5, r2",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x276b4",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x6b8",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000276dc]",
            "ldr r0, [0x000276e0]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x1d0",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x000276e4]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x000276e8]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r3, 0",
            "mov r0, 0x10",
            "str r3, [r5]",
            "b 0x276c8",
            "mov r0, 0",
            "add sp, sp, 0xc",
            "pop {r4, r5, pc}"
        ]
    },
    "sym.wps_derive_keys": {
        "function_address": "0x0002db60",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, lr}",
            "mov r4, r0",
            "ldr r2, [r0, 0xd8]",
            "sub sp, sp, 0xb4",
            "cmp r2, 0",
            "bne 0x2db80",
            "mvn r0, 0",
            "b 0x2dd0c",
            "ldr r1, [r0, 0xe0]",
            "ldr r3, [r0, 0xdc]",
            "ldr r0, [r0, 4]",
            "cmp r0, 0",
            "movne r1, r3",
            "cmp r1, 0",
            "beq 0x2db78",
            "ldr r0, [r4, 0x298]",
            "mov r6, 0",
            "bl fcn.00008884",
            "mov r5, r0",
            "ldr r0, [r4, 0x298]",
            "bl fcn.000090f4",
            "str r6, [r4, 0x298]",
            "mov r0, r5",
            "mov r1, 0xc0",
            "bl fcn.000089bc",
            "subs r5, r0, 0",
            "beq 0x2db78",
            "ldr r0, [r4, 0xd8]",
            "add r7, sp, 0x14",
            "bl fcn.00008f74",
            "str r6, [r4, 0xd8]",
            "add r8, sp, 8",
            "ldr r3, [r5, 8]",
            "add sb, sp, 0x20",
            "mov r2, r7",
            "mov r1, r8",
            "str r3, [sp, 8]",
            "mov r0, 1",
            "ldr r3, [r5, 4]",
            "str r3, [sp, 0x14]",
            "mov r3, sb",
            "bl fcn.00008b18",
            "mov r0, r5",
            "add r5, sp, 0x60",
            "bl fcn.00008f74",
            "str r7, [sp]",
            "add r2, r4, 0x30",
            "str r2, [sp, 0xc]",
            "add r3, r4, 0x36",
            "str r3, [sp, 8]",
            "mov r2, 6",
            "str r2, [sp, 0x18]",
            "mov r3, 0x10",
            "str r3, [sp, 0x14]",
            "add r2, r4, 0x46",
            "str r2, [sp, 0x10]",
            "add r7, sp, 0x40",
            "str r3, [sp, 0x1c]",
            "mov r1, 0x20",
            "str r7, [sp, 4]",
            "mov r2, 3",
            "mov r3, r8",
            "mov r0, sb",
            "bl fcn.00008c08",
            "str r5, [sp]",
            "mov r3, 0x50",
            "str r3, [sp, 4]",
            "mov r2, r6",
            "ldr r3, [0x0002dd14]",
            "mov r0, r7",
            "mov r1, r6",
            "add r3, pc, r3",
            "bl fcn.00008e60",
            "mov ip, r5",
            "add r2, r4, 0xe4",
            "add lr, r5, 0x20",
            "mov r3, ip",
            "add r2, r2, 8",
            "ldm r3!, {r0, r1}",
            "cmp r3, lr",
            "mov ip, r3",
            "str r0, [r2, -8]",
            "str r1, [r2, -4]",
            "bne 0x2dc90",
            "add ip, r5, 0x20",
            "add r2, r4, 0x104",
            "add lr, r5, 0x30",
            "mov r3, ip",
            "add r2, r2, 8",
            "ldm r3!, {r0, r1}",
            "cmp r3, lr",
            "mov ip, r3",
            "str r0, [r2, -8]",
            "str r1, [r2, -4]",
            "bne 0x2dcbc",
            "add r2, r5, 0x30",
            "add r4, r4, 0x114",
            "add r5, r5, 0x50",
            "mov r3, r2",
            "add r4, r4, 8",
            "ldm r3!, {r0, r1}",
            "cmp r3, r5",
            "mov r2, r3",
            "str r0, [r4, -8]",
            "str r1, [r4, -4]",
            "bne 0x2dce8",
            "mov r0, 0",
            "add sp, sp, 0xb4",
            "pop {r4, r5, r6, r7, r8, sb, pc}"
        ]
    },
    "fcn.00008884": {
        "function_address": "0x00008884",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x97c]!"
        ]
    },
    "fcn.00008b18": {
        "function_address": "0x00008b18",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x7c4]!"
        ]
    },
    "fcn.00008e60": {
        "function_address": "0x00008e60",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x594]!"
        ]
    },
    "sym.zyNetCtrl_loadDeviceInterface": {
        "function_address": "0x00013f9c",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sb, lr}",
            "mov r7, r0",
            "ldr r3, [0x000140d0]",
            "mov r6, 0",
            "ldr r2, [0x000140d4]",
            "mov sb, 6",
            "add r3, pc, r3",
            "ldr r2, [r3, r2]",
            "ldr r4, [r2]",
            "ldr r2, [0x000140d8]",
            "ldr r8, [r3, r2]",
            "ldr r3, [r8]",
            "strb r3, [r0]",
            "ldr r3, [r8]",
            "mov r0, 1",
            "cmp r6, r3",
            "bge 0x140cc",
            "cmp r6, 0",
            "mov r1, 0x48",
            "bne 0x14008",
            "bl sym.imp.calloc",
            "subs r5, r0, 0",
            "bne 0x14000",
            "mov r0, 0",
            "pop {r3, r4, r5, r6, r7, r8, sb, pc}",
            "str r5, [r7, 4]",
            "b 0x1401c",
            "bl sym.imp.calloc",
            "cmp r0, 0",
            "beq 0x13ff8",
            "str r0, [r5]",
            "mov r5, r0",
            "add r1, r4, 4",
            "add r0, r5, 4",
            "bl sym.imp.strcpy",
            "mov r2, r4",
            "mov r3, r5",
            "mov r1, 0",
            "ldrb r0, [r2, 0x14]",
            "add r1, r1, 1",
            "cmp r1, 6",
            "add r2, r2, 1",
            "strb r0, [r3, 0x14]",
            "add r3, r3, 1",
            "bne 0x14034",
            "ldr r3, [r4, 0x1c]",
            "str r3, [r5, 0x1c]",
            "ldr r3, [r4, 0x20]",
            "str r3, [r5, 0x20]",
            "ldr r3, [r4, 0x24]",
            "str r3, [r5, 0x24]",
            "ldr r3, [r4, 0x30]",
            "str r3, [r5, 0x30]",
            "ldrh r3, [r4, 0x40]",
            "strh r3, [r5, 0x40]",
            "ldrh r0, [r4, 0x40]",
            "cmp r0, 0",
            "beq 0x140c0",
            "bl sym.imp.calloc",
            "str r0, [r5, 0x44]",
            "cmp r0, 0",
            "beq 0x13ff8",
            "mov r3, 0",
            "ldrh r2, [r4, 0x40]",
            "mul r2, sb, r2",
            "cmp r3, r2",
            "bhs 0x140c0",
            "ldr r2, [r4, 0x44]",
            "ldrb r1, [r2, r3]",
            "ldr r2, [r5, 0x44]",
            "strb r1, [r2, r3]",
            "add r3, r3, 1",
            "b 0x14098",
            "ldr r4, [r4]",
            "add r6, r6, 1",
            "b 0x13fd0",
            "pop {r3, r4, r5, r6, r7, r8, sb, pc}"
        ]
    },
    "sym.security_SecurityCtrl_cleanDataToList": {
        "function_address": "0x0002d020",
        "instructions": [
            "ldr r3, [0x0002d094]",
            "ldr r2, [0x0002d098]",
            "add r3, pc, r3",
            "push {r4, lr}",
            "ldr r4, [r3, r2]",
            "ldr r3, [r4]",
            "cmp r3, 0",
            "popeq {r4, pc}",
            "mov r0, 0",
            "bl sym.imp.time",
            "ldr r3, [r4]",
            "mov r2, 0",
            "mov r1, r2",
            "cmp r3, 0",
            "beq 0x2d084",
            "ldr ip, [r3, 0x218]",
            "cmp ip, 0",
            "beq 0x2d07c",
            "ldr ip, [r3, 0x214]",
            "rsb ip, ip, r0",
            "cmp ip, 2",
            "strgt r1, [r3, 0x218]",
            "addle r2, r2, 1",
            "ldr r3, [r3]",
            "b 0x2d054",
            "cmp r2, 0",
            "popne {r4, pc}",
            "pop {r4, lr}",
            "b fcn.00008cc8"
        ]
    },
    "sym.wps_build_config_error": {
        "function_address": "0x00033430",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r4, r0",
            "mov r5, r1",
            "movw r1, 0x1009",
            "bl fcn.000331d0",
            "mov r0, r4",
            "mov r1, 2",
            "bl fcn.000331d0",
            "mov r0, r4",
            "mov r1, r5",
            "bl fcn.000331d0",
            "mov r0, 0",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.getIEEE80211SpecInfo": {
        "function_address": "0x0000a3a4",
        "instructions": [
            "push {r0, r1, r2, r3, r4, r5, r6, lr}",
            "mov r4, r0",
            "ldr r5, [0x0000a4bc]",
            "ldr r3, [0x0000a4c0]",
            "add r5, pc, r5",
            "ldr r3, [r5, r3]",
            "ldrb r2, [r3]",
            "mov r6, r3",
            "cmp r2, 3",
            "bls 0xa418",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0x360",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000a4c4]",
            "ldr r0, [0x0000a4c8]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xac",
            "bl sym.imp.printf",
            "ldr r0, [0x0000a4cc]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000a4d0]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xa494",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x361",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000a4d4]",
            "ldr r0, [0x0000a4d8]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xac",
            "bl sym.imp.printf",
            "ldrb r0, [r4, 3]",
            "ldrb r3, [r4, 2]",
            "str r0, [sp]",
            "ldrb r0, [r4, 4]",
            "ldrb r1, [r4]",
            "str r0, [sp, 4]",
            "ldrb r0, [r4, 5]",
            "ldrb r2, [r4, 1]",
            "str r0, [sp, 8]",
            "ldr r0, [0x0000a4dc]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000a4d0]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x0000a4e0]",
            "mov r0, 2",
            "ldr r3, [r5, r3]",
            "ldr r1, [r3]",
            "bl fcn.00008980",
            "cmp r0, 0",
            "movne r0, 0x10",
            "moveq r0, 0",
            "add sp, sp, 0x10",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.zyNetCtrl_SpeedTest_outputSpeedTestData": {
        "function_address": "0x0002a7c8",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "subs r4, r0, 0",
            "ldr r5, [0x0002acf4]",
            "sub sp, sp, 0x144",
            "add r5, pc, r5",
            "beq 0x2aabc",
            "mov r7, r3",
            "mov sl, r2",
            "ldr r3, [0x0002acf8]",
            "ldr sb, [r5, r3]",
            "ldrb r3, [sb]",
            "cmp r3, 3",
            "bls 0x2a874",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x195",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002acfc]",
            "ldr r0, [0x0002ad00]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x84",
            "bl sym.imp.printf",
            "ldrb r0, [r4, 3]",
            "ldrb r3, [r4, 2]",
            "ldrb r1, [r4]",
            "ldrb r2, [r4, 1]",
            "str r0, [sp]",
            "ldrb r0, [r4, 4]",
            "str r0, [sp, 4]",
            "ldrb r0, [r4, 5]",
            "str r7, [sp, 0xc]",
            "str r0, [sp, 8]",
            "ldr r0, [0x0002ad04]",
            "str sl, [sp, 0x10]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0002ad08]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r6, 0",
            "mov r2, 0x7c",
            "str r6, [sp, 0x40]",
            "mov r1, r6",
            "add r0, sp, 0x44",
            "bl sym.imp.memset",
            "str r6, [sp, 0x20]",
            "mov r1, r6",
            "mov r2, 0xc",
            "add r0, sp, 0x24",
            "bl sym.imp.memset",
            "str r6, [sp, 0x30]",
            "mov r1, r6",
            "mov r2, 0xc",
            "add r0, sp, 0x34",
            "bl sym.imp.memset",
            "ldr r3, [0x0002ad0c]",
            "mov r0, r4",
            "mov r2, 6",
            "ldr r1, [r5, r3]",
            "bl sym.imp.memcmp",
            "cmp r0, r6",
            "bne 0x2a8e8",
            "ldr r3, [0x0002ad10]",
            "mov r0, r7",
            "ldr r1, [r5, r3]",
            "bl sym.imp.strcmp",
            "subs r6, r0, 0",
            "beq 0x2a958",
            "ldrb r3, [sb]",
            "cmp r3, 3",
            "bls 0x2aabc",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0x1a4",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002ad14]",
            "ldr r0, [0x0002ad18]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x84",
            "bl sym.imp.printf",
            "ldrb r0, [r4, 3]",
            "ldrb r1, [r4]",
            "ldrb r2, [r4, 1]",
            "ldrb r3, [r4, 2]",
            "str r0, [sp]",
            "ldrb r0, [r4, 4]",
            "str r0, [sp, 4]",
            "ldrb r0, [r4, 5]",
            "str r0, [sp, 8]",
            "ldr r0, [0x0002ad1c]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "b 0x2aaac",
            "ldr r7, [0x0002ad20]",
            "mov r2, 0x7c",
            "str r6, [sp, 0xc0]",
            "mov r1, r6",
            "add r7, pc, r7",
            "add r0, sp, 0xc4",
            "bl sym.imp.memset",
            "add r3, sp, 0xc0",
            "mov r1, sl",
            "mov r0, r3",
            "add r8, sp, 0x20",
            "bl sym.imp.strcpy",
            "mov r1, r7",
            "add fp, sp, 0x30",
            "bl sym.imp.strtok",
            "mov r1, r0",
            "mov r0, r8",
            "bl sym.imp.strcpy",
            "mov r1, r7",
            "mov r0, r6",
            "bl sym.imp.strtok",
            "mov r1, r0",
            "mov r0, fp",
            "bl sym.imp.strcpy",
            "mov r1, r7",
            "mov r0, r6",
            "bl sym.imp.strtok",
            "mov r1, r6",
            "mov r2, 0xa",
            "bl sym.imp.strtol",
            "ldr r3, [0x0002ad24]",
            "mov r7, r0",
            "ldr r1, [0x0002ad28]",
            "add r3, pc, r3",
            "add r1, pc, r1",
            "mov r0, r3",
            "str r3, [sp, 0x1c]",
            "bl sym.imp.fopen",
            "cmp r0, 0",
            "bne 0x2aa40",
            "ldrb r3, [sb]",
            "cmp r3, 3",
            "bls 0x2aabc",
            "bl sym.imp.time",
            "mov r3, 0x1bc",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002ad2c]",
            "ldr r0, [0x0002ad30]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x84",
            "bl sym.imp.printf",
            "ldr r0, [0x0002ad34]",
            "ldr r1, [sp, 0x1c]",
            "add r0, pc, r0",
            "b 0x2aaa8",
            "bl sym.imp.fclose",
            "ldr r3, [0x0002ad38]",
            "ldr ip, [r5, r3]",
            "ldr r3, [ip]",
            "cmp r3, 1",
            "ldrb r3, [sb]",
            "beq 0x2aac4",
            "cmp r3, 3",
            "bls 0x2aabc",
            "str ip, [sp, 0x18]",
            "mov r0, r6",
            "bl sym.imp.time",
            "movw r3, 0x1c3",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002ad3c]",
            "ldr r0, [0x0002ad40]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x84",
            "bl sym.imp.printf",
            "ldr r0, [0x0002ad44]",
            "ldr ip, [sp, 0x18]",
            "add r0, pc, r0",
            "ldr r1, [ip]",
            "bl sym.imp.printf",
            "ldr r3, [0x0002ad08]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, 0x10",
            "b 0x2acec",
            "cmp r3, 3",
            "ldr r3, [0x0002ad08]",
            "ldr r3, [r5, r3]",
            "str r3, [sp, 0x1c]",
            "bls 0x2ab2c",
            "mov r0, r6",
            "bl sym.imp.time",
            "movw r3, 0x1ca",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002ad48]",
            "ldr r0, [0x0002ad4c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x84",
            "bl sym.imp.printf",
            "ldr r0, [0x0002ad50]",
            "mov r3, r7",
            "mov r1, r8",
            "mov r2, fp",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [sp, 0x1c]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r0, [0x0002ad54]",
            "mov r1, r8",
            "mov r2, fp",
            "mov r3, r7",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [sp, 0x1c]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [sb]",
            "cmp r3, 3",
            "bls 0x2abc8",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x1cf",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002ad58]",
            "ldr r0, [0x0002ad5c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x84",
            "bl sym.imp.printf",
            "ldr r3, [0x0002ad60]",
            "mov r1, r8",
            "ldr r0, [0x0002ad64]",
            "mov r2, fp",
            "add r3, pc, r3",
            "str r3, [sp]",
            "ldr r3, [0x0002ad68]",
            "add r0, pc, r0",
            "add r3, pc, r3",
            "str r3, [sp, 4]",
            "mov r3, r7",
            "bl sym.imp.printf",
            "ldr r3, [sp, 0x1c]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x0002ad6c]",
            "ldr r3, [r5, r3]",
            "ldr r3, [r3]",
            "cmp r3, 1",
            "bne 0x2ac34",
            "ldr r6, [0x0002ad70]",
            "add r5, sp, 0x40",
            "ldr r3, [0x0002ad74]",
            "mov r2, sl",
            "add r6, pc, r6",
            "mov r0, r5",
            "add r3, pc, r3",
            "mov r1, r6",
            "bl sym.imp.sprintf",
            "mov r0, r5",
            "bl sym.imp.system",
            "ldr r3, [0x0002ad78]",
            "mov r1, r6",
            "mov r2, sl",
            "mov r0, r5",
            "add r3, pc, r3",
            "bl sym.imp.sprintf",
            "mov r0, r5",
            "bl sym.imp.system",
            "ldr r0, [0x0002ad7c]",
            "add r0, pc, r0",
            "b 0x2aca0",
            "cmp r3, 2",
            "bne 0x2aca4",
            "ldr r6, [0x0002ad80]",
            "add r5, sp, 0x40",
            "ldr r3, [0x0002ad84]",
            "mov r2, r8",
            "add r6, pc, r6",
            "mov r0, r5",
            "add r3, pc, r3",
            "mov r1, r6",
            "str r3, [sp]",
            "mov r3, r7",
            "bl sym.imp.sprintf",
            "mov r0, r5",
            "bl sym.imp.system",
            "ldr r3, [0x0002ad88]",
            "mov r1, r6",
            "mov r2, r8",
            "mov r0, r5",
            "add r3, pc, r3",
            "str r3, [sp]",
            "mov r3, r7",
            "bl sym.imp.sprintf",
            "mov r0, r5",
            "bl sym.imp.system",
            "ldr r0, [0x0002ad8c]",
            "add r0, pc, r0",
            "bl sym.imp.system",
            "cmp r7, 1",
            "mov r5, 0",
            "bne 0x2ace8",
            "ldr r3, [0x0002ad90]",
            "mov r0, r4",
            "str r5, [sp]",
            "mov r1, r5",
            "add r3, pc, r3",
            "mov r2, r5",
            "str r3, [sp, 0x10]",
            "mov r3, r5",
            "str r5, [sp, 4]",
            "str r5, [sp, 8]",
            "str r5, [sp, 0xc]",
            "bl loc.imp.sendSpeedTestStartStop",
            "mov r0, r5",
            "bl fcn.00008f44",
            "mov r0, r5",
            "add sp, sp, 0x144",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "loc.imp.sendSpeedTestStartStop": {
        "function_address": "0x00008728",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0xa64]!"
        ]
    },
    "fcn.00008f44": {
        "function_address": "0x00008f44",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x4fc]!"
        ]
    },
    "sym.wps_build_key_wrap_auth": {
        "function_address": "0x00033800",
        "instructions": [
            "push {r4, r5, lr}",
            "mov r4, r1",
            "sub sp, sp, 0x2c",
            "mov r1, 0x20",
            "ldr r2, [r4, 8]",
            "add r5, sp, 8",
            "ldr r3, [r4, 4]",
            "add r0, r0, 0xe4",
            "str r5, [sp]",
            "bl fcn.00008c2c",
            "mov r0, r4",
            "movw r1, 0x101e",
            "bl fcn.000331d0",
            "mov r0, r4",
            "mov r1, 8",
            "bl fcn.000331d0",
            "mov r0, r4",
            "mov r1, r5",
            "mov r2, 8",
            "bl fcn.00033208",
            "mov r0, 0",
            "add sp, sp, 0x2c",
            "pop {r4, r5, pc}"
        ]
    },
    "sym.zyEvent_APAUTOCONFIGSYNCEVENTID": {
        "function_address": "0x00019734",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, lr}",
            "mov sb, r0",
            "ldr r4, [0x00019980]",
            "sub sp, sp, 0x14",
            "ldr r3, [0x00019984]",
            "mov r8, r1",
            "add r4, pc, r4",
            "mov r7, r2",
            "ldr r6, [r4, r3]",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x197b0",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x157",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00019988]",
            "ldr r0, [0x0001998c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xd4",
            "bl sym.imp.printf",
            "ldr r0, sym.zyNetCtrl_WPS_setWPSConfig",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00019994]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x1980c",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0x158",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00019998]",
            "ldr r0, [0x0001999c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xd4",
            "bl sym.imp.printf",
            "ldr r0, [0x000199a0]",
            "mov r1, sb",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00019994]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x19868",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x159",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000199a4]",
            "ldr r0, [0x000199a8]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xd4",
            "bl sym.imp.printf",
            "ldr r0, [0x000199ac]",
            "mov r1, r8",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00019994]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x198c4",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x15a",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000199b0]",
            "ldr r0, [0x000199b4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xd4",
            "bl sym.imp.printf",
            "ldr r0, [0x000199b8]",
            "mov r1, r7",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00019994]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, 1",
            "mov r1, 0xc",
            "bl sym.imp.calloc",
            "subs r5, r0, 0",
            "bne 0x19930",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x19978",
            "bl sym.imp.time",
            "mov r3, 0x160",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000199bc]",
            "ldr r0, [0x000199c0]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xd4",
            "bl sym.imp.printf",
            "ldr r0, [0x000199c4]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00019994]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0x19978",
            "str sb, [r5]",
            "mov r3, 0",
            "str r3, [sp, 0xc]",
            "ldr r3, [0x000199c8]",
            "str r8, [r5, 4]",
            "str r7, [r5, 8]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x19968",
            "mov r0, 0xa",
            "mov r1, r5",
            "add r2, sp, 0xc",
            "blx r3",
            "mov r0, r5",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, lr}",
            "b sym.imp.free",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, pc}"
        ]
    },
    "sym.hmac_sha256_vector": {
        "function_address": "0x000342c0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "cmp r2, 5",
            "sub sp, sp, 0x98",
            "mov sl, r2",
            "str r0, [sp, 4]",
            "str r1, [sp]",
            "ldr sb, [sp, 0xb8]",
            "ldr r5, [sp, 0xbc]",
            "bls 0x342ec",
            "mvn r0, 0",
            "b 0x34424",
            "cmp r1, 0x40",
            "mov r8, r3",
            "bls 0x34324",
            "add r4, sp, 0x38",
            "mov r0, 1",
            "add r1, sp, 4",
            "mov r2, sp",
            "mov r3, r4",
            "bl fcn.00008b18",
            "cmp r0, 0",
            "blt 0x342e4",
            "str r4, [sp, 4]",
            "mov r3, 0x20",
            "str r3, [sp]",
            "add r4, sp, 0x58",
            "mov r1, 0",
            "mov r2, 0x40",
            "mov r0, r4",
            "bl sym.imp.memset",
            "ldr r1, [sp, 4]",
            "mov r0, r4",
            "ldr r2, [sp]",
            "bl sym.imp.memcpy",
            "mov r1, 0",
            "ldrb r3, [r4, r1]",
            "eor r3, r3, 0x36",
            "strb r3, [r4, r1]",
            "add r1, r1, 1",
            "cmp r1, 0x40",
            "bne 0x3434c",
            "str r4, [sp, 8]",
            "mov ip, 0",
            "lsl r2, sl, 2",
            "mov r3, ip",
            "str r1, [sp, 0x20]",
            "cmp ip, r2",
            "add r3, r3, 4",
            "add r7, sp, 8",
            "add r6, sp, 0x20",
            "beq 0x343a4",
            "ldr r1, [r8, ip]",
            "str r1, [r7, r3]",
            "ldr r1, [sb, ip]",
            "add ip, ip, 4",
            "str r1, [r6, r3]",
            "b 0x34378",
            "add r0, sl, 1",
            "mov r1, r7",
            "mov r2, r6",
            "mov r3, r5",
            "bl fcn.00008b18",
            "cmp r0, 0",
            "blt 0x342e4",
            "mov r1, 0",
            "mov r2, 0x40",
            "mov r0, r4",
            "bl sym.imp.memset",
            "ldr r1, [sp, 4]",
            "mov r0, r4",
            "ldr r2, [sp]",
            "bl sym.imp.memcpy",
            "mov r0, 0",
            "ldrb r3, [r4, r0]",
            "eor r3, r3, 0x5c",
            "strb r3, [r4, r0]",
            "add r0, r0, 1",
            "cmp r0, 0x40",
            "bne 0x343e4",
            "str r0, [sp, 0x20]",
            "mov r3, 0x20",
            "str r3, [sp, 0x24]",
            "mov r0, 2",
            "str r4, [sp, 8]",
            "mov r1, r7",
            "str r5, [sp, 0xc]",
            "mov r2, r6",
            "mov r3, r5",
            "bl fcn.00008b18",
            "add sp, sp, 0x98",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "sym.zyNetCtrl_getNeighborList": {
        "function_address": "0x00014628",
        "instructions": [
            "ldr r0, [0x00014cec]",
            "ldr r1, [0x00014cf0]",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x2a4",
            "add r0, pc, r0",
            "add r1, pc, r1",
            "ldr r4, [0x00014cf4]",
            "bl sym.imp.fopen",
            "subs fp, r0, 0",
            "add r4, pc, r4",
            "beq 0x14ce0",
            "add r1, sp, 0xa0",
            "mov r2, fp",
            "str r1, [sp, 0x24]",
            "mov r0, r1",
            "mov r1, 0x200",
            "bl sym.imp.fgets",
            "ldr r3, [0x00014cf8]",
            "add r3, pc, r3",
            "str r3, [sp, 0x28]",
            "ldr r3, [0x00014cfc]",
            "add r3, pc, r3",
            "add r3, r3, 0x50",
            "str r3, [sp, 0x34]",
            "add r0, sp, 0xa0",
            "mov r1, 0x200",
            "mov r2, fp",
            "bl sym.imp.fgets",
            "cmp r0, 0",
            "beq 0x149ec",
            "ldr r3, [sp, 0x28]",
            "add r1, sp, 0x7c",
            "str r1, [sp, 0x2c]",
            "mov r1, 0",
            "ldr r0, [r3]",
            "add r7, sp, 0x4c",
            "ldrh r2, [r3, 4]",
            "add r6, sp, 0x38",
            "ldrb r3, [r3, 6]",
            "add r5, sp, 0x3c",
            "str r0, [sp, 0x7c]",
            "add r0, sp, 0x83",
            "strh r2, [sp, 0x80]",
            "mov r2, 9",
            "strb r3, [sp, 0x82]",
            "bl sym.imp.memset",
            "ldr r1, [0x00014d00]",
            "add sl, sp, 0x8c",
            "str r5, [sp]",
            "add sb, sp, 0x40",
            "str sl, [sp, 4]",
            "add r8, sp, 0x5c",
            "str sb, [sp, 8]",
            "mov r3, r6",
            "str r8, [sp, 0xc]",
            "add r0, sp, 0xa0",
            "add r1, pc, r1",
            "mov r2, r7",
            "bl sym.imp.sscanf",
            "ldr r3, [0x00014d04]",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x14784",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r1, r0",
            "movw r3, 0x4cc",
            "ldr r0, [0x00014d08]",
            "mov r2, 4",
            "str r3, [sp]",
            "add r0, pc, r0",
            "ldr r3, [sp, 0x34]",
            "bl sym.imp.printf",
            "ldr r0, [0x00014d0c]",
            "mov r3, r5",
            "str sl, [sp]",
            "mov r1, r7",
            "str sb, [sp, 4]",
            "mov r2, r6",
            "str r8, [sp, 8]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00014d10]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "add r0, sp, 0x3c",
            "mov r1, 0",
            "mov r2, 0x10",
            "bl sym.imp.strtol",
            "tst r0, 0xff",
            "beq 0x14688",
            "ldr r1, [0x00014d14]",
            "add r5, sp, 0x44",
            "add r3, r5, 2",
            "add r0, sp, 0x8c",
            "str r3, [sp]",
            "add r3, r5, 3",
            "str r3, [sp, 4]",
            "add r3, sp, 0x48",
            "str r3, [sp, 8]",
            "add r3, r5, 5",
            "str r3, [sp, 0xc]",
            "mov r2, r5",
            "add r1, pc, r1",
            "add r3, r5, 1",
            "bl sym.imp.sscanf",
            "ldrb r6, [sp, 0x44]",
            "cmp r6, 0",
            "bne 0x14820",
            "ldrb r3, [sp, 0x45]",
            "cmp r3, 0",
            "bne 0x14820",
            "ldrb r3, [sp, 0x46]",
            "cmp r3, 0",
            "bne 0x14820",
            "ldrb r3, [sp, 0x47]",
            "cmp r3, 0",
            "bne 0x14820",
            "ldrb r3, [sp, 0x48]",
            "cmp r3, 0",
            "bne 0x14820",
            "ldrb r3, [sp, 0x49]",
            "cmp r3, 0",
            "beq 0x14688",
            "ldr r3, [0x00014d18]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "bgt 0x14844",
            "add r0, sp, 0x6c",
            "add r1, sp, 0x7c",
            "bl sym.imp.strcpy",
            "b 0x14910",
            "ldr r3, [0x00014d1c]",
            "mov r7, 0",
            "ldr r8, [0x00014d20]",
            "movw sb, 0x102",
            "ldr r3, [r4, r3]",
            "add r8, pc, r8",
            "ldr sl, [r3]",
            "ldr r3, [0x00014d24]",
            "add r3, pc, r3",
            "str r3, [sp, 0x30]",
            "cmp sl, 0",
            "beq 0x14908",
            "ldrb r2, [sl, 4]",
            "cmp r2, r6",
            "bne 0x14900",
            "ldrb r1, [sl, 5]",
            "ldrb r2, [sp, 0x45]",
            "cmp r1, r2",
            "bne 0x14900",
            "ldrb r1, [sl, 6]",
            "ldrb r2, [sp, 0x46]",
            "cmp r1, r2",
            "bne 0x14900",
            "ldrb r1, [sl, 7]",
            "ldrb r2, [sp, 0x47]",
            "cmp r1, r2",
            "bne 0x14900",
            "ldrb r1, [sl, 8]",
            "ldrb r2, [sp, 0x48]",
            "cmp r1, r2",
            "bne 0x14900",
            "ldrb r1, [sl, 9]",
            "ldrb r2, [sp, 0x49]",
            "cmp r1, r2",
            "bne 0x14900",
            "ldr r2, [sl, 0xc]",
            "cmp r2, 0x100",
            "addeq r7, r7, 1",
            "addeq r0, sp, 0x6c",
            "ldreq r1, [sp, 0x30]",
            "beq 0x148fc",
            "cmp r2, sb",
            "bne 0x14900",
            "add r7, r7, 1",
            "add r0, sp, 0x6c",
            "mov r1, r8",
            "bl sym.imp.strcpy",
            "ldr sl, [sl]",
            "b 0x1486c",
            "cmp r7, 0",
            "beq 0x14834",
            "ldr r3, [0x00014d28]",
            "ldr r7, [r4, r3]",
            "ldr r6, [r7]",
            "cmp r6, 0",
            "movne r8, r6",
            "movne r7, 0",
            "bne 0x14964",
            "mov r0, 1",
            "mov r1, 0x2c",
            "bl sym.imp.calloc",
            "subs r8, r0, 0",
            "beq 0x14ae8",
            "add r1, sp, 0x6c",
            "add r0, r8, 4",
            "bl sym.imp.strcpy",
            "ldm r5, {r0, r1}",
            "str r6, [r8]",
            "str r0, [r8, 0x14]",
            "strh r1, [r8, 0x18]",
            "str r8, [r7]",
            "b 0x149d4",
            "add r0, r8, 0x14",
            "mov r1, r5",
            "mov r2, 6",
            "bl sym.imp.memcmp",
            "ldr r8, [r8]",
            "cmp r0, 0",
            "addeq r7, r7, 1",
            "cmp r8, 0",
            "bne 0x14964",
            "cmp r7, 0",
            "bne 0x14688",
            "mov r0, 1",
            "mov r1, 0x2c",
            "bl sym.imp.calloc",
            "subs r8, r0, 0",
            "beq 0x14ae8",
            "add r1, sp, 0x6c",
            "add r0, r8, 4",
            "bl sym.imp.strcpy",
            "ldm r5, {r0, r1}",
            "str r7, [r8]",
            "str r0, [r8, 0x14]",
            "strh r1, [r8, 0x18]",
            "ldr r3, [r6]",
            "cmp r3, 0",
            "movne r6, r3",
            "bne 0x149c0",
            "str r8, [r6]",
            "ldr r3, [0x00014d2c]",
            "ldr r3, [r4, r3]",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "b 0x14688",
            "ldr r3, [0x00014d18]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "bgt 0x14a88",
            "mov r0, fp",
            "bl sym.imp.fclose",
            "ldr r3, [0x00014d28]",
            "ldr r3, [r4, r3]",
            "ldr r5, [r3]",
            "ldr r3, [0x00014d04]",
            "ldr r3, [r4, r3]",
            "ldrb r2, [r3]",
            "mov r8, r3",
            "ldr r3, [0x00014d2c]",
            "cmp r2, 3",
            "ldr r6, [r4, r3]",
            "bls 0x14c28",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x5ae",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00014d30]",
            "ldr r0, [0x00014d34]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x50",
            "bl sym.imp.printf",
            "ldr r0, [0x00014d38]",
            "ldr r1, [r6]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00014d10]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0x14c28",
            "ldr r3, [0x00014d1c]",
            "ldr sb, [0x00014d3c]",
            "ldr r8, [r4, r3]",
            "ldr r3, [0x00014d40]",
            "ldr sl, [0x00014d44]",
            "add r3, pc, r3",
            "ldr r5, [r8]",
            "add sb, pc, sb",
            "add sl, pc, sl",
            "str r3, [sp, 0x24]",
            "b 0x14ac0",
            "cmp r3, 0",
            "beq 0x14ba0",
            "ldr r5, [r5]",
            "cmp r5, 0",
            "beq 0x14a00",
            "ldr r3, [r8]",
            "cmp r3, 0",
            "bne 0x14b50",
            "mov r0, 1",
            "mov r1, 0x2c",
            "bl sym.imp.calloc",
            "subs r6, r0, 0",
            "bne 0x14af4",
            "mov r0, fp",
            "bl sym.imp.fclose",
            "b 0x14ce0",
            "ldr r3, [r5, 0xc]",
            "cmp r3, 0x100",
            "ldreq r1, [0x00014d48]",
            "addeq r0, r6, 4",
            "addeq r1, pc, r1",
            "beq 0x14b20",
            "movw r2, 0x102",
            "cmp r3, r2",
            "bne 0x14b24",
            "ldr r1, [sp, 0x24]",
            "add r0, r6, 4",
            "bl sym.imp.strcpy",
            "mov r3, r5",
            "ldr r0, [r3, 4]!",
            "str r0, [r6, 0x14]",
            "ldrh r3, [r3, 4]",
            "strh r3, [r6, 0x18]",
            "mov r3, 0",
            "str r3, [r6]",
            "ldr r3, [0x00014d28]",
            "ldr r3, [r4, r3]",
            "str r6, [r3]",
            "b 0x14c10",
            "ldr r3, [0x00014d28]",
            "add ip, r5, 4",
            "ldr r3, [r4, r3]",
            "ldr r6, [r3]",
            "mov r3, 0",
            "mov r7, r6",
            "cmp r7, 0",
            "beq 0x14ab4",
            "str r3, [sp, 0x20]",
            "add r0, r7, 0x14",
            "str ip, [sp, 0x1c]",
            "mov r1, ip",
            "mov r2, 6",
            "bl sym.imp.memcmp",
            "ldr r3, [sp, 0x20]",
            "cmp r0, 0",
            "ldr ip, [sp, 0x1c]",
            "ldr r7, [r7]",
            "addeq r3, r3, 1",
            "b 0x14b68",
            "mov r0, 1",
            "mov r1, 0x2c",
            "bl sym.imp.calloc",
            "subs r7, r0, 0",
            "beq 0x14ae8",
            "ldr r3, [r5, 0xc]",
            "cmp r3, 0x100",
            "addeq r0, r7, 4",
            "moveq r1, sl",
            "beq 0x14bdc",
            "movw r2, 0x102",
            "cmp r3, r2",
            "bne 0x14be0",
            "add r0, r7, 4",
            "mov r1, sb",
            "bl sym.imp.strcpy",
            "mov r3, r5",
            "ldr r0, [r3, 4]!",
            "str r0, [r7, 0x14]",
            "ldrh r3, [r3, 4]",
            "strh r3, [r7, 0x18]",
            "mov r3, 0",
            "str r3, [r7]",
            "ldr r3, [r6]",
            "cmp r3, 0",
            "movne r6, r3",
            "bne 0x14bfc",
            "str r7, [r6]",
            "ldr r3, [0x00014d2c]",
            "ldr r3, [r4, r3]",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "b 0x14abc",
            "ldr sl, [0x00014d4c]",
            "mov r1, 0",
            "ldr sb, [0x00014d50]",
            "add sl, pc, sl",
            "add sb, pc, sb",
            "add sl, sl, 0x50",
            "ldr r3, [r6]",
            "cmp r1, r3",
            "bge 0x14cdc",
            "ldrb r3, [r8]",
            "add r7, r1, 1",
            "cmp r3, 3",
            "bls 0x14cd0",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x5b8",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "mov r3, sl",
            "mov r0, sb",
            "bl sym.imp.printf",
            "ldrb r2, [r5, 0x15]",
            "mov r1, r7",
            "ldrb r3, [r5, 0x14]",
            "str r2, [sp]",
            "ldrb r2, [r5, 0x16]",
            "ldr r0, [0x00014d54]",
            "str r2, [sp, 4]",
            "ldrb r2, [r5, 0x17]",
            "add r0, pc, r0",
            "str r2, [sp, 8]",
            "ldrb r2, [r5, 0x18]",
            "str r2, [sp, 0xc]",
            "ldrb r2, [r5, 0x19]",
            "str r2, [sp, 0x10]",
            "add r2, r5, 4",
            "bl sym.imp.printf",
            "ldr r3, [0x00014d10]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r5, [r5]",
            "mov r1, r7",
            "b 0x14c40",
            "b 0x14ce4",
            "mov r0, 0",
            "add sp, sp, 0x2a4",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.FW_checkFWstate": {
        "function_address": "0x000276ec",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, lr}",
            "mov r5, 0",
            "ldr r4, [0x00027c28]",
            "sub sp, sp, 0x24c",
            "mov r1, r5",
            "mov r2, 0x3c",
            "str r5, [sp, 8]",
            "add r0, sp, 0xc",
            "add r4, pc, r4",
            "bl sym.imp.memset",
            "ldr r0, [0x00027c2c]",
            "ldr r1, [0x00027c30]",
            "add r0, pc, r0",
            "add r1, pc, r1",
            "bl sym.imp.fopen",
            "subs r6, r0, 0",
            "beq 0x27820",
            "ldr r8, [0x00027c34]",
            "add r7, sp, 8",
            "add r8, pc, r8",
            "mov r0, r7",
            "mov r1, 0x40",
            "mov r2, r6",
            "bl sym.imp.fgets",
            "subs sb, r0, 0",
            "beq 0x2777c",
            "mov r0, r7",
            "mov r1, r8",
            "mov r2, 0xc",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "bne 0x2773c",
            "ldrb r3, [sp, 0x15]",
            "cmp r3, 0x31",
            "moveq r5, 1",
            "b 0x2773c",
            "mov r0, r6",
            "bl sym.imp.fclose",
            "cmp r5, 0",
            "beq 0x27820",
            "ldr r3, [0x00027c38]",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x277f0",
            "mov r0, sb",
            "bl sym.imp.time",
            "movw r3, 0x403",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00027c3c]",
            "ldr r0, [0x00027c40]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x1e8",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x00027c44]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00027c48]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r1, 0",
            "mov r2, 0x1fc",
            "str r1, [sp, 0x48]",
            "add r0, sp, 0x4c",
            "bl sym.imp.memset",
            "ldr r1, [0x00027c4c]",
            "add r3, sp, 0x48",
            "mov r0, r3",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "bl loc.imp.Outputlog",
            "b 0x27c20",
            "ldr r3, [0x00027c50]",
            "ldr r5, [r4, r3]",
            "ldrb r6, [r5]",
            "cmp r6, 1",
            "bne 0x278d8",
            "ldr r3, [0x00027c38]",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x27898",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x40c",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00027c54]",
            "ldr r0, [0x00027c58]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x1e8",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x00027c5c]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00027c48]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r0, [r5]",
            "bl loc.imp.checkEXdeviceFWVersion",
            "cmp r0, 0",
            "bne 0x278c0",
            "ldr r0, [0x00027c60]",
            "mov r3, 2",
            "strb r3, [r5]",
            "add r0, pc, r0",
            "bl sym.imp.system",
            "bl loc.imp.updateFWUpgradeStatus",
            "bl loc.imp.checkEXdeviceFWStateIsReady",
            "cmp r0, 0",
            "bne 0x27c20",
            "bl loc.imp.removeallFWupgradelist",
            "bl loc.imp.updateFWUpgradeStatus",
            "b 0x27c20",
            "cmp r6, 2",
            "bne 0x27998",
            "ldr r3, [0x00027c38]",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x27944",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x422",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00027c64]",
            "ldr r0, [0x00027c68]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x1e8",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x00027c6c]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00027c48]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r0, [r5]",
            "bl loc.imp.checkEXdeviceFWVersion",
            "bl fcn.00008b78",
            "cmp r0, 0",
            "bne 0x27968",
            "bl loc.imp.checkEXdeviceFWStateIsReady",
            "cmp r0, 0",
            "bne 0x27c20",
            "b 0x27970",
            "bl loc.imp.sendEXdeviceReboot",
            "bl loc.imp.removeallFWupgradelist",
            "bl loc.imp.removeallFWupgradelist",
            "ldr r0, [0x00027c70]",
            "mov r3, 1",
            "strb r3, [r5]",
            "add r0, pc, r0",
            "bl sym.imp.system",
            "bl loc.imp.updateFWUpgradeStatus",
            "mov r0, 0",
            "bl fcn.00009238",
            "b 0x27c20",
            "cmp r6, 4",
            "bne 0x27c20",
            "ldr r3, [0x00027c38]",
            "ldr r7, [r4, r3]",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x27a04",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x442",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, r6",
            "ldr r3, [0x00027c74]",
            "ldr r0, [0x00027c78]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x1e8",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x00027c7c]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00027c48]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r0, [r5]",
            "bl loc.imp.checkEXdeviceFWVersion",
            "cmp r0, 0",
            "bne 0x27a18",
            "bl loc.imp.updateFWUpgradeStatus",
            "bl loc.imp.checkEXdeviceFWStateIsReady",
            "subs r5, r0, 0",
            "bne 0x27ae0",
            "bl loc.imp.updateFWUpgradeStatus",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x27a84",
            "mov r0, r5",
            "bl sym.imp.time",
            "movw r3, 0x455",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00027c80]",
            "ldr r0, [0x00027c84]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x1e8",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x00027c88]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00027c48]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r2, 0x1fc",
            "mov r1, 0",
            "str r1, [sp, 0x48]",
            "add r0, sp, 0x4c",
            "bl sym.imp.memset",
            "ldr r1, [0x00027c8c]",
            "add r3, sp, 0x48",
            "mov r0, r3",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "bl loc.imp.Outputlog",
            "ldr r0, [0x00027c90]",
            "add r0, pc, r0",
            "bl sym.imp.system",
            "ldr r0, [0x00027c94]",
            "add r0, pc, r0",
            "bl sym.imp.system",
            "ldr r0, [0x00027c98]",
            "add r0, pc, r0",
            "bl sym.imp.system",
            "ldr r0, [0x00027c9c]",
            "add r0, pc, r0",
            "bl sym.imp.system",
            "mov r0, 0",
            "bl sym.imp.time",
            "ldr r3, [0x00027ca0]",
            "mov r5, r0",
            "ldr r6, [r4, r3]",
            "ldr r3, [r6]",
            "rsb r3, r3, r0",
            "cmp r3, 0xf0",
            "ldrb r3, [r7]",
            "ble 0x27bc0",
            "cmp r3, 3",
            "bls 0x27b60",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x464",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00027ca4]",
            "ldr r0, [0x00027ca8]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x1e8",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x00027cac]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00027c48]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r2, 0x1fc",
            "mov r1, 0",
            "str r1, [sp, 0x48]",
            "add r0, sp, 0x4c",
            "bl sym.imp.memset",
            "ldr r1, [0x00027cb0]",
            "add r3, sp, 0x48",
            "mov r0, r3",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "bl loc.imp.Outputlog",
            "ldr r0, [0x00027cb4]",
            "add r0, pc, r0",
            "bl sym.imp.system",
            "ldr r0, [0x00027cb8]",
            "add r0, pc, r0",
            "bl sym.imp.system",
            "ldr r0, [0x00027cbc]",
            "add r0, pc, r0",
            "bl sym.imp.system",
            "ldr r0, [0x00027cc0]",
            "add r0, pc, r0",
            "bl sym.imp.system",
            "b 0x27c20",
            "cmp r3, 3",
            "bls 0x27c20",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0x470",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00027cc4]",
            "ldr r0, [0x00027cc8]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x1e8",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r1, [r6]",
            "ldr r0, [0x00027ccc]",
            "rsb r1, r1, r5",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00027c48]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "add sp, sp, 0x24c",
            "pop {r4, r5, r6, r7, r8, sb, pc}"
        ]
    },
    "loc.imp.checkEXdeviceFWVersion": {
        "function_address": "0x00008f68",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x4e4]!"
        ]
    },
    "loc.imp.checkEXdeviceFWStateIsReady": {
        "function_address": "0x00009010",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x474]!"
        ]
    },
    "fcn.00008b78": {
        "function_address": "0x00008b78",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x784]!"
        ]
    },
    "loc.imp.sendEXdeviceReboot": {
        "function_address": "0x0000967c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x2c]!"
        ]
    },
    "fcn.00009238": {
        "function_address": "0x00009238",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x304]!"
        ]
    },
    "sym.hmac_sha256": {
        "function_address": "0x0003442c",
        "instructions": [
            "push {r0, r1, r2, r3, r4, lr}",
            "str r3, [sp, 8]",
            "add r3, sp, 8",
            "str r3, [sp]",
            "ldr r3, [sp, 0x18]",
            "str r2, [sp, 0xc]",
            "mov r2, 1",
            "str r3, [sp, 4]",
            "add r3, sp, 0xc",
            "bl fcn.00008c08",
            "add sp, sp, 0x14",
            "pop {pc}"
        ]
    },
    "sym.security_SecurityCtrl_request": {
        "function_address": "0x0002d09c",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "mov r4, r0",
            "ldr r5, [0x0002d1b4]",
            "sub sp, sp, 0x1c",
            "ldr r3, [0x0002d1b8]",
            "mov r7, r1",
            "add r5, pc, r5",
            "mov r6, r2",
            "ldr r3, [r5, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x2d144",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0xcd",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002d1bc]",
            "ldr r0, [0x0002d1c0]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x73",
            "bl sym.imp.printf",
            "ldrb r0, [r4, 3]",
            "ldrb r3, [r4, 2]",
            "str r0, [sp]",
            "ldrb r0, [r4, 4]",
            "ldrb r1, [r4]",
            "str r0, [sp, 4]",
            "ldrb r0, [r4, 5]",
            "ldrb r2, [r4, 1]",
            "str r0, [sp, 8]",
            "ldr r0, [0x0002d1c4]",
            "str r7, [sp, 0xc]",
            "str r6, [sp, 0x10]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0002d1c8]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r2, r6",
            "mov r0, r4",
            "mov r1, r7",
            "bl fcn.000093e8",
            "subs r6, r0, 0",
            "bne 0x2d164",
            "bl fcn.00008cc8",
            "b 0x2d1a8",
            "ldr r0, [r6, 0x210]",
            "bl fcn.00008af4",
            "subs r5, r0, 0",
            "beq 0x2d1a8",
            "ldr r3, [r6, 0x210]",
            "ldr r0, [r3, 0x134]",
            "bl fcn.00008f74",
            "ldr r6, [r6, 0x210]",
            "mov r0, r5",
            "bl fcn.0000952c",
            "str r0, [r6, 0x134]",
            "mov r3, 1",
            "mov r0, r4",
            "ldmib r5, {r1, r2}",
            "bl loc.imp.sendSecurityCtrlMessage",
            "mov r0, 0",
            "b 0x2d1ac",
            "mov r0, 0x10",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.000093e8": {
        "function_address": "0x000093e8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x1e4]!"
        ]
    },
    "fcn.00008cc8": {
        "function_address": "0x00008cc8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x6a4]!"
        ]
    },
    "fcn.00008af4": {
        "function_address": "0x00008af4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x7dc]!"
        ]
    },
    "fcn.0000952c": {
        "function_address": "0x0000952c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x10c]!"
        ]
    },
    "loc.imp.sendSecurityCtrlMessage": {
        "function_address": "0x00009568",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0xe4]!"
        ]
    },
    "sym.reSendRenewbySynclist": {
        "function_address": "0x0000f6fc",
        "instructions": [
            "push {r3, lr}",
            "ldr r3, [0x0000f728]",
            "ldr r2, [0x0000f72c]",
            "add r3, pc, r3",
            "ldr r3, [r3, r2]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "bne 0xf720",
            "bl fcn.00009670",
            "mov r0, 0",
            "pop {r3, pc}"
        ]
    },
    "fcn.00009670": {
        "function_address": "0x00009670",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x34]!"
        ]
    },
    "sym.outputlogData": {
        "function_address": "0x000109e0",
        "instructions": [
            "push {r4, r5, lr}",
            "subs r5, r0, 0",
            "sub sp, sp, 0x204",
            "beq 0x10a20",
            "mov r1, 0",
            "mov r2, 0x1fc",
            "str r1, [sp]",
            "add r0, sp, 4",
            "bl sym.imp.memset",
            "ldr r1, [0x00010a28]",
            "mov r0, sp",
            "mov r2, r5",
            "add r1, pc, r1",
            "bl sym.imp.sprintf",
            "mov r0, sp",
            "bl sym.imp.system",
            "add sp, sp, 0x204",
            "pop {r4, r5, pc}"
        ]
    },
    "sym.aes_encrypt_init": {
        "function_address": "0x00037c9c",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r6, r0",
            "mov r0, 0xf4",
            "mov r5, r1",
            "bl sym.imp.malloc",
            "subs r4, r0, 0",
            "beq 0x37cd4",
            "mov r1, r6",
            "lsl r2, r5, 3",
            "bl fcn.00009088",
            "cmp r0, 0",
            "bge 0x37cdc",
            "mov r0, r4",
            "bl sym.imp.free",
            "mov r0, 0",
            "pop {r4, r5, r6, pc}",
            "str r0, [r4, 0xf0]",
            "mov r0, r4",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.00009088": {
        "function_address": "0x00009088",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x424]!"
        ]
    },
    "sym.zyNetCtrl_WPS_clearTimeoutList": {
        "function_address": "0x0001e940",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r0, 0",
            "ldr r5, [0x0001ebb4]",
            "sub sp, sp, 0x24",
            "bl sym.imp.time",
            "add r5, pc, r5",
            "ldr r3, [0x0001ebb8]",
            "str r0, [sp, 0x14]",
            "ldr r3, [r5, r3]",
            "ldr r7, [r3]",
            "cmp r7, 0",
            "bne 0x1e978",
            "mov r0, 0",
            "b 0x1ebac",
            "ldr r3, [0x0001ebbc]",
            "mov r8, 0",
            "ldr fp, [0x0001ebc0]",
            "ldr r3, [r5, r3]",
            "ldr r2, [0x0001ebc4]",
            "ldr r4, [r3]",
            "ldr r3, [0x0001ebc8]",
            "add fp, pc, fp",
            "add r3, pc, r3",
            "add r2, pc, r2",
            "add r3, r3, 0x1f4",
            "str r2, [sp, 0x18]",
            "add r3, r3, 3",
            "str r3, [sp, 0x1c]",
            "cmp r8, r7",
            "bge 0x1e970",
            "ldr r3, [r4, 0x18]",
            "ldr r2, [sp, 0x14]",
            "rsb r3, r3, r2",
            "cmp r3, 0xe",
            "ble 0x1eb9c",
            "cmp r7, 1",
            "mov r0, 6",
            "mov r1, 1",
            "movle sb, r4",
            "ldrgt sb, [r4]",
            "bl sym.imp.calloc",
            "subs r6, r0, 0",
            "bne 0x1ea50",
            "ldr r3, [0x0001ebcc]",
            "ldr r3, [r5, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x1eba8",
            "bl sym.imp.time",
            "movw r3, 0x413",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001ebd0]",
            "ldr r0, [0x0001ebd4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x1f4",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x0001ebd8]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0001ebdc]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0x1eba8",
            "mov r0, 6",
            "mov r1, 1",
            "bl sym.imp.calloc",
            "subs sl, r0, 0",
            "bne 0x1ead0",
            "ldr r3, [0x0001ebcc]",
            "ldr r3, [r5, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x1eac4",
            "bl sym.imp.time",
            "movw r3, 0x419",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001ebe0]",
            "ldr r0, [0x0001ebe4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x1f4",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x0001ebe8]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0001ebdc]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, r6",
            "bl fcn.00008cec",
            "b 0x1eba8",
            "mov r2, r4",
            "mov r3, 0",
            "add r1, r4, r3",
            "add r2, r2, 1",
            "ldrb r1, [r1, 4]",
            "strb r1, [r6, r3]",
            "ldrb r1, [r2, 9]",
            "strb r1, [sl, r3]",
            "add r3, r3, 1",
            "cmp r3, 6",
            "bne 0x1ead8",
            "ldr r3, [0x0001ebcc]",
            "ldr r3, [r5, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x1eb70",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x422",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [sp, 0x1c]",
            "ldr r0, [sp, 0x18]",
            "bl sym.imp.printf",
            "ldrb r0, [sl, 3]",
            "ldrb r3, [sl, 2]",
            "ldrb r1, [sl]",
            "ldrb r2, [sl, 1]",
            "str r0, [sp]",
            "ldrb r0, [sl, 4]",
            "str r0, [sp, 4]",
            "ldrb r0, [sl, 5]",
            "str r0, [sp, 8]",
            "mov r0, fp",
            "bl sym.imp.printf",
            "ldr r3, [0x0001ebdc]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [r4, 0x14]",
            "mov r1, sl",
            "mov r0, r6",
            "mov r4, sb",
            "ldrb r2, [r3]",
            "bl fcn.000091b4",
            "mov r0, r6",
            "bl fcn.00008cec",
            "mov r0, sl",
            "bl fcn.00008cec",
            "b 0x1eba0",
            "ldr r4, [r4]",
            "add r8, r8, 1",
            "b 0x1e9b0",
            "mov r0, 0x10",
            "add sp, sp, 0x24",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.000091b4": {
        "function_address": "0x000091b4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x35c]!"
        ]
    },
    "sym.notifyPBJoinMsgReceived": {
        "function_address": "0x0000ee20",
        "instructions": [
            "push {r0, r1, r2, r3, r4, r5, r6, lr}",
            "mov r4, r0",
            "ldr r5, [0x0000f104]",
            "ldr r3, [0x0000f108]",
            "add r5, pc, r5",
            "ldr r6, [r5, r3]",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xee90",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0xa4f",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000f10c]",
            "ldr r0, [0x0000f110]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x2e4",
            "bl sym.imp.printf",
            "ldr r0, [0x0000f114]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000f118]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xef0c",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0xa50",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000f11c]",
            "ldr r0, [0x0000f120]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x2e4",
            "bl sym.imp.printf",
            "ldrb r0, [r4, 3]",
            "ldrb r3, [r4, 2]",
            "str r0, [sp]",
            "ldrb r0, [r4, 4]",
            "ldrb r1, [r4]",
            "str r0, [sp, 4]",
            "ldrb r0, [r4, 5]",
            "ldrb r2, [r4, 1]",
            "str r0, [sp, 8]",
            "ldr r0, [0x0000f124]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000f118]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xef88",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0xa51",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000f128]",
            "ldr r0, [0x0000f12c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x2e4",
            "bl sym.imp.printf",
            "ldrb r0, [r4, 9]",
            "ldrb r3, [r4, 8]",
            "str r0, [sp]",
            "ldrb r0, [r4, 0xa]",
            "ldrb r1, [r4, 6]",
            "str r0, [sp, 4]",
            "ldrb r0, [r4, 0xb]",
            "ldrb r2, [r4, 7]",
            "str r0, [sp, 8]",
            "ldr r0, [0x0000f130]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000f118]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xefe4",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0xa52",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000f134]",
            "ldr r0, [0x0000f138]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x2e4",
            "bl sym.imp.printf",
            "ldr r0, [0x0000f13c]",
            "ldrh r1, [r4, 0xc]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000f118]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xf060",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0xa53",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000f140]",
            "ldr r0, [0x0000f144]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x2e4",
            "bl sym.imp.printf",
            "ldrb r0, [r4, 0x11]",
            "ldrb r3, [r4, 0x10]",
            "str r0, [sp]",
            "ldrb r0, [r4, 0x12]",
            "ldrb r1, [r4, 0xe]",
            "str r0, [sp, 4]",
            "ldrb r0, [r4, 0x13]",
            "ldrb r2, [r4, 0xf]",
            "str r0, [sp, 8]",
            "ldr r0, [0x0000f148]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000f118]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xf0dc",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0xa54",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000f14c]",
            "ldr r0, [0x0000f150]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x2e4",
            "bl sym.imp.printf",
            "ldrb r0, [r4, 0x17]",
            "ldrb r3, [r4, 0x16]",
            "str r0, [sp]",
            "ldrb r0, [r4, 0x18]",
            "ldrb r1, [r4, 0x14]",
            "str r0, [sp, 4]",
            "ldrb r0, [r4, 0x19]",
            "ldrb r2, [r4, 0x15]",
            "str r0, [sp, 8]",
            "ldr r0, [0x0000f154]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000f118]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x0000f158]",
            "mov r0, 2",
            "ldr r3, [r5, r3]",
            "ldr r1, [r3]",
            "bl fcn.00008980",
            "cmp r0, 0",
            "movne r0, 0x10",
            "moveq r0, 0",
            "add sp, sp, 0x10",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.wps_parse_msg": {
        "function_address": "0x0002e0a4",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r5, r0",
            "mov r4, r1",
            "mov r0, r1",
            "mov r2, 0x1e8",
            "mov r1, 0",
            "bl sym.imp.memset",
            "ldmib r5, {r5, lr}",
            "mov r0, 0",
            "movw r6, 0x1027",
            "add r5, lr, r5",
            "movw sb, 0x1057",
            "movw sl, 0x1053",
            "movw fp, 0x1054",
            "cmp lr, r5",
            "bhs 0x2e87c",
            "rsb r3, lr, r5",
            "cmp r3, 3",
            "ble 0x2e884",
            "ldrb r3, [lr, 1]",
            "ldrb r1, [lr]",
            "ldrb r2, [lr, 2]",
            "orr r1, r3, r1, lsl 8",
            "ldrb r3, [lr, 3]",
            "orr r3, r3, r2, lsl 8",
            "add r2, lr, 4",
            "rsb ip, r2, r5",
            "cmp r3, ip",
            "ble 0x2e134",
            "and r1, r1, 0xff00",
            "cmp r1, 0x1000",
            "beq 0x2e884",
            "cmp r0, r6",
            "bne 0x2e884",
            "add lr, lr, 1",
            "b 0x2e0dc",
            "orrs r0, r3, r1",
            "bne 0x2e164",
            "cmp r0, ip",
            "bge 0x2e150",
            "ldrb r7, [r2, r0]",
            "cmp r7, 0",
            "beq 0x2e15c",
            "cmp r0, ip",
            "bne 0x2e164",
            "b 0x2e87c",
            "add r0, r0, 1",
            "b 0x2e13c",
            "cmp r1, r6",
            "beq 0x2e6f8",
            "bhi 0x2e2c4",
            "movw r0, 0x1012",
            "cmp r1, r0",
            "beq 0x2e500",
            "bhi 0x2e218",
            "movw r0, 0x1008",
            "cmp r1, r0",
            "beq 0x2e4a0",
            "bhi 0x2e1d8",
            "movw r0, 0x1003",
            "cmp r1, r0",
            "beq 0x2e604",
            "bhi 0x2e1bc",
            "movw r0, 0x1001",
            "cmp r1, r0",
            "beq 0x2e858",
            "add r0, r0, 1",
            "cmp r1, r0",
            "beq 0x2e4e0",
            "b 0x2e88c",
            "movw r0, 0x1004",
            "cmp r1, r0",
            "beq 0x2e470",
            "add r0, r0, 1",
            "cmp r1, r0",
            "beq 0x2e564",
            "b 0x2e88c",
            "movw r0, 0x100e",
            "cmp r1, r0",
            "beq 0x2e6cc",
            "bhi 0x2e204",
            "movw r0, 0x1009",
            "cmp r1, r0",
            "beq 0x2e4f0",
            "add r0, r0, 4",
            "cmp r1, r0",
            "beq 0x2e490",
            "b 0x2e88c",
            "movw r0, 0x1010",
            "cmp r1, r0",
            "beq 0x2e480",
            "bls 0x2e614",
            "b 0x2e6a8",
            "movw r0, 0x101e",
            "cmp r1, r0",
            "beq 0x2e5f4",
            "bhi 0x2e274",
            "movw r0, 0x1016",
            "cmp r1, r0",
            "beq 0x2e5d4",
            "bhi 0x2e254",
            "movw r0, 0x1014",
            "cmp r1, r0",
            "beq 0x2e594",
            "add r0, r0, 1",
            "cmp r1, r0",
            "beq 0x2e5a4",
            "b 0x2e88c",
            "movw r0, 0x1018",
            "cmp r1, r0",
            "beq 0x2e6c0",
            "blo 0x2e5e4",
            "add r0, r0, 2",
            "cmp r1, r0",
            "beq 0x2e430",
            "b 0x2e88c",
            "movw r0, 0x1022",
            "cmp r1, r0",
            "beq 0x2e420",
            "bhi 0x2e2a4",
            "movw r0, 0x1020",
            "cmp r1, r0",
            "beq 0x2e644",
            "add r0, r0, 1",
            "cmp r1, r0",
            "streq r2, [r4, 0xac]",
            "streq r3, [r4, 0xb0]",
            "b 0x2e88c",
            "movw r0, 0x1024",
            "cmp r1, r0",
            "beq 0x2e690",
            "blo 0x2e684",
            "add r0, r0, 2",
            "cmp r1, r0",
            "beq 0x2e624",
            "b 0x2e88c",
            "movw r0, 0x1041",
            "cmp r1, r0",
            "beq 0x2e654",
            "bhi 0x2e36c",
            "movw r0, 0x103a",
            "cmp r1, r0",
            "beq 0x2e664",
            "bhi 0x2e32c",
            "movw r0, 0x102d",
            "cmp r1, r0",
            "beq 0x2e544",
            "bhi 0x2e310",
            "movw r0, 0x1028",
            "cmp r1, r0",
            "beq 0x2e634",
            "add r0, r0, 4",
            "cmp r1, r0",
            "beq 0x2e510",
            "b 0x2e88c",
            "movw r0, 0x1032",
            "cmp r1, r0",
            "beq 0x2e6b4",
            "add r0, r0, 7",
            "cmp r1, r0",
            "beq 0x2e440",
            "b 0x2e88c",
            "movw r0, 0x103d",
            "cmp r1, r0",
            "beq 0x2e574",
            "bhi 0x2e358",
            "movw r0, 0x103b",
            "cmp r1, r0",
            "beq 0x2e674",
            "add r0, r0, 1",
            "cmp r1, r0",
            "beq 0x2e4d0",
            "b 0x2e88c",
            "movw r0, 0x103f",
            "cmp r1, r0",
            "beq 0x2e5b4",
            "bls 0x2e584",
            "b 0x2e5c4",
            "movw r0, 0x104a",
            "cmp r1, r0",
            "beq 0x2e410",
            "bhi 0x2e3c8",
            "movw r0, 0x1045",
            "cmp r1, r0",
            "beq 0x2e6ec",
            "bhi 0x2e3a8",
            "movw r0, 0x1042",
            "cmp r1, r0",
            "beq 0x2e69c",
            "add r0, r0, 2",
            "cmp r1, r0",
            "beq 0x2e554",
            "b 0x2e88c",
            "movw r0, 0x1048",
            "cmp r1, r0",
            "beq 0x2e460",
            "bhi 0x2e754",
            "movw r0, 0x1047",
            "cmp r1, r0",
            "beq 0x2e450",
            "b 0x2e88c",
            "movw r0, 0x1055",
            "cmp r1, r0",
            "beq 0x2e738",
            "bhi 0x2e3ec",
            "cmp r1, sl",
            "beq 0x2e4b0",
            "cmp r1, fp",
            "beq 0x2e4c0",
            "b 0x2e88c",
            "movw r0, 0x106a",
            "cmp r1, r0",
            "beq 0x2e714",
            "movw r0, 0xff01",
            "cmp r1, r0",
            "beq 0x2e868",
            "cmp r1, sb",
            "bne 0x2e88c",
            "b 0x2e704",
            "cmp r3, 1",
            "bne 0x2e884",
            "str r2, [r4]",
            "b 0x2e88c",
            "cmp r3, 1",
            "bne 0x2e884",
            "str r2, [r4, 8]",
            "b 0x2e88c",
            "cmp r3, 0x10",
            "bne 0x2e884",
            "str r2, [r4, 0xc]",
            "b 0x2e88c",
            "cmp r3, 0x10",
            "bne 0x2e884",
            "str r2, [r4, 0x10]",
            "b 0x2e88c",
            "cmp r3, 0x10",
            "bne 0x2e884",
            "str r2, [r4, 0x18]",
            "b 0x2e88c",
            "cmp r3, 0x10",
            "bne 0x2e884",
            "str r2, [r4, 0x14]",
            "b 0x2e88c",
            "cmp r3, 2",
            "bne 0x2e884",
            "str r2, [r4, 0x1c]",
            "b 0x2e88c",
            "cmp r3, 2",
            "bne 0x2e884",
            "str r2, [r4, 0x20]",
            "b 0x2e88c",
            "cmp r3, 1",
            "bne 0x2e884",
            "str r2, [r4, 0x24]",
            "b 0x2e88c",
            "cmp r3, 2",
            "bne 0x2e884",
            "str r2, [r4, 0x28]",
            "b 0x2e88c",
            "cmp r3, 2",
            "bne 0x2e884",
            "str r2, [r4, 0x2c]",
            "b 0x2e88c",
            "cmp r3, 8",
            "bne 0x2e884",
            "str r2, [r4, 0x30]",
            "b 0x2e88c",
            "cmp r3, 1",
            "bne 0x2e884",
            "str r2, [r4, 0x34]",
            "b 0x2e88c",
            "cmp r3, 2",
            "bne 0x2e884",
            "str r2, [r4, 0x38]",
            "b 0x2e88c",
            "cmp r3, 2",
            "bne 0x2e884",
            "str r2, [r4, 0x3c]",
            "b 0x2e88c",
            "cmp r3, 2",
            "bne 0x2e884",
            "str r2, [r4, 0x40]",
            "b 0x2e88c",
            "sub r0, r3, 0x16",
            "cmp r0, 0x20",
            "bhi 0x2e884",
            "cmp r3, 0x25",
            "bhi 0x2e538",
            "ldrb r0, [lr, 0x18]",
            "ldrb ip, [lr, 0x19]",
            "orr r0, ip, r0, lsl 8",
            "cmp r0, 7",
            "bne 0x2e884",
            "str r2, [r4, 0x104]",
            "str r3, [r4, 0x108]",
            "b 0x2e88c",
            "cmp r3, 4",
            "bne 0x2e884",
            "str r2, [r4, 0x44]",
            "b 0x2e88c",
            "cmp r3, 1",
            "bne 0x2e884",
            "str r2, [r4, 0x48]",
            "b 0x2e88c",
            "cmp r3, 8",
            "bne 0x2e884",
            "str r2, [r4, 0x4c]",
            "b 0x2e88c",
            "cmp r3, 0x20",
            "bne 0x2e884",
            "str r2, [r4, 0x50]",
            "b 0x2e88c",
            "cmp r3, 0x20",
            "bne 0x2e884",
            "str r2, [r4, 0x54]",
            "b 0x2e88c",
            "cmp r3, 0x20",
            "bne 0x2e884",
            "str r2, [r4, 0x58]",
            "b 0x2e88c",
            "cmp r3, 0x20",
            "bne 0x2e884",
            "str r2, [r4, 0x5c]",
            "b 0x2e88c",
            "cmp r3, 0x10",
            "bne 0x2e884",
            "str r2, [r4, 0x60]",
            "b 0x2e88c",
            "cmp r3, 0x10",
            "bne 0x2e884",
            "str r2, [r4, 0x64]",
            "b 0x2e88c",
            "cmp r3, 0x10",
            "bne 0x2e884",
            "str r2, [r4, 0x68]",
            "b 0x2e88c",
            "cmp r3, 0x10",
            "bne 0x2e884",
            "str r2, [r4, 0x6c]",
            "b 0x2e88c",
            "cmp r3, 8",
            "bne 0x2e884",
            "str r2, [r4, 0x70]",
            "b 0x2e88c",
            "cmp r3, 2",
            "bne 0x2e884",
            "str r2, [r4, 0x74]",
            "b 0x2e88c",
            "cmp r3, 2",
            "bne 0x2e884",
            "str r2, [r4, 0x78]",
            "b 0x2e88c",
            "cmp r3, 1",
            "bne 0x2e884",
            "str r2, [r4, 0x7c]",
            "b 0x2e88c",
            "cmp r3, 1",
            "bne 0x2e884",
            "str r2, [r4, 0x80]",
            "b 0x2e88c",
            "cmp r3, 6",
            "bne 0x2e884",
            "str r2, [r4, 0x84]",
            "b 0x2e88c",
            "cmp r3, 1",
            "bne 0x2e884",
            "str r2, [r4, 0x88]",
            "b 0x2e88c",
            "cmp r3, 1",
            "bne 0x2e884",
            "str r2, [r4, 0x8c]",
            "b 0x2e88c",
            "cmp r3, 1",
            "bne 0x2e884",
            "str r2, [r4, 0x90]",
            "b 0x2e88c",
            "str r2, [r4, 0xb4]",
            "str r3, [r4, 0xb8]",
            "b 0x2e88c",
            "str r2, [r4, 0xbc]",
            "str r3, [r4, 0xc0]",
            "b 0x2e88c",
            "str r2, [r4, 0xc4]",
            "str r3, [r4, 0xc8]",
            "b 0x2e88c",
            "str r2, [r4, 0xcc]",
            "str r3, [r4, 0xd0]",
            "b 0x2e88c",
            "str r2, [r4, 0xd4]",
            "str r3, [r4, 0xd8]",
            "b 0x2e88c",
            "str r2, [r4, 0xdc]",
            "str r3, [r4, 0xe0]",
            "b 0x2e88c",
            "ldr r0, [r4, 0x15c]",
            "cmp r0, 9",
            "addls ip, r4, r0, lsl 2",
            "addls r0, r0, 1",
            "strls r2, [ip, 0x10c]",
            "strls r3, [ip, 0x134]",
            "strls r0, [r4, 0x15c]",
            "b 0x2e88c",
            "str r2, [r4, 0xe4]",
            "str r3, [r4, 0xe8]",
            "b 0x2e88c",
            "str r2, [r4, 0xec]",
            "str r3, [r4, 0xf0]",
            "b 0x2e88c",
            "cmp r3, 1",
            "bne 0x2e884",
            "str r2, [r4, 0x94]",
            "b 0x2e88c",
            "cmp r3, 8",
            "bne 0x2e884",
            "ldr r0, [r4, 0x188]",
            "cmp r0, 9",
            "addls ip, r0, 0x58",
            "addls r0, r0, 1",
            "strls r2, [r4, ip, lsl 2]",
            "strls r0, [r4, 0x188]",
            "b 0x2e88c",
            "cmp r3, 0x80",
            "bhi 0x2e884",
            "tst r3, 7",
            "bne 0x2e884",
            "str r2, [r4, 0xfc]",
            "str r3, [r4, 0x100]",
            "b 0x2e88c",
            "cmp r3, 2",
            "bls 0x2e88c",
            "ldrb ip, [lr, 5]",
            "ldrb r0, [lr, 4]",
            "lsl ip, ip, 8",
            "orr ip, ip, r0, lsl 16",
            "ldrb r0, [lr, 6]",
            "orr ip, ip, r0",
            "movw r0, 0x372a",
            "cmp ip, r0",
            "bne 0x2e82c",
            "sub r7, r3, 3",
            "add lr, lr, 7",
            "uxtah r7, lr, r7",
            "add r0, lr, 2",
            "cmp r7, r0",
            "blo 0x2e88c",
            "ldrb ip, [lr, 1]",
            "ldrb r8, [lr]",
            "add lr, r0, ip",
            "cmp lr, r7",
            "bhi 0x2e88c",
            "cmp r8, 5",
            "addls pc, pc, r8, lsl 2",
            "b 0x2e78c",
            "b 0x2e7d0",
            "b 0x2e7e0",
            "b 0x2e7ec",
            "b 0x2e7fc",
            "b 0x2e80c",
            "b 0x2e81c",
            "cmp ip, 1",
            "bne 0x2e884",
            "str r0, [r4, 4]",
            "b 0x2e78c",
            "str r0, [r4, 0xf4]",
            "str ip, [r4, 0xf8]",
            "b 0x2e78c",
            "cmp ip, 1",
            "bne 0x2e884",
            "str r0, [r4, 0x9c]",
            "b 0x2e78c",
            "cmp ip, 1",
            "bne 0x2e884",
            "str r0, [r4, 0xa0]",
            "b 0x2e78c",
            "cmp ip, 1",
            "bne 0x2e884",
            "str r0, [r4, 0x98]",
            "b 0x2e78c",
            "cmp ip, 2",
            "bne 0x2e884",
            "str r0, [r4, 0xa8]",
            "b 0x2e78c",
            "cmp r3, 0x400",
            "bhi 0x2e884",
            "ldr r0, [r4, 0x1dc]",
            "cmp r0, 9",
            "bhi 0x2e884",
            "add ip, r4, r0, lsl 2",
            "add r0, r0, 1",
            "str r2, [ip, 0x18c]",
            "str r3, [ip, 0x1b4]",
            "str r0, [r4, 0x1dc]",
            "b 0x2e88c",
            "cmp r3, 2",
            "bne 0x2e884",
            "str r2, [r4, 0xa4]",
            "b 0x2e88c",
            "str r3, [r4, 0x1e4]",
            "cmp r3, 0",
            "beq 0x2e884",
            "str r2, [r4, 0x1e0]",
            "b 0x2e88c",
            "mov r0, 0",
            "pop {r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "mvn r0, 0",
            "pop {r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "add lr, r2, r3",
            "mov r0, r1",
            "b 0x2e0dc"
        ]
    },
    "sym.wps_build_device_attrs": {
        "function_address": "0x000313ac",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r5, r0",
            "mov r4, r1",
            "bl fcn.00009304",
            "cmp r0, 0",
            "beq 0x313cc",
            "mvn r0, 0",
            "pop {r3, r4, r5, pc}",
            "mov r0, r5",
            "mov r1, r4",
            "bl fcn.0000874c",
            "cmp r0, 0",
            "bne 0x313c4",
            "mov r0, r5",
            "mov r1, r4",
            "bl fcn.00009154",
            "cmp r0, 0",
            "bne 0x313c4",
            "mov r0, r5",
            "mov r1, r4",
            "bl fcn.00008a70",
            "cmp r0, 0",
            "bne 0x313c4",
            "mov r0, r5",
            "mov r1, r4",
            "bl fcn.000092a4",
            "cmp r0, 0",
            "bne 0x313c4",
            "mov r0, r5",
            "mov r1, r4",
            "bl fcn.00008a94",
            "adds r0, r0, 0",
            "mvnne r0, 0",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.00009304": {
        "function_address": "0x00009304",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x27c]!"
        ]
    },
    "fcn.0000874c": {
        "function_address": "0x0000874c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0xa4c]!"
        ]
    },
    "fcn.00009154": {
        "function_address": "0x00009154",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x39c]!"
        ]
    },
    "fcn.00008a70": {
        "function_address": "0x00008a70",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x834]!"
        ]
    },
    "fcn.000092a4": {
        "function_address": "0x000092a4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x2bc]!"
        ]
    },
    "fcn.00008a94": {
        "function_address": "0x00008a94",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x81c]!"
        ]
    },
    "sym.FW_getDownloanURL": {
        "function_address": "0x00026f80",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x410",
            "ldr r4, [0x00027440]",
            "sub sp, sp, 0xc",
            "mov r7, r3",
            "mov r8, r0",
            "add r4, pc, r4",
            "mov sl, r1",
            "ldr r3, [0x00027444]",
            "str r2, [sp, 0x10]",
            "ldr r6, [r4, r3]",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x27004",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x644",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00027448]",
            "ldr r0, [0x0002744c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x1a8",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "mov r0, 0xa",
            "bl sym.imp.putchar",
            "ldr r3, [0x00027450]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x00027454]",
            "ldr r3, [r4, r3]",
            "ldr r5, [r3]",
            "cmp r5, 0",
            "movne r0, r8",
            "bne 0x27294",
            "str r5, [sp, 0x18]",
            "mov r1, r5",
            "mov r2, 0x7c",
            "add r0, sp, 0x1c",
            "bl sym.imp.memset",
            "str r5, [sp, 0x98]",
            "mov r1, r5",
            "mov r2, 0x7c",
            "add r0, sp, 0x9c",
            "bl sym.imp.memset",
            "str r5, [sp, 0x118]",
            "mov r1, r5",
            "mov r2, 0x7c",
            "add r0, sp, 0x11c",
            "bl sym.imp.memset",
            "str r5, [sp, 0x218]",
            "mov r1, r5",
            "mov r2, 0xfc",
            "add r0, sp, 0x21c",
            "bl sym.imp.memset",
            "str r7, [sp]",
            "add r3, sp, 0x98",
            "str r3, [sp, 0x14]",
            "add r5, sp, 0x18",
            "mov r0, r3",
            "mov r1, r5",
            "ldr r3, [sp, 0x10]",
            "add r2, sp, 0x118",
            "bl fcn.00009430",
            "subs r1, r0, 0",
            "bne 0x27368",
            "str r1, [sp, 0x198]",
            "mov r2, 0x7c",
            "add r0, sp, 0x19c",
            "add fp, sp, 0x198",
            "bl sym.imp.memset",
            "mov r0, fp",
            "bl fcn.00009244",
            "ldr r0, [sp, 0x10]",
            "mov r1, r7",
            "bl sym.imp.strcmp",
            "subs ip, r0, 0",
            "bne 0x271bc",
            "str ip, [sp, 0x318]",
            "mov r1, ip",
            "str ip, [sp, 0xc]",
            "mov r2, 0xfc",
            "add r0, sp, 0x31c",
            "add sb, sp, 0x318",
            "bl sym.imp.memset",
            "ldr r1, [0x00027458]",
            "mov r3, r5",
            "ldr r2, [0x0002745c]",
            "mov r0, sb",
            "add r1, pc, r1",
            "add r2, pc, r2",
            "bl sym.imp.sprintf",
            "ldrb r3, [r6]",
            "ldr ip, [sp, 0xc]",
            "cmp r3, 3",
            "bls 0x27164",
            "mov r0, ip",
            "bl sym.imp.time",
            "movw r3, 0x664",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00027460]",
            "ldr r0, [0x00027464]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x1a8",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x00027468]",
            "mov r1, sb",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00027450]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r1, [0x0002746c]",
            "mov r0, sb",
            "add r1, pc, r1",
            "bl sym.imp.fopen",
            "subs r3, r0, 0",
            "beq 0x271bc",
            "str r3, [sp, 0xc]",
            "mov r1, sb",
            "add r0, sp, 0x218",
            "bl sym.imp.strcpy",
            "ldr r3, [sp, 0xc]",
            "mov r0, r3",
            "bl sym.imp.fclose",
            "ldr r1, [0x00027470]",
            "mov r0, r8",
            "mov r2, fp",
            "mov r3, r5",
            "add r1, pc, r1",
            "bl sym.imp.sprintf",
            "mov r0, sl",
            "mov r1, r5",
            "bl sym.imp.strcpy",
            "ldrb ip, [sp, 0x218]",
            "cmp ip, 0",
            "bne 0x27370",
            "ldr r1, [0x00027474]",
            "add sb, sp, 0x218",
            "ldr r2, [0x00027478]",
            "mov r3, r7",
            "str r5, [sp]",
            "mov r0, sb",
            "add r1, pc, r1",
            "add r2, pc, r2",
            "str ip, [sp, 0xc]",
            "bl sym.imp.sprintf",
            "ldrb r3, [r6]",
            "ldr ip, [sp, 0xc]",
            "cmp r3, 3",
            "bls 0x27254",
            "mov r0, ip",
            "bl sym.imp.time",
            "movw r3, 0x675",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002747c]",
            "ldr r0, [0x00027480]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x1a8",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x00027484]",
            "mov r1, sb",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00027450]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r1, [0x00027488]",
            "add sb, sp, 0x218",
            "mov r0, sb",
            "add r1, pc, r1",
            "bl sym.imp.fopen",
            "cmp r0, 0",
            "beq 0x272a0",
            "bl sym.imp.fclose",
            "ldr r1, [0x0002748c]",
            "mov r0, r8",
            "str r5, [sp]",
            "mov r2, fp",
            "add r1, pc, r1",
            "mov r3, r7",
            "bl sym.imp.sprintf",
            "mov r0, sl",
            "mov r1, r5",
            "bl sym.imp.strcpy",
            "b 0x27370",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x272fc",
            "bl sym.imp.time",
            "movw r3, 0x67e",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00027490]",
            "ldr r0, [0x00027494]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x1a8",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x00027498]",
            "mov r1, sb",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00027450]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x27358",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x682",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002749c]",
            "ldr r0, [0x000274a0]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x1a8",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x000274a4]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00027450]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r0, [sp, 0x10]",
            "mov r1, r7",
            "add r2, sp, 0x98",
            "bl fcn.000087e8",
            "mov r0, 0x10",
            "b 0x27434",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x273d0",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x68b",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000274a8]",
            "ldr r0, [0x000274ac]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x1a8",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x000274b0]",
            "mov r1, r8",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00027450]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "mov r0, 0",
            "cmp r3, 3",
            "bls 0x27434",
            "bl sym.imp.time",
            "movw r3, 0x68c",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000274b4]",
            "ldr r0, [0x000274b8]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x1a8",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x000274bc]",
            "mov r1, sl",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00027450]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, 0",
            "add sp, sp, 0x410",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00009430": {
        "function_address": "0x00009430",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x1b4]!"
        ]
    },
    "fcn.00009244": {
        "function_address": "0x00009244",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x2fc]!"
        ]
    },
    "sym.zyNetCtrl_SpeedTest_getSpeedResultInfo": {
        "function_address": "0x0002a678",
        "instructions": [
            "push {r3, lr}",
            "mov r2, r0",
            "ldr r3, [0x0002a70c]",
            "ldr r0, [0x0002a710]",
            "add r3, pc, r3",
            "ldr r3, [r3, r0]",
            "ldrb r0, [r3]",
            "mov ip, r3",
            "cmp r0, 0",
            "bne 0x2a6dc",
            "ldrb r0, [r3, 1]",
            "cmp r0, 0",
            "bne 0x2a6dc",
            "ldrb r0, [r3, 2]",
            "cmp r0, 0",
            "bne 0x2a6dc",
            "ldrb r0, [r3, 3]",
            "cmp r0, 0",
            "bne 0x2a6dc",
            "ldrb r0, [r3, 4]",
            "cmp r0, 0",
            "bne 0x2a6dc",
            "ldrb r3, [r3, 5]",
            "cmp r3, 0",
            "beq 0x2a704",
            "ldr r3, [ip]",
            "mov r0, r1",
            "ldr r1, [0x0002a714]",
            "str r3, [r2]",
            "ldrh r3, [ip, 4]",
            "add r1, pc, r1",
            "strh r3, [r2, 4]",
            "bl sym.imp.strcpy",
            "mov r0, 0",
            "pop {r3, pc}",
            "mov r0, 0x10",
            "pop {r3, pc}"
        ]
    },
    "sym.security_SecurityCtrl_freeSecurityCtrlList": {
        "function_address": "0x0002caf4",
        "instructions": [
            "push {r0, r1, r2, r4, r5, lr}",
            "ldr r4, [0x0002cb98]",
            "ldr r3, [0x0002cb9c]",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x2cb58",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0x15",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r0, [0x0002cba0]",
            "ldr r3, [0x0002cba4]",
            "add r0, pc, r0",
            "add r3, pc, r3",
            "bl sym.imp.printf",
            "mov r0, 0xa",
            "bl sym.imp.putchar",
            "ldr r3, [0x0002cba8]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x0002cbac]",
            "ldr r3, [r4, r3]",
            "ldr r4, [r3]",
            "mov r5, r3",
            "cmp r4, 0",
            "beq 0x2cb90",
            "ldr r0, [r4, 0x210]",
            "cmp r0, 0",
            "beq 0x2cb80",
            "bl fcn.00008f2c",
            "mov r0, r4",
            "bl sym.imp.free",
            "mov r3, 0",
            "str r3, [r5]",
            "add sp, sp, 0xc",
            "pop {r4, r5, pc}"
        ]
    },
    "fcn.00008f2c": {
        "function_address": "0x00008f2c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x50c]!"
        ]
    },
    "sym.zyNetCtrl_WPS_sendRenewMsg": {
        "function_address": "0x000219d8",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "sub sp, sp, 0x218",
            "ldr r5, [0x00021be8]",
            "ldr r3, [0x00021bec]",
            "add r5, pc, r5",
            "ldr r3, [r5, r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x21b24",
            "cmp r1, 0xff",
            "mov r6, r0",
            "mov r4, r1",
            "beq 0x21a40",
            "mov r0, r1",
            "add r1, sp, 8",
            "bl fcn.00009418",
            "cmp r0, 0",
            "bne 0x21b24",
            "ldr r3, [sp, 0x214]",
            "cmp r3, 1",
            "bne 0x21b24",
            "cmp r4, 0",
            "bne 0x21b2c",
            "ldr r0, [0x00021bf0]",
            "add r0, pc, r0",
            "bl sym.imp.system",
            "mov r0, r4",
            "mov r1, 2",
            "bl loc.imp.setAPautoconfigFlagToRenew",
            "cmp r4, 0xff",
            "beq 0x21a64",
            "mov r0, r6",
            "mov r1, r4",
            "bl loc.imp.sendAllWPSRenewbyUnicast",
            "b 0x21a8c",
            "ldr r3, [0x00021bf4]",
            "ldr r3, [r5, r3]",
            "ldr r4, [r3]",
            "cmp r4, 0",
            "beq 0x21a8c",
            "ldrb r1, [r4, 4]",
            "mov r0, r6",
            "bl loc.imp.sendAllWPSRenewbyUnicast",
            "ldr r4, [r4]",
            "b 0x21a70",
            "ldr r3, [0x00021bf8]",
            "ldr r1, [r5, r3]",
            "ldr r3, [0x00021bfc]",
            "ldr r0, [r1]",
            "ldr r2, [r5, r3]",
            "ldr r3, [0x00021c00]",
            "ldr r1, [r2]",
            "ldr r3, [r5, r3]",
            "ldr r2, [r3]",
            "bl fcn.00008bf0",
            "mov r0, 0",
            "b 0x21be0",
            "ldr r3, [0x00021c04]",
            "ldr r3, [r5, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x21b24",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0xca7",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00021c08]",
            "ldr r0, [0x00021c0c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x3b0",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x00021c10]",
            "mov r1, r4",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00021c14]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, 0x10",
            "b 0x21be0",
            "cmp r4, 1",
            "ldreq r0, [0x00021c18]",
            "addeq r0, pc, r0",
            "beq 0x21a3c",
            "cmp r4, 0x20",
            "ldreq r0, [0x00021c1c]",
            "addeq r0, pc, r0",
            "beq 0x21a3c",
            "cmp r4, 0x21",
            "ldreq r0, [0x00021c20]",
            "addeq r0, pc, r0",
            "beq 0x21a3c",
            "cmp r4, 0xc0",
            "ldreq r0, [0x00021c24]",
            "addeq r0, pc, r0",
            "beq 0x21a3c",
            "cmp r4, 0xe0",
            "ldreq r0, [0x00021c28]",
            "addeq r0, pc, r0",
            "beq 0x21a3c",
            "cmp r4, 0xc1",
            "ldreq r0, [0x00021c2c]",
            "addeq r0, pc, r0",
            "beq 0x21a3c",
            "cmp r4, 0xe1",
            "ldreq r0, [0x00021c30]",
            "addeq r0, pc, r0",
            "beq 0x21a3c",
            "cmp r4, 0xc9",
            "ldreq r0, [0x00021c34]",
            "addeq r0, pc, r0",
            "beq 0x21a3c",
            "cmp r4, 0xe9",
            "ldreq r0, [0x00021c38]",
            "addeq r0, pc, r0",
            "beq 0x21a3c",
            "cmp r4, 0x40",
            "ldreq r0, [0x00021c3c]",
            "addeq r0, pc, r0",
            "beq 0x21a3c",
            "cmp r4, 0x41",
            "bne 0x21abc",
            "ldr r0, [0x00021c40]",
            "add r0, pc, r0",
            "b 0x21a3c",
            "add sp, sp, 0x218",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.00009418": {
        "function_address": "0x00009418",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x1c4]!"
        ]
    },
    "loc.imp.sendAllWPSRenewbyUnicast": {
        "function_address": "0x000090a0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x414]!"
        ]
    },
    "sym.getBuildNumber": {
        "function_address": "0x0000f654",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "mov r4, 0",
            "sub sp, sp, 0x24",
            "mov r1, r4",
            "mov r2, 0x1c",
            "mov r7, r0",
            "str r4, [sp]",
            "add r0, sp, 4",
            "bl sym.imp.memset",
            "ldr r0, [0x0000f6d0]",
            "ldr r1, [0x0000f6d4]",
            "add r0, pc, r0",
            "add r1, pc, r1",
            "bl sym.imp.fopen",
            "subs r6, r0, 0",
            "moveq r0, 0x10",
            "beq 0xf6c8",
            "mov r1, 0x20",
            "mov r2, r6",
            "mov r0, sp",
            "bl sym.imp.fgets",
            "mov r0, r6",
            "bl sym.imp.fclose",
            "ldr r1, [0x0000f6d8]",
            "mov r0, sp",
            "mov r2, r7",
            "add r1, pc, r1",
            "bl sym.imp.sscanf",
            "mov r0, r4",
            "add sp, sp, 0x24",
            "pop {r4, r5, r6, r7, pc}"
        ]
    },
    "sym.getFwdRuleById": {
        "function_address": "0x0000c9f0",
        "instructions": [
            "push {r0, r1, r4, lr}",
            "ldr r4, [0x0000ca84]",
            "ldr r3, [0x0000ca88]",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0xca5c",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x724",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000ca8c]",
            "ldr r0, [0x0000ca90]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x1bc",
            "bl sym.imp.printf",
            "ldr r0, [0x0000ca94]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000ca98]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x0000ca9c]",
            "mov r0, 2",
            "ldr r3, [r4, r3]",
            "ldr r1, [r3]",
            "bl fcn.00008980",
            "cmp r0, 0",
            "movne r0, 0x10",
            "moveq r0, 0",
            "add sp, sp, 8",
            "pop {r4, pc}"
        ]
    },
    "sym.zyNetCtrl_getDeviceList": {
        "function_address": "0x000129f0",
        "instructions": [
            "ldr r3, [0x00012ba0]",
            "ldr r2, [0x00012ba4]",
            "add r3, pc, r3",
            "ldr r0, [0x00012ba8]",
            "push {r4, r5, lr}",
            "sub sp, sp, 0x94",
            "ldr r3, [r3, r2]",
            "mov r2, 0",
            "add r0, pc, r0",
            "str r2, [r3]",
            "bl fcn.000092e0",
            "ldr r0, [0x00012bac]",
            "ldr r5, [0x00012bb0]",
            "add r0, pc, r0",
            "add r5, pc, r5",
            "bl fcn.000092e0",
            "ldr r0, [0x00012bb4]",
            "add r0, pc, r0",
            "bl fcn.000092e0",
            "ldr r0, [0x00012bb8]",
            "add r0, pc, r0",
            "bl fcn.000092e0",
            "ldr r0, [0x00012bbc]",
            "add r0, pc, r0",
            "bl fcn.000092e0",
            "ldr r0, [0x00012bc0]",
            "add r0, pc, r0",
            "bl fcn.000092e0",
            "ldr r0, [0x00012bc4]",
            "add r0, pc, r0",
            "bl fcn.000092e0",
            "ldr r0, [0x00012bc8]",
            "add r0, pc, r0",
            "bl fcn.000092e0",
            "ldr r0, [0x00012bcc]",
            "add r0, pc, r0",
            "bl fcn.000092e0",
            "ldr r0, [0x00012bd0]",
            "add r0, pc, r0",
            "bl fcn.000092e0",
            "ldr r0, [0x00012bd4]",
            "add r0, pc, r0",
            "bl fcn.000092e0",
            "ldr r0, [0x00012bd8]",
            "add r0, pc, r0",
            "bl fcn.000092e0",
            "ldr r0, [0x00012bdc]",
            "add r0, pc, r0",
            "bl fcn.000092e0",
            "ldr r0, sym.FW_checkBUSYstatetimeout",
            "add r0, pc, r0",
            "bl fcn.000092e0",
            "ldr r0, [0x00012be4]",
            "add r0, pc, r0",
            "bl fcn.000092e0",
            "ldr r0, [0x00012be8]",
            "add r0, pc, r0",
            "bl fcn.000092e0",
            "ldr r0, [0x00012bec]",
            "add r0, pc, r0",
            "bl fcn.000092e0",
            "ldr r4, [r5]",
            "cmp r4, 0",
            "bne 0x12b74",
            "str r4, [sp, 0x10]",
            "mov r1, r4",
            "mov r2, 0x7c",
            "add r0, sp, 0x14",
            "bl sym.imp.memset",
            "str r4, [sp]",
            "mov r2, 0xc",
            "mov r1, r4",
            "add r0, sp, 4",
            "bl sym.imp.memset",
            "ldr r1, [0x00012bf0]",
            "add r3, sp, 0x10",
            "mov r0, r3",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "mov r3, r0",
            "mov r2, sp",
            "ldr r0, [0x00012bf4]",
            "mov r1, r3",
            "add r0, pc, r0",
            "bl fcn.00008788",
            "cmp r0, 0",
            "bne 0x12b74",
            "ldrb r3, [sp]",
            "cmp r3, 0x31",
            "ldrne r3, [r5, 4]",
            "addne r3, r3, 1",
            "strne r3, [r5, 4]",
            "ldr r3, [0x00012bf8]",
            "add r3, pc, r3",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "ldr r3, fcn.0002f000",
            "add r3, pc, r3",
            "ldr r3, [r3, 4]",
            "cmp r3, 0",
            "beq 0x12b94",
            "ldr r0, [0x00012c00]",
            "add r0, pc, r0",
            "bl fcn.000092e0",
            "mov r0, 1",
            "add sp, sp, 0x94",
            "pop {r4, r5, pc}"
        ]
    },
    "fcn.000092e0": {
        "function_address": "0x000092e0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x294]!"
        ]
    },
    "sym.wps_build_req_dev_type": {
        "function_address": "0x000312e8",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r5, r1",
            "mov r7, r2",
            "mov r6, r3",
            "mov r4, 0",
            "cmp r4, r7",
            "beq 0x31334",
            "mov r0, r5",
            "movw r1, 0x106a",
            "bl fcn.0003100c",
            "mov r0, r5",
            "mov r1, 8",
            "bl fcn.0003100c",
            "add r1, r6, r4, lsl 3",
            "mov r0, r5",
            "mov r2, 8",
            "add r4, r4, 1",
            "bl fcn.0003102c",
            "b 0x312fc",
            "mov r0, 0",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "sym.sha256_process": {
        "function_address": "0x00034690",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r6, r0",
            "ldr r3, [r0, 0x28]",
            "cmp r3, 0x3f",
            "movls sl, r1",
            "movls r7, r2",
            "addls r8, r0, 0x2c",
            "movls sb, 0",
            "bls 0x346fc",
            "mvn r0, 0",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}",
            "ldr r0, [r6, 0x28]",
            "cmp r0, 0",
            "bne 0x34708",
            "cmp r7, 0x3f",
            "bls 0x34708",
            "mov r0, r6",
            "mov r1, sl",
            "bl fcn.0003445c",
            "cmp r0, 0",
            "blt 0x346b4",
            "ldrd r4, r5, [r6]",
            "add sl, sl, 0x40",
            "sub r7, r7, 0x40",
            "adds r4, r4, 0x200",
            "adc r5, r5, 0",
            "strd r4, r5, [r6]",
            "cmp r7, 0",
            "bne 0x346bc",
            "b 0x34770",
            "rsb r4, r0, 0x40",
            "mov r1, sl",
            "cmp r7, r4",
            "add r0, r6, r0",
            "movlo r4, r7",
            "add sl, sl, r4",
            "add r0, r0, 0x2c",
            "mov r2, r4",
            "rsb r7, r4, r7",
            "bl sym.imp.memcpy",
            "ldr r3, [r6, 0x28]",
            "add r3, r4, r3",
            "str r3, [r6, 0x28]",
            "cmp r3, 0x40",
            "bne 0x346fc",
            "mov r0, r6",
            "mov r1, r8",
            "bl fcn.0003445c",
            "cmp r0, 0",
            "blt 0x346b4",
            "ldrd r4, r5, [r6]",
            "str sb, [r6, 0x28]",
            "adds r4, r4, 0x200",
            "adc r5, r5, 0",
            "strd r4, r5, [r6]",
            "b 0x346fc",
            "mov r0, r7",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "sym.zyNetCtrl_SpeedTest_retrySendSpeedTestStartStop": {
        "function_address": "0x0002a424",
        "instructions": [
            "push {r4, lr}",
            "sub sp, sp, 0x18",
            "ldr r4, [0x0002a624]",
            "ldr r3, [0x0002a628]",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "cmp r3, 1",
            "beq 0x2a498",
            "ldr r3, [0x0002a62c]",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x2a618",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0xed",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002a630]",
            "ldr r0, [0x0002a634]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x2c",
            "bl sym.imp.printf",
            "ldr r0, [0x0002a638]",
            "add r0, pc, r0",
            "b 0x2a5b0",
            "ldr r3, [0x0002a63c]",
            "ldr r3, [r4, r3]",
            "ldrb r2, [r3]",
            "mov r0, r3",
            "cmp r2, 0",
            "bne 0x2a53c",
            "ldrb r2, [r3, 1]",
            "cmp r2, 0",
            "bne 0x2a53c",
            "ldrb r2, [r3, 2]",
            "cmp r2, 0",
            "bne 0x2a53c",
            "ldrb r2, [r3, 3]",
            "cmp r2, 0",
            "bne 0x2a53c",
            "ldrb r2, [r3, 4]",
            "cmp r2, 0",
            "bne 0x2a53c",
            "ldrb r3, [r3, 5]",
            "cmp r3, 0",
            "bne 0x2a53c",
            "ldr r2, [0x0002a62c]",
            "ldr r2, [r4, r2]",
            "ldrb r2, [r2]",
            "cmp r2, 3",
            "bls 0x2a618",
            "mov r0, r3",
            "bl sym.imp.time",
            "mov r3, 0xf5",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002a640]",
            "ldr r0, [0x0002a644]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x2c",
            "bl sym.imp.printf",
            "ldr r0, [0x0002a648]",
            "add r0, pc, r0",
            "b 0x2a5b0",
            "ldr r3, [0x0002a64c]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x2a564",
            "ldr r2, [0x0002a650]",
            "ldr r2, [r4, r2]",
            "ldr r2, [r2]",
            "cmp r2, 0",
            "bne 0x2a5c8",
            "ldr r3, [0x0002a62c]",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x2a618",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0xfc",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002a654]",
            "ldr r0, [0x0002a658]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x2c",
            "bl sym.imp.printf",
            "ldr r0, [0x0002a65c]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0002a660]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0x2a618",
            "ldr r1, [0x0002a664]",
            "ldr ip, [r4, r1]",
            "ldr r1, [0x0002a668]",
            "ldr r1, [r4, r1]",
            "stm sp, {r1, r2}",
            "ldr r2, [0x0002a66c]",
            "mov r1, 1",
            "ldr r2, [r4, r2]",
            "str r2, [sp, 8]",
            "ldr r2, [0x0002a670]",
            "ldr r2, [r4, r2]",
            "ldr r2, [r2]",
            "str r2, [sp, 0xc]",
            "ldr r2, [0x0002a674]",
            "ldr r2, [r4, r2]",
            "str r2, [sp, 0x10]",
            "ldr r2, [ip]",
            "bl loc.imp.sendSpeedTestStartStop",
            "mov r0, 0",
            "b 0x2a61c",
            "mov r0, 0x10",
            "add sp, sp, 0x18",
            "pop {r4, pc}"
        ]
    },
    "sym.wps_validate_m2d": {
        "function_address": "0x0002f820",
        "instructions": [
            "cmp r0, 0",
            "beq 0x2f920",
            "push {r4, r5, lr}",
            "sub sp, sp, 0x1ec",
            "mov r1, sp",
            "bl fcn.00008c8c",
            "cmp r0, 0",
            "bge 0x2f848",
            "mvn r0, 0",
            "b 0x2f918",
            "ldr r5, [sp, 4]",
            "ldr r0, [sp]",
            "adds r4, r5, 0",
            "movne r4, 1",
            "bl fcn.0002f058",
            "cmp r0, 0",
            "bne 0x2f8bc",
            "ldr r0, [sp, 8]",
            "bl fcn.0002efd8",
            "cmp r0, 0",
            "bne 0x2f8bc",
            "ldr r3, [sp, 0xc]",
            "cmp r3, 0",
            "beq 0x2f8bc",
            "ldr r3, [sp, 0x10]",
            "cmp r3, 0",
            "beq 0x2f8bc",
            "ldr r3, [sp, 0x14]",
            "cmp r3, 0",
            "beq 0x2f8bc",
            "ldr r0, [sp, 0x28]",
            "mov r1, r4",
            "mov r2, 1",
            "bl fcn.0002ee14",
            "cmp r0, 0",
            "bne 0x2f8bc",
            "ldr r3, [sp, 0x30]",
            "cmp r3, 0",
            "bne 0x2f8cc",
            "cmp r4, 0",
            "bne 0x2f840",
            "mov r0, r4",
            "b 0x2f918",
            "ldr r3, [sp, 0x34]",
            "cmp r3, 0",
            "beq 0x2f8bc",
            "ldr r0, [sp, 0x38]",
            "bl fcn.0002f02c",
            "cmp r0, 0",
            "bne 0x2f8bc",
            "ldr r0, [sp, 0x3c]",
            "bl fcn.0002f000",
            "cmp r0, 0",
            "bne 0x2f8bc",
            "ldr r3, [sp, 0x44]",
            "cmp r3, 0",
            "beq 0x2f8bc",
            "mov r0, r5",
            "mov r1, r4",
            "bl fcn.0002ed7c",
            "cmp r0, 0",
            "bne 0x2f8bc",
            "add sp, sp, 0x1ec",
            "pop {r4, r5, pc}",
            "mvn r0, 0",
            "bx lr"
        ]
    },
    "fcn.0002f02c": {
        "function_address": "0x0002f02c",
        "instructions": [
            "cmp r0, 0",
            "beq 0x2f050",
            "ldrb r2, [r0]",
            "ldrb r3, [r0, 1]",
            "orr r0, r3, r2, lsl 8",
            "cmp r0, 4",
            "movls r0, 0",
            "mvnhi r0, 0",
            "bx lr",
            "mvn r0, 0"
        ]
    },
    "fcn.0002f000": {
        "function_address": "0x0002f000",
        "instructions": [
            "cmp r0, 0",
            "beq 0x2f024",
            "ldrb r2, [r0]",
            "ldrb r3, [r0, 1]",
            "orr r0, r3, r2, lsl 8",
            "cmp r0, 0x14",
            "movls r0, 0",
            "mvnhi r0, 0",
            "bx lr",
            "mvn r0, 0",
            "bx lr"
        ]
    },
    "sym.FW_checkFWupgradeTimeout": {
        "function_address": "0x00024c94",
        "instructions": [
            "push {r4, r5, lr}",
            "sub sp, sp, 0x20c",
            "ldr r4, [0x00024e28]",
            "ldr r3, [0x00024e2c]",
            "add r4, pc, r4",
            "ldr r5, [r4, r3]",
            "ldrb r3, [r5]",
            "cmp r3, 3",
            "bne 0x24d5c",
            "mov r0, 0",
            "bl sym.imp.time",
            "ldr r3, [0x00024e30]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "rsb r0, r3, r0",
            "cmp r0, 0x78",
            "ble 0x24d5c",
            "ldr r3, [0x00024e34]",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x24d38",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x48b",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00024e38]",
            "ldr r0, [0x00024e3c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xe6",
            "bl sym.imp.printf",
            "ldr r0, [0x00024e40]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00024e44]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r2, [0x00024e48]",
            "mov r3, 0",
            "strb r3, [r5]",
            "ldr r2, [r4, r2]",
            "str r3, [r2]",
            "ldr r2, [0x00024e4c]",
            "ldr r2, [r4, r2]",
            "str r3, [r2]",
            "bl loc.imp.updateFWUpgradeStatus",
            "ldrb r3, [r5]",
            "cmp r3, 5",
            "bne 0x24e20",
            "mov r0, 0",
            "bl sym.imp.time",
            "ldr r3, [0x00024e30]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "rsb r0, r3, r0",
            "cmp r0, 0x78",
            "ble 0x24e20",
            "ldr r3, [0x00024e34]",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x24de8",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x49c",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00024e50]",
            "ldr r0, [0x00024e54]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xe6",
            "bl sym.imp.printf",
            "ldr r0, [0x00024e58]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00024e44]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r1, 0",
            "mov r2, 0x1fc",
            "str r1, [sp, 8]",
            "add r0, sp, 0xc",
            "bl sym.imp.memset",
            "ldr r1, [0x00024e5c]",
            "add r3, sp, 8",
            "mov r0, r3",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "bl loc.imp.Outputlog",
            "ldr r0, [0x00024e60]",
            "add r0, pc, r0",
            "bl sym.imp.system",
            "add sp, sp, 0x20c",
            "pop {r4, r5, pc}"
        ]
    },
    "sym.reboot": {
        "function_address": "0x0000a91c",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "sub sp, sp, 0x28c",
            "ldr r4, [0x0000ab7c]",
            "ldr r3, [0x0000ab80]",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "ldrb r2, [r3]",
            "mov r7, r3",
            "cmp r2, 3",
            "bls 0xa990",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x3ea",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000ab84]",
            "ldr r0, [0x0000ab88]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xd3",
            "bl sym.imp.printf",
            "ldr r0, [0x0000ab8c]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000ab90]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r1, 0",
            "mov r2, 0x7c",
            "str r1, [sp, 8]",
            "add r0, sp, 0xc",
            "bl sym.imp.memset",
            "ldr r3, [0x0000ab94]",
            "mov r0, 2",
            "ldr r3, [r4, r3]",
            "ldr r1, [r3]",
            "bl fcn.00008980",
            "subs r6, r0, 0",
            "bne 0xaa28",
            "bl fcn.00008d88",
            "cmp r0, 4",
            "mov r5, r0",
            "bne 0xaa30",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0xaa28",
            "mov r0, r6",
            "bl sym.imp.time",
            "movw r3, 0x3fa",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, r5",
            "ldr r3, [0x0000ab98]",
            "ldr r0, [0x0000ab9c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xd3",
            "bl sym.imp.printf",
            "ldr r0, [0x0000aba0]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000ab90]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r6, 0x10",
            "b 0xab70",
            "cmp r0, 5",
            "beq 0xaa40",
            "mov r5, 5",
            "b 0xaa50",
            "bl fcn.00009508",
            "cmp r0, 0",
            "bne 0xaa38",
            "mov r5, 0x78",
            "ldr r3, [0x0000aba4]",
            "mov r1, 0",
            "add r0, sp, 0x8c",
            "add r4, sp, 0x88",
            "add r3, pc, r3",
            "ldr r2, [r3]",
            "cmp r2, 0",
            "bne 0xab4c",
            "str r1, [sp, 0x88]",
            "cmp r5, 0x78",
            "moveq r2, 1",
            "mov r1, 0",
            "streq r2, [r3]",
            "mov r2, 0x1fc",
            "bl sym.imp.memset",
            "ldr r1, [0x0000aba8]",
            "mov r2, r5",
            "mov r0, r4",
            "add r1, pc, r1",
            "bl sym.imp.sprintf",
            "mov r0, r4",
            "add r4, sp, 8",
            "bl loc.imp.Outputlog",
            "ldr r1, [0x0000abac]",
            "mov r2, r5",
            "mov r0, r4",
            "add r1, pc, r1",
            "bl sym.imp.sprintf",
            "mov r0, r4",
            "bl sym.imp.system",
            "ldr r1, [0x0000abb0]",
            "mov r2, r5",
            "mov r0, r4",
            "add r1, pc, r1",
            "bl sym.imp.sprintf",
            "mov r0, r4",
            "bl sym.imp.system",
            "ldr r1, [0x0000abb4]",
            "mov r2, r5",
            "mov r0, r4",
            "add r1, pc, r1",
            "bl sym.imp.sprintf",
            "mov r0, r4",
            "bl sym.imp.system",
            "ldr r1, [0x0000abb8]",
            "mov r0, r4",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "mov r0, r4",
            "bl sym.imp.system",
            "ldr r1, [0x0000abbc]",
            "mov r0, r4",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "mov r0, r4",
            "bl sym.imp.system",
            "ldr r0, [0x0000abc0]",
            "add r0, pc, r0",
            "bl sym.imp.system",
            "ldr r0, [0x0000abc4]",
            "add r0, pc, r0",
            "bl sym.imp.system",
            "b 0xab70",
            "str r1, [sp, 0x88]",
            "mov r2, 0x1fc",
            "bl sym.imp.memset",
            "ldr r1, [0x0000abc8]",
            "mov r0, r4",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "mov r0, r4",
            "bl loc.imp.Outputlog",
            "mov r0, r6",
            "add sp, sp, 0x28c",
            "pop {r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.00009508": {
        "function_address": "0x00009508",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x124]!"
        ]
    },
    "sym.wps_build_resp_type": {
        "function_address": "0x00033344",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r4, r0",
            "mov r5, r1",
            "movw r1, 0x103b",
            "bl fcn.000331d0",
            "mov r0, r4",
            "mov r1, 1",
            "bl fcn.000331d0",
            "mov r0, r4",
            "uxtb r1, r5",
            "bl fcn.000331f0",
            "mov r0, 0",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.zyNetCtrl_Event": {
        "function_address": "0x000101a4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x174]!",
            "push {r0, r1, r2, r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "ldr r4, [0x0001083c]",
            "ldr r3, [0x00010840]",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "bne 0x101d0",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "b fcn.0000943c",
            "bl fcn.0000892c",
            "bl fcn.00008710",
            "bl fcn.00008c14",
            "bl fcn.00008e54",
            "bl fcn.00008a7c",
            "bl fcn.000094d8",
            "bl fcn.00008e48",
            "ldr r3, [0x00010844]",
            "ldr sl, [r4, r3]",
            "ldr r3, [sl]",
            "cmp r3, 1",
            "bne 0x10204",
            "bl fcn.000093d0",
            "bl fcn.00008c80",
            "bl fcn.00009460",
            "bl fcn.00008a40",
            "bl fcn.00008e6c",
            "bl fcn.00008fc8",
            "ldr r3, [sl]",
            "cmp r3, 0",
            "bne 0x10808",
            "ldr r2, [0x00010848]",
            "ldr r7, [r4, r2]",
            "ldr r0, [r7]",
            "cmp r0, 0",
            "bne 0x10340",
            "ldr r3, [0x0001084c]",
            "ldr r3, [r4, r3]",
            "ldrb r2, [r3]",
            "mov r8, r3",
            "cmp r2, 3",
            "bls 0x1029c",
            "bl sym.imp.time",
            "movw r3, 0x14f",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00010850]",
            "ldr r0, [0x00010854]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x3e4",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x00010858]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0001085c]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, 0",
            "bl sym.imp.time",
            "ldr r3, [0x00010860]",
            "mov r5, r0",
            "ldr r3, [r4, r3]",
            "ldr r2, [r3]",
            "mov r6, r3",
            "cmp r2, 0",
            "streq r0, [r3]",
            "beq 0x10808",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "bls 0x10328",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x15a",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00010864]",
            "ldr r0, [0x00010868]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x3e4",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r1, [r6]",
            "ldr r0, [0x0001086c]",
            "rsb r1, r1, r5",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0001085c]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [r6]",
            "rsb r5, r3, r5",
            "cmp r5, 0x3c",
            "movgt r3, 1",
            "strgt r3, [r7]",
            "b 0x10808",
            "mov r0, r3",
            "bl sym.imp.time",
            "ldr r3, [0x00010870]",
            "mov r7, r0",
            "ldr r5, [r4, r3]",
            "ldr r0, [r5]",
            "cmp r0, 0",
            "bne 0x103cc",
            "ldr r3, [0x0001084c]",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x103c0",
            "bl sym.imp.time",
            "movw r3, 0x16a",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00010874]",
            "ldr r0, [0x00010878]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x3e4",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x0001087c]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0001085c]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "bl fcn.000090b8",
            "mov r3, 1",
            "str r3, [r5]",
            "ldr r3, [r5]",
            "cmp r3, 1",
            "bne 0x10654",
            "ldr r3, [0x00010880]",
            "ldr fp, [r4, r3]",
            "ldr r3, [fp]",
            "rsb r3, r3, r7",
            "cmp r3, 0xa",
            "ble 0x10654",
            "ldr r3, [0x0001084c]",
            "ldr sb, [r4, r3]",
            "ldrb r3, [sb]",
            "cmp r3, 3",
            "bls 0x10454",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x173",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, fcn.00028244",
            "ldr r0, [0x00010888]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x3e4",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x0001088c]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0001085c]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "bl fcn.00008944",
            "ldr r3, [0x00010890]",
            "cmp r0, 6",
            "mov r8, r0",
            "ldr r6, [r4, r3]",
            "bne 0x104d8",
            "ldr r3, [r6]",
            "add r3, r3, 1",
            "str r3, [r6]",
            "ldrb r3, [sb]",
            "cmp r3, 3",
            "bls 0x104d8",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0x17c",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00010894]",
            "ldr r0, [0x00010898]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x3e4",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x0001089c]",
            "ldr r1, [r6]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0001085c]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [r6]",
            "cmp r3, 4",
            "ble 0x10558",
            "ldrb r3, [sb]",
            "cmp r3, 3",
            "bls 0x10548",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x181",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000108a0]",
            "ldr r0, [0x000108a4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x3e4",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r1, [r6]",
            "ldr r0, [0x000108a8]",
            "add r1, r1, 1",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0001085c]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r3, 3",
            "str r3, [r5]",
            "mov r3, 0",
            "str r3, [r6]",
            "cmp r8, 0",
            "bne 0x105d4",
            "ldrb r3, [sb]",
            "cmp r3, 3",
            "bls 0x105c4",
            "mov r0, r8",
            "bl sym.imp.time",
            "movw r3, 0x189",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000108ac]",
            "ldr r0, [0x000108b0]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x3e4",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r1, [r6]",
            "ldr r0, [0x000108b4]",
            "add r1, r1, 1",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0001085c]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r3, 3",
            "str r3, [r5]",
            "mov r3, 0",
            "str r3, [r6]",
            "sub r3, r8, 7",
            "cmp r3, 1",
            "bhi 0x10650",
            "ldrb r3, [sb]",
            "cmp r3, 3",
            "bls 0x10640",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x191",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000108b8]",
            "ldr r0, [0x000108bc]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x3e4",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x000108c0]",
            "mov r1, r8",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0001085c]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r3, 4",
            "str r3, [r5]",
            "mov r3, 0",
            "str r3, [r6]",
            "str r7, [fp]",
            "ldr r3, [r5]",
            "cmp r3, 2",
            "bne 0x106e4",
            "ldr r3, [0x00010880]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "rsb r3, r3, r7",
            "cmp r3, 0x258",
            "ble 0x106e4",
            "ldr r3, [0x0001084c]",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x106dc",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x19f",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000108c4]",
            "ldr r0, [0x000108c8]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x3e4",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x000108cc]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0001085c]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r3, 0",
            "str r3, [r5]",
            "ldr r3, [r5]",
            "cmp r3, 3",
            "bne 0x10774",
            "ldr r3, [0x00010880]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "rsb r3, r3, r7",
            "cmp r3, 0xe10",
            "ble 0x10774",
            "ldr r3, [0x0001084c]",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x1076c",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x1a9",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000108d0]",
            "ldr r0, [0x000108d4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x3e4",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x000108d8]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0001085c]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r3, 0",
            "str r3, [r5]",
            "ldr r6, [r5]",
            "cmp r6, 4",
            "bne 0x10808",
            "ldr r3, [0x00010880]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "rsb r7, r3, r7",
            "ldr r3, [0x000108dc]",
            "cmp r7, r3",
            "ble 0x10808",
            "ldr r3, [0x0001084c]",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x10800",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x1b3",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, r6",
            "ldr r3, [0x000108e0]",
            "ldr r0, [0x000108e4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x3e4",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x000108e8]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0001085c]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r3, 0",
            "str r3, [r5]",
            "ldr r3, [sl]",
            "cmp r3, 0",
            "bne 0x10820",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "b 0x9490",
            "cmp r3, 1",
            "bne 0x10834",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "b fcn.00008dd0",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.000093d0": {
        "function_address": "0x000093d0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x1f4]!"
        ]
    },
    "fcn.00008c80": {
        "function_address": "0x00008c80",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x6d4]!"
        ]
    },
    "fcn.00009460": {
        "function_address": "0x00009460",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x194]!"
        ]
    },
    "fcn.00008a40": {
        "function_address": "0x00008a40",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x854]!"
        ]
    },
    "fcn.00008e6c": {
        "function_address": "0x00008e6c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x58c]!"
        ]
    },
    "fcn.00008fc8": {
        "function_address": "0x00008fc8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x4a4]!"
        ]
    },
    "fcn.000090b8": {
        "function_address": "0x000090b8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x404]!"
        ]
    },
    "sym.setSSIDandPW_Main_24G": {
        "function_address": "0x0001bde4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "sub sp, sp, 0x400",
            "ldr r6, [0x0001c014]",
            "sub sp, sp, 8",
            "ldr r3, [0x0001c018]",
            "mov r5, r0",
            "add r6, pc, r6",
            "ldr r3, [r6, r3]",
            "ldrb r2, [r3]",
            "mov sl, r3",
            "cmp r2, 3",
            "bls 0x1be68",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x53c",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001c01c]",
            "ldr r0, [0x0001c020]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x8f",
            "bl sym.imp.printf",
            "ldr r1, [r5]",
            "ldr r0, [0x0001c024]",
            "add r1, r1, 0x20",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0001c028]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r4, 0",
            "mov r2, 0xfc",
            "str r4, [sp, 8]",
            "mov r1, r4",
            "add r0, sp, 0xc",
            "add sb, sp, 8",
            "bl sym.imp.memset",
            "str r4, [sp, 0x108]",
            "mov r1, r4",
            "mov r2, 0xfc",
            "add r0, sp, 0x10c",
            "bl sym.imp.memset",
            "str r4, [sp, 0x208]",
            "mov r1, r4",
            "mov r2, 0xfc",
            "add r0, sp, 0x20c",
            "bl sym.imp.memset",
            "str r4, [sp, 0x308]",
            "mov r1, r4",
            "mov r2, 0xfc",
            "add r0, sp, 0x30c",
            "bl sym.imp.memset",
            "ldr r2, [r5]",
            "mov r0, sb",
            "ldr r1, [0x0001c02c]",
            "add r8, sp, 0x208",
            "add r2, r2, 0x20",
            "add r7, sp, 0x308",
            "add r1, pc, r1",
            "bl sym.imp.sprintf",
            "ldr r3, [r5]",
            "ldrh r3, [r3, 0xe0]",
            "cmp r3, 1",
            "bne 0x1bf14",
            "ldr r1, [0x0001c030]",
            "mov r0, r8",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "ldr r1, [0x0001c034]",
            "mov r0, r7",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "b 0x1bfb4",
            "cmp r3, 0x20",
            "bne 0x1bfb4",
            "ldrb r3, [sl]",
            "cmp r3, 3",
            "bls 0x1bf7c",
            "mov r0, r4",
            "bl sym.imp.time",
            "movw r3, 0x54b",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001c038]",
            "ldr r0, [0x0001c03c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x8f",
            "bl sym.imp.printf",
            "ldr r3, [r5]",
            "ldr r0, [0x0001c040]",
            "ldr r1, [r3, 0xe8]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0001c028]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r1, [0x0001c044]",
            "mov r0, r8",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "ldr r1, [0x0001c048]",
            "mov r0, r7",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "ldr r3, [r5]",
            "add r0, sp, 0x108",
            "ldr r1, [0x0001c04c]",
            "ldr r2, [r3, 0xe8]",
            "add r1, pc, r1",
            "bl sym.imp.sprintf",
            "mov r0, sb",
            "bl sym.imp.system",
            "mov r0, r8",
            "bl sym.imp.system",
            "mov r0, r7",
            "bl sym.imp.system",
            "ldr r3, [r5]",
            "ldrh r3, [r3, 0xe0]",
            "cmp r3, 0x20",
            "bne 0x1bfe4",
            "add r0, sp, 0x108",
            "bl sym.imp.system",
            "ldr r0, [0x0001c050]",
            "add r0, pc, r0",
            "bl sym.imp.system",
            "ldr r0, [0x0001c054]",
            "add r0, pc, r0",
            "bl sym.imp.system",
            "ldr r0, [0x0001c058]",
            "add r0, pc, r0",
            "bl sym.imp.system",
            "add sp, sp, 0x400",
            "add sp, sp, 8",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "sym.zyNetCtrl_WPS_deleteSynclistByBand": {
        "function_address": "0x0002059c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x14",
            "ldr r6, [0x000207d0]",
            "ldr r3, [0x000207d4]",
            "add r6, pc, r6",
            "str r0, [sp, 8]",
            "ldr sb, [r6, r3]",
            "ldr r5, [sb]",
            "str sb, [sp, 0xc]",
            "cmp r5, 0",
            "beq 0x207c4",
            "ldr r3, [0x000207d8]",
            "ldr r8, [r6, r3]",
            "ldr r5, [r8]",
            "cmp r5, 0",
            "beq 0x207c4",
            "mov sl, 0",
            "mov r7, sl",
            "mov sb, sl",
            "mov fp, sl",
            "ldr r1, [r5, 0x14]",
            "ldr r3, [sp, 8]",
            "ldrb r1, [r1]",
            "cmp r1, r3",
            "beq 0x20768",
            "mov r0, 1",
            "mov r1, 0x24",
            "bl sym.imp.calloc",
            "subs r4, r0, 0",
            "bne 0x20674",
            "ldr r3, [0x000207dc]",
            "ldr r3, [r6, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x207bc",
            "bl sym.imp.time",
            "movw r3, 0xd7d",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000207e0]",
            "ldr r0, [0x000207e4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x2cc",
            "bl sym.imp.printf",
            "ldr r0, [0x000207e8]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x000207ec]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0x207bc",
            "mov r0, 1",
            "mov r1, r0",
            "bl sym.imp.calloc",
            "str r0, [r4, 0x14]",
            "cmp r0, 0",
            "bne 0x206f4",
            "ldr r3, [0x000207dc]",
            "ldr r3, [r6, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x206e8",
            "bl sym.imp.time",
            "movw r3, 0xd83",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000207f0]",
            "ldr r0, [0x000207f4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x2cc",
            "bl sym.imp.printf",
            "ldr r0, [0x000207f8]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x000207ec]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, r4",
            "bl fcn.00008cec",
            "b 0x207bc",
            "mov r1, r5",
            "add r2, sb, 1",
            "cmp sb, 0",
            "cmpne r7, 0",
            "ldr r0, [r1, 4]!",
            "moveq sb, r2",
            "moveq r7, r4",
            "movne sb, r2",
            "str r0, [r4, 4]",
            "ldrh r1, [r1, 4]",
            "strh r1, [r4, 8]",
            "mov r1, r5",
            "ldr r0, [r1, 0xa]!",
            "str r0, [r4, 0xa]",
            "ldrh r1, [r1, 4]",
            "strh r1, [r4, 0xe]",
            "ldr r0, [r5, 0x14]",
            "ldr r1, [r4, 0x14]",
            "ldrb r0, [r0]",
            "strb r0, [r1]",
            "ldr r1, [r5, 0x18]",
            "str r1, [r4, 0x18]",
            "ldr r1, [r5, 0x1c]",
            "str r1, [r4, 0x1c]",
            "ldr r1, [r5, 0x20]",
            "str fp, [r4]",
            "str r1, [r4, 0x20]",
            "strne r4, [sl]",
            "b 0x2076c",
            "mov r4, sl",
            "ldr r5, [r5]",
            "cmp r5, 0",
            "movne sl, r4",
            "bne 0x205ec",
            "ldr r5, [r8]",
            "cmp r5, 0",
            "beq 0x207ac",
            "ldr r0, [r5, 0x10]",
            "ldr r4, [r5]",
            "bl fcn.00008cec",
            "ldr r0, [r5, 0x14]",
            "bl fcn.00008cec",
            "mov r0, r5",
            "mov r5, r4",
            "bl fcn.00008cec",
            "b 0x20780",
            "ldr r3, [sp, 0xc]",
            "str r7, [r8]",
            "str sb, [r3]",
            "b 0x207c4",
            "mov r0, 0x10",
            "b 0x207c8",
            "mov r0, r5",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.zyNetCtrl_recoverApprovelist": {
        "function_address": "0x00029828",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0xc4",
            "ldr r7, [0x000299e8]",
            "mov sb, r1",
            "ldr sl, [0x000299ec]",
            "mov r8, r0",
            "add r7, pc, r7",
            "bl fcn.0000883c",
            "ldr r3, [0x000299f0]",
            "mov r1, 0",
            "ldr fp, [0x000299f4]",
            "mov r2, 0x7c",
            "ldr r3, [r7, r3]",
            "add r0, sp, 0x44",
            "add sl, pc, sl",
            "add r5, sp, 0x40",
            "ldr r3, [r3]",
            "add fp, pc, fp",
            "ldr r4, [r3, 4]",
            "str r1, [sp, 0x40]",
            "bl sym.imp.memset",
            "ldr r1, [0x000299f8]",
            "mov r0, r5",
            "ldr r2, [0x000299fc]",
            "add r1, pc, r1",
            "add r2, pc, r2",
            "bl sym.imp.sprintf",
            "ldr r3, [0x00029a00]",
            "add r3, pc, r3",
            "str r3, [sp, 0x1c]",
            "cmp r4, 0",
            "beq 0x29994",
            "mov r0, r8",
            "add r1, r4, 4",
            "mov r2, 6",
            "bl sym.imp.memcmp",
            "cmp r0, 0",
            "bne 0x298cc",
            "add r0, r4, 0x10",
            "mov r1, sb",
            "bl sym.imp.strcpy",
            "mov ip, 0",
            "mov r2, 0x1c",
            "str ip, [sp, 0x20]",
            "mov r1, ip",
            "str ip, [sp, 0x14]",
            "add r0, sp, 0x24",
            "bl sym.imp.memset",
            "ldrb r1, [r4, 6]",
            "add r6, sp, 0x20",
            "ldrb r3, [r4, 5]",
            "mov r0, r6",
            "ldrb r2, [r4, 4]",
            "str r1, [sp]",
            "ldrb r1, [r4, 7]",
            "str r1, [sp, 4]",
            "ldrb r1, [r4, 8]",
            "str r1, [sp, 8]",
            "ldrb r1, [r4, 9]",
            "str r1, [sp, 0xc]",
            "ldr r1, [sp, 0x1c]",
            "bl sym.imp.sprintf",
            "ldr r3, [0x00029a04]",
            "ldr ip, [sp, 0x14]",
            "ldr r3, [r7, r3]",
            "ldr r3, [r3]",
            "str r3, [sp, 0x18]",
            "mov r0, r6",
            "str ip, [sp, 0x14]",
            "bl sym.imp.strlen",
            "ldr ip, [sp, 0x14]",
            "ldr r3, [sp, 0x18]",
            "cmp ip, r0",
            "bhs 0x29968",
            "ldrb r2, [r6, ip]",
            "lsl r2, r2, 1",
            "ldrh r2, [r3, r2]",
            "strb r2, [r6, ip]",
            "add ip, ip, 1",
            "b 0x29930",
            "add r3, r4, 0x10",
            "mov r1, sl",
            "stm sp, {r3, fp}",
            "ldr r3, [r4, 0xc]",
            "mov r2, r6",
            "mov r0, r5",
            "bl sym.imp.sprintf",
            "mov r0, r5",
            "bl sym.imp.system",
            "ldr r4, [r4]",
            "b 0x298a0",
            "ldr r6, [0x00029a08]",
            "ldr r4, [0x00029a0c]",
            "add r6, pc, r6",
            "add r4, pc, r4",
            "mov r0, r6",
            "bl sym.imp.remove",
            "ldr r1, [0x00029a10]",
            "mov r2, r4",
            "mov r3, r6",
            "mov r0, r5",
            "add r1, pc, r1",
            "bl sym.imp.sprintf",
            "mov r0, r5",
            "bl sym.imp.system",
            "mov r0, r4",
            "bl sym.imp.remove",
            "ldr r0, [0x00029a14]",
            "add r0, pc, r0",
            "bl sym.imp.system",
            "add sp, sp, 0xc4",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0000883c": {
        "function_address": "0x0000883c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x9ac]!"
        ]
    },
    "sym.parseWIFIStateSyncdata": {
        "function_address": "0x0000fec4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x254]!",
            "push {r0, r1, r2, r4, r5, lr}",
            "cmp r0, 0",
            "ldr r4, [0x0000ff90]",
            "ldr ip, [sp, 0x18]",
            "add r4, pc, r4",
            "beq 0xff84",
            "ldr lr, [0x0000ff94]",
            "ldr r5, [r4, lr]",
            "ldrb lr, [r5]",
            "sub lr, lr, 3",
            "cmp lr, 2",
            "bhi 0xff60",
            "ldr r3, [0x0000ff98]",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0xff84",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0xd30",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000ff9c]",
            "ldr r0, [0x0000ffa0]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x3b4",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x0000ffa4]",
            "ldrb r1, [r5]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000ffa8]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0xff84",
            "ldr lr, [0x0000ffac]",
            "ldr lr, [r4, lr]",
            "ldr lr, [lr]",
            "cmp lr, 1",
            "bne 0xff84",
            "str ip, [sp, 0x18]",
            "add sp, sp, 0xc",
            "pop {r4, r5, lr}",
            "b 0x9340",
            "mov r0, 0x10",
            "add sp, sp, 0xc",
            "pop {r4, r5, pc}"
        ]
    },
    "sym.wps_process_authenticator": {
        "function_address": "0x00033a4c",
        "instructions": [
            "push {r4, r5, lr}",
            "subs r5, r1, 0",
            "sub sp, sp, 0x3c",
            "beq 0x33acc",
            "ldr r3, [r0, 0x134]",
            "cmp r3, 0",
            "beq 0x33acc",
            "ldr r1, [r3, 8]",
            "add r4, sp, 0x18",
            "add r0, r0, 0xe4",
            "str r1, [sp, 8]",
            "mov r1, 0x20",
            "ldr r3, [r3, 4]",
            "str r3, [sp, 0x10]",
            "ldr r3, [r2, 8]",
            "str r3, [sp, 0xc]",
            "ldr r3, [r2, 4]",
            "mov r2, 2",
            "str r4, [sp, 4]",
            "sub r3, r3, 0xc",
            "str r3, [sp, 0x14]",
            "add r3, sp, 0x10",
            "str r3, [sp]",
            "add r3, sp, 8",
            "bl fcn.00008c08",
            "mov r0, r4",
            "mov r1, r5",
            "mov r2, 8",
            "bl sym.imp.memcmp",
            "adds r0, r0, 0",
            "mvnne r0, 0",
            "b 0x33ad0",
            "mvn r0, 0",
            "add sp, sp, 0x3c",
            "pop {r4, r5, pc}"
        ]
    },
    "sym.setServReqCallbackFunc": {
        "function_address": "0x0000ce48",
        "instructions": [
            "push {r0, r1, r2, r4, r5, lr}",
            "mov r5, r0",
            "ldr r4, [0x0000cef4]",
            "ldr r3, [0x0000cef8]",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0xceb8",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x7af",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000cefc]",
            "ldr r0, [0x0000cf00]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x234",
            "bl sym.imp.printf",
            "ldr r0, [0x0000cf04]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000cf08]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x0000cf0c]",
            "mov r0, 2",
            "ldr r3, [r4, r3]",
            "ldr r1, [r3]",
            "bl fcn.00008980",
            "cmp r0, 0",
            "bne 0xcee8",
            "cmp r5, 0",
            "ldrne r3, [0x0000cf10]",
            "ldrne r3, [r4, r3]",
            "strne r5, [r3]",
            "bne 0xceec",
            "mov r0, 0x10",
            "add sp, sp, 0xc",
            "pop {r4, r5, pc}"
        ]
    },
    "sym.getAPautoconfig": {
        "function_address": "0x0000bb28",
        "instructions": [
            "push {r0, r1, r2, r4, r5, lr}",
            "mov r5, r0",
            "ldr r4, [0x0000bbb8]",
            "ldr r3, [0x0000bbbc]",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0xbb9c",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x5b3",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000bbc0]",
            "ldr r0, [0x0000bbc4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x130",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x0000bbc8]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000bbcc]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x0000bbd0]",
            "mov r0, 0",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "str r3, [r5]",
            "add sp, sp, 0xc",
            "pop {r4, r5, pc}"
        ]
    },
    "sym.zyNetCtrl_WPSApporve_freedata": {
        "function_address": "0x00029224",
        "instructions": [
            "push {r0, r1, r4, r5, r6, lr}",
            "ldr r4, [0x00029360]",
            "ldr r3, [0x00029364]",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "ldrb r2, [r3]",
            "mov r6, r3",
            "cmp r2, 3",
            "bls 0x29294",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0x30",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00029368]",
            "ldr r0, [0x0002936c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x1a",
            "bl sym.imp.printf",
            "ldr r0, [0x00029370]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00029374]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x00029378]",
            "ldr r5, [r4, r3]",
            "ldr r0, [r5]",
            "cmp r0, 0",
            "bne 0x29300",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x29354",
            "bl sym.imp.time",
            "mov r3, 0x33",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002937c]",
            "ldr r0, [0x00029380]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x1a",
            "bl sym.imp.printf",
            "ldr r0, [0x00029384]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00029374]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0x29354",
            "ldr r3, [r0]",
            "cmp r3, 0",
            "bne 0x29338",
            "ldr r3, [r5]",
            "mov r4, 0",
            "ldr r1, [0x00029388]",
            "str r4, [r3]",
            "ldr r0, [r5]",
            "str r4, [r3, 4]",
            "add r1, pc, r1",
            "add r0, r0, 8",
            "bl sym.imp.strcpy",
            "mov r0, r4",
            "b 0x29358",
            "ldr r0, [r0, 4]",
            "cmp r0, 0",
            "beq 0x2930c",
            "ldr r4, [r0]",
            "bl sym.imp.free",
            "mov r0, r4",
            "b 0x2933c",
            "mov r0, 0x10",
            "add sp, sp, 8",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.wps_build_vendor_ext": {
        "function_address": "0x00031518",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r6, r1",
            "mov r4, r0",
            "mov r5, 0xa",
            "ldr r3, [r4, 0x5c]",
            "cmp r3, 0",
            "beq 0x31564",
            "mov r0, r6",
            "movw r1, 0x1049",
            "bl fcn.0003100c",
            "ldr r3, [r4, 0x5c]",
            "mov r0, r6",
            "ldrh r1, [r3, 4]",
            "bl fcn.0003100c",
            "ldr r3, [r4, 0x5c]",
            "mov r0, r6",
            "ldr r1, [r3, 8]",
            "ldr r2, [r3, 4]",
            "bl fcn.0003102c",
            "subs r5, r5, 1",
            "add r4, r4, 4",
            "bne 0x31528",
            "mov r0, r5",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.isSupportedRegistrar": {
        "function_address": "0x0000ccc4",
        "instructions": [
            "push {r0, r1, r4, lr}",
            "ldr r4, [0x0000cd5c]",
            "ldr r3, [0x0000cd60]",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0xcd34",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x784",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000cd64]",
            "ldr r0, [0x0000cd68]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x200",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x0000cd6c]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000cd70]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x0000cd74]",
            "mov r0, 2",
            "ldr r3, [r4, r3]",
            "ldr r1, [r3]",
            "bl fcn.00008980",
            "cmp r0, 0",
            "movne r0, 0x10",
            "moveq r0, 0",
            "add sp, sp, 8",
            "pop {r4, pc}"
        ]
    },
    "sym.zyNetCtrl_getWIFIChannelSyncData": {
        "function_address": "0x00016bf8",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0xbc",
            "mov r4, 0",
            "mov fp, r1",
            "str r0, [sp, 4]",
            "mov r1, r4",
            "str r4, [sp, 8]",
            "mov sl, r2",
            "add r0, sp, 0xc",
            "mov r2, 0xc",
            "mov r5, r3",
            "bl sym.imp.memset",
            "str r4, [sp, 0x18]",
            "mov r1, r4",
            "mov r2, 0xc",
            "add r0, sp, 0x1c",
            "bl sym.imp.memset",
            "str r4, [sp, 0x28]",
            "mov r1, r4",
            "mov r2, 0xc",
            "add r0, sp, 0x2c",
            "bl sym.imp.memset",
            "mov r0, 1",
            "mov r1, 0x40",
            "bl sym.imp.calloc",
            "subs r6, r0, 0",
            "beq 0x16e14",
            "add sb, sp, 8",
            "bl fcn.00008560",
            "add r8, sp, 0x18",
            "mov r1, r6",
            "mov r0, sb",
            "add r7, sp, 0x28",
            "bl sym.imp.strcpy",
            "add r1, r6, 0x10",
            "mov r0, r8",
            "bl sym.imp.strcpy",
            "add r1, r6, 0x30",
            "mov r0, r7",
            "bl sym.imp.strcpy",
            "mov r0, r6",
            "bl sym.imp.free",
            "ldr r1, [sp, 4]",
            "cmp r1, r4",
            "cmpne sl, r4",
            "beq 0x16db4",
            "str r4, [sp, 0x38]",
            "mov r1, r4",
            "ldr r6, [0x00016e1c]",
            "mov r2, 0x7c",
            "add r0, sp, 0x3c",
            "add r6, pc, r6",
            "bl sym.imp.memset",
            "add r3, sp, 0x38",
            "mov r1, sl",
            "ldr sl, [0x00016e20]",
            "mov r0, r3",
            "mov r2, fp",
            "add sl, pc, sl",
            "bl sym.imp.memcpy",
            "add r1, sp, 0xb8",
            "add r2, r1, fp",
            "ldr r1, [0x00016e24]",
            "strb r4, [r2, -0x80]",
            "add r1, pc, r1",
            "bl sym.imp.strtok",
            "ldr r3, [0x00016e28]",
            "mov fp, r0",
            "add r3, pc, r3",
            "str r3, [sp, 4]",
            "cmp fp, 0",
            "beq 0x16da8",
            "mov r1, r6",
            "mov r0, fp",
            "mov r2, 3",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "moveq r0, r6",
            "moveq r1, sb",
            "beq 0x16d88",
            "mov r1, sl",
            "mov r0, fp",
            "mov r2, 3",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "moveq r0, sl",
            "moveq r1, r7",
            "beq 0x16d88",
            "ldr ip, [0x00016e2c]",
            "mov r0, fp",
            "mov r2, 2",
            "add ip, pc, ip",
            "str ip, [sp]",
            "mov r1, ip",
            "bl sym.imp.strncmp",
            "ldr ip, [sp]",
            "cmp r0, 0",
            "bne 0x16d90",
            "mov r0, ip",
            "mov r1, r8",
            "mov r2, r5",
            "bl fcn.0000880c",
            "ldr r1, [sp, 4]",
            "mov r0, 0",
            "bl sym.imp.strtok",
            "mov fp, r0",
            "add r4, r4, 1",
            "b 0x16d10",
            "ldr r3, [sp, 0xe0]",
            "str r4, [r3]",
            "b 0x16dfc",
            "ldr r0, [0x00016e30]",
            "mov r1, sb",
            "mov r2, r5",
            "add r0, pc, r0",
            "bl fcn.0000880c",
            "ldr r0, [0x00016e34]",
            "mov r1, r8",
            "mov r2, r5",
            "add r0, pc, r0",
            "bl fcn.0000880c",
            "ldr r0, [0x00016e38]",
            "mov r1, r7",
            "mov r2, r5",
            "add r0, pc, r0",
            "bl fcn.0000880c",
            "ldr r1, [sp, 0xe0]",
            "mov r3, 3",
            "str r3, [r1]",
            "mov r0, r5",
            "bl sym.imp.strlen",
            "mov r3, 0",
            "strb r3, [r5, r0]",
            "mov r0, r3",
            "b 0x16e14",
            "add sp, sp, 0xbc",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00008560": {
        "function_address": "0x00008560",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0xb94]!"
        ]
    },
    "fcn.0000880c": {
        "function_address": "0x0000880c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x9cc]!"
        ]
    },
    "sym.hex2byte": {
        "function_address": "0x0002e028",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r4, r0",
            "ldrb r0, [r0]",
            "bl fcn.0002dfe8",
            "subs r5, r0, 0",
            "blt 0x2e058",
            "ldrb r0, [r4, 1]",
            "bl fcn.0002dfe8",
            "cmp r0, 0",
            "blt 0x2e058",
            "orr r0, r0, r5, lsl 4",
            "pop {r3, r4, r5, pc}",
            "mvn r0, 0",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.0002dfe8": {
        "function_address": "0x0002dfe8",
        "instructions": [
            "sub r3, r0, 0x30",
            "uxtb r2, r3",
            "cmp r2, 9",
            "bhi 0x2e000",
            "mov r0, r3",
            "bx lr",
            "sub r3, r0, 0x61",
            "cmp r3, 5",
            "bhi 0x2e014",
            "sub r0, r0, 0x57",
            "bx lr",
            "sub r3, r0, 0x41",
            "cmp r3, 5",
            "subls r0, r0, 0x37",
            "mvnhi r0, 0",
            "bx lr"
        ]
    },
    "sym.FW_runCheckFWByFTP": {
        "function_address": "0x00024530",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r4, 0",
            "sub sp, sp, 0x90",
            "mov r1, r4",
            "add r0, sp, 0x14",
            "mov r2, 0x7c",
            "str r4, [sp, 0x10]",
            "bl sym.imp.memset",
            "str r4, [sp]",
            "mov r1, r4",
            "mov r2, 0xc",
            "add r0, sp, 4",
            "bl sym.imp.memset",
            "mov r0, sp",
            "add r5, sp, 0x10",
            "bl loc.imp.getzy1905Version",
            "ldr r1, [0x000245a0]",
            "mov r3, sp",
            "ldr r2, [0x000245a4]",
            "mov r0, r5",
            "add r1, pc, r1",
            "add r2, pc, r2",
            "bl sym.imp.sprintf",
            "mov r0, r5",
            "bl sym.imp.system",
            "mov r0, r4",
            "add sp, sp, 0x90",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.getTelnetState": {
        "function_address": "0x00012608",
        "instructions": [
            "push {r4, r5, lr}",
            "mov r4, 0",
            "sub sp, sp, 0x94",
            "mov r5, r0",
            "mov r1, r4",
            "mov r2, 0x7c",
            "str r4, [sp, 0x10]",
            "add r0, sp, 0x14",
            "bl sym.imp.memset",
            "str r4, [sp]",
            "mov r2, 0xc",
            "mov r1, r4",
            "add r0, sp, 4",
            "bl sym.imp.memset",
            "ldr r1, [0x00012690]",
            "add r3, sp, 0x10",
            "mov r0, r3",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "mov r3, r0",
            "mov r2, sp",
            "ldr r0, [0x00012694]",
            "mov r1, r3",
            "add r0, pc, r0",
            "bl fcn.00008788",
            "cmp r0, 0",
            "mov r0, r5",
            "moveq r1, sp",
            "ldrne r1, [0x00012698]",
            "addne r1, pc, r1",
            "bl sym.imp.strcpy",
            "mov r0, 0",
            "add sp, sp, 0x94",
            "pop {r4, r5, pc}"
        ]
    },
    "sym.sendWPSRenew": {
        "function_address": "0x0000bcb0",
        "instructions": [
            "push {r0, r1, r4, r5, r6, r7, r8, lr}",
            "mov r7, r0",
            "ldr r4, [0x0000bdc0]",
            "mov r6, r1",
            "ldr r3, [0x0000bdc4]",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "ldrb r2, [r3]",
            "mov r8, r3",
            "cmp r2, 3",
            "bls 0xbd2c",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x5c5",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000bdc8]",
            "ldr r0, [0x0000bdcc]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x14c",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x0000bdd0]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000bdd4]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x0000bdd8]",
            "ldr r3, [r4, r3]",
            "ldr r5, [r3]",
            "cmp r5, 0",
            "beq 0xbda0",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "bls 0xbdb4",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0x5d0",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000bddc]",
            "ldr r0, [0x0000bde0]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x14c",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x0000bde4]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000bdd4]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0xbdb4",
            "mov r0, r7",
            "mov r1, r6",
            "bl fcn.00008cd4",
            "mov r0, r5",
            "b 0xbdb8",
            "mov r0, 0x10",
            "add sp, sp, 8",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.00008cd4": {
        "function_address": "0x00008cd4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x69c]!"
        ]
    },
    "sym.Log_Enrollee_download_check": {
        "function_address": "0x0002c678",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "sub sp, sp, 0x308",
            "ldr r4, [0x0002c848]",
            "ldr r3, [0x0002c84c]",
            "add r4, pc, r4",
            "ldr r6, [r4, r3]",
            "ldr r3, [r6]",
            "cmp r3, 0",
            "beq 0x2c74c",
            "ldr r3, [0x0002c850]",
            "ldr r3, [r4, r3]",
            "ldrb r2, [r3]",
            "mov r7, r3",
            "cmp r2, 0",
            "bne 0x2c754",
            "ldrb r2, [r3, 1]",
            "cmp r2, 0",
            "bne 0x2c754",
            "ldrb r2, [r3, 2]",
            "cmp r2, 0",
            "bne 0x2c754",
            "ldrb r2, [r3, 3]",
            "cmp r2, 0",
            "bne 0x2c754",
            "ldrb r2, [r3, 4]",
            "cmp r2, 0",
            "bne 0x2c754",
            "ldrb r0, [r3, 5]",
            "cmp r0, 0",
            "bne 0x2c754",
            "ldr r3, [0x0002c854]",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x2c74c",
            "bl sym.imp.time",
            "movw r3, 0x14e",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002c858]",
            "ldr r0, [0x0002c85c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x4c",
            "bl sym.imp.printf",
            "ldr r0, [0x0002c860]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0002c864]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, 0x10",
            "b 0x2c840",
            "mov r4, 0",
            "mov r2, 0x1fc",
            "str r4, [sp, 0x108]",
            "mov r1, r4",
            "add r0, sp, 0x10c",
            "bl sym.imp.memset",
            "str r4, [sp, 8]",
            "mov r1, r4",
            "mov r2, 0x7c",
            "add r0, sp, 0xc",
            "bl sym.imp.memset",
            "str r4, [sp, 0x88]",
            "mov r1, r4",
            "mov r2, 0x7c",
            "add r0, sp, 0x8c",
            "bl sym.imp.memset",
            "ldr r0, [0x0002c868]",
            "ldr r1, [0x0002c86c]",
            "add r0, pc, r0",
            "add r1, pc, r1",
            "bl sym.imp.fopen",
            "subs r8, r0, 0",
            "beq 0x2c74c",
            "add r5, sp, 0x88",
            "mov r1, 0x80",
            "mov r0, r5",
            "mov r2, r8",
            "bl sym.imp.fgets",
            "ldrb r3, [r5, r4]",
            "cmp r3, 0",
            "beq 0x2c7ec",
            "cmp r3, 0xa",
            "addeq r3, sp, 0x308",
            "addeq r4, r3, r4",
            "moveq r3, 0",
            "strbeq r3, [r4, -0x280]",
            "addne r4, r4, 1",
            "bne 0x2c7c4",
            "mov r0, r8",
            "add r8, sp, 8",
            "bl sym.imp.fclose",
            "ldr r0, [0x0002c870]",
            "add r4, sp, 0x108",
            "add r0, pc, r0",
            "bl sym.imp.remove",
            "mov r0, r8",
            "bl fcn.00009244",
            "ldr r1, [0x0002c874]",
            "mov r2, r8",
            "mov r3, r5",
            "mov r0, r4",
            "add r1, pc, r1",
            "bl sym.imp.sprintf",
            "mov r0, r7",
            "mov r1, r5",
            "mov r2, r4",
            "bl loc.imp.sendResponseDownloadLogFile",
            "mov r0, 0",
            "str r0, [r6]",
            "add sp, sp, 0x308",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "loc.imp.sendResponseDownloadLogFile": {
        "function_address": "0x00009184",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x37c]!"
        ]
    },
    "sym.wpabuf_alloc": {
        "function_address": "0x0002e898",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r0",
            "add r0, r0, 0x10",
            "bl fcn.00008d28",
            "cmp r0, 0",
            "movne r3, r0",
            "strne r4, [r3], 0x10",
            "strne r3, [r0, 8]",
            "pop {r4, pc}"
        ]
    },
    "sym.setNetCtrlDebugLevel": {
        "function_address": "0x00009c6c",
        "instructions": [
            "push {r0, r1, r4, r5, r6, lr}",
            "mov r4, r0",
            "ldr r5, [0x00009cfc]",
            "ldr r3, [0x00009d00]",
            "add r5, pc, r5",
            "ldr r3, [r5, r3]",
            "ldrb r2, [r3]",
            "mov r6, r3",
            "cmp r2, 3",
            "bls 0x9ce4",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0x1f0",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00009d04]",
            "ldr r0, [0x00009d08]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x46",
            "bl sym.imp.printf",
            "ldr r0, [0x00009d0c]",
            "mov r1, r4",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00009d10]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "cmp r4, 4",
            "strbls r4, [r6]",
            "movls r0, 0",
            "movhi r0, 0x10",
            "add sp, sp, 8",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.zyEvent_INTFPWRSTATECHANGEDEVENTID": {
        "function_address": "0x0001871c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov sb, r3",
            "ldr r6, [0x00018a80]",
            "sub sp, sp, 0x1c",
            "ldr r3, [0x00018a84]",
            "mov fp, r0",
            "add r6, pc, r6",
            "mov r4, r1",
            "ldr r8, [sp, 0x40]",
            "mov sl, r2",
            "ldr r7, [r6, r3]",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x187a0",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0xa6",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00018a88]",
            "ldr r0, [0x00018a8c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x52",
            "bl sym.imp.printf",
            "ldr r0, [0x00018a90]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00018a94]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x187fc",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0xa7",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00018a98]",
            "ldr r0, [0x00018a9c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x52",
            "bl sym.imp.printf",
            "ldr r0, [0x00018aa0]",
            "mov r1, fp",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00018a94]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x18878",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0xa8",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00018aa4]",
            "ldr r0, [0x00018aa8]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x52",
            "bl sym.imp.printf",
            "ldrb r0, [r4, 3]",
            "ldrb r3, [r4, 2]",
            "str r0, [sp]",
            "ldrb r0, [r4, 4]",
            "ldrb r1, [r4]",
            "str r0, [sp, 4]",
            "ldrb r0, [r4, 5]",
            "ldrb r2, [r4, 1]",
            "str r0, [sp, 8]",
            "ldr r0, [0x00018aac]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00018a94]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x188d4",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0xa9",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00018ab0]",
            "ldr r0, [0x00018ab4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x52",
            "bl sym.imp.printf",
            "ldr r0, [0x00018ab8]",
            "mov r1, sl",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00018a94]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x18930",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0xaa",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00018abc]",
            "ldr r0, [0x00018ac0]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x52",
            "bl sym.imp.printf",
            "ldr r0, [0x00018ac4]",
            "mov r1, sb",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00018a94]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x1898c",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0xab",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00018ac8]",
            "ldr r0, [0x00018acc]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x52",
            "bl sym.imp.printf",
            "ldr r0, [0x00018ad0]",
            "mov r1, r8",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00018a94]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, 1",
            "mov r1, 0x24",
            "bl sym.imp.calloc",
            "subs r5, r0, 0",
            "bne 0x189f8",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x18a78",
            "bl sym.imp.time",
            "mov r3, 0xb0",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00018ad4]",
            "ldr r0, [0x00018ad8]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x52",
            "bl sym.imp.printf",
            "ldr r0, [0x00018adc]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00018a94]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0x18a78",
            "mov r1, fp",
            "bl sym.imp.strcpy",
            "ldrb r3, [r4]",
            "strb r3, [r5, 0x10]",
            "ldrb r3, [r4, 1]",
            "strb r3, [r5, 0x11]",
            "ldrb r3, [r4, 2]",
            "strb r3, [r5, 0x12]",
            "ldrb r3, [r4, 3]",
            "strb r3, [r5, 0x13]",
            "ldrb r3, [r4, 4]",
            "strb r3, [r5, 0x14]",
            "ldrb r3, [r4, 5]",
            "str sl, [r5, 0x18]",
            "strb r3, [r5, 0x15]",
            "mov r3, 0",
            "str r3, [sp, 0x14]",
            "ldr r3, [0x00018ae0]",
            "str sb, [r5, 0x1c]",
            "str r8, [r5, 0x20]",
            "ldr r3, [r6, r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x18a68",
            "mov r0, 4",
            "mov r1, r5",
            "add r2, sp, 0x14",
            "blx r3",
            "mov r0, r5",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "b sym.imp.free",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.FW_getNewFWdate": {
        "function_address": "0x000244ec",
        "instructions": [
            "ldr r3, [0x00024524]",
            "ldr r2, [0x00024528]",
            "add r3, pc, r3",
            "push {r4, lr}",
            "ldr r2, [r3, r2]",
            "ldr r1, [r2]",
            "mov r4, r2",
            "cmp r1, 8",
            "bne 0x2451c",
            "ldr r2, [0x0002452c]",
            "ldr r1, [r3, r2]",
            "bl sym.imp.strcpy",
            "ldr r0, [r4]",
            "pop {r4, pc}"
        ]
    },
    "sym.wps_build_encr_settings": {
        "function_address": "0x0003385c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r5, r1",
            "ldr r6, [r2, 4]",
            "mov r7, r0",
            "mov r0, r2",
            "mov r4, r2",
            "and r6, r6, 0xf",
            "rsb r6, r6, 0x10",
            "mov r1, r6",
            "bl fcn.000086d4",
            "mov r2, r6",
            "mov r1, r6",
            "bl sym.imp.memset",
            "mov r0, r5",
            "movw r1, 0x1018",
            "bl fcn.000331d0",
            "ldr r1, [r4, 4]",
            "mov r0, r5",
            "add r1, r1, 0x10",
            "uxth r1, r1",
            "bl fcn.000331d0",
            "mov r1, 0x10",
            "mov r0, r5",
            "bl fcn.000086d4",
            "mov r1, 0x10",
            "mov r6, r0",
            "bl fcn.00008704",
            "cmp r0, 0",
            "blt 0x33910",
            "mov r0, r5",
            "mov r1, 0",
            "bl fcn.000086d4",
            "ldr r1, [r4, 8]",
            "mov r8, r0",
            "ldr r2, [r4, 4]",
            "mov r0, r5",
            "bl fcn.00033208",
            "ldr r3, [r4, 4]",
            "add r0, r7, 0x104",
            "mov r1, r6",
            "mov r2, r8",
            "bl fcn.0000904c",
            "adds r0, r0, 0",
            "mvnne r0, 0",
            "pop {r4, r5, r6, r7, r8, pc}",
            "mvn r0, 0",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.0000904c": {
        "function_address": "0x0000904c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x44c]!"
        ]
    },
    "sym.getHostname": {
        "function_address": "0x0000f58c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r8, r0",
            "ldr r0, [0x0000f644]",
            "sub sp, sp, 0x80",
            "ldr r5, [0x0000f648]",
            "mov r4, 0",
            "add r0, pc, r0",
            "add r5, pc, r5",
            "bl sym.imp.system",
            "str r4, [sp]",
            "mov r1, r4",
            "mov r2, 0x3c",
            "add r0, sp, 4",
            "bl sym.imp.memset",
            "str r4, [sp, 0x40]",
            "mov r1, r4",
            "mov r2, 0x3c",
            "add r0, sp, 0x44",
            "bl sym.imp.memset",
            "ldr r1, [0x0000f64c]",
            "mov r0, r5",
            "add r1, pc, r1",
            "bl sym.imp.fopen",
            "subs r7, r0, 0",
            "moveq r0, 0x10",
            "beq 0xf63c",
            "mov r1, 0x40",
            "mov r2, r7",
            "mov r0, sp",
            "bl sym.imp.fgets",
            "mov r0, r7",
            "bl sym.imp.fclose",
            "mov r0, r5",
            "add r5, sp, 0x40",
            "bl sym.imp.remove",
            "ldr r1, [0x0000f650]",
            "mov r2, r5",
            "mov r0, sp",
            "add r1, pc, r1",
            "bl sym.imp.sscanf",
            "mov r0, r8",
            "mov r1, r5",
            "bl sym.imp.strcpy",
            "mov r0, r4",
            "add sp, sp, 0x80",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "sym.security_SecurityCtrl_getDataToList": {
        "function_address": "0x0002cbb0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, lr}",
            "mov r5, r0",
            "ldr r6, [0x0002cd2c]",
            "sub sp, sp, 0x14",
            "ldr r3, [0x0002cd30]",
            "add r6, pc, r6",
            "ldr r3, [r6, r3]",
            "ldrb r2, [r3]",
            "mov r7, r3",
            "cmp r2, 3",
            "bls 0x2cc4c",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0x82",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002cd34]",
            "ldr r0, [0x0002cd38]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x2b",
            "bl sym.imp.printf",
            "ldrb r0, [r5, 3]",
            "ldrb r3, [r5, 2]",
            "str r0, [sp]",
            "ldrb r0, [r5, 4]",
            "ldrb r1, [r5]",
            "str r0, [sp, 4]",
            "ldrb r0, [r5, 5]",
            "ldrb r2, [r5, 1]",
            "str r0, [sp, 8]",
            "ldr r0, [0x0002cd3c]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0002cd40]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x0002cd44]",
            "ldr r3, [r6, r3]",
            "ldr r4, [r3]",
            "cmp r4, 0",
            "bne 0x2cc68",
            "mov r0, 0",
            "b 0x2cd24",
            "ldr sb, [0x0002cd48]",
            "ldr r8, [0x0002cd4c]",
            "add sb, pc, sb",
            "add r8, pc, r8",
            "add sb, sb, 0x2b",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x2ccec",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0x8c",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "mov r3, sb",
            "mov r0, r8",
            "bl sym.imp.printf",
            "ldrb r0, [r4, 7]",
            "ldrb r3, [r4, 6]",
            "ldrb r1, [r4, 4]",
            "ldrb r2, [r4, 5]",
            "str r0, [sp]",
            "ldrb r0, [r4, 8]",
            "str r0, [sp, 4]",
            "ldrb r0, [r4, 9]",
            "str r0, [sp, 8]",
            "ldr r0, [0x0002cd50]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0002cd40]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "add r0, r4, 4",
            "mov r1, r5",
            "mov r2, 6",
            "bl sym.imp.memcmp",
            "cmp r0, 0",
            "bne 0x2cd10",
            "ldr r3, [r4, 0x218]",
            "cmp r3, 1",
            "beq 0x2cd20",
            "ldr r4, [r4]",
            "cmp r4, 0",
            "bne 0x2cc7c",
            "b 0x2cc60",
            "mov r0, r4",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, pc}"
        ]
    },
    "sym.bignum_get_unsigned_bin_len": {
        "function_address": "0x00037410",
        "instructions": [
            "push {r3, lr}",
            "bl fcn.00034d70",
            "cmp r0, 0",
            "add r3, r0, 7",
            "movge r3, r0",
            "ands r0, r0, 7",
            "movne r0, 1",
            "add r0, r0, r3, asr 3",
            "pop {r3, pc}"
        ]
    },
    "fcn.00034d70": {
        "function_address": "0x00034d70",
        "instructions": [
            "mov r2, r0",
            "ldr r0, [r0]",
            "cmp r0, 0",
            "bxeq lr",
            "ldr r2, [r2, 0xc]",
            "sub r3, r0, 1",
            "sub r0, r0, 0xc0000001",
            "mov r1, 0x1c",
            "mul r3, r1, r3",
            "ldr r2, [r2, r0, lsl 2]",
            "cmp r2, 0",
            "addne r3, r3, 1",
            "lsrne r2, r2, 1",
            "bne 0x34d98",
            "mov r0, r3",
            "bx lr"
        ]
    },
    "sym.zyNetCtrl_SpeedTest_getSpeedTestTimeout": {
        "function_address": "0x0002a718",
        "instructions": [
            "push {r0, r1, r4, lr}",
            "ldr r4, [0x0002a7ac]",
            "ldr r3, [0x0002a7b0]",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "lsl r0, r0, 1",
            "add r0, r0, 5",
            "cmp r0, 0xb4",
            "ble 0x2a7a4",
            "ldr r3, [0x0002a7b4]",
            "mov r0, 0",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x2a7a4",
            "bl sym.imp.time",
            "movw r3, 0x189",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002a7b8]",
            "ldr r0, [0x0002a7bc]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x5c",
            "bl sym.imp.printf",
            "ldr r0, [0x0002a7c0]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0002a7c4]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, 0",
            "add sp, sp, 8",
            "pop {r4, pc}"
        ]
    },
    "sym.zyNetCtrl_tremNewdataInterface": {
        "function_address": "0x00014e4c",
        "instructions": [
            "ldr r3, [0x00014ee0]",
            "ldr r2, [0x00014ee4]",
            "add r3, pc, r3",
            "push {r4, r5, r6, r7, r8, lr}",
            "ldr r2, [r3, r2]",
            "ldr r4, [r2]",
            "mov r7, r2",
            "ldr r2, [0x00014ee8]",
            "cmp r4, 0",
            "ldr r5, [r3, r2]",
            "movne r6, 0",
            "bne 0x14ea8",
            "str r4, [r5]",
            "mov r0, r4",
            "pop {r4, r5, r6, r7, r8, pc}",
            "ldrh r3, [r4, 0x40]",
            "ldr r8, [r4]",
            "cmp r3, 0",
            "bne 0x14eb8",
            "mov r0, r4",
            "add r6, r6, 1",
            "mov r4, r8",
            "bl sym.imp.free",
            "ldr r3, [r5]",
            "cmp r6, r3",
            "blt 0x14e88",
            "b 0x14ecc",
            "ldr r0, [r4, 0x44]",
            "cmp r0, 0",
            "beq 0x14e98",
            "bl sym.imp.free",
            "b 0x14e98",
            "mov r3, 0",
            "mov r0, 1",
            "str r3, [r5]",
            "str r3, [r7]",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "sym.zyNetCtrl_getNewdataInterface": {
        "function_address": "0x00017c4c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x1c",
            "ldr r5, [0x00017e80]",
            "bl fcn.00008cf8",
            "subs r6, r0, 0",
            "add r5, pc, r5",
            "bne 0x17ccc",
            "ldr r3, [0x00017e84]",
            "ldr r3, [r5, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x17e74",
            "bl sym.imp.time",
            "mov r3, 0x56",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00017e88]",
            "ldr r0, [0x00017e8c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x124",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x00017e90]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00017e94]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0x17e74",
            "ldr r3, [0x00017e98]",
            "ldr sb, [r5, r3]",
            "ldr r3, [sb]",
            "cmp r3, 0",
            "bgt 0x17ce8",
            "mov r0, 1",
            "b 0x17e78",
            "mov r0, 0",
            "mov r6, 0",
            "bl sym.imp.time",
            "mov sl, r0",
            "ldr r3, [sb]",
            "cmp r6, r3",
            "bge 0x17ce0",
            "ldr r3, [0x00017e9c]",
            "cmp r6, 0",
            "mov r0, 1",
            "mov r1, 0x48",
            "ldr r3, [r5, r3]",
            "str r3, [sp, 0x14]",
            "ldr r8, [r3]",
            "ldr r3, [0x00017ea0]",
            "ldr r7, [r5, r3]",
            "beq 0x17d38",
            "ldr r3, [r7]",
            "cmp r3, 0",
            "bne 0x17d48",
            "bl sym.imp.calloc",
            "str r0, [r7]",
            "mov r4, r0",
            "b 0x17d54",
            "bl sym.imp.calloc",
            "str r0, [r4]",
            "mov r4, r0",
            "ldr r3, [0x00017ea4]",
            "add r0, r4, 4",
            "ldr r7, [r5, r3]",
            "add r7, r7, r6, lsl 4",
            "mov r1, r7",
            "bl sym.imp.strcpy",
            "str sl, [r4, 0x20]",
            "mov r3, 0",
            "strb r3, [r4, 0x28]",
            "mov r0, r4",
            "mov r1, r7",
            "bl fcn.0000928c",
            "ldr r3, [0x00017ea8]",
            "mov r2, 0",
            "ldr fp, [r5, r3]",
            "mov r3, r2",
            "ldr ip, [fp]",
            "cmp r2, ip",
            "bge 0x17dd4",
            "str r2, [sp, 8]",
            "add r0, r8, 4",
            "str r3, [sp, 0xc]",
            "mov r1, r7",
            "str ip, [sp, 0x10]",
            "bl sym.imp.strcmp",
            "ldr r8, [r8]",
            "add r2, sp, 8",
            "cmp r0, 0",
            "ldm r2, {r2, r3, ip}",
            "addeq r3, r3, 1",
            "add r2, r2, 1",
            "b 0x17d98",
            "cmp r3, 0",
            "beq 0x17e64",
            "strh r3, [r4, 0x40]",
            "mov r0, r3",
            "mov r1, 6",
            "bl sym.imp.calloc",
            "ldr r3, [sp, 0x14]",
            "str r0, [r4, 0x44]",
            "ldr r8, [r3]",
            "mov r3, 0",
            "mov r2, r3",
            "ldr r1, [fp]",
            "cmp r2, r1",
            "bge 0x17e64",
            "str r2, [sp, 8]",
            "add r0, r8, 4",
            "str r3, [sp, 0xc]",
            "mov r1, r7",
            "bl sym.imp.strcmp",
            "ldr r2, [sp, 8]",
            "cmp r0, 0",
            "ldr r3, [sp, 0xc]",
            "bne 0x17e58",
            "mov r1, r8",
            "ldr ip, [r4, 0x44]",
            "add r1, r1, 1",
            "ldrb lr, [r1, 0x13]",
            "add ip, ip, r3",
            "strb lr, [ip, r0]",
            "add r0, r0, 1",
            "cmp r0, 6",
            "bne 0x17e34",
            "add r3, r3, 6",
            "ldr r8, [r8]",
            "add r2, r2, 1",
            "b 0x17e00",
            "mov r0, r4",
            "add r6, r6, 1",
            "bl fcn.000086b0",
            "b 0x17cf8",
            "mov r0, r6",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00008cf8": {
        "function_address": "0x00008cf8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x684]!"
        ]
    },
    "fcn.0000928c": {
        "function_address": "0x0000928c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x2cc]!"
        ]
    },
    "fcn.000086b0": {
        "function_address": "0x000086b0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0xab4]!"
        ]
    },
    "sym.wps_validate_m4_encr": {
        "function_address": "0x0002faac",
        "instructions": [
            "cmp r0, 0",
            "beq 0x2fb08",
            "push {r4, lr}",
            "sub sp, sp, 0x1e8",
            "mov r4, r1",
            "mov r1, sp",
            "bl fcn.00008c8c",
            "cmp r0, 0",
            "bge 0x2fad8",
            "mvn r0, 0",
            "b 0x2fb00",
            "ldr r3, [sp, 0x60]",
            "cmp r3, 0",
            "bne 0x2faf0",
            "cmp r4, 0",
            "beq 0x2fafc",
            "b 0x2fad0",
            "ldr r3, [sp, 0x70]",
            "cmp r3, 0",
            "beq 0x2fae4",
            "mov r0, 0",
            "add sp, sp, 0x1e8",
            "pop {r4, pc}",
            "mvn r0, 0",
            "bx lr"
        ]
    },
    "sym.wps_kdf": {
        "function_address": "0x0002da44",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x54",
            "mov r8, r0",
            "mov r4, 4",
            "ldr r5, [sp, 0x7c]",
            "add sb, sp, 0x10",
            "str r4, [sp, 0x20]",
            "add sl, sp, 0x20",
            "lsl ip, r5, 3",
            "add r7, r5, 0x1f",
            "str r3, [sp, 0x18]",
            "add fp, sp, 0x30",
            "lsr r0, ip, 0x18",
            "strb r0, [sp, 0xc]",
            "lsr r0, ip, 0x10",
            "strb r0, [sp, 0xd]",
            "lsr r0, ip, 8",
            "strb r0, [sp, 0xe]",
            "add r0, sp, 8",
            "str r0, [sp, 0x10]",
            "mov r0, r3",
            "strb ip, [sp, 0xf]",
            "str r1, [sp, 0x14]",
            "str r2, [sp, 0x24]",
            "bl sym.imp.strlen",
            "ldr r6, [sp, 0x78]",
            "add r3, sp, 0xc",
            "str r4, [sp, 0x2c]",
            "mov r4, 1",
            "lsr r7, r7, 5",
            "str r0, [sp, 0x28]",
            "str r3, [sp, 0x1c]",
            "cmp r4, r7",
            "bgt 0x2db58",
            "lsr r3, r4, 0x18",
            "mov r0, r8",
            "strb r3, [sp, 8]",
            "mov r1, 0x20",
            "lsr r3, r4, 0x10",
            "mov r2, 4",
            "strb r3, [sp, 9]",
            "lsr r3, r4, 8",
            "strb r3, [sp, 0xa]",
            "mov r3, sb",
            "stm sp, {sl, fp}",
            "strb r4, [sp, 0xb]",
            "bl fcn.00008c08",
            "cmp r4, r7",
            "bge 0x2db40",
            "mov ip, fp",
            "mov r3, r6",
            "add lr, sp, 0x50",
            "mov r2, ip",
            "add r3, r3, 8",
            "ldm r2!, {r0, r1}",
            "cmp r2, lr",
            "mov ip, r2",
            "str r0, [r3, -8]",
            "str r1, [r3, -4]",
            "bne 0x2db14",
            "add r6, r6, 0x20",
            "sub r5, r5, 0x20",
            "b 0x2db50",
            "mov r0, r6",
            "mov r1, fp",
            "mov r2, r5",
            "bl sym.imp.memcpy",
            "add r4, r4, 1",
            "b 0x2dac4",
            "add sp, sp, 0x54",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.wps_build_rf_bands": {
        "function_address": "0x000314e0",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r0, r1",
            "mov r4, r1",
            "movw r1, 0x103c",
            "mov r5, r2",
            "bl fcn.0003100c",
            "mov r0, r4",
            "mov r1, 1",
            "bl fcn.0003100c",
            "mov r0, r4",
            "mov r1, r5",
            "bl fcn.00030ff4",
            "mov r0, 0",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.zyNetCtrl_checkWIFIChannelSyncList": {
        "function_address": "0x0001741c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, lr}",
            "sub sp, sp, 0x14",
            "ldr r4, [0x00017534]",
            "ldr r3, [0x00017538]",
            "add r4, pc, r4",
            "ldr r7, [r4, r3]",
            "ldr r3, [r7]",
            "cmp r3, 0",
            "bne 0x17448",
            "mov r0, 0",
            "b 0x1752c",
            "mov r0, 0",
            "bl sym.imp.time",
            "ldr r3, [0x0001753c]",
            "ldr r2, [0x00017540]",
            "ldr r5, [r4, r3]",
            "ldr r2, [r4, r2]",
            "ldr r3, [r5]",
            "ldr r2, [r2]",
            "rsb r0, r3, r0",
            "cmp r0, r2",
            "movlt r0, 0x10",
            "blt 0x1752c",
            "mov r0, 0",
            "bl sym.imp.time",
            "ldr r3, [0x00017544]",
            "mov r2, 0xc",
            "str r0, [r5]",
            "mov r5, 0",
            "ldr r6, [r4, r3]",
            "add r0, sp, 4",
            "str r5, [sp]",
            "mov r1, r5",
            "ldr r4, [r6]",
            "bl sym.imp.memset",
            "cmp r4, 0",
            "beq 0x17500",
            "ldr r3, [r4, 0x118]",
            "cmp r3, 5",
            "bgt 0x174f8",
            "add r8, r4, 4",
            "mov r1, sp",
            "mov r0, r8",
            "bl fcn.00008e90",
            "cmp r0, 0",
            "bne 0x174f8",
            "ldr r1, [r4, 0xc]",
            "add r3, r4, 0x14",
            "ldr r2, [r4, 0x10]",
            "mov r0, r8",
            "bl loc.imp.sendWIFIChannelRenew",
            "ldr r3, [r4, 0x118]",
            "add r5, r5, 1",
            "add r3, r3, 1",
            "str r3, [r4, 0x118]",
            "ldr r4, [r4]",
            "b 0x174a8",
            "cmp r5, 0",
            "ldreq r0, [r6]",
            "bne 0x17440",
            "cmp r0, 0",
            "beq 0x17524",
            "ldr r4, [r0]",
            "bl sym.imp.free",
            "mov r0, r4",
            "b 0x1750c",
            "str r0, [r6]",
            "str r0, [r7]",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, pc}"
        ]
    },
    "fcn.00008e90": {
        "function_address": "0x00008e90",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x574]!"
        ]
    },
    "loc.imp.sendWIFIChannelRenew": {
        "function_address": "0x00008668",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0xae4]!"
        ]
    },
    "sym.wps_build_version": {
        "function_address": "0x000334fc",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r0",
            "ldm r0, {r2, r3}",
            "sub r3, r2, r3",
            "cmp r3, 4",
            "bls 0x3353c",
            "movw r1, 0x104a",
            "bl fcn.000331d0",
            "mov r0, r4",
            "mov r1, 1",
            "bl fcn.000331d0",
            "mov r0, r4",
            "mov r1, 0x10",
            "bl fcn.000331f0",
            "mov r0, 0",
            "pop {r4, pc}",
            "mvn r0, 0",
            "pop {r4, pc}"
        ]
    },
    "sym.dup_binstr_data": {
        "function_address": "0x00031054",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "subs r6, r0, 0",
            "beq 0x3108c",
            "add r0, r1, 1",
            "mov r5, r1",
            "bl sym.imp.malloc",
            "subs r4, r0, 0",
            "beq 0x31094",
            "mov r1, r6",
            "mov r2, r5",
            "bl sym.imp.memcpy",
            "mov r3, 0",
            "strb r3, [r4, r5]",
            "b 0x31094",
            "mov r0, r6",
            "pop {r4, r5, r6, pc}",
            "mov r0, r4",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.wps_validate_upnp_set_selected_registrar": {
        "function_address": "0x00030340",
        "instructions": [
            "cmp r0, 0",
            "push {r4, r5, r6, lr}",
            "sub sp, sp, 0x1e8",
            "bne 0x30358",
            "mvn r5, 0",
            "b 0x30434",
            "mov r1, sp",
            "bl fcn.00008c8c",
            "cmp r0, 0",
            "blt 0x30350",
            "ldr r6, [sp, 4]",
            "ldr r5, [sp, 0x88]",
            "adds r4, r6, 0",
            "movne r4, 1",
            "cmp r5, 0",
            "beq 0x3038c",
            "ldrb r5, [r5]",
            "adds r5, r5, 0",
            "movne r5, 1",
            "ldr r0, [sp]",
            "bl fcn.0002f058",
            "cmp r0, 0",
            "bne 0x30410",
            "ldr r0, [sp, 0x40]",
            "mov r1, r5",
            "bl fcn.0002ee4c",
            "cmp r0, 0",
            "bne 0x30410",
            "ldr r0, [sp, 0x2c]",
            "mov r1, r4",
            "mov r2, r5",
            "bl fcn.0002ee80",
            "cmp r0, 0",
            "bne 0x30410",
            "mov r0, r6",
            "mov r1, r4",
            "bl fcn.0002ed7c",
            "subs r5, r0, 0",
            "bne 0x30410",
            "ldr r3, [sp, 0xf4]",
            "ldr r0, [sp, 0xf8]",
            "cmp r3, 0",
            "bne 0x303f8",
            "cmp r4, 0",
            "beq 0x30420",
            "b 0x30350",
            "cmp r0, 0x1e",
            "bls 0x30420",
            "mov r1, 6",
            "bl sym.imp.__aeabi_uidivmod",
            "cmp r1, 0",
            "beq 0x30420",
            "cmp r4, 0",
            "bne 0x30350",
            "mov r5, r4",
            "b 0x30434",
            "ldr r3, [sp, 0x14]",
            "cmp r3, 0",
            "bne 0x30434",
            "cmp r4, 0",
            "bne 0x30350",
            "mov r0, r5",
            "add sp, sp, 0x1e8",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.getIntfnameByFreqBand": {
        "function_address": "0x000115a8",
        "instructions": [
            "cmp r0, 0",
            "push {r3, lr}",
            "moveq r0, r1",
            "ldreq r1, [0x000116a8]",
            "addeq r1, pc, r1",
            "beq 0x1169c",
            "cmp r0, 1",
            "moveq r0, r1",
            "ldreq r1, [0x000116ac]",
            "addeq r1, pc, r1",
            "beq 0x1169c",
            "cmp r0, 0x20",
            "moveq r0, r1",
            "ldreq r1, [0x000116b0]",
            "addeq r1, pc, r1",
            "beq 0x1169c",
            "cmp r0, 0x21",
            "moveq r0, r1",
            "ldreq r1, [0x000116b4]",
            "addeq r1, pc, r1",
            "beq 0x1169c",
            "cmp r0, 0xc0",
            "moveq r0, r1",
            "ldreq r1, [0x000116b8]",
            "addeq r1, pc, r1",
            "beq 0x1169c",
            "cmp r0, 0xe0",
            "moveq r0, r1",
            "ldreq r1, [0x000116bc]",
            "addeq r1, pc, r1",
            "beq 0x1169c",
            "cmp r0, 0xc1",
            "moveq r0, r1",
            "ldreq r1, [0x000116c0]",
            "addeq r1, pc, r1",
            "beq 0x1169c",
            "cmp r0, 0xe1",
            "moveq r0, r1",
            "ldreq r1, [0x000116c4]",
            "addeq r1, pc, r1",
            "beq 0x1169c",
            "cmp r0, 0xc9",
            "moveq r0, r1",
            "ldreq r1, [0x000116c8]",
            "addeq r1, pc, r1",
            "beq 0x1169c",
            "cmp r0, 0xe9",
            "moveq r0, r1",
            "ldreq r1, [0x000116cc]",
            "addeq r1, pc, r1",
            "beq 0x1169c",
            "cmp r0, 0x40",
            "moveq r0, r1",
            "ldreq r1, [0x000116d0]",
            "addeq r1, pc, r1",
            "beq 0x1169c",
            "cmp r0, 0x41",
            "bne 0x116a0",
            "mov r0, r1",
            "ldr r1, [0x000116d4]",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "mov r0, 0",
            "pop {r3, pc}"
        ]
    },
    "sym.zyNetCtrl_WPS_getWPSSyncList": {
        "function_address": "0x0001ff10",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "mov r6, r0",
            "ldr r5, [0x000200c4]",
            "sub sp, sp, 0x14",
            "ldr r3, [0x000200c8]",
            "add r5, pc, r5",
            "ldr r7, [r5, r3]",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x1ff84",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0xb72",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000200cc]",
            "ldr r0, [0x000200d0]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x290",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "mov r0, 0xa",
            "bl sym.imp.putchar",
            "ldr r3, [0x000200d4]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "cmp r6, 0",
            "bne 0x1ff94",
            "mov r0, 0x10",
            "b 0x200bc",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x1fff4",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0xb78",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000200d8]",
            "ldr r0, [0x000200dc]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x290",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x000200e0]",
            "ldrb r1, [r6, 6]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x000200d4]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x000200e4]",
            "ldr r3, [r5, r3]",
            "ldr r4, [r3]",
            "cmp r4, 0",
            "beq 0x1ff8c",
            "ldr r3, [r4, 0x14]",
            "ldrb r2, [r3]",
            "ldrb r3, [r6, 6]",
            "cmp r2, r3",
            "bne 0x200b4",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x2009c",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0xb80",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000200e8]",
            "ldr r0, [0x000200ec]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x290",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldrb r0, [r4, 7]",
            "ldrb r3, [r4, 6]",
            "ldrb r1, [r4, 4]",
            "ldrb r2, [r4, 5]",
            "str r0, [sp]",
            "ldrb r0, [r4, 8]",
            "str r0, [sp, 4]",
            "ldrb r0, [r4, 9]",
            "str r0, [sp, 8]",
            "ldr r0, [0x000200f0]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x000200d4]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [r4, 4]!",
            "mov r0, 0",
            "str r3, [r6]",
            "ldrh r3, [r4, 4]",
            "strh r3, [r6, 4]",
            "b 0x200bc",
            "ldr r4, [r4]",
            "b 0x20000",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, pc}"
        ]
    },
    "sym.startNetCtrl": {
        "function_address": "0x00009d14",
        "instructions": [
            "push {r0, r1, r4, lr}",
            "ldr r4, [0x00009db0]",
            "ldr r3, [0x00009db4]",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x9d80",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x263",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00009db8]",
            "ldr r0, [0x00009dbc]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x5b",
            "bl sym.imp.printf",
            "ldr r0, [0x00009dc0]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00009dc4]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x00009dc8]",
            "mov r0, 2",
            "ldr r3, [r4, r3]",
            "ldr r1, [r3]",
            "bl fcn.00008980",
            "subs r4, r0, 0",
            "movne r4, 0x10",
            "bne 0x9da4",
            "bl fcn.000085d8",
            "mov r0, r4",
            "add sp, sp, 8",
            "pop {r4, pc}"
        ]
    },
    "fcn.000085d8": {
        "function_address": "0x000085d8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0xb44]!"
        ]
    },
    "sym.wps_validate_m7_encr": {
        "function_address": "0x0002fe00",
        "instructions": [
            "cmp r0, 0",
            "beq 0x2fedc",
            "push {r4, r5, r6, lr}",
            "sub sp, sp, 0x1e8",
            "mov r4, r1",
            "mov r1, sp",
            "mov r5, r2",
            "bl fcn.00008c8c",
            "cmp r0, 0",
            "bge 0x2fe30",
            "mvn r0, 0",
            "b 0x2fed4",
            "ldr r3, [sp, 0x6c]",
            "cmp r3, 0",
            "beq 0x2fe70",
            "clz r4, r4",
            "lsr r4, r4, 5",
            "ldr r0, [sp, 0xe4]",
            "mov r2, r4",
            "ldr r1, [sp, 0xe8]",
            "bl fcn.0002ef38",
            "cmp r0, 0",
            "bne 0x2fe70",
            "ldr r0, [sp, 0x84]",
            "mov r1, r4",
            "bl fcn.0002eeb8",
            "cmp r0, 0",
            "beq 0x2fe80",
            "cmp r5, 0",
            "bne 0x2fe28",
            "mov r0, r5",
            "b 0x2fed4",
            "ldr r0, [sp, 0x74]",
            "mov r1, r4",
            "bl fcn.0002f078",
            "cmp r0, 0",
            "bne 0x2fe70",
            "ldr r6, [sp, 0x78]",
            "mov r1, r4",
            "mov r0, r6",
            "bl fcn.0002eed8",
            "cmp r0, 0",
            "bne 0x2fe70",
            "ldr r0, [sp, 0xec]",
            "mov r2, r6",
            "ldr r1, [sp, 0xf0]",
            "mov r3, r4",
            "bl fcn.0002ef74",
            "cmp r0, 0",
            "bne 0x2fe70",
            "ldr r3, [sp, 0x70]",
            "cmp r3, 0",
            "beq 0x2fe70",
            "add sp, sp, 0x1e8",
            "pop {r4, r5, r6, pc}",
            "mvn r0, 0",
            "bx lr"
        ]
    },
    "fcn.0002ef38": {
        "function_address": "0x0002ef38",
        "instructions": [
            "cmp r0, 0",
            "bne 0x2ef4c",
            "adds r0, r2, 0",
            "mvnne r0, 0",
            "bx lr",
            "cmp r1, 0",
            "beq 0x2ef6c",
            "add r1, r0, r1",
            "ldrb r0, [r1, -1]",
            "cmp r0, 0",
            "movne r0, 0",
            "mvneq r0, 0",
            "bx lr",
            "mvn r0, 0",
            "bx lr"
        ]
    },
    "fcn.0002eeb8": {
        "function_address": "0x0002eeb8",
        "instructions": [
            "cmp r0, 0",
            "bne 0x2eecc",
            "adds r0, r1, 0",
            "mvnne r0, 0",
            "bx lr",
            "ldrb r0, [r0]",
            "sbfx r0, r0, 0, 1",
            "bx lr"
        ]
    },
    "fcn.0002f078": {
        "function_address": "0x0002f078",
        "instructions": [
            "cmp r0, 0",
            "bne 0x2f088",
            "adds r0, r1, 0",
            "b 0x2f0c8",
            "ldrb r1, [r0]",
            "ldrb r3, [r0, 1]",
            "orr r3, r3, r1, lsl 8",
            "bics r0, r3, 0x3f",
            "bne 0x2f0d0",
            "cmp r3, 0",
            "beq 0x2f0d0",
            "mov r2, r3",
            "mov r1, r0",
            "sub ip, r2, 1",
            "add r1, r1, 1",
            "ands r2, ip, r2",
            "bne 0x2f0ac",
            "cmp r1, 1",
            "bxeq lr",
            "subs r0, r3, 0x22",
            "mvnne r0, 0",
            "bx lr",
            "mvn r0, 0",
            "bx lr"
        ]
    },
    "fcn.0002eed8": {
        "function_address": "0x0002eed8",
        "instructions": [
            "cmp r0, 0",
            "bne 0x2eee8",
            "adds r0, r1, 0",
            "b 0x2ef28",
            "ldrb r1, [r0]",
            "ldrb r3, [r0, 1]",
            "orr r3, r3, r1, lsl 8",
            "bics r0, r3, 0xf",
            "bne 0x2ef30",
            "cmp r3, 0",
            "beq 0x2ef30",
            "mov r2, r3",
            "mov r1, r0",
            "sub ip, r2, 1",
            "add r1, r1, 1",
            "ands r2, ip, r2",
            "bne 0x2ef0c",
            "cmp r1, 1",
            "bxeq lr",
            "subs r0, r3, 0xc",
            "mvnne r0, 0",
            "bx lr",
            "mvn r0, 0",
            "bx lr"
        ]
    },
    "fcn.0002ef74": {
        "function_address": "0x0002ef74",
        "instructions": [
            "cmp r0, 0",
            "bne 0x2ef88",
            "adds r0, r3, 0",
            "mvnne r0, 0",
            "bx lr",
            "cmp r2, 0",
            "beq 0x2efa4",
            "ldrb ip, [r2]",
            "ldrb r3, [r2, 1]",
            "orr r3, r3, ip, lsl 8",
            "cmp r3, 2",
            "beq 0x2efc8",
            "sub r3, r1, 9",
            "cmp r3, 0x36",
            "bhi 0x2efc8",
            "add r1, r0, r1",
            "ldrb r0, [r1, -1]",
            "cmp r0, 0",
            "movne r0, 0",
            "mvneq r0, 0",
            "bx lr",
            "cmp r1, 0x40",
            "movls r0, 0",
            "mvnhi r0, 0",
            "bx lr"
        ]
    },
    "sym.wpabuf_printf": {
        "function_address": "0x0002eb78",
        "instructions": [
            "push {r1, r2, r3}",
            "push {r0, r1, r2, r4, lr}",
            "mov r4, r0",
            "ldr r0, [r0, 8]",
            "add r3, sp, 0x18",
            "ldr r2, [r4, 4]",
            "ldr r1, [r4]",
            "add r0, r0, r2",
            "str r3, [sp, 4]",
            "rsb r1, r2, r1",
            "ldr r2, [sp, 0x14]",
            "bl sym.imp.vsnprintf",
            "cmp r0, 0",
            "blt 0x2ebc0",
            "ldm r4, {r2, r3}",
            "rsb r2, r3, r2",
            "cmp r0, r2",
            "blo 0x2ebc4",
            "bl sym.imp.abort",
            "add r3, r0, r3",
            "str r3, [r4, 4]",
            "add sp, sp, 0xc",
            "pop {r4, lr}",
            "add sp, sp, 0xc",
            "bx lr"
        ]
    },
    "sym.imp.vsnprintf": {
        "function_address": "0x000089e0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x894]!"
        ]
    },
    "sym.wps_build_cred": {
        "function_address": "0x00030488",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sb, lr}",
            "mov r4, r0",
            "add r6, r0, 0x180",
            "mov r2, 0x80",
            "mov r5, r1",
            "mov r0, r6",
            "mov r1, 0",
            "add r7, r4, 0x1f0",
            "bl sym.imp.memset",
            "ldr r3, [r4]",
            "mov r0, r6",
            "ldr r2, [r3, 0x44]",
            "add r1, r3, 0x20",
            "bl sym.imp.memcpy",
            "ldr r3, [r4]",
            "ldr r3, [r3, 0x44]",
            "str r3, [r4, 0x1a0]",
            "mov r3, 0x170",
            "ldrh r2, [r4, r3]",
            "mov r3, 0x1a4",
            "strh r2, [r4, r3]",
            "movw r3, 0x16e",
            "movw r2, 0x1a6",
            "ldrh r3, [r4, r3]",
            "mov sb, r2",
            "strh r3, [r4, r2]",
            "mov r3, r4",
            "ldr r1, [r3, 0x30]!",
            "str r1, [r4, 0x1f0]",
            "ldrh r3, [r3, 4]",
            "strh r3, [r7, 4]",
            "ldr r3, [r4]",
            "ldr r1, [r3, 0xe8]",
            "cmp r1, 0",
            "beq 0x30530",
            "ldr r2, [r3, 0xec]",
            "add r0, r4, 0x1a8",
            "add r0, r0, 1",
            "bl sym.imp.memcpy",
            "ldr r3, [r4]",
            "ldr r3, [r3, 0xec]",
            "str r3, [r4, 0x1ec]",
            "mov r0, 0xc8",
            "bl fcn.00008ddc",
            "subs r8, r0, 0",
            "beq 0x3062c",
            "mov r0, r5",
            "movw r1, 0x1026",
            "bl fcn.00030440",
            "mov r0, r5",
            "mov r1, 1",
            "bl fcn.00030440",
            "mov r1, 1",
            "mov r0, r5",
            "bl fcn.000086d4",
            "mov r3, 1",
            "movw r1, 0x1045",
            "strb r3, [r0]",
            "mov r0, r5",
            "bl fcn.00030440",
            "ldr r1, [r4, 0x1a0]",
            "mov r0, r5",
            "uxth r1, r1",
            "bl fcn.00030440",
            "ldr r2, [r4, 0x1a0]",
            "mov r0, r5",
            "mov r1, r6",
            "bl fcn.00030460",
            "mov r0, r5",
            "movw r1, 0x1003",
            "bl fcn.00030440",
            "mov r0, r5",
            "mov r1, 2",
            "bl fcn.00030440",
            "mov r3, 0x1a4",
            "mov r0, r5",
            "ldrh r1, [r4, r3]",
            "bl fcn.00030440",
            "mov r0, r5",
            "movw r1, 0x100f",
            "bl fcn.00030440",
            "mov r0, r5",
            "mov r1, 2",
            "bl fcn.00030440",
            "ldrh r1, [r4, sb]",
            "mov r0, r5",
            "bl fcn.00030440",
            "mov r0, r5",
            "movw r1, 0x1027",
            "bl fcn.00030440",
            "ldr r1, [r4, 0x1ec]",
            "mov r0, r5",
            "uxth r1, r1",
            "bl fcn.00030440",
            "ldr r2, [r4, 0x1ec]",
            "mov r0, r5",
            "add r1, r6, 0x29",
            "bl fcn.00030460",
            "mov r0, r5",
            "mov r1, r7",
            "bl fcn.00008848",
            "subs r4, r0, 0",
            "mov r0, r8",
            "beq 0x30634",
            "bl fcn.00008f74",
            "mvn r4, 0",
            "b 0x30638",
            "bl fcn.00008f74",
            "mov r0, r4",
            "pop {r3, r4, r5, r6, r7, r8, sb, pc}"
        ]
    },
    "fcn.00030440": {
        "function_address": "0x00030440",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r1",
            "mov r1, 2",
            "bl fcn.000086d4",
            "lsr r3, r4, 8",
            "strb r3, [r0]",
            "strb r4, [r0, 1]"
        ]
    },
    "fcn.00030460": {
        "function_address": "0x00030460",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "subs r5, r1, 0",
            "popeq {r3, r4, r5, pc}",
            "mov r4, r2",
            "mov r1, r2",
            "bl fcn.000086d4",
            "mov r1, r5",
            "mov r2, r4",
            "pop {r3, r4, r5, lr}",
            "b sym.imp.memcpy"
        ]
    },
    "sym.dh5_init": {
        "function_address": "0x00034ac8",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r5, r0",
            "mov r0, 5",
            "mov r4, r1",
            "bl fcn.000086bc",
            "mov r1, r5",
            "bl fcn.00008f14",
            "str r0, [r4]",
            "adds r0, r0, 0",
            "movne r0, 1",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.00008f14": {
        "function_address": "0x00008f14",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x51c]!"
        ]
    },
    "sym.bignum_mulmod": {
        "function_address": "0x0003765c",
        "instructions": [
            "push {r3, lr}",
            "bl fcn.00036678",
            "adds r0, r0, 0",
            "mvnne r0, 0",
            "pop {r3, pc}"
        ]
    },
    "fcn.00036678": {
        "function_address": "0x00036678",
        "instructions": [
            "push {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}",
            "mov r7, r0",
            "mov r0, sp",
            "mov r8, r1",
            "mov r6, r2",
            "mov r5, r3",
            "bl fcn.00034e04",
            "cmp r0, 0",
            "bne 0x366e0",
            "mov r0, r7",
            "mov r1, r8",
            "mov r2, sp",
            "bl fcn.00035644",
            "subs r7, r0, 0",
            "mov r0, sp",
            "beq 0x366c4",
            "bl fcn.00034db0",
            "mov r0, r7",
            "b 0x366e0",
            "mov r2, r5",
            "mov r1, r6",
            "bl fcn.000365ac",
            "mov r5, r0",
            "mov r0, sp",
            "bl fcn.00034db0",
            "mov r0, r5",
            "add sp, sp, 0x10",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.00034e04": {
        "function_address": "0x00034e04",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r0",
            "mov r0, 0x20",
            "bl sym.imp.malloc",
            "str r0, [r4, 0xc]",
            "cmp r0, 0",
            "beq 0x34e54",
            "mov r3, 0",
            "mov r1, r3",
            "ldr r2, [r4, 0xc]",
            "mov r0, 0",
            "str r1, [r2, r3]",
            "add r3, r3, 4",
            "cmp r3, 0x20",
            "bne 0x34e28",
            "str r0, [r4]",
            "mov r3, 8",
            "str r3, [r4, 4]",
            "str r0, [r4, 8]",
            "pop {r4, pc}",
            "mvn r0, 1",
            "pop {r4, pc}"
        ]
    },
    "fcn.00034db0": {
        "function_address": "0x00034db0",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r4, r0",
            "ldr r3, [r0, 0xc]",
            "cmp r3, 0",
            "popeq {r3, r4, r5, pc}",
            "mov r3, 0",
            "mov r1, r3",
            "ldr r2, [r4]",
            "mov r5, 0",
            "cmp r3, r2",
            "ldrlt r2, [r4, 0xc]",
            "strlt r1, [r2, r3, lsl 2]",
            "addlt r3, r3, 1",
            "blt 0x34dcc",
            "ldr r0, [r4, 0xc]",
            "bl sym.imp.free",
            "str r5, [r4, 0xc]",
            "str r5, [r4]",
            "str r5, [r4, 4]",
            "str r5, [r4, 8]",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.000365ac": {
        "function_address": "0x000365ac",
        "instructions": [
            "push {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}",
            "mov r5, r0",
            "mov r0, sp",
            "mov r6, r1",
            "mov r8, r2",
            "bl fcn.00034e04",
            "subs r7, r0, 0",
            "bne 0x36668",
            "ldr r3, [r6]",
            "cmp r3, 0",
            "beq 0x3661c",
            "mov r0, r5",
            "mov r1, r6",
            "bl fcn.00034c1c",
            "cmn r0, 1",
            "mov r0, r5",
            "bne 0x365fc",
            "mov r1, sp",
            "bl fcn.00034fbc",
            "b 0x3660c",
            "mov r1, r6",
            "mov r2, r7",
            "mov r3, sp",
            "bl fcn.000360e0",
            "cmp r0, 0",
            "mov r5, r0",
            "beq 0x3662c",
            "b 0x36620",
            "mvn r5, 2",
            "mov r0, sp",
            "bl fcn.00034db0",
            "b 0x3666c",
            "ldr r3, [r6, 8]",
            "ldr r2, [sp, 8]",
            "cmp r2, r3",
            "beq 0x36654",
            "mov r0, r6",
            "mov r1, sp",
            "mov r2, r8",
            "bl fcn.00035314",
            "mov r7, r0",
            "b 0x36660",
            "mov r0, sp",
            "mov r1, r8",
            "bl fcn.00034d0c",
            "mov r0, sp",
            "bl fcn.00034db0",
            "mov r5, r7",
            "mov r0, r5",
            "add sp, sp, 0x10",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "sym.dh_init": {
        "function_address": "0x00034938",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "subs r4, r0, 0",
            "sub sp, sp, 0x1c",
            "beq 0x34a0c",
            "ldr r0, [r1]",
            "mov r5, r1",
            "bl fcn.00008f74",
            "ldr r0, [r4, 0x10]",
            "bl fcn.00008ddc",
            "str r0, [r5]",
            "cmp r0, 0",
            "beq 0x34a0c",
            "ldr r1, [r4, 0x10]",
            "bl fcn.000086d4",
            "ldr r1, [r4, 0x10]",
            "bl fcn.00008704",
            "subs r7, r0, 0",
            "beq 0x34994",
            "ldr r0, [r5]",
            "bl fcn.00008f74",
            "mov r0, 0",
            "str r0, [r5]",
            "b 0x34a20",
            "ldr r3, [r5]",
            "ldr r1, [r4, 0xc]",
            "ldr r6, [r3, 8]",
            "ldr r2, [r4, 0x10]",
            "mov r0, r6",
            "bl sym.imp.memcmp",
            "cmp r0, 0",
            "strbgt r7, [r6]",
            "ldr r0, [r4, 0x10]",
            "str r0, [sp, 0x14]",
            "bl fcn.00008ddc",
            "subs r6, r0, 0",
            "beq 0x34a0c",
            "ldr r2, [r4, 0xc]",
            "ldr r3, [r5]",
            "str r2, [sp]",
            "ldr r2, [r4, 0x10]",
            "str r2, [sp, 4]",
            "ldr r2, [r6, 8]",
            "str r2, [sp, 8]",
            "add r2, sp, 0x14",
            "str r2, [sp, 0xc]",
            "ldr r2, [r3, 8]",
            "ldmib r4, {r0, r1}",
            "ldr r3, [r3, 4]",
            "bl fcn.000085a8",
            "cmp r0, 0",
            "mov r0, r6",
            "bge 0x34a14",
            "bl fcn.00008f74",
            "mov r0, 0",
            "b 0x34a20",
            "ldr r1, [sp, 0x14]",
            "bl fcn.000086d4",
            "mov r0, r6",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, pc}"
        ]
    },
    "sym.removeNetworkCtrloutputfile": {
        "function_address": "0x00010da0",
        "instructions": [
            "ldr r0, [0x00010dc4]",
            "push {r3, lr}",
            "add r0, pc, r0",
            "bl sym.imp.remove",
            "ldr r0, [0x00010dc8]",
            "add r0, pc, r0",
            "bl sym.imp.system",
            "mov r0, 0",
            "pop {r3, pc}"
        ]
    },
    "sym.zyNetCtrl_WPS_freewps": {
        "function_address": "0x0001b910",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r0",
            "ldr r3, [r0]",
            "cmp r3, 0",
            "beq 0x1b9b8",
            "ldr r0, [r3, 0x50]",
            "bl fcn.00008cec",
            "ldr r3, [r4]",
            "ldr r0, [r3, 0x58]",
            "bl fcn.00008cec",
            "ldr r3, [r4]",
            "ldr r0, [r3, 0x5c]",
            "bl fcn.00008cec",
            "ldr r3, [r4]",
            "ldr r0, [r3, 0x60]",
            "bl fcn.00008cec",
            "ldr r3, [r4]",
            "ldr r0, [r3, 0x54]",
            "bl fcn.00008cec",
            "ldr r3, [r4]",
            "ldr r0, [r3, 4]",
            "bl fcn.00008cec",
            "ldr r3, [r4]",
            "ldr r0, [r3, 0xe8]",
            "bl fcn.00008cec",
            "ldr r3, [r4]",
            "ldr r0, [r3, 0x114]",
            "bl fcn.00008cec",
            "ldr r3, [r4]",
            "ldr r0, [r3, 0x11c]",
            "bl fcn.00008cec",
            "ldr r3, [r4]",
            "ldr r0, [r3, 0x120]",
            "bl fcn.00008cec",
            "ldr r3, [r4]",
            "ldr r0, [r3, 0x124]",
            "bl fcn.00008cec",
            "ldr r3, [r4]",
            "ldr r0, [r3, 0x128]",
            "bl fcn.00008cec",
            "ldr r0, [r4]",
            "bl fcn.00008cec",
            "ldr r0, [r4, 0x208]",
            "bl fcn.00008cec",
            "ldr r0, [r4, 0x20c]",
            "bl fcn.00008cec",
            "ldr r0, [r4, 0x210]",
            "bl fcn.00008cec",
            "ldr r0, [r4, 0x214]",
            "bl fcn.00008cec",
            "ldr r0, [r4, 0x218]",
            "bl fcn.00008cec",
            "ldr r0, [r4, 0x134]",
            "bl fcn.00008cec",
            "ldr r0, [r4, 0xd8]",
            "bl fcn.00008cec",
            "ldr r0, [r4, 0xdc]",
            "bl fcn.00008cec",
            "ldr r0, [r4, 0xe0]",
            "bl fcn.00008cec",
            "ldr r0, [r4, 0x138]",
            "bl fcn.00008cec",
            "mov r0, r4",
            "bl fcn.00008cec",
            "mov r0, 0",
            "pop {r4, pc}"
        ]
    },
    "sym.bignum_set_unsigned_bin": {
        "function_address": "0x00037540",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r4, r0",
            "ldr r3, [r0, 4]",
            "mov r5, r1",
            "mov r6, r2",
            "cmp r3, 1",
            "ble 0x3756c",
            "add r6, r5, r6",
            "mov r0, r4",
            "bl fcn.00034ce0",
            "b 0x375b4",
            "mov r1, 2",
            "bl fcn.00034f34",
            "cmp r0, 0",
            "beq 0x3755c",
            "b 0x375d0",
            "mov r1, 8",
            "mov r2, r4",
            "bl fcn.00035fd8",
            "cmp r0, 0",
            "bne 0x375d0",
            "ldr r3, [r4, 0xc]",
            "ldrb r2, [r5], 1",
            "ldr r1, [r3]",
            "orr r2, r1, r2",
            "str r2, [r3]",
            "ldr r3, [r4]",
            "add r3, r3, 1",
            "str r3, [r4]",
            "rsb r3, r5, r6",
            "mov r0, r4",
            "cmp r3, 0",
            "bgt 0x37580",
            "bl fcn.00034d3c",
            "mov r0, 0",
            "pop {r4, r5, r6, pc}",
            "mvn r0, 0",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.00034ce0": {
        "function_address": "0x00034ce0",
        "instructions": [
            "ldr r2, [r0, 0xc]",
            "mov r3, 0",
            "str r3, [r0, 8]",
            "mov ip, r3",
            "str r3, [r0]",
            "ldr r1, [r0, 4]",
            "cmp r3, r1",
            "strlt ip, [r2], 4",
            "addlt r3, r3, 1",
            "blt 0x34cf4",
            "bx lr"
        ]
    },
    "fcn.00035fd8": {
        "function_address": "0x00035fd8",
        "instructions": [
            "cmp r2, r0",
            "push {r4, r5, r6, lr}",
            "mov r5, r1",
            "mov r4, r2",
            "bne 0x36018",
            "mov r1, 0x1c",
            "mov r0, r5",
            "bl sym.imp.__aeabi_idiv",
            "ldr r1, [r4]",
            "mov r6, r0",
            "ldr r3, [r4, 4]",
            "add r1, r0, r1",
            "add r1, r1, 1",
            "cmp r3, r1",
            "bge 0x3602c",
            "b 0x36038",
            "mov r1, r2",
            "bl fcn.00034fbc",
            "cmp r0, 0",
            "beq 0x35fec",
            "pop {r4, r5, r6, pc}",
            "cmp r5, 0x1b",
            "ble 0x3604c",
            "b 0x3607c",
            "mov r0, r4",
            "bl fcn.00034f34",
            "cmp r0, 0",
            "beq 0x3602c",
            "pop {r4, r5, r6, pc}",
            "mov r0, r5",
            "mov r1, 0x1c",
            "bl sym.imp.__aeabi_idivmod",
            "cmp r1, 0",
            "beq 0x360d0",
            "ldr ip, [r4, 0xc]",
            "mvn lr, 0",
            "mov r2, 0",
            "rsb r5, r1, 0x1c",
            "mvn lr, lr, lsl r1",
            "mov r3, r2",
            "b 0x36094",
            "mov r0, r4",
            "mov r1, r6",
            "bl fcn.00035074",
            "cmp r0, 0",
            "beq 0x3604c",
            "pop {r4, r5, r6, pc}",
            "ldr r0, [r4]",
            "cmp r2, r0",
            "bge 0x360bc",
            "ldr r0, [ip]",
            "add r2, r2, 1",
            "orr r3, r3, r0, lsl r1",
            "bic r3, r3, 0xf0000000",
            "str r3, [ip], 4",
            "and r3, lr, r0, lsr r5",
            "b 0x36094",
            "cmp r3, 0",
            "addne r1, r0, 1",
            "ldrne r2, [r4, 0xc]",
            "strne r1, [r4]",
            "strne r3, [r2, r0, lsl 2]",
            "mov r0, r4",
            "bl fcn.00034d3c",
            "mov r0, 0",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.00034d3c": {
        "function_address": "0x00034d3c",
        "instructions": [
            "ldr r3, [r0]",
            "cmp r3, 0",
            "ble 0x34d68",
            "ldr r2, [r0, 0xc]",
            "sub r1, r3, 0xc0000001",
            "ldr r2, [r2, r1, lsl 2]",
            "cmp r2, 0",
            "subeq r3, r3, 1",
            "streq r3, [r0]",
            "beq fcn.00034d3c",
            "bx lr",
            "streq r3, [r0, 8]",
            "bx lr"
        ]
    },
    "sym.getFirmwareVersion": {
        "function_address": "0x0000f3b4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r6, 0",
            "ldr r4, [0x0000f460]",
            "sub sp, sp, 0x100",
            "mov r1, r6",
            "mov r2, 0x7c",
            "str r6, [sp, 0x80]",
            "mov r5, r0",
            "add r4, pc, r4",
            "add r0, sp, 0x84",
            "bl sym.imp.memset",
            "ldr r1, [0x0000f464]",
            "mov r2, r4",
            "mov r0, sp",
            "add r1, pc, r1",
            "bl sym.imp.sprintf",
            "mov r0, sp",
            "bl sym.imp.system",
            "ldr r1, [0x0000f468]",
            "mov r0, r4",
            "add r1, pc, r1",
            "bl sym.imp.fopen",
            "subs r7, r0, 0",
            "beq 0xf454",
            "add r8, sp, 0x80",
            "mov r1, 0x80",
            "mov r2, r7",
            "mov r0, r8",
            "bl sym.imp.fgets",
            "mov r1, r8",
            "mov r2, 0x80",
            "mov r0, r5",
            "bl sym.imp.memcpy",
            "mov r0, r5",
            "bl sym.imp.strlen",
            "strb r6, [r5, r0]",
            "mov r0, r7",
            "bl sym.imp.fclose",
            "mov r0, r4",
            "bl sym.imp.remove",
            "mov r0, 0",
            "add sp, sp, 0x100",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "sym.getDeviceLANMac": {
        "function_address": "0x000117a8",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "subs r5, r0, 0",
            "sub sp, sp, 0xd0",
            "bne 0x117c0",
            "mov r0, 0x10",
            "b 0x1188c",
            "ldr r6, [0x00011894]",
            "mov r4, 0",
            "str r4, [sp, 0x50]",
            "mov r1, r4",
            "add r6, pc, r6",
            "mov r2, 0x7c",
            "add r0, sp, 0x54",
            "add r7, sp, 0x50",
            "bl sym.imp.memset",
            "str r4, [sp, 0x10]",
            "mov r1, r4",
            "mov r2, 0x3c",
            "add r0, sp, 0x14",
            "bl sym.imp.memset",
            "ldr r1, [0x00011898]",
            "mov r2, r6",
            "mov r0, r7",
            "add r1, pc, r1",
            "bl sym.imp.sprintf",
            "mov r0, r7",
            "bl sym.imp.system",
            "ldr r1, [0x0001189c]",
            "mov r0, r6",
            "add r1, pc, r1",
            "bl sym.imp.fopen",
            "subs r7, r0, 0",
            "beq 0x117b8",
            "add r8, sp, 0x10",
            "mov r1, 0x40",
            "mov r2, r7",
            "mov r0, r8",
            "bl sym.imp.fgets",
            "ldr r1, [0x000118a0]",
            "add r3, r5, 2",
            "str r3, [sp]",
            "add r3, r5, 3",
            "str r3, [sp, 4]",
            "add r3, r5, 4",
            "str r3, [sp, 8]",
            "add r3, r5, 5",
            "add r1, pc, r1",
            "mov r2, r5",
            "str r3, [sp, 0xc]",
            "mov r0, r8",
            "add r3, r5, 1",
            "bl sym.imp.sscanf",
            "mov r0, r7",
            "bl sym.imp.fclose",
            "mov r0, r6",
            "bl sym.imp.remove",
            "mov r0, r4",
            "add sp, sp, 0xd0",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "sym.notifyPBEventMsgReceived": {
        "function_address": "0x0000ec04",
        "instructions": [
            "push {r0, r1, r2, r3, r4, r5, r6, lr}",
            "mov r4, r0",
            "ldr r5, [0x0000ede0]",
            "ldr r3, [0x0000ede4]",
            "add r5, pc, r5",
            "ldr r6, [r5, r3]",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xec78",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0xa26",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000ede8]",
            "ldr r0, [0x0000edec]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x2c8",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x0000edf0]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000edf4]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xecf8",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0xa27",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000edf8]",
            "ldr r0, [0x0000edfc]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x2c8",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldrb r0, [r4, 3]",
            "ldrb r3, [r4, 2]",
            "str r0, [sp]",
            "ldrb r0, [r4, 4]",
            "ldrb r1, [r4]",
            "str r0, [sp, 4]",
            "ldrb r0, [r4, 5]",
            "ldrb r2, [r4, 1]",
            "str r0, [sp, 8]",
            "ldr r0, [0x0000ee00]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000edf4]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xed58",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0xa28",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000ee04]",
            "ldr r0, [0x0000ee08]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x2c8",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x0000ee0c]",
            "ldrh r1, [r4, 6]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000edf4]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xedb8",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0xa29",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000ee10]",
            "ldr r0, [0x0000ee14]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x2c8",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x0000ee18]",
            "ldrb r1, [r4, 8]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000edf4]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x0000ee1c]",
            "mov r0, 2",
            "ldr r3, [r5, r3]",
            "ldr r1, [r3]",
            "bl fcn.00008980",
            "cmp r0, 0",
            "movne r0, 0x10",
            "moveq r0, 0",
            "add sp, sp, 0x10",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.zyNetCtrl_WPS_setWPSConfig": {
        "function_address": "0x00021c44",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r6, r0",
            "ldr r4, [0x00022104]",
            "sub sp, sp, 0x14",
            "ldr r3, [0x00022108]",
            "mov r8, r1",
            "add r4, pc, r4",
            "mov r7, r2",
            "ldr r5, [r4, r3]",
            "ldrb r3, [r5]",
            "cmp r3, 3",
            "bls 0x21cc0",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x32b",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002210c]",
            "ldr r0, [0x00022110]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x3cc",
            "bl sym.imp.printf",
            "ldr r0, [0x00022114]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00022118]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r5]",
            "cmp r3, 3",
            "bls 0x21d1c",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0x32c",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002211c]",
            "ldr r0, [0x00022120]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x3cc",
            "bl sym.imp.printf",
            "ldr r0, [0x00022124]",
            "mov r1, r6",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00022118]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r5]",
            "cmp r3, 3",
            "bls 0x21d78",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x32d",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00022128]",
            "ldr r0, [0x0002212c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x3cc",
            "bl sym.imp.printf",
            "ldr r0, [0x00022130]",
            "mov r1, r8",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00022118]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r5]",
            "cmp r3, 3",
            "bls 0x21dd4",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x32e",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00022134]",
            "ldr r0, [0x00022138]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x3cc",
            "bl sym.imp.printf",
            "ldr r0, [0x0002213c]",
            "mov r1, r7",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00022118]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "cmp r6, 1",
            "bhi 0x21f14",
            "cmp r8, 7",
            "bhi 0x21f14",
            "cmp r7, 7",
            "bhi 0x21f14",
            "ldr r3, [0x00022140]",
            "and sl, r7, 3",
            "ldr r2, [0x00022144]",
            "and fp, r8, 3",
            "ldr r3, [r4, r3]",
            "and r8, r8, sl",
            "str r8, [r3]",
            "ldr sb, [r4, r2]",
            "str r3, [sp, 0xc]",
            "ldr r2, [sb]",
            "cmp r6, r2",
            "bne 0x21e30",
            "ldr r3, [0x00022148]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "cmp fp, r3",
            "beq 0x21f68",
            "mov r0, 6",
            "mov r1, 1",
            "bl sym.imp.calloc",
            "subs r8, r0, 0",
            "bne 0x21e9c",
            "ldrb r3, [r5]",
            "cmp r3, 3",
            "bls 0x21f14",
            "bl sym.imp.time",
            "movw r3, 0x34d",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002214c]",
            "ldr r0, [0x00022150]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x3cc",
            "bl sym.imp.printf",
            "ldr r0, [0x00022154]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00022118]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0x21f14",
            "mov r0, 6",
            "mov r1, 1",
            "bl sym.imp.calloc",
            "subs ip, r0, 0",
            "movne r3, 0",
            "mvnne r2, 0",
            "bne 0x21f1c",
            "ldrb r3, [r5]",
            "cmp r3, 3",
            "bls 0x21f0c",
            "bl sym.imp.time",
            "movw r3, 0x353",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00022158]",
            "ldr r0, [0x0002215c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x3cc",
            "bl sym.imp.printf",
            "ldr r0, [0x00022160]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00022118]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, r8",
            "bl fcn.00008cec",
            "mov r0, 0x10",
            "b 0x220fc",
            "strb r2, [r8, r3]",
            "strb r2, [ip, r3]",
            "add r3, r3, 1",
            "cmp r3, 6",
            "bne 0x21f1c",
            "str ip, [sp, 8]",
            "mov r1, ip",
            "mov r2, 0xff",
            "mov r0, r8",
            "bl fcn.000091b4",
            "mov r0, r8",
            "bl fcn.00008cec",
            "ldr ip, [sp, 8]",
            "mov r0, ip",
            "bl fcn.00008cec",
            "mov r0, 0",
            "bl fcn.00008d4c",
            "mov r0, 1",
            "bl fcn.00008d4c",
            "ldr r3, [0x00022148]",
            "str r6, [sb]",
            "ldr r2, [0x00022164]",
            "ldr r3, [r4, r3]",
            "ldr r1, [sp, 0xc]",
            "str fp, [r3]",
            "ldr r8, [r4, r2]",
            "ldr r2, [r1]",
            "str sl, [r8]",
            "mov sl, r3",
            "cmp r2, 0",
            "beq 0x21fd4",
            "cmp r6, 0",
            "bne 0x21fd4",
            "tst r7, 1",
            "beq 0x21fb4",
            "mov r0, r6",
            "mov r1, r6",
            "bl fcn.00008cd4",
            "ldr r3, [r8]",
            "bic r3, r3, 4",
            "sub r3, r3, 2",
            "cmp r3, 1",
            "bhi 0x21fd4",
            "mov r0, 0",
            "mov r1, 1",
            "bl fcn.00008cd4",
            "ldrb r3, [r5]",
            "cmp r3, 3",
            "bls 0x22030",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0x384",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00022168]",
            "ldr r0, [0x0002216c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x3cc",
            "bl sym.imp.printf",
            "ldr r0, [0x00022170]",
            "ldr r1, [sb]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00022118]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r5]",
            "cmp r3, 3",
            "bls 0x2208c",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x385",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00022174]",
            "ldr r0, [0x00022178]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x3cc",
            "bl sym.imp.printf",
            "ldr r0, [0x0002217c]",
            "ldr r1, [sl]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00022118]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r5]",
            "cmp r3, 3",
            "bls 0x220e8",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x386",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00022180]",
            "ldr r0, [0x00022184]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x3cc",
            "bl sym.imp.printf",
            "ldr r0, [0x00022188]",
            "ldr r1, [r8]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00022118]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r0, [sb]",
            "ldr r1, [sl]",
            "ldr r2, [r8]",
            "bl fcn.00008bf0",
            "mov r0, 0",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.setWIFICountryCode": {
        "function_address": "0x000126fc",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "subs r5, r1, 0",
            "ldr r6, [0x000128b0]",
            "sub sp, sp, 0x220",
            "add r6, pc, r6",
            "beq 0x128a4",
            "ldrb r3, [r5]",
            "cmp r3, 0",
            "beq 0x128a4",
            "add r8, sp, 0x18",
            "mov r7, 0",
            "str r7, [sp, 0x18]",
            "mov r4, r0",
            "str r7, [sp, 0x1c]",
            "mov r0, r8",
            "bl fcn.000087a0",
            "mov r0, r5",
            "mov r1, r8",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x128a8",
            "ldr r3, [0x000128b4]",
            "ldr r3, [r6, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x127e0",
            "mov r0, r7",
            "bl sym.imp.time",
            "movw r3, 0x102d",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000128b8]",
            "ldr r0, [0x000128bc]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x490",
            "add r3, r3, r2",
            "bl sym.imp.printf",
            "ldrb r1, [r4, 2]",
            "ldrb r3, [r4, 1]",
            "ldrb r2, [r4]",
            "str r1, [sp]",
            "ldrb r1, [r4, 3]",
            "ldr r0, [0x000128c0]",
            "str r1, [sp, 4]",
            "ldrb r1, [r4, 4]",
            "add r0, pc, r0",
            "str r1, [sp, 8]",
            "ldrb r1, [r4, 5]",
            "str r1, [sp, 0xc]",
            "mov r1, r5",
            "bl sym.imp.printf",
            "ldr r3, [0x000128c4]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r6, 0",
            "mov r2, 0x1fc",
            "str r6, [sp, 0x20]",
            "mov r1, r6",
            "add r0, sp, 0x24",
            "bl sym.imp.memset",
            "ldrb r2, [r4, 1]",
            "ldrb r3, [r4]",
            "str r2, [sp]",
            "ldrb r2, [r4, 2]",
            "ldr r1, [0x000128c8]",
            "str r2, [sp, 4]",
            "ldrb r2, [r4, 3]",
            "add r1, pc, r1",
            "str r2, [sp, 8]",
            "ldrb r2, [r4, 4]",
            "str r2, [sp, 0xc]",
            "ldrb r2, [r4, 5]",
            "add r4, sp, 0x20",
            "mov r0, r4",
            "str r2, [sp, 0x10]",
            "mov r2, r5",
            "bl sym.imp.sprintf",
            "mov r0, r4",
            "ldr r4, [0x000128cc]",
            "bl loc.imp.Outputlog",
            "ldr r1, [0x000128d0]",
            "mov r2, r5",
            "add r4, pc, r4",
            "add r1, pc, r1",
            "mov r0, r4",
            "bl fcn.00009538",
            "ldr r1, [0x000128d4]",
            "mov r2, r5",
            "mov r0, r4",
            "add r1, pc, r1",
            "bl fcn.00009538",
            "ldr r1, [0x000128d8]",
            "mov r2, r5",
            "mov r0, r4",
            "add r1, pc, r1",
            "bl fcn.00009538",
            "mov r0, r4",
            "bl fcn.000096ac",
            "ldr r0, [0x000128dc]",
            "add r0, pc, r0",
            "bl sym.imp.system",
            "mov r0, r6",
            "b 0x128a8",
            "mov r0, 0x10",
            "add sp, sp, 0x220",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.000087a0": {
        "function_address": "0x000087a0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0xa14]!"
        ]
    },
    "sym.wpabuf_free": {
        "function_address": "0x0002e9c0",
        "instructions": [
            "push {r4, lr}",
            "subs r4, r0, 0",
            "popeq {r4, pc}",
            "ldr r3, [r4, 0xc]",
            "tst r3, 1",
            "beq 0x2e9e0",
            "ldr r0, [r4, 8]",
            "bl sym.imp.free",
            "mov r0, r4",
            "pop {r4, lr}",
            "b sym.imp.free"
        ]
    },
    "sym.wps_dev_type_str2bin": {
        "function_address": "0x0002dddc",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r4, r1",
            "mov r5, r0",
            "bl sym.imp.atoi",
            "ubfx r2, r0, 8, 8",
            "mov r1, 0x2d",
            "strb r0, [r4, 1]",
            "mov r0, r5",
            "strb r2, [r4]",
            "bl sym.imp.strchr",
            "cmp r0, 0",
            "bne 0x2de14",
            "mvn r5, 0",
            "b 0x2de58",
            "add r6, r0, 1",
            "add r1, r4, 2",
            "mov r0, r6",
            "mov r2, 4",
            "bl fcn.00008908",
            "subs r5, r0, 0",
            "bne 0x2de0c",
            "mov r0, r6",
            "mov r1, 0x2d",
            "bl sym.imp.strchr",
            "cmp r0, 0",
            "beq 0x2de0c",
            "add r0, r0, 1",
            "bl sym.imp.atoi",
            "ubfx r3, r0, 8, 8",
            "strb r3, [r4, 6]",
            "strb r0, [r4, 7]",
            "mov r0, r5",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.imp.strchr": {
        "function_address": "0x00009598",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0xc4]!"
        ]
    },
    "fcn.00008908": {
        "function_address": "0x00008908",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x924]!"
        ]
    },
    "sym.restartNetCtrl": {
        "function_address": "0x00009dcc",
        "instructions": [
            "push {r0, r1, r2, r4, r5, lr}",
            "ldr r4, [0x00009e88]",
            "ldr r3, [0x00009e8c]",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x9e38",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x2b5",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00009e90]",
            "ldr r0, [0x00009e94]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x68",
            "bl sym.imp.printf",
            "ldr r0, [0x00009e98]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00009e9c]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x00009ea0]",
            "mov r0, 3",
            "ldr r5, [r4, r3]",
            "ldr r1, [r5]",
            "bl fcn.00008980",
            "subs r4, r0, 0",
            "movne r4, 0x10",
            "bne 0x9e7c",
            "ldr r3, [r5]",
            "sub r3, r3, 1",
            "cmp r3, 1",
            "bhi 0x9e6c",
            "bl fcn.0000943c",
            "bl fcn.00009400",
            "bl fcn.000085d8",
            "mov r3, 2",
            "str r3, [r5]",
            "mov r0, r4",
            "add sp, sp, 0xc",
            "pop {r4, r5, pc}"
        ]
    },
    "fcn.0000943c": {
        "function_address": "0x0000943c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x1ac]!"
        ]
    },
    "sym.setWiFiBackhaulconfig": {
        "function_address": "0x0001c2d4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, 0",
            "sub sp, sp, 0x30c",
            "mov r6, 0xfc",
            "mov r5, r0",
            "mov fp, r1",
            "str r3, [sp, 4]",
            "mov sl, r2",
            "str r4, [sp, 0x108]",
            "mov r1, r4",
            "mov r2, r6",
            "add r0, sp, 0x10c",
            "bl sym.imp.memset",
            "str r4, [sp, 0x208]",
            "mov r1, r4",
            "mov r2, r6",
            "add r0, sp, 0x20c",
            "mov r6, 0x7c",
            "bl sym.imp.memset",
            "str r4, [sp, 8]",
            "mov r1, r4",
            "mov r2, r6",
            "add r0, sp, 0xc",
            "bl sym.imp.memset",
            "str r4, [sp, 0x88]",
            "mov r1, r4",
            "mov r2, r6",
            "add r0, sp, 0x8c",
            "bl sym.imp.memset",
            "ldr r1, [0x0001c400]",
            "add sb, sp, 0x108",
            "mov r2, r5",
            "mov r0, sb",
            "add r1, pc, r1",
            "add r8, sp, 0x208",
            "bl sym.imp.sprintf",
            "ldr r1, [0x0001c404]",
            "mov r2, r5",
            "mov r0, r8",
            "add r7, sp, 8",
            "add r1, pc, r1",
            "add r6, sp, 0x88",
            "bl sym.imp.sprintf",
            "ldr r1, [0x0001c408]",
            "mov r2, r5",
            "mov r0, r7",
            "add r1, pc, r1",
            "bl sym.imp.sprintf",
            "ldr r1, [0x0001c40c]",
            "mov r2, r5",
            "ldr r5, [0x0001c410]",
            "mov r0, r6",
            "add r1, pc, r1",
            "add r5, pc, r5",
            "bl sym.imp.sprintf",
            "mov r1, sb",
            "mov r2, fp",
            "mov r0, r5",
            "bl fcn.00009538",
            "mov r1, r8",
            "mov r2, sl",
            "mov r0, r5",
            "bl fcn.00009538",
            "ldr r3, [sp, 4]",
            "mov r1, r7",
            "mov r0, r5",
            "mov r2, r3",
            "bl fcn.00009538",
            "ldr r2, [sp, 0x330]",
            "mov r0, r5",
            "mov r1, r6",
            "bl fcn.00009538",
            "mov r0, r4",
            "add sp, sp, 0x30c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.uuid_str2bin": {
        "function_address": "0x0002ebdc",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r2, 4",
            "mov r4, r0",
            "mov r5, r1",
            "bl fcn.00008908",
            "cmp r0, 0",
            "beq 0x2ec00",
            "mvn r0, 0",
            "pop {r3, r4, r5, pc}",
            "ldrb r3, [r4, 8]",
            "add r1, r5, 4",
            "add r0, r4, 9",
            "cmp r3, 0x2d",
            "bne 0x2ebf8",
            "mov r2, 2",
            "bl fcn.00008908",
            "cmp r0, 0",
            "bne 0x2ebf8",
            "ldrb r3, [r4, 0xd]",
            "add r1, r5, 6",
            "add r0, r4, 0xe",
            "cmp r3, 0x2d",
            "bne 0x2ebf8",
            "mov r2, 2",
            "bl fcn.00008908",
            "cmp r0, 0",
            "bne 0x2ebf8",
            "ldrb r3, [r4, 0x12]",
            "add r1, r5, 8",
            "add r0, r4, 0x13",
            "cmp r3, 0x2d",
            "bne 0x2ebf8",
            "mov r2, 2",
            "bl fcn.00008908",
            "cmp r0, 0",
            "bne 0x2ebf8",
            "ldrb r3, [r4, 0x17]",
            "add r1, r5, 0xa",
            "add r0, r4, 0x18",
            "cmp r3, 0x2d",
            "bne 0x2ebf8",
            "mov r2, 6",
            "bl fcn.00008908",
            "adds r0, r0, 0",
            "mvnne r0, 0",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.getfirmwareStatus": {
        "function_address": "0x0000fdcc",
        "instructions": [
            "push {r0, r1, r2, r4, r5, lr}",
            "mov r5, r0",
            "ldr r4, [0x0000fe5c]",
            "ldr r3, [0x0000fe60]",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0xfe40",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0xcb1",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000fe64]",
            "ldr r0, [0x0000fe68]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x3a0",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x0000fe6c]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000fe70]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x0000fe74]",
            "mov r0, 0",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "str r3, [r5]",
            "add sp, sp, 0xc",
            "pop {r4, r5, pc}"
        ]
    },
    "sym.PBE_check_PBE_flag": {
        "function_address": "0x0001a27c",
        "instructions": [
            "push {r4, lr}",
            "mov r0, 0",
            "ldr r4, [0x0001a2c8]",
            "ldr r3, [0x0001a2cc]",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "cmp r3, 1",
            "bne 0x1a2c4",
            "bl sym.imp.time",
            "ldr r3, [0x0001a2d0]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "rsb r0, r3, r0",
            "cmp r0, 0x78",
            "movle r0, 0x10",
            "movgt r0, 0",
            "pop {r4, pc}",
            "pop {r4, pc}"
        ]
    },
    "sym.modifyFwdRuleById": {
        "function_address": "0x0000caa0",
        "instructions": [
            "push {r0, r1, r4, lr}",
            "ldr r4, [0x0000cb38]",
            "ldr r3, [0x0000cb3c]",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0xcb10",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x73a",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000cb40]",
            "ldr r0, [0x0000cb44]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x1c8",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x0000cb48]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000cb4c]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x0000cb50]",
            "mov r0, 2",
            "ldr r3, [r4, r3]",
            "ldr r1, [r3]",
            "bl fcn.00008980",
            "cmp r0, 0",
            "movne r0, 0x10",
            "moveq r0, 0",
            "add sp, sp, 8",
            "pop {r4, pc}"
        ]
    },
    "sym.security_SecurityCtrl_removeDataToList": {
        "function_address": "0x0002cd54",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r5, r0",
            "ldr r3, [0x0002cda4]",
            "ldr r2, [0x0002cda8]",
            "add r3, pc, r3",
            "ldr r3, [r3, r2]",
            "ldr r4, [r3]",
            "cmp r4, 0",
            "beq 0x2cda0",
            "add r0, r4, 4",
            "mov r1, r5",
            "mov r2, 6",
            "bl sym.imp.memcmp",
            "cmp r0, 0",
            "bne 0x2cd98",
            "str r0, [r4, 0x218]",
            "pop {r3, r4, r5, pc}",
            "ldr r4, [r4]",
            "b 0x2cd70",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.runNetCtrl": {
        "function_address": "0x000108ec",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "ldr r4, [0x00010988]",
            "ldr r3, [0x0001098c]",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "ldrb r2, [r3]",
            "mov r6, r3",
            "sub r2, r2, 3",
            "cmp r2, 2",
            "bls 0x10918",
            "bl fcn.00008d40",
            "mov r0, 0",
            "bl sym.imp.time",
            "ldr r2, [0x00010990]",
            "mov r5, r0",
            "ldrb r3, [r6]",
            "add r2, pc, r2",
            "cmp r3, 1",
            "ldr r2, [r2, 4]",
            "movne r3, 2",
            "moveq r3, 0xa",
            "rsb r2, r2, r0",
            "cmp r2, r3",
            "ble 0x10980",
            "ldr r3, [0x00010994]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "bne 0x10968",
            "bl fcn.00008c20",
            "b 0x10974",
            "cmp r3, 1",
            "bne 0x10974",
            "bl fcn.00008d34",
            "ldr r3, [0x00010998]",
            "add r3, pc, r3",
            "str r5, [r3, 4]",
            "mov r0, 0",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.00008d40": {
        "function_address": "0x00008d40",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x654]!"
        ]
    },
    "fcn.00008d34": {
        "function_address": "0x00008d34",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x65c]!"
        ]
    },
    "sym.wps_validate_m6": {
        "function_address": "0x0002fc2c",
        "instructions": [
            "cmp r0, 0",
            "beq 0x2fcdc",
            "push {r4, r5, lr}",
            "sub sp, sp, 0x1ec",
            "mov r1, sp",
            "bl fcn.00008c8c",
            "cmp r0, 0",
            "bge 0x2fc54",
            "mvn r0, 0",
            "b 0x2fcd4",
            "ldr r5, [sp, 4]",
            "ldr r0, [sp]",
            "adds r4, r5, 0",
            "movne r4, 1",
            "bl fcn.0002f058",
            "cmp r0, 0",
            "bne 0x2fca4",
            "ldr r0, [sp, 8]",
            "bl fcn.0002efd8",
            "cmp r0, 0",
            "bne 0x2fca4",
            "ldr r3, [sp, 0xc]",
            "cmp r3, 0",
            "beq 0x2fca4",
            "ldr r3, [sp, 0xdc]",
            "ldr r2, [sp, 0xe0]",
            "cmp r3, 0",
            "beq 0x2fca4",
            "cmp r2, 0xf",
            "bhi 0x2fcb4",
            "cmp r4, 0",
            "bne 0x2fc4c",
            "mov r0, r4",
            "b 0x2fcd4",
            "mov r0, r5",
            "mov r1, r4",
            "bl fcn.0002ed7c",
            "cmp r0, 0",
            "bne 0x2fca4",
            "ldr r3, [sp, 0x4c]",
            "cmp r3, 0",
            "beq 0x2fca4",
            "add sp, sp, 0x1ec",
            "pop {r4, r5, pc}",
            "mvn r0, 0",
            "bx lr"
        ]
    },
    "sym.getDeviceMode": {
        "function_address": "0x00011dd8",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r5, r0",
            "ldr r4, [0x00011e04]",
            "bl fcn.000092c8",
            "ldr r3, [0x00011e08]",
            "mov r0, r5",
            "add r4, pc, r4",
            "ldr r1, [r4, r3]",
            "bl sym.imp.strcpy",
            "mov r0, 0",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.000092c8": {
        "function_address": "0x000092c8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x2a4]!"
        ]
    },
    "sym.PBE_sendPBJoinNotify": {
        "function_address": "0x0001a0fc",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "sub sp, sp, 0x14",
            "ldr r5, [0x0001a254]",
            "ldr r3, [0x0001a258]",
            "add r5, pc, r5",
            "ldr r3, [r5, r3]",
            "ldr r2, [r3]",
            "cmp r2, 0",
            "beq 0x1a198",
            "mov r6, r0",
            "mov r1, 0x14",
            "mov r0, 1",
            "mov r7, r3",
            "bl sym.imp.calloc",
            "ldr r3, [0x0001a25c]",
            "subs r4, r0, 0",
            "ldr r2, [r5, r3]",
            "bne 0x1a1a0",
            "ldrb r3, [r2]",
            "cmp r3, 3",
            "bls 0x1a198",
            "bl sym.imp.time",
            "mov r3, 0x47",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001a260]",
            "ldr r0, [0x0001a264]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x16",
            "bl sym.imp.printf",
            "ldr r0, [0x0001a268]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0001a26c]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, 0x10",
            "b 0x1a24c",
            "ldr r0, [r6]",
            "str r0, [r4]",
            "ldrh r3, [r6, 4]",
            "strh r3, [r4, 4]",
            "ldrh r1, [r6, 6]",
            "strh r3, [r4, 0xc]",
            "strh r3, [r4, 0x12]",
            "ldrb r3, [r2]",
            "str r0, [r4, 8]",
            "str r0, [r4, 0xe]",
            "cmp r3, 3",
            "strh r1, [r4, 6]",
            "mov r0, 0",
            "str r0, [sp, 0xc]",
            "bls 0x1a224",
            "bl sym.imp.time",
            "mov r3, 0x52",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001a270]",
            "ldr r0, [0x0001a274]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x16",
            "bl sym.imp.printf",
            "ldr r0, [0x0001a278]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0001a26c]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [r7]",
            "cmp r3, 0",
            "beq 0x1a240",
            "mov r0, 5",
            "mov r1, r4",
            "add r2, sp, 0xc",
            "blx r3",
            "mov r0, r4",
            "bl fcn.00008bfc",
            "mov r0, 0",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, pc}"
        ]
    },
    "sym.FW_freeFWInfoList": {
        "function_address": "0x00026f3c",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "ldr r3, [0x00026f78]",
            "ldr r2, [0x00026f7c]",
            "add r3, pc, r3",
            "ldr r3, [r3, r2]",
            "ldr r0, [r3]",
            "mov r4, r3",
            "cmp r0, 0",
            "beq 0x26f70",
            "ldr r5, [r0]",
            "bl sym.imp.free",
            "mov r0, r5",
            "b 0x26f58",
            "str r0, [r4]",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.bignum_exptmod": {
        "function_address": "0x00037670",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov ip, r2",
            "ldr r6, [r2, 8]",
            "cmp r6, 1",
            "beq 0x376c8",
            "ldr r6, [r1, 8]",
            "mov lr, r1",
            "cmp r6, 1",
            "beq 0x376c8",
            "ldr r6, [r2]",
            "mov r5, r0",
            "mov r4, r3",
            "cmp r6, 0",
            "ble 0x376d0",
            "ldr r6, [r2, 0xc]",
            "ldr r6, [r6]",
            "tst r6, 1",
            "beq 0x376d0",
            "bl fcn.00036718",
            "adds r0, r0, 0",
            "mvnne r0, 0",
            "pop {r4, r5, r6, pc}",
            "mvn r0, 0",
            "pop {r4, r5, r6, pc}",
            "mov r0, r5",
            "mov r1, lr",
            "mov r2, ip",
            "mov r3, r4",
            "bl fcn.00036f20",
            "b 0x376bc"
        ]
    },
    "fcn.00036718": {
        "function_address": "0x00036718",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x234",
            "mov r8, r0",
            "mov r0, r1",
            "str r1, [sp, 0x18]",
            "mov r4, r2",
            "str r3, [sp, 0x1c]",
            "bl fcn.00034d70",
            "cmp r0, 7",
            "movle r1, 2",
            "strle r1, [sp, 8]",
            "ble 0x36768",
            "cmp r0, 0x24",
            "movle r2, 3",
            "strle r2, [sp, 8]",
            "ble 0x36768",
            "cmp r0, 0x8d",
            "movlt r0, 4",
            "movge r0, 5",
            "str r0, [sp, 8]",
            "add r6, sp, 0x40",
            "mov r0, r6",
            "bl fcn.00034e04",
            "cmp r0, 0",
            "bne 0x36ce8",
            "ldr r1, [sp, 8]",
            "mov r3, 1",
            "sub sb, r1, 1",
            "lsl r5, r3, sb",
            "lsl r3, r3, r1",
            "mov sl, r5",
            "str r3, [sp, 0xc]",
            "add r3, sp, 0x30",
            "add r3, r3, r5, lsl 4",
            "str r3, [sp, 0x14]",
            "mov fp, r3",
            "ldr r2, [sp, 0xc]",
            "cmp sl, r2",
            "bge 0x36800",
            "mov r0, fp",
            "add fp, fp, 0x10",
            "bl fcn.00034e04",
            "subs r7, r0, 0",
            "beq 0x367f8",
            "ldr r4, [sp, 0x14]",
            "cmp r5, sl",
            "bge 0x367e8",
            "mov r0, r4",
            "add r5, r5, 1",
            "bl fcn.00034db0",
            "add r4, r4, 0x10",
            "b 0x367cc",
            "mov r0, r6",
            "bl fcn.00034db0",
            "mov r0, r7",
            "b 0x36ce8",
            "add sl, sl, 1",
            "b 0x367a8",
            "ldr r3, [r4, 0xc]",
            "ldr r6, [r3]",
            "tst r6, 1",
            "beq 0x36974",
            "ldr r3, [r4]",
            "lsl r2, r3, 1",
            "add r2, r2, 1",
            "cmp r2, 0x200",
            "bge 0x36974",
            "cmp r3, 0xff",
            "bgt 0x36974",
            "add r7, sp, 0x20",
            "mov r0, r7",
            "bl fcn.00034e04",
            "subs r3, r0, 0",
            "bne 0x36978",
            "mov r0, r4",
            "bl fcn.00034d70",
            "mov r1, 0x1c",
            "bl sym.imp.__aeabi_idivmod",
            "ldr r3, [r4]",
            "mov sl, r1",
            "cmp r3, 1",
            "ble 0x36884",
            "sub r3, r3, 1",
            "mov r1, 0x1c",
            "mla r1, r1, r3, sl",
            "mov r0, r7",
            "sub r1, r1, 1",
            "bl fcn.00035994",
            "subs r3, r0, 0",
            "beq 0x36890",
            "b 0x36960",
            "mov r0, r7",
            "mov sl, 1",
            "bl fcn.000366e8",
            "sub sl, sl, 1",
            "add r7, sp, 0x20",
            "mov fp, 0",
            "ldr r1, [sp, 0x20]",
            "ldr r3, [sp, 0x24]",
            "add r1, r1, 1",
            "cmp r3, r1",
            "blt 0x368c4",
            "ldr r0, [sp, 0x20]",
            "mov r2, 0",
            "ldr r3, [sp, 0x2c]",
            "mov r1, r2",
            "b 0x368d8",
            "mov r0, r7",
            "bl fcn.00034f34",
            "subs r3, r0, 0",
            "beq 0x368b0",
            "b 0x36960",
            "ldr ip, [sp, 0x20]",
            "cmp r1, ip",
            "bge 0x36900",
            "ldr ip, [r3]",
            "add r1, r1, 1",
            "orr r2, r2, ip, lsl 1",
            "bic r2, r2, 0xf0000000",
            "str r2, [r3], 4",
            "lsr r2, ip, 0x1b",
            "b 0x368d8",
            "cmp r2, 0",
            "movne r2, 1",
            "strne r2, [r3]",
            "ldrne r3, [sp, 0x20]",
            "addne r3, r3, r2",
            "strne r3, [sp, 0x20]",
            "ldr r2, [sp, 0x2c]",
            "ldr r3, [sp, 0x20]",
            "add r2, r2, r3, lsl 2",
            "cmp r3, r0",
            "strlt fp, [r2], 4",
            "addlt r3, r3, 1",
            "blt 0x36924",
            "mov r0, r7",
            "mov r1, r4",
            "bl fcn.00034c1c",
            "cmn r0, 1",
            "beq 0x369b8",
            "mov r0, r7",
            "mov r1, r4",
            "mov r2, r7",
            "bl fcn.00035228",
            "subs r3, r0, 0",
            "beq 0x369b8",
            "str r3, [sp, 4]",
            "add r0, sp, 0x20",
            "bl fcn.00034db0",
            "ldr r3, [sp, 4]",
            "b 0x36978",
            "mvn r3, 2",
            "str r3, [sp, 4]",
            "add r0, sp, 0x40",
            "bl fcn.00034db0",
            "ldr r4, [sp, 0x14]",
            "ldr r0, [sp, 0xc]",
            "ldr r3, [sp, 4]",
            "cmp r5, r0",
            "bge 0x369b0",
            "str r3, [sp, 4]",
            "mov r0, r4",
            "bl fcn.00034db0",
            "add r5, r5, 1",
            "add r4, r4, 0x10",
            "b 0x36988",
            "mov r0, r3",
            "b 0x36ce8",
            "add sl, sl, 1",
            "cmp sl, 0x1b",
            "ble 0x3689c",
            "add sl, sp, 0x40",
            "mov r0, r8",
            "mov r3, sl",
            "add r1, sp, 0x20",
            "mov r2, r4",
            "bl fcn.00036678",
            "subs r3, r0, 0",
            "bne 0x36960",
            "add r8, sp, 0x30",
            "mov r0, sl",
            "add r8, r8, r5, lsl 4",
            "mov r1, r8",
            "bl fcn.00034fbc",
            "subs r3, r0, 0",
            "bne 0x36960",
            "add r0, r6, 2",
            "and r0, r0, 4",
            "add r0, r6, r0, lsl 1",
            "mul r1, r6, r0",
            "rsb r1, r1, 2",
            "mul r1, r0, r1",
            "mul r2, r6, r1",
            "rsb r2, r2, 2",
            "mul r2, r1, r2",
            "mul r7, r6, r2",
            "mov r6, r3",
            "sub r7, r7, 2",
            "mul r7, r7, r2",
            "bic r7, r7, 0xf0000000",
            "mov r0, r8",
            "mov r1, r8",
            "bl fcn.00035b64",
            "subs r3, r0, 0",
            "bne 0x36960",
            "mov r0, r8",
            "mov r1, r4",
            "mov r2, r7",
            "bl fcn.0003577c",
            "subs r3, r0, 0",
            "bne 0x36960",
            "add r6, r6, 1",
            "cmp r6, sb",
            "blt 0x36a38",
            "ldr r0, [sp, 0x14]",
            "add r6, r5, 1",
            "ldr r3, [sp, 0xc]",
            "cmp r6, r3",
            "bge 0x36ac0",
            "add r8, r0, 0x10",
            "mov r1, sl",
            "mov r2, r8",
            "bl fcn.00035644",
            "subs r3, r0, 0",
            "bne 0x36960",
            "mov r0, r8",
            "mov r1, r4",
            "mov r2, r7",
            "bl fcn.0003577c",
            "subs r3, r0, 0",
            "bne 0x36960",
            "add r6, r6, 1",
            "mov r0, r8",
            "b 0x36a78",
            "ldr r0, [sp, 0x18]",
            "mov r2, 0",
            "str r2, [sp, 0x10]",
            "mov sl, 1",
            "ldr fp, [r0]",
            "mov sb, r2",
            "mov r8, r2",
            "add r6, sp, 0x20",
            "sub fp, fp, 1",
            "subs sl, sl, 1",
            "bne 0x36b0c",
            "cmn fp, 1",
            "beq 0x36c14",
            "ldr r1, [sp, 0x18]",
            "mov sl, 0x1c",
            "ldr r3, [r1, 0xc]",
            "ldr r3, [r3, fp, lsl 2]",
            "sub fp, fp, 1",
            "str r3, [sp, 0x10]",
            "ldr r0, [sp, 0x10]",
            "ubfx r3, r0, 0x1b, 1",
            "orrs r1, r3, r2",
            "lsl r0, r0, 1",
            "str r0, [sp, 0x10]",
            "moveq r2, r1",
            "beq 0x36ae4",
            "eor r1, r3, 1",
            "cmp r2, 1",
            "movne r2, 0",
            "andeq r2, r1, 1",
            "cmp r2, 0",
            "beq 0x36b74",
            "mov r0, r6",
            "mov r1, r6",
            "bl fcn.00035b64",
            "subs r3, r0, 0",
            "bne 0x36960",
            "mov r0, r6",
            "mov r1, r4",
            "mov r2, r7",
            "bl fcn.0003577c",
            "subs r3, r0, 0",
            "bne 0x36960",
            "mov r2, 1",
            "b 0x36ae4",
            "ldr r0, [sp, 8]",
            "add sb, sb, 1",
            "cmp sb, r0",
            "rsb r1, sb, r0",
            "movne r2, 2",
            "orr r8, r8, r3, lsl r1",
            "bne 0x36ae4",
            "mov sb, r2",
            "mov r0, r6",
            "mov r1, r6",
            "bl fcn.00035b64",
            "subs r3, r0, 0",
            "bne 0x36960",
            "mov r0, r6",
            "mov r1, r4",
            "mov r2, r7",
            "bl fcn.0003577c",
            "subs r3, r0, 0",
            "bne 0x36960",
            "ldr r1, [sp, 8]",
            "add sb, sb, 1",
            "cmp sb, r1",
            "blt 0x36b94",
            "add r1, sp, 0x30",
            "mov r0, r6",
            "add r1, r1, r8, lsl 4",
            "mov r2, r6",
            "bl fcn.00035644",
            "subs r3, r0, 0",
            "bne 0x36960",
            "mov r0, r6",
            "mov r1, r4",
            "mov r2, r7",
            "bl fcn.0003577c",
            "subs r3, r0, 0",
            "bne 0x36960",
            "mov r2, 1",
            "mov r8, r3",
            "mov sb, r3",
            "b 0x36ae4",
            "cmp sb, 0",
            "add r6, sp, 0x20",
            "movle r3, 0",
            "movgt r3, 1",
            "cmp r2, 2",
            "movne r3, 0",
            "cmp r3, 0",
            "bne 0x36c64",
            "mov r0, r6",
            "mov r1, r4",
            "mov r2, r7",
            "bl fcn.0003577c",
            "subs r3, r0, 0",
            "bne 0x36960",
            "ldr r1, [sp, 0x1c]",
            "mov r0, r6",
            "str r3, [sp, 4]",
            "bl fcn.00034d0c",
            "ldr r3, [sp, 4]",
            "b 0x36960",
            "add fp, sp, 0x40",
            "mov r0, r6",
            "mov r1, r6",
            "bl fcn.00035b64",
            "subs r3, r0, 0",
            "bne 0x36960",
            "mov r0, r6",
            "mov r1, r4",
            "mov r2, r7",
            "bl fcn.0003577c",
            "subs r3, r0, 0",
            "bne 0x36960",
            "ldr r2, [sp, 0xc]",
            "lsl r8, r8, 1",
            "tst r2, r8",
            "bne 0x36cb4",
            "add sl, sl, 1",
            "cmp sl, sb",
            "blt 0x36c68",
            "b 0x36c34",
            "mov r0, r6",
            "mov r1, fp",
            "mov r2, r6",
            "bl fcn.00035644",
            "subs r3, r0, 0",
            "bne 0x36960",
            "mov r0, r6",
            "mov r1, r4",
            "mov r2, r7",
            "bl fcn.0003577c",
            "subs r3, r0, 0",
            "beq 0x36ca4",
            "b 0x36960",
            "add sp, sp, 0x234",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00036f20": {
        "function_address": "0x00036f20",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x244",
            "mov r4, r2",
            "str r0, [sp, 8]",
            "mov r0, r1",
            "str r1, [sp, 0x14]",
            "str r3, [sp, 0x1c]",
            "bl fcn.00034d70",
            "cmp r0, 7",
            "movle r6, 2",
            "ble 0x36f64",
            "cmp r0, 0x24",
            "movle r6, 3",
            "ble 0x36f64",
            "cmp r0, 0x8d",
            "movlt r6, 4",
            "movge r6, 5",
            "add sb, sp, 0x50",
            "add r8, sp, 0x40",
            "mov r0, sb",
            "bl fcn.00034e04",
            "cmp r0, 0",
            "bne 0x373b8",
            "mov r3, 1",
            "sub r7, r6, 1",
            "lsl r5, r3, r7",
            "mov sl, r5",
            "add r1, r8, r5, lsl 4",
            "str r1, [sp, 0x10]",
            "mov r2, r1",
            "lsl r3, r3, r6",
            "str r3, [sp, 0xc]",
            "ldr r3, [sp, 0xc]",
            "cmp sl, r3",
            "bge 0x37000",
            "str r2, [sp, 4]",
            "mov r0, r2",
            "bl fcn.00034e04",
            "ldr r2, [sp, 4]",
            "subs fp, r0, 0",
            "add r2, r2, 0x10",
            "beq 0x36ff8",
            "ldr r4, [sp, 0x10]",
            "cmp r5, sl",
            "bge 0x36fe8",
            "mov r0, r4",
            "add r5, r5, 1",
            "bl fcn.00034db0",
            "add r4, r4, 0x10",
            "b 0x36fcc",
            "mov r0, sb",
            "bl fcn.00034db0",
            "mov r0, fp",
            "b 0x373b8",
            "add sl, sl, 1",
            "b 0x36fa0",
            "add sb, sp, 0x30",
            "mov r0, sb",
            "bl fcn.00034e04",
            "subs sl, r0, 0",
            "bne 0x37388",
            "ldr r3, [r4]",
            "mov r1, 0x38",
            "mov r0, sb",
            "mul r1, r1, r3",
            "bl fcn.00035994",
            "subs sl, r0, 0",
            "bne 0x37380",
            "ldr r2, [r4]",
            "cmp r2, 0",
            "beq 0x3737c",
            "mov r0, sb",
            "mov r1, r4",
            "bl fcn.00034c1c",
            "cmn r0, 1",
            "mov r0, sb",
            "bne 0x3705c",
            "bl fcn.00034ce0",
            "b 0x37074",
            "mov r3, sl",
            "mov r1, r4",
            "mov r2, sb",
            "bl fcn.000360e0",
            "subs sl, r0, 0",
            "bne 0x37380",
            "ldr r0, [sp, 8]",
            "add sb, sp, 0x50",
            "mov r1, r4",
            "mov r2, sb",
            "bl fcn.000365ac",
            "subs sl, r0, 0",
            "bne 0x37380",
            "add r8, r8, r5, lsl 4",
            "mov r0, sb",
            "mov r1, r8",
            "bl fcn.00034fbc",
            "subs sl, r0, 0",
            "bne 0x37380",
            "mov fp, sl",
            "add r3, sp, 0x30",
            "str r3, [sp, 8]",
            "mov r0, r8",
            "mov r1, r8",
            "bl fcn.00035b64",
            "subs sl, r0, 0",
            "bne 0x37380",
            "mov r0, r8",
            "mov r1, r4",
            "add r2, sp, 0x30",
            "bl fcn.00036cf0",
            "subs sl, r0, 0",
            "bne 0x37380",
            "add fp, fp, 1",
            "cmp fp, r7",
            "blt 0x370b4",
            "ldr r0, [sp, 0x10]",
            "add r7, r5, 1",
            "ldr r1, [sp, 0xc]",
            "cmp r7, r1",
            "bge 0x3713c",
            "add r8, r0, 0x10",
            "mov r1, sb",
            "mov r2, r8",
            "bl fcn.00035644",
            "subs sl, r0, 0",
            "bne 0x37380",
            "mov r0, r8",
            "mov r1, r4",
            "add r2, sp, 0x30",
            "bl fcn.00036cf0",
            "subs sl, r0, 0",
            "bne 0x37380",
            "add r7, r7, 1",
            "mov r0, r8",
            "b 0x370f4",
            "add r7, sp, 0x20",
            "mov r0, r7",
            "bl fcn.00034e04",
            "subs sl, r0, 0",
            "bne 0x37380",
            "mov r0, r7",
            "mov sb, sl",
            "bl fcn.000366e8",
            "ldr r2, [sp, 0x14]",
            "mov r3, sl",
            "mov r8, sl",
            "mov r1, 1",
            "ldr fp, [r2]",
            "str r1, [sp, 8]",
            "sub fp, fp, 1",
            "ldr r2, [sp, 8]",
            "subs r2, r2, 1",
            "str r2, [sp, 8]",
            "bne 0x371a8",
            "cmn fp, 1",
            "beq 0x372a8",
            "ldr r1, [sp, 0x14]",
            "ldr r2, [r1, 0xc]",
            "ldr sl, [r2, fp, lsl 2]",
            "sub fp, fp, 1",
            "mov r2, 0x1c",
            "str r2, [sp, 8]",
            "ubfx r2, sl, 0x1b, 1",
            "orrs r1, r2, r3",
            "lsl sl, sl, 1",
            "moveq r3, r1",
            "beq 0x37178",
            "eor r1, r2, 1",
            "cmp r3, 1",
            "movne r3, 0",
            "andeq r3, r1, 1",
            "cmp r3, 0",
            "beq 0x37208",
            "mov r0, r7",
            "mov r1, r7",
            "bl fcn.00035b64",
            "subs ip, r0, 0",
            "bne 0x37364",
            "mov r0, r7",
            "mov r1, r4",
            "add r2, sp, 0x30",
            "bl fcn.00036cf0",
            "subs ip, r0, 0",
            "bne 0x37364",
            "mov r3, 1",
            "b 0x37178",
            "add sb, sb, 1",
            "cmp sb, r6",
            "rsb r1, sb, r6",
            "movne r3, 2",
            "orr r8, r8, r2, lsl r1",
            "bne 0x37178",
            "mov sb, r3",
            "add r3, sp, 0x30",
            "str r3, [sp, 0x18]",
            "mov r0, r7",
            "mov r1, r7",
            "bl fcn.00035b64",
            "subs ip, r0, 0",
            "bne 0x37364",
            "mov r0, r7",
            "mov r1, r4",
            "add r2, sp, 0x30",
            "bl fcn.00036cf0",
            "subs ip, r0, 0",
            "bne 0x37364",
            "add sb, sb, 1",
            "cmp sb, r6",
            "blt 0x3722c",
            "add r1, sp, 0x40",
            "mov r0, r7",
            "add r1, r1, r8, lsl 4",
            "mov r2, r7",
            "bl fcn.00035644",
            "subs ip, r0, 0",
            "bne 0x37364",
            "mov r0, r7",
            "mov r1, r4",
            "add r2, sp, 0x30",
            "bl fcn.00036cf0",
            "subs ip, r0, 0",
            "bne 0x37364",
            "mov r3, 1",
            "mov r8, ip",
            "mov sb, ip",
            "b 0x37178",
            "cmp sb, 0",
            "add fp, sp, 0x20",
            "movle r2, 0",
            "movgt r2, 1",
            "cmp r3, 2",
            "movne r2, 0",
            "cmp r2, 0",
            "addne r7, sp, 0x30",
            "addne sl, sp, 0x50",
            "ldrne r6, [sp, 8]",
            "bne 0x3731c",
            "ldr r1, [sp, 0x1c]",
            "mov r0, fp",
            "bl fcn.00034d0c",
            "mov ip, 0",
            "b 0x37364",
            "mov r0, fp",
            "mov r1, r4",
            "mov r2, r7",
            "bl fcn.00036cf0",
            "subs ip, r0, 0",
            "bne 0x37364",
            "ldr r1, [sp, 0xc]",
            "lsl r8, r8, 1",
            "tst r1, r8",
            "bne 0x37334",
            "add r6, r6, 1",
            "cmp r6, sb",
            "bge 0x372d4",
            "mov r0, fp",
            "mov r1, fp",
            "bl fcn.00035b64",
            "subs ip, r0, 0",
            "beq 0x372e8",
            "b 0x37364",
            "mov r0, fp",
            "mov r1, sl",
            "mov r2, fp",
            "bl fcn.00035644",
            "subs ip, r0, 0",
            "bne 0x37364",
            "mov r0, fp",
            "mov r1, r4",
            "mov r2, r7",
            "bl fcn.00036cf0",
            "subs ip, r0, 0",
            "beq 0x37310",
            "str ip, [sp, 4]",
            "add r0, sp, 0x20",
            "bl fcn.00034db0",
            "ldr ip, [sp, 4]",
            "mov sl, ip",
            "b 0x37380",
            "mvn sl, 2",
            "add r0, sp, 0x30",
            "bl fcn.00034db0",
            "add r0, sp, 0x50",
            "bl fcn.00034db0",
            "ldr r4, [sp, 0x10]",
            "ldr r2, [sp, 0xc]",
            "cmp r5, r2",
            "bge 0x373b4",
            "mov r0, r4",
            "add r5, r5, 1",
            "bl fcn.00034db0",
            "add r4, r4, 0x10",
            "b 0x37394",
            "mov r0, sl",
            "add sp, sp, 0x244",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.imp.__aeabi_idivmod": {
        "function_address": "0x00008b48",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x7a4]!"
        ]
    },
    "fcn.00035994": {
        "function_address": "0x00035994",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r6, r1",
            "mov r4, r0",
            "bl fcn.00034ce0",
            "mov r1, 0x1c",
            "mov r0, r6",
            "bl sym.imp.__aeabi_idiv",
            "add r7, r0, 1",
            "mov r5, r0",
            "mov r1, r7",
            "mov r0, r4",
            "bl fcn.00034f34",
            "subs r8, r0, 0",
            "bne 0x359ec",
            "str r7, [r4]",
            "mov r0, r6",
            "ldr r4, [r4, 0xc]",
            "mov r1, 0x1c",
            "bl sym.imp.__aeabi_idivmod",
            "mov r3, 1",
            "lsl r1, r3, r1",
            "str r1, [r4, r5, lsl 2]",
            "mov r0, r8",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.000366e8": {
        "function_address": "0x000366e8",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r0",
            "bl fcn.00034ce0",
            "ldr r3, [r4, 0xc]",
            "mov r2, 1",
            "str r2, [r3]",
            "ldr r3, [r4, 0xc]",
            "ldr r3, [r3]",
            "adds r3, r3, 0",
            "movne r3, 1",
            "str r3, [r4]",
            "pop {r4, pc}"
        ]
    },
    "fcn.00035228": {
        "function_address": "0x00035228",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r6, r0",
            "ldr r5, [r0]",
            "mov r7, r1",
            "ldr r3, [r2, 4]",
            "mov r4, r2",
            "ldr r8, [r1]",
            "cmp r3, r5",
            "blt 0x35274",
            "ldr lr, [r4]",
            "mov r0, 0",
            "str r5, [r4]",
            "mov r1, r0",
            "ldr r6, [r6, 0xc]",
            "ldr ip, [r4, 0xc]",
            "ldr r2, [r7, 0xc]",
            "mov r3, r6",
            "mov r7, ip",
            "b 0x3528c",
            "mov r0, r2",
            "mov r1, r5",
            "bl fcn.00034f34",
            "cmp r0, 0",
            "beq 0x3524c",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}",
            "cmp r0, r8",
            "bge 0x352b8",
            "ldr sl, [r3], 4",
            "add r0, r0, 1",
            "ldr sb, [r2], 4",
            "rsb sb, sb, sl",
            "rsb sb, r1, sb",
            "lsr r1, sb, 0x1f",
            "bic sb, sb, 0xf0000000",
            "str sb, [r7], 4",
            "b 0x3528c",
            "bic r2, r8, r8, asr 31",
            "lsl r3, r2, 2",
            "add r0, r6, r3",
            "add r3, ip, r3",
            "cmp r2, r5",
            "bge 0x352ec",
            "ldr ip, [r0], 4",
            "add r2, r2, 1",
            "rsb ip, r1, ip",
            "lsr r1, ip, 0x1f",
            "bic ip, ip, 0xf0000000",
            "str ip, [r3], 4",
            "b 0x352c8",
            "ldr r2, [r4]",
            "mov r1, 0",
            "cmp r2, lr",
            "strlt r1, [r3], 4",
            "addlt r2, r2, 1",
            "blt 0x352f4",
            "mov r0, r4",
            "bl fcn.00034d3c",
            "mov r0, 0",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "fcn.00034fbc": {
        "function_address": "0x00034fbc",
        "instructions": [
            "cmp r0, r1",
            "push {r3, r4, r5, lr}",
            "mov r5, r0",
            "mov r4, r1",
            "beq 0x35044",
            "ldr r1, [r0]",
            "ldr r3, [r4, 4]",
            "cmp r3, r1",
            "blt 0x34ff0",
            "ldr r1, [r5, 0xc]",
            "mov r3, 0",
            "ldr r2, [r4, 0xc]",
            "b 0x35004",
            "mov r0, r4",
            "bl fcn.00034f34",
            "cmp r0, 0",
            "beq 0x34fe0",
            "pop {r3, r4, r5, pc}",
            "ldr r0, [r5]",
            "cmp r3, r0",
            "ldrlt r0, [r1], 4",
            "addlt r3, r3, 1",
            "strlt r0, [r2], 4",
            "blt 0x35004",
            "mov r0, 0",
            "ldr r1, [r4]",
            "cmp r3, r1",
            "strlt r0, [r2], 4",
            "addlt r3, r3, 1",
            "blt 0x35020",
            "ldr r3, [r5]",
            "str r3, [r4]",
            "ldr r3, [r5, 8]",
            "str r3, [r4, 8]",
            "mov r0, 0",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.00035b64": {
        "function_address": "0x00035b64",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x2c",
            "ldr r6, [r0]",
            "mov r7, r0",
            "str r1, [sp, 0x10]",
            "lsl r8, r6, 1",
            "add r8, r8, 1",
            "cmp r8, 0x200",
            "bge 0x35b9c",
            "cmp r6, 0x7f",
            "bgt 0x35b9c",
            "bl fcn.000359f4",
            "mov r4, r0",
            "b 0x35cec",
            "add r5, sp, 0x18",
            "mov r1, r8",
            "mov r0, r5",
            "bl fcn.00034e5c",
            "subs r4, r0, 0",
            "bne 0x35cec",
            "str r8, [sp, 0x18]",
            "mov ip, r4",
            "lsl r3, r6, 2",
            "mov lr, r4",
            "mov r8, r4",
            "sub r3, r3, 4",
            "str r3, [sp, 0x14]",
            "cmp r8, r6",
            "bge 0x35cd0",
            "ldr r3, [r7, 0xc]",
            "add sl, lr, 4",
            "ldr r1, [sp, 0x24]",
            "add r8, r8, 1",
            "ldr r0, [r3, ip]",
            "mov r3, 0",
            "ldr r2, [r1, lr]",
            "str r8, [sp, 4]",
            "umlal r2, r3, r0, r0",
            "bic r0, r2, 0xf0000000",
            "lsr r2, r2, 0x1c",
            "str r0, [r1, lr]",
            "orr r2, r2, r3, lsl 4",
            "ldr r3, [r7, 0xc]",
            "ldr r3, [r3, ip]",
            "str r3, [sp, 0xc]",
            "ldr r3, [sp, 0x24]",
            "add sl, r3, sl",
            "mov r3, sl",
            "ldr sb, [sp, 4]",
            "add r3, r3, 4",
            "cmp sb, r6",
            "beq 0x35c8c",
            "add r1, ip, r3",
            "ldr r0, [r7, 0xc]",
            "rsb r1, sl, r1",
            "ldr sb, [sp, 0xc]",
            "ldr r0, [r0, r1]",
            "str r0, [sp, 8]",
            "ldr fp, [sp, 8]",
            "umull r0, r1, r0, sb",
            "umlal r0, r1, sb, fp",
            "ldr fp, [r3, -4]",
            "adds r0, r0, fp",
            "adc r1, r1, 0",
            "adds r0, r0, r2",
            "adc r1, r1, 0",
            "bic r2, r0, 0xf0000000",
            "str r2, [r3, -4]",
            "lsr r2, r0, 0x1c",
            "orr r2, r2, r1, lsl 4",
            "ldr r1, [sp, 4]",
            "add r1, r1, 1",
            "str r1, [sp, 4]",
            "b 0x35c24",
            "ldr fp, [sp, 0x14]",
            "rsb r3, ip, fp",
            "add sl, sl, r3",
            "cmp r2, 0",
            "beq 0x35cc4",
            "ldr r1, [sl]",
            "mov r3, 0",
            "adds r2, r2, r1",
            "adc r3, r3, 0",
            "bic r1, r2, 0xf0000000",
            "lsr r2, r2, 0x1c",
            "str r1, [sl], 4",
            "orr r2, r2, r3, lsl 4",
            "b 0x35c98",
            "add lr, lr, 8",
            "add ip, ip, 4",
            "b 0x35bd0",
            "mov r0, r5",
            "bl fcn.00034d3c",
            "ldr r1, [sp, 0x10]",
            "mov r0, r5",
            "bl fcn.00034d0c",
            "mov r0, r5",
            "bl fcn.00034db0",
            "ldr r2, [sp, 0x10]",
            "mov r3, 0",
            "mov r0, r4",
            "str r3, [r2, 8]",
            "add sp, sp, 0x2c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0003577c": {
        "function_address": "0x0003577c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r5, r1",
            "ldr r1, [r1]",
            "sub sp, sp, 0x1000",
            "ldr r3, [r0, 4]",
            "sub sp, sp, 0x1c",
            "add r1, r1, 1",
            "mov r4, r0",
            "str r2, [sp, 0x14]",
            "cmp r3, r1",
            "ldr r2, [r0]",
            "str r2, [sp, 0x10]",
            "blt 0x357c8",
            "ldr r0, [r4, 0xc]",
            "mov ip, 0",
            "ldr lr, [r4]",
            "add r1, sp, 0x18",
            "mov r6, r0",
            "b 0x357d8",
            "bl fcn.00034f34",
            "cmp r0, 0",
            "beq 0x357b0",
            "b 0x35988",
            "cmp ip, lr",
            "bge 0x357f8",
            "lsl r7, ip, 3",
            "mov r3, 0",
            "ldr r2, [r6], 4",
            "add ip, ip, 1",
            "strd r2, r3, [r1, r7]",
            "b 0x357d8",
            "ldr ip, [r5]",
            "mov r2, 0",
            "bic lr, lr, lr, asr 31",
            "mov r3, 0",
            "lsl r7, ip, 1",
            "add r6, r1, lr, lsl 3",
            "add r7, r7, 1",
            "cmp lr, r7",
            "strdlt r2, r3, [r6], 8",
            "addlt lr, lr, 1",
            "blt 0x35814",
            "mov lr, 0",
            "cmp lr, ip",
            "bge 0x358a0",
            "ldr sl, [r1]",
            "mov r8, r1",
            "ldr r3, [sp, 0x14]",
            "mov r6, 0",
            "ldr sb, [r5, 0xc]",
            "mul sl, sl, r3",
            "bic sl, sl, 0xf0000000",
            "cmp r6, ip",
            "bge 0x3586c",
            "ldrd r2, r3, [r8], 8",
            "ldr fp, [sb], 4",
            "add r6, r6, 1",
            "umlal r2, r3, fp, sl",
            "strd r2, r3, [r8, -8]",
            "b 0x3584c",
            "ldm r1, {r2, r3}",
            "add lr, lr, 1",
            "lsr r2, r2, 0x1c",
            "orr r8, r2, r3, lsl 4",
            "lsr r3, r3, 0x1c",
            "str r3, [sp, 4]",
            "str r8, [sp]",
            "ldrd r2, r3, [r1, 8]",
            "ldrd r8, sb, [sp]",
            "adds r2, r2, r8",
            "adc r3, r3, sb",
            "strd r2, r3, [r1, 8]!",
            "b 0x35828",
            "bic lr, ip, ip, asr 31",
            "add r3, sp, 0x18",
            "lsl r6, lr, 3",
            "add lr, lr, 1",
            "add r1, r3, r6",
            "add r6, r6, 8",
            "add r6, r3, r6",
            "cmp lr, r7",
            "bgt 0x358fc",
            "add r1, r1, 8",
            "add lr, lr, 1",
            "ldmdb r1, {r2, r3}",
            "lsr r2, r2, 0x1c",
            "orr sb, r2, r3, lsl 4",
            "lsr r3, r3, 0x1c",
            "str r3, [sp, 0xc]",
            "str sb, [sp, 8]",
            "ldrd r2, r3, [r6], 8",
            "ldrd r8, sb, [sp, 8]",
            "adds r2, r2, r8",
            "adc r3, r3, sb",
            "strd r2, r3, [r6, -8]",
            "b 0x358bc",
            "add r3, sp, 0x18",
            "add ip, r3, ip, lsl 3",
            "mov r3, 0",
            "ldr r2, [r5]",
            "add r2, r2, 1",
            "cmp r3, r2",
            "ldrlt r2, [ip], 8",
            "addlt r3, r3, 1",
            "biclt r2, r2, 0xf0000000",
            "strlt r2, [r0], 4",
            "blt 0x35908",
            "mov r2, 0",
            "ldr sb, [sp, 0x10]",
            "cmp r3, sb",
            "strlt r2, [r0], 4",
            "addlt r3, r3, 1",
            "blt 0x3592c",
            "ldr r3, [r5]",
            "mov r0, r4",
            "add r3, r3, 1",
            "str r3, [r4]",
            "bl fcn.00034d3c",
            "mov r0, r4",
            "mov r1, r5",
            "bl fcn.00034c1c",
            "cmn r0, 1",
            "beq 0x35984",
            "mov r0, r4",
            "mov r1, r5",
            "mov r2, r4",
            "add sp, sp, 0x1000",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "b fcn.00035228",
            "mov r0, 0",
            "add sp, sp, 0x1000",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00034d0c": {
        "function_address": "0x00034d0c",
        "instructions": [
            "push {r0, r1, r2, r3, r4, lr}",
            "mov ip, r1",
            "mov r4, r0",
            "mov lr, sp",
            "ldm r0, {r0, r1, r2, r3}",
            "stm sp, {r0, r1, r2, r3}",
            "ldm ip, {r0, r1, r2, r3}",
            "stm r4, {r0, r1, r2, r3}",
            "ldm sp, {r0, r1, r2, r3}",
            "stm ip, {r0, r1, r2, r3}",
            "add sp, sp, 0x10",
            "pop {r4, pc}"
        ]
    },
    "fcn.000360e0": {
        "function_address": "0x000360e0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r8, r1",
            "ldr r1, [r0]",
            "sub sp, sp, 0x9c",
            "add ip, sp, 0x48",
            "mov fp, r0",
            "str r2, [sp, 0x20]",
            "mov r0, ip",
            "str r3, [sp, 0x28]",
            "add r1, r1, 2",
            "str ip, [sp, 0x14]",
            "bl fcn.00034e5c",
            "cmp r0, 0",
            "bne 0x365a4",
            "ldr r3, [fp]",
            "add r6, sp, 0x78",
            "mov r0, r6",
            "add r3, r3, 2",
            "str r3, [sp, 0x48]",
            "bl fcn.00034e04",
            "subs r4, r0, 0",
            "bne 0x36598",
            "add ip, sp, 0x88",
            "str ip, [sp, 0x24]",
            "mov r0, ip",
            "bl fcn.00034e04",
            "subs r4, r0, 0",
            "bne 0x36590",
            "add r5, sp, 0x58",
            "mov r1, fp",
            "mov r0, r5",
            "bl fcn.0003504c",
            "subs r4, r0, 0",
            "bne 0x36588",
            "add r7, sp, 0x68",
            "mov r1, r8",
            "mov r0, r7",
            "bl fcn.0003504c",
            "subs r4, r0, 0",
            "bne 0x36580",
            "ldr ip, [fp, 8]",
            "mov r0, r7",
            "ldr r8, [r8, 8]",
            "str ip, [sp, 0x30]",
            "str r8, [sp, 0x34]",
            "str r4, [sp, 0x70]",
            "str r4, [sp, 0x60]",
            "bl fcn.00034d70",
            "mov r1, 0x1c",
            "bl sym.imp.__aeabi_idivmod",
            "cmp r1, 0x1b",
            "beq 0x361e8",
            "rsb r1, r1, 0x1b",
            "mov r0, r5",
            "str r1, [sp, 0x10]",
            "mov r2, r5",
            "bl fcn.00035fd8",
            "subs r4, r0, 0",
            "bne 0x36578",
            "ldr r1, [sp, 0x10]",
            "mov r0, r7",
            "mov r2, r7",
            "bl fcn.00035fd8",
            "subs r4, r0, 0",
            "bne 0x36578",
            "b 0x361ec",
            "str r4, [sp, 0x10]",
            "ldr r3, [sp, 0x58]",
            "mov r0, r7",
            "ldr ip, [sp, 0x68]",
            "str r3, [sp, 0xc]",
            "sub r8, r3, 1",
            "str ip, [sp, 8]",
            "sub r3, ip, 1",
            "str r3, [sp, 4]",
            "rsb sb, r3, r8",
            "mov r1, sb",
            "bl fcn.00035074",
            "subs r4, r0, 0",
            "bne 0x36578",
            "lsl sl, sb, 2",
            "mov r0, r5",
            "mov r1, r7",
            "bl fcn.00034ca4",
            "cmn r0, 1",
            "beq 0x36264",
            "ldr r2, [sp, 0x54]",
            "mov r0, r5",
            "ldr r1, [r2, sl]",
            "add r1, r1, 1",
            "str r1, [r2, sl]",
            "mov r1, r7",
            "mov r2, r5",
            "bl fcn.0003536c",
            "cmp r0, 0",
            "beq 0x36224",
            "b 0x36574",
            "mov r1, sb",
            "mov r0, r7",
            "bl fcn.00034ec8",
            "ldr ip, [sp, 4]",
            "ldr r3, [sp, 0xc]",
            "lsl ip, ip, 2",
            "str ip, [sp, 4]",
            "sub ip, ip, 4",
            "str ip, [sp, 0x38]",
            "sub sl, r3, 0xc0000002",
            "ldr ip, [sp, 8]",
            "lsl sl, sl, 2",
            "rsb sb, ip, r8",
            "sub ip, ip, 2",
            "str ip, [sp, 0x44]",
            "lsl sb, sb, 2",
            "ldr ip, [sp, 8]",
            "ldr r3, [sp, 0x58]",
            "cmp r8, ip",
            "blt 0x36500",
            "cmp r8, r3",
            "sub ip, sl, 4",
            "str ip, [sp, 0x2c]",
            "bgt 0x364f0",
            "ldr r3, [sp, 0x64]",
            "add ip, sl, 4",
            "ldr r2, [sp, 0x74]",
            "ldr r0, [r3, ip]",
            "str ip, [sp, 0xc]",
            "ldr ip, [sp, 4]",
            "ldr lr, [r2, ip]",
            "cmp r0, lr",
            "mvneq r2, 0xf0000000",
            "ldreq r3, [sp, 0x54]",
            "streq r2, [r3, sb]",
            "beq 0x36340",
            "lsr ip, r0, 4",
            "lsl r2, r0, 0x1c",
            "str ip, [sp, 0x1c]",
            "str r2, [sp, 0x18]",
            "ldr r0, [r3, sl]",
            "ldrd r2, r3, [sp, 0x18]",
            "orr r2, r2, r0",
            "mov r0, r2",
            "mov r1, r3",
            "mov r2, lr",
            "mov r3, 0",
            "bl sym.imp.__aeabi_uldivmod",
            "ldr ip, [sp, 0x54]",
            "mov r3, 0",
            "cmp r1, r3",
            "mvn r2, 0xf0000000",
            "cmpeq r0, r2",
            "movhi r0, r2",
            "str r0, [ip, sb]",
            "ldr r3, [sp, 0x54]",
            "sub ip, r8, 1",
            "str ip, [sp, 0x40]",
            "ldr r2, [r3, sb]",
            "add r2, r2, 1",
            "bic r2, r2, 0xf0000000",
            "str r2, [r3, sb]",
            "sub r3, r8, 2",
            "str r3, [sp, 0x3c]",
            "ldr r3, [sp, 0x54]",
            "mov r0, r6",
            "ldr r2, [r3, sb]",
            "sub r2, r2, 1",
            "bic r2, r2, 0xf0000000",
            "str r2, [r3, sb]",
            "bl fcn.00034ce0",
            "ldr ip, [sp, 0x44]",
            "mov r0, r6",
            "ldr r2, [sp, 0x84]",
            "cmp ip, 0",
            "movlt r3, 0",
            "ldrge r3, [sp, 0x74]",
            "ldrge ip, [sp, 0x38]",
            "ldrge r3, [r3, ip]",
            "ldr ip, [sp, 4]",
            "str r3, [r2]",
            "ldr r3, [sp, 0x74]",
            "ldr r2, [r3, ip]",
            "ldr r3, [sp, 0x84]",
            "str r2, [r3, 4]",
            "mov r3, 2",
            "str r3, [sp, 0x78]",
            "mov r2, r6",
            "ldr r3, [sp, 0x54]",
            "ldr r1, [r3, sb]",
            "bl fcn.000356b8",
            "cmp r0, 0",
            "bne 0x36574",
            "ldr ip, [sp, 0x3c]",
            "add r1, sp, 0x88",
            "ldr r3, [sp, 0x94]",
            "cmp ip, 0",
            "ldrge r2, [sp, 0x64]",
            "ldrge ip, [sp, 0x2c]",
            "ldrge r0, [r2, ip]",
            "ldr ip, [sp, 0xc]",
            "str r0, [r3]",
            "mov r0, r6",
            "ldr r3, [sp, 0x40]",
            "ldr r2, [sp, 0x94]",
            "cmp r3, 0",
            "movlt r3, 0",
            "ldrge r3, [sp, 0x64]",
            "ldrge r3, [r3, sl]",
            "str r3, [r2, 4]",
            "ldr r3, [sp, 0x64]",
            "ldr r2, [r3, ip]",
            "ldr r3, [sp, 0x94]",
            "str r2, [r3, 8]",
            "mov r3, 3",
            "str r3, [sp, 0x88]",
            "bl fcn.00034c1c",
            "cmp r0, 1",
            "beq 0x36364",
            "ldr r3, [sp, 0x54]",
            "mov r0, r7",
            "mov r2, r6",
            "ldr r1, [r3, sb]",
            "bl fcn.000356b8",
            "cmp r0, 0",
            "bne 0x36574",
            "ldr ip, [sp, 8]",
            "mov r0, r6",
            "rsb sl, ip, r8",
            "mov r1, sl",
            "bl fcn.00035074",
            "cmp r0, 0",
            "bne 0x36574",
            "mov r0, r5",
            "mov r1, r6",
            "mov r2, r5",
            "bl fcn.0003536c",
            "cmp r0, 0",
            "bne 0x36574",
            "ldr r3, [sp, 0x60]",
            "cmp r3, 1",
            "bne 0x364f0",
            "mov r0, r7",
            "mov r1, r6",
            "bl fcn.00034fbc",
            "cmp r0, 0",
            "bne 0x36574",
            "mov r0, r6",
            "mov r1, sl",
            "bl fcn.00035074",
            "cmp r0, 0",
            "bne 0x36574",
            "mov r0, r5",
            "mov r1, r6",
            "mov r2, r5",
            "bl fcn.00035314",
            "cmp r0, 0",
            "bne 0x36574",
            "ldr r3, [sp, 0x54]",
            "ldr r2, [r3, sb]",
            "sub r2, r2, 1",
            "bic r2, r2, 0xf0000000",
            "str r2, [r3, sb]",
            "ldr sl, [sp, 0x2c]",
            "sub r8, r8, 1",
            "sub sb, sb, 4",
            "b 0x362a4",
            "ldr ip, [sp, 0x20]",
            "cmp r3, 0",
            "ldrne r3, [fp, 8]",
            "cmp ip, 0",
            "str r3, [sp, 0x60]",
            "beq 0x36544",
            "add r0, sp, 0x48",
            "bl fcn.00034d3c",
            "ldr r1, [sp, 0x20]",
            "add r0, sp, 0x48",
            "bl fcn.00034d0c",
            "ldr ip, [sp, 0x30]",
            "ldr r1, [sp, 0x34]",
            "subs r3, ip, r1",
            "ldr ip, [sp, 0x20]",
            "movne r3, 1",
            "str r3, [ip, 8]",
            "ldr ip, [sp, 0x28]",
            "cmp ip, 0",
            "beq 0x36578",
            "ldr r1, [sp, 0x10]",
            "mov r0, r5",
            "mov r2, r5",
            "mov r3, 0",
            "bl fcn.00035dc8",
            "ldr r1, [sp, 0x28]",
            "mov r0, r5",
            "bl fcn.00034d0c",
            "b 0x36578",
            "mov r4, r0",
            "mov r0, r7",
            "bl fcn.00034db0",
            "mov r0, r5",
            "bl fcn.00034db0",
            "add r0, sp, 0x88",
            "bl fcn.00034db0",
            "mov r0, r6",
            "bl fcn.00034db0",
            "add r0, sp, 0x48",
            "bl fcn.00034db0",
            "mov r0, r4",
            "add sp, sp, 0x9c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00036cf0": {
        "function_address": "0x00036cf0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x3c",
            "ldr r8, [r1]",
            "mov r7, r0",
            "add r6, sp, 0x18",
            "mov sb, r1",
            "mov r0, r6",
            "mov r1, r7",
            "mov fp, r2",
            "bl fcn.0003504c",
            "cmp r0, 0",
            "bne 0x36f18",
            "mov r0, r6",
            "sub r1, r8, 1",
            "bl fcn.00034ec8",
            "cmp r8, 0x8000000",
            "bls 0x36d7c",
            "mov r0, r6",
            "mov r1, fp",
            "mov r2, r6",
            "bl fcn.00035644",
            "subs r4, r0, 0",
            "bne 0x36f0c",
            "add r8, r8, 1",
            "mov r0, r6",
            "mov r1, r8",
            "bl fcn.00034ec8",
            "mov r1, 0x1c",
            "mov r0, r7",
            "mul r1, r1, r8",
            "mov r2, r7",
            "bl fcn.00035d04",
            "subs r4, r0, 0",
            "bne 0x36f0c",
            "b 0x36e6c",
            "ldr r3, [fp]",
            "add sl, sp, 0x28",
            "ldr r1, [sp, 0x18]",
            "mov r0, sl",
            "add r1, r1, r3",
            "add r1, r1, 1",
            "bl fcn.00034e5c",
            "subs r4, r0, 0",
            "bne 0x36f0c",
            "ldr r1, [sp, 0x18]",
            "mov r0, r4",
            "ldr ip, [fp]",
            "lsl r2, r8, 2",
            "add r3, r1, ip",
            "str r1, [sp, 0xc]",
            "add r3, r3, 1",
            "str r3, [sp, 0x28]",
            "str r2, [sp, 0x14]",
            "ldr r1, [sp, 0xc]",
            "cmp r0, r1",
            "bge 0x36e4c",
            "ldr r3, [sp, 0x24]",
            "rsb r2, r0, r8",
            "ldr lr, [sp, 0x14]",
            "mov r4, 0",
            "ldr r3, [r3, r0, lsl 2]",
            "ldr r1, [fp, 0xc]",
            "str r3, [sp, 0x10]",
            "ldr r3, [sp, 0x34]",
            "add r1, r1, r2, lsl 2",
            "add r3, r3, lr",
            "str r1, [sp, 4]",
            "cmp r2, ip",
            "bge 0x36e40",
            "ldr lr, [sp, 4]",
            "mov r5, 0",
            "add r2, r2, 1",
            "ldr r1, [lr], 4",
            "str lr, [sp, 4]",
            "ldr lr, [sp, 0x10]",
            "umlal r4, r5, r1, lr",
            "ldr lr, [r3]",
            "adds r4, r4, lr",
            "adc r5, r5, 0",
            "bic lr, r4, 0xf0000000",
            "lsr r4, r4, 0x1c",
            "str lr, [r3], 4",
            "orr r4, r4, r5, lsl 4",
            "b 0x36dfc",
            "str r4, [r3]",
            "add r0, r0, 1",
            "b 0x36dc4",
            "mov r0, sl",
            "bl fcn.00034d3c",
            "mov r0, sl",
            "mov r1, r6",
            "bl fcn.00034d0c",
            "mov r0, sl",
            "bl fcn.00034db0",
            "b 0x36d4c",
            "mov r0, r6",
            "mov r1, sb",
            "mov r2, r6",
            "mov r3, r8",
            "bl fcn.00035518",
            "subs r4, r0, 0",
            "bne 0x36f0c",
            "mov r0, r7",
            "mov r1, r6",
            "mov r2, r7",
            "bl fcn.0003536c",
            "subs r4, r0, 0",
            "bne 0x36f0c",
            "ldr r3, [r7, 8]",
            "cmp r3, 1",
            "bne 0x36ee0",
            "mov r0, r6",
            "bl fcn.000366e8",
            "mov r0, r6",
            "mov r1, r8",
            "bl fcn.00035074",
            "cmp r0, 0",
            "bne 0x36f08",
            "mov r0, r7",
            "mov r1, r6",
            "mov r2, r7",
            "bl fcn.00035314",
            "cmp r0, 0",
            "bne 0x36f08",
            "mov r0, r7",
            "mov r1, sb",
            "bl fcn.00034ca4",
            "cmn r0, 1",
            "beq 0x36f0c",
            "mov r0, r7",
            "mov r1, sb",
            "mov r2, r7",
            "bl fcn.00035228",
            "b 0x36ed8",
            "mov r4, r0",
            "mov r0, r6",
            "bl fcn.00034db0",
            "mov r0, r4",
            "add sp, sp, 0x3c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.zyNetCtrl_WPS_buildWPSData": {
        "function_address": "0x0001ebec",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov sl, r3",
            "ldr r5, [0x0001efd8]",
            "sub sp, sp, 0x23c",
            "ldr r3, [0x0001efdc]",
            "mov r4, r0",
            "add r5, pc, r5",
            "mov r8, r1",
            "mov r6, r2",
            "ldr r7, [r5, r3]",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x1ec70",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x912",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001efe0]",
            "ldr r0, [0x0001efe4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x214",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x0001efe8]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0001efec]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "cmp r8, 0",
            "cmpne r4, 0",
            "moveq fp, 1",
            "movne fp, 0",
            "bne 0x1ece8",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x1ece0",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x915",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001eff0]",
            "ldr r0, [0x0001eff4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x214",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x0001eff8]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0001efec]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, 0x10",
            "b 0x1efd0",
            "mov r0, r4",
            "mov r1, r8",
            "mov r2, r6",
            "bl fcn.00009310",
            "subs sb, r0, 0",
            "bne 0x1ed48",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x1ece0",
            "bl sym.imp.time",
            "movw r3, 0x922",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001effc]",
            "ldr r0, [0x0001f000]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x214",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x0001f004]",
            "add r0, pc, r0",
            "b 0x1eccc",
            "ldr r3, [0x0001f008]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "cmp r0, 0",
            "bne 0x1eed0",
            "ldrb r3, [r7]",
            "uxtb sl, sl",
            "cmp sl, 5",
            "bne 0x1ee8c",
            "cmp r3, 3",
            "bls 0x1edc0",
            "bl sym.imp.time",
            "movw r3, 0x92b",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001f00c]",
            "ldr r0, [0x0001f010]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x214",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x0001f014]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0001efec]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, sb",
            "bl fcn.000091a8",
            "subs r7, r0, 0",
            "beq 0x1ece0",
            "mov r5, 0",
            "mov r2, 0x1c",
            "str r5, [sp, 0x18]",
            "mov r1, r5",
            "add sl, sp, 0x18",
            "add r0, sp, 0x1c",
            "bl sym.imp.memset",
            "mov r1, sl",
            "mov r0, r6",
            "bl fcn.00008ec0",
            "str r5, [sp, 0x38]",
            "mov r1, r5",
            "add r0, sp, 0x3c",
            "mov r2, 0x1fc",
            "bl sym.imp.memset",
            "ldrb r3, [r4]",
            "add sb, sp, 0x38",
            "ldr r1, [0x0001f018]",
            "mov r2, sl",
            "str r3, [sp]",
            "mov r0, sb",
            "ldrb r3, [r4, 1]",
            "add r1, pc, r1",
            "str r3, [sp, 4]",
            "ldrb r3, [r4, 2]",
            "str r3, [sp, 8]",
            "ldrb r3, [r4, 3]",
            "str r3, [sp, 0xc]",
            "ldrb r3, [r4, 4]",
            "str r3, [sp, 0x10]",
            "ldrb r3, [r4, 5]",
            "str r3, [sp, 0x14]",
            "mov r3, r6",
            "bl sym.imp.sprintf",
            "mov r0, sb",
            "bl loc.imp.Outputlog",
            "mov r1, r7",
            "mov r2, r6",
            "mov r0, r4",
            "bl fcn.000092ec",
            "mov r0, r7",
            "bl fcn.00008f74",
            "mov r0, r4",
            "mov r1, r8",
            "mov r2, r6",
            "bl fcn.000091b4",
            "b 0x1ef80",
            "cmp r3, 3",
            "bls 0x1ece0",
            "bl sym.imp.time",
            "movw r3, 0x93f",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001f01c]",
            "ldr r0, [0x0001f020]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x214",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x0001f024]",
            "add r0, pc, r0",
            "b 0x1eccc",
            "cmp r0, 1",
            "movne r0, fp",
            "bne 0x1efd0",
            "ldrb r3, [r7]",
            "uxtb sl, sl",
            "cmp sl, 4",
            "bne 0x1ef88",
            "cmp r3, 3",
            "bls 0x1ef44",
            "mov r0, fp",
            "bl sym.imp.time",
            "movw r3, 0x948",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, sl",
            "ldr r3, [0x0001f028]",
            "ldr r0, [0x0001f02c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x214",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x0001f030]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0001efec]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, sb",
            "bl fcn.00008af4",
            "subs r4, r0, 0",
            "beq 0x1ece0",
            "ldr r0, [sb, 0x134]",
            "bl fcn.00008f74",
            "mov r0, r4",
            "bl fcn.0000952c",
            "str r0, [sb, 0x134]",
            "mov r1, r4",
            "mov r0, r8",
            "mov r2, r6",
            "bl fcn.000092ec",
            "mov r0, r4",
            "bl fcn.00008f74",
            "mov r0, 0",
            "b 0x1efd0",
            "cmp r3, 3",
            "bls 0x1ece0",
            "mov r0, fp",
            "bl sym.imp.time",
            "movw r3, 0x959",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001f034]",
            "ldr r0, [0x0001f038]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x214",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x0001f03c]",
            "add r0, pc, r0",
            "b 0x1eccc",
            "add sp, sp, 0x23c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.000091a8": {
        "function_address": "0x000091a8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x364]!"
        ]
    },
    "fcn.000092ec": {
        "function_address": "0x000092ec",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x28c]!"
        ]
    },
    "sym.zyEvent_UPDATEFWUPGRADESTATUS": {
        "function_address": "0x00019b84",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "mov r6, r0",
            "ldr r4, [0x00019d08]",
            "sub sp, sp, 0x14",
            "ldr r3, [0x00019d0c]",
            "add r4, pc, r4",
            "ldr r7, [r4, r3]",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x19bf8",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x18a",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00019d10]",
            "ldr r0, [0x00019d14]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x108",
            "bl sym.imp.printf",
            "ldr r0, [0x00019d18]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00019d1c]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x19c54",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x18b",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00019d20]",
            "ldr r0, [0x00019d24]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x108",
            "bl sym.imp.printf",
            "ldr r0, [0x00019d28]",
            "mov r1, r6",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00019d1c]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, 1",
            "mov r1, 4",
            "bl sym.imp.calloc",
            "subs r5, r0, 0",
            "bne 0x19cc0",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x19d00",
            "bl sym.imp.time",
            "mov r3, 0x190",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00019d2c]",
            "ldr r0, [0x00019d30]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x108",
            "bl sym.imp.printf",
            "ldr r0, [0x00019d34]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00019d1c]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0x19d00",
            "str r6, [r5]",
            "mov r3, 0",
            "str r3, [sp, 0xc]",
            "ldr r3, [0x00019d38]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x19cf0",
            "mov r0, 0xc",
            "mov r1, r5",
            "add r2, sp, r0",
            "blx r3",
            "mov r0, r5",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, lr}",
            "b sym.imp.free",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, pc}"
        ]
    },
    "sym.sendWPSSearch": {
        "function_address": "0x0000fa14",
        "instructions": [
            "push {r0, r1, r4, r5, r6, lr}",
            "mov r5, r0",
            "ldr r4, [0x0000fb24]",
            "ldr r3, [0x0000fb28]",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "ldrb r2, [r3]",
            "mov r6, r3",
            "cmp r2, 3",
            "bls 0xfa88",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0xc53",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000fb2c]",
            "ldr r0, [0x0000fb30]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x364",
            "bl sym.imp.printf",
            "ldr r0, [0x0000fb34]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000fb38]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x0000fb3c]",
            "ldr r3, [r4, r3]",
            "ldr r1, [r3]",
            "cmp r1, 1",
            "beq 0xfafc",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xfaf4",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0xc57",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000fb40]",
            "ldr r0, [0x0000fb44]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x364",
            "bl sym.imp.printf",
            "ldr r0, [0x0000fb48]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000fb38]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r4, 0x10",
            "b 0xfb18",
            "mov r0, r5",
            "mvn r2, 0",
            "bl fcn.000095f8",
            "subs r4, r0, 0",
            "bne 0xfaf4",
            "mov r0, r5",
            "bl fcn.000096b8",
            "mov r0, r4",
            "add sp, sp, 8",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.000096b8": {
        "function_address": "0x000096b8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 4]!"
        ]
    },
    "sym.zyNetCtrl_WPS_checkSyncList": {
        "function_address": "0x000200f4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x2c",
            "ldr r4, [0x0002051c]",
            "ldr r3, [0x00020520]",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "ldr r2, [r3]",
            "str r3, [sp, 0x18]",
            "ldr r3, [0x00020524]",
            "cmp r2, 1",
            "ldr r6, [r4, r3]",
            "bne 0x2016c",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x20510",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0xbb8",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00020528]",
            "ldr r0, [0x0002052c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x2b0",
            "bl sym.imp.printf",
            "ldr r0, [0x00020530]",
            "add r0, pc, r0",
            "b 0x201dc",
            "ldr r3, [0x00020534]",
            "ldr r3, [r4, r3]",
            "ldr r7, [r3]",
            "mov r5, r3",
            "cmp r7, 0",
            "beq 0x20198",
            "ldr r3, [0x00020538]",
            "ldr r8, [r4, r3]",
            "ldr r3, [r8]",
            "cmp r3, 0",
            "bne 0x201f4",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x20510",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0xbbd",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002053c]",
            "ldr r0, [0x00020540]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x2b0",
            "bl sym.imp.printf",
            "ldr r0, [0x00020544]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00020548]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0x20510",
            "mov r0, 0",
            "bl sym.imp.time",
            "ldrb r3, [r6]",
            "mov sl, r0",
            "cmp r3, 3",
            "bls 0x2025c",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0xbc9",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002054c]",
            "ldr r0, [0x00020550]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x2b0",
            "bl sym.imp.printf",
            "ldr r0, [0x00020554]",
            "ldr r1, [r8]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00020548]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x00020558]",
            "mov sb, 0",
            "ldr fp, [0x0002055c]",
            "add r3, pc, r3",
            "ldr r1, [0x00020560]",
            "add r3, r3, 0x2b0",
            "str r3, [sp, 0x20]",
            "add fp, pc, fp",
            "ldr r3, [0x00020564]",
            "add fp, fp, 0x2b0",
            "ldr r5, [r5]",
            "add r1, pc, r1",
            "add r3, pc, r3",
            "str r1, [sp, 0x1c]",
            "str r3, [sp, 0x24]",
            "ldr r3, [r8]",
            "cmp sb, r3",
            "bge 0x2042c",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x20314",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0xbd4",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [sp, 0x20]",
            "ldr r0, [sp, 0x1c]",
            "bl sym.imp.printf",
            "ldrb r0, [r5, 0xd]",
            "ldrb r3, [r5, 0xc]",
            "ldrb r1, [r5, 0xa]",
            "ldrb r2, [r5, 0xb]",
            "str r0, [sp]",
            "ldrb r0, [r5, 0xe]",
            "str r0, [sp, 4]",
            "ldrb r0, [r5, 0xf]",
            "str r0, [sp, 8]",
            "ldr r0, [0x00020568]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00020548]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x20368",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0xbd5",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r0, [sp, 0x24]",
            "mov r3, fp",
            "bl sym.imp.printf",
            "ldr r3, [r5, 0x14]",
            "ldr r0, [0x0002056c]",
            "ldrb r1, [r3]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00020548]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x203c4",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0xbd6",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00020570]",
            "ldr r0, [0x00020574]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x2b0",
            "bl sym.imp.printf",
            "ldr r0, [0x00020578]",
            "ldr r1, [r5, 0x18]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00020548]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x20420",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0xbd7",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002057c]",
            "ldr r0, [0x00020580]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x2b0",
            "bl sym.imp.printf",
            "ldr r0, [0x00020584]",
            "ldr r1, [r5, 0x1c]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00020548]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r5, [r5]",
            "add sb, sb, 1",
            "b 0x20298",
            "ldr fp, [0x00020588]",
            "mov r5, 0",
            "ldr sb, [0x0002058c]",
            "mov ip, r5",
            "add fp, pc, fp",
            "add sb, pc, sb",
            "add fp, fp, 0x2b0",
            "ldr r3, [r8]",
            "cmp ip, r3",
            "bge 0x204d8",
            "ldr r0, [r7, 0x1c]",
            "cmp r0, 0",
            "bne 0x204cc",
            "ldr r3, [r7, 0x18]",
            "rsb r3, r3, sl",
            "cmp r3, 0x1d",
            "ble 0x204cc",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x204c0",
            "str ip, [sp, 0x14]",
            "bl sym.imp.time",
            "movw r3, 0xbe3",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "mov r3, fp",
            "mov r0, sb",
            "bl sym.imp.printf",
            "ldr r0, [0x00020590]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00020548]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr ip, [sp, 0x14]",
            "mov r3, 1",
            "add r5, r5, r3",
            "str r3, [r7, 0x1c]",
            "ldr r7, [r7]",
            "add ip, ip, 1",
            "b 0x20448",
            "cmp r5, 0",
            "moveq r0, r5",
            "beq 0x20514",
            "ldr r3, [0x00020594]",
            "ldr r1, [sp, 0x18]",
            "ldr r2, [r4, r3]",
            "ldr r3, [0x00020598]",
            "ldr r0, [r1]",
            "ldr r3, [r4, r3]",
            "ldr r1, [r2]",
            "ldr r2, [r3]",
            "bl fcn.00008bf0",
            "mov r0, 0",
            "b 0x20514",
            "mov r0, 0x10",
            "add sp, sp, 0x2c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.aes_128_cbc_encrypt": {
        "function_address": "0x000376e8",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, lr}",
            "mov r4, r1",
            "sub sp, sp, 0x14",
            "mov r1, 0x10",
            "mov r5, r2",
            "mov r8, r3",
            "bl fcn.00008c74",
            "subs r7, r0, 0",
            "beq 0x377c4",
            "mov ip, r4",
            "add r3, r4, 0x10",
            "mov r2, sp",
            "mov r4, sp",
            "ldr r0, [ip]",
            "add ip, ip, 8",
            "ldr r1, [ip, -4]",
            "mov lr, r2",
            "cmp ip, r3",
            "stm lr!, {r0, r1}",
            "mov r2, lr",
            "bne 0x3771c",
            "lsr r8, r8, 4",
            "mov r6, 0",
            "add sb, sp, 0x10",
            "cmp r6, r8",
            "bge 0x377b4",
            "mov ip, 0",
            "ldrb r3, [r4, ip]",
            "ldrb r2, [r5, ip]",
            "eor r3, r3, r2",
            "strb r3, [r4, ip]",
            "add ip, ip, 1",
            "cmp ip, 0x10",
            "bne 0x37754",
            "mov r2, sp",
            "mov r0, r7",
            "mov r1, sp",
            "bl fcn.000096c4",
            "mov lr, sp",
            "mov r2, r5",
            "mov ip, lr",
            "add r2, r2, 8",
            "ldm ip!, {r0, r1}",
            "cmp ip, sb",
            "mov lr, ip",
            "str r0, [r2, -8]",
            "str r1, [r2, -4]",
            "bne 0x37788",
            "add r5, r5, 0x10",
            "add r6, r6, 1",
            "b 0x37748",
            "mov r0, r7",
            "bl fcn.0000856c",
            "mov r0, 0",
            "b 0x377c8",
            "mvn r0, 0",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, pc}"
        ]
    },
    "fcn.00008c74": {
        "function_address": "0x00008c74",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x6dc]!"
        ]
    },
    "fcn.000096c4": {
        "function_address": "0x000096c4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x36000",
            "ldr pc, [ip, 0xffc]!"
        ]
    },
    "fcn.0000856c": {
        "function_address": "0x0000856c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0xb8c]!"
        ]
    },
    "sym.security_SecurityCtrl_parseM1": {
        "function_address": "0x0002d1cc",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r4, r0",
            "ldr r6, [0x0002d558]",
            "sub sp, sp, 0x1f8",
            "ldr r3, [0x0002d55c]",
            "mov r7, r1",
            "add r6, pc, r6",
            "mov r8, r2",
            "ldr sb, [r6, r3]",
            "ldrb r3, [sb]",
            "cmp r3, 3",
            "bls 0x2d270",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0x108",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002d560]",
            "ldr r0, [0x0002d564]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x91",
            "bl sym.imp.printf",
            "ldrb r0, [r4, 3]",
            "ldrb r3, [r4, 2]",
            "str r0, [sp]",
            "ldrb r0, [r4, 4]",
            "ldrb r1, [r4]",
            "str r0, [sp, 4]",
            "ldrb r0, [r4, 5]",
            "ldrb r2, [r4, 1]",
            "str r0, [sp, 8]",
            "ldr r0, [0x0002d568]",
            "str r7, [sp, 0xc]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0002d56c]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, r4",
            "bl fcn.00008e30",
            "subs sl, r0, 0",
            "bne 0x2d288",
            "bl fcn.00008cc8",
            "b 0x2d2c4",
            "mov r0, 0x3e8",
            "bl fcn.00008ddc",
            "str r7, [r0, 4]",
            "mov r1, r8",
            "mov r5, r0",
            "mov r2, r7",
            "ldr r0, [r0, 8]",
            "bl sym.imp.memcpy",
            "ldr r8, [sl, 0x210]",
            "cmp r8, 0",
            "bne 0x2d2cc",
            "mov r0, r5",
            "bl fcn.00008cec",
            "mov r0, r4",
            "bl fcn.00008fbc",
            "mov r7, 0x10",
            "b 0x2d54c",
            "ldrb r3, [sb]",
            "cmp r3, 3",
            "bls 0x2d324",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x136",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002d570]",
            "ldr r0, [0x0002d574]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x91",
            "bl sym.imp.printf",
            "ldr r0, [0x0002d578]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0002d56c]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "add r7, sp, 0x10",
            "mov r0, r5",
            "mov r1, r7",
            "bl fcn.00008c8c",
            "cmp r0, 0",
            "bge 0x2d384",
            "ldrb r3, [sb]",
            "cmp r3, 3",
            "bls 0x2d2b4",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x13a",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002d57c]",
            "ldr r0, [0x0002d580]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x91",
            "bl sym.imp.printf",
            "ldr r0, [0x0002d584]",
            "add r0, pc, r0",
            "b 0x2d4ac",
            "mov r0, r5",
            "bl fcn.000091cc",
            "cmp r0, 0",
            "bge 0x2d3dc",
            "ldrb r3, [sb]",
            "cmp r3, 3",
            "bls 0x2d2b4",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x143",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002d588]",
            "ldr r0, [0x0002d58c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x91",
            "bl sym.imp.printf",
            "ldr r0, [0x0002d590]",
            "add r0, pc, r0",
            "b 0x2d4ac",
            "mov r0, r8",
            "mov r1, r7",
            "bl fcn.000088fc",
            "cmp r0, 0x10",
            "bne 0x2d438",
            "ldrb r3, [sb]",
            "cmp r3, 3",
            "bls 0x2d2b4",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x14d",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002d594]",
            "ldr r0, [0x0002d598]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x91",
            "bl sym.imp.printf",
            "ldr r0, [0x0002d59c]",
            "add r0, pc, r0",
            "b 0x2d4ac",
            "ldr r0, [r8, 0x134]",
            "bl fcn.00008f74",
            "mov r0, r5",
            "bl fcn.0000952c",
            "ldr r2, [r8]",
            "str r0, [r8, 0x134]",
            "mov r0, r4",
            "add r1, r2, 0x158",
            "add r2, r2, 0x15c",
            "bl fcn.0000916c",
            "ldrb r3, [sb]",
            "subs r7, r0, 0",
            "beq 0x2d4c4",
            "cmp r3, 3",
            "bls 0x2d2b4",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0x158",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002d5a0]",
            "ldr r0, [0x0002d5a4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x91",
            "bl sym.imp.printf",
            "ldr r0, [0x0002d5a8]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0002d56c]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0x2d2b4",
            "cmp r3, 3",
            "bls 0x2d514",
            "bl sym.imp.time",
            "mov r3, 0x168",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002d5ac]",
            "ldr r0, [0x0002d5b0]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x91",
            "bl sym.imp.printf",
            "ldr r0, [0x0002d5b4]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0002d56c]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, r8",
            "bl fcn.000091a8",
            "subs r6, r0, 0",
            "beq 0x2d2b4",
            "ldmib r6, {r1, r2}",
            "mov r3, 2",
            "mov r0, r4",
            "bl loc.imp.sendSecurityCtrlMessage",
            "mov r0, r5",
            "bl fcn.00008cec",
            "mov r0, r6",
            "bl fcn.00008cec",
            "mov r0, r4",
            "bl fcn.00008fbc",
            "mov r0, r7",
            "add sp, sp, 0x1f8",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "fcn.00008e30": {
        "function_address": "0x00008e30",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x5b4]!"
        ]
    },
    "fcn.00008fbc": {
        "function_address": "0x00008fbc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x4ac]!"
        ]
    },
    "fcn.000091cc": {
        "function_address": "0x000091cc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x34c]!"
        ]
    },
    "fcn.000088fc": {
        "function_address": "0x000088fc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x92c]!"
        ]
    },
    "fcn.0000916c": {
        "function_address": "0x0000916c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x38c]!"
        ]
    },
    "sym.wps_validate_m2": {
        "function_address": "0x0002f6e0",
        "instructions": [
            "cmp r0, 0",
            "beq 0x2f818",
            "push {r4, r5, lr}",
            "sub sp, sp, 0x1ec",
            "mov r1, sp",
            "bl fcn.00008c8c",
            "cmp r0, 0",
            "bge 0x2f708",
            "mvn r0, 0",
            "b 0x2f810",
            "ldr r5, [sp, 4]",
            "ldr r0, [sp]",
            "adds r4, r5, 0",
            "movne r4, 1",
            "bl fcn.0002f058",
            "cmp r0, 0",
            "bne 0x2f770",
            "ldr r0, [sp, 8]",
            "bl fcn.0002efd8",
            "cmp r0, 0",
            "bne 0x2f770",
            "ldr r3, [sp, 0xc]",
            "cmp r3, 0",
            "beq 0x2f770",
            "ldr r3, [sp, 0x10]",
            "cmp r3, 0",
            "beq 0x2f770",
            "ldr r3, [sp, 0x14]",
            "cmp r3, 0",
            "beq 0x2f770",
            "ldr r3, [sp, 0xd4]",
            "ldr r2, [sp, 0xd8]",
            "cmp r3, 0",
            "beq 0x2f770",
            "cmp r2, 0xc0",
            "beq 0x2f780",
            "cmp r4, 0",
            "bne 0x2f700",
            "mov r0, r4",
            "b 0x2f810",
            "ldr r0, [sp, 0x28]",
            "mov r1, r4",
            "mov r2, 1",
            "bl fcn.0002ee14",
            "cmp r0, 0",
            "bne 0x2f770",
            "ldr r3, [sp, 0x30]",
            "cmp r3, 0",
            "beq 0x2f770",
            "ldr r3, [sp, 0x34]",
            "cmp r3, 0",
            "beq 0x2f770",
            "ldr r0, [sp, 0x38]",
            "bl fcn.0002f02c",
            "cmp r0, 0",
            "bne 0x2f770",
            "ldr r0, [sp, 0x3c]",
            "bl fcn.0002f000",
            "cmp r0, 0",
            "bne 0x2f770",
            "ldr r0, [sp, 0x40]",
            "mov r1, 1",
            "bl fcn.0002ee4c",
            "cmp r0, 0",
            "bne 0x2f770",
            "ldr r3, [sp, 0x44]",
            "cmp r3, 0",
            "beq 0x2f770",
            "mov r0, r5",
            "mov r1, r4",
            "bl fcn.0002ed7c",
            "cmp r0, 0",
            "bne 0x2f770",
            "ldr r3, [sp, 0x4c]",
            "cmp r3, 0",
            "beq 0x2f770",
            "add sp, sp, 0x1ec",
            "pop {r4, r5, pc}",
            "mvn r0, 0",
            "bx lr"
        ]
    },
    "sym.zyNetCtrl_WPSApporve_checkMACisApprove": {
        "function_address": "0x00029a18",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r4, r0",
            "ldr r6, [0x00029e58]",
            "sub sp, sp, 0x18",
            "ldr r3, [0x00029e5c]",
            "mov r7, r1",
            "add r6, pc, r6",
            "ldr r8, [r6, r3]",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "bls 0x29a90",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0xbc",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00029e60]",
            "ldr r0, [0x00029e64]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xd0",
            "bl sym.imp.printf",
            "ldr r0, [0x00029e68]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00029e6c]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r8]",
            "cmp r4, 0",
            "bne 0x29af8",
            "cmp r3, 3",
            "bls 0x29af0",
            "mov r0, r4",
            "bl sym.imp.time",
            "mov r3, 0xc2",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00029e70]",
            "ldr r0, [0x00029e74]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xd0",
            "bl sym.imp.printf",
            "ldr r0, [0x00029e78]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00029e6c]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, 0x10",
            "b 0x29e50",
            "cmp r3, 3",
            "bls 0x29b74",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0xc6",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00029e7c]",
            "ldr r0, [0x00029e80]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xd0",
            "bl sym.imp.printf",
            "ldrb r0, [r4, 3]",
            "ldrb r3, [r4, 2]",
            "ldrb r1, [r4]",
            "ldrb r2, [r4, 1]",
            "str r0, [sp]",
            "ldrb r0, [r4, 4]",
            "str r0, [sp, 4]",
            "ldrb r0, [r4, 5]",
            "str r7, [sp, 0xc]",
            "str r0, [sp, 8]",
            "ldr r0, [0x00029e84]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00029e6c]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x00029e88]",
            "ldr sb, [r6, r3]",
            "ldr r5, [sb]",
            "cmp r5, 0",
            "bne 0x29bf0",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "bhi 0x29b9c",
            "mov r0, 0",
            "b 0x29e50",
            "mov r0, r5",
            "bl sym.imp.time",
            "mov r3, 0xcb",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00029e8c]",
            "ldr r0, [0x00029e90]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xd0",
            "bl sym.imp.printf",
            "ldr r0, [0x00029e94]",
            "ldr r1, [sb]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00029e6c]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0x29b94",
            "ldr r3, [0x00029e98]",
            "ldr r3, [r6, r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x29c14",
            "ldr r5, [r3, 4]",
            "cmp r5, 0",
            "ldrbne r3, [r4]",
            "bne 0x29c78",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "bls 0x29af0",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0xd1",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00029e9c]",
            "ldr r0, [0x00029ea0]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xd0",
            "bl sym.imp.printf",
            "ldr r0, [0x00029ea4]",
            "add r0, pc, r0",
            "b 0x29adc",
            "ldrb r1, [r4, 1]",
            "ldrb r2, [r5, 5]",
            "cmp r1, r2",
            "beq 0x29c88",
            "ldr r5, [r5]",
            "cmp r5, 0",
            "beq 0x29d64",
            "ldrb r2, [r5, 4]",
            "cmp r2, r3",
            "bne 0x29c6c",
            "b 0x29c5c",
            "ldrb r1, [r4, 2]",
            "ldrb r2, [r5, 6]",
            "cmp r1, r2",
            "bne 0x29c6c",
            "ldrb r1, [r4, 3]",
            "ldrb r2, [r5, 7]",
            "cmp r1, r2",
            "bne 0x29c6c",
            "ldrb r1, [r4, 4]",
            "ldrb r2, [r5, 8]",
            "cmp r1, r2",
            "bne 0x29c6c",
            "ldrb r1, [r4, 5]",
            "ldrb r2, [r5, 9]",
            "cmp r1, r2",
            "bne 0x29c6c",
            "ldr sb, [r5, 0xc]",
            "mov sl, r5",
            "ldrb r3, [r8]",
            "cmp sb, 1",
            "movne r5, 0",
            "movne sb, r5",
            "cmp r3, 3",
            "bls 0x29dd4",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0xea",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00029ea8]",
            "ldr r0, [0x00029eac]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xd0",
            "bl sym.imp.printf",
            "ldrb r0, [r4, 3]",
            "ldrb r3, [r4, 2]",
            "ldrb r1, [r4]",
            "ldrb r2, [r4, 1]",
            "str r0, [sp]",
            "ldrb r0, [r4, 4]",
            "str r0, [sp, 4]",
            "ldrb r0, [r4, 5]",
            "str r0, [sp, 8]",
            "ldr r0, [sl, 0xc]",
            "str r0, [sp, 0xc]",
            "ldr r0, [0x00029eb0]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00029e6c]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0x29dd4",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "bls 0x29af0",
            "mov r0, r5",
            "bl sym.imp.time",
            "mov r3, 0xf4",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00029eb4]",
            "ldr r0, [0x00029eb8]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xd0",
            "bl sym.imp.printf",
            "ldrb r0, [r4, 3]",
            "ldrb r1, [r4]",
            "ldrb r2, [r4, 1]",
            "ldrb r3, [r4, 2]",
            "str r0, [sp]",
            "ldrb r0, [r4, 4]",
            "str r0, [sp, 4]",
            "ldrb r0, [r4, 5]",
            "str r0, [sp, 8]",
            "ldr r0, [0x00029ebc]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "b 0x29ae0",
            "cmp sb, 1",
            "bne 0x29af0",
            "cmp r7, 0",
            "beq 0x29b94",
            "ldrb r3, [r7]",
            "cmp r3, 0",
            "beq 0x29e2c",
            "cmp r5, 0",
            "beq 0x29e2c",
            "mov r0, r7",
            "add r1, r5, 0x10",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x29e2c",
            "mov r3, r5",
            "mov r1, r7",
            "ldr r0, [r3, 4]!",
            "ldrh r3, [r3, 4]",
            "str r0, [sp, 0x10]",
            "add r0, sp, 0x10",
            "strh r3, [sp, 0x14]",
            "bl fcn.00008d58",
            "ldrb r4, [r7]",
            "cmp r4, 0",
            "bne 0x29b94",
            "cmp r5, 0",
            "beq 0x29b94",
            "mov r0, r7",
            "add r1, r5, 0x10",
            "bl sym.imp.strcpy",
            "b 0x29b94",
            "add sp, sp, 0x18",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "fcn.00008d58": {
        "function_address": "0x00008d58",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x644]!"
        ]
    },
    "sym.wps_validate_wsc_done": {
        "function_address": "0x000302a0",
        "instructions": [
            "cmp r0, 0",
            "beq 0x30338",
            "push {r4, r5, lr}",
            "sub sp, sp, 0x1ec",
            "mov r1, sp",
            "bl fcn.00008c8c",
            "cmp r0, 0",
            "bge 0x302c8",
            "mvn r0, 0",
            "b 0x30330",
            "ldr r5, [sp, 4]",
            "ldr r0, [sp]",
            "adds r4, r5, 0",
            "movne r4, 1",
            "bl fcn.0002f058",
            "cmp r0, 0",
            "bne 0x30300",
            "ldr r0, [sp, 8]",
            "bl fcn.0002efd8",
            "cmp r0, 0",
            "bne 0x30300",
            "ldr r3, [sp, 0xc]",
            "cmp r3, 0",
            "bne 0x30310",
            "cmp r4, 0",
            "bne 0x302c0",
            "mov r0, r4",
            "b 0x30330",
            "ldr r3, [sp, 0x10]",
            "cmp r3, 0",
            "beq 0x30300",
            "mov r0, r5",
            "mov r1, r4",
            "bl fcn.0002ed7c",
            "cmp r0, 0",
            "bne 0x30300",
            "add sp, sp, 0x1ec",
            "pop {r4, r5, pc}",
            "mvn r0, 0",
            "bx lr"
        ]
    },
    "sym.wps_build_registrar_nonce": {
        "function_address": "0x000336f4",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r4, r1",
            "mov r5, r0",
            "mov r0, r1",
            "movw r1, 0x1039",
            "bl fcn.000331d0",
            "mov r0, r4",
            "mov r1, 0x10",
            "bl fcn.000331d0",
            "mov r0, r4",
            "add r1, r5, 0x46",
            "mov r2, 0x10",
            "bl fcn.00033208",
            "mov r0, 0",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.FW_runCheckFW2": {
        "function_address": "0x00023f08",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "sub sp, sp, 0x15c",
            "ldr r6, [0x00024114]",
            "ldr r3, [0x00024118]",
            "add r6, pc, r6",
            "ldr r7, [r6, r3]",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x23f78",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x205",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002411c]",
            "ldr r0, [0x00024120]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x71",
            "bl sym.imp.printf",
            "ldr r0, [0x00024124]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00024128]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r4, 0",
            "mov r2, 0x7c",
            "str r4, [sp, 0x58]",
            "mov r1, r4",
            "add r0, sp, 0x5c",
            "add r5, sp, 0x58",
            "bl sym.imp.memset",
            "str r4, [sp, 8]",
            "mov r1, r4",
            "mov r2, 0xc",
            "add r0, sp, 0xc",
            "bl sym.imp.memset",
            "str r4, [sp, 0xd8]",
            "mov r1, r4",
            "mov r2, 0x7c",
            "add r0, sp, 0xdc",
            "bl sym.imp.memset",
            "str r4, [sp, 0x18]",
            "mov r2, 0x3c",
            "mov r1, r4",
            "add r0, sp, 0x1c",
            "bl sym.imp.memset",
            "ldr r1, [0x0002412c]",
            "mov r0, r5",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "mov r0, r5",
            "bl sym.imp.system",
            "ldr r1, [0x00024130]",
            "add r3, sp, 0xd8",
            "mov r0, r3",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "mov r3, r0",
            "add r2, sp, 0x18",
            "ldr r0, [0x00024134]",
            "mov r1, r3",
            "add r0, pc, r0",
            "bl fcn.00008788",
            "cmp r0, r4",
            "ldrb r3, [r7]",
            "beq 0x24088",
            "cmp r3, 3",
            "bls 0x24074",
            "mov r0, r4",
            "bl sym.imp.time",
            "movw r3, 0x213",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00024138]",
            "ldr r0, [0x0002413c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x71",
            "bl sym.imp.printf",
            "ldr r0, [0x00024140]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00024128]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r1, [0x00024144]",
            "mov r0, r5",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "b 0x24100",
            "cmp r3, 3",
            "bls 0x240d8",
            "bl sym.imp.time",
            "movw r3, 0x219",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00024148]",
            "ldr r0, [0x0002414c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x71",
            "bl sym.imp.printf",
            "ldr r0, [0x00024150]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00024128]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "add r4, sp, 8",
            "mov r0, r4",
            "bl loc.imp.getzy1905Version",
            "ldr r1, [0x00024154]",
            "mov r0, r5",
            "ldr r2, [0x00024158]",
            "mov r3, r4",
            "add r1, pc, r1",
            "add r2, pc, r2",
            "bl sym.imp.sprintf",
            "mov r0, r5",
            "bl sym.imp.system",
            "mov r0, 0",
            "add sp, sp, 0x15c",
            "pop {r4, r5, r6, r7, pc}"
        ]
    },
    "sym.setWiFiReloadFlag": {
        "function_address": "0x0000fc78",
        "instructions": [
            "push {r0, r1, r4, r5, r6, lr}",
            "mov r6, r0",
            "ldr r4, fcn.0003045c",
            "mov r5, r1",
            "ldr r3, [0x0000fd0c]",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0xfcf0",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0xc96",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000fd10]",
            "ldr r0, [0x0000fd14]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x380",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x0000fd18]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000fd1c]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, r6",
            "mov r1, r5",
            "bl fcn.00009604",
            "mov r0, 0",
            "add sp, sp, 8",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.00009604": {
        "function_address": "0x00009604",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x7c]!"
        ]
    },
    "sym.wps_device_data_free": {
        "function_address": "0x00031714",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r4, r0",
            "ldr r0, [r0, 8]",
            "mov r5, 0",
            "bl sym.imp.free",
            "ldr r0, [r4, 0xc]",
            "str r5, [r4, 8]",
            "bl sym.imp.free",
            "ldr r0, [r4, 0x10]",
            "str r5, [r4, 0xc]",
            "bl sym.imp.free",
            "ldr r0, [r4, 0x14]",
            "str r5, [r4, 0x10]",
            "bl sym.imp.free",
            "str r5, [r4, 0x14]",
            "ldr r0, [r4, 0x18]",
            "bl sym.imp.free",
            "str r5, [r4, 0x18]",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.notifyApAutoConfRenewMsgReceived": {
        "function_address": "0x0000e4bc",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r4, r0",
            "ldr r5, [0x0000eb50]",
            "sub sp, sp, 0x220",
            "ldr r3, [0x0000eb54]",
            "add r5, pc, r5",
            "ldr r6, [r5, r3]",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xe534",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x962",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000eb58]",
            "ldr r0, [0x0000eb5c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x2a8",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x0000eb60]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000eb64]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xe5b4",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x963",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000eb68]",
            "ldr r0, [0x0000eb6c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x2a8",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldrb r0, [r4, 3]",
            "ldrb r3, [r4, 2]",
            "str r0, [sp]",
            "ldrb r0, [r4, 4]",
            "ldrb r1, [r4]",
            "str r0, [sp, 4]",
            "ldrb r0, [r4, 5]",
            "ldrb r2, [r4, 1]",
            "str r0, [sp, 8]",
            "ldr r0, [0x0000eb70]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000eb64]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xe634",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x964",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000eb74]",
            "ldr r0, [0x0000eb78]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x2a8",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldrb r0, [r4, 9]",
            "ldrb r3, [r4, 8]",
            "str r0, [sp]",
            "ldrb r0, [r4, 0xa]",
            "ldrb r1, [r4, 6]",
            "str r0, [sp, 4]",
            "ldrb r0, [r4, 0xb]",
            "ldrb r2, [r4, 7]",
            "str r0, [sp, 8]",
            "ldr r0, [0x0000eb7c]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000eb64]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xe694",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x965",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000eb80]",
            "ldr r0, [0x0000eb84]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x2a8",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x0000eb88]",
            "ldrb r1, [r4, 0xc]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000eb64]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xe6f4",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x967",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000eb8c]",
            "ldr r0, [0x0000eb90]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x2a8",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x0000eb94]",
            "ldrb r1, [r4, 0xd]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000eb64]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x0000eb98]",
            "mov r0, 2",
            "ldr r3, [r5, r3]",
            "ldr r1, [r3]",
            "bl fcn.00008980",
            "cmp r0, 0",
            "bne 0xea04",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xe768",
            "bl sym.imp.time",
            "movw r3, 0x97d",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000eb9c]",
            "ldr r0, [0x0000eba0]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x2a8",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x0000eba4]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000eb64]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xe7e8",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0x980",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000eba8]",
            "ldr r0, [0x0000ebac]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x2a8",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldrb r0, [r4, 3]",
            "ldrb r3, [r4, 2]",
            "str r0, [sp]",
            "ldrb r0, [r4, 4]",
            "ldrb r1, [r4]",
            "str r0, [sp, 4]",
            "ldrb r0, [r4, 5]",
            "ldrb r2, [r4, 1]",
            "str r0, [sp, 8]",
            "ldr r0, [0x0000ebb0]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000eb64]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xe868",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x983",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000ebb4]",
            "ldr r0, [0x0000ebb8]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x2a8",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldrb r0, [r4, 9]",
            "ldrb r3, [r4, 8]",
            "str r0, [sp]",
            "ldrb r0, [r4, 0xa]",
            "ldrb r1, [r4, 6]",
            "str r0, [sp, 4]",
            "ldrb r0, [r4, 0xb]",
            "ldrb r2, [r4, 7]",
            "str r0, [sp, 8]",
            "ldr r0, [0x0000ebbc]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000eb64]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xe8c8",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x984",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000ebc0]",
            "ldr r0, [0x0000ebc4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x2a8",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x0000ebc8]",
            "ldrb r1, [r4, 0xc]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000eb64]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xe928",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x985",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000ebcc]",
            "ldr r0, [0x0000ebd0]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x2a8",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x0000ebd4]",
            "ldrb r1, [r4, 0xd]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000eb64]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x0000ebd8]",
            "ldr r3, [r5, r3]",
            "ldr r3, [r3]",
            "cmp r3, 1",
            "beq 0xe98c",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xea04",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x991",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000ebdc]",
            "ldr r0, [0x0000ebe0]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x2a8",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x0000ebe4]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "b 0xe9f4",
            "ldr r3, [0x0000ebe8]",
            "ldr r7, [r5, r3]",
            "ldrb r3, [r7]",
            "sub r3, r3, 3",
            "cmp r3, 2",
            "bhi 0xea0c",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xea04",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x997",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000ebec]",
            "ldr r0, [0x0000ebf0]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x2a8",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x0000ebf4]",
            "ldrb r1, [r7]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000eb64]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r7, 0x10",
            "b 0xeb44",
            "ldrb r0, [r4, 0xd]",
            "add r1, sp, 0x10",
            "bl fcn.00009418",
            "subs r7, r0, 0",
            "bne 0xea04",
            "ldr sb, [sp, 0x21c]",
            "cmp sb, 1",
            "bne 0xea04",
            "ldrb r0, [r4, 0xd]",
            "mov r1, sb",
            "mvn r2, 0",
            "bl fcn.000095f8",
            "mov r0, 6",
            "mov r1, sb",
            "bl sym.imp.calloc",
            "subs r8, r0, 0",
            "beq 0xea04",
            "mov r1, sb",
            "mov r0, 6",
            "bl sym.imp.calloc",
            "subs sb, r0, 0",
            "moveq r0, r8",
            "beq 0xeb2c",
            "mov r3, r7",
            "mov r2, r4",
            "ldrb r1, [r2, r3]!",
            "strb r1, [r8, r3]",
            "ldrb r2, [r2, 6]",
            "strb r2, [sb, r3]",
            "add r3, r3, 1",
            "cmp r3, 6",
            "bne 0xea6c",
            "ldrb r2, [r4, 0xd]",
            "mov r0, r8",
            "mov r1, sb",
            "bl fcn.00009208",
            "mov sl, r0",
            "mov r0, r8",
            "cmp sl, 0x10",
            "beq 0xeb24",
            "ldrb r2, [r4, 0xd]",
            "mov r1, sb",
            "mov r3, 4",
            "bl fcn.0000901c",
            "cmp r0, 0x10",
            "bne 0xeb34",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xeb20",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0xa11",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000ebf8]",
            "ldr r0, [0x0000ebfc]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x2a8",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x0000ec00]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000eb64]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, r8",
            "bl fcn.00008cec",
            "mov r0, sb",
            "bl fcn.00008cec",
            "b 0xea04",
            "mov r0, r8",
            "bl fcn.00008cec",
            "mov r0, sb",
            "bl fcn.00008cec",
            "mov r0, r7",
            "add sp, sp, 0x220",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "fcn.0000901c": {
        "function_address": "0x0000901c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x46c]!"
        ]
    },
    "sym.wps_validate_m8_encr": {
        "function_address": "0x0002ff9c",
        "instructions": [
            "cmp r0, 0",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x3ec",
            "bne 0x2ffb4",
            "mvn r5, 0",
            "b 0x30148",
            "mov r4, r1",
            "add r1, sp, 0x18",
            "mov r8, r2",
            "bl fcn.00008c8c",
            "cmp r0, 0",
            "blt 0x2ffac",
            "ldr r0, [sp, 0xfc]",
            "mov r2, r4",
            "ldr r1, [sp, 0x100]",
            "bl fcn.0002ef38",
            "cmp r0, 0",
            "bne 0x30130",
            "ldr r0, [sp, 0x8c]",
            "mov r1, r4",
            "bl fcn.0002f078",
            "cmp r0, 0",
            "bne 0x30130",
            "ldr r0, [sp, 0x90]",
            "mov r1, r4",
            "bl fcn.0002eed8",
            "cmp r0, 0",
            "bne 0x30130",
            "ldr r0, [sp, 0x9c]",
            "mov r1, r4",
            "bl fcn.0002eeb8",
            "subs r5, r0, 0",
            "bne 0x30130",
            "ldr r7, [sp, 0x174]",
            "cmp r7, 0",
            "beq 0x30044",
            "add r6, sp, 0x120",
            "mov r4, r5",
            "mov sb, 1",
            "add sl, sp, 8",
            "add fp, sp, 0x200",
            "b 0x30110",
            "cmp r4, 0",
            "bne 0x3013c",
            "b 0x30130",
            "str r2, [sp, 0x10]",
            "mov r0, sl",
            "str sb, [sp, 0x14]",
            "mov r1, fp",
            "str r3, [sp, 0xc]",
            "str r3, [sp, 8]",
            "bl fcn.00008c8c",
            "cmp r0, 0",
            "blt 0x30130",
            "ldr r3, [sp, 0x27c]",
            "cmp r3, 0",
            "beq 0x30130",
            "ldr r0, [sp, 0x2e4]",
            "mov r2, 1",
            "ldr r1, [sp, 0x2e8]",
            "bl fcn.0002ef38",
            "cmp r0, 0",
            "bne 0x30130",
            "ldr r0, [sp, 0x274]",
            "mov r1, 1",
            "bl fcn.0002f078",
            "cmp r0, 0",
            "bne 0x30130",
            "ldr r2, [sp, 0x278]",
            "mov r1, 1",
            "str r2, [sp, 4]",
            "mov r0, r2",
            "bl fcn.0002eed8",
            "ldr r2, [sp, 4]",
            "cmp r0, 0",
            "bne 0x30130",
            "ldr r0, [sp, 0x2ec]",
            "mov r3, 1",
            "ldr r1, [sp, 0x2f0]",
            "bl fcn.0002ef74",
            "cmp r0, 0",
            "bne 0x30130",
            "ldr r0, [sp, 0x284]",
            "mov r1, 1",
            "bl fcn.0002eeb8",
            "cmp r0, 0",
            "bne 0x30130",
            "ldr r3, [sp, 0x29c]",
            "cmp r3, 0",
            "bne 0x30124",
            "add r4, r4, 1",
            "cmp r4, r7",
            "beq 0x3013c",
            "ldr r2, [r6, 4]!",
            "ldr r3, [r6, 0x28]",
            "cmp r2, 0",
            "bne 0x30050",
            "b 0x30130",
            "ldrb r3, [r3]",
            "cmp r3, 1",
            "bls 0x30104",
            "adds r5, r8, 0",
            "mvnne r5, 0",
            "b 0x30148",
            "ldr r3, [sp, 0x88]",
            "cmp r3, 0",
            "beq 0x30130",
            "mov r0, r5",
            "add sp, sp, 0x3ec",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.outputWIFIChannelResultByBand": {
        "function_address": "0x00016e3c",
        "instructions": [
            "push {r4, r5, lr}",
            "sub sp, sp, 0x204",
            "mov r1, 0",
            "mov r5, r0",
            "str r1, [sp]",
            "mov r2, 0x1fc",
            "add r0, sp, 4",
            "bl sym.imp.memset",
            "ldr r1, [0x00016ee8]",
            "mov r0, r5",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "ldreq r1, sym.FW_runCheckFW2",
            "moveq r0, sp",
            "addeq r1, pc, r1",
            "beq 0x16ec8",
            "ldr r1, [0x00016ef0]",
            "mov r0, r5",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "ldreq r1, [0x00016ef4]",
            "moveq r0, sp",
            "addeq r1, pc, r1",
            "beq 0x16ec8",
            "ldr r1, [0x00016ef8]",
            "mov r0, r5",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x16ecc",
            "ldr r1, [0x00016efc]",
            "mov r0, sp",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "ldr r0, [0x00016f00]",
            "add r0, pc, r0",
            "bl sym.imp.system",
            "mov r0, sp",
            "bl sym.imp.system",
            "add sp, sp, 0x204",
            "pop {r4, r5, pc}"
        ]
    },
    "sym.zyNetCtrl_addWIFIChannelSyncList": {
        "function_address": "0x000171c8",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x34",
            "cmp r3, 0",
            "cmpne r0, 0",
            "mov r4, r0",
            "ldr r5, [0x00017390]",
            "mov r7, r3",
            "str r1, [sp, 0x18]",
            "moveq r8, 1",
            "add r5, pc, r5",
            "movne r8, 0",
            "str r2, [sp, 0x1c]",
            "beq 0x172a8",
            "str r8, [sp, 0x20]",
            "mov r1, r8",
            "mov r2, 0xc",
            "add r0, sp, 0x24",
            "bl sym.imp.memset",
            "mov r0, r4",
            "add r1, sp, 0x20",
            "bl fcn.00008e90",
            "subs r6, r0, 0",
            "beq 0x172b0",
            "ldr r3, [0x00017394]",
            "ldr r3, [r5, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x172a8",
            "mov r0, r8",
            "bl sym.imp.time",
            "movw r3, 0xb89",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00017398]",
            "ldr r0, [0x0001739c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xe5",
            "bl sym.imp.printf",
            "ldrb r0, [r4, 3]",
            "ldrb r3, [r4, 2]",
            "ldrb r1, [r4]",
            "ldrb r2, [r4, 1]",
            "str r0, [sp]",
            "ldrb r0, [r4, 4]",
            "str r0, [sp, 4]",
            "ldrb r0, [r4, 5]",
            "str r0, [sp, 8]",
            "ldr r0, [0x000173a0]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x000173a4]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r6, 0x10",
            "b 0x17384",
            "ldr r3, [0x000173a8]",
            "ldr r8, [r5, r3]",
            "ldr fp, [r8]",
            "bl sym.imp.time",
            "mov sb, r0",
            "cmp fp, 0",
            "beq 0x172fc",
            "mov r0, r4",
            "add r1, fp, 4",
            "mov r2, 6",
            "bl sym.imp.memcmp",
            "cmp r0, 0",
            "ldreq r2, [fp, 0x118]",
            "streq sb, [fp, 0x114]",
            "addeq r2, r2, 1",
            "streq r2, [fp, 0x118]",
            "beq 0x17370",
            "ldr fp, [fp]",
            "b 0x172c4",
            "ldr sl, [r8]",
            "mov r0, 1",
            "mov r1, 0x11c",
            "bl sym.imp.calloc",
            "subs r2, r0, 0",
            "beq 0x172a8",
            "ldr r0, [r4]",
            "str r0, [r2, 4]",
            "add r0, r2, 0x14",
            "ldrh r1, [r4, 4]",
            "strh r1, [r2, 8]",
            "mov r1, r7",
            "str r2, [sp, 0x14]",
            "bl sym.imp.strcpy",
            "ldr r2, [sp, 0x14]",
            "cmp sl, 0",
            "ldr r3, [sp, 0x18]",
            "str fp, [r2, 0x118]",
            "str r3, [r2, 0xc]",
            "ldr r3, [sp, 0x1c]",
            "str sb, [r2, 0x114]",
            "str r3, [r2, 0x10]",
            "streq r2, [r8]",
            "beq 0x17370",
            "ldr r3, [sl]",
            "cmp r3, 0",
            "movne sl, r3",
            "bne 0x1735c",
            "str r2, [sl]",
            "ldr r3, [0x000173ac]",
            "ldr r3, [r5, r3]",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "mov r0, r6",
            "add sp, sp, 0x34",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.zyNetCtrl_WPS_processWPSData_REGISTER": {
        "function_address": "0x0001f92c",
        "instructions": [
            "sub sp, sp, 0x10",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x24",
            "ldr r4, [0x0001fcfc]",
            "add r6, sp, 0x48",
            "ldr r8, [sp, 0x230]",
            "stm r6, {r0, r1, r2, r3}",
            "ldr r3, [sp, 0x50]",
            "add r4, pc, r4",
            "ldrb r3, [r3]",
            "ldrb fp, [sp, 0x238]",
            "ldr r7, [sp, 0x23c]",
            "cmp r3, 4",
            "ldr r3, [0x0001fd00]",
            "ldr sb, [sp, 0x240]",
            "ldrb sl, [sp, 0x244]",
            "ldr r5, [r4, r3]",
            "beq 0x1f9f8",
            "ldr r1, [sp, 0x58]",
            "cmp r1, 0",
            "beq 0x1f994",
            "add r0, r8, 0x46",
            "mov r2, 0x10",
            "bl sym.imp.memcmp",
            "cmp r0, 0",
            "beq 0x1f9f8",
            "ldrb r3, [r5]",
            "cmp r3, 3",
            "bls 0x1f9f0",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x4f8",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001fd04]",
            "ldr r0, [0x0001fd08]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x248",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x0001fd0c]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0001fd10]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, 0x10",
            "b 0x1fcec",
            "mov r3, 0",
            "mov r2, 0xc",
            "str r3, [sp, 0x10]",
            "mov r1, r3",
            "str r3, [sp, 0xc]",
            "add r0, sp, 0x14",
            "bl sym.imp.memset",
            "mov r0, r7",
            "add r1, sp, 0x10",
            "bl fcn.00009070",
            "ldr r3, [sp, 0xc]",
            "cmp r0, 0",
            "beq 0x1fa78",
            "ldrb r2, [r5]",
            "cmp r2, 3",
            "bls 0x1f9f0",
            "mov r0, r3",
            "bl sym.imp.time",
            "movw r3, 0x502",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001fd14]",
            "ldr r0, [0x0001fd18]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x248",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x0001fd1c]",
            "add r0, pc, r0",
            "b 0x1f9dc",
            "ldrb r3, [r5]",
            "cmp fp, 4",
            "bne 0x1fca8",
            "cmp r3, 3",
            "bls 0x1fad8",
            "bl sym.imp.time",
            "movw r3, 0x50c",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, fp",
            "ldr r3, [0x0001fd20]",
            "ldr r0, [0x0001fd24]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x248",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x0001fd28]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0001fd10]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r0, [sp, 0x234]",
            "bl fcn.000091cc",
            "cmp r0, 0",
            "bge 0x1fb58",
            "ldrb r3, [r5]",
            "cmp r3, 3",
            "bls 0x1fb44",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0x510",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001fd2c]",
            "ldr r0, [0x0001fd30]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x248",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x0001fd34]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0001fd10]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, r7",
            "mov r1, sb",
            "mov r2, sl",
            "bl fcn.000091b4",
            "b 0x1f9f0",
            "mov r0, r8",
            "mov r1, r6",
            "bl fcn.000088fc",
            "cmp r0, 0x10",
            "bne 0x1fbb8",
            "ldrb r3, [r5]",
            "cmp r3, 3",
            "bls 0x1fb44",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x519",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001fd38]",
            "ldr r0, [0x0001fd3c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x248",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, sym.reloadwifi_Main_24G",
            "add r0, pc, r0",
            "b 0x1fb30",
            "ldr r0, [r8, 0x134]",
            "bl fcn.00008f74",
            "ldr r0, [sp, 0x234]",
            "bl fcn.0000952c",
            "ldrb r3, [r5]",
            "str r0, [r8, 0x134]",
            "cmp r3, 3",
            "bls 0x1fc28",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x521",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001fd44]",
            "ldr r0, [0x0001fd48]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x248",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x0001fd4c]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0001fd10]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, r7",
            "mov r1, sb",
            "mov r2, sl",
            "mov r3, 5",
            "bl fcn.0000901c",
            "cmp r0, 0x10",
            "bne 0x1fc90",
            "ldrb r3, [r5]",
            "cmp r3, 3",
            "bls 0x1fb44",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x527",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001fd50]",
            "ldr r0, [0x0001fd54]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x248",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x0001fd58]",
            "add r0, pc, r0",
            "b 0x1fb30",
            "mov r0, r7",
            "mov r1, sb",
            "mov r2, sl",
            "bl fcn.000085cc",
            "mov r0, 0",
            "b 0x1fcec",
            "cmp r3, 3",
            "bls 0x1fb44",
            "bl sym.imp.time",
            "movw r3, 0x531",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001fd5c]",
            "ldr r0, [0x0001fd60]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x248",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x0001fd64]",
            "add r0, pc, r0",
            "b 0x1fb30",
            "add sp, sp, 0x24",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "add sp, sp, 0x10",
            "bx lr"
        ]
    },
    "fcn.00009070": {
        "function_address": "0x00009070",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x434]!"
        ]
    },
    "fcn.000085cc": {
        "function_address": "0x000085cc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0xb4c]!"
        ]
    },
    "sym.wps_validate_beacon": {
        "function_address": "0x0002f0d8",
        "instructions": [
            "cmp r0, 0",
            "beq 0x2f1d8",
            "push {r4, r5, r6, r7, lr}",
            "sub sp, sp, 0x1ec",
            "mov r1, sp",
            "bl fcn.00008c8c",
            "cmp r0, 0",
            "bge 0x2f100",
            "mvn r1, 0",
            "b 0x2f1cc",
            "ldr r6, [sp, 4]",
            "ldr r4, [sp, 0x88]",
            "adds r7, r6, 0",
            "movne r7, 1",
            "cmp r4, 0",
            "moveq r5, r4",
            "beq 0x2f128",
            "ldrb r5, [r4]",
            "adds r5, r5, 0",
            "movne r5, 1",
            "ldr r0, [sp]",
            "bl fcn.0002f058",
            "cmp r0, 0",
            "bne 0x2f0f8",
            "ldr r3, [sp, 0x94]",
            "cmp r3, 0",
            "beq 0x2f150",
            "ldrb r3, [r3]",
            "cmp r3, 1",
            "bhi 0x2f0f8",
            "cmp r4, 0",
            "beq 0x2f164",
            "ldrb r3, [r4]",
            "cmp r3, 1",
            "bhi 0x2f0f8",
            "ldr r0, [sp, 0x40]",
            "mov r1, r5",
            "bl fcn.0002ee4c",
            "cmp r0, 0",
            "bne 0x2f0f8",
            "ldr r0, [sp, 0x2c]",
            "mov r1, r7",
            "mov r2, r5",
            "bl fcn.0002ee80",
            "cmp r0, 0",
            "bne 0x2f0f8",
            "mov r1, r7",
            "mov r0, r6",
            "bl fcn.0002ed7c",
            "subs r1, r0, 0",
            "bne 0x2f0f8",
            "ldr r3, [sp, 0xf4]",
            "ldr r0, [sp, 0xf8]",
            "cmp r3, 0",
            "beq 0x2f1cc",
            "cmp r0, 0x1e",
            "bls 0x2f1cc",
            "mov r1, 6",
            "bl sym.imp.__aeabi_uidivmod",
            "adds r1, r1, 0",
            "mvnne r1, 0",
            "mov r0, r1",
            "add sp, sp, 0x1ec",
            "pop {r4, r5, r6, r7, pc}",
            "mvn r1, 0",
            "mov r0, r1",
            "bx lr"
        ]
    },
    "sym.zyNetCtrl_WPS_processWPSData_ENROLLEE": {
        "function_address": "0x00022c24",
        "instructions": [
            "sub sp, sp, 0x10",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x254",
            "ldr r4, [0x00023240]",
            "add r8, sp, 0x278",
            "ldr r7, [sp, 0x460]",
            "stm r8, {r0, r1, r2, r3}",
            "ldr r1, [sp, 0x284]",
            "add r4, pc, r4",
            "ldr r3, [0x00023244]",
            "cmp r1, 0",
            "ldr r6, [sp, 0x46c]",
            "ldr sl, [sp, 0x470]",
            "ldrb r5, [sp, 0x474]",
            "ldr fp, [r4, r3]",
            "beq 0x22c78",
            "add r0, r7, 0x36",
            "mov r2, 0x10",
            "bl sym.imp.memcmp",
            "subs sb, r0, 0",
            "beq 0x22cd8",
            "ldrb r3, [fp]",
            "cmp r3, 3",
            "bls 0x23034",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x6ba",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00023248]",
            "ldr r0, [0x0002324c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x430",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x00023250]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00023254]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0x23034",
            "ldrb r3, [sp, 0x468]",
            "cmp r3, 5",
            "ldrb r3, [fp]",
            "bne 0x22ff0",
            "cmp r3, 3",
            "bls 0x22d3c",
            "bl sym.imp.time",
            "movw r3, 0x6c2",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00023258]",
            "ldr r0, [0x0002325c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x430",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x00023260]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00023254]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r0, [sp, 0x464]",
            "bl fcn.00009064",
            "cmp r0, 0",
            "bge 0x22dbc",
            "ldrb r3, [fp]",
            "cmp r3, 3",
            "bls 0x22da8",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x6c6",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00023264]",
            "ldr r0, [0x00023268]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x430",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x0002326c]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00023254]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, r6",
            "mov r1, sl",
            "mov r2, r5",
            "bl fcn.000091b4",
            "b 0x23034",
            "ldr r1, [sp, 0x464]",
            "mov r0, r7",
            "mov r2, r8",
            "bl fcn.000093ac",
            "ldr r3, [r7, 0xc]",
            "cmp r3, 9",
            "ldrb r3, [fp]",
            "beq 0x22e24",
            "cmp r3, 3",
            "bls 0x22da8",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x6ce",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00023270]",
            "ldr r0, [0x00023274]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x430",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x00023278]",
            "add r0, pc, r0",
            "b 0x22d94",
            "cmp r3, 3",
            "bls 0x22e7c",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x6d8",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002327c]",
            "ldr r0, [0x00023280]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x430",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x00023284]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00023254]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [r7]",
            "ldrh r1, [r3, 0xe0]",
            "cmp r1, 1",
            "bne 0x22eec",
            "ldrh r2, [r3, 0xde]",
            "cmp r2, 1",
            "bne 0x22f6c",
            "ldr r0, [r3, 0x44]",
            "cmp r0, 0",
            "bne 0x22fc8",
            "ldrb r3, [fp]",
            "cmp r3, 3",
            "bls 0x22da8",
            "bl sym.imp.time",
            "movw r3, 0x6de",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00023288]",
            "ldr r0, [0x0002328c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x430",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x00023290]",
            "add r0, pc, r0",
            "b 0x22d94",
            "cmp r1, 0x20",
            "bne 0x22f6c",
            "ldrh r2, [r3, 0xde]",
            "bic r0, r2, 8",
            "cmp r2, 8",
            "cmpne r0, 4",
            "bne 0x22f6c",
            "ldr r2, [r3, 0x44]",
            "cmp r2, 0",
            "beq 0x22f20",
            "ldr r2, [r3, 0xec]",
            "cmp r2, 0",
            "bne 0x22fc8",
            "ldrb r3, [fp]",
            "cmp r3, 3",
            "bls 0x22da8",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x6f8",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00023294]",
            "ldr r0, [0x00023298]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x430",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x0002329c]",
            "add r0, pc, r0",
            "b 0x22d94",
            "ldrb r3, [fp]",
            "cmp r3, 3",
            "bls 0x22da8",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x6ff",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000232a0]",
            "ldr r0, [0x000232a4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x430",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r3, [r7]",
            "ldr r0, [0x000232a8]",
            "ldrh r1, [r3, 0xe0]",
            "ldrh r2, [r3, 0xde]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "b 0x22d98",
            "ldr r2, [0x000232ac]",
            "ldr r2, [r4, r2]",
            "ldr r0, [r2]",
            "cmp r0, 0",
            "beq 0x231dc",
            "ldrb r2, [r0, 4]",
            "cmp r2, r5",
            "beq 0x2303c",
            "ldr r0, [r0]",
            "b 0x22fd4",
            "cmp r3, 3",
            "bls 0x22da8",
            "bl sym.imp.time",
            "movw r3, 0x7cd",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000232b0]",
            "ldr r0, [0x000232b4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x430",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x000232b8]",
            "add r0, pc, r0",
            "b 0x22d94",
            "mov sb, 0x10",
            "b 0x2322c",
            "add r2, r3, 0x20",
            "mov r0, r5",
            "ldr r3, [r3, 0xe8]",
            "mov r8, 0",
            "bl fcn.00008a10",
            "str r8, [sp, 0x30]",
            "mov r2, 0x1c",
            "mov r1, r8",
            "mov fp, r0",
            "add r0, sp, 0x34",
            "bl sym.imp.memset",
            "add ip, sp, 0x30",
            "mov r0, r5",
            "str ip, [sp, 0x2c]",
            "mov r1, ip",
            "bl fcn.00008ec0",
            "str r8, [sp, 0x50]",
            "mov r1, r8",
            "mov r2, 0x1fc",
            "add r0, sp, 0x54",
            "bl sym.imp.memset",
            "ldrb r2, [r6]",
            "ldr r3, [r7]",
            "add r7, sp, 0x50",
            "str r2, [sp]",
            "mov r0, r7",
            "ldrb r2, [r6, 1]",
            "ldr ip, [sp, 0x2c]",
            "str r2, [sp, 4]",
            "ldrb r2, [r6, 2]",
            "ldr r1, [0x000232bc]",
            "str r2, [sp, 8]",
            "ldrb r2, [r6, 3]",
            "add r1, pc, r1",
            "str r2, [sp, 0xc]",
            "ldrb r2, [r6, 4]",
            "str r2, [sp, 0x10]",
            "ldrb r2, [r6, 5]",
            "str r2, [sp, 0x14]",
            "ldrh r2, [r3, 0xe0]",
            "str r2, [sp, 0x18]",
            "add r2, r3, 0x20",
            "str r2, [sp, 0x1c]",
            "mov r2, ip",
            "ldr r3, [r3, 0xe8]",
            "str r3, [sp, 0x20]",
            "mov r3, r5",
            "bl sym.imp.sprintf",
            "mov r0, r7",
            "bl loc.imp.Outputlog",
            "mvn r2, 0",
            "mov r1, 2",
            "mov r0, r5",
            "bl fcn.000095f8",
            "ldr r1, [sp, 0x478]",
            "mov r0, r5",
            "bl loc.imp.setAPautoconfigupdatetime",
            "mov r1, r5",
            "mov r0, r6",
            "bl loc.imp.sendAPautoconfigack",
            "mov r1, r5",
            "mov r2, 1",
            "mov r0, r6",
            "bl fcn.000095bc",
            "ldr r0, [0x000232c0]",
            "ldr r1, [0x000232c4]",
            "add r0, pc, r0",
            "add r1, pc, r1",
            "bl sym.imp.fopen",
            "cmp r0, r8",
            "beq 0x23160",
            "bl sym.imp.fclose",
            "b 0x2316c",
            "ldr r0, [0x000232c8]",
            "add r0, pc, r0",
            "bl sym.imp.system",
            "ldr r3, [0x000232cc]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "cmp r3, 1",
            "bne 0x23190",
            "cmp fp, 0",
            "bne 0x23190",
            "mov r0, r5",
            "bl fcn.00009364",
            "mov r1, sl",
            "mov r2, r5",
            "mov r0, r6",
            "bl fcn.000085cc",
            "mov r1, sl",
            "mov r2, r5",
            "mov r0, r6",
            "bl fcn.000091b4",
            "ldr r3, [0x000232d0]",
            "ldr r1, [r4, r3]",
            "ldr r3, [0x000232d4]",
            "ldr r0, [r1]",
            "ldr r2, [r4, r3]",
            "ldr r3, [0x000232d8]",
            "ldr r1, [r2]",
            "ldr r3, [r4, r3]",
            "ldr r2, [r3]",
            "bl fcn.00008bf0",
            "b 0x2322c",
            "ldrb r3, [fp]",
            "cmp r3, 3",
            "bls 0x22da8",
            "bl sym.imp.time",
            "movw r3, 0x787",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000232dc]",
            "ldr r0, [0x000232e0]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x430",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x000232e4]",
            "mov r1, r5",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "b 0x22d98",
            "mov r0, sb",
            "add sp, sp, 0x254",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "add sp, sp, 0x10",
            "bx lr"
        ]
    },
    "fcn.00009064": {
        "function_address": "0x00009064",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x43c]!"
        ]
    },
    "fcn.000093ac": {
        "function_address": "0x000093ac",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x20c]!"
        ]
    },
    "fcn.00008a10": {
        "function_address": "0x00008a10",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x874]!"
        ]
    },
    "sym.wps_validate_m6_encr": {
        "function_address": "0x0002fce4",
        "instructions": [
            "cmp r0, 0",
            "beq 0x2fd40",
            "push {r4, lr}",
            "sub sp, sp, 0x1e8",
            "mov r4, r1",
            "mov r1, sp",
            "bl fcn.00008c8c",
            "cmp r0, 0",
            "bge 0x2fd10",
            "mvn r0, 0",
            "b 0x2fd38",
            "ldr r3, [sp, 0x64]",
            "cmp r3, 0",
            "bne 0x2fd28",
            "cmp r4, 0",
            "beq 0x2fd34",
            "b 0x2fd08",
            "ldr r3, [sp, 0x70]",
            "cmp r3, 0",
            "beq 0x2fd1c",
            "mov r0, 0",
            "add sp, sp, 0x1e8",
            "pop {r4, pc}",
            "mvn r0, 0",
            "bx lr"
        ]
    },
    "sym.getWPSSyncListByMac": {
        "function_address": "0x0000f15c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0xb24]!",
            "push {r4, r5, lr}",
            "subs r4, r0, 0",
            "ldr r5, [0x0000f214]",
            "sub sp, sp, 0x14",
            "add r5, pc, r5",
            "beq 0xf208",
            "ldr r3, [0x0000f218]",
            "ldr r3, [r5, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0xf1f8",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0xa6c",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000f21c]",
            "ldr r0, [0x0000f220]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x2fc",
            "bl sym.imp.printf",
            "ldrb r0, [r4, 3]",
            "ldrb r3, [r4, 2]",
            "ldrb r1, [r4]",
            "ldrb r2, [r4, 1]",
            "str r0, [sp]",
            "ldrb r0, [r4, 4]",
            "str r0, [sp, 4]",
            "ldrb r0, [r4, 5]",
            "str r0, [sp, 8]",
            "ldr r0, [0x0000f224]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000f228]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, r4",
            "add sp, sp, 0x14",
            "pop {r4, r5, lr}",
            "b 0x8608",
            "mov r0, 0x10",
            "add sp, sp, 0x14",
            "pop {r4, r5, pc}"
        ]
    },
    "sym.zyNetCtrl_FWCtrl_DownloadNewFW_FWUpgrade": {
        "function_address": "0x000284fc",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r7, r0",
            "ldr r4, [0x00028874]",
            "sub sp, sp, 0x34",
            "ldr r3, [0x00028878]",
            "mov sl, r1",
            "add r4, pc, r4",
            "mov sb, r2",
            "ldr r6, [r4, r3]",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x28578",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x133",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002887c]",
            "ldr r0, [0x00028880]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x24c",
            "bl sym.imp.printf",
            "ldr r0, [0x00028884]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00028888]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "bl fcn.000087ac",
            "subs r5, r0, 0",
            "beq 0x285e4",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x285dc",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0x138",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002888c]",
            "ldr r0, [0x00028890]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x24c",
            "bl sym.imp.printf",
            "ldr r0, [0x00028894]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00028888]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r5, 0x10",
            "b 0x28868",
            "str r5, [sp, 0x10]",
            "mov r1, r5",
            "ldr r8, [0x00028898]",
            "mov r2, 0x1c",
            "add r0, sp, 0x14",
            "add r8, pc, r8",
            "bl sym.imp.memset",
            "ldr r0, [0x0002889c]",
            "add r0, pc, r0",
            "bl sym.imp.system",
            "ldr r1, [0x000288a0]",
            "mov r0, r8",
            "add r1, pc, r1",
            "bl sym.imp.fopen",
            "subs r3, r0, 0",
            "bne 0x28668",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x285dc",
            "bl sym.imp.time",
            "movw r3, 0x142",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000288a4]",
            "ldr r0, [0x000288a8]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x24c",
            "bl sym.imp.printf",
            "ldr r0, [0x000288ac]",
            "add r0, pc, r0",
            "b 0x285c8",
            "str r3, [sp, 0xc]",
            "add fp, sp, 0x10",
            "mov r2, r3",
            "mov r1, 0x20",
            "mov r0, fp",
            "bl sym.imp.fgets",
            "ldr r3, [sp, 0xc]",
            "mov r0, r3",
            "bl sym.imp.fclose",
            "mov r0, r8",
            "bl sym.imp.remove",
            "ldr r1, [0x000288b0]",
            "mov r0, fp",
            "mov r2, 5",
            "add r1, pc, r1",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "beq 0x286f8",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x285dc",
            "mov r0, r5",
            "bl sym.imp.time",
            "mov r3, 0x14c",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000288b4]",
            "ldr r0, [0x000288b8]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x24c",
            "bl sym.imp.printf",
            "ldr r0, [0x000288bc]",
            "add r0, pc, r0",
            "b 0x285c8",
            "ldr r3, [0x000288c0]",
            "ldr r8, [r4, r3]",
            "ldr r3, [r8]",
            "mov fp, r8",
            "cmp r3, 2",
            "bne 0x28768",
            "bl fcn.0000898c",
            "ldr r3, [r8]",
            "cmp r3, 2",
            "bne 0x28768",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x285dc",
            "mov r0, r5",
            "bl sym.imp.time",
            "movw r3, 0x156",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000288c4]",
            "ldr r0, [0x000288c8]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x24c",
            "bl sym.imp.printf",
            "ldr r0, [0x000288cc]",
            "add r0, pc, r0",
            "b 0x285c8",
            "ldr r3, [0x000288d0]",
            "mov r0, 0",
            "str r0, [fp]",
            "ldr r3, [r4, r3]",
            "ldr r8, [r3]",
            "cmp r8, 4",
            "bne 0x287c8",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x285dc",
            "bl sym.imp.time",
            "movw r3, 0x15e",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, r8",
            "ldr r3, [0x000288d4]",
            "ldr r0, [0x000288d8]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x24c",
            "bl sym.imp.printf",
            "ldr r0, [0x000288dc]",
            "add r0, pc, r0",
            "b 0x285c8",
            "cmp sb, 0",
            "beq 0x287e0",
            "ldr r3, [0x000288e0]",
            "mov r1, sb",
            "ldr r0, [r4, r3]",
            "bl sym.imp.strcpy",
            "cmp r7, 0",
            "bne 0x28854",
            "ldr r3, [0x000288e4]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "cmp r3, 8",
            "beq 0x28844",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x285dc",
            "mov r0, r7",
            "bl sym.imp.time",
            "movw r3, 0x19d",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000288e8]",
            "ldr r0, [0x000288ec]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x24c",
            "bl sym.imp.printf",
            "ldr r0, [0x000288f0]",
            "add r0, pc, r0",
            "b 0x285c8",
            "mov r0, r7",
            "mov r1, 1",
            "bl fcn.0000862c",
            "b 0x28868",
            "cmp r7, 1",
            "bne 0x285dc",
            "mov r0, sl",
            "mov r1, r7",
            "bl fcn.00008620",
            "mov r0, r5",
            "add sp, sp, 0x34",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.zyNetCtrl_addWIFINeighborList": {
        "function_address": "0x00014eec",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r1, 0x78",
            "ldr r5, [0x000153e0]",
            "sub sp, sp, 0x1c",
            "mov r6, r0",
            "mov r0, 1",
            "add r5, pc, r5",
            "bl sym.imp.calloc",
            "subs r4, r0, 0",
            "beq 0x153d4",
            "mov r3, 0",
            "add r2, r6, r3",
            "ldrb r1, [r2, 4]",
            "add r2, r4, r3",
            "add r3, r3, 1",
            "cmp r3, 6",
            "strb r1, [r2, 4]",
            "bne 0x14f18",
            "ldr r3, [r6, 0xc]",
            "add r1, r6, 0x16",
            "add r0, r4, 0x16",
            "str r3, [r4, 0xc]",
            "ldrh r3, [r6, 0x10]",
            "strh r3, [r4, 0x10]",
            "ldrh r3, [r6, 0x12]",
            "strh r3, [r4, 0x12]",
            "ldrh r3, [r6, 0x14]",
            "strh r3, [r4, 0x14]",
            "bl sym.imp.strcpy",
            "add r1, r6, 0x36",
            "add r0, r4, 0x36",
            "bl sym.imp.strcpy",
            "add r0, r4, 0x56",
            "add r1, r6, 0x56",
            "bl sym.imp.strcpy",
            "ldr r3, [0x000153e4]",
            "ldr r7, [r5, r3]",
            "ldr r3, [0x000153e8]",
            "ldr r0, [r7]",
            "ldr r2, [r5, r3]",
            "cmp r0, 0",
            "beq 0x14fa8",
            "ldr r3, [r2]",
            "cmp r3, 0",
            "movne r1, 0",
            "subne r0, r0, 1",
            "bne 0x14fb8",
            "str r4, [r2]",
            "add r0, r0, 1",
            "str r0, [r7]",
            "b 0x14fd8",
            "cmp r1, r0",
            "ldrlt r3, [r3]",
            "addlt r1, r1, 1",
            "blt 0x14fb8",
            "str r4, [r3]",
            "ldr r3, [r7]",
            "add r3, r3, 1",
            "str r3, [r7]",
            "ldr r3, [0x000153ec]",
            "ldr r4, [r2]",
            "ldr r6, [r5, r3]",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x15040",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x838",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000153f0]",
            "ldr r0, [0x000153f4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x6a",
            "bl sym.imp.printf",
            "ldr r0, [0x000153f8]",
            "ldr r1, [r7]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x000153fc]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr sb, [0x00015400]",
            "mov r8, 0",
            "ldr fp, [0x00015404]",
            "ldr sl, [0x00015408]",
            "ldr r3, [0x0001540c]",
            "add sb, pc, sb",
            "add fp, pc, fp",
            "add sb, sb, 0x6a",
            "add sl, pc, sl",
            "add fp, fp, 0x6a",
            "add r3, pc, r3",
            "str r3, [sp, 0x14]",
            "ldr r3, [r7]",
            "cmp r8, r3",
            "bge 0x153cc",
            "ldrb r3, [r6]",
            "add r8, r8, 1",
            "cmp r3, 3",
            "bls 0x150cc",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x83b",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r0, [sp, 0x14]",
            "mov r3, sb",
            "bl sym.imp.printf",
            "mov r0, sl",
            "mov r1, r8",
            "bl sym.imp.printf",
            "ldr r3, [0x000153fc]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x15140",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r1, r0",
            "movw r3, 0x83c",
            "ldr r0, [0x00015410]",
            "mov r2, 4",
            "str r3, [sp]",
            "mov r3, fp",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldrb r0, [r4, 7]",
            "ldrb r3, [r4, 6]",
            "ldrb r1, [r4, 4]",
            "ldrb r2, [r4, 5]",
            "str r0, [sp]",
            "ldrb r0, [r4, 8]",
            "str r0, [sp, 4]",
            "ldrb r0, [r4, 9]",
            "str r0, [sp, 8]",
            "ldr r0, [0x00015414]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x000153fc]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x1519c",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x83d",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00015418]",
            "ldr r0, [0x0001541c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x6a",
            "bl sym.imp.printf",
            "ldr r0, [0x00015420]",
            "ldr r1, [r4, 0xc]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x000153fc]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x151f8",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x83e",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00015424]",
            "ldr r0, [0x00015428]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x6a",
            "bl sym.imp.printf",
            "ldr r0, [0x0001542c]",
            "ldrh r1, [r4, 0x10]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x000153fc]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x15254",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x83f",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00015430]",
            "ldr r0, [0x00015434]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x6a",
            "bl sym.imp.printf",
            "ldr r0, [0x00015438]",
            "ldrh r1, [r4, 0x12]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x000153fc]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x152b0",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0x840",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001543c]",
            "ldr r0, [0x00015440]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x6a",
            "bl sym.imp.printf",
            "ldr r0, [0x00015444]",
            "ldrh r1, [r4, 0x14]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x000153fc]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x1530c",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x841",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00015448]",
            "ldr r0, [0x0001544c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x6a",
            "bl sym.imp.printf",
            "ldr r0, [0x00015450]",
            "add r1, r4, 0x16",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x000153fc]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x15368",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x842",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00015454]",
            "ldr r0, [0x00015458]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x6a",
            "bl sym.imp.printf",
            "ldr r0, [0x0001545c]",
            "add r1, r4, 0x36",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x000153fc]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x153c4",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x843",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00015460]",
            "ldr r0, [0x00015464]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x6a",
            "bl sym.imp.printf",
            "ldr r0, [0x00015468]",
            "add r1, r4, 0x56",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x000153fc]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r4, [r4]",
            "b 0x15070",
            "mov r0, 1",
            "b 0x153d8",
            "mov r0, r4",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.wps_build_model_number": {
        "function_address": "0x0003117c",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r5, r0",
            "mov r4, r1",
            "mov r0, r1",
            "movw r1, 0x1024",
            "bl fcn.0003100c",
            "ldr r0, [r5, 0x14]",
            "cmp r0, 0",
            "beq 0x311ac",
            "bl sym.imp.strlen",
            "subs r6, r0, 0",
            "bne 0x311c8",
            "mov r0, r4",
            "mov r1, 1",
            "bl fcn.0003100c",
            "mov r0, r4",
            "mov r1, 0x20",
            "bl fcn.00030ff4",
            "b 0x311e4",
            "mov r0, r4",
            "uxth r1, r6",
            "bl fcn.0003100c",
            "ldr r1, [r5, 0x14]",
            "mov r0, r4",
            "mov r2, r6",
            "bl fcn.0003102c",
            "mov r0, 0",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.zyNetCtrl_WPS_setAPautoconfig": {
        "function_address": "0x0002218c",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "cmp r0, 7",
            "ldr r6, [0x00022248]",
            "sub sp, sp, 0x84",
            "movhi r0, 0x10",
            "add r6, pc, r6",
            "bhi 0x22240",
            "ldr r1, [0x0002224c]",
            "ands r4, r0, 3",
            "movne r4, 1",
            "and r7, r0, 3",
            "add r1, pc, r1",
            "mov r2, r4",
            "mov r0, sp",
            "bl sym.imp.sprintf",
            "mov r0, sp",
            "bl sym.imp.system",
            "ldr r1, [0x00022250]",
            "mov r2, r4",
            "mov r0, sp",
            "add r1, pc, r1",
            "bl sym.imp.sprintf",
            "mov r0, sp",
            "bl sym.imp.system",
            "ldr r0, [0x00022254]",
            "add r0, pc, r0",
            "bl sym.imp.system",
            "ldr r3, [0x00022258]",
            "ldr r3, [r6, r3]",
            "ldr r2, [r3]",
            "mov r5, r3",
            "cmp r2, 0",
            "bne 0x22238",
            "cmp r4, 0",
            "beq 0x22238",
            "ldr r3, [0x0002225c]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "cmp r0, 1",
            "bne 0x22238",
            "mov r1, 3",
            "mov r2, r1",
            "bl fcn.00008f50",
            "str r7, [r5]",
            "mov r0, 0",
            "add sp, sp, 0x84",
            "pop {r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.00008f50": {
        "function_address": "0x00008f50",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x4f4]!"
        ]
    },
    "sym.SecurityCtrl_getSecurityCtrlMsg": {
        "function_address": "0x00011408",
        "instructions": [
            "push {r0, r1, r2, r4, r5, r6, r7, r8, sb, lr}",
            "mov r5, r0",
            "ldr r4, [0x00011574]",
            "mov sb, r1",
            "ldr r3, [0x00011578]",
            "mov r6, r2",
            "add r4, pc, r4",
            "ldr r7, [r4, r3]",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x11480",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0xf5a",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001157c]",
            "ldr r0, [0x00011580]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x450",
            "add r3, r3, r2",
            "bl sym.imp.printf",
            "mov r0, 0xa",
            "bl sym.imp.putchar",
            "ldr r3, [0x00011584]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "cmp r6, 0",
            "cmpne r5, 0",
            "moveq r8, 1",
            "movne r8, 0",
            "beq 0x11568",
            "mov r0, r5",
            "bl fcn.00008e30",
            "subs r2, r0, 0",
            "bne 0x114ec",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x11568",
            "bl sym.imp.time",
            "movw r3, 0xf66",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00011588]",
            "ldr r0, [0x0001158c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x450",
            "add r3, r3, r2",
            "bl sym.imp.printf",
            "ldr r0, [0x00011590]",
            "add r0, pc, r0",
            "b 0x11554",
            "str r6, [sp]",
            "mov r0, r5",
            "ldr r1, [r2, 0xc]",
            "mov r3, sb",
            "add r2, r2, 0x10",
            "bl loc.imp.genSecurityCtrlMsg",
            "cmp r0, 0",
            "beq 0x1156c",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x11568",
            "mov r0, r8",
            "bl sym.imp.time",
            "movw r3, 0xf6f",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00011594]",
            "ldr r0, [0x00011598]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x450",
            "add r3, r3, r2",
            "bl sym.imp.printf",
            "ldr r0, [0x0001159c]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00011584]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, 0x10",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, pc}"
        ]
    },
    "loc.imp.genSecurityCtrlMsg": {
        "function_address": "0x00008c44",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x6fc]!"
        ]
    },
    "sym.getCountryCode": {
        "function_address": "0x000116d8",
        "instructions": [
            "push {r0, r1, r2, r4, r5, r6, r7, r8, sb, lr}",
            "subs r6, r0, 0",
            "bne 0x116ec",
            "mov r0, 0x10",
            "b 0x11788",
            "ldr r5, fcn.0003045c",
            "add r5, pc, r5",
            "ldrb r4, [r5, 8]",
            "cmp r4, 0",
            "beq 0x11710",
            "add r1, r5, 8",
            "bl sym.imp.strcpy",
            "mov r0, 0",
            "b 0x11788",
            "ldr r0, [0x00011794]",
            "ldr r7, [0x00011798]",
            "add r0, pc, r0",
            "add r7, pc, r7",
            "bl sym.imp.system",
            "ldr r1, [0x0001179c]",
            "mov r0, r7",
            "str r4, [sp]",
            "add r1, pc, r1",
            "str r4, [sp, 4]",
            "bl sym.imp.fopen",
            "subs sb, r0, 0",
            "beq 0x116e4",
            "mov r1, 8",
            "mov r2, sb",
            "mov r0, sp",
            "bl sym.imp.fgets",
            "mov r0, sb",
            "bl sym.imp.fclose",
            "mov r0, r7",
            "bl sym.imp.remove",
            "ldr r1, [0x000117a0]",
            "mov r2, r6",
            "mov r0, sp",
            "add r1, pc, r1",
            "bl sym.imp.sscanf",
            "add r0, r5, 8",
            "mov r1, r6",
            "bl sym.imp.strcpy",
            "mov r0, r4",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, pc}"
        ]
    },
    "sym.security_SecurityCtrl_parseM2": {
        "function_address": "0x0002d5b8",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r4, r0",
            "ldr r6, [0x0002d7d8]",
            "sub sp, sp, 0x1f8",
            "ldr r3, [0x0002d7dc]",
            "mov r8, r1",
            "add r6, pc, r6",
            "mov sb, r2",
            "ldr sl, [r6, r3]",
            "ldrb r3, [sl]",
            "cmp r3, 3",
            "bls 0x2d65c",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0x188",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002d7e0]",
            "ldr r0, [0x0002d7e4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xaf",
            "bl sym.imp.printf",
            "ldrb r0, [r4, 3]",
            "ldrb r3, [r4, 2]",
            "ldrb r1, [r4]",
            "ldrb r2, [r4, 1]",
            "str r0, [sp]",
            "ldrb r0, [r4, 4]",
            "str r0, [sp, 4]",
            "ldrb r0, [r4, 5]",
            "str r8, [sp, 0xc]",
            "str r0, [sp, 8]",
            "ldr r0, [0x0002d7e8]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0002d7ec]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, r4",
            "bl fcn.00008e30",
            "subs r7, r0, 0",
            "beq 0x2d6a4",
            "mov r0, 0x3e8",
            "bl fcn.00008ddc",
            "str r8, [r0, 4]",
            "mov r2, r8",
            "mov r5, r0",
            "mov r1, sb",
            "ldr r0, [r0, 8]",
            "bl sym.imp.memcpy",
            "ldr r8, [r7, 0x210]",
            "cmp r8, 0",
            "bne 0x2d6b0",
            "mov r0, r5",
            "bl fcn.00008cec",
            "bl fcn.00008cc8",
            "bl fcn.00008cc8",
            "mov r0, 0x10",
            "b 0x2d7d0",
            "ldrb r3, [sl]",
            "cmp r3, 3",
            "bls 0x2d708",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0x1a8",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002d7f0]",
            "ldr r0, [0x0002d7f4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xaf",
            "bl sym.imp.printf",
            "ldr r0, [0x0002d7f8]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0002d7ec]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "add sb, sp, 0x10",
            "mov r0, r5",
            "mov r1, sb",
            "bl fcn.00008c8c",
            "cmp r0, 0",
            "mov r0, r5",
            "blt 0x2d78c",
            "bl fcn.00009064",
            "cmp r0, 0",
            "bge 0x2d794",
            "ldrb r3, [sl]",
            "cmp r3, 3",
            "bls 0x2d788",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0x1b4",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002d7fc]",
            "ldr r0, [0x0002d800]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xaf",
            "bl sym.imp.printf",
            "ldr r0, [0x0002d804]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0002d7ec]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, r5",
            "bl fcn.00008cec",
            "b 0x2d6a4",
            "mov r1, r5",
            "mov r2, sb",
            "mov r0, r8",
            "bl fcn.000093ac",
            "ldr r3, [r8]",
            "mov r0, r4",
            "add r2, r3, 0x15c",
            "str r2, [sp]",
            "add r2, r7, 0x10",
            "ldr r1, [r7, 0xc]",
            "ldr r3, [r3, 0x158]",
            "bl loc.imp.checkSecurityCtrlMsg",
            "mov r4, r0",
            "bl fcn.00008cc8",
            "mov r0, r4",
            "add sp, sp, 0x1f8",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "loc.imp.checkSecurityCtrlMsg": {
        "function_address": "0x00008c5c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x6ec]!"
        ]
    },
    "sym.aes_decrypt_init": {
        "function_address": "0x00038118",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sb, lr}",
            "mov r7, r0",
            "ldr r5, [0x00038268]",
            "mov r0, 0xf4",
            "mov r6, r1",
            "bl sym.imp.malloc",
            "add r5, pc, r5",
            "subs r4, r0, 0",
            "beq 0x38250",
            "mov r1, r7",
            "lsl r2, r6, 3",
            "bl fcn.00009088",
            "cmp r0, 0",
            "blt 0x38258",
            "mov r2, r4",
            "mov r1, 0",
            "lsl lr, r0, 2",
            "add r3, r4, r0, lsl 4",
            "rsb ip, r1, lr",
            "add r2, r2, 0x10",
            "cmp r1, ip",
            "sub r3, r3, 0x10",
            "bge 0x381bc",
            "ldr ip, [r2, -0x10]",
            "add r1, r1, 4",
            "ldr r6, [r3, 0x10]",
            "str r6, [r2, -0x10]",
            "str ip, [r3, 0x10]",
            "ldr r6, [r3, 0x14]",
            "ldr ip, [r2, -0xc]",
            "str r6, [r2, -0xc]",
            "str ip, [r3, 0x14]",
            "ldr r6, [r3, 0x18]",
            "ldr ip, [r2, -8]",
            "str r6, [r2, -8]",
            "str ip, [r3, 0x18]",
            "ldr r6, [r3, 0x1c]",
            "ldr ip, [r2, -4]",
            "str r6, [r2, -4]",
            "str ip, [r3, 0x1c]",
            "b 0x38160",
            "mov r3, r4",
            "mov r6, 1",
            "cmp r6, r0",
            "bge 0x3824c",
            "ldr r1, [0x0003826c]",
            "add r3, r3, 0x10",
            "ldr ip, [0x00038270]",
            "mov r2, r3",
            "ldr r1, [r5, r1]",
            "add r7, r3, 0x10",
            "ldr ip, [r5, ip]",
            "ldr lr, [r2]",
            "uxtb r8, lr",
            "ldr r8, [ip, r8, lsl 2]",
            "ubfx r8, r8, 8, 8",
            "ldr sb, [r1, r8, lsl 2]",
            "lsr r8, lr, 0x18",
            "ldr r8, [ip, r8, lsl 2]",
            "ubfx r8, r8, 8, 8",
            "ldr r8, [r1, r8, lsl 2]",
            "eor r8, r8, sb, ror 24",
            "ubfx sb, lr, 0x10, 8",
            "ubfx lr, lr, 8, 8",
            "ldr sb, [ip, sb, lsl 2]",
            "ldr lr, [ip, lr, lsl 2]",
            "ubfx sb, sb, 8, 8",
            "ubfx lr, lr, 8, 8",
            "ldr sb, [r1, sb, lsl 2]",
            "ldr lr, [r1, lr, lsl 2]",
            "eor r8, r8, sb, ror 8",
            "eor lr, r8, lr, ror 16",
            "str lr, [r2], 4",
            "cmp r2, r7",
            "bne 0x381e8",
            "add r6, r6, 1",
            "b 0x381c4",
            "str r0, [r4, 0xf0]",
            "mov r0, r4",
            "pop {r3, r4, r5, r6, r7, r8, sb, pc}",
            "mov r0, r4",
            "bl sym.imp.free",
            "mov r0, 0",
            "pop {r3, r4, r5, r6, r7, r8, sb, pc}"
        ]
    },
    "sym.wps_build_m2": {
        "function_address": "0x00030640",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r1, 0x10",
            "mov r5, r0",
            "add r0, r0, 0x46",
            "bl fcn.00008704",
            "cmp r0, 0",
            "blt 0x30830",
            "mov r0, 0x3e8",
            "bl fcn.00008ddc",
            "subs r4, r0, 0",
            "beq 0x30830",
            "bl fcn.00008e9c",
            "cmp r0, 0",
            "beq 0x30680",
            "mov r0, r4",
            "b 0x3082c",
            "mov r0, r4",
            "mov r1, 5",
            "bl fcn.00009328",
            "cmp r0, 0",
            "bne 0x30678",
            "mov r0, r5",
            "mov r1, r4",
            "bl fcn.00009574",
            "cmp r0, 0",
            "bne 0x30678",
            "mov r0, r5",
            "mov r1, r4",
            "bl fcn.000090ac",
            "cmp r0, 0",
            "bne 0x30678",
            "mov r0, r4",
            "movw r1, 0x1048",
            "bl fcn.00030440",
            "mov r0, r4",
            "mov r1, 0x10",
            "bl fcn.00030440",
            "mov r0, r4",
            "add r1, r5, 0x20",
            "mov r2, 0x10",
            "bl fcn.00030460",
            "mov r0, r5",
            "mov r1, r4",
            "bl fcn.00008a64",
            "cmp r0, 0",
            "bne 0x30678",
            "mov r0, r5",
            "bl fcn.00008b84",
            "cmp r0, 0",
            "bne 0x30678",
            "mov r0, r5",
            "mov r1, r4",
            "bl fcn.000094cc",
            "cmp r0, 0",
            "bne 0x30678",
            "mov r0, r5",
            "mov r1, r4",
            "bl fcn.00009688",
            "cmp r0, 0",
            "bne 0x30678",
            "mov r0, r5",
            "mov r1, r4",
            "bl fcn.000091d8",
            "cmp r0, 0",
            "bne 0x30678",
            "ldr r3, [r5]",
            "mov r0, r4",
            "ldr r3, [r3, 4]",
            "ldr r3, [r3]",
            "ldrh r1, [r3, 0xdc]",
            "bl fcn.00008890",
            "cmp r0, 0",
            "bne 0x30678",
            "ldr r0, [r5]",
            "mov r1, r4",
            "add r0, r0, 0x48",
            "bl fcn.00008c98",
            "cmp r0, 0",
            "bne 0x30678",
            "ldr r6, [r5]",
            "ldr r3, [r6, 0x138]",
            "ldr r0, [r6, 0x13c]",
            "blx r3",
            "uxtb r2, r0",
            "mov r1, r4",
            "add r0, r6, 0x48",
            "bl fcn.00008e78",
            "cmp r0, 0",
            "bne 0x30678",
            "mov r1, r4",
            "mov r0, r5",
            "bl fcn.00009550",
            "subs r1, r0, 0",
            "bne 0x30678",
            "mov r0, r4",
            "bl fcn.00008bc0",
            "cmp r0, 0",
            "bne 0x30678",
            "mov r3, 0x140",
            "mov r0, r4",
            "ldrh r1, [r5, r3]",
            "bl fcn.00008a58",
            "cmp r0, 0",
            "bne 0x30678",
            "ldr r0, [r5]",
            "mov r1, r4",
            "add r0, r0, 0x48",
            "bl fcn.000092d4",
            "subs r1, r0, 0",
            "bne 0x30678",
            "mov r0, r4",
            "mov r2, r1",
            "mov r3, r1",
            "bl fcn.00008b60",
            "cmp r0, 0",
            "bne 0x30678",
            "mov r0, 0x1f4",
            "bl fcn.00008ddc",
            "subs r6, r0, 0",
            "bne 0x30838",
            "mov r0, r4",
            "bl fcn.00008f74",
            "mov r0, r6",
            "bl fcn.00008f74",
            "mov r0, 0",
            "pop {r4, r5, r6, r7, r8, pc}",
            "mov r0, r5",
            "mov r1, r6",
            "bl fcn.00008efc",
            "cmp r0, 0",
            "bne 0x30820",
            "ldr r8, [r5]",
            "ldr r7, [r8, 0x158]",
            "cmp r7, 0",
            "beq 0x30884",
            "mov r0, r6",
            "movw r1, 0xff01",
            "bl fcn.00030440",
            "mov r0, r6",
            "uxth r1, r7",
            "bl fcn.00030440",
            "mov r0, r6",
            "add r1, r8, 0x15c",
            "mov r2, r7",
            "bl fcn.00030460",
            "mov r0, r5",
            "mov r1, r6",
            "bl fcn.00008be4",
            "cmp r0, 0",
            "bne 0x30820",
            "mov r0, r5",
            "mov r1, r4",
            "mov r2, r6",
            "bl fcn.00008e0c",
            "subs r7, r0, 0",
            "bne 0x30820",
            "mov r0, r6",
            "bl fcn.00008f74",
            "mov r0, r5",
            "mov r1, r4",
            "bl fcn.000087c4",
            "cmp r0, 0",
            "mov r0, r4",
            "bne 0x3082c",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.000090ac": {
        "function_address": "0x000090ac",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x40c]!"
        ]
    },
    "fcn.00008b84": {
        "function_address": "0x00008b84",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x77c]!"
        ]
    },
    "fcn.00008efc": {
        "function_address": "0x00008efc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x52c]!"
        ]
    },
    "fcn.00008be4": {
        "function_address": "0x00008be4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x73c]!"
        ]
    },
    "fcn.00008e0c": {
        "function_address": "0x00008e0c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x5cc]!"
        ]
    },
    "fcn.000087c4": {
        "function_address": "0x000087c4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x9fc]!"
        ]
    },
    "sym.zyNetCtrl_WPS_removeDataToList": {
        "function_address": "0x0001e61c",
        "instructions": [
            "push {r0, r1, r2, r4, r5, r6, r7, r8, sb, lr}",
            "mov r3, r0",
            "ldr r4, [0x0001e914]",
            "cmp r1, 0",
            "cmpne r0, 0",
            "add r4, pc, r4",
            "bne 0x1e688",
            "ldr r3, [0x0001e918]",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x1e908",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0xa42",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001e91c]",
            "ldr r0, [0x0001e920]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x1d8",
            "bl sym.imp.printf",
            "ldr r0, [0x0001e924]",
            "add r0, pc, r0",
            "b 0x1e6e8",
            "ldr r0, [0x0001e928]",
            "ldr r6, [r4, r0]",
            "ldr r7, [r6]",
            "cmp r7, 0",
            "bne 0x1e700",
            "ldr r3, [0x0001e918]",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x1e908",
            "mov r0, r7",
            "bl sym.imp.time",
            "movw r3, 0xa4f",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001e92c]",
            "ldr r0, [0x0001e930]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x1d8",
            "bl sym.imp.printf",
            "ldr r0, [0x0001e934]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0001e938]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0x1e908",
            "ldrb ip, [r3]",
            "ldr r0, [0x0001e93c]",
            "cmp ip, 0xff",
            "ldr r5, [r4, r0]",
            "bne 0x1e750",
            "ldrb r0, [r3, 1]",
            "cmp r0, 0xff",
            "bne 0x1e750",
            "ldrb r0, [r3, 2]",
            "cmp r0, 0xff",
            "bne 0x1e750",
            "ldrb r0, [r3, 3]",
            "cmp r0, 0xff",
            "bne 0x1e750",
            "ldrb r0, [r3, 4]",
            "cmp r0, 0xff",
            "bne 0x1e750",
            "ldrb r0, [r3, 5]",
            "cmp r0, 0xff",
            "beq 0x1e798",
            "ldrb r0, [r1]",
            "cmp r0, 0xff",
            "bne 0x1e7d0",
            "ldrb r0, [r1, 1]",
            "cmp r0, 0xff",
            "bne 0x1e7d0",
            "ldrb r0, [r1, 2]",
            "cmp r0, 0xff",
            "bne 0x1e7d0",
            "ldrb r0, [r1, 3]",
            "cmp r0, 0xff",
            "bne 0x1e7d0",
            "ldrb r0, [r1, 4]",
            "cmp r0, 0xff",
            "bne 0x1e7d0",
            "ldrb r1, [r1, 5]",
            "cmp r1, 0xff",
            "bne 0x1e7d0",
            "ldr r4, [r5]",
            "mov r8, 0",
            "cmp r8, r7",
            "bge 0x1e88c",
            "ldr r0, [r4, 0x10]",
            "add r8, r8, 1",
            "ldr sb, [r4]",
            "bl fcn.00008f2c",
            "ldr r0, [r4, 0x14]",
            "bl fcn.00008cec",
            "mov r0, r4",
            "mov r4, sb",
            "bl fcn.00008cec",
            "b 0x1e7a0",
            "ldr r0, [r5]",
            "mov r1, 0",
            "mov r8, r0",
            "mov r4, r0",
            "b 0x1e7f4",
            "ldr r4, [r4]",
            "cmp r1, 0",
            "add r1, r1, 1",
            "ldrne r8, [r8]",
            "cmp r1, r7",
            "bge 0x1e908",
            "ldrb lr, [r4, 4]",
            "cmp lr, ip",
            "bne 0x1e7e4",
            "ldrb sb, [r4, 5]",
            "ldrb lr, [r3, 1]",
            "cmp sb, lr",
            "bne 0x1e7e4",
            "ldrb sb, [r4, 6]",
            "ldrb lr, [r3, 2]",
            "cmp sb, lr",
            "bne 0x1e7e4",
            "ldrb sb, [r4, 7]",
            "ldrb lr, [r3, 3]",
            "cmp sb, lr",
            "bne 0x1e7e4",
            "ldrb sb, [r4, 8]",
            "ldrb lr, [r3, 4]",
            "cmp sb, lr",
            "bne 0x1e7e4",
            "ldrb sb, [r4, 9]",
            "ldrb lr, [r3, 5]",
            "cmp sb, lr",
            "bne 0x1e7e4",
            "ldr lr, [r4, 0x14]",
            "ldrb lr, [lr]",
            "cmp lr, r2",
            "bne 0x1e7e4",
            "cmp r7, 1",
            "bne 0x1e89c",
            "ldr r0, [r0, 0x10]",
            "bl fcn.00008f2c",
            "ldr r3, [r5]",
            "ldr r0, [r3, 0x14]",
            "bl fcn.00008cec",
            "ldr r0, [r5]",
            "bl fcn.00008cec",
            "mov r0, 0",
            "str r0, [r5]",
            "str r0, [r6]",
            "b 0x1e90c",
            "cmp r1, 0",
            "bne 0x1e8d8",
            "ldr r4, [r0]",
            "ldr r0, [r0, 0x10]",
            "bl fcn.00008f2c",
            "ldr r3, [r5]",
            "ldr r0, [r3, 0x14]",
            "bl fcn.00008cec",
            "ldr r0, [r5]",
            "bl fcn.00008cec",
            "ldr r3, [r6]",
            "str r4, [r5]",
            "sub r3, r3, 1",
            "str r3, [r6]",
            "b 0x1e900",
            "ldr r0, [r4, 0x10]",
            "ldr r5, [r4]",
            "bl fcn.00008f2c",
            "mov r0, r4",
            "bl fcn.00008cec",
            "ldr r3, [r6]",
            "cmp r5, 0",
            "sub r3, r3, 1",
            "str r3, [r6]",
            "strne r5, [r8]",
            "mov r0, 0",
            "b 0x1e90c",
            "mov r0, 0x10",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, pc}"
        ]
    },
    "sym.wps_validate_m1": {
        "function_address": "0x0002f58c",
        "instructions": [
            "cmp r0, 0",
            "beq 0x2f6d8",
            "push {r4, r5, lr}",
            "sub sp, sp, 0x1ec",
            "mov r1, sp",
            "bl fcn.00008c8c",
            "cmp r0, 0",
            "bge 0x2f5b4",
            "mvn r0, 0",
            "b 0x2f6d0",
            "ldr r5, [sp, 4]",
            "ldr r0, [sp]",
            "adds r4, r5, 0",
            "movne r4, 1",
            "bl fcn.0002f058",
            "cmp r0, 0",
            "bne 0x2f60c",
            "ldr r0, [sp, 8]",
            "bl fcn.0002efd8",
            "cmp r0, 0",
            "bne 0x2f60c",
            "ldr r3, [sp, 0x18]",
            "cmp r3, 0",
            "beq 0x2f60c",
            "ldr r0, [sp, 0x84]",
            "mov r1, 1",
            "bl fcn.0002eeb8",
            "cmp r0, 0",
            "bne 0x2f60c",
            "ldr r3, [sp, 0xc]",
            "cmp r3, 0",
            "bne 0x2f61c",
            "cmp r4, 0",
            "bne 0x2f5ac",
            "mov r0, r4",
            "b 0x2f6d0",
            "ldr r3, [sp, 0xd4]",
            "ldr r2, [sp, 0xd8]",
            "cmp r3, 0",
            "beq 0x2f60c",
            "cmp r2, 0xc0",
            "bne 0x2f60c",
            "ldr r0, [sp, 0x28]",
            "mov r1, r4",
            "mov r2, 1",
            "bl fcn.0002ee14",
            "cmp r0, 0",
            "bne 0x2f60c",
            "ldr r3, [sp, 0x30]",
            "cmp r3, 0",
            "beq 0x2f60c",
            "ldr r3, [sp, 0x34]",
            "cmp r3, 0",
            "beq 0x2f60c",
            "ldr r0, [sp, 0x38]",
            "bl fcn.0002f02c",
            "cmp r0, 0",
            "bne 0x2f60c",
            "ldr r0, [sp, 0x40]",
            "mov r1, 1",
            "bl fcn.0002ee4c",
            "cmp r0, 0",
            "bne 0x2f60c",
            "ldr r0, [sp, 0x3c]",
            "bl fcn.0002f000",
            "cmp r0, 0",
            "bne 0x2f60c",
            "ldr r3, [sp, 0x44]",
            "cmp r3, 0",
            "beq 0x2f60c",
            "mov r0, r5",
            "mov r1, r4",
            "bl fcn.0002ed7c",
            "cmp r0, 0",
            "bne 0x2f60c",
            "ldr r3, [sp, 0xa0]",
            "cmp r3, 0",
            "beq 0x2f6d0",
            "ldrb r3, [r3]",
            "cmp r3, 1",
            "bhi 0x2f60c",
            "add sp, sp, 0x1ec",
            "pop {r4, r5, pc}",
            "mvn r0, 0",
            "bx lr"
        ]
    },
    "sym.os_get_reltime": {
        "function_address": "0x00033d68",
        "instructions": [
            "push {r0, r1, r2, r4, r5, r6, r7, r8, sb, lr}",
            "mov r5, r0",
            "ldr r7, [0x00033df0]",
            "add r7, pc, r7",
            "mov r6, r7",
            "ldr r4, [r7]",
            "mov r1, sp",
            "mov r0, r4",
            "bl sym.imp.clock_gettime",
            "subs sb, r0, 0",
            "bne 0x33db4",
            "ldr r3, [sp]",
            "mov r1, 0x3e8",
            "ldr r0, [sp, 4]",
            "str r3, [r5]",
            "bl sym.imp.__aeabi_idiv",
            "str r0, [r5, 4]",
            "mov r0, sb",
            "b 0x33de8",
            "cmp r4, 1",
            "beq 0x33ddc",
            "cmp r4, 7",
            "beq 0x33dd4",
            "cmp r4, 0",
            "bne 0x33d7c",
            "mvn r0, 0",
            "b 0x33de8",
            "mov r3, 1",
            "b 0x33de0",
            "mov r3, 0",
            "str r3, [r6]",
            "b 0x33d7c",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, pc}"
        ]
    },
    "sym.imp.clock_gettime": {
        "function_address": "0x00008584",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0xb7c]!"
        ]
    },
    "sym.imp.__aeabi_idiv": {
        "function_address": "0x0000925c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x2ec]!"
        ]
    },
    "sym.wps_build_conn_type_flags": {
        "function_address": "0x00033798",
        "instructions": [
            "push {r4, lr}",
            "mov r0, r1",
            "mov r4, r1",
            "movw r1, 0x100d",
            "bl fcn.000331d0",
            "mov r0, r4",
            "mov r1, 1",
            "bl fcn.000331d0",
            "mov r0, r4",
            "mov r1, 1",
            "bl fcn.000331f0",
            "mov r0, 0",
            "pop {r4, pc}"
        ]
    },
    "sym.zyNetCtrl_SpeedTest_getSpeedTestState": {
        "function_address": "0x0002b9f0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x224",
            "ldr sb, [0x0002bd6c]",
            "ldr r3, [0x0002bd70]",
            "add sb, pc, sb",
            "ldr r3, [sb, r3]",
            "str r3, [sp, 0xc]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x2bd58",
            "ldr r3, [0x0002bd74]",
            "ldr sl, [sb, r3]",
            "ldr r4, [sl]",
            "cmp r4, 0",
            "bne 0x2bd60",
            "ldr r5, [0x0002bd78]",
            "mov r1, r4",
            "str r4, [sp, 0x10]",
            "mov r2, 0xc",
            "add r5, pc, r5",
            "add r0, sp, 0x14",
            "bl sym.imp.memset",
            "ldr r1, [0x0002bd7c]",
            "mov r0, r5",
            "add r1, pc, r1",
            "bl sym.imp.fopen",
            "subs r6, r0, 0",
            "bne 0x2bac4",
            "ldr r3, [0x0002bd80]",
            "ldr r3, [sb, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x2bd58",
            "bl sym.imp.time",
            "movw r3, 0x126",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002bd84]",
            "ldr r0, [0x0002bd88]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x170",
            "bl sym.imp.printf",
            "ldr r0, [0x0002bd8c]",
            "mov r1, r5",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0002bd90]",
            "ldr r3, [sb, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0x2bd58",
            "mov r1, 0x10",
            "mov r2, r6",
            "add r0, sp, 0x10",
            "bl sym.imp.fgets",
            "ldrb r5, [sp, 0x10]",
            "mov r0, r6",
            "bl sym.imp.fclose",
            "cmp r5, 0x31",
            "bne 0x2bcb0",
            "ldr r3, [0x0002bd94]",
            "add r6, sp, 0x24",
            "add r5, sp, 0x20",
            "ldr fp, [sb, r3]",
            "ldr r3, [fp]",
            "cmp r3, 2",
            "ldr r3, [0x0002bd98]",
            "ldr r8, [sb, r3]",
            "ldr r3, [0x0002bd9c]",
            "ldr r7, [sb, r3]",
            "bne 0x2bb68",
            "bl fcn.000093f4",
            "cmp r0, 0",
            "beq 0x2bb68",
            "str r4, [sp, 0x20]",
            "mov r2, 0x1fc",
            "mov r1, r4",
            "mov r0, r6",
            "bl sym.imp.memset",
            "ldr r1, [0x0002bda0]",
            "mov r0, r5",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "mov r0, r5",
            "bl loc.imp.Outputlog",
            "mov r0, r8",
            "mov r1, r7",
            "mov r2, r4",
            "bl loc.imp.sendSpeedTestAck",
            "ldr r3, [sp, 0xc]",
            "str r4, [r3]",
            "b 0x2bd58",
            "mov r1, r7",
            "mov r2, 2",
            "mov r0, r8",
            "bl loc.imp.sendSpeedTestAck",
            "mov r1, 0",
            "mov r0, r6",
            "str r1, [sp, 0x20]",
            "mov r2, 0x1fc",
            "bl sym.imp.memset",
            "ldr r3, [fp]",
            "cmp r3, 1",
            "bne 0x2bbe8",
            "ldr r0, [0x0002bda4]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0002bd90]",
            "ldr r3, [sb, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x0002bda8]",
            "mov r0, r5",
            "ldr r1, [0x0002bdac]",
            "ldr r3, [sb, r3]",
            "ldr r2, [0x0002bdb0]",
            "ldr r3, [r3]",
            "add r1, pc, r1",
            "str r3, [sp]",
            "ldr r3, [0x0002bdb4]",
            "add r2, pc, r2",
            "add r3, pc, r3",
            "bl sym.imp.sprintf",
            "b 0x2bc38",
            "cmp r3, 2",
            "bne 0x2bc38",
            "ldr r3, [0x0002bda8]",
            "ldr r0, [0x0002bdb8]",
            "ldr r4, [sb, r3]",
            "add r0, pc, r0",
            "ldr r1, [r4]",
            "bl sym.imp.printf",
            "ldr r3, [0x0002bd90]",
            "ldr r3, [sb, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x0002bdbc]",
            "mov r0, r5",
            "ldr r2, [r4]",
            "ldr r3, [sb, r3]",
            "ldr r1, [0x0002bdc0]",
            "stm sp, {r2, r3}",
            "add r1, pc, r1",
            "bl sym.imp.sprintf",
            "ldr r3, [0x0002bd80]",
            "ldr r3, [sb, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x2bc9c",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x15f",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002bdc4]",
            "ldr r0, [0x0002bdc8]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x170",
            "bl sym.imp.printf",
            "ldr r0, [0x0002bdcc]",
            "mov r1, r5",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0002bd90]",
            "ldr r3, [sb, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, r5",
            "bl sym.imp.system",
            "mov r3, 1",
            "str r3, [sl]",
            "b 0x2bd60",
            "mov r0, r4",
            "bl sym.imp.time",
            "ldr r3, [0x0002bdd0]",
            "mov r5, r0",
            "add r3, pc, r3",
            "ldr r3, [r3]",
            "rsb r3, r3, r0",
            "cmp r3, 3",
            "ble 0x2bd4c",
            "ldr r3, [0x0002bd80]",
            "ldr r3, [sb, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x2bd34",
            "mov r0, r4",
            "bl sym.imp.time",
            "mov r3, 0x170",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002bdd4]",
            "ldr r0, [0x0002bdd8]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x170",
            "bl sym.imp.printf",
            "ldr r0, [0x0002bddc]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0002bd90]",
            "ldr r3, [sb, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x0002bde0]",
            "ldr r0, [sb, r3]",
            "ldrb r3, [r0]",
            "cmp r3, 0",
            "beq 0x2bd4c",
            "bl fcn.0000859c",
            "ldr r3, [0x0002bde4]",
            "add r3, pc, r3",
            "str r5, [r3]",
            "mov r0, 0x10",
            "b 0x2bd64",
            "mov r0, 0",
            "add sp, sp, 0x224",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.000093f4": {
        "function_address": "0x000093f4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x1dc]!"
        ]
    },
    "loc.imp.sendSpeedTestAck": {
        "function_address": "0x00008ba8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x764]!"
        ]
    },
    "sym.zyNetCtrl_WPS_addDataToList": {
        "function_address": "0x0001dde4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r5, r0",
            "ldr r4, [0x0001e584]",
            "sub sp, sp, 0x34",
            "cmp r1, 0",
            "cmpne r0, 0",
            "mov r7, r1",
            "add r4, pc, r4",
            "bne 0x1de70",
            "ldr r3, [0x0001e588]",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x1de68",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x966",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001e58c]",
            "ldr r0, [0x0001e590]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x1bc",
            "bl sym.imp.printf",
            "ldr r0, [0x0001e594]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0001e598]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, 0x10",
            "b 0x1e57c",
            "ldrb r3, [r0]",
            "mov sb, r2",
            "cmp r3, 0",
            "bne 0x1debc",
            "ldrb r3, [r0, 1]",
            "cmp r3, 0",
            "bne 0x1debc",
            "ldrb r3, [r0, 2]",
            "cmp r3, 0",
            "bne 0x1debc",
            "ldrb r3, [r0, 3]",
            "cmp r3, 0",
            "bne 0x1debc",
            "ldrb r3, [r0, 4]",
            "cmp r3, 0",
            "bne 0x1debc",
            "ldrb r3, [r0, 5]",
            "cmp r3, 0",
            "beq 0x1df04",
            "ldrb r3, [r7]",
            "cmp r3, 0",
            "bne 0x1df54",
            "ldrb r3, [r7, 1]",
            "cmp r3, 0",
            "bne 0x1df54",
            "ldrb r3, [r7, 2]",
            "cmp r3, 0",
            "bne 0x1df54",
            "ldrb r3, [r7, 3]",
            "cmp r3, 0",
            "bne 0x1df54",
            "ldrb r3, [r7, 4]",
            "cmp r3, 0",
            "bne 0x1df54",
            "ldrb r3, [r7, 5]",
            "cmp r3, 0",
            "bne 0x1df54",
            "ldr r3, [0x0001e588]",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x1de68",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x96e",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001e59c]",
            "ldr r0, [0x0001e5a0]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x1bc",
            "bl sym.imp.printf",
            "ldr r0, [0x0001e5a4]",
            "add r0, pc, r0",
            "b 0x1de54",
            "mov r0, 0",
            "bl sym.imp.time",
            "ldr r3, [0x0001e5a8]",
            "str r0, [sp, 0x2c]",
            "ldr r8, [r4, r3]",
            "ldr sl, [r8]",
            "cmp sl, 0",
            "bne 0x1e094",
            "mov r0, 1",
            "mov r1, 0x24",
            "bl sym.imp.calloc",
            "subs r6, r0, 0",
            "bne 0x1dfd4",
            "ldr r3, [0x0001e588]",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x1de68",
            "bl sym.imp.time",
            "mov r3, 0x980",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001e5ac]",
            "ldr r0, [0x0001e5b0]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x1bc",
            "bl sym.imp.printf",
            "ldr r0, [0x0001e5b4]",
            "add r0, pc, r0",
            "b 0x1de54",
            "mov r0, 1",
            "mov r1, r0",
            "bl sym.imp.calloc",
            "str r0, [r6, 0x14]",
            "cmp r0, 0",
            "mov r1, r0",
            "bne 0x1e03c",
            "ldr r3, [0x0001e588]",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x1e2e8",
            "bl sym.imp.time",
            "movw r3, 0x986",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001e5b8]",
            "ldr r0, [0x0001e5bc]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x1bc",
            "bl sym.imp.printf",
            "ldr r0, [0x0001e5c0]",
            "add r0, pc, r0",
            "b 0x1e2d4",
            "ldr r3, [0x0001e5c4]",
            "mov r0, r6",
            "ldr r3, [r4, r3]",
            "str r6, [r3]",
            "mov r3, sl",
            "ldrb ip, [r5, r3]",
            "add r0, r0, 1",
            "add r2, r6, r3",
            "strb ip, [r2, 4]",
            "ldrb r2, [r7, r3]",
            "add r3, r3, 1",
            "cmp r3, 6",
            "strb r2, [r0, 9]",
            "bne 0x1e050",
            "ldr r2, [sp, 0x2c]",
            "mov r3, 0",
            "str r3, [r6, 0x10]",
            "str r3, [r6]",
            "mov r3, 1",
            "strb sb, [r1]",
            "str r2, [r6, 0x18]",
            "b 0x1e338",
            "ldr r3, [0x0001e5c4]",
            "mov r1, 0",
            "ldr r3, [r4, r3]",
            "ldr fp, [r3]",
            "mov r3, fp",
            "cmp r1, sl",
            "bge 0x1e1e8",
            "ldrb ip, [r3, 4]",
            "ldrb r0, [r5]",
            "cmp ip, r0",
            "bne 0x1e1dc",
            "ldrb ip, [r3, 5]",
            "ldrb r0, [r5, 1]",
            "cmp ip, r0",
            "bne 0x1e1dc",
            "ldrb ip, [r3, 6]",
            "ldrb r0, [r5, 2]",
            "cmp ip, r0",
            "bne 0x1e1dc",
            "ldrb ip, [r3, 7]",
            "ldrb r0, [r5, 3]",
            "cmp ip, r0",
            "bne 0x1e1dc",
            "ldrb ip, [r3, 8]",
            "ldrb r0, [r5, 4]",
            "cmp ip, r0",
            "bne 0x1e1dc",
            "ldrb ip, [r3, 9]",
            "ldrb r0, [r5, 5]",
            "cmp ip, r0",
            "bne 0x1e1dc",
            "ldr r0, [r3, 0x14]",
            "ldrb r0, [r0]",
            "cmp r0, sb",
            "bne 0x1e1dc",
            "ldr r3, [0x0001e588]",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x1e1d4",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x9a8",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001e5c8]",
            "ldr r0, [0x0001e5cc]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x1bc",
            "bl sym.imp.printf",
            "ldrb r0, [r5, 3]",
            "ldrb r3, [r5, 2]",
            "ldrb r1, [r5]",
            "ldrb r2, [r5, 1]",
            "str r0, [sp]",
            "ldrb r0, [r5, 4]",
            "str r0, [sp, 4]",
            "ldrb r0, [r5, 5]",
            "str r0, [sp, 8]",
            "ldrb r0, [r7]",
            "str r0, [sp, 0xc]",
            "ldrb r0, [r7, 1]",
            "str r0, [sp, 0x10]",
            "ldrb r0, [r7, 2]",
            "str r0, [sp, 0x14]",
            "ldrb r0, [r7, 3]",
            "str r0, [sp, 0x18]",
            "ldrb r0, [r7, 4]",
            "str r0, [sp, 0x1c]",
            "ldrb r0, [r7, 5]",
            "str r0, [sp, 0x20]",
            "ldr r0, [0x0001e5d0]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0001e598]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, 0",
            "b 0x1e57c",
            "ldr r3, [r3]",
            "add r1, r1, 1",
            "b 0x1e0a8",
            "mov r1, 0",
            "sub r2, sl, 1",
            "cmp r1, r2",
            "ldrlt fp, [fp]",
            "addlt r1, r1, 1",
            "blt 0x1e1f0",
            "mov r0, 1",
            "mov r1, 0x24",
            "bl sym.imp.calloc",
            "str r0, [fp]",
            "cmp r0, 0",
            "mov r6, r0",
            "bne 0x1e268",
            "ldr r3, [0x0001e588]",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x1de68",
            "bl sym.imp.time",
            "movw r3, 0x9ba",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001e5d4]",
            "ldr r0, [0x0001e5d8]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x1bc",
            "bl sym.imp.printf",
            "ldr r0, [0x0001e5dc]",
            "add r0, pc, r0",
            "b 0x1de54",
            "mov r0, 1",
            "mov r1, r0",
            "bl sym.imp.calloc",
            "str r0, [r6, 0x14]",
            "cmp r0, 0",
            "mov r2, r0",
            "movne r1, r6",
            "movne r3, 0",
            "bne 0x1e2f4",
            "ldr r3, [0x0001e588]",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x1e2e8",
            "bl sym.imp.time",
            "mov r3, 0x9c0",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001e5e0]",
            "ldr r0, [0x0001e5e4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x1bc",
            "bl sym.imp.printf",
            "ldr r0, [0x0001e5e8]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0001e598]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, r6",
            "bl fcn.00008cec",
            "b 0x1de68",
            "ldrb ip, [r5, r3]",
            "add r1, r1, 1",
            "add r0, r6, r3",
            "strb ip, [r0, 4]",
            "ldrb r0, [r7, r3]",
            "add r3, r3, 1",
            "cmp r3, 6",
            "strb r0, [r1, 9]",
            "bne 0x1e2f4",
            "strb sb, [r2]",
            "mov r3, 0",
            "str r3, [r6, 0x10]",
            "str r3, [r6]",
            "ldr r3, [r8]",
            "ldr r2, [sp, 0x2c]",
            "add r3, r3, 1",
            "str r2, [r6, 0x18]",
            "str r3, [r8]",
            "mov r0, r5",
            "mov r1, r7",
            "mov r2, sb",
            "mov r3, 0",
            "bl fcn.00009268",
            "cmp r0, 0",
            "bne 0x1e378",
            "ldr r0, [r6, 0x14]",
            "bl fcn.00008cec",
            "mov r0, r6",
            "bl fcn.00008cec",
            "ldr r3, [r8]",
            "sub r3, r3, 1",
            "str r3, [r8]",
            "b 0x1de68",
            "ldr r3, [0x0001e588]",
            "str r0, [r6, 0x10]",
            "ldr r6, [r4, r3]",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x1e3e0",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x9e2",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001e5ec]",
            "ldr r0, [0x0001e5f0]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x1bc",
            "bl sym.imp.printf",
            "ldr r0, [0x0001e5f4]",
            "ldr r1, [r8]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0001e598]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x0001e5c4]",
            "mov r5, 0",
            "ldr r7, [0x0001e5f8]",
            "ldr r3, [r4, r3]",
            "ldr fp, [0x0001e5fc]",
            "ldr sl, [0x0001e600]",
            "ldr sb, [r3]",
            "add r7, pc, r7",
            "ldr r3, [0x0001e604]",
            "add r7, r7, 0x1bc",
            "add fp, pc, fp",
            "add sl, pc, sl",
            "add fp, fp, 0x1bc",
            "add r3, pc, r3",
            "str r3, [sp, 0x2c]",
            "ldr r3, [r8]",
            "cmp r5, r3",
            "bge 0x1e1d4",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x1e4a0",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r1, r0",
            "movw r3, 0x9e7",
            "ldr r0, [0x0001e608]",
            "mov r2, 4",
            "str r3, [sp]",
            "mov r3, r7",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldrb r1, [sb, 6]",
            "ldrb r3, [sb, 5]",
            "ldrb r2, [sb, 4]",
            "str r1, [sp]",
            "ldrb r1, [sb, 7]",
            "ldr r0, [sp, 0x2c]",
            "str r1, [sp, 4]",
            "ldrb r1, [sb, 8]",
            "str r1, [sp, 8]",
            "ldrb r1, [sb, 9]",
            "str r1, [sp, 0xc]",
            "mov r1, r5",
            "bl sym.imp.printf",
            "ldr r3, [0x0001e598]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x1e518",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x9e8",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001e60c]",
            "mov r0, sl",
            "add r3, pc, r3",
            "add r3, r3, 0x1bc",
            "bl sym.imp.printf",
            "ldrb r0, [sb, 0xd]",
            "ldrb r3, [sb, 0xc]",
            "ldrb r1, [sb, 0xa]",
            "ldrb r2, [sb, 0xb]",
            "str r0, [sp]",
            "ldrb r0, [sb, 0xe]",
            "str r0, [sp, 4]",
            "ldrb r0, [sb, 0xf]",
            "str r0, [sp, 8]",
            "ldr r0, [0x0001e610]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0001e598]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x1e570",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r1, r0",
            "movw r3, 0x9e9",
            "ldr r0, [0x0001e614]",
            "mov r2, 4",
            "str r3, [sp]",
            "mov r3, fp",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [sb, 0x14]",
            "ldr r0, [0x0001e618]",
            "ldrb r1, [r3]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0001e598]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr sb, [sb]",
            "add r5, r5, 1",
            "b 0x1e41c",
            "add sp, sp, 0x34",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00009268": {
        "function_address": "0x00009268",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x2e4]!"
        ]
    },
    "sym.wps_validate_m4": {
        "function_address": "0x0002f9dc",
        "instructions": [
            "cmp r0, 0",
            "beq 0x2faa4",
            "push {r4, r5, lr}",
            "sub sp, sp, 0x1ec",
            "mov r1, sp",
            "bl fcn.00008c8c",
            "cmp r0, 0",
            "bge 0x2fa04",
            "mvn r0, 0",
            "b 0x2fa9c",
            "ldr r5, [sp, 4]",
            "ldr r0, [sp]",
            "adds r4, r5, 0",
            "movne r4, 1",
            "bl fcn.0002f058",
            "cmp r0, 0",
            "bne 0x2fa6c",
            "ldr r0, [sp, 8]",
            "bl fcn.0002efd8",
            "cmp r0, 0",
            "bne 0x2fa6c",
            "ldr r3, [sp, 0xc]",
            "cmp r3, 0",
            "beq 0x2fa6c",
            "ldr r3, [sp, 0x50]",
            "cmp r3, 0",
            "beq 0x2fa6c",
            "ldr r3, [sp, 0x54]",
            "cmp r3, 0",
            "beq 0x2fa6c",
            "ldr r3, [sp, 0xdc]",
            "ldr r2, [sp, 0xe0]",
            "cmp r3, 0",
            "beq 0x2fa6c",
            "cmp r2, 0xf",
            "bhi 0x2fa7c",
            "cmp r4, 0",
            "bne 0x2f9fc",
            "mov r0, r4",
            "b 0x2fa9c",
            "mov r0, r5",
            "mov r1, r4",
            "bl fcn.0002ed7c",
            "cmp r0, 0",
            "bne 0x2fa6c",
            "ldr r3, [sp, 0x4c]",
            "cmp r3, 0",
            "beq 0x2fa6c",
            "add sp, sp, 0x1ec",
            "pop {r4, r5, pc}",
            "mvn r0, 0",
            "bx lr"
        ]
    },
    "sym.zyEvent_UPDATENEWFW": {
        "function_address": "0x000199cc",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "mov r6, r0",
            "ldr r4, [0x00019b50]",
            "sub sp, sp, 0x14",
            "ldr r3, [0x00019b54]",
            "add r4, pc, r4",
            "ldr r7, [r4, r3]",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x19a40",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x173",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00019b58]",
            "ldr r0, [0x00019b5c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xf4",
            "bl sym.imp.printf",
            "ldr r0, [0x00019b60]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00019b64]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x19a9c",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0x174",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00019b68]",
            "ldr r0, [0x00019b6c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xf4",
            "bl sym.imp.printf",
            "ldr r0, [0x00019b70]",
            "mov r1, r6",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00019b64]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, 1",
            "mov r1, 4",
            "bl sym.imp.calloc",
            "subs r5, r0, 0",
            "bne 0x19b08",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x19b48",
            "bl sym.imp.time",
            "movw r3, 0x179",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00019b74]",
            "ldr r0, [0x00019b78]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xf4",
            "bl sym.imp.printf",
            "ldr r0, [0x00019b7c]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00019b64]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0x19b48",
            "str r6, [r5]",
            "mov r3, 0",
            "str r3, [sp, 0xc]",
            "ldr r3, [0x00019b80]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x19b38",
            "mov r0, 0xb",
            "mov r1, r5",
            "add r2, sp, 0xc",
            "blx r3",
            "mov r0, r5",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, lr}",
            "b sym.imp.free",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, pc}"
        ]
    },
    "sym.zyNetCtrl_FWCtrl_CheckNewFW_DownloadNewFW_FWUpgrade": {
        "function_address": "0x00025dd4",
        "instructions": [
            "push {r0, r1, r2, r4, r5, r6, r7, r8, sb, lr}",
            "mov r5, r0",
            "ldr r4, [0x00025f88]",
            "mov sb, r1",
            "ldr r3, [0x00025f8c]",
            "mov r6, r2",
            "add r4, pc, r4",
            "ldr r7, [r4, r3]",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x25e50",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x1b9",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00025f90]",
            "ldr r0, [0x00025f94]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x140",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x00025f98]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00025f9c]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x00025fa0]",
            "ldr r3, [r4, r3]",
            "ldr r2, [r3]",
            "cmp r2, 2",
            "bne 0x25ec8",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x25ec0",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x1bd",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00025fa4]",
            "ldr r0, [0x00025fa8]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x140",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x00025fac]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00025f9c]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, 0x10",
            "b 0x25f80",
            "mov r0, 0",
            "str r0, [r3]",
            "ldr r3, [0x00025fb0]",
            "ldr r3, [r4, r3]",
            "ldr r8, [r3]",
            "cmp r8, 4",
            "bne 0x25f2c",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x25ec0",
            "bl sym.imp.time",
            "mov r3, 0x1c4",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, r8",
            "ldr r3, [0x00025fb4]",
            "ldr r0, [0x00025fb8]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x140",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x00025fbc]",
            "add r0, pc, r0",
            "b 0x25eac",
            "cmp r6, 0",
            "beq 0x25f44",
            "ldr r3, [0x00025fc0]",
            "mov r1, r6",
            "ldr r0, [r4, r3]",
            "bl sym.imp.strcpy",
            "cmp r5, 0",
            "bne 0x25ec0",
            "mov r0, r5",
            "mov r1, sb",
            "mov r2, r6",
            "bl fcn.000089f8",
            "ldr r3, [0x00025fc4]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "cmp r3, 8",
            "bne 0x25ec0",
            "mov r0, r5",
            "mov r1, 1",
            "bl fcn.0000862c",
            "mov r0, r5",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, pc}"
        ]
    },
    "fcn.000089f8": {
        "function_address": "0x000089f8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x884]!"
        ]
    },
    "sym.getDeviceIP": {
        "function_address": "0x00011a7c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r4, 0",
            "ldr r5, [0x00011b48]",
            "sub sp, sp, 0x100",
            "mov r1, r4",
            "mov r2, 0x7c",
            "str r4, [sp]",
            "mov r6, r0",
            "add r5, pc, r5",
            "add r0, sp, 4",
            "bl sym.imp.memset",
            "str r4, [sp, 0x80]",
            "mov r1, r4",
            "mov r2, 0x7c",
            "add r0, sp, 0x84",
            "bl sym.imp.memset",
            "ldr r1, [0x00011b4c]",
            "mov r2, r5",
            "mov r0, sp",
            "add r1, pc, r1",
            "bl sym.imp.sprintf",
            "mov r0, sp",
            "bl sym.imp.system",
            "ldr r1, [0x00011b50]",
            "mov r0, r5",
            "add r1, pc, r1",
            "bl sym.imp.fopen",
            "subs r8, r0, 0",
            "moveq r0, 0x10",
            "beq 0x11b40",
            "add r7, sp, 0x80",
            "mov r1, 0x80",
            "mov r2, r8",
            "mov r0, r7",
            "bl sym.imp.fgets",
            "mov r0, r7",
            "bl fcn.0000886c",
            "mov r1, r7",
            "mov r2, 0x80",
            "mov r0, r6",
            "bl sym.imp.memcpy",
            "mov r0, r6",
            "bl sym.imp.strlen",
            "strb r4, [r6, r0]",
            "mov r0, r8",
            "bl sym.imp.fclose",
            "mov r0, r5",
            "bl sym.imp.remove",
            "mov r0, r4",
            "add sp, sp, 0x100",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "sym.zyNetCtrl_WPS_removeSyncTolist": {
        "function_address": "0x00020960",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, lr}",
            "mov r5, r0",
            "ldr r6, [0x00020b94]",
            "sub sp, sp, 0x2c",
            "ldr r3, [0x00020b98]",
            "mov r4, r1",
            "add r6, pc, r6",
            "mov r8, r2",
            "ldr r3, [r6, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x20a38",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0xdb7",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00020b9c]",
            "ldr r0, [0x00020ba0]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x30c",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldrb r0, [r5, 3]",
            "ldrb r3, [r5, 2]",
            "ldrb r1, [r5]",
            "ldrb r2, [r5, 1]",
            "str r0, [sp]",
            "ldrb r0, [r5, 4]",
            "str r0, [sp, 4]",
            "ldrb r0, [r5, 5]",
            "str r0, [sp, 8]",
            "ldrb r0, [r4]",
            "str r0, [sp, 0xc]",
            "ldrb r0, [r4, 1]",
            "str r0, [sp, 0x10]",
            "ldrb r0, [r4, 2]",
            "str r0, [sp, 0x14]",
            "ldrb r0, [r4, 3]",
            "str r0, [sp, 0x18]",
            "ldrb r0, [r4, 4]",
            "str r0, [sp, 0x1c]",
            "ldrb r0, [r4, 5]",
            "str r8, [sp, 0x24]",
            "str r0, [sp, 0x20]",
            "ldr r0, [0x00020ba4]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00020ba8]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "cmp r4, 0",
            "cmpne r5, 0",
            "moveq r3, 1",
            "movne r3, 0",
            "beq 0x20b88",
            "ldr r2, [0x00020bac]",
            "ldr r7, [r6, r2]",
            "ldr r2, [r7]",
            "cmp r2, 0",
            "beq 0x20b88",
            "ldr r1, [0x00020bb0]",
            "ldr r6, [r6, r1]",
            "ldr r1, [r6]",
            "mov sb, r1",
            "mov r5, r1",
            "cmp r3, r2",
            "bge 0x20b88",
            "ldrb ip, [r5, 0xa]",
            "ldrb r0, [r4]",
            "cmp ip, r0",
            "bne 0x20b74",
            "ldrb ip, [r5, 0xb]",
            "ldrb r0, [r4, 1]",
            "cmp ip, r0",
            "bne 0x20b74",
            "ldrb ip, [r5, 0xc]",
            "ldrb r0, [r4, 2]",
            "cmp ip, r0",
            "bne 0x20b74",
            "ldrb ip, [r5, 0xd]",
            "ldrb r0, [r4, 3]",
            "cmp ip, r0",
            "bne 0x20b74",
            "ldrb ip, [r5, 0xe]",
            "ldrb r0, [r4, 4]",
            "cmp ip, r0",
            "bne 0x20b74",
            "ldrb ip, [r5, 0xf]",
            "ldrb r0, [r4, 5]",
            "cmp ip, r0",
            "bne 0x20b74",
            "ldr r0, [r5, 0x14]",
            "ldrb ip, [r0]",
            "cmp ip, r8",
            "bne 0x20b74",
            "cmp r2, 1",
            "bne 0x20b14",
            "ldr r0, [r1, 0x14]",
            "bl fcn.00008cec",
            "ldr r0, [r6]",
            "bl fcn.00008cec",
            "mov r0, 0",
            "str r0, [r6]",
            "str r0, [r7]",
            "b 0x20b8c",
            "cmp r3, 0",
            "bne 0x20b4c",
            "cmp r2, 1",
            "ble 0x20b4c",
            "ldr r0, [r1, 0x14]",
            "ldr r4, [r1]",
            "bl fcn.00008cec",
            "ldr r0, [r6]",
            "bl fcn.00008cec",
            "ldr r3, [r7]",
            "str r4, [r6]",
            "sub r3, r3, 1",
            "str r3, [r7]",
            "b 0x20b6c",
            "ldr r4, [r5]",
            "bl fcn.00008cec",
            "mov r0, r5",
            "bl fcn.00008cec",
            "ldr r3, [r7]",
            "sub r3, r3, 1",
            "str r3, [r7]",
            "str r4, [sb]",
            "mov r0, 0",
            "b 0x20b8c",
            "ldr r5, [r5]",
            "cmp r3, 0",
            "add r3, r3, 1",
            "ldrgt sb, [sb]",
            "b 0x20a74",
            "mov r0, 0x10",
            "add sp, sp, 0x2c",
            "pop {r4, r5, r6, r7, r8, sb, pc}"
        ]
    },
    "sym.os_readfile": {
        "function_address": "0x00034168",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r6, r1",
            "ldr r1, [0x00034228]",
            "add r1, pc, r1",
            "bl sym.imp.fopen",
            "subs r4, r0, 0",
            "beq 0x34214",
            "mov r1, 0",
            "mov r2, 2",
            "bl sym.imp.fseek",
            "cmp r0, 0",
            "blt 0x341c4",
            "mov r0, r4",
            "bl sym.imp.ftell",
            "cmp r0, 0",
            "blt 0x341c4",
            "str r0, [r6]",
            "mov r1, 0",
            "mov r0, r4",
            "mov r2, r1",
            "bl sym.imp.fseek",
            "cmp r0, 0",
            "bge 0x341d0",
            "mov r0, r4",
            "bl sym.imp.fclose",
            "b 0x34214",
            "ldr r7, [r6]",
            "mov r0, r7",
            "bl sym.imp.malloc",
            "subs r5, r0, 0",
            "moveq r0, r4",
            "beq 0x3421c",
            "mov r3, r4",
            "mov r1, 1",
            "mov r2, r7",
            "bl sym.imp.fread",
            "ldr r3, [r6]",
            "cmp r0, r3",
            "mov r0, r4",
            "beq 0x3421c",
            "bl sym.imp.fclose",
            "mov r0, r5",
            "bl sym.imp.free",
            "mov r0, 0",
            "pop {r3, r4, r5, r6, r7, pc}",
            "bl sym.imp.fclose",
            "mov r0, r5",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "sym.imp.fseek": {
        "function_address": "0x00008d64",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x63c]!"
        ]
    },
    "sym.imp.ftell": {
        "function_address": "0x000090dc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x3ec]!"
        ]
    },
    "sym.imp.fread": {
        "function_address": "0x00008fec",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x48c]!"
        ]
    },
    "sym.FW_getNewFWversion": {
        "function_address": "0x000244a8",
        "instructions": [
            "ldr r3, [0x000244e0]",
            "ldr r2, [0x000244e4]",
            "add r3, pc, r3",
            "push {r4, lr}",
            "ldr r2, [r3, r2]",
            "ldr r1, [r2]",
            "mov r4, r2",
            "cmp r1, 8",
            "bne 0x244d8",
            "ldr r2, [0x000244e8]",
            "ldr r1, [r3, r2]",
            "bl sym.imp.strcpy",
            "ldr r0, [r4]",
            "pop {r4, pc}"
        ]
    },
    "sym.wps_validate_m5": {
        "function_address": "0x0002fb10",
        "instructions": [
            "cmp r0, 0",
            "beq 0x2fbc0",
            "push {r4, r5, lr}",
            "sub sp, sp, 0x1ec",
            "mov r1, sp",
            "bl fcn.00008c8c",
            "cmp r0, 0",
            "bge 0x2fb38",
            "mvn r0, 0",
            "b 0x2fbb8",
            "ldr r5, [sp, 4]",
            "ldr r0, [sp]",
            "adds r4, r5, 0",
            "movne r4, 1",
            "bl fcn.0002f058",
            "cmp r0, 0",
            "bne 0x2fb88",
            "ldr r0, [sp, 8]",
            "bl fcn.0002efd8",
            "cmp r0, 0",
            "bne 0x2fb88",
            "ldr r3, [sp, 0x10]",
            "cmp r3, 0",
            "beq 0x2fb88",
            "ldr r3, [sp, 0xdc]",
            "ldr r2, [sp, 0xe0]",
            "cmp r3, 0",
            "beq 0x2fb88",
            "cmp r2, 0xf",
            "bhi 0x2fb98",
            "cmp r4, 0",
            "bne 0x2fb30",
            "mov r0, r4",
            "b 0x2fbb8",
            "mov r0, r5",
            "mov r1, r4",
            "bl fcn.0002ed7c",
            "cmp r0, 0",
            "bne 0x2fb88",
            "ldr r3, [sp, 0x4c]",
            "cmp r3, 0",
            "beq 0x2fb88",
            "add sp, sp, 0x1ec",
            "pop {r4, r5, pc}",
            "mvn r0, 0",
            "bx lr"
        ]
    },
    "sym.zyNetCtrl_WPS_copySynclistByBand": {
        "function_address": "0x00021164",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "ldr r3, [0x000211cc]",
            "ldr r2, [0x000211d0]",
            "add r3, pc, r3",
            "ldr r2, [r3, r2]",
            "ldr r2, [r2]",
            "cmp r2, 0",
            "beq 0x211c4",
            "ldr r2, [0x000211d4]",
            "mov r5, r0",
            "ldr r3, [r3, r2]",
            "ldr r4, [r3]",
            "cmp r4, 0",
            "beq 0x211c4",
            "ldr r3, [r4, 0x14]",
            "ldrb r3, [r3]",
            "cmp r3, r5",
            "bne 0x211bc",
            "add r0, r4, 4",
            "add r1, r4, 0xa",
            "mov r2, r5",
            "bl fcn.000095a4",
            "ldr r4, [r4]",
            "b 0x21194",
            "mov r0, 0",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.000095a4": {
        "function_address": "0x000095a4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0xbc]!"
        ]
    },
    "sym.zyNetCtrl_WPS_setDeviceConfig": {
        "function_address": "0x0001d3ac",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov fp, r3",
            "ldr r6, [0x0001dd1c]",
            "sub sp, sp, 0x14",
            "ldr r3, [0x0001dd20]",
            "mov r8, r0",
            "add r6, pc, r6",
            "mov sb, r1",
            "mov sl, r2",
            "ldr r7, [r6, r3]",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x1d430",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x223",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001dd24]",
            "ldr r0, [0x0001dd28]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x19c",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x0001dd2c]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0001dd30]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "cmp sb, 0",
            "cmpne r8, 0",
            "moveq r4, 1",
            "movne r4, 0",
            "bne 0x1d4a8",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x1d4a0",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x226",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001dd34]",
            "ldr r0, [0x0001dd38]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x19c",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x0001dd3c]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0001dd30]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, 0",
            "b 0x1dd14",
            "mov r0, 1",
            "mov r1, 0xf8",
            "bl sym.imp.calloc",
            "subs r5, r0, 0",
            "bne 0x1d504",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x1d4a0",
            "bl sym.imp.time",
            "mov r3, 0x230",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001dd40]",
            "ldr r0, [0x0001dd44]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x19c",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x0001dd48]",
            "add r0, pc, r0",
            "b 0x1d48c",
            "mov r0, r8",
            "mov r1, r5",
            "mov r2, sl",
            "mov r3, fp",
            "bl fcn.000086e0",
            "cmp r0, 0",
            "beq 0x1d580",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x1d4a0",
            "mov r0, r4",
            "bl sym.imp.time",
            "movw r3, 0x237",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001dd4c]",
            "ldr r0, [0x0001dd50]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x19c",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x0001dd54]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0001dd30]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0x1dd10",
            "ldr r3, [r5, 0xec]",
            "cmp r3, 0",
            "beq 0x1d600",
            "ldr r0, [r5, 0xf4]",
            "cmp r0, 0",
            "beq 0x1d5ac",
            "ldr r1, [0x0001dd58]",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x1d600",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x1d66c",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x241",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001dd5c]",
            "ldr r0, [0x0001dd60]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x19c",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x0001dd64]",
            "ldr r1, [r5, 0xec]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "b 0x1d65c",
            "mov r0, 1",
            "mov r1, 0x2bc",
            "bl sym.imp.calloc",
            "subs r4, r0, 0",
            "bne 0x1d678",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x1d66c",
            "bl sym.imp.time",
            "movw r3, 0x24b",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001dd68]",
            "ldr r0, [0x0001dd6c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x19c",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x0001dd70]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0001dd30]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, r5",
            "bl fcn.000085f0",
            "b 0x1d4a0",
            "mov r0, 1",
            "mov r1, 0x35c",
            "bl sym.imp.calloc",
            "str r0, [r4]",
            "cmp r0, 0",
            "mov fp, r0",
            "bne 0x1d6dc",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x1dbc4",
            "bl sym.imp.time",
            "movw r3, 0x252",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001dd74]",
            "ldr r0, [0x0001dd78]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x19c",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x0001dd7c]",
            "add r0, pc, r0",
            "b 0x1dbb0",
            "mov r0, 1",
            "mov r1, 0xbc",
            "bl sym.imp.calloc",
            "str r0, [fp, 4]",
            "cmp r0, 0",
            "bne 0x1d73c",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x1dbc4",
            "bl sym.imp.time",
            "movw r3, 0x25a",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001dd80]",
            "ldr r0, [0x0001dd84]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x19c",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x0001dd88]",
            "add r0, pc, r0",
            "b 0x1dbb0",
            "ldr r3, [0x0001dd8c]",
            "str fp, [r0]",
            "ldr fp, [r6, r3]",
            "ldr r3, [fp]",
            "cmp r3, 0",
            "addeq ip, r4, 0x20",
            "beq 0x1d764",
            "cmp r3, 1",
            "bne 0x1d770",
            "add ip, r4, 0x10",
            "add r3, r5, 0xd8",
            "ldm r3, {r0, r1, r2, r3}",
            "stm ip, {r0, r1, r2, r3}",
            "ldr r0, [r5, 0x18]",
            "mov r3, 0x140",
            "mov r2, 4",
            "strh r2, [r4, r3]",
            "cmp r0, 0",
            "ldr r3, [r4]",
            "beq 0x1d798",
            "str r3, [sp, 8]",
            "bl sym.imp.strdup",
            "ldr r3, [sp, 8]",
            "str r0, [r3, 0x50]",
            "ldr r0, [r5, 0xbc]",
            "ldr r3, [r4]",
            "cmp r0, 0",
            "beq 0x1d7b8",
            "str r3, [sp, 8]",
            "bl sym.imp.strdup",
            "ldr r3, [sp, 8]",
            "str r0, [r3, 0x58]",
            "ldr r0, [r5, 0xc0]",
            "ldr r3, [r4]",
            "cmp r0, 0",
            "beq 0x1d7d8",
            "str r3, [sp, 8]",
            "bl sym.imp.strdup",
            "ldr r3, [sp, 8]",
            "str r0, [r3, 0x5c]",
            "ldr r0, [r5, 0xc4]",
            "ldr r3, [r4]",
            "cmp r0, 0",
            "beq 0x1d7f8",
            "str r3, [sp, 8]",
            "bl sym.imp.strdup",
            "ldr r3, [sp, 8]",
            "str r0, [r3, 0x60]",
            "ldr r0, [r5, 0x1c]",
            "ldr r3, [r4]",
            "cmp r0, 0",
            "beq 0x1d818",
            "str r3, [sp, 8]",
            "bl sym.imp.strdup",
            "ldr r3, [sp, 8]",
            "str r0, [r3, 0x54]",
            "ldrb r2, [r5, 0xe9]",
            "ldrb r1, [r5, 0xe8]",
            "lsl r2, r2, 0x10",
            "orr r2, r2, r1, lsl 24",
            "ldrb r1, [r5, 0xeb]",
            "ldr r3, [r4]",
            "orr r2, r2, r1",
            "ldrb r1, [r5, 0xea]",
            "orr r2, r2, r1, lsl 8",
            "str r2, [r3, 0x98]",
            "ldr r2, [0x0001dd90]",
            "ldr r3, [r4]",
            "ldr ip, [r6, r2]",
            "ldr r2, [ip]",
            "str r2, [r3, 0x48]",
            "ldrh r2, [ip, 4]",
            "strh r2, [r3, 0x4c]",
            "add r3, r5, 0xc",
            "ldr r2, [r4]",
            "ldm r3!, {r0, r1}",
            "str r0, [r2, 0x64]",
            "mov r0, r8",
            "str r1, [r2, 0x68]",
            "mov r1, sb",
            "ldr r3, [r4]",
            "ldrb r2, [r5, 0xc8]",
            "strb r2, [r3, 0x9c]",
            "ldr r2, [0x0001dd94]",
            "ldr r3, [r4]",
            "add r2, pc, r2",
            "str r2, [r3, 0x138]",
            "mov r2, sl",
            "ldr r3, [r4]",
            "str ip, [sp, 0xc]",
            "str r3, [sp, 8]",
            "bl fcn.000094e4",
            "ldr r3, [sp, 8]",
            "str r0, [r3, 0x13c]",
            "ldr r3, [r4]",
            "ldr r2, [r5, 4]",
            "str r2, [r3, 8]",
            "ldr r8, [r4]",
            "ldr r0, [r5, 0x28]",
            "bl fcn.00008800",
            "strh r0, [r8, 0xdc]",
            "movw r3, 0x6008",
            "ldr r2, [r4]",
            "ldr ip, [sp, 0xc]",
            "ldrh r1, [r2, 0xdc]",
            "ldr r8, [fp]",
            "and r3, r3, r1",
            "cmp r3, 8",
            "orreq r1, r1, 0x2000",
            "orreq r1, r1, 8",
            "strheq r1, [r2, 0xdc]",
            "ldr r2, [r4]",
            "ldrh r1, [r2, 0xdc]",
            "and r0, r1, 0x680",
            "cmp r0, 0x80",
            "orreq r1, r1, 0x280",
            "strheq r1, [r2, 0xdc]",
            "cmp r8, 0",
            "bne 0x1dce8",
            "ldrh r3, [ip, 4]",
            "add r1, r5, 0x2c",
            "ldr r0, [ip]",
            "strh r3, [r4, 0x34]",
            "ldr r2, [r5, 0x4c]",
            "ldr r3, [r4]",
            "str r0, [r4, 0x30]",
            "str r2, [r3, 0x44]",
            "ldr r0, [r4]",
            "ldr r2, [r5, 0x4c]",
            "add r0, r0, 0x20",
            "bl sym.imp.memcpy",
            "ldr r3, [r5, 0xec]",
            "cmp r3, 0",
            "bne 0x1d978",
            "ldr r3, [r4]",
            "ldrh r2, [r3, 0xe0]",
            "orr r2, r2, 1",
            "strh r2, [r3, 0xe0]",
            "ldr r3, [r4]",
            "ldrh r2, [r3, 0xde]",
            "orr r2, r2, 1",
            "strh r2, [r3, 0xde]",
            "b 0x1dc18",
            "cmp r3, 1",
            "bne 0x1da34",
            "ldr r3, [r4]",
            "ldr r1, [0x0001dd98]",
            "ldrh r2, [r3, 0xe0]",
            "add r1, pc, r1",
            "orr r2, r2, 2",
            "strh r2, [r3, 0xe0]",
            "ldr sb, [r5, 0xf0]",
            "mov r0, sb",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "ldreq r3, [r4]",
            "ldrheq r2, [r3, 0xde]",
            "orreq r2, r2, 4",
            "beq 0x1d9dc",
            "ldr r1, [0x0001dd9c]",
            "mov r0, sb",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x1dbc4",
            "ldr r3, [r4]",
            "ldrh r2, [r3, 0xde]",
            "orr r2, r2, 8",
            "strh r2, [r3, 0xde]",
            "ldr r0, [r5, 0x6c]",
            "cmp r0, 0",
            "bne 0x1daf0",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x1dbc4",
            "bl sym.imp.time",
            "movw r3, 0x2b5",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001dda0]",
            "ldr r0, [0x0001dda4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x19c",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x0001dda8]",
            "add r0, pc, r0",
            "b 0x1dbb0",
            "cmp r3, 2",
            "bne 0x1db38",
            "ldr r3, [r4]",
            "ldr r1, [0x0001ddac]",
            "ldrh r2, [r3, 0xe0]",
            "add r1, pc, r1",
            "orr r2, r2, 0x20",
            "strh r2, [r3, 0xe0]",
            "ldr sb, [r5, 0xf0]",
            "mov r0, sb",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "ldreq r3, [r4]",
            "ldrheq r2, [r3, 0xde]",
            "orreq r2, r2, 4",
            "beq 0x1da98",
            "ldr r1, [0x0001ddb0]",
            "mov r0, sb",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x1dbc4",
            "ldr r3, [r4]",
            "ldrh r2, [r3, 0xde]",
            "orr r2, r2, 8",
            "strh r2, [r3, 0xde]",
            "ldr r0, [r5, 0x6c]",
            "cmp r0, 0",
            "bne 0x1daf0",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x1dbc4",
            "bl sym.imp.time",
            "mov r3, 0x2d4",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001ddb4]",
            "ldr r0, [0x0001ddb8]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x19c",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x0001ddbc]",
            "add r0, pc, r0",
            "b 0x1dbb0",
            "bl sym.imp.strlen",
            "ldr r3, [r4]",
            "mov r8, r0",
            "str r0, [r3, 0xec]",
            "add r0, r0, 1",
            "ldr sb, [r4]",
            "bl sym.imp.malloc",
            "mov r2, r8",
            "str r0, [sb, 0xe8]",
            "ldr r3, [r4]",
            "ldr r1, [r5, 0x6c]",
            "ldr r0, [r3, 0xe8]",
            "bl sym.imp.memcpy",
            "ldr r3, [r4]",
            "mov r2, 0",
            "ldr r3, [r3, 0xe8]",
            "strb r2, [r3, r8]",
            "b 0x1dc18",
            "cmp r3, 3",
            "bne 0x1dc18",
            "ldr r3, [r4]",
            "ldrh r2, [r3, 0xe0]",
            "orr r2, r2, 0x20",
            "strh r2, [r3, 0xe0]",
            "ldr r3, [r4]",
            "ldrh r2, [r3, 0xde]",
            "orr r2, r2, 0xc",
            "strh r2, [r3, 0xde]",
            "ldr r0, [r5, 0x6c]",
            "cmp r0, 0",
            "bne 0x1dbd8",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x1dbc4",
            "bl sym.imp.time",
            "movw r3, 0x2e6",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001ddc0]",
            "ldr r0, [0x0001ddc4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x19c",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x0001ddc8]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0001dd30]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, r5",
            "bl fcn.000085f0",
            "mov r0, r4",
            "bl fcn.00008f2c",
            "b 0x1d4a0",
            "bl sym.imp.strlen",
            "ldr r3, [r4]",
            "mov sb, r0",
            "str r0, [r3, 0xec]",
            "add r0, r0, 1",
            "ldr sl, [r4]",
            "bl sym.imp.malloc",
            "mov r2, sb",
            "str r0, [sl, 0xe8]",
            "ldr r3, [r4]",
            "ldr r1, [r5, 0x6c]",
            "ldr r0, [r3, 0xe8]",
            "bl sym.imp.memcpy",
            "ldr r3, [r4]",
            "ldr r3, [r3, 0xe8]",
            "strb r8, [r3, sb]",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x1dc7c",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x2f2",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001ddcc]",
            "ldr r0, [0x0001ddd0]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x19c",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r3, [r4]",
            "ldr r0, [0x0001ddd4]",
            "ldrh r1, [r3, 0xe0]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0001dd30]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x1dce0",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x2f3",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001ddd8]",
            "ldr r0, [0x0001dddc]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x19c",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r3, [r4]",
            "ldr r0, [0x0001dde0]",
            "ldrh r1, [r3, 0xde]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0001dd30]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r3, 1",
            "b 0x1dd04",
            "cmp r8, 1",
            "bne 0x1dd08",
            "ldrh r3, [ip, 4]",
            "ldr r0, [ip]",
            "strh r3, [r4, 0x34]",
            "mov r3, 0",
            "str r0, [r4, 0x30]",
            "str r3, [r4, 4]",
            "mov r0, r5",
            "bl fcn.000085f0",
            "mov r0, r4",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.000086e0": {
        "function_address": "0x000086e0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0xa94]!"
        ]
    },
    "fcn.000085f0": {
        "function_address": "0x000085f0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0xb34]!"
        ]
    },
    "fcn.000094e4": {
        "function_address": "0x000094e4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x13c]!"
        ]
    },
    "fcn.00008800": {
        "function_address": "0x00008800",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x9d4]!"
        ]
    },
    "sym.bignum_init": {
        "function_address": "0x000373c0",
        "instructions": [
            "push {r4, lr}",
            "mov r0, 0x10",
            "bl fcn.00008d28",
            "subs r4, r0, 0",
            "beq 0x373e8",
            "bl fcn.00034e04",
            "cmp r0, 0",
            "mov r0, r4",
            "beq 0x373f0",
            "bl sym.imp.free",
            "mov r0, 0",
            "pop {r4, pc}",
            "pop {r4, pc}"
        ]
    },
    "sym.zyNetCtrl_getDeviceInterface": {
        "function_address": "0x00012c54",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, lr}",
            "sub sp, sp, 0xb4",
            "add r6, sp, 0x10",
            "mov r5, r0",
            "mov r2, 0x10",
            "mov r0, r6",
            "mov r4, r1",
            "bl sym.imp.strncpy",
            "mov r0, 2",
            "mov r2, 0",
            "mov r1, r0",
            "bl sym.imp.socket",
            "mov r2, r6",
            "movw r1, 0x8927",
            "mov r8, r0",
            "bl sym.imp.ioctl",
            "cmp r0, 0",
            "addge r3, r6, 0x11",
            "movge r2, r5",
            "addge r6, r6, 0x17",
            "bge 0x12cd8",
            "ldr r1, [0x00013238]",
            "mov r7, 2",
            "str r7, [r5, 0x30]",
            "mov sb, 1",
            "str sb, [r5, 0x1c]",
            "mov r0, r4",
            "add r1, pc, r1",
            "mov r2, r7",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "beq 0x12d0c",
            "b 0x12cf0",
            "ldrb r1, [r3, 1]!",
            "add r2, r2, 1",
            "cmp r3, r6",
            "strb r1, [r2, 0x13]",
            "bne 0x12cd8",
            "b 0x12ca8",
            "ldr r1, [0x0001323c]",
            "mov r0, r4",
            "mov r2, 3",
            "add r1, pc, r1",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "bne 0x12d1c",
            "mov r3, 0",
            "str r3, [r5, 0x1c]",
            "str r3, [r5, 0x30]",
            "b 0x12d9c",
            "mov r6, 0",
            "mov r2, 0x7c",
            "str r6, [sp, 0x30]",
            "mov r1, r6",
            "add r0, sp, 0x34",
            "bl sym.imp.memset",
            "str r6, [sp]",
            "mov r1, r6",
            "mov r2, 0xc",
            "add r0, sp, 4",
            "bl sym.imp.memset",
            "ldr r1, [0x00013240]",
            "add r6, sp, 0x30",
            "mov r2, r4",
            "mov r0, r6",
            "add r1, pc, r1",
            "bl sym.imp.sprintf",
            "ldr r0, [0x00013244]",
            "mov r1, r6",
            "mov r2, sp",
            "add r0, pc, r0",
            "bl fcn.00008788",
            "cmp r0, 0",
            "bne 0x12d9c",
            "ldrb r3, [sp]",
            "cmp r3, 0x30",
            "streq r0, [r5, 0x1c]",
            "streq r0, [r5, 0x30]",
            "beq 0x12d9c",
            "cmp r3, 0x31",
            "streq sb, [r5, 0x1c]",
            "streq r7, [r5, 0x30]",
            "mov r0, r8",
            "bl sym.imp.close",
            "ldr r1, [0x00013248]",
            "mov r0, r4",
            "mov r2, 3",
            "add r1, pc, r1",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "beq 0x12df8",
            "ldr r1, [0x0001324c]",
            "mov r0, r4",
            "mov r2, 4",
            "add r1, pc, r1",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "beq 0x12df8",
            "ldr r1, [0x00013250]",
            "mov r0, r4",
            "mov r2, 2",
            "add r1, pc, r1",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "bne 0x12e00",
            "mov r3, 0",
            "b 0x13228",
            "ldr r1, [0x00013254]",
            "mov r0, r4",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x12e90",
            "ldr r1, [0x00013258]",
            "mov r0, r4",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x12e90",
            "ldr r1, [0x0001325c]",
            "mov r0, r4",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x12e90",
            "ldr r1, [0x00013260]",
            "mov r0, r4",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x12e90",
            "ldr r1, [0x00013264]",
            "mov r0, r4",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x12e90",
            "ldr r1, [0x00013268]",
            "mov r0, r4",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x12f98",
            "mov r4, 0",
            "mov r2, 0x7c",
            "str r4, [sp, 0x30]",
            "mov r1, r4",
            "add r0, sp, 0x34",
            "bl sym.imp.memset",
            "str r4, [sp]",
            "mov r2, 0xc",
            "mov r1, r4",
            "add r0, sp, 4",
            "bl sym.imp.memset",
            "ldr r1, [0x0001326c]",
            "add r3, sp, 0x30",
            "mov r0, r3",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "mov r3, r0",
            "mov r2, sp",
            "ldr r0, [0x00013270]",
            "mov r1, r3",
            "add r0, pc, r0",
            "bl fcn.00008788",
            "cmp r0, 0",
            "bne 0x12f08",
            "ldr r1, [0x00013274]",
            "mov r0, sp",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x12f10",
            "mov r3, 0x100",
            "b 0x13228",
            "ldr r1, [0x00013278]",
            "mov r0, sp",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x12f40",
            "ldr r1, [0x0001327c]",
            "mov r0, sp",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x12f48",
            "movw r3, 0x101",
            "b 0x13228",
            "ldr r1, [0x00013280]",
            "mov r0, sp",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x12f90",
            "ldr r1, [0x00013284]",
            "mov r0, sp",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x12f90",
            "ldr r1, [0x00013288]",
            "mov r0, sp",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x12f08",
            "movw r3, 0x103",
            "b 0x13228",
            "ldr r1, [0x0001328c]",
            "mov r0, r4",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x13028",
            "ldr r1, [0x00013290]",
            "mov r0, r4",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x13028",
            "ldr r1, [0x00013294]",
            "mov r0, r4",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x13028",
            "ldr r1, [0x00013298]",
            "mov r0, r4",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x13028",
            "ldr r1, [0x0001329c]",
            "mov r0, r4",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x13028",
            "ldr r1, [0x000132a0]",
            "mov r0, r4",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x130d0",
            "mov r4, 0",
            "mov r2, 0x7c",
            "str r4, [sp, 0x30]",
            "mov r1, r4",
            "add r0, sp, 0x34",
            "bl sym.imp.memset",
            "str r4, [sp]",
            "mov r2, 0xc",
            "mov r1, r4",
            "add r0, sp, 4",
            "bl sym.imp.memset",
            "ldr r1, [0x000132a4]",
            "add r3, sp, 0x30",
            "mov r0, r3",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "mov r3, r0",
            "mov r2, sp",
            "ldr r0, [0x000132a8]",
            "mov r1, r3",
            "add r0, pc, r0",
            "bl fcn.00008788",
            "cmp r0, 0",
            "bne 0x131dc",
            "ldr r1, [0x000132ac]",
            "mov r0, sp",
            "mov r2, 3",
            "add r1, pc, r1",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "beq 0x131dc",
            "ldr r1, [0x000132b0]",
            "mov r0, sp",
            "mov r2, 4",
            "add r1, pc, r1",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "beq 0x13200",
            "ldr r1, [0x000132b4]",
            "mov r0, sp",
            "add r1, pc, r1",
            "b 0x13214",
            "ldr r1, [0x000132b8]",
            "mov r0, r4",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x13160",
            "ldr r1, [0x000132bc]",
            "mov r0, r4",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x13160",
            "ldr r1, [0x000132c0]",
            "mov r0, r4",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x13160",
            "ldr r1, [0x000132c4]",
            "mov r0, r4",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x13160",
            "ldr r1, [0x000132c8]",
            "mov r0, r4",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x13160",
            "ldr r1, [0x000132cc]",
            "mov r0, r4",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x12df8",
            "mov r4, 0",
            "mov r2, 0x7c",
            "str r4, [sp, 0x30]",
            "mov r1, r4",
            "add r0, sp, 0x34",
            "bl sym.imp.memset",
            "str r4, [sp]",
            "mov r2, 0xc",
            "mov r1, r4",
            "add r0, sp, 4",
            "bl sym.imp.memset",
            "ldr r1, [0x000132d0]",
            "add r3, sp, 0x30",
            "mov r0, r3",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "mov r3, r0",
            "mov r2, sp",
            "ldr r0, [0x000132d4]",
            "mov r1, r3",
            "add r0, pc, r0",
            "bl fcn.00008788",
            "cmp r0, 0",
            "bne 0x131dc",
            "ldr r1, [0x000132d8]",
            "mov r0, sp",
            "mov r2, 3",
            "add r1, pc, r1",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "bne 0x131e4",
            "movw r3, 0x102",
            "b 0x13228",
            "ldr r1, [0x000132dc]",
            "mov r0, sp",
            "mov r2, 4",
            "add r1, pc, r1",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "bne 0x13208",
            "mov r3, 0x104",
            "b 0x13228",
            "ldr r1, [0x000132e0]",
            "mov r0, sp",
            "add r1, pc, r1",
            "mov r2, 4",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "bne 0x131dc",
            "movw r3, 0x105",
            "str r3, [r5, 0x24]",
            "mov r0, 1",
            "add sp, sp, 0xb4",
            "pop {r4, r5, r6, r7, r8, sb, pc}"
        ]
    },
    "sym.getNewFWdate": {
        "function_address": "0x0000c654",
        "instructions": [
            "push {r3, lr}",
            "bl fcn.00008e00",
            "cmp r0, 8",
            "movne r0, 0x10",
            "moveq r0, 0",
            "pop {r3, pc}"
        ]
    },
    "fcn.00008e00": {
        "function_address": "0x00008e00",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x5d4]!"
        ]
    },
    "sym.getNetCtrlState": {
        "function_address": "0x00009f60",
        "instructions": [
            "push {r0, r1, r2, r4, r5, lr}",
            "mov r5, r0",
            "ldr r4, [0x00009fec]",
            "ldr r3, [0x00009ff0]",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x9fd0",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x2f2",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00009ff4]",
            "ldr r0, [0x00009ff8]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x86",
            "bl sym.imp.printf",
            "ldr r0, [0x00009ffc]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000a000]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x0000a004]",
            "mov r0, 0",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "str r3, [r5]",
            "add sp, sp, 0xc",
            "pop {r4, r5, pc}"
        ]
    },
    "sym.wps_build_primary_dev_type": {
        "function_address": "0x0003125c",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r4, r1",
            "mov r5, r0",
            "mov r0, r1",
            "movw r1, 0x1054",
            "bl fcn.0003100c",
            "mov r0, r4",
            "mov r1, 8",
            "bl fcn.0003100c",
            "mov r0, r4",
            "add r1, r5, 0x1c",
            "mov r2, 8",
            "bl fcn.0003102c",
            "mov r0, 0",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.getIntfPwrState": {
        "function_address": "0x0000b458",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r0",
            "ldr r5, [0x0000b7c8]",
            "sub sp, sp, 0x1c",
            "ldr r3, [0x0000b7cc]",
            "mov sl, r1",
            "add r5, pc, r5",
            "mov sb, r2",
            "ldr r8, [r5, r3]",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "bls 0xb4d4",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x53d",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000b7d0]",
            "ldr r0, [0x0000b7d4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x104",
            "bl sym.imp.printf",
            "ldr r0, [0x0000b7d8]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000b7dc]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "bls 0xb550",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x53e",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000b7e0]",
            "ldr r0, [0x0000b7e4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x104",
            "bl sym.imp.printf",
            "ldrb r0, [r4, 3]",
            "ldrb r3, [r4, 2]",
            "str r0, [sp]",
            "ldrb r0, [r4, 4]",
            "ldrb r1, [r4]",
            "str r0, [sp, 4]",
            "ldrb r0, [r4, 5]",
            "ldrb r2, [r4, 1]",
            "str r0, [sp, 8]",
            "ldr r0, [0x0000b7e8]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000b7dc]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "bls 0xb5ac",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x53f",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000b7ec]",
            "ldr r0, [0x0000b7f0]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x104",
            "bl sym.imp.printf",
            "ldr r0, [0x0000b7f4]",
            "mov r1, sl",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000b7dc]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x0000b7f8]",
            "mov r0, 2",
            "ldr r3, [r5, r3]",
            "ldr r1, [r3]",
            "bl fcn.00008980",
            "subs r7, r0, 0",
            "movne r7, 0x10",
            "bne 0xb7bc",
            "ldr fp, [0x0000b7fc]",
            "bl fcn.0000892c",
            "bl fcn.00008710",
            "add fp, pc, fp",
            "bl fcn.00008c14",
            "bl fcn.00008e54",
            "bl fcn.00008a7c",
            "bl fcn.000094d8",
            "bl fcn.00008e48",
            "ldr r3, [0x0000b800]",
            "mov r0, r7",
            "mov ip, r7",
            "add fp, fp, 0x104",
            "ldr r3, [r5, r3]",
            "ldr r6, [r3]",
            "ldr r3, [0x0000b804]",
            "add r3, pc, r3",
            "str r3, [sp, 0x14]",
            "ldr r3, [0x0000b808]",
            "ldr r3, [r5, r3]",
            "ldr r3, [r3]",
            "cmp ip, r3",
            "bge 0xb730",
            "ldrb r2, [r6, 0x14]",
            "ldrb r3, [r4]",
            "cmp r2, r3",
            "bne 0xb724",
            "ldrb r2, [r6, 0x15]",
            "ldrb r3, [r4, 1]",
            "cmp r2, r3",
            "bne 0xb724",
            "ldrb r2, [r6, 0x16]",
            "ldrb r3, [r4, 2]",
            "cmp r2, r3",
            "bne 0xb724",
            "ldrb r2, [r6, 0x17]",
            "ldrb r3, [r4, 3]",
            "cmp r2, r3",
            "bne 0xb724",
            "ldrb r2, [r6, 0x18]",
            "ldrb r3, [r4, 4]",
            "cmp r2, r3",
            "bne 0xb724",
            "ldrb r2, [r6, 0x19]",
            "ldrb r3, [r4, 5]",
            "cmp r2, r3",
            "bne 0xb724",
            "ldr r3, [r6, 0x24]",
            "cmp r3, sl",
            "bne 0xb724",
            "ldr r3, [r6, 0x30]",
            "str r3, [sb]",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "movls r0, 1",
            "bls 0xb724",
            "str ip, [sp, 0x10]",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x583",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r0, [sp, 0x14]",
            "mov r3, fp",
            "bl sym.imp.printf",
            "ldrb r0, [r4, 3]",
            "ldrb r1, [r4]",
            "str r0, [sp]",
            "ldrb r0, [r4, 4]",
            "ldrb r2, [r4, 1]",
            "str r0, [sp, 4]",
            "ldrb r0, [r4, 5]",
            "ldrb r3, [r4, 2]",
            "str r0, [sp, 8]",
            "ldr r0, [sb]",
            "str r0, [sp, 0xc]",
            "ldr r0, [0x0000b80c]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000b7dc]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr ip, [sp, 0x10]",
            "mov r0, 1",
            "ldr r6, [r6]",
            "add ip, ip, 1",
            "b 0xb614",
            "cmp r0, 0",
            "bne 0xb7bc",
            "mov r3, 0xff",
            "str r3, [sb]",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "bls 0xb7b8",
            "bl sym.imp.time",
            "movw r3, 0x58b",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000b810]",
            "ldr r0, [0x0000b814]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x104",
            "bl sym.imp.printf",
            "ldrb r0, [r4, 3]",
            "ldrb r3, [r4, 2]",
            "str r0, [sp]",
            "ldrb r0, [r4, 4]",
            "ldrb r1, [r4]",
            "str r0, [sp, 4]",
            "ldrb r0, [r4, 5]",
            "ldrb r2, [r4, 1]",
            "str r0, [sp, 8]",
            "ldr r0, [0x0000b818]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000b7dc]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r7, 3",
            "mov r0, r7",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.setNetworkCtrloutputfile": {
        "function_address": "0x00010dcc",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r4, 0",
            "sub sp, sp, 0x200",
            "mov r6, r0",
            "mov r1, r4",
            "add r0, sp, 4",
            "str r4, [sp]",
            "mov r2, 0x1fc",
            "bl sym.imp.memset",
            "ldr r1, [0x00010e20]",
            "mov r2, r6",
            "ldr r3, [0x00010e24]",
            "mov r0, sp",
            "add r1, pc, r1",
            "add r3, pc, r3",
            "bl sym.imp.sprintf",
            "mov r0, sp",
            "bl sym.imp.system",
            "mov r0, r4",
            "add sp, sp, 0x200",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.os_get_random": {
        "function_address": "0x00033ff0",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r6, r0",
            "ldr r0, [0x00034058]",
            "mov r4, r1",
            "ldr r1, [0x0003405c]",
            "add r0, pc, r0",
            "add r1, pc, r1",
            "bl sym.imp.fopen",
            "subs r5, r0, 0",
            "bne 0x3402c",
            "ldr r0, [0x00034060]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "mvn r0, 0",
            "pop {r4, r5, r6, pc}",
            "mov r1, 1",
            "mov r2, r4",
            "mov r3, r5",
            "mov r0, r6",
            "bl sym.imp.fread",
            "mov r6, r0",
            "mov r0, r5",
            "bl sym.imp.fclose",
            "subs r0, r6, r4",
            "mvnne r0, 0",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.wps_build_uuid_e": {
        "function_address": "0x000333ac",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r4, r0",
            "ldm r0, {r2, r3}",
            "sub r3, r2, r3",
            "cmp r3, 0x13",
            "bls 0x333f4",
            "mov r5, r1",
            "movw r1, 0x1047",
            "bl fcn.000331d0",
            "mov r0, r4",
            "mov r1, 0x10",
            "bl fcn.000331d0",
            "mov r0, r4",
            "mov r1, r5",
            "mov r2, 0x10",
            "bl fcn.00033208",
            "mov r0, 0",
            "pop {r3, r4, r5, pc}",
            "mvn r0, 0",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.zyNetCtrl_getDeviceMode": {
        "function_address": "0x00011c58",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "mov r4, 0",
            "ldr r7, [0x00011dac]",
            "sub sp, sp, 0x124",
            "ldr r5, [0x00011db0]",
            "mov r1, r4",
            "str r4, [sp, 0x20]",
            "mov r2, 0x7c",
            "add r7, pc, r7",
            "add r0, sp, 0x24",
            "add r5, pc, r5",
            "bl sym.imp.memset",
            "str r4, [sp, 0xa0]",
            "mov r1, r4",
            "mov r2, 0x7c",
            "add r0, sp, 0xa4",
            "bl sym.imp.memset",
            "str r4, [sp]",
            "mov r1, r4",
            "mov r2, 0xc",
            "add r0, sp, 4",
            "bl sym.imp.memset",
            "str r4, [sp, 0x10]",
            "mov r2, 0xc",
            "mov r1, r4",
            "add r0, sp, 0x14",
            "bl sym.imp.memset",
            "ldr r1, [0x00011db4]",
            "add r4, sp, 0x20",
            "mov r0, r4",
            "add r6, sp, 0xa0",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "ldr r1, [0x00011db8]",
            "mov r0, r6",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "mov r1, r4",
            "mov r0, r7",
            "mov r2, sp",
            "bl fcn.00008788",
            "ldr r3, [0x00011dbc]",
            "cmp r0, 0",
            "ldr r4, [r5, r3]",
            "bne 0x11d90",
            "ldrb r3, [sp]",
            "cmp r3, 0x31",
            "ldreq r1, [0x00011dc0]",
            "moveq r0, r4",
            "addeq r1, pc, r1",
            "beq 0x11d9c",
            "cmp r3, 0x32",
            "bne 0x11d90",
            "add r5, sp, 0x10",
            "mov r0, r7",
            "mov r1, r6",
            "mov r2, r5",
            "bl fcn.00008788",
            "cmp r0, 0",
            "bne 0x11d90",
            "ldr r1, [0x00011dc4]",
            "mov r0, r5",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "ldreq r1, [0x00011dc8]",
            "moveq r0, r4",
            "addeq r1, pc, r1",
            "beq 0x11d9c",
            "ldr r1, [0x00011dcc]",
            "mov r0, r5",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "ldreq r1, [0x00011dd0]",
            "moveq r0, r4",
            "addeq r1, pc, r1",
            "beq 0x11d9c",
            "ldr r1, [0x00011dd4]",
            "mov r0, r4",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "mov r0, 0",
            "add sp, sp, 0x124",
            "pop {r4, r5, r6, r7, pc}"
        ]
    },
    "sym.wps_build_os_version": {
        "function_address": "0x00031434",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r5, r1",
            "mov r4, r0",
            "mov r0, r1",
            "movw r1, 0x102d",
            "bl fcn.0003100c",
            "mov r0, r5",
            "mov r1, 4",
            "bl fcn.0003100c",
            "ldr r4, [r4, 0x50]",
            "mov r0, r5",
            "mov r1, 4",
            "orr r4, r4, 0x80000000",
            "bl fcn.000086d4",
            "strb r4, [r0, 3]",
            "lsr r3, r4, 0x18",
            "strb r3, [r0]",
            "lsr r3, r4, 0x10",
            "strb r3, [r0, 1]",
            "lsr r3, r4, 8",
            "strb r3, [r0, 2]",
            "mov r0, 0",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.add_DeviceName": {
        "function_address": "0x00012998",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "subs r1, r0, 0",
            "ldr r3, [0x000129e4]",
            "add r3, pc, r3",
            "beq 0x129dc",
            "ldr r2, [0x000129e8]",
            "ldr r5, [r3, r2]",
            "ldr r2, [0x000129ec]",
            "ldr r4, [r5]",
            "ldr r0, [r3, r2]",
            "add r0, r0, r4, lsl 4",
            "bl sym.imp.strcpy",
            "cmp r4, 0xff",
            "mov r0, 1",
            "addle r4, r4, 1",
            "strle r4, [r5]",
            "pop {r3, r4, r5, pc}",
            "mov r0, r1",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.zyNetCtrl_WPS_sendWPSData": {
        "function_address": "0x0001cbfc",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r6, r0",
            "ldr r5, [0x0001ce80]",
            "sub sp, sp, 0x14",
            "ldr r3, [0x0001ce84]",
            "mov r7, r1",
            "add r5, pc, r5",
            "mov sl, r2",
            "ldr r8, [r5, r3]",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "bls 0x1cc78",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x8b5",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001ce88]",
            "ldr r0, [0x0001ce8c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x148",
            "bl sym.imp.printf",
            "ldr r0, [0x0001ce90]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0001ce94]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "cmp r7, 0",
            "beq 0x1ce74",
            "cmp r6, 0",
            "beq 0x1ce74",
            "ldr r3, [0x0001ce98]",
            "ldr sb, [r5, r3]",
            "ldr r0, [sb]",
            "cmp r0, 0",
            "bne 0x1cce0",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "bls 0x1ce74",
            "bl sym.imp.time",
            "movw r3, 0x8cc",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001ce9c]",
            "ldr r0, [0x0001cea0]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x148",
            "bl sym.imp.printf",
            "ldr r0, [0x0001cea4]",
            "add r0, pc, r0",
            "b 0x1cd34",
            "mov r0, 1",
            "mov r1, 0x1c",
            "bl sym.imp.calloc",
            "subs r4, r0, 0",
            "bne 0x1cd4c",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "bls 0x1ce74",
            "bl sym.imp.time",
            "movw r3, 0x8d2",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001cea8]",
            "ldr r0, [0x0001ceac]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x148",
            "bl sym.imp.printf",
            "ldr r0, [0x0001ceb0]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0001ce94]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0x1ce74",
            "ldrb r3, [r6]",
            "mov r1, 1",
            "strb r3, [r4]",
            "ldrb r3, [r6, 1]",
            "strb r3, [r4, 1]",
            "ldrb r3, [r6, 2]",
            "strb r3, [r4, 2]",
            "ldrb r3, [r6, 3]",
            "strb r3, [r4, 3]",
            "ldrb r3, [r6, 4]",
            "strb r3, [r4, 4]",
            "ldrb r3, [r6, 5]",
            "strb r3, [r4, 5]",
            "ldr r6, [r7, 4]",
            "strh r6, [r4, 6]",
            "uxth r6, r6",
            "mov r0, r6",
            "bl sym.imp.calloc",
            "str r0, [r4, 8]",
            "cmp r0, 0",
            "mov fp, r0",
            "bne 0x1ce04",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "bls 0x1cdf8",
            "bl sym.imp.time",
            "mov r3, 0x8e0",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001ceb4]",
            "ldr r0, [0x0001ceb8]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x148",
            "bl sym.imp.printf",
            "ldr r0, [0x0001cebc]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0001ce94]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, r4",
            "bl fcn.00008cec",
            "b 0x1ce74",
            "ldr r1, [r7, 8]",
            "mov r2, r6",
            "bl sym.imp.memcpy",
            "ldr r1, [0x0001cec0]",
            "mov r5, 0",
            "strb r5, [fp, r6]",
            "add r3, r4, 0xc",
            "add r1, pc, r1",
            "mov r0, r3",
            "bl sym.imp.strcpy",
            "mov r3, r0",
            "mov r0, sl",
            "mov r1, r3",
            "bl loc.imp.getAPautoconfigupdatetime",
            "ldr r3, [sb]",
            "str r5, [sp, 0xc]",
            "cmp r3, r5",
            "beq 0x1ce5c",
            "mov r0, 2",
            "mov r1, r4",
            "add r2, sp, 0xc",
            "blx r3",
            "ldr r0, [r4, 8]",
            "bl fcn.00008cec",
            "mov r0, r4",
            "bl fcn.00008cec",
            "mov r0, 0",
            "b 0x1ce78",
            "mov r0, 0x10",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "loc.imp.getAPautoconfigupdatetime": {
        "function_address": "0x00008968",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x8e4]!"
        ]
    },
    "sym.wps_build_req_type": {
        "function_address": "0x00033310",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r4, r0",
            "mov r5, r1",
            "movw r1, 0x103a",
            "bl fcn.000331d0",
            "mov r0, r4",
            "mov r1, 1",
            "bl fcn.000331d0",
            "mov r0, r4",
            "uxtb r1, r5",
            "bl fcn.000331f0",
            "mov r0, 0",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.aes_decrypt_deinit": {
        "function_address": "0x00038640",
        "instructions": [
            "push {r4, lr}",
            "mov r1, 0",
            "mov r4, r0",
            "mov r2, 0xf4",
            "bl sym.imp.memset",
            "mov r0, r4",
            "pop {r4, lr}",
            "b sym.imp.free"
        ]
    },
    "sym.bignum_add": {
        "function_address": "0x00037620",
        "instructions": [
            "push {r3, lr}",
            "bl fcn.00035314",
            "adds r0, r0, 0",
            "mvnne r0, 0",
            "pop {r3, pc}"
        ]
    },
    "fcn.00035314": {
        "function_address": "0x00035314",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r6, r0",
            "ldr r7, [r0, 8]",
            "mov r5, r1",
            "ldr r8, [r1, 8]",
            "mov r4, r2",
            "cmp r7, r8",
            "bne 0x35340",
            "str r7, [r2, 8]",
            "pop {r4, r5, r6, r7, r8, lr}",
            "b fcn.0003510c",
            "bl fcn.00034c1c",
            "cmn r0, 1",
            "mov r2, r4",
            "streq r8, [r4, 8]",
            "moveq r0, r5",
            "strne r7, [r4, 8]",
            "moveq r1, r6",
            "movne r0, r6",
            "movne r1, r5",
            "pop {r4, r5, r6, r7, r8, lr}",
            "b fcn.00035228"
        ]
    },
    "sym.zyNetCtrl_WPSApporve_getFlag": {
        "function_address": "0x00029648",
        "instructions": [
            "push {r0, r1, r4, lr}",
            "ldr r4, [0x000296c8]",
            "ldr r3, [0x000296cc]",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x296b4",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0xa9",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000296d0]",
            "ldr r0, [0x000296d4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x76",
            "bl sym.imp.printf",
            "ldr r0, [0x000296d8]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x000296dc]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x000296e0]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "add sp, sp, 8",
            "pop {r4, pc}"
        ]
    },
    "sym.wps_build_manufacturer": {
        "function_address": "0x0003109c",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r5, r0",
            "mov r4, r1",
            "mov r0, r1",
            "movw r1, 0x1021",
            "bl fcn.0003100c",
            "ldr r0, [r5, 0xc]",
            "cmp r0, 0",
            "beq 0x310cc",
            "bl sym.imp.strlen",
            "subs r6, r0, 0",
            "bne 0x310e8",
            "mov r0, r4",
            "mov r1, 1",
            "bl fcn.0003100c",
            "mov r0, r4",
            "mov r1, 0x20",
            "bl fcn.00030ff4",
            "b 0x31104",
            "mov r0, r4",
            "uxth r1, r6",
            "bl fcn.0003100c",
            "ldr r1, [r5, 0xc]",
            "mov r0, r4",
            "mov r2, r6",
            "bl fcn.0003102c",
            "mov r0, 0",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.wps_process_cred": {
        "function_address": "0x00033b40",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r5, r0",
            "ldr r3, [r0, 0x7c]",
            "cmp r3, 0",
            "beq 0x33c1c",
            "ldr r2, [r5, 0xe8]",
            "mov r0, r1",
            "mov r4, r1",
            "ldr r1, [r5, 0xe4]",
            "bl fcn.000339b8",
            "cmp r0, 0",
            "bne 0x33c1c",
            "ldr r3, [r5, 0x74]",
            "cmp r3, 0",
            "beq 0x33c1c",
            "ldrb r2, [r3]",
            "ldrb r3, [r3, 1]",
            "orr r3, r3, r2, lsl 8",
            "strh r3, [r4, 0x24]",
            "ldr r3, [r5, 0x78]",
            "cmp r3, 0",
            "beq 0x33c1c",
            "ldrb r2, [r3]",
            "ldrb r3, [r3, 1]",
            "orr r3, r3, r2, lsl 8",
            "strh r3, [r4, 0x26]",
            "ldr r3, [r5, 0x80]",
            "cmp r3, 0",
            "ldrbne r3, [r3]",
            "strbne r3, [r4, 0x28]",
            "ldr r1, [r5, 0xec]",
            "ldr r6, [r5, 0xf0]",
            "cmp r1, 0",
            "bne 0x33bdc",
            "ldr r2, [r4, 0x24]",
            "ldr r3, [0x00033c24]",
            "cmp r2, r3",
            "beq 0x33bf4",
            "b 0x33c1c",
            "cmp r6, 0x40",
            "bhi 0x33bf4",
            "add r0, r4, 0x29",
            "mov r2, r6",
            "bl sym.imp.memcpy",
            "str r6, [r4, 0x6c]",
            "ldr r3, [r5, 0x84]",
            "cmp r3, 0",
            "beq 0x33c1c",
            "ldr r2, [r3]",
            "mov r0, r4",
            "str r2, [r4, 0x70]",
            "ldrh r3, [r3, 4]",
            "strh r3, [r4, 0x74]",
            "pop {r4, r5, r6, lr}",
            "b 0x33a14",
            "mvn r0, 0",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.wps_build_secondary_dev_type": {
        "function_address": "0x00031298",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r4, r0",
            "ldrb r3, [r0, 0x4c]",
            "cmp r3, 0",
            "beq 0x312e0",
            "mov r5, r1",
            "mov r0, r1",
            "movw r1, 0x1055",
            "bl fcn.0003100c",
            "ldrb r1, [r4, 0x4c]",
            "mov r0, r5",
            "lsl r1, r1, 3",
            "bl fcn.0003100c",
            "ldrb r2, [r4, 0x4c]",
            "mov r0, r5",
            "add r1, r4, 0x24",
            "lsl r2, r2, 3",
            "bl fcn.0003102c",
            "mov r0, 0",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.zyNetCtrl_WPS_getDataToList": {
        "function_address": "0x0001cec4",
        "instructions": [
            "push {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}",
            "mov r4, r0",
            "ldr r5, [0x0001d1ac]",
            "mov r6, r1",
            "cmp r1, 0",
            "cmpne r0, 0",
            "add r5, pc, r5",
            "moveq r0, 1",
            "ldr r3, [0x0001d1b0]",
            "movne r0, 0",
            "ldr r7, [r5, r3]",
            "bne 0x1cf40",
            "ldrb r3, [r7]",
            "mov r0, 0",
            "cmp r3, 3",
            "bls 0x1d1a4",
            "bl sym.imp.time",
            "movw r3, 0x9f9",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001d1b4]",
            "ldr r0, [0x0001d1b8]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x160",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x0001d1bc]",
            "add r0, pc, r0",
            "b 0x1d18c",
            "ldrb r3, [r7]",
            "mov r8, r2",
            "cmp r3, 3",
            "bls 0x1cfc0",
            "bl sym.imp.time",
            "movw r3, 0x9fd",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001d1c0]",
            "ldr r0, [0x0001d1c4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x160",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldrb r0, [r4, 3]",
            "ldrb r3, [r4, 2]",
            "ldrb r1, [r4]",
            "ldrb r2, [r4, 1]",
            "str r0, [sp]",
            "ldrb r0, [r4, 4]",
            "str r0, [sp, 4]",
            "ldrb r0, [r4, 5]",
            "str r0, [sp, 8]",
            "ldr r0, [0x0001d1c8]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0001d1cc]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x1d040",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x9fe",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001d1d0]",
            "ldr r0, [0x0001d1d4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x160",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldrb r0, [r6, 3]",
            "ldrb r3, [r6, 2]",
            "ldrb r1, [r6]",
            "ldrb r2, [r6, 1]",
            "str r0, [sp]",
            "ldrb r0, [r6, 4]",
            "str r0, [sp, 4]",
            "ldrb r0, [r6, 5]",
            "str r0, [sp, 8]",
            "ldr r0, [0x0001d1d8]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0001d1cc]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x1d0a0",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x9ff",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001d1dc]",
            "ldr r0, [0x0001d1e0]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x160",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x0001d1e4]",
            "mov r1, r8",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0001d1cc]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x0001d1e8]",
            "mov r0, 0",
            "ldr r2, [0x0001d1ec]",
            "ldr r3, [r5, r3]",
            "ldr r2, [r5, r2]",
            "ldr r3, [r3]",
            "ldr r2, [r2]",
            "cmp r0, r2",
            "bge 0x1d144",
            "ldrb ip, [r3, 4]",
            "ldrb r1, [r4]",
            "cmp ip, r1",
            "bne 0x1d138",
            "ldrb ip, [r3, 5]",
            "ldrb r1, [r4, 1]",
            "cmp ip, r1",
            "bne 0x1d138",
            "ldrb ip, [r3, 6]",
            "ldrb r1, [r4, 2]",
            "cmp ip, r1",
            "bne 0x1d138",
            "ldrb ip, [r3, 7]",
            "ldrb r1, [r4, 3]",
            "cmp ip, r1",
            "bne 0x1d138",
            "ldrb ip, [r3, 8]",
            "ldrb r1, [r4, 4]",
            "cmp ip, r1",
            "bne 0x1d138",
            "ldrb ip, [r3, 9]",
            "ldrb r1, [r4, 5]",
            "cmp ip, r1",
            "bne 0x1d138",
            "ldr r1, [r3, 0x14]",
            "ldrb r1, [r1]",
            "cmp r1, r8",
            "ldreq r0, [r3, 0x10]",
            "beq 0x1d1a4",
            "ldr r3, [r3]",
            "add r0, r0, 1",
            "b 0x1d0bc",
            "ldrb r3, [r7]",
            "mov r0, 0",
            "cmp r3, 3",
            "bls 0x1d1a4",
            "bl sym.imp.time",
            "movw r3, 0xa17",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001d1f0]",
            "ldr r0, [0x0001d1f4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x160",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x0001d1f8]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0001d1cc]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, 0",
            "add sp, sp, 0x10",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "sym.zyNetCtrl_FWCtrl_CheckNewFW_DownloadNewFW": {
        "function_address": "0x00023cdc",
        "instructions": [
            "push {r0, r1, r4, lr}",
            "ldr r4, [0x00023d54]",
            "ldr r3, [0x00023d58]",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x23d48",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x127",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00023d5c]",
            "ldr r0, [0x00023d60]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x26",
            "bl sym.imp.printf",
            "ldr r0, [0x00023d64]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00023d68]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, 0",
            "add sp, sp, 8",
            "pop {r4, pc}"
        ]
    },
    "sym.wps_build_msg_type": {
        "function_address": "0x00033684",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r4, r0",
            "mov r5, r1",
            "movw r1, 0x1022",
            "bl fcn.000331d0",
            "mov r0, r4",
            "mov r1, 1",
            "bl fcn.000331d0",
            "mov r0, r4",
            "uxtb r1, r5",
            "bl fcn.000331f0",
            "mov r0, 0",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.zyNetCtrl_parseWIFIStateSyncdata": {
        "function_address": "0x000165bc",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "subs r8, r0, 0",
            "sub sp, sp, 0xac",
            "moveq r0, 0x10",
            "ldr r5, [sp, 0xd0]",
            "beq 0x1674c",
            "ldr sb, [0x00016754]",
            "mov r4, 0",
            "str r4, [sp, 0x28]",
            "mov r6, r2",
            "ldr sl, [0x00016758]",
            "mov r1, r4",
            "ldr fp, [0x0001675c]",
            "mov r2, 0x7c",
            "add sb, pc, sb",
            "add r0, sp, 0x2c",
            "add sl, pc, sl",
            "mov r7, r3",
            "add fp, pc, fp",
            "bl sym.imp.memset",
            "add ip, sp, 0x28",
            "mov r1, r7",
            "mov r2, r6",
            "mov r0, ip",
            "bl sym.imp.memcpy",
            "ldr r1, [0x00016760]",
            "add r3, sp, 0xa8",
            "add r6, r3, r6",
            "add r1, pc, r1",
            "strb r4, [r6, -0x80]",
            "bl sym.imp.strtok",
            "mov r7, r0",
            "cmp r7, 0",
            "mov r4, 0",
            "beq 0x16748",
            "str r4, [sp, 0x18]",
            "add r6, sp, 0x18",
            "mov r2, 0xc",
            "mov r1, r4",
            "add r0, sp, 0x1c",
            "bl sym.imp.memset",
            "str r4, [sp, 8]",
            "mov r1, r7",
            "str r4, [sp, 0xc]",
            "mov r0, r6",
            "str r4, [sp, 0x10]",
            "add r7, sp, 0x10",
            "str r4, [sp, 0x14]",
            "bl sym.imp.strcpy",
            "add r3, sp, 8",
            "mov r1, r6",
            "str r3, [sp, 4]",
            "mov r0, r3",
            "mov r2, 4",
            "bl sym.imp.strncpy",
            "mov r0, r6",
            "bl sym.imp.strlen",
            "sub r2, r0, 4",
            "add r1, r6, 5",
            "mov r0, r7",
            "bl sym.imp.strncpy",
            "ldr r3, [sp, 4]",
            "mov r1, r4",
            "mov r2, 0x10",
            "mov r0, r3",
            "bl sym.imp.strtol",
            "uxtb r6, r0",
            "mov r1, r4",
            "mov r2, 0xa",
            "mov r0, r7",
            "bl sym.imp.strtol",
            "uxtb r2, r0",
            "mov r1, r6",
            "mov r0, r8",
            "bl fcn.00008ae8",
            "cmp r0, 0",
            "bne 0x16734",
            "ldrb r3, [r5]",
            "cmp r3, 0",
            "beq 0x16710",
            "mov r0, r5",
            "mov r1, sb",
            "mov r2, r5",
            "mov r3, sl",
            "bl sym.imp.sprintf",
            "ldr r1, [0x00016764]",
            "mov r0, r5",
            "mov r2, r5",
            "mov r3, r6",
            "add r1, pc, r1",
            "bl sym.imp.sprintf",
            "mov r0, r8",
            "mov r1, r6",
            "bl fcn.00008974",
            "mov r0, 0",
            "mov r1, fp",
            "bl sym.imp.strtok",
            "mov r7, r0",
            "b 0x1663c",
            "mov r0, r7",
            "add sp, sp, 0xac",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00008ae8": {
        "function_address": "0x00008ae8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x7e4]!"
        ]
    },
    "fcn.00008974": {
        "function_address": "0x00008974",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x8dc]!"
        ]
    },
    "sym.wps_validate_assoc_resp": {
        "function_address": "0x0002f50c",
        "instructions": [
            "cmp r0, 0",
            "beq 0x2f584",
            "push {r4, r5, lr}",
            "sub sp, sp, 0x1ec",
            "mov r1, sp",
            "bl fcn.00008c8c",
            "cmp r0, 0",
            "bge 0x2f534",
            "mvn r0, 0",
            "b 0x2f57c",
            "ldr r4, [sp, 4]",
            "ldr r0, [sp]",
            "adds r5, r4, 0",
            "movne r5, 1",
            "bl fcn.0002f058",
            "cmp r0, 0",
            "bne 0x2f52c",
            "ldr r3, [sp, 0x90]",
            "cmp r3, 0",
            "beq 0x2f52c",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bhi 0x2f52c",
            "mov r0, r4",
            "mov r1, r5",
            "bl fcn.0002ed7c",
            "adds r0, r0, 0",
            "mvnne r0, 0",
            "add sp, sp, 0x1ec",
            "pop {r4, r5, pc}",
            "mvn r0, 0",
            "bx lr"
        ]
    },
    "sym.notifyApAutoConfWscMsgReceived": {
        "function_address": "0x0000dfa4",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "mov r4, r0",
            "ldr r5, [0x0000e434]",
            "sub sp, sp, 0x14",
            "ldr r3, [0x0000e438]",
            "add r5, pc, r5",
            "ldr r6, [r5, r3]",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xe01c",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x913",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000e43c]",
            "ldr r0, [0x0000e440]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x288",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x0000e444]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000e448]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xe09c",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x914",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000e44c]",
            "ldr r0, [0x0000e450]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x288",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldrb r0, [r4, 3]",
            "ldrb r3, [r4, 2]",
            "ldrb r1, [r4]",
            "ldrb r2, [r4, 1]",
            "str r0, [sp]",
            "ldrb r0, [r4, 4]",
            "str r0, [sp, 4]",
            "ldrb r0, [r4, 5]",
            "str r0, [sp, 8]",
            "ldr r0, [0x0000e454]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000e448]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xe11c",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x915",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000e458]",
            "ldr r0, [0x0000e45c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x288",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldrb r0, [r4, 9]",
            "ldrb r3, [r4, 8]",
            "ldrb r1, [r4, 6]",
            "ldrb r2, [r4, 7]",
            "str r0, [sp]",
            "ldrb r0, [r4, 0xa]",
            "str r0, [sp, 4]",
            "ldrb r0, [r4, 0xb]",
            "str r0, [sp, 8]",
            "ldr r0, [0x0000e460]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000e448]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xe17c",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x916",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000e464]",
            "ldr r0, [0x0000e468]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x288",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x0000e46c]",
            "ldrh r1, [r4, 0xc]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000e448]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x0000e470]",
            "mov r0, 2",
            "ldr r3, [r5, r3]",
            "ldr r1, [r3]",
            "bl fcn.00008980",
            "subs r7, r0, 0",
            "beq 0xe1a0",
            "mov r7, 0x10",
            "b 0xe428",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xe1f8",
            "bl sym.imp.time",
            "movw r3, 0x928",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000e474]",
            "ldr r0, [0x0000e478]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x288",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x0000e47c]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000e448]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xe278",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x92b",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000e480]",
            "ldr r0, [0x0000e484]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x288",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldrb r0, [r4, 3]",
            "ldrb r3, [r4, 2]",
            "ldrb r1, [r4]",
            "ldrb r2, [r4, 1]",
            "str r0, [sp]",
            "ldrb r0, [r4, 4]",
            "str r0, [sp, 4]",
            "ldrb r0, [r4, 5]",
            "str r0, [sp, 8]",
            "ldr r0, [0x0000e488]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000e448]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xe2f8",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x92e",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000e48c]",
            "ldr r0, [0x0000e490]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x288",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldrb r0, [r4, 9]",
            "ldrb r3, [r4, 8]",
            "ldrb r1, [r4, 6]",
            "ldrb r2, [r4, 7]",
            "str r0, [sp]",
            "ldrb r0, [r4, 0xa]",
            "str r0, [sp, 4]",
            "ldrb r0, [r4, 0xb]",
            "str r0, [sp, 8]",
            "ldr r0, [0x0000e494]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000e448]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xe358",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x92f",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000e498]",
            "ldr r0, [0x0000e49c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x288",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x0000e4a0]",
            "ldrh r1, [r4, 0xc]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000e448]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xe3b4",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0x930",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000e4a4]",
            "ldr r0, [0x0000e4a8]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x288",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x0000e4ac]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000e448]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, r4",
            "bl fcn.00008adc",
            "cmp r0, 0x10",
            "mov r4, r0",
            "bne 0xe428",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xe198",
            "mov r0, 0",
            "mov r7, r4",
            "bl sym.imp.time",
            "movw r3, 0x94f",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000e4b0]",
            "ldr r0, [0x0000e4b4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x288",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x0000e4b8]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000e448]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, r7",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.00008adc": {
        "function_address": "0x00008adc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x7ec]!"
        ]
    },
    "sym.getLinkMetricList": {
        "function_address": "0x0000c66c",
        "instructions": [
            "push {r0, r1, r4, lr}",
            "ldr r4, [0x0000c708]",
            "ldr r3, [0x0000c70c]",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0xc6d8",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x66e",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000c710]",
            "ldr r0, [0x0000c714]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x170",
            "bl sym.imp.printf",
            "ldr r0, [0x0000c718]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000c71c]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x0000c720]",
            "mov r0, 2",
            "ldr r3, [r4, r3]",
            "ldr r1, [r3]",
            "bl fcn.00008980",
            "subs r4, r0, 0",
            "movne r4, 0x10",
            "bne 0xc6fc",
            "bl fcn.00009694",
            "mov r0, r4",
            "add sp, sp, 8",
            "pop {r4, pc}"
        ]
    },
    "fcn.00009694": {
        "function_address": "0x00009694",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x1c]!"
        ]
    },
    "sym.reloadwifiByfreqBand": {
        "function_address": "0x0001caf8",
        "instructions": [
            "push {r4, lr}",
            "sub sp, sp, 0x80",
            "mov r4, r0",
            "bl fcn.00008b6c",
            "subs r1, r0, 0",
            "bne 0x1cbd4",
            "str r1, [sp]",
            "add r0, sp, 4",
            "mov r2, 0x7c",
            "bl sym.imp.memset",
            "cmp r4, 0x20",
            "beq 0x1cb84",
            "bhi 0x1cb4c",
            "cmp r4, 0",
            "beq 0x1cb74",
            "cmp r4, 1",
            "bne 0x1cbd4",
            "ldr r1, [0x0001cbdc]",
            "mov r0, sp",
            "add r1, pc, r1",
            "b 0x1cbb0",
            "cmp r4, 0x40",
            "beq 0x1cb94",
            "cmp r4, 0x41",
            "beq 0x1cba4",
            "cmp r4, 0x21",
            "bne 0x1cbd4",
            "ldr r1, [0x0001cbe0]",
            "mov r0, sp",
            "add r1, pc, r1",
            "b 0x1cbb0",
            "ldr r1, [0x0001cbe4]",
            "mov r0, sp",
            "add r1, pc, r1",
            "b 0x1cbb0",
            "ldr r1, [0x0001cbe8]",
            "mov r0, sp",
            "add r1, pc, r1",
            "b 0x1cbb0",
            "ldr r1, [0x0001cbec]",
            "mov r0, sp",
            "add r1, pc, r1",
            "b 0x1cbb0",
            "ldr r1, [0x0001cbf0]",
            "mov r0, sp",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "mov r0, sp",
            "bl sym.imp.system",
            "ldr r0, [0x0001cbf4]",
            "add r0, pc, r0",
            "bl sym.imp.system",
            "ldr r0, [0x0001cbf8]",
            "add r0, pc, r0",
            "bl sym.imp.system",
            "add sp, sp, 0x80",
            "pop {r4, pc}"
        ]
    },
    "fcn.00008b6c": {
        "function_address": "0x00008b6c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x78c]!"
        ]
    },
    "sym.FW_getFWVersionByPath": {
        "function_address": "0x00024e64",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0xc30",
            "ldr r4, [0x000252c0]",
            "sub sp, sp, 0xc",
            "mov r6, r0",
            "mov sb, r1",
            "str r3, [sp, 0xc]",
            "mov r8, r2",
            "add r4, pc, r4",
            "ldr r3, [0x000252c4]",
            "ldr fp, [sp, 0xc60]",
            "ldr r5, [r4, r3]",
            "ldrb r3, [r5]",
            "cmp r3, 3",
            "bls 0x24ef0",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x4e5",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000252c8]",
            "ldr r0, [0x000252cc]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xff",
            "bl sym.imp.printf",
            "ldr r0, [0x000252d0]",
            "mov r1, fp",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x000252d4]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r1, 0",
            "mov r2, 0x3fc",
            "str r1, [sp, 0x38]",
            "add r0, sp, 0x3c",
            "bl sym.imp.memset",
            "ldr r1, [0x000252d8]",
            "mov r0, fp",
            "add r1, pc, r1",
            "bl sym.imp.fopen",
            "subs sl, r0, 0",
            "beq 0x24f38",
            "add r3, sp, 0x430",
            "add r3, r3, 0xc",
            "str r3, [sp, 0x10]",
            "ldr r3, [0x000252dc]",
            "add r3, pc, r3",
            "str r3, [sp, 0x14]",
            "b 0x25008",
            "ldrb r3, [r5]",
            "cmp r3, 3",
            "bls 0x252b0",
            "bl sym.imp.time",
            "movw r3, 0x4ee",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000252e0]",
            "ldr r0, [0x000252e4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xff",
            "bl sym.imp.printf",
            "ldr r0, [0x000252e8]",
            "mov r1, fp",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x000252d4]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0x252b0",
            "mov r7, 0",
            "add r0, sp, 0x430",
            "str r7, [sp, 0x438]",
            "mov r1, r7",
            "mov r2, 0x3fc",
            "add r0, r0, 0xc",
            "bl sym.imp.memset",
            "str r7, [sp, 0x18]",
            "mov r1, r7",
            "mov r2, 0x1c",
            "add r0, sp, 0x1c",
            "bl sym.imp.memset",
            "str r7, [sp, 0x838]",
            "add r0, sp, 0x830",
            "mov r1, r7",
            "mov r2, 0x3fc",
            "add r0, r0, 0xc",
            "bl sym.imp.memset",
            "ldr r1, [sp, 0x14]",
            "add r3, sp, 0x430",
            "add r3, r3, 8",
            "mov r0, fp",
            "str r3, [sp, 8]",
            "mov r2, r3",
            "bl sym.imp.sscanf",
            "ldrb r2, [sp, 0x438]",
            "ldr r3, [sp, 8]",
            "cmp r2, r7",
            "bne 0x25028",
            "add fp, sp, 0x38",
            "mov r1, 0x400",
            "mov r0, fp",
            "mov r2, sl",
            "bl sym.imp.fgets",
            "subs r3, r0, 0",
            "bne 0x24f94",
            "b 0x25128",
            "ldr r1, [0x000252ec]",
            "mov r0, r3",
            "add r1, pc, r1",
            "bl sym.imp.strtok",
            "subs r1, r0, 0",
            "beq 0x25054",
            "ldrb r3, [r1]",
            "cmp r3, r7",
            "beq 0x25054",
            "add r0, sp, 0x18",
            "bl sym.imp.strcpy",
            "ldr r1, [0x000252f0]",
            "mov r0, 0",
            "add r1, pc, r1",
            "bl sym.imp.strtok",
            "subs r1, r0, 0",
            "beq 0x25084",
            "ldrb r3, [r1]",
            "cmp r3, 0",
            "beq 0x25084",
            "add r0, sp, 0x830",
            "add r0, r0, 8",
            "bl sym.imp.strcpy",
            "ldrb r3, [sp, 0x18]",
            "cmp r3, 0",
            "beq 0x25008",
            "ldrb r3, [sp, 0x838]",
            "cmp r3, 0",
            "beq 0x25008",
            "ldr r0, [0x000252f4]",
            "add fp, sp, 0x18",
            "mov r1, fp",
            "add r0, pc, r0",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "moveq r0, r8",
            "beq 0x25118",
            "ldr r0, [0x000252f8]",
            "mov r1, fp",
            "add r0, pc, r0",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x250fc",
            "add r1, sp, 0x830",
            "mov r0, r6",
            "add r1, r1, 8",
            "bl sym.imp.strcpy",
            "ldr r1, [0x000252fc]",
            "mov r0, sb",
            "mov r2, r6",
            "add r1, pc, r1",
            "bl sym.imp.sprintf",
            "b 0x25008",
            "ldr r0, [0x00025300]",
            "mov r1, fp",
            "add r0, pc, r0",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x25008",
            "ldr r0, [sp, 0xc]",
            "add r1, sp, 0x830",
            "add r1, r1, 8",
            "bl sym.imp.strcpy",
            "b 0x25008",
            "str r3, [sp, 8]",
            "mov r0, sl",
            "bl sym.imp.fclose",
            "ldrb r2, [r5]",
            "ldr r3, [sp, 8]",
            "cmp r2, 3",
            "bls 0x25194",
            "mov r0, r3",
            "bl sym.imp.time",
            "movw r3, 0x52c",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00025304]",
            "ldr r0, [0x00025308]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xff",
            "bl sym.imp.printf",
            "ldr r0, [0x0002530c]",
            "mov r1, r6",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x000252d4]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r5]",
            "cmp r3, 3",
            "bls 0x251f0",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x52d",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00025310]",
            "ldr r0, [0x00025314]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xff",
            "bl sym.imp.printf",
            "ldr r0, [0x00025318]",
            "mov r1, sb",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x000252d4]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r5]",
            "cmp r3, 3",
            "bls 0x2524c",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x52e",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002531c]",
            "ldr r0, [0x00025320]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xff",
            "bl sym.imp.printf",
            "ldr r0, [0x00025324]",
            "mov r1, r8",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x000252d4]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r5]",
            "mov r0, 0",
            "cmp r3, 3",
            "bls 0x252b4",
            "bl sym.imp.time",
            "movw r3, 0x52f",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00025328]",
            "ldr r0, [0x0002532c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xff",
            "bl sym.imp.printf",
            "ldr r0, [0x00025330]",
            "ldr r1, [sp, 0xc]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x000252d4]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, 0",
            "b 0x252b4",
            "mov r0, 0x10",
            "add sp, sp, 0xc30",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.zyEvent_INTFMACCHANGEDEVENTID": {
        "function_address": "0x00018378",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r5, r3",
            "ldr r7, [0x000186c4]",
            "sub sp, sp, 0x18",
            "ldr r3, [0x000186c8]",
            "mov sl, r0",
            "add r7, pc, r7",
            "mov r6, r1",
            "mov sb, r2",
            "ldr r8, [r7, r3]",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "bls 0x183f8",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0x7c",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000186cc]",
            "ldr r0, [0x000186d0]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x34",
            "bl sym.imp.printf",
            "ldr r0, [0x000186d4]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x000186d8]",
            "ldr r3, [r7, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "bls 0x18454",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0x7d",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000186dc]",
            "ldr r0, [0x000186e0]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x34",
            "bl sym.imp.printf",
            "ldr r0, [0x000186e4]",
            "mov r1, sl",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x000186d8]",
            "ldr r3, [r7, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "bls 0x184d0",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0x7e",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000186e8]",
            "ldr r0, [0x000186ec]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x34",
            "bl sym.imp.printf",
            "ldrb r0, [r6, 3]",
            "ldrb r3, [r6, 2]",
            "str r0, [sp]",
            "ldrb r0, [r6, 4]",
            "ldrb r1, [r6]",
            "str r0, [sp, 4]",
            "ldrb r0, [r6, 5]",
            "ldrb r2, [r6, 1]",
            "str r0, [sp, 8]",
            "ldr r0, [0x000186f0]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x000186d8]",
            "ldr r3, [r7, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "bls 0x1852c",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0x7f",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000186f4]",
            "ldr r0, [0x000186f8]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x34",
            "bl sym.imp.printf",
            "ldr r0, [0x000186fc]",
            "mov r1, sb",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x000186d8]",
            "ldr r3, [r7, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "bls 0x185a8",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0x80",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00018700]",
            "ldr r0, [0x00018704]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x34",
            "bl sym.imp.printf",
            "ldrb r0, [r5, 3]",
            "ldrb r3, [r5, 2]",
            "str r0, [sp]",
            "ldrb r0, [r5, 4]",
            "ldrb r1, [r5]",
            "str r0, [sp, 4]",
            "ldrb r0, [r5, 5]",
            "ldrb r2, [r5, 1]",
            "str r0, [sp, 8]",
            "ldr r0, [0x00018708]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x000186d8]",
            "ldr r3, [r7, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, 1",
            "mov r1, 0x24",
            "bl sym.imp.calloc",
            "subs r4, r0, 0",
            "bne 0x18614",
            "ldrb r3, [r8]",
            "cmp r3, 3",
            "bls 0x186bc",
            "bl sym.imp.time",
            "mov r3, 0x85",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001870c]",
            "ldr r0, [0x00018710]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x34",
            "bl sym.imp.printf",
            "ldr r0, [0x00018714]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x000186d8]",
            "ldr r3, [r7, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0x186bc",
            "mov r1, sl",
            "bl sym.imp.strcpy",
            "ldrb r3, [r6]",
            "strb r3, [r4, 0x10]",
            "ldrb r3, [r6, 1]",
            "strb r3, [r4, 0x11]",
            "ldrb r3, [r6, 2]",
            "strb r3, [r4, 0x12]",
            "ldrb r3, [r6, 3]",
            "strb r3, [r4, 0x13]",
            "ldrb r3, [r6, 4]",
            "strb r3, [r4, 0x14]",
            "ldrb r3, [r6, 5]",
            "str sb, [r4, 0x18]",
            "strb r3, [r4, 0x15]",
            "ldrb r3, [r5]",
            "strb r3, [r4, 0x1c]",
            "ldrb r3, [r5, 1]",
            "strb r3, [r4, 0x1d]",
            "ldrb r3, [r5, 2]",
            "strb r3, [r4, 0x1e]",
            "ldrb r3, [r5, 3]",
            "strb r3, [r4, 0x1f]",
            "ldrb r3, [r5, 4]",
            "strb r3, [r4, 0x20]",
            "ldrb r3, [r5, 5]",
            "strb r3, [r4, 0x21]",
            "mov r3, 0",
            "str r3, [sp, 0x14]",
            "ldr r3, [0x00018718]",
            "ldr r3, [r7, r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x186ac",
            "mov r0, 1",
            "mov r1, r4",
            "add r2, sp, 0x14",
            "blx r3",
            "mov r0, r4",
            "add sp, sp, 0x18",
            "pop {r4, r5, r6, r7, r8, sb, sl, lr}",
            "b sym.imp.free",
            "add sp, sp, 0x18",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "sym.zyNetCtrl_SpeedTest_getSpeedTestSendCtrlflag": {
        "function_address": "0x0002a25c",
        "instructions": [
            "push {r4, lr}",
            "ldr r4, [0x0002a2b0]",
            "ldr r3, [0x0002a2b4]",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "bne 0x2a284",
            "mov r0, 0x10",
            "pop {r4, pc}",
            "mov r0, 0",
            "bl sym.imp.time",
            "ldr r3, [0x0002a2b8]",
            "ldr r3, [r4, r3]",
            "ldr r2, [r3]",
            "rsb r2, r2, r0",
            "cmp r2, 4",
            "ble 0x2a27c",
            "str r0, [r3]",
            "mov r0, 0",
            "pop {r4, pc}"
        ]
    },
    "sym.os_sleep": {
        "function_address": "0x00033d14",
        "instructions": [
            "cmp r0, 0",
            "push {r4, lr}",
            "mov r4, r1",
            "beq 0x33d28",
            "bl sym.imp.sleep",
            "cmp r4, 0",
            "popeq {r4, pc}",
            "mov r0, r4",
            "pop {r4, lr}",
            "b sym.imp.usleep"
        ]
    },
    "sym.os_mktime": {
        "function_address": "0x00033df4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "sub sl, r1, 1",
            "cmp sl, 0xb",
            "mov sb, r3",
            "movw r1, 0x7b1",
            "movls r3, 0",
            "movhi r3, 1",
            "sub sp, sp, 0x30",
            "mov r7, r0",
            "cmp r0, r1",
            "movgt r1, r3",
            "orrle r1, r3, 1",
            "ldr r5, [sp, 0x50]",
            "cmp r1, 0",
            "ldr r4, [sp, 0x54]",
            "bne 0x33ee4",
            "sub r3, r2, 1",
            "mov r6, r2",
            "cmp r3, 0x1e",
            "bhi 0x33ee4",
            "cmp sb, 0x17",
            "bhi 0x33ee4",
            "cmp r5, 0x3b",
            "bhi 0x33ee4",
            "cmp r4, 0x3c",
            "bhi 0x33ee4",
            "add r8, sp, 4",
            "mov r2, 0x2c",
            "mov r0, r8",
            "bl sym.imp.memset",
            "str sl, [sp, 0x14]",
            "sub ip, r7, 0x760",
            "str r6, [sp, 0x10]",
            "sub ip, ip, 0xc",
            "stmib sp, {r4, r5, sb}",
            "str ip, [sp, 0x18]",
            "mov r0, r8",
            "add r4, sp, 0x30",
            "bl sym.imp.mktime",
            "str r0, [r4, -0x30]!",
            "mov r0, sp",
            "bl sym.imp.localtime",
            "cmp r0, 0",
            "bne 0x33eac",
            "mov r0, 0",
            "b 0x33ecc",
            "bl sym.imp.mktime",
            "mov r5, r0",
            "mov r0, sp",
            "bl sym.imp.gmtime",
            "cmp r0, 0",
            "beq 0x33ea4",
            "bl sym.imp.mktime",
            "rsb r0, r5, r0",
            "ldr r3, [sp]",
            "rsb r0, r0, r3",
            "ldr r3, [sp, 0x58]",
            "str r0, [r3]",
            "mov r0, 0",
            "b 0x33ee8",
            "mvn r0, 0",
            "add sp, sp, 0x30",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "sym.imp.mktime": {
        "function_address": "0x00008df4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x5dc]!"
        ]
    },
    "sym.imp.localtime": {
        "function_address": "0x000090c4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x3fc]!"
        ]
    },
    "sym.imp.gmtime": {
        "function_address": "0x000094fc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x12c]!"
        ]
    },
    "sym.SHA1Final": {
        "function_address": "0x00033070",
        "instructions": [
            "push {r0, r1, r2, r4, r5, r6, r7, lr}",
            "mov r3, 0",
            "mov r6, r0",
            "mov r4, r1",
            "mov r5, sp",
            "mvn r2, r3",
            "cmp r3, 3",
            "movls r1, 0x14",
            "movhi r1, 0x10",
            "add r1, r4, r1",
            "and r2, r2, 3",
            "ldr r1, [r1, 4]",
            "lsl r2, r2, 3",
            "lsr r2, r1, r2",
            "strb r2, [r3, r5]",
            "add r3, r3, 1",
            "cmp r3, 8",
            "bne 0x33084",
            "ldr r1, [0x00033168]",
            "mov r0, r4",
            "ldr r7, [0x0003316c]",
            "mov r2, 1",
            "add r1, pc, r1",
            "add r7, pc, r7",
            "bl fcn.00008770",
            "ldr r3, [r4, 0x14]",
            "mov r0, r4",
            "and r3, r3, 0x1f8",
            "cmp r3, 0x1c0",
            "beq 0x330f8",
            "mov r1, r7",
            "mov r2, 1",
            "bl fcn.00008770",
            "b 0x330d4",
            "mov r1, sp",
            "mov r2, 8",
            "mov r5, 0",
            "bl fcn.00008770",
            "mvn r3, r5",
            "lsr r2, r5, 2",
            "and r3, r3, 3",
            "ldr r2, [r4, r2, lsl 2]",
            "lsl r3, r3, 3",
            "lsr r3, r2, r3",
            "strb r3, [r6, r5]",
            "add r5, r5, 1",
            "cmp r5, 0x14",
            "bne 0x33108",
            "add r0, r4, 0x1c",
            "mov r1, 0",
            "mov r2, 0x40",
            "bl sym.imp.memset",
            "mov r2, r5",
            "mov r0, r4",
            "mov r1, 0",
            "bl sym.imp.memset",
            "add r0, r4, 0x14",
            "mov r1, 0",
            "mov r2, 8",
            "bl sym.imp.memset",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.00008770": {
        "function_address": "0x00008770",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0xa34]!"
        ]
    },
    "sym.zyEvent_INTFNBRREMOVEDEVENTID": {
        "function_address": "0x000192f0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x2c",
            "ldr r5, [0x000196d0]",
            "mov sb, r3",
            "ldrb r3, [sp, 0x54]",
            "mov fp, r0",
            "add r5, pc, r5",
            "mov r4, r1",
            "str r3, [sp, 0x10]",
            "mov sl, r2",
            "ldrb r3, [sp, 0x58]",
            "ldrb r8, [sp, 0x50]",
            "str r3, [sp, 0x14]",
            "ldrb r3, [sp, 0x5c]",
            "str r3, [sp, 0x18]",
            "ldrb r3, [sp, 0x60]",
            "str r3, [sp, 0x1c]",
            "ldr r3, [0x000196d4]",
            "ldr r6, [r5, r3]",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x19394",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0x124",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000196d8]",
            "ldr r0, [0x000196dc]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xb6",
            "bl sym.imp.printf",
            "ldr r0, [0x000196e0]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x000196e4]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x193f0",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x125",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000196e8]",
            "ldr r0, [0x000196ec]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xb6",
            "bl sym.imp.printf",
            "ldr r0, [0x000196f0]",
            "mov r1, fp",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x000196e4]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x1946c",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x126",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000196f4]",
            "ldr r0, [0x000196f8]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xb6",
            "bl sym.imp.printf",
            "ldrb r0, [r4, 3]",
            "ldrb r3, [r4, 2]",
            "ldrb r1, [r4]",
            "ldrb r2, [r4, 1]",
            "str r0, [sp]",
            "ldrb r0, [r4, 4]",
            "str r0, [sp, 4]",
            "ldrb r0, [r4, 5]",
            "str r0, [sp, 8]",
            "ldr r0, [0x000196fc]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x000196e4]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x194c8",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x127",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00019700]",
            "ldr r0, [0x00019704]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xb6",
            "bl sym.imp.printf",
            "ldr r0, [0x00019708]",
            "mov r1, sl",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x000196e4]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x19544",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0x128",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001970c]",
            "ldr r0, [0x00019710]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xb6",
            "bl sym.imp.printf",
            "ldr r3, [sp, 0x14]",
            "mov r1, sb",
            "ldr r0, [0x00019714]",
            "mov r2, r8",
            "str r3, [sp]",
            "ldr r3, [sp, 0x18]",
            "add r0, pc, r0",
            "str r3, [sp, 4]",
            "ldr r3, [sp, 0x1c]",
            "str r3, [sp, 8]",
            "ldr r3, [sp, 0x10]",
            "bl sym.imp.printf",
            "ldr r3, [0x000196e4]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, 1",
            "mov r1, 0x24",
            "bl sym.imp.calloc",
            "subs r7, r0, 0",
            "bne 0x1959c",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x196c8",
            "bl sym.imp.time",
            "movw r3, 0x12d",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00019718]",
            "ldr r0, [0x0001971c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xb6",
            "bl sym.imp.printf",
            "ldr r0, [0x00019720]",
            "add r0, pc, r0",
            "b 0x19644",
            "mov r1, fp",
            "bl sym.imp.strcpy",
            "ldrb r2, [r4]",
            "mov r1, 1",
            "mov r0, 6",
            "strb r2, [r7, 0x10]",
            "ldrb r2, [r4, 1]",
            "strb r2, [r7, 0x11]",
            "ldrb r2, [r4, 2]",
            "strb r2, [r7, 0x12]",
            "ldrb r2, [r4, 3]",
            "strb r2, [r7, 0x13]",
            "ldrb r2, [r4, 4]",
            "strb r2, [r7, 0x14]",
            "ldrb r2, [r4, 5]",
            "str sl, [r7, 0x18]",
            "strb r2, [r7, 0x15]",
            "strh r1, [r7, 0x1c]",
            "bl sym.imp.calloc",
            "str r0, [r7, 0x20]",
            "cmp r0, 0",
            "mov r4, r0",
            "bne 0x1965c",
            "mov r0, r7",
            "bl sym.imp.free",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x196c8",
            "mov r0, r4",
            "bl sym.imp.time",
            "movw r3, 0x13e",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00019724]",
            "ldr r0, [0x00019728]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xb6",
            "bl sym.imp.printf",
            "ldr r0, [0x0001972c]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x000196e4]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0x196c8",
            "ldr r3, [sp, 0x10]",
            "mov r2, 0",
            "str r2, [sp, 0x24]",
            "strb r3, [r0, 2]",
            "ldr r3, [sp, 0x14]",
            "ldr r2, [0x00019730]",
            "strb r3, [r0, 3]",
            "ldr r3, [sp, 0x18]",
            "strb sb, [r0]",
            "strb r3, [r0, 4]",
            "ldr r3, [sp, 0x1c]",
            "strb r8, [r0, 1]",
            "strb r3, [r0, 5]",
            "ldr r2, [r5, r2]",
            "ldr ip, [r2]",
            "cmp ip, 0",
            "beq 0x196b0",
            "mov r0, 8",
            "mov r1, r7",
            "add r2, sp, 0x24",
            "blx ip",
            "ldr r0, [r7, 0x20]",
            "bl sym.imp.free",
            "mov r0, r7",
            "add sp, sp, 0x2c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "b sym.imp.free",
            "add sp, sp, 0x2c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.wps_process_m2": {
        "function_address": "0x00030d24",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "mov r4, r0",
            "ldr r3, [r2, 0x10]",
            "sub sp, sp, 0x1f4",
            "mov r5, r2",
            "cmp r3, 0",
            "beq 0x30dcc",
            "mov r7, r1",
            "add r2, r0, 0x46",
            "add r1, r3, 0x10",
            "ldr r0, [r3], 4",
            "cmp r3, r1",
            "str r0, [r2], 4",
            "bne 0x30d4c",
            "ldr r1, [r5, 0xc]",
            "cmp r1, 0",
            "beq 0x30dcc",
            "add r0, r4, 0x36",
            "mov r2, 0x10",
            "bl sym.imp.memcmp",
            "cmp r0, 0",
            "bne 0x30dcc",
            "ldr r3, [r5, 0x14]",
            "cmp r3, 0",
            "addne r2, r4, 0x20",
            "addne r1, r3, 0x10",
            "beq 0x30dcc",
            "ldr r0, [r3], 4",
            "cmp r3, r1",
            "str r0, [r2], 4",
            "bne 0x30d90",
            "ldr r3, [r4]",
            "ldr r2, [r3]",
            "cmp r2, 0",
            "bne 0x30f84",
            "ldr r3, [r5, 0xd4]",
            "ldr r2, [r5, 0xd8]",
            "str r3, [sp]",
            "cmp r3, 0",
            "cmpne r2, 0",
            "str r2, [sp, 4]",
            "bne 0x30dd4",
            "mov r3, 0xc",
            "b 0x30f74",
            "ldr r3, [r4, 0x168]",
            "cmp r3, 0",
            "bne 0x30fa4",
            "ldr r0, [r4, 0xe0]",
            "bl fcn.00008f74",
            "ldm sp, {r0, r1}",
            "bl fcn.0000889c",
            "str r0, [r4, 0xe0]",
            "cmp r0, 0",
            "beq 0x30dcc",
            "mov r0, r4",
            "bl fcn.00008b84",
            "cmp r0, 0",
            "blt 0x30dcc",
            "ldr r1, [r5, 0x4c]",
            "mov r0, r4",
            "mov r2, r7",
            "bl fcn.00008d7c",
            "cmp r0, 0",
            "bne 0x30dcc",
            "add r0, r4, 0x200",
            "mov r1, r5",
            "bl fcn.00008aa0",
            "cmp r0, 0",
            "bne 0x30dcc",
            "ldr r1, [r5, 0xdc]",
            "mov r0, r4",
            "ldr r2, [r5, 0xe0]",
            "bl fcn.00008ab8",
            "subs r5, r0, 0",
            "beq 0x30dcc",
            "add r1, sp, 8",
            "bl fcn.00008c8c",
            "cmp r0, 0",
            "blt 0x30fe8",
            "ldr r2, [sp, 0x78]",
            "mov r0, r4",
            "mov r1, r5",
            "bl fcn.00008878",
            "subs r6, r0, 0",
            "bne 0x30fe8",
            "ldr r3, [sp, 0x7c]",
            "ldr r2, [r4]",
            "ldrb r1, [r3]",
            "ldrb r3, [r3, 1]",
            "orr r3, r3, r1, lsl 8",
            "strh r3, [r2, 0xe0]",
            "ldr r3, [sp, 0x80]",
            "ldr r2, [r4]",
            "ldrb r1, [r3]",
            "ldrb r3, [r3, 1]",
            "orr r3, r3, r1, lsl 8",
            "strh r3, [r2, 0xde]",
            "ldr r0, [r4]",
            "ldr r2, [sp, 0xf0]",
            "ldr r1, [sp, 0xec]",
            "add r0, r0, 0x20",
            "bl sym.imp.memcpy",
            "ldr r2, [r4]",
            "ldr r3, [sp, 0xf0]",
            "add r3, r2, r3",
            "strb r6, [r3, 0x20]",
            "ldr r2, [sp, 0xf0]",
            "ldr r3, [r4]",
            "str r2, [r3, 0x44]",
            "ldr r3, [r4]",
            "ldr r0, [r3, 0xe8]",
            "cmp r0, 0",
            "beq 0x30eec",
            "bl sym.imp.free",
            "ldr r0, [sp, 0xf8]",
            "mov r1, 1",
            "ldr r6, [r4]",
            "add r0, r0, 1",
            "bl sym.imp.calloc",
            "str r0, [r6, 0xe8]",
            "mov r6, 0",
            "ldr r3, [r4]",
            "ldr r1, [sp, 0xf4]",
            "ldr r0, [r3, 0xe8]",
            "ldr r2, [sp, 0xf8]",
            "bl sym.imp.memcpy",
            "ldr r3, [r4]",
            "ldr r2, [r3, 0xe8]",
            "ldr r3, [sp, 0xf8]",
            "strb r6, [r2, r3]",
            "ldr r2, [sp, 0xf8]",
            "ldr r3, [r4]",
            "str r2, [r3, 0xec]",
            "ldr r0, [r4]",
            "ldr r1, [sp, 0x1e8]",
            "ldr r2, [sp, 0x1ec]",
            "add r0, r0, 0x15c",
            "bl sym.imp.memcpy",
            "ldr r2, [r4]",
            "mov r0, r5",
            "ldr r3, [sp, 0x1ec]",
            "add r3, r2, r3",
            "strb r6, [r3, 0x15c]",
            "ldr r2, [sp, 0x1ec]",
            "ldr r3, [r4]",
            "str r2, [r3, 0x158]",
            "bl fcn.00008f74",
            "mov r3, 9",
            "str r3, [r4, 0xc]",
            "mov r0, 1",
            "add sp, sp, 0x1f4",
            "pop {r4, r5, r6, r7, pc}",
            "ldr r3, [r3, 0xc]",
            "bics r2, r3, 2",
            "bne 0x30f9c",
            "ldr r3, [r4, 0x138]",
            "cmp r3, 0",
            "bne 0x30db0",
            "mov r2, 0xf",
            "b 0x30fdc",
            "add r6, sp, 8",
            "mov r1, sp",
            "add r2, sp, 4",
            "mov r3, r6",
            "mov r0, 1",
            "bl fcn.00008b18",
            "add r1, r4, 0x150",
            "mov r0, r6",
            "add r1, r1, 2",
            "mov r2, 0x14",
            "bl sym.imp.memcmp",
            "cmp r0, 0",
            "beq 0x30de0",
            "mov r2, 0x14",
            "mov r3, 0x288",
            "strh r2, [r4, r3]",
            "b 0x30dcc",
            "mov r0, r5",
            "bl fcn.00008f74",
            "b 0x30dcc"
        ]
    },
    "fcn.00008d7c": {
        "function_address": "0x00008d7c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x62c]!"
        ]
    },
    "fcn.00008ab8": {
        "function_address": "0x00008ab8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x804]!"
        ]
    },
    "fcn.00008878": {
        "function_address": "0x00008878",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x984]!"
        ]
    },
    "sym.FW_upgrade": {
        "function_address": "0x0002415c",
        "instructions": [
            "push {r4, lr}",
            "sub sp, sp, 0x400",
            "ldr r4, [0x00024248]",
            "sub sp, sp, 8",
            "ldr r3, [0x0002424c]",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x241d0",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x289",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00024250]",
            "ldr r0, [0x00024254]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x80",
            "bl sym.imp.printf",
            "ldr r0, [0x00024258]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0002425c]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x00024260]",
            "mov r0, 4",
            "ldr r3, [r4, r3]",
            "str r0, [r3]",
            "bl fcn.00009034",
            "mov r1, 0",
            "mov r2, 0x3fc",
            "str r1, [sp, 8]",
            "add r0, sp, 0xc",
            "bl sym.imp.memset",
            "ldr r3, [0x00024264]",
            "ldr r2, [r4, r3]",
            "add r4, sp, 8",
            "mov r0, r4",
            "ldrb r3, [r2]",
            "cmp r3, 0",
            "beq 0x24224",
            "ldr r1, [0x00024268]",
            "add r1, pc, r1",
            "bl sym.imp.sprintf",
            "b 0x24230",
            "ldr r1, [0x0002426c]",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "mov r0, r4",
            "bl sym.imp.system",
            "mov r0, 4",
            "add sp, sp, 0x400",
            "add sp, sp, 8",
            "pop {r4, pc}"
        ]
    },
    "sym.wpabuf_resize": {
        "function_address": "0x0002e8bc",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r6, r0",
            "ldr r4, [r0]",
            "mov r5, r1",
            "cmp r4, 0",
            "bne 0x2e8f0",
            "mov r0, r1",
            "bl fcn.00008ddc",
            "str r0, [r6]",
            "cmp r0, 0",
            "movne r0, 0",
            "mvneq r0, 0",
            "pop {r3, r4, r5, r6, r7, pc}",
            "ldr r1, [r4, 4]",
            "ldr r3, [r4]",
            "add r1, r5, r1",
            "cmp r1, r3",
            "bls 0x2e988",
            "ldr r3, [r4, 0xc]",
            "ands r7, r3, 1",
            "beq 0x2e944",
            "ldr r0, [r4, 8]",
            "bl sym.imp.realloc",
            "subs r6, r0, 0",
            "bne 0x2e928",
            "mvn r0, 0",
            "pop {r3, r4, r5, r6, r7, pc}",
            "ldr r0, [r4, 4]",
            "mov r1, 0",
            "mov r2, r5",
            "add r0, r6, r0",
            "bl sym.imp.memset",
            "str r6, [r4, 8]",
            "b 0x2e97c",
            "mov r0, r4",
            "add r1, r1, 0x10",
            "bl sym.imp.realloc",
            "subs r4, r0, 0",
            "beq 0x2e920",
            "ldr r0, [r4, 4]",
            "mov r1, r7",
            "mov r2, r5",
            "add r0, r0, 0x10",
            "add r0, r4, r0",
            "bl sym.imp.memset",
            "add r3, r4, 0x10",
            "str r3, [r4, 8]",
            "str r4, [r6]",
            "ldr r3, [r4, 4]",
            "add r5, r5, r3",
            "str r5, [r4]",
            "mov r0, 0",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "sym.zyNetCtrl_SpeedTest_setSpeedTestState": {
        "function_address": "0x0002b154",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "mov r4, r0",
            "ldr r5, [0x0002b2e0]",
            "sub sp, sp, 0x8c",
            "ldr r3, [0x0002b2e4]",
            "mov r6, r1",
            "add r5, pc, r5",
            "ldr r3, [r5, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x2b1d0",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x26f",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002b2e8]",
            "ldr r0, [0x0002b2ec]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xd4",
            "bl sym.imp.printf",
            "ldr r0, [0x0002b2f0]",
            "mov r1, r4",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0002b2f4]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "cmp r4, 1",
            "bhi 0x2b2d4",
            "ldr r3, [0x0002b2f8]",
            "cmp r4, 0",
            "ldr r7, [r5, r3]",
            "bne 0x2b28c",
            "ldr r3, [0x0002b2fc]",
            "mov r2, 0x7c",
            "mov r1, r4",
            "add r0, sp, 0xc",
            "ldr r3, [r5, r3]",
            "add r6, sp, 8",
            "str r4, [sp, 8]",
            "strb r4, [r3]",
            "strb r4, [r3, 1]",
            "strb r4, [r3, 2]",
            "strb r4, [r3, 3]",
            "strb r4, [r3, 4]",
            "strb r4, [r3, 5]",
            "bl sym.imp.memset",
            "ldr r1, [0x0002b300]",
            "mov r0, r6",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "mov r0, r6",
            "bl sym.imp.system",
            "ldr r1, [0x0002b304]",
            "mov r0, r6",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "mov r0, r6",
            "bl sym.imp.system",
            "ldr r1, [0x0002b308]",
            "mov r0, r6",
            "ldr r2, [0x0002b30c]",
            "add r1, pc, r1",
            "add r2, pc, r2",
            "bl sym.imp.sprintf",
            "mov r0, r6",
            "bl sym.imp.system",
            "ldr r3, [0x0002b310]",
            "ldr r1, [0x0002b314]",
            "str r4, [r7]",
            "add r1, pc, r1",
            "ldr r0, [r5, r3]",
            "bl sym.imp.strcpy",
            "b 0x2b2c0",
            "ldr r0, [0x0002b318]",
            "mov r3, 0",
            "str r3, [r7]",
            "add r0, pc, r0",
            "bl sym.imp.remove",
            "cmp r6, 0",
            "beq 0x2b2d4",
            "ldr r3, [0x0002b2fc]",
            "ldr r2, [r6]",
            "ldr r3, [r5, r3]",
            "str r2, [r3]",
            "ldrh r2, [r6, 4]",
            "strh r2, [r3, 4]",
            "ldr r3, [0x0002b31c]",
            "mov r0, 0",
            "ldr r3, [r5, r3]",
            "str r4, [r3]",
            "b 0x2b2d8",
            "mov r0, 0x10",
            "add sp, sp, 0x8c",
            "pop {r4, r5, r6, r7, pc}"
        ]
    },
    "sym.zyNetCtrl_WPS_sendSearchMsg": {
        "function_address": "0x0001b6f0",
        "instructions": [
            "push {r0, r1, r2, r4, r5, lr}",
            "ldr r4, [0x0001b850]",
            "ldr r3, [0x0001b854]",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "ldrb r2, [r3]",
            "mov r5, r3",
            "cmp r2, 3",
            "bls 0x1b760",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x3aa",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001b858]",
            "ldr r0, [0x0001b85c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x55",
            "bl sym.imp.printf",
            "ldr r0, [0x0001b860]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0001b864]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x0001b868]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "cmp r0, 0",
            "bne 0x1b7d0",
            "ldrb r3, [r5]",
            "cmp r3, 3",
            "bls 0x1b7c8",
            "bl sym.imp.time",
            "movw r3, 0x3b6",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001b86c]",
            "ldr r0, [0x0001b870]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x55",
            "bl sym.imp.printf",
            "ldr r0, [0x0001b874]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0001b864]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, 0x10",
            "b 0x1b848",
            "mov r0, 0",
            "bl sym.imp.time",
            "ldr r3, [0x0001b878]",
            "ldr r2, [0x0001b87c]",
            "ldr r3, [r4, r3]",
            "ldr r2, [r4, r2]",
            "ldr r1, [r3]",
            "ldr r2, [r2]",
            "rsb r1, r1, r0",
            "cmp r1, r2",
            "blt 0x1b7c8",
            "str r0, [r3]",
            "ldr r3, [0x0001b880]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x1b7c8",
            "ldr r3, [0x0001b884]",
            "ldr r3, [r4, r3]",
            "ldr r4, [r3]",
            "cmp r4, 0",
            "beq 0x1b844",
            "ldr r3, [r4, 0x208]",
            "cmp r3, 1",
            "bne 0x1b83c",
            "ldrb r0, [r4, 4]",
            "bl fcn.000096b8",
            "ldr r4, [r4]",
            "b 0x1b820",
            "mov r0, r4",
            "add sp, sp, 0xc",
            "pop {r4, r5, pc}"
        ]
    },
    "sym.wps_build_vendor_ext_m1": {
        "function_address": "0x00031490",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r5, r0",
            "ldr r3, [r0, 0x58]",
            "cmp r3, 0",
            "beq 0x314d8",
            "mov r4, r1",
            "mov r0, r1",
            "movw r1, 0x1049",
            "bl fcn.0003100c",
            "ldr r3, [r5, 0x58]",
            "mov r0, r4",
            "ldrh r1, [r3, 4]",
            "bl fcn.0003100c",
            "ldr r3, [r5, 0x58]",
            "mov r0, r4",
            "ldr r1, [r3, 8]",
            "ldr r2, [r3, 4]",
            "bl fcn.0003102c",
            "mov r0, 0",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.security_SecurityCtrl_addDataToList": {
        "function_address": "0x0002cdac",
        "instructions": [
            "push {r0, r1, r2, r3, r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r5, r0",
            "ldr r6, [0x0002cff8]",
            "mov sb, r1",
            "ldr r3, [0x0002cffc]",
            "mov r7, r2",
            "add r6, pc, r6",
            "ldr sl, [r6, r3]",
            "ldrb r3, [sl]",
            "cmp r3, 3",
            "bls 0x2ce48",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0x30",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002d000]",
            "ldr r0, [0x0002d004]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x4f",
            "bl sym.imp.printf",
            "ldrb r0, [r5, 3]",
            "ldrb r3, [r5, 2]",
            "ldrb r1, [r5]",
            "ldrb r2, [r5, 1]",
            "str r0, [sp]",
            "ldrb r0, [r5, 4]",
            "str r0, [sp, 4]",
            "ldrb r0, [r5, 5]",
            "str r0, [sp, 8]",
            "ldr r0, [0x0002d008]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0002d00c]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x0002d010]",
            "ldr r8, [r6, r3]",
            "ldr r4, [r8]",
            "cmp r4, 0",
            "beq 0x2cecc",
            "add r0, r4, 4",
            "mov r1, r5",
            "mov r2, 6",
            "bl sym.imp.memcmp",
            "cmp r0, 0",
            "bne 0x2cec4",
            "mov r6, 1",
            "str r6, [r4, 0x218]",
            "bl sym.imp.time",
            "ldr r3, [r4, 0x210]",
            "str r0, [r4, 0x214]",
            "cmp r3, 0",
            "bne 0x2cfec",
            "mov r3, r6",
            "mov r0, r5",
            "mov r1, r5",
            "mov r2, 0xff",
            "bl fcn.00009268",
            "str r0, [r4, 0x210]",
            "cmp r0, 0",
            "mov r6, r0",
            "bne 0x2cfec",
            "mov r0, r5",
            "bl fcn.00008fbc",
            "mov r0, r6",
            "b 0x2cff0",
            "ldr r4, [r4]",
            "b 0x2ce54",
            "mov r0, 1",
            "mov r1, 0x21c",
            "bl sym.imp.calloc",
            "subs r4, r0, 0",
            "bne 0x2cf38",
            "ldrb r3, [sl]",
            "cmp r3, 3",
            "bls 0x2cfec",
            "bl sym.imp.time",
            "mov r3, 0x56",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002d014]",
            "ldr r0, [0x0002d018]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x4f",
            "bl sym.imp.printf",
            "ldr r0, [0x0002d01c]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0002d00c]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0x2cfec",
            "ldr r0, [r5]",
            "cmp r7, 0",
            "str r0, [r4, 4]",
            "ldrh r3, [r5, 4]",
            "str sb, [r4, 0xc]",
            "strh r3, [r4, 8]",
            "bne 0x2cf60",
            "ldrb r3, [r7]",
            "cmp r3, 0",
            "beq 0x2cf78",
            "mov r0, r7",
            "bl sym.imp.strlen",
            "mov r2, r0",
            "mov r1, r7",
            "add r0, r4, 0x10",
            "bl sym.imp.memcpy",
            "mov r0, 0",
            "bl sym.imp.time",
            "str r0, [r4, 0x214]",
            "mov r1, r5",
            "mov r0, r5",
            "mov r2, 0xff",
            "mov r3, 1",
            "bl fcn.00009268",
            "str r0, [r4, 0x210]",
            "cmp r0, 0",
            "mov r5, r0",
            "bne 0x2cfb8",
            "mov r0, r4",
            "bl sym.imp.free",
            "mov r0, r5",
            "b 0x2cff0",
            "mov r3, 1",
            "str r3, [r4, 0x218]",
            "mov r3, 0",
            "str r3, [r4]",
            "ldr r3, [r8]",
            "cmp r3, 0",
            "streq r4, [r8]",
            "beq 0x2cfec",
            "ldr r2, [r3]",
            "cmp r2, 0",
            "movne r3, r2",
            "bne 0x2cfd8",
            "str r4, [r3]",
            "mov r0, r4",
            "add sp, sp, 0x10",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "sym.os_file_exists": {
        "function_address": "0x0003422c",
        "instructions": [
            "ldr r1, [0x00034258]",
            "push {r3, lr}",
            "add r1, pc, r1",
            "bl sym.imp.fopen",
            "subs r3, r0, 0",
            "beq 0x34250",
            "bl sym.imp.fclose",
            "mov r0, 1",
            "pop {r3, pc}",
            "mov r0, r3",
            "pop {r3, pc}"
        ]
    },
    "sym.getAlDesc": {
        "function_address": "0x0000a008",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, lr}",
            "mov r7, r0",
            "ldr r4, [0x0000a278]",
            "sub sp, sp, 0x224",
            "ldr r3, [0x0000a27c]",
            "add r4, pc, r4",
            "ldr r5, [r4, r3]",
            "ldrb r3, [r5]",
            "cmp r3, 3",
            "bls 0xa07c",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x302",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000a280]",
            "ldr r0, [0x0000a284]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x96",
            "bl sym.imp.printf",
            "ldr r0, [0x0000a288]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000a28c]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "cmp r7, 0",
            "bne 0xa0e4",
            "ldrb r3, [r5]",
            "cmp r3, 3",
            "bls 0xa0dc",
            "mov r0, r7",
            "bl sym.imp.time",
            "movw r3, 0x306",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000a290]",
            "ldr r0, [0x0000a294]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x96",
            "bl sym.imp.printf",
            "ldr r0, [0x0000a298]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000a28c]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r6, 0x10",
            "b 0xa26c",
            "ldr r3, [0x0000a29c]",
            "mov r0, 1",
            "ldr r3, [r4, r3]",
            "ldr r1, [r3]",
            "bl fcn.00008980",
            "subs r6, r0, 0",
            "bne 0xa0dc",
            "ldr r0, [0x0000a2a0]",
            "add r0, pc, r0",
            "bl sym.imp.system",
            "ldr r0, [0x0000a2a4]",
            "ldr r1, [0x0000a2a8]",
            "add r0, pc, r0",
            "add r1, pc, r1",
            "bl sym.imp.fopen",
            "subs r8, r0, 0",
            "bne 0xa18c",
            "ldrb r3, [r5]",
            "cmp r3, 3",
            "bls 0xa17c",
            "bl sym.imp.time",
            "mov r3, 0x314",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000a2ac]",
            "ldr r0, [0x0000a2b0]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x96",
            "bl sym.imp.printf",
            "ldr r0, [0x0000a2b4]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000a28c]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r0, [0x0000a2b8]",
            "add r0, pc, r0",
            "bl sym.imp.remove",
            "b 0xa0dc",
            "ldr sb, [0x0000a2bc]",
            "add r5, sp, 0x20",
            "add sb, pc, sb",
            "mov r0, r5",
            "mov r1, 0x200",
            "mov r2, r8",
            "bl sym.imp.fgets",
            "cmp r0, 0",
            "beq 0xa210",
            "mov r0, r5",
            "mov r1, sb",
            "mov r2, 7",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "bne 0xa198",
            "ldrh r1, [sp, 0x28]",
            "strb r0, [sp, 0xa]",
            "strh r1, [sp, 8]",
            "ldrh r1, [r5, 0xb]",
            "strb r0, [sp, 0xe]",
            "strh r1, [sp, 0xc]",
            "ldrh r1, [r5, 0xe]",
            "strb r0, [sp, 0x12]",
            "strh r1, [sp, 0x10]",
            "ldrh r1, [r5, 0x11]",
            "strb r0, [sp, 0x16]",
            "strh r1, [sp, 0x14]",
            "ldrh r1, [sp, 0x34]",
            "strb r0, [sp, 0x1a]",
            "strh r1, [sp, 0x18]",
            "ldrh r1, [r5, 0x17]",
            "strb r0, [sp, 0x1e]",
            "strh r1, [sp, 0x1c]",
            "mov r0, r8",
            "mov r5, 0",
            "bl sym.imp.fclose",
            "ldr r0, [0x0000a2c0]",
            "add sb, sp, 8",
            "add r0, pc, r0",
            "bl sym.imp.remove",
            "add r8, sb, r5, lsl 2",
            "mov r1, 0",
            "mov r2, 0x10",
            "mov r0, r8",
            "bl sym.imp.strtol",
            "strb r0, [r7, r5]",
            "mov r1, 0",
            "mov r0, r8",
            "mov r2, 0x10",
            "bl sym.imp.strtol",
            "ldr r3, [0x0000a2c4]",
            "ldr r3, [r4, r3]",
            "strb r0, [r3, r5]",
            "add r5, r5, 1",
            "cmp r5, 6",
            "bne 0xa22c",
            "mov r0, r6",
            "add sp, sp, 0x224",
            "pop {r4, r5, r6, r7, r8, sb, pc}"
        ]
    },
    "sym.destroyNetCtrl": {
        "function_address": "0x00009ea4",
        "instructions": [
            "push {r0, r1, r2, r4, r5, lr}",
            "ldr r4, [0x00009f44]",
            "ldr r3, [0x00009f48]",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x9f10",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x2da",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00009f4c]",
            "ldr r0, [0x00009f50]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x77",
            "bl sym.imp.printf",
            "ldr r0, [0x00009f54]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00009f58]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x00009f5c]",
            "mov r0, 0",
            "ldr r5, [r4, r3]",
            "ldr r1, [r5]",
            "bl fcn.00008980",
            "subs r4, r0, 0",
            "movne r4, 0x10",
            "bne 0x9f38",
            "bl fcn.0000943c",
            "str r4, [r5]",
            "mov r0, r4",
            "add sp, sp, 0xc",
            "pop {r4, r5, pc}"
        ]
    },
    "sym.zyNetCtrl_SpeedTest_testGatewayServer": {
        "function_address": "0x0002b7e8",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "sub sp, sp, 0x410",
            "ldr r5, [0x0002b9ac]",
            "sub sp, sp, 0xc",
            "mov r4, 0",
            "mov r2, 0x3fc",
            "str r4, [sp, 0x18]",
            "mov r1, r4",
            "add r5, pc, r5",
            "add r6, sp, 0x18",
            "add r0, sp, 0x1c",
            "bl sym.imp.memset",
            "str r4, [sp, 8]",
            "mov r1, r4",
            "mov r2, 0xc",
            "sub r0, r6, 0xc",
            "bl sym.imp.memset",
            "ldr r3, [0x0002b9b0]",
            "mov r0, r6",
            "ldr r1, [0x0002b9b4]",
            "add r3, pc, r3",
            "str r3, [sp]",
            "ldr r2, [0x0002b9b8]",
            "ldr r3, [0x0002b9bc]",
            "add r2, pc, r2",
            "add r3, pc, r3",
            "add r1, pc, r1",
            "bl sym.imp.sprintf",
            "ldr r3, [0x0002b9c0]",
            "ldr r3, [r5, r3]",
            "ldrb r2, [r3]",
            "mov r7, r3",
            "cmp r2, 3",
            "bls 0x2b8c4",
            "mov r0, r4",
            "bl sym.imp.time",
            "movw r3, 0x2cd",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002b9c4]",
            "ldr r0, [0x0002b9c8]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x148",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x0002b9cc]",
            "mov r1, r6",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0002b9d0]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r4, [0x0002b9d4]",
            "mov r0, r6",
            "bl sym.imp.system",
            "ldr r1, [0x0002b9d8]",
            "add r4, pc, r4",
            "add r1, pc, r1",
            "mov r0, r4",
            "bl sym.imp.fopen",
            "subs r6, r0, 0",
            "bne 0x2b950",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x2b99c",
            "bl sym.imp.time",
            "movw r3, 0x2d3",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002b9dc]",
            "ldr r0, [0x0002b9e0]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x148",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x0002b9e4]",
            "ldr r1, [0x0002b9e8]",
            "add r0, pc, r0",
            "add r1, pc, r1",
            "bl sym.imp.printf",
            "ldr r3, [0x0002b9d0]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0x2b99c",
            "add r5, sp, 8",
            "mov r1, 0x10",
            "mov r0, r5",
            "mov r2, r6",
            "bl sym.imp.fgets",
            "mov r0, r6",
            "bl sym.imp.fclose",
            "ldr r1, [0x0002b9ec]",
            "mov r0, r5",
            "mov r2, 2",
            "add r1, pc, r1",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "mov r0, r4",
            "movne r5, 0x10",
            "moveq r5, 0",
            "bl sym.imp.remove",
            "mov r0, r5",
            "b 0x2b9a0",
            "mov r0, 0x10",
            "add sp, sp, 0x410",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, pc}"
        ]
    },
    "sym.zyNetCtrl_initNetCtrl": {
        "function_address": "0x000098b4",
        "instructions": [
            "push {r0, r1, r2, r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "ldr r6, [0x00009a90]",
            "ldr r3, [0x00009a94]",
            "add r6, pc, r6",
            "ldr r3, [r6, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x991c",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0x82",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r0, [0x00009a98]",
            "ldr r3, [0x00009a9c]",
            "add r0, pc, r0",
            "add r3, pc, r3",
            "bl sym.imp.printf",
            "ldr r0, [0x00009aa0]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00009aa4]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "bl fcn.0000892c",
            "bl fcn.00008710",
            "bl fcn.00008c14",
            "bl fcn.00008e54",
            "ldr r3, [0x00009aa8]",
            "mov r7, 0",
            "mov sb, 6",
            "ldr r3, [r6, r3]",
            "ldr r4, [r3]",
            "ldr r3, [0x00009aac]",
            "ldr r8, [r6, r3]",
            "ldr r3, [r8]",
            "cmp r7, r3",
            "bge 0x9a6c",
            "ldr r3, [r4, 0x14]",
            "cmp r3, 0",
            "bne 0x9974",
            "ldrh r3, [r4, 0x18]",
            "cmp r3, 0",
            "moveq r5, sl",
            "ldreq r4, [r4]",
            "beq 0x9a60",
            "ldr r3, [0x00009ab0]",
            "cmp r7, 0",
            "mov r0, 1",
            "mov r1, 0x48",
            "ldr fp, [r6, r3]",
            "beq 0x9998",
            "ldr r3, [fp]",
            "cmp r3, 0",
            "bne 0x99a8",
            "bl sym.imp.calloc",
            "str r0, [fp]",
            "mov r5, r0",
            "b 0x99b4",
            "bl sym.imp.calloc",
            "str r0, [sl]",
            "mov r5, r0",
            "add r1, r4, 4",
            "add r0, r5, 4",
            "bl sym.imp.strcpy",
            "mov r2, r4",
            "mov r3, r5",
            "mov r1, 0",
            "ldrb r0, [r2, 0x14]",
            "add r1, r1, 1",
            "cmp r1, 6",
            "add r2, r2, 1",
            "strb r0, [r3, 0x14]",
            "add r3, r3, 1",
            "bne 0x99cc",
            "ldr r3, [r4, 0x1c]",
            "str r3, [r5, 0x1c]",
            "ldr r3, [r4, 0x20]",
            "str r3, [r5, 0x20]",
            "ldr r3, [r4, 0x24]",
            "str r3, [r5, 0x24]",
            "ldr r3, [r4, 0x30]",
            "str r3, [r5, 0x30]",
            "ldrh r3, [r4, 0x40]",
            "strh r3, [r5, 0x40]",
            "ldrh r0, [r4, 0x40]",
            "bl sym.imp.calloc",
            "str r0, [r5, 0x44]",
            "mov r3, 0",
            "ldrh r2, [r4, 0x40]",
            "mul r2, sb, r2",
            "cmp r3, r2",
            "bhs 0x9a48",
            "ldr r2, [r4, 0x44]",
            "ldrb r1, [r2, r3]",
            "ldr r2, [r5, 0x44]",
            "strb r1, [r2, r3]",
            "add r3, r3, 1",
            "b 0x9a20",
            "ldr r3, [0x00009ab4]",
            "ldr r4, [r4]",
            "ldr r3, [r6, r3]",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "add r7, r7, 1",
            "mov sl, r5",
            "b 0x9948",
            "bl fcn.000094d8",
            "bl fcn.00008e48",
            "ldr r3, [0x00009ab8]",
            "mov r2, 1",
            "mov r0, 0",
            "ldr r3, [r6, r3]",
            "str r2, [r3]",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.zyNetCtrl_getDeviceSendMsgEnable": {
        "function_address": "0x00012c04",
        "instructions": [
            "push {r4, lr}",
            "subs r4, r0, 0",
            "beq 0x12c44",
            "ldr r1, [0x00012c4c]",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "popeq {r4, pc}",
            "ldr r1, [0x00012c50]",
            "mov r0, r4",
            "add r1, pc, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "movne r0, 0x10",
            "moveq r0, 0",
            "pop {r4, pc}",
            "mov r0, 0x10",
            "pop {r4, pc}"
        ]
    },
    "sym.zyNetCtrl_WPS_getWPSConfByBand": {
        "function_address": "0x00021958",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r5, r1",
            "ldr r3, [0x000219d0]",
            "ldr r2, [0x000219d4]",
            "add r3, pc, r3",
            "ldr r3, [r3, r2]",
            "ldr r4, [r3]",
            "cmp r4, 0",
            "beq 0x219c8",
            "ldrb r3, [r4, 4]",
            "cmp r3, r0",
            "bne 0x219c0",
            "add r1, r4, 5",
            "add r0, r5, 5",
            "bl sym.imp.strcpy",
            "add r0, r5, 0x104",
            "add r1, r4, 0x104",
            "add r1, r1, 1",
            "add r0, r0, 1",
            "bl sym.imp.strcpy",
            "ldr r3, [r4, 0x208]",
            "mov r0, 0",
            "str r3, [r5, 0x208]",
            "ldr r3, [r4, 0x20c]",
            "str r3, [r5, 0x20c]",
            "pop {r3, r4, r5, pc}",
            "ldr r4, [r4]",
            "b 0x21974",
            "mov r0, 0x10",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.wps_validate_wsc_nack": {
        "function_address": "0x000301f4",
        "instructions": [
            "cmp r0, 0",
            "beq 0x30298",
            "push {r4, r5, lr}",
            "sub sp, sp, 0x1ec",
            "mov r1, sp",
            "bl fcn.00008c8c",
            "cmp r0, 0",
            "bge 0x3021c",
            "mvn r0, 0",
            "b 0x30290",
            "ldr r5, [sp, 4]",
            "ldr r0, [sp]",
            "adds r4, r5, 0",
            "movne r4, 1",
            "bl fcn.0002f058",
            "cmp r0, 0",
            "bne 0x30284",
            "ldr r0, [sp, 8]",
            "bl fcn.0002efd8",
            "cmp r0, 0",
            "bne 0x30284",
            "ldr r3, [sp, 0xc]",
            "cmp r3, 0",
            "beq 0x30284",
            "ldr r3, [sp, 0x10]",
            "cmp r3, 0",
            "beq 0x30284",
            "ldr r0, [sp, 0x3c]",
            "bl fcn.0002f000",
            "cmp r0, 0",
            "bne 0x30284",
            "mov r0, r5",
            "mov r1, r4",
            "bl fcn.0002ed7c",
            "cmp r0, 0",
            "beq 0x30290",
            "cmp r4, 0",
            "bne 0x30214",
            "mov r0, r4",
            "add sp, sp, 0x1ec",
            "pop {r4, r5, pc}",
            "mvn r0, 0",
            "bx lr"
        ]
    },
    "sym.FW_getNewFWVersionByPlatform": {
        "function_address": "0x000263ec",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov sl, r3",
            "ldr r4, [0x00026e3c]",
            "sub sp, sp, 0x4a0",
            "ldr r3, [0x00026e40]",
            "sub sp, sp, 0xc",
            "add r4, pc, r4",
            "mov r5, r0",
            "mov r7, r1",
            "mov r8, r2",
            "ldr r6, [r4, r3]",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x26470",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x536",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00026e44]",
            "ldr r0, [0x00026e48]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x18c",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "mov r0, 0xa",
            "bl sym.imp.putchar",
            "ldr r3, [0x00026e4c]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov sb, 0",
            "mov r2, 0xfc",
            "str sb, [sp, 0xa8]",
            "add r0, sp, 0xac",
            "mov r1, sb",
            "bl sym.imp.memset",
            "ldrb r2, [sl]",
            "cmp r2, sb",
            "beq 0x26740",
            "ldr r3, [sp, 0x4d0]",
            "ldrb r2, [r3]",
            "cmp r2, 0",
            "beq 0x26740",
            "ldr r2, [0x00026e50]",
            "ldr r2, [r4, r2]",
            "ldr fp, [r2]",
            "str r2, [sp, 0x14]",
            "cmp fp, 0",
            "beq 0x265c8",
            "ldr r1, [sp, 0x4d0]",
            "add r0, fp, 4",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x26548",
            "ldr r2, [0x00026e54]",
            "ldr r2, [r4, r2]",
            "ldrb r2, [r2]",
            "cmp r2, 4",
            "bne 0x26514",
            "ldrb r2, [fp, 0x1a4]",
            "cmp r2, 0",
            "beq 0x26548",
            "add r1, fp, 0x1a4",
            "mov r0, r5",
            "bl sym.imp.strcpy",
            "add r1, fp, 0x224",
            "mov r0, r7",
            "bl sym.imp.strcpy",
            "mov r0, r8",
            "add r1, fp, 0x2a4",
            "b 0x26540",
            "ldrb r2, [fp, 0x24]",
            "cmp r2, 0",
            "beq 0x26548",
            "add r1, fp, 0x24",
            "mov r0, r5",
            "bl sym.imp.strcpy",
            "add r1, fp, 0xa4",
            "mov r0, r7",
            "bl sym.imp.strcpy",
            "mov r0, r8",
            "add r1, fp, 0x124",
            "add sb, sb, 1",
            "bl sym.imp.strcpy",
            "ldr fp, [fp]",
            "cmp fp, 0",
            "bne 0x264bc",
            "cmp sb, 0",
            "beq 0x265c8",
            "ldrb r3, [r6]",
            "mov r0, fp",
            "cmp r3, 3",
            "bls 0x26e30",
            "bl sym.imp.time",
            "movw r3, 0x56c",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00026e58]",
            "ldr r0, [0x00026e5c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x18c",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x00026e60]",
            "mov r3, r8",
            "mov r1, r5",
            "mov r2, r7",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00026e4c]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0x26e10",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x26624",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x571",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00026e64]",
            "ldr r0, [0x00026e68]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x18c",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x00026e6c]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00026e4c]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r0, [sp, 0x4d0]",
            "mov r1, sl",
            "bl sym.imp.strcmp",
            "subs fp, r0, 0",
            "add ip, sp, 0xa8",
            "bne 0x26b40",
            "ldr r3, [0x00026e54]",
            "ldr r3, [r4, r3]",
            "ldrb sl, [r3]",
            "cmp sl, 4",
            "bne 0x26748",
            "ldr r3, [0x00026e70]",
            "mov r0, r5",
            "mov r1, r7",
            "mov r2, r8",
            "add r3, pc, r3",
            "str r3, [sp]",
            "mov r3, ip",
            "bl fcn.00009370",
            "cmp r0, 0",
            "beq 0x26cec",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x266d4",
            "mov r0, fp",
            "bl sym.imp.time",
            "movw r3, 0x57c",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, sl",
            "ldr r3, [0x00026e74]",
            "ldr r0, [0x00026e78]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x18c",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x00026e7c]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00026e4c]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r4, 0",
            "mov r2, 0x1fc",
            "str r4, [sp, 0x2a8]",
            "mov r1, r4",
            "add r0, sp, 0x2ac",
            "add r5, sp, 0x1a8",
            "bl sym.imp.memset",
            "str r4, [sp, 0x1a8]",
            "mov r1, r4",
            "mov r2, 0xc",
            "add r0, sp, 0x1ac",
            "bl sym.imp.memset",
            "mov r0, r5",
            "add r4, sp, 0x2a8",
            "bl loc.imp.getzy1905Version",
            "ldr r3, [0x00026e80]",
            "mov r0, r4",
            "ldr r1, [0x00026e84]",
            "ldr r2, [0x00026e88]",
            "add r3, pc, r3",
            "str r3, [sp]",
            "mov r3, r5",
            "add r1, pc, r1",
            "add r2, pc, r2",
            "bl sym.imp.sprintf",
            "mov r0, r4",
            "bl sym.imp.system",
            "mov r0, 0x10",
            "b 0x26e30",
            "ldr r3, [0x00026e8c]",
            "mov r0, r5",
            "mov r1, r7",
            "mov r2, r8",
            "add r3, pc, r3",
            "add sl, sp, 0x2ac",
            "str r3, [sp]",
            "mov r3, ip",
            "bl fcn.00009370",
            "ldrb r3, [r6]",
            "cmp r0, 0",
            "beq 0x26990",
            "cmp r3, 3",
            "bls 0x267d0",
            "mov r0, fp",
            "bl sym.imp.time",
            "movw r3, 0x58e",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00026e90]",
            "ldr r0, [0x00026e94]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x18c",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x00026e98]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00026e4c]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov sb, 0",
            "mov r0, sl",
            "str sb, [sp, 0x2a8]",
            "mov r1, sb",
            "mov r2, 0x1fc",
            "add sl, sp, 0x28",
            "bl sym.imp.memset",
            "str sb, [sp, 0x28]",
            "mov r1, sb",
            "mov r2, 0x7c",
            "add r0, sp, 0x2c",
            "bl sym.imp.memset",
            "str sb, [sp, 0x18]",
            "mov r2, 0xc",
            "mov r1, sb",
            "add r0, sp, 0x1c",
            "bl sym.imp.memset",
            "add r3, sp, 0x18",
            "add fp, sp, 0x2a8",
            "str r3, [sp, 0x10]",
            "mov r0, r3",
            "bl loc.imp.getzy1905Version",
            "ldr r1, [0x00026e9c]",
            "mov r0, sl",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "ldr r2, [0x00026ea0]",
            "mov r0, fp",
            "ldr r1, [0x00026ea4]",
            "add r2, pc, r2",
            "ldr r3, [sp, 0x10]",
            "add r1, pc, r1",
            "str r2, [sp]",
            "mov r2, sl",
            "ldr sl, [0x00026ea8]",
            "bl sym.imp.sprintf",
            "mov r0, fp",
            "add sl, pc, sl",
            "bl sym.imp.system",
            "str sb, [sp, 0x1a8]",
            "mov r1, sb",
            "mov r2, 0x7c",
            "add r0, sp, 0x1ac",
            "bl sym.imp.memset",
            "ldr r1, [0x00026eac]",
            "mov r0, sl",
            "add r1, pc, r1",
            "bl sym.imp.fopen",
            "ldrb r3, [r6]",
            "subs fp, r0, 0",
            "beq 0x2694c",
            "cmp r3, 3",
            "bls 0x268f4",
            "mov r0, sb",
            "bl sym.imp.time",
            "movw r3, 0x59e",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00026eb0]",
            "ldr r0, [0x00026eb4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x18c",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x00026eb8]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00026e4c]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "add sl, sp, 0x1a8",
            "mov r2, fp",
            "mov r0, sl",
            "mov r1, 0x80",
            "bl sym.imp.fgets",
            "ldr r1, [0x00026ebc]",
            "mov r2, r5",
            "mov r0, sl",
            "add r1, pc, r1",
            "bl sym.imp.sscanf",
            "ldr r1, [0x00026ec0]",
            "mov r2, r5",
            "mov r0, r7",
            "add r1, pc, r1",
            "bl sym.imp.sprintf",
            "ldr r1, [0x00026ec4]",
            "mov r0, r8",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "mov r0, fp",
            "bl sym.imp.fclose",
            "b 0x26cec",
            "cmp r3, 3",
            "bls 0x26740",
            "bl sym.imp.time",
            "movw r3, 0x5a9",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00026ec8]",
            "ldr r0, [0x00026ecc]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x18c",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x00026ed0]",
            "add r0, pc, r0",
            "b 0x26b24",
            "cmp r3, 3",
            "bls 0x269e4",
            "bl sym.imp.time",
            "movw r3, 0x5b1",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00026ed4]",
            "ldr r0, [0x00026ed8]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x18c",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x00026edc]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00026e4c]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov fp, 0",
            "mov r2, 0x7c",
            "str fp, [sp, 0x1a8]",
            "mov r1, fp",
            "add r0, sp, 0x1ac",
            "bl sym.imp.memset",
            "str fp, [sp, 0x2a8]",
            "mov r0, sl",
            "ldr sl, [0x00026ee0]",
            "mov r1, fp",
            "mov r2, 0x7c",
            "add sl, pc, sl",
            "bl sym.imp.memset",
            "ldr r1, [0x00026ee4]",
            "mov r0, sl",
            "add r1, pc, r1",
            "bl sym.imp.fopen",
            "subs ip, r0, 0",
            "beq 0x26ae0",
            "str ip, [sp, 0xc]",
            "add r3, sp, 0x1a8",
            "str r3, [sp, 0x10]",
            "mov r2, ip",
            "mov r0, r3",
            "mov r1, 0x80",
            "bl sym.imp.fgets",
            "ldr ip, [sp, 0xc]",
            "add sl, sp, 0x2a8",
            "mov r0, ip",
            "bl sym.imp.fclose",
            "ldr r3, [sp, 0x10]",
            "mov r2, sl",
            "ldr r1, [0x00026ee8]",
            "mov r0, r3",
            "add r1, pc, r1",
            "bl sym.imp.sscanf",
            "mov r0, sl",
            "mov r1, r5",
            "bl sym.imp.strcmp",
            "cmp r0, fp",
            "beq 0x26cec",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x26740",
            "mov r0, fp",
            "bl sym.imp.time",
            "movw r3, 0x5c1",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00026eec]",
            "ldr r0, [0x00026ef0]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x18c",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x00026ef4]",
            "mov r1, sl",
            "mov r2, r5",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "b 0x26b2c",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x26740",
            "bl sym.imp.time",
            "movw r3, 0x5c7",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00026ef8]",
            "ldr r0, [0x00026efc]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x18c",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x00026f00]",
            "add r0, pc, r0",
            "mov r1, sl",
            "bl sym.imp.printf",
            "ldr r3, [0x00026e4c]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0x26740",
            "str ip, [sp, 0xc]",
            "mov fp, 0",
            "str fp, [sp, 0x1a8]",
            "mov r1, fp",
            "mov r2, 0xfc",
            "add r0, sp, 0x1ac",
            "bl sym.imp.memset",
            "ldr r1, [0x00026f04]",
            "add sl, sp, 0x1a8",
            "ldr r2, [0x00026f08]",
            "mov r0, sl",
            "ldr r3, [sp, 0x4d0]",
            "add r1, pc, r1",
            "add r2, pc, r2",
            "bl sym.imp.sprintf",
            "ldrb r3, [r6]",
            "ldr ip, [sp, 0xc]",
            "cmp r3, 3",
            "bls 0x26be4",
            "mov r0, fp",
            "bl sym.imp.time",
            "movw r3, 0x5d5",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00026f0c]",
            "ldr r0, [0x00026f10]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x18c",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x00026f14]",
            "mov r1, sl",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00026e4c]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr ip, [sp, 0xc]",
            "str sl, [sp]",
            "mov r0, r5",
            "mov r1, r7",
            "mov r2, r8",
            "mov r3, ip",
            "bl fcn.00009370",
            "cmp r0, 0",
            "beq 0x26cec",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x26c60",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x5da",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00026f18]",
            "ldr r0, [0x00026f1c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x18c",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x00026f20]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00026e4c]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r4, 0",
            "mov r2, 0x1fc",
            "str r4, [sp, 0x2a8]",
            "mov r1, r4",
            "add r0, sp, 0x2ac",
            "add r6, sp, 0x18",
            "bl sym.imp.memset",
            "str r4, [sp, 0x28]",
            "mov r1, r4",
            "mov r2, 0x7c",
            "add r0, sp, 0x2c",
            "bl sym.imp.memset",
            "str r4, [sp, 0x18]",
            "mov r1, r4",
            "mov r2, 0xc",
            "add r0, sp, 0x1c",
            "bl sym.imp.memset",
            "mov r0, r6",
            "add r5, sp, 0x28",
            "bl loc.imp.getzy1905Version",
            "ldr r1, [0x00026f24]",
            "mov r0, r5",
            "ldr r2, [sp, 0x4d0]",
            "add r4, sp, 0x2a8",
            "add r1, pc, r1",
            "bl sym.imp.sprintf",
            "ldr r3, [0x00026f28]",
            "mov r0, r4",
            "ldr r1, [0x00026f2c]",
            "mov r2, r5",
            "add r3, pc, r3",
            "str r3, [sp]",
            "mov r3, r6",
            "add r1, pc, r1",
            "b 0x26734",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0x26d54",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x5eb",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00026f30]",
            "ldr r0, [0x00026f34]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x18c",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x00026f38]",
            "mov r3, r8",
            "mov r1, r5",
            "mov r2, r7",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00026e4c]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [sp, 0x14]",
            "ldr sl, [r3]",
            "cmp sl, 0",
            "beq 0x26d88",
            "mov r6, sl",
            "ldr r1, [sp, 0x4d0]",
            "add r0, r6, 4",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x26dac",
            "ldr r6, [r6]",
            "cmp r6, 0",
            "bne 0x26d68",
            "mov r0, 1",
            "mov r1, 0x324",
            "bl sym.imp.calloc",
            "subs r6, r0, 0",
            "beq 0x26740",
            "cmp sl, 0",
            "ldreq r3, [sp, 0x14]",
            "streq r6, [r3]",
            "bne 0x26e18",
            "ldr r1, [sp, 0x4d0]",
            "add r0, r6, 4",
            "bl sym.imp.strcpy",
            "ldr r3, [0x00026e54]",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 4",
            "bne 0x26dec",
            "mov r1, r5",
            "add r0, r6, 0x1a4",
            "bl sym.imp.strcpy",
            "add r0, r6, 0x224",
            "mov r1, r7",
            "bl sym.imp.strcpy",
            "add r0, r6, 0x2a4",
            "b 0x26e08",
            "mov r1, r5",
            "add r0, r6, 0x24",
            "bl sym.imp.strcpy",
            "add r0, r6, 0xa4",
            "mov r1, r7",
            "bl sym.imp.strcpy",
            "add r0, r6, 0x124",
            "mov r1, r8",
            "bl sym.imp.strcpy",
            "mov r0, 0",
            "b 0x26e30",
            "ldr r3, [sl]",
            "cmp r3, 0",
            "movne sl, r3",
            "bne 0x26e18",
            "str r6, [sl]",
            "b 0x26dac",
            "add sp, sp, 0x4a0",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.zyNetCtrl_destroyNetCtrl": {
        "function_address": "0x00009b5c",
        "instructions": [
            "push {r0, r1, r4, lr}",
            "ldr r4, [0x00009c40]",
            "ldr r3, [0x00009c44]",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x9bc8",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0xeb",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00009c48]",
            "ldr r0, [0x00009c4c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x2d",
            "bl sym.imp.printf",
            "ldr r0, [0x00009c50]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00009c54]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x00009c58]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x9be0",
            "bl fcn.00008e48",
            "ldr r3, [0x00009c5c]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x9bf8",
            "bl fcn.000088d8",
            "ldr r3, [0x00009c60]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x9c10",
            "bl fcn.00009454",
            "ldr r3, [0x00009c64]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x9c28",
            "bl fcn.000094d8",
            "ldr r3, [0x00009c68]",
            "mov r0, 0",
            "ldr r3, [r4, r3]",
            "str r0, [r3]",
            "add sp, sp, 8",
            "pop {r4, pc}"
        ]
    },
    "sym.zyNetCtrl_setWIFIStateSyncList": {
        "function_address": "0x000169ac",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "subs r6, r0, 0",
            "ldr r3, [0x00016a38]",
            "add r3, pc, r3",
            "beq 0x16a30",
            "ldr r2, [0x00016a3c]",
            "ldr r2, [r3, r2]",
            "ldr r4, [r2]",
            "ldr r2, [0x00016a40]",
            "ldr r3, [r3, r2]",
            "ldr r5, [r3]",
            "cmp r4, 0",
            "beq 0x16a28",
            "cmp r5, 0",
            "bne 0x16a18",
            "mov r0, r6",
            "add r1, r4, 4",
            "mov r2, 6",
            "bl sym.imp.memcmp",
            "cmp r0, 0",
            "bne 0x16a20",
            "movw r3, 0x3e7",
            "mov r0, r5",
            "str r3, [r4, 0x118]",
            "mov r3, 1",
            "str r3, [r4, 0x11c]",
            "pop {r4, r5, r6, pc}",
            "cmp r5, 1",
            "streq r5, [r4, 0x11c]",
            "ldr r4, [r4]",
            "b 0x169d8",
            "mov r0, r4",
            "pop {r4, r5, r6, pc}",
            "mov r0, 0x10",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.getWIFIConfig": {
        "function_address": "0x0000f2f0",
        "instructions": [
            "push {r0, r1, r4, r5, r6, lr}",
            "mov r6, r0",
            "ldr r4, [0x0000f394]",
            "ldr r3, [0x0000f398]",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "ldr r3, [0x0000f39c]",
            "ldr r5, [r4, r3]",
            "bls 0xf370",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0xa8f",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000f3a0]",
            "ldr r0, [0x0000f3a4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x324",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x0000f3a8]",
            "ldr r1, [r5]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000f3ac]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [r5]",
            "mov r0, 0",
            "strh r3, [r6]",
            "ldr r3, [0x0000f3b0]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "str r3, [r6, 4]",
            "add sp, sp, 8",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.wps_validate_wsc_ack": {
        "function_address": "0x00030154",
        "instructions": [
            "cmp r0, 0",
            "beq 0x301ec",
            "push {r4, r5, lr}",
            "sub sp, sp, 0x1ec",
            "mov r1, sp",
            "bl fcn.00008c8c",
            "cmp r0, 0",
            "bge 0x3017c",
            "mvn r0, 0",
            "b 0x301e4",
            "ldr r5, [sp, 4]",
            "ldr r0, [sp]",
            "adds r4, r5, 0",
            "movne r4, 1",
            "bl fcn.0002f058",
            "cmp r0, 0",
            "bne 0x301b4",
            "ldr r0, [sp, 8]",
            "bl fcn.0002efd8",
            "cmp r0, 0",
            "bne 0x301b4",
            "ldr r3, [sp, 0xc]",
            "cmp r3, 0",
            "bne 0x301c4",
            "cmp r4, 0",
            "bne 0x30174",
            "mov r0, r4",
            "b 0x301e4",
            "ldr r3, [sp, 0x10]",
            "cmp r3, 0",
            "beq 0x301b4",
            "mov r0, r5",
            "mov r1, r4",
            "bl fcn.0002ed7c",
            "cmp r0, 0",
            "bne 0x301b4",
            "add sp, sp, 0x1ec",
            "pop {r4, r5, pc}",
            "mvn r0, 0",
            "bx lr"
        ]
    },
    "sym.getWPSSyncListByBand": {
        "function_address": "0x0000f22c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x54c]!",
            "push {r0, r1, r2, r4, r5, lr}",
            "subs r5, r0, 0",
            "ldr r4, [0x0000f2d4]",
            "add r4, pc, r4",
            "beq 0xf2c8",
            "ldr r3, [0x0000f2d8]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "cmp r3, 1",
            "bne 0xf2c8",
            "ldr r3, [0x0000f2dc]",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0xf2b8",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0xa85",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000f2e0]",
            "ldr r0, [0x0000f2e4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x310",
            "bl sym.imp.printf",
            "ldr r0, [0x0000f2e8]",
            "ldrb r1, [r5, 6]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000f2ec]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, r5",
            "add sp, sp, 0xc",
            "pop {r4, r5, lr}",
            "b 0x8ecc",
            "mov r0, 0x10",
            "add sp, sp, 0xc",
            "pop {r4, r5, pc}"
        ]
    },
    "sym.zyNetCtrl_tremBridgeList": {
        "function_address": "0x000140ec",
        "instructions": [
            "push {r0, r1, r2, r4, r5, r6, r7, lr}",
            "ldr r4, [0x000141bc]",
            "ldr r3, [0x000141c0]",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x1415c",
            "mov r0, 0",
            "mov r5, 0x490",
            "bl sym.imp.time",
            "ldr r3, [0x000141c4]",
            "mov r1, r0",
            "ldr r0, [0x000141c8]",
            "mov r2, 4",
            "add r3, pc, r3",
            "str r5, [sp]",
            "add r3, r3, 0x1f",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r0, [0x000141cc]",
            "mov r1, r5",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x000141d0]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x000141d4]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "mov r6, r3",
            "ldr r3, [0x000141d8]",
            "cmp r0, 0",
            "ldr r4, [r4, r3]",
            "movne r5, 0",
            "streq r0, [r4]",
            "beq 0x141b4",
            "ldr r3, [r4]",
            "cmp r5, r3",
            "bge 0x141a4",
            "ldr r7, [r0]",
            "add r5, r5, 1",
            "bl sym.imp.free",
            "mov r0, r7",
            "b 0x14184",
            "mov r0, 1",
            "mov r3, 0",
            "str r3, [r4]",
            "str r3, [r6]",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, pc}"
        ]
    },
    "sym.zyNetCtrl_WPS_checkAPautoconfigGetRenew": {
        "function_address": "0x00022854",
        "instructions": [
            "ldr r0, [0x00022a70]",
            "ldr r1, [0x00022a74]",
            "push {r3, lr}",
            "add r0, pc, r0",
            "add r1, pc, r1",
            "bl sym.imp.fopen",
            "cmp r0, 0",
            "beq 0x22884",
            "bl sym.imp.fclose",
            "mov r0, 0",
            "mov r1, r0",
            "bl fcn.00008cd4",
            "ldr r0, [0x00022a78]",
            "ldr r1, [0x00022a7c]",
            "add r0, pc, r0",
            "add r1, pc, r1",
            "bl sym.imp.fopen",
            "cmp r0, 0",
            "beq 0x228b0",
            "bl sym.imp.fclose",
            "mov r0, 0",
            "mov r1, 1",
            "bl fcn.00008cd4",
            "ldr r0, [0x00022a80]",
            "ldr r1, [0x00022a84]",
            "add r0, pc, r0",
            "add r1, pc, r1",
            "bl sym.imp.fopen",
            "cmp r0, 0",
            "beq 0x228dc",
            "bl sym.imp.fclose",
            "mov r0, 0",
            "mov r1, 0x20",
            "bl fcn.00008cd4",
            "ldr r0, [0x00022a88]",
            "ldr r1, [0x00022a8c]",
            "add r0, pc, r0",
            "add r1, pc, r1",
            "bl sym.imp.fopen",
            "cmp r0, 0",
            "beq 0x22908",
            "bl sym.imp.fclose",
            "mov r0, 0",
            "mov r1, 0x21",
            "bl fcn.00008cd4",
            "ldr r0, [0x00022a90]",
            "ldr r1, [0x00022a94]",
            "add r0, pc, r0",
            "add r1, pc, r1",
            "bl sym.imp.fopen",
            "cmp r0, 0",
            "beq 0x22934",
            "bl sym.imp.fclose",
            "mov r0, 0",
            "mov r1, 0xc0",
            "bl fcn.00008cd4",
            "ldr r0, [0x00022a98]",
            "ldr r1, [0x00022a9c]",
            "add r0, pc, r0",
            "add r1, pc, r1",
            "bl sym.imp.fopen",
            "cmp r0, 0",
            "beq 0x22960",
            "bl sym.imp.fclose",
            "mov r0, 0",
            "mov r1, 0xe0",
            "bl fcn.00008cd4",
            "ldr r0, [0x00022aa0]",
            "ldr r1, [0x00022aa4]",
            "add r0, pc, r0",
            "add r1, pc, r1",
            "bl sym.imp.fopen",
            "cmp r0, 0",
            "beq 0x2298c",
            "bl sym.imp.fclose",
            "mov r0, 0",
            "mov r1, 0xc1",
            "bl fcn.00008cd4",
            "ldr r0, [0x00022aa8]",
            "ldr r1, [0x00022aac]",
            "add r0, pc, r0",
            "add r1, pc, r1",
            "bl sym.imp.fopen",
            "cmp r0, 0",
            "beq 0x229b8",
            "bl sym.imp.fclose",
            "mov r0, 0",
            "mov r1, 0xe1",
            "bl fcn.00008cd4",
            "ldr r0, [0x00022ab0]",
            "ldr r1, [0x00022ab4]",
            "add r0, pc, r0",
            "add r1, pc, r1",
            "bl sym.imp.fopen",
            "cmp r0, 0",
            "beq 0x229e4",
            "bl sym.imp.fclose",
            "mov r0, 0",
            "mov r1, 0xc9",
            "bl fcn.00008cd4",
            "ldr r0, [0x00022ab8]",
            "ldr r1, [0x00022abc]",
            "add r0, pc, r0",
            "add r1, pc, r1",
            "bl sym.imp.fopen",
            "cmp r0, 0",
            "beq 0x22a10",
            "bl sym.imp.fclose",
            "mov r0, 0",
            "mov r1, 0xe9",
            "bl fcn.00008cd4",
            "ldr r0, [0x00022ac0]",
            "ldr r1, [0x00022ac4]",
            "add r0, pc, r0",
            "add r1, pc, r1",
            "bl sym.imp.fopen",
            "cmp r0, 0",
            "beq 0x22a3c",
            "bl sym.imp.fclose",
            "mov r0, 0",
            "mov r1, 0x40",
            "bl fcn.00008cd4",
            "ldr r0, [0x00022ac8]",
            "ldr r1, [0x00022acc]",
            "add r0, pc, r0",
            "add r1, pc, r1",
            "bl sym.imp.fopen",
            "cmp r0, 0",
            "beq 0x22a68",
            "bl sym.imp.fclose",
            "mov r0, 0",
            "mov r1, 0x41",
            "bl fcn.00008cd4",
            "mov r0, 0",
            "pop {r3, pc}"
        ]
    },
    "sym.bignum_get_unsigned_bin": {
        "function_address": "0x00037434",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, lr}",
            "sub sp, sp, 0x14",
            "mov r5, r2",
            "mov r4, r0",
            "mov r7, r1",
            "bl fcn.00034d70",
            "cmp r0, 0",
            "add sb, r0, 7",
            "movge sb, r0",
            "ands r3, r0, 7",
            "movne r3, 1",
            "cmp r5, 0",
            "add sb, r3, sb, asr 3",
            "beq 0x3747c",
            "ldr r3, [r5]",
            "cmp sb, r3",
            "strhi sb, [r5]",
            "bhi 0x37530",
            "mov r0, sp",
            "mov r1, r4",
            "bl fcn.0003504c",
            "cmp r0, 0",
            "moveq r8, r0",
            "bne 0x37518",
            "ldr r4, [sp]",
            "cmp r4, 0",
            "beq 0x374d8",
            "ldr r3, [sp, 0xc]",
            "mov r0, sp",
            "mov r1, 8",
            "mov r2, sp",
            "ldr r3, [r3]",
            "strb r3, [r7, r8]",
            "mov r3, 0",
            "bl fcn.00035dc8",
            "subs r4, r0, 0",
            "add r8, r8, 1",
            "beq 0x37494",
            "mov r0, sp",
            "bl fcn.00034db0",
            "b 0x3751c",
            "sub r3, r8, 1",
            "mov r2, r7",
            "mov r0, r3",
            "rsb r1, r3, r0",
            "add r2, r2, 1",
            "cmp r1, r3",
            "bge 0x3750c",
            "ldrb ip, [r7, r3]",
            "ldrb r1, [r2, -1]",
            "strb ip, [r2, -1]",
            "strb r1, [r7, r3]",
            "sub r3, r3, 1",
            "b 0x374e4",
            "mov r0, sp",
            "bl fcn.00034db0",
            "b 0x37524",
            "mov r4, r0",
            "cmp r4, 0",
            "bne 0x37530",
            "cmp r5, 0",
            "strne sb, [r5]",
            "b 0x37534",
            "mvn r4, 0",
            "mov r0, r4",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, pc}"
        ]
    },
    "fcn.0003504c": {
        "function_address": "0x0003504c",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r4, r0",
            "mov r5, r1",
            "bl fcn.00034e04",
            "cmp r0, 0",
            "popne {r3, r4, r5, pc}",
            "mov r0, r5",
            "mov r1, r4",
            "pop {r3, r4, r5, lr}",
            "b fcn.00034fbc"
        ]
    },
    "fcn.00035dc8": {
        "function_address": "0x00035dc8",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, lr}",
            "subs r7, r1, 0",
            "sub sp, sp, 0x14",
            "mov r5, r2",
            "mov r6, r3",
            "bgt 0x35e00",
            "mov r1, r2",
            "bl fcn.00034fbc",
            "cmp r6, 0",
            "mov r4, r0",
            "beq 0x35f14",
            "mov r0, r6",
            "bl fcn.00034ce0",
            "b 0x35f14",
            "mov r8, r0",
            "mov r0, sp",
            "bl fcn.00034e04",
            "cmp r0, 0",
            "bne 0x35f18",
            "cmp r6, 0",
            "beq 0x35e44",
            "mov r0, r8",
            "mov r1, r7",
            "mov r2, sp",
            "bl fcn.00035d04",
            "subs sb, r0, 0",
            "beq 0x35e44",
            "mov r0, sp",
            "bl fcn.00034db0",
            "mov r0, sb",
            "b 0x35f18",
            "mov r0, r8",
            "mov r1, r5",
            "bl fcn.00034fbc",
            "subs r8, r0, 0",
            "beq 0x35e68",
            "mov r0, sp",
            "bl fcn.00034db0",
            "mov r0, r8",
            "b 0x35f18",
            "cmp r7, 0x1b",
            "ble 0x35e88",
            "mov r1, 0x1c",
            "mov r0, r7",
            "bl sym.imp.__aeabi_idiv",
            "mov r1, r0",
            "mov r0, r5",
            "bl fcn.00034ec8",
            "mov r0, r7",
            "mov r1, 0x1c",
            "bl sym.imp.__aeabi_idivmod",
            "cmp r1, 0",
            "bne 0x35ebc",
            "mov r0, r5",
            "bl fcn.00034d3c",
            "cmp r6, 0",
            "beq 0x35f04",
            "mov r0, sp",
            "mov r1, r6",
            "bl fcn.00034d0c",
            "b 0x35f04",
            "ldr r2, [r5]",
            "mvn lr, 0",
            "ldr r0, [r5, 0xc]",
            "rsb r7, r1, 0x1c",
            "sub r3, r2, 1",
            "sub r2, r2, 0xc0000001",
            "mvn lr, lr, lsl r1",
            "add r2, r0, r2, lsl 2",
            "mov r0, 0",
            "cmp r3, 0",
            "blt 0x35e9c",
            "ldr ip, [r2]",
            "sub r3, r3, 1",
            "lsl r0, r0, r7",
            "orr r0, r0, ip, lsr r1",
            "str r0, [r2], -4",
            "and r0, ip, lr",
            "b 0x35ee0",
            "mov r0, sp",
            "bl fcn.00034db0",
            "mov r0, 0",
            "b 0x35f18",
            "mov r0, r4",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, pc}"
        ]
    },
    "sym.SHA1Transform": {
        "function_address": "0x00031afc",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0xa4",
            "add r2, sp, 0x60",
            "mov r3, r1",
            "str r0, [sp, 0x40]",
            "mov ip, r2",
            "str r2, [sp, 0x5c]",
            "add lr, r1, 0x40",
            "ldr r0, [r3]",
            "add r3, r3, 8",
            "ldr r1, [r3, -4]",
            "mov r2, ip",
            "cmp r3, lr",
            "stm r2!, {r0, r1}",
            "mov ip, r2",
            "bne 0x31b1c",
            "ldr r7, [sp, 0x40]",
            "ldr r3, [sp, 0x40]",
            "ldr r6, [sp, 0x40]",
            "ldr r7, [r7, 0x10]",
            "ldr r5, [sp, 0x40]",
            "ldr sl, [0x00032b50]",
            "ldr r6, [r6, 0xc]",
            "ldr r3, [r3]",
            "ldr r4, [sp, 0x40]",
            "ldr r5, [r5, 8]",
            "add sl, r7, sl",
            "ldr r4, [r4, 4]",
            "str r3, [sp, 0x14]",
            "add sl, sl, r3, ror 27",
            "mov r3, r6",
            "eor r3, r3, r5",
            "ldr r8, [sp, 0x14]",
            "and r3, r3, r4",
            "eor r3, r3, r6",
            "ror r1, r4, 2",
            "add sl, sl, r3",
            "mov r3, r5",
            "eor r3, r3, r1",
            "ldr r2, [0x00032b50]",
            "and r3, r3, r8",
            "ldr sb, [sp, 0x60]",
            "str r5, [sp, 0xc]",
            "ldr lr, [sp, 0x64]",
            "add r2, r6, r2",
            "eor r3, r3, r5",
            "ldr ip, [sp, 0xc]",
            "rev sb, sb",
            "ldr r5, [sp, 0x68]",
            "add r3, r2, r3",
            "ldr fp, [0x00032b50]",
            "ror r2, r8, 2",
            "add sl, sl, sb",
            "rev lr, lr",
            "eor r0, r2, r1",
            "str r4, [sp, 0x10]",
            "and r0, r0, sl",
            "rev r5, r5",
            "add r3, r3, lr",
            "add fp, ip, fp",
            "ldr r4, [0x00032b50]",
            "add r3, r3, sl, ror 27",
            "str r6, [sp, 8]",
            "ror sl, sl, 2",
            "eor r0, r0, r1",
            "ldr r6, [sp, 0x6c]",
            "add fp, fp, r5",
            "str lr, [sp, 0x18]",
            "add fp, fp, r0",
            "add r4, r1, r4",
            "ldr lr, [0x00032b50]",
            "eor r1, sl, r2",
            "add fp, fp, r3, ror 27",
            "and r1, r1, r3",
            "rev r6, r6",
            "ror r3, r3, 2",
            "str r7, [sp, 4]",
            "ldr r7, [sp, 0x70]",
            "eor r1, r1, r2",
            "ldr r8, [sp, 0x74]",
            "add r4, r4, r6",
            "add lr, r2, lr",
            "eor r2, r3, sl",
            "rev r7, r7",
            "and r2, r2, fp",
            "add r4, r4, r1",
            "ldr ip, [0x00032b50]",
            "add r4, r4, fp, ror 27",
            "rev r8, r8",
            "ror fp, fp, 2",
            "eor r2, r2, sl",
            "add lr, lr, r7",
            "add lr, lr, r2",
            "add ip, r8, ip",
            "eor r2, fp, r3",
            "add ip, ip, sl",
            "and r2, r2, r4",
            "ldr sl, [sp, 0x78]",
            "add lr, lr, r4, ror 27",
            "eor r2, r2, r3",
            "ror r4, r4, 2",
            "ldr r1, [sp, 0x7c]",
            "ldr r0, [0x00032b50]",
            "rev sl, sl",
            "add ip, ip, r2",
            "eor r2, r4, fp",
            "add r0, sl, r0",
            "and r2, r2, lr",
            "rev r1, r1",
            "str r1, [sp, 0x3c]",
            "eor r2, r2, fp",
            "add r0, r0, r3",
            "add r0, r0, r2",
            "ldr r1, [0x00032b50]",
            "ldr r2, [sp, 0x3c]",
            "add ip, ip, lr, ror 27",
            "ror lr, lr, 2",
            "eor r3, lr, r4",
            "add r1, r2, r1",
            "and r3, r3, ip",
            "add r1, r1, fp",
            "ldr fp, [sp, 0x80]",
            "add r0, r0, ip, ror 27",
            "eor r3, r3, r4",
            "ror ip, ip, 2",
            "ldr r2, [0x00032b50]",
            "rev fp, fp",
            "add r1, r1, r3",
            "eor r3, ip, lr",
            "add r2, fp, r2",
            "and r3, r3, r0",
            "eor r3, r3, lr",
            "add r2, r2, r4",
            "add r2, r2, r3",
            "ldr r3, [sp, 0x84]",
            "add r1, r1, r0, ror 27",
            "rev r3, r3",
            "str r3, [sp, 0x2c]",
            "ldr r4, [sp, 0x2c]",
            "ldr r3, [0x00032b50]",
            "ror r0, r0, 2",
            "add r3, r4, r3",
            "add r3, r3, lr",
            "eor r4, r0, ip",
            "ldr lr, [sp, 0x88]",
            "and r4, r4, r1",
            "eor r4, r4, ip",
            "rev lr, lr",
            "str lr, [sp, 0x30]",
            "add r3, r3, r4",
            "ldr lr, [0x00032b50]",
            "ldr r4, [sp, 0x30]",
            "add r2, r2, r1, ror 27",
            "add lr, r4, lr",
            "ror r1, r1, 2",
            "add ip, lr, ip",
            "ldr lr, [sp, 0x8c]",
            "eor r4, r1, r0",
            "rev lr, lr",
            "and r4, r4, r2",
            "str lr, [sp, 0x34]",
            "eor r4, r4, r0",
            "add ip, ip, r4",
            "ldr lr, [0x00032b50]",
            "ldr r4, [sp, 0x34]",
            "add r3, r3, r2, ror 27",
            "add lr, r4, lr",
            "ror r2, r2, 2",
            "add r0, lr, r0",
            "ldr lr, [sp, 0x90]",
            "eor r4, r2, r1",
            "rev lr, lr",
            "and r4, r4, r3",
            "str lr, [sp, 0x38]",
            "eor r4, r4, r1",
            "add r0, r0, r4",
            "ldr lr, [0x00032b50]",
            "ldr r4, [sp, 0x38]",
            "add ip, ip, r3, ror 27",
            "add lr, r4, lr",
            "ror r3, r3, 2",
            "add r1, lr, r1",
            "ldr lr, [sp, 0x94]",
            "eor r4, r3, r2",
            "rev lr, lr",
            "and r4, r4, ip",
            "str lr, [sp, 0x1c]",
            "eor r4, r4, r2",
            "add r1, r1, r4",
            "ldr lr, [0x00032b50]",
            "ldr r4, [sp, 0x1c]",
            "add r0, r0, ip, ror 27",
            "add lr, r4, lr",
            "ror ip, ip, 2",
            "add r2, lr, r2",
            "ldr lr, [sp, 0x98]",
            "eor r4, ip, r3",
            "rev lr, lr",
            "and r4, r4, r0",
            "str lr, [sp, 0x20]",
            "eor r4, r4, r3",
            "add r2, r2, r4",
            "ldr lr, [0x00032b50]",
            "ldr r4, [sp, 0x20]",
            "add r1, r1, r0, ror 27",
            "add lr, r4, lr",
            "ror r0, r0, 2",
            "add r3, lr, r3",
            "ldr lr, [sp, 0x9c]",
            "eor r4, r0, ip",
            "rev lr, lr",
            "and r4, r4, r1",
            "str lr, [sp, 0x24]",
            "eor r4, r4, ip",
            "add r3, r3, r4",
            "ldr lr, [0x00032b50]",
            "ldr r4, [sp, 0x24]",
            "add r2, r2, r1, ror 27",
            "add lr, r4, lr",
            "add ip, lr, ip",
            "eor lr, r5, sb",
            "ldr sb, [sp, 0x1c]",
            "eor lr, lr, fp",
            "ror r1, r1, 2",
            "eor lr, lr, sb",
            "eor r4, r1, r0",
            "ldr sb, [sp, 0x2c]",
            "and r4, r4, r2",
            "ror lr, lr, 0x1f",
            "str lr, [sp, 0x28]",
            "eor r4, r4, r0",
            "add ip, ip, r4",
            "ldr lr, [0x00032b50]",
            "ldr r4, [sp, 0x28]",
            "add r3, r3, r2, ror 27",
            "ror r2, r2, 2",
            "add lr, r4, lr",
            "eor r4, r2, r1",
            "add r0, lr, r0",
            "and r4, r4, r3",
            "ldr lr, [sp, 0x18]",
            "eor r4, r4, r1",
            "add r0, r0, r4",
            "eor lr, lr, r6",
            "ldr r4, [sp, 0x20]",
            "eor lr, lr, sb",
            "eor lr, lr, r4",
            "add ip, ip, r3, ror 27",
            "ror lr, lr, 0x1f",
            "str lr, [sp, 0x18]",
            "ror r3, r3, 2",
            "ldr sb, [sp, 0x18]",
            "ldr lr, [0x00032b50]",
            "eor r4, r3, r2",
            "add lr, sb, lr",
            "and r4, r4, ip",
            "eor r4, r4, r2",
            "add r1, lr, r1",
            "ldr lr, [sp, 0x30]",
            "add r1, r1, r4",
            "eor r5, r5, r7",
            "ldr r4, [sp, 0x24]",
            "eor r5, r5, lr",
            "eor r5, r5, r4",
            "add r0, r0, ip, ror 27",
            "ldr lr, [0x00032b50]",
            "ror ip, ip, 2",
            "ror r5, r5, 0x1f",
            "eor r4, ip, r3",
            "add lr, r5, lr",
            "and r4, r4, r0",
            "eor r4, r4, r3",
            "add r2, lr, r2",
            "add r2, r2, r4",
            "eor r4, r8, r6",
            "ldr r6, [sp, 0x34]",
            "ldr sb, [sp, 0x28]",
            "eor r4, r4, r6",
            "eor r4, r4, sb",
            "add r1, r1, r0, ror 27",
            "ldr lr, [0x00032b50]",
            "ror r0, r0, 2",
            "ror r4, r4, 0x1f",
            "eor r6, r0, ip",
            "add lr, r4, lr",
            "and r6, r6, r1",
            "eor r6, r6, ip",
            "add r3, lr, r3",
            "add r3, r3, r6",
            "ldr r6, [sp, 0x38]",
            "eor lr, sl, r7",
            "ldr r7, [sp, 0x18]",
            "eor lr, lr, r6",
            "eor lr, lr, r7",
            "ldr r6, [0x00032b54]",
            "ror lr, lr, 0x1f",
            "add r6, lr, r6",
            "add r6, r6, ip",
            "ldr ip, [sp, 0x3c]",
            "add r2, r2, r1, ror 27",
            "eor ip, ip, r8",
            "ldr r8, [sp, 0x1c]",
            "ror r1, r1, 2",
            "eor ip, ip, r8",
            "eor ip, ip, r5",
            "eor r7, r1, r0",
            "ldr sb, [0x00032b54]",
            "ror ip, ip, 0x1f",
            "add r3, r3, r2, ror 27",
            "eor r7, r7, r2",
            "ror r2, r2, 2",
            "add r6, r6, r7",
            "add sb, ip, sb",
            "eor r7, r2, r1",
            "eor r7, r7, r3",
            "add sb, sb, r0",
            "add sb, sb, r7",
            "ldr r7, [sp, 0x20]",
            "eor r0, fp, sl",
            "eor r0, r0, r7",
            "eor r0, r0, r4",
            "ldr r7, [0x00032b54]",
            "ror r0, r0, 0x1f",
            "add r6, r6, r3, ror 27",
            "ror r3, r3, 2",
            "eor r8, r3, r2",
            "add r7, r0, r7",
            "eor r8, r8, r6",
            "add r7, r7, r1",
            "add r7, r7, r8",
            "ldr r1, [sp, 0x2c]",
            "ldr r8, [sp, 0x3c]",
            "ldr sl, [0x00032b54]",
            "eor r1, r1, r8",
            "ldr r8, [sp, 0x24]",
            "add sb, sb, r6, ror 27",
            "eor r1, r1, r8",
            "eor r1, r1, lr",
            "ror r6, r6, 2",
            "ror r1, r1, 0x1f",
            "add sl, r1, sl",
            "add sl, sl, r2",
            "ldr r2, [sp, 0x30]",
            "eor r8, r6, r3",
            "eor r2, r2, fp",
            "ldr fp, [sp, 0x28]",
            "eor r8, r8, sb",
            "eor r2, r2, fp",
            "eor r2, r2, ip",
            "add r7, r7, sb, ror 27",
            "add sl, sl, r8",
            "ror sb, sb, 2",
            "ldr r8, [0x00032b54]",
            "ror r2, r2, 0x1f",
            "eor fp, sb, r6",
            "add sl, sl, r7, ror 27",
            "eor fp, fp, r7",
            "add r8, r2, r8",
            "ror r7, r7, 2",
            "str r7, [sp, 0x3c]",
            "add r8, r8, r3",
            "ldr r7, [sp, 0x2c]",
            "ldr r3, [sp, 0x34]",
            "add r8, r8, fp",
            "ldr fp, [sp, 0x18]",
            "eor r3, r3, r7",
            "eor r3, r3, fp",
            "eor r3, r3, r0",
            "ldr fp, [0x00032b54]",
            "ror r3, r3, 0x1f",
            "add fp, r3, fp",
            "add r6, fp, r6",
            "ldr fp, [sp, 0x3c]",
            "ldr r7, [sp, 0x30]",
            "eor fp, fp, sb",
            "eor fp, fp, sl",
            "add r6, r6, fp",
            "ldr fp, [sp, 0x38]",
            "add r8, r8, sl, ror 27",
            "eor fp, fp, r7",
            "eor fp, fp, r5",
            "eor fp, fp, r1",
            "ror sl, sl, 2",
            "ror fp, fp, 0x1f",
            "str fp, [sp, 0x2c]",
            "ldr r7, [sp, 0x2c]",
            "ldr fp, [0x00032b54]",
            "add r6, r6, r8, ror 27",
            "add fp, r7, fp",
            "add sb, fp, sb",
            "ldr fp, [sp, 0x3c]",
            "ldr r7, [sp, 0x34]",
            "eor fp, fp, sl",
            "eor fp, fp, r8",
            "add sb, sb, fp",
            "ldr fp, [sp, 0x1c]",
            "ror r8, r8, 2",
            "eor fp, fp, r7",
            "eor fp, fp, r4",
            "eor fp, fp, r2",
            "add sb, sb, r6, ror 27",
            "ror fp, fp, 0x1f",
            "str fp, [sp, 0x30]",
            "ldr r7, [sp, 0x30]",
            "ldr fp, [0x00032b54]",
            "add fp, r7, fp",
            "ldr r7, [sp, 0x3c]",
            "add fp, fp, r7",
            "str fp, [sp, 0x34]",
            "ldr r7, [sp, 0x34]",
            "eor fp, r8, sl",
            "eor fp, fp, r6",
            "add fp, r7, fp",
            "ror r6, r6, 2",
            "str r6, [sp, 0x3c]",
            "add r7, fp, sb, ror 27",
            "ldr r6, [sp, 0x38]",
            "ldr fp, [sp, 0x20]",
            "eor fp, fp, r6",
            "eor fp, fp, lr",
            "eor fp, fp, r3",
            "ror fp, fp, 0x1f",
            "str fp, [sp, 0x34]",
            "ldr r6, [sp, 0x34]",
            "ldr fp, [0x00032b54]",
            "add fp, r6, fp",
            "add sl, fp, sl",
            "ldr fp, [sp, 0x3c]",
            "ldr r6, [sp, 0x1c]",
            "eor fp, fp, r8",
            "eor fp, fp, sb",
            "add sl, sl, fp",
            "ldr fp, [sp, 0x24]",
            "ror sb, sb, 2",
            "eor fp, fp, r6",
            "ldr r6, [sp, 0x2c]",
            "eor fp, fp, ip",
            "eor fp, fp, r6",
            "add sl, sl, r7, ror 27",
            "ror fp, fp, 0x1f",
            "str fp, [sp, 0x1c]",
            "ldr r6, [sp, 0x1c]",
            "ldr fp, [0x00032b54]",
            "add fp, r6, fp",
            "add r8, fp, r8",
            "ldr fp, [sp, 0x3c]",
            "ldr r6, [sp, 0x30]",
            "eor fp, fp, sb",
            "eor fp, fp, r7",
            "ror r7, r7, 2",
            "str r7, [sp, 0x38]",
            "add r8, r8, fp",
            "ldr r7, [sp, 0x20]",
            "ldr fp, [sp, 0x28]",
            "add r8, r8, sl, ror 27",
            "eor fp, fp, r7",
            "eor fp, fp, r0",
            "eor fp, fp, r6",
            "ror fp, fp, 0x1f",
            "str fp, [sp, 0x20]",
            "ldr r7, [sp, 0x20]",
            "ldr fp, [0x00032b54]",
            "add fp, r7, fp",
            "ldr r7, [sp, 0x3c]",
            "add r6, fp, r7",
            "ldr fp, [sp, 0x38]",
            "ldr r7, [sp, 0x24]",
            "eor fp, fp, sb",
            "eor fp, fp, sl",
            "add r6, r6, fp",
            "ldr fp, [sp, 0x18]",
            "ror sl, sl, 2",
            "eor fp, fp, r7",
            "ldr r7, [sp, 0x34]",
            "eor fp, fp, r1",
            "eor fp, fp, r7",
            "add r6, r6, r8, ror 27",
            "ror fp, fp, 0x1f",
            "str fp, [sp, 0x24]",
            "ldr r7, [sp, 0x24]",
            "ldr fp, [0x00032b54]",
            "add fp, r7, fp",
            "add sb, fp, sb",
            "ldr fp, [sp, 0x38]",
            "ldr r7, [sp, 0x1c]",
            "eor fp, fp, sl",
            "eor fp, fp, r8",
            "add sb, sb, fp",
            "ldr fp, [sp, 0x28]",
            "ror r8, r8, 2",
            "eor fp, fp, r5",
            "eor fp, fp, r2",
            "eor fp, fp, r7",
            "add sb, sb, r6, ror 27",
            "ror fp, fp, 0x1f",
            "str fp, [sp, 0x28]",
            "ldr r7, [sp, 0x28]",
            "ldr fp, [0x00032b54]",
            "eor r5, r5, lr",
            "add fp, r7, fp",
            "ldr r7, [sp, 0x38]",
            "eor lr, lr, r0",
            "add fp, fp, r7",
            "str fp, [sp, 0x38]",
            "ldr r7, [sp, 0x38]",
            "eor fp, r8, sl",
            "eor fp, fp, r6",
            "add fp, r7, fp",
            "add r7, fp, sb, ror 27",
            "ldr fp, [sp, 0x18]",
            "ror r6, r6, 2",
            "eor fp, fp, r4",
            "str r6, [sp, 0x44]",
            "eor r6, fp, r3",
            "ldr fp, [sp, 0x20]",
            "eor r4, r4, ip",
            "eor r6, r6, fp",
            "ldr fp, [0x00032b54]",
            "ror r6, r6, 0x1f",
            "add fp, r6, fp",
            "add sl, fp, sl",
            "ldr fp, [sp, 0x44]",
            "str r6, [sp, 0x18]",
            "eor fp, fp, r8",
            "ldr r6, [sp, 0x2c]",
            "eor fp, fp, sb",
            "add sl, sl, fp",
            "ldr fp, [sp, 0x24]",
            "eor r5, r5, r6",
            "eor r5, r5, fp",
            "ldr fp, [sp, 0x44]",
            "ror r5, r5, 0x1f",
            "str r5, [sp, 0x38]",
            "ldr r6, [sp, 0x38]",
            "ldr r5, [0x00032b54]",
            "ror sb, sb, 2",
            "add r5, r6, r5",
            "eor fp, fp, sb",
            "eor fp, fp, r7",
            "add r8, r5, r8",
            "add r8, r8, fp",
            "ldr fp, [sp, 0x30]",
            "ldr r5, [sp, 0x28]",
            "eor r4, r4, fp",
            "eor r4, r4, r5",
            "ldr fp, [sp, 0x44]",
            "ror r4, r4, 0x1f",
            "str r4, [sp, 0x3c]",
            "ldr r6, [sp, 0x3c]",
            "ldr r4, [0x00032b54]",
            "add sl, sl, r7, ror 27",
            "ror r7, r7, 2",
            "eor r5, r7, sb",
            "add r4, r6, r4",
            "add r6, r4, fp",
            "eor r5, r5, sl",
            "ldr r4, [sp, 0x34]",
            "add r6, r6, r5",
            "ldr r5, [sp, 0x18]",
            "eor lr, lr, r4",
            "eor lr, lr, r5",
            "add r8, r8, sl, ror 27",
            "ror lr, lr, 0x1f",
            "str lr, [sp, 0x44]",
            "ldr fp, [sp, 0x44]",
            "ldr lr, [0x00032b54]",
            "ror sl, sl, 2",
            "add lr, fp, lr",
            "eor r4, sl, r7",
            "eor r4, r4, r8",
            "add sb, lr, sb",
            "ldr lr, [sp, 0x1c]",
            "add sb, sb, r4",
            "eor ip, ip, r1",
            "ldr r4, [sp, 0x38]",
            "eor ip, ip, lr",
            "eor ip, ip, r4",
            "ldr fp, [sp, 0x20]",
            "ror ip, ip, 0x1f",
            "str ip, [sp, 0x48]",
            "ldr r5, [sp, 0x48]",
            "ldr ip, [0x00032b54]",
            "eor r0, r0, r2",
            "add ip, r5, ip",
            "add r7, ip, r7",
            "ldr ip, [sp, 0x3c]",
            "eor r0, r0, fp",
            "add r6, r6, r8, ror 27",
            "eor r0, r0, ip",
            "ror r8, r8, 2",
            "eor lr, r8, sl",
            "eor lr, lr, r6",
            "ror r0, r0, 0x1f",
            "str r0, [sp, 0x4c]",
            "add r7, r7, lr",
            "ldr r0, [0x00032b54]",
            "ldr lr, [sp, 0x4c]",
            "add sb, sb, r6, ror 27",
            "add r0, lr, r0",
            "add sl, r0, sl",
            "ldr r0, [sp, 0x24]",
            "ldr r4, [sp, 0x44]",
            "ror r6, r6, 2",
            "eor r1, r1, r3",
            "eor ip, r6, r8",
            "eor r1, r1, r0",
            "ldr fp, [sp, 0x2c]",
            "eor ip, ip, sb",
            "eor r1, r1, r4",
            "add sl, sl, ip",
            "ldr ip, [sp, 0x28]",
            "ldr lr, [sp, 0x48]",
            "ror r1, r1, 0x1f",
            "eor r2, r2, fp",
            "str r1, [sp, 0x50]",
            "eor r2, r2, ip",
            "ldr r5, [sp, 0x50]",
            "eor r2, r2, lr",
            "ldr r1, [0x00032b54]",
            "add r7, r7, sb, ror 27",
            "ror sb, sb, 2",
            "add r1, r5, r1",
            "eor r0, sb, r6",
            "ror r2, r2, 0x1f",
            "str r2, [sp, 0x54]",
            "eor r0, r0, r7",
            "add r8, r1, r8",
            "add r8, r8, r0",
            "ldr r2, [0x00032b58]",
            "ldr r0, [sp, 0x54]",
            "add sl, sl, r7, ror 27",
            "ror r7, r7, 2",
            "add r2, r0, r2",
            "orr r1, sl, r7",
            "add r6, r2, r6",
            "and r1, r1, sb",
            "and r2, sl, r7",
            "orr r2, r1, r2",
            "ldr r1, [sp, 0x30]",
            "add r6, r6, r2",
            "ldr r2, [sp, 0x18]",
            "ldr r4, [sp, 0x4c]",
            "eor r3, r3, r1",
            "eor r3, r3, r2",
            "eor r3, r3, r4",
            "ldr ip, [sp, 0x2c]",
            "ror r3, r3, 0x1f",
            "str r3, [sp, 0x58]",
            "ldr r5, [sp, 0x58]",
            "ldr fp, [sp, 0x34]",
            "ldr r3, [0x00032b58]",
            "add r8, r8, sl, ror 27",
            "ldr lr, [sp, 0x38]",
            "ror sl, sl, 2",
            "ldr r0, [sp, 0x50]",
            "add r3, r5, r3",
            "orr r2, r8, sl",
            "eor fp, fp, ip",
            "and r2, r2, r7",
            "add sb, r3, sb",
            "eor fp, fp, lr",
            "and r3, r8, sl",
            "orr r3, r2, r3",
            "eor fp, fp, r0",
            "add sb, sb, r3",
            "ldr r3, [0x00032b58]",
            "add r6, r6, r8, ror 27",
            "ror fp, fp, 0x1f",
            "ror r8, r8, 2",
            "ldr r0, [sp, 0x1c]",
            "add r3, fp, r3",
            "orr r2, r6, r8",
            "add r7, r3, r7",
            "and r2, r2, sl",
            "and r3, r6, r8",
            "eor r0, r0, r1",
            "ldr r1, [sp, 0x3c]",
            "orr r3, r2, r3",
            "ldr r2, [sp, 0x54]",
            "eor r0, r0, r1",
            "eor r0, r0, r2",
            "add r7, r7, r3",
            "ldr r3, [0x00032b58]",
            "add sb, sb, r6, ror 27",
            "ror r0, r0, 0x1f",
            "ror r6, r6, 2",
            "add r3, r0, r3",
            "orr r2, sb, r6",
            "add sl, r3, sl",
            "and r2, r2, r8",
            "and r3, sb, r6",
            "orr r3, r2, r3",
            "ldr r4, [sp, 0x20]",
            "add sl, sl, r3",
            "ldr r3, [sp, 0x34]",
            "ldr r5, [sp, 0x44]",
            "str fp, [sp, 0x2c]",
            "eor r4, r4, r3",
            "ldr fp, [sp, 0x58]",
            "eor r4, r4, r5",
            "eor r4, r4, fp",
            "ldr ip, [sp, 0x1c]",
            "str r0, [sp, 0x30]",
            "ldr r3, [0x00032b58]",
            "ldr r0, [sp, 0x24]",
            "add r7, r7, sb, ror 27",
            "ldr lr, [sp, 0x48]",
            "ror sb, sb, 2",
            "ror r4, r4, 0x1f",
            "ldr r1, [sp, 0x2c]",
            "add r3, r4, r3",
            "orr r2, r7, sb",
            "eor r0, r0, ip",
            "and r2, r2, r6",
            "add r8, r3, r8",
            "eor r0, r0, lr",
            "and r3, r7, sb",
            "orr r3, r2, r3",
            "eor r0, r0, r1",
            "add r8, r8, r3",
            "ldr r3, [0x00032b58]",
            "add sl, sl, r7, ror 27",
            "ror r0, r0, 0x1f",
            "ror r7, r7, 2",
            "add r3, r0, r3",
            "orr r2, sl, r7",
            "add r6, r3, r6",
            "and r2, r2, sb",
            "and r3, sl, r7",
            "orr r3, r2, r3",
            "str r4, [sp, 0x34]",
            "add r6, r6, r3",
            "str r0, [sp, 0x1c]",
            "ldr r3, [sp, 0x20]",
            "ldr r2, [sp, 0x28]",
            "ldr r4, [sp, 0x4c]",
            "ldr r5, [sp, 0x30]",
            "eor r2, r2, r3",
            "eor r2, r2, r4",
            "eor r2, r2, r5",
            "ldr ip, [0x00032b58]",
            "ror r2, r2, 0x1f",
            "add r8, r8, sl, ror 27",
            "add ip, r2, ip",
            "ror sl, sl, 2",
            "add sb, ip, sb",
            "orr ip, r8, sl",
            "and r3, r8, sl",
            "and ip, ip, r7",
            "orr ip, ip, r3",
            "add ip, sb, ip",
            "ldr r3, [sp, 0x18]",
            "ldr sb, [sp, 0x24]",
            "ldr fp, [sp, 0x50]",
            "ldr lr, [sp, 0x34]",
            "eor r3, r3, sb",
            "eor r3, r3, fp",
            "eor r3, r3, lr",
            "str r2, [sp, 0x20]",
            "ldr r2, [0x00032b58]",
            "ror r3, r3, 0x1f",
            "add r6, r6, r8, ror 27",
            "add r2, r3, r2",
            "ror r8, r8, 2",
            "ldr r0, [sp, 0x28]",
            "ldr fp, [sp, 0x38]",
            "add r7, r2, r7",
            "orr r2, r6, r8",
            "str r3, [sp, 0x24]",
            "and r2, r2, sl",
            "and r3, r6, r8",
            "ldr r1, [sp, 0x54]",
            "orr r2, r2, r3",
            "eor fp, fp, r0",
            "ldr r3, [sp, 0x1c]",
            "eor fp, fp, r1",
            "eor fp, fp, r3",
            "ldr r5, [0x00032b58]",
            "ror fp, fp, 0x1f",
            "add ip, ip, r6, ror 27",
            "add r5, fp, r5",
            "ror r6, r6, 2",
            "add sl, r5, sl",
            "orr r5, ip, r6",
            "and r3, ip, r6",
            "and r5, r5, r8",
            "ldr r4, [sp, 0x18]",
            "orr r5, r5, r3",
            "ldr r3, [sp, 0x3c]",
            "add r2, r7, r2",
            "ldr r7, [sp, 0x58]",
            "ldr sb, [sp, 0x20]",
            "eor r3, r3, r4",
            "eor r3, r3, r7",
            "eor r3, r3, sb",
            "ldr r1, [0x00032b58]",
            "ror r3, r3, 0x1f",
            "add r2, r2, ip, ror 27",
            "add r1, r3, r1",
            "ror ip, ip, 2",
            "add r8, r1, r8",
            "orr r1, r2, ip",
            "str r3, [sp, 0x18]",
            "and r1, r1, r6",
            "and r3, r2, ip",
            "orr r1, r1, r3",
            "str fp, [sp, 0x28]",
            "add r1, r8, r1",
            "ldr fp, [sp, 0x38]",
            "ldr r8, [sp, 0x44]",
            "ldr lr, [sp, 0x2c]",
            "ldr r0, [sp, 0x24]",
            "eor r8, r8, fp",
            "eor r8, r8, lr",
            "eor r8, r8, r0",
            "ldr r4, [0x00032b58]",
            "ror r8, r8, 0x1f",
            "add r5, sl, r5",
            "add r5, r5, r2, ror 27",
            "add r4, r8, r4",
            "ror r2, r2, 2",
            "add r6, r4, r6",
            "orr r4, r5, r2",
            "and r3, r5, r2",
            "and r4, r4, ip",
            "ldr r7, [sp, 0x48]",
            "orr r4, r4, r3",
            "ldr r3, [sp, 0x3c]",
            "add r4, r6, r4",
            "ldr r6, [sp, 0x30]",
            "ldr sb, [sp, 0x28]",
            "eor r7, r7, r3",
            "eor r7, r7, r6",
            "eor r7, r7, sb",
            "ldr r3, [0x00032b58]",
            "add r1, r1, r5, ror 27",
            "ror r7, r7, 0x1f",
            "ror r5, r5, 2",
            "add r3, r7, r3",
            "orr r0, r1, r5",
            "ldr fp, [sp, 0x44]",
            "and r0, r0, r2",
            "ldr lr, [sp, 0x4c]",
            "add ip, r3, ip",
            "and r3, r1, r5",
            "orr r3, r0, r3",
            "ldr r0, [sp, 0x34]",
            "add ip, ip, r3",
            "eor lr, lr, fp",
            "ldr r3, [sp, 0x18]",
            "eor lr, lr, r0",
            "eor lr, lr, r3",
            "ldr sb, [sp, 0x48]",
            "ror lr, lr, 0x1f",
            "str lr, [sp, 0x38]",
            "ldr r6, [sp, 0x38]",
            "ldr lr, [0x00032b58]",
            "ldr fp, [sp, 0x1c]",
            "add lr, r6, lr",
            "ldr r6, [sp, 0x50]",
            "add r4, r4, r1, ror 27",
            "eor r6, r6, sb",
            "eor r6, r6, fp",
            "eor r6, r6, r8",
            "ror r1, r1, 2",
            "ldr r0, [0x00032b58]",
            "ror r6, r6, 0x1f",
            "add r2, lr, r2",
            "orr lr, r4, r1",
            "add ip, ip, r4, ror 27",
            "and lr, lr, r5",
            "and r3, r4, r1",
            "add r0, r6, r0",
            "ror r4, r4, 2",
            "add r5, r0, r5",
            "orr lr, lr, r3",
            "orr r0, ip, r4",
            "and r3, ip, r4",
            "and r0, r0, r1",
            "ldr sb, [sp, 0x54]",
            "add lr, r2, lr",
            "ldr r2, [sp, 0x4c]",
            "orr r0, r0, r3",
            "ldr r3, [sp, 0x20]",
            "eor sb, sb, r2",
            "eor sb, sb, r3",
            "eor sb, sb, r7",
            "ldr r3, [0x00032b58]",
            "ror sb, sb, 0x1f",
            "add lr, lr, ip, ror 27",
            "ror ip, ip, 2",
            "add r3, sb, r3",
            "orr r2, lr, ip",
            "ldr sl, [sp, 0x58]",
            "and r2, r2, r4",
            "add r0, r5, r0",
            "ldr r5, [sp, 0x50]",
            "ldr fp, [sp, 0x24]",
            "add r1, r3, r1",
            "and r3, lr, ip",
            "orr r3, r2, r3",
            "eor sl, sl, r5",
            "ldr r2, [sp, 0x38]",
            "eor sl, sl, fp",
            "eor sl, sl, r2",
            "ldr r2, [0x00032b58]",
            "ror sl, sl, 0x1f",
            "add r0, r0, lr, ror 27",
            "add r2, sl, r2",
            "ror lr, lr, 2",
            "add r4, r2, r4",
            "orr r2, r0, lr",
            "add r1, r1, r3",
            "and r2, r2, ip",
            "and r3, r0, lr",
            "ldr fp, [sp, 0x2c]",
            "orr r2, r2, r3",
            "ldr r3, [sp, 0x54]",
            "add r2, r4, r2",
            "ldr r4, [sp, 0x28]",
            "eor fp, fp, r3",
            "eor fp, fp, r4",
            "eor fp, fp, r6",
            "ldr r3, [0x00032b58]",
            "ror fp, fp, 0x1f",
            "add r1, r1, r0, ror 27",
            "ror r0, r0, 2",
            "orr r4, r1, r0",
            "add r3, fp, r3",
            "and r4, r4, lr",
            "add r3, r3, ip",
            "and ip, r1, r0",
            "orr ip, r4, ip",
            "ldr r5, [sp, 0x58]",
            "add ip, r3, ip",
            "ldr r3, [sp, 0x30]",
            "ldr r4, [sp, 0x18]",
            "eor r3, r3, r5",
            "eor r3, r3, r4",
            "eor r3, r3, sb",
            "add r2, r2, r1, ror 27",
            "ror r3, r3, 0x1f",
            "str r3, [sp, 0x3c]",
            "ldr r5, [sp, 0x3c]",
            "ldr r3, [0x00032b58]",
            "ror r1, r1, 2",
            "add r3, r5, r3",
            "orr r4, r2, r1",
            "add lr, r3, lr",
            "and r4, r4, r0",
            "and r3, r2, r1",
            "orr r3, r4, r3",
            "add r3, lr, r3",
            "ldr r4, [sp, 0x2c]",
            "ldr lr, [sp, 0x34]",
            "add ip, ip, r2, ror 27",
            "eor lr, lr, r4",
            "eor lr, lr, r8",
            "eor lr, lr, sl",
            "ror r2, r2, 2",
            "ror lr, lr, 0x1f",
            "str lr, [sp, 0x2c]",
            "ldr r5, [sp, 0x2c]",
            "ldr lr, [0x00032b58]",
            "orr r4, ip, r2",
            "add lr, r5, lr",
            "and r4, r4, r1",
            "add r0, lr, r0",
            "and lr, ip, r2",
            "orr lr, r4, lr",
            "add lr, r0, lr",
            "ldr r4, [sp, 0x30]",
            "ldr r0, [sp, 0x1c]",
            "ldr r5, [0x00032b58]",
            "eor r0, r0, r4",
            "eor r0, r0, r7",
            "eor r0, r0, fp",
            "add r3, r3, ip, ror 27",
            "ror r0, r0, 0x1f",
            "ror ip, ip, 2",
            "add r5, r0, r5",
            "add r1, r5, r1",
            "orr r5, r3, ip",
            "str r0, [sp, 0x30]",
            "and r5, r5, r2",
            "and r0, r3, ip",
            "ldr r4, [sp, 0x20]",
            "orr r5, r5, r0",
            "ldr r0, [sp, 0x34]",
            "add r5, r1, r5",
            "ldr r1, [sp, 0x38]",
            "eor r4, r4, r0",
            "ldr r0, [sp, 0x3c]",
            "eor r4, r4, r1",
            "eor r4, r4, r0",
            "add lr, lr, r3, ror 27",
            "ror r4, r4, 0x1f",
            "str r4, [sp, 0x34]",
            "ldr r1, [sp, 0x34]",
            "ldr r4, [0x00032b5c]",
            "ror r3, r3, 2",
            "add r4, r1, r4",
            "ldr r0, [sp, 0x24]",
            "eor r1, r3, ip",
            "add r4, r4, r2",
            "ldr r2, [sp, 0x1c]",
            "eor r1, r1, lr",
            "add r4, r4, r1",
            "eor r0, r0, r2",
            "ldr r1, [sp, 0x2c]",
            "eor r0, r0, r6",
            "eor r0, r0, r1",
            "ldr r2, [0x00032b5c]",
            "ror r0, r0, 0x1f",
            "add r5, r5, lr, ror 27",
            "add r2, r0, r2",
            "ror lr, lr, 2",
            "str r0, [sp, 0x1c]",
            "eor r1, lr, r3",
            "ldr r0, [sp, 0x20]",
            "add ip, r2, ip",
            "ldr r2, [sp, 0x28]",
            "eor r1, r1, r5",
            "add ip, ip, r1",
            "eor r2, r2, r0",
            "ldr r1, [sp, 0x30]",
            "eor r2, r2, sb",
            "eor r2, r2, r1",
            "ldr r1, [0x00032b5c]",
            "add r4, r4, r5, ror 27",
            "ror r2, r2, 0x1f",
            "ror r5, r5, 2",
            "str r2, [sp, 0x20]",
            "add r1, r2, r1",
            "eor r2, r5, lr",
            "eor r2, r2, r4",
            "add r1, r1, r3",
            "add r1, r1, r2",
            "ldr r3, [sp, 0x18]",
            "ldr r2, [sp, 0x24]",
            "ldr r0, [sp, 0x34]",
            "eor r3, r3, r2",
            "eor r3, r3, sl",
            "eor r3, r3, r0",
            "b 0x32b60",
            "ldr r0, [0x00032b5c]",
            "add ip, ip, r4, ror 27",
            "ror r3, r3, 0x1f",
            "ror r4, r4, 2",
            "ldr r2, [sp, 0x28]",
            "str r3, [sp, 0x24]",
            "add r0, r3, r0",
            "eor r3, r4, r5",
            "eor r3, r3, ip",
            "add r0, r0, lr",
            "add r0, r0, r3",
            "eor r2, r2, r8",
            "ldr r3, [sp, 0x1c]",
            "eor r2, r2, fp",
            "eor r2, r2, r3",
            "add r1, r1, ip, ror 27",
            "ror r2, r2, 0x1f",
            "str r2, [sp, 0x28]",
            "ldr lr, [sp, 0x28]",
            "ldr r2, [0x00032b5c]",
            "ror ip, ip, 2",
            "eor r3, ip, r4",
            "add r2, lr, r2",
            "eor r3, r3, r1",
            "add r2, r2, r5",
            "add r2, r2, r3",
            "ldr r3, [sp, 0x18]",
            "ldr r5, [sp, 0x3c]",
            "ldr lr, [sp, 0x20]",
            "eor r3, r3, r7",
            "eor r3, r3, r5",
            "eor r3, r3, lr",
            "add r0, r0, r1, ror 27",
            "ror r3, r3, 0x1f",
            "str r3, [sp, 0x18]",
            "ldr r5, [sp, 0x18]",
            "ldr r3, [0x00032b5c]",
            "ror r1, r1, 2",
            "eor lr, r1, ip",
            "add r3, r5, r3",
            "eor lr, lr, r0",
            "add r3, r3, r4",
            "add r3, r3, lr",
            "ldr lr, [sp, 0x38]",
            "ldr r4, [sp, 0x2c]",
            "ldr r5, [sp, 0x24]",
            "eor r8, r8, lr",
            "eor r8, r8, r4",
            "eor r8, r8, r5",
            "ldr lr, [0x00032b5c]",
            "add r2, r2, r0, ror 27",
            "ror r8, r8, 0x1f",
            "ror r0, r0, 2",
            "eor r4, r0, r1",
            "add lr, r8, lr",
            "eor r4, r4, r2",
            "add lr, lr, ip",
            "ldr ip, [sp, 0x30]",
            "add lr, lr, r4",
            "eor r7, r7, r6",
            "ldr r4, [sp, 0x28]",
            "eor r7, r7, ip",
            "eor r7, r7, r4",
            "ldr ip, [0x00032b5c]",
            "add r3, r3, r2, ror 27",
            "ror r7, r7, 0x1f",
            "ror r2, r2, 2",
            "add ip, r7, ip",
            "eor r4, r2, r0",
            "eor r4, r4, r3",
            "add r1, ip, r1",
            "add r1, r1, r4",
            "ldr r4, [sp, 0x38]",
            "ldr r5, [sp, 0x34]",
            "ldr ip, [sp, 0x18]",
            "eor r4, r4, sb",
            "eor r4, r4, r5",
            "eor r4, r4, ip",
            "ldr r5, [0x00032b5c]",
            "ror r4, r4, 0x1f",
            "add r5, r4, r5",
            "add r5, r5, r0",
            "eor r0, sl, r6",
            "ldr r6, [sp, 0x1c]",
            "add lr, lr, r3, ror 27",
            "ror r3, r3, 2",
            "eor ip, r3, r2",
            "eor r0, r0, r6",
            "eor ip, ip, lr",
            "eor r0, r0, r8",
            "add r5, r5, ip",
            "ldr ip, [0x00032b5c]",
            "ror r0, r0, 0x1f",
            "add ip, r0, ip",
            "add ip, ip, r2",
            "eor r2, fp, sb",
            "ldr sb, [sp, 0x20]",
            "add r1, r1, lr, ror 27",
            "ror lr, lr, 2",
            "eor r6, lr, r3",
            "eor r2, r2, sb",
            "eor r6, r6, r1",
            "eor r2, r2, r7",
            "add ip, ip, r6",
            "ldr r6, [0x00032b5c]",
            "add r5, r5, r1, ror 27",
            "ror r2, r2, 0x1f",
            "ror r1, r1, 2",
            "eor sb, r1, lr",
            "add r6, r2, r6",
            "eor sb, sb, r5",
            "add r6, r6, r3",
            "ldr r3, [sp, 0x3c]",
            "add r6, r6, sb",
            "ldr sb, [sp, 0x24]",
            "eor r3, r3, sl",
            "eor r3, r3, sb",
            "eor r3, r3, r4",
            "ldr sb, [0x00032b5c]",
            "add ip, ip, r5, ror 27",
            "ror r3, r3, 0x1f",
            "ror r5, r5, 2",
            "add sb, r3, sb",
            "eor sl, r5, r1",
            "eor sl, sl, ip",
            "add lr, sb, lr",
            "add lr, lr, sl",
            "ldr sl, [sp, 0x2c]",
            "ldr sb, [0x00032b5c]",
            "eor sl, sl, fp",
            "ldr fp, [sp, 0x28]",
            "add r6, r6, ip, ror 27",
            "eor sl, sl, fp",
            "eor sl, sl, r0",
            "ror ip, ip, 2",
            "ror sl, sl, 0x1f",
            "add sb, sl, sb",
            "eor fp, ip, r5",
            "eor fp, fp, r6",
            "add r1, sb, r1",
            "add r1, r1, fp",
            "ldr sb, [sp, 0x30]",
            "ldr fp, [sp, 0x3c]",
            "add lr, lr, r6, ror 27",
            "eor sb, sb, fp",
            "ldr fp, [sp, 0x18]",
            "ror r6, r6, 2",
            "eor sb, sb, fp",
            "eor sb, sb, r2",
            "ldr fp, [0x00032b5c]",
            "ror sb, sb, 0x1f",
            "add fp, sb, fp",
            "add r5, fp, r5",
            "eor fp, r6, ip",
            "eor fp, fp, lr",
            "str sb, [sp, 0x38]",
            "add r5, r5, fp",
            "ldr sb, [sp, 0x2c]",
            "ldr fp, [sp, 0x34]",
            "add r1, r1, lr, ror 27",
            "eor fp, fp, sb",
            "eor r8, r8, fp",
            "eor r8, r8, r3",
            "ldr fp, [0x00032b5c]",
            "ror r8, r8, 0x1f",
            "ror lr, lr, 2",
            "add fp, r8, fp",
            "add ip, fp, ip",
            "eor fp, lr, r6",
            "eor fp, fp, r1",
            "ldr sb, [sp, 0x30]",
            "add ip, ip, fp",
            "ldr fp, [sp, 0x1c]",
            "add r5, r5, r1, ror 27",
            "eor fp, fp, sb",
            "eor r7, r7, fp",
            "eor sl, sl, r7",
            "ldr r7, [0x00032b5c]",
            "ror r1, r1, 2",
            "ror sl, sl, 0x1f",
            "add r7, sl, r7",
            "eor fp, r1, lr",
            "eor fp, fp, r5",
            "add r6, r7, r6",
            "add r6, r6, fp",
            "ldr r7, [sp, 0x20]",
            "ldr fp, [sp, 0x34]",
            "ldr sb, [sp, 0x38]",
            "eor r7, r7, fp",
            "eor r4, r4, r7",
            "eor sb, sb, r4",
            "ldr fp, [0x00032b5c]",
            "add ip, ip, r5, ror 27",
            "ror sb, sb, 0x1f",
            "ror r5, r5, 2",
            "add fp, sb, fp",
            "eor r4, r5, r1",
            "eor r4, r4, ip",
            "add lr, fp, lr",
            "ldr r7, [sp, 0x1c]",
            "add lr, lr, r4",
            "ldr r4, [sp, 0x24]",
            "add r6, r6, ip, ror 27",
            "eor r4, r4, r7",
            "eor r0, r0, r4",
            "eor r8, r8, r0",
            "ldr r7, [0x00032b5c]",
            "ror ip, ip, 2",
            "ror r8, r8, 0x1f",
            "add r7, r8, r7",
            "eor r0, ip, r5",
            "eor r0, r0, r6",
            "add r1, r7, r1",
            "ldr r8, [sp, 0x20]",
            "add r1, r1, r0",
            "ldr r0, [sp, 0x28]",
            "ldr r4, [0x00032b5c]",
            "eor r0, r0, r8",
            "eor r2, r2, r0",
            "eor sl, sl, r2",
            "add lr, lr, r6, ror 27",
            "ror sl, sl, 0x1f",
            "add r4, sl, r4",
            "ror r6, r6, 2",
            "ldr r0, [sp, 0x18]",
            "add r5, r4, r5",
            "ldr r4, [sp, 0x24]",
            "eor r2, r6, ip",
            "eor r2, r2, lr",
            "eor r0, r0, r4",
            "ldr fp, [sp, 0x14]",
            "eor r3, r3, r0",
            "add r0, sp, 0x60",
            "add r5, r5, r2",
            "ldr r2, [0x00032b5c]",
            "eor sb, sb, r3",
            "add r1, r1, lr, ror 27",
            "add r2, fp, r2",
            "ror lr, lr, 2",
            "add r2, r2, sb, ror 31",
            "eor r4, lr, r6",
            "add r5, r5, r1, ror 27",
            "eor r4, r4, r1",
            "add ip, r2, ip",
            "mov r2, 0x40",
            "ldr r7, [sp, 0x40]",
            "add ip, ip, r4",
            "add ip, ip, r5, ror 27",
            "str ip, [r7]",
            "ldr r8, [sp, 0x10]",
            "ldr sb, [sp, 0xc]",
            "ldr fp, [sp, 8]",
            "ldr ip, [sp, 4]",
            "add r1, sb, r1, ror 2",
            "add lr, lr, fp",
            "add r6, r6, ip",
            "add r5, r5, r8",
            "str r1, [r7, 8]",
            "mov r1, 0",
            "str r5, [r7, 4]",
            "str lr, [r7, 0xc]",
            "str r6, [r7, 0x10]",
            "bl sym.imp.memset",
            "add sp, sp, 0xa4",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.getFwdRuleNum": {
        "function_address": "0x0000c88c",
        "instructions": [
            "push {r0, r1, r4, lr}",
            "ldr r4, [0x0000c920]",
            "ldr r3, [0x0000c924]",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0xc8f8",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x6fa",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000c928]",
            "ldr r0, [0x0000c92c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x19c",
            "bl sym.imp.printf",
            "ldr r0, [0x0000c930]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000c934]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x0000c938]",
            "mov r0, 2",
            "ldr r3, [r4, r3]",
            "ldr r1, [r3]",
            "bl fcn.00008980",
            "cmp r0, 0",
            "movne r0, 0x10",
            "moveq r0, 0",
            "add sp, sp, 8",
            "pop {r4, pc}"
        ]
    },
    "sym.zyNetCtrl_getLEDvalue": {
        "function_address": "0x00011e0c",
        "instructions": [
            "push {r4, r5, lr}",
            "mov r4, 0",
            "ldr r5, [0x00011ebc]",
            "sub sp, sp, 0x94",
            "mov r1, r4",
            "mov r2, 0x7c",
            "str r4, [sp, 0x10]",
            "add r0, sp, 0x14",
            "add r5, pc, r5",
            "bl sym.imp.memset",
            "str r4, [sp]",
            "mov r2, 0xc",
            "mov r1, r4",
            "add r0, sp, 4",
            "bl sym.imp.memset",
            "ldr r1, [0x00011ec0]",
            "add r3, sp, 0x10",
            "mov r0, r3",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "mov r3, r0",
            "mov r2, sp",
            "ldr r0, [0x00011ec4]",
            "mov r1, r3",
            "add r0, pc, r0",
            "bl fcn.00008788",
            "cmp r0, r4",
            "ldr r3, [0x00011ec8]",
            "ldr r0, [r5, r3]",
            "bne 0x11ea4",
            "ldrb r3, [sp]",
            "cmp r3, 0x31",
            "ldreq r1, [0x00011ecc]",
            "addeq r1, pc, r1",
            "beq 0x11eac",
            "ldr r1, [0x00011ed0]",
            "add r1, pc, r1",
            "b 0x11eac",
            "ldr r1, [0x00011ed4]",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "mov r0, 0",
            "add sp, sp, 0x94",
            "pop {r4, r5, pc}"
        ]
    },
    "sym.Log_Registrar_download_check": {
        "function_address": "0x0002bde8",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x294",
            "ldr r6, [0x0002c160]",
            "ldr r3, [0x0002c164]",
            "add r6, pc, r6",
            "ldr sb, [r6, r3]",
            "ldr r3, [sb]",
            "cmp r3, 0",
            "beq 0x2c138",
            "ldr r3, [0x0002c168]",
            "ldr r8, [r6, r3]",
            "ldr r4, [r8]",
            "cmp r4, 0",
            "bne 0x2be80",
            "ldr r3, [0x0002c16c]",
            "ldr r3, [r6, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x2c138",
            "mov r0, r4",
            "bl sym.imp.time",
            "mov r3, 0x33",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r0, [0x0002c170]",
            "ldr r3, [0x0002c174]",
            "add r0, pc, r0",
            "add r3, pc, r3",
            "bl sym.imp.printf",
            "ldr r0, [0x0002c178]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0002c17c]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0x2c138",
            "ldr r7, [0x0002c180]",
            "ldr sl, [0x0002c184]",
            "ldr fp, [0x0002c188]",
            "add r7, pc, r7",
            "add sl, pc, sl",
            "add fp, pc, fp",
            "ldr r3, [r4, 0x8c]",
            "cmp r3, 1",
            "bne 0x2bf60",
            "mov r5, 0",
            "mov r2, 0x1fc",
            "str r5, [sp, 0x90]",
            "mov r1, r5",
            "add r0, sp, 0x94",
            "bl sym.imp.memset",
            "add ip, sp, 0x90",
            "mov r1, r7",
            "str ip, [sp, 0xc]",
            "mov r0, ip",
            "mov r2, sl",
            "add r3, r4, 4",
            "bl sym.imp.sprintf",
            "ldr ip, [sp, 0xc]",
            "mov r1, fp",
            "mov r0, ip",
            "bl sym.imp.fopen",
            "cmp r0, r5",
            "beq 0x2bf60",
            "bl sym.imp.fclose",
            "mov r3, 2",
            "str r3, [r4, 0x8c]",
            "ldr r3, [0x0002c16c]",
            "ldr r3, [r6, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x2bf58",
            "mov r0, r5",
            "bl sym.imp.time",
            "mov r3, 0x4e",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r0, [0x0002c18c]",
            "ldr r3, [0x0002c190]",
            "add r0, pc, r0",
            "add r3, pc, r3",
            "bl sym.imp.printf",
            "ldr r0, [0x0002c194]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0002c17c]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "add r0, r4, 0x84",
            "bl loc.imp.sendAckDownloadLogFile",
            "ldr r4, [r4]",
            "cmp r4, 0",
            "bne 0x2be98",
            "ldr r7, [r8]",
            "mov sl, r4",
            "cmp r7, 0",
            "beq 0x2bf90",
            "ldr r3, [r7, 0x8c]",
            "ldr r7, [r7]",
            "cmp r3, 2",
            "addeq sl, sl, 1",
            "b 0x2bf74",
            "str r7, [sp, 0x10]",
            "mov r1, r7",
            "mov r2, 0x7c",
            "add r0, sp, 0x14",
            "bl sym.imp.memset",
            "mov r0, r7",
            "bl sym.imp.time",
            "ldr r3, [0x0002c198]",
            "ldr r3, [r6, r3]",
            "ldr r1, [r3]",
            "bl sym.imp.difftime",
            "ldr r3, [0x0002c19c]",
            "mov r4, r0",
            "mov r5, r1",
            "ldr r6, [r6, r3]",
            "ldr r3, [r6]",
            "cmp sl, r3",
            "bne 0x2c140",
            "ldr sl, [0x0002c1a0]",
            "add r7, sp, 0x10",
            "ldr r1, [0x0002c1a4]",
            "mov r0, r7",
            "add sl, pc, sl",
            "add r1, pc, r1",
            "mov r2, sl",
            "bl sym.imp.sprintf",
            "mov r0, r7",
            "bl sym.imp.system",
            "ldr r1, [0x0002c1a8]",
            "mov r2, sl",
            "mov r0, r7",
            "add r1, pc, r1",
            "bl sym.imp.sprintf",
            "mov r0, r7",
            "bl sym.imp.system",
            "ldr r3, [0x0002c1ac]",
            "mov r0, r4",
            "mov r1, r5",
            "mov r2, 0",
            "bl sym.imp.__aeabi_dcmpgt",
            "cmp r0, 0",
            "beq 0x2c07c",
            "ldr r5, [0x0002c1b0]",
            "add r4, sp, 0x10",
            "ldr r1, [0x0002c1b4]",
            "mov r0, r4",
            "add r5, pc, r5",
            "add r1, pc, r1",
            "mov r2, r5",
            "bl sym.imp.sprintf",
            "mov r0, r4",
            "bl sym.imp.system",
            "ldr r1, [0x0002c1b8]",
            "mov r0, r4",
            "mov r2, r5",
            "add r1, pc, r1",
            "bl sym.imp.sprintf",
            "mov r0, r4",
            "bl sym.imp.system",
            "ldr sl, [0x0002c1bc]",
            "mov r3, 0",
            "ldr r5, [0x0002c1c0]",
            "ldr fp, [0x0002c1c4]",
            "ldr r7, [r8]",
            "add sl, pc, sl",
            "add r5, pc, r5",
            "add fp, pc, fp",
            "str r3, [sb]",
            "cmp r7, 0",
            "beq 0x2c12c",
            "mov r4, r7",
            "mov r1, 0",
            "add sb, sp, 0x90",
            "mov r2, 0x7c",
            "ldr ip, [r4], 4",
            "add r0, sp, 0x94",
            "str r1, [sp, 0x90]",
            "str ip, [sp, 0xc]",
            "bl sym.imp.memset",
            "mov r1, sl",
            "mov r2, r5",
            "mov r3, r4",
            "mov r0, sb",
            "bl sym.imp.sprintf",
            "mov r0, sb",
            "add sb, sp, 0x10",
            "bl sym.imp.remove",
            "ldr r3, [r7, 0x8c]",
            "mov r1, fp",
            "str r5, [sp]",
            "mov r2, r4",
            "mov r0, sb",
            "sub r3, r3, 2",
            "clz r3, r3",
            "lsr r3, r3, 5",
            "bl sym.imp.sprintf",
            "mov r0, sb",
            "bl sym.imp.system",
            "mov r0, r7",
            "bl sym.imp.free",
            "ldr ip, [sp, 0xc]",
            "mov r7, ip",
            "b 0x2c0a0",
            "str r7, [r8]",
            "str r7, [r6]",
            "b 0x2c154",
            "mov r0, 0x10",
            "b 0x2c158",
            "ldr r3, [0x0002c1ac]",
            "mov r2, 0",
            "bl sym.imp.__aeabi_dcmpgt",
            "cmp r0, 0",
            "bne 0x2c038",
            "mov r0, r7",
            "add sp, sp, 0x294",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "loc.imp.sendAckDownloadLogFile": {
        "function_address": "0x00009220",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x314]!"
        ]
    },
    "sym.imp.difftime": {
        "function_address": "0x000091fc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x32c]!"
        ]
    },
    "sym.imp.__aeabi_dcmpgt": {
        "function_address": "0x0000865c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0xaec]!"
        ]
    },
    "sym.hmac_sha1_vector": {
        "function_address": "0x00031960",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "cmp r2, 5",
            "sub sp, sp, 0x90",
            "mov sl, r2",
            "str r0, [sp, 4]",
            "str r1, [sp]",
            "ldr sb, [sp, 0xb0]",
            "ldr r5, [sp, 0xb4]",
            "bls 0x3198c",
            "mvn r0, 0",
            "b 0x31ac4",
            "cmp r1, 0x40",
            "mov r8, r3",
            "bls 0x319c4",
            "add r4, sp, 0xc",
            "mov r0, 1",
            "add r1, sp, 4",
            "mov r2, sp",
            "mov r3, r4",
            "bl fcn.00009664",
            "cmp r0, 0",
            "bne 0x31984",
            "str r4, [sp, 4]",
            "mov r3, 0x14",
            "str r3, [sp]",
            "add r4, sp, 0x50",
            "mov r1, 0",
            "mov r2, 0x40",
            "mov r0, r4",
            "bl sym.imp.memset",
            "ldr r1, [sp, 4]",
            "mov r0, r4",
            "ldr r2, [sp]",
            "bl sym.imp.memcpy",
            "mov r1, 0",
            "ldrb r3, [r4, r1]",
            "eor r3, r3, 0x36",
            "strb r3, [r4, r1]",
            "add r1, r1, 1",
            "cmp r1, 0x40",
            "bne 0x319ec",
            "str r4, [sp, 0x20]",
            "mov ip, 0",
            "lsl r2, sl, 2",
            "mov r3, ip",
            "str r1, [sp, 0x38]",
            "cmp ip, r2",
            "add r3, r3, 4",
            "add r7, sp, 0x20",
            "add r6, sp, 0x38",
            "beq 0x31a44",
            "ldr r1, [r8, ip]",
            "str r1, [r7, r3]",
            "ldr r1, [sb, ip]",
            "add ip, ip, 4",
            "str r1, [r6, r3]",
            "b 0x31a18",
            "add r0, sl, 1",
            "mov r1, r7",
            "mov r2, r6",
            "mov r3, r5",
            "bl fcn.00009664",
            "subs r8, r0, 0",
            "bne 0x31984",
            "mov r1, r8",
            "mov r2, 0x40",
            "mov r0, r4",
            "bl sym.imp.memset",
            "ldr r1, [sp, 4]",
            "mov r0, r4",
            "ldr r2, [sp]",
            "bl sym.imp.memcpy",
            "mov r0, r8",
            "ldrb r3, [r4, r0]",
            "eor r3, r3, 0x5c",
            "strb r3, [r4, r0]",
            "add r0, r0, 1",
            "cmp r0, 0x40",
            "bne 0x31a84",
            "str r0, [sp, 0x38]",
            "mov r3, 0x14",
            "str r3, [sp, 0x3c]",
            "mov r0, 2",
            "str r4, [sp, 0x20]",
            "mov r1, r7",
            "str r5, [sp, 0x24]",
            "mov r2, r6",
            "mov r3, r5",
            "bl fcn.00009664",
            "add sp, sp, 0x90",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "fcn.00009664": {
        "function_address": "0x00009664",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x3c]!"
        ]
    },
    "sym.zyNetCtrl_WPS_init": {
        "function_address": "0x00022450",
        "instructions": [
            "push {r0, r1, r2, r4, r5, lr}",
            "ldr r4, [0x00022508]",
            "ldr r3, [0x0002250c]",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x224c0",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0x93",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00022510]",
            "ldr r0, [0x00022514]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x400",
            "add r3, r3, 7",
            "bl sym.imp.printf",
            "ldr r0, [0x00022518]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0002251c]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x00022520]",
            "ldr r3, [r4, r3]",
            "add r4, r3, 0x80",
            "add r5, r3, 0x1280",
            "sub r0, r4, 0x80",
            "mov r1, 0",
            "mov r2, 0x10",
            "bl sym.imp.strtol",
            "uxtb r0, r0",
            "mov r1, r4",
            "add r2, r4, 0x80",
            "add r4, r4, 0x180",
            "bl fcn.00009628",
            "cmp r4, r5",
            "bne 0x224d0",
            "mov r0, 0",
            "add sp, sp, 0xc",
            "pop {r4, r5, pc}"
        ]
    },
    "fcn.00009628": {
        "function_address": "0x00009628",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x64]!"
        ]
    },
    "sym.bignum_deinit": {
        "function_address": "0x000373f4",
        "instructions": [
            "push {r4, lr}",
            "subs r4, r0, 0",
            "popeq {r4, pc}",
            "bl fcn.00034db0",
            "mov r0, r4",
            "pop {r4, lr}",
            "b sym.imp.free"
        ]
    },
    "sym.wps_validate_m8": {
        "function_address": "0x0002fee4",
        "instructions": [
            "cmp r0, 0",
            "beq 0x2ff94",
            "push {r4, r5, lr}",
            "sub sp, sp, 0x1ec",
            "mov r1, sp",
            "bl fcn.00008c8c",
            "cmp r0, 0",
            "bge 0x2ff0c",
            "mvn r0, 0",
            "b 0x2ff8c",
            "ldr r5, [sp, 4]",
            "ldr r0, [sp]",
            "adds r4, r5, 0",
            "movne r4, 1",
            "bl fcn.0002f058",
            "cmp r0, 0",
            "bne 0x2ff5c",
            "ldr r0, [sp, 8]",
            "bl fcn.0002efd8",
            "cmp r0, 0",
            "bne 0x2ff5c",
            "ldr r3, [sp, 0xc]",
            "cmp r3, 0",
            "beq 0x2ff5c",
            "ldr r3, [sp, 0xdc]",
            "ldr r2, [sp, 0xe0]",
            "cmp r3, 0",
            "beq 0x2ff5c",
            "cmp r2, 0xf",
            "bhi 0x2ff6c",
            "cmp r4, 0",
            "bne 0x2ff04",
            "mov r0, r4",
            "b 0x2ff8c",
            "mov r0, r5",
            "mov r1, r4",
            "bl fcn.0002ed7c",
            "cmp r0, 0",
            "bne 0x2ff5c",
            "ldr r3, [sp, 0x4c]",
            "cmp r3, 0",
            "beq 0x2ff5c",
            "add sp, sp, 0x1ec",
            "pop {r4, r5, pc}",
            "mvn r0, 0",
            "bx lr"
        ]
    },
    "sym.FW_NotifyHaveNewFW": {
        "function_address": "0x00023d6c",
        "instructions": [
            "push {r0, r1, r2, r4, r5, lr}",
            "mov r5, r0",
            "ldr r4, [0x00023df4]",
            "ldr r3, [0x00023df8]",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x23de0",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x1ed",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00023dfc]",
            "ldr r0, [0x00023e00]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x50",
            "bl sym.imp.printf",
            "ldr r0, [0x00023e04]",
            "mov r1, r5",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00023e08]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, r5",
            "bl fcn.00009034",
            "mov r0, 1",
            "add sp, sp, 0xc",
            "pop {r4, r5, pc}"
        ]
    },
    "sym.wps_build_auth_type_flags": {
        "function_address": "0x00033730",
        "instructions": [
            "push {r4, lr}",
            "mov r0, r1",
            "mov r4, r1",
            "movw r1, 0x1004",
            "bl fcn.000331d0",
            "mov r0, r4",
            "mov r1, 2",
            "bl fcn.000331d0",
            "mov r0, r4",
            "mov r1, 0x23",
            "bl fcn.000331d0",
            "mov r0, 0",
            "pop {r4, pc}"
        ]
    },
    "sym.zyNetCtrl_tremNeighborList": {
        "function_address": "0x00014d58",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "ldr r3, [0x00014dc4]",
            "ldr r2, [0x00014dc8]",
            "add r3, pc, r3",
            "ldr r2, [r3, r2]",
            "ldr r0, [r2]",
            "mov r6, r2",
            "ldr r2, [0x00014dcc]",
            "cmp r0, 0",
            "ldr r4, [r3, r2]",
            "movne r5, 0",
            "bne 0x14d90",
            "str r0, [r4]",
            "pop {r3, r4, r5, r6, r7, pc}",
            "ldr r3, [r4]",
            "cmp r5, r3",
            "bge 0x14db0",
            "ldr r7, [r0]",
            "add r5, r5, 1",
            "bl sym.imp.free",
            "mov r0, r7",
            "b 0x14d90",
            "mov r3, 0",
            "mov r0, 1",
            "str r3, [r4]",
            "str r3, [r6]",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "sym.zyNetCtrl_WPS_getFreqBandToList": {
        "function_address": "0x0001d1fc",
        "instructions": [
            "push {r0, r1, r2, r4, r5, lr}",
            "cmp r1, 0",
            "cmpne r0, 0",
            "ldr r4, [0x0001d380]",
            "moveq r1, 1",
            "movne r1, 0",
            "add r4, pc, r4",
            "bne 0x1d270",
            "ldr r3, [0x0001d384]",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x1d370",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0xa1f",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001d388]",
            "ldr r0, [0x0001d38c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x17c",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x0001d390]",
            "add r0, pc, r0",
            "b 0x1d35c",
            "ldr r3, [0x0001d394]",
            "ldr ip, [0x0001d398]",
            "ldr r3, [r4, r3]",
            "ldr ip, [r4, ip]",
            "ldr r3, [r3]",
            "ldr lr, [ip]",
            "cmp r1, lr",
            "bge 0x1d30c",
            "ldrb r5, [r3, 4]",
            "ldrb ip, [r0]",
            "cmp r5, ip",
            "bne 0x1d300",
            "ldrb r5, [r3, 5]",
            "ldrb ip, [r0, 1]",
            "cmp r5, ip",
            "bne 0x1d300",
            "ldrb r5, [r3, 6]",
            "ldrb ip, [r0, 2]",
            "cmp r5, ip",
            "bne 0x1d300",
            "ldrb r5, [r3, 7]",
            "ldrb ip, [r0, 3]",
            "cmp r5, ip",
            "bne 0x1d300",
            "ldrb r5, [r3, 8]",
            "ldrb ip, [r0, 4]",
            "cmp r5, ip",
            "bne 0x1d300",
            "ldrb r5, [r3, 9]",
            "ldrb ip, [r0, 5]",
            "cmp r5, ip",
            "bne 0x1d300",
            "ldr ip, [r3, 0x14]",
            "ldrb r5, [ip]",
            "cmp r5, r2",
            "beq 0x1d374",
            "ldr r3, [r3]",
            "add r1, r1, 1",
            "b 0x1d288",
            "ldr r3, [0x0001d384]",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x1d370",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0xa39",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001d39c]",
            "ldr r0, [0x0001d3a0]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x17c",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x0001d3a4]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0001d3a8]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov ip, 0",
            "mov r0, ip",
            "add sp, sp, 0xc",
            "pop {r4, r5, pc}"
        ]
    },
    "sym.SecurityCtrl_parseM1": {
        "function_address": "0x00011218",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, lr}",
            "mov r7, r2",
            "ldr r4, fcn.0002eeb8",
            "sub sp, sp, 0x1c",
            "ldr r3, [0x00011348]",
            "mov r6, r0",
            "add r4, pc, r4",
            "mov r8, r1",
            "ldr r3, [r4, r3]",
            "ldrb r2, [r3]",
            "mov sb, r3",
            "cmp r2, 3",
            "bls 0x11298",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0xf42",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001134c]",
            "ldr r0, [0x00011350]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x420",
            "add r3, r3, 0xa",
            "bl sym.imp.printf",
            "mov r0, 0xa",
            "bl sym.imp.putchar",
            "ldr r3, [0x00011354]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r5, 0",
            "mov r2, 0xc",
            "str r5, [sp, 8]",
            "mov r1, r5",
            "add r0, sp, 0xc",
            "bl sym.imp.memset",
            "mov r0, r6",
            "add r1, sp, 8",
            "bl fcn.00009070",
            "cmp r0, r5",
            "beq 0x11324",
            "ldrb r3, [sb]",
            "cmp r3, 3",
            "bls 0x11338",
            "mov r0, r5",
            "bl sym.imp.time",
            "movw r3, 0xf4a",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00011358]",
            "ldr r0, [0x0001135c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x420",
            "add r3, r3, 0xa",
            "bl sym.imp.printf",
            "ldr r0, [0x00011360]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00011354]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0x11338",
            "mov r0, r6",
            "mov r1, r8",
            "mov r2, r7",
            "bl fcn.00009058",
            "b 0x1133c",
            "mov r0, 0x10",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, r8, sb, pc}"
        ]
    },
    "fcn.00009058": {
        "function_address": "0x00009058",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x444]!"
        ]
    },
    "sym.zyNetCtrl_addWIFIStateSyncList": {
        "function_address": "0x00016768",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov fp, r1",
            "cmp r3, 0",
            "cmpne r0, 0",
            "sub sp, sp, 0x2c",
            "ldr r6, [0x00016988]",
            "mov r4, r0",
            "mov r7, r3",
            "moveq r1, 1",
            "add r6, pc, r6",
            "movne r1, 0",
            "beq 0x16858",
            "str r1, [sp, 0x18]",
            "mov sl, r2",
            "add r0, sp, 0x1c",
            "mov r2, 0xc",
            "bl sym.imp.memset",
            "ldr r3, [0x0001698c]",
            "ldr r3, [r6, r3]",
            "ldr r5, [r3]",
            "cmp r5, 0",
            "bne 0x16860",
            "mov r0, r4",
            "add r1, sp, 0x18",
            "bl fcn.00008e90",
            "cmp r0, 0",
            "beq 0x16860",
            "ldr r3, [0x00016990]",
            "ldr r3, [r6, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x16858",
            "mov r0, r5",
            "bl sym.imp.time",
            "mov r3, 0x9e0",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00016994]",
            "ldr r0, [0x00016998]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xc6",
            "bl sym.imp.printf",
            "ldrb r0, [r4, 3]",
            "ldrb r3, [r4, 2]",
            "ldrb r1, [r4]",
            "ldrb r2, [r4, 1]",
            "str r0, [sp]",
            "ldrb r0, [r4, 4]",
            "str r0, [sp, 4]",
            "ldrb r0, [r4, 5]",
            "str r0, [sp, 8]",
            "ldr r0, [0x0001699c]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x000169a0]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, 0x10",
            "b 0x16980",
            "ldr r3, [0x000169a4]",
            "mov r0, 0",
            "ldr r8, [r6, r3]",
            "ldr r5, [r8]",
            "bl sym.imp.time",
            "str r8, [sp, 0x14]",
            "mov sb, r0",
            "cmp r5, 0",
            "beq 0x168f0",
            "add r3, r5, 4",
            "mov r0, r4",
            "str r3, [sp, 0x10]",
            "mov r1, r3",
            "mov r2, 6",
            "bl sym.imp.memcmp",
            "ldr r3, [sp, 0x10]",
            "subs r8, r0, 0",
            "bne 0x168e8",
            "ldr r1, [r4]",
            "add r0, r5, 0x14",
            "str r1, [r3]",
            "ldrh r1, [r4, 4]",
            "strh r1, [r3, 4]",
            "mov r1, r7",
            "str fp, [r5, 0xc]",
            "str sl, [r5, 0x10]",
            "bl sym.imp.strcpy",
            "ldr r3, [0x000169a8]",
            "str sb, [r5, 0x114]",
            "ldr r3, [r6, r3]",
            "ldr r1, [r3]",
            "add r1, r1, 1",
            "str r1, [r3]",
            "b 0x1697c",
            "ldr r5, [r5]",
            "b 0x1687c",
            "ldr r3, [sp, 0x14]",
            "mov r0, 1",
            "mov r1, 0x120",
            "ldr r8, [r3]",
            "bl sym.imp.calloc",
            "subs r3, r0, 0",
            "beq 0x16858",
            "ldr r0, [r4]",
            "str r0, [r3, 4]",
            "add r0, r3, 0x14",
            "ldrh r1, [r4, 4]",
            "str fp, [r3, 0xc]",
            "strh r1, [r3, 8]",
            "mov r1, r7",
            "str sl, [r3, 0x10]",
            "str r3, [sp, 0x10]",
            "bl sym.imp.strcpy",
            "ldr r3, [sp, 0x10]",
            "cmp r8, 0",
            "ldreq r2, [sp, 0x14]",
            "str r5, [r3, 0x118]",
            "str r5, [r3, 0x11c]",
            "str sb, [r3, 0x114]",
            "streq r3, [r2]",
            "beq 0x16968",
            "ldr r1, [r8]",
            "cmp r1, 0",
            "movne r8, r1",
            "bne 0x16954",
            "str r3, [r8]",
            "ldr r3, [0x000169a8]",
            "ldr r3, [r6, r3]",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "mov r0, 0",
            "add sp, sp, 0x2c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.zyNetCtrl_SpeedTest_saveSendSpeedTestStartStop": {
        "function_address": "0x0002a2bc",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sb, lr}",
            "mov r8, r1",
            "ldr r4, [0x0002a3f4]",
            "add r1, sp, 0x20",
            "cmp r8, 1",
            "add r4, pc, r4",
            "ldm r1, {r1, r6, sb}",
            "bne 0x2a3ec",
            "cmp r3, 0x400",
            "mov r7, r3",
            "movle r3, 0",
            "movgt r3, 1",
            "cmp r7, 0",
            "orreq r3, r3, 1",
            "cmp r3, 0",
            "bne 0x2a3ec",
            "cmp r6, 0",
            "cmpne r1, 0",
            "beq 0x2a3ec",
            "clz r5, sb",
            "lsr r5, r5, 5",
            "cmp r6, 0x200",
            "orrgt r5, r5, 1",
            "cmp r5, 0",
            "bne 0x2a3ec",
            "ldr r3, [0x0002a3f8]",
            "ldr ip, [r0]",
            "ldr r3, [r4, r3]",
            "str ip, [r3]",
            "ldrh r0, [r0, 4]",
            "strh r0, [r3, 4]",
            "ldr r3, [0x0002a3fc]",
            "ldr r3, [r4, r3]",
            "str r8, [r3]",
            "ldr r3, [0x0002a400]",
            "ldr r3, [r4, r3]",
            "str r2, [r3]",
            "mov r2, r7",
            "ldr r3, [0x0002a404]",
            "ldr r3, [r4, r3]",
            "str r7, [r3]",
            "ldr r3, [0x0002a408]",
            "ldr r3, [r4, r3]",
            "mov r0, r3",
            "bl sym.imp.memcpy",
            "ldr r3, [0x0002a40c]",
            "mov r1, sb",
            "strb r5, [r0, r7]",
            "mov r2, r6",
            "ldr r3, [r4, r3]",
            "str r6, [r3]",
            "ldr r3, [0x0002a410]",
            "ldr r3, [r4, r3]",
            "mov r0, r3",
            "bl sym.imp.memcpy",
            "strb r5, [r0, r6]",
            "mov r0, r5",
            "bl sym.imp.time",
            "ldr r3, [0x0002a414]",
            "mov r2, r0",
            "ldr r1, [0x0002a418]",
            "ldr r0, [r4, r3]",
            "add r1, pc, r1",
            "bl sym.imp.sprintf",
            "ldr r3, [0x0002a41c]",
            "ldr r2, [sp, 0x2c]",
            "ldr r3, [r4, r3]",
            "ldr r1, [sp, 0x30]",
            "str r2, [r3]",
            "ldr r3, [0x0002a420]",
            "ldr r0, [r4, r3]",
            "bl sym.imp.strcpy",
            "mov r0, r8",
            "bl fcn.00008614",
            "mov r0, r5",
            "pop {r3, r4, r5, r6, r7, r8, sb, pc}",
            "mov r0, 0x10",
            "pop {r3, r4, r5, r6, r7, r8, sb, pc}"
        ]
    },
    "fcn.00008614": {
        "function_address": "0x00008614",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0xb1c]!"
        ]
    },
    "sym.wpabuf_dup": {
        "function_address": "0x0002ea70",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r4, r0",
            "ldr r0, [r0, 4]",
            "bl fcn.00008ddc",
            "subs r5, r0, 0",
            "beq 0x2ea94",
            "ldr r1, [r4, 8]",
            "ldr r2, [r4, 4]",
            "bl fcn.0002ea18",
            "mov r0, r5",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.uci_set": {
        "function_address": "0x000118a4",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "sub sp, sp, 0x400",
            "sub sp, sp, 0xc",
            "mov r4, 0",
            "mov r7, r0",
            "mov r6, r1",
            "str r4, [sp, 8]",
            "mov r5, r2",
            "mov r1, r4",
            "add r0, sp, 0xc",
            "mov r2, 0x3fc",
            "bl sym.imp.memset",
            "ldr r1, [0x000098a8]",
            "mov r2, r7",
            "str r5, [sp]",
            "add r5, sp, 8",
            "add r1, pc, r1",
            "mov r3, r6",
            "mov r0, r5",
            "bl sym.imp.sprintf",
            "mov r0, r5",
            "bl sym.imp.system",
            "mov r0, r4",
            "add sp, sp, 0x400",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, pc}",
            "cmp r1, 0",
            "cmpne r0, 0",
            "beq 0x118bc",
            "cmp r2, 0",
            "beq 0x118bc",
            "b 0x9840",
            "mov r0, 0x10",
            "bx lr"
        ]
    },
    "sym.wps_build_assoc_state": {
        "function_address": "0x000337cc",
        "instructions": [
            "push {r4, lr}",
            "mov r0, r1",
            "mov r4, r1",
            "movw r1, 0x1002",
            "bl fcn.000331d0",
            "mov r0, r4",
            "mov r1, 2",
            "bl fcn.000331d0",
            "mov r0, r4",
            "mov r1, 0",
            "bl fcn.000331d0",
            "mov r0, 0",
            "pop {r4, pc}"
        ]
    },
    "sym.zyNetCtrl_genWIFIStateSyncData": {
        "function_address": "0x00015eb0",
        "instructions": [
            "push {r0, r1, r4, r5, r6, lr}",
            "mov r5, r0",
            "ldrb r3, [r2]",
            "mov r6, r1",
            "mov r4, r2",
            "cmp r3, 0",
            "beq 0x15ee4",
            "ldr r1, [0x00015f0c]",
            "mov r0, r2",
            "ldr r3, [0x00015f10]",
            "add r1, pc, r1",
            "add r3, pc, r3",
            "bl sym.imp.sprintf",
            "ldr r1, [0x00015f14]",
            "mov r0, r4",
            "str r6, [sp]",
            "mov r2, r4",
            "add r1, pc, r1",
            "mov r3, r5",
            "bl sym.imp.sprintf",
            "mov r0, 0",
            "add sp, sp, 8",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.wps_build_enrollee_nonce": {
        "function_address": "0x000336b8",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r4, r1",
            "mov r5, r0",
            "mov r0, r1",
            "movw r1, 0x101a",
            "bl fcn.000331d0",
            "mov r0, r4",
            "mov r1, 0x10",
            "bl fcn.000331d0",
            "mov r0, r4",
            "add r1, r5, 0x36",
            "mov r2, 0x10",
            "bl fcn.00033208",
            "mov r0, 0",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.zyNetCtrl_WPS_getAPautoconfigFlag": {
        "function_address": "0x00022524",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "subs r7, r0, 0",
            "ldr r3, [0x00022620]",
            "add r3, pc, r3",
            "beq 0x22574",
            "mov r6, r2",
            "mov r5, r1",
            "ldr r2, [0x00022624]",
            "ldr r3, [r3, r2]",
            "ldr r4, [r3]",
            "cmp r4, 0",
            "beq 0x22574",
            "add r0, r4, 4",
            "mov r1, r7",
            "mov r2, 6",
            "bl sym.imp.memcmp",
            "cmp r0, 0",
            "beq 0x2257c",
            "ldr r4, [r4]",
            "b 0x2254c",
            "mov r0, 0x10",
            "pop {r3, r4, r5, r6, r7, pc}",
            "cmp r5, 0",
            "ldreq r3, [r4, 0xc]",
            "beq 0x22614",
            "cmp r5, 1",
            "ldreq r3, [r4, 0x14]",
            "beq 0x225d0",
            "cmp r5, 0x20",
            "ldreq r3, [r4, 0x1c]",
            "beq 0x225d0",
            "cmp r5, 0x21",
            "ldreq r3, [r4, 0x24]",
            "beq 0x225d0",
            "cmp r5, 0xc0",
            "ldreq r3, [r4, 0x34]",
            "beq 0x225d0",
            "cmp r5, 0xe0",
            "ldreq r3, [r4, 0x2c]",
            "beq 0x225d0",
            "cmp r5, 0xc1",
            "bne 0x225d8",
            "ldr r3, [r4, 0x44]",
            "str r3, [r6]",
            "pop {r3, r4, r5, r6, r7, pc}",
            "cmp r5, 0xe1",
            "ldreq r3, [r4, 0x3c]",
            "beq 0x22614",
            "cmp r5, 0xc9",
            "ldreq r3, [r4, 0x54]",
            "beq 0x22614",
            "cmp r5, 0xe9",
            "ldreq r3, [r4, 0x4c]",
            "beq 0x22614",
            "cmp r5, 0x40",
            "ldreq r3, [r4, 0x5c]",
            "beq 0x22614",
            "cmp r5, 0x41",
            "bne 0x22574",
            "ldr r3, [r4, 0x64]",
            "str r3, [r6]",
            "mov r0, 0",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "sym.zyNetCtrl_SpeedTest_getSpeedTestDownloanURL": {
        "function_address": "0x00029ec0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x680",
            "ldr r4, [0x0002a178]",
            "mov r8, r0",
            "cmp r2, 0",
            "cmpne r1, 0",
            "sub sp, sp, 0xc",
            "add r4, pc, r4",
            "mov r6, r1",
            "ldr r3, [0x0002a17c]",
            "mov sb, r2",
            "moveq r0, 1",
            "movne r0, 0",
            "ldr r7, [r4, r3]",
            "bne 0x29f58",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x29f50",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0x37",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r0, [0x0002a180]",
            "ldr r3, [0x0002a184]",
            "add r0, pc, r0",
            "add r3, pc, r3",
            "bl sym.imp.printf",
            "ldr r0, [0x0002a188]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0002a18c]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, 0x10",
            "b 0x2a16c",
            "ldrb r3, [r1]",
            "cmp r3, 0",
            "bne 0x29fa8",
            "ldrb r2, [r7]",
            "cmp r2, 3",
            "bls 0x29f50",
            "mov r0, r3",
            "bl sym.imp.time",
            "mov r3, 0x3c",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r0, [0x0002a190]",
            "ldr r3, [0x0002a194]",
            "add r0, pc, r0",
            "add r3, pc, r3",
            "bl sym.imp.printf",
            "ldr r0, [0x0002a198]",
            "add r0, pc, r0",
            "b 0x29f3c",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x2a000",
            "bl sym.imp.time",
            "mov r3, 0x40",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r0, [0x0002a19c]",
            "ldr r3, [0x0002a1a0]",
            "add r0, pc, r0",
            "add r3, pc, r3",
            "bl sym.imp.printf",
            "ldr r0, [0x0002a1a4]",
            "mov r1, r8",
            "mov r2, r6",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0002a18c]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r5, 0",
            "mov r2, 0x7c",
            "str r5, [sp, 8]",
            "mov r1, r5",
            "add r0, sp, 0xc",
            "add fp, sp, 8",
            "bl sym.imp.memset",
            "mov r0, fp",
            "bl fcn.00009244",
            "ldrb r3, [sp, 8]",
            "cmp r3, r5",
            "beq 0x29f50",
            "str r5, [sp, 0x88]",
            "mov r1, r5",
            "mov r2, 0x1fc",
            "add r0, sp, 0x8c",
            "bl sym.imp.memset",
            "ldr r1, [0x0002a1a8]",
            "add sl, sp, 0x88",
            "mov r2, r8",
            "mov r3, r6",
            "add r1, pc, r1",
            "mov r0, sl",
            "bl sym.imp.sprintf",
            "ldr r1, [0x0002a1ac]",
            "mov r0, sl",
            "add r1, pc, r1",
            "bl sym.imp.fopen",
            "cmp r0, r5",
            "bne 0x2a0c0",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x29f50",
            "bl sym.imp.time",
            "mov r3, 0x54",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r0, [0x0002a1b0]",
            "ldr r3, [0x0002a1b4]",
            "add r0, pc, r0",
            "add r3, pc, r3",
            "bl sym.imp.printf",
            "ldr r0, [0x0002a1b8]",
            "mov r1, sl",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "b 0x29f40",
            "bl sym.imp.fclose",
            "ldr r1, [0x0002a1bc]",
            "mov r3, r6",
            "mov r2, fp",
            "mov r0, sb",
            "add r1, pc, r1",
            "add r6, sp, 0x288",
            "bl sym.imp.sprintf",
            "str r5, [sp, 0x288]",
            "mov r1, r5",
            "mov r2, 0x3fc",
            "add r0, sp, 0x28c",
            "bl sym.imp.memset",
            "ldr r1, [0x0002a1c0]",
            "mov r0, r6",
            "mov r2, r8",
            "add r1, pc, r1",
            "bl sym.imp.sprintf",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x2a160",
            "mov r0, r5",
            "bl sym.imp.time",
            "mov r3, 0x60",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r0, [0x0002a1c4]",
            "ldr r3, [0x0002a1c8]",
            "add r0, pc, r0",
            "add r3, pc, r3",
            "bl sym.imp.printf",
            "ldr r0, [0x0002a1cc]",
            "mov r1, r6",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0002a18c]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, r6",
            "bl sym.imp.system",
            "mov r0, 0",
            "add sp, sp, 0x680",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.setKickwificlient": {
        "function_address": "0x00012218",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "subs r5, r0, 0",
            "sub sp, sp, 0x114",
            "moveq r0, 0x10",
            "beq 0x123ac",
            "mov r4, 0",
            "mov r2, 0x7c",
            "str r4, [sp, 0x10]",
            "mov r1, r4",
            "add r0, sp, 0x14",
            "add r6, sp, 0x90",
            "bl sym.imp.memset",
            "str r4, [sp, 0x90]",
            "mov r1, r4",
            "mov r2, 0x7c",
            "add r0, sp, 0x94",
            "bl sym.imp.memset",
            "str r4, [sp]",
            "mov r1, r4",
            "mov r2, 0xc",
            "add r0, sp, 4",
            "bl sym.imp.memset",
            "ldr r1, [0x000123b4]",
            "add r4, sp, 0x10",
            "mov r2, r5",
            "mov r0, r4",
            "add r1, pc, r1",
            "bl sym.imp.sprintf",
            "mov r0, r4",
            "bl sym.imp.system",
            "ldr r1, [0x000123b8]",
            "mov r0, r6",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "ldr r0, [0x000123bc]",
            "mov r1, r6",
            "mov r2, sp",
            "add r0, pc, r0",
            "bl fcn.00008788",
            "cmp r0, 0",
            "bne 0x122e4",
            "ldrb r3, [sp]",
            "cmp r3, 0x30",
            "bne 0x122e4",
            "ldr r1, [0x000123c0]",
            "mov r0, r4",
            "mov r2, r5",
            "add r1, pc, r1",
            "bl sym.imp.sprintf",
            "mov r0, r4",
            "bl sym.imp.system",
            "ldr r1, [0x000123c4]",
            "mov r2, r5",
            "mov r0, r4",
            "add r1, pc, r1",
            "bl sym.imp.sprintf",
            "mov r0, r4",
            "bl sym.imp.system",
            "ldr r1, [0x000123c8]",
            "mov r0, r6",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "ldr r0, [0x000123cc]",
            "mov r1, r6",
            "mov r2, sp",
            "add r0, pc, r0",
            "bl fcn.00008788",
            "cmp r0, 0",
            "bne 0x12354",
            "ldrb r3, [sp]",
            "cmp r3, 0x30",
            "bne 0x12354",
            "ldr r1, [0x000123d0]",
            "mov r0, r4",
            "mov r2, r5",
            "add r1, pc, r1",
            "bl sym.imp.sprintf",
            "mov r0, r4",
            "bl sym.imp.system",
            "ldr r1, [0x000123d4]",
            "mov r2, r5",
            "mov r0, r4",
            "add r1, pc, r1",
            "bl sym.imp.sprintf",
            "mov r0, r4",
            "bl sym.imp.system",
            "ldr r1, [0x000123d8]",
            "mov r2, r5",
            "mov r0, r4",
            "add r1, pc, r1",
            "bl sym.imp.sprintf",
            "mov r0, r4",
            "bl sym.imp.system",
            "ldr r1, [0x000123dc]",
            "mov r2, r5",
            "mov r0, r4",
            "add r1, pc, r1",
            "bl sym.imp.sprintf",
            "mov r0, r4",
            "bl sym.imp.system",
            "mov r0, 0",
            "add sp, sp, 0x114",
            "pop {r4, r5, r6, r7, pc}"
        ]
    },
    "sym.zyNetCtrl_WPS_addcopySyncList": {
        "function_address": "0x00020bb4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r6, r0",
            "cmp r1, 0",
            "cmpne r0, 0",
            "sub sp, sp, 0x34",
            "ldr r4, [0x00021104]",
            "mov r5, r1",
            "moveq r7, 1",
            "movne r7, 0",
            "add r4, pc, r4",
            "bne 0x20c4c",
            "ldr r3, [0x00021108]",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x20c44",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0xe16",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002110c]",
            "ldr r0, [0x00021110]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x32c",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x00021114]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00021118]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, 0x10",
            "b 0x210fc",
            "mov r0, r7",
            "mov sl, r2",
            "bl sym.imp.time",
            "ldr r3, [0x0002111c]",
            "mov sb, r0",
            "ldr r8, [r4, r3]",
            "ldr r2, [r8]",
            "cmp r2, 0",
            "bne 0x20dc4",
            "str r2, [sp, 0x2c]",
            "mov r0, 1",
            "mov r1, 0x24",
            "bl sym.imp.calloc",
            "ldr r2, [sp, 0x2c]",
            "subs r7, r0, 0",
            "bne 0x20cdc",
            "ldr r3, [0x00021108]",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x20c44",
            "bl sym.imp.time",
            "movw r3, 0xe26",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00021120]",
            "ldr r0, [0x00021124]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x32c",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x00021128]",
            "add r0, pc, r0",
            "b 0x20c30",
            "str r2, [sp, 0x2c]",
            "mov r0, 1",
            "mov r1, r0",
            "bl sym.imp.calloc",
            "str r0, [r7, 0x14]",
            "cmp r0, 0",
            "ldr r2, [sp, 0x2c]",
            "mov r1, r0",
            "bne 0x20d50",
            "ldr r3, [0x00021108]",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x21088",
            "bl sym.imp.time",
            "movw r3, 0xe2c",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002112c]",
            "ldr r0, [0x00021130]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x32c",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x00021134]",
            "add r0, pc, r0",
            "b 0x21074",
            "ldr r3, [0x00021138]",
            "mov r0, r7",
            "ldr r3, [r4, r3]",
            "str r7, [r3]",
            "mov r3, r2",
            "ldrb ip, [r6, r3]",
            "add r0, r0, 1",
            "add r2, r7, r3",
            "strb ip, [r2, 4]",
            "ldrb r2, [r5, r3]",
            "add r3, r3, 1",
            "cmp r3, 6",
            "strb r2, [r0, 9]",
            "bne 0x20d64",
            "ldr r3, [0x0002113c]",
            "mov r2, 0",
            "strb sl, [r1]",
            "str sb, [r7, 0x18]",
            "str r2, [r7]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "cmp r3, 1",
            "streq r3, [r7, 0x1c]",
            "beq 0x20db8",
            "cmp r3, 0",
            "streq r2, [r7, 0x1c]",
            "str r2, [r7, 0x20]",
            "mov r3, 1",
            "b 0x210f4",
            "ldr r3, [0x00021138]",
            "mov r0, r7",
            "ldr r3, [r4, r3]",
            "ldr fp, [r3]",
            "mov r3, fp",
            "cmp r0, r2",
            "bge 0x20f80",
            "ldrb ip, [r3, 4]",
            "ldrb r1, [r6]",
            "cmp ip, r1",
            "bne 0x20f74",
            "ldrb ip, [r3, 5]",
            "ldrb r1, [r6, 1]",
            "cmp ip, r1",
            "bne 0x20f74",
            "ldrb ip, [r3, 6]",
            "ldrb r1, [r6, 2]",
            "cmp ip, r1",
            "bne 0x20f74",
            "ldrb ip, [r3, 7]",
            "ldrb r1, [r6, 3]",
            "cmp ip, r1",
            "bne 0x20f74",
            "ldrb ip, [r3, 8]",
            "ldrb r1, [r6, 4]",
            "cmp ip, r1",
            "bne 0x20f74",
            "ldrb ip, [r3, 9]",
            "ldrb r1, [r6, 5]",
            "cmp ip, r1",
            "bne 0x20f74",
            "ldrb ip, [r3, 0xa]",
            "ldrb r1, [r5]",
            "cmp ip, r1",
            "bne 0x20f74",
            "ldrb ip, [r3, 0xb]",
            "ldrb r1, [r5, 1]",
            "cmp ip, r1",
            "bne 0x20f74",
            "ldrb ip, [r3, 0xc]",
            "ldrb r1, [r5, 2]",
            "cmp ip, r1",
            "bne 0x20f74",
            "ldrb ip, [r3, 0xd]",
            "ldrb r1, [r5, 3]",
            "cmp ip, r1",
            "bne 0x20f74",
            "ldrb ip, [r3, 0xe]",
            "ldrb r1, [r5, 4]",
            "cmp ip, r1",
            "bne 0x20f74",
            "ldrb ip, [r3, 0xf]",
            "ldrb r1, [r5, 5]",
            "cmp ip, r1",
            "bne 0x20f74",
            "ldr r1, [r3, 0x14]",
            "ldrb r1, [r1]",
            "cmp r1, sl",
            "bne 0x20f74",
            "ldr r2, [0x0002113c]",
            "ldr r2, [r4, r2]",
            "ldr r2, [r2]",
            "cmp r2, 0",
            "streq sb, [r3, 0x18]",
            "streq r2, [r3, 0x1c]",
            "ldr r3, [0x00021108]",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x20c44",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0xe5e",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00021140]",
            "ldr r0, [0x00021144]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x32c",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldrb r0, [r6, 3]",
            "ldrb r1, [r6]",
            "ldrb r2, [r6, 1]",
            "ldrb r3, [r6, 2]",
            "str r0, [sp]",
            "ldrb r0, [r6, 4]",
            "str r0, [sp, 4]",
            "ldrb r0, [r6, 5]",
            "str r0, [sp, 8]",
            "ldrb r0, [r5]",
            "str r0, [sp, 0xc]",
            "ldrb r0, [r5, 1]",
            "str r0, [sp, 0x10]",
            "ldrb r0, [r5, 2]",
            "str r0, [sp, 0x14]",
            "ldrb r0, [r5, 3]",
            "str r0, [sp, 0x18]",
            "ldrb r0, [r5, 4]",
            "str r0, [sp, 0x1c]",
            "ldrb r0, [r5, 5]",
            "str r0, [sp, 0x20]",
            "ldr r0, [0x00021148]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "b 0x20c34",
            "ldr r3, [r3]",
            "add r0, r0, 1",
            "b 0x20dd8",
            "mov r1, 0",
            "sub r2, r2, 1",
            "cmp r1, r2",
            "ldrlt fp, [fp]",
            "addlt r1, r1, 1",
            "blt 0x20f88",
            "mov r0, 1",
            "mov r1, 0x24",
            "bl sym.imp.calloc",
            "str r0, [fp]",
            "cmp r0, 0",
            "mov r7, r0",
            "bne 0x21004",
            "ldr r3, [0x00021108]",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x20c44",
            "bl sym.imp.time",
            "movw r3, 0xe6d",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002114c]",
            "ldr r0, [0x00021150]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x32c",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x00021154]",
            "add r0, pc, r0",
            "b 0x20c30",
            "mov r0, 1",
            "mov r1, r0",
            "bl sym.imp.calloc",
            "str r0, [r7, 0x14]",
            "cmp r0, 0",
            "mov r2, r0",
            "movne r1, r7",
            "movne r3, 0",
            "bne 0x21094",
            "ldr r3, [0x00021108]",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x21088",
            "bl sym.imp.time",
            "movw r3, 0xe73",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00021158]",
            "ldr r0, [0x0002115c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x32c",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x00021160]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00021118]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, r7",
            "bl fcn.00008cec",
            "b 0x20c44",
            "ldrb ip, [r6, r3]",
            "add r1, r1, 1",
            "add r0, r7, r3",
            "strb ip, [r0, 4]",
            "ldrb r0, [r5, r3]",
            "add r3, r3, 1",
            "cmp r3, 6",
            "strb r0, [r1, 9]",
            "bne 0x21094",
            "ldr r3, [0x0002113c]",
            "strb sl, [r2]",
            "mov r2, 0",
            "str sb, [r7, 0x18]",
            "str r2, [r7]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "cmp r3, 1",
            "streq r3, [r7, 0x1c]",
            "beq 0x210e8",
            "cmp r3, 0",
            "streq r2, [r7, 0x1c]",
            "ldr r3, [r8]",
            "str r2, [r7, 0x20]",
            "add r3, r3, 1",
            "str r3, [r8]",
            "mov r0, 0",
            "add sp, sp, 0x34",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.security_SecurityCtrl_setSecurityCtrl": {
        "function_address": "0x0002d808",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r6, 0",
            "sub sp, sp, 0x200",
            "mov r5, r2",
            "mov r4, r1",
            "mov r2, 0x1fc",
            "str r6, [sp]",
            "mov r1, r6",
            "add r0, sp, 4",
            "bl sym.imp.memset",
            "mov r0, r5",
            "mov r1, r6",
            "mov r2, 0xa",
            "bl sym.imp.strtol",
            "cmp r4, 2",
            "mov r5, r0",
            "bne 0x2d93c",
            "cmp r5, r6",
            "mov r0, sp",
            "beq 0x2d8d0",
            "ldr r1, [0x0002d9fc]",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "mov r0, sp",
            "bl sym.imp.system",
            "ldr r1, [0x0002da00]",
            "mov r0, sp",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "mov r0, sp",
            "bl sym.imp.system",
            "ldr r1, [0x0002da04]",
            "mov r3, r5",
            "ldr r2, [0x0002da08]",
            "mov r0, sp",
            "add r1, pc, r1",
            "add r2, pc, r2",
            "bl sym.imp.sprintf",
            "mov r0, sp",
            "bl sym.imp.system",
            "ldr r1, [0x0002da0c]",
            "mov r0, sp",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "mov r0, sp",
            "bl sym.imp.system",
            "ldr r1, [0x0002da10]",
            "mov r0, sp",
            "add r1, pc, r1",
            "b 0x2d998",
            "ldr r1, [0x0002da14]",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "mov r0, sp",
            "bl sym.imp.system",
            "ldr r1, [0x0002da18]",
            "mov r0, sp",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "mov r0, sp",
            "bl sym.imp.system",
            "ldr r1, [0x0002da1c]",
            "mov r0, sp",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "mov r0, sp",
            "bl sym.imp.system",
            "ldr r1, [0x0002da20]",
            "mov r0, sp",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "mov r0, sp",
            "bl sym.imp.system",
            "ldr r1, [0x0002da24]",
            "mov r0, sp",
            "add r1, pc, r1",
            "b 0x2d9e4",
            "cmp r4, 3",
            "movne r0, 0x10",
            "bne 0x2d9f4",
            "cmp r5, 0",
            "mov r0, sp",
            "beq 0x2d9ac",
            "ldr r1, [0x0002da28]",
            "mov r3, r5",
            "ldr r2, [0x0002da2c]",
            "add r1, pc, r1",
            "add r2, pc, r2",
            "bl sym.imp.sprintf",
            "mov r0, sp",
            "bl sym.imp.system",
            "ldr r1, [0x0002da30]",
            "mov r0, sp",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "mov r0, sp",
            "bl sym.imp.system",
            "ldr r1, [0x0002da34]",
            "mov r0, sp",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "mov r0, sp",
            "bl sym.imp.system",
            "mov r0, r6",
            "b 0x2d9f4",
            "ldr r1, [0x0002da38]",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "mov r0, sp",
            "bl sym.imp.system",
            "ldr r1, [0x0002da3c]",
            "mov r0, sp",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "mov r0, sp",
            "bl sym.imp.system",
            "ldr r1, [0x0002da40]",
            "mov r0, sp",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "mov r0, sp",
            "bl sym.imp.system",
            "mov r0, r5",
            "add sp, sp, 0x200",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.os_get_time": {
        "function_address": "0x00033d3c",
        "instructions": [
            "push {r0, r1, r4, lr}",
            "mov r4, r0",
            "mov r1, 0",
            "mov r0, sp",
            "bl sym.imp.gettimeofday",
            "ldr r3, [sp]",
            "str r3, [r4]",
            "ldr r3, [sp, 4]",
            "str r3, [r4, 4]",
            "add sp, sp, 8",
            "pop {r4, pc}"
        ]
    },
    "sym.imp.gettimeofday": {
        "function_address": "0x0000907c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x42c]!"
        ]
    },
    "sym.OutputAPautoconfigResult": {
        "function_address": "0x00022ad0",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "sub sp, sp, 0x11c",
            "ldr r5, [0x00022c00]",
            "mov r4, r0",
            "mov r6, r1",
            "mov r7, r2",
            "add r5, pc, r5",
            "mov r1, 0",
            "str r1, [sp, 0x18]",
            "add r0, sp, 0x1c",
            "mov r2, 0xfc",
            "bl sym.imp.memset",
            "ldr r3, [0x00022c04]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "cmp r0, 0",
            "beq 0x22b28",
            "ldrb r3, [r0, 4]",
            "cmp r3, r6",
            "beq 0x22b94",
            "ldr r0, [r0]",
            "b 0x22b0c",
            "ldr r3, [0x00022c08]",
            "ldr r3, [r5, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x22b8c",
            "bl sym.imp.time",
            "movw r3, 0x1327",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00022c0c]",
            "ldr r0, [0x00022c10]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x410",
            "add r3, r3, 0xa",
            "bl sym.imp.printf",
            "ldr r0, [0x00022c14]",
            "mov r1, r6",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00022c18]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, 0x10",
            "b 0x22bf8",
            "ldrb r1, [r4, 2]",
            "add r0, r0, 0x104",
            "ldrb r2, [r4]",
            "add r0, r0, 1",
            "ldrb r3, [r4, 1]",
            "str r1, [sp]",
            "ldrb r1, [r4, 3]",
            "str r1, [sp, 4]",
            "ldrb r1, [r4, 4]",
            "str r1, [sp, 8]",
            "ldrb r1, [r4, 5]",
            "add r4, sp, 0x18",
            "str r0, [sp, 0x14]",
            "mov r0, r4",
            "str r1, [sp, 0xc]",
            "ldr r1, [0x00022c1c]",
            "str r7, [sp, 0x10]",
            "add r1, pc, r1",
            "bl sym.imp.sprintf",
            "ldr r0, [0x00022c20]",
            "add r0, pc, r0",
            "bl sym.imp.system",
            "mov r0, r4",
            "bl sym.imp.system",
            "mov r0, 0",
            "add sp, sp, 0x11c",
            "pop {r4, r5, r6, r7, pc}"
        ]
    },
    "sym.wps_validate_probe_req": {
        "function_address": "0x0002f374",
        "instructions": [
            "cmp r0, 0",
            "beq 0x2f484",
            "push {r4, r5, lr}",
            "sub sp, sp, 0x1ec",
            "mov r1, sp",
            "bl fcn.00008c8c",
            "cmp r0, 0",
            "bge 0x2f39c",
            "mvn r0, 0",
            "b 0x2f47c",
            "ldr r4, [sp, 4]",
            "ldr r0, [sp]",
            "adds r5, r4, 0",
            "movne r5, 1",
            "bl fcn.0002f058",
            "cmp r0, 0",
            "bne 0x2f394",
            "ldr r3, [sp, 0x8c]",
            "cmp r3, 0",
            "beq 0x2f394",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bhi 0x2f394",
            "ldr r0, [sp, 0x28]",
            "mov r1, r5",
            "mov r2, 1",
            "bl fcn.0002ee14",
            "cmp r0, 0",
            "bne 0x2f394",
            "ldr r2, [sp, 0x18]",
            "ldr r3, [sp, 0x14]",
            "cmp r2, 0",
            "bne 0x2f400",
            "cmp r3, 0",
            "beq 0x2f394",
            "ldr r3, [sp, 0x30]",
            "cmp r3, 0",
            "beq 0x2f394",
            "ldr r3, [sp, 0x34]",
            "cmp r3, 0",
            "beq 0x2f394",
            "ldr r0, [sp, 0x38]",
            "bl fcn.0002f02c",
            "cmp r0, 0",
            "bne 0x2f394",
            "ldr r0, [sp, 0x3c]",
            "bl fcn.0002f000",
            "cmp r0, 0",
            "bne 0x2f394",
            "ldr r0, [sp, 0x40]",
            "mov r1, 1",
            "bl fcn.0002ee4c",
            "cmp r0, 0",
            "bne 0x2f394",
            "mov r0, r4",
            "mov r1, r5",
            "bl fcn.0002ed7c",
            "cmp r0, 0",
            "bne 0x2f394",
            "ldr r3, [sp, 0xa0]",
            "cmp r3, 0",
            "beq 0x2f47c",
            "ldrb r0, [r3]",
            "cmp r0, 1",
            "movls r0, 0",
            "mvnhi r0, 0",
            "add sp, sp, 0x1ec",
            "pop {r4, r5, pc}",
            "mvn r0, 0",
            "bx lr"
        ]
    },
    "sym.zyNetCtrl_checkWIFIStateSyncList": {
        "function_address": "0x00016a44",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "ldr r5, [0x00016b78]",
            "ldr r3, [0x00016b7c]",
            "add r5, pc, r5",
            "ldr r8, [r5, r3]",
            "ldr r3, [r8]",
            "cmp r3, 0",
            "bne 0x16a6c",
            "mov r0, 0",
            "pop {r4, r5, r6, r7, r8, pc}",
            "mov r0, 0",
            "bl sym.imp.time",
            "ldr r3, [0x00016b80]",
            "ldr r2, [0x00016b84]",
            "ldr r4, [r5, r3]",
            "ldr r2, [r5, r2]",
            "ldr r3, [r4]",
            "ldr r2, [r2]",
            "rsb r0, r3, r0",
            "cmp r0, r2",
            "blt 0x16b70",
            "mov r0, 0",
            "mov r6, 0",
            "bl sym.imp.time",
            "ldr r3, [0x00016b88]",
            "str r0, [r4]",
            "ldr r7, [r5, r3]",
            "ldr r4, [r7]",
            "cmp r4, 0",
            "beq 0x16b40",
            "ldr r3, [0x00016b8c]",
            "ldr r3, [r5, r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "bne 0x16b0c",
            "ldr r3, [r4, 0x118]",
            "cmp r3, 5",
            "bgt 0x16b38",
            "ldr r3, [r4, 0x11c]",
            "cmp r3, 0",
            "bne 0x16b38",
            "ldr r1, [r4, 0xc]",
            "add r3, r4, 0x14",
            "ldr r2, [r4, 0x10]",
            "add r0, r4, 4",
            "bl loc.imp.sendWIFIStateRenew",
            "ldr r3, [r4, 0x118]",
            "add r3, r3, 1",
            "str r3, [r4, 0x118]",
            "b 0x16b34",
            "cmp r3, 1",
            "bne 0x16b38",
            "ldr r3, [r4, 0x11c]",
            "cmp r3, 0",
            "bne 0x16b38",
            "ldr r1, [r4, 0xc]",
            "add r0, r4, 4",
            "ldr r2, [r4, 0x10]",
            "add r3, r4, 0x14",
            "bl loc.imp.sendWIFIStateSearch",
            "add r6, r6, 1",
            "ldr r4, [r4]",
            "b 0x16ab4",
            "cmp r6, 0",
            "ldreq r0, [r7]",
            "bne 0x16a64",
            "cmp r0, 0",
            "beq 0x16b64",
            "ldr r4, [r0]",
            "bl sym.imp.free",
            "mov r0, r4",
            "b 0x16b4c",
            "str r0, [r7]",
            "str r0, [r8]",
            "pop {r4, r5, r6, r7, r8, pc}",
            "mov r0, 0x10",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "loc.imp.sendWIFIStateRenew": {
        "function_address": "0x00008e18",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x5c4]!"
        ]
    },
    "loc.imp.sendWIFIStateSearch": {
        "function_address": "0x00008c68",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x6e4]!"
        ]
    },
    "sym.FW_setFWupgradeTime": {
        "function_address": "0x000249dc",
        "instructions": [
            "push {r0, r1, r2, r4, r5, lr}",
            "mov r0, 0",
            "ldr r4, [0x00024a70]",
            "bl sym.imp.time",
            "ldr r3, [0x00024a74]",
            "add r4, pc, r4",
            "ldr r5, [r4, r3]",
            "ldr r3, [0x00024a78]",
            "str r0, [r5]",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x24a68",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x47b",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00024a7c]",
            "ldr r0, [0x00024a80]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xc1",
            "bl sym.imp.printf",
            "ldr r0, [0x00024a84]",
            "ldr r1, [r5]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00024a88]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "add sp, sp, 0xc",
            "pop {r4, r5, lr}",
            "b sym.imp.fflush",
            "add sp, sp, 0xc",
            "pop {r4, r5, pc}"
        ]
    },
    "sym.zyNetCtrl_WPS_sendResponseMsg": {
        "function_address": "0x0001ba18",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, lr}",
            "mov r5, r0",
            "ldr r6, [0x0001bd84]",
            "sub sp, sp, 0x2c",
            "ldr r3, [0x0001bd88]",
            "add r6, pc, r6",
            "ldr r7, [r6, r3]",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x1ba8c",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x477",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001bd8c]",
            "ldr r0, [0x0001bd90]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x71",
            "bl sym.imp.printf",
            "ldr r0, [0x0001bd94]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0001bd98]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x0001bd9c]",
            "ldr r3, [r6, r3]",
            "ldr r3, [r3]",
            "cmp r3, 1",
            "bne 0x1bae8",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x1bbf0",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x482",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001bda0]",
            "ldr r0, [0x0001bda4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x71",
            "bl sym.imp.printf",
            "ldr r0, [0x0001bda8]",
            "add r0, pc, r0",
            "b 0x1bbdc",
            "mov r4, 0",
            "mov r2, 0xc",
            "str r4, [sp, 0x18]",
            "mov r1, r4",
            "add r0, sp, 0x1c",
            "add r8, r5, 6",
            "bl sym.imp.memset",
            "mov r0, r8",
            "add r1, sp, 0x18",
            "bl fcn.00009070",
            "cmp r0, r4",
            "beq 0x1bb60",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x1bbf0",
            "mov r0, r4",
            "bl sym.imp.time",
            "movw r3, 0x48e",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001bdac]",
            "ldr r0, [0x0001bdb0]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x71",
            "bl sym.imp.printf",
            "ldr r0, [0x0001bdb4]",
            "add r0, pc, r0",
            "b 0x1bbdc",
            "ldr r3, [0x0001bdb8]",
            "ldr r3, [r6, r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x1bbf0",
            "ldrb r1, [r5, 0x15]",
            "ldrb r2, [r3, 4]",
            "cmp r1, r2",
            "bne 0x1bb68",
            "ldr r3, [0x0001bdbc]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "mov sb, r3",
            "cmp r0, 0",
            "bne 0x1bbf8",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x1bbf0",
            "bl sym.imp.time",
            "movw r3, 0x4c7",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001bdc0]",
            "ldr r0, [0x0001bdc4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x71",
            "bl sym.imp.printf",
            "ldr r0, [0x0001bdc8]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0001bd98]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, 0x10",
            "b 0x1bd7c",
            "mov r0, 1",
            "mov r1, 0x10",
            "bl sym.imp.calloc",
            "subs r4, r0, 0",
            "bne 0x1bc50",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x1bbf0",
            "bl sym.imp.time",
            "movw r3, 0x4cd",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001bdcc]",
            "ldr r0, [0x0001bdd0]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x71",
            "bl sym.imp.printf",
            "ldr r0, [0x0001bdd4]",
            "add r0, pc, r0",
            "b 0x1bbdc",
            "ldrb r3, [r5]",
            "mov r0, 0",
            "str r0, [sp, 0x14]",
            "strb r3, [r4]",
            "ldrb r3, [r5, 1]",
            "strb r3, [r4, 1]",
            "ldrb r3, [r5, 2]",
            "strb r3, [r4, 2]",
            "ldrb r3, [r5, 3]",
            "strb r3, [r4, 3]",
            "ldrb r3, [r5, 4]",
            "strb r3, [r4, 4]",
            "ldrb r3, [r5, 5]",
            "strb r3, [r4, 5]",
            "ldrb r3, [r5, 6]",
            "strb r3, [r4, 6]",
            "ldrb r3, [r5, 7]",
            "strb r3, [r4, 7]",
            "ldrb r3, [r5, 8]",
            "strb r3, [r4, 8]",
            "ldrb r3, [r5, 9]",
            "strb r3, [r4, 9]",
            "ldrb r3, [r5, 0xa]",
            "strb r3, [r4, 0xa]",
            "ldrb r3, [r5, 0xb]",
            "strb r3, [r4, 0xb]",
            "ldrh r3, [r5, 0x12]",
            "strh r3, [r4, 0xc]",
            "ldrb r3, [r5, 0x14]",
            "strb r3, [r4, 0xe]",
            "ldrb r3, [r5, 0x15]",
            "strb r3, [r4, 0xf]",
            "ldrb r3, [r7]",
            "cmp r3, 3",
            "bls 0x1bd48",
            "bl sym.imp.time",
            "movw r3, 0x4e1",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001bdd8]",
            "ldr r0, [0x0001bddc]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x71",
            "bl sym.imp.printf",
            "ldrb r0, [r4, 3]",
            "ldrb r3, [r4, 2]",
            "ldrb r1, [r4]",
            "ldrb r2, [r4, 1]",
            "str r0, [sp]",
            "ldrb r0, [r4, 4]",
            "str r0, [sp, 4]",
            "ldrb r0, [r4, 5]",
            "str r0, [sp, 8]",
            "ldr r0, [0x0001bde0]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0001bd98]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [sb]",
            "cmp r3, 0",
            "beq 0x1bd64",
            "mov r0, 1",
            "mov r1, r4",
            "add r2, sp, 0x14",
            "blx r3",
            "mov r0, r4",
            "bl fcn.00008cec",
            "ldrb r1, [r5, 0x15]",
            "mov r0, r8",
            "bl loc.imp.setAPautoconfigCheckflag",
            "mov r0, 0",
            "add sp, sp, 0x2c",
            "pop {r4, r5, r6, r7, r8, sb, pc}"
        ]
    },
    "loc.imp.setAPautoconfigCheckflag": {
        "function_address": "0x00008fd4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x49c]!"
        ]
    },
    "sym.zyNetCtrl_WPS_sendUnicastRenew": {
        "function_address": "0x0002142c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, lr}",
            "mov r6, r0",
            "ldr r5, [0x000215dc]",
            "sub sp, sp, 0x24",
            "cmp r1, 0",
            "cmpne r0, 0",
            "mov r7, r1",
            "add r5, pc, r5",
            "beq 0x215d0",
            "ldr r3, [0x000215e0]",
            "ldr r3, [r5, r3]",
            "ldr r4, [r3]",
            "cmp r4, 0",
            "bne 0x215d0",
            "str r4, [sp, 0x10]",
            "mov r1, r4",
            "mov r8, r2",
            "add r0, sp, 0x14",
            "mov r2, 0xc",
            "bl sym.imp.memset",
            "mov r0, r6",
            "add r1, sp, 0x10",
            "bl fcn.00009070",
            "subs sb, r0, 0",
            "beq 0x214e4",
            "ldr r3, [0x000215e4]",
            "ldr r3, [r5, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x215d0",
            "mov r0, r4",
            "bl sym.imp.time",
            "movw r3, 0xfaf",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000215e8]",
            "ldr r0, [0x000215ec]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x36c",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x000215f0]",
            "add r0, pc, r0",
            "b 0x21544",
            "mov r0, 1",
            "mov r1, 0x14",
            "bl sym.imp.calloc",
            "subs r4, r0, 0",
            "bne 0x2155c",
            "ldr r3, [0x000215e4]",
            "ldr r3, [r5, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x215d0",
            "bl sym.imp.time",
            "movw r3, 0xfb9",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000215f4]",
            "ldr r0, [0x000215f8]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x36c",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x000215fc]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00021600]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0x215d0",
            "strb sb, [r4, 0xc]",
            "strb r8, [r4, 0xd]",
            "ldr r0, [r6]",
            "str sb, [sp, 0xc]",
            "str r0, [r4]",
            "ldrh r3, [r6, 4]",
            "strh r3, [r4, 4]",
            "ldr r3, [r7]",
            "str r3, [r4, 6]",
            "ldrh r3, [r7, 4]",
            "strh r3, [r4, 0xa]",
            "mov r3, 1",
            "str r3, [r4, 0x10]",
            "ldr r3, [0x00021604]",
            "ldr r3, [r5, r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x215b4",
            "mov r0, 3",
            "mov r1, r4",
            "add r2, sp, 0xc",
            "blx r3",
            "mov r0, r4",
            "bl fcn.00008cec",
            "mov r0, r4",
            "mov r1, r8",
            "bl loc.imp.setAPautoconfigCheckflag",
            "mov r0, 0",
            "b 0x215d4",
            "mov r0, 0x10",
            "add sp, sp, 0x24",
            "pop {r4, r5, r6, r7, r8, sb, pc}"
        ]
    },
    "sym.zyNetCtrl_WPS_setWPSConfByBand": {
        "function_address": "0x000218bc",
        "instructions": [
            "ldr ip, [0x0002194c]",
            "cmp r0, 0xff",
            "push {r3, lr}",
            "moveq r2, 0",
            "add ip, pc, ip",
            "ldr r3, [0x00021950]",
            "ldr r3, [ip, r3]",
            "ldr r3, [r3]",
            "bne 0x218fc",
            "cmp r3, 0",
            "beq 0x2192c",
            "str r2, [r3, 0x208]",
            "str r2, [r3, 0x20c]",
            "ldr r3, [r3]",
            "b 0x218e0",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x21924",
            "ldrb lr, [r3, 4]",
            "cmp lr, r0",
            "bne 0x218f8",
            "cmp r1, 2",
            "strls r1, [r3, 0x208]",
            "cmp r2, 1",
            "strls r2, [r3, 0x20c]",
            "b 0x2192c",
            "mov r0, 0x10",
            "pop {r3, pc}",
            "ldr r3, [0x00021954]",
            "mov r1, 0",
            "mov r2, r1",
            "ldr r3, [ip, r3]",
            "ldr r0, [r3]",
            "bl fcn.00008bf0",
            "mov r0, 0",
            "pop {r3, pc}"
        ]
    },
    "sym.zyNetCtrl_WPS_setWiFiReloadFlag": {
        "function_address": "0x00022260",
        "instructions": [
            "push {r0, r1, r4, r5, r6, lr}",
            "cmp r0, 1",
            "ldr r4, [0x00022380]",
            "mov r6, r0",
            "add r4, pc, r4",
            "bls 0x222d0",
            "ldr r3, [0x00022384]",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x22374",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x1043",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00022388]",
            "ldr r0, [0x0002238c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x3e4",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x00022390]",
            "mov r1, r6",
            "add r0, pc, r0",
            "b 0x22330",
            "cmp r1, 1",
            "mov r5, r1",
            "bls 0x22348",
            "ldr r3, [0x00022384]",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x22374",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x1048",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00022394]",
            "ldr r0, [0x00022398]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x3e4",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x0002239c]",
            "mov r1, r5",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x000223a0]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0x22374",
            "ldr r3, [0x000223a4]",
            "ldr r3, [r4, r3]",
            "str r0, [r3]",
            "ldr r3, [0x000223a8]",
            "ldr r3, [r4, r3]",
            "str r1, [r3]",
            "mov r1, 0",
            "mov r2, r1",
            "bl fcn.00008bf0",
            "mov r0, 0",
            "b 0x22378",
            "mov r0, 0x10",
            "add sp, sp, 8",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.Log_AddDownloadLogFileList": {
        "function_address": "0x0002c1c8",
        "instructions": [
            "push {r4, r5, lr}",
            "subs r5, r0, 0",
            "ldr r4, [0x0002c3d0]",
            "sub sp, sp, 0x8c",
            "add r4, pc, r4",
            "bne 0x2c22c",
            "ldr r3, [0x0002c3d4]",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x2c3c4",
            "bl sym.imp.time",
            "mov r3, 0xaf",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002c3d8]",
            "ldr r0, [0x0002c3dc]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x1d",
            "bl sym.imp.printf",
            "ldr r0, [0x0002c3e0]",
            "add r0, pc, r0",
            "b 0x2c32c",
            "ldrb r3, [r5]",
            "cmp r3, 0xff",
            "bne 0x2c2d0",
            "ldrb r3, [r5, 1]",
            "cmp r3, 0xff",
            "bne 0x2c2d0",
            "ldrb r3, [r5, 2]",
            "cmp r3, 0xff",
            "bne 0x2c2d0",
            "ldrb r3, [r5, 3]",
            "cmp r3, 0xff",
            "bne 0x2c2d0",
            "ldrb r3, [r5, 4]",
            "cmp r3, 0xff",
            "bne 0x2c2d0",
            "ldrb r3, [r5, 5]",
            "cmp r3, 0xff",
            "bne 0x2c2d0",
            "ldr r5, [0x0002c3e4]",
            "mov r1, 0",
            "str r1, [sp, 8]",
            "add r0, sp, 0xc",
            "add r5, pc, r5",
            "mov r2, 0x7c",
            "bl sym.imp.memset",
            "ldr r1, [0x0002c3e8]",
            "add r4, sp, 8",
            "mov r2, r5",
            "mov r0, r4",
            "add r1, pc, r1",
            "bl sym.imp.sprintf",
            "mov r0, r4",
            "bl sym.imp.system",
            "ldr r1, [0x0002c3ec]",
            "mov r0, r4",
            "mov r2, r5",
            "add r1, pc, r1",
            "bl sym.imp.sprintf",
            "mov r0, r4",
            "bl sym.imp.system",
            "b 0x2c3c4",
            "mov r0, 1",
            "mov r1, 0x90",
            "bl sym.imp.calloc",
            "subs r3, r0, 0",
            "bne 0x2c344",
            "ldr r3, [0x0002c3d4]",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x2c3c4",
            "bl sym.imp.time",
            "mov r3, 0xc4",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0002c3f0]",
            "ldr r0, [0x0002c3f4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x1d",
            "bl sym.imp.printf",
            "ldr r0, [0x0002c3f8]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0002c3fc]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0x2c3c4",
            "ldr r0, [r5]",
            "str r0, [r3, 0x84]",
            "ldrh r2, [r5, 4]",
            "strh r2, [r3, 0x88]",
            "mov r2, 0",
            "str r2, [r3, 0x8c]",
            "ldr r2, [0x0002c400]",
            "ldr r1, [r4, r2]",
            "ldr r2, [r1]",
            "cmp r2, 0",
            "streq r3, [r1]",
            "beq 0x2c388",
            "ldr r1, [r2]",
            "cmp r1, 0",
            "movne r2, r1",
            "bne 0x2c374",
            "str r3, [r2]",
            "mov r0, 0",
            "bl sym.imp.time",
            "ldr r3, [0x0002c404]",
            "ldr r3, [r4, r3]",
            "str r0, [r3]",
            "ldr r3, [0x0002c408]",
            "ldr r3, [r4, r3]",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "mov r2, 1",
            "ldr r3, [0x0002c40c]",
            "ldr r3, [r4, r3]",
            "str r2, [r3]",
            "b 0x2c3c8",
            "mov r0, 0x10",
            "add sp, sp, 0x8c",
            "pop {r4, r5, pc}"
        ]
    },
    "sym.readNetworkCtrloutputfile": {
        "function_address": "0x00010a38",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, lr}",
            "sub sp, sp, 0x4a0",
            "ldr r5, [0x00010ba4]",
            "sub sp, sp, 0xc",
            "ldr r4, [0x00010ba8]",
            "add r5, pc, r5",
            "add r4, pc, r4",
            "mov r0, r5",
            "mov r1, r4",
            "bl sym.imp.fopen",
            "cmp r0, 0",
            "bne 0x10a70",
            "mov r0, 0x10",
            "b 0x10b98",
            "bl sym.imp.fclose",
            "mov r1, 0",
            "mov r2, 0x1fc",
            "str r1, [sp, 0xa8]",
            "add r0, sp, 0xac",
            "bl sym.imp.memset",
            "ldr r3, [0x00010bac]",
            "add r6, sp, 0xa8",
            "ldr r1, [0x00010bb0]",
            "mov r2, r5",
            "add r3, pc, r3",
            "mov r0, r6",
            "add r1, pc, r1",
            "mov r5, r3",
            "bl sym.imp.sprintf",
            "mov r0, r6",
            "bl sym.imp.system",
            "ldr r0, [0x00010bb4]",
            "add r0, pc, r0",
            "bl sym.imp.system",
            "mov r0, r5",
            "mov r1, r4",
            "bl sym.imp.fopen",
            "subs r6, r0, 0",
            "beq 0x10a68",
            "add r5, sp, 0x28",
            "sub r4, r5, 8",
            "add r8, r4, 1",
            "add r7, sp, 0x2a8",
            "mov r1, 0x200",
            "mov r0, r7",
            "mov r2, r6",
            "bl sym.imp.fgets",
            "subs sb, r0, 0",
            "beq 0x10b80",
            "mov r1, 0",
            "add r0, sp, 0x2c",
            "str r1, [sp, 0x1c]",
            "mov r2, 0x7c",
            "str r1, [sp, 0x28]",
            "bl sym.imp.memset",
            "ldr r1, [0x00010bb8]",
            "add r3, r4, 2",
            "str r3, [sp]",
            "add r3, r4, 3",
            "str r3, [sp, 4]",
            "add r3, r4, 4",
            "str r3, [sp, 8]",
            "add r3, r4, 5",
            "str r3, [sp, 0xc]",
            "sub r3, r5, 0xc",
            "str r3, [sp, 0x10]",
            "mov r2, r4",
            "add r1, pc, r1",
            "mov r3, r8",
            "str r5, [sp, 0x14]",
            "mov r0, r7",
            "bl sym.imp.sscanf",
            "mov r0, r5",
            "bl sym.imp.strlen",
            "ldr r1, [sp, 0x1c]",
            "mov r3, 1",
            "str r3, [sp]",
            "mov r2, r0",
            "mov r3, r5",
            "mov r0, r4",
            "bl loc.imp.addNetworkCtrlList",
            "b 0x10ae0",
            "mov r0, r6",
            "bl sym.imp.fclose",
            "ldr r0, [0x00010bbc]",
            "add r0, pc, r0",
            "bl sym.imp.remove",
            "mov r0, sb",
            "add sp, sp, 0x4a0",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, pc}"
        ]
    },
    "loc.imp.addNetworkCtrlList": {
        "function_address": "0x00008bcc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x74c]!"
        ]
    },
    "sym.zyNetCtrl_WPS_addAPautoconfigsupposelist": {
        "function_address": "0x000223ac",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r8, r0",
            "ldr r5, [0x00022448]",
            "mov r7, r1",
            "mov r0, 1",
            "mov r1, 0x210",
            "add r5, pc, r5",
            "mov r6, r2",
            "bl sym.imp.calloc",
            "subs r4, r0, 0",
            "beq 0x22440",
            "strb r8, [r4, 4]",
            "mov r1, r7",
            "add r0, r4, 5",
            "bl sym.imp.strcpy",
            "add r0, r4, 0x104",
            "mov r1, r6",
            "add r0, r0, 1",
            "bl sym.imp.strcpy",
            "mov r3, 0",
            "str r3, [r4, 0x208]",
            "mov r3, 1",
            "str r3, [r4, 0x20c]",
            "ldr r3, [0x0002244c]",
            "ldr r2, [r5, r3]",
            "ldr r3, [r2]",
            "cmp r3, 0",
            "bne 0x22428",
            "str r4, [r2]",
            "mov r0, r3",
            "pop {r4, r5, r6, r7, r8, pc}",
            "ldr r0, [r3]",
            "cmp r0, 0",
            "movne r3, r0",
            "bne 0x22428",
            "str r4, [r3]",
            "pop {r4, r5, r6, r7, r8, pc}",
            "mov r0, 0x10",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "sym.zyNetCtrl_FWCtrl_CheckNewFW_FWUpgrade": {
        "function_address": "0x00023c50",
        "instructions": [
            "push {r0, r1, r4, lr}",
            "ldr r4, [0x00023cc4]",
            "ldr r3, [0x00023cc8]",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x23cb8",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0xde",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r0, [0x00023ccc]",
            "ldr r3, [0x00023cd0]",
            "add r0, pc, r0",
            "add r3, pc, r3",
            "bl sym.imp.printf",
            "ldr r0, [0x00023cd4]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x00023cd8]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, 0",
            "add sp, sp, 8",
            "pop {r4, pc}"
        ]
    },
    "sym.getSSHState": {
        "function_address": "0x00012574",
        "instructions": [
            "push {r4, r5, lr}",
            "mov r4, 0",
            "sub sp, sp, 0x94",
            "mov r5, r0",
            "mov r1, r4",
            "mov r2, 0x7c",
            "str r4, [sp, 0x10]",
            "add r0, sp, 0x14",
            "bl sym.imp.memset",
            "str r4, [sp]",
            "mov r2, 0xc",
            "mov r1, r4",
            "add r0, sp, 4",
            "bl sym.imp.memset",
            "ldr r1, [0x000125fc]",
            "add r3, sp, 0x10",
            "mov r0, r3",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "mov r3, r0",
            "mov r2, sp",
            "ldr r0, [0x00012600]",
            "mov r1, r3",
            "add r0, pc, r0",
            "bl fcn.00008788",
            "cmp r0, 0",
            "mov r0, r5",
            "moveq r1, sp",
            "ldrne r1, [0x00012604]",
            "addne r1, pc, r1",
            "bl sym.imp.strcpy",
            "mov r0, 0",
            "add sp, sp, 0x94",
            "pop {r4, r5, pc}"
        ]
    },
    "sym.notifyApAutoConfRespMsgReceived": {
        "function_address": "0x0000d838",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, lr}",
            "mov r4, r0",
            "ldr r5, [0x0000dee4]",
            "sub sp, sp, 0x14",
            "ldr r3, [0x0000dee8]",
            "add r5, pc, r5",
            "ldr r6, [r5, r3]",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xd8b0",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x875",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000deec]",
            "ldr r0, [0x0000def0]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x268",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x0000def4]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000def8]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xd930",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x876",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000defc]",
            "ldr r0, [0x0000df00]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x268",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldrb r0, [r4, 3]",
            "ldrb r3, [r4, 2]",
            "str r0, [sp]",
            "ldrb r0, [r4, 4]",
            "ldrb r1, [r4]",
            "str r0, [sp, 4]",
            "ldrb r0, [r4, 5]",
            "ldrb r2, [r4, 1]",
            "str r0, [sp, 8]",
            "ldr r0, [0x0000df04]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000def8]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xd9b0",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x877",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000df08]",
            "ldr r0, [0x0000df0c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x268",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldrb r0, [r4, 9]",
            "ldrb r3, [r4, 8]",
            "str r0, [sp]",
            "ldrb r0, [r4, 0xa]",
            "ldrb r1, [r4, 6]",
            "str r0, [sp, 4]",
            "ldrb r0, [r4, 0xb]",
            "ldrb r2, [r4, 7]",
            "str r0, [sp, 8]",
            "ldr r0, [0x0000df10]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000def8]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xda10",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x878",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000df14]",
            "ldr r0, [0x0000df18]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x268",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x0000df1c]",
            "ldrb r1, [r4, 0xc]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000def8]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xda70",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x87a",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000df20]",
            "ldr r0, [0x0000df24]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x268",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x0000df28]",
            "ldrb r1, [r4, 0xd]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000def8]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x0000df2c]",
            "mov r0, 2",
            "ldr r3, [r5, r3]",
            "ldr r1, [r3]",
            "bl fcn.00008980",
            "subs r7, r0, 0",
            "bne 0xdec0",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xdae4",
            "bl sym.imp.time",
            "movw r3, 0x88f",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000df30]",
            "ldr r0, [0x0000df34]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x268",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x0000df38]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000def8]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xdb64",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x892",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000df3c]",
            "ldr r0, [0x0000df40]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x268",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldrb r0, [r4, 3]",
            "ldrb r3, [r4, 2]",
            "str r0, [sp]",
            "ldrb r0, [r4, 4]",
            "ldrb r1, [r4]",
            "str r0, [sp, 4]",
            "ldrb r0, [r4, 5]",
            "ldrb r2, [r4, 1]",
            "str r0, [sp, 8]",
            "ldr r0, [0x0000df44]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000def8]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xdbe4",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x895",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000df48]",
            "ldr r0, [0x0000df4c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x268",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldrb r0, [r4, 9]",
            "ldrb r3, [r4, 8]",
            "str r0, [sp]",
            "ldrb r0, [r4, 0xa]",
            "ldrb r1, [r4, 6]",
            "str r0, [sp, 4]",
            "ldrb r0, [r4, 0xb]",
            "ldrb r2, [r4, 7]",
            "str r0, [sp, 8]",
            "ldr r0, [0x0000df50]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000def8]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xdc44",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x896",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000df54]",
            "ldr r0, [0x0000df58]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x268",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x0000df5c]",
            "ldrb r1, [r4, 0xc]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000def8]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xdca4",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x897",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000df60]",
            "ldr r0, [0x0000df64]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x268",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x0000df68]",
            "ldrb r1, [r4, 0xd]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000def8]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x0000df6c]",
            "ldr r3, [r5, r3]",
            "ldr sb, [r3]",
            "cmp sb, 1",
            "beq 0xdd08",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xdec0",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x8a3",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000df70]",
            "ldr r0, [0x0000df74]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x268",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x0000df78]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "b 0xdd70",
            "ldr r3, [0x0000df7c]",
            "ldr r8, [r5, r3]",
            "ldrb r3, [r8]",
            "sub r3, r3, 3",
            "cmp r3, 2",
            "bhi 0xdd84",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xdec0",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x8a9",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000df80]",
            "ldr r0, [0x0000df84]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x268",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x0000df88]",
            "ldrb r1, [r8]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000def8]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0xdec0",
            "mov r0, 6",
            "mov r1, sb",
            "bl sym.imp.calloc",
            "subs r8, r0, 0",
            "beq 0xdec0",
            "mov r1, sb",
            "mov r0, 6",
            "bl sym.imp.calloc",
            "subs sb, r0, 0",
            "moveq r0, r8",
            "beq 0xdebc",
            "mov r3, 0",
            "mov r2, r4",
            "ldrb r1, [r2, r3]!",
            "strb r1, [r8, r3]",
            "ldrb r2, [r2, 6]",
            "strb r2, [sb, r3]",
            "add r3, r3, 1",
            "cmp r3, 6",
            "bne 0xddb4",
            "ldrb r2, [r4, 0xd]",
            "mov r0, r8",
            "mov r1, sb",
            "bl fcn.00009208",
            "cmp r0, 0x10",
            "bne 0xde38",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xdeb0",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x8ef",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000df8c]",
            "ldr r0, [0x0000df90]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x268",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x0000df94]",
            "add r0, pc, r0",
            "b 0xde9c",
            "ldrb r2, [r4, 0xd]",
            "mov r0, r8",
            "mov r1, sb",
            "mov r3, 4",
            "bl fcn.0000901c",
            "cmp r0, 0x10",
            "bne 0xdec8",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xdeb0",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x8fa",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000df98]",
            "ldr r0, [0x0000df9c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x268",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x0000dfa0]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000def8]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, r8",
            "bl fcn.00008cec",
            "mov r0, sb",
            "bl fcn.00008cec",
            "mov r7, 0x10",
            "b 0xded8",
            "mov r0, r8",
            "bl fcn.00008cec",
            "mov r0, sb",
            "bl fcn.00008cec",
            "mov r0, r7",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, pc}"
        ]
    },
    "sym.setSSIDandPW_Main_5G": {
        "function_address": "0x0001c05c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "sub sp, sp, 0x400",
            "ldr r6, [0x0001c28c]",
            "sub sp, sp, 8",
            "ldr r3, [0x0001c290]",
            "mov r5, r0",
            "add r6, pc, r6",
            "ldr r3, [r6, r3]",
            "ldrb r2, [r3]",
            "mov sl, r3",
            "cmp r2, 3",
            "bls 0x1c0e0",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x55f",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001c294]",
            "ldr r0, [0x0001c298]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xa5",
            "bl sym.imp.printf",
            "ldr r1, [r5]",
            "ldr r0, [0x0001c29c]",
            "add r1, r1, 0x20",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0001c2a0]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r4, 0",
            "mov r2, 0xfc",
            "str r4, [sp, 8]",
            "mov r1, r4",
            "add r0, sp, 0xc",
            "add sb, sp, 8",
            "bl sym.imp.memset",
            "str r4, [sp, 0x108]",
            "mov r1, r4",
            "mov r2, 0xfc",
            "add r0, sp, 0x10c",
            "bl sym.imp.memset",
            "str r4, [sp, 0x208]",
            "mov r1, r4",
            "mov r2, 0xfc",
            "add r0, sp, 0x20c",
            "bl sym.imp.memset",
            "str r4, [sp, 0x308]",
            "mov r1, r4",
            "mov r2, 0xfc",
            "add r0, sp, 0x30c",
            "bl sym.imp.memset",
            "ldr r2, [r5]",
            "mov r0, sb",
            "ldr r1, [0x0001c2a4]",
            "add r8, sp, 0x208",
            "add r2, r2, 0x20",
            "add r7, sp, 0x308",
            "add r1, pc, r1",
            "bl sym.imp.sprintf",
            "ldr r3, [r5]",
            "ldrh r3, [r3, 0xe0]",
            "cmp r3, 1",
            "bne 0x1c18c",
            "ldr r1, [0x0001c2a8]",
            "mov r0, r8",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "ldr r1, [0x0001c2ac]",
            "mov r0, r7",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "b 0x1c22c",
            "cmp r3, 0x20",
            "bne 0x1c22c",
            "ldrb r3, [sl]",
            "cmp r3, 3",
            "bls 0x1c1f4",
            "mov r0, r4",
            "bl sym.imp.time",
            "movw r3, 0x56e",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001c2b0]",
            "ldr r0, [0x0001c2b4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0xa5",
            "bl sym.imp.printf",
            "ldr r3, [r5]",
            "ldr r0, [0x0001c2b8]",
            "ldr r1, [r3, 0xe8]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0001c2a0]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r1, [0x0001c2bc]",
            "mov r0, r8",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "ldr r1, [0x0001c2c0]",
            "mov r0, r7",
            "add r1, pc, r1",
            "bl sym.imp.strcpy",
            "ldr r3, [r5]",
            "add r0, sp, 0x108",
            "ldr r1, [0x0001c2c4]",
            "ldr r2, [r3, 0xe8]",
            "add r1, pc, r1",
            "bl sym.imp.sprintf",
            "mov r0, sb",
            "bl sym.imp.system",
            "mov r0, r8",
            "bl sym.imp.system",
            "mov r0, r7",
            "bl sym.imp.system",
            "ldr r3, [r5]",
            "ldrh r3, [r3, 0xe0]",
            "cmp r3, 0x20",
            "bne 0x1c25c",
            "add r0, sp, 0x108",
            "bl sym.imp.system",
            "ldr r0, [0x0001c2c8]",
            "add r0, pc, r0",
            "bl sym.imp.system",
            "ldr r0, [0x0001c2cc]",
            "add r0, pc, r0",
            "bl sym.imp.system",
            "ldr r0, [0x0001c2d0]",
            "add r0, pc, r0",
            "bl sym.imp.system",
            "add sp, sp, 0x400",
            "add sp, sp, 8",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "sym.zyNetCtrl_WPS_removecopySyncTolist": {
        "function_address": "0x000211d8",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, lr}",
            "mov r5, r0",
            "ldr r6, [0x0002140c]",
            "sub sp, sp, 0x2c",
            "ldr r3, [0x00021410]",
            "mov r4, r1",
            "add r6, pc, r6",
            "mov r8, r2",
            "ldr r3, [r6, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x212b0",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0xeb1",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x00021414]",
            "ldr r0, [0x00021418]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x348",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldrb r0, [r5, 3]",
            "ldrb r3, [r5, 2]",
            "ldrb r1, [r5]",
            "ldrb r2, [r5, 1]",
            "str r0, [sp]",
            "ldrb r0, [r5, 4]",
            "str r0, [sp, 4]",
            "ldrb r0, [r5, 5]",
            "str r0, [sp, 8]",
            "ldrb r0, [r4]",
            "str r0, [sp, 0xc]",
            "ldrb r0, [r4, 1]",
            "str r0, [sp, 0x10]",
            "ldrb r0, [r4, 2]",
            "str r0, [sp, 0x14]",
            "ldrb r0, [r4, 3]",
            "str r0, [sp, 0x18]",
            "ldrb r0, [r4, 4]",
            "str r0, [sp, 0x1c]",
            "ldrb r0, [r4, 5]",
            "str r8, [sp, 0x24]",
            "str r0, [sp, 0x20]",
            "ldr r0, [0x0002141c]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x00021420]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "cmp r4, 0",
            "cmpne r5, 0",
            "moveq r3, 1",
            "movne r3, 0",
            "beq 0x21400",
            "ldr r2, [0x00021424]",
            "ldr r7, [r6, r2]",
            "ldr r2, [r7]",
            "cmp r2, 0",
            "beq 0x21400",
            "ldr r1, [0x00021428]",
            "ldr r6, [r6, r1]",
            "ldr r1, [r6]",
            "mov sb, r1",
            "mov r5, r1",
            "cmp r3, r2",
            "bge 0x21400",
            "ldrb ip, [r5, 0xa]",
            "ldrb r0, [r4]",
            "cmp ip, r0",
            "bne 0x213ec",
            "ldrb ip, [r5, 0xb]",
            "ldrb r0, [r4, 1]",
            "cmp ip, r0",
            "bne 0x213ec",
            "ldrb ip, [r5, 0xc]",
            "ldrb r0, [r4, 2]",
            "cmp ip, r0",
            "bne 0x213ec",
            "ldrb ip, [r5, 0xd]",
            "ldrb r0, [r4, 3]",
            "cmp ip, r0",
            "bne 0x213ec",
            "ldrb ip, [r5, 0xe]",
            "ldrb r0, [r4, 4]",
            "cmp ip, r0",
            "bne 0x213ec",
            "ldrb ip, [r5, 0xf]",
            "ldrb r0, [r4, 5]",
            "cmp ip, r0",
            "bne 0x213ec",
            "ldr r0, [r5, 0x14]",
            "ldrb ip, [r0]",
            "cmp ip, r8",
            "bne 0x213ec",
            "cmp r2, 1",
            "bne 0x2138c",
            "ldr r0, [r1, 0x14]",
            "bl fcn.00008cec",
            "ldr r0, [r6]",
            "bl fcn.00008cec",
            "mov r0, 0",
            "str r0, [r6]",
            "str r0, [r7]",
            "b 0x21404",
            "cmp r3, 0",
            "bne 0x213c4",
            "cmp r2, 1",
            "ble 0x213c4",
            "ldr r0, [r1, 0x14]",
            "ldr r4, [r1]",
            "bl fcn.00008cec",
            "ldr r0, [r6]",
            "bl fcn.00008cec",
            "ldr r3, [r7]",
            "str r4, [r6]",
            "sub r3, r3, 1",
            "str r3, [r7]",
            "b 0x213e4",
            "ldr r4, [r5]",
            "bl fcn.00008cec",
            "mov r0, r5",
            "bl fcn.00008cec",
            "ldr r3, [r7]",
            "sub r3, r3, 1",
            "str r3, [r7]",
            "str r4, [sb]",
            "mov r0, 0",
            "b 0x21404",
            "ldr r5, [r5]",
            "cmp r3, 0",
            "add r3, r3, 1",
            "ldrgt sb, [sb]",
            "b 0x212ec",
            "mov r0, 0x10",
            "add sp, sp, 0x2c",
            "pop {r4, r5, r6, r7, r8, sb, pc}"
        ]
    },
    "sym.sha1_vector": {
        "function_address": "0x00033170",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, lr}",
            "sub sp, sp, 0x64",
            "add r5, sp, 4",
            "mov r7, r0",
            "mov r4, 0",
            "mov r0, r5",
            "mov r8, r1",
            "mov sb, r2",
            "mov r6, r3",
            "bl fcn.00008824",
            "cmp r4, r7",
            "beq 0x331b8",
            "ldr r1, [r8, r4, lsl 2]",
            "mov r0, r5",
            "ldr r2, [sb, r4, lsl 2]",
            "add r4, r4, 1",
            "bl fcn.00008770",
            "b 0x33198",
            "mov r0, r6",
            "mov r1, r5",
            "bl fcn.00009394",
            "mov r0, 0",
            "add sp, sp, 0x64",
            "pop {r4, r5, r6, r7, r8, sb, pc}"
        ]
    },
    "fcn.00008824": {
        "function_address": "0x00008824",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x9bc]!"
        ]
    },
    "fcn.00009394": {
        "function_address": "0x00009394",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x21c]!"
        ]
    },
    "sym.os_gmtime": {
        "function_address": "0x00033ef0",
        "instructions": [
            "push {r0, r1, r4, lr}",
            "add r3, sp, 8",
            "mov r4, r1",
            "str r0, [r3, -4]!",
            "mov r0, r3",
            "bl sym.imp.gmtime",
            "cmp r0, 0",
            "beq 0x33f54",
            "ldr r3, [r0]",
            "str r3, [r4]",
            "ldr r3, [r0, 4]",
            "str r3, [r4, 4]",
            "ldr r3, [r0, 8]",
            "str r3, [r4, 8]",
            "ldr r3, [r0, 0xc]",
            "str r3, [r4, 0xc]",
            "ldr r3, [r0, 0x10]",
            "add r3, r3, 1",
            "str r3, [r4, 0x10]",
            "ldr r3, [r0, 0x14]",
            "mov r0, 0",
            "add r3, r3, 0x760",
            "add r3, r3, 0xc",
            "str r3, [r4, 0x14]",
            "b 0x33f58",
            "mvn r0, 0",
            "add sp, sp, 8",
            "pop {r4, pc}"
        ]
    },
    "sym.setWPSConfByBand": {
        "function_address": "0x0000fb4c",
        "instructions": [
            "push {r0, r1, r2, r4, r5, r6, r7, lr}",
            "subs r7, r0, 0",
            "ldr r4, [0x0000fc54]",
            "add r4, pc, r4",
            "bne 0xfbc4",
            "ldr r3, [0x0000fc58]",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0xfc40",
            "bl sym.imp.time",
            "movw r3, 0xc6d",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000fc5c]",
            "ldr r0, [0x0000fc60]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x370",
            "add r3, r3, 2",
            "bl sym.imp.printf",
            "ldr r0, [0x0000fc64]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000fc68]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0xfc40",
            "mov r6, r1",
            "mov r5, r2",
            "ldr r1, [0x0000fc6c]",
            "mov r2, 4",
            "add r1, pc, r1",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "bne 0xfc18",
            "ldr r3, [0x0000fc70]",
            "ldr r3, [r4, r3]",
            "ldr r4, [r3]",
            "cmp r4, 0",
            "beq 0xfc40",
            "ldrb r0, [r4, 4]",
            "mov r1, r6",
            "mov r2, r5",
            "bl fcn.000095f8",
            "ldr r4, [r4]",
            "cmp r4, 0",
            "bne 0xfbf8",
            "b 0xfc48",
            "mov r0, r7",
            "mov r1, 0",
            "mov r2, 0x10",
            "bl sym.imp.strtol",
            "uxtb r0, r0",
            "mov r1, r6",
            "mov r2, r5",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, lr}",
            "b fcn.000095f8",
            "mov r0, 0x10",
            "b 0xfc4c",
            "mov r0, r4",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, pc}"
        ]
    },
    "sym.zyNetCtrl_WPS_reSendRenewbySynclist": {
        "function_address": "0x00021608",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x14",
            "ldr r6, [0x00021890]",
            "ldr r3, [0x00021894]",
            "add r6, pc, r6",
            "ldr sb, [r6, r3]",
            "ldr r3, [sb]",
            "cmp r3, 0",
            "bne 0x21634",
            "mov r0, 0",
            "b 0x21888",
            "ldr r3, [0x00021898]",
            "ldr r8, [r6, r3]",
            "ldr r4, [r8]",
            "cmp r4, 0",
            "beq 0x2162c",
            "mov r0, 0",
            "mov r7, 1",
            "bl sym.imp.time",
            "mov r5, r0",
            "ldr r3, [r4, 0x18]",
            "rsb r3, r3, r5",
            "cmp r3, 2",
            "ble 0x2168c",
            "ldr r3, [r4, 0x20]",
            "cmp r3, 0",
            "bne 0x2168c",
            "ldr r3, [r4, 0x14]",
            "add r0, r4, 4",
            "add r1, r4, 0xa",
            "ldrb r2, [r3]",
            "bl fcn.000095ec",
            "str r7, [r4, 0x20]",
            "ldr r4, [r4]",
            "cmp r4, 0",
            "bne 0x21658",
            "ldr r3, [sb]",
            "cmp r3, 0",
            "beq 0x2162c",
            "ldr r5, [r8]",
            "cmp r5, 0",
            "beq 0x2162c",
            "mov r7, r4",
            "mov fp, r4",
            "mov sl, r4",
            "ldr r3, [r5, 0x20]",
            "str r3, [sp, 0xc]",
            "cmp r3, 0",
            "movne r4, fp",
            "bne 0x21838",
            "mov r0, 1",
            "mov r1, 0x24",
            "bl sym.imp.calloc",
            "subs r4, r0, 0",
            "bne 0x21748",
            "ldr r3, [0x0002189c]",
            "ldr r3, [r6, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x21884",
            "bl sym.imp.time",
            "movw r3, 0xf4a",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000218a0]",
            "ldr r0, [0x000218a4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x38c",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x000218a8]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x000218ac]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0x21884",
            "mov r0, 1",
            "mov r1, r0",
            "bl sym.imp.calloc",
            "str r0, [r4, 0x14]",
            "cmp r0, 0",
            "bne 0x217cc",
            "ldr r3, [0x0002189c]",
            "ldr r3, [r6, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x217c0",
            "bl sym.imp.time",
            "mov r3, 0xf50",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x000218b0]",
            "ldr r0, [0x000218b4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x38c",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x000218b8]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x000218ac]",
            "ldr r3, [r6, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, r4",
            "bl fcn.00008cec",
            "b 0x21884",
            "ldr r3, [sp, 0xc]",
            "mov r2, r5",
            "cmp r7, 0",
            "cmpne sl, 0",
            "add r7, r7, 1",
            "ldr r0, [r2, 4]!",
            "moveq sl, r4",
            "str r0, [r4, 4]",
            "ldrh r2, [r2, 4]",
            "strh r2, [r4, 8]",
            "mov r2, r5",
            "ldr r1, [r2, 0xa]!",
            "str r1, [r4, 0xa]",
            "ldrh r2, [r2, 4]",
            "strh r2, [r4, 0xe]",
            "ldr r1, [r5, 0x14]",
            "ldr r2, [r4, 0x14]",
            "ldrb r1, [r1]",
            "strb r1, [r2]",
            "ldr r2, [r5, 0x18]",
            "str r2, [r4, 0x18]",
            "ldr r2, [r5, 0x1c]",
            "str r2, [r4, 0x1c]",
            "ldr r2, [r5, 0x20]",
            "str r3, [r4]",
            "str r2, [r4, 0x20]",
            "strne r4, [fp]",
            "ldr r5, [r5]",
            "cmp r5, 0",
            "movne fp, r4",
            "bne 0x216bc",
            "ldr r4, [r8]",
            "cmp r4, 0",
            "beq 0x21878",
            "ldr r0, [r4, 0x10]",
            "ldr r5, [r4]",
            "bl fcn.00008cec",
            "ldr r0, [r4, 0x14]",
            "bl fcn.00008cec",
            "mov r0, r4",
            "mov r4, r5",
            "bl fcn.00008cec",
            "b 0x2184c",
            "str sl, [r8]",
            "str r7, [sb]",
            "b 0x2162c",
            "mov r0, 0x10",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.wps_validate_m5_encr": {
        "function_address": "0x0002fbc8",
        "instructions": [
            "cmp r0, 0",
            "beq 0x2fc24",
            "push {r4, lr}",
            "sub sp, sp, 0x1e8",
            "mov r4, r1",
            "mov r1, sp",
            "bl fcn.00008c8c",
            "cmp r0, 0",
            "bge 0x2fbf4",
            "mvn r0, 0",
            "b 0x2fc1c",
            "ldr r3, [sp, 0x68]",
            "cmp r3, 0",
            "bne 0x2fc0c",
            "cmp r4, 0",
            "beq 0x2fc18",
            "b 0x2fbec",
            "ldr r3, [sp, 0x70]",
            "cmp r3, 0",
            "beq 0x2fc00",
            "mov r0, 0",
            "add sp, sp, 0x1e8",
            "pop {r4, pc}",
            "mvn r0, 0",
            "bx lr"
        ]
    },
    "sym.wps_build_encr_type_flags": {
        "function_address": "0x00033764",
        "instructions": [
            "push {r4, lr}",
            "mov r0, r1",
            "mov r4, r1",
            "movw r1, 0x1010",
            "bl fcn.000331d0",
            "mov r0, r4",
            "mov r1, 2",
            "bl fcn.000331d0",
            "mov r0, r4",
            "mov r1, 0xd",
            "bl fcn.000331d0",
            "mov r0, 0",
            "pop {r4, pc}"
        ]
    },
    "sym.setApproveFlag": {
        "function_address": "0x0000f938",
        "instructions": [
            "push {r0, r1, r4, lr}",
            "ldr r4, [0x0000f9f0]",
            "ldr r3, [0x0000f9f4]",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "bne 0xf980",
            "sub r4, r0, 1",
            "clz r4, r4",
            "lsr r4, r4, 5",
            "mov r0, r4",
            "bl fcn.00008b30",
            "cmp r4, 1",
            "bne 0xf978",
            "bl fcn.0000883c",
            "bl fcn.00008fe0",
            "b 0xf9e4",
            "ldr r3, [0x0000f9f8]",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0xf9e4",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0xc35",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000f9fc]",
            "ldr r0, [0x0000fa00]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x354",
            "add r3, r3, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x0000fa04]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000fa08]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, 0",
            "add sp, sp, 8",
            "pop {r4, pc}"
        ]
    },
    "fcn.00008b30": {
        "function_address": "0x00008b30",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x7b4]!"
        ]
    },
    "sym.notifyApAutoConfSrchMsgReceived": {
        "function_address": "0x0000cf14",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r4, r0",
            "ldr r5, [0x0000d754]",
            "sub sp, sp, 0x220",
            "ldr r3, [0x0000d758]",
            "add r5, pc, r5",
            "ldr r6, [r5, r3]",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xcf8c",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x7ce",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000d75c]",
            "ldr r0, [0x0000d760]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x248",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x0000d764]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000d768]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xd00c",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x7cf",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000d76c]",
            "ldr r0, [0x0000d770]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x248",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldrb r0, [r4, 9]",
            "ldrb r3, [r4, 8]",
            "ldrb r1, [r4, 6]",
            "ldrb r2, [r4, 7]",
            "str r0, [sp]",
            "ldrb r0, [r4, 0xa]",
            "str r0, [sp, 4]",
            "ldrb r0, [r4, 0xb]",
            "str r0, [sp, 8]",
            "ldr r0, [0x0000d774]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000d768]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xd08c",
            "mov r0, 0",
            "bl sym.imp.time",
            "mov r3, 0x7d0",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000d778]",
            "ldr r0, [0x0000d77c]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x248",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldrb r0, [r4, 0xf]",
            "ldrb r3, [r4, 0xe]",
            "ldrb r1, [r4, 0xc]",
            "ldrb r2, [r4, 0xd]",
            "str r0, [sp]",
            "ldrb r0, [r4, 0x10]",
            "str r0, [sp, 4]",
            "ldrb r0, [r4, 0x11]",
            "str r0, [sp, 8]",
            "ldr r0, [0x0000d780]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000d768]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xd10c",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x7d1",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000d784]",
            "ldr r0, [0x0000d788]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x248",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldrb r0, [r4, 3]",
            "ldrb r3, [r4, 2]",
            "ldrb r1, [r4]",
            "ldrb r2, [r4, 1]",
            "str r0, [sp]",
            "ldrb r0, [r4, 4]",
            "str r0, [sp, 4]",
            "ldrb r0, [r4, 5]",
            "str r0, [sp, 8]",
            "ldr r0, [0x0000d78c]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000d768]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xd16c",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x7d2",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000d790]",
            "ldr r0, [0x0000d794]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x248",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x0000d798]",
            "ldrh r1, [r4, 0x12]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000d768]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xd1cc",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x7d3",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000d79c]",
            "ldr r0, [0x0000d7a0]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x248",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x0000d7a4]",
            "ldrb r1, [r4, 0x14]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000d768]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xd22c",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x7d5",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000d7a8]",
            "ldr r0, [0x0000d7ac]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x248",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x0000d7b0]",
            "ldrb r1, [r4, 0x15]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000d768]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x0000d7b4]",
            "mov r0, 2",
            "ldr r3, [r5, r3]",
            "ldr r1, [r3]",
            "bl fcn.00008980",
            "cmp r0, 0",
            "bne 0xd5b0",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xd2a0",
            "bl sym.imp.time",
            "movw r3, 0x7ec",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000d7b8]",
            "ldr r0, [0x0000d7bc]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x248",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x0000d7c0]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000d768]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xd320",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x7ef",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000d7c4]",
            "ldr r0, [0x0000d7c8]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x248",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldrb r0, [r4, 9]",
            "ldrb r3, [r4, 8]",
            "ldrb r1, [r4, 6]",
            "ldrb r2, [r4, 7]",
            "str r0, [sp]",
            "ldrb r0, [r4, 0xa]",
            "str r0, [sp, 4]",
            "ldrb r0, [r4, 0xb]",
            "str r0, [sp, 8]",
            "ldr r0, [0x0000d7cc]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000d768]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xd3a0",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x7f2",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000d7d0]",
            "ldr r0, [0x0000d7d4]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x248",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldrb r0, [r4, 3]",
            "ldrb r3, [r4, 2]",
            "ldrb r1, [r4]",
            "ldrb r2, [r4, 1]",
            "str r0, [sp]",
            "ldrb r0, [r4, 4]",
            "str r0, [sp, 4]",
            "ldrb r0, [r4, 5]",
            "str r0, [sp, 8]",
            "ldr r0, [0x0000d7d8]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000d768]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xd420",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x7f5",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000d7dc]",
            "ldr r0, [0x0000d7e0]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x248",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldrb r0, [r4, 0xf]",
            "ldrb r3, [r4, 0xe]",
            "ldrb r1, [r4, 0xc]",
            "ldrb r2, [r4, 0xd]",
            "str r0, [sp]",
            "ldrb r0, [r4, 0x10]",
            "str r0, [sp, 4]",
            "ldrb r0, [r4, 0x11]",
            "str r0, [sp, 8]",
            "ldr r0, [0x0000d7e4]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000d768]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xd480",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x7f6",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000d7e8]",
            "ldr r0, [0x0000d7ec]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x248",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x0000d7f0]",
            "ldrh r1, [r4, 0x12]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000d768]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xd4e0",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x7f7",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000d7f4]",
            "ldr r0, [0x0000d7f8]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x248",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x0000d7fc]",
            "ldrb r1, [r4, 0x14]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000d768]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xd540",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x7f8",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000d800]",
            "ldr r0, [0x0000d804]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x248",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x0000d808]",
            "ldrb r1, [r4, 0x15]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "ldr r3, [0x0000d768]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x0000d80c]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "cmp r0, 0",
            "beq 0xd5b8",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xd5b0",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x81f",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000d810]",
            "ldr r0, [0x0000d814]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x248",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x0000d818]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000d768]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r7, 0x10",
            "b 0xd748",
            "ldr r3, [0x0000d81c]",
            "ldr r7, [r5, r3]",
            "ldrb r3, [r7]",
            "sub r3, r3, 3",
            "cmp r3, 2",
            "bhi 0xd620",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xd5b0",
            "bl sym.imp.time",
            "movw r3, 0x825",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000d820]",
            "ldr r0, [0x0000d824]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x248",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x0000d828]",
            "ldrb r1, [r7]",
            "add r0, pc, r0",
            "bl sym.imp.printf",
            "b 0xd5a0",
            "ldrb r0, [r4, 0x15]",
            "add r1, sp, 0x10",
            "bl fcn.00009418",
            "subs r7, r0, 0",
            "bne 0xd5b0",
            "ldr sb, [sp, 0x218]",
            "cmp sb, 1",
            "bne 0xd5b0",
            "mov r0, 6",
            "mov r1, sb",
            "bl sym.imp.calloc",
            "subs r8, r0, 0",
            "beq 0xd5b0",
            "mov r1, sb",
            "mov r0, 6",
            "bl sym.imp.calloc",
            "subs sb, r0, 0",
            "moveq r0, r8",
            "beq 0xd6c0",
            "mov r2, r4",
            "mov r3, r7",
            "add r1, r4, r3",
            "add r2, r2, 1",
            "ldrb r1, [r1, 6]",
            "strb r1, [r8, r3]",
            "ldrb r1, [r2, 0xb]",
            "strb r1, [sb, r3]",
            "add r3, r3, 1",
            "cmp r3, 6",
            "bne 0xd674",
            "ldrb r2, [r4, 0x15]",
            "mov r0, r8",
            "mov r1, sb",
            "bl fcn.00009208",
            "mov sl, r0",
            "mov r0, r8",
            "cmp sl, 0x10",
            "bne 0xd6c8",
            "bl fcn.00008cec",
            "mov r0, sb",
            "bl fcn.00008cec",
            "b 0xd5b0",
            "bl fcn.00008cec",
            "mov r0, sb",
            "bl fcn.00008cec",
            "mov r0, r4",
            "bl fcn.000095e0",
            "cmp r0, 0x10",
            "mov r4, r0",
            "bne 0xd748",
            "ldrb r3, [r6]",
            "cmp r3, 3",
            "bls 0xd5b0",
            "mov r0, 0",
            "mov r7, r4",
            "bl sym.imp.time",
            "movw r3, 0x861",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000d82c]",
            "ldr r0, [0x0000d830]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x248",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x0000d834]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000d768]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, r7",
            "add sp, sp, 0x220",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "fcn.000095e0": {
        "function_address": "0x000095e0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x94]!"
        ]
    },
    "sym.uci_commit": {
        "function_address": "0x000118c4",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "subs r6, r0, 0",
            "sub sp, sp, 0x80",
            "moveq r0, 0x10",
            "beq 0x11910",
            "mov r4, 0",
            "mov r2, 0x7c",
            "str r4, [sp]",
            "mov r1, r4",
            "add r0, sp, 4",
            "bl sym.imp.memset",
            "ldr r1, [0x00011918]",
            "mov r2, r6",
            "mov r0, sp",
            "add r1, pc, r1",
            "bl sym.imp.sprintf",
            "mov r0, sp",
            "bl sym.imp.system",
            "mov r0, r4",
            "add sp, sp, 0x80",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.getSecurityConfig": {
        "function_address": "0x0000cc08",
        "instructions": [
            "push {r0, r1, r4, lr}",
            "ldr r4, [0x0000cca0]",
            "ldr r3, [0x0000cca4]",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0xcc78",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0x763",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0000cca8]",
            "ldr r0, [0x0000ccac]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x1ec",
            "add r3, r3, 3",
            "bl sym.imp.printf",
            "ldr r0, [0x0000ccb0]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0000ccb4]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x0000ccb8]",
            "mov r0, 2",
            "ldr r3, [r4, r3]",
            "ldr r1, [r3]",
            "bl fcn.00008980",
            "cmp r0, 0",
            "movne r0, 0x10",
            "moveq r0, 0",
            "add sp, sp, 8",
            "pop {r4, pc}"
        ]
    },
    "sym.wps_validate_m3": {
        "function_address": "0x0002f928",
        "instructions": [
            "cmp r0, 0",
            "beq 0x2f9d4",
            "push {r4, r5, lr}",
            "sub sp, sp, 0x1ec",
            "mov r1, sp",
            "bl fcn.00008c8c",
            "cmp r0, 0",
            "bge 0x2f950",
            "mvn r0, 0",
            "b 0x2f9cc",
            "ldr r5, [sp, 4]",
            "ldr r0, [sp]",
            "adds r4, r5, 0",
            "movne r4, 1",
            "bl fcn.0002f058",
            "cmp r0, 0",
            "bne 0x2f9c0",
            "ldr r0, [sp, 8]",
            "bl fcn.0002efd8",
            "cmp r0, 0",
            "bne 0x2f9c0",
            "ldr r3, [sp, 0x10]",
            "cmp r3, 0",
            "beq 0x2f9c0",
            "ldr r3, [sp, 0x58]",
            "cmp r3, 0",
            "beq 0x2f9c0",
            "ldr r3, [sp, 0x5c]",
            "cmp r3, 0",
            "beq 0x2f9c0",
            "mov r0, r5",
            "mov r1, r4",
            "bl fcn.0002ed7c",
            "cmp r0, 0",
            "bne 0x2f9c0",
            "ldr r3, [sp, 0x4c]",
            "cmp r3, 0",
            "bne 0x2f9cc",
            "cmp r4, 0",
            "bne 0x2f948",
            "mov r0, r4",
            "add sp, sp, 0x1ec",
            "pop {r4, r5, pc}",
            "mvn r0, 0",
            "bx lr"
        ]
    },
    "sym.zyNetCtrl_WPS_sendSearchMessage": {
        "function_address": "0x0001b604",
        "instructions": [
            "push {r0, r1, r2, r3, r4, r5, r6, lr}",
            "mov r6, r0",
            "ldr r4, [0x0001b6d4]",
            "mov r0, 1",
            "mov r1, 2",
            "add r4, pc, r4",
            "bl sym.imp.calloc",
            "subs r5, r0, 0",
            "bne 0x1b688",
            "ldr r3, [0x0001b6d8]",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x1b6c8",
            "bl sym.imp.time",
            "movw r3, 0x395",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001b6dc]",
            "ldr r0, [0x0001b6e0]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x35",
            "bl sym.imp.printf",
            "ldr r0, [0x0001b6e4]",
            "add r0, pc, r0",
            "bl sym.imp.puts",
            "ldr r3, [0x0001b6e8]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "b 0x1b6c8",
            "ldr r2, [0x0001b6ec]",
            "mov r0, 0",
            "strb r0, [r5]",
            "strb r6, [r5, 1]",
            "str r0, [sp, 0xc]",
            "ldr r2, [r4, r2]",
            "ldr ip, [r2]",
            "cmp ip, r0",
            "beq 0x1b6b8",
            "mov r1, r5",
            "add r2, sp, 0xc",
            "blx ip",
            "mov r0, r5",
            "bl fcn.00008cec",
            "mov r0, 0",
            "b 0x1b6cc",
            "mov r0, 0x10",
            "add sp, sp, 0x10",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.SecurityCtrl_request": {
        "function_address": "0x00011174",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x704]!",
            "push {r0, r1, r2, r4, r5, r6, r7, lr}",
            "mov r7, r0",
            "ldr r4, [0x00011204]",
            "mov r6, r1",
            "ldr r3, [0x00011208]",
            "mov r5, r2",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3]",
            "cmp r3, 3",
            "bls 0x111ec",
            "mov r0, 0",
            "bl sym.imp.time",
            "movw r3, 0xf3c",
            "mov r1, r0",
            "str r3, [sp]",
            "mov r2, 4",
            "ldr r3, [0x0001120c]",
            "ldr r0, [0x00011210]",
            "add r3, pc, r3",
            "add r0, pc, r0",
            "add r3, r3, 0x410",
            "add r3, r3, 5",
            "bl sym.imp.printf",
            "mov r0, 0xa",
            "bl sym.imp.putchar",
            "ldr r3, [0x00011214]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, r7",
            "mov r1, r6",
            "mov r2, r5",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, lr}",
            "b 0x8c38"
        ]
    },
    "entry.init0": {
        "function_address": "0x000097f8",
        "instructions": [
            "ldr r0, [0x0000975c]",
            "ldr r1, [0x00009760]",
            "add r0, pc, r0",
            "add r1, pc, r1",
            "ldr r3, [0x00009764]",
            "rsb r1, r0, r1",
            "asr r1, r1, 2",
            "add r3, pc, r3",
            "add r1, r1, r1, lsr 31",
            "asrs r1, r1, 1",
            "bxeq lr",
            "ldr r2, [0x00009768]",
            "ldr r3, [r3, r2]",
            "cmp r3, 0",
            "bxeq lr",
            "bx r3",
            "push {r3, lr}",
            "ldr r3, [0x00009830]",
            "ldr r2, [0x00009834]",
            "add r3, pc, r3",
            "ldr r3, [r3, r2]",
            "cmp r3, 0",
            "beq 0x9828",
            "ldr r0, [0x00009838]",
            "ldr r1, [0x0000983c]",
            "add r0, pc, r0",
            "add r1, pc, r1",
            "bl loc.imp.__register_frame_info",
            "pop {r3, lr}",
            "b 0x971c"
        ]
    },
    "loc.imp.__register_frame_info": {
        "function_address": "0x00009640",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x54]!"
        ]
    },
    "entry.fini0": {
        "function_address": "0x0000976c",
        "instructions": [
            "ldr r3, [0x000097dc]",
            "push {r4, lr}",
            "add r3, pc, r3",
            "ldr r4, [0x000097e0]",
            "ldrb r3, [r3]",
            "add r4, pc, r4",
            "cmp r3, 0",
            "popne {r4, pc}",
            "ldr r3, [0x000097e4]",
            "ldr r3, [r4, r3]",
            "cmp r3, 0",
            "beq 0x97a8",
            "ldr r3, [0x000097e8]",
            "ldr r0, [0x000097a8]",
            "bl sym.imp.__cxa_finalize",
            "bl entry0",
            "ldr r3, [0x000097ec]",
            "ldr r3, [r4, r3]",
            "cmp r3, 0",
            "beq 0x97c8",
            "ldr r0, [0x000097f0]",
            "add r0, pc, r0",
            "bl loc.imp.__deregister_frame_info",
            "ldr r3, [0x000097f4]",
            "mov r2, 1",
            "add r3, pc, r3",
            "strb r2, [r3]",
            "pop {r4, pc}"
        ]
    },
    "sym.imp.__cxa_finalize": {
        "function_address": "0x00008920",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x914]!"
        ]
    },
    "r15": {
        "function_address": "0x000096d0",
        "instructions": [
            "ldr r2, [0x0000970c]",
            "ldr r0, [0x00009710]",
            "add r2, pc, r2",
            "add r0, pc, r0",
            "add r2, r2, 3",
            "ldr r3, [0x00009714]",
            "rsb r2, r0, r2",
            "cmp r2, 6",
            "add r3, pc, r3",
            "bxls lr",
            "ldr r2, [0x00009718]",
            "ldr r3, [r3, r2]",
            "cmp r3, 0",
            "bxeq lr",
            "bx r3"
        ]
    },
    "loc.imp.__deregister_frame_info": {
        "function_address": "0x00008d1c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x66c]!"
        ]
    },
    "fcn.0002eda4": {
        "function_address": "0x0002eda4",
        "instructions": [
            "cmp r1, 0",
            "beq 0x2edfc",
            "tst r0, 0x6000",
            "beq 0x2edc4",
            "and r3, r0, 8",
            "uxth r3, r3",
            "cmp r3, 0",
            "beq 0x2ee0c",
            "movw r3, 0x6008",
            "and r3, r3, r0",
            "cmp r3, 8",
            "beq 0x2ee04",
            "tst r0, 0x600",
            "beq 0x2edec",
            "and r3, r0, 0x80",
            "uxth r3, r3",
            "cmp r3, 0",
            "beq 0x2ee0c",
            "and r0, r0, 0x680",
            "subs r0, r0, 0x80",
            "movne r0, 1",
            "bx lr",
            "mov r0, 1",
            "bx lr",
            "mov r0, 0",
            "bx lr",
            "mov r0, r3",
            "bx lr"
        ]
    },
    "fcn.00034e5c": {
        "function_address": "0x00034e5c",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "ands r3, r1, 0x80000007",
            "submi r3, r3, 1",
            "mov r4, r0",
            "mvnmi r3, r3, lsl 29",
            "mvnmi r3, r3, lsr 29",
            "addmi r3, r3, 1",
            "rsb r3, r3, 0x10",
            "add r5, r1, r3",
            "lsl r0, r5, 2",
            "bl sym.imp.malloc",
            "str r0, [r4, 0xc]",
            "cmp r0, 0",
            "beq 0x34ec0",
            "mov r3, 0",
            "str r3, [r4, 8]",
            "mov r2, r3",
            "stm r4, {r3, r5}",
            "cmp r3, r5",
            "ldrlt r1, [r4, 0xc]",
            "strlt r2, [r1, r3, lsl 2]",
            "addlt r3, r3, 1",
            "blt 0x34ea4",
            "mov r0, 0",
            "pop {r3, r4, r5, pc}",
            "mvn r0, 1",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.000359f4": {
        "function_address": "0x000359f4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x800",
            "ldr r5, [r0]",
            "sub sp, sp, 0xc",
            "ldr r3, [r1, 4]",
            "mov r6, r0",
            "lsl r5, r5, 1",
            "mov r4, r1",
            "cmp r3, r5",
            "blt 0x35a2c",
            "mov sl, 0",
            "mov fp, 0",
            "mov ip, 0",
            "b 0x35a80",
            "mov r0, r1",
            "mov r1, r5",
            "bl fcn.00034f34",
            "cmp r0, 0",
            "beq 0x35a1c",
            "b 0x35b58",
            "adds r2, r2, r2",
            "adc r3, r3, r3",
            "adds r2, r2, sl",
            "adc r3, r3, fp",
            "tst ip, 1",
            "asreq r0, ip, 1",
            "ldreq r1, [r1, r0, lsl 2]",
            "umlaleq r2, r3, r1, r1",
            "add r1, sp, 8",
            "bic r0, r2, 0xf0000000",
            "lsr sl, r2, 0x1c",
            "str r0, [r1, ip, lsl 2]",
            "add ip, ip, 1",
            "orr sl, sl, r3, lsl 4",
            "lsr fp, r3, 0x1c",
            "cmp ip, r5",
            "ldr r8, [r6]",
            "bge 0x35afc",
            "ldr r1, [r6, 0xc]",
            "sub r3, r8, 1",
            "cmp ip, r3",
            "movlt r3, ip",
            "rsb r2, r3, ip",
            "add r0, r3, 1",
            "add r7, r1, r3, lsl 2",
            "rsb r3, r2, r3",
            "rsb r8, r2, r8",
            "add r3, r3, 1",
            "cmp r8, r0",
            "asr r3, r3, 1",
            "movge r8, r0",
            "cmp r8, r3",
            "mov r0, 0",
            "movlt r3, r8",
            "add lr, r1, r2, lsl 2",
            "mov r2, 0",
            "str r3, [sp]",
            "mov r3, 0",
            "ldr r8, [sp]",
            "cmp r0, r8",
            "bge 0x35a44",
            "ldr sb, [lr], 4",
            "add r0, r0, 1",
            "ldr r8, [r7], -4",
            "umlal r2, r3, sb, r8",
            "b 0x35adc",
            "ldr r2, [r4, 0xc]",
            "mov r3, 0",
            "lsl r8, r8, 1",
            "ldr r1, [r4]",
            "str r8, [r4]",
            "cmp r3, r5",
            "bge 0x35b30",
            "add r0, sp, 8",
            "ldr r0, [r0, r3, lsl 2]",
            "bic r0, r0, 0xf0000000",
            "str r0, [r2, r3, lsl 2]",
            "add r3, r3, 1",
            "b 0x35b10",
            "bic r5, r5, r5, asr 31",
            "add r3, r2, r5, lsl 2",
            "mov r2, 0",
            "cmp r5, r1",
            "strlt r2, [r3], 4",
            "addlt r5, r5, 1",
            "blt 0x35b3c",
            "mov r0, r4",
            "bl fcn.00034d3c",
            "mov r0, 0",
            "add sp, sp, 0x800",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00035d04": {
        "function_address": "0x00035d04",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "subs r5, r1, 0",
            "mov r4, r2",
            "bgt 0x35d20",
            "mov r0, r2",
            "bl fcn.00034ce0",
            "b 0x35db8",
            "ldr r3, [r0]",
            "mov r6, 0x1c",
            "mov r1, r2",
            "mul r3, r6, r3",
            "cmp r5, r3",
            "blt 0x35d40",
            "pop {r4, r5, r6, r7, r8, lr}",
            "b fcn.00034fbc",
            "bl fcn.00034fbc",
            "subs r8, r0, 0",
            "bne 0x35dc0",
            "mov r1, r6",
            "mov r0, r5",
            "bl sym.imp.__aeabi_idiv",
            "mov r7, r0",
            "mov r1, r6",
            "mov r0, r5",
            "bl sym.imp.__aeabi_idivmod",
            "cmp r1, 0",
            "moveq r1, r7",
            "addne r1, r7, 1",
            "lsl r3, r1, 2",
            "ldr r2, [r4]",
            "ldr r6, [r4, 0xc]",
            "cmp r1, r2",
            "strlt r8, [r6, r3]",
            "addlt r1, r1, 1",
            "addlt r3, r3, 4",
            "blt 0x35d78",
            "mov r0, r5",
            "mov r1, 0x1c",
            "bl sym.imp.__aeabi_uidivmod",
            "ldr r3, [r6, r7, lsl 2]",
            "mvn r2, 0",
            "mov r0, r4",
            "bic r1, r3, r2, lsl r1",
            "str r1, [r6, r7, lsl 2]",
            "bl fcn.00034d3c",
            "mov r0, 0",
            "pop {r4, r5, r6, r7, r8, pc}",
            "mov r0, r8",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.00034ec8": {
        "function_address": "0x00034ec8",
        "instructions": [
            "cmp r1, 0",
            "bxle lr",
            "ldr r3, [r0]",
            "mov r2, r0",
            "cmp r3, r1",
            "bgt 0x34ee4",
            "b fcn.00034ce0",
            "str lr, [sp, -4]!",
            "mov r3, 0",
            "ldr r0, [r0, 0xc]",
            "add ip, r0, r1, lsl 2",
            "ldr lr, [r2]",
            "rsb lr, r1, lr",
            "cmp r3, lr",
            "ldrlt lr, [ip], 4",
            "addlt r3, r3, 1",
            "strlt lr, [r0], 4",
            "blt 0x34ef4",
            "mov lr, 0",
            "ldr ip, [r2]",
            "cmp r3, ip",
            "strlt lr, [r0], 4",
            "addlt r3, r3, 1",
            "blt 0x34f14",
            "rsb r1, r1, ip",
            "str r1, [r2]",
            "pop {pc}"
        ]
    },
    "fcn.0003510c": {
        "function_address": "0x0003510c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r7, r0",
            "ldr r5, [r1]",
            "mov r8, r1",
            "ldr r6, [r0]",
            "mov r4, r2",
            "cmp r6, r5",
            "movgt r3, r6",
            "movgt r6, r5",
            "movgt r5, r3",
            "movgt sl, r0",
            "ldr r3, [r2, 4]",
            "add sb, r5, 1",
            "movle sl, r1",
            "cmp r3, sb",
            "blt 0x35170",
            "ldr r3, [r4, 0xc]",
            "mov r1, 0",
            "ldr r0, [r4]",
            "mov r2, r1",
            "str sb, [r4]",
            "ldr ip, [r7, 0xc]",
            "mov r7, r3",
            "ldr lr, [r8, 0xc]",
            "b 0x35188",
            "mov r0, r2",
            "mov r1, sb",
            "bl fcn.00034f34",
            "cmp r0, 0",
            "beq 0x3514c",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}",
            "cmp r1, r6",
            "bge 0x351b4",
            "ldr sb, [lr], 4",
            "add r1, r1, 1",
            "ldr r8, [ip], 4",
            "add r8, sb, r8",
            "add r8, r8, r2",
            "lsr r2, r8, 0x1c",
            "bic r8, r8, 0xf0000000",
            "str r8, [r7], 4",
            "b 0x35188",
            "bic r1, r6, r6, asr 31",
            "cmp r6, r5",
            "lsl ip, r1, 2",
            "add r3, r3, ip",
            "rsbne lr, r3, ip",
            "beq 0x351f8",
            "cmp r1, r5",
            "bge 0x351f8",
            "ldr r6, [sl, 0xc]",
            "add r1, r1, 1",
            "add ip, r3, lr",
            "ldr ip, [r6, ip]",
            "add ip, r2, ip",
            "lsr r2, ip, 0x1c",
            "bic ip, ip, 0xf0000000",
            "str ip, [r3], 4",
            "b 0x351cc",
            "str r2, [r3]",
            "add r1, r3, 4",
            "ldr r3, [r4]",
            "mov r2, 0",
            "cmp r3, r0",
            "strlt r2, [r1], 4",
            "addlt r3, r3, 1",
            "blt 0x35208",
            "mov r0, r4",
            "bl fcn.00034d3c",
            "mov r0, 0",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "fcn.00035074": {
        "function_address": "0x00035074",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "subs r5, r1, 0",
            "bgt 0x35088",
            "mov r0, 0",
            "pop {r3, r4, r5, pc}",
            "ldr r1, [r0]",
            "mov r4, r0",
            "ldr r3, [r0, 4]",
            "add r1, r5, r1",
            "cmp r3, r1",
            "blt 0x350c8",
            "ldr r3, [r4]",
            "ldr r0, [r4, 0xc]",
            "add r3, r5, r3",
            "str r3, [r4]",
            "rsb r1, r5, r3",
            "sub r2, r3, 0xc0000001",
            "sub r1, r1, 0xc0000001",
            "add r2, r0, r2, lsl 2",
            "add r1, r0, r1, lsl 2",
            "b 0x350d8",
            "bl fcn.00034f34",
            "cmp r0, 0",
            "beq 0x350a0",
            "pop {r3, r4, r5, pc}",
            "sub r3, r3, 1",
            "cmp r3, r5",
            "ldrge r0, [r1], -4",
            "strge r0, [r2], -4",
            "bge 0x350d8",
            "ldr r2, [r4, 0xc]",
            "mov r3, 0",
            "mov r1, r3",
            "str r1, [r2], 4",
            "add r3, r3, 1",
            "cmp r3, r5",
            "bne 0x350f8",
            "b 0x35080"
        ]
    },
    "fcn.000356b8": {
        "function_address": "0x000356b8",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r8, r1",
            "ldr r1, [r0]",
            "mov r7, r0",
            "ldr r3, [r2, 4]",
            "mov r6, r2",
            "add r1, r1, 1",
            "cmp r3, r1",
            "blt 0x356fc",
            "ldr r3, [r7, 8]",
            "mov r2, 0",
            "ldr ip, [r6]",
            "mov r4, r2",
            "str r3, [r6, 8]",
            "ldr r3, [r6, 0xc]",
            "ldr r0, [r7, 0xc]",
            "b 0x35710",
            "mov r0, r2",
            "bl fcn.00034f34",
            "cmp r0, 0",
            "beq 0x356dc",
            "pop {r4, r5, r6, r7, r8, pc}",
            "ldr r1, [r7]",
            "cmp r2, r1",
            "add r1, r3, 4",
            "add r2, r2, 1",
            "bge 0x35748",
            "ldr r3, [r0], 4",
            "mov r5, 0",
            "umlal r4, r5, r3, r8",
            "mov r3, r1",
            "bic r1, r4, 0xf0000000",
            "lsr r4, r4, 0x1c",
            "str r1, [r3, -4]",
            "orr r4, r4, r5, lsl 4",
            "b 0x35710",
            "str r4, [r3]",
            "mov r3, 0",
            "cmp r2, ip",
            "strlt r3, [r1], 4",
            "addlt r2, r2, 1",
            "blt 0x35750",
            "ldr r3, [r7]",
            "mov r0, r6",
            "add r3, r3, 1",
            "str r3, [r6]",
            "bl fcn.00034d3c",
            "mov r0, 0",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.00034ca4": {
        "function_address": "0x00034ca4",
        "instructions": [
            "str lr, [sp, -4]!",
            "mov r2, r0",
            "ldr r3, [r0, 8]",
            "ldr lr, [r1, 8]",
            "cmp r3, lr",
            "beq 0x34ccc",
            "cmp r3, 1",
            "movne r0, 1",
            "mvneq r0, 0",
            "pop {pc}",
            "pop {lr}",
            "cmp r3, 1",
            "moveq r0, r1",
            "moveq r1, r2",
            "b fcn.00034c1c"
        ]
    },
    "sym.imp.__aeabi_uldivmod": {
        "function_address": "0x00008860",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x37000",
            "ldr pc, [ip, 0x994]!"
        ]
    }
}