{
    "sym.shell_mod_init": {
        "function_address": "0x08000534",
        "instructions": [
            "push {r3, lr}",
            "bl sym.print_init_msg",
            "cmp r0, 0",
            "blt 0x8000558",
            "bl sym.register_syscall",
            "cmp r0, 0",
            "movge r0, 0",
            "mvnlt r0, 0",
            "pop {r3, pc}",
            "mvn r0, 0",
            "pop {r3, pc}"
        ]
    },
    "sym.print_init_msg": {
        "function_address": "0x080000f0",
        "instructions": [
            "mov r0, 0",
            "bx lr"
        ]
    },
    "sym.register_syscall": {
        "function_address": "0x08000100",
        "instructions": [
            "push {r4, lr}",
            "sub sp, sp, 0x20",
            "bl tdts_core_syscall_init",
            "subs r4, r0, 0",
            "bne 0x80002a0",
            "movw r0, 0x55aa",
            "movt r0, 0x55aa",
            "bl tdts_core_syscall_set_test_value",
            "bl tdts_core_syscall_get_test_value",
            "movw r3, 0x55aa",
            "movt r3, 0x55aa",
            "cmp r0, r3",
            "bne 0x8000378",
            "ldr ip, [reloc.shell_spin_unlock]",
            "ldr r0, [reloc.shell_spin_lock_init]",
            "ldr r1, [reloc.shell_spin_lock_alloc]",
            "str ip, [sp]",
            "ldr ip, [reloc.shell_spin_lock_bh]",
            "ldr r2, [reloc.shell_spin_lock_free]",
            "ldr r3, [reloc.shell_spin_lock]",
            "str ip, [sp, 4]",
            "ldr ip, [reloc.shell_spin_unlock_bh]",
            "str ip, [sp, 8]",
            "ldr ip, [reloc.shell_spin_is_locked]",
            "str ip, [sp, 0xc]",
            "bl tdts_core_syscall_set_spin_lock",
            "subs r4, r0, 0",
            "bne 0x8000360",
            "ldr ip, [reloc.shell_read_unlock]",
            "ldr r1, [reloc.shell_rwlock_alloc]",
            "ldr r2, [reloc.shell_rwlock_free]",
            "str ip, [sp]",
            "ldr ip, [reloc.shell_read_lock_bh]",
            "ldr r3, [reloc.shell_read_lock]",
            "ldr r0, [reloc.shell_rwlock_init]",
            "str ip, [sp, 4]",
            "ldr ip, [reloc.shell_read_unlock_bh]",
            "str ip, [sp, 8]",
            "ldr ip, [reloc.shell_write_lock]",
            "str ip, [sp, 0xc]",
            "ldr ip, [reloc.shell_write_unlock]",
            "str ip, [sp, 0x10]",
            "ldr ip, [reloc.shell_write_lock_bh]",
            "str ip, [sp, 0x14]",
            "ldr ip, [reloc.shell_write_unlock_bh]",
            "str ip, [sp, 0x18]",
            "bl tdts_core_syscall_set_rwlock",
            "ldr r0, [reloc.shell_vprintf]",
            "ldr r1, [reloc.shell_vsprintf]",
            "ldr r2, [reloc.shell_vsnprintf]",
            "bl tdts_core_syscall_set_printf",
            "subs r4, r0, 0",
            "bne 0x8000348",
            "ldr r0, [reloc.shell_seq_printf]",
            "bl tdts_core_syscall_set_seq_printf",
            "subs r4, r0, 0",
            "bne 0x8000330",
            "ldr ip, [reloc.shell_kfree]",
            "ldr r0, [reloc.shell_vmalloc]",
            "ldr r1, [reloc.shell_vfree]",
            "ldr r2, [reloc.shell_kmalloc_atomic]",
            "ldr r3, [reloc.shell_kmalloc_sleep]",
            "str ip, [sp]",
            "bl tdts_core_syscall_set_malloc",
            "subs r4, r0, 0",
            "bne 0x8000318",
            "ldr r0, [reloc.shell_local_bh_disable]",
            "ldr r1, [reloc.shell_local_bh_enable]",
            "bl tdts_core_syscall_set_local_bh",
            "subs r4, r0, 0",
            "bne 0x8000300",
            "ldr r0, [reloc.shell_smp_mb]",
            "bl tdts_core_syscall_set_smp_mb",
            "subs r4, r0, 0",
            "bne 0x80002e8",
            "ldr r0, [reloc.shell_smp_processor_id]",
            "bl tdts_core_syscall_set_smp_processor_id",
            "ldr ip, [reloc.shell_timer_mod]",
            "ldr r0, [reloc.shell_get_seconds]",
            "ldr r1, [reloc.shell_timer_list_alloc]",
            "str ip, [sp]",
            "ldr ip, [reloc.shell_timer_del]",
            "ldr r2, [reloc.shell_timer_list_free]",
            "ldr r3, [reloc.shell_timer_setup]",
            "str ip, [sp, 4]",
            "bl tdts_core_syscall_set_time",
            "subs r4, r0, 0",
            "bne 0x80002d0",
            "ldr ip, [reloc.shell_bitop_test_bit]",
            "ldr r0, [reloc.shell_bitop_find_first_zero_bit]",
            "ldr r1, [reloc.shell_bitop_set_bit]",
            "str ip, [sp]",
            "ldr ip, [reloc.shell_find_next_bit]",
            "ldr r2, [reloc.shell_bitop_clear_bit]",
            "ldr r3, [reloc.shell_bitop_bitmap_zero]",
            "str ip, [sp, 4]",
            "ldr ip, [reloc.shell_find_next_zero_bit]",
            "str ip, [sp, 8]",
            "bl tdts_core_syscall_set_bitop",
            "subs r4, r0, 0",
            "bne 0x80002b8",
            "mov r0, r4",
            "add sp, sp, 0x20",
            "pop {r4, pc}",
            "ldr r1, [0x08000444]",
            "mov r2, 0x134",
            "mov r3, r4",
            "ldr r0, [0x08000448]",
            "bl printk",
            "b 0x8000294",
            "movw r2, 0x197",
            "ldr r1, [0x08000444]",
            "mov r3, r4",
            "ldr r0, [0x0800044c]",
            "bl printk",
            "b 0x8000294",
            "ldr r1, [0x08000444]",
            "movw r2, 0x18d",
            "mov r3, r4",
            "ldr r0, [0x08000450]",
            "bl printk",
            "b 0x8000294",
            "ldr r1, [0x08000444]",
            "movw r2, 0x17b",
            "mov r3, r4",
            "ldr r0, [0x08000454]",
            "bl printk",
            "b 0x8000294",
            "ldr r1, [0x08000444]",
            "movw r2, 0x172",
            "mov r3, r4",
            "ldr r0, [0x08000454]",
            "bl printk",
            "b 0x8000294",
            "ldr r1, [0x08000444]",
            "movw r2, 0x16a",
            "mov r3, r4",
            "ldr r0, [0x08000458]",
            "bl printk",
            "b 0x8000294",
            "ldr r1, [0x08000444]",
            "movw r2, 0x161",
            "mov r3, r4",
            "ldr r0, [0x0800045c]",
            "bl printk",
            "b 0x8000294",
            "ldr r1, [0x08000444]",
            "movw r2, 0x159",
            "mov r3, r4",
            "ldr r0, [0x08000460]",
            "bl printk",
            "b 0x8000294",
            "ldr r1, [0x08000444]",
            "movw r2, 0x149",
            "mov r3, r4",
            "ldr r0, [0x08000464]",
            "bl printk",
            "b 0x8000294",
            "ldr r1, [0x08000444]",
            "movw r2, 0x13d",
            "mov r3, r4",
            "ldr r0, [0x08000468]",
            "bl printk",
            "b 0x8000294"
        ]
    },
    "sym.__macstr2octet": {
        "function_address": "0x0800c2d8",
        "instructions": [
            "lsl ip, r1, 1",
            "push {r4, r5, r6, r7, lr}",
            "mov r7, r0",
            "cmp ip, r3",
            "sub sp, sp, 0x14",
            "bne 0x800c358",
            "mov r5, r2",
            "mov r4, 0",
            "add r6, sp, 0xc",
            "mov r3, r5",
            "mov r1, 3",
            "ldr r2, [0x0800c39c]",
            "mov r0, r6",
            "bl my_snprintf",
            "add r0, r7, r4",
            "mov r1, r6",
            "mov r2, 0x10",
            "add r4, r4, 1",
            "bl fcn.0800b578",
            "cmp r0, 0",
            "add r5, r5, 2",
            "bne 0x800c340",
            "cmp r4, 6",
            "bne 0x800c2fc",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, pc}",
            "ldr r3, [0x0800c3a0]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "bne 0x800c384",
            "mvn r0, 0",
            "b 0x800c338",
            "ldr r2, [0x0800c3a0]",
            "ldr r2, [r2]",
            "cmp r2, 0",
            "beq 0x800c350",
            "ldr r0, [0x0800c3a4]",
            "mov r2, 0xee",
            "ldr r1, [0x0800c3a8]",
            "str ip, [sp]",
            "bl my_printf",
            "mvn r0, 0",
            "b 0x800c338",
            "ldr r0, [0x0800c3ac]",
            "mov r2, 0xf7",
            "ldr r1, [0x0800c3a8]",
            "bl my_printf",
            "mvn r0, 0",
            "b 0x800c338"
        ]
    },
    "fcn.0800b578": {
        "function_address": "0x0800b578",
        "instructions": [
            "push {r4, r5, lr}",
            "subs r4, r1, 0",
            "sub sp, sp, 0xc",
            "mov r5, r0",
            "bne 0x800b598",
            "mvn r0, 0",
            "add sp, sp, 0xc",
            "pop {r4, r5, pc}",
            "ldrsb r3, [r4]",
            "cmp r3, 0",
            "beq 0x800b58c",
            "mov r0, r4",
            "add r1, sp, 4",
            "bl my_strtoul",
            "ldr r3, [sp, 4]",
            "cmp r3, 0",
            "beq 0x800b58c",
            "cmp r4, r3",
            "beq 0x800b58c",
            "cmn r0, 1",
            "beq 0x800b590",
            "cmp r0, 0xff",
            "strbls r0, [r5]",
            "movls r0, 0",
            "bls 0x800b590",
            "b 0x800b58c"
        ]
    },
    "sym.create_app_branch": {
        "function_address": "0x0800de6c",
        "instructions": [
            "movw r2, 0",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "movt r2, 0",
            "sub sp, sp, 0x14",
            "ldr r3, [r2]",
            "cmp r3, 2",
            "bhi 0x800e180",
            "movw r3, 0",
            "movt r3, 0",
            "ldr r2, [r3, 0xc]",
            "ldr r3, [0x0800e1ec]",
            "cmp r2, 0",
            "beq 0x800e1c8",
            "ldr r3, [r3, 4]",
            "movw r2, 0x161c",
            "ldr sl, [r3, r2]",
            "add r3, r3, 0x1600",
            "add r3, r3, 0x1c",
            "cmp r3, sl",
            "moveq r0, 0",
            "beq 0x800e144",
            "ldr r6, [reloc.udb_mem_dyn]",
            "mov sb, 0",
            "movw fp, 0xffff",
            "sub sl, sl, 0x34",
            "movt sb, 0xc03f",
            "movt fp, 0xc000",
            "mov r3, 2",
            "mov r2, 1",
            "str r3, [sp, 0xc]",
            "str r2, [sp, 8]",
            "ldr r0, [sp, 8]",
            "bl fcn.0800ad18",
            "subs r5, r0, 0",
            "beq .LANCHOR0",
            "ldrb r3, [sl]",
            "mov r2, 1",
            "strb r2, [r5, 2]",
            "cmp sl, 0",
            "add r3, r3, 0xa",
            "strh r3, [r5]",
            "ldrb r3, [sl]",
            "strb r2, [r5, 7]",
            "str sl, [r5, 0xc]",
            "strb r3, [r5, 6]",
            "beq .LANCHOR0",
            "ldrb r3, [r5, 8]",
            "mov r0, r5",
            "tst r3, 1",
            "ldrne r3, [sl, 0xc]",
            "ldreq r3, [sl, 4]",
            "strne r3, [r5, 0x10]",
            "streq r3, [r5, 0x10]",
            "bl fcn.0800a418",
            "movw r2, 0",
            "movt r2, 0",
            "ldr r3, [r2]",
            "cmp r3, 2",
            "bhi 0x800e0dc",
            "mov r0, r5",
            "bl fcn.08009f8c",
            "cmp r0, 0",
            "bne .LANCHOR0",
            "ldr r3, [r5, 0xc]",
            "ldr r7, [r3, 0x1c]",
            "add r3, r3, 0x1c",
            "cmp r3, r7",
            "beq 0x800e078",
            "sub r7, r7, 4",
            "add r8, r5, 0x1c",
            "b 0x800dfd0",
            "mov r3, 2",
            "str fp, [r4, 4]",
            "strh r3, [r4]",
            "ldrb r3, [r5, 8]",
            "lsl r3, r3, 0x1e",
            "str r3, [r4, 8]",
            "ldr r3, [r5, 0x20]",
            "add r2, r4, 0xc",
            "str r2, [r5, 0x20]",
            "str r8, [r4, 0xc]",
            "str r3, [r4, 0x10]",
            "str r2, [r3]",
            "ldr r3, [r5, 0xc]",
            "ldr r7, [r7, 4]",
            "add r3, r3, 0x1c",
            "cmp r7, r3",
            "sub r7, r7, 4",
            "beq 0x800e078",
            "mov r0, 0x14",
            "bl my_kmalloc_atomic",
            "subs r4, r0, 0",
            "mov r1, 0",
            "mov r2, 0x14",
            "beq 0x800e034",
            "bl my_memset",
            "ldrex r3, [r6]",
            "add r3, r3, 0x14",
            "strex r2, r3, [r6]",
            "teq r2, 0",
            "bne 0x800dfec",
            "ldrb r3, [r7]",
            "tst r3, 1",
            "bne 0x800df88",
            "ldrb r3, [r7, 1]",
            "str sb, [r4, 4]",
            "add r3, r3, 3",
            "strh r3, [r4]",
            "ldrb r3, [r7, 1]",
            "ldrb r2, [r5, 8]",
            "lsl r3, r3, 0x10",
            "orr r3, r3, r2, lsl 30",
            "str r3, [r4, 8]",
            "b 0x800dfa0",
            "mov r6, 0x14",
            "mov r7, 0",
            "ldr r1, [0x0800e1f4]",
            "movw r2, 0x904",
            "ldr r0, [0x0800e1f8]",
            "strd r6, r7, [sp]",
            "bl my_printf",
            "movw r2, 0",
            "movt r2, 0",
            "ldr r3, [r2]",
            "cmp r3, 0",
            "beq 0x800e138",
            "movw r2, 0x999",
            "ldr r1, [0x0800e1fc]",
            "ldr r0, [0x0800e200]",
            "bl my_printf",
            "b 0x800e138",
            "mov r0, r5",
            "bl fcn.0800a788",
            "mov r0, r5",
            "bl fcn.0800b67c",
            "mov r0, r5",
            "bl fcn.0800abf4",
            "ldr r2, [sp, 8]",
            "lsl r3, r2, 1",
            "ldr r2, [sp, 0xc]",
            "uxtb r3, r3",
            "subs r2, r2, 1",
            "str r2, [sp, 0xc]",
            "str r3, [sp, 8]",
            "bne 0x800dee8",
            "movw r2, 0",
            "movt r2, 0",
            "ldr r3, [r2, 4]",
            "ldr r2, [sl, 0x34]",
            "add r3, r3, 0x1600",
            "add r3, r3, 0x1c",
            "sub sl, r2, 0x34",
            "cmp r2, r3",
            "bne 0x800ded8",
            "ldr r0, [sp, 0xc]",
            "b 0x800e144",
            "movw r2, 0x8f5",
            "ldr r1, [0x0800e1f4]",
            "ldr r0, [0x0800e204]",
            "bl my_printf",
            "mov r0, r5",
            "bl fcn.08009f8c",
            "cmp r0, 0",
            "beq 0x800df68",
            "movw r2, 0",
            "movt r2, 0",
            "ldr r3, [r2]",
            "cmp r3, 0",
            "beq 0x800e138",
            "ldr r1, [0x0800e1f4]",
            "movw r2, 0x8f9",
            "ldr r0, [0x0800e208]",
            "bl my_printf",
            "b .LANCHOR0",
            "movw r2, 0",
            "movt r2, 0",
            "ldr r3, [r2]",
            "cmp r3, 0",
            "bne 0x800e14c",
            "mov r0, r5",
            "bl fcn.0800abf4",
            "mvn r0, 0",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r0, [0x0800e20c]",
            "movw r2, 0x74d",
            "ldr r1, [0x0800e210]",
            "bl my_printf",
            "ldr r3, [0x0800e1ec]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x800e138",
            "mov r2, 0x990",
            "ldr r1, [0x0800e1fc]",
            "ldr r0, [0x0800e214]",
            "bl my_printf",
            "b 0x800e138",
            "movw r2, 0x96f",
            "ldr r1, [0x0800e1fc]",
            "ldr r0, [0x0800e204]",
            "bl my_printf",
            "b .LANCHOR0",
            "movw r2, 0",
            "movt r2, 0",
            "ldr r3, [r2]",
            "cmp r3, 0",
            "bne 0x800e1b0",
            "mvn r0, 0",
            "b 0x800e144",
            "ldr r0, [0x0800e218]",
            "movw r2, 0x982",
            "ldr r1, [0x0800e1fc]",
            "bl my_printf",
            "mvn r0, 0",
            "b 0x800e144",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x800e1a8",
            "ldr r0, [0x0800e21c]",
            "movw r2, 0x973",
            "ldr r1, [0x0800e1fc]",
            "bl my_printf",
            "mvn r0, 0",
            "b 0x800e144"
        ]
    },
    "fcn.0800ad18": {
        "function_address": "0x0800ad18",
        "instructions": [
            "ldr r3, [0x0800add0]",
            "push {r4, r5, r6, lr}",
            "mov r4, r0",
            "sub sp, sp, 8",
            "ldr r3, [r3]",
            "cmp r3, 2",
            "bhi 0x800ad90",
            "mov r0, 0x2c",
            "bl my_kmalloc_atomic",
            "subs r6, r0, 0",
            "beq 0x800adb0",
            "mov r1, 0",
            "mov r2, 0x2c",
            "bl my_memset",
            "ldr r3, [0x0800add4]",
            "ldrex r2, [r3]",
            "add r2, r2, 0x2c",
            "strex r1, r2, [r3]",
            "teq r1, 0",
            "bne 0x800ad54",
            "add r2, r6, 0x24",
            "add r3, r6, 0x1c",
            "strb r4, [r6, 8]",
            "str r2, [r6, 0x24]",
            "str r2, [r6, 0x28]",
            "str r3, [r6, 0x1c]",
            "str r3, [r6, 0x20]",
            "mov r0, r6",
            "add sp, sp, 8",
            "pop {r4, r5, r6, pc}",
            "mov r2, 0x940",
            "ldr r1, [0x0800add8]",
            "ldr r0, [0x0800addc]",
            "bl my_printf",
            "mov r0, 0x2c",
            "bl my_kmalloc_atomic",
            "subs r6, r0, 0",
            "bne 0x800ad44",
            "mov r4, 0x2c",
            "mov r5, 0",
            "ldr r1, [0x0800add8]",
            "movw r2, 0x945",
            "ldr r0, [0x0800ade0]",
            "strd r4, r5, [sp]",
            "bl my_printf",
            "b 0x800ad84"
        ]
    },
    "fcn.0800a418": {
        "function_address": "0x0800a418",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sl, lr}",
            "mov r4, r0",
            "ldr r5, [0x0800a67c]",
            "sub sp, sp, 0x19c",
            "ldr r3, [r5]",
            "cmp r3, 2",
            "bhi 0x800a668",
            "ldrb r3, [r4, 7]",
            "cmp r3, 1",
            "bhs 0x800a458",
            "ldr r1, [0x0800a680]",
            "movw r2, 0x559",
            "ldr r0, [0x0800a684]",
            "bl my_printf",
            "add sp, sp, 0x19c",
            "pop {r4, r5, r6, r7, r8, sl, pc}",
            "cmp r3, 2",
            "ldrbls r7, [r4, 6]",
            "bhi 0x800a648",
            "ldr r0, [r4, 0x10]",
            "cmp r0, 0",
            "bne 0x800a490",
            "ldr r3, [r5]",
            "cmp r3, 0",
            "beq 0x800a450",
            "ldr r1, [0x0800a680]",
            "movw r2, 0x55f",
            "ldr r0, [0x0800a688]",
            "bl my_printf",
            "b 0x800a450",
            "ldr r3, [r5]",
            "cmp r3, 1",
            "bls 0x800a4b4",
            "mov r3, r0",
            "ldr r1, [0x0800a680]",
            "ldr r0, [0x0800a68c]",
            "movw r2, 0x563",
            "bl my_printf",
            "ldr r0, [r4, 0x10]",
            "ldrb r3, [r4, 8]",
            "add r8, sp, 0x118",
            "tst r3, 1",
            "ldrne r3, [r5, 4]",
            "movne sl, 0x1f40",
            "ldreq r3, [r5, 4]",
            "moveq sl, 0x1f40",
            "ldrne r3, [r3, 0x10]",
            "ldreq r3, [r3, 0xc]",
            "mulne sl, sl, r3",
            "muleq sl, sl, r3",
            "bl fcn.08009d58",
            "ldrb r3, [r4, 8]",
            "mov r6, r0",
            "tst r3, 1",
            "ldrne r3, [r5, 4]",
            "movne r0, 0x1f40",
            "ldreq r3, [r5, 4]",
            "moveq r0, 0x1f40",
            "ldrne r3, [r3, 0x10]",
            "ldreq r3, [r3, 0xc]",
            "mulne r0, r0, r3",
            "muleq r0, r0, r3",
            "bl fcn.08009d58",
            "movw ip, 0xcccd",
            "ldr r3, [r4, 0x10]",
            "movt ip, 0xcccc",
            "umull r2, ip, ip, r3",
            "lsr ip, ip, 6",
            "str r0, [sp, 8]",
            "mov r1, 0x80",
            "ldr r2, [0x0800a690]",
            "mov r0, r8",
            "str r6, [sp, 4]",
            "str ip, [sp, 0xc]",
            "add r6, sp, 0x18",
            "str sl, [sp]",
            "bl my_snprintf",
            "ldrb r3, [r4, 8]",
            "mov r0, r6",
            "ldrb ip, [r4, 2]",
            "mov r1, 0x100",
            "ldrh lr, [r4]",
            "tst r3, 1",
            "ldr r2, [0x0800a694]",
            "ldrne r3, [r5, 4]",
            "ldreq r3, [r5, 4]",
            "ldrne r3, [r3]",
            "ldreq r3, [r3, 4]",
            "str ip, [sp]",
            "stmib sp, {ip, lr}",
            "str r7, [sp, 0xc]",
            "str r8, [sp, 0x10]",
            "bl my_snprintf",
            "ldr r3, [r5, 8]",
            "cmp r3, 0",
            "beq 0x800a5c4",
            "mov r0, r6",
            "blx r3",
            "ldr r3, [0x0800a67c]",
            "ldr r3, [r3]",
            "cmp r3, 1",
            "bls 0x800a5c4",
            "ldr r0, [0x0800a698]",
            "movw r2, 0x56f",
            "ldr r1, [0x0800a680]",
            "mov r3, r6",
            "bl my_printf",
            "ldrb r3, [r4, 7]",
            "cmp r3, 1",
            "beq 0x800a450",
            "ldrb r3, [r4, 8]",
            "mov r0, r6",
            "ldrb r7, [r4, 2]",
            "mov r1, 0x100",
            "ldrh lr, [r4]",
            "tst r3, 1",
            "ldrh ip, [r4, 4]",
            "ldrne r3, [r5, 4]",
            "ldreq r3, [r5, 4]",
            "ldr r2, [0x0800a69c]",
            "ldrne r3, [r3]",
            "ldreq r3, [r3, 4]",
            "stm sp, {r7, lr}",
            "str ip, [sp, 8]",
            "bl my_snprintf",
            "ldr r3, [r5, 8]",
            "cmp r3, 0",
            "beq 0x800a450",
            "mov r0, r6",
            "blx r3",
            "ldr r3, [0x0800a67c]",
            "ldr r3, [r3]",
            "cmp r3, 1",
            "bls 0x800a450",
            "movw r2, 0x579",
            "ldr r1, [0x0800a680]",
            "mov r3, r6",
            "ldr r0, [0x0800a698]",
            "bl my_printf",
            "b 0x800a450",
            "cmp r3, 3",
            "bne 0x800a440",
            "ldr r0, [r4, 0x10]",
            "ldrb r7, [r4, 6]",
            "cmp r0, 0",
            "and r7, r7, 0xf",
            "bne 0x800a490",
            "b 0x800a470",
            "movw r2, 0x54d",
            "ldr r1, [0x0800a680]",
            "ldr r0, [0x0800a6a0]",
            "bl my_printf",
            "b 0x800a434"
        ]
    },
    "fcn.08009f8c": {
        "function_address": "0x08009f8c",
        "instructions": [
            "push {r3, lr}",
            "ldr r3, [r0, 0xc]",
            "cmp r3, 0",
            "beq 0x800a000",
            "ldrb r3, [r0, 7]",
            "cmp r3, 2",
            "beq 0x8009fc4",
            "cmp r3, 3",
            "bne 0x8009fbc",
            "ldr r3, [r0, 0x18]",
            "cmp r3, 0",
            "beq 0x8009fe8",
            "mov r0, 0",
            "pop {r3, pc}",
            "ldr r3, [r0, 0x18]",
            "cmp r3, 0",
            "bne 0x8009fbc",
            "ldr r3, [0x0800a058]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "bne 0x800a040",
            "mvn r0, 0",
            "pop {r3, pc}",
            "ldr r3, [0x0800a058]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "bne 0x800a028",
            "mvn r0, 0",
            "pop {r3, pc}",
            "ldr r3, [0x0800a058]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x8009fe0",
            "ldr r0, [0x0800a05c]",
            "movw r2, 0x8ab",
            "ldr r1, [0x0800a060]",
            "bl my_printf",
            "mvn r0, 0",
            "pop {r3, pc}",
            "ldr r0, [0x0800a064]",
            "movw r2, 0x8b9",
            "ldr r1, [0x0800a060]",
            "bl my_printf",
            "mvn r0, 0",
            "pop {r3, pc}",
            "ldr r0, [0x0800a068]",
            "movw r2, 0x8b1",
            "ldr r1, [0x0800a060]",
            "bl my_printf",
            "mvn r0, 0",
            "pop {r3, pc}"
        ]
    },
    "fcn.0800a788": {
        "function_address": "0x0800a788",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r5, r0",
            "ldr r6, [0x0800a874]",
            "sub sp, sp, 0x118",
            "ldr r3, [r6]",
            "cmp r3, 2",
            "bhi 0x800a860",
            "ldr r4, [r5, 0x1c]",
            "add sb, r5, 0x1c",
            "cmp sb, r4",
            "beq 0x800a858",
            "ldr sl, [0x0800a874]",
            "sub r4, r4, 0xc",
            "add r7, sp, 0x18",
            "ldrb r3, [r5, 8]",
            "mov r1, 0x100",
            "ldrb ip, [r5, 2]",
            "mov r0, r7",
            "ldrh r8, [r5]",
            "tst r3, 1",
            "ldr r2, [0x0800a878]",
            "ldrne r3, [r6, 4]",
            "ldreq r3, [r6, 4]",
            "ldrne r3, [r3]",
            "ldreq r3, [r3, 4]",
            "str ip, [sp]",
            "ldrh lr, [r4]",
            "str lr, [sp, 4]",
            "ldr lr, [r4, 8]",
            "str lr, [sp, 8]",
            "ldr lr, [r4, 4]",
            "str ip, [sp, 0x10]",
            "str r8, [sp, 0x14]",
            "str lr, [sp, 0xc]",
            "bl my_snprintf",
            "ldr r3, [r6, 8]",
            "mov r0, r7",
            "cmp r3, 0",
            "beq 0x800a848",
            "blx r3",
            "ldr ip, [sl]",
            "movw r2, 0x541",
            "ldr r0, [0x0800a87c]",
            "mov r3, r7",
            "ldr r1, [0x0800a880]",
            "cmp ip, 1",
            "bls 0x800a848",
            "bl my_printf",
            "ldr r4, [r4, 0xc]",
            "cmp sb, r4",
            "sub r4, r4, 0xc",
            "bne 0x800a7c0",
            "add sp, sp, 0x118",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}",
            "movw r2, 0x532",
            "ldr r1, [0x0800a880]",
            "ldr r0, [0x0800a884]",
            "bl my_printf",
            "b 0x800a7a4"
        ]
    },
    "fcn.0800b67c": {
        "function_address": "0x0800b67c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "subs r6, r0, 0",
            "sub sp, sp, 0x1b4",
            "beq 0x800b8e4",
            "ldrb r3, [r6, 8]",
            "mov ip, 0x100",
            "ldrh lr, [r6]",
            "add r5, sp, 0x30",
            "ldrb r7, [r6, 2]",
            "mov r0, r5",
            "tst r3, 1",
            "mov r1, ip",
            "ldrne r4, [0x0800bca8]",
            "ldreq r4, [0x0800bca8]",
            "ldr r2, [0x0800bcac]",
            "ldrne r3, [r4, 4]",
            "ldreq r3, [r4, 4]",
            "ldrne r3, [r3]",
            "ldreq r3, [r3, 4]",
            "stm sp, {r7, lr}",
            "str lr, [sp, 8]",
            "str ip, [sp, 0xc]",
            "bl my_snprintf",
            "ldr r3, [r4, 8]",
            "cmp r3, 0",
            "beq 0x800b710",
            "mov r0, r5",
            "blx r3",
            "ldr r3, [0x0800bca8]",
            "ldr r3, [r3]",
            "cmp r3, 1",
            "bls 0x800b710",
            "ldr r0, [0x0800bcb0]",
            "movw r2, 0x5d9",
            "ldr r1, [0x0800bcb4]",
            "mov r3, r5",
            "bl my_printf",
            "ldrb r3, [r6, 8]",
            "tst r3, 1",
            "ldrne r3, [r4, 4]",
            "movne r7, 0x1f40",
            "ldreq r3, [r4, 4]",
            "moveq r7, 0x1f40",
            "ldrne r3, [r3, 0x10]",
            "ldreq r3, [r3, 0xc]",
            "mulne r7, r7, r3",
            "muleq r7, r7, r3",
            "mov r0, r7",
            "bl fcn.08009d58",
            "ldrb r3, [r6, 8]",
            "mov sl, r0",
            "tst r3, 1",
            "ldrne r3, [r4, 4]",
            "movne r0, 0x1f40",
            "ldreq r3, [r4, 4]",
            "moveq r0, 0x1f40",
            "ldrne r3, [r3, 0x10]",
            "ldreq r3, [r3, 0xc]",
            "mulne r0, r0, r3",
            "muleq r0, r0, r3",
            "bl fcn.08009d58",
            "ldrb r3, [r6, 8]",
            "mov ip, r0",
            "tst r3, 1",
            "bne 0x800b8c0",
            "ldr r2, [r4, 4]",
            "mov lr, 0x1f40",
            "movw r3, 0xcccd",
            "movt r3, 0xcccc",
            "ldr r2, [r2, 0xc]",
            "mul lr, lr, r2",
            "umull r2, lr, r3, lr",
            "lsr lr, lr, 6",
            "add r8, sp, 0x130",
            "mov r1, 0x80",
            "ldr r2, [0x0800bcb8]",
            "mov r3, r7",
            "mov r0, r8",
            "stm sp, {r7, sl, ip, lr}",
            "bl my_snprintf",
            "ldrb r3, [r6, 8]",
            "mov r0, r5",
            "ldrh ip, [r6]",
            "mov r1, 0x100",
            "ldr r2, [0x0800bcbc]",
            "tst r3, 1",
            "ldrne r3, [r4, 4]",
            "ldreq r3, [r4, 4]",
            "ldrne r3, [r3]",
            "ldreq r3, [r3, 4]",
            "str r8, [sp, 8]",
            "str ip, [sp]",
            "str ip, [sp, 4]",
            "bl my_snprintf",
            "ldr r3, [r4, 8]",
            "cmp r3, 0",
            "beq 0x800b82c",
            "mov r0, r5",
            "blx r3",
            "ldr r3, [0x0800bca8]",
            "ldr r3, [r3]",
            "cmp r3, 1",
            "bls 0x800b82c",
            "ldr r0, [0x0800bcb0]",
            "movw r2, 0x5e6",
            "ldr r1, [0x0800bcb4]",
            "mov r3, r5",
            "bl my_printf",
            "ldrb r0, [r6, 8]",
            "bl fcn.0800ad18",
            "subs r5, r0, 0",
            "beq 0x800bc80",
            "mov r3, 0x100",
            "ldr r2, [0x0800bcc0]",
            "strh r3, [r5]",
            "mov r0, r5",
            "ldrh r3, [r6]",
            "add r1, r5, 0x10",
            "ldrb ip, [r5, 6]",
            "strb r3, [r5, 2]",
            "ldrb r3, [r6, 6]",
            "bic ip, ip, 0xf",
            "ldr lr, [r2]",
            "mov r2, 2",
            "strb r2, [r5, 7]",
            "add r3, r3, 1",
            "rsb r2, r3, r3, lsl 5",
            "orr ip, ip, lr",
            "strb ip, [r5, 6]",
            "add r3, r3, r2, lsl 2",
            "lsl r3, r3, 3",
            "add r3, r3, 0x100",
            "strh r3, [r5, 4]",
            "ldr r3, [r6, 0xc]",
            "str r3, [r0, 0xc]!",
            "bl fcn.0800b5e0",
            "subs r6, r0, 0",
            "bne 0x800bc50",
            "mov r0, r5",
            "bl fcn.0800a418",
            "mov r0, r5",
            "bl fcn.0800abf4",
            "mov r0, r6",
            "add sp, sp, 0x1b4",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r2, [r4, 4]",
            "mov lr, 0x1f40",
            "movw r3, 0xcccd",
            "movt r3, 0xcccc",
            "ldr r2, [r2, 0x10]",
            "mul lr, lr, r2",
            "umull r2, lr, r3, lr",
            "lsr lr, lr, 3",
            "b 0x800b7a0",
            "ldr r4, [0x0800bca8]",
            "movw r3, 0xcccd",
            "mov ip, 0xca00",
            "movw lr, 0xbc20",
            "mov r2, 2",
            "movt r3, 0xcccc",
            "movt ip, 0x3b9a",
            "movt lr, 0xbe",
            "str r2, [sp, 0x20]",
            "mov sb, 1",
            "add r5, sp, 0x30",
            "add r8, sp, 0x130",
            "mov r7, r4",
            "mov fp, 0x1f40",
            "str r3, [sp, 0x28]",
            "str ip, [sp, 0x24]",
            "str lr, [sp, 0x2c]",
            "b 0x800bb74",
            "ldr r3, [r4, 4]",
            "ldr sl, [r3, 0x10]",
            "mul sl, fp, sl",
            "mov r0, sl",
            "bl fcn.08009d58",
            "ldr r3, [r4, 4]",
            "mov ip, r0",
            "ldr r0, [r3, 0x10]",
            "str ip, [sp, 0x1c]",
            "mul r0, fp, r0",
            "bl fcn.08009d58",
            "ldr r2, [r4, 4]",
            "mov r3, sl",
            "ldr ip, [sp, 0x1c]",
            "mov r1, 0x80",
            "str r0, [sp, 8]",
            "mov r0, r8",
            "stm sp, {sl, ip}",
            "ldr ip, [r2, 0x10]",
            "ldr lr, [sp, 0x28]",
            "ldr r2, [0x0800bcb8]",
            "mul ip, fp, ip",
            "umull lr, ip, lr, ip",
            "lsr ip, ip, 3",
            "str ip, [sp, 0xc]",
            "bl my_snprintf",
            "ldr r3, [r4, 4]",
            "ldr r3, [r3]",
            "mov r0, r5",
            "mov r1, 0x100",
            "ldr r2, [0x0800bcc4]",
            "str r8, [sp]",
            "bl my_snprintf",
            "ldr r3, [r4, 8]",
            "cmp r3, 0",
            "beq 0x800b9e4",
            "mov r0, r5",
            "blx r3",
            "ldr r3, [r7]",
            "cmp r3, 1",
            "bls 0x800b9e4",
            "ldr r0, [0x0800bcb0]",
            "movw r2, 0x5b9",
            "ldr r1, [0x0800bcb4]",
            "mov r3, r5",
            "bl my_printf",
            "mov r0, 0xca00",
            "movt r0, 0x3b9a",
            "bl fcn.08009d58",
            "mov sl, r0",
            "mov r0, 0xca00",
            "movt r0, 0x3b9a",
            "bl fcn.08009d58",
            "ldr r3, [sp, 0x24]",
            "mov r1, 0x80",
            "ldr ip, [sp, 0x2c]",
            "str r0, [sp, 8]",
            "mov r0, r8",
            "ldr r2, [0x0800bcb8]",
            "str r3, [sp]",
            "str ip, [sp, 0xc]",
            "str sl, [sp, 4]",
            "bl my_snprintf",
            "cmp r6, 0",
            "mov r0, r5",
            "ldrne r3, [r4, 4]",
            "mov r1, 0x100",
            "ldreq r3, [r4, 4]",
            "ldr r2, [0x0800bcc8]",
            "ldrne r3, [r3]",
            "ldreq r3, [r3, 4]",
            "str r8, [sp]",
            "bl my_snprintf",
            "ldr r3, [r4, 8]",
            "cmp r3, 0",
            "beq 0x800ba84",
            "mov r0, r5",
            "blx r3",
            "ldr r3, [r7]",
            "cmp r3, 1",
            "bls 0x800ba84",
            "ldr r0, [0x0800bcb0]",
            "movw r2, 0x5be",
            "ldr r1, [0x0800bcb4]",
            "mov r3, r5",
            "bl my_printf",
            "cmp r6, 0",
            "mov r0, r5",
            "ldrne r3, [r4, 4]",
            "mov r1, 0x100",
            "ldreq r3, [r4, 4]",
            "ldr r2, [0x0800bccc]",
            "ldrne r3, [r3]",
            "ldreq r3, [r3, 4]",
            "bl my_snprintf",
            "ldr r3, [r4, 8]",
            "cmp r3, 0",
            "beq 0x800badc",
            "mov r0, r5",
            "blx r3",
            "ldr r3, [r7]",
            "cmp r3, 1",
            "bls 0x800badc",
            "ldr r0, [0x0800bcb0]",
            "movw r2, 0x5bf",
            "ldr r1, [0x0800bcb4]",
            "mov r3, r5",
            "bl my_printf",
            "cmp r6, 0",
            "mov lr, 1",
            "ldrne r3, [r4, 4]",
            "mov ip, 0",
            "ldreq r3, [r4, 4]",
            "mov r0, r5",
            "mov r1, 0x100",
            "ldr r2, [0x0800bcd0]",
            "ldrne r3, [r3]",
            "ldreq r3, [r3, 4]",
            "str lr, [sp]",
            "mov lr, 0xc0000000",
            "str ip, [sp, 4]",
            "mov ip, 1",
            "str lr, [sp, 8]",
            "mov lr, 2",
            "str ip, [sp, 0xc]",
            "str lr, [sp, 0x10]",
            "bl my_snprintf",
            "ldr r3, [r4, 8]",
            "cmp r3, 0",
            "beq 0x800bb5c",
            "mov r0, r5",
            "blx r3",
            "ldr r3, [r7]",
            "cmp r3, 1",
            "bls 0x800bb5c",
            "ldr r0, [0x0800bcb0]",
            "movw r2, 0x5c9",
            "ldr r1, [0x0800bcb4]",
            "mov r3, r5",
            "bl my_printf",
            "ldr r2, [sp, 0x20]",
            "lsl sb, sb, 1",
            "uxtb sb, sb",
            "subs r2, r2, 1",
            "str r2, [sp, 0x20]",
            "beq 0x800bc48",
            "ands r6, sb, 1",
            "mov r0, r5",
            "ldrne r3, [r4, 4]",
            "mov r1, 0x100",
            "ldreq r3, [r4, 4]",
            "ldr r2, [0x0800bcd4]",
            "ldrne r3, [r3]",
            "ldreq r3, [r3, 4]",
            "bl my_snprintf",
            "ldr r3, [r4, 8]",
            "cmp r3, 0",
            "beq 0x800bbcc",
            "mov r0, r5",
            "blx r3",
            "ldr r3, [r7]",
            "cmp r3, 1",
            "bls 0x800bbcc",
            "ldr r0, [0x0800bcb0]",
            "movw r2, 0x5b2",
            "ldr r1, [0x0800bcb4]",
            "mov r3, r5",
            "bl my_printf",
            "cmp r6, 0",
            "bne 0x800b92c",
            "ldr r3, [r4, 4]",
            "ldr sl, [r3, 0xc]",
            "mul sl, fp, sl",
            "mov r0, sl",
            "bl fcn.08009d58",
            "ldr r3, [r4, 4]",
            "mov ip, r0",
            "ldr r0, [r3, 0xc]",
            "str ip, [sp, 0x1c]",
            "mul r0, fp, r0",
            "bl fcn.08009d58",
            "ldr r2, [r4, 4]",
            "mov r3, sl",
            "ldr ip, [sp, 0x1c]",
            "mov r1, 0x80",
            "str r0, [sp, 8]",
            "mov r0, r8",
            "stm sp, {sl, ip}",
            "ldr ip, [r2, 0xc]",
            "ldr lr, [sp, 0x28]",
            "ldr r2, [0x0800bcb8]",
            "mul ip, fp, ip",
            "umull lr, ip, lr, ip",
            "lsr ip, ip, 6",
            "str ip, [sp, 0xc]",
            "bl my_snprintf",
            "ldr r3, [r4, 4]",
            "ldr r3, [r3, 4]",
            "b 0x800b99c",
            "mov r0, r2",
            "b 0x800b8b8",
            "ldr r3, [r4]",
            "cmp r3, 0",
            "bne 0x800bc6c",
            "mov r0, r5",
            "bl fcn.0800abf4",
            "mvn r0, 0",
            "b 0x800b8b8",
            "movw r2, 0x5f4",
            "ldr r1, [0x0800bcb4]",
            "ldr r0, [0x0800bcd8]",
            "bl my_printf",
            "b 0x800bc5c",
            "ldr r3, [r4]",
            "cmp r3, 0",
            "mvneq r0, 0",
            "beq 0x800b8b8",
            "ldr r0, [0x0800bcdc]",
            "movw r2, 0x601",
            "ldr r1, [0x0800bcb4]",
            "bl my_printf",
            "mvn r0, 0",
            "b 0x800b8b8"
        ]
    },
    "fcn.0800abf4": {
        "function_address": "0x0800abf4",
        "instructions": [
            "ldr r3, [0x0800ac90]",
            "push {r4, lr}",
            "mov r4, r0",
            "ldr r3, [r3]",
            "cmp r3, 2",
            "bhi 0x800ac30",
            "ldr r2, [r4, 0x24]",
            "add r3, r4, 0x24",
            "cmp r2, r3",
            "beq 0x800ac50",
            "ldr r0, [0x0800ac94]",
            "movw r2, 0x624",
            "ldr r1, [0x0800ac98]",
            "pop {r4, lr}",
            "b my_printf",
            "mov r2, 0x620",
            "ldr r0, [0x0800ac9c]",
            "ldr r1, [0x0800ac98]",
            "bl my_printf",
            "ldr r2, [r4, 0x24]",
            "add r3, r4, 0x24",
            "cmp r2, r3",
            "bne 0x800ac1c",
            "add r0, r4, 0x1c",
            "bl fcn.0800aa68",
            "ldrb r3, [r4, 7]",
            "cmp r3, 3",
            "popeq {r4, pc}",
            "cmp r4, 0",
            "popeq {r4, pc}",
            "mov r0, r4",
            "bl my_kfree",
            "ldr r3, [0x0800aca0]",
            "ldrex r2, [r3]",
            "sub r2, r2, 0x2c",
            "strex r1, r2, [r3]",
            "teq r1, 0",
            "bne 0x800ac78",
            "pop {r4, pc}"
        ]
    },
    "sym.__parse_dev_group": {
        "function_address": "0x0800ccd0",
        "instructions": [
            "push {r4, lr}",
            "sub sp, sp, 8",
            "mov r2, r1",
            "mov r4, r0",
            "mov r1, 2",
            "mov r0, sp",
            "ldr r3, [0x0800cd58]",
            "bl fcn.0800b474",
            "cmp r0, 1",
            "beq 0x800cd04",
            "mvn r0, 0",
            "add sp, sp, 8",
            "pop {r4, pc}",
            "mov r0, r4",
            "ldr r1, [sp]",
            "mov r2, 0xa",
            "bl fcn.0800b578",
            "cmp r0, 0",
            "beq 0x800cd44",
            "ldr r3, [0x0800cd5c]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x800ccf8",
            "ldr r0, [0x0800cd60]",
            "movw r2, 0x232",
            "ldr r1, [0x0800cd64]",
            "bl my_printf",
            "mvn r0, 0",
            "b 0x800ccfc",
            "ldrb r3, [r4]",
            "cmp r3, 8",
            "movlo r0, 0",
            "mvnhs r0, 0",
            "b 0x800ccfc"
        ]
    },
    "fcn.0800b474": {
        "function_address": "0x0800b474",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "subs fp, r1, 0",
            "sub sp, sp, 0x14",
            "mov sl, r2",
            "mov r8, r3",
            "str r0, [sp, 0xc]",
            "ble 0x800b55c",
            "mov r6, 0",
            "ldr r7, [0x0800b568]",
            "mov r4, r6",
            "b 0x800b4c0",
            "mov r0, r5",
            "bl my_strlen",
            "cmp r0, 0",
            "ldrne r3, [sp, 0xc]",
            "strne r5, [r3, r6, lsl 2]",
            "addne r6, r6, 1",
            "cmp fp, r4",
            "ble 0x800b534",
            "cmp r4, 0",
            "mov r0, sl",
            "mov r1, r8",
            "movne r0, 0",
            "bl my_strtok",
            "cmp r0, 0",
            "mov r5, r0",
            "add r4, r4, 1",
            "ldr sb, [0x0800b568]",
            "beq 0x800b550",
            "ldr r3, [r7]",
            "cmp r3, 2",
            "bls 0x800b4a0",
            "bl my_strlen",
            "mov r3, r6",
            "str r0, [sp, 4]",
            "ldr r1, [0x0800b56c]",
            "mov r2, 0xc7",
            "ldr r0, [0x0800b570]",
            "str r5, [sp]",
            "bl my_printf",
            "mov r0, r5",
            "bl my_strlen",
            "cmp r0, 0",
            "ldrne r3, [sp, 0xc]",
            "strne r5, [r3, r6, lsl 2]",
            "addne r6, r6, 1",
            "cmp fp, r4",
            "bgt 0x800b4c0",
            "ldr r3, [sb]",
            "cmp r3, 1",
            "bls 0x800b550",
            "ldr r1, [0x0800b56c]",
            "mov r2, 0xb5",
            "ldr r0, [0x0800b574]",
            "bl my_printf",
            "mov r0, r6",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr sb, [0x0800b568]",
            "mov r6, 0",
            "b 0x800b534"
        ]
    },
    "sym.create_app_ses_leaf": {
        "function_address": "0x0800eef4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r8, r0",
            "ldr r6, [0x0800f488]",
            "sub sp, sp, 0x10",
            "mov r5, r1",
            "mov sb, r2",
            "ldr r3, [r6]",
            "cmp r3, 2",
            "bhi 0x800f110",
            "ldr r3, [r6, 0x10]",
            "ldr r4, [0x0800f488]",
            "cmp r3, 0",
            "beq 0x800f3f8",
            "cmp r5, 0",
            "beq 0x800f45c",
            "cmp r8, 0",
            "beq 0x800f438",
            "ldr r0, [r4, 0x14]",
            "bl my_write_lock_bh",
            "ldr r3, [r4]",
            "cmp r3, 2",
            "bhi 0x800f124",
            "ldr r3, [r6, 4]",
            "movw r2, 0x1614",
            "ldr sl, [0x0800f488]",
            "ldr r7, [r3, r2]",
            "add r3, r3, 0x1600",
            "add r3, r3, 0x14",
            "cmp r7, r3",
            "beq 0x800f154",
            "sub r4, r7, 0x24",
            "sub r3, r7, 8",
            "ldr r2, [r4, 0x28]",
            "cmp r4, 0",
            "ldr r1, [r4, 0x24]",
            "strb sb, [r4, 8]",
            "str r2, [r1, 4]",
            "str r1, [r2]",
            "str r7, [r4, 0x24]",
            "str r7, [r4, 0x28]",
            "str r3, [r4, 0x1c]",
            "str r3, [r4, 0x20]",
            "beq 0x800f480",
            "ldr r3, [sl]",
            "cmp r3, 2",
            "bhi 0x800f294",
            "mov r0, r8",
            "mov r1, 0",
            "bl fcn.0800b3cc",
            "cmp r0, 0",
            "ldrbne sb, [r0]",
            "beq 0x800f2bc",
            "ldrb r3, [r5, 2]",
            "ldrb r2, [r5, 3]",
            "orrs r2, r3, r2, lsl 8",
            "bne 0x800f18c",
            "ldr r3, [0x0800f48c]",
            "mov sb, 1",
            "ldr r2, [r6]",
            "ldrb sl, [r3, 4]",
            "add sl, sl, 0xa",
            "ldrb r3, [r8]",
            "cmp r2, 2",
            "add r3, r3, 1",
            "orr sl, r3, sl, lsl 16",
            "lsr r3, sl, 0x18",
            "ubfx r1, sl, 8, 1",
            "ubfx r2, sl, 0x10, 8",
            "strb sl, [r5, 0x35]",
            "strb r1, [r5, 0x36]",
            "strb r2, [r5, 0x37]",
            "strb r3, [r5, 0x38]",
            "bhi 0x800f0d4",
            "cmp sb, 0",
            "bne 0x800f0b4",
            "mov r0, r4",
            "bl fcn.0800bdc4",
            "subs r5, r0, 0",
            "beq 0x800f2d4",
            "ldr r3, [r6]",
            "cmp r3, 1",
            "bls 0x800f04c",
            "ldr r0, [0x0800f490]",
            "movw r2, 0xbc6",
            "ldr r1, [0x0800f494]",
            "bl my_printf",
            "cmp r5, 2",
            "beq 0x800f368",
            "ldr r3, [r4, 0x18]",
            "ldrb r2, [r4, 6]",
            "cmp r3, 0",
            "bic r2, r2, 0x20",
            "strb r2, [r4, 6]",
            "beq 0x800f09c",
            "ldrb r1, [r4, 2]",
            "ldrb r2, [r3]",
            "add r2, r2, 1",
            "orr r2, r2, r1, lsl 16",
            "orr r2, r2, 0x40000000",
            "lsr r1, r2, 0x18",
            "ubfx ip, r2, 8, 1",
            "ubfx r0, r2, 0x10, 8",
            "strb r2, [r3, 0x35]",
            "strb ip, [r3, 0x36]",
            "strb r0, [r3, 0x37]",
            "strb r1, [r3, 0x38]",
            "mov r0, r4",
            "mov r8, 0",
            "bl fcn.0800a06c",
            "ldr r0, [r6, 0x14]",
            "bl my_write_unlock_bh",
            "b 0x800f0c8",
            "mov r8, 0",
            "mov r0, r4",
            "bl fcn.0800ab30",
            "ldr r0, [r6, 0x14]",
            "bl my_write_unlock_bh",
            "mov r0, r8",
            "add sp, sp, 0x10",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}",
            "ldrb r1, [r5, 2]",
            "movw r2, 0xad8",
            "ldrb ip, [r5, 3]",
            "ldrb lr, [r5, 1]",
            "ldrb r3, [r5]",
            "ldr r0, [0x0800f498]",
            "orr ip, r1, ip, lsl 8",
            "ldr r1, [0x0800f49c]",
            "str lr, [sp]",
            "str ip, [sp, 4]",
            "str sl, [sp, 8]",
            "bl my_printf",
            "cmp sb, 0",
            "beq 0x800f020",
            "b 0x800f0b4",
            "mov r2, 0xba0",
            "ldr r1, [0x0800f494]",
            "ldr r0, [0x0800f4a0]",
            "bl my_printf",
            "b 0x800ef18",
            "movw r2, 0x956",
            "ldr r0, [0x0800f4a0]",
            "ldr r1, [0x0800f4a4]",
            "bl my_printf",
            "ldr r3, [r6, 4]",
            "movw r2, 0x1614",
            "ldr sl, [0x0800f488]",
            "ldr r7, [r3, r2]",
            "add r3, r3, 0x1600",
            "add r3, r3, 0x14",
            "cmp r7, r3",
            "bne 0x800ef6c",
            "ldr r3, [sl]",
            "cmp r3, 1",
            "bls 0x800f174",
            "ldr r0, [0x0800f4a8]",
            "movw r2, 0x95a",
            "ldr r1, [0x0800f4a4]",
            "bl my_printf",
            "ldr r3, [sl]",
            "cmp r3, 0",
            "bne 0x800f3d0",
            "ldr r0, [r6, 0x14]",
            "mvn r8, 0",
            "bl my_write_unlock_bh",
            "b 0x800f0c8",
            "ldrb r0, [r5, 1]",
            "bl fcn.08009e28",
            "cmp r0, 0",
            "beq 0x800f324",
            "ldrb sl, [r0]",
            "mov lr, 3",
            "ldrb r2, [r4, 6]",
            "add sl, sl, 0xa",
            "strb sl, [r4, 2]",
            "bic r2, r2, 0xf",
            "ldrb r3, [r0]",
            "orr sb, sb, r2",
            "ldrh r2, [r7, -0x24]",
            "and sb, sb, 0xef",
            "strb sb, [r4, 6]",
            "add r3, r3, 1",
            "rsb r1, r3, r3, lsl 5",
            "add r3, r3, r1, lsl 2",
            "add r3, r2, r3, lsl 3",
            "strh r3, [r4, 4]",
            "ldrb r3, [r5, 0x39]",
            "ldrb ip, [r5, 0x3a]",
            "ldrb r1, [r5, 0x3b]",
            "ldrb r2, [r5, 0x3c]",
            "strb lr, [r4, 7]",
            "orr r3, r3, ip, lsl 8",
            "str r0, [r4, 0xc]",
            "str r5, [r4, 0x18]",
            "orr r3, r3, r1, lsl 16",
            "orrs r2, r3, r2, lsl 24",
            "movne r3, 0",
            "moveq r3, 0x10",
            "orr sb, r3, sb",
            "strb sb, [r4, 6]",
            "ldrb r1, [r5, 0x3e]",
            "ldrb r3, [r5, 0x3d]",
            "ldr r2, [r6]",
            "orr r3, r3, r1, lsl 8",
            "mov r1, 0x1f40",
            "cmp r2, 1",
            "mul r3, r1, r3",
            "str r3, [r4, 0x14]",
            "bls 0x800f254",
            "movw r2, 0xac2",
            "ldr r0, [0x0800f4ac]",
            "ldr r1, [0x0800f49c]",
            "bl my_printf",
            "ldr r2, [0x0800f488]",
            "ldr r3, [r4, 0x14]",
            "ldr r2, [r2]",
            "cmp r3, 0",
            "bne 0x800f3a8",
            "cmp r2, 2",
            "bhi 0x800f3b4",
            "ldrb r2, [r8]",
            "mov r8, r3",
            "add r3, r2, 1",
            "orr sl, r3, sl, lsl 16",
            "lsr r3, sl, 0x18",
            "ubfx r1, sl, 8, 1",
            "ubfx r2, sl, 0x10, 8",
            "strb sl, [r5, 0x35]",
            "strb r1, [r5, 0x36]",
            "strb r2, [r5, 0x37]",
            "strb r3, [r5, 0x38]",
            "b 0x800f0b8",
            "movw r2, 0xa99",
            "ldr r1, [0x0800f49c]",
            "ldr r0, [0x0800f4a0]",
            "bl my_printf",
            "mov r0, r8",
            "mov r1, 0",
            "bl fcn.0800b3cc",
            "cmp r0, 0",
            "ldrbne sb, [r0]",
            "bne 0x800efc4",
            "ldr r3, [r6]",
            "cmp r3, 0",
            "bne 0x800f424",
            "ldr r3, [0x0800f48c]",
            "ldrb sb, [r3]",
            "b 0x800efc4",
            "ldr r3, [r6]",
            "cmp r3, 1",
            "bls 0x800f2fc",
            "ldr ip, [r4, 0x14]",
            "movw r2, 0xbd2",
            "ldr r3, [r4, 0x10]",
            "ldr r0, [0x0800f4b0]",
            "ldr r1, [0x0800f494]",
            "str ip, [sp]",
            "bl my_printf",
            "mov r0, r4",
            "bl fcn.0800ade4",
            "subs r8, r0, 0",
            "beq 0x800f358",
            "ldr r3, [r6]",
            "cmp r3, 0",
            "bne 0x800f3e4",
            "mov r0, r4",
            "bl fcn.0800af20",
            "b 0x800f0b8",
            "ldr r3, [r6]",
            "cmp r3, 1",
            "bls 0x800f340",
            "ldr r0, [0x0800f4b4]",
            "movw r2, 0xab2",
            "ldr r1, [0x0800f49c]",
            "bl my_printf",
            "ldr r3, [0x0800f48c]",
            "mov sb, 2",
            "ldr r2, [r6]",
            "ldrb sl, [r3, 4]",
            "add sl, sl, 0xa",
            "b 0x800efe8",
            "mov r0, r4",
            "bl fcn.0800a418",
            "mov r0, r4",
            "bl fcn.0800a788",
            "ldr r3, [r4, 0x18]",
            "ldrb r2, [r4, 6]",
            "cmp r3, 0",
            "orr r2, r2, 0x20",
            "strb r2, [r4, 6]",
            "beq 0x800f09c",
            "ldr r2, [r4, 0x10]",
            "cmp r2, 0",
            "beq 0x800f06c",
            "ldrb r1, [r4, 2]",
            "ldrh r2, [r7, -0x24]",
            "orr r2, r2, 0xc0000000",
            "orr r2, r2, r1, lsl 16",
            "lsr r1, r2, 0x18",
            "ubfx ip, r2, 8, 8",
            "b 0x800f088",
            "ldr r2, [r6]",
            "mov sb, 0",
            "b 0x800efe8",
            "movw r2, 0xac7",
            "ldr r0, [0x0800f4b8]",
            "ldr r1, [0x0800f49c]",
            "mov sb, 3",
            "bl my_printf",
            "ldr r2, [r6]",
            "b 0x800efe8",
            "movw r2, 0xbb9",
            "ldr r1, [0x0800f494]",
            "ldr r0, [0x0800f4bc]",
            "bl my_printf",
            "b 0x800f17c",
            "movw r2, 0xbd6",
            "ldr r1, [0x0800f494]",
            "ldr r0, [0x0800f4c0]",
            "bl my_printf",
            "b 0x800f318",
            "ldr r3, [r4]",
            "cmp r3, 0",
            "bne 0x800f40c",
            "mvn r8, 0",
            "b 0x800f0c8",
            "movw r2, 0xba4",
            "ldr r1, [0x0800f494]",
            "ldr r0, [0x0800f4c4]",
            "mvn r8, 0",
            "bl my_printf",
            "b 0x800f0c8",
            "movw r2, 0xa9f",
            "ldr r1, [0x0800f49c]",
            "ldr r0, [0x0800f4c8]",
            "bl my_printf",
            "b 0x800f2c8",
            "ldr r3, [r4]",
            "cmp r3, 0",
            "beq 0x800f404",
            "mov r2, 0xbb0",
            "ldr r1, [0x0800f494]",
            "ldr r0, [0x0800f4cc]",
            "mvn r8, 0",
            "bl my_printf",
            "b 0x800f0c8",
            "ldr r3, [r4]",
            "cmp r3, 0",
            "beq 0x800f404",
            "movw r2, 0xbaa",
            "ldr r1, [0x0800f494]",
            "ldr r0, [0x0800f4d0]",
            "mvn r8, 0",
            "bl my_printf",
            "b 0x800f0c8",
            "ldr r3, [sl]",
            "b 0x800f174"
        ]
    },
    "fcn.0800b3cc": {
        "function_address": "0x0800b3cc",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r5, r0",
            "ldr r3, [0x0800b468]",
            "mov r4, r1",
            "ldr r3, [r3]",
            "cmp r3, 2",
            "bhi 0x800b40c",
            "mov r0, r5",
            "mov r1, 1",
            "bl fcn.0800b280",
            "cmp r0, 0",
            "beq 0x800b420",
            "cmp r4, 0",
            "movne r3, 1",
            "strbne r3, [r4]",
            "pop {r3, r4, r5, pc}",
            "movw r2, 0x6ca",
            "ldr r1, [0x0800b46c]",
            "ldr r0, [0x0800b470]",
            "bl my_printf",
            "b 0x800b3e8",
            "mov r0, r5",
            "mov r1, 2",
            "bl fcn.0800b280",
            "cmp r0, 0",
            "beq 0x800b444",
            "cmp r4, 0",
            "movne r3, 2",
            "strbne r3, [r4]",
            "pop {r3, r4, r5, pc}",
            "mov r0, r5",
            "mov r1, 3",
            "bl fcn.0800b280",
            "cmp r0, 0",
            "popeq {r3, r4, r5, pc}",
            "cmp r4, 0",
            "movne r3, 4",
            "strbne r3, [r4]",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.0800bdc4": {
        "function_address": "0x0800bdc4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r5, r0",
            "ldr r7, [0x0800c1d8]",
            "sub sp, sp, 0xc",
            "ldr r3, [r7]",
            "cmp r3, 2",
            "bhi 0x800bf4c",
            "ldr r3, [r5, 0xc]",
            "cmp r3, 0",
            "beq 0x800c1ac",
            "ldr r1, [r5, 0x14]",
            "cmp r1, 0",
            "beq 0x800c164",
            "ldrb sb, [r5, 8]",
            "ands r6, sb, 1",
            "movne r4, r3",
            "moveq r4, r3",
            "ldrne r2, [r3, 0xc]",
            "ldrne ip, [r4, 0x18]!",
            "ldreq r2, [r3, 4]",
            "ldreq ip, [r4, 0x14]!",
            "cmp r2, 0",
            "cmpne ip, 0",
            "movne r0, 0",
            "moveq r0, 1",
            "beq 0x800c138",
            "cmp r2, r1",
            "bhs 0x800be60",
            "ldr r3, [r7]",
            "cmp r3, 1",
            "movls r0, 2",
            "bls 0x800be58",
            "ldr r0, [0x0800c1dc]",
            "movw r2, 0x832",
            "ldr r1, [0x0800c1e0]",
            "bl my_printf",
            "mov r0, 2",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "cmp ip, r1",
            "bhs 0x800bf60",
            "ldr r2, [r7]",
            "cmp r2, 1",
            "bls 0x800be9c",
            "ldr r1, [0x0800c1e0]",
            "mov r2, 0x840",
            "ldr r0, [0x0800c1e4]",
            "bl my_printf",
            "ldr r1, [r5, 0x14]",
            "ldrb sb, [r5, 8]",
            "cmp r1, 0",
            "beq 0x800c188",
            "ldr r3, [r5, 0xc]",
            "and r6, sb, 1",
            "cmp r6, 0",
            "addne sl, r3, 0x24",
            "addeq sl, r3, 0x2c",
            "ldr r4, [sl, 4]",
            "addne fp, r3, 0x18",
            "ldrne r8, [r3, 0x18]",
            "addeq fp, r3, 0x14",
            "ldreq r8, [r3, 0x14]",
            "cmp sl, r4",
            "sub r4, r4, 0x24",
            "beq 0x800c1d0",
            "mov r6, 0",
            "b 0x800bf2c",
            "ldr r3, [r7]",
            "cmp r3, 2",
            "bhi 0x800bf74",
            "ldrb r3, [r4, 6]",
            "tst r3, 0x20",
            "and r2, r3, 0x1f",
            "beq 0x800bf94",
            "ldr r3, [r4, 0x10]",
            "cmp r3, 0",
            "beq 0x800bf94",
            "ldrb r1, [r5, 6]",
            "and r1, r1, 0x1f",
            "cmp r2, r1",
            "ble 0x800bf94",
            "ldr r1, [r5, 0x14]",
            "add r8, r8, r3",
            "add r6, r6, 1",
            "cmp r8, r1",
            "bhs 0x800bfa0",
            "ldr r4, [r4, 0x28]",
            "cmp sl, r4",
            "sub r4, r4, 0x24",
            "beq 0x800bf94",
            "ldrb r3, [r4, 8]",
            "tst sb, r3",
            "bne 0x800bed0",
            "ldr r1, [0x0800c1e8]",
            "movw r2, 0x7bd",
            "ldr r0, [0x0800c1ec]",
            "bl my_printf",
            "b 0x800bf1c",
            "movw r2, 0x80e",
            "ldr r1, [0x0800c1e0]",
            "ldr r0, [0x0800c1f0]",
            "bl my_printf",
            "b 0x800bde0",
            "rsb r1, r1, ip",
            "str r1, [r4]",
            "ldr r3, [r5, 0x14]",
            "str r3, [r5, 0x10]",
            "b 0x800be58",
            "ldrb ip, [r5, 6]",
            "movw r2, 0x7c1",
            "ldrb r3, [r4, 6]",
            "ldr r1, [0x0800c1e8]",
            "ldr r0, [0x0800c1f4]",
            "str ip, [sp]",
            "bl my_printf",
            "b 0x800bedc",
            "ldr r1, [r5, 0x14]",
            "cmp r1, r8",
            "bhi 0x800c0d4",
            "ldr r4, [sl, 4]",
            "mov r3, r4",
            "sub r4, r4, 0x24",
            "cmp sl, r3",
            "ldr r2, [r4, 0x28]",
            "beq 0x800c11c",
            "ldrb r0, [r4, 6]",
            "tst r0, 0x20",
            "beq 0x800c11c",
            "ldr ip, [r4, 0x10]",
            "cmp ip, 0",
            "beq 0x800c11c",
            "ldrb ip, [r5, 6]",
            "and r0, r0, 0x1f",
            "and ip, ip, 0x1f",
            "cmp ip, r0",
            "sublt r7, r2, 0x24",
            "movlt sb, 0",
            "blt 0x800c02c",
            "b 0x800c11c",
            "cmp sl, r3",
            "ldr r2, [r7, 0x28]",
            "beq 0x800c124",
            "ldrb r1, [r7, 6]",
            "tst r1, 0x20",
            "and r0, r1, 0x1f",
            "beq 0x800c124",
            "ldr r1, [r7, 0x10]",
            "sub r7, r2, 0x24",
            "cmp r1, 0",
            "beq 0x800c124",
            "ldrb r1, [r5, 6]",
            "and r1, r1, 0x1f",
            "cmp r0, r1",
            "ble 0x800c124",
            "ldr r1, [r4, 0x24]",
            "mov r0, r4",
            "str r2, [r1, 4]",
            "str r1, [r2]",
            "str r3, [r4, 0x24]",
            "str r3, [r4, 0x28]",
            "bl fcn.0800a6a4",
            "ldrh r0, [r4]",
            "ldrb r2, [r4, 8]",
            "ldrb r1, [r4, 2]",
            "bl fcn.0800bd2c",
            "ldr r3, [r4, 0x18]",
            "mov r0, r4",
            "ldrb r2, [r4, 6]",
            "str sb, [r4, 0x10]",
            "cmp r3, 0",
            "bic r2, r2, 0x20",
            "strb r2, [r4, 6]",
            "beq 0x800c0a8",
            "ldrb r1, [r4, 2]",
            "ldrb r2, [r3]",
            "add r2, r2, 1",
            "orr r2, r2, r1, lsl 16",
            "orr r2, r2, 0x40000000",
            "lsr r1, r2, 0x18",
            "ubfx lr, r2, 8, 1",
            "ubfx ip, r2, 0x10, 8",
            "strb r2, [r3, 0x35]",
            "strb lr, [r3, 0x36]",
            "strb ip, [r3, 0x37]",
            "strb r1, [r3, 0x38]",
            "bl fcn.0800a06c",
            "subs r6, r6, 1",
            "add r3, r7, 0x24",
            "mov r4, r7",
            "bne 0x800bff0",
            "ldr r1, [r5, 0x14]",
            "rsb r8, r1, r8",
            "str r1, [r5, 0x10]",
            "str r8, [fp]",
            "mov r0, 0",
            "b 0x800be58",
            "ldr r3, [r7]",
            "cmp r3, 1",
            "bhi 0x800c0e8",
            "mov r0, 1",
            "b 0x800be58",
            "ldr r1, [0x0800c1e8]",
            "movw r2, 0x7d8",
            "ldr r0, [0x0800c1f8]",
            "bl my_printf",
            "ldr r3, [r7]",
            "cmp r3, 1",
            "bls 0x800c0e0",
            "ldr r0, [0x0800c1fc]",
            "movw r2, 0x843",
            "ldr r1, [0x0800c1e0]",
            "bl my_printf",
            "mov r0, 1",
            "b 0x800be58",
            "cmp r6, 0",
            "beq 0x800c0c0",
            "ldr r1, [0x0800c1e8]",
            "movw r2, 0x7fb",
            "ldr r0, [0x0800c1ec]",
            "bl my_printf",
            "b 0x800c0c8",
            "ldr r3, [r7]",
            "cmp r3, 0",
            "bne 0x800c14c",
            "mvn r0, 0",
            "b 0x800be58",
            "ldr r0, [0x0800c200]",
            "movw r2, 0x82b",
            "ldr r1, [0x0800c1e0]",
            "bl my_printf",
            "mvn r0, 0",
            "b 0x800be58",
            "ldr r3, [r7]",
            "cmp r3, 0",
            "beq 0x800c144",
            "ldr r0, [0x0800c204]",
            "movw r2, 0x818",
            "ldr r1, [0x0800c1e0]",
            "bl my_printf",
            "mvn r0, 0",
            "b 0x800be58",
            "ldr r3, [0x0800c1d8]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x800c0e0",
            "ldr r1, [0x0800c1e8]",
            "movw r2, 0x7a6",
            "ldr r0, [0x0800c204]",
            "bl my_printf",
            "b 0x800c0f8",
            "ldr r3, [r7]",
            "cmp r3, 0",
            "beq 0x800c144",
            "ldr r0, [0x0800c208]",
            "movw r2, 0x812",
            "ldr r1, [0x0800c1e0]",
            "bl my_printf",
            "mvn r0, 0",
            "b 0x800be58",
            "mov r6, 0",
            "b 0x800bf98"
        ]
    },
    "fcn.0800a06c": {
        "function_address": "0x0800a06c",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r4, r0",
            "ldr r3, [0x0800a164]",
            "ldr r3, [r3]",
            "cmp r3, 2",
            "bhi 0x800a138",
            "ldr r3, [r4, 0x24]",
            "add r5, r4, 0x24",
            "cmp r5, r3",
            "bne 0x800a14c",
            "ldrb r3, [r4, 8]",
            "tst r3, 1",
            "ldrne ip, [r4, 0xc]",
            "ldreq ip, [r4, 0xc]",
            "addne ip, ip, 0x24",
            "addeq ip, ip, 0x2c",
            "ldr r3, [ip]",
            "cmp ip, r3",
            "beq 0x800a11c",
            "ldrb r0, [r4, 6]",
            "ldrb r1, [r3, -0x1e]",
            "ldr r2, [r3]",
            "cmp r1, r0",
            "bhi 0x800a0fc",
            "cmp ip, r2",
            "ldrne r3, [r2]",
            "bne 0x800a0ec",
            "b 0x800a11c",
            "cmp ip, r3",
            "mov r2, r3",
            "beq 0x800a11c",
            "ldr r3, [r3]",
            "ldrb r1, [r2, -0x1e]",
            "cmp r1, r0",
            "bls 0x800a0dc",
            "mov r3, r2",
            "ldr r3, [r3, 4]",
            "mov r0, 0",
            "ldr r2, [r3]",
            "str r5, [r2, 4]",
            "str r2, [r4, 0x24]",
            "str r3, [r4, 0x28]",
            "str r5, [r3]",
            "pop {r3, r4, r5, pc}",
            "ldr r3, [ip, 4]",
            "mov r0, 0",
            "str r5, [ip, 4]",
            "str ip, [r4, 0x24]",
            "str r3, [r4, 0x28]",
            "str r5, [r3]",
            "pop {r3, r4, r5, pc}",
            "movw r2, 0x718",
            "ldr r1, [0x0800a168]",
            "ldr r0, [0x0800a16c]",
            "bl my_printf",
            "b 0x800a084",
            "ldr r0, [0x0800a170]",
            "movw r2, 0x71c",
            "ldr r1, [0x0800a168]",
            "bl my_printf",
            "mvn r0, 0",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.0800ab30": {
        "function_address": "0x0800ab30",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r4, r0",
            "ldr r6, [0x0800abe4]",
            "ldr r3, [r6]",
            "cmp r3, 2",
            "bhi 0x800ab6c",
            "ldr r3, [r4, 0x24]",
            "add r5, r4, 0x24",
            "cmp r5, r3",
            "beq 0x800ab8c",
            "ldr r0, [0x0800abe8]",
            "movw r2, 0x63a",
            "ldr r1, [0x0800abec]",
            "pop {r4, r5, r6, r7, r8, lr}",
            "b my_printf",
            "ldr r0, [0x0800abf0]",
            "movw r2, 0x636",
            "ldr r1, [0x0800abec]",
            "add r5, r4, 0x24",
            "bl my_printf",
            "ldr r3, [r4, 0x24]",
            "cmp r5, r3",
            "bne 0x800ab58",
            "add r0, r4, 0x1c",
            "bl fcn.0800aa68",
            "ldrb r7, [r4, 7]",
            "cmp r7, 3",
            "popne {r4, r5, r6, r7, r8, pc}",
            "ldrh r8, [r4]",
            "mov r1, 0",
            "mov r2, 0x2c",
            "mov r0, r4",
            "bl my_memset",
            "strh r8, [r4]",
            "movw r0, 0x1618",
            "strb r7, [r4, 7]",
            "ldr r2, [r6, 4]",
            "ldr r1, [r2, r0]",
            "add r3, r2, 0x1600",
            "add r3, r3, 0x14",
            "str r5, [r2, r0]",
            "str r3, [r4, 0x24]",
            "str r1, [r4, 0x28]",
            "str r5, [r1]",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.08009e28": {
        "function_address": "0x08009e28",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r4, r0",
            "ldr r5, [0x08009ed8]",
            "ldr r3, [r5]",
            "cmp r3, 2",
            "bhi 0x8009ec0",
            "ldr ip, [r5, 4]",
            "movw r3, 0x161c",
            "ldr r0, [ip, r3]",
            "add ip, ip, 0x1600",
            "add ip, ip, 0x1c",
            "cmp ip, r0",
            "bne 0x8009e64",
            "mov r0, 0",
            "pop {r3, r4, r5, pc}",
            "sub r0, r0, 0x34",
            "ldr r3, [r0, 0x1c]",
            "add r1, r0, 0x1c",
            "cmp r1, r3",
            "beq 0x8009ea8",
            "sub r3, r3, 4",
            "ldrb r2, [r3, 1]",
            "cmp r2, r4",
            "bne 0x8009e98",
            "b 0x8009ed4",
            "ldrb r2, [r3, 1]",
            "cmp r2, r4",
            "popeq {r3, r4, r5, pc}",
            "ldr r3, [r3, 4]",
            "cmp r1, r3",
            "sub r3, r3, 4",
            "bne 0x8009e8c",
            "ldr r0, [r0, 0x34]",
            "cmp ip, r0",
            "sub r0, r0, 0x34",
            "bne 0x8009e68",
            "mov r0, 0",
            "pop {r3, r4, r5, pc}",
            "movw r2, 0x67c",
            "ldr r1, [0x08009edc]",
            "ldr r0, [0x08009ee0]",
            "bl my_printf",
            "b 0x8009e40",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.0800ade4": {
        "function_address": "0x0800ade4",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "mov r4, r0",
            "ldr r5, [0x0800af08]",
            "sub sp, sp, 0xc",
            "ldr r3, [r5]",
            "cmp r3, 2",
            "bhi 0x800aea8",
            "mov r0, r4",
            "bl fcn.08009f8c",
            "subs r6, r0, 0",
            "bne 0x800aebc",
            "mov r0, 0x14",
            "bl my_kmalloc_atomic",
            "subs r5, r0, 0",
            "beq 0x800aee4",
            "mov r1, r6",
            "mov r2, 0x14",
            "bl my_memset",
            "ldr r3, [0x0800af0c]",
            "ldrex r2, [r3]",
            "add r2, r2, 0x14",
            "strex r1, r2, [r3]",
            "teq r1, 0",
            "bne 0x800ae30",
            "ldrh r3, [r4]",
            "mvn r2, 0x3f0000",
            "str r2, [r5, 4]",
            "mov r0, r6",
            "add r2, r5, 0xc",
            "add r1, r4, 0x1c",
            "sub r3, r3, 0x100",
            "strh r3, [r5]",
            "ldr r3, [r4, 0x18]",
            "ldrb ip, [r4, 8]",
            "ldrb r7, [r3]",
            "ldrb r6, [r3, 2]",
            "ldrb r3, [r3, 3]",
            "lsl ip, ip, 0x1e",
            "orr ip, ip, r7, lsl 22",
            "orr r3, r6, r3, lsl 8",
            "orr r3, ip, r3",
            "str r3, [r5, 8]",
            "ldr r3, [r4, 0x20]",
            "str r2, [r4, 0x20]",
            "str r1, [r5, 0xc]",
            "str r3, [r5, 0x10]",
            "str r2, [r3]",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, pc}",
            "movw r2, 0xae2",
            "ldr r1, [0x0800af10]",
            "ldr r0, [0x0800af14]",
            "bl my_printf",
            "b 0x800ae00",
            "ldr r3, [r5]",
            "cmp r3, 0",
            "mvneq r0, 0",
            "beq 0x800aea0",
            "ldr r0, [0x0800af18]",
            "movw r2, 0xae6",
            "ldr r1, [0x0800af10]",
            "bl my_printf",
            "mvn r0, 0",
            "b 0x800aea0",
            "ldr r0, [0x0800af1c]",
            "movw r2, 0xaed",
            "ldr r1, [0x0800af10]",
            "mov r4, 0x14",
            "mov r5, 0",
            "strd r4, r5, [sp]",
            "bl my_printf",
            "mvn r0, 0",
            "b 0x800aea0"
        ]
    },
    "fcn.0800af20": {
        "function_address": "0x0800af20",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "ldr r3, [r0, 0xc]",
            "cmp r3, 0",
            "beq 0x800b12c",
            "ldrb r2, [r0, 8]",
            "mov sb, 0",
            "tst r2, 1",
            "addne sl, r3, 0x24",
            "addeq sl, r3, 0x2c",
            "ldrne r8, [r3, 0x18]",
            "addne fp, r3, 0x18",
            "ldreq r8, [r3, 0x14]",
            "addeq fp, r3, 0x14",
            "ldr r3, [r0, 0x10]",
            "str sb, [r0, 0x10]",
            "ldr r4, [sl]",
            "add r8, r8, r3",
            "cmp r4, sl",
            "mov r5, r4",
            "ldr r6, [r4], -0x24",
            "beq 0x800b10c",
            "ldr r7, [0x0800b15c]",
            "sub r6, r6, 0x24",
            "b 0x800aff8",
            "ldr r3, [r7]",
            "cmp r3, 0",
            "bne 0x800b118",
            "ldr r3, [r4, 0x18]",
            "ldrb r2, [r4, 6]",
            "str sb, [r4, 0x10]",
            "cmp r3, 0",
            "bic r2, r2, 0x20",
            "strb r2, [r4, 6]",
            "beq 0x800afd8",
            "ldrb r1, [r4, 2]",
            "ldrb r2, [r3]",
            "add r2, r2, 1",
            "orr r2, r2, r1, lsl 16",
            "orr r2, r2, 0x40000000",
            "lsr r1, r2, 0x18",
            "ubfx ip, r2, 8, 1",
            "ubfx r0, r2, 0x10, 8",
            "strb r2, [r3, 0x35]",
            "strb ip, [r3, 0x36]",
            "strb r0, [r3, 0x37]",
            "strb r1, [r3, 0x38]",
            "mov r0, r4",
            "bl fcn.0800a06c",
            "mov r5, r6",
            "ldr r3, [r5, 0x24]!",
            "cmp r5, sl",
            "beq 0x800b10c",
            "mov r4, r6",
            "sub r6, r3, 0x24",
            "ldrb r3, [r4, 6]",
            "tst r3, 0x20",
            "bne 0x800afe0",
            "ldr r3, [r7]",
            "cmp r3, 1",
            "bls 0x800b024",
            "ldr r0, [0x0800b160]",
            "movw r2, 0x879",
            "ldr r1, [0x0800b164]",
            "ldr r3, [r4, 0x14]",
            "bl my_printf",
            "ldr r3, [r4, 0x14]",
            "cmp r3, r8",
            "bhi 0x800b10c",
            "cmp r8, 0x3e80",
            "bls 0x800b10c",
            "ldr r3, [r4, 0x28]",
            "ldr r2, [r4, 0x24]",
            "str r3, [r2, 4]",
            "str r2, [r3]",
            "ldr r2, [r7]",
            "ldr r3, [r4, 0x14]",
            "str r5, [r4, 0x24]",
            "cmp r2, 1",
            "str r5, [r4, 0x28]",
            "str r3, [r4, 0x10]",
            "bls 0x800b074",
            "ldr r0, [0x0800b168]",
            "movw r2, 0x881",
            "ldr r1, [0x0800b164]",
            "bl my_printf",
            "mov r0, r4",
            "bl fcn.0800ade4",
            "cmp r0, 0",
            "bne 0x800af80",
            "ldr r3, [r4, 0x18]",
            "ldrb r1, [r4, 6]",
            "ldr r2, [r4, 0x10]",
            "cmp r3, 0",
            "orr r1, r1, 0x20",
            "rsb r8, r2, r8",
            "strb r1, [r4, 6]",
            "beq 0x800b0d8",
            "cmp r2, 0",
            "beq 0x800b0ec",
            "ldrb r1, [r4, 2]",
            "ldrh r2, [r4]",
            "orr r2, r2, 0xc0000000",
            "orr r2, r2, r1, lsl 16",
            "lsr r1, r2, 0x18",
            "ubfx ip, r2, 8, 8",
            "ubfx r0, r2, 0x10, 8",
            "strb r2, [r3, 0x35]",
            "strb ip, [r3, 0x36]",
            "strb r0, [r3, 0x37]",
            "strb r1, [r3, 0x38]",
            "mov r0, r4",
            "bl fcn.0800a418",
            "mov r0, r4",
            "bl fcn.0800a788",
            "b 0x800afd8",
            "ldrb r1, [r4, 2]",
            "ldrb r2, [r3]",
            "add r2, r2, 1",
            "orr r2, r2, r1, lsl 16",
            "orr r2, r2, 0x40000000",
            "lsr r1, r2, 0x18",
            "ubfx ip, r2, 8, 1",
            "b 0x800b0c4",
            "str r8, [fp]",
            "mov r0, 0",
            "pop {r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "movw r2, 0x885",
            "ldr r1, [0x0800b164]",
            "ldr r0, [0x0800b16c]",
            "bl my_printf",
            "b 0x800af8c",
            "ldr r3, [0x0800b15c]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "bne 0x800b144",
            "mvn r0, 0",
            "pop {r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r0, [0x0800b170]",
            "movw r2, 0x858",
            "ldr r1, [0x0800b164]",
            "bl my_printf",
            "mvn r0, 0",
            "pop {r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.__str2rate": {
        "function_address": "0x0800c630",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r5, r0",
            "sub sp, sp, 8",
            "mov r6, r1",
            "add r0, sp, 4",
            "mov r1, r5",
            "mov r4, r2",
            "bl fcn.0800c278",
            "cmp r0, 0",
            "beq 0x800c670",
            "ldr r3, [0x0800c71c]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "bne 0x800c6e4",
            "mov r3, 0",
            "str r3, [sp, 4]",
            "mov r0, r5",
            "mov r1, 0x25",
            "bl my_strchr",
            "cmp r0, 0",
            "beq 0x800c6f8",
            "ldr r0, [sp, 4]",
            "movw r3, 0x851f",
            "movt r3, 0x51eb",
            "mul r0, r0, r6",
            "umull r2, r3, r3, r0",
            "lsr r3, r3, 5",
            "mov r0, 0x1f40",
            "mul r0, r0, r3",
            "cmp r0, 0",
            "bne 0x800c6dc",
            "cmp r4, 0",
            "moveq r0, 0x1f400",
            "beq 0x800c6dc",
            "cmp r4, 2",
            "moveq r0, 0x3e80",
            "beq 0x800c6dc",
            "cmp r4, 1",
            "cmpne r4, 3",
            "movne r4, 0",
            "moveq r4, 1",
            "moveq r0, r6",
            "movne r0, r4",
            "add sp, sp, 8",
            "pop {r4, r5, r6, pc}",
            "movw r2, 0x165",
            "ldr r1, [0x0800c720]",
            "ldr r0, [0x0800c724]",
            "bl my_printf",
            "b 0x800c668",
            "ldr r3, [0x0800c71c]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x800c6ac",
            "movw r2, 0x16f",
            "ldr r1, [0x0800c720]",
            "ldr r0, [0x0800c728]",
            "bl my_printf",
            "b 0x800c6ac"
        ]
    },
    "fcn.0800c278": {
        "function_address": "0x0800c278",
        "instructions": [
            "push {r4, r5, lr}",
            "subs r4, r1, 0",
            "sub sp, sp, 0xc",
            "mov r5, r0",
            "bne 0x800c298",
            "mvn r0, 0",
            "add sp, sp, 0xc",
            "pop {r4, r5, pc}",
            "ldrsb r3, [r4]",
            "cmp r3, 0",
            "beq 0x800c28c",
            "mov r0, r4",
            "add r1, sp, 4",
            "mov r2, 0xa",
            "bl my_strtoul",
            "ldr r3, [sp, 4]",
            "cmp r3, 0",
            "beq 0x800c28c",
            "cmp r4, r3",
            "beq 0x800c28c",
            "cmn r0, 1",
            "strne r0, [r5]",
            "movne r0, 0",
            "b 0x800c290"
        ]
    },
    "sym.__parse_app_group": {
        "function_address": "0x0800ca64",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "sub sp, sp, 0x28",
            "mov r5, r0",
            "mov r4, r1",
            "add r0, sp, 0x10",
            "mov r1, 6",
            "ldr r3, [0x0800cb50]",
            "bl fcn.0800b474",
            "cmp r0, 5",
            "beq 0x800ca98",
            "mvn r0, 0",
            "add sp, sp, 0x28",
            "pop {r4, r5, r6, pc}",
            "mov r0, r4",
            "ldr r1, [sp, 0x10]",
            "mov r2, 0xa",
            "bl fcn.0800b578",
            "subs r6, r0, 0",
            "bne 0x800cb28",
            "ldrb r3, [r4]",
            "cmp r3, 7",
            "bhi 0x800cb00",
            "ldr ip, [r5, 0x10]",
            "mov r0, r4",
            "ldr r1, [r5, 0xc]",
            "ldr r2, [sp, 0x14]",
            "str ip, [sp]",
            "ldr ip, [sp, 0x1c]",
            "ldr r3, [sp, 0x18]",
            "str ip, [sp, 4]",
            "ldr ip, [sp, 0x20]",
            "str ip, [sp, 8]",
            "bl __set_app_group_rate",
            "ldr r2, [r4, 4]",
            "mov r0, r6",
            "ldr r3, [r4, 0xc]",
            "str r2, [r4, 0x14]",
            "str r3, [r4, 0x18]",
            "b 0x800ca90",
            "ldr r2, [0x0800cb54]",
            "ldr r2, [r2]",
            "cmp r2, 0",
            "beq 0x800ca8c",
            "ldr r0, [0x0800cb58]",
            "mov r2, 0x1ec",
            "ldr r1, [0x0800cb5c]",
            "bl my_printf",
            "mvn r0, 0",
            "b 0x800ca90",
            "ldr r3, [0x0800cb54]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x800ca8c",
            "ldr r0, [0x0800cb60]",
            "movw r2, 0x1e6",
            "ldr r1, [0x0800cb5c]",
            "bl my_printf",
            "mvn r0, 0",
            "b 0x800ca90"
        ]
    },
    "sym.qos_stop": {
        "function_address": "0x0800f7c0",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "ldr r4, [0x0800f8a4]",
            "ldr r3, [r4, 0x10]",
            "cmp r3, 0",
            "beq 0x800f878",
            "ldr r0, [r4, 0x14]",
            "bl my_write_lock_bh",
            "bl fcn.0800a378",
            "ldr r0, [reloc.deinit_qos_udb_entry]",
            "bl qos_for_each_udb_entry",
            "ldr r0, [reloc.deinit_qos_app_info]",
            "bl qos_for_each_app_info",
            "ldr r3, [r4]",
            "cmp r3, 2",
            "bhi 0x800f864",
            "ldr r0, [r4, 4]",
            "movw r3, 0x161c",
            "ldr r5, [r0, r3]",
            "add r3, r0, 0x1600",
            "add r3, r3, 0x1c",
            "cmp r3, r5",
            "beq deinit_qos_conf",
            "sub r5, r5, 0x34",
            "add r0, r5, 0x24",
            "bl fcn.0800aca4",
            "add r0, r5, 0x2c",
            "bl fcn.0800aca4",
            "ldr r0, [r4, 4]",
            "ldr r2, [r5, 0x34]",
            "add r3, r0, 0x1600",
            "add r3, r3, 0x1c",
            "sub r5, r2, 0x34",
            "cmp r2, r3",
            "bne 0x800f81c",
            "bl deinit_qos_conf",
            "mov r5, 0",
            "ldr r0, [r4, 0x14]",
            "str r5, [r4, 0x10]",
            "bl my_write_unlock_bh",
            "mov r0, r5",
            "pop {r3, r4, r5, pc}",
            "movw r2, 0x669",
            "ldr r1, [0x0800f8b0]",
            "ldr r0, [0x0800f8b4]",
            "bl my_printf",
            "b 0x800f7fc",
            "ldr r3, [r4]",
            "cmp r3, 0",
            "bne 0x800f88c",
            "mvn r0, 0",
            "pop {r3, r4, r5, pc}",
            "ldr r0, [0x0800f8b8]",
            "movw r2, 0xc7a",
            "ldr r1, [0x0800f8bc]",
            "bl my_printf",
            "mvn r0, 0",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.0800a378": {
        "function_address": "0x0800a378",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "sub sp, sp, 0x100",
            "ldr r6, [0x0800a408]",
            "mov r7, 2",
            "mov r4, 1",
            "mov r5, sp",
            "mov r8, r6",
            "tst r4, 1",
            "mov r1, 0x100",
            "ldrne r3, [r6, 4]",
            "mov r0, sp",
            "ldreq r3, [r6, 4]",
            "ldr r2, [0x0800a40c]",
            "ldrne r3, [r3]",
            "ldreq r3, [r3, 4]",
            "bl my_snprintf",
            "ldr r3, [r6, 8]",
            "mov r0, sp",
            "cmp r3, 0",
            "beq 0x800a3ec",
            "blx r3",
            "ldr ip, [r8]",
            "movw r2, 0x526",
            "ldr r0, [0x0800a410]",
            "mov r3, sp",
            "ldr r1, [0x0800a414]",
            "cmp ip, 1",
            "bls 0x800a3ec",
            "bl my_printf",
            "lsl r4, r4, 1",
            "subs r7, r7, 1",
            "uxtb r4, r4",
            "bne 0x800a394",
            "mov r0, r7",
            "add sp, sp, 0x100",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.0800aca4": {
        "function_address": "0x0800aca4",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "subs r5, r0, 0",
            "mvneq r0, 0",
            "popeq {r3, r4, r5, pc}",
            "ldr r2, [r5]",
            "cmp r5, r2",
            "beq 0x800ad08",
            "cmp r2, r5",
            "mov r3, r2",
            "ldr r1, [r2], -0x24",
            "beq 0x800ad10",
            "sub r4, r1, 0x24",
            "ldr ip, [r2, 0x28]",
            "mov r0, r2",
            "str ip, [r1, 4]",
            "str r1, [ip]",
            "str r3, [r2, 0x24]",
            "str r3, [r2, 0x28]",
            "bl fcn.0800abf4",
            "mov r3, r4",
            "mov r2, r4",
            "ldr r1, [r3, 0x24]!",
            "cmp r3, r5",
            "sub r4, r1, 0x24",
            "bne 0x800acd4",
            "mov r0, 0",
            "pop {r3, r4, r5, pc}",
            "mov r0, 0",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.my_asctime": {
        "function_address": "0x080023c8",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "mov r4, r0",
            "ldr r0, [r0, 0x18]",
            "sub sp, sp, 0x1c",
            "add r0, r0, 0x20000",
            "bl fcn.08002300",
            "mov r5, r0",
            "ldr r0, [r4, 0x10]",
            "add r0, r0, 0x20000",
            "add r0, r0, 0xe",
            "bl fcn.08002300",
            "ldr ip, [r4, 0x14]",
            "mov r3, r5",
            "ldr r7, [r4, 0xc]",
            "mov r1, 0x1a",
            "ldmib r4, {r5, r6}",
            "add ip, ip, 0x760",
            "ldr lr, [r4]",
            "add ip, ip, 0xc",
            "str r0, [sp]",
            "ldr r2, [0x08002450]",
            "ldr r0, [0x08002454]",
            "str r7, [sp, 4]",
            "str r6, [sp, 8]",
            "str r5, [sp, 0xc]",
            "str lr, [sp, 0x10]",
            "str ip, [sp, 0x14]",
            "bl my_snprintf",
            "cmp r0, 0x19",
            "ldr r0, [0x08002454]",
            "movgt r3, 0",
            "strbgt r3, [r3]",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.08002300": {
        "function_address": "0x08002300",
        "instructions": [
            "cmp r0, 0xe",
            "ldreq r0, [0x080023b4]",
            "bxeq lr",
            "asr r3, r0, 0x10",
            "uxth r1, r0",
            "sub r3, r3, 1",
            "cmp r3, 4",
            "ldrls pc, [pc, r3, lsl 2]",
            "b 0x8002344",
            "mov r0, 0",
            "bx lr"
        ]
    },
    "sym.update_dev_leaf": {
        "function_address": "0x0800e7e8",
        "instructions": [
            "movw r2, 0",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "movt r2, 0",
            "sub sp, sp, 0xc",
            "mov r5, r0",
            "ldr r3, [r2]",
            "cmp r3, 2",
            "bhi 0x800e9ac",
            "movw r2, 0",
            "ldr r4, [0x0800ea10]",
            "movt r2, 0",
            "ldr r3, [r2, 0x10]",
            "cmp r3, 0",
            "beq 0x800e9c0",
            "cmp r5, 0",
            "beq 0x800e9d4",
            "ldr r0, [r4, 0x14]",
            "bl my_write_lock_bh",
            "ldr r3, [r4, 4]",
            "movw r2, 0x161c",
            "ldr r6, [r3, r2]",
            "add r3, r3, 0x1600",
            "add r3, r3, 0x1c",
            "cmp r3, r6",
            "moveq r8, 0",
            "beq .LANCHOR0",
            "sub r6, r6, 0x34",
            "mov sb, 2",
            "add sl, sp, 7",
            "mov fp, 0x3e80",
            "mov r8, 2",
            "mov r7, 1",
            "b 0x800e8e0",
            "ldrb r3, [r5]",
            "mov r0, r4",
            "lsl r7, r7, 1",
            "add r3, r3, 1",
            "uxtb r7, r7",
            "strh r3, [r4]",
            "ldrb r3, [r6]",
            "add r3, r3, 0xa",
            "strb r3, [r4, 2]",
            "ldrb r3, [r6]",
            "ldrb r1, [r5]",
            "strb r2, [r4, 6]",
            "add r3, r3, 1",
            "strb sb, [r4, 7]",
            "rsb ip, r3, r3, lsl 5",
            "add r1, r1, 1",
            "ldrb r2, [sp, 7]",
            "add r3, r3, ip, lsl 2",
            "str r6, [r4, 0xc]",
            "str r5, [r4, 0x18]",
            "add r3, r1, r3, lsl 3",
            "strh r3, [r4, 4]",
            "strb r2, [r5, 0x4f]",
            "str fp, [r4, 0x10]",
            "bl fcn.0800a888",
            "mov r0, r4",
            "bl fcn.0800abf4",
            "subs r8, r8, 1",
            "beq .LANCHOR0",
            "mov r0, r7",
            "bl fcn.0800ad18",
            "subs r4, r0, 0",
            "mov r1, sl",
            "mov r0, r5",
            "beq .LANCHOR0",
            "bl fcn.0800b3cc",
            "cmp r0, 0",
            "ldrbne r2, [r0]",
            "bne 0x800e86c",
            "movw r2, 0",
            "ldr r1, [0x0800ea14]",
            "movt r2, 0",
            "ldr r0, [0x0800ea18]",
            "ldr r3, [r2]",
            "movw r2, 0x8d9",
            "cmp r3, 1",
            "bls .LANCHOR2",
            "bl my_printf",
            "movw r3, 0",
            "movt r3, 0",
            "ldrb r2, [r3]",
            "b 0x800e86c",
            "movw r2, 0",
            "movt r2, 0",
            "ldr r3, [r2]",
            "cmp r3, 0",
            "mvneq r8, 0",
            "beq .LANCHOR0",
            "ldr r0, [0x0800ea1c]",
            "movw r2, 0xa74",
            "ldr r1, [0x0800ea20]",
            "mvn r8, 0",
            "bl my_printf",
            "movw r3, 0",
            "movt r3, 0",
            "ldr r0, [r3, 0x14]",
            "bl my_write_unlock_bh",
            "mov r0, r8",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "movw r2, 0",
            "movt r2, 0",
            "ldr r3, [r2, 4]",
            "ldr r2, [r6, 0x34]",
            "add r3, r3, 0x1600",
            "add r3, r3, 0x1c",
            "sub r6, r2, 0x34",
            "cmp r2, r3",
            "bne 0x800e860",
            "b .LANCHOR0",
            "movw r2, 0xa59",
            "ldr r1, [0x0800ea20]",
            "ldr r0, [0x0800ea24]",
            "bl my_printf",
            "b .LANCHOR0",
            "ldr r3, [r4]",
            "cmp r3, 0",
            "bne 0x800e9f8",
            "mvn r8, 0",
            "b 0x800e978",
            "ldr r3, [r4]",
            "cmp r3, 0",
            "beq 0x800e9cc",
            "movw r2, 0xa63",
            "ldr r1, [0x0800ea20]",
            "ldr r0, [0x0800ea28]",
            "mvn r8, 0",
            "bl my_printf",
            "b 0x800e978",
            "movw r2, 0xa5d",
            "ldr r1, [0x0800ea20]",
            "ldr r0, [0x0800ea2c]",
            "mvn r8, 0",
            "bl my_printf",
            "b 0x800e978"
        ]
    },
    "fcn.0800a888": {
        "function_address": "0x0800a888",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sl, lr}",
            "mov r4, r0",
            "ldr r5, [0x0800aa48]",
            "sub sp, sp, 0x19c",
            "ldr r3, [r5]",
            "cmp r3, 2",
            "bhi 0x800aa34",
            "ldrb r3, [r4, 7]",
            "cmp r3, 1",
            "bhs 0x800a8c8",
            "ldr r1, [0x0800aa4c]",
            "mov r2, 0x590",
            "ldr r0, [0x0800aa50]",
            "bl my_printf",
            "add sp, sp, 0x19c",
            "pop {r4, r5, r6, r7, r8, sl, pc}",
            "cmp r3, 2",
            "ldrbls r7, [r4, 6]",
            "bhi 0x800aa14",
            "ldr r0, [r4, 0x10]",
            "cmp r0, 0",
            "beq 0x800a9f4",
            "ldrb r3, [r4, 8]",
            "add r8, sp, 0x118",
            "tst r3, 1",
            "ldrne r3, [r5, 4]",
            "movne sl, 0x1f40",
            "ldreq r3, [r5, 4]",
            "moveq sl, 0x1f40",
            "ldrne r3, [r3, 0x10]",
            "ldreq r3, [r3, 0xc]",
            "mulne sl, sl, r3",
            "muleq sl, sl, r3",
            "bl fcn.08009d58",
            "ldrb r3, [r4, 8]",
            "mov r6, r0",
            "tst r3, 1",
            "ldrne r3, [r5, 4]",
            "movne r0, 0x1f40",
            "ldreq r3, [r5, 4]",
            "moveq r0, 0x1f40",
            "ldrne r3, [r3, 0x10]",
            "ldreq r3, [r3, 0xc]",
            "mulne r0, r0, r3",
            "muleq r0, r0, r3",
            "bl fcn.08009d58",
            "movw ip, 0xcccd",
            "ldr r3, [r4, 0x10]",
            "movt ip, 0xcccc",
            "umull r2, ip, ip, r3",
            "lsr ip, ip, 6",
            "str r0, [sp, 8]",
            "mov r1, 0x80",
            "ldr r2, [0x0800aa54]",
            "mov r0, r8",
            "str r6, [sp, 4]",
            "str ip, [sp, 0xc]",
            "add r6, sp, 0x18",
            "str sl, [sp]",
            "bl my_snprintf",
            "ldrb r3, [r4, 8]",
            "mov r0, r6",
            "ldrb ip, [r4, 2]",
            "mov r1, 0x100",
            "ldrh lr, [r4]",
            "tst r3, 1",
            "ldr r2, [0x0800aa58]",
            "ldrne r3, [r5, 4]",
            "ldreq r3, [r5, 4]",
            "ldrne r3, [r3]",
            "ldreq r3, [r3, 4]",
            "str ip, [sp]",
            "stmib sp, {ip, lr}",
            "str r7, [sp, 0xc]",
            "str r8, [sp, 0x10]",
            "bl my_snprintf",
            "ldr r3, [r5, 8]",
            "cmp r3, 0",
            "beq 0x800a8c0",
            "mov r0, r6",
            "blx r3",
            "ldr r3, [0x0800aa48]",
            "ldr r3, [r3]",
            "cmp r3, 1",
            "bls 0x800a8c0",
            "movw r2, 0x5a5",
            "ldr r1, [0x0800aa4c]",
            "mov r3, r6",
            "ldr r0, [0x0800aa5c]",
            "bl my_printf",
            "b 0x800a8c0",
            "ldr r3, [r5]",
            "cmp r3, 0",
            "beq 0x800a8c0",
            "ldr r1, [0x0800aa4c]",
            "movw r2, 0x596",
            "ldr r0, [0x0800aa60]",
            "bl my_printf",
            "b 0x800a8c0",
            "cmp r3, 3",
            "bne 0x800a8b0",
            "ldr r0, [r4, 0x10]",
            "ldrb r7, [r4, 6]",
            "cmp r0, 0",
            "and r7, r7, 0xf",
            "bne 0x800a8e0",
            "b 0x800a9f4",
            "movw r2, 0x584",
            "ldr r1, [0x0800aa4c]",
            "ldr r0, [0x0800aa64]",
            "bl my_printf",
            "b 0x800a8a4"
        ]
    },
    "sym.__parse_app_rule": {
        "function_address": "0x0800cb64",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "sub sp, sp, 0x10",
            "mov r2, r1",
            "mov r4, r0",
            "mov r1, 3",
            "add r0, sp, 4",
            "ldr r3, [0x0800ccac]",
            "bl fcn.0800b474",
            "cmp r0, 2",
            "mov r6, r0",
            "beq app_rule_create",
            "mvn r0, 0",
            "add sp, sp, 0x10",
            "pop {r4, r5, r6, pc}",
            "bl app_rule_create",
            "subs r5, r0, 0",
            "beq 0x800cc70",
            "ldr r0, [sp, 8]",
            "mov r2, r6",
            "ldr r1, [0x0800ccb0]",
            "bl my_strncasecmp",
            "cmp r0, 0",
            "bne 0x800cc08",
            "ldrb r3, [r5]",
            "orr r3, r3, 1",
            "strb r3, [r5]",
            "ldr r3, [0x0800ccb4]",
            "ldr r3, [r3]",
            "cmp r3, 2",
            "bhi 0x800cc58",
            "ldrb r2, [r4]",
            "ldr r3, [0x0800ccb8]",
            "str r2, [r3, 4]",
            "ldr r3, [r4, 0x20]",
            "add r2, r5, 4",
            "add r1, r4, 0x1c",
            "str r2, [r4, 0x20]",
            "mov r0, 0",
            "stmib r5, {r1, r3}",
            "str r2, [r3]",
            "b 0x800cb94",
            "add r0, r5, 1",
            "ldr r1, [sp, 8]",
            "mov r2, 0xa",
            "bl fcn.0800b578",
            "cmp r0, 0",
            "beq 0x800cbe8",
            "ldr r3, [0x0800ccb4]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "bne 0x800cc98",
            "mov r0, r5",
            "bl my_kfree",
            "ldr r3, [0x0800ccbc]",
            "ldrex r2, [r3]",
            "sub r2, r2, 0xc",
            "strex r1, r2, [r3]",
            "teq r1, 0",
            "bne 0x800cc3c",
            "mvn r0, 0",
            "b 0x800cb94",
            "movw r2, 0x213",
            "ldr r1, [0x0800ccc0]",
            "ldr r3, [sp, 8]",
            "ldr r0, [0x0800ccc4]",
            "bl my_printf",
            "b 0x800cbdc",
            "ldr r3, [0x0800ccb4]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x800cb90",
            "ldr r0, [0x0800ccc8]",
            "mov r2, 0x20c",
            "ldr r1, [0x0800ccc0]",
            "bl my_printf",
            "mvn r0, 0",
            "b 0x800cb94",
            "mov r2, 0x218",
            "ldr r1, [0x0800ccc0]",
            "ldr r0, [0x0800cccc]",
            "bl my_printf",
            "b 0x800cc30"
        ]
    },
    "sym.__parse_global": {
        "function_address": "0x0800c870",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "mov r2, r1",
            "ldr r4, [0x0800ca3c]",
            "mov r5, r0",
            "sub sp, sp, 0x1c",
            "add ip, sp, 0x10",
            "ldr r3, [0x0800ca40]",
            "ldm r4, {r0, r1}",
            "stm ip, {r0, r1}",
            "add r0, sp, 4",
            "mov r1, 3",
            "bl fcn.0800b474",
            "cmp r0, 2",
            "bne 0x800c920",
            "ldr r7, [sp, 0x10]",
            "ldr r6, [sp, 4]",
            "cmp r7, 0",
            "beq 0x800c904",
            "mov r0, r6",
            "bl my_strlen",
            "mov r1, r6",
            "mov r2, r0",
            "mov r0, r7",
            "bl my_strncasecmp",
            "cmp r0, 0",
            "beq 0x800c964",
            "ldr r7, [sp, 0x14]",
            "cmp r7, 0",
            "beq 0x800c904",
            "mov r0, r6",
            "bl my_strlen",
            "mov r1, r6",
            "mov r2, r0",
            "mov r0, r7",
            "bl my_strncasecmp",
            "cmp r0, 0",
            "beq 0x800c9ac",
            "ldr r3, [0x0800ca44]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "bne 0x800c948",
            "mvn r0, 0",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, pc}",
            "ldr r3, [0x0800ca44]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x800c914",
            "ldr r0, [0x0800ca48]",
            "add r1, r4, 8",
            "movw r2, 0x1b2",
            "bl my_printf",
            "mvn r0, 0",
            "b 0x800c918",
            "ldr r0, [0x0800ca4c]",
            "movw r2, 0x1cf",
            "ldr r1, [0x0800ca50]",
            "ldr r3, [sp, 4]",
            "bl my_printf",
            "mvn r0, 0",
            "b 0x800c918",
            "add r0, r5, 0xc",
            "ldr r1, [sp, 8]",
            "bl fcn.0800c278",
            "subs r6, r0, 0",
            "bne 0x800c9ec",
            "ldr r3, [0x0800ca44]",
            "ldr r3, [r3]",
            "cmp r3, 2",
            "bhi 0x800c990",
            "mov r0, r6",
            "b 0x800c918",
            "ldr r0, [0x0800ca54]",
            "add r1, r4, 8",
            "movw r2, 0x1c1",
            "ldr r3, [r5, 0xc]",
            "bl my_printf",
            "mov r0, r6",
            "b 0x800c918",
            "add r0, r5, 0x10",
            "ldr r1, [sp, 8]",
            "bl fcn.0800c278",
            "subs r6, r0, 0",
            "bne 0x800ca14",
            "ldr r3, [0x0800ca44]",
            "ldr r3, [r3]",
            "cmp r3, 2",
            "bls 0x800c988",
            "ldr r0, [0x0800ca58]",
            "add r1, r4, 8",
            "movw r2, 0x1cb",
            "ldr r3, [r5, 0x10]",
            "bl my_printf",
            "mov r0, r6",
            "b 0x800c918",
            "ldr r3, [0x0800ca44]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x800c914",
            "ldr r0, [0x0800ca5c]",
            "add r1, r4, 8",
            "movw r2, 0x1bd",
            "bl my_printf",
            "mvn r0, 0",
            "b 0x800c918",
            "ldr r3, [0x0800ca44]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x800c914",
            "ldr r0, [0x0800ca60]",
            "add r1, r4, 8",
            "movw r2, 0x1c7",
            "bl my_printf",
            "mvn r0, 0",
            "b 0x800c918"
        ]
    },
    "sym.qos_start": {
        "function_address": "0x0800f680",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "ldr r4, [0x0800f7a4]",
            "ldr r3, [r4]",
            "cmp r3, 1",
            "bls 0x800f6a4",
            "ldr r0, [0x0800f7a8]",
            "movw r2, 0xc52",
            "ldr r1, [0x0800f7ac]",
            "bl my_printf",
            "ldr r3, [r4, 0xc]",
            "ldr r5, [0x0800f7a4]",
            "cmp r3, 0",
            "beq 0x800f73c",
            "ldr r6, [r5, 0x10]",
            "cmp r6, 0",
            "bne 0x800f750",
            "ldr r2, [r5, 4]",
            "ldr r3, [r2]",
            "cmp r3, 0",
            "beq 0x800f728",
            "ldrsb r3, [r3]",
            "cmp r3, 0",
            "beq 0x800f728",
            "ldr r3, [r2, 4]",
            "cmp r3, 0",
            "beq 0x800f728",
            "ldrsb r3, [r3]",
            "cmp r3, 0",
            "beq 0x800f728",
            "ldr r0, [r5, 0x14]",
            "bl my_write_lock_bh",
            "mov r0, r6",
            "bl fcn.0800b67c",
            "bl create_app_branch",
            "ldr r0, [reloc.init_qos_udb_entry]",
            "bl qos_for_each_udb_entry",
            "ldr r0, [r5, 0x14]",
            "mov r3, 1",
            "str r3, [r5, 0x10]",
            "bl my_write_unlock_bh",
            "mov r0, r6",
            "pop {r4, r5, r6, pc}",
            "ldr r3, [r4]",
            "cmp r3, 0",
            "bne 0x800f774",
            "mvn r0, 0",
            "pop {r4, r5, r6, pc}",
            "ldr r3, [r5]",
            "cmp r3, 0",
            "bne 0x800f78c",
            "mvn r0, 0",
            "pop {r4, r5, r6, pc}",
            "ldr r3, [r5]",
            "cmp r3, 0",
            "beq 0x800f748",
            "ldr r0, [0x0800f7b4]",
            "movw r2, 0xc5c",
            "ldr r1, [0x0800f7ac]",
            "bl my_printf",
            "mvn r0, 0",
            "pop {r4, r5, r6, pc}",
            "ldr r0, [0x0800f7b8]",
            "movw r2, 0xc63",
            "ldr r1, [0x0800f7ac]",
            "bl my_printf",
            "mvn r0, 0",
            "pop {r4, r5, r6, pc}",
            "ldr r0, [0x0800f7bc]",
            "movw r2, 0xc56",
            "ldr r1, [0x0800f7ac]",
            "bl my_printf",
            "mvn r0, 0",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.remove_dev_leaf": {
        "function_address": "0x0800e600",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r8, r0",
            "ldr fp, [0x0800e7cc]",
            "ldr r3, [fp]",
            "cmp r3, 2",
            "bhi 0x800e74c",
            "ldr r3, [fp, 0x10]",
            "ldr r4, [0x0800e7cc]",
            "cmp r3, 0",
            "beq 0x800e77c",
            "cmp r8, 0",
            "beq 0x800e7a8",
            "ldr r0, [r4, 0x14]",
            "bl my_write_lock_bh",
            "ldr r3, [r4, 4]",
            "movw r2, 0x161c",
            "ldr r5, [r3, r2]",
            "add r3, r3, 0x1600",
            "add r3, r3, 0x1c",
            "cmp r3, r5",
            "subne r5, r5, 0x34",
            "movne sb, 2",
            "beq 0x800e760",
            "mov r7, 2",
            "mov r6, 1",
            "mov r0, r6",
            "bl fcn.0800ad18",
            "subs r4, r0, 0",
            "mov r0, r5",
            "beq 0x800e70c",
            "ldrb r3, [r8]",
            "add r3, r3, 1",
            "strh r3, [r4]",
            "ldrb r3, [r5]",
            "strb sb, [r4, 7]",
            "str r5, [r4, 0xc]",
            "add r3, r3, 0xa",
            "str r8, [r4, 0x18]",
            "strb r3, [r4, 2]",
            "bl fcn.0800bce0",
            "mov r0, r4",
            "bl fcn.0800b174",
            "subs sl, r0, 0",
            "mov r0, r4",
            "bne 0x800e734",
            "bl fcn.0800a6a4",
            "ldrb r1, [r4, 2]",
            "lsl r6, r6, 1",
            "ldrb r2, [r4, 8]",
            "ldrh r0, [r4]",
            "uxtb r6, r6",
            "bl fcn.0800bd2c",
            "mov r0, r4",
            "bl fcn.0800abf4",
            "subs r7, r7, 1",
            "bne 0x800e664",
            "ldr r3, [fp, 4]",
            "ldr r2, [r5, 0x34]",
            "add r3, r3, 0x1600",
            "add r3, r3, 0x1c",
            "sub r5, r2, 0x34",
            "cmp r2, r3",
            "bne 0x800e65c",
            "ldr r0, [fp, 0x14]",
            "bl my_write_unlock_bh",
            "mov r0, sl",
            "pop {r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r3, [fp]",
            "cmp r3, 0",
            "mvneq sl, 0",
            "beq 0x800e6fc",
            "movw r2, 0xa2d",
            "ldr r1, [0x0800e7d0]",
            "ldr r0, [0x0800e7d4]",
            "mvn sl, 0",
            "bl my_printf",
            "b 0x800e6fc",
            "ldr r3, [fp]",
            "cmp r3, 0",
            "bne 0x800e768",
            "mov r0, r4",
            "bl fcn.0800abf4",
            "b 0x800e6fc",
            "movw r2, 0xa12",
            "ldr r1, [0x0800e7d0]",
            "ldr r0, [0x0800e7d8]",
            "bl my_printf",
            "b 0x800e618",
            "mov sl, 0",
            "b 0x800e6fc",
            "movw r2, 0xa3c",
            "ldr r1, [0x0800e7d0]",
            "ldr r0, [0x0800e7dc]",
            "bl my_printf",
            "b 0x800e740",
            "ldr r3, [r4]",
            "cmp r3, 0",
            "bne 0x800e790",
            "mvn sl, 0",
            "b 0x800e704",
            "movw r2, 0xa16",
            "ldr r1, [0x0800e7d0]",
            "ldr r0, [0x0800e7e0]",
            "mvn sl, 0",
            "bl my_printf",
            "b 0x800e704",
            "ldr r3, [r4]",
            "cmp r3, 0",
            "beq 0x800e788",
            "movw r2, 0xa1c",
            "ldr r1, [0x0800e7d0]",
            "ldr r0, [0x0800e7e4]",
            "mvn sl, 0",
            "bl my_printf",
            "b 0x800e704"
        ]
    },
    "fcn.0800bce0": {
        "function_address": "0x0800bce0",
        "instructions": [
            "cmp r0, 0",
            "push {r3, lr}",
            "movne r0, 0",
            "popne {r3, pc}",
            "ldr r3, [0x0800bd20]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "bne 0x800bd08",
            "mvn r0, 0",
            "pop {r3, pc}",
            "ldr r0, [0x0800bd24]",
            "movw r2, 0x788",
            "ldr r1, [0x0800bd28]",
            "bl my_printf",
            "mvn r0, 0",
            "pop {r3, pc}"
        ]
    },
    "fcn.0800b174": {
        "function_address": "0x0800b174",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "sub sp, sp, 8",
            "mov r4, r0",
            "bl fcn.08009f8c",
            "subs r6, r0, 0",
            "bne 0x800b21c",
            "mov r0, 0x14",
            "bl my_kmalloc_atomic",
            "subs r5, r0, 0",
            "beq 0x800b248",
            "mov r1, r6",
            "mov r2, 0x14",
            "bl my_memset",
            "ldr r3, [0x0800b26c]",
            "ldrex r2, [r3]",
            "add r2, r2, 0x14",
            "strex r1, r2, [r3]",
            "teq r1, 0",
            "bne 0x800b1ac",
            "ldr ip, [r4, 0x18]",
            "mov r3, 0",
            "movt r3, 0xffc0",
            "mov r0, r6",
            "add r2, r5, 0xc",
            "add r1, r4, 0x1c",
            "ldrb ip, [ip]",
            "str r3, [r5, 4]",
            "add r3, ip, 0x80",
            "strh r3, [r5]",
            "ldr r3, [r4, 0x18]",
            "ldrb ip, [r4, 8]",
            "ldrb r3, [r3]",
            "lsl r3, r3, 0x16",
            "orr r3, r3, ip, lsl 30",
            "str r3, [r5, 8]",
            "ldr r3, [r4, 0x20]",
            "str r2, [r4, 0x20]",
            "str r1, [r5, 0xc]",
            "str r3, [r5, 0x10]",
            "str r2, [r3]",
            "add sp, sp, 8",
            "pop {r4, r5, r6, pc}",
            "ldr r3, [0x0800b270]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "mvneq r0, 0",
            "beq 0x800b214",
            "ldr r0, [0x0800b274]",
            "movw r2, 0x926",
            "ldr r1, [0x0800b278]",
            "bl my_printf",
            "mvn r0, 0",
            "b 0x800b214",
            "ldr r0, [0x0800b27c]",
            "movw r2, 0x92d",
            "ldr r1, [0x0800b278]",
            "mov r4, 0x14",
            "mov r5, 0",
            "strd r4, r5, [sp]",
            "bl my_printf",
            "mvn r0, 0",
            "b 0x800b214"
        ]
    },
    "fcn.0800a6a4": {
        "function_address": "0x0800a6a4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sl, lr}",
            "mov r7, r0",
            "ldr r6, [0x0800a774]",
            "sub sp, sp, 0x10c",
            "ldr r3, [r6]",
            "cmp r3, 2",
            "bhi 0x800a760",
            "ldr r4, [r7, 0x1c]",
            "add sl, r7, 0x1c",
            "cmp sl, r4",
            "beq 0x800a758",
            "ldr r8, [0x0800a774]",
            "sub r4, r4, 0xc",
            "add r5, sp, 8",
            "ldrb r3, [r7, 8]",
            "mov r1, 0x100",
            "ldrb ip, [r7, 2]",
            "mov r0, r5",
            "ldr r2, [0x0800a778]",
            "tst r3, 1",
            "ldrne r3, [r6, 4]",
            "ldreq r3, [r6, 4]",
            "ldrne r3, [r3]",
            "ldreq r3, [r3, 4]",
            "str ip, [sp]",
            "ldrh ip, [r4]",
            "str ip, [sp, 4]",
            "bl my_snprintf",
            "ldr r3, [r6, 8]",
            "mov r0, r5",
            "cmp r3, 0",
            "beq 0x800a748",
            "blx r3",
            "ldr ip, [r8]",
            "movw r2, 0x50f",
            "ldr r0, [0x0800a77c]",
            "mov r3, r5",
            "ldr r1, [0x0800a780]",
            "cmp ip, 1",
            "bls 0x800a748",
            "bl my_printf",
            "ldr r4, [r4, 0xc]",
            "cmp sl, r4",
            "sub r4, r4, 0xc",
            "bne 0x800a6dc",
            "add sp, sp, 0x10c",
            "pop {r4, r5, r6, r7, r8, sl, pc}",
            "movw r2, 0x506",
            "ldr r1, [0x0800a780]",
            "ldr r0, [0x0800a784]",
            "bl my_printf",
            "b 0x800a6c0"
        ]
    },
    "fcn.0800bd2c": {
        "function_address": "0x0800bd2c",
        "instructions": [
            "tst r2, 1",
            "push {r4, r5, lr}",
            "ldrne r5, [0x0800bdb4]",
            "sub sp, sp, 0x114",
            "add r4, sp, 0x10",
            "mov ip, r1",
            "ldreq r5, [0x0800bdb4]",
            "mov lr, r0",
            "ldrne r3, [r5, 4]",
            "mov r1, 0x100",
            "mov r0, r4",
            "ldr r2, [0x0800bdb8]",
            "ldreq r3, [r5, 4]",
            "ldrne r3, [r3]",
            "ldreq r3, [r3, 4]",
            "str ip, [sp]",
            "stmib sp, {ip, lr}",
            "bl my_snprintf",
            "ldr r3, [r5, 8]",
            "cmp r3, 0",
            "beq 0x800bdac",
            "mov r0, r4",
            "blx r3",
            "ldr r3, [0x0800bdb4]",
            "ldr r3, [r3]",
            "cmp r3, 1",
            "bls 0x800bdac",
            "ldr r0, [0x0800bdbc]",
            "movw r2, 0x51c",
            "ldr r1, [0x0800bdc0]",
            "mov r3, r4",
            "bl my_printf",
            "add sp, sp, 0x114",
            "pop {r4, r5, pc}"
        ]
    },
    "sym.update_app_ses_leaf": {
        "function_address": "0x0800ea30",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov sl, r1",
            "ldrb r2, [r0, 0x3a]",
            "mov r5, r0",
            "ldrb r3, [r0, 0x39]",
            "ldr r6, [0x0800eec0]",
            "ldrb r1, [r0, 0x3b]",
            "ldrb r7, [r5, 0x3c]",
            "ldr r0, [r6]",
            "orr r3, r3, r2, lsl 8",
            "ldrb r8, [r5, 0x3e]",
            "ldrb r2, [r5, 0x3d]",
            "orr r3, r3, r1, lsl 16",
            "cmp r0, 2",
            "orr r7, r3, r7, lsl 24",
            "orr r8, r2, r8, lsl 8",
            "bhi 0x800ece0",
            "ldr r3, [r6, 0x10]",
            "ldr sb, [0x0800eec0]",
            "cmp r3, 0",
            "beq 0x800ee14",
            "cmp r5, 0",
            "beq 0x800ee5c",
            "ldr r0, [sb, 0x14]",
            "bl my_write_lock_bh",
            "mov r0, r5",
            "mov r1, sl",
            "bl fcn.08009ee4",
            "subs r4, r0, 0",
            "beq 0x800ee94",
            "tst sl, 1",
            "mov r2, 0x1f40",
            "ldrne r3, [r4, 0xc]",
            "mul r8, r2, r8",
            "ldreq r3, [r4, 0xc]",
            "ldrne sb, [r3, 0xc]",
            "ldreq sb, [r3, 4]",
            "rsbs r7, r7, 1",
            "movlo r7, 0",
            "ldrb r3, [r4, 6]",
            "ubfx r3, r3, 4, 1",
            "cmp r3, r7",
            "beq 0x800ecf4",
            "ldr r2, [r4, 0x28]",
            "add r3, r4, 0x24",
            "ldr r1, [r4, 0x24]",
            "str r2, [r1, 4]",
            "str r1, [r2]",
            "ldrb r2, [r4, 6]",
            "str r3, [r4, 0x24]",
            "str r3, [r4, 0x28]",
            "bic r3, r2, 0x10",
            "orr r7, r3, r7, lsl 4",
            "ubfx sl, r7, 5, 1",
            "strb r7, [r4, 6]",
            "cmp sl, 0",
            "ldreq r7, [r4, 0x10]",
            "bne 0x800ecc8",
            "cmp r8, r7",
            "bhs 0x800ebd4",
            "ldr r3, [r6]",
            "rsb r7, r8, r7",
            "cmp r3, 1",
            "bls 0x800eb44",
            "ldr r0, [0x0800eec4]",
            "movw r2, 0xb38",
            "ldr r1, [0x0800eec8]",
            "mov r3, r7",
            "bl my_printf",
            "cmp sl, 0",
            "beq 0x800edb0",
            "str r7, [r4, 0x10]",
            "mov r0, r4",
            "bl fcn.0800af20",
            "ldr r3, [r4, 0x18]",
            "ldrb r2, [r4, 6]",
            "str r8, [r4, 0x14]",
            "cmp r3, 0",
            "str r8, [r4, 0x10]",
            "orr r2, r2, 0x20",
            "strb r2, [r4, 6]",
            "beq 0x800ebb0",
            "cmp r8, 0",
            "bne 0x800ed28",
            "ldrb r1, [r4, 2]",
            "ldrb r2, [r3]",
            "add r2, r2, 1",
            "orr r2, r2, r1, lsl 16",
            "orr r2, r2, 0x40000000",
            "lsr r1, r2, 0x18",
            "ubfx ip, r2, 8, 1",
            "ubfx r0, r2, 0x10, 8",
            "strb r2, [r3, 0x35]",
            "strb ip, [r3, 0x36]",
            "strb r0, [r3, 0x37]",
            "strb r1, [r3, 0x38]",
            "mov r0, r4",
            "mov r7, 0",
            "bl fcn.0800a888",
            "mov r0, r4",
            "bl fcn.0800a06c",
            "ldr r0, [r6, 0x14]",
            "bl my_write_unlock_bh",
            "mov r0, r7",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}",
            "movls r7, 0",
            "bls 0x800ebbc",
            "ldr r3, [r6]",
            "rsb r7, r7, r8",
            "cmp r3, 1",
            "bls 0x800ec00",
            "ldr r0, [0x0800eecc]",
            "movw r2, 0xb4a",
            "ldr r1, [0x0800eec8]",
            "mov r3, r7",
            "bl my_printf",
            "cmp sb, r8",
            "bhs 0x800ed44",
            "ldr r3, [r6]",
            "cmp r3, 1",
            "mvnls r7, 0",
            "bls 0x800ec2c",
            "ldr r0, [0x0800eed0]",
            "movw r2, 0xb4f",
            "ldr r1, [0x0800eec8]",
            "mvn r7, 0",
            "bl my_printf",
            "cmp sl, 0",
            "beq 0x800ec54",
            "mov r0, r4",
            "bl fcn.0800a6a4",
            "ldrh r0, [r4]",
            "ldrb r1, [r4, 2]",
            "ldrb r2, [r4, 8]",
            "bl fcn.0800bd2c",
            "mov r0, r4",
            "bl fcn.0800af20",
            "mov r3, 0",
            "cmp r7, 2",
            "str r3, [r4, 0x10]",
            "ldrb r2, [r5, 0x3e]",
            "ldrb r3, [r5, 0x3d]",
            "orr r3, r3, r2, lsl 8",
            "mov r2, 0x1f40",
            "mul r3, r2, r3",
            "str r3, [r4, 0x14]",
            "beq 0x800ee40",
            "ldr r3, [r4, 0x18]",
            "ldrb r2, [r4, 6]",
            "cmp r3, 0",
            "bic r2, r2, 0x20",
            "strb r2, [r4, 6]",
            "beq 0x800ebbc",
            "ldrb r1, [r4, 2]",
            "ldrb r2, [r3]",
            "add r2, r2, 1",
            "orr r2, r2, r1, lsl 16",
            "orr r2, r2, 0x40000000",
            "lsr r1, r2, 0x18",
            "ubfx ip, r2, 8, 1",
            "ubfx r0, r2, 0x10, 8",
            "strb r2, [r3, 0x35]",
            "strb ip, [r3, 0x36]",
            "strb r0, [r3, 0x37]",
            "strb r1, [r3, 0x38]",
            "b 0x800ebbc",
            "ldr r7, [r4, 0x10]",
            "subs sl, r7, 0",
            "movne sl, 1",
            "cmp r8, r7",
            "bhs 0x800ebd4",
            "b 0x800eb20",
            "movw r2, 0xb05",
            "ldr r1, [0x0800eec8]",
            "ldr r0, [0x0800eed4]",
            "bl my_printf",
            "b 0x800ea74",
            "ldr r3, [r4, 0x14]",
            "cmp r3, r8",
            "bne 0x800eadc",
            "ldr r3, [r6]",
            "cmp r3, 1",
            "movls r7, 0",
            "bls 0x800ebc4",
            "movw r2, 0xb28",
            "ldr r1, [0x0800eec8]",
            "ldr r0, [0x0800eed8]",
            "mov r7, 0",
            "bl my_printf",
            "b 0x800ebc4",
            "ldrb r1, [r4, 2]",
            "ldrh r2, [r4]",
            "orr r2, r2, 0xc0000000",
            "orr r2, r2, r1, lsl 16",
            "lsr r1, r2, 0x18",
            "ubfx ip, r2, 8, 8",
            "b 0x800eb9c",
            "str r7, [r4, 0x14]",
            "mov r0, r4",
            "bl fcn.0800bdc4",
            "subs r7, r0, 0",
            "bne 0x800edc4",
            "cmp sl, 0",
            "str r8, [r4, 0x14]",
            "str r8, [r4, 0x10]",
            "beq 0x800ede4",
            "mov r0, r4",
            "bl fcn.0800a888",
            "ldr r3, [r4, 0x18]",
            "ldrb r2, [r4, 6]",
            "cmp r3, 0",
            "orr r2, r2, 0x20",
            "strb r2, [r4, 6]",
            "beq 0x800ebbc",
            "ldr r2, [r4, 0x10]",
            "cmp r2, 0",
            "beq 0x800ec94",
            "ldrb r1, [r4, 2]",
            "ldrh r2, [r4]",
            "orr r2, r2, 0xc0000000",
            "orr r2, r2, r1, lsl 16",
            "lsr r1, r2, 0x18",
            "ubfx ip, r2, 8, 8",
            "b 0x800ecb0",
            "movw r2, 0xb3c",
            "ldr r1, [0x0800eec8]",
            "ldr r0, [0x0800eedc]",
            "bl my_printf",
            "b 0x800eb4c",
            "ldr r3, [r6]",
            "cmp r3, 1",
            "bls 0x800ec2c",
            "ldr r1, [0x0800eec8]",
            "movw r2, 0xb59",
            "ldr r0, [0x0800eee0]",
            "bl my_printf",
            "b 0x800ec2c",
            "mov r0, r4",
            "bl fcn.0800ade4",
            "subs r7, r0, 0",
            "beq 0x800ee80",
            "ldr r3, [r6]",
            "cmp r3, 0",
            "beq 0x800ed70",
            "ldr r1, [0x0800eec8]",
            "movw r2, 0xb6b",
            "ldr r0, [0x0800eee4]",
            "bl my_printf",
            "b 0x800ed70",
            "ldr r3, [sb]",
            "cmp r3, 0",
            "bne 0x800ee28",
            "mvn r7, 0",
            "b 0x800ebcc",
            "movw r2, 0xb09",
            "ldr r1, [0x0800eec8]",
            "ldr r0, [0x0800eee8]",
            "mvn r7, 0",
            "bl my_printf",
            "b 0x800ebcc",
            "ldr r3, [r4, 0x18]",
            "ldrb r2, [r4, 6]",
            "cmp r3, 0",
            "orr r2, r2, 0x20",
            "strb r2, [r4, 6]",
            "bne 0x800ec94",
            "b 0x800ebbc",
            "ldr r3, [sb]",
            "cmp r3, 0",
            "beq 0x800ee20",
            "movw r2, 0xb0f",
            "ldr r1, [0x0800eec8]",
            "ldr r0, [0x0800eeec]",
            "mvn r7, 0",
            "bl my_printf",
            "b 0x800ebcc",
            "mov r0, r4",
            "bl fcn.0800a418",
            "mov r0, r4",
            "bl fcn.0800a788",
            "b 0x800ed70",
            "ldr r3, [sb]",
            "cmp r3, 0",
            "beq 0x800eeb0",
            "ldr r0, [0x0800eef0]",
            "movw r2, 0xb18",
            "ldr r1, [0x0800eec8]",
            "bl my_printf",
            "ldr r0, [r6, 0x14]",
            "mvn r7, 0",
            "bl my_write_unlock_bh",
            "b 0x800ebcc"
        ]
    },
    "fcn.08009ee4": {
        "function_address": "0x08009ee4",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r5, r0",
            "ldrb r0, [r0, 1]",
            "mov r6, r1",
            "bl fcn.08009e28",
            "subs r4, r0, 0",
            "beq 0x8009f58",
            "tst r6, 1",
            "addne r4, r4, 0x24",
            "addeq r4, r4, 0x2c",
            "ldr r0, [r4]",
            "cmp r4, r0",
            "bne 0x8009f20",
            "mov r0, 0",
            "pop {r4, r5, r6, pc}",
            "sub r0, r0, 0x24",
            "ldr r3, [r0, 0x18]",
            "cmp r3, r5",
            "bne 0x8009f40",
            "pop {r4, r5, r6, pc}",
            "ldr r3, [r0, 0x18]",
            "cmp r3, r5",
            "popeq {r4, r5, r6, pc}",
            "ldr r0, [r0, 0x24]",
            "cmp r4, r0",
            "sub r0, r0, 0x24",
            "bne 0x8009f34",
            "mov r0, 0",
            "pop {r4, r5, r6, pc}",
            "ldr r3, [0x08009f80]",
            "ldr r0, [r3]",
            "cmp r0, 0",
            "popeq {r4, r5, r6, pc}",
            "ldr r0, [0x08009f84]",
            "movw r2, 0x6f5",
            "ldr r1, [0x08009f88]",
            "bl my_printf",
            "mov r0, r4",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.__create_dev_leaf": {
        "function_address": "0x0800e220",
        "instructions": [
            "movw r2, 0",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "movt r2, 0",
            "sub sp, sp, 0xc",
            "mov r5, r0",
            "ldr r3, [r2]",
            "cmp r3, 2",
            "bhi 0x800e3bc",
            "movw r3, 0",
            "movt r3, 0",
            "ldr r2, [r3, 0xc]",
            "ldr r3, [0x0800e4c0]",
            "cmp r2, 0",
            "beq 0x800e390",
            "cmp r5, 0",
            "beq 0x800e49c",
            "ldr r3, [r3, 4]",
            "movw r2, 0x161c",
            "ldr r6, [r3, r2]",
            "add r3, r3, 0x1600",
            "add r3, r3, 0x1c",
            "cmp r3, r6",
            "moveq sl, 0",
            "beq 0x800e3b0",
            "sub r6, r6, 0x34",
            "mov fp, 2",
            "add sb, sp, 7",
            "mov r8, 2",
            "mov r7, 1",
            "b 0x800e334",
            "ldrb r3, [r5]",
            "add r1, r4, 0x10",
            "add r0, r4, 0xc",
            "add r3, r3, 1",
            "strh r3, [r4]",
            "ldrb r3, [r6]",
            "add r3, r3, 0xa",
            "strb r3, [r4, 2]",
            "ldrb r3, [r6]",
            "ldrb ip, [r5]",
            "strb r2, [r4, 6]",
            "add r3, r3, 1",
            "strb fp, [r4, 7]",
            "rsb lr, r3, r3, lsl 5",
            "ldrb r2, [sp, 7]",
            "add ip, ip, 1",
            "str r6, [r4, 0xc]",
            "add r3, r3, lr, lsl 2",
            "str r5, [r4, 0x18]",
            "add ip, ip, r3, lsl 3",
            "strh ip, [r4, 4]",
            "strb r2, [r5, 0x4f]",
            "bl fcn.0800b5e0",
            "subs sl, r0, 0",
            "mov r0, r4",
            "bne .LANCHOR0",
            "bl fcn.0800b174",
            "subs sl, r0, 0",
            "mov r0, r4",
            "bne .LANCHOR0",
            "bl fcn.0800a418",
            "mov r0, r4",
            "lsl r7, r7, 1",
            "bl fcn.0800a788",
            "mov r0, r4",
            "uxtb r7, r7",
            "bl fcn.0800abf4",
            "subs r8, r8, 1",
            "beq .LANCHOR0",
            "mov r0, r7",
            "bl fcn.0800ad18",
            "subs r4, r0, 0",
            "mov r1, sb",
            "mov r0, r5",
            "beq .LANCHOR0",
            "bl fcn.0800b3cc",
            "cmp r0, 0",
            "ldrbne r2, [r0]",
            "bne 0x800e298",
            "movw r2, 0",
            "ldr r1, [0x0800e4c4]",
            "movt r2, 0",
            "ldr r0, [0x0800e4c8]",
            "ldr r3, [r2]",
            "movw r2, 0x8d9",
            "cmp r3, 1",
            "bls .LANCHOR2",
            "bl my_printf",
            "movw r3, 0",
            "movt r3, 0",
            "ldrb r2, [r3]",
            "b 0x800e298",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x800e40c",
            "ldr r0, [0x0800e4cc]",
            "movw r2, 0x9b6",
            "ldr r1, [0x0800e4d0]",
            "mvn sl, 0",
            "bl my_printf",
            "mov r0, sl",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "movw r2, 0x9b2",
            "ldr r1, [0x0800e4d0]",
            "ldr r0, [0x0800e4d4]",
            "bl my_printf",
            "b .LANCHOR0",
            "movw r2, 0",
            "movt r2, 0",
            "ldr r3, [r2, 4]",
            "ldr r2, [r6, 0x34]",
            "add r3, r3, 0x1600",
            "add r3, r3, 0x1c",
            "sub r6, r2, 0x34",
            "cmp r2, r3",
            "bne 0x800e28c",
            "b 0x800e3b0",
            "movw r2, 0",
            "movt r2, 0",
            "ldr r3, [r2]",
            "cmp r3, 0",
            "bne 0x800e45c",
            "mvn sl, 0",
            "b 0x800e3b0",
            "movw r2, 0",
            "movt r2, 0",
            "ldr r3, [r2]",
            "cmp r3, 0",
            "bne 0x800e474",
            "mov r0, r4",
            "bl fcn.0800abf4",
            "b 0x800e3b0",
            "movw r2, 0",
            "movt r2, 0",
            "ldr r3, [r2]",
            "cmp r3, 0",
            "bne 0x800e488",
            "ldr r0, [r4, 0xc]",
            "bl fcn.0800bce0",
            "mov r0, r4",
            "bl fcn.0800abf4",
            "b 0x800e3b0",
            "movw r2, 0x9cb",
            "ldr r1, [0x0800e4d0]",
            "ldr r0, [0x0800e4d8]",
            "mvn sl, 0",
            "bl my_printf",
            "b 0x800e3b0",
            "movw r2, 0x9d9",
            "ldr r1, [0x0800e4d0]",
            "ldr r0, [0x0800e4dc]",
            "bl my_printf",
            "b 0x800e428",
            "mov r2, 0x9e0",
            "ldr r1, [0x0800e4d0]",
            "ldr r0, [0x0800e4e0]",
            "bl my_printf",
            "b 0x800e448",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x800e40c",
            "movw r2, 0x9bc",
            "ldr r1, [0x0800e4d0]",
            "ldr r0, [0x0800e4e4]",
            "mvn sl, 0",
            "bl my_printf",
            "b 0x800e3b0"
        ]
    },
    "fcn.0800b5e0": {
        "function_address": "0x0800b5e0",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r5, r0",
            "ldr r4, [0x0800b66c]",
            "mov r6, r1",
            "ldr r3, [r4]",
            "cmp r3, 2",
            "bhi 0x800b628",
            "ldr r3, [r5]",
            "cmp r3, 0",
            "movne r3, 0x3e80",
            "movne r0, 0",
            "strne r3, [r6]",
            "popne {r4, r5, r6, pc}",
            "ldr r3, [r4]",
            "cmp r3, 0",
            "bne 0x800b654",
            "mvn r0, 0",
            "pop {r4, r5, r6, pc}",
            "ldr r0, [0x0800b670]",
            "movw r2, 0x75f",
            "ldr r1, [0x0800b674]",
            "bl my_printf",
            "ldr r3, [r5]",
            "cmp r3, 0",
            "movne r3, 0x3e80",
            "movne r0, 0",
            "strne r3, [r6]",
            "popne {r4, r5, r6, pc}",
            "b 0x800b614",
            "ldr r0, [0x0800b678]",
            "movw r2, 0x763",
            "ldr r1, [0x0800b674]",
            "bl my_printf",
            "mvn r0, 0",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.remove_app_ses_leaf": {
        "function_address": "0x0800f4d4",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r4, r0",
            "ldr r5, [0x0800f668]",
            "mov r6, r1",
            "ldr r3, [r5]",
            "cmp r3, 2",
            "bhi 0x800f5dc",
            "ldr r3, [r5, 0x10]",
            "ldr r7, [0x0800f668]",
            "cmp r3, 0",
            "beq 0x800f618",
            "cmp r4, 0",
            "beq 0x800f644",
            "ldr r0, [r7, 0x14]",
            "bl my_write_lock_bh",
            "mov r0, r4",
            "mov r1, r6",
            "bl fcn.08009ee4",
            "subs r4, r0, 0",
            "beq 0x800f5f0",
            "ldr r2, [r4, 0x28]",
            "add r3, r4, 0x24",
            "ldr r1, [r4, 0x24]",
            "str r2, [r1, 4]",
            "str r1, [r2]",
            "ldrb r2, [r4, 6]",
            "str r3, [r4, 0x24]",
            "str r3, [r4, 0x28]",
            "tst r2, 0x20",
            "bne 0x800f568",
            "mov r0, r4",
            "mov r4, 0",
            "bl fcn.0800ab30",
            "ldr r0, [r5, 0x14]",
            "bl my_write_unlock_bh",
            "mov r0, r4",
            "pop {r3, r4, r5, r6, r7, pc}",
            "ldr r3, [r4, 0x10]",
            "cmp r3, 0",
            "beq 0x800f54c",
            "bl fcn.0800a6a4",
            "ldrb r2, [r4, 8]",
            "ldrb r1, [r4, 2]",
            "ldrh r0, [r4]",
            "bl fcn.0800bd2c",
            "mov r0, r4",
            "bl fcn.0800af20",
            "ldr r3, [r4, 0x18]",
            "ldrb r2, [r4, 6]",
            "cmp r3, 0",
            "bic r2, r2, 0x20",
            "strb r2, [r4, 6]",
            "beq 0x800f54c",
            "ldrb r1, [r4, 2]",
            "ldrb r2, [r3]",
            "add r2, r2, 1",
            "orr r2, r2, r1, lsl 16",
            "orr r2, r2, 0x40000000",
            "lsr r1, r2, 0x18",
            "ubfx ip, r2, 8, 1",
            "ubfx r0, r2, 0x10, 8",
            "strb r2, [r3, 0x35]",
            "strb ip, [r3, 0x36]",
            "strb r0, [r3, 0x37]",
            "strb r1, [r3, 0x38]",
            "b 0x800f54c",
            "movw r2, 0xbf6",
            "ldr r1, [0x0800f66c]",
            "ldr r0, [0x0800f670]",
            "bl my_printf",
            "b 0x800f4f0",
            "ldr r3, [r7]",
            "cmp r3, 0",
            "mvneq r4, 0",
            "beq 0x800f558",
            "movw r2, 0xc09",
            "ldr r1, [0x0800f66c]",
            "ldr r0, [0x0800f674]",
            "mvn r4, 0",
            "bl my_printf",
            "b 0x800f558",
            "ldr r3, [r7]",
            "cmp r3, 0",
            "bne 0x800f62c",
            "mvn r4, 0",
            "b 0x800f560",
            "movw r2, 0xbfa",
            "ldr r1, [0x0800f66c]",
            "ldr r0, [0x0800f678]",
            "mvn r4, 0",
            "bl my_printf",
            "b 0x800f560",
            "ldr r3, [r7]",
            "cmp r3, 0",
            "beq 0x800f624",
            "mov r2, 0xc00",
            "ldr r1, [0x0800f66c]",
            "ldr r0, [0x0800f67c]",
            "mvn r4, 0",
            "bl my_printf",
            "b 0x800f560"
        ]
    },
    "sym.__parse_dev_rule": {
        "function_address": "0x0800cd68",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "sub sp, sp, 0x1c",
            "mov r2, r1",
            "mov r4, r0",
            "mov r1, 3",
            "add r0, sp, 4",
            "ldr r3, [0x0800cfbc]",
            "bl fcn.0800b474",
            "cmp r0, 2",
            "mov r6, r0",
            "beq dev_rule_create",
            "mvn r0, 0",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, pc}",
            "bl dev_rule_create",
            "subs r5, r0, 0",
            "beq 0x800cf7c",
            "ldr r0, [sp, 4]",
            "mov r2, 3",
            "ldr r1, [0x0800cfc0]",
            "bl my_strncasecmp",
            "cmp r0, 0",
            "bne 0x800ce2c",
            "mov r3, 1",
            "add r6, sp, 0x10",
            "strb r3, [r5]",
            "ldr r7, [sp, 8]",
            "mov r0, r7",
            "bl my_strlen",
            "mov r1, 6",
            "mov r3, r0",
            "mov r2, r7",
            "mov r0, r6",
            "bl __macstr2octet",
            "cmp r0, 0",
            "bne 0x800cf1c",
            "add r0, r5, 2",
            "mov r1, r6",
            "mov r2, 6",
            "bl my_memcpy",
            "ldr r3, [r4, 8]",
            "add r2, r5, 8",
            "add r1, r4, 4",
            "str r2, [r4, 8]",
            "mov r0, 0",
            "str r1, [r5, 8]",
            "str r3, [r5, 0xc]",
            "str r2, [r3]",
            "b 0x800cd98",
            "ldr r0, [sp, 4]",
            "mov r2, 3",
            "ldr r1, [0x0800cfc4]",
            "bl my_strncasecmp",
            "cmp r0, 0",
            "beq 0x800cea4",
            "ldr r0, [sp, 4]",
            "mov r2, 3",
            "ldr r1, [0x0800cfc8]",
            "bl my_strncasecmp",
            "cmp r0, 0",
            "bne 0x800ce08",
            "mov r3, 3",
            "ldr r1, [0x0800cfcc]",
            "strb r3, [r5]",
            "mov r2, r6",
            "ldr r0, [sp, 8]",
            "bl my_strncasecmp",
            "cmp r0, 0",
            "bne 0x800cf44",
            "ldr r3, [0x0800cfd0]",
            "ldr r3, [r3]",
            "cmp r3, 2",
            "bhi 0x800cfa4",
            "mov r3, 0",
            "strh r3, [r5, 2]",
            "ldr r3, [0x0800cfd4]",
            "ldrb r2, [r4]",
            "str r2, [r3]",
            "b 0x800ce08",
            "strb r6, [r5]",
            "mov r2, r6",
            "ldr r0, [sp, 8]",
            "ldr r1, [0x0800cfcc]",
            "bl my_strncasecmp",
            "cmp r0, 0",
            "bne 0x800cee8",
            "ldr r3, [0x0800cfd0]",
            "ldr r3, [r3]",
            "cmp r3, 2",
            "bls 0x800ce8c",
            "movw r2, 0x269",
            "ldr r1, [0x0800cfd8]",
            "ldr r3, [sp, 8]",
            "ldr r0, [0x0800cfdc]",
            "bl my_printf",
            "b 0x800ce8c",
            "add r0, r5, 2",
            "ldr r1, [sp, 8]",
            "bl fcn.0800c20c",
            "cmp r0, 0",
            "beq 0x800ce08",
            "ldr r3, [0x0800cfd0]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x800cf1c",
            "ldr r0, [0x0800cfe0]",
            "mov r2, 0x270",
            "ldr r1, [0x0800cfd8]",
            "bl my_printf",
            "mov r0, r5",
            "bl my_kfree",
            "ldr r3, [0x0800cfe4]",
            "ldrex r2, [r3]",
            "sub r2, r2, 0x10",
            "strex r1, r2, [r3]",
            "teq r1, 0",
            "bne 0x800cf28",
            "mvn r0, 0",
            "b 0x800cd98",
            "add r0, r5, 2",
            "ldr r1, [sp, 8]",
            "bl fcn.0800c20c",
            "cmp r0, 0",
            "beq 0x800ce08",
            "ldr r3, [0x0800cfd0]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x800cf1c",
            "movw r2, 0x281",
            "ldr r1, [0x0800cfd8]",
            "ldr r0, [0x0800cfe8]",
            "bl my_printf",
            "b 0x800cf1c",
            "ldr r3, [0x0800cfd0]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x800cd94",
            "ldr r0, [0x0800cfec]",
            "movw r2, 0x256",
            "ldr r1, [0x0800cfd8]",
            "bl my_printf",
            "mvn r0, 0",
            "b 0x800cd98",
            "movw r2, 0x27a",
            "ldr r1, [0x0800cfd8]",
            "ldr r3, [sp, 8]",
            "ldr r0, [0x0800cff0]",
            "bl my_printf",
            "b 0x800ce8c"
        ]
    },
    "fcn.0800c20c": {
        "function_address": "0x0800c20c",
        "instructions": [
            "push {r4, r5, lr}",
            "subs r4, r1, 0",
            "sub sp, sp, 0xc",
            "mov r5, r0",
            "bne 0x800c22c",
            "mvn r0, 0",
            "add sp, sp, 0xc",
            "pop {r4, r5, pc}",
            "ldrsb r3, [r4]",
            "cmp r3, 0",
            "beq 0x800c220",
            "mov r0, r4",
            "add r1, sp, 4",
            "mov r2, 0xa",
            "bl my_strtoul",
            "ldr r3, [sp, 4]",
            "cmp r3, 0",
            "beq 0x800c220",
            "cmp r4, r3",
            "beq 0x800c220",
            "cmn r0, 1",
            "beq 0x800c224",
            "cmp r0, 0x10000",
            "strhlo r0, [r5]",
            "movlo r0, 0",
            "blo 0x800c224",
            "b 0x800c220"
        ]
    },
    "fcn.0800aa68": {
        "function_address": "0x0800aa68",
        "instructions": [
            "ldr r3, [0x0800ab20]",
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r4, r0",
            "ldr r3, [r3]",
            "cmp r3, 2",
            "bhi 0x800ab04",
            "cmp r4, 0",
            "popeq {r4, r5, r6, r7, r8, pc}",
            "ldr r3, [r4]",
            "cmp r4, r3",
            "popeq {r4, r5, r6, r7, r8, pc}",
            "ldr r2, [r3], -0xc",
            "mov r8, 0x100",
            "ldr r5, [0x0800ab24]",
            "mov r7, 0x200",
            "movt r8, 0x10",
            "movt r7, 0x20",
            "sub r6, r2, 0xc",
            "ldr r1, [r3, 0x10]",
            "cmp r3, 0",
            "mov r0, r3",
            "str r1, [r2, 4]",
            "str r2, [r1]",
            "str r8, [r3, 0xc]",
            "str r7, [r3, 0x10]",
            "beq 0x800aae8",
            "bl my_kfree",
            "ldrex r3, [r5]",
            "sub r3, r3, 0x14",
            "strex r2, r3, [r5]",
            "teq r2, 0",
            "bne 0x800aad4",
            "mov r1, r6",
            "mov r3, r6",
            "ldr r2, [r1, 0xc]!",
            "cmp r4, r1",
            "sub r6, r2, 0xc",
            "bne 0x800aab0",
            "pop {r4, r5, r6, r7, r8, pc}",
            "ldr r0, [0x0800ab28]",
            "movw r2, 0x60c",
            "ldr r1, [0x0800ab2c]",
            "bl my_printf",
            "cmp r4, 0",
            "bne 0x800aa88",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.08009d58": {
        "function_address": "0x08009d58",
        "instructions": [
            "movw r3, 0x851f",
            "push {r4, lr}",
            "movt r3, 0x51eb",
            "umull r2, r3, r3, r0",
            "lsr r3, r3, 8",
            "sub sp, sp, 8",
            "mov ip, r0",
            "cmp r3, 0xc80",
            "bhs 0x8009d98",
            "ldr r2, [0x08009e18]",
            "ldr r2, [r2]",
            "cmp r2, 2",
            "movls r0, 0xc80",
            "bhi 0x8009ddc",
            "add sp, sp, 8",
            "pop {r4, pc}",
            "movw r2, 0x12d0",
            "movt r2, 0x13",
            "cmp r3, r2",
            "bls 0x8009e00",
            "ldr r2, [0x08009e18]",
            "ldr r2, [r2]",
            "cmp r2, 2",
            "movls r0, 0x1140",
            "movtls r0, 0x13",
            "bls 0x8009d90",
            "ldr r0, [0x08009e1c]",
            "movw r2, 0x4f9",
            "ldr r1, [0x08009e20]",
            "bl my_printf",
            "mov r0, 0x1140",
            "movt r0, 0x13",
            "b 0x8009d90",
            "mov r4, 0xc80",
            "ldr r0, [0x08009e24]",
            "ldr r1, [0x08009e20]",
            "movw r2, 0x4e8",
            "str ip, [sp]",
            "str r4, [sp, 4]",
            "bl my_printf",
            "mov r0, r4",
            "b 0x8009d90",
            "mov r0, r3",
            "mov r1, 0x640",
            "bl __aeabi_uidiv",
            "mov r3, 0x640",
            "mul r0, r3, r0",
            "b 0x8009d90"
        ]
    },
    "fcn.0800b280": {
        "function_address": "0x0800b280",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov sl, r0",
            "ldr r8, [0x0800b3bc]",
            "mov r5, r1",
            "ldr r3, [r8]",
            "cmp r3, 2",
            "bhi 0x800b388",
            "ldr r3, [r8, 4]",
            "movw r2, 0x1624",
            "ldr r7, [r3, r2]",
            "add r3, r3, 0x1600",
            "add r3, r3, 0x24",
            "cmp r3, r7",
            "bne 0x800b2c4",
            "mov r7, 0",
            "mov r0, r7",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}",
            "sub r7, r7, 0xc",
            "add sb, sl, 1",
            "ldr r4, [r7, 4]",
            "add r6, r7, 4",
            "cmp r6, r4",
            "beq 0x800b39c",
            "sub r4, r4, 8",
            "b 0x800b2f4",
            "ldr r4, [r4, 8]",
            "cmp r6, r4",
            "sub r4, r4, 8",
            "beq 0x800b39c",
            "ldrb r3, [r4]",
            "cmp r3, r5",
            "bne 0x800b2e4",
            "cmp r5, 2",
            "beq 0x800b334",
            "cmp r5, 3",
            "beq 0x800b36c",
            "cmp r5, 1",
            "beq 0x800b350",
            "movw r2, 0x6ba",
            "ldr r1, [0x0800b3c0]",
            "mov r7, 0",
            "ldr r0, [0x0800b3c4]",
            "bl my_printf",
            "mov r0, r7",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}",
            "ldrb r3, [sl, 0x41]",
            "ldrb r1, [sl, 0x42]",
            "ldrh r2, [r4, 2]",
            "orr r3, r3, r1, lsl 8",
            "cmp r2, r3",
            "bne 0x800b2e4",
            "b 0x800b2bc",
            "add r0, r4, 2",
            "mov r1, sb",
            "mov r2, 6",
            "bl my_memcmp",
            "cmp r0, 0",
            "bne 0x800b2e4",
            "b 0x800b2bc",
            "ldrb r3, [sl, 0x45]",
            "ldrb r1, [sl, 0x46]",
            "ldrh r2, [r4, 2]",
            "orr r3, r3, r1, lsl 8",
            "cmp r2, r3",
            "bne 0x800b2e4",
            "b 0x800b2bc",
            "movw r2, 0x698",
            "ldr r1, [0x0800b3c0]",
            "ldr r0, [0x0800b3c8]",
            "bl my_printf",
            "b 0x800b29c",
            "ldr r3, [r8, 4]",
            "ldr r2, [r7, 0xc]",
            "add r3, r3, 0x1600",
            "add r3, r3, 0x24",
            "sub r7, r2, 0xc",
            "cmp r2, r3",
            "bne 0x800b2cc",
            "b 0x800b2b8"
        ]
    }
}