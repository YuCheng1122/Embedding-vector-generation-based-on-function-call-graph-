{
    "sym.et_dpc": {
        "function_address": "0x080108a8",
        "instructions": [
            "ldr r2, [0x08010ad8]",
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r4, r0",
            "ldr r3, [r0]",
            "ldr r2, [r2]",
            "ldr r8, [r3, 0x24]",
            "ldr r7, [r3, 0x7c]",
            "tst r2, 2",
            "ldr r6, [r3, 0x80]",
            "bne 0x8010ac4",
            "bl 0x80108d0",
            "mov r3, sp",
            "bic r5, r3, 0x1fc0",
            "bic r5, r5, 0x3f",
            "ldr r3, [r5, 4]",
            "add r3, r3, 1",
            "str r3, [r5, 4]",
            "ldr r3, [r4]",
            "ldrb r3, [r3, 0x2c]",
            "cmp r3, 0",
            "beq 0x80109bc",
            "ldrb r3, [r4, 0x155]",
            "cmp r3, 0",
            "ldreq r0, [r4, 0xe8]",
            "bne 0x80109d0",
            "ands sl, r0, 2",
            "bne 0x80109f4",
            "tst r0, 1",
            "bne 0x8010a50",
            "ldr r3, [r7, 0x24]",
            "mov r0, r6",
            "blx r3",
            "ldr r3, [r4, 0xe8]",
            "tst r3, 4",
            "bne 0x8010a1c",
            "ldr r3, [r4]",
            "ldr r2, [r3, 0x88]",
            "cmp r2, 0",
            "beq 0x801096c",
            "ldrb r3, [r4, 0x154]",
            "cmp r3, 0",
            "beq 0x8010960",
            "ldr r3, [0x08010adc]",
            "ldr r3, [r3, 8]",
            "cmp r3, 0",
            "beq 0x8010a8c",
            "add r0, r4, 0x12c",
            "bl 0x8010964",
            "ldr r3, [r4]",
            "mov r2, 0",
            "str r2, [r4, 0xe8]",
            "ldrb r3, [r3, 0x2c]",
            "cmp r3, r2",
            "strbeq r3, [r4, 0x155]",
            "beq 0x80109bc",
            "ldrb r3, [r4, 0x155]",
            "cmp r3, 0",
            "beq 0x8010a7c",
            "ldrb r3, [r4, 0x154]",
            "cmp r3, 0",
            "beq 0x8010a9c",
            "mrs r2, apsr",
            "cpsid i",
            "ldr r3, [r4, 0xf4]",
            "orr r1, r3, 1",
            "str r1, [r4, 0xf4]",
            "msr cpsr_c, r2",
            "tst r3, 1",
            "beq 0x8010aa8",
            "ldr r3, [r5, 4]",
            "sub r3, r3, 1",
            "str r3, [r5, 4]",
            "pop {r4, r5, r6, r7, r8, sb, sl, lr}",
            "b 0x80109cc",
            "ldr r3, [r7, 0x28]",
            "mov r0, r6",
            "mov r1, 0",
            "blx r3",
            "ands sl, r0, 2",
            "mov r3, 0",
            "str r0, [r4, 0xe8]",
            "strb r3, [r4, 0x155]",
            "beq 0x8010914",
            "mov r0, r6",
            "mov r1, r8",
            "ldr r2, [r7, 0x1c]",
            "mov r3, r4",
            "bl fcn.0800f9c8",
            "mov sl, r0",
            "ldr r0, [r4, 0xe8]",
            "tst r0, 1",
            "beq 0x801091c",
            "b 0x8010a50",
            "ldr r3, [r7, 0x2c]",
            "mov r0, r6",
            "blx r3",
            "cmp r0, 0",
            "bne 0x8010ab4",
            "cmp sl, r8",
            "bhs 0x8010934",
            "mov r0, r6",
            "mov r1, r8",
            "ldr r2, [r7, 0x1c]",
            "mov r3, r4",
            "bl fcn.0800f9c8",
            "b 0x8010934",
            "ldr r3, [r7, 0x3c]",
            "mov r0, r6",
            "mov r1, 0",
            "blx r3",
            "ldr r3, [r7, 0x24]",
            "mov r0, r6",
            "blx r3",
            "ldr r3, [r4, 0xe8]",
            "tst r3, 4",
            "beq 0x8010934",
            "b 0x8010a1c",
            "ldr r3, [r7, 0x34]",
            "mov r0, r6",
            "blx r3",
            "b 0x80109bc",
            "mov r0, r4",
            "bl fcn.0800efbc",
            "ldr r3, [r4]",
            "b 0x801096c",
            "add r0, r4, 0x118",
            "bl 0x8010aa0",
            "b 0x80109bc",
            "add r0, r4, 0xf0",
            "bl 0x8010aac",
            "b 0x80109bc",
            "mov r0, r4",
            "mov r1, 1",
            "bl 0x8010abc",
            "b 0x8010934",
            "ldr r1, [r3, 4]",
            "ldr r2, [r4, 0xe8]",
            "ldr r0, [0x08010ae0]",
            "bl 0x8010ad0",
            "b 0x80108d0"
        ]
    },
    "fcn.0800f9c8": {
        "function_address": "0x0800f9c8",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r5, r3",
            "ldr ip, [r3]",
            "sub sp, sp, 0x3bc",
            "mov r3, r2",
            "add r2, sp, 0x2b8",
            "ldrb lr, [r5, 0x18]",
            "mov r4, r1",
            "ldr ip, [ip, 0x1c]",
            "add ip, lr, ip",
            "str ip, [sp, 0x10]",
            "blx r3",
            "ldrb r3, [r5, 0x19]",
            "cmp r4, r0",
            "movgt r4, 0",
            "movle r4, 1",
            "str r0, [sp, 0x30]",
            "strb r4, [r5, 0x155]",
            "cmp r3, 0",
            "beq 0x800fe9c",
            "ldr r4, [r5]",
            "str r0, [sp, 0x14]",
            "ldr r0, [sp, 0x30]",
            "ldr sb, [r5, 0xc]",
            "cmp r0, 0",
            "strle r3, [sp, 0x14]",
            "ble 0x800ff60",
            "add r1, sp, 0x2b8",
            "str sb, [sp, 0xc]",
            "str r5, [sp, 8]",
            "sub r7, r1, 4",
            "ldr r8, [0x0801088c]",
            "mov r6, r3",
            "str r3, [sp, 0x14]",
            "movw sl, 0x6c88",
            "mov fp, r0",
            "ldr sb, [sp, 0x10]",
            "mov r5, r3",
            "b 0x800ff10"
        ]
    },
    "fcn.0800efbc": {
        "function_address": "0x0800efbc",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x24",
            "ldr fp, [0x0800f498]",
            "mov r7, r0",
            "ldr r5, [r0]",
            "ldr r3, [fp]",
            "tst r3, 2",
            "moveq r1, sp",
            "biceq r8, r1, 0x1fc0",
            "biceq r8, r8, 0x3f",
            "bne 0x800f47c",
            "mov r2, sp",
            "ldr r1, [r5, 4]",
            "bic r8, r2, 0x1fc0",
            "ldr r0, [0x0800f4b0]",
            "bic r8, r8, 0x3f"
        ]
    },
    "sym.et_tx_tasklet": {
        "function_address": "0x0800f9ac",
        "instructions": [
            "str lr, [sp, -4]!",
            "sub sp, sp, 0x1c",
            "str r0, [sp, 0x14]",
            "add r0, sp, 4",
            "bl sym.et_txq_work",
            "add sp, sp, 0x1c",
            "ldm sp!, {pc}"
        ]
    },
    "sym.et_txq_work": {
        "function_address": "0x0800f96c",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "ldr r5, [r0, 0x10]",
            "bl 0x800f974",
            "mov r3, sp",
            "bic r4, r3, 0x1fc0",
            "bic r4, r4, 0x3f",
            "ldr r3, [r4, 4]",
            "add r3, r3, 1",
            "str r3, [r4, 4]",
            "mov r0, r5",
            "bl fcn.0800efbc",
            "ldr r3, [r4, 4]",
            "sub r3, r3, 1",
            "str r3, [r4, 4]",
            "pop {r4, r5, r6, lr}",
            "b 0x800f9a8"
        ]
    },
    "sym.et_ioctl": {
        "function_address": "0x08000aac",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x24",
            "ldr sb, [0x08001058]",
            "mov r6, r0",
            "mov sl, r2",
            "add r8, r0, 0x300",
            "str r1, [sp, 0x10]",
            "ldr r3, [sb]",
            "tst r3, 2",
            "bne 0x8001024",
            "movw r3, 0x89fa",
            "cmp sl, r3",
            "beq 0x8000bd0",
            "ble 0x8000b80",
            "movw r3, 0x89fd",
            "cmp sl, r3",
            "beq 0x8000bd0",
            "bgt 0x8000bb8",
            "movw r3, 0x89fc",
            "cmp sl, r3",
            "beq 0x8000ba8",
            "mov r5, 4",
            "mov r4, 1",
            "mov r3, 0",
            "str r3, [sp, 0xc]",
            "ldr r0, [r8, 0xc]",
            "mov r1, r5",
            "bl osl_malloc",
            "subs r7, r0, 0",
            "beq 0x8000fd4",
            "cmp r4, 0",
            "beq 0x8000c64",
            "mov r2, sp",
            "ldr r3, [sp, 0x10]",
            "bic r4, r2, 0x1fc0",
            "bic r4, r4, 0x3f",
            "ldr r1, [r3, 0x10]",
            "ldr r3, [r4, 8]",
            "adds r2, r1, r5",
            "sbcslo r2, r2, r3",
            "movlo r3, 0",
            "cmp r3, 0",
            "beq 0x8000c54",
            "mov r1, r5",
            "bl __memzero",
            "ldr r0, [r8, 0xc]",
            "mov r1, r7",
            "mov r2, r5",
            "mvn sl, 0xd",
            "bl osl_mfree",
            "mov r0, sl",
            "add sp, sp, 0x24",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "movw r3, 0x89f3",
            "cmp sl, r3",
            "beq 0x8000ecc",
            "ble 0x8000be4",
            "movw r3, 0x89f6",
            "cmp sl, r3",
            "beq 0x8000eb8",
            "movw r3, 0x89f9",
            "cmp sl, r3",
            "bne 0x8000b00",
            "mov r4, 1",
            "mov r5, 0x10",
            "str r4, [sp, 0xc]",
            "b 0x8000b10",
            "movw r3, 0x89fe",
            "cmp sl, r3",
            "beq 0x8000ba8",
            "movw r3, 0x89ff",
            "cmp sl, r3",
            "bne 0x8000b00",
            "mov r0, 0",
            "mov r5, 0x10",
            "mov r4, 1",
            "str r0, [sp, 0xc]",
            "b 0x8000b10",
            "movw r3, 0x8946",
            "cmp sl, r3",
            "bne 0x8000b00",
            "mov r2, sp",
            "ldr r3, [sp, 0x10]",
            "bic r4, r2, 0x1fc0",
            "bic r4, r4, 0x3f",
            "ldr r1, [r3, 0x10]",
            "ldr r3, [r4, 8]",
            "adds r2, r1, 4",
            "sbcslo r2, r2, r3",
            "movlo r3, 0",
            "cmp r3, 0",
            "bne 0x8000f18",
            "add r0, sp, 0x1c",
            "mov r2, 4",
            "bl __copy_from_user",
            "cmp r0, 0",
            "bne 0x8001038",
            "ldr r3, [sp, 0x1c]",
            "cmp r3, 3",
            "moveq r4, 1",
            "moveq r5, 0xc4",
            "streq r4, [sp, 0xc]",
            "movne r4, 1",
            "movne r5, 0x2c",
            "strne r4, [sp, 0xc]",
            "b 0x8000b10",
            "mov r2, r5",
            "bl __copy_from_user",
            "cmp r0, 0",
            "bne 0x8000b60",
            "movw r3, 0x89f6",
            "cmp sl, r3",
            "movne fp, 0",
            "beq 0x8000d8c",
            "movw r3, 0x8946",
            "cmp sl, r3",
            "beq 0x8000d30",
            "movw r3, 0x89f6",
            "cmp sl, r3",
            "beq 0x8000f00",
            "ldrb r3, [r6, 0x454]",
            "cmp r3, 0",
            "bne local_bh_disable",
            "bl local_bh_disable",
            "mov r2, sp",
            "bic r4, r2, 0x1fc0",
            "bic r4, r4, 0x3f",
            "ldr r3, [r4, 4]",
            "add r3, r3, 1",
            "str r3, [r4, 4]",
            "sub r1, sl, 0x8900",
            "ldr r0, [r6, 0x300]",
            "sub r1, r1, 0xf0",
            "mov r2, r7",
            "bl etc_ioctl",
            "cmp r0, 0",
            "moveq sl, r0",
            "mvnne sl, 0x15",
            "ldr r3, [r4, 4]",
            "sub r3, r3, 1",
            "str r3, [r4, 4]",
            "bl local_bh_enable",
            "cmp sl, 0",
            "bne 0x8000d1c",
            "ldr r0, [sp, 0xc]",
            "cmp r0, 0",
            "beq 0x8000d1c",
            "ldr r2, [sp, 0x10]",
            "ldr r3, [r4, 8]",
            "ldr r0, [r2, 0x10]",
            "adds r2, r0, r5",
            "sbcslo r2, r2, r3",
            "movlo r3, 0",
            "cmp r3, 0",
            "movne sl, r5",
            "beq 0x8000f54",
            "ldr r0, [r8, 0xc]",
            "mov r1, r7",
            "mov r2, r5",
            "bl osl_mfree",
            "b 0x8000b74",
            "ldrb r3, [r6, 0x454]",
            "cmp r3, 0",
            "bne local_bh_disable",
            "bl local_bh_disable",
            "mov r0, sp",
            "bic r4, r0, 0x1fc0",
            "bic r4, r4, 0x3f",
            "ldr r3, [r4, 4]",
            "add r3, r3, 1",
            "str r3, [r4, 4]",
            "ldr r3, [r7]",
            "cmp r3, 2",
            "beq 0x8000f40",
            "cmp r3, 3",
            "beq 0x8000f2c",
            "cmp r3, 1",
            "mvnne sl, 0x15",
            "bne 0x8000cd4",
            "ldr r0, [r8, 4]",
            "mov r1, r7",
            "bl sym.et_get_settings",
            "mov sl, r0",
            "b 0x8000cd4",
            "ldr r3, [r7, 8]",
            "mov fp, r7",
            "cmp r3, 0",
            "beq 0x8000fac",
            "ldr r1, [r7, 0xc]",
            "ldr r2, [r7, 4]",
            "ldr r0, [sp, 0xc]",
            "sub r3, r1, 1",
            "cmp r2, 0",
            "moveq r0, 1",
            "cmp r3, 0x1fc00",
            "str r0, [sp, 0xc]",
            "bhs 0x8000fbc",
            "ldr r0, [r8, 0xc]",
            "bl osl_malloc",
            "subs r2, r0, 0",
            "str r2, [sp, 0x14]",
            "beq 0x8001000",
            "mov r3, sp",
            "ldr ip, [r7, 8]",
            "bic r4, r3, 0x1fc0",
            "ldr r2, [r7, 0xc]",
            "bic r4, r4, 0x3f",
            "ldr r3, [r4, 8]",
            "adds r1, ip, r2",
            "sbcslo r1, r1, r3",
            "movlo r3, 0",
            "cmp r3, 0",
            "beq 0x8000f68",
            "cmp r2, 0",
            "bne 0x8000f7c",
            "bl local_bh_disable",
            "ldr r3, [r4, 4]",
            "add r3, r3, 1",
            "str r3, [r4, 4]",
            "ldr ip, [fp, 0xc]",
            "ldm fp, {r1, r2}",
            "ldr r0, [r6, 0x300]",
            "ldr r3, [sp, 0x14]",
            "str ip, [sp]",
            "bl etc_iovar",
            "mov sl, r0",
            "ldr r3, [r4, 4]",
            "sub r3, r3, 1",
            "str r3, [r4, 4]",
            "bl local_bh_enable",
            "cmp sl, 0",
            "bne 0x8000e98",
            "ldr r2, [sp, 0xc]",
            "cmp r2, 0",
            "beq 0x8000e98",
            "ldr r0, [fp, 8]",
            "ldr r3, [sp, 0x14]",
            "cmp r3, 0",
            "cmpne r0, 0",
            "beq 0x8000e98",
            "ldr r3, [r4, 8]",
            "ldr sl, [fp, 0xc]",
            "adds r2, r0, sl",
            "sbcslo r2, r2, r3",
            "movlo r3, 0",
            "cmp r3, 0",
            "bne 0x8000e98",
            "mov r2, sl",
            "ldr r1, [sp, 0x14]",
            "bl __copy_to_user",
            "mov sl, r0",
            "ldr r0, [sp, 0x14]",
            "cmp r0, 0",
            "beq 0x8000ce4",
            "ldr r0, [r8, 0xc]",
            "ldr r1, [sp, 0x14]",
            "ldr r2, [fp, 0xc]",
            "bl osl_mfree",
            "b 0x8000ce4",
            "mov r2, 0",
            "mov r5, 0x10",
            "mov r4, 1",
            "str r2, [sp, 0xc]",
            "b 0x8000b10",
            "mov r0, 1",
            "mov r5, 0x4000",
            "mov r4, 0",
            "str r0, [sp, 0xc]",
            "b 0x8000b10",
            "bl local_bh_disable",
            "mov r3, sp",
            "bic r4, r3, 0x1fc0",
            "b 0x8000ca4",
            "bl local_bh_disable",
            "mov r2, sp",
            "bic r4, r2, 0x1fc0",
            "b 0x8000d48",
            "mov r3, sp",
            "mov r0, 0",
            "bic r4, r3, 0x1fc0",
            "str r0, [sp, 0x14]",
            "bic r4, r4, 0x3f",
            "b local_bh_disable",
            "add r0, sp, 0x1c",
            "mov r1, 4",
            "bl __memzero",
            "mvn sl, 0xd",
            "b 0x8000b74",
            "ldr r0, [r8, 4]",
            "mov r1, r7",
            "bl sym.et_get_driver_info",
            "mov sl, 0",
            "b 0x8000cd4",
            "ldr r0, [r8, 4]",
            "mov r1, r7",
            "bl sym.et_set_settings",
            "mov sl, r0",
            "b 0x8000cd4",
            "mov r1, r7",
            "mov r2, r5",
            "bl __copy_to_user",
            "mov sl, r0",
            "b 0x8000d1c",
            "mov r1, ip",
            "bl __copy_from_user",
            "cmp r0, 0",
            "beq local_bh_disable",
            "b 0x8000f84",
            "mov r1, r2",
            "bl __memzero",
            "ldr r0, [r8, 0xc]",
            "mvn sl, 0xd",
            "ldr r1, [sp, 0x14]",
            "ldr r2, [r7, 0xc]",
            "bl osl_mfree",
            "ldr r0, [r8, 0xc]",
            "mov r1, r7",
            "mov r2, r5",
            "bl osl_mfree",
            "b 0x8000b74",
            "ldr r3, [r7, 4]",
            "cmp r3, 0",
            "bne 0x8000c74",
            "b 0x8000b60",
            "ldr r3, [sb]",
            "tst r3, 1",
            "beq 0x8000b60",
            "ldr r0, [0x0800105c]",
            "bl printk",
            "b 0x8000b60",
            "ldr r3, [sb]",
            "tst r3, 1",
            "mvneq sl, 0xb",
            "beq 0x8000b74",
            "ldr r0, [r8, 0xc]",
            "mvn sl, 0xb",
            "bl osl_malloced",
            "mov r1, r0",
            "ldr r0, [0x08001060]",
            "bl printk",
            "b 0x8000b74",
            "ldr r3, [sb]",
            "tst r3, 1",
            "bne 0x8001040",
            "ldr r0, [r8, 0xc]",
            "mov r1, r7",
            "mov r2, r5",
            "mvn sl, 0xb",
            "bl osl_mfree",
            "b 0x8000b74",
            "ldr r3, [r0, 0x300]",
            "ldr r0, [0x08001064]",
            "ldr r1, [r3, 4]",
            "bl printk",
            "b 0x8000ad4",
            "mvn sl, 0xd",
            "b 0x8000b74",
            "ldr r0, [r8, 0xc]",
            "bl osl_malloced",
            "mov r1, r0",
            "ldr r0, [0x08001060]",
            "bl printk",
            "b 0x800100c"
        ]
    },
    "r15": {
        "function_address": "0x08000034",
        "instructions": [
            "mov r2, 0x80",
            "mov r3, r0",
            "str r2, [r1, 8]",
            "mov r2, 0x4f",
            "str r2, [r1, 4]",
            "ldr r2, [r0, 0x300]",
            "ldr ip, [r2, 0x34]",
            "ubfx ip, ip, 5, 1",
            "orr ip, ip, 0x80",
            "str ip, [r1, 8]",
            "ldr r2, [r0, 0x300]",
            "ldr r0, [r2, 0x34]",
            "ands r0, r0, 0x40",
            "movne r0, 2",
            "orr r0, r0, ip",
            "str r0, [r1, 8]",
            "ldr r2, [r3, 0x300]",
            "ldr r2, [r2, 0x34]",
            "ands r2, r2, 0x80",
            "movne r2, 4",
            "orr r2, r2, r0",
            "str r2, [r1, 8]",
            "ldr r0, [r3, 0x300]",
            "ldr ip, [r0, 0x34]",
            "ands ip, ip, 0x100",
            "movne ip, 8",
            "orr ip, ip, r2",
            "str ip, [r1, 8]",
            "ldr r2, [r3, 0x300]",
            "ldr r0, [r2, 0x38]",
            "ands r0, r0, 0x200",
            "movne r0, 0x20",
            "orr r0, r0, ip",
            "str r0, [r1, 8]",
            "ldr r2, [r3, 0x300]",
            "ldr r2, [r2, 0x38]",
            "ands r2, r2, 0x100",
            "movne r2, 0x10",
            "orr r2, r2, r0",
            "str r2, [r1, 8]",
            "ldr r0, [r3, 0x300]",
            "ldr r0, [r0, 0x30]",
            "cmn r0, 1",
            "moveq r0, 0x40",
            "movne r0, 0",
            "orr r2, r0, r2",
            "str r2, [r1, 8]",
            "ldr r0, [r3, 0x300]",
            "ldrb r2, [r0, 0x169]",
            "cmp r2, 0",
            "strheq r2, [r1, 0xc]",
            "strbeq r2, [r1, 0xe]",
            "beq 0x8000138",
            "ldr r2, [r0, 0x40]",
            "cmp r2, 0x3e8",
            "beq 0x800011c",
            "cmp r2, 0x64",
            "movne r2, 0xa",
            "strh r2, [r1, 0xc]",
            "ldr r2, [r3, 0x300]",
            "ldr r2, [r2, 0x44]",
            "cmp r2, 1",
            "movne r2, 0",
            "moveq r2, 1",
            "strb r2, [r1, 0xe]",
            "mov r2, 0",
            "strb r2, [r1, 0xf]",
            "mov r0, r2",
            "strb r2, [r1, 0x10]",
            "strb r2, [r1, 0x11]",
            "ldr r3, [r3, 0x300]",
            "ldr r3, [r3, 0x30]",
            "str r2, [r1, 0x14]",
            "str r2, [r1, 0x18]",
            "cmn r3, 1",
            "movne r3, 0",
            "moveq r3, 1",
            "strb r3, [r1, 0x12]",
            "bx lr"
        ]
    },
    "sym.et_get_driver_info": {
        "function_address": "0x080007f8",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r4, r1",
            "mov r5, r0",
            "mov r1, 0xc4",
            "mov r0, r4",
            "bl __memzero",
            "mov r0, r4",
            "mov r3, 3",
            "str r3, [r0], 4",
            "movw r1, 0",
            "ldr r3, [r5, 0x300]",
            "movt r1, 0",
            "ldr r2, [r3, 4]",
            "bl sprintf",
            "movw r1, 0",
            "add r0, r4, 0x24",
            "movt r1, 0",
            "mov r2, 0x20",
            "bl strncpy",
            "mov r3, 0",
            "strb r3, [r4, 0x43]",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.et_set_settings": {
        "function_address": "0x08000850",
        "instructions": [
            "push {r4, r5, lr}",
            "mov r4, r0",
            "sub sp, sp, 0xc",
            "mov r0, 0xc",
            "mov r5, r1",
            "bl capable",
            "cmp r0, 0",
            "mvneq r0, 0",
            "beq 0x80008f4",
            "ldr r3, [r5, 0xc]",
            "bic r3, r3, 0xff000000",
            "cmp r3, 0xa",
            "moveq r3, 0",
            "streq r3, [sp, 4]",
            "beq 0x80008e4",
            "mov r2, 0xa",
            "movt r2, 1",
            "cmp r3, r2",
            "moveq r3, 1",
            "streq r3, [sp, 4]",
            "beq 0x80008e4",
            "cmp r3, 0x64",
            "moveq r3, 2",
            "streq r3, [sp, 4]",
            "beq 0x80008e4",
            "mov r2, 0x64",
            "movt r2, 1",
            "cmp r3, r2",
            "moveq r3, 3",
            "streq r3, [sp, 4]",
            "beq 0x80008e4",
            "mov r2, 0x3e8",
            "movt r2, 1",
            "cmp r3, r2",
            "moveq r3, 5",
            "streq r3, [sp, 4]",
            "bne 0x80008fc",
            "ldr r0, [r4, 0x300]",
            "mov r1, 7",
            "add r2, sp, 4",
            "bl etc_ioctl",
            "add sp, sp, 0xc",
            "pop {r4, r5, pc}",
            "ldrb r3, [r5, 0x12]",
            "cmp r3, 1",
            "mvnne r0, 0x15",
            "bne 0x80008f4",
            "mvn r3, 0",
            "str r3, [sp, 4]",
            "b 0x80008e4"
        ]
    },
    "sym.et_start": {
        "function_address": "0x0800f4b4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r0",
            "ldr r3, [r0, 0x78]",
            "sub sp, sp, 0xc",
            "mov r6, r1",
            "add r5, r1, 0x300",
            "ands r8, r3, 1",
            "bne 0x800f5f8",
            "ldr r3, [r1, 0x300]",
            "movw r2, 0x82d",
            "ldr r1, [r3, 0x70]",
            "cmp r1, r2",
            "beq 0x800f88c",
            "ldr sl, [0x0800f940]",
            "ldr r2, [sl]",
            "tst r2, 2",
            "bne 0x800f8c4",
            "bl 0x800f4f8",
            "mov r3, sp",
            "bic r7, r3, 0x1fc0",
            "bic r7, r7, 0x3f",
            "ldr r3, [r7, 4]",
            "add r3, r3, 1",
            "str r3, [r7, 4]",
            "ldr r3, [0x0800f944]",
            "ldr r3, [r3, 4]",
            "cmp r3, 0",
            "beq 0x800f534",
            "add r2, r8, 0x16",
            "ldr r2, [r5, r2, lsl 2]",
            "cmp r3, r2",
            "ble 0x800f81c",
            "ldr r3, [r6, 0x300]",
            "ldr r1, [r3, 4]",
            "cmp r1, 2",
            "beq 0x800f6b8",
            "add r1, r8, r8, lsl 1",
            "add r2, r8, 0x16",
            "lsl r1, r1, 2",
            "add r3, r1, 0x28",
            "add r1, r5, r1",
            "add r3, r5, r3",
            "ldr r0, [r3, 4]",
            "str r3, [r4]",
            "str r0, [r4, 4]",
            "str r4, [r0]",
            "str r4, [r3, 4]",
            "ldr r3, [r1, 0x30]",
            "add r3, r3, 1",
            "str r3, [r1, 0x30]",
            "ldr r3, [r4, 0x6c]",
            "ldr r1, [r5, r2, lsl 2]",
            "tst r3, 8",
            "ldrhne r3, [r4, 0xc]",
            "moveq r3, 1",
            "ubfxne r3, r3, 3, 9",
            "add r3, r3, r1",
            "mov r1, 1",
            "str r3, [r5, r2, lsl 2]",
            "ldr r3, [r6, 0x300]",
            "ldr r2, [r3, 0x88]",
            "orr r8, r2, r1, lsl r8",
            "str r8, [r3, 0x88]",
            "ldr r3, [r7, 4]",
            "sub r3, r3, 1",
            "str r3, [r7, 4]",
            "bl 0x800f5bc",
            "ldrb r3, [r6, 0x454]",
            "cmp r3, 0",
            "beq 0x800f6ac",
            "bl 0x800f5cc",
            "ldr r3, [r7, 4]",
            "add r3, r3, 1",
            "str r3, [r7, 4]",
            "mov r0, r5",
            "bl fcn.0800efbc",
            "ldr r3, [r7, 4]",
            "sub r3, r3, 1",
            "str r3, [r7, 4]",
            "bl 0x800f5f0",
            "b 0x800f6a0",
            "bic r3, r3, 1",
            "mov r1, r0",
            "str r3, [r0, 0x78]",
            "ldr r0, [r5, 0xc]",
            "bl 0x800f608",
            "cmp r4, 0",
            "beq 0x800f6a0",
            "ldr r3, [r4, 0x6c]",
            "mov r6, 0",
            "add ip, r4, 8",
            "mov r1, r4",
            "mov r2, 1",
            "ands r0, r3, 8",
            "beq 0x800f674",
            "bic r3, r3, 8",
            "ldr r7, [r4, 8]",
            "str r3, [r4, 0x6c]",
            "str r6, [r4, 8]",
            "ldrb r3, [ip, 4]",
            "bfi r3, r6, 0, 3",
            "strb r3, [ip, 4]",
            "ldr r0, [r5, 0xc]",
            "bl 0x800f650",
            "subs r4, r7, 0",
            "beq 0x800f6a0",
            "ldr r3, [r4, 0x6c]",
            "add ip, r4, 8",
            "mov r1, r4",
            "mov r2, 1",
            "ands r0, r3, 8",
            "bne 0x800f630",
            "add ip, r4, 8",
            "bic r3, r3, 8",
            "str r0, [r4, 8]",
            "mov r1, r4",
            "str r3, [r4, 0x6c]",
            "mov r2, 1",
            "ldrb r3, [ip, 4]",
            "bfi r3, r0, 0, 3",
            "strb r3, [ip, 4]",
            "ldr r0, [r5, 0xc]",
            "bl 0x800f69c",
            "mov r0, 0",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "add r0, r5, 0x12c",
            "bl 0x800f6b0",
            "b 0x800f6a0",
            "ldr r3, [sl]",
            "ands r3, r3, 2",
            "bne 0x800f8fc",
            "ldr r1, [r4, 0xc4]",
            "ldr r2, [r4, 0xc0]",
            "rsb r2, r2, r1",
            "cmp r2, 3",
            "bhi 0x800f79c",
            "cmp r3, 0",
            "bne 0x800f8e8",
            "mov r0, r4",
            "mov r1, 4",
            "bl 0x800f6e8",
            "cmp r4, 0",
            "str r0, [sp, 4]",
            "beq 0x800f784",
            "ldr r3, [r4, 0x6c]",
            "mov sb, 0",
            "add r0, r4, 8",
            "mov r1, r4",
            "mov r2, 1",
            "ands ip, r3, 8",
            "beq 0x800f758",
            "bic r3, r3, 8",
            "ldr fp, [r4, 8]",
            "str r3, [r4, 0x6c]",
            "str sb, [r4, 8]",
            "ldrb r3, [r0, 4]",
            "bfi r3, sb, 0, 3",
            "strb r3, [r0, 4]",
            "ldr r0, [r5, 0xc]",
            "bl 0x800f734",
            "subs r4, fp, 0",
            "beq 0x800f784",
            "ldr r3, [r4, 0x6c]",
            "add r0, r4, 8",
            "mov r1, r4",
            "mov r2, 1",
            "ands ip, r3, 8",
            "bne 0x800f714",
            "add r0, r4, 8",
            "bic r3, r3, 8",
            "str ip, [r4, 8]",
            "mov r1, r4",
            "str r3, [r4, 0x6c]",
            "mov r2, 1",
            "ldrb r3, [r0, 4]",
            "bfi r3, ip, 0, 3",
            "strb r3, [r0, 4]",
            "ldr r0, [r5, 0xc]",
            "bl 0x800f780",
            "ldr r3, [sp, 4]",
            "cmp r3, 0",
            "beq 0x800f8a4",
            "ldr r3, [sl]",
            "ldr r4, [sp, 4]",
            "and r3, r3, 2",
            "cmp r3, 0",
            "bne 0x800f930",
            "ldr r2, [r4, 0xc4]",
            "mov r3, 0",
            "ldr r1, [r4, 0x80]",
            "sub r0, r2, 4",
            "add r1, r1, 4",
            "str r0, [r4, 0xc4]",
            "str r1, [r4, 0x80]",
            "strb r3, [r2, -4]",
            "ldr r2, [r4, 0xc4]",
            "strb r3, [r2, 1]",
            "ldr r2, [r4, 0xc4]",
            "strb r3, [r2, 2]",
            "ldr r2, [r4, 0xc4]",
            "strb r3, [r2, 3]",
            "ldr r1, [r4, 0x80]",
            "cmp r1, 0x43",
            "bhi 0x800f800",
            "ldr r3, [sl]",
            "tst r3, 2",
            "bne 0x800f924",
            "mov r3, 0x44",
            "mov r1, r3",
            "str r3, [r4, 0x80]",
            "ldr r3, [r4, 0x84]",
            "cmp r3, 0",
            "bne 0x800f8d8",
            "ldr r3, [r4, 0xc4]",
            "add r1, r3, r1",
            "str r1, [r4, 0xb8]",
            "b 0x800f544",
            "ldr r3, [r7, 4]",
            "sub r3, r3, 1",
            "str r3, [r7, 4]",
            "bl 0x800f828",
            "ldr r0, [r5, 0xc]",
            "mov r1, r4",
            "bl 0x800f834",
            "cmp r4, 0",
            "beq 0x800f6a0",
            "mov r6, 0",
            "ldr r3, [r4, 0x6c]",
            "add ip, r4, 8",
            "mov r1, r4",
            "mov r2, 1",
            "ands r0, r3, 8",
            "beq 0x800f674",
            "bic r3, r3, 8",
            "ldr r7, [r4, 8]",
            "str r3, [r4, 0x6c]",
            "str r6, [r4, 8]",
            "ldrb r3, [ip, 4]",
            "bfi r3, r6, 0, 3",
            "strb r3, [ip, 4]",
            "ldr r0, [r5, 0xc]",
            "bl 0x800f87c",
            "subs r4, r7, 0",
            "bne 0x800f844",
            "b 0x800f6a0",
            "ldrb r8, [r3, 0x2e]",
            "cmp r8, 0",
            "ldrne r1, [r0, 0x90]",
            "ldrne r2, [0x0800f948]",
            "ldrne r8, [r2, r1, lsl 2]",
            "b 0x800f4e8",
            "ldr r3, [sl]",
            "tst r3, 1",
            "beq 0x800f5e4",
            "ldr r3, [r6, 0x300]",
            "ldr r0, [0x0800f94c]",
            "ldr r1, [r3, 4]",
            "bl 0x800f8bc",
            "b 0x800f5e4",
            "ldr r1, [r3, 4]",
            "ldr r2, [r4, 0x80]",
            "ldr r0, [0x0800f950]",
            "bl 0x800f8d0",
            "b 0x800f4f8",
            "ldr r0, [0x0800f954]",
            "movw r1, 0x5cd",
            "bl 0x800f8e0",
            "b 0x800f544",
            "ldr r3, [r6, 0x300]",
            "ldr r0, [0x0800f958]",
            "ldr r1, [r3, 4]",
            "bl 0x800f8f4",
            "b 0x800f6e0",
            "ldr ip, [r4, 0xc4]",
            "ldr r3, [r4, 0xc0]",
            "ldr r0, [0x0800f95c]",
            "ldr r2, [0x0800f960]",
            "rsb r3, r3, ip",
            "bl 0x800f910",
            "ldr r3, [0x0800f940]",
            "ldr r3, [r3]",
            "and r3, r3, 2",
            "b 0x800f6c4",
            "ldr r0, [0x0800f964]",
            "bl 0x800f928",
            "b 0x800f7f4",
            "movw r1, 0xa25",
            "ldr r0, [0x0800f968]",
            "bl 0x800f938",
            "b 0x800f7a4"
        ]
    },
    "sym.chipphyrd": {
        "function_address": "0x08003fa0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sl, lr}",
            "mov r5, r1",
            "ldr r3, [r0, 4]",
            "sub sp, sp, 0xc",
            "mov r4, r0",
            "mov r7, r2",
            "ldr r1, [r3, 0x94]",
            "ldr r3, [r3, 0x8c]",
            "cmp r1, r3",
            "beq 0x8003fe8",
            "ldr r0, [r0, 0x10]",
            "cmp r0, 0",
            "beq 0x80040d0",
            "mov r1, r5",
            "mov r2, r7",
            "bl et_phyrd",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sl, pc}",
            "ldr sl, [r0, 8]",
            "dsb sy",
            "ldr r6, [0x0800411c]",
            "ldr r3, [r6, 0xc]",
            "cmp r3, 0",
            "beq 0x8004004",
            "blx r3",
            "mov r3, 1",
            "str r3, [sl, 0x41c]",
            "dsb sy",
            "ldr r3, [r6, 0xc]",
            "cmp r3, 0",
            "beq 0x8004020",
            "blx r3",
            "lsl r3, r5, 0x17",
            "add r6, sl, 0x410",
            "mov r8, r6",
            "orr r3, r3, 0x60000000",
            "mov r5, 0x6d",
            "orr r3, r3, 0x20000",
            "add r6, r6, 0xc",
            "orr r3, r3, r7, lsl 18",
            "add r7, sp, 4",
            "str r3, [sl, 0x414]",
            "b 0x8004050",
            "bl osl_delay",
            "ldr r0, [r4, 0xc]",
            "mov r3, 4",
            "mov r1, r6",
            "mov r2, r7",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 4]",
            "mov r0, 0xa",
            "tst r3, 1",
            "bne 0x8004080",
            "cmp r5, 9",
            "sub r5, r5, 0xa",
            "bne osl_delay",
            "mov r3, 4",
            "ldr r0, [r4, 0xc]",
            "mov r1, r6",
            "mov r2, r7",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 4]",
            "tst r3, 1",
            "bne 0x80040b0",
            "ldr r3, [0x08004120]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "bne 0x8004108",
            "ldr r0, [r4, 0xc]",
            "add r1, r8, 4",
            "mov r2, r7",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "ldr r0, [sp, 4]",
            "uxth r0, r0",
            "b 0x8003fe0",
            "ldr r0, [r4]",
            "bl et_phyfind",
            "cmp r0, 0",
            "str r0, [r4, 0x10]",
            "beq 0x8004100",
            "ldr r3, [r4, 4]",
            "mov r0, r4",
            "ldr r1, [r3, 0x90]",
            "bl sym.chipphyreset",
            "ldr r0, [r4, 0x10]",
            "cmp r0, 0",
            "bne 0x8003fd4",
            "movw r0, 0xffff",
            "b 0x8003fe0",
            "ldr r3, [r4, 4]",
            "ldr r0, [0x08004124]",
            "ldr r1, [r3, 4]",
            "bl printk",
            "b 0x80040b0"
        ]
    },
    "sym.chipphyreset": {
        "function_address": "0x08004e0c",
        "instructions": [
            "cmp r1, 0x1e",
            "push {r4, r5, r6, lr}",
            "mov r4, r1",
            "mov r5, r0",
            "popeq {r4, r5, r6, pc}",
            "mov r2, 0",
            "mov r3, 0x8000",
            "bl sym.chipphywr",
            "mov r0, 0x64",
            "bl osl_delay",
            "mov r0, r5",
            "mov r1, r4",
            "mov r2, 0",
            "bl sym.chipphyrd",
            "tst r0, 0x8000",
            "bne 0x8004e5c",
            "mov r0, r5",
            "mov r1, r4",
            "pop {r4, r5, r6, lr}",
            "b fcn.08004d40",
            "ldr r3, [0x08004e80]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "beq 0x8004e4c",
            "ldr r3, [r5, 4]",
            "ldr r0, [0x08004e84]",
            "ldr r1, [r3, 4]",
            "bl printk",
            "b 0x8004e4c"
        ]
    },
    "sym.chipphywr": {
        "function_address": "0x08003dfc",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r5, r0",
            "ldr r0, [r0, 4]",
            "mov r4, r1",
            "mov r8, r3",
            "sub sp, sp, 8",
            "mov sl, r2",
            "ldr r1, [r0, 0x94]",
            "ldr r3, [r0, 0x8c]",
            "cmp r1, r3",
            "beq 0x8003e4c",
            "ldr r0, [r5, 0x10]",
            "cmp r0, 0",
            "beq 0x8003f28",
            "mov r1, r4",
            "mov r2, sl",
            "mov r3, r8",
            "bl et_phywr",
            "add sp, sp, 8",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}",
            "ldr sb, [r5, 8]",
            "dsb sy",
            "ldr r6, [0x08003f40]",
            "ldr r3, [r6, 0xc]",
            "cmp r3, 0",
            "beq 0x8003e68",
            "blx r3",
            "mov r3, 1",
            "str r3, [sb, 0x41c]",
            "dsb sy",
            "ldr r3, [r6, 0xc]",
            "cmp r3, 0",
            "beq 0x8003e84",
            "blx r3",
            "lsl r3, r4, 0x17",
            "add r6, sb, 0x410",
            "mov r4, 0x6d",
            "orr r3, r3, 0x50000000",
            "add r6, r6, 0xc",
            "orr r3, r3, 0x20000",
            "add r7, sp, 4",
            "orr sl, r3, sl, lsl 18",
            "orr r8, sl, r8",
            "str r8, [sb, 0x414]",
            "b 0x8003eb4",
            "bl osl_delay",
            "ldr r0, [r5, 0xc]",
            "mov r3, 4",
            "mov r1, r6",
            "mov r2, r7",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 4]",
            "mov r0, 0xa",
            "tst r3, 1",
            "bne 0x8003ee4",
            "cmp r4, 9",
            "sub r4, r4, 0xa",
            "bne osl_delay",
            "mov r3, 4",
            "ldr r0, [r5, 0xc]",
            "mov r1, r6",
            "mov r2, r7",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 4]",
            "tst r3, 1",
            "bne 0x8003e44",
            "ldr r3, [0x08003f44]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "beq 0x8003e44",
            "ldr r3, [r5, 4]",
            "ldr r0, [0x08003f48]",
            "ldr r1, [r3, 4]",
            "bl printk",
            "b 0x8003e44",
            "ldr r0, [r5]",
            "bl et_phyfind",
            "cmp r0, 0",
            "str r0, [r5, 0x10]",
            "beq 0x8003e44",
            "b 0x8003e34"
        ]
    },
    "sym.chipdump": {
        "function_address": "0x08004c60",
        "instructions": [
            "push {r4, r5, lr}",
            "mov r4, r0",
            "ldr lr, [r4, 0x14]",
            "sub sp, sp, 0xc",
            "mov r5, r1",
            "ldr ip, [r4, 0x18]",
            "ldr r2, [r0, 8]",
            "mov r0, r1",
            "ldr r3, [r4, 0x10]",
            "ldr r1, [0x08004d04]",
            "str lr, [sp]",
            "str ip, [sp, 4]",
            "bl bcm_bprintf",
            "ldr r1, [0x08004d08]",
            "mov r0, r5",
            "bl bcm_bprintf",
            "ldr r0, [r4, 0x1c]",
            "mov r2, 0",
            "mov r1, r5",
            "ldr r3, [r0]",
            "ldr r3, [r3, 0x98]",
            "blx r3",
            "ldr r1, [0x08004d08]",
            "mov r0, r5",
            "bl bcm_bprintf",
            "mov r0, r4",
            "ldr r1, [r4, 8]",
            "mov r2, r5",
            "bl fcn.08004128",
            "mov r0, r5",
            "ldr r1, [0x08004d08]",
            "bl bcm_bprintf",
            "ldr r0, [r4, 0x10c]",
            "cmp r0, 0",
            "beq 0x8004cfc",
            "ldr r1, [r5]",
            "add sp, sp, 0xc",
            "pop {r4, r5, lr}",
            "b adm_dump_regs",
            "add sp, sp, 0xc",
            "pop {r4, r5, pc}"
        ]
    },
    "fcn.08004128": {
        "function_address": "0x08004128",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x3c",
            "ldr ip, [r0, 4]",
            "add r6, sp, 0x34",
            "mov r4, r2",
            "mov r5, r0",
            "mov r7, r1",
            "mov r3, 4",
            "ldr r8, [ip, 0x90]",
            "mov r2, r6",
            "add ip, r1, 0x400",
            "ldr r0, [r0, 0xc]",
            "str ip, [sp, 0x18]",
            "add sl, r7, 0x500",
            "bl osl_pcie_rreg",
            "add r3, r7, 0x420",
            "add ip, r7, 0x430",
            "ldr r2, [sp, 0x34]",
            "mov r0, r4",
            "ldr r1, [0x08004b78]",
            "add sb, r7, 0x530",
            "str r3, [sp, 0x2c]",
            "add r3, r7, 0x510",
            "str ip, [sp, 0x1c]",
            "add fp, r7, 0x540",
            "str r3, [sp, 0x24]",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0xc]",
            "add r1, r7, 0xc",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "add ip, r7, 0x550",
            "add r3, r7, 0x580",
            "ldr r2, [sp, 0x34]",
            "mov r0, r4",
            "ldr r1, [0x08004b7c]",
            "str ip, [sp, 8]",
            "str r3, [sp, 0xc]",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0xc]",
            "add r1, r7, 0x10",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "add ip, r7, 0x590",
            "add r3, r7, 0x5b0",
            "ldr r2, [sp, 0x34]",
            "mov r0, r4",
            "ldr r1, [0x08004b80]",
            "str ip, [sp, 0x28]",
            "add ip, r7, 0x5c0",
            "str r3, [sp, 0x10]",
            "add r3, r7, 0x5d0",
            "str ip, [sp, 0x14]",
            "str r3, [sp, 0x20]",
            "bl bcm_bprintf",
            "ldr r1, [0x08004b84]",
            "mov r0, r4",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0xc]",
            "add r1, r7, 0x20",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x34]",
            "mov r0, r4",
            "ldr r1, [0x08004b88]",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0xc]",
            "add r1, r7, 0x24",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x34]",
            "mov r0, r4",
            "ldr r1, [0x08004b8c]",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0xc]",
            "add r1, r7, 0x28",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x34]",
            "mov r0, r4",
            "ldr r1, [0x08004b90]",
            "bl bcm_bprintf",
            "ldr r1, [0x08004b84]",
            "mov r0, r4",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0xc]",
            "add r1, r7, 0xa0",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x34]",
            "mov r0, r4",
            "ldr r1, [0x08004b94]",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0xc]",
            "add r1, r7, 0xa4",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x34]",
            "mov r0, r4",
            "ldr r1, [0x08004b98]",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0xc]",
            "add r1, r7, 0xa8",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x34]",
            "mov r0, r4",
            "ldr r1, [0x08004b9c]",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0xc]",
            "add r1, r7, 0xac",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x34]",
            "mov r0, r4",
            "ldr r1, [0x08004ba0]",
            "bl bcm_bprintf",
            "ldr r1, [0x08004b84]",
            "mov r0, r4",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0xc]",
            "add r1, r7, 0x100",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x34]",
            "mov r0, r4",
            "ldr r1, [0x08004ba4]",
            "bl bcm_bprintf",
            "ldr r1, [0x08004b84]",
            "mov r0, r4",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0xc]",
            "ldr r1, [sp, 0x18]",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x34]",
            "mov r0, r4",
            "ldr r1, [0x08004ba8]",
            "bl bcm_bprintf",
            "ldr ip, [sp, 0x18]",
            "mov r3, 4",
            "ldr r0, [r5, 0xc]",
            "mov r2, r6",
            "add r1, ip, r3",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x34]",
            "mov r0, r4",
            "ldr r1, [0x08004bac]",
            "bl bcm_bprintf",
            "ldr r2, [sp, 0x18]",
            "mov r3, 4",
            "ldr r0, [r5, 0xc]",
            "add r1, r2, 8",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x34]",
            "mov r0, r4",
            "ldr r1, [0x08004bb0]",
            "bl bcm_bprintf",
            "ldr r1, [0x08004b84]",
            "mov r0, r4",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0xc]",
            "add r1, r7, 0x410",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x34]",
            "mov r0, r4",
            "ldr r1, [0x08004bb4]",
            "bl bcm_bprintf",
            "ldr ip, [sp, 0x2c]",
            "mov r3, 4",
            "ldr r0, [r5, 0xc]",
            "mov r2, r6",
            "add r1, ip, 8",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x34]",
            "mov r0, r4",
            "ldr r1, [0x08004bb8]",
            "bl bcm_bprintf",
            "ldr r2, [sp, 0x2c]",
            "mov r3, 4",
            "ldr r0, [r5, 0xc]",
            "add r1, r2, 0xc",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x34]",
            "mov r0, r4",
            "ldr r1, [0x08004bbc]",
            "bl bcm_bprintf",
            "ldr r1, [0x08004b84]",
            "mov r0, r4",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0xc]",
            "ldr r1, [sp, 0x1c]",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x34]",
            "mov r0, r4",
            "ldr r1, [0x08004bc0]",
            "bl bcm_bprintf",
            "ldr ip, [sp, 0x1c]",
            "mov r3, 4",
            "ldr r0, [r5, 0xc]",
            "mov r2, r6",
            "add r1, ip, r3",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x34]",
            "mov r0, r4",
            "ldr r1, [0x08004bc4]",
            "bl bcm_bprintf",
            "ldr r2, [sp, 0x1c]",
            "mov r3, 4",
            "ldr r0, [r5, 0xc]",
            "add r1, r2, 8",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x34]",
            "mov r0, r4",
            "ldr r1, [0x08004bc8]",
            "bl bcm_bprintf",
            "ldr r1, [0x08004b84]",
            "mov r0, r4",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0xc]",
            "mov r1, sl",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x34]",
            "mov r0, r4",
            "ldr r1, [0x08004bcc]",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0xc]",
            "add r1, sl, r3",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x34]",
            "mov r0, r4",
            "ldr r1, [0x08004bd0]",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0xc]",
            "add r1, sl, 8",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x34]",
            "mov r0, r4",
            "ldr r1, [0x08004bd4]",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0xc]",
            "add r1, sl, 0xc",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x34]",
            "mov r0, r4",
            "ldr r1, [0x08004bd8]",
            "bl bcm_bprintf",
            "ldr r1, [0x08004b84]",
            "mov r0, r4",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0xc]",
            "ldr r1, [sp, 0x24]",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x34]",
            "mov r0, r4",
            "ldr r1, [0x08004bdc]",
            "bl bcm_bprintf",
            "ldr ip, [sp, 0x24]",
            "mov r3, 4",
            "ldr r0, [r5, 0xc]",
            "mov r2, r6",
            "add r1, ip, r3",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x34]",
            "mov r0, r4",
            "ldr r1, [0x08004be0]",
            "bl bcm_bprintf",
            "ldr r1, [0x08004b84]",
            "mov r0, r4",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0xc]",
            "mov r1, sb",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x34]",
            "mov r0, r4",
            "ldr r1, [0x08004be4]",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0xc]",
            "add r1, sb, r3",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x34]",
            "mov r0, r4",
            "ldr r1, [0x08004be8]",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0xc]",
            "add r1, sb, 8",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x34]",
            "mov r0, r4",
            "ldr r1, [0x08004bec]",
            "bl bcm_bprintf",
            "ldr r1, [0x08004b84]",
            "mov r0, r4",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0xc]",
            "add r1, sb, 0xc",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x34]",
            "mov r0, r4",
            "ldr r1, [0x08004bf0]",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0xc]",
            "mov r1, fp",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x34]",
            "mov r0, r4",
            "ldr r1, [0x08004bf4]",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0xc]",
            "add r1, fp, r3",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x34]",
            "mov r0, r4",
            "ldr r1, [0x08004bf8]",
            "bl bcm_bprintf",
            "ldr r1, [0x08004b84]",
            "mov r0, r4",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0xc]",
            "add r1, fp, 8",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x34]",
            "mov r0, r4",
            "ldr r1, [0x08004bfc]",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0xc]",
            "add r1, fp, 0xc",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x34]",
            "mov r0, r4",
            "ldr r1, [0x08004c00]",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0xc]",
            "ldr r1, [sp, 8]",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x34]",
            "mov r0, r4",
            "ldr r1, [0x08004c04]",
            "bl bcm_bprintf",
            "ldr r1, [0x08004b84]",
            "mov r0, r4",
            "bl bcm_bprintf",
            "ldr r2, [sp, 8]",
            "mov r3, 4",
            "ldr r0, [r5, 0xc]",
            "add r1, r2, r3",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x34]",
            "mov r0, r4",
            "ldr r1, [0x08004c08]",
            "bl bcm_bprintf",
            "ldr ip, [sp, 8]",
            "mov r3, 4",
            "ldr r0, [r5, 0xc]",
            "mov r2, r6",
            "add r1, ip, 8",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x34]",
            "mov r0, r4",
            "ldr r1, [0x08004c0c]",
            "bl bcm_bprintf",
            "ldr r2, [sp, 8]",
            "mov r3, 4",
            "ldr r0, [r5, 0xc]",
            "add r1, r2, 0xc",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x34]",
            "mov r0, r4",
            "ldr r1, [0x08004c10]",
            "bl bcm_bprintf",
            "ldr r1, [0x08004b84]",
            "mov r0, r4",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0xc]",
            "ldr r1, [sp, 0xc]",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x34]",
            "mov r0, r4",
            "ldr r1, [0x08004c14]",
            "bl bcm_bprintf",
            "ldr ip, [sp, 0xc]",
            "mov r3, 4",
            "ldr r0, [r5, 0xc]",
            "mov r2, r6",
            "add r1, ip, r3",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x34]",
            "mov r0, r4",
            "ldr r1, [0x08004c18]",
            "bl bcm_bprintf",
            "ldr r2, [sp, 0xc]",
            "mov r3, 4",
            "ldr r0, [r5, 0xc]",
            "add r1, r2, 8",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x34]",
            "mov r0, r4",
            "ldr r1, [0x08004c1c]",
            "bl bcm_bprintf",
            "ldr ip, [sp, 0xc]",
            "mov r3, 4",
            "ldr r0, [r5, 0xc]",
            "mov r2, r6",
            "add r1, ip, 0xc",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x34]",
            "mov r0, r4",
            "ldr r1, [0x08004c20]",
            "bl bcm_bprintf",
            "ldr r1, [0x08004b84]",
            "mov r0, r4",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0xc]",
            "ldr r1, [sp, 0x28]",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x34]",
            "mov r0, r4",
            "ldr r1, [0x08004c24]",
            "bl bcm_bprintf",
            "ldr r2, [sp, 0x28]",
            "mov r3, 4",
            "ldr r0, [r5, 0xc]",
            "add r1, r2, r3",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x34]",
            "mov r0, r4",
            "ldr r1, [0x08004c28]",
            "bl bcm_bprintf",
            "ldr r1, [0x08004b84]",
            "mov r0, r4",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0xc]",
            "ldr r1, [sp, 0x10]",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x34]",
            "mov r0, r4",
            "ldr r1, [0x08004c2c]",
            "bl bcm_bprintf",
            "ldr ip, [sp, 0x10]",
            "mov r3, 4",
            "ldr r0, [r5, 0xc]",
            "mov r2, r6",
            "add r1, ip, r3",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x34]",
            "mov r0, r4",
            "ldr r1, [0x08004c30]",
            "bl bcm_bprintf",
            "ldr r2, [sp, 0x10]",
            "mov r3, 4",
            "ldr r0, [r5, 0xc]",
            "add r1, r2, 8",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x34]",
            "mov r0, r4",
            "ldr r1, [0x08004c34]",
            "bl bcm_bprintf",
            "ldr r1, [0x08004b84]",
            "mov r0, r4",
            "bl bcm_bprintf",
            "ldr ip, [sp, 0x10]",
            "mov r3, 4",
            "ldr r0, [r5, 0xc]",
            "mov r2, r6",
            "add r1, ip, 0xc",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x34]",
            "mov r0, r4",
            "ldr r1, [0x08004c38]",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0xc]",
            "ldr r1, [sp, 0x14]",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x34]",
            "mov r0, r4",
            "ldr r1, [0x08004c3c]",
            "bl bcm_bprintf",
            "ldr r2, [sp, 0x14]",
            "mov r3, 4",
            "ldr r0, [r5, 0xc]",
            "add r1, r2, r3",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x34]",
            "mov r0, r4",
            "ldr r1, [0x08004c40]",
            "bl bcm_bprintf",
            "ldr r1, [0x08004b84]",
            "mov r0, r4",
            "bl bcm_bprintf",
            "ldr ip, [sp, 0x14]",
            "mov r3, 4",
            "ldr r0, [r5, 0xc]",
            "mov r2, r6",
            "add r1, ip, 8",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x34]",
            "mov r0, r4",
            "ldr r1, [0x08004c44]",
            "bl bcm_bprintf",
            "ldr r2, [sp, 0x14]",
            "mov r3, 4",
            "ldr r0, [r5, 0xc]",
            "add r1, r2, 0xc",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x34]",
            "mov r0, r4",
            "ldr r1, [0x08004c48]",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0xc]",
            "ldr r1, [sp, 0x20]",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x34]",
            "mov r0, r4",
            "ldr r1, [0x08004c4c]",
            "bl bcm_bprintf",
            "ldr r1, [0x08004b84]",
            "mov r0, r4",
            "bl bcm_bprintf"
        ]
    },
    "sym.chipinit": {
        "function_address": "0x0800509c",
        "instructions": [
            "ldr r3, [0x080054bc]",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r5, r0",
            "sub sp, sp, 0x14",
            "mov sb, r1",
            "ldr r3, [r3]",
            "ldr r4, [r0, 8]",
            "ldr r7, [r0, 4]",
            "tst r3, 2",
            "bne 0x80054ac",
            "dsb sy",
            "ldr r6, [0x080054c0]",
            "ldr r3, [r6, 0xc]",
            "cmp r3, 0",
            "beq 0x80050dc",
            "blx r3",
            "add r8, sp, 0xc",
            "ldr r0, [r5, 0xc]",
            "add r1, r4, 0xa8",
            "mov r2, r8",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 0xc]",
            "orr r3, r3, 1",
            "str r3, [r4, 0xa8]",
            "dsb sy",
            "ldr r3, [r6, 0xc]",
            "cmp r3, 0",
            "beq 0x8005114",
            "blx r3",
            "mov r3, 0x1000000",
            "str r3, [r4, 0x100]",
            "dsb sy",
            "ldr r3, [r6, 0xc]",
            "cmp r3, 0",
            "beq 0x8005130",
            "blx r3",
            "mov r3, 0x60",
            "str r3, [r4, 0x400]",
            "ldrb r3, [r7, 0x2d]",
            "cmp r3, 0",
            "addne sl, r4, 0x400",
            "beq 0x8005320",
            "dsb sy",
            "ldr r3, [r6, 0xc]",
            "cmp r3, 0",
            "beq 0x800515c",
            "blx r3",
            "mov r2, r8",
            "mov r3, 4",
            "ldr r0, [r5, 0xc]",
            "mov r1, sl",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 0xc]",
            "add r2, r4, 0x420",
            "str r2, [sp, 4]",
            "orr r3, r3, 8",
            "str r3, [r4, 0x400]",
            "ldrb r3, [r7, 0x2f]",
            "cmp r3, 0",
            "beq 0x80051c4",
            "dsb sy",
            "ldr r3, [r6, 0xc]",
            "cmp r3, 0",
            "beq 0x80051a4",
            "blx r3",
            "mov r3, 4",
            "ldr r0, [r5, 0xc]",
            "mov r1, sl",
            "mov r2, r8",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 0xc]",
            "orr r3, r3, 0x10",
            "str r3, [r4, 0x400]",
            "dsb sy",
            "ldr r3, [r6, 0xc]",
            "cmp r3, 0",
            "beq 0x80051d8",
            "blx r3",
            "movw r3, 0x60e",
            "str r3, [r4, 0x404]",
            "dsb sy",
            "ldr r3, [r6, 0xc]",
            "cmp r3, 0",
            "beq 0x80051f4",
            "blx r3",
            "movw r3, 0x60e",
            "str r3, [r4, 0x408]",
            "dsb sy",
            "ldr r3, [r6, 0xc]",
            "cmp r3, 0",
            "beq 0x8005210",
            "blx r3",
            "mov r3, 0x38",
            "str r3, [r4, 0x434]",
            "ldr r3, [r7, 0x30]",
            "cmn r3, 1",
            "beq 0x80053a8",
            "ldr sl, [r7, 0x90]",
            "cmp sl, 0x1e",
            "beq 0x800528c",
            "ldr fp, [r5, 4]",
            "ldr r3, [fp, 0x30]",
            "cmn r3, 1",
            "beq 0x800528c",
            "mov r2, 0",
            "mov r0, r5",
            "mov r1, sl",
            "bl sym.chipphyrd",
            "ldr r2, [fp, 0x30]",
            "movw r3, 0xceff",
            "and r3, r0, r3",
            "cmp r2, 2",
            "orreq r3, r3, 0x2000",
            "beq 0x800527c",
            "cmp r2, 3",
            "orreq r3, r3, 0x2100",
            "beq 0x800527c",
            "cmp r2, 1",
            "orreq r3, r3, 0x100",
            "mov r0, r5",
            "mov r1, sl",
            "mov r2, 0",
            "bl sym.chipphywr",
            "tst sb, 1",
            "beq 0x800530c",
            "ldr r0, [r5, 0x1c]",
            "ldr r3, [r0]",
            "ldr r3, [r3, 4]",
            "blx r3",
            "ldr r0, [r5, 0x1c]",
            "ldr r3, [r0]",
            "ldr r3, [r3, 0x58]",
            "blx r3",
            "ldr r0, [r5, 0x1c]",
            "ldr r3, [r0]",
            "ldr r3, [r3, 0x74]",
            "blx r3",
            "tst sb, 2",
            "bne 0x8005438",
            "dsb sy",
            "ldr r3, [r6, 0xc]",
            "cmp r3, 0",
            "beq 0x80052e0",
            "blx r3",
            "ldr r2, [sp, 4]",
            "mov r3, 4",
            "ldr r0, [r5, 0xc]",
            "add r1, r2, 0xc",
            "mov r2, r8",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 0xc]",
            "orr r3, r3, 1",
            "str r3, [r4, 0x42c]",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r0, [r5, 0x1c]",
            "ldr r3, [r0]",
            "ldr r3, [r3, 0x68]",
            "blx r3",
            "b 0x80052cc",
            "add sl, r4, 0x400",
            "mov r2, r8",
            "ldr r0, [r5, 0xc]",
            "mov r1, sl",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0xc]",
            "ands r2, r2, 0x100",
            "bne 0x8005148",
            "mov r0, r5",
            "add r1, r7, 0x98",
            "bl fcn.08003d04",
            "ldrb r3, [r7, 0x168]",
            "cmp r3, 0",
            "bne 0x8005474",
            "ldr r2, [r7, 0x164]",
            "cmp r2, 0",
            "bne 0x8005444",
            "dsb sy",
            "ldr r3, [r6, 0xc]",
            "cmp r3, 0",
            "beq 0x800537c",
            "blx r3",
            "add r3, r4, 0x420",
            "ldr r0, [r5, 0xc]",
            "str r3, [sp, 4]",
            "add r1, r3, 8",
            "mov r2, r8",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 0xc]",
            "orr r3, r3, 1",
            "str r3, [r4, 0x428]",
            "b 0x8005184",
            "ldr r3, [r7, 0x34]",
            "cmp r3, 0",
            "beq 0x800528c",
            "ldrb r3, [r7, 0x3c]",
            "cmp r3, 0",
            "beq 0x800528c",
            "ldr fp, [r7, 0x90]",
            "cmp fp, 0x1e",
            "beq 0x800528c",
            "ldr sl, [r5, 4]",
            "ldr r3, [sl, 0x30]",
            "cmn r3, 1",
            "bne 0x800528c",
            "ldrb r3, [sl, 0x3c]",
            "cmp r3, 0",
            "beq 0x800528c",
            "mov r1, fp",
            "mov r2, 4",
            "mov r0, r5",
            "bl sym.chipphyrd",
            "ldrh ip, [sl, 0x34]",
            "movw r3, 0xfe1f",
            "and r3, r0, r3",
            "mov r2, 4",
            "mov r0, r5",
            "mov r1, fp",
            "orr r3, r3, ip",
            "bl sym.chipphywr",
            "mov r3, 0x200",
            "mov r0, r5",
            "mov r1, fp",
            "mov r2, 0",
            "bl fcn.08004d0c",
            "mov r3, 0",
            "strb r3, [sl, 0x3c]",
            "b 0x800528c",
            "ldr r0, [r7]",
            "bl et_intrson",
            "b 0x80052cc",
            "add r1, r3, r3, lsl 1",
            "add fp, r3, 1",
            "mov r2, fp",
            "add r1, r7, r1, lsl 1",
            "mov r0, r5",
            "add r1, r1, 0xa4",
            "bl fcn.08003d04",
            "ldr r2, [r7, 0x164]",
            "mov r3, fp",
            "cmp r2, fp",
            "bhi 0x8005444",
            "b 0x8005368",
            "dsb sy",
            "ldr r3, [r6, 0xc]",
            "cmp r3, 0",
            "beq 0x8005488",
            "blx r3",
            "mov r3, 4",
            "ldr r0, [r5, 0xc]",
            "mov r1, sl",
            "mov r2, r8",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 0xc]",
            "orr r3, r3, 2",
            "str r3, [r4, 0x400]",
            "b 0x8005368",
            "ldr r1, [r7, 4]",
            "ldr r0, [0x080054c4]",
            "bl printk",
            "b 0x80050c4"
        ]
    },
    "fcn.08003d04": {
        "function_address": "0x08003d04",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r4, r1",
            "ldrb r3, [r1, 3]",
            "mov r7, r2",
            "sub sp, sp, 8",
            "mov r5, r0",
            "ldrb r1, [r1, 2]",
            "ldrb r2, [r4, 5]",
            "lsl r3, r3, 0x10",
            "ldrb r8, [r4, 4]",
            "orr r3, r3, r1, lsl 24",
            "orr r3, r3, r2",
            "orr r8, r3, r8, lsl 8",
            "dsb sy",
            "ldr r6, [0x08003df8]",
            "ldr r3, [r6, 0xc]",
            "cmp r3, 0",
            "beq 0x8003d50",
            "blx r3",
            "ldr r3, [r5, 8]",
            "str r8, [r3, 0x420]",
            "ldrb r3, [r4, 1]",
            "ldrb r4, [r4]",
            "orr r3, r3, 0x10000",
            "orr r4, r3, r4, lsl 8",
            "dsb sy",
            "ldr r3, [r6, 0xc]",
            "cmp r3, 0",
            "beq 0x8003d7c",
            "blx r3",
            "ldr r3, [r5, 8]",
            "str r4, [r3, 0x424]",
            "dsb sy",
            "ldr r3, [r6, 0xc]",
            "cmp r3, 0",
            "beq 0x8003d98",
            "blx r3",
            "ldr r3, [r5, 8]",
            "lsl r7, r7, 0x10",
            "movw r4, 0x3f1",
            "orr r7, r7, 8",
            "add r6, sp, 4",
            "str r7, [r3, 0x428]",
            "b 0x8003dc4",
            "cmp r4, 9",
            "sub r4, r4, 0xa",
            "beq 0x8003df0",
            "bl osl_delay",
            "ldr r1, [r5, 8]",
            "mov r3, 4",
            "ldr r0, [r5, 0xc]",
            "mov r2, r6",
            "add r1, r1, 0x420",
            "add r1, r1, 8",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 4]",
            "mov r0, 0xa",
            "cmp r3, 0",
            "blt 0x8003db4",
            "add sp, sp, 8",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.08004d0c": {
        "function_address": "0x08004d0c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r7, r3",
            "mov r5, r0",
            "mov r6, r1",
            "mov r4, r2",
            "bl sym.chipphyrd",
            "orr r3, r0, r7",
            "mov r1, r6",
            "mov r0, r5",
            "mov r2, r4",
            "uxth r3, r3",
            "pop {r4, r5, r6, r7, r8, lr}",
            "b sym.chipphywr"
        ]
    },
    "sym.chipreset": {
        "function_address": "0x080054c8",
        "instructions": [
            "movw r2, 0",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "movt r2, 0",
            "sub sp, sp, 0x1c",
            "mov r4, r0",
            "ldr r3, [r2]",
            "tst r3, 2",
            "bne case.0x8002d54.5",
            "ldr r0, [r4, 0x100]",
            "ldr r6, [r4, 8]",
            "bl si_iscoreup",
            "cmp r0, 0",
            "bne 0x80059d0",
            "ldr r3, [r4, 4]",
            "ldrb r3, [r3, 0x78]",
            "cmp r3, 0",
            "beq 0x8005ac0",
            "ldr r3, [case.0x8002d54.7]",
            "mov r1, 0",
            "ldr r0, [r4, 0x100]",
            "mov r2, r1",
            "str r3, [sp, 8]",
            "bl si_core_reset",
            "dsb sy",
            "ldr r2, [sp, 8]",
            "ldr r3, [r2, 0xc]",
            "cmp r3, 0",
            "beq 0x800553c",
            "blx r3",
            "add r5, sp, 0x14",
            "add r7, r6, 0x510",
            "mov r3, 1",
            "mov r1, r7",
            "str r3, [r6, 0x438]",
            "mov r2, r5",
            "ldr r0, [r4, 0xc]",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "ldr r0, [r4, 0xc]",
            "add r1, r7, 4",
            "mov r2, r5",
            "mov r3, 4",
            "ldr ip, [sp, 0x14]",
            "add r8, r6, 0x520",
            "bl osl_pcie_rreg",
            "ldr r0, [r4, 0xc]",
            "add r1, r7, 8",
            "mov r2, r5",
            "ldr ip, [sp, 0x14]",
            "mov r3, 4",
            "add ip, r6, 0x530",
            "str ip, [sp]",
            "add sl, r6, 0x540",
            "bl osl_pcie_rreg",
            "ldr r0, [r4, 0xc]",
            "add r1, r7, 0xc",
            "mov r2, r5",
            "mov r3, 4",
            "ldr ip, [sp, 0x14]",
            "add sb, r6, 0x550",
            "bl osl_pcie_rreg",
            "ldr r0, [r4, 0xc]",
            "mov r1, r8",
            "mov r2, r5",
            "mov r3, 4",
            "ldr ip, [sp, 0x14]",
            "add fp, r6, 0x590",
            "bl osl_pcie_rreg",
            "ldr r0, [r4, 0xc]",
            "add r1, r8, 4",
            "mov r2, r5",
            "mov r3, 4",
            "ldr ip, [sp, 0x14]",
            "add r7, r6, 0x5b0",
            "bl osl_pcie_rreg",
            "ldr r0, [r4, 0xc]",
            "add r1, r8, 8",
            "mov r2, r5",
            "ldr ip, [sp, 0x14]",
            "mov r3, 4",
            "add ip, r6, 0x5a0",
            "str ip, [sp, 4]",
            "bl osl_pcie_rreg",
            "ldr r0, [r4, 0xc]",
            "add r1, r8, 0xc",
            "mov r2, r5",
            "mov r3, 4",
            "ldr ip, [sp, 0x14]",
            "add r8, r6, 0x5c0",
            "bl osl_pcie_rreg",
            "ldr r0, [r4, 0xc]",
            "mov r2, r5",
            "ldr r1, [sp]",
            "mov r3, 4",
            "ldr ip, [sp, 0x14]",
            "bl osl_pcie_rreg",
            "ldr r2, [sp]",
            "mov r3, 4",
            "ldr r0, [r4, 0xc]",
            "ldr ip, [sp, 0x14]",
            "add ip, r6, 0x5d0",
            "add r1, r2, 4",
            "mov r2, r5",
            "str ip, [sp, 0xc]",
            "bl osl_pcie_rreg",
            "ldr r2, [sp]",
            "mov r3, 4",
            "ldr r0, [r4, 0xc]",
            "ldr ip, [sp, 0x14]",
            "add r1, r2, 8",
            "mov r2, r5",
            "bl osl_pcie_rreg",
            "ldr r3, [sp]",
            "mov r2, r5",
            "ldr r0, [r4, 0xc]",
            "ldr ip, [sp, 0x14]",
            "add r1, r3, 0xc",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "ldr r0, [r4, 0xc]",
            "mov r1, sl",
            "mov r2, r5",
            "mov r3, 4",
            "ldr ip, [sp, 0x14]",
            "bl osl_pcie_rreg",
            "ldr r0, [r4, 0xc]",
            "add r1, sl, 4",
            "mov r2, r5",
            "mov r3, 4",
            "ldr ip, [sp, 0x14]",
            "bl osl_pcie_rreg",
            "ldr r0, [r4, 0xc]",
            "add r1, sl, 8",
            "mov r2, r5",
            "mov r3, 4",
            "ldr ip, [sp, 0x14]",
            "bl osl_pcie_rreg",
            "ldr r0, [r4, 0xc]",
            "add r1, sl, 0xc",
            "mov r2, r5",
            "mov r3, 4",
            "ldr ip, [sp, 0x14]",
            "bl osl_pcie_rreg",
            "ldr r0, [r4, 0xc]",
            "mov r1, sb",
            "mov r2, r5",
            "mov r3, 4",
            "ldr ip, [sp, 0x14]",
            "bl osl_pcie_rreg",
            "ldr r0, [r4, 0xc]",
            "add r1, sb, 4",
            "mov r2, r5",
            "mov r3, 4",
            "ldr ip, [sp, 0x14]",
            "bl osl_pcie_rreg",
            "ldr r0, [r4, 0xc]",
            "add r1, sb, 8",
            "mov r2, r5",
            "mov r3, 4",
            "ldr ip, [sp, 0x14]",
            "bl osl_pcie_rreg",
            "ldr r0, [r4, 0xc]",
            "add r1, sb, 0xc",
            "mov r2, r5",
            "mov r3, 4",
            "ldr ip, [sp, 0x14]",
            "bl osl_pcie_rreg",
            "ldr r0, [r4, 0xc]",
            "mov r1, fp",
            "mov r2, r5",
            "mov r3, 4",
            "ldr ip, [sp, 0x14]",
            "bl osl_pcie_rreg",
            "ldr r0, [r4, 0xc]",
            "add r1, fp, 4",
            "mov r2, r5",
            "mov r3, 4",
            "ldr ip, [sp, 0x14]",
            "bl osl_pcie_rreg",
            "ldr r0, [r4, 0xc]",
            "add r1, fp, 8",
            "mov r2, r5",
            "mov r3, 4",
            "ldr ip, [sp, 0x14]",
            "bl osl_pcie_rreg",
            "ldr r0, [r4, 0xc]",
            "add r1, fp, 0xc",
            "mov r2, r5",
            "mov r3, 4",
            "ldr ip, [sp, 0x14]",
            "bl osl_pcie_rreg",
            "ldr r0, [r4, 0xc]",
            "mov r2, r5",
            "ldr r1, [sp, 4]",
            "mov r3, 4",
            "ldr ip, [sp, 0x14]",
            "bl osl_pcie_rreg",
            "ldr ip, [sp, 4]",
            "mov r2, r5",
            "ldr r0, [r4, 0xc]",
            "mov r3, 4",
            "add r1, ip, 4",
            "ldr ip, [sp, 0x14]",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 4]",
            "mov r3, 4",
            "ldr r0, [r4, 0xc]",
            "ldr ip, [sp, 0x14]",
            "add r1, r2, 8",
            "mov r2, r5",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 4]",
            "mov r2, r5",
            "ldr r0, [r4, 0xc]",
            "ldr ip, [sp, 0x14]",
            "add r1, r3, 0xc",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "ldr r0, [r4, 0xc]",
            "mov r1, r7",
            "mov r2, r5",
            "mov r3, 4",
            "ldr ip, [sp, 0x14]",
            "bl osl_pcie_rreg",
            "ldr r0, [r4, 0xc]",
            "add r1, r7, 4",
            "mov r2, r5",
            "mov r3, 4",
            "ldr ip, [sp, 0x14]",
            "bl osl_pcie_rreg",
            "ldr r0, [r4, 0xc]",
            "add r1, r7, 8",
            "mov r2, r5",
            "mov r3, 4",
            "ldr ip, [sp, 0x14]",
            "bl osl_pcie_rreg",
            "ldr r0, [r4, 0xc]",
            "add r1, r7, 0xc",
            "mov r2, r5",
            "mov r3, 4",
            "ldr ip, [sp, 0x14]",
            "bl osl_pcie_rreg",
            "ldr r0, [r4, 0xc]",
            "mov r1, r8",
            "mov r2, r5",
            "mov r3, 4",
            "ldr ip, [sp, 0x14]",
            "bl osl_pcie_rreg",
            "ldr r0, [r4, 0xc]",
            "add r1, r8, 4",
            "mov r2, r5",
            "mov r3, 4",
            "ldr ip, [sp, 0x14]",
            "bl osl_pcie_rreg",
            "ldr r0, [r4, 0xc]",
            "add r1, r8, 8",
            "mov r2, r5",
            "mov r3, 4",
            "ldr ip, [sp, 0x14]",
            "bl osl_pcie_rreg",
            "ldr r0, [r4, 0xc]",
            "add r1, r8, 0xc",
            "mov r2, r5",
            "mov r3, 4",
            "ldr ip, [sp, 0x14]",
            "bl osl_pcie_rreg",
            "ldr r0, [r4, 0xc]",
            "mov r2, r5",
            "ldr r1, [sp, 0xc]",
            "mov r3, 4",
            "ldr ip, [sp, 0x14]",
            "bl osl_pcie_rreg",
            "ldr ip, [sp, 0xc]",
            "mov r2, r5",
            "ldr r0, [r4, 0xc]",
            "mov r3, 4",
            "add r1, ip, 4",
            "ldr ip, [sp, 0x14]",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0xc]",
            "mov r3, 4",
            "ldr r0, [r4, 0xc]",
            "ldr ip, [sp, 0x14]",
            "add r1, r2, 8",
            "mov r2, r5",
            "bl osl_pcie_rreg",
            "mov r3, 1",
            "strb r3, [r4, 0x20]",
            "ldr r3, [sp, 0x14]",
            "dsb sy",
            "ldr ip, [sp, 8]",
            "ldr r3, [ip, 0xc]",
            "cmp r3, 0",
            "beq 0x8005964",
            "blx r3",
            "mov r3, 0x94",
            "str r3, [r6, 0x410]",
            "ldr r3, [r4, 4]",
            "ldrh r2, [r3, 0x62]",
            "movw r3, 0x4713",
            "cmp r2, r3",
            "beq 0x8005af8",
            "mov r3, 4",
            "ldr r0, [r4, 0xc]",
            "mov r1, r6",
            "mov r2, r5",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 0x14]",
            "tst r3, 0x400",
            "bne 0x8005a4c",
            "dsb sy",
            "ldr ip, [sp, 8]",
            "ldr r3, [ip, 0xc]",
            "cmp r3, 0",
            "beq 0x80059b8",
            "blx r3",
            "mov r3, 8",
            "str r3, [r6, 0x42c]",
            "mov r3, 0",
            "str r3, [r4, 0x14]",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldrb r3, [r4, 0x20]",
            "cmp r3, 0",
            "bne case.0x8002d54.1",
            "ldr r0, [r4, 0x1c]",
            "cmp r0, 0",
            "beq 0x80059f4",
            "ldr r3, [r0]",
            "ldr r3, [r3, 8]",
            "blx r3",
            "dsb sy",
            "ldr ip, [case.0x8002d54.7]",
            "ldr r3, [ip, 0xc]",
            "str ip, [sp, 8]",
            "cmp r3, 0",
            "beq 0x8005a10",
            "blx r3",
            "mov r3, 0x10",
            "mov r0, 1",
            "str r3, [r6, 0x400]",
            "bl osl_delay",
            "ldr r0, [r4, 0x1c]",
            "cmp r0, 0",
            "beq 0x8005a38",
            "ldr r3, [r0]",
            "ldr r3, [r3, 0x5c]",
            "blx r3",
            "mov r1, 0",
            "ldr r0, [r4, 0x100]",
            "mov r2, r1",
            "bl si_core_reset",
            "b 0x8005524",
            "mov r3, 4",
            "ldr r0, [r4, 0xc]",
            "mov r1, r6",
            "mov r2, r5",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 0x14]",
            "tst r3, 0x8000",
            "beq 0x80059c0",
            "dsb sy",
            "ldr r2, [sp, 8]",
            "ldr r3, [r2, 0xc]",
            "cmp r3, 0",
            "beq 0x8005a84",
            "blx r3",
            "mov r1, r6",
            "ldr r0, [r4, 0xc]",
            "mov r2, r5",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 0x14]",
            "mov r0, 0x64",
            "bic r3, r3, 0x8000",
            "str r3, [r6]",
            "bl osl_delay",
            "ldr r3, [r4, 4]",
            "mov r0, r4",
            "ldr r1, [r3, 0x90]",
            "bl fcn.08004d40",
            "b 0x80059c0",
            "ldr r5, [r4, 0x100]",
            "mov r0, r5",
            "bl si_coreidx",
            "mov r1, 1",
            "lsl r1, r1, r0",
            "mov r0, r5",
            "bl si_pci_setup",
            "b 0x800550c",
            "mov r0, r4",
            "bl sym.chipstatsupd",
            "ldr r0, [r4, 0x1c]",
            "cmp r0, 0",
            "bne 0x80059e8",
            "b 0x80059f4",
            "ldr r0, [r4, 0x100]",
            "bl si_clock",
            "cmp r0, 0",
            "beq et_msg_level",
            "movw r3, 0x25a0",
            "movw r7, 0xca6b",
            "movt r3, 0x26",
            "movt r7, 0x6b5f",
            "add r3, r0, r3",
            "umull r2, r7, r7, r3",
            "lsr r7, r7, 0x15",
            "orr r7, r7, 0x80",
            "dsb sy",
            "ldr ip, [sp, 8]",
            "ldr r3, [ip, 0xc]",
            "cmp r3, 0",
            "beq 0x8005b40",
            "blx r3",
            "str r7, [r6, 0x410]",
            "b 0x8005980",
            "movw r2, 0",
            "movt r2, 0",
            "ldr r3, [r2]",
            "tst r3, 1",
            "beq 0x8005980",
            "ldr r3, [r4, 4]",
            "ldr r0, [0x08005b88]",
            "ldr r1, [r3, 4]",
            "bl printk",
            "b 0x8005980",
            "ldr r3, [r0, 4]",
            "ldr r0, [0x08005b8c]",
            "ldr r1, [r3, 4]",
            "bl printk",
            "b 0x80054e8"
        ]
    },
    "fcn.08004d40": {
        "function_address": "0x08004d40",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r2, 0x1a",
            "mov r4, r0",
            "mov r5, r1",
            "bl sym.chipphyrd",
            "lsl r3, r0, 0x11",
            "mov r2, 0x1a",
            "mov r0, r4",
            "lsr r3, r3, 0x11",
            "mov r1, r5",
            "bl sym.chipphywr",
            "mov r3, 0x40",
            "mov r0, r4",
            "mov r1, r5",
            "mov r2, 0x1b",
            "bl fcn.08004d0c",
            "mov r1, r5",
            "mov r2, 2",
            "mov r0, r4",
            "bl sym.chipphyrd",
            "mov r1, r5",
            "mov r6, r0",
            "mov r2, 3",
            "mov r0, r4",
            "bl sym.chipphyrd",
            "mov r3, 0x22",
            "orr r0, r6, r0, lsl 16",
            "movt r3, 0x5521",
            "cmp r0, r3",
            "popne {r4, r5, r6, pc}",
            "mov r1, r5",
            "mov r2, 0x1e",
            "mov r0, r4",
            "bl sym.chipphyrd",
            "orr r3, r0, 0x3000",
            "mov r1, r5",
            "uxth r3, r3",
            "mov r0, r4",
            "mov r2, 0x1e",
            "bl sym.chipphywr",
            "mov r1, r5",
            "mov r0, r4",
            "mov r2, 0x16",
            "bl sym.chipphyrd",
            "movw r3, 0xffdf",
            "mov r1, r5",
            "and r3, r0, r3",
            "mov r2, 0x16",
            "mov r0, r4",
            "pop {r4, r5, r6, lr}",
            "b sym.chipphywr"
        ]
    },
    "sym.chipstatsupd": {
        "function_address": "0x080035e8",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x2c",
            "ldr r7, [r0, 8]",
            "add r5, sp, 0x24",
            "mov r4, r0",
            "mov r2, r5",
            "ldr r0, [r0, 0xc]",
            "mov r3, 4",
            "add r8, r7, 0x510",
            "ldr r6, [r4, 4]",
            "mov r1, r8",
            "ldr fp, [r4, 0x34]",
            "bl osl_pcie_rreg",
            "ldr ip, [sp, 0x24]",
            "add lr, r7, 0x540",
            "add r1, r8, 4",
            "ldr r0, [r4, 0xc]",
            "mov r2, r5",
            "mov r3, 4",
            "add ip, ip, fp",
            "str lr, [sp, 4]",
            "str ip, [r4, 0x34]",
            "add lr, r7, 0x590",
            "add ip, r7, 0x550",
            "ldr fp, [r4, 0x38]",
            "str ip, [sp, 8]",
            "add sl, r7, 0x520",
            "str lr, [sp, 0xc]",
            "add sb, r7, 0x530",
            "bl osl_pcie_rreg",
            "ldr ip, [sp, 0x24]",
            "add lr, r7, 0x5a0",
            "add r1, r8, 8",
            "ldr r0, [r4, 0xc]",
            "mov r2, r5",
            "mov r3, 4",
            "add ip, ip, fp",
            "str lr, [sp, 0x10]",
            "str ip, [r4, 0x38]",
            "add lr, r7, 0x5b0",
            "add ip, r7, 0x5c0",
            "add r7, r7, 0x5d0",
            "str lr, [sp, 0x14]",
            "ldr fp, [r4, 0x3c]",
            "str ip, [sp, 0x18]",
            "str r7, [sp, 0x1c]",
            "bl osl_pcie_rreg",
            "ldr ip, [sp, 0x24]",
            "add r1, r8, 0xc",
            "ldr r0, [r4, 0xc]",
            "mov r2, r5",
            "mov r3, 4",
            "add ip, ip, fp",
            "str ip, [r4, 0x3c]",
            "ldr r7, [r4, 0x40]",
            "bl osl_pcie_rreg",
            "ldr ip, [sp, 0x24]",
            "mov r2, r5",
            "ldr r0, [r4, 0xc]",
            "mov r1, sl",
            "mov r3, 4",
            "add ip, ip, r7",
            "str ip, [r4, 0x40]",
            "ldr r7, [r4, 0x44]",
            "bl osl_pcie_rreg",
            "ldr ip, [sp, 0x24]",
            "mov r2, r5",
            "ldr r0, [r4, 0xc]",
            "add r1, sl, 4",
            "mov r3, 4",
            "add ip, ip, r7",
            "str ip, [r4, 0x44]",
            "ldr r7, [r4, 0x48]",
            "bl osl_pcie_rreg",
            "ldr ip, [sp, 0x24]",
            "mov r2, r5",
            "ldr r0, [r4, 0xc]",
            "add r1, sl, 8",
            "mov r3, 4",
            "add ip, ip, r7",
            "str ip, [r4, 0x48]",
            "ldr r7, [r4, 0x4c]",
            "bl osl_pcie_rreg",
            "ldr ip, [sp, 0x24]",
            "mov r2, r5",
            "ldr r0, [r4, 0xc]",
            "add r1, sl, 0xc",
            "mov r3, 4",
            "add ip, ip, r7",
            "str ip, [r4, 0x4c]",
            "ldr r7, [r4, 0x50]",
            "bl osl_pcie_rreg",
            "ldr ip, [sp, 0x24]",
            "mov r2, r5",
            "ldr r0, [r4, 0xc]",
            "mov r1, sb",
            "mov r3, 4",
            "add r7, ip, r7",
            "str r7, [r4, 0x50]",
            "ldr r7, [r4, 0x54]",
            "bl osl_pcie_rreg",
            "ldr ip, [sp, 0x24]",
            "mov r2, r5",
            "ldr r0, [r4, 0xc]",
            "add r1, sb, 4",
            "mov r3, 4",
            "add r7, ip, r7",
            "str r7, [r4, 0x54]",
            "ldr r7, [r4, 0x58]",
            "bl osl_pcie_rreg",
            "ldr ip, [sp, 0x24]",
            "mov r2, r5",
            "ldr r0, [r4, 0xc]",
            "add r1, sb, 8",
            "mov r3, 4",
            "add r7, ip, r7",
            "str r7, [r4, 0x58]",
            "ldr r7, [r4, 0x5c]",
            "bl osl_pcie_rreg",
            "ldr ip, [sp, 0x24]",
            "mov r2, r5",
            "ldr r0, [r4, 0xc]",
            "add r1, sb, 0xc",
            "mov r3, 4",
            "add r7, ip, r7",
            "str r7, [r4, 0x5c]",
            "ldr r7, [r4, 0x60]",
            "bl osl_pcie_rreg",
            "ldr ip, [sp, 0x24]",
            "mov r2, r5",
            "ldr r0, [r4, 0xc]",
            "mov r3, 4",
            "ldr r1, [sp, 4]",
            "add r7, ip, r7",
            "str r7, [r4, 0x60]",
            "ldr r7, [r4, 0x64]",
            "bl osl_pcie_rreg",
            "ldr ip, [sp, 0x24]",
            "mov r2, r5",
            "ldr lr, [sp, 4]",
            "mov r3, 4",
            "ldr r0, [r4, 0xc]",
            "add r7, ip, r7",
            "add r1, lr, 4",
            "str r7, [r4, 0x64]",
            "ldr r7, [r4, 0x68]",
            "bl osl_pcie_rreg",
            "ldr ip, [sp, 0x24]",
            "mov r2, r5",
            "ldr r3, [sp, 4]",
            "ldr r0, [r4, 0xc]",
            "add r7, ip, r7",
            "add r1, r3, 8",
            "str r7, [r4, 0x68]",
            "mov r3, 4",
            "ldr r7, [r4, 0x6c]",
            "bl osl_pcie_rreg",
            "ldr ip, [sp, 0x24]",
            "mov r2, r5",
            "ldr lr, [sp, 4]",
            "mov r3, 4",
            "ldr r0, [r4, 0xc]",
            "add r7, ip, r7",
            "add r1, lr, 0xc",
            "str r7, [r4, 0x6c]",
            "ldr r7, [r4, 0x70]",
            "bl osl_pcie_rreg",
            "ldr ip, [sp, 0x24]",
            "mov r2, r5",
            "ldr r0, [r4, 0xc]",
            "mov r3, 4",
            "ldr r1, [sp, 8]",
            "add r7, ip, r7",
            "str r7, [r4, 0x70]",
            "ldr r7, [r4, 0x74]",
            "bl osl_pcie_rreg",
            "ldr ip, [sp, 0x24]",
            "mov r2, r5",
            "ldr r3, [sp, 8]",
            "ldr r0, [r4, 0xc]",
            "add r7, ip, r7",
            "add r1, r3, 4",
            "str r7, [r4, 0x74]",
            "mov r3, 4",
            "ldr r7, [r4, 0x78]",
            "bl osl_pcie_rreg",
            "ldr ip, [sp, 0x24]",
            "mov r2, r5",
            "ldr lr, [sp, 8]",
            "mov r3, 4",
            "ldr r0, [r4, 0xc]",
            "add r7, ip, r7",
            "add r1, lr, 8",
            "str r7, [r4, 0x78]",
            "ldr r7, [r4, 0x7c]",
            "bl osl_pcie_rreg",
            "ldr ip, [sp, 0x24]",
            "mov r2, r5",
            "ldr r3, [sp, 8]",
            "ldr r0, [r4, 0xc]",
            "add r7, ip, r7",
            "add r1, r3, 0xc",
            "str r7, [r4, 0x7c]",
            "mov r3, 4",
            "ldr r7, [r4, 0x80]",
            "bl osl_pcie_rreg",
            "ldr ip, [sp, 0x24]",
            "mov r2, r5",
            "ldr r0, [r4, 0xc]",
            "mov r3, 4",
            "ldr r1, [sp, 0xc]",
            "add r7, ip, r7",
            "str r7, [r4, 0x80]",
            "ldr r7, [r4, 0xb4]",
            "bl osl_pcie_rreg",
            "ldr ip, [sp, 0x24]",
            "mov r2, r5",
            "ldr lr, [sp, 0xc]",
            "mov r3, 4",
            "ldr r0, [r4, 0xc]",
            "add r7, ip, r7",
            "add r1, lr, 4",
            "str r7, [r4, 0xb4]",
            "ldr r7, [r4, 0xb8]",
            "bl osl_pcie_rreg",
            "ldr ip, [sp, 0x24]",
            "mov r2, r5",
            "ldr r3, [sp, 0xc]",
            "ldr r0, [r4, 0xc]",
            "add r7, ip, r7",
            "add r1, r3, 8",
            "str r7, [r4, 0xb8]",
            "mov r3, 4",
            "ldr r7, [r4, 0xbc]",
            "bl osl_pcie_rreg",
            "ldr ip, [sp, 0x24]",
            "mov r2, r5",
            "ldr lr, [sp, 0xc]",
            "mov r3, 4",
            "ldr r0, [r4, 0xc]",
            "add r7, ip, r7",
            "add r1, lr, 0xc",
            "str r7, [r4, 0xbc]",
            "ldr r7, [r4, 0xc0]",
            "bl osl_pcie_rreg",
            "ldr ip, [sp, 0x24]",
            "mov r2, r5",
            "ldr r0, [r4, 0xc]",
            "mov r3, 4",
            "ldr r1, [sp, 0x10]",
            "add r7, ip, r7",
            "str r7, [r4, 0xc0]",
            "ldr r7, [r4, 0xc4]",
            "bl osl_pcie_rreg",
            "ldr ip, [sp, 0x24]",
            "mov r2, r5",
            "ldr r3, [sp, 0x10]",
            "ldr r0, [r4, 0xc]",
            "add r7, ip, r7",
            "add r1, r3, 4",
            "str r7, [r4, 0xc4]",
            "mov r3, 4",
            "ldr r7, [r4, 0xc8]",
            "bl osl_pcie_rreg",
            "ldr ip, [sp, 0x24]",
            "mov r2, r5",
            "ldr lr, [sp, 0x10]",
            "mov r3, 4",
            "ldr r0, [r4, 0xc]",
            "add r7, ip, r7",
            "add r1, lr, 8",
            "str r7, [r4, 0xc8]",
            "ldr r7, [r4, 0xcc]",
            "bl osl_pcie_rreg",
            "ldr ip, [sp, 0x24]",
            "mov r2, r5",
            "ldr r3, [sp, 0x10]",
            "ldr r0, [r4, 0xc]",
            "add r7, ip, r7",
            "add r1, r3, 0xc",
            "str r7, [r4, 0xcc]",
            "mov r3, 4",
            "ldr r7, [r4, 0xd0]",
            "bl osl_pcie_rreg",
            "ldr ip, [sp, 0x24]",
            "mov r2, r5",
            "ldr r0, [r4, 0xc]",
            "mov r3, 4",
            "ldr r1, [sp, 0x14]",
            "add r7, ip, r7",
            "str r7, [r4, 0xd0]",
            "ldr r7, [r4, 0xd4]",
            "bl osl_pcie_rreg",
            "ldr ip, [sp, 0x24]",
            "mov r2, r5",
            "ldr lr, [sp, 0x14]",
            "mov r3, 4",
            "ldr r0, [r4, 0xc]",
            "add r7, ip, r7",
            "add r1, lr, 4",
            "str r7, [r4, 0xd4]",
            "ldr r7, [r4, 0xd8]",
            "bl osl_pcie_rreg",
            "ldr ip, [sp, 0x24]",
            "mov r2, r5",
            "ldr r3, [sp, 0x14]",
            "ldr r0, [r4, 0xc]",
            "add r7, ip, r7",
            "add r1, r3, 8",
            "str r7, [r4, 0xd8]",
            "mov r3, 4",
            "ldr r7, [r4, 0xdc]",
            "bl osl_pcie_rreg",
            "ldr ip, [sp, 0x24]",
            "mov r2, r5",
            "ldr lr, [sp, 0x14]",
            "mov r3, 4",
            "ldr r0, [r4, 0xc]",
            "add r7, ip, r7",
            "add r1, lr, 0xc",
            "str r7, [r4, 0xdc]",
            "ldr r7, [r4, 0xe0]",
            "bl osl_pcie_rreg",
            "ldr ip, [sp, 0x24]",
            "mov r2, r5",
            "ldr r0, [r4, 0xc]",
            "mov r3, 4",
            "ldr r1, [sp, 0x18]",
            "add r7, ip, r7",
            "str r7, [r4, 0xe0]",
            "ldr r7, [r4, 0xe4]",
            "bl osl_pcie_rreg",
            "ldr ip, [sp, 0x24]",
            "mov r2, r5",
            "ldr r3, [sp, 0x18]",
            "ldr r0, [r4, 0xc]",
            "add r7, ip, r7",
            "add r1, r3, 4",
            "str r7, [r4, 0xe4]",
            "mov r3, 4",
            "ldr r7, [r4, 0xe8]",
            "bl osl_pcie_rreg",
            "ldr ip, [sp, 0x24]",
            "mov r2, r5",
            "ldr lr, [sp, 0x18]",
            "mov r3, 4",
            "ldr r0, [r4, 0xc]",
            "add r7, ip, r7",
            "add r1, lr, 8",
            "str r7, [r4, 0xe8]",
            "ldr r7, [r4, 0xec]",
            "bl osl_pcie_rreg",
            "ldr ip, [sp, 0x24]",
            "mov r2, r5",
            "ldr r3, [sp, 0x18]",
            "ldr r0, [r4, 0xc]",
            "add r7, ip, r7",
            "add r1, r3, 0xc",
            "str r7, [r4, 0xec]",
            "mov r3, 4",
            "ldr r7, [r4, 0xf0]",
            "bl osl_pcie_rreg",
            "ldr ip, [sp, 0x24]",
            "mov r2, r5",
            "ldr r0, [r4, 0xc]",
            "mov r3, 4",
            "ldr r1, [sp, 0x1c]",
            "add r7, ip, r7",
            "str r7, [r4, 0xf0]",
            "ldr r7, [r4, 0xf4]",
            "bl osl_pcie_rreg",
            "ldr ip, [sp, 0x24]",
            "mov r2, r5",
            "ldr lr, [sp, 0x1c]",
            "mov r3, 4",
            "ldr r0, [r4, 0xc]",
            "add r7, ip, r7",
            "add r1, lr, 4",
            "str r7, [r4, 0xf4]",
            "ldr r7, [r4, 0xf8]",
            "bl osl_pcie_rreg",
            "ldr ip, [sp, 0x24]",
            "mov r2, r5",
            "ldr r3, [sp, 0x1c]",
            "ldr r0, [r4, 0xc]",
            "add r7, ip, r7",
            "str r7, [r4, 0xf8]",
            "add r1, r3, 8",
            "mov r3, 4",
            "ldr r5, [r4, 0xfc]",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x24]",
            "ldr r3, [r4, 0x1c]",
            "add r5, r2, r5",
            "str r5, [r4, 0xfc]",
            "ldr r3, [r3, 0xc]",
            "ldr ip, [r6, 0x19c]",
            "ldr r0, [r6, 0x1b0]",
            "str r3, [r6, 0x1a4]",
            "ldr r5, [r4, 0x54]",
            "ldr r7, [r4, 0x58]",
            "ldr r1, [r4, 0x60]",
            "ldr r2, [r4, 0x70]",
            "add r5, r7, r5",
            "ldr r7, [r4, 0x74]",
            "add r5, r5, r1",
            "ldr r1, [r6, 0x1b4]",
            "add r5, r5, r2",
            "ldr r2, [r6, 0x1b8]",
            "add r5, r5, r7",
            "ldr r7, [r6, 0x1c4]",
            "add r5, r5, ip",
            "ldr ip, [r6, 0x1a8]",
            "add r5, r5, r0",
            "ldr r0, [r6, 0x1bc]",
            "add r5, r5, r1",
            "ldr r1, [r6, 0x1c0]",
            "add r5, r5, r2",
            "ldr r2, [r6, 0x1cc]",
            "add r5, r5, r7",
            "str r5, [r6, 0x198]",
            "ldr r5, [r4, 0xd4]",
            "ldr r8, [r4, 0xd8]",
            "ldr r7, [r4, 0xe0]",
            "add r3, r5, r3",
            "ldr r5, [r4, 0xe4]",
            "add r3, r3, r8",
            "ldr r8, [r4, 0xe8]",
            "add r3, r3, r7",
            "ldr r7, [r4, 0xec]",
            "add r3, r3, r5",
            "ldr r5, [r4, 0xf0]",
            "add r3, r3, r8",
            "ldr r4, [r4, 0xf4]",
            "add r3, r3, r7",
            "add r3, r3, r5",
            "add r3, r3, r4",
            "add r3, r3, ip",
            "add r3, r3, r0",
            "add r3, r3, r1",
            "add r3, r3, r2",
            "str r3, [r6, 0x1a0]",
            "add sp, sp, 0x2c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.chipattach": {
        "function_address": "0x08005c48",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r0",
            "ldr r7, [0x080060b8]",
            "sub sp, sp, 0x3c",
            "mov r6, r1",
            "mov r8, r2",
            "ldr r3, [r7]",
            "tst r3, 2",
            "bne 0x8006090",
            "mov r0, r6",
            "mov r1, 0x110",
            "bl osl_malloc",
            "subs r5, r0, 0",
            "beq 0x8005ff0",
            "mov r1, 0x110",
            "bl __memzero",
            "str r4, [r5, 4]",
            "add r1, r5, 0x24",
            "ldr r3, [r4]",
            "add lr, r5, 0x104",
            "str r6, [r5, 0xc]",
            "add ip, r5, 0x108",
            "mov r2, r8",
            "mov r8, 0",
            "str r3, [r5]",
            "mov r3, 1",
            "str r1, [r4, 0x28]",
            "ldrh r0, [r4, 0x62]",
            "ldr r1, [r5, 0xc]",
            "stm sp, {r8, lr}",
            "str ip, [sp, 8]",
            "bl si_attach",
            "cmp r0, r8",
            "str r0, [r5, 0x100]",
            "beq 0x8006020",
            "movw r1, 0x806",
            "ldr r2, [r4, 4]",
            "bl si_setcore",
            "subs sl, r0, 0",
            "beq 0x800603c",
            "ldr r3, [r5, 0x100]",
            "add r8, sp, 0x28",
            "str sl, [r5, 8]",
            "ldr r3, [r3, 0x3c]",
            "str r3, [r4, 0x64]",
            "ldr r3, [r5, 0x100]",
            "ldr r3, [r3, 0x44]",
            "str r3, [r4, 0x68]",
            "ldr r0, [r5, 0x100]",
            "bl si_coreid",
            "str r0, [r4, 0x70]",
            "ldr r0, [r5, 0x100]",
            "bl si_corerev",
            "str r0, [r4, 0x74]",
            "ldr r3, [r5, 0x100]",
            "ldr r3, [r3, 4]",
            "subs r3, r3, 0",
            "movne r3, 1",
            "strb r3, [r4, 0x78]",
            "ldr r0, [r5, 0x100]",
            "bl si_coreunit",
            "ldr r1, [0x080060bc]",
            "str r0, [r4, 0x8c]",
            "ldr r0, [r5, 0x104]",
            "bl getintvar",
            "mov r2, 0x1e",
            "str r0, [r4, 0x170]",
            "str r2, [r4, 0x1c]",
            "mov sb, r0",
            "ldr r0, [r5, 0x100]",
            "bl si_clock",
            "movw r3, 0xde83",
            "ldr r2, [r4, 0x8c]",
            "movt r3, 0x431b",
            "umull ip, r3, r3, r0",
            "lsr r3, r3, 0x12",
            "ldr r1, [0x080060c0]",
            "mov r0, r8",
            "str r3, [r4, 0x10]",
            "bl sprintf",
            "ldr r0, [r5, 0x104]",
            "mov r1, r8",
            "bl getvar",
            "subs r2, r0, 0",
            "str r2, [sp, 0x24]",
            "beq 0x8005f98",
            "add fp, r4, 0x9e",
            "mov r1, fp",
            "bl bcm_ether_atoe",
            "ldrb r1, [r4, 0x9f]",
            "ldrb r2, [r4, 0x9e]",
            "ldrb r3, [r4, 0xa0]",
            "ldrb r0, [r4, 0xa1]",
            "orr r2, r1, r2",
            "ldrb r1, [r4, 0xa2]",
            "orr r2, r2, r3",
            "ldrb r3, [r4, 0xa3]",
            "orr r2, r2, r0",
            "orr r2, r2, r1",
            "orrs r3, r2, r3",
            "beq 0x8005f7c",
            "mov r1, fp",
            "mov r2, 6",
            "add r0, r4, 0x98",
            "bl memcpy",
            "ldr r1, [0x080060c4]",
            "mov r0, r8",
            "ldr r2, [r4, 0x8c]",
            "bl sprintf",
            "ldr r0, [r5, 0x104]",
            "mov r1, r8",
            "bl getvar",
            "cmp r0, 0",
            "beq 0x8005f98",
            "bl bcm_atoi",
            "and r0, r0, 0x1f",
            "cmp r0, 0x1f",
            "str r0, [r4, 0x90]",
            "beq 0x8005fb8",
            "ldr r1, [0x080060c8]",
            "mov r0, r8",
            "ldr r2, [r4, 0x8c]",
            "bl sprintf",
            "ldr r0, [r5, 0x104]",
            "mov r1, r8",
            "bl getvar",
            "cmp r0, 0",
            "beq 0x8005f98",
            "bl bcm_atoi",
            "str r0, [r4, 0x94]",
            "ldr fp, [r5, 0x100]",
            "mov r0, fp",
            "bl si_coreidx",
            "mov r1, 1",
            "lsl r1, r1, r0",
            "mov r0, fp",
            "bl si_pci_setup",
            "mov r0, r5",
            "bl sym.chipreset",
            "ldr r1, [0x080060cc]",
            "mov r0, r8",
            "ldr r2, [r4, 0x8c]",
            "bl sprintf",
            "add ip, sl, 0x210",
            "ldr r2, [r5, 0x100]",
            "str ip, [sp]",
            "mov ip, 0x700",
            "str ip, [sp, 0xc]",
            "mov ip, 0xe0",
            "mov lr, 0x200",
            "str ip, [sp, 0x10]",
            "mov ip, 0x140",
            "mov r0, r6",
            "str ip, [sp, 0x14]",
            "mov r1, r8",
            "mov ip, 0x1e",
            "add r3, sl, lr",
            "str lr, [sp, 4]",
            "str lr, [sp, 8]",
            "str ip, [sp, 0x18]",
            "str r7, [sp, 0x1c]",
            "bl dma_attach",
            "cmp r0, 0",
            "str r0, [r5, 0x1c]",
            "beq 0x8006074",
            "mov r3, 0xfc00",
            "add r0, r0, 4",
            "movt r3, 0x101",
            "str r0, [r4, 0x50]",
            "str r3, [r5, 0x18]",
            "ldr r2, [r4, 0x94]",
            "ldr r3, [r4, 0x8c]",
            "cmp r2, r3",
            "beq 0x8005f6c",
            "tst sb, 0x80",
            "bne 0x8005f14",
            "mov r0, r5",
            "add sp, sp, 0x3c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r0, [r5, 0x100]",
            "ldr r1, [r5, 0x104]",
            "bl adm_attach",
            "cmp r0, 0",
            "str r0, [r5, 0x10c]",
            "beq 0x8005fd4",
            "bl adm_enable_device",
            "cmp r0, 0",
            "bne 0x8006058",
            "tst sb, 0x100",
            "beq 0x8005f08",
            "ldr r0, [r5, 0x10c]",
            "bl adm_config_vlan",
            "cmp r0, 0",
            "beq 0x8005f08",
            "ldr r3, [r7]",
            "tst r3, 1",
            "beq 0x8005f88",
            "ldr r1, [r4, 4]",
            "ldr r0, [0x080060d0]",
            "bl printk",
            "b 0x8005f88",
            "mov r0, r5",
            "ldr r1, [r4, 0x90]",
            "bl sym.chipphyreset",
            "b 0x8005f00",
            "ldr r3, [r7]",
            "tst r3, 1",
            "bne 0x80060a0",
            "mov r0, r5",
            "bl sym.chipdetach",
            "mov r0, 0",
            "b 0x8005f0c",
            "ldr r3, [r7]",
            "tst r3, 1",
            "beq 0x8005f88",
            "ldr r1, [r4, 4]",
            "mov r2, r8",
            "ldr r0, [0x080060d4]",
            "bl printk",
            "b 0x8005f88",
            "ldr r3, [r7]",
            "tst r3, 1",
            "beq 0x8005f88",
            "ldr r1, [r4, 4]",
            "ldr r0, [0x080060d8]",
            "bl printk",
            "b 0x8005f88",
            "ldr r3, [r7]",
            "tst r3, 1",
            "beq 0x8005f88",
            "ldr r1, [r4, 4]",
            "ldr r0, [0x080060dc]",
            "bl printk",
            "b 0x8005f88",
            "ldr r0, [r7]",
            "ands r0, r0, 1",
            "beq 0x8005f0c",
            "ldr r4, [r4, 4]",
            "mov r0, r6",
            "bl osl_malloced",
            "mov r2, r0",
            "ldr r0, [0x080060e0]",
            "mov r1, r4",
            "bl printk",
            "mov r0, r5",
            "b 0x8005f0c",
            "ldr r3, [r7]",
            "tst r3, 1",
            "beq 0x8005f88",
            "ldr r1, [r4, 4]",
            "ldr r0, [0x080060e4]",
            "bl printk",
            "b 0x8005f88",
            "ldr r3, [r7]",
            "tst r3, 1",
            "beq 0x8005f88",
            "ldr r1, [r4, 4]",
            "ldr r0, [0x080060e8]",
            "bl printk",
            "b 0x8005f88",
            "ldr r3, [r7]",
            "tst r3, 1",
            "beq 0x8005f88",
            "ldr r1, [r4, 4]",
            "ldr r0, [0x080060ec]",
            "bl printk",
            "b 0x8005f88",
            "ldr r3, [r7]",
            "tst r3, 1",
            "beq 0x8005f88",
            "ldr r1, [r4, 4]",
            "ldr r0, [0x080060f0]",
            "bl printk",
            "b 0x8005f88",
            "ldr r1, [r4, 4]",
            "ldr r0, [0x080060f4]",
            "bl printk",
            "b case.0x8002d54.10",
            "ldr r1, [r4, 4]",
            "mov r2, r8",
            "ldr r3, [sp, 0x24]",
            "ldr r0, [0x080060f8]",
            "bl printk",
            "b 0x8005f88"
        ]
    },
    "sym.chipdetach": {
        "function_address": "0x08005b90",
        "instructions": [
            "ldr r3, [0x08005c40]",
            "push {r4, r5, r6, lr}",
            "mov r4, r0",
            "ldr r3, [r3]",
            "tst r3, 2",
            "bne 0x8005c2c",
            "cmp r4, 0",
            "popeq {r4, r5, r6, pc}",
            "ldr r0, [r4, 0x10c]",
            "cmp r0, 0",
            "beq 0x8005bc0",
            "bl adm_detach",
            "ldr r0, [r4, 0x1c]",
            "cmp r0, 0",
            "beq 0x8005bd8",
            "ldr r3, [r0]",
            "ldr r3, [r3]",
            "blx r3",
            "ldr r0, [r4, 0x100]",
            "mov r5, 0",
            "str r5, [r4, 0x1c]",
            "cmp r0, r5",
            "beq 0x8005c00",
            "mov r1, r5",
            "bl si_core_disable",
            "ldr r0, [r4, 0x100]",
            "bl si_detach",
            "str r5, [r4, 0x100]",
            "ldr r1, [r4, 0x104]",
            "cmp r1, 0",
            "beq 0x8005c18",
            "ldr r0, [r4, 0xc]",
            "ldr r2, [r4, 0x108]",
            "bl osl_mfree",
            "ldr r0, [r4, 0xc]",
            "mov r1, r4",
            "mov r2, 0x110",
            "pop {r4, r5, r6, lr}",
            "b osl_mfree",
            "ldr r3, [r0, 4]",
            "ldr r0, [0x08005c44]",
            "ldr r1, [r3, 4]",
            "bl printk",
            "b 0x8005ba8"
        ]
    },
    "sym.chipduplexupd_1": {
        "function_address": "0x08007624",
        "instructions": [
            "push {r4, r5, lr}",
            "sub sp, sp, 0xc",
            "ldr r1, [r0, 0xc]",
            "mov r4, r0",
            "add r2, sp, 4",
            "mov r3, 4",
            "ldr r0, [r0, 0x10]",
            "add r1, r1, 0x800",
            "add r1, r1, 8",
            "bl osl_pcie_rreg",
            "ldr r3, [r4, 4]",
            "ldr r5, [sp, 4]",
            "ldr r2, [r3, 0x44]",
            "cmp r2, 0",
            "bne 0x8007704",
            "tst r5, 0x400",
            "moveq r1, 0x400",
            "mvnne r1, 0",
            "ldr r3, [r3, 0x40]",
            "ubfx r2, r5, 2, 2",
            "subs r0, r2, 2",
            "movne r0, 1",
            "cmp r3, 0x3e8",
            "movne r0, 0",
            "cmp r0, 0",
            "movne r0, 2",
            "bne 0x80076ac",
            "subs r0, r2, 1",
            "movne r0, 1",
            "cmp r3, 0x64",
            "movne r0, 0",
            "cmp r0, 0",
            "movne r0, 1",
            "beq 0x8007714",
            "bfi r5, r0, 2, 2",
            "ldr r3, [0x08007748]",
            "cmn r1, 1",
            "bicne r5, r5, 0x400",
            "orrne r5, r5, r1",
            "ldr r3, [r3]",
            "tst r3, 2",
            "bne 0x8007738",
            "mov r0, r4",
            "bl fcn.0800753c",
            "dsb sy",
            "ldr r3, [0x0800774c]",
            "ldr r3, [r3, 0xc]",
            "cmp r3, 0",
            "beq 0x80076ec",
            "blx r3",
            "ldr r3, [r4, 0xc]",
            "mov r0, r4",
            "str r5, [r3, 0x808]",
            "bl fcn.080075b0",
            "add sp, sp, 0xc",
            "pop {r4, r5, pc}",
            "tst r5, 0x400",
            "mvneq r1, 0",
            "movne r1, 0",
            "b 0x800766c",
            "subs r2, r2, 0",
            "movne r2, 1",
            "cmp r3, 0xa",
            "movne r2, 0",
            "cmp r2, 0",
            "bne 0x80076ac",
            "cmn r1, 1",
            "beq 0x80076fc",
            "b 0x80076b0",
            "mov r1, r5",
            "ldr r0, [0x08007750]",
            "bl printk",
            "b 0x80076cc"
        ]
    },
    "fcn.0800753c": {
        "function_address": "0x0800753c",
        "instructions": [
            "push {r4, r5, lr}",
            "mov r4, r0",
            "sub sp, sp, 0xc",
            "dsb sy",
            "ldr r3, [0x080075ac]",
            "ldr r3, [r3, 0xc]",
            "cmp r3, 0",
            "beq 0x8007560",
            "blx r3",
            "ldr r5, [r4, 0xc]",
            "add r2, sp, 4",
            "ldr r0, [r4, 0x10]",
            "mov r3, 4",
            "add r1, r5, 0x800",
            "add r1, r1, 8",
            "bl osl_pcie_rreg",
            "ldr r3, [r4, 4]",
            "mov r0, 2",
            "ldr r2, [sp, 4]",
            "ldr r3, [r3, 0x74]",
            "cmp r3, 3",
            "movls r3, 0x800",
            "movhi r3, 0x2000",
            "orr r3, r3, r2",
            "str r3, [r5, 0x808]",
            "bl osl_delay",
            "add sp, sp, 0xc",
            "pop {r4, r5, pc}"
        ]
    },
    "fcn.080075b0": {
        "function_address": "0x080075b0",
        "instructions": [
            "push {r4, r5, lr}",
            "mov r4, r0",
            "sub sp, sp, 0xc",
            "dsb sy",
            "ldr r3, [0x08007620]",
            "ldr r3, [r3, 0xc]",
            "cmp r3, 0",
            "beq 0x80075d4",
            "blx r3",
            "ldr r5, [r4, 0xc]",
            "add r2, sp, 4",
            "ldr r0, [r4, 0x10]",
            "mov r3, 4",
            "add r1, r5, 0x800",
            "add r1, r1, 8",
            "bl osl_pcie_rreg",
            "ldr r2, [r4, 4]",
            "mov r0, 2",
            "ldr r3, [sp, 4]",
            "ldr r2, [r2, 0x74]",
            "cmp r2, 4",
            "mvnlo r2, 0x800",
            "mvnhs r2, 0x2000",
            "and r3, r2, r3",
            "str r3, [r5, 0x808]",
            "bl osl_delay",
            "add sp, sp, 0xc",
            "pop {r4, r5, pc}"
        ]
    },
    "sym.chipdump_1": {
        "function_address": "0x08008a90",
        "instructions": [
            "push {r4, r5, lr}",
            "mov r4, r0",
            "ldr lr, [r4, 0x18]",
            "sub sp, sp, 0xc",
            "mov r5, r1",
            "ldr ip, [r4, 0x1c]",
            "ldr r2, [r0, 0xc]",
            "mov r0, r1",
            "ldr r3, [r4, 0x14]",
            "ldr r1, [0x08008b3c]",
            "str lr, [sp]",
            "str ip, [sp, 4]",
            "bl bcm_bprintf",
            "ldr r1, [0x08008b40]",
            "mov r0, r5",
            "bl bcm_bprintf",
            "mov r0, r4",
            "ldr r1, [r4, 0xc]",
            "mov r2, r5",
            "bl fcn.08007cdc",
            "mov r0, r5",
            "ldr r1, [0x08008b40]",
            "bl bcm_bprintf",
            "ldr r0, [r4, 0x170]",
            "cmp r0, 0",
            "beq 0x8008b00",
            "ldr r1, [r5]",
            "bl adm_dump_regs",
            "ldr r3, [r4, 4]",
            "ldr r0, [r3, 0x3ac]",
            "cmp r0, 0",
            "beq 0x8008b34",
            "mov r1, r5",
            "mov r2, 0",
            "bl fa_dump",
            "ldr r3, [r4, 4]",
            "mov r1, r5",
            "ldr r0, [r3, 0x3ac]",
            "add sp, sp, 0xc",
            "pop {r4, r5, lr}",
            "b fa_regs_show",
            "add sp, sp, 0xc",
            "pop {r4, r5, pc}"
        ]
    },
    "fcn.08007cdc": {
        "function_address": "0x08007cdc",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x1c",
            "ldr r3, [r0, 4]",
            "mov r5, r0",
            "mov r4, r2",
            "mov r7, r1",
            "add r6, sp, 0x14",
            "ldr r1, [0x08008970]",
            "mov r0, r2",
            "ldr r2, [r3, 0x3b8]",
            "ldr r8, [r3, 0x90]",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "mov r1, r7",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x08008974]",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "add r1, r7, r3",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x08008978]",
            "bl bcm_bprintf",
            "mov r0, r4",
            "ldr r1, [0x0800897c]",
            "bl bcm_bprintf",
            "ldr r3, [r5, 4]",
            "ldr r3, [r3, 0x74]",
            "cmp r3, 7",
            "bls 0x800893c",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "add r1, r7, 0x20",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x08008980]",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "add r1, r7, 0x24",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x08008984]",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "add r1, r7, 0x28",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x08008988]",
            "bl bcm_bprintf",
            "ldr r1, [0x0800897c]",
            "mov r0, r4",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "add r1, r7, 0x100",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x0800898c]",
            "bl bcm_bprintf",
            "ldr r1, [0x0800897c]",
            "mov r0, r4",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "add r1, r7, 0x104",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x08008990]",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "add r1, r7, 0x108",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x08008994]",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "add r1, r7, 0x10c",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x08008998]",
            "bl bcm_bprintf",
            "mov r0, r4",
            "ldr r1, [0x0800897c]",
            "bl bcm_bprintf",
            "ldr r3, [r5, 4]",
            "ldr r3, [r3, 0x74]",
            "cmp r3, 0x80000000",
            "beq 0x8007ef4",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "add r1, r7, 0x180",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x0800899c]",
            "bl bcm_bprintf",
            "ldr r0, [r5, 0x10]",
            "add r1, r7, 0x188",
            "mov r2, r6",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "ldr r1, [0x080089a0]",
            "mov r0, r4",
            "ldr r2, [sp, 0x14]",
            "bl bcm_bprintf",
            "mov r0, r4",
            "ldr r1, [0x0800897c]",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "add r1, r7, 0x18c",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x080089a4]",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "add r1, r7, 0x190",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x080089a8]",
            "bl bcm_bprintf",
            "ldr r1, [0x0800897c]",
            "mov r0, r4",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "add r1, r7, 0x194",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x080089ac]",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "add r1, r7, 0x198",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x080089b0]",
            "bl bcm_bprintf",
            "ldr r1, [0x0800897c]",
            "mov r0, r4",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "add r1, r7, 0x1e0",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x080089b4]",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "add r1, r7, 0x1e8",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x080089b8]",
            "bl bcm_bprintf",
            "ldr r1, [0x0800897c]",
            "mov r0, r4",
            "bl bcm_bprintf",
            "ldr r3, [r5, 0x164]",
            "movw r2, 0xcf12",
            "movw r1, 0xcf1a",
            "ldr r3, [r3, 0x3c]",
            "cmp r3, r1",
            "cmpne r3, r2",
            "beq 0x8008044",
            "movw r2, 0xcf26",
            "cmp r3, r2",
            "beq 0x8008044",
            "add sb, r7, 0x800",
            "ldr r0, [r5, 0x10]",
            "mov r1, sb",
            "mov r2, r6",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x080089bc]",
            "bl bcm_bprintf",
            "b 0x8008048",
            "add sb, r7, 0x800",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "add r1, sb, r3",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "add r3, r7, 0x840",
            "ldr r2, [sp, 0x14]",
            "ldr r1, [0x080089c0]",
            "mov r0, r4",
            "str r3, [sp, 0xc]",
            "add fp, r7, 0x810",
            "bl bcm_bprintf",
            "ldr r1, [0x0800897c]",
            "mov r0, r4",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "add r1, sb, 8",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x080089c4]",
            "add sl, r7, 0xb30",
            "bl bcm_bprintf",
            "ldr r1, [0x0800897c]",
            "mov r0, r4",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "add r1, sb, 0xc",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x080089c8]",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "mov r1, fp",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x080089cc]",
            "bl bcm_bprintf",
            "ldr r1, [0x0800897c]",
            "mov r0, r4",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "add r1, fp, r3",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x080089d0]",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "add r1, fp, 8",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x080089d4]",
            "bl bcm_bprintf",
            "ldr r2, [sp, 0xc]",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "add r1, r2, r3",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x080089d8]",
            "bl bcm_bprintf",
            "ldr r1, [0x0800897c]",
            "mov r0, r4",
            "bl bcm_bprintf",
            "ldr r2, [sp, 0xc]",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "add r1, r2, 8",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x080089dc]",
            "bl bcm_bprintf",
            "ldr r2, [sp, 0xc]",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "add r1, r2, 0xc",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x080089e0]",
            "bl bcm_bprintf",
            "add r1, r7, 0x850",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "add r1, r1, 0xc",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x080089e4]",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "mov r1, sl",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x080089e8]",
            "bl bcm_bprintf",
            "ldr r1, [0x0800897c]",
            "mov r0, r4",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "add r1, sl, r3",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x080089ec]",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "add r1, sl, 8",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x080089f0]",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "add r1, sl, 0xc",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x080089f4]",
            "bl bcm_bprintf",
            "ldr r1, [0x0800897c]",
            "mov r0, r4",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "add r1, r7, 0x300",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x080089f8]",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "add r1, r7, 0x308",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x080089fc]",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "add r1, r7, 0x30c",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x08008a00]",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "add r1, r7, 0x314",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x08008a04]",
            "bl bcm_bprintf",
            "ldr r1, [0x0800897c]",
            "mov r0, r4",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "add r1, r7, 0x318",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x08008a08]",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "add r1, r7, 0x31c",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x08008a0c]",
            "bl bcm_bprintf",
            "ldr r1, [0x0800897c]",
            "mov r0, r4",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "add r1, r7, 0x348",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x08008a10]",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "add r1, r7, 0x34c",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x08008a14]",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "add r1, r7, 0x350",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x08008a18]",
            "bl bcm_bprintf",
            "ldr r1, [0x0800897c]",
            "mov r0, r4",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "add r1, r7, 0x354",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x08008a1c]",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "add r1, r7, 0x358",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x08008a20]",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "add r1, r7, 0x35c",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x08008a24]",
            "bl bcm_bprintf",
            "ldr r1, [0x0800897c]",
            "mov r0, r4",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "add r1, r7, 0x360",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x08008a28]",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "add r1, r7, 0x364",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x08008a2c]",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "add r1, r7, 0x368",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x08008a30]",
            "bl bcm_bprintf",
            "mov r0, r4",
            "ldr r1, [0x0800897c]",
            "bl bcm_bprintf",
            "ldr r3, [r5, 4]",
            "ldr r3, [r3, 0x74]",
            "cmp r3, 0x80000000",
            "beq 0x8008588",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "add r1, r7, 0x36c",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x08008a34]",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "add r1, r7, 0x370",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x08008a38]",
            "bl bcm_bprintf",
            "ldr r0, [r5, 0x10]",
            "add r1, r7, 0x374",
            "mov r2, r6",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "ldr r1, [0x08008a3c]",
            "mov r0, r4",
            "ldr r2, [sp, 0x14]",
            "bl bcm_bprintf",
            "mov r0, r4",
            "ldr r1, [0x0800897c]",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "add r1, r7, 0x3b0",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x08008a40]",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "add r1, r7, 0x3b8",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x08008a44]",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "add r1, r7, 0x3bc",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x08008a48]",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "add r1, r7, 0x3c4",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x08008a4c]",
            "bl bcm_bprintf",
            "ldr r1, [0x0800897c]",
            "mov r0, r4",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "add r1, r7, 0x3c8",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x08008a50]",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "add r1, r7, 0x3cc",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x08008a54]",
            "bl bcm_bprintf",
            "ldr r1, [0x0800897c]",
            "mov r0, r4",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "add r1, r7, 0x3f8",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x08008a58]",
            "bl bcm_bprintf",
            "ldr r3, [r5, 4]",
            "ldr r3, [r3, 0x74]",
            "cmp r3, 0x80000000",
            "beq 0x8008770",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "add r1, r7, 0x3fc",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "add sl, r7, 0x400",
            "ldr r2, [sp, 0x14]",
            "ldr r1, [0x08008a5c]",
            "mov r0, r4",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "mov r1, sl",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x08008a60]",
            "bl bcm_bprintf",
            "ldr r1, [0x0800897c]",
            "mov r0, r4",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "add r1, sl, r3",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x08008a64]",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "add r1, sl, 8",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x08008a68]",
            "bl bcm_bprintf",
            "ldr r0, [r5, 0x10]",
            "add r1, sl, 0xc",
            "mov r2, r6",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x08008a6c]",
            "bl bcm_bprintf",
            "mov r0, r4",
            "ldr r1, [0x0800897c]",
            "bl bcm_bprintf",
            "ldr r3, [r5, 4]",
            "ldr r3, [r3, 0x74]",
            "cmp r3, 0x80000000",
            "beq 0x800885c",
            "add sl, r7, 0x410",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "mov r1, sl",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x08008a70]",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "add r1, sl, r3",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x08008a74]",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "add r1, sl, 8",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x08008a78]",
            "bl bcm_bprintf",
            "ldr r1, [0x0800897c]",
            "mov r0, r4",
            "bl bcm_bprintf",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "add r1, sl, 0xc",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x08008a7c]",
            "bl bcm_bprintf",
            "ldr r0, [r5, 0x10]",
            "add r1, r7, 0x420",
            "mov r2, r6",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "ldr r1, [0x08008a80]",
            "mov r0, r4",
            "ldr r2, [sp, 0x14]",
            "bl bcm_bprintf",
            "mov r0, r4",
            "ldr r1, [0x0800897c]",
            "bl bcm_bprintf",
            "cmp r8, 0x1e",
            "beq 0x8008934",
            "mov r2, 0",
            "mov r1, r8",
            "mov r0, r5",
            "bl sym.chipphyrd_1",
            "mov r1, r8",
            "mov r6, r0",
            "mov r2, 1",
            "mov r0, r5",
            "bl sym.chipphyrd_1",
            "mov r1, r8",
            "mov sl, r0",
            "mov r2, 2",
            "mov r0, r5",
            "bl sym.chipphyrd_1",
            "mov r1, r8",
            "mov r7, r0",
            "mov r2, 3",
            "mov r0, r5",
            "bl sym.chipphyrd_1",
            "mov r3, sl",
            "mov r2, r6",
            "str r0, [sp, 4]",
            "mov r0, r4",
            "ldr r1, [0x08008a84]",
            "str r7, [sp]",
            "bl bcm_bprintf",
            "mov r1, r8",
            "mov r2, 4",
            "mov r0, r5",
            "bl sym.chipphyrd_1",
            "mov r1, r8",
            "mov sl, r0",
            "mov r2, 5",
            "mov r0, r5",
            "bl sym.chipphyrd_1",
            "mov r1, r8",
            "mov r7, r0",
            "mov r2, 0x18",
            "mov r0, r5",
            "bl sym.chipphyrd_1",
            "mov r1, r8",
            "mov r6, r0",
            "mov r2, 0x19",
            "mov r0, r5",
            "bl sym.chipphyrd_1",
            "ldr r1, [0x08008a88]",
            "mov r2, sl",
            "str r0, [sp, 4]",
            "mov r3, r7",
            "mov r0, r4",
            "str r6, [sp]",
            "bl bcm_bprintf",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r0, [r5, 0x10]",
            "add r1, r7, 0xc",
            "mov r2, r6",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [0x08008a8c]",
            "bl bcm_bprintf",
            "mov r0, r4",
            "ldr r1, [0x0800897c]",
            "bl bcm_bprintf",
            "b 0x8007d70"
        ]
    },
    "sym.chipphyreset_1": {
        "function_address": "0x08008f34",
        "instructions": [
            "cmp r1, 0x1e",
            "push {r4, r5, r6, lr}",
            "mov r4, r1",
            "mov r5, r0",
            "popeq {r4, r5, r6, pc}",
            "ldr r6, [0x08008fd4]",
            "ldr r3, [r6]",
            "tst r3, 2",
            "bne 0x8008fbc",
            "mov r2, 0",
            "mov r3, 0x8000",
            "mov r1, r4",
            "mov r0, r5",
            "bl sym.chipphywr_1",
            "mov r0, 0x64",
            "bl osl_delay",
            "mov r0, r5",
            "mov r1, r4",
            "mov r2, 0",
            "bl sym.chipphyrd_1",
            "tst r0, 0x8000",
            "bne 0x8008f9c",
            "mov r0, r5",
            "mov r1, r4",
            "pop {r4, r5, r6, lr}",
            "b fcn.08008b44",
            "ldr r3, [r6]",
            "tst r3, 1",
            "beq 0x8008f8c",
            "ldr r3, [r5, 4]",
            "ldr r0, [0x08008fd8]",
            "ldr r1, [r3, 4]",
            "bl printk",
            "b 0x8008f8c",
            "ldr r3, [r0, 4]",
            "mov r2, r1",
            "ldr r0, [0x08008fdc]",
            "ldr r1, [r3, 4]",
            "bl printk",
            "b 0x8008f58"
        ]
    },
    "sym.chipphywr_1": {
        "function_address": "0x080079a0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r7, r1",
            "ldr r1, [r0, 4]",
            "mov fp, r3",
            "mov sb, r2",
            "sub sp, sp, 0x14",
            "mov r4, r0",
            "ldr r3, [r1, 0x74]",
            "sub r2, r3, 4",
            "cmp r3, 7",
            "cmpne r2, 1",
            "bhi 0x80079e8",
            "ldr r3, [0x08007b30]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "bne 0x8007b20",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "cmp r3, 0x80000000",
            "ldr r8, [r0, 0xc]",
            "ldreq r6, [r0, 8]",
            "add r5, sp, 0xc",
            "ldr r0, [r0, 0x10]",
            "mov r2, r5",
            "addne sl, r8, 0x188",
            "mov r3, 4",
            "addeq sl, r6, 0x104",
            "addne r6, r8, 0x180",
            "mov r1, sl",
            "addeq r6, r6, 0x100",
            "bl osl_pcie_rreg",
            "ldr r1, [sp, 0xc]",
            "bic r1, r1, 0x1f",
            "orr r1, r7, r1",
            "dsb sy",
            "ldr r3, [0x08007b34]",
            "ldr r2, [r3, 0xc]",
            "cmp r2, 0",
            "beq 0x8007a50",
            "str r1, [sp, 4]",
            "str r3, [sp]",
            "blx r2",
            "ldr r3, [sp]",
            "ldr r1, [sp, 4]",
            "str r1, [sl]",
            "dsb sy",
            "ldr r2, [r3, 0xc]",
            "cmp r2, 0",
            "beq 0x8007a70",
            "str r3, [sp]",
            "blx r2",
            "ldr r3, [sp]",
            "mov r2, 0x10",
            "str r2, [r8, 0x20]",
            "dsb sy",
            "ldr r3, [r3, 0xc]",
            "cmp r3, 0",
            "beq 0x8007a8c",
            "blx r3",
            "lsl r7, r7, 0x10",
            "movw r8, 0x3f1",
            "orr r7, r7, 0x60000000",
            "orr sb, r7, sb, lsl 24",
            "orr fp, sb, fp",
            "str fp, [r6]",
            "b 0x8007ab8",
            "cmp r8, 9",
            "sub r8, r8, 0xa",
            "beq 0x8007adc",
            "bl osl_delay",
            "ldr r0, [r4, 0x10]",
            "mov r3, 4",
            "mov r1, r6",
            "mov r2, r5",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 0xc]",
            "mov r0, 0xa",
            "tst r3, 0x40000000",
            "bne 0x8007aa8",
            "mov r3, 4",
            "ldr r0, [r4, 0x10]",
            "mov r1, r6",
            "mov r2, r5",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 0xc]",
            "tst r3, 0x40000000",
            "beq 0x80079e0",
            "ldr r3, [0x08007b30]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "beq 0x80079e0",
            "ldr r3, [r4, 4]",
            "ldr r0, [0x08007b38]",
            "ldr r1, [r3, 4]",
            "bl printk",
            "b 0x80079e0",
            "ldr r1, [r1, 4]",
            "ldr r0, [0x08007b3c]",
            "bl printk",
            "b 0x80079e0"
        ]
    },
    "sym.chipphyrd_1": {
        "function_address": "0x08007b40",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov sl, r2",
            "ldr r3, [r0, 4]",
            "mov r7, r1",
            "sub sp, sp, 0xc",
            "mov r4, r0",
            "ldr r2, [r3, 0x74]",
            "sub r1, r2, 4",
            "cmp r2, 7",
            "cmpne r1, 1",
            "bhi 0x8007b84",
            "ldr r2, [0x08007ca0]",
            "ldr r0, [r2]",
            "ands r0, r0, 1",
            "bne 0x8007c8c",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "cmp r2, 0x80000000",
            "ldr r6, [r0, 0xc]",
            "ldreq r6, [r0, 8]",
            "add r5, sp, 4",
            "ldr r0, [r0, 0x10]",
            "mov r2, r5",
            "addne r8, r6, 0x188",
            "mov r3, 4",
            "addeq r8, r6, 0x104",
            "addne r6, r6, 0x180",
            "mov r1, r8",
            "addeq r6, r6, 0x100",
            "bl osl_pcie_rreg",
            "ldr fp, [sp, 4]",
            "bic fp, fp, 0x1f",
            "orr fp, r7, fp",
            "dsb sy",
            "ldr sb, [0x08007ca4]",
            "ldr r3, [sb, 0xc]",
            "cmp r3, 0",
            "beq 0x8007bdc",
            "blx r3",
            "str fp, [r8]",
            "dsb sy",
            "ldr r3, [sb, 0xc]",
            "cmp r3, 0",
            "beq 0x8007bf4",
            "blx r3",
            "lsl r7, r7, 0x10",
            "mov r8, 0x65",
            "orr r7, r7, 0x40000000",
            "orr sl, r7, sl, lsl 24",
            "str sl, [r6]",
            "b 0x8007c18",
            "subs r8, r8, 1",
            "beq 0x8007c3c",
            "bl osl_delay",
            "ldr r0, [r4, 0x10]",
            "mov r3, 4",
            "mov r1, r6",
            "mov r2, r5",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 4]",
            "mov r0, 0xa",
            "tst r3, 0x40000000",
            "bne 0x8007c0c",
            "ldr r0, [r4, 0x10]",
            "mov r1, r6",
            "mov r2, r5",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "ldr r0, [sp, 4]",
            "tst r0, 0x40000000",
            "uxtheq r0, r0",
            "beq 0x8007b7c",
            "ldr r3, [0x08007ca0]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "movweq r0, 0xffff",
            "beq 0x8007b7c",
            "ldr r3, [r4, 4]",
            "ldr r0, [0x08007ca8]",
            "ldr r1, [r3, 4]",
            "bl printk",
            "movw r0, 0xffff",
            "b 0x8007b7c",
            "ldr r0, [0x08007cac]",
            "ldr r1, [r3, 4]",
            "bl printk",
            "mov r0, 0",
            "b 0x8007b7c"
        ]
    },
    "sym.chipreset_1": {
        "function_address": "0x0800912c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r0",
            "ldr r7, [0x080099c0]",
            "sub sp, sp, 0xc",
            "ldr r3, [r7]",
            "tst r3, 2",
            "bne 0x80099ac",
            "ldr r0, [r4, 0x164]",
            "ldr fp, [r4, 0xc]",
            "bl si_iscoreup",
            "cmp r0, 0",
            "bne 0x80094e8",
            "ldr r3, [r4, 4]",
            "ldrb r3, [r3, 0x78]",
            "cmp r3, 0",
            "beq 0x800977c",
            "mov r1, 0",
            "ldr r0, [r4, 0x164]",
            "mov r2, r1",
            "bl si_core_sflags",
            "ldr r2, [r4, 0x164]",
            "movw r1, 0x5357",
            "movw ip, 0x4749",
            "ldr r3, [r2, 0x3c]",
            "cmp r3, r1",
            "cmpne r3, ip",
            "bne 0x80091a4",
            "ldr r1, [r2, 0x48]",
            "cmp r1, 0xa",
            "beq 0x80095b4",
            "sub ip, r3, 0xd100",
            "movw r1, 0xb95c",
            "sub ip, ip, 0x45",
            "cmp r3, r1",
            "cmpne ip, 1",
            "bls 0x80095a8",
            "movw r1, 0xd144",
            "cmp r3, r1",
            "beq 0x8009760",
            "ands sb, r0, 0x800",
            "moveq r1, sb",
            "beq 0x80091fc",
            "ldr r3, [r7]",
            "tst r3, 2",
            "bne 0x800996c",
            "ldr r3, [r4, 4]",
            "ldr r2, [r3, 0x84]",
            "cmp r2, 0",
            "beq 0x80097f4",
            "ldr r2, [r4, 0x164]",
            "mov r1, 4",
            "ldr r3, [r2, 0x3c]",
            "movw r0, 0xcf12",
            "movw ip, 0xcf26",
            "cmp r3, ip",
            "cmpne r3, r0",
            "bne 0x800970c",
            "ldr r1, [r4, 4]",
            "ldr r1, [r1, 0x74]",
            "cmp r1, 2",
            "bls 0x8009234",
            "movw r1, 0xcf12",
            "movw r0, 0xcf1a",
            "cmp r3, r0",
            "cmpne r3, r1",
            "bne 0x8009608",
            "movw r1, 0x5357",
            "movw r0, 0x4749",
            "cmp r3, r1",
            "cmpne r3, r0",
            "ldr sl, [0x080099c4]",
            "add r5, sp, 4",
            "beq 0x80096b4",
            "movw r1, 0xd144",
            "cmp r3, r1",
            "beq 0x80096b4",
            "ldr r3, [r2, 0x3c]",
            "movw r6, 0xb95c",
            "sub r1, r3, 0xd100",
            "sub r1, r1, 0x45",
            "cmp r3, r6",
            "cmpne r1, 1",
            "bhi 0x8009284",
            "ldr r3, [r2, 0x18]",
            "tst r3, 0x10000000",
            "bne 0x80095bc",
            "cmp sb, 0",
            "beq 0x800929c",
            "ldr r3, [r4, 4]",
            "ldr r2, [r3, 0x84]",
            "cmp r2, 0",
            "beq 0x8009810",
            "mov r0, r4",
            "bl fcn.0800753c",
            "ldr r1, [r4, 0xc]",
            "mov r2, r5",
            "ldr r0, [r4, 0x10]",
            "mov r3, 4",
            "add r1, r1, 0x800",
            "add r1, r1, 8",
            "bl osl_pcie_rreg",
            "ldr ip, [r4, 4]",
            "mov r0, 0x10",
            "ldr r2, [sp, 4]",
            "movw r3, 0x785c",
            "mov r1, r0",
            "movt r3, 0xe17f",
            "ldr ip, [ip, 0x74]",
            "movt r0, 0x3180",
            "movt r1, 0x1180",
            "and r3, r2, r3",
            "cmp ip, 5",
            "movls r1, r0",
            "orr r6, r1, r3",
            "cmp r2, r6",
            "beq 0x8009318",
            "dsb sy",
            "ldr r3, [sl, 0xc]",
            "cmp r3, 0",
            "beq 0x8009310",
            "blx r3",
            "ldr r3, [r4, 0xc]",
            "str r6, [r3, 0x808]",
            "mov r0, r4",
            "bl fcn.080075b0",
            "ldr r3, [r4, 4]",
            "ldr r2, [r3, 0x74]",
            "cmp r2, 0x80000000",
            "beq 0x80093c0",
            "dsb sy",
            "ldr r3, [sl, 0xc]",
            "cmp r3, 0",
            "beq 0x8009344",
            "blx r3",
            "ldr r6, [r4, 0xc]",
            "mov r3, 4",
            "mov r2, r5",
            "ldr r0, [r4, 0x10]",
            "mov r1, r6",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 4]",
            "orr r3, r3, 0x10",
            "str r3, [r6]",
            "ldr r6, [r4, 0xc]",
            "add r3, r6, 0x420",
            "add r6, r6, 0x300",
            "add r3, r3, 8",
            "cmp r3, r6",
            "blo 0x80093bc",
            "mov r1, r6",
            "mov r2, r5",
            "mov r3, 4",
            "ldr r0, [r4, 0x10]",
            "bl osl_pcie_rreg",
            "ldr r2, [r4, 0xc]",
            "ldr r3, [sp, 4]",
            "add r1, r2, 0x3a8",
            "add r3, r2, 0x420",
            "cmp r6, r1",
            "add r3, r3, 8",
            "addeq r6, r2, 0x3ac",
            "add r6, r6, 4",
            "cmp r6, r3",
            "bls 0x8009380",
            "ldr r3, [r4, 4]",
            "mov r2, 1",
            "strb r2, [r4, 0x34]",
            "ldr r3, [r3, 0x74]",
            "cmp r3, 0x80000000",
            "beq 0x8009724",
            "dsb sy",
            "ldr r3, [sl, 0xc]",
            "cmp r3, 0",
            "beq 0x80093e8",
            "blx r3",
            "mov r3, 4",
            "ldr r0, [r4, 0x10]",
            "add r1, fp, 0x188",
            "mov r2, r5",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 4]",
            "orr r3, r3, 0x800000",
            "str r3, [fp, 0x188]",
            "ldr r0, [r4, 0x164]",
            "movw r2, 0xcf12",
            "movw r1, 0xcf1a",
            "ldr r3, [r0, 0x3c]",
            "cmp r3, r2",
            "cmpne r3, r1",
            "beq 0x80094bc",
            "movw r2, 0xcf26",
            "cmp r3, r2",
            "beq 0x80094bc",
            "ldr r1, [r4, 0xc]",
            "mov r3, 4",
            "mov r2, r5",
            "ldr r0, [r4, 0x10]",
            "add r1, r1, r3",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 4]",
            "ubfx r3, r3, 8, 2",
            "cmp r3, 1",
            "bls 0x80097d8",
            "ldr r3, [r4, 4]",
            "ldr r2, [r3, 0x90]",
            "cmp r2, 0x1e",
            "moveq r2, 0x3e8",
            "streq r2, [r3, 0x40]",
            "moveq r2, 1",
            "ldreq r3, [r4, 4]",
            "streq r2, [r3, 0x44]",
            "bl osl_acp_war_enab",
            "cmp r0, 0",
            "beq osl_arch_is_coherent",
            "mov r1, 0x780",
            "mov r2, 0x380",
            "ldr r0, [r4, 0x164]",
            "movt r1, 0x3fff",
            "movt r2, 0x21b",
            "bl si_core_cflags",
            "ldr r3, [r4, 4]",
            "mov r0, r4",
            "ldr r1, [r3, 0x90]",
            "bl fcn.08008b44",
            "mov r3, 0",
            "str r3, [r4, 0x18]",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r3, [r4, 4]",
            "ldr r3, [r3, 0x90]",
            "cmp r3, 0x1e",
            "beq 0x800986c",
            "bl osl_acp_war_enab",
            "cmp r0, 0",
            "bne 0x8009484",
            "bl osl_arch_is_coherent",
            "cmp r0, 0",
            "bne 0x8009484",
            "b 0x800949c",
            "ldrb r3, [r4, 0x34]",
            "cmp r3, 0",
            "bne 0x8009770",
            "add r6, r4, 0x24",
            "mov r5, 0",
            "ldr r0, [r6], 4",
            "cmp r0, 0",
            "beq 0x8009520",
            "ldr r3, [r7]",
            "tst r3, 2",
            "bne 0x8009950",
            "ldr r3, [r0]",
            "ldr r3, [r3, 8]",
            "blx r3",
            "add r5, r5, 1",
            "cmp r5, 4",
            "bne 0x80094fc",
            "mov r1, 1",
            "mov r0, r4",
            "bl fcn.080077d4",
            "mov r0, 1",
            "bl osl_delay",
            "ldr r0, [r4, 0x24]",
            "cmp r0, 0",
            "beq 0x8009564",
            "ldr r3, [r7]",
            "tst r3, 2",
            "bne 0x8009994",
            "ldr r3, [r0]",
            "ldr r3, [r3, 0x5c]",
            "blx r3",
            "add r6, r4, 0x174",
            "add sl, r4, 0x1b4",
            "mov r8, 0",
            "ldr r1, [r6], 4",
            "cmp r1, 0",
            "beq 0x8009598",
            "ldr r5, [r1, 8]",
            "mov r2, 0xc",
            "ldr r0, [r4, 0x10]",
            "bl osl_mfree",
            "cmp r5, 0",
            "mov r1, r5",
            "bne 0x800957c",
            "cmp r6, sl",
            "str r8, [r6, -4]",
            "bne 0x8009570",
            "b 0x800916c",
            "ldr r1, [r2, 0x48]",
            "cmp r1, 1",
            "bne 0x80091bc",
            "bic r0, r0, 0x800",
            "b 0x80091c8",
            "ldr r3, [r4, 4]",
            "ldr r3, [r3, 4]",
            "cmp r3, 0",
            "bne 0x800979c",
            "ldr r0, [r4, 0x168]",
            "ldr r1, [0x080099c8]",
            "bl getvar",
            "cmp r0, 0",
            "beq 0x80098c8",
            "bl bcm_atoi",
            "lsl r0, r0, 0x1c",
            "ldr r2, [r4, 0x164]",
            "lsr r6, r0, 0x10",
            "mov r0, r2",
            "mov r1, 4",
            "mov r2, 0xf000",
            "mov r3, r6",
            "bl si_pmu_chipcontrol",
            "b 0x80097b4",
            "movw r1, 0xcf26",
            "cmp r3, r1",
            "ldreq sl, [0x080099c4]",
            "addeq r5, sp, 4",
            "beq 0x800925c",
            "dsb sy",
            "ldr sl, [0x080099c4]",
            "ldr r3, [sl, 0xc]",
            "cmp r3, 0",
            "beq 0x8009634",
            "blx r3",
            "add r8, fp, 0x1e0",
            "add r5, sp, 4",
            "mov r3, 4",
            "ldr r0, [r4, 0x10]",
            "mov r1, r8",
            "mov r2, r5",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 4]",
            "movw r6, 0x3f1",
            "orr r3, r3, 0x100",
            "str r3, [fp, 0x1e0]",
            "b 0x8009674",
            "cmp r6, 9",
            "sub r6, r6, 0xa",
            "beq 0x8009698",
            "bl osl_delay",
            "ldr r0, [r4, 0x10]",
            "mov r3, 4",
            "mov r1, r8",
            "mov r2, r5",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 4]",
            "mov r0, 0xa",
            "tst r3, 0x1000000",
            "beq 0x8009664",
            "ldr r2, [r4, 0x164]",
            "movw r1, 0x5357",
            "movw r0, 0x4749",
            "ldr r3, [r2, 0x3c]",
            "cmp r3, r1",
            "cmpne r3, r0",
            "bne 0x8009250",
            "ldr r0, [r4, 0x168]",
            "ldr r1, [0x080099c8]",
            "bl getvar",
            "cmp r0, 0",
            "beq 0x8009830",
            "bl bcm_atoi",
            "lsl r0, r0, 4",
            "and r6, r0, 0xff",
            "ldr r3, [r7]",
            "tst r3, 2",
            "bne 0x8009980",
            "ldr r2, [r4, 0x164]",
            "ldr r3, [r2, 0x18]",
            "tst r3, 0x10000000",
            "beq 0x800925c",
            "mov r0, r2",
            "mov r1, 1",
            "mov r2, 0xf0",
            "mov r3, r6",
            "bl si_pmu_chipcontrol",
            "ldr r2, [r4, 0x164]",
            "b 0x800925c",
            "mov r0, r2",
            "mov r2, 0",
            "bl si_core_reset",
            "ldr r2, [r4, 0x164]",
            "ldr r3, [r2, 0x3c]",
            "b 0x8009210",
            "dsb sy",
            "ldr r3, [sl, 0xc]",
            "cmp r3, 0",
            "beq 0x8009738",
            "blx r3",
            "ldr r6, [r4, 8]",
            "mov r3, 4",
            "mov r2, r5",
            "ldr r0, [r4, 0x10]",
            "add r1, r6, 0x104",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 4]",
            "orr r3, r3, 0x800000",
            "str r3, [r6, 0x104]",
            "b 0x8009408",
            "ldr r1, [r2, 0x48]",
            "cmp r1, 9",
            "biceq r0, r0, 0x800",
            "b 0x80091c8",
            "mov r0, r4",
            "bl sym.chipstatsupd_1",
            "b 0x80094f4",
            "ldr r5, [r4, 0x164]",
            "mov r0, r5",
            "bl si_coreidx",
            "mov r1, 1",
            "lsl r1, r1, r0",
            "mov r0, r5",
            "bl si_pci_setup",
            "b 0x800916c",
            "mov r6, 0x80",
            "mov r0, r2",
            "mov r1, 7",
            "mov r2, 0xc0",
            "mov r3, r6",
            "bl si_pmu_chipcontrol",
            "ldr r3, [r7]",
            "tst r3, 2",
            "beq 0x8009284",
            "ldr r3, [r4, 4]",
            "mov r2, r6",
            "ldr r0, [0x080099cc]",
            "ldr r1, [r3, 4]",
            "bl printk",
            "b 0x8009284",
            "ldr r3, [r4, 4]",
            "ldr r1, [r3, 0x30]",
            "cmn r1, 1",
            "beq 0x8009908",
            "mov r0, r4",
            "bl fcn.08007850",
            "b osl_acp_war_enab",
            "ldr r2, [r7]",
            "tst r2, 2",
            "bne 0x8009940",
            "ldr r2, [r4, 0x164]",
            "mov r1, 0xc",
            "ldr r3, [r2, 0x3c]",
            "b 0x80091fc",
            "ldr r2, [r7]",
            "tst r2, 2",
            "bne 0x8009930",
            "ldr r0, [r4, 0x164]",
            "mov r1, 8",
            "mov r2, 0",
            "bl si_core_cflags",
            "b 0x800929c",
            "ldr r3, [r4, 0x164]",
            "movw r1, 0x5357",
            "ldr r2, [r3, 0x3c]",
            "cmp r2, r1",
            "beq 0x80098a0",
            "movw r1, 0xd144",
            "cmp r2, r1",
            "beq 0x80098b4",
            "ldr r6, [r3, 0x48]",
            "cmp r6, 0xa",
            "beq 0x80098c0",
            "cmp r6, 0xf",
            "moveq r6, 0xe0",
            "movne r6, 0x10",
            "b 0x80096d4",
            "mov r1, 0x44",
            "mov r2, r1",
            "bl si_core_cflags",
            "mov r0, r4",
            "mov r1, 6",
            "bl fcn.08007850",
            "ldr r3, [r4, 4]",
            "movw r2, 0x9c4",
            "str r2, [r3, 0x40]",
            "mov r2, 1",
            "ldr r3, [r4, 4]",
            "str r2, [r3, 0x44]",
            "b osl_acp_war_enab",
            "ldr r6, [r3, 0x48]",
            "cmp r6, 9",
            "bne 0x8009854",
            "mov r6, 0x80",
            "b 0x80096d4",
            "ldr r6, [r3, 0x48]",
            "cmp r6, 9",
            "bne 0x800985c",
            "mov r6, 0xe0",
            "b 0x80096d4",
            "ldr r2, [r4, 0x164]",
            "ldr r1, [r2, 0x3c]",
            "sub r3, r1, 0xd100",
            "sub r3, r3, 0x45",
            "cmp r1, r6",
            "cmpne r3, 1",
            "ldrhi r6, [r2, 0x48]",
            "bhi 0x80098f8",
            "ldr r6, [r2, 0x48]",
            "cmp r6, 1",
            "moveq r6, 0xe000",
            "beq 0x80095f0",
            "cmp r6, 0xf",
            "moveq r6, 0xe000",
            "movne r6, 0x1000",
            "b 0x80095f0",
            "mov r0, r4",
            "add r1, r1, 4",
            "bl fcn.08007850",
            "ldr r3, [r4, 4]",
            "mov r2, 0x64",
            "str r2, [r3, 0x40]",
            "mov r2, 1",
            "ldr r3, [r4, 4]",
            "str r2, [r3, 0x44]",
            "b osl_acp_war_enab",
            "ldr r1, [r3, 4]",
            "ldr r0, [0x080099d0]",
            "bl printk",
            "b 0x800981c",
            "ldr r1, [r3, 4]",
            "ldr r0, [0x080099d4]",
            "bl printk",
            "b 0x8009800",
            "ldr r3, [r4, 4]",
            "mov r2, r5",
            "ldr r0, [0x080099d8]",
            "ldr r1, [r3, 4]",
            "bl printk",
            "ldr r0, [r6, -4]",
            "b 0x8009514",
            "ldr r3, [r4, 4]",
            "ldr r0, [0x080099dc]",
            "ldr r1, [r3, 4]",
            "bl printk",
            "b 0x80091e0",
            "mov r2, r6",
            "ldr r1, [0x080099e0]",
            "ldr r0, [0x080099e4]",
            "bl printk",
            "b 0x80096e0",
            "ldr r3, [r4, 4]",
            "ldr r0, [0x080099e8]",
            "ldr r1, [r3, 4]",
            "bl printk",
            "ldr r0, [r4, 0x24]",
            "b 0x8009558",
            "ldr r3, [r0, 4]",
            "ldr r0, [0x080099ec]",
            "ldr r1, [r3, 4]",
            "bl printk",
            "b 0x8009148"
        ]
    },
    "fcn.08008b44": {
        "function_address": "0x08008b44",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r4, r0",
            "ldr r0, [r0, 0x164]",
            "movw r2, 0x5356",
            "mov r6, r1",
            "ldr r3, [r0, 0x3c]",
            "cmp r3, r2",
            "beq 0x8008dd0",
            "movw r2, 0x5357",
            "movw r1, 0x4749",
            "cmp r3, r2",
            "cmpne r3, r1",
            "bne 0x8008da8",
            "ldr r2, [r0, 0x48]",
            "cmp r2, 0xa",
            "beq 0x8008da8",
            "ldr r3, [r0, 0x18]",
            "tst r3, 0x10000000",
            "bne 0x8008e50",
            "mov r5, 0",
            "mov r1, r5",
            "mov r2, 0x1f",
            "mov r3, 0xf",
            "mov r0, r4",
            "bl sym.chipphywr_1",
            "mov r1, r5",
            "mov r0, r4",
            "mov r2, 0x16",
            "movw r3, 0x5284",
            "bl sym.chipphywr_1",
            "mov r1, r5",
            "mov r0, r4",
            "mov r2, 0x1f",
            "mov r3, 0xb",
            "bl sym.chipphywr_1",
            "mov r1, r5",
            "mov r0, r4",
            "mov r2, 0x17",
            "mov r3, 0x10",
            "bl sym.chipphywr_1",
            "mov r1, r5",
            "mov r0, r4",
            "mov r2, 0x1f",
            "mov r3, 0xf",
            "bl sym.chipphywr_1",
            "mov r1, r5",
            "mov r0, r4",
            "mov r2, 0x16",
            "movw r3, 0x5296",
            "bl sym.chipphywr_1",
            "mov r1, r5",
            "mov r0, r4",
            "mov r2, 0x17",
            "movw r3, 0x1073",
            "bl sym.chipphywr_1",
            "mov r1, r5",
            "mov r0, r4",
            "mov r2, 0x17",
            "movw r3, 0x9073",
            "bl sym.chipphywr_1",
            "mov r1, r5",
            "mov r0, r4",
            "mov r2, 0x16",
            "movw r3, 0x52b6",
            "bl sym.chipphywr_1",
            "mov r1, r5",
            "mov r0, r4",
            "mov r2, 0x17",
            "movw r3, 0x9273",
            "bl sym.chipphywr_1",
            "mov r1, r5",
            "mov r0, r4",
            "mov r2, 0x1f",
            "mov r3, 0xb",
            "add r5, r5, 1",
            "bl sym.chipphywr_1",
            "cmp r5, 5",
            "bne 0x8008b94",
            "ldr r0, [r4, 0x164]",
            "ldr r3, [r0, 0x3c]",
            "sub r1, r3, 0xd100",
            "movw r2, 0xb95c",
            "sub r1, r1, 0x45",
            "cmp r3, r2",
            "cmpne r1, 1",
            "bhi 0x8008d78",
            "ldr r3, [r0, 0x48]",
            "cmp r3, 1",
            "beq 0x8008ec8",
            "mov r5, 0",
            "mov r1, r5",
            "mov r2, 0",
            "mov r3, 0x8000",
            "mov r0, r4",
            "bl sym.chipphywr_1",
            "mov r1, r5",
            "mov r0, r4",
            "mov r2, 0x1f",
            "mov r3, 0xf",
            "bl sym.chipphywr_1",
            "mov r1, r5",
            "mov r0, r4",
            "mov r2, 0x13",
            "movw r3, 0x5555",
            "bl sym.chipphywr_1",
            "mov r1, r5",
            "mov r0, r4",
            "mov r2, 0x1f",
            "mov r3, 0xb",
            "add r5, r5, 1",
            "bl sym.chipphywr_1",
            "cmp r5, 5",
            "bne 0x8008cac",
            "ldr r3, [r4, 0x164]",
            "ldr r3, [r3, 0x44]",
            "cmp r3, 2",
            "beq 0x8008e78",
            "mov r5, 0",
            "mov r1, r5",
            "mov r2, 0x1f",
            "mov r3, 0xf",
            "mov r0, r4",
            "bl sym.chipphywr_1",
            "mov r1, r5",
            "mov r0, r4",
            "mov r2, 0xe",
            "mov r3, 7",
            "bl sym.chipphywr_1",
            "mov r1, r5",
            "mov r0, r4",
            "mov r2, 0xf",
            "mov r3, 2",
            "bl sym.chipphywr_1",
            "mov r1, r5",
            "mov r0, r4",
            "mov r2, 0x1f",
            "mov r3, 0xb",
            "add r5, r5, 1",
            "bl sym.chipphywr_1",
            "cmp r5, 5",
            "bne 0x8008d1c",
            "cmp r6, 0x1e",
            "popeq {r4, r5, r6, pc}",
            "ldr r3, [0x08008f2c]",
            "ldr r3, [r3]",
            "tst r3, 2",
            "popeq {r4, r5, r6, pc}",
            "ldr r3, [r4, 4]",
            "mov r2, r6",
            "ldr r0, [0x08008f30]",
            "ldr r1, [r3, 4]",
            "pop {r4, r5, r6, lr}",
            "b printk",
            "movw r2, 0xd144",
            "cmp r3, r2",
            "bne 0x8008c84",
            "ldr r3, [r0, 0x48]",
            "cmp r3, 9",
            "beq 0x8008d78",
            "ldr r3, [r0, 0x18]",
            "tst r3, 0x10000000",
            "beq 0x8008b90",
            "b 0x8008e50",
            "mov r5, 0",
            "mov r1, r5",
            "mov r2, 0x1f",
            "mov r3, 0x8b",
            "mov r0, r4",
            "bl sym.chipphywr_1",
            "mov r1, r5",
            "mov r0, r4",
            "mov r2, 0x15",
            "mov r3, 0x100",
            "bl sym.chipphywr_1",
            "mov r1, r5",
            "mov r0, r4",
            "mov r2, 0x1f",
            "mov r3, 0xf",
            "bl sym.chipphywr_1",
            "mov r1, r5",
            "mov r0, r4",
            "mov r2, 0x12",
            "movw r3, 0x2aaa",
            "bl sym.chipphywr_1",
            "mov r1, r5",
            "mov r0, r4",
            "mov r2, 0x1f",
            "mov r3, 0xb",
            "add r5, r5, 1",
            "bl sym.chipphywr_1",
            "cmp r5, 5",
            "bne 0x8008dd4",
            "ldr r0, [r4, 0x164]",
            "ldr r3, [r0, 0x3c]",
            "b 0x8008b64",
            "mov r1, 2",
            "mov r2, 0xc0000000",
            "mov r3, 0",
            "bl si_pmu_chipcontrol",
            "ldr r0, [r4, 0x164]",
            "mov r1, 4",
            "mov r2, 0x80000000",
            "mov r3, 0",
            "bl si_pmu_chipcontrol",
            "b 0x8008b90",
            "mov r5, 0",
            "mov r1, r5",
            "mov r2, 0x1f",
            "mov r3, 0x8b",
            "mov r0, r4",
            "bl sym.chipphywr_1",
            "mov r1, r5",
            "mov r0, r4",
            "mov r2, 0x11",
            "mov r3, 0x800",
            "bl sym.chipphywr_1",
            "mov r1, r5",
            "mov r0, r4",
            "mov r2, 0x1f",
            "mov r3, 0xb",
            "add r5, r5, 1",
            "bl sym.chipphywr_1",
            "cmp r5, 5",
            "bne 0x8008e7c",
            "b 0x8008d18",
            "mov r0, r4",
            "mov r1, r6",
            "mov r2, 2",
            "bl sym.chipphyrd_1",
            "movw r3, 0x600d",
            "cmp r0, r3",
            "bne 0x8008d78",
            "mov r0, r4",
            "mov r1, r6",
            "mov r2, 3",
            "bl sym.chipphyrd_1",
            "movw r3, 0x84a2",
            "cmp r0, r3",
            "bne 0x8008d78",
            "mov r0, r4",
            "mov r1, r6",
            "mov r2, 0x18",
            "movw r3, 0xf0e7",
            "bl sym.chipphywr_1",
            "mov r0, r4",
            "mov r1, r6",
            "mov r2, 0x1c",
            "mov r3, 0x8c00",
            "bl sym.chipphywr_1",
            "b 0x8008d78"
        ]
    },
    "fcn.080077d4": {
        "function_address": "0x080077d4",
        "instructions": [
            "cmp r1, 1",
            "push {r3, lr}",
            "mov r2, r1",
            "beq 0x800780c",
            "blo 0x8007818",
            "cmp r1, 2",
            "beq 0x8007808",
            "ldr r1, [0x08007848]",
            "ldr r1, [r1]",
            "tst r1, 1",
            "bne 0x8007830",
            "mvn r0, 0",
            "pop {r3, pc}",
            "mov r1, 0",
            "bl fcn.08007754",
            "mov r0, 0",
            "pop {r3, pc}",
            "ldr r0, [r0, 0x24]",
            "ldr r3, [r0]",
            "ldr r3, [r3, 0x88]",
            "blx r3",
            "mov r0, 0",
            "pop {r3, pc}",
            "ldr r3, [r0, 4]",
            "ldr r0, [0x0800784c]",
            "ldr r1, [r3, 4]",
            "bl printk",
            "mvn r0, 0",
            "pop {r3, pc}"
        ]
    },
    "sym.chipstatsupd_1": {
        "function_address": "0x08006d08",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r5, r0",
            "ldr r7, [r0, 4]",
            "sub sp, sp, 8",
            "ldr r4, [r0, 0xc]",
            "ldr r3, [r7, 0x3b4]",
            "tst r3, 1",
            "bne 0x8006e50",
            "ldr r3, [r7, 0x74]",
            "cmp r3, 0x80000000",
            "beq 0x8006d90",
            "add r8, r4, 0x420",
            "add r4, r4, 0x300",
            "add r8, r8, 8",
            "cmp r4, r8",
            "bhi 0x8006d90",
            "add r6, r0, 0x38",
            "add sl, sp, 4",
            "mov r1, r4",
            "mov r2, sl",
            "mov r3, 4",
            "ldr r0, [r5, 0x10]",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 4]",
            "str r3, [r6]",
            "ldr r3, [r5, 0xc]",
            "add r2, r3, 0x3a8",
            "cmp r2, r4",
            "addeq r4, r3, 0x3ac",
            "addeq r6, r6, 4",
            "add r4, r4, 4",
            "add r6, r6, 4",
            "cmp r8, r4",
            "bhs 0x8006d50",
            "ldr r3, [r5, 0x24]",
            "ldr r1, [r7, 0x19c]",
            "ldr r2, [r7, 0x1b0]",
            "ldr r3, [r3, 0xc]",
            "ldr sl, [r7, 0x1b4]",
            "ldr r8, [r7, 0x1b8]",
            "str r3, [r7, 0x1a4]",
            "ldr sb, [r5, 0x84]",
            "ldr r4, [r5, 0x80]",
            "ldr r6, [r5, 0x8c]",
            "ldr ip, [r5, 0x9c]",
            "ldr r0, [r5, 0xa0]",
            "add r4, sb, r4",
            "add r4, r4, r6",
            "ldr r6, [r7, 0x1c4]",
            "add r4, r4, ip",
            "ldr ip, [r7, 0x1a8]",
            "add r4, r4, r0",
            "ldr r0, [r7, 0x1bc]",
            "add r4, r4, r1",
            "ldr r1, [r7, 0x1c0]",
            "add r4, r4, r2",
            "ldr r2, [r7, 0x1cc]",
            "add r4, r4, sl",
            "add r4, r4, r8",
            "add r4, r4, r6",
            "str r4, [r7, 0x198]",
            "ldr sl, [r5, 0x130]",
            "ldr r8, [r5, 0x134]",
            "ldr r6, [r5, 0x13c]",
            "ldr r4, [r5, 0x140]",
            "add r3, r3, sl",
            "add r3, r3, r8",
            "ldr sl, [r5, 0x144]",
            "ldr r8, [r5, 0x148]",
            "add r3, r3, r6",
            "add r3, r3, r4",
            "ldr r6, [r5, 0x14c]",
            "ldr r4, [r5, 0x150]",
            "add r3, r3, sl",
            "add r3, r3, r8",
            "add r3, r3, r6",
            "add r3, r3, r4",
            "add r3, r3, ip",
            "add r3, r3, r0",
            "add r3, r3, r1",
            "add r3, r3, r2",
            "str r3, [r7, 0x1a0]",
            "add sp, sp, 8",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "fcn.08007850": {
        "function_address": "0x08007850",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "mov r4, r0",
            "sub sp, sp, 0xc",
            "cmp r1, 6",
            "ldrls pc, [pc, r1, lsl 2]",
            "b 0x80078f8",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, pc}",
            "ldr r3, [0x08007994]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "bne 0x8007974",
            "mvn r0, 0",
            "b 0x80078f0",
            "ldr r3, [r0, 4]",
            "mov r2, r1",
            "ldr r0, [0x0800799c]",
            "ldr r1, [r3, 4]",
            "bl printk",
            "mvn r0, 0",
            "b 0x80078f0",
            "bl 0x800efe8",
            "ldr r3, [r8, 4]",
            "add r3, r3, 1",
            "str r3, [r8, 4]",
            "ldr r2, [r5, 0x88]",
            "cmp r2, 0",
            "beq 0x800f2e8",
            "ldr r3, [fp]",
            "movw sb, 0",
            "movt sb, 0",
            "ldr r4, [sb, r2, lsl 2]",
            "tst r3, 2",
            "bne 0x800f458",
            "add r2, r4, r4, lsl 1",
            "lsl r2, r2, 2",
            "add r2, r2, 0x28",
            "ldr r3, [r7, r2]",
            "add r2, r7, r2",
            "cmp r2, r3",
            "beq 0x800f3dc",
            "cmp r3, 0",
            "beq 0x800f3dc",
            "ldr r2, [r3, 0x6c]",
            "tst r2, 8",
            "ldreq r3, [r3, 0xbc]",
            "ldrhne r2, [r3, 0xc]",
            "ldrheq r2, [r3]",
            "add r3, r4, 0x14",
            "ldr r3, [r5, r3, lsl 2]",
            "ubfxne r2, r2, 3, 9",
            "addeq r2, r2, 1",
            "ldr r3, [r3]",
            "cmp r2, r3",
            "bhi 0x800f400",
            "mov r1, r4",
            "mov r0, r7",
            "bl sym.et_skb_dequeue",
            "mov r4, r0",
            "ldr r3, [r8, 4]",
            "sub r3, r3, 1",
            "str r3, [r8, 4]",
            "bl 0x800f08c",
            "ldr r3, [fp]",
            "tst r3, 4",
            "bne 0x800f3b8",
            "tst r3, 8",
            "bne 0x800f3a0",
            "mov r1, r4",
            "ldr r0, [r5, 8]",
            "bl 0x800f0ac",
            "ldr r3, [fp]",
            "mov r4, r0",
            "tst r3, 2",
            "bne 0x800f428",
            "ldr r3, [r4, 0xc4]",
            "cmp r4, 0",
            "strne r8, [sp, 0x18]",
            "ldrh sl, [r3, 0xc]",
            "bne 0x800f190",
            "b 0x800efe8",
            "ldr r6, [r4, 8]",
            "mov sb, 0",
            "ldr r2, [r4, 0x6c]",
            "cmp sl, 0x81",
            "movne r1, 0",
            "moveq r1, 1",
            "add r3, r4, 8",
            "str sb, [r4, 8]",
            "cmp r6, sb",
            "moveq r1, 0",
            "bic r2, r2, 8",
            "cmp r1, sb",
            "str r2, [r4, 0x6c]",
            "beq 0x800f300",
            "mov r1, 4",
            "mov r0, r6",
            "bl 0x800f118",
            "ldr r1, [r4, 0xc4]",
            "mov r2, 0x10",
            "bl 0x800f124",
            "ldrb r3, [r4, 0x94]",
            "and r3, r3, 0xc",
            "cmp r3, 0xc",
            "beq 0x800f1d4",
            "ldr r3, [r7]",
            "ldr r0, [r3, 0x3ac]",
            "cmp r0, 0",
            "beq 0x800f154",
            "ldr r3, [r0]",
            "tst r3, 4",
            "bne 0x800f2b0",
            "ldr r3, [r5, 0x7c]",
            "mov r1, r4",
            "ldr r0, [r5, 0x80]",
            "ldr r3, [r3, 0x14]",
            "blx r3",
            "ldr r3, [r5, 0x188]",
            "cmp r6, 0",
            "ldr r2, [r5, 0x18c]",
            "add r3, r3, 1",
            "str r3, [r5, 0x188]",
            "ldr r3, [r4, 0x80]",
            "add r3, r2, r3",
            "str r3, [r5, 0x18c]",
            "beq 0x800f2c8",
            "mov r4, r6",
            "ldr r3, [r4, 0x6c]",
            "ands r2, r3, 8",
            "bne 0x800f0d8",
            "bic r3, r3, 8",
            "str r2, [r4, 8]",
            "str r3, [r4, 0x6c]",
            "add r3, r4, 8",
            "ldrb r2, [r3, 4]",
            "mov r6, 0",
            "ubfx r1, r2, 0, 3",
            "orr r1, r1, 1",
            "bfi r2, r1, 0, 3",
            "strb r2, [r3, 4]",
            "ldrb r3, [r4, 0x94]",
            "and r3, r3, 0xc",
            "cmp r3, 0xc",
            "bne 0x800f138",
            "ldr sb, [r4, 0xc4]",
            "ldr r8, [r4, 0xac]",
            "ldrh r3, [sb, 0xc]",
            "cmp r3, 0x81",
            "ldrheq r3, [sb, 0x10]",
            "rsb sb, sb, r8",
            "uxth sb, sb",
            "cmp r3, 8",
            "beq 0x800f30c",
            "movw lr, 0xdd86",
            "cmp r3, lr",
            "bne 0x800f138",
            "ldr r1, [r4, 0xb0]",
            "mov r3, 0",
            "mov r0, r4",
            "str r1, [sp, 0x10]",
            "mov r1, sb",
            "ldr r2, [sp, 0x10]",
            "ldrb ip, [r2, 6]",
            "mov r2, 0",
            "cmp ip, 0x11",
            "movne lr, 0x10",
            "moveq lr, 6",
            "str lr, [sp, 0x14]",
            "strh r2, [r8, lr]",
            "add lr, r8, lr",
            "ldr r2, [r4, 0x80]",
            "str lr, [sp, 0x1c]",
            "str ip, [sp, 0xc]",
            "rsb r2, sb, r2",
            "bl 0x800f24c",
            "ldr r2, [r4, 0x80]",
            "mov lr, r0",
            "ldr r1, [sp, 0x10]",
            "str r0, [r4, 0x8c]",
            "ldr ip, [sp, 0xc]",
            "rsb r2, sb, r2",
            "rev r3, ip",
            "add r0, r1, 8",
            "add r1, r1, 0x18",
            "rev r2, r2",
            "str lr, [sp]",
            "bl 0x800f27c",
            "ldr r2, [sp, 0x14]",
            "add r3, r0, r0, ror 16",
            "mvn r3, r3",
            "lsr r3, r3, 0x10",
            "strh r3, [r8, r2]",
            "ldr ip, [sp, 0xc]",
            "cmp ip, 0x11",
            "cmpeq r3, 0",
            "ldreq sb, [sp, 0x1c]",
            "mvneq r3, 0",
            "strheq r3, [sb]",
            "b 0x800f138",
            "mov r1, r4",
            "bl 0x800f2b4",
            "subs r4, r0, 0",
            "bne 0x800f154",
            "cmp r6, 0",
            "bne 0x800f18c",
            "ldr r8, [sp, 0x18]",
            "bl 0x800f2cc",
            "ldr r3, [r8, 4]",
            "add r3, r3, 1",
            "str r3, [r8, 4]",
            "ldr r2, [r5, 0x88]",
            "cmp r2, 0",
            "bne 0x800f004",
            "ldr r3, [r8, 4]",
            "sub r3, r3, 1",
            "str r3, [r8, 4]",
            "add sp, sp, 0x24",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "b 0x800f2fc",
            "cmp r6, 0",
            "bne 0x800f128",
            "b 0x800f1ac",
            "ldr lr, [r4, 0xb0]",
            "mov r1, sb",
            "mov r3, 0",
            "mov r0, r4",
            "ldrb ip, [lr, 9]",
            "str lr, [sp, 0x10]",
            "mov lr, 0",
            "cmp ip, 0x11",
            "movne r2, 0x10",
            "moveq r2, 6",
            "str r2, [sp, 0x14]",
            "strh lr, [r8, r2]",
            "add r2, r8, r2",
            "str r2, [sp, 0x1c]",
            "ldr r2, [r4, 0x80]",
            "str ip, [sp, 0xc]",
            "rsb r2, sb, r2",
            "bl 0x800f350",
            "ldr r3, [r4, 0x80]",
            "ldr r2, [sp, 0x10]",
            "str r0, [r4, 0x8c]",
            "ldr ip, [sp, 0xc]",
            "rsb sb, sb, r3",
            "ldr lr, [r2, 0x10]",
            "rev16 r1, ip",
            "ldr r2, [r2, 0xc]",
            "adds r3, r0, lr",
            "adcs r3, r3, r2",
            "adcs r3, r3, sb, lsl 8",
            "adcs r3, r3, r1",
            "adc r3, r3, 0",
            "ldr sb, [sp, 0x14]",
            "add r3, r3, r3, ror 16",
            "mvn r3, r3",
            "lsr r3, r3, 0x10",
            "strh r3, [r8, sb]",
            "b 0x800f298",
            "ldr r0, [0x0800f49c]",
            "ldr r1, [r4, 0xc4]",
            "ldr r2, [r4, 0x80]",
            "ldr r3, [r5, 4]",
            "bl 0x800f3b0",
            "b 0x800f0a4",
            "ldr r1, [r4, 0xc4]",
            "ldr r3, [r5, 4]",
            "ldr r0, [0x0800f4a0]",
            "ldr r2, [r4, 0x80]",
            "bl 0x800f3c8",
            "movw r1, 0",
            "movt r1, 0",
            "ldr r3, [r1]",
            "b 0x800f09c",
            "ldr r3, [r5, 0x88]",
            "mov lr, 1",
            "bic r4, r3, lr, lsl r4",
            "str r4, [r5, 0x88]",
            "ldr r3, [r8, 4]",
            "sub r3, r3, 1",
            "str r3, [r8, 4]",
            "bl 0x800f3f8",
            "b 0x800efe8",
            "ldrb r3, [r5, 0x3a6]",
            "cmp r3, 0",
            "beq 0x800f2e8",
            "ldr r2, [r7]",
            "mov r1, 0",
            "ldr r3, [r2, 0x7c]",
            "ldr r0, [r2, 0x80]",
            "ldr r3, [r3, 0x3c]",
            "blx r3",
            "b 0x800f2e8",
            "ldrh ip, [r0, 0xc]",
            "mov r2, r0",
            "ldr r3, [r0, 0x6c]",
            "ldr r1, [0x0800f4a4]",
            "ubfx ip, ip, 3, 9",
            "ldr r0, [0x0800f4a8]",
            "str ip, [sp]",
            "and r3, r3, 8",
            "ldr ip, [r4, 8]",
            "str ip, [sp, 4]",
            "bl 0x800f450",
            "b 0x800f0c0",
            "add r3, r4, 0x14",
            "ldr r0, [0x0800f4ac]",
            "ldr r1, [r5, r3, lsl 2]",
            "mov r3, r4",
            "ldr r1, [r1]",
            "str r1, [sp]",
            "ldr r1, [r5, 4]",
            "bl 0x800f474",
            "b 0x800f01c"
        ]
    },
    "sym.chipattach_1": {
        "function_address": "0x08009b00",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r5, r0",
            "ldr r7, [0x0800a558]",
            "sub sp, sp, 0x3c",
            "mov r8, r1",
            "mov r6, r2",
            "ldr r3, [r7]",
            "tst r3, 2",
            "bne 0x800a510",
            "mov r0, r8",
            "mov r1, 0x1b4",
            "bl osl_malloc",
            "subs r4, r0, 0",
            "beq 0x800a430",
            "mov r1, 0x1b4",
            "mov sl, 0",
            "bl __memzero",
            "str r5, [r4, 4]",
            "add r1, r4, 0x38",
            "ldr r0, [r5]",
            "add lr, r4, 0x168",
            "str r8, [r4, 0x10]",
            "add ip, r4, 0x16c",
            "mov r2, r6",
            "mov r3, 1",
            "str r0, [r4]",
            "str r1, [r5, 0x28]",
            "ldrh r0, [r5, 0x62]",
            "ldr r1, [r4, 0x10]",
            "stm sp, {sl, lr}",
            "str ip, [sp, 8]",
            "bl si_attach",
            "cmp r0, sl",
            "str r0, [r4, 0x164]",
            "beq 0x800a460",
            "bl si_corerev",
            "cmp r0, 0x80000000",
            "beq 0x800a3bc",
            "ldr r6, [r5, 4]",
            "cmp r6, 1",
            "beq 0x800a028",
            "ldr r0, [r4, 0x164]",
            "movw r1, 0x82d",
            "ldr r2, [r5, 0x8c]",
            "bl si_setcore",
            "subs sl, r0, 0",
            "beq 0x800a49c",
            "ldr r3, [r5, 0x74]",
            "cmp r3, 0x80000000",
            "beq 0x8009bd4",
            "ldr r0, [r4, 0x164]",
            "bl si_corerev",
            "str r0, [r5, 0x74]",
            "ldr r3, [r4, 0x164]",
            "mov r6, 0",
            "str sl, [r4, 0xc]",
            "ldr r3, [r3, 0x3c]",
            "str r3, [r5, 0x64]",
            "ldr r3, [r4, 0x164]",
            "ldr r3, [r3, 0x44]",
            "str r3, [r5, 0x68]",
            "ldr r3, [r4, 0x164]",
            "ldr r3, [r3, 0x48]",
            "str r3, [r5, 0x6c]",
            "ldr r0, [r4, 0x164]",
            "bl si_coreid",
            "str r0, [r5, 0x70]",
            "mov r2, 0x1e",
            "ldr r3, [r4, 0x164]",
            "ldr r1, [0x0800a55c]",
            "ldr r3, [r3, 4]",
            "str r2, [r5, 0x1c]",
            "strb r6, [r5, 0xc]",
            "subs r3, r3, r6",
            "movne r3, 1",
            "strb r3, [r5, 0x78]",
            "ldr r0, [r4, 0x168]",
            "bl getintvar",
            "str r0, [sp, 0x24]",
            "str r0, [r5, 0x170]",
            "ldr r0, [r4, 0x164]",
            "bl si_clock",
            "movw r3, 0xde83",
            "ldr r1, [0x0800a560]",
            "movt r3, 0x431b",
            "umull r2, r0, r3, r0",
            "lsr r0, r0, 0x12",
            "str r0, [r5, 0x10]",
            "ldr r0, [r4, 0x168]",
            "bl getintvar",
            "cmp r0, r6",
            "beq 0x800a1ec",
            "strb r6, [r5, 0xd]",
            "ldr r2, [r5, 4]",
            "ldr r0, [r4, 0x164]",
            "ldr r1, [r4, 0x168]",
            "bl fa_get_macaddr",
            "subs r6, r0, 0",
            "beq 0x800a47c",
            "add sl, r5, 0x9e",
            "mov r1, sl",
            "bl bcm_ether_atoe",
            "ldrb r1, [r5, 0x9f]",
            "ldrb r2, [r5, 0x9e]",
            "ldrb r3, [r5, 0xa0]",
            "ldrb r0, [r5, 0xa1]",
            "orr r2, r1, r2",
            "ldrb r1, [r5, 0xa2]",
            "orr r2, r2, r3",
            "ldrb r3, [r5, 0xa3]",
            "orr r2, r2, r0",
            "orr r2, r2, r1",
            "orrs r3, r2, r3",
            "beq 0x800a33c",
            "mov r1, sl",
            "mov r2, 6",
            "add r0, r5, 0x98",
            "bl memcpy",
            "ldr r3, [r4, 0x164]",
            "movw r2, 0xcf12",
            "movw r1, 0xcf1a",
            "ldr r3, [r3, 0x3c]",
            "cmp r3, r2",
            "cmpne r3, r1",
            "bne 0x800a130",
            "add sb, sp, 0x28",
            "mov r3, 0x1e",
            "str r3, [r5, 0x90]",
            "ldr r6, [r4, 0x164]",
            "mov r0, r6",
            "bl si_coreidx",
            "mov r1, 1",
            "lsl r1, r1, r0",
            "mov r0, r6",
            "movw r6, 0xcf1a",
            "bl si_pci_setup",
            "ldr r0, [r4, 0x164]",
            "movw r2, 0xcf12",
            "ldr r3, [r0, 0x3c]",
            "cmp r3, r2",
            "cmpne r3, r6",
            "movne r6, 0",
            "moveq r6, 1",
            "moveq r6, 0",
            "beq 0x800a0ac",
            "movw r2, 0xcf26",
            "cmp r3, r2",
            "beq 0x800a0ac",
            "mov r0, r4",
            "mov sl, 0x200",
            "bl sym.chipreset_1",
            "ldr r1, [0x0800a564]",
            "mov r0, sb",
            "ldr r2, [r5, 0x8c]",
            "mov r6, 0",
            "bl sprintf",
            "ldr r3, [r4, 0xc]",
            "mov r1, sb",
            "ldr r2, [r4, 0x164]",
            "mov r0, r8",
            "str sl, [sp, 4]",
            "mvn fp, 0",
            "add ip, r3, 0x220",
            "add r3, r3, sl",
            "str ip, [sp]",
            "mov ip, 0x700",
            "str ip, [sp, 0xc]",
            "mov ip, 0xe0",
            "str ip, [sp, 0x10]",
            "mov ip, 0x140",
            "str ip, [sp, 0x14]",
            "mov ip, 0x1e",
            "str ip, [sp, 0x18]",
            "str sl, [sp, 8]",
            "str r7, [sp, 0x1c]",
            "bl dma_attach",
            "ldr r3, [r4, 0xc]",
            "mov r1, sb",
            "ldr r2, [r4, 0x164]",
            "str r0, [r4, 0x24]",
            "mov r0, r8",
            "add r3, r3, 0x240",
            "stm sp, {r6, sl}",
            "str r6, [sp, 8]",
            "str r6, [sp, 0xc]",
            "str fp, [sp, 0x10]",
            "str r6, [sp, 0x14]",
            "str r6, [sp, 0x18]",
            "str r7, [sp, 0x1c]",
            "bl dma_attach",
            "ldr r3, [r4, 0xc]",
            "mov r1, sb",
            "ldr r2, [r4, 0x164]",
            "str r0, [r4, 0x28]",
            "mov r0, r8",
            "add r3, r3, 0x280",
            "stm sp, {r6, sl}",
            "str r6, [sp, 8]",
            "str r6, [sp, 0xc]",
            "str fp, [sp, 0x10]",
            "str r6, [sp, 0x14]",
            "str r6, [sp, 0x18]",
            "str r7, [sp, 0x1c]",
            "bl dma_attach",
            "ldr r3, [r4, 0xc]",
            "mov r1, sb",
            "ldr r2, [r4, 0x164]",
            "str r0, [r4, 0x2c]",
            "mov r0, r8",
            "add r3, r3, 0x2c0",
            "stm sp, {r6, sl}",
            "str r6, [sp, 8]",
            "str r6, [sp, 0xc]",
            "str fp, [sp, 0x10]",
            "str r6, [sp, 0x14]",
            "str r6, [sp, 0x18]",
            "str r7, [sp, 0x1c]",
            "bl dma_attach",
            "add r2, r4, 0x20",
            "mov r3, 4",
            "mov r1, r2",
            "str r0, [r4, 0x30]",
            "ldr r0, [r1, 4]!",
            "cmp r0, 0",
            "beq 0x800a3f8",
            "subs r3, r3, 1",
            "bne 0x8009e78",
            "mov r1, r5",
            "ldr r0, [r2, 4]!",
            "add r3, r3, 1",
            "cmp r0, 0",
            "add r0, r0, 4",
            "strne r0, [r1, 0x50]",
            "cmp r3, 4",
            "add r1, r1, 4",
            "bne 0x8009e90",
            "ldr r3, [r5, 0x74]",
            "sub r2, r3, 4",
            "cmp r3, 7",
            "movne r1, 0",
            "moveq r1, 1",
            "cmp r3, 7",
            "cmpne r2, 1",
            "bls 0x800a208",
            "cmp r3, 8",
            "beq 0x800a32c",
            "ldr r2, [r5, 4]",
            "mov r0, sb",
            "ldr r1, [0x0800a568]",
            "bl sprintf",
            "mov r1, sb",
            "ldr r0, [r4, 0x168]",
            "bl getintvar",
            "subs r0, r0, 0",
            "movne r0, 1",
            "ldr r1, [0x0800a56c]",
            "cmp r0, 0",
            "strb r0, [r5, 0x3a6]",
            "movne r3, 0x1fc00",
            "moveq r2, 0xfc00",
            "strne r3, [r4, 0x20]",
            "movne r3, 7",
            "strne r3, [r5, 0x174]",
            "movteq r2, 0xf01",
            "ldrne r3, [r4, 0x20]",
            "moveq r3, r2",
            "streq r2, [r4, 0x20]",
            "mov r2, 0x20",
            "ldr r0, [r4, 0x168]",
            "str r3, [r4, 0x1c]",
            "bl getgpiopin",
            "cmp r0, 0x20",
            "beq 0x8009fac",
            "mov r8, 1",
            "mov r2, 0",
            "lsl r6, r8, r0",
            "mov r3, r2",
            "ldr r0, [r4, 0x164]",
            "mov r1, r6",
            "bl si_gpioout",
            "mov r1, r6",
            "mov r2, r6",
            "mov r3, 0",
            "ldr r0, [r4, 0x164]",
            "bl si_gpioouten",
            "mov r0, 2",
            "bl osl_delay",
            "mov r3, 0",
            "mov r1, r6",
            "mov r2, r6",
            "ldr r0, [r4, 0x164]",
            "bl si_gpioout",
            "mov r0, 2",
            "bl osl_delay",
            "mov r3, 0x1e0",
            "strb r8, [r5, 0x3c]",
            "str r3, [r5, 0x34]",
            "mov r3, 0x200",
            "str r3, [r5, 0x38]",
            "mov r0, r4",
            "ldr r1, [r5, 0x90]",
            "bl sym.chipphyreset_1",
            "ldr r2, [sp, 0x24]",
            "tst r2, 0x80",
            "bne 0x800a360",
            "ldr r0, [r4, 0x164]",
            "movw r2, 0xcf12",
            "movw r1, 0xcf1a",
            "ldr r3, [r0, 0x3c]",
            "cmp r3, r2",
            "cmpne r3, r1",
            "beq 0x800a194",
            "movw r2, 0xcf26",
            "cmp r3, r2",
            "beq 0x800a194",
            "ldr r1, [0x0800a570]",
            "ldr r0, [r4, 0x168]",
            "bl getintvar",
            "subs r0, r0, 0",
            "movne r0, 1",
            "ldr r1, [0x0800a574]",
            "strb r0, [r5, 0x3a4]",
            "ldr r0, [r4, 0x168]",
            "bl getintvar",
            "subs r3, r0, 0",
            "movne r3, 1",
            "mov r0, r4",
            "strb r3, [r5, 0x3a5]",
            "add sp, sp, 0x3c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r0, [r4, 0x164]",
            "movw r2, 0xb95c",
            "ldr r3, [r0, 0x3c]",
            "sub r1, r3, 0xd100",
            "sub r1, r1, 0x45",
            "cmp r3, r2",
            "cmpne r1, 1",
            "bhi 0x8009ba8",
            "ldr r0, [r4, 0x168]",
            "ldr r1, [0x0800a578]",
            "bl getvar",
            "ldr r3, [r4, 0x164]",
            "ldr r3, [r3, 0x48]",
            "cmp r3, 0",
            "cmpne r0, 0",
            "beq 0x800a414",
            "ldr r1, [0x0800a57c]",
            "mov r2, 3",
            "bl strncmp",
            "cmp r0, 0",
            "bne 0x800a414",
            "mov r2, r6",
            "movw r1, 0x82d",
            "ldr r0, [r4, 0x164]",
            "bl si_findcoreidx",
            "mov ip, 0x86",
            "mov r1, r0",
            "mov r2, 0x100",
            "ldr r0, [r4, 0x164]",
            "mvn r3, 0",
            "str ip, [sp]",
            "bl si_core_wrapperreg",
            "b 0x8009ba4",
            "mov r2, r6",
            "movw r1, 0x82d",
            "bl si_setcore",
            "ldr r0, [r4, 0x164]",
            "bl si_iscoreup",
            "cmp r0, 0",
            "bne 0x800a0e4",
            "ldr r3, [r7]",
            "tst r3, 2",
            "bne 0x800a520",
            "mov r1, 0",
            "ldr r0, [r4, 0x164]",
            "mov r2, r1",
            "bl si_core_reset",
            "add r6, r6, 1",
            "cmp r6, 4",
            "beq 0x800a11c",
            "mov r2, r6",
            "movw r1, 0x82d",
            "ldr r0, [r4, 0x164]",
            "bl si_setcore",
            "ldr r0, [r4, 0x164]",
            "bl si_iscoreup",
            "cmp r0, 0",
            "beq 0x800a0c8",
            "add r6, r6, 1",
            "cmp r6, 4",
            "bne 0x800a0f0",
            "ldr r0, [r4, 0x164]",
            "movw r1, 0x82d",
            "ldr r2, [r5, 0x8c]",
            "bl si_setcore",
            "b 0x8009d50",
            "movw r2, 0xcf26",
            "cmp r3, r2",
            "beq 0x8009cf4",
            "add sb, sp, 0x28",
            "ldr r1, [0x0800a580]",
            "ldr r2, [r5, 4]",
            "mov r0, sb",
            "bl sprintf",
            "ldr r0, [r4, 0x168]",
            "mov r1, sb",
            "bl getvar",
            "cmp r0, 0",
            "beq 0x800a4d4",
            "bl bcm_atoi",
            "and r0, r0, 0x1f",
            "cmp r0, 0x1f",
            "str r0, [r5, 0x90]",
            "bne 0x8009d00",
            "ldr r3, [r7]",
            "tst r3, 1",
            "bne 0x800a548",
            "mov r0, r4",
            "bl sym.chipdetach_1",
            "mov r0, 0",
            "b 0x800a020",
            "ldr ip, [r5, 0x84]",
            "ldr r1, [r4]",
            "ldr r2, [r4, 0x168]",
            "ldr r3, [r5, 0x8c]",
            "str ip, [sp]",
            "bl fa_attach",
            "cmp r0, 0",
            "str r0, [r5, 0x3ac]",
            "beq 0x8009fec",
            "ldr r3, [r7]",
            "tst r3, 2",
            "bne 0x800a534",
            "bl fa_enable_device",
            "cmp r0, 0",
            "beq 0x8009fec",
            "ldr r3, [r7]",
            "tst r3, 1",
            "beq 0x800a184",
            "ldr r1, [r5, 4]",
            "ldr r0, [0x0800a584]",
            "bl printk",
            "b 0x800a184",
            "ldr r0, [r4, 0x168]",
            "ldr r1, [0x0800a588]",
            "bl getintvar",
            "cmp r0, r6",
            "movne r6, 0",
            "moveq r6, 1",
            "b 0x8009c70",
            "ldr r8, [0x0800a58c]",
            "cmp r1, 0",
            "mov r2, 1",
            "strh r2, [r8]",
            "bne 0x800a318",
            "mov r2, 3",
            "strh r2, [r8, 4]",
            "strh r2, [r8, 2]",
            "cmp r3, 8",
            "mov r3, 3",
            "strh r3, [r8, 6]",
            "moveq r2, 2",
            "ldreq r3, [0x0800a58c]",
            "mov r6, r4",
            "mov sl, 4",
            "strheq r2, [r3, 6]",
            "mov r3, 0",
            "strh r3, [r8, 0xc]",
            "mov r2, 2",
            "mov r3, 3",
            "strh r2, [r8, 0xa]",
            "strh r3, [r8, 0xe]",
            "ldr r0, [r6, 0x24]",
            "mov r1, 0",
            "ldrh r2, [r8]",
            "ldr r3, [r0]",
            "ldr r3, [r3, 0xc0]",
            "blx r3",
            "ldr r0, [r6, 0x24]",
            "mov r1, 1",
            "ldrh r2, [r8, 2]",
            "ldr r3, [r0]",
            "ldr r3, [r3, 0xc0]",
            "blx r3",
            "ldr r0, [r6, 0x24]",
            "mov r1, 2",
            "ldrh r2, [r8, 4]",
            "ldr r3, [r0]",
            "ldr r3, [r3, 0xc0]",
            "blx r3",
            "ldr r0, [r6, 0x24]",
            "mov r1, 3",
            "ldrh r2, [r8, 6]",
            "ldr r3, [r0]",
            "ldr r3, [r3, 0xc0]",
            "blx r3",
            "ldr r0, [r6, 0x24]",
            "mov r1, 0x100",
            "ldrh r2, [r8, 0xa]",
            "ldr r3, [r0]",
            "ldr r3, [r3, 0xc0]",
            "blx r3",
            "ldr r0, [r6, 0x24]",
            "movw r1, 0x101",
            "ldrh r2, [r8, 0xc]",
            "ldr r3, [r0]",
            "ldr r3, [r3, 0xc0]",
            "blx r3",
            "ldr r0, [r6, 0x24]",
            "movw r1, 0x102",
            "ldrh r2, [r8, 0xe]",
            "add r6, r6, 4",
            "ldr r3, [r0]",
            "ldr r3, [r3, 0xc0]",
            "blx r3",
            "subs sl, sl, 1",
            "bne 0x800a260",
            "b 0x8009ed8",
            "mov r2, 0",
            "strh r2, [r8, 4]",
            "mov r2, 1",
            "strh r2, [r8, 2]",
            "b 0x800a228",
            "ldr r8, [0x0800a58c]",
            "mov r2, 1",
            "strh r2, [r8]",
            "b 0x800a21c",
            "ldr r3, [r7]",
            "tst r3, 1",
            "beq 0x800a184",
            "ldr r1, [r5, 4]",
            "add r2, sp, 0x28",
            "mov r3, r6",
            "ldr r0, [0x0800a590]",
            "bl printk",
            "b 0x800a184",
            "ldr r0, [r4, 0x164]",
            "ldr r1, [r4, 0x168]",
            "bl adm_attach",
            "cmp r0, 0",
            "str r0, [r4, 0x170]",
            "beq 0x800a4f4",
            "bl adm_enable_device",
            "cmp r0, 0",
            "bne 0x800a4b8",
            "ldr r3, [sp, 0x24]",
            "tst r3, 0x100",
            "beq 0x8009fc4",
            "ldr r0, [r4, 0x170]",
            "bl adm_config_vlan",
            "cmp r0, 0",
            "beq 0x8009fc4",
            "ldr r3, [r7]",
            "tst r3, 1",
            "beq 0x800a184",
            "ldr r1, [r5, 4]",
            "ldr r0, [0x0800a594]",
            "bl printk",
            "b 0x800a184",
            "str r0, [r5, 0x74]",
            "movw r1, 0x5dc",
            "ldr r0, [r4, 0x164]",
            "mov r2, sl",
            "bl si_setcore",
            "cmp r0, 0",
            "str r0, [r4, 8]",
            "bne 0x8009b98",
            "ldr r3, [r7]",
            "tst r3, 1",
            "beq 0x800a184",
            "ldr r1, [r5, 4]",
            "ldr r0, [0x0800a598]",
            "bl printk",
            "b 0x800a184",
            "ldr r3, [r7]",
            "tst r3, 1",
            "beq 0x800a184",
            "ldr r1, [r5, 4]",
            "ldr r0, [0x0800a59c]",
            "bl printk",
            "b 0x800a184",
            "ldr r3, [r7]",
            "tst r3, 1",
            "beq 0x800a184",
            "ldr r1, [r5, 4]",
            "ldr r0, [0x0800a5a0]",
            "bl printk",
            "b 0x800a184",
            "ldr r0, [r7]",
            "ands r0, r0, 1",
            "beq 0x800a020",
            "ldr r5, [r5, 4]",
            "mov r0, r8",
            "bl osl_malloced",
            "mov r2, r0",
            "ldr r0, [0x0800a5a4]",
            "mov r1, r5",
            "bl printk",
            "mov r0, r4",
            "b 0x800a020",
            "ldr r3, [r7]",
            "tst r3, 1",
            "beq 0x800a184",
            "ldr r1, [r5, 4]",
            "ldr r0, [0x0800a5a8]",
            "bl printk",
            "b 0x800a184",
            "ldr r3, [r7]",
            "tst r3, 1",
            "beq 0x800a184",
            "ldr r1, [r5, 4]",
            "add r2, sp, 0x28",
            "ldr r0, [0x0800a5ac]",
            "bl printk",
            "b 0x800a184",
            "ldr r3, [r7]",
            "tst r3, 1",
            "beq 0x800a184",
            "ldr r1, [r5, 4]",
            "ldr r0, [0x0800a5b0]",
            "bl printk",
            "b 0x800a184",
            "ldr r3, [r7]",
            "tst r3, 1",
            "beq 0x800a184",
            "ldr r1, [r5, 4]",
            "ldr r0, [0x0800a5b4]",
            "bl printk",
            "b 0x800a184",
            "ldr r3, [r7]",
            "tst r3, 1",
            "beq 0x800a184",
            "ldr r1, [r5, 4]",
            "mov r2, sb",
            "ldr r0, [0x0800a5ac]",
            "bl printk",
            "b 0x800a184",
            "ldr r3, [r7]",
            "tst r3, 1",
            "beq 0x800a184",
            "ldr r1, [r5, 4]",
            "ldr r0, [0x0800a5b8]",
            "bl printk",
            "b 0x800a184",
            "ldr r1, [r5, 4]",
            "ldr r0, [0x0800a5bc]",
            "bl printk",
            "b 0x8009b24",
            "ldr r1, [r5, 4]",
            "mov r2, r6",
            "ldr r0, [0x0800a5c0]",
            "bl printk",
            "b 0x800a0d4",
            "ldr r0, [0x0800a5c4]",
            "ldr r1, [r5, 4]",
            "bl printk",
            "ldr r0, [r5, 0x3ac]",
            "b fa_enable_device",
            "ldr r1, [r5, 4]",
            "ldr r0, [0x0800a5c8]",
            "bl printk",
            "b 0x800a184"
        ]
    },
    "sym.chipdetach_1": {
        "function_address": "0x080099f0",
        "instructions": [
            "ldr r3, [0x08009af8]",
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r4, r0",
            "ldr r3, [r3]",
            "tst r3, 2",
            "bne 0x8009ae4",
            "cmp r4, 0",
            "popeq {r4, r5, r6, r7, r8, pc}",
            "ldr r0, [r4, 0x170]",
            "cmp r0, 0",
            "beq 0x8009a20",
            "bl adm_detach",
            "ldr r3, [r4, 4]",
            "mov r5, 0",
            "add r6, r4, 0x24",
            "mov r7, r5",
            "ldr r0, [r3, 0x3ac]",
            "bl fa_detach",
            "ldr r3, [r6], 4",
            "add r5, r5, 1",
            "cmp r3, 0",
            "mov r0, r3",
            "beq 0x8009a5c",
            "ldr r3, [r3]",
            "ldr r3, [r3]",
            "blx r3",
            "str r7, [r6, -4]",
            "cmp r5, 4",
            "bne 0x8009a38",
            "ldr r0, [r4, 0x164]",
            "cmp r0, 0",
            "beq 0x8009a88",
            "ldr r3, [r0, 0x3c]",
            "movw r2, 0xcf12",
            "movw r1, 0xcf1a",
            "cmp r3, r1",
            "cmpne r3, r2",
            "bne 0x8009acc",
            "ldr r3, [r4, 4]",
            "mov r5, 0",
            "str r5, [r3, 0x28]",
            "ldr r0, [r4, 0x164]",
            "bl si_detach",
            "ldr r1, [r4, 0x168]",
            "str r5, [r4, 0x164]",
            "cmp r1, r5",
            "beq 0x8009ab8",
            "ldr r0, [r4, 0x10]",
            "ldr r2, [r4, 0x16c]",
            "bl osl_mfree",
            "ldr r0, [r4, 0x10]",
            "mov r1, r4",
            "mov r2, 0x1b4",
            "pop {r4, r5, r6, r7, r8, lr}",
            "b osl_mfree",
            "movw r2, 0xcf26",
            "cmp r3, r2",
            "beq 0x8009a88",
            "mov r1, 0",
            "bl si_core_disable",
            "b 0x8009a88",
            "ldr r3, [r0, 4]",
            "ldr r0, [0x08009afc]",
            "ldr r1, [r3, 4]",
            "bl printk",
            "b 0x8009a08"
        ]
    },
    "sym.chipinit_1": {
        "function_address": "0x0800a648",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x34",
            "str r1, [sp, 0x10]",
            "movw r1, 0",
            "movt r1, 0",
            "mov r4, r0",
            "ldr r3, [r1]",
            "ldr r7, [r0, 0xc]",
            "ldr r5, [r0, 4]",
            "tst r3, 2",
            "bne 0x800aebc",
            "dsb sy",
            "ldr r6, [0x0800af38]",
            "ldr r3, [r6, 0xc]",
            "cmp r3, 0",
            "beq 0x800a68c",
            "blx r3",
            "mov r3, 0x1000000",
            "str r3, [r7, 0x100]",
            "ldr r3, [r5, 0x74]",
            "cmp r3, 8",
            "beq 0x800adc0",
            "mov r0, r4",
            "mov r1, 0",
            "bl fcn.0800a5cc",
            "ldr r1, [r4, 0xc]",
            "add r8, sp, 0x2c",
            "ldrb sl, [r5, 0x2d]",
            "mov r2, r8",
            "ldr r0, [r4, 0x10]",
            "mov r3, 4",
            "add r1, r1, 0x800",
            "add r1, r1, 8",
            "bl osl_pcie_rreg",
            "ldr sb, [sp, 0x2c]",
            "mov r0, r4",
            "bl fcn.0800753c",
            "cmp sl, 0",
            "orrne sl, sb, 0x10",
            "biceq sl, sb, 0x10",
            "dsb sy",
            "ldr r3, [r6, 0xc]",
            "cmp r3, 0",
            "beq 0x800a6fc",
            "blx r3",
            "ldr r3, [r4, 0xc]",
            "mov r0, r4",
            "str sl, [r3, 0x808]",
            "bl fcn.080075b0",
            "dsb sy",
            "ldr r3, [r6, 0xc]",
            "cmp r3, 0",
            "beq 0x800a720",
            "blx r3",
            "ldr r3, [r5, 0x98]",
            "add sl, r5, 0x98",
            "rev r3, r3",
            "str r3, [r7, 0x80c]",
            "dsb sy",
            "ldr r3, [r6, 0xc]",
            "cmp r3, 0",
            "beq 0x800a744",
            "blx r3",
            "ldrh r3, [sl, 4]",
            "lsr r2, r3, 8",
            "orr r3, r2, r3, lsl 8",
            "uxth r3, r3",
            "str r3, [r7, 0x810]",
            "ldrb r3, [r5, 0x2d]",
            "cmp r3, 0",
            "bne 0x800a770",
            "ldrb sl, [r5, 0x168]",
            "cmp sl, 0",
            "beq 0x800ac30",
            "ldrb r3, [r5, 0x2f]",
            "cmp r3, 0",
            "beq 0x800ac20",
            "mov r0, r4",
            "mov r1, 1",
            "bl fcn.080077d4",
            "dsb sy",
            "ldr r3, [r6, 0xc]",
            "cmp r3, 0",
            "beq 0x800a79c",
            "blx r3",
            "movw r3, 0x60e",
            "str r3, [r7, 0x814]",
            "ldr r1, [r5, 0x30]",
            "cmn r1, 1",
            "beq 0x800a828",
            "mov r0, r4",
            "bl fcn.08007850",
            "ldr sl, [r5, 0x90]",
            "cmp sl, 0x1e",
            "beq 0x800a92c",
            "ldr sb, [r4, 4]",
            "ldr r3, [sb, 0x30]",
            "cmn r3, 1",
            "beq 0x800a92c",
            "movw r1, 0",
            "movt r1, 0",
            "ldr r2, [r1]",
            "tst r2, 2",
            "bne 0x800aecc",
            "mov r2, 0",
            "mov r0, r4",
            "mov r1, sl",
            "bl sym.chipphyrd_1",
            "ldr r2, [sb, 0x30]",
            "movw r3, 0xcebf",
            "and r3, r0, r3",
            "sub r2, r2, 1",
            "cmp r2, 4",
            "ldrls pc, [pc, r2, lsl 2]",
            "b 0x800ad58",
            "ldr r3, [r5, 0x34]",
            "cmp r3, 0",
            "beq 0x800a92c",
            "ldrb r3, [r5, 0x3c]",
            "cmp r3, 0",
            "beq 0x800a92c",
            "ldr sb, [r5, 0x90]",
            "cmp sb, 0x1e",
            "beq 0x800a92c",
            "ldr sl, [r4, 4]",
            "ldr r3, [sl, 0x30]",
            "cmn r3, 1",
            "bne 0x800a92c",
            "ldrb r3, [sl, 0x3c]",
            "cmp r3, 0",
            "beq 0x800a92c",
            "movw r2, 0",
            "movt r2, 0",
            "ldr r3, [r2]",
            "tst r3, 2",
            "bne 0x800af20",
            "mov r1, sb",
            "mov r2, 4",
            "mov r0, r4",
            "bl sym.chipphyrd_1",
            "ldrh ip, [sl, 0x34]",
            "movw r3, 0xfe1f",
            "and r3, r0, r3",
            "mov r2, 4",
            "mov r0, r4",
            "mov r1, sb",
            "orr ip, r3, ip",
            "mov r3, ip",
            "str ip, [sp, 0x14]",
            "bl sym.chipphywr_1",
            "mov r1, sb",
            "mov r2, 9",
            "mov r0, r4",
            "bl sym.chipphyrd_1",
            "ldrh fp, [sl, 0x38]",
            "movw r3, 0xfcff",
            "and r3, r0, r3",
            "mov r1, sb",
            "mov r0, r4",
            "mov r2, 9",
            "orr fp, r3, fp",
            "mov r3, fp",
            "bl sym.chipphywr_1",
            "movw r1, 0",
            "movt r1, 0",
            "ldr r3, [r1]",
            "tst r3, 2",
            "bne 0x800aee0",
            "mov r1, sb",
            "mov r2, 0",
            "mov r0, r4",
            "bl sym.chipphyrd_1",
            "orr r3, r0, 0x200",
            "mov r1, sb",
            "uxth r3, r3",
            "mov r0, r4",
            "mov r2, 0",
            "bl sym.chipphywr_1",
            "mov r3, 0",
            "strb r3, [sl, 0x3c]",
            "ldr r3, [r5, 0x74]",
            "cmp r3, 7",
            "beq 0x800ad74",
            "ldr r0, [r4, 0x24]",
            "mov r2, 0x42",
            "mov r1, 0x43",
            "ldr r3, [r0]",
            "ldr r3, [r3, 0x94]",
            "blx r3",
            "ldr r2, [sp, 0x10]",
            "tst r2, 1",
            "beq 0x800adac",
            "add sb, r4, 0x20",
            "mov sl, 0",
            "ldr r0, [sb, 4]!",
            "add sl, sl, 1",
            "ldr r3, [r0]",
            "ldr r3, [r3, 4]",
            "blx r3",
            "cmp sl, 4",
            "bne 0x800a964",
            "ldr r0, [r4, 0x24]",
            "ldr r3, [r0]",
            "ldr r3, [r3, 0x58]",
            "blx r3",
            "ldr r0, [r4, 0x24]",
            "ldr r3, [r0]",
            "ldr r3, [r3, 0x74]",
            "blx r3",
            "ldr r3, [sp, 0x10]",
            "tst r3, 2",
            "bne 0x800add0",
            "ldr r2, [r4, 0x164]",
            "movw r1, 0xb95c",
            "ldr r3, [r2, 0x3c]",
            "sub r0, r3, 0xd100",
            "sub r0, r0, 0x45",
            "cmp r3, r1",
            "cmpne r0, 1",
            "bhi 0x800a9d8",
            "ldr r3, [r2, 0x48]",
            "cmp r3, 1",
            "beq 0x800ace4",
            "ldr r5, [r4, 0xc]",
            "mov r2, r8",
            "ldr r0, [r4, 0x10]",
            "mov r3, 4",
            "add r1, r5, 0x800",
            "add r1, r1, 8",
            "bl osl_pcie_rreg",
            "mov r0, r4",
            "ldr sl, [sp, 0x2c]",
            "bl fcn.0800753c",
            "ldr r3, [r4, 4]",
            "ldr r7, [r3, 0x74]",
            "cmp r7, 3",
            "movls r7, 0x800",
            "movhi r7, 0x2000",
            "orr r7, r7, sl",
            "bic r7, r7, 3",
            "dsb sy",
            "ldr r3, [r6, 0xc]",
            "cmp r3, 0",
            "beq 0x800aa30",
            "blx r3",
            "mov r0, r4",
            "str r7, [r5, 0x808]",
            "bl fcn.080075b0",
            "mov r0, 2",
            "bl osl_delay",
            "ldr r3, [r4, 4]",
            "ldr r3, [r3, 0x74]",
            "cmp r3, 4",
            "mvnlo r3, 0x800",
            "mvnhs r3, 0x2000",
            "and r7, r3, r7",
            "orr r7, r7, 3",
            "dsb sy",
            "ldr r3, [r6, 0xc]",
            "cmp r3, 0",
            "beq 0x800aa74",
            "blx r3",
            "str r7, [r5, 0x808]",
            "mov r2, r8",
            "ldr r0, [r4, 0x10]",
            "mov r3, 4",
            "add r1, r5, 4",
            "bl osl_pcie_rreg",
            "ldr r0, [r4, 0x164]",
            "movw r3, 0xb83a",
            "ldr r7, [sp, 0x2c]",
            "ldr r2, [r0, 0x3c]",
            "ubfx r7, r7, 8, 2",
            "cmp r2, r3",
            "cmpeq r7, 0",
            "beq 0x800aae8",
            "dsb sy",
            "ldr r3, [r6, 0xc]",
            "cmp r3, 0",
            "beq 0x800aac0",
            "blx r3",
            "ldr r0, [r4, 0x10]",
            "mov r3, 4",
            "add r1, r5, 0x1e0",
            "mov r2, r8",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 0x2c]",
            "orr r3, r3, 2",
            "str r3, [r5, 0x1e0]",
            "ldr r0, [r4, 0x164]",
            "ldr r3, [r0, 0x3c]",
            "ldr r2, [r0, 0x18]",
            "tst r2, 0x10000000",
            "beq 0x800ab04",
            "movw r2, 0xb83a",
            "cmp r3, r2",
            "cmpeq r7, 2",
            "beq 0x800addc",
            "movw r2, 0x5357",
            "movw r1, 0x4749",
            "cmp r3, r2",
            "cmpne r3, r1",
            "beq 0x800ab48",
            "movw r2, 0xd144",
            "cmp r3, r2",
            "beq 0x800ab48",
            "movw r2, 0x4716",
            "cmp r3, r2",
            "beq 0x800ab3c",
            "movw r2, 0xb83a",
            "cmp r3, r2",
            "bne 0x800ab90",
            "movw r7, 0x4cb",
            "movt r7, 0x3cb",
            "b 0x800ab50",
            "mov r7, 0xe1",
            "movt r7, 0x23",
            "dsb sy",
            "ldr r3, [r6, 0xc]",
            "cmp r3, 0",
            "beq 0x800ab64",
            "blx r3",
            "str r7, [r5, 0x104]",
            "dsb sy",
            "ldr r3, [r6, 0xc]",
            "cmp r3, 0",
            "beq 0x800ab7c",
            "blx r3",
            "movw r3, 0x7fff",
            "movt r3, 2",
            "str r3, [r5, 0xb30]",
            "ldr r3, [r4, 0x164]",
            "ldr r3, [r3, 0x3c]",
            "movw r2, 0xcf12",
            "movw r1, 0xcf1a",
            "cmp r3, r1",
            "cmpne r3, r2",
            "beq 0x800ac18",
            "movw r2, 0xcf26",
            "cmp r3, r2",
            "beq 0x800ac18",
            "add r1, r5, 0x190",
            "mov r2, r8",
            "ldr r0, [r4, 0x10]",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 0x2c]",
            "ldr r0, [r4, 0x164]",
            "bic r4, r3, 0x3f000000",
            "bl si_clock",
            "movw r3, 0xde83",
            "movt r3, 0x431b",
            "umull r1, r7, r3, r0",
            "lsr r7, r7, 0x12",
            "movw r3, 0x4dd3",
            "movt r3, 0x1062",
            "lsl r7, r7, 7",
            "umull r2, r7, r3, r7",
            "lsr r7, r7, 6",
            "sub r7, r7, 3",
            "dsb sy",
            "ldr r2, [r6, 0xc]",
            "cmp r2, 0",
            "beq 0x800ac10",
            "blx r2",
            "orr r4, r4, r7, lsl 24",
            "str r4, [r5, 0x190]",
            "add sp, sp, 0x34",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "mov r0, r4",
            "mov r1, 2",
            "bl fcn.080077d4",
            "b 0x800a788",
            "ldr r3, [r5, 0x164]",
            "cmp r3, 0",
            "beq 0x800a770",
            "mov fp, r3",
            "str r7, [sp, 0x14]",
            "add sb, sl, sl, lsl 1",
            "add sb, r5, sb, lsl 1",
            "add sb, sb, 0xa0",
            "ldrb r3, [sb, 4]",
            "add r7, sb, 4",
            "tst r3, 1",
            "beq et_msg_level",
            "mov r0, r4",
            "mov r1, r7",
            "bl sym.gmac_mf_lkup",
            "cmp r0, 0",
            "beq et_msg_level",
            "ldr r0, [r4, 0x10]",
            "mov r1, 0xc",
            "bl osl_malloc",
            "cmp r0, 0",
            "beq et_msg_level",
            "ldrh sb, [sb, 4]",
            "strh sb, [r0]",
            "ldrh r3, [r7, 2]",
            "strh r3, [r0, 2]",
            "ldrh r1, [r7, 4]",
            "strh r1, [r0, 4]",
            "ldrb r1, [r7, 4]",
            "ldrb r3, [r7, 3]",
            "ldrb r2, [r7, 5]",
            "add r3, r1, r3",
            "add r3, r3, r2",
            "and r3, r3, 0xf",
            "add r3, r3, 0x5c",
            "add r3, r4, r3, lsl 2",
            "ldr r2, [r3, 4]",
            "str r2, [r0, 8]",
            "str r0, [r3, 4]",
            "ldr fp, [r5, 0x164]",
            "add sl, sl, 1",
            "cmp fp, sl",
            "bhi 0x800ac44",
            "ldr r7, [sp, 0x14]",
            "b 0x800a770",
            "dsb sy",
            "ldr r3, [r6, 0xc]",
            "cmp r3, 0",
            "beq 0x800acf8",
            "blx r3",
            "ldr r0, [r4, 0x10]",
            "mov r1, r7",
            "mov r2, r8",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 0x2c]",
            "orr r3, r3, 0xc0000",
            "str r3, [r7]",
            "dsb sy",
            "ldr r3, [r6, 0xc]",
            "cmp r3, 0",
            "beq 0x800ad2c",
            "blx r3",
            "mov r3, 4",
            "ldr r0, [r4, 0x10]",
            "mov r1, r7",
            "mov r2, r8",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 0x2c]",
            "bic r3, r3, 0x200000",
            "bic r3, r3, 0x10",
            "str r3, [r7]",
            "b 0x800a9d8",
            "mov r0, r4",
            "mov r1, sl",
            "mov r2, 0",
            "bl sym.chipphywr_1",
            "ldr r3, [r5, 0x74]",
            "cmp r3, 7",
            "bne 0x800a938",
            "dsb sy",
            "ldr r3, [r6, 0xc]",
            "cmp r3, 0",
            "beq 0x800ad88",
            "blx r3",
            "mov r3, 4",
            "ldr r0, [r4, 0x10]",
            "add r1, r7, 0x1e8",
            "mov r2, r8",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 0x2c]",
            "orr r3, r3, 1",
            "str r3, [r7, 0x1e8]",
            "b 0x800a938",
            "ldr r0, [r4, 0x24]",
            "ldr r3, [r0]",
            "ldr r3, [r3, 0x68]",
            "blx r3",
            "b 0x800a9ac",
            "mov r0, r4",
            "mov r1, 1",
            "bl fcn.0800a5cc",
            "b 0x800a6ac",
            "ldr r0, [r5]",
            "bl et_intrson",
            "b 0x800a9ac",
            "mov r2, 0x10000",
            "mov r1, 1",
            "mov r3, r2",
            "bl si_pmu_chipcontrol",
            "ldr r3, [r4, 0x164]",
            "ldr r3, [r3, 0x3c]",
            "b 0x800ab04",
            "movw r2, 0",
            "movt r2, 0",
            "ldr r3, [r2]",
            "tst r3, 1",
            "beq 0x800acd0",
            "ldr r3, [r4, 4]",
            "mov r0, r7",
            "add r1, sp, 0x18",
            "ldr r7, [r3, 4]",
            "bl bcm_ether_ntoa",
            "mov r2, r0",
            "ldr r0, [0x0800af3c]",
            "mov r1, r7",
            "bl printk",
            "ldr fp, [r5, 0x164]",
            "b 0x800acd0",
            "movw r1, 0",
            "movt r1, 0",
            "ldr r3, [r1]",
            "tst r3, 1",
            "beq 0x800acd0",
            "ldr r3, [r4, 4]",
            "mov r0, r7",
            "add r1, sp, 0x18",
            "ldr r7, [r3, 4]",
            "bl bcm_ether_ntoa",
            "mov r2, r0",
            "ldr r0, [0x0800af40]",
            "mov r1, r7",
            "bl printk",
            "ldr fp, [r5, 0x164]",
            "b 0x800acd0",
            "movw r2, 0",
            "movt r2, 0",
            "ldr r3, [r2]",
            "tst r3, 1",
            "beq 0x800accc",
            "ldr r3, [r4, 4]",
            "ldr r0, [0x0800af44]",
            "ldr r1, [r3, 4]",
            "bl printk",
            "ldr fp, [r5, 0x164]",
            "b 0x800acd0",
            "ldr r1, [r5, 4]",
            "ldr r0, [0x0800af48]",
            "bl printk",
            "b 0x800a674",
            "mov r2, sl",
            "ldr r1, [sb, 4]",
            "ldr r0, [0x0800af4c]",
            "bl printk",
            "b 0x800a7e8",
            "ldr r3, [r4, 4]",
            "mov r1, sb",
            "mov r2, 0",
            "mov r0, r4",
            "ldr r3, [r3, 4]",
            "str r3, [sp, 0xc]",
            "bl sym.chipphyrd_1",
            "ldr r3, [sp, 0xc]",
            "mov r2, sb",
            "str r0, [sp, 4]",
            "ldr r0, [0x0800af50]",
            "mov r1, r3",
            "ldr r3, [sp, 0x14]",
            "str fp, [sp]",
            "bl printk",
            "b 0x800a8fc",
            "mov r2, sb",
            "ldr r1, [sl, 4]",
            "ldr r3, [sl, 0x34]",
            "ldr r0, [0x0800af54]",
            "bl printk",
            "b 0x800a87c",
            "stclvs p0, c2, [r7, -0xe8]!",
            "cmpvc pc, 0x84000001",
            "strbtvs r6, [r5], -0x570",
            "ldrbvc r2, [r3, -0x3a]!",
            "rsbvc r7, pc, 0x70",
            "invalid",
            "strtvs r7, [r5], -0x465",
            "stmdavs r3!, {r1, r3, r4, r5, sp} ^",
            "ldmdavs r0!, {r0, r3, r5, r6, ip, sp, lr} ^",
            "blo 0x9931fd0",
            "strbtvc r6, [pc], -0xe20",
            "rsbsvc r7, r5, r0, lsr 6",
            "ldrbtvc r6, [r2], -0xf70",
            "andeq r6, sl, r5, ror 8",
            "strtvs r7, [r5], -0x465",
            "stmdavs r3!, {r1, r3, r4, r5, sp} ^",
            "ldmdavs r0!, {r0, r3, r5, r6, ip, sp, lr} ^",
            "blo 0x9931ff0",
            "strbtvs r6, [sb], -0x420",
            "strbtvc r6, [pc], -0xe20",
            "stclvs p3, c6, [0x08015598]!",
            "strbtvc r6, [r5], -0xc70",
            "andeq r0, r0, r5, ror 20",
            "invalid"
        ]
    },
    "fcn.0800a5cc": {
        "function_address": "0x0800a5cc",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r5, r1",
            "ldr r1, [r0, 0xc]",
            "sub sp, sp, 8",
            "mov r4, r0",
            "add r2, sp, 4",
            "mov r3, 4",
            "ldr r0, [r0, 0x10]",
            "add r1, r1, 0x800",
            "add r1, r1, 8",
            "bl osl_pcie_rreg",
            "ldr r6, [sp, 4]",
            "mov r0, r4",
            "bl fcn.0800753c",
            "cmp r5, 0",
            "bic r5, r6, 0x100",
            "bicne r5, r5, 0x10000000",
            "orreq r5, r5, 0x10000000",
            "dsb sy",
            "ldr r3, [0x0800a644]",
            "ldr r3, [r3, 0xc]",
            "cmp r3, 0",
            "beq 0x800a62c",
            "blx r3",
            "ldr r3, [r4, 0xc]",
            "mov r0, r4",
            "str r5, [r3, 0x808]",
            "bl fcn.080075b0",
            "add sp, sp, 8",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.gmac_mf_lkup": {
        "function_address": "0x08006bdc",
        "instructions": [
            "push {r4, r5, r6}",
            "ldrb ip, [r1, 4]",
            "ldrb r3, [r1, 3]",
            "ldrb r2, [r1, 5]",
            "add r3, ip, r3",
            "add r3, r3, r2",
            "and r3, r3, 0xf",
            "add r3, r0, r3, lsl 2",
            "ldr r3, [r3, 0x174]",
            "cmp r3, 0",
            "beq 0x8006c6c",
            "ldrh r5, [r1, 2]",
            "ldrh r4, [r1, 4]",
            "ldrh r0, [r3, 2]",
            "ldrh r6, [r3, 4]",
            "ldrh ip, [r1]",
            "ldrh r2, [r3]",
            "eor r0, r5, r0",
            "eor r1, r4, r6",
            "orr r0, r0, r1",
            "eor r2, ip, r2",
            "orrs r0, r0, r2",
            "bne 0x8006c60",
            "b 0x8006c70",
            "ldrh r0, [r3, 2]",
            "ldrh r1, [r3, 4]",
            "ldrh r2, [r3]",
            "eor r0, r5, r0",
            "eor r1, r4, r1",
            "orr r0, r0, r1",
            "eor r2, ip, r2",
            "orrs r0, r0, r2",
            "beq 0x8006c70",
            "ldr r3, [r3, 8]",
            "cmp r3, 0",
            "bne 0x8006c3c",
            "mvn r0, 0",
            "pop {r4, r5, r6}",
            "bx lr"
        ]
    },
    "sym.fa_napt_del": {
        "function_address": "0x0800e00c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "subs fp, r2, 0",
            "sub sp, sp, 0xc",
            "add r3, r1, 4",
            "mov r5, r1",
            "mov r6, r0",
            "str r3, [sp, 4]",
            "ldrb r7, [r1, 0x28]",
            "ldrh r8, [r1, 0x24]",
            "ldrh sl, [r1, 0x26]",
            "beq 0x800e1a8",
            "ldmib r1, {r3, r4}",
            "ldr r1, [r1, 0xc]",
            "ldr r2, [r5, 0x10]",
            "add r4, r4, r3",
            "ldr r3, [r5, 0x14]",
            "add r4, r4, r1",
            "ldr r1, [r5, 0x18]",
            "add r4, r4, r2",
            "ldr r2, [r5, 0x1c]",
            "add r4, r4, r3",
            "ldr r3, [r5, 0x20]",
            "add r4, r4, r1",
            "add r4, r4, r2",
            "add r4, r4, r3",
            "add r4, r4, r7",
            "add r4, r4, r8",
            "add r4, r4, sl",
            "uxth r3, r4",
            "ldr r0, [r6, 0x10]",
            "add r4, r3, r4, lsr 16",
            "bl et_fa_lock",
            "add r4, r4, r4, lsr 8",
            "ldr r2, [r6, 0x20]",
            "and r3, r4, 0xff",
            "ldr r4, [r2, r3, lsl 2]",
            "cmp r4, 0",
            "beq 0x800e108",
            "mov sb, 0",
            "cmp fp, 0",
            "bne 0x800e18c",
            "ldr r0, [r4, 0x2c]",
            "ldr r2, [r4, 0x1c]",
            "ldr ip, [r5, 0x14]",
            "ldr r1, [r5, 4]",
            "eor r0, ip, r0",
            "eor r2, r1, r2",
            "orr r0, r0, r2",
            "ldrh ip, [r4, 0x3c]",
            "ldrb r2, [r4, 0x40]",
            "ldrh r1, [r4, 0x3e]",
            "eor ip, r8, ip",
            "eor r2, r7, r2",
            "orr r2, ip, r2",
            "eor r1, sl, r1",
            "orr r2, r2, r1",
            "orrs r2, r0, r2",
            "beq 0x800e110",
            "ldr r2, [r4, 0x18]",
            "mov sb, r4",
            "cmp r2, 0",
            "mov r4, r2",
            "bne 0x800e0a8",
            "mov r5, 0",
            "b 0x800e178",
            "cmp sb, 0",
            "mov r0, r6",
            "ldrne r3, [r4, 0x18]",
            "ldreq r2, [r6, 0x20]",
            "ldreq r1, [r4, 0x18]",
            "strne r3, [sb, 0x18]",
            "streq r1, [r2, r3, lsl 2]",
            "mov r1, r4",
            "bl fcn.0800cd1c",
            "ldr r2, [r4, 0xc]",
            "movw r3, 0x1026",
            "mov r1, 0",
            "cmp r4, 0",
            "mov r5, r0",
            "add r2, r2, 8",
            "add r2, r6, r2, lsl 2",
            "str r1, [r2, 4]",
            "ldrh r2, [r6, r3]",
            "sub r2, r2, 1",
            "strh r2, [r6, r3]",
            "beq 0x800e178",
            "ldr r0, [r6, 8]",
            "bl si_osh",
            "mov r1, r4",
            "mov r2, 0x44",
            "bl osl_mfree",
            "ldr r0, [r6, 0x10]",
            "bl et_fa_unlock",
            "mov r0, r5",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "add r0, r4, 0x1c",
            "ldr r1, [sp, 4]",
            "mov r2, 0x20",
            "str r3, [sp]",
            "bl memcmp",
            "ldr r3, [sp]",
            "b 0x800e0cc",
            "ldr r4, [r1, 0x14]",
            "ldr r3, [r1, 4]",
            "add r4, r4, r3",
            "add r4, r4, r7",
            "add r4, r4, r8",
            "add r4, r4, sl",
            "b 0x800e07c"
        ]
    },
    "fcn.0800cd1c": {
        "function_address": "0x0800cd1c",
        "instructions": [
            "cmp r0, 0",
            "cmpne r1, 0",
            "push {r4, r5, r6, r7, lr}",
            "mov r4, r1",
            "sub sp, sp, 0x3c",
            "mov r6, r0",
            "mvneq r5, 0",
            "bne 0x800cd48",
            "mov r0, r5",
            "add sp, sp, 0x3c",
            "pop {r4, r5, r6, r7, pc}",
            "add r7, sp, 0xc",
            "ldr r2, [r1, 0xc]",
            "mov r1, r7",
            "bl fcn.0800af60",
            "cmn r0, 0x10",
            "mov r5, r0",
            "beq 0x800ceb0",
            "ldrb r1, [r4, 8]",
            "add r3, sp, 0x38",
            "cmp r1, 0",
            "moveq r1, 6",
            "movne r1, 7",
            "add r2, r3, r1, lsl 2",
            "ldr r3, [r2, -0x2c]",
            "tst r3, 0x100000",
            "beq 0x800cec0",
            "bic r3, r3, 0x100000",
            "mov r0, r6",
            "str r3, [r2, -0x2c]",
            "mov r1, r7",
            "ldr r2, [r4, 0xc]",
            "bl fcn.0800b7b4",
            "cmn r0, 0x10",
            "mov r5, r0",
            "beq 0x800cedc",
            "ldrb r2, [r4, 1]",
            "movw r3, 0x1028",
            "add r1, r6, r2",
            "ldrb r3, [r1, r3]",
            "cmp r3, 0",
            "addne r1, r2, 0x850",
            "addne r1, r1, 4",
            "bne 0x800ce18",
            "add r1, r2, 0x850",
            "add r1, r1, 4",
            "add r0, r6, r1, lsl 1",
            "ldrh r0, [r0, 2]",
            "cmp r0, 0",
            "beq 0x800ce18",
            "add r1, r6, r1, lsl 1",
            "sub r0, r0, 1",
            "strh r0, [r1, 2]",
            "ldrb r3, [r4, 1]",
            "add r3, r3, 0x850",
            "add r3, r3, 4",
            "add r3, r6, r3, lsl 1",
            "ldrh r3, [r3, 2]",
            "cmp r3, 0",
            "beq 0x800ce4c",
            "mvn r3, 0x7f",
            "strb r3, [r4, 1]",
            "b 0x800cd3c",
            "add r1, r6, r1, lsl 1",
            "ldr r0, [0x0800cefc]",
            "ldrh ip, [r1, 2]",
            "ldr r1, [0x0800cf00]",
            "str ip, [sp]",
            "bl printk",
            "ldrb r2, [r4, 1]",
            "add r2, r2, 0x850",
            "add r1, r2, 4",
            "add r3, r6, r1, lsl 1",
            "ldrh r0, [r3, 2]",
            "cmp r0, 0",
            "bne 0x800cde4",
            "add r7, sp, 0x2c",
            "mov r1, 0xc",
            "mov r0, r7",
            "bl __memzero",
            "mov r0, r6",
            "mov r1, r7",
            "ldrb r2, [r4, 1]",
            "bl fcn.0800ba1c",
            "cmn r0, 0x10",
            "beq 0x800ceec",
            "movw r2, 0x10a8",
            "ldrb r3, [r6, r2]",
            "cmp r3, 0x80",
            "ldrbeq r3, [r4, 1]",
            "strbeq r3, [r6, r2]",
            "movw r2, 0x1028",
            "ldrb r1, [r4, 1]",
            "add r1, r6, r1",
            "strb r3, [r1, r2]",
            "movw r3, 0x10a8",
            "ldrb r2, [r4, 1]",
            "strb r2, [r6, r3]",
            "mvn r3, 0x7f",
            "strb r3, [r4, 1]",
            "b 0x800cd3c",
            "ldr r1, [0x0800cf04]",
            "ldr r0, [0x0800cf08]",
            "bl printk",
            "b 0x800cd3c",
            "str r3, [sp]",
            "mov r3, r1",
            "ldr r2, [r4, 0xc]",
            "ldr r1, [0x0800cf04]",
            "ldr r0, [0x0800cf0c]",
            "bl printk",
            "b 0x800cd3c",
            "ldr r1, [0x0800cf04]",
            "ldr r0, [0x0800cf10]",
            "bl printk",
            "b 0x800cd3c",
            "ldr r1, [0x0800cf00]",
            "ldr r0, [0x0800cf14]",
            "bl printk",
            "b 0x800cd3c"
        ]
    },
    "sym.etc_iovar": {
        "function_address": "0x080023e8",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r7, r2",
            "ldr r5, [0x08002974]",
            "sub sp, sp, 0x138",
            "mov r6, r0",
            "mov r4, r1",
            "ldr r8, [sp, 0x150]",
            "ldr r2, [r5]",
            "tst r2, 2",
            "bne 0x8002928",
            "rsbs r2, r3, 1",
            "movlo r2, 0",
            "cmp r4, 2",
            "moveq r2, 0",
            "cmp r2, 0",
            "bne 0x8002638",
            "sub r4, r4, 2",
            "cmp r4, 0x7f",
            "ldrls pc, [pc, r4, lsl 2]",
            "b 0x8002638",
            "mvn r0, 0",
            "add sp, sp, 0x138",
            "pop {r4, r5, r6, r7, r8, pc}",
            "mov r2, r1",
            "ldr r0, [0x0800297c]",
            "ldr r1, [r6, 4]",
            "str r3, [sp, 4]",
            "bl printk",
            "ldr r3, [sp, 4]",
            "b 0x8002410",
            "ldr ip, [sp, 0x20]",
            "mov r3, 4",
            "ldr r0, [r5, 0xc]",
            "mov r2, r6",
            "add r1, ip, r3",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x34]",
            "mov r0, r4",
            "ldr r1, [0x08004c50]",
            "bl bcm_bprintf",
            "ldr r2, [sp, 0x20]",
            "mov r3, 4",
            "ldr r0, [r5, 0xc]",
            "add r1, r2, 8",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x34]",
            "mov r0, r4",
            "ldr r1, [0x08004c54]",
            "bl bcm_bprintf",
            "mov r0, r4",
            "ldr r1, [0x08004b84]",
            "bl bcm_bprintf",
            "cmp r8, 0x1e",
            "beq 0x8004b70",
            "mov r2, 0",
            "mov r1, r8",
            "mov r0, r5",
            "bl sym.chipphyrd",
            "mov r1, r8",
            "mov r6, r0",
            "mov r2, 1",
            "mov r0, r5",
            "bl sym.chipphyrd",
            "mov r1, r8",
            "mov sl, r0",
            "mov r2, 2",
            "mov r0, r5",
            "bl sym.chipphyrd",
            "mov r1, r8",
            "mov r7, r0",
            "mov r2, 3",
            "mov r0, r5",
            "bl sym.chipphyrd",
            "mov r3, sl",
            "mov r2, r6",
            "str r0, [sp, 4]",
            "mov r0, r4",
            "ldr r1, [0x08004c58]",
            "str r7, [sp]",
            "bl bcm_bprintf",
            "mov r1, r8",
            "mov r2, 4",
            "mov r0, r5",
            "bl sym.chipphyrd",
            "mov r1, r8",
            "mov sl, r0",
            "mov r2, 5",
            "mov r0, r5",
            "bl sym.chipphyrd",
            "mov r1, r8",
            "mov r7, r0",
            "mov r2, 0x18",
            "mov r0, r5",
            "bl sym.chipphyrd",
            "mov r1, r8",
            "mov r6, r0",
            "mov r2, 0x19",
            "mov r0, r5",
            "bl sym.chipphyrd",
            "ldr r1, [0x08004c5c]",
            "mov r2, sl",
            "str r0, [sp, 4]",
            "mov r3, r7",
            "mov r0, r4",
            "str r6, [sp]",
            "bl bcm_bprintf",
            "add sp, sp, 0x3c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "strdeq r1, r2, [r0], -ip",
            "andeq r1, r0, r4, lsl r4",
            "andeq r1, r0, r8, lsr 8",
            "andeq r1, r0, r0, asr 8",
            "andeq r1, r0, r4, asr r4",
            "andeq r1, r0, r4, ror 8",
            "andeq r1, r0, r8, ror r4",
            "andeq r1, r0, ip, lsl 9",
            "andeq r1, r0, r0, lsr 9",
            "strheq r1, [r0], -r4",
            "andeq r1, r0, r8, asr 9",
            "ldrdeq r1, r2, [r0], -r8",
            "andeq r1, r0, ip, ror 9",
            "andeq r1, r0, r0, lsl 10",
            "andeq r1, r0, r8, lsl r5",
            "andeq r1, r0, ip, lsr 10",
            "andeq r1, r0, ip, lsr r5",
            "andeq r1, r0, ip, asr 10",
            "andeq r1, r0, r4, ror 10",
            "andeq r1, r0, ip, ror r5",
            "muleq r0, r4, r5",
            "andeq r1, r0, ip, lsr 11",
            "andeq r1, r0, r4, asr 11",
            "ldrdeq r1, r2, [r0], -r8",
            "andeq r1, r0, ip, ror 11",
            "andeq r1, r0, r4, lsl 12",
            "andeq r1, r0, ip, lsl r6",
            "andeq r1, r0, r4, lsr r6",
            "andeq r1, r0, r8, asr 12",
            "andeq r1, r0, ip, asr r6",
            "andeq r1, r0, r4, ror r6",
            "andeq r1, r0, r8, lsl 13",
            "andeq r1, r0, r0, lsr 13",
            "strheq r1, [r0], -r4",
            "andeq r1, r0, r4, asr 13",
            "ldrdeq r1, r2, [r0], -r4",
            "andeq r1, r0, ip, ror 13",
            "andeq r1, r0, r4, lsl 14",
            "andeq r1, r0, ip, lsl r7",
            "andeq r1, r0, r4, lsr r7",
            "andeq r1, r0, ip, asr 14",
            "andeq r1, r0, r4, ror 14",
            "andeq r1, r0, ip, ror r7",
            "muleq r0, r0, r7",
            "andeq r1, r0, r4, lsr 15",
            "strheq r1, [r0], -r8",
            "ldrdeq r1, r2, [r0], -r0",
            "andeq r1, r0, r4, ror 15",
            "strdeq r1, r2, [r0], -ip",
            "andeq r1, r0, r8, lsr 16"
        ]
    },
    "sym.fa_napt_live": {
        "function_address": "0x0800e244",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sl, lr}",
            "mov r4, r1",
            "ldr r3, [r1, 0x4c]",
            "sub sp, sp, 0x34",
            "mov r5, r0",
            "mov sl, r2",
            "cmp r3, 0",
            "beq 0x800e26c",
            "add sp, sp, 0x34",
            "pop {r4, r5, r6, r7, r8, sl, pc}",
            "ldrh r6, [r1, 0x24]",
            "ldrb r7, [r1, 0x28]",
            "ldrh r8, [r1, 0x26]",
            "ldr r0, [r0, 0x10]",
            "bl et_fa_lock",
            "ldr r0, [r5, 0x20]",
            "mov r1, sl",
            "add r2, r4, 4",
            "add r3, r4, 0x14",
            "str r6, [sp, 4]",
            "str r7, [sp]",
            "str r8, [sp, 8]",
            "bl fcn.0800c704",
            "subs r6, r0, 0",
            "beq 0x800e2e4",
            "mov r0, r5",
            "add r1, sp, 0x10",
            "ldr r2, [r6, 0xc]",
            "bl fcn.0800af60",
            "cmp r0, 0",
            "bne 0x800e2f0",
            "ldr r3, [sp, 0x14]",
            "ldr r1, [sp, 0x10]",
            "ldr r2, [r6, 0x10]",
            "lsl r3, r3, 0x1d",
            "orr r3, r3, r1, lsr 3",
            "cmp r2, r3",
            "strne r3, [r6, 0x10]",
            "movne r3, 1",
            "strne r3, [r4, 0x4c]",
            "ldr r0, [r5, 0x10]",
            "bl et_fa_unlock",
            "b 0x800e264",
            "ldr r1, [0x0800e300]",
            "ldr r0, [0x0800e304]",
            "bl printk",
            "b 0x800e2e4"
        ]
    },
    "fcn.0800c704": {
        "function_address": "0x0800c704",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "subs sb, r1, 0",
            "mov r4, r2",
            "mov sl, r3",
            "ldrb r6, [sp, 0x20]",
            "ldrh r7, [sp, 0x24]",
            "ldrh r8, [sp, 0x28]",
            "beq 0x800c800",
            "ldr r2, [r2, 4]",
            "ldr r3, [r4, 8]",
            "ldr ip, [r4]",
            "ldr r1, [r4, 0xc]",
            "add r3, r2, r3",
            "ldr r2, [sl]",
            "add r3, r3, ip",
            "ldr ip, [sl, 4]",
            "add r3, r3, r1",
            "ldr r1, [sl, 8]",
            "add r3, r3, r2",
            "ldr r2, [sl, 0xc]",
            "add r3, r3, ip",
            "add r3, r3, r1",
            "add r3, r3, r2",
            "add r3, r3, r6",
            "add r3, r3, r7",
            "add r3, r3, r8",
            "uxth r2, r3",
            "add r3, r2, r3, lsr 16",
            "add r3, r3, r3, lsr 8",
            "and r3, r3, 0xff",
            "ldr r5, [r0, r3, lsl 2]",
            "cmp r5, 0",
            "bne 0x800c7dc",
            "b 0x800c7f8",
            "ldr r1, [r5, 0x2c]",
            "ldr r3, [r5, 0x1c]",
            "ldr r0, [sl]",
            "ldr r2, [r4]",
            "eor r0, r0, r1",
            "eor r3, r2, r3",
            "orr r0, r0, r3",
            "ldrh r1, [r5, 0x3c]",
            "ldrb r3, [r5, 0x40]",
            "ldrh r2, [r5, 0x3e]",
            "eor r1, r7, r1",
            "eor r3, r6, r3",
            "orr r3, r1, r3",
            "eor r2, r8, r2",
            "orr r3, r3, r2",
            "orrs r3, r0, r3",
            "beq 0x800c7f8",
            "ldr r5, [r5, 0x18]",
            "cmp r5, 0",
            "beq 0x800c7f8",
            "cmp sb, 0",
            "beq 0x800c78c",
            "add r0, r5, 0x1c",
            "mov r1, r4",
            "mov r2, 0x20",
            "bl memcmp",
            "b 0x800c7a8",
            "mov r0, r5",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}",
            "ldr r2, [r3]",
            "ldr r3, [r4]",
            "add r3, r2, r3",
            "add r3, r3, r6",
            "add r3, r3, r7",
            "add r3, r3, r8",
            "b 0x800c76c"
        ]
    },
    "fcn.0800af60": {
        "function_address": "0x0800af60",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r4, r0",
            "ldr r3, [r0]",
            "sub sp, sp, 8",
            "mov r7, r1",
            "mov r5, r2",
            "tst r3, 1",
            "bne 0x800b170",
            "ldr sl, [0x0800b214]",
            "add r6, sp, 4",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "dsb sy",
            "ldr r3, [sl, 0xc]",
            "cmp r3, 0",
            "beq 0x800afa4",
            "blx r3",
            "lsl r5, r5, 0x16",
            "movw r8, 0x11ac",
            "ldr r3, [r4, r8]",
            "lsr r5, r5, 0x16",
            "orr r5, r5, 0x1000",
            "str r5, [r3, 4]",
            "mov r5, 7",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "ldr r1, [r4, r8]",
            "mov r3, 4",
            "mov r2, r6",
            "add r1, r1, 0xa0",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 4]",
            "str r3, [r7], 0x20",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "ldr r1, [r4, r8]",
            "add ip, r5, 0x28",
            "mov r3, 4",
            "mov r2, r6",
            "sub r5, r5, 1",
            "mla r1, ip, r3, r1",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 4]",
            "cmn r5, 1",
            "str r3, [r7, -4]!",
            "bne 0x800afec",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "dsb sy",
            "ldr r3, [sl, 0xc]",
            "cmp r3, 0",
            "beq 0x800b044",
            "blx r3",
            "movw r7, 0x11ac",
            "mov r2, 0",
            "ldr r3, [r4, r7]",
            "movw r5, 0x2719",
            "str r2, [r3, 4]",
            "b 0x800b06c",
            "cmp r5, 9",
            "beq 0x800b0a0",
            "sub r5, r5, 0xa",
            "bl osl_delay",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "ldr r1, [r4, r7]",
            "mov r3, 4",
            "mov r2, r6",
            "add r1, r1, 0x70",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 4]",
            "mov r0, 0xa",
            "tst r3, 1",
            "bne 0x800b05c",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "movw r3, 0x11ac",
            "mov r2, r6",
            "ldr r1, [r4, r3]",
            "mov r3, 4",
            "add r1, r1, 0x70",
            "bl osl_pcie_rreg",
            "ldr r5, [sp, 4]",
            "ands r5, r5, 1",
            "bne 0x800b200",
            "ldr r3, [r4]",
            "tst r3, 1",
            "bne 0x800b0ec",
            "mov r0, r5",
            "add sp, sp, 8",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "movw r3, 0x11ac",
            "mov r2, r6",
            "ldr r1, [r4, r3]",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "ldr r8, [sp, 4]",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "bic r8, r8, 0x1fc0",
            "bic r8, r8, 0x30",
            "orr r8, r8, 0x1400",
            "dsb sy",
            "ldr r3, [sl, 0xc]",
            "cmp r3, 0",
            "beq 0x800b13c",
            "blx r3",
            "movw r7, 0x11ac",
            "ldr r3, [r4, r7]",
            "str r8, [r3]",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "mov r3, 4",
            "ldr r1, [r4, r7]",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 4]",
            "b 0x800b0e0",
            "ldr r0, [r0, 8]",
            "add r6, sp, 4",
            "bl si_osh",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "movw r3, 0x11ac",
            "mov r2, r6",
            "ldr r1, [r4, r3]",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "ldr sb, [sp, 4]",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "bic sb, sb, 0x1fc0",
            "bic sb, sb, 0x30",
            "dsb sy",
            "ldr sl, [0x0800b214]",
            "ldr r3, [sl, 0xc]",
            "cmp r3, 0",
            "beq 0x800b1c4",
            "blx r3",
            "movw r8, 0x11ac",
            "ldr r3, [r4, r8]",
            "str sb, [r3]",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "ldr r1, [r4, r8]",
            "mov r2, r6",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "mov r0, 0x3e8",
            "ldr r3, [sp, 4]",
            "bl osl_delay",
            "b 0x800af88",
            "ldr r0, [0x0800b218]",
            "mvn r5, 0xf",
            "ldr r1, [0x0800b21c]",
            "bl printk",
            "b 0x800b0d4"
        ]
    },
    "sym.adm_dump_regs": {
        "function_address": "0x08006960",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r0",
            "sub sp, sp, 0x14",
            "ldr r0, [r0]",
            "mov r5, r1",
            "mov fp, 0",
            "str r4, [sp, 4]",
            "add sb, sp, 0x10",
            "bl si_coreidx",
            "ldr r2, [sp, 4]",
            "str r0, [r4, 8]",
            "ldr r0, [r2], 0x10",
            "str r2, [sp, 4]",
            "bl si_gpiosetcore",
            "mov r0, r5",
            "ldr r1, [0x08006b98]",
            "bl sprintf",
            "add r5, r5, r0",
            "str r5, [sp]",
            "ldr r2, [r4, 0xc]",
            "mov r5, 0xd800",
            "ldr r1, [r4, 0x10]",
            "movt r5, 0xffff",
            "ldr r3, [r4, 0x14]",
            "orr r5, fp, r5",
            "uxth r5, r5",
            "mov r0, r4",
            "orr r1, r1, r2",
            "orr r1, r1, r3",
            "mov r2, 0",
            "bl fcn.08006248",
            "mvn ip, 0",
            "add r2, sp, 0xc",
            "mov r0, r4",
            "mov r1, 0",
            "mov r3, 0x20",
            "str ip, [sp, 0xc]",
            "mov sl, r2",
            "mov r6, 0x20",
            "bl fcn.080060fc",
            "lsr r1, r5, 8",
            "mov r3, 0x10",
            "add r2, sp, 0xc",
            "orr r5, r1, r5, lsl 8",
            "mov r0, r4",
            "mov r1, 0",
            "strh r5, [sp, 0xc]",
            "bl fcn.080060fc",
            "ldr r0, [r4]",
            "ldr r1, [r4, 0x14]",
            "bl fcn.080062e0",
            "mov r0, r4",
            "ldr r1, [sp, 4]",
            "mov r2, 1",
            "bl fcn.08006280",
            "mov r2, 0",
            "ldr r1, [r4, 0xc]",
            "mov r3, r2",
            "ldr r0, [r4]",
            "ldr r8, [r4, 0x14]",
            "bl si_gpioout",
            "mov r0, 3",
            "bl osl_delay",
            "subs r7, r6, 0",
            "movne r7, 1",
            "cmp r7, 0",
            "movne r5, 0x80",
            "movne r7, 0",
            "beq 0x8006adc",
            "ldr r1, [r4, 0x10]",
            "mov r3, 0",
            "ldr r0, [r4]",
            "mov r2, r1",
            "bl si_gpioout",
            "mov r0, 3",
            "bl osl_delay",
            "ldr r0, [r4]",
            "bl si_gpioin",
            "mov r2, 0",
            "tst r0, r8",
            "mov r3, r2",
            "ldr r1, [r4, 0x10]",
            "ldr r0, [r4]",
            "orrne r7, r5, r7",
            "bl si_gpioout",
            "mov r0, 3",
            "bl osl_delay",
            "subs r6, r6, 1",
            "moveq r3, 0",
            "movne r3, 1",
            "lsrs r5, r5, 1",
            "moveq r3, 0",
            "andne r3, r3, 1",
            "cmp r3, 0",
            "bne 0x8006a74",
            "strb r7, [sl], 1",
            "cmp sl, sb",
            "bne 0x8006a5c",
            "mov r2, 2",
            "mov r0, r4",
            "ldr r1, [sp, 4]",
            "ldr r5, [sp, 0xc]",
            "bl fcn.08006280",
            "ldr r3, [r4, 0xc]",
            "ldr r1, [r4, 0x10]",
            "rev r5, r5",
            "ldr r0, [r4]",
            "orr r1, r1, r3",
            "bl fcn.080062e0",
            "tst fp, 1",
            "ldr r0, [sp]",
            "lsrne r2, r5, 0x10",
            "uxtheq r2, r5",
            "ldr r1, [0x08006b9c]",
            "bl sprintf",
            "ldr r2, [sp]",
            "and r3, fp, 7",
            "cmp r3, 7",
            "add r2, r2, r0",
            "str r2, [sp]",
            "beq 0x8006b7c",
            "add fp, fp, 1",
            "cmp fp, 0x2e",
            "bne 0x80069ac",
            "ldr r1, [0x08006ba0]",
            "ldr r0, [sp]",
            "bl sprintf",
            "ldr r1, [r4, 8]",
            "mov r5, r0",
            "ldr r0, [r4]",
            "bl si_setcoreidx",
            "ldr ip, [sp]",
            "add r0, ip, r5",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "mov r0, r2",
            "ldr r1, [0x08006ba0]",
            "bl sprintf",
            "ldr r3, [sp]",
            "add r3, r3, r0",
            "str r3, [sp]",
            "b 0x8006b44"
        ]
    },
    "fcn.08006248": {
        "function_address": "0x08006248",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r3, 0",
            "mov r5, r1",
            "mov r4, r0",
            "ldr r0, [r0]",
            "bl si_gpioout",
            "mov r1, r5",
            "ldr r0, [r4]",
            "mov r2, r5",
            "mov r3, 0",
            "bl si_gpioouten",
            "mov r0, 3",
            "pop {r4, r5, r6, lr}",
            "b osl_delay"
        ]
    },
    "fcn.080060fc": {
        "function_address": "0x080060fc",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "subs sb, r1, 0",
            "add sl, r3, 7",
            "mov r6, r3",
            "mov r4, r0",
            "mov r8, r2",
            "lsr sl, sl, 3",
            "beq 0x8006230",
            "ldr r1, [r0, 0xc]",
            "mov r3, 0",
            "ldr r0, [r0]",
            "mov r2, r1",
            "bl si_gpioout",
            "mov r0, 3",
            "bl osl_delay",
            "cmp sl, 0",
            "movne r7, 0",
            "beq 0x80061f4",
            "cmp r6, 0",
            "movne r5, 0x80",
            "bne 0x80061a8",
            "b 0x80061e8",
            "ldr r1, [r4, 0x14]",
            "ldr r0, [r4]",
            "mov r2, r1",
            "bl si_gpioout",
            "mov r0, 1",
            "bl osl_delay",
            "ldr r1, [r4, 0x10]",
            "mov r3, 0",
            "ldr r0, [r4]",
            "mov r2, r1",
            "bl si_gpioout",
            "mov r0, 3",
            "bl osl_delay",
            "subs r6, r6, 1",
            "moveq r3, 0",
            "movne r3, 1",
            "lsrs r5, r5, 1",
            "moveq r3, 0",
            "andne r3, r3, 1",
            "cmp r3, 0",
            "beq 0x80061e8",
            "mov r2, 0",
            "ldr r1, [r4, 0x10]",
            "mov r3, r2",
            "ldr r0, [r4]",
            "bl si_gpioout",
            "mov r0, 3",
            "bl osl_delay",
            "ldrb r2, [r8, r7]",
            "mov r3, 0",
            "ands r2, r5, r2",
            "bne 0x8006154",
            "mov r3, r2",
            "ldr r1, [r4, 0x14]",
            "ldr r0, [r4]",
            "bl si_gpioout",
            "b 0x8006164",
            "add r7, r7, 1",
            "cmp sl, r7",
            "bhi 0x8006144",
            "mov r2, 0",
            "ldr r1, [r4, 0x10]",
            "mov r3, r2",
            "ldr r0, [r4]",
            "bl si_gpioout",
            "mov r0, 3",
            "bl osl_delay",
            "cmp sb, 0",
            "popeq {r4, r5, r6, r7, r8, sb, sl, pc}",
            "mov r2, 0",
            "ldr r0, [r4]",
            "ldr r1, [r4, 0xc]",
            "mov r3, r2",
            "pop {r4, r5, r6, r7, r8, sb, sl, lr}",
            "b si_gpioout",
            "mov r2, sb",
            "ldr r1, [r4, 0xc]",
            "mov r3, sb",
            "ldr r0, [r0]",
            "bl si_gpioout",
            "b 0x8006130"
        ]
    },
    "fcn.080062e0": {
        "function_address": "0x080062e0",
        "instructions": [
            "mov r2, 0",
            "push {r4, lr}",
            "mov r3, r2",
            "bl si_gpioouten",
            "mov r0, 3",
            "pop {r4, lr}",
            "b osl_delay"
        ]
    },
    "fcn.08006280": {
        "function_address": "0x08006280",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "subs r7, r2, 0",
            "mov r5, r0",
            "mov r6, r1",
            "pople {r3, r4, r5, r6, r7, pc}",
            "mov r4, 0",
            "ldr r1, [r6]",
            "mov r3, 0",
            "ldr r0, [r5]",
            "add r4, r4, 1",
            "mov r2, r1",
            "bl si_gpioout",
            "mov r0, 3",
            "bl osl_delay",
            "mov r2, 0",
            "ldr r1, [r6]",
            "mov r3, r2",
            "ldr r0, [r5]",
            "bl si_gpioout",
            "mov r0, 3",
            "bl osl_delay",
            "cmp r4, r7",
            "blt 0x8006298",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "sym.fa_napt_add": {
        "function_address": "0x0800d894",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r5, r0",
            "sub sp, sp, 0xb4",
            "ldr r0, [r1, 0x3c]",
            "mov r4, r1",
            "mov r6, r2",
            "bl et_fa_dev_on",
            "cmp r0, 0",
            "bne 0x800d8c8",
            "mvn r8, 0",
            "mov r0, r8",
            "add sp, sp, 0xb4",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r0, [r4, 0x74]",
            "bl et_fa_dev_on",
            "cmp r0, 0",
            "beq 0x800d8b8",
            "cmp r6, 0",
            "bne 0x800d8b8",
            "ldrh r2, [r4, 0x24]",
            "add r3, r4, 4",
            "ldrb r1, [r4, 0x28]",
            "add r8, sp, 0x78",
            "ldrh sb, [r4, 0x26]",
            "add sl, r4, 0x14",
            "ldr r0, [r5, 0x10]",
            "add r7, r8, 1",
            "str r3, [sp, 0x28]",
            "add r6, r8, 9",
            "str r2, [sp, 0x34]",
            "str r1, [sp, 0x30]",
            "str sb, [sp, 0x38]",
            "str sl, [sp, 0x2c]",
            "bl et_fa_lock",
            "mov r0, r8",
            "mov r1, 0xd",
            "bl __memzero",
            "ldr r1, [sp, 0x28]",
            "mov r2, 4",
            "mov r0, r7",
            "bl memcpy",
            "ldr r1, [sp, 0x2c]",
            "mov r2, 4",
            "add r0, r8, 5",
            "bl memcpy",
            "add r1, r4, 0x24",
            "mov r2, 2",
            "mov r0, r6",
            "bl memcpy",
            "add r0, r8, 0xb",
            "add r1, r4, 0x26",
            "mov r2, 2",
            "bl memcpy",
            "mov r3, r7",
            "add r7, r7, 1",
            "ldrb r1, [r3]",
            "cmp r7, r6",
            "ldrb r2, [r3, -1]",
            "lsr r3, r1, 7",
            "orr r3, r3, r2, lsl 1",
            "strb r3, [r7, -2]",
            "bne 0x800d968",
            "ldrb r3, [sp, 0x80]",
            "add r0, r8, 0xc",
            "ldrb r2, [r4, 0x28]",
            "ldr ip, [0x0800dfe8]",
            "lsl r3, r3, 1",
            "cmp r2, 6",
            "add r2, sp, 0x77",
            "uxtb r3, r3",
            "strb r3, [sp, 0x80]",
            "orreq r3, r3, 1",
            "strbeq r3, [sp, 0x80]",
            "mov r3, 0",
            "ldrb r1, [r2, 1]!",
            "cmp r2, r0",
            "eor r1, r1, r3, lsr 8",
            "add r1, ip, r1, lsl 1",
            "ldrh r1, [r1, 0xc]",
            "eor r3, r1, r3, lsl 8",
            "uxth r3, r3",
            "bne 0x800d9bc",
            "uxtb r3, r3",
            "mov r2, 0",
            "lsl r0, r3, 2",
            "add r3, r5, r0, lsl 2",
            "add r3, r3, 0x20",
            "ldr r1, [r3, 4]!",
            "add fp, r0, r2",
            "str fp, [sp, 0x3c]",
            "add r2, r2, 1",
            "cmp r1, 0",
            "beq 0x800da20",
            "cmp r2, 4",
            "bne 0x800d9f0",
            "mvn r8, 0",
            "ldr r0, [r5, 0x10]",
            "bl et_fa_unlock",
            "b 0x800d8bc",
            "add sl, sp, 0x30",
            "ldm sl, {sl, fp, ip}",
            "ldr r0, [r5, 0x20]",
            "ldr r2, [sp, 0x28]",
            "ldr r3, [sp, 0x2c]",
            "stm sp, {sl, fp, ip}",
            "bl fcn.0800c704",
            "subs sl, r0, 0",
            "bne 0x800da10",
            "ldr r0, [r5, 8]",
            "bl si_osh",
            "mov r1, 0x44",
            "bl osl_malloc",
            "subs r6, r0, 0",
            "beq 0x800db80",
            "mov r1, 0x44",
            "add r7, r4, 0x2e",
            "bl __memzero",
            "ldr ip, [sp, 0x3c]",
            "mov r1, r7",
            "mov r2, 6",
            "add r0, r6, 2",
            "add sb, sp, 0x94",
            "add fp, sp, 0xb0",
            "str ip, [r6, 0xc]",
            "bl memcpy",
            "ldrh r1, [r4, 0x2c]",
            "movw r3, 0x10a8",
            "ldrb r3, [r5, r3]",
            "ldrb r0, [r4, 0x5e]",
            "ldr lr, [r4, 0x44]",
            "lsl r1, r1, 0x14",
            "str r3, [sp, 0x24]",
            "ldrh r2, [r7, 4]",
            "add r3, sb, 4",
            "tst lr, 1",
            "lsr r0, r0, 5",
            "lsr r1, r1, 0x14",
            "moveq ip, 2",
            "movne ip, 1",
            "str ip, [sp, 0x1c]",
            "ubfx ip, lr, 2, 1",
            "strh r2, [r3, 4]",
            "orr lr, r1, r0, lsl 13",
            "ldrh r1, [r4, 0x2e]",
            "strb sl, [sp, 0x94]",
            "ldr r0, [sp, 0x24]",
            "strh r1, [sp, 0x98]",
            "ldrh r7, [r7, 2]",
            "cmp r0, 0x80",
            "add r0, r4, 0x34",
            "strh r7, [sp, 0x9a]",
            "strb ip, [fp, -0x10]!",
            "add r1, fp, 1",
            "ldr ip, [sp, 0x1c]",
            "strb ip, [sp, 0x95]",
            "ldrh ip, [r4, 0x34]",
            "strh lr, [sp, 0x96]",
            "add lr, sb, 6",
            "str lr, [sp, 0x1c]",
            "strh ip, [sp, 0xa1]",
            "ldrh ip, [r0, 2]",
            "strh ip, [r1, 2]",
            "ldrh r0, [r0, 4]",
            "strh r0, [r1, 4]",
            "ldrne lr, [r5, 0x20]",
            "strne lr, [sp, 0x20]",
            "beq 0x800dfc8",
            "ldr r0, [sp, 0x20]",
            "ldr r7, [r0, sl]",
            "str sl, [sp, 0x14]",
            "cmp r7, 0",
            "add r1, r7, 2",
            "beq 0x800df98",
            "ldr sl, [sp, 0x1c]",
            "ldrh lr, [r1, 2]",
            "ldrh r1, [r1, 4]",
            "ldrh ip, [sl]",
            "ldrh r0, [r7, 2]",
            "ldrh sl, [r3]",
            "eor r1, r2, r1",
            "eor ip, lr, ip",
            "orr r1, ip, r1",
            "eor r0, r0, sl",
            "orrs r1, r1, r0",
            "beq 0x800dba0",
            "ldr r7, [r7, 0x18]",
            "b 0x800db3c",
            "ldr r0, [r5, 8]",
            "bl si_osh",
            "bl osl_malloced",
            "ldr r1, [0x0800dfec]",
            "mov r2, r0",
            "ldr r0, [0x0800dff0]",
            "bl printk",
            "b 0x800da10",
            "ldrb r7, [r7, 1]",
            "cmp r7, 0x80",
            "beq 0x800dc7c",
            "sxtb sl, r7",
            "cmp sl, 0",
            "bge 0x800dbd8",
            "add r1, sp, 0x64",
            "add r0, sb, 4",
            "bl bcm_ether_ntoa",
            "ldr r1, [0x0800dff4]",
            "mov r2, r0",
            "mov r3, r7",
            "ldr r0, [0x0800dff8]",
            "bl printk",
            "add sb, sb, 4",
            "str sb, [sp, 0x24]",
            "cmp sl, 0",
            "mov r1, r8",
            "mov r2, r7",
            "mov r0, r5",
            "blt 0x800ded4",
            "bl fcn.0800b4f0",
            "cmn r0, 0x10",
            "add r1, sp, 0xa8",
            "mov r2, 6",
            "ldr r0, [sp, 0x24]",
            "beq 0x800dec0",
            "ldr r3, [sp, 0x7c]",
            "ldr ip, [sp, 0x78]",
            "lsr lr, r3, 3",
            "lsr sb, r3, 0xb",
            "lsr sl, r3, 0x1b",
            "str lr, [sp, 0x14]",
            "lsr lr, ip, 0x1b",
            "str sb, [sp, 0x1c]",
            "lsr sb, r3, 0x13",
            "orr lr, lr, r3, lsl 5",
            "ldr r3, [sp, 0x80]",
            "lsr ip, ip, 0x13",
            "strb sb, [sp, 0xa9]",
            "strb lr, [sp, 0xac]",
            "strb ip, [sp, 0xad]",
            "orr r3, sl, r3, lsl 5",
            "ldr ip, [sp, 0x1c]",
            "ldr sl, [sp, 0x14]",
            "strb r3, [sp, 0xa8]",
            "strb ip, [sp, 0xaa]",
            "strb sl, [sp, 0xab]",
            "bl memcmp",
            "cmp r0, 0",
            "add r3, r7, 1",
            "beq 0x800dc88",
            "uxtb r7, r3",
            "sxtb sl, r7",
            "b 0x800dbe0",
            "mov r7, r1",
            "mov sl, r7",
            "b 0x800dbd8",
            "and r7, r7, 0x7f",
            "add r3, r7, 0x850",
            "strb r7, [r6, 1]",
            "add r3, r3, 4",
            "add r3, r5, r3, lsl 1",
            "ldrh r2, [r3, 2]",
            "add r2, r2, 1",
            "strh r2, [r3, 2]",
            "mov r0, r5",
            "mov r1, r6",
            "mov r2, fp",
            "bl fcn.0800c81c",
            "cmn r0, 0x10",
            "beq 0x800decc",
            "mov r3, 1",
            "strb r3, [r6, 0x14]",
            "ldr r3, [r4, 0x44]",
            "tst r3, 4",
            "beq 0x800dfac",
            "ldrh r1, [r4, 0x24]",
            "ldrh r2, [r4, 0x54]",
            "cmp r1, r2",
            "beq 0x800dfac",
            "mov r3, 3",
            "strb r3, [r6, 0x14]",
            "add r8, sp, 0x44",
            "mov r7, 0",
            "mov r0, r8",
            "mov r1, 0x20",
            "strb r7, [r6, 0x15]",
            "bl __memzero",
            "ldrh ip, [r4, 0x54]",
            "mov r3, 1",
            "ldrh r1, [r4, 0x26]",
            "movt r3, 0x10",
            "ldrb lr, [r6, 0x15]",
            "mov r0, r5",
            "ldrh r2, [r4, 0x24]",
            "ldrb fp, [r6]",
            "lsr sl, ip, 8",
            "ldrb sb, [r6, 0x14]",
            "str lr, [sp, 0x1c]",
            "lsr lr, r1, 8",
            "str fp, [sp, 0x20]",
            "orr sl, sl, ip, lsl 8",
            "ldr fp, [sp, 0x1c]",
            "orr r1, lr, r1, lsl 8",
            "lsr ip, r2, 8",
            "ldrb lr, [r6, 1]",
            "lsl sb, sb, 3",
            "uxth sl, sl",
            "orr r2, ip, r2, lsl 8",
            "ldr ip, [sp, 0x20]",
            "str lr, [sp, 0x24]",
            "orr sb, sb, fp, lsl 5",
            "uxth lr, r2",
            "uxth r1, r1",
            "ldr r2, [sp, 0x24]",
            "lsl sl, sl, 0xf",
            "ldrb fp, [r4, 0x28]",
            "orr sb, sb, ip, lsl 6",
            "lsr ip, r1, 1",
            "orr r1, sl, r1, lsl 31",
            "ldr sl, [r4, 0x50]",
            "orr sb, sb, r2, lsl 8",
            "cmp fp, 6",
            "ldr fp, [r4, 0x44]",
            "rev r2, sl",
            "orr sl, ip, lr, lsl 15",
            "orr lr, sb, r2, lsl 15",
            "moveq ip, 0x80000000",
            "movne ip, r7",
            "orr r1, r1, r2, lsr 17",
            "orr ip, sl, ip",
            "ldr sl, [r4, 4]",
            "str lr, [sp, 0x48]",
            "tst fp, 4",
            "ldr lr, [r4, 0x14]",
            "movne sb, 0x100000",
            "moveq sb, r3",
            "rev r3, sl",
            "str r1, [sp, 0x4c]",
            "str r3, [sp, 0x58]",
            "mov r3, 0x80000000",
            "rev r2, lr",
            "str ip, [sp, 0x50]",
            "mov r1, r8",
            "str r2, [sp, 0x54]",
            "str sb, [sp, 0x5c]",
            "str r3, [sp, 0x60]",
            "ldr r2, [r6, 0xc]",
            "bl fcn.0800b7b4",
            "cmn r0, 0x10",
            "mov r8, r0",
            "beq 0x800decc",
            "ldr r1, [sp, 0x28]",
            "mov r2, 0x10",
            "add r0, r6, 0x1c",
            "bl memcpy",
            "ldr r1, [sp, 0x2c]",
            "mov r2, 0x10",
            "add r0, r6, 0x2c",
            "bl memcpy",
            "ldrh fp, [r4, 0x24]",
            "movw r3, 0x1026",
            "ldr ip, [sp, 0x3c]",
            "cmp r8, r7",
            "strh fp, [r6, 0x3c]",
            "ldrh lr, [r4, 0x26]",
            "add r1, r5, ip, lsl 2",
            "strh lr, [r6, 0x3e]",
            "ldrb r2, [r4, 0x28]",
            "strb r7, [r6, 8]",
            "strb r2, [r6, 0x40]",
            "ldr ip, [r4, 0x14]",
            "ldr r2, [r4, 4]",
            "add sb, sp, 0x30",
            "ldm sb, {sb, sl, fp}",
            "add r2, ip, r2",
            "add r2, r2, sb",
            "ldr r0, [r5, 0x20]",
            "add r2, r2, sl",
            "add r2, r2, fp",
            "uxth ip, r2",
            "add r2, ip, r2, lsr 16",
            "add r2, r2, r2, lsr 8",
            "and r2, r2, 0xff",
            "ldr r0, [r0, r2, lsl 2]",
            "str r0, [r6, 0x18]",
            "ldr r0, [r5, 0x20]",
            "str r6, [r0, r2, lsl 2]",
            "str r6, [r1, 0x24]",
            "ldrh r2, [r5, r3]",
            "add r2, r2, 1",
            "strh r2, [r5, r3]",
            "beq 0x800da14",
            "ldr r0, [r5, 8]",
            "bl si_osh",
            "mov r1, r6",
            "mov r2, 0x44",
            "bl osl_mfree",
            "b 0x800da14",
            "ldr r1, [0x0800dff4]",
            "ldr r0, [0x0800dffc]",
            "bl printk",
            "mvn r8, 0xf",
            "b 0x800dea8",
            "ldrb ip, [sp, 0x9c]",
            "movw r7, 0x10a8",
            "ldrh lr, [sp, 0x96]",
            "mov r0, r5",
            "ldrb r2, [sp, 0x94]",
            "add r1, sp, 0x88",
            "ldrb r8, [sp, 0x9b]",
            "lsr r3, ip, 5",
            "ldrb sb, [sp, 0x9a]",
            "and r2, r2, 1",
            "ldrb sl, [sp, 0x9d]",
            "orr lr, r2, lr, lsl 3",
            "ldrb r2, [sp, 0x99]",
            "orr r8, r3, r8, lsl 3",
            "ldrb r3, [sp, 0x98]",
            "str r2, [sp, 0x1c]",
            "orr r8, r8, sb, lsl 11",
            "ldr sb, [sp, 0x1c]",
            "orr lr, lr, sl, lsl 19",
            "ldrb sl, [sp, 0x95]",
            "orr ip, lr, ip, lsl 27",
            "ldrb r2, [r5, r7]",
            "orr r8, r8, sb, lsl 19",
            "and lr, sl, 3",
            "orr lr, ip, lr, lsl 1",
            "lsr ip, r3, 5",
            "orr r3, r8, r3, lsl 27",
            "str lr, [sp, 0x88]",
            "str r3, [sp, 0x8c]",
            "str ip, [sp, 0x90]",
            "bl fcn.0800ba1c",
            "cmn r0, 0x10",
            "beq 0x800dfd8",
            "ldrb r0, [r5, r7]",
            "movw r1, 0x1028",
            "and r2, r0, 0x7f",
            "add r0, r5, r0",
            "ldrb ip, [r0, r1]",
            "add r3, r2, 0x850",
            "add r3, r3, 4",
            "add r3, r5, r3, lsl 1",
            "strb ip, [r5, r7]",
            "mov ip, 0",
            "strb ip, [r0, r1]",
            "strb r2, [r6, 1]",
            "ldrh r2, [r3, 2]",
            "add r2, r2, 1",
            "strh r2, [r3, 2]",
            "b 0x800dca8",
            "ldr sl, [sp, 0x14]",
            "add sl, sl, 4",
            "cmp sl, 0x400",
            "bne 0x800db30",
            "b 0x800dc80",
            "tst r3, 8",
            "beq 0x800dcec",
            "ldrh r2, [r4, 0x26]",
            "ldrh r3, [r4, 0x54]",
            "cmp r2, r3",
            "bne 0x800dce4",
            "b 0x800dcec",
            "ldr r1, [0x0800e000]",
            "ldr r0, [0x0800e004]",
            "bl printk",
            "b 0x800decc",
            "ldr r1, [0x0800e000]",
            "ldr r0, [0x0800e008]",
            "bl printk",
            "b 0x800decc"
        ]
    },
    "fcn.0800b4f0": {
        "function_address": "0x0800b4f0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r4, r0",
            "ldr r3, [r0]",
            "sub sp, sp, 8",
            "mov r7, r1",
            "mov r6, r2",
            "tst r3, 1",
            "bne 0x800b704",
            "ldr sl, [0x0800b7a8]",
            "add r5, sp, 4",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "dsb sy",
            "ldr r3, [sl, 0xc]",
            "cmp r3, 0",
            "beq 0x800b534",
            "blx r3",
            "lsl r3, r6, 0x16",
            "movw sb, 0x11ac",
            "ldr r2, [r4, sb]",
            "mov r6, 2",
            "lsr r3, r3, 0x16",
            "mov r8, sb",
            "orr r3, r3, 0x1800",
            "str r3, [r2, 4]",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "ldr r1, [r4, sb]",
            "mov r3, 4",
            "mov r2, r5",
            "add r1, r1, 0xa0",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 4]",
            "str r3, [r7], 0xc",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "ldr r1, [r4, r8]",
            "add ip, r6, 0x28",
            "mov r3, 4",
            "mov r2, r5",
            "sub r6, r6, 1",
            "mla r1, ip, r3, r1",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 4]",
            "cmn r6, 1",
            "str r3, [r7, -4]!",
            "bne 0x800b580",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "dsb sy",
            "ldr r3, [sl, 0xc]",
            "cmp r3, 0",
            "beq 0x800b5d8",
            "blx r3",
            "movw r7, 0x11ac",
            "mov r2, 0",
            "ldr r3, [r4, r7]",
            "movw r6, 0x2719",
            "str r2, [r3, 4]",
            "b 0x800b600",
            "cmp r6, 9",
            "sub r6, r6, 0xa",
            "beq 0x800b634",
            "bl osl_delay",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "ldr r1, [r4, r7]",
            "mov r3, 4",
            "mov r2, r5",
            "add r1, r1, 0x70",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 4]",
            "mov r0, 0xa",
            "tst r3, 1",
            "bne 0x800b5f0",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "movw r3, 0x11ac",
            "mov r2, r5",
            "ldr r1, [r4, r3]",
            "mov r3, 4",
            "add r1, r1, 0x70",
            "bl osl_pcie_rreg",
            "ldr r6, [sp, 4]",
            "ands r6, r6, 1",
            "bne 0x800b794",
            "ldr r3, [r4]",
            "tst r3, 1",
            "bne 0x800b680",
            "mov r0, r6",
            "add sp, sp, 8",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "movw r3, 0x11ac",
            "mov r2, r5",
            "ldr r1, [r4, r3]",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "ldr r8, [sp, 4]",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "bic r8, r8, 0x1fc0",
            "bic r8, r8, 0x30",
            "orr r8, r8, 0x1400",
            "dsb sy",
            "ldr r3, [sl, 0xc]",
            "cmp r3, 0",
            "beq 0x800b6d0",
            "blx r3",
            "movw r7, 0x11ac",
            "ldr r3, [r4, r7]",
            "str r8, [r3]",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "mov r3, 4",
            "ldr r1, [r4, r7]",
            "mov r2, r5",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 4]",
            "b 0x800b674",
            "ldr r0, [r0, 8]",
            "add r5, sp, 4",
            "bl si_osh",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "movw r3, 0x11ac",
            "mov r2, r5",
            "ldr r1, [r4, r3]",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "ldr sb, [sp, 4]",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "bic sb, sb, 0x1fc0",
            "bic sb, sb, 0x30",
            "dsb sy",
            "ldr sl, [0x0800b7a8]",
            "ldr r3, [sl, 0xc]",
            "cmp r3, 0",
            "beq 0x800b758",
            "blx r3",
            "movw r8, 0x11ac",
            "ldr r3, [r4, r8]",
            "str sb, [r3]",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "ldr r1, [r4, r8]",
            "mov r2, r5",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "mov r0, 0x3e8",
            "ldr r3, [sp, 4]",
            "bl osl_delay",
            "b 0x800b518",
            "ldr r1, [0x0800b7ac]",
            "mvn r6, 0xf",
            "ldr r0, [0x0800b7b0]",
            "bl printk",
            "b 0x800b668"
        ]
    },
    "fcn.0800c81c": {
        "function_address": "0x0800c81c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x2c",
            "ldr r3, [r0]",
            "mov r8, r0",
            "str r1, [sp, 0x14]",
            "tst r3, 1",
            "str r2, [sp, 8]",
            "bne 0x800cc30",
            "ldr r1, [0x0800cd0c]",
            "add r7, sp, 0x24",
            "str r1, [sp, 4]",
            "ldr r3, [sp, 8]",
            "add r6, r8, 0x1180",
            "mov sb, 0",
            "add r5, r8, 8",
            "add r6, r6, 0x2c",
            "mov fp, r8",
            "add r3, r3, 1",
            "str r3, [sp, 0xc]",
            "uxtb lr, sb",
            "ldr r0, [r5]",
            "str lr, [sp, 0x10]",
            "bl si_osh",
            "dsb sy",
            "ldr r1, [sp, 4]",
            "ldr r3, [r1, 0xc]",
            "cmp r3, 0",
            "beq 0x800c890",
            "blx r3",
            "ldr r3, [r6]",
            "orr r2, sb, 0x1400",
            "str r2, [r3, 4]",
            "ldr r0, [r5]",
            "bl si_osh",
            "ldr r0, [r5]",
            "bl si_osh",
            "ldr r1, [r6]",
            "mov r2, r7",
            "mov r3, 4",
            "add r1, r1, 0xa0",
            "bl osl_pcie_rreg",
            "ldr r0, [r5]",
            "ldr r3, [sp, 0x24]",
            "bl si_osh",
            "ldr r0, [r5]",
            "bl si_osh",
            "ldr r1, [r6]",
            "mov r2, r7",
            "mov r3, 4",
            "add r1, r1, 0xa4",
            "bl osl_pcie_rreg",
            "ldr r0, [r5]",
            "ldr sl, [sp, 0x24]",
            "bl si_osh",
            "ldr r0, [r5]",
            "bl si_osh",
            "ldr r1, [r6]",
            "mov r2, r7",
            "mov r3, 4",
            "add r1, r1, 0xa0",
            "bl osl_pcie_rreg",
            "ldr r0, [r5]",
            "ldr r8, [sp, 0x24]",
            "bl si_osh",
            "dsb sy",
            "ldr r2, [sp, 4]",
            "ldr r3, [r2, 0xc]",
            "cmp r3, 0",
            "beq 0x800c934",
            "blx r3",
            "ldr r3, [r6]",
            "mov lr, 0",
            "movw r4, 0x2719",
            "str lr, [r3, 4]",
            "b 0x800c958",
            "cmp r4, 9",
            "sub r4, r4, 0xa",
            "beq 0x800c98c",
            "bl osl_delay",
            "ldr r0, [r5]",
            "bl si_osh",
            "ldr r0, [r5]",
            "bl si_osh",
            "ldr r1, [r6]",
            "mov r3, 4",
            "mov r2, r7",
            "add r1, r1, 0x70",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 0x24]",
            "mov r0, 0xa",
            "tst r3, 1",
            "bne 0x800c948",
            "ldr r0, [r5]",
            "bl si_osh",
            "ldr r0, [r5]",
            "bl si_osh",
            "ldr r1, [r6]",
            "mov r3, 4",
            "mov r2, r7",
            "add r1, r1, 0x70",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 0x24]",
            "tst r3, 1",
            "bne 0x800ccf4",
            "lsl r3, sl, 7",
            "lsr r1, r8, 1",
            "lsr r2, r8, 9",
            "lsr lr, sl, 1",
            "lsr ip, r8, 0x11",
            "orr r3, r3, r8, lsr 25",
            "lsr sl, sl, 9",
            "strb r1, [sp, 0x21]",
            "strb r2, [sp, 0x20]",
            "add r1, sp, 0x1c",
            "ldr r0, [sp, 0xc]",
            "mov r2, 6",
            "strb ip, [sp, 0x1f]",
            "strb r3, [sp, 0x1e]",
            "strb lr, [sp, 0x1d]",
            "strb sl, [sp, 0x1c]",
            "bl memcmp",
            "cmp r0, 0",
            "bne 0x800ca1c",
            "ldr r1, [sp, 8]",
            "and r8, r8, 1",
            "ldrb r3, [r1]",
            "cmp r8, r3",
            "beq 0x800ccc4",
            "add sb, sb, 1",
            "cmp sb, 4",
            "bne 0x800c868",
            "ldr r0, [fp, 8]",
            "mov r8, fp",
            "bl si_osh",
            "dsb sy",
            "ldr r1, [sp, 4]",
            "ldr r3, [r1, 0xc]",
            "cmp r3, 0",
            "beq 0x800ca4c",
            "blx r3",
            "ldr r3, [sp, 8]",
            "ldr lr, [sp, 8]",
            "ldrb r2, [r3]",
            "movw r3, 0x11ac",
            "ldr r3, [r8, r3]",
            "orr r2, r2, 0x400",
            "str r2, [r3, 4]",
            "ldrb r0, [lr, 6]",
            "ldrb r2, [lr]",
            "ldrb r3, [lr, 3]",
            "ldrb ip, [lr, 5]",
            "and r2, r2, 1",
            "ldrb r6, [lr, 4]",
            "orr r0, r2, r0, lsl 1",
            "ldrb r1, [lr, 2]",
            "lsr r2, r3, 7",
            "ldrb r4, [lr, 1]",
            "orr ip, r0, ip, lsl 9",
            "ldr r0, [r8, 8]",
            "orr r6, ip, r6, lsl 17",
            "orr r2, r2, r1, lsl 1",
            "orr r6, r6, r3, lsl 25",
            "orr r4, r2, r4, lsl 9",
            "bl si_osh",
            "dsb sy",
            "ldr r1, [sp, 4]",
            "ldr r3, [r1, 0xc]",
            "cmp r3, 0",
            "beq 0x800cac4",
            "blx r3",
            "movw r3, 0x11ac",
            "ldr r3, [r8, r3]",
            "str r4, [r3, 0xa4]",
            "ldr r0, [r8, 8]",
            "bl si_osh",
            "dsb sy",
            "ldr r2, [sp, 4]",
            "ldr r3, [r2, 0xc]",
            "cmp r3, 0",
            "beq 0x800caf0",
            "blx r3",
            "movw r5, 0x11ac",
            "movw r4, 0x2719",
            "ldr r3, [r8, r5]",
            "str r6, [r3, 0xa0]",
            "b 0x800cb14",
            "cmp r4, 9",
            "sub r4, r4, 0xa",
            "beq 0x800cb48",
            "bl osl_delay",
            "ldr r0, [r8, 8]",
            "bl si_osh",
            "ldr r0, [r8, 8]",
            "bl si_osh",
            "ldr r1, [r8, r5]",
            "mov r3, 4",
            "mov r2, r7",
            "add r1, r1, 0x70",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 0x24]",
            "mov r0, 0xa",
            "tst r3, 1",
            "bne 0x800cb04",
            "ldr r0, [r8, 8]",
            "bl si_osh",
            "ldr r0, [r8, 8]",
            "bl si_osh",
            "movw r3, 0x11ac",
            "mov r2, r7",
            "ldr r1, [r8, r3]",
            "mov r3, 4",
            "add r1, r1, 0x70",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 0x24]",
            "tst r3, 1",
            "bne 0x800cce0",
            "ldr r1, [sp, 8]",
            "mvn r4, 0x1d",
            "ldr r2, [sp, 0x14]",
            "ldrb r3, [r1]",
            "strb r3, [r2]",
            "ldr r3, [r8]",
            "tst r3, 1",
            "bne 0x800cba8",
            "mov r0, r4",
            "add sp, sp, 0x2c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r0, [r8, 8]",
            "bl si_osh",
            "ldr r0, [r8, 8]",
            "bl si_osh",
            "movw r3, 0x11ac",
            "mov r2, r7",
            "ldr r1, [r8, r3]",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "ldr r6, [sp, 0x24]",
            "ldr r0, [r8, 8]",
            "bl si_osh",
            "bic r6, r6, 0x1fc0",
            "bic r6, r6, 0x30",
            "orr r6, r6, 0x1400",
            "dsb sy",
            "ldr lr, [sp, 4]",
            "ldr r3, [lr, 0xc]",
            "cmp r3, 0",
            "beq 0x800cbfc",
            "blx r3",
            "movw r5, 0x11ac",
            "ldr r3, [r8, r5]",
            "str r6, [r3]",
            "ldr r0, [r8, 8]",
            "bl si_osh",
            "ldr r0, [r8, 8]",
            "bl si_osh",
            "mov r3, 4",
            "ldr r1, [r8, r5]",
            "mov r2, r7",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 0x24]",
            "b 0x800cb9c",
            "ldr r0, [r0, 8]",
            "add r7, sp, 0x24",
            "bl si_osh",
            "ldr r0, [r8, 8]",
            "bl si_osh",
            "movw r3, 0x11ac",
            "mov r2, r7",
            "ldr r1, [r8, r3]",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "ldr r5, [sp, 0x24]",
            "ldr r0, [r8, 8]",
            "bl si_osh",
            "bic r5, r5, 0x1fc0",
            "bic r5, r5, 0x30",
            "dsb sy",
            "ldr r2, [0x0800cd0c]",
            "ldr r3, [r2, 0xc]",
            "str r2, [sp, 4]",
            "cmp r3, 0",
            "beq 0x800cc88",
            "blx r3",
            "movw r4, 0x11ac",
            "ldr r3, [r8, r4]",
            "str r5, [r3]",
            "ldr r0, [r8, 8]",
            "bl si_osh",
            "ldr r0, [r8, 8]",
            "bl si_osh",
            "ldr r1, [r8, r4]",
            "mov r2, r7",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "mov r0, 0x3e8",
            "ldr r3, [sp, 0x24]",
            "bl osl_delay",
            "b 0x800c848",
            "ldr r2, [sp, 0x10]",
            "mov r8, fp",
            "ldr r1, [sp, 0x14]",
            "mov r4, r0",
            "and r3, r2, 3",
            "strb r3, [r1]",
            "b 0x800cb90",
            "ldr r1, [0x0800cd10]",
            "mvn r4, 0xf",
            "ldr r0, [0x0800cd14]",
            "bl printk",
            "b 0x800cb90",
            "ldr r1, [0x0800cd18]",
            "mov r8, fp",
            "ldr r0, [0x0800cd14]",
            "mvn r4, 0xf",
            "bl printk",
            "b 0x800cb90"
        ]
    },
    "fcn.0800b7b4": {
        "function_address": "0x0800b7b4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r4, r0",
            "ldr r3, [r0]",
            "sub sp, sp, 8",
            "mov r7, r1",
            "mov r5, r2",
            "tst r3, 1",
            "bne 0x800b96c",
            "ldr r8, [0x0800ba10]",
            "add r6, sp, 4",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "dsb sy",
            "ldr r3, [r8, 0xc]",
            "cmp r3, 0",
            "beq 0x800b7f8",
            "blx r3",
            "lsl r3, r5, 0x16",
            "movw sl, 0x11ac",
            "ldr r2, [r4, sl]",
            "add r7, r7, 0x20",
            "lsr r3, r3, 0x16",
            "mov r5, 7",
            "str r3, [r2, 4]",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "dsb sy",
            "ldr r3, [r8, 0xc]",
            "cmp r3, 0",
            "beq 0x800b830",
            "blx r3",
            "add r2, r5, 0x28",
            "ldr r3, [r4, sl]",
            "ldr r1, [r7, -4]!",
            "sub r5, r5, 1",
            "cmn r5, 1",
            "str r1, [r3, r2, lsl 2]",
            "bne 0x800b814",
            "movw r5, 0x2719",
            "movw r7, 0x11ac",
            "b 0x800b868",
            "cmp r5, 9",
            "sub r5, r5, 0xa",
            "beq 0x800b89c",
            "bl osl_delay",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "ldr r1, [r4, r7]",
            "mov r3, 4",
            "mov r2, r6",
            "add r1, r1, 0x70",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 4]",
            "mov r0, 0xa",
            "tst r3, 1",
            "bne 0x800b858",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "movw r3, 0x11ac",
            "mov r2, r6",
            "ldr r1, [r4, r3]",
            "mov r3, 4",
            "add r1, r1, 0x70",
            "bl osl_pcie_rreg",
            "ldr r5, [sp, 4]",
            "ands r5, r5, 1",
            "bne 0x800b9fc",
            "ldr r3, [r4]",
            "tst r3, 1",
            "bne 0x800b8e8",
            "mov r0, r5",
            "add sp, sp, 8",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "movw r3, 0x11ac",
            "mov r2, r6",
            "ldr r1, [r4, r3]",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "ldr sl, [sp, 4]",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "bic sl, sl, 0x1fc0",
            "bic sl, sl, 0x30",
            "orr sl, sl, 0x1400",
            "dsb sy",
            "ldr r3, [r8, 0xc]",
            "cmp r3, 0",
            "beq 0x800b938",
            "blx r3",
            "movw r7, 0x11ac",
            "ldr r3, [r4, r7]",
            "str sl, [r3]",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "mov r3, 4",
            "ldr r1, [r4, r7]",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 4]",
            "b 0x800b8dc",
            "ldr r0, [r0, 8]",
            "add r6, sp, 4",
            "bl si_osh",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "movw r3, 0x11ac",
            "mov r2, r6",
            "ldr r1, [r4, r3]",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "ldr sb, [sp, 4]",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "bic sb, sb, 0x1fc0",
            "bic sb, sb, 0x30",
            "dsb sy",
            "ldr r8, [0x0800ba10]",
            "ldr r3, [r8, 0xc]",
            "cmp r3, 0",
            "beq 0x800b9c0",
            "blx r3",
            "movw sl, 0x11ac",
            "ldr r3, [r4, sl]",
            "str sb, [r3]",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "ldr r1, [r4, sl]",
            "mov r2, r6",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "mov r0, 0x3e8",
            "ldr r3, [sp, 4]",
            "bl osl_delay",
            "b 0x800b7dc",
            "ldr r1, [0x0800ba14]",
            "mvn r5, 0xf",
            "ldr r0, [0x0800ba18]",
            "bl printk",
            "b 0x800b8d0"
        ]
    },
    "fcn.0800ba1c": {
        "function_address": "0x0800ba1c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r4, r0",
            "ldr r3, [r0]",
            "sub sp, sp, 8",
            "mov r7, r1",
            "mov r5, r2",
            "tst r3, 1",
            "bne 0x800bbd8",
            "ldr r8, [0x0800bc7c]",
            "add r6, sp, 4",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "dsb sy",
            "ldr r3, [r8, 0xc]",
            "cmp r3, 0",
            "beq 0x800ba60",
            "blx r3",
            "lsl r3, r5, 0x16",
            "movw sl, 0x11ac",
            "ldr r2, [r4, sl]",
            "add r5, r7, 0xc",
            "lsr r3, r3, 0x16",
            "mov r7, 2",
            "orr r3, r3, 0x800",
            "str r3, [r2, 4]",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "dsb sy",
            "ldr r3, [r8, 0xc]",
            "cmp r3, 0",
            "beq 0x800ba9c",
            "blx r3",
            "add r2, r7, 0x28",
            "ldr r3, [r4, sl]",
            "ldr r1, [r5, -4]!",
            "sub r7, r7, 1",
            "cmn r7, 1",
            "str r1, [r3, r2, lsl 2]",
            "bne 0x800ba80",
            "movw r5, 0x2719",
            "movw r7, 0x11ac",
            "b 0x800bad4",
            "cmp r5, 9",
            "sub r5, r5, 0xa",
            "beq 0x800bb08",
            "bl osl_delay",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "ldr r1, [r4, r7]",
            "mov r3, 4",
            "mov r2, r6",
            "add r1, r1, 0x70",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 4]",
            "mov r0, 0xa",
            "tst r3, 1",
            "bne 0x800bac4",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "movw r3, 0x11ac",
            "mov r2, r6",
            "ldr r1, [r4, r3]",
            "mov r3, 4",
            "add r1, r1, 0x70",
            "bl osl_pcie_rreg",
            "ldr r5, [sp, 4]",
            "ands r5, r5, 1",
            "bne 0x800bc68",
            "ldr r3, [r4]",
            "tst r3, 1",
            "bne 0x800bb54",
            "mov r0, r5",
            "add sp, sp, 8",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "movw r3, 0x11ac",
            "mov r2, r6",
            "ldr r1, [r4, r3]",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "ldr sl, [sp, 4]",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "bic sl, sl, 0x1fc0",
            "bic sl, sl, 0x30",
            "orr sl, sl, 0x1400",
            "dsb sy",
            "ldr r3, [r8, 0xc]",
            "cmp r3, 0",
            "beq 0x800bba4",
            "blx r3",
            "movw r7, 0x11ac",
            "ldr r3, [r4, r7]",
            "str sl, [r3]",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "mov r3, 4",
            "ldr r1, [r4, r7]",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 4]",
            "b 0x800bb48",
            "ldr r0, [r0, 8]",
            "add r6, sp, 4",
            "bl si_osh",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "movw r3, 0x11ac",
            "mov r2, r6",
            "ldr r1, [r4, r3]",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "ldr sb, [sp, 4]",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "bic sb, sb, 0x1fc0",
            "bic sb, sb, 0x30",
            "dsb sy",
            "ldr r8, [0x0800bc7c]",
            "ldr r3, [r8, 0xc]",
            "cmp r3, 0",
            "beq 0x800bc2c",
            "blx r3",
            "movw sl, 0x11ac",
            "ldr r3, [r4, sl]",
            "str sb, [r3]",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "ldr r1, [r4, sl]",
            "mov r2, r6",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "mov r0, 0x3e8",
            "ldr r3, [sp, 4]",
            "bl osl_delay",
            "b 0x800ba44",
            "ldr r1, [0x0800bc80]",
            "mvn r5, 0xf",
            "ldr r0, [0x0800bc84]",
            "bl printk",
            "b 0x800bb3c"
        ]
    },
    "sym.fa_enable_device": {
        "function_address": "0x0800d500",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sl, lr}",
            "subs r4, r0, 0",
            "sub sp, sp, 0xc",
            "beq 0x800d51c",
            "ldr r3, [r4]",
            "tst r3, 0x10",
            "bne 0x800d57c",
            "ldr r1, [0x0800d748]",
            "movw r6, 0x11ac",
            "ldr r0, [r4, 0xc]",
            "bl getintvar",
            "uxtb r8, r0",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "movw r3, 0x1024",
            "mov r7, r0",
            "ldrb r3, [r4, r3]",
            "ldr r5, [r4, r6]",
            "cmp r3, r8",
            "beq 0x800d574",
            "cmp r8, 1",
            "beq 0x800d72c",
            "cmp r8, 3",
            "beq 0x800d738",
            "mov r0, r4",
            "mov r1, r8",
            "bl fcn.0800bc88",
            "cmp r0, 0",
            "beq 0x800d588",
            "mov r3, 1",
            "strb r3, [r4, 0x18]",
            "mov r0, 0",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sl, pc}",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "ldr r8, [r4, r6]",
            "dsb sy",
            "ldr r6, [0x0800d74c]",
            "ldr r3, [r6, 0xc]",
            "cmp r3, 0",
            "beq 0x800d5ac",
            "blx r3",
            "mov r3, 0",
            "str r3, [r8, 0x34]",
            "dsb sy",
            "ldr r3, [r6, 0xc]",
            "cmp r3, 0",
            "beq 0x800d5c8",
            "blx r3",
            "mov r3, 0",
            "str r3, [r8, 0x38]",
            "dsb sy",
            "ldr r3, [r6, 0xc]",
            "cmp r3, 0",
            "beq 0x800d5e4",
            "blx r3",
            "ldr sl, [0x0800d750]",
            "mov r3, 0",
            "mov lr, r3",
            "str r3, [r8, 0x68]",
            "lsl r1, lr, 8",
            "mov r2, 0",
            "mov r3, r2",
            "uxth r1, r1",
            "eor r0, r3, r1",
            "lsl ip, r3, 1",
            "tst r0, 0x8000",
            "lsl r1, r1, 1",
            "movne r3, ip",
            "uxtheq r3, ip",
            "eorne r3, r3, 0x1000",
            "uxth r1, r1",
            "eorne r3, r3, 0x21",
            "add r2, r2, 1",
            "uxthne r3, r3",
            "cmp r2, 8",
            "bne 0x800d604",
            "add lr, lr, 1",
            "strh r3, [sl, 2]!",
            "cmp lr, 0x100",
            "bne 0x800d5f4",
            "ldr r0, [r4, 0x14]",
            "mov r1, 1",
            "mov r2, 0",
            "bl robo_fa_enable",
            "dsb sy",
            "ldr r3, [r6, 0xc]",
            "cmp r3, 0",
            "beq 0x800d66c",
            "blx r3",
            "add r8, sp, 4",
            "mov r3, 0x100000",
            "str r3, [r5, 0xc]",
            "mov r0, r7",
            "add r1, r5, 0x2c",
            "mov r2, r8",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "ldr sl, [sp, 4]",
            "bic sl, sl, 0xf0000",
            "dsb sy",
            "ldr r3, [r6, 0xc]",
            "cmp r3, 0",
            "beq 0x800d6a8",
            "blx r3",
            "mov r0, r7",
            "str sl, [r5, 0x2c]",
            "add r1, r5, 0x28",
            "mov r2, r8",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "ldr r7, [sp, 4]",
            "orr r7, r7, 0x10000",
            "dsb sy",
            "ldr r3, [r6, 0xc]",
            "cmp r3, 0",
            "beq 0x800d6dc",
            "blx r3",
            "add r0, r4, 0x1080",
            "str r7, [r5, 0x28]",
            "add r0, r0, 0x2a",
            "mov r1, 0x100",
            "bl __memzero",
            "mov r3, 0",
            "add r1, r3, 1",
            "add r2, r4, r3",
            "uxtb r3, r1",
            "add r2, r2, 0x1000",
            "add r2, r2, 0x28",
            "cmp r3, 0x80",
            "strb r3, [r2]",
            "bne 0x800d6f4",
            "movw r3, 0x10a8",
            "mov r2, 0",
            "strb r2, [r4, r3]",
            "mov r3, 1",
            "strb r3, [r4, 0x18]",
            "b 0x800d57c",
            "mov r0, r4",
            "bl fcn.0800cf18",
            "b 0x800d574",
            "ldr r1, [0x0800d754]",
            "ldr r0, [0x0800d758]",
            "bl printk",
            "b 0x800d574"
        ]
    },
    "fcn.0800bc88": {
        "function_address": "0x0800bc88",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r8, r0",
            "sub sp, sp, 0xc",
            "ldr r0, [r0, 8]",
            "mov sl, r1",
            "bl si_osh",
            "movw r3, 0x1024",
            "movw r2, 0x11ac",
            "ldrb r3, [r8, r3]",
            "mov r7, r0",
            "ldr sb, [r8, r2]",
            "cmp r3, sl",
            "moveq r0, 0",
            "beq 0x800bd8c",
            "add r6, sp, 4",
            "mov r1, sb",
            "mov r2, r6",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "ldr fp, [sp, 4]",
            "cmp sl, 2",
            "bic fp, fp, 3",
            "beq 0x800bcf4",
            "cmp sl, 1",
            "movne r3, 1",
            "moveq r3, 2",
            "orr fp, fp, r3",
            "orr fp, fp, 0x7e000",
            "orr fp, fp, 8",
            "dsb sy",
            "ldr r3, [0x0800bdc0]",
            "ldr r3, [r3, 0xc]",
            "cmp r3, 0",
            "beq 0x800bd14",
            "blx r3",
            "mov r5, sb",
            "movw r4, 0xc359",
            "str fp, [r5], 0x30",
            "b 0x800bd34",
            "cmp r4, 9",
            "sub r4, r4, 0xa",
            "beq 0x800bd5c",
            "bl osl_delay",
            "mov r0, r7",
            "mov r3, 4",
            "mov r1, r5",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 4]",
            "mov r0, 0xa",
            "and r3, r3, 0x3e0",
            "cmp r3, 0x3e0",
            "bne 0x800bd24",
            "mov r0, r7",
            "mov r3, 4",
            "mov r1, r5",
            "mov r2, r6",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 4]",
            "and r3, r3, 0x3e0",
            "cmp r3, 0x3e0",
            "movweq r3, 0x1024",
            "moveq r0, 0",
            "strbeq sl, [r8, r3]",
            "bne 0x800bd94",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "mov r0, r7",
            "mov r1, sb",
            "mov r2, r6",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 4]",
            "ldr r0, [0x0800bdc4]",
            "ldr r1, [0x0800bdc8]",
            "bl printk",
            "mvn r0, 0",
            "b 0x800bd8c"
        ]
    },
    "fcn.0800cf18": {
        "function_address": "0x0800cf18",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r4, r0",
            "ldr r0, [r0, 8]",
            "bl si_osh",
            "movw r3, 0x1024",
            "movw r2, 0x11ac",
            "ldrb r3, [r4, r3]",
            "ldr r5, [r4, r2]",
            "cmp r3, 1",
            "moveq sl, 0",
            "beq 0x800cff8",
            "mov r0, r4",
            "mov r1, 1",
            "bl fcn.0800bc88",
            "subs sl, r0, 0",
            "bne 0x800cff8",
            "dsb sy",
            "ldr r6, [0x0800d080]",
            "ldr r3, [r6, 0xc]",
            "cmp r3, 0",
            "beq 0x800cf70",
            "blx r3",
            "mov r3, 0",
            "str r3, [r5, 8]",
            "dsb sy",
            "ldr r3, [r6, 0xc]",
            "cmp r3, 0",
            "beq 0x800cf8c",
            "blx r3",
            "mov r3, 0",
            "str r3, [r5, 0xc]",
            "dsb sy",
            "ldr r3, [r6, 0xc]",
            "cmp r3, 0",
            "beq 0x800cfa8",
            "blx r3",
            "mov r3, 0",
            "str r3, [r5, 0x2c]",
            "dsb sy",
            "ldr r3, [r6, 0xc]",
            "cmp r3, 0",
            "beq 0x800cfc4",
            "blx r3",
            "mov r7, 0",
            "movw r6, 0x1026",
            "str r7, [r5, 0x28]",
            "ldrh r3, [r4, r6]",
            "cmp r3, r7",
            "bne 0x800d000",
            "ldr r3, [r4]",
            "mov r1, 0",
            "ldr r0, [r4, 0x14]",
            "mov r2, r1",
            "bic r3, r3, 6",
            "str r3, [r4]",
            "bl robo_fa_enable",
            "mov r0, sl",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}",
            "ldr r0, [r4, 0x10]",
            "mov r8, r7",
            "bl et_fa_lock",
            "ldr r3, [r4, 0x20]",
            "ldr sb, [r3, r7]",
            "add r3, r3, r7",
            "cmp sb, 0",
            "beq 0x800d064",
            "mov r1, sb",
            "mov r0, r4",
            "bl fcn.0800cd1c",
            "ldrh r3, [r4, r6]",
            "ldr r0, [r4, 8]",
            "sub r3, r3, 1",
            "strh r3, [r4, r6]",
            "ldr r5, [sb, 0x18]",
            "bl si_osh",
            "mov r1, sb",
            "mov r2, 0x44",
            "bl osl_mfree",
            "cmp r5, 0",
            "mov sb, r5",
            "bne 0x800d020",
            "ldr r3, [r4, 0x20]",
            "add r3, r3, r7",
            "add r7, r7, 4",
            "str r8, [r3]",
            "cmp r7, 0x400",
            "bne 0x800d00c",
            "ldr r0, [r4, 0x10]",
            "bl et_fa_unlock",
            "b 0x800cfdc"
        ]
    },
    "sym.adm_config_vlan": {
        "function_address": "0x080065b0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x6c",
            "ldr lr, [0x08006854]",
            "add r2, sp, 0x10",
            "add r3, sp, 0x40",
            "mov r6, r0",
            "str r2, [sp, 4]",
            "mov r5, 0",
            "str r3, [sp]",
            "add r7, lr, 0x30",
            "ldm lr!, {r0, r1, r2, r3}",
            "add r4, sp, 0x60",
            "mov sl, r6",
            "ldr ip, [sp, 4]",
            "ldr sb, [0x08006858]",
            "stm ip!, {r0, r1, r2, r3}",
            "ldm lr!, {r0, r1, r2, r3}",
            "stm ip!, {r0, r1, r2, r3}",
            "ldm lr, {r0, r1, r2, r3}",
            "stm ip, {r0, r1, r2, r3}",
            "ldm r7, {r0, r1, r2, r3}",
            "ldr r7, [sp]",
            "stm r7, {r0, r1, r2, r3}",
            "ldr r0, [r6]",
            "bl si_coreidx",
            "str r0, [r6, 8]",
            "ldr r0, [r6]",
            "bl si_gpiosetcore",
            "mov r0, r6",
            "mov r1, 0x11",
            "movw r2, 0xff30",
            "bl fcn.080062fc",
            "movw ip, 0",
            "uxth r7, r5",
            "movt ip, 0",
            "ldr r2, [0x0800685c]",
            "ldm ip, {r0, r1}",
            "mov r3, r5",
            "str r7, [sp, 8]",
            "str r0, [r4]",
            "add r0, sp, 0x50",
            "strb r1, [r4, 4]",
            "mov r1, 0xe",
            "bl snprintf",
            "ldr r0, [sl, 4]",
            "add r1, sp, 0x50",
            "bl getvar",
            "subs fp, r0, 0",
            "moveq r8, fp",
            "beq 0x800677c",
            "lsl r2, r5, 0xa",
            "movw r3, 0x800f",
            "movt r3, 0xffff",
            "orr r3, r2, r3",
            "mov r8, 0",
            "uxth r3, r3",
            "mov r7, r5",
            "str r3, [sp, 0xc]",
            "ldrb r3, [fp]",
            "cmp r3, 0x20",
            "addeq r3, fp, 1",
            "bne 0x80066b8",
            "mov fp, r3",
            "ldrb r2, [r3], 1",
            "cmp r2, 0x20",
            "beq 0x80066a8",
            "mov r0, fp",
            "ldr r1, [0x08006860]",
            "bl bcmstrstr",
            "subs r6, r0, 0",
            "rsbne r5, fp, r6",
            "beq 0x8006834",
            "cmp r5, 0",
            "beq 0x8006778",
            "cmp r5, 4",
            "mov r2, r5",
            "movhi r5, 4",
            "mov r1, fp",
            "movhi r2, r5",
            "mov r0, r4",
            "bl strncpy",
            "add ip, sp, 0x68",
            "mov r2, 0",
            "add r5, ip, r5",
            "mov r0, r4",
            "strb r2, [r5, -8]",
            "bl bcm_atoi",
            "cmp r0, 5",
            "bls 0x8006730",
            "ldr r3, [sb]",
            "tst r3, 1",
            "bne 0x8006844",
            "cmp r6, 0",
            "beq 0x8006778",
            "mov fp, r6",
            "b 0x8006698",
            "add ip, sp, 0x68",
            "add r3, ip, r0, lsl 3",
            "sub r5, r3, 0x58",
            "ldrb r1, [r5, 5]",
            "ldrh r2, [r5, 2]",
            "cmp r1, 0",
            "orr r8, r8, r2",
            "uxth r8, r8",
            "beq 0x8006820",
            "mov r0, r4",
            "mov r1, 0x2a",
            "bl strchr",
            "cmp r0, 0",
            "beq 0x8006720",
            "ldr r2, [sp, 8]",
            "cmp r6, 0",
            "strh r2, [r5, 6]",
            "bne 0x8006728",
            "mov r5, r7",
            "add r3, sp, 0x40",
            "mov r0, sl",
            "ldrb r1, [r3, r5]",
            "mov r2, r8",
            "add r5, r5, 1",
            "bl fcn.080062fc",
            "cmp r5, 0x10",
            "bne .LC11",
            "mov r6, sl",
            "mov r4, 0",
            "movw r5, 0xffff",
            "add r7, sp, 0x10",
            "add r1, r7, r4",
            "ldrb r3, [r1, 5]",
            "cmp r3, 0",
            "beq 0x80067fc",
            "ldrh ip, [r1, 6]",
            "movw r3, 0x800f",
            "movt r3, 0xffff",
            "movw r2, 0xfc1f",
            "mov r0, r6",
            "cmp ip, r5",
            "beq 0x80067fc",
            "ldrb lr, [r1, 4]",
            "ldrb r1, [r7, r4]",
            "cmp lr, 0",
            "movne lr, 0x10",
            "moveq lr, 0",
            "orr ip, lr, ip, lsl 10",
            "orr r3, ip, r3",
            "and r2, r3, r2",
            "bl fcn.080062fc",
            "add r4, r4, 8",
            "cmp r4, 0x30",
            "bne 0x80067a8",
            "ldr r0, [r6]",
            "ldr r1, [r6, 8]",
            "bl si_setcoreidx",
            "mov r0, 0",
            "add sp, sp, 0x6c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "mov r0, sl",
            "ldrb r1, [r3, -0x58]",
            "ldr r2, [sp, 0xc]",
            "bl fcn.080062fc",
            "b 0x8006720",
            "mov r0, fp",
            "bl strlen",
            "mov r5, r0",
            "b 0x80066d0",
            "mov r1, r0",
            "ldr r0, [0x08006864]",
            "bl printk",
            "b 0x8006720"
        ]
    },
    "fcn.080062fc": {
        "function_address": "0x080062fc",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "lsl lr, r1, 5",
            "ldr r5, [0x080063cc]",
            "lsl ip, r2, 5",
            "orr lr, lr, r2, lsr 11",
            "lsr r4, r1, 3",
            "lsr r3, r2, 3",
            "uxtb ip, ip",
            "ldr r5, [r5]",
            "uxtb lr, lr",
            "sub sp, sp, 0x18",
            "orr r6, r4, 0xa0",
            "strb lr, [sp, 0x15]",
            "tst r5, 2",
            "mov r4, r0",
            "uxtb r5, r3",
            "strb r6, [sp, 0x14]",
            "strb r3, [sp, 0x16]",
            "strb ip, [sp, 0x17]",
            "bne 0x80063b4",
            "ldr ip, [r4, 0x10]",
            "mov r0, r4",
            "ldr r1, [r4, 0xc]",
            "mov r2, 0",
            "ldr r3, [r4, 0x14]",
            "orr r1, ip, r1",
            "orr r1, r1, r3",
            "bl fcn.08006248",
            "mov r0, r4",
            "add r2, sp, 0x14",
            "mov r3, 0x1b",
            "mov r1, 1",
            "bl fcn.080060fc",
            "mov r0, r4",
            "add r1, r4, 0x10",
            "mov r2, 2",
            "bl fcn.08006280",
            "ldr r1, [r4, 0x10]",
            "ldr r2, [r4, 0xc]",
            "ldr r3, [r4, 0x14]",
            "ldr r0, [r4]",
            "orr r1, r1, r2",
            "orr r1, r1, r3",
            "bl fcn.080062e0",
            "add sp, sp, 0x18",
            "pop {r4, r5, r6, pc}",
            "mov r3, r6",
            "ldr r0, [0x080063d0]",
            "str lr, [sp]",
            "stmib sp, {r5, ip}",
            "bl printk",
            "b 0x800634c"
        ]
    },
    "sym.etc_dump": {
        "function_address": "0x0800313c",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r4, r0",
            "mov r5, r1",
            "bl fcn.08001db4",
            "ldr r3, [r4, 0x7c]",
            "mov r1, r5",
            "ldr r0, [r4, 0x80]",
            "ldr r3, [r3, 0x6c]",
            "blx r3",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.08001db4": {
        "function_address": "0x08001db4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sl, lr}",
            "mov r4, r0",
            "ldr r2, [0x080021a8]",
            "mov r6, r1",
            "sub sp, sp, 0x5c",
            "ldr r0, [r0, 0x44]",
            "add r5, sp, 0x18",
            "ldr r1, [0x080021ac]",
            "ldr ip, [r2]",
            "cmp r0, 0",
            "ldr r2, [0x080021b0]",
            "ldr r0, [r4, 0x40]",
            "moveq r2, r1",
            "ldm r4, {r3, lr}",
            "ldr r1, [0x080021b4]",
            "str r0, [sp, 8]",
            "mov r0, r6",
            "str r2, [sp, 0xc]",
            "mov r2, r4",
            "str lr, [sp]",
            "str ip, [sp, 4]",
            "bl bcm_bprintf",
            "ldrb r1, [r4, 0x2f]",
            "ldrb r2, [r4, 0x2c]",
            "ldrb r3, [r4, 0x2d]",
            "str r1, [sp]",
            "ldr ip, [r4, 0x30]",
            "ldrb r0, [r4, 0x3c]",
            "ldr r1, [0x080021b8]",
            "str ip, [sp, 4]",
            "ldr ip, [r4, 0x34]",
            "str ip, [sp, 8]",
            "ldr ip, [r4, 0x38]",
            "str r0, [sp, 0x10]",
            "mov r0, r6",
            "str ip, [sp, 0xc]",
            "bl bcm_bprintf",
            "ldr r1, [r4, 0x164]",
            "ldrb r0, [r4, 0x2e]",
            "ldrb ip, [r4, 0x168]",
            "ldr r3, [r4, 0x4c]",
            "ldrb r2, [r4, 0x48]",
            "str r1, [sp]",
            "str r0, [sp, 8]",
            "mov r0, r6",
            "ldr r1, [0x080021bc]",
            "str ip, [sp, 4]",
            "bl bcm_bprintf",
            "ldr r1, [r4, 0x68]",
            "ldrh r2, [r4, 0x60]",
            "ldrh r3, [r4, 0x62]",
            "str r1, [sp]",
            "ldr r0, [r4, 0x8c]",
            "ldr r1, [0x080021c0]",
            "str r0, [sp, 4]",
            "ldr r0, [r4, 0x90]",
            "str r0, [sp, 8]",
            "ldr r0, [r4, 0x94]",
            "str r0, [sp, 0xc]",
            "mov r0, r6",
            "bl bcm_bprintf",
            "add r1, sp, 0x38",
            "add r0, r4, 0x9e",
            "bl bcm_ether_ntoa",
            "mov r1, r5",
            "mov r7, r0",
            "add r0, r4, 0x98",
            "bl bcm_ether_ntoa",
            "ldr r1, [0x080021c4]",
            "mov r3, r0",
            "mov r2, r7",
            "mov r0, r6",
            "bl bcm_bprintf",
            "ldr r3, [r4, 0x164]",
            "cmp r3, 0",
            "bne 0x8002148",
            "ldrb r2, [r4, 0x169]",
            "mov r0, r6",
            "ldr r1, [0x080021c8]",
            "add r7, r4, 0x1dc",
            "bl bcm_bprintf",
            "ldr r1, [0x080021cc]",
            "mov r0, r6",
            "bl bcm_bprintf",
            "ldr r3, [r4, 0x7c]",
            "mov r5, 0",
            "ldr r0, [r4, 0x80]",
            "mov r8, 0x64",
            "ldr r3, [r3, 0x44]",
            "blx r3",
            "ldr r1, [r4, 0x198]",
            "ldr r2, [r4, 0x188]",
            "ldr r3, [r4, 0x18c]",
            "str r1, [sp]",
            "ldr r0, [r4, 0x190]",
            "ldr r1, [0x080021d0]",
            "str r0, [sp, 4]",
            "ldr r0, [r4, 0x194]",
            "str r0, [sp, 8]",
            "ldr r0, [r4, 0x1a0]",
            "str r0, [sp, 0xc]",
            "mov r0, r6",
            "bl bcm_bprintf",
            "ldr r3, [r4, 0x7c]",
            "mov r1, r6",
            "ldr r0, [r4, 0x80]",
            "mov r2, 0",
            "ldr r3, [r3, 0x48]",
            "blx r3",
            "ldr r1, [r4, 0x1b0]",
            "ldr r2, [r4, 0x19c]",
            "ldr r3, [r4, 0x1ac]",
            "str r1, [sp]",
            "ldr r0, [r4, 0x1b4]",
            "ldr r1, [0x080021d4]",
            "str r0, [sp, 4]",
            "ldr r0, [r4, 0x1b8]",
            "str r0, [sp, 8]",
            "mov r0, r6",
            "bl bcm_bprintf",
            "ldr r1, [r4, 0x1c0]",
            "ldr r2, [r4, 0x1a8]",
            "ldr r3, [r4, 0x1bc]",
            "str r1, [sp]",
            "ldr r0, [r4, 0x1cc]",
            "ldr r1, [0x080021d8]",
            "str r0, [sp, 4]",
            "ldr r0, [r4, 0x1a4]",
            "str r0, [sp, 8]",
            "ldr r0, [r4, 0x1c8]",
            "str r0, [sp, 0xc]",
            "mov r0, r6",
            "bl bcm_bprintf",
            "ldr r1, [r4, 0x1d8]",
            "ldr r2, [r4, 0x1d0]",
            "ldr r3, [r4, 0x1d4]",
            "str r1, [sp]",
            "ldr r0, [r4, 0x1dc]",
            "ldr r1, [0x080021dc]",
            "str r0, [sp, 4]",
            "mov r0, r6",
            "bl bcm_bprintf",
            "ldrb r1, [r4, 0xd]",
            "mov r3, 0x200",
            "str r3, [sp]",
            "mov r2, 0x40",
            "mov r3, 0x140",
            "str r2, [sp, 0xc]",
            "str r3, [sp, 4]",
            "mov r2, 0",
            "mov r3, 0x30",
            "str r1, [sp, 0x10]",
            "mov r0, r6",
            "ldr r1, [0x080021e0]",
            "str r3, [sp, 8]",
            "bl bcm_bprintf",
            "ldr r1, [0x080021e4]",
            "mov r0, r6",
            "ldr r2, [r4, 0x24]",
            "ldr r3, [r4, 0x20]",
            "bl bcm_bprintf",
            "mov r0, r6",
            "ldr r1, [0x080021e8]",
            "bl bcm_bprintf",
            "b 0x8002054",
            "add r5, r5, 1",
            "cmp r5, 0x30",
            "beq 0x80020b8",
            "ldr r3, [r4, 0x1d0]",
            "subs r1, r3, 0",
            "beq 0x80020b8",
            "ldr sl, [r7, 4]!",
            "mul r0, r8, sl",
            "bl __aeabi_uidiv",
            "ldr r1, [0x080021ec]",
            "mov r3, r0",
            "mov r2, sl",
            "mov r0, r6",
            "bl bcm_bprintf",
            "and r3, r5, 7",
            "cmp r3, 7",
            "movne r3, 0",
            "moveq r3, 1",
            "cmp r5, 0x2f",
            "moveq r3, 0",
            "cmp r3, 0",
            "beq 0x8002048",
            "mov r0, r6",
            "ldr r1, [0x080021f0]",
            "add r5, r5, 1",
            "bl bcm_bprintf",
            "cmp r5, 0x30",
            "bne 0x8002054",
            "mov r0, r6",
            "ldr r1, [0x080021f4]",
            "ldr r2, [r4, 0x3a0]",
            "add r7, r4, 0x29c",
            "bl bcm_bprintf",
            "mov r5, 0",
            "b 0x80020e0",
            "add r5, r5, 1",
            "cmp r5, 0x40",
            "beq 0x8002108",
            "ldr r3, [r7, 4]!",
            "cmp r3, 0",
            "beq 0x80020d4",
            "mov r2, r5",
            "mov r0, r6",
            "ldr r1, [0x080021f8]",
            "add r5, r5, 1",
            "bl bcm_bprintf",
            "cmp r5, 0x40",
            "bne 0x80020e0",
            "add r0, r4, 0x2a0",
            "mov r1, 0x100",
            "bl __memzero",
            "ldrb r2, [r4, 0x3a4]",
            "mov r0, r6",
            "ldr r1, [0x080021fc]",
            "bl bcm_bprintf",
            "mov r0, r6",
            "ldr r1, [0x08002200]",
            "ldrb r2, [r4, 0x3a5]",
            "bl bcm_bprintf",
            "mov r0, r6",
            "ldr r1, [0x080021cc]",
            "bl bcm_bprintf",
            "add sp, sp, 0x5c",
            "pop {r4, r5, r6, r7, r8, sl, pc}",
            "mov r0, r6",
            "ldr r1, [0x08002204]",
            "bl bcm_bprintf",
            "ldr r3, [r4, 0x164]",
            "cmp r3, 0",
            "beq 0x8002198",
            "mov r7, 0",
            "add r0, r7, r7, lsl 1",
            "mov r1, r5",
            "add r7, r7, 1",
            "add r0, r4, r0, lsl 1",
            "add r0, r0, 0xa4",
            "bl bcm_ether_ntoa",
            "ldr r1, [0x08002208]",
            "mov r2, r0",
            "mov r0, r6",
            "bl bcm_bprintf",
            "ldr r3, [r4, 0x164]",
            "cmp r3, r7",
            "bhi 0x8002164",
            "mov r0, r6",
            "ldr r1, [0x080021cc]",
            "bl bcm_bprintf",
            "b 0x8001ee4"
        ]
    },
    "sym.et_discard": {
        "function_address": "0x080018e0",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r5, r0",
            "ldr r3, [r0]",
            "mov r4, r1",
            "mov r0, r1",
            "ldrb r1, [r5, 0x18]",
            "ldr r3, [r3, 0x1c]",
            "ldr r6, [r4, 0xc4]",
            "add r1, r1, r3",
            "bl skb_pull",
            "mov r0, r5",
            "ldr r1, [r4, 0xc4]",
            "mov r2, r6",
            "bl sym.et_error.clone.24",
            "ldr r0, [r5, 0xc]",
            "mov r1, r4",
            "mov r2, 0",
            "pop {r4, r5, r6, lr}",
            "b osl_pktfree"
        ]
    },
    "sym.et_error.clone.24": {
        "function_address": "0x08001068",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "sub sp, sp, 0x24",
            "mov r5, r0",
            "add r0, r1, 6",
            "mov r1, sp",
            "mov r4, r2",
            "bl bcm_ether_ntoa",
            "ldr r3, [r5]",
            "movw r1, 0x82d",
            "mov r6, sp",
            "ldr r0, [r3, 0x70]",
            "mov r2, r3",
            "cmp r0, r1",
            "ldrhne r3, [r4, 2]",
            "beq 0x8001148",
            "ldrh r3, [r4, 2]",
            "ubfx r3, r3, 1, 1",
            "cmp r3, 0",
            "beq 0x80010c4",
            "ldr r3, [0x08001250]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "bne 0x80011ac",
            "ldr r1, [r2, 0x70]",
            "movw r0, 0x82d",
            "mov r3, r2",
            "cmp r1, r0",
            "ldrheq r0, [r4, 2]",
            "ldrhne r0, [r4, 2]",
            "ubfxeq r0, r0, 7, 1",
            "andne r0, r0, 1",
            "cmp r0, 0",
            "beq 0x80010fc",
            "ldr r0, [0x08001250]",
            "ldr r0, [r0]",
            "tst r0, 1",
            "bne 0x80011d8",
            "movw r7, 0x82d",
            "cmp r1, r7",
            "beq 0x8001140",
            "ldrh r2, [r4, 2]",
            "tst r2, 8",
            "beq 0x8001124",
            "ldr r2, [0x08001250]",
            "ldr r2, [r2]",
            "tst r2, 1",
            "bne 0x8001218",
            "ldrh r2, [r4, 2]",
            "tst r2, 4",
            "beq 0x8001140",
            "ldr r2, [0x08001250]",
            "ldr r2, [r2]",
            "tst r2, 1",
            "bne 0x80011c4",
            "add sp, sp, 0x24",
            "pop {r4, r5, r6, r7, pc}",
            "ldrh r1, [r4, 2]",
            "tst r1, 0x80",
            "beq 0x8001184",
            "ldr r2, [0x08001250]",
            "ldr r2, [r2]",
            "tst r2, 1",
            "bne 0x800123c",
            "ldr r2, [r3, 0x1c8]",
            "add r2, r2, 1",
            "str r2, [r3, 0x1c8]",
            "movw r3, 0x82d",
            "ldr r2, [r5]",
            "ldr r1, [r2, 0x70]",
            "cmp r1, r3",
            "bne 0x80010a4",
            "ldrh r3, [r4, 2]",
            "tst r3, 0x10",
            "beq 0x80011a0",
            "ldr r3, [0x08001250]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "bne 0x80011f0",
            "ldrh r3, [r4, 2]",
            "ubfx r3, r3, 3, 1",
            "b 0x80010ac",
            "ldr r1, [r2, 4]",
            "mov r2, sp",
            "ldr r0, [0x08001254]",
            "bl printk",
            "ldr r2, [r5]",
            "b 0x80010c4",
            "mov r2, sp",
            "ldr r1, [r3, 4]",
            "ldr r0, [0x08001258]",
            "bl printk",
            "b 0x8001140",
            "ldr r1, [r2, 4]",
            "ldr r0, [0x0800125c]",
            "bl printk",
            "ldr r3, [r5]",
            "ldr r1, [r3, 0x70]",
            "b 0x80010fc",
            "ldr r1, [r2, 4]",
            "mov r2, sp",
            "ldr r0, [0x08001260]",
            "bl printk",
            "ldr r2, [r5]",
            "movw r3, 0x82d",
            "ldr r1, [r2, 0x70]",
            "cmp r1, r3",
            "beq 0x80011a0",
            "b 0x80010a4",
            "ldr r1, [r3, 4]",
            "mov r2, sp",
            "ldr r0, [0x08001264]",
            "bl printk",
            "ldr r3, [r5]",
            "ldr r2, [r3, 0x70]",
            "cmp r2, r7",
            "bne 0x8001124",
            "b 0x8001140",
            "ldr r1, [r3, 4]",
            "ldr r0, [0x08001268]",
            "bl printk",
            "ldr r3, [r5]",
            "b 0x8001164"
        ]
    },
    "sym.fa_core2unit": {
        "function_address": "0x0800d084",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r5, r0",
            "mov r4, r1",
            "bl fcn.0800c648",
            "cmp r0, 2",
            "movhi r5, 1",
            "bhi 0x800d0b4",
            "ldr r5, [r5, 0x3c]",
            "movw r3, 0xcf26",
            "cmp r5, r3",
            "movne r5, 0",
            "moveq r5, 1",
            "mov r0, 0",
            "ldr r1, [0x0800d128]",
            "bl getintvar",
            "cmp r0, 1",
            "beq 0x800d0e4",
            "mov r0, 0",
            "ldr r1, [0x0800d128]",
            "bl getintvar",
            "cmp r0, 2",
            "beq 0x800d0e4",
            "mov r0, r4",
            "pop {r3, r4, r5, pc}",
            "cmp r5, 0",
            "beq 0x800d0dc",
            "cmp r4, 2",
            "beq 0x800d114",
            "ldr r3, [0x0800d12c]",
            "ldr r0, [r3]",
            "cmn r0, 1",
            "moveq r0, 0",
            "cmp r0, r4",
            "movne r0, r4",
            "moveq r0, 2",
            "pop {r3, r4, r5, pc}",
            "ldr r3, [0x0800d12c]",
            "ldr r0, [r3]",
            "cmn r0, 1",
            "moveq r0, 0",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.0800c648": {
        "function_address": "0x0800c648",
        "instructions": [
            "push {r4, r5, lr}",
            "movw r2, 0xcf12",
            "ldr r3, [r0, 0x3c]",
            "movw r4, 0xcf1a",
            "sub sp, sp, 0xc",
            "mov r5, r0",
            "cmp r3, r2",
            "cmpne r3, r4",
            "movne r4, 0",
            "moveq r4, 1",
            "beq 0x800c68c",
            "movw r2, 0xcf26",
            "cmp r3, r2",
            "beq 0x800c68c",
            "mov r0, r4",
            "add sp, sp, 0xc",
            "pop {r4, r5, pc}",
            "mov r0, 0x7000",
            "mov r1, 0x1000",
            "mov r2, 0",
            "movt r0, 0x1800",
            "bl __arm_ioremap",
            "mov r4, r0",
            "mov r0, r5",
            "bl si_osh",
            "dsb sy",
            "ldr r3, [0x0800c700]",
            "ldr r3, [r3, 0xc]",
            "cmp r3, 0",
            "beq 0x800c6c4",
            "blx r3",
            "mov r3, 1",
            "mov r0, r5",
            "movt r3, 0x240",
            "str r3, [r4, 0x2c]",
            "bl si_osh",
            "mov r0, r5",
            "bl si_osh",
            "add r1, r4, 0x3c",
            "add r2, sp, 4",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "mov r0, r4",
            "ldrb r4, [sp, 4]",
            "bl __iounmap",
            "b 0x800c680"
        ]
    },
    "sym.fa_dump": {
        "function_address": "0x0800e5e8",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r8, r3",
            "sub sp, sp, 0xc0",
            "sub r3, r1, 2",
            "mov r5, r1",
            "mov r7, r2",
            "mov r4, r0",
            "str r2, [sp, 0xb8]",
            "str r8, [sp, 0xbc]",
            "cmp r3, 5",
            "ldrls pc, [pc, r3, lsl 2]",
            "b 0x800c4b4",
            "add sp, sp, 0xc0",
            "pop {r4, r5, r6, r7, r8, pc}",
            "ldr r1, [0x0800c638]",
            "ldr r0, [0x0800c63c]",
            "bl printk",
            "b 0x800c298",
            "cmp r2, 0",
            "push {r4, r5, r6, r7, r8, lr}",
            "moveq r7, 3",
            "movne r7, 6",
            "moveq r8, 2",
            "movne r8, 5",
            "moveq r6, 4",
            "movne r6, 7",
            "cmp r0, 0",
            "cmpne r1, 0",
            "mov r5, r1",
            "mov r4, r0",
            "popeq {r4, r5, r6, r7, r8, pc}",
            "cmp r0, 0",
            "beq 0x800e630",
            "ldr r3, [r0]",
            "tst r3, 0x10",
            "popne {r4, r5, r6, r7, r8, pc}",
            "movw r3, 0x1024",
            "ldrb r3, [r4, r3]",
            "cmp r3, 2",
            "beq 0x800e650",
            "mov r0, r5",
            "ldr r1, [0x0800e6a4]",
            "pop {r4, r5, r6, r7, r8, lr}",
            "b bcm_bprintf",
            "movw r3, 0x1026",
            "mov r0, r5",
            "ldrh r2, [r4, r3]",
            "ldr r1, [0x0800e6a8]",
            "bl bcm_bprintf",
            "mov r0, r4",
            "mov r1, r8",
            "mov r3, r5",
            "ldr r2, [0x0800e6ac]",
            "bl 0x800c20c",
            "mov r0, r4",
            "mov r1, r7",
            "mov r3, r5",
            "ldr r2, [0x0800e6ac]",
            "bl 0x800c20c",
            "mov r0, r4",
            "mov r1, r6",
            "ldr r2, [0x0800e6ac]",
            "mov r3, r5",
            "pop {r4, r5, r6, r7, r8, lr}",
            "b 0x800c20c"
        ]
    },
    "unk.0x800c20c": {
        "function_address": "0x0800c20c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r8, r3",
            "sub sp, sp, 0xc0",
            "sub r3, r1, 2",
            "mov r5, r1",
            "mov r7, r2",
            "mov r4, r0",
            "str r2, [sp, 0xb8]",
            "str r8, [sp, 0xbc]",
            "cmp r3, 5",
            "ldrls pc, [pc, r3, lsl 2]",
            "b 0x800c4b4",
            "add sp, sp, 0xc0",
            "pop {r4, r5, r6, r7, r8, pc}",
            "ldr r1, [0x0800c638]",
            "ldr r0, [0x0800c63c]",
            "bl printk",
            "b 0x800c298",
            "cmp r2, 0",
            "push {r4, r5, r6, r7, r8, lr}",
            "moveq r7, 3",
            "movne r7, 6",
            "moveq r8, 2",
            "movne r8, 5",
            "moveq r6, 4",
            "movne r6, 7",
            "cmp r0, 0",
            "cmpne r1, 0",
            "mov r5, r1",
            "mov r4, r0",
            "popeq {r4, r5, r6, r7, r8, pc}",
            "cmp r0, 0",
            "beq 0x800e630",
            "ldr r3, [r0]",
            "tst r3, 0x10",
            "popne {r4, r5, r6, r7, r8, pc}",
            "movw r3, 0x1024",
            "ldrb r3, [r4, r3]",
            "cmp r3, 2",
            "beq 0x800e650",
            "mov r0, r5",
            "ldr r1, [0x0800e6a4]",
            "pop {r4, r5, r6, r7, r8, lr}",
            "b bcm_bprintf",
            "movw r3, 0x1026",
            "mov r0, r5",
            "ldrh r2, [r4, r3]",
            "ldr r1, [0x0800e6a8]",
            "bl bcm_bprintf",
            "mov r0, r4",
            "mov r1, r8",
            "mov r3, r5",
            "ldr r2, [0x0800e6ac]",
            "bl 0x800c20c",
            "mov r0, r4",
            "mov r1, r7",
            "mov r3, r5",
            "ldr r2, [0x0800e6ac]",
            "bl 0x800c20c",
            "mov r0, r4",
            "mov r1, r6",
            "ldr r2, [0x0800e6ac]",
            "mov r3, r5",
            "pop {r4, r5, r6, r7, r8, lr}",
            "b 0x800c20c"
        ]
    },
    "sym.fa_get_macaddr": {
        "function_address": "0x0800e3d8",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r4, r2",
            "ldr r5, [0x0800e4fc]",
            "sub sp, sp, 0x80",
            "mov r7, r0",
            "mov r6, r1",
            "ldr r8, [r5]",
            "cmn r8, 1",
            "movne r3, r8",
            "moveq r3, 0",
            "cmp r2, r3",
            "moveq r8, 2",
            "beq 0x800e418",
            "cmp r2, 2",
            "movne r8, r2",
            "beq 0x800e4dc",
            "mov r0, r7",
            "bl fcn.0800c648",
            "cmp r0, 2",
            "movhi r7, 1",
            "bhi 0x800e440",
            "ldr r7, [r7, 0x3c]",
            "movw r3, 0xcf26",
            "cmp r7, r3",
            "movne r7, 0",
            "moveq r7, 1",
            "mov r0, 0",
            "ldr r1, [0x0800e500]",
            "bl getintvar",
            "cmp r0, 1",
            "beq 0x800e49c",
            "mov r0, 0",
            "ldr r1, [0x0800e500]",
            "bl getintvar",
            "cmp r0, 2",
            "beq 0x800e49c",
            "mov r7, r4",
            "mov r2, r7",
            "ldr r1, [0x0800e504]",
            "mov r0, sp",
            "bl sprintf",
            "mov r0, r6",
            "mov r1, sp",
            "bl getvar",
            "subs r5, r0, 0",
            "beq 0x800e4e8",
            "mov r0, r5",
            "add sp, sp, 0x80",
            "pop {r4, r5, r6, r7, r8, pc}",
            "cmp r7, 0",
            "beq 0x800e468",
            "ldr r3, [r5]",
            "cmn r3, 1",
            "moveq r3, 0",
            "cmp r3, r8",
            "bne 0x800e468",
            "mov r0, 0",
            "ldr r1, [0x0800e500]",
            "bl getintvar",
            "cmp r0, 2",
            "bne 0x800e468",
            "ldr r7, [r5]",
            "cmn r7, 1",
            "moveq r7, 0",
            "b 0x800e46c",
            "cmn r8, 1",
            "moveq r8, 0",
            "b 0x800e418",
            "mov r1, r4",
            "mov r2, r7",
            "ldr r0, [0x0800e508]",
            "bl printk",
            "b 0x800e490"
        ]
    },
    "sym.adm_enable_device": {
        "function_address": "0x08006868",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r2, 0x20",
            "mov r6, r0",
            "ldr r1, [0x0800695c]",
            "ldr r0, [r0, 4]",
            "bl getgpiopin",
            "cmp r0, 0x20",
            "mov r3, r0",
            "beq 0x8006954",
            "mov r7, 1",
            "ldr r0, [r6]",
            "lsl r7, r7, r3",
            "mov r5, 0x14",
            "bl si_coreidx",
            "str r0, [r6, 8]",
            "ldr r0, [r6]",
            "bl si_gpiosetcore",
            "mov r0, r6",
            "mov r1, r7",
            "mov r2, r7",
            "bl fcn.08006248",
            "mov r0, 0x3e8",
            "bl osl_delay",
            "subs r5, r5, 1",
            "bne 0x80068bc",
            "mov r0, r6",
            "mov r1, r7",
            "mov r2, r5",
            "mov r4, 0x64",
            "bl fcn.08006248",
            "mov r0, 0x3e8",
            "bl osl_delay",
            "subs r4, r4, 1",
            "bne 0x80068e0",
            "ldr r3, [r6, 0x10]",
            "mov r0, r6",
            "ldr r1, [r6, 0x14]",
            "mov r4, 0x1e",
            "mov r2, r3",
            "orr r1, r3, r1",
            "bl fcn.08006248",
            "mov r0, r6",
            "mov r1, r7",
            "mov r2, r7",
            "bl fcn.08006248",
            "mov r0, 0x3e8",
            "bl osl_delay",
            "subs r4, r4, 1",
            "bne 0x800691c",
            "ldr r1, [r6, 0x10]",
            "ldr r2, [r6, 0xc]",
            "ldr r3, [r6, 0x14]",
            "ldr r0, [r6]",
            "orr r1, r1, r2",
            "orr r1, r1, r3",
            "bl fcn.080062e0",
            "ldr r0, [r6]",
            "ldr r1, [r6, 8]",
            "bl si_setcoreidx",
            "mov r0, 0",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "sym.fa_set_aux_unit": {
        "function_address": "0x0800e384",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r4, r0",
            "mov r5, r1",
            "bl fcn.0800c648",
            "cmp r0, 2",
            "bls 0x800e3c0",
            "ldr r3, [0x0800e3d4]",
            "ldr r2, [r3]",
            "adds r2, r2, 1",
            "movne r2, 1",
            "cmp r5, 2",
            "orreq r2, r2, 1",
            "cmp r2, 0",
            "streq r5, [r3]",
            "pop {r3, r4, r5, pc}",
            "ldr r2, [r4, 0x3c]",
            "movw r3, 0xcf26",
            "cmp r2, r3",
            "popne {r3, r4, r5, pc}",
            "b 0x800e39c"
        ]
    },
    "sym.fa_conntrack": {
        "function_address": "0x0800e1c4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sl, lr}",
            "mov r4, r1",
            "ldr r3, [r1, 0x78]",
            "sub sp, sp, 0x14",
            "mov r5, r0",
            "mov sl, r2",
            "ldr r3, [r3, 0x78]",
            "tst r3, 1",
            "bne 0x800e1f0",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sl, pc}",
            "ldrb r7, [r1, 0x28]",
            "ldrh r6, [r1, 0x24]",
            "ldrh r8, [r1, 0x26]",
            "ldr r0, [r0, 0x10]",
            "bl et_fa_lock",
            "ldr r0, [r5, 0x20]",
            "add r2, r4, 4",
            "add r3, r4, 0x14",
            "mov r1, sl",
            "str r7, [sp]",
            "stmib sp, {r6, r8}",
            "bl fcn.0800c704",
            "cmp r0, 0",
            "ldreq r3, [r4, 0x78]",
            "ldreq r2, [r3, 0x78]",
            "orreq r2, r2, 2",
            "streq r2, [r3, 0x78]",
            "ldr r0, [r5, 0x10]",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sl, lr}",
            "b et_fa_unlock"
        ]
    },
    "sym.fa_detach": {
        "function_address": "0x0800d480",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r4, r0",
            "ldr r5, [0x0800d4fc]",
            "ldr r3, [r5, 8]",
            "cmp r3, 0",
            "beq 0x800d4a4",
            "bl et_fa_fs_clean",
            "mov r3, 0",
            "str r3, [r5, 8]",
            "cmp r4, 0",
            "popeq {r4, r5, r6, pc}",
            "ldr r3, [r4]",
            "tst r3, 8",
            "bne 0x800d4f0",
            "ldr r3, [r4, 0x20]",
            "cmp r3, 0",
            "beq 0x800d4d8",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "ldr r1, [r4, 0x20]",
            "mov r2, 0x400",
            "bl osl_mfree",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "mov r1, r4",
            "movw r2, 0x11b4",
            "pop {r4, r5, r6, lr}",
            "b osl_mfree",
            "mov r0, r4",
            "bl fcn.0800cf18",
            "b 0x800d4b8"
        ]
    },
    "sym.fa_attach": {
        "function_address": "0x0800d130",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sl, lr}",
            "mov r5, r0",
            "mov r6, r1",
            "mov r7, r2",
            "mov r8, r3",
            "ldr sl, [sp, 0x20]",
            "bl fcn.0800c648",
            "cmp r0, 2",
            "movhi r4, 1",
            "bhi 0x800d16c",
            "ldr r4, [r5, 0x3c]",
            "movw r3, 0xcf26",
            "cmp r4, r3",
            "movne r4, 0",
            "moveq r4, 1",
            "mov r0, 0",
            "ldr r1, [0x0800d458]",
            "bl getintvar",
            "cmp r0, 1",
            "beq 0x800d19c",
            "mov r0, 0",
            "ldr r1, [0x0800d458]",
            "bl getintvar",
            "cmp r0, 2",
            "beq 0x800d19c",
            "mov r0, 0",
            "pop {r3, r4, r5, r6, r7, r8, sl, pc}",
            "cmp r4, 0",
            "beq 0x800d2c4",
            "cmp r8, 2",
            "bne 0x800d2cc",
            "mov r0, r5",
            "bl si_osh",
            "movw r1, 0x11b4",
            "bl osl_malloc",
            "subs r4, r0, 0",
            "beq 0x800d434",
            "movw r1, 0x11b4",
            "bl __memzero",
            "str r6, [r4, 0x10]",
            "mov r0, r5",
            "str r5, [r4, 8]",
            "str r7, [r4, 0xc]",
            "bl fcn.0800c648",
            "ldr r3, [0x0800d45c]",
            "str r0, [r4, 4]",
            "str sl, [r4, 0x14]",
            "ldr r3, [r3]",
            "cmn r3, 1",
            "moveq r3, 0",
            "cmp r3, r8",
            "beq 0x800d2ec",
            "cmp r8, 2",
            "beq et_fa_fs_create",
            "ldr r0, [r4, 8]",
            "bl si_coreidx",
            "movw r3, 0x11ac",
            "ldr r3, [r4, r3]",
            "cmp r3, 0",
            "beq 0x800d368",
            "ldr r3, [r4, 0x1c]",
            "cmp r3, 0",
            "beq 0x800d368",
            "ldr r3, [r5, 0x3c]",
            "movw r2, 0xcf12",
            "movw r1, 0xcf1a",
            "cmp r3, r2",
            "cmpne r3, r1",
            "beq 0x800d32c",
            "movw r2, 0xcf26",
            "cmp r3, r2",
            "beq 0x800d32c",
            "mov r0, r5",
            "bl si_osh",
            "mov r1, 0x400",
            "bl osl_malloc",
            "cmp r0, 0",
            "mov r5, r0",
            "str r0, [r4, 0x20]",
            "beq 0x800d40c",
            "mov r1, 0x400",
            "ldr r5, [0x0800d460]",
            "bl __memzero",
            "ldr r0, [r4, 0x10]",
            "bl et_fa_lock_init",
            "ldr r3, [r4]",
            "ldr r0, [r4, 0x10]",
            "str r4, [r5, 4]",
            "orr r3, r3, 8",
            "str r3, [r4]",
            "bl et_fa_set_dev_on",
            "ldr r6, [r5]",
            "cmp r6, 0",
            "beq 0x800d2c4",
            "ldr r3, [r5, 4]",
            "ldr r0, [r3, 0x10]",
            "bl et_fa_get_fa_dev",
            "movw r3, 0x11b0",
            "str r0, [r6, r3]",
            "ldr r0, [r4, 0x14]",
            "bl robo_fa_aux_init",
            "mov r0, r4",
            "pop {r3, r4, r5, r6, r7, r8, sl, pc}",
            "ldr r3, [0x0800d45c]",
            "ldr r3, [r3]",
            "cmn r3, 1",
            "moveq r3, 0",
            "cmp r3, r8",
            "beq 0x800d1ac",
            "mov r0, 0",
            "pop {r3, r4, r5, r6, r7, r8, sl, pc}",
            "ldr r3, [0x0800d460]",
            "ldr r1, [r4]",
            "ldr r2, [r3, 4]",
            "orr r1, r1, 0x10",
            "str r4, [r3]",
            "str r1, [r4]",
            "cmp r2, 0",
            "beq 0x800d320",
            "ldr r0, [r2, 0x10]",
            "bl et_fa_get_fa_dev",
            "ldr sl, [r4, 0x14]",
            "movw r3, 0x11b0",
            "str r0, [r4, r3]",
            "mov r0, sl",
            "bl robo_fa_aux_init",
            "b 0x800d2c4",
            "ldr r2, [r4, 4]",
            "cmp r2, 2",
            "bne 0x800d250",
            "movw r2, 0xcf26",
            "cmp r3, r2",
            "beq 0x800d250",
            "ldr r3, [r4]",
            "ldr r1, [0x0800d464]",
            "ldr r0, [0x0800d468]",
            "orr r3, r3, 1",
            "str r3, [r4]",
            "ldr r2, [r5, 0x3c]",
            "ldr r3, [r5, 0x44]",
            "bl printk",
            "b 0x800d250",
            "mov r0, r5",
            "bl si_osh",
            "mov r1, r4",
            "movw r2, 0x11b4",
            "bl osl_mfree",
            "ldr r1, [0x0800d464]",
            "ldr r0, [0x0800d46c]",
            "bl printk",
            "b 0x800d194",
            "bl et_fa_fs_create",
            "ldr r3, [0x0800d460]",
            "str r0, [r3, 8]",
            "ldr r0, [r4, 8]",
            "bl si_coreidx",
            "mov r2, r8",
            "movw r1, 0x82d",
            "mov r6, r0",
            "ldr r0, [r4, 8]",
            "bl si_setcore",
            "mov r1, 0",
            "ldr r0, [r4, 8]",
            "bl si_addrspace",
            "mov r2, 3",
            "str r0, [r4, 0x1c]",
            "movw r1, 0x82d",
            "ldr r0, [r4, 8]",
            "bl si_setcore",
            "cmp r0, 0",
            "movw r3, 0x11ac",
            "str r0, [r4, r3]",
            "moveq r2, r0",
            "addne r2, r0, 0xc00",
            "strne r2, [r4, r3]",
            "ldr r1, [0x0800d470]",
            "ldr r3, [r4, 0x1c]",
            "ldr r0, [0x0800d474]",
            "bl printk",
            "ldr r0, [r4, 8]",
            "mov r1, r6",
            "bl si_setcoreidx",
            "b 0x800d210",
            "ldr r1, [0x0800d464]",
            "ldr r0, [0x0800d478]",
            "bl printk",
            "ldr r0, [r4, 8]",
            "bl si_osh",
            "mov r1, r4",
            "movw r2, 0x11b4",
            "bl osl_mfree",
            "mov r0, r5",
            "pop {r3, r4, r5, r6, r7, r8, sl, pc}",
            "mov r0, r5",
            "bl si_osh",
            "bl osl_malloced",
            "ldr r1, [0x0800d464]",
            "mov r2, r0",
            "ldr r0, [0x0800d47c]",
            "bl printk",
            "mov r0, r4",
            "pop {r3, r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "fcn.08007754": {
        "function_address": "0x08007754",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r5, r1",
            "ldr r1, [r0, 0xc]",
            "sub sp, sp, 8",
            "mov r4, r0",
            "add r2, sp, 4",
            "ldr r0, [r0, 0x10]",
            "mov r3, 4",
            "add r1, r1, 0x800",
            "add r1, r1, 8",
            "bl osl_pcie_rreg",
            "ldr r6, [sp, 4]",
            "mov r0, r4",
            "bl fcn.0800753c",
            "cmp r5, 0",
            "orrne r5, r6, 0x8000",
            "biceq r5, r6, 0x8000",
            "cmp r5, r6",
            "beq 0x80077c0",
            "dsb sy",
            "ldr r3, [0x080077d0]",
            "ldr r3, [r3, 0xc]",
            "cmp r3, 0",
            "beq 0x80077b8",
            "blx r3",
            "ldr r3, [r4, 0xc]",
            "str r5, [r3, 0x808]",
            "mov r0, r4",
            "bl fcn.080075b0",
            "add sp, sp, 8",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.et_skb_dequeue": {
        "function_address": "0x0800ee64",
        "instructions": [
            "add ip, r1, r1, lsl 1",
            "str r4, [sp, -4]!",
            "lsl ip, ip, 2",
            "add r2, ip, 0x28",
            "ldr r3, [r0, r2]",
            "add r2, r0, r2",
            "cmp r2, r3",
            "moveq r3, 0",
            "beq 0x800eee0",
            "cmp r3, 0",
            "beq 0x800eee0",
            "add ip, r0, ip",
            "mov r4, 0",
            "ldr r2, [ip, 0x30]",
            "add r1, r1, 0x16",
            "sub r2, r2, 1",
            "str r2, [ip, 0x30]",
            "ldr ip, [r3]",
            "ldr r2, [r3, 4]",
            "str r4, [r3]",
            "str r4, [r3, 4]",
            "str r2, [ip, 4]",
            "str ip, [r2]",
            "ldr r2, [r3, 0x6c]",
            "ldr ip, [r0, r1, lsl 2]",
            "tst r2, 8",
            "ldrhne r2, [r3, 0xc]",
            "moveq r2, 1",
            "ubfxne r2, r2, 3, 9",
            "rsb r2, r2, ip",
            "str r2, [r0, r1, lsl 2]",
            "mov r0, r3",
            "ldm sp!, {r4}",
            "bx lr"
        ]
    },
    "fcn.0800bdcc": {
        "function_address": "0x0800bdcc",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r7, r1",
            "sub sp, sp, 0x40",
            "mov r3, r2",
            "add r1, sp, 4",
            "mov r2, r7",
            "ldr r5, [r3, 4]",
            "add r6, sp, 0x40",
            "ldr r4, [r3]",
            "bl fcn.0800b4f0",
            "ldr lr, [sp, 4]",
            "mov r2, r7",
            "ldr r3, [sp, 8]",
            "movw r1, 0",
            "movt r1, 0",
            "mov r0, r5",
            "lsr r8, lr, 0x1b",
            "lsr lr, lr, 0x13",
            "lsr ip, r3, 3",
            "lsr sl, r3, 0xb",
            "lsr sb, r3, 0x13",
            "lsr r7, r3, 0x1b",
            "orr r3, r8, r3, lsl 5",
            "ldr r8, [sp, 0xc]",
            "strb lr, [sp, 0x3d]",
            "strb r3, [sp, 0x3c]",
            "strb ip, [sp, 0x3b]",
            "orr r7, r7, r8, lsl 5",
            "strb sl, [sp, 0x3a]",
            "strb sb, [sp, 0x39]",
            "strb r7, [r6, -8]!",
            "blx r4",
            "add r1, sp, 0x24",
            "mov r0, r6",
            "bl bcm_ether_ntoa",
            "movw r1, 0",
            "mov r2, r0",
            "movt r1, 0",
            "mov r0, r5",
            "blx r4",
            "ldr r2, [sp, 4]",
            "movw r1, 0",
            "movt r1, 0",
            "mov r0, r5",
            "ubfx r2, r2, 3, 0x10",
            "blx r4",
            "ldr r2, [sp, 4]",
            "movw r1, 0",
            "movt r1, 0",
            "mov r0, r5",
            "ubfx r2, r2, 1, 2",
            "blx r4",
            "ldr r2, [sp, 4]",
            "movw r1, 0",
            "mov r0, r5",
            "movt r1, 0",
            "and r2, r2, 1",
            "blx r4",
            "add sp, sp, 0x40",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "fcn.0800b220": {
        "function_address": "0x0800b220",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sl, lr}",
            "mov r6, r1",
            "sub sp, sp, 0x4c",
            "mov r3, r2",
            "add r1, sp, 0x28",
            "mov r2, r6",
            "mov sl, r0",
            "ldm r3, {r4, r5}",
            "bl fcn.0800af60",
            "ldr r8, [sp, 0x44]",
            "lsr r7, r8, 0x1f",
            "cmp r7, 0",
            "bne 0x800b464",
            "mov r0, r5",
            "ldr r1, [0x0800b4b0]",
            "mov r2, r6",
            "blx r4",
            "tst r8, 0x100000",
            "beq 0x800b474",
            "add r6, r6, 1",
            "add r1, sp, 8",
            "mov r2, r6",
            "mov r0, sl",
            "bl fcn.0800af60",
            "ldr ip, [sp, 0x3c]",
            "mov r0, r5",
            "ldr r2, [sp, 0x44]",
            "mov r8, 1",
            "ldr r1, [0x0800b4b4]",
            "str ip, [sp]",
            "ldr ip, [sp, 0x38]",
            "ldr r3, [sp, 0x40]",
            "str ip, [sp, 4]",
            "blx r4",
            "ldr ip, [sp, 0x2c]",
            "mov r0, r5",
            "ldr r2, [sp, 0x34]",
            "ldr r1, [0x0800b4b4]",
            "str ip, [sp]",
            "ldr ip, [sp, 0x28]",
            "ldr r3, [sp, 0x30]",
            "str ip, [sp, 4]",
            "blx r4",
            "ldr ip, [sp, 0x34]",
            "mov r0, r5",
            "ldr r3, [0x0800b4b8]",
            "ldr r2, [0x0800b4bc]",
            "cmp ip, 0",
            "ldr r1, [0x0800b4c0]",
            "movlt r2, r3",
            "blx r4",
            "ldr r2, [sp, 0x34]",
            "mov r0, r5",
            "ldr r1, [0x0800b4c4]",
            "ubfx r2, r2, 0xf, 0x10",
            "blx r4",
            "ldr r2, [sp, 0x34]",
            "mov r0, r5",
            "ldr r3, [sp, 0x30]",
            "ldr r1, [0x0800b4c4]",
            "lsl r2, r2, 0x11",
            "lsr r3, r3, 0x1f",
            "orr r2, r3, r2, lsr 16",
            "blx r4",
            "ldr r2, [sp, 0x28]",
            "mov r0, r5",
            "ldr r1, [0x0800b4c8]",
            "and r2, r2, 7",
            "blx r4",
            "ldr r3, [sp, 0x2c]",
            "mov r0, r5",
            "ldr r2, [sp, 0x28]",
            "ldr r1, [0x0800b4cc]",
            "lsl r3, r3, 0x1d",
            "orr r2, r3, r2, lsr 3",
            "blx r4",
            "ldr r3, [sp, 0x40]",
            "mov r0, r5",
            "ldr r2, [0x0800b4d0]",
            "ldr r1, [0x0800b4c0]",
            "tst r3, 1",
            "ldr r3, [0x0800b4d4]",
            "movne r2, r3",
            "blx r4",
            "ldr r2, [sp, 0x30]",
            "mov r0, r5",
            "ldr r1, [0x0800b4c4]",
            "ubfx r2, r2, 0xf, 0x10",
            "blx r4",
            "cmp r8, 0",
            "beq 0x800b490",
            "ldr r0, [sp, 0x30]",
            "movw r3, 0xefff",
            "ldr r8, [sp, 0x2c]",
            "mov r2, r3",
            "ldr ip, [sp, 0x34]",
            "and r1, r0, r3",
            "ldr lr, [sp, 0x38]",
            "orr r1, r1, r8, lsr 15",
            "ldr r8, [sp, 0x3c]",
            "and r3, ip, r3",
            "orr r0, r3, r0, lsr 15",
            "and r3, lr, r2",
            "and r2, r8, r2",
            "stm sp, {r0, r1}",
            "orr r2, r2, lr, lsr 15",
            "mov r0, r5",
            "ldr r1, [0x0800b4b4]",
            "orr r3, r3, ip, lsr 15",
            "blx r4",
            "cmp r7, 0",
            "ldr r1, [0x0800b4d8]",
            "ldrne r2, [sp, 0x40]",
            "mov r0, r5",
            "ldreq r2, [sp, 0x44]",
            "ubfxne r2, r2, 0x14, 1",
            "ubfxeq r2, r2, 0x14, 1",
            "blx r4",
            "mov r2, r7",
            "mov r0, r5",
            "ldr r1, [0x0800b4dc]",
            "blx r4",
            "ldr r2, [sp, 0x2c]",
            "mov r0, r5",
            "ldr r1, [0x0800b4e0]",
            "ubfx r2, r2, 8, 7",
            "blx r4",
            "ldr r2, [sp, 0x2c]",
            "mov r0, r5",
            "ldr r1, [0x0800b4dc]",
            "ubfx r2, r2, 6, 2",
            "blx r4",
            "ldr r2, [sp, 0x2c]",
            "mov r0, r5",
            "ldr r1, [0x0800b4c8]",
            "ubfx r2, r2, 5, 1",
            "blx r4",
            "ldr r2, [sp, 0x2c]",
            "mov r0, r5",
            "ldr r1, [0x0800b4e4]",
            "ubfx r2, r2, 3, 2",
            "blx r4",
            "mov r0, r6",
            "add sp, sp, 0x4c",
            "pop {r4, r5, r6, r7, r8, sl, pc}",
            "mov r0, r5",
            "ldr r1, [0x0800b4b0]",
            "mov r2, r6",
            "blx r4",
            "mov r0, r5",
            "ldr r1, [0x0800b4e8]",
            "ldr r2, [sp, 0x3c]",
            "mov r8, 0",
            "ldr r3, [sp, 0x38]",
            "blx r4",
            "b 0x800b2cc",
            "ldr r3, [sp, 0x30]",
            "mov r0, r5",
            "ldr r2, [sp, 0x2c]",
            "ldr r1, [0x0800b4ec]",
            "lsl r3, r3, 0x11",
            "orr r2, r3, r2, lsr 15",
            "blx r4",
            "b 0x800b3d8"
        ]
    }
}