{
    "sym.fq_codel_destroy": {
        "function_address": "0x080007cc",
        "instructions": [
            "mov ip, sp",
            "push {r3, r4, fp, ip, lr, pc}",
            "sub fp, ip, 4",
            "mov r4, r0",
            "add r0, r0, 0xc0",
            "bl tcf_destroy_chain",
            "ldr r0, [r4, 0xc8]",
            "bl fcn.08000774",
            "ldr r0, [r4, 0xc4]",
            "bl fcn.08000774",
            "ldm sp, {r3, r4, fp, sp, pc}"
        ]
    },
    "fcn.08000774": {
        "function_address": "0x08000774",
        "instructions": [
            "mov ip, sp",
            "push {fp, ip, lr, pc}",
            "sub fp, ip, 4",
            "subs r3, r0, 0",
            "ldmeq sp, {fp, sp, pc}",
            "ldr r2, [reloc.high_memory]",
            "ldr r2, [r2]",
            "add r2, r2, 0x800000",
            "lsr r2, r2, 0x17",
            "cmp r3, r2, lsl 23",
            "movlo r2, 0",
            "movhs r2, 1",
            "cmp r3, 0xff000000",
            "movhs r3, 0",
            "andlo r3, r2, 1",
            "cmp r3, 0",
            "beq kfree",
            "bl vfree",
            "ldm sp, {fp, sp, pc}",
            "bl kfree",
            "ldm sp, {fp, sp, pc}"
        ]
    },
    "sym.fq_codel_enqueue": {
        "function_address": "0x08000824",
        "instructions": [
            "mov ip, sp",
            "push {r4, r5, r6, r7, r8, fp, ip, lr, pc}",
            "sub fp, ip, 4",
            "sub sp, sp, 0x24",
            "ldr r7, [r0, 0x60]",
            "mov r5, r0",
            "ldr r3, [r1, 0x20]",
            "mov r4, r1",
            "lsr r2, r7, 0x10",
            "cmp r3, r2, lsl 16",
            "bne 0x8000868",
            "uxth r7, r7",
            "cmp r7, 0",
            "beq 0x8000868",
            "ldr r3, [r1, 0xcc]",
            "cmp r7, r3",
            "bls 0x800095c",
            "ldr r1, [r4, 0xc0]",
            "mov r0, r5",
            "cmp r1, 0",
            "bne 0x80008fc",
            "sub r1, fp, 0x3c",
            "bl skb_flow_dissect",
            "ldrb r1, [fp, -0x30]",
            "ldr r2, [fp, -0x3c]",
            "movw r3, 0xbeef",
            "movt r3, 0xdead",
            "ldr r0, [r4, 0xd0]",
            "eor r2, r1, r2",
            "movw r1, 0xbeef",
            "add r3, r2, r3",
            "ldr r2, [fp, -0x34]",
            "movt r1, 0xdead",
            "ldr ip, [r4, 0xcc]",
            "add r0, r0, r2",
            "ldr r2, [fp, -0x38]",
            "eor r0, r3, r0",
            "add r1, r2, r1",
            "sub r0, r0, r3, ror 18",
            "eor r1, r0, r1",
            "sub r1, r1, r0, ror 21",
            "eor r3, r1, r3",
            "sub r3, r3, r1, ror 7",
            "eor r0, r3, r0",
            "sub r0, r0, r3, ror 16",
            "eor r1, r0, r1",
            "sub r1, r1, r0, ror 28",
            "eor r3, r1, r3",
            "sub r3, r3, r1, ror 18",
            "eor r0, r3, r0",
            "sub r3, r0, r3, ror 8",
            "umull r2, r3, r3, ip",
            "add r7, r3, 1",
            "b 0x800095c",
            "sub r2, fp, 0x2c",
            "bl tc_classify",
            "cmp r0, 0",
            "blt 0x8000940",
            "cmp r0, 2",
            "beq 0x8000940",
            "blt 0x8000928",
            "sub r0, r0, 4",
            "cmp r0, 1",
            "movls r6, 0x10000",
            "bls 0x8000950",
            "ldrh r7, [fp, -0x28]",
            "ldr r3, [r4, 0xcc]",
            "cmp r7, r3",
            "bhi 0x8000940",
            "cmp r7, 0",
            "bne 0x800095c",
            "ldr r3, [r4, 0x78]",
            "mov r6, 0x20000",
            "add r3, r3, 1",
            "str r3, [r4, 0x78]",
            "mov r0, r5",
            "bl kfree_skb",
            "b 0x8000a68",
            "sub r0, fp, 0x44",
            "sub r7, r7, 1",
            "bl ktime_get",
            "ldr r3, [fp, -0x44]",
            "ldr r1, [fp, -0x40]",
            "add r2, r7, r7, lsl 1",
            "mov r8, 0",
            "lsr r3, r3, 0xa",
            "lsl r2, r2, 4",
            "orr r3, r3, r1, lsl 22",
            "str r3, [r5, 0x20]",
            "ldr r3, [r4, 0xc4]",
            "add r6, r3, r2",
            "ldr r1, [r3, r2]",
            "cmp r1, 0",
            "streq r5, [r3, r2]",
            "ldrne r3, [r6, 4]",
            "strne r5, [r3]",
            "add r3, r6, 8",
            "str r5, [r6, 4]",
            "str r8, [r5]",
            "ldr r2, [r4, 0xc8]",
            "ldr r1, [r5, 0x18]",
            "ldr r0, [r2, r7, lsl 2]",
            "add r1, r0, r1",
            "str r1, [r2, r7, lsl 2]",
            "ldr r1, [r4, 0x74]",
            "ldr r2, [r5, 0x18]",
            "add r2, r1, r2",
            "str r2, [r4, 0x74]",
            "ldr r2, [r6, 8]",
            "cmp r3, r2",
            "bne 0x8000a1c",
            "ldr r2, [r4, 0xfc]",
            "add r1, r4, 0xf8",
            "str r3, [r4, 0xfc]",
            "add r0, r6, 0x18",
            "str r1, [r6, 8]",
            "mov r1, 0x18",
            "str r2, [r6, 0xc]",
            "str r3, [r2]",
            "bl __memzero",
            "ldr r3, [r4, 0xd4]",
            "ldr r2, [r4, 0xf4]",
            "add r2, r2, 1",
            "str r2, [r4, 0xf4]",
            "str r3, [r6, 0x10]",
            "str r8, [r6, 0x14]",
            "ldr r3, [r4, 0x58]",
            "ldr r2, [r4, 0x90]",
            "add r3, r3, 1",
            "str r3, [r4, 0x58]",
            "cmp r3, r2",
            "movlo r6, 0",
            "blo 0x8000a68",
            "ldr r3, [r4, 0xf0]",
            "mov r0, r4",
            "add r3, r3, 1",
            "str r3, [r4, 0xf0]",
            "bl sym.fq_codel_drop",
            "cmp r0, r7",
            "moveq r6, 2",
            "beq 0x8000a68",
            "mov r0, r4",
            "mov r1, 1",
            "bl qdisc_tree_decrease_qlen",
            "mov r6, 0",
            "mov r0, r6",
            "sub sp, fp, 0x20",
            "ldm sp, {r4, r5, r6, r7, r8, fp, sp, pc}"
        ]
    },
    "sym.fq_codel_drop": {
        "function_address": "0x080006b8",
        "instructions": [
            "mov ip, sp",
            "push {r4, r5, r6, r7, fp, ip, lr, pc}",
            "sub fp, ip, 4",
            "mov r3, 0",
            "mov r4, r0",
            "mov r5, r3",
            "ldr r0, [r0, 0xcc]",
            "mov r1, r3",
            "b 0x80006f4",
            "ldr r2, [r4, 0xc8]",
            "ldr r2, [r2, r3, lsl 2]",
            "cmp r1, r2",
            "movlo r5, r3",
            "add r3, r3, 1",
            "movlo r1, r2",
            "cmp r3, r0",
            "bne 0x80006dc",
            "add r2, r5, r5, lsl 1",
            "ldr r1, [r4, 0xc4]",
            "lsl r2, r2, 4",
            "add r6, r1, r2",
            "ldr r3, [r1, r2]",
            "ldr ip, [r3]",
            "mov r0, r3",
            "str ip, [r1, r2]",
            "mov r2, 0",
            "str r2, [r3]",
            "ldr r2, [r4, 0xc8]",
            "ldr r7, [r3, 0x18]",
            "ldr r3, [r2, r5, lsl 2]",
            "rsb r3, r7, r3",
            "str r3, [r2, r5, lsl 2]",
            "bl kfree_skb",
            "ldr r3, [r4, 0x74]",
            "ldr r1, [r4, 0x58]",
            "mov r0, r5",
            "ldr r2, [r4, 0x78]",
            "rsb r7, r7, r3",
            "sub r1, r1, 1",
            "str r7, [r4, 0x74]",
            "str r1, [r4, 0x58]",
            "add r2, r2, 1",
            "str r2, [r4, 0x78]",
            "ldr r3, [r6, 0x14]",
            "add r3, r3, 1",
            "str r3, [r6, 0x14]",
            "ldm sp, {r4, r5, r6, r7, fp, sp, pc}"
        ]
    },
    "sym.fq_codel_dequeue": {
        "function_address": "0x08000bbc",
        "instructions": [
            "mov ip, sp",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, ip, lr, pc}",
            "sub fp, ip, 4",
            "sub sp, sp, 0x44",
            "mov r6, r0",
            "add sb, r6, 0xd8",
            "add r8, r6, 0xe4",
            "add r0, r0, 0xf8",
            "add r1, r6, 0x100",
            "str r0, [fp, -0x38]",
            "str r1, [fp, -0x58]",
            "ldr r5, [r6, 0xf8]",
            "ldr r2, [fp, -0x38]",
            "cmp r2, r5",
            "bne 0x8000c10",
            "ldr r3, [fp, -0x58]",
            "ldr r5, [r6, 0x100]",
            "cmp r3, r5",
            "str r3, [fp, -0x3c]",
            "bne 0x8000c18",
            "b 0x8001248",
            "ldr ip, [fp, -0x38]",
            "str ip, [fp, -0x3c]",
            "ldr r3, [r5, 8]",
            "cmp r3, 0",
            "bgt 0x8000c54",
            "ldm r5, {r1, r2}",
            "ldr r0, [r6, 0xd4]",
            "add r3, r3, r0",
            "ldr r0, [fp, -0x58]",
            "str r3, [r5, 8]",
            "str r2, [r1, 4]",
            "str r1, [r2]",
            "ldr r3, [r6, 0x104]",
            "str r5, [r6, 0x104]",
            "stm r5, {r0, r3}",
            "str r5, [r3]",
            "b 0x8000be8",
            "ldr r2, [r6, 0xe8]",
            "add r4, r5, 0x10",
            "ldr r3, [r6, 0xec]",
            "mov r1, r6",
            "mov r0, r4",
            "str r2, [fp, -0x50]",
            "str r3, [fp, -0x54]",
            "bl fcn.08000078",
            "subs r7, r0, 0",
            "bne 0x8000cb0",
            "ldr r3, [r5, 0xc]",
            "strb r7, [r5, 0x18]",
            "ldr r2, [r6, 0xe8]",
            "ldr ip, [fp, -0x50]",
            "add r3, r3, r2",
            "ldr r0, [fp, -0x54]",
            "rsb r3, ip, r3",
            "str r3, [r5, 0xc]",
            "ldr r2, [r6, 0xec]",
            "rsb r2, r0, r2",
            "add r3, r2, r3",
            "str r3, [r5, 0xc]",
            "b 0x8001170",
            "sub r0, fp, 0x34",
            "bl ktime_get",
            "ldr ip, [fp, -0x34]",
            "ldr lr, [fp, -0x30]",
            "mov r3, sb",
            "mov r0, r7",
            "mov r1, r6",
            "lsr ip, ip, 0xa",
            "mov r2, r4",
            "orr sl, ip, lr, lsl 22",
            "stm sp, {r8, sl}",
            "bl fcn.08000b14",
            "ldrb r3, [r5, 0x18]",
            "cmp r3, 0",
            "beq 0x8000f34",
            "cmp r0, 0",
            "strbeq r0, [r5, 0x18]",
            "beq 0x8001258",
            "ldr r3, [r5, 0x20]",
            "rsb r3, r3, sl",
            "cmp r3, 0",
            "blt 0x8001258",
            "str r5, [fp, -0x4c]",
            "mov r5, r6",
            "str sl, [fp, -0x44]",
            "mov sl, r8",
            "ldr r1, [r4, 0x10]",
            "mov r8, r7",
            "b 0x8000f20",
            "ldrh r3, [r4, 0xa]",
            "ldr r6, [r4]",
            "lsl r3, r3, 0x10",
            "add r6, r6, 1",
            "str r6, [r4]",
            "umull r0, r1, r3, r3",
            "mov r0, 0",
            "umull r6, r7, r1, r6",
            "mov r1, 3",
            "subs r6, r0, r6",
            "sbc r7, r1, r7",
            "lsr r0, r6, 2",
            "lsr r2, r7, 2",
            "orr r0, r0, r7, lsl 30",
            "umull r0, r1, r0, r3",
            "mla r1, r3, r2, r1",
            "lsr r3, r1, 0xf",
            "strh r3, [r4, 0xa]",
            "ldrb r3, [sb, 8]",
            "cmp r3, 0",
            "beq 0x8000e88",
            "ldrh r3, [r8, 0x66]",
            "cmp r3, 8",
            "beq 0x8000d94",
            "movw r1, 0xdd86",
            "cmp r3, r1",
            "bne 0x8000e88",
            "b 0x8000e1c",
            "ldr r3, [r8, 0x94]",
            "ldr r1, [r8, 0x9c]",
            "add r2, r3, 0x14",
            "cmp r1, r2",
            "blo 0x8000e88",
            "ldrb r1, [r3, 1]",
            "ldrh r0, [r3, 0xa]",
            "add r2, r1, 1",
            "tst r2, 2",
            "and r2, r2, 3",
            "bne 0x8000ddc",
            "cmp r2, 0",
            "bne 0x8000e88",
            "mov r7, r8",
            "mov r6, r5",
            "mov r8, sl",
            "ldr r5, [fp, -0x4c]",
            "b 0x8000e5c",
            "rev16 r2, r2",
            "uxth r2, r2",
            "orr r1, r1, 3",
            "add r2, r2, 0xfb00",
            "mov r7, r8",
            "add r2, r2, 0xff",
            "mov r6, r5",
            "add r2, r2, r0",
            "strb r1, [r3, 1]",
            "ldr r5, [fp, -0x4c]",
            "movw r1, 0xfffe",
            "mov r8, sl",
            "cmp r2, r1",
            "addhi r2, r2, 1",
            "strh r2, [r3, 0xa]",
            "b 0x8000e5c",
            "ldr r3, [r8, 0x94]",
            "ldr r1, [r8, 0x9c]",
            "add r2, r3, 0x28",
            "cmp r1, r2",
            "blo 0x8000e88",
            "ldrh r2, [r3]",
            "rev16 r2, r2",
            "tst r2, 0x30",
            "beq 0x8000e88",
            "mov r6, r5",
            "ldr r5, [fp, -0x4c]",
            "ldr r2, [r3]",
            "mov r7, r8",
            "mov r8, sl",
            "orr r2, r2, 0x3000",
            "str r2, [r3]",
            "ldr r2, [r6, 0xec]",
            "ldr r3, [r6, 0xdc]",
            "add r2, r2, 1",
            "str r2, [r6, 0xec]",
            "ldrh r2, [r5, 0x1a]",
            "ldr r1, [r5, 0x20]",
            "lsl r2, r2, 0x10",
            "umull r2, r3, r2, r3",
            "add r1, r1, r3",
            "str r1, [r5, 0x20]",
            "b 0x800113c",
            "mov r0, r8",
            "bl kfree_skb",
            "ldr r3, [r5, 0x78]",
            "mov r1, r5",
            "mov r0, r4",
            "add r3, r3, 1",
            "str r3, [r5, 0x78]",
            "ldr r3, [sl, 4]",
            "add r3, r3, 1",
            "str r3, [sl, 4]",
            "bl fcn.08000078",
            "ldr ip, [fp, -0x44]",
            "mov r1, r5",
            "mov r2, r4",
            "mov r3, sb",
            "str sl, [sp]",
            "str ip, [sp, 4]",
            "mov r8, r0",
            "bl fcn.08000b14",
            "cmp r0, 0",
            "bne 0x8000ef4",
            "mov r7, r8",
            "mov r6, r5",
            "mov r8, sl",
            "ldr r5, [fp, -0x4c]",
            "strb r0, [r4, 8]",
            "b 0x800113c",
            "ldrh r2, [r4, 0xa]",
            "ldr r3, [sb, 4]",
            "ldr r0, [fp, -0x4c]",
            "lsl r2, r2, 0x10",
            "ldr r1, [r4, 0x10]",
            "umull r2, r3, r2, r3",
            "add r1, r1, r3",
            "str r1, [r4, 0x10]",
            "ldrb r3, [r0, 0x18]",
            "cmp r3, 0",
            "beq 0x800112c",
            "ldr r2, [fp, -0x44]",
            "rsb r1, r1, r2",
            "cmp r1, 0",
            "bge 0x8000d24",
            "b 0x800112c",
            "cmp r0, 0",
            "beq 0x8001258",
            "ldrb r3, [r6, 0xe0]",
            "cmp r3, 0",
            "beq 0x800100c",
            "ldrh r3, [r7, 0x66]",
            "cmp r3, 8",
            "beq 0x8000f64",
            "movw r2, 0xdd86",
            "cmp r3, r2",
            "bne 0x800100c",
            "b 0x8000fcc",
            "ldr r3, [r7, 0x94]",
            "ldr r1, [r7, 0x9c]",
            "add r2, r3, 0x14",
            "cmp r1, r2",
            "blo 0x800100c",
            "ldrb r0, [r3, 1]",
            "ldrh ip, [r3, 0xa]",
            "add r2, r0, 1",
            "tst r2, 2",
            "and r2, r2, 3",
            "bne 0x8000f9c",
            "cmp r2, 0",
            "beq 0x8000ffc",
            "b 0x800100c",
            "rev16 r2, r2",
            "uxth r2, r2",
            "add r1, r2, 0xfb00",
            "orr r2, r0, 3",
            "add r1, r1, 0xff",
            "strb r2, [r3, 1]",
            "add r2, r1, ip",
            "movw r1, 0xfffe",
            "cmp r2, r1",
            "addhi r2, r2, 1",
            "strh r2, [r3, 0xa]",
            "b 0x8000ffc",
            "ldr r3, [r7, 0x94]",
            "ldr r1, [r7, 0x9c]",
            "add r2, r3, 0x28",
            "cmp r1, r2",
            "blo 0x800100c",
            "ldrh r2, [r3]",
            "rev16 r2, r2",
            "tst r2, 0x30",
            "beq 0x800100c",
            "ldr r2, [r3]",
            "orr r2, r2, 0x3000",
            "str r2, [r3]",
            "ldr r3, [r6, 0xec]",
            "add r3, r3, 1",
            "str r3, [r6, 0xec]",
            "b 0x8001050",
            "mov r0, r7",
            "bl kfree_skb",
            "ldr r2, [r6, 0x78]",
            "ldr r3, [r6, 0xe8]",
            "mov r1, r6",
            "add r2, r2, 1",
            "mov r0, r4",
            "add r3, r3, 1",
            "str r2, [r6, 0x78]",
            "str r3, [r6, 0xe8]",
            "bl fcn.08000078",
            "mov r1, r6",
            "mov r2, r4",
            "mov r3, sb",
            "stm sp, {r8, sl}",
            "mov r7, r0",
            "bl fcn.08000b14",
            "ldr r1, [r5, 0x10]",
            "mov r2, 1",
            "ldr r3, [r5, 0x14]",
            "strb r2, [r5, 0x18]",
            "rsb r4, r3, r1",
            "cmp r4, r2",
            "bls 0x80010e4",
            "ldr r2, [r5, 0x20]",
            "ldr r3, [r6, 0xdc]",
            "rsb r2, r2, sl",
            "subs r3, r2, r3, lsl 4",
            "bpl 0x80010e4",
            "ldrh r0, [r5, 0x1a]",
            "str r4, [r5, 0x10]",
            "lsl r0, r0, 0x10",
            "str r0, [fp, -0x5c]",
            "umull r0, r1, r0, r0",
            "mov r0, 0",
            "umull r2, r3, r1, r4",
            "mov r1, 3",
            "subs r0, r0, r2",
            "sbc r1, r1, r3",
            "strd r0, r1, [fp, -0x4c]",
            "lsr ip, r1, 2",
            "ldr r1, [fp, -0x48]",
            "lsr r2, r0, 2",
            "ldr r0, [fp, -0x5c]",
            "orr r2, r2, r1, lsl 30",
            "mov r1, 0",
            "str r1, [fp, -0x40]",
            "umull r2, r3, r2, r0",
            "mla r3, r0, ip, r3",
            "ubfx r3, r3, 0xf, 0x10",
            "strh r3, [r5, 0x1a]",
            "lsl r3, r3, 0x10",
            "str r3, [fp, -0x44]",
            "b 0x8001108",
            "mov r3, 1",
            "mov r0, 0",
            "mov r1, 0",
            "movt r0, 0xffff",
            "mov r4, r3",
            "str r3, [r5, 0x10]",
            "strd r0, r1, [fp, -0x44]",
            "mvn r3, 0",
            "strh r3, [r5, 0x1a]",
            "str r4, [r5, 0x14]",
            "ldr ip, [fp, -0x44]",
            "ldr r1, [r6, 0xdc]",
            "ldr r0, [fp, -0x40]",
            "umull r2, r3, ip, r1",
            "mla r1, r1, r0, r3",
            "add r1, sl, r1",
            "str r1, [r5, 0x20]",
            "b 0x800113c",
            "mov r6, r5",
            "ldr r5, [fp, -0x4c]",
            "mov r7, r8",
            "mov r8, sl",
            "ldr r2, [r6, 0xe8]",
            "cmp r7, 0",
            "ldr r3, [r5, 0xc]",
            "ldr r1, [fp, -0x50]",
            "add r3, r2, r3",
            "ldr ip, [fp, -0x54]",
            "rsb r3, r1, r3",
            "str r3, [r5, 0xc]",
            "ldr r2, [r6, 0xec]",
            "rsb r2, ip, r2",
            "add r3, r2, r3",
            "str r3, [r5, 0xc]",
            "bne 0x80011d0",
            "ldr r0, [fp, -0x3c]",
            "ldr r1, [fp, -0x38]",
            "cmp r0, r1",
            "bne 0x80011b8",
            "ldr r3, [r6, 0x100]",
            "ldr r2, [fp, -0x58]",
            "cmp r2, r3",
            "beq 0x80011b8",
            "ldm r5, {r2, r3}",
            "str r3, [r2, 4]",
            "str r2, [r3]",
            "ldr ip, [fp, -0x58]",
            "ldr r3, [r6, 0x104]",
            "str r5, [r6, 0x104]",
            "str ip, [r5]",
            "str r3, [r5, 4]",
            "str r5, [r3]",
            "b 0x8000be8",
            "ldm r5, {r2, r3}",
            "str r3, [r2, 4]",
            "str r2, [r3]",
            "str r5, [r5]",
            "str r5, [r5, 4]",
            "b 0x8000be8",
            "ldr r0, [r7, 0x18]",
            "ldr r2, [r6, 0x60]",
            "ldr r3, [r6, 0x64]",
            "adds r2, r2, r0",
            "str r2, [r6, 0x60]",
            "adc r3, r3, 0",
            "str r3, [r6, 0x64]",
            "ldr r3, [r7, 0xa0]",
            "ldr r1, [r6, 0x68]",
            "ldrh r2, [r3, 2]",
            "cmp r2, 0",
            "ldrhne r3, [r3, 4]",
            "moveq r3, 1",
            "add r1, r3, r1",
            "str r1, [r6, 0x68]",
            "ldr r2, [r5, 8]",
            "ldr r3, [r7, 0x18]",
            "rsb r3, r3, r2",
            "str r3, [r5, 8]",
            "ldr r1, [r6, 0xe8]",
            "cmp r1, 0",
            "beq 0x800124c",
            "ldr r3, [r6, 0x58]",
            "cmp r3, 0",
            "beq 0x800124c",
            "mov r0, r6",
            "bl qdisc_tree_decrease_qlen",
            "mov r3, 0",
            "str r3, [r6, 0xe8]",
            "b 0x800124c",
            "mov r7, 0",
            "mov r0, r7",
            "sub sp, fp, 0x28",
            "ldm sp, {r4, r5, r6, r7, r8, sb, sl, fp, sp, pc}",
            "ldr r2, [r6, 0xe8]",
            "ldr r3, [r5, 0xc]",
            "ldr r0, [fp, -0x50]",
            "add r3, r2, r3",
            "ldr r1, [fp, -0x54]",
            "rsb r3, r0, r3",
            "str r3, [r5, 0xc]",
            "ldr r2, [r6, 0xec]",
            "rsb r2, r1, r2",
            "add r3, r2, r3",
            "str r3, [r5, 0xc]",
            "b 0x80011d0"
        ]
    },
    "fcn.08000078": {
        "function_address": "0x08000078",
        "instructions": [
            "mov ip, sp",
            "push {r4, fp, ip, lr, pc}",
            "sub fp, ip, 4",
            "ldr r3, [r0, -0x18]",
            "cmp r3, 0",
            "beq 0x80000e0",
            "ldr r2, [r3]",
            "str r2, [r0, -0x18]!",
            "mov r2, 0",
            "str r2, [r3]",
            "ldr ip, [r1, 0xc4]",
            "ldr r2, [r1, 0xc8]",
            "rsb r0, ip, r0",
            "ldr r4, [r3, 0x18]",
            "asr r0, r0, 4",
            "add ip, r0, r0, lsl 2",
            "add ip, ip, ip, lsl 4",
            "add ip, ip, ip, lsl 8",
            "add ip, ip, ip, lsl 16",
            "add r0, r0, ip, lsl 1",
            "ldr ip, [r2, r0, lsl 2]",
            "rsb ip, r4, ip",
            "str ip, [r2, r0, lsl 2]",
            "ldr r2, [r1, 0x58]",
            "sub r2, r2, 1",
            "str r2, [r1, 0x58]",
            "mov r0, r3",
            "ldm sp, {r4, fp, sp, pc}"
        ]
    },
    "fcn.08000b14": {
        "function_address": "0x08000b14",
        "instructions": [
            "mov ip, sp",
            "push {r4, r5, r6, fp, ip, lr, pc}",
            "sub fp, ip, 4",
            "cmp r0, 0",
            "ldr ip, [fp, 4]",
            "ldr r4, [fp, 8]",
            "beq 0x8000b84",
            "ldr r5, [r0, 0x20]",
            "rsb r5, r5, r4",
            "str r5, [r2, 0x14]",
            "ldr r5, [r0, 0x18]",
            "ldr r6, [r1, 0x74]",
            "rsb r5, r5, r6",
            "str r5, [r1, 0x74]",
            "ldr r0, [r0, 0x18]",
            "ldr r5, [ip]",
            "cmp r5, r0",
            "strlo r0, [ip]",
            "ldr r5, [r2, 0x14]",
            "ldr r0, [r3]",
            "rsb r0, r0, r5",
            "cmp r0, 0",
            "blt 0x8000b80",
            "ldr r0, [r1, 0x74]",
            "ldr r1, [ip]",
            "cmp r0, r1",
            "bhi 0x8000b8c",
            "mov r0, 0",
            "str r0, [r2, 0xc]",
            "ldm sp, {r4, r5, r6, fp, sp, pc}",
            "ldr r0, [r2, 0xc]",
            "cmp r0, 0",
            "bne 0x8000ba8",
            "ldr r3, [r3, 4]",
            "add r4, r4, r3",
            "str r4, [r2, 0xc]",
            "ldm sp, {r4, r5, r6, fp, sp, pc}",
            "rsb r0, r0, r4",
            "cmp r0, 0",
            "movle r0, 0",
            "movgt r0, 1",
            "ldm sp, {r4, r5, r6, fp, sp, pc}"
        ]
    },
    "sym.fq_codel_change": {
        "function_address": "0x08001288",
        "instructions": [
            "mov ip, sp",
            "push {r4, r5, fp, ip, lr, pc}",
            "sub fp, ip, 4",
            "sub sp, sp, 0x28",
            "subs r2, r1, 0",
            "mov r5, r0",
            "beq 0x800142c",
            "ldrh r3, [r2]",
            "sub r0, fp, 0x30",
            "ldr ip, [0x08001438]",
            "mov r1, 6",
            "add r2, r2, 4",
            "sub r3, r3, 4",
            "str ip, [sp]",
            "bl nla_parse",
            "cmp r0, 0",
            "blt 0x8001430",
            "ldr r3, [fp, -0x1c]",
            "cmp r3, 0",
            "beq 0x80012f8",
            "ldr r2, [r5, 0xc4]",
            "cmp r2, 0",
            "bne 0x800142c",
            "ldr r3, [r3, 4]",
            "sub r2, r3, 1",
            "cmp r2, 0x10000",
            "str r3, [r5, 0xcc]",
            "bhs 0x800142c",
            "ldr r3, [r5, 0x40]",
            "ldr r4, [r3, 8]",
            "bl rtnl_is_locked",
            "cmp r0, 0",
            "bne 0x8001320",
            "ldr r1, [0x0800143c]",
            "mov r2, 0x11c",
            "ldr r0, [0x08001440]",
            "bl printk",
            "bl dump_stack",
            "add r0, r4, 0x5c",
            "bl _raw_spin_lock_bh",
            "ldr r3, [fp, -0x2c]",
            "cmp r3, 0",
            "beq 0x800134c",
            "ldr r2, [r3, 4]",
            "mov r3, 0x3e8",
            "umull r2, r3, r2, r3",
            "lsr r2, r2, 0xa",
            "orr r2, r2, r3, lsl 22",
            "str r2, [r5, 0xd8]",
            "ldr r3, [fp, -0x24]",
            "cmp r3, 0",
            "beq 0x8001370",
            "ldr r2, [r3, 4]",
            "mov r3, 0x3e8",
            "umull r2, r3, r2, r3",
            "lsr r2, r2, 0xa",
            "orr r2, r2, r3, lsl 22",
            "str r2, [r5, 0xdc]",
            "ldr r3, [fp, -0x28]",
            "cmp r3, 0",
            "ldrne r3, [r3, 4]",
            "strne r3, [r5, 0x90]",
            "ldr r3, [fp, -0x20]",
            "cmp r3, 0",
            "beq 0x800139c",
            "ldr r3, [r3, 4]",
            "adds r3, r3, 0",
            "movne r3, 1",
            "strb r3, [r5, 0xe0]",
            "ldr r3, [fp, -0x18]",
            "cmp r3, 0",
            "beq 0x80013d0",
            "ldr r3, [r3, 4]",
            "cmp r3, 0x100",
            "movlo r3, 0x100",
            "str r3, [r5, 0xd4]",
            "b 0x80013d0",
            "bl sym.fq_codel_dequeue",
            "bl kfree_skb",
            "ldr r3, [r5, 0xe8]",
            "add r3, r3, 1",
            "str r3, [r5, 0xe8]",
            "ldr r2, [r5, 0x58]",
            "mov r0, r5",
            "ldr r3, [r5, 0x90]",
            "cmp r2, r3",
            "bhi 0x80013bc",
            "ldr r1, [r5, 0xe8]",
            "bl qdisc_tree_decrease_qlen",
            "ldr r3, [r5, 0x40]",
            "mov r2, 0",
            "str r2, [r5, 0xe8]",
            "ldr r4, [r3, 8]",
            "bl rtnl_is_locked",
            "cmp r0, 0",
            "bne 0x800141c",
            "ldr r1, [0x0800143c]",
            "mov r2, 0x11c",
            "ldr r0, [0x08001440]",
            "bl printk",
            "bl dump_stack",
            "add r0, r4, 0x5c",
            "bl _raw_spin_unlock_bh",
            "mov r0, 0",
            "b 0x8001430",
            "mvn r0, 0x15",
            "sub sp, fp, 0x14",
            "ldm sp, {r4, r5, fp, sp, pc}"
        ]
    },
    "sym.fq_codel_init": {
        "function_address": "0x08001444",
        "instructions": [
            "mov ip, sp",
            "push {r4, r5, fp, ip, lr, pc}",
            "sub fp, ip, 4",
            "ldr r3, [r0, 0x40]",
            "mov r2, 0x2800",
            "str r2, [r0, 0x90]",
            "mov r2, 0x400",
            "str r2, [r0, 0xcc]",
            "movw r2, 0x142",
            "ldr r3, [r3]",
            "mov r4, r0",
            "mov r5, r1",
            "ldrh r2, [r3, r2]",
            "ldr r3, [r3, 0x13c]",
            "add r3, r2, r3",
            "str r3, [r0, 0xd4]",
            "bl random32",
            "cmp r5, 0",
            "add r1, r4, 0xf8",
            "add r2, r4, 0x100",
            "movw r3, 0x7d78",
            "str r1, [r4, 0xf8]",
            "movt r3, 1",
            "str r1, [r4, 0xfc]",
            "str r3, [r4, 0xdc]",
            "movw r3, 0x1312",
            "str r2, [r4, 0x100]",
            "str r3, [r4, 0xd8]",
            "mov r3, 0x100",
            "str r2, [r4, 0x104]",
            "str r3, [r4, 0xe4]",
            "mov r3, 1",
            "strb r3, [r4, 0xe0]",
            "str r0, [r4, 0xd0]",
            "beq 0x80014e4",
            "mov r0, r4",
            "mov r1, r5",
            "bl sym.fq_codel_change",
            "cmp r0, 0",
            "ldmne sp, {r4, r5, fp, sp, pc}",
            "ldr r5, [r4, 0xc4]",
            "cmp r5, 0",
            "bne 0x8001560",
            "ldr r3, [r4, 0xcc]",
            "add r3, r3, r3, lsl 1",
            "lsl r0, r3, 4",
            "bl fcn.080007f8",
            "cmp r0, 0",
            "str r0, [r4, 0xc4]",
            "beq 0x8001580",
            "ldr r0, [r4, 0xcc]",
            "lsl r0, r0, 2",
            "bl fcn.080007f8",
            "cmp r0, 0",
            "str r0, [r4, 0xc8]",
            "movne r2, r5",
            "bne 0x8001550",
            "ldr r0, [r4, 0xc4]",
            "bl fcn.08000774",
            "mvn r0, 0xb",
            "ldm sp, {r4, r5, fp, sp, pc}",
            "ldr r3, [r4, 0xc4]",
            "add r3, r3, r5",
            "add r5, r5, 0x30",
            "add r1, r3, 8",
            "str r1, [r3, 8]",
            "str r1, [r3, 0xc]",
            "ldr r3, [r4, 0xcc]",
            "cmp r2, r3",
            "add r2, r2, 1",
            "blo 0x8001538",
            "ldr r0, [r4, 0x90]",
            "ldr r3, [r4, 8]",
            "cmp r0, 0",
            "orrne r3, r3, 4",
            "biceq r3, r3, 4",
            "movne r0, 0",
            "str r3, [r4, 8]",
            "ldm sp, {r4, r5, fp, sp, pc}",
            "mvn r0, 0xb",
            "ldm sp, {r4, r5, fp, sp, pc}"
        ]
    },
    "fcn.080007f8": {
        "function_address": "0x080007f8",
        "instructions": [
            "mov ip, sp",
            "push {r3, r4, fp, ip, lr, pc}",
            "sub fp, ip, 4",
            "movw r1, 0x82d0",
            "mov r4, r0",
            "bl __kmalloc",
            "cmp r0, 0",
            "ldmne sp, {r3, r4, fp, sp, pc}",
            "mov r0, r4",
            "bl vzalloc",
            "ldm sp, {r3, r4, fp, sp, pc}"
        ]
    },
    "sym.fq_codel_reset": {
        "function_address": "0x08001588",
        "instructions": [
            "mov ip, sp",
            "push {r3, r4, fp, ip, lr, pc}",
            "sub fp, ip, 4",
            "mov r4, r0",
            "b 0x80015a0",
            "bl kfree_skb",
            "mov r0, r4",
            "bl sym.fq_codel_dequeue",
            "cmp r0, 0",
            "bne kfree_skb",
            "ldm sp, {r3, r4, fp, sp, pc}"
        ]
    }
}