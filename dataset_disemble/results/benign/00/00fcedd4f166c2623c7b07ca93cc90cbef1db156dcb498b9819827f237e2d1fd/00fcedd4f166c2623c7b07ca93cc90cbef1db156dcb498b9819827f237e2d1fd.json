{
    "entry0": {
        "function_address": "0x00000380",
        "instructions": [
            "ldr r3, [0x000003a4]",
            "ldr r2, [0x000003a8]",
            "add r3, pc, r3",
            "ldr r2, [r3, r2]",
            "push {r4, lr}",
            "cmp r2, 0",
            "blne loc.imp.__gmon_start__",
            "pop {r4, lr}",
            "bx lr"
        ]
    },
    "loc.imp.__gmon_start__": {
        "function_address": "0x00000344",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x9000",
            "ldr pc, [ip, 0xcc0]!"
        ]
    },
    "sym.gconv": {
        "function_address": "0x00000480",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "ldr r4, [r1, 8]",
            "sub sp, sp, 0x6c",
            "mov r7, r2",
            "add r2, r0, 0x3c",
            "tst r4, 1",
            "str r2, [sp, 0x48]",
            "mov sl, r0",
            "ldreq r0, [sp, 0x48]",
            "mov r6, r1",
            "ldreq r0, [r0, 0x14]",
            "ldr r1, [0x00000ff4]",
            "ldr r8, [sp, 0x98]",
            "movne ip, 0",
            "add r1, pc, r1",
            "mov r5, r3",
            "strne ip, [sp, 0x38]",
            "add r3, r6, 0x24",
            "streq r0, [sp, 0x38]",
            "cmp r8, 0",
            "str r1, [sp, 0x1c]",
            "str r3, [sp, 0x4c]",
            "bne 0xe40",
            "ldr ip, [sp, 0x90]",
            "ldr r2, [sp, 0x94]",
            "cmp ip, 0",
            "ldrne r1, [sp, 0x90]",
            "ldreq r0, [r6]",
            "ldrne r1, [r1]",
            "streq r0, [sp, 0x30]",
            "strne r1, [sp, 0x30]",
            "cmp r2, 0",
            "moveq r8, r2",
            "ldr ip, [sp, 0x9c]",
            "ldr r2, [sl, 0x38]",
            "ldr r0, [sp, 0x9c]",
            "mov r3, 0",
            "addne r8, sp, 0x64",
            "subs ip, ip, 0",
            "movne ip, 1",
            "cmp r2, 0",
            "cmpne r0, 0",
            "str r3, [sp, 0x64]",
            "ldreq r1, [r7]",
            "ldr r3, [r6, 4]",
            "str ip, [sp, 0x54]",
            "str r3, [sp, 0x24]",
            "streq r1, [sp, 0x34]",
            "beq 0x608",
            "ldr fp, [r6, 0x14]",
            "ldr r0, [fp]",
            "tst r0, 7",
            "ldreq r3, [r7]",
            "streq r3, [sp, 0x34]",
            "beq 0x608",
            "ldr ip, [sp, 0x90]",
            "cmp ip, 0",
            "bne 0xe18",
            "ldr r3, [sp, 0x30]",
            "ldr r1, [r7]",
            "str r3, [sp, 0x5c]",
            "ldr r3, [sp, 0x90]",
            "str r1, [sp, 0x58]",
            "add ip, sp, 0x60",
            "and r0, r0, 7",
            "cmp r3, r0",
            "bhs 0xa9c",
            "add r2, fp, r3",
            "ldrb r2, [r2, 4]",
            "strb r2, [ip, r3]",
            "ldr r0, [fp]",
            "add r3, r3, 1",
            "b 0x580",
            "ldr r3, [sp, 0x5c]",
            "str r1, [sp, 0x18]",
            "strb r0, [r3], 1",
            "str r3, [sp, 0x5c]",
            "ldr r3, [sp, 0x58]",
            "add r3, r3, 4",
            "str r3, [sp, 0x58]",
            "cmp r3, ip",
            "beq 0xc8c",
            "ldr r1, [fp]",
            "rsb r3, ip, r3",
            "and r2, r1, 7",
            "cmp r3, r2",
            "ble 0xc64",
            "ldr r0, [r7]",
            "rsb r2, r2, r3",
            "add r0, r0, r2",
            "bic r3, r1, 7",
            "str r0, [r7]",
            "str r3, [fp]",
            "ldr r3, [sp, 0x5c]",
            "ldr r2, [sl, 0x38]",
            "ldr r4, [r6, 8]",
            "str r0, [sp, 0x34]",
            "str r3, [sp, 0x30]",
            "ldr r1, [0x00000ff8]",
            "ldr r3, [sp, 0x1c]",
            "cmp r2, 0",
            "add r3, r3, r1",
            "add ip, r3, entry.init0",
            "str r1, [sp, 0x20]",
            "str r3, [sp, 0x50]",
            "add sb, sp, 0x58",
            "add fp, sp, 0x5c",
            "str ip, [sp, 0x28]",
            "beq 0x910",
            "ldr ip, [sp, 0x34]",
            "ldr r0, [sp, 0x30]",
            "and r4, r4, 2",
            "mov r1, 4",
            "str ip, [sp, 0x5c]",
            "str r4, [sp, 0x2c]",
            "str r0, [sp, 0x58]",
            "mov r4, ip",
            "str r1, [sp, 0x18]",
            "mov ip, r0",
            "cmp r4, r5",
            "beq 0x7d4",
            "add r3, r4, 4",
            "cmp r5, r3",
            "blo 0xe0c",
            "ldr r0, [sp, 0x24]",
            "cmp r0, ip",
            "bls 0xe00",
            "ldr r1, [r4]",
            "ldr r2, [0x00000ffc]",
            "cmp r1, r2",
            "bhi 0xf3c",
            "cmp r1, 0x7f",
            "ldrls r3, [sp, 0x28]",
            "bls 0x6b4",
            "ldr r3, [sp, 0x28]",
            "add r3, r3, 8",
            "ldrh r2, [r3, 2]",
            "cmp r1, r2",
            "bhi 0x69c",
            "cmp r3, 0",
            "beq 0x6fc",
            "ldrh r2, [r3]",
            "cmp r1, r2",
            "blo 0x6fc",
            "ldr r3, [r3, 4]",
            "ldr r0, [sp, 0x20]",
            "str r3, [sp, 0x3c]",
            "ldr r3, [sp, 0x1c]",
            "add r2, r3, r0",
            "ldr r0, [sp, 0x3c]",
            "add r2, r2, r1",
            "add r3, r2, r0",
            "ldrb r3, [r3, sym.gconv]",
            "rsbs r2, r3, 1",
            "movlo r2, 0",
            "cmp r1, 0",
            "moveq r2, 0",
            "cmp r2, 0",
            "beq 0x774",
            "cmp r8, 0",
            "beq 0x9e0",
            "ldr r4, [r6, 0x20]",
            "cmp r4, 0",
            "bne 0x720",
            "b 0x798",
            "ldr r4, [r4, 0x10]",
            "cmp r4, 0",
            "beq 0x794",
            "ldr r0, [r4]",
            "bl sym.imp._dl_mcount_wrapper_check",
            "ldr r2, [r4, 0xc]",
            "ldr r3, [r7]",
            "mov r0, sl",
            "str fp, [sp]",
            "stmib sp, {r5, sb}",
            "str r8, [sp, 0xc]",
            "mov r1, r6",
            "ldr ip, [r4]",
            "mov lr, pc",
            "bx ip",
            "cmp r0, 6",
            "beq 0x714",
            "cmp r0, 5",
            "str r0, [sp, 0x18]",
            "beq 0xeac",
            "ldr ip, [sp, 0x58]",
            "ldr r4, [sp, 0x5c]",
            "str r0, [sp, 0x18]",
            "b 0x65c",
            "strb r3, [ip], 1",
            "ldr r4, [sp, 0x5c]",
            "ldr r0, [sp, 0x18]",
            "add r4, r4, 4",
            "str ip, [sp, 0x58]",
            "str r4, [sp, 0x5c]",
            "str r0, [sp, 0x18]",
            "b 0x65c",
            "ldr ip, [sp, 0x58]",
            "ldr r2, [sp, 0x2c]",
            "cmp r2, 0",
            "beq 0x7c8",
            "ldr r3, [r8]",
            "ldr r4, [sp, 0x5c]",
            "add r3, r3, 1",
            "add r4, r4, 4",
            "mov r0, 6",
            "str r3, [r8]",
            "str r4, [sp, 0x5c]",
            "str r0, [sp, 0x18]",
            "b 0x65c",
            "mov r3, 6",
            "ldr r4, [sp, 0x5c]",
            "str r3, [sp, 0x18]",
            "str r4, [r7]",
            "ldr r4, [sp, 0x90]",
            "str ip, [sp, 0x2c]",
            "cmp r4, 0",
            "bne 0x9c0",
            "ldr r4, [r6, 0x20]",
            "cmp r4, 0",
            "beq 0x85c",
            "str r8, [sp, 0x3c]",
            "str sl, [sp, 0x40]",
            "str r6, [sp, 0x44]",
            "mov sl, r5",
            "ldr r8, [sp, 0x30]",
            "ldr r6, [sp, 0x2c]",
            "ldr r5, [sp, 0x34]",
            "ldr r0, [r4, 4]",
            "cmp r0, 0",
            "beq 0x840",
            "bl sym.imp._dl_mcount_wrapper_check",
            "ldr r0, [r4, 0xc]",
            "ldr r2, [r7]",
            "mov r1, r5",
            "str r6, [sp]",
            "mov r3, r8",
            "ldr ip, [r4, 4]",
            "mov lr, pc",
            "bx ip",
            "ldr r4, [r4, 0x10]",
            "cmp r4, 0",
            "bne 0x810",
            "mov r5, sl",
            "ldr r8, [sp, 0x3c]",
            "ldr r6, [sp, 0x44]",
            "ldr sl, [sp, 0x40]",
            "ldr r3, [r6, 0xc]",
            "ldr r4, [r6, 8]",
            "add r3, r3, 1",
            "ands r4, r4, 1",
            "str r3, [r6, 0xc]",
            "bne 0x9ec",
            "ldr r2, [sp, 0x2c]",
            "ldr r3, [sp, 0x30]",
            "cmp r2, r3",
            "bls 0x8e4",
            "ldr r3, [r6]",
            "ldr r0, [sp, 0x38]",
            "str r3, [sp, 0x58]",
            "bl sym.imp._dl_mcount_wrapper_check",
            "str r4, [sp, 8]",
            "str r4, [sp]",
            "ldr ip, [sp, 0x9c]",
            "ldr r4, [sp, 0x94]",
            "str ip, [sp, 0xc]",
            "str r4, [sp, 4]",
            "ldr r0, [sp, 0x48]",
            "ldr r1, [sp, 0x4c]",
            "mov r2, sb",
            "ldr r3, [sp, 0x2c]",
            "ldr r4, [sp, 0x38]",
            "mov lr, pc",
            "bx r4",
            "cmp r0, 4",
            "beq 0x9cc",
            "ldr r3, [sp, 0x58]",
            "ldr ip, [sp, 0x2c]",
            "cmp ip, r3",
            "bne 0xd40",
            "str r0, [sp, 0x18]",
            "ldr r2, [sl, 0x38]",
            "ldr r1, [sp, 0x18]",
            "cmp r1, 0",
            "bne 0xa0c",
            "ldr r4, [r7]",
            "ldr r3, [r6]",
            "cmp r2, 0",
            "str r4, [sp, 0x34]",
            "str r3, [sp, 0x30]",
            "ldr r4, [r6, 8]",
            "bne 0x634",
            "ldr r0, [sp, 0x34]",
            "cmp r5, r0",
            "beq 0xd24",
            "ldr r3, [sp, 0x30]",
            "ldr ip, [sp, 0x24]",
            "add r1, r3, 4",
            "cmp r1, ip",
            "bhi 0xd0c",
            "ldr r2, [sp, 0x34]",
            "ldr ip, [sp, 0x30]",
            "mov r0, 4",
            "str sl, [sp, 0x3c]",
            "str r7, [sp, 0x44]",
            "and r4, r4, 2",
            "add r3, r2, 1",
            "str ip, [sp, 0x2c]",
            "str r0, [sp, 0x18]",
            "ldr sl, [sp, 0x24]",
            "str r6, [sp, 0x40]",
            "ldr r7, [sp, 0x50]",
            "b 0x974",
            "add r1, ip, 4",
            "cmp sl, r1",
            "add r3, r3, 1",
            "blo 0xdb8",
            "ldrb r6, [r3, -1]",
            "sub r0, r3, 1",
            "ldr r2, [r7, r6, lsl 2]",
            "cmp r2, 0",
            "beq 0xcb8",
            "str r2, [ip]",
            "mov r0, r3",
            "mov ip, r1",
            "cmp r5, r3",
            "bne 0x964",
            "ldr r7, [sp, 0x44]",
            "mov r0, r5",
            "ldr sl, [sp, 0x3c]",
            "ldr r6, [sp, 0x40]",
            "str ip, [sp, 0x2c]",
            "str r0, [r7]",
            "ldr r4, [sp, 0x90]",
            "cmp r4, 0",
            "beq 0x7e8",
            "ldr ip, [sp, 0x2c]",
            "str ip, [r4]",
            "b 0xa8c",
            "ldr r0, [sp, 0x18]",
            "cmp r0, 5",
            "bne 0x8e4",
            "ldr r2, [sl, 0x38]",
            "b 0x8f4",
            "mov r1, 6",
            "str r1, [sp, 0x18]",
            "b 0x7d4",
            "ldr r0, [sp, 0x94]",
            "ldr r3, [sp, 0x64]",
            "ldr r2, [r0]",
            "ldr r1, [sp, 0x2c]",
            "add r3, r2, r3",
            "ldr r2, [sl, 0x38]",
            "str r1, [r6]",
            "str r3, [r0]",
            "cmp r2, 0",
            "beq 0xa8c",
            "ldr r3, [sp, 0x54]",
            "ldr ip, [sp, 0x18]",
            "cmp ip, 7",
            "movne r3, 0",
            "andeq r3, r3, 1",
            "cmp r3, 0",
            "beq 0xa8c",
            "ldr r1, [r7]",
            "rsb r3, r1, r5",
            "cmp r3, 3",
            "movle r2, r1",
            "movle r3, 0",
            "ble 0xa68",
            "b 0xd68",
            "ldr r0, [r6, 0x14]",
            "ldrb ip, [r1, r3]",
            "add r0, r0, r3",
            "add r2, r2, 1",
            "strb ip, [r0, 4]",
            "add r3, r3, 1",
            "str r2, [r7]",
            "cmp r5, r2",
            "bhi 0xa4c",
            "ldr r2, [r6, 0x14]",
            "mov r4, 7",
            "ldr r1, [r2]",
            "str r4, [sp, 0x18]",
            "bic r1, r1, 7",
            "orr r3, r1, r3",
            "str r3, [r2]",
            "ldr r0, [sp, 0x18]",
            "add sp, sp, 0x6c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "bx lr",
            "rsb r2, r3, 4",
            "add r2, r1, r2",
            "cmp r5, r2",
            "blo 0xb38",
            "ldr ip, [sp, 0x30]",
            "ldr r0, [sp, 0x24]",
            "cmp ip, r0",
            "movhs ip, 5",
            "strhs ip, [sp, 0x18]",
            "bhs 0xa8c",
            "add ip, sp, 0x60",
            "add r2, ip, r3",
            "ldrb sb, [r1], 1",
            "add r3, r3, 1",
            "cmp r5, r1",
            "movls r0, 0",
            "movhi r0, 1",
            "cmp r3, 3",
            "movhi r0, 0",
            "cmp r0, 0",
            "strb sb, [r2], 1",
            "str r1, [sp, 0x58]",
            "bne 0xacc",
            "ldr r2, [sp, 0x60]",
            "ldr r1, [0x00000ffc]",
            "add r3, ip, r3",
            "cmp r2, r1",
            "str ip, [sp, 0x58]",
            "str r3, [sp, 0x20]",
            "bhi 0xd90",
            "ldr r0, [0x00000ff8]",
            "ldr r1, [sp, 0x1c]",
            "add r3, r1, r0",
            "add r3, r3, entry.init0",
            "ldrh r1, [r3, 2]",
            "cmp r2, r1",
            "bls 0xb64",
            "add r3, r3, 8",
            "b 0xb24",
            "add r3, fp, r3",
            "str r5, [r7]",
            "add r2, r3, 4",
            "ldr r3, [sp, 0x58]",
            "cmp r5, r3",
            "add r2, r2, 1",
            "bls 0xdac",
            "ldrb r1, [r3], 1",
            "strb r1, [r2, -1]",
            "str r3, [sp, 0x58]",
            "b 0xb48",
            "cmp r3, 0",
            "beq 0xba8",
            "ldrh r1, [r3]",
            "cmp r2, r1",
            "blo 0xba8",
            "ldr r1, [sp, 0x1c]",
            "add r0, r1, r0",
            "ldr r1, [r3, 4]",
            "add r3, r0, r2",
            "add r3, r3, r1",
            "ldrb r0, [r3, sym.gconv]",
            "rsbs r1, r0, 1",
            "movlo r1, 0",
            "cmp r2, 0",
            "moveq r1, 0",
            "cmp r1, 0",
            "beq 0x5a4",
            "cmp r8, 0",
            "moveq r2, 6",
            "streq r2, [sp, 0x18]",
            "beq 0xa8c",
            "add r3, sp, 0x58",
            "add r0, sp, 0x5c",
            "ldr sb, [r6, 0x20]",
            "str r3, [sp, 0x18]",
            "str r0, [sp, 0x28]",
            "b 0xc18",
            "ldr r0, [sb]",
            "str ip, [sp, 0x14]",
            "bl sym.imp._dl_mcount_wrapper_check",
            "ldr r1, [sp, 0x18]",
            "ldr r2, [sp, 0x20]",
            "ldr r3, [sp, 0x28]",
            "stm sp, {r1, r2, r3, r8}",
            "mov r0, sl",
            "mov r1, r6",
            "ldr r2, [sb, 0xc]",
            "ldr r3, [r7]",
            "ldr ip, [sb]",
            "mov lr, pc",
            "bx ip",
            "cmp r0, 6",
            "ldr ip, [sp, 0x14]",
            "bne 0xc58",
            "ldr sb, [sb, 0x10]",
            "cmp sb, 0",
            "bne 0xbd0",
            "tst r4, 2",
            "moveq r4, 6",
            "ldreq r3, [sp, 0x58]",
            "streq r4, [sp, 0x18]",
            "beq 0x5c0",
            "ldr r3, [r8]",
            "mov r0, 6",
            "add r2, r3, 1",
            "ldr r3, [sp, 0x58]",
            "str r2, [r8]",
            "add r3, r3, 4",
            "str r3, [sp, 0x58]",
            "str r0, [sp, 0x18]",
            "b 0x5c0",
            "str r0, [sp, 0x18]",
            "ldr r3, [sp, 0x58]",
            "b 0x5c0",
            "ldr r1, [sp, 0x1c]",
            "ldr r0, [0x00001000]",
            "ldr r3, [0x00001004]",
            "ldr r2, [sp, 0x1c]",
            "add r0, r1, r0",
            "add r3, r1, r3",
            "ldr r1, [0x00001008]",
            "add r1, r2, r1",
            "mov r2, 0x1bc",
            "bl sym.imp.__assert_fail",
            "ldr r4, [sp, 0x18]",
            "cmp r4, 7",
            "beq 0xeb8",
            "ldr ip, [sp, 0x18]",
            "cmp ip, 0",
            "bne 0xa8c",
            "ldr r0, [r7]",
            "ldr r2, [sl, 0x38]",
            "str r0, [sp, 0x34]",
            "ldr r4, [r6, 8]",
            "b 0x608",
            "cmp r6, 0",
            "beq 0x988",
            "cmp r8, 0",
            "beq 0xcec",
            "cmp r4, 0",
            "beq 0xcec",
            "ldr r2, [r8]",
            "mov r0, r3",
            "add r2, r2, 1",
            "str r2, [r8]",
            "mov r2, 6",
            "str r2, [sp, 0x18]",
            "b 0x994",
            "ldr r7, [sp, 0x44]",
            "mov r3, 6",
            "str ip, [sp, 0x2c]",
            "ldr sl, [sp, 0x3c]",
            "ldr r6, [sp, 0x40]",
            "str r3, [sp, 0x18]",
            "str r0, [r7]",
            "b 0x9b4",
            "ldr r0, [sp, 0x34]",
            "mov r1, 5",
            "str r3, [sp, 0x2c]",
            "str r1, [sp, 0x18]",
            "str r0, [r7]",
            "b 0x9b4",
            "ldr r1, [sp, 0x30]",
            "mov r0, r5",
            "add r2, r2, 4",
            "str r1, [sp, 0x2c]",
            "str r2, [sp, 0x18]",
            "str r0, [r7]",
            "b 0x9b4",
            "ldr r2, [sl, 0x38]",
            "cmp r2, 0",
            "beq 0xdd8",
            "ldr ip, [sp, 0x2c]",
            "ldr r1, [r7]",
            "rsb r3, ip, r3",
            "add r3, r1, r3, lsl 2",
            "str r3, [r7]",
            "str r0, [sp, 0x18]",
            "b 0x8e8",
            "ldr r1, [sp, 0x1c]",
            "ldr r0, [0x0000100c]",
            "ldr r3, [0x00001010]",
            "ldr r2, [sp, 0x1c]",
            "add r0, r1, r0",
            "add r3, r1, r3",
            "ldr r1, [0x00001014]",
            "add r1, r2, r1",
            "ldr r2, [0x00001018]",
            "bl sym.imp.__assert_fail",
            "lsr r2, r2, 7",
            "cmp r2, 0x1c00",
            "addeq r3, ip, 4",
            "streq r3, [sp, 0x58]",
            "streq r0, [sp, 0x18]",
            "bne 0xba8",
            "b 0x5c0",
            "mov r4, 7",
            "str r4, [sp, 0x18]",
            "b 0xa8c",
            "ldr r7, [sp, 0x44]",
            "mov r1, 5",
            "str ip, [sp, 0x2c]",
            "ldr sl, [sp, 0x3c]",
            "ldr r6, [sp, 0x40]",
            "str r1, [sp, 0x18]",
            "str r0, [r7]",
            "b 0x9b4",
            "ldr r4, [sp, 0x2c]",
            "ldr ip, [r7]",
            "rsb r1, r3, r4",
            "cmp r1, 0",
            "add r3, r1, 3",
            "movge r3, r1",
            "sub r3, ip, r3, asr 2",
            "str r3, [r7]",
            "str r0, [sp, 0x18]",
            "b 0x8e8",
            "mov r1, 5",
            "str r1, [sp, 0x18]",
            "b 0x7d4",
            "mov r2, 7",
            "str r2, [sp, 0x18]",
            "b 0x7d4",
            "ldr r1, [sp, 0x1c]",
            "ldr r0, [0x0000101c]",
            "ldr r3, [0x00001010]",
            "ldr r2, [sp, 0x1c]",
            "add r0, r1, r0",
            "add r3, r1, r3",
            "ldr r1, [0x00001014]",
            "add r1, r2, r1",
            "ldr r2, [0x00001020]",
            "bl sym.imp.__assert_fail",
            "ldr r1, [sp, 0x90]",
            "cmp r1, 0",
            "bne 0xf5c",
            "ldr r3, [r6, 0x14]",
            "ldr r4, [sp, 0x90]",
            "str r4, [r3, 4]",
            "str r4, [r3]",
            "ldr r3, [r6, 8]",
            "tst r3, 1",
            "bne 0xdb0",
            "ldr r0, [sp, 0x38]",
            "bl sym.imp._dl_mcount_wrapper_check",
            "ldr r2, [sp, 0x90]",
            "ldr r0, [sp, 0x9c]",
            "ldr ip, [sp, 0x94]",
            "str r0, [sp, 0xc]",
            "str ip, [sp, 4]",
            "str r8, [sp, 8]",
            "str r2, [sp]",
            "ldr r0, [sp, 0x48]",
            "ldr r1, [sp, 0x4c]",
            "mov r3, r2",
            "ldr r4, [sp, 0x38]",
            "mov lr, pc",
            "bx r4",
            "str r0, [sp, 0x18]",
            "b 0xa8c",
            "ldr r4, [sp, 0x5c]",
            "ldr ip, [sp, 0x58]",
            "b 0x7d4",
            "ldr ip, [sp, 0x20]",
            "add r2, r3, 4",
            "cmp ip, r2",
            "beq 0xfcc",
            "ldr r2, [fp]",
            "ldr r4, [sp, 0x20]",
            "ldr r1, [sp, 0x58]",
            "rsb r3, r3, r4",
            "ldr ip, [r7]",
            "and r0, r2, 7",
            "rsb r0, r0, r3",
            "bic r2, r2, 7",
            "rsb r3, r1, r4",
            "add r0, ip, r0",
            "cmp r3, r2",
            "str r0, [r7]",
            "ble 0xfa8",
            "cmp r3, 7",
            "bgt 0xf80",
            "orr r3, r3, r2",
            "str r3, [fp]",
            "mov r2, r1",
            "mov r3, 0",
            "ldr r4, [sp, 0x20]",
            "cmp r2, r4",
            "bhs 0xa8c",
            "ldrb ip, [r1, r3]",
            "add r0, fp, r3",
            "add r2, r2, 1",
            "strb ip, [r0, 4]",
            "add r3, r3, 1",
            "str r2, [sp, 0x58]",
            "b 0xf14",
            "lsr r1, r1, 7",
            "cmp r1, 0x1c00",
            "streq r3, [sp, 0x5c]",
            "ldreq r0, [sp, 0x18]",
            "moveq r4, r3",
            "bne 0x6fc",
            "str r0, [sp, 0x18]",
            "b 0x65c",
            "ldr r2, [sp, 0x1c]",
            "ldr r0, [0x0000101c]",
            "ldr r3, [0x00001010]",
            "ldr r1, [0x00001014]",
            "add r0, r2, r0",
            "add r3, r2, r3",
            "add r1, r2, r1",
            "mov r2, 0x1a0",
            "bl sym.imp.__assert_fail",
            "ldr r1, [sp, 0x1c]",
            "ldr r0, [0x00001024]",
            "ldr r3, [0x00001004]",
            "ldr r2, [sp, 0x1c]",
            "add r0, r1, r0",
            "add r3, r1, r3",
            "ldr r1, [0x00001008]",
            "add r1, r2, r1",
            "ldr r2, [0x00001028]",
            "bl sym.imp.__assert_fail",
            "ldr ip, [sp, 0x1c]",
            "ldr r0, [0x0000102c]",
            "ldr r3, [0x00001004]",
            "ldr r1, [0x00001008]",
            "add r0, ip, r0",
            "add r3, ip, r3",
            "add r1, ip, r1",
            "mov r2, 0x1d8",
            "bl sym.imp.__assert_fail",
            "ldr r1, [sp, 0x1c]",
            "ldr r0, [0x00001030]",
            "ldr r3, [0x00001004]",
            "ldr r2, [sp, 0x1c]",
            "add r0, r1, r0",
            "add r3, r1, r3",
            "ldr r1, [0x00001008]",
            "add r1, r2, r1",
            "ldr r2, [0x00001034]",
            "bl sym.imp.__assert_fail"
        ]
    },
    "sym.imp._dl_mcount_wrapper_check": {
        "function_address": "0x0000035c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x9000",
            "ldr pc, [ip, 0xcb0]!"
        ]
    },
    "sym.imp.__assert_fail": {
        "function_address": "0x00000350",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x9000",
            "ldr pc, [ip, 0xcb8]!"
        ]
    },
    "sym.gconv_init": {
        "function_address": "0x00001038",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "ldr r5, [0x000010d8]",
            "ldr r6, [0x000010dc]",
            "add r5, pc, r5",
            "add r6, r5, r6",
            "mov r4, r0",
            "mov r1, r6",
            "ldr r0, [r0, 0xc]",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x109c",
            "ldr r3, [0x000010e0]",
            "mov r2, 1",
            "add r5, r5, r3",
            "mov r3, 4",
            "str r0, [r4, 0x38]",
            "str r2, [r4, 0x28]",
            "str r3, [r4, 0x30]",
            "str r5, [r4, 0x18]",
            "str r2, [r4, 0x24]",
            "str r3, [r4, 0x2c]",
            "mov r0, 0",
            "str r0, [r4, 0x34]",
            "pop {r4, r5, r6, lr}",
            "bx lr",
            "mov r1, r6",
            "ldr r0, [r4, 0x10]",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "movne r0, 1",
            "bne 0x1094",
            "mov r2, 4",
            "mov r3, 1",
            "mvn r1, 0",
            "str r1, [r4, 0x38]",
            "str r2, [r4, 0x28]",
            "str r3, [r4, 0x30]",
            "str r2, [r4, 0x24]",
            "str r3, [r4, 0x2c]",
            "b 0x108c"
        ]
    },
    "sym.imp.strcmp": {
        "function_address": "0x00000368",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x9000",
            "ldr pc, [ip, 0xca8]!"
        ]
    },
    "entry.fini0": {
        "function_address": "0x000003ac",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "ldr r4, [0x000003f0]",
            "ldr r5, [0x000003f4]",
            "add r4, pc, r4",
            "ldrb r3, [r4, r5]",
            "cmp r3, 0",
            "bne 0x3e8",
            "ldr r3, [0x000003f8]",
            "ldr r3, [r4, r3]",
            "cmp r3, 0",
            "ldrne r3, [0x000003fc]",
            "ldrne r0, [r4, r3]",
            "blne sym.imp.__cxa_finalize",
            "mov r3, 1",
            "strb r3, [r4, r5]",
            "pop {r4, r5, r6, lr}",
            "bx lr"
        ]
    },
    "sym.imp.__cxa_finalize": {
        "function_address": "0x00000374",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x9000",
            "ldr pc, [ip, 0xca0]!"
        ]
    }
}