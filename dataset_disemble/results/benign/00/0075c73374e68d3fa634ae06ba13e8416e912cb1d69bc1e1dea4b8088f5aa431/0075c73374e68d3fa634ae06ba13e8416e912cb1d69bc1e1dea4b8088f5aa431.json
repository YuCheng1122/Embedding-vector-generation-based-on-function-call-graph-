{
    "sym.editConfig": {
        "function_address": "0x00001e68",
        "instructions": [
            "push {fp, lr}",
            "add fp, sp, 4",
            "sub sp, sp, 0x58",
            "str r0, [fp, -0x58]",
            "str r1, [fp, -0x5c]",
            "ldr r3, [0x00002878]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r3, [0x0000287c]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r3, [0x00002880]",
            "add r3, pc, r3",
            "mov r2, r3",
            "mov r3, 0xfe",
            "bl sym.imp.debugMessage",
            "ldr r3, [fp, -0x58]",
            "ldr r3, [r3, 0x18]",
            "ldr r0, [fp, -0x58]",
            "blx r3",
            "mov r3, r0",
            "mov r0, r3",
            "bl sym.imp.to_string_with_enum_icmp_respond_to_ping_interface",
            "mov r3, r0",
            "ldr r2, [0x00002884]",
            "add r2, pc, r2",
            "mov r0, r2",
            "mov r1, 0",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "ldr r3, [fp, -0x58]",
            "ldr r3, [r3, 0x38]",
            "ldr r0, [fp, -0x58]",
            "blx r3",
            "mov r3, r0",
            "cmp r3, 0",
            "beq 0x1f08",
            "ldr r3, [0x00002888]",
            "add r3, pc, r3",
            "b 0x1f10",
            "ldr r3, [0x0000288c]",
            "add r3, pc, r3",
            "ldr r2, [0x00002890]",
            "add r2, pc, r2",
            "mov r0, r2",
            "mov r1, 0",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "ldr r3, [fp, -0x58]",
            "ldr r3, [r3, 0x24]",
            "ldr r0, [fp, -0x58]",
            "blx r3",
            "mov r3, r0",
            "cmp r3, 0",
            "beq 0x1f50",
            "ldr r3, [0x00002894]",
            "add r3, pc, r3",
            "b 0x1f58",
            "ldr r3, [0x00002898]",
            "add r3, pc, r3",
            "ldr r2, [0x0000289c]",
            "add r2, pc, r2",
            "mov r0, r2",
            "mov r1, 0",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "ldr r3, [fp, -0x58]",
            "ldr r3, [r3, 0xc]",
            "ldr r0, [fp, -0x58]",
            "blx r3",
            "mov r3, r0",
            "cmp r3, 0",
            "bne 0x1f98",
            "ldr r3, [0x000028a0]",
            "add r3, pc, r3",
            "b 0x1fa0",
            "ldr r3, [0x000028a4]",
            "add r3, pc, r3",
            "ldr r2, [0x000028a8]",
            "add r2, pc, r2",
            "mov r0, r2",
            "mov r1, 0",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "mov r0, 0x100",
            "mov r1, 1",
            "bl sym.imp.calloc",
            "mov r3, r0",
            "str r3, [fp, -0x14]",
            "mov r0, 0x100",
            "mov r1, 1",
            "bl sym.imp.calloc",
            "mov r3, r0",
            "str r3, [fp, -0x18]",
            "ldr r3, [0x000028ac]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r1, [fp, -0x14]",
            "bl sym.imp.getDataModel",
            "mov r3, r0",
            "cmp r3, 0",
            "beq 0x205c",
            "ldr r3, [0x000028b0]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r3, [0x000028b4]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r3, [0x000028b8]",
            "add r3, pc, r3",
            "mov r2, r3",
            "movw r3, 0x10d",
            "bl sym.imp.debugMessage",
            "ldr r3, [fp, -0x14]",
            "cmp r3, 0",
            "beq 0x2040",
            "ldr r0, [fp, -0x14]",
            "bl sym.imp.free",
            "ldr r3, [fp, -0x18]",
            "cmp r3, 0",
            "beq 0x2058",
            "ldr r0, [fp, -0x18]",
            "bl sym.imp.free",
            "b 0x2870",
            "b 0x2870",
            "mov r3, 1",
            "str r3, [fp, -8]",
            "b 0x20a4",
            "ldr r0, [fp, -0x18]",
            "ldr r3, [0x000028bc]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r2, [fp, -8]",
            "bl sym.imp.sprintf",
            "ldr r0, [fp, -0x18]",
            "bl sym.imp.system",
            "ldr r3, [0x000028c0]",
            "add r3, pc, r3",
            "mov r0, r3",
            "bl sym.imp.system",
            "ldr r3, [fp, -8]",
            "add r3, r3, 1",
            "str r3, [fp, -8]",
            "ldr r0, [fp, -0x14]",
            "bl sym.imp.atoi",
            "mov r2, r0",
            "ldr r3, [fp, -8]",
            "cmp r2, r3",
            "bge 0x2068",
            "ldr r3, [0x000028c4]",
            "add r3, pc, r3",
            "mov r0, r3",
            "mov r1, 0",
            "ldr r3, [0x000028c8]",
            "add r3, pc, r3",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "ldr r3, [0x000028cc]",
            "add r3, pc, r3",
            "mov r0, r3",
            "mov r1, 0",
            "ldr r3, [0x000028d0]",
            "add r3, pc, r3",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "ldr r3, [fp, -0x14]",
            "cmp r3, 0",
            "beq 0x2110",
            "ldr r0, [fp, -0x14]",
            "bl sym.imp.free",
            "ldr r3, [fp, -0x18]",
            "cmp r3, 0",
            "beq 0x2124",
            "ldr r0, [fp, -0x18]",
            "bl sym.imp.free",
            "mov r3, 0",
            "str r3, [fp, -0xc]",
            "mov r0, 0x100",
            "bl sym.imp.malloc",
            "mov r3, r0",
            "str r3, [fp, -0x1c]",
            "mov r0, 0x100",
            "bl sym.imp.malloc",
            "mov r3, r0",
            "str r3, [fp, -0x20]",
            "ldr r3, [fp, -0x58]",
            "ldr r3, [r3, 0x2c]",
            "ldr r3, [r3, 4]",
            "str r3, [fp, -0x10]",
            "b 0x2738",
            "ldr r3, [fp, -0x10]",
            "ldr r3, [r3]",
            "str r3, [fp, -0x24]",
            "ldr r3, [fp, -0x24]",
            "ldr r3, [r3, 0x3c]",
            "ldr r0, [fp, -0x24]",
            "blx r3",
            "str r0, [fp, -0x28]",
            "ldr r3, [fp, -0x24]",
            "ldr r3, [r3, 0x60]",
            "ldr r0, [fp, -0x24]",
            "blx r3",
            "str r0, [fp, -0x2c]",
            "ldr r3, [fp, -0x24]",
            "ldr r3, [r3, 0x78]",
            "ldr r0, [fp, -0x24]",
            "blx r3",
            "str r0, [fp, -0x30]",
            "ldr r3, [fp, -0x24]",
            "ldr r3, [r3, 0x24]",
            "ldr r0, [fp, -0x24]",
            "blx r3",
            "str r0, [fp, -0x34]",
            "ldr r3, [fp, -0x24]",
            "ldr r3, [r3, 0x54]",
            "ldr r0, [fp, -0x24]",
            "blx r3",
            "str r0, [fp, -0x38]",
            "ldr r3, [fp, -0x24]",
            "ldr r3, [r3, 0xc]",
            "ldr r0, [fp, -0x24]",
            "blx r3",
            "mov r3, r0",
            "mov r0, r3",
            "bl sym.imp.to_string_with_enum_protocol",
            "str r0, [fp, -0x3c]",
            "mov r0, 6",
            "mov r1, 1",
            "bl sym.imp.calloc",
            "mov r3, r0",
            "str r3, [fp, -0x40]",
            "ldr r3, [fp, -0x24]",
            "ldr r3, [r3, 0x6c]",
            "ldr r0, [fp, -0x24]",
            "blx r3",
            "mov r3, r0",
            "ldr r0, [fp, -0x40]",
            "ldr r2, [0x000028d4]",
            "add r2, pc, r2",
            "mov r1, r2",
            "mov r2, r3",
            "bl sym.imp.sprintf",
            "mov r0, 6",
            "mov r1, 1",
            "bl sym.imp.calloc",
            "mov r3, r0",
            "str r3, [fp, -0x44]",
            "ldr r3, [fp, -0x24]",
            "ldr r3, [r3, 0x18]",
            "ldr r0, [fp, -0x24]",
            "blx r3",
            "mov r3, r0",
            "ldr r0, [fp, -0x44]",
            "ldr r2, [0x000028d8]",
            "add r2, pc, r2",
            "mov r1, r2",
            "mov r2, r3",
            "bl sym.imp.sprintf",
            "mov r0, 6",
            "mov r1, 1",
            "bl sym.imp.calloc",
            "mov r3, r0",
            "str r3, [fp, -0x48]",
            "ldr r3, [fp, -0x24]",
            "ldr r3, [r3, 0x30]",
            "ldr r0, [fp, -0x24]",
            "blx r3",
            "mov r3, r0",
            "ldr r0, [fp, -0x48]",
            "ldr r2, [0x000028dc]",
            "add r2, pc, r2",
            "mov r1, r2",
            "mov r2, r3",
            "bl sym.imp.sprintf",
            "mov r0, 6",
            "mov r1, 1",
            "bl sym.imp.calloc",
            "mov r3, r0",
            "str r3, [fp, -0x4c]",
            "ldr r3, [fp, -0x24]",
            "ldr r3, [r3, 0x48]",
            "ldr r0, [fp, -0x24]",
            "blx r3",
            "mov r3, r0",
            "ldr r0, [fp, -0x4c]",
            "ldr r2, [0x000028e0]",
            "add r2, pc, r2",
            "mov r1, r2",
            "mov r2, r3",
            "bl sym.imp.sprintf",
            "ldr r0, [fp, -0x1c]",
            "mov r1, 0",
            "mov r2, 0x100",
            "bl sym.imp.memset",
            "ldr r3, [fp, -0x24]",
            "ldr r3, [r3, 0x3c]",
            "ldr r0, [fp, -0x24]",
            "blx r3",
            "mov r3, r0",
            "ldr r0, [fp, -0x1c]",
            "ldr r2, [0x000028e4]",
            "add r2, pc, r2",
            "mov r1, r2",
            "mov r2, r3",
            "bl sym.imp.sprintf",
            "ldr r0, [fp, -0x1c]",
            "bl sym.imp.system",
            "ldr r0, [fp, -0x20]",
            "mov r1, 0",
            "mov r2, 0x100",
            "bl sym.imp.memset",
            "ldr r3, [fp, -0x24]",
            "ldr r3, [r3, 0x3c]",
            "ldr r0, [fp, -0x24]",
            "blx r3",
            "mov r3, r0",
            "ldr r0, [fp, -0x20]",
            "ldr r2, [0x000028e8]",
            "add r2, pc, r2",
            "mov r1, r2",
            "mov r2, r3",
            "bl sym.imp.sprintf",
            "ldr r3, [0x000028ec]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r1, [fp, -0x28]",
            "ldr r3, [0x000028f0]",
            "add r3, pc, r3",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "ldr r3, [0x000028f4]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r1, [fp, -0x28]",
            "ldr r2, [fp, -0x28]",
            "bl sym.imp.setUciDataModel",
            "ldr r3, [0x000028f8]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r1, [fp, -0x28]",
            "ldr r3, [0x000028fc]",
            "add r3, pc, r3",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "ldr r3, [0x00002900]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r1, [fp, -0x28]",
            "ldr r2, [fp, -0x20]",
            "bl sym.imp.setUciDataModel",
            "ldr r3, [0x00002904]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r1, [fp, -0x28]",
            "ldr r3, [0x00002908]",
            "add r3, pc, r3",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "ldr r3, [0x0000290c]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r1, [fp, -0x28]",
            "ldr r3, [0x00002910]",
            "add r3, pc, r3",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "ldr r3, [0x00002914]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r1, [fp, -0x28]",
            "ldr r2, [fp, -0x2c]",
            "bl sym.imp.setUciDataModel",
            "ldr r3, [0x00002918]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r1, [fp, -0x28]",
            "ldr r2, [fp, -0x3c]",
            "bl sym.imp.setUciDataModel",
            "ldr r0, [fp, -0x3c]",
            "ldr r3, [0x0000291c]",
            "add r3, pc, r3",
            "mov r1, r3",
            "bl sym.imp.strcmp",
            "mov r3, r0",
            "cmp r3, 0",
            "bne 0x24f4",
            "ldr r3, [0x00002920]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r1, [fp, -0x28]",
            "ldr r3, [0x00002924]",
            "add r3, pc, r3",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "ldr r3, [0x00002928]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r1, [fp, -0x28]",
            "ldr r3, [0x0000292c]",
            "add r3, pc, r3",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "ldr r3, [0x00002930]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r1, [fp, -0x28]",
            "ldr r3, [0x00002934]",
            "add r3, pc, r3",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "ldr r3, [0x00002938]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r1, [fp, -0x28]",
            "ldr r3, [0x0000293c]",
            "add r3, pc, r3",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "b 0x25cc",
            "ldr r3, [fp, -0x40]",
            "ldrb r3, [r3]",
            "cmp r3, 0",
            "bne 0x2530",
            "ldr r3, [fp, -0x44]",
            "ldrb r3, [r3]",
            "cmp r3, 0",
            "beq 0x2548",
            "ldr r3, [0x00002940]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r1, [fp, -0x28]",
            "ldr r2, [fp, -0x44]",
            "bl sym.imp.setUciDataModel",
            "b 0x2548",
            "ldr r3, [0x00002944]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r1, [fp, -0x28]",
            "ldr r2, [fp, -0x40]",
            "bl sym.imp.setUciDataModel",
            "ldr r3, [0x00002948]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r1, [fp, -0x28]",
            "ldr r2, [fp, -0x44]",
            "bl sym.imp.setUciDataModel",
            "ldr r3, [fp, -0x48]",
            "ldrb r3, [r3]",
            "cmp r3, 0",
            "bne 0x259c",
            "ldr r3, [fp, -0x4c]",
            "ldrb r3, [r3]",
            "cmp r3, 0",
            "beq 0x25b4",
            "ldr r3, [0x0000294c]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r1, [fp, -0x28]",
            "ldr r2, [fp, -0x4c]",
            "bl sym.imp.setUciDataModel",
            "b 0x25b4",
            "ldr r3, [0x00002950]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r1, [fp, -0x28]",
            "ldr r2, [fp, -0x48]",
            "bl sym.imp.setUciDataModel",
            "ldr r3, [0x00002954]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r1, [fp, -0x28]",
            "ldr r2, [fp, -0x4c]",
            "bl sym.imp.setUciDataModel",
            "ldr r3, [fp, -0x30]",
            "ldrb r3, [r3]",
            "cmp r3, 0",
            "bne 0x2600",
            "ldr r3, [0x00002958]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r1, [fp, -0x28]",
            "ldr r3, [0x0000295c]",
            "add r3, pc, r3",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "b 0x2618",
            "ldr r3, [0x00002960]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r1, [fp, -0x28]",
            "ldr r2, [fp, -0x30]",
            "bl sym.imp.setUciDataModel",
            "ldr r3, [fp, -0x38]",
            "ldrb r3, [r3]",
            "cmp r3, 0",
            "bne 0x264c",
            "ldr r3, [0x00002964]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r1, [fp, -0x28]",
            "ldr r3, [0x00002968]",
            "add r3, pc, r3",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "b 0x2664",
            "ldr r3, [0x0000296c]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r1, [fp, -0x28]",
            "ldr r2, [fp, -0x38]",
            "bl sym.imp.setUciDataModel",
            "ldr r3, [fp, -0x34]",
            "ldrb r3, [r3]",
            "cmp r3, 0",
            "bne 0x2698",
            "ldr r3, [0x00002970]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r1, [fp, -0x28]",
            "ldr r3, [0x00002974]",
            "add r3, pc, r3",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "b 0x26b0",
            "ldr r3, [0x00002978]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r1, [fp, -0x28]",
            "ldr r2, [fp, -0x34]",
            "bl sym.imp.setUciDataModel",
            "ldr r3, [0x0000297c]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r1, [fp, -0x28]",
            "ldr r3, [0x00002980]",
            "add r3, pc, r3",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "ldr r3, [fp, -0x40]",
            "cmp r3, 0",
            "beq 0x26e4",
            "ldr r0, [fp, -0x40]",
            "bl sym.imp.free",
            "ldr r3, [fp, -0x44]",
            "cmp r3, 0",
            "beq 0x26f8",
            "ldr r0, [fp, -0x44]",
            "bl sym.imp.free",
            "ldr r3, [fp, -0x48]",
            "cmp r3, 0",
            "beq 0x270c",
            "ldr r0, [fp, -0x48]",
            "bl sym.imp.free",
            "ldr r3, [fp, -0x4c]",
            "cmp r3, 0",
            "beq 0x2720",
            "ldr r0, [fp, -0x4c]",
            "bl sym.imp.free",
            "ldr r3, [fp, -0xc]",
            "add r3, r3, 1",
            "str r3, [fp, -0xc]",
            "ldr r3, [fp, -0x10]",
            "ldr r3, [r3, 8]",
            "str r3, [fp, -0x10]",
            "ldr r3, [fp, -0x10]",
            "cmp r3, 0",
            "bne 0x2160",
            "ldr r3, [fp, -0x1c]",
            "cmp r3, 0",
            "beq 0x2758",
            "ldr r0, [fp, -0x1c]",
            "bl sym.imp.free",
            "ldr r3, [fp, -0x20]",
            "cmp r3, 0",
            "beq 0x276c",
            "ldr r0, [fp, -0x20]",
            "bl sym.imp.free",
            "mov r0, 0xb",
            "mov r1, 1",
            "bl sym.imp.calloc",
            "mov r3, r0",
            "str r3, [fp, -0x50]",
            "mov r0, 0xb",
            "mov r1, 1",
            "bl sym.imp.calloc",
            "mov r3, r0",
            "str r3, [fp, -0x54]",
            "ldr r0, [fp, -0x50]",
            "ldr r3, [0x00002984]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r2, [fp, -0xc]",
            "bl sym.imp.sprintf",
            "ldr r3, [fp, -0xc]",
            "add r3, r3, 1",
            "ldr r0, [fp, -0x54]",
            "ldr r2, [0x00002988]",
            "add r2, pc, r2",
            "mov r1, r2",
            "mov r2, r3",
            "bl sym.imp.sprintf",
            "ldr r3, [0x0000298c]",
            "add r3, pc, r3",
            "mov r0, r3",
            "mov r1, 0",
            "ldr r2, [fp, -0x50]",
            "bl sym.imp.setUciDataModel",
            "ldr r3, [0x00002990]",
            "add r3, pc, r3",
            "mov r0, r3",
            "mov r1, 0",
            "ldr r2, [fp, -0x54]",
            "bl sym.imp.setUciDataModel",
            "ldr r3, [fp, -0x50]",
            "cmp r3, 0",
            "beq 0x2810",
            "ldr r0, [fp, -0x50]",
            "bl sym.imp.free",
            "ldr r3, [fp, -0x54]",
            "cmp r3, 0",
            "beq 0x2824",
            "ldr r0, [fp, -0x54]",
            "bl sym.imp.free",
            "ldr r3, [0x00002994]",
            "add r3, pc, r3",
            "mov r0, r3",
            "bl sym.imp.system",
            "ldr r3, [0x00002998]",
            "add r3, pc, r3",
            "mov r0, r3",
            "bl sym.imp.uci_apply_cmd",
            "ldr r3, [0x0000299c]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r3, [0x000029a0]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r3, [0x000029a4]",
            "add r3, pc, r3",
            "mov r2, r3",
            "movw r3, 0x192",
            "bl sym.imp.debugMessage",
            "sub sp, fp, 4",
            "pop {fp, pc}"
        ]
    },
    "sym.imp.debugMessage": {
        "function_address": "0x0000094c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 20, 20",
            "ldr pc, [ip, 0x930]!"
        ]
    },
    "sym.imp.to_string_with_enum_icmp_respond_to_ping_interface": {
        "function_address": "0x000008d4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 20, 20",
            "ldr pc, [ip, 0x980]!"
        ]
    },
    "sym.imp.setUciDataModel": {
        "function_address": "0x000009e8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 20, 20",
            "ldr pc, [ip, sym.imp.__cxa_finalize]!"
        ]
    },
    "sym.imp.calloc": {
        "function_address": "0x000008ec",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 20, 20",
            "ldr pc, [ip, sym.imp.to_enum_icmp_respond_to_ping_interface_from]!"
        ]
    },
    "sym.imp.getDataModel": {
        "function_address": "0x000009dc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 20, 20",
            "ldr pc, [ip, 0x8d0]!"
        ]
    },
    "sym.imp.free": {
        "function_address": "0x00000904",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 20, 20",
            "ldr pc, [ip, 0x960]!"
        ]
    },
    "sym.imp.sprintf": {
        "function_address": "0x000009d0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 20, 20",
            "ldr pc, [ip, 0x8d8]!"
        ]
    },
    "sym.imp.system": {
        "function_address": "0x00000934",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 20, 20",
            "ldr pc, [ip, sym.imp.uci_apply_cmd]!"
        ]
    },
    "sym.imp.atoi": {
        "function_address": "0x00000964",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 20, 20",
            "ldr pc, [ip, 0x920]!"
        ]
    },
    "sym.imp.malloc": {
        "function_address": "0x00000a00",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 20, 20",
            "ldr pc, [ip, 0x8b8]!"
        ]
    },
    "sym.imp.to_string_with_enum_protocol": {
        "function_address": "0x00000910",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 20, 20",
            "ldr pc, [ip, sym.imp.create_struct_filter_rule_element_filter_rule]!"
        ]
    },
    "sym.imp.memset": {
        "function_address": "0x0000091c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 20, 20",
            "ldr pc, [ip, 0x950]!"
        ]
    },
    "sym.imp.strcmp": {
        "function_address": "0x00000a0c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 20, 20",
            "ldr pc, [ip, 0x8b0]!"
        ]
    },
    "sym.imp.uci_apply_cmd": {
        "function_address": "0x00000940",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 20, 20",
            "ldr pc, [ip, 0x938]!"
        ]
    },
    "sym.getConfig": {
        "function_address": "0x000029a8",
        "instructions": [
            "push {r4, fp, lr}",
            "add fp, sp, 8",
            "sub sp, sp, 0x5c",
            "str r0, [fp, -0x58]",
            "str r1, [fp, -0x5c]",
            "ldr r3, [0x000038c8]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r3, [0x000038cc]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r3, [0x000038d0]",
            "add r3, pc, r3",
            "mov r2, r3",
            "movw r3, 0x1a2",
            "bl sym.imp.debugMessage",
            "mov r0, 0x100",
            "mov r1, 1",
            "bl sym.imp.calloc",
            "mov r3, r0",
            "str r3, [fp, -0x1c]",
            "mov r0, 0x100",
            "mov r1, 1",
            "bl sym.imp.calloc",
            "mov r3, r0",
            "str r3, [fp, -0x20]",
            "mov r0, 0x100",
            "mov r1, 1",
            "bl sym.imp.calloc",
            "mov r3, r0",
            "str r3, [fp, -0x24]",
            "mov r0, 0x100",
            "mov r1, 1",
            "bl sym.imp.calloc",
            "mov r3, r0",
            "str r3, [fp, -0x28]",
            "mov r0, 0x100",
            "mov r1, 1",
            "bl sym.imp.calloc",
            "mov r3, r0",
            "str r3, [fp, -0x2c]",
            "mov r0, 0x100",
            "bl sym.imp.malloc",
            "mov r3, r0",
            "str r3, [fp, -0x14]",
            "mov r0, 0x100",
            "mov r1, 1",
            "bl sym.imp.calloc",
            "mov r3, r0",
            "str r3, [fp, -0x30]",
            "mov r0, 0x100",
            "mov r1, 1",
            "bl sym.imp.calloc",
            "mov r3, r0",
            "str r3, [fp, -0x34]",
            "mov r0, 0x100",
            "mov r1, 1",
            "bl sym.imp.calloc",
            "mov r3, r0",
            "str r3, [fp, -0x38]",
            "mov r0, 0x100",
            "mov r1, 1",
            "bl sym.imp.calloc",
            "mov r3, r0",
            "str r3, [fp, -0x3c]",
            "mov r0, 0x100",
            "mov r1, 1",
            "bl sym.imp.calloc",
            "mov r3, r0",
            "str r3, [fp, -0x40]",
            "mov r0, 0x100",
            "mov r1, 1",
            "bl sym.imp.calloc",
            "mov r3, r0",
            "str r3, [fp, -0x44]",
            "mov r0, 0x100",
            "mov r1, 1",
            "bl sym.imp.calloc",
            "mov r3, r0",
            "str r3, [fp, -0x48]",
            "mov r0, 0x100",
            "mov r1, 1",
            "bl sym.imp.calloc",
            "mov r3, r0",
            "str r3, [fp, -0x4c]",
            "mov r0, 0x100",
            "mov r1, 1",
            "bl sym.imp.calloc",
            "mov r3, r0",
            "str r3, [fp, -0x50]",
            "mov r0, 0x100",
            "mov r1, 1",
            "bl sym.imp.calloc",
            "mov r3, r0",
            "str r3, [fp, -0x54]",
            "ldr r3, [fp, -0x1c]",
            "ldr r2, [0x000038d4]",
            "add r2, pc, r2",
            "mov r0, r2",
            "mov r1, r3",
            "bl sym.imp.getDataModel",
            "mov r3, r0",
            "cmp r3, 0",
            "beq 0x2b78",
            "ldr r3, [0x000038d8]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r3, [0x000038dc]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r3, [0x000038e0]",
            "add r3, pc, r3",
            "mov r2, r3",
            "mov r3, 0x1b8",
            "bl sym.imp.debugMessage",
            "b 0x3af4",
            "ldr r3, [fp, -0x20]",
            "ldr r2, [0x000038e4]",
            "add r2, pc, r2",
            "mov r0, r2",
            "mov r1, r3",
            "bl sym.imp.getDataModel",
            "mov r3, r0",
            "cmp r3, 0",
            "beq 0x2bcc",
            "ldr r3, [0x000038e8]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r3, [0x000038ec]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r3, [0x000038f0]",
            "add r3, pc, r3",
            "mov r2, r3",
            "mov r3, 0x1bc",
            "bl sym.imp.debugMessage",
            "b 0x3af4",
            "ldr r3, [fp, -0x24]",
            "ldr r2, [0x000038f4]",
            "add r2, pc, r2",
            "mov r0, r2",
            "mov r1, r3",
            "bl sym.imp.getDataModel",
            "mov r3, r0",
            "cmp r3, 0",
            "beq 0x2c20",
            "ldr r3, [0x000038f8]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r3, [0x000038fc]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r3, [0x00003900]",
            "add r3, pc, r3",
            "mov r2, r3",
            "mov r3, 0x1c0",
            "bl sym.imp.debugMessage",
            "b 0x3af4",
            "ldr r3, [fp, -0x28]",
            "ldr r2, [0x00003904]",
            "add r2, pc, r2",
            "mov r0, r2",
            "mov r1, r3",
            "bl sym.imp.getDataModel",
            "mov r3, r0",
            "cmp r3, 0",
            "beq 0x2c74",
            "ldr r3, [0x00003908]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r3, [0x0000390c]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r3, [0x00003910]",
            "add r3, pc, r3",
            "mov r2, r3",
            "mov r3, 0x1c4",
            "bl sym.imp.debugMessage",
            "b 0x3af4",
            "ldr r3, [fp, -0x2c]",
            "ldr r2, [0x00003914]",
            "add r2, pc, r2",
            "mov r0, r2",
            "mov r1, r3",
            "bl sym.imp.getDataModel",
            "mov r3, r0",
            "cmp r3, 0",
            "beq 0x2cc8",
            "ldr r3, [0x00003918]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r3, [0x0000391c]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r3, [0x00003920]",
            "add r3, pc, r3",
            "mov r2, r3",
            "mov r3, 0x1c8",
            "bl sym.imp.debugMessage",
            "b 0x3af4",
            "ldr r3, [fp, -0x58]",
            "ldr r4, [r3, 8]",
            "ldr r3, [fp, -0x1c]",
            "mov r0, r3",
            "ldr r3, [0x00003924]",
            "add r3, pc, r3",
            "mov r1, r3",
            "bl sym.imp.strcmp",
            "mov r3, r0",
            "cmp r3, 0",
            "movne r3, 1",
            "moveq r3, 0",
            "uxtb r3, r3",
            "ldr r0, [fp, -0x58]",
            "mov r1, r3",
            "blx r4",
            "mov r2, r0",
            "ldr r3, [fp, -0x5c]",
            "str r2, [r3]",
            "ldr r3, [fp, -0x5c]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x2d60",
            "ldr r3, [fp, -0x5c]",
            "ldr r3, [r3]",
            "str r3, [sp]",
            "ldr r3, [0x00003928]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r3, [0x0000392c]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r3, [0x00003930]",
            "add r3, pc, r3",
            "mov r2, r3",
            "movw r3, 0x1cf",
            "bl sym.imp.debugMessage",
            "b 0x3af4",
            "ldr r3, [fp, -0x58]",
            "ldr r4, [r3, 0x14]",
            "ldr r3, [fp, -0x24]",
            "mov r0, r3",
            "ldr r1, [fp, -0x5c]",
            "bl sym.imp.to_enum_icmp_respond_to_ping_interface_from",
            "mov r3, r0",
            "ldr r0, [fp, -0x58]",
            "mov r1, r3",
            "blx r4",
            "mov r2, r0",
            "ldr r3, [fp, -0x5c]",
            "str r2, [r3]",
            "ldr r3, [fp, -0x5c]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x2de0",
            "ldr r3, [fp, -0x5c]",
            "ldr r3, [r3]",
            "str r3, [sp]",
            "ldr r3, [0x00003934]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r3, [0x00003938]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r3, [0x0000393c]",
            "add r3, pc, r3",
            "mov r2, r3",
            "movw r3, 0x1d5",
            "bl sym.imp.debugMessage",
            "b 0x3af4",
            "ldr r3, [fp, -0x58]",
            "ldr r4, [r3, 0x34]",
            "ldr r3, [fp, -0x28]",
            "mov r0, r3",
            "mov r1, 1",
            "bl sym.imp.get_bool_from_string",
            "mov r3, r0",
            "ldr r0, [fp, -0x58]",
            "mov r1, r3",
            "blx r4",
            "mov r2, r0",
            "ldr r3, [fp, -0x5c]",
            "str r2, [r3]",
            "ldr r3, [fp, -0x5c]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x2e60",
            "ldr r3, [fp, -0x5c]",
            "ldr r3, [r3]",
            "str r3, [sp]",
            "ldr r3, [0x00003940]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r3, [0x00003944]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r3, [0x00003948]",
            "add r3, pc, r3",
            "mov r2, r3",
            "movw r3, 0x1db",
            "bl sym.imp.debugMessage",
            "b 0x3af4",
            "ldr r3, [fp, -0x58]",
            "ldr r4, [r3, 0x20]",
            "ldr r3, [fp, -0x2c]",
            "mov r0, r3",
            "mov r1, 1",
            "bl sym.imp.get_bool_from_string",
            "mov r3, r0",
            "ldr r0, [fp, -0x58]",
            "mov r1, r3",
            "blx r4",
            "mov r2, r0",
            "ldr r3, [fp, -0x5c]",
            "str r2, [r3]",
            "ldr r3, [fp, -0x5c]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x2ee0",
            "ldr r3, [fp, -0x5c]",
            "ldr r3, [r3]",
            "str r3, [sp]",
            "ldr r3, [0x0000394c]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r3, [0x00003950]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r3, [0x00003954]",
            "add r3, pc, r3",
            "mov r2, r3",
            "mov r3, 0x1e0",
            "bl sym.imp.debugMessage",
            "b 0x3af4",
            "mov r3, 1",
            "str r3, [fp, -0x10]",
            "b 0x3aac",
            "mov r0, 0",
            "mov r1, 0",
            "ldr r2, [fp, -0x5c]",
            "bl sym.imp.create_struct_filter_rule_element_filter_rule",
            "str r0, [fp, -0x18]",
            "ldr r3, [fp, -0x18]",
            "cmp r3, 0",
            "bne 0x2f48",
            "ldr r3, [fp, -0x5c]",
            "ldr r3, [r3]",
            "str r3, [sp]",
            "ldr r3, [0x00003958]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r3, [0x0000395c]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r3, [0x00003960]",
            "add r3, pc, r3",
            "mov r2, r3",
            "mov r3, 0x1ec",
            "bl sym.imp.debugMessage",
            "b 0x3af4",
            "ldr r3, [fp, -0x30]",
            "mov r0, r3",
            "ldr r3, [0x00003964]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r2, [fp, -0x10]",
            "bl sym.imp.sprintf",
            "ldr r0, [fp, -0x14]",
            "ldr r3, [0x00003968]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r2, [fp, -0x10]",
            "bl sym.imp.sprintf",
            "ldr r0, [fp, -0x14]",
            "mov r1, 0",
            "mov r2, 0x100",
            "bl sym.imp.memset",
            "ldr r0, [fp, -0x14]",
            "ldr r3, [0x0000396c]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r2, [fp, -0x10]",
            "bl sym.imp.sprintf",
            "ldr r3, [fp, -0x34]",
            "ldr r0, [fp, -0x14]",
            "mov r1, r3",
            "bl sym.imp.getDataModel",
            "mov r3, r0",
            "cmp r3, 0",
            "beq 0x2ff8",
            "ldr r3, [fp, -0x10]",
            "str r3, [sp]",
            "ldr r3, [0x00003970]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r3, [0x00003974]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r3, [0x00003978]",
            "add r3, pc, r3",
            "mov r2, r3",
            "movw r3, 0x1f7",
            "bl sym.imp.debugMessage",
            "b 0x3af4",
            "ldr r0, [fp, -0x14]",
            "mov r1, 0",
            "mov r2, 0x100",
            "bl sym.imp.memset",
            "ldr r0, [fp, -0x14]",
            "ldr r3, [0x0000397c]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r2, [fp, -0x10]",
            "bl sym.imp.sprintf",
            "ldr r3, [fp, -0x38]",
            "ldr r0, [fp, -0x14]",
            "mov r1, r3",
            "bl sym.imp.getDataModel",
            "mov r3, r0",
            "cmp r3, 0",
            "beq 0x3074",
            "ldr r3, [fp, -0x10]",
            "str r3, [sp]",
            "ldr r3, [0x00003980]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r3, [0x00003984]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r3, [0x00003988]",
            "add r3, pc, r3",
            "mov r2, r3",
            "movw r3, 0x1fd",
            "bl sym.imp.debugMessage",
            "b 0x3af4",
            "ldr r0, [fp, -0x14]",
            "mov r1, 0",
            "mov r2, 0x100",
            "bl sym.imp.memset",
            "ldr r0, [fp, -0x14]",
            "ldr r3, [0x0000398c]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r2, [fp, -0x10]",
            "bl sym.imp.sprintf",
            "ldr r3, [fp, -0x3c]",
            "ldr r0, [fp, -0x14]",
            "mov r1, r3",
            "bl sym.imp.getDataModel",
            "mov r3, r0",
            "cmp r3, 0",
            "beq 0x30f0",
            "ldr r3, [fp, -0x10]",
            "str r3, [sp]",
            "ldr r3, [0x00003990]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r3, [0x00003994]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r3, [0x00003998]",
            "add r3, pc, r3",
            "mov r2, r3",
            "movw r3, 0x203",
            "bl sym.imp.debugMessage",
            "b 0x3af4",
            "ldr r0, [fp, -0x14]",
            "mov r1, 0",
            "mov r2, 0x100",
            "bl sym.imp.memset",
            "ldr r0, [fp, -0x14]",
            "ldr r3, [0x0000399c]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r2, [fp, -0x10]",
            "bl sym.imp.sprintf",
            "ldr r3, [fp, -0x40]",
            "ldr r0, [fp, -0x14]",
            "mov r1, r3",
            "bl sym.imp.getDataModel",
            "mov r3, r0",
            "cmp r3, 0",
            "beq 0x316c",
            "ldr r3, [fp, -0x10]",
            "str r3, [sp]",
            "ldr r3, [0x000039a0]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r3, [0x000039a4]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r3, [0x000039a8]",
            "add r3, pc, r3",
            "mov r2, r3",
            "movw r3, 0x209",
            "bl sym.imp.debugMessage",
            "b 0x3af4",
            "ldr r0, [fp, -0x14]",
            "mov r1, 0",
            "mov r2, 0x100",
            "bl sym.imp.memset",
            "ldr r0, [fp, -0x14]",
            "ldr r3, [0x000039ac]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r2, [fp, -0x10]",
            "bl sym.imp.sprintf",
            "ldr r3, [fp, -0x44]",
            "ldr r0, [fp, -0x14]",
            "mov r1, r3",
            "bl sym.imp.getDataModel",
            "mov r3, r0",
            "cmp r3, 0",
            "beq 0x31e8",
            "ldr r3, [fp, -0x10]",
            "str r3, [sp]",
            "ldr r3, [0x000039b0]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r3, [0x000039b4]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r3, [0x000039b8]",
            "add r3, pc, r3",
            "mov r2, r3",
            "movw r3, 0x20f",
            "bl sym.imp.debugMessage",
            "b 0x3af4",
            "ldr r0, [fp, -0x14]",
            "mov r1, 0",
            "mov r2, 0x100",
            "bl sym.imp.memset",
            "ldr r0, [fp, -0x14]",
            "ldr r3, [0x000039bc]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r2, [fp, -0x10]",
            "bl sym.imp.sprintf",
            "ldr r3, [fp, -0x48]",
            "ldr r0, [fp, -0x14]",
            "mov r1, r3",
            "bl sym.imp.getDataModel",
            "mov r3, r0",
            "cmp r3, 0",
            "beq 0x3264",
            "ldr r3, [fp, -0x10]",
            "str r3, [sp]",
            "ldr r3, [0x000039c0]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r3, [0x000039c4]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r3, [0x000039c8]",
            "add r3, pc, r3",
            "mov r2, r3",
            "movw r3, 0x215",
            "bl sym.imp.debugMessage",
            "b 0x3af4",
            "ldr r0, [fp, -0x14]",
            "mov r1, 0",
            "mov r2, 0x100",
            "bl sym.imp.memset",
            "ldr r0, [fp, -0x14]",
            "ldr r3, [0x000039cc]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r2, [fp, -0x10]",
            "bl sym.imp.sprintf",
            "ldr r3, [fp, -0x4c]",
            "ldr r0, [fp, -0x14]",
            "mov r1, r3",
            "bl sym.imp.getDataModel",
            "mov r3, r0",
            "cmp r3, 0",
            "beq 0x32e0",
            "ldr r3, [fp, -0x10]",
            "str r3, [sp]",
            "ldr r3, sym.unblock",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r3, [0x000039d4]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r3, [0x000039d8]",
            "add r3, pc, r3",
            "mov r2, r3",
            "movw r3, 0x21b",
            "bl sym.imp.debugMessage",
            "b 0x3af4",
            "ldr r0, [fp, -0x14]",
            "mov r1, 0",
            "mov r2, 0x100",
            "bl sym.imp.memset",
            "ldr r0, [fp, -0x14]",
            "ldr r3, [0x000039dc]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r2, [fp, -0x10]",
            "bl sym.imp.sprintf",
            "ldr r3, [fp, -0x50]",
            "ldr r0, [fp, -0x14]",
            "mov r1, r3",
            "bl sym.imp.getDataModel",
            "mov r3, r0",
            "cmp r3, 0",
            "beq 0x335c",
            "ldr r3, [fp, -0x10]",
            "str r3, [sp]",
            "ldr r3, [0x000039e0]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r3, sym.imp.malloc",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r3, [0x000039e8]",
            "add r3, pc, r3",
            "mov r2, r3",
            "movw r3, 0x221",
            "bl sym.imp.debugMessage",
            "b 0x3af4",
            "ldr r0, [fp, -0x14]",
            "mov r1, 0",
            "mov r2, 0x100",
            "bl sym.imp.memset",
            "ldr r0, [fp, -0x14]",
            "ldr r3, [0x000039ec]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r2, [fp, -0x10]",
            "bl sym.imp.sprintf",
            "ldr r3, [fp, -0x54]",
            "ldr r0, [fp, -0x14]",
            "mov r1, r3",
            "bl sym.imp.getDataModel",
            "mov r3, r0",
            "cmp r3, 0",
            "beq 0x33d8",
            "ldr r3, [fp, -0x10]",
            "str r3, [sp]",
            "ldr r3, [0x000039f0]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r3, [0x000039f4]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r3, [0x000039f8]",
            "add r3, pc, r3",
            "mov r2, r3",
            "movw r3, 0x227",
            "bl sym.imp.debugMessage",
            "b 0x3af4",
            "ldr r3, [fp, -0x18]",
            "ldr r4, [r3, 8]",
            "ldr r3, [fp, -0x44]",
            "mov r0, r3",
            "ldr r1, [fp, -0x5c]",
            "bl sym.imp.to_enum_protocol_from",
            "mov r3, r0",
            "ldr r0, [fp, -0x18]",
            "mov r1, r3",
            "blx r4",
            "mov r2, r0",
            "ldr r3, [fp, -0x5c]",
            "str r2, [r3]",
            "ldr r3, [fp, -0x5c]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x3458",
            "ldr r3, [fp, -0x5c]",
            "ldr r3, [r3]",
            "str r3, [sp]",
            "ldr r3, [0x000039fc]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r3, sym.imp.free",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r3, [0x00003a04]",
            "add r3, pc, r3",
            "mov r2, r3",
            "movw r3, 0x22e",
            "bl sym.imp.debugMessage",
            "b 0x3af4",
            "ldr r3, [fp, -0x4c]",
            "ldrb r3, [r3]",
            "cmp r3, 0",
            "beq 0x34e8",
            "ldr r3, [fp, -0x18]",
            "ldr r4, [r3, 0x14]",
            "ldr r3, [fp, -0x4c]",
            "mov r0, r3",
            "bl sym.imp.atoi",
            "mov r3, r0",
            "uxth r3, r3",
            "ldr r0, [fp, -0x18]",
            "mov r1, r3",
            "blx r4",
            "mov r2, r0",
            "ldr r3, [fp, -0x5c]",
            "str r2, [r3]",
            "ldr r3, [fp, -0x5c]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x34e8",
            "ldr r3, [fp, -0x5c]",
            "ldr r3, [r3]",
            "str r3, [sp]",
            "ldr r3, [0x00003a08]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r3, [0x00003a0c]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r3, [0x00003a10]",
            "add r3, pc, r3",
            "mov r2, r3",
            "movw r3, 0x235",
            "bl sym.imp.debugMessage",
            "b 0x3af4",
            "ldr r3, [fp, -0x18]",
            "ldr r3, [r3, 0x20]",
            "ldr r2, [fp, -0x3c]",
            "ldr r0, [fp, -0x18]",
            "mov r1, r2",
            "blx r3",
            "mov r2, r0",
            "ldr r3, [fp, -0x5c]",
            "str r2, [r3]",
            "ldr r3, [fp, -0x5c]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x3558",
            "ldr r3, [fp, -0x5c]",
            "ldr r3, [r3]",
            "str r3, [sp]",
            "ldr r3, [0x00003a14]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r3, [0x00003a18]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r3, [0x00003a1c]",
            "add r3, pc, r3",
            "mov r2, r3",
            "movw r3, 0x23b",
            "bl sym.imp.debugMessage",
            "b 0x3af4",
            "ldr r3, [fp, -0x50]",
            "ldrb r3, [r3]",
            "cmp r3, 0",
            "beq 0x35e8",
            "ldr r3, [fp, -0x18]",
            "ldr r4, [r3, 0x2c]",
            "ldr r3, [fp, -0x50]",
            "mov r0, r3",
            "bl sym.imp.atoi",
            "mov r3, r0",
            "uxth r3, r3",
            "ldr r0, [fp, -0x18]",
            "mov r1, r3",
            "blx r4",
            "mov r2, r0",
            "ldr r3, [fp, -0x5c]",
            "str r2, [r3]",
            "ldr r3, [fp, -0x5c]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x35e8",
            "ldr r3, [fp, -0x5c]",
            "ldr r3, [r3]",
            "str r3, [sp]",
            "ldr r3, [0x00003a20]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r3, [0x00003a24]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r3, [0x00003a28]",
            "add r3, pc, r3",
            "mov r2, r3",
            "movw r3, 0x241",
            "bl sym.imp.debugMessage",
            "b 0x3af4",
            "ldr r3, [fp, -0x18]",
            "ldr r3, [r3, 0x38]",
            "ldr r2, [fp, -0x30]",
            "ldr r0, [fp, -0x18]",
            "mov r1, r2",
            "blx r3",
            "mov r2, r0",
            "ldr r3, [fp, -0x5c]",
            "str r2, [r3]",
            "ldr r3, [fp, -0x5c]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x3658",
            "ldr r3, [fp, -0x5c]",
            "ldr r3, [r3]",
            "str r3, [sp]",
            "ldr r3, [0x00003a2c]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r3, [0x00003a30]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r3, [0x00003a34]",
            "add r3, pc, r3",
            "mov r2, r3",
            "movw r3, 0x247",
            "bl sym.imp.debugMessage",
            "b 0x3af4",
            "ldr r3, [fp, -0x54]",
            "ldrb r3, [r3]",
            "cmp r3, 0",
            "beq 0x36e8",
            "ldr r3, [fp, -0x18]",
            "ldr r4, [r3, 0x44]",
            "ldr r3, [fp, -0x54]",
            "mov r0, r3",
            "bl sym.imp.atoi",
            "mov r3, r0",
            "uxth r3, r3",
            "ldr r0, [fp, -0x18]",
            "mov r1, r3",
            "blx r4",
            "mov r2, r0",
            "ldr r3, [fp, -0x5c]",
            "str r2, [r3]",
            "ldr r3, [fp, -0x5c]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x36e8",
            "ldr r3, [fp, -0x5c]",
            "ldr r3, [r3]",
            "str r3, [sp]",
            "ldr r3, [0x00003a38]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r3, [0x00003a3c]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r3, [0x00003a40]",
            "add r3, pc, r3",
            "mov r2, r3",
            "movw r3, 0x24d",
            "bl sym.imp.debugMessage",
            "b 0x3af4",
            "ldr r3, [fp, -0x18]",
            "ldr r3, [r3, 0x50]",
            "ldr r2, [fp, -0x40]",
            "ldr r0, [fp, -0x18]",
            "mov r1, r2",
            "blx r3",
            "mov r2, r0",
            "ldr r3, [fp, -0x5c]",
            "str r2, [r3]",
            "ldr r3, [fp, -0x5c]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x3758",
            "ldr r3, [fp, -0x5c]",
            "ldr r3, [r3]",
            "str r3, [sp]",
            "ldr r3, [0x00003a44]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r3, [0x00003a48]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r3, [0x00003a4c]",
            "add r3, pc, r3",
            "mov r2, r3",
            "movw r3, 0x253",
            "bl sym.imp.debugMessage",
            "b 0x3af4",
            "ldr r3, [fp, -0x18]",
            "ldr r3, [r3, 0x5c]",
            "ldr r2, [fp, -0x34]",
            "ldr r0, [fp, -0x18]",
            "mov r1, r2",
            "blx r3",
            "mov r2, r0",
            "ldr r3, [fp, -0x5c]",
            "str r2, [r3]",
            "ldr r3, [fp, -0x5c]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x37c8",
            "ldr r3, [fp, -0x5c]",
            "ldr r3, [r3]",
            "str r3, [sp]",
            "ldr r3, [0x00003a50]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r3, [0x00003a54]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r3, [0x00003a58]",
            "add r3, pc, r3",
            "mov r2, r3",
            "mov r3, 0x258",
            "bl sym.imp.debugMessage",
            "b 0x3af4",
            "ldr r3, [fp, -0x48]",
            "ldrb r3, [r3]",
            "cmp r3, 0",
            "beq 0x3858",
            "ldr r3, [fp, -0x18]",
            "ldr r4, [r3, 0x68]",
            "ldr r3, [fp, -0x48]",
            "mov r0, r3",
            "bl sym.imp.atoi",
            "mov r3, r0",
            "uxth r3, r3",
            "ldr r0, [fp, -0x18]",
            "mov r1, r3",
            "blx r4",
            "mov r2, r0",
            "ldr r3, [fp, -0x5c]",
            "str r2, [r3]",
            "ldr r3, [fp, -0x5c]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x3858",
            "ldr r3, [fp, -0x5c]",
            "ldr r3, [r3]",
            "str r3, [sp]",
            "ldr r3, [0x00003a5c]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r3, [0x00003a60]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r3, [0x00003a64]",
            "add r3, pc, r3",
            "mov r2, r3",
            "movw r3, 0x25e",
            "bl sym.imp.debugMessage",
            "b 0x3af4",
            "ldr r3, [fp, -0x18]",
            "ldr r3, [r3, 0x74]",
            "ldr r2, [fp, -0x38]",
            "ldr r0, [fp, -0x18]",
            "mov r1, r2",
            "blx r3",
            "mov r2, r0",
            "ldr r3, [fp, -0x5c]",
            "str r2, [r3]",
            "ldr r3, [fp, -0x5c]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x3a80",
            "ldr r3, [fp, -0x5c]",
            "ldr r3, [r3]",
            "str r3, [sp]",
            "ldr r3, [0x00003a68]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r3, [0x00003a6c]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r3, [0x00003a70]",
            "add r3, pc, r3",
            "mov r2, r3",
            "mov r3, 0x264",
            "bl sym.imp.debugMessage",
            "b 0x3af4",
            "ldr r3, [fp, -0x58]",
            "ldr r3, [r3, 0x2c]",
            "ldr r3, [r3, 0xc]",
            "ldr r2, [fp, -0x58]",
            "ldr r2, [r2, 0x2c]",
            "mov r0, r2",
            "ldr r1, [fp, -0x18]",
            "blx r3",
            "ldr r3, [fp, -0x10]",
            "add r3, r3, 1",
            "str r3, [fp, -0x10]",
            "ldr r3, [fp, -0x20]",
            "mov r0, r3",
            "bl sym.imp.atoi",
            "mov r2, r0",
            "ldr r3, [fp, -0x10]",
            "cmp r2, r3",
            "bge 0x2eec",
            "ldr r3, [0x00003a74]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r3, [0x00003a78]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r3, [0x00003a7c]",
            "add r3, pc, r3",
            "mov r2, r3",
            "mov r3, 0x26c",
            "bl sym.imp.debugMessage",
            "sub r3, fp, 0x30",
            "mov r0, r3",
            "bl sym.imp.freePoint",
            "sub r3, fp, 0x34",
            "mov r0, r3",
            "bl sym.imp.freePoint",
            "sub r3, fp, 0x38",
            "mov r0, r3",
            "bl sym.imp.freePoint",
            "sub r3, fp, 0x3c",
            "mov r0, r3",
            "bl sym.imp.freePoint",
            "sub r3, fp, 0x40",
            "mov r0, r3",
            "bl sym.imp.freePoint",
            "sub r3, fp, 0x44",
            "mov r0, r3",
            "bl sym.imp.freePoint",
            "sub r3, fp, 0x48",
            "mov r0, r3",
            "bl sym.imp.freePoint",
            "sub r3, fp, 0x4c",
            "mov r0, r3",
            "bl sym.imp.freePoint",
            "sub r3, fp, 0x50",
            "mov r0, r3",
            "bl sym.imp.freePoint",
            "sub r3, fp, 0x54",
            "mov r0, r3",
            "bl sym.imp.freePoint",
            "sub r3, fp, 0x1c",
            "mov r0, r3",
            "bl sym.imp.freePoint",
            "sub r3, fp, 0x20",
            "mov r0, r3",
            "bl sym.imp.freePoint",
            "sub r3, fp, 0x24",
            "mov r0, r3",
            "bl sym.imp.freePoint",
            "sub r3, fp, 0x28",
            "mov r0, r3",
            "bl sym.imp.freePoint",
            "sub r3, fp, 0x2c",
            "mov r0, r3",
            "bl sym.imp.freePoint",
            "sub sp, fp, 8",
            "pop {r4, fp, pc}"
        ]
    },
    "sym.imp.to_enum_icmp_respond_to_ping_interface_from": {
        "function_address": "0x00000970",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 20, 20",
            "ldr pc, [ip, 0x918]!"
        ]
    },
    "sym.imp.get_bool_from_string": {
        "function_address": "0x00000994",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 20, 20",
            "ldr pc, [ip, 0x900]!"
        ]
    },
    "sym.imp.create_struct_filter_rule_element_filter_rule": {
        "function_address": "0x00000958",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 20, 20",
            "ldr pc, [ip, fcn.00000928]!"
        ]
    },
    "sym.imp.to_enum_protocol_from": {
        "function_address": "0x000008e0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 20, 20",
            "ldr pc, [ip, 0x978]!"
        ]
    },
    "sym.imp.freePoint": {
        "function_address": "0x000009a0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 20, 20",
            "ldr pc, [ip, fcn.000008f8]!"
        ]
    },
    "sym.Ipv4Firewall": {
        "function_address": "0x00003bb0",
        "instructions": [
            "push {fp, lr}",
            "add fp, sp, 4",
            "sub sp, sp, 0x18",
            "str r0, [fp, -8]",
            "str r1, [fp, -0xc]",
            "str r2, [fp, -0x10]",
            "str r3, [fp, -0x14]",
            "ldr r0, [fp, -8]",
            "bl sym.imp.to_string_with_enum_operation_type",
            "mov r3, r0",
            "str r3, [sp]",
            "ldr r3, [0x00003ca0]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r3, [0x00003ca4]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r3, [0x00003ca8]",
            "add r3, pc, r3",
            "mov r2, r3",
            "movw r3, 0x28f",
            "bl sym.imp.debugMessage",
            "ldr r3, [fp, -8]",
            "cmp r3, 0",
            "bne 0x3c30",
            "ldr r3, [fp, -0xc]",
            "cmp r3, 0x34",
            "bne 0x3c98",
            "ldr r0, [fp, -0x10]",
            "ldr r1, [fp, -0x14]",
            "bl fcn.00000928",
            "b 0x3c98",
            "ldr r3, [fp, -8]",
            "cmp r3, 1",
            "bne 0x3c58",
            "ldr r3, [fp, -0xc]",
            "cmp r3, 0x34",
            "bne 0x3c98",
            "ldr r0, [fp, -0x10]",
            "ldr r1, [fp, -0x14]",
            "bl fcn.000008f8",
            "b 0x3c98",
            "ldr r3, [fp, -8]",
            "cmp r3, 2",
            "bne 0x3c98",
            "ldr r3, [fp, -0xc]",
            "cmp r3, 0x35",
            "bne 0x3c80",
            "ldr r0, [fp, -0x10]",
            "ldr r1, [fp, -0x14]",
            "bl fcn.000009f4",
            "b 0x3c98",
            "ldr r3, [fp, -0xc]",
            "cmp r3, 0x36",
            "bne 0x3c98",
            "ldr r0, [fp, -0x10]",
            "ldr r1, [fp, -0x14]",
            "bl fcn.000009ac",
            "sub sp, fp, 4",
            "pop {fp, pc}"
        ]
    },
    "sym.imp.to_string_with_enum_operation_type": {
        "function_address": "0x000009c4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 20, 20",
            "ldr pc, [ip, sym.imp.to_enum_protocol_from]!"
        ]
    },
    "fcn.00000928": {
        "function_address": "0x00000928",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 20, 20",
            "ldr pc, [ip, 0x948]!"
        ]
    },
    "fcn.000008f8": {
        "function_address": "0x000008f8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 20, 20",
            "ldr pc, [ip, 0x968]!"
        ]
    },
    "fcn.000009f4": {
        "function_address": "0x000009f4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 20, 20",
            "ldr pc, [ip, 0x8c0]!"
        ]
    },
    "fcn.000009ac": {
        "function_address": "0x000009ac",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 20, 20",
            "ldr pc, [ip, 0x8f0]!"
        ]
    },
    "sym.block": {
        "function_address": "0x00000bfc",
        "instructions": [
            "push {r4, fp, lr}",
            "add fp, sp, 8",
            "sub sp, sp, 0x24",
            "str r0, [fp, -0x28]",
            "str r1, [fp, -0x2c]",
            "ldr r3, [0x0000165c]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r3, [0x00001660]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r3, [0x00001664]",
            "add r3, pc, r3",
            "mov r2, r3",
            "mov r3, 0x24",
            "bl sym.imp.debugMessage",
            "mov r0, 0x100",
            "mov r1, 1",
            "bl sym.imp.calloc",
            "mov r3, r0",
            "str r3, [fp, -0x10]",
            "mov r0, 0x100",
            "mov r1, 1",
            "bl sym.imp.calloc",
            "mov r3, r0",
            "str r3, [fp, -0x14]",
            "mov r0, 0x100",
            "mov r1, 1",
            "bl sym.imp.calloc",
            "mov r3, r0",
            "str r3, [fp, -0x18]",
            "mov r0, 0x100",
            "mov r1, 1",
            "bl sym.imp.calloc",
            "mov r3, r0",
            "str r3, [fp, -0x1c]",
            "mov r0, 0x100",
            "mov r1, 1",
            "bl sym.imp.calloc",
            "mov r3, r0",
            "str r3, [fp, -0x20]",
            "mov r0, 0x100",
            "mov r1, 1",
            "bl sym.imp.calloc",
            "mov r3, r0",
            "str r3, [fp, -0x24]",
            "ldr r3, [fp, -0x14]",
            "ldr r2, [0x00001668]",
            "add r2, pc, r2",
            "mov r0, r2",
            "mov r1, r3",
            "bl sym.imp.getDataModel",
            "mov r3, r0",
            "cmp r3, 0",
            "beq 0xd08",
            "ldr r3, [0x0000166c]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r3, [0x00001670]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r3, [0x00001674]",
            "add r3, pc, r3",
            "mov r2, r3",
            "mov r3, 0x2e",
            "bl sym.imp.debugMessage",
            "b 0x160c",
            "ldr r3, [fp, -0x18]",
            "ldr r2, [0x00001678]",
            "add r2, pc, r2",
            "mov r0, r2",
            "mov r1, r3",
            "bl sym.imp.getDataModel",
            "mov r3, r0",
            "cmp r3, 0",
            "beq 0xd5c",
            "ldr r3, [0x0000167c]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r3, [0x00001680]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r3, [0x00001684]",
            "add r3, pc, r3",
            "mov r2, r3",
            "mov r3, 0x33",
            "bl sym.imp.debugMessage",
            "b 0x160c",
            "ldr r4, [fp, -0x10]",
            "ldr r3, [fp, -0x18]",
            "mov r0, r3",
            "bl sym.imp.atoi",
            "mov r3, r0",
            "add r3, r3, 3",
            "mov r0, r4",
            "ldr r2, [0x00001688]",
            "add r2, pc, r2",
            "mov r1, r2",
            "mov r2, r3",
            "bl sym.imp.sprintf",
            "ldr r4, [fp, -0x1c]",
            "ldr r3, [fp, -0x14]",
            "mov r0, r3",
            "bl sym.imp.atoi",
            "mov r3, r0",
            "add r3, r3, 1",
            "mov r0, r4",
            "ldr r2, [0x0000168c]",
            "add r2, pc, r2",
            "mov r1, r2",
            "mov r2, r3",
            "bl sym.imp.sprintf",
            "ldr r4, [fp, -0x20]",
            "ldr r3, [fp, -0x14]",
            "mov r0, r3",
            "bl sym.imp.atoi",
            "mov r3, r0",
            "add r3, r3, 1",
            "mov r0, r4",
            "ldr r2, [0x00001690]",
            "add r2, pc, r2",
            "mov r1, r2",
            "mov r2, r3",
            "bl sym.imp.sprintf",
            "ldr r2, [fp, -0x24]",
            "ldr r3, [fp, -0x1c]",
            "mov r0, r2",
            "ldr r2, [0x00001694]",
            "add r2, pc, r2",
            "mov r1, r2",
            "mov r2, r3",
            "bl sym.imp.sprintf",
            "ldr r3, [fp, -0x24]",
            "mov r0, r3",
            "bl sym.imp.system",
            "ldr r3, [0x00001698]",
            "add r3, pc, r3",
            "mov r0, r3",
            "bl sym.imp.system",
            "ldr r3, [fp, -0x1c]",
            "ldr r2, [0x0000169c]",
            "add r2, pc, r2",
            "mov r0, r2",
            "mov r1, r3",
            "ldr r3, [0x000016a0]",
            "add r3, pc, r3",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "ldr r2, [fp, -0x1c]",
            "ldr r3, [fp, -0x1c]",
            "ldr r1, [0x000016a4]",
            "add r1, pc, r1",
            "mov r0, r1",
            "mov r1, r2",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "ldr r3, [fp, -0x1c]",
            "ldr r2, [0x000016a8]",
            "add r2, pc, r2",
            "mov r0, r2",
            "mov r1, r3",
            "ldr r3, [0x000016ac]",
            "add r3, pc, r3",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "ldr r2, [fp, -0x1c]",
            "ldr r3, [fp, -0x20]",
            "ldr r1, [0x000016b0]",
            "add r1, pc, r1",
            "mov r0, r1",
            "mov r1, r2",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "ldr r3, [fp, -0x1c]",
            "ldr r2, [0x000016b4]",
            "add r2, pc, r2",
            "mov r0, r2",
            "mov r1, r3",
            "ldr r3, [0x000016b8]",
            "add r3, pc, r3",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "ldr r3, [fp, -0x1c]",
            "ldr r2, [0x000016bc]",
            "add r2, pc, r2",
            "mov r0, r2",
            "mov r1, r3",
            "ldr r3, [0x000016c0]",
            "add r3, pc, r3",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "ldr r4, [fp, -0x1c]",
            "ldr r3, [fp, -0x28]",
            "ldr r3, [r3, 0xc]",
            "ldr r3, [r3, 0xc]",
            "ldr r2, [fp, -0x28]",
            "ldr r2, [r2, 0xc]",
            "mov r0, r2",
            "blx r3",
            "mov r3, r0",
            "ldr r2, [0x000016c4]",
            "add r2, pc, r2",
            "mov r0, r2",
            "mov r1, r4",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "ldr r3, [fp, -0x1c]",
            "ldr r2, [0x000016c8]",
            "add r2, pc, r2",
            "mov r0, r2",
            "mov r1, r3",
            "ldr r3, [0x000016cc]",
            "add r3, pc, r3",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "ldr r3, [fp, -0x1c]",
            "ldr r2, [0x000016d0]",
            "add r2, pc, r2",
            "mov r0, r2",
            "mov r1, r3",
            "ldr r3, [0x000016d4]",
            "add r3, pc, r3",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "ldr r3, [fp, -0x1c]",
            "ldr r2, [0x000016d8]",
            "add r2, pc, r2",
            "mov r0, r2",
            "mov r1, r3",
            "ldr r3, [0x000016dc]",
            "add r3, pc, r3",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "ldr r3, [fp, -0x1c]",
            "ldr r2, [0x000016e0]",
            "add r2, pc, r2",
            "mov r0, r2",
            "mov r1, r3",
            "ldr r3, [0x000016e4]",
            "add r3, pc, r3",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "ldr r3, [fp, -0x1c]",
            "ldr r2, [0x000016e8]",
            "add r2, pc, r2",
            "mov r0, r2",
            "mov r1, r3",
            "ldr r3, [0x000016ec]",
            "add r3, pc, r3",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "ldr r3, [fp, -0x1c]",
            "ldr r2, [0x000016f0]",
            "add r2, pc, r2",
            "mov r0, r2",
            "mov r1, r3",
            "ldr r3, [0x000016f4]",
            "add r3, pc, r3",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "ldr r3, [fp, -0x1c]",
            "ldr r2, [0x000016f8]",
            "add r2, pc, r2",
            "mov r0, r2",
            "mov r1, r3",
            "ldr r3, [0x000016fc]",
            "add r3, pc, r3",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "ldr r4, [fp, -0x1c]",
            "ldr r3, [fp, -0x14]",
            "mov r0, r3",
            "bl sym.imp.atoi",
            "mov r3, r0",
            "add r3, r3, 2",
            "mov r0, r4",
            "ldr r2, [0x00001700]",
            "add r2, pc, r2",
            "mov r1, r2",
            "mov r2, r3",
            "bl sym.imp.sprintf",
            "ldr r4, [fp, -0x20]",
            "ldr r3, [fp, -0x14]",
            "mov r0, r3",
            "bl sym.imp.atoi",
            "mov r3, r0",
            "add r3, r3, 2",
            "mov r0, r4",
            "ldr r2, [0x00001704]",
            "add r2, pc, r2",
            "mov r1, r2",
            "mov r2, r3",
            "bl sym.imp.sprintf",
            "ldr r2, [fp, -0x24]",
            "ldr r3, [fp, -0x1c]",
            "mov r0, r2",
            "ldr r2, [0x00001708]",
            "add r2, pc, r2",
            "mov r1, r2",
            "mov r2, r3",
            "bl sym.imp.sprintf",
            "ldr r3, [fp, -0x24]",
            "mov r0, r3",
            "bl sym.imp.system",
            "ldr r3, [0x0000170c]",
            "add r3, pc, r3",
            "mov r0, r3",
            "bl sym.imp.system",
            "ldr r3, [fp, -0x1c]",
            "ldr r2, [0x00001710]",
            "add r2, pc, r2",
            "mov r0, r2",
            "mov r1, r3",
            "ldr r3, [0x00001714]",
            "add r3, pc, r3",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "ldr r2, [fp, -0x1c]",
            "ldr r3, [fp, -0x1c]",
            "ldr r1, [0x00001718]",
            "add r1, pc, r1",
            "mov r0, r1",
            "mov r1, r2",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "ldr r3, [fp, -0x1c]",
            "ldr r2, [0x0000171c]",
            "add r2, pc, r2",
            "mov r0, r2",
            "mov r1, r3",
            "ldr r3, [0x00001720]",
            "add r3, pc, r3",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "ldr r2, [fp, -0x1c]",
            "ldr r3, [fp, -0x20]",
            "ldr r1, [0x00001724]",
            "add r1, pc, r1",
            "mov r0, r1",
            "mov r1, r2",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "ldr r3, [fp, -0x1c]",
            "ldr r2, [0x00001728]",
            "add r2, pc, r2",
            "mov r0, r2",
            "mov r1, r3",
            "ldr r3, [0x0000172c]",
            "add r3, pc, r3",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "ldr r3, [fp, -0x1c]",
            "ldr r2, [0x00001730]",
            "add r2, pc, r2",
            "mov r0, r2",
            "mov r1, r3",
            "ldr r3, [0x00001734]",
            "add r3, pc, r3",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "ldr r4, [fp, -0x1c]",
            "ldr r3, [fp, -0x28]",
            "ldr r3, [r3, 0xc]",
            "ldr r3, [r3, 0xc]",
            "ldr r2, [fp, -0x28]",
            "ldr r2, [r2, 0xc]",
            "mov r0, r2",
            "blx r3",
            "mov r3, r0",
            "ldr r2, [0x00001738]",
            "add r2, pc, r2",
            "mov r0, r2",
            "mov r1, r4",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "ldr r3, [fp, -0x1c]",
            "ldr r2, [0x0000173c]",
            "add r2, pc, r2",
            "mov r0, r2",
            "mov r1, r3",
            "ldr r3, [0x00001740]",
            "add r3, pc, r3",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "ldr r3, [fp, -0x1c]",
            "ldr r2, [0x00001744]",
            "add r2, pc, r2",
            "mov r0, r2",
            "mov r1, r3",
            "ldr r3, [0x00001748]",
            "add r3, pc, r3",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "ldr r3, [fp, -0x1c]",
            "ldr r2, [0x0000174c]",
            "add r2, pc, r2",
            "mov r0, r2",
            "mov r1, r3",
            "ldr r3, [0x00001750]",
            "add r3, pc, r3",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "ldr r3, [fp, -0x1c]",
            "ldr r2, [0x00001754]",
            "add r2, pc, r2",
            "mov r0, r2",
            "mov r1, r3",
            "ldr r3, [0x00001758]",
            "add r3, pc, r3",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "ldr r3, [fp, -0x1c]",
            "ldr r2, [0x0000175c]",
            "add r2, pc, r2",
            "mov r0, r2",
            "mov r1, r3",
            "ldr r3, [0x00001760]",
            "add r3, pc, r3",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "ldr r3, [fp, -0x1c]",
            "ldr r2, [0x00001764]",
            "add r2, pc, r2",
            "mov r0, r2",
            "mov r1, r3",
            "ldr r3, [0x00001768]",
            "add r3, pc, r3",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "ldr r3, [fp, -0x1c]",
            "ldr r2, [0x0000176c]",
            "add r2, pc, r2",
            "mov r0, r2",
            "mov r1, r3",
            "ldr r3, [0x00001770]",
            "add r3, pc, r3",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "ldr r4, [fp, -0x1c]",
            "ldr r3, [fp, -0x14]",
            "mov r0, r3",
            "bl sym.imp.atoi",
            "mov r3, r0",
            "add r3, r3, 3",
            "mov r0, r4",
            "ldr r2, [0x00001774]",
            "add r2, pc, r2",
            "mov r1, r2",
            "mov r2, r3",
            "bl sym.imp.sprintf",
            "ldr r4, [fp, -0x20]",
            "ldr r3, [fp, -0x14]",
            "mov r0, r3",
            "bl sym.imp.atoi",
            "mov r3, r0",
            "add r3, r3, 3",
            "mov r0, r4",
            "ldr r2, [0x00001778]",
            "add r2, pc, r2",
            "mov r1, r2",
            "mov r2, r3",
            "bl sym.imp.sprintf",
            "ldr r2, [fp, -0x24]",
            "ldr r3, [fp, -0x1c]",
            "mov r0, r2",
            "ldr r2, [0x0000177c]",
            "add r2, pc, r2",
            "mov r1, r2",
            "mov r2, r3",
            "bl sym.imp.sprintf",
            "ldr r3, [fp, -0x24]",
            "mov r0, r3",
            "bl sym.imp.system",
            "ldr r3, [0x00001780]",
            "add r3, pc, r3",
            "mov r0, r3",
            "bl sym.imp.system",
            "ldr r3, [fp, -0x1c]",
            "ldr r2, [0x00001784]",
            "add r2, pc, r2",
            "mov r0, r2",
            "mov r1, r3",
            "ldr r3, [0x00001788]",
            "add r3, pc, r3",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "ldr r2, [fp, -0x1c]",
            "ldr r3, [fp, -0x1c]",
            "ldr r1, [0x0000178c]",
            "add r1, pc, r1",
            "mov r0, r1",
            "mov r1, r2",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "ldr r3, [fp, -0x1c]",
            "ldr r2, [0x00001790]",
            "add r2, pc, r2",
            "mov r0, r2",
            "mov r1, r3",
            "ldr r3, [0x00001794]",
            "add r3, pc, r3",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "ldr r2, [fp, -0x1c]",
            "ldr r3, [fp, -0x20]",
            "ldr r1, [0x00001798]",
            "add r1, pc, r1",
            "mov r0, r1",
            "mov r1, r2",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "ldr r3, [fp, -0x1c]",
            "ldr r2, [0x0000179c]",
            "add r2, pc, r2",
            "mov r0, r2",
            "mov r1, r3",
            "ldr r3, [0x000017a0]",
            "add r3, pc, r3",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "ldr r3, [fp, -0x1c]",
            "ldr r2, [0x000017a4]",
            "add r2, pc, r2",
            "mov r0, r2",
            "mov r1, r3",
            "ldr r3, [0x000017a8]",
            "add r3, pc, r3",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "ldr r4, [fp, -0x1c]",
            "ldr r3, [fp, -0x28]",
            "ldr r3, [r3, 0xc]",
            "ldr r3, [r3, 0xc]",
            "ldr r2, [fp, -0x28]",
            "ldr r2, [r2, 0xc]",
            "mov r0, r2",
            "blx r3",
            "mov r3, r0",
            "ldr r2, [0x000017ac]",
            "add r2, pc, r2",
            "mov r0, r2",
            "mov r1, r4",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "ldr r3, [fp, -0x1c]",
            "ldr r2, [0x000017b0]",
            "add r2, pc, r2",
            "mov r0, r2",
            "mov r1, r3",
            "ldr r3, [0x000017b4]",
            "add r3, pc, r3",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "ldr r3, [fp, -0x1c]",
            "ldr r2, [0x000017b8]",
            "add r2, pc, r2",
            "mov r0, r2",
            "mov r1, r3",
            "ldr r3, [0x000017bc]",
            "add r3, pc, r3",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "ldr r3, [fp, -0x1c]",
            "ldr r2, [0x000017c0]",
            "add r2, pc, r2",
            "mov r0, r2",
            "mov r1, r3",
            "ldr r3, [0x000017c4]",
            "add r3, pc, r3",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "ldr r3, [fp, -0x1c]",
            "ldr r2, [0x000017c8]",
            "add r2, pc, r2",
            "mov r0, r2",
            "mov r1, r3",
            "ldr r3, [0x000017cc]",
            "add r3, pc, r3",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "ldr r3, [fp, -0x1c]",
            "ldr r2, [0x000017d0]",
            "add r2, pc, r2",
            "mov r0, r2",
            "mov r1, r3",
            "ldr r3, [0x000017d4]",
            "add r3, pc, r3",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "ldr r3, [fp, -0x1c]",
            "ldr r2, [0x000017d8]",
            "add r2, pc, r2",
            "mov r0, r2",
            "mov r1, r3",
            "ldr r3, [0x000017dc]",
            "add r3, pc, r3",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "ldr r3, [fp, -0x1c]",
            "ldr r2, [0x000017e0]",
            "add r2, pc, r2",
            "mov r0, r2",
            "mov r1, r3",
            "ldr r3, [0x000017e4]",
            "add r3, pc, r3",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "ldr r3, [fp, -0x1c]",
            "ldr r2, [0x000017e8]",
            "add r2, pc, r2",
            "mov r0, r2",
            "mov r1, 0",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "ldr r3, [fp, -0x10]",
            "ldr r2, [0x000017ec]",
            "add r2, pc, r2",
            "mov r0, r2",
            "mov r1, 0",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "ldr r3, [0x000017f0]",
            "add r3, pc, r3",
            "mov r0, r3",
            "bl sym.imp.system",
            "ldr r3, [0x000017f4]",
            "add r3, pc, r3",
            "mov r0, r3",
            "bl sym.imp.system",
            "ldr r3, [0x000017f8]",
            "add r3, pc, r3",
            "mov r0, r3",
            "bl sym.imp.system",
            "ldr r3, [0x000017fc]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r3, [0x00001800]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r3, [0x00001804]",
            "add r3, pc, r3",
            "mov r2, r3",
            "mov r3, 0x86",
            "bl sym.imp.debugMessage",
            "sub r3, fp, 0x10",
            "mov r0, r3",
            "bl sym.imp.freePoint",
            "sub r3, fp, 0x14",
            "mov r0, r3",
            "bl sym.imp.freePoint",
            "sub r3, fp, 0x18",
            "mov r0, r3",
            "bl sym.imp.freePoint",
            "sub r3, fp, 0x1c",
            "mov r0, r3",
            "bl sym.imp.freePoint",
            "sub r3, fp, 0x20",
            "mov r0, r3",
            "bl sym.imp.freePoint",
            "sub r3, fp, 0x24",
            "mov r0, r3",
            "bl sym.imp.freePoint",
            "sub sp, fp, 8",
            "pop {r4, fp, pc}"
        ]
    },
    "sym.strcmpMAC": {
        "function_address": "0x00000b88",
        "instructions": [
            "push {fp, lr}",
            "add fp, sp, 4",
            "sub sp, sp, 0x18",
            "str r0, [fp, -0x18]",
            "str r1, [fp, -0x1c]",
            "ldr r0, [fp, -0x18]",
            "bl sym.imp.toUpperCaseString",
            "mov r3, r0",
            "str r3, [fp, -0xc]",
            "ldr r0, [fp, -0x1c]",
            "bl sym.imp.toUpperCaseString",
            "mov r3, r0",
            "str r3, [fp, -0x10]",
            "ldr r2, [fp, -0xc]",
            "ldr r3, [fp, -0x10]",
            "mov r0, r2",
            "mov r1, r3",
            "bl sym.imp.strcmp",
            "str r0, [fp, -8]",
            "sub r3, fp, 0xc",
            "mov r0, r3",
            "bl sym.imp.freePoint",
            "sub r3, fp, 0x10",
            "mov r0, r3",
            "bl sym.imp.freePoint",
            "ldr r3, [fp, -8]",
            "mov r0, r3",
            "sub sp, fp, 4",
            "pop {fp, pc}"
        ]
    },
    "sym.imp.toUpperCaseString": {
        "function_address": "0x000008bc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 20, 20",
            "ldr pc, [ip, 0x990]!"
        ]
    },
    "sym.unblock": {
        "function_address": "0x00001808",
        "instructions": [
            "push {r4, fp, lr}",
            "add fp, sp, 8",
            "sub sp, sp, 0x34",
            "str r0, [fp, -0x30]",
            "str r1, [fp, -0x34]",
            "ldr r3, [0x00001dd8]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r3, [0x00001ddc]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r3, [0x00001de0]",
            "add r3, pc, r3",
            "mov r2, r3",
            "mov r3, 0x9d",
            "bl sym.imp.debugMessage",
            "mov r0, 0x100",
            "mov r1, 1",
            "bl sym.imp.calloc",
            "mov r3, r0",
            "str r3, [fp, -0x1c]",
            "mov r0, 0x100",
            "mov r1, 1",
            "bl sym.imp.calloc",
            "mov r3, r0",
            "str r3, [fp, -0x20]",
            "mov r0, 0x100",
            "bl sym.imp.malloc",
            "mov r3, r0",
            "str r3, [fp, -0x24]",
            "mov r0, 0x100",
            "mov r1, 1",
            "bl sym.imp.calloc",
            "mov r3, r0",
            "str r3, [fp, -0x28]",
            "mov r0, 0x100",
            "mov r1, 1",
            "bl sym.imp.calloc",
            "mov r3, r0",
            "str r3, [fp, -0x2c]",
            "ldr r3, [fp, -0x1c]",
            "ldr r2, [0x00001de4]",
            "add r2, pc, r2",
            "mov r0, r2",
            "mov r1, r3",
            "bl sym.imp.getDataModel",
            "mov r3, r0",
            "cmp r3, 0",
            "beq 0x18fc",
            "ldr r3, [0x00001de8]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r3, [0x00001dec]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r3, [0x00001df0]",
            "add r3, pc, r3",
            "mov r2, r3",
            "mov r3, 0xa5",
            "bl sym.imp.debugMessage",
            "b 0x1d94",
            "ldr r3, [fp, -0x1c]",
            "mov r0, r3",
            "bl sym.imp.atoi",
            "str r0, [fp, -0x14]",
            "mov r3, 1",
            "str r3, [fp, -0x10]",
            "b 0x1ae0",
            "ldr r3, [fp, -0x24]",
            "mov r0, r3",
            "mov r1, 0",
            "mov r2, 0x100",
            "bl sym.imp.memset",
            "ldr r3, [fp, -0x24]",
            "mov r0, r3",
            "ldr r3, [0x00001df4]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r2, [fp, -0x10]",
            "bl sym.imp.sprintf",
            "ldr r2, [fp, -0x24]",
            "ldr r3, [fp, -0x20]",
            "mov r0, r2",
            "mov r1, r3",
            "bl sym.imp.getDataModel",
            "mov r3, r0",
            "cmp r3, 0",
            "beq 0x19a0",
            "ldr r3, [fp, -0x10]",
            "str r3, [sp]",
            "ldr r3, [0x00001df8]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r3, [0x00001dfc]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r3, [0x00001e00]",
            "add r3, pc, r3",
            "mov r2, r3",
            "mov r3, 0xae",
            "bl sym.imp.debugMessage",
            "b 0x1d94",
            "ldr r3, [fp, -0x20]",
            "mov r0, r3",
            "ldr r3, [0x00001e04]",
            "add r3, pc, r3",
            "mov r1, r3",
            "bl sym.imp.strcmp",
            "mov r3, r0",
            "cmp r3, 0",
            "bne 0x1ad4",
            "ldr r3, [fp, -0x24]",
            "mov r0, r3",
            "mov r1, 0",
            "mov r2, 0x100",
            "bl sym.imp.memset",
            "ldr r3, [fp, -0x24]",
            "mov r0, r3",
            "ldr r3, [0x00001e08]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r2, [fp, -0x10]",
            "bl sym.imp.sprintf",
            "ldr r2, [fp, -0x24]",
            "ldr r3, [fp, -0x28]",
            "mov r0, r2",
            "mov r1, r3",
            "bl sym.imp.getDataModel",
            "mov r3, r0",
            "cmp r3, 0",
            "beq 0x1a4c",
            "ldr r3, [fp, -0x10]",
            "str r3, [sp]",
            "ldr r3, [0x00001e0c]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r3, [0x00001e10]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r3, [0x00001e14]",
            "add r3, pc, r3",
            "mov r2, r3",
            "mov r3, 0xb6",
            "bl sym.imp.debugMessage",
            "b 0x1d94",
            "ldr r4, [fp, -0x28]",
            "ldr r3, [fp, -0x30]",
            "ldr r3, [r3, 0xc]",
            "ldr r3, [r3, 0xc]",
            "ldr r2, [fp, -0x30]",
            "ldr r2, [r2, 0xc]",
            "mov r0, r2",
            "blx r3",
            "mov r3, r0",
            "mov r0, r4",
            "mov r1, r3",
            "bl fcn.000009b8",
            "mov r3, r0",
            "cmp r3, 0",
            "bne 0x1ad4",
            "ldr r3, [fp, -0x24]",
            "mov r0, r3",
            "mov r1, 0",
            "mov r2, 0x100",
            "bl sym.imp.memset",
            "ldr r3, [fp, -0x24]",
            "mov r0, r3",
            "ldr r3, [0x00001e18]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r2, [fp, -0x10]",
            "bl sym.imp.sprintf",
            "ldr r3, [fp, -0x24]",
            "mov r0, r3",
            "mov r1, 0",
            "ldr r3, [0x00001e1c]",
            "add r3, pc, r3",
            "mov r2, r3",
            "bl sym.imp.setUciDataModel",
            "ldr r3, [fp, -0x10]",
            "add r3, r3, 1",
            "str r3, [fp, -0x10]",
            "ldr r2, [fp, -0x10]",
            "ldr r3, [fp, -0x14]",
            "cmp r2, r3",
            "ble 0x1918",
            "mov r3, 1",
            "str r3, [fp, -0x10]",
            "b 0x1d28",
            "ldr r3, [fp, -0x24]",
            "mov r0, r3",
            "ldr r3, [0x00001e20]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r2, [fp, -0x10]",
            "bl sym.imp.sprintf",
            "ldr r2, [fp, -0x24]",
            "ldr r3, [fp, -0x2c]",
            "mov r0, r2",
            "mov r1, r3",
            "bl sym.imp.getDataModel",
            "mov r3, r0",
            "cmp r3, 0",
            "beq 0x1b70",
            "ldr r3, [fp, -0x10]",
            "str r3, [sp]",
            "ldr r3, [0x00001e24]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r3, [0x00001e28]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r3, [0x00001e2c]",
            "add r3, pc, r3",
            "mov r2, r3",
            "mov r3, 0xc9",
            "bl sym.imp.debugMessage",
            "b 0x1d94",
            "ldr r3, [fp, -0x2c]",
            "mov r0, r3",
            "ldr r3, [0x00001e30]",
            "add r3, pc, r3",
            "mov r1, r3",
            "bl sym.imp.strcmp",
            "mov r3, r0",
            "cmp r3, 0",
            "bne 0x1d1c",
            "ldr r3, [fp, -0x24]",
            "mov r0, r3",
            "ldr r3, [0x00001e34]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r2, [fp, -0x10]",
            "bl sym.imp.sprintf",
            "ldr r3, [fp, -0x24]",
            "mov r0, r3",
            "bl sym.imp.system",
            "ldr r3, [fp, -0x10]",
            "str r3, [fp, -0x18]",
            "b 0x1c60",
            "ldr r2, [fp, -0x24]",
            "ldr r3, [fp, -0x18]",
            "add r3, r3, 1",
            "mov r0, r2",
            "ldr r2, [0x00001e38]",
            "add r2, pc, r2",
            "mov r1, r2",
            "mov r2, r3",
            "ldr r3, [fp, -0x18]",
            "bl sym.imp.sprintf",
            "ldr r3, [fp, -0x24]",
            "mov r0, r3",
            "bl sym.imp.system",
            "ldr r3, [fp, -0x24]",
            "mov r0, r3",
            "ldr r3, [0x00001e3c]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r2, [fp, -0x18]",
            "ldr r3, [fp, -0x18]",
            "bl sym.imp.sprintf",
            "ldr r3, [fp, -0x24]",
            "mov r0, r3",
            "bl sym.imp.system",
            "ldr r3, [fp, -0x24]",
            "mov r0, r3",
            "ldr r3, [0x00001e40]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r2, [fp, -0x18]",
            "ldr r3, [fp, -0x18]",
            "bl sym.imp.sprintf",
            "ldr r3, [fp, -0x24]",
            "mov r0, r3",
            "bl sym.imp.system",
            "ldr r3, [fp, -0x18]",
            "add r3, r3, 1",
            "str r3, [fp, -0x18]",
            "ldr r2, [fp, -0x18]",
            "ldr r3, [fp, -0x14]",
            "cmp r2, r3",
            "ble 0x1bc8",
            "ldr r2, [fp, -0x24]",
            "ldr r3, [fp, -0x14]",
            "sub r3, r3, 1",
            "mov r0, r2",
            "ldr r2, [0x00001e44]",
            "add r2, pc, r2",
            "mov r1, r2",
            "mov r2, r3",
            "bl sym.imp.sprintf",
            "ldr r3, [fp, -0x24]",
            "mov r0, r3",
            "bl sym.imp.system",
            "ldr r3, [fp, -0x24]",
            "mov r0, r3",
            "ldr r3, [0x00001e48]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r2, [fp, -0x14]",
            "bl sym.imp.sprintf",
            "ldr r3, [fp, -0x24]",
            "mov r0, r3",
            "bl sym.imp.system",
            "ldr r2, [fp, -0x24]",
            "ldr r3, [0x00001e4c]",
            "add r3, pc, r3",
            "mov lr, r2",
            "mov ip, r3",
            "ldm ip!, {r0, r1, r2, r3}",
            "str r0, [lr]",
            "str r1, [lr, 4]",
            "str r2, [lr, 8]",
            "str r3, [lr, 0xc]",
            "ldr r0, [ip]",
            "str r0, [lr, 0x10]",
            "ldr r3, [fp, -0x24]",
            "mov r0, r3",
            "bl sym.imp.system",
            "ldr r3, [fp, -0x14]",
            "sub r3, r3, 1",
            "str r3, [fp, -0x14]",
            "ldr r3, [fp, -0x10]",
            "sub r3, r3, 1",
            "str r3, [fp, -0x10]",
            "ldr r3, [fp, -0x10]",
            "add r3, r3, 1",
            "str r3, [fp, -0x10]",
            "ldr r2, [fp, -0x10]",
            "ldr r3, [fp, -0x14]",
            "cmp r2, r3",
            "ble 0x1afc",
            "ldr r3, [0x00001e50]",
            "add r3, pc, r3",
            "mov r0, r3",
            "bl sym.imp.system",
            "ldr r3, [0x00001e54]",
            "add r3, pc, r3",
            "mov r0, r3",
            "bl sym.imp.system",
            "ldr r3, [0x00001e58]",
            "add r3, pc, r3",
            "mov r0, r3",
            "bl sym.imp.system",
            "ldr r3, [0x00001e5c]",
            "add r3, pc, r3",
            "mov r0, r3",
            "ldr r3, [0x00001e60]",
            "add r3, pc, r3",
            "mov r1, r3",
            "ldr r3, [0x00001e64]",
            "add r3, pc, r3",
            "mov r2, r3",
            "mov r3, 0xe8",
            "bl sym.imp.debugMessage",
            "sub r3, fp, 0x1c",
            "mov r0, r3",
            "bl sym.imp.freePoint",
            "sub r3, fp, 0x20",
            "mov r0, r3",
            "bl sym.imp.freePoint",
            "sub r3, fp, 0x24",
            "mov r0, r3",
            "bl sym.imp.freePoint",
            "sub r3, fp, 0x28",
            "mov r0, r3",
            "bl sym.imp.freePoint",
            "sub r3, fp, 0x2c",
            "mov r0, r3",
            "bl sym.imp.freePoint",
            "sub sp, fp, 8",
            "pop {r4, fp, pc}"
        ]
    },
    "fcn.000009b8": {
        "function_address": "0x000009b8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 20, 20",
            "ldr pc, [ip, 0x8e8]!"
        ]
    },
    "entry.init0": {
        "function_address": "0x00000b40",
        "instructions": [
            "ldr r0, [0x00000aa4]",
            "ldr r1, [0x00000aa8]",
            "add r0, pc, r0",
            "add r1, pc, r1",
            "ldr r3, [0x00000aac]",
            "rsb r1, r0, r1",
            "asr r1, r1, 2",
            "add r3, pc, r3",
            "add r1, r1, r1, lsr 31",
            "asrs r1, r1, 1",
            "bxeq lr",
            "ldr r2, [0x00000ab0]",
            "ldr r3, [r3, r2]",
            "cmp r3, 0",
            "bxeq lr",
            "bx r3",
            "push {r3, lr}",
            "ldr r3, [0x00000b78]",
            "ldr r2, [0x00000b7c]",
            "add r3, pc, r3",
            "ldr r3, [r3, r2]",
            "cmp r3, 0",
            "beq 0xb70",
            "ldr r0, [0x00000b80]",
            "ldr r1, [0x00000b84]",
            "add r0, pc, r0",
            "add r1, pc, r1",
            "bl loc.imp.__register_frame_info",
            "pop {r3, lr}",
            "b 0xa64"
        ]
    },
    "loc.imp.__register_frame_info": {
        "function_address": "0x00000988",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 20, 20",
            "ldr pc, [ip, 0x908]!"
        ]
    },
    "entry.fini0": {
        "function_address": "0x00000ab4",
        "instructions": [
            "ldr r3, [0x00000b24]",
            "push {r4, lr}",
            "add r3, pc, r3",
            "ldr r4, [0x00000b28]",
            "ldrb r3, [r3]",
            "add r4, pc, r4",
            "cmp r3, 0",
            "popne {r4, pc}",
            "ldr r3, [0x00000b2c]",
            "ldr r3, [r4, r3]",
            "cmp r3, 0",
            "beq 0xaf0",
            "ldr r3, [0x00000b30]",
            "ldr r0, [0x00000af0]",
            "bl sym.imp.__cxa_finalize",
            "bl entry0",
            "ldr r3, [0x00000b34]",
            "ldr r3, [r4, r3]",
            "cmp r3, 0",
            "beq 0xb10",
            "ldr r0, [0x00000b38]",
            "add r0, pc, r0",
            "bl loc.imp.__deregister_frame_info",
            "ldr r3, [0x00000b3c]",
            "mov r2, 1",
            "add r3, pc, r3",
            "strb r2, [r3]",
            "pop {r4, pc}"
        ]
    },
    "sym.imp.__cxa_finalize": {
        "function_address": "0x000008c8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 20, 20",
            "ldr pc, [ip, loc.imp.__register_frame_info]!"
        ]
    },
    "r15": {
        "function_address": "0x00000a18",
        "instructions": [
            "ldr r2, [0x00000a54]",
            "ldr r0, [0x00000a58]",
            "add r2, pc, r2",
            "add r0, pc, r0",
            "add r2, r2, 3",
            "ldr r3, [0x00000a5c]",
            "rsb r2, r0, r2",
            "cmp r2, 6",
            "add r3, pc, r3",
            "bxls lr",
            "ldr r2, [0x00000a60]",
            "ldr r3, [r3, r2]",
            "cmp r3, 0",
            "bxeq lr",
            "bx r3"
        ]
    },
    "loc.imp.__deregister_frame_info": {
        "function_address": "0x0000097c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 20, 20",
            "ldr pc, [ip, sym.imp.to_string_with_enum_protocol]!"
        ]
    }
}