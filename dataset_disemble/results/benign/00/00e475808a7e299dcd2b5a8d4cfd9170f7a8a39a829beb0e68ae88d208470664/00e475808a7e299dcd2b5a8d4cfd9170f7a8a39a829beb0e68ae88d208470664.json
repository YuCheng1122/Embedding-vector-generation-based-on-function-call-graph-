{
    "sym.cryptodev_release": {
        "function_address": "0x08000100",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "sub rsp, 0x58",
            "mov rbx, qword [rsi + 0xd0]",
            "mov qword [rbp - 0x40], rsi",
            "test rbx, rbx",
            "je 0x800034a",
            "lea rdi, [rbx + 0xe8]",
            "lea r13, [rbx + 0x38]",
            "call cancel_work_sync",
            "mov rax, qword [rbx + 0x70]",
            "lea rdx, [rbx + 0x70]",
            "cmp rax, rdx",
            "je 0x8000158",
            "mov rcx, qword [rbx + 0x40]",
            "mov rdx, qword [rbx + 0x78]",
            "mov qword [rax + 8], rcx",
            "mov qword [rcx], rax",
            "mov qword [rdx], r13",
            "mov qword [rbx + 0x40], rdx",
            "mov rax, qword [rbx + 0xa8]",
            "lea rdx, [rbx + 0xa8]",
            "cmp rax, rdx",
            "je 0x8000184",
            "mov rcx, qword [rbx + 0x40]",
            "mov rdx, qword [rbx + 0xb0]",
            "mov qword [rax + 8], rcx",
            "mov qword [rcx], rax",
            "mov qword [rdx], r13",
            "mov qword [rbx + 0x40], rdx",
            "mov r10, qword [rbx + 0x38]",
            "cmp r13, r10",
            "mov r11, qword [r10]",
            "je 0x800035b",
            "mov r14, qword gs:[0]",
            "lea rax, [r14 + 0x4b8]",
            "mov r15, r11",
            "xor r12d, r12d",
            "mov qword [rbp - 0x38], rax",
            "nop",
            "cmp dword [0x080001b7], 1",
            "jg 0x8000363",
            "mov rax, qword [r10 + 8]",
            "mov rdx, qword [r10]",
            "movabs rsi, 0xdead000000100100",
            "movabs rdi, 0xdead000000200200",
            "add r12d, 1",
            "mov qword [rdx + 8], rax",
            "mov qword [rax], rdx",
            "mov qword [r10 + 8], rdi",
            "mov qword [r10], rsi",
            "mov rdi, r10",
            "call kfree",
            "mov rax, r15",
            "mov r10, r15",
            "mov r15, qword [r15]",
            "cmp r13, rax",
            "jne 0x80001b0",
            "mov eax, dword [rbx + 0xe0]",
            "cmp eax, r12d",
            "je 0x8000219",
            "mov ecx, dword [0x08000211]",
            "test ecx, ecx",
            "jns current_task",
            "lea rax, [rbx + 0x10]",
            "mov rdi, rax",
            "mov qword [rbp - 0x38], rax",
            "call mutex_lock",
            "mov r15, qword [rbx]",
            "cmp rbx, r15",
            "mov r13, qword [r15]",
            "je mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov qword [rbp - 0x48], rax",
            "add rax, 0x4b8",
            "mov qword [rbp - 0x50], rax",
            "mov rax, qword [rbp - 0x48]",
            "mov qword [rbp - 0x58], rax",
            "mov rax, qword [rbp - 0x50]",
            "mov qword [rbp - 0x60], rax",
            "jmp 0x800026b",
            "mov r13, rax",
            "mov rax, qword [r15 + 8]",
            "lea r14, [r15 + 0x10]",
            "movabs rdx, 0xdead000000200200",
            "mov rdi, r14",
            "mov qword [r13 + 8], rax",
            "mov qword [rax], r13",
            "movabs rax, 0xdead000000100100",
            "mov qword [r15], rax",
            "mov qword [r15 + 8], rdx",
            "call mutex_trylock",
            "test eax, eax",
            "jne 0x80002b6",
            "cmp dword [0x080002a8], 1",
            "jg 0x800040b",
            "mov rdi, r14",
            "call mutex_lock",
            "cmp dword [0x080002bd], 1",
            "jg 0x80003d6",
            "lea rdi, [r15 + 0x38]",
            "call cryptodev_cipher_deinit",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_deinit",
            "cmp dword [0x080002df], 1",
            "jg current_task",
            "mov rdi, qword [r15 + 0xc8]",
            "call kfree",
            "mov rdi, qword [r15 + 0xd0]",
            "call kfree",
            "mov rdi, r14",
            "call mutex_unlock",
            "mov rdi, r15",
            "mov r15, r13",
            "call kfree",
            "cmp rbx, r13",
            "mov rax, qword [r13]",
            "jne 0x8000268",
            "mov rdi, qword [rbp - 0x38]",
            "call mutex_unlock",
            "mov rdi, rbx",
            "call kfree",
            "cmp dword [0x08000335], 1",
            "mov rax, qword [rbp - 0x40]",
            "mov qword [rax + 0xd0], 0",
            "jg current_task",
            "add rsp, 0x58",
            "xor eax, eax",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "xor r12d, r12d",
            "jmp 0x8000200",
            "mov edx, dword [r14 + 0x318]",
            "mov rsi, qword [rbp - 0x38]",
            "mov r9, r10",
            "mov r8d, 0x207",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x68], r10",
            "call printk",
            "mov r10, qword [rbp - 0x68]",
            "jmp 0x80001bd",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [r15 + 0xb8]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x158",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80002e5",
            "mov rax, qword [rbp - 0x58]",
            "mov r9d, dword [r15 + 0xb0]",
            "mov r8d, 0x155",
            "mov rsi, qword [rbp - 0x60]",
            "mov rcx, 0",
            "mov rdi, 0",
            "mov edx, dword [rax + 0x318]",
            "xor eax, eax",
            "call printk",
            "jmp 0x80002c3",
            "mov rax, qword [rbp - 0x48]",
            "mov r9d, dword [r15 + 0xb0]",
            "mov r8d, 0x152",
            "mov rsi, qword [rbp - 0x50]",
            "mov rcx, 0",
            "mov rdi, 0",
            "mov edx, dword [rax + 0x318]",
            "xor eax, eax",
            "call printk",
            "jmp mutex_lock",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r9d, r12d",
            "mov r8d, 0x20f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8000219",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x21d",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800034a"
        ]
    },
    "unk.0x8000135": {
        "function_address": "0x08000135",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "sub rsp, 0x58",
            "mov rbx, qword [rsi + 0xd0]",
            "mov qword [rbp - 0x40], rsi",
            "test rbx, rbx",
            "je 0x800034a",
            "lea rdi, [rbx + 0xe8]",
            "lea r13, [rbx + 0x38]",
            "call cancel_work_sync",
            "mov rax, qword [rbx + 0x70]",
            "lea rdx, [rbx + 0x70]",
            "cmp rax, rdx",
            "je 0x8000158",
            "mov rcx, qword [rbx + 0x40]",
            "mov rdx, qword [rbx + 0x78]",
            "mov qword [rax + 8], rcx",
            "mov qword [rcx], rax",
            "mov qword [rdx], r13",
            "mov qword [rbx + 0x40], rdx",
            "mov rax, qword [rbx + 0xa8]",
            "lea rdx, [rbx + 0xa8]",
            "cmp rax, rdx",
            "je 0x8000184",
            "mov rcx, qword [rbx + 0x40]",
            "mov rdx, qword [rbx + 0xb0]",
            "mov qword [rax + 8], rcx",
            "mov qword [rcx], rax",
            "mov qword [rdx], r13",
            "mov qword [rbx + 0x40], rdx",
            "mov r10, qword [rbx + 0x38]",
            "cmp r13, r10",
            "mov r11, qword [r10]",
            "je 0x800035b",
            "mov r14, qword gs:[0]",
            "lea rax, [r14 + 0x4b8]",
            "mov r15, r11",
            "xor r12d, r12d",
            "mov qword [rbp - 0x38], rax",
            "nop",
            "cmp dword [0x080001b7], 1",
            "jg 0x8000363",
            "mov rax, qword [r10 + 8]",
            "mov rdx, qword [r10]",
            "movabs rsi, 0xdead000000100100",
            "movabs rdi, 0xdead000000200200",
            "add r12d, 1",
            "mov qword [rdx + 8], rax",
            "mov qword [rax], rdx",
            "mov qword [r10 + 8], rdi",
            "mov qword [r10], rsi",
            "mov rdi, r10",
            "call kfree",
            "mov rax, r15",
            "mov r10, r15",
            "mov r15, qword [r15]",
            "cmp r13, rax",
            "jne 0x80001b0",
            "mov eax, dword [rbx + 0xe0]",
            "cmp eax, r12d",
            "je 0x8000219",
            "mov ecx, dword [0x08000211]",
            "test ecx, ecx",
            "jns current_task",
            "lea rax, [rbx + 0x10]",
            "mov rdi, rax",
            "mov qword [rbp - 0x38], rax",
            "call mutex_lock",
            "mov r15, qword [rbx]",
            "cmp rbx, r15",
            "mov r13, qword [r15]",
            "je mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov qword [rbp - 0x48], rax",
            "add rax, 0x4b8",
            "mov qword [rbp - 0x50], rax",
            "mov rax, qword [rbp - 0x48]",
            "mov qword [rbp - 0x58], rax",
            "mov rax, qword [rbp - 0x50]",
            "mov qword [rbp - 0x60], rax",
            "jmp 0x800026b",
            "mov r13, rax",
            "mov rax, qword [r15 + 8]",
            "lea r14, [r15 + 0x10]",
            "movabs rdx, 0xdead000000200200",
            "mov rdi, r14",
            "mov qword [r13 + 8], rax",
            "mov qword [rax], r13",
            "movabs rax, 0xdead000000100100",
            "mov qword [r15], rax",
            "mov qword [r15 + 8], rdx",
            "call mutex_trylock",
            "test eax, eax",
            "jne 0x80002b6",
            "cmp dword [0x080002a8], 1",
            "jg 0x800040b",
            "mov rdi, r14",
            "call mutex_lock",
            "cmp dword [0x080002bd], 1",
            "jg 0x80003d6",
            "lea rdi, [r15 + 0x38]",
            "call cryptodev_cipher_deinit",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_deinit",
            "cmp dword [0x080002df], 1",
            "jg current_task",
            "mov rdi, qword [r15 + 0xc8]",
            "call kfree",
            "mov rdi, qword [r15 + 0xd0]",
            "call kfree",
            "mov rdi, r14",
            "call mutex_unlock",
            "mov rdi, r15",
            "mov r15, r13",
            "call kfree",
            "cmp rbx, r13",
            "mov rax, qword [r13]",
            "jne 0x8000268",
            "mov rdi, qword [rbp - 0x38]",
            "call mutex_unlock",
            "mov rdi, rbx",
            "call kfree",
            "cmp dword [0x08000335], 1",
            "mov rax, qword [rbp - 0x40]",
            "mov qword [rax + 0xd0], 0",
            "jg current_task",
            "add rsp, 0x58",
            "xor eax, eax",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "xor r12d, r12d",
            "jmp 0x8000200",
            "mov edx, dword [r14 + 0x318]",
            "mov rsi, qword [rbp - 0x38]",
            "mov r9, r10",
            "mov r8d, 0x207",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x68], r10",
            "call printk",
            "mov r10, qword [rbp - 0x68]",
            "jmp 0x80001bd",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [r15 + 0xb8]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x158",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80002e5",
            "mov rax, qword [rbp - 0x58]",
            "mov r9d, dword [r15 + 0xb0]",
            "mov r8d, 0x155",
            "mov rsi, qword [rbp - 0x60]",
            "mov rcx, 0",
            "mov rdi, 0",
            "mov edx, dword [rax + 0x318]",
            "xor eax, eax",
            "call printk",
            "jmp 0x80002c3",
            "mov rax, qword [rbp - 0x48]",
            "mov r9d, dword [r15 + 0xb0]",
            "mov r8d, 0x152",
            "mov rsi, qword [rbp - 0x50]",
            "mov rcx, 0",
            "mov rdi, 0",
            "mov edx, dword [rax + 0x318]",
            "xor eax, eax",
            "call printk",
            "jmp mutex_lock",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r9d, r12d",
            "mov r8d, 0x20f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8000219",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x21d",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800034a"
        ]
    },
    "unk.0x80001f2": {
        "function_address": "0x080001f2",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "sub rsp, 0x58",
            "mov rbx, qword [rsi + 0xd0]",
            "mov qword [rbp - 0x40], rsi",
            "test rbx, rbx",
            "je 0x800034a",
            "lea rdi, [rbx + 0xe8]",
            "lea r13, [rbx + 0x38]",
            "call cancel_work_sync",
            "mov rax, qword [rbx + 0x70]",
            "lea rdx, [rbx + 0x70]",
            "cmp rax, rdx",
            "je 0x8000158",
            "mov rcx, qword [rbx + 0x40]",
            "mov rdx, qword [rbx + 0x78]",
            "mov qword [rax + 8], rcx",
            "mov qword [rcx], rax",
            "mov qword [rdx], r13",
            "mov qword [rbx + 0x40], rdx",
            "mov rax, qword [rbx + 0xa8]",
            "lea rdx, [rbx + 0xa8]",
            "cmp rax, rdx",
            "je 0x8000184",
            "mov rcx, qword [rbx + 0x40]",
            "mov rdx, qword [rbx + 0xb0]",
            "mov qword [rax + 8], rcx",
            "mov qword [rcx], rax",
            "mov qword [rdx], r13",
            "mov qword [rbx + 0x40], rdx",
            "mov r10, qword [rbx + 0x38]",
            "cmp r13, r10",
            "mov r11, qword [r10]",
            "je 0x800035b",
            "mov r14, qword gs:[0]",
            "lea rax, [r14 + 0x4b8]",
            "mov r15, r11",
            "xor r12d, r12d",
            "mov qword [rbp - 0x38], rax",
            "nop",
            "cmp dword [0x080001b7], 1",
            "jg 0x8000363",
            "mov rax, qword [r10 + 8]",
            "mov rdx, qword [r10]",
            "movabs rsi, 0xdead000000100100",
            "movabs rdi, 0xdead000000200200",
            "add r12d, 1",
            "mov qword [rdx + 8], rax",
            "mov qword [rax], rdx",
            "mov qword [r10 + 8], rdi",
            "mov qword [r10], rsi",
            "mov rdi, r10",
            "call kfree",
            "mov rax, r15",
            "mov r10, r15",
            "mov r15, qword [r15]",
            "cmp r13, rax",
            "jne 0x80001b0",
            "mov eax, dword [rbx + 0xe0]",
            "cmp eax, r12d",
            "je 0x8000219",
            "mov ecx, dword [0x08000211]",
            "test ecx, ecx",
            "jns current_task",
            "lea rax, [rbx + 0x10]",
            "mov rdi, rax",
            "mov qword [rbp - 0x38], rax",
            "call mutex_lock",
            "mov r15, qword [rbx]",
            "cmp rbx, r15",
            "mov r13, qword [r15]",
            "je mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov qword [rbp - 0x48], rax",
            "add rax, 0x4b8",
            "mov qword [rbp - 0x50], rax",
            "mov rax, qword [rbp - 0x48]",
            "mov qword [rbp - 0x58], rax",
            "mov rax, qword [rbp - 0x50]",
            "mov qword [rbp - 0x60], rax",
            "jmp 0x800026b",
            "mov r13, rax",
            "mov rax, qword [r15 + 8]",
            "lea r14, [r15 + 0x10]",
            "movabs rdx, 0xdead000000200200",
            "mov rdi, r14",
            "mov qword [r13 + 8], rax",
            "mov qword [rax], r13",
            "movabs rax, 0xdead000000100100",
            "mov qword [r15], rax",
            "mov qword [r15 + 8], rdx",
            "call mutex_trylock",
            "test eax, eax",
            "jne 0x80002b6",
            "cmp dword [0x080002a8], 1",
            "jg 0x800040b",
            "mov rdi, r14",
            "call mutex_lock",
            "cmp dword [0x080002bd], 1",
            "jg 0x80003d6",
            "lea rdi, [r15 + 0x38]",
            "call cryptodev_cipher_deinit",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_deinit",
            "cmp dword [0x080002df], 1",
            "jg current_task",
            "mov rdi, qword [r15 + 0xc8]",
            "call kfree",
            "mov rdi, qword [r15 + 0xd0]",
            "call kfree",
            "mov rdi, r14",
            "call mutex_unlock",
            "mov rdi, r15",
            "mov r15, r13",
            "call kfree",
            "cmp rbx, r13",
            "mov rax, qword [r13]",
            "jne 0x8000268",
            "mov rdi, qword [rbp - 0x38]",
            "call mutex_unlock",
            "mov rdi, rbx",
            "call kfree",
            "cmp dword [0x08000335], 1",
            "mov rax, qword [rbp - 0x40]",
            "mov qword [rax + 0xd0], 0",
            "jg current_task",
            "add rsp, 0x58",
            "xor eax, eax",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "xor r12d, r12d",
            "jmp 0x8000200",
            "mov edx, dword [r14 + 0x318]",
            "mov rsi, qword [rbp - 0x38]",
            "mov r9, r10",
            "mov r8d, 0x207",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x68], r10",
            "call printk",
            "mov r10, qword [rbp - 0x68]",
            "jmp 0x80001bd",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [r15 + 0xb8]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x158",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80002e5",
            "mov rax, qword [rbp - 0x58]",
            "mov r9d, dword [r15 + 0xb0]",
            "mov r8d, 0x155",
            "mov rsi, qword [rbp - 0x60]",
            "mov rcx, 0",
            "mov rdi, 0",
            "mov edx, dword [rax + 0x318]",
            "xor eax, eax",
            "call printk",
            "jmp 0x80002c3",
            "mov rax, qword [rbp - 0x48]",
            "mov r9d, dword [r15 + 0xb0]",
            "mov r8d, 0x152",
            "mov rsi, qword [rbp - 0x50]",
            "mov rcx, 0",
            "mov rdi, 0",
            "mov edx, dword [rax + 0x318]",
            "xor eax, eax",
            "call printk",
            "jmp mutex_lock",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r9d, r12d",
            "mov r8d, 0x20f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8000219",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x21d",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800034a"
        ]
    },
    "unk.0x8000229": {
        "function_address": "0x08000229",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "sub rsp, 0x58",
            "mov rbx, qword [rsi + 0xd0]",
            "mov qword [rbp - 0x40], rsi",
            "test rbx, rbx",
            "je 0x800034a",
            "lea rdi, [rbx + 0xe8]",
            "lea r13, [rbx + 0x38]",
            "call cancel_work_sync",
            "mov rax, qword [rbx + 0x70]",
            "lea rdx, [rbx + 0x70]",
            "cmp rax, rdx",
            "je 0x8000158",
            "mov rcx, qword [rbx + 0x40]",
            "mov rdx, qword [rbx + 0x78]",
            "mov qword [rax + 8], rcx",
            "mov qword [rcx], rax",
            "mov qword [rdx], r13",
            "mov qword [rbx + 0x40], rdx",
            "mov rax, qword [rbx + 0xa8]",
            "lea rdx, [rbx + 0xa8]",
            "cmp rax, rdx",
            "je 0x8000184",
            "mov rcx, qword [rbx + 0x40]",
            "mov rdx, qword [rbx + 0xb0]",
            "mov qword [rax + 8], rcx",
            "mov qword [rcx], rax",
            "mov qword [rdx], r13",
            "mov qword [rbx + 0x40], rdx",
            "mov r10, qword [rbx + 0x38]",
            "cmp r13, r10",
            "mov r11, qword [r10]",
            "je 0x800035b",
            "mov r14, qword gs:[0]",
            "lea rax, [r14 + 0x4b8]",
            "mov r15, r11",
            "xor r12d, r12d",
            "mov qword [rbp - 0x38], rax",
            "nop",
            "cmp dword [0x080001b7], 1",
            "jg 0x8000363",
            "mov rax, qword [r10 + 8]",
            "mov rdx, qword [r10]",
            "movabs rsi, 0xdead000000100100",
            "movabs rdi, 0xdead000000200200",
            "add r12d, 1",
            "mov qword [rdx + 8], rax",
            "mov qword [rax], rdx",
            "mov qword [r10 + 8], rdi",
            "mov qword [r10], rsi",
            "mov rdi, r10",
            "call kfree",
            "mov rax, r15",
            "mov r10, r15",
            "mov r15, qword [r15]",
            "cmp r13, rax",
            "jne 0x80001b0",
            "mov eax, dword [rbx + 0xe0]",
            "cmp eax, r12d",
            "je 0x8000219",
            "mov ecx, dword [0x08000211]",
            "test ecx, ecx",
            "jns current_task",
            "lea rax, [rbx + 0x10]",
            "mov rdi, rax",
            "mov qword [rbp - 0x38], rax",
            "call mutex_lock",
            "mov r15, qword [rbx]",
            "cmp rbx, r15",
            "mov r13, qword [r15]",
            "je mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov qword [rbp - 0x48], rax",
            "add rax, 0x4b8",
            "mov qword [rbp - 0x50], rax",
            "mov rax, qword [rbp - 0x48]",
            "mov qword [rbp - 0x58], rax",
            "mov rax, qword [rbp - 0x50]",
            "mov qword [rbp - 0x60], rax",
            "jmp 0x800026b",
            "mov r13, rax",
            "mov rax, qword [r15 + 8]",
            "lea r14, [r15 + 0x10]",
            "movabs rdx, 0xdead000000200200",
            "mov rdi, r14",
            "mov qword [r13 + 8], rax",
            "mov qword [rax], r13",
            "movabs rax, 0xdead000000100100",
            "mov qword [r15], rax",
            "mov qword [r15 + 8], rdx",
            "call mutex_trylock",
            "test eax, eax",
            "jne 0x80002b6",
            "cmp dword [0x080002a8], 1",
            "jg 0x800040b",
            "mov rdi, r14",
            "call mutex_lock",
            "cmp dword [0x080002bd], 1",
            "jg 0x80003d6",
            "lea rdi, [r15 + 0x38]",
            "call cryptodev_cipher_deinit",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_deinit",
            "cmp dword [0x080002df], 1",
            "jg current_task",
            "mov rdi, qword [r15 + 0xc8]",
            "call kfree",
            "mov rdi, qword [r15 + 0xd0]",
            "call kfree",
            "mov rdi, r14",
            "call mutex_unlock",
            "mov rdi, r15",
            "mov r15, r13",
            "call kfree",
            "cmp rbx, r13",
            "mov rax, qword [r13]",
            "jne 0x8000268",
            "mov rdi, qword [rbp - 0x38]",
            "call mutex_unlock",
            "mov rdi, rbx",
            "call kfree",
            "cmp dword [0x08000335], 1",
            "mov rax, qword [rbp - 0x40]",
            "mov qword [rax + 0xd0], 0",
            "jg current_task",
            "add rsp, 0x58",
            "xor eax, eax",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "xor r12d, r12d",
            "jmp 0x8000200",
            "mov edx, dword [r14 + 0x318]",
            "mov rsi, qword [rbp - 0x38]",
            "mov r9, r10",
            "mov r8d, 0x207",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x68], r10",
            "call printk",
            "mov r10, qword [rbp - 0x68]",
            "jmp 0x80001bd",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [r15 + 0xb8]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x158",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80002e5",
            "mov rax, qword [rbp - 0x58]",
            "mov r9d, dword [r15 + 0xb0]",
            "mov r8d, 0x155",
            "mov rsi, qword [rbp - 0x60]",
            "mov rcx, 0",
            "mov rdi, 0",
            "mov edx, dword [rax + 0x318]",
            "xor eax, eax",
            "call printk",
            "jmp 0x80002c3",
            "mov rax, qword [rbp - 0x48]",
            "mov r9d, dword [r15 + 0xb0]",
            "mov r8d, 0x152",
            "mov rsi, qword [rbp - 0x50]",
            "mov rcx, 0",
            "mov rdi, 0",
            "mov edx, dword [rax + 0x318]",
            "xor eax, eax",
            "call printk",
            "jmp mutex_lock",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r9d, r12d",
            "mov r8d, 0x20f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8000219",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x21d",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800034a"
        ]
    },
    "unk.0x800029d": {
        "function_address": "0x0800029d",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "sub rsp, 0x58",
            "mov rbx, qword [rsi + 0xd0]",
            "mov qword [rbp - 0x40], rsi",
            "test rbx, rbx",
            "je 0x800034a",
            "lea rdi, [rbx + 0xe8]",
            "lea r13, [rbx + 0x38]",
            "call cancel_work_sync",
            "mov rax, qword [rbx + 0x70]",
            "lea rdx, [rbx + 0x70]",
            "cmp rax, rdx",
            "je 0x8000158",
            "mov rcx, qword [rbx + 0x40]",
            "mov rdx, qword [rbx + 0x78]",
            "mov qword [rax + 8], rcx",
            "mov qword [rcx], rax",
            "mov qword [rdx], r13",
            "mov qword [rbx + 0x40], rdx",
            "mov rax, qword [rbx + 0xa8]",
            "lea rdx, [rbx + 0xa8]",
            "cmp rax, rdx",
            "je 0x8000184",
            "mov rcx, qword [rbx + 0x40]",
            "mov rdx, qword [rbx + 0xb0]",
            "mov qword [rax + 8], rcx",
            "mov qword [rcx], rax",
            "mov qword [rdx], r13",
            "mov qword [rbx + 0x40], rdx",
            "mov r10, qword [rbx + 0x38]",
            "cmp r13, r10",
            "mov r11, qword [r10]",
            "je 0x800035b",
            "mov r14, qword gs:[0]",
            "lea rax, [r14 + 0x4b8]",
            "mov r15, r11",
            "xor r12d, r12d",
            "mov qword [rbp - 0x38], rax",
            "nop",
            "cmp dword [0x080001b7], 1",
            "jg 0x8000363",
            "mov rax, qword [r10 + 8]",
            "mov rdx, qword [r10]",
            "movabs rsi, 0xdead000000100100",
            "movabs rdi, 0xdead000000200200",
            "add r12d, 1",
            "mov qword [rdx + 8], rax",
            "mov qword [rax], rdx",
            "mov qword [r10 + 8], rdi",
            "mov qword [r10], rsi",
            "mov rdi, r10",
            "call kfree",
            "mov rax, r15",
            "mov r10, r15",
            "mov r15, qword [r15]",
            "cmp r13, rax",
            "jne 0x80001b0",
            "mov eax, dword [rbx + 0xe0]",
            "cmp eax, r12d",
            "je 0x8000219",
            "mov ecx, dword [0x08000211]",
            "test ecx, ecx",
            "jns current_task",
            "lea rax, [rbx + 0x10]",
            "mov rdi, rax",
            "mov qword [rbp - 0x38], rax",
            "call mutex_lock",
            "mov r15, qword [rbx]",
            "cmp rbx, r15",
            "mov r13, qword [r15]",
            "je mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov qword [rbp - 0x48], rax",
            "add rax, 0x4b8",
            "mov qword [rbp - 0x50], rax",
            "mov rax, qword [rbp - 0x48]",
            "mov qword [rbp - 0x58], rax",
            "mov rax, qword [rbp - 0x50]",
            "mov qword [rbp - 0x60], rax",
            "jmp 0x800026b",
            "mov r13, rax",
            "mov rax, qword [r15 + 8]",
            "lea r14, [r15 + 0x10]",
            "movabs rdx, 0xdead000000200200",
            "mov rdi, r14",
            "mov qword [r13 + 8], rax",
            "mov qword [rax], r13",
            "movabs rax, 0xdead000000100100",
            "mov qword [r15], rax",
            "mov qword [r15 + 8], rdx",
            "call mutex_trylock",
            "test eax, eax",
            "jne 0x80002b6",
            "cmp dword [0x080002a8], 1",
            "jg 0x800040b",
            "mov rdi, r14",
            "call mutex_lock",
            "cmp dword [0x080002bd], 1",
            "jg 0x80003d6",
            "lea rdi, [r15 + 0x38]",
            "call cryptodev_cipher_deinit",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_deinit",
            "cmp dword [0x080002df], 1",
            "jg current_task",
            "mov rdi, qword [r15 + 0xc8]",
            "call kfree",
            "mov rdi, qword [r15 + 0xd0]",
            "call kfree",
            "mov rdi, r14",
            "call mutex_unlock",
            "mov rdi, r15",
            "mov r15, r13",
            "call kfree",
            "cmp rbx, r13",
            "mov rax, qword [r13]",
            "jne 0x8000268",
            "mov rdi, qword [rbp - 0x38]",
            "call mutex_unlock",
            "mov rdi, rbx",
            "call kfree",
            "cmp dword [0x08000335], 1",
            "mov rax, qword [rbp - 0x40]",
            "mov qword [rax + 0xd0], 0",
            "jg current_task",
            "add rsp, 0x58",
            "xor eax, eax",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "xor r12d, r12d",
            "jmp 0x8000200",
            "mov edx, dword [r14 + 0x318]",
            "mov rsi, qword [rbp - 0x38]",
            "mov r9, r10",
            "mov r8d, 0x207",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x68], r10",
            "call printk",
            "mov r10, qword [rbp - 0x68]",
            "jmp 0x80001bd",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [r15 + 0xb8]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x158",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80002e5",
            "mov rax, qword [rbp - 0x58]",
            "mov r9d, dword [r15 + 0xb0]",
            "mov r8d, 0x155",
            "mov rsi, qword [rbp - 0x60]",
            "mov rcx, 0",
            "mov rdi, 0",
            "mov edx, dword [rax + 0x318]",
            "xor eax, eax",
            "call printk",
            "jmp 0x80002c3",
            "mov rax, qword [rbp - 0x48]",
            "mov r9d, dword [r15 + 0xb0]",
            "mov r8d, 0x152",
            "mov rsi, qword [rbp - 0x50]",
            "mov rcx, 0",
            "mov rdi, 0",
            "mov edx, dword [rax + 0x318]",
            "xor eax, eax",
            "call printk",
            "jmp mutex_lock",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r9d, r12d",
            "mov r8d, 0x20f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8000219",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x21d",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800034a"
        ]
    },
    "unk.0x80002b6": {
        "function_address": "0x080002b6",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "sub rsp, 0x58",
            "mov rbx, qword [rsi + 0xd0]",
            "mov qword [rbp - 0x40], rsi",
            "test rbx, rbx",
            "je 0x800034a",
            "lea rdi, [rbx + 0xe8]",
            "lea r13, [rbx + 0x38]",
            "call cancel_work_sync",
            "mov rax, qword [rbx + 0x70]",
            "lea rdx, [rbx + 0x70]",
            "cmp rax, rdx",
            "je 0x8000158",
            "mov rcx, qword [rbx + 0x40]",
            "mov rdx, qword [rbx + 0x78]",
            "mov qword [rax + 8], rcx",
            "mov qword [rcx], rax",
            "mov qword [rdx], r13",
            "mov qword [rbx + 0x40], rdx",
            "mov rax, qword [rbx + 0xa8]",
            "lea rdx, [rbx + 0xa8]",
            "cmp rax, rdx",
            "je 0x8000184",
            "mov rcx, qword [rbx + 0x40]",
            "mov rdx, qword [rbx + 0xb0]",
            "mov qword [rax + 8], rcx",
            "mov qword [rcx], rax",
            "mov qword [rdx], r13",
            "mov qword [rbx + 0x40], rdx",
            "mov r10, qword [rbx + 0x38]",
            "cmp r13, r10",
            "mov r11, qword [r10]",
            "je 0x800035b",
            "mov r14, qword gs:[0]",
            "lea rax, [r14 + 0x4b8]",
            "mov r15, r11",
            "xor r12d, r12d",
            "mov qword [rbp - 0x38], rax",
            "nop",
            "cmp dword [0x080001b7], 1",
            "jg 0x8000363",
            "mov rax, qword [r10 + 8]",
            "mov rdx, qword [r10]",
            "movabs rsi, 0xdead000000100100",
            "movabs rdi, 0xdead000000200200",
            "add r12d, 1",
            "mov qword [rdx + 8], rax",
            "mov qword [rax], rdx",
            "mov qword [r10 + 8], rdi",
            "mov qword [r10], rsi",
            "mov rdi, r10",
            "call kfree",
            "mov rax, r15",
            "mov r10, r15",
            "mov r15, qword [r15]",
            "cmp r13, rax",
            "jne 0x80001b0",
            "mov eax, dword [rbx + 0xe0]",
            "cmp eax, r12d",
            "je 0x8000219",
            "mov ecx, dword [0x08000211]",
            "test ecx, ecx",
            "jns current_task",
            "lea rax, [rbx + 0x10]",
            "mov rdi, rax",
            "mov qword [rbp - 0x38], rax",
            "call mutex_lock",
            "mov r15, qword [rbx]",
            "cmp rbx, r15",
            "mov r13, qword [r15]",
            "je mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov qword [rbp - 0x48], rax",
            "add rax, 0x4b8",
            "mov qword [rbp - 0x50], rax",
            "mov rax, qword [rbp - 0x48]",
            "mov qword [rbp - 0x58], rax",
            "mov rax, qword [rbp - 0x50]",
            "mov qword [rbp - 0x60], rax",
            "jmp 0x800026b",
            "mov r13, rax",
            "mov rax, qword [r15 + 8]",
            "lea r14, [r15 + 0x10]",
            "movabs rdx, 0xdead000000200200",
            "mov rdi, r14",
            "mov qword [r13 + 8], rax",
            "mov qword [rax], r13",
            "movabs rax, 0xdead000000100100",
            "mov qword [r15], rax",
            "mov qword [r15 + 8], rdx",
            "call mutex_trylock",
            "test eax, eax",
            "jne 0x80002b6",
            "cmp dword [0x080002a8], 1",
            "jg 0x800040b",
            "mov rdi, r14",
            "call mutex_lock",
            "cmp dword [0x080002bd], 1",
            "jg 0x80003d6",
            "lea rdi, [r15 + 0x38]",
            "call cryptodev_cipher_deinit",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_deinit",
            "cmp dword [0x080002df], 1",
            "jg current_task",
            "mov rdi, qword [r15 + 0xc8]",
            "call kfree",
            "mov rdi, qword [r15 + 0xd0]",
            "call kfree",
            "mov rdi, r14",
            "call mutex_unlock",
            "mov rdi, r15",
            "mov r15, r13",
            "call kfree",
            "cmp rbx, r13",
            "mov rax, qword [r13]",
            "jne 0x8000268",
            "mov rdi, qword [rbp - 0x38]",
            "call mutex_unlock",
            "mov rdi, rbx",
            "call kfree",
            "cmp dword [0x08000335], 1",
            "mov rax, qword [rbp - 0x40]",
            "mov qword [rax + 0xd0], 0",
            "jg current_task",
            "add rsp, 0x58",
            "xor eax, eax",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "xor r12d, r12d",
            "jmp 0x8000200",
            "mov edx, dword [r14 + 0x318]",
            "mov rsi, qword [rbp - 0x38]",
            "mov r9, r10",
            "mov r8d, 0x207",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x68], r10",
            "call printk",
            "mov r10, qword [rbp - 0x68]",
            "jmp 0x80001bd",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [r15 + 0xb8]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x158",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80002e5",
            "mov rax, qword [rbp - 0x58]",
            "mov r9d, dword [r15 + 0xb0]",
            "mov r8d, 0x155",
            "mov rsi, qword [rbp - 0x60]",
            "mov rcx, 0",
            "mov rdi, 0",
            "mov edx, dword [rax + 0x318]",
            "xor eax, eax",
            "call printk",
            "jmp 0x80002c3",
            "mov rax, qword [rbp - 0x48]",
            "mov r9d, dword [r15 + 0xb0]",
            "mov r8d, 0x152",
            "mov rsi, qword [rbp - 0x50]",
            "mov rcx, 0",
            "mov rdi, 0",
            "mov edx, dword [rax + 0x318]",
            "xor eax, eax",
            "call printk",
            "jmp mutex_lock",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r9d, r12d",
            "mov r8d, 0x20f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8000219",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x21d",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800034a"
        ]
    },
    "unk.0x80002cc": {
        "function_address": "0x080002cc",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "sub rsp, 0x58",
            "mov rbx, qword [rsi + 0xd0]",
            "mov qword [rbp - 0x40], rsi",
            "test rbx, rbx",
            "je 0x800034a",
            "lea rdi, [rbx + 0xe8]",
            "lea r13, [rbx + 0x38]",
            "call cancel_work_sync",
            "mov rax, qword [rbx + 0x70]",
            "lea rdx, [rbx + 0x70]",
            "cmp rax, rdx",
            "je 0x8000158",
            "mov rcx, qword [rbx + 0x40]",
            "mov rdx, qword [rbx + 0x78]",
            "mov qword [rax + 8], rcx",
            "mov qword [rcx], rax",
            "mov qword [rdx], r13",
            "mov qword [rbx + 0x40], rdx",
            "mov rax, qword [rbx + 0xa8]",
            "lea rdx, [rbx + 0xa8]",
            "cmp rax, rdx",
            "je 0x8000184",
            "mov rcx, qword [rbx + 0x40]",
            "mov rdx, qword [rbx + 0xb0]",
            "mov qword [rax + 8], rcx",
            "mov qword [rcx], rax",
            "mov qword [rdx], r13",
            "mov qword [rbx + 0x40], rdx",
            "mov r10, qword [rbx + 0x38]",
            "cmp r13, r10",
            "mov r11, qword [r10]",
            "je 0x800035b",
            "mov r14, qword gs:[0]",
            "lea rax, [r14 + 0x4b8]",
            "mov r15, r11",
            "xor r12d, r12d",
            "mov qword [rbp - 0x38], rax",
            "nop",
            "cmp dword [0x080001b7], 1",
            "jg 0x8000363",
            "mov rax, qword [r10 + 8]",
            "mov rdx, qword [r10]",
            "movabs rsi, 0xdead000000100100",
            "movabs rdi, 0xdead000000200200",
            "add r12d, 1",
            "mov qword [rdx + 8], rax",
            "mov qword [rax], rdx",
            "mov qword [r10 + 8], rdi",
            "mov qword [r10], rsi",
            "mov rdi, r10",
            "call kfree",
            "mov rax, r15",
            "mov r10, r15",
            "mov r15, qword [r15]",
            "cmp r13, rax",
            "jne 0x80001b0",
            "mov eax, dword [rbx + 0xe0]",
            "cmp eax, r12d",
            "je 0x8000219",
            "mov ecx, dword [0x08000211]",
            "test ecx, ecx",
            "jns current_task",
            "lea rax, [rbx + 0x10]",
            "mov rdi, rax",
            "mov qword [rbp - 0x38], rax",
            "call mutex_lock",
            "mov r15, qword [rbx]",
            "cmp rbx, r15",
            "mov r13, qword [r15]",
            "je mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov qword [rbp - 0x48], rax",
            "add rax, 0x4b8",
            "mov qword [rbp - 0x50], rax",
            "mov rax, qword [rbp - 0x48]",
            "mov qword [rbp - 0x58], rax",
            "mov rax, qword [rbp - 0x50]",
            "mov qword [rbp - 0x60], rax",
            "jmp 0x800026b",
            "mov r13, rax",
            "mov rax, qword [r15 + 8]",
            "lea r14, [r15 + 0x10]",
            "movabs rdx, 0xdead000000200200",
            "mov rdi, r14",
            "mov qword [r13 + 8], rax",
            "mov qword [rax], r13",
            "movabs rax, 0xdead000000100100",
            "mov qword [r15], rax",
            "mov qword [r15 + 8], rdx",
            "call mutex_trylock",
            "test eax, eax",
            "jne 0x80002b6",
            "cmp dword [0x080002a8], 1",
            "jg 0x800040b",
            "mov rdi, r14",
            "call mutex_lock",
            "cmp dword [0x080002bd], 1",
            "jg 0x80003d6",
            "lea rdi, [r15 + 0x38]",
            "call cryptodev_cipher_deinit",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_deinit",
            "cmp dword [0x080002df], 1",
            "jg current_task",
            "mov rdi, qword [r15 + 0xc8]",
            "call kfree",
            "mov rdi, qword [r15 + 0xd0]",
            "call kfree",
            "mov rdi, r14",
            "call mutex_unlock",
            "mov rdi, r15",
            "mov r15, r13",
            "call kfree",
            "cmp rbx, r13",
            "mov rax, qword [r13]",
            "jne 0x8000268",
            "mov rdi, qword [rbp - 0x38]",
            "call mutex_unlock",
            "mov rdi, rbx",
            "call kfree",
            "cmp dword [0x08000335], 1",
            "mov rax, qword [rbp - 0x40]",
            "mov qword [rax + 0xd0], 0",
            "jg current_task",
            "add rsp, 0x58",
            "xor eax, eax",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "xor r12d, r12d",
            "jmp 0x8000200",
            "mov edx, dword [r14 + 0x318]",
            "mov rsi, qword [rbp - 0x38]",
            "mov r9, r10",
            "mov r8d, 0x207",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x68], r10",
            "call printk",
            "mov r10, qword [rbp - 0x68]",
            "jmp 0x80001bd",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [r15 + 0xb8]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x158",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80002e5",
            "mov rax, qword [rbp - 0x58]",
            "mov r9d, dword [r15 + 0xb0]",
            "mov r8d, 0x155",
            "mov rsi, qword [rbp - 0x60]",
            "mov rcx, 0",
            "mov rdi, 0",
            "mov edx, dword [rax + 0x318]",
            "xor eax, eax",
            "call printk",
            "jmp 0x80002c3",
            "mov rax, qword [rbp - 0x48]",
            "mov r9d, dword [r15 + 0xb0]",
            "mov r8d, 0x152",
            "mov rsi, qword [rbp - 0x50]",
            "mov rcx, 0",
            "mov rdi, 0",
            "mov edx, dword [rax + 0x318]",
            "xor eax, eax",
            "call printk",
            "jmp mutex_lock",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r9d, r12d",
            "mov r8d, 0x20f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8000219",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x21d",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800034a"
        ]
    },
    "unk.0x80002d8": {
        "function_address": "0x080002d8",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "sub rsp, 0x58",
            "mov rbx, qword [rsi + 0xd0]",
            "mov qword [rbp - 0x40], rsi",
            "test rbx, rbx",
            "je 0x800034a",
            "lea rdi, [rbx + 0xe8]",
            "lea r13, [rbx + 0x38]",
            "call cancel_work_sync",
            "mov rax, qword [rbx + 0x70]",
            "lea rdx, [rbx + 0x70]",
            "cmp rax, rdx",
            "je 0x8000158",
            "mov rcx, qword [rbx + 0x40]",
            "mov rdx, qword [rbx + 0x78]",
            "mov qword [rax + 8], rcx",
            "mov qword [rcx], rax",
            "mov qword [rdx], r13",
            "mov qword [rbx + 0x40], rdx",
            "mov rax, qword [rbx + 0xa8]",
            "lea rdx, [rbx + 0xa8]",
            "cmp rax, rdx",
            "je 0x8000184",
            "mov rcx, qword [rbx + 0x40]",
            "mov rdx, qword [rbx + 0xb0]",
            "mov qword [rax + 8], rcx",
            "mov qword [rcx], rax",
            "mov qword [rdx], r13",
            "mov qword [rbx + 0x40], rdx",
            "mov r10, qword [rbx + 0x38]",
            "cmp r13, r10",
            "mov r11, qword [r10]",
            "je 0x800035b",
            "mov r14, qword gs:[0]",
            "lea rax, [r14 + 0x4b8]",
            "mov r15, r11",
            "xor r12d, r12d",
            "mov qword [rbp - 0x38], rax",
            "nop",
            "cmp dword [0x080001b7], 1",
            "jg 0x8000363",
            "mov rax, qword [r10 + 8]",
            "mov rdx, qword [r10]",
            "movabs rsi, 0xdead000000100100",
            "movabs rdi, 0xdead000000200200",
            "add r12d, 1",
            "mov qword [rdx + 8], rax",
            "mov qword [rax], rdx",
            "mov qword [r10 + 8], rdi",
            "mov qword [r10], rsi",
            "mov rdi, r10",
            "call kfree",
            "mov rax, r15",
            "mov r10, r15",
            "mov r15, qword [r15]",
            "cmp r13, rax",
            "jne 0x80001b0",
            "mov eax, dword [rbx + 0xe0]",
            "cmp eax, r12d",
            "je 0x8000219",
            "mov ecx, dword [0x08000211]",
            "test ecx, ecx",
            "jns current_task",
            "lea rax, [rbx + 0x10]",
            "mov rdi, rax",
            "mov qword [rbp - 0x38], rax",
            "call mutex_lock",
            "mov r15, qword [rbx]",
            "cmp rbx, r15",
            "mov r13, qword [r15]",
            "je mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov qword [rbp - 0x48], rax",
            "add rax, 0x4b8",
            "mov qword [rbp - 0x50], rax",
            "mov rax, qword [rbp - 0x48]",
            "mov qword [rbp - 0x58], rax",
            "mov rax, qword [rbp - 0x50]",
            "mov qword [rbp - 0x60], rax",
            "jmp 0x800026b",
            "mov r13, rax",
            "mov rax, qword [r15 + 8]",
            "lea r14, [r15 + 0x10]",
            "movabs rdx, 0xdead000000200200",
            "mov rdi, r14",
            "mov qword [r13 + 8], rax",
            "mov qword [rax], r13",
            "movabs rax, 0xdead000000100100",
            "mov qword [r15], rax",
            "mov qword [r15 + 8], rdx",
            "call mutex_trylock",
            "test eax, eax",
            "jne 0x80002b6",
            "cmp dword [0x080002a8], 1",
            "jg 0x800040b",
            "mov rdi, r14",
            "call mutex_lock",
            "cmp dword [0x080002bd], 1",
            "jg 0x80003d6",
            "lea rdi, [r15 + 0x38]",
            "call cryptodev_cipher_deinit",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_deinit",
            "cmp dword [0x080002df], 1",
            "jg current_task",
            "mov rdi, qword [r15 + 0xc8]",
            "call kfree",
            "mov rdi, qword [r15 + 0xd0]",
            "call kfree",
            "mov rdi, r14",
            "call mutex_unlock",
            "mov rdi, r15",
            "mov r15, r13",
            "call kfree",
            "cmp rbx, r13",
            "mov rax, qword [r13]",
            "jne 0x8000268",
            "mov rdi, qword [rbp - 0x38]",
            "call mutex_unlock",
            "mov rdi, rbx",
            "call kfree",
            "cmp dword [0x08000335], 1",
            "mov rax, qword [rbp - 0x40]",
            "mov qword [rax + 0xd0], 0",
            "jg current_task",
            "add rsp, 0x58",
            "xor eax, eax",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "xor r12d, r12d",
            "jmp 0x8000200",
            "mov edx, dword [r14 + 0x318]",
            "mov rsi, qword [rbp - 0x38]",
            "mov r9, r10",
            "mov r8d, 0x207",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x68], r10",
            "call printk",
            "mov r10, qword [rbp - 0x68]",
            "jmp 0x80001bd",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [r15 + 0xb8]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x158",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80002e5",
            "mov rax, qword [rbp - 0x58]",
            "mov r9d, dword [r15 + 0xb0]",
            "mov r8d, 0x155",
            "mov rsi, qword [rbp - 0x60]",
            "mov rcx, 0",
            "mov rdi, 0",
            "mov edx, dword [rax + 0x318]",
            "xor eax, eax",
            "call printk",
            "jmp 0x80002c3",
            "mov rax, qword [rbp - 0x48]",
            "mov r9d, dword [r15 + 0xb0]",
            "mov r8d, 0x152",
            "mov rsi, qword [rbp - 0x50]",
            "mov rcx, 0",
            "mov rdi, 0",
            "mov edx, dword [rax + 0x318]",
            "xor eax, eax",
            "call printk",
            "jmp mutex_lock",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r9d, r12d",
            "mov r8d, 0x20f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8000219",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x21d",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800034a"
        ]
    },
    "unk.0x80002f1": {
        "function_address": "0x080002f1",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "sub rsp, 0x58",
            "mov rbx, qword [rsi + 0xd0]",
            "mov qword [rbp - 0x40], rsi",
            "test rbx, rbx",
            "je 0x800034a",
            "lea rdi, [rbx + 0xe8]",
            "lea r13, [rbx + 0x38]",
            "call cancel_work_sync",
            "mov rax, qword [rbx + 0x70]",
            "lea rdx, [rbx + 0x70]",
            "cmp rax, rdx",
            "je 0x8000158",
            "mov rcx, qword [rbx + 0x40]",
            "mov rdx, qword [rbx + 0x78]",
            "mov qword [rax + 8], rcx",
            "mov qword [rcx], rax",
            "mov qword [rdx], r13",
            "mov qword [rbx + 0x40], rdx",
            "mov rax, qword [rbx + 0xa8]",
            "lea rdx, [rbx + 0xa8]",
            "cmp rax, rdx",
            "je 0x8000184",
            "mov rcx, qword [rbx + 0x40]",
            "mov rdx, qword [rbx + 0xb0]",
            "mov qword [rax + 8], rcx",
            "mov qword [rcx], rax",
            "mov qword [rdx], r13",
            "mov qword [rbx + 0x40], rdx",
            "mov r10, qword [rbx + 0x38]",
            "cmp r13, r10",
            "mov r11, qword [r10]",
            "je 0x800035b",
            "mov r14, qword gs:[0]",
            "lea rax, [r14 + 0x4b8]",
            "mov r15, r11",
            "xor r12d, r12d",
            "mov qword [rbp - 0x38], rax",
            "nop",
            "cmp dword [0x080001b7], 1",
            "jg 0x8000363",
            "mov rax, qword [r10 + 8]",
            "mov rdx, qword [r10]",
            "movabs rsi, 0xdead000000100100",
            "movabs rdi, 0xdead000000200200",
            "add r12d, 1",
            "mov qword [rdx + 8], rax",
            "mov qword [rax], rdx",
            "mov qword [r10 + 8], rdi",
            "mov qword [r10], rsi",
            "mov rdi, r10",
            "call kfree",
            "mov rax, r15",
            "mov r10, r15",
            "mov r15, qword [r15]",
            "cmp r13, rax",
            "jne 0x80001b0",
            "mov eax, dword [rbx + 0xe0]",
            "cmp eax, r12d",
            "je 0x8000219",
            "mov ecx, dword [0x08000211]",
            "test ecx, ecx",
            "jns current_task",
            "lea rax, [rbx + 0x10]",
            "mov rdi, rax",
            "mov qword [rbp - 0x38], rax",
            "call mutex_lock",
            "mov r15, qword [rbx]",
            "cmp rbx, r15",
            "mov r13, qword [r15]",
            "je mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov qword [rbp - 0x48], rax",
            "add rax, 0x4b8",
            "mov qword [rbp - 0x50], rax",
            "mov rax, qword [rbp - 0x48]",
            "mov qword [rbp - 0x58], rax",
            "mov rax, qword [rbp - 0x50]",
            "mov qword [rbp - 0x60], rax",
            "jmp 0x800026b",
            "mov r13, rax",
            "mov rax, qword [r15 + 8]",
            "lea r14, [r15 + 0x10]",
            "movabs rdx, 0xdead000000200200",
            "mov rdi, r14",
            "mov qword [r13 + 8], rax",
            "mov qword [rax], r13",
            "movabs rax, 0xdead000000100100",
            "mov qword [r15], rax",
            "mov qword [r15 + 8], rdx",
            "call mutex_trylock",
            "test eax, eax",
            "jne 0x80002b6",
            "cmp dword [0x080002a8], 1",
            "jg 0x800040b",
            "mov rdi, r14",
            "call mutex_lock",
            "cmp dword [0x080002bd], 1",
            "jg 0x80003d6",
            "lea rdi, [r15 + 0x38]",
            "call cryptodev_cipher_deinit",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_deinit",
            "cmp dword [0x080002df], 1",
            "jg current_task",
            "mov rdi, qword [r15 + 0xc8]",
            "call kfree",
            "mov rdi, qword [r15 + 0xd0]",
            "call kfree",
            "mov rdi, r14",
            "call mutex_unlock",
            "mov rdi, r15",
            "mov r15, r13",
            "call kfree",
            "cmp rbx, r13",
            "mov rax, qword [r13]",
            "jne 0x8000268",
            "mov rdi, qword [rbp - 0x38]",
            "call mutex_unlock",
            "mov rdi, rbx",
            "call kfree",
            "cmp dword [0x08000335], 1",
            "mov rax, qword [rbp - 0x40]",
            "mov qword [rax + 0xd0], 0",
            "jg current_task",
            "add rsp, 0x58",
            "xor eax, eax",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "xor r12d, r12d",
            "jmp 0x8000200",
            "mov edx, dword [r14 + 0x318]",
            "mov rsi, qword [rbp - 0x38]",
            "mov r9, r10",
            "mov r8d, 0x207",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x68], r10",
            "call printk",
            "mov r10, qword [rbp - 0x68]",
            "jmp 0x80001bd",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [r15 + 0xb8]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x158",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80002e5",
            "mov rax, qword [rbp - 0x58]",
            "mov r9d, dword [r15 + 0xb0]",
            "mov r8d, 0x155",
            "mov rsi, qword [rbp - 0x60]",
            "mov rcx, 0",
            "mov rdi, 0",
            "mov edx, dword [rax + 0x318]",
            "xor eax, eax",
            "call printk",
            "jmp 0x80002c3",
            "mov rax, qword [rbp - 0x48]",
            "mov r9d, dword [r15 + 0xb0]",
            "mov r8d, 0x152",
            "mov rsi, qword [rbp - 0x50]",
            "mov rcx, 0",
            "mov rdi, 0",
            "mov edx, dword [rax + 0x318]",
            "xor eax, eax",
            "call printk",
            "jmp mutex_lock",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r9d, r12d",
            "mov r8d, 0x20f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8000219",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x21d",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800034a"
        ]
    },
    "unk.0x80002fd": {
        "function_address": "0x080002fd",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "sub rsp, 0x58",
            "mov rbx, qword [rsi + 0xd0]",
            "mov qword [rbp - 0x40], rsi",
            "test rbx, rbx",
            "je 0x800034a",
            "lea rdi, [rbx + 0xe8]",
            "lea r13, [rbx + 0x38]",
            "call cancel_work_sync",
            "mov rax, qword [rbx + 0x70]",
            "lea rdx, [rbx + 0x70]",
            "cmp rax, rdx",
            "je 0x8000158",
            "mov rcx, qword [rbx + 0x40]",
            "mov rdx, qword [rbx + 0x78]",
            "mov qword [rax + 8], rcx",
            "mov qword [rcx], rax",
            "mov qword [rdx], r13",
            "mov qword [rbx + 0x40], rdx",
            "mov rax, qword [rbx + 0xa8]",
            "lea rdx, [rbx + 0xa8]",
            "cmp rax, rdx",
            "je 0x8000184",
            "mov rcx, qword [rbx + 0x40]",
            "mov rdx, qword [rbx + 0xb0]",
            "mov qword [rax + 8], rcx",
            "mov qword [rcx], rax",
            "mov qword [rdx], r13",
            "mov qword [rbx + 0x40], rdx",
            "mov r10, qword [rbx + 0x38]",
            "cmp r13, r10",
            "mov r11, qword [r10]",
            "je 0x800035b",
            "mov r14, qword gs:[0]",
            "lea rax, [r14 + 0x4b8]",
            "mov r15, r11",
            "xor r12d, r12d",
            "mov qword [rbp - 0x38], rax",
            "nop",
            "cmp dword [0x080001b7], 1",
            "jg 0x8000363",
            "mov rax, qword [r10 + 8]",
            "mov rdx, qword [r10]",
            "movabs rsi, 0xdead000000100100",
            "movabs rdi, 0xdead000000200200",
            "add r12d, 1",
            "mov qword [rdx + 8], rax",
            "mov qword [rax], rdx",
            "mov qword [r10 + 8], rdi",
            "mov qword [r10], rsi",
            "mov rdi, r10",
            "call kfree",
            "mov rax, r15",
            "mov r10, r15",
            "mov r15, qword [r15]",
            "cmp r13, rax",
            "jne 0x80001b0",
            "mov eax, dword [rbx + 0xe0]",
            "cmp eax, r12d",
            "je 0x8000219",
            "mov ecx, dword [0x08000211]",
            "test ecx, ecx",
            "jns current_task",
            "lea rax, [rbx + 0x10]",
            "mov rdi, rax",
            "mov qword [rbp - 0x38], rax",
            "call mutex_lock",
            "mov r15, qword [rbx]",
            "cmp rbx, r15",
            "mov r13, qword [r15]",
            "je mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov qword [rbp - 0x48], rax",
            "add rax, 0x4b8",
            "mov qword [rbp - 0x50], rax",
            "mov rax, qword [rbp - 0x48]",
            "mov qword [rbp - 0x58], rax",
            "mov rax, qword [rbp - 0x50]",
            "mov qword [rbp - 0x60], rax",
            "jmp 0x800026b",
            "mov r13, rax",
            "mov rax, qword [r15 + 8]",
            "lea r14, [r15 + 0x10]",
            "movabs rdx, 0xdead000000200200",
            "mov rdi, r14",
            "mov qword [r13 + 8], rax",
            "mov qword [rax], r13",
            "movabs rax, 0xdead000000100100",
            "mov qword [r15], rax",
            "mov qword [r15 + 8], rdx",
            "call mutex_trylock",
            "test eax, eax",
            "jne 0x80002b6",
            "cmp dword [0x080002a8], 1",
            "jg 0x800040b",
            "mov rdi, r14",
            "call mutex_lock",
            "cmp dword [0x080002bd], 1",
            "jg 0x80003d6",
            "lea rdi, [r15 + 0x38]",
            "call cryptodev_cipher_deinit",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_deinit",
            "cmp dword [0x080002df], 1",
            "jg current_task",
            "mov rdi, qword [r15 + 0xc8]",
            "call kfree",
            "mov rdi, qword [r15 + 0xd0]",
            "call kfree",
            "mov rdi, r14",
            "call mutex_unlock",
            "mov rdi, r15",
            "mov r15, r13",
            "call kfree",
            "cmp rbx, r13",
            "mov rax, qword [r13]",
            "jne 0x8000268",
            "mov rdi, qword [rbp - 0x38]",
            "call mutex_unlock",
            "mov rdi, rbx",
            "call kfree",
            "cmp dword [0x08000335], 1",
            "mov rax, qword [rbp - 0x40]",
            "mov qword [rax + 0xd0], 0",
            "jg current_task",
            "add rsp, 0x58",
            "xor eax, eax",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "xor r12d, r12d",
            "jmp 0x8000200",
            "mov edx, dword [r14 + 0x318]",
            "mov rsi, qword [rbp - 0x38]",
            "mov r9, r10",
            "mov r8d, 0x207",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x68], r10",
            "call printk",
            "mov r10, qword [rbp - 0x68]",
            "jmp 0x80001bd",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [r15 + 0xb8]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x158",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80002e5",
            "mov rax, qword [rbp - 0x58]",
            "mov r9d, dword [r15 + 0xb0]",
            "mov r8d, 0x155",
            "mov rsi, qword [rbp - 0x60]",
            "mov rcx, 0",
            "mov rdi, 0",
            "mov edx, dword [rax + 0x318]",
            "xor eax, eax",
            "call printk",
            "jmp 0x80002c3",
            "mov rax, qword [rbp - 0x48]",
            "mov r9d, dword [r15 + 0xb0]",
            "mov r8d, 0x152",
            "mov rsi, qword [rbp - 0x50]",
            "mov rcx, 0",
            "mov rdi, 0",
            "mov edx, dword [rax + 0x318]",
            "xor eax, eax",
            "call printk",
            "jmp mutex_lock",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r9d, r12d",
            "mov r8d, 0x20f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8000219",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x21d",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800034a"
        ]
    },
    "unk.0x8000305": {
        "function_address": "0x08000305",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "sub rsp, 0x58",
            "mov rbx, qword [rsi + 0xd0]",
            "mov qword [rbp - 0x40], rsi",
            "test rbx, rbx",
            "je 0x800034a",
            "lea rdi, [rbx + 0xe8]",
            "lea r13, [rbx + 0x38]",
            "call cancel_work_sync",
            "mov rax, qword [rbx + 0x70]",
            "lea rdx, [rbx + 0x70]",
            "cmp rax, rdx",
            "je 0x8000158",
            "mov rcx, qword [rbx + 0x40]",
            "mov rdx, qword [rbx + 0x78]",
            "mov qword [rax + 8], rcx",
            "mov qword [rcx], rax",
            "mov qword [rdx], r13",
            "mov qword [rbx + 0x40], rdx",
            "mov rax, qword [rbx + 0xa8]",
            "lea rdx, [rbx + 0xa8]",
            "cmp rax, rdx",
            "je 0x8000184",
            "mov rcx, qword [rbx + 0x40]",
            "mov rdx, qword [rbx + 0xb0]",
            "mov qword [rax + 8], rcx",
            "mov qword [rcx], rax",
            "mov qword [rdx], r13",
            "mov qword [rbx + 0x40], rdx",
            "mov r10, qword [rbx + 0x38]",
            "cmp r13, r10",
            "mov r11, qword [r10]",
            "je 0x800035b",
            "mov r14, qword gs:[0]",
            "lea rax, [r14 + 0x4b8]",
            "mov r15, r11",
            "xor r12d, r12d",
            "mov qword [rbp - 0x38], rax",
            "nop",
            "cmp dword [0x080001b7], 1",
            "jg 0x8000363",
            "mov rax, qword [r10 + 8]",
            "mov rdx, qword [r10]",
            "movabs rsi, 0xdead000000100100",
            "movabs rdi, 0xdead000000200200",
            "add r12d, 1",
            "mov qword [rdx + 8], rax",
            "mov qword [rax], rdx",
            "mov qword [r10 + 8], rdi",
            "mov qword [r10], rsi",
            "mov rdi, r10",
            "call kfree",
            "mov rax, r15",
            "mov r10, r15",
            "mov r15, qword [r15]",
            "cmp r13, rax",
            "jne 0x80001b0",
            "mov eax, dword [rbx + 0xe0]",
            "cmp eax, r12d",
            "je 0x8000219",
            "mov ecx, dword [0x08000211]",
            "test ecx, ecx",
            "jns current_task",
            "lea rax, [rbx + 0x10]",
            "mov rdi, rax",
            "mov qword [rbp - 0x38], rax",
            "call mutex_lock",
            "mov r15, qword [rbx]",
            "cmp rbx, r15",
            "mov r13, qword [r15]",
            "je mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov qword [rbp - 0x48], rax",
            "add rax, 0x4b8",
            "mov qword [rbp - 0x50], rax",
            "mov rax, qword [rbp - 0x48]",
            "mov qword [rbp - 0x58], rax",
            "mov rax, qword [rbp - 0x50]",
            "mov qword [rbp - 0x60], rax",
            "jmp 0x800026b",
            "mov r13, rax",
            "mov rax, qword [r15 + 8]",
            "lea r14, [r15 + 0x10]",
            "movabs rdx, 0xdead000000200200",
            "mov rdi, r14",
            "mov qword [r13 + 8], rax",
            "mov qword [rax], r13",
            "movabs rax, 0xdead000000100100",
            "mov qword [r15], rax",
            "mov qword [r15 + 8], rdx",
            "call mutex_trylock",
            "test eax, eax",
            "jne 0x80002b6",
            "cmp dword [0x080002a8], 1",
            "jg 0x800040b",
            "mov rdi, r14",
            "call mutex_lock",
            "cmp dword [0x080002bd], 1",
            "jg 0x80003d6",
            "lea rdi, [r15 + 0x38]",
            "call cryptodev_cipher_deinit",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_deinit",
            "cmp dword [0x080002df], 1",
            "jg current_task",
            "mov rdi, qword [r15 + 0xc8]",
            "call kfree",
            "mov rdi, qword [r15 + 0xd0]",
            "call kfree",
            "mov rdi, r14",
            "call mutex_unlock",
            "mov rdi, r15",
            "mov r15, r13",
            "call kfree",
            "cmp rbx, r13",
            "mov rax, qword [r13]",
            "jne 0x8000268",
            "mov rdi, qword [rbp - 0x38]",
            "call mutex_unlock",
            "mov rdi, rbx",
            "call kfree",
            "cmp dword [0x08000335], 1",
            "mov rax, qword [rbp - 0x40]",
            "mov qword [rax + 0xd0], 0",
            "jg current_task",
            "add rsp, 0x58",
            "xor eax, eax",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "xor r12d, r12d",
            "jmp 0x8000200",
            "mov edx, dword [r14 + 0x318]",
            "mov rsi, qword [rbp - 0x38]",
            "mov r9, r10",
            "mov r8d, 0x207",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x68], r10",
            "call printk",
            "mov r10, qword [rbp - 0x68]",
            "jmp 0x80001bd",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [r15 + 0xb8]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x158",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80002e5",
            "mov rax, qword [rbp - 0x58]",
            "mov r9d, dword [r15 + 0xb0]",
            "mov r8d, 0x155",
            "mov rsi, qword [rbp - 0x60]",
            "mov rcx, 0",
            "mov rdi, 0",
            "mov edx, dword [rax + 0x318]",
            "xor eax, eax",
            "call printk",
            "jmp 0x80002c3",
            "mov rax, qword [rbp - 0x48]",
            "mov r9d, dword [r15 + 0xb0]",
            "mov r8d, 0x152",
            "mov rsi, qword [rbp - 0x50]",
            "mov rcx, 0",
            "mov rdi, 0",
            "mov edx, dword [rax + 0x318]",
            "xor eax, eax",
            "call printk",
            "jmp mutex_lock",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r9d, r12d",
            "mov r8d, 0x20f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8000219",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x21d",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800034a"
        ]
    },
    "unk.0x8000310": {
        "function_address": "0x08000310",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "sub rsp, 0x58",
            "mov rbx, qword [rsi + 0xd0]",
            "mov qword [rbp - 0x40], rsi",
            "test rbx, rbx",
            "je 0x800034a",
            "lea rdi, [rbx + 0xe8]",
            "lea r13, [rbx + 0x38]",
            "call cancel_work_sync",
            "mov rax, qword [rbx + 0x70]",
            "lea rdx, [rbx + 0x70]",
            "cmp rax, rdx",
            "je 0x8000158",
            "mov rcx, qword [rbx + 0x40]",
            "mov rdx, qword [rbx + 0x78]",
            "mov qword [rax + 8], rcx",
            "mov qword [rcx], rax",
            "mov qword [rdx], r13",
            "mov qword [rbx + 0x40], rdx",
            "mov rax, qword [rbx + 0xa8]",
            "lea rdx, [rbx + 0xa8]",
            "cmp rax, rdx",
            "je 0x8000184",
            "mov rcx, qword [rbx + 0x40]",
            "mov rdx, qword [rbx + 0xb0]",
            "mov qword [rax + 8], rcx",
            "mov qword [rcx], rax",
            "mov qword [rdx], r13",
            "mov qword [rbx + 0x40], rdx",
            "mov r10, qword [rbx + 0x38]",
            "cmp r13, r10",
            "mov r11, qword [r10]",
            "je 0x800035b",
            "mov r14, qword gs:[0]",
            "lea rax, [r14 + 0x4b8]",
            "mov r15, r11",
            "xor r12d, r12d",
            "mov qword [rbp - 0x38], rax",
            "nop",
            "cmp dword [0x080001b7], 1",
            "jg 0x8000363",
            "mov rax, qword [r10 + 8]",
            "mov rdx, qword [r10]",
            "movabs rsi, 0xdead000000100100",
            "movabs rdi, 0xdead000000200200",
            "add r12d, 1",
            "mov qword [rdx + 8], rax",
            "mov qword [rax], rdx",
            "mov qword [r10 + 8], rdi",
            "mov qword [r10], rsi",
            "mov rdi, r10",
            "call kfree",
            "mov rax, r15",
            "mov r10, r15",
            "mov r15, qword [r15]",
            "cmp r13, rax",
            "jne 0x80001b0",
            "mov eax, dword [rbx + 0xe0]",
            "cmp eax, r12d",
            "je 0x8000219",
            "mov ecx, dword [0x08000211]",
            "test ecx, ecx",
            "jns current_task",
            "lea rax, [rbx + 0x10]",
            "mov rdi, rax",
            "mov qword [rbp - 0x38], rax",
            "call mutex_lock",
            "mov r15, qword [rbx]",
            "cmp rbx, r15",
            "mov r13, qword [r15]",
            "je mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov qword [rbp - 0x48], rax",
            "add rax, 0x4b8",
            "mov qword [rbp - 0x50], rax",
            "mov rax, qword [rbp - 0x48]",
            "mov qword [rbp - 0x58], rax",
            "mov rax, qword [rbp - 0x50]",
            "mov qword [rbp - 0x60], rax",
            "jmp 0x800026b",
            "mov r13, rax",
            "mov rax, qword [r15 + 8]",
            "lea r14, [r15 + 0x10]",
            "movabs rdx, 0xdead000000200200",
            "mov rdi, r14",
            "mov qword [r13 + 8], rax",
            "mov qword [rax], r13",
            "movabs rax, 0xdead000000100100",
            "mov qword [r15], rax",
            "mov qword [r15 + 8], rdx",
            "call mutex_trylock",
            "test eax, eax",
            "jne 0x80002b6",
            "cmp dword [0x080002a8], 1",
            "jg 0x800040b",
            "mov rdi, r14",
            "call mutex_lock",
            "cmp dword [0x080002bd], 1",
            "jg 0x80003d6",
            "lea rdi, [r15 + 0x38]",
            "call cryptodev_cipher_deinit",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_deinit",
            "cmp dword [0x080002df], 1",
            "jg current_task",
            "mov rdi, qword [r15 + 0xc8]",
            "call kfree",
            "mov rdi, qword [r15 + 0xd0]",
            "call kfree",
            "mov rdi, r14",
            "call mutex_unlock",
            "mov rdi, r15",
            "mov r15, r13",
            "call kfree",
            "cmp rbx, r13",
            "mov rax, qword [r13]",
            "jne 0x8000268",
            "mov rdi, qword [rbp - 0x38]",
            "call mutex_unlock",
            "mov rdi, rbx",
            "call kfree",
            "cmp dword [0x08000335], 1",
            "mov rax, qword [rbp - 0x40]",
            "mov qword [rax + 0xd0], 0",
            "jg current_task",
            "add rsp, 0x58",
            "xor eax, eax",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "xor r12d, r12d",
            "jmp 0x8000200",
            "mov edx, dword [r14 + 0x318]",
            "mov rsi, qword [rbp - 0x38]",
            "mov r9, r10",
            "mov r8d, 0x207",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x68], r10",
            "call printk",
            "mov r10, qword [rbp - 0x68]",
            "jmp 0x80001bd",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [r15 + 0xb8]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x158",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80002e5",
            "mov rax, qword [rbp - 0x58]",
            "mov r9d, dword [r15 + 0xb0]",
            "mov r8d, 0x155",
            "mov rsi, qword [rbp - 0x60]",
            "mov rcx, 0",
            "mov rdi, 0",
            "mov edx, dword [rax + 0x318]",
            "xor eax, eax",
            "call printk",
            "jmp 0x80002c3",
            "mov rax, qword [rbp - 0x48]",
            "mov r9d, dword [r15 + 0xb0]",
            "mov r8d, 0x152",
            "mov rsi, qword [rbp - 0x50]",
            "mov rcx, 0",
            "mov rdi, 0",
            "mov edx, dword [rax + 0x318]",
            "xor eax, eax",
            "call printk",
            "jmp mutex_lock",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r9d, r12d",
            "mov r8d, 0x20f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8000219",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x21d",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800034a"
        ]
    },
    "unk.0x8000326": {
        "function_address": "0x08000326",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "sub rsp, 0x58",
            "mov rbx, qword [rsi + 0xd0]",
            "mov qword [rbp - 0x40], rsi",
            "test rbx, rbx",
            "je 0x800034a",
            "lea rdi, [rbx + 0xe8]",
            "lea r13, [rbx + 0x38]",
            "call cancel_work_sync",
            "mov rax, qword [rbx + 0x70]",
            "lea rdx, [rbx + 0x70]",
            "cmp rax, rdx",
            "je 0x8000158",
            "mov rcx, qword [rbx + 0x40]",
            "mov rdx, qword [rbx + 0x78]",
            "mov qword [rax + 8], rcx",
            "mov qword [rcx], rax",
            "mov qword [rdx], r13",
            "mov qword [rbx + 0x40], rdx",
            "mov rax, qword [rbx + 0xa8]",
            "lea rdx, [rbx + 0xa8]",
            "cmp rax, rdx",
            "je 0x8000184",
            "mov rcx, qword [rbx + 0x40]",
            "mov rdx, qword [rbx + 0xb0]",
            "mov qword [rax + 8], rcx",
            "mov qword [rcx], rax",
            "mov qword [rdx], r13",
            "mov qword [rbx + 0x40], rdx",
            "mov r10, qword [rbx + 0x38]",
            "cmp r13, r10",
            "mov r11, qword [r10]",
            "je 0x800035b",
            "mov r14, qword gs:[0]",
            "lea rax, [r14 + 0x4b8]",
            "mov r15, r11",
            "xor r12d, r12d",
            "mov qword [rbp - 0x38], rax",
            "nop",
            "cmp dword [0x080001b7], 1",
            "jg 0x8000363",
            "mov rax, qword [r10 + 8]",
            "mov rdx, qword [r10]",
            "movabs rsi, 0xdead000000100100",
            "movabs rdi, 0xdead000000200200",
            "add r12d, 1",
            "mov qword [rdx + 8], rax",
            "mov qword [rax], rdx",
            "mov qword [r10 + 8], rdi",
            "mov qword [r10], rsi",
            "mov rdi, r10",
            "call kfree",
            "mov rax, r15",
            "mov r10, r15",
            "mov r15, qword [r15]",
            "cmp r13, rax",
            "jne 0x80001b0",
            "mov eax, dword [rbx + 0xe0]",
            "cmp eax, r12d",
            "je 0x8000219",
            "mov ecx, dword [0x08000211]",
            "test ecx, ecx",
            "jns current_task",
            "lea rax, [rbx + 0x10]",
            "mov rdi, rax",
            "mov qword [rbp - 0x38], rax",
            "call mutex_lock",
            "mov r15, qword [rbx]",
            "cmp rbx, r15",
            "mov r13, qword [r15]",
            "je mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov qword [rbp - 0x48], rax",
            "add rax, 0x4b8",
            "mov qword [rbp - 0x50], rax",
            "mov rax, qword [rbp - 0x48]",
            "mov qword [rbp - 0x58], rax",
            "mov rax, qword [rbp - 0x50]",
            "mov qword [rbp - 0x60], rax",
            "jmp 0x800026b",
            "mov r13, rax",
            "mov rax, qword [r15 + 8]",
            "lea r14, [r15 + 0x10]",
            "movabs rdx, 0xdead000000200200",
            "mov rdi, r14",
            "mov qword [r13 + 8], rax",
            "mov qword [rax], r13",
            "movabs rax, 0xdead000000100100",
            "mov qword [r15], rax",
            "mov qword [r15 + 8], rdx",
            "call mutex_trylock",
            "test eax, eax",
            "jne 0x80002b6",
            "cmp dword [0x080002a8], 1",
            "jg 0x800040b",
            "mov rdi, r14",
            "call mutex_lock",
            "cmp dword [0x080002bd], 1",
            "jg 0x80003d6",
            "lea rdi, [r15 + 0x38]",
            "call cryptodev_cipher_deinit",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_deinit",
            "cmp dword [0x080002df], 1",
            "jg current_task",
            "mov rdi, qword [r15 + 0xc8]",
            "call kfree",
            "mov rdi, qword [r15 + 0xd0]",
            "call kfree",
            "mov rdi, r14",
            "call mutex_unlock",
            "mov rdi, r15",
            "mov r15, r13",
            "call kfree",
            "cmp rbx, r13",
            "mov rax, qword [r13]",
            "jne 0x8000268",
            "mov rdi, qword [rbp - 0x38]",
            "call mutex_unlock",
            "mov rdi, rbx",
            "call kfree",
            "cmp dword [0x08000335], 1",
            "mov rax, qword [rbp - 0x40]",
            "mov qword [rax + 0xd0], 0",
            "jg current_task",
            "add rsp, 0x58",
            "xor eax, eax",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "xor r12d, r12d",
            "jmp 0x8000200",
            "mov edx, dword [r14 + 0x318]",
            "mov rsi, qword [rbp - 0x38]",
            "mov r9, r10",
            "mov r8d, 0x207",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x68], r10",
            "call printk",
            "mov r10, qword [rbp - 0x68]",
            "jmp 0x80001bd",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [r15 + 0xb8]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x158",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80002e5",
            "mov rax, qword [rbp - 0x58]",
            "mov r9d, dword [r15 + 0xb0]",
            "mov r8d, 0x155",
            "mov rsi, qword [rbp - 0x60]",
            "mov rcx, 0",
            "mov rdi, 0",
            "mov edx, dword [rax + 0x318]",
            "xor eax, eax",
            "call printk",
            "jmp 0x80002c3",
            "mov rax, qword [rbp - 0x48]",
            "mov r9d, dword [r15 + 0xb0]",
            "mov r8d, 0x152",
            "mov rsi, qword [rbp - 0x50]",
            "mov rcx, 0",
            "mov rdi, 0",
            "mov edx, dword [rax + 0x318]",
            "xor eax, eax",
            "call printk",
            "jmp mutex_lock",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r9d, r12d",
            "mov r8d, 0x20f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8000219",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x21d",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800034a"
        ]
    },
    "unk.0x800032e": {
        "function_address": "0x0800032e",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "sub rsp, 0x58",
            "mov rbx, qword [rsi + 0xd0]",
            "mov qword [rbp - 0x40], rsi",
            "test rbx, rbx",
            "je 0x800034a",
            "lea rdi, [rbx + 0xe8]",
            "lea r13, [rbx + 0x38]",
            "call cancel_work_sync",
            "mov rax, qword [rbx + 0x70]",
            "lea rdx, [rbx + 0x70]",
            "cmp rax, rdx",
            "je 0x8000158",
            "mov rcx, qword [rbx + 0x40]",
            "mov rdx, qword [rbx + 0x78]",
            "mov qword [rax + 8], rcx",
            "mov qword [rcx], rax",
            "mov qword [rdx], r13",
            "mov qword [rbx + 0x40], rdx",
            "mov rax, qword [rbx + 0xa8]",
            "lea rdx, [rbx + 0xa8]",
            "cmp rax, rdx",
            "je 0x8000184",
            "mov rcx, qword [rbx + 0x40]",
            "mov rdx, qword [rbx + 0xb0]",
            "mov qword [rax + 8], rcx",
            "mov qword [rcx], rax",
            "mov qword [rdx], r13",
            "mov qword [rbx + 0x40], rdx",
            "mov r10, qword [rbx + 0x38]",
            "cmp r13, r10",
            "mov r11, qword [r10]",
            "je 0x800035b",
            "mov r14, qword gs:[0]",
            "lea rax, [r14 + 0x4b8]",
            "mov r15, r11",
            "xor r12d, r12d",
            "mov qword [rbp - 0x38], rax",
            "nop",
            "cmp dword [0x080001b7], 1",
            "jg 0x8000363",
            "mov rax, qword [r10 + 8]",
            "mov rdx, qword [r10]",
            "movabs rsi, 0xdead000000100100",
            "movabs rdi, 0xdead000000200200",
            "add r12d, 1",
            "mov qword [rdx + 8], rax",
            "mov qword [rax], rdx",
            "mov qword [r10 + 8], rdi",
            "mov qword [r10], rsi",
            "mov rdi, r10",
            "call kfree",
            "mov rax, r15",
            "mov r10, r15",
            "mov r15, qword [r15]",
            "cmp r13, rax",
            "jne 0x80001b0",
            "mov eax, dword [rbx + 0xe0]",
            "cmp eax, r12d",
            "je 0x8000219",
            "mov ecx, dword [0x08000211]",
            "test ecx, ecx",
            "jns current_task",
            "lea rax, [rbx + 0x10]",
            "mov rdi, rax",
            "mov qword [rbp - 0x38], rax",
            "call mutex_lock",
            "mov r15, qword [rbx]",
            "cmp rbx, r15",
            "mov r13, qword [r15]",
            "je mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov qword [rbp - 0x48], rax",
            "add rax, 0x4b8",
            "mov qword [rbp - 0x50], rax",
            "mov rax, qword [rbp - 0x48]",
            "mov qword [rbp - 0x58], rax",
            "mov rax, qword [rbp - 0x50]",
            "mov qword [rbp - 0x60], rax",
            "jmp 0x800026b",
            "mov r13, rax",
            "mov rax, qword [r15 + 8]",
            "lea r14, [r15 + 0x10]",
            "movabs rdx, 0xdead000000200200",
            "mov rdi, r14",
            "mov qword [r13 + 8], rax",
            "mov qword [rax], r13",
            "movabs rax, 0xdead000000100100",
            "mov qword [r15], rax",
            "mov qword [r15 + 8], rdx",
            "call mutex_trylock",
            "test eax, eax",
            "jne 0x80002b6",
            "cmp dword [0x080002a8], 1",
            "jg 0x800040b",
            "mov rdi, r14",
            "call mutex_lock",
            "cmp dword [0x080002bd], 1",
            "jg 0x80003d6",
            "lea rdi, [r15 + 0x38]",
            "call cryptodev_cipher_deinit",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_deinit",
            "cmp dword [0x080002df], 1",
            "jg current_task",
            "mov rdi, qword [r15 + 0xc8]",
            "call kfree",
            "mov rdi, qword [r15 + 0xd0]",
            "call kfree",
            "mov rdi, r14",
            "call mutex_unlock",
            "mov rdi, r15",
            "mov r15, r13",
            "call kfree",
            "cmp rbx, r13",
            "mov rax, qword [r13]",
            "jne 0x8000268",
            "mov rdi, qword [rbp - 0x38]",
            "call mutex_unlock",
            "mov rdi, rbx",
            "call kfree",
            "cmp dword [0x08000335], 1",
            "mov rax, qword [rbp - 0x40]",
            "mov qword [rax + 0xd0], 0",
            "jg current_task",
            "add rsp, 0x58",
            "xor eax, eax",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "xor r12d, r12d",
            "jmp 0x8000200",
            "mov edx, dword [r14 + 0x318]",
            "mov rsi, qword [rbp - 0x38]",
            "mov r9, r10",
            "mov r8d, 0x207",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x68], r10",
            "call printk",
            "mov r10, qword [rbp - 0x68]",
            "jmp 0x80001bd",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [r15 + 0xb8]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x158",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80002e5",
            "mov rax, qword [rbp - 0x58]",
            "mov r9d, dword [r15 + 0xb0]",
            "mov r8d, 0x155",
            "mov rsi, qword [rbp - 0x60]",
            "mov rcx, 0",
            "mov rdi, 0",
            "mov edx, dword [rax + 0x318]",
            "xor eax, eax",
            "call printk",
            "jmp 0x80002c3",
            "mov rax, qword [rbp - 0x48]",
            "mov r9d, dword [r15 + 0xb0]",
            "mov r8d, 0x152",
            "mov rsi, qword [rbp - 0x50]",
            "mov rcx, 0",
            "mov rdi, 0",
            "mov edx, dword [rax + 0x318]",
            "xor eax, eax",
            "call printk",
            "jmp mutex_lock",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r9d, r12d",
            "mov r8d, 0x20f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8000219",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x21d",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800034a"
        ]
    },
    "unk.0x8000390": {
        "function_address": "0x08000390",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "sub rsp, 0x58",
            "mov rbx, qword [rsi + 0xd0]",
            "mov qword [rbp - 0x40], rsi",
            "test rbx, rbx",
            "je 0x800034a",
            "lea rdi, [rbx + 0xe8]",
            "lea r13, [rbx + 0x38]",
            "call cancel_work_sync",
            "mov rax, qword [rbx + 0x70]",
            "lea rdx, [rbx + 0x70]",
            "cmp rax, rdx",
            "je 0x8000158",
            "mov rcx, qword [rbx + 0x40]",
            "mov rdx, qword [rbx + 0x78]",
            "mov qword [rax + 8], rcx",
            "mov qword [rcx], rax",
            "mov qword [rdx], r13",
            "mov qword [rbx + 0x40], rdx",
            "mov rax, qword [rbx + 0xa8]",
            "lea rdx, [rbx + 0xa8]",
            "cmp rax, rdx",
            "je 0x8000184",
            "mov rcx, qword [rbx + 0x40]",
            "mov rdx, qword [rbx + 0xb0]",
            "mov qword [rax + 8], rcx",
            "mov qword [rcx], rax",
            "mov qword [rdx], r13",
            "mov qword [rbx + 0x40], rdx",
            "mov r10, qword [rbx + 0x38]",
            "cmp r13, r10",
            "mov r11, qword [r10]",
            "je 0x800035b",
            "mov r14, qword gs:[0]",
            "lea rax, [r14 + 0x4b8]",
            "mov r15, r11",
            "xor r12d, r12d",
            "mov qword [rbp - 0x38], rax",
            "nop",
            "cmp dword [0x080001b7], 1",
            "jg 0x8000363",
            "mov rax, qword [r10 + 8]",
            "mov rdx, qword [r10]",
            "movabs rsi, 0xdead000000100100",
            "movabs rdi, 0xdead000000200200",
            "add r12d, 1",
            "mov qword [rdx + 8], rax",
            "mov qword [rax], rdx",
            "mov qword [r10 + 8], rdi",
            "mov qword [r10], rsi",
            "mov rdi, r10",
            "call kfree",
            "mov rax, r15",
            "mov r10, r15",
            "mov r15, qword [r15]",
            "cmp r13, rax",
            "jne 0x80001b0",
            "mov eax, dword [rbx + 0xe0]",
            "cmp eax, r12d",
            "je 0x8000219",
            "mov ecx, dword [0x08000211]",
            "test ecx, ecx",
            "jns current_task",
            "lea rax, [rbx + 0x10]",
            "mov rdi, rax",
            "mov qword [rbp - 0x38], rax",
            "call mutex_lock",
            "mov r15, qword [rbx]",
            "cmp rbx, r15",
            "mov r13, qword [r15]",
            "je mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov qword [rbp - 0x48], rax",
            "add rax, 0x4b8",
            "mov qword [rbp - 0x50], rax",
            "mov rax, qword [rbp - 0x48]",
            "mov qword [rbp - 0x58], rax",
            "mov rax, qword [rbp - 0x50]",
            "mov qword [rbp - 0x60], rax",
            "jmp 0x800026b",
            "mov r13, rax",
            "mov rax, qword [r15 + 8]",
            "lea r14, [r15 + 0x10]",
            "movabs rdx, 0xdead000000200200",
            "mov rdi, r14",
            "mov qword [r13 + 8], rax",
            "mov qword [rax], r13",
            "movabs rax, 0xdead000000100100",
            "mov qword [r15], rax",
            "mov qword [r15 + 8], rdx",
            "call mutex_trylock",
            "test eax, eax",
            "jne 0x80002b6",
            "cmp dword [0x080002a8], 1",
            "jg 0x800040b",
            "mov rdi, r14",
            "call mutex_lock",
            "cmp dword [0x080002bd], 1",
            "jg 0x80003d6",
            "lea rdi, [r15 + 0x38]",
            "call cryptodev_cipher_deinit",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_deinit",
            "cmp dword [0x080002df], 1",
            "jg current_task",
            "mov rdi, qword [r15 + 0xc8]",
            "call kfree",
            "mov rdi, qword [r15 + 0xd0]",
            "call kfree",
            "mov rdi, r14",
            "call mutex_unlock",
            "mov rdi, r15",
            "mov r15, r13",
            "call kfree",
            "cmp rbx, r13",
            "mov rax, qword [r13]",
            "jne 0x8000268",
            "mov rdi, qword [rbp - 0x38]",
            "call mutex_unlock",
            "mov rdi, rbx",
            "call kfree",
            "cmp dword [0x08000335], 1",
            "mov rax, qword [rbp - 0x40]",
            "mov qword [rax + 0xd0], 0",
            "jg current_task",
            "add rsp, 0x58",
            "xor eax, eax",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "xor r12d, r12d",
            "jmp 0x8000200",
            "mov edx, dword [r14 + 0x318]",
            "mov rsi, qword [rbp - 0x38]",
            "mov r9, r10",
            "mov r8d, 0x207",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x68], r10",
            "call printk",
            "mov r10, qword [rbp - 0x68]",
            "jmp 0x80001bd",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [r15 + 0xb8]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x158",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80002e5",
            "mov rax, qword [rbp - 0x58]",
            "mov r9d, dword [r15 + 0xb0]",
            "mov r8d, 0x155",
            "mov rsi, qword [rbp - 0x60]",
            "mov rcx, 0",
            "mov rdi, 0",
            "mov edx, dword [rax + 0x318]",
            "xor eax, eax",
            "call printk",
            "jmp 0x80002c3",
            "mov rax, qword [rbp - 0x48]",
            "mov r9d, dword [r15 + 0xb0]",
            "mov r8d, 0x152",
            "mov rsi, qword [rbp - 0x50]",
            "mov rcx, 0",
            "mov rdi, 0",
            "mov edx, dword [rax + 0x318]",
            "xor eax, eax",
            "call printk",
            "jmp mutex_lock",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r9d, r12d",
            "mov r8d, 0x20f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8000219",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x21d",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800034a"
        ]
    },
    "unk.0x80003d1": {
        "function_address": "0x080003d1",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "sub rsp, 0x58",
            "mov rbx, qword [rsi + 0xd0]",
            "mov qword [rbp - 0x40], rsi",
            "test rbx, rbx",
            "je 0x800034a",
            "lea rdi, [rbx + 0xe8]",
            "lea r13, [rbx + 0x38]",
            "call cancel_work_sync",
            "mov rax, qword [rbx + 0x70]",
            "lea rdx, [rbx + 0x70]",
            "cmp rax, rdx",
            "je 0x8000158",
            "mov rcx, qword [rbx + 0x40]",
            "mov rdx, qword [rbx + 0x78]",
            "mov qword [rax + 8], rcx",
            "mov qword [rcx], rax",
            "mov qword [rdx], r13",
            "mov qword [rbx + 0x40], rdx",
            "mov rax, qword [rbx + 0xa8]",
            "lea rdx, [rbx + 0xa8]",
            "cmp rax, rdx",
            "je 0x8000184",
            "mov rcx, qword [rbx + 0x40]",
            "mov rdx, qword [rbx + 0xb0]",
            "mov qword [rax + 8], rcx",
            "mov qword [rcx], rax",
            "mov qword [rdx], r13",
            "mov qword [rbx + 0x40], rdx",
            "mov r10, qword [rbx + 0x38]",
            "cmp r13, r10",
            "mov r11, qword [r10]",
            "je 0x800035b",
            "mov r14, qword gs:[0]",
            "lea rax, [r14 + 0x4b8]",
            "mov r15, r11",
            "xor r12d, r12d",
            "mov qword [rbp - 0x38], rax",
            "nop",
            "cmp dword [0x080001b7], 1",
            "jg 0x8000363",
            "mov rax, qword [r10 + 8]",
            "mov rdx, qword [r10]",
            "movabs rsi, 0xdead000000100100",
            "movabs rdi, 0xdead000000200200",
            "add r12d, 1",
            "mov qword [rdx + 8], rax",
            "mov qword [rax], rdx",
            "mov qword [r10 + 8], rdi",
            "mov qword [r10], rsi",
            "mov rdi, r10",
            "call kfree",
            "mov rax, r15",
            "mov r10, r15",
            "mov r15, qword [r15]",
            "cmp r13, rax",
            "jne 0x80001b0",
            "mov eax, dword [rbx + 0xe0]",
            "cmp eax, r12d",
            "je 0x8000219",
            "mov ecx, dword [0x08000211]",
            "test ecx, ecx",
            "jns current_task",
            "lea rax, [rbx + 0x10]",
            "mov rdi, rax",
            "mov qword [rbp - 0x38], rax",
            "call mutex_lock",
            "mov r15, qword [rbx]",
            "cmp rbx, r15",
            "mov r13, qword [r15]",
            "je mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov qword [rbp - 0x48], rax",
            "add rax, 0x4b8",
            "mov qword [rbp - 0x50], rax",
            "mov rax, qword [rbp - 0x48]",
            "mov qword [rbp - 0x58], rax",
            "mov rax, qword [rbp - 0x50]",
            "mov qword [rbp - 0x60], rax",
            "jmp 0x800026b",
            "mov r13, rax",
            "mov rax, qword [r15 + 8]",
            "lea r14, [r15 + 0x10]",
            "movabs rdx, 0xdead000000200200",
            "mov rdi, r14",
            "mov qword [r13 + 8], rax",
            "mov qword [rax], r13",
            "movabs rax, 0xdead000000100100",
            "mov qword [r15], rax",
            "mov qword [r15 + 8], rdx",
            "call mutex_trylock",
            "test eax, eax",
            "jne 0x80002b6",
            "cmp dword [0x080002a8], 1",
            "jg 0x800040b",
            "mov rdi, r14",
            "call mutex_lock",
            "cmp dword [0x080002bd], 1",
            "jg 0x80003d6",
            "lea rdi, [r15 + 0x38]",
            "call cryptodev_cipher_deinit",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_deinit",
            "cmp dword [0x080002df], 1",
            "jg current_task",
            "mov rdi, qword [r15 + 0xc8]",
            "call kfree",
            "mov rdi, qword [r15 + 0xd0]",
            "call kfree",
            "mov rdi, r14",
            "call mutex_unlock",
            "mov rdi, r15",
            "mov r15, r13",
            "call kfree",
            "cmp rbx, r13",
            "mov rax, qword [r13]",
            "jne 0x8000268",
            "mov rdi, qword [rbp - 0x38]",
            "call mutex_unlock",
            "mov rdi, rbx",
            "call kfree",
            "cmp dword [0x08000335], 1",
            "mov rax, qword [rbp - 0x40]",
            "mov qword [rax + 0xd0], 0",
            "jg current_task",
            "add rsp, 0x58",
            "xor eax, eax",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "xor r12d, r12d",
            "jmp 0x8000200",
            "mov edx, dword [r14 + 0x318]",
            "mov rsi, qword [rbp - 0x38]",
            "mov r9, r10",
            "mov r8d, 0x207",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x68], r10",
            "call printk",
            "mov r10, qword [rbp - 0x68]",
            "jmp 0x80001bd",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [r15 + 0xb8]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x158",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80002e5",
            "mov rax, qword [rbp - 0x58]",
            "mov r9d, dword [r15 + 0xb0]",
            "mov r8d, 0x155",
            "mov rsi, qword [rbp - 0x60]",
            "mov rcx, 0",
            "mov rdi, 0",
            "mov edx, dword [rax + 0x318]",
            "xor eax, eax",
            "call printk",
            "jmp 0x80002c3",
            "mov rax, qword [rbp - 0x48]",
            "mov r9d, dword [r15 + 0xb0]",
            "mov r8d, 0x152",
            "mov rsi, qword [rbp - 0x50]",
            "mov rcx, 0",
            "mov rdi, 0",
            "mov edx, dword [rax + 0x318]",
            "xor eax, eax",
            "call printk",
            "jmp mutex_lock",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r9d, r12d",
            "mov r8d, 0x20f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8000219",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x21d",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800034a"
        ]
    },
    "unk.0x8000406": {
        "function_address": "0x08000406",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "sub rsp, 0x58",
            "mov rbx, qword [rsi + 0xd0]",
            "mov qword [rbp - 0x40], rsi",
            "test rbx, rbx",
            "je 0x800034a",
            "lea rdi, [rbx + 0xe8]",
            "lea r13, [rbx + 0x38]",
            "call cancel_work_sync",
            "mov rax, qword [rbx + 0x70]",
            "lea rdx, [rbx + 0x70]",
            "cmp rax, rdx",
            "je 0x8000158",
            "mov rcx, qword [rbx + 0x40]",
            "mov rdx, qword [rbx + 0x78]",
            "mov qword [rax + 8], rcx",
            "mov qword [rcx], rax",
            "mov qword [rdx], r13",
            "mov qword [rbx + 0x40], rdx",
            "mov rax, qword [rbx + 0xa8]",
            "lea rdx, [rbx + 0xa8]",
            "cmp rax, rdx",
            "je 0x8000184",
            "mov rcx, qword [rbx + 0x40]",
            "mov rdx, qword [rbx + 0xb0]",
            "mov qword [rax + 8], rcx",
            "mov qword [rcx], rax",
            "mov qword [rdx], r13",
            "mov qword [rbx + 0x40], rdx",
            "mov r10, qword [rbx + 0x38]",
            "cmp r13, r10",
            "mov r11, qword [r10]",
            "je 0x800035b",
            "mov r14, qword gs:[0]",
            "lea rax, [r14 + 0x4b8]",
            "mov r15, r11",
            "xor r12d, r12d",
            "mov qword [rbp - 0x38], rax",
            "nop",
            "cmp dword [0x080001b7], 1",
            "jg 0x8000363",
            "mov rax, qword [r10 + 8]",
            "mov rdx, qword [r10]",
            "movabs rsi, 0xdead000000100100",
            "movabs rdi, 0xdead000000200200",
            "add r12d, 1",
            "mov qword [rdx + 8], rax",
            "mov qword [rax], rdx",
            "mov qword [r10 + 8], rdi",
            "mov qword [r10], rsi",
            "mov rdi, r10",
            "call kfree",
            "mov rax, r15",
            "mov r10, r15",
            "mov r15, qword [r15]",
            "cmp r13, rax",
            "jne 0x80001b0",
            "mov eax, dword [rbx + 0xe0]",
            "cmp eax, r12d",
            "je 0x8000219",
            "mov ecx, dword [0x08000211]",
            "test ecx, ecx",
            "jns current_task",
            "lea rax, [rbx + 0x10]",
            "mov rdi, rax",
            "mov qword [rbp - 0x38], rax",
            "call mutex_lock",
            "mov r15, qword [rbx]",
            "cmp rbx, r15",
            "mov r13, qword [r15]",
            "je mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov qword [rbp - 0x48], rax",
            "add rax, 0x4b8",
            "mov qword [rbp - 0x50], rax",
            "mov rax, qword [rbp - 0x48]",
            "mov qword [rbp - 0x58], rax",
            "mov rax, qword [rbp - 0x50]",
            "mov qword [rbp - 0x60], rax",
            "jmp 0x800026b",
            "mov r13, rax",
            "mov rax, qword [r15 + 8]",
            "lea r14, [r15 + 0x10]",
            "movabs rdx, 0xdead000000200200",
            "mov rdi, r14",
            "mov qword [r13 + 8], rax",
            "mov qword [rax], r13",
            "movabs rax, 0xdead000000100100",
            "mov qword [r15], rax",
            "mov qword [r15 + 8], rdx",
            "call mutex_trylock",
            "test eax, eax",
            "jne 0x80002b6",
            "cmp dword [0x080002a8], 1",
            "jg 0x800040b",
            "mov rdi, r14",
            "call mutex_lock",
            "cmp dword [0x080002bd], 1",
            "jg 0x80003d6",
            "lea rdi, [r15 + 0x38]",
            "call cryptodev_cipher_deinit",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_deinit",
            "cmp dword [0x080002df], 1",
            "jg current_task",
            "mov rdi, qword [r15 + 0xc8]",
            "call kfree",
            "mov rdi, qword [r15 + 0xd0]",
            "call kfree",
            "mov rdi, r14",
            "call mutex_unlock",
            "mov rdi, r15",
            "mov r15, r13",
            "call kfree",
            "cmp rbx, r13",
            "mov rax, qword [r13]",
            "jne 0x8000268",
            "mov rdi, qword [rbp - 0x38]",
            "call mutex_unlock",
            "mov rdi, rbx",
            "call kfree",
            "cmp dword [0x08000335], 1",
            "mov rax, qword [rbp - 0x40]",
            "mov qword [rax + 0xd0], 0",
            "jg current_task",
            "add rsp, 0x58",
            "xor eax, eax",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "xor r12d, r12d",
            "jmp 0x8000200",
            "mov edx, dword [r14 + 0x318]",
            "mov rsi, qword [rbp - 0x38]",
            "mov r9, r10",
            "mov r8d, 0x207",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x68], r10",
            "call printk",
            "mov r10, qword [rbp - 0x68]",
            "jmp 0x80001bd",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [r15 + 0xb8]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x158",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80002e5",
            "mov rax, qword [rbp - 0x58]",
            "mov r9d, dword [r15 + 0xb0]",
            "mov r8d, 0x155",
            "mov rsi, qword [rbp - 0x60]",
            "mov rcx, 0",
            "mov rdi, 0",
            "mov edx, dword [rax + 0x318]",
            "xor eax, eax",
            "call printk",
            "jmp 0x80002c3",
            "mov rax, qword [rbp - 0x48]",
            "mov r9d, dword [r15 + 0xb0]",
            "mov r8d, 0x152",
            "mov rsi, qword [rbp - 0x50]",
            "mov rcx, 0",
            "mov rdi, 0",
            "mov edx, dword [rax + 0x318]",
            "xor eax, eax",
            "call printk",
            "jmp mutex_lock",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r9d, r12d",
            "mov r8d, 0x20f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8000219",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x21d",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800034a"
        ]
    },
    "unk.0x800043b": {
        "function_address": "0x0800043b",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "sub rsp, 0x58",
            "mov rbx, qword [rsi + 0xd0]",
            "mov qword [rbp - 0x40], rsi",
            "test rbx, rbx",
            "je 0x800034a",
            "lea rdi, [rbx + 0xe8]",
            "lea r13, [rbx + 0x38]",
            "call cancel_work_sync",
            "mov rax, qword [rbx + 0x70]",
            "lea rdx, [rbx + 0x70]",
            "cmp rax, rdx",
            "je 0x8000158",
            "mov rcx, qword [rbx + 0x40]",
            "mov rdx, qword [rbx + 0x78]",
            "mov qword [rax + 8], rcx",
            "mov qword [rcx], rax",
            "mov qword [rdx], r13",
            "mov qword [rbx + 0x40], rdx",
            "mov rax, qword [rbx + 0xa8]",
            "lea rdx, [rbx + 0xa8]",
            "cmp rax, rdx",
            "je 0x8000184",
            "mov rcx, qword [rbx + 0x40]",
            "mov rdx, qword [rbx + 0xb0]",
            "mov qword [rax + 8], rcx",
            "mov qword [rcx], rax",
            "mov qword [rdx], r13",
            "mov qword [rbx + 0x40], rdx",
            "mov r10, qword [rbx + 0x38]",
            "cmp r13, r10",
            "mov r11, qword [r10]",
            "je 0x800035b",
            "mov r14, qword gs:[0]",
            "lea rax, [r14 + 0x4b8]",
            "mov r15, r11",
            "xor r12d, r12d",
            "mov qword [rbp - 0x38], rax",
            "nop",
            "cmp dword [0x080001b7], 1",
            "jg 0x8000363",
            "mov rax, qword [r10 + 8]",
            "mov rdx, qword [r10]",
            "movabs rsi, 0xdead000000100100",
            "movabs rdi, 0xdead000000200200",
            "add r12d, 1",
            "mov qword [rdx + 8], rax",
            "mov qword [rax], rdx",
            "mov qword [r10 + 8], rdi",
            "mov qword [r10], rsi",
            "mov rdi, r10",
            "call kfree",
            "mov rax, r15",
            "mov r10, r15",
            "mov r15, qword [r15]",
            "cmp r13, rax",
            "jne 0x80001b0",
            "mov eax, dword [rbx + 0xe0]",
            "cmp eax, r12d",
            "je 0x8000219",
            "mov ecx, dword [0x08000211]",
            "test ecx, ecx",
            "jns current_task",
            "lea rax, [rbx + 0x10]",
            "mov rdi, rax",
            "mov qword [rbp - 0x38], rax",
            "call mutex_lock",
            "mov r15, qword [rbx]",
            "cmp rbx, r15",
            "mov r13, qword [r15]",
            "je mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov qword [rbp - 0x48], rax",
            "add rax, 0x4b8",
            "mov qword [rbp - 0x50], rax",
            "mov rax, qword [rbp - 0x48]",
            "mov qword [rbp - 0x58], rax",
            "mov rax, qword [rbp - 0x50]",
            "mov qword [rbp - 0x60], rax",
            "jmp 0x800026b",
            "mov r13, rax",
            "mov rax, qword [r15 + 8]",
            "lea r14, [r15 + 0x10]",
            "movabs rdx, 0xdead000000200200",
            "mov rdi, r14",
            "mov qword [r13 + 8], rax",
            "mov qword [rax], r13",
            "movabs rax, 0xdead000000100100",
            "mov qword [r15], rax",
            "mov qword [r15 + 8], rdx",
            "call mutex_trylock",
            "test eax, eax",
            "jne 0x80002b6",
            "cmp dword [0x080002a8], 1",
            "jg 0x800040b",
            "mov rdi, r14",
            "call mutex_lock",
            "cmp dword [0x080002bd], 1",
            "jg 0x80003d6",
            "lea rdi, [r15 + 0x38]",
            "call cryptodev_cipher_deinit",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_deinit",
            "cmp dword [0x080002df], 1",
            "jg current_task",
            "mov rdi, qword [r15 + 0xc8]",
            "call kfree",
            "mov rdi, qword [r15 + 0xd0]",
            "call kfree",
            "mov rdi, r14",
            "call mutex_unlock",
            "mov rdi, r15",
            "mov r15, r13",
            "call kfree",
            "cmp rbx, r13",
            "mov rax, qword [r13]",
            "jne 0x8000268",
            "mov rdi, qword [rbp - 0x38]",
            "call mutex_unlock",
            "mov rdi, rbx",
            "call kfree",
            "cmp dword [0x08000335], 1",
            "mov rax, qword [rbp - 0x40]",
            "mov qword [rax + 0xd0], 0",
            "jg current_task",
            "add rsp, 0x58",
            "xor eax, eax",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "xor r12d, r12d",
            "jmp 0x8000200",
            "mov edx, dword [r14 + 0x318]",
            "mov rsi, qword [rbp - 0x38]",
            "mov r9, r10",
            "mov r8d, 0x207",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x68], r10",
            "call printk",
            "mov r10, qword [rbp - 0x68]",
            "jmp 0x80001bd",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [r15 + 0xb8]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x158",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80002e5",
            "mov rax, qword [rbp - 0x58]",
            "mov r9d, dword [r15 + 0xb0]",
            "mov r8d, 0x155",
            "mov rsi, qword [rbp - 0x60]",
            "mov rcx, 0",
            "mov rdi, 0",
            "mov edx, dword [rax + 0x318]",
            "xor eax, eax",
            "call printk",
            "jmp 0x80002c3",
            "mov rax, qword [rbp - 0x48]",
            "mov r9d, dword [r15 + 0xb0]",
            "mov r8d, 0x152",
            "mov rsi, qword [rbp - 0x50]",
            "mov rcx, 0",
            "mov rdi, 0",
            "mov edx, dword [rax + 0x318]",
            "xor eax, eax",
            "call printk",
            "jmp mutex_lock",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r9d, r12d",
            "mov r8d, 0x20f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8000219",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x21d",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800034a"
        ]
    },
    "unk.0x8000477": {
        "function_address": "0x08000477",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "sub rsp, 0x58",
            "mov rbx, qword [rsi + 0xd0]",
            "mov qword [rbp - 0x40], rsi",
            "test rbx, rbx",
            "je 0x800034a",
            "lea rdi, [rbx + 0xe8]",
            "lea r13, [rbx + 0x38]",
            "call cancel_work_sync",
            "mov rax, qword [rbx + 0x70]",
            "lea rdx, [rbx + 0x70]",
            "cmp rax, rdx",
            "je 0x8000158",
            "mov rcx, qword [rbx + 0x40]",
            "mov rdx, qword [rbx + 0x78]",
            "mov qword [rax + 8], rcx",
            "mov qword [rcx], rax",
            "mov qword [rdx], r13",
            "mov qword [rbx + 0x40], rdx",
            "mov rax, qword [rbx + 0xa8]",
            "lea rdx, [rbx + 0xa8]",
            "cmp rax, rdx",
            "je 0x8000184",
            "mov rcx, qword [rbx + 0x40]",
            "mov rdx, qword [rbx + 0xb0]",
            "mov qword [rax + 8], rcx",
            "mov qword [rcx], rax",
            "mov qword [rdx], r13",
            "mov qword [rbx + 0x40], rdx",
            "mov r10, qword [rbx + 0x38]",
            "cmp r13, r10",
            "mov r11, qword [r10]",
            "je 0x800035b",
            "mov r14, qword gs:[0]",
            "lea rax, [r14 + 0x4b8]",
            "mov r15, r11",
            "xor r12d, r12d",
            "mov qword [rbp - 0x38], rax",
            "nop",
            "cmp dword [0x080001b7], 1",
            "jg 0x8000363",
            "mov rax, qword [r10 + 8]",
            "mov rdx, qword [r10]",
            "movabs rsi, 0xdead000000100100",
            "movabs rdi, 0xdead000000200200",
            "add r12d, 1",
            "mov qword [rdx + 8], rax",
            "mov qword [rax], rdx",
            "mov qword [r10 + 8], rdi",
            "mov qword [r10], rsi",
            "mov rdi, r10",
            "call kfree",
            "mov rax, r15",
            "mov r10, r15",
            "mov r15, qword [r15]",
            "cmp r13, rax",
            "jne 0x80001b0",
            "mov eax, dword [rbx + 0xe0]",
            "cmp eax, r12d",
            "je 0x8000219",
            "mov ecx, dword [0x08000211]",
            "test ecx, ecx",
            "jns current_task",
            "lea rax, [rbx + 0x10]",
            "mov rdi, rax",
            "mov qword [rbp - 0x38], rax",
            "call mutex_lock",
            "mov r15, qword [rbx]",
            "cmp rbx, r15",
            "mov r13, qword [r15]",
            "je mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov qword [rbp - 0x48], rax",
            "add rax, 0x4b8",
            "mov qword [rbp - 0x50], rax",
            "mov rax, qword [rbp - 0x48]",
            "mov qword [rbp - 0x58], rax",
            "mov rax, qword [rbp - 0x50]",
            "mov qword [rbp - 0x60], rax",
            "jmp 0x800026b",
            "mov r13, rax",
            "mov rax, qword [r15 + 8]",
            "lea r14, [r15 + 0x10]",
            "movabs rdx, 0xdead000000200200",
            "mov rdi, r14",
            "mov qword [r13 + 8], rax",
            "mov qword [rax], r13",
            "movabs rax, 0xdead000000100100",
            "mov qword [r15], rax",
            "mov qword [r15 + 8], rdx",
            "call mutex_trylock",
            "test eax, eax",
            "jne 0x80002b6",
            "cmp dword [0x080002a8], 1",
            "jg 0x800040b",
            "mov rdi, r14",
            "call mutex_lock",
            "cmp dword [0x080002bd], 1",
            "jg 0x80003d6",
            "lea rdi, [r15 + 0x38]",
            "call cryptodev_cipher_deinit",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_deinit",
            "cmp dword [0x080002df], 1",
            "jg current_task",
            "mov rdi, qword [r15 + 0xc8]",
            "call kfree",
            "mov rdi, qword [r15 + 0xd0]",
            "call kfree",
            "mov rdi, r14",
            "call mutex_unlock",
            "mov rdi, r15",
            "mov r15, r13",
            "call kfree",
            "cmp rbx, r13",
            "mov rax, qword [r13]",
            "jne 0x8000268",
            "mov rdi, qword [rbp - 0x38]",
            "call mutex_unlock",
            "mov rdi, rbx",
            "call kfree",
            "cmp dword [0x08000335], 1",
            "mov rax, qword [rbp - 0x40]",
            "mov qword [rax + 0xd0], 0",
            "jg current_task",
            "add rsp, 0x58",
            "xor eax, eax",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "xor r12d, r12d",
            "jmp 0x8000200",
            "mov edx, dword [r14 + 0x318]",
            "mov rsi, qword [rbp - 0x38]",
            "mov r9, r10",
            "mov r8d, 0x207",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x68], r10",
            "call printk",
            "mov r10, qword [rbp - 0x68]",
            "jmp 0x80001bd",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [r15 + 0xb8]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x158",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80002e5",
            "mov rax, qword [rbp - 0x58]",
            "mov r9d, dword [r15 + 0xb0]",
            "mov r8d, 0x155",
            "mov rsi, qword [rbp - 0x60]",
            "mov rcx, 0",
            "mov rdi, 0",
            "mov edx, dword [rax + 0x318]",
            "xor eax, eax",
            "call printk",
            "jmp 0x80002c3",
            "mov rax, qword [rbp - 0x48]",
            "mov r9d, dword [r15 + 0xb0]",
            "mov r8d, 0x152",
            "mov rsi, qword [rbp - 0x50]",
            "mov rcx, 0",
            "mov rdi, 0",
            "mov edx, dword [rax + 0x318]",
            "xor eax, eax",
            "call printk",
            "jmp mutex_lock",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r9d, r12d",
            "mov r8d, 0x20f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8000219",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x21d",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800034a"
        ]
    },
    "unk.0x80004b0": {
        "function_address": "0x080004b0",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "sub rsp, 0x58",
            "mov rbx, qword [rsi + 0xd0]",
            "mov qword [rbp - 0x40], rsi",
            "test rbx, rbx",
            "je 0x800034a",
            "lea rdi, [rbx + 0xe8]",
            "lea r13, [rbx + 0x38]",
            "call cancel_work_sync",
            "mov rax, qword [rbx + 0x70]",
            "lea rdx, [rbx + 0x70]",
            "cmp rax, rdx",
            "je 0x8000158",
            "mov rcx, qword [rbx + 0x40]",
            "mov rdx, qword [rbx + 0x78]",
            "mov qword [rax + 8], rcx",
            "mov qword [rcx], rax",
            "mov qword [rdx], r13",
            "mov qword [rbx + 0x40], rdx",
            "mov rax, qword [rbx + 0xa8]",
            "lea rdx, [rbx + 0xa8]",
            "cmp rax, rdx",
            "je 0x8000184",
            "mov rcx, qword [rbx + 0x40]",
            "mov rdx, qword [rbx + 0xb0]",
            "mov qword [rax + 8], rcx",
            "mov qword [rcx], rax",
            "mov qword [rdx], r13",
            "mov qword [rbx + 0x40], rdx",
            "mov r10, qword [rbx + 0x38]",
            "cmp r13, r10",
            "mov r11, qword [r10]",
            "je 0x800035b",
            "mov r14, qword gs:[0]",
            "lea rax, [r14 + 0x4b8]",
            "mov r15, r11",
            "xor r12d, r12d",
            "mov qword [rbp - 0x38], rax",
            "nop",
            "cmp dword [0x080001b7], 1",
            "jg 0x8000363",
            "mov rax, qword [r10 + 8]",
            "mov rdx, qword [r10]",
            "movabs rsi, 0xdead000000100100",
            "movabs rdi, 0xdead000000200200",
            "add r12d, 1",
            "mov qword [rdx + 8], rax",
            "mov qword [rax], rdx",
            "mov qword [r10 + 8], rdi",
            "mov qword [r10], rsi",
            "mov rdi, r10",
            "call kfree",
            "mov rax, r15",
            "mov r10, r15",
            "mov r15, qword [r15]",
            "cmp r13, rax",
            "jne 0x80001b0",
            "mov eax, dword [rbx + 0xe0]",
            "cmp eax, r12d",
            "je 0x8000219",
            "mov ecx, dword [0x08000211]",
            "test ecx, ecx",
            "jns current_task",
            "lea rax, [rbx + 0x10]",
            "mov rdi, rax",
            "mov qword [rbp - 0x38], rax",
            "call mutex_lock",
            "mov r15, qword [rbx]",
            "cmp rbx, r15",
            "mov r13, qword [r15]",
            "je mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov qword [rbp - 0x48], rax",
            "add rax, 0x4b8",
            "mov qword [rbp - 0x50], rax",
            "mov rax, qword [rbp - 0x48]",
            "mov qword [rbp - 0x58], rax",
            "mov rax, qword [rbp - 0x50]",
            "mov qword [rbp - 0x60], rax",
            "jmp 0x800026b",
            "mov r13, rax",
            "mov rax, qword [r15 + 8]",
            "lea r14, [r15 + 0x10]",
            "movabs rdx, 0xdead000000200200",
            "mov rdi, r14",
            "mov qword [r13 + 8], rax",
            "mov qword [rax], r13",
            "movabs rax, 0xdead000000100100",
            "mov qword [r15], rax",
            "mov qword [r15 + 8], rdx",
            "call mutex_trylock",
            "test eax, eax",
            "jne 0x80002b6",
            "cmp dword [0x080002a8], 1",
            "jg 0x800040b",
            "mov rdi, r14",
            "call mutex_lock",
            "cmp dword [0x080002bd], 1",
            "jg 0x80003d6",
            "lea rdi, [r15 + 0x38]",
            "call cryptodev_cipher_deinit",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_deinit",
            "cmp dword [0x080002df], 1",
            "jg current_task",
            "mov rdi, qword [r15 + 0xc8]",
            "call kfree",
            "mov rdi, qword [r15 + 0xd0]",
            "call kfree",
            "mov rdi, r14",
            "call mutex_unlock",
            "mov rdi, r15",
            "mov r15, r13",
            "call kfree",
            "cmp rbx, r13",
            "mov rax, qword [r13]",
            "jne 0x8000268",
            "mov rdi, qword [rbp - 0x38]",
            "call mutex_unlock",
            "mov rdi, rbx",
            "call kfree",
            "cmp dword [0x08000335], 1",
            "mov rax, qword [rbp - 0x40]",
            "mov qword [rax + 0xd0], 0",
            "jg current_task",
            "add rsp, 0x58",
            "xor eax, eax",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "xor r12d, r12d",
            "jmp 0x8000200",
            "mov edx, dword [r14 + 0x318]",
            "mov rsi, qword [rbp - 0x38]",
            "mov r9, r10",
            "mov r8d, 0x207",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x68], r10",
            "call printk",
            "mov r10, qword [rbp - 0x68]",
            "jmp 0x80001bd",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [r15 + 0xb8]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x158",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80002e5",
            "mov rax, qword [rbp - 0x58]",
            "mov r9d, dword [r15 + 0xb0]",
            "mov r8d, 0x155",
            "mov rsi, qword [rbp - 0x60]",
            "mov rcx, 0",
            "mov rdi, 0",
            "mov edx, dword [rax + 0x318]",
            "xor eax, eax",
            "call printk",
            "jmp 0x80002c3",
            "mov rax, qword [rbp - 0x48]",
            "mov r9d, dword [r15 + 0xb0]",
            "mov r8d, 0x152",
            "mov rsi, qword [rbp - 0x50]",
            "mov rcx, 0",
            "mov rdi, 0",
            "mov edx, dword [rax + 0x318]",
            "xor eax, eax",
            "call printk",
            "jmp mutex_lock",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r9d, r12d",
            "mov r8d, 0x20f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8000219",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x21d",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800034a"
        ]
    },
    "sym.cryptodev_open": {
        "function_address": "0x080004c0",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "mov r13, rsi",
            "mov esi, 0x80d0",
            "push r12",
            "push rbx",
            "sub rsp, 0x18",
            "mov rdi, qword [0x080004e0]",
            "call kmem_cache_alloc",
            "test rax, rax",
            "mov r15, rax",
            "je 0x80006d0",
            "lea rdi, [rax + 0x10]",
            "mov qword [r13 + 0xd0], rax",
            "mov rdx, 0",
            "mov rsi, 0",
            "lea r12, [r15 + 0x38]",
            "mov ebx, 0x10",
            "call __mutex_init",
            "lea rdi, [r15 + 0x48]",
            "mov rdx, 0",
            "mov rsi, 0",
            "mov r14, qword gs:[0]",
            "call __mutex_init",
            "lea rdi, [r15 + 0x80]",
            "mov rdx, 0",
            "mov rsi, 0",
            "call __mutex_init",
            "lea rdi, [r15 + 0xb8]",
            "mov rdx, 0",
            "mov rsi, 0",
            "call __mutex_init",
            "lea rax, [r15 + 0x70]",
            "movabs r10, 0xfffffffe0",
            "lea rdi, [r15 + 0x108]",
            "mov qword [r15], r15",
            "mov qword [r15 + 8], r15",
            "mov rdx, 0",
            "mov qword [r15 + 0x70], rax",
            "mov qword [r15 + 0x78], rax",
            "lea rax, [r15 + 0xa8]",
            "mov qword [r15 + 0x38], r12",
            "mov qword [r15 + 0x40], r12",
            "mov rsi, 0",
            "mov qword [r15 + 0xa8], rax",
            "mov qword [r15 + 0xb0], rax",
            "lea rax, [r15 + 0xf0]",
            "mov qword [r15 + 0xe8], r10",
            "mov qword [r15 + 0x100], 0",
            "mov qword [r15 + 0xf0], rax",
            "mov qword [r15 + 0xf8], rax",
            "call __init_waitqueue_head",
            "lea rax, [r14 + 0x4b8]",
            "mov qword [rbp - 0x38], rax",
            "nop word [rax + rax]",
            "mov rdi, qword [0x080005ff]",
            "mov esi, 0x80d0",
            "call kmem_cache_alloc",
            "test rax, rax",
            "mov r11, rax",
            "je 0x8000660",
            "add dword [r15 + 0xe0], 1",
            "cmp dword [0x08000620], 1",
            "jg 0x80006da",
            "mov rax, qword [r15 + 0x38]",
            "sub ebx, 1",
            "mov qword [rax + 8], r11",
            "mov qword [r11], rax",
            "mov qword [r11 + 8], r12",
            "mov qword [r15 + 0x38], r11",
            "jne 0x80005f8",
            "cmp dword [0x08000645], 1",
            "jg current_task",
            "xor eax, eax",
            "add rsp, 0x18",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov rdi, qword [r15 + 0x38]",
            "cmp r12, rdi",
            "mov rbx, qword [rdi]",
            "je 0x80006a9",
            "nop dword [rax]",
            "mov rax, qword [rdi + 8]",
            "movabs r8, 0xdead000000100100",
            "movabs r9, 0xdead000000200200",
            "mov qword [rbx + 8], rax",
            "mov qword [rax], rbx",
            "mov qword [rdi], r8",
            "mov qword [rdi + 8], r9",
            "call kfree",
            "mov rax, rbx",
            "mov rdi, rbx",
            "mov rbx, qword [rbx]",
            "cmp r12, rax",
            "jne 0x8000670",
            "mov rdi, r15",
            "call kfree",
            "mov qword [r13 + 0xd0], 0",
            "add rsp, 0x18",
            "mov eax, 0xfffffff4",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, 0xfffffff4",
            "jmp 0x800064d",
            "mov edx, dword [r14 + 0x318]",
            "mov rsi, qword [rbp - 0x38]",
            "mov r9, rax",
            "mov r8d, 0x1e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x40], r11",
            "call printk",
            "mov r11, qword [rbp - 0x40]",
            "jmp 0x8000626",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, 0x10",
            "mov r8d, 0x1e5",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "xor eax, eax",
            "jmp 0x800064d"
        ]
    },
    "unk.0x80004e5": {
        "function_address": "0x080004e5",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "mov r13, rsi",
            "mov esi, 0x80d0",
            "push r12",
            "push rbx",
            "sub rsp, 0x18",
            "mov rdi, qword [0x080004e0]",
            "call kmem_cache_alloc",
            "test rax, rax",
            "mov r15, rax",
            "je 0x80006d0",
            "lea rdi, [rax + 0x10]",
            "mov qword [r13 + 0xd0], rax",
            "mov rdx, 0",
            "mov rsi, 0",
            "lea r12, [r15 + 0x38]",
            "mov ebx, 0x10",
            "call __mutex_init",
            "lea rdi, [r15 + 0x48]",
            "mov rdx, 0",
            "mov rsi, 0",
            "mov r14, qword gs:[0]",
            "call __mutex_init",
            "lea rdi, [r15 + 0x80]",
            "mov rdx, 0",
            "mov rsi, 0",
            "call __mutex_init",
            "lea rdi, [r15 + 0xb8]",
            "mov rdx, 0",
            "mov rsi, 0",
            "call __mutex_init",
            "lea rax, [r15 + 0x70]",
            "movabs r10, 0xfffffffe0",
            "lea rdi, [r15 + 0x108]",
            "mov qword [r15], r15",
            "mov qword [r15 + 8], r15",
            "mov rdx, 0",
            "mov qword [r15 + 0x70], rax",
            "mov qword [r15 + 0x78], rax",
            "lea rax, [r15 + 0xa8]",
            "mov qword [r15 + 0x38], r12",
            "mov qword [r15 + 0x40], r12",
            "mov rsi, 0",
            "mov qword [r15 + 0xa8], rax",
            "mov qword [r15 + 0xb0], rax",
            "lea rax, [r15 + 0xf0]",
            "mov qword [r15 + 0xe8], r10",
            "mov qword [r15 + 0x100], 0",
            "mov qword [r15 + 0xf0], rax",
            "mov qword [r15 + 0xf8], rax",
            "call __init_waitqueue_head",
            "lea rax, [r14 + 0x4b8]",
            "mov qword [rbp - 0x38], rax",
            "nop word [rax + rax]",
            "mov rdi, qword [0x080005ff]",
            "mov esi, 0x80d0",
            "call kmem_cache_alloc",
            "test rax, rax",
            "mov r11, rax",
            "je 0x8000660",
            "add dword [r15 + 0xe0], 1",
            "cmp dword [0x08000620], 1",
            "jg 0x80006da",
            "mov rax, qword [r15 + 0x38]",
            "sub ebx, 1",
            "mov qword [rax + 8], r11",
            "mov qword [r11], rax",
            "mov qword [r11 + 8], r12",
            "mov qword [r15 + 0x38], r11",
            "jne 0x80005f8",
            "cmp dword [0x08000645], 1",
            "jg current_task",
            "xor eax, eax",
            "add rsp, 0x18",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov rdi, qword [r15 + 0x38]",
            "cmp r12, rdi",
            "mov rbx, qword [rdi]",
            "je 0x80006a9",
            "nop dword [rax]",
            "mov rax, qword [rdi + 8]",
            "movabs r8, 0xdead000000100100",
            "movabs r9, 0xdead000000200200",
            "mov qword [rbx + 8], rax",
            "mov qword [rax], rbx",
            "mov qword [rdi], r8",
            "mov qword [rdi + 8], r9",
            "call kfree",
            "mov rax, rbx",
            "mov rdi, rbx",
            "mov rbx, qword [rbx]",
            "cmp r12, rax",
            "jne 0x8000670",
            "mov rdi, r15",
            "call kfree",
            "mov qword [r13 + 0xd0], 0",
            "add rsp, 0x18",
            "mov eax, 0xfffffff4",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, 0xfffffff4",
            "jmp 0x800064d",
            "mov edx, dword [r14 + 0x318]",
            "mov rsi, qword [rbp - 0x38]",
            "mov r9, rax",
            "mov r8d, 0x1e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x40], r11",
            "call printk",
            "mov r11, qword [rbp - 0x40]",
            "jmp 0x8000626",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, 0x10",
            "mov r8d, 0x1e5",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "xor eax, eax",
            "jmp 0x800064d"
        ]
    },
    "unk.0x8000518": {
        "function_address": "0x08000518",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "mov r13, rsi",
            "mov esi, 0x80d0",
            "push r12",
            "push rbx",
            "sub rsp, 0x18",
            "mov rdi, qword [0x080004e0]",
            "call kmem_cache_alloc",
            "test rax, rax",
            "mov r15, rax",
            "je 0x80006d0",
            "lea rdi, [rax + 0x10]",
            "mov qword [r13 + 0xd0], rax",
            "mov rdx, 0",
            "mov rsi, 0",
            "lea r12, [r15 + 0x38]",
            "mov ebx, 0x10",
            "call __mutex_init",
            "lea rdi, [r15 + 0x48]",
            "mov rdx, 0",
            "mov rsi, 0",
            "mov r14, qword gs:[0]",
            "call __mutex_init",
            "lea rdi, [r15 + 0x80]",
            "mov rdx, 0",
            "mov rsi, 0",
            "call __mutex_init",
            "lea rdi, [r15 + 0xb8]",
            "mov rdx, 0",
            "mov rsi, 0",
            "call __mutex_init",
            "lea rax, [r15 + 0x70]",
            "movabs r10, 0xfffffffe0",
            "lea rdi, [r15 + 0x108]",
            "mov qword [r15], r15",
            "mov qword [r15 + 8], r15",
            "mov rdx, 0",
            "mov qword [r15 + 0x70], rax",
            "mov qword [r15 + 0x78], rax",
            "lea rax, [r15 + 0xa8]",
            "mov qword [r15 + 0x38], r12",
            "mov qword [r15 + 0x40], r12",
            "mov rsi, 0",
            "mov qword [r15 + 0xa8], rax",
            "mov qword [r15 + 0xb0], rax",
            "lea rax, [r15 + 0xf0]",
            "mov qword [r15 + 0xe8], r10",
            "mov qword [r15 + 0x100], 0",
            "mov qword [r15 + 0xf0], rax",
            "mov qword [r15 + 0xf8], rax",
            "call __init_waitqueue_head",
            "lea rax, [r14 + 0x4b8]",
            "mov qword [rbp - 0x38], rax",
            "nop word [rax + rax]",
            "mov rdi, qword [0x080005ff]",
            "mov esi, 0x80d0",
            "call kmem_cache_alloc",
            "test rax, rax",
            "mov r11, rax",
            "je 0x8000660",
            "add dword [r15 + 0xe0], 1",
            "cmp dword [0x08000620], 1",
            "jg 0x80006da",
            "mov rax, qword [r15 + 0x38]",
            "sub ebx, 1",
            "mov qword [rax + 8], r11",
            "mov qword [r11], rax",
            "mov qword [r11 + 8], r12",
            "mov qword [r15 + 0x38], r11",
            "jne 0x80005f8",
            "cmp dword [0x08000645], 1",
            "jg current_task",
            "xor eax, eax",
            "add rsp, 0x18",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov rdi, qword [r15 + 0x38]",
            "cmp r12, rdi",
            "mov rbx, qword [rdi]",
            "je 0x80006a9",
            "nop dword [rax]",
            "mov rax, qword [rdi + 8]",
            "movabs r8, 0xdead000000100100",
            "movabs r9, 0xdead000000200200",
            "mov qword [rbx + 8], rax",
            "mov qword [rax], rbx",
            "mov qword [rdi], r8",
            "mov qword [rdi + 8], r9",
            "call kfree",
            "mov rax, rbx",
            "mov rdi, rbx",
            "mov rbx, qword [rbx]",
            "cmp r12, rax",
            "jne 0x8000670",
            "mov rdi, r15",
            "call kfree",
            "mov qword [r13 + 0xd0], 0",
            "add rsp, 0x18",
            "mov eax, 0xfffffff4",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, 0xfffffff4",
            "jmp 0x800064d",
            "mov edx, dword [r14 + 0x318]",
            "mov rsi, qword [rbp - 0x38]",
            "mov r9, rax",
            "mov r8d, 0x1e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x40], r11",
            "call printk",
            "mov r11, qword [rbp - 0x40]",
            "jmp 0x8000626",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, 0x10",
            "mov r8d, 0x1e5",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "xor eax, eax",
            "jmp 0x800064d"
        ]
    },
    "unk.0x8000538": {
        "function_address": "0x08000538",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "mov r13, rsi",
            "mov esi, 0x80d0",
            "push r12",
            "push rbx",
            "sub rsp, 0x18",
            "mov rdi, qword [0x080004e0]",
            "call kmem_cache_alloc",
            "test rax, rax",
            "mov r15, rax",
            "je 0x80006d0",
            "lea rdi, [rax + 0x10]",
            "mov qword [r13 + 0xd0], rax",
            "mov rdx, 0",
            "mov rsi, 0",
            "lea r12, [r15 + 0x38]",
            "mov ebx, 0x10",
            "call __mutex_init",
            "lea rdi, [r15 + 0x48]",
            "mov rdx, 0",
            "mov rsi, 0",
            "mov r14, qword gs:[0]",
            "call __mutex_init",
            "lea rdi, [r15 + 0x80]",
            "mov rdx, 0",
            "mov rsi, 0",
            "call __mutex_init",
            "lea rdi, [r15 + 0xb8]",
            "mov rdx, 0",
            "mov rsi, 0",
            "call __mutex_init",
            "lea rax, [r15 + 0x70]",
            "movabs r10, 0xfffffffe0",
            "lea rdi, [r15 + 0x108]",
            "mov qword [r15], r15",
            "mov qword [r15 + 8], r15",
            "mov rdx, 0",
            "mov qword [r15 + 0x70], rax",
            "mov qword [r15 + 0x78], rax",
            "lea rax, [r15 + 0xa8]",
            "mov qword [r15 + 0x38], r12",
            "mov qword [r15 + 0x40], r12",
            "mov rsi, 0",
            "mov qword [r15 + 0xa8], rax",
            "mov qword [r15 + 0xb0], rax",
            "lea rax, [r15 + 0xf0]",
            "mov qword [r15 + 0xe8], r10",
            "mov qword [r15 + 0x100], 0",
            "mov qword [r15 + 0xf0], rax",
            "mov qword [r15 + 0xf8], rax",
            "call __init_waitqueue_head",
            "lea rax, [r14 + 0x4b8]",
            "mov qword [rbp - 0x38], rax",
            "nop word [rax + rax]",
            "mov rdi, qword [0x080005ff]",
            "mov esi, 0x80d0",
            "call kmem_cache_alloc",
            "test rax, rax",
            "mov r11, rax",
            "je 0x8000660",
            "add dword [r15 + 0xe0], 1",
            "cmp dword [0x08000620], 1",
            "jg 0x80006da",
            "mov rax, qword [r15 + 0x38]",
            "sub ebx, 1",
            "mov qword [rax + 8], r11",
            "mov qword [r11], rax",
            "mov qword [r11 + 8], r12",
            "mov qword [r15 + 0x38], r11",
            "jne 0x80005f8",
            "cmp dword [0x08000645], 1",
            "jg current_task",
            "xor eax, eax",
            "add rsp, 0x18",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov rdi, qword [r15 + 0x38]",
            "cmp r12, rdi",
            "mov rbx, qword [rdi]",
            "je 0x80006a9",
            "nop dword [rax]",
            "mov rax, qword [rdi + 8]",
            "movabs r8, 0xdead000000100100",
            "movabs r9, 0xdead000000200200",
            "mov qword [rbx + 8], rax",
            "mov qword [rax], rbx",
            "mov qword [rdi], r8",
            "mov qword [rdi + 8], r9",
            "call kfree",
            "mov rax, rbx",
            "mov rdi, rbx",
            "mov rbx, qword [rbx]",
            "cmp r12, rax",
            "jne 0x8000670",
            "mov rdi, r15",
            "call kfree",
            "mov qword [r13 + 0xd0], 0",
            "add rsp, 0x18",
            "mov eax, 0xfffffff4",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, 0xfffffff4",
            "jmp 0x800064d",
            "mov edx, dword [r14 + 0x318]",
            "mov rsi, qword [rbp - 0x38]",
            "mov r9, rax",
            "mov r8d, 0x1e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x40], r11",
            "call printk",
            "mov r11, qword [rbp - 0x40]",
            "jmp 0x8000626",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, 0x10",
            "mov r8d, 0x1e5",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "xor eax, eax",
            "jmp 0x800064d"
        ]
    },
    "unk.0x8000552": {
        "function_address": "0x08000552",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "mov r13, rsi",
            "mov esi, 0x80d0",
            "push r12",
            "push rbx",
            "sub rsp, 0x18",
            "mov rdi, qword [0x080004e0]",
            "call kmem_cache_alloc",
            "test rax, rax",
            "mov r15, rax",
            "je 0x80006d0",
            "lea rdi, [rax + 0x10]",
            "mov qword [r13 + 0xd0], rax",
            "mov rdx, 0",
            "mov rsi, 0",
            "lea r12, [r15 + 0x38]",
            "mov ebx, 0x10",
            "call __mutex_init",
            "lea rdi, [r15 + 0x48]",
            "mov rdx, 0",
            "mov rsi, 0",
            "mov r14, qword gs:[0]",
            "call __mutex_init",
            "lea rdi, [r15 + 0x80]",
            "mov rdx, 0",
            "mov rsi, 0",
            "call __mutex_init",
            "lea rdi, [r15 + 0xb8]",
            "mov rdx, 0",
            "mov rsi, 0",
            "call __mutex_init",
            "lea rax, [r15 + 0x70]",
            "movabs r10, 0xfffffffe0",
            "lea rdi, [r15 + 0x108]",
            "mov qword [r15], r15",
            "mov qword [r15 + 8], r15",
            "mov rdx, 0",
            "mov qword [r15 + 0x70], rax",
            "mov qword [r15 + 0x78], rax",
            "lea rax, [r15 + 0xa8]",
            "mov qword [r15 + 0x38], r12",
            "mov qword [r15 + 0x40], r12",
            "mov rsi, 0",
            "mov qword [r15 + 0xa8], rax",
            "mov qword [r15 + 0xb0], rax",
            "lea rax, [r15 + 0xf0]",
            "mov qword [r15 + 0xe8], r10",
            "mov qword [r15 + 0x100], 0",
            "mov qword [r15 + 0xf0], rax",
            "mov qword [r15 + 0xf8], rax",
            "call __init_waitqueue_head",
            "lea rax, [r14 + 0x4b8]",
            "mov qword [rbp - 0x38], rax",
            "nop word [rax + rax]",
            "mov rdi, qword [0x080005ff]",
            "mov esi, 0x80d0",
            "call kmem_cache_alloc",
            "test rax, rax",
            "mov r11, rax",
            "je 0x8000660",
            "add dword [r15 + 0xe0], 1",
            "cmp dword [0x08000620], 1",
            "jg 0x80006da",
            "mov rax, qword [r15 + 0x38]",
            "sub ebx, 1",
            "mov qword [rax + 8], r11",
            "mov qword [r11], rax",
            "mov qword [r11 + 8], r12",
            "mov qword [r15 + 0x38], r11",
            "jne 0x80005f8",
            "cmp dword [0x08000645], 1",
            "jg current_task",
            "xor eax, eax",
            "add rsp, 0x18",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov rdi, qword [r15 + 0x38]",
            "cmp r12, rdi",
            "mov rbx, qword [rdi]",
            "je 0x80006a9",
            "nop dword [rax]",
            "mov rax, qword [rdi + 8]",
            "movabs r8, 0xdead000000100100",
            "movabs r9, 0xdead000000200200",
            "mov qword [rbx + 8], rax",
            "mov qword [rax], rbx",
            "mov qword [rdi], r8",
            "mov qword [rdi + 8], r9",
            "call kfree",
            "mov rax, rbx",
            "mov rdi, rbx",
            "mov rbx, qword [rbx]",
            "cmp r12, rax",
            "jne 0x8000670",
            "mov rdi, r15",
            "call kfree",
            "mov qword [r13 + 0xd0], 0",
            "add rsp, 0x18",
            "mov eax, 0xfffffff4",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, 0xfffffff4",
            "jmp 0x800064d",
            "mov edx, dword [r14 + 0x318]",
            "mov rsi, qword [rbp - 0x38]",
            "mov r9, rax",
            "mov r8d, 0x1e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x40], r11",
            "call printk",
            "mov r11, qword [rbp - 0x40]",
            "jmp 0x8000626",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, 0x10",
            "mov r8d, 0x1e5",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "xor eax, eax",
            "jmp 0x800064d"
        ]
    },
    "unk.0x800056c": {
        "function_address": "0x0800056c",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "mov r13, rsi",
            "mov esi, 0x80d0",
            "push r12",
            "push rbx",
            "sub rsp, 0x18",
            "mov rdi, qword [0x080004e0]",
            "call kmem_cache_alloc",
            "test rax, rax",
            "mov r15, rax",
            "je 0x80006d0",
            "lea rdi, [rax + 0x10]",
            "mov qword [r13 + 0xd0], rax",
            "mov rdx, 0",
            "mov rsi, 0",
            "lea r12, [r15 + 0x38]",
            "mov ebx, 0x10",
            "call __mutex_init",
            "lea rdi, [r15 + 0x48]",
            "mov rdx, 0",
            "mov rsi, 0",
            "mov r14, qword gs:[0]",
            "call __mutex_init",
            "lea rdi, [r15 + 0x80]",
            "mov rdx, 0",
            "mov rsi, 0",
            "call __mutex_init",
            "lea rdi, [r15 + 0xb8]",
            "mov rdx, 0",
            "mov rsi, 0",
            "call __mutex_init",
            "lea rax, [r15 + 0x70]",
            "movabs r10, 0xfffffffe0",
            "lea rdi, [r15 + 0x108]",
            "mov qword [r15], r15",
            "mov qword [r15 + 8], r15",
            "mov rdx, 0",
            "mov qword [r15 + 0x70], rax",
            "mov qword [r15 + 0x78], rax",
            "lea rax, [r15 + 0xa8]",
            "mov qword [r15 + 0x38], r12",
            "mov qword [r15 + 0x40], r12",
            "mov rsi, 0",
            "mov qword [r15 + 0xa8], rax",
            "mov qword [r15 + 0xb0], rax",
            "lea rax, [r15 + 0xf0]",
            "mov qword [r15 + 0xe8], r10",
            "mov qword [r15 + 0x100], 0",
            "mov qword [r15 + 0xf0], rax",
            "mov qword [r15 + 0xf8], rax",
            "call __init_waitqueue_head",
            "lea rax, [r14 + 0x4b8]",
            "mov qword [rbp - 0x38], rax",
            "nop word [rax + rax]",
            "mov rdi, qword [0x080005ff]",
            "mov esi, 0x80d0",
            "call kmem_cache_alloc",
            "test rax, rax",
            "mov r11, rax",
            "je 0x8000660",
            "add dword [r15 + 0xe0], 1",
            "cmp dword [0x08000620], 1",
            "jg 0x80006da",
            "mov rax, qword [r15 + 0x38]",
            "sub ebx, 1",
            "mov qword [rax + 8], r11",
            "mov qword [r11], rax",
            "mov qword [r11 + 8], r12",
            "mov qword [r15 + 0x38], r11",
            "jne 0x80005f8",
            "cmp dword [0x08000645], 1",
            "jg current_task",
            "xor eax, eax",
            "add rsp, 0x18",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov rdi, qword [r15 + 0x38]",
            "cmp r12, rdi",
            "mov rbx, qword [rdi]",
            "je 0x80006a9",
            "nop dword [rax]",
            "mov rax, qword [rdi + 8]",
            "movabs r8, 0xdead000000100100",
            "movabs r9, 0xdead000000200200",
            "mov qword [rbx + 8], rax",
            "mov qword [rax], rbx",
            "mov qword [rdi], r8",
            "mov qword [rdi + 8], r9",
            "call kfree",
            "mov rax, rbx",
            "mov rdi, rbx",
            "mov rbx, qword [rbx]",
            "cmp r12, rax",
            "jne 0x8000670",
            "mov rdi, r15",
            "call kfree",
            "mov qword [r13 + 0xd0], 0",
            "add rsp, 0x18",
            "mov eax, 0xfffffff4",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, 0xfffffff4",
            "jmp 0x800064d",
            "mov edx, dword [r14 + 0x318]",
            "mov rsi, qword [rbp - 0x38]",
            "mov r9, rax",
            "mov r8d, 0x1e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x40], r11",
            "call printk",
            "mov r11, qword [rbp - 0x40]",
            "jmp 0x8000626",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, 0x10",
            "mov r8d, 0x1e5",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "xor eax, eax",
            "jmp 0x800064d"
        ]
    },
    "unk.0x80005e7": {
        "function_address": "0x080005e7",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "mov r13, rsi",
            "mov esi, 0x80d0",
            "push r12",
            "push rbx",
            "sub rsp, 0x18",
            "mov rdi, qword [0x080004e0]",
            "call kmem_cache_alloc",
            "test rax, rax",
            "mov r15, rax",
            "je 0x80006d0",
            "lea rdi, [rax + 0x10]",
            "mov qword [r13 + 0xd0], rax",
            "mov rdx, 0",
            "mov rsi, 0",
            "lea r12, [r15 + 0x38]",
            "mov ebx, 0x10",
            "call __mutex_init",
            "lea rdi, [r15 + 0x48]",
            "mov rdx, 0",
            "mov rsi, 0",
            "mov r14, qword gs:[0]",
            "call __mutex_init",
            "lea rdi, [r15 + 0x80]",
            "mov rdx, 0",
            "mov rsi, 0",
            "call __mutex_init",
            "lea rdi, [r15 + 0xb8]",
            "mov rdx, 0",
            "mov rsi, 0",
            "call __mutex_init",
            "lea rax, [r15 + 0x70]",
            "movabs r10, 0xfffffffe0",
            "lea rdi, [r15 + 0x108]",
            "mov qword [r15], r15",
            "mov qword [r15 + 8], r15",
            "mov rdx, 0",
            "mov qword [r15 + 0x70], rax",
            "mov qword [r15 + 0x78], rax",
            "lea rax, [r15 + 0xa8]",
            "mov qword [r15 + 0x38], r12",
            "mov qword [r15 + 0x40], r12",
            "mov rsi, 0",
            "mov qword [r15 + 0xa8], rax",
            "mov qword [r15 + 0xb0], rax",
            "lea rax, [r15 + 0xf0]",
            "mov qword [r15 + 0xe8], r10",
            "mov qword [r15 + 0x100], 0",
            "mov qword [r15 + 0xf0], rax",
            "mov qword [r15 + 0xf8], rax",
            "call __init_waitqueue_head",
            "lea rax, [r14 + 0x4b8]",
            "mov qword [rbp - 0x38], rax",
            "nop word [rax + rax]",
            "mov rdi, qword [0x080005ff]",
            "mov esi, 0x80d0",
            "call kmem_cache_alloc",
            "test rax, rax",
            "mov r11, rax",
            "je 0x8000660",
            "add dword [r15 + 0xe0], 1",
            "cmp dword [0x08000620], 1",
            "jg 0x80006da",
            "mov rax, qword [r15 + 0x38]",
            "sub ebx, 1",
            "mov qword [rax + 8], r11",
            "mov qword [r11], rax",
            "mov qword [r11 + 8], r12",
            "mov qword [r15 + 0x38], r11",
            "jne 0x80005f8",
            "cmp dword [0x08000645], 1",
            "jg current_task",
            "xor eax, eax",
            "add rsp, 0x18",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov rdi, qword [r15 + 0x38]",
            "cmp r12, rdi",
            "mov rbx, qword [rdi]",
            "je 0x80006a9",
            "nop dword [rax]",
            "mov rax, qword [rdi + 8]",
            "movabs r8, 0xdead000000100100",
            "movabs r9, 0xdead000000200200",
            "mov qword [rbx + 8], rax",
            "mov qword [rax], rbx",
            "mov qword [rdi], r8",
            "mov qword [rdi + 8], r9",
            "call kfree",
            "mov rax, rbx",
            "mov rdi, rbx",
            "mov rbx, qword [rbx]",
            "cmp r12, rax",
            "jne 0x8000670",
            "mov rdi, r15",
            "call kfree",
            "mov qword [r13 + 0xd0], 0",
            "add rsp, 0x18",
            "mov eax, 0xfffffff4",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, 0xfffffff4",
            "jmp 0x800064d",
            "mov edx, dword [r14 + 0x318]",
            "mov rsi, qword [rbp - 0x38]",
            "mov r9, rax",
            "mov r8d, 0x1e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x40], r11",
            "call printk",
            "mov r11, qword [rbp - 0x40]",
            "jmp 0x8000626",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, 0x10",
            "mov r8d, 0x1e5",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "xor eax, eax",
            "jmp 0x800064d"
        ]
    },
    "unk.0x8000609": {
        "function_address": "0x08000609",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "mov r13, rsi",
            "mov esi, 0x80d0",
            "push r12",
            "push rbx",
            "sub rsp, 0x18",
            "mov rdi, qword [0x080004e0]",
            "call kmem_cache_alloc",
            "test rax, rax",
            "mov r15, rax",
            "je 0x80006d0",
            "lea rdi, [rax + 0x10]",
            "mov qword [r13 + 0xd0], rax",
            "mov rdx, 0",
            "mov rsi, 0",
            "lea r12, [r15 + 0x38]",
            "mov ebx, 0x10",
            "call __mutex_init",
            "lea rdi, [r15 + 0x48]",
            "mov rdx, 0",
            "mov rsi, 0",
            "mov r14, qword gs:[0]",
            "call __mutex_init",
            "lea rdi, [r15 + 0x80]",
            "mov rdx, 0",
            "mov rsi, 0",
            "call __mutex_init",
            "lea rdi, [r15 + 0xb8]",
            "mov rdx, 0",
            "mov rsi, 0",
            "call __mutex_init",
            "lea rax, [r15 + 0x70]",
            "movabs r10, 0xfffffffe0",
            "lea rdi, [r15 + 0x108]",
            "mov qword [r15], r15",
            "mov qword [r15 + 8], r15",
            "mov rdx, 0",
            "mov qword [r15 + 0x70], rax",
            "mov qword [r15 + 0x78], rax",
            "lea rax, [r15 + 0xa8]",
            "mov qword [r15 + 0x38], r12",
            "mov qword [r15 + 0x40], r12",
            "mov rsi, 0",
            "mov qword [r15 + 0xa8], rax",
            "mov qword [r15 + 0xb0], rax",
            "lea rax, [r15 + 0xf0]",
            "mov qword [r15 + 0xe8], r10",
            "mov qword [r15 + 0x100], 0",
            "mov qword [r15 + 0xf0], rax",
            "mov qword [r15 + 0xf8], rax",
            "call __init_waitqueue_head",
            "lea rax, [r14 + 0x4b8]",
            "mov qword [rbp - 0x38], rax",
            "nop word [rax + rax]",
            "mov rdi, qword [0x080005ff]",
            "mov esi, 0x80d0",
            "call kmem_cache_alloc",
            "test rax, rax",
            "mov r11, rax",
            "je 0x8000660",
            "add dword [r15 + 0xe0], 1",
            "cmp dword [0x08000620], 1",
            "jg 0x80006da",
            "mov rax, qword [r15 + 0x38]",
            "sub ebx, 1",
            "mov qword [rax + 8], r11",
            "mov qword [r11], rax",
            "mov qword [r11 + 8], r12",
            "mov qword [r15 + 0x38], r11",
            "jne 0x80005f8",
            "cmp dword [0x08000645], 1",
            "jg current_task",
            "xor eax, eax",
            "add rsp, 0x18",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov rdi, qword [r15 + 0x38]",
            "cmp r12, rdi",
            "mov rbx, qword [rdi]",
            "je 0x80006a9",
            "nop dword [rax]",
            "mov rax, qword [rdi + 8]",
            "movabs r8, 0xdead000000100100",
            "movabs r9, 0xdead000000200200",
            "mov qword [rbx + 8], rax",
            "mov qword [rax], rbx",
            "mov qword [rdi], r8",
            "mov qword [rdi + 8], r9",
            "call kfree",
            "mov rax, rbx",
            "mov rdi, rbx",
            "mov rbx, qword [rbx]",
            "cmp r12, rax",
            "jne 0x8000670",
            "mov rdi, r15",
            "call kfree",
            "mov qword [r13 + 0xd0], 0",
            "add rsp, 0x18",
            "mov eax, 0xfffffff4",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, 0xfffffff4",
            "jmp 0x800064d",
            "mov edx, dword [r14 + 0x318]",
            "mov rsi, qword [rbp - 0x38]",
            "mov r9, rax",
            "mov r8d, 0x1e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x40], r11",
            "call printk",
            "mov r11, qword [rbp - 0x40]",
            "jmp 0x8000626",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, 0x10",
            "mov r8d, 0x1e5",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "xor eax, eax",
            "jmp 0x800064d"
        ]
    },
    "unk.0x800069b": {
        "function_address": "0x0800069b",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "mov r13, rsi",
            "mov esi, 0x80d0",
            "push r12",
            "push rbx",
            "sub rsp, 0x18",
            "mov rdi, qword [0x080004e0]",
            "call kmem_cache_alloc",
            "test rax, rax",
            "mov r15, rax",
            "je 0x80006d0",
            "lea rdi, [rax + 0x10]",
            "mov qword [r13 + 0xd0], rax",
            "mov rdx, 0",
            "mov rsi, 0",
            "lea r12, [r15 + 0x38]",
            "mov ebx, 0x10",
            "call __mutex_init",
            "lea rdi, [r15 + 0x48]",
            "mov rdx, 0",
            "mov rsi, 0",
            "mov r14, qword gs:[0]",
            "call __mutex_init",
            "lea rdi, [r15 + 0x80]",
            "mov rdx, 0",
            "mov rsi, 0",
            "call __mutex_init",
            "lea rdi, [r15 + 0xb8]",
            "mov rdx, 0",
            "mov rsi, 0",
            "call __mutex_init",
            "lea rax, [r15 + 0x70]",
            "movabs r10, 0xfffffffe0",
            "lea rdi, [r15 + 0x108]",
            "mov qword [r15], r15",
            "mov qword [r15 + 8], r15",
            "mov rdx, 0",
            "mov qword [r15 + 0x70], rax",
            "mov qword [r15 + 0x78], rax",
            "lea rax, [r15 + 0xa8]",
            "mov qword [r15 + 0x38], r12",
            "mov qword [r15 + 0x40], r12",
            "mov rsi, 0",
            "mov qword [r15 + 0xa8], rax",
            "mov qword [r15 + 0xb0], rax",
            "lea rax, [r15 + 0xf0]",
            "mov qword [r15 + 0xe8], r10",
            "mov qword [r15 + 0x100], 0",
            "mov qword [r15 + 0xf0], rax",
            "mov qword [r15 + 0xf8], rax",
            "call __init_waitqueue_head",
            "lea rax, [r14 + 0x4b8]",
            "mov qword [rbp - 0x38], rax",
            "nop word [rax + rax]",
            "mov rdi, qword [0x080005ff]",
            "mov esi, 0x80d0",
            "call kmem_cache_alloc",
            "test rax, rax",
            "mov r11, rax",
            "je 0x8000660",
            "add dword [r15 + 0xe0], 1",
            "cmp dword [0x08000620], 1",
            "jg 0x80006da",
            "mov rax, qword [r15 + 0x38]",
            "sub ebx, 1",
            "mov qword [rax + 8], r11",
            "mov qword [r11], rax",
            "mov qword [r11 + 8], r12",
            "mov qword [r15 + 0x38], r11",
            "jne 0x80005f8",
            "cmp dword [0x08000645], 1",
            "jg current_task",
            "xor eax, eax",
            "add rsp, 0x18",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov rdi, qword [r15 + 0x38]",
            "cmp r12, rdi",
            "mov rbx, qword [rdi]",
            "je 0x80006a9",
            "nop dword [rax]",
            "mov rax, qword [rdi + 8]",
            "movabs r8, 0xdead000000100100",
            "movabs r9, 0xdead000000200200",
            "mov qword [rbx + 8], rax",
            "mov qword [rax], rbx",
            "mov qword [rdi], r8",
            "mov qword [rdi + 8], r9",
            "call kfree",
            "mov rax, rbx",
            "mov rdi, rbx",
            "mov rbx, qword [rbx]",
            "cmp r12, rax",
            "jne 0x8000670",
            "mov rdi, r15",
            "call kfree",
            "mov qword [r13 + 0xd0], 0",
            "add rsp, 0x18",
            "mov eax, 0xfffffff4",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, 0xfffffff4",
            "jmp 0x800064d",
            "mov edx, dword [r14 + 0x318]",
            "mov rsi, qword [rbp - 0x38]",
            "mov r9, rax",
            "mov r8d, 0x1e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x40], r11",
            "call printk",
            "mov r11, qword [rbp - 0x40]",
            "jmp 0x8000626",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, 0x10",
            "mov r8d, 0x1e5",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "xor eax, eax",
            "jmp 0x800064d"
        ]
    },
    "unk.0x80006b1": {
        "function_address": "0x080006b1",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "mov r13, rsi",
            "mov esi, 0x80d0",
            "push r12",
            "push rbx",
            "sub rsp, 0x18",
            "mov rdi, qword [0x080004e0]",
            "call kmem_cache_alloc",
            "test rax, rax",
            "mov r15, rax",
            "je 0x80006d0",
            "lea rdi, [rax + 0x10]",
            "mov qword [r13 + 0xd0], rax",
            "mov rdx, 0",
            "mov rsi, 0",
            "lea r12, [r15 + 0x38]",
            "mov ebx, 0x10",
            "call __mutex_init",
            "lea rdi, [r15 + 0x48]",
            "mov rdx, 0",
            "mov rsi, 0",
            "mov r14, qword gs:[0]",
            "call __mutex_init",
            "lea rdi, [r15 + 0x80]",
            "mov rdx, 0",
            "mov rsi, 0",
            "call __mutex_init",
            "lea rdi, [r15 + 0xb8]",
            "mov rdx, 0",
            "mov rsi, 0",
            "call __mutex_init",
            "lea rax, [r15 + 0x70]",
            "movabs r10, 0xfffffffe0",
            "lea rdi, [r15 + 0x108]",
            "mov qword [r15], r15",
            "mov qword [r15 + 8], r15",
            "mov rdx, 0",
            "mov qword [r15 + 0x70], rax",
            "mov qword [r15 + 0x78], rax",
            "lea rax, [r15 + 0xa8]",
            "mov qword [r15 + 0x38], r12",
            "mov qword [r15 + 0x40], r12",
            "mov rsi, 0",
            "mov qword [r15 + 0xa8], rax",
            "mov qword [r15 + 0xb0], rax",
            "lea rax, [r15 + 0xf0]",
            "mov qword [r15 + 0xe8], r10",
            "mov qword [r15 + 0x100], 0",
            "mov qword [r15 + 0xf0], rax",
            "mov qword [r15 + 0xf8], rax",
            "call __init_waitqueue_head",
            "lea rax, [r14 + 0x4b8]",
            "mov qword [rbp - 0x38], rax",
            "nop word [rax + rax]",
            "mov rdi, qword [0x080005ff]",
            "mov esi, 0x80d0",
            "call kmem_cache_alloc",
            "test rax, rax",
            "mov r11, rax",
            "je 0x8000660",
            "add dword [r15 + 0xe0], 1",
            "cmp dword [0x08000620], 1",
            "jg 0x80006da",
            "mov rax, qword [r15 + 0x38]",
            "sub ebx, 1",
            "mov qword [rax + 8], r11",
            "mov qword [r11], rax",
            "mov qword [r11 + 8], r12",
            "mov qword [r15 + 0x38], r11",
            "jne 0x80005f8",
            "cmp dword [0x08000645], 1",
            "jg current_task",
            "xor eax, eax",
            "add rsp, 0x18",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov rdi, qword [r15 + 0x38]",
            "cmp r12, rdi",
            "mov rbx, qword [rdi]",
            "je 0x80006a9",
            "nop dword [rax]",
            "mov rax, qword [rdi + 8]",
            "movabs r8, 0xdead000000100100",
            "movabs r9, 0xdead000000200200",
            "mov qword [rbx + 8], rax",
            "mov qword [rax], rbx",
            "mov qword [rdi], r8",
            "mov qword [rdi + 8], r9",
            "call kfree",
            "mov rax, rbx",
            "mov rdi, rbx",
            "mov rbx, qword [rbx]",
            "cmp r12, rax",
            "jne 0x8000670",
            "mov rdi, r15",
            "call kfree",
            "mov qword [r13 + 0xd0], 0",
            "add rsp, 0x18",
            "mov eax, 0xfffffff4",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, 0xfffffff4",
            "jmp 0x800064d",
            "mov edx, dword [r14 + 0x318]",
            "mov rsi, qword [rbp - 0x38]",
            "mov r9, rax",
            "mov r8d, 0x1e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x40], r11",
            "call printk",
            "mov r11, qword [rbp - 0x40]",
            "jmp 0x8000626",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, 0x10",
            "mov r8d, 0x1e5",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "xor eax, eax",
            "jmp 0x800064d"
        ]
    },
    "unk.0x8000707": {
        "function_address": "0x08000707",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "mov r13, rsi",
            "mov esi, 0x80d0",
            "push r12",
            "push rbx",
            "sub rsp, 0x18",
            "mov rdi, qword [0x080004e0]",
            "call kmem_cache_alloc",
            "test rax, rax",
            "mov r15, rax",
            "je 0x80006d0",
            "lea rdi, [rax + 0x10]",
            "mov qword [r13 + 0xd0], rax",
            "mov rdx, 0",
            "mov rsi, 0",
            "lea r12, [r15 + 0x38]",
            "mov ebx, 0x10",
            "call __mutex_init",
            "lea rdi, [r15 + 0x48]",
            "mov rdx, 0",
            "mov rsi, 0",
            "mov r14, qword gs:[0]",
            "call __mutex_init",
            "lea rdi, [r15 + 0x80]",
            "mov rdx, 0",
            "mov rsi, 0",
            "call __mutex_init",
            "lea rdi, [r15 + 0xb8]",
            "mov rdx, 0",
            "mov rsi, 0",
            "call __mutex_init",
            "lea rax, [r15 + 0x70]",
            "movabs r10, 0xfffffffe0",
            "lea rdi, [r15 + 0x108]",
            "mov qword [r15], r15",
            "mov qword [r15 + 8], r15",
            "mov rdx, 0",
            "mov qword [r15 + 0x70], rax",
            "mov qword [r15 + 0x78], rax",
            "lea rax, [r15 + 0xa8]",
            "mov qword [r15 + 0x38], r12",
            "mov qword [r15 + 0x40], r12",
            "mov rsi, 0",
            "mov qword [r15 + 0xa8], rax",
            "mov qword [r15 + 0xb0], rax",
            "lea rax, [r15 + 0xf0]",
            "mov qword [r15 + 0xe8], r10",
            "mov qword [r15 + 0x100], 0",
            "mov qword [r15 + 0xf0], rax",
            "mov qword [r15 + 0xf8], rax",
            "call __init_waitqueue_head",
            "lea rax, [r14 + 0x4b8]",
            "mov qword [rbp - 0x38], rax",
            "nop word [rax + rax]",
            "mov rdi, qword [0x080005ff]",
            "mov esi, 0x80d0",
            "call kmem_cache_alloc",
            "test rax, rax",
            "mov r11, rax",
            "je 0x8000660",
            "add dword [r15 + 0xe0], 1",
            "cmp dword [0x08000620], 1",
            "jg 0x80006da",
            "mov rax, qword [r15 + 0x38]",
            "sub ebx, 1",
            "mov qword [rax + 8], r11",
            "mov qword [r11], rax",
            "mov qword [r11 + 8], r12",
            "mov qword [r15 + 0x38], r11",
            "jne 0x80005f8",
            "cmp dword [0x08000645], 1",
            "jg current_task",
            "xor eax, eax",
            "add rsp, 0x18",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov rdi, qword [r15 + 0x38]",
            "cmp r12, rdi",
            "mov rbx, qword [rdi]",
            "je 0x80006a9",
            "nop dword [rax]",
            "mov rax, qword [rdi + 8]",
            "movabs r8, 0xdead000000100100",
            "movabs r9, 0xdead000000200200",
            "mov qword [rbx + 8], rax",
            "mov qword [rax], rbx",
            "mov qword [rdi], r8",
            "mov qword [rdi + 8], r9",
            "call kfree",
            "mov rax, rbx",
            "mov rdi, rbx",
            "mov rbx, qword [rbx]",
            "cmp r12, rax",
            "jne 0x8000670",
            "mov rdi, r15",
            "call kfree",
            "mov qword [r13 + 0xd0], 0",
            "add rsp, 0x18",
            "mov eax, 0xfffffff4",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, 0xfffffff4",
            "jmp 0x800064d",
            "mov edx, dword [r14 + 0x318]",
            "mov rsi, qword [rbp - 0x38]",
            "mov r9, rax",
            "mov r8d, 0x1e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x40], r11",
            "call printk",
            "mov r11, qword [rbp - 0x40]",
            "jmp 0x8000626",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, 0x10",
            "mov r8d, 0x1e5",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "xor eax, eax",
            "jmp 0x800064d"
        ]
    },
    "unk.0x8000747": {
        "function_address": "0x08000747",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "mov r13, rsi",
            "mov esi, 0x80d0",
            "push r12",
            "push rbx",
            "sub rsp, 0x18",
            "mov rdi, qword [0x080004e0]",
            "call kmem_cache_alloc",
            "test rax, rax",
            "mov r15, rax",
            "je 0x80006d0",
            "lea rdi, [rax + 0x10]",
            "mov qword [r13 + 0xd0], rax",
            "mov rdx, 0",
            "mov rsi, 0",
            "lea r12, [r15 + 0x38]",
            "mov ebx, 0x10",
            "call __mutex_init",
            "lea rdi, [r15 + 0x48]",
            "mov rdx, 0",
            "mov rsi, 0",
            "mov r14, qword gs:[0]",
            "call __mutex_init",
            "lea rdi, [r15 + 0x80]",
            "mov rdx, 0",
            "mov rsi, 0",
            "call __mutex_init",
            "lea rdi, [r15 + 0xb8]",
            "mov rdx, 0",
            "mov rsi, 0",
            "call __mutex_init",
            "lea rax, [r15 + 0x70]",
            "movabs r10, 0xfffffffe0",
            "lea rdi, [r15 + 0x108]",
            "mov qword [r15], r15",
            "mov qword [r15 + 8], r15",
            "mov rdx, 0",
            "mov qword [r15 + 0x70], rax",
            "mov qword [r15 + 0x78], rax",
            "lea rax, [r15 + 0xa8]",
            "mov qword [r15 + 0x38], r12",
            "mov qword [r15 + 0x40], r12",
            "mov rsi, 0",
            "mov qword [r15 + 0xa8], rax",
            "mov qword [r15 + 0xb0], rax",
            "lea rax, [r15 + 0xf0]",
            "mov qword [r15 + 0xe8], r10",
            "mov qword [r15 + 0x100], 0",
            "mov qword [r15 + 0xf0], rax",
            "mov qword [r15 + 0xf8], rax",
            "call __init_waitqueue_head",
            "lea rax, [r14 + 0x4b8]",
            "mov qword [rbp - 0x38], rax",
            "nop word [rax + rax]",
            "mov rdi, qword [0x080005ff]",
            "mov esi, 0x80d0",
            "call kmem_cache_alloc",
            "test rax, rax",
            "mov r11, rax",
            "je 0x8000660",
            "add dword [r15 + 0xe0], 1",
            "cmp dword [0x08000620], 1",
            "jg 0x80006da",
            "mov rax, qword [r15 + 0x38]",
            "sub ebx, 1",
            "mov qword [rax + 8], r11",
            "mov qword [r11], rax",
            "mov qword [r11 + 8], r12",
            "mov qword [r15 + 0x38], r11",
            "jne 0x80005f8",
            "cmp dword [0x08000645], 1",
            "jg current_task",
            "xor eax, eax",
            "add rsp, 0x18",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov rdi, qword [r15 + 0x38]",
            "cmp r12, rdi",
            "mov rbx, qword [rdi]",
            "je 0x80006a9",
            "nop dword [rax]",
            "mov rax, qword [rdi + 8]",
            "movabs r8, 0xdead000000100100",
            "movabs r9, 0xdead000000200200",
            "mov qword [rbx + 8], rax",
            "mov qword [rax], rbx",
            "mov qword [rdi], r8",
            "mov qword [rdi + 8], r9",
            "call kfree",
            "mov rax, rbx",
            "mov rdi, rbx",
            "mov rbx, qword [rbx]",
            "cmp r12, rax",
            "jne 0x8000670",
            "mov rdi, r15",
            "call kfree",
            "mov qword [r13 + 0xd0], 0",
            "add rsp, 0x18",
            "mov eax, 0xfffffff4",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, 0xfffffff4",
            "jmp 0x800064d",
            "mov edx, dword [r14 + 0x318]",
            "mov rsi, qword [rbp - 0x38]",
            "mov r9, rax",
            "mov r8d, 0x1e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x40], r11",
            "call printk",
            "mov r11, qword [rbp - 0x40]",
            "jmp 0x8000626",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, 0x10",
            "mov r8d, 0x1e5",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "xor eax, eax",
            "jmp 0x800064d"
        ]
    },
    "sym.cryptask_routine": {
        "function_address": "0x08000990",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "mov r13, rdi",
            "push r12",
            "lea r12, [rdi - 0xe8]",
            "push rbx",
            "lea r14, [r12 + 0x80]",
            "lea rbx, [rbp - 0x40]",
            "sub rsp, 0x28",
            "mov rdi, r14",
            "mov qword [rbp - 0x40], rbx",
            "mov qword [rbp - 0x38], rbx",
            "call mutex_lock",
            "mov rax, qword [r13 - 0x78]",
            "lea rdx, [r12 + 0x70]",
            "mov rcx, qword [r13 - 0x70]",
            "cmp rdx, rax",
            "je 0x8000a01",
            "cmp rax, rcx",
            "je 0x80009e7",
            "cmp rcx, rdx",
            "je 0x8000ab1",
            "mov rsi, qword [rcx]",
            "mov qword [rax + 8], rbx",
            "mov qword [rbp - 0x40], rax",
            "mov qword [rbp - 0x38], rcx",
            "mov qword [rcx], rbx",
            "mov qword [r13 - 0x78], rsi",
            "mov qword [rsi + 8], rdx",
            "mov rdi, r14",
            "call mutex_unlock",
            "mov r15, qword [rbp - 0x40]",
            "cmp r15, rbx",
            "je 0x8000a4f",
            "mov r14, qword gs:[0]",
            "lea rax, [r14 + 0x4b8]",
            "mov qword [rbp - 0x48], rax",
            "nop word cs:[rax + rax]",
            "lea rsi, [r15 + 0x10]",
            "mov rdi, r12",
            "call crypto_run",
            "test eax, eax",
            "mov dword [r15 + 0xa8], eax",
            "jne 0x8000abe",
            "mov r15, qword [r15]",
            "cmp r15, rbx",
            "jne 0x8000a30",
            "lea r14, [r12 + 0xb8]",
            "add r12, 0xa8",
            "mov rdi, r14",
            "call mutex_lock",
            "mov rax, qword [rbp - 0x40]",
            "cmp rax, rbx",
            "je 0x8000a85",
            "mov rcx, qword [r13 - 0x38]",
            "mov rdx, qword [rbp - 0x38]",
            "mov qword [rax + 8], rcx",
            "mov qword [rcx], rax",
            "mov qword [rdx], r12",
            "mov qword [r13 - 0x38], rdx",
            "mov rdi, r14",
            "call mutex_unlock",
            "lea rdi, [r13 + 0x20]",
            "xor ecx, ecx",
            "mov edx, 1",
            "mov esi, 1",
            "call __wake_up",
            "add rsp, 0x28",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov qword [rbp - 0x40], rbx",
            "mov qword [rbp - 0x38], rbx",
            "jmp mutex_unlock",
            "mov edx, dword [0x08000ac4]",
            "test edx, edx",
            "js 0x8000a47",
            "mov edx, dword [r14 + 0x318]",
            "mov rsi, qword [rbp - 0x48]",
            "mov r9d, eax",
            "mov r8d, 0x1b3",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8000a47"
        ]
    },
    "unk.0x80009c7": {
        "function_address": "0x080009c7",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "mov r13, rdi",
            "push r12",
            "lea r12, [rdi - 0xe8]",
            "push rbx",
            "lea r14, [r12 + 0x80]",
            "lea rbx, [rbp - 0x40]",
            "sub rsp, 0x28",
            "mov rdi, r14",
            "mov qword [rbp - 0x40], rbx",
            "mov qword [rbp - 0x38], rbx",
            "call mutex_lock",
            "mov rax, qword [r13 - 0x78]",
            "lea rdx, [r12 + 0x70]",
            "mov rcx, qword [r13 - 0x70]",
            "cmp rdx, rax",
            "je 0x8000a01",
            "cmp rax, rcx",
            "je 0x80009e7",
            "cmp rcx, rdx",
            "je 0x8000ab1",
            "mov rsi, qword [rcx]",
            "mov qword [rax + 8], rbx",
            "mov qword [rbp - 0x40], rax",
            "mov qword [rbp - 0x38], rcx",
            "mov qword [rcx], rbx",
            "mov qword [r13 - 0x78], rsi",
            "mov qword [rsi + 8], rdx",
            "mov rdi, r14",
            "call mutex_unlock",
            "mov r15, qword [rbp - 0x40]",
            "cmp r15, rbx",
            "je 0x8000a4f",
            "mov r14, qword gs:[0]",
            "lea rax, [r14 + 0x4b8]",
            "mov qword [rbp - 0x48], rax",
            "nop word cs:[rax + rax]",
            "lea rsi, [r15 + 0x10]",
            "mov rdi, r12",
            "call crypto_run",
            "test eax, eax",
            "mov dword [r15 + 0xa8], eax",
            "jne 0x8000abe",
            "mov r15, qword [r15]",
            "cmp r15, rbx",
            "jne 0x8000a30",
            "lea r14, [r12 + 0xb8]",
            "add r12, 0xa8",
            "mov rdi, r14",
            "call mutex_lock",
            "mov rax, qword [rbp - 0x40]",
            "cmp rax, rbx",
            "je 0x8000a85",
            "mov rcx, qword [r13 - 0x38]",
            "mov rdx, qword [rbp - 0x38]",
            "mov qword [rax + 8], rcx",
            "mov qword [rcx], rax",
            "mov qword [rdx], r12",
            "mov qword [r13 - 0x38], rdx",
            "mov rdi, r14",
            "call mutex_unlock",
            "lea rdi, [r13 + 0x20]",
            "xor ecx, ecx",
            "mov edx, 1",
            "mov esi, 1",
            "call __wake_up",
            "add rsp, 0x28",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov qword [rbp - 0x40], rbx",
            "mov qword [rbp - 0x38], rbx",
            "jmp mutex_unlock",
            "mov edx, dword [0x08000ac4]",
            "test edx, edx",
            "js 0x8000a47",
            "mov edx, dword [r14 + 0x318]",
            "mov rsi, qword [rbp - 0x48]",
            "mov r9d, eax",
            "mov r8d, 0x1b3",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8000a47"
        ]
    },
    "unk.0x8000a09": {
        "function_address": "0x08000a09",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "mov r13, rdi",
            "push r12",
            "lea r12, [rdi - 0xe8]",
            "push rbx",
            "lea r14, [r12 + 0x80]",
            "lea rbx, [rbp - 0x40]",
            "sub rsp, 0x28",
            "mov rdi, r14",
            "mov qword [rbp - 0x40], rbx",
            "mov qword [rbp - 0x38], rbx",
            "call mutex_lock",
            "mov rax, qword [r13 - 0x78]",
            "lea rdx, [r12 + 0x70]",
            "mov rcx, qword [r13 - 0x70]",
            "cmp rdx, rax",
            "je 0x8000a01",
            "cmp rax, rcx",
            "je 0x80009e7",
            "cmp rcx, rdx",
            "je 0x8000ab1",
            "mov rsi, qword [rcx]",
            "mov qword [rax + 8], rbx",
            "mov qword [rbp - 0x40], rax",
            "mov qword [rbp - 0x38], rcx",
            "mov qword [rcx], rbx",
            "mov qword [r13 - 0x78], rsi",
            "mov qword [rsi + 8], rdx",
            "mov rdi, r14",
            "call mutex_unlock",
            "mov r15, qword [rbp - 0x40]",
            "cmp r15, rbx",
            "je 0x8000a4f",
            "mov r14, qword gs:[0]",
            "lea rax, [r14 + 0x4b8]",
            "mov qword [rbp - 0x48], rax",
            "nop word cs:[rax + rax]",
            "lea rsi, [r15 + 0x10]",
            "mov rdi, r12",
            "call crypto_run",
            "test eax, eax",
            "mov dword [r15 + 0xa8], eax",
            "jne 0x8000abe",
            "mov r15, qword [r15]",
            "cmp r15, rbx",
            "jne 0x8000a30",
            "lea r14, [r12 + 0xb8]",
            "add r12, 0xa8",
            "mov rdi, r14",
            "call mutex_lock",
            "mov rax, qword [rbp - 0x40]",
            "cmp rax, rbx",
            "je 0x8000a85",
            "mov rcx, qword [r13 - 0x38]",
            "mov rdx, qword [rbp - 0x38]",
            "mov qword [rax + 8], rcx",
            "mov qword [rcx], rax",
            "mov qword [rdx], r12",
            "mov qword [r13 - 0x38], rdx",
            "mov rdi, r14",
            "call mutex_unlock",
            "lea rdi, [r13 + 0x20]",
            "xor ecx, ecx",
            "mov edx, 1",
            "mov esi, 1",
            "call __wake_up",
            "add rsp, 0x28",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov qword [rbp - 0x40], rbx",
            "mov qword [rbp - 0x38], rbx",
            "jmp mutex_unlock",
            "mov edx, dword [0x08000ac4]",
            "test edx, edx",
            "js 0x8000a47",
            "mov edx, dword [r14 + 0x318]",
            "mov rsi, qword [rbp - 0x48]",
            "mov r9d, eax",
            "mov r8d, 0x1b3",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8000a47"
        ]
    },
    "unk.0x8000a3c": {
        "function_address": "0x08000a3c",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "mov r13, rdi",
            "push r12",
            "lea r12, [rdi - 0xe8]",
            "push rbx",
            "lea r14, [r12 + 0x80]",
            "lea rbx, [rbp - 0x40]",
            "sub rsp, 0x28",
            "mov rdi, r14",
            "mov qword [rbp - 0x40], rbx",
            "mov qword [rbp - 0x38], rbx",
            "call mutex_lock",
            "mov rax, qword [r13 - 0x78]",
            "lea rdx, [r12 + 0x70]",
            "mov rcx, qword [r13 - 0x70]",
            "cmp rdx, rax",
            "je 0x8000a01",
            "cmp rax, rcx",
            "je 0x80009e7",
            "cmp rcx, rdx",
            "je 0x8000ab1",
            "mov rsi, qword [rcx]",
            "mov qword [rax + 8], rbx",
            "mov qword [rbp - 0x40], rax",
            "mov qword [rbp - 0x38], rcx",
            "mov qword [rcx], rbx",
            "mov qword [r13 - 0x78], rsi",
            "mov qword [rsi + 8], rdx",
            "mov rdi, r14",
            "call mutex_unlock",
            "mov r15, qword [rbp - 0x40]",
            "cmp r15, rbx",
            "je 0x8000a4f",
            "mov r14, qword gs:[0]",
            "lea rax, [r14 + 0x4b8]",
            "mov qword [rbp - 0x48], rax",
            "nop word cs:[rax + rax]",
            "lea rsi, [r15 + 0x10]",
            "mov rdi, r12",
            "call crypto_run",
            "test eax, eax",
            "mov dword [r15 + 0xa8], eax",
            "jne 0x8000abe",
            "mov r15, qword [r15]",
            "cmp r15, rbx",
            "jne 0x8000a30",
            "lea r14, [r12 + 0xb8]",
            "add r12, 0xa8",
            "mov rdi, r14",
            "call mutex_lock",
            "mov rax, qword [rbp - 0x40]",
            "cmp rax, rbx",
            "je 0x8000a85",
            "mov rcx, qword [r13 - 0x38]",
            "mov rdx, qword [rbp - 0x38]",
            "mov qword [rax + 8], rcx",
            "mov qword [rcx], rax",
            "mov qword [rdx], r12",
            "mov qword [r13 - 0x38], rdx",
            "mov rdi, r14",
            "call mutex_unlock",
            "lea rdi, [r13 + 0x20]",
            "xor ecx, ecx",
            "mov edx, 1",
            "mov esi, 1",
            "call __wake_up",
            "add rsp, 0x28",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov qword [rbp - 0x40], rbx",
            "mov qword [rbp - 0x38], rbx",
            "jmp mutex_unlock",
            "mov edx, dword [0x08000ac4]",
            "test edx, edx",
            "js 0x8000a47",
            "mov edx, dword [r14 + 0x318]",
            "mov rsi, qword [rbp - 0x48]",
            "mov r9d, eax",
            "mov r8d, 0x1b3",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8000a47"
        ]
    },
    "unk.0x8000a66": {
        "function_address": "0x08000a66",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "mov r13, rdi",
            "push r12",
            "lea r12, [rdi - 0xe8]",
            "push rbx",
            "lea r14, [r12 + 0x80]",
            "lea rbx, [rbp - 0x40]",
            "sub rsp, 0x28",
            "mov rdi, r14",
            "mov qword [rbp - 0x40], rbx",
            "mov qword [rbp - 0x38], rbx",
            "call mutex_lock",
            "mov rax, qword [r13 - 0x78]",
            "lea rdx, [r12 + 0x70]",
            "mov rcx, qword [r13 - 0x70]",
            "cmp rdx, rax",
            "je 0x8000a01",
            "cmp rax, rcx",
            "je 0x80009e7",
            "cmp rcx, rdx",
            "je 0x8000ab1",
            "mov rsi, qword [rcx]",
            "mov qword [rax + 8], rbx",
            "mov qword [rbp - 0x40], rax",
            "mov qword [rbp - 0x38], rcx",
            "mov qword [rcx], rbx",
            "mov qword [r13 - 0x78], rsi",
            "mov qword [rsi + 8], rdx",
            "mov rdi, r14",
            "call mutex_unlock",
            "mov r15, qword [rbp - 0x40]",
            "cmp r15, rbx",
            "je 0x8000a4f",
            "mov r14, qword gs:[0]",
            "lea rax, [r14 + 0x4b8]",
            "mov qword [rbp - 0x48], rax",
            "nop word cs:[rax + rax]",
            "lea rsi, [r15 + 0x10]",
            "mov rdi, r12",
            "call crypto_run",
            "test eax, eax",
            "mov dword [r15 + 0xa8], eax",
            "jne 0x8000abe",
            "mov r15, qword [r15]",
            "cmp r15, rbx",
            "jne 0x8000a30",
            "lea r14, [r12 + 0xb8]",
            "add r12, 0xa8",
            "mov rdi, r14",
            "call mutex_lock",
            "mov rax, qword [rbp - 0x40]",
            "cmp rax, rbx",
            "je 0x8000a85",
            "mov rcx, qword [r13 - 0x38]",
            "mov rdx, qword [rbp - 0x38]",
            "mov qword [rax + 8], rcx",
            "mov qword [rcx], rax",
            "mov qword [rdx], r12",
            "mov qword [r13 - 0x38], rdx",
            "mov rdi, r14",
            "call mutex_unlock",
            "lea rdi, [r13 + 0x20]",
            "xor ecx, ecx",
            "mov edx, 1",
            "mov esi, 1",
            "call __wake_up",
            "add rsp, 0x28",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov qword [rbp - 0x40], rbx",
            "mov qword [rbp - 0x38], rbx",
            "jmp mutex_unlock",
            "mov edx, dword [0x08000ac4]",
            "test edx, edx",
            "js 0x8000a47",
            "mov edx, dword [r14 + 0x318]",
            "mov rsi, qword [rbp - 0x48]",
            "mov r9d, eax",
            "mov r8d, 0x1b3",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8000a47"
        ]
    },
    "unk.0x8000a8d": {
        "function_address": "0x08000a8d",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "mov r13, rdi",
            "push r12",
            "lea r12, [rdi - 0xe8]",
            "push rbx",
            "lea r14, [r12 + 0x80]",
            "lea rbx, [rbp - 0x40]",
            "sub rsp, 0x28",
            "mov rdi, r14",
            "mov qword [rbp - 0x40], rbx",
            "mov qword [rbp - 0x38], rbx",
            "call mutex_lock",
            "mov rax, qword [r13 - 0x78]",
            "lea rdx, [r12 + 0x70]",
            "mov rcx, qword [r13 - 0x70]",
            "cmp rdx, rax",
            "je 0x8000a01",
            "cmp rax, rcx",
            "je 0x80009e7",
            "cmp rcx, rdx",
            "je 0x8000ab1",
            "mov rsi, qword [rcx]",
            "mov qword [rax + 8], rbx",
            "mov qword [rbp - 0x40], rax",
            "mov qword [rbp - 0x38], rcx",
            "mov qword [rcx], rbx",
            "mov qword [r13 - 0x78], rsi",
            "mov qword [rsi + 8], rdx",
            "mov rdi, r14",
            "call mutex_unlock",
            "mov r15, qword [rbp - 0x40]",
            "cmp r15, rbx",
            "je 0x8000a4f",
            "mov r14, qword gs:[0]",
            "lea rax, [r14 + 0x4b8]",
            "mov qword [rbp - 0x48], rax",
            "nop word cs:[rax + rax]",
            "lea rsi, [r15 + 0x10]",
            "mov rdi, r12",
            "call crypto_run",
            "test eax, eax",
            "mov dword [r15 + 0xa8], eax",
            "jne 0x8000abe",
            "mov r15, qword [r15]",
            "cmp r15, rbx",
            "jne 0x8000a30",
            "lea r14, [r12 + 0xb8]",
            "add r12, 0xa8",
            "mov rdi, r14",
            "call mutex_lock",
            "mov rax, qword [rbp - 0x40]",
            "cmp rax, rbx",
            "je 0x8000a85",
            "mov rcx, qword [r13 - 0x38]",
            "mov rdx, qword [rbp - 0x38]",
            "mov qword [rax + 8], rcx",
            "mov qword [rcx], rax",
            "mov qword [rdx], r12",
            "mov qword [r13 - 0x38], rdx",
            "mov rdi, r14",
            "call mutex_unlock",
            "lea rdi, [r13 + 0x20]",
            "xor ecx, ecx",
            "mov edx, 1",
            "mov esi, 1",
            "call __wake_up",
            "add rsp, 0x28",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov qword [rbp - 0x40], rbx",
            "mov qword [rbp - 0x38], rbx",
            "jmp mutex_unlock",
            "mov edx, dword [0x08000ac4]",
            "test edx, edx",
            "js 0x8000a47",
            "mov edx, dword [r14 + 0x318]",
            "mov rsi, qword [rbp - 0x48]",
            "mov r9d, eax",
            "mov r8d, 0x1b3",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8000a47"
        ]
    },
    "unk.0x8000aa2": {
        "function_address": "0x08000aa2",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "mov r13, rdi",
            "push r12",
            "lea r12, [rdi - 0xe8]",
            "push rbx",
            "lea r14, [r12 + 0x80]",
            "lea rbx, [rbp - 0x40]",
            "sub rsp, 0x28",
            "mov rdi, r14",
            "mov qword [rbp - 0x40], rbx",
            "mov qword [rbp - 0x38], rbx",
            "call mutex_lock",
            "mov rax, qword [r13 - 0x78]",
            "lea rdx, [r12 + 0x70]",
            "mov rcx, qword [r13 - 0x70]",
            "cmp rdx, rax",
            "je 0x8000a01",
            "cmp rax, rcx",
            "je 0x80009e7",
            "cmp rcx, rdx",
            "je 0x8000ab1",
            "mov rsi, qword [rcx]",
            "mov qword [rax + 8], rbx",
            "mov qword [rbp - 0x40], rax",
            "mov qword [rbp - 0x38], rcx",
            "mov qword [rcx], rbx",
            "mov qword [r13 - 0x78], rsi",
            "mov qword [rsi + 8], rdx",
            "mov rdi, r14",
            "call mutex_unlock",
            "mov r15, qword [rbp - 0x40]",
            "cmp r15, rbx",
            "je 0x8000a4f",
            "mov r14, qword gs:[0]",
            "lea rax, [r14 + 0x4b8]",
            "mov qword [rbp - 0x48], rax",
            "nop word cs:[rax + rax]",
            "lea rsi, [r15 + 0x10]",
            "mov rdi, r12",
            "call crypto_run",
            "test eax, eax",
            "mov dword [r15 + 0xa8], eax",
            "jne 0x8000abe",
            "mov r15, qword [r15]",
            "cmp r15, rbx",
            "jne 0x8000a30",
            "lea r14, [r12 + 0xb8]",
            "add r12, 0xa8",
            "mov rdi, r14",
            "call mutex_lock",
            "mov rax, qword [rbp - 0x40]",
            "cmp rax, rbx",
            "je 0x8000a85",
            "mov rcx, qword [r13 - 0x38]",
            "mov rdx, qword [rbp - 0x38]",
            "mov qword [rax + 8], rcx",
            "mov qword [rcx], rax",
            "mov qword [rdx], r12",
            "mov qword [r13 - 0x38], rdx",
            "mov rdi, r14",
            "call mutex_unlock",
            "lea rdi, [r13 + 0x20]",
            "xor ecx, ecx",
            "mov edx, 1",
            "mov esi, 1",
            "call __wake_up",
            "add rsp, 0x28",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov qword [rbp - 0x40], rbx",
            "mov qword [rbp - 0x38], rbx",
            "jmp mutex_unlock",
            "mov edx, dword [0x08000ac4]",
            "test edx, edx",
            "js 0x8000a47",
            "mov edx, dword [r14 + 0x318]",
            "mov rsi, qword [rbp - 0x48]",
            "mov r9d, eax",
            "mov r8d, 0x1b3",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8000a47"
        ]
    },
    "unk.0x8000af5": {
        "function_address": "0x08000af5",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "mov r13, rdi",
            "push r12",
            "lea r12, [rdi - 0xe8]",
            "push rbx",
            "lea r14, [r12 + 0x80]",
            "lea rbx, [rbp - 0x40]",
            "sub rsp, 0x28",
            "mov rdi, r14",
            "mov qword [rbp - 0x40], rbx",
            "mov qword [rbp - 0x38], rbx",
            "call mutex_lock",
            "mov rax, qword [r13 - 0x78]",
            "lea rdx, [r12 + 0x70]",
            "mov rcx, qword [r13 - 0x70]",
            "cmp rdx, rax",
            "je 0x8000a01",
            "cmp rax, rcx",
            "je 0x80009e7",
            "cmp rcx, rdx",
            "je 0x8000ab1",
            "mov rsi, qword [rcx]",
            "mov qword [rax + 8], rbx",
            "mov qword [rbp - 0x40], rax",
            "mov qword [rbp - 0x38], rcx",
            "mov qword [rcx], rbx",
            "mov qword [r13 - 0x78], rsi",
            "mov qword [rsi + 8], rdx",
            "mov rdi, r14",
            "call mutex_unlock",
            "mov r15, qword [rbp - 0x40]",
            "cmp r15, rbx",
            "je 0x8000a4f",
            "mov r14, qword gs:[0]",
            "lea rax, [r14 + 0x4b8]",
            "mov qword [rbp - 0x48], rax",
            "nop word cs:[rax + rax]",
            "lea rsi, [r15 + 0x10]",
            "mov rdi, r12",
            "call crypto_run",
            "test eax, eax",
            "mov dword [r15 + 0xa8], eax",
            "jne 0x8000abe",
            "mov r15, qword [r15]",
            "cmp r15, rbx",
            "jne 0x8000a30",
            "lea r14, [r12 + 0xb8]",
            "add r12, 0xa8",
            "mov rdi, r14",
            "call mutex_lock",
            "mov rax, qword [rbp - 0x40]",
            "cmp rax, rbx",
            "je 0x8000a85",
            "mov rcx, qword [r13 - 0x38]",
            "mov rdx, qword [rbp - 0x38]",
            "mov qword [rax + 8], rcx",
            "mov qword [rcx], rax",
            "mov qword [rdx], r12",
            "mov qword [r13 - 0x38], rdx",
            "mov rdi, r14",
            "call mutex_unlock",
            "lea rdi, [r13 + 0x20]",
            "xor ecx, ecx",
            "mov edx, 1",
            "mov esi, 1",
            "call __wake_up",
            "add rsp, 0x28",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov qword [rbp - 0x40], rbx",
            "mov qword [rbp - 0x38], rbx",
            "jmp mutex_unlock",
            "mov edx, dword [0x08000ac4]",
            "test edx, edx",
            "js 0x8000a47",
            "mov edx, dword [r14 + 0x318]",
            "mov rsi, qword [rbp - 0x48]",
            "mov r9d, eax",
            "mov r8d, 0x1b3",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8000a47"
        ]
    },
    "sym.crypto_finish_session": {
        "function_address": "0x08000750",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r14",
            "push r13",
            "lea r13, [rdi + 0x10]",
            "push r12",
            "mov r12d, esi",
            "push rbx",
            "mov rbx, rdi",
            "mov rdi, r13",
            "call mutex_lock",
            "mov rcx, qword [rbx]",
            "cmp rbx, rcx",
            "mov rax, qword [rcx]",
            "je 0x80007a4",
            "cmp dword [rcx + 0xb0], r12d",
            "jne 0x800079c",
            "jmp 0x8000872",
            "cmp dword [rax + 0xb0], r12d",
            "je 0x80007c8",
            "mov rax, rdx",
            "cmp rbx, rax",
            "mov rdx, qword [rax]",
            "jne 0x8000790",
            "test rbx, rbx",
            "je cryptodev_verbosity",
            "xor ebx, ebx",
            "mov rdi, r13",
            "call mutex_unlock",
            "mov eax, ebx",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop rbp",
            "ret",
            "mov rbx, rax",
            "mov rax, qword [rbx + 8]",
            "movabs r14, 0xdead000000100100",
            "mov qword [rdx + 8], rax",
            "mov qword [rax], rdx",
            "movabs rax, 0xdead000000200200",
            "mov qword [rbx], r14",
            "lea r14, [rbx + 0x10]",
            "mov qword [rbx + 8], rax",
            "mov rdi, r14",
            "call mutex_trylock",
            "test eax, eax",
            "jne 0x8000816",
            "cmp dword [0x08000808], 1",
            "jg current_task",
            "mov rdi, r14",
            "call mutex_lock",
            "cmp dword [0x0800081d], 1",
            "jg current_task",
            "lea rdi, [rbx + 0x38]",
            "call cryptodev_cipher_deinit",
            "lea rdi, [rbx + 0x88]",
            "call cryptodev_hash_deinit",
            "cmp dword [0x0800083f], 1",
            "jg current_task",
            "mov rdi, qword [rbx + 0xc8]",
            "call kfree",
            "mov rdi, qword [rbx + 0xd0]",
            "call kfree",
            "mov rdi, r14",
            "call mutex_unlock",
            "mov rdi, rbx",
            "call kfree",
            "jmp 0x80007a4",
            "mov rdx, rax",
            "mov rbx, rcx",
            "jmp 0x80007cb",
            "mov r11d, dword [0x08000884]",
            "test r11d, r11d",
            "jg 0x80008d0",
            "mov ebx, 0xfffffffe",
            "jmp mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx + 0xb0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x152",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp mutex_lock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x173",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov ebx, 0xfffffffe",
            "call printk",
            "jmp mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx + 0xb0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x155",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8000823",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx + 0xb8]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x158",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8000845"
        ]
    },
    "unk.0x800076d": {
        "function_address": "0x0800076d",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r14",
            "push r13",
            "lea r13, [rdi + 0x10]",
            "push r12",
            "mov r12d, esi",
            "push rbx",
            "mov rbx, rdi",
            "mov rdi, r13",
            "call mutex_lock",
            "mov rcx, qword [rbx]",
            "cmp rbx, rcx",
            "mov rax, qword [rcx]",
            "je 0x80007a4",
            "cmp dword [rcx + 0xb0], r12d",
            "jne 0x800079c",
            "jmp 0x8000872",
            "cmp dword [rax + 0xb0], r12d",
            "je 0x80007c8",
            "mov rax, rdx",
            "cmp rbx, rax",
            "mov rdx, qword [rax]",
            "jne 0x8000790",
            "test rbx, rbx",
            "je cryptodev_verbosity",
            "xor ebx, ebx",
            "mov rdi, r13",
            "call mutex_unlock",
            "mov eax, ebx",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop rbp",
            "ret",
            "mov rbx, rax",
            "mov rax, qword [rbx + 8]",
            "movabs r14, 0xdead000000100100",
            "mov qword [rdx + 8], rax",
            "mov qword [rax], rdx",
            "movabs rax, 0xdead000000200200",
            "mov qword [rbx], r14",
            "lea r14, [rbx + 0x10]",
            "mov qword [rbx + 8], rax",
            "mov rdi, r14",
            "call mutex_trylock",
            "test eax, eax",
            "jne 0x8000816",
            "cmp dword [0x08000808], 1",
            "jg current_task",
            "mov rdi, r14",
            "call mutex_lock",
            "cmp dword [0x0800081d], 1",
            "jg current_task",
            "lea rdi, [rbx + 0x38]",
            "call cryptodev_cipher_deinit",
            "lea rdi, [rbx + 0x88]",
            "call cryptodev_hash_deinit",
            "cmp dword [0x0800083f], 1",
            "jg current_task",
            "mov rdi, qword [rbx + 0xc8]",
            "call kfree",
            "mov rdi, qword [rbx + 0xd0]",
            "call kfree",
            "mov rdi, r14",
            "call mutex_unlock",
            "mov rdi, rbx",
            "call kfree",
            "jmp 0x80007a4",
            "mov rdx, rax",
            "mov rbx, rcx",
            "jmp 0x80007cb",
            "mov r11d, dword [0x08000884]",
            "test r11d, r11d",
            "jg 0x80008d0",
            "mov ebx, 0xfffffffe",
            "jmp mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx + 0xb0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x152",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp mutex_lock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x173",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov ebx, 0xfffffffe",
            "call printk",
            "jmp mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx + 0xb0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x155",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8000823",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx + 0xb8]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x158",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8000845"
        ]
    },
    "unk.0x80007b7": {
        "function_address": "0x080007b7",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r14",
            "push r13",
            "lea r13, [rdi + 0x10]",
            "push r12",
            "mov r12d, esi",
            "push rbx",
            "mov rbx, rdi",
            "mov rdi, r13",
            "call mutex_lock",
            "mov rcx, qword [rbx]",
            "cmp rbx, rcx",
            "mov rax, qword [rcx]",
            "je 0x80007a4",
            "cmp dword [rcx + 0xb0], r12d",
            "jne 0x800079c",
            "jmp 0x8000872",
            "cmp dword [rax + 0xb0], r12d",
            "je 0x80007c8",
            "mov rax, rdx",
            "cmp rbx, rax",
            "mov rdx, qword [rax]",
            "jne 0x8000790",
            "test rbx, rbx",
            "je cryptodev_verbosity",
            "xor ebx, ebx",
            "mov rdi, r13",
            "call mutex_unlock",
            "mov eax, ebx",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop rbp",
            "ret",
            "mov rbx, rax",
            "mov rax, qword [rbx + 8]",
            "movabs r14, 0xdead000000100100",
            "mov qword [rdx + 8], rax",
            "mov qword [rax], rdx",
            "movabs rax, 0xdead000000200200",
            "mov qword [rbx], r14",
            "lea r14, [rbx + 0x10]",
            "mov qword [rbx + 8], rax",
            "mov rdi, r14",
            "call mutex_trylock",
            "test eax, eax",
            "jne 0x8000816",
            "cmp dword [0x08000808], 1",
            "jg current_task",
            "mov rdi, r14",
            "call mutex_lock",
            "cmp dword [0x0800081d], 1",
            "jg current_task",
            "lea rdi, [rbx + 0x38]",
            "call cryptodev_cipher_deinit",
            "lea rdi, [rbx + 0x88]",
            "call cryptodev_hash_deinit",
            "cmp dword [0x0800083f], 1",
            "jg current_task",
            "mov rdi, qword [rbx + 0xc8]",
            "call kfree",
            "mov rdi, qword [rbx + 0xd0]",
            "call kfree",
            "mov rdi, r14",
            "call mutex_unlock",
            "mov rdi, rbx",
            "call kfree",
            "jmp 0x80007a4",
            "mov rdx, rax",
            "mov rbx, rcx",
            "jmp 0x80007cb",
            "mov r11d, dword [0x08000884]",
            "test r11d, r11d",
            "jg 0x80008d0",
            "mov ebx, 0xfffffffe",
            "jmp mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx + 0xb0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x152",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp mutex_lock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x173",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov ebx, 0xfffffffe",
            "call printk",
            "jmp mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx + 0xb0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x155",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8000823",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx + 0xb8]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x158",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8000845"
        ]
    },
    "unk.0x80007fd": {
        "function_address": "0x080007fd",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r14",
            "push r13",
            "lea r13, [rdi + 0x10]",
            "push r12",
            "mov r12d, esi",
            "push rbx",
            "mov rbx, rdi",
            "mov rdi, r13",
            "call mutex_lock",
            "mov rcx, qword [rbx]",
            "cmp rbx, rcx",
            "mov rax, qword [rcx]",
            "je 0x80007a4",
            "cmp dword [rcx + 0xb0], r12d",
            "jne 0x800079c",
            "jmp 0x8000872",
            "cmp dword [rax + 0xb0], r12d",
            "je 0x80007c8",
            "mov rax, rdx",
            "cmp rbx, rax",
            "mov rdx, qword [rax]",
            "jne 0x8000790",
            "test rbx, rbx",
            "je cryptodev_verbosity",
            "xor ebx, ebx",
            "mov rdi, r13",
            "call mutex_unlock",
            "mov eax, ebx",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop rbp",
            "ret",
            "mov rbx, rax",
            "mov rax, qword [rbx + 8]",
            "movabs r14, 0xdead000000100100",
            "mov qword [rdx + 8], rax",
            "mov qword [rax], rdx",
            "movabs rax, 0xdead000000200200",
            "mov qword [rbx], r14",
            "lea r14, [rbx + 0x10]",
            "mov qword [rbx + 8], rax",
            "mov rdi, r14",
            "call mutex_trylock",
            "test eax, eax",
            "jne 0x8000816",
            "cmp dword [0x08000808], 1",
            "jg current_task",
            "mov rdi, r14",
            "call mutex_lock",
            "cmp dword [0x0800081d], 1",
            "jg current_task",
            "lea rdi, [rbx + 0x38]",
            "call cryptodev_cipher_deinit",
            "lea rdi, [rbx + 0x88]",
            "call cryptodev_hash_deinit",
            "cmp dword [0x0800083f], 1",
            "jg current_task",
            "mov rdi, qword [rbx + 0xc8]",
            "call kfree",
            "mov rdi, qword [rbx + 0xd0]",
            "call kfree",
            "mov rdi, r14",
            "call mutex_unlock",
            "mov rdi, rbx",
            "call kfree",
            "jmp 0x80007a4",
            "mov rdx, rax",
            "mov rbx, rcx",
            "jmp 0x80007cb",
            "mov r11d, dword [0x08000884]",
            "test r11d, r11d",
            "jg 0x80008d0",
            "mov ebx, 0xfffffffe",
            "jmp mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx + 0xb0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x152",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp mutex_lock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x173",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov ebx, 0xfffffffe",
            "call printk",
            "jmp mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx + 0xb0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x155",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8000823",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx + 0xb8]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x158",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8000845"
        ]
    },
    "unk.0x8000816": {
        "function_address": "0x08000816",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r14",
            "push r13",
            "lea r13, [rdi + 0x10]",
            "push r12",
            "mov r12d, esi",
            "push rbx",
            "mov rbx, rdi",
            "mov rdi, r13",
            "call mutex_lock",
            "mov rcx, qword [rbx]",
            "cmp rbx, rcx",
            "mov rax, qword [rcx]",
            "je 0x80007a4",
            "cmp dword [rcx + 0xb0], r12d",
            "jne 0x800079c",
            "jmp 0x8000872",
            "cmp dword [rax + 0xb0], r12d",
            "je 0x80007c8",
            "mov rax, rdx",
            "cmp rbx, rax",
            "mov rdx, qword [rax]",
            "jne 0x8000790",
            "test rbx, rbx",
            "je cryptodev_verbosity",
            "xor ebx, ebx",
            "mov rdi, r13",
            "call mutex_unlock",
            "mov eax, ebx",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop rbp",
            "ret",
            "mov rbx, rax",
            "mov rax, qword [rbx + 8]",
            "movabs r14, 0xdead000000100100",
            "mov qword [rdx + 8], rax",
            "mov qword [rax], rdx",
            "movabs rax, 0xdead000000200200",
            "mov qword [rbx], r14",
            "lea r14, [rbx + 0x10]",
            "mov qword [rbx + 8], rax",
            "mov rdi, r14",
            "call mutex_trylock",
            "test eax, eax",
            "jne 0x8000816",
            "cmp dword [0x08000808], 1",
            "jg current_task",
            "mov rdi, r14",
            "call mutex_lock",
            "cmp dword [0x0800081d], 1",
            "jg current_task",
            "lea rdi, [rbx + 0x38]",
            "call cryptodev_cipher_deinit",
            "lea rdi, [rbx + 0x88]",
            "call cryptodev_hash_deinit",
            "cmp dword [0x0800083f], 1",
            "jg current_task",
            "mov rdi, qword [rbx + 0xc8]",
            "call kfree",
            "mov rdi, qword [rbx + 0xd0]",
            "call kfree",
            "mov rdi, r14",
            "call mutex_unlock",
            "mov rdi, rbx",
            "call kfree",
            "jmp 0x80007a4",
            "mov rdx, rax",
            "mov rbx, rcx",
            "jmp 0x80007cb",
            "mov r11d, dword [0x08000884]",
            "test r11d, r11d",
            "jg 0x80008d0",
            "mov ebx, 0xfffffffe",
            "jmp mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx + 0xb0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x152",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp mutex_lock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x173",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov ebx, 0xfffffffe",
            "call printk",
            "jmp mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx + 0xb0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x155",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8000823",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx + 0xb8]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x158",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8000845"
        ]
    },
    "unk.0x800082c": {
        "function_address": "0x0800082c",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r14",
            "push r13",
            "lea r13, [rdi + 0x10]",
            "push r12",
            "mov r12d, esi",
            "push rbx",
            "mov rbx, rdi",
            "mov rdi, r13",
            "call mutex_lock",
            "mov rcx, qword [rbx]",
            "cmp rbx, rcx",
            "mov rax, qword [rcx]",
            "je 0x80007a4",
            "cmp dword [rcx + 0xb0], r12d",
            "jne 0x800079c",
            "jmp 0x8000872",
            "cmp dword [rax + 0xb0], r12d",
            "je 0x80007c8",
            "mov rax, rdx",
            "cmp rbx, rax",
            "mov rdx, qword [rax]",
            "jne 0x8000790",
            "test rbx, rbx",
            "je cryptodev_verbosity",
            "xor ebx, ebx",
            "mov rdi, r13",
            "call mutex_unlock",
            "mov eax, ebx",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop rbp",
            "ret",
            "mov rbx, rax",
            "mov rax, qword [rbx + 8]",
            "movabs r14, 0xdead000000100100",
            "mov qword [rdx + 8], rax",
            "mov qword [rax], rdx",
            "movabs rax, 0xdead000000200200",
            "mov qword [rbx], r14",
            "lea r14, [rbx + 0x10]",
            "mov qword [rbx + 8], rax",
            "mov rdi, r14",
            "call mutex_trylock",
            "test eax, eax",
            "jne 0x8000816",
            "cmp dword [0x08000808], 1",
            "jg current_task",
            "mov rdi, r14",
            "call mutex_lock",
            "cmp dword [0x0800081d], 1",
            "jg current_task",
            "lea rdi, [rbx + 0x38]",
            "call cryptodev_cipher_deinit",
            "lea rdi, [rbx + 0x88]",
            "call cryptodev_hash_deinit",
            "cmp dword [0x0800083f], 1",
            "jg current_task",
            "mov rdi, qword [rbx + 0xc8]",
            "call kfree",
            "mov rdi, qword [rbx + 0xd0]",
            "call kfree",
            "mov rdi, r14",
            "call mutex_unlock",
            "mov rdi, rbx",
            "call kfree",
            "jmp 0x80007a4",
            "mov rdx, rax",
            "mov rbx, rcx",
            "jmp 0x80007cb",
            "mov r11d, dword [0x08000884]",
            "test r11d, r11d",
            "jg 0x80008d0",
            "mov ebx, 0xfffffffe",
            "jmp mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx + 0xb0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x152",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp mutex_lock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x173",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov ebx, 0xfffffffe",
            "call printk",
            "jmp mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx + 0xb0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x155",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8000823",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx + 0xb8]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x158",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8000845"
        ]
    },
    "unk.0x8000838": {
        "function_address": "0x08000838",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r14",
            "push r13",
            "lea r13, [rdi + 0x10]",
            "push r12",
            "mov r12d, esi",
            "push rbx",
            "mov rbx, rdi",
            "mov rdi, r13",
            "call mutex_lock",
            "mov rcx, qword [rbx]",
            "cmp rbx, rcx",
            "mov rax, qword [rcx]",
            "je 0x80007a4",
            "cmp dword [rcx + 0xb0], r12d",
            "jne 0x800079c",
            "jmp 0x8000872",
            "cmp dword [rax + 0xb0], r12d",
            "je 0x80007c8",
            "mov rax, rdx",
            "cmp rbx, rax",
            "mov rdx, qword [rax]",
            "jne 0x8000790",
            "test rbx, rbx",
            "je cryptodev_verbosity",
            "xor ebx, ebx",
            "mov rdi, r13",
            "call mutex_unlock",
            "mov eax, ebx",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop rbp",
            "ret",
            "mov rbx, rax",
            "mov rax, qword [rbx + 8]",
            "movabs r14, 0xdead000000100100",
            "mov qword [rdx + 8], rax",
            "mov qword [rax], rdx",
            "movabs rax, 0xdead000000200200",
            "mov qword [rbx], r14",
            "lea r14, [rbx + 0x10]",
            "mov qword [rbx + 8], rax",
            "mov rdi, r14",
            "call mutex_trylock",
            "test eax, eax",
            "jne 0x8000816",
            "cmp dword [0x08000808], 1",
            "jg current_task",
            "mov rdi, r14",
            "call mutex_lock",
            "cmp dword [0x0800081d], 1",
            "jg current_task",
            "lea rdi, [rbx + 0x38]",
            "call cryptodev_cipher_deinit",
            "lea rdi, [rbx + 0x88]",
            "call cryptodev_hash_deinit",
            "cmp dword [0x0800083f], 1",
            "jg current_task",
            "mov rdi, qword [rbx + 0xc8]",
            "call kfree",
            "mov rdi, qword [rbx + 0xd0]",
            "call kfree",
            "mov rdi, r14",
            "call mutex_unlock",
            "mov rdi, rbx",
            "call kfree",
            "jmp 0x80007a4",
            "mov rdx, rax",
            "mov rbx, rcx",
            "jmp 0x80007cb",
            "mov r11d, dword [0x08000884]",
            "test r11d, r11d",
            "jg 0x80008d0",
            "mov ebx, 0xfffffffe",
            "jmp mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx + 0xb0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x152",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp mutex_lock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x173",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov ebx, 0xfffffffe",
            "call printk",
            "jmp mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx + 0xb0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x155",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8000823",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx + 0xb8]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x158",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8000845"
        ]
    },
    "unk.0x8000851": {
        "function_address": "0x08000851",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r14",
            "push r13",
            "lea r13, [rdi + 0x10]",
            "push r12",
            "mov r12d, esi",
            "push rbx",
            "mov rbx, rdi",
            "mov rdi, r13",
            "call mutex_lock",
            "mov rcx, qword [rbx]",
            "cmp rbx, rcx",
            "mov rax, qword [rcx]",
            "je 0x80007a4",
            "cmp dword [rcx + 0xb0], r12d",
            "jne 0x800079c",
            "jmp 0x8000872",
            "cmp dword [rax + 0xb0], r12d",
            "je 0x80007c8",
            "mov rax, rdx",
            "cmp rbx, rax",
            "mov rdx, qword [rax]",
            "jne 0x8000790",
            "test rbx, rbx",
            "je cryptodev_verbosity",
            "xor ebx, ebx",
            "mov rdi, r13",
            "call mutex_unlock",
            "mov eax, ebx",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop rbp",
            "ret",
            "mov rbx, rax",
            "mov rax, qword [rbx + 8]",
            "movabs r14, 0xdead000000100100",
            "mov qword [rdx + 8], rax",
            "mov qword [rax], rdx",
            "movabs rax, 0xdead000000200200",
            "mov qword [rbx], r14",
            "lea r14, [rbx + 0x10]",
            "mov qword [rbx + 8], rax",
            "mov rdi, r14",
            "call mutex_trylock",
            "test eax, eax",
            "jne 0x8000816",
            "cmp dword [0x08000808], 1",
            "jg current_task",
            "mov rdi, r14",
            "call mutex_lock",
            "cmp dword [0x0800081d], 1",
            "jg current_task",
            "lea rdi, [rbx + 0x38]",
            "call cryptodev_cipher_deinit",
            "lea rdi, [rbx + 0x88]",
            "call cryptodev_hash_deinit",
            "cmp dword [0x0800083f], 1",
            "jg current_task",
            "mov rdi, qword [rbx + 0xc8]",
            "call kfree",
            "mov rdi, qword [rbx + 0xd0]",
            "call kfree",
            "mov rdi, r14",
            "call mutex_unlock",
            "mov rdi, rbx",
            "call kfree",
            "jmp 0x80007a4",
            "mov rdx, rax",
            "mov rbx, rcx",
            "jmp 0x80007cb",
            "mov r11d, dword [0x08000884]",
            "test r11d, r11d",
            "jg 0x80008d0",
            "mov ebx, 0xfffffffe",
            "jmp mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx + 0xb0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x152",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp mutex_lock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x173",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov ebx, 0xfffffffe",
            "call printk",
            "jmp mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx + 0xb0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x155",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8000823",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx + 0xb8]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x158",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8000845"
        ]
    },
    "unk.0x800085d": {
        "function_address": "0x0800085d",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r14",
            "push r13",
            "lea r13, [rdi + 0x10]",
            "push r12",
            "mov r12d, esi",
            "push rbx",
            "mov rbx, rdi",
            "mov rdi, r13",
            "call mutex_lock",
            "mov rcx, qword [rbx]",
            "cmp rbx, rcx",
            "mov rax, qword [rcx]",
            "je 0x80007a4",
            "cmp dword [rcx + 0xb0], r12d",
            "jne 0x800079c",
            "jmp 0x8000872",
            "cmp dword [rax + 0xb0], r12d",
            "je 0x80007c8",
            "mov rax, rdx",
            "cmp rbx, rax",
            "mov rdx, qword [rax]",
            "jne 0x8000790",
            "test rbx, rbx",
            "je cryptodev_verbosity",
            "xor ebx, ebx",
            "mov rdi, r13",
            "call mutex_unlock",
            "mov eax, ebx",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop rbp",
            "ret",
            "mov rbx, rax",
            "mov rax, qword [rbx + 8]",
            "movabs r14, 0xdead000000100100",
            "mov qword [rdx + 8], rax",
            "mov qword [rax], rdx",
            "movabs rax, 0xdead000000200200",
            "mov qword [rbx], r14",
            "lea r14, [rbx + 0x10]",
            "mov qword [rbx + 8], rax",
            "mov rdi, r14",
            "call mutex_trylock",
            "test eax, eax",
            "jne 0x8000816",
            "cmp dword [0x08000808], 1",
            "jg current_task",
            "mov rdi, r14",
            "call mutex_lock",
            "cmp dword [0x0800081d], 1",
            "jg current_task",
            "lea rdi, [rbx + 0x38]",
            "call cryptodev_cipher_deinit",
            "lea rdi, [rbx + 0x88]",
            "call cryptodev_hash_deinit",
            "cmp dword [0x0800083f], 1",
            "jg current_task",
            "mov rdi, qword [rbx + 0xc8]",
            "call kfree",
            "mov rdi, qword [rbx + 0xd0]",
            "call kfree",
            "mov rdi, r14",
            "call mutex_unlock",
            "mov rdi, rbx",
            "call kfree",
            "jmp 0x80007a4",
            "mov rdx, rax",
            "mov rbx, rcx",
            "jmp 0x80007cb",
            "mov r11d, dword [0x08000884]",
            "test r11d, r11d",
            "jg 0x80008d0",
            "mov ebx, 0xfffffffe",
            "jmp mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx + 0xb0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x152",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp mutex_lock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x173",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov ebx, 0xfffffffe",
            "call printk",
            "jmp mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx + 0xb0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x155",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8000823",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx + 0xb8]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x158",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8000845"
        ]
    },
    "unk.0x8000865": {
        "function_address": "0x08000865",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r14",
            "push r13",
            "lea r13, [rdi + 0x10]",
            "push r12",
            "mov r12d, esi",
            "push rbx",
            "mov rbx, rdi",
            "mov rdi, r13",
            "call mutex_lock",
            "mov rcx, qword [rbx]",
            "cmp rbx, rcx",
            "mov rax, qword [rcx]",
            "je 0x80007a4",
            "cmp dword [rcx + 0xb0], r12d",
            "jne 0x800079c",
            "jmp 0x8000872",
            "cmp dword [rax + 0xb0], r12d",
            "je 0x80007c8",
            "mov rax, rdx",
            "cmp rbx, rax",
            "mov rdx, qword [rax]",
            "jne 0x8000790",
            "test rbx, rbx",
            "je cryptodev_verbosity",
            "xor ebx, ebx",
            "mov rdi, r13",
            "call mutex_unlock",
            "mov eax, ebx",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop rbp",
            "ret",
            "mov rbx, rax",
            "mov rax, qword [rbx + 8]",
            "movabs r14, 0xdead000000100100",
            "mov qword [rdx + 8], rax",
            "mov qword [rax], rdx",
            "movabs rax, 0xdead000000200200",
            "mov qword [rbx], r14",
            "lea r14, [rbx + 0x10]",
            "mov qword [rbx + 8], rax",
            "mov rdi, r14",
            "call mutex_trylock",
            "test eax, eax",
            "jne 0x8000816",
            "cmp dword [0x08000808], 1",
            "jg current_task",
            "mov rdi, r14",
            "call mutex_lock",
            "cmp dword [0x0800081d], 1",
            "jg current_task",
            "lea rdi, [rbx + 0x38]",
            "call cryptodev_cipher_deinit",
            "lea rdi, [rbx + 0x88]",
            "call cryptodev_hash_deinit",
            "cmp dword [0x0800083f], 1",
            "jg current_task",
            "mov rdi, qword [rbx + 0xc8]",
            "call kfree",
            "mov rdi, qword [rbx + 0xd0]",
            "call kfree",
            "mov rdi, r14",
            "call mutex_unlock",
            "mov rdi, rbx",
            "call kfree",
            "jmp 0x80007a4",
            "mov rdx, rax",
            "mov rbx, rcx",
            "jmp 0x80007cb",
            "mov r11d, dword [0x08000884]",
            "test r11d, r11d",
            "jg 0x80008d0",
            "mov ebx, 0xfffffffe",
            "jmp mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx + 0xb0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x152",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp mutex_lock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x173",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov ebx, 0xfffffffe",
            "call printk",
            "jmp mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx + 0xb0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x155",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8000823",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx + 0xb8]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x158",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8000845"
        ]
    },
    "unk.0x800086d": {
        "function_address": "0x0800086d",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r14",
            "push r13",
            "lea r13, [rdi + 0x10]",
            "push r12",
            "mov r12d, esi",
            "push rbx",
            "mov rbx, rdi",
            "mov rdi, r13",
            "call mutex_lock",
            "mov rcx, qword [rbx]",
            "cmp rbx, rcx",
            "mov rax, qword [rcx]",
            "je 0x80007a4",
            "cmp dword [rcx + 0xb0], r12d",
            "jne 0x800079c",
            "jmp 0x8000872",
            "cmp dword [rax + 0xb0], r12d",
            "je 0x80007c8",
            "mov rax, rdx",
            "cmp rbx, rax",
            "mov rdx, qword [rax]",
            "jne 0x8000790",
            "test rbx, rbx",
            "je cryptodev_verbosity",
            "xor ebx, ebx",
            "mov rdi, r13",
            "call mutex_unlock",
            "mov eax, ebx",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop rbp",
            "ret",
            "mov rbx, rax",
            "mov rax, qword [rbx + 8]",
            "movabs r14, 0xdead000000100100",
            "mov qword [rdx + 8], rax",
            "mov qword [rax], rdx",
            "movabs rax, 0xdead000000200200",
            "mov qword [rbx], r14",
            "lea r14, [rbx + 0x10]",
            "mov qword [rbx + 8], rax",
            "mov rdi, r14",
            "call mutex_trylock",
            "test eax, eax",
            "jne 0x8000816",
            "cmp dword [0x08000808], 1",
            "jg current_task",
            "mov rdi, r14",
            "call mutex_lock",
            "cmp dword [0x0800081d], 1",
            "jg current_task",
            "lea rdi, [rbx + 0x38]",
            "call cryptodev_cipher_deinit",
            "lea rdi, [rbx + 0x88]",
            "call cryptodev_hash_deinit",
            "cmp dword [0x0800083f], 1",
            "jg current_task",
            "mov rdi, qword [rbx + 0xc8]",
            "call kfree",
            "mov rdi, qword [rbx + 0xd0]",
            "call kfree",
            "mov rdi, r14",
            "call mutex_unlock",
            "mov rdi, rbx",
            "call kfree",
            "jmp 0x80007a4",
            "mov rdx, rax",
            "mov rbx, rcx",
            "jmp 0x80007cb",
            "mov r11d, dword [0x08000884]",
            "test r11d, r11d",
            "jg 0x80008d0",
            "mov ebx, 0xfffffffe",
            "jmp mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx + 0xb0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x152",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp mutex_lock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x173",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov ebx, 0xfffffffe",
            "call printk",
            "jmp mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx + 0xb0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x155",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8000823",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx + 0xb8]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x158",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8000845"
        ]
    },
    "unk.0x80008cb": {
        "function_address": "0x080008cb",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r14",
            "push r13",
            "lea r13, [rdi + 0x10]",
            "push r12",
            "mov r12d, esi",
            "push rbx",
            "mov rbx, rdi",
            "mov rdi, r13",
            "call mutex_lock",
            "mov rcx, qword [rbx]",
            "cmp rbx, rcx",
            "mov rax, qword [rcx]",
            "je 0x80007a4",
            "cmp dword [rcx + 0xb0], r12d",
            "jne 0x800079c",
            "jmp 0x8000872",
            "cmp dword [rax + 0xb0], r12d",
            "je 0x80007c8",
            "mov rax, rdx",
            "cmp rbx, rax",
            "mov rdx, qword [rax]",
            "jne 0x8000790",
            "test rbx, rbx",
            "je cryptodev_verbosity",
            "xor ebx, ebx",
            "mov rdi, r13",
            "call mutex_unlock",
            "mov eax, ebx",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop rbp",
            "ret",
            "mov rbx, rax",
            "mov rax, qword [rbx + 8]",
            "movabs r14, 0xdead000000100100",
            "mov qword [rdx + 8], rax",
            "mov qword [rax], rdx",
            "movabs rax, 0xdead000000200200",
            "mov qword [rbx], r14",
            "lea r14, [rbx + 0x10]",
            "mov qword [rbx + 8], rax",
            "mov rdi, r14",
            "call mutex_trylock",
            "test eax, eax",
            "jne 0x8000816",
            "cmp dword [0x08000808], 1",
            "jg current_task",
            "mov rdi, r14",
            "call mutex_lock",
            "cmp dword [0x0800081d], 1",
            "jg current_task",
            "lea rdi, [rbx + 0x38]",
            "call cryptodev_cipher_deinit",
            "lea rdi, [rbx + 0x88]",
            "call cryptodev_hash_deinit",
            "cmp dword [0x0800083f], 1",
            "jg current_task",
            "mov rdi, qword [rbx + 0xc8]",
            "call kfree",
            "mov rdi, qword [rbx + 0xd0]",
            "call kfree",
            "mov rdi, r14",
            "call mutex_unlock",
            "mov rdi, rbx",
            "call kfree",
            "jmp 0x80007a4",
            "mov rdx, rax",
            "mov rbx, rcx",
            "jmp 0x80007cb",
            "mov r11d, dword [0x08000884]",
            "test r11d, r11d",
            "jg 0x80008d0",
            "mov ebx, 0xfffffffe",
            "jmp mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx + 0xb0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x152",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp mutex_lock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x173",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov ebx, 0xfffffffe",
            "call printk",
            "jmp mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx + 0xb0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x155",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8000823",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx + 0xb8]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x158",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8000845"
        ]
    },
    "unk.0x8000909": {
        "function_address": "0x08000909",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r14",
            "push r13",
            "lea r13, [rdi + 0x10]",
            "push r12",
            "mov r12d, esi",
            "push rbx",
            "mov rbx, rdi",
            "mov rdi, r13",
            "call mutex_lock",
            "mov rcx, qword [rbx]",
            "cmp rbx, rcx",
            "mov rax, qword [rcx]",
            "je 0x80007a4",
            "cmp dword [rcx + 0xb0], r12d",
            "jne 0x800079c",
            "jmp 0x8000872",
            "cmp dword [rax + 0xb0], r12d",
            "je 0x80007c8",
            "mov rax, rdx",
            "cmp rbx, rax",
            "mov rdx, qword [rax]",
            "jne 0x8000790",
            "test rbx, rbx",
            "je cryptodev_verbosity",
            "xor ebx, ebx",
            "mov rdi, r13",
            "call mutex_unlock",
            "mov eax, ebx",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop rbp",
            "ret",
            "mov rbx, rax",
            "mov rax, qword [rbx + 8]",
            "movabs r14, 0xdead000000100100",
            "mov qword [rdx + 8], rax",
            "mov qword [rax], rdx",
            "movabs rax, 0xdead000000200200",
            "mov qword [rbx], r14",
            "lea r14, [rbx + 0x10]",
            "mov qword [rbx + 8], rax",
            "mov rdi, r14",
            "call mutex_trylock",
            "test eax, eax",
            "jne 0x8000816",
            "cmp dword [0x08000808], 1",
            "jg current_task",
            "mov rdi, r14",
            "call mutex_lock",
            "cmp dword [0x0800081d], 1",
            "jg current_task",
            "lea rdi, [rbx + 0x38]",
            "call cryptodev_cipher_deinit",
            "lea rdi, [rbx + 0x88]",
            "call cryptodev_hash_deinit",
            "cmp dword [0x0800083f], 1",
            "jg current_task",
            "mov rdi, qword [rbx + 0xc8]",
            "call kfree",
            "mov rdi, qword [rbx + 0xd0]",
            "call kfree",
            "mov rdi, r14",
            "call mutex_unlock",
            "mov rdi, rbx",
            "call kfree",
            "jmp 0x80007a4",
            "mov rdx, rax",
            "mov rbx, rcx",
            "jmp 0x80007cb",
            "mov r11d, dword [0x08000884]",
            "test r11d, r11d",
            "jg 0x80008d0",
            "mov ebx, 0xfffffffe",
            "jmp mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx + 0xb0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x152",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp mutex_lock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x173",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov ebx, 0xfffffffe",
            "call printk",
            "jmp mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx + 0xb0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x155",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8000823",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx + 0xb8]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x158",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8000845"
        ]
    },
    "unk.0x8000946": {
        "function_address": "0x08000946",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r14",
            "push r13",
            "lea r13, [rdi + 0x10]",
            "push r12",
            "mov r12d, esi",
            "push rbx",
            "mov rbx, rdi",
            "mov rdi, r13",
            "call mutex_lock",
            "mov rcx, qword [rbx]",
            "cmp rbx, rcx",
            "mov rax, qword [rcx]",
            "je 0x80007a4",
            "cmp dword [rcx + 0xb0], r12d",
            "jne 0x800079c",
            "jmp 0x8000872",
            "cmp dword [rax + 0xb0], r12d",
            "je 0x80007c8",
            "mov rax, rdx",
            "cmp rbx, rax",
            "mov rdx, qword [rax]",
            "jne 0x8000790",
            "test rbx, rbx",
            "je cryptodev_verbosity",
            "xor ebx, ebx",
            "mov rdi, r13",
            "call mutex_unlock",
            "mov eax, ebx",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop rbp",
            "ret",
            "mov rbx, rax",
            "mov rax, qword [rbx + 8]",
            "movabs r14, 0xdead000000100100",
            "mov qword [rdx + 8], rax",
            "mov qword [rax], rdx",
            "movabs rax, 0xdead000000200200",
            "mov qword [rbx], r14",
            "lea r14, [rbx + 0x10]",
            "mov qword [rbx + 8], rax",
            "mov rdi, r14",
            "call mutex_trylock",
            "test eax, eax",
            "jne 0x8000816",
            "cmp dword [0x08000808], 1",
            "jg current_task",
            "mov rdi, r14",
            "call mutex_lock",
            "cmp dword [0x0800081d], 1",
            "jg current_task",
            "lea rdi, [rbx + 0x38]",
            "call cryptodev_cipher_deinit",
            "lea rdi, [rbx + 0x88]",
            "call cryptodev_hash_deinit",
            "cmp dword [0x0800083f], 1",
            "jg current_task",
            "mov rdi, qword [rbx + 0xc8]",
            "call kfree",
            "mov rdi, qword [rbx + 0xd0]",
            "call kfree",
            "mov rdi, r14",
            "call mutex_unlock",
            "mov rdi, rbx",
            "call kfree",
            "jmp 0x80007a4",
            "mov rdx, rax",
            "mov rbx, rcx",
            "jmp 0x80007cb",
            "mov r11d, dword [0x08000884]",
            "test r11d, r11d",
            "jg 0x80008d0",
            "mov ebx, 0xfffffffe",
            "jmp mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx + 0xb0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x152",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp mutex_lock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x173",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov ebx, 0xfffffffe",
            "call printk",
            "jmp mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx + 0xb0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x155",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8000823",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx + 0xb8]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x158",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8000845"
        ]
    },
    "unk.0x8000983": {
        "function_address": "0x08000983",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r14",
            "push r13",
            "lea r13, [rdi + 0x10]",
            "push r12",
            "mov r12d, esi",
            "push rbx",
            "mov rbx, rdi",
            "mov rdi, r13",
            "call mutex_lock",
            "mov rcx, qword [rbx]",
            "cmp rbx, rcx",
            "mov rax, qword [rcx]",
            "je 0x80007a4",
            "cmp dword [rcx + 0xb0], r12d",
            "jne 0x800079c",
            "jmp 0x8000872",
            "cmp dword [rax + 0xb0], r12d",
            "je 0x80007c8",
            "mov rax, rdx",
            "cmp rbx, rax",
            "mov rdx, qword [rax]",
            "jne 0x8000790",
            "test rbx, rbx",
            "je cryptodev_verbosity",
            "xor ebx, ebx",
            "mov rdi, r13",
            "call mutex_unlock",
            "mov eax, ebx",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop rbp",
            "ret",
            "mov rbx, rax",
            "mov rax, qword [rbx + 8]",
            "movabs r14, 0xdead000000100100",
            "mov qword [rdx + 8], rax",
            "mov qword [rax], rdx",
            "movabs rax, 0xdead000000200200",
            "mov qword [rbx], r14",
            "lea r14, [rbx + 0x10]",
            "mov qword [rbx + 8], rax",
            "mov rdi, r14",
            "call mutex_trylock",
            "test eax, eax",
            "jne 0x8000816",
            "cmp dword [0x08000808], 1",
            "jg current_task",
            "mov rdi, r14",
            "call mutex_lock",
            "cmp dword [0x0800081d], 1",
            "jg current_task",
            "lea rdi, [rbx + 0x38]",
            "call cryptodev_cipher_deinit",
            "lea rdi, [rbx + 0x88]",
            "call cryptodev_hash_deinit",
            "cmp dword [0x0800083f], 1",
            "jg current_task",
            "mov rdi, qword [rbx + 0xc8]",
            "call kfree",
            "mov rdi, qword [rbx + 0xd0]",
            "call kfree",
            "mov rdi, r14",
            "call mutex_unlock",
            "mov rdi, rbx",
            "call kfree",
            "jmp 0x80007a4",
            "mov rdx, rax",
            "mov rbx, rcx",
            "jmp 0x80007cb",
            "mov r11d, dword [0x08000884]",
            "test r11d, r11d",
            "jg 0x80008d0",
            "mov ebx, 0xfffffffe",
            "jmp mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx + 0xb0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x152",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp mutex_lock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x173",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov ebx, 0xfffffffe",
            "call printk",
            "jmp mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx + 0xb0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x155",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8000823",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx + 0xb8]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x158",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8000845"
        ]
    },
    "sym.crypto_create_session": {
        "function_address": "0x08000b00",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "mov r13, rsi",
            "push r12",
            "push rbx",
            "sub rsp, 0x288",
            "cmp qword [rsi], 0",
            "je cryptodev_verbosity",
            "mov r9d, dword [rsi]",
            "mov r12, rdi",
            "cmp r9d, 0xb",
            "je 0x8001170",
            "jbe 0x8000b88",
            "cmp r9d, 0x17",
            "je 0x8001130",
            "nop dword [rax]",
            "ja 0x8000c10",
            "cmp r9d, 0x10",
            "je 0x8001117",
            "cmp r9d, 0x15",
            "je 0x80010fe",
            "mov r10d, dword [0x08000b61]",
            "test r10d, r10d",
            "jg current_task",
            "mov r10d, 0xffffffea",
            "add rsp, 0x288",
            "mov eax, r10d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "cmp r9d, 1",
            "je 0x8001150",
            "jae 0x8000c40",
            "xor r14d, r14d",
            "mov dword [rbp - 0x28c], 0",
            "xor r15d, r15d",
            "nop dword [rax + rax]",
            "mov r9d, dword [r13 + 4]",
            "cmp r9d, 0x6b",
            "jbe 0x8000c70",
            "mov r8d, dword [0x08000bc5]",
            "test r8d, r8d",
            "jle 0x8000b6a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xe3",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r10d, 0xffffffea",
            "jmp 0x8000b70",
            "cmp r9d, 0x32",
            "je 0x80010e2",
            "cmp r9d, 0x65",
            "jne cryptodev_verbosity",
            "xor r14d, r14d",
            "mov dword [rbp - 0x28c], 0",
            "mov r15, 0",
            "jmp 0x8000bb0",
            "cmp r9d, 2",
            "je 0x80010c9",
            "cmp r9d, 3",
            "jne cryptodev_verbosity",
            "xor r14d, r14d",
            "mov dword [rbp - 0x28c], 0",
            "mov r15, 0",
            "jmp 0x8000bb0",
            "mov eax, r9d",
            "jmp qword [rax*8]",
            "xor r14d, r14d",
            "mov dword [rbp - 0x28c], 0",
            "mov r15, 0",
            "jmp 0x8000bb0",
            "mov r14d, 1",
            "mov dword [rbp - 0x28c], 1",
            "mov r15, 0",
            "jmp 0x8000bb0",
            "xor r14d, r14d",
            "mov dword [rbp - 0x28c], 1",
            "mov r15, 0",
            "jmp 0x8000bb0",
            "xor r14d, r14d",
            "mov dword [rbp - 0x28c], 1",
            "mov r15, 0",
            "jmp 0x8000bb0",
            "xor r14d, r14d",
            "mov dword [rbp - 0x28c], 0",
            "mov r15, 0",
            "jmp 0x8000bb0",
            "xor r14d, r14d",
            "mov dword [rbp - 0x28c], 0",
            "mov r15, 0",
            "jmp 0x8000bb0",
            "xor r14d, r14d",
            "mov dword [rbp - 0x28c], 0",
            "mov r15, 0",
            "jmp 0x8000bb0",
            "mov r11d, dword [0x080011ad]",
            "test r11d, r11d",
            "jle 0x8000b6a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x80",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r10d, 0xffffffea",
            "jmp 0x8000b70",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r10d, 0xffffffea",
            "jmp 0x8000b70"
        ]
    },
    "unk.0x8000bfb": {
        "function_address": "0x08000bfb",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "mov r13, rsi",
            "push r12",
            "push rbx",
            "sub rsp, 0x288",
            "cmp qword [rsi], 0",
            "je cryptodev_verbosity",
            "mov r9d, dword [rsi]",
            "mov r12, rdi",
            "cmp r9d, 0xb",
            "je 0x8001170",
            "jbe 0x8000b88",
            "cmp r9d, 0x17",
            "je 0x8001130",
            "nop dword [rax]",
            "ja 0x8000c10",
            "cmp r9d, 0x10",
            "je 0x8001117",
            "cmp r9d, 0x15",
            "je 0x80010fe",
            "mov r10d, dword [0x08000b61]",
            "test r10d, r10d",
            "jg current_task",
            "mov r10d, 0xffffffea",
            "add rsp, 0x288",
            "mov eax, r10d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "cmp r9d, 1",
            "je 0x8001150",
            "jae 0x8000c40",
            "xor r14d, r14d",
            "mov dword [rbp - 0x28c], 0",
            "xor r15d, r15d",
            "nop dword [rax + rax]",
            "mov r9d, dword [r13 + 4]",
            "cmp r9d, 0x6b",
            "jbe 0x8000c70",
            "mov r8d, dword [0x08000bc5]",
            "test r8d, r8d",
            "jle 0x8000b6a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xe3",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r10d, 0xffffffea",
            "jmp 0x8000b70",
            "cmp r9d, 0x32",
            "je 0x80010e2",
            "cmp r9d, 0x65",
            "jne cryptodev_verbosity",
            "xor r14d, r14d",
            "mov dword [rbp - 0x28c], 0",
            "mov r15, 0",
            "jmp 0x8000bb0",
            "cmp r9d, 2",
            "je 0x80010c9",
            "cmp r9d, 3",
            "jne cryptodev_verbosity",
            "xor r14d, r14d",
            "mov dword [rbp - 0x28c], 0",
            "mov r15, 0",
            "jmp 0x8000bb0",
            "mov eax, r9d",
            "jmp qword [rax*8]",
            "xor r14d, r14d",
            "mov dword [rbp - 0x28c], 0",
            "mov r15, 0",
            "jmp 0x8000bb0",
            "mov r14d, 1",
            "mov dword [rbp - 0x28c], 1",
            "mov r15, 0",
            "jmp 0x8000bb0",
            "xor r14d, r14d",
            "mov dword [rbp - 0x28c], 1",
            "mov r15, 0",
            "jmp 0x8000bb0",
            "xor r14d, r14d",
            "mov dword [rbp - 0x28c], 1",
            "mov r15, 0",
            "jmp 0x8000bb0",
            "xor r14d, r14d",
            "mov dword [rbp - 0x28c], 0",
            "mov r15, 0",
            "jmp 0x8000bb0",
            "xor r14d, r14d",
            "mov dword [rbp - 0x28c], 0",
            "mov r15, 0",
            "jmp 0x8000bb0",
            "xor r14d, r14d",
            "mov dword [rbp - 0x28c], 0",
            "mov r15, 0",
            "jmp 0x8000bb0",
            "mov r11d, dword [0x080011ad]",
            "test r11d, r11d",
            "jle 0x8000b6a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x80",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r10d, 0xffffffea",
            "jmp 0x8000b70",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r10d, 0xffffffea",
            "jmp 0x8000b70"
        ]
    },
    "unk.0x80011e7": {
        "function_address": "0x080011e7",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "mov r13, rsi",
            "push r12",
            "push rbx",
            "sub rsp, 0x288",
            "cmp qword [rsi], 0",
            "je cryptodev_verbosity",
            "mov r9d, dword [rsi]",
            "mov r12, rdi",
            "cmp r9d, 0xb",
            "je 0x8001170",
            "jbe 0x8000b88",
            "cmp r9d, 0x17",
            "je 0x8001130",
            "nop dword [rax]",
            "ja 0x8000c10",
            "cmp r9d, 0x10",
            "je 0x8001117",
            "cmp r9d, 0x15",
            "je 0x80010fe",
            "mov r10d, dword [0x08000b61]",
            "test r10d, r10d",
            "jg current_task",
            "mov r10d, 0xffffffea",
            "add rsp, 0x288",
            "mov eax, r10d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "cmp r9d, 1",
            "je 0x8001150",
            "jae 0x8000c40",
            "xor r14d, r14d",
            "mov dword [rbp - 0x28c], 0",
            "xor r15d, r15d",
            "nop dword [rax + rax]",
            "mov r9d, dword [r13 + 4]",
            "cmp r9d, 0x6b",
            "jbe 0x8000c70",
            "mov r8d, dword [0x08000bc5]",
            "test r8d, r8d",
            "jle 0x8000b6a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xe3",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r10d, 0xffffffea",
            "jmp 0x8000b70",
            "cmp r9d, 0x32",
            "je 0x80010e2",
            "cmp r9d, 0x65",
            "jne cryptodev_verbosity",
            "xor r14d, r14d",
            "mov dword [rbp - 0x28c], 0",
            "mov r15, 0",
            "jmp 0x8000bb0",
            "cmp r9d, 2",
            "je 0x80010c9",
            "cmp r9d, 3",
            "jne cryptodev_verbosity",
            "xor r14d, r14d",
            "mov dword [rbp - 0x28c], 0",
            "mov r15, 0",
            "jmp 0x8000bb0",
            "mov eax, r9d",
            "jmp qword [rax*8]",
            "xor r14d, r14d",
            "mov dword [rbp - 0x28c], 0",
            "mov r15, 0",
            "jmp 0x8000bb0",
            "mov r14d, 1",
            "mov dword [rbp - 0x28c], 1",
            "mov r15, 0",
            "jmp 0x8000bb0",
            "xor r14d, r14d",
            "mov dword [rbp - 0x28c], 1",
            "mov r15, 0",
            "jmp 0x8000bb0",
            "xor r14d, r14d",
            "mov dword [rbp - 0x28c], 1",
            "mov r15, 0",
            "jmp 0x8000bb0",
            "xor r14d, r14d",
            "mov dword [rbp - 0x28c], 0",
            "mov r15, 0",
            "jmp 0x8000bb0",
            "xor r14d, r14d",
            "mov dword [rbp - 0x28c], 0",
            "mov r15, 0",
            "jmp 0x8000bb0",
            "xor r14d, r14d",
            "mov dword [rbp - 0x28c], 0",
            "mov r15, 0",
            "jmp 0x8000bb0",
            "mov r11d, dword [0x080011ad]",
            "test r11d, r11d",
            "jle 0x8000b6a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x80",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r10d, 0xffffffea",
            "jmp 0x8000b70",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r10d, 0xffffffea",
            "jmp 0x8000b70"
        ]
    },
    "unk.0x8001223": {
        "function_address": "0x08001223",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "mov r13, rsi",
            "push r12",
            "push rbx",
            "sub rsp, 0x288",
            "cmp qword [rsi], 0",
            "je cryptodev_verbosity",
            "mov r9d, dword [rsi]",
            "mov r12, rdi",
            "cmp r9d, 0xb",
            "je 0x8001170",
            "jbe 0x8000b88",
            "cmp r9d, 0x17",
            "je 0x8001130",
            "nop dword [rax]",
            "ja 0x8000c10",
            "cmp r9d, 0x10",
            "je 0x8001117",
            "cmp r9d, 0x15",
            "je 0x80010fe",
            "mov r10d, dword [0x08000b61]",
            "test r10d, r10d",
            "jg current_task",
            "mov r10d, 0xffffffea",
            "add rsp, 0x288",
            "mov eax, r10d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "cmp r9d, 1",
            "je 0x8001150",
            "jae 0x8000c40",
            "xor r14d, r14d",
            "mov dword [rbp - 0x28c], 0",
            "xor r15d, r15d",
            "nop dword [rax + rax]",
            "mov r9d, dword [r13 + 4]",
            "cmp r9d, 0x6b",
            "jbe 0x8000c70",
            "mov r8d, dword [0x08000bc5]",
            "test r8d, r8d",
            "jle 0x8000b6a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xe3",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r10d, 0xffffffea",
            "jmp 0x8000b70",
            "cmp r9d, 0x32",
            "je 0x80010e2",
            "cmp r9d, 0x65",
            "jne cryptodev_verbosity",
            "xor r14d, r14d",
            "mov dword [rbp - 0x28c], 0",
            "mov r15, 0",
            "jmp 0x8000bb0",
            "cmp r9d, 2",
            "je 0x80010c9",
            "cmp r9d, 3",
            "jne cryptodev_verbosity",
            "xor r14d, r14d",
            "mov dword [rbp - 0x28c], 0",
            "mov r15, 0",
            "jmp 0x8000bb0",
            "mov eax, r9d",
            "jmp qword [rax*8]",
            "xor r14d, r14d",
            "mov dword [rbp - 0x28c], 0",
            "mov r15, 0",
            "jmp 0x8000bb0",
            "mov r14d, 1",
            "mov dword [rbp - 0x28c], 1",
            "mov r15, 0",
            "jmp 0x8000bb0",
            "xor r14d, r14d",
            "mov dword [rbp - 0x28c], 1",
            "mov r15, 0",
            "jmp 0x8000bb0",
            "xor r14d, r14d",
            "mov dword [rbp - 0x28c], 1",
            "mov r15, 0",
            "jmp 0x8000bb0",
            "xor r14d, r14d",
            "mov dword [rbp - 0x28c], 0",
            "mov r15, 0",
            "jmp 0x8000bb0",
            "xor r14d, r14d",
            "mov dword [rbp - 0x28c], 0",
            "mov r15, 0",
            "jmp 0x8000bb0",
            "xor r14d, r14d",
            "mov dword [rbp - 0x28c], 0",
            "mov r15, 0",
            "jmp 0x8000bb0",
            "mov r11d, dword [0x080011ad]",
            "test r11d, r11d",
            "jle 0x8000b6a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x80",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r10d, 0xffffffea",
            "jmp 0x8000b70",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r10d, 0xffffffea",
            "jmp 0x8000b70"
        ]
    },
    "sym.fill_cop_from_kcop.isra.4": {
        "function_address": "0x08001440",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x10",
            "mov qword [rbp - 0x10], rbx",
            "mov qword [rbp - 8], r12",
            "mov rbx, rdi",
            "mov edx, dword [rdi + 0x44]",
            "test edx, edx",
            "jne 0x80014a0",
            "mov edx, dword [rbx + 0x30]",
            "xor r12d, r12d",
            "test edx, edx",
            "je 0x800146a",
            "test byte [rbx + 6], 4",
            "jne 0x8001480",
            "mov eax, r12d",
            "mov rbx, qword [rbp - 0x10]",
            "mov r12, qword [rbp - 8]",
            "leave",
            "ret",
            "mov rdi, qword [rbx + 0x28]",
            "lea rsi, [rbx + 0x34]",
            "call _copy_to_user",
            "test eax, eax",
            "je 0x800146a",
            "mov r12d, 0xfffffff2",
            "jmp 0x800146a",
            "lea rsi, [rdi + 0x48]",
            "mov rdi, qword [rdi + 0x20]",
            "call _copy_to_user",
            "test eax, eax",
            "je 0x800145a",
            "jmp 0x8001491"
        ]
    },
    "unk.0x800148d": {
        "function_address": "0x0800148d",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x10",
            "mov qword [rbp - 0x10], rbx",
            "mov qword [rbp - 8], r12",
            "mov rbx, rdi",
            "mov edx, dword [rdi + 0x44]",
            "test edx, edx",
            "jne 0x80014a0",
            "mov edx, dword [rbx + 0x30]",
            "xor r12d, r12d",
            "test edx, edx",
            "je 0x800146a",
            "test byte [rbx + 6], 4",
            "jne 0x8001480",
            "mov eax, r12d",
            "mov rbx, qword [rbp - 0x10]",
            "mov r12, qword [rbp - 8]",
            "leave",
            "ret",
            "mov rdi, qword [rbx + 0x28]",
            "lea rsi, [rbx + 0x34]",
            "call _copy_to_user",
            "test eax, eax",
            "je 0x800146a",
            "mov r12d, 0xfffffff2",
            "jmp 0x800146a",
            "lea rsi, [rdi + 0x48]",
            "mov rdi, qword [rdi + 0x20]",
            "call _copy_to_user",
            "test eax, eax",
            "je 0x800145a",
            "jmp 0x8001491"
        ]
    },
    "unk.0x80014ad": {
        "function_address": "0x080014ad",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x10",
            "mov qword [rbp - 0x10], rbx",
            "mov qword [rbp - 8], r12",
            "mov rbx, rdi",
            "mov edx, dword [rdi + 0x44]",
            "test edx, edx",
            "jne 0x80014a0",
            "mov edx, dword [rbx + 0x30]",
            "xor r12d, r12d",
            "test edx, edx",
            "je 0x800146a",
            "test byte [rbx + 6], 4",
            "jne 0x8001480",
            "mov eax, r12d",
            "mov rbx, qword [rbp - 0x10]",
            "mov r12, qword [rbp - 8]",
            "leave",
            "ret",
            "mov rdi, qword [rbx + 0x28]",
            "lea rsi, [rbx + 0x34]",
            "call _copy_to_user",
            "test eax, eax",
            "je 0x800146a",
            "mov r12d, 0xfffffff2",
            "jmp 0x800146a",
            "lea rsi, [rdi + 0x48]",
            "mov rdi, qword [rdi + 0x20]",
            "call _copy_to_user",
            "test eax, eax",
            "je 0x800145a",
            "jmp 0x8001491"
        ]
    },
    "sym.fill_kcop_from_cop": {
        "function_address": "0x08001530",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x30",
            "mov qword [rbp - 0x18], rbx",
            "mov rbx, rdi",
            "mov rdi, rsi",
            "mov esi, dword [rbx]",
            "mov qword [rbp - 0x10], r12",
            "mov qword [rbp - 8], r13",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "je 0x80015c4",
            "cmp qword [rbx + 0x28], 0",
            "je 0x80015c0",
            "mov edx, dword [rax + 0x48]",
            "lea rdi, [rax + 0x10]",
            "mov dword [rbx + 0x30], edx",
            "mov dword [rbx + 0x44], 0",
            "mov r12, qword gs:[0]",
            "call mutex_unlock",
            "mov rsi, qword [rbx + 0x28]",
            "mov qword [rbx + 0x88], r12",
            "mov rax, qword [r12 + 0x278]",
            "test rsi, rsi",
            "mov qword [rbx + 0x90], rax",
            "je 0x80015ab",
            "mov edx, dword [rbx + 0x30]",
            "lea rdi, [rbx + 0x34]",
            "call _copy_from_user",
            "test eax, eax",
            "jne 0x8001609",
            "xor r13d, r13d",
            "mov eax, r13d",
            "mov rbx, qword [rbp - 0x18]",
            "mov r12, qword [rbp - 0x10]",
            "mov r13, qword [rbp - 8]",
            "leave",
            "ret",
            "xor edx, edx",
            "jmp 0x8001560",
            "cmp dword [0x080015cb], 0",
            "mov r13d, 0xffffffea",
            "jle 0x80015ae",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x287",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80015ae",
            "cmp dword [0x08001610], 0",
            "mov r13d, 0xfffffff2",
            "jle 0x80015ae",
            "mov rcx, qword [rbx + 0x28]",
            "mov edx, dword [r12 + 0x318]",
            "lea rsi, [r12 + 0x4b8]",
            "mov r9d, dword [rbx + 0x30]",
            "mov dword [rsp], eax",
            "mov r8d, 0x296",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rsp + 8], rcx",
            "mov rcx, 0",
            "call printk",
            "jmp 0x80015ae"
        ]
    },
    "unk.0x8001551": {
        "function_address": "0x08001551",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x30",
            "mov qword [rbp - 0x18], rbx",
            "mov rbx, rdi",
            "mov rdi, rsi",
            "mov esi, dword [rbx]",
            "mov qword [rbp - 0x10], r12",
            "mov qword [rbp - 8], r13",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "je 0x80015c4",
            "cmp qword [rbx + 0x28], 0",
            "je 0x80015c0",
            "mov edx, dword [rax + 0x48]",
            "lea rdi, [rax + 0x10]",
            "mov dword [rbx + 0x30], edx",
            "mov dword [rbx + 0x44], 0",
            "mov r12, qword gs:[0]",
            "call mutex_unlock",
            "mov rsi, qword [rbx + 0x28]",
            "mov qword [rbx + 0x88], r12",
            "mov rax, qword [r12 + 0x278]",
            "test rsi, rsi",
            "mov qword [rbx + 0x90], rax",
            "je 0x80015ab",
            "mov edx, dword [rbx + 0x30]",
            "lea rdi, [rbx + 0x34]",
            "call _copy_from_user",
            "test eax, eax",
            "jne 0x8001609",
            "xor r13d, r13d",
            "mov eax, r13d",
            "mov rbx, qword [rbp - 0x18]",
            "mov r12, qword [rbp - 0x10]",
            "mov r13, qword [rbp - 8]",
            "leave",
            "ret",
            "xor edx, edx",
            "jmp 0x8001560",
            "cmp dword [0x080015cb], 0",
            "mov r13d, 0xffffffea",
            "jle 0x80015ae",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x287",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80015ae",
            "cmp dword [0x08001610], 0",
            "mov r13d, 0xfffffff2",
            "jle 0x80015ae",
            "mov rcx, qword [rbx + 0x28]",
            "mov edx, dword [r12 + 0x318]",
            "lea rsi, [r12 + 0x4b8]",
            "mov r9d, dword [rbx + 0x30]",
            "mov dword [rsp], eax",
            "mov r8d, 0x296",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rsp + 8], rcx",
            "mov rcx, 0",
            "call printk",
            "jmp 0x80015ae"
        ]
    },
    "unk.0x800157c": {
        "function_address": "0x0800157c",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x30",
            "mov qword [rbp - 0x18], rbx",
            "mov rbx, rdi",
            "mov rdi, rsi",
            "mov esi, dword [rbx]",
            "mov qword [rbp - 0x10], r12",
            "mov qword [rbp - 8], r13",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "je 0x80015c4",
            "cmp qword [rbx + 0x28], 0",
            "je 0x80015c0",
            "mov edx, dword [rax + 0x48]",
            "lea rdi, [rax + 0x10]",
            "mov dword [rbx + 0x30], edx",
            "mov dword [rbx + 0x44], 0",
            "mov r12, qword gs:[0]",
            "call mutex_unlock",
            "mov rsi, qword [rbx + 0x28]",
            "mov qword [rbx + 0x88], r12",
            "mov rax, qword [r12 + 0x278]",
            "test rsi, rsi",
            "mov qword [rbx + 0x90], rax",
            "je 0x80015ab",
            "mov edx, dword [rbx + 0x30]",
            "lea rdi, [rbx + 0x34]",
            "call _copy_from_user",
            "test eax, eax",
            "jne 0x8001609",
            "xor r13d, r13d",
            "mov eax, r13d",
            "mov rbx, qword [rbp - 0x18]",
            "mov r12, qword [rbp - 0x10]",
            "mov r13, qword [rbp - 8]",
            "leave",
            "ret",
            "xor edx, edx",
            "jmp 0x8001560",
            "cmp dword [0x080015cb], 0",
            "mov r13d, 0xffffffea",
            "jle 0x80015ae",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x287",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80015ae",
            "cmp dword [0x08001610], 0",
            "mov r13d, 0xfffffff2",
            "jle 0x80015ae",
            "mov rcx, qword [rbx + 0x28]",
            "mov edx, dword [r12 + 0x318]",
            "lea rsi, [r12 + 0x4b8]",
            "mov r9d, dword [rbx + 0x30]",
            "mov dword [rsp], eax",
            "mov r8d, 0x296",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rsp + 8], rcx",
            "mov rcx, 0",
            "call printk",
            "jmp 0x80015ae"
        ]
    },
    "unk.0x80015a7": {
        "function_address": "0x080015a7",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x30",
            "mov qword [rbp - 0x18], rbx",
            "mov rbx, rdi",
            "mov rdi, rsi",
            "mov esi, dword [rbx]",
            "mov qword [rbp - 0x10], r12",
            "mov qword [rbp - 8], r13",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "je 0x80015c4",
            "cmp qword [rbx + 0x28], 0",
            "je 0x80015c0",
            "mov edx, dword [rax + 0x48]",
            "lea rdi, [rax + 0x10]",
            "mov dword [rbx + 0x30], edx",
            "mov dword [rbx + 0x44], 0",
            "mov r12, qword gs:[0]",
            "call mutex_unlock",
            "mov rsi, qword [rbx + 0x28]",
            "mov qword [rbx + 0x88], r12",
            "mov rax, qword [r12 + 0x278]",
            "test rsi, rsi",
            "mov qword [rbx + 0x90], rax",
            "je 0x80015ab",
            "mov edx, dword [rbx + 0x30]",
            "lea rdi, [rbx + 0x34]",
            "call _copy_from_user",
            "test eax, eax",
            "jne 0x8001609",
            "xor r13d, r13d",
            "mov eax, r13d",
            "mov rbx, qword [rbp - 0x18]",
            "mov r12, qword [rbp - 0x10]",
            "mov r13, qword [rbp - 8]",
            "leave",
            "ret",
            "xor edx, edx",
            "jmp 0x8001560",
            "cmp dword [0x080015cb], 0",
            "mov r13d, 0xffffffea",
            "jle 0x80015ae",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x287",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80015ae",
            "cmp dword [0x08001610], 0",
            "mov r13d, 0xfffffff2",
            "jle 0x80015ae",
            "mov rcx, qword [rbx + 0x28]",
            "mov edx, dword [r12 + 0x318]",
            "lea rsi, [r12 + 0x4b8]",
            "mov r9d, dword [rbx + 0x30]",
            "mov dword [rsp], eax",
            "mov r8d, 0x296",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rsp + 8], rcx",
            "mov rcx, 0",
            "call printk",
            "jmp 0x80015ae"
        ]
    },
    "unk.0x8001607": {
        "function_address": "0x08001607",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x30",
            "mov qword [rbp - 0x18], rbx",
            "mov rbx, rdi",
            "mov rdi, rsi",
            "mov esi, dword [rbx]",
            "mov qword [rbp - 0x10], r12",
            "mov qword [rbp - 8], r13",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "je 0x80015c4",
            "cmp qword [rbx + 0x28], 0",
            "je 0x80015c0",
            "mov edx, dword [rax + 0x48]",
            "lea rdi, [rax + 0x10]",
            "mov dword [rbx + 0x30], edx",
            "mov dword [rbx + 0x44], 0",
            "mov r12, qword gs:[0]",
            "call mutex_unlock",
            "mov rsi, qword [rbx + 0x28]",
            "mov qword [rbx + 0x88], r12",
            "mov rax, qword [r12 + 0x278]",
            "test rsi, rsi",
            "mov qword [rbx + 0x90], rax",
            "je 0x80015ab",
            "mov edx, dword [rbx + 0x30]",
            "lea rdi, [rbx + 0x34]",
            "call _copy_from_user",
            "test eax, eax",
            "jne 0x8001609",
            "xor r13d, r13d",
            "mov eax, r13d",
            "mov rbx, qword [rbp - 0x18]",
            "mov r12, qword [rbp - 0x10]",
            "mov r13, qword [rbp - 8]",
            "leave",
            "ret",
            "xor edx, edx",
            "jmp 0x8001560",
            "cmp dword [0x080015cb], 0",
            "mov r13d, 0xffffffea",
            "jle 0x80015ae",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x287",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80015ae",
            "cmp dword [0x08001610], 0",
            "mov r13d, 0xfffffff2",
            "jle 0x80015ae",
            "mov rcx, qword [rbx + 0x28]",
            "mov edx, dword [r12 + 0x318]",
            "lea rsi, [r12 + 0x4b8]",
            "mov r9d, dword [rbx + 0x30]",
            "mov dword [rsp], eax",
            "mov r8d, 0x296",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rsp + 8], rcx",
            "mov rcx, 0",
            "call printk",
            "jmp 0x80015ae"
        ]
    },
    "unk.0x8001653": {
        "function_address": "0x08001653",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x30",
            "mov qword [rbp - 0x18], rbx",
            "mov rbx, rdi",
            "mov rdi, rsi",
            "mov esi, dword [rbx]",
            "mov qword [rbp - 0x10], r12",
            "mov qword [rbp - 8], r13",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "je 0x80015c4",
            "cmp qword [rbx + 0x28], 0",
            "je 0x80015c0",
            "mov edx, dword [rax + 0x48]",
            "lea rdi, [rax + 0x10]",
            "mov dword [rbx + 0x30], edx",
            "mov dword [rbx + 0x44], 0",
            "mov r12, qword gs:[0]",
            "call mutex_unlock",
            "mov rsi, qword [rbx + 0x28]",
            "mov qword [rbx + 0x88], r12",
            "mov rax, qword [r12 + 0x278]",
            "test rsi, rsi",
            "mov qword [rbx + 0x90], rax",
            "je 0x80015ab",
            "mov edx, dword [rbx + 0x30]",
            "lea rdi, [rbx + 0x34]",
            "call _copy_from_user",
            "test eax, eax",
            "jne 0x8001609",
            "xor r13d, r13d",
            "mov eax, r13d",
            "mov rbx, qword [rbp - 0x18]",
            "mov r12, qword [rbp - 0x10]",
            "mov r13, qword [rbp - 8]",
            "leave",
            "ret",
            "xor edx, edx",
            "jmp 0x8001560",
            "cmp dword [0x080015cb], 0",
            "mov r13d, 0xffffffea",
            "jle 0x80015ae",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x287",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80015ae",
            "cmp dword [0x08001610], 0",
            "mov r13d, 0xfffffff2",
            "jle 0x80015ae",
            "mov rcx, qword [rbx + 0x28]",
            "mov edx, dword [r12 + 0x318]",
            "lea rsi, [r12 + 0x4b8]",
            "mov r9d, dword [rbx + 0x30]",
            "mov dword [rsp], eax",
            "mov r8d, 0x296",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rsp + 8], rcx",
            "mov rcx, 0",
            "call printk",
            "jmp 0x80015ae"
        ]
    },
    "sym.cryptodev_ioctl": {
        "function_address": "0x08001660",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x130",
            "mov qword [rbp - 0x20], rbx",
            "mov qword [rbp - 0x18], r12",
            "mov rbx, rdi",
            "mov qword [rbp - 0x10], r13",
            "mov qword [rbp - 8], r14",
            "mov r12, qword [rdi + 0xd0]",
            "test r12, r12",
            "je cryptodev_verbosity",
            "cmp esi, 0xc0306366",
            "mov r13, rdx",
            "je 0x8001978",
            "jbe 0x80016e8",
            "cmp esi, 0xc048636d",
            "je 0x8001858",
            "cmp esi, 0xc10c636b",
            "je 0x8001730",
            "cmp esi, 0xc0306368",
            "je 0x80018b0",
            "mov rbx, 0xffffffffffffffea",
            "nop word cs:[rax + rax]",
            "mov rax, rbx",
            "mov r12, qword [rbp - 0x18]",
            "mov rbx, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x10]",
            "mov r14, qword [rbp - 8]",
            "leave",
            "ret",
            "cmp esi, 0x8004636a",
            "je 0x80019e0",
            "cmp esi, 0xc0046365",
            "je get_unused_fd_flags",
            "cmp esi, 0x40046367",
            "jne 0x80016bf",
            "mov rax, rdx",
            "call __get_user_4",
            "test eax, eax",
            "jne 0x800189e",
            "mov esi, edx",
            "mov rdi, r12",
            "call sym.crypto_finish_session",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "lea r14, [rbp - 0x130]",
            "mov edx, 0x10c",
            "mov rsi, r13",
            "mov rdi, r14",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80019d2",
            "mov esi, dword [rbp - 0x130]",
            "mov rdi, r12",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov rbx, rax",
            "je cryptodev_verbosity",
            "mov dword [rbp - 0x28], 0",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je 0x80017d6",
            "mov eax, dword [rbx + 0x40]",
            "test eax, eax",
            "je 0x80019f8",
            "mov r12, qword [rbx + 0x60]",
            "mov rcx, qword [r12 + 0x50]",
            "lea rdi, [r14 + 4]",
            "mov rdx, 0",
            "mov esi, 0x40",
            "xor eax, eax",
            "add rcx, 0x38",
            "call snprintf",
            "mov rcx, qword [r12 + 0x50]",
            "lea rdi, [r14 + 0x44]",
            "xor eax, eax",
            "mov rdx, 0",
            "mov esi, 0x40",
            "add rcx, 0x78",
            "call snprintf",
            "mov rax, qword [r12 + 0x50]",
            "test byte [rax + 0x21], 0x10",
            "je 0x80017d6",
            "or dword [rbp - 0x28], 1",
            "mov r12d, dword [rbx + 0x88]",
            "test r12d, r12d",
            "jne 0x8001a08",
            "mov eax, dword [rbx + 0xb4]",
            "lea rdi, [rbx + 0x10]",
            "mov word [rbp - 0x2c], ax",
            "call mutex_unlock",
            "mov edx, 0x10c",
            "mov rsi, r14",
            "mov rdi, r13",
            "call _copy_to_user",
            "mov rbx, rax",
            "jmp 0x80016d0",
            "xor edi, edi",
            "call get_unused_fd_flags",
            "test eax, eax",
            "mov r14d, eax",
            "js 0x8001835",
            "lock inc qword [rbx + 0x38]",
            "mov rsi, rbx",
            "mov edi, eax",
            "call fd_install",
            "mov eax, r14d",
            "mov rcx, r13",
            "call __put_user_4",
            "test eax, eax",
            "mov r12d, eax",
            "jne 0x8001c18",
            "xor ebx, ebx",
            "jmp 0x80016d0",
            "lea rdi, [rbp - 0x130]",
            "mov rsi, r12",
            "call kcaop_from_user",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "lea rsi, [rbp - 0x130]",
            "mov rdi, r12",
            "call crypto_auth_run",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "lea rdi, [rbp - 0x130]",
            "mov rdx, r13",
            "mov rsi, r12",
            "call kcaop_to_user",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "lea r14, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rsi, r13",
            "mov rdi, r14",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x8001b48",
            "mov rsi, r12",
            "mov rdi, r14",
            "call sym.fill_kcop_from_cop",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov rsi, r14",
            "mov rdi, r12",
            "call crypto_run",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov rdi, r14",
            "call sym.fill_cop_from_kcop.isra.4",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov edx, 0x30",
            "mov rsi, r14",
            "mov rdi, r13",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x800184b",
            "cmp dword [0x0800192f], 0",
            "mov rbx, 0xfffffffffffffff2",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2c7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "lea rdi, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rsi, r13",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80019d2",
            "lea rsi, [rbp - 0x130]",
            "mov rdi, r12",
            "call sym.crypto_create_session",
            "test eax, eax",
            "jne 0x800189e",
            "lea rsi, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rdi, r13",
            "call _copy_to_user",
            "test eax, eax",
            "je 0x800184b",
            "mov esi, dword [rbp - 0x108]",
            "mov rdi, r12",
            "call sym.crypto_finish_session",
            "mov rbx, 0xfffffffffffffff2",
            "jmp 0x80016d0",
            "xor eax, eax",
            "mov rcx, rdx",
            "call __put_user_4",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "mov r12, qword [rbx + 0x50]",
            "jmp 0x8001787",
            "mov r12, qword [rbx + 0x98]",
            "lea rdi, [r14 + 0x84]",
            "mov rdx, 0",
            "mov esi, 0x40",
            "xor eax, eax",
            "mov rcx, qword [r12 + 0x98]",
            "add rcx, 0x38",
            "call snprintf",
            "mov rcx, qword [r12 + 0x98]",
            "lea rdi, [r14 + 0xc4]",
            "xor eax, eax",
            "mov rdx, 0",
            "mov esi, 0x40",
            "add rcx, 0x78",
            "call snprintf",
            "mov rax, qword [r12 + 0x98]",
            "test byte [rax + 0x21], 0x10",
            "je 0x80017e6",
            "or dword [rbp - 0x28], 1",
            "jmp 0x80017e6",
            "ud2",
            "cmp dword [0x08001a7f], 0",
            "jle 0x80016bf",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbp - 0x130]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2f8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016bf",
            "cmp dword [0x08001ac9], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2c2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001b0c], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x35f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "mov rbx, 0xfffffffffffffff2",
            "cmp dword [0x08001b56], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x359",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001b99], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x36c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001bdc], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x366",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "mov edi, r14d",
            "movsxd rbx, r12d",
            "call sys_close",
            "jmp 0x80016d0"
        ]
    },
    "unk.0x8001710": {
        "function_address": "0x08001710",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x130",
            "mov qword [rbp - 0x20], rbx",
            "mov qword [rbp - 0x18], r12",
            "mov rbx, rdi",
            "mov qword [rbp - 0x10], r13",
            "mov qword [rbp - 8], r14",
            "mov r12, qword [rdi + 0xd0]",
            "test r12, r12",
            "je cryptodev_verbosity",
            "cmp esi, 0xc0306366",
            "mov r13, rdx",
            "je 0x8001978",
            "jbe 0x80016e8",
            "cmp esi, 0xc048636d",
            "je 0x8001858",
            "cmp esi, 0xc10c636b",
            "je 0x8001730",
            "cmp esi, 0xc0306368",
            "je 0x80018b0",
            "mov rbx, 0xffffffffffffffea",
            "nop word cs:[rax + rax]",
            "mov rax, rbx",
            "mov r12, qword [rbp - 0x18]",
            "mov rbx, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x10]",
            "mov r14, qword [rbp - 8]",
            "leave",
            "ret",
            "cmp esi, 0x8004636a",
            "je 0x80019e0",
            "cmp esi, 0xc0046365",
            "je get_unused_fd_flags",
            "cmp esi, 0x40046367",
            "jne 0x80016bf",
            "mov rax, rdx",
            "call __get_user_4",
            "test eax, eax",
            "jne 0x800189e",
            "mov esi, edx",
            "mov rdi, r12",
            "call sym.crypto_finish_session",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "lea r14, [rbp - 0x130]",
            "mov edx, 0x10c",
            "mov rsi, r13",
            "mov rdi, r14",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80019d2",
            "mov esi, dword [rbp - 0x130]",
            "mov rdi, r12",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov rbx, rax",
            "je cryptodev_verbosity",
            "mov dword [rbp - 0x28], 0",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je 0x80017d6",
            "mov eax, dword [rbx + 0x40]",
            "test eax, eax",
            "je 0x80019f8",
            "mov r12, qword [rbx + 0x60]",
            "mov rcx, qword [r12 + 0x50]",
            "lea rdi, [r14 + 4]",
            "mov rdx, 0",
            "mov esi, 0x40",
            "xor eax, eax",
            "add rcx, 0x38",
            "call snprintf",
            "mov rcx, qword [r12 + 0x50]",
            "lea rdi, [r14 + 0x44]",
            "xor eax, eax",
            "mov rdx, 0",
            "mov esi, 0x40",
            "add rcx, 0x78",
            "call snprintf",
            "mov rax, qword [r12 + 0x50]",
            "test byte [rax + 0x21], 0x10",
            "je 0x80017d6",
            "or dword [rbp - 0x28], 1",
            "mov r12d, dword [rbx + 0x88]",
            "test r12d, r12d",
            "jne 0x8001a08",
            "mov eax, dword [rbx + 0xb4]",
            "lea rdi, [rbx + 0x10]",
            "mov word [rbp - 0x2c], ax",
            "call mutex_unlock",
            "mov edx, 0x10c",
            "mov rsi, r14",
            "mov rdi, r13",
            "call _copy_to_user",
            "mov rbx, rax",
            "jmp 0x80016d0",
            "xor edi, edi",
            "call get_unused_fd_flags",
            "test eax, eax",
            "mov r14d, eax",
            "js 0x8001835",
            "lock inc qword [rbx + 0x38]",
            "mov rsi, rbx",
            "mov edi, eax",
            "call fd_install",
            "mov eax, r14d",
            "mov rcx, r13",
            "call __put_user_4",
            "test eax, eax",
            "mov r12d, eax",
            "jne 0x8001c18",
            "xor ebx, ebx",
            "jmp 0x80016d0",
            "lea rdi, [rbp - 0x130]",
            "mov rsi, r12",
            "call kcaop_from_user",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "lea rsi, [rbp - 0x130]",
            "mov rdi, r12",
            "call crypto_auth_run",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "lea rdi, [rbp - 0x130]",
            "mov rdx, r13",
            "mov rsi, r12",
            "call kcaop_to_user",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "lea r14, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rsi, r13",
            "mov rdi, r14",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x8001b48",
            "mov rsi, r12",
            "mov rdi, r14",
            "call sym.fill_kcop_from_cop",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov rsi, r14",
            "mov rdi, r12",
            "call crypto_run",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov rdi, r14",
            "call sym.fill_cop_from_kcop.isra.4",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov edx, 0x30",
            "mov rsi, r14",
            "mov rdi, r13",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x800184b",
            "cmp dword [0x0800192f], 0",
            "mov rbx, 0xfffffffffffffff2",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2c7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "lea rdi, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rsi, r13",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80019d2",
            "lea rsi, [rbp - 0x130]",
            "mov rdi, r12",
            "call sym.crypto_create_session",
            "test eax, eax",
            "jne 0x800189e",
            "lea rsi, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rdi, r13",
            "call _copy_to_user",
            "test eax, eax",
            "je 0x800184b",
            "mov esi, dword [rbp - 0x108]",
            "mov rdi, r12",
            "call sym.crypto_finish_session",
            "mov rbx, 0xfffffffffffffff2",
            "jmp 0x80016d0",
            "xor eax, eax",
            "mov rcx, rdx",
            "call __put_user_4",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "mov r12, qword [rbx + 0x50]",
            "jmp 0x8001787",
            "mov r12, qword [rbx + 0x98]",
            "lea rdi, [r14 + 0x84]",
            "mov rdx, 0",
            "mov esi, 0x40",
            "xor eax, eax",
            "mov rcx, qword [r12 + 0x98]",
            "add rcx, 0x38",
            "call snprintf",
            "mov rcx, qword [r12 + 0x98]",
            "lea rdi, [r14 + 0xc4]",
            "xor eax, eax",
            "mov rdx, 0",
            "mov esi, 0x40",
            "add rcx, 0x78",
            "call snprintf",
            "mov rax, qword [r12 + 0x98]",
            "test byte [rax + 0x21], 0x10",
            "je 0x80017e6",
            "or dword [rbp - 0x28], 1",
            "jmp 0x80017e6",
            "ud2",
            "cmp dword [0x08001a7f], 0",
            "jle 0x80016bf",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbp - 0x130]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2f8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016bf",
            "cmp dword [0x08001ac9], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2c2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001b0c], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x35f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "mov rbx, 0xfffffffffffffff2",
            "cmp dword [0x08001b56], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x359",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001b99], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x36c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001bdc], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x366",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "mov edi, r14d",
            "movsxd rbx, r12d",
            "call sys_close",
            "jmp 0x80016d0"
        ]
    },
    "unk.0x8001747": {
        "function_address": "0x08001747",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x130",
            "mov qword [rbp - 0x20], rbx",
            "mov qword [rbp - 0x18], r12",
            "mov rbx, rdi",
            "mov qword [rbp - 0x10], r13",
            "mov qword [rbp - 8], r14",
            "mov r12, qword [rdi + 0xd0]",
            "test r12, r12",
            "je cryptodev_verbosity",
            "cmp esi, 0xc0306366",
            "mov r13, rdx",
            "je 0x8001978",
            "jbe 0x80016e8",
            "cmp esi, 0xc048636d",
            "je 0x8001858",
            "cmp esi, 0xc10c636b",
            "je 0x8001730",
            "cmp esi, 0xc0306368",
            "je 0x80018b0",
            "mov rbx, 0xffffffffffffffea",
            "nop word cs:[rax + rax]",
            "mov rax, rbx",
            "mov r12, qword [rbp - 0x18]",
            "mov rbx, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x10]",
            "mov r14, qword [rbp - 8]",
            "leave",
            "ret",
            "cmp esi, 0x8004636a",
            "je 0x80019e0",
            "cmp esi, 0xc0046365",
            "je get_unused_fd_flags",
            "cmp esi, 0x40046367",
            "jne 0x80016bf",
            "mov rax, rdx",
            "call __get_user_4",
            "test eax, eax",
            "jne 0x800189e",
            "mov esi, edx",
            "mov rdi, r12",
            "call sym.crypto_finish_session",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "lea r14, [rbp - 0x130]",
            "mov edx, 0x10c",
            "mov rsi, r13",
            "mov rdi, r14",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80019d2",
            "mov esi, dword [rbp - 0x130]",
            "mov rdi, r12",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov rbx, rax",
            "je cryptodev_verbosity",
            "mov dword [rbp - 0x28], 0",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je 0x80017d6",
            "mov eax, dword [rbx + 0x40]",
            "test eax, eax",
            "je 0x80019f8",
            "mov r12, qword [rbx + 0x60]",
            "mov rcx, qword [r12 + 0x50]",
            "lea rdi, [r14 + 4]",
            "mov rdx, 0",
            "mov esi, 0x40",
            "xor eax, eax",
            "add rcx, 0x38",
            "call snprintf",
            "mov rcx, qword [r12 + 0x50]",
            "lea rdi, [r14 + 0x44]",
            "xor eax, eax",
            "mov rdx, 0",
            "mov esi, 0x40",
            "add rcx, 0x78",
            "call snprintf",
            "mov rax, qword [r12 + 0x50]",
            "test byte [rax + 0x21], 0x10",
            "je 0x80017d6",
            "or dword [rbp - 0x28], 1",
            "mov r12d, dword [rbx + 0x88]",
            "test r12d, r12d",
            "jne 0x8001a08",
            "mov eax, dword [rbx + 0xb4]",
            "lea rdi, [rbx + 0x10]",
            "mov word [rbp - 0x2c], ax",
            "call mutex_unlock",
            "mov edx, 0x10c",
            "mov rsi, r14",
            "mov rdi, r13",
            "call _copy_to_user",
            "mov rbx, rax",
            "jmp 0x80016d0",
            "xor edi, edi",
            "call get_unused_fd_flags",
            "test eax, eax",
            "mov r14d, eax",
            "js 0x8001835",
            "lock inc qword [rbx + 0x38]",
            "mov rsi, rbx",
            "mov edi, eax",
            "call fd_install",
            "mov eax, r14d",
            "mov rcx, r13",
            "call __put_user_4",
            "test eax, eax",
            "mov r12d, eax",
            "jne 0x8001c18",
            "xor ebx, ebx",
            "jmp 0x80016d0",
            "lea rdi, [rbp - 0x130]",
            "mov rsi, r12",
            "call kcaop_from_user",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "lea rsi, [rbp - 0x130]",
            "mov rdi, r12",
            "call crypto_auth_run",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "lea rdi, [rbp - 0x130]",
            "mov rdx, r13",
            "mov rsi, r12",
            "call kcaop_to_user",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "lea r14, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rsi, r13",
            "mov rdi, r14",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x8001b48",
            "mov rsi, r12",
            "mov rdi, r14",
            "call sym.fill_kcop_from_cop",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov rsi, r14",
            "mov rdi, r12",
            "call crypto_run",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov rdi, r14",
            "call sym.fill_cop_from_kcop.isra.4",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov edx, 0x30",
            "mov rsi, r14",
            "mov rdi, r13",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x800184b",
            "cmp dword [0x0800192f], 0",
            "mov rbx, 0xfffffffffffffff2",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2c7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "lea rdi, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rsi, r13",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80019d2",
            "lea rsi, [rbp - 0x130]",
            "mov rdi, r12",
            "call sym.crypto_create_session",
            "test eax, eax",
            "jne 0x800189e",
            "lea rsi, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rdi, r13",
            "call _copy_to_user",
            "test eax, eax",
            "je 0x800184b",
            "mov esi, dword [rbp - 0x108]",
            "mov rdi, r12",
            "call sym.crypto_finish_session",
            "mov rbx, 0xfffffffffffffff2",
            "jmp 0x80016d0",
            "xor eax, eax",
            "mov rcx, rdx",
            "call __put_user_4",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "mov r12, qword [rbx + 0x50]",
            "jmp 0x8001787",
            "mov r12, qword [rbx + 0x98]",
            "lea rdi, [r14 + 0x84]",
            "mov rdx, 0",
            "mov esi, 0x40",
            "xor eax, eax",
            "mov rcx, qword [r12 + 0x98]",
            "add rcx, 0x38",
            "call snprintf",
            "mov rcx, qword [r12 + 0x98]",
            "lea rdi, [r14 + 0xc4]",
            "xor eax, eax",
            "mov rdx, 0",
            "mov esi, 0x40",
            "add rcx, 0x78",
            "call snprintf",
            "mov rax, qword [r12 + 0x98]",
            "test byte [rax + 0x21], 0x10",
            "je 0x80017e6",
            "or dword [rbp - 0x28], 1",
            "jmp 0x80017e6",
            "ud2",
            "cmp dword [0x08001a7f], 0",
            "jle 0x80016bf",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbp - 0x130]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2f8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016bf",
            "cmp dword [0x08001ac9], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2c2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001b0c], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x35f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "mov rbx, 0xfffffffffffffff2",
            "cmp dword [0x08001b56], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x359",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001b99], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x36c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001bdc], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x366",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "mov edi, r14d",
            "movsxd rbx, r12d",
            "call sys_close",
            "jmp 0x80016d0"
        ]
    },
    "unk.0x800175e": {
        "function_address": "0x0800175e",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x130",
            "mov qword [rbp - 0x20], rbx",
            "mov qword [rbp - 0x18], r12",
            "mov rbx, rdi",
            "mov qword [rbp - 0x10], r13",
            "mov qword [rbp - 8], r14",
            "mov r12, qword [rdi + 0xd0]",
            "test r12, r12",
            "je cryptodev_verbosity",
            "cmp esi, 0xc0306366",
            "mov r13, rdx",
            "je 0x8001978",
            "jbe 0x80016e8",
            "cmp esi, 0xc048636d",
            "je 0x8001858",
            "cmp esi, 0xc10c636b",
            "je 0x8001730",
            "cmp esi, 0xc0306368",
            "je 0x80018b0",
            "mov rbx, 0xffffffffffffffea",
            "nop word cs:[rax + rax]",
            "mov rax, rbx",
            "mov r12, qword [rbp - 0x18]",
            "mov rbx, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x10]",
            "mov r14, qword [rbp - 8]",
            "leave",
            "ret",
            "cmp esi, 0x8004636a",
            "je 0x80019e0",
            "cmp esi, 0xc0046365",
            "je get_unused_fd_flags",
            "cmp esi, 0x40046367",
            "jne 0x80016bf",
            "mov rax, rdx",
            "call __get_user_4",
            "test eax, eax",
            "jne 0x800189e",
            "mov esi, edx",
            "mov rdi, r12",
            "call sym.crypto_finish_session",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "lea r14, [rbp - 0x130]",
            "mov edx, 0x10c",
            "mov rsi, r13",
            "mov rdi, r14",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80019d2",
            "mov esi, dword [rbp - 0x130]",
            "mov rdi, r12",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov rbx, rax",
            "je cryptodev_verbosity",
            "mov dword [rbp - 0x28], 0",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je 0x80017d6",
            "mov eax, dword [rbx + 0x40]",
            "test eax, eax",
            "je 0x80019f8",
            "mov r12, qword [rbx + 0x60]",
            "mov rcx, qword [r12 + 0x50]",
            "lea rdi, [r14 + 4]",
            "mov rdx, 0",
            "mov esi, 0x40",
            "xor eax, eax",
            "add rcx, 0x38",
            "call snprintf",
            "mov rcx, qword [r12 + 0x50]",
            "lea rdi, [r14 + 0x44]",
            "xor eax, eax",
            "mov rdx, 0",
            "mov esi, 0x40",
            "add rcx, 0x78",
            "call snprintf",
            "mov rax, qword [r12 + 0x50]",
            "test byte [rax + 0x21], 0x10",
            "je 0x80017d6",
            "or dword [rbp - 0x28], 1",
            "mov r12d, dword [rbx + 0x88]",
            "test r12d, r12d",
            "jne 0x8001a08",
            "mov eax, dword [rbx + 0xb4]",
            "lea rdi, [rbx + 0x10]",
            "mov word [rbp - 0x2c], ax",
            "call mutex_unlock",
            "mov edx, 0x10c",
            "mov rsi, r14",
            "mov rdi, r13",
            "call _copy_to_user",
            "mov rbx, rax",
            "jmp 0x80016d0",
            "xor edi, edi",
            "call get_unused_fd_flags",
            "test eax, eax",
            "mov r14d, eax",
            "js 0x8001835",
            "lock inc qword [rbx + 0x38]",
            "mov rsi, rbx",
            "mov edi, eax",
            "call fd_install",
            "mov eax, r14d",
            "mov rcx, r13",
            "call __put_user_4",
            "test eax, eax",
            "mov r12d, eax",
            "jne 0x8001c18",
            "xor ebx, ebx",
            "jmp 0x80016d0",
            "lea rdi, [rbp - 0x130]",
            "mov rsi, r12",
            "call kcaop_from_user",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "lea rsi, [rbp - 0x130]",
            "mov rdi, r12",
            "call crypto_auth_run",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "lea rdi, [rbp - 0x130]",
            "mov rdx, r13",
            "mov rsi, r12",
            "call kcaop_to_user",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "lea r14, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rsi, r13",
            "mov rdi, r14",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x8001b48",
            "mov rsi, r12",
            "mov rdi, r14",
            "call sym.fill_kcop_from_cop",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov rsi, r14",
            "mov rdi, r12",
            "call crypto_run",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov rdi, r14",
            "call sym.fill_cop_from_kcop.isra.4",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov edx, 0x30",
            "mov rsi, r14",
            "mov rdi, r13",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x800184b",
            "cmp dword [0x0800192f], 0",
            "mov rbx, 0xfffffffffffffff2",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2c7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "lea rdi, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rsi, r13",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80019d2",
            "lea rsi, [rbp - 0x130]",
            "mov rdi, r12",
            "call sym.crypto_create_session",
            "test eax, eax",
            "jne 0x800189e",
            "lea rsi, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rdi, r13",
            "call _copy_to_user",
            "test eax, eax",
            "je 0x800184b",
            "mov esi, dword [rbp - 0x108]",
            "mov rdi, r12",
            "call sym.crypto_finish_session",
            "mov rbx, 0xfffffffffffffff2",
            "jmp 0x80016d0",
            "xor eax, eax",
            "mov rcx, rdx",
            "call __put_user_4",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "mov r12, qword [rbx + 0x50]",
            "jmp 0x8001787",
            "mov r12, qword [rbx + 0x98]",
            "lea rdi, [r14 + 0x84]",
            "mov rdx, 0",
            "mov esi, 0x40",
            "xor eax, eax",
            "mov rcx, qword [r12 + 0x98]",
            "add rcx, 0x38",
            "call snprintf",
            "mov rcx, qword [r12 + 0x98]",
            "lea rdi, [r14 + 0xc4]",
            "xor eax, eax",
            "mov rdx, 0",
            "mov esi, 0x40",
            "add rcx, 0x78",
            "call snprintf",
            "mov rax, qword [r12 + 0x98]",
            "test byte [rax + 0x21], 0x10",
            "je 0x80017e6",
            "or dword [rbp - 0x28], 1",
            "jmp 0x80017e6",
            "ud2",
            "cmp dword [0x08001a7f], 0",
            "jle 0x80016bf",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbp - 0x130]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2f8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016bf",
            "cmp dword [0x08001ac9], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2c2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001b0c], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x35f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "mov rbx, 0xfffffffffffffff2",
            "cmp dword [0x08001b56], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x359",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001b99], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x36c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001bdc], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x366",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "mov edi, r14d",
            "movsxd rbx, r12d",
            "call sys_close",
            "jmp 0x80016d0"
        ]
    },
    "unk.0x80017a7": {
        "function_address": "0x080017a7",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x130",
            "mov qword [rbp - 0x20], rbx",
            "mov qword [rbp - 0x18], r12",
            "mov rbx, rdi",
            "mov qword [rbp - 0x10], r13",
            "mov qword [rbp - 8], r14",
            "mov r12, qword [rdi + 0xd0]",
            "test r12, r12",
            "je cryptodev_verbosity",
            "cmp esi, 0xc0306366",
            "mov r13, rdx",
            "je 0x8001978",
            "jbe 0x80016e8",
            "cmp esi, 0xc048636d",
            "je 0x8001858",
            "cmp esi, 0xc10c636b",
            "je 0x8001730",
            "cmp esi, 0xc0306368",
            "je 0x80018b0",
            "mov rbx, 0xffffffffffffffea",
            "nop word cs:[rax + rax]",
            "mov rax, rbx",
            "mov r12, qword [rbp - 0x18]",
            "mov rbx, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x10]",
            "mov r14, qword [rbp - 8]",
            "leave",
            "ret",
            "cmp esi, 0x8004636a",
            "je 0x80019e0",
            "cmp esi, 0xc0046365",
            "je get_unused_fd_flags",
            "cmp esi, 0x40046367",
            "jne 0x80016bf",
            "mov rax, rdx",
            "call __get_user_4",
            "test eax, eax",
            "jne 0x800189e",
            "mov esi, edx",
            "mov rdi, r12",
            "call sym.crypto_finish_session",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "lea r14, [rbp - 0x130]",
            "mov edx, 0x10c",
            "mov rsi, r13",
            "mov rdi, r14",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80019d2",
            "mov esi, dword [rbp - 0x130]",
            "mov rdi, r12",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov rbx, rax",
            "je cryptodev_verbosity",
            "mov dword [rbp - 0x28], 0",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je 0x80017d6",
            "mov eax, dword [rbx + 0x40]",
            "test eax, eax",
            "je 0x80019f8",
            "mov r12, qword [rbx + 0x60]",
            "mov rcx, qword [r12 + 0x50]",
            "lea rdi, [r14 + 4]",
            "mov rdx, 0",
            "mov esi, 0x40",
            "xor eax, eax",
            "add rcx, 0x38",
            "call snprintf",
            "mov rcx, qword [r12 + 0x50]",
            "lea rdi, [r14 + 0x44]",
            "xor eax, eax",
            "mov rdx, 0",
            "mov esi, 0x40",
            "add rcx, 0x78",
            "call snprintf",
            "mov rax, qword [r12 + 0x50]",
            "test byte [rax + 0x21], 0x10",
            "je 0x80017d6",
            "or dword [rbp - 0x28], 1",
            "mov r12d, dword [rbx + 0x88]",
            "test r12d, r12d",
            "jne 0x8001a08",
            "mov eax, dword [rbx + 0xb4]",
            "lea rdi, [rbx + 0x10]",
            "mov word [rbp - 0x2c], ax",
            "call mutex_unlock",
            "mov edx, 0x10c",
            "mov rsi, r14",
            "mov rdi, r13",
            "call _copy_to_user",
            "mov rbx, rax",
            "jmp 0x80016d0",
            "xor edi, edi",
            "call get_unused_fd_flags",
            "test eax, eax",
            "mov r14d, eax",
            "js 0x8001835",
            "lock inc qword [rbx + 0x38]",
            "mov rsi, rbx",
            "mov edi, eax",
            "call fd_install",
            "mov eax, r14d",
            "mov rcx, r13",
            "call __put_user_4",
            "test eax, eax",
            "mov r12d, eax",
            "jne 0x8001c18",
            "xor ebx, ebx",
            "jmp 0x80016d0",
            "lea rdi, [rbp - 0x130]",
            "mov rsi, r12",
            "call kcaop_from_user",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "lea rsi, [rbp - 0x130]",
            "mov rdi, r12",
            "call crypto_auth_run",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "lea rdi, [rbp - 0x130]",
            "mov rdx, r13",
            "mov rsi, r12",
            "call kcaop_to_user",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "lea r14, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rsi, r13",
            "mov rdi, r14",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x8001b48",
            "mov rsi, r12",
            "mov rdi, r14",
            "call sym.fill_kcop_from_cop",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov rsi, r14",
            "mov rdi, r12",
            "call crypto_run",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov rdi, r14",
            "call sym.fill_cop_from_kcop.isra.4",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov edx, 0x30",
            "mov rsi, r14",
            "mov rdi, r13",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x800184b",
            "cmp dword [0x0800192f], 0",
            "mov rbx, 0xfffffffffffffff2",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2c7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "lea rdi, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rsi, r13",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80019d2",
            "lea rsi, [rbp - 0x130]",
            "mov rdi, r12",
            "call sym.crypto_create_session",
            "test eax, eax",
            "jne 0x800189e",
            "lea rsi, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rdi, r13",
            "call _copy_to_user",
            "test eax, eax",
            "je 0x800184b",
            "mov esi, dword [rbp - 0x108]",
            "mov rdi, r12",
            "call sym.crypto_finish_session",
            "mov rbx, 0xfffffffffffffff2",
            "jmp 0x80016d0",
            "xor eax, eax",
            "mov rcx, rdx",
            "call __put_user_4",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "mov r12, qword [rbx + 0x50]",
            "jmp 0x8001787",
            "mov r12, qword [rbx + 0x98]",
            "lea rdi, [r14 + 0x84]",
            "mov rdx, 0",
            "mov esi, 0x40",
            "xor eax, eax",
            "mov rcx, qword [r12 + 0x98]",
            "add rcx, 0x38",
            "call snprintf",
            "mov rcx, qword [r12 + 0x98]",
            "lea rdi, [r14 + 0xc4]",
            "xor eax, eax",
            "mov rdx, 0",
            "mov esi, 0x40",
            "add rcx, 0x78",
            "call snprintf",
            "mov rax, qword [r12 + 0x98]",
            "test byte [rax + 0x21], 0x10",
            "je 0x80017e6",
            "or dword [rbp - 0x28], 1",
            "jmp 0x80017e6",
            "ud2",
            "cmp dword [0x08001a7f], 0",
            "jle 0x80016bf",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbp - 0x130]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2f8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016bf",
            "cmp dword [0x08001ac9], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2c2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001b0c], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x35f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "mov rbx, 0xfffffffffffffff2",
            "cmp dword [0x08001b56], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x359",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001b99], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x36c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001bdc], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x366",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "mov edi, r14d",
            "movsxd rbx, r12d",
            "call sys_close",
            "jmp 0x80016d0"
        ]
    },
    "unk.0x80017c7": {
        "function_address": "0x080017c7",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x130",
            "mov qword [rbp - 0x20], rbx",
            "mov qword [rbp - 0x18], r12",
            "mov rbx, rdi",
            "mov qword [rbp - 0x10], r13",
            "mov qword [rbp - 8], r14",
            "mov r12, qword [rdi + 0xd0]",
            "test r12, r12",
            "je cryptodev_verbosity",
            "cmp esi, 0xc0306366",
            "mov r13, rdx",
            "je 0x8001978",
            "jbe 0x80016e8",
            "cmp esi, 0xc048636d",
            "je 0x8001858",
            "cmp esi, 0xc10c636b",
            "je 0x8001730",
            "cmp esi, 0xc0306368",
            "je 0x80018b0",
            "mov rbx, 0xffffffffffffffea",
            "nop word cs:[rax + rax]",
            "mov rax, rbx",
            "mov r12, qword [rbp - 0x18]",
            "mov rbx, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x10]",
            "mov r14, qword [rbp - 8]",
            "leave",
            "ret",
            "cmp esi, 0x8004636a",
            "je 0x80019e0",
            "cmp esi, 0xc0046365",
            "je get_unused_fd_flags",
            "cmp esi, 0x40046367",
            "jne 0x80016bf",
            "mov rax, rdx",
            "call __get_user_4",
            "test eax, eax",
            "jne 0x800189e",
            "mov esi, edx",
            "mov rdi, r12",
            "call sym.crypto_finish_session",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "lea r14, [rbp - 0x130]",
            "mov edx, 0x10c",
            "mov rsi, r13",
            "mov rdi, r14",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80019d2",
            "mov esi, dword [rbp - 0x130]",
            "mov rdi, r12",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov rbx, rax",
            "je cryptodev_verbosity",
            "mov dword [rbp - 0x28], 0",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je 0x80017d6",
            "mov eax, dword [rbx + 0x40]",
            "test eax, eax",
            "je 0x80019f8",
            "mov r12, qword [rbx + 0x60]",
            "mov rcx, qword [r12 + 0x50]",
            "lea rdi, [r14 + 4]",
            "mov rdx, 0",
            "mov esi, 0x40",
            "xor eax, eax",
            "add rcx, 0x38",
            "call snprintf",
            "mov rcx, qword [r12 + 0x50]",
            "lea rdi, [r14 + 0x44]",
            "xor eax, eax",
            "mov rdx, 0",
            "mov esi, 0x40",
            "add rcx, 0x78",
            "call snprintf",
            "mov rax, qword [r12 + 0x50]",
            "test byte [rax + 0x21], 0x10",
            "je 0x80017d6",
            "or dword [rbp - 0x28], 1",
            "mov r12d, dword [rbx + 0x88]",
            "test r12d, r12d",
            "jne 0x8001a08",
            "mov eax, dword [rbx + 0xb4]",
            "lea rdi, [rbx + 0x10]",
            "mov word [rbp - 0x2c], ax",
            "call mutex_unlock",
            "mov edx, 0x10c",
            "mov rsi, r14",
            "mov rdi, r13",
            "call _copy_to_user",
            "mov rbx, rax",
            "jmp 0x80016d0",
            "xor edi, edi",
            "call get_unused_fd_flags",
            "test eax, eax",
            "mov r14d, eax",
            "js 0x8001835",
            "lock inc qword [rbx + 0x38]",
            "mov rsi, rbx",
            "mov edi, eax",
            "call fd_install",
            "mov eax, r14d",
            "mov rcx, r13",
            "call __put_user_4",
            "test eax, eax",
            "mov r12d, eax",
            "jne 0x8001c18",
            "xor ebx, ebx",
            "jmp 0x80016d0",
            "lea rdi, [rbp - 0x130]",
            "mov rsi, r12",
            "call kcaop_from_user",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "lea rsi, [rbp - 0x130]",
            "mov rdi, r12",
            "call crypto_auth_run",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "lea rdi, [rbp - 0x130]",
            "mov rdx, r13",
            "mov rsi, r12",
            "call kcaop_to_user",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "lea r14, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rsi, r13",
            "mov rdi, r14",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x8001b48",
            "mov rsi, r12",
            "mov rdi, r14",
            "call sym.fill_kcop_from_cop",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov rsi, r14",
            "mov rdi, r12",
            "call crypto_run",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov rdi, r14",
            "call sym.fill_cop_from_kcop.isra.4",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov edx, 0x30",
            "mov rsi, r14",
            "mov rdi, r13",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x800184b",
            "cmp dword [0x0800192f], 0",
            "mov rbx, 0xfffffffffffffff2",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2c7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "lea rdi, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rsi, r13",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80019d2",
            "lea rsi, [rbp - 0x130]",
            "mov rdi, r12",
            "call sym.crypto_create_session",
            "test eax, eax",
            "jne 0x800189e",
            "lea rsi, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rdi, r13",
            "call _copy_to_user",
            "test eax, eax",
            "je 0x800184b",
            "mov esi, dword [rbp - 0x108]",
            "mov rdi, r12",
            "call sym.crypto_finish_session",
            "mov rbx, 0xfffffffffffffff2",
            "jmp 0x80016d0",
            "xor eax, eax",
            "mov rcx, rdx",
            "call __put_user_4",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "mov r12, qword [rbx + 0x50]",
            "jmp 0x8001787",
            "mov r12, qword [rbx + 0x98]",
            "lea rdi, [r14 + 0x84]",
            "mov rdx, 0",
            "mov esi, 0x40",
            "xor eax, eax",
            "mov rcx, qword [r12 + 0x98]",
            "add rcx, 0x38",
            "call snprintf",
            "mov rcx, qword [r12 + 0x98]",
            "lea rdi, [r14 + 0xc4]",
            "xor eax, eax",
            "mov rdx, 0",
            "mov esi, 0x40",
            "add rcx, 0x78",
            "call snprintf",
            "mov rax, qword [r12 + 0x98]",
            "test byte [rax + 0x21], 0x10",
            "je 0x80017e6",
            "or dword [rbp - 0x28], 1",
            "jmp 0x80017e6",
            "ud2",
            "cmp dword [0x08001a7f], 0",
            "jle 0x80016bf",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbp - 0x130]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2f8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016bf",
            "cmp dword [0x08001ac9], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2c2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001b0c], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x35f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "mov rbx, 0xfffffffffffffff2",
            "cmp dword [0x08001b56], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x359",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001b99], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x36c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001bdc], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x366",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "mov edi, r14d",
            "movsxd rbx, r12d",
            "call sys_close",
            "jmp 0x80016d0"
        ]
    },
    "unk.0x80017f9": {
        "function_address": "0x080017f9",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x130",
            "mov qword [rbp - 0x20], rbx",
            "mov qword [rbp - 0x18], r12",
            "mov rbx, rdi",
            "mov qword [rbp - 0x10], r13",
            "mov qword [rbp - 8], r14",
            "mov r12, qword [rdi + 0xd0]",
            "test r12, r12",
            "je cryptodev_verbosity",
            "cmp esi, 0xc0306366",
            "mov r13, rdx",
            "je 0x8001978",
            "jbe 0x80016e8",
            "cmp esi, 0xc048636d",
            "je 0x8001858",
            "cmp esi, 0xc10c636b",
            "je 0x8001730",
            "cmp esi, 0xc0306368",
            "je 0x80018b0",
            "mov rbx, 0xffffffffffffffea",
            "nop word cs:[rax + rax]",
            "mov rax, rbx",
            "mov r12, qword [rbp - 0x18]",
            "mov rbx, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x10]",
            "mov r14, qword [rbp - 8]",
            "leave",
            "ret",
            "cmp esi, 0x8004636a",
            "je 0x80019e0",
            "cmp esi, 0xc0046365",
            "je get_unused_fd_flags",
            "cmp esi, 0x40046367",
            "jne 0x80016bf",
            "mov rax, rdx",
            "call __get_user_4",
            "test eax, eax",
            "jne 0x800189e",
            "mov esi, edx",
            "mov rdi, r12",
            "call sym.crypto_finish_session",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "lea r14, [rbp - 0x130]",
            "mov edx, 0x10c",
            "mov rsi, r13",
            "mov rdi, r14",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80019d2",
            "mov esi, dword [rbp - 0x130]",
            "mov rdi, r12",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov rbx, rax",
            "je cryptodev_verbosity",
            "mov dword [rbp - 0x28], 0",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je 0x80017d6",
            "mov eax, dword [rbx + 0x40]",
            "test eax, eax",
            "je 0x80019f8",
            "mov r12, qword [rbx + 0x60]",
            "mov rcx, qword [r12 + 0x50]",
            "lea rdi, [r14 + 4]",
            "mov rdx, 0",
            "mov esi, 0x40",
            "xor eax, eax",
            "add rcx, 0x38",
            "call snprintf",
            "mov rcx, qword [r12 + 0x50]",
            "lea rdi, [r14 + 0x44]",
            "xor eax, eax",
            "mov rdx, 0",
            "mov esi, 0x40",
            "add rcx, 0x78",
            "call snprintf",
            "mov rax, qword [r12 + 0x50]",
            "test byte [rax + 0x21], 0x10",
            "je 0x80017d6",
            "or dword [rbp - 0x28], 1",
            "mov r12d, dword [rbx + 0x88]",
            "test r12d, r12d",
            "jne 0x8001a08",
            "mov eax, dword [rbx + 0xb4]",
            "lea rdi, [rbx + 0x10]",
            "mov word [rbp - 0x2c], ax",
            "call mutex_unlock",
            "mov edx, 0x10c",
            "mov rsi, r14",
            "mov rdi, r13",
            "call _copy_to_user",
            "mov rbx, rax",
            "jmp 0x80016d0",
            "xor edi, edi",
            "call get_unused_fd_flags",
            "test eax, eax",
            "mov r14d, eax",
            "js 0x8001835",
            "lock inc qword [rbx + 0x38]",
            "mov rsi, rbx",
            "mov edi, eax",
            "call fd_install",
            "mov eax, r14d",
            "mov rcx, r13",
            "call __put_user_4",
            "test eax, eax",
            "mov r12d, eax",
            "jne 0x8001c18",
            "xor ebx, ebx",
            "jmp 0x80016d0",
            "lea rdi, [rbp - 0x130]",
            "mov rsi, r12",
            "call kcaop_from_user",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "lea rsi, [rbp - 0x130]",
            "mov rdi, r12",
            "call crypto_auth_run",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "lea rdi, [rbp - 0x130]",
            "mov rdx, r13",
            "mov rsi, r12",
            "call kcaop_to_user",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "lea r14, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rsi, r13",
            "mov rdi, r14",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x8001b48",
            "mov rsi, r12",
            "mov rdi, r14",
            "call sym.fill_kcop_from_cop",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov rsi, r14",
            "mov rdi, r12",
            "call crypto_run",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov rdi, r14",
            "call sym.fill_cop_from_kcop.isra.4",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov edx, 0x30",
            "mov rsi, r14",
            "mov rdi, r13",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x800184b",
            "cmp dword [0x0800192f], 0",
            "mov rbx, 0xfffffffffffffff2",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2c7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "lea rdi, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rsi, r13",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80019d2",
            "lea rsi, [rbp - 0x130]",
            "mov rdi, r12",
            "call sym.crypto_create_session",
            "test eax, eax",
            "jne 0x800189e",
            "lea rsi, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rdi, r13",
            "call _copy_to_user",
            "test eax, eax",
            "je 0x800184b",
            "mov esi, dword [rbp - 0x108]",
            "mov rdi, r12",
            "call sym.crypto_finish_session",
            "mov rbx, 0xfffffffffffffff2",
            "jmp 0x80016d0",
            "xor eax, eax",
            "mov rcx, rdx",
            "call __put_user_4",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "mov r12, qword [rbx + 0x50]",
            "jmp 0x8001787",
            "mov r12, qword [rbx + 0x98]",
            "lea rdi, [r14 + 0x84]",
            "mov rdx, 0",
            "mov esi, 0x40",
            "xor eax, eax",
            "mov rcx, qword [r12 + 0x98]",
            "add rcx, 0x38",
            "call snprintf",
            "mov rcx, qword [r12 + 0x98]",
            "lea rdi, [r14 + 0xc4]",
            "xor eax, eax",
            "mov rdx, 0",
            "mov esi, 0x40",
            "add rcx, 0x78",
            "call snprintf",
            "mov rax, qword [r12 + 0x98]",
            "test byte [rax + 0x21], 0x10",
            "je 0x80017e6",
            "or dword [rbp - 0x28], 1",
            "jmp 0x80017e6",
            "ud2",
            "cmp dword [0x08001a7f], 0",
            "jle 0x80016bf",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbp - 0x130]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2f8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016bf",
            "cmp dword [0x08001ac9], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2c2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001b0c], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x35f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "mov rbx, 0xfffffffffffffff2",
            "cmp dword [0x08001b56], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x359",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001b99], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x36c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001bdc], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x366",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "mov edi, r14d",
            "movsxd rbx, r12d",
            "call sys_close",
            "jmp 0x80016d0"
        ]
    },
    "unk.0x8001809": {
        "function_address": "0x08001809",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x130",
            "mov qword [rbp - 0x20], rbx",
            "mov qword [rbp - 0x18], r12",
            "mov rbx, rdi",
            "mov qword [rbp - 0x10], r13",
            "mov qword [rbp - 8], r14",
            "mov r12, qword [rdi + 0xd0]",
            "test r12, r12",
            "je cryptodev_verbosity",
            "cmp esi, 0xc0306366",
            "mov r13, rdx",
            "je 0x8001978",
            "jbe 0x80016e8",
            "cmp esi, 0xc048636d",
            "je 0x8001858",
            "cmp esi, 0xc10c636b",
            "je 0x8001730",
            "cmp esi, 0xc0306368",
            "je 0x80018b0",
            "mov rbx, 0xffffffffffffffea",
            "nop word cs:[rax + rax]",
            "mov rax, rbx",
            "mov r12, qword [rbp - 0x18]",
            "mov rbx, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x10]",
            "mov r14, qword [rbp - 8]",
            "leave",
            "ret",
            "cmp esi, 0x8004636a",
            "je 0x80019e0",
            "cmp esi, 0xc0046365",
            "je get_unused_fd_flags",
            "cmp esi, 0x40046367",
            "jne 0x80016bf",
            "mov rax, rdx",
            "call __get_user_4",
            "test eax, eax",
            "jne 0x800189e",
            "mov esi, edx",
            "mov rdi, r12",
            "call sym.crypto_finish_session",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "lea r14, [rbp - 0x130]",
            "mov edx, 0x10c",
            "mov rsi, r13",
            "mov rdi, r14",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80019d2",
            "mov esi, dword [rbp - 0x130]",
            "mov rdi, r12",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov rbx, rax",
            "je cryptodev_verbosity",
            "mov dword [rbp - 0x28], 0",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je 0x80017d6",
            "mov eax, dword [rbx + 0x40]",
            "test eax, eax",
            "je 0x80019f8",
            "mov r12, qword [rbx + 0x60]",
            "mov rcx, qword [r12 + 0x50]",
            "lea rdi, [r14 + 4]",
            "mov rdx, 0",
            "mov esi, 0x40",
            "xor eax, eax",
            "add rcx, 0x38",
            "call snprintf",
            "mov rcx, qword [r12 + 0x50]",
            "lea rdi, [r14 + 0x44]",
            "xor eax, eax",
            "mov rdx, 0",
            "mov esi, 0x40",
            "add rcx, 0x78",
            "call snprintf",
            "mov rax, qword [r12 + 0x50]",
            "test byte [rax + 0x21], 0x10",
            "je 0x80017d6",
            "or dword [rbp - 0x28], 1",
            "mov r12d, dword [rbx + 0x88]",
            "test r12d, r12d",
            "jne 0x8001a08",
            "mov eax, dword [rbx + 0xb4]",
            "lea rdi, [rbx + 0x10]",
            "mov word [rbp - 0x2c], ax",
            "call mutex_unlock",
            "mov edx, 0x10c",
            "mov rsi, r14",
            "mov rdi, r13",
            "call _copy_to_user",
            "mov rbx, rax",
            "jmp 0x80016d0",
            "xor edi, edi",
            "call get_unused_fd_flags",
            "test eax, eax",
            "mov r14d, eax",
            "js 0x8001835",
            "lock inc qword [rbx + 0x38]",
            "mov rsi, rbx",
            "mov edi, eax",
            "call fd_install",
            "mov eax, r14d",
            "mov rcx, r13",
            "call __put_user_4",
            "test eax, eax",
            "mov r12d, eax",
            "jne 0x8001c18",
            "xor ebx, ebx",
            "jmp 0x80016d0",
            "lea rdi, [rbp - 0x130]",
            "mov rsi, r12",
            "call kcaop_from_user",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "lea rsi, [rbp - 0x130]",
            "mov rdi, r12",
            "call crypto_auth_run",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "lea rdi, [rbp - 0x130]",
            "mov rdx, r13",
            "mov rsi, r12",
            "call kcaop_to_user",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "lea r14, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rsi, r13",
            "mov rdi, r14",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x8001b48",
            "mov rsi, r12",
            "mov rdi, r14",
            "call sym.fill_kcop_from_cop",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov rsi, r14",
            "mov rdi, r12",
            "call crypto_run",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov rdi, r14",
            "call sym.fill_cop_from_kcop.isra.4",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov edx, 0x30",
            "mov rsi, r14",
            "mov rdi, r13",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x800184b",
            "cmp dword [0x0800192f], 0",
            "mov rbx, 0xfffffffffffffff2",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2c7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "lea rdi, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rsi, r13",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80019d2",
            "lea rsi, [rbp - 0x130]",
            "mov rdi, r12",
            "call sym.crypto_create_session",
            "test eax, eax",
            "jne 0x800189e",
            "lea rsi, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rdi, r13",
            "call _copy_to_user",
            "test eax, eax",
            "je 0x800184b",
            "mov esi, dword [rbp - 0x108]",
            "mov rdi, r12",
            "call sym.crypto_finish_session",
            "mov rbx, 0xfffffffffffffff2",
            "jmp 0x80016d0",
            "xor eax, eax",
            "mov rcx, rdx",
            "call __put_user_4",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "mov r12, qword [rbx + 0x50]",
            "jmp 0x8001787",
            "mov r12, qword [rbx + 0x98]",
            "lea rdi, [r14 + 0x84]",
            "mov rdx, 0",
            "mov esi, 0x40",
            "xor eax, eax",
            "mov rcx, qword [r12 + 0x98]",
            "add rcx, 0x38",
            "call snprintf",
            "mov rcx, qword [r12 + 0x98]",
            "lea rdi, [r14 + 0xc4]",
            "xor eax, eax",
            "mov rdx, 0",
            "mov esi, 0x40",
            "add rcx, 0x78",
            "call snprintf",
            "mov rax, qword [r12 + 0x98]",
            "test byte [rax + 0x21], 0x10",
            "je 0x80017e6",
            "or dword [rbp - 0x28], 1",
            "jmp 0x80017e6",
            "ud2",
            "cmp dword [0x08001a7f], 0",
            "jle 0x80016bf",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbp - 0x130]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2f8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016bf",
            "cmp dword [0x08001ac9], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2c2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001b0c], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x35f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "mov rbx, 0xfffffffffffffff2",
            "cmp dword [0x08001b56], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x359",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001b99], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x36c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001bdc], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x366",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "mov edi, r14d",
            "movsxd rbx, r12d",
            "call sys_close",
            "jmp 0x80016d0"
        ]
    },
    "unk.0x800181f": {
        "function_address": "0x0800181f",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x130",
            "mov qword [rbp - 0x20], rbx",
            "mov qword [rbp - 0x18], r12",
            "mov rbx, rdi",
            "mov qword [rbp - 0x10], r13",
            "mov qword [rbp - 8], r14",
            "mov r12, qword [rdi + 0xd0]",
            "test r12, r12",
            "je cryptodev_verbosity",
            "cmp esi, 0xc0306366",
            "mov r13, rdx",
            "je 0x8001978",
            "jbe 0x80016e8",
            "cmp esi, 0xc048636d",
            "je 0x8001858",
            "cmp esi, 0xc10c636b",
            "je 0x8001730",
            "cmp esi, 0xc0306368",
            "je 0x80018b0",
            "mov rbx, 0xffffffffffffffea",
            "nop word cs:[rax + rax]",
            "mov rax, rbx",
            "mov r12, qword [rbp - 0x18]",
            "mov rbx, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x10]",
            "mov r14, qword [rbp - 8]",
            "leave",
            "ret",
            "cmp esi, 0x8004636a",
            "je 0x80019e0",
            "cmp esi, 0xc0046365",
            "je get_unused_fd_flags",
            "cmp esi, 0x40046367",
            "jne 0x80016bf",
            "mov rax, rdx",
            "call __get_user_4",
            "test eax, eax",
            "jne 0x800189e",
            "mov esi, edx",
            "mov rdi, r12",
            "call sym.crypto_finish_session",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "lea r14, [rbp - 0x130]",
            "mov edx, 0x10c",
            "mov rsi, r13",
            "mov rdi, r14",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80019d2",
            "mov esi, dword [rbp - 0x130]",
            "mov rdi, r12",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov rbx, rax",
            "je cryptodev_verbosity",
            "mov dword [rbp - 0x28], 0",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je 0x80017d6",
            "mov eax, dword [rbx + 0x40]",
            "test eax, eax",
            "je 0x80019f8",
            "mov r12, qword [rbx + 0x60]",
            "mov rcx, qword [r12 + 0x50]",
            "lea rdi, [r14 + 4]",
            "mov rdx, 0",
            "mov esi, 0x40",
            "xor eax, eax",
            "add rcx, 0x38",
            "call snprintf",
            "mov rcx, qword [r12 + 0x50]",
            "lea rdi, [r14 + 0x44]",
            "xor eax, eax",
            "mov rdx, 0",
            "mov esi, 0x40",
            "add rcx, 0x78",
            "call snprintf",
            "mov rax, qword [r12 + 0x50]",
            "test byte [rax + 0x21], 0x10",
            "je 0x80017d6",
            "or dword [rbp - 0x28], 1",
            "mov r12d, dword [rbx + 0x88]",
            "test r12d, r12d",
            "jne 0x8001a08",
            "mov eax, dword [rbx + 0xb4]",
            "lea rdi, [rbx + 0x10]",
            "mov word [rbp - 0x2c], ax",
            "call mutex_unlock",
            "mov edx, 0x10c",
            "mov rsi, r14",
            "mov rdi, r13",
            "call _copy_to_user",
            "mov rbx, rax",
            "jmp 0x80016d0",
            "xor edi, edi",
            "call get_unused_fd_flags",
            "test eax, eax",
            "mov r14d, eax",
            "js 0x8001835",
            "lock inc qword [rbx + 0x38]",
            "mov rsi, rbx",
            "mov edi, eax",
            "call fd_install",
            "mov eax, r14d",
            "mov rcx, r13",
            "call __put_user_4",
            "test eax, eax",
            "mov r12d, eax",
            "jne 0x8001c18",
            "xor ebx, ebx",
            "jmp 0x80016d0",
            "lea rdi, [rbp - 0x130]",
            "mov rsi, r12",
            "call kcaop_from_user",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "lea rsi, [rbp - 0x130]",
            "mov rdi, r12",
            "call crypto_auth_run",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "lea rdi, [rbp - 0x130]",
            "mov rdx, r13",
            "mov rsi, r12",
            "call kcaop_to_user",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "lea r14, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rsi, r13",
            "mov rdi, r14",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x8001b48",
            "mov rsi, r12",
            "mov rdi, r14",
            "call sym.fill_kcop_from_cop",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov rsi, r14",
            "mov rdi, r12",
            "call crypto_run",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov rdi, r14",
            "call sym.fill_cop_from_kcop.isra.4",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov edx, 0x30",
            "mov rsi, r14",
            "mov rdi, r13",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x800184b",
            "cmp dword [0x0800192f], 0",
            "mov rbx, 0xfffffffffffffff2",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2c7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "lea rdi, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rsi, r13",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80019d2",
            "lea rsi, [rbp - 0x130]",
            "mov rdi, r12",
            "call sym.crypto_create_session",
            "test eax, eax",
            "jne 0x800189e",
            "lea rsi, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rdi, r13",
            "call _copy_to_user",
            "test eax, eax",
            "je 0x800184b",
            "mov esi, dword [rbp - 0x108]",
            "mov rdi, r12",
            "call sym.crypto_finish_session",
            "mov rbx, 0xfffffffffffffff2",
            "jmp 0x80016d0",
            "xor eax, eax",
            "mov rcx, rdx",
            "call __put_user_4",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "mov r12, qword [rbx + 0x50]",
            "jmp 0x8001787",
            "mov r12, qword [rbx + 0x98]",
            "lea rdi, [r14 + 0x84]",
            "mov rdx, 0",
            "mov esi, 0x40",
            "xor eax, eax",
            "mov rcx, qword [r12 + 0x98]",
            "add rcx, 0x38",
            "call snprintf",
            "mov rcx, qword [r12 + 0x98]",
            "lea rdi, [r14 + 0xc4]",
            "xor eax, eax",
            "mov rdx, 0",
            "mov esi, 0x40",
            "add rcx, 0x78",
            "call snprintf",
            "mov rax, qword [r12 + 0x98]",
            "test byte [rax + 0x21], 0x10",
            "je 0x80017e6",
            "or dword [rbp - 0x28], 1",
            "jmp 0x80017e6",
            "ud2",
            "cmp dword [0x08001a7f], 0",
            "jle 0x80016bf",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbp - 0x130]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2f8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016bf",
            "cmp dword [0x08001ac9], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2c2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001b0c], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x35f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "mov rbx, 0xfffffffffffffff2",
            "cmp dword [0x08001b56], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x359",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001b99], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x36c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001bdc], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x366",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "mov edi, r14d",
            "movsxd rbx, r12d",
            "call sys_close",
            "jmp 0x80016d0"
        ]
    },
    "unk.0x8001835": {
        "function_address": "0x08001835",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x130",
            "mov qword [rbp - 0x20], rbx",
            "mov qword [rbp - 0x18], r12",
            "mov rbx, rdi",
            "mov qword [rbp - 0x10], r13",
            "mov qword [rbp - 8], r14",
            "mov r12, qword [rdi + 0xd0]",
            "test r12, r12",
            "je cryptodev_verbosity",
            "cmp esi, 0xc0306366",
            "mov r13, rdx",
            "je 0x8001978",
            "jbe 0x80016e8",
            "cmp esi, 0xc048636d",
            "je 0x8001858",
            "cmp esi, 0xc10c636b",
            "je 0x8001730",
            "cmp esi, 0xc0306368",
            "je 0x80018b0",
            "mov rbx, 0xffffffffffffffea",
            "nop word cs:[rax + rax]",
            "mov rax, rbx",
            "mov r12, qword [rbp - 0x18]",
            "mov rbx, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x10]",
            "mov r14, qword [rbp - 8]",
            "leave",
            "ret",
            "cmp esi, 0x8004636a",
            "je 0x80019e0",
            "cmp esi, 0xc0046365",
            "je get_unused_fd_flags",
            "cmp esi, 0x40046367",
            "jne 0x80016bf",
            "mov rax, rdx",
            "call __get_user_4",
            "test eax, eax",
            "jne 0x800189e",
            "mov esi, edx",
            "mov rdi, r12",
            "call sym.crypto_finish_session",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "lea r14, [rbp - 0x130]",
            "mov edx, 0x10c",
            "mov rsi, r13",
            "mov rdi, r14",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80019d2",
            "mov esi, dword [rbp - 0x130]",
            "mov rdi, r12",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov rbx, rax",
            "je cryptodev_verbosity",
            "mov dword [rbp - 0x28], 0",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je 0x80017d6",
            "mov eax, dword [rbx + 0x40]",
            "test eax, eax",
            "je 0x80019f8",
            "mov r12, qword [rbx + 0x60]",
            "mov rcx, qword [r12 + 0x50]",
            "lea rdi, [r14 + 4]",
            "mov rdx, 0",
            "mov esi, 0x40",
            "xor eax, eax",
            "add rcx, 0x38",
            "call snprintf",
            "mov rcx, qword [r12 + 0x50]",
            "lea rdi, [r14 + 0x44]",
            "xor eax, eax",
            "mov rdx, 0",
            "mov esi, 0x40",
            "add rcx, 0x78",
            "call snprintf",
            "mov rax, qword [r12 + 0x50]",
            "test byte [rax + 0x21], 0x10",
            "je 0x80017d6",
            "or dword [rbp - 0x28], 1",
            "mov r12d, dword [rbx + 0x88]",
            "test r12d, r12d",
            "jne 0x8001a08",
            "mov eax, dword [rbx + 0xb4]",
            "lea rdi, [rbx + 0x10]",
            "mov word [rbp - 0x2c], ax",
            "call mutex_unlock",
            "mov edx, 0x10c",
            "mov rsi, r14",
            "mov rdi, r13",
            "call _copy_to_user",
            "mov rbx, rax",
            "jmp 0x80016d0",
            "xor edi, edi",
            "call get_unused_fd_flags",
            "test eax, eax",
            "mov r14d, eax",
            "js 0x8001835",
            "lock inc qword [rbx + 0x38]",
            "mov rsi, rbx",
            "mov edi, eax",
            "call fd_install",
            "mov eax, r14d",
            "mov rcx, r13",
            "call __put_user_4",
            "test eax, eax",
            "mov r12d, eax",
            "jne 0x8001c18",
            "xor ebx, ebx",
            "jmp 0x80016d0",
            "lea rdi, [rbp - 0x130]",
            "mov rsi, r12",
            "call kcaop_from_user",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "lea rsi, [rbp - 0x130]",
            "mov rdi, r12",
            "call crypto_auth_run",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "lea rdi, [rbp - 0x130]",
            "mov rdx, r13",
            "mov rsi, r12",
            "call kcaop_to_user",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "lea r14, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rsi, r13",
            "mov rdi, r14",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x8001b48",
            "mov rsi, r12",
            "mov rdi, r14",
            "call sym.fill_kcop_from_cop",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov rsi, r14",
            "mov rdi, r12",
            "call crypto_run",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov rdi, r14",
            "call sym.fill_cop_from_kcop.isra.4",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov edx, 0x30",
            "mov rsi, r14",
            "mov rdi, r13",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x800184b",
            "cmp dword [0x0800192f], 0",
            "mov rbx, 0xfffffffffffffff2",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2c7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "lea rdi, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rsi, r13",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80019d2",
            "lea rsi, [rbp - 0x130]",
            "mov rdi, r12",
            "call sym.crypto_create_session",
            "test eax, eax",
            "jne 0x800189e",
            "lea rsi, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rdi, r13",
            "call _copy_to_user",
            "test eax, eax",
            "je 0x800184b",
            "mov esi, dword [rbp - 0x108]",
            "mov rdi, r12",
            "call sym.crypto_finish_session",
            "mov rbx, 0xfffffffffffffff2",
            "jmp 0x80016d0",
            "xor eax, eax",
            "mov rcx, rdx",
            "call __put_user_4",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "mov r12, qword [rbx + 0x50]",
            "jmp 0x8001787",
            "mov r12, qword [rbx + 0x98]",
            "lea rdi, [r14 + 0x84]",
            "mov rdx, 0",
            "mov esi, 0x40",
            "xor eax, eax",
            "mov rcx, qword [r12 + 0x98]",
            "add rcx, 0x38",
            "call snprintf",
            "mov rcx, qword [r12 + 0x98]",
            "lea rdi, [r14 + 0xc4]",
            "xor eax, eax",
            "mov rdx, 0",
            "mov esi, 0x40",
            "add rcx, 0x78",
            "call snprintf",
            "mov rax, qword [r12 + 0x98]",
            "test byte [rax + 0x21], 0x10",
            "je 0x80017e6",
            "or dword [rbp - 0x28], 1",
            "jmp 0x80017e6",
            "ud2",
            "cmp dword [0x08001a7f], 0",
            "jle 0x80016bf",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbp - 0x130]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2f8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016bf",
            "cmp dword [0x08001ac9], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2c2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001b0c], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x35f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "mov rbx, 0xfffffffffffffff2",
            "cmp dword [0x08001b56], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x359",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001b99], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x36c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001bdc], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x366",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "mov edi, r14d",
            "movsxd rbx, r12d",
            "call sys_close",
            "jmp 0x80016d0"
        ]
    },
    "unk.0x8001840": {
        "function_address": "0x08001840",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x130",
            "mov qword [rbp - 0x20], rbx",
            "mov qword [rbp - 0x18], r12",
            "mov rbx, rdi",
            "mov qword [rbp - 0x10], r13",
            "mov qword [rbp - 8], r14",
            "mov r12, qword [rdi + 0xd0]",
            "test r12, r12",
            "je cryptodev_verbosity",
            "cmp esi, 0xc0306366",
            "mov r13, rdx",
            "je 0x8001978",
            "jbe 0x80016e8",
            "cmp esi, 0xc048636d",
            "je 0x8001858",
            "cmp esi, 0xc10c636b",
            "je 0x8001730",
            "cmp esi, 0xc0306368",
            "je 0x80018b0",
            "mov rbx, 0xffffffffffffffea",
            "nop word cs:[rax + rax]",
            "mov rax, rbx",
            "mov r12, qword [rbp - 0x18]",
            "mov rbx, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x10]",
            "mov r14, qword [rbp - 8]",
            "leave",
            "ret",
            "cmp esi, 0x8004636a",
            "je 0x80019e0",
            "cmp esi, 0xc0046365",
            "je get_unused_fd_flags",
            "cmp esi, 0x40046367",
            "jne 0x80016bf",
            "mov rax, rdx",
            "call __get_user_4",
            "test eax, eax",
            "jne 0x800189e",
            "mov esi, edx",
            "mov rdi, r12",
            "call sym.crypto_finish_session",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "lea r14, [rbp - 0x130]",
            "mov edx, 0x10c",
            "mov rsi, r13",
            "mov rdi, r14",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80019d2",
            "mov esi, dword [rbp - 0x130]",
            "mov rdi, r12",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov rbx, rax",
            "je cryptodev_verbosity",
            "mov dword [rbp - 0x28], 0",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je 0x80017d6",
            "mov eax, dword [rbx + 0x40]",
            "test eax, eax",
            "je 0x80019f8",
            "mov r12, qword [rbx + 0x60]",
            "mov rcx, qword [r12 + 0x50]",
            "lea rdi, [r14 + 4]",
            "mov rdx, 0",
            "mov esi, 0x40",
            "xor eax, eax",
            "add rcx, 0x38",
            "call snprintf",
            "mov rcx, qword [r12 + 0x50]",
            "lea rdi, [r14 + 0x44]",
            "xor eax, eax",
            "mov rdx, 0",
            "mov esi, 0x40",
            "add rcx, 0x78",
            "call snprintf",
            "mov rax, qword [r12 + 0x50]",
            "test byte [rax + 0x21], 0x10",
            "je 0x80017d6",
            "or dword [rbp - 0x28], 1",
            "mov r12d, dword [rbx + 0x88]",
            "test r12d, r12d",
            "jne 0x8001a08",
            "mov eax, dword [rbx + 0xb4]",
            "lea rdi, [rbx + 0x10]",
            "mov word [rbp - 0x2c], ax",
            "call mutex_unlock",
            "mov edx, 0x10c",
            "mov rsi, r14",
            "mov rdi, r13",
            "call _copy_to_user",
            "mov rbx, rax",
            "jmp 0x80016d0",
            "xor edi, edi",
            "call get_unused_fd_flags",
            "test eax, eax",
            "mov r14d, eax",
            "js 0x8001835",
            "lock inc qword [rbx + 0x38]",
            "mov rsi, rbx",
            "mov edi, eax",
            "call fd_install",
            "mov eax, r14d",
            "mov rcx, r13",
            "call __put_user_4",
            "test eax, eax",
            "mov r12d, eax",
            "jne 0x8001c18",
            "xor ebx, ebx",
            "jmp 0x80016d0",
            "lea rdi, [rbp - 0x130]",
            "mov rsi, r12",
            "call kcaop_from_user",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "lea rsi, [rbp - 0x130]",
            "mov rdi, r12",
            "call crypto_auth_run",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "lea rdi, [rbp - 0x130]",
            "mov rdx, r13",
            "mov rsi, r12",
            "call kcaop_to_user",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "lea r14, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rsi, r13",
            "mov rdi, r14",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x8001b48",
            "mov rsi, r12",
            "mov rdi, r14",
            "call sym.fill_kcop_from_cop",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov rsi, r14",
            "mov rdi, r12",
            "call crypto_run",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov rdi, r14",
            "call sym.fill_cop_from_kcop.isra.4",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov edx, 0x30",
            "mov rsi, r14",
            "mov rdi, r13",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x800184b",
            "cmp dword [0x0800192f], 0",
            "mov rbx, 0xfffffffffffffff2",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2c7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "lea rdi, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rsi, r13",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80019d2",
            "lea rsi, [rbp - 0x130]",
            "mov rdi, r12",
            "call sym.crypto_create_session",
            "test eax, eax",
            "jne 0x800189e",
            "lea rsi, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rdi, r13",
            "call _copy_to_user",
            "test eax, eax",
            "je 0x800184b",
            "mov esi, dword [rbp - 0x108]",
            "mov rdi, r12",
            "call sym.crypto_finish_session",
            "mov rbx, 0xfffffffffffffff2",
            "jmp 0x80016d0",
            "xor eax, eax",
            "mov rcx, rdx",
            "call __put_user_4",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "mov r12, qword [rbx + 0x50]",
            "jmp 0x8001787",
            "mov r12, qword [rbx + 0x98]",
            "lea rdi, [r14 + 0x84]",
            "mov rdx, 0",
            "mov esi, 0x40",
            "xor eax, eax",
            "mov rcx, qword [r12 + 0x98]",
            "add rcx, 0x38",
            "call snprintf",
            "mov rcx, qword [r12 + 0x98]",
            "lea rdi, [r14 + 0xc4]",
            "xor eax, eax",
            "mov rdx, 0",
            "mov esi, 0x40",
            "add rcx, 0x78",
            "call snprintf",
            "mov rax, qword [r12 + 0x98]",
            "test byte [rax + 0x21], 0x10",
            "je 0x80017e6",
            "or dword [rbp - 0x28], 1",
            "jmp 0x80017e6",
            "ud2",
            "cmp dword [0x08001a7f], 0",
            "jle 0x80016bf",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbp - 0x130]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2f8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016bf",
            "cmp dword [0x08001ac9], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2c2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001b0c], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x35f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "mov rbx, 0xfffffffffffffff2",
            "cmp dword [0x08001b56], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x359",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001b99], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x36c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001bdc], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x366",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "mov edi, r14d",
            "movsxd rbx, r12d",
            "call sys_close",
            "jmp 0x80016d0"
        ]
    },
    "unk.0x8001867": {
        "function_address": "0x08001867",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x130",
            "mov qword [rbp - 0x20], rbx",
            "mov qword [rbp - 0x18], r12",
            "mov rbx, rdi",
            "mov qword [rbp - 0x10], r13",
            "mov qword [rbp - 8], r14",
            "mov r12, qword [rdi + 0xd0]",
            "test r12, r12",
            "je cryptodev_verbosity",
            "cmp esi, 0xc0306366",
            "mov r13, rdx",
            "je 0x8001978",
            "jbe 0x80016e8",
            "cmp esi, 0xc048636d",
            "je 0x8001858",
            "cmp esi, 0xc10c636b",
            "je 0x8001730",
            "cmp esi, 0xc0306368",
            "je 0x80018b0",
            "mov rbx, 0xffffffffffffffea",
            "nop word cs:[rax + rax]",
            "mov rax, rbx",
            "mov r12, qword [rbp - 0x18]",
            "mov rbx, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x10]",
            "mov r14, qword [rbp - 8]",
            "leave",
            "ret",
            "cmp esi, 0x8004636a",
            "je 0x80019e0",
            "cmp esi, 0xc0046365",
            "je get_unused_fd_flags",
            "cmp esi, 0x40046367",
            "jne 0x80016bf",
            "mov rax, rdx",
            "call __get_user_4",
            "test eax, eax",
            "jne 0x800189e",
            "mov esi, edx",
            "mov rdi, r12",
            "call sym.crypto_finish_session",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "lea r14, [rbp - 0x130]",
            "mov edx, 0x10c",
            "mov rsi, r13",
            "mov rdi, r14",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80019d2",
            "mov esi, dword [rbp - 0x130]",
            "mov rdi, r12",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov rbx, rax",
            "je cryptodev_verbosity",
            "mov dword [rbp - 0x28], 0",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je 0x80017d6",
            "mov eax, dword [rbx + 0x40]",
            "test eax, eax",
            "je 0x80019f8",
            "mov r12, qword [rbx + 0x60]",
            "mov rcx, qword [r12 + 0x50]",
            "lea rdi, [r14 + 4]",
            "mov rdx, 0",
            "mov esi, 0x40",
            "xor eax, eax",
            "add rcx, 0x38",
            "call snprintf",
            "mov rcx, qword [r12 + 0x50]",
            "lea rdi, [r14 + 0x44]",
            "xor eax, eax",
            "mov rdx, 0",
            "mov esi, 0x40",
            "add rcx, 0x78",
            "call snprintf",
            "mov rax, qword [r12 + 0x50]",
            "test byte [rax + 0x21], 0x10",
            "je 0x80017d6",
            "or dword [rbp - 0x28], 1",
            "mov r12d, dword [rbx + 0x88]",
            "test r12d, r12d",
            "jne 0x8001a08",
            "mov eax, dword [rbx + 0xb4]",
            "lea rdi, [rbx + 0x10]",
            "mov word [rbp - 0x2c], ax",
            "call mutex_unlock",
            "mov edx, 0x10c",
            "mov rsi, r14",
            "mov rdi, r13",
            "call _copy_to_user",
            "mov rbx, rax",
            "jmp 0x80016d0",
            "xor edi, edi",
            "call get_unused_fd_flags",
            "test eax, eax",
            "mov r14d, eax",
            "js 0x8001835",
            "lock inc qword [rbx + 0x38]",
            "mov rsi, rbx",
            "mov edi, eax",
            "call fd_install",
            "mov eax, r14d",
            "mov rcx, r13",
            "call __put_user_4",
            "test eax, eax",
            "mov r12d, eax",
            "jne 0x8001c18",
            "xor ebx, ebx",
            "jmp 0x80016d0",
            "lea rdi, [rbp - 0x130]",
            "mov rsi, r12",
            "call kcaop_from_user",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "lea rsi, [rbp - 0x130]",
            "mov rdi, r12",
            "call crypto_auth_run",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "lea rdi, [rbp - 0x130]",
            "mov rdx, r13",
            "mov rsi, r12",
            "call kcaop_to_user",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "lea r14, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rsi, r13",
            "mov rdi, r14",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x8001b48",
            "mov rsi, r12",
            "mov rdi, r14",
            "call sym.fill_kcop_from_cop",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov rsi, r14",
            "mov rdi, r12",
            "call crypto_run",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov rdi, r14",
            "call sym.fill_cop_from_kcop.isra.4",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov edx, 0x30",
            "mov rsi, r14",
            "mov rdi, r13",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x800184b",
            "cmp dword [0x0800192f], 0",
            "mov rbx, 0xfffffffffffffff2",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2c7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "lea rdi, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rsi, r13",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80019d2",
            "lea rsi, [rbp - 0x130]",
            "mov rdi, r12",
            "call sym.crypto_create_session",
            "test eax, eax",
            "jne 0x800189e",
            "lea rsi, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rdi, r13",
            "call _copy_to_user",
            "test eax, eax",
            "je 0x800184b",
            "mov esi, dword [rbp - 0x108]",
            "mov rdi, r12",
            "call sym.crypto_finish_session",
            "mov rbx, 0xfffffffffffffff2",
            "jmp 0x80016d0",
            "xor eax, eax",
            "mov rcx, rdx",
            "call __put_user_4",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "mov r12, qword [rbx + 0x50]",
            "jmp 0x8001787",
            "mov r12, qword [rbx + 0x98]",
            "lea rdi, [r14 + 0x84]",
            "mov rdx, 0",
            "mov esi, 0x40",
            "xor eax, eax",
            "mov rcx, qword [r12 + 0x98]",
            "add rcx, 0x38",
            "call snprintf",
            "mov rcx, qword [r12 + 0x98]",
            "lea rdi, [r14 + 0xc4]",
            "xor eax, eax",
            "mov rdx, 0",
            "mov esi, 0x40",
            "add rcx, 0x78",
            "call snprintf",
            "mov rax, qword [r12 + 0x98]",
            "test byte [rax + 0x21], 0x10",
            "je 0x80017e6",
            "or dword [rbp - 0x28], 1",
            "jmp 0x80017e6",
            "ud2",
            "cmp dword [0x08001a7f], 0",
            "jle 0x80016bf",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbp - 0x130]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2f8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016bf",
            "cmp dword [0x08001ac9], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2c2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001b0c], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x35f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "mov rbx, 0xfffffffffffffff2",
            "cmp dword [0x08001b56], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x359",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001b99], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x36c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001bdc], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x366",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "mov edi, r14d",
            "movsxd rbx, r12d",
            "call sys_close",
            "jmp 0x80016d0"
        ]
    },
    "unk.0x8001881": {
        "function_address": "0x08001881",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x130",
            "mov qword [rbp - 0x20], rbx",
            "mov qword [rbp - 0x18], r12",
            "mov rbx, rdi",
            "mov qword [rbp - 0x10], r13",
            "mov qword [rbp - 8], r14",
            "mov r12, qword [rdi + 0xd0]",
            "test r12, r12",
            "je cryptodev_verbosity",
            "cmp esi, 0xc0306366",
            "mov r13, rdx",
            "je 0x8001978",
            "jbe 0x80016e8",
            "cmp esi, 0xc048636d",
            "je 0x8001858",
            "cmp esi, 0xc10c636b",
            "je 0x8001730",
            "cmp esi, 0xc0306368",
            "je 0x80018b0",
            "mov rbx, 0xffffffffffffffea",
            "nop word cs:[rax + rax]",
            "mov rax, rbx",
            "mov r12, qword [rbp - 0x18]",
            "mov rbx, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x10]",
            "mov r14, qword [rbp - 8]",
            "leave",
            "ret",
            "cmp esi, 0x8004636a",
            "je 0x80019e0",
            "cmp esi, 0xc0046365",
            "je get_unused_fd_flags",
            "cmp esi, 0x40046367",
            "jne 0x80016bf",
            "mov rax, rdx",
            "call __get_user_4",
            "test eax, eax",
            "jne 0x800189e",
            "mov esi, edx",
            "mov rdi, r12",
            "call sym.crypto_finish_session",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "lea r14, [rbp - 0x130]",
            "mov edx, 0x10c",
            "mov rsi, r13",
            "mov rdi, r14",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80019d2",
            "mov esi, dword [rbp - 0x130]",
            "mov rdi, r12",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov rbx, rax",
            "je cryptodev_verbosity",
            "mov dword [rbp - 0x28], 0",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je 0x80017d6",
            "mov eax, dword [rbx + 0x40]",
            "test eax, eax",
            "je 0x80019f8",
            "mov r12, qword [rbx + 0x60]",
            "mov rcx, qword [r12 + 0x50]",
            "lea rdi, [r14 + 4]",
            "mov rdx, 0",
            "mov esi, 0x40",
            "xor eax, eax",
            "add rcx, 0x38",
            "call snprintf",
            "mov rcx, qword [r12 + 0x50]",
            "lea rdi, [r14 + 0x44]",
            "xor eax, eax",
            "mov rdx, 0",
            "mov esi, 0x40",
            "add rcx, 0x78",
            "call snprintf",
            "mov rax, qword [r12 + 0x50]",
            "test byte [rax + 0x21], 0x10",
            "je 0x80017d6",
            "or dword [rbp - 0x28], 1",
            "mov r12d, dword [rbx + 0x88]",
            "test r12d, r12d",
            "jne 0x8001a08",
            "mov eax, dword [rbx + 0xb4]",
            "lea rdi, [rbx + 0x10]",
            "mov word [rbp - 0x2c], ax",
            "call mutex_unlock",
            "mov edx, 0x10c",
            "mov rsi, r14",
            "mov rdi, r13",
            "call _copy_to_user",
            "mov rbx, rax",
            "jmp 0x80016d0",
            "xor edi, edi",
            "call get_unused_fd_flags",
            "test eax, eax",
            "mov r14d, eax",
            "js 0x8001835",
            "lock inc qword [rbx + 0x38]",
            "mov rsi, rbx",
            "mov edi, eax",
            "call fd_install",
            "mov eax, r14d",
            "mov rcx, r13",
            "call __put_user_4",
            "test eax, eax",
            "mov r12d, eax",
            "jne 0x8001c18",
            "xor ebx, ebx",
            "jmp 0x80016d0",
            "lea rdi, [rbp - 0x130]",
            "mov rsi, r12",
            "call kcaop_from_user",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "lea rsi, [rbp - 0x130]",
            "mov rdi, r12",
            "call crypto_auth_run",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "lea rdi, [rbp - 0x130]",
            "mov rdx, r13",
            "mov rsi, r12",
            "call kcaop_to_user",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "lea r14, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rsi, r13",
            "mov rdi, r14",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x8001b48",
            "mov rsi, r12",
            "mov rdi, r14",
            "call sym.fill_kcop_from_cop",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov rsi, r14",
            "mov rdi, r12",
            "call crypto_run",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov rdi, r14",
            "call sym.fill_cop_from_kcop.isra.4",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov edx, 0x30",
            "mov rsi, r14",
            "mov rdi, r13",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x800184b",
            "cmp dword [0x0800192f], 0",
            "mov rbx, 0xfffffffffffffff2",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2c7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "lea rdi, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rsi, r13",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80019d2",
            "lea rsi, [rbp - 0x130]",
            "mov rdi, r12",
            "call sym.crypto_create_session",
            "test eax, eax",
            "jne 0x800189e",
            "lea rsi, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rdi, r13",
            "call _copy_to_user",
            "test eax, eax",
            "je 0x800184b",
            "mov esi, dword [rbp - 0x108]",
            "mov rdi, r12",
            "call sym.crypto_finish_session",
            "mov rbx, 0xfffffffffffffff2",
            "jmp 0x80016d0",
            "xor eax, eax",
            "mov rcx, rdx",
            "call __put_user_4",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "mov r12, qword [rbx + 0x50]",
            "jmp 0x8001787",
            "mov r12, qword [rbx + 0x98]",
            "lea rdi, [r14 + 0x84]",
            "mov rdx, 0",
            "mov esi, 0x40",
            "xor eax, eax",
            "mov rcx, qword [r12 + 0x98]",
            "add rcx, 0x38",
            "call snprintf",
            "mov rcx, qword [r12 + 0x98]",
            "lea rdi, [r14 + 0xc4]",
            "xor eax, eax",
            "mov rdx, 0",
            "mov esi, 0x40",
            "add rcx, 0x78",
            "call snprintf",
            "mov rax, qword [r12 + 0x98]",
            "test byte [rax + 0x21], 0x10",
            "je 0x80017e6",
            "or dword [rbp - 0x28], 1",
            "jmp 0x80017e6",
            "ud2",
            "cmp dword [0x08001a7f], 0",
            "jle 0x80016bf",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbp - 0x130]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2f8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016bf",
            "cmp dword [0x08001ac9], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2c2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001b0c], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x35f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "mov rbx, 0xfffffffffffffff2",
            "cmp dword [0x08001b56], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x359",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001b99], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x36c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001bdc], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x366",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "mov edi, r14d",
            "movsxd rbx, r12d",
            "call sys_close",
            "jmp 0x80016d0"
        ]
    },
    "unk.0x800189e": {
        "function_address": "0x0800189e",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x130",
            "mov qword [rbp - 0x20], rbx",
            "mov qword [rbp - 0x18], r12",
            "mov rbx, rdi",
            "mov qword [rbp - 0x10], r13",
            "mov qword [rbp - 8], r14",
            "mov r12, qword [rdi + 0xd0]",
            "test r12, r12",
            "je cryptodev_verbosity",
            "cmp esi, 0xc0306366",
            "mov r13, rdx",
            "je 0x8001978",
            "jbe 0x80016e8",
            "cmp esi, 0xc048636d",
            "je 0x8001858",
            "cmp esi, 0xc10c636b",
            "je 0x8001730",
            "cmp esi, 0xc0306368",
            "je 0x80018b0",
            "mov rbx, 0xffffffffffffffea",
            "nop word cs:[rax + rax]",
            "mov rax, rbx",
            "mov r12, qword [rbp - 0x18]",
            "mov rbx, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x10]",
            "mov r14, qword [rbp - 8]",
            "leave",
            "ret",
            "cmp esi, 0x8004636a",
            "je 0x80019e0",
            "cmp esi, 0xc0046365",
            "je get_unused_fd_flags",
            "cmp esi, 0x40046367",
            "jne 0x80016bf",
            "mov rax, rdx",
            "call __get_user_4",
            "test eax, eax",
            "jne 0x800189e",
            "mov esi, edx",
            "mov rdi, r12",
            "call sym.crypto_finish_session",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "lea r14, [rbp - 0x130]",
            "mov edx, 0x10c",
            "mov rsi, r13",
            "mov rdi, r14",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80019d2",
            "mov esi, dword [rbp - 0x130]",
            "mov rdi, r12",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov rbx, rax",
            "je cryptodev_verbosity",
            "mov dword [rbp - 0x28], 0",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je 0x80017d6",
            "mov eax, dword [rbx + 0x40]",
            "test eax, eax",
            "je 0x80019f8",
            "mov r12, qword [rbx + 0x60]",
            "mov rcx, qword [r12 + 0x50]",
            "lea rdi, [r14 + 4]",
            "mov rdx, 0",
            "mov esi, 0x40",
            "xor eax, eax",
            "add rcx, 0x38",
            "call snprintf",
            "mov rcx, qword [r12 + 0x50]",
            "lea rdi, [r14 + 0x44]",
            "xor eax, eax",
            "mov rdx, 0",
            "mov esi, 0x40",
            "add rcx, 0x78",
            "call snprintf",
            "mov rax, qword [r12 + 0x50]",
            "test byte [rax + 0x21], 0x10",
            "je 0x80017d6",
            "or dword [rbp - 0x28], 1",
            "mov r12d, dword [rbx + 0x88]",
            "test r12d, r12d",
            "jne 0x8001a08",
            "mov eax, dword [rbx + 0xb4]",
            "lea rdi, [rbx + 0x10]",
            "mov word [rbp - 0x2c], ax",
            "call mutex_unlock",
            "mov edx, 0x10c",
            "mov rsi, r14",
            "mov rdi, r13",
            "call _copy_to_user",
            "mov rbx, rax",
            "jmp 0x80016d0",
            "xor edi, edi",
            "call get_unused_fd_flags",
            "test eax, eax",
            "mov r14d, eax",
            "js 0x8001835",
            "lock inc qword [rbx + 0x38]",
            "mov rsi, rbx",
            "mov edi, eax",
            "call fd_install",
            "mov eax, r14d",
            "mov rcx, r13",
            "call __put_user_4",
            "test eax, eax",
            "mov r12d, eax",
            "jne 0x8001c18",
            "xor ebx, ebx",
            "jmp 0x80016d0",
            "lea rdi, [rbp - 0x130]",
            "mov rsi, r12",
            "call kcaop_from_user",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "lea rsi, [rbp - 0x130]",
            "mov rdi, r12",
            "call crypto_auth_run",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "lea rdi, [rbp - 0x130]",
            "mov rdx, r13",
            "mov rsi, r12",
            "call kcaop_to_user",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "lea r14, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rsi, r13",
            "mov rdi, r14",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x8001b48",
            "mov rsi, r12",
            "mov rdi, r14",
            "call sym.fill_kcop_from_cop",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov rsi, r14",
            "mov rdi, r12",
            "call crypto_run",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov rdi, r14",
            "call sym.fill_cop_from_kcop.isra.4",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov edx, 0x30",
            "mov rsi, r14",
            "mov rdi, r13",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x800184b",
            "cmp dword [0x0800192f], 0",
            "mov rbx, 0xfffffffffffffff2",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2c7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "lea rdi, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rsi, r13",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80019d2",
            "lea rsi, [rbp - 0x130]",
            "mov rdi, r12",
            "call sym.crypto_create_session",
            "test eax, eax",
            "jne 0x800189e",
            "lea rsi, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rdi, r13",
            "call _copy_to_user",
            "test eax, eax",
            "je 0x800184b",
            "mov esi, dword [rbp - 0x108]",
            "mov rdi, r12",
            "call sym.crypto_finish_session",
            "mov rbx, 0xfffffffffffffff2",
            "jmp 0x80016d0",
            "xor eax, eax",
            "mov rcx, rdx",
            "call __put_user_4",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "mov r12, qword [rbx + 0x50]",
            "jmp 0x8001787",
            "mov r12, qword [rbx + 0x98]",
            "lea rdi, [r14 + 0x84]",
            "mov rdx, 0",
            "mov esi, 0x40",
            "xor eax, eax",
            "mov rcx, qword [r12 + 0x98]",
            "add rcx, 0x38",
            "call snprintf",
            "mov rcx, qword [r12 + 0x98]",
            "lea rdi, [r14 + 0xc4]",
            "xor eax, eax",
            "mov rdx, 0",
            "mov esi, 0x40",
            "add rcx, 0x78",
            "call snprintf",
            "mov rax, qword [r12 + 0x98]",
            "test byte [rax + 0x21], 0x10",
            "je 0x80017e6",
            "or dword [rbp - 0x28], 1",
            "jmp 0x80017e6",
            "ud2",
            "cmp dword [0x08001a7f], 0",
            "jle 0x80016bf",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbp - 0x130]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2f8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016bf",
            "cmp dword [0x08001ac9], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2c2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001b0c], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x35f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "mov rbx, 0xfffffffffffffff2",
            "cmp dword [0x08001b56], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x359",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001b99], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x36c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001bdc], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x366",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "mov edi, r14d",
            "movsxd rbx, r12d",
            "call sys_close",
            "jmp 0x80016d0"
        ]
    },
    "unk.0x80018c7": {
        "function_address": "0x080018c7",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x130",
            "mov qword [rbp - 0x20], rbx",
            "mov qword [rbp - 0x18], r12",
            "mov rbx, rdi",
            "mov qword [rbp - 0x10], r13",
            "mov qword [rbp - 8], r14",
            "mov r12, qword [rdi + 0xd0]",
            "test r12, r12",
            "je cryptodev_verbosity",
            "cmp esi, 0xc0306366",
            "mov r13, rdx",
            "je 0x8001978",
            "jbe 0x80016e8",
            "cmp esi, 0xc048636d",
            "je 0x8001858",
            "cmp esi, 0xc10c636b",
            "je 0x8001730",
            "cmp esi, 0xc0306368",
            "je 0x80018b0",
            "mov rbx, 0xffffffffffffffea",
            "nop word cs:[rax + rax]",
            "mov rax, rbx",
            "mov r12, qword [rbp - 0x18]",
            "mov rbx, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x10]",
            "mov r14, qword [rbp - 8]",
            "leave",
            "ret",
            "cmp esi, 0x8004636a",
            "je 0x80019e0",
            "cmp esi, 0xc0046365",
            "je get_unused_fd_flags",
            "cmp esi, 0x40046367",
            "jne 0x80016bf",
            "mov rax, rdx",
            "call __get_user_4",
            "test eax, eax",
            "jne 0x800189e",
            "mov esi, edx",
            "mov rdi, r12",
            "call sym.crypto_finish_session",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "lea r14, [rbp - 0x130]",
            "mov edx, 0x10c",
            "mov rsi, r13",
            "mov rdi, r14",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80019d2",
            "mov esi, dword [rbp - 0x130]",
            "mov rdi, r12",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov rbx, rax",
            "je cryptodev_verbosity",
            "mov dword [rbp - 0x28], 0",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je 0x80017d6",
            "mov eax, dword [rbx + 0x40]",
            "test eax, eax",
            "je 0x80019f8",
            "mov r12, qword [rbx + 0x60]",
            "mov rcx, qword [r12 + 0x50]",
            "lea rdi, [r14 + 4]",
            "mov rdx, 0",
            "mov esi, 0x40",
            "xor eax, eax",
            "add rcx, 0x38",
            "call snprintf",
            "mov rcx, qword [r12 + 0x50]",
            "lea rdi, [r14 + 0x44]",
            "xor eax, eax",
            "mov rdx, 0",
            "mov esi, 0x40",
            "add rcx, 0x78",
            "call snprintf",
            "mov rax, qword [r12 + 0x50]",
            "test byte [rax + 0x21], 0x10",
            "je 0x80017d6",
            "or dword [rbp - 0x28], 1",
            "mov r12d, dword [rbx + 0x88]",
            "test r12d, r12d",
            "jne 0x8001a08",
            "mov eax, dword [rbx + 0xb4]",
            "lea rdi, [rbx + 0x10]",
            "mov word [rbp - 0x2c], ax",
            "call mutex_unlock",
            "mov edx, 0x10c",
            "mov rsi, r14",
            "mov rdi, r13",
            "call _copy_to_user",
            "mov rbx, rax",
            "jmp 0x80016d0",
            "xor edi, edi",
            "call get_unused_fd_flags",
            "test eax, eax",
            "mov r14d, eax",
            "js 0x8001835",
            "lock inc qword [rbx + 0x38]",
            "mov rsi, rbx",
            "mov edi, eax",
            "call fd_install",
            "mov eax, r14d",
            "mov rcx, r13",
            "call __put_user_4",
            "test eax, eax",
            "mov r12d, eax",
            "jne 0x8001c18",
            "xor ebx, ebx",
            "jmp 0x80016d0",
            "lea rdi, [rbp - 0x130]",
            "mov rsi, r12",
            "call kcaop_from_user",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "lea rsi, [rbp - 0x130]",
            "mov rdi, r12",
            "call crypto_auth_run",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "lea rdi, [rbp - 0x130]",
            "mov rdx, r13",
            "mov rsi, r12",
            "call kcaop_to_user",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "lea r14, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rsi, r13",
            "mov rdi, r14",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x8001b48",
            "mov rsi, r12",
            "mov rdi, r14",
            "call sym.fill_kcop_from_cop",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov rsi, r14",
            "mov rdi, r12",
            "call crypto_run",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov rdi, r14",
            "call sym.fill_cop_from_kcop.isra.4",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov edx, 0x30",
            "mov rsi, r14",
            "mov rdi, r13",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x800184b",
            "cmp dword [0x0800192f], 0",
            "mov rbx, 0xfffffffffffffff2",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2c7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "lea rdi, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rsi, r13",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80019d2",
            "lea rsi, [rbp - 0x130]",
            "mov rdi, r12",
            "call sym.crypto_create_session",
            "test eax, eax",
            "jne 0x800189e",
            "lea rsi, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rdi, r13",
            "call _copy_to_user",
            "test eax, eax",
            "je 0x800184b",
            "mov esi, dword [rbp - 0x108]",
            "mov rdi, r12",
            "call sym.crypto_finish_session",
            "mov rbx, 0xfffffffffffffff2",
            "jmp 0x80016d0",
            "xor eax, eax",
            "mov rcx, rdx",
            "call __put_user_4",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "mov r12, qword [rbx + 0x50]",
            "jmp 0x8001787",
            "mov r12, qword [rbx + 0x98]",
            "lea rdi, [r14 + 0x84]",
            "mov rdx, 0",
            "mov esi, 0x40",
            "xor eax, eax",
            "mov rcx, qword [r12 + 0x98]",
            "add rcx, 0x38",
            "call snprintf",
            "mov rcx, qword [r12 + 0x98]",
            "lea rdi, [r14 + 0xc4]",
            "xor eax, eax",
            "mov rdx, 0",
            "mov esi, 0x40",
            "add rcx, 0x78",
            "call snprintf",
            "mov rax, qword [r12 + 0x98]",
            "test byte [rax + 0x21], 0x10",
            "je 0x80017e6",
            "or dword [rbp - 0x28], 1",
            "jmp 0x80017e6",
            "ud2",
            "cmp dword [0x08001a7f], 0",
            "jle 0x80016bf",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbp - 0x130]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2f8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016bf",
            "cmp dword [0x08001ac9], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2c2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001b0c], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x35f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "mov rbx, 0xfffffffffffffff2",
            "cmp dword [0x08001b56], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x359",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001b99], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x36c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001bdc], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x366",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "mov edi, r14d",
            "movsxd rbx, r12d",
            "call sys_close",
            "jmp 0x80016d0"
        ]
    },
    "unk.0x80018f1": {
        "function_address": "0x080018f1",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x130",
            "mov qword [rbp - 0x20], rbx",
            "mov qword [rbp - 0x18], r12",
            "mov rbx, rdi",
            "mov qword [rbp - 0x10], r13",
            "mov qword [rbp - 8], r14",
            "mov r12, qword [rdi + 0xd0]",
            "test r12, r12",
            "je cryptodev_verbosity",
            "cmp esi, 0xc0306366",
            "mov r13, rdx",
            "je 0x8001978",
            "jbe 0x80016e8",
            "cmp esi, 0xc048636d",
            "je 0x8001858",
            "cmp esi, 0xc10c636b",
            "je 0x8001730",
            "cmp esi, 0xc0306368",
            "je 0x80018b0",
            "mov rbx, 0xffffffffffffffea",
            "nop word cs:[rax + rax]",
            "mov rax, rbx",
            "mov r12, qword [rbp - 0x18]",
            "mov rbx, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x10]",
            "mov r14, qword [rbp - 8]",
            "leave",
            "ret",
            "cmp esi, 0x8004636a",
            "je 0x80019e0",
            "cmp esi, 0xc0046365",
            "je get_unused_fd_flags",
            "cmp esi, 0x40046367",
            "jne 0x80016bf",
            "mov rax, rdx",
            "call __get_user_4",
            "test eax, eax",
            "jne 0x800189e",
            "mov esi, edx",
            "mov rdi, r12",
            "call sym.crypto_finish_session",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "lea r14, [rbp - 0x130]",
            "mov edx, 0x10c",
            "mov rsi, r13",
            "mov rdi, r14",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80019d2",
            "mov esi, dword [rbp - 0x130]",
            "mov rdi, r12",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov rbx, rax",
            "je cryptodev_verbosity",
            "mov dword [rbp - 0x28], 0",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je 0x80017d6",
            "mov eax, dword [rbx + 0x40]",
            "test eax, eax",
            "je 0x80019f8",
            "mov r12, qword [rbx + 0x60]",
            "mov rcx, qword [r12 + 0x50]",
            "lea rdi, [r14 + 4]",
            "mov rdx, 0",
            "mov esi, 0x40",
            "xor eax, eax",
            "add rcx, 0x38",
            "call snprintf",
            "mov rcx, qword [r12 + 0x50]",
            "lea rdi, [r14 + 0x44]",
            "xor eax, eax",
            "mov rdx, 0",
            "mov esi, 0x40",
            "add rcx, 0x78",
            "call snprintf",
            "mov rax, qword [r12 + 0x50]",
            "test byte [rax + 0x21], 0x10",
            "je 0x80017d6",
            "or dword [rbp - 0x28], 1",
            "mov r12d, dword [rbx + 0x88]",
            "test r12d, r12d",
            "jne 0x8001a08",
            "mov eax, dword [rbx + 0xb4]",
            "lea rdi, [rbx + 0x10]",
            "mov word [rbp - 0x2c], ax",
            "call mutex_unlock",
            "mov edx, 0x10c",
            "mov rsi, r14",
            "mov rdi, r13",
            "call _copy_to_user",
            "mov rbx, rax",
            "jmp 0x80016d0",
            "xor edi, edi",
            "call get_unused_fd_flags",
            "test eax, eax",
            "mov r14d, eax",
            "js 0x8001835",
            "lock inc qword [rbx + 0x38]",
            "mov rsi, rbx",
            "mov edi, eax",
            "call fd_install",
            "mov eax, r14d",
            "mov rcx, r13",
            "call __put_user_4",
            "test eax, eax",
            "mov r12d, eax",
            "jne 0x8001c18",
            "xor ebx, ebx",
            "jmp 0x80016d0",
            "lea rdi, [rbp - 0x130]",
            "mov rsi, r12",
            "call kcaop_from_user",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "lea rsi, [rbp - 0x130]",
            "mov rdi, r12",
            "call crypto_auth_run",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "lea rdi, [rbp - 0x130]",
            "mov rdx, r13",
            "mov rsi, r12",
            "call kcaop_to_user",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "lea r14, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rsi, r13",
            "mov rdi, r14",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x8001b48",
            "mov rsi, r12",
            "mov rdi, r14",
            "call sym.fill_kcop_from_cop",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov rsi, r14",
            "mov rdi, r12",
            "call crypto_run",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov rdi, r14",
            "call sym.fill_cop_from_kcop.isra.4",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov edx, 0x30",
            "mov rsi, r14",
            "mov rdi, r13",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x800184b",
            "cmp dword [0x0800192f], 0",
            "mov rbx, 0xfffffffffffffff2",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2c7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "lea rdi, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rsi, r13",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80019d2",
            "lea rsi, [rbp - 0x130]",
            "mov rdi, r12",
            "call sym.crypto_create_session",
            "test eax, eax",
            "jne 0x800189e",
            "lea rsi, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rdi, r13",
            "call _copy_to_user",
            "test eax, eax",
            "je 0x800184b",
            "mov esi, dword [rbp - 0x108]",
            "mov rdi, r12",
            "call sym.crypto_finish_session",
            "mov rbx, 0xfffffffffffffff2",
            "jmp 0x80016d0",
            "xor eax, eax",
            "mov rcx, rdx",
            "call __put_user_4",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "mov r12, qword [rbx + 0x50]",
            "jmp 0x8001787",
            "mov r12, qword [rbx + 0x98]",
            "lea rdi, [r14 + 0x84]",
            "mov rdx, 0",
            "mov esi, 0x40",
            "xor eax, eax",
            "mov rcx, qword [r12 + 0x98]",
            "add rcx, 0x38",
            "call snprintf",
            "mov rcx, qword [r12 + 0x98]",
            "lea rdi, [r14 + 0xc4]",
            "xor eax, eax",
            "mov rdx, 0",
            "mov esi, 0x40",
            "add rcx, 0x78",
            "call snprintf",
            "mov rax, qword [r12 + 0x98]",
            "test byte [rax + 0x21], 0x10",
            "je 0x80017e6",
            "or dword [rbp - 0x28], 1",
            "jmp 0x80017e6",
            "ud2",
            "cmp dword [0x08001a7f], 0",
            "jle 0x80016bf",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbp - 0x130]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2f8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016bf",
            "cmp dword [0x08001ac9], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2c2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001b0c], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x35f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "mov rbx, 0xfffffffffffffff2",
            "cmp dword [0x08001b56], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x359",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001b99], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x36c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001bdc], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x366",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "mov edi, r14d",
            "movsxd rbx, r12d",
            "call sys_close",
            "jmp 0x80016d0"
        ]
    },
    "unk.0x800191f": {
        "function_address": "0x0800191f",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x130",
            "mov qword [rbp - 0x20], rbx",
            "mov qword [rbp - 0x18], r12",
            "mov rbx, rdi",
            "mov qword [rbp - 0x10], r13",
            "mov qword [rbp - 8], r14",
            "mov r12, qword [rdi + 0xd0]",
            "test r12, r12",
            "je cryptodev_verbosity",
            "cmp esi, 0xc0306366",
            "mov r13, rdx",
            "je 0x8001978",
            "jbe 0x80016e8",
            "cmp esi, 0xc048636d",
            "je 0x8001858",
            "cmp esi, 0xc10c636b",
            "je 0x8001730",
            "cmp esi, 0xc0306368",
            "je 0x80018b0",
            "mov rbx, 0xffffffffffffffea",
            "nop word cs:[rax + rax]",
            "mov rax, rbx",
            "mov r12, qword [rbp - 0x18]",
            "mov rbx, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x10]",
            "mov r14, qword [rbp - 8]",
            "leave",
            "ret",
            "cmp esi, 0x8004636a",
            "je 0x80019e0",
            "cmp esi, 0xc0046365",
            "je get_unused_fd_flags",
            "cmp esi, 0x40046367",
            "jne 0x80016bf",
            "mov rax, rdx",
            "call __get_user_4",
            "test eax, eax",
            "jne 0x800189e",
            "mov esi, edx",
            "mov rdi, r12",
            "call sym.crypto_finish_session",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "lea r14, [rbp - 0x130]",
            "mov edx, 0x10c",
            "mov rsi, r13",
            "mov rdi, r14",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80019d2",
            "mov esi, dword [rbp - 0x130]",
            "mov rdi, r12",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov rbx, rax",
            "je cryptodev_verbosity",
            "mov dword [rbp - 0x28], 0",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je 0x80017d6",
            "mov eax, dword [rbx + 0x40]",
            "test eax, eax",
            "je 0x80019f8",
            "mov r12, qword [rbx + 0x60]",
            "mov rcx, qword [r12 + 0x50]",
            "lea rdi, [r14 + 4]",
            "mov rdx, 0",
            "mov esi, 0x40",
            "xor eax, eax",
            "add rcx, 0x38",
            "call snprintf",
            "mov rcx, qword [r12 + 0x50]",
            "lea rdi, [r14 + 0x44]",
            "xor eax, eax",
            "mov rdx, 0",
            "mov esi, 0x40",
            "add rcx, 0x78",
            "call snprintf",
            "mov rax, qword [r12 + 0x50]",
            "test byte [rax + 0x21], 0x10",
            "je 0x80017d6",
            "or dword [rbp - 0x28], 1",
            "mov r12d, dword [rbx + 0x88]",
            "test r12d, r12d",
            "jne 0x8001a08",
            "mov eax, dword [rbx + 0xb4]",
            "lea rdi, [rbx + 0x10]",
            "mov word [rbp - 0x2c], ax",
            "call mutex_unlock",
            "mov edx, 0x10c",
            "mov rsi, r14",
            "mov rdi, r13",
            "call _copy_to_user",
            "mov rbx, rax",
            "jmp 0x80016d0",
            "xor edi, edi",
            "call get_unused_fd_flags",
            "test eax, eax",
            "mov r14d, eax",
            "js 0x8001835",
            "lock inc qword [rbx + 0x38]",
            "mov rsi, rbx",
            "mov edi, eax",
            "call fd_install",
            "mov eax, r14d",
            "mov rcx, r13",
            "call __put_user_4",
            "test eax, eax",
            "mov r12d, eax",
            "jne 0x8001c18",
            "xor ebx, ebx",
            "jmp 0x80016d0",
            "lea rdi, [rbp - 0x130]",
            "mov rsi, r12",
            "call kcaop_from_user",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "lea rsi, [rbp - 0x130]",
            "mov rdi, r12",
            "call crypto_auth_run",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "lea rdi, [rbp - 0x130]",
            "mov rdx, r13",
            "mov rsi, r12",
            "call kcaop_to_user",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "lea r14, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rsi, r13",
            "mov rdi, r14",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x8001b48",
            "mov rsi, r12",
            "mov rdi, r14",
            "call sym.fill_kcop_from_cop",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov rsi, r14",
            "mov rdi, r12",
            "call crypto_run",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov rdi, r14",
            "call sym.fill_cop_from_kcop.isra.4",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov edx, 0x30",
            "mov rsi, r14",
            "mov rdi, r13",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x800184b",
            "cmp dword [0x0800192f], 0",
            "mov rbx, 0xfffffffffffffff2",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2c7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "lea rdi, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rsi, r13",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80019d2",
            "lea rsi, [rbp - 0x130]",
            "mov rdi, r12",
            "call sym.crypto_create_session",
            "test eax, eax",
            "jne 0x800189e",
            "lea rsi, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rdi, r13",
            "call _copy_to_user",
            "test eax, eax",
            "je 0x800184b",
            "mov esi, dword [rbp - 0x108]",
            "mov rdi, r12",
            "call sym.crypto_finish_session",
            "mov rbx, 0xfffffffffffffff2",
            "jmp 0x80016d0",
            "xor eax, eax",
            "mov rcx, rdx",
            "call __put_user_4",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "mov r12, qword [rbx + 0x50]",
            "jmp 0x8001787",
            "mov r12, qword [rbx + 0x98]",
            "lea rdi, [r14 + 0x84]",
            "mov rdx, 0",
            "mov esi, 0x40",
            "xor eax, eax",
            "mov rcx, qword [r12 + 0x98]",
            "add rcx, 0x38",
            "call snprintf",
            "mov rcx, qword [r12 + 0x98]",
            "lea rdi, [r14 + 0xc4]",
            "xor eax, eax",
            "mov rdx, 0",
            "mov esi, 0x40",
            "add rcx, 0x78",
            "call snprintf",
            "mov rax, qword [r12 + 0x98]",
            "test byte [rax + 0x21], 0x10",
            "je 0x80017e6",
            "or dword [rbp - 0x28], 1",
            "jmp 0x80017e6",
            "ud2",
            "cmp dword [0x08001a7f], 0",
            "jle 0x80016bf",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbp - 0x130]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2f8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016bf",
            "cmp dword [0x08001ac9], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2c2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001b0c], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x35f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "mov rbx, 0xfffffffffffffff2",
            "cmp dword [0x08001b56], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x359",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001b99], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x36c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001bdc], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x366",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "mov edi, r14d",
            "movsxd rbx, r12d",
            "call sys_close",
            "jmp 0x80016d0"
        ]
    },
    "unk.0x800196d": {
        "function_address": "0x0800196d",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x130",
            "mov qword [rbp - 0x20], rbx",
            "mov qword [rbp - 0x18], r12",
            "mov rbx, rdi",
            "mov qword [rbp - 0x10], r13",
            "mov qword [rbp - 8], r14",
            "mov r12, qword [rdi + 0xd0]",
            "test r12, r12",
            "je cryptodev_verbosity",
            "cmp esi, 0xc0306366",
            "mov r13, rdx",
            "je 0x8001978",
            "jbe 0x80016e8",
            "cmp esi, 0xc048636d",
            "je 0x8001858",
            "cmp esi, 0xc10c636b",
            "je 0x8001730",
            "cmp esi, 0xc0306368",
            "je 0x80018b0",
            "mov rbx, 0xffffffffffffffea",
            "nop word cs:[rax + rax]",
            "mov rax, rbx",
            "mov r12, qword [rbp - 0x18]",
            "mov rbx, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x10]",
            "mov r14, qword [rbp - 8]",
            "leave",
            "ret",
            "cmp esi, 0x8004636a",
            "je 0x80019e0",
            "cmp esi, 0xc0046365",
            "je get_unused_fd_flags",
            "cmp esi, 0x40046367",
            "jne 0x80016bf",
            "mov rax, rdx",
            "call __get_user_4",
            "test eax, eax",
            "jne 0x800189e",
            "mov esi, edx",
            "mov rdi, r12",
            "call sym.crypto_finish_session",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "lea r14, [rbp - 0x130]",
            "mov edx, 0x10c",
            "mov rsi, r13",
            "mov rdi, r14",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80019d2",
            "mov esi, dword [rbp - 0x130]",
            "mov rdi, r12",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov rbx, rax",
            "je cryptodev_verbosity",
            "mov dword [rbp - 0x28], 0",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je 0x80017d6",
            "mov eax, dword [rbx + 0x40]",
            "test eax, eax",
            "je 0x80019f8",
            "mov r12, qword [rbx + 0x60]",
            "mov rcx, qword [r12 + 0x50]",
            "lea rdi, [r14 + 4]",
            "mov rdx, 0",
            "mov esi, 0x40",
            "xor eax, eax",
            "add rcx, 0x38",
            "call snprintf",
            "mov rcx, qword [r12 + 0x50]",
            "lea rdi, [r14 + 0x44]",
            "xor eax, eax",
            "mov rdx, 0",
            "mov esi, 0x40",
            "add rcx, 0x78",
            "call snprintf",
            "mov rax, qword [r12 + 0x50]",
            "test byte [rax + 0x21], 0x10",
            "je 0x80017d6",
            "or dword [rbp - 0x28], 1",
            "mov r12d, dword [rbx + 0x88]",
            "test r12d, r12d",
            "jne 0x8001a08",
            "mov eax, dword [rbx + 0xb4]",
            "lea rdi, [rbx + 0x10]",
            "mov word [rbp - 0x2c], ax",
            "call mutex_unlock",
            "mov edx, 0x10c",
            "mov rsi, r14",
            "mov rdi, r13",
            "call _copy_to_user",
            "mov rbx, rax",
            "jmp 0x80016d0",
            "xor edi, edi",
            "call get_unused_fd_flags",
            "test eax, eax",
            "mov r14d, eax",
            "js 0x8001835",
            "lock inc qword [rbx + 0x38]",
            "mov rsi, rbx",
            "mov edi, eax",
            "call fd_install",
            "mov eax, r14d",
            "mov rcx, r13",
            "call __put_user_4",
            "test eax, eax",
            "mov r12d, eax",
            "jne 0x8001c18",
            "xor ebx, ebx",
            "jmp 0x80016d0",
            "lea rdi, [rbp - 0x130]",
            "mov rsi, r12",
            "call kcaop_from_user",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "lea rsi, [rbp - 0x130]",
            "mov rdi, r12",
            "call crypto_auth_run",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "lea rdi, [rbp - 0x130]",
            "mov rdx, r13",
            "mov rsi, r12",
            "call kcaop_to_user",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "lea r14, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rsi, r13",
            "mov rdi, r14",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x8001b48",
            "mov rsi, r12",
            "mov rdi, r14",
            "call sym.fill_kcop_from_cop",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov rsi, r14",
            "mov rdi, r12",
            "call crypto_run",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov rdi, r14",
            "call sym.fill_cop_from_kcop.isra.4",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov edx, 0x30",
            "mov rsi, r14",
            "mov rdi, r13",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x800184b",
            "cmp dword [0x0800192f], 0",
            "mov rbx, 0xfffffffffffffff2",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2c7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "lea rdi, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rsi, r13",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80019d2",
            "lea rsi, [rbp - 0x130]",
            "mov rdi, r12",
            "call sym.crypto_create_session",
            "test eax, eax",
            "jne 0x800189e",
            "lea rsi, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rdi, r13",
            "call _copy_to_user",
            "test eax, eax",
            "je 0x800184b",
            "mov esi, dword [rbp - 0x108]",
            "mov rdi, r12",
            "call sym.crypto_finish_session",
            "mov rbx, 0xfffffffffffffff2",
            "jmp 0x80016d0",
            "xor eax, eax",
            "mov rcx, rdx",
            "call __put_user_4",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "mov r12, qword [rbx + 0x50]",
            "jmp 0x8001787",
            "mov r12, qword [rbx + 0x98]",
            "lea rdi, [r14 + 0x84]",
            "mov rdx, 0",
            "mov esi, 0x40",
            "xor eax, eax",
            "mov rcx, qword [r12 + 0x98]",
            "add rcx, 0x38",
            "call snprintf",
            "mov rcx, qword [r12 + 0x98]",
            "lea rdi, [r14 + 0xc4]",
            "xor eax, eax",
            "mov rdx, 0",
            "mov esi, 0x40",
            "add rcx, 0x78",
            "call snprintf",
            "mov rax, qword [r12 + 0x98]",
            "test byte [rax + 0x21], 0x10",
            "je 0x80017e6",
            "or dword [rbp - 0x28], 1",
            "jmp 0x80017e6",
            "ud2",
            "cmp dword [0x08001a7f], 0",
            "jle 0x80016bf",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbp - 0x130]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2f8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016bf",
            "cmp dword [0x08001ac9], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2c2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001b0c], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x35f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "mov rbx, 0xfffffffffffffff2",
            "cmp dword [0x08001b56], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x359",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001b99], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x36c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001bdc], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x366",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "mov edi, r14d",
            "movsxd rbx, r12d",
            "call sys_close",
            "jmp 0x80016d0"
        ]
    },
    "unk.0x800198c": {
        "function_address": "0x0800198c",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x130",
            "mov qword [rbp - 0x20], rbx",
            "mov qword [rbp - 0x18], r12",
            "mov rbx, rdi",
            "mov qword [rbp - 0x10], r13",
            "mov qword [rbp - 8], r14",
            "mov r12, qword [rdi + 0xd0]",
            "test r12, r12",
            "je cryptodev_verbosity",
            "cmp esi, 0xc0306366",
            "mov r13, rdx",
            "je 0x8001978",
            "jbe 0x80016e8",
            "cmp esi, 0xc048636d",
            "je 0x8001858",
            "cmp esi, 0xc10c636b",
            "je 0x8001730",
            "cmp esi, 0xc0306368",
            "je 0x80018b0",
            "mov rbx, 0xffffffffffffffea",
            "nop word cs:[rax + rax]",
            "mov rax, rbx",
            "mov r12, qword [rbp - 0x18]",
            "mov rbx, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x10]",
            "mov r14, qword [rbp - 8]",
            "leave",
            "ret",
            "cmp esi, 0x8004636a",
            "je 0x80019e0",
            "cmp esi, 0xc0046365",
            "je get_unused_fd_flags",
            "cmp esi, 0x40046367",
            "jne 0x80016bf",
            "mov rax, rdx",
            "call __get_user_4",
            "test eax, eax",
            "jne 0x800189e",
            "mov esi, edx",
            "mov rdi, r12",
            "call sym.crypto_finish_session",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "lea r14, [rbp - 0x130]",
            "mov edx, 0x10c",
            "mov rsi, r13",
            "mov rdi, r14",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80019d2",
            "mov esi, dword [rbp - 0x130]",
            "mov rdi, r12",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov rbx, rax",
            "je cryptodev_verbosity",
            "mov dword [rbp - 0x28], 0",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je 0x80017d6",
            "mov eax, dword [rbx + 0x40]",
            "test eax, eax",
            "je 0x80019f8",
            "mov r12, qword [rbx + 0x60]",
            "mov rcx, qword [r12 + 0x50]",
            "lea rdi, [r14 + 4]",
            "mov rdx, 0",
            "mov esi, 0x40",
            "xor eax, eax",
            "add rcx, 0x38",
            "call snprintf",
            "mov rcx, qword [r12 + 0x50]",
            "lea rdi, [r14 + 0x44]",
            "xor eax, eax",
            "mov rdx, 0",
            "mov esi, 0x40",
            "add rcx, 0x78",
            "call snprintf",
            "mov rax, qword [r12 + 0x50]",
            "test byte [rax + 0x21], 0x10",
            "je 0x80017d6",
            "or dword [rbp - 0x28], 1",
            "mov r12d, dword [rbx + 0x88]",
            "test r12d, r12d",
            "jne 0x8001a08",
            "mov eax, dword [rbx + 0xb4]",
            "lea rdi, [rbx + 0x10]",
            "mov word [rbp - 0x2c], ax",
            "call mutex_unlock",
            "mov edx, 0x10c",
            "mov rsi, r14",
            "mov rdi, r13",
            "call _copy_to_user",
            "mov rbx, rax",
            "jmp 0x80016d0",
            "xor edi, edi",
            "call get_unused_fd_flags",
            "test eax, eax",
            "mov r14d, eax",
            "js 0x8001835",
            "lock inc qword [rbx + 0x38]",
            "mov rsi, rbx",
            "mov edi, eax",
            "call fd_install",
            "mov eax, r14d",
            "mov rcx, r13",
            "call __put_user_4",
            "test eax, eax",
            "mov r12d, eax",
            "jne 0x8001c18",
            "xor ebx, ebx",
            "jmp 0x80016d0",
            "lea rdi, [rbp - 0x130]",
            "mov rsi, r12",
            "call kcaop_from_user",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "lea rsi, [rbp - 0x130]",
            "mov rdi, r12",
            "call crypto_auth_run",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "lea rdi, [rbp - 0x130]",
            "mov rdx, r13",
            "mov rsi, r12",
            "call kcaop_to_user",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "lea r14, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rsi, r13",
            "mov rdi, r14",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x8001b48",
            "mov rsi, r12",
            "mov rdi, r14",
            "call sym.fill_kcop_from_cop",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov rsi, r14",
            "mov rdi, r12",
            "call crypto_run",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov rdi, r14",
            "call sym.fill_cop_from_kcop.isra.4",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov edx, 0x30",
            "mov rsi, r14",
            "mov rdi, r13",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x800184b",
            "cmp dword [0x0800192f], 0",
            "mov rbx, 0xfffffffffffffff2",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2c7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "lea rdi, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rsi, r13",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80019d2",
            "lea rsi, [rbp - 0x130]",
            "mov rdi, r12",
            "call sym.crypto_create_session",
            "test eax, eax",
            "jne 0x800189e",
            "lea rsi, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rdi, r13",
            "call _copy_to_user",
            "test eax, eax",
            "je 0x800184b",
            "mov esi, dword [rbp - 0x108]",
            "mov rdi, r12",
            "call sym.crypto_finish_session",
            "mov rbx, 0xfffffffffffffff2",
            "jmp 0x80016d0",
            "xor eax, eax",
            "mov rcx, rdx",
            "call __put_user_4",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "mov r12, qword [rbx + 0x50]",
            "jmp 0x8001787",
            "mov r12, qword [rbx + 0x98]",
            "lea rdi, [r14 + 0x84]",
            "mov rdx, 0",
            "mov esi, 0x40",
            "xor eax, eax",
            "mov rcx, qword [r12 + 0x98]",
            "add rcx, 0x38",
            "call snprintf",
            "mov rcx, qword [r12 + 0x98]",
            "lea rdi, [r14 + 0xc4]",
            "xor eax, eax",
            "mov rdx, 0",
            "mov esi, 0x40",
            "add rcx, 0x78",
            "call snprintf",
            "mov rax, qword [r12 + 0x98]",
            "test byte [rax + 0x21], 0x10",
            "je 0x80017e6",
            "or dword [rbp - 0x28], 1",
            "jmp 0x80017e6",
            "ud2",
            "cmp dword [0x08001a7f], 0",
            "jle 0x80016bf",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbp - 0x130]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2f8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016bf",
            "cmp dword [0x08001ac9], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2c2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001b0c], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x35f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "mov rbx, 0xfffffffffffffff2",
            "cmp dword [0x08001b56], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x359",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001b99], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x36c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001bdc], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x366",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "mov edi, r14d",
            "movsxd rbx, r12d",
            "call sys_close",
            "jmp 0x80016d0"
        ]
    },
    "unk.0x80019bc": {
        "function_address": "0x080019bc",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x130",
            "mov qword [rbp - 0x20], rbx",
            "mov qword [rbp - 0x18], r12",
            "mov rbx, rdi",
            "mov qword [rbp - 0x10], r13",
            "mov qword [rbp - 8], r14",
            "mov r12, qword [rdi + 0xd0]",
            "test r12, r12",
            "je cryptodev_verbosity",
            "cmp esi, 0xc0306366",
            "mov r13, rdx",
            "je 0x8001978",
            "jbe 0x80016e8",
            "cmp esi, 0xc048636d",
            "je 0x8001858",
            "cmp esi, 0xc10c636b",
            "je 0x8001730",
            "cmp esi, 0xc0306368",
            "je 0x80018b0",
            "mov rbx, 0xffffffffffffffea",
            "nop word cs:[rax + rax]",
            "mov rax, rbx",
            "mov r12, qword [rbp - 0x18]",
            "mov rbx, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x10]",
            "mov r14, qword [rbp - 8]",
            "leave",
            "ret",
            "cmp esi, 0x8004636a",
            "je 0x80019e0",
            "cmp esi, 0xc0046365",
            "je get_unused_fd_flags",
            "cmp esi, 0x40046367",
            "jne 0x80016bf",
            "mov rax, rdx",
            "call __get_user_4",
            "test eax, eax",
            "jne 0x800189e",
            "mov esi, edx",
            "mov rdi, r12",
            "call sym.crypto_finish_session",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "lea r14, [rbp - 0x130]",
            "mov edx, 0x10c",
            "mov rsi, r13",
            "mov rdi, r14",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80019d2",
            "mov esi, dword [rbp - 0x130]",
            "mov rdi, r12",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov rbx, rax",
            "je cryptodev_verbosity",
            "mov dword [rbp - 0x28], 0",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je 0x80017d6",
            "mov eax, dword [rbx + 0x40]",
            "test eax, eax",
            "je 0x80019f8",
            "mov r12, qword [rbx + 0x60]",
            "mov rcx, qword [r12 + 0x50]",
            "lea rdi, [r14 + 4]",
            "mov rdx, 0",
            "mov esi, 0x40",
            "xor eax, eax",
            "add rcx, 0x38",
            "call snprintf",
            "mov rcx, qword [r12 + 0x50]",
            "lea rdi, [r14 + 0x44]",
            "xor eax, eax",
            "mov rdx, 0",
            "mov esi, 0x40",
            "add rcx, 0x78",
            "call snprintf",
            "mov rax, qword [r12 + 0x50]",
            "test byte [rax + 0x21], 0x10",
            "je 0x80017d6",
            "or dword [rbp - 0x28], 1",
            "mov r12d, dword [rbx + 0x88]",
            "test r12d, r12d",
            "jne 0x8001a08",
            "mov eax, dword [rbx + 0xb4]",
            "lea rdi, [rbx + 0x10]",
            "mov word [rbp - 0x2c], ax",
            "call mutex_unlock",
            "mov edx, 0x10c",
            "mov rsi, r14",
            "mov rdi, r13",
            "call _copy_to_user",
            "mov rbx, rax",
            "jmp 0x80016d0",
            "xor edi, edi",
            "call get_unused_fd_flags",
            "test eax, eax",
            "mov r14d, eax",
            "js 0x8001835",
            "lock inc qword [rbx + 0x38]",
            "mov rsi, rbx",
            "mov edi, eax",
            "call fd_install",
            "mov eax, r14d",
            "mov rcx, r13",
            "call __put_user_4",
            "test eax, eax",
            "mov r12d, eax",
            "jne 0x8001c18",
            "xor ebx, ebx",
            "jmp 0x80016d0",
            "lea rdi, [rbp - 0x130]",
            "mov rsi, r12",
            "call kcaop_from_user",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "lea rsi, [rbp - 0x130]",
            "mov rdi, r12",
            "call crypto_auth_run",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "lea rdi, [rbp - 0x130]",
            "mov rdx, r13",
            "mov rsi, r12",
            "call kcaop_to_user",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "lea r14, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rsi, r13",
            "mov rdi, r14",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x8001b48",
            "mov rsi, r12",
            "mov rdi, r14",
            "call sym.fill_kcop_from_cop",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov rsi, r14",
            "mov rdi, r12",
            "call crypto_run",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov rdi, r14",
            "call sym.fill_cop_from_kcop.isra.4",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov edx, 0x30",
            "mov rsi, r14",
            "mov rdi, r13",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x800184b",
            "cmp dword [0x0800192f], 0",
            "mov rbx, 0xfffffffffffffff2",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2c7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "lea rdi, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rsi, r13",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80019d2",
            "lea rsi, [rbp - 0x130]",
            "mov rdi, r12",
            "call sym.crypto_create_session",
            "test eax, eax",
            "jne 0x800189e",
            "lea rsi, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rdi, r13",
            "call _copy_to_user",
            "test eax, eax",
            "je 0x800184b",
            "mov esi, dword [rbp - 0x108]",
            "mov rdi, r12",
            "call sym.crypto_finish_session",
            "mov rbx, 0xfffffffffffffff2",
            "jmp 0x80016d0",
            "xor eax, eax",
            "mov rcx, rdx",
            "call __put_user_4",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "mov r12, qword [rbx + 0x50]",
            "jmp 0x8001787",
            "mov r12, qword [rbx + 0x98]",
            "lea rdi, [r14 + 0x84]",
            "mov rdx, 0",
            "mov esi, 0x40",
            "xor eax, eax",
            "mov rcx, qword [r12 + 0x98]",
            "add rcx, 0x38",
            "call snprintf",
            "mov rcx, qword [r12 + 0x98]",
            "lea rdi, [r14 + 0xc4]",
            "xor eax, eax",
            "mov rdx, 0",
            "mov esi, 0x40",
            "add rcx, 0x78",
            "call snprintf",
            "mov rax, qword [r12 + 0x98]",
            "test byte [rax + 0x21], 0x10",
            "je 0x80017e6",
            "or dword [rbp - 0x28], 1",
            "jmp 0x80017e6",
            "ud2",
            "cmp dword [0x08001a7f], 0",
            "jle 0x80016bf",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbp - 0x130]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2f8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016bf",
            "cmp dword [0x08001ac9], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2c2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001b0c], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x35f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "mov rbx, 0xfffffffffffffff2",
            "cmp dword [0x08001b56], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x359",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001b99], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x36c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001bdc], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x366",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "mov edi, r14d",
            "movsxd rbx, r12d",
            "call sys_close",
            "jmp 0x80016d0"
        ]
    },
    "unk.0x80019ea": {
        "function_address": "0x080019ea",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x130",
            "mov qword [rbp - 0x20], rbx",
            "mov qword [rbp - 0x18], r12",
            "mov rbx, rdi",
            "mov qword [rbp - 0x10], r13",
            "mov qword [rbp - 8], r14",
            "mov r12, qword [rdi + 0xd0]",
            "test r12, r12",
            "je cryptodev_verbosity",
            "cmp esi, 0xc0306366",
            "mov r13, rdx",
            "je 0x8001978",
            "jbe 0x80016e8",
            "cmp esi, 0xc048636d",
            "je 0x8001858",
            "cmp esi, 0xc10c636b",
            "je 0x8001730",
            "cmp esi, 0xc0306368",
            "je 0x80018b0",
            "mov rbx, 0xffffffffffffffea",
            "nop word cs:[rax + rax]",
            "mov rax, rbx",
            "mov r12, qword [rbp - 0x18]",
            "mov rbx, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x10]",
            "mov r14, qword [rbp - 8]",
            "leave",
            "ret",
            "cmp esi, 0x8004636a",
            "je 0x80019e0",
            "cmp esi, 0xc0046365",
            "je get_unused_fd_flags",
            "cmp esi, 0x40046367",
            "jne 0x80016bf",
            "mov rax, rdx",
            "call __get_user_4",
            "test eax, eax",
            "jne 0x800189e",
            "mov esi, edx",
            "mov rdi, r12",
            "call sym.crypto_finish_session",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "lea r14, [rbp - 0x130]",
            "mov edx, 0x10c",
            "mov rsi, r13",
            "mov rdi, r14",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80019d2",
            "mov esi, dword [rbp - 0x130]",
            "mov rdi, r12",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov rbx, rax",
            "je cryptodev_verbosity",
            "mov dword [rbp - 0x28], 0",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je 0x80017d6",
            "mov eax, dword [rbx + 0x40]",
            "test eax, eax",
            "je 0x80019f8",
            "mov r12, qword [rbx + 0x60]",
            "mov rcx, qword [r12 + 0x50]",
            "lea rdi, [r14 + 4]",
            "mov rdx, 0",
            "mov esi, 0x40",
            "xor eax, eax",
            "add rcx, 0x38",
            "call snprintf",
            "mov rcx, qword [r12 + 0x50]",
            "lea rdi, [r14 + 0x44]",
            "xor eax, eax",
            "mov rdx, 0",
            "mov esi, 0x40",
            "add rcx, 0x78",
            "call snprintf",
            "mov rax, qword [r12 + 0x50]",
            "test byte [rax + 0x21], 0x10",
            "je 0x80017d6",
            "or dword [rbp - 0x28], 1",
            "mov r12d, dword [rbx + 0x88]",
            "test r12d, r12d",
            "jne 0x8001a08",
            "mov eax, dword [rbx + 0xb4]",
            "lea rdi, [rbx + 0x10]",
            "mov word [rbp - 0x2c], ax",
            "call mutex_unlock",
            "mov edx, 0x10c",
            "mov rsi, r14",
            "mov rdi, r13",
            "call _copy_to_user",
            "mov rbx, rax",
            "jmp 0x80016d0",
            "xor edi, edi",
            "call get_unused_fd_flags",
            "test eax, eax",
            "mov r14d, eax",
            "js 0x8001835",
            "lock inc qword [rbx + 0x38]",
            "mov rsi, rbx",
            "mov edi, eax",
            "call fd_install",
            "mov eax, r14d",
            "mov rcx, r13",
            "call __put_user_4",
            "test eax, eax",
            "mov r12d, eax",
            "jne 0x8001c18",
            "xor ebx, ebx",
            "jmp 0x80016d0",
            "lea rdi, [rbp - 0x130]",
            "mov rsi, r12",
            "call kcaop_from_user",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "lea rsi, [rbp - 0x130]",
            "mov rdi, r12",
            "call crypto_auth_run",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "lea rdi, [rbp - 0x130]",
            "mov rdx, r13",
            "mov rsi, r12",
            "call kcaop_to_user",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "lea r14, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rsi, r13",
            "mov rdi, r14",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x8001b48",
            "mov rsi, r12",
            "mov rdi, r14",
            "call sym.fill_kcop_from_cop",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov rsi, r14",
            "mov rdi, r12",
            "call crypto_run",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov rdi, r14",
            "call sym.fill_cop_from_kcop.isra.4",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov edx, 0x30",
            "mov rsi, r14",
            "mov rdi, r13",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x800184b",
            "cmp dword [0x0800192f], 0",
            "mov rbx, 0xfffffffffffffff2",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2c7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "lea rdi, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rsi, r13",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80019d2",
            "lea rsi, [rbp - 0x130]",
            "mov rdi, r12",
            "call sym.crypto_create_session",
            "test eax, eax",
            "jne 0x800189e",
            "lea rsi, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rdi, r13",
            "call _copy_to_user",
            "test eax, eax",
            "je 0x800184b",
            "mov esi, dword [rbp - 0x108]",
            "mov rdi, r12",
            "call sym.crypto_finish_session",
            "mov rbx, 0xfffffffffffffff2",
            "jmp 0x80016d0",
            "xor eax, eax",
            "mov rcx, rdx",
            "call __put_user_4",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "mov r12, qword [rbx + 0x50]",
            "jmp 0x8001787",
            "mov r12, qword [rbx + 0x98]",
            "lea rdi, [r14 + 0x84]",
            "mov rdx, 0",
            "mov esi, 0x40",
            "xor eax, eax",
            "mov rcx, qword [r12 + 0x98]",
            "add rcx, 0x38",
            "call snprintf",
            "mov rcx, qword [r12 + 0x98]",
            "lea rdi, [r14 + 0xc4]",
            "xor eax, eax",
            "mov rdx, 0",
            "mov esi, 0x40",
            "add rcx, 0x78",
            "call snprintf",
            "mov rax, qword [r12 + 0x98]",
            "test byte [rax + 0x21], 0x10",
            "je 0x80017e6",
            "or dword [rbp - 0x28], 1",
            "jmp 0x80017e6",
            "ud2",
            "cmp dword [0x08001a7f], 0",
            "jle 0x80016bf",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbp - 0x130]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2f8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016bf",
            "cmp dword [0x08001ac9], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2c2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001b0c], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x35f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "mov rbx, 0xfffffffffffffff2",
            "cmp dword [0x08001b56], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x359",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001b99], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x36c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001bdc], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x366",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "mov edi, r14d",
            "movsxd rbx, r12d",
            "call sys_close",
            "jmp 0x80016d0"
        ]
    },
    "unk.0x8001a35": {
        "function_address": "0x08001a35",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x130",
            "mov qword [rbp - 0x20], rbx",
            "mov qword [rbp - 0x18], r12",
            "mov rbx, rdi",
            "mov qword [rbp - 0x10], r13",
            "mov qword [rbp - 8], r14",
            "mov r12, qword [rdi + 0xd0]",
            "test r12, r12",
            "je cryptodev_verbosity",
            "cmp esi, 0xc0306366",
            "mov r13, rdx",
            "je 0x8001978",
            "jbe 0x80016e8",
            "cmp esi, 0xc048636d",
            "je 0x8001858",
            "cmp esi, 0xc10c636b",
            "je 0x8001730",
            "cmp esi, 0xc0306368",
            "je 0x80018b0",
            "mov rbx, 0xffffffffffffffea",
            "nop word cs:[rax + rax]",
            "mov rax, rbx",
            "mov r12, qword [rbp - 0x18]",
            "mov rbx, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x10]",
            "mov r14, qword [rbp - 8]",
            "leave",
            "ret",
            "cmp esi, 0x8004636a",
            "je 0x80019e0",
            "cmp esi, 0xc0046365",
            "je get_unused_fd_flags",
            "cmp esi, 0x40046367",
            "jne 0x80016bf",
            "mov rax, rdx",
            "call __get_user_4",
            "test eax, eax",
            "jne 0x800189e",
            "mov esi, edx",
            "mov rdi, r12",
            "call sym.crypto_finish_session",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "lea r14, [rbp - 0x130]",
            "mov edx, 0x10c",
            "mov rsi, r13",
            "mov rdi, r14",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80019d2",
            "mov esi, dword [rbp - 0x130]",
            "mov rdi, r12",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov rbx, rax",
            "je cryptodev_verbosity",
            "mov dword [rbp - 0x28], 0",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je 0x80017d6",
            "mov eax, dword [rbx + 0x40]",
            "test eax, eax",
            "je 0x80019f8",
            "mov r12, qword [rbx + 0x60]",
            "mov rcx, qword [r12 + 0x50]",
            "lea rdi, [r14 + 4]",
            "mov rdx, 0",
            "mov esi, 0x40",
            "xor eax, eax",
            "add rcx, 0x38",
            "call snprintf",
            "mov rcx, qword [r12 + 0x50]",
            "lea rdi, [r14 + 0x44]",
            "xor eax, eax",
            "mov rdx, 0",
            "mov esi, 0x40",
            "add rcx, 0x78",
            "call snprintf",
            "mov rax, qword [r12 + 0x50]",
            "test byte [rax + 0x21], 0x10",
            "je 0x80017d6",
            "or dword [rbp - 0x28], 1",
            "mov r12d, dword [rbx + 0x88]",
            "test r12d, r12d",
            "jne 0x8001a08",
            "mov eax, dword [rbx + 0xb4]",
            "lea rdi, [rbx + 0x10]",
            "mov word [rbp - 0x2c], ax",
            "call mutex_unlock",
            "mov edx, 0x10c",
            "mov rsi, r14",
            "mov rdi, r13",
            "call _copy_to_user",
            "mov rbx, rax",
            "jmp 0x80016d0",
            "xor edi, edi",
            "call get_unused_fd_flags",
            "test eax, eax",
            "mov r14d, eax",
            "js 0x8001835",
            "lock inc qword [rbx + 0x38]",
            "mov rsi, rbx",
            "mov edi, eax",
            "call fd_install",
            "mov eax, r14d",
            "mov rcx, r13",
            "call __put_user_4",
            "test eax, eax",
            "mov r12d, eax",
            "jne 0x8001c18",
            "xor ebx, ebx",
            "jmp 0x80016d0",
            "lea rdi, [rbp - 0x130]",
            "mov rsi, r12",
            "call kcaop_from_user",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "lea rsi, [rbp - 0x130]",
            "mov rdi, r12",
            "call crypto_auth_run",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "lea rdi, [rbp - 0x130]",
            "mov rdx, r13",
            "mov rsi, r12",
            "call kcaop_to_user",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "lea r14, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rsi, r13",
            "mov rdi, r14",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x8001b48",
            "mov rsi, r12",
            "mov rdi, r14",
            "call sym.fill_kcop_from_cop",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov rsi, r14",
            "mov rdi, r12",
            "call crypto_run",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov rdi, r14",
            "call sym.fill_cop_from_kcop.isra.4",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov edx, 0x30",
            "mov rsi, r14",
            "mov rdi, r13",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x800184b",
            "cmp dword [0x0800192f], 0",
            "mov rbx, 0xfffffffffffffff2",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2c7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "lea rdi, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rsi, r13",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80019d2",
            "lea rsi, [rbp - 0x130]",
            "mov rdi, r12",
            "call sym.crypto_create_session",
            "test eax, eax",
            "jne 0x800189e",
            "lea rsi, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rdi, r13",
            "call _copy_to_user",
            "test eax, eax",
            "je 0x800184b",
            "mov esi, dword [rbp - 0x108]",
            "mov rdi, r12",
            "call sym.crypto_finish_session",
            "mov rbx, 0xfffffffffffffff2",
            "jmp 0x80016d0",
            "xor eax, eax",
            "mov rcx, rdx",
            "call __put_user_4",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "mov r12, qword [rbx + 0x50]",
            "jmp 0x8001787",
            "mov r12, qword [rbx + 0x98]",
            "lea rdi, [r14 + 0x84]",
            "mov rdx, 0",
            "mov esi, 0x40",
            "xor eax, eax",
            "mov rcx, qword [r12 + 0x98]",
            "add rcx, 0x38",
            "call snprintf",
            "mov rcx, qword [r12 + 0x98]",
            "lea rdi, [r14 + 0xc4]",
            "xor eax, eax",
            "mov rdx, 0",
            "mov esi, 0x40",
            "add rcx, 0x78",
            "call snprintf",
            "mov rax, qword [r12 + 0x98]",
            "test byte [rax + 0x21], 0x10",
            "je 0x80017e6",
            "or dword [rbp - 0x28], 1",
            "jmp 0x80017e6",
            "ud2",
            "cmp dword [0x08001a7f], 0",
            "jle 0x80016bf",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbp - 0x130]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2f8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016bf",
            "cmp dword [0x08001ac9], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2c2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001b0c], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x35f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "mov rbx, 0xfffffffffffffff2",
            "cmp dword [0x08001b56], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x359",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001b99], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x36c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001bdc], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x366",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "mov edi, r14d",
            "movsxd rbx, r12d",
            "call sys_close",
            "jmp 0x80016d0"
        ]
    },
    "unk.0x8001a5b": {
        "function_address": "0x08001a5b",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x130",
            "mov qword [rbp - 0x20], rbx",
            "mov qword [rbp - 0x18], r12",
            "mov rbx, rdi",
            "mov qword [rbp - 0x10], r13",
            "mov qword [rbp - 8], r14",
            "mov r12, qword [rdi + 0xd0]",
            "test r12, r12",
            "je cryptodev_verbosity",
            "cmp esi, 0xc0306366",
            "mov r13, rdx",
            "je 0x8001978",
            "jbe 0x80016e8",
            "cmp esi, 0xc048636d",
            "je 0x8001858",
            "cmp esi, 0xc10c636b",
            "je 0x8001730",
            "cmp esi, 0xc0306368",
            "je 0x80018b0",
            "mov rbx, 0xffffffffffffffea",
            "nop word cs:[rax + rax]",
            "mov rax, rbx",
            "mov r12, qword [rbp - 0x18]",
            "mov rbx, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x10]",
            "mov r14, qword [rbp - 8]",
            "leave",
            "ret",
            "cmp esi, 0x8004636a",
            "je 0x80019e0",
            "cmp esi, 0xc0046365",
            "je get_unused_fd_flags",
            "cmp esi, 0x40046367",
            "jne 0x80016bf",
            "mov rax, rdx",
            "call __get_user_4",
            "test eax, eax",
            "jne 0x800189e",
            "mov esi, edx",
            "mov rdi, r12",
            "call sym.crypto_finish_session",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "lea r14, [rbp - 0x130]",
            "mov edx, 0x10c",
            "mov rsi, r13",
            "mov rdi, r14",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80019d2",
            "mov esi, dword [rbp - 0x130]",
            "mov rdi, r12",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov rbx, rax",
            "je cryptodev_verbosity",
            "mov dword [rbp - 0x28], 0",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je 0x80017d6",
            "mov eax, dword [rbx + 0x40]",
            "test eax, eax",
            "je 0x80019f8",
            "mov r12, qword [rbx + 0x60]",
            "mov rcx, qword [r12 + 0x50]",
            "lea rdi, [r14 + 4]",
            "mov rdx, 0",
            "mov esi, 0x40",
            "xor eax, eax",
            "add rcx, 0x38",
            "call snprintf",
            "mov rcx, qword [r12 + 0x50]",
            "lea rdi, [r14 + 0x44]",
            "xor eax, eax",
            "mov rdx, 0",
            "mov esi, 0x40",
            "add rcx, 0x78",
            "call snprintf",
            "mov rax, qword [r12 + 0x50]",
            "test byte [rax + 0x21], 0x10",
            "je 0x80017d6",
            "or dword [rbp - 0x28], 1",
            "mov r12d, dword [rbx + 0x88]",
            "test r12d, r12d",
            "jne 0x8001a08",
            "mov eax, dword [rbx + 0xb4]",
            "lea rdi, [rbx + 0x10]",
            "mov word [rbp - 0x2c], ax",
            "call mutex_unlock",
            "mov edx, 0x10c",
            "mov rsi, r14",
            "mov rdi, r13",
            "call _copy_to_user",
            "mov rbx, rax",
            "jmp 0x80016d0",
            "xor edi, edi",
            "call get_unused_fd_flags",
            "test eax, eax",
            "mov r14d, eax",
            "js 0x8001835",
            "lock inc qword [rbx + 0x38]",
            "mov rsi, rbx",
            "mov edi, eax",
            "call fd_install",
            "mov eax, r14d",
            "mov rcx, r13",
            "call __put_user_4",
            "test eax, eax",
            "mov r12d, eax",
            "jne 0x8001c18",
            "xor ebx, ebx",
            "jmp 0x80016d0",
            "lea rdi, [rbp - 0x130]",
            "mov rsi, r12",
            "call kcaop_from_user",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "lea rsi, [rbp - 0x130]",
            "mov rdi, r12",
            "call crypto_auth_run",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "lea rdi, [rbp - 0x130]",
            "mov rdx, r13",
            "mov rsi, r12",
            "call kcaop_to_user",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "lea r14, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rsi, r13",
            "mov rdi, r14",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x8001b48",
            "mov rsi, r12",
            "mov rdi, r14",
            "call sym.fill_kcop_from_cop",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov rsi, r14",
            "mov rdi, r12",
            "call crypto_run",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov rdi, r14",
            "call sym.fill_cop_from_kcop.isra.4",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov edx, 0x30",
            "mov rsi, r14",
            "mov rdi, r13",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x800184b",
            "cmp dword [0x0800192f], 0",
            "mov rbx, 0xfffffffffffffff2",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2c7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "lea rdi, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rsi, r13",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80019d2",
            "lea rsi, [rbp - 0x130]",
            "mov rdi, r12",
            "call sym.crypto_create_session",
            "test eax, eax",
            "jne 0x800189e",
            "lea rsi, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rdi, r13",
            "call _copy_to_user",
            "test eax, eax",
            "je 0x800184b",
            "mov esi, dword [rbp - 0x108]",
            "mov rdi, r12",
            "call sym.crypto_finish_session",
            "mov rbx, 0xfffffffffffffff2",
            "jmp 0x80016d0",
            "xor eax, eax",
            "mov rcx, rdx",
            "call __put_user_4",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "mov r12, qword [rbx + 0x50]",
            "jmp 0x8001787",
            "mov r12, qword [rbx + 0x98]",
            "lea rdi, [r14 + 0x84]",
            "mov rdx, 0",
            "mov esi, 0x40",
            "xor eax, eax",
            "mov rcx, qword [r12 + 0x98]",
            "add rcx, 0x38",
            "call snprintf",
            "mov rcx, qword [r12 + 0x98]",
            "lea rdi, [r14 + 0xc4]",
            "xor eax, eax",
            "mov rdx, 0",
            "mov esi, 0x40",
            "add rcx, 0x78",
            "call snprintf",
            "mov rax, qword [r12 + 0x98]",
            "test byte [rax + 0x21], 0x10",
            "je 0x80017e6",
            "or dword [rbp - 0x28], 1",
            "jmp 0x80017e6",
            "ud2",
            "cmp dword [0x08001a7f], 0",
            "jle 0x80016bf",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbp - 0x130]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2f8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016bf",
            "cmp dword [0x08001ac9], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2c2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001b0c], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x35f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "mov rbx, 0xfffffffffffffff2",
            "cmp dword [0x08001b56], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x359",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001b99], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x36c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001bdc], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x366",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "mov edi, r14d",
            "movsxd rbx, r12d",
            "call sys_close",
            "jmp 0x80016d0"
        ]
    },
    "unk.0x8001abd": {
        "function_address": "0x08001abd",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x130",
            "mov qword [rbp - 0x20], rbx",
            "mov qword [rbp - 0x18], r12",
            "mov rbx, rdi",
            "mov qword [rbp - 0x10], r13",
            "mov qword [rbp - 8], r14",
            "mov r12, qword [rdi + 0xd0]",
            "test r12, r12",
            "je cryptodev_verbosity",
            "cmp esi, 0xc0306366",
            "mov r13, rdx",
            "je 0x8001978",
            "jbe 0x80016e8",
            "cmp esi, 0xc048636d",
            "je 0x8001858",
            "cmp esi, 0xc10c636b",
            "je 0x8001730",
            "cmp esi, 0xc0306368",
            "je 0x80018b0",
            "mov rbx, 0xffffffffffffffea",
            "nop word cs:[rax + rax]",
            "mov rax, rbx",
            "mov r12, qword [rbp - 0x18]",
            "mov rbx, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x10]",
            "mov r14, qword [rbp - 8]",
            "leave",
            "ret",
            "cmp esi, 0x8004636a",
            "je 0x80019e0",
            "cmp esi, 0xc0046365",
            "je get_unused_fd_flags",
            "cmp esi, 0x40046367",
            "jne 0x80016bf",
            "mov rax, rdx",
            "call __get_user_4",
            "test eax, eax",
            "jne 0x800189e",
            "mov esi, edx",
            "mov rdi, r12",
            "call sym.crypto_finish_session",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "lea r14, [rbp - 0x130]",
            "mov edx, 0x10c",
            "mov rsi, r13",
            "mov rdi, r14",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80019d2",
            "mov esi, dword [rbp - 0x130]",
            "mov rdi, r12",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov rbx, rax",
            "je cryptodev_verbosity",
            "mov dword [rbp - 0x28], 0",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je 0x80017d6",
            "mov eax, dword [rbx + 0x40]",
            "test eax, eax",
            "je 0x80019f8",
            "mov r12, qword [rbx + 0x60]",
            "mov rcx, qword [r12 + 0x50]",
            "lea rdi, [r14 + 4]",
            "mov rdx, 0",
            "mov esi, 0x40",
            "xor eax, eax",
            "add rcx, 0x38",
            "call snprintf",
            "mov rcx, qword [r12 + 0x50]",
            "lea rdi, [r14 + 0x44]",
            "xor eax, eax",
            "mov rdx, 0",
            "mov esi, 0x40",
            "add rcx, 0x78",
            "call snprintf",
            "mov rax, qword [r12 + 0x50]",
            "test byte [rax + 0x21], 0x10",
            "je 0x80017d6",
            "or dword [rbp - 0x28], 1",
            "mov r12d, dword [rbx + 0x88]",
            "test r12d, r12d",
            "jne 0x8001a08",
            "mov eax, dword [rbx + 0xb4]",
            "lea rdi, [rbx + 0x10]",
            "mov word [rbp - 0x2c], ax",
            "call mutex_unlock",
            "mov edx, 0x10c",
            "mov rsi, r14",
            "mov rdi, r13",
            "call _copy_to_user",
            "mov rbx, rax",
            "jmp 0x80016d0",
            "xor edi, edi",
            "call get_unused_fd_flags",
            "test eax, eax",
            "mov r14d, eax",
            "js 0x8001835",
            "lock inc qword [rbx + 0x38]",
            "mov rsi, rbx",
            "mov edi, eax",
            "call fd_install",
            "mov eax, r14d",
            "mov rcx, r13",
            "call __put_user_4",
            "test eax, eax",
            "mov r12d, eax",
            "jne 0x8001c18",
            "xor ebx, ebx",
            "jmp 0x80016d0",
            "lea rdi, [rbp - 0x130]",
            "mov rsi, r12",
            "call kcaop_from_user",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "lea rsi, [rbp - 0x130]",
            "mov rdi, r12",
            "call crypto_auth_run",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "lea rdi, [rbp - 0x130]",
            "mov rdx, r13",
            "mov rsi, r12",
            "call kcaop_to_user",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "lea r14, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rsi, r13",
            "mov rdi, r14",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x8001b48",
            "mov rsi, r12",
            "mov rdi, r14",
            "call sym.fill_kcop_from_cop",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov rsi, r14",
            "mov rdi, r12",
            "call crypto_run",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov rdi, r14",
            "call sym.fill_cop_from_kcop.isra.4",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov edx, 0x30",
            "mov rsi, r14",
            "mov rdi, r13",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x800184b",
            "cmp dword [0x0800192f], 0",
            "mov rbx, 0xfffffffffffffff2",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2c7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "lea rdi, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rsi, r13",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80019d2",
            "lea rsi, [rbp - 0x130]",
            "mov rdi, r12",
            "call sym.crypto_create_session",
            "test eax, eax",
            "jne 0x800189e",
            "lea rsi, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rdi, r13",
            "call _copy_to_user",
            "test eax, eax",
            "je 0x800184b",
            "mov esi, dword [rbp - 0x108]",
            "mov rdi, r12",
            "call sym.crypto_finish_session",
            "mov rbx, 0xfffffffffffffff2",
            "jmp 0x80016d0",
            "xor eax, eax",
            "mov rcx, rdx",
            "call __put_user_4",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "mov r12, qword [rbx + 0x50]",
            "jmp 0x8001787",
            "mov r12, qword [rbx + 0x98]",
            "lea rdi, [r14 + 0x84]",
            "mov rdx, 0",
            "mov esi, 0x40",
            "xor eax, eax",
            "mov rcx, qword [r12 + 0x98]",
            "add rcx, 0x38",
            "call snprintf",
            "mov rcx, qword [r12 + 0x98]",
            "lea rdi, [r14 + 0xc4]",
            "xor eax, eax",
            "mov rdx, 0",
            "mov esi, 0x40",
            "add rcx, 0x78",
            "call snprintf",
            "mov rax, qword [r12 + 0x98]",
            "test byte [rax + 0x21], 0x10",
            "je 0x80017e6",
            "or dword [rbp - 0x28], 1",
            "jmp 0x80017e6",
            "ud2",
            "cmp dword [0x08001a7f], 0",
            "jle 0x80016bf",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbp - 0x130]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2f8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016bf",
            "cmp dword [0x08001ac9], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2c2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001b0c], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x35f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "mov rbx, 0xfffffffffffffff2",
            "cmp dword [0x08001b56], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x359",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001b99], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x36c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001bdc], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x366",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "mov edi, r14d",
            "movsxd rbx, r12d",
            "call sys_close",
            "jmp 0x80016d0"
        ]
    },
    "unk.0x8001b00": {
        "function_address": "0x08001b00",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x130",
            "mov qword [rbp - 0x20], rbx",
            "mov qword [rbp - 0x18], r12",
            "mov rbx, rdi",
            "mov qword [rbp - 0x10], r13",
            "mov qword [rbp - 8], r14",
            "mov r12, qword [rdi + 0xd0]",
            "test r12, r12",
            "je cryptodev_verbosity",
            "cmp esi, 0xc0306366",
            "mov r13, rdx",
            "je 0x8001978",
            "jbe 0x80016e8",
            "cmp esi, 0xc048636d",
            "je 0x8001858",
            "cmp esi, 0xc10c636b",
            "je 0x8001730",
            "cmp esi, 0xc0306368",
            "je 0x80018b0",
            "mov rbx, 0xffffffffffffffea",
            "nop word cs:[rax + rax]",
            "mov rax, rbx",
            "mov r12, qword [rbp - 0x18]",
            "mov rbx, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x10]",
            "mov r14, qword [rbp - 8]",
            "leave",
            "ret",
            "cmp esi, 0x8004636a",
            "je 0x80019e0",
            "cmp esi, 0xc0046365",
            "je get_unused_fd_flags",
            "cmp esi, 0x40046367",
            "jne 0x80016bf",
            "mov rax, rdx",
            "call __get_user_4",
            "test eax, eax",
            "jne 0x800189e",
            "mov esi, edx",
            "mov rdi, r12",
            "call sym.crypto_finish_session",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "lea r14, [rbp - 0x130]",
            "mov edx, 0x10c",
            "mov rsi, r13",
            "mov rdi, r14",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80019d2",
            "mov esi, dword [rbp - 0x130]",
            "mov rdi, r12",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov rbx, rax",
            "je cryptodev_verbosity",
            "mov dword [rbp - 0x28], 0",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je 0x80017d6",
            "mov eax, dword [rbx + 0x40]",
            "test eax, eax",
            "je 0x80019f8",
            "mov r12, qword [rbx + 0x60]",
            "mov rcx, qword [r12 + 0x50]",
            "lea rdi, [r14 + 4]",
            "mov rdx, 0",
            "mov esi, 0x40",
            "xor eax, eax",
            "add rcx, 0x38",
            "call snprintf",
            "mov rcx, qword [r12 + 0x50]",
            "lea rdi, [r14 + 0x44]",
            "xor eax, eax",
            "mov rdx, 0",
            "mov esi, 0x40",
            "add rcx, 0x78",
            "call snprintf",
            "mov rax, qword [r12 + 0x50]",
            "test byte [rax + 0x21], 0x10",
            "je 0x80017d6",
            "or dword [rbp - 0x28], 1",
            "mov r12d, dword [rbx + 0x88]",
            "test r12d, r12d",
            "jne 0x8001a08",
            "mov eax, dword [rbx + 0xb4]",
            "lea rdi, [rbx + 0x10]",
            "mov word [rbp - 0x2c], ax",
            "call mutex_unlock",
            "mov edx, 0x10c",
            "mov rsi, r14",
            "mov rdi, r13",
            "call _copy_to_user",
            "mov rbx, rax",
            "jmp 0x80016d0",
            "xor edi, edi",
            "call get_unused_fd_flags",
            "test eax, eax",
            "mov r14d, eax",
            "js 0x8001835",
            "lock inc qword [rbx + 0x38]",
            "mov rsi, rbx",
            "mov edi, eax",
            "call fd_install",
            "mov eax, r14d",
            "mov rcx, r13",
            "call __put_user_4",
            "test eax, eax",
            "mov r12d, eax",
            "jne 0x8001c18",
            "xor ebx, ebx",
            "jmp 0x80016d0",
            "lea rdi, [rbp - 0x130]",
            "mov rsi, r12",
            "call kcaop_from_user",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "lea rsi, [rbp - 0x130]",
            "mov rdi, r12",
            "call crypto_auth_run",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "lea rdi, [rbp - 0x130]",
            "mov rdx, r13",
            "mov rsi, r12",
            "call kcaop_to_user",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "lea r14, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rsi, r13",
            "mov rdi, r14",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x8001b48",
            "mov rsi, r12",
            "mov rdi, r14",
            "call sym.fill_kcop_from_cop",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov rsi, r14",
            "mov rdi, r12",
            "call crypto_run",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov rdi, r14",
            "call sym.fill_cop_from_kcop.isra.4",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov edx, 0x30",
            "mov rsi, r14",
            "mov rdi, r13",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x800184b",
            "cmp dword [0x0800192f], 0",
            "mov rbx, 0xfffffffffffffff2",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2c7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "lea rdi, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rsi, r13",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80019d2",
            "lea rsi, [rbp - 0x130]",
            "mov rdi, r12",
            "call sym.crypto_create_session",
            "test eax, eax",
            "jne 0x800189e",
            "lea rsi, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rdi, r13",
            "call _copy_to_user",
            "test eax, eax",
            "je 0x800184b",
            "mov esi, dword [rbp - 0x108]",
            "mov rdi, r12",
            "call sym.crypto_finish_session",
            "mov rbx, 0xfffffffffffffff2",
            "jmp 0x80016d0",
            "xor eax, eax",
            "mov rcx, rdx",
            "call __put_user_4",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "mov r12, qword [rbx + 0x50]",
            "jmp 0x8001787",
            "mov r12, qword [rbx + 0x98]",
            "lea rdi, [r14 + 0x84]",
            "mov rdx, 0",
            "mov esi, 0x40",
            "xor eax, eax",
            "mov rcx, qword [r12 + 0x98]",
            "add rcx, 0x38",
            "call snprintf",
            "mov rcx, qword [r12 + 0x98]",
            "lea rdi, [r14 + 0xc4]",
            "xor eax, eax",
            "mov rdx, 0",
            "mov esi, 0x40",
            "add rcx, 0x78",
            "call snprintf",
            "mov rax, qword [r12 + 0x98]",
            "test byte [rax + 0x21], 0x10",
            "je 0x80017e6",
            "or dword [rbp - 0x28], 1",
            "jmp 0x80017e6",
            "ud2",
            "cmp dword [0x08001a7f], 0",
            "jle 0x80016bf",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbp - 0x130]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2f8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016bf",
            "cmp dword [0x08001ac9], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2c2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001b0c], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x35f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "mov rbx, 0xfffffffffffffff2",
            "cmp dword [0x08001b56], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x359",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001b99], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x36c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001bdc], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x366",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "mov edi, r14d",
            "movsxd rbx, r12d",
            "call sys_close",
            "jmp 0x80016d0"
        ]
    },
    "unk.0x8001b43": {
        "function_address": "0x08001b43",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x130",
            "mov qword [rbp - 0x20], rbx",
            "mov qword [rbp - 0x18], r12",
            "mov rbx, rdi",
            "mov qword [rbp - 0x10], r13",
            "mov qword [rbp - 8], r14",
            "mov r12, qword [rdi + 0xd0]",
            "test r12, r12",
            "je cryptodev_verbosity",
            "cmp esi, 0xc0306366",
            "mov r13, rdx",
            "je 0x8001978",
            "jbe 0x80016e8",
            "cmp esi, 0xc048636d",
            "je 0x8001858",
            "cmp esi, 0xc10c636b",
            "je 0x8001730",
            "cmp esi, 0xc0306368",
            "je 0x80018b0",
            "mov rbx, 0xffffffffffffffea",
            "nop word cs:[rax + rax]",
            "mov rax, rbx",
            "mov r12, qword [rbp - 0x18]",
            "mov rbx, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x10]",
            "mov r14, qword [rbp - 8]",
            "leave",
            "ret",
            "cmp esi, 0x8004636a",
            "je 0x80019e0",
            "cmp esi, 0xc0046365",
            "je get_unused_fd_flags",
            "cmp esi, 0x40046367",
            "jne 0x80016bf",
            "mov rax, rdx",
            "call __get_user_4",
            "test eax, eax",
            "jne 0x800189e",
            "mov esi, edx",
            "mov rdi, r12",
            "call sym.crypto_finish_session",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "lea r14, [rbp - 0x130]",
            "mov edx, 0x10c",
            "mov rsi, r13",
            "mov rdi, r14",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80019d2",
            "mov esi, dword [rbp - 0x130]",
            "mov rdi, r12",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov rbx, rax",
            "je cryptodev_verbosity",
            "mov dword [rbp - 0x28], 0",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je 0x80017d6",
            "mov eax, dword [rbx + 0x40]",
            "test eax, eax",
            "je 0x80019f8",
            "mov r12, qword [rbx + 0x60]",
            "mov rcx, qword [r12 + 0x50]",
            "lea rdi, [r14 + 4]",
            "mov rdx, 0",
            "mov esi, 0x40",
            "xor eax, eax",
            "add rcx, 0x38",
            "call snprintf",
            "mov rcx, qword [r12 + 0x50]",
            "lea rdi, [r14 + 0x44]",
            "xor eax, eax",
            "mov rdx, 0",
            "mov esi, 0x40",
            "add rcx, 0x78",
            "call snprintf",
            "mov rax, qword [r12 + 0x50]",
            "test byte [rax + 0x21], 0x10",
            "je 0x80017d6",
            "or dword [rbp - 0x28], 1",
            "mov r12d, dword [rbx + 0x88]",
            "test r12d, r12d",
            "jne 0x8001a08",
            "mov eax, dword [rbx + 0xb4]",
            "lea rdi, [rbx + 0x10]",
            "mov word [rbp - 0x2c], ax",
            "call mutex_unlock",
            "mov edx, 0x10c",
            "mov rsi, r14",
            "mov rdi, r13",
            "call _copy_to_user",
            "mov rbx, rax",
            "jmp 0x80016d0",
            "xor edi, edi",
            "call get_unused_fd_flags",
            "test eax, eax",
            "mov r14d, eax",
            "js 0x8001835",
            "lock inc qword [rbx + 0x38]",
            "mov rsi, rbx",
            "mov edi, eax",
            "call fd_install",
            "mov eax, r14d",
            "mov rcx, r13",
            "call __put_user_4",
            "test eax, eax",
            "mov r12d, eax",
            "jne 0x8001c18",
            "xor ebx, ebx",
            "jmp 0x80016d0",
            "lea rdi, [rbp - 0x130]",
            "mov rsi, r12",
            "call kcaop_from_user",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "lea rsi, [rbp - 0x130]",
            "mov rdi, r12",
            "call crypto_auth_run",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "lea rdi, [rbp - 0x130]",
            "mov rdx, r13",
            "mov rsi, r12",
            "call kcaop_to_user",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "lea r14, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rsi, r13",
            "mov rdi, r14",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x8001b48",
            "mov rsi, r12",
            "mov rdi, r14",
            "call sym.fill_kcop_from_cop",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov rsi, r14",
            "mov rdi, r12",
            "call crypto_run",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov rdi, r14",
            "call sym.fill_cop_from_kcop.isra.4",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov edx, 0x30",
            "mov rsi, r14",
            "mov rdi, r13",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x800184b",
            "cmp dword [0x0800192f], 0",
            "mov rbx, 0xfffffffffffffff2",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2c7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "lea rdi, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rsi, r13",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80019d2",
            "lea rsi, [rbp - 0x130]",
            "mov rdi, r12",
            "call sym.crypto_create_session",
            "test eax, eax",
            "jne 0x800189e",
            "lea rsi, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rdi, r13",
            "call _copy_to_user",
            "test eax, eax",
            "je 0x800184b",
            "mov esi, dword [rbp - 0x108]",
            "mov rdi, r12",
            "call sym.crypto_finish_session",
            "mov rbx, 0xfffffffffffffff2",
            "jmp 0x80016d0",
            "xor eax, eax",
            "mov rcx, rdx",
            "call __put_user_4",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "mov r12, qword [rbx + 0x50]",
            "jmp 0x8001787",
            "mov r12, qword [rbx + 0x98]",
            "lea rdi, [r14 + 0x84]",
            "mov rdx, 0",
            "mov esi, 0x40",
            "xor eax, eax",
            "mov rcx, qword [r12 + 0x98]",
            "add rcx, 0x38",
            "call snprintf",
            "mov rcx, qword [r12 + 0x98]",
            "lea rdi, [r14 + 0xc4]",
            "xor eax, eax",
            "mov rdx, 0",
            "mov esi, 0x40",
            "add rcx, 0x78",
            "call snprintf",
            "mov rax, qword [r12 + 0x98]",
            "test byte [rax + 0x21], 0x10",
            "je 0x80017e6",
            "or dword [rbp - 0x28], 1",
            "jmp 0x80017e6",
            "ud2",
            "cmp dword [0x08001a7f], 0",
            "jle 0x80016bf",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbp - 0x130]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2f8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016bf",
            "cmp dword [0x08001ac9], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2c2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001b0c], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x35f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "mov rbx, 0xfffffffffffffff2",
            "cmp dword [0x08001b56], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x359",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001b99], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x36c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001bdc], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x366",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "mov edi, r14d",
            "movsxd rbx, r12d",
            "call sys_close",
            "jmp 0x80016d0"
        ]
    },
    "unk.0x8001b8d": {
        "function_address": "0x08001b8d",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x130",
            "mov qword [rbp - 0x20], rbx",
            "mov qword [rbp - 0x18], r12",
            "mov rbx, rdi",
            "mov qword [rbp - 0x10], r13",
            "mov qword [rbp - 8], r14",
            "mov r12, qword [rdi + 0xd0]",
            "test r12, r12",
            "je cryptodev_verbosity",
            "cmp esi, 0xc0306366",
            "mov r13, rdx",
            "je 0x8001978",
            "jbe 0x80016e8",
            "cmp esi, 0xc048636d",
            "je 0x8001858",
            "cmp esi, 0xc10c636b",
            "je 0x8001730",
            "cmp esi, 0xc0306368",
            "je 0x80018b0",
            "mov rbx, 0xffffffffffffffea",
            "nop word cs:[rax + rax]",
            "mov rax, rbx",
            "mov r12, qword [rbp - 0x18]",
            "mov rbx, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x10]",
            "mov r14, qword [rbp - 8]",
            "leave",
            "ret",
            "cmp esi, 0x8004636a",
            "je 0x80019e0",
            "cmp esi, 0xc0046365",
            "je get_unused_fd_flags",
            "cmp esi, 0x40046367",
            "jne 0x80016bf",
            "mov rax, rdx",
            "call __get_user_4",
            "test eax, eax",
            "jne 0x800189e",
            "mov esi, edx",
            "mov rdi, r12",
            "call sym.crypto_finish_session",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "lea r14, [rbp - 0x130]",
            "mov edx, 0x10c",
            "mov rsi, r13",
            "mov rdi, r14",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80019d2",
            "mov esi, dword [rbp - 0x130]",
            "mov rdi, r12",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov rbx, rax",
            "je cryptodev_verbosity",
            "mov dword [rbp - 0x28], 0",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je 0x80017d6",
            "mov eax, dword [rbx + 0x40]",
            "test eax, eax",
            "je 0x80019f8",
            "mov r12, qword [rbx + 0x60]",
            "mov rcx, qword [r12 + 0x50]",
            "lea rdi, [r14 + 4]",
            "mov rdx, 0",
            "mov esi, 0x40",
            "xor eax, eax",
            "add rcx, 0x38",
            "call snprintf",
            "mov rcx, qword [r12 + 0x50]",
            "lea rdi, [r14 + 0x44]",
            "xor eax, eax",
            "mov rdx, 0",
            "mov esi, 0x40",
            "add rcx, 0x78",
            "call snprintf",
            "mov rax, qword [r12 + 0x50]",
            "test byte [rax + 0x21], 0x10",
            "je 0x80017d6",
            "or dword [rbp - 0x28], 1",
            "mov r12d, dword [rbx + 0x88]",
            "test r12d, r12d",
            "jne 0x8001a08",
            "mov eax, dword [rbx + 0xb4]",
            "lea rdi, [rbx + 0x10]",
            "mov word [rbp - 0x2c], ax",
            "call mutex_unlock",
            "mov edx, 0x10c",
            "mov rsi, r14",
            "mov rdi, r13",
            "call _copy_to_user",
            "mov rbx, rax",
            "jmp 0x80016d0",
            "xor edi, edi",
            "call get_unused_fd_flags",
            "test eax, eax",
            "mov r14d, eax",
            "js 0x8001835",
            "lock inc qword [rbx + 0x38]",
            "mov rsi, rbx",
            "mov edi, eax",
            "call fd_install",
            "mov eax, r14d",
            "mov rcx, r13",
            "call __put_user_4",
            "test eax, eax",
            "mov r12d, eax",
            "jne 0x8001c18",
            "xor ebx, ebx",
            "jmp 0x80016d0",
            "lea rdi, [rbp - 0x130]",
            "mov rsi, r12",
            "call kcaop_from_user",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "lea rsi, [rbp - 0x130]",
            "mov rdi, r12",
            "call crypto_auth_run",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "lea rdi, [rbp - 0x130]",
            "mov rdx, r13",
            "mov rsi, r12",
            "call kcaop_to_user",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "lea r14, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rsi, r13",
            "mov rdi, r14",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x8001b48",
            "mov rsi, r12",
            "mov rdi, r14",
            "call sym.fill_kcop_from_cop",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov rsi, r14",
            "mov rdi, r12",
            "call crypto_run",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov rdi, r14",
            "call sym.fill_cop_from_kcop.isra.4",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov edx, 0x30",
            "mov rsi, r14",
            "mov rdi, r13",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x800184b",
            "cmp dword [0x0800192f], 0",
            "mov rbx, 0xfffffffffffffff2",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2c7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "lea rdi, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rsi, r13",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80019d2",
            "lea rsi, [rbp - 0x130]",
            "mov rdi, r12",
            "call sym.crypto_create_session",
            "test eax, eax",
            "jne 0x800189e",
            "lea rsi, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rdi, r13",
            "call _copy_to_user",
            "test eax, eax",
            "je 0x800184b",
            "mov esi, dword [rbp - 0x108]",
            "mov rdi, r12",
            "call sym.crypto_finish_session",
            "mov rbx, 0xfffffffffffffff2",
            "jmp 0x80016d0",
            "xor eax, eax",
            "mov rcx, rdx",
            "call __put_user_4",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "mov r12, qword [rbx + 0x50]",
            "jmp 0x8001787",
            "mov r12, qword [rbx + 0x98]",
            "lea rdi, [r14 + 0x84]",
            "mov rdx, 0",
            "mov esi, 0x40",
            "xor eax, eax",
            "mov rcx, qword [r12 + 0x98]",
            "add rcx, 0x38",
            "call snprintf",
            "mov rcx, qword [r12 + 0x98]",
            "lea rdi, [r14 + 0xc4]",
            "xor eax, eax",
            "mov rdx, 0",
            "mov esi, 0x40",
            "add rcx, 0x78",
            "call snprintf",
            "mov rax, qword [r12 + 0x98]",
            "test byte [rax + 0x21], 0x10",
            "je 0x80017e6",
            "or dword [rbp - 0x28], 1",
            "jmp 0x80017e6",
            "ud2",
            "cmp dword [0x08001a7f], 0",
            "jle 0x80016bf",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbp - 0x130]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2f8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016bf",
            "cmp dword [0x08001ac9], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2c2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001b0c], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x35f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "mov rbx, 0xfffffffffffffff2",
            "cmp dword [0x08001b56], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x359",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001b99], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x36c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001bdc], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x366",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "mov edi, r14d",
            "movsxd rbx, r12d",
            "call sys_close",
            "jmp 0x80016d0"
        ]
    },
    "unk.0x8001bd0": {
        "function_address": "0x08001bd0",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x130",
            "mov qword [rbp - 0x20], rbx",
            "mov qword [rbp - 0x18], r12",
            "mov rbx, rdi",
            "mov qword [rbp - 0x10], r13",
            "mov qword [rbp - 8], r14",
            "mov r12, qword [rdi + 0xd0]",
            "test r12, r12",
            "je cryptodev_verbosity",
            "cmp esi, 0xc0306366",
            "mov r13, rdx",
            "je 0x8001978",
            "jbe 0x80016e8",
            "cmp esi, 0xc048636d",
            "je 0x8001858",
            "cmp esi, 0xc10c636b",
            "je 0x8001730",
            "cmp esi, 0xc0306368",
            "je 0x80018b0",
            "mov rbx, 0xffffffffffffffea",
            "nop word cs:[rax + rax]",
            "mov rax, rbx",
            "mov r12, qword [rbp - 0x18]",
            "mov rbx, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x10]",
            "mov r14, qword [rbp - 8]",
            "leave",
            "ret",
            "cmp esi, 0x8004636a",
            "je 0x80019e0",
            "cmp esi, 0xc0046365",
            "je get_unused_fd_flags",
            "cmp esi, 0x40046367",
            "jne 0x80016bf",
            "mov rax, rdx",
            "call __get_user_4",
            "test eax, eax",
            "jne 0x800189e",
            "mov esi, edx",
            "mov rdi, r12",
            "call sym.crypto_finish_session",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "lea r14, [rbp - 0x130]",
            "mov edx, 0x10c",
            "mov rsi, r13",
            "mov rdi, r14",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80019d2",
            "mov esi, dword [rbp - 0x130]",
            "mov rdi, r12",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov rbx, rax",
            "je cryptodev_verbosity",
            "mov dword [rbp - 0x28], 0",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je 0x80017d6",
            "mov eax, dword [rbx + 0x40]",
            "test eax, eax",
            "je 0x80019f8",
            "mov r12, qword [rbx + 0x60]",
            "mov rcx, qword [r12 + 0x50]",
            "lea rdi, [r14 + 4]",
            "mov rdx, 0",
            "mov esi, 0x40",
            "xor eax, eax",
            "add rcx, 0x38",
            "call snprintf",
            "mov rcx, qword [r12 + 0x50]",
            "lea rdi, [r14 + 0x44]",
            "xor eax, eax",
            "mov rdx, 0",
            "mov esi, 0x40",
            "add rcx, 0x78",
            "call snprintf",
            "mov rax, qword [r12 + 0x50]",
            "test byte [rax + 0x21], 0x10",
            "je 0x80017d6",
            "or dword [rbp - 0x28], 1",
            "mov r12d, dword [rbx + 0x88]",
            "test r12d, r12d",
            "jne 0x8001a08",
            "mov eax, dword [rbx + 0xb4]",
            "lea rdi, [rbx + 0x10]",
            "mov word [rbp - 0x2c], ax",
            "call mutex_unlock",
            "mov edx, 0x10c",
            "mov rsi, r14",
            "mov rdi, r13",
            "call _copy_to_user",
            "mov rbx, rax",
            "jmp 0x80016d0",
            "xor edi, edi",
            "call get_unused_fd_flags",
            "test eax, eax",
            "mov r14d, eax",
            "js 0x8001835",
            "lock inc qword [rbx + 0x38]",
            "mov rsi, rbx",
            "mov edi, eax",
            "call fd_install",
            "mov eax, r14d",
            "mov rcx, r13",
            "call __put_user_4",
            "test eax, eax",
            "mov r12d, eax",
            "jne 0x8001c18",
            "xor ebx, ebx",
            "jmp 0x80016d0",
            "lea rdi, [rbp - 0x130]",
            "mov rsi, r12",
            "call kcaop_from_user",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "lea rsi, [rbp - 0x130]",
            "mov rdi, r12",
            "call crypto_auth_run",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "lea rdi, [rbp - 0x130]",
            "mov rdx, r13",
            "mov rsi, r12",
            "call kcaop_to_user",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "lea r14, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rsi, r13",
            "mov rdi, r14",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x8001b48",
            "mov rsi, r12",
            "mov rdi, r14",
            "call sym.fill_kcop_from_cop",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov rsi, r14",
            "mov rdi, r12",
            "call crypto_run",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov rdi, r14",
            "call sym.fill_cop_from_kcop.isra.4",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov edx, 0x30",
            "mov rsi, r14",
            "mov rdi, r13",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x800184b",
            "cmp dword [0x0800192f], 0",
            "mov rbx, 0xfffffffffffffff2",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2c7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "lea rdi, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rsi, r13",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80019d2",
            "lea rsi, [rbp - 0x130]",
            "mov rdi, r12",
            "call sym.crypto_create_session",
            "test eax, eax",
            "jne 0x800189e",
            "lea rsi, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rdi, r13",
            "call _copy_to_user",
            "test eax, eax",
            "je 0x800184b",
            "mov esi, dword [rbp - 0x108]",
            "mov rdi, r12",
            "call sym.crypto_finish_session",
            "mov rbx, 0xfffffffffffffff2",
            "jmp 0x80016d0",
            "xor eax, eax",
            "mov rcx, rdx",
            "call __put_user_4",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "mov r12, qword [rbx + 0x50]",
            "jmp 0x8001787",
            "mov r12, qword [rbx + 0x98]",
            "lea rdi, [r14 + 0x84]",
            "mov rdx, 0",
            "mov esi, 0x40",
            "xor eax, eax",
            "mov rcx, qword [r12 + 0x98]",
            "add rcx, 0x38",
            "call snprintf",
            "mov rcx, qword [r12 + 0x98]",
            "lea rdi, [r14 + 0xc4]",
            "xor eax, eax",
            "mov rdx, 0",
            "mov esi, 0x40",
            "add rcx, 0x78",
            "call snprintf",
            "mov rax, qword [r12 + 0x98]",
            "test byte [rax + 0x21], 0x10",
            "je 0x80017e6",
            "or dword [rbp - 0x28], 1",
            "jmp 0x80017e6",
            "ud2",
            "cmp dword [0x08001a7f], 0",
            "jle 0x80016bf",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbp - 0x130]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2f8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016bf",
            "cmp dword [0x08001ac9], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2c2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001b0c], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x35f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "mov rbx, 0xfffffffffffffff2",
            "cmp dword [0x08001b56], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x359",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001b99], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x36c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001bdc], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x366",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "mov edi, r14d",
            "movsxd rbx, r12d",
            "call sys_close",
            "jmp 0x80016d0"
        ]
    },
    "unk.0x8001c13": {
        "function_address": "0x08001c13",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x130",
            "mov qword [rbp - 0x20], rbx",
            "mov qword [rbp - 0x18], r12",
            "mov rbx, rdi",
            "mov qword [rbp - 0x10], r13",
            "mov qword [rbp - 8], r14",
            "mov r12, qword [rdi + 0xd0]",
            "test r12, r12",
            "je cryptodev_verbosity",
            "cmp esi, 0xc0306366",
            "mov r13, rdx",
            "je 0x8001978",
            "jbe 0x80016e8",
            "cmp esi, 0xc048636d",
            "je 0x8001858",
            "cmp esi, 0xc10c636b",
            "je 0x8001730",
            "cmp esi, 0xc0306368",
            "je 0x80018b0",
            "mov rbx, 0xffffffffffffffea",
            "nop word cs:[rax + rax]",
            "mov rax, rbx",
            "mov r12, qword [rbp - 0x18]",
            "mov rbx, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x10]",
            "mov r14, qword [rbp - 8]",
            "leave",
            "ret",
            "cmp esi, 0x8004636a",
            "je 0x80019e0",
            "cmp esi, 0xc0046365",
            "je get_unused_fd_flags",
            "cmp esi, 0x40046367",
            "jne 0x80016bf",
            "mov rax, rdx",
            "call __get_user_4",
            "test eax, eax",
            "jne 0x800189e",
            "mov esi, edx",
            "mov rdi, r12",
            "call sym.crypto_finish_session",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "lea r14, [rbp - 0x130]",
            "mov edx, 0x10c",
            "mov rsi, r13",
            "mov rdi, r14",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80019d2",
            "mov esi, dword [rbp - 0x130]",
            "mov rdi, r12",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov rbx, rax",
            "je cryptodev_verbosity",
            "mov dword [rbp - 0x28], 0",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je 0x80017d6",
            "mov eax, dword [rbx + 0x40]",
            "test eax, eax",
            "je 0x80019f8",
            "mov r12, qword [rbx + 0x60]",
            "mov rcx, qword [r12 + 0x50]",
            "lea rdi, [r14 + 4]",
            "mov rdx, 0",
            "mov esi, 0x40",
            "xor eax, eax",
            "add rcx, 0x38",
            "call snprintf",
            "mov rcx, qword [r12 + 0x50]",
            "lea rdi, [r14 + 0x44]",
            "xor eax, eax",
            "mov rdx, 0",
            "mov esi, 0x40",
            "add rcx, 0x78",
            "call snprintf",
            "mov rax, qword [r12 + 0x50]",
            "test byte [rax + 0x21], 0x10",
            "je 0x80017d6",
            "or dword [rbp - 0x28], 1",
            "mov r12d, dword [rbx + 0x88]",
            "test r12d, r12d",
            "jne 0x8001a08",
            "mov eax, dword [rbx + 0xb4]",
            "lea rdi, [rbx + 0x10]",
            "mov word [rbp - 0x2c], ax",
            "call mutex_unlock",
            "mov edx, 0x10c",
            "mov rsi, r14",
            "mov rdi, r13",
            "call _copy_to_user",
            "mov rbx, rax",
            "jmp 0x80016d0",
            "xor edi, edi",
            "call get_unused_fd_flags",
            "test eax, eax",
            "mov r14d, eax",
            "js 0x8001835",
            "lock inc qword [rbx + 0x38]",
            "mov rsi, rbx",
            "mov edi, eax",
            "call fd_install",
            "mov eax, r14d",
            "mov rcx, r13",
            "call __put_user_4",
            "test eax, eax",
            "mov r12d, eax",
            "jne 0x8001c18",
            "xor ebx, ebx",
            "jmp 0x80016d0",
            "lea rdi, [rbp - 0x130]",
            "mov rsi, r12",
            "call kcaop_from_user",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "lea rsi, [rbp - 0x130]",
            "mov rdi, r12",
            "call crypto_auth_run",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "lea rdi, [rbp - 0x130]",
            "mov rdx, r13",
            "mov rsi, r12",
            "call kcaop_to_user",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "lea r14, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rsi, r13",
            "mov rdi, r14",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x8001b48",
            "mov rsi, r12",
            "mov rdi, r14",
            "call sym.fill_kcop_from_cop",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov rsi, r14",
            "mov rdi, r12",
            "call crypto_run",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov rdi, r14",
            "call sym.fill_cop_from_kcop.isra.4",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov edx, 0x30",
            "mov rsi, r14",
            "mov rdi, r13",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x800184b",
            "cmp dword [0x0800192f], 0",
            "mov rbx, 0xfffffffffffffff2",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2c7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "lea rdi, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rsi, r13",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80019d2",
            "lea rsi, [rbp - 0x130]",
            "mov rdi, r12",
            "call sym.crypto_create_session",
            "test eax, eax",
            "jne 0x800189e",
            "lea rsi, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rdi, r13",
            "call _copy_to_user",
            "test eax, eax",
            "je 0x800184b",
            "mov esi, dword [rbp - 0x108]",
            "mov rdi, r12",
            "call sym.crypto_finish_session",
            "mov rbx, 0xfffffffffffffff2",
            "jmp 0x80016d0",
            "xor eax, eax",
            "mov rcx, rdx",
            "call __put_user_4",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "mov r12, qword [rbx + 0x50]",
            "jmp 0x8001787",
            "mov r12, qword [rbx + 0x98]",
            "lea rdi, [r14 + 0x84]",
            "mov rdx, 0",
            "mov esi, 0x40",
            "xor eax, eax",
            "mov rcx, qword [r12 + 0x98]",
            "add rcx, 0x38",
            "call snprintf",
            "mov rcx, qword [r12 + 0x98]",
            "lea rdi, [r14 + 0xc4]",
            "xor eax, eax",
            "mov rdx, 0",
            "mov esi, 0x40",
            "add rcx, 0x78",
            "call snprintf",
            "mov rax, qword [r12 + 0x98]",
            "test byte [rax + 0x21], 0x10",
            "je 0x80017e6",
            "or dword [rbp - 0x28], 1",
            "jmp 0x80017e6",
            "ud2",
            "cmp dword [0x08001a7f], 0",
            "jle 0x80016bf",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbp - 0x130]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2f8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016bf",
            "cmp dword [0x08001ac9], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2c2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001b0c], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x35f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "mov rbx, 0xfffffffffffffff2",
            "cmp dword [0x08001b56], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x359",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001b99], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x36c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001bdc], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x366",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "mov edi, r14d",
            "movsxd rbx, r12d",
            "call sys_close",
            "jmp 0x80016d0"
        ]
    },
    "unk.0x8001c23": {
        "function_address": "0x08001c23",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x130",
            "mov qword [rbp - 0x20], rbx",
            "mov qword [rbp - 0x18], r12",
            "mov rbx, rdi",
            "mov qword [rbp - 0x10], r13",
            "mov qword [rbp - 8], r14",
            "mov r12, qword [rdi + 0xd0]",
            "test r12, r12",
            "je cryptodev_verbosity",
            "cmp esi, 0xc0306366",
            "mov r13, rdx",
            "je 0x8001978",
            "jbe 0x80016e8",
            "cmp esi, 0xc048636d",
            "je 0x8001858",
            "cmp esi, 0xc10c636b",
            "je 0x8001730",
            "cmp esi, 0xc0306368",
            "je 0x80018b0",
            "mov rbx, 0xffffffffffffffea",
            "nop word cs:[rax + rax]",
            "mov rax, rbx",
            "mov r12, qword [rbp - 0x18]",
            "mov rbx, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x10]",
            "mov r14, qword [rbp - 8]",
            "leave",
            "ret",
            "cmp esi, 0x8004636a",
            "je 0x80019e0",
            "cmp esi, 0xc0046365",
            "je get_unused_fd_flags",
            "cmp esi, 0x40046367",
            "jne 0x80016bf",
            "mov rax, rdx",
            "call __get_user_4",
            "test eax, eax",
            "jne 0x800189e",
            "mov esi, edx",
            "mov rdi, r12",
            "call sym.crypto_finish_session",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "lea r14, [rbp - 0x130]",
            "mov edx, 0x10c",
            "mov rsi, r13",
            "mov rdi, r14",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80019d2",
            "mov esi, dword [rbp - 0x130]",
            "mov rdi, r12",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov rbx, rax",
            "je cryptodev_verbosity",
            "mov dword [rbp - 0x28], 0",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je 0x80017d6",
            "mov eax, dword [rbx + 0x40]",
            "test eax, eax",
            "je 0x80019f8",
            "mov r12, qword [rbx + 0x60]",
            "mov rcx, qword [r12 + 0x50]",
            "lea rdi, [r14 + 4]",
            "mov rdx, 0",
            "mov esi, 0x40",
            "xor eax, eax",
            "add rcx, 0x38",
            "call snprintf",
            "mov rcx, qword [r12 + 0x50]",
            "lea rdi, [r14 + 0x44]",
            "xor eax, eax",
            "mov rdx, 0",
            "mov esi, 0x40",
            "add rcx, 0x78",
            "call snprintf",
            "mov rax, qword [r12 + 0x50]",
            "test byte [rax + 0x21], 0x10",
            "je 0x80017d6",
            "or dword [rbp - 0x28], 1",
            "mov r12d, dword [rbx + 0x88]",
            "test r12d, r12d",
            "jne 0x8001a08",
            "mov eax, dword [rbx + 0xb4]",
            "lea rdi, [rbx + 0x10]",
            "mov word [rbp - 0x2c], ax",
            "call mutex_unlock",
            "mov edx, 0x10c",
            "mov rsi, r14",
            "mov rdi, r13",
            "call _copy_to_user",
            "mov rbx, rax",
            "jmp 0x80016d0",
            "xor edi, edi",
            "call get_unused_fd_flags",
            "test eax, eax",
            "mov r14d, eax",
            "js 0x8001835",
            "lock inc qword [rbx + 0x38]",
            "mov rsi, rbx",
            "mov edi, eax",
            "call fd_install",
            "mov eax, r14d",
            "mov rcx, r13",
            "call __put_user_4",
            "test eax, eax",
            "mov r12d, eax",
            "jne 0x8001c18",
            "xor ebx, ebx",
            "jmp 0x80016d0",
            "lea rdi, [rbp - 0x130]",
            "mov rsi, r12",
            "call kcaop_from_user",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "lea rsi, [rbp - 0x130]",
            "mov rdi, r12",
            "call crypto_auth_run",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "lea rdi, [rbp - 0x130]",
            "mov rdx, r13",
            "mov rsi, r12",
            "call kcaop_to_user",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "lea r14, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rsi, r13",
            "mov rdi, r14",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x8001b48",
            "mov rsi, r12",
            "mov rdi, r14",
            "call sym.fill_kcop_from_cop",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov rsi, r14",
            "mov rdi, r12",
            "call crypto_run",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov rdi, r14",
            "call sym.fill_cop_from_kcop.isra.4",
            "movsxd rbx, eax",
            "test ebx, ebx",
            "jne cryptodev_verbosity",
            "mov edx, 0x30",
            "mov rsi, r14",
            "mov rdi, r13",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x800184b",
            "cmp dword [0x0800192f], 0",
            "mov rbx, 0xfffffffffffffff2",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2c7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "lea rdi, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rsi, r13",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80019d2",
            "lea rsi, [rbp - 0x130]",
            "mov rdi, r12",
            "call sym.crypto_create_session",
            "test eax, eax",
            "jne 0x800189e",
            "lea rsi, [rbp - 0x130]",
            "mov edx, 0x30",
            "mov rdi, r13",
            "call _copy_to_user",
            "test eax, eax",
            "je 0x800184b",
            "mov esi, dword [rbp - 0x108]",
            "mov rdi, r12",
            "call sym.crypto_finish_session",
            "mov rbx, 0xfffffffffffffff2",
            "jmp 0x80016d0",
            "xor eax, eax",
            "mov rcx, rdx",
            "call __put_user_4",
            "movsxd rbx, eax",
            "jmp 0x80016d0",
            "mov r12, qword [rbx + 0x50]",
            "jmp 0x8001787",
            "mov r12, qword [rbx + 0x98]",
            "lea rdi, [r14 + 0x84]",
            "mov rdx, 0",
            "mov esi, 0x40",
            "xor eax, eax",
            "mov rcx, qword [r12 + 0x98]",
            "add rcx, 0x38",
            "call snprintf",
            "mov rcx, qword [r12 + 0x98]",
            "lea rdi, [r14 + 0xc4]",
            "xor eax, eax",
            "mov rdx, 0",
            "mov esi, 0x40",
            "add rcx, 0x78",
            "call snprintf",
            "mov rax, qword [r12 + 0x98]",
            "test byte [rax + 0x21], 0x10",
            "je 0x80017e6",
            "or dword [rbp - 0x28], 1",
            "jmp 0x80017e6",
            "ud2",
            "cmp dword [0x08001a7f], 0",
            "jle 0x80016bf",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbp - 0x130]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2f8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016bf",
            "cmp dword [0x08001ac9], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2c2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001b0c], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x35f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "mov rbx, 0xfffffffffffffff2",
            "cmp dword [0x08001b56], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x359",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001b99], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x36c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "cmp dword [0x08001bdc], 0",
            "jle 0x80016d0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x366",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80016d0",
            "mov edi, r14d",
            "movsxd rbx, r12d",
            "call sys_close",
            "jmp 0x80016d0"
        ]
    },
    "sym.cryptodev_compat_ioctl": {
        "function_address": "0x08001c30",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r12",
            "push rbx",
            "sub rsp, 0xc0",
            "mov rbx, qword [rdi + 0xd0]",
            "test rbx, rbx",
            "je 0x8001f80",
            "cmp esi, 0xc0046365",
            "mov r12, rdx",
            "je 0x8001db8",
            "jbe 0x8001d90",
            "cmp esi, 0xc01c6368",
            "je 0x8001dd0",
            "cmp esi, 0xc10c636b",
            "je 0x8001db8",
            "cmp esi, 0xc01c6366",
            "jne 0x8001da0",
            "lea rdi, [rbp - 0xc4]",
            "mov edx, 0x1c",
            "mov rsi, r12",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x8001f9f",
            "mov eax, dword [rbp - 0xc4]",
            "lea rsi, [rbp - 0xa8]",
            "mov rdi, rbx",
            "mov dword [rbp - 0xa8], eax",
            "mov eax, dword [rbp - 0xc0]",
            "mov dword [rbp - 0xa4], eax",
            "mov eax, dword [rbp - 0xbc]",
            "mov dword [rbp - 0xa0], eax",
            "mov eax, dword [rbp - 0xb8]",
            "mov qword [rbp - 0x98], rax",
            "mov eax, dword [rbp - 0xb4]",
            "mov dword [rbp - 0x90], eax",
            "mov eax, dword [rbp - 0xb0]",
            "mov qword [rbp - 0x88], rax",
            "mov eax, dword [rbp - 0xac]",
            "mov dword [rbp - 0x80], eax",
            "call sym.crypto_create_session",
            "test eax, eax",
            "jne 0x8001f87",
            "mov eax, dword [rbp - 0xa8]",
            "lea rsi, [rbp - 0xc4]",
            "mov edx, 0x1c",
            "mov rdi, r12",
            "mov dword [rbp - 0xc4], eax",
            "mov eax, dword [rbp - 0xa4]",
            "mov dword [rbp - 0xc0], eax",
            "mov eax, dword [rbp - 0xa0]",
            "mov dword [rbp - 0xbc], eax",
            "mov rax, qword [rbp - 0x98]",
            "mov dword [rbp - 0xb8], eax",
            "mov eax, dword [rbp - 0x90]",
            "mov dword [rbp - 0xb4], eax",
            "mov rax, qword [rbp - 0x88]",
            "mov dword [rbp - 0xb0], eax",
            "mov eax, dword [rbp - 0x80]",
            "mov dword [rbp - 0xac], eax",
            "call _copy_to_user",
            "test eax, eax",
            "jne 0x8001f69",
            "add rsp, 0xc0",
            "xor eax, eax",
            "pop rbx",
            "pop r12",
            "pop rbp",
            "ret",
            "cmp esi, 0x40046367",
            "je 0x8001db8",
            "cmp esi, 0x8004636a",
            "je 0x8001db8",
            "mov rax, 0xffffffffffffffea",
            "add rsp, 0xc0",
            "pop rbx",
            "pop r12",
            "pop rbp",
            "ret",
            "mov rdx, r12",
            "call sym.cryptodev_ioctl",
            "add rsp, 0xc0",
            "pop rbx",
            "pop r12",
            "pop rbp",
            "ret",
            "lea rdi, [rbp - 0xc4]",
            "mov edx, 0x1c",
            "mov rsi, r12",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x8001f82",
            "mov eax, dword [rbp - 0xc4]",
            "lea rdi, [rbp - 0xa8]",
            "mov rsi, rbx",
            "mov dword [rbp - 0xa8], eax",
            "movzx eax, word [rbp - 0xc0]",
            "mov word [rbp - 0xa4], ax",
            "movzx eax, word [rbp - 0xbe]",
            "mov word [rbp - 0xa2], ax",
            "mov eax, dword [rbp - 0xbc]",
            "mov dword [rbp - 0xa0], eax",
            "mov eax, dword [rbp - 0xb8]",
            "mov qword [rbp - 0x98], rax",
            "mov eax, dword [rbp - 0xb4]",
            "mov qword [rbp - 0x90], rax",
            "mov eax, dword [rbp - 0xb0]",
            "mov qword [rbp - 0x88], rax",
            "mov eax, dword [rbp - 0xac]",
            "mov qword [rbp - 0x80], rax",
            "call sym.fill_kcop_from_cop",
            "test eax, eax",
            "jne 0x8001f87",
            "lea rsi, [rbp - 0xa8]",
            "mov rdi, rbx",
            "call crypto_run",
            "test eax, eax",
            "jne 0x8001f87",
            "lea rdi, [rbp - 0xa8]",
            "call sym.fill_cop_from_kcop.isra.4",
            "test eax, eax",
            "mov ebx, eax",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbp - 0xa8]",
            "lea rsi, [rbp - 0xc4]",
            "mov edx, 0x1c",
            "mov rdi, r12",
            "mov dword [rbp - 0xc4], eax",
            "movzx eax, word [rbp - 0xa4]",
            "mov word [rbp - 0xc0], ax",
            "movzx eax, word [rbp - 0xa2]",
            "mov word [rbp - 0xbe], ax",
            "mov eax, dword [rbp - 0xa0]",
            "mov dword [rbp - 0xbc], eax",
            "mov rax, qword [rbp - 0x98]",
            "mov dword [rbp - 0xb8], eax",
            "mov rax, qword [rbp - 0x90]",
            "mov dword [rbp - 0xb4], eax",
            "mov rax, qword [rbp - 0x88]",
            "mov dword [rbp - 0xb0], eax",
            "mov rax, qword [rbp - 0x80]",
            "mov dword [rbp - 0xac], eax",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x8001d7d",
            "cmp dword [0x08001f1f], 0",
            "mov rax, 0xfffffffffffffff2",
            "jle 0x8001da7",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x3d5",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov rax, 0xfffffffffffffff2",
            "jmp 0x8001da7",
            "mov esi, dword [rbp - 0x80]",
            "mov rdi, rbx",
            "call sym.crypto_finish_session",
            "mov rax, 0xfffffffffffffff2",
            "jmp 0x8001da7",
            "ud2",
            "mov eax, 0xfffffff2",
            "cdqe",
            "jmp 0x8001da7",
            "cmp dword [0x08001f95], 0",
            "jg 0x8001fab",
            "movsxd rax, ebx",
            "jmp 0x8001da7",
            "mov rax, 0xfffffffffffffff2",
            "jmp 0x8001da7",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x3cf",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8001f97"
        ]
    },
    "unk.0x8001c9b": {
        "function_address": "0x08001c9b",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r12",
            "push rbx",
            "sub rsp, 0xc0",
            "mov rbx, qword [rdi + 0xd0]",
            "test rbx, rbx",
            "je 0x8001f80",
            "cmp esi, 0xc0046365",
            "mov r12, rdx",
            "je 0x8001db8",
            "jbe 0x8001d90",
            "cmp esi, 0xc01c6368",
            "je 0x8001dd0",
            "cmp esi, 0xc10c636b",
            "je 0x8001db8",
            "cmp esi, 0xc01c6366",
            "jne 0x8001da0",
            "lea rdi, [rbp - 0xc4]",
            "mov edx, 0x1c",
            "mov rsi, r12",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x8001f9f",
            "mov eax, dword [rbp - 0xc4]",
            "lea rsi, [rbp - 0xa8]",
            "mov rdi, rbx",
            "mov dword [rbp - 0xa8], eax",
            "mov eax, dword [rbp - 0xc0]",
            "mov dword [rbp - 0xa4], eax",
            "mov eax, dword [rbp - 0xbc]",
            "mov dword [rbp - 0xa0], eax",
            "mov eax, dword [rbp - 0xb8]",
            "mov qword [rbp - 0x98], rax",
            "mov eax, dword [rbp - 0xb4]",
            "mov dword [rbp - 0x90], eax",
            "mov eax, dword [rbp - 0xb0]",
            "mov qword [rbp - 0x88], rax",
            "mov eax, dword [rbp - 0xac]",
            "mov dword [rbp - 0x80], eax",
            "call sym.crypto_create_session",
            "test eax, eax",
            "jne 0x8001f87",
            "mov eax, dword [rbp - 0xa8]",
            "lea rsi, [rbp - 0xc4]",
            "mov edx, 0x1c",
            "mov rdi, r12",
            "mov dword [rbp - 0xc4], eax",
            "mov eax, dword [rbp - 0xa4]",
            "mov dword [rbp - 0xc0], eax",
            "mov eax, dword [rbp - 0xa0]",
            "mov dword [rbp - 0xbc], eax",
            "mov rax, qword [rbp - 0x98]",
            "mov dword [rbp - 0xb8], eax",
            "mov eax, dword [rbp - 0x90]",
            "mov dword [rbp - 0xb4], eax",
            "mov rax, qword [rbp - 0x88]",
            "mov dword [rbp - 0xb0], eax",
            "mov eax, dword [rbp - 0x80]",
            "mov dword [rbp - 0xac], eax",
            "call _copy_to_user",
            "test eax, eax",
            "jne 0x8001f69",
            "add rsp, 0xc0",
            "xor eax, eax",
            "pop rbx",
            "pop r12",
            "pop rbp",
            "ret",
            "cmp esi, 0x40046367",
            "je 0x8001db8",
            "cmp esi, 0x8004636a",
            "je 0x8001db8",
            "mov rax, 0xffffffffffffffea",
            "add rsp, 0xc0",
            "pop rbx",
            "pop r12",
            "pop rbp",
            "ret",
            "mov rdx, r12",
            "call sym.cryptodev_ioctl",
            "add rsp, 0xc0",
            "pop rbx",
            "pop r12",
            "pop rbp",
            "ret",
            "lea rdi, [rbp - 0xc4]",
            "mov edx, 0x1c",
            "mov rsi, r12",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x8001f82",
            "mov eax, dword [rbp - 0xc4]",
            "lea rdi, [rbp - 0xa8]",
            "mov rsi, rbx",
            "mov dword [rbp - 0xa8], eax",
            "movzx eax, word [rbp - 0xc0]",
            "mov word [rbp - 0xa4], ax",
            "movzx eax, word [rbp - 0xbe]",
            "mov word [rbp - 0xa2], ax",
            "mov eax, dword [rbp - 0xbc]",
            "mov dword [rbp - 0xa0], eax",
            "mov eax, dword [rbp - 0xb8]",
            "mov qword [rbp - 0x98], rax",
            "mov eax, dword [rbp - 0xb4]",
            "mov qword [rbp - 0x90], rax",
            "mov eax, dword [rbp - 0xb0]",
            "mov qword [rbp - 0x88], rax",
            "mov eax, dword [rbp - 0xac]",
            "mov qword [rbp - 0x80], rax",
            "call sym.fill_kcop_from_cop",
            "test eax, eax",
            "jne 0x8001f87",
            "lea rsi, [rbp - 0xa8]",
            "mov rdi, rbx",
            "call crypto_run",
            "test eax, eax",
            "jne 0x8001f87",
            "lea rdi, [rbp - 0xa8]",
            "call sym.fill_cop_from_kcop.isra.4",
            "test eax, eax",
            "mov ebx, eax",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbp - 0xa8]",
            "lea rsi, [rbp - 0xc4]",
            "mov edx, 0x1c",
            "mov rdi, r12",
            "mov dword [rbp - 0xc4], eax",
            "movzx eax, word [rbp - 0xa4]",
            "mov word [rbp - 0xc0], ax",
            "movzx eax, word [rbp - 0xa2]",
            "mov word [rbp - 0xbe], ax",
            "mov eax, dword [rbp - 0xa0]",
            "mov dword [rbp - 0xbc], eax",
            "mov rax, qword [rbp - 0x98]",
            "mov dword [rbp - 0xb8], eax",
            "mov rax, qword [rbp - 0x90]",
            "mov dword [rbp - 0xb4], eax",
            "mov rax, qword [rbp - 0x88]",
            "mov dword [rbp - 0xb0], eax",
            "mov rax, qword [rbp - 0x80]",
            "mov dword [rbp - 0xac], eax",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x8001d7d",
            "cmp dword [0x08001f1f], 0",
            "mov rax, 0xfffffffffffffff2",
            "jle 0x8001da7",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x3d5",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov rax, 0xfffffffffffffff2",
            "jmp 0x8001da7",
            "mov esi, dword [rbp - 0x80]",
            "mov rdi, rbx",
            "call sym.crypto_finish_session",
            "mov rax, 0xfffffffffffffff2",
            "jmp 0x8001da7",
            "ud2",
            "mov eax, 0xfffffff2",
            "cdqe",
            "jmp 0x8001da7",
            "cmp dword [0x08001f95], 0",
            "jg 0x8001fab",
            "movsxd rax, ebx",
            "jmp 0x8001da7",
            "mov rax, 0xfffffffffffffff2",
            "jmp 0x8001da7",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x3cf",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8001f97"
        ]
    },
    "unk.0x8001d75": {
        "function_address": "0x08001d75",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r12",
            "push rbx",
            "sub rsp, 0xc0",
            "mov rbx, qword [rdi + 0xd0]",
            "test rbx, rbx",
            "je 0x8001f80",
            "cmp esi, 0xc0046365",
            "mov r12, rdx",
            "je 0x8001db8",
            "jbe 0x8001d90",
            "cmp esi, 0xc01c6368",
            "je 0x8001dd0",
            "cmp esi, 0xc10c636b",
            "je 0x8001db8",
            "cmp esi, 0xc01c6366",
            "jne 0x8001da0",
            "lea rdi, [rbp - 0xc4]",
            "mov edx, 0x1c",
            "mov rsi, r12",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x8001f9f",
            "mov eax, dword [rbp - 0xc4]",
            "lea rsi, [rbp - 0xa8]",
            "mov rdi, rbx",
            "mov dword [rbp - 0xa8], eax",
            "mov eax, dword [rbp - 0xc0]",
            "mov dword [rbp - 0xa4], eax",
            "mov eax, dword [rbp - 0xbc]",
            "mov dword [rbp - 0xa0], eax",
            "mov eax, dword [rbp - 0xb8]",
            "mov qword [rbp - 0x98], rax",
            "mov eax, dword [rbp - 0xb4]",
            "mov dword [rbp - 0x90], eax",
            "mov eax, dword [rbp - 0xb0]",
            "mov qword [rbp - 0x88], rax",
            "mov eax, dword [rbp - 0xac]",
            "mov dword [rbp - 0x80], eax",
            "call sym.crypto_create_session",
            "test eax, eax",
            "jne 0x8001f87",
            "mov eax, dword [rbp - 0xa8]",
            "lea rsi, [rbp - 0xc4]",
            "mov edx, 0x1c",
            "mov rdi, r12",
            "mov dword [rbp - 0xc4], eax",
            "mov eax, dword [rbp - 0xa4]",
            "mov dword [rbp - 0xc0], eax",
            "mov eax, dword [rbp - 0xa0]",
            "mov dword [rbp - 0xbc], eax",
            "mov rax, qword [rbp - 0x98]",
            "mov dword [rbp - 0xb8], eax",
            "mov eax, dword [rbp - 0x90]",
            "mov dword [rbp - 0xb4], eax",
            "mov rax, qword [rbp - 0x88]",
            "mov dword [rbp - 0xb0], eax",
            "mov eax, dword [rbp - 0x80]",
            "mov dword [rbp - 0xac], eax",
            "call _copy_to_user",
            "test eax, eax",
            "jne 0x8001f69",
            "add rsp, 0xc0",
            "xor eax, eax",
            "pop rbx",
            "pop r12",
            "pop rbp",
            "ret",
            "cmp esi, 0x40046367",
            "je 0x8001db8",
            "cmp esi, 0x8004636a",
            "je 0x8001db8",
            "mov rax, 0xffffffffffffffea",
            "add rsp, 0xc0",
            "pop rbx",
            "pop r12",
            "pop rbp",
            "ret",
            "mov rdx, r12",
            "call sym.cryptodev_ioctl",
            "add rsp, 0xc0",
            "pop rbx",
            "pop r12",
            "pop rbp",
            "ret",
            "lea rdi, [rbp - 0xc4]",
            "mov edx, 0x1c",
            "mov rsi, r12",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x8001f82",
            "mov eax, dword [rbp - 0xc4]",
            "lea rdi, [rbp - 0xa8]",
            "mov rsi, rbx",
            "mov dword [rbp - 0xa8], eax",
            "movzx eax, word [rbp - 0xc0]",
            "mov word [rbp - 0xa4], ax",
            "movzx eax, word [rbp - 0xbe]",
            "mov word [rbp - 0xa2], ax",
            "mov eax, dword [rbp - 0xbc]",
            "mov dword [rbp - 0xa0], eax",
            "mov eax, dword [rbp - 0xb8]",
            "mov qword [rbp - 0x98], rax",
            "mov eax, dword [rbp - 0xb4]",
            "mov qword [rbp - 0x90], rax",
            "mov eax, dword [rbp - 0xb0]",
            "mov qword [rbp - 0x88], rax",
            "mov eax, dword [rbp - 0xac]",
            "mov qword [rbp - 0x80], rax",
            "call sym.fill_kcop_from_cop",
            "test eax, eax",
            "jne 0x8001f87",
            "lea rsi, [rbp - 0xa8]",
            "mov rdi, rbx",
            "call crypto_run",
            "test eax, eax",
            "jne 0x8001f87",
            "lea rdi, [rbp - 0xa8]",
            "call sym.fill_cop_from_kcop.isra.4",
            "test eax, eax",
            "mov ebx, eax",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbp - 0xa8]",
            "lea rsi, [rbp - 0xc4]",
            "mov edx, 0x1c",
            "mov rdi, r12",
            "mov dword [rbp - 0xc4], eax",
            "movzx eax, word [rbp - 0xa4]",
            "mov word [rbp - 0xc0], ax",
            "movzx eax, word [rbp - 0xa2]",
            "mov word [rbp - 0xbe], ax",
            "mov eax, dword [rbp - 0xa0]",
            "mov dword [rbp - 0xbc], eax",
            "mov rax, qword [rbp - 0x98]",
            "mov dword [rbp - 0xb8], eax",
            "mov rax, qword [rbp - 0x90]",
            "mov dword [rbp - 0xb4], eax",
            "mov rax, qword [rbp - 0x88]",
            "mov dword [rbp - 0xb0], eax",
            "mov rax, qword [rbp - 0x80]",
            "mov dword [rbp - 0xac], eax",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x8001d7d",
            "cmp dword [0x08001f1f], 0",
            "mov rax, 0xfffffffffffffff2",
            "jle 0x8001da7",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x3d5",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov rax, 0xfffffffffffffff2",
            "jmp 0x8001da7",
            "mov esi, dword [rbp - 0x80]",
            "mov rdi, rbx",
            "call sym.crypto_finish_session",
            "mov rax, 0xfffffffffffffff2",
            "jmp 0x8001da7",
            "ud2",
            "mov eax, 0xfffffff2",
            "cdqe",
            "jmp 0x8001da7",
            "cmp dword [0x08001f95], 0",
            "jg 0x8001fab",
            "movsxd rax, ebx",
            "jmp 0x8001da7",
            "mov rax, 0xfffffffffffffff2",
            "jmp 0x8001da7",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x3cf",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8001f97"
        ]
    },
    "unk.0x8001de4": {
        "function_address": "0x08001de4",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r12",
            "push rbx",
            "sub rsp, 0xc0",
            "mov rbx, qword [rdi + 0xd0]",
            "test rbx, rbx",
            "je 0x8001f80",
            "cmp esi, 0xc0046365",
            "mov r12, rdx",
            "je 0x8001db8",
            "jbe 0x8001d90",
            "cmp esi, 0xc01c6368",
            "je 0x8001dd0",
            "cmp esi, 0xc10c636b",
            "je 0x8001db8",
            "cmp esi, 0xc01c6366",
            "jne 0x8001da0",
            "lea rdi, [rbp - 0xc4]",
            "mov edx, 0x1c",
            "mov rsi, r12",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x8001f9f",
            "mov eax, dword [rbp - 0xc4]",
            "lea rsi, [rbp - 0xa8]",
            "mov rdi, rbx",
            "mov dword [rbp - 0xa8], eax",
            "mov eax, dword [rbp - 0xc0]",
            "mov dword [rbp - 0xa4], eax",
            "mov eax, dword [rbp - 0xbc]",
            "mov dword [rbp - 0xa0], eax",
            "mov eax, dword [rbp - 0xb8]",
            "mov qword [rbp - 0x98], rax",
            "mov eax, dword [rbp - 0xb4]",
            "mov dword [rbp - 0x90], eax",
            "mov eax, dword [rbp - 0xb0]",
            "mov qword [rbp - 0x88], rax",
            "mov eax, dword [rbp - 0xac]",
            "mov dword [rbp - 0x80], eax",
            "call sym.crypto_create_session",
            "test eax, eax",
            "jne 0x8001f87",
            "mov eax, dword [rbp - 0xa8]",
            "lea rsi, [rbp - 0xc4]",
            "mov edx, 0x1c",
            "mov rdi, r12",
            "mov dword [rbp - 0xc4], eax",
            "mov eax, dword [rbp - 0xa4]",
            "mov dword [rbp - 0xc0], eax",
            "mov eax, dword [rbp - 0xa0]",
            "mov dword [rbp - 0xbc], eax",
            "mov rax, qword [rbp - 0x98]",
            "mov dword [rbp - 0xb8], eax",
            "mov eax, dword [rbp - 0x90]",
            "mov dword [rbp - 0xb4], eax",
            "mov rax, qword [rbp - 0x88]",
            "mov dword [rbp - 0xb0], eax",
            "mov eax, dword [rbp - 0x80]",
            "mov dword [rbp - 0xac], eax",
            "call _copy_to_user",
            "test eax, eax",
            "jne 0x8001f69",
            "add rsp, 0xc0",
            "xor eax, eax",
            "pop rbx",
            "pop r12",
            "pop rbp",
            "ret",
            "cmp esi, 0x40046367",
            "je 0x8001db8",
            "cmp esi, 0x8004636a",
            "je 0x8001db8",
            "mov rax, 0xffffffffffffffea",
            "add rsp, 0xc0",
            "pop rbx",
            "pop r12",
            "pop rbp",
            "ret",
            "mov rdx, r12",
            "call sym.cryptodev_ioctl",
            "add rsp, 0xc0",
            "pop rbx",
            "pop r12",
            "pop rbp",
            "ret",
            "lea rdi, [rbp - 0xc4]",
            "mov edx, 0x1c",
            "mov rsi, r12",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x8001f82",
            "mov eax, dword [rbp - 0xc4]",
            "lea rdi, [rbp - 0xa8]",
            "mov rsi, rbx",
            "mov dword [rbp - 0xa8], eax",
            "movzx eax, word [rbp - 0xc0]",
            "mov word [rbp - 0xa4], ax",
            "movzx eax, word [rbp - 0xbe]",
            "mov word [rbp - 0xa2], ax",
            "mov eax, dword [rbp - 0xbc]",
            "mov dword [rbp - 0xa0], eax",
            "mov eax, dword [rbp - 0xb8]",
            "mov qword [rbp - 0x98], rax",
            "mov eax, dword [rbp - 0xb4]",
            "mov qword [rbp - 0x90], rax",
            "mov eax, dword [rbp - 0xb0]",
            "mov qword [rbp - 0x88], rax",
            "mov eax, dword [rbp - 0xac]",
            "mov qword [rbp - 0x80], rax",
            "call sym.fill_kcop_from_cop",
            "test eax, eax",
            "jne 0x8001f87",
            "lea rsi, [rbp - 0xa8]",
            "mov rdi, rbx",
            "call crypto_run",
            "test eax, eax",
            "jne 0x8001f87",
            "lea rdi, [rbp - 0xa8]",
            "call sym.fill_cop_from_kcop.isra.4",
            "test eax, eax",
            "mov ebx, eax",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbp - 0xa8]",
            "lea rsi, [rbp - 0xc4]",
            "mov edx, 0x1c",
            "mov rdi, r12",
            "mov dword [rbp - 0xc4], eax",
            "movzx eax, word [rbp - 0xa4]",
            "mov word [rbp - 0xc0], ax",
            "movzx eax, word [rbp - 0xa2]",
            "mov word [rbp - 0xbe], ax",
            "mov eax, dword [rbp - 0xa0]",
            "mov dword [rbp - 0xbc], eax",
            "mov rax, qword [rbp - 0x98]",
            "mov dword [rbp - 0xb8], eax",
            "mov rax, qword [rbp - 0x90]",
            "mov dword [rbp - 0xb4], eax",
            "mov rax, qword [rbp - 0x88]",
            "mov dword [rbp - 0xb0], eax",
            "mov rax, qword [rbp - 0x80]",
            "mov dword [rbp - 0xac], eax",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x8001d7d",
            "cmp dword [0x08001f1f], 0",
            "mov rax, 0xfffffffffffffff2",
            "jle 0x8001da7",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x3d5",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov rax, 0xfffffffffffffff2",
            "jmp 0x8001da7",
            "mov esi, dword [rbp - 0x80]",
            "mov rdi, rbx",
            "call sym.crypto_finish_session",
            "mov rax, 0xfffffffffffffff2",
            "jmp 0x8001da7",
            "ud2",
            "mov eax, 0xfffffff2",
            "cdqe",
            "jmp 0x8001da7",
            "cmp dword [0x08001f95], 0",
            "jg 0x8001fab",
            "movsxd rax, ebx",
            "jmp 0x8001da7",
            "mov rax, 0xfffffffffffffff2",
            "jmp 0x8001da7",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x3cf",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8001f97"
        ]
    },
    "unk.0x8001e78": {
        "function_address": "0x08001e78",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r12",
            "push rbx",
            "sub rsp, 0xc0",
            "mov rbx, qword [rdi + 0xd0]",
            "test rbx, rbx",
            "je 0x8001f80",
            "cmp esi, 0xc0046365",
            "mov r12, rdx",
            "je 0x8001db8",
            "jbe 0x8001d90",
            "cmp esi, 0xc01c6368",
            "je 0x8001dd0",
            "cmp esi, 0xc10c636b",
            "je 0x8001db8",
            "cmp esi, 0xc01c6366",
            "jne 0x8001da0",
            "lea rdi, [rbp - 0xc4]",
            "mov edx, 0x1c",
            "mov rsi, r12",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x8001f9f",
            "mov eax, dword [rbp - 0xc4]",
            "lea rsi, [rbp - 0xa8]",
            "mov rdi, rbx",
            "mov dword [rbp - 0xa8], eax",
            "mov eax, dword [rbp - 0xc0]",
            "mov dword [rbp - 0xa4], eax",
            "mov eax, dword [rbp - 0xbc]",
            "mov dword [rbp - 0xa0], eax",
            "mov eax, dword [rbp - 0xb8]",
            "mov qword [rbp - 0x98], rax",
            "mov eax, dword [rbp - 0xb4]",
            "mov dword [rbp - 0x90], eax",
            "mov eax, dword [rbp - 0xb0]",
            "mov qword [rbp - 0x88], rax",
            "mov eax, dword [rbp - 0xac]",
            "mov dword [rbp - 0x80], eax",
            "call sym.crypto_create_session",
            "test eax, eax",
            "jne 0x8001f87",
            "mov eax, dword [rbp - 0xa8]",
            "lea rsi, [rbp - 0xc4]",
            "mov edx, 0x1c",
            "mov rdi, r12",
            "mov dword [rbp - 0xc4], eax",
            "mov eax, dword [rbp - 0xa4]",
            "mov dword [rbp - 0xc0], eax",
            "mov eax, dword [rbp - 0xa0]",
            "mov dword [rbp - 0xbc], eax",
            "mov rax, qword [rbp - 0x98]",
            "mov dword [rbp - 0xb8], eax",
            "mov eax, dword [rbp - 0x90]",
            "mov dword [rbp - 0xb4], eax",
            "mov rax, qword [rbp - 0x88]",
            "mov dword [rbp - 0xb0], eax",
            "mov eax, dword [rbp - 0x80]",
            "mov dword [rbp - 0xac], eax",
            "call _copy_to_user",
            "test eax, eax",
            "jne 0x8001f69",
            "add rsp, 0xc0",
            "xor eax, eax",
            "pop rbx",
            "pop r12",
            "pop rbp",
            "ret",
            "cmp esi, 0x40046367",
            "je 0x8001db8",
            "cmp esi, 0x8004636a",
            "je 0x8001db8",
            "mov rax, 0xffffffffffffffea",
            "add rsp, 0xc0",
            "pop rbx",
            "pop r12",
            "pop rbp",
            "ret",
            "mov rdx, r12",
            "call sym.cryptodev_ioctl",
            "add rsp, 0xc0",
            "pop rbx",
            "pop r12",
            "pop rbp",
            "ret",
            "lea rdi, [rbp - 0xc4]",
            "mov edx, 0x1c",
            "mov rsi, r12",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x8001f82",
            "mov eax, dword [rbp - 0xc4]",
            "lea rdi, [rbp - 0xa8]",
            "mov rsi, rbx",
            "mov dword [rbp - 0xa8], eax",
            "movzx eax, word [rbp - 0xc0]",
            "mov word [rbp - 0xa4], ax",
            "movzx eax, word [rbp - 0xbe]",
            "mov word [rbp - 0xa2], ax",
            "mov eax, dword [rbp - 0xbc]",
            "mov dword [rbp - 0xa0], eax",
            "mov eax, dword [rbp - 0xb8]",
            "mov qword [rbp - 0x98], rax",
            "mov eax, dword [rbp - 0xb4]",
            "mov qword [rbp - 0x90], rax",
            "mov eax, dword [rbp - 0xb0]",
            "mov qword [rbp - 0x88], rax",
            "mov eax, dword [rbp - 0xac]",
            "mov qword [rbp - 0x80], rax",
            "call sym.fill_kcop_from_cop",
            "test eax, eax",
            "jne 0x8001f87",
            "lea rsi, [rbp - 0xa8]",
            "mov rdi, rbx",
            "call crypto_run",
            "test eax, eax",
            "jne 0x8001f87",
            "lea rdi, [rbp - 0xa8]",
            "call sym.fill_cop_from_kcop.isra.4",
            "test eax, eax",
            "mov ebx, eax",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbp - 0xa8]",
            "lea rsi, [rbp - 0xc4]",
            "mov edx, 0x1c",
            "mov rdi, r12",
            "mov dword [rbp - 0xc4], eax",
            "movzx eax, word [rbp - 0xa4]",
            "mov word [rbp - 0xc0], ax",
            "movzx eax, word [rbp - 0xa2]",
            "mov word [rbp - 0xbe], ax",
            "mov eax, dword [rbp - 0xa0]",
            "mov dword [rbp - 0xbc], eax",
            "mov rax, qword [rbp - 0x98]",
            "mov dword [rbp - 0xb8], eax",
            "mov rax, qword [rbp - 0x90]",
            "mov dword [rbp - 0xb4], eax",
            "mov rax, qword [rbp - 0x88]",
            "mov dword [rbp - 0xb0], eax",
            "mov rax, qword [rbp - 0x80]",
            "mov dword [rbp - 0xac], eax",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x8001d7d",
            "cmp dword [0x08001f1f], 0",
            "mov rax, 0xfffffffffffffff2",
            "jle 0x8001da7",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x3d5",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov rax, 0xfffffffffffffff2",
            "jmp 0x8001da7",
            "mov esi, dword [rbp - 0x80]",
            "mov rdi, rbx",
            "call sym.crypto_finish_session",
            "mov rax, 0xfffffffffffffff2",
            "jmp 0x8001da7",
            "ud2",
            "mov eax, 0xfffffff2",
            "cdqe",
            "jmp 0x8001da7",
            "cmp dword [0x08001f95], 0",
            "jg 0x8001fab",
            "movsxd rax, ebx",
            "jmp 0x8001da7",
            "mov rax, 0xfffffffffffffff2",
            "jmp 0x8001da7",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x3cf",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8001f97"
        ]
    },
    "unk.0x8001f0f": {
        "function_address": "0x08001f0f",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r12",
            "push rbx",
            "sub rsp, 0xc0",
            "mov rbx, qword [rdi + 0xd0]",
            "test rbx, rbx",
            "je 0x8001f80",
            "cmp esi, 0xc0046365",
            "mov r12, rdx",
            "je 0x8001db8",
            "jbe 0x8001d90",
            "cmp esi, 0xc01c6368",
            "je 0x8001dd0",
            "cmp esi, 0xc10c636b",
            "je 0x8001db8",
            "cmp esi, 0xc01c6366",
            "jne 0x8001da0",
            "lea rdi, [rbp - 0xc4]",
            "mov edx, 0x1c",
            "mov rsi, r12",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x8001f9f",
            "mov eax, dword [rbp - 0xc4]",
            "lea rsi, [rbp - 0xa8]",
            "mov rdi, rbx",
            "mov dword [rbp - 0xa8], eax",
            "mov eax, dword [rbp - 0xc0]",
            "mov dword [rbp - 0xa4], eax",
            "mov eax, dword [rbp - 0xbc]",
            "mov dword [rbp - 0xa0], eax",
            "mov eax, dword [rbp - 0xb8]",
            "mov qword [rbp - 0x98], rax",
            "mov eax, dword [rbp - 0xb4]",
            "mov dword [rbp - 0x90], eax",
            "mov eax, dword [rbp - 0xb0]",
            "mov qword [rbp - 0x88], rax",
            "mov eax, dword [rbp - 0xac]",
            "mov dword [rbp - 0x80], eax",
            "call sym.crypto_create_session",
            "test eax, eax",
            "jne 0x8001f87",
            "mov eax, dword [rbp - 0xa8]",
            "lea rsi, [rbp - 0xc4]",
            "mov edx, 0x1c",
            "mov rdi, r12",
            "mov dword [rbp - 0xc4], eax",
            "mov eax, dword [rbp - 0xa4]",
            "mov dword [rbp - 0xc0], eax",
            "mov eax, dword [rbp - 0xa0]",
            "mov dword [rbp - 0xbc], eax",
            "mov rax, qword [rbp - 0x98]",
            "mov dword [rbp - 0xb8], eax",
            "mov eax, dword [rbp - 0x90]",
            "mov dword [rbp - 0xb4], eax",
            "mov rax, qword [rbp - 0x88]",
            "mov dword [rbp - 0xb0], eax",
            "mov eax, dword [rbp - 0x80]",
            "mov dword [rbp - 0xac], eax",
            "call _copy_to_user",
            "test eax, eax",
            "jne 0x8001f69",
            "add rsp, 0xc0",
            "xor eax, eax",
            "pop rbx",
            "pop r12",
            "pop rbp",
            "ret",
            "cmp esi, 0x40046367",
            "je 0x8001db8",
            "cmp esi, 0x8004636a",
            "je 0x8001db8",
            "mov rax, 0xffffffffffffffea",
            "add rsp, 0xc0",
            "pop rbx",
            "pop r12",
            "pop rbp",
            "ret",
            "mov rdx, r12",
            "call sym.cryptodev_ioctl",
            "add rsp, 0xc0",
            "pop rbx",
            "pop r12",
            "pop rbp",
            "ret",
            "lea rdi, [rbp - 0xc4]",
            "mov edx, 0x1c",
            "mov rsi, r12",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x8001f82",
            "mov eax, dword [rbp - 0xc4]",
            "lea rdi, [rbp - 0xa8]",
            "mov rsi, rbx",
            "mov dword [rbp - 0xa8], eax",
            "movzx eax, word [rbp - 0xc0]",
            "mov word [rbp - 0xa4], ax",
            "movzx eax, word [rbp - 0xbe]",
            "mov word [rbp - 0xa2], ax",
            "mov eax, dword [rbp - 0xbc]",
            "mov dword [rbp - 0xa0], eax",
            "mov eax, dword [rbp - 0xb8]",
            "mov qword [rbp - 0x98], rax",
            "mov eax, dword [rbp - 0xb4]",
            "mov qword [rbp - 0x90], rax",
            "mov eax, dword [rbp - 0xb0]",
            "mov qword [rbp - 0x88], rax",
            "mov eax, dword [rbp - 0xac]",
            "mov qword [rbp - 0x80], rax",
            "call sym.fill_kcop_from_cop",
            "test eax, eax",
            "jne 0x8001f87",
            "lea rsi, [rbp - 0xa8]",
            "mov rdi, rbx",
            "call crypto_run",
            "test eax, eax",
            "jne 0x8001f87",
            "lea rdi, [rbp - 0xa8]",
            "call sym.fill_cop_from_kcop.isra.4",
            "test eax, eax",
            "mov ebx, eax",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbp - 0xa8]",
            "lea rsi, [rbp - 0xc4]",
            "mov edx, 0x1c",
            "mov rdi, r12",
            "mov dword [rbp - 0xc4], eax",
            "movzx eax, word [rbp - 0xa4]",
            "mov word [rbp - 0xc0], ax",
            "movzx eax, word [rbp - 0xa2]",
            "mov word [rbp - 0xbe], ax",
            "mov eax, dword [rbp - 0xa0]",
            "mov dword [rbp - 0xbc], eax",
            "mov rax, qword [rbp - 0x98]",
            "mov dword [rbp - 0xb8], eax",
            "mov rax, qword [rbp - 0x90]",
            "mov dword [rbp - 0xb4], eax",
            "mov rax, qword [rbp - 0x88]",
            "mov dword [rbp - 0xb0], eax",
            "mov rax, qword [rbp - 0x80]",
            "mov dword [rbp - 0xac], eax",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x8001d7d",
            "cmp dword [0x08001f1f], 0",
            "mov rax, 0xfffffffffffffff2",
            "jle 0x8001da7",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x3d5",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov rax, 0xfffffffffffffff2",
            "jmp 0x8001da7",
            "mov esi, dword [rbp - 0x80]",
            "mov rdi, rbx",
            "call sym.crypto_finish_session",
            "mov rax, 0xfffffffffffffff2",
            "jmp 0x8001da7",
            "ud2",
            "mov eax, 0xfffffff2",
            "cdqe",
            "jmp 0x8001da7",
            "cmp dword [0x08001f95], 0",
            "jg 0x8001fab",
            "movsxd rax, ebx",
            "jmp 0x8001da7",
            "mov rax, 0xfffffffffffffff2",
            "jmp 0x8001da7",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x3cf",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8001f97"
        ]
    },
    "unk.0x8001f5d": {
        "function_address": "0x08001f5d",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r12",
            "push rbx",
            "sub rsp, 0xc0",
            "mov rbx, qword [rdi + 0xd0]",
            "test rbx, rbx",
            "je 0x8001f80",
            "cmp esi, 0xc0046365",
            "mov r12, rdx",
            "je 0x8001db8",
            "jbe 0x8001d90",
            "cmp esi, 0xc01c6368",
            "je 0x8001dd0",
            "cmp esi, 0xc10c636b",
            "je 0x8001db8",
            "cmp esi, 0xc01c6366",
            "jne 0x8001da0",
            "lea rdi, [rbp - 0xc4]",
            "mov edx, 0x1c",
            "mov rsi, r12",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x8001f9f",
            "mov eax, dword [rbp - 0xc4]",
            "lea rsi, [rbp - 0xa8]",
            "mov rdi, rbx",
            "mov dword [rbp - 0xa8], eax",
            "mov eax, dword [rbp - 0xc0]",
            "mov dword [rbp - 0xa4], eax",
            "mov eax, dword [rbp - 0xbc]",
            "mov dword [rbp - 0xa0], eax",
            "mov eax, dword [rbp - 0xb8]",
            "mov qword [rbp - 0x98], rax",
            "mov eax, dword [rbp - 0xb4]",
            "mov dword [rbp - 0x90], eax",
            "mov eax, dword [rbp - 0xb0]",
            "mov qword [rbp - 0x88], rax",
            "mov eax, dword [rbp - 0xac]",
            "mov dword [rbp - 0x80], eax",
            "call sym.crypto_create_session",
            "test eax, eax",
            "jne 0x8001f87",
            "mov eax, dword [rbp - 0xa8]",
            "lea rsi, [rbp - 0xc4]",
            "mov edx, 0x1c",
            "mov rdi, r12",
            "mov dword [rbp - 0xc4], eax",
            "mov eax, dword [rbp - 0xa4]",
            "mov dword [rbp - 0xc0], eax",
            "mov eax, dword [rbp - 0xa0]",
            "mov dword [rbp - 0xbc], eax",
            "mov rax, qword [rbp - 0x98]",
            "mov dword [rbp - 0xb8], eax",
            "mov eax, dword [rbp - 0x90]",
            "mov dword [rbp - 0xb4], eax",
            "mov rax, qword [rbp - 0x88]",
            "mov dword [rbp - 0xb0], eax",
            "mov eax, dword [rbp - 0x80]",
            "mov dword [rbp - 0xac], eax",
            "call _copy_to_user",
            "test eax, eax",
            "jne 0x8001f69",
            "add rsp, 0xc0",
            "xor eax, eax",
            "pop rbx",
            "pop r12",
            "pop rbp",
            "ret",
            "cmp esi, 0x40046367",
            "je 0x8001db8",
            "cmp esi, 0x8004636a",
            "je 0x8001db8",
            "mov rax, 0xffffffffffffffea",
            "add rsp, 0xc0",
            "pop rbx",
            "pop r12",
            "pop rbp",
            "ret",
            "mov rdx, r12",
            "call sym.cryptodev_ioctl",
            "add rsp, 0xc0",
            "pop rbx",
            "pop r12",
            "pop rbp",
            "ret",
            "lea rdi, [rbp - 0xc4]",
            "mov edx, 0x1c",
            "mov rsi, r12",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x8001f82",
            "mov eax, dword [rbp - 0xc4]",
            "lea rdi, [rbp - 0xa8]",
            "mov rsi, rbx",
            "mov dword [rbp - 0xa8], eax",
            "movzx eax, word [rbp - 0xc0]",
            "mov word [rbp - 0xa4], ax",
            "movzx eax, word [rbp - 0xbe]",
            "mov word [rbp - 0xa2], ax",
            "mov eax, dword [rbp - 0xbc]",
            "mov dword [rbp - 0xa0], eax",
            "mov eax, dword [rbp - 0xb8]",
            "mov qword [rbp - 0x98], rax",
            "mov eax, dword [rbp - 0xb4]",
            "mov qword [rbp - 0x90], rax",
            "mov eax, dword [rbp - 0xb0]",
            "mov qword [rbp - 0x88], rax",
            "mov eax, dword [rbp - 0xac]",
            "mov qword [rbp - 0x80], rax",
            "call sym.fill_kcop_from_cop",
            "test eax, eax",
            "jne 0x8001f87",
            "lea rsi, [rbp - 0xa8]",
            "mov rdi, rbx",
            "call crypto_run",
            "test eax, eax",
            "jne 0x8001f87",
            "lea rdi, [rbp - 0xa8]",
            "call sym.fill_cop_from_kcop.isra.4",
            "test eax, eax",
            "mov ebx, eax",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbp - 0xa8]",
            "lea rsi, [rbp - 0xc4]",
            "mov edx, 0x1c",
            "mov rdi, r12",
            "mov dword [rbp - 0xc4], eax",
            "movzx eax, word [rbp - 0xa4]",
            "mov word [rbp - 0xc0], ax",
            "movzx eax, word [rbp - 0xa2]",
            "mov word [rbp - 0xbe], ax",
            "mov eax, dword [rbp - 0xa0]",
            "mov dword [rbp - 0xbc], eax",
            "mov rax, qword [rbp - 0x98]",
            "mov dword [rbp - 0xb8], eax",
            "mov rax, qword [rbp - 0x90]",
            "mov dword [rbp - 0xb4], eax",
            "mov rax, qword [rbp - 0x88]",
            "mov dword [rbp - 0xb0], eax",
            "mov rax, qword [rbp - 0x80]",
            "mov dword [rbp - 0xac], eax",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x8001d7d",
            "cmp dword [0x08001f1f], 0",
            "mov rax, 0xfffffffffffffff2",
            "jle 0x8001da7",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x3d5",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov rax, 0xfffffffffffffff2",
            "jmp 0x8001da7",
            "mov esi, dword [rbp - 0x80]",
            "mov rdi, rbx",
            "call sym.crypto_finish_session",
            "mov rax, 0xfffffffffffffff2",
            "jmp 0x8001da7",
            "ud2",
            "mov eax, 0xfffffff2",
            "cdqe",
            "jmp 0x8001da7",
            "cmp dword [0x08001f95], 0",
            "jg 0x8001fab",
            "movsxd rax, ebx",
            "jmp 0x8001da7",
            "mov rax, 0xfffffffffffffff2",
            "jmp 0x8001da7",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x3cf",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8001f97"
        ]
    },
    "unk.0x8001fdc": {
        "function_address": "0x08001fdc",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r12",
            "push rbx",
            "sub rsp, 0xc0",
            "mov rbx, qword [rdi + 0xd0]",
            "test rbx, rbx",
            "je 0x8001f80",
            "cmp esi, 0xc0046365",
            "mov r12, rdx",
            "je 0x8001db8",
            "jbe 0x8001d90",
            "cmp esi, 0xc01c6368",
            "je 0x8001dd0",
            "cmp esi, 0xc10c636b",
            "je 0x8001db8",
            "cmp esi, 0xc01c6366",
            "jne 0x8001da0",
            "lea rdi, [rbp - 0xc4]",
            "mov edx, 0x1c",
            "mov rsi, r12",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x8001f9f",
            "mov eax, dword [rbp - 0xc4]",
            "lea rsi, [rbp - 0xa8]",
            "mov rdi, rbx",
            "mov dword [rbp - 0xa8], eax",
            "mov eax, dword [rbp - 0xc0]",
            "mov dword [rbp - 0xa4], eax",
            "mov eax, dword [rbp - 0xbc]",
            "mov dword [rbp - 0xa0], eax",
            "mov eax, dword [rbp - 0xb8]",
            "mov qword [rbp - 0x98], rax",
            "mov eax, dword [rbp - 0xb4]",
            "mov dword [rbp - 0x90], eax",
            "mov eax, dword [rbp - 0xb0]",
            "mov qword [rbp - 0x88], rax",
            "mov eax, dword [rbp - 0xac]",
            "mov dword [rbp - 0x80], eax",
            "call sym.crypto_create_session",
            "test eax, eax",
            "jne 0x8001f87",
            "mov eax, dword [rbp - 0xa8]",
            "lea rsi, [rbp - 0xc4]",
            "mov edx, 0x1c",
            "mov rdi, r12",
            "mov dword [rbp - 0xc4], eax",
            "mov eax, dword [rbp - 0xa4]",
            "mov dword [rbp - 0xc0], eax",
            "mov eax, dword [rbp - 0xa0]",
            "mov dword [rbp - 0xbc], eax",
            "mov rax, qword [rbp - 0x98]",
            "mov dword [rbp - 0xb8], eax",
            "mov eax, dword [rbp - 0x90]",
            "mov dword [rbp - 0xb4], eax",
            "mov rax, qword [rbp - 0x88]",
            "mov dword [rbp - 0xb0], eax",
            "mov eax, dword [rbp - 0x80]",
            "mov dword [rbp - 0xac], eax",
            "call _copy_to_user",
            "test eax, eax",
            "jne 0x8001f69",
            "add rsp, 0xc0",
            "xor eax, eax",
            "pop rbx",
            "pop r12",
            "pop rbp",
            "ret",
            "cmp esi, 0x40046367",
            "je 0x8001db8",
            "cmp esi, 0x8004636a",
            "je 0x8001db8",
            "mov rax, 0xffffffffffffffea",
            "add rsp, 0xc0",
            "pop rbx",
            "pop r12",
            "pop rbp",
            "ret",
            "mov rdx, r12",
            "call sym.cryptodev_ioctl",
            "add rsp, 0xc0",
            "pop rbx",
            "pop r12",
            "pop rbp",
            "ret",
            "lea rdi, [rbp - 0xc4]",
            "mov edx, 0x1c",
            "mov rsi, r12",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x8001f82",
            "mov eax, dword [rbp - 0xc4]",
            "lea rdi, [rbp - 0xa8]",
            "mov rsi, rbx",
            "mov dword [rbp - 0xa8], eax",
            "movzx eax, word [rbp - 0xc0]",
            "mov word [rbp - 0xa4], ax",
            "movzx eax, word [rbp - 0xbe]",
            "mov word [rbp - 0xa2], ax",
            "mov eax, dword [rbp - 0xbc]",
            "mov dword [rbp - 0xa0], eax",
            "mov eax, dword [rbp - 0xb8]",
            "mov qword [rbp - 0x98], rax",
            "mov eax, dword [rbp - 0xb4]",
            "mov qword [rbp - 0x90], rax",
            "mov eax, dword [rbp - 0xb0]",
            "mov qword [rbp - 0x88], rax",
            "mov eax, dword [rbp - 0xac]",
            "mov qword [rbp - 0x80], rax",
            "call sym.fill_kcop_from_cop",
            "test eax, eax",
            "jne 0x8001f87",
            "lea rsi, [rbp - 0xa8]",
            "mov rdi, rbx",
            "call crypto_run",
            "test eax, eax",
            "jne 0x8001f87",
            "lea rdi, [rbp - 0xa8]",
            "call sym.fill_cop_from_kcop.isra.4",
            "test eax, eax",
            "mov ebx, eax",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbp - 0xa8]",
            "lea rsi, [rbp - 0xc4]",
            "mov edx, 0x1c",
            "mov rdi, r12",
            "mov dword [rbp - 0xc4], eax",
            "movzx eax, word [rbp - 0xa4]",
            "mov word [rbp - 0xc0], ax",
            "movzx eax, word [rbp - 0xa2]",
            "mov word [rbp - 0xbe], ax",
            "mov eax, dword [rbp - 0xa0]",
            "mov dword [rbp - 0xbc], eax",
            "mov rax, qword [rbp - 0x98]",
            "mov dword [rbp - 0xb8], eax",
            "mov rax, qword [rbp - 0x90]",
            "mov dword [rbp - 0xb4], eax",
            "mov rax, qword [rbp - 0x88]",
            "mov dword [rbp - 0xb0], eax",
            "mov rax, qword [rbp - 0x80]",
            "mov dword [rbp - 0xac], eax",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x8001d7d",
            "cmp dword [0x08001f1f], 0",
            "mov rax, 0xfffffffffffffff2",
            "jle 0x8001da7",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x3d5",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov rax, 0xfffffffffffffff2",
            "jmp 0x8001da7",
            "mov esi, dword [rbp - 0x80]",
            "mov rdi, rbx",
            "call sym.crypto_finish_session",
            "mov rax, 0xfffffffffffffff2",
            "jmp 0x8001da7",
            "ud2",
            "mov eax, 0xfffffff2",
            "cdqe",
            "jmp 0x8001da7",
            "cmp dword [0x08001f95], 0",
            "jg 0x8001fab",
            "movsxd rax, ebx",
            "jmp 0x8001da7",
            "mov rax, 0xfffffffffffffff2",
            "jmp 0x8001da7",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x3cf",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8001f97"
        ]
    },
    "sym.init_cryptodev": {
        "function_address": "0x08005940",
        "instructions": [
            "push rbp",
            "xor r8d, r8d",
            "xor eax, eax",
            "mov r9, 0",
            "mov edx, 1",
            "mov esi, 8",
            "mov rbp, rsp",
            "push rbx",
            "mov rdi, 0",
            "push rcx",
            "xor ecx, ecx",
            "call 0x800596a",
            "test rax, rax",
            "mov qword [0x08005974], rax",
            "jne 0x8005989",
            "mov rdi, 0",
            "mov ebx, 0xfffffff2",
            "call 0x8005987",
            "jmp 0x80059df",
            "mov rdi, 0",
            "call 0x8005995",
            "test eax, eax",
            "mov ebx, eax",
            "je 0x80059b7",
            "mov rdi, 0",
            "xor eax, eax",
            "call 0x80059a9",
            "mov rdi, qword [0x080059b0]",
            "call 0x80059b5",
            "jmp 0x80059df",
            "mov rdi, 0",
            "call 0x80059c3",
            "mov rsi, 0",
            "mov qword [0x080059d1], rax",
            "mov rdi, 0",
            "xor eax, eax",
            "call 0x80059df",
            "pop rdx",
            "mov eax, ebx",
            "pop rbx",
            "pop rbp",
            "ret"
        ]
    },
    "unk.0x800596a": {
        "function_address": "0x0800596a",
        "instructions": [
            "push rbp",
            "xor r8d, r8d",
            "xor eax, eax",
            "mov r9, 0",
            "mov edx, 1",
            "mov esi, 8",
            "mov rbp, rsp",
            "push rbx",
            "mov rdi, 0",
            "push rcx",
            "xor ecx, ecx",
            "call 0x800596a",
            "test rax, rax",
            "mov qword [0x08005974], rax",
            "jne 0x8005989",
            "mov rdi, 0",
            "mov ebx, 0xfffffff2",
            "call 0x8005987",
            "jmp 0x80059df",
            "mov rdi, 0",
            "call 0x8005995",
            "test eax, eax",
            "mov ebx, eax",
            "je 0x80059b7",
            "mov rdi, 0",
            "xor eax, eax",
            "call 0x80059a9",
            "mov rdi, qword [0x080059b0]",
            "call 0x80059b5",
            "jmp 0x80059df",
            "mov rdi, 0",
            "call 0x80059c3",
            "mov rsi, 0",
            "mov qword [0x080059d1], rax",
            "mov rdi, 0",
            "xor eax, eax",
            "call 0x80059df",
            "pop rdx",
            "mov eax, ebx",
            "pop rbx",
            "pop rbp",
            "ret"
        ]
    },
    "unk.0x8005987": {
        "function_address": "0x08005987",
        "instructions": [
            "push rbp",
            "xor r8d, r8d",
            "xor eax, eax",
            "mov r9, 0",
            "mov edx, 1",
            "mov esi, 8",
            "mov rbp, rsp",
            "push rbx",
            "mov rdi, 0",
            "push rcx",
            "xor ecx, ecx",
            "call 0x800596a",
            "test rax, rax",
            "mov qword [0x08005974], rax",
            "jne 0x8005989",
            "mov rdi, 0",
            "mov ebx, 0xfffffff2",
            "call 0x8005987",
            "jmp 0x80059df",
            "mov rdi, 0",
            "call 0x8005995",
            "test eax, eax",
            "mov ebx, eax",
            "je 0x80059b7",
            "mov rdi, 0",
            "xor eax, eax",
            "call 0x80059a9",
            "mov rdi, qword [0x080059b0]",
            "call 0x80059b5",
            "jmp 0x80059df",
            "mov rdi, 0",
            "call 0x80059c3",
            "mov rsi, 0",
            "mov qword [0x080059d1], rax",
            "mov rdi, 0",
            "xor eax, eax",
            "call 0x80059df",
            "pop rdx",
            "mov eax, ebx",
            "pop rbx",
            "pop rbp",
            "ret"
        ]
    },
    "unk.0x8005995": {
        "function_address": "0x08005995",
        "instructions": [
            "push rbp",
            "xor r8d, r8d",
            "xor eax, eax",
            "mov r9, 0",
            "mov edx, 1",
            "mov esi, 8",
            "mov rbp, rsp",
            "push rbx",
            "mov rdi, 0",
            "push rcx",
            "xor ecx, ecx",
            "call 0x800596a",
            "test rax, rax",
            "mov qword [0x08005974], rax",
            "jne 0x8005989",
            "mov rdi, 0",
            "mov ebx, 0xfffffff2",
            "call 0x8005987",
            "jmp 0x80059df",
            "mov rdi, 0",
            "call 0x8005995",
            "test eax, eax",
            "mov ebx, eax",
            "je 0x80059b7",
            "mov rdi, 0",
            "xor eax, eax",
            "call 0x80059a9",
            "mov rdi, qword [0x080059b0]",
            "call 0x80059b5",
            "jmp 0x80059df",
            "mov rdi, 0",
            "call 0x80059c3",
            "mov rsi, 0",
            "mov qword [0x080059d1], rax",
            "mov rdi, 0",
            "xor eax, eax",
            "call 0x80059df",
            "pop rdx",
            "mov eax, ebx",
            "pop rbx",
            "pop rbp",
            "ret"
        ]
    },
    "unk.0x80059a9": {
        "function_address": "0x080059a9",
        "instructions": [
            "push rbp",
            "xor r8d, r8d",
            "xor eax, eax",
            "mov r9, 0",
            "mov edx, 1",
            "mov esi, 8",
            "mov rbp, rsp",
            "push rbx",
            "mov rdi, 0",
            "push rcx",
            "xor ecx, ecx",
            "call 0x800596a",
            "test rax, rax",
            "mov qword [0x08005974], rax",
            "jne 0x8005989",
            "mov rdi, 0",
            "mov ebx, 0xfffffff2",
            "call 0x8005987",
            "jmp 0x80059df",
            "mov rdi, 0",
            "call 0x8005995",
            "test eax, eax",
            "mov ebx, eax",
            "je 0x80059b7",
            "mov rdi, 0",
            "xor eax, eax",
            "call 0x80059a9",
            "mov rdi, qword [0x080059b0]",
            "call 0x80059b5",
            "jmp 0x80059df",
            "mov rdi, 0",
            "call 0x80059c3",
            "mov rsi, 0",
            "mov qword [0x080059d1], rax",
            "mov rdi, 0",
            "xor eax, eax",
            "call 0x80059df",
            "pop rdx",
            "mov eax, ebx",
            "pop rbx",
            "pop rbp",
            "ret"
        ]
    },
    "unk.0x80059b5": {
        "function_address": "0x080059b5",
        "instructions": [
            "push rbp",
            "xor r8d, r8d",
            "xor eax, eax",
            "mov r9, 0",
            "mov edx, 1",
            "mov esi, 8",
            "mov rbp, rsp",
            "push rbx",
            "mov rdi, 0",
            "push rcx",
            "xor ecx, ecx",
            "call 0x800596a",
            "test rax, rax",
            "mov qword [0x08005974], rax",
            "jne 0x8005989",
            "mov rdi, 0",
            "mov ebx, 0xfffffff2",
            "call 0x8005987",
            "jmp 0x80059df",
            "mov rdi, 0",
            "call 0x8005995",
            "test eax, eax",
            "mov ebx, eax",
            "je 0x80059b7",
            "mov rdi, 0",
            "xor eax, eax",
            "call 0x80059a9",
            "mov rdi, qword [0x080059b0]",
            "call 0x80059b5",
            "jmp 0x80059df",
            "mov rdi, 0",
            "call 0x80059c3",
            "mov rsi, 0",
            "mov qword [0x080059d1], rax",
            "mov rdi, 0",
            "xor eax, eax",
            "call 0x80059df",
            "pop rdx",
            "mov eax, ebx",
            "pop rbx",
            "pop rbp",
            "ret"
        ]
    },
    "unk.0x80059c3": {
        "function_address": "0x080059c3",
        "instructions": [
            "push rbp",
            "xor r8d, r8d",
            "xor eax, eax",
            "mov r9, 0",
            "mov edx, 1",
            "mov esi, 8",
            "mov rbp, rsp",
            "push rbx",
            "mov rdi, 0",
            "push rcx",
            "xor ecx, ecx",
            "call 0x800596a",
            "test rax, rax",
            "mov qword [0x08005974], rax",
            "jne 0x8005989",
            "mov rdi, 0",
            "mov ebx, 0xfffffff2",
            "call 0x8005987",
            "jmp 0x80059df",
            "mov rdi, 0",
            "call 0x8005995",
            "test eax, eax",
            "mov ebx, eax",
            "je 0x80059b7",
            "mov rdi, 0",
            "xor eax, eax",
            "call 0x80059a9",
            "mov rdi, qword [0x080059b0]",
            "call 0x80059b5",
            "jmp 0x80059df",
            "mov rdi, 0",
            "call 0x80059c3",
            "mov rsi, 0",
            "mov qword [0x080059d1], rax",
            "mov rdi, 0",
            "xor eax, eax",
            "call 0x80059df",
            "pop rdx",
            "mov eax, ebx",
            "pop rbx",
            "pop rbp",
            "ret"
        ]
    },
    "unk.0x80059df": {
        "function_address": "0x080059df",
        "instructions": [
            "push rbp",
            "xor r8d, r8d",
            "xor eax, eax",
            "mov r9, 0",
            "mov edx, 1",
            "mov esi, 8",
            "mov rbp, rsp",
            "push rbx",
            "mov rdi, 0",
            "push rcx",
            "xor ecx, ecx",
            "call 0x800596a",
            "test rax, rax",
            "mov qword [0x08005974], rax",
            "jne 0x8005989",
            "mov rdi, 0",
            "mov ebx, 0xfffffff2",
            "call 0x8005987",
            "jmp 0x80059df",
            "mov rdi, 0",
            "call 0x8005995",
            "test eax, eax",
            "mov ebx, eax",
            "je 0x80059b7",
            "mov rdi, 0",
            "xor eax, eax",
            "call 0x80059a9",
            "mov rdi, qword [0x080059b0]",
            "call 0x80059b5",
            "jmp 0x80059df",
            "mov rdi, 0",
            "call 0x80059c3",
            "mov rsi, 0",
            "mov qword [0x080059d1], rax",
            "mov rdi, 0",
            "xor eax, eax",
            "call 0x80059df",
            "pop rdx",
            "mov eax, ebx",
            "pop rbx",
            "pop rbp",
            "ret"
        ]
    },
    "sym.exit_cryptodev": {
        "function_address": "0x080059e5",
        "instructions": [
            "push rbp",
            "mov rdi, qword [0x080059ed]",
            "mov rbp, rsp",
            "call 0x80059f5",
            "mov rdi, qword [0x080059fc]",
            "call 0x8005a01",
            "mov rdi, qword [0x08005a08]",
            "test rdi, rdi",
            "je 0x8005a12",
            "call 0x8005a12",
            "mov rdi, 0",
            "call 0x8005a1e",
            "mov rdi, 0",
            "xor eax, eax",
            "call 0x8005a2c",
            "pop rbp",
            "ret"
        ]
    },
    "unk.0x80059f5": {
        "function_address": "0x080059f5",
        "instructions": [
            "push rbp",
            "mov rdi, qword [0x080059ed]",
            "mov rbp, rsp",
            "call 0x80059f5",
            "mov rdi, qword [0x080059fc]",
            "call 0x8005a01",
            "mov rdi, qword [0x08005a08]",
            "test rdi, rdi",
            "je 0x8005a12",
            "call 0x8005a12",
            "mov rdi, 0",
            "call 0x8005a1e",
            "mov rdi, 0",
            "xor eax, eax",
            "call 0x8005a2c",
            "pop rbp",
            "ret"
        ]
    },
    "unk.0x8005a01": {
        "function_address": "0x08005a01",
        "instructions": [
            "push rbp",
            "mov rdi, qword [0x080059ed]",
            "mov rbp, rsp",
            "call 0x80059f5",
            "mov rdi, qword [0x080059fc]",
            "call 0x8005a01",
            "mov rdi, qword [0x08005a08]",
            "test rdi, rdi",
            "je 0x8005a12",
            "call 0x8005a12",
            "mov rdi, 0",
            "call 0x8005a1e",
            "mov rdi, 0",
            "xor eax, eax",
            "call 0x8005a2c",
            "pop rbp",
            "ret"
        ]
    },
    "unk.0x8005a12": {
        "function_address": "0x08005a12",
        "instructions": [
            "push rbp",
            "mov rdi, qword [0x080059ed]",
            "mov rbp, rsp",
            "call 0x80059f5",
            "mov rdi, qword [0x080059fc]",
            "call 0x8005a01",
            "mov rdi, qword [0x08005a08]",
            "test rdi, rdi",
            "je 0x8005a12",
            "call 0x8005a12",
            "mov rdi, 0",
            "call 0x8005a1e",
            "mov rdi, 0",
            "xor eax, eax",
            "call 0x8005a2c",
            "pop rbp",
            "ret"
        ]
    },
    "unk.0x8005a1e": {
        "function_address": "0x08005a1e",
        "instructions": [
            "push rbp",
            "mov rdi, qword [0x080059ed]",
            "mov rbp, rsp",
            "call 0x80059f5",
            "mov rdi, qword [0x080059fc]",
            "call 0x8005a01",
            "mov rdi, qword [0x08005a08]",
            "test rdi, rdi",
            "je 0x8005a12",
            "call 0x8005a12",
            "mov rdi, 0",
            "call 0x8005a1e",
            "mov rdi, 0",
            "xor eax, eax",
            "call 0x8005a2c",
            "pop rbp",
            "ret"
        ]
    },
    "unk.0x8005a2c": {
        "function_address": "0x08005a2c",
        "instructions": [
            "push rbp",
            "mov rdi, qword [0x080059ed]",
            "mov rbp, rsp",
            "call 0x80059f5",
            "mov rdi, qword [0x080059fc]",
            "call 0x8005a01",
            "mov rdi, qword [0x08005a08]",
            "test rdi, rdi",
            "je 0x8005a12",
            "call 0x8005a12",
            "mov rdi, 0",
            "call 0x8005a1e",
            "mov rdi, 0",
            "xor eax, eax",
            "call 0x8005a2c",
            "pop rbp",
            "ret"
        ]
    },
    "sym.hash_n_crypt.isra.0": {
        "function_address": "0x08001fe0",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x30",
            "test si, si",
            "mov qword [rbp - 0x20], rbx",
            "mov qword [rbp - 0x10], r13",
            "mov rbx, rdi",
            "mov qword [rbp - 8], r14",
            "mov qword [rbp - 0x18], r12",
            "mov r14, rdx",
            "mov r13, rcx",
            "jne 0x8002078",
            "mov esi, dword [rdi + 0x88]",
            "test esi, esi",
            "jne 0x80020a8",
            "mov ecx, dword [rbx + 0x38]",
            "test ecx, ecx",
            "je 0x800208d",
            "lea rdi, [rbx + 0x38]",
            "mov ecx, r8d",
            "mov rdx, r13",
            "mov rsi, r14",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "je 0x800208d",
            "cmp dword [0x0800203b], 0",
            "js 0x8002090",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x62",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002090",
            "mov edx, dword [rdi + 0x38]",
            "test edx, edx",
            "jne 0x80020e0",
            "mov eax, dword [rbx + 0x88]",
            "test eax, eax",
            "jne 0x8002113",
            "xor r12d, r12d",
            "mov eax, r12d",
            "mov rbx, qword [rbp - 0x20]",
            "mov r12, qword [rbp - 0x18]",
            "mov r13, qword [rbp - 0x10]",
            "mov r14, qword [rbp - 8]",
            "leave",
            "ret",
            "lea rdi, [rdi + 0x88]",
            "mov edx, r8d",
            "mov rsi, r14",
            "mov dword [rbp - 0x28], r8d",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8d, dword [rbp - 0x28]",
            "jne cryptodev_verbosity",
            "mov ecx, dword [rbx + 0x38]",
            "test ecx, ecx",
            "je 0x800208d",
            "jmp 0x800201b",
            "lea rdi, [rdi + 0x38]",
            "mov ecx, r8d",
            "mov rdx, r13",
            "mov rsi, r14",
            "mov dword [rbp - 0x28], r8d",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8d, dword [rbp - 0x28]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x88]",
            "test eax, eax",
            "je 0x800208d",
            "lea rdi, [rbx + 0x88]",
            "mov edx, r8d",
            "mov rsi, r13",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "je 0x800208d",
            "jmp cryptodev_verbosity"
        ]
    },
    "unk.0x800202d": {
        "function_address": "0x0800202d",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x30",
            "test si, si",
            "mov qword [rbp - 0x20], rbx",
            "mov qword [rbp - 0x10], r13",
            "mov rbx, rdi",
            "mov qword [rbp - 8], r14",
            "mov qword [rbp - 0x18], r12",
            "mov r14, rdx",
            "mov r13, rcx",
            "jne 0x8002078",
            "mov esi, dword [rdi + 0x88]",
            "test esi, esi",
            "jne 0x80020a8",
            "mov ecx, dword [rbx + 0x38]",
            "test ecx, ecx",
            "je 0x800208d",
            "lea rdi, [rbx + 0x38]",
            "mov ecx, r8d",
            "mov rdx, r13",
            "mov rsi, r14",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "je 0x800208d",
            "cmp dword [0x0800203b], 0",
            "js 0x8002090",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x62",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002090",
            "mov edx, dword [rdi + 0x38]",
            "test edx, edx",
            "jne 0x80020e0",
            "mov eax, dword [rbx + 0x88]",
            "test eax, eax",
            "jne 0x8002113",
            "xor r12d, r12d",
            "mov eax, r12d",
            "mov rbx, qword [rbp - 0x20]",
            "mov r12, qword [rbp - 0x18]",
            "mov r13, qword [rbp - 0x10]",
            "mov r14, qword [rbp - 8]",
            "leave",
            "ret",
            "lea rdi, [rdi + 0x88]",
            "mov edx, r8d",
            "mov rsi, r14",
            "mov dword [rbp - 0x28], r8d",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8d, dword [rbp - 0x28]",
            "jne cryptodev_verbosity",
            "mov ecx, dword [rbx + 0x38]",
            "test ecx, ecx",
            "je 0x800208d",
            "jmp 0x800201b",
            "lea rdi, [rdi + 0x38]",
            "mov ecx, r8d",
            "mov rdx, r13",
            "mov rsi, r14",
            "mov dword [rbp - 0x28], r8d",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8d, dword [rbp - 0x28]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x88]",
            "test eax, eax",
            "je 0x800208d",
            "lea rdi, [rbx + 0x88]",
            "mov edx, r8d",
            "mov rsi, r13",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "je 0x800208d",
            "jmp cryptodev_verbosity"
        ]
    },
    "unk.0x8002071": {
        "function_address": "0x08002071",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x30",
            "test si, si",
            "mov qword [rbp - 0x20], rbx",
            "mov qword [rbp - 0x10], r13",
            "mov rbx, rdi",
            "mov qword [rbp - 8], r14",
            "mov qword [rbp - 0x18], r12",
            "mov r14, rdx",
            "mov r13, rcx",
            "jne 0x8002078",
            "mov esi, dword [rdi + 0x88]",
            "test esi, esi",
            "jne 0x80020a8",
            "mov ecx, dword [rbx + 0x38]",
            "test ecx, ecx",
            "je 0x800208d",
            "lea rdi, [rbx + 0x38]",
            "mov ecx, r8d",
            "mov rdx, r13",
            "mov rsi, r14",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "je 0x800208d",
            "cmp dword [0x0800203b], 0",
            "js 0x8002090",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x62",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002090",
            "mov edx, dword [rdi + 0x38]",
            "test edx, edx",
            "jne 0x80020e0",
            "mov eax, dword [rbx + 0x88]",
            "test eax, eax",
            "jne 0x8002113",
            "xor r12d, r12d",
            "mov eax, r12d",
            "mov rbx, qword [rbp - 0x20]",
            "mov r12, qword [rbp - 0x18]",
            "mov r13, qword [rbp - 0x10]",
            "mov r14, qword [rbp - 8]",
            "leave",
            "ret",
            "lea rdi, [rdi + 0x88]",
            "mov edx, r8d",
            "mov rsi, r14",
            "mov dword [rbp - 0x28], r8d",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8d, dword [rbp - 0x28]",
            "jne cryptodev_verbosity",
            "mov ecx, dword [rbx + 0x38]",
            "test ecx, ecx",
            "je 0x800208d",
            "jmp 0x800201b",
            "lea rdi, [rdi + 0x38]",
            "mov ecx, r8d",
            "mov rdx, r13",
            "mov rsi, r14",
            "mov dword [rbp - 0x28], r8d",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8d, dword [rbp - 0x28]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x88]",
            "test eax, eax",
            "je 0x800208d",
            "lea rdi, [rbx + 0x88]",
            "mov edx, r8d",
            "mov rsi, r13",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "je 0x800208d",
            "jmp cryptodev_verbosity"
        ]
    },
    "unk.0x80020be": {
        "function_address": "0x080020be",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x30",
            "test si, si",
            "mov qword [rbp - 0x20], rbx",
            "mov qword [rbp - 0x10], r13",
            "mov rbx, rdi",
            "mov qword [rbp - 8], r14",
            "mov qword [rbp - 0x18], r12",
            "mov r14, rdx",
            "mov r13, rcx",
            "jne 0x8002078",
            "mov esi, dword [rdi + 0x88]",
            "test esi, esi",
            "jne 0x80020a8",
            "mov ecx, dword [rbx + 0x38]",
            "test ecx, ecx",
            "je 0x800208d",
            "lea rdi, [rbx + 0x38]",
            "mov ecx, r8d",
            "mov rdx, r13",
            "mov rsi, r14",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "je 0x800208d",
            "cmp dword [0x0800203b], 0",
            "js 0x8002090",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x62",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002090",
            "mov edx, dword [rdi + 0x38]",
            "test edx, edx",
            "jne 0x80020e0",
            "mov eax, dword [rbx + 0x88]",
            "test eax, eax",
            "jne 0x8002113",
            "xor r12d, r12d",
            "mov eax, r12d",
            "mov rbx, qword [rbp - 0x20]",
            "mov r12, qword [rbp - 0x18]",
            "mov r13, qword [rbp - 0x10]",
            "mov r14, qword [rbp - 8]",
            "leave",
            "ret",
            "lea rdi, [rdi + 0x88]",
            "mov edx, r8d",
            "mov rsi, r14",
            "mov dword [rbp - 0x28], r8d",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8d, dword [rbp - 0x28]",
            "jne cryptodev_verbosity",
            "mov ecx, dword [rbx + 0x38]",
            "test ecx, ecx",
            "je 0x800208d",
            "jmp 0x800201b",
            "lea rdi, [rdi + 0x38]",
            "mov ecx, r8d",
            "mov rdx, r13",
            "mov rsi, r14",
            "mov dword [rbp - 0x28], r8d",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8d, dword [rbp - 0x28]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x88]",
            "test eax, eax",
            "je 0x800208d",
            "lea rdi, [rbx + 0x88]",
            "mov edx, r8d",
            "mov rsi, r13",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "je 0x800208d",
            "jmp cryptodev_verbosity"
        ]
    },
    "unk.0x80020f6": {
        "function_address": "0x080020f6",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x30",
            "test si, si",
            "mov qword [rbp - 0x20], rbx",
            "mov qword [rbp - 0x10], r13",
            "mov rbx, rdi",
            "mov qword [rbp - 8], r14",
            "mov qword [rbp - 0x18], r12",
            "mov r14, rdx",
            "mov r13, rcx",
            "jne 0x8002078",
            "mov esi, dword [rdi + 0x88]",
            "test esi, esi",
            "jne 0x80020a8",
            "mov ecx, dword [rbx + 0x38]",
            "test ecx, ecx",
            "je 0x800208d",
            "lea rdi, [rbx + 0x38]",
            "mov ecx, r8d",
            "mov rdx, r13",
            "mov rsi, r14",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "je 0x800208d",
            "cmp dword [0x0800203b], 0",
            "js 0x8002090",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x62",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002090",
            "mov edx, dword [rdi + 0x38]",
            "test edx, edx",
            "jne 0x80020e0",
            "mov eax, dword [rbx + 0x88]",
            "test eax, eax",
            "jne 0x8002113",
            "xor r12d, r12d",
            "mov eax, r12d",
            "mov rbx, qword [rbp - 0x20]",
            "mov r12, qword [rbp - 0x18]",
            "mov r13, qword [rbp - 0x10]",
            "mov r14, qword [rbp - 8]",
            "leave",
            "ret",
            "lea rdi, [rdi + 0x88]",
            "mov edx, r8d",
            "mov rsi, r14",
            "mov dword [rbp - 0x28], r8d",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8d, dword [rbp - 0x28]",
            "jne cryptodev_verbosity",
            "mov ecx, dword [rbx + 0x38]",
            "test ecx, ecx",
            "je 0x800208d",
            "jmp 0x800201b",
            "lea rdi, [rdi + 0x38]",
            "mov ecx, r8d",
            "mov rdx, r13",
            "mov rsi, r14",
            "mov dword [rbp - 0x28], r8d",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8d, dword [rbp - 0x28]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x88]",
            "test eax, eax",
            "je 0x800208d",
            "lea rdi, [rbx + 0x88]",
            "mov edx, r8d",
            "mov rsi, r13",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "je 0x800208d",
            "jmp cryptodev_verbosity"
        ]
    },
    "unk.0x8002125": {
        "function_address": "0x08002125",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x30",
            "test si, si",
            "mov qword [rbp - 0x20], rbx",
            "mov qword [rbp - 0x10], r13",
            "mov rbx, rdi",
            "mov qword [rbp - 8], r14",
            "mov qword [rbp - 0x18], r12",
            "mov r14, rdx",
            "mov r13, rcx",
            "jne 0x8002078",
            "mov esi, dword [rdi + 0x88]",
            "test esi, esi",
            "jne 0x80020a8",
            "mov ecx, dword [rbx + 0x38]",
            "test ecx, ecx",
            "je 0x800208d",
            "lea rdi, [rbx + 0x38]",
            "mov ecx, r8d",
            "mov rdx, r13",
            "mov rsi, r14",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "je 0x800208d",
            "cmp dword [0x0800203b], 0",
            "js 0x8002090",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x62",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002090",
            "mov edx, dword [rdi + 0x38]",
            "test edx, edx",
            "jne 0x80020e0",
            "mov eax, dword [rbx + 0x88]",
            "test eax, eax",
            "jne 0x8002113",
            "xor r12d, r12d",
            "mov eax, r12d",
            "mov rbx, qword [rbp - 0x20]",
            "mov r12, qword [rbp - 0x18]",
            "mov r13, qword [rbp - 0x10]",
            "mov r14, qword [rbp - 8]",
            "leave",
            "ret",
            "lea rdi, [rdi + 0x88]",
            "mov edx, r8d",
            "mov rsi, r14",
            "mov dword [rbp - 0x28], r8d",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8d, dword [rbp - 0x28]",
            "jne cryptodev_verbosity",
            "mov ecx, dword [rbx + 0x38]",
            "test ecx, ecx",
            "je 0x800208d",
            "jmp 0x800201b",
            "lea rdi, [rdi + 0x38]",
            "mov ecx, r8d",
            "mov rdx, r13",
            "mov rsi, r14",
            "mov dword [rbp - 0x28], r8d",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8d, dword [rbp - 0x28]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x88]",
            "test eax, eax",
            "je 0x800208d",
            "lea rdi, [rbx + 0x88]",
            "mov edx, r8d",
            "mov rsi, r13",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "je 0x800208d",
            "jmp cryptodev_verbosity"
        ]
    },
    "sym.__crypto_run_std": {
        "function_address": "0x08002140",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "mov r15, rsi",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "sub rsp, 0x58",
            "mov qword [rbp - 0x68], rdi",
            "mov r12d, dword [rsi + 8]",
            "mov edi, 0xd0",
            "xor esi, esi",
            "call __get_free_pages",
            "test rax, rax",
            "mov r14, rax",
            "je cryptodev_verbosity",
            "cmp r12, 0x1000",
            "mov eax, 0x1000",
            "mov r13, qword [r15 + 0x10]",
            "cmovbe rax, r12",
            "test r12, r12",
            "mov qword [rbp - 0x60], rax",
            "mov rax, qword [r15 + 0x18]",
            "mov qword [rbp - 0x58], rax",
            "jne 0x80021b0",
            "jmp 0x8002238",
            "add qword [rbp - 0x58], rbx",
            "add r13, rbx",
            "sub r12, rbx",
            "je 0x8002238",
            "cmp r12, qword [rbp - 0x60]",
            "mov rbx, qword [rbp - 0x60]",
            "mov rsi, r13",
            "mov rdi, r14",
            "cmovbe rbx, r12",
            "mov edx, ebx",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "lea rdi, [rbp - 0x50]",
            "mov edx, ebx",
            "mov rsi, r14",
            "call sg_init_one",
            "movzx esi, word [r15 + 4]",
            "lea rcx, [rbp - 0x50]",
            "mov rdi, qword [rbp - 0x68]",
            "mov r8d, ebx",
            "mov rdx, rcx",
            "call sym.hash_n_crypt.isra.0",
            "test eax, eax",
            "mov r9d, eax",
            "jne 0x800225f",
            "mov rax, qword [rbp - 0x68]",
            "mov r8d, dword [rax + 0x38]",
            "test r8d, r8d",
            "je 0x80021a0",
            "mov rdi, qword [rbp - 0x58]",
            "mov edx, ebx",
            "mov rsi, r14",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x80021a0",
            "mov edi, dword [0x08002225]",
            "test edi, edi",
            "jg current_task",
            "mov r9d, 0xfffffff2",
            "jmp 0x800223b",
            "xor r9d, r9d",
            "xor esi, esi",
            "mov rdi, r14",
            "mov dword [rbp - 0x70], r9d",
            "call free_pages",
            "mov r9d, dword [rbp - 0x70]",
            "add rsp, 0x58",
            "mov eax, r9d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov r10d, dword [0x08002266]",
            "test r10d, r10d",
            "jle 0x800223b",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x8c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov dword [rbp - 0x70], r9d",
            "call printk",
            "mov r9d, dword [rbp - 0x70]",
            "jmp 0x800223b",
            "mov r11d, dword [0x080022b7]",
            "test r11d, r11d",
            "jle 0x800222d",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov qword [rsp], r13",
            "mov r9, rbx",
            "mov r8d, 0x82",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800222d",
            "mov ebx, dword [0x08002303]",
            "test ebx, ebx",
            "jg 0x800234e",
            "mov r9d, 0xfffffff4",
            "jmp 0x800224d",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x92",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r9d, 0xfffffff2",
            "jmp 0x800223b",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x75",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r9d, 0xfffffff4",
            "jmp 0x800224d"
        ]
    },
    "unk.0x8002168": {
        "function_address": "0x08002168",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "mov r15, rsi",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "sub rsp, 0x58",
            "mov qword [rbp - 0x68], rdi",
            "mov r12d, dword [rsi + 8]",
            "mov edi, 0xd0",
            "xor esi, esi",
            "call __get_free_pages",
            "test rax, rax",
            "mov r14, rax",
            "je cryptodev_verbosity",
            "cmp r12, 0x1000",
            "mov eax, 0x1000",
            "mov r13, qword [r15 + 0x10]",
            "cmovbe rax, r12",
            "test r12, r12",
            "mov qword [rbp - 0x60], rax",
            "mov rax, qword [r15 + 0x18]",
            "mov qword [rbp - 0x58], rax",
            "jne 0x80021b0",
            "jmp 0x8002238",
            "add qword [rbp - 0x58], rbx",
            "add r13, rbx",
            "sub r12, rbx",
            "je 0x8002238",
            "cmp r12, qword [rbp - 0x60]",
            "mov rbx, qword [rbp - 0x60]",
            "mov rsi, r13",
            "mov rdi, r14",
            "cmovbe rbx, r12",
            "mov edx, ebx",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "lea rdi, [rbp - 0x50]",
            "mov edx, ebx",
            "mov rsi, r14",
            "call sg_init_one",
            "movzx esi, word [r15 + 4]",
            "lea rcx, [rbp - 0x50]",
            "mov rdi, qword [rbp - 0x68]",
            "mov r8d, ebx",
            "mov rdx, rcx",
            "call sym.hash_n_crypt.isra.0",
            "test eax, eax",
            "mov r9d, eax",
            "jne 0x800225f",
            "mov rax, qword [rbp - 0x68]",
            "mov r8d, dword [rax + 0x38]",
            "test r8d, r8d",
            "je 0x80021a0",
            "mov rdi, qword [rbp - 0x58]",
            "mov edx, ebx",
            "mov rsi, r14",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x80021a0",
            "mov edi, dword [0x08002225]",
            "test edi, edi",
            "jg current_task",
            "mov r9d, 0xfffffff2",
            "jmp 0x800223b",
            "xor r9d, r9d",
            "xor esi, esi",
            "mov rdi, r14",
            "mov dword [rbp - 0x70], r9d",
            "call free_pages",
            "mov r9d, dword [rbp - 0x70]",
            "add rsp, 0x58",
            "mov eax, r9d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov r10d, dword [0x08002266]",
            "test r10d, r10d",
            "jle 0x800223b",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x8c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov dword [rbp - 0x70], r9d",
            "call printk",
            "mov r9d, dword [rbp - 0x70]",
            "jmp 0x800223b",
            "mov r11d, dword [0x080022b7]",
            "test r11d, r11d",
            "jle 0x800222d",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov qword [rsp], r13",
            "mov r9, rbx",
            "mov r8d, 0x82",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800222d",
            "mov ebx, dword [0x08002303]",
            "test ebx, ebx",
            "jg 0x800234e",
            "mov r9d, 0xfffffff4",
            "jmp 0x800224d",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x92",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r9d, 0xfffffff2",
            "jmp 0x800223b",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x75",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r9d, 0xfffffff4",
            "jmp 0x800224d"
        ]
    },
    "unk.0x80021c9": {
        "function_address": "0x080021c9",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "mov r15, rsi",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "sub rsp, 0x58",
            "mov qword [rbp - 0x68], rdi",
            "mov r12d, dword [rsi + 8]",
            "mov edi, 0xd0",
            "xor esi, esi",
            "call __get_free_pages",
            "test rax, rax",
            "mov r14, rax",
            "je cryptodev_verbosity",
            "cmp r12, 0x1000",
            "mov eax, 0x1000",
            "mov r13, qword [r15 + 0x10]",
            "cmovbe rax, r12",
            "test r12, r12",
            "mov qword [rbp - 0x60], rax",
            "mov rax, qword [r15 + 0x18]",
            "mov qword [rbp - 0x58], rax",
            "jne 0x80021b0",
            "jmp 0x8002238",
            "add qword [rbp - 0x58], rbx",
            "add r13, rbx",
            "sub r12, rbx",
            "je 0x8002238",
            "cmp r12, qword [rbp - 0x60]",
            "mov rbx, qword [rbp - 0x60]",
            "mov rsi, r13",
            "mov rdi, r14",
            "cmovbe rbx, r12",
            "mov edx, ebx",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "lea rdi, [rbp - 0x50]",
            "mov edx, ebx",
            "mov rsi, r14",
            "call sg_init_one",
            "movzx esi, word [r15 + 4]",
            "lea rcx, [rbp - 0x50]",
            "mov rdi, qword [rbp - 0x68]",
            "mov r8d, ebx",
            "mov rdx, rcx",
            "call sym.hash_n_crypt.isra.0",
            "test eax, eax",
            "mov r9d, eax",
            "jne 0x800225f",
            "mov rax, qword [rbp - 0x68]",
            "mov r8d, dword [rax + 0x38]",
            "test r8d, r8d",
            "je 0x80021a0",
            "mov rdi, qword [rbp - 0x58]",
            "mov edx, ebx",
            "mov rsi, r14",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x80021a0",
            "mov edi, dword [0x08002225]",
            "test edi, edi",
            "jg current_task",
            "mov r9d, 0xfffffff2",
            "jmp 0x800223b",
            "xor r9d, r9d",
            "xor esi, esi",
            "mov rdi, r14",
            "mov dword [rbp - 0x70], r9d",
            "call free_pages",
            "mov r9d, dword [rbp - 0x70]",
            "add rsp, 0x58",
            "mov eax, r9d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov r10d, dword [0x08002266]",
            "test r10d, r10d",
            "jle 0x800223b",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x8c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov dword [rbp - 0x70], r9d",
            "call printk",
            "mov r9d, dword [rbp - 0x70]",
            "jmp 0x800223b",
            "mov r11d, dword [0x080022b7]",
            "test r11d, r11d",
            "jle 0x800222d",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov qword [rsp], r13",
            "mov r9, rbx",
            "mov r8d, 0x82",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800222d",
            "mov ebx, dword [0x08002303]",
            "test ebx, ebx",
            "jg 0x800234e",
            "mov r9d, 0xfffffff4",
            "jmp 0x800224d",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x92",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r9d, 0xfffffff2",
            "jmp 0x800223b",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x75",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r9d, 0xfffffff4",
            "jmp 0x800224d"
        ]
    },
    "unk.0x80021e0": {
        "function_address": "0x080021e0",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "mov r15, rsi",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "sub rsp, 0x58",
            "mov qword [rbp - 0x68], rdi",
            "mov r12d, dword [rsi + 8]",
            "mov edi, 0xd0",
            "xor esi, esi",
            "call __get_free_pages",
            "test rax, rax",
            "mov r14, rax",
            "je cryptodev_verbosity",
            "cmp r12, 0x1000",
            "mov eax, 0x1000",
            "mov r13, qword [r15 + 0x10]",
            "cmovbe rax, r12",
            "test r12, r12",
            "mov qword [rbp - 0x60], rax",
            "mov rax, qword [r15 + 0x18]",
            "mov qword [rbp - 0x58], rax",
            "jne 0x80021b0",
            "jmp 0x8002238",
            "add qword [rbp - 0x58], rbx",
            "add r13, rbx",
            "sub r12, rbx",
            "je 0x8002238",
            "cmp r12, qword [rbp - 0x60]",
            "mov rbx, qword [rbp - 0x60]",
            "mov rsi, r13",
            "mov rdi, r14",
            "cmovbe rbx, r12",
            "mov edx, ebx",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "lea rdi, [rbp - 0x50]",
            "mov edx, ebx",
            "mov rsi, r14",
            "call sg_init_one",
            "movzx esi, word [r15 + 4]",
            "lea rcx, [rbp - 0x50]",
            "mov rdi, qword [rbp - 0x68]",
            "mov r8d, ebx",
            "mov rdx, rcx",
            "call sym.hash_n_crypt.isra.0",
            "test eax, eax",
            "mov r9d, eax",
            "jne 0x800225f",
            "mov rax, qword [rbp - 0x68]",
            "mov r8d, dword [rax + 0x38]",
            "test r8d, r8d",
            "je 0x80021a0",
            "mov rdi, qword [rbp - 0x58]",
            "mov edx, ebx",
            "mov rsi, r14",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x80021a0",
            "mov edi, dword [0x08002225]",
            "test edi, edi",
            "jg current_task",
            "mov r9d, 0xfffffff2",
            "jmp 0x800223b",
            "xor r9d, r9d",
            "xor esi, esi",
            "mov rdi, r14",
            "mov dword [rbp - 0x70], r9d",
            "call free_pages",
            "mov r9d, dword [rbp - 0x70]",
            "add rsp, 0x58",
            "mov eax, r9d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov r10d, dword [0x08002266]",
            "test r10d, r10d",
            "jle 0x800223b",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x8c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov dword [rbp - 0x70], r9d",
            "call printk",
            "mov r9d, dword [rbp - 0x70]",
            "jmp 0x800223b",
            "mov r11d, dword [0x080022b7]",
            "test r11d, r11d",
            "jle 0x800222d",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov qword [rsp], r13",
            "mov r9, rbx",
            "mov r8d, 0x82",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800222d",
            "mov ebx, dword [0x08002303]",
            "test ebx, ebx",
            "jg 0x800234e",
            "mov r9d, 0xfffffff4",
            "jmp 0x800224d",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x92",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r9d, 0xfffffff2",
            "jmp 0x800223b",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x75",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r9d, 0xfffffff4",
            "jmp 0x800224d"
        ]
    },
    "unk.0x800221a": {
        "function_address": "0x0800221a",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "mov r15, rsi",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "sub rsp, 0x58",
            "mov qword [rbp - 0x68], rdi",
            "mov r12d, dword [rsi + 8]",
            "mov edi, 0xd0",
            "xor esi, esi",
            "call __get_free_pages",
            "test rax, rax",
            "mov r14, rax",
            "je cryptodev_verbosity",
            "cmp r12, 0x1000",
            "mov eax, 0x1000",
            "mov r13, qword [r15 + 0x10]",
            "cmovbe rax, r12",
            "test r12, r12",
            "mov qword [rbp - 0x60], rax",
            "mov rax, qword [r15 + 0x18]",
            "mov qword [rbp - 0x58], rax",
            "jne 0x80021b0",
            "jmp 0x8002238",
            "add qword [rbp - 0x58], rbx",
            "add r13, rbx",
            "sub r12, rbx",
            "je 0x8002238",
            "cmp r12, qword [rbp - 0x60]",
            "mov rbx, qword [rbp - 0x60]",
            "mov rsi, r13",
            "mov rdi, r14",
            "cmovbe rbx, r12",
            "mov edx, ebx",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "lea rdi, [rbp - 0x50]",
            "mov edx, ebx",
            "mov rsi, r14",
            "call sg_init_one",
            "movzx esi, word [r15 + 4]",
            "lea rcx, [rbp - 0x50]",
            "mov rdi, qword [rbp - 0x68]",
            "mov r8d, ebx",
            "mov rdx, rcx",
            "call sym.hash_n_crypt.isra.0",
            "test eax, eax",
            "mov r9d, eax",
            "jne 0x800225f",
            "mov rax, qword [rbp - 0x68]",
            "mov r8d, dword [rax + 0x38]",
            "test r8d, r8d",
            "je 0x80021a0",
            "mov rdi, qword [rbp - 0x58]",
            "mov edx, ebx",
            "mov rsi, r14",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x80021a0",
            "mov edi, dword [0x08002225]",
            "test edi, edi",
            "jg current_task",
            "mov r9d, 0xfffffff2",
            "jmp 0x800223b",
            "xor r9d, r9d",
            "xor esi, esi",
            "mov rdi, r14",
            "mov dword [rbp - 0x70], r9d",
            "call free_pages",
            "mov r9d, dword [rbp - 0x70]",
            "add rsp, 0x58",
            "mov eax, r9d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov r10d, dword [0x08002266]",
            "test r10d, r10d",
            "jle 0x800223b",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x8c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov dword [rbp - 0x70], r9d",
            "call printk",
            "mov r9d, dword [rbp - 0x70]",
            "jmp 0x800223b",
            "mov r11d, dword [0x080022b7]",
            "test r11d, r11d",
            "jle 0x800222d",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov qword [rsp], r13",
            "mov r9, rbx",
            "mov r8d, 0x82",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800222d",
            "mov ebx, dword [0x08002303]",
            "test ebx, ebx",
            "jg 0x800234e",
            "mov r9d, 0xfffffff4",
            "jmp 0x800224d",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x92",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r9d, 0xfffffff2",
            "jmp 0x800223b",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x75",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r9d, 0xfffffff4",
            "jmp 0x800224d"
        ]
    },
    "unk.0x8002249": {
        "function_address": "0x08002249",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "mov r15, rsi",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "sub rsp, 0x58",
            "mov qword [rbp - 0x68], rdi",
            "mov r12d, dword [rsi + 8]",
            "mov edi, 0xd0",
            "xor esi, esi",
            "call __get_free_pages",
            "test rax, rax",
            "mov r14, rax",
            "je cryptodev_verbosity",
            "cmp r12, 0x1000",
            "mov eax, 0x1000",
            "mov r13, qword [r15 + 0x10]",
            "cmovbe rax, r12",
            "test r12, r12",
            "mov qword [rbp - 0x60], rax",
            "mov rax, qword [r15 + 0x18]",
            "mov qword [rbp - 0x58], rax",
            "jne 0x80021b0",
            "jmp 0x8002238",
            "add qword [rbp - 0x58], rbx",
            "add r13, rbx",
            "sub r12, rbx",
            "je 0x8002238",
            "cmp r12, qword [rbp - 0x60]",
            "mov rbx, qword [rbp - 0x60]",
            "mov rsi, r13",
            "mov rdi, r14",
            "cmovbe rbx, r12",
            "mov edx, ebx",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "lea rdi, [rbp - 0x50]",
            "mov edx, ebx",
            "mov rsi, r14",
            "call sg_init_one",
            "movzx esi, word [r15 + 4]",
            "lea rcx, [rbp - 0x50]",
            "mov rdi, qword [rbp - 0x68]",
            "mov r8d, ebx",
            "mov rdx, rcx",
            "call sym.hash_n_crypt.isra.0",
            "test eax, eax",
            "mov r9d, eax",
            "jne 0x800225f",
            "mov rax, qword [rbp - 0x68]",
            "mov r8d, dword [rax + 0x38]",
            "test r8d, r8d",
            "je 0x80021a0",
            "mov rdi, qword [rbp - 0x58]",
            "mov edx, ebx",
            "mov rsi, r14",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x80021a0",
            "mov edi, dword [0x08002225]",
            "test edi, edi",
            "jg current_task",
            "mov r9d, 0xfffffff2",
            "jmp 0x800223b",
            "xor r9d, r9d",
            "xor esi, esi",
            "mov rdi, r14",
            "mov dword [rbp - 0x70], r9d",
            "call free_pages",
            "mov r9d, dword [rbp - 0x70]",
            "add rsp, 0x58",
            "mov eax, r9d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov r10d, dword [0x08002266]",
            "test r10d, r10d",
            "jle 0x800223b",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x8c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov dword [rbp - 0x70], r9d",
            "call printk",
            "mov r9d, dword [rbp - 0x70]",
            "jmp 0x800223b",
            "mov r11d, dword [0x080022b7]",
            "test r11d, r11d",
            "jle 0x800222d",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov qword [rsp], r13",
            "mov r9, rbx",
            "mov r8d, 0x82",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800222d",
            "mov ebx, dword [0x08002303]",
            "test ebx, ebx",
            "jg 0x800234e",
            "mov r9d, 0xfffffff4",
            "jmp 0x800224d",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x92",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r9d, 0xfffffff2",
            "jmp 0x800223b",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x75",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r9d, 0xfffffff4",
            "jmp 0x800224d"
        ]
    },
    "unk.0x80022a0": {
        "function_address": "0x080022a0",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "mov r15, rsi",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "sub rsp, 0x58",
            "mov qword [rbp - 0x68], rdi",
            "mov r12d, dword [rsi + 8]",
            "mov edi, 0xd0",
            "xor esi, esi",
            "call __get_free_pages",
            "test rax, rax",
            "mov r14, rax",
            "je cryptodev_verbosity",
            "cmp r12, 0x1000",
            "mov eax, 0x1000",
            "mov r13, qword [r15 + 0x10]",
            "cmovbe rax, r12",
            "test r12, r12",
            "mov qword [rbp - 0x60], rax",
            "mov rax, qword [r15 + 0x18]",
            "mov qword [rbp - 0x58], rax",
            "jne 0x80021b0",
            "jmp 0x8002238",
            "add qword [rbp - 0x58], rbx",
            "add r13, rbx",
            "sub r12, rbx",
            "je 0x8002238",
            "cmp r12, qword [rbp - 0x60]",
            "mov rbx, qword [rbp - 0x60]",
            "mov rsi, r13",
            "mov rdi, r14",
            "cmovbe rbx, r12",
            "mov edx, ebx",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "lea rdi, [rbp - 0x50]",
            "mov edx, ebx",
            "mov rsi, r14",
            "call sg_init_one",
            "movzx esi, word [r15 + 4]",
            "lea rcx, [rbp - 0x50]",
            "mov rdi, qword [rbp - 0x68]",
            "mov r8d, ebx",
            "mov rdx, rcx",
            "call sym.hash_n_crypt.isra.0",
            "test eax, eax",
            "mov r9d, eax",
            "jne 0x800225f",
            "mov rax, qword [rbp - 0x68]",
            "mov r8d, dword [rax + 0x38]",
            "test r8d, r8d",
            "je 0x80021a0",
            "mov rdi, qword [rbp - 0x58]",
            "mov edx, ebx",
            "mov rsi, r14",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x80021a0",
            "mov edi, dword [0x08002225]",
            "test edi, edi",
            "jg current_task",
            "mov r9d, 0xfffffff2",
            "jmp 0x800223b",
            "xor r9d, r9d",
            "xor esi, esi",
            "mov rdi, r14",
            "mov dword [rbp - 0x70], r9d",
            "call free_pages",
            "mov r9d, dword [rbp - 0x70]",
            "add rsp, 0x58",
            "mov eax, r9d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov r10d, dword [0x08002266]",
            "test r10d, r10d",
            "jle 0x800223b",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x8c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov dword [rbp - 0x70], r9d",
            "call printk",
            "mov r9d, dword [rbp - 0x70]",
            "jmp 0x800223b",
            "mov r11d, dword [0x080022b7]",
            "test r11d, r11d",
            "jle 0x800222d",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov qword [rsp], r13",
            "mov r9, rbx",
            "mov r8d, 0x82",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800222d",
            "mov ebx, dword [0x08002303]",
            "test ebx, ebx",
            "jg 0x800234e",
            "mov r9d, 0xfffffff4",
            "jmp 0x800224d",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x92",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r9d, 0xfffffff2",
            "jmp 0x800223b",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x75",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r9d, 0xfffffff4",
            "jmp 0x800224d"
        ]
    },
    "unk.0x80022f8": {
        "function_address": "0x080022f8",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "mov r15, rsi",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "sub rsp, 0x58",
            "mov qword [rbp - 0x68], rdi",
            "mov r12d, dword [rsi + 8]",
            "mov edi, 0xd0",
            "xor esi, esi",
            "call __get_free_pages",
            "test rax, rax",
            "mov r14, rax",
            "je cryptodev_verbosity",
            "cmp r12, 0x1000",
            "mov eax, 0x1000",
            "mov r13, qword [r15 + 0x10]",
            "cmovbe rax, r12",
            "test r12, r12",
            "mov qword [rbp - 0x60], rax",
            "mov rax, qword [r15 + 0x18]",
            "mov qword [rbp - 0x58], rax",
            "jne 0x80021b0",
            "jmp 0x8002238",
            "add qword [rbp - 0x58], rbx",
            "add r13, rbx",
            "sub r12, rbx",
            "je 0x8002238",
            "cmp r12, qword [rbp - 0x60]",
            "mov rbx, qword [rbp - 0x60]",
            "mov rsi, r13",
            "mov rdi, r14",
            "cmovbe rbx, r12",
            "mov edx, ebx",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "lea rdi, [rbp - 0x50]",
            "mov edx, ebx",
            "mov rsi, r14",
            "call sg_init_one",
            "movzx esi, word [r15 + 4]",
            "lea rcx, [rbp - 0x50]",
            "mov rdi, qword [rbp - 0x68]",
            "mov r8d, ebx",
            "mov rdx, rcx",
            "call sym.hash_n_crypt.isra.0",
            "test eax, eax",
            "mov r9d, eax",
            "jne 0x800225f",
            "mov rax, qword [rbp - 0x68]",
            "mov r8d, dword [rax + 0x38]",
            "test r8d, r8d",
            "je 0x80021a0",
            "mov rdi, qword [rbp - 0x58]",
            "mov edx, ebx",
            "mov rsi, r14",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x80021a0",
            "mov edi, dword [0x08002225]",
            "test edi, edi",
            "jg current_task",
            "mov r9d, 0xfffffff2",
            "jmp 0x800223b",
            "xor r9d, r9d",
            "xor esi, esi",
            "mov rdi, r14",
            "mov dword [rbp - 0x70], r9d",
            "call free_pages",
            "mov r9d, dword [rbp - 0x70]",
            "add rsp, 0x58",
            "mov eax, r9d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov r10d, dword [0x08002266]",
            "test r10d, r10d",
            "jle 0x800223b",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x8c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov dword [rbp - 0x70], r9d",
            "call printk",
            "mov r9d, dword [rbp - 0x70]",
            "jmp 0x800223b",
            "mov r11d, dword [0x080022b7]",
            "test r11d, r11d",
            "jle 0x800222d",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov qword [rsp], r13",
            "mov r9, rbx",
            "mov r8d, 0x82",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800222d",
            "mov ebx, dword [0x08002303]",
            "test ebx, ebx",
            "jg 0x800234e",
            "mov r9d, 0xfffffff4",
            "jmp 0x800224d",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x92",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r9d, 0xfffffff2",
            "jmp 0x800223b",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x75",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r9d, 0xfffffff4",
            "jmp 0x800224d"
        ]
    },
    "unk.0x8002343": {
        "function_address": "0x08002343",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "mov r15, rsi",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "sub rsp, 0x58",
            "mov qword [rbp - 0x68], rdi",
            "mov r12d, dword [rsi + 8]",
            "mov edi, 0xd0",
            "xor esi, esi",
            "call __get_free_pages",
            "test rax, rax",
            "mov r14, rax",
            "je cryptodev_verbosity",
            "cmp r12, 0x1000",
            "mov eax, 0x1000",
            "mov r13, qword [r15 + 0x10]",
            "cmovbe rax, r12",
            "test r12, r12",
            "mov qword [rbp - 0x60], rax",
            "mov rax, qword [r15 + 0x18]",
            "mov qword [rbp - 0x58], rax",
            "jne 0x80021b0",
            "jmp 0x8002238",
            "add qword [rbp - 0x58], rbx",
            "add r13, rbx",
            "sub r12, rbx",
            "je 0x8002238",
            "cmp r12, qword [rbp - 0x60]",
            "mov rbx, qword [rbp - 0x60]",
            "mov rsi, r13",
            "mov rdi, r14",
            "cmovbe rbx, r12",
            "mov edx, ebx",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "lea rdi, [rbp - 0x50]",
            "mov edx, ebx",
            "mov rsi, r14",
            "call sg_init_one",
            "movzx esi, word [r15 + 4]",
            "lea rcx, [rbp - 0x50]",
            "mov rdi, qword [rbp - 0x68]",
            "mov r8d, ebx",
            "mov rdx, rcx",
            "call sym.hash_n_crypt.isra.0",
            "test eax, eax",
            "mov r9d, eax",
            "jne 0x800225f",
            "mov rax, qword [rbp - 0x68]",
            "mov r8d, dword [rax + 0x38]",
            "test r8d, r8d",
            "je 0x80021a0",
            "mov rdi, qword [rbp - 0x58]",
            "mov edx, ebx",
            "mov rsi, r14",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x80021a0",
            "mov edi, dword [0x08002225]",
            "test edi, edi",
            "jg current_task",
            "mov r9d, 0xfffffff2",
            "jmp 0x800223b",
            "xor r9d, r9d",
            "xor esi, esi",
            "mov rdi, r14",
            "mov dword [rbp - 0x70], r9d",
            "call free_pages",
            "mov r9d, dword [rbp - 0x70]",
            "add rsp, 0x58",
            "mov eax, r9d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov r10d, dword [0x08002266]",
            "test r10d, r10d",
            "jle 0x800223b",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x8c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov dword [rbp - 0x70], r9d",
            "call printk",
            "mov r9d, dword [rbp - 0x70]",
            "jmp 0x800223b",
            "mov r11d, dword [0x080022b7]",
            "test r11d, r11d",
            "jle 0x800222d",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov qword [rsp], r13",
            "mov r9, rbx",
            "mov r8d, 0x82",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800222d",
            "mov ebx, dword [0x08002303]",
            "test ebx, ebx",
            "jg 0x800234e",
            "mov r9d, 0xfffffff4",
            "jmp 0x800224d",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x92",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r9d, 0xfffffff2",
            "jmp 0x800223b",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x75",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r9d, 0xfffffff4",
            "jmp 0x800224d"
        ]
    },
    "unk.0x800237f": {
        "function_address": "0x0800237f",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "mov r15, rsi",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "sub rsp, 0x58",
            "mov qword [rbp - 0x68], rdi",
            "mov r12d, dword [rsi + 8]",
            "mov edi, 0xd0",
            "xor esi, esi",
            "call __get_free_pages",
            "test rax, rax",
            "mov r14, rax",
            "je cryptodev_verbosity",
            "cmp r12, 0x1000",
            "mov eax, 0x1000",
            "mov r13, qword [r15 + 0x10]",
            "cmovbe rax, r12",
            "test r12, r12",
            "mov qword [rbp - 0x60], rax",
            "mov rax, qword [r15 + 0x18]",
            "mov qword [rbp - 0x58], rax",
            "jne 0x80021b0",
            "jmp 0x8002238",
            "add qword [rbp - 0x58], rbx",
            "add r13, rbx",
            "sub r12, rbx",
            "je 0x8002238",
            "cmp r12, qword [rbp - 0x60]",
            "mov rbx, qword [rbp - 0x60]",
            "mov rsi, r13",
            "mov rdi, r14",
            "cmovbe rbx, r12",
            "mov edx, ebx",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "lea rdi, [rbp - 0x50]",
            "mov edx, ebx",
            "mov rsi, r14",
            "call sg_init_one",
            "movzx esi, word [r15 + 4]",
            "lea rcx, [rbp - 0x50]",
            "mov rdi, qword [rbp - 0x68]",
            "mov r8d, ebx",
            "mov rdx, rcx",
            "call sym.hash_n_crypt.isra.0",
            "test eax, eax",
            "mov r9d, eax",
            "jne 0x800225f",
            "mov rax, qword [rbp - 0x68]",
            "mov r8d, dword [rax + 0x38]",
            "test r8d, r8d",
            "je 0x80021a0",
            "mov rdi, qword [rbp - 0x58]",
            "mov edx, ebx",
            "mov rsi, r14",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x80021a0",
            "mov edi, dword [0x08002225]",
            "test edi, edi",
            "jg current_task",
            "mov r9d, 0xfffffff2",
            "jmp 0x800223b",
            "xor r9d, r9d",
            "xor esi, esi",
            "mov rdi, r14",
            "mov dword [rbp - 0x70], r9d",
            "call free_pages",
            "mov r9d, dword [rbp - 0x70]",
            "add rsp, 0x58",
            "mov eax, r9d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov r10d, dword [0x08002266]",
            "test r10d, r10d",
            "jle 0x800223b",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x8c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov dword [rbp - 0x70], r9d",
            "call printk",
            "mov r9d, dword [rbp - 0x70]",
            "jmp 0x800223b",
            "mov r11d, dword [0x080022b7]",
            "test r11d, r11d",
            "jle 0x800222d",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov qword [rsp], r13",
            "mov r9, rbx",
            "mov r8d, 0x82",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800222d",
            "mov ebx, dword [0x08002303]",
            "test ebx, ebx",
            "jg 0x800234e",
            "mov r9d, 0xfffffff4",
            "jmp 0x800224d",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x92",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r9d, 0xfffffff2",
            "jmp 0x800223b",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x75",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r9d, 0xfffffff4",
            "jmp 0x800224d"
        ]
    },
    "sym.cryptodev_complete": {
        "function_address": "0x08002830",
        "instructions": [
            "cmp esi, 0xffffff8d",
            "mov rdi, qword [rdi + 0x18]",
            "je 0x8002846",
            "push rbp",
            "mov dword [rdi + 0x20], esi",
            "mov rbp, rsp",
            "call complete",
            "pop rbp",
            "repz ret"
        ]
    },
    "unk.0x8002845": {
        "function_address": "0x08002845",
        "instructions": [
            "cmp esi, 0xffffff8d",
            "mov rdi, qword [rdi + 0x18]",
            "je 0x8002846",
            "push rbp",
            "mov dword [rdi + 0x20], esi",
            "mov rbp, rsp",
            "call complete",
            "pop rbp",
            "repz ret"
        ]
    },
    "sym.srtp_auth_n_crypt": {
        "function_address": "0x08003420",
        "instructions": [
            "push rbp",
            "mov r10, rdx",
            "mov rbp, rsp",
            "sub rsp, 0xc0",
            "mov qword [rbp - 0x20], r12",
            "mov qword [rbp - 0x18], r13",
            "mov r12, rsi",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r13, rdi",
            "mov qword [rbp - 0x28], rbx",
            "cmp word [rsi + 4], 0",
            "mov r15d, ecx",
            "mov r14d, r9d",
            "jne 0x80034c0",
            "mov esi, dword [rdi + 0x38]",
            "test esi, esi",
            "jne 0x80035c0",
            "mov ecx, dword [r13 + 0x88]",
            "test ecx, ecx",
            "je 0x800359c",
            "test r15d, r15d",
            "jne 0x8003630",
            "add r13, 0x88",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, r13",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov ebx, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r12 + 0x30]",
            "mov rdi, qword [r12 + 0x28]",
            "lea rsi, [rbp - 0x70]",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x800359c",
            "mov ebx, 0xfffffff2",
            "jmp 0x80035a3",
            "mov edx, dword [rdi + 0x88]",
            "test edx, edx",
            "je 0x8003590",
            "mov edx, dword [rsi + 0x30]",
            "cmp edx, 0x40",
            "ja cryptodev_verbosity",
            "cmp r9d, edx",
            "jb cryptodev_verbosity",
            "mov rsi, qword [rsi + 0x28]",
            "lea rdi, [rbp - 0xb0]",
            "mov qword [rbp - 0xc0], r10",
            "mov qword [rbp - 0xb8], r8",
            "call _copy_from_user",
            "test rax, rax",
            "mov r10, qword [rbp - 0xc0]",
            "jne 0x80034b1",
            "lea rcx, [r13 + 0x88]",
            "mov edx, r15d",
            "mov rsi, r10",
            "mov rdi, rcx",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov ebx, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "mov r8, qword [rbp - 0xb8]",
            "jne cryptodev_verbosity",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "mov qword [rbp - 0xb8], r8",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov ebx, eax",
            "mov r8, qword [rbp - 0xb8]",
            "jne cryptodev_verbosity",
            "mov edx, dword [r12 + 0x30]",
            "lea rsi, [rbp - 0x70]",
            "lea rdi, [rbp - 0xb0]",
            "mov qword [rbp - 0xb8], r8",
            "call memcmp",
            "test eax, eax",
            "mov r8, qword [rbp - 0xb8]",
            "jne cryptodev_verbosity",
            "mov eax, dword [r13 + 0x38]",
            "test eax, eax",
            "jne 0x80036b0",
            "mov dword [r12 + 0x48], r14d",
            "xor ebx, ebx",
            "mov eax, ebx",
            "mov r12, qword [rbp - 0x20]",
            "mov rbx, qword [rbp - 0x28]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "lea rdi, [rdi + 0x38]",
            "mov ecx, r9d",
            "mov rdx, r8",
            "mov rsi, r8",
            "mov qword [rbp - 0xc0], r10",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov ebx, eax",
            "mov r10, qword [rbp - 0xc0]",
            "je 0x8003460",
            "cmp dword [0x080035f1], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1ed",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "add r13, 0x88",
            "mov edx, r15d",
            "mov rsi, r10",
            "mov rdi, r13",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov ebx, eax",
            "je 0x800347f",
            "cmp dword [0x08003656], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1f7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x0800369f], 1",
            "jg current_task",
            "mov ebx, 0xffffffb6",
            "jmp 0x80035a3",
            "lea rdi, [r13 + 0x38]",
            "mov ecx, r14d",
            "mov rdx, r8",
            "mov rsi, r8",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov ebx, eax",
            "je 0x800359c",
            "cmp dword [0x080036d3], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x228",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x08003719], 0",
            "mov ebx, 0xffffffea",
            "jle 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x209",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x08003761], 0",
            "js 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, ebx",
            "mov r8d, 0x1fe",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x080037a7], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x213",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x080037ed], 0",
            "js 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, ebx",
            "mov r8d, 0x219",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x21e",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov ebx, 0xffffffb6",
            "call printk",
            "jmp 0x80035a3"
        ]
    },
    "unk.0x800348b": {
        "function_address": "0x0800348b",
        "instructions": [
            "push rbp",
            "mov r10, rdx",
            "mov rbp, rsp",
            "sub rsp, 0xc0",
            "mov qword [rbp - 0x20], r12",
            "mov qword [rbp - 0x18], r13",
            "mov r12, rsi",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r13, rdi",
            "mov qword [rbp - 0x28], rbx",
            "cmp word [rsi + 4], 0",
            "mov r15d, ecx",
            "mov r14d, r9d",
            "jne 0x80034c0",
            "mov esi, dword [rdi + 0x38]",
            "test esi, esi",
            "jne 0x80035c0",
            "mov ecx, dword [r13 + 0x88]",
            "test ecx, ecx",
            "je 0x800359c",
            "test r15d, r15d",
            "jne 0x8003630",
            "add r13, 0x88",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, r13",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov ebx, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r12 + 0x30]",
            "mov rdi, qword [r12 + 0x28]",
            "lea rsi, [rbp - 0x70]",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x800359c",
            "mov ebx, 0xfffffff2",
            "jmp 0x80035a3",
            "mov edx, dword [rdi + 0x88]",
            "test edx, edx",
            "je 0x8003590",
            "mov edx, dword [rsi + 0x30]",
            "cmp edx, 0x40",
            "ja cryptodev_verbosity",
            "cmp r9d, edx",
            "jb cryptodev_verbosity",
            "mov rsi, qword [rsi + 0x28]",
            "lea rdi, [rbp - 0xb0]",
            "mov qword [rbp - 0xc0], r10",
            "mov qword [rbp - 0xb8], r8",
            "call _copy_from_user",
            "test rax, rax",
            "mov r10, qword [rbp - 0xc0]",
            "jne 0x80034b1",
            "lea rcx, [r13 + 0x88]",
            "mov edx, r15d",
            "mov rsi, r10",
            "mov rdi, rcx",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov ebx, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "mov r8, qword [rbp - 0xb8]",
            "jne cryptodev_verbosity",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "mov qword [rbp - 0xb8], r8",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov ebx, eax",
            "mov r8, qword [rbp - 0xb8]",
            "jne cryptodev_verbosity",
            "mov edx, dword [r12 + 0x30]",
            "lea rsi, [rbp - 0x70]",
            "lea rdi, [rbp - 0xb0]",
            "mov qword [rbp - 0xb8], r8",
            "call memcmp",
            "test eax, eax",
            "mov r8, qword [rbp - 0xb8]",
            "jne cryptodev_verbosity",
            "mov eax, dword [r13 + 0x38]",
            "test eax, eax",
            "jne 0x80036b0",
            "mov dword [r12 + 0x48], r14d",
            "xor ebx, ebx",
            "mov eax, ebx",
            "mov r12, qword [rbp - 0x20]",
            "mov rbx, qword [rbp - 0x28]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "lea rdi, [rdi + 0x38]",
            "mov ecx, r9d",
            "mov rdx, r8",
            "mov rsi, r8",
            "mov qword [rbp - 0xc0], r10",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov ebx, eax",
            "mov r10, qword [rbp - 0xc0]",
            "je 0x8003460",
            "cmp dword [0x080035f1], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1ed",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "add r13, 0x88",
            "mov edx, r15d",
            "mov rsi, r10",
            "mov rdi, r13",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov ebx, eax",
            "je 0x800347f",
            "cmp dword [0x08003656], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1f7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x0800369f], 1",
            "jg current_task",
            "mov ebx, 0xffffffb6",
            "jmp 0x80035a3",
            "lea rdi, [r13 + 0x38]",
            "mov ecx, r14d",
            "mov rdx, r8",
            "mov rsi, r8",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov ebx, eax",
            "je 0x800359c",
            "cmp dword [0x080036d3], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x228",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x08003719], 0",
            "mov ebx, 0xffffffea",
            "jle 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x209",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x08003761], 0",
            "js 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, ebx",
            "mov r8d, 0x1fe",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x080037a7], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x213",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x080037ed], 0",
            "js 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, ebx",
            "mov r8d, 0x219",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x21e",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov ebx, 0xffffffb6",
            "call printk",
            "jmp 0x80035a3"
        ]
    },
    "unk.0x80034a8": {
        "function_address": "0x080034a8",
        "instructions": [
            "push rbp",
            "mov r10, rdx",
            "mov rbp, rsp",
            "sub rsp, 0xc0",
            "mov qword [rbp - 0x20], r12",
            "mov qword [rbp - 0x18], r13",
            "mov r12, rsi",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r13, rdi",
            "mov qword [rbp - 0x28], rbx",
            "cmp word [rsi + 4], 0",
            "mov r15d, ecx",
            "mov r14d, r9d",
            "jne 0x80034c0",
            "mov esi, dword [rdi + 0x38]",
            "test esi, esi",
            "jne 0x80035c0",
            "mov ecx, dword [r13 + 0x88]",
            "test ecx, ecx",
            "je 0x800359c",
            "test r15d, r15d",
            "jne 0x8003630",
            "add r13, 0x88",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, r13",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov ebx, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r12 + 0x30]",
            "mov rdi, qword [r12 + 0x28]",
            "lea rsi, [rbp - 0x70]",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x800359c",
            "mov ebx, 0xfffffff2",
            "jmp 0x80035a3",
            "mov edx, dword [rdi + 0x88]",
            "test edx, edx",
            "je 0x8003590",
            "mov edx, dword [rsi + 0x30]",
            "cmp edx, 0x40",
            "ja cryptodev_verbosity",
            "cmp r9d, edx",
            "jb cryptodev_verbosity",
            "mov rsi, qword [rsi + 0x28]",
            "lea rdi, [rbp - 0xb0]",
            "mov qword [rbp - 0xc0], r10",
            "mov qword [rbp - 0xb8], r8",
            "call _copy_from_user",
            "test rax, rax",
            "mov r10, qword [rbp - 0xc0]",
            "jne 0x80034b1",
            "lea rcx, [r13 + 0x88]",
            "mov edx, r15d",
            "mov rsi, r10",
            "mov rdi, rcx",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov ebx, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "mov r8, qword [rbp - 0xb8]",
            "jne cryptodev_verbosity",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "mov qword [rbp - 0xb8], r8",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov ebx, eax",
            "mov r8, qword [rbp - 0xb8]",
            "jne cryptodev_verbosity",
            "mov edx, dword [r12 + 0x30]",
            "lea rsi, [rbp - 0x70]",
            "lea rdi, [rbp - 0xb0]",
            "mov qword [rbp - 0xb8], r8",
            "call memcmp",
            "test eax, eax",
            "mov r8, qword [rbp - 0xb8]",
            "jne cryptodev_verbosity",
            "mov eax, dword [r13 + 0x38]",
            "test eax, eax",
            "jne 0x80036b0",
            "mov dword [r12 + 0x48], r14d",
            "xor ebx, ebx",
            "mov eax, ebx",
            "mov r12, qword [rbp - 0x20]",
            "mov rbx, qword [rbp - 0x28]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "lea rdi, [rdi + 0x38]",
            "mov ecx, r9d",
            "mov rdx, r8",
            "mov rsi, r8",
            "mov qword [rbp - 0xc0], r10",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov ebx, eax",
            "mov r10, qword [rbp - 0xc0]",
            "je 0x8003460",
            "cmp dword [0x080035f1], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1ed",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "add r13, 0x88",
            "mov edx, r15d",
            "mov rsi, r10",
            "mov rdi, r13",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov ebx, eax",
            "je 0x800347f",
            "cmp dword [0x08003656], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1f7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x0800369f], 1",
            "jg current_task",
            "mov ebx, 0xffffffb6",
            "jmp 0x80035a3",
            "lea rdi, [r13 + 0x38]",
            "mov ecx, r14d",
            "mov rdx, r8",
            "mov rsi, r8",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov ebx, eax",
            "je 0x800359c",
            "cmp dword [0x080036d3], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x228",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x08003719], 0",
            "mov ebx, 0xffffffea",
            "jle 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x209",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x08003761], 0",
            "js 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, ebx",
            "mov r8d, 0x1fe",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x080037a7], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x213",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x080037ed], 0",
            "js 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, ebx",
            "mov r8d, 0x219",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x21e",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov ebx, 0xffffffb6",
            "call printk",
            "jmp 0x80035a3"
        ]
    },
    "unk.0x8003501": {
        "function_address": "0x08003501",
        "instructions": [
            "push rbp",
            "mov r10, rdx",
            "mov rbp, rsp",
            "sub rsp, 0xc0",
            "mov qword [rbp - 0x20], r12",
            "mov qword [rbp - 0x18], r13",
            "mov r12, rsi",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r13, rdi",
            "mov qword [rbp - 0x28], rbx",
            "cmp word [rsi + 4], 0",
            "mov r15d, ecx",
            "mov r14d, r9d",
            "jne 0x80034c0",
            "mov esi, dword [rdi + 0x38]",
            "test esi, esi",
            "jne 0x80035c0",
            "mov ecx, dword [r13 + 0x88]",
            "test ecx, ecx",
            "je 0x800359c",
            "test r15d, r15d",
            "jne 0x8003630",
            "add r13, 0x88",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, r13",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov ebx, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r12 + 0x30]",
            "mov rdi, qword [r12 + 0x28]",
            "lea rsi, [rbp - 0x70]",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x800359c",
            "mov ebx, 0xfffffff2",
            "jmp 0x80035a3",
            "mov edx, dword [rdi + 0x88]",
            "test edx, edx",
            "je 0x8003590",
            "mov edx, dword [rsi + 0x30]",
            "cmp edx, 0x40",
            "ja cryptodev_verbosity",
            "cmp r9d, edx",
            "jb cryptodev_verbosity",
            "mov rsi, qword [rsi + 0x28]",
            "lea rdi, [rbp - 0xb0]",
            "mov qword [rbp - 0xc0], r10",
            "mov qword [rbp - 0xb8], r8",
            "call _copy_from_user",
            "test rax, rax",
            "mov r10, qword [rbp - 0xc0]",
            "jne 0x80034b1",
            "lea rcx, [r13 + 0x88]",
            "mov edx, r15d",
            "mov rsi, r10",
            "mov rdi, rcx",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov ebx, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "mov r8, qword [rbp - 0xb8]",
            "jne cryptodev_verbosity",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "mov qword [rbp - 0xb8], r8",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov ebx, eax",
            "mov r8, qword [rbp - 0xb8]",
            "jne cryptodev_verbosity",
            "mov edx, dword [r12 + 0x30]",
            "lea rsi, [rbp - 0x70]",
            "lea rdi, [rbp - 0xb0]",
            "mov qword [rbp - 0xb8], r8",
            "call memcmp",
            "test eax, eax",
            "mov r8, qword [rbp - 0xb8]",
            "jne cryptodev_verbosity",
            "mov eax, dword [r13 + 0x38]",
            "test eax, eax",
            "jne 0x80036b0",
            "mov dword [r12 + 0x48], r14d",
            "xor ebx, ebx",
            "mov eax, ebx",
            "mov r12, qword [rbp - 0x20]",
            "mov rbx, qword [rbp - 0x28]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "lea rdi, [rdi + 0x38]",
            "mov ecx, r9d",
            "mov rdx, r8",
            "mov rsi, r8",
            "mov qword [rbp - 0xc0], r10",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov ebx, eax",
            "mov r10, qword [rbp - 0xc0]",
            "je 0x8003460",
            "cmp dword [0x080035f1], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1ed",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "add r13, 0x88",
            "mov edx, r15d",
            "mov rsi, r10",
            "mov rdi, r13",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov ebx, eax",
            "je 0x800347f",
            "cmp dword [0x08003656], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1f7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x0800369f], 1",
            "jg current_task",
            "mov ebx, 0xffffffb6",
            "jmp 0x80035a3",
            "lea rdi, [r13 + 0x38]",
            "mov ecx, r14d",
            "mov rdx, r8",
            "mov rsi, r8",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov ebx, eax",
            "je 0x800359c",
            "cmp dword [0x080036d3], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x228",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x08003719], 0",
            "mov ebx, 0xffffffea",
            "jle 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x209",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x08003761], 0",
            "js 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, ebx",
            "mov r8d, 0x1fe",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x080037a7], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x213",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x080037ed], 0",
            "js 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, ebx",
            "mov r8d, 0x219",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x21e",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov ebx, 0xffffffb6",
            "call printk",
            "jmp 0x80035a3"
        ]
    },
    "unk.0x8003529": {
        "function_address": "0x08003529",
        "instructions": [
            "push rbp",
            "mov r10, rdx",
            "mov rbp, rsp",
            "sub rsp, 0xc0",
            "mov qword [rbp - 0x20], r12",
            "mov qword [rbp - 0x18], r13",
            "mov r12, rsi",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r13, rdi",
            "mov qword [rbp - 0x28], rbx",
            "cmp word [rsi + 4], 0",
            "mov r15d, ecx",
            "mov r14d, r9d",
            "jne 0x80034c0",
            "mov esi, dword [rdi + 0x38]",
            "test esi, esi",
            "jne 0x80035c0",
            "mov ecx, dword [r13 + 0x88]",
            "test ecx, ecx",
            "je 0x800359c",
            "test r15d, r15d",
            "jne 0x8003630",
            "add r13, 0x88",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, r13",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov ebx, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r12 + 0x30]",
            "mov rdi, qword [r12 + 0x28]",
            "lea rsi, [rbp - 0x70]",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x800359c",
            "mov ebx, 0xfffffff2",
            "jmp 0x80035a3",
            "mov edx, dword [rdi + 0x88]",
            "test edx, edx",
            "je 0x8003590",
            "mov edx, dword [rsi + 0x30]",
            "cmp edx, 0x40",
            "ja cryptodev_verbosity",
            "cmp r9d, edx",
            "jb cryptodev_verbosity",
            "mov rsi, qword [rsi + 0x28]",
            "lea rdi, [rbp - 0xb0]",
            "mov qword [rbp - 0xc0], r10",
            "mov qword [rbp - 0xb8], r8",
            "call _copy_from_user",
            "test rax, rax",
            "mov r10, qword [rbp - 0xc0]",
            "jne 0x80034b1",
            "lea rcx, [r13 + 0x88]",
            "mov edx, r15d",
            "mov rsi, r10",
            "mov rdi, rcx",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov ebx, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "mov r8, qword [rbp - 0xb8]",
            "jne cryptodev_verbosity",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "mov qword [rbp - 0xb8], r8",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov ebx, eax",
            "mov r8, qword [rbp - 0xb8]",
            "jne cryptodev_verbosity",
            "mov edx, dword [r12 + 0x30]",
            "lea rsi, [rbp - 0x70]",
            "lea rdi, [rbp - 0xb0]",
            "mov qword [rbp - 0xb8], r8",
            "call memcmp",
            "test eax, eax",
            "mov r8, qword [rbp - 0xb8]",
            "jne cryptodev_verbosity",
            "mov eax, dword [r13 + 0x38]",
            "test eax, eax",
            "jne 0x80036b0",
            "mov dword [r12 + 0x48], r14d",
            "xor ebx, ebx",
            "mov eax, ebx",
            "mov r12, qword [rbp - 0x20]",
            "mov rbx, qword [rbp - 0x28]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "lea rdi, [rdi + 0x38]",
            "mov ecx, r9d",
            "mov rdx, r8",
            "mov rsi, r8",
            "mov qword [rbp - 0xc0], r10",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov ebx, eax",
            "mov r10, qword [rbp - 0xc0]",
            "je 0x8003460",
            "cmp dword [0x080035f1], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1ed",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "add r13, 0x88",
            "mov edx, r15d",
            "mov rsi, r10",
            "mov rdi, r13",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov ebx, eax",
            "je 0x800347f",
            "cmp dword [0x08003656], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1f7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x0800369f], 1",
            "jg current_task",
            "mov ebx, 0xffffffb6",
            "jmp 0x80035a3",
            "lea rdi, [r13 + 0x38]",
            "mov ecx, r14d",
            "mov rdx, r8",
            "mov rsi, r8",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov ebx, eax",
            "je 0x800359c",
            "cmp dword [0x080036d3], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x228",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x08003719], 0",
            "mov ebx, 0xffffffea",
            "jle 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x209",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x08003761], 0",
            "js 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, ebx",
            "mov r8d, 0x1fe",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x080037a7], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x213",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x080037ed], 0",
            "js 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, ebx",
            "mov r8d, 0x219",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x21e",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov ebx, 0xffffffb6",
            "call printk",
            "jmp 0x80035a3"
        ]
    },
    "unk.0x8003554": {
        "function_address": "0x08003554",
        "instructions": [
            "push rbp",
            "mov r10, rdx",
            "mov rbp, rsp",
            "sub rsp, 0xc0",
            "mov qword [rbp - 0x20], r12",
            "mov qword [rbp - 0x18], r13",
            "mov r12, rsi",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r13, rdi",
            "mov qword [rbp - 0x28], rbx",
            "cmp word [rsi + 4], 0",
            "mov r15d, ecx",
            "mov r14d, r9d",
            "jne 0x80034c0",
            "mov esi, dword [rdi + 0x38]",
            "test esi, esi",
            "jne 0x80035c0",
            "mov ecx, dword [r13 + 0x88]",
            "test ecx, ecx",
            "je 0x800359c",
            "test r15d, r15d",
            "jne 0x8003630",
            "add r13, 0x88",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, r13",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov ebx, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r12 + 0x30]",
            "mov rdi, qword [r12 + 0x28]",
            "lea rsi, [rbp - 0x70]",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x800359c",
            "mov ebx, 0xfffffff2",
            "jmp 0x80035a3",
            "mov edx, dword [rdi + 0x88]",
            "test edx, edx",
            "je 0x8003590",
            "mov edx, dword [rsi + 0x30]",
            "cmp edx, 0x40",
            "ja cryptodev_verbosity",
            "cmp r9d, edx",
            "jb cryptodev_verbosity",
            "mov rsi, qword [rsi + 0x28]",
            "lea rdi, [rbp - 0xb0]",
            "mov qword [rbp - 0xc0], r10",
            "mov qword [rbp - 0xb8], r8",
            "call _copy_from_user",
            "test rax, rax",
            "mov r10, qword [rbp - 0xc0]",
            "jne 0x80034b1",
            "lea rcx, [r13 + 0x88]",
            "mov edx, r15d",
            "mov rsi, r10",
            "mov rdi, rcx",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov ebx, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "mov r8, qword [rbp - 0xb8]",
            "jne cryptodev_verbosity",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "mov qword [rbp - 0xb8], r8",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov ebx, eax",
            "mov r8, qword [rbp - 0xb8]",
            "jne cryptodev_verbosity",
            "mov edx, dword [r12 + 0x30]",
            "lea rsi, [rbp - 0x70]",
            "lea rdi, [rbp - 0xb0]",
            "mov qword [rbp - 0xb8], r8",
            "call memcmp",
            "test eax, eax",
            "mov r8, qword [rbp - 0xb8]",
            "jne cryptodev_verbosity",
            "mov eax, dword [r13 + 0x38]",
            "test eax, eax",
            "jne 0x80036b0",
            "mov dword [r12 + 0x48], r14d",
            "xor ebx, ebx",
            "mov eax, ebx",
            "mov r12, qword [rbp - 0x20]",
            "mov rbx, qword [rbp - 0x28]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "lea rdi, [rdi + 0x38]",
            "mov ecx, r9d",
            "mov rdx, r8",
            "mov rsi, r8",
            "mov qword [rbp - 0xc0], r10",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov ebx, eax",
            "mov r10, qword [rbp - 0xc0]",
            "je 0x8003460",
            "cmp dword [0x080035f1], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1ed",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "add r13, 0x88",
            "mov edx, r15d",
            "mov rsi, r10",
            "mov rdi, r13",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov ebx, eax",
            "je 0x800347f",
            "cmp dword [0x08003656], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1f7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x0800369f], 1",
            "jg current_task",
            "mov ebx, 0xffffffb6",
            "jmp 0x80035a3",
            "lea rdi, [r13 + 0x38]",
            "mov ecx, r14d",
            "mov rdx, r8",
            "mov rsi, r8",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov ebx, eax",
            "je 0x800359c",
            "cmp dword [0x080036d3], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x228",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x08003719], 0",
            "mov ebx, 0xffffffea",
            "jle 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x209",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x08003761], 0",
            "js 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, ebx",
            "mov r8d, 0x1fe",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x080037a7], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x213",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x080037ed], 0",
            "js 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, ebx",
            "mov r8d, 0x219",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x21e",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov ebx, 0xffffffb6",
            "call printk",
            "jmp 0x80035a3"
        ]
    },
    "unk.0x8003581": {
        "function_address": "0x08003581",
        "instructions": [
            "push rbp",
            "mov r10, rdx",
            "mov rbp, rsp",
            "sub rsp, 0xc0",
            "mov qword [rbp - 0x20], r12",
            "mov qword [rbp - 0x18], r13",
            "mov r12, rsi",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r13, rdi",
            "mov qword [rbp - 0x28], rbx",
            "cmp word [rsi + 4], 0",
            "mov r15d, ecx",
            "mov r14d, r9d",
            "jne 0x80034c0",
            "mov esi, dword [rdi + 0x38]",
            "test esi, esi",
            "jne 0x80035c0",
            "mov ecx, dword [r13 + 0x88]",
            "test ecx, ecx",
            "je 0x800359c",
            "test r15d, r15d",
            "jne 0x8003630",
            "add r13, 0x88",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, r13",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov ebx, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r12 + 0x30]",
            "mov rdi, qword [r12 + 0x28]",
            "lea rsi, [rbp - 0x70]",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x800359c",
            "mov ebx, 0xfffffff2",
            "jmp 0x80035a3",
            "mov edx, dword [rdi + 0x88]",
            "test edx, edx",
            "je 0x8003590",
            "mov edx, dword [rsi + 0x30]",
            "cmp edx, 0x40",
            "ja cryptodev_verbosity",
            "cmp r9d, edx",
            "jb cryptodev_verbosity",
            "mov rsi, qword [rsi + 0x28]",
            "lea rdi, [rbp - 0xb0]",
            "mov qword [rbp - 0xc0], r10",
            "mov qword [rbp - 0xb8], r8",
            "call _copy_from_user",
            "test rax, rax",
            "mov r10, qword [rbp - 0xc0]",
            "jne 0x80034b1",
            "lea rcx, [r13 + 0x88]",
            "mov edx, r15d",
            "mov rsi, r10",
            "mov rdi, rcx",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov ebx, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "mov r8, qword [rbp - 0xb8]",
            "jne cryptodev_verbosity",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "mov qword [rbp - 0xb8], r8",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov ebx, eax",
            "mov r8, qword [rbp - 0xb8]",
            "jne cryptodev_verbosity",
            "mov edx, dword [r12 + 0x30]",
            "lea rsi, [rbp - 0x70]",
            "lea rdi, [rbp - 0xb0]",
            "mov qword [rbp - 0xb8], r8",
            "call memcmp",
            "test eax, eax",
            "mov r8, qword [rbp - 0xb8]",
            "jne cryptodev_verbosity",
            "mov eax, dword [r13 + 0x38]",
            "test eax, eax",
            "jne 0x80036b0",
            "mov dword [r12 + 0x48], r14d",
            "xor ebx, ebx",
            "mov eax, ebx",
            "mov r12, qword [rbp - 0x20]",
            "mov rbx, qword [rbp - 0x28]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "lea rdi, [rdi + 0x38]",
            "mov ecx, r9d",
            "mov rdx, r8",
            "mov rsi, r8",
            "mov qword [rbp - 0xc0], r10",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov ebx, eax",
            "mov r10, qword [rbp - 0xc0]",
            "je 0x8003460",
            "cmp dword [0x080035f1], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1ed",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "add r13, 0x88",
            "mov edx, r15d",
            "mov rsi, r10",
            "mov rdi, r13",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov ebx, eax",
            "je 0x800347f",
            "cmp dword [0x08003656], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1f7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x0800369f], 1",
            "jg current_task",
            "mov ebx, 0xffffffb6",
            "jmp 0x80035a3",
            "lea rdi, [r13 + 0x38]",
            "mov ecx, r14d",
            "mov rdx, r8",
            "mov rsi, r8",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov ebx, eax",
            "je 0x800359c",
            "cmp dword [0x080036d3], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x228",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x08003719], 0",
            "mov ebx, 0xffffffea",
            "jle 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x209",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x08003761], 0",
            "js 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, ebx",
            "mov r8d, 0x1fe",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x080037a7], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x213",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x080037ed], 0",
            "js 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, ebx",
            "mov r8d, 0x219",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x21e",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov ebx, 0xffffffb6",
            "call printk",
            "jmp 0x80035a3"
        ]
    },
    "unk.0x80035d9": {
        "function_address": "0x080035d9",
        "instructions": [
            "push rbp",
            "mov r10, rdx",
            "mov rbp, rsp",
            "sub rsp, 0xc0",
            "mov qword [rbp - 0x20], r12",
            "mov qword [rbp - 0x18], r13",
            "mov r12, rsi",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r13, rdi",
            "mov qword [rbp - 0x28], rbx",
            "cmp word [rsi + 4], 0",
            "mov r15d, ecx",
            "mov r14d, r9d",
            "jne 0x80034c0",
            "mov esi, dword [rdi + 0x38]",
            "test esi, esi",
            "jne 0x80035c0",
            "mov ecx, dword [r13 + 0x88]",
            "test ecx, ecx",
            "je 0x800359c",
            "test r15d, r15d",
            "jne 0x8003630",
            "add r13, 0x88",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, r13",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov ebx, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r12 + 0x30]",
            "mov rdi, qword [r12 + 0x28]",
            "lea rsi, [rbp - 0x70]",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x800359c",
            "mov ebx, 0xfffffff2",
            "jmp 0x80035a3",
            "mov edx, dword [rdi + 0x88]",
            "test edx, edx",
            "je 0x8003590",
            "mov edx, dword [rsi + 0x30]",
            "cmp edx, 0x40",
            "ja cryptodev_verbosity",
            "cmp r9d, edx",
            "jb cryptodev_verbosity",
            "mov rsi, qword [rsi + 0x28]",
            "lea rdi, [rbp - 0xb0]",
            "mov qword [rbp - 0xc0], r10",
            "mov qword [rbp - 0xb8], r8",
            "call _copy_from_user",
            "test rax, rax",
            "mov r10, qword [rbp - 0xc0]",
            "jne 0x80034b1",
            "lea rcx, [r13 + 0x88]",
            "mov edx, r15d",
            "mov rsi, r10",
            "mov rdi, rcx",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov ebx, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "mov r8, qword [rbp - 0xb8]",
            "jne cryptodev_verbosity",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "mov qword [rbp - 0xb8], r8",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov ebx, eax",
            "mov r8, qword [rbp - 0xb8]",
            "jne cryptodev_verbosity",
            "mov edx, dword [r12 + 0x30]",
            "lea rsi, [rbp - 0x70]",
            "lea rdi, [rbp - 0xb0]",
            "mov qword [rbp - 0xb8], r8",
            "call memcmp",
            "test eax, eax",
            "mov r8, qword [rbp - 0xb8]",
            "jne cryptodev_verbosity",
            "mov eax, dword [r13 + 0x38]",
            "test eax, eax",
            "jne 0x80036b0",
            "mov dword [r12 + 0x48], r14d",
            "xor ebx, ebx",
            "mov eax, ebx",
            "mov r12, qword [rbp - 0x20]",
            "mov rbx, qword [rbp - 0x28]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "lea rdi, [rdi + 0x38]",
            "mov ecx, r9d",
            "mov rdx, r8",
            "mov rsi, r8",
            "mov qword [rbp - 0xc0], r10",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov ebx, eax",
            "mov r10, qword [rbp - 0xc0]",
            "je 0x8003460",
            "cmp dword [0x080035f1], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1ed",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "add r13, 0x88",
            "mov edx, r15d",
            "mov rsi, r10",
            "mov rdi, r13",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov ebx, eax",
            "je 0x800347f",
            "cmp dword [0x08003656], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1f7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x0800369f], 1",
            "jg current_task",
            "mov ebx, 0xffffffb6",
            "jmp 0x80035a3",
            "lea rdi, [r13 + 0x38]",
            "mov ecx, r14d",
            "mov rdx, r8",
            "mov rsi, r8",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov ebx, eax",
            "je 0x800359c",
            "cmp dword [0x080036d3], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x228",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x08003719], 0",
            "mov ebx, 0xffffffea",
            "jle 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x209",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x08003761], 0",
            "js 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, ebx",
            "mov r8d, 0x1fe",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x080037a7], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x213",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x080037ed], 0",
            "js 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, ebx",
            "mov r8d, 0x219",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x21e",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov ebx, 0xffffffb6",
            "call printk",
            "jmp 0x80035a3"
        ]
    },
    "unk.0x8003627": {
        "function_address": "0x08003627",
        "instructions": [
            "push rbp",
            "mov r10, rdx",
            "mov rbp, rsp",
            "sub rsp, 0xc0",
            "mov qword [rbp - 0x20], r12",
            "mov qword [rbp - 0x18], r13",
            "mov r12, rsi",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r13, rdi",
            "mov qword [rbp - 0x28], rbx",
            "cmp word [rsi + 4], 0",
            "mov r15d, ecx",
            "mov r14d, r9d",
            "jne 0x80034c0",
            "mov esi, dword [rdi + 0x38]",
            "test esi, esi",
            "jne 0x80035c0",
            "mov ecx, dword [r13 + 0x88]",
            "test ecx, ecx",
            "je 0x800359c",
            "test r15d, r15d",
            "jne 0x8003630",
            "add r13, 0x88",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, r13",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov ebx, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r12 + 0x30]",
            "mov rdi, qword [r12 + 0x28]",
            "lea rsi, [rbp - 0x70]",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x800359c",
            "mov ebx, 0xfffffff2",
            "jmp 0x80035a3",
            "mov edx, dword [rdi + 0x88]",
            "test edx, edx",
            "je 0x8003590",
            "mov edx, dword [rsi + 0x30]",
            "cmp edx, 0x40",
            "ja cryptodev_verbosity",
            "cmp r9d, edx",
            "jb cryptodev_verbosity",
            "mov rsi, qword [rsi + 0x28]",
            "lea rdi, [rbp - 0xb0]",
            "mov qword [rbp - 0xc0], r10",
            "mov qword [rbp - 0xb8], r8",
            "call _copy_from_user",
            "test rax, rax",
            "mov r10, qword [rbp - 0xc0]",
            "jne 0x80034b1",
            "lea rcx, [r13 + 0x88]",
            "mov edx, r15d",
            "mov rsi, r10",
            "mov rdi, rcx",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov ebx, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "mov r8, qword [rbp - 0xb8]",
            "jne cryptodev_verbosity",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "mov qword [rbp - 0xb8], r8",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov ebx, eax",
            "mov r8, qword [rbp - 0xb8]",
            "jne cryptodev_verbosity",
            "mov edx, dword [r12 + 0x30]",
            "lea rsi, [rbp - 0x70]",
            "lea rdi, [rbp - 0xb0]",
            "mov qword [rbp - 0xb8], r8",
            "call memcmp",
            "test eax, eax",
            "mov r8, qword [rbp - 0xb8]",
            "jne cryptodev_verbosity",
            "mov eax, dword [r13 + 0x38]",
            "test eax, eax",
            "jne 0x80036b0",
            "mov dword [r12 + 0x48], r14d",
            "xor ebx, ebx",
            "mov eax, ebx",
            "mov r12, qword [rbp - 0x20]",
            "mov rbx, qword [rbp - 0x28]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "lea rdi, [rdi + 0x38]",
            "mov ecx, r9d",
            "mov rdx, r8",
            "mov rsi, r8",
            "mov qword [rbp - 0xc0], r10",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov ebx, eax",
            "mov r10, qword [rbp - 0xc0]",
            "je 0x8003460",
            "cmp dword [0x080035f1], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1ed",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "add r13, 0x88",
            "mov edx, r15d",
            "mov rsi, r10",
            "mov rdi, r13",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov ebx, eax",
            "je 0x800347f",
            "cmp dword [0x08003656], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1f7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x0800369f], 1",
            "jg current_task",
            "mov ebx, 0xffffffb6",
            "jmp 0x80035a3",
            "lea rdi, [r13 + 0x38]",
            "mov ecx, r14d",
            "mov rdx, r8",
            "mov rsi, r8",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov ebx, eax",
            "je 0x800359c",
            "cmp dword [0x080036d3], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x228",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x08003719], 0",
            "mov ebx, 0xffffffea",
            "jle 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x209",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x08003761], 0",
            "js 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, ebx",
            "mov r8d, 0x1fe",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x080037a7], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x213",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x080037ed], 0",
            "js 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, ebx",
            "mov r8d, 0x219",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x21e",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov ebx, 0xffffffb6",
            "call printk",
            "jmp 0x80035a3"
        ]
    },
    "unk.0x8003645": {
        "function_address": "0x08003645",
        "instructions": [
            "push rbp",
            "mov r10, rdx",
            "mov rbp, rsp",
            "sub rsp, 0xc0",
            "mov qword [rbp - 0x20], r12",
            "mov qword [rbp - 0x18], r13",
            "mov r12, rsi",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r13, rdi",
            "mov qword [rbp - 0x28], rbx",
            "cmp word [rsi + 4], 0",
            "mov r15d, ecx",
            "mov r14d, r9d",
            "jne 0x80034c0",
            "mov esi, dword [rdi + 0x38]",
            "test esi, esi",
            "jne 0x80035c0",
            "mov ecx, dword [r13 + 0x88]",
            "test ecx, ecx",
            "je 0x800359c",
            "test r15d, r15d",
            "jne 0x8003630",
            "add r13, 0x88",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, r13",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov ebx, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r12 + 0x30]",
            "mov rdi, qword [r12 + 0x28]",
            "lea rsi, [rbp - 0x70]",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x800359c",
            "mov ebx, 0xfffffff2",
            "jmp 0x80035a3",
            "mov edx, dword [rdi + 0x88]",
            "test edx, edx",
            "je 0x8003590",
            "mov edx, dword [rsi + 0x30]",
            "cmp edx, 0x40",
            "ja cryptodev_verbosity",
            "cmp r9d, edx",
            "jb cryptodev_verbosity",
            "mov rsi, qword [rsi + 0x28]",
            "lea rdi, [rbp - 0xb0]",
            "mov qword [rbp - 0xc0], r10",
            "mov qword [rbp - 0xb8], r8",
            "call _copy_from_user",
            "test rax, rax",
            "mov r10, qword [rbp - 0xc0]",
            "jne 0x80034b1",
            "lea rcx, [r13 + 0x88]",
            "mov edx, r15d",
            "mov rsi, r10",
            "mov rdi, rcx",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov ebx, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "mov r8, qword [rbp - 0xb8]",
            "jne cryptodev_verbosity",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "mov qword [rbp - 0xb8], r8",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov ebx, eax",
            "mov r8, qword [rbp - 0xb8]",
            "jne cryptodev_verbosity",
            "mov edx, dword [r12 + 0x30]",
            "lea rsi, [rbp - 0x70]",
            "lea rdi, [rbp - 0xb0]",
            "mov qword [rbp - 0xb8], r8",
            "call memcmp",
            "test eax, eax",
            "mov r8, qword [rbp - 0xb8]",
            "jne cryptodev_verbosity",
            "mov eax, dword [r13 + 0x38]",
            "test eax, eax",
            "jne 0x80036b0",
            "mov dword [r12 + 0x48], r14d",
            "xor ebx, ebx",
            "mov eax, ebx",
            "mov r12, qword [rbp - 0x20]",
            "mov rbx, qword [rbp - 0x28]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "lea rdi, [rdi + 0x38]",
            "mov ecx, r9d",
            "mov rdx, r8",
            "mov rsi, r8",
            "mov qword [rbp - 0xc0], r10",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov ebx, eax",
            "mov r10, qword [rbp - 0xc0]",
            "je 0x8003460",
            "cmp dword [0x080035f1], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1ed",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "add r13, 0x88",
            "mov edx, r15d",
            "mov rsi, r10",
            "mov rdi, r13",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov ebx, eax",
            "je 0x800347f",
            "cmp dword [0x08003656], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1f7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x0800369f], 1",
            "jg current_task",
            "mov ebx, 0xffffffb6",
            "jmp 0x80035a3",
            "lea rdi, [r13 + 0x38]",
            "mov ecx, r14d",
            "mov rdx, r8",
            "mov rsi, r8",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov ebx, eax",
            "je 0x800359c",
            "cmp dword [0x080036d3], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x228",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x08003719], 0",
            "mov ebx, 0xffffffea",
            "jle 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x209",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x08003761], 0",
            "js 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, ebx",
            "mov r8d, 0x1fe",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x080037a7], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x213",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x080037ed], 0",
            "js 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, ebx",
            "mov r8d, 0x219",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x21e",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov ebx, 0xffffffb6",
            "call printk",
            "jmp 0x80035a3"
        ]
    },
    "unk.0x8003690": {
        "function_address": "0x08003690",
        "instructions": [
            "push rbp",
            "mov r10, rdx",
            "mov rbp, rsp",
            "sub rsp, 0xc0",
            "mov qword [rbp - 0x20], r12",
            "mov qword [rbp - 0x18], r13",
            "mov r12, rsi",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r13, rdi",
            "mov qword [rbp - 0x28], rbx",
            "cmp word [rsi + 4], 0",
            "mov r15d, ecx",
            "mov r14d, r9d",
            "jne 0x80034c0",
            "mov esi, dword [rdi + 0x38]",
            "test esi, esi",
            "jne 0x80035c0",
            "mov ecx, dword [r13 + 0x88]",
            "test ecx, ecx",
            "je 0x800359c",
            "test r15d, r15d",
            "jne 0x8003630",
            "add r13, 0x88",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, r13",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov ebx, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r12 + 0x30]",
            "mov rdi, qword [r12 + 0x28]",
            "lea rsi, [rbp - 0x70]",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x800359c",
            "mov ebx, 0xfffffff2",
            "jmp 0x80035a3",
            "mov edx, dword [rdi + 0x88]",
            "test edx, edx",
            "je 0x8003590",
            "mov edx, dword [rsi + 0x30]",
            "cmp edx, 0x40",
            "ja cryptodev_verbosity",
            "cmp r9d, edx",
            "jb cryptodev_verbosity",
            "mov rsi, qword [rsi + 0x28]",
            "lea rdi, [rbp - 0xb0]",
            "mov qword [rbp - 0xc0], r10",
            "mov qword [rbp - 0xb8], r8",
            "call _copy_from_user",
            "test rax, rax",
            "mov r10, qword [rbp - 0xc0]",
            "jne 0x80034b1",
            "lea rcx, [r13 + 0x88]",
            "mov edx, r15d",
            "mov rsi, r10",
            "mov rdi, rcx",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov ebx, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "mov r8, qword [rbp - 0xb8]",
            "jne cryptodev_verbosity",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "mov qword [rbp - 0xb8], r8",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov ebx, eax",
            "mov r8, qword [rbp - 0xb8]",
            "jne cryptodev_verbosity",
            "mov edx, dword [r12 + 0x30]",
            "lea rsi, [rbp - 0x70]",
            "lea rdi, [rbp - 0xb0]",
            "mov qword [rbp - 0xb8], r8",
            "call memcmp",
            "test eax, eax",
            "mov r8, qword [rbp - 0xb8]",
            "jne cryptodev_verbosity",
            "mov eax, dword [r13 + 0x38]",
            "test eax, eax",
            "jne 0x80036b0",
            "mov dword [r12 + 0x48], r14d",
            "xor ebx, ebx",
            "mov eax, ebx",
            "mov r12, qword [rbp - 0x20]",
            "mov rbx, qword [rbp - 0x28]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "lea rdi, [rdi + 0x38]",
            "mov ecx, r9d",
            "mov rdx, r8",
            "mov rsi, r8",
            "mov qword [rbp - 0xc0], r10",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov ebx, eax",
            "mov r10, qword [rbp - 0xc0]",
            "je 0x8003460",
            "cmp dword [0x080035f1], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1ed",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "add r13, 0x88",
            "mov edx, r15d",
            "mov rsi, r10",
            "mov rdi, r13",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov ebx, eax",
            "je 0x800347f",
            "cmp dword [0x08003656], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1f7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x0800369f], 1",
            "jg current_task",
            "mov ebx, 0xffffffb6",
            "jmp 0x80035a3",
            "lea rdi, [r13 + 0x38]",
            "mov ecx, r14d",
            "mov rdx, r8",
            "mov rsi, r8",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov ebx, eax",
            "je 0x800359c",
            "cmp dword [0x080036d3], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x228",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x08003719], 0",
            "mov ebx, 0xffffffea",
            "jle 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x209",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x08003761], 0",
            "js 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, ebx",
            "mov r8d, 0x1fe",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x080037a7], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x213",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x080037ed], 0",
            "js 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, ebx",
            "mov r8d, 0x219",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x21e",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov ebx, 0xffffffb6",
            "call printk",
            "jmp 0x80035a3"
        ]
    },
    "unk.0x80036c2": {
        "function_address": "0x080036c2",
        "instructions": [
            "push rbp",
            "mov r10, rdx",
            "mov rbp, rsp",
            "sub rsp, 0xc0",
            "mov qword [rbp - 0x20], r12",
            "mov qword [rbp - 0x18], r13",
            "mov r12, rsi",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r13, rdi",
            "mov qword [rbp - 0x28], rbx",
            "cmp word [rsi + 4], 0",
            "mov r15d, ecx",
            "mov r14d, r9d",
            "jne 0x80034c0",
            "mov esi, dword [rdi + 0x38]",
            "test esi, esi",
            "jne 0x80035c0",
            "mov ecx, dword [r13 + 0x88]",
            "test ecx, ecx",
            "je 0x800359c",
            "test r15d, r15d",
            "jne 0x8003630",
            "add r13, 0x88",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, r13",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov ebx, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r12 + 0x30]",
            "mov rdi, qword [r12 + 0x28]",
            "lea rsi, [rbp - 0x70]",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x800359c",
            "mov ebx, 0xfffffff2",
            "jmp 0x80035a3",
            "mov edx, dword [rdi + 0x88]",
            "test edx, edx",
            "je 0x8003590",
            "mov edx, dword [rsi + 0x30]",
            "cmp edx, 0x40",
            "ja cryptodev_verbosity",
            "cmp r9d, edx",
            "jb cryptodev_verbosity",
            "mov rsi, qword [rsi + 0x28]",
            "lea rdi, [rbp - 0xb0]",
            "mov qword [rbp - 0xc0], r10",
            "mov qword [rbp - 0xb8], r8",
            "call _copy_from_user",
            "test rax, rax",
            "mov r10, qword [rbp - 0xc0]",
            "jne 0x80034b1",
            "lea rcx, [r13 + 0x88]",
            "mov edx, r15d",
            "mov rsi, r10",
            "mov rdi, rcx",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov ebx, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "mov r8, qword [rbp - 0xb8]",
            "jne cryptodev_verbosity",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "mov qword [rbp - 0xb8], r8",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov ebx, eax",
            "mov r8, qword [rbp - 0xb8]",
            "jne cryptodev_verbosity",
            "mov edx, dword [r12 + 0x30]",
            "lea rsi, [rbp - 0x70]",
            "lea rdi, [rbp - 0xb0]",
            "mov qword [rbp - 0xb8], r8",
            "call memcmp",
            "test eax, eax",
            "mov r8, qword [rbp - 0xb8]",
            "jne cryptodev_verbosity",
            "mov eax, dword [r13 + 0x38]",
            "test eax, eax",
            "jne 0x80036b0",
            "mov dword [r12 + 0x48], r14d",
            "xor ebx, ebx",
            "mov eax, ebx",
            "mov r12, qword [rbp - 0x20]",
            "mov rbx, qword [rbp - 0x28]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "lea rdi, [rdi + 0x38]",
            "mov ecx, r9d",
            "mov rdx, r8",
            "mov rsi, r8",
            "mov qword [rbp - 0xc0], r10",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov ebx, eax",
            "mov r10, qword [rbp - 0xc0]",
            "je 0x8003460",
            "cmp dword [0x080035f1], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1ed",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "add r13, 0x88",
            "mov edx, r15d",
            "mov rsi, r10",
            "mov rdi, r13",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov ebx, eax",
            "je 0x800347f",
            "cmp dword [0x08003656], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1f7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x0800369f], 1",
            "jg current_task",
            "mov ebx, 0xffffffb6",
            "jmp 0x80035a3",
            "lea rdi, [r13 + 0x38]",
            "mov ecx, r14d",
            "mov rdx, r8",
            "mov rsi, r8",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov ebx, eax",
            "je 0x800359c",
            "cmp dword [0x080036d3], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x228",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x08003719], 0",
            "mov ebx, 0xffffffea",
            "jle 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x209",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x08003761], 0",
            "js 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, ebx",
            "mov r8d, 0x1fe",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x080037a7], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x213",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x080037ed], 0",
            "js 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, ebx",
            "mov r8d, 0x219",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x21e",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov ebx, 0xffffffb6",
            "call printk",
            "jmp 0x80035a3"
        ]
    },
    "unk.0x800370d": {
        "function_address": "0x0800370d",
        "instructions": [
            "push rbp",
            "mov r10, rdx",
            "mov rbp, rsp",
            "sub rsp, 0xc0",
            "mov qword [rbp - 0x20], r12",
            "mov qword [rbp - 0x18], r13",
            "mov r12, rsi",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r13, rdi",
            "mov qword [rbp - 0x28], rbx",
            "cmp word [rsi + 4], 0",
            "mov r15d, ecx",
            "mov r14d, r9d",
            "jne 0x80034c0",
            "mov esi, dword [rdi + 0x38]",
            "test esi, esi",
            "jne 0x80035c0",
            "mov ecx, dword [r13 + 0x88]",
            "test ecx, ecx",
            "je 0x800359c",
            "test r15d, r15d",
            "jne 0x8003630",
            "add r13, 0x88",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, r13",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov ebx, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r12 + 0x30]",
            "mov rdi, qword [r12 + 0x28]",
            "lea rsi, [rbp - 0x70]",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x800359c",
            "mov ebx, 0xfffffff2",
            "jmp 0x80035a3",
            "mov edx, dword [rdi + 0x88]",
            "test edx, edx",
            "je 0x8003590",
            "mov edx, dword [rsi + 0x30]",
            "cmp edx, 0x40",
            "ja cryptodev_verbosity",
            "cmp r9d, edx",
            "jb cryptodev_verbosity",
            "mov rsi, qword [rsi + 0x28]",
            "lea rdi, [rbp - 0xb0]",
            "mov qword [rbp - 0xc0], r10",
            "mov qword [rbp - 0xb8], r8",
            "call _copy_from_user",
            "test rax, rax",
            "mov r10, qword [rbp - 0xc0]",
            "jne 0x80034b1",
            "lea rcx, [r13 + 0x88]",
            "mov edx, r15d",
            "mov rsi, r10",
            "mov rdi, rcx",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov ebx, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "mov r8, qword [rbp - 0xb8]",
            "jne cryptodev_verbosity",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "mov qword [rbp - 0xb8], r8",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov ebx, eax",
            "mov r8, qword [rbp - 0xb8]",
            "jne cryptodev_verbosity",
            "mov edx, dword [r12 + 0x30]",
            "lea rsi, [rbp - 0x70]",
            "lea rdi, [rbp - 0xb0]",
            "mov qword [rbp - 0xb8], r8",
            "call memcmp",
            "test eax, eax",
            "mov r8, qword [rbp - 0xb8]",
            "jne cryptodev_verbosity",
            "mov eax, dword [r13 + 0x38]",
            "test eax, eax",
            "jne 0x80036b0",
            "mov dword [r12 + 0x48], r14d",
            "xor ebx, ebx",
            "mov eax, ebx",
            "mov r12, qword [rbp - 0x20]",
            "mov rbx, qword [rbp - 0x28]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "lea rdi, [rdi + 0x38]",
            "mov ecx, r9d",
            "mov rdx, r8",
            "mov rsi, r8",
            "mov qword [rbp - 0xc0], r10",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov ebx, eax",
            "mov r10, qword [rbp - 0xc0]",
            "je 0x8003460",
            "cmp dword [0x080035f1], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1ed",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "add r13, 0x88",
            "mov edx, r15d",
            "mov rsi, r10",
            "mov rdi, r13",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov ebx, eax",
            "je 0x800347f",
            "cmp dword [0x08003656], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1f7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x0800369f], 1",
            "jg current_task",
            "mov ebx, 0xffffffb6",
            "jmp 0x80035a3",
            "lea rdi, [r13 + 0x38]",
            "mov ecx, r14d",
            "mov rdx, r8",
            "mov rsi, r8",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov ebx, eax",
            "je 0x800359c",
            "cmp dword [0x080036d3], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x228",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x08003719], 0",
            "mov ebx, 0xffffffea",
            "jle 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x209",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x08003761], 0",
            "js 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, ebx",
            "mov r8d, 0x1fe",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x080037a7], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x213",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x080037ed], 0",
            "js 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, ebx",
            "mov r8d, 0x219",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x21e",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov ebx, 0xffffffb6",
            "call printk",
            "jmp 0x80035a3"
        ]
    },
    "unk.0x8003755": {
        "function_address": "0x08003755",
        "instructions": [
            "push rbp",
            "mov r10, rdx",
            "mov rbp, rsp",
            "sub rsp, 0xc0",
            "mov qword [rbp - 0x20], r12",
            "mov qword [rbp - 0x18], r13",
            "mov r12, rsi",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r13, rdi",
            "mov qword [rbp - 0x28], rbx",
            "cmp word [rsi + 4], 0",
            "mov r15d, ecx",
            "mov r14d, r9d",
            "jne 0x80034c0",
            "mov esi, dword [rdi + 0x38]",
            "test esi, esi",
            "jne 0x80035c0",
            "mov ecx, dword [r13 + 0x88]",
            "test ecx, ecx",
            "je 0x800359c",
            "test r15d, r15d",
            "jne 0x8003630",
            "add r13, 0x88",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, r13",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov ebx, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r12 + 0x30]",
            "mov rdi, qword [r12 + 0x28]",
            "lea rsi, [rbp - 0x70]",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x800359c",
            "mov ebx, 0xfffffff2",
            "jmp 0x80035a3",
            "mov edx, dword [rdi + 0x88]",
            "test edx, edx",
            "je 0x8003590",
            "mov edx, dword [rsi + 0x30]",
            "cmp edx, 0x40",
            "ja cryptodev_verbosity",
            "cmp r9d, edx",
            "jb cryptodev_verbosity",
            "mov rsi, qword [rsi + 0x28]",
            "lea rdi, [rbp - 0xb0]",
            "mov qword [rbp - 0xc0], r10",
            "mov qword [rbp - 0xb8], r8",
            "call _copy_from_user",
            "test rax, rax",
            "mov r10, qword [rbp - 0xc0]",
            "jne 0x80034b1",
            "lea rcx, [r13 + 0x88]",
            "mov edx, r15d",
            "mov rsi, r10",
            "mov rdi, rcx",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov ebx, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "mov r8, qword [rbp - 0xb8]",
            "jne cryptodev_verbosity",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "mov qword [rbp - 0xb8], r8",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov ebx, eax",
            "mov r8, qword [rbp - 0xb8]",
            "jne cryptodev_verbosity",
            "mov edx, dword [r12 + 0x30]",
            "lea rsi, [rbp - 0x70]",
            "lea rdi, [rbp - 0xb0]",
            "mov qword [rbp - 0xb8], r8",
            "call memcmp",
            "test eax, eax",
            "mov r8, qword [rbp - 0xb8]",
            "jne cryptodev_verbosity",
            "mov eax, dword [r13 + 0x38]",
            "test eax, eax",
            "jne 0x80036b0",
            "mov dword [r12 + 0x48], r14d",
            "xor ebx, ebx",
            "mov eax, ebx",
            "mov r12, qword [rbp - 0x20]",
            "mov rbx, qword [rbp - 0x28]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "lea rdi, [rdi + 0x38]",
            "mov ecx, r9d",
            "mov rdx, r8",
            "mov rsi, r8",
            "mov qword [rbp - 0xc0], r10",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov ebx, eax",
            "mov r10, qword [rbp - 0xc0]",
            "je 0x8003460",
            "cmp dword [0x080035f1], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1ed",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "add r13, 0x88",
            "mov edx, r15d",
            "mov rsi, r10",
            "mov rdi, r13",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov ebx, eax",
            "je 0x800347f",
            "cmp dword [0x08003656], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1f7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x0800369f], 1",
            "jg current_task",
            "mov ebx, 0xffffffb6",
            "jmp 0x80035a3",
            "lea rdi, [r13 + 0x38]",
            "mov ecx, r14d",
            "mov rdx, r8",
            "mov rsi, r8",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov ebx, eax",
            "je 0x800359c",
            "cmp dword [0x080036d3], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x228",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x08003719], 0",
            "mov ebx, 0xffffffea",
            "jle 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x209",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x08003761], 0",
            "js 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, ebx",
            "mov r8d, 0x1fe",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x080037a7], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x213",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x080037ed], 0",
            "js 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, ebx",
            "mov r8d, 0x219",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x21e",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov ebx, 0xffffffb6",
            "call printk",
            "jmp 0x80035a3"
        ]
    },
    "unk.0x800379b": {
        "function_address": "0x0800379b",
        "instructions": [
            "push rbp",
            "mov r10, rdx",
            "mov rbp, rsp",
            "sub rsp, 0xc0",
            "mov qword [rbp - 0x20], r12",
            "mov qword [rbp - 0x18], r13",
            "mov r12, rsi",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r13, rdi",
            "mov qword [rbp - 0x28], rbx",
            "cmp word [rsi + 4], 0",
            "mov r15d, ecx",
            "mov r14d, r9d",
            "jne 0x80034c0",
            "mov esi, dword [rdi + 0x38]",
            "test esi, esi",
            "jne 0x80035c0",
            "mov ecx, dword [r13 + 0x88]",
            "test ecx, ecx",
            "je 0x800359c",
            "test r15d, r15d",
            "jne 0x8003630",
            "add r13, 0x88",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, r13",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov ebx, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r12 + 0x30]",
            "mov rdi, qword [r12 + 0x28]",
            "lea rsi, [rbp - 0x70]",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x800359c",
            "mov ebx, 0xfffffff2",
            "jmp 0x80035a3",
            "mov edx, dword [rdi + 0x88]",
            "test edx, edx",
            "je 0x8003590",
            "mov edx, dword [rsi + 0x30]",
            "cmp edx, 0x40",
            "ja cryptodev_verbosity",
            "cmp r9d, edx",
            "jb cryptodev_verbosity",
            "mov rsi, qword [rsi + 0x28]",
            "lea rdi, [rbp - 0xb0]",
            "mov qword [rbp - 0xc0], r10",
            "mov qword [rbp - 0xb8], r8",
            "call _copy_from_user",
            "test rax, rax",
            "mov r10, qword [rbp - 0xc0]",
            "jne 0x80034b1",
            "lea rcx, [r13 + 0x88]",
            "mov edx, r15d",
            "mov rsi, r10",
            "mov rdi, rcx",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov ebx, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "mov r8, qword [rbp - 0xb8]",
            "jne cryptodev_verbosity",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "mov qword [rbp - 0xb8], r8",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov ebx, eax",
            "mov r8, qword [rbp - 0xb8]",
            "jne cryptodev_verbosity",
            "mov edx, dword [r12 + 0x30]",
            "lea rsi, [rbp - 0x70]",
            "lea rdi, [rbp - 0xb0]",
            "mov qword [rbp - 0xb8], r8",
            "call memcmp",
            "test eax, eax",
            "mov r8, qword [rbp - 0xb8]",
            "jne cryptodev_verbosity",
            "mov eax, dword [r13 + 0x38]",
            "test eax, eax",
            "jne 0x80036b0",
            "mov dword [r12 + 0x48], r14d",
            "xor ebx, ebx",
            "mov eax, ebx",
            "mov r12, qword [rbp - 0x20]",
            "mov rbx, qword [rbp - 0x28]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "lea rdi, [rdi + 0x38]",
            "mov ecx, r9d",
            "mov rdx, r8",
            "mov rsi, r8",
            "mov qword [rbp - 0xc0], r10",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov ebx, eax",
            "mov r10, qword [rbp - 0xc0]",
            "je 0x8003460",
            "cmp dword [0x080035f1], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1ed",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "add r13, 0x88",
            "mov edx, r15d",
            "mov rsi, r10",
            "mov rdi, r13",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov ebx, eax",
            "je 0x800347f",
            "cmp dword [0x08003656], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1f7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x0800369f], 1",
            "jg current_task",
            "mov ebx, 0xffffffb6",
            "jmp 0x80035a3",
            "lea rdi, [r13 + 0x38]",
            "mov ecx, r14d",
            "mov rdx, r8",
            "mov rsi, r8",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov ebx, eax",
            "je 0x800359c",
            "cmp dword [0x080036d3], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x228",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x08003719], 0",
            "mov ebx, 0xffffffea",
            "jle 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x209",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x08003761], 0",
            "js 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, ebx",
            "mov r8d, 0x1fe",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x080037a7], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x213",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x080037ed], 0",
            "js 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, ebx",
            "mov r8d, 0x219",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x21e",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov ebx, 0xffffffb6",
            "call printk",
            "jmp 0x80035a3"
        ]
    },
    "unk.0x80037e1": {
        "function_address": "0x080037e1",
        "instructions": [
            "push rbp",
            "mov r10, rdx",
            "mov rbp, rsp",
            "sub rsp, 0xc0",
            "mov qword [rbp - 0x20], r12",
            "mov qword [rbp - 0x18], r13",
            "mov r12, rsi",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r13, rdi",
            "mov qword [rbp - 0x28], rbx",
            "cmp word [rsi + 4], 0",
            "mov r15d, ecx",
            "mov r14d, r9d",
            "jne 0x80034c0",
            "mov esi, dword [rdi + 0x38]",
            "test esi, esi",
            "jne 0x80035c0",
            "mov ecx, dword [r13 + 0x88]",
            "test ecx, ecx",
            "je 0x800359c",
            "test r15d, r15d",
            "jne 0x8003630",
            "add r13, 0x88",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, r13",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov ebx, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r12 + 0x30]",
            "mov rdi, qword [r12 + 0x28]",
            "lea rsi, [rbp - 0x70]",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x800359c",
            "mov ebx, 0xfffffff2",
            "jmp 0x80035a3",
            "mov edx, dword [rdi + 0x88]",
            "test edx, edx",
            "je 0x8003590",
            "mov edx, dword [rsi + 0x30]",
            "cmp edx, 0x40",
            "ja cryptodev_verbosity",
            "cmp r9d, edx",
            "jb cryptodev_verbosity",
            "mov rsi, qword [rsi + 0x28]",
            "lea rdi, [rbp - 0xb0]",
            "mov qword [rbp - 0xc0], r10",
            "mov qword [rbp - 0xb8], r8",
            "call _copy_from_user",
            "test rax, rax",
            "mov r10, qword [rbp - 0xc0]",
            "jne 0x80034b1",
            "lea rcx, [r13 + 0x88]",
            "mov edx, r15d",
            "mov rsi, r10",
            "mov rdi, rcx",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov ebx, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "mov r8, qword [rbp - 0xb8]",
            "jne cryptodev_verbosity",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "mov qword [rbp - 0xb8], r8",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov ebx, eax",
            "mov r8, qword [rbp - 0xb8]",
            "jne cryptodev_verbosity",
            "mov edx, dword [r12 + 0x30]",
            "lea rsi, [rbp - 0x70]",
            "lea rdi, [rbp - 0xb0]",
            "mov qword [rbp - 0xb8], r8",
            "call memcmp",
            "test eax, eax",
            "mov r8, qword [rbp - 0xb8]",
            "jne cryptodev_verbosity",
            "mov eax, dword [r13 + 0x38]",
            "test eax, eax",
            "jne 0x80036b0",
            "mov dword [r12 + 0x48], r14d",
            "xor ebx, ebx",
            "mov eax, ebx",
            "mov r12, qword [rbp - 0x20]",
            "mov rbx, qword [rbp - 0x28]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "lea rdi, [rdi + 0x38]",
            "mov ecx, r9d",
            "mov rdx, r8",
            "mov rsi, r8",
            "mov qword [rbp - 0xc0], r10",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov ebx, eax",
            "mov r10, qword [rbp - 0xc0]",
            "je 0x8003460",
            "cmp dword [0x080035f1], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1ed",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "add r13, 0x88",
            "mov edx, r15d",
            "mov rsi, r10",
            "mov rdi, r13",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov ebx, eax",
            "je 0x800347f",
            "cmp dword [0x08003656], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1f7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x0800369f], 1",
            "jg current_task",
            "mov ebx, 0xffffffb6",
            "jmp 0x80035a3",
            "lea rdi, [r13 + 0x38]",
            "mov ecx, r14d",
            "mov rdx, r8",
            "mov rsi, r8",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov ebx, eax",
            "je 0x800359c",
            "cmp dword [0x080036d3], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x228",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x08003719], 0",
            "mov ebx, 0xffffffea",
            "jle 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x209",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x08003761], 0",
            "js 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, ebx",
            "mov r8d, 0x1fe",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x080037a7], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x213",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x080037ed], 0",
            "js 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, ebx",
            "mov r8d, 0x219",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x21e",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov ebx, 0xffffffb6",
            "call printk",
            "jmp 0x80035a3"
        ]
    },
    "unk.0x8003827": {
        "function_address": "0x08003827",
        "instructions": [
            "push rbp",
            "mov r10, rdx",
            "mov rbp, rsp",
            "sub rsp, 0xc0",
            "mov qword [rbp - 0x20], r12",
            "mov qword [rbp - 0x18], r13",
            "mov r12, rsi",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r13, rdi",
            "mov qword [rbp - 0x28], rbx",
            "cmp word [rsi + 4], 0",
            "mov r15d, ecx",
            "mov r14d, r9d",
            "jne 0x80034c0",
            "mov esi, dword [rdi + 0x38]",
            "test esi, esi",
            "jne 0x80035c0",
            "mov ecx, dword [r13 + 0x88]",
            "test ecx, ecx",
            "je 0x800359c",
            "test r15d, r15d",
            "jne 0x8003630",
            "add r13, 0x88",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, r13",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov ebx, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r12 + 0x30]",
            "mov rdi, qword [r12 + 0x28]",
            "lea rsi, [rbp - 0x70]",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x800359c",
            "mov ebx, 0xfffffff2",
            "jmp 0x80035a3",
            "mov edx, dword [rdi + 0x88]",
            "test edx, edx",
            "je 0x8003590",
            "mov edx, dword [rsi + 0x30]",
            "cmp edx, 0x40",
            "ja cryptodev_verbosity",
            "cmp r9d, edx",
            "jb cryptodev_verbosity",
            "mov rsi, qword [rsi + 0x28]",
            "lea rdi, [rbp - 0xb0]",
            "mov qword [rbp - 0xc0], r10",
            "mov qword [rbp - 0xb8], r8",
            "call _copy_from_user",
            "test rax, rax",
            "mov r10, qword [rbp - 0xc0]",
            "jne 0x80034b1",
            "lea rcx, [r13 + 0x88]",
            "mov edx, r15d",
            "mov rsi, r10",
            "mov rdi, rcx",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov ebx, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "mov r8, qword [rbp - 0xb8]",
            "jne cryptodev_verbosity",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "mov qword [rbp - 0xb8], r8",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov ebx, eax",
            "mov r8, qword [rbp - 0xb8]",
            "jne cryptodev_verbosity",
            "mov edx, dword [r12 + 0x30]",
            "lea rsi, [rbp - 0x70]",
            "lea rdi, [rbp - 0xb0]",
            "mov qword [rbp - 0xb8], r8",
            "call memcmp",
            "test eax, eax",
            "mov r8, qword [rbp - 0xb8]",
            "jne cryptodev_verbosity",
            "mov eax, dword [r13 + 0x38]",
            "test eax, eax",
            "jne 0x80036b0",
            "mov dword [r12 + 0x48], r14d",
            "xor ebx, ebx",
            "mov eax, ebx",
            "mov r12, qword [rbp - 0x20]",
            "mov rbx, qword [rbp - 0x28]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "lea rdi, [rdi + 0x38]",
            "mov ecx, r9d",
            "mov rdx, r8",
            "mov rsi, r8",
            "mov qword [rbp - 0xc0], r10",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov ebx, eax",
            "mov r10, qword [rbp - 0xc0]",
            "je 0x8003460",
            "cmp dword [0x080035f1], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1ed",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "add r13, 0x88",
            "mov edx, r15d",
            "mov rsi, r10",
            "mov rdi, r13",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov ebx, eax",
            "je 0x800347f",
            "cmp dword [0x08003656], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1f7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x0800369f], 1",
            "jg current_task",
            "mov ebx, 0xffffffb6",
            "jmp 0x80035a3",
            "lea rdi, [r13 + 0x38]",
            "mov ecx, r14d",
            "mov rdx, r8",
            "mov rsi, r8",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov ebx, eax",
            "je 0x800359c",
            "cmp dword [0x080036d3], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x228",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x08003719], 0",
            "mov ebx, 0xffffffea",
            "jle 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x209",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x08003761], 0",
            "js 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, ebx",
            "mov r8d, 0x1fe",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x080037a7], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x213",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x080037ed], 0",
            "js 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, ebx",
            "mov r8d, 0x219",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x21e",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov ebx, 0xffffffb6",
            "call printk",
            "jmp 0x80035a3"
        ]
    },
    "unk.0x8003862": {
        "function_address": "0x08003862",
        "instructions": [
            "push rbp",
            "mov r10, rdx",
            "mov rbp, rsp",
            "sub rsp, 0xc0",
            "mov qword [rbp - 0x20], r12",
            "mov qword [rbp - 0x18], r13",
            "mov r12, rsi",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r13, rdi",
            "mov qword [rbp - 0x28], rbx",
            "cmp word [rsi + 4], 0",
            "mov r15d, ecx",
            "mov r14d, r9d",
            "jne 0x80034c0",
            "mov esi, dword [rdi + 0x38]",
            "test esi, esi",
            "jne 0x80035c0",
            "mov ecx, dword [r13 + 0x88]",
            "test ecx, ecx",
            "je 0x800359c",
            "test r15d, r15d",
            "jne 0x8003630",
            "add r13, 0x88",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, r13",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov ebx, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r12 + 0x30]",
            "mov rdi, qword [r12 + 0x28]",
            "lea rsi, [rbp - 0x70]",
            "call _copy_to_user",
            "test rax, rax",
            "je 0x800359c",
            "mov ebx, 0xfffffff2",
            "jmp 0x80035a3",
            "mov edx, dword [rdi + 0x88]",
            "test edx, edx",
            "je 0x8003590",
            "mov edx, dword [rsi + 0x30]",
            "cmp edx, 0x40",
            "ja cryptodev_verbosity",
            "cmp r9d, edx",
            "jb cryptodev_verbosity",
            "mov rsi, qword [rsi + 0x28]",
            "lea rdi, [rbp - 0xb0]",
            "mov qword [rbp - 0xc0], r10",
            "mov qword [rbp - 0xb8], r8",
            "call _copy_from_user",
            "test rax, rax",
            "mov r10, qword [rbp - 0xc0]",
            "jne 0x80034b1",
            "lea rcx, [r13 + 0x88]",
            "mov edx, r15d",
            "mov rsi, r10",
            "mov rdi, rcx",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov ebx, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "mov r8, qword [rbp - 0xb8]",
            "jne cryptodev_verbosity",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "mov qword [rbp - 0xb8], r8",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov ebx, eax",
            "mov r8, qword [rbp - 0xb8]",
            "jne cryptodev_verbosity",
            "mov edx, dword [r12 + 0x30]",
            "lea rsi, [rbp - 0x70]",
            "lea rdi, [rbp - 0xb0]",
            "mov qword [rbp - 0xb8], r8",
            "call memcmp",
            "test eax, eax",
            "mov r8, qword [rbp - 0xb8]",
            "jne cryptodev_verbosity",
            "mov eax, dword [r13 + 0x38]",
            "test eax, eax",
            "jne 0x80036b0",
            "mov dword [r12 + 0x48], r14d",
            "xor ebx, ebx",
            "mov eax, ebx",
            "mov r12, qword [rbp - 0x20]",
            "mov rbx, qword [rbp - 0x28]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "lea rdi, [rdi + 0x38]",
            "mov ecx, r9d",
            "mov rdx, r8",
            "mov rsi, r8",
            "mov qword [rbp - 0xc0], r10",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov ebx, eax",
            "mov r10, qword [rbp - 0xc0]",
            "je 0x8003460",
            "cmp dword [0x080035f1], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1ed",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "add r13, 0x88",
            "mov edx, r15d",
            "mov rsi, r10",
            "mov rdi, r13",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov ebx, eax",
            "je 0x800347f",
            "cmp dword [0x08003656], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1f7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x0800369f], 1",
            "jg current_task",
            "mov ebx, 0xffffffb6",
            "jmp 0x80035a3",
            "lea rdi, [r13 + 0x38]",
            "mov ecx, r14d",
            "mov rdx, r8",
            "mov rsi, r8",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov ebx, eax",
            "je 0x800359c",
            "cmp dword [0x080036d3], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x228",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x08003719], 0",
            "mov ebx, 0xffffffea",
            "jle 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x209",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x08003761], 0",
            "js 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, ebx",
            "mov r8d, 0x1fe",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x080037a7], 0",
            "js 0x80035a3",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x213",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "cmp dword [0x080037ed], 0",
            "js 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, ebx",
            "mov r8d, 0x219",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80035a3",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x21e",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov ebx, 0xffffffb6",
            "call printk",
            "jmp 0x80035a3"
        ]
    },
    "sym.verify_tls_record_pad.isra.4": {
        "function_address": "0x08003870",
        "instructions": [
            "push rbp",
            "lea edx, [rsi - 1]",
            "xor r8d, r8d",
            "mov ecx, 1",
            "mov rbp, rsp",
            "push r12",
            "mov r12, rdi",
            "push rbx",
            "mov ebx, esi",
            "mov rsi, rdi",
            "lea rdi, [rbp - 0x111]",
            "sub rsp, 0x120",
            "call scatterwalk_map_and_copy",
            "movzx r9d, byte [rbp - 0x111]",
            "lea ecx, [r9 + 1]",
            "cmp ebx, ecx",
            "jge 0x80038d0",
            "mov r10d, dword [0x080038b4]",
            "test r10d, r10d",
            "jg current_task",
            "mov eax, 0xffffffb6",
            "add rsp, 0x120",
            "pop rbx",
            "pop r12",
            "pop rbp",
            "ret",
            "sub ebx, r9d",
            "lea rdi, [rbp - 0x110]",
            "xor r8d, r8d",
            "lea edx, [rbx - 1]",
            "mov rsi, r12",
            "call scatterwalk_map_and_copy",
            "movzx edx, byte [rbp - 0x111]",
            "movzx r9d, dl",
            "test r9d, r9d",
            "je 0x800392d",
            "movzx eax, byte [rbp - 0x110]",
            "cmp al, dl",
            "jne 0x800393d",
            "lea rcx, [rbp - 0x110]",
            "xor edx, edx",
            "add rcx, 1",
            "jmp 0x8003925",
            "add rcx, 1",
            "movzx edi, byte [rcx - 1]",
            "cmp dil, al",
            "jne 0x8003940",
            "add edx, 1",
            "cmp r9d, edx",
            "jg 0x8003918",
            "add rsp, 0x120",
            "lea eax, [r9 + 1]",
            "pop rbx",
            "pop r12",
            "pop rbp",
            "ret",
            "movzx edi, al",
            "mov r8d, dword [0x08003947]",
            "test r8d, r8d",
            "jle 0x80038bd",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov dword [rsp], edi",
            "mov r8d, 0x158",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov eax, 0xffffffb6",
            "jmp 0x80038c2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x150",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80038bd"
        ]
    },
    "unk.0x800389d": {
        "function_address": "0x0800389d",
        "instructions": [
            "push rbp",
            "lea edx, [rsi - 1]",
            "xor r8d, r8d",
            "mov ecx, 1",
            "mov rbp, rsp",
            "push r12",
            "mov r12, rdi",
            "push rbx",
            "mov ebx, esi",
            "mov rsi, rdi",
            "lea rdi, [rbp - 0x111]",
            "sub rsp, 0x120",
            "call scatterwalk_map_and_copy",
            "movzx r9d, byte [rbp - 0x111]",
            "lea ecx, [r9 + 1]",
            "cmp ebx, ecx",
            "jge 0x80038d0",
            "mov r10d, dword [0x080038b4]",
            "test r10d, r10d",
            "jg current_task",
            "mov eax, 0xffffffb6",
            "add rsp, 0x120",
            "pop rbx",
            "pop r12",
            "pop rbp",
            "ret",
            "sub ebx, r9d",
            "lea rdi, [rbp - 0x110]",
            "xor r8d, r8d",
            "lea edx, [rbx - 1]",
            "mov rsi, r12",
            "call scatterwalk_map_and_copy",
            "movzx edx, byte [rbp - 0x111]",
            "movzx r9d, dl",
            "test r9d, r9d",
            "je 0x800392d",
            "movzx eax, byte [rbp - 0x110]",
            "cmp al, dl",
            "jne 0x800393d",
            "lea rcx, [rbp - 0x110]",
            "xor edx, edx",
            "add rcx, 1",
            "jmp 0x8003925",
            "add rcx, 1",
            "movzx edi, byte [rcx - 1]",
            "cmp dil, al",
            "jne 0x8003940",
            "add edx, 1",
            "cmp r9d, edx",
            "jg 0x8003918",
            "add rsp, 0x120",
            "lea eax, [r9 + 1]",
            "pop rbx",
            "pop r12",
            "pop rbp",
            "ret",
            "movzx edi, al",
            "mov r8d, dword [0x08003947]",
            "test r8d, r8d",
            "jle 0x80038bd",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov dword [rsp], edi",
            "mov r8d, 0x158",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov eax, 0xffffffb6",
            "jmp 0x80038c2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x150",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80038bd"
        ]
    },
    "unk.0x80038e8": {
        "function_address": "0x080038e8",
        "instructions": [
            "push rbp",
            "lea edx, [rsi - 1]",
            "xor r8d, r8d",
            "mov ecx, 1",
            "mov rbp, rsp",
            "push r12",
            "mov r12, rdi",
            "push rbx",
            "mov ebx, esi",
            "mov rsi, rdi",
            "lea rdi, [rbp - 0x111]",
            "sub rsp, 0x120",
            "call scatterwalk_map_and_copy",
            "movzx r9d, byte [rbp - 0x111]",
            "lea ecx, [r9 + 1]",
            "cmp ebx, ecx",
            "jge 0x80038d0",
            "mov r10d, dword [0x080038b4]",
            "test r10d, r10d",
            "jg current_task",
            "mov eax, 0xffffffb6",
            "add rsp, 0x120",
            "pop rbx",
            "pop r12",
            "pop rbp",
            "ret",
            "sub ebx, r9d",
            "lea rdi, [rbp - 0x110]",
            "xor r8d, r8d",
            "lea edx, [rbx - 1]",
            "mov rsi, r12",
            "call scatterwalk_map_and_copy",
            "movzx edx, byte [rbp - 0x111]",
            "movzx r9d, dl",
            "test r9d, r9d",
            "je 0x800392d",
            "movzx eax, byte [rbp - 0x110]",
            "cmp al, dl",
            "jne 0x800393d",
            "lea rcx, [rbp - 0x110]",
            "xor edx, edx",
            "add rcx, 1",
            "jmp 0x8003925",
            "add rcx, 1",
            "movzx edi, byte [rcx - 1]",
            "cmp dil, al",
            "jne 0x8003940",
            "add edx, 1",
            "cmp r9d, edx",
            "jg 0x8003918",
            "add rsp, 0x120",
            "lea eax, [r9 + 1]",
            "pop rbx",
            "pop r12",
            "pop rbp",
            "ret",
            "movzx edi, al",
            "mov r8d, dword [0x08003947]",
            "test r8d, r8d",
            "jle 0x80038bd",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov dword [rsp], edi",
            "mov r8d, 0x158",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov eax, 0xffffffb6",
            "jmp 0x80038c2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x150",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80038bd"
        ]
    },
    "unk.0x8003984": {
        "function_address": "0x08003984",
        "instructions": [
            "push rbp",
            "lea edx, [rsi - 1]",
            "xor r8d, r8d",
            "mov ecx, 1",
            "mov rbp, rsp",
            "push r12",
            "mov r12, rdi",
            "push rbx",
            "mov ebx, esi",
            "mov rsi, rdi",
            "lea rdi, [rbp - 0x111]",
            "sub rsp, 0x120",
            "call scatterwalk_map_and_copy",
            "movzx r9d, byte [rbp - 0x111]",
            "lea ecx, [r9 + 1]",
            "cmp ebx, ecx",
            "jge 0x80038d0",
            "mov r10d, dword [0x080038b4]",
            "test r10d, r10d",
            "jg current_task",
            "mov eax, 0xffffffb6",
            "add rsp, 0x120",
            "pop rbx",
            "pop r12",
            "pop rbp",
            "ret",
            "sub ebx, r9d",
            "lea rdi, [rbp - 0x110]",
            "xor r8d, r8d",
            "lea edx, [rbx - 1]",
            "mov rsi, r12",
            "call scatterwalk_map_and_copy",
            "movzx edx, byte [rbp - 0x111]",
            "movzx r9d, dl",
            "test r9d, r9d",
            "je 0x800392d",
            "movzx eax, byte [rbp - 0x110]",
            "cmp al, dl",
            "jne 0x800393d",
            "lea rcx, [rbp - 0x110]",
            "xor edx, edx",
            "add rcx, 1",
            "jmp 0x8003925",
            "add rcx, 1",
            "movzx edi, byte [rcx - 1]",
            "cmp dil, al",
            "jne 0x8003940",
            "add edx, 1",
            "cmp r9d, edx",
            "jg 0x8003918",
            "add rsp, 0x120",
            "lea eax, [r9 + 1]",
            "pop rbx",
            "pop r12",
            "pop rbp",
            "ret",
            "movzx edi, al",
            "mov r8d, dword [0x08003947]",
            "test r8d, r8d",
            "jle 0x80038bd",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov dword [rsp], edi",
            "mov r8d, 0x158",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov eax, 0xffffffb6",
            "jmp 0x80038c2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x150",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80038bd"
        ]
    },
    "unk.0x80039bf": {
        "function_address": "0x080039bf",
        "instructions": [
            "push rbp",
            "lea edx, [rsi - 1]",
            "xor r8d, r8d",
            "mov ecx, 1",
            "mov rbp, rsp",
            "push r12",
            "mov r12, rdi",
            "push rbx",
            "mov ebx, esi",
            "mov rsi, rdi",
            "lea rdi, [rbp - 0x111]",
            "sub rsp, 0x120",
            "call scatterwalk_map_and_copy",
            "movzx r9d, byte [rbp - 0x111]",
            "lea ecx, [r9 + 1]",
            "cmp ebx, ecx",
            "jge 0x80038d0",
            "mov r10d, dword [0x080038b4]",
            "test r10d, r10d",
            "jg current_task",
            "mov eax, 0xffffffb6",
            "add rsp, 0x120",
            "pop rbx",
            "pop r12",
            "pop rbp",
            "ret",
            "sub ebx, r9d",
            "lea rdi, [rbp - 0x110]",
            "xor r8d, r8d",
            "lea edx, [rbx - 1]",
            "mov rsi, r12",
            "call scatterwalk_map_and_copy",
            "movzx edx, byte [rbp - 0x111]",
            "movzx r9d, dl",
            "test r9d, r9d",
            "je 0x800392d",
            "movzx eax, byte [rbp - 0x110]",
            "cmp al, dl",
            "jne 0x800393d",
            "lea rcx, [rbp - 0x110]",
            "xor edx, edx",
            "add rcx, 1",
            "jmp 0x8003925",
            "add rcx, 1",
            "movzx edi, byte [rcx - 1]",
            "cmp dil, al",
            "jne 0x8003940",
            "add edx, 1",
            "cmp r9d, edx",
            "jg 0x8003918",
            "add rsp, 0x120",
            "lea eax, [r9 + 1]",
            "pop rbx",
            "pop r12",
            "pop rbp",
            "ret",
            "movzx edi, al",
            "mov r8d, dword [0x08003947]",
            "test r8d, r8d",
            "jle 0x80038bd",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov dword [rsp], edi",
            "mov r8d, 0x158",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov eax, 0xffffffb6",
            "jmp 0x80038c2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x150",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80038bd"
        ]
    },
    "sym.tls_auth_n_crypt": {
        "function_address": "0x080039d0",
        "instructions": [
            "push rbp",
            "mov r11, rdx",
            "mov r10d, ecx",
            "mov rbp, rsp",
            "sub rsp, 0xd0",
            "mov qword [rbp - 0x28], rbx",
            "mov qword [rbp - 0x18], r13",
            "mov ebx, r9d",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r13, rdi",
            "mov qword [rbp - 0x20], r12",
            "cmp word [rsi + 4], 0",
            "mov r14, rsi",
            "mov r15, r8",
            "jne 0x8003ac0",
            "mov eax, dword [rdi + 0x88]",
            "test eax, eax",
            "jne 0x8003ba0",
            "mov eax, dword [r13 + 0x38]",
            "test eax, eax",
            "je 0x8003a9b",
            "mov ecx, dword [r13 + 0x3c]",
            "cmp ecx, 1",
            "jle 0x8003a7f",
            "movsxd rax, ecx",
            "mov edx, ebx",
            "mov qword [rbp - 0xb8], rsp",
            "add rax, 0xf",
            "sar edx, 0x1f",
            "mov r12d, ecx",
            "and rax, 0xfffffffffffffff0",
            "sub rsp, rax",
            "mov eax, ebx",
            "idiv ecx",
            "mov rdi, rsp",
            "sub r12d, edx",
            "lea esi, [r12 - 1]",
            "movsxd rdx, r12d",
            "call memset",
            "mov edx, ebx",
            "mov rdi, rsp",
            "mov r8d, 1",
            "mov ecx, r12d",
            "mov rsi, r15",
            "add ebx, r12d",
            "call scatterwalk_map_and_copy",
            "mov rsp, qword [rbp - 0xb8]",
            "lea rdi, [r13 + 0x38]",
            "mov ecx, ebx",
            "mov rdx, r15",
            "mov rsi, r15",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov dword [r14 + 0x48], ebx",
            "xor r12d, r12d",
            "mov eax, r12d",
            "mov rbx, qword [rbp - 0x28]",
            "mov r12, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov eax, dword [rdi + 0x38]",
            "test eax, eax",
            "jne 0x8003bf0",
            "mov dword [rbp - 0xb8], 0",
            "mov r12d, dword [r13 + 0x88]",
            "test r12d, r12d",
            "je 0x8003a9b",
            "mov ecx, dword [r14 + 0x30]",
            "cmp ecx, 0x40",
            "ja cryptodev_verbosity",
            "cmp ebx, ecx",
            "jb cryptodev_verbosity",
            "mov edx, ebx",
            "lea rdi, [rbp - 0xb0]",
            "xor r8d, r8d",
            "sub edx, ecx",
            "mov rsi, r15",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call scatterwalk_map_and_copy",
            "mov r10d, dword [rbp - 0xc8]",
            "sub ebx, dword [r14 + 0x30]",
            "lea rcx, [r13 + 0x88]",
            "mov r11, qword [rbp - 0xc0]",
            "test r10d, r10d",
            "jne 0x8003dc0",
            "test ebx, ebx",
            "jne 0x8003ce0",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov r12d, dword [r14 + 0x30]",
            "lea rsi, [rbp - 0x70]",
            "lea rdi, [rbp - 0xb0]",
            "mov edx, r12d",
            "call memcmp",
            "or eax, dword [rbp - 0xb8]",
            "je 0x8003a9b",
            "cmp dword [0x08003b85], 1",
            "jg current_task",
            "mov r12d, 0xffffffb6",
            "jmp 0x8003aa2",
            "test r10d, r10d",
            "lea rcx, [rdi + 0x88]",
            "jne 0x8003d50",
            "test ebx, ebx",
            "jne 0x8003c70",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov ecx, dword [r14 + 0x30]",
            "lea rdi, [rbp - 0x70]",
            "mov edx, ebx",
            "mov r8d, 1",
            "mov rsi, r15",
            "call scatterwalk_map_and_copy",
            "add ebx, dword [r14 + 0x30]",
            "jmp 0x8003a1a",
            "lea rdi, [rdi + 0x38]",
            "mov ecx, r9d",
            "mov rdx, r8",
            "mov rsi, r8",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "jne cryptodev_verbosity",
            "cmp dword [r13 + 0x3c], 1",
            "jle 0x8003acb",
            "mov esi, ebx",
            "mov rdi, r15",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call sym.verify_tls_record_pad.isra.4",
            "test eax, eax",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "js cryptodev_verbosity",
            "sub ebx, eax",
            "jmp 0x8003acb",
            "mov rdi, rcx",
            "mov edx, ebx",
            "mov rsi, r15",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003bb8",
            "cmp dword [0x08003c9d], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x17d",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, ebx",
            "mov rsi, r15",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003b44",
            "cmp dword [0x08003d0d], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1c4",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, r10d",
            "mov rsi, r11",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003bb0",
            "cmp dword [0x08003d7e], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x174",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, r10d",
            "mov rsi, r11",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003b3c",
            "cmp dword [0x08003dee], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1bb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003e34], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x195",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003e7a], 0",
            "mov r12d, 0xffffffea",
            "jle 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x1b0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003ec3], 0",
            "js 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x1cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f09], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x19f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f4f], 0",
            "js 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x184",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f95], 1",
            "mov dword [rbp - 0xb8], 1",
            "jle 0x8003ad5",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1a6",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "jmp 0x8003ad5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x1d0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffb6",
            "call printk",
            "jmp 0x8003aa2"
        ]
    },
    "unk.0x8003a5f": {
        "function_address": "0x08003a5f",
        "instructions": [
            "push rbp",
            "mov r11, rdx",
            "mov r10d, ecx",
            "mov rbp, rsp",
            "sub rsp, 0xd0",
            "mov qword [rbp - 0x28], rbx",
            "mov qword [rbp - 0x18], r13",
            "mov ebx, r9d",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r13, rdi",
            "mov qword [rbp - 0x20], r12",
            "cmp word [rsi + 4], 0",
            "mov r14, rsi",
            "mov r15, r8",
            "jne 0x8003ac0",
            "mov eax, dword [rdi + 0x88]",
            "test eax, eax",
            "jne 0x8003ba0",
            "mov eax, dword [r13 + 0x38]",
            "test eax, eax",
            "je 0x8003a9b",
            "mov ecx, dword [r13 + 0x3c]",
            "cmp ecx, 1",
            "jle 0x8003a7f",
            "movsxd rax, ecx",
            "mov edx, ebx",
            "mov qword [rbp - 0xb8], rsp",
            "add rax, 0xf",
            "sar edx, 0x1f",
            "mov r12d, ecx",
            "and rax, 0xfffffffffffffff0",
            "sub rsp, rax",
            "mov eax, ebx",
            "idiv ecx",
            "mov rdi, rsp",
            "sub r12d, edx",
            "lea esi, [r12 - 1]",
            "movsxd rdx, r12d",
            "call memset",
            "mov edx, ebx",
            "mov rdi, rsp",
            "mov r8d, 1",
            "mov ecx, r12d",
            "mov rsi, r15",
            "add ebx, r12d",
            "call scatterwalk_map_and_copy",
            "mov rsp, qword [rbp - 0xb8]",
            "lea rdi, [r13 + 0x38]",
            "mov ecx, ebx",
            "mov rdx, r15",
            "mov rsi, r15",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov dword [r14 + 0x48], ebx",
            "xor r12d, r12d",
            "mov eax, r12d",
            "mov rbx, qword [rbp - 0x28]",
            "mov r12, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov eax, dword [rdi + 0x38]",
            "test eax, eax",
            "jne 0x8003bf0",
            "mov dword [rbp - 0xb8], 0",
            "mov r12d, dword [r13 + 0x88]",
            "test r12d, r12d",
            "je 0x8003a9b",
            "mov ecx, dword [r14 + 0x30]",
            "cmp ecx, 0x40",
            "ja cryptodev_verbosity",
            "cmp ebx, ecx",
            "jb cryptodev_verbosity",
            "mov edx, ebx",
            "lea rdi, [rbp - 0xb0]",
            "xor r8d, r8d",
            "sub edx, ecx",
            "mov rsi, r15",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call scatterwalk_map_and_copy",
            "mov r10d, dword [rbp - 0xc8]",
            "sub ebx, dword [r14 + 0x30]",
            "lea rcx, [r13 + 0x88]",
            "mov r11, qword [rbp - 0xc0]",
            "test r10d, r10d",
            "jne 0x8003dc0",
            "test ebx, ebx",
            "jne 0x8003ce0",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov r12d, dword [r14 + 0x30]",
            "lea rsi, [rbp - 0x70]",
            "lea rdi, [rbp - 0xb0]",
            "mov edx, r12d",
            "call memcmp",
            "or eax, dword [rbp - 0xb8]",
            "je 0x8003a9b",
            "cmp dword [0x08003b85], 1",
            "jg current_task",
            "mov r12d, 0xffffffb6",
            "jmp 0x8003aa2",
            "test r10d, r10d",
            "lea rcx, [rdi + 0x88]",
            "jne 0x8003d50",
            "test ebx, ebx",
            "jne 0x8003c70",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov ecx, dword [r14 + 0x30]",
            "lea rdi, [rbp - 0x70]",
            "mov edx, ebx",
            "mov r8d, 1",
            "mov rsi, r15",
            "call scatterwalk_map_and_copy",
            "add ebx, dword [r14 + 0x30]",
            "jmp 0x8003a1a",
            "lea rdi, [rdi + 0x38]",
            "mov ecx, r9d",
            "mov rdx, r8",
            "mov rsi, r8",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "jne cryptodev_verbosity",
            "cmp dword [r13 + 0x3c], 1",
            "jle 0x8003acb",
            "mov esi, ebx",
            "mov rdi, r15",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call sym.verify_tls_record_pad.isra.4",
            "test eax, eax",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "js cryptodev_verbosity",
            "sub ebx, eax",
            "jmp 0x8003acb",
            "mov rdi, rcx",
            "mov edx, ebx",
            "mov rsi, r15",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003bb8",
            "cmp dword [0x08003c9d], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x17d",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, ebx",
            "mov rsi, r15",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003b44",
            "cmp dword [0x08003d0d], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1c4",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, r10d",
            "mov rsi, r11",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003bb0",
            "cmp dword [0x08003d7e], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x174",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, r10d",
            "mov rsi, r11",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003b3c",
            "cmp dword [0x08003dee], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1bb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003e34], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x195",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003e7a], 0",
            "mov r12d, 0xffffffea",
            "jle 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x1b0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003ec3], 0",
            "js 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x1cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f09], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x19f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f4f], 0",
            "js 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x184",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f95], 1",
            "mov dword [rbp - 0xb8], 1",
            "jle 0x8003ad5",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1a6",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "jmp 0x8003ad5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x1d0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffb6",
            "call printk",
            "jmp 0x8003aa2"
        ]
    },
    "unk.0x8003a78": {
        "function_address": "0x08003a78",
        "instructions": [
            "push rbp",
            "mov r11, rdx",
            "mov r10d, ecx",
            "mov rbp, rsp",
            "sub rsp, 0xd0",
            "mov qword [rbp - 0x28], rbx",
            "mov qword [rbp - 0x18], r13",
            "mov ebx, r9d",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r13, rdi",
            "mov qword [rbp - 0x20], r12",
            "cmp word [rsi + 4], 0",
            "mov r14, rsi",
            "mov r15, r8",
            "jne 0x8003ac0",
            "mov eax, dword [rdi + 0x88]",
            "test eax, eax",
            "jne 0x8003ba0",
            "mov eax, dword [r13 + 0x38]",
            "test eax, eax",
            "je 0x8003a9b",
            "mov ecx, dword [r13 + 0x3c]",
            "cmp ecx, 1",
            "jle 0x8003a7f",
            "movsxd rax, ecx",
            "mov edx, ebx",
            "mov qword [rbp - 0xb8], rsp",
            "add rax, 0xf",
            "sar edx, 0x1f",
            "mov r12d, ecx",
            "and rax, 0xfffffffffffffff0",
            "sub rsp, rax",
            "mov eax, ebx",
            "idiv ecx",
            "mov rdi, rsp",
            "sub r12d, edx",
            "lea esi, [r12 - 1]",
            "movsxd rdx, r12d",
            "call memset",
            "mov edx, ebx",
            "mov rdi, rsp",
            "mov r8d, 1",
            "mov ecx, r12d",
            "mov rsi, r15",
            "add ebx, r12d",
            "call scatterwalk_map_and_copy",
            "mov rsp, qword [rbp - 0xb8]",
            "lea rdi, [r13 + 0x38]",
            "mov ecx, ebx",
            "mov rdx, r15",
            "mov rsi, r15",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov dword [r14 + 0x48], ebx",
            "xor r12d, r12d",
            "mov eax, r12d",
            "mov rbx, qword [rbp - 0x28]",
            "mov r12, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov eax, dword [rdi + 0x38]",
            "test eax, eax",
            "jne 0x8003bf0",
            "mov dword [rbp - 0xb8], 0",
            "mov r12d, dword [r13 + 0x88]",
            "test r12d, r12d",
            "je 0x8003a9b",
            "mov ecx, dword [r14 + 0x30]",
            "cmp ecx, 0x40",
            "ja cryptodev_verbosity",
            "cmp ebx, ecx",
            "jb cryptodev_verbosity",
            "mov edx, ebx",
            "lea rdi, [rbp - 0xb0]",
            "xor r8d, r8d",
            "sub edx, ecx",
            "mov rsi, r15",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call scatterwalk_map_and_copy",
            "mov r10d, dword [rbp - 0xc8]",
            "sub ebx, dword [r14 + 0x30]",
            "lea rcx, [r13 + 0x88]",
            "mov r11, qword [rbp - 0xc0]",
            "test r10d, r10d",
            "jne 0x8003dc0",
            "test ebx, ebx",
            "jne 0x8003ce0",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov r12d, dword [r14 + 0x30]",
            "lea rsi, [rbp - 0x70]",
            "lea rdi, [rbp - 0xb0]",
            "mov edx, r12d",
            "call memcmp",
            "or eax, dword [rbp - 0xb8]",
            "je 0x8003a9b",
            "cmp dword [0x08003b85], 1",
            "jg current_task",
            "mov r12d, 0xffffffb6",
            "jmp 0x8003aa2",
            "test r10d, r10d",
            "lea rcx, [rdi + 0x88]",
            "jne 0x8003d50",
            "test ebx, ebx",
            "jne 0x8003c70",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov ecx, dword [r14 + 0x30]",
            "lea rdi, [rbp - 0x70]",
            "mov edx, ebx",
            "mov r8d, 1",
            "mov rsi, r15",
            "call scatterwalk_map_and_copy",
            "add ebx, dword [r14 + 0x30]",
            "jmp 0x8003a1a",
            "lea rdi, [rdi + 0x38]",
            "mov ecx, r9d",
            "mov rdx, r8",
            "mov rsi, r8",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "jne cryptodev_verbosity",
            "cmp dword [r13 + 0x3c], 1",
            "jle 0x8003acb",
            "mov esi, ebx",
            "mov rdi, r15",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call sym.verify_tls_record_pad.isra.4",
            "test eax, eax",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "js cryptodev_verbosity",
            "sub ebx, eax",
            "jmp 0x8003acb",
            "mov rdi, rcx",
            "mov edx, ebx",
            "mov rsi, r15",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003bb8",
            "cmp dword [0x08003c9d], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x17d",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, ebx",
            "mov rsi, r15",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003b44",
            "cmp dword [0x08003d0d], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1c4",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, r10d",
            "mov rsi, r11",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003bb0",
            "cmp dword [0x08003d7e], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x174",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, r10d",
            "mov rsi, r11",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003b3c",
            "cmp dword [0x08003dee], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1bb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003e34], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x195",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003e7a], 0",
            "mov r12d, 0xffffffea",
            "jle 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x1b0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003ec3], 0",
            "js 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x1cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f09], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x19f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f4f], 0",
            "js 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x184",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f95], 1",
            "mov dword [rbp - 0xb8], 1",
            "jle 0x8003ad5",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1a6",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "jmp 0x8003ad5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x1d0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffb6",
            "call printk",
            "jmp 0x8003aa2"
        ]
    },
    "unk.0x8003a90": {
        "function_address": "0x08003a90",
        "instructions": [
            "push rbp",
            "mov r11, rdx",
            "mov r10d, ecx",
            "mov rbp, rsp",
            "sub rsp, 0xd0",
            "mov qword [rbp - 0x28], rbx",
            "mov qword [rbp - 0x18], r13",
            "mov ebx, r9d",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r13, rdi",
            "mov qword [rbp - 0x20], r12",
            "cmp word [rsi + 4], 0",
            "mov r14, rsi",
            "mov r15, r8",
            "jne 0x8003ac0",
            "mov eax, dword [rdi + 0x88]",
            "test eax, eax",
            "jne 0x8003ba0",
            "mov eax, dword [r13 + 0x38]",
            "test eax, eax",
            "je 0x8003a9b",
            "mov ecx, dword [r13 + 0x3c]",
            "cmp ecx, 1",
            "jle 0x8003a7f",
            "movsxd rax, ecx",
            "mov edx, ebx",
            "mov qword [rbp - 0xb8], rsp",
            "add rax, 0xf",
            "sar edx, 0x1f",
            "mov r12d, ecx",
            "and rax, 0xfffffffffffffff0",
            "sub rsp, rax",
            "mov eax, ebx",
            "idiv ecx",
            "mov rdi, rsp",
            "sub r12d, edx",
            "lea esi, [r12 - 1]",
            "movsxd rdx, r12d",
            "call memset",
            "mov edx, ebx",
            "mov rdi, rsp",
            "mov r8d, 1",
            "mov ecx, r12d",
            "mov rsi, r15",
            "add ebx, r12d",
            "call scatterwalk_map_and_copy",
            "mov rsp, qword [rbp - 0xb8]",
            "lea rdi, [r13 + 0x38]",
            "mov ecx, ebx",
            "mov rdx, r15",
            "mov rsi, r15",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov dword [r14 + 0x48], ebx",
            "xor r12d, r12d",
            "mov eax, r12d",
            "mov rbx, qword [rbp - 0x28]",
            "mov r12, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov eax, dword [rdi + 0x38]",
            "test eax, eax",
            "jne 0x8003bf0",
            "mov dword [rbp - 0xb8], 0",
            "mov r12d, dword [r13 + 0x88]",
            "test r12d, r12d",
            "je 0x8003a9b",
            "mov ecx, dword [r14 + 0x30]",
            "cmp ecx, 0x40",
            "ja cryptodev_verbosity",
            "cmp ebx, ecx",
            "jb cryptodev_verbosity",
            "mov edx, ebx",
            "lea rdi, [rbp - 0xb0]",
            "xor r8d, r8d",
            "sub edx, ecx",
            "mov rsi, r15",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call scatterwalk_map_and_copy",
            "mov r10d, dword [rbp - 0xc8]",
            "sub ebx, dword [r14 + 0x30]",
            "lea rcx, [r13 + 0x88]",
            "mov r11, qword [rbp - 0xc0]",
            "test r10d, r10d",
            "jne 0x8003dc0",
            "test ebx, ebx",
            "jne 0x8003ce0",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov r12d, dword [r14 + 0x30]",
            "lea rsi, [rbp - 0x70]",
            "lea rdi, [rbp - 0xb0]",
            "mov edx, r12d",
            "call memcmp",
            "or eax, dword [rbp - 0xb8]",
            "je 0x8003a9b",
            "cmp dword [0x08003b85], 1",
            "jg current_task",
            "mov r12d, 0xffffffb6",
            "jmp 0x8003aa2",
            "test r10d, r10d",
            "lea rcx, [rdi + 0x88]",
            "jne 0x8003d50",
            "test ebx, ebx",
            "jne 0x8003c70",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov ecx, dword [r14 + 0x30]",
            "lea rdi, [rbp - 0x70]",
            "mov edx, ebx",
            "mov r8d, 1",
            "mov rsi, r15",
            "call scatterwalk_map_and_copy",
            "add ebx, dword [r14 + 0x30]",
            "jmp 0x8003a1a",
            "lea rdi, [rdi + 0x38]",
            "mov ecx, r9d",
            "mov rdx, r8",
            "mov rsi, r8",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "jne cryptodev_verbosity",
            "cmp dword [r13 + 0x3c], 1",
            "jle 0x8003acb",
            "mov esi, ebx",
            "mov rdi, r15",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call sym.verify_tls_record_pad.isra.4",
            "test eax, eax",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "js cryptodev_verbosity",
            "sub ebx, eax",
            "jmp 0x8003acb",
            "mov rdi, rcx",
            "mov edx, ebx",
            "mov rsi, r15",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003bb8",
            "cmp dword [0x08003c9d], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x17d",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, ebx",
            "mov rsi, r15",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003b44",
            "cmp dword [0x08003d0d], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1c4",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, r10d",
            "mov rsi, r11",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003bb0",
            "cmp dword [0x08003d7e], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x174",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, r10d",
            "mov rsi, r11",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003b3c",
            "cmp dword [0x08003dee], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1bb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003e34], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x195",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003e7a], 0",
            "mov r12d, 0xffffffea",
            "jle 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x1b0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003ec3], 0",
            "js 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x1cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f09], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x19f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f4f], 0",
            "js 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x184",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f95], 1",
            "mov dword [rbp - 0xb8], 1",
            "jle 0x8003ad5",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1a6",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "jmp 0x8003ad5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x1d0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffb6",
            "call printk",
            "jmp 0x8003aa2"
        ]
    },
    "unk.0x8003b1a": {
        "function_address": "0x08003b1a",
        "instructions": [
            "push rbp",
            "mov r11, rdx",
            "mov r10d, ecx",
            "mov rbp, rsp",
            "sub rsp, 0xd0",
            "mov qword [rbp - 0x28], rbx",
            "mov qword [rbp - 0x18], r13",
            "mov ebx, r9d",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r13, rdi",
            "mov qword [rbp - 0x20], r12",
            "cmp word [rsi + 4], 0",
            "mov r14, rsi",
            "mov r15, r8",
            "jne 0x8003ac0",
            "mov eax, dword [rdi + 0x88]",
            "test eax, eax",
            "jne 0x8003ba0",
            "mov eax, dword [r13 + 0x38]",
            "test eax, eax",
            "je 0x8003a9b",
            "mov ecx, dword [r13 + 0x3c]",
            "cmp ecx, 1",
            "jle 0x8003a7f",
            "movsxd rax, ecx",
            "mov edx, ebx",
            "mov qword [rbp - 0xb8], rsp",
            "add rax, 0xf",
            "sar edx, 0x1f",
            "mov r12d, ecx",
            "and rax, 0xfffffffffffffff0",
            "sub rsp, rax",
            "mov eax, ebx",
            "idiv ecx",
            "mov rdi, rsp",
            "sub r12d, edx",
            "lea esi, [r12 - 1]",
            "movsxd rdx, r12d",
            "call memset",
            "mov edx, ebx",
            "mov rdi, rsp",
            "mov r8d, 1",
            "mov ecx, r12d",
            "mov rsi, r15",
            "add ebx, r12d",
            "call scatterwalk_map_and_copy",
            "mov rsp, qword [rbp - 0xb8]",
            "lea rdi, [r13 + 0x38]",
            "mov ecx, ebx",
            "mov rdx, r15",
            "mov rsi, r15",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov dword [r14 + 0x48], ebx",
            "xor r12d, r12d",
            "mov eax, r12d",
            "mov rbx, qword [rbp - 0x28]",
            "mov r12, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov eax, dword [rdi + 0x38]",
            "test eax, eax",
            "jne 0x8003bf0",
            "mov dword [rbp - 0xb8], 0",
            "mov r12d, dword [r13 + 0x88]",
            "test r12d, r12d",
            "je 0x8003a9b",
            "mov ecx, dword [r14 + 0x30]",
            "cmp ecx, 0x40",
            "ja cryptodev_verbosity",
            "cmp ebx, ecx",
            "jb cryptodev_verbosity",
            "mov edx, ebx",
            "lea rdi, [rbp - 0xb0]",
            "xor r8d, r8d",
            "sub edx, ecx",
            "mov rsi, r15",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call scatterwalk_map_and_copy",
            "mov r10d, dword [rbp - 0xc8]",
            "sub ebx, dword [r14 + 0x30]",
            "lea rcx, [r13 + 0x88]",
            "mov r11, qword [rbp - 0xc0]",
            "test r10d, r10d",
            "jne 0x8003dc0",
            "test ebx, ebx",
            "jne 0x8003ce0",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov r12d, dword [r14 + 0x30]",
            "lea rsi, [rbp - 0x70]",
            "lea rdi, [rbp - 0xb0]",
            "mov edx, r12d",
            "call memcmp",
            "or eax, dword [rbp - 0xb8]",
            "je 0x8003a9b",
            "cmp dword [0x08003b85], 1",
            "jg current_task",
            "mov r12d, 0xffffffb6",
            "jmp 0x8003aa2",
            "test r10d, r10d",
            "lea rcx, [rdi + 0x88]",
            "jne 0x8003d50",
            "test ebx, ebx",
            "jne 0x8003c70",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov ecx, dword [r14 + 0x30]",
            "lea rdi, [rbp - 0x70]",
            "mov edx, ebx",
            "mov r8d, 1",
            "mov rsi, r15",
            "call scatterwalk_map_and_copy",
            "add ebx, dword [r14 + 0x30]",
            "jmp 0x8003a1a",
            "lea rdi, [rdi + 0x38]",
            "mov ecx, r9d",
            "mov rdx, r8",
            "mov rsi, r8",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "jne cryptodev_verbosity",
            "cmp dword [r13 + 0x3c], 1",
            "jle 0x8003acb",
            "mov esi, ebx",
            "mov rdi, r15",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call sym.verify_tls_record_pad.isra.4",
            "test eax, eax",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "js cryptodev_verbosity",
            "sub ebx, eax",
            "jmp 0x8003acb",
            "mov rdi, rcx",
            "mov edx, ebx",
            "mov rsi, r15",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003bb8",
            "cmp dword [0x08003c9d], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x17d",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, ebx",
            "mov rsi, r15",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003b44",
            "cmp dword [0x08003d0d], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1c4",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, r10d",
            "mov rsi, r11",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003bb0",
            "cmp dword [0x08003d7e], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x174",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, r10d",
            "mov rsi, r11",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003b3c",
            "cmp dword [0x08003dee], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1bb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003e34], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x195",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003e7a], 0",
            "mov r12d, 0xffffffea",
            "jle 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x1b0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003ec3], 0",
            "js 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x1cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f09], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x19f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f4f], 0",
            "js 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x184",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f95], 1",
            "mov dword [rbp - 0xb8], 1",
            "jle 0x8003ad5",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1a6",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "jmp 0x8003ad5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x1d0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffb6",
            "call printk",
            "jmp 0x8003aa2"
        ]
    },
    "unk.0x8003b50": {
        "function_address": "0x08003b50",
        "instructions": [
            "push rbp",
            "mov r11, rdx",
            "mov r10d, ecx",
            "mov rbp, rsp",
            "sub rsp, 0xd0",
            "mov qword [rbp - 0x28], rbx",
            "mov qword [rbp - 0x18], r13",
            "mov ebx, r9d",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r13, rdi",
            "mov qword [rbp - 0x20], r12",
            "cmp word [rsi + 4], 0",
            "mov r14, rsi",
            "mov r15, r8",
            "jne 0x8003ac0",
            "mov eax, dword [rdi + 0x88]",
            "test eax, eax",
            "jne 0x8003ba0",
            "mov eax, dword [r13 + 0x38]",
            "test eax, eax",
            "je 0x8003a9b",
            "mov ecx, dword [r13 + 0x3c]",
            "cmp ecx, 1",
            "jle 0x8003a7f",
            "movsxd rax, ecx",
            "mov edx, ebx",
            "mov qword [rbp - 0xb8], rsp",
            "add rax, 0xf",
            "sar edx, 0x1f",
            "mov r12d, ecx",
            "and rax, 0xfffffffffffffff0",
            "sub rsp, rax",
            "mov eax, ebx",
            "idiv ecx",
            "mov rdi, rsp",
            "sub r12d, edx",
            "lea esi, [r12 - 1]",
            "movsxd rdx, r12d",
            "call memset",
            "mov edx, ebx",
            "mov rdi, rsp",
            "mov r8d, 1",
            "mov ecx, r12d",
            "mov rsi, r15",
            "add ebx, r12d",
            "call scatterwalk_map_and_copy",
            "mov rsp, qword [rbp - 0xb8]",
            "lea rdi, [r13 + 0x38]",
            "mov ecx, ebx",
            "mov rdx, r15",
            "mov rsi, r15",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov dword [r14 + 0x48], ebx",
            "xor r12d, r12d",
            "mov eax, r12d",
            "mov rbx, qword [rbp - 0x28]",
            "mov r12, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov eax, dword [rdi + 0x38]",
            "test eax, eax",
            "jne 0x8003bf0",
            "mov dword [rbp - 0xb8], 0",
            "mov r12d, dword [r13 + 0x88]",
            "test r12d, r12d",
            "je 0x8003a9b",
            "mov ecx, dword [r14 + 0x30]",
            "cmp ecx, 0x40",
            "ja cryptodev_verbosity",
            "cmp ebx, ecx",
            "jb cryptodev_verbosity",
            "mov edx, ebx",
            "lea rdi, [rbp - 0xb0]",
            "xor r8d, r8d",
            "sub edx, ecx",
            "mov rsi, r15",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call scatterwalk_map_and_copy",
            "mov r10d, dword [rbp - 0xc8]",
            "sub ebx, dword [r14 + 0x30]",
            "lea rcx, [r13 + 0x88]",
            "mov r11, qword [rbp - 0xc0]",
            "test r10d, r10d",
            "jne 0x8003dc0",
            "test ebx, ebx",
            "jne 0x8003ce0",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov r12d, dword [r14 + 0x30]",
            "lea rsi, [rbp - 0x70]",
            "lea rdi, [rbp - 0xb0]",
            "mov edx, r12d",
            "call memcmp",
            "or eax, dword [rbp - 0xb8]",
            "je 0x8003a9b",
            "cmp dword [0x08003b85], 1",
            "jg current_task",
            "mov r12d, 0xffffffb6",
            "jmp 0x8003aa2",
            "test r10d, r10d",
            "lea rcx, [rdi + 0x88]",
            "jne 0x8003d50",
            "test ebx, ebx",
            "jne 0x8003c70",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov ecx, dword [r14 + 0x30]",
            "lea rdi, [rbp - 0x70]",
            "mov edx, ebx",
            "mov r8d, 1",
            "mov rsi, r15",
            "call scatterwalk_map_and_copy",
            "add ebx, dword [r14 + 0x30]",
            "jmp 0x8003a1a",
            "lea rdi, [rdi + 0x38]",
            "mov ecx, r9d",
            "mov rdx, r8",
            "mov rsi, r8",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "jne cryptodev_verbosity",
            "cmp dword [r13 + 0x3c], 1",
            "jle 0x8003acb",
            "mov esi, ebx",
            "mov rdi, r15",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call sym.verify_tls_record_pad.isra.4",
            "test eax, eax",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "js cryptodev_verbosity",
            "sub ebx, eax",
            "jmp 0x8003acb",
            "mov rdi, rcx",
            "mov edx, ebx",
            "mov rsi, r15",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003bb8",
            "cmp dword [0x08003c9d], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x17d",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, ebx",
            "mov rsi, r15",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003b44",
            "cmp dword [0x08003d0d], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1c4",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, r10d",
            "mov rsi, r11",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003bb0",
            "cmp dword [0x08003d7e], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x174",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, r10d",
            "mov rsi, r11",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003b3c",
            "cmp dword [0x08003dee], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1bb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003e34], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x195",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003e7a], 0",
            "mov r12d, 0xffffffea",
            "jle 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x1b0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003ec3], 0",
            "js 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x1cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f09], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x19f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f4f], 0",
            "js 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x184",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f95], 1",
            "mov dword [rbp - 0xb8], 1",
            "jle 0x8003ad5",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1a6",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "jmp 0x8003ad5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x1d0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffb6",
            "call printk",
            "jmp 0x8003aa2"
        ]
    },
    "unk.0x8003b72": {
        "function_address": "0x08003b72",
        "instructions": [
            "push rbp",
            "mov r11, rdx",
            "mov r10d, ecx",
            "mov rbp, rsp",
            "sub rsp, 0xd0",
            "mov qword [rbp - 0x28], rbx",
            "mov qword [rbp - 0x18], r13",
            "mov ebx, r9d",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r13, rdi",
            "mov qword [rbp - 0x20], r12",
            "cmp word [rsi + 4], 0",
            "mov r14, rsi",
            "mov r15, r8",
            "jne 0x8003ac0",
            "mov eax, dword [rdi + 0x88]",
            "test eax, eax",
            "jne 0x8003ba0",
            "mov eax, dword [r13 + 0x38]",
            "test eax, eax",
            "je 0x8003a9b",
            "mov ecx, dword [r13 + 0x3c]",
            "cmp ecx, 1",
            "jle 0x8003a7f",
            "movsxd rax, ecx",
            "mov edx, ebx",
            "mov qword [rbp - 0xb8], rsp",
            "add rax, 0xf",
            "sar edx, 0x1f",
            "mov r12d, ecx",
            "and rax, 0xfffffffffffffff0",
            "sub rsp, rax",
            "mov eax, ebx",
            "idiv ecx",
            "mov rdi, rsp",
            "sub r12d, edx",
            "lea esi, [r12 - 1]",
            "movsxd rdx, r12d",
            "call memset",
            "mov edx, ebx",
            "mov rdi, rsp",
            "mov r8d, 1",
            "mov ecx, r12d",
            "mov rsi, r15",
            "add ebx, r12d",
            "call scatterwalk_map_and_copy",
            "mov rsp, qword [rbp - 0xb8]",
            "lea rdi, [r13 + 0x38]",
            "mov ecx, ebx",
            "mov rdx, r15",
            "mov rsi, r15",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov dword [r14 + 0x48], ebx",
            "xor r12d, r12d",
            "mov eax, r12d",
            "mov rbx, qword [rbp - 0x28]",
            "mov r12, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov eax, dword [rdi + 0x38]",
            "test eax, eax",
            "jne 0x8003bf0",
            "mov dword [rbp - 0xb8], 0",
            "mov r12d, dword [r13 + 0x88]",
            "test r12d, r12d",
            "je 0x8003a9b",
            "mov ecx, dword [r14 + 0x30]",
            "cmp ecx, 0x40",
            "ja cryptodev_verbosity",
            "cmp ebx, ecx",
            "jb cryptodev_verbosity",
            "mov edx, ebx",
            "lea rdi, [rbp - 0xb0]",
            "xor r8d, r8d",
            "sub edx, ecx",
            "mov rsi, r15",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call scatterwalk_map_and_copy",
            "mov r10d, dword [rbp - 0xc8]",
            "sub ebx, dword [r14 + 0x30]",
            "lea rcx, [r13 + 0x88]",
            "mov r11, qword [rbp - 0xc0]",
            "test r10d, r10d",
            "jne 0x8003dc0",
            "test ebx, ebx",
            "jne 0x8003ce0",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov r12d, dword [r14 + 0x30]",
            "lea rsi, [rbp - 0x70]",
            "lea rdi, [rbp - 0xb0]",
            "mov edx, r12d",
            "call memcmp",
            "or eax, dword [rbp - 0xb8]",
            "je 0x8003a9b",
            "cmp dword [0x08003b85], 1",
            "jg current_task",
            "mov r12d, 0xffffffb6",
            "jmp 0x8003aa2",
            "test r10d, r10d",
            "lea rcx, [rdi + 0x88]",
            "jne 0x8003d50",
            "test ebx, ebx",
            "jne 0x8003c70",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov ecx, dword [r14 + 0x30]",
            "lea rdi, [rbp - 0x70]",
            "mov edx, ebx",
            "mov r8d, 1",
            "mov rsi, r15",
            "call scatterwalk_map_and_copy",
            "add ebx, dword [r14 + 0x30]",
            "jmp 0x8003a1a",
            "lea rdi, [rdi + 0x38]",
            "mov ecx, r9d",
            "mov rdx, r8",
            "mov rsi, r8",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "jne cryptodev_verbosity",
            "cmp dword [r13 + 0x3c], 1",
            "jle 0x8003acb",
            "mov esi, ebx",
            "mov rdi, r15",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call sym.verify_tls_record_pad.isra.4",
            "test eax, eax",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "js cryptodev_verbosity",
            "sub ebx, eax",
            "jmp 0x8003acb",
            "mov rdi, rcx",
            "mov edx, ebx",
            "mov rsi, r15",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003bb8",
            "cmp dword [0x08003c9d], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x17d",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, ebx",
            "mov rsi, r15",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003b44",
            "cmp dword [0x08003d0d], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1c4",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, r10d",
            "mov rsi, r11",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003bb0",
            "cmp dword [0x08003d7e], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x174",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, r10d",
            "mov rsi, r11",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003b3c",
            "cmp dword [0x08003dee], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1bb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003e34], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x195",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003e7a], 0",
            "mov r12d, 0xffffffea",
            "jle 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x1b0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003ec3], 0",
            "js 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x1cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f09], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x19f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f4f], 0",
            "js 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x184",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f95], 1",
            "mov dword [rbp - 0xb8], 1",
            "jle 0x8003ad5",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1a6",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "jmp 0x8003ad5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x1d0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffb6",
            "call printk",
            "jmp 0x8003aa2"
        ]
    },
    "unk.0x8003bc4": {
        "function_address": "0x08003bc4",
        "instructions": [
            "push rbp",
            "mov r11, rdx",
            "mov r10d, ecx",
            "mov rbp, rsp",
            "sub rsp, 0xd0",
            "mov qword [rbp - 0x28], rbx",
            "mov qword [rbp - 0x18], r13",
            "mov ebx, r9d",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r13, rdi",
            "mov qword [rbp - 0x20], r12",
            "cmp word [rsi + 4], 0",
            "mov r14, rsi",
            "mov r15, r8",
            "jne 0x8003ac0",
            "mov eax, dword [rdi + 0x88]",
            "test eax, eax",
            "jne 0x8003ba0",
            "mov eax, dword [r13 + 0x38]",
            "test eax, eax",
            "je 0x8003a9b",
            "mov ecx, dword [r13 + 0x3c]",
            "cmp ecx, 1",
            "jle 0x8003a7f",
            "movsxd rax, ecx",
            "mov edx, ebx",
            "mov qword [rbp - 0xb8], rsp",
            "add rax, 0xf",
            "sar edx, 0x1f",
            "mov r12d, ecx",
            "and rax, 0xfffffffffffffff0",
            "sub rsp, rax",
            "mov eax, ebx",
            "idiv ecx",
            "mov rdi, rsp",
            "sub r12d, edx",
            "lea esi, [r12 - 1]",
            "movsxd rdx, r12d",
            "call memset",
            "mov edx, ebx",
            "mov rdi, rsp",
            "mov r8d, 1",
            "mov ecx, r12d",
            "mov rsi, r15",
            "add ebx, r12d",
            "call scatterwalk_map_and_copy",
            "mov rsp, qword [rbp - 0xb8]",
            "lea rdi, [r13 + 0x38]",
            "mov ecx, ebx",
            "mov rdx, r15",
            "mov rsi, r15",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov dword [r14 + 0x48], ebx",
            "xor r12d, r12d",
            "mov eax, r12d",
            "mov rbx, qword [rbp - 0x28]",
            "mov r12, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov eax, dword [rdi + 0x38]",
            "test eax, eax",
            "jne 0x8003bf0",
            "mov dword [rbp - 0xb8], 0",
            "mov r12d, dword [r13 + 0x88]",
            "test r12d, r12d",
            "je 0x8003a9b",
            "mov ecx, dword [r14 + 0x30]",
            "cmp ecx, 0x40",
            "ja cryptodev_verbosity",
            "cmp ebx, ecx",
            "jb cryptodev_verbosity",
            "mov edx, ebx",
            "lea rdi, [rbp - 0xb0]",
            "xor r8d, r8d",
            "sub edx, ecx",
            "mov rsi, r15",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call scatterwalk_map_and_copy",
            "mov r10d, dword [rbp - 0xc8]",
            "sub ebx, dword [r14 + 0x30]",
            "lea rcx, [r13 + 0x88]",
            "mov r11, qword [rbp - 0xc0]",
            "test r10d, r10d",
            "jne 0x8003dc0",
            "test ebx, ebx",
            "jne 0x8003ce0",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov r12d, dword [r14 + 0x30]",
            "lea rsi, [rbp - 0x70]",
            "lea rdi, [rbp - 0xb0]",
            "mov edx, r12d",
            "call memcmp",
            "or eax, dword [rbp - 0xb8]",
            "je 0x8003a9b",
            "cmp dword [0x08003b85], 1",
            "jg current_task",
            "mov r12d, 0xffffffb6",
            "jmp 0x8003aa2",
            "test r10d, r10d",
            "lea rcx, [rdi + 0x88]",
            "jne 0x8003d50",
            "test ebx, ebx",
            "jne 0x8003c70",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov ecx, dword [r14 + 0x30]",
            "lea rdi, [rbp - 0x70]",
            "mov edx, ebx",
            "mov r8d, 1",
            "mov rsi, r15",
            "call scatterwalk_map_and_copy",
            "add ebx, dword [r14 + 0x30]",
            "jmp 0x8003a1a",
            "lea rdi, [rdi + 0x38]",
            "mov ecx, r9d",
            "mov rdx, r8",
            "mov rsi, r8",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "jne cryptodev_verbosity",
            "cmp dword [r13 + 0x3c], 1",
            "jle 0x8003acb",
            "mov esi, ebx",
            "mov rdi, r15",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call sym.verify_tls_record_pad.isra.4",
            "test eax, eax",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "js cryptodev_verbosity",
            "sub ebx, eax",
            "jmp 0x8003acb",
            "mov rdi, rcx",
            "mov edx, ebx",
            "mov rsi, r15",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003bb8",
            "cmp dword [0x08003c9d], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x17d",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, ebx",
            "mov rsi, r15",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003b44",
            "cmp dword [0x08003d0d], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1c4",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, r10d",
            "mov rsi, r11",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003bb0",
            "cmp dword [0x08003d7e], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x174",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, r10d",
            "mov rsi, r11",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003b3c",
            "cmp dword [0x08003dee], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1bb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003e34], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x195",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003e7a], 0",
            "mov r12d, 0xffffffea",
            "jle 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x1b0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003ec3], 0",
            "js 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x1cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f09], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x19f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f4f], 0",
            "js 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x184",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f95], 1",
            "mov dword [rbp - 0xb8], 1",
            "jle 0x8003ad5",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1a6",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "jmp 0x8003ad5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x1d0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffb6",
            "call printk",
            "jmp 0x8003aa2"
        ]
    },
    "unk.0x8003be7": {
        "function_address": "0x08003be7",
        "instructions": [
            "push rbp",
            "mov r11, rdx",
            "mov r10d, ecx",
            "mov rbp, rsp",
            "sub rsp, 0xd0",
            "mov qword [rbp - 0x28], rbx",
            "mov qword [rbp - 0x18], r13",
            "mov ebx, r9d",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r13, rdi",
            "mov qword [rbp - 0x20], r12",
            "cmp word [rsi + 4], 0",
            "mov r14, rsi",
            "mov r15, r8",
            "jne 0x8003ac0",
            "mov eax, dword [rdi + 0x88]",
            "test eax, eax",
            "jne 0x8003ba0",
            "mov eax, dword [r13 + 0x38]",
            "test eax, eax",
            "je 0x8003a9b",
            "mov ecx, dword [r13 + 0x3c]",
            "cmp ecx, 1",
            "jle 0x8003a7f",
            "movsxd rax, ecx",
            "mov edx, ebx",
            "mov qword [rbp - 0xb8], rsp",
            "add rax, 0xf",
            "sar edx, 0x1f",
            "mov r12d, ecx",
            "and rax, 0xfffffffffffffff0",
            "sub rsp, rax",
            "mov eax, ebx",
            "idiv ecx",
            "mov rdi, rsp",
            "sub r12d, edx",
            "lea esi, [r12 - 1]",
            "movsxd rdx, r12d",
            "call memset",
            "mov edx, ebx",
            "mov rdi, rsp",
            "mov r8d, 1",
            "mov ecx, r12d",
            "mov rsi, r15",
            "add ebx, r12d",
            "call scatterwalk_map_and_copy",
            "mov rsp, qword [rbp - 0xb8]",
            "lea rdi, [r13 + 0x38]",
            "mov ecx, ebx",
            "mov rdx, r15",
            "mov rsi, r15",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov dword [r14 + 0x48], ebx",
            "xor r12d, r12d",
            "mov eax, r12d",
            "mov rbx, qword [rbp - 0x28]",
            "mov r12, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov eax, dword [rdi + 0x38]",
            "test eax, eax",
            "jne 0x8003bf0",
            "mov dword [rbp - 0xb8], 0",
            "mov r12d, dword [r13 + 0x88]",
            "test r12d, r12d",
            "je 0x8003a9b",
            "mov ecx, dword [r14 + 0x30]",
            "cmp ecx, 0x40",
            "ja cryptodev_verbosity",
            "cmp ebx, ecx",
            "jb cryptodev_verbosity",
            "mov edx, ebx",
            "lea rdi, [rbp - 0xb0]",
            "xor r8d, r8d",
            "sub edx, ecx",
            "mov rsi, r15",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call scatterwalk_map_and_copy",
            "mov r10d, dword [rbp - 0xc8]",
            "sub ebx, dword [r14 + 0x30]",
            "lea rcx, [r13 + 0x88]",
            "mov r11, qword [rbp - 0xc0]",
            "test r10d, r10d",
            "jne 0x8003dc0",
            "test ebx, ebx",
            "jne 0x8003ce0",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov r12d, dword [r14 + 0x30]",
            "lea rsi, [rbp - 0x70]",
            "lea rdi, [rbp - 0xb0]",
            "mov edx, r12d",
            "call memcmp",
            "or eax, dword [rbp - 0xb8]",
            "je 0x8003a9b",
            "cmp dword [0x08003b85], 1",
            "jg current_task",
            "mov r12d, 0xffffffb6",
            "jmp 0x8003aa2",
            "test r10d, r10d",
            "lea rcx, [rdi + 0x88]",
            "jne 0x8003d50",
            "test ebx, ebx",
            "jne 0x8003c70",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov ecx, dword [r14 + 0x30]",
            "lea rdi, [rbp - 0x70]",
            "mov edx, ebx",
            "mov r8d, 1",
            "mov rsi, r15",
            "call scatterwalk_map_and_copy",
            "add ebx, dword [r14 + 0x30]",
            "jmp 0x8003a1a",
            "lea rdi, [rdi + 0x38]",
            "mov ecx, r9d",
            "mov rdx, r8",
            "mov rsi, r8",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "jne cryptodev_verbosity",
            "cmp dword [r13 + 0x3c], 1",
            "jle 0x8003acb",
            "mov esi, ebx",
            "mov rdi, r15",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call sym.verify_tls_record_pad.isra.4",
            "test eax, eax",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "js cryptodev_verbosity",
            "sub ebx, eax",
            "jmp 0x8003acb",
            "mov rdi, rcx",
            "mov edx, ebx",
            "mov rsi, r15",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003bb8",
            "cmp dword [0x08003c9d], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x17d",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, ebx",
            "mov rsi, r15",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003b44",
            "cmp dword [0x08003d0d], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1c4",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, r10d",
            "mov rsi, r11",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003bb0",
            "cmp dword [0x08003d7e], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x174",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, r10d",
            "mov rsi, r11",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003b3c",
            "cmp dword [0x08003dee], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1bb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003e34], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x195",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003e7a], 0",
            "mov r12d, 0xffffffea",
            "jle 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x1b0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003ec3], 0",
            "js 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x1cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f09], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x19f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f4f], 0",
            "js 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x184",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f95], 1",
            "mov dword [rbp - 0xb8], 1",
            "jle 0x8003ad5",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1a6",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "jmp 0x8003ad5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x1d0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffb6",
            "call printk",
            "jmp 0x8003aa2"
        ]
    },
    "unk.0x8003c10": {
        "function_address": "0x08003c10",
        "instructions": [
            "push rbp",
            "mov r11, rdx",
            "mov r10d, ecx",
            "mov rbp, rsp",
            "sub rsp, 0xd0",
            "mov qword [rbp - 0x28], rbx",
            "mov qword [rbp - 0x18], r13",
            "mov ebx, r9d",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r13, rdi",
            "mov qword [rbp - 0x20], r12",
            "cmp word [rsi + 4], 0",
            "mov r14, rsi",
            "mov r15, r8",
            "jne 0x8003ac0",
            "mov eax, dword [rdi + 0x88]",
            "test eax, eax",
            "jne 0x8003ba0",
            "mov eax, dword [r13 + 0x38]",
            "test eax, eax",
            "je 0x8003a9b",
            "mov ecx, dword [r13 + 0x3c]",
            "cmp ecx, 1",
            "jle 0x8003a7f",
            "movsxd rax, ecx",
            "mov edx, ebx",
            "mov qword [rbp - 0xb8], rsp",
            "add rax, 0xf",
            "sar edx, 0x1f",
            "mov r12d, ecx",
            "and rax, 0xfffffffffffffff0",
            "sub rsp, rax",
            "mov eax, ebx",
            "idiv ecx",
            "mov rdi, rsp",
            "sub r12d, edx",
            "lea esi, [r12 - 1]",
            "movsxd rdx, r12d",
            "call memset",
            "mov edx, ebx",
            "mov rdi, rsp",
            "mov r8d, 1",
            "mov ecx, r12d",
            "mov rsi, r15",
            "add ebx, r12d",
            "call scatterwalk_map_and_copy",
            "mov rsp, qword [rbp - 0xb8]",
            "lea rdi, [r13 + 0x38]",
            "mov ecx, ebx",
            "mov rdx, r15",
            "mov rsi, r15",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov dword [r14 + 0x48], ebx",
            "xor r12d, r12d",
            "mov eax, r12d",
            "mov rbx, qword [rbp - 0x28]",
            "mov r12, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov eax, dword [rdi + 0x38]",
            "test eax, eax",
            "jne 0x8003bf0",
            "mov dword [rbp - 0xb8], 0",
            "mov r12d, dword [r13 + 0x88]",
            "test r12d, r12d",
            "je 0x8003a9b",
            "mov ecx, dword [r14 + 0x30]",
            "cmp ecx, 0x40",
            "ja cryptodev_verbosity",
            "cmp ebx, ecx",
            "jb cryptodev_verbosity",
            "mov edx, ebx",
            "lea rdi, [rbp - 0xb0]",
            "xor r8d, r8d",
            "sub edx, ecx",
            "mov rsi, r15",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call scatterwalk_map_and_copy",
            "mov r10d, dword [rbp - 0xc8]",
            "sub ebx, dword [r14 + 0x30]",
            "lea rcx, [r13 + 0x88]",
            "mov r11, qword [rbp - 0xc0]",
            "test r10d, r10d",
            "jne 0x8003dc0",
            "test ebx, ebx",
            "jne 0x8003ce0",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov r12d, dword [r14 + 0x30]",
            "lea rsi, [rbp - 0x70]",
            "lea rdi, [rbp - 0xb0]",
            "mov edx, r12d",
            "call memcmp",
            "or eax, dword [rbp - 0xb8]",
            "je 0x8003a9b",
            "cmp dword [0x08003b85], 1",
            "jg current_task",
            "mov r12d, 0xffffffb6",
            "jmp 0x8003aa2",
            "test r10d, r10d",
            "lea rcx, [rdi + 0x88]",
            "jne 0x8003d50",
            "test ebx, ebx",
            "jne 0x8003c70",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov ecx, dword [r14 + 0x30]",
            "lea rdi, [rbp - 0x70]",
            "mov edx, ebx",
            "mov r8d, 1",
            "mov rsi, r15",
            "call scatterwalk_map_and_copy",
            "add ebx, dword [r14 + 0x30]",
            "jmp 0x8003a1a",
            "lea rdi, [rdi + 0x38]",
            "mov ecx, r9d",
            "mov rdx, r8",
            "mov rsi, r8",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "jne cryptodev_verbosity",
            "cmp dword [r13 + 0x3c], 1",
            "jle 0x8003acb",
            "mov esi, ebx",
            "mov rdi, r15",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call sym.verify_tls_record_pad.isra.4",
            "test eax, eax",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "js cryptodev_verbosity",
            "sub ebx, eax",
            "jmp 0x8003acb",
            "mov rdi, rcx",
            "mov edx, ebx",
            "mov rsi, r15",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003bb8",
            "cmp dword [0x08003c9d], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x17d",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, ebx",
            "mov rsi, r15",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003b44",
            "cmp dword [0x08003d0d], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1c4",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, r10d",
            "mov rsi, r11",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003bb0",
            "cmp dword [0x08003d7e], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x174",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, r10d",
            "mov rsi, r11",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003b3c",
            "cmp dword [0x08003dee], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1bb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003e34], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x195",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003e7a], 0",
            "mov r12d, 0xffffffea",
            "jle 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x1b0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003ec3], 0",
            "js 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x1cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f09], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x19f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f4f], 0",
            "js 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x184",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f95], 1",
            "mov dword [rbp - 0xb8], 1",
            "jle 0x8003ad5",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1a6",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "jmp 0x8003ad5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x1d0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffb6",
            "call printk",
            "jmp 0x8003aa2"
        ]
    },
    "unk.0x8003c84": {
        "function_address": "0x08003c84",
        "instructions": [
            "push rbp",
            "mov r11, rdx",
            "mov r10d, ecx",
            "mov rbp, rsp",
            "sub rsp, 0xd0",
            "mov qword [rbp - 0x28], rbx",
            "mov qword [rbp - 0x18], r13",
            "mov ebx, r9d",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r13, rdi",
            "mov qword [rbp - 0x20], r12",
            "cmp word [rsi + 4], 0",
            "mov r14, rsi",
            "mov r15, r8",
            "jne 0x8003ac0",
            "mov eax, dword [rdi + 0x88]",
            "test eax, eax",
            "jne 0x8003ba0",
            "mov eax, dword [r13 + 0x38]",
            "test eax, eax",
            "je 0x8003a9b",
            "mov ecx, dword [r13 + 0x3c]",
            "cmp ecx, 1",
            "jle 0x8003a7f",
            "movsxd rax, ecx",
            "mov edx, ebx",
            "mov qword [rbp - 0xb8], rsp",
            "add rax, 0xf",
            "sar edx, 0x1f",
            "mov r12d, ecx",
            "and rax, 0xfffffffffffffff0",
            "sub rsp, rax",
            "mov eax, ebx",
            "idiv ecx",
            "mov rdi, rsp",
            "sub r12d, edx",
            "lea esi, [r12 - 1]",
            "movsxd rdx, r12d",
            "call memset",
            "mov edx, ebx",
            "mov rdi, rsp",
            "mov r8d, 1",
            "mov ecx, r12d",
            "mov rsi, r15",
            "add ebx, r12d",
            "call scatterwalk_map_and_copy",
            "mov rsp, qword [rbp - 0xb8]",
            "lea rdi, [r13 + 0x38]",
            "mov ecx, ebx",
            "mov rdx, r15",
            "mov rsi, r15",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov dword [r14 + 0x48], ebx",
            "xor r12d, r12d",
            "mov eax, r12d",
            "mov rbx, qword [rbp - 0x28]",
            "mov r12, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov eax, dword [rdi + 0x38]",
            "test eax, eax",
            "jne 0x8003bf0",
            "mov dword [rbp - 0xb8], 0",
            "mov r12d, dword [r13 + 0x88]",
            "test r12d, r12d",
            "je 0x8003a9b",
            "mov ecx, dword [r14 + 0x30]",
            "cmp ecx, 0x40",
            "ja cryptodev_verbosity",
            "cmp ebx, ecx",
            "jb cryptodev_verbosity",
            "mov edx, ebx",
            "lea rdi, [rbp - 0xb0]",
            "xor r8d, r8d",
            "sub edx, ecx",
            "mov rsi, r15",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call scatterwalk_map_and_copy",
            "mov r10d, dword [rbp - 0xc8]",
            "sub ebx, dword [r14 + 0x30]",
            "lea rcx, [r13 + 0x88]",
            "mov r11, qword [rbp - 0xc0]",
            "test r10d, r10d",
            "jne 0x8003dc0",
            "test ebx, ebx",
            "jne 0x8003ce0",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov r12d, dword [r14 + 0x30]",
            "lea rsi, [rbp - 0x70]",
            "lea rdi, [rbp - 0xb0]",
            "mov edx, r12d",
            "call memcmp",
            "or eax, dword [rbp - 0xb8]",
            "je 0x8003a9b",
            "cmp dword [0x08003b85], 1",
            "jg current_task",
            "mov r12d, 0xffffffb6",
            "jmp 0x8003aa2",
            "test r10d, r10d",
            "lea rcx, [rdi + 0x88]",
            "jne 0x8003d50",
            "test ebx, ebx",
            "jne 0x8003c70",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov ecx, dword [r14 + 0x30]",
            "lea rdi, [rbp - 0x70]",
            "mov edx, ebx",
            "mov r8d, 1",
            "mov rsi, r15",
            "call scatterwalk_map_and_copy",
            "add ebx, dword [r14 + 0x30]",
            "jmp 0x8003a1a",
            "lea rdi, [rdi + 0x38]",
            "mov ecx, r9d",
            "mov rdx, r8",
            "mov rsi, r8",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "jne cryptodev_verbosity",
            "cmp dword [r13 + 0x3c], 1",
            "jle 0x8003acb",
            "mov esi, ebx",
            "mov rdi, r15",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call sym.verify_tls_record_pad.isra.4",
            "test eax, eax",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "js cryptodev_verbosity",
            "sub ebx, eax",
            "jmp 0x8003acb",
            "mov rdi, rcx",
            "mov edx, ebx",
            "mov rsi, r15",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003bb8",
            "cmp dword [0x08003c9d], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x17d",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, ebx",
            "mov rsi, r15",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003b44",
            "cmp dword [0x08003d0d], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1c4",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, r10d",
            "mov rsi, r11",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003bb0",
            "cmp dword [0x08003d7e], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x174",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, r10d",
            "mov rsi, r11",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003b3c",
            "cmp dword [0x08003dee], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1bb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003e34], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x195",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003e7a], 0",
            "mov r12d, 0xffffffea",
            "jle 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x1b0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003ec3], 0",
            "js 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x1cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f09], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x19f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f4f], 0",
            "js 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x184",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f95], 1",
            "mov dword [rbp - 0xb8], 1",
            "jle 0x8003ad5",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1a6",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "jmp 0x8003ad5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x1d0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffb6",
            "call printk",
            "jmp 0x8003aa2"
        ]
    },
    "unk.0x8003cd7": {
        "function_address": "0x08003cd7",
        "instructions": [
            "push rbp",
            "mov r11, rdx",
            "mov r10d, ecx",
            "mov rbp, rsp",
            "sub rsp, 0xd0",
            "mov qword [rbp - 0x28], rbx",
            "mov qword [rbp - 0x18], r13",
            "mov ebx, r9d",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r13, rdi",
            "mov qword [rbp - 0x20], r12",
            "cmp word [rsi + 4], 0",
            "mov r14, rsi",
            "mov r15, r8",
            "jne 0x8003ac0",
            "mov eax, dword [rdi + 0x88]",
            "test eax, eax",
            "jne 0x8003ba0",
            "mov eax, dword [r13 + 0x38]",
            "test eax, eax",
            "je 0x8003a9b",
            "mov ecx, dword [r13 + 0x3c]",
            "cmp ecx, 1",
            "jle 0x8003a7f",
            "movsxd rax, ecx",
            "mov edx, ebx",
            "mov qword [rbp - 0xb8], rsp",
            "add rax, 0xf",
            "sar edx, 0x1f",
            "mov r12d, ecx",
            "and rax, 0xfffffffffffffff0",
            "sub rsp, rax",
            "mov eax, ebx",
            "idiv ecx",
            "mov rdi, rsp",
            "sub r12d, edx",
            "lea esi, [r12 - 1]",
            "movsxd rdx, r12d",
            "call memset",
            "mov edx, ebx",
            "mov rdi, rsp",
            "mov r8d, 1",
            "mov ecx, r12d",
            "mov rsi, r15",
            "add ebx, r12d",
            "call scatterwalk_map_and_copy",
            "mov rsp, qword [rbp - 0xb8]",
            "lea rdi, [r13 + 0x38]",
            "mov ecx, ebx",
            "mov rdx, r15",
            "mov rsi, r15",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov dword [r14 + 0x48], ebx",
            "xor r12d, r12d",
            "mov eax, r12d",
            "mov rbx, qword [rbp - 0x28]",
            "mov r12, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov eax, dword [rdi + 0x38]",
            "test eax, eax",
            "jne 0x8003bf0",
            "mov dword [rbp - 0xb8], 0",
            "mov r12d, dword [r13 + 0x88]",
            "test r12d, r12d",
            "je 0x8003a9b",
            "mov ecx, dword [r14 + 0x30]",
            "cmp ecx, 0x40",
            "ja cryptodev_verbosity",
            "cmp ebx, ecx",
            "jb cryptodev_verbosity",
            "mov edx, ebx",
            "lea rdi, [rbp - 0xb0]",
            "xor r8d, r8d",
            "sub edx, ecx",
            "mov rsi, r15",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call scatterwalk_map_and_copy",
            "mov r10d, dword [rbp - 0xc8]",
            "sub ebx, dword [r14 + 0x30]",
            "lea rcx, [r13 + 0x88]",
            "mov r11, qword [rbp - 0xc0]",
            "test r10d, r10d",
            "jne 0x8003dc0",
            "test ebx, ebx",
            "jne 0x8003ce0",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov r12d, dword [r14 + 0x30]",
            "lea rsi, [rbp - 0x70]",
            "lea rdi, [rbp - 0xb0]",
            "mov edx, r12d",
            "call memcmp",
            "or eax, dword [rbp - 0xb8]",
            "je 0x8003a9b",
            "cmp dword [0x08003b85], 1",
            "jg current_task",
            "mov r12d, 0xffffffb6",
            "jmp 0x8003aa2",
            "test r10d, r10d",
            "lea rcx, [rdi + 0x88]",
            "jne 0x8003d50",
            "test ebx, ebx",
            "jne 0x8003c70",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov ecx, dword [r14 + 0x30]",
            "lea rdi, [rbp - 0x70]",
            "mov edx, ebx",
            "mov r8d, 1",
            "mov rsi, r15",
            "call scatterwalk_map_and_copy",
            "add ebx, dword [r14 + 0x30]",
            "jmp 0x8003a1a",
            "lea rdi, [rdi + 0x38]",
            "mov ecx, r9d",
            "mov rdx, r8",
            "mov rsi, r8",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "jne cryptodev_verbosity",
            "cmp dword [r13 + 0x3c], 1",
            "jle 0x8003acb",
            "mov esi, ebx",
            "mov rdi, r15",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call sym.verify_tls_record_pad.isra.4",
            "test eax, eax",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "js cryptodev_verbosity",
            "sub ebx, eax",
            "jmp 0x8003acb",
            "mov rdi, rcx",
            "mov edx, ebx",
            "mov rsi, r15",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003bb8",
            "cmp dword [0x08003c9d], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x17d",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, ebx",
            "mov rsi, r15",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003b44",
            "cmp dword [0x08003d0d], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1c4",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, r10d",
            "mov rsi, r11",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003bb0",
            "cmp dword [0x08003d7e], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x174",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, r10d",
            "mov rsi, r11",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003b3c",
            "cmp dword [0x08003dee], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1bb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003e34], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x195",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003e7a], 0",
            "mov r12d, 0xffffffea",
            "jle 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x1b0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003ec3], 0",
            "js 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x1cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f09], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x19f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f4f], 0",
            "js 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x184",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f95], 1",
            "mov dword [rbp - 0xb8], 1",
            "jle 0x8003ad5",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1a6",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "jmp 0x8003ad5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x1d0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffb6",
            "call printk",
            "jmp 0x8003aa2"
        ]
    },
    "unk.0x8003cf4": {
        "function_address": "0x08003cf4",
        "instructions": [
            "push rbp",
            "mov r11, rdx",
            "mov r10d, ecx",
            "mov rbp, rsp",
            "sub rsp, 0xd0",
            "mov qword [rbp - 0x28], rbx",
            "mov qword [rbp - 0x18], r13",
            "mov ebx, r9d",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r13, rdi",
            "mov qword [rbp - 0x20], r12",
            "cmp word [rsi + 4], 0",
            "mov r14, rsi",
            "mov r15, r8",
            "jne 0x8003ac0",
            "mov eax, dword [rdi + 0x88]",
            "test eax, eax",
            "jne 0x8003ba0",
            "mov eax, dword [r13 + 0x38]",
            "test eax, eax",
            "je 0x8003a9b",
            "mov ecx, dword [r13 + 0x3c]",
            "cmp ecx, 1",
            "jle 0x8003a7f",
            "movsxd rax, ecx",
            "mov edx, ebx",
            "mov qword [rbp - 0xb8], rsp",
            "add rax, 0xf",
            "sar edx, 0x1f",
            "mov r12d, ecx",
            "and rax, 0xfffffffffffffff0",
            "sub rsp, rax",
            "mov eax, ebx",
            "idiv ecx",
            "mov rdi, rsp",
            "sub r12d, edx",
            "lea esi, [r12 - 1]",
            "movsxd rdx, r12d",
            "call memset",
            "mov edx, ebx",
            "mov rdi, rsp",
            "mov r8d, 1",
            "mov ecx, r12d",
            "mov rsi, r15",
            "add ebx, r12d",
            "call scatterwalk_map_and_copy",
            "mov rsp, qword [rbp - 0xb8]",
            "lea rdi, [r13 + 0x38]",
            "mov ecx, ebx",
            "mov rdx, r15",
            "mov rsi, r15",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov dword [r14 + 0x48], ebx",
            "xor r12d, r12d",
            "mov eax, r12d",
            "mov rbx, qword [rbp - 0x28]",
            "mov r12, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov eax, dword [rdi + 0x38]",
            "test eax, eax",
            "jne 0x8003bf0",
            "mov dword [rbp - 0xb8], 0",
            "mov r12d, dword [r13 + 0x88]",
            "test r12d, r12d",
            "je 0x8003a9b",
            "mov ecx, dword [r14 + 0x30]",
            "cmp ecx, 0x40",
            "ja cryptodev_verbosity",
            "cmp ebx, ecx",
            "jb cryptodev_verbosity",
            "mov edx, ebx",
            "lea rdi, [rbp - 0xb0]",
            "xor r8d, r8d",
            "sub edx, ecx",
            "mov rsi, r15",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call scatterwalk_map_and_copy",
            "mov r10d, dword [rbp - 0xc8]",
            "sub ebx, dword [r14 + 0x30]",
            "lea rcx, [r13 + 0x88]",
            "mov r11, qword [rbp - 0xc0]",
            "test r10d, r10d",
            "jne 0x8003dc0",
            "test ebx, ebx",
            "jne 0x8003ce0",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov r12d, dword [r14 + 0x30]",
            "lea rsi, [rbp - 0x70]",
            "lea rdi, [rbp - 0xb0]",
            "mov edx, r12d",
            "call memcmp",
            "or eax, dword [rbp - 0xb8]",
            "je 0x8003a9b",
            "cmp dword [0x08003b85], 1",
            "jg current_task",
            "mov r12d, 0xffffffb6",
            "jmp 0x8003aa2",
            "test r10d, r10d",
            "lea rcx, [rdi + 0x88]",
            "jne 0x8003d50",
            "test ebx, ebx",
            "jne 0x8003c70",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov ecx, dword [r14 + 0x30]",
            "lea rdi, [rbp - 0x70]",
            "mov edx, ebx",
            "mov r8d, 1",
            "mov rsi, r15",
            "call scatterwalk_map_and_copy",
            "add ebx, dword [r14 + 0x30]",
            "jmp 0x8003a1a",
            "lea rdi, [rdi + 0x38]",
            "mov ecx, r9d",
            "mov rdx, r8",
            "mov rsi, r8",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "jne cryptodev_verbosity",
            "cmp dword [r13 + 0x3c], 1",
            "jle 0x8003acb",
            "mov esi, ebx",
            "mov rdi, r15",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call sym.verify_tls_record_pad.isra.4",
            "test eax, eax",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "js cryptodev_verbosity",
            "sub ebx, eax",
            "jmp 0x8003acb",
            "mov rdi, rcx",
            "mov edx, ebx",
            "mov rsi, r15",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003bb8",
            "cmp dword [0x08003c9d], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x17d",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, ebx",
            "mov rsi, r15",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003b44",
            "cmp dword [0x08003d0d], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1c4",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, r10d",
            "mov rsi, r11",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003bb0",
            "cmp dword [0x08003d7e], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x174",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, r10d",
            "mov rsi, r11",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003b3c",
            "cmp dword [0x08003dee], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1bb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003e34], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x195",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003e7a], 0",
            "mov r12d, 0xffffffea",
            "jle 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x1b0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003ec3], 0",
            "js 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x1cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f09], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x19f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f4f], 0",
            "js 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x184",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f95], 1",
            "mov dword [rbp - 0xb8], 1",
            "jle 0x8003ad5",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1a6",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "jmp 0x8003ad5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x1d0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffb6",
            "call printk",
            "jmp 0x8003aa2"
        ]
    },
    "unk.0x8003d47": {
        "function_address": "0x08003d47",
        "instructions": [
            "push rbp",
            "mov r11, rdx",
            "mov r10d, ecx",
            "mov rbp, rsp",
            "sub rsp, 0xd0",
            "mov qword [rbp - 0x28], rbx",
            "mov qword [rbp - 0x18], r13",
            "mov ebx, r9d",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r13, rdi",
            "mov qword [rbp - 0x20], r12",
            "cmp word [rsi + 4], 0",
            "mov r14, rsi",
            "mov r15, r8",
            "jne 0x8003ac0",
            "mov eax, dword [rdi + 0x88]",
            "test eax, eax",
            "jne 0x8003ba0",
            "mov eax, dword [r13 + 0x38]",
            "test eax, eax",
            "je 0x8003a9b",
            "mov ecx, dword [r13 + 0x3c]",
            "cmp ecx, 1",
            "jle 0x8003a7f",
            "movsxd rax, ecx",
            "mov edx, ebx",
            "mov qword [rbp - 0xb8], rsp",
            "add rax, 0xf",
            "sar edx, 0x1f",
            "mov r12d, ecx",
            "and rax, 0xfffffffffffffff0",
            "sub rsp, rax",
            "mov eax, ebx",
            "idiv ecx",
            "mov rdi, rsp",
            "sub r12d, edx",
            "lea esi, [r12 - 1]",
            "movsxd rdx, r12d",
            "call memset",
            "mov edx, ebx",
            "mov rdi, rsp",
            "mov r8d, 1",
            "mov ecx, r12d",
            "mov rsi, r15",
            "add ebx, r12d",
            "call scatterwalk_map_and_copy",
            "mov rsp, qword [rbp - 0xb8]",
            "lea rdi, [r13 + 0x38]",
            "mov ecx, ebx",
            "mov rdx, r15",
            "mov rsi, r15",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov dword [r14 + 0x48], ebx",
            "xor r12d, r12d",
            "mov eax, r12d",
            "mov rbx, qword [rbp - 0x28]",
            "mov r12, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov eax, dword [rdi + 0x38]",
            "test eax, eax",
            "jne 0x8003bf0",
            "mov dword [rbp - 0xb8], 0",
            "mov r12d, dword [r13 + 0x88]",
            "test r12d, r12d",
            "je 0x8003a9b",
            "mov ecx, dword [r14 + 0x30]",
            "cmp ecx, 0x40",
            "ja cryptodev_verbosity",
            "cmp ebx, ecx",
            "jb cryptodev_verbosity",
            "mov edx, ebx",
            "lea rdi, [rbp - 0xb0]",
            "xor r8d, r8d",
            "sub edx, ecx",
            "mov rsi, r15",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call scatterwalk_map_and_copy",
            "mov r10d, dword [rbp - 0xc8]",
            "sub ebx, dword [r14 + 0x30]",
            "lea rcx, [r13 + 0x88]",
            "mov r11, qword [rbp - 0xc0]",
            "test r10d, r10d",
            "jne 0x8003dc0",
            "test ebx, ebx",
            "jne 0x8003ce0",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov r12d, dword [r14 + 0x30]",
            "lea rsi, [rbp - 0x70]",
            "lea rdi, [rbp - 0xb0]",
            "mov edx, r12d",
            "call memcmp",
            "or eax, dword [rbp - 0xb8]",
            "je 0x8003a9b",
            "cmp dword [0x08003b85], 1",
            "jg current_task",
            "mov r12d, 0xffffffb6",
            "jmp 0x8003aa2",
            "test r10d, r10d",
            "lea rcx, [rdi + 0x88]",
            "jne 0x8003d50",
            "test ebx, ebx",
            "jne 0x8003c70",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov ecx, dword [r14 + 0x30]",
            "lea rdi, [rbp - 0x70]",
            "mov edx, ebx",
            "mov r8d, 1",
            "mov rsi, r15",
            "call scatterwalk_map_and_copy",
            "add ebx, dword [r14 + 0x30]",
            "jmp 0x8003a1a",
            "lea rdi, [rdi + 0x38]",
            "mov ecx, r9d",
            "mov rdx, r8",
            "mov rsi, r8",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "jne cryptodev_verbosity",
            "cmp dword [r13 + 0x3c], 1",
            "jle 0x8003acb",
            "mov esi, ebx",
            "mov rdi, r15",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call sym.verify_tls_record_pad.isra.4",
            "test eax, eax",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "js cryptodev_verbosity",
            "sub ebx, eax",
            "jmp 0x8003acb",
            "mov rdi, rcx",
            "mov edx, ebx",
            "mov rsi, r15",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003bb8",
            "cmp dword [0x08003c9d], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x17d",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, ebx",
            "mov rsi, r15",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003b44",
            "cmp dword [0x08003d0d], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1c4",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, r10d",
            "mov rsi, r11",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003bb0",
            "cmp dword [0x08003d7e], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x174",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, r10d",
            "mov rsi, r11",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003b3c",
            "cmp dword [0x08003dee], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1bb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003e34], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x195",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003e7a], 0",
            "mov r12d, 0xffffffea",
            "jle 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x1b0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003ec3], 0",
            "js 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x1cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f09], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x19f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f4f], 0",
            "js 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x184",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f95], 1",
            "mov dword [rbp - 0xb8], 1",
            "jle 0x8003ad5",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1a6",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "jmp 0x8003ad5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x1d0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffb6",
            "call printk",
            "jmp 0x8003aa2"
        ]
    },
    "unk.0x8003d65": {
        "function_address": "0x08003d65",
        "instructions": [
            "push rbp",
            "mov r11, rdx",
            "mov r10d, ecx",
            "mov rbp, rsp",
            "sub rsp, 0xd0",
            "mov qword [rbp - 0x28], rbx",
            "mov qword [rbp - 0x18], r13",
            "mov ebx, r9d",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r13, rdi",
            "mov qword [rbp - 0x20], r12",
            "cmp word [rsi + 4], 0",
            "mov r14, rsi",
            "mov r15, r8",
            "jne 0x8003ac0",
            "mov eax, dword [rdi + 0x88]",
            "test eax, eax",
            "jne 0x8003ba0",
            "mov eax, dword [r13 + 0x38]",
            "test eax, eax",
            "je 0x8003a9b",
            "mov ecx, dword [r13 + 0x3c]",
            "cmp ecx, 1",
            "jle 0x8003a7f",
            "movsxd rax, ecx",
            "mov edx, ebx",
            "mov qword [rbp - 0xb8], rsp",
            "add rax, 0xf",
            "sar edx, 0x1f",
            "mov r12d, ecx",
            "and rax, 0xfffffffffffffff0",
            "sub rsp, rax",
            "mov eax, ebx",
            "idiv ecx",
            "mov rdi, rsp",
            "sub r12d, edx",
            "lea esi, [r12 - 1]",
            "movsxd rdx, r12d",
            "call memset",
            "mov edx, ebx",
            "mov rdi, rsp",
            "mov r8d, 1",
            "mov ecx, r12d",
            "mov rsi, r15",
            "add ebx, r12d",
            "call scatterwalk_map_and_copy",
            "mov rsp, qword [rbp - 0xb8]",
            "lea rdi, [r13 + 0x38]",
            "mov ecx, ebx",
            "mov rdx, r15",
            "mov rsi, r15",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov dword [r14 + 0x48], ebx",
            "xor r12d, r12d",
            "mov eax, r12d",
            "mov rbx, qword [rbp - 0x28]",
            "mov r12, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov eax, dword [rdi + 0x38]",
            "test eax, eax",
            "jne 0x8003bf0",
            "mov dword [rbp - 0xb8], 0",
            "mov r12d, dword [r13 + 0x88]",
            "test r12d, r12d",
            "je 0x8003a9b",
            "mov ecx, dword [r14 + 0x30]",
            "cmp ecx, 0x40",
            "ja cryptodev_verbosity",
            "cmp ebx, ecx",
            "jb cryptodev_verbosity",
            "mov edx, ebx",
            "lea rdi, [rbp - 0xb0]",
            "xor r8d, r8d",
            "sub edx, ecx",
            "mov rsi, r15",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call scatterwalk_map_and_copy",
            "mov r10d, dword [rbp - 0xc8]",
            "sub ebx, dword [r14 + 0x30]",
            "lea rcx, [r13 + 0x88]",
            "mov r11, qword [rbp - 0xc0]",
            "test r10d, r10d",
            "jne 0x8003dc0",
            "test ebx, ebx",
            "jne 0x8003ce0",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov r12d, dword [r14 + 0x30]",
            "lea rsi, [rbp - 0x70]",
            "lea rdi, [rbp - 0xb0]",
            "mov edx, r12d",
            "call memcmp",
            "or eax, dword [rbp - 0xb8]",
            "je 0x8003a9b",
            "cmp dword [0x08003b85], 1",
            "jg current_task",
            "mov r12d, 0xffffffb6",
            "jmp 0x8003aa2",
            "test r10d, r10d",
            "lea rcx, [rdi + 0x88]",
            "jne 0x8003d50",
            "test ebx, ebx",
            "jne 0x8003c70",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov ecx, dword [r14 + 0x30]",
            "lea rdi, [rbp - 0x70]",
            "mov edx, ebx",
            "mov r8d, 1",
            "mov rsi, r15",
            "call scatterwalk_map_and_copy",
            "add ebx, dword [r14 + 0x30]",
            "jmp 0x8003a1a",
            "lea rdi, [rdi + 0x38]",
            "mov ecx, r9d",
            "mov rdx, r8",
            "mov rsi, r8",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "jne cryptodev_verbosity",
            "cmp dword [r13 + 0x3c], 1",
            "jle 0x8003acb",
            "mov esi, ebx",
            "mov rdi, r15",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call sym.verify_tls_record_pad.isra.4",
            "test eax, eax",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "js cryptodev_verbosity",
            "sub ebx, eax",
            "jmp 0x8003acb",
            "mov rdi, rcx",
            "mov edx, ebx",
            "mov rsi, r15",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003bb8",
            "cmp dword [0x08003c9d], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x17d",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, ebx",
            "mov rsi, r15",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003b44",
            "cmp dword [0x08003d0d], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1c4",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, r10d",
            "mov rsi, r11",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003bb0",
            "cmp dword [0x08003d7e], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x174",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, r10d",
            "mov rsi, r11",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003b3c",
            "cmp dword [0x08003dee], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1bb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003e34], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x195",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003e7a], 0",
            "mov r12d, 0xffffffea",
            "jle 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x1b0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003ec3], 0",
            "js 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x1cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f09], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x19f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f4f], 0",
            "js 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x184",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f95], 1",
            "mov dword [rbp - 0xb8], 1",
            "jle 0x8003ad5",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1a6",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "jmp 0x8003ad5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x1d0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffb6",
            "call printk",
            "jmp 0x8003aa2"
        ]
    },
    "unk.0x8003db8": {
        "function_address": "0x08003db8",
        "instructions": [
            "push rbp",
            "mov r11, rdx",
            "mov r10d, ecx",
            "mov rbp, rsp",
            "sub rsp, 0xd0",
            "mov qword [rbp - 0x28], rbx",
            "mov qword [rbp - 0x18], r13",
            "mov ebx, r9d",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r13, rdi",
            "mov qword [rbp - 0x20], r12",
            "cmp word [rsi + 4], 0",
            "mov r14, rsi",
            "mov r15, r8",
            "jne 0x8003ac0",
            "mov eax, dword [rdi + 0x88]",
            "test eax, eax",
            "jne 0x8003ba0",
            "mov eax, dword [r13 + 0x38]",
            "test eax, eax",
            "je 0x8003a9b",
            "mov ecx, dword [r13 + 0x3c]",
            "cmp ecx, 1",
            "jle 0x8003a7f",
            "movsxd rax, ecx",
            "mov edx, ebx",
            "mov qword [rbp - 0xb8], rsp",
            "add rax, 0xf",
            "sar edx, 0x1f",
            "mov r12d, ecx",
            "and rax, 0xfffffffffffffff0",
            "sub rsp, rax",
            "mov eax, ebx",
            "idiv ecx",
            "mov rdi, rsp",
            "sub r12d, edx",
            "lea esi, [r12 - 1]",
            "movsxd rdx, r12d",
            "call memset",
            "mov edx, ebx",
            "mov rdi, rsp",
            "mov r8d, 1",
            "mov ecx, r12d",
            "mov rsi, r15",
            "add ebx, r12d",
            "call scatterwalk_map_and_copy",
            "mov rsp, qword [rbp - 0xb8]",
            "lea rdi, [r13 + 0x38]",
            "mov ecx, ebx",
            "mov rdx, r15",
            "mov rsi, r15",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov dword [r14 + 0x48], ebx",
            "xor r12d, r12d",
            "mov eax, r12d",
            "mov rbx, qword [rbp - 0x28]",
            "mov r12, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov eax, dword [rdi + 0x38]",
            "test eax, eax",
            "jne 0x8003bf0",
            "mov dword [rbp - 0xb8], 0",
            "mov r12d, dword [r13 + 0x88]",
            "test r12d, r12d",
            "je 0x8003a9b",
            "mov ecx, dword [r14 + 0x30]",
            "cmp ecx, 0x40",
            "ja cryptodev_verbosity",
            "cmp ebx, ecx",
            "jb cryptodev_verbosity",
            "mov edx, ebx",
            "lea rdi, [rbp - 0xb0]",
            "xor r8d, r8d",
            "sub edx, ecx",
            "mov rsi, r15",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call scatterwalk_map_and_copy",
            "mov r10d, dword [rbp - 0xc8]",
            "sub ebx, dword [r14 + 0x30]",
            "lea rcx, [r13 + 0x88]",
            "mov r11, qword [rbp - 0xc0]",
            "test r10d, r10d",
            "jne 0x8003dc0",
            "test ebx, ebx",
            "jne 0x8003ce0",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov r12d, dword [r14 + 0x30]",
            "lea rsi, [rbp - 0x70]",
            "lea rdi, [rbp - 0xb0]",
            "mov edx, r12d",
            "call memcmp",
            "or eax, dword [rbp - 0xb8]",
            "je 0x8003a9b",
            "cmp dword [0x08003b85], 1",
            "jg current_task",
            "mov r12d, 0xffffffb6",
            "jmp 0x8003aa2",
            "test r10d, r10d",
            "lea rcx, [rdi + 0x88]",
            "jne 0x8003d50",
            "test ebx, ebx",
            "jne 0x8003c70",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov ecx, dword [r14 + 0x30]",
            "lea rdi, [rbp - 0x70]",
            "mov edx, ebx",
            "mov r8d, 1",
            "mov rsi, r15",
            "call scatterwalk_map_and_copy",
            "add ebx, dword [r14 + 0x30]",
            "jmp 0x8003a1a",
            "lea rdi, [rdi + 0x38]",
            "mov ecx, r9d",
            "mov rdx, r8",
            "mov rsi, r8",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "jne cryptodev_verbosity",
            "cmp dword [r13 + 0x3c], 1",
            "jle 0x8003acb",
            "mov esi, ebx",
            "mov rdi, r15",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call sym.verify_tls_record_pad.isra.4",
            "test eax, eax",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "js cryptodev_verbosity",
            "sub ebx, eax",
            "jmp 0x8003acb",
            "mov rdi, rcx",
            "mov edx, ebx",
            "mov rsi, r15",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003bb8",
            "cmp dword [0x08003c9d], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x17d",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, ebx",
            "mov rsi, r15",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003b44",
            "cmp dword [0x08003d0d], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1c4",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, r10d",
            "mov rsi, r11",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003bb0",
            "cmp dword [0x08003d7e], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x174",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, r10d",
            "mov rsi, r11",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003b3c",
            "cmp dword [0x08003dee], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1bb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003e34], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x195",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003e7a], 0",
            "mov r12d, 0xffffffea",
            "jle 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x1b0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003ec3], 0",
            "js 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x1cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f09], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x19f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f4f], 0",
            "js 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x184",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f95], 1",
            "mov dword [rbp - 0xb8], 1",
            "jle 0x8003ad5",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1a6",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "jmp 0x8003ad5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x1d0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffb6",
            "call printk",
            "jmp 0x8003aa2"
        ]
    },
    "unk.0x8003dd5": {
        "function_address": "0x08003dd5",
        "instructions": [
            "push rbp",
            "mov r11, rdx",
            "mov r10d, ecx",
            "mov rbp, rsp",
            "sub rsp, 0xd0",
            "mov qword [rbp - 0x28], rbx",
            "mov qword [rbp - 0x18], r13",
            "mov ebx, r9d",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r13, rdi",
            "mov qword [rbp - 0x20], r12",
            "cmp word [rsi + 4], 0",
            "mov r14, rsi",
            "mov r15, r8",
            "jne 0x8003ac0",
            "mov eax, dword [rdi + 0x88]",
            "test eax, eax",
            "jne 0x8003ba0",
            "mov eax, dword [r13 + 0x38]",
            "test eax, eax",
            "je 0x8003a9b",
            "mov ecx, dword [r13 + 0x3c]",
            "cmp ecx, 1",
            "jle 0x8003a7f",
            "movsxd rax, ecx",
            "mov edx, ebx",
            "mov qword [rbp - 0xb8], rsp",
            "add rax, 0xf",
            "sar edx, 0x1f",
            "mov r12d, ecx",
            "and rax, 0xfffffffffffffff0",
            "sub rsp, rax",
            "mov eax, ebx",
            "idiv ecx",
            "mov rdi, rsp",
            "sub r12d, edx",
            "lea esi, [r12 - 1]",
            "movsxd rdx, r12d",
            "call memset",
            "mov edx, ebx",
            "mov rdi, rsp",
            "mov r8d, 1",
            "mov ecx, r12d",
            "mov rsi, r15",
            "add ebx, r12d",
            "call scatterwalk_map_and_copy",
            "mov rsp, qword [rbp - 0xb8]",
            "lea rdi, [r13 + 0x38]",
            "mov ecx, ebx",
            "mov rdx, r15",
            "mov rsi, r15",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov dword [r14 + 0x48], ebx",
            "xor r12d, r12d",
            "mov eax, r12d",
            "mov rbx, qword [rbp - 0x28]",
            "mov r12, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov eax, dword [rdi + 0x38]",
            "test eax, eax",
            "jne 0x8003bf0",
            "mov dword [rbp - 0xb8], 0",
            "mov r12d, dword [r13 + 0x88]",
            "test r12d, r12d",
            "je 0x8003a9b",
            "mov ecx, dword [r14 + 0x30]",
            "cmp ecx, 0x40",
            "ja cryptodev_verbosity",
            "cmp ebx, ecx",
            "jb cryptodev_verbosity",
            "mov edx, ebx",
            "lea rdi, [rbp - 0xb0]",
            "xor r8d, r8d",
            "sub edx, ecx",
            "mov rsi, r15",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call scatterwalk_map_and_copy",
            "mov r10d, dword [rbp - 0xc8]",
            "sub ebx, dword [r14 + 0x30]",
            "lea rcx, [r13 + 0x88]",
            "mov r11, qword [rbp - 0xc0]",
            "test r10d, r10d",
            "jne 0x8003dc0",
            "test ebx, ebx",
            "jne 0x8003ce0",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov r12d, dword [r14 + 0x30]",
            "lea rsi, [rbp - 0x70]",
            "lea rdi, [rbp - 0xb0]",
            "mov edx, r12d",
            "call memcmp",
            "or eax, dword [rbp - 0xb8]",
            "je 0x8003a9b",
            "cmp dword [0x08003b85], 1",
            "jg current_task",
            "mov r12d, 0xffffffb6",
            "jmp 0x8003aa2",
            "test r10d, r10d",
            "lea rcx, [rdi + 0x88]",
            "jne 0x8003d50",
            "test ebx, ebx",
            "jne 0x8003c70",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov ecx, dword [r14 + 0x30]",
            "lea rdi, [rbp - 0x70]",
            "mov edx, ebx",
            "mov r8d, 1",
            "mov rsi, r15",
            "call scatterwalk_map_and_copy",
            "add ebx, dword [r14 + 0x30]",
            "jmp 0x8003a1a",
            "lea rdi, [rdi + 0x38]",
            "mov ecx, r9d",
            "mov rdx, r8",
            "mov rsi, r8",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "jne cryptodev_verbosity",
            "cmp dword [r13 + 0x3c], 1",
            "jle 0x8003acb",
            "mov esi, ebx",
            "mov rdi, r15",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call sym.verify_tls_record_pad.isra.4",
            "test eax, eax",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "js cryptodev_verbosity",
            "sub ebx, eax",
            "jmp 0x8003acb",
            "mov rdi, rcx",
            "mov edx, ebx",
            "mov rsi, r15",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003bb8",
            "cmp dword [0x08003c9d], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x17d",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, ebx",
            "mov rsi, r15",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003b44",
            "cmp dword [0x08003d0d], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1c4",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, r10d",
            "mov rsi, r11",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003bb0",
            "cmp dword [0x08003d7e], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x174",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, r10d",
            "mov rsi, r11",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003b3c",
            "cmp dword [0x08003dee], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1bb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003e34], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x195",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003e7a], 0",
            "mov r12d, 0xffffffea",
            "jle 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x1b0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003ec3], 0",
            "js 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x1cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f09], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x19f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f4f], 0",
            "js 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x184",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f95], 1",
            "mov dword [rbp - 0xb8], 1",
            "jle 0x8003ad5",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1a6",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "jmp 0x8003ad5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x1d0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffb6",
            "call printk",
            "jmp 0x8003aa2"
        ]
    },
    "unk.0x8003e28": {
        "function_address": "0x08003e28",
        "instructions": [
            "push rbp",
            "mov r11, rdx",
            "mov r10d, ecx",
            "mov rbp, rsp",
            "sub rsp, 0xd0",
            "mov qword [rbp - 0x28], rbx",
            "mov qword [rbp - 0x18], r13",
            "mov ebx, r9d",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r13, rdi",
            "mov qword [rbp - 0x20], r12",
            "cmp word [rsi + 4], 0",
            "mov r14, rsi",
            "mov r15, r8",
            "jne 0x8003ac0",
            "mov eax, dword [rdi + 0x88]",
            "test eax, eax",
            "jne 0x8003ba0",
            "mov eax, dword [r13 + 0x38]",
            "test eax, eax",
            "je 0x8003a9b",
            "mov ecx, dword [r13 + 0x3c]",
            "cmp ecx, 1",
            "jle 0x8003a7f",
            "movsxd rax, ecx",
            "mov edx, ebx",
            "mov qword [rbp - 0xb8], rsp",
            "add rax, 0xf",
            "sar edx, 0x1f",
            "mov r12d, ecx",
            "and rax, 0xfffffffffffffff0",
            "sub rsp, rax",
            "mov eax, ebx",
            "idiv ecx",
            "mov rdi, rsp",
            "sub r12d, edx",
            "lea esi, [r12 - 1]",
            "movsxd rdx, r12d",
            "call memset",
            "mov edx, ebx",
            "mov rdi, rsp",
            "mov r8d, 1",
            "mov ecx, r12d",
            "mov rsi, r15",
            "add ebx, r12d",
            "call scatterwalk_map_and_copy",
            "mov rsp, qword [rbp - 0xb8]",
            "lea rdi, [r13 + 0x38]",
            "mov ecx, ebx",
            "mov rdx, r15",
            "mov rsi, r15",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov dword [r14 + 0x48], ebx",
            "xor r12d, r12d",
            "mov eax, r12d",
            "mov rbx, qword [rbp - 0x28]",
            "mov r12, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov eax, dword [rdi + 0x38]",
            "test eax, eax",
            "jne 0x8003bf0",
            "mov dword [rbp - 0xb8], 0",
            "mov r12d, dword [r13 + 0x88]",
            "test r12d, r12d",
            "je 0x8003a9b",
            "mov ecx, dword [r14 + 0x30]",
            "cmp ecx, 0x40",
            "ja cryptodev_verbosity",
            "cmp ebx, ecx",
            "jb cryptodev_verbosity",
            "mov edx, ebx",
            "lea rdi, [rbp - 0xb0]",
            "xor r8d, r8d",
            "sub edx, ecx",
            "mov rsi, r15",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call scatterwalk_map_and_copy",
            "mov r10d, dword [rbp - 0xc8]",
            "sub ebx, dword [r14 + 0x30]",
            "lea rcx, [r13 + 0x88]",
            "mov r11, qword [rbp - 0xc0]",
            "test r10d, r10d",
            "jne 0x8003dc0",
            "test ebx, ebx",
            "jne 0x8003ce0",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov r12d, dword [r14 + 0x30]",
            "lea rsi, [rbp - 0x70]",
            "lea rdi, [rbp - 0xb0]",
            "mov edx, r12d",
            "call memcmp",
            "or eax, dword [rbp - 0xb8]",
            "je 0x8003a9b",
            "cmp dword [0x08003b85], 1",
            "jg current_task",
            "mov r12d, 0xffffffb6",
            "jmp 0x8003aa2",
            "test r10d, r10d",
            "lea rcx, [rdi + 0x88]",
            "jne 0x8003d50",
            "test ebx, ebx",
            "jne 0x8003c70",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov ecx, dword [r14 + 0x30]",
            "lea rdi, [rbp - 0x70]",
            "mov edx, ebx",
            "mov r8d, 1",
            "mov rsi, r15",
            "call scatterwalk_map_and_copy",
            "add ebx, dword [r14 + 0x30]",
            "jmp 0x8003a1a",
            "lea rdi, [rdi + 0x38]",
            "mov ecx, r9d",
            "mov rdx, r8",
            "mov rsi, r8",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "jne cryptodev_verbosity",
            "cmp dword [r13 + 0x3c], 1",
            "jle 0x8003acb",
            "mov esi, ebx",
            "mov rdi, r15",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call sym.verify_tls_record_pad.isra.4",
            "test eax, eax",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "js cryptodev_verbosity",
            "sub ebx, eax",
            "jmp 0x8003acb",
            "mov rdi, rcx",
            "mov edx, ebx",
            "mov rsi, r15",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003bb8",
            "cmp dword [0x08003c9d], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x17d",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, ebx",
            "mov rsi, r15",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003b44",
            "cmp dword [0x08003d0d], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1c4",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, r10d",
            "mov rsi, r11",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003bb0",
            "cmp dword [0x08003d7e], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x174",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, r10d",
            "mov rsi, r11",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003b3c",
            "cmp dword [0x08003dee], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1bb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003e34], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x195",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003e7a], 0",
            "mov r12d, 0xffffffea",
            "jle 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x1b0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003ec3], 0",
            "js 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x1cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f09], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x19f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f4f], 0",
            "js 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x184",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f95], 1",
            "mov dword [rbp - 0xb8], 1",
            "jle 0x8003ad5",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1a6",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "jmp 0x8003ad5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x1d0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffb6",
            "call printk",
            "jmp 0x8003aa2"
        ]
    },
    "unk.0x8003e6e": {
        "function_address": "0x08003e6e",
        "instructions": [
            "push rbp",
            "mov r11, rdx",
            "mov r10d, ecx",
            "mov rbp, rsp",
            "sub rsp, 0xd0",
            "mov qword [rbp - 0x28], rbx",
            "mov qword [rbp - 0x18], r13",
            "mov ebx, r9d",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r13, rdi",
            "mov qword [rbp - 0x20], r12",
            "cmp word [rsi + 4], 0",
            "mov r14, rsi",
            "mov r15, r8",
            "jne 0x8003ac0",
            "mov eax, dword [rdi + 0x88]",
            "test eax, eax",
            "jne 0x8003ba0",
            "mov eax, dword [r13 + 0x38]",
            "test eax, eax",
            "je 0x8003a9b",
            "mov ecx, dword [r13 + 0x3c]",
            "cmp ecx, 1",
            "jle 0x8003a7f",
            "movsxd rax, ecx",
            "mov edx, ebx",
            "mov qword [rbp - 0xb8], rsp",
            "add rax, 0xf",
            "sar edx, 0x1f",
            "mov r12d, ecx",
            "and rax, 0xfffffffffffffff0",
            "sub rsp, rax",
            "mov eax, ebx",
            "idiv ecx",
            "mov rdi, rsp",
            "sub r12d, edx",
            "lea esi, [r12 - 1]",
            "movsxd rdx, r12d",
            "call memset",
            "mov edx, ebx",
            "mov rdi, rsp",
            "mov r8d, 1",
            "mov ecx, r12d",
            "mov rsi, r15",
            "add ebx, r12d",
            "call scatterwalk_map_and_copy",
            "mov rsp, qword [rbp - 0xb8]",
            "lea rdi, [r13 + 0x38]",
            "mov ecx, ebx",
            "mov rdx, r15",
            "mov rsi, r15",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov dword [r14 + 0x48], ebx",
            "xor r12d, r12d",
            "mov eax, r12d",
            "mov rbx, qword [rbp - 0x28]",
            "mov r12, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov eax, dword [rdi + 0x38]",
            "test eax, eax",
            "jne 0x8003bf0",
            "mov dword [rbp - 0xb8], 0",
            "mov r12d, dword [r13 + 0x88]",
            "test r12d, r12d",
            "je 0x8003a9b",
            "mov ecx, dword [r14 + 0x30]",
            "cmp ecx, 0x40",
            "ja cryptodev_verbosity",
            "cmp ebx, ecx",
            "jb cryptodev_verbosity",
            "mov edx, ebx",
            "lea rdi, [rbp - 0xb0]",
            "xor r8d, r8d",
            "sub edx, ecx",
            "mov rsi, r15",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call scatterwalk_map_and_copy",
            "mov r10d, dword [rbp - 0xc8]",
            "sub ebx, dword [r14 + 0x30]",
            "lea rcx, [r13 + 0x88]",
            "mov r11, qword [rbp - 0xc0]",
            "test r10d, r10d",
            "jne 0x8003dc0",
            "test ebx, ebx",
            "jne 0x8003ce0",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov r12d, dword [r14 + 0x30]",
            "lea rsi, [rbp - 0x70]",
            "lea rdi, [rbp - 0xb0]",
            "mov edx, r12d",
            "call memcmp",
            "or eax, dword [rbp - 0xb8]",
            "je 0x8003a9b",
            "cmp dword [0x08003b85], 1",
            "jg current_task",
            "mov r12d, 0xffffffb6",
            "jmp 0x8003aa2",
            "test r10d, r10d",
            "lea rcx, [rdi + 0x88]",
            "jne 0x8003d50",
            "test ebx, ebx",
            "jne 0x8003c70",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov ecx, dword [r14 + 0x30]",
            "lea rdi, [rbp - 0x70]",
            "mov edx, ebx",
            "mov r8d, 1",
            "mov rsi, r15",
            "call scatterwalk_map_and_copy",
            "add ebx, dword [r14 + 0x30]",
            "jmp 0x8003a1a",
            "lea rdi, [rdi + 0x38]",
            "mov ecx, r9d",
            "mov rdx, r8",
            "mov rsi, r8",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "jne cryptodev_verbosity",
            "cmp dword [r13 + 0x3c], 1",
            "jle 0x8003acb",
            "mov esi, ebx",
            "mov rdi, r15",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call sym.verify_tls_record_pad.isra.4",
            "test eax, eax",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "js cryptodev_verbosity",
            "sub ebx, eax",
            "jmp 0x8003acb",
            "mov rdi, rcx",
            "mov edx, ebx",
            "mov rsi, r15",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003bb8",
            "cmp dword [0x08003c9d], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x17d",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, ebx",
            "mov rsi, r15",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003b44",
            "cmp dword [0x08003d0d], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1c4",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, r10d",
            "mov rsi, r11",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003bb0",
            "cmp dword [0x08003d7e], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x174",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, r10d",
            "mov rsi, r11",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003b3c",
            "cmp dword [0x08003dee], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1bb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003e34], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x195",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003e7a], 0",
            "mov r12d, 0xffffffea",
            "jle 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x1b0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003ec3], 0",
            "js 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x1cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f09], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x19f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f4f], 0",
            "js 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x184",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f95], 1",
            "mov dword [rbp - 0xb8], 1",
            "jle 0x8003ad5",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1a6",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "jmp 0x8003ad5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x1d0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffb6",
            "call printk",
            "jmp 0x8003aa2"
        ]
    },
    "unk.0x8003eb7": {
        "function_address": "0x08003eb7",
        "instructions": [
            "push rbp",
            "mov r11, rdx",
            "mov r10d, ecx",
            "mov rbp, rsp",
            "sub rsp, 0xd0",
            "mov qword [rbp - 0x28], rbx",
            "mov qword [rbp - 0x18], r13",
            "mov ebx, r9d",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r13, rdi",
            "mov qword [rbp - 0x20], r12",
            "cmp word [rsi + 4], 0",
            "mov r14, rsi",
            "mov r15, r8",
            "jne 0x8003ac0",
            "mov eax, dword [rdi + 0x88]",
            "test eax, eax",
            "jne 0x8003ba0",
            "mov eax, dword [r13 + 0x38]",
            "test eax, eax",
            "je 0x8003a9b",
            "mov ecx, dword [r13 + 0x3c]",
            "cmp ecx, 1",
            "jle 0x8003a7f",
            "movsxd rax, ecx",
            "mov edx, ebx",
            "mov qword [rbp - 0xb8], rsp",
            "add rax, 0xf",
            "sar edx, 0x1f",
            "mov r12d, ecx",
            "and rax, 0xfffffffffffffff0",
            "sub rsp, rax",
            "mov eax, ebx",
            "idiv ecx",
            "mov rdi, rsp",
            "sub r12d, edx",
            "lea esi, [r12 - 1]",
            "movsxd rdx, r12d",
            "call memset",
            "mov edx, ebx",
            "mov rdi, rsp",
            "mov r8d, 1",
            "mov ecx, r12d",
            "mov rsi, r15",
            "add ebx, r12d",
            "call scatterwalk_map_and_copy",
            "mov rsp, qword [rbp - 0xb8]",
            "lea rdi, [r13 + 0x38]",
            "mov ecx, ebx",
            "mov rdx, r15",
            "mov rsi, r15",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov dword [r14 + 0x48], ebx",
            "xor r12d, r12d",
            "mov eax, r12d",
            "mov rbx, qword [rbp - 0x28]",
            "mov r12, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov eax, dword [rdi + 0x38]",
            "test eax, eax",
            "jne 0x8003bf0",
            "mov dword [rbp - 0xb8], 0",
            "mov r12d, dword [r13 + 0x88]",
            "test r12d, r12d",
            "je 0x8003a9b",
            "mov ecx, dword [r14 + 0x30]",
            "cmp ecx, 0x40",
            "ja cryptodev_verbosity",
            "cmp ebx, ecx",
            "jb cryptodev_verbosity",
            "mov edx, ebx",
            "lea rdi, [rbp - 0xb0]",
            "xor r8d, r8d",
            "sub edx, ecx",
            "mov rsi, r15",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call scatterwalk_map_and_copy",
            "mov r10d, dword [rbp - 0xc8]",
            "sub ebx, dword [r14 + 0x30]",
            "lea rcx, [r13 + 0x88]",
            "mov r11, qword [rbp - 0xc0]",
            "test r10d, r10d",
            "jne 0x8003dc0",
            "test ebx, ebx",
            "jne 0x8003ce0",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov r12d, dword [r14 + 0x30]",
            "lea rsi, [rbp - 0x70]",
            "lea rdi, [rbp - 0xb0]",
            "mov edx, r12d",
            "call memcmp",
            "or eax, dword [rbp - 0xb8]",
            "je 0x8003a9b",
            "cmp dword [0x08003b85], 1",
            "jg current_task",
            "mov r12d, 0xffffffb6",
            "jmp 0x8003aa2",
            "test r10d, r10d",
            "lea rcx, [rdi + 0x88]",
            "jne 0x8003d50",
            "test ebx, ebx",
            "jne 0x8003c70",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov ecx, dword [r14 + 0x30]",
            "lea rdi, [rbp - 0x70]",
            "mov edx, ebx",
            "mov r8d, 1",
            "mov rsi, r15",
            "call scatterwalk_map_and_copy",
            "add ebx, dword [r14 + 0x30]",
            "jmp 0x8003a1a",
            "lea rdi, [rdi + 0x38]",
            "mov ecx, r9d",
            "mov rdx, r8",
            "mov rsi, r8",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "jne cryptodev_verbosity",
            "cmp dword [r13 + 0x3c], 1",
            "jle 0x8003acb",
            "mov esi, ebx",
            "mov rdi, r15",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call sym.verify_tls_record_pad.isra.4",
            "test eax, eax",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "js cryptodev_verbosity",
            "sub ebx, eax",
            "jmp 0x8003acb",
            "mov rdi, rcx",
            "mov edx, ebx",
            "mov rsi, r15",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003bb8",
            "cmp dword [0x08003c9d], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x17d",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, ebx",
            "mov rsi, r15",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003b44",
            "cmp dword [0x08003d0d], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1c4",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, r10d",
            "mov rsi, r11",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003bb0",
            "cmp dword [0x08003d7e], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x174",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, r10d",
            "mov rsi, r11",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003b3c",
            "cmp dword [0x08003dee], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1bb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003e34], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x195",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003e7a], 0",
            "mov r12d, 0xffffffea",
            "jle 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x1b0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003ec3], 0",
            "js 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x1cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f09], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x19f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f4f], 0",
            "js 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x184",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f95], 1",
            "mov dword [rbp - 0xb8], 1",
            "jle 0x8003ad5",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1a6",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "jmp 0x8003ad5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x1d0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffb6",
            "call printk",
            "jmp 0x8003aa2"
        ]
    },
    "unk.0x8003efd": {
        "function_address": "0x08003efd",
        "instructions": [
            "push rbp",
            "mov r11, rdx",
            "mov r10d, ecx",
            "mov rbp, rsp",
            "sub rsp, 0xd0",
            "mov qword [rbp - 0x28], rbx",
            "mov qword [rbp - 0x18], r13",
            "mov ebx, r9d",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r13, rdi",
            "mov qword [rbp - 0x20], r12",
            "cmp word [rsi + 4], 0",
            "mov r14, rsi",
            "mov r15, r8",
            "jne 0x8003ac0",
            "mov eax, dword [rdi + 0x88]",
            "test eax, eax",
            "jne 0x8003ba0",
            "mov eax, dword [r13 + 0x38]",
            "test eax, eax",
            "je 0x8003a9b",
            "mov ecx, dword [r13 + 0x3c]",
            "cmp ecx, 1",
            "jle 0x8003a7f",
            "movsxd rax, ecx",
            "mov edx, ebx",
            "mov qword [rbp - 0xb8], rsp",
            "add rax, 0xf",
            "sar edx, 0x1f",
            "mov r12d, ecx",
            "and rax, 0xfffffffffffffff0",
            "sub rsp, rax",
            "mov eax, ebx",
            "idiv ecx",
            "mov rdi, rsp",
            "sub r12d, edx",
            "lea esi, [r12 - 1]",
            "movsxd rdx, r12d",
            "call memset",
            "mov edx, ebx",
            "mov rdi, rsp",
            "mov r8d, 1",
            "mov ecx, r12d",
            "mov rsi, r15",
            "add ebx, r12d",
            "call scatterwalk_map_and_copy",
            "mov rsp, qword [rbp - 0xb8]",
            "lea rdi, [r13 + 0x38]",
            "mov ecx, ebx",
            "mov rdx, r15",
            "mov rsi, r15",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov dword [r14 + 0x48], ebx",
            "xor r12d, r12d",
            "mov eax, r12d",
            "mov rbx, qword [rbp - 0x28]",
            "mov r12, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov eax, dword [rdi + 0x38]",
            "test eax, eax",
            "jne 0x8003bf0",
            "mov dword [rbp - 0xb8], 0",
            "mov r12d, dword [r13 + 0x88]",
            "test r12d, r12d",
            "je 0x8003a9b",
            "mov ecx, dword [r14 + 0x30]",
            "cmp ecx, 0x40",
            "ja cryptodev_verbosity",
            "cmp ebx, ecx",
            "jb cryptodev_verbosity",
            "mov edx, ebx",
            "lea rdi, [rbp - 0xb0]",
            "xor r8d, r8d",
            "sub edx, ecx",
            "mov rsi, r15",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call scatterwalk_map_and_copy",
            "mov r10d, dword [rbp - 0xc8]",
            "sub ebx, dword [r14 + 0x30]",
            "lea rcx, [r13 + 0x88]",
            "mov r11, qword [rbp - 0xc0]",
            "test r10d, r10d",
            "jne 0x8003dc0",
            "test ebx, ebx",
            "jne 0x8003ce0",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov r12d, dword [r14 + 0x30]",
            "lea rsi, [rbp - 0x70]",
            "lea rdi, [rbp - 0xb0]",
            "mov edx, r12d",
            "call memcmp",
            "or eax, dword [rbp - 0xb8]",
            "je 0x8003a9b",
            "cmp dword [0x08003b85], 1",
            "jg current_task",
            "mov r12d, 0xffffffb6",
            "jmp 0x8003aa2",
            "test r10d, r10d",
            "lea rcx, [rdi + 0x88]",
            "jne 0x8003d50",
            "test ebx, ebx",
            "jne 0x8003c70",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov ecx, dword [r14 + 0x30]",
            "lea rdi, [rbp - 0x70]",
            "mov edx, ebx",
            "mov r8d, 1",
            "mov rsi, r15",
            "call scatterwalk_map_and_copy",
            "add ebx, dword [r14 + 0x30]",
            "jmp 0x8003a1a",
            "lea rdi, [rdi + 0x38]",
            "mov ecx, r9d",
            "mov rdx, r8",
            "mov rsi, r8",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "jne cryptodev_verbosity",
            "cmp dword [r13 + 0x3c], 1",
            "jle 0x8003acb",
            "mov esi, ebx",
            "mov rdi, r15",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call sym.verify_tls_record_pad.isra.4",
            "test eax, eax",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "js cryptodev_verbosity",
            "sub ebx, eax",
            "jmp 0x8003acb",
            "mov rdi, rcx",
            "mov edx, ebx",
            "mov rsi, r15",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003bb8",
            "cmp dword [0x08003c9d], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x17d",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, ebx",
            "mov rsi, r15",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003b44",
            "cmp dword [0x08003d0d], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1c4",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, r10d",
            "mov rsi, r11",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003bb0",
            "cmp dword [0x08003d7e], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x174",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, r10d",
            "mov rsi, r11",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003b3c",
            "cmp dword [0x08003dee], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1bb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003e34], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x195",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003e7a], 0",
            "mov r12d, 0xffffffea",
            "jle 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x1b0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003ec3], 0",
            "js 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x1cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f09], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x19f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f4f], 0",
            "js 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x184",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f95], 1",
            "mov dword [rbp - 0xb8], 1",
            "jle 0x8003ad5",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1a6",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "jmp 0x8003ad5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x1d0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffb6",
            "call printk",
            "jmp 0x8003aa2"
        ]
    },
    "unk.0x8003f43": {
        "function_address": "0x08003f43",
        "instructions": [
            "push rbp",
            "mov r11, rdx",
            "mov r10d, ecx",
            "mov rbp, rsp",
            "sub rsp, 0xd0",
            "mov qword [rbp - 0x28], rbx",
            "mov qword [rbp - 0x18], r13",
            "mov ebx, r9d",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r13, rdi",
            "mov qword [rbp - 0x20], r12",
            "cmp word [rsi + 4], 0",
            "mov r14, rsi",
            "mov r15, r8",
            "jne 0x8003ac0",
            "mov eax, dword [rdi + 0x88]",
            "test eax, eax",
            "jne 0x8003ba0",
            "mov eax, dword [r13 + 0x38]",
            "test eax, eax",
            "je 0x8003a9b",
            "mov ecx, dword [r13 + 0x3c]",
            "cmp ecx, 1",
            "jle 0x8003a7f",
            "movsxd rax, ecx",
            "mov edx, ebx",
            "mov qword [rbp - 0xb8], rsp",
            "add rax, 0xf",
            "sar edx, 0x1f",
            "mov r12d, ecx",
            "and rax, 0xfffffffffffffff0",
            "sub rsp, rax",
            "mov eax, ebx",
            "idiv ecx",
            "mov rdi, rsp",
            "sub r12d, edx",
            "lea esi, [r12 - 1]",
            "movsxd rdx, r12d",
            "call memset",
            "mov edx, ebx",
            "mov rdi, rsp",
            "mov r8d, 1",
            "mov ecx, r12d",
            "mov rsi, r15",
            "add ebx, r12d",
            "call scatterwalk_map_and_copy",
            "mov rsp, qword [rbp - 0xb8]",
            "lea rdi, [r13 + 0x38]",
            "mov ecx, ebx",
            "mov rdx, r15",
            "mov rsi, r15",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov dword [r14 + 0x48], ebx",
            "xor r12d, r12d",
            "mov eax, r12d",
            "mov rbx, qword [rbp - 0x28]",
            "mov r12, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov eax, dword [rdi + 0x38]",
            "test eax, eax",
            "jne 0x8003bf0",
            "mov dword [rbp - 0xb8], 0",
            "mov r12d, dword [r13 + 0x88]",
            "test r12d, r12d",
            "je 0x8003a9b",
            "mov ecx, dword [r14 + 0x30]",
            "cmp ecx, 0x40",
            "ja cryptodev_verbosity",
            "cmp ebx, ecx",
            "jb cryptodev_verbosity",
            "mov edx, ebx",
            "lea rdi, [rbp - 0xb0]",
            "xor r8d, r8d",
            "sub edx, ecx",
            "mov rsi, r15",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call scatterwalk_map_and_copy",
            "mov r10d, dword [rbp - 0xc8]",
            "sub ebx, dword [r14 + 0x30]",
            "lea rcx, [r13 + 0x88]",
            "mov r11, qword [rbp - 0xc0]",
            "test r10d, r10d",
            "jne 0x8003dc0",
            "test ebx, ebx",
            "jne 0x8003ce0",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov r12d, dword [r14 + 0x30]",
            "lea rsi, [rbp - 0x70]",
            "lea rdi, [rbp - 0xb0]",
            "mov edx, r12d",
            "call memcmp",
            "or eax, dword [rbp - 0xb8]",
            "je 0x8003a9b",
            "cmp dword [0x08003b85], 1",
            "jg current_task",
            "mov r12d, 0xffffffb6",
            "jmp 0x8003aa2",
            "test r10d, r10d",
            "lea rcx, [rdi + 0x88]",
            "jne 0x8003d50",
            "test ebx, ebx",
            "jne 0x8003c70",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov ecx, dword [r14 + 0x30]",
            "lea rdi, [rbp - 0x70]",
            "mov edx, ebx",
            "mov r8d, 1",
            "mov rsi, r15",
            "call scatterwalk_map_and_copy",
            "add ebx, dword [r14 + 0x30]",
            "jmp 0x8003a1a",
            "lea rdi, [rdi + 0x38]",
            "mov ecx, r9d",
            "mov rdx, r8",
            "mov rsi, r8",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "jne cryptodev_verbosity",
            "cmp dword [r13 + 0x3c], 1",
            "jle 0x8003acb",
            "mov esi, ebx",
            "mov rdi, r15",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call sym.verify_tls_record_pad.isra.4",
            "test eax, eax",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "js cryptodev_verbosity",
            "sub ebx, eax",
            "jmp 0x8003acb",
            "mov rdi, rcx",
            "mov edx, ebx",
            "mov rsi, r15",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003bb8",
            "cmp dword [0x08003c9d], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x17d",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, ebx",
            "mov rsi, r15",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003b44",
            "cmp dword [0x08003d0d], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1c4",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, r10d",
            "mov rsi, r11",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003bb0",
            "cmp dword [0x08003d7e], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x174",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, r10d",
            "mov rsi, r11",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003b3c",
            "cmp dword [0x08003dee], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1bb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003e34], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x195",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003e7a], 0",
            "mov r12d, 0xffffffea",
            "jle 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x1b0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003ec3], 0",
            "js 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x1cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f09], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x19f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f4f], 0",
            "js 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x184",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f95], 1",
            "mov dword [rbp - 0xb8], 1",
            "jle 0x8003ad5",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1a6",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "jmp 0x8003ad5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x1d0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffb6",
            "call printk",
            "jmp 0x8003aa2"
        ]
    },
    "unk.0x8003f89": {
        "function_address": "0x08003f89",
        "instructions": [
            "push rbp",
            "mov r11, rdx",
            "mov r10d, ecx",
            "mov rbp, rsp",
            "sub rsp, 0xd0",
            "mov qword [rbp - 0x28], rbx",
            "mov qword [rbp - 0x18], r13",
            "mov ebx, r9d",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r13, rdi",
            "mov qword [rbp - 0x20], r12",
            "cmp word [rsi + 4], 0",
            "mov r14, rsi",
            "mov r15, r8",
            "jne 0x8003ac0",
            "mov eax, dword [rdi + 0x88]",
            "test eax, eax",
            "jne 0x8003ba0",
            "mov eax, dword [r13 + 0x38]",
            "test eax, eax",
            "je 0x8003a9b",
            "mov ecx, dword [r13 + 0x3c]",
            "cmp ecx, 1",
            "jle 0x8003a7f",
            "movsxd rax, ecx",
            "mov edx, ebx",
            "mov qword [rbp - 0xb8], rsp",
            "add rax, 0xf",
            "sar edx, 0x1f",
            "mov r12d, ecx",
            "and rax, 0xfffffffffffffff0",
            "sub rsp, rax",
            "mov eax, ebx",
            "idiv ecx",
            "mov rdi, rsp",
            "sub r12d, edx",
            "lea esi, [r12 - 1]",
            "movsxd rdx, r12d",
            "call memset",
            "mov edx, ebx",
            "mov rdi, rsp",
            "mov r8d, 1",
            "mov ecx, r12d",
            "mov rsi, r15",
            "add ebx, r12d",
            "call scatterwalk_map_and_copy",
            "mov rsp, qword [rbp - 0xb8]",
            "lea rdi, [r13 + 0x38]",
            "mov ecx, ebx",
            "mov rdx, r15",
            "mov rsi, r15",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov dword [r14 + 0x48], ebx",
            "xor r12d, r12d",
            "mov eax, r12d",
            "mov rbx, qword [rbp - 0x28]",
            "mov r12, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov eax, dword [rdi + 0x38]",
            "test eax, eax",
            "jne 0x8003bf0",
            "mov dword [rbp - 0xb8], 0",
            "mov r12d, dword [r13 + 0x88]",
            "test r12d, r12d",
            "je 0x8003a9b",
            "mov ecx, dword [r14 + 0x30]",
            "cmp ecx, 0x40",
            "ja cryptodev_verbosity",
            "cmp ebx, ecx",
            "jb cryptodev_verbosity",
            "mov edx, ebx",
            "lea rdi, [rbp - 0xb0]",
            "xor r8d, r8d",
            "sub edx, ecx",
            "mov rsi, r15",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call scatterwalk_map_and_copy",
            "mov r10d, dword [rbp - 0xc8]",
            "sub ebx, dword [r14 + 0x30]",
            "lea rcx, [r13 + 0x88]",
            "mov r11, qword [rbp - 0xc0]",
            "test r10d, r10d",
            "jne 0x8003dc0",
            "test ebx, ebx",
            "jne 0x8003ce0",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov r12d, dword [r14 + 0x30]",
            "lea rsi, [rbp - 0x70]",
            "lea rdi, [rbp - 0xb0]",
            "mov edx, r12d",
            "call memcmp",
            "or eax, dword [rbp - 0xb8]",
            "je 0x8003a9b",
            "cmp dword [0x08003b85], 1",
            "jg current_task",
            "mov r12d, 0xffffffb6",
            "jmp 0x8003aa2",
            "test r10d, r10d",
            "lea rcx, [rdi + 0x88]",
            "jne 0x8003d50",
            "test ebx, ebx",
            "jne 0x8003c70",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov ecx, dword [r14 + 0x30]",
            "lea rdi, [rbp - 0x70]",
            "mov edx, ebx",
            "mov r8d, 1",
            "mov rsi, r15",
            "call scatterwalk_map_and_copy",
            "add ebx, dword [r14 + 0x30]",
            "jmp 0x8003a1a",
            "lea rdi, [rdi + 0x38]",
            "mov ecx, r9d",
            "mov rdx, r8",
            "mov rsi, r8",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "jne cryptodev_verbosity",
            "cmp dword [r13 + 0x3c], 1",
            "jle 0x8003acb",
            "mov esi, ebx",
            "mov rdi, r15",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call sym.verify_tls_record_pad.isra.4",
            "test eax, eax",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "js cryptodev_verbosity",
            "sub ebx, eax",
            "jmp 0x8003acb",
            "mov rdi, rcx",
            "mov edx, ebx",
            "mov rsi, r15",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003bb8",
            "cmp dword [0x08003c9d], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x17d",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, ebx",
            "mov rsi, r15",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003b44",
            "cmp dword [0x08003d0d], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1c4",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, r10d",
            "mov rsi, r11",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003bb0",
            "cmp dword [0x08003d7e], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x174",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, r10d",
            "mov rsi, r11",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003b3c",
            "cmp dword [0x08003dee], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1bb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003e34], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x195",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003e7a], 0",
            "mov r12d, 0xffffffea",
            "jle 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x1b0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003ec3], 0",
            "js 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x1cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f09], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x19f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f4f], 0",
            "js 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x184",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f95], 1",
            "mov dword [rbp - 0xb8], 1",
            "jle 0x8003ad5",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1a6",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "jmp 0x8003ad5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x1d0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffb6",
            "call printk",
            "jmp 0x8003aa2"
        ]
    },
    "unk.0x8003fd9": {
        "function_address": "0x08003fd9",
        "instructions": [
            "push rbp",
            "mov r11, rdx",
            "mov r10d, ecx",
            "mov rbp, rsp",
            "sub rsp, 0xd0",
            "mov qword [rbp - 0x28], rbx",
            "mov qword [rbp - 0x18], r13",
            "mov ebx, r9d",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r13, rdi",
            "mov qword [rbp - 0x20], r12",
            "cmp word [rsi + 4], 0",
            "mov r14, rsi",
            "mov r15, r8",
            "jne 0x8003ac0",
            "mov eax, dword [rdi + 0x88]",
            "test eax, eax",
            "jne 0x8003ba0",
            "mov eax, dword [r13 + 0x38]",
            "test eax, eax",
            "je 0x8003a9b",
            "mov ecx, dword [r13 + 0x3c]",
            "cmp ecx, 1",
            "jle 0x8003a7f",
            "movsxd rax, ecx",
            "mov edx, ebx",
            "mov qword [rbp - 0xb8], rsp",
            "add rax, 0xf",
            "sar edx, 0x1f",
            "mov r12d, ecx",
            "and rax, 0xfffffffffffffff0",
            "sub rsp, rax",
            "mov eax, ebx",
            "idiv ecx",
            "mov rdi, rsp",
            "sub r12d, edx",
            "lea esi, [r12 - 1]",
            "movsxd rdx, r12d",
            "call memset",
            "mov edx, ebx",
            "mov rdi, rsp",
            "mov r8d, 1",
            "mov ecx, r12d",
            "mov rsi, r15",
            "add ebx, r12d",
            "call scatterwalk_map_and_copy",
            "mov rsp, qword [rbp - 0xb8]",
            "lea rdi, [r13 + 0x38]",
            "mov ecx, ebx",
            "mov rdx, r15",
            "mov rsi, r15",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov dword [r14 + 0x48], ebx",
            "xor r12d, r12d",
            "mov eax, r12d",
            "mov rbx, qword [rbp - 0x28]",
            "mov r12, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov eax, dword [rdi + 0x38]",
            "test eax, eax",
            "jne 0x8003bf0",
            "mov dword [rbp - 0xb8], 0",
            "mov r12d, dword [r13 + 0x88]",
            "test r12d, r12d",
            "je 0x8003a9b",
            "mov ecx, dword [r14 + 0x30]",
            "cmp ecx, 0x40",
            "ja cryptodev_verbosity",
            "cmp ebx, ecx",
            "jb cryptodev_verbosity",
            "mov edx, ebx",
            "lea rdi, [rbp - 0xb0]",
            "xor r8d, r8d",
            "sub edx, ecx",
            "mov rsi, r15",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call scatterwalk_map_and_copy",
            "mov r10d, dword [rbp - 0xc8]",
            "sub ebx, dword [r14 + 0x30]",
            "lea rcx, [r13 + 0x88]",
            "mov r11, qword [rbp - 0xc0]",
            "test r10d, r10d",
            "jne 0x8003dc0",
            "test ebx, ebx",
            "jne 0x8003ce0",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov r12d, dword [r14 + 0x30]",
            "lea rsi, [rbp - 0x70]",
            "lea rdi, [rbp - 0xb0]",
            "mov edx, r12d",
            "call memcmp",
            "or eax, dword [rbp - 0xb8]",
            "je 0x8003a9b",
            "cmp dword [0x08003b85], 1",
            "jg current_task",
            "mov r12d, 0xffffffb6",
            "jmp 0x8003aa2",
            "test r10d, r10d",
            "lea rcx, [rdi + 0x88]",
            "jne 0x8003d50",
            "test ebx, ebx",
            "jne 0x8003c70",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov ecx, dword [r14 + 0x30]",
            "lea rdi, [rbp - 0x70]",
            "mov edx, ebx",
            "mov r8d, 1",
            "mov rsi, r15",
            "call scatterwalk_map_and_copy",
            "add ebx, dword [r14 + 0x30]",
            "jmp 0x8003a1a",
            "lea rdi, [rdi + 0x38]",
            "mov ecx, r9d",
            "mov rdx, r8",
            "mov rsi, r8",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "jne cryptodev_verbosity",
            "cmp dword [r13 + 0x3c], 1",
            "jle 0x8003acb",
            "mov esi, ebx",
            "mov rdi, r15",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call sym.verify_tls_record_pad.isra.4",
            "test eax, eax",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "js cryptodev_verbosity",
            "sub ebx, eax",
            "jmp 0x8003acb",
            "mov rdi, rcx",
            "mov edx, ebx",
            "mov rsi, r15",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003bb8",
            "cmp dword [0x08003c9d], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x17d",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, ebx",
            "mov rsi, r15",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003b44",
            "cmp dword [0x08003d0d], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1c4",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, r10d",
            "mov rsi, r11",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003bb0",
            "cmp dword [0x08003d7e], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x174",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, r10d",
            "mov rsi, r11",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003b3c",
            "cmp dword [0x08003dee], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1bb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003e34], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x195",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003e7a], 0",
            "mov r12d, 0xffffffea",
            "jle 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x1b0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003ec3], 0",
            "js 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x1cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f09], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x19f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f4f], 0",
            "js 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x184",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f95], 1",
            "mov dword [rbp - 0xb8], 1",
            "jle 0x8003ad5",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1a6",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "jmp 0x8003ad5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x1d0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffb6",
            "call printk",
            "jmp 0x8003aa2"
        ]
    },
    "unk.0x8004026": {
        "function_address": "0x08004026",
        "instructions": [
            "push rbp",
            "mov r11, rdx",
            "mov r10d, ecx",
            "mov rbp, rsp",
            "sub rsp, 0xd0",
            "mov qword [rbp - 0x28], rbx",
            "mov qword [rbp - 0x18], r13",
            "mov ebx, r9d",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r13, rdi",
            "mov qword [rbp - 0x20], r12",
            "cmp word [rsi + 4], 0",
            "mov r14, rsi",
            "mov r15, r8",
            "jne 0x8003ac0",
            "mov eax, dword [rdi + 0x88]",
            "test eax, eax",
            "jne 0x8003ba0",
            "mov eax, dword [r13 + 0x38]",
            "test eax, eax",
            "je 0x8003a9b",
            "mov ecx, dword [r13 + 0x3c]",
            "cmp ecx, 1",
            "jle 0x8003a7f",
            "movsxd rax, ecx",
            "mov edx, ebx",
            "mov qword [rbp - 0xb8], rsp",
            "add rax, 0xf",
            "sar edx, 0x1f",
            "mov r12d, ecx",
            "and rax, 0xfffffffffffffff0",
            "sub rsp, rax",
            "mov eax, ebx",
            "idiv ecx",
            "mov rdi, rsp",
            "sub r12d, edx",
            "lea esi, [r12 - 1]",
            "movsxd rdx, r12d",
            "call memset",
            "mov edx, ebx",
            "mov rdi, rsp",
            "mov r8d, 1",
            "mov ecx, r12d",
            "mov rsi, r15",
            "add ebx, r12d",
            "call scatterwalk_map_and_copy",
            "mov rsp, qword [rbp - 0xb8]",
            "lea rdi, [r13 + 0x38]",
            "mov ecx, ebx",
            "mov rdx, r15",
            "mov rsi, r15",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov dword [r14 + 0x48], ebx",
            "xor r12d, r12d",
            "mov eax, r12d",
            "mov rbx, qword [rbp - 0x28]",
            "mov r12, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov eax, dword [rdi + 0x38]",
            "test eax, eax",
            "jne 0x8003bf0",
            "mov dword [rbp - 0xb8], 0",
            "mov r12d, dword [r13 + 0x88]",
            "test r12d, r12d",
            "je 0x8003a9b",
            "mov ecx, dword [r14 + 0x30]",
            "cmp ecx, 0x40",
            "ja cryptodev_verbosity",
            "cmp ebx, ecx",
            "jb cryptodev_verbosity",
            "mov edx, ebx",
            "lea rdi, [rbp - 0xb0]",
            "xor r8d, r8d",
            "sub edx, ecx",
            "mov rsi, r15",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call scatterwalk_map_and_copy",
            "mov r10d, dword [rbp - 0xc8]",
            "sub ebx, dword [r14 + 0x30]",
            "lea rcx, [r13 + 0x88]",
            "mov r11, qword [rbp - 0xc0]",
            "test r10d, r10d",
            "jne 0x8003dc0",
            "test ebx, ebx",
            "jne 0x8003ce0",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov r12d, dword [r14 + 0x30]",
            "lea rsi, [rbp - 0x70]",
            "lea rdi, [rbp - 0xb0]",
            "mov edx, r12d",
            "call memcmp",
            "or eax, dword [rbp - 0xb8]",
            "je 0x8003a9b",
            "cmp dword [0x08003b85], 1",
            "jg current_task",
            "mov r12d, 0xffffffb6",
            "jmp 0x8003aa2",
            "test r10d, r10d",
            "lea rcx, [rdi + 0x88]",
            "jne 0x8003d50",
            "test ebx, ebx",
            "jne 0x8003c70",
            "lea rsi, [rbp - 0x70]",
            "mov rdi, rcx",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov ecx, dword [r14 + 0x30]",
            "lea rdi, [rbp - 0x70]",
            "mov edx, ebx",
            "mov r8d, 1",
            "mov rsi, r15",
            "call scatterwalk_map_and_copy",
            "add ebx, dword [r14 + 0x30]",
            "jmp 0x8003a1a",
            "lea rdi, [rdi + 0x38]",
            "mov ecx, r9d",
            "mov rdx, r8",
            "mov rsi, r8",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "jne cryptodev_verbosity",
            "cmp dword [r13 + 0x3c], 1",
            "jle 0x8003acb",
            "mov esi, ebx",
            "mov rdi, r15",
            "mov dword [rbp - 0xc8], r10d",
            "mov qword [rbp - 0xc0], r11",
            "call sym.verify_tls_record_pad.isra.4",
            "test eax, eax",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "js cryptodev_verbosity",
            "sub ebx, eax",
            "jmp 0x8003acb",
            "mov rdi, rcx",
            "mov edx, ebx",
            "mov rsi, r15",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003bb8",
            "cmp dword [0x08003c9d], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x17d",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, ebx",
            "mov rsi, r15",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003b44",
            "cmp dword [0x08003d0d], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1c4",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, r10d",
            "mov rsi, r11",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003bb0",
            "cmp dword [0x08003d7e], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x174",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "mov rdi, rcx",
            "mov edx, r10d",
            "mov rsi, r11",
            "mov qword [rbp - 0xc0], rcx",
            "call cryptodev_hash_update",
            "test eax, eax",
            "mov r12d, eax",
            "mov rcx, qword [rbp - 0xc0]",
            "je 0x8003b3c",
            "cmp dword [0x08003dee], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1bb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003e34], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x195",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003e7a], 0",
            "mov r12d, 0xffffffea",
            "jle 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x1b0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003ec3], 0",
            "js 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x1cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f09], 0",
            "js 0x8003aa2",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x19f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f4f], 0",
            "js 0x8003aa2",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x184",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003aa2",
            "cmp dword [0x08003f95], 1",
            "mov dword [rbp - 0xb8], 1",
            "jle 0x8003ad5",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x1a6",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r10d, dword [rbp - 0xc8]",
            "mov r11, qword [rbp - 0xc0]",
            "jmp 0x8003ad5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r12d",
            "mov r8d, 0x1d0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffb6",
            "call printk",
            "jmp 0x8003aa2"
        ]
    },
    "sym.kcaop_to_user": {
        "function_address": "0x080042b0",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r12",
            "mov r12, rdx",
            "push rbx",
            "mov edx, dword [rdi + 0x4c]",
            "mov rbx, rdi",
            "mov eax, dword [rdi + 0x48]",
            "test edx, edx",
            "mov dword [rdi + 8], eax",
            "je 0x80042d0",
            "test byte [rdi + 6], 4",
            "jne 0x80042f0",
            "mov edx, 0x48",
            "mov rsi, rbx",
            "mov rdi, r12",
            "call _copy_to_user",
            "test rax, rax",
            "jne 0x8004311",
            "pop rbx",
            "pop r12",
            "pop rbp",
            "ret",
            "lea rsi, [rdi + 0x50]",
            "mov rdi, qword [rdi + 0x38]",
            "call _copy_to_user",
            "test eax, eax",
            "je 0x80042d0",
            "cmp dword [0x08004308], 0",
            "jg 0x8004352",
            "mov eax, 0xfffffff2",
            "jmp 0x80042e5",
            "cmp dword [0x08004318], 0",
            "jle 0x800430a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x12b",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov eax, 0xfffffff2",
            "jmp 0x80042e5",
            "mov rbx, qword gs:[0]",
            "mov edx, dword [rbx + 0x318]",
            "lea r12, [rbx + 0x4b8]",
            "xor eax, eax",
            "mov r8d, 0x10c",
            "mov rcx, 0",
            "mov rdi, 0",
            "mov rsi, r12",
            "call printk",
            "cmp dword [0x0800438d], 0",
            "jle 0x800430a",
            "mov edx, dword [rbx + 0x318]",
            "mov r8d, 0x126",
            "mov rcx, 0",
            "mov rsi, r12",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800430a"
        ]
    },
    "unk.0x80042e0": {
        "function_address": "0x080042e0",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r12",
            "mov r12, rdx",
            "push rbx",
            "mov edx, dword [rdi + 0x4c]",
            "mov rbx, rdi",
            "mov eax, dword [rdi + 0x48]",
            "test edx, edx",
            "mov dword [rdi + 8], eax",
            "je 0x80042d0",
            "test byte [rdi + 6], 4",
            "jne 0x80042f0",
            "mov edx, 0x48",
            "mov rsi, rbx",
            "mov rdi, r12",
            "call _copy_to_user",
            "test rax, rax",
            "jne 0x8004311",
            "pop rbx",
            "pop r12",
            "pop rbp",
            "ret",
            "lea rsi, [rdi + 0x50]",
            "mov rdi, qword [rdi + 0x38]",
            "call _copy_to_user",
            "test eax, eax",
            "je 0x80042d0",
            "cmp dword [0x08004308], 0",
            "jg 0x8004352",
            "mov eax, 0xfffffff2",
            "jmp 0x80042e5",
            "cmp dword [0x08004318], 0",
            "jle 0x800430a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x12b",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov eax, 0xfffffff2",
            "jmp 0x80042e5",
            "mov rbx, qword gs:[0]",
            "mov edx, dword [rbx + 0x318]",
            "lea r12, [rbx + 0x4b8]",
            "xor eax, eax",
            "mov r8d, 0x10c",
            "mov rcx, 0",
            "mov rdi, 0",
            "mov rsi, r12",
            "call printk",
            "cmp dword [0x0800438d], 0",
            "jle 0x800430a",
            "mov edx, dword [rbx + 0x318]",
            "mov r8d, 0x126",
            "mov rcx, 0",
            "mov rsi, r12",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800430a"
        ]
    },
    "unk.0x80042fd": {
        "function_address": "0x080042fd",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r12",
            "mov r12, rdx",
            "push rbx",
            "mov edx, dword [rdi + 0x4c]",
            "mov rbx, rdi",
            "mov eax, dword [rdi + 0x48]",
            "test edx, edx",
            "mov dword [rdi + 8], eax",
            "je 0x80042d0",
            "test byte [rdi + 6], 4",
            "jne 0x80042f0",
            "mov edx, 0x48",
            "mov rsi, rbx",
            "mov rdi, r12",
            "call _copy_to_user",
            "test rax, rax",
            "jne 0x8004311",
            "pop rbx",
            "pop r12",
            "pop rbp",
            "ret",
            "lea rsi, [rdi + 0x50]",
            "mov rdi, qword [rdi + 0x38]",
            "call _copy_to_user",
            "test eax, eax",
            "je 0x80042d0",
            "cmp dword [0x08004308], 0",
            "jg 0x8004352",
            "mov eax, 0xfffffff2",
            "jmp 0x80042e5",
            "cmp dword [0x08004318], 0",
            "jle 0x800430a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x12b",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov eax, 0xfffffff2",
            "jmp 0x80042e5",
            "mov rbx, qword gs:[0]",
            "mov edx, dword [rbx + 0x318]",
            "lea r12, [rbx + 0x4b8]",
            "xor eax, eax",
            "mov r8d, 0x10c",
            "mov rcx, 0",
            "mov rdi, 0",
            "mov rsi, r12",
            "call printk",
            "cmp dword [0x0800438d], 0",
            "jle 0x800430a",
            "mov edx, dword [rbx + 0x318]",
            "mov r8d, 0x126",
            "mov rcx, 0",
            "mov rsi, r12",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800430a"
        ]
    },
    "unk.0x800434b": {
        "function_address": "0x0800434b",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r12",
            "mov r12, rdx",
            "push rbx",
            "mov edx, dword [rdi + 0x4c]",
            "mov rbx, rdi",
            "mov eax, dword [rdi + 0x48]",
            "test edx, edx",
            "mov dword [rdi + 8], eax",
            "je 0x80042d0",
            "test byte [rdi + 6], 4",
            "jne 0x80042f0",
            "mov edx, 0x48",
            "mov rsi, rbx",
            "mov rdi, r12",
            "call _copy_to_user",
            "test rax, rax",
            "jne 0x8004311",
            "pop rbx",
            "pop r12",
            "pop rbp",
            "ret",
            "lea rsi, [rdi + 0x50]",
            "mov rdi, qword [rdi + 0x38]",
            "call _copy_to_user",
            "test eax, eax",
            "je 0x80042d0",
            "cmp dword [0x08004308], 0",
            "jg 0x8004352",
            "mov eax, 0xfffffff2",
            "jmp 0x80042e5",
            "cmp dword [0x08004318], 0",
            "jle 0x800430a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x12b",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov eax, 0xfffffff2",
            "jmp 0x80042e5",
            "mov rbx, qword gs:[0]",
            "mov edx, dword [rbx + 0x318]",
            "lea r12, [rbx + 0x4b8]",
            "xor eax, eax",
            "mov r8d, 0x10c",
            "mov rcx, 0",
            "mov rdi, 0",
            "mov rsi, r12",
            "call printk",
            "cmp dword [0x0800438d], 0",
            "jle 0x800430a",
            "mov edx, dword [rbx + 0x318]",
            "mov r8d, 0x126",
            "mov rcx, 0",
            "mov rsi, r12",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800430a"
        ]
    },
    "unk.0x8004386": {
        "function_address": "0x08004386",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r12",
            "mov r12, rdx",
            "push rbx",
            "mov edx, dword [rdi + 0x4c]",
            "mov rbx, rdi",
            "mov eax, dword [rdi + 0x48]",
            "test edx, edx",
            "mov dword [rdi + 8], eax",
            "je 0x80042d0",
            "test byte [rdi + 6], 4",
            "jne 0x80042f0",
            "mov edx, 0x48",
            "mov rsi, rbx",
            "mov rdi, r12",
            "call _copy_to_user",
            "test rax, rax",
            "jne 0x8004311",
            "pop rbx",
            "pop r12",
            "pop rbp",
            "ret",
            "lea rsi, [rdi + 0x50]",
            "mov rdi, qword [rdi + 0x38]",
            "call _copy_to_user",
            "test eax, eax",
            "je 0x80042d0",
            "cmp dword [0x08004308], 0",
            "jg 0x8004352",
            "mov eax, 0xfffffff2",
            "jmp 0x80042e5",
            "cmp dword [0x08004318], 0",
            "jle 0x800430a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x12b",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov eax, 0xfffffff2",
            "jmp 0x80042e5",
            "mov rbx, qword gs:[0]",
            "mov edx, dword [rbx + 0x318]",
            "lea r12, [rbx + 0x4b8]",
            "xor eax, eax",
            "mov r8d, 0x10c",
            "mov rcx, 0",
            "mov rdi, 0",
            "mov rsi, r12",
            "call printk",
            "cmp dword [0x0800438d], 0",
            "jle 0x800430a",
            "mov edx, dword [rbx + 0x318]",
            "mov r8d, 0x126",
            "mov rcx, 0",
            "mov rsi, r12",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800430a"
        ]
    },
    "unk.0x80043b7": {
        "function_address": "0x080043b7",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r12",
            "mov r12, rdx",
            "push rbx",
            "mov edx, dword [rdi + 0x4c]",
            "mov rbx, rdi",
            "mov eax, dword [rdi + 0x48]",
            "test edx, edx",
            "mov dword [rdi + 8], eax",
            "je 0x80042d0",
            "test byte [rdi + 6], 4",
            "jne 0x80042f0",
            "mov edx, 0x48",
            "mov rsi, rbx",
            "mov rdi, r12",
            "call _copy_to_user",
            "test rax, rax",
            "jne 0x8004311",
            "pop rbx",
            "pop r12",
            "pop rbp",
            "ret",
            "lea rsi, [rdi + 0x50]",
            "mov rdi, qword [rdi + 0x38]",
            "call _copy_to_user",
            "test eax, eax",
            "je 0x80042d0",
            "cmp dword [0x08004308], 0",
            "jg 0x8004352",
            "mov eax, 0xfffffff2",
            "jmp 0x80042e5",
            "cmp dword [0x08004318], 0",
            "jle 0x800430a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x12b",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov eax, 0xfffffff2",
            "jmp 0x80042e5",
            "mov rbx, qword gs:[0]",
            "mov edx, dword [rbx + 0x318]",
            "lea r12, [rbx + 0x4b8]",
            "xor eax, eax",
            "mov r8d, 0x10c",
            "mov rcx, 0",
            "mov rdi, 0",
            "mov rsi, r12",
            "call printk",
            "cmp dword [0x0800438d], 0",
            "jle 0x800430a",
            "mov edx, dword [rbx + 0x318]",
            "mov r8d, 0x126",
            "mov rcx, 0",
            "mov rsi, r12",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800430a"
        ]
    },
    "sym.cryptodev_hash_reset": {
        "function_address": "0x08003250",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push rbx",
            "sub rsp, 8",
            "mov rdi, qword [rdi + 0x20]",
            "mov rax, qword [rdi + 0x20]",
            "call qword [rax - 0x48]",
            "test eax, eax",
            "mov ebx, eax",
            "jne 0x8003273",
            "add rsp, 8",
            "mov eax, ebx",
            "pop rbx",
            "pop rbp",
            "ret",
            "cmp dword [0x0800327a], 0",
            "js 0x800326a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x199",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800326a"
        ]
    },
    "unk.0x80032ad": {
        "function_address": "0x080032ad",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push rbx",
            "sub rsp, 8",
            "mov rdi, qword [rdi + 0x20]",
            "mov rax, qword [rdi + 0x20]",
            "call qword [rax - 0x48]",
            "test eax, eax",
            "mov ebx, eax",
            "jne 0x8003273",
            "add rsp, 8",
            "mov eax, ebx",
            "pop rbx",
            "pop rbp",
            "ret",
            "cmp dword [0x0800327a], 0",
            "js 0x800326a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x199",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800326a"
        ]
    },
    "sym.cryptodev_hash_update": {
        "function_address": "0x080032b0",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push rbx",
            "mov rbx, rdi",
            "sub rsp, 8",
            "mov rax, qword [rdi + 0x18]",
            "mov dword [rax], 0",
            "mov rax, qword [rdi + 0x20]",
            "mov dword [rax + 0x30], edx",
            "mov qword [rax + 0x38], rsi",
            "mov qword [rax + 0x40], 0",
            "mov rdi, qword [rdi + 0x20]",
            "mov rax, qword [rdi + 0x20]",
            "call qword [rax - 0x40]",
            "cmp eax, 0xfffffff0",
            "mov edx, eax",
            "mov rbx, qword [rbx + 0x18]",
            "je 0x8003308",
            "xor eax, eax",
            "test edx, edx",
            "jne 0x8003300",
            "add rsp, 8",
            "pop rbx",
            "pop rbp",
            "ret",
            "cmp edx, 0xffffff8d",
            "movsxd rax, edx",
            "jne 0x80032f5",
            "mov rdi, rbx",
            "call wait_for_completion",
            "mov r9d, dword [rbx + 0x20]",
            "test r9d, r9d",
            "jne 0x8003322",
            "add rsp, 8",
            "xor eax, eax",
            "pop rbx",
            "pop rbp",
            "ret",
            "cmp dword [0x08003329], 0",
            "jns 0x8003330",
            "movsxd rax, r9d",
            "jmp 0x80032f5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x10f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r9d, dword [rbx + 0x20]",
            "jmp 0x800332b"
        ]
    },
    "unk.0x8003310": {
        "function_address": "0x08003310",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push rbx",
            "mov rbx, rdi",
            "sub rsp, 8",
            "mov rax, qword [rdi + 0x18]",
            "mov dword [rax], 0",
            "mov rax, qword [rdi + 0x20]",
            "mov dword [rax + 0x30], edx",
            "mov qword [rax + 0x38], rsi",
            "mov qword [rax + 0x40], 0",
            "mov rdi, qword [rdi + 0x20]",
            "mov rax, qword [rdi + 0x20]",
            "call qword [rax - 0x40]",
            "cmp eax, 0xfffffff0",
            "mov edx, eax",
            "mov rbx, qword [rbx + 0x18]",
            "je 0x8003308",
            "xor eax, eax",
            "test edx, edx",
            "jne 0x8003300",
            "add rsp, 8",
            "pop rbx",
            "pop rbp",
            "ret",
            "cmp edx, 0xffffff8d",
            "movsxd rax, edx",
            "jne 0x80032f5",
            "mov rdi, rbx",
            "call wait_for_completion",
            "mov r9d, dword [rbx + 0x20]",
            "test r9d, r9d",
            "jne 0x8003322",
            "add rsp, 8",
            "xor eax, eax",
            "pop rbx",
            "pop rbp",
            "ret",
            "cmp dword [0x08003329], 0",
            "jns 0x8003330",
            "movsxd rax, r9d",
            "jmp 0x80032f5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x10f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r9d, dword [rbx + 0x20]",
            "jmp 0x800332b"
        ]
    },
    "unk.0x8003361": {
        "function_address": "0x08003361",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push rbx",
            "mov rbx, rdi",
            "sub rsp, 8",
            "mov rax, qword [rdi + 0x18]",
            "mov dword [rax], 0",
            "mov rax, qword [rdi + 0x20]",
            "mov dword [rax + 0x30], edx",
            "mov qword [rax + 0x38], rsi",
            "mov qword [rax + 0x40], 0",
            "mov rdi, qword [rdi + 0x20]",
            "mov rax, qword [rdi + 0x20]",
            "call qword [rax - 0x40]",
            "cmp eax, 0xfffffff0",
            "mov edx, eax",
            "mov rbx, qword [rbx + 0x18]",
            "je 0x8003308",
            "xor eax, eax",
            "test edx, edx",
            "jne 0x8003300",
            "add rsp, 8",
            "pop rbx",
            "pop rbp",
            "ret",
            "cmp edx, 0xffffff8d",
            "movsxd rax, edx",
            "jne 0x80032f5",
            "mov rdi, rbx",
            "call wait_for_completion",
            "mov r9d, dword [rbx + 0x20]",
            "test r9d, r9d",
            "jne 0x8003322",
            "add rsp, 8",
            "xor eax, eax",
            "pop rbx",
            "pop rbp",
            "ret",
            "cmp dword [0x08003329], 0",
            "jns 0x8003330",
            "movsxd rax, r9d",
            "jmp 0x80032f5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x10f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r9d, dword [rbx + 0x20]",
            "jmp 0x800332b"
        ]
    },
    "sym.cryptodev_get_cipher_key": {
        "function_address": "0x08002880",
        "instructions": [
            "push rbp",
            "test edx, edx",
            "mov rbp, rsp",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "je 0x80028c6",
            "mov eax, dword [rsi + 0x18]",
            "test eax, eax",
            "je 0x80028c6",
            "mov word [rdi + 2], 1",
            "mov word [rdi], 8",
            "lea r12, [rdi + 8]",
            "mov eax, dword [rsi + 8]",
            "bswap eax",
            "mov dword [rdi + 4], eax",
            "mov edx, dword [rsi + 0x18]",
            "mov rdi, r12",
            "mov rsi, qword [rsi + 0x20]",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80028e2",
            "mov edi, dword [rbx + 0x18]",
            "add rdi, r12",
            "mov edx, dword [rbx + 8]",
            "mov rsi, qword [rbx + 0x10]",
            "call _copy_from_user",
            "cmp rax, 1",
            "sbb eax, eax",
            "not eax",
            "and eax, 0xfffffff2",
            "pop rbx",
            "pop r12",
            "pop rbp",
            "ret",
            "mov eax, 0xfffffff2",
            "jmp 0x80028dd"
        ]
    },
    "unk.0x80028bb": {
        "function_address": "0x080028bb",
        "instructions": [
            "push rbp",
            "test edx, edx",
            "mov rbp, rsp",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "je 0x80028c6",
            "mov eax, dword [rsi + 0x18]",
            "test eax, eax",
            "je 0x80028c6",
            "mov word [rdi + 2], 1",
            "mov word [rdi], 8",
            "lea r12, [rdi + 8]",
            "mov eax, dword [rsi + 8]",
            "bswap eax",
            "mov dword [rdi + 4], eax",
            "mov edx, dword [rsi + 0x18]",
            "mov rdi, r12",
            "mov rsi, qword [rsi + 0x20]",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80028e2",
            "mov edi, dword [rbx + 0x18]",
            "add rdi, r12",
            "mov edx, dword [rbx + 8]",
            "mov rsi, qword [rbx + 0x10]",
            "call _copy_from_user",
            "cmp rax, 1",
            "sbb eax, eax",
            "not eax",
            "and eax, 0xfffffff2",
            "pop rbx",
            "pop r12",
            "pop rbp",
            "ret",
            "mov eax, 0xfffffff2",
            "jmp 0x80028dd"
        ]
    },
    "unk.0x80028d2": {
        "function_address": "0x080028d2",
        "instructions": [
            "push rbp",
            "test edx, edx",
            "mov rbp, rsp",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "je 0x80028c6",
            "mov eax, dword [rsi + 0x18]",
            "test eax, eax",
            "je 0x80028c6",
            "mov word [rdi + 2], 1",
            "mov word [rdi], 8",
            "lea r12, [rdi + 8]",
            "mov eax, dword [rsi + 8]",
            "bswap eax",
            "mov dword [rdi + 4], eax",
            "mov edx, dword [rsi + 0x18]",
            "mov rdi, r12",
            "mov rsi, qword [rsi + 0x20]",
            "call _copy_from_user",
            "test rax, rax",
            "jne 0x80028e2",
            "mov edi, dword [rbx + 0x18]",
            "add rdi, r12",
            "mov edx, dword [rbx + 8]",
            "mov rsi, qword [rbx + 0x10]",
            "call _copy_from_user",
            "cmp rax, 1",
            "sbb eax, eax",
            "not eax",
            "and eax, 0xfffffff2",
            "pop rbx",
            "pop r12",
            "pop rbp",
            "ret",
            "mov eax, 0xfffffff2",
            "jmp 0x80028dd"
        ]
    },
    "sym.kcaop_from_user": {
        "function_address": "0x08004030",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x30",
            "mov qword [rbp - 0x18], r12",
            "mov r12, rsi",
            "mov rsi, rdx",
            "mov edx, 0x48",
            "mov qword [rbp - 0x20], rbx",
            "mov qword [rbp - 0x10], r13",
            "mov qword [rbp - 8], r14",
            "mov rbx, rdi",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "mov esi, dword [rbx]",
            "mov rdi, r12",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r12, rax",
            "je cryptodev_verbosity",
            "movzx ecx, word [rbx + 6]",
            "test cl, 0x30",
            "je 0x80040c0",
            "mov rax, qword [rbx + 0x20]",
            "cmp qword [rbx + 0x18], rax",
            "je 0x80040c0",
            "mov ecx, dword [0x08004093]",
            "test ecx, ecx",
            "jg current_task",
            "mov r13d, 0xffffffea",
            "lea rdi, [r12 + 0x10]",
            "call mutex_unlock",
            "mov eax, r13d",
            "mov rbx, qword [rbp - 0x20]",
            "mov r12, qword [rbp - 0x18]",
            "mov r13, qword [rbp - 0x10]",
            "mov r14, qword [rbp - 8]",
            "leave",
            "ret",
            "mov edx, dword [rbx + 0x30]",
            "test edx, edx",
            "jne 0x80040fc",
            "mov eax, dword [r12 + 0x88]",
            "test eax, eax",
            "jne 0x8004170",
            "mov eax, dword [r12 + 0x38]",
            "test eax, eax",
            "je 0x800426b",
            "mov eax, dword [r12 + 0x40]",
            "test eax, eax",
            "je 0x800426b",
            "mov rax, qword [r12 + 0x60]",
            "mov eax, dword [rax + 0x3c]",
            "mov dword [rbx + 0x30], eax",
            "mov rsi, qword [rbx + 0x38]",
            "test rsi, rsi",
            "je 0x8004180",
            "mov r8d, dword [r12 + 0x48]",
            "cmp word [rbx + 4], 1",
            "mov dword [rbx + 0x4c], r8d",
            "mov edi, dword [rbx + 8]",
            "je 0x8004132",
            "add edi, dword [rbx + 0x30]",
            "and ecx, 0x10",
            "je 0x8004132",
            "mov ecx, dword [r12 + 0x3c]",
            "mov edx, edi",
            "mov eax, edi",
            "sar edx, 0x1f",
            "idiv ecx",
            "sub ecx, edx",
            "add edi, ecx",
            "mov r14, qword gs:[0]",
            "mov dword [rbx + 0x48], edi",
            "mov qword [rbx + 0x60], r14",
            "test rsi, rsi",
            "mov rax, qword [r14 + 0x278]",
            "mov qword [rbx + 0x68], rax",
            "je 0x8004166",
            "lea rdi, [rbx + 0x50]",
            "mov edx, r8d",
            "call _copy_from_user",
            "test eax, eax",
            "jne cryptodev_verbosity",
            "xor r13d, r13d",
            "jmp 0x80040a1",
            "mov eax, dword [r12 + 0x8c]",
            "jmp 0x80040f9",
            "xor r8d, r8d",
            "jmp 0x800410a",
            "cmp dword [0x0800418c], 0",
            "mov r13d, 0xffffffea",
            "jle 0x80040ab",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xdc",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80040ab",
            "cmp dword [0x080041d8], 0",
            "mov r13d, 0xfffffff2",
            "jle 0x80040ab",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x118",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80040ab",
            "cmp dword [0x08004221], 0",
            "mov r13d, 0xfffffff2",
            "jle 0x80040a1",
            "mov rcx, qword [rbx + 0x38]",
            "mov edx, dword [r14 + 0x318]",
            "lea rsi, [r14 + 0x4b8]",
            "mov r9d, dword [rbx + 0x4c]",
            "mov dword [rsp], eax",
            "mov r8d, 0xf4",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rsp + 8], rcx",
            "mov rcx, 0",
            "call printk",
            "jmp 0x80040a1",
            "xor eax, eax",
            "jmp 0x80040f9",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xe2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r13d, 0xffffffea",
            "call printk",
            "jmp 0x80040a1"
        ]
    },
    "unk.0x800405b": {
        "function_address": "0x0800405b",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x30",
            "mov qword [rbp - 0x18], r12",
            "mov r12, rsi",
            "mov rsi, rdx",
            "mov edx, 0x48",
            "mov qword [rbp - 0x20], rbx",
            "mov qword [rbp - 0x10], r13",
            "mov qword [rbp - 8], r14",
            "mov rbx, rdi",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "mov esi, dword [rbx]",
            "mov rdi, r12",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r12, rax",
            "je cryptodev_verbosity",
            "movzx ecx, word [rbx + 6]",
            "test cl, 0x30",
            "je 0x80040c0",
            "mov rax, qword [rbx + 0x20]",
            "cmp qword [rbx + 0x18], rax",
            "je 0x80040c0",
            "mov ecx, dword [0x08004093]",
            "test ecx, ecx",
            "jg current_task",
            "mov r13d, 0xffffffea",
            "lea rdi, [r12 + 0x10]",
            "call mutex_unlock",
            "mov eax, r13d",
            "mov rbx, qword [rbp - 0x20]",
            "mov r12, qword [rbp - 0x18]",
            "mov r13, qword [rbp - 0x10]",
            "mov r14, qword [rbp - 8]",
            "leave",
            "ret",
            "mov edx, dword [rbx + 0x30]",
            "test edx, edx",
            "jne 0x80040fc",
            "mov eax, dword [r12 + 0x88]",
            "test eax, eax",
            "jne 0x8004170",
            "mov eax, dword [r12 + 0x38]",
            "test eax, eax",
            "je 0x800426b",
            "mov eax, dword [r12 + 0x40]",
            "test eax, eax",
            "je 0x800426b",
            "mov rax, qword [r12 + 0x60]",
            "mov eax, dword [rax + 0x3c]",
            "mov dword [rbx + 0x30], eax",
            "mov rsi, qword [rbx + 0x38]",
            "test rsi, rsi",
            "je 0x8004180",
            "mov r8d, dword [r12 + 0x48]",
            "cmp word [rbx + 4], 1",
            "mov dword [rbx + 0x4c], r8d",
            "mov edi, dword [rbx + 8]",
            "je 0x8004132",
            "add edi, dword [rbx + 0x30]",
            "and ecx, 0x10",
            "je 0x8004132",
            "mov ecx, dword [r12 + 0x3c]",
            "mov edx, edi",
            "mov eax, edi",
            "sar edx, 0x1f",
            "idiv ecx",
            "sub ecx, edx",
            "add edi, ecx",
            "mov r14, qword gs:[0]",
            "mov dword [rbx + 0x48], edi",
            "mov qword [rbx + 0x60], r14",
            "test rsi, rsi",
            "mov rax, qword [r14 + 0x278]",
            "mov qword [rbx + 0x68], rax",
            "je 0x8004166",
            "lea rdi, [rbx + 0x50]",
            "mov edx, r8d",
            "call _copy_from_user",
            "test eax, eax",
            "jne cryptodev_verbosity",
            "xor r13d, r13d",
            "jmp 0x80040a1",
            "mov eax, dword [r12 + 0x8c]",
            "jmp 0x80040f9",
            "xor r8d, r8d",
            "jmp 0x800410a",
            "cmp dword [0x0800418c], 0",
            "mov r13d, 0xffffffea",
            "jle 0x80040ab",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xdc",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80040ab",
            "cmp dword [0x080041d8], 0",
            "mov r13d, 0xfffffff2",
            "jle 0x80040ab",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x118",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80040ab",
            "cmp dword [0x08004221], 0",
            "mov r13d, 0xfffffff2",
            "jle 0x80040a1",
            "mov rcx, qword [rbx + 0x38]",
            "mov edx, dword [r14 + 0x318]",
            "lea rsi, [r14 + 0x4b8]",
            "mov r9d, dword [rbx + 0x4c]",
            "mov dword [rsp], eax",
            "mov r8d, 0xf4",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rsp + 8], rcx",
            "mov rcx, 0",
            "call printk",
            "jmp 0x80040a1",
            "xor eax, eax",
            "jmp 0x80040f9",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xe2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r13d, 0xffffffea",
            "call printk",
            "jmp 0x80040a1"
        ]
    },
    "unk.0x800406e": {
        "function_address": "0x0800406e",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x30",
            "mov qword [rbp - 0x18], r12",
            "mov r12, rsi",
            "mov rsi, rdx",
            "mov edx, 0x48",
            "mov qword [rbp - 0x20], rbx",
            "mov qword [rbp - 0x10], r13",
            "mov qword [rbp - 8], r14",
            "mov rbx, rdi",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "mov esi, dword [rbx]",
            "mov rdi, r12",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r12, rax",
            "je cryptodev_verbosity",
            "movzx ecx, word [rbx + 6]",
            "test cl, 0x30",
            "je 0x80040c0",
            "mov rax, qword [rbx + 0x20]",
            "cmp qword [rbx + 0x18], rax",
            "je 0x80040c0",
            "mov ecx, dword [0x08004093]",
            "test ecx, ecx",
            "jg current_task",
            "mov r13d, 0xffffffea",
            "lea rdi, [r12 + 0x10]",
            "call mutex_unlock",
            "mov eax, r13d",
            "mov rbx, qword [rbp - 0x20]",
            "mov r12, qword [rbp - 0x18]",
            "mov r13, qword [rbp - 0x10]",
            "mov r14, qword [rbp - 8]",
            "leave",
            "ret",
            "mov edx, dword [rbx + 0x30]",
            "test edx, edx",
            "jne 0x80040fc",
            "mov eax, dword [r12 + 0x88]",
            "test eax, eax",
            "jne 0x8004170",
            "mov eax, dword [r12 + 0x38]",
            "test eax, eax",
            "je 0x800426b",
            "mov eax, dword [r12 + 0x40]",
            "test eax, eax",
            "je 0x800426b",
            "mov rax, qword [r12 + 0x60]",
            "mov eax, dword [rax + 0x3c]",
            "mov dword [rbx + 0x30], eax",
            "mov rsi, qword [rbx + 0x38]",
            "test rsi, rsi",
            "je 0x8004180",
            "mov r8d, dword [r12 + 0x48]",
            "cmp word [rbx + 4], 1",
            "mov dword [rbx + 0x4c], r8d",
            "mov edi, dword [rbx + 8]",
            "je 0x8004132",
            "add edi, dword [rbx + 0x30]",
            "and ecx, 0x10",
            "je 0x8004132",
            "mov ecx, dword [r12 + 0x3c]",
            "mov edx, edi",
            "mov eax, edi",
            "sar edx, 0x1f",
            "idiv ecx",
            "sub ecx, edx",
            "add edi, ecx",
            "mov r14, qword gs:[0]",
            "mov dword [rbx + 0x48], edi",
            "mov qword [rbx + 0x60], r14",
            "test rsi, rsi",
            "mov rax, qword [r14 + 0x278]",
            "mov qword [rbx + 0x68], rax",
            "je 0x8004166",
            "lea rdi, [rbx + 0x50]",
            "mov edx, r8d",
            "call _copy_from_user",
            "test eax, eax",
            "jne cryptodev_verbosity",
            "xor r13d, r13d",
            "jmp 0x80040a1",
            "mov eax, dword [r12 + 0x8c]",
            "jmp 0x80040f9",
            "xor r8d, r8d",
            "jmp 0x800410a",
            "cmp dword [0x0800418c], 0",
            "mov r13d, 0xffffffea",
            "jle 0x80040ab",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xdc",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80040ab",
            "cmp dword [0x080041d8], 0",
            "mov r13d, 0xfffffff2",
            "jle 0x80040ab",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x118",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80040ab",
            "cmp dword [0x08004221], 0",
            "mov r13d, 0xfffffff2",
            "jle 0x80040a1",
            "mov rcx, qword [rbx + 0x38]",
            "mov edx, dword [r14 + 0x318]",
            "lea rsi, [r14 + 0x4b8]",
            "mov r9d, dword [rbx + 0x4c]",
            "mov dword [rsp], eax",
            "mov r8d, 0xf4",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rsp + 8], rcx",
            "mov rcx, 0",
            "call printk",
            "jmp 0x80040a1",
            "xor eax, eax",
            "jmp 0x80040f9",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xe2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r13d, 0xffffffea",
            "call printk",
            "jmp 0x80040a1"
        ]
    },
    "unk.0x80040ab": {
        "function_address": "0x080040ab",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x30",
            "mov qword [rbp - 0x18], r12",
            "mov r12, rsi",
            "mov rsi, rdx",
            "mov edx, 0x48",
            "mov qword [rbp - 0x20], rbx",
            "mov qword [rbp - 0x10], r13",
            "mov qword [rbp - 8], r14",
            "mov rbx, rdi",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "mov esi, dword [rbx]",
            "mov rdi, r12",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r12, rax",
            "je cryptodev_verbosity",
            "movzx ecx, word [rbx + 6]",
            "test cl, 0x30",
            "je 0x80040c0",
            "mov rax, qword [rbx + 0x20]",
            "cmp qword [rbx + 0x18], rax",
            "je 0x80040c0",
            "mov ecx, dword [0x08004093]",
            "test ecx, ecx",
            "jg current_task",
            "mov r13d, 0xffffffea",
            "lea rdi, [r12 + 0x10]",
            "call mutex_unlock",
            "mov eax, r13d",
            "mov rbx, qword [rbp - 0x20]",
            "mov r12, qword [rbp - 0x18]",
            "mov r13, qword [rbp - 0x10]",
            "mov r14, qword [rbp - 8]",
            "leave",
            "ret",
            "mov edx, dword [rbx + 0x30]",
            "test edx, edx",
            "jne 0x80040fc",
            "mov eax, dword [r12 + 0x88]",
            "test eax, eax",
            "jne 0x8004170",
            "mov eax, dword [r12 + 0x38]",
            "test eax, eax",
            "je 0x800426b",
            "mov eax, dword [r12 + 0x40]",
            "test eax, eax",
            "je 0x800426b",
            "mov rax, qword [r12 + 0x60]",
            "mov eax, dword [rax + 0x3c]",
            "mov dword [rbx + 0x30], eax",
            "mov rsi, qword [rbx + 0x38]",
            "test rsi, rsi",
            "je 0x8004180",
            "mov r8d, dword [r12 + 0x48]",
            "cmp word [rbx + 4], 1",
            "mov dword [rbx + 0x4c], r8d",
            "mov edi, dword [rbx + 8]",
            "je 0x8004132",
            "add edi, dword [rbx + 0x30]",
            "and ecx, 0x10",
            "je 0x8004132",
            "mov ecx, dword [r12 + 0x3c]",
            "mov edx, edi",
            "mov eax, edi",
            "sar edx, 0x1f",
            "idiv ecx",
            "sub ecx, edx",
            "add edi, ecx",
            "mov r14, qword gs:[0]",
            "mov dword [rbx + 0x48], edi",
            "mov qword [rbx + 0x60], r14",
            "test rsi, rsi",
            "mov rax, qword [r14 + 0x278]",
            "mov qword [rbx + 0x68], rax",
            "je 0x8004166",
            "lea rdi, [rbx + 0x50]",
            "mov edx, r8d",
            "call _copy_from_user",
            "test eax, eax",
            "jne cryptodev_verbosity",
            "xor r13d, r13d",
            "jmp 0x80040a1",
            "mov eax, dword [r12 + 0x8c]",
            "jmp 0x80040f9",
            "xor r8d, r8d",
            "jmp 0x800410a",
            "cmp dword [0x0800418c], 0",
            "mov r13d, 0xffffffea",
            "jle 0x80040ab",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xdc",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80040ab",
            "cmp dword [0x080041d8], 0",
            "mov r13d, 0xfffffff2",
            "jle 0x80040ab",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x118",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80040ab",
            "cmp dword [0x08004221], 0",
            "mov r13d, 0xfffffff2",
            "jle 0x80040a1",
            "mov rcx, qword [rbx + 0x38]",
            "mov edx, dword [r14 + 0x318]",
            "lea rsi, [r14 + 0x4b8]",
            "mov r9d, dword [rbx + 0x4c]",
            "mov dword [rsp], eax",
            "mov r8d, 0xf4",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rsp + 8], rcx",
            "mov rcx, 0",
            "call printk",
            "jmp 0x80040a1",
            "xor eax, eax",
            "jmp 0x80040f9",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xe2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r13d, 0xffffffea",
            "call printk",
            "jmp 0x80040a1"
        ]
    },
    "unk.0x800415e": {
        "function_address": "0x0800415e",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x30",
            "mov qword [rbp - 0x18], r12",
            "mov r12, rsi",
            "mov rsi, rdx",
            "mov edx, 0x48",
            "mov qword [rbp - 0x20], rbx",
            "mov qword [rbp - 0x10], r13",
            "mov qword [rbp - 8], r14",
            "mov rbx, rdi",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "mov esi, dword [rbx]",
            "mov rdi, r12",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r12, rax",
            "je cryptodev_verbosity",
            "movzx ecx, word [rbx + 6]",
            "test cl, 0x30",
            "je 0x80040c0",
            "mov rax, qword [rbx + 0x20]",
            "cmp qword [rbx + 0x18], rax",
            "je 0x80040c0",
            "mov ecx, dword [0x08004093]",
            "test ecx, ecx",
            "jg current_task",
            "mov r13d, 0xffffffea",
            "lea rdi, [r12 + 0x10]",
            "call mutex_unlock",
            "mov eax, r13d",
            "mov rbx, qword [rbp - 0x20]",
            "mov r12, qword [rbp - 0x18]",
            "mov r13, qword [rbp - 0x10]",
            "mov r14, qword [rbp - 8]",
            "leave",
            "ret",
            "mov edx, dword [rbx + 0x30]",
            "test edx, edx",
            "jne 0x80040fc",
            "mov eax, dword [r12 + 0x88]",
            "test eax, eax",
            "jne 0x8004170",
            "mov eax, dword [r12 + 0x38]",
            "test eax, eax",
            "je 0x800426b",
            "mov eax, dword [r12 + 0x40]",
            "test eax, eax",
            "je 0x800426b",
            "mov rax, qword [r12 + 0x60]",
            "mov eax, dword [rax + 0x3c]",
            "mov dword [rbx + 0x30], eax",
            "mov rsi, qword [rbx + 0x38]",
            "test rsi, rsi",
            "je 0x8004180",
            "mov r8d, dword [r12 + 0x48]",
            "cmp word [rbx + 4], 1",
            "mov dword [rbx + 0x4c], r8d",
            "mov edi, dword [rbx + 8]",
            "je 0x8004132",
            "add edi, dword [rbx + 0x30]",
            "and ecx, 0x10",
            "je 0x8004132",
            "mov ecx, dword [r12 + 0x3c]",
            "mov edx, edi",
            "mov eax, edi",
            "sar edx, 0x1f",
            "idiv ecx",
            "sub ecx, edx",
            "add edi, ecx",
            "mov r14, qword gs:[0]",
            "mov dword [rbx + 0x48], edi",
            "mov qword [rbx + 0x60], r14",
            "test rsi, rsi",
            "mov rax, qword [r14 + 0x278]",
            "mov qword [rbx + 0x68], rax",
            "je 0x8004166",
            "lea rdi, [rbx + 0x50]",
            "mov edx, r8d",
            "call _copy_from_user",
            "test eax, eax",
            "jne cryptodev_verbosity",
            "xor r13d, r13d",
            "jmp 0x80040a1",
            "mov eax, dword [r12 + 0x8c]",
            "jmp 0x80040f9",
            "xor r8d, r8d",
            "jmp 0x800410a",
            "cmp dword [0x0800418c], 0",
            "mov r13d, 0xffffffea",
            "jle 0x80040ab",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xdc",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80040ab",
            "cmp dword [0x080041d8], 0",
            "mov r13d, 0xfffffff2",
            "jle 0x80040ab",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x118",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80040ab",
            "cmp dword [0x08004221], 0",
            "mov r13d, 0xfffffff2",
            "jle 0x80040a1",
            "mov rcx, qword [rbx + 0x38]",
            "mov edx, dword [r14 + 0x318]",
            "lea rsi, [r14 + 0x4b8]",
            "mov r9d, dword [rbx + 0x4c]",
            "mov dword [rsp], eax",
            "mov r8d, 0xf4",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rsp + 8], rcx",
            "mov rcx, 0",
            "call printk",
            "jmp 0x80040a1",
            "xor eax, eax",
            "jmp 0x80040f9",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xe2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r13d, 0xffffffea",
            "call printk",
            "jmp 0x80040a1"
        ]
    },
    "unk.0x80041cc": {
        "function_address": "0x080041cc",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x30",
            "mov qword [rbp - 0x18], r12",
            "mov r12, rsi",
            "mov rsi, rdx",
            "mov edx, 0x48",
            "mov qword [rbp - 0x20], rbx",
            "mov qword [rbp - 0x10], r13",
            "mov qword [rbp - 8], r14",
            "mov rbx, rdi",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "mov esi, dword [rbx]",
            "mov rdi, r12",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r12, rax",
            "je cryptodev_verbosity",
            "movzx ecx, word [rbx + 6]",
            "test cl, 0x30",
            "je 0x80040c0",
            "mov rax, qword [rbx + 0x20]",
            "cmp qword [rbx + 0x18], rax",
            "je 0x80040c0",
            "mov ecx, dword [0x08004093]",
            "test ecx, ecx",
            "jg current_task",
            "mov r13d, 0xffffffea",
            "lea rdi, [r12 + 0x10]",
            "call mutex_unlock",
            "mov eax, r13d",
            "mov rbx, qword [rbp - 0x20]",
            "mov r12, qword [rbp - 0x18]",
            "mov r13, qword [rbp - 0x10]",
            "mov r14, qword [rbp - 8]",
            "leave",
            "ret",
            "mov edx, dword [rbx + 0x30]",
            "test edx, edx",
            "jne 0x80040fc",
            "mov eax, dword [r12 + 0x88]",
            "test eax, eax",
            "jne 0x8004170",
            "mov eax, dword [r12 + 0x38]",
            "test eax, eax",
            "je 0x800426b",
            "mov eax, dword [r12 + 0x40]",
            "test eax, eax",
            "je 0x800426b",
            "mov rax, qword [r12 + 0x60]",
            "mov eax, dword [rax + 0x3c]",
            "mov dword [rbx + 0x30], eax",
            "mov rsi, qword [rbx + 0x38]",
            "test rsi, rsi",
            "je 0x8004180",
            "mov r8d, dword [r12 + 0x48]",
            "cmp word [rbx + 4], 1",
            "mov dword [rbx + 0x4c], r8d",
            "mov edi, dword [rbx + 8]",
            "je 0x8004132",
            "add edi, dword [rbx + 0x30]",
            "and ecx, 0x10",
            "je 0x8004132",
            "mov ecx, dword [r12 + 0x3c]",
            "mov edx, edi",
            "mov eax, edi",
            "sar edx, 0x1f",
            "idiv ecx",
            "sub ecx, edx",
            "add edi, ecx",
            "mov r14, qword gs:[0]",
            "mov dword [rbx + 0x48], edi",
            "mov qword [rbx + 0x60], r14",
            "test rsi, rsi",
            "mov rax, qword [r14 + 0x278]",
            "mov qword [rbx + 0x68], rax",
            "je 0x8004166",
            "lea rdi, [rbx + 0x50]",
            "mov edx, r8d",
            "call _copy_from_user",
            "test eax, eax",
            "jne cryptodev_verbosity",
            "xor r13d, r13d",
            "jmp 0x80040a1",
            "mov eax, dword [r12 + 0x8c]",
            "jmp 0x80040f9",
            "xor r8d, r8d",
            "jmp 0x800410a",
            "cmp dword [0x0800418c], 0",
            "mov r13d, 0xffffffea",
            "jle 0x80040ab",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xdc",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80040ab",
            "cmp dword [0x080041d8], 0",
            "mov r13d, 0xfffffff2",
            "jle 0x80040ab",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x118",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80040ab",
            "cmp dword [0x08004221], 0",
            "mov r13d, 0xfffffff2",
            "jle 0x80040a1",
            "mov rcx, qword [rbx + 0x38]",
            "mov edx, dword [r14 + 0x318]",
            "lea rsi, [r14 + 0x4b8]",
            "mov r9d, dword [rbx + 0x4c]",
            "mov dword [rsp], eax",
            "mov r8d, 0xf4",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rsp + 8], rcx",
            "mov rcx, 0",
            "call printk",
            "jmp 0x80040a1",
            "xor eax, eax",
            "jmp 0x80040f9",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xe2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r13d, 0xffffffea",
            "call printk",
            "jmp 0x80040a1"
        ]
    },
    "unk.0x8004215": {
        "function_address": "0x08004215",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x30",
            "mov qword [rbp - 0x18], r12",
            "mov r12, rsi",
            "mov rsi, rdx",
            "mov edx, 0x48",
            "mov qword [rbp - 0x20], rbx",
            "mov qword [rbp - 0x10], r13",
            "mov qword [rbp - 8], r14",
            "mov rbx, rdi",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "mov esi, dword [rbx]",
            "mov rdi, r12",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r12, rax",
            "je cryptodev_verbosity",
            "movzx ecx, word [rbx + 6]",
            "test cl, 0x30",
            "je 0x80040c0",
            "mov rax, qword [rbx + 0x20]",
            "cmp qword [rbx + 0x18], rax",
            "je 0x80040c0",
            "mov ecx, dword [0x08004093]",
            "test ecx, ecx",
            "jg current_task",
            "mov r13d, 0xffffffea",
            "lea rdi, [r12 + 0x10]",
            "call mutex_unlock",
            "mov eax, r13d",
            "mov rbx, qword [rbp - 0x20]",
            "mov r12, qword [rbp - 0x18]",
            "mov r13, qword [rbp - 0x10]",
            "mov r14, qword [rbp - 8]",
            "leave",
            "ret",
            "mov edx, dword [rbx + 0x30]",
            "test edx, edx",
            "jne 0x80040fc",
            "mov eax, dword [r12 + 0x88]",
            "test eax, eax",
            "jne 0x8004170",
            "mov eax, dword [r12 + 0x38]",
            "test eax, eax",
            "je 0x800426b",
            "mov eax, dword [r12 + 0x40]",
            "test eax, eax",
            "je 0x800426b",
            "mov rax, qword [r12 + 0x60]",
            "mov eax, dword [rax + 0x3c]",
            "mov dword [rbx + 0x30], eax",
            "mov rsi, qword [rbx + 0x38]",
            "test rsi, rsi",
            "je 0x8004180",
            "mov r8d, dword [r12 + 0x48]",
            "cmp word [rbx + 4], 1",
            "mov dword [rbx + 0x4c], r8d",
            "mov edi, dword [rbx + 8]",
            "je 0x8004132",
            "add edi, dword [rbx + 0x30]",
            "and ecx, 0x10",
            "je 0x8004132",
            "mov ecx, dword [r12 + 0x3c]",
            "mov edx, edi",
            "mov eax, edi",
            "sar edx, 0x1f",
            "idiv ecx",
            "sub ecx, edx",
            "add edi, ecx",
            "mov r14, qword gs:[0]",
            "mov dword [rbx + 0x48], edi",
            "mov qword [rbx + 0x60], r14",
            "test rsi, rsi",
            "mov rax, qword [r14 + 0x278]",
            "mov qword [rbx + 0x68], rax",
            "je 0x8004166",
            "lea rdi, [rbx + 0x50]",
            "mov edx, r8d",
            "call _copy_from_user",
            "test eax, eax",
            "jne cryptodev_verbosity",
            "xor r13d, r13d",
            "jmp 0x80040a1",
            "mov eax, dword [r12 + 0x8c]",
            "jmp 0x80040f9",
            "xor r8d, r8d",
            "jmp 0x800410a",
            "cmp dword [0x0800418c], 0",
            "mov r13d, 0xffffffea",
            "jle 0x80040ab",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xdc",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80040ab",
            "cmp dword [0x080041d8], 0",
            "mov r13d, 0xfffffff2",
            "jle 0x80040ab",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x118",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80040ab",
            "cmp dword [0x08004221], 0",
            "mov r13d, 0xfffffff2",
            "jle 0x80040a1",
            "mov rcx, qword [rbx + 0x38]",
            "mov edx, dword [r14 + 0x318]",
            "lea rsi, [r14 + 0x4b8]",
            "mov r9d, dword [rbx + 0x4c]",
            "mov dword [rsp], eax",
            "mov r8d, 0xf4",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rsp + 8], rcx",
            "mov rcx, 0",
            "call printk",
            "jmp 0x80040a1",
            "xor eax, eax",
            "jmp 0x80040f9",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xe2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r13d, 0xffffffea",
            "call printk",
            "jmp 0x80040a1"
        ]
    },
    "unk.0x8004266": {
        "function_address": "0x08004266",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x30",
            "mov qword [rbp - 0x18], r12",
            "mov r12, rsi",
            "mov rsi, rdx",
            "mov edx, 0x48",
            "mov qword [rbp - 0x20], rbx",
            "mov qword [rbp - 0x10], r13",
            "mov qword [rbp - 8], r14",
            "mov rbx, rdi",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "mov esi, dword [rbx]",
            "mov rdi, r12",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r12, rax",
            "je cryptodev_verbosity",
            "movzx ecx, word [rbx + 6]",
            "test cl, 0x30",
            "je 0x80040c0",
            "mov rax, qword [rbx + 0x20]",
            "cmp qword [rbx + 0x18], rax",
            "je 0x80040c0",
            "mov ecx, dword [0x08004093]",
            "test ecx, ecx",
            "jg current_task",
            "mov r13d, 0xffffffea",
            "lea rdi, [r12 + 0x10]",
            "call mutex_unlock",
            "mov eax, r13d",
            "mov rbx, qword [rbp - 0x20]",
            "mov r12, qword [rbp - 0x18]",
            "mov r13, qword [rbp - 0x10]",
            "mov r14, qword [rbp - 8]",
            "leave",
            "ret",
            "mov edx, dword [rbx + 0x30]",
            "test edx, edx",
            "jne 0x80040fc",
            "mov eax, dword [r12 + 0x88]",
            "test eax, eax",
            "jne 0x8004170",
            "mov eax, dword [r12 + 0x38]",
            "test eax, eax",
            "je 0x800426b",
            "mov eax, dword [r12 + 0x40]",
            "test eax, eax",
            "je 0x800426b",
            "mov rax, qword [r12 + 0x60]",
            "mov eax, dword [rax + 0x3c]",
            "mov dword [rbx + 0x30], eax",
            "mov rsi, qword [rbx + 0x38]",
            "test rsi, rsi",
            "je 0x8004180",
            "mov r8d, dword [r12 + 0x48]",
            "cmp word [rbx + 4], 1",
            "mov dword [rbx + 0x4c], r8d",
            "mov edi, dword [rbx + 8]",
            "je 0x8004132",
            "add edi, dword [rbx + 0x30]",
            "and ecx, 0x10",
            "je 0x8004132",
            "mov ecx, dword [r12 + 0x3c]",
            "mov edx, edi",
            "mov eax, edi",
            "sar edx, 0x1f",
            "idiv ecx",
            "sub ecx, edx",
            "add edi, ecx",
            "mov r14, qword gs:[0]",
            "mov dword [rbx + 0x48], edi",
            "mov qword [rbx + 0x60], r14",
            "test rsi, rsi",
            "mov rax, qword [r14 + 0x278]",
            "mov qword [rbx + 0x68], rax",
            "je 0x8004166",
            "lea rdi, [rbx + 0x50]",
            "mov edx, r8d",
            "call _copy_from_user",
            "test eax, eax",
            "jne cryptodev_verbosity",
            "xor r13d, r13d",
            "jmp 0x80040a1",
            "mov eax, dword [r12 + 0x8c]",
            "jmp 0x80040f9",
            "xor r8d, r8d",
            "jmp 0x800410a",
            "cmp dword [0x0800418c], 0",
            "mov r13d, 0xffffffea",
            "jle 0x80040ab",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xdc",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80040ab",
            "cmp dword [0x080041d8], 0",
            "mov r13d, 0xfffffff2",
            "jle 0x80040ab",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x118",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80040ab",
            "cmp dword [0x08004221], 0",
            "mov r13d, 0xfffffff2",
            "jle 0x80040a1",
            "mov rcx, qword [rbx + 0x38]",
            "mov edx, dword [r14 + 0x318]",
            "lea rsi, [r14 + 0x4b8]",
            "mov r9d, dword [rbx + 0x4c]",
            "mov dword [rsp], eax",
            "mov r8d, 0xf4",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rsp + 8], rcx",
            "mov rcx, 0",
            "call printk",
            "jmp 0x80040a1",
            "xor eax, eax",
            "jmp 0x80040f9",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xe2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r13d, 0xffffffea",
            "call printk",
            "jmp 0x80040a1"
        ]
    },
    "unk.0x80042a9": {
        "function_address": "0x080042a9",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x30",
            "mov qword [rbp - 0x18], r12",
            "mov r12, rsi",
            "mov rsi, rdx",
            "mov edx, 0x48",
            "mov qword [rbp - 0x20], rbx",
            "mov qword [rbp - 0x10], r13",
            "mov qword [rbp - 8], r14",
            "mov rbx, rdi",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "mov esi, dword [rbx]",
            "mov rdi, r12",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r12, rax",
            "je cryptodev_verbosity",
            "movzx ecx, word [rbx + 6]",
            "test cl, 0x30",
            "je 0x80040c0",
            "mov rax, qword [rbx + 0x20]",
            "cmp qword [rbx + 0x18], rax",
            "je 0x80040c0",
            "mov ecx, dword [0x08004093]",
            "test ecx, ecx",
            "jg current_task",
            "mov r13d, 0xffffffea",
            "lea rdi, [r12 + 0x10]",
            "call mutex_unlock",
            "mov eax, r13d",
            "mov rbx, qword [rbp - 0x20]",
            "mov r12, qword [rbp - 0x18]",
            "mov r13, qword [rbp - 0x10]",
            "mov r14, qword [rbp - 8]",
            "leave",
            "ret",
            "mov edx, dword [rbx + 0x30]",
            "test edx, edx",
            "jne 0x80040fc",
            "mov eax, dword [r12 + 0x88]",
            "test eax, eax",
            "jne 0x8004170",
            "mov eax, dword [r12 + 0x38]",
            "test eax, eax",
            "je 0x800426b",
            "mov eax, dword [r12 + 0x40]",
            "test eax, eax",
            "je 0x800426b",
            "mov rax, qword [r12 + 0x60]",
            "mov eax, dword [rax + 0x3c]",
            "mov dword [rbx + 0x30], eax",
            "mov rsi, qword [rbx + 0x38]",
            "test rsi, rsi",
            "je 0x8004180",
            "mov r8d, dword [r12 + 0x48]",
            "cmp word [rbx + 4], 1",
            "mov dword [rbx + 0x4c], r8d",
            "mov edi, dword [rbx + 8]",
            "je 0x8004132",
            "add edi, dword [rbx + 0x30]",
            "and ecx, 0x10",
            "je 0x8004132",
            "mov ecx, dword [r12 + 0x3c]",
            "mov edx, edi",
            "mov eax, edi",
            "sar edx, 0x1f",
            "idiv ecx",
            "sub ecx, edx",
            "add edi, ecx",
            "mov r14, qword gs:[0]",
            "mov dword [rbx + 0x48], edi",
            "mov qword [rbx + 0x60], r14",
            "test rsi, rsi",
            "mov rax, qword [r14 + 0x278]",
            "mov qword [rbx + 0x68], rax",
            "je 0x8004166",
            "lea rdi, [rbx + 0x50]",
            "mov edx, r8d",
            "call _copy_from_user",
            "test eax, eax",
            "jne cryptodev_verbosity",
            "xor r13d, r13d",
            "jmp 0x80040a1",
            "mov eax, dword [r12 + 0x8c]",
            "jmp 0x80040f9",
            "xor r8d, r8d",
            "jmp 0x800410a",
            "cmp dword [0x0800418c], 0",
            "mov r13d, 0xffffffea",
            "jle 0x80040ab",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xdc",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80040ab",
            "cmp dword [0x080041d8], 0",
            "mov r13d, 0xfffffff2",
            "jle 0x80040ab",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x118",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80040ab",
            "cmp dword [0x08004221], 0",
            "mov r13d, 0xfffffff2",
            "jle 0x80040a1",
            "mov rcx, qword [rbx + 0x38]",
            "mov edx, dword [r14 + 0x318]",
            "lea rsi, [r14 + 0x4b8]",
            "mov r9d, dword [rbx + 0x4c]",
            "mov dword [rsp], eax",
            "mov r8d, 0xf4",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rsp + 8], rcx",
            "mov rcx, 0",
            "call printk",
            "jmp 0x80040a1",
            "xor eax, eax",
            "jmp 0x80040f9",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xe2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r13d, 0xffffffea",
            "call printk",
            "jmp 0x80040a1"
        ]
    },
    "sym.cryptodev_hash_deinit": {
        "function_address": "0x08003200",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push rbx",
            "mov rbx, rdi",
            "sub rsp, 8",
            "mov r9d, dword [rdi]",
            "test r9d, r9d",
            "je 0x8003243",
            "mov rdi, qword [rdi + 0x20]",
            "test rdi, rdi",
            "je 0x8003222",
            "call kzfree",
            "mov rdi, qword [rbx + 0x18]",
            "call kfree",
            "mov rdi, qword [rbx + 0x10]",
            "test rdi, rdi",
            "je 0x800323d",
            "lea rsi, [rdi + 0x48]",
            "call crypto_destroy_tfm",
            "mov dword [rbx], 0",
            "add rsp, 8",
            "pop rbx",
            "pop rbp",
            "ret"
        ]
    },
    "unk.0x8003222": {
        "function_address": "0x08003222",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push rbx",
            "mov rbx, rdi",
            "sub rsp, 8",
            "mov r9d, dword [rdi]",
            "test r9d, r9d",
            "je 0x8003243",
            "mov rdi, qword [rdi + 0x20]",
            "test rdi, rdi",
            "je 0x8003222",
            "call kzfree",
            "mov rdi, qword [rbx + 0x18]",
            "call kfree",
            "mov rdi, qword [rbx + 0x10]",
            "test rdi, rdi",
            "je 0x800323d",
            "lea rsi, [rdi + 0x48]",
            "call crypto_destroy_tfm",
            "mov dword [rbx], 0",
            "add rsp, 8",
            "pop rbx",
            "pop rbp",
            "ret"
        ]
    },
    "unk.0x800322b": {
        "function_address": "0x0800322b",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push rbx",
            "mov rbx, rdi",
            "sub rsp, 8",
            "mov r9d, dword [rdi]",
            "test r9d, r9d",
            "je 0x8003243",
            "mov rdi, qword [rdi + 0x20]",
            "test rdi, rdi",
            "je 0x8003222",
            "call kzfree",
            "mov rdi, qword [rbx + 0x18]",
            "call kfree",
            "mov rdi, qword [rbx + 0x10]",
            "test rdi, rdi",
            "je 0x800323d",
            "lea rsi, [rdi + 0x48]",
            "call crypto_destroy_tfm",
            "mov dword [rbx], 0",
            "add rsp, 8",
            "pop rbx",
            "pop rbp",
            "ret"
        ]
    },
    "unk.0x800323d": {
        "function_address": "0x0800323d",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push rbx",
            "mov rbx, rdi",
            "sub rsp, 8",
            "mov r9d, dword [rdi]",
            "test r9d, r9d",
            "je 0x8003243",
            "mov rdi, qword [rdi + 0x20]",
            "test rdi, rdi",
            "je 0x8003222",
            "call kzfree",
            "mov rdi, qword [rbx + 0x18]",
            "call kfree",
            "mov rdi, qword [rbx + 0x10]",
            "test rdi, rdi",
            "je 0x800323d",
            "lea rsi, [rdi + 0x48]",
            "call crypto_destroy_tfm",
            "mov dword [rbx], 0",
            "add rsp, 8",
            "pop rbx",
            "pop rbp",
            "ret"
        ]
    },
    "sym.cryptodev_cipher_decrypt": {
        "function_address": "0x08002e60",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push rbx",
            "mov rbx, rdi",
            "sub rsp, 8",
            "mov rax, qword [rdi + 0x38]",
            "mov dword [rax], 0",
            "mov r8d, dword [rdi + 8]",
            "test r8d, r8d",
            "je 0x8002eb8",
            "mov rax, qword [rdi + 0x30]",
            "mov qword [rax + 0x50], rdx",
            "lea rdx, [rdi + 0x40]",
            "mov qword [rax + 0x48], rsi",
            "mov dword [rax + 0x34], ecx",
            "mov qword [rax + 0x38], rdx",
            "mov rdi, qword [rdi + 0x30]",
            "mov rax, 0xffffffffffffffea",
            "mov rdx, qword [rdi + 0x20]",
            "mov ecx, dword [rdx + 0x3c]",
            "cmp dword [rdi + 0x34], ecx",
            "jae 0x8002f18",
            "add rsp, 8",
            "pop rbx",
            "pop rbp",
            "ret",
            "mov rax, qword [rdi + 0x20]",
            "mov qword [rax + 0x48], rdx",
            "lea rdx, [rdi + 0x40]",
            "mov qword [rax + 0x40], rsi",
            "mov dword [rax + 0x30], ecx",
            "mov qword [rax + 0x38], rdx",
            "mov rdi, qword [rdi + 0x20]",
            "mov rax, qword [rdi + 0x20]",
            "call qword [rax + 0x18]",
            "mov edx, eax",
            "cmp edx, 0xfffffff0",
            "mov rbx, qword [rbx + 0x38]",
            "je 0x8002ef8",
            "xor eax, eax",
            "test edx, edx",
            "je 0x8002ead",
            "cmp edx, 0xffffff8d",
            "je 0x8002ef8",
            "movsxd rax, edx",
            "jmp 0x8002ead",
            "mov rdi, rbx",
            "call wait_for_completion",
            "mov r9d, dword [rbx + 0x20]",
            "test r9d, r9d",
            "jne 0x8002f1f",
            "add rsp, 8",
            "xor eax, eax",
            "pop rbx",
            "pop rbp",
            "ret",
            "call qword [rdx + 0x18]",
            "mov edx, eax",
            "jmp 0x8002edc",
            "cmp dword [0x08002f26], 0",
            "jns 0x8002f2d",
            "movsxd rax, r9d",
            "jmp 0x8002ead",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x10f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r9d, dword [rbx + 0x20]",
            "jmp 0x8002f28"
        ]
    },
    "unk.0x8002f00": {
        "function_address": "0x08002f00",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push rbx",
            "mov rbx, rdi",
            "sub rsp, 8",
            "mov rax, qword [rdi + 0x38]",
            "mov dword [rax], 0",
            "mov r8d, dword [rdi + 8]",
            "test r8d, r8d",
            "je 0x8002eb8",
            "mov rax, qword [rdi + 0x30]",
            "mov qword [rax + 0x50], rdx",
            "lea rdx, [rdi + 0x40]",
            "mov qword [rax + 0x48], rsi",
            "mov dword [rax + 0x34], ecx",
            "mov qword [rax + 0x38], rdx",
            "mov rdi, qword [rdi + 0x30]",
            "mov rax, 0xffffffffffffffea",
            "mov rdx, qword [rdi + 0x20]",
            "mov ecx, dword [rdx + 0x3c]",
            "cmp dword [rdi + 0x34], ecx",
            "jae 0x8002f18",
            "add rsp, 8",
            "pop rbx",
            "pop rbp",
            "ret",
            "mov rax, qword [rdi + 0x20]",
            "mov qword [rax + 0x48], rdx",
            "lea rdx, [rdi + 0x40]",
            "mov qword [rax + 0x40], rsi",
            "mov dword [rax + 0x30], ecx",
            "mov qword [rax + 0x38], rdx",
            "mov rdi, qword [rdi + 0x20]",
            "mov rax, qword [rdi + 0x20]",
            "call qword [rax + 0x18]",
            "mov edx, eax",
            "cmp edx, 0xfffffff0",
            "mov rbx, qword [rbx + 0x38]",
            "je 0x8002ef8",
            "xor eax, eax",
            "test edx, edx",
            "je 0x8002ead",
            "cmp edx, 0xffffff8d",
            "je 0x8002ef8",
            "movsxd rax, edx",
            "jmp 0x8002ead",
            "mov rdi, rbx",
            "call wait_for_completion",
            "mov r9d, dword [rbx + 0x20]",
            "test r9d, r9d",
            "jne 0x8002f1f",
            "add rsp, 8",
            "xor eax, eax",
            "pop rbx",
            "pop rbp",
            "ret",
            "call qword [rdx + 0x18]",
            "mov edx, eax",
            "jmp 0x8002edc",
            "cmp dword [0x08002f26], 0",
            "jns 0x8002f2d",
            "movsxd rax, r9d",
            "jmp 0x8002ead",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x10f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r9d, dword [rbx + 0x20]",
            "jmp 0x8002f28"
        ]
    },
    "unk.0x8002f5e": {
        "function_address": "0x08002f5e",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push rbx",
            "mov rbx, rdi",
            "sub rsp, 8",
            "mov rax, qword [rdi + 0x38]",
            "mov dword [rax], 0",
            "mov r8d, dword [rdi + 8]",
            "test r8d, r8d",
            "je 0x8002eb8",
            "mov rax, qword [rdi + 0x30]",
            "mov qword [rax + 0x50], rdx",
            "lea rdx, [rdi + 0x40]",
            "mov qword [rax + 0x48], rsi",
            "mov dword [rax + 0x34], ecx",
            "mov qword [rax + 0x38], rdx",
            "mov rdi, qword [rdi + 0x30]",
            "mov rax, 0xffffffffffffffea",
            "mov rdx, qword [rdi + 0x20]",
            "mov ecx, dword [rdx + 0x3c]",
            "cmp dword [rdi + 0x34], ecx",
            "jae 0x8002f18",
            "add rsp, 8",
            "pop rbx",
            "pop rbp",
            "ret",
            "mov rax, qword [rdi + 0x20]",
            "mov qword [rax + 0x48], rdx",
            "lea rdx, [rdi + 0x40]",
            "mov qword [rax + 0x40], rsi",
            "mov dword [rax + 0x30], ecx",
            "mov qword [rax + 0x38], rdx",
            "mov rdi, qword [rdi + 0x20]",
            "mov rax, qword [rdi + 0x20]",
            "call qword [rax + 0x18]",
            "mov edx, eax",
            "cmp edx, 0xfffffff0",
            "mov rbx, qword [rbx + 0x38]",
            "je 0x8002ef8",
            "xor eax, eax",
            "test edx, edx",
            "je 0x8002ead",
            "cmp edx, 0xffffff8d",
            "je 0x8002ef8",
            "movsxd rax, edx",
            "jmp 0x8002ead",
            "mov rdi, rbx",
            "call wait_for_completion",
            "mov r9d, dword [rbx + 0x20]",
            "test r9d, r9d",
            "jne 0x8002f1f",
            "add rsp, 8",
            "xor eax, eax",
            "pop rbx",
            "pop rbp",
            "ret",
            "call qword [rdx + 0x18]",
            "mov edx, eax",
            "jmp 0x8002edc",
            "cmp dword [0x08002f26], 0",
            "jns 0x8002f2d",
            "movsxd rax, r9d",
            "jmp 0x8002ead",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x10f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r9d, dword [rbx + 0x20]",
            "jmp 0x8002f28"
        ]
    },
    "sym.crypto_get_session_by_sid": {
        "function_address": "0x080014c0",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rdi",
            "sub rsp, 8",
            "test rdi, rdi",
            "je 0x8001528",
            "lea r13, [rdi + 0x10]",
            "mov r12d, esi",
            "mov rdi, r13",
            "call mutex_lock",
            "mov rax, qword [rbx]",
            "cmp rbx, rax",
            "jne 0x80014f8",
            "jmp 0x8001510",
            "mov rax, qword [rax]",
            "cmp rbx, rax",
            "je 0x8001510",
            "cmp dword [rax + 0xb0], r12d",
            "jne 0x80014f0",
            "lea rdi, [rax + 0x10]",
            "mov rbx, rax",
            "call mutex_lock",
            "jmp 0x8001512",
            "xor ebx, ebx",
            "mov rdi, r13",
            "call mutex_unlock",
            "add rsp, 8",
            "mov rax, rbx",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop rbp",
            "ret",
            "xor ebx, ebx",
            "jmp 0x800151a"
        ]
    },
    "unk.0x80014e4": {
        "function_address": "0x080014e4",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rdi",
            "sub rsp, 8",
            "test rdi, rdi",
            "je 0x8001528",
            "lea r13, [rdi + 0x10]",
            "mov r12d, esi",
            "mov rdi, r13",
            "call mutex_lock",
            "mov rax, qword [rbx]",
            "cmp rbx, rax",
            "jne 0x80014f8",
            "jmp 0x8001510",
            "mov rax, qword [rax]",
            "cmp rbx, rax",
            "je 0x8001510",
            "cmp dword [rax + 0xb0], r12d",
            "jne 0x80014f0",
            "lea rdi, [rax + 0x10]",
            "mov rbx, rax",
            "call mutex_lock",
            "jmp 0x8001512",
            "xor ebx, ebx",
            "mov rdi, r13",
            "call mutex_unlock",
            "add rsp, 8",
            "mov rax, rbx",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop rbp",
            "ret",
            "xor ebx, ebx",
            "jmp 0x800151a"
        ]
    },
    "unk.0x800150d": {
        "function_address": "0x0800150d",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rdi",
            "sub rsp, 8",
            "test rdi, rdi",
            "je 0x8001528",
            "lea r13, [rdi + 0x10]",
            "mov r12d, esi",
            "mov rdi, r13",
            "call mutex_lock",
            "mov rax, qword [rbx]",
            "cmp rbx, rax",
            "jne 0x80014f8",
            "jmp 0x8001510",
            "mov rax, qword [rax]",
            "cmp rbx, rax",
            "je 0x8001510",
            "cmp dword [rax + 0xb0], r12d",
            "jne 0x80014f0",
            "lea rdi, [rax + 0x10]",
            "mov rbx, rax",
            "call mutex_lock",
            "jmp 0x8001512",
            "xor ebx, ebx",
            "mov rdi, r13",
            "call mutex_unlock",
            "add rsp, 8",
            "mov rax, rbx",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop rbp",
            "ret",
            "xor ebx, ebx",
            "jmp 0x800151a"
        ]
    },
    "unk.0x800151a": {
        "function_address": "0x0800151a",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rdi",
            "sub rsp, 8",
            "test rdi, rdi",
            "je 0x8001528",
            "lea r13, [rdi + 0x10]",
            "mov r12d, esi",
            "mov rdi, r13",
            "call mutex_lock",
            "mov rax, qword [rbx]",
            "cmp rbx, rax",
            "jne 0x80014f8",
            "jmp 0x8001510",
            "mov rax, qword [rax]",
            "cmp rbx, rax",
            "je 0x8001510",
            "cmp dword [rax + 0xb0], r12d",
            "jne 0x80014f0",
            "lea rdi, [rax + 0x10]",
            "mov rbx, rax",
            "call mutex_lock",
            "jmp 0x8001512",
            "xor ebx, ebx",
            "mov rdi, r13",
            "call mutex_unlock",
            "add rsp, 8",
            "mov rax, rbx",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop rbp",
            "ret",
            "xor ebx, ebx",
            "jmp 0x800151a"
        ]
    },
    "sym.cryptodev_hash_init": {
        "function_address": "0x08002f70",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x40",
            "mov qword [rbp - 0x18], r13",
            "mov r13, rsi",
            "mov qword [rbp - 0x28], rbx",
            "mov qword [rbp - 0x20], r12",
            "mov rbx, rdi",
            "xor esi, esi",
            "mov r12d, edx",
            "mov rdi, r13",
            "xor edx, edx",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r14, r8",
            "mov r15, rcx",
            "call crypto_alloc_ahash",
            "cmp rax, 0xfffffffffffff000",
            "mov qword [rbx + 0x10], rax",
            "ja cryptodev_verbosity",
            "test r12d, r12d",
            "jne 0x8003090",
            "mov rdx, qword [rax + 0x98]",
            "mov esi, 0x80d0",
            "mov edx, dword [rdx - 8]",
            "mov dword [rbx + 4], edx",
            "mov rax, qword [rax + 0x98]",
            "mov eax, dword [rax + 0x2c]",
            "mov dword [rbx + 8], eax",
            "mov rdi, qword [0x08002fe6]",
            "call kmem_cache_alloc",
            "test rax, rax",
            "mov qword [rbx + 0x18], rax",
            "je 0x80030f1",
            "lea rdi, [rax + 8]",
            "mov dword [rax], 0",
            "mov rdx, 0",
            "mov rsi, 0",
            "call __init_waitqueue_head",
            "mov r12, qword [rbx + 0x10]",
            "mov esi, 0xd0",
            "mov edi, dword [r12 + 0x40]",
            "add rdi, 0x50",
            "call __kmalloc",
            "test rax, rax",
            "je 0x80030af",
            "add r12, 0x48",
            "mov qword [rax + 0x20], r12",
            "mov rdx, qword [rbx + 0x18]",
            "mov qword [rbx + 0x20], rax",
            "mov qword [rax + 0x10], 0",
            "mov dword [rax + 0x28], 0x400",
            "mov qword [rax + 0x18], rdx",
            "mov rdi, qword [rbx + 0x20]",
            "mov rax, qword [rdi + 0x20]",
            "call qword [rax - 0x48]",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov dword [rbx], 1",
            "mov eax, r12d",
            "mov rbx, qword [rbp - 0x28]",
            "mov r12, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov edx, r14d",
            "mov rsi, r15",
            "mov rdi, rax",
            "call crypto_ahash_setkey",
            "test eax, eax",
            "jne cryptodev_verbosity",
            "mov rax, qword [rbx + 0x10]",
            "jmp 0x8002fc0",
            "cmp dword [0x080030b6], 0",
            "mov qword [rbx + 0x20], 0",
            "js 0x80030f1",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x16d",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r12d, 0xfffffff4",
            "mov rdi, qword [rbx + 0x18]",
            "call kfree",
            "mov rdi, qword [rbx + 0x10]",
            "lea rsi, [rdi + 0x48]",
            "call crypto_destroy_tfm",
            "jmp 0x8003070",
            "cmp dword [0x08003119], 0",
            "mov r12d, 0xffffffea",
            "jle 0x8003070",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9, r13",
            "mov r8d, 0x151",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003070",
            "cmp dword [0x08003165], 0",
            "jns 0x80031c6",
            "mov rdi, qword [rbx + 0x20]",
            "call kzfree",
            "jmp 0x80030f7",
            "cmp dword [0x08003179], 0",
            "mov r12d, 0xffffffea",
            "jle kfree",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "shl r14, 3",
            "mov qword [rsp], r14",
            "mov r9, r13",
            "mov r8d, 0x15a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80030f7",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x178",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003167"
        ]
    },
    "unk.0x8002fa7": {
        "function_address": "0x08002fa7",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x40",
            "mov qword [rbp - 0x18], r13",
            "mov r13, rsi",
            "mov qword [rbp - 0x28], rbx",
            "mov qword [rbp - 0x20], r12",
            "mov rbx, rdi",
            "xor esi, esi",
            "mov r12d, edx",
            "mov rdi, r13",
            "xor edx, edx",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r14, r8",
            "mov r15, rcx",
            "call crypto_alloc_ahash",
            "cmp rax, 0xfffffffffffff000",
            "mov qword [rbx + 0x10], rax",
            "ja cryptodev_verbosity",
            "test r12d, r12d",
            "jne 0x8003090",
            "mov rdx, qword [rax + 0x98]",
            "mov esi, 0x80d0",
            "mov edx, dword [rdx - 8]",
            "mov dword [rbx + 4], edx",
            "mov rax, qword [rax + 0x98]",
            "mov eax, dword [rax + 0x2c]",
            "mov dword [rbx + 8], eax",
            "mov rdi, qword [0x08002fe6]",
            "call kmem_cache_alloc",
            "test rax, rax",
            "mov qword [rbx + 0x18], rax",
            "je 0x80030f1",
            "lea rdi, [rax + 8]",
            "mov dword [rax], 0",
            "mov rdx, 0",
            "mov rsi, 0",
            "call __init_waitqueue_head",
            "mov r12, qword [rbx + 0x10]",
            "mov esi, 0xd0",
            "mov edi, dword [r12 + 0x40]",
            "add rdi, 0x50",
            "call __kmalloc",
            "test rax, rax",
            "je 0x80030af",
            "add r12, 0x48",
            "mov qword [rax + 0x20], r12",
            "mov rdx, qword [rbx + 0x18]",
            "mov qword [rbx + 0x20], rax",
            "mov qword [rax + 0x10], 0",
            "mov dword [rax + 0x28], 0x400",
            "mov qword [rax + 0x18], rdx",
            "mov rdi, qword [rbx + 0x20]",
            "mov rax, qword [rdi + 0x20]",
            "call qword [rax - 0x48]",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov dword [rbx], 1",
            "mov eax, r12d",
            "mov rbx, qword [rbp - 0x28]",
            "mov r12, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov edx, r14d",
            "mov rsi, r15",
            "mov rdi, rax",
            "call crypto_ahash_setkey",
            "test eax, eax",
            "jne cryptodev_verbosity",
            "mov rax, qword [rbx + 0x10]",
            "jmp 0x8002fc0",
            "cmp dword [0x080030b6], 0",
            "mov qword [rbx + 0x20], 0",
            "js 0x80030f1",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x16d",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r12d, 0xfffffff4",
            "mov rdi, qword [rbx + 0x18]",
            "call kfree",
            "mov rdi, qword [rbx + 0x10]",
            "lea rsi, [rdi + 0x48]",
            "call crypto_destroy_tfm",
            "jmp 0x8003070",
            "cmp dword [0x08003119], 0",
            "mov r12d, 0xffffffea",
            "jle 0x8003070",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9, r13",
            "mov r8d, 0x151",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003070",
            "cmp dword [0x08003165], 0",
            "jns 0x80031c6",
            "mov rdi, qword [rbx + 0x20]",
            "call kzfree",
            "jmp 0x80030f7",
            "cmp dword [0x08003179], 0",
            "mov r12d, 0xffffffea",
            "jle kfree",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "shl r14, 3",
            "mov qword [rsp], r14",
            "mov r9, r13",
            "mov r8d, 0x15a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80030f7",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x178",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003167"
        ]
    },
    "unk.0x8002feb": {
        "function_address": "0x08002feb",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x40",
            "mov qword [rbp - 0x18], r13",
            "mov r13, rsi",
            "mov qword [rbp - 0x28], rbx",
            "mov qword [rbp - 0x20], r12",
            "mov rbx, rdi",
            "xor esi, esi",
            "mov r12d, edx",
            "mov rdi, r13",
            "xor edx, edx",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r14, r8",
            "mov r15, rcx",
            "call crypto_alloc_ahash",
            "cmp rax, 0xfffffffffffff000",
            "mov qword [rbx + 0x10], rax",
            "ja cryptodev_verbosity",
            "test r12d, r12d",
            "jne 0x8003090",
            "mov rdx, qword [rax + 0x98]",
            "mov esi, 0x80d0",
            "mov edx, dword [rdx - 8]",
            "mov dword [rbx + 4], edx",
            "mov rax, qword [rax + 0x98]",
            "mov eax, dword [rax + 0x2c]",
            "mov dword [rbx + 8], eax",
            "mov rdi, qword [0x08002fe6]",
            "call kmem_cache_alloc",
            "test rax, rax",
            "mov qword [rbx + 0x18], rax",
            "je 0x80030f1",
            "lea rdi, [rax + 8]",
            "mov dword [rax], 0",
            "mov rdx, 0",
            "mov rsi, 0",
            "call __init_waitqueue_head",
            "mov r12, qword [rbx + 0x10]",
            "mov esi, 0xd0",
            "mov edi, dword [r12 + 0x40]",
            "add rdi, 0x50",
            "call __kmalloc",
            "test rax, rax",
            "je 0x80030af",
            "add r12, 0x48",
            "mov qword [rax + 0x20], r12",
            "mov rdx, qword [rbx + 0x18]",
            "mov qword [rbx + 0x20], rax",
            "mov qword [rax + 0x10], 0",
            "mov dword [rax + 0x28], 0x400",
            "mov qword [rax + 0x18], rdx",
            "mov rdi, qword [rbx + 0x20]",
            "mov rax, qword [rdi + 0x20]",
            "call qword [rax - 0x48]",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov dword [rbx], 1",
            "mov eax, r12d",
            "mov rbx, qword [rbp - 0x28]",
            "mov r12, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov edx, r14d",
            "mov rsi, r15",
            "mov rdi, rax",
            "call crypto_ahash_setkey",
            "test eax, eax",
            "jne cryptodev_verbosity",
            "mov rax, qword [rbx + 0x10]",
            "jmp 0x8002fc0",
            "cmp dword [0x080030b6], 0",
            "mov qword [rbx + 0x20], 0",
            "js 0x80030f1",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x16d",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r12d, 0xfffffff4",
            "mov rdi, qword [rbx + 0x18]",
            "call kfree",
            "mov rdi, qword [rbx + 0x10]",
            "lea rsi, [rdi + 0x48]",
            "call crypto_destroy_tfm",
            "jmp 0x8003070",
            "cmp dword [0x08003119], 0",
            "mov r12d, 0xffffffea",
            "jle 0x8003070",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9, r13",
            "mov r8d, 0x151",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003070",
            "cmp dword [0x08003165], 0",
            "jns 0x80031c6",
            "mov rdi, qword [rbx + 0x20]",
            "call kzfree",
            "jmp 0x80030f7",
            "cmp dword [0x08003179], 0",
            "mov r12d, 0xffffffea",
            "jle kfree",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "shl r14, 3",
            "mov qword [rsp], r14",
            "mov r9, r13",
            "mov r8d, 0x15a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80030f7",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x178",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003167"
        ]
    },
    "unk.0x8003015": {
        "function_address": "0x08003015",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x40",
            "mov qword [rbp - 0x18], r13",
            "mov r13, rsi",
            "mov qword [rbp - 0x28], rbx",
            "mov qword [rbp - 0x20], r12",
            "mov rbx, rdi",
            "xor esi, esi",
            "mov r12d, edx",
            "mov rdi, r13",
            "xor edx, edx",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r14, r8",
            "mov r15, rcx",
            "call crypto_alloc_ahash",
            "cmp rax, 0xfffffffffffff000",
            "mov qword [rbx + 0x10], rax",
            "ja cryptodev_verbosity",
            "test r12d, r12d",
            "jne 0x8003090",
            "mov rdx, qword [rax + 0x98]",
            "mov esi, 0x80d0",
            "mov edx, dword [rdx - 8]",
            "mov dword [rbx + 4], edx",
            "mov rax, qword [rax + 0x98]",
            "mov eax, dword [rax + 0x2c]",
            "mov dword [rbx + 8], eax",
            "mov rdi, qword [0x08002fe6]",
            "call kmem_cache_alloc",
            "test rax, rax",
            "mov qword [rbx + 0x18], rax",
            "je 0x80030f1",
            "lea rdi, [rax + 8]",
            "mov dword [rax], 0",
            "mov rdx, 0",
            "mov rsi, 0",
            "call __init_waitqueue_head",
            "mov r12, qword [rbx + 0x10]",
            "mov esi, 0xd0",
            "mov edi, dword [r12 + 0x40]",
            "add rdi, 0x50",
            "call __kmalloc",
            "test rax, rax",
            "je 0x80030af",
            "add r12, 0x48",
            "mov qword [rax + 0x20], r12",
            "mov rdx, qword [rbx + 0x18]",
            "mov qword [rbx + 0x20], rax",
            "mov qword [rax + 0x10], 0",
            "mov dword [rax + 0x28], 0x400",
            "mov qword [rax + 0x18], rdx",
            "mov rdi, qword [rbx + 0x20]",
            "mov rax, qword [rdi + 0x20]",
            "call qword [rax - 0x48]",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov dword [rbx], 1",
            "mov eax, r12d",
            "mov rbx, qword [rbp - 0x28]",
            "mov r12, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov edx, r14d",
            "mov rsi, r15",
            "mov rdi, rax",
            "call crypto_ahash_setkey",
            "test eax, eax",
            "jne cryptodev_verbosity",
            "mov rax, qword [rbx + 0x10]",
            "jmp 0x8002fc0",
            "cmp dword [0x080030b6], 0",
            "mov qword [rbx + 0x20], 0",
            "js 0x80030f1",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x16d",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r12d, 0xfffffff4",
            "mov rdi, qword [rbx + 0x18]",
            "call kfree",
            "mov rdi, qword [rbx + 0x10]",
            "lea rsi, [rdi + 0x48]",
            "call crypto_destroy_tfm",
            "jmp 0x8003070",
            "cmp dword [0x08003119], 0",
            "mov r12d, 0xffffffea",
            "jle 0x8003070",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9, r13",
            "mov r8d, 0x151",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003070",
            "cmp dword [0x08003165], 0",
            "jns 0x80031c6",
            "mov rdi, qword [rbx + 0x20]",
            "call kzfree",
            "jmp 0x80030f7",
            "cmp dword [0x08003179], 0",
            "mov r12d, 0xffffffea",
            "jle kfree",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "shl r14, 3",
            "mov qword [rsp], r14",
            "mov r9, r13",
            "mov r8d, 0x15a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80030f7",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x178",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003167"
        ]
    },
    "unk.0x800302c": {
        "function_address": "0x0800302c",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x40",
            "mov qword [rbp - 0x18], r13",
            "mov r13, rsi",
            "mov qword [rbp - 0x28], rbx",
            "mov qword [rbp - 0x20], r12",
            "mov rbx, rdi",
            "xor esi, esi",
            "mov r12d, edx",
            "mov rdi, r13",
            "xor edx, edx",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r14, r8",
            "mov r15, rcx",
            "call crypto_alloc_ahash",
            "cmp rax, 0xfffffffffffff000",
            "mov qword [rbx + 0x10], rax",
            "ja cryptodev_verbosity",
            "test r12d, r12d",
            "jne 0x8003090",
            "mov rdx, qword [rax + 0x98]",
            "mov esi, 0x80d0",
            "mov edx, dword [rdx - 8]",
            "mov dword [rbx + 4], edx",
            "mov rax, qword [rax + 0x98]",
            "mov eax, dword [rax + 0x2c]",
            "mov dword [rbx + 8], eax",
            "mov rdi, qword [0x08002fe6]",
            "call kmem_cache_alloc",
            "test rax, rax",
            "mov qword [rbx + 0x18], rax",
            "je 0x80030f1",
            "lea rdi, [rax + 8]",
            "mov dword [rax], 0",
            "mov rdx, 0",
            "mov rsi, 0",
            "call __init_waitqueue_head",
            "mov r12, qword [rbx + 0x10]",
            "mov esi, 0xd0",
            "mov edi, dword [r12 + 0x40]",
            "add rdi, 0x50",
            "call __kmalloc",
            "test rax, rax",
            "je 0x80030af",
            "add r12, 0x48",
            "mov qword [rax + 0x20], r12",
            "mov rdx, qword [rbx + 0x18]",
            "mov qword [rbx + 0x20], rax",
            "mov qword [rax + 0x10], 0",
            "mov dword [rax + 0x28], 0x400",
            "mov qword [rax + 0x18], rdx",
            "mov rdi, qword [rbx + 0x20]",
            "mov rax, qword [rdi + 0x20]",
            "call qword [rax - 0x48]",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov dword [rbx], 1",
            "mov eax, r12d",
            "mov rbx, qword [rbp - 0x28]",
            "mov r12, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov edx, r14d",
            "mov rsi, r15",
            "mov rdi, rax",
            "call crypto_ahash_setkey",
            "test eax, eax",
            "jne cryptodev_verbosity",
            "mov rax, qword [rbx + 0x10]",
            "jmp 0x8002fc0",
            "cmp dword [0x080030b6], 0",
            "mov qword [rbx + 0x20], 0",
            "js 0x80030f1",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x16d",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r12d, 0xfffffff4",
            "mov rdi, qword [rbx + 0x18]",
            "call kfree",
            "mov rdi, qword [rbx + 0x10]",
            "lea rsi, [rdi + 0x48]",
            "call crypto_destroy_tfm",
            "jmp 0x8003070",
            "cmp dword [0x08003119], 0",
            "mov r12d, 0xffffffea",
            "jle 0x8003070",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9, r13",
            "mov r8d, 0x151",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003070",
            "cmp dword [0x08003165], 0",
            "jns 0x80031c6",
            "mov rdi, qword [rbx + 0x20]",
            "call kzfree",
            "jmp 0x80030f7",
            "cmp dword [0x08003179], 0",
            "mov r12d, 0xffffffea",
            "jle kfree",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "shl r14, 3",
            "mov qword [rsp], r14",
            "mov r9, r13",
            "mov r8d, 0x15a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80030f7",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x178",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003167"
        ]
    },
    "unk.0x800309e": {
        "function_address": "0x0800309e",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x40",
            "mov qword [rbp - 0x18], r13",
            "mov r13, rsi",
            "mov qword [rbp - 0x28], rbx",
            "mov qword [rbp - 0x20], r12",
            "mov rbx, rdi",
            "xor esi, esi",
            "mov r12d, edx",
            "mov rdi, r13",
            "xor edx, edx",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r14, r8",
            "mov r15, rcx",
            "call crypto_alloc_ahash",
            "cmp rax, 0xfffffffffffff000",
            "mov qword [rbx + 0x10], rax",
            "ja cryptodev_verbosity",
            "test r12d, r12d",
            "jne 0x8003090",
            "mov rdx, qword [rax + 0x98]",
            "mov esi, 0x80d0",
            "mov edx, dword [rdx - 8]",
            "mov dword [rbx + 4], edx",
            "mov rax, qword [rax + 0x98]",
            "mov eax, dword [rax + 0x2c]",
            "mov dword [rbx + 8], eax",
            "mov rdi, qword [0x08002fe6]",
            "call kmem_cache_alloc",
            "test rax, rax",
            "mov qword [rbx + 0x18], rax",
            "je 0x80030f1",
            "lea rdi, [rax + 8]",
            "mov dword [rax], 0",
            "mov rdx, 0",
            "mov rsi, 0",
            "call __init_waitqueue_head",
            "mov r12, qword [rbx + 0x10]",
            "mov esi, 0xd0",
            "mov edi, dword [r12 + 0x40]",
            "add rdi, 0x50",
            "call __kmalloc",
            "test rax, rax",
            "je 0x80030af",
            "add r12, 0x48",
            "mov qword [rax + 0x20], r12",
            "mov rdx, qword [rbx + 0x18]",
            "mov qword [rbx + 0x20], rax",
            "mov qword [rax + 0x10], 0",
            "mov dword [rax + 0x28], 0x400",
            "mov qword [rax + 0x18], rdx",
            "mov rdi, qword [rbx + 0x20]",
            "mov rax, qword [rdi + 0x20]",
            "call qword [rax - 0x48]",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov dword [rbx], 1",
            "mov eax, r12d",
            "mov rbx, qword [rbp - 0x28]",
            "mov r12, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov edx, r14d",
            "mov rsi, r15",
            "mov rdi, rax",
            "call crypto_ahash_setkey",
            "test eax, eax",
            "jne cryptodev_verbosity",
            "mov rax, qword [rbx + 0x10]",
            "jmp 0x8002fc0",
            "cmp dword [0x080030b6], 0",
            "mov qword [rbx + 0x20], 0",
            "js 0x80030f1",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x16d",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r12d, 0xfffffff4",
            "mov rdi, qword [rbx + 0x18]",
            "call kfree",
            "mov rdi, qword [rbx + 0x10]",
            "lea rsi, [rdi + 0x48]",
            "call crypto_destroy_tfm",
            "jmp 0x8003070",
            "cmp dword [0x08003119], 0",
            "mov r12d, 0xffffffea",
            "jle 0x8003070",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9, r13",
            "mov r8d, 0x151",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003070",
            "cmp dword [0x08003165], 0",
            "jns 0x80031c6",
            "mov rdi, qword [rbx + 0x20]",
            "call kzfree",
            "jmp 0x80030f7",
            "cmp dword [0x08003179], 0",
            "mov r12d, 0xffffffea",
            "jle kfree",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "shl r14, 3",
            "mov qword [rsp], r14",
            "mov r9, r13",
            "mov r8d, 0x15a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80030f7",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x178",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003167"
        ]
    },
    "unk.0x80030f1": {
        "function_address": "0x080030f1",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x40",
            "mov qword [rbp - 0x18], r13",
            "mov r13, rsi",
            "mov qword [rbp - 0x28], rbx",
            "mov qword [rbp - 0x20], r12",
            "mov rbx, rdi",
            "xor esi, esi",
            "mov r12d, edx",
            "mov rdi, r13",
            "xor edx, edx",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r14, r8",
            "mov r15, rcx",
            "call crypto_alloc_ahash",
            "cmp rax, 0xfffffffffffff000",
            "mov qword [rbx + 0x10], rax",
            "ja cryptodev_verbosity",
            "test r12d, r12d",
            "jne 0x8003090",
            "mov rdx, qword [rax + 0x98]",
            "mov esi, 0x80d0",
            "mov edx, dword [rdx - 8]",
            "mov dword [rbx + 4], edx",
            "mov rax, qword [rax + 0x98]",
            "mov eax, dword [rax + 0x2c]",
            "mov dword [rbx + 8], eax",
            "mov rdi, qword [0x08002fe6]",
            "call kmem_cache_alloc",
            "test rax, rax",
            "mov qword [rbx + 0x18], rax",
            "je 0x80030f1",
            "lea rdi, [rax + 8]",
            "mov dword [rax], 0",
            "mov rdx, 0",
            "mov rsi, 0",
            "call __init_waitqueue_head",
            "mov r12, qword [rbx + 0x10]",
            "mov esi, 0xd0",
            "mov edi, dword [r12 + 0x40]",
            "add rdi, 0x50",
            "call __kmalloc",
            "test rax, rax",
            "je 0x80030af",
            "add r12, 0x48",
            "mov qword [rax + 0x20], r12",
            "mov rdx, qword [rbx + 0x18]",
            "mov qword [rbx + 0x20], rax",
            "mov qword [rax + 0x10], 0",
            "mov dword [rax + 0x28], 0x400",
            "mov qword [rax + 0x18], rdx",
            "mov rdi, qword [rbx + 0x20]",
            "mov rax, qword [rdi + 0x20]",
            "call qword [rax - 0x48]",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov dword [rbx], 1",
            "mov eax, r12d",
            "mov rbx, qword [rbp - 0x28]",
            "mov r12, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov edx, r14d",
            "mov rsi, r15",
            "mov rdi, rax",
            "call crypto_ahash_setkey",
            "test eax, eax",
            "jne cryptodev_verbosity",
            "mov rax, qword [rbx + 0x10]",
            "jmp 0x8002fc0",
            "cmp dword [0x080030b6], 0",
            "mov qword [rbx + 0x20], 0",
            "js 0x80030f1",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x16d",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r12d, 0xfffffff4",
            "mov rdi, qword [rbx + 0x18]",
            "call kfree",
            "mov rdi, qword [rbx + 0x10]",
            "lea rsi, [rdi + 0x48]",
            "call crypto_destroy_tfm",
            "jmp 0x8003070",
            "cmp dword [0x08003119], 0",
            "mov r12d, 0xffffffea",
            "jle 0x8003070",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9, r13",
            "mov r8d, 0x151",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003070",
            "cmp dword [0x08003165], 0",
            "jns 0x80031c6",
            "mov rdi, qword [rbx + 0x20]",
            "call kzfree",
            "jmp 0x80030f7",
            "cmp dword [0x08003179], 0",
            "mov r12d, 0xffffffea",
            "jle kfree",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "shl r14, 3",
            "mov qword [rsp], r14",
            "mov r9, r13",
            "mov r8d, 0x15a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80030f7",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x178",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003167"
        ]
    },
    "unk.0x8003100": {
        "function_address": "0x08003100",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x40",
            "mov qword [rbp - 0x18], r13",
            "mov r13, rsi",
            "mov qword [rbp - 0x28], rbx",
            "mov qword [rbp - 0x20], r12",
            "mov rbx, rdi",
            "xor esi, esi",
            "mov r12d, edx",
            "mov rdi, r13",
            "xor edx, edx",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r14, r8",
            "mov r15, rcx",
            "call crypto_alloc_ahash",
            "cmp rax, 0xfffffffffffff000",
            "mov qword [rbx + 0x10], rax",
            "ja cryptodev_verbosity",
            "test r12d, r12d",
            "jne 0x8003090",
            "mov rdx, qword [rax + 0x98]",
            "mov esi, 0x80d0",
            "mov edx, dword [rdx - 8]",
            "mov dword [rbx + 4], edx",
            "mov rax, qword [rax + 0x98]",
            "mov eax, dword [rax + 0x2c]",
            "mov dword [rbx + 8], eax",
            "mov rdi, qword [0x08002fe6]",
            "call kmem_cache_alloc",
            "test rax, rax",
            "mov qword [rbx + 0x18], rax",
            "je 0x80030f1",
            "lea rdi, [rax + 8]",
            "mov dword [rax], 0",
            "mov rdx, 0",
            "mov rsi, 0",
            "call __init_waitqueue_head",
            "mov r12, qword [rbx + 0x10]",
            "mov esi, 0xd0",
            "mov edi, dword [r12 + 0x40]",
            "add rdi, 0x50",
            "call __kmalloc",
            "test rax, rax",
            "je 0x80030af",
            "add r12, 0x48",
            "mov qword [rax + 0x20], r12",
            "mov rdx, qword [rbx + 0x18]",
            "mov qword [rbx + 0x20], rax",
            "mov qword [rax + 0x10], 0",
            "mov dword [rax + 0x28], 0x400",
            "mov qword [rax + 0x18], rdx",
            "mov rdi, qword [rbx + 0x20]",
            "mov rax, qword [rdi + 0x20]",
            "call qword [rax - 0x48]",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov dword [rbx], 1",
            "mov eax, r12d",
            "mov rbx, qword [rbp - 0x28]",
            "mov r12, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov edx, r14d",
            "mov rsi, r15",
            "mov rdi, rax",
            "call crypto_ahash_setkey",
            "test eax, eax",
            "jne cryptodev_verbosity",
            "mov rax, qword [rbx + 0x10]",
            "jmp 0x8002fc0",
            "cmp dword [0x080030b6], 0",
            "mov qword [rbx + 0x20], 0",
            "js 0x80030f1",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x16d",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r12d, 0xfffffff4",
            "mov rdi, qword [rbx + 0x18]",
            "call kfree",
            "mov rdi, qword [rbx + 0x10]",
            "lea rsi, [rdi + 0x48]",
            "call crypto_destroy_tfm",
            "jmp 0x8003070",
            "cmp dword [0x08003119], 0",
            "mov r12d, 0xffffffea",
            "jle 0x8003070",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9, r13",
            "mov r8d, 0x151",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003070",
            "cmp dword [0x08003165], 0",
            "jns 0x80031c6",
            "mov rdi, qword [rbx + 0x20]",
            "call kzfree",
            "jmp 0x80030f7",
            "cmp dword [0x08003179], 0",
            "mov r12d, 0xffffffea",
            "jle kfree",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "shl r14, 3",
            "mov qword [rsp], r14",
            "mov r9, r13",
            "mov r8d, 0x15a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80030f7",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x178",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003167"
        ]
    },
    "unk.0x800310d": {
        "function_address": "0x0800310d",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x40",
            "mov qword [rbp - 0x18], r13",
            "mov r13, rsi",
            "mov qword [rbp - 0x28], rbx",
            "mov qword [rbp - 0x20], r12",
            "mov rbx, rdi",
            "xor esi, esi",
            "mov r12d, edx",
            "mov rdi, r13",
            "xor edx, edx",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r14, r8",
            "mov r15, rcx",
            "call crypto_alloc_ahash",
            "cmp rax, 0xfffffffffffff000",
            "mov qword [rbx + 0x10], rax",
            "ja cryptodev_verbosity",
            "test r12d, r12d",
            "jne 0x8003090",
            "mov rdx, qword [rax + 0x98]",
            "mov esi, 0x80d0",
            "mov edx, dword [rdx - 8]",
            "mov dword [rbx + 4], edx",
            "mov rax, qword [rax + 0x98]",
            "mov eax, dword [rax + 0x2c]",
            "mov dword [rbx + 8], eax",
            "mov rdi, qword [0x08002fe6]",
            "call kmem_cache_alloc",
            "test rax, rax",
            "mov qword [rbx + 0x18], rax",
            "je 0x80030f1",
            "lea rdi, [rax + 8]",
            "mov dword [rax], 0",
            "mov rdx, 0",
            "mov rsi, 0",
            "call __init_waitqueue_head",
            "mov r12, qword [rbx + 0x10]",
            "mov esi, 0xd0",
            "mov edi, dword [r12 + 0x40]",
            "add rdi, 0x50",
            "call __kmalloc",
            "test rax, rax",
            "je 0x80030af",
            "add r12, 0x48",
            "mov qword [rax + 0x20], r12",
            "mov rdx, qword [rbx + 0x18]",
            "mov qword [rbx + 0x20], rax",
            "mov qword [rax + 0x10], 0",
            "mov dword [rax + 0x28], 0x400",
            "mov qword [rax + 0x18], rdx",
            "mov rdi, qword [rbx + 0x20]",
            "mov rax, qword [rdi + 0x20]",
            "call qword [rax - 0x48]",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov dword [rbx], 1",
            "mov eax, r12d",
            "mov rbx, qword [rbp - 0x28]",
            "mov r12, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov edx, r14d",
            "mov rsi, r15",
            "mov rdi, rax",
            "call crypto_ahash_setkey",
            "test eax, eax",
            "jne cryptodev_verbosity",
            "mov rax, qword [rbx + 0x10]",
            "jmp 0x8002fc0",
            "cmp dword [0x080030b6], 0",
            "mov qword [rbx + 0x20], 0",
            "js 0x80030f1",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x16d",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r12d, 0xfffffff4",
            "mov rdi, qword [rbx + 0x18]",
            "call kfree",
            "mov rdi, qword [rbx + 0x10]",
            "lea rsi, [rdi + 0x48]",
            "call crypto_destroy_tfm",
            "jmp 0x8003070",
            "cmp dword [0x08003119], 0",
            "mov r12d, 0xffffffea",
            "jle 0x8003070",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9, r13",
            "mov r8d, 0x151",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003070",
            "cmp dword [0x08003165], 0",
            "jns 0x80031c6",
            "mov rdi, qword [rbx + 0x20]",
            "call kzfree",
            "jmp 0x80030f7",
            "cmp dword [0x08003179], 0",
            "mov r12d, 0xffffffea",
            "jle kfree",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "shl r14, 3",
            "mov qword [rsp], r14",
            "mov r9, r13",
            "mov r8d, 0x15a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80030f7",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x178",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003167"
        ]
    },
    "unk.0x8003159": {
        "function_address": "0x08003159",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x40",
            "mov qword [rbp - 0x18], r13",
            "mov r13, rsi",
            "mov qword [rbp - 0x28], rbx",
            "mov qword [rbp - 0x20], r12",
            "mov rbx, rdi",
            "xor esi, esi",
            "mov r12d, edx",
            "mov rdi, r13",
            "xor edx, edx",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r14, r8",
            "mov r15, rcx",
            "call crypto_alloc_ahash",
            "cmp rax, 0xfffffffffffff000",
            "mov qword [rbx + 0x10], rax",
            "ja cryptodev_verbosity",
            "test r12d, r12d",
            "jne 0x8003090",
            "mov rdx, qword [rax + 0x98]",
            "mov esi, 0x80d0",
            "mov edx, dword [rdx - 8]",
            "mov dword [rbx + 4], edx",
            "mov rax, qword [rax + 0x98]",
            "mov eax, dword [rax + 0x2c]",
            "mov dword [rbx + 8], eax",
            "mov rdi, qword [0x08002fe6]",
            "call kmem_cache_alloc",
            "test rax, rax",
            "mov qword [rbx + 0x18], rax",
            "je 0x80030f1",
            "lea rdi, [rax + 8]",
            "mov dword [rax], 0",
            "mov rdx, 0",
            "mov rsi, 0",
            "call __init_waitqueue_head",
            "mov r12, qword [rbx + 0x10]",
            "mov esi, 0xd0",
            "mov edi, dword [r12 + 0x40]",
            "add rdi, 0x50",
            "call __kmalloc",
            "test rax, rax",
            "je 0x80030af",
            "add r12, 0x48",
            "mov qword [rax + 0x20], r12",
            "mov rdx, qword [rbx + 0x18]",
            "mov qword [rbx + 0x20], rax",
            "mov qword [rax + 0x10], 0",
            "mov dword [rax + 0x28], 0x400",
            "mov qword [rax + 0x18], rdx",
            "mov rdi, qword [rbx + 0x20]",
            "mov rax, qword [rdi + 0x20]",
            "call qword [rax - 0x48]",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov dword [rbx], 1",
            "mov eax, r12d",
            "mov rbx, qword [rbp - 0x28]",
            "mov r12, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov edx, r14d",
            "mov rsi, r15",
            "mov rdi, rax",
            "call crypto_ahash_setkey",
            "test eax, eax",
            "jne cryptodev_verbosity",
            "mov rax, qword [rbx + 0x10]",
            "jmp 0x8002fc0",
            "cmp dword [0x080030b6], 0",
            "mov qword [rbx + 0x20], 0",
            "js 0x80030f1",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x16d",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r12d, 0xfffffff4",
            "mov rdi, qword [rbx + 0x18]",
            "call kfree",
            "mov rdi, qword [rbx + 0x10]",
            "lea rsi, [rdi + 0x48]",
            "call crypto_destroy_tfm",
            "jmp 0x8003070",
            "cmp dword [0x08003119], 0",
            "mov r12d, 0xffffffea",
            "jle 0x8003070",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9, r13",
            "mov r8d, 0x151",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003070",
            "cmp dword [0x08003165], 0",
            "jns 0x80031c6",
            "mov rdi, qword [rbx + 0x20]",
            "call kzfree",
            "jmp 0x80030f7",
            "cmp dword [0x08003179], 0",
            "mov r12d, 0xffffffea",
            "jle kfree",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "shl r14, 3",
            "mov qword [rsp], r14",
            "mov r9, r13",
            "mov r8d, 0x15a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80030f7",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x178",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003167"
        ]
    },
    "unk.0x8003170": {
        "function_address": "0x08003170",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x40",
            "mov qword [rbp - 0x18], r13",
            "mov r13, rsi",
            "mov qword [rbp - 0x28], rbx",
            "mov qword [rbp - 0x20], r12",
            "mov rbx, rdi",
            "xor esi, esi",
            "mov r12d, edx",
            "mov rdi, r13",
            "xor edx, edx",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r14, r8",
            "mov r15, rcx",
            "call crypto_alloc_ahash",
            "cmp rax, 0xfffffffffffff000",
            "mov qword [rbx + 0x10], rax",
            "ja cryptodev_verbosity",
            "test r12d, r12d",
            "jne 0x8003090",
            "mov rdx, qword [rax + 0x98]",
            "mov esi, 0x80d0",
            "mov edx, dword [rdx - 8]",
            "mov dword [rbx + 4], edx",
            "mov rax, qword [rax + 0x98]",
            "mov eax, dword [rax + 0x2c]",
            "mov dword [rbx + 8], eax",
            "mov rdi, qword [0x08002fe6]",
            "call kmem_cache_alloc",
            "test rax, rax",
            "mov qword [rbx + 0x18], rax",
            "je 0x80030f1",
            "lea rdi, [rax + 8]",
            "mov dword [rax], 0",
            "mov rdx, 0",
            "mov rsi, 0",
            "call __init_waitqueue_head",
            "mov r12, qword [rbx + 0x10]",
            "mov esi, 0xd0",
            "mov edi, dword [r12 + 0x40]",
            "add rdi, 0x50",
            "call __kmalloc",
            "test rax, rax",
            "je 0x80030af",
            "add r12, 0x48",
            "mov qword [rax + 0x20], r12",
            "mov rdx, qword [rbx + 0x18]",
            "mov qword [rbx + 0x20], rax",
            "mov qword [rax + 0x10], 0",
            "mov dword [rax + 0x28], 0x400",
            "mov qword [rax + 0x18], rdx",
            "mov rdi, qword [rbx + 0x20]",
            "mov rax, qword [rdi + 0x20]",
            "call qword [rax - 0x48]",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov dword [rbx], 1",
            "mov eax, r12d",
            "mov rbx, qword [rbp - 0x28]",
            "mov r12, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov edx, r14d",
            "mov rsi, r15",
            "mov rdi, rax",
            "call crypto_ahash_setkey",
            "test eax, eax",
            "jne cryptodev_verbosity",
            "mov rax, qword [rbx + 0x10]",
            "jmp 0x8002fc0",
            "cmp dword [0x080030b6], 0",
            "mov qword [rbx + 0x20], 0",
            "js 0x80030f1",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x16d",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r12d, 0xfffffff4",
            "mov rdi, qword [rbx + 0x18]",
            "call kfree",
            "mov rdi, qword [rbx + 0x10]",
            "lea rsi, [rdi + 0x48]",
            "call crypto_destroy_tfm",
            "jmp 0x8003070",
            "cmp dword [0x08003119], 0",
            "mov r12d, 0xffffffea",
            "jle 0x8003070",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9, r13",
            "mov r8d, 0x151",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003070",
            "cmp dword [0x08003165], 0",
            "jns 0x80031c6",
            "mov rdi, qword [rbx + 0x20]",
            "call kzfree",
            "jmp 0x80030f7",
            "cmp dword [0x08003179], 0",
            "mov r12d, 0xffffffea",
            "jle kfree",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "shl r14, 3",
            "mov qword [rsp], r14",
            "mov r9, r13",
            "mov r8d, 0x15a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80030f7",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x178",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003167"
        ]
    },
    "unk.0x80031c1": {
        "function_address": "0x080031c1",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x40",
            "mov qword [rbp - 0x18], r13",
            "mov r13, rsi",
            "mov qword [rbp - 0x28], rbx",
            "mov qword [rbp - 0x20], r12",
            "mov rbx, rdi",
            "xor esi, esi",
            "mov r12d, edx",
            "mov rdi, r13",
            "xor edx, edx",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r14, r8",
            "mov r15, rcx",
            "call crypto_alloc_ahash",
            "cmp rax, 0xfffffffffffff000",
            "mov qword [rbx + 0x10], rax",
            "ja cryptodev_verbosity",
            "test r12d, r12d",
            "jne 0x8003090",
            "mov rdx, qword [rax + 0x98]",
            "mov esi, 0x80d0",
            "mov edx, dword [rdx - 8]",
            "mov dword [rbx + 4], edx",
            "mov rax, qword [rax + 0x98]",
            "mov eax, dword [rax + 0x2c]",
            "mov dword [rbx + 8], eax",
            "mov rdi, qword [0x08002fe6]",
            "call kmem_cache_alloc",
            "test rax, rax",
            "mov qword [rbx + 0x18], rax",
            "je 0x80030f1",
            "lea rdi, [rax + 8]",
            "mov dword [rax], 0",
            "mov rdx, 0",
            "mov rsi, 0",
            "call __init_waitqueue_head",
            "mov r12, qword [rbx + 0x10]",
            "mov esi, 0xd0",
            "mov edi, dword [r12 + 0x40]",
            "add rdi, 0x50",
            "call __kmalloc",
            "test rax, rax",
            "je 0x80030af",
            "add r12, 0x48",
            "mov qword [rax + 0x20], r12",
            "mov rdx, qword [rbx + 0x18]",
            "mov qword [rbx + 0x20], rax",
            "mov qword [rax + 0x10], 0",
            "mov dword [rax + 0x28], 0x400",
            "mov qword [rax + 0x18], rdx",
            "mov rdi, qword [rbx + 0x20]",
            "mov rax, qword [rdi + 0x20]",
            "call qword [rax - 0x48]",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov dword [rbx], 1",
            "mov eax, r12d",
            "mov rbx, qword [rbp - 0x28]",
            "mov r12, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov edx, r14d",
            "mov rsi, r15",
            "mov rdi, rax",
            "call crypto_ahash_setkey",
            "test eax, eax",
            "jne cryptodev_verbosity",
            "mov rax, qword [rbx + 0x10]",
            "jmp 0x8002fc0",
            "cmp dword [0x080030b6], 0",
            "mov qword [rbx + 0x20], 0",
            "js 0x80030f1",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x16d",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r12d, 0xfffffff4",
            "mov rdi, qword [rbx + 0x18]",
            "call kfree",
            "mov rdi, qword [rbx + 0x10]",
            "lea rsi, [rdi + 0x48]",
            "call crypto_destroy_tfm",
            "jmp 0x8003070",
            "cmp dword [0x08003119], 0",
            "mov r12d, 0xffffffea",
            "jle 0x8003070",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9, r13",
            "mov r8d, 0x151",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003070",
            "cmp dword [0x08003165], 0",
            "jns 0x80031c6",
            "mov rdi, qword [rbx + 0x20]",
            "call kzfree",
            "jmp 0x80030f7",
            "cmp dword [0x08003179], 0",
            "mov r12d, 0xffffffea",
            "jle kfree",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "shl r14, 3",
            "mov qword [rsp], r14",
            "mov r9, r13",
            "mov r8d, 0x15a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80030f7",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x178",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003167"
        ]
    },
    "unk.0x80031f7": {
        "function_address": "0x080031f7",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x40",
            "mov qword [rbp - 0x18], r13",
            "mov r13, rsi",
            "mov qword [rbp - 0x28], rbx",
            "mov qword [rbp - 0x20], r12",
            "mov rbx, rdi",
            "xor esi, esi",
            "mov r12d, edx",
            "mov rdi, r13",
            "xor edx, edx",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r14, r8",
            "mov r15, rcx",
            "call crypto_alloc_ahash",
            "cmp rax, 0xfffffffffffff000",
            "mov qword [rbx + 0x10], rax",
            "ja cryptodev_verbosity",
            "test r12d, r12d",
            "jne 0x8003090",
            "mov rdx, qword [rax + 0x98]",
            "mov esi, 0x80d0",
            "mov edx, dword [rdx - 8]",
            "mov dword [rbx + 4], edx",
            "mov rax, qword [rax + 0x98]",
            "mov eax, dword [rax + 0x2c]",
            "mov dword [rbx + 8], eax",
            "mov rdi, qword [0x08002fe6]",
            "call kmem_cache_alloc",
            "test rax, rax",
            "mov qword [rbx + 0x18], rax",
            "je 0x80030f1",
            "lea rdi, [rax + 8]",
            "mov dword [rax], 0",
            "mov rdx, 0",
            "mov rsi, 0",
            "call __init_waitqueue_head",
            "mov r12, qword [rbx + 0x10]",
            "mov esi, 0xd0",
            "mov edi, dword [r12 + 0x40]",
            "add rdi, 0x50",
            "call __kmalloc",
            "test rax, rax",
            "je 0x80030af",
            "add r12, 0x48",
            "mov qword [rax + 0x20], r12",
            "mov rdx, qword [rbx + 0x18]",
            "mov qword [rbx + 0x20], rax",
            "mov qword [rax + 0x10], 0",
            "mov dword [rax + 0x28], 0x400",
            "mov qword [rax + 0x18], rdx",
            "mov rdi, qword [rbx + 0x20]",
            "mov rax, qword [rdi + 0x20]",
            "call qword [rax - 0x48]",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov dword [rbx], 1",
            "mov eax, r12d",
            "mov rbx, qword [rbp - 0x28]",
            "mov r12, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov edx, r14d",
            "mov rsi, r15",
            "mov rdi, rax",
            "call crypto_ahash_setkey",
            "test eax, eax",
            "jne cryptodev_verbosity",
            "mov rax, qword [rbx + 0x10]",
            "jmp 0x8002fc0",
            "cmp dword [0x080030b6], 0",
            "mov qword [rbx + 0x20], 0",
            "js 0x80030f1",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x16d",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r12d, 0xfffffff4",
            "mov rdi, qword [rbx + 0x18]",
            "call kfree",
            "mov rdi, qword [rbx + 0x10]",
            "lea rsi, [rdi + 0x48]",
            "call crypto_destroy_tfm",
            "jmp 0x8003070",
            "cmp dword [0x08003119], 0",
            "mov r12d, 0xffffffea",
            "jle 0x8003070",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9, r13",
            "mov r8d, 0x151",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003070",
            "cmp dword [0x08003165], 0",
            "jns 0x80031c6",
            "mov rdi, qword [rbx + 0x20]",
            "call kzfree",
            "jmp 0x80030f7",
            "cmp dword [0x08003179], 0",
            "mov r12d, 0xffffffea",
            "jle kfree",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "shl r14, 3",
            "mov qword [rsp], r14",
            "mov r9, r13",
            "mov r8d, 0x15a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80030f7",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x178",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8003167"
        ]
    },
    "sym.cryptodev_hash_final": {
        "function_address": "0x08003370",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push rbx",
            "mov rbx, rdi",
            "sub rsp, 8",
            "mov rax, qword [rdi + 0x18]",
            "mov dword [rax], 0",
            "mov rax, qword [rdi + 0x20]",
            "mov qword [rax + 0x38], 0",
            "mov dword [rax + 0x30], 0",
            "mov qword [rax + 0x40], rsi",
            "mov rdi, qword [rdi + 0x20]",
            "call crypto_ahash_final",
            "cmp eax, 0xffffff8d",
            "mov rbx, qword [rbx + 0x18]",
            "je 0x80033c0",
            "cmp eax, 0xfffffff0",
            "je 0x80033c0",
            "add rsp, 8",
            "pop rbx",
            "pop rbp",
            "ret",
            "mov rdi, rbx",
            "call wait_for_completion",
            "mov r9d, dword [rbx + 0x20]",
            "test r9d, r9d",
            "jne 0x80033da",
            "add rsp, 8",
            "xor eax, eax",
            "pop rbx",
            "pop rbp",
            "ret",
            "cmp dword [0x080033e1], 0",
            "jns 0x80033e8",
            "mov eax, r9d",
            "jmp 0x80033b4",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x10f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r9d, dword [rbx + 0x20]",
            "jmp 0x80033e3"
        ]
    },
    "unk.0x80033a6": {
        "function_address": "0x080033a6",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push rbx",
            "mov rbx, rdi",
            "sub rsp, 8",
            "mov rax, qword [rdi + 0x18]",
            "mov dword [rax], 0",
            "mov rax, qword [rdi + 0x20]",
            "mov qword [rax + 0x38], 0",
            "mov dword [rax + 0x30], 0",
            "mov qword [rax + 0x40], rsi",
            "mov rdi, qword [rdi + 0x20]",
            "call crypto_ahash_final",
            "cmp eax, 0xffffff8d",
            "mov rbx, qword [rbx + 0x18]",
            "je 0x80033c0",
            "cmp eax, 0xfffffff0",
            "je 0x80033c0",
            "add rsp, 8",
            "pop rbx",
            "pop rbp",
            "ret",
            "mov rdi, rbx",
            "call wait_for_completion",
            "mov r9d, dword [rbx + 0x20]",
            "test r9d, r9d",
            "jne 0x80033da",
            "add rsp, 8",
            "xor eax, eax",
            "pop rbx",
            "pop rbp",
            "ret",
            "cmp dword [0x080033e1], 0",
            "jns 0x80033e8",
            "mov eax, r9d",
            "jmp 0x80033b4",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x10f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r9d, dword [rbx + 0x20]",
            "jmp 0x80033e3"
        ]
    },
    "unk.0x80033c8": {
        "function_address": "0x080033c8",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push rbx",
            "mov rbx, rdi",
            "sub rsp, 8",
            "mov rax, qword [rdi + 0x18]",
            "mov dword [rax], 0",
            "mov rax, qword [rdi + 0x20]",
            "mov qword [rax + 0x38], 0",
            "mov dword [rax + 0x30], 0",
            "mov qword [rax + 0x40], rsi",
            "mov rdi, qword [rdi + 0x20]",
            "call crypto_ahash_final",
            "cmp eax, 0xffffff8d",
            "mov rbx, qword [rbx + 0x18]",
            "je 0x80033c0",
            "cmp eax, 0xfffffff0",
            "je 0x80033c0",
            "add rsp, 8",
            "pop rbx",
            "pop rbp",
            "ret",
            "mov rdi, rbx",
            "call wait_for_completion",
            "mov r9d, dword [rbx + 0x20]",
            "test r9d, r9d",
            "jne 0x80033da",
            "add rsp, 8",
            "xor eax, eax",
            "pop rbx",
            "pop rbp",
            "ret",
            "cmp dword [0x080033e1], 0",
            "jns 0x80033e8",
            "mov eax, r9d",
            "jmp 0x80033b4",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x10f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r9d, dword [rbx + 0x20]",
            "jmp 0x80033e3"
        ]
    },
    "unk.0x8003419": {
        "function_address": "0x08003419",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push rbx",
            "mov rbx, rdi",
            "sub rsp, 8",
            "mov rax, qword [rdi + 0x18]",
            "mov dword [rax], 0",
            "mov rax, qword [rdi + 0x20]",
            "mov qword [rax + 0x38], 0",
            "mov dword [rax + 0x30], 0",
            "mov qword [rax + 0x40], rsi",
            "mov rdi, qword [rdi + 0x20]",
            "call crypto_ahash_final",
            "cmp eax, 0xffffff8d",
            "mov rbx, qword [rbx + 0x18]",
            "je 0x80033c0",
            "cmp eax, 0xfffffff0",
            "je 0x80033c0",
            "add rsp, 8",
            "pop rbx",
            "pop rbp",
            "ret",
            "mov rdi, rbx",
            "call wait_for_completion",
            "mov r9d, dword [rbx + 0x20]",
            "test r9d, r9d",
            "jne 0x80033da",
            "add rsp, 8",
            "xor eax, eax",
            "pop rbx",
            "pop rbp",
            "ret",
            "cmp dword [0x080033e1], 0",
            "jns 0x80033e8",
            "mov eax, r9d",
            "jmp 0x80033b4",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x10f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r9d, dword [rbx + 0x20]",
            "jmp 0x80033e3"
        ]
    },
    "sym.adjust_sg_array": {
        "function_address": "0x08005300",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r13",
            "push r12",
            "mov r12, rdi",
            "push rbx",
            "sub rsp, 0x18",
            "mov r9d, dword [rdi + 0xb8]",
            "cmp r9d, esi",
            "mov ebx, r9d",
            "jge 0x8005326",
            "nop",
            "add ebx, ebx",
            "cmp esi, ebx",
            "jg 0x8005320",
            "mov eax, dword [0x0800532c]",
            "test eax, eax",
            "jns 0x8005395",
            "movsxd r13, ebx",
            "mov rdi, qword [r12 + 0xc8]",
            "mov edx, 0xd0",
            "lea rsi, [r13*8]",
            "call krealloc",
            "test rax, rax",
            "je 0x80053ce",
            "mov rdi, qword [r12 + 0xd0]",
            "mov rsi, r13",
            "mov qword [r12 + 0xc8], rax",
            "shl rsi, 5",
            "mov edx, 0xd0",
            "call krealloc",
            "test rax, rax",
            "je 0x80053ce",
            "mov qword [r12 + 0xd0], rax",
            "mov dword [r12 + 0xb8], ebx",
            "xor eax, eax",
            "add rsp, 0x18",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop rbp",
            "ret",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov dword [rsp], ebx",
            "mov r8d, 0x5d",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8005330",
            "mov eax, 0xfffffff4",
            "jmp 0x800538a"
        ]
    },
    "unk.0x800534d": {
        "function_address": "0x0800534d",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r13",
            "push r12",
            "mov r12, rdi",
            "push rbx",
            "sub rsp, 0x18",
            "mov r9d, dword [rdi + 0xb8]",
            "cmp r9d, esi",
            "mov ebx, r9d",
            "jge 0x8005326",
            "nop",
            "add ebx, ebx",
            "cmp esi, ebx",
            "jg 0x8005320",
            "mov eax, dword [0x0800532c]",
            "test eax, eax",
            "jns 0x8005395",
            "movsxd r13, ebx",
            "mov rdi, qword [r12 + 0xc8]",
            "mov edx, 0xd0",
            "lea rsi, [r13*8]",
            "call krealloc",
            "test rax, rax",
            "je 0x80053ce",
            "mov rdi, qword [r12 + 0xd0]",
            "mov rsi, r13",
            "mov qword [r12 + 0xc8], rax",
            "shl rsi, 5",
            "mov edx, 0xd0",
            "call krealloc",
            "test rax, rax",
            "je 0x80053ce",
            "mov qword [r12 + 0xd0], rax",
            "mov dword [r12 + 0xb8], ebx",
            "xor eax, eax",
            "add rsp, 0x18",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop rbp",
            "ret",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov dword [rsp], ebx",
            "mov r8d, 0x5d",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8005330",
            "mov eax, 0xfffffff4",
            "jmp 0x800538a"
        ]
    },
    "unk.0x8005373": {
        "function_address": "0x08005373",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r13",
            "push r12",
            "mov r12, rdi",
            "push rbx",
            "sub rsp, 0x18",
            "mov r9d, dword [rdi + 0xb8]",
            "cmp r9d, esi",
            "mov ebx, r9d",
            "jge 0x8005326",
            "nop",
            "add ebx, ebx",
            "cmp esi, ebx",
            "jg 0x8005320",
            "mov eax, dword [0x0800532c]",
            "test eax, eax",
            "jns 0x8005395",
            "movsxd r13, ebx",
            "mov rdi, qword [r12 + 0xc8]",
            "mov edx, 0xd0",
            "lea rsi, [r13*8]",
            "call krealloc",
            "test rax, rax",
            "je 0x80053ce",
            "mov rdi, qword [r12 + 0xd0]",
            "mov rsi, r13",
            "mov qword [r12 + 0xc8], rax",
            "shl rsi, 5",
            "mov edx, 0xd0",
            "call krealloc",
            "test rax, rax",
            "je 0x80053ce",
            "mov qword [r12 + 0xd0], rax",
            "mov dword [r12 + 0xb8], ebx",
            "xor eax, eax",
            "add rsp, 0x18",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop rbp",
            "ret",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov dword [rsp], ebx",
            "mov r8d, 0x5d",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8005330",
            "mov eax, 0xfffffff4",
            "jmp 0x800538a"
        ]
    },
    "unk.0x80053c9": {
        "function_address": "0x080053c9",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r13",
            "push r12",
            "mov r12, rdi",
            "push rbx",
            "sub rsp, 0x18",
            "mov r9d, dword [rdi + 0xb8]",
            "cmp r9d, esi",
            "mov ebx, r9d",
            "jge 0x8005326",
            "nop",
            "add ebx, ebx",
            "cmp esi, ebx",
            "jg 0x8005320",
            "mov eax, dword [0x0800532c]",
            "test eax, eax",
            "jns 0x8005395",
            "movsxd r13, ebx",
            "mov rdi, qword [r12 + 0xc8]",
            "mov edx, 0xd0",
            "lea rsi, [r13*8]",
            "call krealloc",
            "test rax, rax",
            "je 0x80053ce",
            "mov rdi, qword [r12 + 0xd0]",
            "mov rsi, r13",
            "mov qword [r12 + 0xc8], rax",
            "shl rsi, 5",
            "mov edx, 0xd0",
            "call krealloc",
            "test rax, rax",
            "je 0x80053ce",
            "mov qword [r12 + 0xd0], rax",
            "mov dword [r12 + 0xb8], ebx",
            "xor eax, eax",
            "add rsp, 0x18",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop rbp",
            "ret",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov dword [rsp], ebx",
            "mov r8d, 0x5d",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8005330",
            "mov eax, 0xfffffff4",
            "jmp 0x800538a"
        ]
    },
    "sym.get_userbuf": {
        "function_address": "0x08005460",
        "instructions": [
            "push rbp",
            "mov r10d, edx",
            "mov rbp, rsp",
            "sub rsp, 0x50",
            "test edx, edx",
            "mov qword [rbp - 0x28], rbx",
            "mov qword [rbp - 0x20], r12",
            "mov rbx, rdi",
            "mov qword [rbp - 0x18], r13",
            "mov qword [rbp - 0x10], r14",
            "mov r12, rsi",
            "mov qword [rbp - 8], r15",
            "mov r13, rcx",
            "mov r14d, r8d",
            "mov r15, r9",
            "je 0x800549e",
            "test rsi, rsi",
            "mov eax, 0",
            "cmove r10d, eax",
            "test r14d, r14d",
            "je 0x80054af",
            "test r13, r13",
            "mov eax, 0",
            "cmove r14d, eax",
            "xor eax, eax",
            "test r10d, r10d",
            "je 0x80054d2",
            "mov rax, r12",
            "mov edx, 1",
            "shr rax, 0xc",
            "sub edx, eax",
            "mov eax, r10d",
            "lea rax, [r12 + rax - 1]",
            "shr rax, 0xc",
            "add eax, edx",
            "xor esi, esi",
            "test r14d, r14d",
            "je 0x80054f3",
            "mov rdx, r13",
            "mov sil, 1",
            "shr rdx, 0xc",
            "sub esi, edx",
            "mov edx, r14d",
            "lea rdx, [r13 + rdx - 1]",
            "shr rdx, 0xc",
            "add esi, edx",
            "cmp r12, r13",
            "je 0x8005680",
            "add esi, eax",
            "mov dword [rbx + 0xbc], esi",
            "cmp dword [rbx + 0xb8], esi",
            "mov dword [rbx + 0xc0], eax",
            "jb 0x8005600",
            "cmp r12, r13",
            "je 0x8005620",
            "mov rax, qword [rbp + 0x18]",
            "mov rdx, qword [rbp + 0x20]",
            "test r12, r12",
            "mov qword [rax], 0",
            "mov qword [rdx], 0",
            "je 0x8005581",
            "mov rsi, qword [rbp + 0x10]",
            "mov r9, qword [rbx + 0xd0]",
            "xor edx, edx",
            "mov ecx, dword [rbx + 0xc0]",
            "mov r8, qword [rbx + 0xc8]",
            "mov rdi, r12",
            "mov qword [rsp], r15",
            "mov qword [rsp + 8], rsi",
            "mov esi, r10d",
            "call __get_userbuf",
            "test eax, eax",
            "mov r9d, eax",
            "jne cryptodev_verbosity",
            "mov rax, qword [rbx + 0xd0]",
            "mov rdx, qword [rbp + 0x18]",
            "mov qword [rdx], rax",
            "test r13, r13",
            "je 0x80055dc",
            "mov eax, dword [rbx + 0xc0]",
            "mov rsi, qword [rbp + 0x20]",
            "mov rdi, r13",
            "mov rdx, qword [rbx + 0xc8]",
            "mov ecx, dword [rbx + 0xbc]",
            "mov r9, rax",
            "lea r8, [rdx + rax*8]",
            "sub ecx, eax",
            "shl r9, 5",
            "add r9, qword [rbx + 0xd0]",
            "mov edx, 1",
            "mov qword [rsi], r9",
            "mov rsi, qword [rbp + 0x10]",
            "mov qword [rsp], r15",
            "mov qword [rsp + 8], rsi",
            "mov esi, r14d",
            "call __get_userbuf",
            "test eax, eax",
            "mov r9d, eax",
            "jne cryptodev_verbosity",
            "xor r9d, r9d",
            "mov eax, r9d",
            "mov rbx, qword [rbp - 0x28]",
            "mov r12, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov rdi, rbx",
            "mov dword [rbp - 0x38], r10d",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r9d, eax",
            "mov r10d, dword [rbp - 0x38]",
            "jne 0x80055df",
            "cmp r12, r13",
            "jne 0x800551f",
            "mov rax, qword [rbp + 0x10]",
            "mov r9, qword [rbx + 0xd0]",
            "cmp r14d, r10d",
            "mov ecx, dword [rbx + 0xbc]",
            "mov r8, qword [rbx + 0xc8]",
            "mov esi, r10d",
            "cmovae esi, r14d",
            "mov qword [rsp], r15",
            "mov edx, 1",
            "mov qword [rsp + 8], rax",
            "mov rdi, r12",
            "call __get_userbuf",
            "test eax, eax",
            "mov r9d, eax",
            "jne cryptodev_verbosity",
            "mov rax, qword [rbx + 0xd0]",
            "mov rdx, qword [rbp + 0x20]",
            "mov rsi, qword [rbp + 0x18]",
            "mov qword [rdx], rax",
            "mov qword [rsi], rax",
            "jmp 0x80055df",
            "cmp esi, eax",
            "cmovl esi, eax",
            "xor eax, eax",
            "mov dword [rbx + 0xbc], esi",
            "jmp 0x8005504",
            "cmp dword [0x08005699], 0",
            "jle 0x80055df",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xba",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov dword [rbp - 0x38], r9d",
            "call printk",
            "mov r9d, dword [rbp - 0x38]",
            "jmp 0x80055df",
            "cmp dword [0x080056e4], 0",
            "jg 0x8005746",
            "mov rdi, rbx",
            "mov dword [rbp - 0x38], r9d",
            "call release_user_pages",
            "mov r9d, dword [rbp - 0x38]",
            "jmp 0x80055df",
            "cmp dword [0x08005702], 0",
            "jle 0x80055df",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xac",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov dword [rbp - 0x38], r9d",
            "call printk",
            "mov r9d, dword [rbp - 0x38]",
            "jmp 0x80055df",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xc9",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov dword [rbp - 0x38], r9d",
            "call printk",
            "mov r9d, dword [rbp - 0x38]",
            "jmp 0x80056e6"
        ]
    },
    "unk.0x8005568": {
        "function_address": "0x08005568",
        "instructions": [
            "push rbp",
            "mov r10d, edx",
            "mov rbp, rsp",
            "sub rsp, 0x50",
            "test edx, edx",
            "mov qword [rbp - 0x28], rbx",
            "mov qword [rbp - 0x20], r12",
            "mov rbx, rdi",
            "mov qword [rbp - 0x18], r13",
            "mov qword [rbp - 0x10], r14",
            "mov r12, rsi",
            "mov qword [rbp - 8], r15",
            "mov r13, rcx",
            "mov r14d, r8d",
            "mov r15, r9",
            "je 0x800549e",
            "test rsi, rsi",
            "mov eax, 0",
            "cmove r10d, eax",
            "test r14d, r14d",
            "je 0x80054af",
            "test r13, r13",
            "mov eax, 0",
            "cmove r14d, eax",
            "xor eax, eax",
            "test r10d, r10d",
            "je 0x80054d2",
            "mov rax, r12",
            "mov edx, 1",
            "shr rax, 0xc",
            "sub edx, eax",
            "mov eax, r10d",
            "lea rax, [r12 + rax - 1]",
            "shr rax, 0xc",
            "add eax, edx",
            "xor esi, esi",
            "test r14d, r14d",
            "je 0x80054f3",
            "mov rdx, r13",
            "mov sil, 1",
            "shr rdx, 0xc",
            "sub esi, edx",
            "mov edx, r14d",
            "lea rdx, [r13 + rdx - 1]",
            "shr rdx, 0xc",
            "add esi, edx",
            "cmp r12, r13",
            "je 0x8005680",
            "add esi, eax",
            "mov dword [rbx + 0xbc], esi",
            "cmp dword [rbx + 0xb8], esi",
            "mov dword [rbx + 0xc0], eax",
            "jb 0x8005600",
            "cmp r12, r13",
            "je 0x8005620",
            "mov rax, qword [rbp + 0x18]",
            "mov rdx, qword [rbp + 0x20]",
            "test r12, r12",
            "mov qword [rax], 0",
            "mov qword [rdx], 0",
            "je 0x8005581",
            "mov rsi, qword [rbp + 0x10]",
            "mov r9, qword [rbx + 0xd0]",
            "xor edx, edx",
            "mov ecx, dword [rbx + 0xc0]",
            "mov r8, qword [rbx + 0xc8]",
            "mov rdi, r12",
            "mov qword [rsp], r15",
            "mov qword [rsp + 8], rsi",
            "mov esi, r10d",
            "call __get_userbuf",
            "test eax, eax",
            "mov r9d, eax",
            "jne cryptodev_verbosity",
            "mov rax, qword [rbx + 0xd0]",
            "mov rdx, qword [rbp + 0x18]",
            "mov qword [rdx], rax",
            "test r13, r13",
            "je 0x80055dc",
            "mov eax, dword [rbx + 0xc0]",
            "mov rsi, qword [rbp + 0x20]",
            "mov rdi, r13",
            "mov rdx, qword [rbx + 0xc8]",
            "mov ecx, dword [rbx + 0xbc]",
            "mov r9, rax",
            "lea r8, [rdx + rax*8]",
            "sub ecx, eax",
            "shl r9, 5",
            "add r9, qword [rbx + 0xd0]",
            "mov edx, 1",
            "mov qword [rsi], r9",
            "mov rsi, qword [rbp + 0x10]",
            "mov qword [rsp], r15",
            "mov qword [rsp + 8], rsi",
            "mov esi, r14d",
            "call __get_userbuf",
            "test eax, eax",
            "mov r9d, eax",
            "jne cryptodev_verbosity",
            "xor r9d, r9d",
            "mov eax, r9d",
            "mov rbx, qword [rbp - 0x28]",
            "mov r12, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov rdi, rbx",
            "mov dword [rbp - 0x38], r10d",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r9d, eax",
            "mov r10d, dword [rbp - 0x38]",
            "jne 0x80055df",
            "cmp r12, r13",
            "jne 0x800551f",
            "mov rax, qword [rbp + 0x10]",
            "mov r9, qword [rbx + 0xd0]",
            "cmp r14d, r10d",
            "mov ecx, dword [rbx + 0xbc]",
            "mov r8, qword [rbx + 0xc8]",
            "mov esi, r10d",
            "cmovae esi, r14d",
            "mov qword [rsp], r15",
            "mov edx, 1",
            "mov qword [rsp + 8], rax",
            "mov rdi, r12",
            "call __get_userbuf",
            "test eax, eax",
            "mov r9d, eax",
            "jne cryptodev_verbosity",
            "mov rax, qword [rbx + 0xd0]",
            "mov rdx, qword [rbp + 0x20]",
            "mov rsi, qword [rbp + 0x18]",
            "mov qword [rdx], rax",
            "mov qword [rsi], rax",
            "jmp 0x80055df",
            "cmp esi, eax",
            "cmovl esi, eax",
            "xor eax, eax",
            "mov dword [rbx + 0xbc], esi",
            "jmp 0x8005504",
            "cmp dword [0x08005699], 0",
            "jle 0x80055df",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xba",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov dword [rbp - 0x38], r9d",
            "call printk",
            "mov r9d, dword [rbp - 0x38]",
            "jmp 0x80055df",
            "cmp dword [0x080056e4], 0",
            "jg 0x8005746",
            "mov rdi, rbx",
            "mov dword [rbp - 0x38], r9d",
            "call release_user_pages",
            "mov r9d, dword [rbp - 0x38]",
            "jmp 0x80055df",
            "cmp dword [0x08005702], 0",
            "jle 0x80055df",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xac",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov dword [rbp - 0x38], r9d",
            "call printk",
            "mov r9d, dword [rbp - 0x38]",
            "jmp 0x80055df",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xc9",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov dword [rbp - 0x38], r9d",
            "call printk",
            "mov r9d, dword [rbp - 0x38]",
            "jmp 0x80056e6"
        ]
    },
    "unk.0x80055d1": {
        "function_address": "0x080055d1",
        "instructions": [
            "push rbp",
            "mov r10d, edx",
            "mov rbp, rsp",
            "sub rsp, 0x50",
            "test edx, edx",
            "mov qword [rbp - 0x28], rbx",
            "mov qword [rbp - 0x20], r12",
            "mov rbx, rdi",
            "mov qword [rbp - 0x18], r13",
            "mov qword [rbp - 0x10], r14",
            "mov r12, rsi",
            "mov qword [rbp - 8], r15",
            "mov r13, rcx",
            "mov r14d, r8d",
            "mov r15, r9",
            "je 0x800549e",
            "test rsi, rsi",
            "mov eax, 0",
            "cmove r10d, eax",
            "test r14d, r14d",
            "je 0x80054af",
            "test r13, r13",
            "mov eax, 0",
            "cmove r14d, eax",
            "xor eax, eax",
            "test r10d, r10d",
            "je 0x80054d2",
            "mov rax, r12",
            "mov edx, 1",
            "shr rax, 0xc",
            "sub edx, eax",
            "mov eax, r10d",
            "lea rax, [r12 + rax - 1]",
            "shr rax, 0xc",
            "add eax, edx",
            "xor esi, esi",
            "test r14d, r14d",
            "je 0x80054f3",
            "mov rdx, r13",
            "mov sil, 1",
            "shr rdx, 0xc",
            "sub esi, edx",
            "mov edx, r14d",
            "lea rdx, [r13 + rdx - 1]",
            "shr rdx, 0xc",
            "add esi, edx",
            "cmp r12, r13",
            "je 0x8005680",
            "add esi, eax",
            "mov dword [rbx + 0xbc], esi",
            "cmp dword [rbx + 0xb8], esi",
            "mov dword [rbx + 0xc0], eax",
            "jb 0x8005600",
            "cmp r12, r13",
            "je 0x8005620",
            "mov rax, qword [rbp + 0x18]",
            "mov rdx, qword [rbp + 0x20]",
            "test r12, r12",
            "mov qword [rax], 0",
            "mov qword [rdx], 0",
            "je 0x8005581",
            "mov rsi, qword [rbp + 0x10]",
            "mov r9, qword [rbx + 0xd0]",
            "xor edx, edx",
            "mov ecx, dword [rbx + 0xc0]",
            "mov r8, qword [rbx + 0xc8]",
            "mov rdi, r12",
            "mov qword [rsp], r15",
            "mov qword [rsp + 8], rsi",
            "mov esi, r10d",
            "call __get_userbuf",
            "test eax, eax",
            "mov r9d, eax",
            "jne cryptodev_verbosity",
            "mov rax, qword [rbx + 0xd0]",
            "mov rdx, qword [rbp + 0x18]",
            "mov qword [rdx], rax",
            "test r13, r13",
            "je 0x80055dc",
            "mov eax, dword [rbx + 0xc0]",
            "mov rsi, qword [rbp + 0x20]",
            "mov rdi, r13",
            "mov rdx, qword [rbx + 0xc8]",
            "mov ecx, dword [rbx + 0xbc]",
            "mov r9, rax",
            "lea r8, [rdx + rax*8]",
            "sub ecx, eax",
            "shl r9, 5",
            "add r9, qword [rbx + 0xd0]",
            "mov edx, 1",
            "mov qword [rsi], r9",
            "mov rsi, qword [rbp + 0x10]",
            "mov qword [rsp], r15",
            "mov qword [rsp + 8], rsi",
            "mov esi, r14d",
            "call __get_userbuf",
            "test eax, eax",
            "mov r9d, eax",
            "jne cryptodev_verbosity",
            "xor r9d, r9d",
            "mov eax, r9d",
            "mov rbx, qword [rbp - 0x28]",
            "mov r12, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov rdi, rbx",
            "mov dword [rbp - 0x38], r10d",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r9d, eax",
            "mov r10d, dword [rbp - 0x38]",
            "jne 0x80055df",
            "cmp r12, r13",
            "jne 0x800551f",
            "mov rax, qword [rbp + 0x10]",
            "mov r9, qword [rbx + 0xd0]",
            "cmp r14d, r10d",
            "mov ecx, dword [rbx + 0xbc]",
            "mov r8, qword [rbx + 0xc8]",
            "mov esi, r10d",
            "cmovae esi, r14d",
            "mov qword [rsp], r15",
            "mov edx, 1",
            "mov qword [rsp + 8], rax",
            "mov rdi, r12",
            "call __get_userbuf",
            "test eax, eax",
            "mov r9d, eax",
            "jne cryptodev_verbosity",
            "mov rax, qword [rbx + 0xd0]",
            "mov rdx, qword [rbp + 0x20]",
            "mov rsi, qword [rbp + 0x18]",
            "mov qword [rdx], rax",
            "mov qword [rsi], rax",
            "jmp 0x80055df",
            "cmp esi, eax",
            "cmovl esi, eax",
            "xor eax, eax",
            "mov dword [rbx + 0xbc], esi",
            "jmp 0x8005504",
            "cmp dword [0x08005699], 0",
            "jle 0x80055df",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xba",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov dword [rbp - 0x38], r9d",
            "call printk",
            "mov r9d, dword [rbp - 0x38]",
            "jmp 0x80055df",
            "cmp dword [0x080056e4], 0",
            "jg 0x8005746",
            "mov rdi, rbx",
            "mov dword [rbp - 0x38], r9d",
            "call release_user_pages",
            "mov r9d, dword [rbp - 0x38]",
            "jmp 0x80055df",
            "cmp dword [0x08005702], 0",
            "jle 0x80055df",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xac",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov dword [rbp - 0x38], r9d",
            "call printk",
            "mov r9d, dword [rbp - 0x38]",
            "jmp 0x80055df",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xc9",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov dword [rbp - 0x38], r9d",
            "call printk",
            "mov r9d, dword [rbp - 0x38]",
            "jmp 0x80056e6"
        ]
    },
    "unk.0x800560c": {
        "function_address": "0x0800560c",
        "instructions": [
            "push rbp",
            "mov r10d, edx",
            "mov rbp, rsp",
            "sub rsp, 0x50",
            "test edx, edx",
            "mov qword [rbp - 0x28], rbx",
            "mov qword [rbp - 0x20], r12",
            "mov rbx, rdi",
            "mov qword [rbp - 0x18], r13",
            "mov qword [rbp - 0x10], r14",
            "mov r12, rsi",
            "mov qword [rbp - 8], r15",
            "mov r13, rcx",
            "mov r14d, r8d",
            "mov r15, r9",
            "je 0x800549e",
            "test rsi, rsi",
            "mov eax, 0",
            "cmove r10d, eax",
            "test r14d, r14d",
            "je 0x80054af",
            "test r13, r13",
            "mov eax, 0",
            "cmove r14d, eax",
            "xor eax, eax",
            "test r10d, r10d",
            "je 0x80054d2",
            "mov rax, r12",
            "mov edx, 1",
            "shr rax, 0xc",
            "sub edx, eax",
            "mov eax, r10d",
            "lea rax, [r12 + rax - 1]",
            "shr rax, 0xc",
            "add eax, edx",
            "xor esi, esi",
            "test r14d, r14d",
            "je 0x80054f3",
            "mov rdx, r13",
            "mov sil, 1",
            "shr rdx, 0xc",
            "sub esi, edx",
            "mov edx, r14d",
            "lea rdx, [r13 + rdx - 1]",
            "shr rdx, 0xc",
            "add esi, edx",
            "cmp r12, r13",
            "je 0x8005680",
            "add esi, eax",
            "mov dword [rbx + 0xbc], esi",
            "cmp dword [rbx + 0xb8], esi",
            "mov dword [rbx + 0xc0], eax",
            "jb 0x8005600",
            "cmp r12, r13",
            "je 0x8005620",
            "mov rax, qword [rbp + 0x18]",
            "mov rdx, qword [rbp + 0x20]",
            "test r12, r12",
            "mov qword [rax], 0",
            "mov qword [rdx], 0",
            "je 0x8005581",
            "mov rsi, qword [rbp + 0x10]",
            "mov r9, qword [rbx + 0xd0]",
            "xor edx, edx",
            "mov ecx, dword [rbx + 0xc0]",
            "mov r8, qword [rbx + 0xc8]",
            "mov rdi, r12",
            "mov qword [rsp], r15",
            "mov qword [rsp + 8], rsi",
            "mov esi, r10d",
            "call __get_userbuf",
            "test eax, eax",
            "mov r9d, eax",
            "jne cryptodev_verbosity",
            "mov rax, qword [rbx + 0xd0]",
            "mov rdx, qword [rbp + 0x18]",
            "mov qword [rdx], rax",
            "test r13, r13",
            "je 0x80055dc",
            "mov eax, dword [rbx + 0xc0]",
            "mov rsi, qword [rbp + 0x20]",
            "mov rdi, r13",
            "mov rdx, qword [rbx + 0xc8]",
            "mov ecx, dword [rbx + 0xbc]",
            "mov r9, rax",
            "lea r8, [rdx + rax*8]",
            "sub ecx, eax",
            "shl r9, 5",
            "add r9, qword [rbx + 0xd0]",
            "mov edx, 1",
            "mov qword [rsi], r9",
            "mov rsi, qword [rbp + 0x10]",
            "mov qword [rsp], r15",
            "mov qword [rsp + 8], rsi",
            "mov esi, r14d",
            "call __get_userbuf",
            "test eax, eax",
            "mov r9d, eax",
            "jne cryptodev_verbosity",
            "xor r9d, r9d",
            "mov eax, r9d",
            "mov rbx, qword [rbp - 0x28]",
            "mov r12, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov rdi, rbx",
            "mov dword [rbp - 0x38], r10d",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r9d, eax",
            "mov r10d, dword [rbp - 0x38]",
            "jne 0x80055df",
            "cmp r12, r13",
            "jne 0x800551f",
            "mov rax, qword [rbp + 0x10]",
            "mov r9, qword [rbx + 0xd0]",
            "cmp r14d, r10d",
            "mov ecx, dword [rbx + 0xbc]",
            "mov r8, qword [rbx + 0xc8]",
            "mov esi, r10d",
            "cmovae esi, r14d",
            "mov qword [rsp], r15",
            "mov edx, 1",
            "mov qword [rsp + 8], rax",
            "mov rdi, r12",
            "call __get_userbuf",
            "test eax, eax",
            "mov r9d, eax",
            "jne cryptodev_verbosity",
            "mov rax, qword [rbx + 0xd0]",
            "mov rdx, qword [rbp + 0x20]",
            "mov rsi, qword [rbp + 0x18]",
            "mov qword [rdx], rax",
            "mov qword [rsi], rax",
            "jmp 0x80055df",
            "cmp esi, eax",
            "cmovl esi, eax",
            "xor eax, eax",
            "mov dword [rbx + 0xbc], esi",
            "jmp 0x8005504",
            "cmp dword [0x08005699], 0",
            "jle 0x80055df",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xba",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov dword [rbp - 0x38], r9d",
            "call printk",
            "mov r9d, dword [rbp - 0x38]",
            "jmp 0x80055df",
            "cmp dword [0x080056e4], 0",
            "jg 0x8005746",
            "mov rdi, rbx",
            "mov dword [rbp - 0x38], r9d",
            "call release_user_pages",
            "mov r9d, dword [rbp - 0x38]",
            "jmp 0x80055df",
            "cmp dword [0x08005702], 0",
            "jle 0x80055df",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xac",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov dword [rbp - 0x38], r9d",
            "call printk",
            "mov r9d, dword [rbp - 0x38]",
            "jmp 0x80055df",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xc9",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov dword [rbp - 0x38], r9d",
            "call printk",
            "mov r9d, dword [rbp - 0x38]",
            "jmp 0x80056e6"
        ]
    },
    "unk.0x8005658": {
        "function_address": "0x08005658",
        "instructions": [
            "push rbp",
            "mov r10d, edx",
            "mov rbp, rsp",
            "sub rsp, 0x50",
            "test edx, edx",
            "mov qword [rbp - 0x28], rbx",
            "mov qword [rbp - 0x20], r12",
            "mov rbx, rdi",
            "mov qword [rbp - 0x18], r13",
            "mov qword [rbp - 0x10], r14",
            "mov r12, rsi",
            "mov qword [rbp - 8], r15",
            "mov r13, rcx",
            "mov r14d, r8d",
            "mov r15, r9",
            "je 0x800549e",
            "test rsi, rsi",
            "mov eax, 0",
            "cmove r10d, eax",
            "test r14d, r14d",
            "je 0x80054af",
            "test r13, r13",
            "mov eax, 0",
            "cmove r14d, eax",
            "xor eax, eax",
            "test r10d, r10d",
            "je 0x80054d2",
            "mov rax, r12",
            "mov edx, 1",
            "shr rax, 0xc",
            "sub edx, eax",
            "mov eax, r10d",
            "lea rax, [r12 + rax - 1]",
            "shr rax, 0xc",
            "add eax, edx",
            "xor esi, esi",
            "test r14d, r14d",
            "je 0x80054f3",
            "mov rdx, r13",
            "mov sil, 1",
            "shr rdx, 0xc",
            "sub esi, edx",
            "mov edx, r14d",
            "lea rdx, [r13 + rdx - 1]",
            "shr rdx, 0xc",
            "add esi, edx",
            "cmp r12, r13",
            "je 0x8005680",
            "add esi, eax",
            "mov dword [rbx + 0xbc], esi",
            "cmp dword [rbx + 0xb8], esi",
            "mov dword [rbx + 0xc0], eax",
            "jb 0x8005600",
            "cmp r12, r13",
            "je 0x8005620",
            "mov rax, qword [rbp + 0x18]",
            "mov rdx, qword [rbp + 0x20]",
            "test r12, r12",
            "mov qword [rax], 0",
            "mov qword [rdx], 0",
            "je 0x8005581",
            "mov rsi, qword [rbp + 0x10]",
            "mov r9, qword [rbx + 0xd0]",
            "xor edx, edx",
            "mov ecx, dword [rbx + 0xc0]",
            "mov r8, qword [rbx + 0xc8]",
            "mov rdi, r12",
            "mov qword [rsp], r15",
            "mov qword [rsp + 8], rsi",
            "mov esi, r10d",
            "call __get_userbuf",
            "test eax, eax",
            "mov r9d, eax",
            "jne cryptodev_verbosity",
            "mov rax, qword [rbx + 0xd0]",
            "mov rdx, qword [rbp + 0x18]",
            "mov qword [rdx], rax",
            "test r13, r13",
            "je 0x80055dc",
            "mov eax, dword [rbx + 0xc0]",
            "mov rsi, qword [rbp + 0x20]",
            "mov rdi, r13",
            "mov rdx, qword [rbx + 0xc8]",
            "mov ecx, dword [rbx + 0xbc]",
            "mov r9, rax",
            "lea r8, [rdx + rax*8]",
            "sub ecx, eax",
            "shl r9, 5",
            "add r9, qword [rbx + 0xd0]",
            "mov edx, 1",
            "mov qword [rsi], r9",
            "mov rsi, qword [rbp + 0x10]",
            "mov qword [rsp], r15",
            "mov qword [rsp + 8], rsi",
            "mov esi, r14d",
            "call __get_userbuf",
            "test eax, eax",
            "mov r9d, eax",
            "jne cryptodev_verbosity",
            "xor r9d, r9d",
            "mov eax, r9d",
            "mov rbx, qword [rbp - 0x28]",
            "mov r12, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov rdi, rbx",
            "mov dword [rbp - 0x38], r10d",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r9d, eax",
            "mov r10d, dword [rbp - 0x38]",
            "jne 0x80055df",
            "cmp r12, r13",
            "jne 0x800551f",
            "mov rax, qword [rbp + 0x10]",
            "mov r9, qword [rbx + 0xd0]",
            "cmp r14d, r10d",
            "mov ecx, dword [rbx + 0xbc]",
            "mov r8, qword [rbx + 0xc8]",
            "mov esi, r10d",
            "cmovae esi, r14d",
            "mov qword [rsp], r15",
            "mov edx, 1",
            "mov qword [rsp + 8], rax",
            "mov rdi, r12",
            "call __get_userbuf",
            "test eax, eax",
            "mov r9d, eax",
            "jne cryptodev_verbosity",
            "mov rax, qword [rbx + 0xd0]",
            "mov rdx, qword [rbp + 0x20]",
            "mov rsi, qword [rbp + 0x18]",
            "mov qword [rdx], rax",
            "mov qword [rsi], rax",
            "jmp 0x80055df",
            "cmp esi, eax",
            "cmovl esi, eax",
            "xor eax, eax",
            "mov dword [rbx + 0xbc], esi",
            "jmp 0x8005504",
            "cmp dword [0x08005699], 0",
            "jle 0x80055df",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xba",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov dword [rbp - 0x38], r9d",
            "call printk",
            "mov r9d, dword [rbp - 0x38]",
            "jmp 0x80055df",
            "cmp dword [0x080056e4], 0",
            "jg 0x8005746",
            "mov rdi, rbx",
            "mov dword [rbp - 0x38], r9d",
            "call release_user_pages",
            "mov r9d, dword [rbp - 0x38]",
            "jmp 0x80055df",
            "cmp dword [0x08005702], 0",
            "jle 0x80055df",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xac",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov dword [rbp - 0x38], r9d",
            "call printk",
            "mov r9d, dword [rbp - 0x38]",
            "jmp 0x80055df",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xc9",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov dword [rbp - 0x38], r9d",
            "call printk",
            "mov r9d, dword [rbp - 0x38]",
            "jmp 0x80056e6"
        ]
    },
    "unk.0x80056d4": {
        "function_address": "0x080056d4",
        "instructions": [
            "push rbp",
            "mov r10d, edx",
            "mov rbp, rsp",
            "sub rsp, 0x50",
            "test edx, edx",
            "mov qword [rbp - 0x28], rbx",
            "mov qword [rbp - 0x20], r12",
            "mov rbx, rdi",
            "mov qword [rbp - 0x18], r13",
            "mov qword [rbp - 0x10], r14",
            "mov r12, rsi",
            "mov qword [rbp - 8], r15",
            "mov r13, rcx",
            "mov r14d, r8d",
            "mov r15, r9",
            "je 0x800549e",
            "test rsi, rsi",
            "mov eax, 0",
            "cmove r10d, eax",
            "test r14d, r14d",
            "je 0x80054af",
            "test r13, r13",
            "mov eax, 0",
            "cmove r14d, eax",
            "xor eax, eax",
            "test r10d, r10d",
            "je 0x80054d2",
            "mov rax, r12",
            "mov edx, 1",
            "shr rax, 0xc",
            "sub edx, eax",
            "mov eax, r10d",
            "lea rax, [r12 + rax - 1]",
            "shr rax, 0xc",
            "add eax, edx",
            "xor esi, esi",
            "test r14d, r14d",
            "je 0x80054f3",
            "mov rdx, r13",
            "mov sil, 1",
            "shr rdx, 0xc",
            "sub esi, edx",
            "mov edx, r14d",
            "lea rdx, [r13 + rdx - 1]",
            "shr rdx, 0xc",
            "add esi, edx",
            "cmp r12, r13",
            "je 0x8005680",
            "add esi, eax",
            "mov dword [rbx + 0xbc], esi",
            "cmp dword [rbx + 0xb8], esi",
            "mov dword [rbx + 0xc0], eax",
            "jb 0x8005600",
            "cmp r12, r13",
            "je 0x8005620",
            "mov rax, qword [rbp + 0x18]",
            "mov rdx, qword [rbp + 0x20]",
            "test r12, r12",
            "mov qword [rax], 0",
            "mov qword [rdx], 0",
            "je 0x8005581",
            "mov rsi, qword [rbp + 0x10]",
            "mov r9, qword [rbx + 0xd0]",
            "xor edx, edx",
            "mov ecx, dword [rbx + 0xc0]",
            "mov r8, qword [rbx + 0xc8]",
            "mov rdi, r12",
            "mov qword [rsp], r15",
            "mov qword [rsp + 8], rsi",
            "mov esi, r10d",
            "call __get_userbuf",
            "test eax, eax",
            "mov r9d, eax",
            "jne cryptodev_verbosity",
            "mov rax, qword [rbx + 0xd0]",
            "mov rdx, qword [rbp + 0x18]",
            "mov qword [rdx], rax",
            "test r13, r13",
            "je 0x80055dc",
            "mov eax, dword [rbx + 0xc0]",
            "mov rsi, qword [rbp + 0x20]",
            "mov rdi, r13",
            "mov rdx, qword [rbx + 0xc8]",
            "mov ecx, dword [rbx + 0xbc]",
            "mov r9, rax",
            "lea r8, [rdx + rax*8]",
            "sub ecx, eax",
            "shl r9, 5",
            "add r9, qword [rbx + 0xd0]",
            "mov edx, 1",
            "mov qword [rsi], r9",
            "mov rsi, qword [rbp + 0x10]",
            "mov qword [rsp], r15",
            "mov qword [rsp + 8], rsi",
            "mov esi, r14d",
            "call __get_userbuf",
            "test eax, eax",
            "mov r9d, eax",
            "jne cryptodev_verbosity",
            "xor r9d, r9d",
            "mov eax, r9d",
            "mov rbx, qword [rbp - 0x28]",
            "mov r12, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov rdi, rbx",
            "mov dword [rbp - 0x38], r10d",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r9d, eax",
            "mov r10d, dword [rbp - 0x38]",
            "jne 0x80055df",
            "cmp r12, r13",
            "jne 0x800551f",
            "mov rax, qword [rbp + 0x10]",
            "mov r9, qword [rbx + 0xd0]",
            "cmp r14d, r10d",
            "mov ecx, dword [rbx + 0xbc]",
            "mov r8, qword [rbx + 0xc8]",
            "mov esi, r10d",
            "cmovae esi, r14d",
            "mov qword [rsp], r15",
            "mov edx, 1",
            "mov qword [rsp + 8], rax",
            "mov rdi, r12",
            "call __get_userbuf",
            "test eax, eax",
            "mov r9d, eax",
            "jne cryptodev_verbosity",
            "mov rax, qword [rbx + 0xd0]",
            "mov rdx, qword [rbp + 0x20]",
            "mov rsi, qword [rbp + 0x18]",
            "mov qword [rdx], rax",
            "mov qword [rsi], rax",
            "jmp 0x80055df",
            "cmp esi, eax",
            "cmovl esi, eax",
            "xor eax, eax",
            "mov dword [rbx + 0xbc], esi",
            "jmp 0x8005504",
            "cmp dword [0x08005699], 0",
            "jle 0x80055df",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xba",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov dword [rbp - 0x38], r9d",
            "call printk",
            "mov r9d, dword [rbp - 0x38]",
            "jmp 0x80055df",
            "cmp dword [0x080056e4], 0",
            "jg 0x8005746",
            "mov rdi, rbx",
            "mov dword [rbp - 0x38], r9d",
            "call release_user_pages",
            "mov r9d, dword [rbp - 0x38]",
            "jmp 0x80055df",
            "cmp dword [0x08005702], 0",
            "jle 0x80055df",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xac",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov dword [rbp - 0x38], r9d",
            "call printk",
            "mov r9d, dword [rbp - 0x38]",
            "jmp 0x80055df",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xc9",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov dword [rbp - 0x38], r9d",
            "call printk",
            "mov r9d, dword [rbp - 0x38]",
            "jmp 0x80056e6"
        ]
    },
    "unk.0x80056f2": {
        "function_address": "0x080056f2",
        "instructions": [
            "push rbp",
            "mov r10d, edx",
            "mov rbp, rsp",
            "sub rsp, 0x50",
            "test edx, edx",
            "mov qword [rbp - 0x28], rbx",
            "mov qword [rbp - 0x20], r12",
            "mov rbx, rdi",
            "mov qword [rbp - 0x18], r13",
            "mov qword [rbp - 0x10], r14",
            "mov r12, rsi",
            "mov qword [rbp - 8], r15",
            "mov r13, rcx",
            "mov r14d, r8d",
            "mov r15, r9",
            "je 0x800549e",
            "test rsi, rsi",
            "mov eax, 0",
            "cmove r10d, eax",
            "test r14d, r14d",
            "je 0x80054af",
            "test r13, r13",
            "mov eax, 0",
            "cmove r14d, eax",
            "xor eax, eax",
            "test r10d, r10d",
            "je 0x80054d2",
            "mov rax, r12",
            "mov edx, 1",
            "shr rax, 0xc",
            "sub edx, eax",
            "mov eax, r10d",
            "lea rax, [r12 + rax - 1]",
            "shr rax, 0xc",
            "add eax, edx",
            "xor esi, esi",
            "test r14d, r14d",
            "je 0x80054f3",
            "mov rdx, r13",
            "mov sil, 1",
            "shr rdx, 0xc",
            "sub esi, edx",
            "mov edx, r14d",
            "lea rdx, [r13 + rdx - 1]",
            "shr rdx, 0xc",
            "add esi, edx",
            "cmp r12, r13",
            "je 0x8005680",
            "add esi, eax",
            "mov dword [rbx + 0xbc], esi",
            "cmp dword [rbx + 0xb8], esi",
            "mov dword [rbx + 0xc0], eax",
            "jb 0x8005600",
            "cmp r12, r13",
            "je 0x8005620",
            "mov rax, qword [rbp + 0x18]",
            "mov rdx, qword [rbp + 0x20]",
            "test r12, r12",
            "mov qword [rax], 0",
            "mov qword [rdx], 0",
            "je 0x8005581",
            "mov rsi, qword [rbp + 0x10]",
            "mov r9, qword [rbx + 0xd0]",
            "xor edx, edx",
            "mov ecx, dword [rbx + 0xc0]",
            "mov r8, qword [rbx + 0xc8]",
            "mov rdi, r12",
            "mov qword [rsp], r15",
            "mov qword [rsp + 8], rsi",
            "mov esi, r10d",
            "call __get_userbuf",
            "test eax, eax",
            "mov r9d, eax",
            "jne cryptodev_verbosity",
            "mov rax, qword [rbx + 0xd0]",
            "mov rdx, qword [rbp + 0x18]",
            "mov qword [rdx], rax",
            "test r13, r13",
            "je 0x80055dc",
            "mov eax, dword [rbx + 0xc0]",
            "mov rsi, qword [rbp + 0x20]",
            "mov rdi, r13",
            "mov rdx, qword [rbx + 0xc8]",
            "mov ecx, dword [rbx + 0xbc]",
            "mov r9, rax",
            "lea r8, [rdx + rax*8]",
            "sub ecx, eax",
            "shl r9, 5",
            "add r9, qword [rbx + 0xd0]",
            "mov edx, 1",
            "mov qword [rsi], r9",
            "mov rsi, qword [rbp + 0x10]",
            "mov qword [rsp], r15",
            "mov qword [rsp + 8], rsi",
            "mov esi, r14d",
            "call __get_userbuf",
            "test eax, eax",
            "mov r9d, eax",
            "jne cryptodev_verbosity",
            "xor r9d, r9d",
            "mov eax, r9d",
            "mov rbx, qword [rbp - 0x28]",
            "mov r12, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov rdi, rbx",
            "mov dword [rbp - 0x38], r10d",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r9d, eax",
            "mov r10d, dword [rbp - 0x38]",
            "jne 0x80055df",
            "cmp r12, r13",
            "jne 0x800551f",
            "mov rax, qword [rbp + 0x10]",
            "mov r9, qword [rbx + 0xd0]",
            "cmp r14d, r10d",
            "mov ecx, dword [rbx + 0xbc]",
            "mov r8, qword [rbx + 0xc8]",
            "mov esi, r10d",
            "cmovae esi, r14d",
            "mov qword [rsp], r15",
            "mov edx, 1",
            "mov qword [rsp + 8], rax",
            "mov rdi, r12",
            "call __get_userbuf",
            "test eax, eax",
            "mov r9d, eax",
            "jne cryptodev_verbosity",
            "mov rax, qword [rbx + 0xd0]",
            "mov rdx, qword [rbp + 0x20]",
            "mov rsi, qword [rbp + 0x18]",
            "mov qword [rdx], rax",
            "mov qword [rsi], rax",
            "jmp 0x80055df",
            "cmp esi, eax",
            "cmovl esi, eax",
            "xor eax, eax",
            "mov dword [rbx + 0xbc], esi",
            "jmp 0x8005504",
            "cmp dword [0x08005699], 0",
            "jle 0x80055df",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xba",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov dword [rbp - 0x38], r9d",
            "call printk",
            "mov r9d, dword [rbp - 0x38]",
            "jmp 0x80055df",
            "cmp dword [0x080056e4], 0",
            "jg 0x8005746",
            "mov rdi, rbx",
            "mov dword [rbp - 0x38], r9d",
            "call release_user_pages",
            "mov r9d, dword [rbp - 0x38]",
            "jmp 0x80055df",
            "cmp dword [0x08005702], 0",
            "jle 0x80055df",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xac",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov dword [rbp - 0x38], r9d",
            "call printk",
            "mov r9d, dword [rbp - 0x38]",
            "jmp 0x80055df",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xc9",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov dword [rbp - 0x38], r9d",
            "call printk",
            "mov r9d, dword [rbp - 0x38]",
            "jmp 0x80056e6"
        ]
    },
    "unk.0x800573d": {
        "function_address": "0x0800573d",
        "instructions": [
            "push rbp",
            "mov r10d, edx",
            "mov rbp, rsp",
            "sub rsp, 0x50",
            "test edx, edx",
            "mov qword [rbp - 0x28], rbx",
            "mov qword [rbp - 0x20], r12",
            "mov rbx, rdi",
            "mov qword [rbp - 0x18], r13",
            "mov qword [rbp - 0x10], r14",
            "mov r12, rsi",
            "mov qword [rbp - 8], r15",
            "mov r13, rcx",
            "mov r14d, r8d",
            "mov r15, r9",
            "je 0x800549e",
            "test rsi, rsi",
            "mov eax, 0",
            "cmove r10d, eax",
            "test r14d, r14d",
            "je 0x80054af",
            "test r13, r13",
            "mov eax, 0",
            "cmove r14d, eax",
            "xor eax, eax",
            "test r10d, r10d",
            "je 0x80054d2",
            "mov rax, r12",
            "mov edx, 1",
            "shr rax, 0xc",
            "sub edx, eax",
            "mov eax, r10d",
            "lea rax, [r12 + rax - 1]",
            "shr rax, 0xc",
            "add eax, edx",
            "xor esi, esi",
            "test r14d, r14d",
            "je 0x80054f3",
            "mov rdx, r13",
            "mov sil, 1",
            "shr rdx, 0xc",
            "sub esi, edx",
            "mov edx, r14d",
            "lea rdx, [r13 + rdx - 1]",
            "shr rdx, 0xc",
            "add esi, edx",
            "cmp r12, r13",
            "je 0x8005680",
            "add esi, eax",
            "mov dword [rbx + 0xbc], esi",
            "cmp dword [rbx + 0xb8], esi",
            "mov dword [rbx + 0xc0], eax",
            "jb 0x8005600",
            "cmp r12, r13",
            "je 0x8005620",
            "mov rax, qword [rbp + 0x18]",
            "mov rdx, qword [rbp + 0x20]",
            "test r12, r12",
            "mov qword [rax], 0",
            "mov qword [rdx], 0",
            "je 0x8005581",
            "mov rsi, qword [rbp + 0x10]",
            "mov r9, qword [rbx + 0xd0]",
            "xor edx, edx",
            "mov ecx, dword [rbx + 0xc0]",
            "mov r8, qword [rbx + 0xc8]",
            "mov rdi, r12",
            "mov qword [rsp], r15",
            "mov qword [rsp + 8], rsi",
            "mov esi, r10d",
            "call __get_userbuf",
            "test eax, eax",
            "mov r9d, eax",
            "jne cryptodev_verbosity",
            "mov rax, qword [rbx + 0xd0]",
            "mov rdx, qword [rbp + 0x18]",
            "mov qword [rdx], rax",
            "test r13, r13",
            "je 0x80055dc",
            "mov eax, dword [rbx + 0xc0]",
            "mov rsi, qword [rbp + 0x20]",
            "mov rdi, r13",
            "mov rdx, qword [rbx + 0xc8]",
            "mov ecx, dword [rbx + 0xbc]",
            "mov r9, rax",
            "lea r8, [rdx + rax*8]",
            "sub ecx, eax",
            "shl r9, 5",
            "add r9, qword [rbx + 0xd0]",
            "mov edx, 1",
            "mov qword [rsi], r9",
            "mov rsi, qword [rbp + 0x10]",
            "mov qword [rsp], r15",
            "mov qword [rsp + 8], rsi",
            "mov esi, r14d",
            "call __get_userbuf",
            "test eax, eax",
            "mov r9d, eax",
            "jne cryptodev_verbosity",
            "xor r9d, r9d",
            "mov eax, r9d",
            "mov rbx, qword [rbp - 0x28]",
            "mov r12, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov rdi, rbx",
            "mov dword [rbp - 0x38], r10d",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r9d, eax",
            "mov r10d, dword [rbp - 0x38]",
            "jne 0x80055df",
            "cmp r12, r13",
            "jne 0x800551f",
            "mov rax, qword [rbp + 0x10]",
            "mov r9, qword [rbx + 0xd0]",
            "cmp r14d, r10d",
            "mov ecx, dword [rbx + 0xbc]",
            "mov r8, qword [rbx + 0xc8]",
            "mov esi, r10d",
            "cmovae esi, r14d",
            "mov qword [rsp], r15",
            "mov edx, 1",
            "mov qword [rsp + 8], rax",
            "mov rdi, r12",
            "call __get_userbuf",
            "test eax, eax",
            "mov r9d, eax",
            "jne cryptodev_verbosity",
            "mov rax, qword [rbx + 0xd0]",
            "mov rdx, qword [rbp + 0x20]",
            "mov rsi, qword [rbp + 0x18]",
            "mov qword [rdx], rax",
            "mov qword [rsi], rax",
            "jmp 0x80055df",
            "cmp esi, eax",
            "cmovl esi, eax",
            "xor eax, eax",
            "mov dword [rbx + 0xbc], esi",
            "jmp 0x8005504",
            "cmp dword [0x08005699], 0",
            "jle 0x80055df",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xba",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov dword [rbp - 0x38], r9d",
            "call printk",
            "mov r9d, dword [rbp - 0x38]",
            "jmp 0x80055df",
            "cmp dword [0x080056e4], 0",
            "jg 0x8005746",
            "mov rdi, rbx",
            "mov dword [rbp - 0x38], r9d",
            "call release_user_pages",
            "mov r9d, dword [rbp - 0x38]",
            "jmp 0x80055df",
            "cmp dword [0x08005702], 0",
            "jle 0x80055df",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xac",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov dword [rbp - 0x38], r9d",
            "call printk",
            "mov r9d, dword [rbp - 0x38]",
            "jmp 0x80055df",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xc9",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov dword [rbp - 0x38], r9d",
            "call printk",
            "mov r9d, dword [rbp - 0x38]",
            "jmp 0x80056e6"
        ]
    },
    "unk.0x800577b": {
        "function_address": "0x0800577b",
        "instructions": [
            "push rbp",
            "mov r10d, edx",
            "mov rbp, rsp",
            "sub rsp, 0x50",
            "test edx, edx",
            "mov qword [rbp - 0x28], rbx",
            "mov qword [rbp - 0x20], r12",
            "mov rbx, rdi",
            "mov qword [rbp - 0x18], r13",
            "mov qword [rbp - 0x10], r14",
            "mov r12, rsi",
            "mov qword [rbp - 8], r15",
            "mov r13, rcx",
            "mov r14d, r8d",
            "mov r15, r9",
            "je 0x800549e",
            "test rsi, rsi",
            "mov eax, 0",
            "cmove r10d, eax",
            "test r14d, r14d",
            "je 0x80054af",
            "test r13, r13",
            "mov eax, 0",
            "cmove r14d, eax",
            "xor eax, eax",
            "test r10d, r10d",
            "je 0x80054d2",
            "mov rax, r12",
            "mov edx, 1",
            "shr rax, 0xc",
            "sub edx, eax",
            "mov eax, r10d",
            "lea rax, [r12 + rax - 1]",
            "shr rax, 0xc",
            "add eax, edx",
            "xor esi, esi",
            "test r14d, r14d",
            "je 0x80054f3",
            "mov rdx, r13",
            "mov sil, 1",
            "shr rdx, 0xc",
            "sub esi, edx",
            "mov edx, r14d",
            "lea rdx, [r13 + rdx - 1]",
            "shr rdx, 0xc",
            "add esi, edx",
            "cmp r12, r13",
            "je 0x8005680",
            "add esi, eax",
            "mov dword [rbx + 0xbc], esi",
            "cmp dword [rbx + 0xb8], esi",
            "mov dword [rbx + 0xc0], eax",
            "jb 0x8005600",
            "cmp r12, r13",
            "je 0x8005620",
            "mov rax, qword [rbp + 0x18]",
            "mov rdx, qword [rbp + 0x20]",
            "test r12, r12",
            "mov qword [rax], 0",
            "mov qword [rdx], 0",
            "je 0x8005581",
            "mov rsi, qword [rbp + 0x10]",
            "mov r9, qword [rbx + 0xd0]",
            "xor edx, edx",
            "mov ecx, dword [rbx + 0xc0]",
            "mov r8, qword [rbx + 0xc8]",
            "mov rdi, r12",
            "mov qword [rsp], r15",
            "mov qword [rsp + 8], rsi",
            "mov esi, r10d",
            "call __get_userbuf",
            "test eax, eax",
            "mov r9d, eax",
            "jne cryptodev_verbosity",
            "mov rax, qword [rbx + 0xd0]",
            "mov rdx, qword [rbp + 0x18]",
            "mov qword [rdx], rax",
            "test r13, r13",
            "je 0x80055dc",
            "mov eax, dword [rbx + 0xc0]",
            "mov rsi, qword [rbp + 0x20]",
            "mov rdi, r13",
            "mov rdx, qword [rbx + 0xc8]",
            "mov ecx, dword [rbx + 0xbc]",
            "mov r9, rax",
            "lea r8, [rdx + rax*8]",
            "sub ecx, eax",
            "shl r9, 5",
            "add r9, qword [rbx + 0xd0]",
            "mov edx, 1",
            "mov qword [rsi], r9",
            "mov rsi, qword [rbp + 0x10]",
            "mov qword [rsp], r15",
            "mov qword [rsp + 8], rsi",
            "mov esi, r14d",
            "call __get_userbuf",
            "test eax, eax",
            "mov r9d, eax",
            "jne cryptodev_verbosity",
            "xor r9d, r9d",
            "mov eax, r9d",
            "mov rbx, qword [rbp - 0x28]",
            "mov r12, qword [rbp - 0x20]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov rdi, rbx",
            "mov dword [rbp - 0x38], r10d",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r9d, eax",
            "mov r10d, dword [rbp - 0x38]",
            "jne 0x80055df",
            "cmp r12, r13",
            "jne 0x800551f",
            "mov rax, qword [rbp + 0x10]",
            "mov r9, qword [rbx + 0xd0]",
            "cmp r14d, r10d",
            "mov ecx, dword [rbx + 0xbc]",
            "mov r8, qword [rbx + 0xc8]",
            "mov esi, r10d",
            "cmovae esi, r14d",
            "mov qword [rsp], r15",
            "mov edx, 1",
            "mov qword [rsp + 8], rax",
            "mov rdi, r12",
            "call __get_userbuf",
            "test eax, eax",
            "mov r9d, eax",
            "jne cryptodev_verbosity",
            "mov rax, qword [rbx + 0xd0]",
            "mov rdx, qword [rbp + 0x20]",
            "mov rsi, qword [rbp + 0x18]",
            "mov qword [rdx], rax",
            "mov qword [rsi], rax",
            "jmp 0x80055df",
            "cmp esi, eax",
            "cmovl esi, eax",
            "xor eax, eax",
            "mov dword [rbx + 0xbc], esi",
            "jmp 0x8005504",
            "cmp dword [0x08005699], 0",
            "jle 0x80055df",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xba",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov dword [rbp - 0x38], r9d",
            "call printk",
            "mov r9d, dword [rbp - 0x38]",
            "jmp 0x80055df",
            "cmp dword [0x080056e4], 0",
            "jg 0x8005746",
            "mov rdi, rbx",
            "mov dword [rbp - 0x38], r9d",
            "call release_user_pages",
            "mov r9d, dword [rbp - 0x38]",
            "jmp 0x80055df",
            "cmp dword [0x08005702], 0",
            "jle 0x80055df",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xac",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov dword [rbp - 0x38], r9d",
            "call printk",
            "mov r9d, dword [rbp - 0x38]",
            "jmp 0x80055df",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xc9",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov dword [rbp - 0x38], r9d",
            "call printk",
            "mov r9d, dword [rbp - 0x38]",
            "jmp 0x80056e6"
        ]
    },
    "sym.crypto_auth_run": {
        "function_address": "0x080043c0",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x88",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r15, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [r15 + 0x88]",
            "test eax, eax",
            "je 0x8004427",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "lea r13, [rbx + 0x50]",
            "cmovle edx, dword [rbx + 0x4c]",
            "lea r14, [r15 + 0x78]",
            "mov eax, 0x10",
            "mov rsi, r13",
            "mov rdi, r14",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "test byte [rbx + 6], 0x20",
            "jne 0x8004640",
            "cmp dword [rbx + 0xc], 0x1000",
            "ja cryptodev_verbosity",
            "xor esi, esi",
            "mov edi, 0xd0",
            "call __get_free_pages",
            "test rax, rax",
            "mov qword [rbp - 0x70], rax",
            "je cryptodev_verbosity",
            "mov rsi, qword [rbx + 0x10]",
            "test rsi, rsi",
            "je 0x8004a08",
            "mov edx, dword [rbx + 0xc]",
            "xor r11d, r11d",
            "test edx, edx",
            "jne _copy_from_user",
            "test byte [rbx + 6], 0x10",
            "je 0x80044b3",
            "mov r12d, dword [r15 + 0x40]",
            "test r12d, r12d",
            "je 0x80047a0",
            "mov r10d, dword [r15 + 0x38]",
            "test r10d, r10d",
            "je cryptodev_verbosity",
            "cmp qword [r15 + 0x40], 0",
            "je cryptodev_verbosity",
            "lea rax, [rbp - 0x60]",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, dword [rbx + 8]",
            "mov rsi, qword [rbx + 0x18]",
            "mov r9, qword [rbx + 0x60]",
            "mov rdi, r15",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x58]",
            "mov r8d, dword [rbx + 0x48]",
            "mov qword [rbp - 0x78], r11",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x68]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "mov r12d, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r9d, dword [r15 + 0x38]",
            "mov eax, dword [rbx + 8]",
            "mov rdx, qword [rbp - 0x60]",
            "mov r12, qword [rbp - 0x58]",
            "mov ecx, dword [rbx + 0xc]",
            "test r9d, r9d",
            "mov dword [rbp - 0x64], eax",
            "je 0x8004c66",
            "mov r8d, dword [r15 + 0x40]",
            "test r8d, r8d",
            "je 0x8004c66",
            "mov rax, qword [r15 + 0x60]",
            "mov eax, dword [rax + 0x3c]",
            "mov esi, dword [rbx + 0x30]",
            "cmp esi, eax",
            "ja cryptodev_verbosity",
            "test esi, esi",
            "je 0x8004740",
            "mov edi, dword [r15 + 0x40]",
            "test edi, edi",
            "je 0x8004585",
            "mov rdi, qword [r15 + 0x60]",
            "mov qword [rbp - 0x88], rdx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call crypto_aead_setauthsize",
            "mov rdx, qword [rbp - 0x88]",
            "mov ecx, dword [rbp - 0x80]",
            "mov r11, qword [rbp - 0x78]",
            "mov rax, qword [r15 + 0x68]",
            "test ecx, ecx",
            "mov esi, 0",
            "cmove r11, rsi",
            "mov r8d, dword [rbp - 0x64]",
            "lea rdi, [r15 + 0x38]",
            "mov rsi, r12",
            "mov dword [rax + 0x30], ecx",
            "mov qword [rax + 0x40], r11",
            "cmp word [rbx + 4], 0",
            "mov rcx, r8",
            "mov qword [rbp - 0x78], r8",
            "jne cryptodev_cipher_decrypt",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbp - 0x64]",
            "add r8, qword [rbx + 0x20]",
            "add eax, dword [rbx + 0x30]",
            "mov qword [rbx + 0x28], r8",
            "mov dword [rbx + 0x48], eax",
            "mov rdi, r15",
            "call release_user_pages",
            "mov rdi, qword [rbp - 0x70]",
            "xor esi, esi",
            "call free_pages",
            "test r12d, r12d",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x4c]",
            "mov rsi, r14",
            "mov rdi, r13",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "lea rdi, [r15 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x88",
            "mov eax, r12d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, dword [r15 + 0x38]",
            "test eax, eax",
            "jne 0x8004e22",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004970",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004689",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x800467c",
            "cmp dword [0x08004676], 1",
            "jg current_task",
            "mov r9, qword [rbx + 0x10]",
            "test r9, rdx",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [rbx + 0xc]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rdx, qword [rbx + 0x10]",
            "mov r10, qword [rbx + 0x18]",
            "sub r10, rdx",
            "cmp r10d, 0x100",
            "jbe 0x80048b0",
            "mov eax, dword [0x080046bd]",
            "test eax, eax",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "cmp dword [0x080046d2], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2ea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x30]",
            "mov edx, dword [rbp - 0x64]",
            "sub r8, rax",
            "add r8, qword [rbx + 0x20]",
            "sub edx, eax",
            "mov dword [rbx + 0x48], edx",
            "mov qword [rbx + 0x28], r8",
            "jmp release_user_pages",
            "mov dword [rbx + 0x30], eax",
            "jmp 0x8004585",
            "cmp dword [0x08004757], 1",
            "jle 0x8004689",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "add eax, 1",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r8d, 0x7c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004689",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004bfe",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004810",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x8004810",
            "cmp dword [0x080047ca], 1",
            "jle 0x8004810",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x43",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x78], r11",
            "call printk",
            "mov r11, qword [rbp - 0x78]",
            "nop dword [rax + rax]",
            "movsxd rax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, 1",
            "mov dword [r15 + 0xc0], 0",
            "mov rdi, r15",
            "mov rsi, rcx",
            "lea rax, [rcx + rax - 1]",
            "shr rsi, 0xc",
            "sub edx, esi",
            "shr rax, 0xc",
            "lea ecx, [rdx + rax]",
            "mov dword [r15 + 0xbc], ecx",
            "mov esi, ecx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov ecx, dword [rbp - 0x80]",
            "je 0x8004b46",
            "mov esi, dword [0x08004871]",
            "test esi, esi",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2a0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rcx, rdx",
            "lea rax, [rdx + rax - 1]",
            "mov esi, 1",
            "shr rcx, 0xc",
            "mov rdi, r15",
            "mov qword [rbp - 0x80], r10",
            "sub esi, ecx",
            "shr rax, 0xc",
            "lea r11d, [rsi + rax]",
            "lea esi, [r11 + r11]",
            "mov dword [rbp - 0x78], r11d",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "je 0x8004a70",
            "mov r14d, dword [0x080048f9]",
            "test r14d, r14d",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x92",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rdi, qword [rbp - 0x70]",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "mov edx, dword [rbx + 0xc]",
            "mov rsi, qword [rbp - 0x70]",
            "lea rdi, [rbp - 0x50]",
            "call sg_init_one",
            "lea r11, [rbp - 0x50]",
            "jmp 0x80044a0",
            "cmp qword [rbx + 0x10], 0",
            "jne 0x8004659",
            "mov eax, dword [0x08004981]",
            "test eax, eax",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x72",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "cmp dword [0x080049c7], 0",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x276",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "xor r11d, r11d",
            "jmp 0x80044a0",
            "mov r11d, dword [0x08004a17]",
            "test r11d, r11d",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x80045e5",
            "cmp dword [0x08004a32], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov ecx, r11d",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0xc]",
            "mov edx, 1",
            "mov rdi, qword [rbx + 0x10]",
            "mov qword [rbp - 0x80], r10",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov dword [rbp - 0x78], r11d",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r12, qword [r15 + 0xd0]",
            "movsxd rdi, r11d",
            "mov dword [r15 + 0xbc], r11d",
            "shl rdi, 5",
            "mov esi, r11d",
            "mov dword [r15 + 0xc0], 0",
            "mov qword [rbp - 0x80], r10",
            "add rdi, r12",
            "mov qword [rbp - 0x60], rdi",
            "call sg_init_table",
            "mov edx, dword [rbx + 0xc]",
            "mov rdi, qword [r15 + 0xd0]",
            "mov rsi, qword [rbp - 0x60]",
            "call sg_copy",
            "mov r10, qword [rbp - 0x80]",
            "mov rdi, qword [rbp - 0x60]",
            "mov esi, r10d",
            "call sg_advance",
            "test rax, rax",
            "mov r8, rax",
            "mov qword [rbp - 0x60], rax",
            "je release_user_pages",
            "mov ecx, dword [rbx + 0xc]",
            "mov r9d, dword [rbx + 8]",
            "mov rdx, r12",
            "mov rdi, r15",
            "mov rsi, rbx",
            "call sym.srtp_auth_n_crypt",
            "mov rdi, r15",
            "mov r12d, eax",
            "call release_user_pages",
            "jmp 0x80045f0",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov edx, 1",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0x48]",
            "mov rdi, qword [rbx + 0x20]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r8, qword [r15 + 0xd0]",
            "mov ecx, dword [rbx + 0xc]",
            "mov rdx, r11",
            "mov r9d, dword [rbx + 8]",
            "mov rsi, rbx",
            "mov rdi, r15",
            "mov qword [rbp - 0x60], r8",
            "call sym.tls_auth_n_crypt",
            "mov r12d, eax",
            "jmp release_user_pages",
            "mov rdi, r15",
            "call release_user_pages",
            "mov r13d, dword [0x08004bb9]",
            "test r13d, r13d",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov r12d, 0xffffffea",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004c10], 0",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x8004628",
            "cmp dword [0x08004c28], 0",
            "jle 0x8004c16",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp 0x8004628",
            "xor eax, eax",
            "jmp 0x8004545",
            "cmp dword [0x08004c74], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x80",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004cbd], 0",
            "mov r12d, 0xffffffea",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "cmp dword [0x08004d06], 0",
            "mov r12d, 0xffffffea",
            "js 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2aa",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004d4f], 0",
            "mov r12d, 0xffffffea",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x286",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004d98], 0",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2b2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004ddb], 0",
            "mov r12d, 0xffffffea",
            "js release_user_pages",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "add rax, 0x4b8",
            "mov r9d, esi",
            "mov r8d, 0x241",
            "mov rsi, rax",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [r15 + 0x44], 0",
            "je 0x8004e34",
            "cmp dword [r15 + 0x40], 0",
            "je 0x800464c",
            "cmp dword [0x08004e3b], 0",
            "js 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x270",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004e84], 0",
            "mov r12d, 0xfffffff4",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x28c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r10d",
            "mov r8d, 0x8a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004f0c], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x25a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [0x08004f52], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x250",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004c16",
            "cmp dword [0x08004fd1], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x99",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x0800501a], 0",
            "jle 0x8004a20",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x57",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x79",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov eax, dword [r15 + 0xb4]",
            "mov edx, eax",
            "sub rdx, 1",
            "jmp 0x800467c",
            "cmp dword [0x080050ac], 0",
            "mov r12d, 0xfffffff2",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x292",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x47",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity"
        ]
    },
    "unk.0x80043ee": {
        "function_address": "0x080043ee",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x88",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r15, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [r15 + 0x88]",
            "test eax, eax",
            "je 0x8004427",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "lea r13, [rbx + 0x50]",
            "cmovle edx, dword [rbx + 0x4c]",
            "lea r14, [r15 + 0x78]",
            "mov eax, 0x10",
            "mov rsi, r13",
            "mov rdi, r14",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "test byte [rbx + 6], 0x20",
            "jne 0x8004640",
            "cmp dword [rbx + 0xc], 0x1000",
            "ja cryptodev_verbosity",
            "xor esi, esi",
            "mov edi, 0xd0",
            "call __get_free_pages",
            "test rax, rax",
            "mov qword [rbp - 0x70], rax",
            "je cryptodev_verbosity",
            "mov rsi, qword [rbx + 0x10]",
            "test rsi, rsi",
            "je 0x8004a08",
            "mov edx, dword [rbx + 0xc]",
            "xor r11d, r11d",
            "test edx, edx",
            "jne _copy_from_user",
            "test byte [rbx + 6], 0x10",
            "je 0x80044b3",
            "mov r12d, dword [r15 + 0x40]",
            "test r12d, r12d",
            "je 0x80047a0",
            "mov r10d, dword [r15 + 0x38]",
            "test r10d, r10d",
            "je cryptodev_verbosity",
            "cmp qword [r15 + 0x40], 0",
            "je cryptodev_verbosity",
            "lea rax, [rbp - 0x60]",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, dword [rbx + 8]",
            "mov rsi, qword [rbx + 0x18]",
            "mov r9, qword [rbx + 0x60]",
            "mov rdi, r15",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x58]",
            "mov r8d, dword [rbx + 0x48]",
            "mov qword [rbp - 0x78], r11",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x68]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "mov r12d, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r9d, dword [r15 + 0x38]",
            "mov eax, dword [rbx + 8]",
            "mov rdx, qword [rbp - 0x60]",
            "mov r12, qword [rbp - 0x58]",
            "mov ecx, dword [rbx + 0xc]",
            "test r9d, r9d",
            "mov dword [rbp - 0x64], eax",
            "je 0x8004c66",
            "mov r8d, dword [r15 + 0x40]",
            "test r8d, r8d",
            "je 0x8004c66",
            "mov rax, qword [r15 + 0x60]",
            "mov eax, dword [rax + 0x3c]",
            "mov esi, dword [rbx + 0x30]",
            "cmp esi, eax",
            "ja cryptodev_verbosity",
            "test esi, esi",
            "je 0x8004740",
            "mov edi, dword [r15 + 0x40]",
            "test edi, edi",
            "je 0x8004585",
            "mov rdi, qword [r15 + 0x60]",
            "mov qword [rbp - 0x88], rdx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call crypto_aead_setauthsize",
            "mov rdx, qword [rbp - 0x88]",
            "mov ecx, dword [rbp - 0x80]",
            "mov r11, qword [rbp - 0x78]",
            "mov rax, qword [r15 + 0x68]",
            "test ecx, ecx",
            "mov esi, 0",
            "cmove r11, rsi",
            "mov r8d, dword [rbp - 0x64]",
            "lea rdi, [r15 + 0x38]",
            "mov rsi, r12",
            "mov dword [rax + 0x30], ecx",
            "mov qword [rax + 0x40], r11",
            "cmp word [rbx + 4], 0",
            "mov rcx, r8",
            "mov qword [rbp - 0x78], r8",
            "jne cryptodev_cipher_decrypt",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbp - 0x64]",
            "add r8, qword [rbx + 0x20]",
            "add eax, dword [rbx + 0x30]",
            "mov qword [rbx + 0x28], r8",
            "mov dword [rbx + 0x48], eax",
            "mov rdi, r15",
            "call release_user_pages",
            "mov rdi, qword [rbp - 0x70]",
            "xor esi, esi",
            "call free_pages",
            "test r12d, r12d",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x4c]",
            "mov rsi, r14",
            "mov rdi, r13",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "lea rdi, [r15 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x88",
            "mov eax, r12d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, dword [r15 + 0x38]",
            "test eax, eax",
            "jne 0x8004e22",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004970",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004689",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x800467c",
            "cmp dword [0x08004676], 1",
            "jg current_task",
            "mov r9, qword [rbx + 0x10]",
            "test r9, rdx",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [rbx + 0xc]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rdx, qword [rbx + 0x10]",
            "mov r10, qword [rbx + 0x18]",
            "sub r10, rdx",
            "cmp r10d, 0x100",
            "jbe 0x80048b0",
            "mov eax, dword [0x080046bd]",
            "test eax, eax",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "cmp dword [0x080046d2], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2ea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x30]",
            "mov edx, dword [rbp - 0x64]",
            "sub r8, rax",
            "add r8, qword [rbx + 0x20]",
            "sub edx, eax",
            "mov dword [rbx + 0x48], edx",
            "mov qword [rbx + 0x28], r8",
            "jmp release_user_pages",
            "mov dword [rbx + 0x30], eax",
            "jmp 0x8004585",
            "cmp dword [0x08004757], 1",
            "jle 0x8004689",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "add eax, 1",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r8d, 0x7c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004689",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004bfe",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004810",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x8004810",
            "cmp dword [0x080047ca], 1",
            "jle 0x8004810",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x43",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x78], r11",
            "call printk",
            "mov r11, qword [rbp - 0x78]",
            "nop dword [rax + rax]",
            "movsxd rax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, 1",
            "mov dword [r15 + 0xc0], 0",
            "mov rdi, r15",
            "mov rsi, rcx",
            "lea rax, [rcx + rax - 1]",
            "shr rsi, 0xc",
            "sub edx, esi",
            "shr rax, 0xc",
            "lea ecx, [rdx + rax]",
            "mov dword [r15 + 0xbc], ecx",
            "mov esi, ecx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov ecx, dword [rbp - 0x80]",
            "je 0x8004b46",
            "mov esi, dword [0x08004871]",
            "test esi, esi",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2a0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rcx, rdx",
            "lea rax, [rdx + rax - 1]",
            "mov esi, 1",
            "shr rcx, 0xc",
            "mov rdi, r15",
            "mov qword [rbp - 0x80], r10",
            "sub esi, ecx",
            "shr rax, 0xc",
            "lea r11d, [rsi + rax]",
            "lea esi, [r11 + r11]",
            "mov dword [rbp - 0x78], r11d",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "je 0x8004a70",
            "mov r14d, dword [0x080048f9]",
            "test r14d, r14d",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x92",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rdi, qword [rbp - 0x70]",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "mov edx, dword [rbx + 0xc]",
            "mov rsi, qword [rbp - 0x70]",
            "lea rdi, [rbp - 0x50]",
            "call sg_init_one",
            "lea r11, [rbp - 0x50]",
            "jmp 0x80044a0",
            "cmp qword [rbx + 0x10], 0",
            "jne 0x8004659",
            "mov eax, dword [0x08004981]",
            "test eax, eax",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x72",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "cmp dword [0x080049c7], 0",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x276",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "xor r11d, r11d",
            "jmp 0x80044a0",
            "mov r11d, dword [0x08004a17]",
            "test r11d, r11d",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x80045e5",
            "cmp dword [0x08004a32], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov ecx, r11d",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0xc]",
            "mov edx, 1",
            "mov rdi, qword [rbx + 0x10]",
            "mov qword [rbp - 0x80], r10",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov dword [rbp - 0x78], r11d",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r12, qword [r15 + 0xd0]",
            "movsxd rdi, r11d",
            "mov dword [r15 + 0xbc], r11d",
            "shl rdi, 5",
            "mov esi, r11d",
            "mov dword [r15 + 0xc0], 0",
            "mov qword [rbp - 0x80], r10",
            "add rdi, r12",
            "mov qword [rbp - 0x60], rdi",
            "call sg_init_table",
            "mov edx, dword [rbx + 0xc]",
            "mov rdi, qword [r15 + 0xd0]",
            "mov rsi, qword [rbp - 0x60]",
            "call sg_copy",
            "mov r10, qword [rbp - 0x80]",
            "mov rdi, qword [rbp - 0x60]",
            "mov esi, r10d",
            "call sg_advance",
            "test rax, rax",
            "mov r8, rax",
            "mov qword [rbp - 0x60], rax",
            "je release_user_pages",
            "mov ecx, dword [rbx + 0xc]",
            "mov r9d, dword [rbx + 8]",
            "mov rdx, r12",
            "mov rdi, r15",
            "mov rsi, rbx",
            "call sym.srtp_auth_n_crypt",
            "mov rdi, r15",
            "mov r12d, eax",
            "call release_user_pages",
            "jmp 0x80045f0",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov edx, 1",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0x48]",
            "mov rdi, qword [rbx + 0x20]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r8, qword [r15 + 0xd0]",
            "mov ecx, dword [rbx + 0xc]",
            "mov rdx, r11",
            "mov r9d, dword [rbx + 8]",
            "mov rsi, rbx",
            "mov rdi, r15",
            "mov qword [rbp - 0x60], r8",
            "call sym.tls_auth_n_crypt",
            "mov r12d, eax",
            "jmp release_user_pages",
            "mov rdi, r15",
            "call release_user_pages",
            "mov r13d, dword [0x08004bb9]",
            "test r13d, r13d",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov r12d, 0xffffffea",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004c10], 0",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x8004628",
            "cmp dword [0x08004c28], 0",
            "jle 0x8004c16",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp 0x8004628",
            "xor eax, eax",
            "jmp 0x8004545",
            "cmp dword [0x08004c74], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x80",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004cbd], 0",
            "mov r12d, 0xffffffea",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "cmp dword [0x08004d06], 0",
            "mov r12d, 0xffffffea",
            "js 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2aa",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004d4f], 0",
            "mov r12d, 0xffffffea",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x286",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004d98], 0",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2b2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004ddb], 0",
            "mov r12d, 0xffffffea",
            "js release_user_pages",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "add rax, 0x4b8",
            "mov r9d, esi",
            "mov r8d, 0x241",
            "mov rsi, rax",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [r15 + 0x44], 0",
            "je 0x8004e34",
            "cmp dword [r15 + 0x40], 0",
            "je 0x800464c",
            "cmp dword [0x08004e3b], 0",
            "js 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x270",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004e84], 0",
            "mov r12d, 0xfffffff4",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x28c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r10d",
            "mov r8d, 0x8a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004f0c], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x25a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [0x08004f52], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x250",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004c16",
            "cmp dword [0x08004fd1], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x99",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x0800501a], 0",
            "jle 0x8004a20",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x57",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x79",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov eax, dword [r15 + 0xb4]",
            "mov edx, eax",
            "sub rdx, 1",
            "jmp 0x800467c",
            "cmp dword [0x080050ac], 0",
            "mov r12d, 0xfffffff2",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x292",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x47",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity"
        ]
    },
    "unk.0x800441c": {
        "function_address": "0x0800441c",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x88",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r15, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [r15 + 0x88]",
            "test eax, eax",
            "je 0x8004427",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "lea r13, [rbx + 0x50]",
            "cmovle edx, dword [rbx + 0x4c]",
            "lea r14, [r15 + 0x78]",
            "mov eax, 0x10",
            "mov rsi, r13",
            "mov rdi, r14",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "test byte [rbx + 6], 0x20",
            "jne 0x8004640",
            "cmp dword [rbx + 0xc], 0x1000",
            "ja cryptodev_verbosity",
            "xor esi, esi",
            "mov edi, 0xd0",
            "call __get_free_pages",
            "test rax, rax",
            "mov qword [rbp - 0x70], rax",
            "je cryptodev_verbosity",
            "mov rsi, qword [rbx + 0x10]",
            "test rsi, rsi",
            "je 0x8004a08",
            "mov edx, dword [rbx + 0xc]",
            "xor r11d, r11d",
            "test edx, edx",
            "jne _copy_from_user",
            "test byte [rbx + 6], 0x10",
            "je 0x80044b3",
            "mov r12d, dword [r15 + 0x40]",
            "test r12d, r12d",
            "je 0x80047a0",
            "mov r10d, dword [r15 + 0x38]",
            "test r10d, r10d",
            "je cryptodev_verbosity",
            "cmp qword [r15 + 0x40], 0",
            "je cryptodev_verbosity",
            "lea rax, [rbp - 0x60]",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, dword [rbx + 8]",
            "mov rsi, qword [rbx + 0x18]",
            "mov r9, qword [rbx + 0x60]",
            "mov rdi, r15",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x58]",
            "mov r8d, dword [rbx + 0x48]",
            "mov qword [rbp - 0x78], r11",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x68]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "mov r12d, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r9d, dword [r15 + 0x38]",
            "mov eax, dword [rbx + 8]",
            "mov rdx, qword [rbp - 0x60]",
            "mov r12, qword [rbp - 0x58]",
            "mov ecx, dword [rbx + 0xc]",
            "test r9d, r9d",
            "mov dword [rbp - 0x64], eax",
            "je 0x8004c66",
            "mov r8d, dword [r15 + 0x40]",
            "test r8d, r8d",
            "je 0x8004c66",
            "mov rax, qword [r15 + 0x60]",
            "mov eax, dword [rax + 0x3c]",
            "mov esi, dword [rbx + 0x30]",
            "cmp esi, eax",
            "ja cryptodev_verbosity",
            "test esi, esi",
            "je 0x8004740",
            "mov edi, dword [r15 + 0x40]",
            "test edi, edi",
            "je 0x8004585",
            "mov rdi, qword [r15 + 0x60]",
            "mov qword [rbp - 0x88], rdx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call crypto_aead_setauthsize",
            "mov rdx, qword [rbp - 0x88]",
            "mov ecx, dword [rbp - 0x80]",
            "mov r11, qword [rbp - 0x78]",
            "mov rax, qword [r15 + 0x68]",
            "test ecx, ecx",
            "mov esi, 0",
            "cmove r11, rsi",
            "mov r8d, dword [rbp - 0x64]",
            "lea rdi, [r15 + 0x38]",
            "mov rsi, r12",
            "mov dword [rax + 0x30], ecx",
            "mov qword [rax + 0x40], r11",
            "cmp word [rbx + 4], 0",
            "mov rcx, r8",
            "mov qword [rbp - 0x78], r8",
            "jne cryptodev_cipher_decrypt",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbp - 0x64]",
            "add r8, qword [rbx + 0x20]",
            "add eax, dword [rbx + 0x30]",
            "mov qword [rbx + 0x28], r8",
            "mov dword [rbx + 0x48], eax",
            "mov rdi, r15",
            "call release_user_pages",
            "mov rdi, qword [rbp - 0x70]",
            "xor esi, esi",
            "call free_pages",
            "test r12d, r12d",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x4c]",
            "mov rsi, r14",
            "mov rdi, r13",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "lea rdi, [r15 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x88",
            "mov eax, r12d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, dword [r15 + 0x38]",
            "test eax, eax",
            "jne 0x8004e22",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004970",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004689",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x800467c",
            "cmp dword [0x08004676], 1",
            "jg current_task",
            "mov r9, qword [rbx + 0x10]",
            "test r9, rdx",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [rbx + 0xc]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rdx, qword [rbx + 0x10]",
            "mov r10, qword [rbx + 0x18]",
            "sub r10, rdx",
            "cmp r10d, 0x100",
            "jbe 0x80048b0",
            "mov eax, dword [0x080046bd]",
            "test eax, eax",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "cmp dword [0x080046d2], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2ea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x30]",
            "mov edx, dword [rbp - 0x64]",
            "sub r8, rax",
            "add r8, qword [rbx + 0x20]",
            "sub edx, eax",
            "mov dword [rbx + 0x48], edx",
            "mov qword [rbx + 0x28], r8",
            "jmp release_user_pages",
            "mov dword [rbx + 0x30], eax",
            "jmp 0x8004585",
            "cmp dword [0x08004757], 1",
            "jle 0x8004689",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "add eax, 1",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r8d, 0x7c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004689",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004bfe",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004810",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x8004810",
            "cmp dword [0x080047ca], 1",
            "jle 0x8004810",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x43",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x78], r11",
            "call printk",
            "mov r11, qword [rbp - 0x78]",
            "nop dword [rax + rax]",
            "movsxd rax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, 1",
            "mov dword [r15 + 0xc0], 0",
            "mov rdi, r15",
            "mov rsi, rcx",
            "lea rax, [rcx + rax - 1]",
            "shr rsi, 0xc",
            "sub edx, esi",
            "shr rax, 0xc",
            "lea ecx, [rdx + rax]",
            "mov dword [r15 + 0xbc], ecx",
            "mov esi, ecx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov ecx, dword [rbp - 0x80]",
            "je 0x8004b46",
            "mov esi, dword [0x08004871]",
            "test esi, esi",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2a0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rcx, rdx",
            "lea rax, [rdx + rax - 1]",
            "mov esi, 1",
            "shr rcx, 0xc",
            "mov rdi, r15",
            "mov qword [rbp - 0x80], r10",
            "sub esi, ecx",
            "shr rax, 0xc",
            "lea r11d, [rsi + rax]",
            "lea esi, [r11 + r11]",
            "mov dword [rbp - 0x78], r11d",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "je 0x8004a70",
            "mov r14d, dword [0x080048f9]",
            "test r14d, r14d",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x92",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rdi, qword [rbp - 0x70]",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "mov edx, dword [rbx + 0xc]",
            "mov rsi, qword [rbp - 0x70]",
            "lea rdi, [rbp - 0x50]",
            "call sg_init_one",
            "lea r11, [rbp - 0x50]",
            "jmp 0x80044a0",
            "cmp qword [rbx + 0x10], 0",
            "jne 0x8004659",
            "mov eax, dword [0x08004981]",
            "test eax, eax",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x72",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "cmp dword [0x080049c7], 0",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x276",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "xor r11d, r11d",
            "jmp 0x80044a0",
            "mov r11d, dword [0x08004a17]",
            "test r11d, r11d",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x80045e5",
            "cmp dword [0x08004a32], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov ecx, r11d",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0xc]",
            "mov edx, 1",
            "mov rdi, qword [rbx + 0x10]",
            "mov qword [rbp - 0x80], r10",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov dword [rbp - 0x78], r11d",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r12, qword [r15 + 0xd0]",
            "movsxd rdi, r11d",
            "mov dword [r15 + 0xbc], r11d",
            "shl rdi, 5",
            "mov esi, r11d",
            "mov dword [r15 + 0xc0], 0",
            "mov qword [rbp - 0x80], r10",
            "add rdi, r12",
            "mov qword [rbp - 0x60], rdi",
            "call sg_init_table",
            "mov edx, dword [rbx + 0xc]",
            "mov rdi, qword [r15 + 0xd0]",
            "mov rsi, qword [rbp - 0x60]",
            "call sg_copy",
            "mov r10, qword [rbp - 0x80]",
            "mov rdi, qword [rbp - 0x60]",
            "mov esi, r10d",
            "call sg_advance",
            "test rax, rax",
            "mov r8, rax",
            "mov qword [rbp - 0x60], rax",
            "je release_user_pages",
            "mov ecx, dword [rbx + 0xc]",
            "mov r9d, dword [rbx + 8]",
            "mov rdx, r12",
            "mov rdi, r15",
            "mov rsi, rbx",
            "call sym.srtp_auth_n_crypt",
            "mov rdi, r15",
            "mov r12d, eax",
            "call release_user_pages",
            "jmp 0x80045f0",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov edx, 1",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0x48]",
            "mov rdi, qword [rbx + 0x20]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r8, qword [r15 + 0xd0]",
            "mov ecx, dword [rbx + 0xc]",
            "mov rdx, r11",
            "mov r9d, dword [rbx + 8]",
            "mov rsi, rbx",
            "mov rdi, r15",
            "mov qword [rbp - 0x60], r8",
            "call sym.tls_auth_n_crypt",
            "mov r12d, eax",
            "jmp release_user_pages",
            "mov rdi, r15",
            "call release_user_pages",
            "mov r13d, dword [0x08004bb9]",
            "test r13d, r13d",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov r12d, 0xffffffea",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004c10], 0",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x8004628",
            "cmp dword [0x08004c28], 0",
            "jle 0x8004c16",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp 0x8004628",
            "xor eax, eax",
            "jmp 0x8004545",
            "cmp dword [0x08004c74], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x80",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004cbd], 0",
            "mov r12d, 0xffffffea",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "cmp dword [0x08004d06], 0",
            "mov r12d, 0xffffffea",
            "js 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2aa",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004d4f], 0",
            "mov r12d, 0xffffffea",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x286",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004d98], 0",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2b2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004ddb], 0",
            "mov r12d, 0xffffffea",
            "js release_user_pages",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "add rax, 0x4b8",
            "mov r9d, esi",
            "mov r8d, 0x241",
            "mov rsi, rax",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [r15 + 0x44], 0",
            "je 0x8004e34",
            "cmp dword [r15 + 0x40], 0",
            "je 0x800464c",
            "cmp dword [0x08004e3b], 0",
            "js 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x270",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004e84], 0",
            "mov r12d, 0xfffffff4",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x28c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r10d",
            "mov r8d, 0x8a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004f0c], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x25a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [0x08004f52], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x250",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004c16",
            "cmp dword [0x08004fd1], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x99",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x0800501a], 0",
            "jle 0x8004a20",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x57",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x79",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov eax, dword [r15 + 0xb4]",
            "mov edx, eax",
            "sub rdx, 1",
            "jmp 0x800467c",
            "cmp dword [0x080050ac], 0",
            "mov r12d, 0xfffffff2",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x292",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x47",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity"
        ]
    },
    "unk.0x8004455": {
        "function_address": "0x08004455",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x88",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r15, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [r15 + 0x88]",
            "test eax, eax",
            "je 0x8004427",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "lea r13, [rbx + 0x50]",
            "cmovle edx, dword [rbx + 0x4c]",
            "lea r14, [r15 + 0x78]",
            "mov eax, 0x10",
            "mov rsi, r13",
            "mov rdi, r14",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "test byte [rbx + 6], 0x20",
            "jne 0x8004640",
            "cmp dword [rbx + 0xc], 0x1000",
            "ja cryptodev_verbosity",
            "xor esi, esi",
            "mov edi, 0xd0",
            "call __get_free_pages",
            "test rax, rax",
            "mov qword [rbp - 0x70], rax",
            "je cryptodev_verbosity",
            "mov rsi, qword [rbx + 0x10]",
            "test rsi, rsi",
            "je 0x8004a08",
            "mov edx, dword [rbx + 0xc]",
            "xor r11d, r11d",
            "test edx, edx",
            "jne _copy_from_user",
            "test byte [rbx + 6], 0x10",
            "je 0x80044b3",
            "mov r12d, dword [r15 + 0x40]",
            "test r12d, r12d",
            "je 0x80047a0",
            "mov r10d, dword [r15 + 0x38]",
            "test r10d, r10d",
            "je cryptodev_verbosity",
            "cmp qword [r15 + 0x40], 0",
            "je cryptodev_verbosity",
            "lea rax, [rbp - 0x60]",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, dword [rbx + 8]",
            "mov rsi, qword [rbx + 0x18]",
            "mov r9, qword [rbx + 0x60]",
            "mov rdi, r15",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x58]",
            "mov r8d, dword [rbx + 0x48]",
            "mov qword [rbp - 0x78], r11",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x68]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "mov r12d, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r9d, dword [r15 + 0x38]",
            "mov eax, dword [rbx + 8]",
            "mov rdx, qword [rbp - 0x60]",
            "mov r12, qword [rbp - 0x58]",
            "mov ecx, dword [rbx + 0xc]",
            "test r9d, r9d",
            "mov dword [rbp - 0x64], eax",
            "je 0x8004c66",
            "mov r8d, dword [r15 + 0x40]",
            "test r8d, r8d",
            "je 0x8004c66",
            "mov rax, qword [r15 + 0x60]",
            "mov eax, dword [rax + 0x3c]",
            "mov esi, dword [rbx + 0x30]",
            "cmp esi, eax",
            "ja cryptodev_verbosity",
            "test esi, esi",
            "je 0x8004740",
            "mov edi, dword [r15 + 0x40]",
            "test edi, edi",
            "je 0x8004585",
            "mov rdi, qword [r15 + 0x60]",
            "mov qword [rbp - 0x88], rdx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call crypto_aead_setauthsize",
            "mov rdx, qword [rbp - 0x88]",
            "mov ecx, dword [rbp - 0x80]",
            "mov r11, qword [rbp - 0x78]",
            "mov rax, qword [r15 + 0x68]",
            "test ecx, ecx",
            "mov esi, 0",
            "cmove r11, rsi",
            "mov r8d, dword [rbp - 0x64]",
            "lea rdi, [r15 + 0x38]",
            "mov rsi, r12",
            "mov dword [rax + 0x30], ecx",
            "mov qword [rax + 0x40], r11",
            "cmp word [rbx + 4], 0",
            "mov rcx, r8",
            "mov qword [rbp - 0x78], r8",
            "jne cryptodev_cipher_decrypt",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbp - 0x64]",
            "add r8, qword [rbx + 0x20]",
            "add eax, dword [rbx + 0x30]",
            "mov qword [rbx + 0x28], r8",
            "mov dword [rbx + 0x48], eax",
            "mov rdi, r15",
            "call release_user_pages",
            "mov rdi, qword [rbp - 0x70]",
            "xor esi, esi",
            "call free_pages",
            "test r12d, r12d",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x4c]",
            "mov rsi, r14",
            "mov rdi, r13",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "lea rdi, [r15 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x88",
            "mov eax, r12d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, dword [r15 + 0x38]",
            "test eax, eax",
            "jne 0x8004e22",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004970",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004689",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x800467c",
            "cmp dword [0x08004676], 1",
            "jg current_task",
            "mov r9, qword [rbx + 0x10]",
            "test r9, rdx",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [rbx + 0xc]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rdx, qword [rbx + 0x10]",
            "mov r10, qword [rbx + 0x18]",
            "sub r10, rdx",
            "cmp r10d, 0x100",
            "jbe 0x80048b0",
            "mov eax, dword [0x080046bd]",
            "test eax, eax",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "cmp dword [0x080046d2], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2ea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x30]",
            "mov edx, dword [rbp - 0x64]",
            "sub r8, rax",
            "add r8, qword [rbx + 0x20]",
            "sub edx, eax",
            "mov dword [rbx + 0x48], edx",
            "mov qword [rbx + 0x28], r8",
            "jmp release_user_pages",
            "mov dword [rbx + 0x30], eax",
            "jmp 0x8004585",
            "cmp dword [0x08004757], 1",
            "jle 0x8004689",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "add eax, 1",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r8d, 0x7c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004689",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004bfe",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004810",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x8004810",
            "cmp dword [0x080047ca], 1",
            "jle 0x8004810",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x43",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x78], r11",
            "call printk",
            "mov r11, qword [rbp - 0x78]",
            "nop dword [rax + rax]",
            "movsxd rax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, 1",
            "mov dword [r15 + 0xc0], 0",
            "mov rdi, r15",
            "mov rsi, rcx",
            "lea rax, [rcx + rax - 1]",
            "shr rsi, 0xc",
            "sub edx, esi",
            "shr rax, 0xc",
            "lea ecx, [rdx + rax]",
            "mov dword [r15 + 0xbc], ecx",
            "mov esi, ecx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov ecx, dword [rbp - 0x80]",
            "je 0x8004b46",
            "mov esi, dword [0x08004871]",
            "test esi, esi",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2a0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rcx, rdx",
            "lea rax, [rdx + rax - 1]",
            "mov esi, 1",
            "shr rcx, 0xc",
            "mov rdi, r15",
            "mov qword [rbp - 0x80], r10",
            "sub esi, ecx",
            "shr rax, 0xc",
            "lea r11d, [rsi + rax]",
            "lea esi, [r11 + r11]",
            "mov dword [rbp - 0x78], r11d",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "je 0x8004a70",
            "mov r14d, dword [0x080048f9]",
            "test r14d, r14d",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x92",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rdi, qword [rbp - 0x70]",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "mov edx, dword [rbx + 0xc]",
            "mov rsi, qword [rbp - 0x70]",
            "lea rdi, [rbp - 0x50]",
            "call sg_init_one",
            "lea r11, [rbp - 0x50]",
            "jmp 0x80044a0",
            "cmp qword [rbx + 0x10], 0",
            "jne 0x8004659",
            "mov eax, dword [0x08004981]",
            "test eax, eax",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x72",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "cmp dword [0x080049c7], 0",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x276",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "xor r11d, r11d",
            "jmp 0x80044a0",
            "mov r11d, dword [0x08004a17]",
            "test r11d, r11d",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x80045e5",
            "cmp dword [0x08004a32], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov ecx, r11d",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0xc]",
            "mov edx, 1",
            "mov rdi, qword [rbx + 0x10]",
            "mov qword [rbp - 0x80], r10",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov dword [rbp - 0x78], r11d",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r12, qword [r15 + 0xd0]",
            "movsxd rdi, r11d",
            "mov dword [r15 + 0xbc], r11d",
            "shl rdi, 5",
            "mov esi, r11d",
            "mov dword [r15 + 0xc0], 0",
            "mov qword [rbp - 0x80], r10",
            "add rdi, r12",
            "mov qword [rbp - 0x60], rdi",
            "call sg_init_table",
            "mov edx, dword [rbx + 0xc]",
            "mov rdi, qword [r15 + 0xd0]",
            "mov rsi, qword [rbp - 0x60]",
            "call sg_copy",
            "mov r10, qword [rbp - 0x80]",
            "mov rdi, qword [rbp - 0x60]",
            "mov esi, r10d",
            "call sg_advance",
            "test rax, rax",
            "mov r8, rax",
            "mov qword [rbp - 0x60], rax",
            "je release_user_pages",
            "mov ecx, dword [rbx + 0xc]",
            "mov r9d, dword [rbx + 8]",
            "mov rdx, r12",
            "mov rdi, r15",
            "mov rsi, rbx",
            "call sym.srtp_auth_n_crypt",
            "mov rdi, r15",
            "mov r12d, eax",
            "call release_user_pages",
            "jmp 0x80045f0",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov edx, 1",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0x48]",
            "mov rdi, qword [rbx + 0x20]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r8, qword [r15 + 0xd0]",
            "mov ecx, dword [rbx + 0xc]",
            "mov rdx, r11",
            "mov r9d, dword [rbx + 8]",
            "mov rsi, rbx",
            "mov rdi, r15",
            "mov qword [rbp - 0x60], r8",
            "call sym.tls_auth_n_crypt",
            "mov r12d, eax",
            "jmp release_user_pages",
            "mov rdi, r15",
            "call release_user_pages",
            "mov r13d, dword [0x08004bb9]",
            "test r13d, r13d",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov r12d, 0xffffffea",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004c10], 0",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x8004628",
            "cmp dword [0x08004c28], 0",
            "jle 0x8004c16",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp 0x8004628",
            "xor eax, eax",
            "jmp 0x8004545",
            "cmp dword [0x08004c74], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x80",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004cbd], 0",
            "mov r12d, 0xffffffea",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "cmp dword [0x08004d06], 0",
            "mov r12d, 0xffffffea",
            "js 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2aa",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004d4f], 0",
            "mov r12d, 0xffffffea",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x286",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004d98], 0",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2b2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004ddb], 0",
            "mov r12d, 0xffffffea",
            "js release_user_pages",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "add rax, 0x4b8",
            "mov r9d, esi",
            "mov r8d, 0x241",
            "mov rsi, rax",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [r15 + 0x44], 0",
            "je 0x8004e34",
            "cmp dword [r15 + 0x40], 0",
            "je 0x800464c",
            "cmp dword [0x08004e3b], 0",
            "js 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x270",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004e84], 0",
            "mov r12d, 0xfffffff4",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x28c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r10d",
            "mov r8d, 0x8a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004f0c], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x25a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [0x08004f52], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x250",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004c16",
            "cmp dword [0x08004fd1], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x99",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x0800501a], 0",
            "jle 0x8004a20",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x57",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x79",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov eax, dword [r15 + 0xb4]",
            "mov edx, eax",
            "sub rdx, 1",
            "jmp 0x800467c",
            "cmp dword [0x080050ac], 0",
            "mov r12d, 0xfffffff2",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x292",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x47",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity"
        ]
    },
    "unk.0x8004478": {
        "function_address": "0x08004478",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x88",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r15, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [r15 + 0x88]",
            "test eax, eax",
            "je 0x8004427",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "lea r13, [rbx + 0x50]",
            "cmovle edx, dword [rbx + 0x4c]",
            "lea r14, [r15 + 0x78]",
            "mov eax, 0x10",
            "mov rsi, r13",
            "mov rdi, r14",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "test byte [rbx + 6], 0x20",
            "jne 0x8004640",
            "cmp dword [rbx + 0xc], 0x1000",
            "ja cryptodev_verbosity",
            "xor esi, esi",
            "mov edi, 0xd0",
            "call __get_free_pages",
            "test rax, rax",
            "mov qword [rbp - 0x70], rax",
            "je cryptodev_verbosity",
            "mov rsi, qword [rbx + 0x10]",
            "test rsi, rsi",
            "je 0x8004a08",
            "mov edx, dword [rbx + 0xc]",
            "xor r11d, r11d",
            "test edx, edx",
            "jne _copy_from_user",
            "test byte [rbx + 6], 0x10",
            "je 0x80044b3",
            "mov r12d, dword [r15 + 0x40]",
            "test r12d, r12d",
            "je 0x80047a0",
            "mov r10d, dword [r15 + 0x38]",
            "test r10d, r10d",
            "je cryptodev_verbosity",
            "cmp qword [r15 + 0x40], 0",
            "je cryptodev_verbosity",
            "lea rax, [rbp - 0x60]",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, dword [rbx + 8]",
            "mov rsi, qword [rbx + 0x18]",
            "mov r9, qword [rbx + 0x60]",
            "mov rdi, r15",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x58]",
            "mov r8d, dword [rbx + 0x48]",
            "mov qword [rbp - 0x78], r11",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x68]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "mov r12d, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r9d, dword [r15 + 0x38]",
            "mov eax, dword [rbx + 8]",
            "mov rdx, qword [rbp - 0x60]",
            "mov r12, qword [rbp - 0x58]",
            "mov ecx, dword [rbx + 0xc]",
            "test r9d, r9d",
            "mov dword [rbp - 0x64], eax",
            "je 0x8004c66",
            "mov r8d, dword [r15 + 0x40]",
            "test r8d, r8d",
            "je 0x8004c66",
            "mov rax, qword [r15 + 0x60]",
            "mov eax, dword [rax + 0x3c]",
            "mov esi, dword [rbx + 0x30]",
            "cmp esi, eax",
            "ja cryptodev_verbosity",
            "test esi, esi",
            "je 0x8004740",
            "mov edi, dword [r15 + 0x40]",
            "test edi, edi",
            "je 0x8004585",
            "mov rdi, qword [r15 + 0x60]",
            "mov qword [rbp - 0x88], rdx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call crypto_aead_setauthsize",
            "mov rdx, qword [rbp - 0x88]",
            "mov ecx, dword [rbp - 0x80]",
            "mov r11, qword [rbp - 0x78]",
            "mov rax, qword [r15 + 0x68]",
            "test ecx, ecx",
            "mov esi, 0",
            "cmove r11, rsi",
            "mov r8d, dword [rbp - 0x64]",
            "lea rdi, [r15 + 0x38]",
            "mov rsi, r12",
            "mov dword [rax + 0x30], ecx",
            "mov qword [rax + 0x40], r11",
            "cmp word [rbx + 4], 0",
            "mov rcx, r8",
            "mov qword [rbp - 0x78], r8",
            "jne cryptodev_cipher_decrypt",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbp - 0x64]",
            "add r8, qword [rbx + 0x20]",
            "add eax, dword [rbx + 0x30]",
            "mov qword [rbx + 0x28], r8",
            "mov dword [rbx + 0x48], eax",
            "mov rdi, r15",
            "call release_user_pages",
            "mov rdi, qword [rbp - 0x70]",
            "xor esi, esi",
            "call free_pages",
            "test r12d, r12d",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x4c]",
            "mov rsi, r14",
            "mov rdi, r13",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "lea rdi, [r15 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x88",
            "mov eax, r12d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, dword [r15 + 0x38]",
            "test eax, eax",
            "jne 0x8004e22",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004970",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004689",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x800467c",
            "cmp dword [0x08004676], 1",
            "jg current_task",
            "mov r9, qword [rbx + 0x10]",
            "test r9, rdx",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [rbx + 0xc]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rdx, qword [rbx + 0x10]",
            "mov r10, qword [rbx + 0x18]",
            "sub r10, rdx",
            "cmp r10d, 0x100",
            "jbe 0x80048b0",
            "mov eax, dword [0x080046bd]",
            "test eax, eax",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "cmp dword [0x080046d2], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2ea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x30]",
            "mov edx, dword [rbp - 0x64]",
            "sub r8, rax",
            "add r8, qword [rbx + 0x20]",
            "sub edx, eax",
            "mov dword [rbx + 0x48], edx",
            "mov qword [rbx + 0x28], r8",
            "jmp release_user_pages",
            "mov dword [rbx + 0x30], eax",
            "jmp 0x8004585",
            "cmp dword [0x08004757], 1",
            "jle 0x8004689",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "add eax, 1",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r8d, 0x7c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004689",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004bfe",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004810",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x8004810",
            "cmp dword [0x080047ca], 1",
            "jle 0x8004810",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x43",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x78], r11",
            "call printk",
            "mov r11, qword [rbp - 0x78]",
            "nop dword [rax + rax]",
            "movsxd rax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, 1",
            "mov dword [r15 + 0xc0], 0",
            "mov rdi, r15",
            "mov rsi, rcx",
            "lea rax, [rcx + rax - 1]",
            "shr rsi, 0xc",
            "sub edx, esi",
            "shr rax, 0xc",
            "lea ecx, [rdx + rax]",
            "mov dword [r15 + 0xbc], ecx",
            "mov esi, ecx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov ecx, dword [rbp - 0x80]",
            "je 0x8004b46",
            "mov esi, dword [0x08004871]",
            "test esi, esi",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2a0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rcx, rdx",
            "lea rax, [rdx + rax - 1]",
            "mov esi, 1",
            "shr rcx, 0xc",
            "mov rdi, r15",
            "mov qword [rbp - 0x80], r10",
            "sub esi, ecx",
            "shr rax, 0xc",
            "lea r11d, [rsi + rax]",
            "lea esi, [r11 + r11]",
            "mov dword [rbp - 0x78], r11d",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "je 0x8004a70",
            "mov r14d, dword [0x080048f9]",
            "test r14d, r14d",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x92",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rdi, qword [rbp - 0x70]",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "mov edx, dword [rbx + 0xc]",
            "mov rsi, qword [rbp - 0x70]",
            "lea rdi, [rbp - 0x50]",
            "call sg_init_one",
            "lea r11, [rbp - 0x50]",
            "jmp 0x80044a0",
            "cmp qword [rbx + 0x10], 0",
            "jne 0x8004659",
            "mov eax, dword [0x08004981]",
            "test eax, eax",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x72",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "cmp dword [0x080049c7], 0",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x276",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "xor r11d, r11d",
            "jmp 0x80044a0",
            "mov r11d, dword [0x08004a17]",
            "test r11d, r11d",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x80045e5",
            "cmp dword [0x08004a32], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov ecx, r11d",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0xc]",
            "mov edx, 1",
            "mov rdi, qword [rbx + 0x10]",
            "mov qword [rbp - 0x80], r10",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov dword [rbp - 0x78], r11d",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r12, qword [r15 + 0xd0]",
            "movsxd rdi, r11d",
            "mov dword [r15 + 0xbc], r11d",
            "shl rdi, 5",
            "mov esi, r11d",
            "mov dword [r15 + 0xc0], 0",
            "mov qword [rbp - 0x80], r10",
            "add rdi, r12",
            "mov qword [rbp - 0x60], rdi",
            "call sg_init_table",
            "mov edx, dword [rbx + 0xc]",
            "mov rdi, qword [r15 + 0xd0]",
            "mov rsi, qword [rbp - 0x60]",
            "call sg_copy",
            "mov r10, qword [rbp - 0x80]",
            "mov rdi, qword [rbp - 0x60]",
            "mov esi, r10d",
            "call sg_advance",
            "test rax, rax",
            "mov r8, rax",
            "mov qword [rbp - 0x60], rax",
            "je release_user_pages",
            "mov ecx, dword [rbx + 0xc]",
            "mov r9d, dword [rbx + 8]",
            "mov rdx, r12",
            "mov rdi, r15",
            "mov rsi, rbx",
            "call sym.srtp_auth_n_crypt",
            "mov rdi, r15",
            "mov r12d, eax",
            "call release_user_pages",
            "jmp 0x80045f0",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov edx, 1",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0x48]",
            "mov rdi, qword [rbx + 0x20]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r8, qword [r15 + 0xd0]",
            "mov ecx, dword [rbx + 0xc]",
            "mov rdx, r11",
            "mov r9d, dword [rbx + 8]",
            "mov rsi, rbx",
            "mov rdi, r15",
            "mov qword [rbp - 0x60], r8",
            "call sym.tls_auth_n_crypt",
            "mov r12d, eax",
            "jmp release_user_pages",
            "mov rdi, r15",
            "call release_user_pages",
            "mov r13d, dword [0x08004bb9]",
            "test r13d, r13d",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov r12d, 0xffffffea",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004c10], 0",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x8004628",
            "cmp dword [0x08004c28], 0",
            "jle 0x8004c16",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp 0x8004628",
            "xor eax, eax",
            "jmp 0x8004545",
            "cmp dword [0x08004c74], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x80",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004cbd], 0",
            "mov r12d, 0xffffffea",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "cmp dword [0x08004d06], 0",
            "mov r12d, 0xffffffea",
            "js 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2aa",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004d4f], 0",
            "mov r12d, 0xffffffea",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x286",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004d98], 0",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2b2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004ddb], 0",
            "mov r12d, 0xffffffea",
            "js release_user_pages",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "add rax, 0x4b8",
            "mov r9d, esi",
            "mov r8d, 0x241",
            "mov rsi, rax",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [r15 + 0x44], 0",
            "je 0x8004e34",
            "cmp dword [r15 + 0x40], 0",
            "je 0x800464c",
            "cmp dword [0x08004e3b], 0",
            "js 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x270",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004e84], 0",
            "mov r12d, 0xfffffff4",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x28c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r10d",
            "mov r8d, 0x8a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004f0c], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x25a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [0x08004f52], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x250",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004c16",
            "cmp dword [0x08004fd1], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x99",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x0800501a], 0",
            "jle 0x8004a20",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x57",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x79",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov eax, dword [r15 + 0xb4]",
            "mov edx, eax",
            "sub rdx, 1",
            "jmp 0x800467c",
            "cmp dword [0x080050ac], 0",
            "mov r12d, 0xfffffff2",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x292",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x47",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity"
        ]
    },
    "unk.0x8004504": {
        "function_address": "0x08004504",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x88",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r15, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [r15 + 0x88]",
            "test eax, eax",
            "je 0x8004427",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "lea r13, [rbx + 0x50]",
            "cmovle edx, dword [rbx + 0x4c]",
            "lea r14, [r15 + 0x78]",
            "mov eax, 0x10",
            "mov rsi, r13",
            "mov rdi, r14",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "test byte [rbx + 6], 0x20",
            "jne 0x8004640",
            "cmp dword [rbx + 0xc], 0x1000",
            "ja cryptodev_verbosity",
            "xor esi, esi",
            "mov edi, 0xd0",
            "call __get_free_pages",
            "test rax, rax",
            "mov qword [rbp - 0x70], rax",
            "je cryptodev_verbosity",
            "mov rsi, qword [rbx + 0x10]",
            "test rsi, rsi",
            "je 0x8004a08",
            "mov edx, dword [rbx + 0xc]",
            "xor r11d, r11d",
            "test edx, edx",
            "jne _copy_from_user",
            "test byte [rbx + 6], 0x10",
            "je 0x80044b3",
            "mov r12d, dword [r15 + 0x40]",
            "test r12d, r12d",
            "je 0x80047a0",
            "mov r10d, dword [r15 + 0x38]",
            "test r10d, r10d",
            "je cryptodev_verbosity",
            "cmp qword [r15 + 0x40], 0",
            "je cryptodev_verbosity",
            "lea rax, [rbp - 0x60]",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, dword [rbx + 8]",
            "mov rsi, qword [rbx + 0x18]",
            "mov r9, qword [rbx + 0x60]",
            "mov rdi, r15",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x58]",
            "mov r8d, dword [rbx + 0x48]",
            "mov qword [rbp - 0x78], r11",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x68]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "mov r12d, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r9d, dword [r15 + 0x38]",
            "mov eax, dword [rbx + 8]",
            "mov rdx, qword [rbp - 0x60]",
            "mov r12, qword [rbp - 0x58]",
            "mov ecx, dword [rbx + 0xc]",
            "test r9d, r9d",
            "mov dword [rbp - 0x64], eax",
            "je 0x8004c66",
            "mov r8d, dword [r15 + 0x40]",
            "test r8d, r8d",
            "je 0x8004c66",
            "mov rax, qword [r15 + 0x60]",
            "mov eax, dword [rax + 0x3c]",
            "mov esi, dword [rbx + 0x30]",
            "cmp esi, eax",
            "ja cryptodev_verbosity",
            "test esi, esi",
            "je 0x8004740",
            "mov edi, dword [r15 + 0x40]",
            "test edi, edi",
            "je 0x8004585",
            "mov rdi, qword [r15 + 0x60]",
            "mov qword [rbp - 0x88], rdx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call crypto_aead_setauthsize",
            "mov rdx, qword [rbp - 0x88]",
            "mov ecx, dword [rbp - 0x80]",
            "mov r11, qword [rbp - 0x78]",
            "mov rax, qword [r15 + 0x68]",
            "test ecx, ecx",
            "mov esi, 0",
            "cmove r11, rsi",
            "mov r8d, dword [rbp - 0x64]",
            "lea rdi, [r15 + 0x38]",
            "mov rsi, r12",
            "mov dword [rax + 0x30], ecx",
            "mov qword [rax + 0x40], r11",
            "cmp word [rbx + 4], 0",
            "mov rcx, r8",
            "mov qword [rbp - 0x78], r8",
            "jne cryptodev_cipher_decrypt",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbp - 0x64]",
            "add r8, qword [rbx + 0x20]",
            "add eax, dword [rbx + 0x30]",
            "mov qword [rbx + 0x28], r8",
            "mov dword [rbx + 0x48], eax",
            "mov rdi, r15",
            "call release_user_pages",
            "mov rdi, qword [rbp - 0x70]",
            "xor esi, esi",
            "call free_pages",
            "test r12d, r12d",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x4c]",
            "mov rsi, r14",
            "mov rdi, r13",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "lea rdi, [r15 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x88",
            "mov eax, r12d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, dword [r15 + 0x38]",
            "test eax, eax",
            "jne 0x8004e22",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004970",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004689",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x800467c",
            "cmp dword [0x08004676], 1",
            "jg current_task",
            "mov r9, qword [rbx + 0x10]",
            "test r9, rdx",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [rbx + 0xc]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rdx, qword [rbx + 0x10]",
            "mov r10, qword [rbx + 0x18]",
            "sub r10, rdx",
            "cmp r10d, 0x100",
            "jbe 0x80048b0",
            "mov eax, dword [0x080046bd]",
            "test eax, eax",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "cmp dword [0x080046d2], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2ea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x30]",
            "mov edx, dword [rbp - 0x64]",
            "sub r8, rax",
            "add r8, qword [rbx + 0x20]",
            "sub edx, eax",
            "mov dword [rbx + 0x48], edx",
            "mov qword [rbx + 0x28], r8",
            "jmp release_user_pages",
            "mov dword [rbx + 0x30], eax",
            "jmp 0x8004585",
            "cmp dword [0x08004757], 1",
            "jle 0x8004689",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "add eax, 1",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r8d, 0x7c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004689",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004bfe",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004810",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x8004810",
            "cmp dword [0x080047ca], 1",
            "jle 0x8004810",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x43",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x78], r11",
            "call printk",
            "mov r11, qword [rbp - 0x78]",
            "nop dword [rax + rax]",
            "movsxd rax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, 1",
            "mov dword [r15 + 0xc0], 0",
            "mov rdi, r15",
            "mov rsi, rcx",
            "lea rax, [rcx + rax - 1]",
            "shr rsi, 0xc",
            "sub edx, esi",
            "shr rax, 0xc",
            "lea ecx, [rdx + rax]",
            "mov dword [r15 + 0xbc], ecx",
            "mov esi, ecx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov ecx, dword [rbp - 0x80]",
            "je 0x8004b46",
            "mov esi, dword [0x08004871]",
            "test esi, esi",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2a0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rcx, rdx",
            "lea rax, [rdx + rax - 1]",
            "mov esi, 1",
            "shr rcx, 0xc",
            "mov rdi, r15",
            "mov qword [rbp - 0x80], r10",
            "sub esi, ecx",
            "shr rax, 0xc",
            "lea r11d, [rsi + rax]",
            "lea esi, [r11 + r11]",
            "mov dword [rbp - 0x78], r11d",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "je 0x8004a70",
            "mov r14d, dword [0x080048f9]",
            "test r14d, r14d",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x92",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rdi, qword [rbp - 0x70]",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "mov edx, dword [rbx + 0xc]",
            "mov rsi, qword [rbp - 0x70]",
            "lea rdi, [rbp - 0x50]",
            "call sg_init_one",
            "lea r11, [rbp - 0x50]",
            "jmp 0x80044a0",
            "cmp qword [rbx + 0x10], 0",
            "jne 0x8004659",
            "mov eax, dword [0x08004981]",
            "test eax, eax",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x72",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "cmp dword [0x080049c7], 0",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x276",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "xor r11d, r11d",
            "jmp 0x80044a0",
            "mov r11d, dword [0x08004a17]",
            "test r11d, r11d",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x80045e5",
            "cmp dword [0x08004a32], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov ecx, r11d",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0xc]",
            "mov edx, 1",
            "mov rdi, qword [rbx + 0x10]",
            "mov qword [rbp - 0x80], r10",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov dword [rbp - 0x78], r11d",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r12, qword [r15 + 0xd0]",
            "movsxd rdi, r11d",
            "mov dword [r15 + 0xbc], r11d",
            "shl rdi, 5",
            "mov esi, r11d",
            "mov dword [r15 + 0xc0], 0",
            "mov qword [rbp - 0x80], r10",
            "add rdi, r12",
            "mov qword [rbp - 0x60], rdi",
            "call sg_init_table",
            "mov edx, dword [rbx + 0xc]",
            "mov rdi, qword [r15 + 0xd0]",
            "mov rsi, qword [rbp - 0x60]",
            "call sg_copy",
            "mov r10, qword [rbp - 0x80]",
            "mov rdi, qword [rbp - 0x60]",
            "mov esi, r10d",
            "call sg_advance",
            "test rax, rax",
            "mov r8, rax",
            "mov qword [rbp - 0x60], rax",
            "je release_user_pages",
            "mov ecx, dword [rbx + 0xc]",
            "mov r9d, dword [rbx + 8]",
            "mov rdx, r12",
            "mov rdi, r15",
            "mov rsi, rbx",
            "call sym.srtp_auth_n_crypt",
            "mov rdi, r15",
            "mov r12d, eax",
            "call release_user_pages",
            "jmp 0x80045f0",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov edx, 1",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0x48]",
            "mov rdi, qword [rbx + 0x20]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r8, qword [r15 + 0xd0]",
            "mov ecx, dword [rbx + 0xc]",
            "mov rdx, r11",
            "mov r9d, dword [rbx + 8]",
            "mov rsi, rbx",
            "mov rdi, r15",
            "mov qword [rbp - 0x60], r8",
            "call sym.tls_auth_n_crypt",
            "mov r12d, eax",
            "jmp release_user_pages",
            "mov rdi, r15",
            "call release_user_pages",
            "mov r13d, dword [0x08004bb9]",
            "test r13d, r13d",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov r12d, 0xffffffea",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004c10], 0",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x8004628",
            "cmp dword [0x08004c28], 0",
            "jle 0x8004c16",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp 0x8004628",
            "xor eax, eax",
            "jmp 0x8004545",
            "cmp dword [0x08004c74], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x80",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004cbd], 0",
            "mov r12d, 0xffffffea",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "cmp dword [0x08004d06], 0",
            "mov r12d, 0xffffffea",
            "js 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2aa",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004d4f], 0",
            "mov r12d, 0xffffffea",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x286",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004d98], 0",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2b2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004ddb], 0",
            "mov r12d, 0xffffffea",
            "js release_user_pages",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "add rax, 0x4b8",
            "mov r9d, esi",
            "mov r8d, 0x241",
            "mov rsi, rax",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [r15 + 0x44], 0",
            "je 0x8004e34",
            "cmp dword [r15 + 0x40], 0",
            "je 0x800464c",
            "cmp dword [0x08004e3b], 0",
            "js 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x270",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004e84], 0",
            "mov r12d, 0xfffffff4",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x28c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r10d",
            "mov r8d, 0x8a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004f0c], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x25a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [0x08004f52], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x250",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004c16",
            "cmp dword [0x08004fd1], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x99",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x0800501a], 0",
            "jle 0x8004a20",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x57",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x79",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov eax, dword [r15 + 0xb4]",
            "mov edx, eax",
            "sub rdx, 1",
            "jmp 0x800467c",
            "cmp dword [0x080050ac], 0",
            "mov r12d, 0xfffffff2",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x292",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x47",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity"
        ]
    },
    "unk.0x8004577": {
        "function_address": "0x08004577",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x88",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r15, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [r15 + 0x88]",
            "test eax, eax",
            "je 0x8004427",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "lea r13, [rbx + 0x50]",
            "cmovle edx, dword [rbx + 0x4c]",
            "lea r14, [r15 + 0x78]",
            "mov eax, 0x10",
            "mov rsi, r13",
            "mov rdi, r14",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "test byte [rbx + 6], 0x20",
            "jne 0x8004640",
            "cmp dword [rbx + 0xc], 0x1000",
            "ja cryptodev_verbosity",
            "xor esi, esi",
            "mov edi, 0xd0",
            "call __get_free_pages",
            "test rax, rax",
            "mov qword [rbp - 0x70], rax",
            "je cryptodev_verbosity",
            "mov rsi, qword [rbx + 0x10]",
            "test rsi, rsi",
            "je 0x8004a08",
            "mov edx, dword [rbx + 0xc]",
            "xor r11d, r11d",
            "test edx, edx",
            "jne _copy_from_user",
            "test byte [rbx + 6], 0x10",
            "je 0x80044b3",
            "mov r12d, dword [r15 + 0x40]",
            "test r12d, r12d",
            "je 0x80047a0",
            "mov r10d, dword [r15 + 0x38]",
            "test r10d, r10d",
            "je cryptodev_verbosity",
            "cmp qword [r15 + 0x40], 0",
            "je cryptodev_verbosity",
            "lea rax, [rbp - 0x60]",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, dword [rbx + 8]",
            "mov rsi, qword [rbx + 0x18]",
            "mov r9, qword [rbx + 0x60]",
            "mov rdi, r15",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x58]",
            "mov r8d, dword [rbx + 0x48]",
            "mov qword [rbp - 0x78], r11",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x68]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "mov r12d, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r9d, dword [r15 + 0x38]",
            "mov eax, dword [rbx + 8]",
            "mov rdx, qword [rbp - 0x60]",
            "mov r12, qword [rbp - 0x58]",
            "mov ecx, dword [rbx + 0xc]",
            "test r9d, r9d",
            "mov dword [rbp - 0x64], eax",
            "je 0x8004c66",
            "mov r8d, dword [r15 + 0x40]",
            "test r8d, r8d",
            "je 0x8004c66",
            "mov rax, qword [r15 + 0x60]",
            "mov eax, dword [rax + 0x3c]",
            "mov esi, dword [rbx + 0x30]",
            "cmp esi, eax",
            "ja cryptodev_verbosity",
            "test esi, esi",
            "je 0x8004740",
            "mov edi, dword [r15 + 0x40]",
            "test edi, edi",
            "je 0x8004585",
            "mov rdi, qword [r15 + 0x60]",
            "mov qword [rbp - 0x88], rdx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call crypto_aead_setauthsize",
            "mov rdx, qword [rbp - 0x88]",
            "mov ecx, dword [rbp - 0x80]",
            "mov r11, qword [rbp - 0x78]",
            "mov rax, qword [r15 + 0x68]",
            "test ecx, ecx",
            "mov esi, 0",
            "cmove r11, rsi",
            "mov r8d, dword [rbp - 0x64]",
            "lea rdi, [r15 + 0x38]",
            "mov rsi, r12",
            "mov dword [rax + 0x30], ecx",
            "mov qword [rax + 0x40], r11",
            "cmp word [rbx + 4], 0",
            "mov rcx, r8",
            "mov qword [rbp - 0x78], r8",
            "jne cryptodev_cipher_decrypt",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbp - 0x64]",
            "add r8, qword [rbx + 0x20]",
            "add eax, dword [rbx + 0x30]",
            "mov qword [rbx + 0x28], r8",
            "mov dword [rbx + 0x48], eax",
            "mov rdi, r15",
            "call release_user_pages",
            "mov rdi, qword [rbp - 0x70]",
            "xor esi, esi",
            "call free_pages",
            "test r12d, r12d",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x4c]",
            "mov rsi, r14",
            "mov rdi, r13",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "lea rdi, [r15 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x88",
            "mov eax, r12d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, dword [r15 + 0x38]",
            "test eax, eax",
            "jne 0x8004e22",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004970",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004689",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x800467c",
            "cmp dword [0x08004676], 1",
            "jg current_task",
            "mov r9, qword [rbx + 0x10]",
            "test r9, rdx",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [rbx + 0xc]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rdx, qword [rbx + 0x10]",
            "mov r10, qword [rbx + 0x18]",
            "sub r10, rdx",
            "cmp r10d, 0x100",
            "jbe 0x80048b0",
            "mov eax, dword [0x080046bd]",
            "test eax, eax",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "cmp dword [0x080046d2], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2ea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x30]",
            "mov edx, dword [rbp - 0x64]",
            "sub r8, rax",
            "add r8, qword [rbx + 0x20]",
            "sub edx, eax",
            "mov dword [rbx + 0x48], edx",
            "mov qword [rbx + 0x28], r8",
            "jmp release_user_pages",
            "mov dword [rbx + 0x30], eax",
            "jmp 0x8004585",
            "cmp dword [0x08004757], 1",
            "jle 0x8004689",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "add eax, 1",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r8d, 0x7c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004689",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004bfe",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004810",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x8004810",
            "cmp dword [0x080047ca], 1",
            "jle 0x8004810",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x43",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x78], r11",
            "call printk",
            "mov r11, qword [rbp - 0x78]",
            "nop dword [rax + rax]",
            "movsxd rax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, 1",
            "mov dword [r15 + 0xc0], 0",
            "mov rdi, r15",
            "mov rsi, rcx",
            "lea rax, [rcx + rax - 1]",
            "shr rsi, 0xc",
            "sub edx, esi",
            "shr rax, 0xc",
            "lea ecx, [rdx + rax]",
            "mov dword [r15 + 0xbc], ecx",
            "mov esi, ecx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov ecx, dword [rbp - 0x80]",
            "je 0x8004b46",
            "mov esi, dword [0x08004871]",
            "test esi, esi",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2a0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rcx, rdx",
            "lea rax, [rdx + rax - 1]",
            "mov esi, 1",
            "shr rcx, 0xc",
            "mov rdi, r15",
            "mov qword [rbp - 0x80], r10",
            "sub esi, ecx",
            "shr rax, 0xc",
            "lea r11d, [rsi + rax]",
            "lea esi, [r11 + r11]",
            "mov dword [rbp - 0x78], r11d",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "je 0x8004a70",
            "mov r14d, dword [0x080048f9]",
            "test r14d, r14d",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x92",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rdi, qword [rbp - 0x70]",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "mov edx, dword [rbx + 0xc]",
            "mov rsi, qword [rbp - 0x70]",
            "lea rdi, [rbp - 0x50]",
            "call sg_init_one",
            "lea r11, [rbp - 0x50]",
            "jmp 0x80044a0",
            "cmp qword [rbx + 0x10], 0",
            "jne 0x8004659",
            "mov eax, dword [0x08004981]",
            "test eax, eax",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x72",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "cmp dword [0x080049c7], 0",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x276",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "xor r11d, r11d",
            "jmp 0x80044a0",
            "mov r11d, dword [0x08004a17]",
            "test r11d, r11d",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x80045e5",
            "cmp dword [0x08004a32], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov ecx, r11d",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0xc]",
            "mov edx, 1",
            "mov rdi, qword [rbx + 0x10]",
            "mov qword [rbp - 0x80], r10",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov dword [rbp - 0x78], r11d",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r12, qword [r15 + 0xd0]",
            "movsxd rdi, r11d",
            "mov dword [r15 + 0xbc], r11d",
            "shl rdi, 5",
            "mov esi, r11d",
            "mov dword [r15 + 0xc0], 0",
            "mov qword [rbp - 0x80], r10",
            "add rdi, r12",
            "mov qword [rbp - 0x60], rdi",
            "call sg_init_table",
            "mov edx, dword [rbx + 0xc]",
            "mov rdi, qword [r15 + 0xd0]",
            "mov rsi, qword [rbp - 0x60]",
            "call sg_copy",
            "mov r10, qword [rbp - 0x80]",
            "mov rdi, qword [rbp - 0x60]",
            "mov esi, r10d",
            "call sg_advance",
            "test rax, rax",
            "mov r8, rax",
            "mov qword [rbp - 0x60], rax",
            "je release_user_pages",
            "mov ecx, dword [rbx + 0xc]",
            "mov r9d, dword [rbx + 8]",
            "mov rdx, r12",
            "mov rdi, r15",
            "mov rsi, rbx",
            "call sym.srtp_auth_n_crypt",
            "mov rdi, r15",
            "mov r12d, eax",
            "call release_user_pages",
            "jmp 0x80045f0",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov edx, 1",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0x48]",
            "mov rdi, qword [rbx + 0x20]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r8, qword [r15 + 0xd0]",
            "mov ecx, dword [rbx + 0xc]",
            "mov rdx, r11",
            "mov r9d, dword [rbx + 8]",
            "mov rsi, rbx",
            "mov rdi, r15",
            "mov qword [rbp - 0x60], r8",
            "call sym.tls_auth_n_crypt",
            "mov r12d, eax",
            "jmp release_user_pages",
            "mov rdi, r15",
            "call release_user_pages",
            "mov r13d, dword [0x08004bb9]",
            "test r13d, r13d",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov r12d, 0xffffffea",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004c10], 0",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x8004628",
            "cmp dword [0x08004c28], 0",
            "jle 0x8004c16",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp 0x8004628",
            "xor eax, eax",
            "jmp 0x8004545",
            "cmp dword [0x08004c74], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x80",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004cbd], 0",
            "mov r12d, 0xffffffea",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "cmp dword [0x08004d06], 0",
            "mov r12d, 0xffffffea",
            "js 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2aa",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004d4f], 0",
            "mov r12d, 0xffffffea",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x286",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004d98], 0",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2b2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004ddb], 0",
            "mov r12d, 0xffffffea",
            "js release_user_pages",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "add rax, 0x4b8",
            "mov r9d, esi",
            "mov r8d, 0x241",
            "mov rsi, rax",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [r15 + 0x44], 0",
            "je 0x8004e34",
            "cmp dword [r15 + 0x40], 0",
            "je 0x800464c",
            "cmp dword [0x08004e3b], 0",
            "js 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x270",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004e84], 0",
            "mov r12d, 0xfffffff4",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x28c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r10d",
            "mov r8d, 0x8a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004f0c], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x25a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [0x08004f52], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x250",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004c16",
            "cmp dword [0x08004fd1], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x99",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x0800501a], 0",
            "jle 0x8004a20",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x57",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x79",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov eax, dword [r15 + 0xb4]",
            "mov edx, eax",
            "sub rdx, 1",
            "jmp 0x800467c",
            "cmp dword [0x080050ac], 0",
            "mov r12d, 0xfffffff2",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x292",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x47",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity"
        ]
    },
    "unk.0x80045bd": {
        "function_address": "0x080045bd",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x88",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r15, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [r15 + 0x88]",
            "test eax, eax",
            "je 0x8004427",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "lea r13, [rbx + 0x50]",
            "cmovle edx, dword [rbx + 0x4c]",
            "lea r14, [r15 + 0x78]",
            "mov eax, 0x10",
            "mov rsi, r13",
            "mov rdi, r14",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "test byte [rbx + 6], 0x20",
            "jne 0x8004640",
            "cmp dword [rbx + 0xc], 0x1000",
            "ja cryptodev_verbosity",
            "xor esi, esi",
            "mov edi, 0xd0",
            "call __get_free_pages",
            "test rax, rax",
            "mov qword [rbp - 0x70], rax",
            "je cryptodev_verbosity",
            "mov rsi, qword [rbx + 0x10]",
            "test rsi, rsi",
            "je 0x8004a08",
            "mov edx, dword [rbx + 0xc]",
            "xor r11d, r11d",
            "test edx, edx",
            "jne _copy_from_user",
            "test byte [rbx + 6], 0x10",
            "je 0x80044b3",
            "mov r12d, dword [r15 + 0x40]",
            "test r12d, r12d",
            "je 0x80047a0",
            "mov r10d, dword [r15 + 0x38]",
            "test r10d, r10d",
            "je cryptodev_verbosity",
            "cmp qword [r15 + 0x40], 0",
            "je cryptodev_verbosity",
            "lea rax, [rbp - 0x60]",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, dword [rbx + 8]",
            "mov rsi, qword [rbx + 0x18]",
            "mov r9, qword [rbx + 0x60]",
            "mov rdi, r15",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x58]",
            "mov r8d, dword [rbx + 0x48]",
            "mov qword [rbp - 0x78], r11",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x68]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "mov r12d, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r9d, dword [r15 + 0x38]",
            "mov eax, dword [rbx + 8]",
            "mov rdx, qword [rbp - 0x60]",
            "mov r12, qword [rbp - 0x58]",
            "mov ecx, dword [rbx + 0xc]",
            "test r9d, r9d",
            "mov dword [rbp - 0x64], eax",
            "je 0x8004c66",
            "mov r8d, dword [r15 + 0x40]",
            "test r8d, r8d",
            "je 0x8004c66",
            "mov rax, qword [r15 + 0x60]",
            "mov eax, dword [rax + 0x3c]",
            "mov esi, dword [rbx + 0x30]",
            "cmp esi, eax",
            "ja cryptodev_verbosity",
            "test esi, esi",
            "je 0x8004740",
            "mov edi, dword [r15 + 0x40]",
            "test edi, edi",
            "je 0x8004585",
            "mov rdi, qword [r15 + 0x60]",
            "mov qword [rbp - 0x88], rdx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call crypto_aead_setauthsize",
            "mov rdx, qword [rbp - 0x88]",
            "mov ecx, dword [rbp - 0x80]",
            "mov r11, qword [rbp - 0x78]",
            "mov rax, qword [r15 + 0x68]",
            "test ecx, ecx",
            "mov esi, 0",
            "cmove r11, rsi",
            "mov r8d, dword [rbp - 0x64]",
            "lea rdi, [r15 + 0x38]",
            "mov rsi, r12",
            "mov dword [rax + 0x30], ecx",
            "mov qword [rax + 0x40], r11",
            "cmp word [rbx + 4], 0",
            "mov rcx, r8",
            "mov qword [rbp - 0x78], r8",
            "jne cryptodev_cipher_decrypt",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbp - 0x64]",
            "add r8, qword [rbx + 0x20]",
            "add eax, dword [rbx + 0x30]",
            "mov qword [rbx + 0x28], r8",
            "mov dword [rbx + 0x48], eax",
            "mov rdi, r15",
            "call release_user_pages",
            "mov rdi, qword [rbp - 0x70]",
            "xor esi, esi",
            "call free_pages",
            "test r12d, r12d",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x4c]",
            "mov rsi, r14",
            "mov rdi, r13",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "lea rdi, [r15 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x88",
            "mov eax, r12d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, dword [r15 + 0x38]",
            "test eax, eax",
            "jne 0x8004e22",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004970",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004689",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x800467c",
            "cmp dword [0x08004676], 1",
            "jg current_task",
            "mov r9, qword [rbx + 0x10]",
            "test r9, rdx",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [rbx + 0xc]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rdx, qword [rbx + 0x10]",
            "mov r10, qword [rbx + 0x18]",
            "sub r10, rdx",
            "cmp r10d, 0x100",
            "jbe 0x80048b0",
            "mov eax, dword [0x080046bd]",
            "test eax, eax",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "cmp dword [0x080046d2], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2ea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x30]",
            "mov edx, dword [rbp - 0x64]",
            "sub r8, rax",
            "add r8, qword [rbx + 0x20]",
            "sub edx, eax",
            "mov dword [rbx + 0x48], edx",
            "mov qword [rbx + 0x28], r8",
            "jmp release_user_pages",
            "mov dword [rbx + 0x30], eax",
            "jmp 0x8004585",
            "cmp dword [0x08004757], 1",
            "jle 0x8004689",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "add eax, 1",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r8d, 0x7c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004689",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004bfe",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004810",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x8004810",
            "cmp dword [0x080047ca], 1",
            "jle 0x8004810",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x43",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x78], r11",
            "call printk",
            "mov r11, qword [rbp - 0x78]",
            "nop dword [rax + rax]",
            "movsxd rax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, 1",
            "mov dword [r15 + 0xc0], 0",
            "mov rdi, r15",
            "mov rsi, rcx",
            "lea rax, [rcx + rax - 1]",
            "shr rsi, 0xc",
            "sub edx, esi",
            "shr rax, 0xc",
            "lea ecx, [rdx + rax]",
            "mov dword [r15 + 0xbc], ecx",
            "mov esi, ecx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov ecx, dword [rbp - 0x80]",
            "je 0x8004b46",
            "mov esi, dword [0x08004871]",
            "test esi, esi",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2a0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rcx, rdx",
            "lea rax, [rdx + rax - 1]",
            "mov esi, 1",
            "shr rcx, 0xc",
            "mov rdi, r15",
            "mov qword [rbp - 0x80], r10",
            "sub esi, ecx",
            "shr rax, 0xc",
            "lea r11d, [rsi + rax]",
            "lea esi, [r11 + r11]",
            "mov dword [rbp - 0x78], r11d",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "je 0x8004a70",
            "mov r14d, dword [0x080048f9]",
            "test r14d, r14d",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x92",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rdi, qword [rbp - 0x70]",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "mov edx, dword [rbx + 0xc]",
            "mov rsi, qword [rbp - 0x70]",
            "lea rdi, [rbp - 0x50]",
            "call sg_init_one",
            "lea r11, [rbp - 0x50]",
            "jmp 0x80044a0",
            "cmp qword [rbx + 0x10], 0",
            "jne 0x8004659",
            "mov eax, dword [0x08004981]",
            "test eax, eax",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x72",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "cmp dword [0x080049c7], 0",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x276",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "xor r11d, r11d",
            "jmp 0x80044a0",
            "mov r11d, dword [0x08004a17]",
            "test r11d, r11d",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x80045e5",
            "cmp dword [0x08004a32], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov ecx, r11d",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0xc]",
            "mov edx, 1",
            "mov rdi, qword [rbx + 0x10]",
            "mov qword [rbp - 0x80], r10",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov dword [rbp - 0x78], r11d",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r12, qword [r15 + 0xd0]",
            "movsxd rdi, r11d",
            "mov dword [r15 + 0xbc], r11d",
            "shl rdi, 5",
            "mov esi, r11d",
            "mov dword [r15 + 0xc0], 0",
            "mov qword [rbp - 0x80], r10",
            "add rdi, r12",
            "mov qword [rbp - 0x60], rdi",
            "call sg_init_table",
            "mov edx, dword [rbx + 0xc]",
            "mov rdi, qword [r15 + 0xd0]",
            "mov rsi, qword [rbp - 0x60]",
            "call sg_copy",
            "mov r10, qword [rbp - 0x80]",
            "mov rdi, qword [rbp - 0x60]",
            "mov esi, r10d",
            "call sg_advance",
            "test rax, rax",
            "mov r8, rax",
            "mov qword [rbp - 0x60], rax",
            "je release_user_pages",
            "mov ecx, dword [rbx + 0xc]",
            "mov r9d, dword [rbx + 8]",
            "mov rdx, r12",
            "mov rdi, r15",
            "mov rsi, rbx",
            "call sym.srtp_auth_n_crypt",
            "mov rdi, r15",
            "mov r12d, eax",
            "call release_user_pages",
            "jmp 0x80045f0",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov edx, 1",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0x48]",
            "mov rdi, qword [rbx + 0x20]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r8, qword [r15 + 0xd0]",
            "mov ecx, dword [rbx + 0xc]",
            "mov rdx, r11",
            "mov r9d, dword [rbx + 8]",
            "mov rsi, rbx",
            "mov rdi, r15",
            "mov qword [rbp - 0x60], r8",
            "call sym.tls_auth_n_crypt",
            "mov r12d, eax",
            "jmp release_user_pages",
            "mov rdi, r15",
            "call release_user_pages",
            "mov r13d, dword [0x08004bb9]",
            "test r13d, r13d",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov r12d, 0xffffffea",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004c10], 0",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x8004628",
            "cmp dword [0x08004c28], 0",
            "jle 0x8004c16",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp 0x8004628",
            "xor eax, eax",
            "jmp 0x8004545",
            "cmp dword [0x08004c74], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x80",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004cbd], 0",
            "mov r12d, 0xffffffea",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "cmp dword [0x08004d06], 0",
            "mov r12d, 0xffffffea",
            "js 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2aa",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004d4f], 0",
            "mov r12d, 0xffffffea",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x286",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004d98], 0",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2b2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004ddb], 0",
            "mov r12d, 0xffffffea",
            "js release_user_pages",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "add rax, 0x4b8",
            "mov r9d, esi",
            "mov r8d, 0x241",
            "mov rsi, rax",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [r15 + 0x44], 0",
            "je 0x8004e34",
            "cmp dword [r15 + 0x40], 0",
            "je 0x800464c",
            "cmp dword [0x08004e3b], 0",
            "js 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x270",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004e84], 0",
            "mov r12d, 0xfffffff4",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x28c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r10d",
            "mov r8d, 0x8a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004f0c], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x25a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [0x08004f52], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x250",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004c16",
            "cmp dword [0x08004fd1], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x99",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x0800501a], 0",
            "jle 0x8004a20",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x57",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x79",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov eax, dword [r15 + 0xb4]",
            "mov edx, eax",
            "sub rdx, 1",
            "jmp 0x800467c",
            "cmp dword [0x080050ac], 0",
            "mov r12d, 0xfffffff2",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x292",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x47",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity"
        ]
    },
    "unk.0x80045e5": {
        "function_address": "0x080045e5",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x88",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r15, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [r15 + 0x88]",
            "test eax, eax",
            "je 0x8004427",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "lea r13, [rbx + 0x50]",
            "cmovle edx, dword [rbx + 0x4c]",
            "lea r14, [r15 + 0x78]",
            "mov eax, 0x10",
            "mov rsi, r13",
            "mov rdi, r14",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "test byte [rbx + 6], 0x20",
            "jne 0x8004640",
            "cmp dword [rbx + 0xc], 0x1000",
            "ja cryptodev_verbosity",
            "xor esi, esi",
            "mov edi, 0xd0",
            "call __get_free_pages",
            "test rax, rax",
            "mov qword [rbp - 0x70], rax",
            "je cryptodev_verbosity",
            "mov rsi, qword [rbx + 0x10]",
            "test rsi, rsi",
            "je 0x8004a08",
            "mov edx, dword [rbx + 0xc]",
            "xor r11d, r11d",
            "test edx, edx",
            "jne _copy_from_user",
            "test byte [rbx + 6], 0x10",
            "je 0x80044b3",
            "mov r12d, dword [r15 + 0x40]",
            "test r12d, r12d",
            "je 0x80047a0",
            "mov r10d, dword [r15 + 0x38]",
            "test r10d, r10d",
            "je cryptodev_verbosity",
            "cmp qword [r15 + 0x40], 0",
            "je cryptodev_verbosity",
            "lea rax, [rbp - 0x60]",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, dword [rbx + 8]",
            "mov rsi, qword [rbx + 0x18]",
            "mov r9, qword [rbx + 0x60]",
            "mov rdi, r15",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x58]",
            "mov r8d, dword [rbx + 0x48]",
            "mov qword [rbp - 0x78], r11",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x68]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "mov r12d, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r9d, dword [r15 + 0x38]",
            "mov eax, dword [rbx + 8]",
            "mov rdx, qword [rbp - 0x60]",
            "mov r12, qword [rbp - 0x58]",
            "mov ecx, dword [rbx + 0xc]",
            "test r9d, r9d",
            "mov dword [rbp - 0x64], eax",
            "je 0x8004c66",
            "mov r8d, dword [r15 + 0x40]",
            "test r8d, r8d",
            "je 0x8004c66",
            "mov rax, qword [r15 + 0x60]",
            "mov eax, dword [rax + 0x3c]",
            "mov esi, dword [rbx + 0x30]",
            "cmp esi, eax",
            "ja cryptodev_verbosity",
            "test esi, esi",
            "je 0x8004740",
            "mov edi, dword [r15 + 0x40]",
            "test edi, edi",
            "je 0x8004585",
            "mov rdi, qword [r15 + 0x60]",
            "mov qword [rbp - 0x88], rdx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call crypto_aead_setauthsize",
            "mov rdx, qword [rbp - 0x88]",
            "mov ecx, dword [rbp - 0x80]",
            "mov r11, qword [rbp - 0x78]",
            "mov rax, qword [r15 + 0x68]",
            "test ecx, ecx",
            "mov esi, 0",
            "cmove r11, rsi",
            "mov r8d, dword [rbp - 0x64]",
            "lea rdi, [r15 + 0x38]",
            "mov rsi, r12",
            "mov dword [rax + 0x30], ecx",
            "mov qword [rax + 0x40], r11",
            "cmp word [rbx + 4], 0",
            "mov rcx, r8",
            "mov qword [rbp - 0x78], r8",
            "jne cryptodev_cipher_decrypt",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbp - 0x64]",
            "add r8, qword [rbx + 0x20]",
            "add eax, dword [rbx + 0x30]",
            "mov qword [rbx + 0x28], r8",
            "mov dword [rbx + 0x48], eax",
            "mov rdi, r15",
            "call release_user_pages",
            "mov rdi, qword [rbp - 0x70]",
            "xor esi, esi",
            "call free_pages",
            "test r12d, r12d",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x4c]",
            "mov rsi, r14",
            "mov rdi, r13",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "lea rdi, [r15 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x88",
            "mov eax, r12d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, dword [r15 + 0x38]",
            "test eax, eax",
            "jne 0x8004e22",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004970",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004689",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x800467c",
            "cmp dword [0x08004676], 1",
            "jg current_task",
            "mov r9, qword [rbx + 0x10]",
            "test r9, rdx",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [rbx + 0xc]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rdx, qword [rbx + 0x10]",
            "mov r10, qword [rbx + 0x18]",
            "sub r10, rdx",
            "cmp r10d, 0x100",
            "jbe 0x80048b0",
            "mov eax, dword [0x080046bd]",
            "test eax, eax",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "cmp dword [0x080046d2], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2ea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x30]",
            "mov edx, dword [rbp - 0x64]",
            "sub r8, rax",
            "add r8, qword [rbx + 0x20]",
            "sub edx, eax",
            "mov dword [rbx + 0x48], edx",
            "mov qword [rbx + 0x28], r8",
            "jmp release_user_pages",
            "mov dword [rbx + 0x30], eax",
            "jmp 0x8004585",
            "cmp dword [0x08004757], 1",
            "jle 0x8004689",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "add eax, 1",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r8d, 0x7c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004689",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004bfe",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004810",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x8004810",
            "cmp dword [0x080047ca], 1",
            "jle 0x8004810",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x43",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x78], r11",
            "call printk",
            "mov r11, qword [rbp - 0x78]",
            "nop dword [rax + rax]",
            "movsxd rax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, 1",
            "mov dword [r15 + 0xc0], 0",
            "mov rdi, r15",
            "mov rsi, rcx",
            "lea rax, [rcx + rax - 1]",
            "shr rsi, 0xc",
            "sub edx, esi",
            "shr rax, 0xc",
            "lea ecx, [rdx + rax]",
            "mov dword [r15 + 0xbc], ecx",
            "mov esi, ecx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov ecx, dword [rbp - 0x80]",
            "je 0x8004b46",
            "mov esi, dword [0x08004871]",
            "test esi, esi",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2a0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rcx, rdx",
            "lea rax, [rdx + rax - 1]",
            "mov esi, 1",
            "shr rcx, 0xc",
            "mov rdi, r15",
            "mov qword [rbp - 0x80], r10",
            "sub esi, ecx",
            "shr rax, 0xc",
            "lea r11d, [rsi + rax]",
            "lea esi, [r11 + r11]",
            "mov dword [rbp - 0x78], r11d",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "je 0x8004a70",
            "mov r14d, dword [0x080048f9]",
            "test r14d, r14d",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x92",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rdi, qword [rbp - 0x70]",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "mov edx, dword [rbx + 0xc]",
            "mov rsi, qword [rbp - 0x70]",
            "lea rdi, [rbp - 0x50]",
            "call sg_init_one",
            "lea r11, [rbp - 0x50]",
            "jmp 0x80044a0",
            "cmp qword [rbx + 0x10], 0",
            "jne 0x8004659",
            "mov eax, dword [0x08004981]",
            "test eax, eax",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x72",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "cmp dword [0x080049c7], 0",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x276",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "xor r11d, r11d",
            "jmp 0x80044a0",
            "mov r11d, dword [0x08004a17]",
            "test r11d, r11d",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x80045e5",
            "cmp dword [0x08004a32], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov ecx, r11d",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0xc]",
            "mov edx, 1",
            "mov rdi, qword [rbx + 0x10]",
            "mov qword [rbp - 0x80], r10",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov dword [rbp - 0x78], r11d",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r12, qword [r15 + 0xd0]",
            "movsxd rdi, r11d",
            "mov dword [r15 + 0xbc], r11d",
            "shl rdi, 5",
            "mov esi, r11d",
            "mov dword [r15 + 0xc0], 0",
            "mov qword [rbp - 0x80], r10",
            "add rdi, r12",
            "mov qword [rbp - 0x60], rdi",
            "call sg_init_table",
            "mov edx, dword [rbx + 0xc]",
            "mov rdi, qword [r15 + 0xd0]",
            "mov rsi, qword [rbp - 0x60]",
            "call sg_copy",
            "mov r10, qword [rbp - 0x80]",
            "mov rdi, qword [rbp - 0x60]",
            "mov esi, r10d",
            "call sg_advance",
            "test rax, rax",
            "mov r8, rax",
            "mov qword [rbp - 0x60], rax",
            "je release_user_pages",
            "mov ecx, dword [rbx + 0xc]",
            "mov r9d, dword [rbx + 8]",
            "mov rdx, r12",
            "mov rdi, r15",
            "mov rsi, rbx",
            "call sym.srtp_auth_n_crypt",
            "mov rdi, r15",
            "mov r12d, eax",
            "call release_user_pages",
            "jmp 0x80045f0",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov edx, 1",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0x48]",
            "mov rdi, qword [rbx + 0x20]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r8, qword [r15 + 0xd0]",
            "mov ecx, dword [rbx + 0xc]",
            "mov rdx, r11",
            "mov r9d, dword [rbx + 8]",
            "mov rsi, rbx",
            "mov rdi, r15",
            "mov qword [rbp - 0x60], r8",
            "call sym.tls_auth_n_crypt",
            "mov r12d, eax",
            "jmp release_user_pages",
            "mov rdi, r15",
            "call release_user_pages",
            "mov r13d, dword [0x08004bb9]",
            "test r13d, r13d",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov r12d, 0xffffffea",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004c10], 0",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x8004628",
            "cmp dword [0x08004c28], 0",
            "jle 0x8004c16",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp 0x8004628",
            "xor eax, eax",
            "jmp 0x8004545",
            "cmp dword [0x08004c74], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x80",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004cbd], 0",
            "mov r12d, 0xffffffea",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "cmp dword [0x08004d06], 0",
            "mov r12d, 0xffffffea",
            "js 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2aa",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004d4f], 0",
            "mov r12d, 0xffffffea",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x286",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004d98], 0",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2b2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004ddb], 0",
            "mov r12d, 0xffffffea",
            "js release_user_pages",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "add rax, 0x4b8",
            "mov r9d, esi",
            "mov r8d, 0x241",
            "mov rsi, rax",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [r15 + 0x44], 0",
            "je 0x8004e34",
            "cmp dword [r15 + 0x40], 0",
            "je 0x800464c",
            "cmp dword [0x08004e3b], 0",
            "js 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x270",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004e84], 0",
            "mov r12d, 0xfffffff4",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x28c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r10d",
            "mov r8d, 0x8a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004f0c], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x25a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [0x08004f52], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x250",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004c16",
            "cmp dword [0x08004fd1], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x99",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x0800501a], 0",
            "jle 0x8004a20",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x57",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x79",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov eax, dword [r15 + 0xb4]",
            "mov edx, eax",
            "sub rdx, 1",
            "jmp 0x800467c",
            "cmp dword [0x080050ac], 0",
            "mov r12d, 0xfffffff2",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x292",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x47",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity"
        ]
    },
    "unk.0x80045f0": {
        "function_address": "0x080045f0",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x88",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r15, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [r15 + 0x88]",
            "test eax, eax",
            "je 0x8004427",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "lea r13, [rbx + 0x50]",
            "cmovle edx, dword [rbx + 0x4c]",
            "lea r14, [r15 + 0x78]",
            "mov eax, 0x10",
            "mov rsi, r13",
            "mov rdi, r14",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "test byte [rbx + 6], 0x20",
            "jne 0x8004640",
            "cmp dword [rbx + 0xc], 0x1000",
            "ja cryptodev_verbosity",
            "xor esi, esi",
            "mov edi, 0xd0",
            "call __get_free_pages",
            "test rax, rax",
            "mov qword [rbp - 0x70], rax",
            "je cryptodev_verbosity",
            "mov rsi, qword [rbx + 0x10]",
            "test rsi, rsi",
            "je 0x8004a08",
            "mov edx, dword [rbx + 0xc]",
            "xor r11d, r11d",
            "test edx, edx",
            "jne _copy_from_user",
            "test byte [rbx + 6], 0x10",
            "je 0x80044b3",
            "mov r12d, dword [r15 + 0x40]",
            "test r12d, r12d",
            "je 0x80047a0",
            "mov r10d, dword [r15 + 0x38]",
            "test r10d, r10d",
            "je cryptodev_verbosity",
            "cmp qword [r15 + 0x40], 0",
            "je cryptodev_verbosity",
            "lea rax, [rbp - 0x60]",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, dword [rbx + 8]",
            "mov rsi, qword [rbx + 0x18]",
            "mov r9, qword [rbx + 0x60]",
            "mov rdi, r15",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x58]",
            "mov r8d, dword [rbx + 0x48]",
            "mov qword [rbp - 0x78], r11",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x68]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "mov r12d, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r9d, dword [r15 + 0x38]",
            "mov eax, dword [rbx + 8]",
            "mov rdx, qword [rbp - 0x60]",
            "mov r12, qword [rbp - 0x58]",
            "mov ecx, dword [rbx + 0xc]",
            "test r9d, r9d",
            "mov dword [rbp - 0x64], eax",
            "je 0x8004c66",
            "mov r8d, dword [r15 + 0x40]",
            "test r8d, r8d",
            "je 0x8004c66",
            "mov rax, qword [r15 + 0x60]",
            "mov eax, dword [rax + 0x3c]",
            "mov esi, dword [rbx + 0x30]",
            "cmp esi, eax",
            "ja cryptodev_verbosity",
            "test esi, esi",
            "je 0x8004740",
            "mov edi, dword [r15 + 0x40]",
            "test edi, edi",
            "je 0x8004585",
            "mov rdi, qword [r15 + 0x60]",
            "mov qword [rbp - 0x88], rdx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call crypto_aead_setauthsize",
            "mov rdx, qword [rbp - 0x88]",
            "mov ecx, dword [rbp - 0x80]",
            "mov r11, qword [rbp - 0x78]",
            "mov rax, qword [r15 + 0x68]",
            "test ecx, ecx",
            "mov esi, 0",
            "cmove r11, rsi",
            "mov r8d, dword [rbp - 0x64]",
            "lea rdi, [r15 + 0x38]",
            "mov rsi, r12",
            "mov dword [rax + 0x30], ecx",
            "mov qword [rax + 0x40], r11",
            "cmp word [rbx + 4], 0",
            "mov rcx, r8",
            "mov qword [rbp - 0x78], r8",
            "jne cryptodev_cipher_decrypt",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbp - 0x64]",
            "add r8, qword [rbx + 0x20]",
            "add eax, dword [rbx + 0x30]",
            "mov qword [rbx + 0x28], r8",
            "mov dword [rbx + 0x48], eax",
            "mov rdi, r15",
            "call release_user_pages",
            "mov rdi, qword [rbp - 0x70]",
            "xor esi, esi",
            "call free_pages",
            "test r12d, r12d",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x4c]",
            "mov rsi, r14",
            "mov rdi, r13",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "lea rdi, [r15 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x88",
            "mov eax, r12d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, dword [r15 + 0x38]",
            "test eax, eax",
            "jne 0x8004e22",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004970",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004689",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x800467c",
            "cmp dword [0x08004676], 1",
            "jg current_task",
            "mov r9, qword [rbx + 0x10]",
            "test r9, rdx",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [rbx + 0xc]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rdx, qword [rbx + 0x10]",
            "mov r10, qword [rbx + 0x18]",
            "sub r10, rdx",
            "cmp r10d, 0x100",
            "jbe 0x80048b0",
            "mov eax, dword [0x080046bd]",
            "test eax, eax",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "cmp dword [0x080046d2], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2ea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x30]",
            "mov edx, dword [rbp - 0x64]",
            "sub r8, rax",
            "add r8, qword [rbx + 0x20]",
            "sub edx, eax",
            "mov dword [rbx + 0x48], edx",
            "mov qword [rbx + 0x28], r8",
            "jmp release_user_pages",
            "mov dword [rbx + 0x30], eax",
            "jmp 0x8004585",
            "cmp dword [0x08004757], 1",
            "jle 0x8004689",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "add eax, 1",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r8d, 0x7c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004689",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004bfe",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004810",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x8004810",
            "cmp dword [0x080047ca], 1",
            "jle 0x8004810",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x43",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x78], r11",
            "call printk",
            "mov r11, qword [rbp - 0x78]",
            "nop dword [rax + rax]",
            "movsxd rax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, 1",
            "mov dword [r15 + 0xc0], 0",
            "mov rdi, r15",
            "mov rsi, rcx",
            "lea rax, [rcx + rax - 1]",
            "shr rsi, 0xc",
            "sub edx, esi",
            "shr rax, 0xc",
            "lea ecx, [rdx + rax]",
            "mov dword [r15 + 0xbc], ecx",
            "mov esi, ecx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov ecx, dword [rbp - 0x80]",
            "je 0x8004b46",
            "mov esi, dword [0x08004871]",
            "test esi, esi",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2a0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rcx, rdx",
            "lea rax, [rdx + rax - 1]",
            "mov esi, 1",
            "shr rcx, 0xc",
            "mov rdi, r15",
            "mov qword [rbp - 0x80], r10",
            "sub esi, ecx",
            "shr rax, 0xc",
            "lea r11d, [rsi + rax]",
            "lea esi, [r11 + r11]",
            "mov dword [rbp - 0x78], r11d",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "je 0x8004a70",
            "mov r14d, dword [0x080048f9]",
            "test r14d, r14d",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x92",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rdi, qword [rbp - 0x70]",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "mov edx, dword [rbx + 0xc]",
            "mov rsi, qword [rbp - 0x70]",
            "lea rdi, [rbp - 0x50]",
            "call sg_init_one",
            "lea r11, [rbp - 0x50]",
            "jmp 0x80044a0",
            "cmp qword [rbx + 0x10], 0",
            "jne 0x8004659",
            "mov eax, dword [0x08004981]",
            "test eax, eax",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x72",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "cmp dword [0x080049c7], 0",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x276",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "xor r11d, r11d",
            "jmp 0x80044a0",
            "mov r11d, dword [0x08004a17]",
            "test r11d, r11d",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x80045e5",
            "cmp dword [0x08004a32], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov ecx, r11d",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0xc]",
            "mov edx, 1",
            "mov rdi, qword [rbx + 0x10]",
            "mov qword [rbp - 0x80], r10",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov dword [rbp - 0x78], r11d",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r12, qword [r15 + 0xd0]",
            "movsxd rdi, r11d",
            "mov dword [r15 + 0xbc], r11d",
            "shl rdi, 5",
            "mov esi, r11d",
            "mov dword [r15 + 0xc0], 0",
            "mov qword [rbp - 0x80], r10",
            "add rdi, r12",
            "mov qword [rbp - 0x60], rdi",
            "call sg_init_table",
            "mov edx, dword [rbx + 0xc]",
            "mov rdi, qword [r15 + 0xd0]",
            "mov rsi, qword [rbp - 0x60]",
            "call sg_copy",
            "mov r10, qword [rbp - 0x80]",
            "mov rdi, qword [rbp - 0x60]",
            "mov esi, r10d",
            "call sg_advance",
            "test rax, rax",
            "mov r8, rax",
            "mov qword [rbp - 0x60], rax",
            "je release_user_pages",
            "mov ecx, dword [rbx + 0xc]",
            "mov r9d, dword [rbx + 8]",
            "mov rdx, r12",
            "mov rdi, r15",
            "mov rsi, rbx",
            "call sym.srtp_auth_n_crypt",
            "mov rdi, r15",
            "mov r12d, eax",
            "call release_user_pages",
            "jmp 0x80045f0",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov edx, 1",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0x48]",
            "mov rdi, qword [rbx + 0x20]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r8, qword [r15 + 0xd0]",
            "mov ecx, dword [rbx + 0xc]",
            "mov rdx, r11",
            "mov r9d, dword [rbx + 8]",
            "mov rsi, rbx",
            "mov rdi, r15",
            "mov qword [rbp - 0x60], r8",
            "call sym.tls_auth_n_crypt",
            "mov r12d, eax",
            "jmp release_user_pages",
            "mov rdi, r15",
            "call release_user_pages",
            "mov r13d, dword [0x08004bb9]",
            "test r13d, r13d",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov r12d, 0xffffffea",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004c10], 0",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x8004628",
            "cmp dword [0x08004c28], 0",
            "jle 0x8004c16",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp 0x8004628",
            "xor eax, eax",
            "jmp 0x8004545",
            "cmp dword [0x08004c74], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x80",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004cbd], 0",
            "mov r12d, 0xffffffea",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "cmp dword [0x08004d06], 0",
            "mov r12d, 0xffffffea",
            "js 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2aa",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004d4f], 0",
            "mov r12d, 0xffffffea",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x286",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004d98], 0",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2b2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004ddb], 0",
            "mov r12d, 0xffffffea",
            "js release_user_pages",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "add rax, 0x4b8",
            "mov r9d, esi",
            "mov r8d, 0x241",
            "mov rsi, rax",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [r15 + 0x44], 0",
            "je 0x8004e34",
            "cmp dword [r15 + 0x40], 0",
            "je 0x800464c",
            "cmp dword [0x08004e3b], 0",
            "js 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x270",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004e84], 0",
            "mov r12d, 0xfffffff4",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x28c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r10d",
            "mov r8d, 0x8a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004f0c], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x25a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [0x08004f52], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x250",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004c16",
            "cmp dword [0x08004fd1], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x99",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x0800501a], 0",
            "jle 0x8004a20",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x57",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x79",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov eax, dword [r15 + 0xb4]",
            "mov edx, eax",
            "sub rdx, 1",
            "jmp 0x800467c",
            "cmp dword [0x080050ac], 0",
            "mov r12d, 0xfffffff2",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x292",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x47",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity"
        ]
    },
    "unk.0x800461f": {
        "function_address": "0x0800461f",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x88",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r15, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [r15 + 0x88]",
            "test eax, eax",
            "je 0x8004427",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "lea r13, [rbx + 0x50]",
            "cmovle edx, dword [rbx + 0x4c]",
            "lea r14, [r15 + 0x78]",
            "mov eax, 0x10",
            "mov rsi, r13",
            "mov rdi, r14",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "test byte [rbx + 6], 0x20",
            "jne 0x8004640",
            "cmp dword [rbx + 0xc], 0x1000",
            "ja cryptodev_verbosity",
            "xor esi, esi",
            "mov edi, 0xd0",
            "call __get_free_pages",
            "test rax, rax",
            "mov qword [rbp - 0x70], rax",
            "je cryptodev_verbosity",
            "mov rsi, qword [rbx + 0x10]",
            "test rsi, rsi",
            "je 0x8004a08",
            "mov edx, dword [rbx + 0xc]",
            "xor r11d, r11d",
            "test edx, edx",
            "jne _copy_from_user",
            "test byte [rbx + 6], 0x10",
            "je 0x80044b3",
            "mov r12d, dword [r15 + 0x40]",
            "test r12d, r12d",
            "je 0x80047a0",
            "mov r10d, dword [r15 + 0x38]",
            "test r10d, r10d",
            "je cryptodev_verbosity",
            "cmp qword [r15 + 0x40], 0",
            "je cryptodev_verbosity",
            "lea rax, [rbp - 0x60]",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, dword [rbx + 8]",
            "mov rsi, qword [rbx + 0x18]",
            "mov r9, qword [rbx + 0x60]",
            "mov rdi, r15",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x58]",
            "mov r8d, dword [rbx + 0x48]",
            "mov qword [rbp - 0x78], r11",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x68]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "mov r12d, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r9d, dword [r15 + 0x38]",
            "mov eax, dword [rbx + 8]",
            "mov rdx, qword [rbp - 0x60]",
            "mov r12, qword [rbp - 0x58]",
            "mov ecx, dword [rbx + 0xc]",
            "test r9d, r9d",
            "mov dword [rbp - 0x64], eax",
            "je 0x8004c66",
            "mov r8d, dword [r15 + 0x40]",
            "test r8d, r8d",
            "je 0x8004c66",
            "mov rax, qword [r15 + 0x60]",
            "mov eax, dword [rax + 0x3c]",
            "mov esi, dword [rbx + 0x30]",
            "cmp esi, eax",
            "ja cryptodev_verbosity",
            "test esi, esi",
            "je 0x8004740",
            "mov edi, dword [r15 + 0x40]",
            "test edi, edi",
            "je 0x8004585",
            "mov rdi, qword [r15 + 0x60]",
            "mov qword [rbp - 0x88], rdx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call crypto_aead_setauthsize",
            "mov rdx, qword [rbp - 0x88]",
            "mov ecx, dword [rbp - 0x80]",
            "mov r11, qword [rbp - 0x78]",
            "mov rax, qword [r15 + 0x68]",
            "test ecx, ecx",
            "mov esi, 0",
            "cmove r11, rsi",
            "mov r8d, dword [rbp - 0x64]",
            "lea rdi, [r15 + 0x38]",
            "mov rsi, r12",
            "mov dword [rax + 0x30], ecx",
            "mov qword [rax + 0x40], r11",
            "cmp word [rbx + 4], 0",
            "mov rcx, r8",
            "mov qword [rbp - 0x78], r8",
            "jne cryptodev_cipher_decrypt",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbp - 0x64]",
            "add r8, qword [rbx + 0x20]",
            "add eax, dword [rbx + 0x30]",
            "mov qword [rbx + 0x28], r8",
            "mov dword [rbx + 0x48], eax",
            "mov rdi, r15",
            "call release_user_pages",
            "mov rdi, qword [rbp - 0x70]",
            "xor esi, esi",
            "call free_pages",
            "test r12d, r12d",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x4c]",
            "mov rsi, r14",
            "mov rdi, r13",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "lea rdi, [r15 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x88",
            "mov eax, r12d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, dword [r15 + 0x38]",
            "test eax, eax",
            "jne 0x8004e22",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004970",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004689",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x800467c",
            "cmp dword [0x08004676], 1",
            "jg current_task",
            "mov r9, qword [rbx + 0x10]",
            "test r9, rdx",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [rbx + 0xc]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rdx, qword [rbx + 0x10]",
            "mov r10, qword [rbx + 0x18]",
            "sub r10, rdx",
            "cmp r10d, 0x100",
            "jbe 0x80048b0",
            "mov eax, dword [0x080046bd]",
            "test eax, eax",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "cmp dword [0x080046d2], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2ea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x30]",
            "mov edx, dword [rbp - 0x64]",
            "sub r8, rax",
            "add r8, qword [rbx + 0x20]",
            "sub edx, eax",
            "mov dword [rbx + 0x48], edx",
            "mov qword [rbx + 0x28], r8",
            "jmp release_user_pages",
            "mov dword [rbx + 0x30], eax",
            "jmp 0x8004585",
            "cmp dword [0x08004757], 1",
            "jle 0x8004689",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "add eax, 1",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r8d, 0x7c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004689",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004bfe",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004810",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x8004810",
            "cmp dword [0x080047ca], 1",
            "jle 0x8004810",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x43",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x78], r11",
            "call printk",
            "mov r11, qword [rbp - 0x78]",
            "nop dword [rax + rax]",
            "movsxd rax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, 1",
            "mov dword [r15 + 0xc0], 0",
            "mov rdi, r15",
            "mov rsi, rcx",
            "lea rax, [rcx + rax - 1]",
            "shr rsi, 0xc",
            "sub edx, esi",
            "shr rax, 0xc",
            "lea ecx, [rdx + rax]",
            "mov dword [r15 + 0xbc], ecx",
            "mov esi, ecx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov ecx, dword [rbp - 0x80]",
            "je 0x8004b46",
            "mov esi, dword [0x08004871]",
            "test esi, esi",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2a0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rcx, rdx",
            "lea rax, [rdx + rax - 1]",
            "mov esi, 1",
            "shr rcx, 0xc",
            "mov rdi, r15",
            "mov qword [rbp - 0x80], r10",
            "sub esi, ecx",
            "shr rax, 0xc",
            "lea r11d, [rsi + rax]",
            "lea esi, [r11 + r11]",
            "mov dword [rbp - 0x78], r11d",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "je 0x8004a70",
            "mov r14d, dword [0x080048f9]",
            "test r14d, r14d",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x92",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rdi, qword [rbp - 0x70]",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "mov edx, dword [rbx + 0xc]",
            "mov rsi, qword [rbp - 0x70]",
            "lea rdi, [rbp - 0x50]",
            "call sg_init_one",
            "lea r11, [rbp - 0x50]",
            "jmp 0x80044a0",
            "cmp qword [rbx + 0x10], 0",
            "jne 0x8004659",
            "mov eax, dword [0x08004981]",
            "test eax, eax",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x72",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "cmp dword [0x080049c7], 0",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x276",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "xor r11d, r11d",
            "jmp 0x80044a0",
            "mov r11d, dword [0x08004a17]",
            "test r11d, r11d",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x80045e5",
            "cmp dword [0x08004a32], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov ecx, r11d",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0xc]",
            "mov edx, 1",
            "mov rdi, qword [rbx + 0x10]",
            "mov qword [rbp - 0x80], r10",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov dword [rbp - 0x78], r11d",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r12, qword [r15 + 0xd0]",
            "movsxd rdi, r11d",
            "mov dword [r15 + 0xbc], r11d",
            "shl rdi, 5",
            "mov esi, r11d",
            "mov dword [r15 + 0xc0], 0",
            "mov qword [rbp - 0x80], r10",
            "add rdi, r12",
            "mov qword [rbp - 0x60], rdi",
            "call sg_init_table",
            "mov edx, dword [rbx + 0xc]",
            "mov rdi, qword [r15 + 0xd0]",
            "mov rsi, qword [rbp - 0x60]",
            "call sg_copy",
            "mov r10, qword [rbp - 0x80]",
            "mov rdi, qword [rbp - 0x60]",
            "mov esi, r10d",
            "call sg_advance",
            "test rax, rax",
            "mov r8, rax",
            "mov qword [rbp - 0x60], rax",
            "je release_user_pages",
            "mov ecx, dword [rbx + 0xc]",
            "mov r9d, dword [rbx + 8]",
            "mov rdx, r12",
            "mov rdi, r15",
            "mov rsi, rbx",
            "call sym.srtp_auth_n_crypt",
            "mov rdi, r15",
            "mov r12d, eax",
            "call release_user_pages",
            "jmp 0x80045f0",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov edx, 1",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0x48]",
            "mov rdi, qword [rbx + 0x20]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r8, qword [r15 + 0xd0]",
            "mov ecx, dword [rbx + 0xc]",
            "mov rdx, r11",
            "mov r9d, dword [rbx + 8]",
            "mov rsi, rbx",
            "mov rdi, r15",
            "mov qword [rbp - 0x60], r8",
            "call sym.tls_auth_n_crypt",
            "mov r12d, eax",
            "jmp release_user_pages",
            "mov rdi, r15",
            "call release_user_pages",
            "mov r13d, dword [0x08004bb9]",
            "test r13d, r13d",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov r12d, 0xffffffea",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004c10], 0",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x8004628",
            "cmp dword [0x08004c28], 0",
            "jle 0x8004c16",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp 0x8004628",
            "xor eax, eax",
            "jmp 0x8004545",
            "cmp dword [0x08004c74], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x80",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004cbd], 0",
            "mov r12d, 0xffffffea",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "cmp dword [0x08004d06], 0",
            "mov r12d, 0xffffffea",
            "js 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2aa",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004d4f], 0",
            "mov r12d, 0xffffffea",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x286",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004d98], 0",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2b2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004ddb], 0",
            "mov r12d, 0xffffffea",
            "js release_user_pages",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "add rax, 0x4b8",
            "mov r9d, esi",
            "mov r8d, 0x241",
            "mov rsi, rax",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [r15 + 0x44], 0",
            "je 0x8004e34",
            "cmp dword [r15 + 0x40], 0",
            "je 0x800464c",
            "cmp dword [0x08004e3b], 0",
            "js 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x270",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004e84], 0",
            "mov r12d, 0xfffffff4",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x28c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r10d",
            "mov r8d, 0x8a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004f0c], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x25a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [0x08004f52], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x250",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004c16",
            "cmp dword [0x08004fd1], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x99",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x0800501a], 0",
            "jle 0x8004a20",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x57",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x79",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov eax, dword [r15 + 0xb4]",
            "mov edx, eax",
            "sub rdx, 1",
            "jmp 0x800467c",
            "cmp dword [0x080050ac], 0",
            "mov r12d, 0xfffffff2",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x292",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x47",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity"
        ]
    },
    "unk.0x8004628": {
        "function_address": "0x08004628",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x88",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r15, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [r15 + 0x88]",
            "test eax, eax",
            "je 0x8004427",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "lea r13, [rbx + 0x50]",
            "cmovle edx, dword [rbx + 0x4c]",
            "lea r14, [r15 + 0x78]",
            "mov eax, 0x10",
            "mov rsi, r13",
            "mov rdi, r14",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "test byte [rbx + 6], 0x20",
            "jne 0x8004640",
            "cmp dword [rbx + 0xc], 0x1000",
            "ja cryptodev_verbosity",
            "xor esi, esi",
            "mov edi, 0xd0",
            "call __get_free_pages",
            "test rax, rax",
            "mov qword [rbp - 0x70], rax",
            "je cryptodev_verbosity",
            "mov rsi, qword [rbx + 0x10]",
            "test rsi, rsi",
            "je 0x8004a08",
            "mov edx, dword [rbx + 0xc]",
            "xor r11d, r11d",
            "test edx, edx",
            "jne _copy_from_user",
            "test byte [rbx + 6], 0x10",
            "je 0x80044b3",
            "mov r12d, dword [r15 + 0x40]",
            "test r12d, r12d",
            "je 0x80047a0",
            "mov r10d, dword [r15 + 0x38]",
            "test r10d, r10d",
            "je cryptodev_verbosity",
            "cmp qword [r15 + 0x40], 0",
            "je cryptodev_verbosity",
            "lea rax, [rbp - 0x60]",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, dword [rbx + 8]",
            "mov rsi, qword [rbx + 0x18]",
            "mov r9, qword [rbx + 0x60]",
            "mov rdi, r15",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x58]",
            "mov r8d, dword [rbx + 0x48]",
            "mov qword [rbp - 0x78], r11",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x68]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "mov r12d, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r9d, dword [r15 + 0x38]",
            "mov eax, dword [rbx + 8]",
            "mov rdx, qword [rbp - 0x60]",
            "mov r12, qword [rbp - 0x58]",
            "mov ecx, dword [rbx + 0xc]",
            "test r9d, r9d",
            "mov dword [rbp - 0x64], eax",
            "je 0x8004c66",
            "mov r8d, dword [r15 + 0x40]",
            "test r8d, r8d",
            "je 0x8004c66",
            "mov rax, qword [r15 + 0x60]",
            "mov eax, dword [rax + 0x3c]",
            "mov esi, dword [rbx + 0x30]",
            "cmp esi, eax",
            "ja cryptodev_verbosity",
            "test esi, esi",
            "je 0x8004740",
            "mov edi, dword [r15 + 0x40]",
            "test edi, edi",
            "je 0x8004585",
            "mov rdi, qword [r15 + 0x60]",
            "mov qword [rbp - 0x88], rdx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call crypto_aead_setauthsize",
            "mov rdx, qword [rbp - 0x88]",
            "mov ecx, dword [rbp - 0x80]",
            "mov r11, qword [rbp - 0x78]",
            "mov rax, qword [r15 + 0x68]",
            "test ecx, ecx",
            "mov esi, 0",
            "cmove r11, rsi",
            "mov r8d, dword [rbp - 0x64]",
            "lea rdi, [r15 + 0x38]",
            "mov rsi, r12",
            "mov dword [rax + 0x30], ecx",
            "mov qword [rax + 0x40], r11",
            "cmp word [rbx + 4], 0",
            "mov rcx, r8",
            "mov qword [rbp - 0x78], r8",
            "jne cryptodev_cipher_decrypt",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbp - 0x64]",
            "add r8, qword [rbx + 0x20]",
            "add eax, dword [rbx + 0x30]",
            "mov qword [rbx + 0x28], r8",
            "mov dword [rbx + 0x48], eax",
            "mov rdi, r15",
            "call release_user_pages",
            "mov rdi, qword [rbp - 0x70]",
            "xor esi, esi",
            "call free_pages",
            "test r12d, r12d",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x4c]",
            "mov rsi, r14",
            "mov rdi, r13",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "lea rdi, [r15 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x88",
            "mov eax, r12d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, dword [r15 + 0x38]",
            "test eax, eax",
            "jne 0x8004e22",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004970",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004689",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x800467c",
            "cmp dword [0x08004676], 1",
            "jg current_task",
            "mov r9, qword [rbx + 0x10]",
            "test r9, rdx",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [rbx + 0xc]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rdx, qword [rbx + 0x10]",
            "mov r10, qword [rbx + 0x18]",
            "sub r10, rdx",
            "cmp r10d, 0x100",
            "jbe 0x80048b0",
            "mov eax, dword [0x080046bd]",
            "test eax, eax",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "cmp dword [0x080046d2], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2ea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x30]",
            "mov edx, dword [rbp - 0x64]",
            "sub r8, rax",
            "add r8, qword [rbx + 0x20]",
            "sub edx, eax",
            "mov dword [rbx + 0x48], edx",
            "mov qword [rbx + 0x28], r8",
            "jmp release_user_pages",
            "mov dword [rbx + 0x30], eax",
            "jmp 0x8004585",
            "cmp dword [0x08004757], 1",
            "jle 0x8004689",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "add eax, 1",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r8d, 0x7c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004689",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004bfe",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004810",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x8004810",
            "cmp dword [0x080047ca], 1",
            "jle 0x8004810",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x43",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x78], r11",
            "call printk",
            "mov r11, qword [rbp - 0x78]",
            "nop dword [rax + rax]",
            "movsxd rax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, 1",
            "mov dword [r15 + 0xc0], 0",
            "mov rdi, r15",
            "mov rsi, rcx",
            "lea rax, [rcx + rax - 1]",
            "shr rsi, 0xc",
            "sub edx, esi",
            "shr rax, 0xc",
            "lea ecx, [rdx + rax]",
            "mov dword [r15 + 0xbc], ecx",
            "mov esi, ecx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov ecx, dword [rbp - 0x80]",
            "je 0x8004b46",
            "mov esi, dword [0x08004871]",
            "test esi, esi",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2a0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rcx, rdx",
            "lea rax, [rdx + rax - 1]",
            "mov esi, 1",
            "shr rcx, 0xc",
            "mov rdi, r15",
            "mov qword [rbp - 0x80], r10",
            "sub esi, ecx",
            "shr rax, 0xc",
            "lea r11d, [rsi + rax]",
            "lea esi, [r11 + r11]",
            "mov dword [rbp - 0x78], r11d",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "je 0x8004a70",
            "mov r14d, dword [0x080048f9]",
            "test r14d, r14d",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x92",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rdi, qword [rbp - 0x70]",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "mov edx, dword [rbx + 0xc]",
            "mov rsi, qword [rbp - 0x70]",
            "lea rdi, [rbp - 0x50]",
            "call sg_init_one",
            "lea r11, [rbp - 0x50]",
            "jmp 0x80044a0",
            "cmp qword [rbx + 0x10], 0",
            "jne 0x8004659",
            "mov eax, dword [0x08004981]",
            "test eax, eax",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x72",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "cmp dword [0x080049c7], 0",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x276",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "xor r11d, r11d",
            "jmp 0x80044a0",
            "mov r11d, dword [0x08004a17]",
            "test r11d, r11d",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x80045e5",
            "cmp dword [0x08004a32], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov ecx, r11d",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0xc]",
            "mov edx, 1",
            "mov rdi, qword [rbx + 0x10]",
            "mov qword [rbp - 0x80], r10",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov dword [rbp - 0x78], r11d",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r12, qword [r15 + 0xd0]",
            "movsxd rdi, r11d",
            "mov dword [r15 + 0xbc], r11d",
            "shl rdi, 5",
            "mov esi, r11d",
            "mov dword [r15 + 0xc0], 0",
            "mov qword [rbp - 0x80], r10",
            "add rdi, r12",
            "mov qword [rbp - 0x60], rdi",
            "call sg_init_table",
            "mov edx, dword [rbx + 0xc]",
            "mov rdi, qword [r15 + 0xd0]",
            "mov rsi, qword [rbp - 0x60]",
            "call sg_copy",
            "mov r10, qword [rbp - 0x80]",
            "mov rdi, qword [rbp - 0x60]",
            "mov esi, r10d",
            "call sg_advance",
            "test rax, rax",
            "mov r8, rax",
            "mov qword [rbp - 0x60], rax",
            "je release_user_pages",
            "mov ecx, dword [rbx + 0xc]",
            "mov r9d, dword [rbx + 8]",
            "mov rdx, r12",
            "mov rdi, r15",
            "mov rsi, rbx",
            "call sym.srtp_auth_n_crypt",
            "mov rdi, r15",
            "mov r12d, eax",
            "call release_user_pages",
            "jmp 0x80045f0",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov edx, 1",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0x48]",
            "mov rdi, qword [rbx + 0x20]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r8, qword [r15 + 0xd0]",
            "mov ecx, dword [rbx + 0xc]",
            "mov rdx, r11",
            "mov r9d, dword [rbx + 8]",
            "mov rsi, rbx",
            "mov rdi, r15",
            "mov qword [rbp - 0x60], r8",
            "call sym.tls_auth_n_crypt",
            "mov r12d, eax",
            "jmp release_user_pages",
            "mov rdi, r15",
            "call release_user_pages",
            "mov r13d, dword [0x08004bb9]",
            "test r13d, r13d",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov r12d, 0xffffffea",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004c10], 0",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x8004628",
            "cmp dword [0x08004c28], 0",
            "jle 0x8004c16",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp 0x8004628",
            "xor eax, eax",
            "jmp 0x8004545",
            "cmp dword [0x08004c74], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x80",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004cbd], 0",
            "mov r12d, 0xffffffea",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "cmp dword [0x08004d06], 0",
            "mov r12d, 0xffffffea",
            "js 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2aa",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004d4f], 0",
            "mov r12d, 0xffffffea",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x286",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004d98], 0",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2b2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004ddb], 0",
            "mov r12d, 0xffffffea",
            "js release_user_pages",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "add rax, 0x4b8",
            "mov r9d, esi",
            "mov r8d, 0x241",
            "mov rsi, rax",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [r15 + 0x44], 0",
            "je 0x8004e34",
            "cmp dword [r15 + 0x40], 0",
            "je 0x800464c",
            "cmp dword [0x08004e3b], 0",
            "js 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x270",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004e84], 0",
            "mov r12d, 0xfffffff4",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x28c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r10d",
            "mov r8d, 0x8a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004f0c], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x25a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [0x08004f52], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x250",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004c16",
            "cmp dword [0x08004fd1], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x99",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x0800501a], 0",
            "jle 0x8004a20",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x57",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x79",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov eax, dword [r15 + 0xb4]",
            "mov edx, eax",
            "sub rdx, 1",
            "jmp 0x800467c",
            "cmp dword [0x080050ac], 0",
            "mov r12d, 0xfffffff2",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x292",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x47",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity"
        ]
    },
    "unk.0x8004709": {
        "function_address": "0x08004709",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x88",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r15, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [r15 + 0x88]",
            "test eax, eax",
            "je 0x8004427",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "lea r13, [rbx + 0x50]",
            "cmovle edx, dword [rbx + 0x4c]",
            "lea r14, [r15 + 0x78]",
            "mov eax, 0x10",
            "mov rsi, r13",
            "mov rdi, r14",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "test byte [rbx + 6], 0x20",
            "jne 0x8004640",
            "cmp dword [rbx + 0xc], 0x1000",
            "ja cryptodev_verbosity",
            "xor esi, esi",
            "mov edi, 0xd0",
            "call __get_free_pages",
            "test rax, rax",
            "mov qword [rbp - 0x70], rax",
            "je cryptodev_verbosity",
            "mov rsi, qword [rbx + 0x10]",
            "test rsi, rsi",
            "je 0x8004a08",
            "mov edx, dword [rbx + 0xc]",
            "xor r11d, r11d",
            "test edx, edx",
            "jne _copy_from_user",
            "test byte [rbx + 6], 0x10",
            "je 0x80044b3",
            "mov r12d, dword [r15 + 0x40]",
            "test r12d, r12d",
            "je 0x80047a0",
            "mov r10d, dword [r15 + 0x38]",
            "test r10d, r10d",
            "je cryptodev_verbosity",
            "cmp qword [r15 + 0x40], 0",
            "je cryptodev_verbosity",
            "lea rax, [rbp - 0x60]",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, dword [rbx + 8]",
            "mov rsi, qword [rbx + 0x18]",
            "mov r9, qword [rbx + 0x60]",
            "mov rdi, r15",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x58]",
            "mov r8d, dword [rbx + 0x48]",
            "mov qword [rbp - 0x78], r11",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x68]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "mov r12d, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r9d, dword [r15 + 0x38]",
            "mov eax, dword [rbx + 8]",
            "mov rdx, qword [rbp - 0x60]",
            "mov r12, qword [rbp - 0x58]",
            "mov ecx, dword [rbx + 0xc]",
            "test r9d, r9d",
            "mov dword [rbp - 0x64], eax",
            "je 0x8004c66",
            "mov r8d, dword [r15 + 0x40]",
            "test r8d, r8d",
            "je 0x8004c66",
            "mov rax, qword [r15 + 0x60]",
            "mov eax, dword [rax + 0x3c]",
            "mov esi, dword [rbx + 0x30]",
            "cmp esi, eax",
            "ja cryptodev_verbosity",
            "test esi, esi",
            "je 0x8004740",
            "mov edi, dword [r15 + 0x40]",
            "test edi, edi",
            "je 0x8004585",
            "mov rdi, qword [r15 + 0x60]",
            "mov qword [rbp - 0x88], rdx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call crypto_aead_setauthsize",
            "mov rdx, qword [rbp - 0x88]",
            "mov ecx, dword [rbp - 0x80]",
            "mov r11, qword [rbp - 0x78]",
            "mov rax, qword [r15 + 0x68]",
            "test ecx, ecx",
            "mov esi, 0",
            "cmove r11, rsi",
            "mov r8d, dword [rbp - 0x64]",
            "lea rdi, [r15 + 0x38]",
            "mov rsi, r12",
            "mov dword [rax + 0x30], ecx",
            "mov qword [rax + 0x40], r11",
            "cmp word [rbx + 4], 0",
            "mov rcx, r8",
            "mov qword [rbp - 0x78], r8",
            "jne cryptodev_cipher_decrypt",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbp - 0x64]",
            "add r8, qword [rbx + 0x20]",
            "add eax, dword [rbx + 0x30]",
            "mov qword [rbx + 0x28], r8",
            "mov dword [rbx + 0x48], eax",
            "mov rdi, r15",
            "call release_user_pages",
            "mov rdi, qword [rbp - 0x70]",
            "xor esi, esi",
            "call free_pages",
            "test r12d, r12d",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x4c]",
            "mov rsi, r14",
            "mov rdi, r13",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "lea rdi, [r15 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x88",
            "mov eax, r12d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, dword [r15 + 0x38]",
            "test eax, eax",
            "jne 0x8004e22",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004970",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004689",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x800467c",
            "cmp dword [0x08004676], 1",
            "jg current_task",
            "mov r9, qword [rbx + 0x10]",
            "test r9, rdx",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [rbx + 0xc]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rdx, qword [rbx + 0x10]",
            "mov r10, qword [rbx + 0x18]",
            "sub r10, rdx",
            "cmp r10d, 0x100",
            "jbe 0x80048b0",
            "mov eax, dword [0x080046bd]",
            "test eax, eax",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "cmp dword [0x080046d2], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2ea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x30]",
            "mov edx, dword [rbp - 0x64]",
            "sub r8, rax",
            "add r8, qword [rbx + 0x20]",
            "sub edx, eax",
            "mov dword [rbx + 0x48], edx",
            "mov qword [rbx + 0x28], r8",
            "jmp release_user_pages",
            "mov dword [rbx + 0x30], eax",
            "jmp 0x8004585",
            "cmp dword [0x08004757], 1",
            "jle 0x8004689",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "add eax, 1",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r8d, 0x7c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004689",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004bfe",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004810",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x8004810",
            "cmp dword [0x080047ca], 1",
            "jle 0x8004810",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x43",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x78], r11",
            "call printk",
            "mov r11, qword [rbp - 0x78]",
            "nop dword [rax + rax]",
            "movsxd rax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, 1",
            "mov dword [r15 + 0xc0], 0",
            "mov rdi, r15",
            "mov rsi, rcx",
            "lea rax, [rcx + rax - 1]",
            "shr rsi, 0xc",
            "sub edx, esi",
            "shr rax, 0xc",
            "lea ecx, [rdx + rax]",
            "mov dword [r15 + 0xbc], ecx",
            "mov esi, ecx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov ecx, dword [rbp - 0x80]",
            "je 0x8004b46",
            "mov esi, dword [0x08004871]",
            "test esi, esi",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2a0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rcx, rdx",
            "lea rax, [rdx + rax - 1]",
            "mov esi, 1",
            "shr rcx, 0xc",
            "mov rdi, r15",
            "mov qword [rbp - 0x80], r10",
            "sub esi, ecx",
            "shr rax, 0xc",
            "lea r11d, [rsi + rax]",
            "lea esi, [r11 + r11]",
            "mov dword [rbp - 0x78], r11d",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "je 0x8004a70",
            "mov r14d, dword [0x080048f9]",
            "test r14d, r14d",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x92",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rdi, qword [rbp - 0x70]",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "mov edx, dword [rbx + 0xc]",
            "mov rsi, qword [rbp - 0x70]",
            "lea rdi, [rbp - 0x50]",
            "call sg_init_one",
            "lea r11, [rbp - 0x50]",
            "jmp 0x80044a0",
            "cmp qword [rbx + 0x10], 0",
            "jne 0x8004659",
            "mov eax, dword [0x08004981]",
            "test eax, eax",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x72",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "cmp dword [0x080049c7], 0",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x276",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "xor r11d, r11d",
            "jmp 0x80044a0",
            "mov r11d, dword [0x08004a17]",
            "test r11d, r11d",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x80045e5",
            "cmp dword [0x08004a32], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov ecx, r11d",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0xc]",
            "mov edx, 1",
            "mov rdi, qword [rbx + 0x10]",
            "mov qword [rbp - 0x80], r10",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov dword [rbp - 0x78], r11d",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r12, qword [r15 + 0xd0]",
            "movsxd rdi, r11d",
            "mov dword [r15 + 0xbc], r11d",
            "shl rdi, 5",
            "mov esi, r11d",
            "mov dword [r15 + 0xc0], 0",
            "mov qword [rbp - 0x80], r10",
            "add rdi, r12",
            "mov qword [rbp - 0x60], rdi",
            "call sg_init_table",
            "mov edx, dword [rbx + 0xc]",
            "mov rdi, qword [r15 + 0xd0]",
            "mov rsi, qword [rbp - 0x60]",
            "call sg_copy",
            "mov r10, qword [rbp - 0x80]",
            "mov rdi, qword [rbp - 0x60]",
            "mov esi, r10d",
            "call sg_advance",
            "test rax, rax",
            "mov r8, rax",
            "mov qword [rbp - 0x60], rax",
            "je release_user_pages",
            "mov ecx, dword [rbx + 0xc]",
            "mov r9d, dword [rbx + 8]",
            "mov rdx, r12",
            "mov rdi, r15",
            "mov rsi, rbx",
            "call sym.srtp_auth_n_crypt",
            "mov rdi, r15",
            "mov r12d, eax",
            "call release_user_pages",
            "jmp 0x80045f0",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov edx, 1",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0x48]",
            "mov rdi, qword [rbx + 0x20]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r8, qword [r15 + 0xd0]",
            "mov ecx, dword [rbx + 0xc]",
            "mov rdx, r11",
            "mov r9d, dword [rbx + 8]",
            "mov rsi, rbx",
            "mov rdi, r15",
            "mov qword [rbp - 0x60], r8",
            "call sym.tls_auth_n_crypt",
            "mov r12d, eax",
            "jmp release_user_pages",
            "mov rdi, r15",
            "call release_user_pages",
            "mov r13d, dword [0x08004bb9]",
            "test r13d, r13d",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov r12d, 0xffffffea",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004c10], 0",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x8004628",
            "cmp dword [0x08004c28], 0",
            "jle 0x8004c16",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp 0x8004628",
            "xor eax, eax",
            "jmp 0x8004545",
            "cmp dword [0x08004c74], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x80",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004cbd], 0",
            "mov r12d, 0xffffffea",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "cmp dword [0x08004d06], 0",
            "mov r12d, 0xffffffea",
            "js 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2aa",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004d4f], 0",
            "mov r12d, 0xffffffea",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x286",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004d98], 0",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2b2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004ddb], 0",
            "mov r12d, 0xffffffea",
            "js release_user_pages",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "add rax, 0x4b8",
            "mov r9d, esi",
            "mov r8d, 0x241",
            "mov rsi, rax",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [r15 + 0x44], 0",
            "je 0x8004e34",
            "cmp dword [r15 + 0x40], 0",
            "je 0x800464c",
            "cmp dword [0x08004e3b], 0",
            "js 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x270",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004e84], 0",
            "mov r12d, 0xfffffff4",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x28c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r10d",
            "mov r8d, 0x8a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004f0c], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x25a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [0x08004f52], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x250",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004c16",
            "cmp dword [0x08004fd1], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x99",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x0800501a], 0",
            "jle 0x8004a20",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x57",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x79",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov eax, dword [r15 + 0xb4]",
            "mov edx, eax",
            "sub rdx, 1",
            "jmp 0x800467c",
            "cmp dword [0x080050ac], 0",
            "mov r12d, 0xfffffff2",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x292",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x47",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity"
        ]
    },
    "unk.0x8004715": {
        "function_address": "0x08004715",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x88",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r15, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [r15 + 0x88]",
            "test eax, eax",
            "je 0x8004427",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "lea r13, [rbx + 0x50]",
            "cmovle edx, dword [rbx + 0x4c]",
            "lea r14, [r15 + 0x78]",
            "mov eax, 0x10",
            "mov rsi, r13",
            "mov rdi, r14",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "test byte [rbx + 6], 0x20",
            "jne 0x8004640",
            "cmp dword [rbx + 0xc], 0x1000",
            "ja cryptodev_verbosity",
            "xor esi, esi",
            "mov edi, 0xd0",
            "call __get_free_pages",
            "test rax, rax",
            "mov qword [rbp - 0x70], rax",
            "je cryptodev_verbosity",
            "mov rsi, qword [rbx + 0x10]",
            "test rsi, rsi",
            "je 0x8004a08",
            "mov edx, dword [rbx + 0xc]",
            "xor r11d, r11d",
            "test edx, edx",
            "jne _copy_from_user",
            "test byte [rbx + 6], 0x10",
            "je 0x80044b3",
            "mov r12d, dword [r15 + 0x40]",
            "test r12d, r12d",
            "je 0x80047a0",
            "mov r10d, dword [r15 + 0x38]",
            "test r10d, r10d",
            "je cryptodev_verbosity",
            "cmp qword [r15 + 0x40], 0",
            "je cryptodev_verbosity",
            "lea rax, [rbp - 0x60]",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, dword [rbx + 8]",
            "mov rsi, qword [rbx + 0x18]",
            "mov r9, qword [rbx + 0x60]",
            "mov rdi, r15",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x58]",
            "mov r8d, dword [rbx + 0x48]",
            "mov qword [rbp - 0x78], r11",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x68]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "mov r12d, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r9d, dword [r15 + 0x38]",
            "mov eax, dword [rbx + 8]",
            "mov rdx, qword [rbp - 0x60]",
            "mov r12, qword [rbp - 0x58]",
            "mov ecx, dword [rbx + 0xc]",
            "test r9d, r9d",
            "mov dword [rbp - 0x64], eax",
            "je 0x8004c66",
            "mov r8d, dword [r15 + 0x40]",
            "test r8d, r8d",
            "je 0x8004c66",
            "mov rax, qword [r15 + 0x60]",
            "mov eax, dword [rax + 0x3c]",
            "mov esi, dword [rbx + 0x30]",
            "cmp esi, eax",
            "ja cryptodev_verbosity",
            "test esi, esi",
            "je 0x8004740",
            "mov edi, dword [r15 + 0x40]",
            "test edi, edi",
            "je 0x8004585",
            "mov rdi, qword [r15 + 0x60]",
            "mov qword [rbp - 0x88], rdx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call crypto_aead_setauthsize",
            "mov rdx, qword [rbp - 0x88]",
            "mov ecx, dword [rbp - 0x80]",
            "mov r11, qword [rbp - 0x78]",
            "mov rax, qword [r15 + 0x68]",
            "test ecx, ecx",
            "mov esi, 0",
            "cmove r11, rsi",
            "mov r8d, dword [rbp - 0x64]",
            "lea rdi, [r15 + 0x38]",
            "mov rsi, r12",
            "mov dword [rax + 0x30], ecx",
            "mov qword [rax + 0x40], r11",
            "cmp word [rbx + 4], 0",
            "mov rcx, r8",
            "mov qword [rbp - 0x78], r8",
            "jne cryptodev_cipher_decrypt",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbp - 0x64]",
            "add r8, qword [rbx + 0x20]",
            "add eax, dword [rbx + 0x30]",
            "mov qword [rbx + 0x28], r8",
            "mov dword [rbx + 0x48], eax",
            "mov rdi, r15",
            "call release_user_pages",
            "mov rdi, qword [rbp - 0x70]",
            "xor esi, esi",
            "call free_pages",
            "test r12d, r12d",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x4c]",
            "mov rsi, r14",
            "mov rdi, r13",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "lea rdi, [r15 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x88",
            "mov eax, r12d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, dword [r15 + 0x38]",
            "test eax, eax",
            "jne 0x8004e22",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004970",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004689",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x800467c",
            "cmp dword [0x08004676], 1",
            "jg current_task",
            "mov r9, qword [rbx + 0x10]",
            "test r9, rdx",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [rbx + 0xc]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rdx, qword [rbx + 0x10]",
            "mov r10, qword [rbx + 0x18]",
            "sub r10, rdx",
            "cmp r10d, 0x100",
            "jbe 0x80048b0",
            "mov eax, dword [0x080046bd]",
            "test eax, eax",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "cmp dword [0x080046d2], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2ea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x30]",
            "mov edx, dword [rbp - 0x64]",
            "sub r8, rax",
            "add r8, qword [rbx + 0x20]",
            "sub edx, eax",
            "mov dword [rbx + 0x48], edx",
            "mov qword [rbx + 0x28], r8",
            "jmp release_user_pages",
            "mov dword [rbx + 0x30], eax",
            "jmp 0x8004585",
            "cmp dword [0x08004757], 1",
            "jle 0x8004689",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "add eax, 1",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r8d, 0x7c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004689",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004bfe",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004810",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x8004810",
            "cmp dword [0x080047ca], 1",
            "jle 0x8004810",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x43",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x78], r11",
            "call printk",
            "mov r11, qword [rbp - 0x78]",
            "nop dword [rax + rax]",
            "movsxd rax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, 1",
            "mov dword [r15 + 0xc0], 0",
            "mov rdi, r15",
            "mov rsi, rcx",
            "lea rax, [rcx + rax - 1]",
            "shr rsi, 0xc",
            "sub edx, esi",
            "shr rax, 0xc",
            "lea ecx, [rdx + rax]",
            "mov dword [r15 + 0xbc], ecx",
            "mov esi, ecx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov ecx, dword [rbp - 0x80]",
            "je 0x8004b46",
            "mov esi, dword [0x08004871]",
            "test esi, esi",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2a0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rcx, rdx",
            "lea rax, [rdx + rax - 1]",
            "mov esi, 1",
            "shr rcx, 0xc",
            "mov rdi, r15",
            "mov qword [rbp - 0x80], r10",
            "sub esi, ecx",
            "shr rax, 0xc",
            "lea r11d, [rsi + rax]",
            "lea esi, [r11 + r11]",
            "mov dword [rbp - 0x78], r11d",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "je 0x8004a70",
            "mov r14d, dword [0x080048f9]",
            "test r14d, r14d",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x92",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rdi, qword [rbp - 0x70]",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "mov edx, dword [rbx + 0xc]",
            "mov rsi, qword [rbp - 0x70]",
            "lea rdi, [rbp - 0x50]",
            "call sg_init_one",
            "lea r11, [rbp - 0x50]",
            "jmp 0x80044a0",
            "cmp qword [rbx + 0x10], 0",
            "jne 0x8004659",
            "mov eax, dword [0x08004981]",
            "test eax, eax",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x72",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "cmp dword [0x080049c7], 0",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x276",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "xor r11d, r11d",
            "jmp 0x80044a0",
            "mov r11d, dword [0x08004a17]",
            "test r11d, r11d",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x80045e5",
            "cmp dword [0x08004a32], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov ecx, r11d",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0xc]",
            "mov edx, 1",
            "mov rdi, qword [rbx + 0x10]",
            "mov qword [rbp - 0x80], r10",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov dword [rbp - 0x78], r11d",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r12, qword [r15 + 0xd0]",
            "movsxd rdi, r11d",
            "mov dword [r15 + 0xbc], r11d",
            "shl rdi, 5",
            "mov esi, r11d",
            "mov dword [r15 + 0xc0], 0",
            "mov qword [rbp - 0x80], r10",
            "add rdi, r12",
            "mov qword [rbp - 0x60], rdi",
            "call sg_init_table",
            "mov edx, dword [rbx + 0xc]",
            "mov rdi, qword [r15 + 0xd0]",
            "mov rsi, qword [rbp - 0x60]",
            "call sg_copy",
            "mov r10, qword [rbp - 0x80]",
            "mov rdi, qword [rbp - 0x60]",
            "mov esi, r10d",
            "call sg_advance",
            "test rax, rax",
            "mov r8, rax",
            "mov qword [rbp - 0x60], rax",
            "je release_user_pages",
            "mov ecx, dword [rbx + 0xc]",
            "mov r9d, dword [rbx + 8]",
            "mov rdx, r12",
            "mov rdi, r15",
            "mov rsi, rbx",
            "call sym.srtp_auth_n_crypt",
            "mov rdi, r15",
            "mov r12d, eax",
            "call release_user_pages",
            "jmp 0x80045f0",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov edx, 1",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0x48]",
            "mov rdi, qword [rbx + 0x20]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r8, qword [r15 + 0xd0]",
            "mov ecx, dword [rbx + 0xc]",
            "mov rdx, r11",
            "mov r9d, dword [rbx + 8]",
            "mov rsi, rbx",
            "mov rdi, r15",
            "mov qword [rbp - 0x60], r8",
            "call sym.tls_auth_n_crypt",
            "mov r12d, eax",
            "jmp release_user_pages",
            "mov rdi, r15",
            "call release_user_pages",
            "mov r13d, dword [0x08004bb9]",
            "test r13d, r13d",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov r12d, 0xffffffea",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004c10], 0",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x8004628",
            "cmp dword [0x08004c28], 0",
            "jle 0x8004c16",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp 0x8004628",
            "xor eax, eax",
            "jmp 0x8004545",
            "cmp dword [0x08004c74], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x80",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004cbd], 0",
            "mov r12d, 0xffffffea",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "cmp dword [0x08004d06], 0",
            "mov r12d, 0xffffffea",
            "js 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2aa",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004d4f], 0",
            "mov r12d, 0xffffffea",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x286",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004d98], 0",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2b2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004ddb], 0",
            "mov r12d, 0xffffffea",
            "js release_user_pages",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "add rax, 0x4b8",
            "mov r9d, esi",
            "mov r8d, 0x241",
            "mov rsi, rax",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [r15 + 0x44], 0",
            "je 0x8004e34",
            "cmp dword [r15 + 0x40], 0",
            "je 0x800464c",
            "cmp dword [0x08004e3b], 0",
            "js 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x270",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004e84], 0",
            "mov r12d, 0xfffffff4",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x28c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r10d",
            "mov r8d, 0x8a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004f0c], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x25a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [0x08004f52], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x250",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004c16",
            "cmp dword [0x08004fd1], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x99",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x0800501a], 0",
            "jle 0x8004a20",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x57",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x79",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov eax, dword [r15 + 0xb4]",
            "mov edx, eax",
            "sub rdx, 1",
            "jmp 0x800467c",
            "cmp dword [0x080050ac], 0",
            "mov r12d, 0xfffffff2",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x292",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x47",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity"
        ]
    },
    "unk.0x8004794": {
        "function_address": "0x08004794",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x88",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r15, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [r15 + 0x88]",
            "test eax, eax",
            "je 0x8004427",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "lea r13, [rbx + 0x50]",
            "cmovle edx, dword [rbx + 0x4c]",
            "lea r14, [r15 + 0x78]",
            "mov eax, 0x10",
            "mov rsi, r13",
            "mov rdi, r14",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "test byte [rbx + 6], 0x20",
            "jne 0x8004640",
            "cmp dword [rbx + 0xc], 0x1000",
            "ja cryptodev_verbosity",
            "xor esi, esi",
            "mov edi, 0xd0",
            "call __get_free_pages",
            "test rax, rax",
            "mov qword [rbp - 0x70], rax",
            "je cryptodev_verbosity",
            "mov rsi, qword [rbx + 0x10]",
            "test rsi, rsi",
            "je 0x8004a08",
            "mov edx, dword [rbx + 0xc]",
            "xor r11d, r11d",
            "test edx, edx",
            "jne _copy_from_user",
            "test byte [rbx + 6], 0x10",
            "je 0x80044b3",
            "mov r12d, dword [r15 + 0x40]",
            "test r12d, r12d",
            "je 0x80047a0",
            "mov r10d, dword [r15 + 0x38]",
            "test r10d, r10d",
            "je cryptodev_verbosity",
            "cmp qword [r15 + 0x40], 0",
            "je cryptodev_verbosity",
            "lea rax, [rbp - 0x60]",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, dword [rbx + 8]",
            "mov rsi, qword [rbx + 0x18]",
            "mov r9, qword [rbx + 0x60]",
            "mov rdi, r15",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x58]",
            "mov r8d, dword [rbx + 0x48]",
            "mov qword [rbp - 0x78], r11",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x68]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "mov r12d, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r9d, dword [r15 + 0x38]",
            "mov eax, dword [rbx + 8]",
            "mov rdx, qword [rbp - 0x60]",
            "mov r12, qword [rbp - 0x58]",
            "mov ecx, dword [rbx + 0xc]",
            "test r9d, r9d",
            "mov dword [rbp - 0x64], eax",
            "je 0x8004c66",
            "mov r8d, dword [r15 + 0x40]",
            "test r8d, r8d",
            "je 0x8004c66",
            "mov rax, qword [r15 + 0x60]",
            "mov eax, dword [rax + 0x3c]",
            "mov esi, dword [rbx + 0x30]",
            "cmp esi, eax",
            "ja cryptodev_verbosity",
            "test esi, esi",
            "je 0x8004740",
            "mov edi, dword [r15 + 0x40]",
            "test edi, edi",
            "je 0x8004585",
            "mov rdi, qword [r15 + 0x60]",
            "mov qword [rbp - 0x88], rdx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call crypto_aead_setauthsize",
            "mov rdx, qword [rbp - 0x88]",
            "mov ecx, dword [rbp - 0x80]",
            "mov r11, qword [rbp - 0x78]",
            "mov rax, qword [r15 + 0x68]",
            "test ecx, ecx",
            "mov esi, 0",
            "cmove r11, rsi",
            "mov r8d, dword [rbp - 0x64]",
            "lea rdi, [r15 + 0x38]",
            "mov rsi, r12",
            "mov dword [rax + 0x30], ecx",
            "mov qword [rax + 0x40], r11",
            "cmp word [rbx + 4], 0",
            "mov rcx, r8",
            "mov qword [rbp - 0x78], r8",
            "jne cryptodev_cipher_decrypt",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbp - 0x64]",
            "add r8, qword [rbx + 0x20]",
            "add eax, dword [rbx + 0x30]",
            "mov qword [rbx + 0x28], r8",
            "mov dword [rbx + 0x48], eax",
            "mov rdi, r15",
            "call release_user_pages",
            "mov rdi, qword [rbp - 0x70]",
            "xor esi, esi",
            "call free_pages",
            "test r12d, r12d",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x4c]",
            "mov rsi, r14",
            "mov rdi, r13",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "lea rdi, [r15 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x88",
            "mov eax, r12d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, dword [r15 + 0x38]",
            "test eax, eax",
            "jne 0x8004e22",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004970",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004689",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x800467c",
            "cmp dword [0x08004676], 1",
            "jg current_task",
            "mov r9, qword [rbx + 0x10]",
            "test r9, rdx",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [rbx + 0xc]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rdx, qword [rbx + 0x10]",
            "mov r10, qword [rbx + 0x18]",
            "sub r10, rdx",
            "cmp r10d, 0x100",
            "jbe 0x80048b0",
            "mov eax, dword [0x080046bd]",
            "test eax, eax",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "cmp dword [0x080046d2], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2ea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x30]",
            "mov edx, dword [rbp - 0x64]",
            "sub r8, rax",
            "add r8, qword [rbx + 0x20]",
            "sub edx, eax",
            "mov dword [rbx + 0x48], edx",
            "mov qword [rbx + 0x28], r8",
            "jmp release_user_pages",
            "mov dword [rbx + 0x30], eax",
            "jmp 0x8004585",
            "cmp dword [0x08004757], 1",
            "jle 0x8004689",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "add eax, 1",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r8d, 0x7c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004689",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004bfe",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004810",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x8004810",
            "cmp dword [0x080047ca], 1",
            "jle 0x8004810",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x43",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x78], r11",
            "call printk",
            "mov r11, qword [rbp - 0x78]",
            "nop dword [rax + rax]",
            "movsxd rax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, 1",
            "mov dword [r15 + 0xc0], 0",
            "mov rdi, r15",
            "mov rsi, rcx",
            "lea rax, [rcx + rax - 1]",
            "shr rsi, 0xc",
            "sub edx, esi",
            "shr rax, 0xc",
            "lea ecx, [rdx + rax]",
            "mov dword [r15 + 0xbc], ecx",
            "mov esi, ecx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov ecx, dword [rbp - 0x80]",
            "je 0x8004b46",
            "mov esi, dword [0x08004871]",
            "test esi, esi",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2a0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rcx, rdx",
            "lea rax, [rdx + rax - 1]",
            "mov esi, 1",
            "shr rcx, 0xc",
            "mov rdi, r15",
            "mov qword [rbp - 0x80], r10",
            "sub esi, ecx",
            "shr rax, 0xc",
            "lea r11d, [rsi + rax]",
            "lea esi, [r11 + r11]",
            "mov dword [rbp - 0x78], r11d",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "je 0x8004a70",
            "mov r14d, dword [0x080048f9]",
            "test r14d, r14d",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x92",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rdi, qword [rbp - 0x70]",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "mov edx, dword [rbx + 0xc]",
            "mov rsi, qword [rbp - 0x70]",
            "lea rdi, [rbp - 0x50]",
            "call sg_init_one",
            "lea r11, [rbp - 0x50]",
            "jmp 0x80044a0",
            "cmp qword [rbx + 0x10], 0",
            "jne 0x8004659",
            "mov eax, dword [0x08004981]",
            "test eax, eax",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x72",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "cmp dword [0x080049c7], 0",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x276",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "xor r11d, r11d",
            "jmp 0x80044a0",
            "mov r11d, dword [0x08004a17]",
            "test r11d, r11d",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x80045e5",
            "cmp dword [0x08004a32], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov ecx, r11d",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0xc]",
            "mov edx, 1",
            "mov rdi, qword [rbx + 0x10]",
            "mov qword [rbp - 0x80], r10",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov dword [rbp - 0x78], r11d",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r12, qword [r15 + 0xd0]",
            "movsxd rdi, r11d",
            "mov dword [r15 + 0xbc], r11d",
            "shl rdi, 5",
            "mov esi, r11d",
            "mov dword [r15 + 0xc0], 0",
            "mov qword [rbp - 0x80], r10",
            "add rdi, r12",
            "mov qword [rbp - 0x60], rdi",
            "call sg_init_table",
            "mov edx, dword [rbx + 0xc]",
            "mov rdi, qword [r15 + 0xd0]",
            "mov rsi, qword [rbp - 0x60]",
            "call sg_copy",
            "mov r10, qword [rbp - 0x80]",
            "mov rdi, qword [rbp - 0x60]",
            "mov esi, r10d",
            "call sg_advance",
            "test rax, rax",
            "mov r8, rax",
            "mov qword [rbp - 0x60], rax",
            "je release_user_pages",
            "mov ecx, dword [rbx + 0xc]",
            "mov r9d, dword [rbx + 8]",
            "mov rdx, r12",
            "mov rdi, r15",
            "mov rsi, rbx",
            "call sym.srtp_auth_n_crypt",
            "mov rdi, r15",
            "mov r12d, eax",
            "call release_user_pages",
            "jmp 0x80045f0",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov edx, 1",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0x48]",
            "mov rdi, qword [rbx + 0x20]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r8, qword [r15 + 0xd0]",
            "mov ecx, dword [rbx + 0xc]",
            "mov rdx, r11",
            "mov r9d, dword [rbx + 8]",
            "mov rsi, rbx",
            "mov rdi, r15",
            "mov qword [rbp - 0x60], r8",
            "call sym.tls_auth_n_crypt",
            "mov r12d, eax",
            "jmp release_user_pages",
            "mov rdi, r15",
            "call release_user_pages",
            "mov r13d, dword [0x08004bb9]",
            "test r13d, r13d",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov r12d, 0xffffffea",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004c10], 0",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x8004628",
            "cmp dword [0x08004c28], 0",
            "jle 0x8004c16",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp 0x8004628",
            "xor eax, eax",
            "jmp 0x8004545",
            "cmp dword [0x08004c74], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x80",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004cbd], 0",
            "mov r12d, 0xffffffea",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "cmp dword [0x08004d06], 0",
            "mov r12d, 0xffffffea",
            "js 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2aa",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004d4f], 0",
            "mov r12d, 0xffffffea",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x286",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004d98], 0",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2b2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004ddb], 0",
            "mov r12d, 0xffffffea",
            "js release_user_pages",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "add rax, 0x4b8",
            "mov r9d, esi",
            "mov r8d, 0x241",
            "mov rsi, rax",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [r15 + 0x44], 0",
            "je 0x8004e34",
            "cmp dword [r15 + 0x40], 0",
            "je 0x800464c",
            "cmp dword [0x08004e3b], 0",
            "js 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x270",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004e84], 0",
            "mov r12d, 0xfffffff4",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x28c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r10d",
            "mov r8d, 0x8a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004f0c], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x25a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [0x08004f52], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x250",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004c16",
            "cmp dword [0x08004fd1], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x99",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x0800501a], 0",
            "jle 0x8004a20",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x57",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x79",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov eax, dword [r15 + 0xb4]",
            "mov edx, eax",
            "sub rdx, 1",
            "jmp 0x800467c",
            "cmp dword [0x080050ac], 0",
            "mov r12d, 0xfffffff2",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x292",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x47",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity"
        ]
    },
    "unk.0x8004807": {
        "function_address": "0x08004807",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x88",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r15, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [r15 + 0x88]",
            "test eax, eax",
            "je 0x8004427",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "lea r13, [rbx + 0x50]",
            "cmovle edx, dword [rbx + 0x4c]",
            "lea r14, [r15 + 0x78]",
            "mov eax, 0x10",
            "mov rsi, r13",
            "mov rdi, r14",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "test byte [rbx + 6], 0x20",
            "jne 0x8004640",
            "cmp dword [rbx + 0xc], 0x1000",
            "ja cryptodev_verbosity",
            "xor esi, esi",
            "mov edi, 0xd0",
            "call __get_free_pages",
            "test rax, rax",
            "mov qword [rbp - 0x70], rax",
            "je cryptodev_verbosity",
            "mov rsi, qword [rbx + 0x10]",
            "test rsi, rsi",
            "je 0x8004a08",
            "mov edx, dword [rbx + 0xc]",
            "xor r11d, r11d",
            "test edx, edx",
            "jne _copy_from_user",
            "test byte [rbx + 6], 0x10",
            "je 0x80044b3",
            "mov r12d, dword [r15 + 0x40]",
            "test r12d, r12d",
            "je 0x80047a0",
            "mov r10d, dword [r15 + 0x38]",
            "test r10d, r10d",
            "je cryptodev_verbosity",
            "cmp qword [r15 + 0x40], 0",
            "je cryptodev_verbosity",
            "lea rax, [rbp - 0x60]",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, dword [rbx + 8]",
            "mov rsi, qword [rbx + 0x18]",
            "mov r9, qword [rbx + 0x60]",
            "mov rdi, r15",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x58]",
            "mov r8d, dword [rbx + 0x48]",
            "mov qword [rbp - 0x78], r11",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x68]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "mov r12d, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r9d, dword [r15 + 0x38]",
            "mov eax, dword [rbx + 8]",
            "mov rdx, qword [rbp - 0x60]",
            "mov r12, qword [rbp - 0x58]",
            "mov ecx, dword [rbx + 0xc]",
            "test r9d, r9d",
            "mov dword [rbp - 0x64], eax",
            "je 0x8004c66",
            "mov r8d, dword [r15 + 0x40]",
            "test r8d, r8d",
            "je 0x8004c66",
            "mov rax, qword [r15 + 0x60]",
            "mov eax, dword [rax + 0x3c]",
            "mov esi, dword [rbx + 0x30]",
            "cmp esi, eax",
            "ja cryptodev_verbosity",
            "test esi, esi",
            "je 0x8004740",
            "mov edi, dword [r15 + 0x40]",
            "test edi, edi",
            "je 0x8004585",
            "mov rdi, qword [r15 + 0x60]",
            "mov qword [rbp - 0x88], rdx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call crypto_aead_setauthsize",
            "mov rdx, qword [rbp - 0x88]",
            "mov ecx, dword [rbp - 0x80]",
            "mov r11, qword [rbp - 0x78]",
            "mov rax, qword [r15 + 0x68]",
            "test ecx, ecx",
            "mov esi, 0",
            "cmove r11, rsi",
            "mov r8d, dword [rbp - 0x64]",
            "lea rdi, [r15 + 0x38]",
            "mov rsi, r12",
            "mov dword [rax + 0x30], ecx",
            "mov qword [rax + 0x40], r11",
            "cmp word [rbx + 4], 0",
            "mov rcx, r8",
            "mov qword [rbp - 0x78], r8",
            "jne cryptodev_cipher_decrypt",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbp - 0x64]",
            "add r8, qword [rbx + 0x20]",
            "add eax, dword [rbx + 0x30]",
            "mov qword [rbx + 0x28], r8",
            "mov dword [rbx + 0x48], eax",
            "mov rdi, r15",
            "call release_user_pages",
            "mov rdi, qword [rbp - 0x70]",
            "xor esi, esi",
            "call free_pages",
            "test r12d, r12d",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x4c]",
            "mov rsi, r14",
            "mov rdi, r13",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "lea rdi, [r15 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x88",
            "mov eax, r12d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, dword [r15 + 0x38]",
            "test eax, eax",
            "jne 0x8004e22",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004970",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004689",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x800467c",
            "cmp dword [0x08004676], 1",
            "jg current_task",
            "mov r9, qword [rbx + 0x10]",
            "test r9, rdx",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [rbx + 0xc]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rdx, qword [rbx + 0x10]",
            "mov r10, qword [rbx + 0x18]",
            "sub r10, rdx",
            "cmp r10d, 0x100",
            "jbe 0x80048b0",
            "mov eax, dword [0x080046bd]",
            "test eax, eax",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "cmp dword [0x080046d2], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2ea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x30]",
            "mov edx, dword [rbp - 0x64]",
            "sub r8, rax",
            "add r8, qword [rbx + 0x20]",
            "sub edx, eax",
            "mov dword [rbx + 0x48], edx",
            "mov qword [rbx + 0x28], r8",
            "jmp release_user_pages",
            "mov dword [rbx + 0x30], eax",
            "jmp 0x8004585",
            "cmp dword [0x08004757], 1",
            "jle 0x8004689",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "add eax, 1",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r8d, 0x7c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004689",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004bfe",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004810",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x8004810",
            "cmp dword [0x080047ca], 1",
            "jle 0x8004810",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x43",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x78], r11",
            "call printk",
            "mov r11, qword [rbp - 0x78]",
            "nop dword [rax + rax]",
            "movsxd rax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, 1",
            "mov dword [r15 + 0xc0], 0",
            "mov rdi, r15",
            "mov rsi, rcx",
            "lea rax, [rcx + rax - 1]",
            "shr rsi, 0xc",
            "sub edx, esi",
            "shr rax, 0xc",
            "lea ecx, [rdx + rax]",
            "mov dword [r15 + 0xbc], ecx",
            "mov esi, ecx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov ecx, dword [rbp - 0x80]",
            "je 0x8004b46",
            "mov esi, dword [0x08004871]",
            "test esi, esi",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2a0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rcx, rdx",
            "lea rax, [rdx + rax - 1]",
            "mov esi, 1",
            "shr rcx, 0xc",
            "mov rdi, r15",
            "mov qword [rbp - 0x80], r10",
            "sub esi, ecx",
            "shr rax, 0xc",
            "lea r11d, [rsi + rax]",
            "lea esi, [r11 + r11]",
            "mov dword [rbp - 0x78], r11d",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "je 0x8004a70",
            "mov r14d, dword [0x080048f9]",
            "test r14d, r14d",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x92",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rdi, qword [rbp - 0x70]",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "mov edx, dword [rbx + 0xc]",
            "mov rsi, qword [rbp - 0x70]",
            "lea rdi, [rbp - 0x50]",
            "call sg_init_one",
            "lea r11, [rbp - 0x50]",
            "jmp 0x80044a0",
            "cmp qword [rbx + 0x10], 0",
            "jne 0x8004659",
            "mov eax, dword [0x08004981]",
            "test eax, eax",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x72",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "cmp dword [0x080049c7], 0",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x276",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "xor r11d, r11d",
            "jmp 0x80044a0",
            "mov r11d, dword [0x08004a17]",
            "test r11d, r11d",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x80045e5",
            "cmp dword [0x08004a32], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov ecx, r11d",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0xc]",
            "mov edx, 1",
            "mov rdi, qword [rbx + 0x10]",
            "mov qword [rbp - 0x80], r10",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov dword [rbp - 0x78], r11d",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r12, qword [r15 + 0xd0]",
            "movsxd rdi, r11d",
            "mov dword [r15 + 0xbc], r11d",
            "shl rdi, 5",
            "mov esi, r11d",
            "mov dword [r15 + 0xc0], 0",
            "mov qword [rbp - 0x80], r10",
            "add rdi, r12",
            "mov qword [rbp - 0x60], rdi",
            "call sg_init_table",
            "mov edx, dword [rbx + 0xc]",
            "mov rdi, qword [r15 + 0xd0]",
            "mov rsi, qword [rbp - 0x60]",
            "call sg_copy",
            "mov r10, qword [rbp - 0x80]",
            "mov rdi, qword [rbp - 0x60]",
            "mov esi, r10d",
            "call sg_advance",
            "test rax, rax",
            "mov r8, rax",
            "mov qword [rbp - 0x60], rax",
            "je release_user_pages",
            "mov ecx, dword [rbx + 0xc]",
            "mov r9d, dword [rbx + 8]",
            "mov rdx, r12",
            "mov rdi, r15",
            "mov rsi, rbx",
            "call sym.srtp_auth_n_crypt",
            "mov rdi, r15",
            "mov r12d, eax",
            "call release_user_pages",
            "jmp 0x80045f0",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov edx, 1",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0x48]",
            "mov rdi, qword [rbx + 0x20]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r8, qword [r15 + 0xd0]",
            "mov ecx, dword [rbx + 0xc]",
            "mov rdx, r11",
            "mov r9d, dword [rbx + 8]",
            "mov rsi, rbx",
            "mov rdi, r15",
            "mov qword [rbp - 0x60], r8",
            "call sym.tls_auth_n_crypt",
            "mov r12d, eax",
            "jmp release_user_pages",
            "mov rdi, r15",
            "call release_user_pages",
            "mov r13d, dword [0x08004bb9]",
            "test r13d, r13d",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov r12d, 0xffffffea",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004c10], 0",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x8004628",
            "cmp dword [0x08004c28], 0",
            "jle 0x8004c16",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp 0x8004628",
            "xor eax, eax",
            "jmp 0x8004545",
            "cmp dword [0x08004c74], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x80",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004cbd], 0",
            "mov r12d, 0xffffffea",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "cmp dword [0x08004d06], 0",
            "mov r12d, 0xffffffea",
            "js 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2aa",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004d4f], 0",
            "mov r12d, 0xffffffea",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x286",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004d98], 0",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2b2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004ddb], 0",
            "mov r12d, 0xffffffea",
            "js release_user_pages",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "add rax, 0x4b8",
            "mov r9d, esi",
            "mov r8d, 0x241",
            "mov rsi, rax",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [r15 + 0x44], 0",
            "je 0x8004e34",
            "cmp dword [r15 + 0x40], 0",
            "je 0x800464c",
            "cmp dword [0x08004e3b], 0",
            "js 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x270",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004e84], 0",
            "mov r12d, 0xfffffff4",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x28c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r10d",
            "mov r8d, 0x8a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004f0c], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x25a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [0x08004f52], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x250",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004c16",
            "cmp dword [0x08004fd1], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x99",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x0800501a], 0",
            "jle 0x8004a20",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x57",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x79",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov eax, dword [r15 + 0xb4]",
            "mov edx, eax",
            "sub rdx, 1",
            "jmp 0x800467c",
            "cmp dword [0x080050ac], 0",
            "mov r12d, 0xfffffff2",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x292",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x47",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity"
        ]
    },
    "unk.0x800485d": {
        "function_address": "0x0800485d",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x88",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r15, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [r15 + 0x88]",
            "test eax, eax",
            "je 0x8004427",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "lea r13, [rbx + 0x50]",
            "cmovle edx, dword [rbx + 0x4c]",
            "lea r14, [r15 + 0x78]",
            "mov eax, 0x10",
            "mov rsi, r13",
            "mov rdi, r14",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "test byte [rbx + 6], 0x20",
            "jne 0x8004640",
            "cmp dword [rbx + 0xc], 0x1000",
            "ja cryptodev_verbosity",
            "xor esi, esi",
            "mov edi, 0xd0",
            "call __get_free_pages",
            "test rax, rax",
            "mov qword [rbp - 0x70], rax",
            "je cryptodev_verbosity",
            "mov rsi, qword [rbx + 0x10]",
            "test rsi, rsi",
            "je 0x8004a08",
            "mov edx, dword [rbx + 0xc]",
            "xor r11d, r11d",
            "test edx, edx",
            "jne _copy_from_user",
            "test byte [rbx + 6], 0x10",
            "je 0x80044b3",
            "mov r12d, dword [r15 + 0x40]",
            "test r12d, r12d",
            "je 0x80047a0",
            "mov r10d, dword [r15 + 0x38]",
            "test r10d, r10d",
            "je cryptodev_verbosity",
            "cmp qword [r15 + 0x40], 0",
            "je cryptodev_verbosity",
            "lea rax, [rbp - 0x60]",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, dword [rbx + 8]",
            "mov rsi, qword [rbx + 0x18]",
            "mov r9, qword [rbx + 0x60]",
            "mov rdi, r15",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x58]",
            "mov r8d, dword [rbx + 0x48]",
            "mov qword [rbp - 0x78], r11",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x68]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "mov r12d, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r9d, dword [r15 + 0x38]",
            "mov eax, dword [rbx + 8]",
            "mov rdx, qword [rbp - 0x60]",
            "mov r12, qword [rbp - 0x58]",
            "mov ecx, dword [rbx + 0xc]",
            "test r9d, r9d",
            "mov dword [rbp - 0x64], eax",
            "je 0x8004c66",
            "mov r8d, dword [r15 + 0x40]",
            "test r8d, r8d",
            "je 0x8004c66",
            "mov rax, qword [r15 + 0x60]",
            "mov eax, dword [rax + 0x3c]",
            "mov esi, dword [rbx + 0x30]",
            "cmp esi, eax",
            "ja cryptodev_verbosity",
            "test esi, esi",
            "je 0x8004740",
            "mov edi, dword [r15 + 0x40]",
            "test edi, edi",
            "je 0x8004585",
            "mov rdi, qword [r15 + 0x60]",
            "mov qword [rbp - 0x88], rdx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call crypto_aead_setauthsize",
            "mov rdx, qword [rbp - 0x88]",
            "mov ecx, dword [rbp - 0x80]",
            "mov r11, qword [rbp - 0x78]",
            "mov rax, qword [r15 + 0x68]",
            "test ecx, ecx",
            "mov esi, 0",
            "cmove r11, rsi",
            "mov r8d, dword [rbp - 0x64]",
            "lea rdi, [r15 + 0x38]",
            "mov rsi, r12",
            "mov dword [rax + 0x30], ecx",
            "mov qword [rax + 0x40], r11",
            "cmp word [rbx + 4], 0",
            "mov rcx, r8",
            "mov qword [rbp - 0x78], r8",
            "jne cryptodev_cipher_decrypt",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbp - 0x64]",
            "add r8, qword [rbx + 0x20]",
            "add eax, dword [rbx + 0x30]",
            "mov qword [rbx + 0x28], r8",
            "mov dword [rbx + 0x48], eax",
            "mov rdi, r15",
            "call release_user_pages",
            "mov rdi, qword [rbp - 0x70]",
            "xor esi, esi",
            "call free_pages",
            "test r12d, r12d",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x4c]",
            "mov rsi, r14",
            "mov rdi, r13",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "lea rdi, [r15 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x88",
            "mov eax, r12d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, dword [r15 + 0x38]",
            "test eax, eax",
            "jne 0x8004e22",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004970",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004689",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x800467c",
            "cmp dword [0x08004676], 1",
            "jg current_task",
            "mov r9, qword [rbx + 0x10]",
            "test r9, rdx",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [rbx + 0xc]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rdx, qword [rbx + 0x10]",
            "mov r10, qword [rbx + 0x18]",
            "sub r10, rdx",
            "cmp r10d, 0x100",
            "jbe 0x80048b0",
            "mov eax, dword [0x080046bd]",
            "test eax, eax",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "cmp dword [0x080046d2], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2ea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x30]",
            "mov edx, dword [rbp - 0x64]",
            "sub r8, rax",
            "add r8, qword [rbx + 0x20]",
            "sub edx, eax",
            "mov dword [rbx + 0x48], edx",
            "mov qword [rbx + 0x28], r8",
            "jmp release_user_pages",
            "mov dword [rbx + 0x30], eax",
            "jmp 0x8004585",
            "cmp dword [0x08004757], 1",
            "jle 0x8004689",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "add eax, 1",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r8d, 0x7c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004689",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004bfe",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004810",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x8004810",
            "cmp dword [0x080047ca], 1",
            "jle 0x8004810",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x43",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x78], r11",
            "call printk",
            "mov r11, qword [rbp - 0x78]",
            "nop dword [rax + rax]",
            "movsxd rax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, 1",
            "mov dword [r15 + 0xc0], 0",
            "mov rdi, r15",
            "mov rsi, rcx",
            "lea rax, [rcx + rax - 1]",
            "shr rsi, 0xc",
            "sub edx, esi",
            "shr rax, 0xc",
            "lea ecx, [rdx + rax]",
            "mov dword [r15 + 0xbc], ecx",
            "mov esi, ecx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov ecx, dword [rbp - 0x80]",
            "je 0x8004b46",
            "mov esi, dword [0x08004871]",
            "test esi, esi",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2a0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rcx, rdx",
            "lea rax, [rdx + rax - 1]",
            "mov esi, 1",
            "shr rcx, 0xc",
            "mov rdi, r15",
            "mov qword [rbp - 0x80], r10",
            "sub esi, ecx",
            "shr rax, 0xc",
            "lea r11d, [rsi + rax]",
            "lea esi, [r11 + r11]",
            "mov dword [rbp - 0x78], r11d",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "je 0x8004a70",
            "mov r14d, dword [0x080048f9]",
            "test r14d, r14d",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x92",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rdi, qword [rbp - 0x70]",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "mov edx, dword [rbx + 0xc]",
            "mov rsi, qword [rbp - 0x70]",
            "lea rdi, [rbp - 0x50]",
            "call sg_init_one",
            "lea r11, [rbp - 0x50]",
            "jmp 0x80044a0",
            "cmp qword [rbx + 0x10], 0",
            "jne 0x8004659",
            "mov eax, dword [0x08004981]",
            "test eax, eax",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x72",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "cmp dword [0x080049c7], 0",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x276",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "xor r11d, r11d",
            "jmp 0x80044a0",
            "mov r11d, dword [0x08004a17]",
            "test r11d, r11d",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x80045e5",
            "cmp dword [0x08004a32], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov ecx, r11d",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0xc]",
            "mov edx, 1",
            "mov rdi, qword [rbx + 0x10]",
            "mov qword [rbp - 0x80], r10",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov dword [rbp - 0x78], r11d",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r12, qword [r15 + 0xd0]",
            "movsxd rdi, r11d",
            "mov dword [r15 + 0xbc], r11d",
            "shl rdi, 5",
            "mov esi, r11d",
            "mov dword [r15 + 0xc0], 0",
            "mov qword [rbp - 0x80], r10",
            "add rdi, r12",
            "mov qword [rbp - 0x60], rdi",
            "call sg_init_table",
            "mov edx, dword [rbx + 0xc]",
            "mov rdi, qword [r15 + 0xd0]",
            "mov rsi, qword [rbp - 0x60]",
            "call sg_copy",
            "mov r10, qword [rbp - 0x80]",
            "mov rdi, qword [rbp - 0x60]",
            "mov esi, r10d",
            "call sg_advance",
            "test rax, rax",
            "mov r8, rax",
            "mov qword [rbp - 0x60], rax",
            "je release_user_pages",
            "mov ecx, dword [rbx + 0xc]",
            "mov r9d, dword [rbx + 8]",
            "mov rdx, r12",
            "mov rdi, r15",
            "mov rsi, rbx",
            "call sym.srtp_auth_n_crypt",
            "mov rdi, r15",
            "mov r12d, eax",
            "call release_user_pages",
            "jmp 0x80045f0",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov edx, 1",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0x48]",
            "mov rdi, qword [rbx + 0x20]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r8, qword [r15 + 0xd0]",
            "mov ecx, dword [rbx + 0xc]",
            "mov rdx, r11",
            "mov r9d, dword [rbx + 8]",
            "mov rsi, rbx",
            "mov rdi, r15",
            "mov qword [rbp - 0x60], r8",
            "call sym.tls_auth_n_crypt",
            "mov r12d, eax",
            "jmp release_user_pages",
            "mov rdi, r15",
            "call release_user_pages",
            "mov r13d, dword [0x08004bb9]",
            "test r13d, r13d",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov r12d, 0xffffffea",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004c10], 0",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x8004628",
            "cmp dword [0x08004c28], 0",
            "jle 0x8004c16",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp 0x8004628",
            "xor eax, eax",
            "jmp 0x8004545",
            "cmp dword [0x08004c74], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x80",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004cbd], 0",
            "mov r12d, 0xffffffea",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "cmp dword [0x08004d06], 0",
            "mov r12d, 0xffffffea",
            "js 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2aa",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004d4f], 0",
            "mov r12d, 0xffffffea",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x286",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004d98], 0",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2b2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004ddb], 0",
            "mov r12d, 0xffffffea",
            "js release_user_pages",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "add rax, 0x4b8",
            "mov r9d, esi",
            "mov r8d, 0x241",
            "mov rsi, rax",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [r15 + 0x44], 0",
            "je 0x8004e34",
            "cmp dword [r15 + 0x40], 0",
            "je 0x800464c",
            "cmp dword [0x08004e3b], 0",
            "js 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x270",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004e84], 0",
            "mov r12d, 0xfffffff4",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x28c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r10d",
            "mov r8d, 0x8a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004f0c], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x25a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [0x08004f52], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x250",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004c16",
            "cmp dword [0x08004fd1], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x99",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x0800501a], 0",
            "jle 0x8004a20",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x57",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x79",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov eax, dword [r15 + 0xb4]",
            "mov edx, eax",
            "sub rdx, 1",
            "jmp 0x800467c",
            "cmp dword [0x080050ac], 0",
            "mov r12d, 0xfffffff2",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x292",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x47",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity"
        ]
    },
    "unk.0x80048aa": {
        "function_address": "0x080048aa",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x88",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r15, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [r15 + 0x88]",
            "test eax, eax",
            "je 0x8004427",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "lea r13, [rbx + 0x50]",
            "cmovle edx, dword [rbx + 0x4c]",
            "lea r14, [r15 + 0x78]",
            "mov eax, 0x10",
            "mov rsi, r13",
            "mov rdi, r14",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "test byte [rbx + 6], 0x20",
            "jne 0x8004640",
            "cmp dword [rbx + 0xc], 0x1000",
            "ja cryptodev_verbosity",
            "xor esi, esi",
            "mov edi, 0xd0",
            "call __get_free_pages",
            "test rax, rax",
            "mov qword [rbp - 0x70], rax",
            "je cryptodev_verbosity",
            "mov rsi, qword [rbx + 0x10]",
            "test rsi, rsi",
            "je 0x8004a08",
            "mov edx, dword [rbx + 0xc]",
            "xor r11d, r11d",
            "test edx, edx",
            "jne _copy_from_user",
            "test byte [rbx + 6], 0x10",
            "je 0x80044b3",
            "mov r12d, dword [r15 + 0x40]",
            "test r12d, r12d",
            "je 0x80047a0",
            "mov r10d, dword [r15 + 0x38]",
            "test r10d, r10d",
            "je cryptodev_verbosity",
            "cmp qword [r15 + 0x40], 0",
            "je cryptodev_verbosity",
            "lea rax, [rbp - 0x60]",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, dword [rbx + 8]",
            "mov rsi, qword [rbx + 0x18]",
            "mov r9, qword [rbx + 0x60]",
            "mov rdi, r15",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x58]",
            "mov r8d, dword [rbx + 0x48]",
            "mov qword [rbp - 0x78], r11",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x68]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "mov r12d, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r9d, dword [r15 + 0x38]",
            "mov eax, dword [rbx + 8]",
            "mov rdx, qword [rbp - 0x60]",
            "mov r12, qword [rbp - 0x58]",
            "mov ecx, dword [rbx + 0xc]",
            "test r9d, r9d",
            "mov dword [rbp - 0x64], eax",
            "je 0x8004c66",
            "mov r8d, dword [r15 + 0x40]",
            "test r8d, r8d",
            "je 0x8004c66",
            "mov rax, qword [r15 + 0x60]",
            "mov eax, dword [rax + 0x3c]",
            "mov esi, dword [rbx + 0x30]",
            "cmp esi, eax",
            "ja cryptodev_verbosity",
            "test esi, esi",
            "je 0x8004740",
            "mov edi, dword [r15 + 0x40]",
            "test edi, edi",
            "je 0x8004585",
            "mov rdi, qword [r15 + 0x60]",
            "mov qword [rbp - 0x88], rdx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call crypto_aead_setauthsize",
            "mov rdx, qword [rbp - 0x88]",
            "mov ecx, dword [rbp - 0x80]",
            "mov r11, qword [rbp - 0x78]",
            "mov rax, qword [r15 + 0x68]",
            "test ecx, ecx",
            "mov esi, 0",
            "cmove r11, rsi",
            "mov r8d, dword [rbp - 0x64]",
            "lea rdi, [r15 + 0x38]",
            "mov rsi, r12",
            "mov dword [rax + 0x30], ecx",
            "mov qword [rax + 0x40], r11",
            "cmp word [rbx + 4], 0",
            "mov rcx, r8",
            "mov qword [rbp - 0x78], r8",
            "jne cryptodev_cipher_decrypt",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbp - 0x64]",
            "add r8, qword [rbx + 0x20]",
            "add eax, dword [rbx + 0x30]",
            "mov qword [rbx + 0x28], r8",
            "mov dword [rbx + 0x48], eax",
            "mov rdi, r15",
            "call release_user_pages",
            "mov rdi, qword [rbp - 0x70]",
            "xor esi, esi",
            "call free_pages",
            "test r12d, r12d",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x4c]",
            "mov rsi, r14",
            "mov rdi, r13",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "lea rdi, [r15 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x88",
            "mov eax, r12d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, dword [r15 + 0x38]",
            "test eax, eax",
            "jne 0x8004e22",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004970",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004689",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x800467c",
            "cmp dword [0x08004676], 1",
            "jg current_task",
            "mov r9, qword [rbx + 0x10]",
            "test r9, rdx",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [rbx + 0xc]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rdx, qword [rbx + 0x10]",
            "mov r10, qword [rbx + 0x18]",
            "sub r10, rdx",
            "cmp r10d, 0x100",
            "jbe 0x80048b0",
            "mov eax, dword [0x080046bd]",
            "test eax, eax",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "cmp dword [0x080046d2], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2ea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x30]",
            "mov edx, dword [rbp - 0x64]",
            "sub r8, rax",
            "add r8, qword [rbx + 0x20]",
            "sub edx, eax",
            "mov dword [rbx + 0x48], edx",
            "mov qword [rbx + 0x28], r8",
            "jmp release_user_pages",
            "mov dword [rbx + 0x30], eax",
            "jmp 0x8004585",
            "cmp dword [0x08004757], 1",
            "jle 0x8004689",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "add eax, 1",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r8d, 0x7c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004689",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004bfe",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004810",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x8004810",
            "cmp dword [0x080047ca], 1",
            "jle 0x8004810",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x43",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x78], r11",
            "call printk",
            "mov r11, qword [rbp - 0x78]",
            "nop dword [rax + rax]",
            "movsxd rax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, 1",
            "mov dword [r15 + 0xc0], 0",
            "mov rdi, r15",
            "mov rsi, rcx",
            "lea rax, [rcx + rax - 1]",
            "shr rsi, 0xc",
            "sub edx, esi",
            "shr rax, 0xc",
            "lea ecx, [rdx + rax]",
            "mov dword [r15 + 0xbc], ecx",
            "mov esi, ecx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov ecx, dword [rbp - 0x80]",
            "je 0x8004b46",
            "mov esi, dword [0x08004871]",
            "test esi, esi",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2a0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rcx, rdx",
            "lea rax, [rdx + rax - 1]",
            "mov esi, 1",
            "shr rcx, 0xc",
            "mov rdi, r15",
            "mov qword [rbp - 0x80], r10",
            "sub esi, ecx",
            "shr rax, 0xc",
            "lea r11d, [rsi + rax]",
            "lea esi, [r11 + r11]",
            "mov dword [rbp - 0x78], r11d",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "je 0x8004a70",
            "mov r14d, dword [0x080048f9]",
            "test r14d, r14d",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x92",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rdi, qword [rbp - 0x70]",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "mov edx, dword [rbx + 0xc]",
            "mov rsi, qword [rbp - 0x70]",
            "lea rdi, [rbp - 0x50]",
            "call sg_init_one",
            "lea r11, [rbp - 0x50]",
            "jmp 0x80044a0",
            "cmp qword [rbx + 0x10], 0",
            "jne 0x8004659",
            "mov eax, dword [0x08004981]",
            "test eax, eax",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x72",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "cmp dword [0x080049c7], 0",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x276",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "xor r11d, r11d",
            "jmp 0x80044a0",
            "mov r11d, dword [0x08004a17]",
            "test r11d, r11d",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x80045e5",
            "cmp dword [0x08004a32], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov ecx, r11d",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0xc]",
            "mov edx, 1",
            "mov rdi, qword [rbx + 0x10]",
            "mov qword [rbp - 0x80], r10",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov dword [rbp - 0x78], r11d",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r12, qword [r15 + 0xd0]",
            "movsxd rdi, r11d",
            "mov dword [r15 + 0xbc], r11d",
            "shl rdi, 5",
            "mov esi, r11d",
            "mov dword [r15 + 0xc0], 0",
            "mov qword [rbp - 0x80], r10",
            "add rdi, r12",
            "mov qword [rbp - 0x60], rdi",
            "call sg_init_table",
            "mov edx, dword [rbx + 0xc]",
            "mov rdi, qword [r15 + 0xd0]",
            "mov rsi, qword [rbp - 0x60]",
            "call sg_copy",
            "mov r10, qword [rbp - 0x80]",
            "mov rdi, qword [rbp - 0x60]",
            "mov esi, r10d",
            "call sg_advance",
            "test rax, rax",
            "mov r8, rax",
            "mov qword [rbp - 0x60], rax",
            "je release_user_pages",
            "mov ecx, dword [rbx + 0xc]",
            "mov r9d, dword [rbx + 8]",
            "mov rdx, r12",
            "mov rdi, r15",
            "mov rsi, rbx",
            "call sym.srtp_auth_n_crypt",
            "mov rdi, r15",
            "mov r12d, eax",
            "call release_user_pages",
            "jmp 0x80045f0",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov edx, 1",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0x48]",
            "mov rdi, qword [rbx + 0x20]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r8, qword [r15 + 0xd0]",
            "mov ecx, dword [rbx + 0xc]",
            "mov rdx, r11",
            "mov r9d, dword [rbx + 8]",
            "mov rsi, rbx",
            "mov rdi, r15",
            "mov qword [rbp - 0x60], r8",
            "call sym.tls_auth_n_crypt",
            "mov r12d, eax",
            "jmp release_user_pages",
            "mov rdi, r15",
            "call release_user_pages",
            "mov r13d, dword [0x08004bb9]",
            "test r13d, r13d",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov r12d, 0xffffffea",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004c10], 0",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x8004628",
            "cmp dword [0x08004c28], 0",
            "jle 0x8004c16",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp 0x8004628",
            "xor eax, eax",
            "jmp 0x8004545",
            "cmp dword [0x08004c74], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x80",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004cbd], 0",
            "mov r12d, 0xffffffea",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "cmp dword [0x08004d06], 0",
            "mov r12d, 0xffffffea",
            "js 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2aa",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004d4f], 0",
            "mov r12d, 0xffffffea",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x286",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004d98], 0",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2b2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004ddb], 0",
            "mov r12d, 0xffffffea",
            "js release_user_pages",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "add rax, 0x4b8",
            "mov r9d, esi",
            "mov r8d, 0x241",
            "mov rsi, rax",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [r15 + 0x44], 0",
            "je 0x8004e34",
            "cmp dword [r15 + 0x40], 0",
            "je 0x800464c",
            "cmp dword [0x08004e3b], 0",
            "js 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x270",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004e84], 0",
            "mov r12d, 0xfffffff4",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x28c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r10d",
            "mov r8d, 0x8a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004f0c], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x25a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [0x08004f52], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x250",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004c16",
            "cmp dword [0x08004fd1], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x99",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x0800501a], 0",
            "jle 0x8004a20",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x57",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x79",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov eax, dword [r15 + 0xb4]",
            "mov edx, eax",
            "sub rdx, 1",
            "jmp 0x800467c",
            "cmp dword [0x080050ac], 0",
            "mov r12d, 0xfffffff2",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x292",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x47",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity"
        ]
    },
    "unk.0x80048df": {
        "function_address": "0x080048df",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x88",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r15, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [r15 + 0x88]",
            "test eax, eax",
            "je 0x8004427",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "lea r13, [rbx + 0x50]",
            "cmovle edx, dword [rbx + 0x4c]",
            "lea r14, [r15 + 0x78]",
            "mov eax, 0x10",
            "mov rsi, r13",
            "mov rdi, r14",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "test byte [rbx + 6], 0x20",
            "jne 0x8004640",
            "cmp dword [rbx + 0xc], 0x1000",
            "ja cryptodev_verbosity",
            "xor esi, esi",
            "mov edi, 0xd0",
            "call __get_free_pages",
            "test rax, rax",
            "mov qword [rbp - 0x70], rax",
            "je cryptodev_verbosity",
            "mov rsi, qword [rbx + 0x10]",
            "test rsi, rsi",
            "je 0x8004a08",
            "mov edx, dword [rbx + 0xc]",
            "xor r11d, r11d",
            "test edx, edx",
            "jne _copy_from_user",
            "test byte [rbx + 6], 0x10",
            "je 0x80044b3",
            "mov r12d, dword [r15 + 0x40]",
            "test r12d, r12d",
            "je 0x80047a0",
            "mov r10d, dword [r15 + 0x38]",
            "test r10d, r10d",
            "je cryptodev_verbosity",
            "cmp qword [r15 + 0x40], 0",
            "je cryptodev_verbosity",
            "lea rax, [rbp - 0x60]",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, dword [rbx + 8]",
            "mov rsi, qword [rbx + 0x18]",
            "mov r9, qword [rbx + 0x60]",
            "mov rdi, r15",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x58]",
            "mov r8d, dword [rbx + 0x48]",
            "mov qword [rbp - 0x78], r11",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x68]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "mov r12d, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r9d, dword [r15 + 0x38]",
            "mov eax, dword [rbx + 8]",
            "mov rdx, qword [rbp - 0x60]",
            "mov r12, qword [rbp - 0x58]",
            "mov ecx, dword [rbx + 0xc]",
            "test r9d, r9d",
            "mov dword [rbp - 0x64], eax",
            "je 0x8004c66",
            "mov r8d, dword [r15 + 0x40]",
            "test r8d, r8d",
            "je 0x8004c66",
            "mov rax, qword [r15 + 0x60]",
            "mov eax, dword [rax + 0x3c]",
            "mov esi, dword [rbx + 0x30]",
            "cmp esi, eax",
            "ja cryptodev_verbosity",
            "test esi, esi",
            "je 0x8004740",
            "mov edi, dword [r15 + 0x40]",
            "test edi, edi",
            "je 0x8004585",
            "mov rdi, qword [r15 + 0x60]",
            "mov qword [rbp - 0x88], rdx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call crypto_aead_setauthsize",
            "mov rdx, qword [rbp - 0x88]",
            "mov ecx, dword [rbp - 0x80]",
            "mov r11, qword [rbp - 0x78]",
            "mov rax, qword [r15 + 0x68]",
            "test ecx, ecx",
            "mov esi, 0",
            "cmove r11, rsi",
            "mov r8d, dword [rbp - 0x64]",
            "lea rdi, [r15 + 0x38]",
            "mov rsi, r12",
            "mov dword [rax + 0x30], ecx",
            "mov qword [rax + 0x40], r11",
            "cmp word [rbx + 4], 0",
            "mov rcx, r8",
            "mov qword [rbp - 0x78], r8",
            "jne cryptodev_cipher_decrypt",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbp - 0x64]",
            "add r8, qword [rbx + 0x20]",
            "add eax, dword [rbx + 0x30]",
            "mov qword [rbx + 0x28], r8",
            "mov dword [rbx + 0x48], eax",
            "mov rdi, r15",
            "call release_user_pages",
            "mov rdi, qword [rbp - 0x70]",
            "xor esi, esi",
            "call free_pages",
            "test r12d, r12d",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x4c]",
            "mov rsi, r14",
            "mov rdi, r13",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "lea rdi, [r15 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x88",
            "mov eax, r12d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, dword [r15 + 0x38]",
            "test eax, eax",
            "jne 0x8004e22",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004970",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004689",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x800467c",
            "cmp dword [0x08004676], 1",
            "jg current_task",
            "mov r9, qword [rbx + 0x10]",
            "test r9, rdx",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [rbx + 0xc]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rdx, qword [rbx + 0x10]",
            "mov r10, qword [rbx + 0x18]",
            "sub r10, rdx",
            "cmp r10d, 0x100",
            "jbe 0x80048b0",
            "mov eax, dword [0x080046bd]",
            "test eax, eax",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "cmp dword [0x080046d2], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2ea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x30]",
            "mov edx, dword [rbp - 0x64]",
            "sub r8, rax",
            "add r8, qword [rbx + 0x20]",
            "sub edx, eax",
            "mov dword [rbx + 0x48], edx",
            "mov qword [rbx + 0x28], r8",
            "jmp release_user_pages",
            "mov dword [rbx + 0x30], eax",
            "jmp 0x8004585",
            "cmp dword [0x08004757], 1",
            "jle 0x8004689",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "add eax, 1",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r8d, 0x7c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004689",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004bfe",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004810",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x8004810",
            "cmp dword [0x080047ca], 1",
            "jle 0x8004810",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x43",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x78], r11",
            "call printk",
            "mov r11, qword [rbp - 0x78]",
            "nop dword [rax + rax]",
            "movsxd rax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, 1",
            "mov dword [r15 + 0xc0], 0",
            "mov rdi, r15",
            "mov rsi, rcx",
            "lea rax, [rcx + rax - 1]",
            "shr rsi, 0xc",
            "sub edx, esi",
            "shr rax, 0xc",
            "lea ecx, [rdx + rax]",
            "mov dword [r15 + 0xbc], ecx",
            "mov esi, ecx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov ecx, dword [rbp - 0x80]",
            "je 0x8004b46",
            "mov esi, dword [0x08004871]",
            "test esi, esi",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2a0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rcx, rdx",
            "lea rax, [rdx + rax - 1]",
            "mov esi, 1",
            "shr rcx, 0xc",
            "mov rdi, r15",
            "mov qword [rbp - 0x80], r10",
            "sub esi, ecx",
            "shr rax, 0xc",
            "lea r11d, [rsi + rax]",
            "lea esi, [r11 + r11]",
            "mov dword [rbp - 0x78], r11d",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "je 0x8004a70",
            "mov r14d, dword [0x080048f9]",
            "test r14d, r14d",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x92",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rdi, qword [rbp - 0x70]",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "mov edx, dword [rbx + 0xc]",
            "mov rsi, qword [rbp - 0x70]",
            "lea rdi, [rbp - 0x50]",
            "call sg_init_one",
            "lea r11, [rbp - 0x50]",
            "jmp 0x80044a0",
            "cmp qword [rbx + 0x10], 0",
            "jne 0x8004659",
            "mov eax, dword [0x08004981]",
            "test eax, eax",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x72",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "cmp dword [0x080049c7], 0",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x276",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "xor r11d, r11d",
            "jmp 0x80044a0",
            "mov r11d, dword [0x08004a17]",
            "test r11d, r11d",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x80045e5",
            "cmp dword [0x08004a32], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov ecx, r11d",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0xc]",
            "mov edx, 1",
            "mov rdi, qword [rbx + 0x10]",
            "mov qword [rbp - 0x80], r10",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov dword [rbp - 0x78], r11d",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r12, qword [r15 + 0xd0]",
            "movsxd rdi, r11d",
            "mov dword [r15 + 0xbc], r11d",
            "shl rdi, 5",
            "mov esi, r11d",
            "mov dword [r15 + 0xc0], 0",
            "mov qword [rbp - 0x80], r10",
            "add rdi, r12",
            "mov qword [rbp - 0x60], rdi",
            "call sg_init_table",
            "mov edx, dword [rbx + 0xc]",
            "mov rdi, qword [r15 + 0xd0]",
            "mov rsi, qword [rbp - 0x60]",
            "call sg_copy",
            "mov r10, qword [rbp - 0x80]",
            "mov rdi, qword [rbp - 0x60]",
            "mov esi, r10d",
            "call sg_advance",
            "test rax, rax",
            "mov r8, rax",
            "mov qword [rbp - 0x60], rax",
            "je release_user_pages",
            "mov ecx, dword [rbx + 0xc]",
            "mov r9d, dword [rbx + 8]",
            "mov rdx, r12",
            "mov rdi, r15",
            "mov rsi, rbx",
            "call sym.srtp_auth_n_crypt",
            "mov rdi, r15",
            "mov r12d, eax",
            "call release_user_pages",
            "jmp 0x80045f0",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov edx, 1",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0x48]",
            "mov rdi, qword [rbx + 0x20]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r8, qword [r15 + 0xd0]",
            "mov ecx, dword [rbx + 0xc]",
            "mov rdx, r11",
            "mov r9d, dword [rbx + 8]",
            "mov rsi, rbx",
            "mov rdi, r15",
            "mov qword [rbp - 0x60], r8",
            "call sym.tls_auth_n_crypt",
            "mov r12d, eax",
            "jmp release_user_pages",
            "mov rdi, r15",
            "call release_user_pages",
            "mov r13d, dword [0x08004bb9]",
            "test r13d, r13d",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov r12d, 0xffffffea",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004c10], 0",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x8004628",
            "cmp dword [0x08004c28], 0",
            "jle 0x8004c16",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp 0x8004628",
            "xor eax, eax",
            "jmp 0x8004545",
            "cmp dword [0x08004c74], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x80",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004cbd], 0",
            "mov r12d, 0xffffffea",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "cmp dword [0x08004d06], 0",
            "mov r12d, 0xffffffea",
            "js 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2aa",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004d4f], 0",
            "mov r12d, 0xffffffea",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x286",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004d98], 0",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2b2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004ddb], 0",
            "mov r12d, 0xffffffea",
            "js release_user_pages",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "add rax, 0x4b8",
            "mov r9d, esi",
            "mov r8d, 0x241",
            "mov rsi, rax",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [r15 + 0x44], 0",
            "je 0x8004e34",
            "cmp dword [r15 + 0x40], 0",
            "je 0x800464c",
            "cmp dword [0x08004e3b], 0",
            "js 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x270",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004e84], 0",
            "mov r12d, 0xfffffff4",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x28c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r10d",
            "mov r8d, 0x8a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004f0c], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x25a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [0x08004f52], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x250",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004c16",
            "cmp dword [0x08004fd1], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x99",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x0800501a], 0",
            "jle 0x8004a20",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x57",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x79",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov eax, dword [r15 + 0xb4]",
            "mov edx, eax",
            "sub rdx, 1",
            "jmp 0x800467c",
            "cmp dword [0x080050ac], 0",
            "mov r12d, 0xfffffff2",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x292",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x47",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity"
        ]
    },
    "unk.0x8004933": {
        "function_address": "0x08004933",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x88",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r15, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [r15 + 0x88]",
            "test eax, eax",
            "je 0x8004427",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "lea r13, [rbx + 0x50]",
            "cmovle edx, dword [rbx + 0x4c]",
            "lea r14, [r15 + 0x78]",
            "mov eax, 0x10",
            "mov rsi, r13",
            "mov rdi, r14",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "test byte [rbx + 6], 0x20",
            "jne 0x8004640",
            "cmp dword [rbx + 0xc], 0x1000",
            "ja cryptodev_verbosity",
            "xor esi, esi",
            "mov edi, 0xd0",
            "call __get_free_pages",
            "test rax, rax",
            "mov qword [rbp - 0x70], rax",
            "je cryptodev_verbosity",
            "mov rsi, qword [rbx + 0x10]",
            "test rsi, rsi",
            "je 0x8004a08",
            "mov edx, dword [rbx + 0xc]",
            "xor r11d, r11d",
            "test edx, edx",
            "jne _copy_from_user",
            "test byte [rbx + 6], 0x10",
            "je 0x80044b3",
            "mov r12d, dword [r15 + 0x40]",
            "test r12d, r12d",
            "je 0x80047a0",
            "mov r10d, dword [r15 + 0x38]",
            "test r10d, r10d",
            "je cryptodev_verbosity",
            "cmp qword [r15 + 0x40], 0",
            "je cryptodev_verbosity",
            "lea rax, [rbp - 0x60]",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, dword [rbx + 8]",
            "mov rsi, qword [rbx + 0x18]",
            "mov r9, qword [rbx + 0x60]",
            "mov rdi, r15",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x58]",
            "mov r8d, dword [rbx + 0x48]",
            "mov qword [rbp - 0x78], r11",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x68]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "mov r12d, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r9d, dword [r15 + 0x38]",
            "mov eax, dword [rbx + 8]",
            "mov rdx, qword [rbp - 0x60]",
            "mov r12, qword [rbp - 0x58]",
            "mov ecx, dword [rbx + 0xc]",
            "test r9d, r9d",
            "mov dword [rbp - 0x64], eax",
            "je 0x8004c66",
            "mov r8d, dword [r15 + 0x40]",
            "test r8d, r8d",
            "je 0x8004c66",
            "mov rax, qword [r15 + 0x60]",
            "mov eax, dword [rax + 0x3c]",
            "mov esi, dword [rbx + 0x30]",
            "cmp esi, eax",
            "ja cryptodev_verbosity",
            "test esi, esi",
            "je 0x8004740",
            "mov edi, dword [r15 + 0x40]",
            "test edi, edi",
            "je 0x8004585",
            "mov rdi, qword [r15 + 0x60]",
            "mov qword [rbp - 0x88], rdx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call crypto_aead_setauthsize",
            "mov rdx, qword [rbp - 0x88]",
            "mov ecx, dword [rbp - 0x80]",
            "mov r11, qword [rbp - 0x78]",
            "mov rax, qword [r15 + 0x68]",
            "test ecx, ecx",
            "mov esi, 0",
            "cmove r11, rsi",
            "mov r8d, dword [rbp - 0x64]",
            "lea rdi, [r15 + 0x38]",
            "mov rsi, r12",
            "mov dword [rax + 0x30], ecx",
            "mov qword [rax + 0x40], r11",
            "cmp word [rbx + 4], 0",
            "mov rcx, r8",
            "mov qword [rbp - 0x78], r8",
            "jne cryptodev_cipher_decrypt",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbp - 0x64]",
            "add r8, qword [rbx + 0x20]",
            "add eax, dword [rbx + 0x30]",
            "mov qword [rbx + 0x28], r8",
            "mov dword [rbx + 0x48], eax",
            "mov rdi, r15",
            "call release_user_pages",
            "mov rdi, qword [rbp - 0x70]",
            "xor esi, esi",
            "call free_pages",
            "test r12d, r12d",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x4c]",
            "mov rsi, r14",
            "mov rdi, r13",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "lea rdi, [r15 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x88",
            "mov eax, r12d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, dword [r15 + 0x38]",
            "test eax, eax",
            "jne 0x8004e22",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004970",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004689",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x800467c",
            "cmp dword [0x08004676], 1",
            "jg current_task",
            "mov r9, qword [rbx + 0x10]",
            "test r9, rdx",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [rbx + 0xc]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rdx, qword [rbx + 0x10]",
            "mov r10, qword [rbx + 0x18]",
            "sub r10, rdx",
            "cmp r10d, 0x100",
            "jbe 0x80048b0",
            "mov eax, dword [0x080046bd]",
            "test eax, eax",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "cmp dword [0x080046d2], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2ea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x30]",
            "mov edx, dword [rbp - 0x64]",
            "sub r8, rax",
            "add r8, qword [rbx + 0x20]",
            "sub edx, eax",
            "mov dword [rbx + 0x48], edx",
            "mov qword [rbx + 0x28], r8",
            "jmp release_user_pages",
            "mov dword [rbx + 0x30], eax",
            "jmp 0x8004585",
            "cmp dword [0x08004757], 1",
            "jle 0x8004689",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "add eax, 1",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r8d, 0x7c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004689",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004bfe",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004810",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x8004810",
            "cmp dword [0x080047ca], 1",
            "jle 0x8004810",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x43",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x78], r11",
            "call printk",
            "mov r11, qword [rbp - 0x78]",
            "nop dword [rax + rax]",
            "movsxd rax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, 1",
            "mov dword [r15 + 0xc0], 0",
            "mov rdi, r15",
            "mov rsi, rcx",
            "lea rax, [rcx + rax - 1]",
            "shr rsi, 0xc",
            "sub edx, esi",
            "shr rax, 0xc",
            "lea ecx, [rdx + rax]",
            "mov dword [r15 + 0xbc], ecx",
            "mov esi, ecx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov ecx, dword [rbp - 0x80]",
            "je 0x8004b46",
            "mov esi, dword [0x08004871]",
            "test esi, esi",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2a0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rcx, rdx",
            "lea rax, [rdx + rax - 1]",
            "mov esi, 1",
            "shr rcx, 0xc",
            "mov rdi, r15",
            "mov qword [rbp - 0x80], r10",
            "sub esi, ecx",
            "shr rax, 0xc",
            "lea r11d, [rsi + rax]",
            "lea esi, [r11 + r11]",
            "mov dword [rbp - 0x78], r11d",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "je 0x8004a70",
            "mov r14d, dword [0x080048f9]",
            "test r14d, r14d",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x92",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rdi, qword [rbp - 0x70]",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "mov edx, dword [rbx + 0xc]",
            "mov rsi, qword [rbp - 0x70]",
            "lea rdi, [rbp - 0x50]",
            "call sg_init_one",
            "lea r11, [rbp - 0x50]",
            "jmp 0x80044a0",
            "cmp qword [rbx + 0x10], 0",
            "jne 0x8004659",
            "mov eax, dword [0x08004981]",
            "test eax, eax",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x72",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "cmp dword [0x080049c7], 0",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x276",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "xor r11d, r11d",
            "jmp 0x80044a0",
            "mov r11d, dword [0x08004a17]",
            "test r11d, r11d",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x80045e5",
            "cmp dword [0x08004a32], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov ecx, r11d",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0xc]",
            "mov edx, 1",
            "mov rdi, qword [rbx + 0x10]",
            "mov qword [rbp - 0x80], r10",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov dword [rbp - 0x78], r11d",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r12, qword [r15 + 0xd0]",
            "movsxd rdi, r11d",
            "mov dword [r15 + 0xbc], r11d",
            "shl rdi, 5",
            "mov esi, r11d",
            "mov dword [r15 + 0xc0], 0",
            "mov qword [rbp - 0x80], r10",
            "add rdi, r12",
            "mov qword [rbp - 0x60], rdi",
            "call sg_init_table",
            "mov edx, dword [rbx + 0xc]",
            "mov rdi, qword [r15 + 0xd0]",
            "mov rsi, qword [rbp - 0x60]",
            "call sg_copy",
            "mov r10, qword [rbp - 0x80]",
            "mov rdi, qword [rbp - 0x60]",
            "mov esi, r10d",
            "call sg_advance",
            "test rax, rax",
            "mov r8, rax",
            "mov qword [rbp - 0x60], rax",
            "je release_user_pages",
            "mov ecx, dword [rbx + 0xc]",
            "mov r9d, dword [rbx + 8]",
            "mov rdx, r12",
            "mov rdi, r15",
            "mov rsi, rbx",
            "call sym.srtp_auth_n_crypt",
            "mov rdi, r15",
            "mov r12d, eax",
            "call release_user_pages",
            "jmp 0x80045f0",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov edx, 1",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0x48]",
            "mov rdi, qword [rbx + 0x20]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r8, qword [r15 + 0xd0]",
            "mov ecx, dword [rbx + 0xc]",
            "mov rdx, r11",
            "mov r9d, dword [rbx + 8]",
            "mov rsi, rbx",
            "mov rdi, r15",
            "mov qword [rbp - 0x60], r8",
            "call sym.tls_auth_n_crypt",
            "mov r12d, eax",
            "jmp release_user_pages",
            "mov rdi, r15",
            "call release_user_pages",
            "mov r13d, dword [0x08004bb9]",
            "test r13d, r13d",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov r12d, 0xffffffea",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004c10], 0",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x8004628",
            "cmp dword [0x08004c28], 0",
            "jle 0x8004c16",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp 0x8004628",
            "xor eax, eax",
            "jmp 0x8004545",
            "cmp dword [0x08004c74], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x80",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004cbd], 0",
            "mov r12d, 0xffffffea",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "cmp dword [0x08004d06], 0",
            "mov r12d, 0xffffffea",
            "js 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2aa",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004d4f], 0",
            "mov r12d, 0xffffffea",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x286",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004d98], 0",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2b2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004ddb], 0",
            "mov r12d, 0xffffffea",
            "js release_user_pages",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "add rax, 0x4b8",
            "mov r9d, esi",
            "mov r8d, 0x241",
            "mov rsi, rax",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [r15 + 0x44], 0",
            "je 0x8004e34",
            "cmp dword [r15 + 0x40], 0",
            "je 0x800464c",
            "cmp dword [0x08004e3b], 0",
            "js 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x270",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004e84], 0",
            "mov r12d, 0xfffffff4",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x28c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r10d",
            "mov r8d, 0x8a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004f0c], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x25a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [0x08004f52], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x250",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004c16",
            "cmp dword [0x08004fd1], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x99",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x0800501a], 0",
            "jle 0x8004a20",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x57",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x79",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov eax, dword [r15 + 0xb4]",
            "mov edx, eax",
            "sub rdx, 1",
            "jmp 0x800467c",
            "cmp dword [0x080050ac], 0",
            "mov r12d, 0xfffffff2",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x292",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x47",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity"
        ]
    },
    "unk.0x8004949": {
        "function_address": "0x08004949",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x88",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r15, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [r15 + 0x88]",
            "test eax, eax",
            "je 0x8004427",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "lea r13, [rbx + 0x50]",
            "cmovle edx, dword [rbx + 0x4c]",
            "lea r14, [r15 + 0x78]",
            "mov eax, 0x10",
            "mov rsi, r13",
            "mov rdi, r14",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "test byte [rbx + 6], 0x20",
            "jne 0x8004640",
            "cmp dword [rbx + 0xc], 0x1000",
            "ja cryptodev_verbosity",
            "xor esi, esi",
            "mov edi, 0xd0",
            "call __get_free_pages",
            "test rax, rax",
            "mov qword [rbp - 0x70], rax",
            "je cryptodev_verbosity",
            "mov rsi, qword [rbx + 0x10]",
            "test rsi, rsi",
            "je 0x8004a08",
            "mov edx, dword [rbx + 0xc]",
            "xor r11d, r11d",
            "test edx, edx",
            "jne _copy_from_user",
            "test byte [rbx + 6], 0x10",
            "je 0x80044b3",
            "mov r12d, dword [r15 + 0x40]",
            "test r12d, r12d",
            "je 0x80047a0",
            "mov r10d, dword [r15 + 0x38]",
            "test r10d, r10d",
            "je cryptodev_verbosity",
            "cmp qword [r15 + 0x40], 0",
            "je cryptodev_verbosity",
            "lea rax, [rbp - 0x60]",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, dword [rbx + 8]",
            "mov rsi, qword [rbx + 0x18]",
            "mov r9, qword [rbx + 0x60]",
            "mov rdi, r15",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x58]",
            "mov r8d, dword [rbx + 0x48]",
            "mov qword [rbp - 0x78], r11",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x68]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "mov r12d, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r9d, dword [r15 + 0x38]",
            "mov eax, dword [rbx + 8]",
            "mov rdx, qword [rbp - 0x60]",
            "mov r12, qword [rbp - 0x58]",
            "mov ecx, dword [rbx + 0xc]",
            "test r9d, r9d",
            "mov dword [rbp - 0x64], eax",
            "je 0x8004c66",
            "mov r8d, dword [r15 + 0x40]",
            "test r8d, r8d",
            "je 0x8004c66",
            "mov rax, qword [r15 + 0x60]",
            "mov eax, dword [rax + 0x3c]",
            "mov esi, dword [rbx + 0x30]",
            "cmp esi, eax",
            "ja cryptodev_verbosity",
            "test esi, esi",
            "je 0x8004740",
            "mov edi, dword [r15 + 0x40]",
            "test edi, edi",
            "je 0x8004585",
            "mov rdi, qword [r15 + 0x60]",
            "mov qword [rbp - 0x88], rdx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call crypto_aead_setauthsize",
            "mov rdx, qword [rbp - 0x88]",
            "mov ecx, dword [rbp - 0x80]",
            "mov r11, qword [rbp - 0x78]",
            "mov rax, qword [r15 + 0x68]",
            "test ecx, ecx",
            "mov esi, 0",
            "cmove r11, rsi",
            "mov r8d, dword [rbp - 0x64]",
            "lea rdi, [r15 + 0x38]",
            "mov rsi, r12",
            "mov dword [rax + 0x30], ecx",
            "mov qword [rax + 0x40], r11",
            "cmp word [rbx + 4], 0",
            "mov rcx, r8",
            "mov qword [rbp - 0x78], r8",
            "jne cryptodev_cipher_decrypt",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbp - 0x64]",
            "add r8, qword [rbx + 0x20]",
            "add eax, dword [rbx + 0x30]",
            "mov qword [rbx + 0x28], r8",
            "mov dword [rbx + 0x48], eax",
            "mov rdi, r15",
            "call release_user_pages",
            "mov rdi, qword [rbp - 0x70]",
            "xor esi, esi",
            "call free_pages",
            "test r12d, r12d",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x4c]",
            "mov rsi, r14",
            "mov rdi, r13",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "lea rdi, [r15 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x88",
            "mov eax, r12d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, dword [r15 + 0x38]",
            "test eax, eax",
            "jne 0x8004e22",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004970",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004689",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x800467c",
            "cmp dword [0x08004676], 1",
            "jg current_task",
            "mov r9, qword [rbx + 0x10]",
            "test r9, rdx",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [rbx + 0xc]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rdx, qword [rbx + 0x10]",
            "mov r10, qword [rbx + 0x18]",
            "sub r10, rdx",
            "cmp r10d, 0x100",
            "jbe 0x80048b0",
            "mov eax, dword [0x080046bd]",
            "test eax, eax",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "cmp dword [0x080046d2], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2ea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x30]",
            "mov edx, dword [rbp - 0x64]",
            "sub r8, rax",
            "add r8, qword [rbx + 0x20]",
            "sub edx, eax",
            "mov dword [rbx + 0x48], edx",
            "mov qword [rbx + 0x28], r8",
            "jmp release_user_pages",
            "mov dword [rbx + 0x30], eax",
            "jmp 0x8004585",
            "cmp dword [0x08004757], 1",
            "jle 0x8004689",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "add eax, 1",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r8d, 0x7c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004689",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004bfe",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004810",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x8004810",
            "cmp dword [0x080047ca], 1",
            "jle 0x8004810",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x43",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x78], r11",
            "call printk",
            "mov r11, qword [rbp - 0x78]",
            "nop dword [rax + rax]",
            "movsxd rax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, 1",
            "mov dword [r15 + 0xc0], 0",
            "mov rdi, r15",
            "mov rsi, rcx",
            "lea rax, [rcx + rax - 1]",
            "shr rsi, 0xc",
            "sub edx, esi",
            "shr rax, 0xc",
            "lea ecx, [rdx + rax]",
            "mov dword [r15 + 0xbc], ecx",
            "mov esi, ecx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov ecx, dword [rbp - 0x80]",
            "je 0x8004b46",
            "mov esi, dword [0x08004871]",
            "test esi, esi",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2a0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rcx, rdx",
            "lea rax, [rdx + rax - 1]",
            "mov esi, 1",
            "shr rcx, 0xc",
            "mov rdi, r15",
            "mov qword [rbp - 0x80], r10",
            "sub esi, ecx",
            "shr rax, 0xc",
            "lea r11d, [rsi + rax]",
            "lea esi, [r11 + r11]",
            "mov dword [rbp - 0x78], r11d",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "je 0x8004a70",
            "mov r14d, dword [0x080048f9]",
            "test r14d, r14d",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x92",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rdi, qword [rbp - 0x70]",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "mov edx, dword [rbx + 0xc]",
            "mov rsi, qword [rbp - 0x70]",
            "lea rdi, [rbp - 0x50]",
            "call sg_init_one",
            "lea r11, [rbp - 0x50]",
            "jmp 0x80044a0",
            "cmp qword [rbx + 0x10], 0",
            "jne 0x8004659",
            "mov eax, dword [0x08004981]",
            "test eax, eax",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x72",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "cmp dword [0x080049c7], 0",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x276",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "xor r11d, r11d",
            "jmp 0x80044a0",
            "mov r11d, dword [0x08004a17]",
            "test r11d, r11d",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x80045e5",
            "cmp dword [0x08004a32], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov ecx, r11d",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0xc]",
            "mov edx, 1",
            "mov rdi, qword [rbx + 0x10]",
            "mov qword [rbp - 0x80], r10",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov dword [rbp - 0x78], r11d",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r12, qword [r15 + 0xd0]",
            "movsxd rdi, r11d",
            "mov dword [r15 + 0xbc], r11d",
            "shl rdi, 5",
            "mov esi, r11d",
            "mov dword [r15 + 0xc0], 0",
            "mov qword [rbp - 0x80], r10",
            "add rdi, r12",
            "mov qword [rbp - 0x60], rdi",
            "call sg_init_table",
            "mov edx, dword [rbx + 0xc]",
            "mov rdi, qword [r15 + 0xd0]",
            "mov rsi, qword [rbp - 0x60]",
            "call sg_copy",
            "mov r10, qword [rbp - 0x80]",
            "mov rdi, qword [rbp - 0x60]",
            "mov esi, r10d",
            "call sg_advance",
            "test rax, rax",
            "mov r8, rax",
            "mov qword [rbp - 0x60], rax",
            "je release_user_pages",
            "mov ecx, dword [rbx + 0xc]",
            "mov r9d, dword [rbx + 8]",
            "mov rdx, r12",
            "mov rdi, r15",
            "mov rsi, rbx",
            "call sym.srtp_auth_n_crypt",
            "mov rdi, r15",
            "mov r12d, eax",
            "call release_user_pages",
            "jmp 0x80045f0",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov edx, 1",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0x48]",
            "mov rdi, qword [rbx + 0x20]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r8, qword [r15 + 0xd0]",
            "mov ecx, dword [rbx + 0xc]",
            "mov rdx, r11",
            "mov r9d, dword [rbx + 8]",
            "mov rsi, rbx",
            "mov rdi, r15",
            "mov qword [rbp - 0x60], r8",
            "call sym.tls_auth_n_crypt",
            "mov r12d, eax",
            "jmp release_user_pages",
            "mov rdi, r15",
            "call release_user_pages",
            "mov r13d, dword [0x08004bb9]",
            "test r13d, r13d",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov r12d, 0xffffffea",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004c10], 0",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x8004628",
            "cmp dword [0x08004c28], 0",
            "jle 0x8004c16",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp 0x8004628",
            "xor eax, eax",
            "jmp 0x8004545",
            "cmp dword [0x08004c74], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x80",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004cbd], 0",
            "mov r12d, 0xffffffea",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "cmp dword [0x08004d06], 0",
            "mov r12d, 0xffffffea",
            "js 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2aa",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004d4f], 0",
            "mov r12d, 0xffffffea",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x286",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004d98], 0",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2b2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004ddb], 0",
            "mov r12d, 0xffffffea",
            "js release_user_pages",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "add rax, 0x4b8",
            "mov r9d, esi",
            "mov r8d, 0x241",
            "mov rsi, rax",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [r15 + 0x44], 0",
            "je 0x8004e34",
            "cmp dword [r15 + 0x40], 0",
            "je 0x800464c",
            "cmp dword [0x08004e3b], 0",
            "js 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x270",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004e84], 0",
            "mov r12d, 0xfffffff4",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x28c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r10d",
            "mov r8d, 0x8a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004f0c], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x25a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [0x08004f52], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x250",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004c16",
            "cmp dword [0x08004fd1], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x99",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x0800501a], 0",
            "jle 0x8004a20",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x57",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x79",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov eax, dword [r15 + 0xb4]",
            "mov edx, eax",
            "sub rdx, 1",
            "jmp 0x800467c",
            "cmp dword [0x080050ac], 0",
            "mov r12d, 0xfffffff2",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x292",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x47",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity"
        ]
    },
    "unk.0x8004962": {
        "function_address": "0x08004962",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x88",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r15, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [r15 + 0x88]",
            "test eax, eax",
            "je 0x8004427",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "lea r13, [rbx + 0x50]",
            "cmovle edx, dword [rbx + 0x4c]",
            "lea r14, [r15 + 0x78]",
            "mov eax, 0x10",
            "mov rsi, r13",
            "mov rdi, r14",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "test byte [rbx + 6], 0x20",
            "jne 0x8004640",
            "cmp dword [rbx + 0xc], 0x1000",
            "ja cryptodev_verbosity",
            "xor esi, esi",
            "mov edi, 0xd0",
            "call __get_free_pages",
            "test rax, rax",
            "mov qword [rbp - 0x70], rax",
            "je cryptodev_verbosity",
            "mov rsi, qword [rbx + 0x10]",
            "test rsi, rsi",
            "je 0x8004a08",
            "mov edx, dword [rbx + 0xc]",
            "xor r11d, r11d",
            "test edx, edx",
            "jne _copy_from_user",
            "test byte [rbx + 6], 0x10",
            "je 0x80044b3",
            "mov r12d, dword [r15 + 0x40]",
            "test r12d, r12d",
            "je 0x80047a0",
            "mov r10d, dword [r15 + 0x38]",
            "test r10d, r10d",
            "je cryptodev_verbosity",
            "cmp qword [r15 + 0x40], 0",
            "je cryptodev_verbosity",
            "lea rax, [rbp - 0x60]",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, dword [rbx + 8]",
            "mov rsi, qword [rbx + 0x18]",
            "mov r9, qword [rbx + 0x60]",
            "mov rdi, r15",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x58]",
            "mov r8d, dword [rbx + 0x48]",
            "mov qword [rbp - 0x78], r11",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x68]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "mov r12d, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r9d, dword [r15 + 0x38]",
            "mov eax, dword [rbx + 8]",
            "mov rdx, qword [rbp - 0x60]",
            "mov r12, qword [rbp - 0x58]",
            "mov ecx, dword [rbx + 0xc]",
            "test r9d, r9d",
            "mov dword [rbp - 0x64], eax",
            "je 0x8004c66",
            "mov r8d, dword [r15 + 0x40]",
            "test r8d, r8d",
            "je 0x8004c66",
            "mov rax, qword [r15 + 0x60]",
            "mov eax, dword [rax + 0x3c]",
            "mov esi, dword [rbx + 0x30]",
            "cmp esi, eax",
            "ja cryptodev_verbosity",
            "test esi, esi",
            "je 0x8004740",
            "mov edi, dword [r15 + 0x40]",
            "test edi, edi",
            "je 0x8004585",
            "mov rdi, qword [r15 + 0x60]",
            "mov qword [rbp - 0x88], rdx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call crypto_aead_setauthsize",
            "mov rdx, qword [rbp - 0x88]",
            "mov ecx, dword [rbp - 0x80]",
            "mov r11, qword [rbp - 0x78]",
            "mov rax, qword [r15 + 0x68]",
            "test ecx, ecx",
            "mov esi, 0",
            "cmove r11, rsi",
            "mov r8d, dword [rbp - 0x64]",
            "lea rdi, [r15 + 0x38]",
            "mov rsi, r12",
            "mov dword [rax + 0x30], ecx",
            "mov qword [rax + 0x40], r11",
            "cmp word [rbx + 4], 0",
            "mov rcx, r8",
            "mov qword [rbp - 0x78], r8",
            "jne cryptodev_cipher_decrypt",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbp - 0x64]",
            "add r8, qword [rbx + 0x20]",
            "add eax, dword [rbx + 0x30]",
            "mov qword [rbx + 0x28], r8",
            "mov dword [rbx + 0x48], eax",
            "mov rdi, r15",
            "call release_user_pages",
            "mov rdi, qword [rbp - 0x70]",
            "xor esi, esi",
            "call free_pages",
            "test r12d, r12d",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x4c]",
            "mov rsi, r14",
            "mov rdi, r13",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "lea rdi, [r15 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x88",
            "mov eax, r12d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, dword [r15 + 0x38]",
            "test eax, eax",
            "jne 0x8004e22",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004970",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004689",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x800467c",
            "cmp dword [0x08004676], 1",
            "jg current_task",
            "mov r9, qword [rbx + 0x10]",
            "test r9, rdx",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [rbx + 0xc]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rdx, qword [rbx + 0x10]",
            "mov r10, qword [rbx + 0x18]",
            "sub r10, rdx",
            "cmp r10d, 0x100",
            "jbe 0x80048b0",
            "mov eax, dword [0x080046bd]",
            "test eax, eax",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "cmp dword [0x080046d2], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2ea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x30]",
            "mov edx, dword [rbp - 0x64]",
            "sub r8, rax",
            "add r8, qword [rbx + 0x20]",
            "sub edx, eax",
            "mov dword [rbx + 0x48], edx",
            "mov qword [rbx + 0x28], r8",
            "jmp release_user_pages",
            "mov dword [rbx + 0x30], eax",
            "jmp 0x8004585",
            "cmp dword [0x08004757], 1",
            "jle 0x8004689",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "add eax, 1",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r8d, 0x7c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004689",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004bfe",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004810",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x8004810",
            "cmp dword [0x080047ca], 1",
            "jle 0x8004810",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x43",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x78], r11",
            "call printk",
            "mov r11, qword [rbp - 0x78]",
            "nop dword [rax + rax]",
            "movsxd rax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, 1",
            "mov dword [r15 + 0xc0], 0",
            "mov rdi, r15",
            "mov rsi, rcx",
            "lea rax, [rcx + rax - 1]",
            "shr rsi, 0xc",
            "sub edx, esi",
            "shr rax, 0xc",
            "lea ecx, [rdx + rax]",
            "mov dword [r15 + 0xbc], ecx",
            "mov esi, ecx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov ecx, dword [rbp - 0x80]",
            "je 0x8004b46",
            "mov esi, dword [0x08004871]",
            "test esi, esi",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2a0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rcx, rdx",
            "lea rax, [rdx + rax - 1]",
            "mov esi, 1",
            "shr rcx, 0xc",
            "mov rdi, r15",
            "mov qword [rbp - 0x80], r10",
            "sub esi, ecx",
            "shr rax, 0xc",
            "lea r11d, [rsi + rax]",
            "lea esi, [r11 + r11]",
            "mov dword [rbp - 0x78], r11d",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "je 0x8004a70",
            "mov r14d, dword [0x080048f9]",
            "test r14d, r14d",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x92",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rdi, qword [rbp - 0x70]",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "mov edx, dword [rbx + 0xc]",
            "mov rsi, qword [rbp - 0x70]",
            "lea rdi, [rbp - 0x50]",
            "call sg_init_one",
            "lea r11, [rbp - 0x50]",
            "jmp 0x80044a0",
            "cmp qword [rbx + 0x10], 0",
            "jne 0x8004659",
            "mov eax, dword [0x08004981]",
            "test eax, eax",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x72",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "cmp dword [0x080049c7], 0",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x276",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "xor r11d, r11d",
            "jmp 0x80044a0",
            "mov r11d, dword [0x08004a17]",
            "test r11d, r11d",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x80045e5",
            "cmp dword [0x08004a32], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov ecx, r11d",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0xc]",
            "mov edx, 1",
            "mov rdi, qword [rbx + 0x10]",
            "mov qword [rbp - 0x80], r10",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov dword [rbp - 0x78], r11d",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r12, qword [r15 + 0xd0]",
            "movsxd rdi, r11d",
            "mov dword [r15 + 0xbc], r11d",
            "shl rdi, 5",
            "mov esi, r11d",
            "mov dword [r15 + 0xc0], 0",
            "mov qword [rbp - 0x80], r10",
            "add rdi, r12",
            "mov qword [rbp - 0x60], rdi",
            "call sg_init_table",
            "mov edx, dword [rbx + 0xc]",
            "mov rdi, qword [r15 + 0xd0]",
            "mov rsi, qword [rbp - 0x60]",
            "call sg_copy",
            "mov r10, qword [rbp - 0x80]",
            "mov rdi, qword [rbp - 0x60]",
            "mov esi, r10d",
            "call sg_advance",
            "test rax, rax",
            "mov r8, rax",
            "mov qword [rbp - 0x60], rax",
            "je release_user_pages",
            "mov ecx, dword [rbx + 0xc]",
            "mov r9d, dword [rbx + 8]",
            "mov rdx, r12",
            "mov rdi, r15",
            "mov rsi, rbx",
            "call sym.srtp_auth_n_crypt",
            "mov rdi, r15",
            "mov r12d, eax",
            "call release_user_pages",
            "jmp 0x80045f0",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov edx, 1",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0x48]",
            "mov rdi, qword [rbx + 0x20]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r8, qword [r15 + 0xd0]",
            "mov ecx, dword [rbx + 0xc]",
            "mov rdx, r11",
            "mov r9d, dword [rbx + 8]",
            "mov rsi, rbx",
            "mov rdi, r15",
            "mov qword [rbp - 0x60], r8",
            "call sym.tls_auth_n_crypt",
            "mov r12d, eax",
            "jmp release_user_pages",
            "mov rdi, r15",
            "call release_user_pages",
            "mov r13d, dword [0x08004bb9]",
            "test r13d, r13d",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov r12d, 0xffffffea",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004c10], 0",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x8004628",
            "cmp dword [0x08004c28], 0",
            "jle 0x8004c16",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp 0x8004628",
            "xor eax, eax",
            "jmp 0x8004545",
            "cmp dword [0x08004c74], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x80",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004cbd], 0",
            "mov r12d, 0xffffffea",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "cmp dword [0x08004d06], 0",
            "mov r12d, 0xffffffea",
            "js 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2aa",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004d4f], 0",
            "mov r12d, 0xffffffea",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x286",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004d98], 0",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2b2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004ddb], 0",
            "mov r12d, 0xffffffea",
            "js release_user_pages",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "add rax, 0x4b8",
            "mov r9d, esi",
            "mov r8d, 0x241",
            "mov rsi, rax",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [r15 + 0x44], 0",
            "je 0x8004e34",
            "cmp dword [r15 + 0x40], 0",
            "je 0x800464c",
            "cmp dword [0x08004e3b], 0",
            "js 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x270",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004e84], 0",
            "mov r12d, 0xfffffff4",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x28c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r10d",
            "mov r8d, 0x8a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004f0c], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x25a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [0x08004f52], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x250",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004c16",
            "cmp dword [0x08004fd1], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x99",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x0800501a], 0",
            "jle 0x8004a20",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x57",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x79",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov eax, dword [r15 + 0xb4]",
            "mov edx, eax",
            "sub rdx, 1",
            "jmp 0x800467c",
            "cmp dword [0x080050ac], 0",
            "mov r12d, 0xfffffff2",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x292",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x47",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity"
        ]
    },
    "unk.0x80049c0": {
        "function_address": "0x080049c0",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x88",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r15, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [r15 + 0x88]",
            "test eax, eax",
            "je 0x8004427",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "lea r13, [rbx + 0x50]",
            "cmovle edx, dword [rbx + 0x4c]",
            "lea r14, [r15 + 0x78]",
            "mov eax, 0x10",
            "mov rsi, r13",
            "mov rdi, r14",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "test byte [rbx + 6], 0x20",
            "jne 0x8004640",
            "cmp dword [rbx + 0xc], 0x1000",
            "ja cryptodev_verbosity",
            "xor esi, esi",
            "mov edi, 0xd0",
            "call __get_free_pages",
            "test rax, rax",
            "mov qword [rbp - 0x70], rax",
            "je cryptodev_verbosity",
            "mov rsi, qword [rbx + 0x10]",
            "test rsi, rsi",
            "je 0x8004a08",
            "mov edx, dword [rbx + 0xc]",
            "xor r11d, r11d",
            "test edx, edx",
            "jne _copy_from_user",
            "test byte [rbx + 6], 0x10",
            "je 0x80044b3",
            "mov r12d, dword [r15 + 0x40]",
            "test r12d, r12d",
            "je 0x80047a0",
            "mov r10d, dword [r15 + 0x38]",
            "test r10d, r10d",
            "je cryptodev_verbosity",
            "cmp qword [r15 + 0x40], 0",
            "je cryptodev_verbosity",
            "lea rax, [rbp - 0x60]",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, dword [rbx + 8]",
            "mov rsi, qword [rbx + 0x18]",
            "mov r9, qword [rbx + 0x60]",
            "mov rdi, r15",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x58]",
            "mov r8d, dword [rbx + 0x48]",
            "mov qword [rbp - 0x78], r11",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x68]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "mov r12d, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r9d, dword [r15 + 0x38]",
            "mov eax, dword [rbx + 8]",
            "mov rdx, qword [rbp - 0x60]",
            "mov r12, qword [rbp - 0x58]",
            "mov ecx, dword [rbx + 0xc]",
            "test r9d, r9d",
            "mov dword [rbp - 0x64], eax",
            "je 0x8004c66",
            "mov r8d, dword [r15 + 0x40]",
            "test r8d, r8d",
            "je 0x8004c66",
            "mov rax, qword [r15 + 0x60]",
            "mov eax, dword [rax + 0x3c]",
            "mov esi, dword [rbx + 0x30]",
            "cmp esi, eax",
            "ja cryptodev_verbosity",
            "test esi, esi",
            "je 0x8004740",
            "mov edi, dword [r15 + 0x40]",
            "test edi, edi",
            "je 0x8004585",
            "mov rdi, qword [r15 + 0x60]",
            "mov qword [rbp - 0x88], rdx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call crypto_aead_setauthsize",
            "mov rdx, qword [rbp - 0x88]",
            "mov ecx, dword [rbp - 0x80]",
            "mov r11, qword [rbp - 0x78]",
            "mov rax, qword [r15 + 0x68]",
            "test ecx, ecx",
            "mov esi, 0",
            "cmove r11, rsi",
            "mov r8d, dword [rbp - 0x64]",
            "lea rdi, [r15 + 0x38]",
            "mov rsi, r12",
            "mov dword [rax + 0x30], ecx",
            "mov qword [rax + 0x40], r11",
            "cmp word [rbx + 4], 0",
            "mov rcx, r8",
            "mov qword [rbp - 0x78], r8",
            "jne cryptodev_cipher_decrypt",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbp - 0x64]",
            "add r8, qword [rbx + 0x20]",
            "add eax, dword [rbx + 0x30]",
            "mov qword [rbx + 0x28], r8",
            "mov dword [rbx + 0x48], eax",
            "mov rdi, r15",
            "call release_user_pages",
            "mov rdi, qword [rbp - 0x70]",
            "xor esi, esi",
            "call free_pages",
            "test r12d, r12d",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x4c]",
            "mov rsi, r14",
            "mov rdi, r13",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "lea rdi, [r15 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x88",
            "mov eax, r12d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, dword [r15 + 0x38]",
            "test eax, eax",
            "jne 0x8004e22",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004970",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004689",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x800467c",
            "cmp dword [0x08004676], 1",
            "jg current_task",
            "mov r9, qword [rbx + 0x10]",
            "test r9, rdx",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [rbx + 0xc]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rdx, qword [rbx + 0x10]",
            "mov r10, qword [rbx + 0x18]",
            "sub r10, rdx",
            "cmp r10d, 0x100",
            "jbe 0x80048b0",
            "mov eax, dword [0x080046bd]",
            "test eax, eax",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "cmp dword [0x080046d2], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2ea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x30]",
            "mov edx, dword [rbp - 0x64]",
            "sub r8, rax",
            "add r8, qword [rbx + 0x20]",
            "sub edx, eax",
            "mov dword [rbx + 0x48], edx",
            "mov qword [rbx + 0x28], r8",
            "jmp release_user_pages",
            "mov dword [rbx + 0x30], eax",
            "jmp 0x8004585",
            "cmp dword [0x08004757], 1",
            "jle 0x8004689",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "add eax, 1",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r8d, 0x7c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004689",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004bfe",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004810",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x8004810",
            "cmp dword [0x080047ca], 1",
            "jle 0x8004810",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x43",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x78], r11",
            "call printk",
            "mov r11, qword [rbp - 0x78]",
            "nop dword [rax + rax]",
            "movsxd rax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, 1",
            "mov dword [r15 + 0xc0], 0",
            "mov rdi, r15",
            "mov rsi, rcx",
            "lea rax, [rcx + rax - 1]",
            "shr rsi, 0xc",
            "sub edx, esi",
            "shr rax, 0xc",
            "lea ecx, [rdx + rax]",
            "mov dword [r15 + 0xbc], ecx",
            "mov esi, ecx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov ecx, dword [rbp - 0x80]",
            "je 0x8004b46",
            "mov esi, dword [0x08004871]",
            "test esi, esi",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2a0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rcx, rdx",
            "lea rax, [rdx + rax - 1]",
            "mov esi, 1",
            "shr rcx, 0xc",
            "mov rdi, r15",
            "mov qword [rbp - 0x80], r10",
            "sub esi, ecx",
            "shr rax, 0xc",
            "lea r11d, [rsi + rax]",
            "lea esi, [r11 + r11]",
            "mov dword [rbp - 0x78], r11d",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "je 0x8004a70",
            "mov r14d, dword [0x080048f9]",
            "test r14d, r14d",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x92",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rdi, qword [rbp - 0x70]",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "mov edx, dword [rbx + 0xc]",
            "mov rsi, qword [rbp - 0x70]",
            "lea rdi, [rbp - 0x50]",
            "call sg_init_one",
            "lea r11, [rbp - 0x50]",
            "jmp 0x80044a0",
            "cmp qword [rbx + 0x10], 0",
            "jne 0x8004659",
            "mov eax, dword [0x08004981]",
            "test eax, eax",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x72",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "cmp dword [0x080049c7], 0",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x276",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "xor r11d, r11d",
            "jmp 0x80044a0",
            "mov r11d, dword [0x08004a17]",
            "test r11d, r11d",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x80045e5",
            "cmp dword [0x08004a32], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov ecx, r11d",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0xc]",
            "mov edx, 1",
            "mov rdi, qword [rbx + 0x10]",
            "mov qword [rbp - 0x80], r10",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov dword [rbp - 0x78], r11d",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r12, qword [r15 + 0xd0]",
            "movsxd rdi, r11d",
            "mov dword [r15 + 0xbc], r11d",
            "shl rdi, 5",
            "mov esi, r11d",
            "mov dword [r15 + 0xc0], 0",
            "mov qword [rbp - 0x80], r10",
            "add rdi, r12",
            "mov qword [rbp - 0x60], rdi",
            "call sg_init_table",
            "mov edx, dword [rbx + 0xc]",
            "mov rdi, qword [r15 + 0xd0]",
            "mov rsi, qword [rbp - 0x60]",
            "call sg_copy",
            "mov r10, qword [rbp - 0x80]",
            "mov rdi, qword [rbp - 0x60]",
            "mov esi, r10d",
            "call sg_advance",
            "test rax, rax",
            "mov r8, rax",
            "mov qword [rbp - 0x60], rax",
            "je release_user_pages",
            "mov ecx, dword [rbx + 0xc]",
            "mov r9d, dword [rbx + 8]",
            "mov rdx, r12",
            "mov rdi, r15",
            "mov rsi, rbx",
            "call sym.srtp_auth_n_crypt",
            "mov rdi, r15",
            "mov r12d, eax",
            "call release_user_pages",
            "jmp 0x80045f0",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov edx, 1",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0x48]",
            "mov rdi, qword [rbx + 0x20]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r8, qword [r15 + 0xd0]",
            "mov ecx, dword [rbx + 0xc]",
            "mov rdx, r11",
            "mov r9d, dword [rbx + 8]",
            "mov rsi, rbx",
            "mov rdi, r15",
            "mov qword [rbp - 0x60], r8",
            "call sym.tls_auth_n_crypt",
            "mov r12d, eax",
            "jmp release_user_pages",
            "mov rdi, r15",
            "call release_user_pages",
            "mov r13d, dword [0x08004bb9]",
            "test r13d, r13d",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov r12d, 0xffffffea",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004c10], 0",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x8004628",
            "cmp dword [0x08004c28], 0",
            "jle 0x8004c16",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp 0x8004628",
            "xor eax, eax",
            "jmp 0x8004545",
            "cmp dword [0x08004c74], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x80",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004cbd], 0",
            "mov r12d, 0xffffffea",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "cmp dword [0x08004d06], 0",
            "mov r12d, 0xffffffea",
            "js 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2aa",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004d4f], 0",
            "mov r12d, 0xffffffea",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x286",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004d98], 0",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2b2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004ddb], 0",
            "mov r12d, 0xffffffea",
            "js release_user_pages",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "add rax, 0x4b8",
            "mov r9d, esi",
            "mov r8d, 0x241",
            "mov rsi, rax",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [r15 + 0x44], 0",
            "je 0x8004e34",
            "cmp dword [r15 + 0x40], 0",
            "je 0x800464c",
            "cmp dword [0x08004e3b], 0",
            "js 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x270",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004e84], 0",
            "mov r12d, 0xfffffff4",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x28c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r10d",
            "mov r8d, 0x8a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004f0c], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x25a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [0x08004f52], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x250",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004c16",
            "cmp dword [0x08004fd1], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x99",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x0800501a], 0",
            "jle 0x8004a20",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x57",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x79",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov eax, dword [r15 + 0xb4]",
            "mov edx, eax",
            "sub rdx, 1",
            "jmp 0x800467c",
            "cmp dword [0x080050ac], 0",
            "mov r12d, 0xfffffff2",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x292",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x47",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity"
        ]
    },
    "unk.0x80049fe": {
        "function_address": "0x080049fe",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x88",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r15, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [r15 + 0x88]",
            "test eax, eax",
            "je 0x8004427",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "lea r13, [rbx + 0x50]",
            "cmovle edx, dword [rbx + 0x4c]",
            "lea r14, [r15 + 0x78]",
            "mov eax, 0x10",
            "mov rsi, r13",
            "mov rdi, r14",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "test byte [rbx + 6], 0x20",
            "jne 0x8004640",
            "cmp dword [rbx + 0xc], 0x1000",
            "ja cryptodev_verbosity",
            "xor esi, esi",
            "mov edi, 0xd0",
            "call __get_free_pages",
            "test rax, rax",
            "mov qword [rbp - 0x70], rax",
            "je cryptodev_verbosity",
            "mov rsi, qword [rbx + 0x10]",
            "test rsi, rsi",
            "je 0x8004a08",
            "mov edx, dword [rbx + 0xc]",
            "xor r11d, r11d",
            "test edx, edx",
            "jne _copy_from_user",
            "test byte [rbx + 6], 0x10",
            "je 0x80044b3",
            "mov r12d, dword [r15 + 0x40]",
            "test r12d, r12d",
            "je 0x80047a0",
            "mov r10d, dword [r15 + 0x38]",
            "test r10d, r10d",
            "je cryptodev_verbosity",
            "cmp qword [r15 + 0x40], 0",
            "je cryptodev_verbosity",
            "lea rax, [rbp - 0x60]",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, dword [rbx + 8]",
            "mov rsi, qword [rbx + 0x18]",
            "mov r9, qword [rbx + 0x60]",
            "mov rdi, r15",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x58]",
            "mov r8d, dword [rbx + 0x48]",
            "mov qword [rbp - 0x78], r11",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x68]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "mov r12d, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r9d, dword [r15 + 0x38]",
            "mov eax, dword [rbx + 8]",
            "mov rdx, qword [rbp - 0x60]",
            "mov r12, qword [rbp - 0x58]",
            "mov ecx, dword [rbx + 0xc]",
            "test r9d, r9d",
            "mov dword [rbp - 0x64], eax",
            "je 0x8004c66",
            "mov r8d, dword [r15 + 0x40]",
            "test r8d, r8d",
            "je 0x8004c66",
            "mov rax, qword [r15 + 0x60]",
            "mov eax, dword [rax + 0x3c]",
            "mov esi, dword [rbx + 0x30]",
            "cmp esi, eax",
            "ja cryptodev_verbosity",
            "test esi, esi",
            "je 0x8004740",
            "mov edi, dword [r15 + 0x40]",
            "test edi, edi",
            "je 0x8004585",
            "mov rdi, qword [r15 + 0x60]",
            "mov qword [rbp - 0x88], rdx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call crypto_aead_setauthsize",
            "mov rdx, qword [rbp - 0x88]",
            "mov ecx, dword [rbp - 0x80]",
            "mov r11, qword [rbp - 0x78]",
            "mov rax, qword [r15 + 0x68]",
            "test ecx, ecx",
            "mov esi, 0",
            "cmove r11, rsi",
            "mov r8d, dword [rbp - 0x64]",
            "lea rdi, [r15 + 0x38]",
            "mov rsi, r12",
            "mov dword [rax + 0x30], ecx",
            "mov qword [rax + 0x40], r11",
            "cmp word [rbx + 4], 0",
            "mov rcx, r8",
            "mov qword [rbp - 0x78], r8",
            "jne cryptodev_cipher_decrypt",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbp - 0x64]",
            "add r8, qword [rbx + 0x20]",
            "add eax, dword [rbx + 0x30]",
            "mov qword [rbx + 0x28], r8",
            "mov dword [rbx + 0x48], eax",
            "mov rdi, r15",
            "call release_user_pages",
            "mov rdi, qword [rbp - 0x70]",
            "xor esi, esi",
            "call free_pages",
            "test r12d, r12d",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x4c]",
            "mov rsi, r14",
            "mov rdi, r13",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "lea rdi, [r15 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x88",
            "mov eax, r12d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, dword [r15 + 0x38]",
            "test eax, eax",
            "jne 0x8004e22",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004970",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004689",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x800467c",
            "cmp dword [0x08004676], 1",
            "jg current_task",
            "mov r9, qword [rbx + 0x10]",
            "test r9, rdx",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [rbx + 0xc]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rdx, qword [rbx + 0x10]",
            "mov r10, qword [rbx + 0x18]",
            "sub r10, rdx",
            "cmp r10d, 0x100",
            "jbe 0x80048b0",
            "mov eax, dword [0x080046bd]",
            "test eax, eax",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "cmp dword [0x080046d2], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2ea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x30]",
            "mov edx, dword [rbp - 0x64]",
            "sub r8, rax",
            "add r8, qword [rbx + 0x20]",
            "sub edx, eax",
            "mov dword [rbx + 0x48], edx",
            "mov qword [rbx + 0x28], r8",
            "jmp release_user_pages",
            "mov dword [rbx + 0x30], eax",
            "jmp 0x8004585",
            "cmp dword [0x08004757], 1",
            "jle 0x8004689",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "add eax, 1",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r8d, 0x7c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004689",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004bfe",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004810",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x8004810",
            "cmp dword [0x080047ca], 1",
            "jle 0x8004810",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x43",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x78], r11",
            "call printk",
            "mov r11, qword [rbp - 0x78]",
            "nop dword [rax + rax]",
            "movsxd rax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, 1",
            "mov dword [r15 + 0xc0], 0",
            "mov rdi, r15",
            "mov rsi, rcx",
            "lea rax, [rcx + rax - 1]",
            "shr rsi, 0xc",
            "sub edx, esi",
            "shr rax, 0xc",
            "lea ecx, [rdx + rax]",
            "mov dword [r15 + 0xbc], ecx",
            "mov esi, ecx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov ecx, dword [rbp - 0x80]",
            "je 0x8004b46",
            "mov esi, dword [0x08004871]",
            "test esi, esi",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2a0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rcx, rdx",
            "lea rax, [rdx + rax - 1]",
            "mov esi, 1",
            "shr rcx, 0xc",
            "mov rdi, r15",
            "mov qword [rbp - 0x80], r10",
            "sub esi, ecx",
            "shr rax, 0xc",
            "lea r11d, [rsi + rax]",
            "lea esi, [r11 + r11]",
            "mov dword [rbp - 0x78], r11d",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "je 0x8004a70",
            "mov r14d, dword [0x080048f9]",
            "test r14d, r14d",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x92",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rdi, qword [rbp - 0x70]",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "mov edx, dword [rbx + 0xc]",
            "mov rsi, qword [rbp - 0x70]",
            "lea rdi, [rbp - 0x50]",
            "call sg_init_one",
            "lea r11, [rbp - 0x50]",
            "jmp 0x80044a0",
            "cmp qword [rbx + 0x10], 0",
            "jne 0x8004659",
            "mov eax, dword [0x08004981]",
            "test eax, eax",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x72",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "cmp dword [0x080049c7], 0",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x276",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "xor r11d, r11d",
            "jmp 0x80044a0",
            "mov r11d, dword [0x08004a17]",
            "test r11d, r11d",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x80045e5",
            "cmp dword [0x08004a32], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov ecx, r11d",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0xc]",
            "mov edx, 1",
            "mov rdi, qword [rbx + 0x10]",
            "mov qword [rbp - 0x80], r10",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov dword [rbp - 0x78], r11d",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r12, qword [r15 + 0xd0]",
            "movsxd rdi, r11d",
            "mov dword [r15 + 0xbc], r11d",
            "shl rdi, 5",
            "mov esi, r11d",
            "mov dword [r15 + 0xc0], 0",
            "mov qword [rbp - 0x80], r10",
            "add rdi, r12",
            "mov qword [rbp - 0x60], rdi",
            "call sg_init_table",
            "mov edx, dword [rbx + 0xc]",
            "mov rdi, qword [r15 + 0xd0]",
            "mov rsi, qword [rbp - 0x60]",
            "call sg_copy",
            "mov r10, qword [rbp - 0x80]",
            "mov rdi, qword [rbp - 0x60]",
            "mov esi, r10d",
            "call sg_advance",
            "test rax, rax",
            "mov r8, rax",
            "mov qword [rbp - 0x60], rax",
            "je release_user_pages",
            "mov ecx, dword [rbx + 0xc]",
            "mov r9d, dword [rbx + 8]",
            "mov rdx, r12",
            "mov rdi, r15",
            "mov rsi, rbx",
            "call sym.srtp_auth_n_crypt",
            "mov rdi, r15",
            "mov r12d, eax",
            "call release_user_pages",
            "jmp 0x80045f0",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov edx, 1",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0x48]",
            "mov rdi, qword [rbx + 0x20]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r8, qword [r15 + 0xd0]",
            "mov ecx, dword [rbx + 0xc]",
            "mov rdx, r11",
            "mov r9d, dword [rbx + 8]",
            "mov rsi, rbx",
            "mov rdi, r15",
            "mov qword [rbp - 0x60], r8",
            "call sym.tls_auth_n_crypt",
            "mov r12d, eax",
            "jmp release_user_pages",
            "mov rdi, r15",
            "call release_user_pages",
            "mov r13d, dword [0x08004bb9]",
            "test r13d, r13d",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov r12d, 0xffffffea",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004c10], 0",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x8004628",
            "cmp dword [0x08004c28], 0",
            "jle 0x8004c16",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp 0x8004628",
            "xor eax, eax",
            "jmp 0x8004545",
            "cmp dword [0x08004c74], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x80",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004cbd], 0",
            "mov r12d, 0xffffffea",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "cmp dword [0x08004d06], 0",
            "mov r12d, 0xffffffea",
            "js 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2aa",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004d4f], 0",
            "mov r12d, 0xffffffea",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x286",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004d98], 0",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2b2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004ddb], 0",
            "mov r12d, 0xffffffea",
            "js release_user_pages",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "add rax, 0x4b8",
            "mov r9d, esi",
            "mov r8d, 0x241",
            "mov rsi, rax",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [r15 + 0x44], 0",
            "je 0x8004e34",
            "cmp dword [r15 + 0x40], 0",
            "je 0x800464c",
            "cmp dword [0x08004e3b], 0",
            "js 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x270",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004e84], 0",
            "mov r12d, 0xfffffff4",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x28c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r10d",
            "mov r8d, 0x8a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004f0c], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x25a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [0x08004f52], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x250",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004c16",
            "cmp dword [0x08004fd1], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x99",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x0800501a], 0",
            "jle 0x8004a20",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x57",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x79",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov eax, dword [r15 + 0xb4]",
            "mov edx, eax",
            "sub rdx, 1",
            "jmp 0x800467c",
            "cmp dword [0x080050ac], 0",
            "mov r12d, 0xfffffff2",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x292",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x47",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity"
        ]
    },
    "unk.0x8004a69": {
        "function_address": "0x08004a69",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x88",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r15, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [r15 + 0x88]",
            "test eax, eax",
            "je 0x8004427",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "lea r13, [rbx + 0x50]",
            "cmovle edx, dword [rbx + 0x4c]",
            "lea r14, [r15 + 0x78]",
            "mov eax, 0x10",
            "mov rsi, r13",
            "mov rdi, r14",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "test byte [rbx + 6], 0x20",
            "jne 0x8004640",
            "cmp dword [rbx + 0xc], 0x1000",
            "ja cryptodev_verbosity",
            "xor esi, esi",
            "mov edi, 0xd0",
            "call __get_free_pages",
            "test rax, rax",
            "mov qword [rbp - 0x70], rax",
            "je cryptodev_verbosity",
            "mov rsi, qword [rbx + 0x10]",
            "test rsi, rsi",
            "je 0x8004a08",
            "mov edx, dword [rbx + 0xc]",
            "xor r11d, r11d",
            "test edx, edx",
            "jne _copy_from_user",
            "test byte [rbx + 6], 0x10",
            "je 0x80044b3",
            "mov r12d, dword [r15 + 0x40]",
            "test r12d, r12d",
            "je 0x80047a0",
            "mov r10d, dword [r15 + 0x38]",
            "test r10d, r10d",
            "je cryptodev_verbosity",
            "cmp qword [r15 + 0x40], 0",
            "je cryptodev_verbosity",
            "lea rax, [rbp - 0x60]",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, dword [rbx + 8]",
            "mov rsi, qword [rbx + 0x18]",
            "mov r9, qword [rbx + 0x60]",
            "mov rdi, r15",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x58]",
            "mov r8d, dword [rbx + 0x48]",
            "mov qword [rbp - 0x78], r11",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x68]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "mov r12d, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r9d, dword [r15 + 0x38]",
            "mov eax, dword [rbx + 8]",
            "mov rdx, qword [rbp - 0x60]",
            "mov r12, qword [rbp - 0x58]",
            "mov ecx, dword [rbx + 0xc]",
            "test r9d, r9d",
            "mov dword [rbp - 0x64], eax",
            "je 0x8004c66",
            "mov r8d, dword [r15 + 0x40]",
            "test r8d, r8d",
            "je 0x8004c66",
            "mov rax, qword [r15 + 0x60]",
            "mov eax, dword [rax + 0x3c]",
            "mov esi, dword [rbx + 0x30]",
            "cmp esi, eax",
            "ja cryptodev_verbosity",
            "test esi, esi",
            "je 0x8004740",
            "mov edi, dword [r15 + 0x40]",
            "test edi, edi",
            "je 0x8004585",
            "mov rdi, qword [r15 + 0x60]",
            "mov qword [rbp - 0x88], rdx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call crypto_aead_setauthsize",
            "mov rdx, qword [rbp - 0x88]",
            "mov ecx, dword [rbp - 0x80]",
            "mov r11, qword [rbp - 0x78]",
            "mov rax, qword [r15 + 0x68]",
            "test ecx, ecx",
            "mov esi, 0",
            "cmove r11, rsi",
            "mov r8d, dword [rbp - 0x64]",
            "lea rdi, [r15 + 0x38]",
            "mov rsi, r12",
            "mov dword [rax + 0x30], ecx",
            "mov qword [rax + 0x40], r11",
            "cmp word [rbx + 4], 0",
            "mov rcx, r8",
            "mov qword [rbp - 0x78], r8",
            "jne cryptodev_cipher_decrypt",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbp - 0x64]",
            "add r8, qword [rbx + 0x20]",
            "add eax, dword [rbx + 0x30]",
            "mov qword [rbx + 0x28], r8",
            "mov dword [rbx + 0x48], eax",
            "mov rdi, r15",
            "call release_user_pages",
            "mov rdi, qword [rbp - 0x70]",
            "xor esi, esi",
            "call free_pages",
            "test r12d, r12d",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x4c]",
            "mov rsi, r14",
            "mov rdi, r13",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "lea rdi, [r15 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x88",
            "mov eax, r12d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, dword [r15 + 0x38]",
            "test eax, eax",
            "jne 0x8004e22",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004970",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004689",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x800467c",
            "cmp dword [0x08004676], 1",
            "jg current_task",
            "mov r9, qword [rbx + 0x10]",
            "test r9, rdx",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [rbx + 0xc]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rdx, qword [rbx + 0x10]",
            "mov r10, qword [rbx + 0x18]",
            "sub r10, rdx",
            "cmp r10d, 0x100",
            "jbe 0x80048b0",
            "mov eax, dword [0x080046bd]",
            "test eax, eax",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "cmp dword [0x080046d2], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2ea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x30]",
            "mov edx, dword [rbp - 0x64]",
            "sub r8, rax",
            "add r8, qword [rbx + 0x20]",
            "sub edx, eax",
            "mov dword [rbx + 0x48], edx",
            "mov qword [rbx + 0x28], r8",
            "jmp release_user_pages",
            "mov dword [rbx + 0x30], eax",
            "jmp 0x8004585",
            "cmp dword [0x08004757], 1",
            "jle 0x8004689",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "add eax, 1",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r8d, 0x7c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004689",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004bfe",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004810",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x8004810",
            "cmp dword [0x080047ca], 1",
            "jle 0x8004810",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x43",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x78], r11",
            "call printk",
            "mov r11, qword [rbp - 0x78]",
            "nop dword [rax + rax]",
            "movsxd rax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, 1",
            "mov dword [r15 + 0xc0], 0",
            "mov rdi, r15",
            "mov rsi, rcx",
            "lea rax, [rcx + rax - 1]",
            "shr rsi, 0xc",
            "sub edx, esi",
            "shr rax, 0xc",
            "lea ecx, [rdx + rax]",
            "mov dword [r15 + 0xbc], ecx",
            "mov esi, ecx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov ecx, dword [rbp - 0x80]",
            "je 0x8004b46",
            "mov esi, dword [0x08004871]",
            "test esi, esi",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2a0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rcx, rdx",
            "lea rax, [rdx + rax - 1]",
            "mov esi, 1",
            "shr rcx, 0xc",
            "mov rdi, r15",
            "mov qword [rbp - 0x80], r10",
            "sub esi, ecx",
            "shr rax, 0xc",
            "lea r11d, [rsi + rax]",
            "lea esi, [r11 + r11]",
            "mov dword [rbp - 0x78], r11d",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "je 0x8004a70",
            "mov r14d, dword [0x080048f9]",
            "test r14d, r14d",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x92",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rdi, qword [rbp - 0x70]",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "mov edx, dword [rbx + 0xc]",
            "mov rsi, qword [rbp - 0x70]",
            "lea rdi, [rbp - 0x50]",
            "call sg_init_one",
            "lea r11, [rbp - 0x50]",
            "jmp 0x80044a0",
            "cmp qword [rbx + 0x10], 0",
            "jne 0x8004659",
            "mov eax, dword [0x08004981]",
            "test eax, eax",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x72",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "cmp dword [0x080049c7], 0",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x276",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "xor r11d, r11d",
            "jmp 0x80044a0",
            "mov r11d, dword [0x08004a17]",
            "test r11d, r11d",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x80045e5",
            "cmp dword [0x08004a32], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov ecx, r11d",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0xc]",
            "mov edx, 1",
            "mov rdi, qword [rbx + 0x10]",
            "mov qword [rbp - 0x80], r10",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov dword [rbp - 0x78], r11d",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r12, qword [r15 + 0xd0]",
            "movsxd rdi, r11d",
            "mov dword [r15 + 0xbc], r11d",
            "shl rdi, 5",
            "mov esi, r11d",
            "mov dword [r15 + 0xc0], 0",
            "mov qword [rbp - 0x80], r10",
            "add rdi, r12",
            "mov qword [rbp - 0x60], rdi",
            "call sg_init_table",
            "mov edx, dword [rbx + 0xc]",
            "mov rdi, qword [r15 + 0xd0]",
            "mov rsi, qword [rbp - 0x60]",
            "call sg_copy",
            "mov r10, qword [rbp - 0x80]",
            "mov rdi, qword [rbp - 0x60]",
            "mov esi, r10d",
            "call sg_advance",
            "test rax, rax",
            "mov r8, rax",
            "mov qword [rbp - 0x60], rax",
            "je release_user_pages",
            "mov ecx, dword [rbx + 0xc]",
            "mov r9d, dword [rbx + 8]",
            "mov rdx, r12",
            "mov rdi, r15",
            "mov rsi, rbx",
            "call sym.srtp_auth_n_crypt",
            "mov rdi, r15",
            "mov r12d, eax",
            "call release_user_pages",
            "jmp 0x80045f0",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov edx, 1",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0x48]",
            "mov rdi, qword [rbx + 0x20]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r8, qword [r15 + 0xd0]",
            "mov ecx, dword [rbx + 0xc]",
            "mov rdx, r11",
            "mov r9d, dword [rbx + 8]",
            "mov rsi, rbx",
            "mov rdi, r15",
            "mov qword [rbp - 0x60], r8",
            "call sym.tls_auth_n_crypt",
            "mov r12d, eax",
            "jmp release_user_pages",
            "mov rdi, r15",
            "call release_user_pages",
            "mov r13d, dword [0x08004bb9]",
            "test r13d, r13d",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov r12d, 0xffffffea",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004c10], 0",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x8004628",
            "cmp dword [0x08004c28], 0",
            "jle 0x8004c16",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp 0x8004628",
            "xor eax, eax",
            "jmp 0x8004545",
            "cmp dword [0x08004c74], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x80",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004cbd], 0",
            "mov r12d, 0xffffffea",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "cmp dword [0x08004d06], 0",
            "mov r12d, 0xffffffea",
            "js 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2aa",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004d4f], 0",
            "mov r12d, 0xffffffea",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x286",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004d98], 0",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2b2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004ddb], 0",
            "mov r12d, 0xffffffea",
            "js release_user_pages",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "add rax, 0x4b8",
            "mov r9d, esi",
            "mov r8d, 0x241",
            "mov rsi, rax",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [r15 + 0x44], 0",
            "je 0x8004e34",
            "cmp dword [r15 + 0x40], 0",
            "je 0x800464c",
            "cmp dword [0x08004e3b], 0",
            "js 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x270",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004e84], 0",
            "mov r12d, 0xfffffff4",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x28c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r10d",
            "mov r8d, 0x8a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004f0c], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x25a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [0x08004f52], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x250",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004c16",
            "cmp dword [0x08004fd1], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x99",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x0800501a], 0",
            "jle 0x8004a20",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x57",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x79",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov eax, dword [r15 + 0xb4]",
            "mov edx, eax",
            "sub rdx, 1",
            "jmp 0x800467c",
            "cmp dword [0x080050ac], 0",
            "mov r12d, 0xfffffff2",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x292",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x47",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity"
        ]
    },
    "unk.0x8004aab": {
        "function_address": "0x08004aab",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x88",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r15, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [r15 + 0x88]",
            "test eax, eax",
            "je 0x8004427",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "lea r13, [rbx + 0x50]",
            "cmovle edx, dword [rbx + 0x4c]",
            "lea r14, [r15 + 0x78]",
            "mov eax, 0x10",
            "mov rsi, r13",
            "mov rdi, r14",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "test byte [rbx + 6], 0x20",
            "jne 0x8004640",
            "cmp dword [rbx + 0xc], 0x1000",
            "ja cryptodev_verbosity",
            "xor esi, esi",
            "mov edi, 0xd0",
            "call __get_free_pages",
            "test rax, rax",
            "mov qword [rbp - 0x70], rax",
            "je cryptodev_verbosity",
            "mov rsi, qword [rbx + 0x10]",
            "test rsi, rsi",
            "je 0x8004a08",
            "mov edx, dword [rbx + 0xc]",
            "xor r11d, r11d",
            "test edx, edx",
            "jne _copy_from_user",
            "test byte [rbx + 6], 0x10",
            "je 0x80044b3",
            "mov r12d, dword [r15 + 0x40]",
            "test r12d, r12d",
            "je 0x80047a0",
            "mov r10d, dword [r15 + 0x38]",
            "test r10d, r10d",
            "je cryptodev_verbosity",
            "cmp qword [r15 + 0x40], 0",
            "je cryptodev_verbosity",
            "lea rax, [rbp - 0x60]",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, dword [rbx + 8]",
            "mov rsi, qword [rbx + 0x18]",
            "mov r9, qword [rbx + 0x60]",
            "mov rdi, r15",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x58]",
            "mov r8d, dword [rbx + 0x48]",
            "mov qword [rbp - 0x78], r11",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x68]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "mov r12d, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r9d, dword [r15 + 0x38]",
            "mov eax, dword [rbx + 8]",
            "mov rdx, qword [rbp - 0x60]",
            "mov r12, qword [rbp - 0x58]",
            "mov ecx, dword [rbx + 0xc]",
            "test r9d, r9d",
            "mov dword [rbp - 0x64], eax",
            "je 0x8004c66",
            "mov r8d, dword [r15 + 0x40]",
            "test r8d, r8d",
            "je 0x8004c66",
            "mov rax, qword [r15 + 0x60]",
            "mov eax, dword [rax + 0x3c]",
            "mov esi, dword [rbx + 0x30]",
            "cmp esi, eax",
            "ja cryptodev_verbosity",
            "test esi, esi",
            "je 0x8004740",
            "mov edi, dword [r15 + 0x40]",
            "test edi, edi",
            "je 0x8004585",
            "mov rdi, qword [r15 + 0x60]",
            "mov qword [rbp - 0x88], rdx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call crypto_aead_setauthsize",
            "mov rdx, qword [rbp - 0x88]",
            "mov ecx, dword [rbp - 0x80]",
            "mov r11, qword [rbp - 0x78]",
            "mov rax, qword [r15 + 0x68]",
            "test ecx, ecx",
            "mov esi, 0",
            "cmove r11, rsi",
            "mov r8d, dword [rbp - 0x64]",
            "lea rdi, [r15 + 0x38]",
            "mov rsi, r12",
            "mov dword [rax + 0x30], ecx",
            "mov qword [rax + 0x40], r11",
            "cmp word [rbx + 4], 0",
            "mov rcx, r8",
            "mov qword [rbp - 0x78], r8",
            "jne cryptodev_cipher_decrypt",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbp - 0x64]",
            "add r8, qword [rbx + 0x20]",
            "add eax, dword [rbx + 0x30]",
            "mov qword [rbx + 0x28], r8",
            "mov dword [rbx + 0x48], eax",
            "mov rdi, r15",
            "call release_user_pages",
            "mov rdi, qword [rbp - 0x70]",
            "xor esi, esi",
            "call free_pages",
            "test r12d, r12d",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x4c]",
            "mov rsi, r14",
            "mov rdi, r13",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "lea rdi, [r15 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x88",
            "mov eax, r12d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, dword [r15 + 0x38]",
            "test eax, eax",
            "jne 0x8004e22",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004970",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004689",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x800467c",
            "cmp dword [0x08004676], 1",
            "jg current_task",
            "mov r9, qword [rbx + 0x10]",
            "test r9, rdx",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [rbx + 0xc]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rdx, qword [rbx + 0x10]",
            "mov r10, qword [rbx + 0x18]",
            "sub r10, rdx",
            "cmp r10d, 0x100",
            "jbe 0x80048b0",
            "mov eax, dword [0x080046bd]",
            "test eax, eax",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "cmp dword [0x080046d2], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2ea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x30]",
            "mov edx, dword [rbp - 0x64]",
            "sub r8, rax",
            "add r8, qword [rbx + 0x20]",
            "sub edx, eax",
            "mov dword [rbx + 0x48], edx",
            "mov qword [rbx + 0x28], r8",
            "jmp release_user_pages",
            "mov dword [rbx + 0x30], eax",
            "jmp 0x8004585",
            "cmp dword [0x08004757], 1",
            "jle 0x8004689",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "add eax, 1",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r8d, 0x7c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004689",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004bfe",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004810",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x8004810",
            "cmp dword [0x080047ca], 1",
            "jle 0x8004810",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x43",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x78], r11",
            "call printk",
            "mov r11, qword [rbp - 0x78]",
            "nop dword [rax + rax]",
            "movsxd rax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, 1",
            "mov dword [r15 + 0xc0], 0",
            "mov rdi, r15",
            "mov rsi, rcx",
            "lea rax, [rcx + rax - 1]",
            "shr rsi, 0xc",
            "sub edx, esi",
            "shr rax, 0xc",
            "lea ecx, [rdx + rax]",
            "mov dword [r15 + 0xbc], ecx",
            "mov esi, ecx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov ecx, dword [rbp - 0x80]",
            "je 0x8004b46",
            "mov esi, dword [0x08004871]",
            "test esi, esi",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2a0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rcx, rdx",
            "lea rax, [rdx + rax - 1]",
            "mov esi, 1",
            "shr rcx, 0xc",
            "mov rdi, r15",
            "mov qword [rbp - 0x80], r10",
            "sub esi, ecx",
            "shr rax, 0xc",
            "lea r11d, [rsi + rax]",
            "lea esi, [r11 + r11]",
            "mov dword [rbp - 0x78], r11d",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "je 0x8004a70",
            "mov r14d, dword [0x080048f9]",
            "test r14d, r14d",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x92",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rdi, qword [rbp - 0x70]",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "mov edx, dword [rbx + 0xc]",
            "mov rsi, qword [rbp - 0x70]",
            "lea rdi, [rbp - 0x50]",
            "call sg_init_one",
            "lea r11, [rbp - 0x50]",
            "jmp 0x80044a0",
            "cmp qword [rbx + 0x10], 0",
            "jne 0x8004659",
            "mov eax, dword [0x08004981]",
            "test eax, eax",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x72",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "cmp dword [0x080049c7], 0",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x276",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "xor r11d, r11d",
            "jmp 0x80044a0",
            "mov r11d, dword [0x08004a17]",
            "test r11d, r11d",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x80045e5",
            "cmp dword [0x08004a32], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov ecx, r11d",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0xc]",
            "mov edx, 1",
            "mov rdi, qword [rbx + 0x10]",
            "mov qword [rbp - 0x80], r10",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov dword [rbp - 0x78], r11d",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r12, qword [r15 + 0xd0]",
            "movsxd rdi, r11d",
            "mov dword [r15 + 0xbc], r11d",
            "shl rdi, 5",
            "mov esi, r11d",
            "mov dword [r15 + 0xc0], 0",
            "mov qword [rbp - 0x80], r10",
            "add rdi, r12",
            "mov qword [rbp - 0x60], rdi",
            "call sg_init_table",
            "mov edx, dword [rbx + 0xc]",
            "mov rdi, qword [r15 + 0xd0]",
            "mov rsi, qword [rbp - 0x60]",
            "call sg_copy",
            "mov r10, qword [rbp - 0x80]",
            "mov rdi, qword [rbp - 0x60]",
            "mov esi, r10d",
            "call sg_advance",
            "test rax, rax",
            "mov r8, rax",
            "mov qword [rbp - 0x60], rax",
            "je release_user_pages",
            "mov ecx, dword [rbx + 0xc]",
            "mov r9d, dword [rbx + 8]",
            "mov rdx, r12",
            "mov rdi, r15",
            "mov rsi, rbx",
            "call sym.srtp_auth_n_crypt",
            "mov rdi, r15",
            "mov r12d, eax",
            "call release_user_pages",
            "jmp 0x80045f0",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov edx, 1",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0x48]",
            "mov rdi, qword [rbx + 0x20]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r8, qword [r15 + 0xd0]",
            "mov ecx, dword [rbx + 0xc]",
            "mov rdx, r11",
            "mov r9d, dword [rbx + 8]",
            "mov rsi, rbx",
            "mov rdi, r15",
            "mov qword [rbp - 0x60], r8",
            "call sym.tls_auth_n_crypt",
            "mov r12d, eax",
            "jmp release_user_pages",
            "mov rdi, r15",
            "call release_user_pages",
            "mov r13d, dword [0x08004bb9]",
            "test r13d, r13d",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov r12d, 0xffffffea",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004c10], 0",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x8004628",
            "cmp dword [0x08004c28], 0",
            "jle 0x8004c16",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp 0x8004628",
            "xor eax, eax",
            "jmp 0x8004545",
            "cmp dword [0x08004c74], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x80",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004cbd], 0",
            "mov r12d, 0xffffffea",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "cmp dword [0x08004d06], 0",
            "mov r12d, 0xffffffea",
            "js 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2aa",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004d4f], 0",
            "mov r12d, 0xffffffea",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x286",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004d98], 0",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2b2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004ddb], 0",
            "mov r12d, 0xffffffea",
            "js release_user_pages",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "add rax, 0x4b8",
            "mov r9d, esi",
            "mov r8d, 0x241",
            "mov rsi, rax",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [r15 + 0x44], 0",
            "je 0x8004e34",
            "cmp dword [r15 + 0x40], 0",
            "je 0x800464c",
            "cmp dword [0x08004e3b], 0",
            "js 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x270",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004e84], 0",
            "mov r12d, 0xfffffff4",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x28c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r10d",
            "mov r8d, 0x8a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004f0c], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x25a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [0x08004f52], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x250",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004c16",
            "cmp dword [0x08004fd1], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x99",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x0800501a], 0",
            "jle 0x8004a20",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x57",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x79",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov eax, dword [r15 + 0xb4]",
            "mov edx, eax",
            "sub rdx, 1",
            "jmp 0x800467c",
            "cmp dword [0x080050ac], 0",
            "mov r12d, 0xfffffff2",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x292",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x47",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity"
        ]
    },
    "unk.0x8004aee": {
        "function_address": "0x08004aee",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x88",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r15, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [r15 + 0x88]",
            "test eax, eax",
            "je 0x8004427",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "lea r13, [rbx + 0x50]",
            "cmovle edx, dword [rbx + 0x4c]",
            "lea r14, [r15 + 0x78]",
            "mov eax, 0x10",
            "mov rsi, r13",
            "mov rdi, r14",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "test byte [rbx + 6], 0x20",
            "jne 0x8004640",
            "cmp dword [rbx + 0xc], 0x1000",
            "ja cryptodev_verbosity",
            "xor esi, esi",
            "mov edi, 0xd0",
            "call __get_free_pages",
            "test rax, rax",
            "mov qword [rbp - 0x70], rax",
            "je cryptodev_verbosity",
            "mov rsi, qword [rbx + 0x10]",
            "test rsi, rsi",
            "je 0x8004a08",
            "mov edx, dword [rbx + 0xc]",
            "xor r11d, r11d",
            "test edx, edx",
            "jne _copy_from_user",
            "test byte [rbx + 6], 0x10",
            "je 0x80044b3",
            "mov r12d, dword [r15 + 0x40]",
            "test r12d, r12d",
            "je 0x80047a0",
            "mov r10d, dword [r15 + 0x38]",
            "test r10d, r10d",
            "je cryptodev_verbosity",
            "cmp qword [r15 + 0x40], 0",
            "je cryptodev_verbosity",
            "lea rax, [rbp - 0x60]",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, dword [rbx + 8]",
            "mov rsi, qword [rbx + 0x18]",
            "mov r9, qword [rbx + 0x60]",
            "mov rdi, r15",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x58]",
            "mov r8d, dword [rbx + 0x48]",
            "mov qword [rbp - 0x78], r11",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x68]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "mov r12d, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r9d, dword [r15 + 0x38]",
            "mov eax, dword [rbx + 8]",
            "mov rdx, qword [rbp - 0x60]",
            "mov r12, qword [rbp - 0x58]",
            "mov ecx, dword [rbx + 0xc]",
            "test r9d, r9d",
            "mov dword [rbp - 0x64], eax",
            "je 0x8004c66",
            "mov r8d, dword [r15 + 0x40]",
            "test r8d, r8d",
            "je 0x8004c66",
            "mov rax, qword [r15 + 0x60]",
            "mov eax, dword [rax + 0x3c]",
            "mov esi, dword [rbx + 0x30]",
            "cmp esi, eax",
            "ja cryptodev_verbosity",
            "test esi, esi",
            "je 0x8004740",
            "mov edi, dword [r15 + 0x40]",
            "test edi, edi",
            "je 0x8004585",
            "mov rdi, qword [r15 + 0x60]",
            "mov qword [rbp - 0x88], rdx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call crypto_aead_setauthsize",
            "mov rdx, qword [rbp - 0x88]",
            "mov ecx, dword [rbp - 0x80]",
            "mov r11, qword [rbp - 0x78]",
            "mov rax, qword [r15 + 0x68]",
            "test ecx, ecx",
            "mov esi, 0",
            "cmove r11, rsi",
            "mov r8d, dword [rbp - 0x64]",
            "lea rdi, [r15 + 0x38]",
            "mov rsi, r12",
            "mov dword [rax + 0x30], ecx",
            "mov qword [rax + 0x40], r11",
            "cmp word [rbx + 4], 0",
            "mov rcx, r8",
            "mov qword [rbp - 0x78], r8",
            "jne cryptodev_cipher_decrypt",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbp - 0x64]",
            "add r8, qword [rbx + 0x20]",
            "add eax, dword [rbx + 0x30]",
            "mov qword [rbx + 0x28], r8",
            "mov dword [rbx + 0x48], eax",
            "mov rdi, r15",
            "call release_user_pages",
            "mov rdi, qword [rbp - 0x70]",
            "xor esi, esi",
            "call free_pages",
            "test r12d, r12d",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x4c]",
            "mov rsi, r14",
            "mov rdi, r13",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "lea rdi, [r15 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x88",
            "mov eax, r12d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, dword [r15 + 0x38]",
            "test eax, eax",
            "jne 0x8004e22",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004970",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004689",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x800467c",
            "cmp dword [0x08004676], 1",
            "jg current_task",
            "mov r9, qword [rbx + 0x10]",
            "test r9, rdx",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [rbx + 0xc]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rdx, qword [rbx + 0x10]",
            "mov r10, qword [rbx + 0x18]",
            "sub r10, rdx",
            "cmp r10d, 0x100",
            "jbe 0x80048b0",
            "mov eax, dword [0x080046bd]",
            "test eax, eax",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "cmp dword [0x080046d2], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2ea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x30]",
            "mov edx, dword [rbp - 0x64]",
            "sub r8, rax",
            "add r8, qword [rbx + 0x20]",
            "sub edx, eax",
            "mov dword [rbx + 0x48], edx",
            "mov qword [rbx + 0x28], r8",
            "jmp release_user_pages",
            "mov dword [rbx + 0x30], eax",
            "jmp 0x8004585",
            "cmp dword [0x08004757], 1",
            "jle 0x8004689",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "add eax, 1",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r8d, 0x7c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004689",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004bfe",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004810",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x8004810",
            "cmp dword [0x080047ca], 1",
            "jle 0x8004810",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x43",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x78], r11",
            "call printk",
            "mov r11, qword [rbp - 0x78]",
            "nop dword [rax + rax]",
            "movsxd rax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, 1",
            "mov dword [r15 + 0xc0], 0",
            "mov rdi, r15",
            "mov rsi, rcx",
            "lea rax, [rcx + rax - 1]",
            "shr rsi, 0xc",
            "sub edx, esi",
            "shr rax, 0xc",
            "lea ecx, [rdx + rax]",
            "mov dword [r15 + 0xbc], ecx",
            "mov esi, ecx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov ecx, dword [rbp - 0x80]",
            "je 0x8004b46",
            "mov esi, dword [0x08004871]",
            "test esi, esi",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2a0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rcx, rdx",
            "lea rax, [rdx + rax - 1]",
            "mov esi, 1",
            "shr rcx, 0xc",
            "mov rdi, r15",
            "mov qword [rbp - 0x80], r10",
            "sub esi, ecx",
            "shr rax, 0xc",
            "lea r11d, [rsi + rax]",
            "lea esi, [r11 + r11]",
            "mov dword [rbp - 0x78], r11d",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "je 0x8004a70",
            "mov r14d, dword [0x080048f9]",
            "test r14d, r14d",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x92",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rdi, qword [rbp - 0x70]",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "mov edx, dword [rbx + 0xc]",
            "mov rsi, qword [rbp - 0x70]",
            "lea rdi, [rbp - 0x50]",
            "call sg_init_one",
            "lea r11, [rbp - 0x50]",
            "jmp 0x80044a0",
            "cmp qword [rbx + 0x10], 0",
            "jne 0x8004659",
            "mov eax, dword [0x08004981]",
            "test eax, eax",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x72",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "cmp dword [0x080049c7], 0",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x276",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "xor r11d, r11d",
            "jmp 0x80044a0",
            "mov r11d, dword [0x08004a17]",
            "test r11d, r11d",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x80045e5",
            "cmp dword [0x08004a32], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov ecx, r11d",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0xc]",
            "mov edx, 1",
            "mov rdi, qword [rbx + 0x10]",
            "mov qword [rbp - 0x80], r10",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov dword [rbp - 0x78], r11d",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r12, qword [r15 + 0xd0]",
            "movsxd rdi, r11d",
            "mov dword [r15 + 0xbc], r11d",
            "shl rdi, 5",
            "mov esi, r11d",
            "mov dword [r15 + 0xc0], 0",
            "mov qword [rbp - 0x80], r10",
            "add rdi, r12",
            "mov qword [rbp - 0x60], rdi",
            "call sg_init_table",
            "mov edx, dword [rbx + 0xc]",
            "mov rdi, qword [r15 + 0xd0]",
            "mov rsi, qword [rbp - 0x60]",
            "call sg_copy",
            "mov r10, qword [rbp - 0x80]",
            "mov rdi, qword [rbp - 0x60]",
            "mov esi, r10d",
            "call sg_advance",
            "test rax, rax",
            "mov r8, rax",
            "mov qword [rbp - 0x60], rax",
            "je release_user_pages",
            "mov ecx, dword [rbx + 0xc]",
            "mov r9d, dword [rbx + 8]",
            "mov rdx, r12",
            "mov rdi, r15",
            "mov rsi, rbx",
            "call sym.srtp_auth_n_crypt",
            "mov rdi, r15",
            "mov r12d, eax",
            "call release_user_pages",
            "jmp 0x80045f0",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov edx, 1",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0x48]",
            "mov rdi, qword [rbx + 0x20]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r8, qword [r15 + 0xd0]",
            "mov ecx, dword [rbx + 0xc]",
            "mov rdx, r11",
            "mov r9d, dword [rbx + 8]",
            "mov rsi, rbx",
            "mov rdi, r15",
            "mov qword [rbp - 0x60], r8",
            "call sym.tls_auth_n_crypt",
            "mov r12d, eax",
            "jmp release_user_pages",
            "mov rdi, r15",
            "call release_user_pages",
            "mov r13d, dword [0x08004bb9]",
            "test r13d, r13d",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov r12d, 0xffffffea",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004c10], 0",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x8004628",
            "cmp dword [0x08004c28], 0",
            "jle 0x8004c16",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp 0x8004628",
            "xor eax, eax",
            "jmp 0x8004545",
            "cmp dword [0x08004c74], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x80",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004cbd], 0",
            "mov r12d, 0xffffffea",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "cmp dword [0x08004d06], 0",
            "mov r12d, 0xffffffea",
            "js 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2aa",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004d4f], 0",
            "mov r12d, 0xffffffea",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x286",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004d98], 0",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2b2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004ddb], 0",
            "mov r12d, 0xffffffea",
            "js release_user_pages",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "add rax, 0x4b8",
            "mov r9d, esi",
            "mov r8d, 0x241",
            "mov rsi, rax",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [r15 + 0x44], 0",
            "je 0x8004e34",
            "cmp dword [r15 + 0x40], 0",
            "je 0x800464c",
            "cmp dword [0x08004e3b], 0",
            "js 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x270",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004e84], 0",
            "mov r12d, 0xfffffff4",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x28c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r10d",
            "mov r8d, 0x8a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004f0c], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x25a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [0x08004f52], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x250",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004c16",
            "cmp dword [0x08004fd1], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x99",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x0800501a], 0",
            "jle 0x8004a20",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x57",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x79",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov eax, dword [r15 + 0xb4]",
            "mov edx, eax",
            "sub rdx, 1",
            "jmp 0x800467c",
            "cmp dword [0x080050ac], 0",
            "mov r12d, 0xfffffff2",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x292",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x47",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity"
        ]
    },
    "unk.0x8004b01": {
        "function_address": "0x08004b01",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x88",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r15, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [r15 + 0x88]",
            "test eax, eax",
            "je 0x8004427",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "lea r13, [rbx + 0x50]",
            "cmovle edx, dword [rbx + 0x4c]",
            "lea r14, [r15 + 0x78]",
            "mov eax, 0x10",
            "mov rsi, r13",
            "mov rdi, r14",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "test byte [rbx + 6], 0x20",
            "jne 0x8004640",
            "cmp dword [rbx + 0xc], 0x1000",
            "ja cryptodev_verbosity",
            "xor esi, esi",
            "mov edi, 0xd0",
            "call __get_free_pages",
            "test rax, rax",
            "mov qword [rbp - 0x70], rax",
            "je cryptodev_verbosity",
            "mov rsi, qword [rbx + 0x10]",
            "test rsi, rsi",
            "je 0x8004a08",
            "mov edx, dword [rbx + 0xc]",
            "xor r11d, r11d",
            "test edx, edx",
            "jne _copy_from_user",
            "test byte [rbx + 6], 0x10",
            "je 0x80044b3",
            "mov r12d, dword [r15 + 0x40]",
            "test r12d, r12d",
            "je 0x80047a0",
            "mov r10d, dword [r15 + 0x38]",
            "test r10d, r10d",
            "je cryptodev_verbosity",
            "cmp qword [r15 + 0x40], 0",
            "je cryptodev_verbosity",
            "lea rax, [rbp - 0x60]",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, dword [rbx + 8]",
            "mov rsi, qword [rbx + 0x18]",
            "mov r9, qword [rbx + 0x60]",
            "mov rdi, r15",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x58]",
            "mov r8d, dword [rbx + 0x48]",
            "mov qword [rbp - 0x78], r11",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x68]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "mov r12d, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r9d, dword [r15 + 0x38]",
            "mov eax, dword [rbx + 8]",
            "mov rdx, qword [rbp - 0x60]",
            "mov r12, qword [rbp - 0x58]",
            "mov ecx, dword [rbx + 0xc]",
            "test r9d, r9d",
            "mov dword [rbp - 0x64], eax",
            "je 0x8004c66",
            "mov r8d, dword [r15 + 0x40]",
            "test r8d, r8d",
            "je 0x8004c66",
            "mov rax, qword [r15 + 0x60]",
            "mov eax, dword [rax + 0x3c]",
            "mov esi, dword [rbx + 0x30]",
            "cmp esi, eax",
            "ja cryptodev_verbosity",
            "test esi, esi",
            "je 0x8004740",
            "mov edi, dword [r15 + 0x40]",
            "test edi, edi",
            "je 0x8004585",
            "mov rdi, qword [r15 + 0x60]",
            "mov qword [rbp - 0x88], rdx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call crypto_aead_setauthsize",
            "mov rdx, qword [rbp - 0x88]",
            "mov ecx, dword [rbp - 0x80]",
            "mov r11, qword [rbp - 0x78]",
            "mov rax, qword [r15 + 0x68]",
            "test ecx, ecx",
            "mov esi, 0",
            "cmove r11, rsi",
            "mov r8d, dword [rbp - 0x64]",
            "lea rdi, [r15 + 0x38]",
            "mov rsi, r12",
            "mov dword [rax + 0x30], ecx",
            "mov qword [rax + 0x40], r11",
            "cmp word [rbx + 4], 0",
            "mov rcx, r8",
            "mov qword [rbp - 0x78], r8",
            "jne cryptodev_cipher_decrypt",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbp - 0x64]",
            "add r8, qword [rbx + 0x20]",
            "add eax, dword [rbx + 0x30]",
            "mov qword [rbx + 0x28], r8",
            "mov dword [rbx + 0x48], eax",
            "mov rdi, r15",
            "call release_user_pages",
            "mov rdi, qword [rbp - 0x70]",
            "xor esi, esi",
            "call free_pages",
            "test r12d, r12d",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x4c]",
            "mov rsi, r14",
            "mov rdi, r13",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "lea rdi, [r15 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x88",
            "mov eax, r12d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, dword [r15 + 0x38]",
            "test eax, eax",
            "jne 0x8004e22",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004970",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004689",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x800467c",
            "cmp dword [0x08004676], 1",
            "jg current_task",
            "mov r9, qword [rbx + 0x10]",
            "test r9, rdx",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [rbx + 0xc]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rdx, qword [rbx + 0x10]",
            "mov r10, qword [rbx + 0x18]",
            "sub r10, rdx",
            "cmp r10d, 0x100",
            "jbe 0x80048b0",
            "mov eax, dword [0x080046bd]",
            "test eax, eax",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "cmp dword [0x080046d2], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2ea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x30]",
            "mov edx, dword [rbp - 0x64]",
            "sub r8, rax",
            "add r8, qword [rbx + 0x20]",
            "sub edx, eax",
            "mov dword [rbx + 0x48], edx",
            "mov qword [rbx + 0x28], r8",
            "jmp release_user_pages",
            "mov dword [rbx + 0x30], eax",
            "jmp 0x8004585",
            "cmp dword [0x08004757], 1",
            "jle 0x8004689",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "add eax, 1",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r8d, 0x7c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004689",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004bfe",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004810",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x8004810",
            "cmp dword [0x080047ca], 1",
            "jle 0x8004810",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x43",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x78], r11",
            "call printk",
            "mov r11, qword [rbp - 0x78]",
            "nop dword [rax + rax]",
            "movsxd rax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, 1",
            "mov dword [r15 + 0xc0], 0",
            "mov rdi, r15",
            "mov rsi, rcx",
            "lea rax, [rcx + rax - 1]",
            "shr rsi, 0xc",
            "sub edx, esi",
            "shr rax, 0xc",
            "lea ecx, [rdx + rax]",
            "mov dword [r15 + 0xbc], ecx",
            "mov esi, ecx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov ecx, dword [rbp - 0x80]",
            "je 0x8004b46",
            "mov esi, dword [0x08004871]",
            "test esi, esi",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2a0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rcx, rdx",
            "lea rax, [rdx + rax - 1]",
            "mov esi, 1",
            "shr rcx, 0xc",
            "mov rdi, r15",
            "mov qword [rbp - 0x80], r10",
            "sub esi, ecx",
            "shr rax, 0xc",
            "lea r11d, [rsi + rax]",
            "lea esi, [r11 + r11]",
            "mov dword [rbp - 0x78], r11d",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "je 0x8004a70",
            "mov r14d, dword [0x080048f9]",
            "test r14d, r14d",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x92",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rdi, qword [rbp - 0x70]",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "mov edx, dword [rbx + 0xc]",
            "mov rsi, qword [rbp - 0x70]",
            "lea rdi, [rbp - 0x50]",
            "call sg_init_one",
            "lea r11, [rbp - 0x50]",
            "jmp 0x80044a0",
            "cmp qword [rbx + 0x10], 0",
            "jne 0x8004659",
            "mov eax, dword [0x08004981]",
            "test eax, eax",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x72",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "cmp dword [0x080049c7], 0",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x276",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "xor r11d, r11d",
            "jmp 0x80044a0",
            "mov r11d, dword [0x08004a17]",
            "test r11d, r11d",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x80045e5",
            "cmp dword [0x08004a32], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov ecx, r11d",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0xc]",
            "mov edx, 1",
            "mov rdi, qword [rbx + 0x10]",
            "mov qword [rbp - 0x80], r10",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov dword [rbp - 0x78], r11d",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r12, qword [r15 + 0xd0]",
            "movsxd rdi, r11d",
            "mov dword [r15 + 0xbc], r11d",
            "shl rdi, 5",
            "mov esi, r11d",
            "mov dword [r15 + 0xc0], 0",
            "mov qword [rbp - 0x80], r10",
            "add rdi, r12",
            "mov qword [rbp - 0x60], rdi",
            "call sg_init_table",
            "mov edx, dword [rbx + 0xc]",
            "mov rdi, qword [r15 + 0xd0]",
            "mov rsi, qword [rbp - 0x60]",
            "call sg_copy",
            "mov r10, qword [rbp - 0x80]",
            "mov rdi, qword [rbp - 0x60]",
            "mov esi, r10d",
            "call sg_advance",
            "test rax, rax",
            "mov r8, rax",
            "mov qword [rbp - 0x60], rax",
            "je release_user_pages",
            "mov ecx, dword [rbx + 0xc]",
            "mov r9d, dword [rbx + 8]",
            "mov rdx, r12",
            "mov rdi, r15",
            "mov rsi, rbx",
            "call sym.srtp_auth_n_crypt",
            "mov rdi, r15",
            "mov r12d, eax",
            "call release_user_pages",
            "jmp 0x80045f0",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov edx, 1",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0x48]",
            "mov rdi, qword [rbx + 0x20]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r8, qword [r15 + 0xd0]",
            "mov ecx, dword [rbx + 0xc]",
            "mov rdx, r11",
            "mov r9d, dword [rbx + 8]",
            "mov rsi, rbx",
            "mov rdi, r15",
            "mov qword [rbp - 0x60], r8",
            "call sym.tls_auth_n_crypt",
            "mov r12d, eax",
            "jmp release_user_pages",
            "mov rdi, r15",
            "call release_user_pages",
            "mov r13d, dword [0x08004bb9]",
            "test r13d, r13d",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov r12d, 0xffffffea",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004c10], 0",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x8004628",
            "cmp dword [0x08004c28], 0",
            "jle 0x8004c16",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp 0x8004628",
            "xor eax, eax",
            "jmp 0x8004545",
            "cmp dword [0x08004c74], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x80",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004cbd], 0",
            "mov r12d, 0xffffffea",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "cmp dword [0x08004d06], 0",
            "mov r12d, 0xffffffea",
            "js 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2aa",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004d4f], 0",
            "mov r12d, 0xffffffea",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x286",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004d98], 0",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2b2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004ddb], 0",
            "mov r12d, 0xffffffea",
            "js release_user_pages",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "add rax, 0x4b8",
            "mov r9d, esi",
            "mov r8d, 0x241",
            "mov rsi, rax",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [r15 + 0x44], 0",
            "je 0x8004e34",
            "cmp dword [r15 + 0x40], 0",
            "je 0x800464c",
            "cmp dword [0x08004e3b], 0",
            "js 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x270",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004e84], 0",
            "mov r12d, 0xfffffff4",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x28c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r10d",
            "mov r8d, 0x8a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004f0c], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x25a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [0x08004f52], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x250",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004c16",
            "cmp dword [0x08004fd1], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x99",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x0800501a], 0",
            "jle 0x8004a20",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x57",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x79",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov eax, dword [r15 + 0xb4]",
            "mov edx, eax",
            "sub rdx, 1",
            "jmp 0x800467c",
            "cmp dword [0x080050ac], 0",
            "mov r12d, 0xfffffff2",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x292",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x47",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity"
        ]
    },
    "unk.0x8004b11": {
        "function_address": "0x08004b11",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x88",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r15, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [r15 + 0x88]",
            "test eax, eax",
            "je 0x8004427",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "lea r13, [rbx + 0x50]",
            "cmovle edx, dword [rbx + 0x4c]",
            "lea r14, [r15 + 0x78]",
            "mov eax, 0x10",
            "mov rsi, r13",
            "mov rdi, r14",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "test byte [rbx + 6], 0x20",
            "jne 0x8004640",
            "cmp dword [rbx + 0xc], 0x1000",
            "ja cryptodev_verbosity",
            "xor esi, esi",
            "mov edi, 0xd0",
            "call __get_free_pages",
            "test rax, rax",
            "mov qword [rbp - 0x70], rax",
            "je cryptodev_verbosity",
            "mov rsi, qword [rbx + 0x10]",
            "test rsi, rsi",
            "je 0x8004a08",
            "mov edx, dword [rbx + 0xc]",
            "xor r11d, r11d",
            "test edx, edx",
            "jne _copy_from_user",
            "test byte [rbx + 6], 0x10",
            "je 0x80044b3",
            "mov r12d, dword [r15 + 0x40]",
            "test r12d, r12d",
            "je 0x80047a0",
            "mov r10d, dword [r15 + 0x38]",
            "test r10d, r10d",
            "je cryptodev_verbosity",
            "cmp qword [r15 + 0x40], 0",
            "je cryptodev_verbosity",
            "lea rax, [rbp - 0x60]",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, dword [rbx + 8]",
            "mov rsi, qword [rbx + 0x18]",
            "mov r9, qword [rbx + 0x60]",
            "mov rdi, r15",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x58]",
            "mov r8d, dword [rbx + 0x48]",
            "mov qword [rbp - 0x78], r11",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x68]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "mov r12d, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r9d, dword [r15 + 0x38]",
            "mov eax, dword [rbx + 8]",
            "mov rdx, qword [rbp - 0x60]",
            "mov r12, qword [rbp - 0x58]",
            "mov ecx, dword [rbx + 0xc]",
            "test r9d, r9d",
            "mov dword [rbp - 0x64], eax",
            "je 0x8004c66",
            "mov r8d, dword [r15 + 0x40]",
            "test r8d, r8d",
            "je 0x8004c66",
            "mov rax, qword [r15 + 0x60]",
            "mov eax, dword [rax + 0x3c]",
            "mov esi, dword [rbx + 0x30]",
            "cmp esi, eax",
            "ja cryptodev_verbosity",
            "test esi, esi",
            "je 0x8004740",
            "mov edi, dword [r15 + 0x40]",
            "test edi, edi",
            "je 0x8004585",
            "mov rdi, qword [r15 + 0x60]",
            "mov qword [rbp - 0x88], rdx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call crypto_aead_setauthsize",
            "mov rdx, qword [rbp - 0x88]",
            "mov ecx, dword [rbp - 0x80]",
            "mov r11, qword [rbp - 0x78]",
            "mov rax, qword [r15 + 0x68]",
            "test ecx, ecx",
            "mov esi, 0",
            "cmove r11, rsi",
            "mov r8d, dword [rbp - 0x64]",
            "lea rdi, [r15 + 0x38]",
            "mov rsi, r12",
            "mov dword [rax + 0x30], ecx",
            "mov qword [rax + 0x40], r11",
            "cmp word [rbx + 4], 0",
            "mov rcx, r8",
            "mov qword [rbp - 0x78], r8",
            "jne cryptodev_cipher_decrypt",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbp - 0x64]",
            "add r8, qword [rbx + 0x20]",
            "add eax, dword [rbx + 0x30]",
            "mov qword [rbx + 0x28], r8",
            "mov dword [rbx + 0x48], eax",
            "mov rdi, r15",
            "call release_user_pages",
            "mov rdi, qword [rbp - 0x70]",
            "xor esi, esi",
            "call free_pages",
            "test r12d, r12d",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x4c]",
            "mov rsi, r14",
            "mov rdi, r13",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "lea rdi, [r15 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x88",
            "mov eax, r12d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, dword [r15 + 0x38]",
            "test eax, eax",
            "jne 0x8004e22",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004970",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004689",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x800467c",
            "cmp dword [0x08004676], 1",
            "jg current_task",
            "mov r9, qword [rbx + 0x10]",
            "test r9, rdx",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [rbx + 0xc]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rdx, qword [rbx + 0x10]",
            "mov r10, qword [rbx + 0x18]",
            "sub r10, rdx",
            "cmp r10d, 0x100",
            "jbe 0x80048b0",
            "mov eax, dword [0x080046bd]",
            "test eax, eax",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "cmp dword [0x080046d2], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2ea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x30]",
            "mov edx, dword [rbp - 0x64]",
            "sub r8, rax",
            "add r8, qword [rbx + 0x20]",
            "sub edx, eax",
            "mov dword [rbx + 0x48], edx",
            "mov qword [rbx + 0x28], r8",
            "jmp release_user_pages",
            "mov dword [rbx + 0x30], eax",
            "jmp 0x8004585",
            "cmp dword [0x08004757], 1",
            "jle 0x8004689",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "add eax, 1",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r8d, 0x7c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004689",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004bfe",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004810",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x8004810",
            "cmp dword [0x080047ca], 1",
            "jle 0x8004810",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x43",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x78], r11",
            "call printk",
            "mov r11, qword [rbp - 0x78]",
            "nop dword [rax + rax]",
            "movsxd rax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, 1",
            "mov dword [r15 + 0xc0], 0",
            "mov rdi, r15",
            "mov rsi, rcx",
            "lea rax, [rcx + rax - 1]",
            "shr rsi, 0xc",
            "sub edx, esi",
            "shr rax, 0xc",
            "lea ecx, [rdx + rax]",
            "mov dword [r15 + 0xbc], ecx",
            "mov esi, ecx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov ecx, dword [rbp - 0x80]",
            "je 0x8004b46",
            "mov esi, dword [0x08004871]",
            "test esi, esi",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2a0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rcx, rdx",
            "lea rax, [rdx + rax - 1]",
            "mov esi, 1",
            "shr rcx, 0xc",
            "mov rdi, r15",
            "mov qword [rbp - 0x80], r10",
            "sub esi, ecx",
            "shr rax, 0xc",
            "lea r11d, [rsi + rax]",
            "lea esi, [r11 + r11]",
            "mov dword [rbp - 0x78], r11d",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "je 0x8004a70",
            "mov r14d, dword [0x080048f9]",
            "test r14d, r14d",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x92",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rdi, qword [rbp - 0x70]",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "mov edx, dword [rbx + 0xc]",
            "mov rsi, qword [rbp - 0x70]",
            "lea rdi, [rbp - 0x50]",
            "call sg_init_one",
            "lea r11, [rbp - 0x50]",
            "jmp 0x80044a0",
            "cmp qword [rbx + 0x10], 0",
            "jne 0x8004659",
            "mov eax, dword [0x08004981]",
            "test eax, eax",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x72",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "cmp dword [0x080049c7], 0",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x276",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "xor r11d, r11d",
            "jmp 0x80044a0",
            "mov r11d, dword [0x08004a17]",
            "test r11d, r11d",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x80045e5",
            "cmp dword [0x08004a32], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov ecx, r11d",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0xc]",
            "mov edx, 1",
            "mov rdi, qword [rbx + 0x10]",
            "mov qword [rbp - 0x80], r10",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov dword [rbp - 0x78], r11d",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r12, qword [r15 + 0xd0]",
            "movsxd rdi, r11d",
            "mov dword [r15 + 0xbc], r11d",
            "shl rdi, 5",
            "mov esi, r11d",
            "mov dword [r15 + 0xc0], 0",
            "mov qword [rbp - 0x80], r10",
            "add rdi, r12",
            "mov qword [rbp - 0x60], rdi",
            "call sg_init_table",
            "mov edx, dword [rbx + 0xc]",
            "mov rdi, qword [r15 + 0xd0]",
            "mov rsi, qword [rbp - 0x60]",
            "call sg_copy",
            "mov r10, qword [rbp - 0x80]",
            "mov rdi, qword [rbp - 0x60]",
            "mov esi, r10d",
            "call sg_advance",
            "test rax, rax",
            "mov r8, rax",
            "mov qword [rbp - 0x60], rax",
            "je release_user_pages",
            "mov ecx, dword [rbx + 0xc]",
            "mov r9d, dword [rbx + 8]",
            "mov rdx, r12",
            "mov rdi, r15",
            "mov rsi, rbx",
            "call sym.srtp_auth_n_crypt",
            "mov rdi, r15",
            "mov r12d, eax",
            "call release_user_pages",
            "jmp 0x80045f0",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov edx, 1",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0x48]",
            "mov rdi, qword [rbx + 0x20]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r8, qword [r15 + 0xd0]",
            "mov ecx, dword [rbx + 0xc]",
            "mov rdx, r11",
            "mov r9d, dword [rbx + 8]",
            "mov rsi, rbx",
            "mov rdi, r15",
            "mov qword [rbp - 0x60], r8",
            "call sym.tls_auth_n_crypt",
            "mov r12d, eax",
            "jmp release_user_pages",
            "mov rdi, r15",
            "call release_user_pages",
            "mov r13d, dword [0x08004bb9]",
            "test r13d, r13d",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov r12d, 0xffffffea",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004c10], 0",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x8004628",
            "cmp dword [0x08004c28], 0",
            "jle 0x8004c16",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp 0x8004628",
            "xor eax, eax",
            "jmp 0x8004545",
            "cmp dword [0x08004c74], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x80",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004cbd], 0",
            "mov r12d, 0xffffffea",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "cmp dword [0x08004d06], 0",
            "mov r12d, 0xffffffea",
            "js 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2aa",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004d4f], 0",
            "mov r12d, 0xffffffea",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x286",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004d98], 0",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2b2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004ddb], 0",
            "mov r12d, 0xffffffea",
            "js release_user_pages",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "add rax, 0x4b8",
            "mov r9d, esi",
            "mov r8d, 0x241",
            "mov rsi, rax",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [r15 + 0x44], 0",
            "je 0x8004e34",
            "cmp dword [r15 + 0x40], 0",
            "je 0x800464c",
            "cmp dword [0x08004e3b], 0",
            "js 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x270",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004e84], 0",
            "mov r12d, 0xfffffff4",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x28c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r10d",
            "mov r8d, 0x8a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004f0c], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x25a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [0x08004f52], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x250",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004c16",
            "cmp dword [0x08004fd1], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x99",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x0800501a], 0",
            "jle 0x8004a20",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x57",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x79",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov eax, dword [r15 + 0xb4]",
            "mov edx, eax",
            "sub rdx, 1",
            "jmp 0x800467c",
            "cmp dword [0x080050ac], 0",
            "mov r12d, 0xfffffff2",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x292",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x47",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity"
        ]
    },
    "unk.0x8004b41": {
        "function_address": "0x08004b41",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x88",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r15, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [r15 + 0x88]",
            "test eax, eax",
            "je 0x8004427",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "lea r13, [rbx + 0x50]",
            "cmovle edx, dword [rbx + 0x4c]",
            "lea r14, [r15 + 0x78]",
            "mov eax, 0x10",
            "mov rsi, r13",
            "mov rdi, r14",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "test byte [rbx + 6], 0x20",
            "jne 0x8004640",
            "cmp dword [rbx + 0xc], 0x1000",
            "ja cryptodev_verbosity",
            "xor esi, esi",
            "mov edi, 0xd0",
            "call __get_free_pages",
            "test rax, rax",
            "mov qword [rbp - 0x70], rax",
            "je cryptodev_verbosity",
            "mov rsi, qword [rbx + 0x10]",
            "test rsi, rsi",
            "je 0x8004a08",
            "mov edx, dword [rbx + 0xc]",
            "xor r11d, r11d",
            "test edx, edx",
            "jne _copy_from_user",
            "test byte [rbx + 6], 0x10",
            "je 0x80044b3",
            "mov r12d, dword [r15 + 0x40]",
            "test r12d, r12d",
            "je 0x80047a0",
            "mov r10d, dword [r15 + 0x38]",
            "test r10d, r10d",
            "je cryptodev_verbosity",
            "cmp qword [r15 + 0x40], 0",
            "je cryptodev_verbosity",
            "lea rax, [rbp - 0x60]",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, dword [rbx + 8]",
            "mov rsi, qword [rbx + 0x18]",
            "mov r9, qword [rbx + 0x60]",
            "mov rdi, r15",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x58]",
            "mov r8d, dword [rbx + 0x48]",
            "mov qword [rbp - 0x78], r11",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x68]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "mov r12d, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r9d, dword [r15 + 0x38]",
            "mov eax, dword [rbx + 8]",
            "mov rdx, qword [rbp - 0x60]",
            "mov r12, qword [rbp - 0x58]",
            "mov ecx, dword [rbx + 0xc]",
            "test r9d, r9d",
            "mov dword [rbp - 0x64], eax",
            "je 0x8004c66",
            "mov r8d, dword [r15 + 0x40]",
            "test r8d, r8d",
            "je 0x8004c66",
            "mov rax, qword [r15 + 0x60]",
            "mov eax, dword [rax + 0x3c]",
            "mov esi, dword [rbx + 0x30]",
            "cmp esi, eax",
            "ja cryptodev_verbosity",
            "test esi, esi",
            "je 0x8004740",
            "mov edi, dword [r15 + 0x40]",
            "test edi, edi",
            "je 0x8004585",
            "mov rdi, qword [r15 + 0x60]",
            "mov qword [rbp - 0x88], rdx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call crypto_aead_setauthsize",
            "mov rdx, qword [rbp - 0x88]",
            "mov ecx, dword [rbp - 0x80]",
            "mov r11, qword [rbp - 0x78]",
            "mov rax, qword [r15 + 0x68]",
            "test ecx, ecx",
            "mov esi, 0",
            "cmove r11, rsi",
            "mov r8d, dword [rbp - 0x64]",
            "lea rdi, [r15 + 0x38]",
            "mov rsi, r12",
            "mov dword [rax + 0x30], ecx",
            "mov qword [rax + 0x40], r11",
            "cmp word [rbx + 4], 0",
            "mov rcx, r8",
            "mov qword [rbp - 0x78], r8",
            "jne cryptodev_cipher_decrypt",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbp - 0x64]",
            "add r8, qword [rbx + 0x20]",
            "add eax, dword [rbx + 0x30]",
            "mov qword [rbx + 0x28], r8",
            "mov dword [rbx + 0x48], eax",
            "mov rdi, r15",
            "call release_user_pages",
            "mov rdi, qword [rbp - 0x70]",
            "xor esi, esi",
            "call free_pages",
            "test r12d, r12d",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x4c]",
            "mov rsi, r14",
            "mov rdi, r13",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "lea rdi, [r15 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x88",
            "mov eax, r12d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, dword [r15 + 0x38]",
            "test eax, eax",
            "jne 0x8004e22",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004970",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004689",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x800467c",
            "cmp dword [0x08004676], 1",
            "jg current_task",
            "mov r9, qword [rbx + 0x10]",
            "test r9, rdx",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [rbx + 0xc]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rdx, qword [rbx + 0x10]",
            "mov r10, qword [rbx + 0x18]",
            "sub r10, rdx",
            "cmp r10d, 0x100",
            "jbe 0x80048b0",
            "mov eax, dword [0x080046bd]",
            "test eax, eax",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "cmp dword [0x080046d2], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2ea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x30]",
            "mov edx, dword [rbp - 0x64]",
            "sub r8, rax",
            "add r8, qword [rbx + 0x20]",
            "sub edx, eax",
            "mov dword [rbx + 0x48], edx",
            "mov qword [rbx + 0x28], r8",
            "jmp release_user_pages",
            "mov dword [rbx + 0x30], eax",
            "jmp 0x8004585",
            "cmp dword [0x08004757], 1",
            "jle 0x8004689",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "add eax, 1",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r8d, 0x7c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004689",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004bfe",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004810",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x8004810",
            "cmp dword [0x080047ca], 1",
            "jle 0x8004810",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x43",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x78], r11",
            "call printk",
            "mov r11, qword [rbp - 0x78]",
            "nop dword [rax + rax]",
            "movsxd rax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, 1",
            "mov dword [r15 + 0xc0], 0",
            "mov rdi, r15",
            "mov rsi, rcx",
            "lea rax, [rcx + rax - 1]",
            "shr rsi, 0xc",
            "sub edx, esi",
            "shr rax, 0xc",
            "lea ecx, [rdx + rax]",
            "mov dword [r15 + 0xbc], ecx",
            "mov esi, ecx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov ecx, dword [rbp - 0x80]",
            "je 0x8004b46",
            "mov esi, dword [0x08004871]",
            "test esi, esi",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2a0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rcx, rdx",
            "lea rax, [rdx + rax - 1]",
            "mov esi, 1",
            "shr rcx, 0xc",
            "mov rdi, r15",
            "mov qword [rbp - 0x80], r10",
            "sub esi, ecx",
            "shr rax, 0xc",
            "lea r11d, [rsi + rax]",
            "lea esi, [r11 + r11]",
            "mov dword [rbp - 0x78], r11d",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "je 0x8004a70",
            "mov r14d, dword [0x080048f9]",
            "test r14d, r14d",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x92",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rdi, qword [rbp - 0x70]",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "mov edx, dword [rbx + 0xc]",
            "mov rsi, qword [rbp - 0x70]",
            "lea rdi, [rbp - 0x50]",
            "call sg_init_one",
            "lea r11, [rbp - 0x50]",
            "jmp 0x80044a0",
            "cmp qword [rbx + 0x10], 0",
            "jne 0x8004659",
            "mov eax, dword [0x08004981]",
            "test eax, eax",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x72",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "cmp dword [0x080049c7], 0",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x276",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "xor r11d, r11d",
            "jmp 0x80044a0",
            "mov r11d, dword [0x08004a17]",
            "test r11d, r11d",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x80045e5",
            "cmp dword [0x08004a32], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov ecx, r11d",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0xc]",
            "mov edx, 1",
            "mov rdi, qword [rbx + 0x10]",
            "mov qword [rbp - 0x80], r10",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov dword [rbp - 0x78], r11d",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r12, qword [r15 + 0xd0]",
            "movsxd rdi, r11d",
            "mov dword [r15 + 0xbc], r11d",
            "shl rdi, 5",
            "mov esi, r11d",
            "mov dword [r15 + 0xc0], 0",
            "mov qword [rbp - 0x80], r10",
            "add rdi, r12",
            "mov qword [rbp - 0x60], rdi",
            "call sg_init_table",
            "mov edx, dword [rbx + 0xc]",
            "mov rdi, qword [r15 + 0xd0]",
            "mov rsi, qword [rbp - 0x60]",
            "call sg_copy",
            "mov r10, qword [rbp - 0x80]",
            "mov rdi, qword [rbp - 0x60]",
            "mov esi, r10d",
            "call sg_advance",
            "test rax, rax",
            "mov r8, rax",
            "mov qword [rbp - 0x60], rax",
            "je release_user_pages",
            "mov ecx, dword [rbx + 0xc]",
            "mov r9d, dword [rbx + 8]",
            "mov rdx, r12",
            "mov rdi, r15",
            "mov rsi, rbx",
            "call sym.srtp_auth_n_crypt",
            "mov rdi, r15",
            "mov r12d, eax",
            "call release_user_pages",
            "jmp 0x80045f0",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov edx, 1",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0x48]",
            "mov rdi, qword [rbx + 0x20]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r8, qword [r15 + 0xd0]",
            "mov ecx, dword [rbx + 0xc]",
            "mov rdx, r11",
            "mov r9d, dword [rbx + 8]",
            "mov rsi, rbx",
            "mov rdi, r15",
            "mov qword [rbp - 0x60], r8",
            "call sym.tls_auth_n_crypt",
            "mov r12d, eax",
            "jmp release_user_pages",
            "mov rdi, r15",
            "call release_user_pages",
            "mov r13d, dword [0x08004bb9]",
            "test r13d, r13d",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov r12d, 0xffffffea",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004c10], 0",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x8004628",
            "cmp dword [0x08004c28], 0",
            "jle 0x8004c16",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp 0x8004628",
            "xor eax, eax",
            "jmp 0x8004545",
            "cmp dword [0x08004c74], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x80",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004cbd], 0",
            "mov r12d, 0xffffffea",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "cmp dword [0x08004d06], 0",
            "mov r12d, 0xffffffea",
            "js 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2aa",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004d4f], 0",
            "mov r12d, 0xffffffea",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x286",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004d98], 0",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2b2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004ddb], 0",
            "mov r12d, 0xffffffea",
            "js release_user_pages",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "add rax, 0x4b8",
            "mov r9d, esi",
            "mov r8d, 0x241",
            "mov rsi, rax",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [r15 + 0x44], 0",
            "je 0x8004e34",
            "cmp dword [r15 + 0x40], 0",
            "je 0x800464c",
            "cmp dword [0x08004e3b], 0",
            "js 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x270",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004e84], 0",
            "mov r12d, 0xfffffff4",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x28c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r10d",
            "mov r8d, 0x8a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004f0c], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x25a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [0x08004f52], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x250",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004c16",
            "cmp dword [0x08004fd1], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x99",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x0800501a], 0",
            "jle 0x8004a20",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x57",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x79",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov eax, dword [r15 + 0xb4]",
            "mov edx, eax",
            "sub rdx, 1",
            "jmp 0x800467c",
            "cmp dword [0x080050ac], 0",
            "mov r12d, 0xfffffff2",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x292",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x47",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity"
        ]
    },
    "unk.0x8004b76": {
        "function_address": "0x08004b76",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x88",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r15, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [r15 + 0x88]",
            "test eax, eax",
            "je 0x8004427",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "lea r13, [rbx + 0x50]",
            "cmovle edx, dword [rbx + 0x4c]",
            "lea r14, [r15 + 0x78]",
            "mov eax, 0x10",
            "mov rsi, r13",
            "mov rdi, r14",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "test byte [rbx + 6], 0x20",
            "jne 0x8004640",
            "cmp dword [rbx + 0xc], 0x1000",
            "ja cryptodev_verbosity",
            "xor esi, esi",
            "mov edi, 0xd0",
            "call __get_free_pages",
            "test rax, rax",
            "mov qword [rbp - 0x70], rax",
            "je cryptodev_verbosity",
            "mov rsi, qword [rbx + 0x10]",
            "test rsi, rsi",
            "je 0x8004a08",
            "mov edx, dword [rbx + 0xc]",
            "xor r11d, r11d",
            "test edx, edx",
            "jne _copy_from_user",
            "test byte [rbx + 6], 0x10",
            "je 0x80044b3",
            "mov r12d, dword [r15 + 0x40]",
            "test r12d, r12d",
            "je 0x80047a0",
            "mov r10d, dword [r15 + 0x38]",
            "test r10d, r10d",
            "je cryptodev_verbosity",
            "cmp qword [r15 + 0x40], 0",
            "je cryptodev_verbosity",
            "lea rax, [rbp - 0x60]",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, dword [rbx + 8]",
            "mov rsi, qword [rbx + 0x18]",
            "mov r9, qword [rbx + 0x60]",
            "mov rdi, r15",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x58]",
            "mov r8d, dword [rbx + 0x48]",
            "mov qword [rbp - 0x78], r11",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x68]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "mov r12d, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r9d, dword [r15 + 0x38]",
            "mov eax, dword [rbx + 8]",
            "mov rdx, qword [rbp - 0x60]",
            "mov r12, qword [rbp - 0x58]",
            "mov ecx, dword [rbx + 0xc]",
            "test r9d, r9d",
            "mov dword [rbp - 0x64], eax",
            "je 0x8004c66",
            "mov r8d, dword [r15 + 0x40]",
            "test r8d, r8d",
            "je 0x8004c66",
            "mov rax, qword [r15 + 0x60]",
            "mov eax, dword [rax + 0x3c]",
            "mov esi, dword [rbx + 0x30]",
            "cmp esi, eax",
            "ja cryptodev_verbosity",
            "test esi, esi",
            "je 0x8004740",
            "mov edi, dword [r15 + 0x40]",
            "test edi, edi",
            "je 0x8004585",
            "mov rdi, qword [r15 + 0x60]",
            "mov qword [rbp - 0x88], rdx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call crypto_aead_setauthsize",
            "mov rdx, qword [rbp - 0x88]",
            "mov ecx, dword [rbp - 0x80]",
            "mov r11, qword [rbp - 0x78]",
            "mov rax, qword [r15 + 0x68]",
            "test ecx, ecx",
            "mov esi, 0",
            "cmove r11, rsi",
            "mov r8d, dword [rbp - 0x64]",
            "lea rdi, [r15 + 0x38]",
            "mov rsi, r12",
            "mov dword [rax + 0x30], ecx",
            "mov qword [rax + 0x40], r11",
            "cmp word [rbx + 4], 0",
            "mov rcx, r8",
            "mov qword [rbp - 0x78], r8",
            "jne cryptodev_cipher_decrypt",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbp - 0x64]",
            "add r8, qword [rbx + 0x20]",
            "add eax, dword [rbx + 0x30]",
            "mov qword [rbx + 0x28], r8",
            "mov dword [rbx + 0x48], eax",
            "mov rdi, r15",
            "call release_user_pages",
            "mov rdi, qword [rbp - 0x70]",
            "xor esi, esi",
            "call free_pages",
            "test r12d, r12d",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x4c]",
            "mov rsi, r14",
            "mov rdi, r13",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "lea rdi, [r15 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x88",
            "mov eax, r12d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, dword [r15 + 0x38]",
            "test eax, eax",
            "jne 0x8004e22",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004970",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004689",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x800467c",
            "cmp dword [0x08004676], 1",
            "jg current_task",
            "mov r9, qword [rbx + 0x10]",
            "test r9, rdx",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [rbx + 0xc]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rdx, qword [rbx + 0x10]",
            "mov r10, qword [rbx + 0x18]",
            "sub r10, rdx",
            "cmp r10d, 0x100",
            "jbe 0x80048b0",
            "mov eax, dword [0x080046bd]",
            "test eax, eax",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "cmp dword [0x080046d2], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2ea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x30]",
            "mov edx, dword [rbp - 0x64]",
            "sub r8, rax",
            "add r8, qword [rbx + 0x20]",
            "sub edx, eax",
            "mov dword [rbx + 0x48], edx",
            "mov qword [rbx + 0x28], r8",
            "jmp release_user_pages",
            "mov dword [rbx + 0x30], eax",
            "jmp 0x8004585",
            "cmp dword [0x08004757], 1",
            "jle 0x8004689",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "add eax, 1",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r8d, 0x7c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004689",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004bfe",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004810",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x8004810",
            "cmp dword [0x080047ca], 1",
            "jle 0x8004810",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x43",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x78], r11",
            "call printk",
            "mov r11, qword [rbp - 0x78]",
            "nop dword [rax + rax]",
            "movsxd rax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, 1",
            "mov dword [r15 + 0xc0], 0",
            "mov rdi, r15",
            "mov rsi, rcx",
            "lea rax, [rcx + rax - 1]",
            "shr rsi, 0xc",
            "sub edx, esi",
            "shr rax, 0xc",
            "lea ecx, [rdx + rax]",
            "mov dword [r15 + 0xbc], ecx",
            "mov esi, ecx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov ecx, dword [rbp - 0x80]",
            "je 0x8004b46",
            "mov esi, dword [0x08004871]",
            "test esi, esi",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2a0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rcx, rdx",
            "lea rax, [rdx + rax - 1]",
            "mov esi, 1",
            "shr rcx, 0xc",
            "mov rdi, r15",
            "mov qword [rbp - 0x80], r10",
            "sub esi, ecx",
            "shr rax, 0xc",
            "lea r11d, [rsi + rax]",
            "lea esi, [r11 + r11]",
            "mov dword [rbp - 0x78], r11d",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "je 0x8004a70",
            "mov r14d, dword [0x080048f9]",
            "test r14d, r14d",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x92",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rdi, qword [rbp - 0x70]",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "mov edx, dword [rbx + 0xc]",
            "mov rsi, qword [rbp - 0x70]",
            "lea rdi, [rbp - 0x50]",
            "call sg_init_one",
            "lea r11, [rbp - 0x50]",
            "jmp 0x80044a0",
            "cmp qword [rbx + 0x10], 0",
            "jne 0x8004659",
            "mov eax, dword [0x08004981]",
            "test eax, eax",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x72",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "cmp dword [0x080049c7], 0",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x276",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "xor r11d, r11d",
            "jmp 0x80044a0",
            "mov r11d, dword [0x08004a17]",
            "test r11d, r11d",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x80045e5",
            "cmp dword [0x08004a32], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov ecx, r11d",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0xc]",
            "mov edx, 1",
            "mov rdi, qword [rbx + 0x10]",
            "mov qword [rbp - 0x80], r10",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov dword [rbp - 0x78], r11d",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r12, qword [r15 + 0xd0]",
            "movsxd rdi, r11d",
            "mov dword [r15 + 0xbc], r11d",
            "shl rdi, 5",
            "mov esi, r11d",
            "mov dword [r15 + 0xc0], 0",
            "mov qword [rbp - 0x80], r10",
            "add rdi, r12",
            "mov qword [rbp - 0x60], rdi",
            "call sg_init_table",
            "mov edx, dword [rbx + 0xc]",
            "mov rdi, qword [r15 + 0xd0]",
            "mov rsi, qword [rbp - 0x60]",
            "call sg_copy",
            "mov r10, qword [rbp - 0x80]",
            "mov rdi, qword [rbp - 0x60]",
            "mov esi, r10d",
            "call sg_advance",
            "test rax, rax",
            "mov r8, rax",
            "mov qword [rbp - 0x60], rax",
            "je release_user_pages",
            "mov ecx, dword [rbx + 0xc]",
            "mov r9d, dword [rbx + 8]",
            "mov rdx, r12",
            "mov rdi, r15",
            "mov rsi, rbx",
            "call sym.srtp_auth_n_crypt",
            "mov rdi, r15",
            "mov r12d, eax",
            "call release_user_pages",
            "jmp 0x80045f0",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov edx, 1",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0x48]",
            "mov rdi, qword [rbx + 0x20]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r8, qword [r15 + 0xd0]",
            "mov ecx, dword [rbx + 0xc]",
            "mov rdx, r11",
            "mov r9d, dword [rbx + 8]",
            "mov rsi, rbx",
            "mov rdi, r15",
            "mov qword [rbp - 0x60], r8",
            "call sym.tls_auth_n_crypt",
            "mov r12d, eax",
            "jmp release_user_pages",
            "mov rdi, r15",
            "call release_user_pages",
            "mov r13d, dword [0x08004bb9]",
            "test r13d, r13d",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov r12d, 0xffffffea",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004c10], 0",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x8004628",
            "cmp dword [0x08004c28], 0",
            "jle 0x8004c16",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp 0x8004628",
            "xor eax, eax",
            "jmp 0x8004545",
            "cmp dword [0x08004c74], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x80",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004cbd], 0",
            "mov r12d, 0xffffffea",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "cmp dword [0x08004d06], 0",
            "mov r12d, 0xffffffea",
            "js 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2aa",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004d4f], 0",
            "mov r12d, 0xffffffea",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x286",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004d98], 0",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2b2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004ddb], 0",
            "mov r12d, 0xffffffea",
            "js release_user_pages",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "add rax, 0x4b8",
            "mov r9d, esi",
            "mov r8d, 0x241",
            "mov rsi, rax",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [r15 + 0x44], 0",
            "je 0x8004e34",
            "cmp dword [r15 + 0x40], 0",
            "je 0x800464c",
            "cmp dword [0x08004e3b], 0",
            "js 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x270",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004e84], 0",
            "mov r12d, 0xfffffff4",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x28c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r10d",
            "mov r8d, 0x8a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004f0c], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x25a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [0x08004f52], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x250",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004c16",
            "cmp dword [0x08004fd1], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x99",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x0800501a], 0",
            "jle 0x8004a20",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x57",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x79",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov eax, dword [r15 + 0xb4]",
            "mov edx, eax",
            "sub rdx, 1",
            "jmp 0x800467c",
            "cmp dword [0x080050ac], 0",
            "mov r12d, 0xfffffff2",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x292",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x47",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity"
        ]
    },
    "unk.0x8004bb2": {
        "function_address": "0x08004bb2",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x88",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r15, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [r15 + 0x88]",
            "test eax, eax",
            "je 0x8004427",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "lea r13, [rbx + 0x50]",
            "cmovle edx, dword [rbx + 0x4c]",
            "lea r14, [r15 + 0x78]",
            "mov eax, 0x10",
            "mov rsi, r13",
            "mov rdi, r14",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "test byte [rbx + 6], 0x20",
            "jne 0x8004640",
            "cmp dword [rbx + 0xc], 0x1000",
            "ja cryptodev_verbosity",
            "xor esi, esi",
            "mov edi, 0xd0",
            "call __get_free_pages",
            "test rax, rax",
            "mov qword [rbp - 0x70], rax",
            "je cryptodev_verbosity",
            "mov rsi, qword [rbx + 0x10]",
            "test rsi, rsi",
            "je 0x8004a08",
            "mov edx, dword [rbx + 0xc]",
            "xor r11d, r11d",
            "test edx, edx",
            "jne _copy_from_user",
            "test byte [rbx + 6], 0x10",
            "je 0x80044b3",
            "mov r12d, dword [r15 + 0x40]",
            "test r12d, r12d",
            "je 0x80047a0",
            "mov r10d, dword [r15 + 0x38]",
            "test r10d, r10d",
            "je cryptodev_verbosity",
            "cmp qword [r15 + 0x40], 0",
            "je cryptodev_verbosity",
            "lea rax, [rbp - 0x60]",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, dword [rbx + 8]",
            "mov rsi, qword [rbx + 0x18]",
            "mov r9, qword [rbx + 0x60]",
            "mov rdi, r15",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x58]",
            "mov r8d, dword [rbx + 0x48]",
            "mov qword [rbp - 0x78], r11",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x68]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "mov r12d, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r9d, dword [r15 + 0x38]",
            "mov eax, dword [rbx + 8]",
            "mov rdx, qword [rbp - 0x60]",
            "mov r12, qword [rbp - 0x58]",
            "mov ecx, dword [rbx + 0xc]",
            "test r9d, r9d",
            "mov dword [rbp - 0x64], eax",
            "je 0x8004c66",
            "mov r8d, dword [r15 + 0x40]",
            "test r8d, r8d",
            "je 0x8004c66",
            "mov rax, qword [r15 + 0x60]",
            "mov eax, dword [rax + 0x3c]",
            "mov esi, dword [rbx + 0x30]",
            "cmp esi, eax",
            "ja cryptodev_verbosity",
            "test esi, esi",
            "je 0x8004740",
            "mov edi, dword [r15 + 0x40]",
            "test edi, edi",
            "je 0x8004585",
            "mov rdi, qword [r15 + 0x60]",
            "mov qword [rbp - 0x88], rdx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call crypto_aead_setauthsize",
            "mov rdx, qword [rbp - 0x88]",
            "mov ecx, dword [rbp - 0x80]",
            "mov r11, qword [rbp - 0x78]",
            "mov rax, qword [r15 + 0x68]",
            "test ecx, ecx",
            "mov esi, 0",
            "cmove r11, rsi",
            "mov r8d, dword [rbp - 0x64]",
            "lea rdi, [r15 + 0x38]",
            "mov rsi, r12",
            "mov dword [rax + 0x30], ecx",
            "mov qword [rax + 0x40], r11",
            "cmp word [rbx + 4], 0",
            "mov rcx, r8",
            "mov qword [rbp - 0x78], r8",
            "jne cryptodev_cipher_decrypt",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbp - 0x64]",
            "add r8, qword [rbx + 0x20]",
            "add eax, dword [rbx + 0x30]",
            "mov qword [rbx + 0x28], r8",
            "mov dword [rbx + 0x48], eax",
            "mov rdi, r15",
            "call release_user_pages",
            "mov rdi, qword [rbp - 0x70]",
            "xor esi, esi",
            "call free_pages",
            "test r12d, r12d",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x4c]",
            "mov rsi, r14",
            "mov rdi, r13",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "lea rdi, [r15 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x88",
            "mov eax, r12d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, dword [r15 + 0x38]",
            "test eax, eax",
            "jne 0x8004e22",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004970",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004689",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x800467c",
            "cmp dword [0x08004676], 1",
            "jg current_task",
            "mov r9, qword [rbx + 0x10]",
            "test r9, rdx",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [rbx + 0xc]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rdx, qword [rbx + 0x10]",
            "mov r10, qword [rbx + 0x18]",
            "sub r10, rdx",
            "cmp r10d, 0x100",
            "jbe 0x80048b0",
            "mov eax, dword [0x080046bd]",
            "test eax, eax",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "cmp dword [0x080046d2], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2ea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x30]",
            "mov edx, dword [rbp - 0x64]",
            "sub r8, rax",
            "add r8, qword [rbx + 0x20]",
            "sub edx, eax",
            "mov dword [rbx + 0x48], edx",
            "mov qword [rbx + 0x28], r8",
            "jmp release_user_pages",
            "mov dword [rbx + 0x30], eax",
            "jmp 0x8004585",
            "cmp dword [0x08004757], 1",
            "jle 0x8004689",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "add eax, 1",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r8d, 0x7c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004689",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004bfe",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004810",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x8004810",
            "cmp dword [0x080047ca], 1",
            "jle 0x8004810",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x43",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x78], r11",
            "call printk",
            "mov r11, qword [rbp - 0x78]",
            "nop dword [rax + rax]",
            "movsxd rax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, 1",
            "mov dword [r15 + 0xc0], 0",
            "mov rdi, r15",
            "mov rsi, rcx",
            "lea rax, [rcx + rax - 1]",
            "shr rsi, 0xc",
            "sub edx, esi",
            "shr rax, 0xc",
            "lea ecx, [rdx + rax]",
            "mov dword [r15 + 0xbc], ecx",
            "mov esi, ecx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov ecx, dword [rbp - 0x80]",
            "je 0x8004b46",
            "mov esi, dword [0x08004871]",
            "test esi, esi",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2a0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rcx, rdx",
            "lea rax, [rdx + rax - 1]",
            "mov esi, 1",
            "shr rcx, 0xc",
            "mov rdi, r15",
            "mov qword [rbp - 0x80], r10",
            "sub esi, ecx",
            "shr rax, 0xc",
            "lea r11d, [rsi + rax]",
            "lea esi, [r11 + r11]",
            "mov dword [rbp - 0x78], r11d",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "je 0x8004a70",
            "mov r14d, dword [0x080048f9]",
            "test r14d, r14d",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x92",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rdi, qword [rbp - 0x70]",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "mov edx, dword [rbx + 0xc]",
            "mov rsi, qword [rbp - 0x70]",
            "lea rdi, [rbp - 0x50]",
            "call sg_init_one",
            "lea r11, [rbp - 0x50]",
            "jmp 0x80044a0",
            "cmp qword [rbx + 0x10], 0",
            "jne 0x8004659",
            "mov eax, dword [0x08004981]",
            "test eax, eax",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x72",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "cmp dword [0x080049c7], 0",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x276",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "xor r11d, r11d",
            "jmp 0x80044a0",
            "mov r11d, dword [0x08004a17]",
            "test r11d, r11d",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x80045e5",
            "cmp dword [0x08004a32], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov ecx, r11d",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0xc]",
            "mov edx, 1",
            "mov rdi, qword [rbx + 0x10]",
            "mov qword [rbp - 0x80], r10",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov dword [rbp - 0x78], r11d",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r12, qword [r15 + 0xd0]",
            "movsxd rdi, r11d",
            "mov dword [r15 + 0xbc], r11d",
            "shl rdi, 5",
            "mov esi, r11d",
            "mov dword [r15 + 0xc0], 0",
            "mov qword [rbp - 0x80], r10",
            "add rdi, r12",
            "mov qword [rbp - 0x60], rdi",
            "call sg_init_table",
            "mov edx, dword [rbx + 0xc]",
            "mov rdi, qword [r15 + 0xd0]",
            "mov rsi, qword [rbp - 0x60]",
            "call sg_copy",
            "mov r10, qword [rbp - 0x80]",
            "mov rdi, qword [rbp - 0x60]",
            "mov esi, r10d",
            "call sg_advance",
            "test rax, rax",
            "mov r8, rax",
            "mov qword [rbp - 0x60], rax",
            "je release_user_pages",
            "mov ecx, dword [rbx + 0xc]",
            "mov r9d, dword [rbx + 8]",
            "mov rdx, r12",
            "mov rdi, r15",
            "mov rsi, rbx",
            "call sym.srtp_auth_n_crypt",
            "mov rdi, r15",
            "mov r12d, eax",
            "call release_user_pages",
            "jmp 0x80045f0",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov edx, 1",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0x48]",
            "mov rdi, qword [rbx + 0x20]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r8, qword [r15 + 0xd0]",
            "mov ecx, dword [rbx + 0xc]",
            "mov rdx, r11",
            "mov r9d, dword [rbx + 8]",
            "mov rsi, rbx",
            "mov rdi, r15",
            "mov qword [rbp - 0x60], r8",
            "call sym.tls_auth_n_crypt",
            "mov r12d, eax",
            "jmp release_user_pages",
            "mov rdi, r15",
            "call release_user_pages",
            "mov r13d, dword [0x08004bb9]",
            "test r13d, r13d",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov r12d, 0xffffffea",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004c10], 0",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x8004628",
            "cmp dword [0x08004c28], 0",
            "jle 0x8004c16",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp 0x8004628",
            "xor eax, eax",
            "jmp 0x8004545",
            "cmp dword [0x08004c74], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x80",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004cbd], 0",
            "mov r12d, 0xffffffea",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "cmp dword [0x08004d06], 0",
            "mov r12d, 0xffffffea",
            "js 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2aa",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004d4f], 0",
            "mov r12d, 0xffffffea",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x286",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004d98], 0",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2b2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004ddb], 0",
            "mov r12d, 0xffffffea",
            "js release_user_pages",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "add rax, 0x4b8",
            "mov r9d, esi",
            "mov r8d, 0x241",
            "mov rsi, rax",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [r15 + 0x44], 0",
            "je 0x8004e34",
            "cmp dword [r15 + 0x40], 0",
            "je 0x800464c",
            "cmp dword [0x08004e3b], 0",
            "js 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x270",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004e84], 0",
            "mov r12d, 0xfffffff4",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x28c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r10d",
            "mov r8d, 0x8a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004f0c], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x25a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [0x08004f52], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x250",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004c16",
            "cmp dword [0x08004fd1], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x99",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x0800501a], 0",
            "jle 0x8004a20",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x57",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x79",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov eax, dword [r15 + 0xb4]",
            "mov edx, eax",
            "sub rdx, 1",
            "jmp 0x800467c",
            "cmp dword [0x080050ac], 0",
            "mov r12d, 0xfffffff2",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x292",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x47",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity"
        ]
    },
    "unk.0x8004bf9": {
        "function_address": "0x08004bf9",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x88",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r15, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [r15 + 0x88]",
            "test eax, eax",
            "je 0x8004427",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "lea r13, [rbx + 0x50]",
            "cmovle edx, dword [rbx + 0x4c]",
            "lea r14, [r15 + 0x78]",
            "mov eax, 0x10",
            "mov rsi, r13",
            "mov rdi, r14",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "test byte [rbx + 6], 0x20",
            "jne 0x8004640",
            "cmp dword [rbx + 0xc], 0x1000",
            "ja cryptodev_verbosity",
            "xor esi, esi",
            "mov edi, 0xd0",
            "call __get_free_pages",
            "test rax, rax",
            "mov qword [rbp - 0x70], rax",
            "je cryptodev_verbosity",
            "mov rsi, qword [rbx + 0x10]",
            "test rsi, rsi",
            "je 0x8004a08",
            "mov edx, dword [rbx + 0xc]",
            "xor r11d, r11d",
            "test edx, edx",
            "jne _copy_from_user",
            "test byte [rbx + 6], 0x10",
            "je 0x80044b3",
            "mov r12d, dword [r15 + 0x40]",
            "test r12d, r12d",
            "je 0x80047a0",
            "mov r10d, dword [r15 + 0x38]",
            "test r10d, r10d",
            "je cryptodev_verbosity",
            "cmp qword [r15 + 0x40], 0",
            "je cryptodev_verbosity",
            "lea rax, [rbp - 0x60]",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, dword [rbx + 8]",
            "mov rsi, qword [rbx + 0x18]",
            "mov r9, qword [rbx + 0x60]",
            "mov rdi, r15",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x58]",
            "mov r8d, dword [rbx + 0x48]",
            "mov qword [rbp - 0x78], r11",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x68]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "mov r12d, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r9d, dword [r15 + 0x38]",
            "mov eax, dword [rbx + 8]",
            "mov rdx, qword [rbp - 0x60]",
            "mov r12, qword [rbp - 0x58]",
            "mov ecx, dword [rbx + 0xc]",
            "test r9d, r9d",
            "mov dword [rbp - 0x64], eax",
            "je 0x8004c66",
            "mov r8d, dword [r15 + 0x40]",
            "test r8d, r8d",
            "je 0x8004c66",
            "mov rax, qword [r15 + 0x60]",
            "mov eax, dword [rax + 0x3c]",
            "mov esi, dword [rbx + 0x30]",
            "cmp esi, eax",
            "ja cryptodev_verbosity",
            "test esi, esi",
            "je 0x8004740",
            "mov edi, dword [r15 + 0x40]",
            "test edi, edi",
            "je 0x8004585",
            "mov rdi, qword [r15 + 0x60]",
            "mov qword [rbp - 0x88], rdx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call crypto_aead_setauthsize",
            "mov rdx, qword [rbp - 0x88]",
            "mov ecx, dword [rbp - 0x80]",
            "mov r11, qword [rbp - 0x78]",
            "mov rax, qword [r15 + 0x68]",
            "test ecx, ecx",
            "mov esi, 0",
            "cmove r11, rsi",
            "mov r8d, dword [rbp - 0x64]",
            "lea rdi, [r15 + 0x38]",
            "mov rsi, r12",
            "mov dword [rax + 0x30], ecx",
            "mov qword [rax + 0x40], r11",
            "cmp word [rbx + 4], 0",
            "mov rcx, r8",
            "mov qword [rbp - 0x78], r8",
            "jne cryptodev_cipher_decrypt",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbp - 0x64]",
            "add r8, qword [rbx + 0x20]",
            "add eax, dword [rbx + 0x30]",
            "mov qword [rbx + 0x28], r8",
            "mov dword [rbx + 0x48], eax",
            "mov rdi, r15",
            "call release_user_pages",
            "mov rdi, qword [rbp - 0x70]",
            "xor esi, esi",
            "call free_pages",
            "test r12d, r12d",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x4c]",
            "mov rsi, r14",
            "mov rdi, r13",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "lea rdi, [r15 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x88",
            "mov eax, r12d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, dword [r15 + 0x38]",
            "test eax, eax",
            "jne 0x8004e22",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004970",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004689",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x800467c",
            "cmp dword [0x08004676], 1",
            "jg current_task",
            "mov r9, qword [rbx + 0x10]",
            "test r9, rdx",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [rbx + 0xc]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rdx, qword [rbx + 0x10]",
            "mov r10, qword [rbx + 0x18]",
            "sub r10, rdx",
            "cmp r10d, 0x100",
            "jbe 0x80048b0",
            "mov eax, dword [0x080046bd]",
            "test eax, eax",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "cmp dword [0x080046d2], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2ea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x30]",
            "mov edx, dword [rbp - 0x64]",
            "sub r8, rax",
            "add r8, qword [rbx + 0x20]",
            "sub edx, eax",
            "mov dword [rbx + 0x48], edx",
            "mov qword [rbx + 0x28], r8",
            "jmp release_user_pages",
            "mov dword [rbx + 0x30], eax",
            "jmp 0x8004585",
            "cmp dword [0x08004757], 1",
            "jle 0x8004689",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "add eax, 1",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r8d, 0x7c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004689",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004bfe",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004810",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x8004810",
            "cmp dword [0x080047ca], 1",
            "jle 0x8004810",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x43",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x78], r11",
            "call printk",
            "mov r11, qword [rbp - 0x78]",
            "nop dword [rax + rax]",
            "movsxd rax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, 1",
            "mov dword [r15 + 0xc0], 0",
            "mov rdi, r15",
            "mov rsi, rcx",
            "lea rax, [rcx + rax - 1]",
            "shr rsi, 0xc",
            "sub edx, esi",
            "shr rax, 0xc",
            "lea ecx, [rdx + rax]",
            "mov dword [r15 + 0xbc], ecx",
            "mov esi, ecx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov ecx, dword [rbp - 0x80]",
            "je 0x8004b46",
            "mov esi, dword [0x08004871]",
            "test esi, esi",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2a0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rcx, rdx",
            "lea rax, [rdx + rax - 1]",
            "mov esi, 1",
            "shr rcx, 0xc",
            "mov rdi, r15",
            "mov qword [rbp - 0x80], r10",
            "sub esi, ecx",
            "shr rax, 0xc",
            "lea r11d, [rsi + rax]",
            "lea esi, [r11 + r11]",
            "mov dword [rbp - 0x78], r11d",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "je 0x8004a70",
            "mov r14d, dword [0x080048f9]",
            "test r14d, r14d",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x92",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rdi, qword [rbp - 0x70]",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "mov edx, dword [rbx + 0xc]",
            "mov rsi, qword [rbp - 0x70]",
            "lea rdi, [rbp - 0x50]",
            "call sg_init_one",
            "lea r11, [rbp - 0x50]",
            "jmp 0x80044a0",
            "cmp qword [rbx + 0x10], 0",
            "jne 0x8004659",
            "mov eax, dword [0x08004981]",
            "test eax, eax",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x72",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "cmp dword [0x080049c7], 0",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x276",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "xor r11d, r11d",
            "jmp 0x80044a0",
            "mov r11d, dword [0x08004a17]",
            "test r11d, r11d",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x80045e5",
            "cmp dword [0x08004a32], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov ecx, r11d",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0xc]",
            "mov edx, 1",
            "mov rdi, qword [rbx + 0x10]",
            "mov qword [rbp - 0x80], r10",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov dword [rbp - 0x78], r11d",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r12, qword [r15 + 0xd0]",
            "movsxd rdi, r11d",
            "mov dword [r15 + 0xbc], r11d",
            "shl rdi, 5",
            "mov esi, r11d",
            "mov dword [r15 + 0xc0], 0",
            "mov qword [rbp - 0x80], r10",
            "add rdi, r12",
            "mov qword [rbp - 0x60], rdi",
            "call sg_init_table",
            "mov edx, dword [rbx + 0xc]",
            "mov rdi, qword [r15 + 0xd0]",
            "mov rsi, qword [rbp - 0x60]",
            "call sg_copy",
            "mov r10, qword [rbp - 0x80]",
            "mov rdi, qword [rbp - 0x60]",
            "mov esi, r10d",
            "call sg_advance",
            "test rax, rax",
            "mov r8, rax",
            "mov qword [rbp - 0x60], rax",
            "je release_user_pages",
            "mov ecx, dword [rbx + 0xc]",
            "mov r9d, dword [rbx + 8]",
            "mov rdx, r12",
            "mov rdi, r15",
            "mov rsi, rbx",
            "call sym.srtp_auth_n_crypt",
            "mov rdi, r15",
            "mov r12d, eax",
            "call release_user_pages",
            "jmp 0x80045f0",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov edx, 1",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0x48]",
            "mov rdi, qword [rbx + 0x20]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r8, qword [r15 + 0xd0]",
            "mov ecx, dword [rbx + 0xc]",
            "mov rdx, r11",
            "mov r9d, dword [rbx + 8]",
            "mov rsi, rbx",
            "mov rdi, r15",
            "mov qword [rbp - 0x60], r8",
            "call sym.tls_auth_n_crypt",
            "mov r12d, eax",
            "jmp release_user_pages",
            "mov rdi, r15",
            "call release_user_pages",
            "mov r13d, dword [0x08004bb9]",
            "test r13d, r13d",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov r12d, 0xffffffea",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004c10], 0",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x8004628",
            "cmp dword [0x08004c28], 0",
            "jle 0x8004c16",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp 0x8004628",
            "xor eax, eax",
            "jmp 0x8004545",
            "cmp dword [0x08004c74], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x80",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004cbd], 0",
            "mov r12d, 0xffffffea",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "cmp dword [0x08004d06], 0",
            "mov r12d, 0xffffffea",
            "js 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2aa",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004d4f], 0",
            "mov r12d, 0xffffffea",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x286",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004d98], 0",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2b2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004ddb], 0",
            "mov r12d, 0xffffffea",
            "js release_user_pages",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "add rax, 0x4b8",
            "mov r9d, esi",
            "mov r8d, 0x241",
            "mov rsi, rax",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [r15 + 0x44], 0",
            "je 0x8004e34",
            "cmp dword [r15 + 0x40], 0",
            "je 0x800464c",
            "cmp dword [0x08004e3b], 0",
            "js 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x270",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004e84], 0",
            "mov r12d, 0xfffffff4",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x28c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r10d",
            "mov r8d, 0x8a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004f0c], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x25a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [0x08004f52], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x250",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004c16",
            "cmp dword [0x08004fd1], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x99",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x0800501a], 0",
            "jle 0x8004a20",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x57",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x79",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov eax, dword [r15 + 0xb4]",
            "mov edx, eax",
            "sub rdx, 1",
            "jmp 0x800467c",
            "cmp dword [0x080050ac], 0",
            "mov r12d, 0xfffffff2",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x292",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x47",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity"
        ]
    },
    "unk.0x8004c61": {
        "function_address": "0x08004c61",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x88",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r15, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [r15 + 0x88]",
            "test eax, eax",
            "je 0x8004427",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "lea r13, [rbx + 0x50]",
            "cmovle edx, dword [rbx + 0x4c]",
            "lea r14, [r15 + 0x78]",
            "mov eax, 0x10",
            "mov rsi, r13",
            "mov rdi, r14",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "test byte [rbx + 6], 0x20",
            "jne 0x8004640",
            "cmp dword [rbx + 0xc], 0x1000",
            "ja cryptodev_verbosity",
            "xor esi, esi",
            "mov edi, 0xd0",
            "call __get_free_pages",
            "test rax, rax",
            "mov qword [rbp - 0x70], rax",
            "je cryptodev_verbosity",
            "mov rsi, qword [rbx + 0x10]",
            "test rsi, rsi",
            "je 0x8004a08",
            "mov edx, dword [rbx + 0xc]",
            "xor r11d, r11d",
            "test edx, edx",
            "jne _copy_from_user",
            "test byte [rbx + 6], 0x10",
            "je 0x80044b3",
            "mov r12d, dword [r15 + 0x40]",
            "test r12d, r12d",
            "je 0x80047a0",
            "mov r10d, dword [r15 + 0x38]",
            "test r10d, r10d",
            "je cryptodev_verbosity",
            "cmp qword [r15 + 0x40], 0",
            "je cryptodev_verbosity",
            "lea rax, [rbp - 0x60]",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, dword [rbx + 8]",
            "mov rsi, qword [rbx + 0x18]",
            "mov r9, qword [rbx + 0x60]",
            "mov rdi, r15",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x58]",
            "mov r8d, dword [rbx + 0x48]",
            "mov qword [rbp - 0x78], r11",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x68]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "mov r12d, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r9d, dword [r15 + 0x38]",
            "mov eax, dword [rbx + 8]",
            "mov rdx, qword [rbp - 0x60]",
            "mov r12, qword [rbp - 0x58]",
            "mov ecx, dword [rbx + 0xc]",
            "test r9d, r9d",
            "mov dword [rbp - 0x64], eax",
            "je 0x8004c66",
            "mov r8d, dword [r15 + 0x40]",
            "test r8d, r8d",
            "je 0x8004c66",
            "mov rax, qword [r15 + 0x60]",
            "mov eax, dword [rax + 0x3c]",
            "mov esi, dword [rbx + 0x30]",
            "cmp esi, eax",
            "ja cryptodev_verbosity",
            "test esi, esi",
            "je 0x8004740",
            "mov edi, dword [r15 + 0x40]",
            "test edi, edi",
            "je 0x8004585",
            "mov rdi, qword [r15 + 0x60]",
            "mov qword [rbp - 0x88], rdx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call crypto_aead_setauthsize",
            "mov rdx, qword [rbp - 0x88]",
            "mov ecx, dword [rbp - 0x80]",
            "mov r11, qword [rbp - 0x78]",
            "mov rax, qword [r15 + 0x68]",
            "test ecx, ecx",
            "mov esi, 0",
            "cmove r11, rsi",
            "mov r8d, dword [rbp - 0x64]",
            "lea rdi, [r15 + 0x38]",
            "mov rsi, r12",
            "mov dword [rax + 0x30], ecx",
            "mov qword [rax + 0x40], r11",
            "cmp word [rbx + 4], 0",
            "mov rcx, r8",
            "mov qword [rbp - 0x78], r8",
            "jne cryptodev_cipher_decrypt",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbp - 0x64]",
            "add r8, qword [rbx + 0x20]",
            "add eax, dword [rbx + 0x30]",
            "mov qword [rbx + 0x28], r8",
            "mov dword [rbx + 0x48], eax",
            "mov rdi, r15",
            "call release_user_pages",
            "mov rdi, qword [rbp - 0x70]",
            "xor esi, esi",
            "call free_pages",
            "test r12d, r12d",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x4c]",
            "mov rsi, r14",
            "mov rdi, r13",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "lea rdi, [r15 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x88",
            "mov eax, r12d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, dword [r15 + 0x38]",
            "test eax, eax",
            "jne 0x8004e22",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004970",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004689",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x800467c",
            "cmp dword [0x08004676], 1",
            "jg current_task",
            "mov r9, qword [rbx + 0x10]",
            "test r9, rdx",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [rbx + 0xc]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rdx, qword [rbx + 0x10]",
            "mov r10, qword [rbx + 0x18]",
            "sub r10, rdx",
            "cmp r10d, 0x100",
            "jbe 0x80048b0",
            "mov eax, dword [0x080046bd]",
            "test eax, eax",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "cmp dword [0x080046d2], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2ea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x30]",
            "mov edx, dword [rbp - 0x64]",
            "sub r8, rax",
            "add r8, qword [rbx + 0x20]",
            "sub edx, eax",
            "mov dword [rbx + 0x48], edx",
            "mov qword [rbx + 0x28], r8",
            "jmp release_user_pages",
            "mov dword [rbx + 0x30], eax",
            "jmp 0x8004585",
            "cmp dword [0x08004757], 1",
            "jle 0x8004689",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "add eax, 1",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r8d, 0x7c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004689",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004bfe",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004810",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x8004810",
            "cmp dword [0x080047ca], 1",
            "jle 0x8004810",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x43",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x78], r11",
            "call printk",
            "mov r11, qword [rbp - 0x78]",
            "nop dword [rax + rax]",
            "movsxd rax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, 1",
            "mov dword [r15 + 0xc0], 0",
            "mov rdi, r15",
            "mov rsi, rcx",
            "lea rax, [rcx + rax - 1]",
            "shr rsi, 0xc",
            "sub edx, esi",
            "shr rax, 0xc",
            "lea ecx, [rdx + rax]",
            "mov dword [r15 + 0xbc], ecx",
            "mov esi, ecx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov ecx, dword [rbp - 0x80]",
            "je 0x8004b46",
            "mov esi, dword [0x08004871]",
            "test esi, esi",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2a0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rcx, rdx",
            "lea rax, [rdx + rax - 1]",
            "mov esi, 1",
            "shr rcx, 0xc",
            "mov rdi, r15",
            "mov qword [rbp - 0x80], r10",
            "sub esi, ecx",
            "shr rax, 0xc",
            "lea r11d, [rsi + rax]",
            "lea esi, [r11 + r11]",
            "mov dword [rbp - 0x78], r11d",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "je 0x8004a70",
            "mov r14d, dword [0x080048f9]",
            "test r14d, r14d",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x92",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rdi, qword [rbp - 0x70]",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "mov edx, dword [rbx + 0xc]",
            "mov rsi, qword [rbp - 0x70]",
            "lea rdi, [rbp - 0x50]",
            "call sg_init_one",
            "lea r11, [rbp - 0x50]",
            "jmp 0x80044a0",
            "cmp qword [rbx + 0x10], 0",
            "jne 0x8004659",
            "mov eax, dword [0x08004981]",
            "test eax, eax",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x72",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "cmp dword [0x080049c7], 0",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x276",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "xor r11d, r11d",
            "jmp 0x80044a0",
            "mov r11d, dword [0x08004a17]",
            "test r11d, r11d",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x80045e5",
            "cmp dword [0x08004a32], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov ecx, r11d",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0xc]",
            "mov edx, 1",
            "mov rdi, qword [rbx + 0x10]",
            "mov qword [rbp - 0x80], r10",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov dword [rbp - 0x78], r11d",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r12, qword [r15 + 0xd0]",
            "movsxd rdi, r11d",
            "mov dword [r15 + 0xbc], r11d",
            "shl rdi, 5",
            "mov esi, r11d",
            "mov dword [r15 + 0xc0], 0",
            "mov qword [rbp - 0x80], r10",
            "add rdi, r12",
            "mov qword [rbp - 0x60], rdi",
            "call sg_init_table",
            "mov edx, dword [rbx + 0xc]",
            "mov rdi, qword [r15 + 0xd0]",
            "mov rsi, qword [rbp - 0x60]",
            "call sg_copy",
            "mov r10, qword [rbp - 0x80]",
            "mov rdi, qword [rbp - 0x60]",
            "mov esi, r10d",
            "call sg_advance",
            "test rax, rax",
            "mov r8, rax",
            "mov qword [rbp - 0x60], rax",
            "je release_user_pages",
            "mov ecx, dword [rbx + 0xc]",
            "mov r9d, dword [rbx + 8]",
            "mov rdx, r12",
            "mov rdi, r15",
            "mov rsi, rbx",
            "call sym.srtp_auth_n_crypt",
            "mov rdi, r15",
            "mov r12d, eax",
            "call release_user_pages",
            "jmp 0x80045f0",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov edx, 1",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0x48]",
            "mov rdi, qword [rbx + 0x20]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r8, qword [r15 + 0xd0]",
            "mov ecx, dword [rbx + 0xc]",
            "mov rdx, r11",
            "mov r9d, dword [rbx + 8]",
            "mov rsi, rbx",
            "mov rdi, r15",
            "mov qword [rbp - 0x60], r8",
            "call sym.tls_auth_n_crypt",
            "mov r12d, eax",
            "jmp release_user_pages",
            "mov rdi, r15",
            "call release_user_pages",
            "mov r13d, dword [0x08004bb9]",
            "test r13d, r13d",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov r12d, 0xffffffea",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004c10], 0",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x8004628",
            "cmp dword [0x08004c28], 0",
            "jle 0x8004c16",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp 0x8004628",
            "xor eax, eax",
            "jmp 0x8004545",
            "cmp dword [0x08004c74], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x80",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004cbd], 0",
            "mov r12d, 0xffffffea",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "cmp dword [0x08004d06], 0",
            "mov r12d, 0xffffffea",
            "js 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2aa",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004d4f], 0",
            "mov r12d, 0xffffffea",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x286",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004d98], 0",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2b2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004ddb], 0",
            "mov r12d, 0xffffffea",
            "js release_user_pages",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "add rax, 0x4b8",
            "mov r9d, esi",
            "mov r8d, 0x241",
            "mov rsi, rax",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [r15 + 0x44], 0",
            "je 0x8004e34",
            "cmp dword [r15 + 0x40], 0",
            "je 0x800464c",
            "cmp dword [0x08004e3b], 0",
            "js 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x270",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004e84], 0",
            "mov r12d, 0xfffffff4",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x28c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r10d",
            "mov r8d, 0x8a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004f0c], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x25a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [0x08004f52], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x250",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004c16",
            "cmp dword [0x08004fd1], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x99",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x0800501a], 0",
            "jle 0x8004a20",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x57",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x79",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov eax, dword [r15 + 0xb4]",
            "mov edx, eax",
            "sub rdx, 1",
            "jmp 0x800467c",
            "cmp dword [0x080050ac], 0",
            "mov r12d, 0xfffffff2",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x292",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x47",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity"
        ]
    },
    "unk.0x8004cb1": {
        "function_address": "0x08004cb1",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x88",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r15, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [r15 + 0x88]",
            "test eax, eax",
            "je 0x8004427",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "lea r13, [rbx + 0x50]",
            "cmovle edx, dword [rbx + 0x4c]",
            "lea r14, [r15 + 0x78]",
            "mov eax, 0x10",
            "mov rsi, r13",
            "mov rdi, r14",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "test byte [rbx + 6], 0x20",
            "jne 0x8004640",
            "cmp dword [rbx + 0xc], 0x1000",
            "ja cryptodev_verbosity",
            "xor esi, esi",
            "mov edi, 0xd0",
            "call __get_free_pages",
            "test rax, rax",
            "mov qword [rbp - 0x70], rax",
            "je cryptodev_verbosity",
            "mov rsi, qword [rbx + 0x10]",
            "test rsi, rsi",
            "je 0x8004a08",
            "mov edx, dword [rbx + 0xc]",
            "xor r11d, r11d",
            "test edx, edx",
            "jne _copy_from_user",
            "test byte [rbx + 6], 0x10",
            "je 0x80044b3",
            "mov r12d, dword [r15 + 0x40]",
            "test r12d, r12d",
            "je 0x80047a0",
            "mov r10d, dword [r15 + 0x38]",
            "test r10d, r10d",
            "je cryptodev_verbosity",
            "cmp qword [r15 + 0x40], 0",
            "je cryptodev_verbosity",
            "lea rax, [rbp - 0x60]",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, dword [rbx + 8]",
            "mov rsi, qword [rbx + 0x18]",
            "mov r9, qword [rbx + 0x60]",
            "mov rdi, r15",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x58]",
            "mov r8d, dword [rbx + 0x48]",
            "mov qword [rbp - 0x78], r11",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x68]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "mov r12d, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r9d, dword [r15 + 0x38]",
            "mov eax, dword [rbx + 8]",
            "mov rdx, qword [rbp - 0x60]",
            "mov r12, qword [rbp - 0x58]",
            "mov ecx, dword [rbx + 0xc]",
            "test r9d, r9d",
            "mov dword [rbp - 0x64], eax",
            "je 0x8004c66",
            "mov r8d, dword [r15 + 0x40]",
            "test r8d, r8d",
            "je 0x8004c66",
            "mov rax, qword [r15 + 0x60]",
            "mov eax, dword [rax + 0x3c]",
            "mov esi, dword [rbx + 0x30]",
            "cmp esi, eax",
            "ja cryptodev_verbosity",
            "test esi, esi",
            "je 0x8004740",
            "mov edi, dword [r15 + 0x40]",
            "test edi, edi",
            "je 0x8004585",
            "mov rdi, qword [r15 + 0x60]",
            "mov qword [rbp - 0x88], rdx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call crypto_aead_setauthsize",
            "mov rdx, qword [rbp - 0x88]",
            "mov ecx, dword [rbp - 0x80]",
            "mov r11, qword [rbp - 0x78]",
            "mov rax, qword [r15 + 0x68]",
            "test ecx, ecx",
            "mov esi, 0",
            "cmove r11, rsi",
            "mov r8d, dword [rbp - 0x64]",
            "lea rdi, [r15 + 0x38]",
            "mov rsi, r12",
            "mov dword [rax + 0x30], ecx",
            "mov qword [rax + 0x40], r11",
            "cmp word [rbx + 4], 0",
            "mov rcx, r8",
            "mov qword [rbp - 0x78], r8",
            "jne cryptodev_cipher_decrypt",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbp - 0x64]",
            "add r8, qword [rbx + 0x20]",
            "add eax, dword [rbx + 0x30]",
            "mov qword [rbx + 0x28], r8",
            "mov dword [rbx + 0x48], eax",
            "mov rdi, r15",
            "call release_user_pages",
            "mov rdi, qword [rbp - 0x70]",
            "xor esi, esi",
            "call free_pages",
            "test r12d, r12d",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x4c]",
            "mov rsi, r14",
            "mov rdi, r13",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "lea rdi, [r15 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x88",
            "mov eax, r12d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, dword [r15 + 0x38]",
            "test eax, eax",
            "jne 0x8004e22",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004970",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004689",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x800467c",
            "cmp dword [0x08004676], 1",
            "jg current_task",
            "mov r9, qword [rbx + 0x10]",
            "test r9, rdx",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [rbx + 0xc]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rdx, qword [rbx + 0x10]",
            "mov r10, qword [rbx + 0x18]",
            "sub r10, rdx",
            "cmp r10d, 0x100",
            "jbe 0x80048b0",
            "mov eax, dword [0x080046bd]",
            "test eax, eax",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "cmp dword [0x080046d2], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2ea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x30]",
            "mov edx, dword [rbp - 0x64]",
            "sub r8, rax",
            "add r8, qword [rbx + 0x20]",
            "sub edx, eax",
            "mov dword [rbx + 0x48], edx",
            "mov qword [rbx + 0x28], r8",
            "jmp release_user_pages",
            "mov dword [rbx + 0x30], eax",
            "jmp 0x8004585",
            "cmp dword [0x08004757], 1",
            "jle 0x8004689",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "add eax, 1",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r8d, 0x7c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004689",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004bfe",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004810",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x8004810",
            "cmp dword [0x080047ca], 1",
            "jle 0x8004810",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x43",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x78], r11",
            "call printk",
            "mov r11, qword [rbp - 0x78]",
            "nop dword [rax + rax]",
            "movsxd rax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, 1",
            "mov dword [r15 + 0xc0], 0",
            "mov rdi, r15",
            "mov rsi, rcx",
            "lea rax, [rcx + rax - 1]",
            "shr rsi, 0xc",
            "sub edx, esi",
            "shr rax, 0xc",
            "lea ecx, [rdx + rax]",
            "mov dword [r15 + 0xbc], ecx",
            "mov esi, ecx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov ecx, dword [rbp - 0x80]",
            "je 0x8004b46",
            "mov esi, dword [0x08004871]",
            "test esi, esi",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2a0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rcx, rdx",
            "lea rax, [rdx + rax - 1]",
            "mov esi, 1",
            "shr rcx, 0xc",
            "mov rdi, r15",
            "mov qword [rbp - 0x80], r10",
            "sub esi, ecx",
            "shr rax, 0xc",
            "lea r11d, [rsi + rax]",
            "lea esi, [r11 + r11]",
            "mov dword [rbp - 0x78], r11d",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "je 0x8004a70",
            "mov r14d, dword [0x080048f9]",
            "test r14d, r14d",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x92",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rdi, qword [rbp - 0x70]",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "mov edx, dword [rbx + 0xc]",
            "mov rsi, qword [rbp - 0x70]",
            "lea rdi, [rbp - 0x50]",
            "call sg_init_one",
            "lea r11, [rbp - 0x50]",
            "jmp 0x80044a0",
            "cmp qword [rbx + 0x10], 0",
            "jne 0x8004659",
            "mov eax, dword [0x08004981]",
            "test eax, eax",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x72",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "cmp dword [0x080049c7], 0",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x276",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "xor r11d, r11d",
            "jmp 0x80044a0",
            "mov r11d, dword [0x08004a17]",
            "test r11d, r11d",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x80045e5",
            "cmp dword [0x08004a32], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov ecx, r11d",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0xc]",
            "mov edx, 1",
            "mov rdi, qword [rbx + 0x10]",
            "mov qword [rbp - 0x80], r10",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov dword [rbp - 0x78], r11d",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r12, qword [r15 + 0xd0]",
            "movsxd rdi, r11d",
            "mov dword [r15 + 0xbc], r11d",
            "shl rdi, 5",
            "mov esi, r11d",
            "mov dword [r15 + 0xc0], 0",
            "mov qword [rbp - 0x80], r10",
            "add rdi, r12",
            "mov qword [rbp - 0x60], rdi",
            "call sg_init_table",
            "mov edx, dword [rbx + 0xc]",
            "mov rdi, qword [r15 + 0xd0]",
            "mov rsi, qword [rbp - 0x60]",
            "call sg_copy",
            "mov r10, qword [rbp - 0x80]",
            "mov rdi, qword [rbp - 0x60]",
            "mov esi, r10d",
            "call sg_advance",
            "test rax, rax",
            "mov r8, rax",
            "mov qword [rbp - 0x60], rax",
            "je release_user_pages",
            "mov ecx, dword [rbx + 0xc]",
            "mov r9d, dword [rbx + 8]",
            "mov rdx, r12",
            "mov rdi, r15",
            "mov rsi, rbx",
            "call sym.srtp_auth_n_crypt",
            "mov rdi, r15",
            "mov r12d, eax",
            "call release_user_pages",
            "jmp 0x80045f0",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov edx, 1",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0x48]",
            "mov rdi, qword [rbx + 0x20]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r8, qword [r15 + 0xd0]",
            "mov ecx, dword [rbx + 0xc]",
            "mov rdx, r11",
            "mov r9d, dword [rbx + 8]",
            "mov rsi, rbx",
            "mov rdi, r15",
            "mov qword [rbp - 0x60], r8",
            "call sym.tls_auth_n_crypt",
            "mov r12d, eax",
            "jmp release_user_pages",
            "mov rdi, r15",
            "call release_user_pages",
            "mov r13d, dword [0x08004bb9]",
            "test r13d, r13d",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov r12d, 0xffffffea",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004c10], 0",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x8004628",
            "cmp dword [0x08004c28], 0",
            "jle 0x8004c16",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp 0x8004628",
            "xor eax, eax",
            "jmp 0x8004545",
            "cmp dword [0x08004c74], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x80",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004cbd], 0",
            "mov r12d, 0xffffffea",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "cmp dword [0x08004d06], 0",
            "mov r12d, 0xffffffea",
            "js 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2aa",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004d4f], 0",
            "mov r12d, 0xffffffea",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x286",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004d98], 0",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2b2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004ddb], 0",
            "mov r12d, 0xffffffea",
            "js release_user_pages",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "add rax, 0x4b8",
            "mov r9d, esi",
            "mov r8d, 0x241",
            "mov rsi, rax",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [r15 + 0x44], 0",
            "je 0x8004e34",
            "cmp dword [r15 + 0x40], 0",
            "je 0x800464c",
            "cmp dword [0x08004e3b], 0",
            "js 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x270",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004e84], 0",
            "mov r12d, 0xfffffff4",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x28c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r10d",
            "mov r8d, 0x8a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004f0c], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x25a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [0x08004f52], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x250",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004c16",
            "cmp dword [0x08004fd1], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x99",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x0800501a], 0",
            "jle 0x8004a20",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x57",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x79",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov eax, dword [r15 + 0xb4]",
            "mov edx, eax",
            "sub rdx, 1",
            "jmp 0x800467c",
            "cmp dword [0x080050ac], 0",
            "mov r12d, 0xfffffff2",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x292",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x47",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity"
        ]
    },
    "unk.0x8004cfa": {
        "function_address": "0x08004cfa",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x88",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r15, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [r15 + 0x88]",
            "test eax, eax",
            "je 0x8004427",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "lea r13, [rbx + 0x50]",
            "cmovle edx, dword [rbx + 0x4c]",
            "lea r14, [r15 + 0x78]",
            "mov eax, 0x10",
            "mov rsi, r13",
            "mov rdi, r14",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "test byte [rbx + 6], 0x20",
            "jne 0x8004640",
            "cmp dword [rbx + 0xc], 0x1000",
            "ja cryptodev_verbosity",
            "xor esi, esi",
            "mov edi, 0xd0",
            "call __get_free_pages",
            "test rax, rax",
            "mov qword [rbp - 0x70], rax",
            "je cryptodev_verbosity",
            "mov rsi, qword [rbx + 0x10]",
            "test rsi, rsi",
            "je 0x8004a08",
            "mov edx, dword [rbx + 0xc]",
            "xor r11d, r11d",
            "test edx, edx",
            "jne _copy_from_user",
            "test byte [rbx + 6], 0x10",
            "je 0x80044b3",
            "mov r12d, dword [r15 + 0x40]",
            "test r12d, r12d",
            "je 0x80047a0",
            "mov r10d, dword [r15 + 0x38]",
            "test r10d, r10d",
            "je cryptodev_verbosity",
            "cmp qword [r15 + 0x40], 0",
            "je cryptodev_verbosity",
            "lea rax, [rbp - 0x60]",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, dword [rbx + 8]",
            "mov rsi, qword [rbx + 0x18]",
            "mov r9, qword [rbx + 0x60]",
            "mov rdi, r15",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x58]",
            "mov r8d, dword [rbx + 0x48]",
            "mov qword [rbp - 0x78], r11",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x68]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "mov r12d, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r9d, dword [r15 + 0x38]",
            "mov eax, dword [rbx + 8]",
            "mov rdx, qword [rbp - 0x60]",
            "mov r12, qword [rbp - 0x58]",
            "mov ecx, dword [rbx + 0xc]",
            "test r9d, r9d",
            "mov dword [rbp - 0x64], eax",
            "je 0x8004c66",
            "mov r8d, dword [r15 + 0x40]",
            "test r8d, r8d",
            "je 0x8004c66",
            "mov rax, qword [r15 + 0x60]",
            "mov eax, dword [rax + 0x3c]",
            "mov esi, dword [rbx + 0x30]",
            "cmp esi, eax",
            "ja cryptodev_verbosity",
            "test esi, esi",
            "je 0x8004740",
            "mov edi, dword [r15 + 0x40]",
            "test edi, edi",
            "je 0x8004585",
            "mov rdi, qword [r15 + 0x60]",
            "mov qword [rbp - 0x88], rdx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call crypto_aead_setauthsize",
            "mov rdx, qword [rbp - 0x88]",
            "mov ecx, dword [rbp - 0x80]",
            "mov r11, qword [rbp - 0x78]",
            "mov rax, qword [r15 + 0x68]",
            "test ecx, ecx",
            "mov esi, 0",
            "cmove r11, rsi",
            "mov r8d, dword [rbp - 0x64]",
            "lea rdi, [r15 + 0x38]",
            "mov rsi, r12",
            "mov dword [rax + 0x30], ecx",
            "mov qword [rax + 0x40], r11",
            "cmp word [rbx + 4], 0",
            "mov rcx, r8",
            "mov qword [rbp - 0x78], r8",
            "jne cryptodev_cipher_decrypt",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbp - 0x64]",
            "add r8, qword [rbx + 0x20]",
            "add eax, dword [rbx + 0x30]",
            "mov qword [rbx + 0x28], r8",
            "mov dword [rbx + 0x48], eax",
            "mov rdi, r15",
            "call release_user_pages",
            "mov rdi, qword [rbp - 0x70]",
            "xor esi, esi",
            "call free_pages",
            "test r12d, r12d",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x4c]",
            "mov rsi, r14",
            "mov rdi, r13",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "lea rdi, [r15 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x88",
            "mov eax, r12d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, dword [r15 + 0x38]",
            "test eax, eax",
            "jne 0x8004e22",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004970",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004689",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x800467c",
            "cmp dword [0x08004676], 1",
            "jg current_task",
            "mov r9, qword [rbx + 0x10]",
            "test r9, rdx",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [rbx + 0xc]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rdx, qword [rbx + 0x10]",
            "mov r10, qword [rbx + 0x18]",
            "sub r10, rdx",
            "cmp r10d, 0x100",
            "jbe 0x80048b0",
            "mov eax, dword [0x080046bd]",
            "test eax, eax",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "cmp dword [0x080046d2], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2ea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x30]",
            "mov edx, dword [rbp - 0x64]",
            "sub r8, rax",
            "add r8, qword [rbx + 0x20]",
            "sub edx, eax",
            "mov dword [rbx + 0x48], edx",
            "mov qword [rbx + 0x28], r8",
            "jmp release_user_pages",
            "mov dword [rbx + 0x30], eax",
            "jmp 0x8004585",
            "cmp dword [0x08004757], 1",
            "jle 0x8004689",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "add eax, 1",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r8d, 0x7c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004689",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004bfe",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004810",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x8004810",
            "cmp dword [0x080047ca], 1",
            "jle 0x8004810",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x43",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x78], r11",
            "call printk",
            "mov r11, qword [rbp - 0x78]",
            "nop dword [rax + rax]",
            "movsxd rax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, 1",
            "mov dword [r15 + 0xc0], 0",
            "mov rdi, r15",
            "mov rsi, rcx",
            "lea rax, [rcx + rax - 1]",
            "shr rsi, 0xc",
            "sub edx, esi",
            "shr rax, 0xc",
            "lea ecx, [rdx + rax]",
            "mov dword [r15 + 0xbc], ecx",
            "mov esi, ecx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov ecx, dword [rbp - 0x80]",
            "je 0x8004b46",
            "mov esi, dword [0x08004871]",
            "test esi, esi",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2a0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rcx, rdx",
            "lea rax, [rdx + rax - 1]",
            "mov esi, 1",
            "shr rcx, 0xc",
            "mov rdi, r15",
            "mov qword [rbp - 0x80], r10",
            "sub esi, ecx",
            "shr rax, 0xc",
            "lea r11d, [rsi + rax]",
            "lea esi, [r11 + r11]",
            "mov dword [rbp - 0x78], r11d",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "je 0x8004a70",
            "mov r14d, dword [0x080048f9]",
            "test r14d, r14d",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x92",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rdi, qword [rbp - 0x70]",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "mov edx, dword [rbx + 0xc]",
            "mov rsi, qword [rbp - 0x70]",
            "lea rdi, [rbp - 0x50]",
            "call sg_init_one",
            "lea r11, [rbp - 0x50]",
            "jmp 0x80044a0",
            "cmp qword [rbx + 0x10], 0",
            "jne 0x8004659",
            "mov eax, dword [0x08004981]",
            "test eax, eax",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x72",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "cmp dword [0x080049c7], 0",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x276",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "xor r11d, r11d",
            "jmp 0x80044a0",
            "mov r11d, dword [0x08004a17]",
            "test r11d, r11d",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x80045e5",
            "cmp dword [0x08004a32], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov ecx, r11d",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0xc]",
            "mov edx, 1",
            "mov rdi, qword [rbx + 0x10]",
            "mov qword [rbp - 0x80], r10",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov dword [rbp - 0x78], r11d",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r12, qword [r15 + 0xd0]",
            "movsxd rdi, r11d",
            "mov dword [r15 + 0xbc], r11d",
            "shl rdi, 5",
            "mov esi, r11d",
            "mov dword [r15 + 0xc0], 0",
            "mov qword [rbp - 0x80], r10",
            "add rdi, r12",
            "mov qword [rbp - 0x60], rdi",
            "call sg_init_table",
            "mov edx, dword [rbx + 0xc]",
            "mov rdi, qword [r15 + 0xd0]",
            "mov rsi, qword [rbp - 0x60]",
            "call sg_copy",
            "mov r10, qword [rbp - 0x80]",
            "mov rdi, qword [rbp - 0x60]",
            "mov esi, r10d",
            "call sg_advance",
            "test rax, rax",
            "mov r8, rax",
            "mov qword [rbp - 0x60], rax",
            "je release_user_pages",
            "mov ecx, dword [rbx + 0xc]",
            "mov r9d, dword [rbx + 8]",
            "mov rdx, r12",
            "mov rdi, r15",
            "mov rsi, rbx",
            "call sym.srtp_auth_n_crypt",
            "mov rdi, r15",
            "mov r12d, eax",
            "call release_user_pages",
            "jmp 0x80045f0",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov edx, 1",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0x48]",
            "mov rdi, qword [rbx + 0x20]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r8, qword [r15 + 0xd0]",
            "mov ecx, dword [rbx + 0xc]",
            "mov rdx, r11",
            "mov r9d, dword [rbx + 8]",
            "mov rsi, rbx",
            "mov rdi, r15",
            "mov qword [rbp - 0x60], r8",
            "call sym.tls_auth_n_crypt",
            "mov r12d, eax",
            "jmp release_user_pages",
            "mov rdi, r15",
            "call release_user_pages",
            "mov r13d, dword [0x08004bb9]",
            "test r13d, r13d",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov r12d, 0xffffffea",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004c10], 0",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x8004628",
            "cmp dword [0x08004c28], 0",
            "jle 0x8004c16",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp 0x8004628",
            "xor eax, eax",
            "jmp 0x8004545",
            "cmp dword [0x08004c74], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x80",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004cbd], 0",
            "mov r12d, 0xffffffea",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "cmp dword [0x08004d06], 0",
            "mov r12d, 0xffffffea",
            "js 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2aa",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004d4f], 0",
            "mov r12d, 0xffffffea",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x286",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004d98], 0",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2b2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004ddb], 0",
            "mov r12d, 0xffffffea",
            "js release_user_pages",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "add rax, 0x4b8",
            "mov r9d, esi",
            "mov r8d, 0x241",
            "mov rsi, rax",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [r15 + 0x44], 0",
            "je 0x8004e34",
            "cmp dword [r15 + 0x40], 0",
            "je 0x800464c",
            "cmp dword [0x08004e3b], 0",
            "js 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x270",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004e84], 0",
            "mov r12d, 0xfffffff4",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x28c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r10d",
            "mov r8d, 0x8a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004f0c], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x25a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [0x08004f52], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x250",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004c16",
            "cmp dword [0x08004fd1], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x99",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x0800501a], 0",
            "jle 0x8004a20",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x57",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x79",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov eax, dword [r15 + 0xb4]",
            "mov edx, eax",
            "sub rdx, 1",
            "jmp 0x800467c",
            "cmp dword [0x080050ac], 0",
            "mov r12d, 0xfffffff2",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x292",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x47",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity"
        ]
    },
    "unk.0x8004d43": {
        "function_address": "0x08004d43",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x88",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r15, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [r15 + 0x88]",
            "test eax, eax",
            "je 0x8004427",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "lea r13, [rbx + 0x50]",
            "cmovle edx, dword [rbx + 0x4c]",
            "lea r14, [r15 + 0x78]",
            "mov eax, 0x10",
            "mov rsi, r13",
            "mov rdi, r14",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "test byte [rbx + 6], 0x20",
            "jne 0x8004640",
            "cmp dword [rbx + 0xc], 0x1000",
            "ja cryptodev_verbosity",
            "xor esi, esi",
            "mov edi, 0xd0",
            "call __get_free_pages",
            "test rax, rax",
            "mov qword [rbp - 0x70], rax",
            "je cryptodev_verbosity",
            "mov rsi, qword [rbx + 0x10]",
            "test rsi, rsi",
            "je 0x8004a08",
            "mov edx, dword [rbx + 0xc]",
            "xor r11d, r11d",
            "test edx, edx",
            "jne _copy_from_user",
            "test byte [rbx + 6], 0x10",
            "je 0x80044b3",
            "mov r12d, dword [r15 + 0x40]",
            "test r12d, r12d",
            "je 0x80047a0",
            "mov r10d, dword [r15 + 0x38]",
            "test r10d, r10d",
            "je cryptodev_verbosity",
            "cmp qword [r15 + 0x40], 0",
            "je cryptodev_verbosity",
            "lea rax, [rbp - 0x60]",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, dword [rbx + 8]",
            "mov rsi, qword [rbx + 0x18]",
            "mov r9, qword [rbx + 0x60]",
            "mov rdi, r15",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x58]",
            "mov r8d, dword [rbx + 0x48]",
            "mov qword [rbp - 0x78], r11",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x68]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "mov r12d, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r9d, dword [r15 + 0x38]",
            "mov eax, dword [rbx + 8]",
            "mov rdx, qword [rbp - 0x60]",
            "mov r12, qword [rbp - 0x58]",
            "mov ecx, dword [rbx + 0xc]",
            "test r9d, r9d",
            "mov dword [rbp - 0x64], eax",
            "je 0x8004c66",
            "mov r8d, dword [r15 + 0x40]",
            "test r8d, r8d",
            "je 0x8004c66",
            "mov rax, qword [r15 + 0x60]",
            "mov eax, dword [rax + 0x3c]",
            "mov esi, dword [rbx + 0x30]",
            "cmp esi, eax",
            "ja cryptodev_verbosity",
            "test esi, esi",
            "je 0x8004740",
            "mov edi, dword [r15 + 0x40]",
            "test edi, edi",
            "je 0x8004585",
            "mov rdi, qword [r15 + 0x60]",
            "mov qword [rbp - 0x88], rdx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call crypto_aead_setauthsize",
            "mov rdx, qword [rbp - 0x88]",
            "mov ecx, dword [rbp - 0x80]",
            "mov r11, qword [rbp - 0x78]",
            "mov rax, qword [r15 + 0x68]",
            "test ecx, ecx",
            "mov esi, 0",
            "cmove r11, rsi",
            "mov r8d, dword [rbp - 0x64]",
            "lea rdi, [r15 + 0x38]",
            "mov rsi, r12",
            "mov dword [rax + 0x30], ecx",
            "mov qword [rax + 0x40], r11",
            "cmp word [rbx + 4], 0",
            "mov rcx, r8",
            "mov qword [rbp - 0x78], r8",
            "jne cryptodev_cipher_decrypt",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbp - 0x64]",
            "add r8, qword [rbx + 0x20]",
            "add eax, dword [rbx + 0x30]",
            "mov qword [rbx + 0x28], r8",
            "mov dword [rbx + 0x48], eax",
            "mov rdi, r15",
            "call release_user_pages",
            "mov rdi, qword [rbp - 0x70]",
            "xor esi, esi",
            "call free_pages",
            "test r12d, r12d",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x4c]",
            "mov rsi, r14",
            "mov rdi, r13",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "lea rdi, [r15 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x88",
            "mov eax, r12d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, dword [r15 + 0x38]",
            "test eax, eax",
            "jne 0x8004e22",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004970",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004689",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x800467c",
            "cmp dword [0x08004676], 1",
            "jg current_task",
            "mov r9, qword [rbx + 0x10]",
            "test r9, rdx",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [rbx + 0xc]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rdx, qword [rbx + 0x10]",
            "mov r10, qword [rbx + 0x18]",
            "sub r10, rdx",
            "cmp r10d, 0x100",
            "jbe 0x80048b0",
            "mov eax, dword [0x080046bd]",
            "test eax, eax",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "cmp dword [0x080046d2], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2ea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x30]",
            "mov edx, dword [rbp - 0x64]",
            "sub r8, rax",
            "add r8, qword [rbx + 0x20]",
            "sub edx, eax",
            "mov dword [rbx + 0x48], edx",
            "mov qword [rbx + 0x28], r8",
            "jmp release_user_pages",
            "mov dword [rbx + 0x30], eax",
            "jmp 0x8004585",
            "cmp dword [0x08004757], 1",
            "jle 0x8004689",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "add eax, 1",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r8d, 0x7c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004689",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004bfe",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004810",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x8004810",
            "cmp dword [0x080047ca], 1",
            "jle 0x8004810",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x43",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x78], r11",
            "call printk",
            "mov r11, qword [rbp - 0x78]",
            "nop dword [rax + rax]",
            "movsxd rax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, 1",
            "mov dword [r15 + 0xc0], 0",
            "mov rdi, r15",
            "mov rsi, rcx",
            "lea rax, [rcx + rax - 1]",
            "shr rsi, 0xc",
            "sub edx, esi",
            "shr rax, 0xc",
            "lea ecx, [rdx + rax]",
            "mov dword [r15 + 0xbc], ecx",
            "mov esi, ecx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov ecx, dword [rbp - 0x80]",
            "je 0x8004b46",
            "mov esi, dword [0x08004871]",
            "test esi, esi",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2a0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rcx, rdx",
            "lea rax, [rdx + rax - 1]",
            "mov esi, 1",
            "shr rcx, 0xc",
            "mov rdi, r15",
            "mov qword [rbp - 0x80], r10",
            "sub esi, ecx",
            "shr rax, 0xc",
            "lea r11d, [rsi + rax]",
            "lea esi, [r11 + r11]",
            "mov dword [rbp - 0x78], r11d",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "je 0x8004a70",
            "mov r14d, dword [0x080048f9]",
            "test r14d, r14d",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x92",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rdi, qword [rbp - 0x70]",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "mov edx, dword [rbx + 0xc]",
            "mov rsi, qword [rbp - 0x70]",
            "lea rdi, [rbp - 0x50]",
            "call sg_init_one",
            "lea r11, [rbp - 0x50]",
            "jmp 0x80044a0",
            "cmp qword [rbx + 0x10], 0",
            "jne 0x8004659",
            "mov eax, dword [0x08004981]",
            "test eax, eax",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x72",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "cmp dword [0x080049c7], 0",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x276",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "xor r11d, r11d",
            "jmp 0x80044a0",
            "mov r11d, dword [0x08004a17]",
            "test r11d, r11d",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x80045e5",
            "cmp dword [0x08004a32], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov ecx, r11d",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0xc]",
            "mov edx, 1",
            "mov rdi, qword [rbx + 0x10]",
            "mov qword [rbp - 0x80], r10",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov dword [rbp - 0x78], r11d",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r12, qword [r15 + 0xd0]",
            "movsxd rdi, r11d",
            "mov dword [r15 + 0xbc], r11d",
            "shl rdi, 5",
            "mov esi, r11d",
            "mov dword [r15 + 0xc0], 0",
            "mov qword [rbp - 0x80], r10",
            "add rdi, r12",
            "mov qword [rbp - 0x60], rdi",
            "call sg_init_table",
            "mov edx, dword [rbx + 0xc]",
            "mov rdi, qword [r15 + 0xd0]",
            "mov rsi, qword [rbp - 0x60]",
            "call sg_copy",
            "mov r10, qword [rbp - 0x80]",
            "mov rdi, qword [rbp - 0x60]",
            "mov esi, r10d",
            "call sg_advance",
            "test rax, rax",
            "mov r8, rax",
            "mov qword [rbp - 0x60], rax",
            "je release_user_pages",
            "mov ecx, dword [rbx + 0xc]",
            "mov r9d, dword [rbx + 8]",
            "mov rdx, r12",
            "mov rdi, r15",
            "mov rsi, rbx",
            "call sym.srtp_auth_n_crypt",
            "mov rdi, r15",
            "mov r12d, eax",
            "call release_user_pages",
            "jmp 0x80045f0",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov edx, 1",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0x48]",
            "mov rdi, qword [rbx + 0x20]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r8, qword [r15 + 0xd0]",
            "mov ecx, dword [rbx + 0xc]",
            "mov rdx, r11",
            "mov r9d, dword [rbx + 8]",
            "mov rsi, rbx",
            "mov rdi, r15",
            "mov qword [rbp - 0x60], r8",
            "call sym.tls_auth_n_crypt",
            "mov r12d, eax",
            "jmp release_user_pages",
            "mov rdi, r15",
            "call release_user_pages",
            "mov r13d, dword [0x08004bb9]",
            "test r13d, r13d",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov r12d, 0xffffffea",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004c10], 0",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x8004628",
            "cmp dword [0x08004c28], 0",
            "jle 0x8004c16",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp 0x8004628",
            "xor eax, eax",
            "jmp 0x8004545",
            "cmp dword [0x08004c74], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x80",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004cbd], 0",
            "mov r12d, 0xffffffea",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "cmp dword [0x08004d06], 0",
            "mov r12d, 0xffffffea",
            "js 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2aa",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004d4f], 0",
            "mov r12d, 0xffffffea",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x286",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004d98], 0",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2b2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004ddb], 0",
            "mov r12d, 0xffffffea",
            "js release_user_pages",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "add rax, 0x4b8",
            "mov r9d, esi",
            "mov r8d, 0x241",
            "mov rsi, rax",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [r15 + 0x44], 0",
            "je 0x8004e34",
            "cmp dword [r15 + 0x40], 0",
            "je 0x800464c",
            "cmp dword [0x08004e3b], 0",
            "js 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x270",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004e84], 0",
            "mov r12d, 0xfffffff4",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x28c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r10d",
            "mov r8d, 0x8a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004f0c], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x25a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [0x08004f52], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x250",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004c16",
            "cmp dword [0x08004fd1], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x99",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x0800501a], 0",
            "jle 0x8004a20",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x57",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x79",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov eax, dword [r15 + 0xb4]",
            "mov edx, eax",
            "sub rdx, 1",
            "jmp 0x800467c",
            "cmp dword [0x080050ac], 0",
            "mov r12d, 0xfffffff2",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x292",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x47",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity"
        ]
    },
    "unk.0x8004d8c": {
        "function_address": "0x08004d8c",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x88",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r15, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [r15 + 0x88]",
            "test eax, eax",
            "je 0x8004427",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "lea r13, [rbx + 0x50]",
            "cmovle edx, dword [rbx + 0x4c]",
            "lea r14, [r15 + 0x78]",
            "mov eax, 0x10",
            "mov rsi, r13",
            "mov rdi, r14",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "test byte [rbx + 6], 0x20",
            "jne 0x8004640",
            "cmp dword [rbx + 0xc], 0x1000",
            "ja cryptodev_verbosity",
            "xor esi, esi",
            "mov edi, 0xd0",
            "call __get_free_pages",
            "test rax, rax",
            "mov qword [rbp - 0x70], rax",
            "je cryptodev_verbosity",
            "mov rsi, qword [rbx + 0x10]",
            "test rsi, rsi",
            "je 0x8004a08",
            "mov edx, dword [rbx + 0xc]",
            "xor r11d, r11d",
            "test edx, edx",
            "jne _copy_from_user",
            "test byte [rbx + 6], 0x10",
            "je 0x80044b3",
            "mov r12d, dword [r15 + 0x40]",
            "test r12d, r12d",
            "je 0x80047a0",
            "mov r10d, dword [r15 + 0x38]",
            "test r10d, r10d",
            "je cryptodev_verbosity",
            "cmp qword [r15 + 0x40], 0",
            "je cryptodev_verbosity",
            "lea rax, [rbp - 0x60]",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, dword [rbx + 8]",
            "mov rsi, qword [rbx + 0x18]",
            "mov r9, qword [rbx + 0x60]",
            "mov rdi, r15",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x58]",
            "mov r8d, dword [rbx + 0x48]",
            "mov qword [rbp - 0x78], r11",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x68]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "mov r12d, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r9d, dword [r15 + 0x38]",
            "mov eax, dword [rbx + 8]",
            "mov rdx, qword [rbp - 0x60]",
            "mov r12, qword [rbp - 0x58]",
            "mov ecx, dword [rbx + 0xc]",
            "test r9d, r9d",
            "mov dword [rbp - 0x64], eax",
            "je 0x8004c66",
            "mov r8d, dword [r15 + 0x40]",
            "test r8d, r8d",
            "je 0x8004c66",
            "mov rax, qword [r15 + 0x60]",
            "mov eax, dword [rax + 0x3c]",
            "mov esi, dword [rbx + 0x30]",
            "cmp esi, eax",
            "ja cryptodev_verbosity",
            "test esi, esi",
            "je 0x8004740",
            "mov edi, dword [r15 + 0x40]",
            "test edi, edi",
            "je 0x8004585",
            "mov rdi, qword [r15 + 0x60]",
            "mov qword [rbp - 0x88], rdx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call crypto_aead_setauthsize",
            "mov rdx, qword [rbp - 0x88]",
            "mov ecx, dword [rbp - 0x80]",
            "mov r11, qword [rbp - 0x78]",
            "mov rax, qword [r15 + 0x68]",
            "test ecx, ecx",
            "mov esi, 0",
            "cmove r11, rsi",
            "mov r8d, dword [rbp - 0x64]",
            "lea rdi, [r15 + 0x38]",
            "mov rsi, r12",
            "mov dword [rax + 0x30], ecx",
            "mov qword [rax + 0x40], r11",
            "cmp word [rbx + 4], 0",
            "mov rcx, r8",
            "mov qword [rbp - 0x78], r8",
            "jne cryptodev_cipher_decrypt",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbp - 0x64]",
            "add r8, qword [rbx + 0x20]",
            "add eax, dword [rbx + 0x30]",
            "mov qword [rbx + 0x28], r8",
            "mov dword [rbx + 0x48], eax",
            "mov rdi, r15",
            "call release_user_pages",
            "mov rdi, qword [rbp - 0x70]",
            "xor esi, esi",
            "call free_pages",
            "test r12d, r12d",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x4c]",
            "mov rsi, r14",
            "mov rdi, r13",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "lea rdi, [r15 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x88",
            "mov eax, r12d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, dword [r15 + 0x38]",
            "test eax, eax",
            "jne 0x8004e22",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004970",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004689",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x800467c",
            "cmp dword [0x08004676], 1",
            "jg current_task",
            "mov r9, qword [rbx + 0x10]",
            "test r9, rdx",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [rbx + 0xc]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rdx, qword [rbx + 0x10]",
            "mov r10, qword [rbx + 0x18]",
            "sub r10, rdx",
            "cmp r10d, 0x100",
            "jbe 0x80048b0",
            "mov eax, dword [0x080046bd]",
            "test eax, eax",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "cmp dword [0x080046d2], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2ea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x30]",
            "mov edx, dword [rbp - 0x64]",
            "sub r8, rax",
            "add r8, qword [rbx + 0x20]",
            "sub edx, eax",
            "mov dword [rbx + 0x48], edx",
            "mov qword [rbx + 0x28], r8",
            "jmp release_user_pages",
            "mov dword [rbx + 0x30], eax",
            "jmp 0x8004585",
            "cmp dword [0x08004757], 1",
            "jle 0x8004689",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "add eax, 1",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r8d, 0x7c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004689",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004bfe",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004810",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x8004810",
            "cmp dword [0x080047ca], 1",
            "jle 0x8004810",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x43",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x78], r11",
            "call printk",
            "mov r11, qword [rbp - 0x78]",
            "nop dword [rax + rax]",
            "movsxd rax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, 1",
            "mov dword [r15 + 0xc0], 0",
            "mov rdi, r15",
            "mov rsi, rcx",
            "lea rax, [rcx + rax - 1]",
            "shr rsi, 0xc",
            "sub edx, esi",
            "shr rax, 0xc",
            "lea ecx, [rdx + rax]",
            "mov dword [r15 + 0xbc], ecx",
            "mov esi, ecx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov ecx, dword [rbp - 0x80]",
            "je 0x8004b46",
            "mov esi, dword [0x08004871]",
            "test esi, esi",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2a0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rcx, rdx",
            "lea rax, [rdx + rax - 1]",
            "mov esi, 1",
            "shr rcx, 0xc",
            "mov rdi, r15",
            "mov qword [rbp - 0x80], r10",
            "sub esi, ecx",
            "shr rax, 0xc",
            "lea r11d, [rsi + rax]",
            "lea esi, [r11 + r11]",
            "mov dword [rbp - 0x78], r11d",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "je 0x8004a70",
            "mov r14d, dword [0x080048f9]",
            "test r14d, r14d",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x92",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rdi, qword [rbp - 0x70]",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "mov edx, dword [rbx + 0xc]",
            "mov rsi, qword [rbp - 0x70]",
            "lea rdi, [rbp - 0x50]",
            "call sg_init_one",
            "lea r11, [rbp - 0x50]",
            "jmp 0x80044a0",
            "cmp qword [rbx + 0x10], 0",
            "jne 0x8004659",
            "mov eax, dword [0x08004981]",
            "test eax, eax",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x72",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "cmp dword [0x080049c7], 0",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x276",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "xor r11d, r11d",
            "jmp 0x80044a0",
            "mov r11d, dword [0x08004a17]",
            "test r11d, r11d",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x80045e5",
            "cmp dword [0x08004a32], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov ecx, r11d",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0xc]",
            "mov edx, 1",
            "mov rdi, qword [rbx + 0x10]",
            "mov qword [rbp - 0x80], r10",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov dword [rbp - 0x78], r11d",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r12, qword [r15 + 0xd0]",
            "movsxd rdi, r11d",
            "mov dword [r15 + 0xbc], r11d",
            "shl rdi, 5",
            "mov esi, r11d",
            "mov dword [r15 + 0xc0], 0",
            "mov qword [rbp - 0x80], r10",
            "add rdi, r12",
            "mov qword [rbp - 0x60], rdi",
            "call sg_init_table",
            "mov edx, dword [rbx + 0xc]",
            "mov rdi, qword [r15 + 0xd0]",
            "mov rsi, qword [rbp - 0x60]",
            "call sg_copy",
            "mov r10, qword [rbp - 0x80]",
            "mov rdi, qword [rbp - 0x60]",
            "mov esi, r10d",
            "call sg_advance",
            "test rax, rax",
            "mov r8, rax",
            "mov qword [rbp - 0x60], rax",
            "je release_user_pages",
            "mov ecx, dword [rbx + 0xc]",
            "mov r9d, dword [rbx + 8]",
            "mov rdx, r12",
            "mov rdi, r15",
            "mov rsi, rbx",
            "call sym.srtp_auth_n_crypt",
            "mov rdi, r15",
            "mov r12d, eax",
            "call release_user_pages",
            "jmp 0x80045f0",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov edx, 1",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0x48]",
            "mov rdi, qword [rbx + 0x20]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r8, qword [r15 + 0xd0]",
            "mov ecx, dword [rbx + 0xc]",
            "mov rdx, r11",
            "mov r9d, dword [rbx + 8]",
            "mov rsi, rbx",
            "mov rdi, r15",
            "mov qword [rbp - 0x60], r8",
            "call sym.tls_auth_n_crypt",
            "mov r12d, eax",
            "jmp release_user_pages",
            "mov rdi, r15",
            "call release_user_pages",
            "mov r13d, dword [0x08004bb9]",
            "test r13d, r13d",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov r12d, 0xffffffea",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004c10], 0",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x8004628",
            "cmp dword [0x08004c28], 0",
            "jle 0x8004c16",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp 0x8004628",
            "xor eax, eax",
            "jmp 0x8004545",
            "cmp dword [0x08004c74], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x80",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004cbd], 0",
            "mov r12d, 0xffffffea",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "cmp dword [0x08004d06], 0",
            "mov r12d, 0xffffffea",
            "js 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2aa",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004d4f], 0",
            "mov r12d, 0xffffffea",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x286",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004d98], 0",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2b2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004ddb], 0",
            "mov r12d, 0xffffffea",
            "js release_user_pages",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "add rax, 0x4b8",
            "mov r9d, esi",
            "mov r8d, 0x241",
            "mov rsi, rax",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [r15 + 0x44], 0",
            "je 0x8004e34",
            "cmp dword [r15 + 0x40], 0",
            "je 0x800464c",
            "cmp dword [0x08004e3b], 0",
            "js 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x270",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004e84], 0",
            "mov r12d, 0xfffffff4",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x28c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r10d",
            "mov r8d, 0x8a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004f0c], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x25a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [0x08004f52], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x250",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004c16",
            "cmp dword [0x08004fd1], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x99",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x0800501a], 0",
            "jle 0x8004a20",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x57",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x79",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov eax, dword [r15 + 0xb4]",
            "mov edx, eax",
            "sub rdx, 1",
            "jmp 0x800467c",
            "cmp dword [0x080050ac], 0",
            "mov r12d, 0xfffffff2",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x292",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x47",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity"
        ]
    },
    "unk.0x8004dcf": {
        "function_address": "0x08004dcf",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x88",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r15, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [r15 + 0x88]",
            "test eax, eax",
            "je 0x8004427",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "lea r13, [rbx + 0x50]",
            "cmovle edx, dword [rbx + 0x4c]",
            "lea r14, [r15 + 0x78]",
            "mov eax, 0x10",
            "mov rsi, r13",
            "mov rdi, r14",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "test byte [rbx + 6], 0x20",
            "jne 0x8004640",
            "cmp dword [rbx + 0xc], 0x1000",
            "ja cryptodev_verbosity",
            "xor esi, esi",
            "mov edi, 0xd0",
            "call __get_free_pages",
            "test rax, rax",
            "mov qword [rbp - 0x70], rax",
            "je cryptodev_verbosity",
            "mov rsi, qword [rbx + 0x10]",
            "test rsi, rsi",
            "je 0x8004a08",
            "mov edx, dword [rbx + 0xc]",
            "xor r11d, r11d",
            "test edx, edx",
            "jne _copy_from_user",
            "test byte [rbx + 6], 0x10",
            "je 0x80044b3",
            "mov r12d, dword [r15 + 0x40]",
            "test r12d, r12d",
            "je 0x80047a0",
            "mov r10d, dword [r15 + 0x38]",
            "test r10d, r10d",
            "je cryptodev_verbosity",
            "cmp qword [r15 + 0x40], 0",
            "je cryptodev_verbosity",
            "lea rax, [rbp - 0x60]",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, dword [rbx + 8]",
            "mov rsi, qword [rbx + 0x18]",
            "mov r9, qword [rbx + 0x60]",
            "mov rdi, r15",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x58]",
            "mov r8d, dword [rbx + 0x48]",
            "mov qword [rbp - 0x78], r11",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x68]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "mov r12d, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r9d, dword [r15 + 0x38]",
            "mov eax, dword [rbx + 8]",
            "mov rdx, qword [rbp - 0x60]",
            "mov r12, qword [rbp - 0x58]",
            "mov ecx, dword [rbx + 0xc]",
            "test r9d, r9d",
            "mov dword [rbp - 0x64], eax",
            "je 0x8004c66",
            "mov r8d, dword [r15 + 0x40]",
            "test r8d, r8d",
            "je 0x8004c66",
            "mov rax, qword [r15 + 0x60]",
            "mov eax, dword [rax + 0x3c]",
            "mov esi, dword [rbx + 0x30]",
            "cmp esi, eax",
            "ja cryptodev_verbosity",
            "test esi, esi",
            "je 0x8004740",
            "mov edi, dword [r15 + 0x40]",
            "test edi, edi",
            "je 0x8004585",
            "mov rdi, qword [r15 + 0x60]",
            "mov qword [rbp - 0x88], rdx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call crypto_aead_setauthsize",
            "mov rdx, qword [rbp - 0x88]",
            "mov ecx, dword [rbp - 0x80]",
            "mov r11, qword [rbp - 0x78]",
            "mov rax, qword [r15 + 0x68]",
            "test ecx, ecx",
            "mov esi, 0",
            "cmove r11, rsi",
            "mov r8d, dword [rbp - 0x64]",
            "lea rdi, [r15 + 0x38]",
            "mov rsi, r12",
            "mov dword [rax + 0x30], ecx",
            "mov qword [rax + 0x40], r11",
            "cmp word [rbx + 4], 0",
            "mov rcx, r8",
            "mov qword [rbp - 0x78], r8",
            "jne cryptodev_cipher_decrypt",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbp - 0x64]",
            "add r8, qword [rbx + 0x20]",
            "add eax, dword [rbx + 0x30]",
            "mov qword [rbx + 0x28], r8",
            "mov dword [rbx + 0x48], eax",
            "mov rdi, r15",
            "call release_user_pages",
            "mov rdi, qword [rbp - 0x70]",
            "xor esi, esi",
            "call free_pages",
            "test r12d, r12d",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x4c]",
            "mov rsi, r14",
            "mov rdi, r13",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "lea rdi, [r15 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x88",
            "mov eax, r12d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, dword [r15 + 0x38]",
            "test eax, eax",
            "jne 0x8004e22",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004970",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004689",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x800467c",
            "cmp dword [0x08004676], 1",
            "jg current_task",
            "mov r9, qword [rbx + 0x10]",
            "test r9, rdx",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [rbx + 0xc]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rdx, qword [rbx + 0x10]",
            "mov r10, qword [rbx + 0x18]",
            "sub r10, rdx",
            "cmp r10d, 0x100",
            "jbe 0x80048b0",
            "mov eax, dword [0x080046bd]",
            "test eax, eax",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "cmp dword [0x080046d2], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2ea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x30]",
            "mov edx, dword [rbp - 0x64]",
            "sub r8, rax",
            "add r8, qword [rbx + 0x20]",
            "sub edx, eax",
            "mov dword [rbx + 0x48], edx",
            "mov qword [rbx + 0x28], r8",
            "jmp release_user_pages",
            "mov dword [rbx + 0x30], eax",
            "jmp 0x8004585",
            "cmp dword [0x08004757], 1",
            "jle 0x8004689",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "add eax, 1",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r8d, 0x7c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004689",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004bfe",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004810",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x8004810",
            "cmp dword [0x080047ca], 1",
            "jle 0x8004810",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x43",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x78], r11",
            "call printk",
            "mov r11, qword [rbp - 0x78]",
            "nop dword [rax + rax]",
            "movsxd rax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, 1",
            "mov dword [r15 + 0xc0], 0",
            "mov rdi, r15",
            "mov rsi, rcx",
            "lea rax, [rcx + rax - 1]",
            "shr rsi, 0xc",
            "sub edx, esi",
            "shr rax, 0xc",
            "lea ecx, [rdx + rax]",
            "mov dword [r15 + 0xbc], ecx",
            "mov esi, ecx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov ecx, dword [rbp - 0x80]",
            "je 0x8004b46",
            "mov esi, dword [0x08004871]",
            "test esi, esi",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2a0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rcx, rdx",
            "lea rax, [rdx + rax - 1]",
            "mov esi, 1",
            "shr rcx, 0xc",
            "mov rdi, r15",
            "mov qword [rbp - 0x80], r10",
            "sub esi, ecx",
            "shr rax, 0xc",
            "lea r11d, [rsi + rax]",
            "lea esi, [r11 + r11]",
            "mov dword [rbp - 0x78], r11d",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "je 0x8004a70",
            "mov r14d, dword [0x080048f9]",
            "test r14d, r14d",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x92",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rdi, qword [rbp - 0x70]",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "mov edx, dword [rbx + 0xc]",
            "mov rsi, qword [rbp - 0x70]",
            "lea rdi, [rbp - 0x50]",
            "call sg_init_one",
            "lea r11, [rbp - 0x50]",
            "jmp 0x80044a0",
            "cmp qword [rbx + 0x10], 0",
            "jne 0x8004659",
            "mov eax, dword [0x08004981]",
            "test eax, eax",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x72",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "cmp dword [0x080049c7], 0",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x276",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "xor r11d, r11d",
            "jmp 0x80044a0",
            "mov r11d, dword [0x08004a17]",
            "test r11d, r11d",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x80045e5",
            "cmp dword [0x08004a32], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov ecx, r11d",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0xc]",
            "mov edx, 1",
            "mov rdi, qword [rbx + 0x10]",
            "mov qword [rbp - 0x80], r10",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov dword [rbp - 0x78], r11d",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r12, qword [r15 + 0xd0]",
            "movsxd rdi, r11d",
            "mov dword [r15 + 0xbc], r11d",
            "shl rdi, 5",
            "mov esi, r11d",
            "mov dword [r15 + 0xc0], 0",
            "mov qword [rbp - 0x80], r10",
            "add rdi, r12",
            "mov qword [rbp - 0x60], rdi",
            "call sg_init_table",
            "mov edx, dword [rbx + 0xc]",
            "mov rdi, qword [r15 + 0xd0]",
            "mov rsi, qword [rbp - 0x60]",
            "call sg_copy",
            "mov r10, qword [rbp - 0x80]",
            "mov rdi, qword [rbp - 0x60]",
            "mov esi, r10d",
            "call sg_advance",
            "test rax, rax",
            "mov r8, rax",
            "mov qword [rbp - 0x60], rax",
            "je release_user_pages",
            "mov ecx, dword [rbx + 0xc]",
            "mov r9d, dword [rbx + 8]",
            "mov rdx, r12",
            "mov rdi, r15",
            "mov rsi, rbx",
            "call sym.srtp_auth_n_crypt",
            "mov rdi, r15",
            "mov r12d, eax",
            "call release_user_pages",
            "jmp 0x80045f0",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov edx, 1",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0x48]",
            "mov rdi, qword [rbx + 0x20]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r8, qword [r15 + 0xd0]",
            "mov ecx, dword [rbx + 0xc]",
            "mov rdx, r11",
            "mov r9d, dword [rbx + 8]",
            "mov rsi, rbx",
            "mov rdi, r15",
            "mov qword [rbp - 0x60], r8",
            "call sym.tls_auth_n_crypt",
            "mov r12d, eax",
            "jmp release_user_pages",
            "mov rdi, r15",
            "call release_user_pages",
            "mov r13d, dword [0x08004bb9]",
            "test r13d, r13d",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov r12d, 0xffffffea",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004c10], 0",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x8004628",
            "cmp dword [0x08004c28], 0",
            "jle 0x8004c16",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp 0x8004628",
            "xor eax, eax",
            "jmp 0x8004545",
            "cmp dword [0x08004c74], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x80",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004cbd], 0",
            "mov r12d, 0xffffffea",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "cmp dword [0x08004d06], 0",
            "mov r12d, 0xffffffea",
            "js 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2aa",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004d4f], 0",
            "mov r12d, 0xffffffea",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x286",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004d98], 0",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2b2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004ddb], 0",
            "mov r12d, 0xffffffea",
            "js release_user_pages",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "add rax, 0x4b8",
            "mov r9d, esi",
            "mov r8d, 0x241",
            "mov rsi, rax",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [r15 + 0x44], 0",
            "je 0x8004e34",
            "cmp dword [r15 + 0x40], 0",
            "je 0x800464c",
            "cmp dword [0x08004e3b], 0",
            "js 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x270",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004e84], 0",
            "mov r12d, 0xfffffff4",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x28c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r10d",
            "mov r8d, 0x8a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004f0c], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x25a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [0x08004f52], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x250",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004c16",
            "cmp dword [0x08004fd1], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x99",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x0800501a], 0",
            "jle 0x8004a20",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x57",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x79",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov eax, dword [r15 + 0xb4]",
            "mov edx, eax",
            "sub rdx, 1",
            "jmp 0x800467c",
            "cmp dword [0x080050ac], 0",
            "mov r12d, 0xfffffff2",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x292",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x47",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity"
        ]
    },
    "unk.0x8004e1d": {
        "function_address": "0x08004e1d",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x88",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r15, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [r15 + 0x88]",
            "test eax, eax",
            "je 0x8004427",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "lea r13, [rbx + 0x50]",
            "cmovle edx, dword [rbx + 0x4c]",
            "lea r14, [r15 + 0x78]",
            "mov eax, 0x10",
            "mov rsi, r13",
            "mov rdi, r14",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "test byte [rbx + 6], 0x20",
            "jne 0x8004640",
            "cmp dword [rbx + 0xc], 0x1000",
            "ja cryptodev_verbosity",
            "xor esi, esi",
            "mov edi, 0xd0",
            "call __get_free_pages",
            "test rax, rax",
            "mov qword [rbp - 0x70], rax",
            "je cryptodev_verbosity",
            "mov rsi, qword [rbx + 0x10]",
            "test rsi, rsi",
            "je 0x8004a08",
            "mov edx, dword [rbx + 0xc]",
            "xor r11d, r11d",
            "test edx, edx",
            "jne _copy_from_user",
            "test byte [rbx + 6], 0x10",
            "je 0x80044b3",
            "mov r12d, dword [r15 + 0x40]",
            "test r12d, r12d",
            "je 0x80047a0",
            "mov r10d, dword [r15 + 0x38]",
            "test r10d, r10d",
            "je cryptodev_verbosity",
            "cmp qword [r15 + 0x40], 0",
            "je cryptodev_verbosity",
            "lea rax, [rbp - 0x60]",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, dword [rbx + 8]",
            "mov rsi, qword [rbx + 0x18]",
            "mov r9, qword [rbx + 0x60]",
            "mov rdi, r15",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x58]",
            "mov r8d, dword [rbx + 0x48]",
            "mov qword [rbp - 0x78], r11",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x68]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "mov r12d, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r9d, dword [r15 + 0x38]",
            "mov eax, dword [rbx + 8]",
            "mov rdx, qword [rbp - 0x60]",
            "mov r12, qword [rbp - 0x58]",
            "mov ecx, dword [rbx + 0xc]",
            "test r9d, r9d",
            "mov dword [rbp - 0x64], eax",
            "je 0x8004c66",
            "mov r8d, dword [r15 + 0x40]",
            "test r8d, r8d",
            "je 0x8004c66",
            "mov rax, qword [r15 + 0x60]",
            "mov eax, dword [rax + 0x3c]",
            "mov esi, dword [rbx + 0x30]",
            "cmp esi, eax",
            "ja cryptodev_verbosity",
            "test esi, esi",
            "je 0x8004740",
            "mov edi, dword [r15 + 0x40]",
            "test edi, edi",
            "je 0x8004585",
            "mov rdi, qword [r15 + 0x60]",
            "mov qword [rbp - 0x88], rdx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call crypto_aead_setauthsize",
            "mov rdx, qword [rbp - 0x88]",
            "mov ecx, dword [rbp - 0x80]",
            "mov r11, qword [rbp - 0x78]",
            "mov rax, qword [r15 + 0x68]",
            "test ecx, ecx",
            "mov esi, 0",
            "cmove r11, rsi",
            "mov r8d, dword [rbp - 0x64]",
            "lea rdi, [r15 + 0x38]",
            "mov rsi, r12",
            "mov dword [rax + 0x30], ecx",
            "mov qword [rax + 0x40], r11",
            "cmp word [rbx + 4], 0",
            "mov rcx, r8",
            "mov qword [rbp - 0x78], r8",
            "jne cryptodev_cipher_decrypt",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbp - 0x64]",
            "add r8, qword [rbx + 0x20]",
            "add eax, dword [rbx + 0x30]",
            "mov qword [rbx + 0x28], r8",
            "mov dword [rbx + 0x48], eax",
            "mov rdi, r15",
            "call release_user_pages",
            "mov rdi, qword [rbp - 0x70]",
            "xor esi, esi",
            "call free_pages",
            "test r12d, r12d",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x4c]",
            "mov rsi, r14",
            "mov rdi, r13",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "lea rdi, [r15 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x88",
            "mov eax, r12d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, dword [r15 + 0x38]",
            "test eax, eax",
            "jne 0x8004e22",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004970",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004689",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x800467c",
            "cmp dword [0x08004676], 1",
            "jg current_task",
            "mov r9, qword [rbx + 0x10]",
            "test r9, rdx",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [rbx + 0xc]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rdx, qword [rbx + 0x10]",
            "mov r10, qword [rbx + 0x18]",
            "sub r10, rdx",
            "cmp r10d, 0x100",
            "jbe 0x80048b0",
            "mov eax, dword [0x080046bd]",
            "test eax, eax",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "cmp dword [0x080046d2], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2ea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x30]",
            "mov edx, dword [rbp - 0x64]",
            "sub r8, rax",
            "add r8, qword [rbx + 0x20]",
            "sub edx, eax",
            "mov dword [rbx + 0x48], edx",
            "mov qword [rbx + 0x28], r8",
            "jmp release_user_pages",
            "mov dword [rbx + 0x30], eax",
            "jmp 0x8004585",
            "cmp dword [0x08004757], 1",
            "jle 0x8004689",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "add eax, 1",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r8d, 0x7c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004689",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004bfe",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004810",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x8004810",
            "cmp dword [0x080047ca], 1",
            "jle 0x8004810",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x43",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x78], r11",
            "call printk",
            "mov r11, qword [rbp - 0x78]",
            "nop dword [rax + rax]",
            "movsxd rax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, 1",
            "mov dword [r15 + 0xc0], 0",
            "mov rdi, r15",
            "mov rsi, rcx",
            "lea rax, [rcx + rax - 1]",
            "shr rsi, 0xc",
            "sub edx, esi",
            "shr rax, 0xc",
            "lea ecx, [rdx + rax]",
            "mov dword [r15 + 0xbc], ecx",
            "mov esi, ecx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov ecx, dword [rbp - 0x80]",
            "je 0x8004b46",
            "mov esi, dword [0x08004871]",
            "test esi, esi",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2a0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rcx, rdx",
            "lea rax, [rdx + rax - 1]",
            "mov esi, 1",
            "shr rcx, 0xc",
            "mov rdi, r15",
            "mov qword [rbp - 0x80], r10",
            "sub esi, ecx",
            "shr rax, 0xc",
            "lea r11d, [rsi + rax]",
            "lea esi, [r11 + r11]",
            "mov dword [rbp - 0x78], r11d",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "je 0x8004a70",
            "mov r14d, dword [0x080048f9]",
            "test r14d, r14d",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x92",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rdi, qword [rbp - 0x70]",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "mov edx, dword [rbx + 0xc]",
            "mov rsi, qword [rbp - 0x70]",
            "lea rdi, [rbp - 0x50]",
            "call sg_init_one",
            "lea r11, [rbp - 0x50]",
            "jmp 0x80044a0",
            "cmp qword [rbx + 0x10], 0",
            "jne 0x8004659",
            "mov eax, dword [0x08004981]",
            "test eax, eax",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x72",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "cmp dword [0x080049c7], 0",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x276",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "xor r11d, r11d",
            "jmp 0x80044a0",
            "mov r11d, dword [0x08004a17]",
            "test r11d, r11d",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x80045e5",
            "cmp dword [0x08004a32], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov ecx, r11d",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0xc]",
            "mov edx, 1",
            "mov rdi, qword [rbx + 0x10]",
            "mov qword [rbp - 0x80], r10",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov dword [rbp - 0x78], r11d",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r12, qword [r15 + 0xd0]",
            "movsxd rdi, r11d",
            "mov dword [r15 + 0xbc], r11d",
            "shl rdi, 5",
            "mov esi, r11d",
            "mov dword [r15 + 0xc0], 0",
            "mov qword [rbp - 0x80], r10",
            "add rdi, r12",
            "mov qword [rbp - 0x60], rdi",
            "call sg_init_table",
            "mov edx, dword [rbx + 0xc]",
            "mov rdi, qword [r15 + 0xd0]",
            "mov rsi, qword [rbp - 0x60]",
            "call sg_copy",
            "mov r10, qword [rbp - 0x80]",
            "mov rdi, qword [rbp - 0x60]",
            "mov esi, r10d",
            "call sg_advance",
            "test rax, rax",
            "mov r8, rax",
            "mov qword [rbp - 0x60], rax",
            "je release_user_pages",
            "mov ecx, dword [rbx + 0xc]",
            "mov r9d, dword [rbx + 8]",
            "mov rdx, r12",
            "mov rdi, r15",
            "mov rsi, rbx",
            "call sym.srtp_auth_n_crypt",
            "mov rdi, r15",
            "mov r12d, eax",
            "call release_user_pages",
            "jmp 0x80045f0",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov edx, 1",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0x48]",
            "mov rdi, qword [rbx + 0x20]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r8, qword [r15 + 0xd0]",
            "mov ecx, dword [rbx + 0xc]",
            "mov rdx, r11",
            "mov r9d, dword [rbx + 8]",
            "mov rsi, rbx",
            "mov rdi, r15",
            "mov qword [rbp - 0x60], r8",
            "call sym.tls_auth_n_crypt",
            "mov r12d, eax",
            "jmp release_user_pages",
            "mov rdi, r15",
            "call release_user_pages",
            "mov r13d, dword [0x08004bb9]",
            "test r13d, r13d",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov r12d, 0xffffffea",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004c10], 0",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x8004628",
            "cmp dword [0x08004c28], 0",
            "jle 0x8004c16",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp 0x8004628",
            "xor eax, eax",
            "jmp 0x8004545",
            "cmp dword [0x08004c74], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x80",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004cbd], 0",
            "mov r12d, 0xffffffea",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "cmp dword [0x08004d06], 0",
            "mov r12d, 0xffffffea",
            "js 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2aa",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004d4f], 0",
            "mov r12d, 0xffffffea",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x286",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004d98], 0",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2b2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004ddb], 0",
            "mov r12d, 0xffffffea",
            "js release_user_pages",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "add rax, 0x4b8",
            "mov r9d, esi",
            "mov r8d, 0x241",
            "mov rsi, rax",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [r15 + 0x44], 0",
            "je 0x8004e34",
            "cmp dword [r15 + 0x40], 0",
            "je 0x800464c",
            "cmp dword [0x08004e3b], 0",
            "js 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x270",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004e84], 0",
            "mov r12d, 0xfffffff4",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x28c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r10d",
            "mov r8d, 0x8a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004f0c], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x25a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [0x08004f52], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x250",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004c16",
            "cmp dword [0x08004fd1], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x99",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x0800501a], 0",
            "jle 0x8004a20",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x57",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x79",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov eax, dword [r15 + 0xb4]",
            "mov edx, eax",
            "sub rdx, 1",
            "jmp 0x800467c",
            "cmp dword [0x080050ac], 0",
            "mov r12d, 0xfffffff2",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x292",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x47",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity"
        ]
    },
    "unk.0x8004e78": {
        "function_address": "0x08004e78",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x88",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r15, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [r15 + 0x88]",
            "test eax, eax",
            "je 0x8004427",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "lea r13, [rbx + 0x50]",
            "cmovle edx, dword [rbx + 0x4c]",
            "lea r14, [r15 + 0x78]",
            "mov eax, 0x10",
            "mov rsi, r13",
            "mov rdi, r14",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "test byte [rbx + 6], 0x20",
            "jne 0x8004640",
            "cmp dword [rbx + 0xc], 0x1000",
            "ja cryptodev_verbosity",
            "xor esi, esi",
            "mov edi, 0xd0",
            "call __get_free_pages",
            "test rax, rax",
            "mov qword [rbp - 0x70], rax",
            "je cryptodev_verbosity",
            "mov rsi, qword [rbx + 0x10]",
            "test rsi, rsi",
            "je 0x8004a08",
            "mov edx, dword [rbx + 0xc]",
            "xor r11d, r11d",
            "test edx, edx",
            "jne _copy_from_user",
            "test byte [rbx + 6], 0x10",
            "je 0x80044b3",
            "mov r12d, dword [r15 + 0x40]",
            "test r12d, r12d",
            "je 0x80047a0",
            "mov r10d, dword [r15 + 0x38]",
            "test r10d, r10d",
            "je cryptodev_verbosity",
            "cmp qword [r15 + 0x40], 0",
            "je cryptodev_verbosity",
            "lea rax, [rbp - 0x60]",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, dword [rbx + 8]",
            "mov rsi, qword [rbx + 0x18]",
            "mov r9, qword [rbx + 0x60]",
            "mov rdi, r15",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x58]",
            "mov r8d, dword [rbx + 0x48]",
            "mov qword [rbp - 0x78], r11",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x68]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "mov r12d, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r9d, dword [r15 + 0x38]",
            "mov eax, dword [rbx + 8]",
            "mov rdx, qword [rbp - 0x60]",
            "mov r12, qword [rbp - 0x58]",
            "mov ecx, dword [rbx + 0xc]",
            "test r9d, r9d",
            "mov dword [rbp - 0x64], eax",
            "je 0x8004c66",
            "mov r8d, dword [r15 + 0x40]",
            "test r8d, r8d",
            "je 0x8004c66",
            "mov rax, qword [r15 + 0x60]",
            "mov eax, dword [rax + 0x3c]",
            "mov esi, dword [rbx + 0x30]",
            "cmp esi, eax",
            "ja cryptodev_verbosity",
            "test esi, esi",
            "je 0x8004740",
            "mov edi, dword [r15 + 0x40]",
            "test edi, edi",
            "je 0x8004585",
            "mov rdi, qword [r15 + 0x60]",
            "mov qword [rbp - 0x88], rdx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call crypto_aead_setauthsize",
            "mov rdx, qword [rbp - 0x88]",
            "mov ecx, dword [rbp - 0x80]",
            "mov r11, qword [rbp - 0x78]",
            "mov rax, qword [r15 + 0x68]",
            "test ecx, ecx",
            "mov esi, 0",
            "cmove r11, rsi",
            "mov r8d, dword [rbp - 0x64]",
            "lea rdi, [r15 + 0x38]",
            "mov rsi, r12",
            "mov dword [rax + 0x30], ecx",
            "mov qword [rax + 0x40], r11",
            "cmp word [rbx + 4], 0",
            "mov rcx, r8",
            "mov qword [rbp - 0x78], r8",
            "jne cryptodev_cipher_decrypt",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbp - 0x64]",
            "add r8, qword [rbx + 0x20]",
            "add eax, dword [rbx + 0x30]",
            "mov qword [rbx + 0x28], r8",
            "mov dword [rbx + 0x48], eax",
            "mov rdi, r15",
            "call release_user_pages",
            "mov rdi, qword [rbp - 0x70]",
            "xor esi, esi",
            "call free_pages",
            "test r12d, r12d",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x4c]",
            "mov rsi, r14",
            "mov rdi, r13",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "lea rdi, [r15 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x88",
            "mov eax, r12d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, dword [r15 + 0x38]",
            "test eax, eax",
            "jne 0x8004e22",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004970",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004689",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x800467c",
            "cmp dword [0x08004676], 1",
            "jg current_task",
            "mov r9, qword [rbx + 0x10]",
            "test r9, rdx",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [rbx + 0xc]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rdx, qword [rbx + 0x10]",
            "mov r10, qword [rbx + 0x18]",
            "sub r10, rdx",
            "cmp r10d, 0x100",
            "jbe 0x80048b0",
            "mov eax, dword [0x080046bd]",
            "test eax, eax",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "cmp dword [0x080046d2], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2ea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x30]",
            "mov edx, dword [rbp - 0x64]",
            "sub r8, rax",
            "add r8, qword [rbx + 0x20]",
            "sub edx, eax",
            "mov dword [rbx + 0x48], edx",
            "mov qword [rbx + 0x28], r8",
            "jmp release_user_pages",
            "mov dword [rbx + 0x30], eax",
            "jmp 0x8004585",
            "cmp dword [0x08004757], 1",
            "jle 0x8004689",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "add eax, 1",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r8d, 0x7c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004689",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004bfe",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004810",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x8004810",
            "cmp dword [0x080047ca], 1",
            "jle 0x8004810",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x43",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x78], r11",
            "call printk",
            "mov r11, qword [rbp - 0x78]",
            "nop dword [rax + rax]",
            "movsxd rax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, 1",
            "mov dword [r15 + 0xc0], 0",
            "mov rdi, r15",
            "mov rsi, rcx",
            "lea rax, [rcx + rax - 1]",
            "shr rsi, 0xc",
            "sub edx, esi",
            "shr rax, 0xc",
            "lea ecx, [rdx + rax]",
            "mov dword [r15 + 0xbc], ecx",
            "mov esi, ecx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov ecx, dword [rbp - 0x80]",
            "je 0x8004b46",
            "mov esi, dword [0x08004871]",
            "test esi, esi",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2a0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rcx, rdx",
            "lea rax, [rdx + rax - 1]",
            "mov esi, 1",
            "shr rcx, 0xc",
            "mov rdi, r15",
            "mov qword [rbp - 0x80], r10",
            "sub esi, ecx",
            "shr rax, 0xc",
            "lea r11d, [rsi + rax]",
            "lea esi, [r11 + r11]",
            "mov dword [rbp - 0x78], r11d",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "je 0x8004a70",
            "mov r14d, dword [0x080048f9]",
            "test r14d, r14d",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x92",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rdi, qword [rbp - 0x70]",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "mov edx, dword [rbx + 0xc]",
            "mov rsi, qword [rbp - 0x70]",
            "lea rdi, [rbp - 0x50]",
            "call sg_init_one",
            "lea r11, [rbp - 0x50]",
            "jmp 0x80044a0",
            "cmp qword [rbx + 0x10], 0",
            "jne 0x8004659",
            "mov eax, dword [0x08004981]",
            "test eax, eax",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x72",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "cmp dword [0x080049c7], 0",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x276",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "xor r11d, r11d",
            "jmp 0x80044a0",
            "mov r11d, dword [0x08004a17]",
            "test r11d, r11d",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x80045e5",
            "cmp dword [0x08004a32], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov ecx, r11d",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0xc]",
            "mov edx, 1",
            "mov rdi, qword [rbx + 0x10]",
            "mov qword [rbp - 0x80], r10",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov dword [rbp - 0x78], r11d",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r12, qword [r15 + 0xd0]",
            "movsxd rdi, r11d",
            "mov dword [r15 + 0xbc], r11d",
            "shl rdi, 5",
            "mov esi, r11d",
            "mov dword [r15 + 0xc0], 0",
            "mov qword [rbp - 0x80], r10",
            "add rdi, r12",
            "mov qword [rbp - 0x60], rdi",
            "call sg_init_table",
            "mov edx, dword [rbx + 0xc]",
            "mov rdi, qword [r15 + 0xd0]",
            "mov rsi, qword [rbp - 0x60]",
            "call sg_copy",
            "mov r10, qword [rbp - 0x80]",
            "mov rdi, qword [rbp - 0x60]",
            "mov esi, r10d",
            "call sg_advance",
            "test rax, rax",
            "mov r8, rax",
            "mov qword [rbp - 0x60], rax",
            "je release_user_pages",
            "mov ecx, dword [rbx + 0xc]",
            "mov r9d, dword [rbx + 8]",
            "mov rdx, r12",
            "mov rdi, r15",
            "mov rsi, rbx",
            "call sym.srtp_auth_n_crypt",
            "mov rdi, r15",
            "mov r12d, eax",
            "call release_user_pages",
            "jmp 0x80045f0",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov edx, 1",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0x48]",
            "mov rdi, qword [rbx + 0x20]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r8, qword [r15 + 0xd0]",
            "mov ecx, dword [rbx + 0xc]",
            "mov rdx, r11",
            "mov r9d, dword [rbx + 8]",
            "mov rsi, rbx",
            "mov rdi, r15",
            "mov qword [rbp - 0x60], r8",
            "call sym.tls_auth_n_crypt",
            "mov r12d, eax",
            "jmp release_user_pages",
            "mov rdi, r15",
            "call release_user_pages",
            "mov r13d, dword [0x08004bb9]",
            "test r13d, r13d",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov r12d, 0xffffffea",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004c10], 0",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x8004628",
            "cmp dword [0x08004c28], 0",
            "jle 0x8004c16",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp 0x8004628",
            "xor eax, eax",
            "jmp 0x8004545",
            "cmp dword [0x08004c74], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x80",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004cbd], 0",
            "mov r12d, 0xffffffea",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "cmp dword [0x08004d06], 0",
            "mov r12d, 0xffffffea",
            "js 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2aa",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004d4f], 0",
            "mov r12d, 0xffffffea",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x286",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004d98], 0",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2b2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004ddb], 0",
            "mov r12d, 0xffffffea",
            "js release_user_pages",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "add rax, 0x4b8",
            "mov r9d, esi",
            "mov r8d, 0x241",
            "mov rsi, rax",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [r15 + 0x44], 0",
            "je 0x8004e34",
            "cmp dword [r15 + 0x40], 0",
            "je 0x800464c",
            "cmp dword [0x08004e3b], 0",
            "js 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x270",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004e84], 0",
            "mov r12d, 0xfffffff4",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x28c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r10d",
            "mov r8d, 0x8a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004f0c], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x25a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [0x08004f52], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x250",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004c16",
            "cmp dword [0x08004fd1], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x99",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x0800501a], 0",
            "jle 0x8004a20",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x57",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x79",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov eax, dword [r15 + 0xb4]",
            "mov edx, eax",
            "sub rdx, 1",
            "jmp 0x800467c",
            "cmp dword [0x080050ac], 0",
            "mov r12d, 0xfffffff2",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x292",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x47",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity"
        ]
    },
    "unk.0x8004ec1": {
        "function_address": "0x08004ec1",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x88",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r15, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [r15 + 0x88]",
            "test eax, eax",
            "je 0x8004427",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "lea r13, [rbx + 0x50]",
            "cmovle edx, dword [rbx + 0x4c]",
            "lea r14, [r15 + 0x78]",
            "mov eax, 0x10",
            "mov rsi, r13",
            "mov rdi, r14",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "test byte [rbx + 6], 0x20",
            "jne 0x8004640",
            "cmp dword [rbx + 0xc], 0x1000",
            "ja cryptodev_verbosity",
            "xor esi, esi",
            "mov edi, 0xd0",
            "call __get_free_pages",
            "test rax, rax",
            "mov qword [rbp - 0x70], rax",
            "je cryptodev_verbosity",
            "mov rsi, qword [rbx + 0x10]",
            "test rsi, rsi",
            "je 0x8004a08",
            "mov edx, dword [rbx + 0xc]",
            "xor r11d, r11d",
            "test edx, edx",
            "jne _copy_from_user",
            "test byte [rbx + 6], 0x10",
            "je 0x80044b3",
            "mov r12d, dword [r15 + 0x40]",
            "test r12d, r12d",
            "je 0x80047a0",
            "mov r10d, dword [r15 + 0x38]",
            "test r10d, r10d",
            "je cryptodev_verbosity",
            "cmp qword [r15 + 0x40], 0",
            "je cryptodev_verbosity",
            "lea rax, [rbp - 0x60]",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, dword [rbx + 8]",
            "mov rsi, qword [rbx + 0x18]",
            "mov r9, qword [rbx + 0x60]",
            "mov rdi, r15",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x58]",
            "mov r8d, dword [rbx + 0x48]",
            "mov qword [rbp - 0x78], r11",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x68]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "mov r12d, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r9d, dword [r15 + 0x38]",
            "mov eax, dword [rbx + 8]",
            "mov rdx, qword [rbp - 0x60]",
            "mov r12, qword [rbp - 0x58]",
            "mov ecx, dword [rbx + 0xc]",
            "test r9d, r9d",
            "mov dword [rbp - 0x64], eax",
            "je 0x8004c66",
            "mov r8d, dword [r15 + 0x40]",
            "test r8d, r8d",
            "je 0x8004c66",
            "mov rax, qword [r15 + 0x60]",
            "mov eax, dword [rax + 0x3c]",
            "mov esi, dword [rbx + 0x30]",
            "cmp esi, eax",
            "ja cryptodev_verbosity",
            "test esi, esi",
            "je 0x8004740",
            "mov edi, dword [r15 + 0x40]",
            "test edi, edi",
            "je 0x8004585",
            "mov rdi, qword [r15 + 0x60]",
            "mov qword [rbp - 0x88], rdx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call crypto_aead_setauthsize",
            "mov rdx, qword [rbp - 0x88]",
            "mov ecx, dword [rbp - 0x80]",
            "mov r11, qword [rbp - 0x78]",
            "mov rax, qword [r15 + 0x68]",
            "test ecx, ecx",
            "mov esi, 0",
            "cmove r11, rsi",
            "mov r8d, dword [rbp - 0x64]",
            "lea rdi, [r15 + 0x38]",
            "mov rsi, r12",
            "mov dword [rax + 0x30], ecx",
            "mov qword [rax + 0x40], r11",
            "cmp word [rbx + 4], 0",
            "mov rcx, r8",
            "mov qword [rbp - 0x78], r8",
            "jne cryptodev_cipher_decrypt",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbp - 0x64]",
            "add r8, qword [rbx + 0x20]",
            "add eax, dword [rbx + 0x30]",
            "mov qword [rbx + 0x28], r8",
            "mov dword [rbx + 0x48], eax",
            "mov rdi, r15",
            "call release_user_pages",
            "mov rdi, qword [rbp - 0x70]",
            "xor esi, esi",
            "call free_pages",
            "test r12d, r12d",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x4c]",
            "mov rsi, r14",
            "mov rdi, r13",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "lea rdi, [r15 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x88",
            "mov eax, r12d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, dword [r15 + 0x38]",
            "test eax, eax",
            "jne 0x8004e22",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004970",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004689",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x800467c",
            "cmp dword [0x08004676], 1",
            "jg current_task",
            "mov r9, qword [rbx + 0x10]",
            "test r9, rdx",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [rbx + 0xc]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rdx, qword [rbx + 0x10]",
            "mov r10, qword [rbx + 0x18]",
            "sub r10, rdx",
            "cmp r10d, 0x100",
            "jbe 0x80048b0",
            "mov eax, dword [0x080046bd]",
            "test eax, eax",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "cmp dword [0x080046d2], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2ea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x30]",
            "mov edx, dword [rbp - 0x64]",
            "sub r8, rax",
            "add r8, qword [rbx + 0x20]",
            "sub edx, eax",
            "mov dword [rbx + 0x48], edx",
            "mov qword [rbx + 0x28], r8",
            "jmp release_user_pages",
            "mov dword [rbx + 0x30], eax",
            "jmp 0x8004585",
            "cmp dword [0x08004757], 1",
            "jle 0x8004689",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "add eax, 1",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r8d, 0x7c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004689",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004bfe",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004810",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x8004810",
            "cmp dword [0x080047ca], 1",
            "jle 0x8004810",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x43",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x78], r11",
            "call printk",
            "mov r11, qword [rbp - 0x78]",
            "nop dword [rax + rax]",
            "movsxd rax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, 1",
            "mov dword [r15 + 0xc0], 0",
            "mov rdi, r15",
            "mov rsi, rcx",
            "lea rax, [rcx + rax - 1]",
            "shr rsi, 0xc",
            "sub edx, esi",
            "shr rax, 0xc",
            "lea ecx, [rdx + rax]",
            "mov dword [r15 + 0xbc], ecx",
            "mov esi, ecx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov ecx, dword [rbp - 0x80]",
            "je 0x8004b46",
            "mov esi, dword [0x08004871]",
            "test esi, esi",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2a0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rcx, rdx",
            "lea rax, [rdx + rax - 1]",
            "mov esi, 1",
            "shr rcx, 0xc",
            "mov rdi, r15",
            "mov qword [rbp - 0x80], r10",
            "sub esi, ecx",
            "shr rax, 0xc",
            "lea r11d, [rsi + rax]",
            "lea esi, [r11 + r11]",
            "mov dword [rbp - 0x78], r11d",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "je 0x8004a70",
            "mov r14d, dword [0x080048f9]",
            "test r14d, r14d",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x92",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rdi, qword [rbp - 0x70]",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "mov edx, dword [rbx + 0xc]",
            "mov rsi, qword [rbp - 0x70]",
            "lea rdi, [rbp - 0x50]",
            "call sg_init_one",
            "lea r11, [rbp - 0x50]",
            "jmp 0x80044a0",
            "cmp qword [rbx + 0x10], 0",
            "jne 0x8004659",
            "mov eax, dword [0x08004981]",
            "test eax, eax",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x72",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "cmp dword [0x080049c7], 0",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x276",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "xor r11d, r11d",
            "jmp 0x80044a0",
            "mov r11d, dword [0x08004a17]",
            "test r11d, r11d",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x80045e5",
            "cmp dword [0x08004a32], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov ecx, r11d",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0xc]",
            "mov edx, 1",
            "mov rdi, qword [rbx + 0x10]",
            "mov qword [rbp - 0x80], r10",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov dword [rbp - 0x78], r11d",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r12, qword [r15 + 0xd0]",
            "movsxd rdi, r11d",
            "mov dword [r15 + 0xbc], r11d",
            "shl rdi, 5",
            "mov esi, r11d",
            "mov dword [r15 + 0xc0], 0",
            "mov qword [rbp - 0x80], r10",
            "add rdi, r12",
            "mov qword [rbp - 0x60], rdi",
            "call sg_init_table",
            "mov edx, dword [rbx + 0xc]",
            "mov rdi, qword [r15 + 0xd0]",
            "mov rsi, qword [rbp - 0x60]",
            "call sg_copy",
            "mov r10, qword [rbp - 0x80]",
            "mov rdi, qword [rbp - 0x60]",
            "mov esi, r10d",
            "call sg_advance",
            "test rax, rax",
            "mov r8, rax",
            "mov qword [rbp - 0x60], rax",
            "je release_user_pages",
            "mov ecx, dword [rbx + 0xc]",
            "mov r9d, dword [rbx + 8]",
            "mov rdx, r12",
            "mov rdi, r15",
            "mov rsi, rbx",
            "call sym.srtp_auth_n_crypt",
            "mov rdi, r15",
            "mov r12d, eax",
            "call release_user_pages",
            "jmp 0x80045f0",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov edx, 1",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0x48]",
            "mov rdi, qword [rbx + 0x20]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r8, qword [r15 + 0xd0]",
            "mov ecx, dword [rbx + 0xc]",
            "mov rdx, r11",
            "mov r9d, dword [rbx + 8]",
            "mov rsi, rbx",
            "mov rdi, r15",
            "mov qword [rbp - 0x60], r8",
            "call sym.tls_auth_n_crypt",
            "mov r12d, eax",
            "jmp release_user_pages",
            "mov rdi, r15",
            "call release_user_pages",
            "mov r13d, dword [0x08004bb9]",
            "test r13d, r13d",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov r12d, 0xffffffea",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004c10], 0",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x8004628",
            "cmp dword [0x08004c28], 0",
            "jle 0x8004c16",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp 0x8004628",
            "xor eax, eax",
            "jmp 0x8004545",
            "cmp dword [0x08004c74], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x80",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004cbd], 0",
            "mov r12d, 0xffffffea",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "cmp dword [0x08004d06], 0",
            "mov r12d, 0xffffffea",
            "js 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2aa",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004d4f], 0",
            "mov r12d, 0xffffffea",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x286",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004d98], 0",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2b2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004ddb], 0",
            "mov r12d, 0xffffffea",
            "js release_user_pages",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "add rax, 0x4b8",
            "mov r9d, esi",
            "mov r8d, 0x241",
            "mov rsi, rax",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [r15 + 0x44], 0",
            "je 0x8004e34",
            "cmp dword [r15 + 0x40], 0",
            "je 0x800464c",
            "cmp dword [0x08004e3b], 0",
            "js 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x270",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004e84], 0",
            "mov r12d, 0xfffffff4",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x28c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r10d",
            "mov r8d, 0x8a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004f0c], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x25a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [0x08004f52], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x250",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004c16",
            "cmp dword [0x08004fd1], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x99",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x0800501a], 0",
            "jle 0x8004a20",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x57",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x79",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov eax, dword [r15 + 0xb4]",
            "mov edx, eax",
            "sub rdx, 1",
            "jmp 0x800467c",
            "cmp dword [0x080050ac], 0",
            "mov r12d, 0xfffffff2",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x292",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x47",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity"
        ]
    },
    "unk.0x8004f00": {
        "function_address": "0x08004f00",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x88",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r15, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [r15 + 0x88]",
            "test eax, eax",
            "je 0x8004427",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "lea r13, [rbx + 0x50]",
            "cmovle edx, dword [rbx + 0x4c]",
            "lea r14, [r15 + 0x78]",
            "mov eax, 0x10",
            "mov rsi, r13",
            "mov rdi, r14",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "test byte [rbx + 6], 0x20",
            "jne 0x8004640",
            "cmp dword [rbx + 0xc], 0x1000",
            "ja cryptodev_verbosity",
            "xor esi, esi",
            "mov edi, 0xd0",
            "call __get_free_pages",
            "test rax, rax",
            "mov qword [rbp - 0x70], rax",
            "je cryptodev_verbosity",
            "mov rsi, qword [rbx + 0x10]",
            "test rsi, rsi",
            "je 0x8004a08",
            "mov edx, dword [rbx + 0xc]",
            "xor r11d, r11d",
            "test edx, edx",
            "jne _copy_from_user",
            "test byte [rbx + 6], 0x10",
            "je 0x80044b3",
            "mov r12d, dword [r15 + 0x40]",
            "test r12d, r12d",
            "je 0x80047a0",
            "mov r10d, dword [r15 + 0x38]",
            "test r10d, r10d",
            "je cryptodev_verbosity",
            "cmp qword [r15 + 0x40], 0",
            "je cryptodev_verbosity",
            "lea rax, [rbp - 0x60]",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, dword [rbx + 8]",
            "mov rsi, qword [rbx + 0x18]",
            "mov r9, qword [rbx + 0x60]",
            "mov rdi, r15",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x58]",
            "mov r8d, dword [rbx + 0x48]",
            "mov qword [rbp - 0x78], r11",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x68]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "mov r12d, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r9d, dword [r15 + 0x38]",
            "mov eax, dword [rbx + 8]",
            "mov rdx, qword [rbp - 0x60]",
            "mov r12, qword [rbp - 0x58]",
            "mov ecx, dword [rbx + 0xc]",
            "test r9d, r9d",
            "mov dword [rbp - 0x64], eax",
            "je 0x8004c66",
            "mov r8d, dword [r15 + 0x40]",
            "test r8d, r8d",
            "je 0x8004c66",
            "mov rax, qword [r15 + 0x60]",
            "mov eax, dword [rax + 0x3c]",
            "mov esi, dword [rbx + 0x30]",
            "cmp esi, eax",
            "ja cryptodev_verbosity",
            "test esi, esi",
            "je 0x8004740",
            "mov edi, dword [r15 + 0x40]",
            "test edi, edi",
            "je 0x8004585",
            "mov rdi, qword [r15 + 0x60]",
            "mov qword [rbp - 0x88], rdx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call crypto_aead_setauthsize",
            "mov rdx, qword [rbp - 0x88]",
            "mov ecx, dword [rbp - 0x80]",
            "mov r11, qword [rbp - 0x78]",
            "mov rax, qword [r15 + 0x68]",
            "test ecx, ecx",
            "mov esi, 0",
            "cmove r11, rsi",
            "mov r8d, dword [rbp - 0x64]",
            "lea rdi, [r15 + 0x38]",
            "mov rsi, r12",
            "mov dword [rax + 0x30], ecx",
            "mov qword [rax + 0x40], r11",
            "cmp word [rbx + 4], 0",
            "mov rcx, r8",
            "mov qword [rbp - 0x78], r8",
            "jne cryptodev_cipher_decrypt",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbp - 0x64]",
            "add r8, qword [rbx + 0x20]",
            "add eax, dword [rbx + 0x30]",
            "mov qword [rbx + 0x28], r8",
            "mov dword [rbx + 0x48], eax",
            "mov rdi, r15",
            "call release_user_pages",
            "mov rdi, qword [rbp - 0x70]",
            "xor esi, esi",
            "call free_pages",
            "test r12d, r12d",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x4c]",
            "mov rsi, r14",
            "mov rdi, r13",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "lea rdi, [r15 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x88",
            "mov eax, r12d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, dword [r15 + 0x38]",
            "test eax, eax",
            "jne 0x8004e22",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004970",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004689",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x800467c",
            "cmp dword [0x08004676], 1",
            "jg current_task",
            "mov r9, qword [rbx + 0x10]",
            "test r9, rdx",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [rbx + 0xc]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rdx, qword [rbx + 0x10]",
            "mov r10, qword [rbx + 0x18]",
            "sub r10, rdx",
            "cmp r10d, 0x100",
            "jbe 0x80048b0",
            "mov eax, dword [0x080046bd]",
            "test eax, eax",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "cmp dword [0x080046d2], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2ea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x30]",
            "mov edx, dword [rbp - 0x64]",
            "sub r8, rax",
            "add r8, qword [rbx + 0x20]",
            "sub edx, eax",
            "mov dword [rbx + 0x48], edx",
            "mov qword [rbx + 0x28], r8",
            "jmp release_user_pages",
            "mov dword [rbx + 0x30], eax",
            "jmp 0x8004585",
            "cmp dword [0x08004757], 1",
            "jle 0x8004689",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "add eax, 1",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r8d, 0x7c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004689",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004bfe",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004810",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x8004810",
            "cmp dword [0x080047ca], 1",
            "jle 0x8004810",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x43",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x78], r11",
            "call printk",
            "mov r11, qword [rbp - 0x78]",
            "nop dword [rax + rax]",
            "movsxd rax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, 1",
            "mov dword [r15 + 0xc0], 0",
            "mov rdi, r15",
            "mov rsi, rcx",
            "lea rax, [rcx + rax - 1]",
            "shr rsi, 0xc",
            "sub edx, esi",
            "shr rax, 0xc",
            "lea ecx, [rdx + rax]",
            "mov dword [r15 + 0xbc], ecx",
            "mov esi, ecx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov ecx, dword [rbp - 0x80]",
            "je 0x8004b46",
            "mov esi, dword [0x08004871]",
            "test esi, esi",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2a0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rcx, rdx",
            "lea rax, [rdx + rax - 1]",
            "mov esi, 1",
            "shr rcx, 0xc",
            "mov rdi, r15",
            "mov qword [rbp - 0x80], r10",
            "sub esi, ecx",
            "shr rax, 0xc",
            "lea r11d, [rsi + rax]",
            "lea esi, [r11 + r11]",
            "mov dword [rbp - 0x78], r11d",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "je 0x8004a70",
            "mov r14d, dword [0x080048f9]",
            "test r14d, r14d",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x92",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rdi, qword [rbp - 0x70]",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "mov edx, dword [rbx + 0xc]",
            "mov rsi, qword [rbp - 0x70]",
            "lea rdi, [rbp - 0x50]",
            "call sg_init_one",
            "lea r11, [rbp - 0x50]",
            "jmp 0x80044a0",
            "cmp qword [rbx + 0x10], 0",
            "jne 0x8004659",
            "mov eax, dword [0x08004981]",
            "test eax, eax",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x72",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "cmp dword [0x080049c7], 0",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x276",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "xor r11d, r11d",
            "jmp 0x80044a0",
            "mov r11d, dword [0x08004a17]",
            "test r11d, r11d",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x80045e5",
            "cmp dword [0x08004a32], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov ecx, r11d",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0xc]",
            "mov edx, 1",
            "mov rdi, qword [rbx + 0x10]",
            "mov qword [rbp - 0x80], r10",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov dword [rbp - 0x78], r11d",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r12, qword [r15 + 0xd0]",
            "movsxd rdi, r11d",
            "mov dword [r15 + 0xbc], r11d",
            "shl rdi, 5",
            "mov esi, r11d",
            "mov dword [r15 + 0xc0], 0",
            "mov qword [rbp - 0x80], r10",
            "add rdi, r12",
            "mov qword [rbp - 0x60], rdi",
            "call sg_init_table",
            "mov edx, dword [rbx + 0xc]",
            "mov rdi, qword [r15 + 0xd0]",
            "mov rsi, qword [rbp - 0x60]",
            "call sg_copy",
            "mov r10, qword [rbp - 0x80]",
            "mov rdi, qword [rbp - 0x60]",
            "mov esi, r10d",
            "call sg_advance",
            "test rax, rax",
            "mov r8, rax",
            "mov qword [rbp - 0x60], rax",
            "je release_user_pages",
            "mov ecx, dword [rbx + 0xc]",
            "mov r9d, dword [rbx + 8]",
            "mov rdx, r12",
            "mov rdi, r15",
            "mov rsi, rbx",
            "call sym.srtp_auth_n_crypt",
            "mov rdi, r15",
            "mov r12d, eax",
            "call release_user_pages",
            "jmp 0x80045f0",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov edx, 1",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0x48]",
            "mov rdi, qword [rbx + 0x20]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r8, qword [r15 + 0xd0]",
            "mov ecx, dword [rbx + 0xc]",
            "mov rdx, r11",
            "mov r9d, dword [rbx + 8]",
            "mov rsi, rbx",
            "mov rdi, r15",
            "mov qword [rbp - 0x60], r8",
            "call sym.tls_auth_n_crypt",
            "mov r12d, eax",
            "jmp release_user_pages",
            "mov rdi, r15",
            "call release_user_pages",
            "mov r13d, dword [0x08004bb9]",
            "test r13d, r13d",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov r12d, 0xffffffea",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004c10], 0",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x8004628",
            "cmp dword [0x08004c28], 0",
            "jle 0x8004c16",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp 0x8004628",
            "xor eax, eax",
            "jmp 0x8004545",
            "cmp dword [0x08004c74], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x80",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004cbd], 0",
            "mov r12d, 0xffffffea",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "cmp dword [0x08004d06], 0",
            "mov r12d, 0xffffffea",
            "js 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2aa",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004d4f], 0",
            "mov r12d, 0xffffffea",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x286",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004d98], 0",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2b2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004ddb], 0",
            "mov r12d, 0xffffffea",
            "js release_user_pages",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "add rax, 0x4b8",
            "mov r9d, esi",
            "mov r8d, 0x241",
            "mov rsi, rax",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [r15 + 0x44], 0",
            "je 0x8004e34",
            "cmp dword [r15 + 0x40], 0",
            "je 0x800464c",
            "cmp dword [0x08004e3b], 0",
            "js 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x270",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004e84], 0",
            "mov r12d, 0xfffffff4",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x28c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r10d",
            "mov r8d, 0x8a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004f0c], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x25a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [0x08004f52], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x250",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004c16",
            "cmp dword [0x08004fd1], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x99",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x0800501a], 0",
            "jle 0x8004a20",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x57",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x79",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov eax, dword [r15 + 0xb4]",
            "mov edx, eax",
            "sub rdx, 1",
            "jmp 0x800467c",
            "cmp dword [0x080050ac], 0",
            "mov r12d, 0xfffffff2",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x292",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x47",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity"
        ]
    },
    "unk.0x8004f46": {
        "function_address": "0x08004f46",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x88",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r15, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [r15 + 0x88]",
            "test eax, eax",
            "je 0x8004427",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "lea r13, [rbx + 0x50]",
            "cmovle edx, dword [rbx + 0x4c]",
            "lea r14, [r15 + 0x78]",
            "mov eax, 0x10",
            "mov rsi, r13",
            "mov rdi, r14",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "test byte [rbx + 6], 0x20",
            "jne 0x8004640",
            "cmp dword [rbx + 0xc], 0x1000",
            "ja cryptodev_verbosity",
            "xor esi, esi",
            "mov edi, 0xd0",
            "call __get_free_pages",
            "test rax, rax",
            "mov qword [rbp - 0x70], rax",
            "je cryptodev_verbosity",
            "mov rsi, qword [rbx + 0x10]",
            "test rsi, rsi",
            "je 0x8004a08",
            "mov edx, dword [rbx + 0xc]",
            "xor r11d, r11d",
            "test edx, edx",
            "jne _copy_from_user",
            "test byte [rbx + 6], 0x10",
            "je 0x80044b3",
            "mov r12d, dword [r15 + 0x40]",
            "test r12d, r12d",
            "je 0x80047a0",
            "mov r10d, dword [r15 + 0x38]",
            "test r10d, r10d",
            "je cryptodev_verbosity",
            "cmp qword [r15 + 0x40], 0",
            "je cryptodev_verbosity",
            "lea rax, [rbp - 0x60]",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, dword [rbx + 8]",
            "mov rsi, qword [rbx + 0x18]",
            "mov r9, qword [rbx + 0x60]",
            "mov rdi, r15",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x58]",
            "mov r8d, dword [rbx + 0x48]",
            "mov qword [rbp - 0x78], r11",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x68]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "mov r12d, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r9d, dword [r15 + 0x38]",
            "mov eax, dword [rbx + 8]",
            "mov rdx, qword [rbp - 0x60]",
            "mov r12, qword [rbp - 0x58]",
            "mov ecx, dword [rbx + 0xc]",
            "test r9d, r9d",
            "mov dword [rbp - 0x64], eax",
            "je 0x8004c66",
            "mov r8d, dword [r15 + 0x40]",
            "test r8d, r8d",
            "je 0x8004c66",
            "mov rax, qword [r15 + 0x60]",
            "mov eax, dword [rax + 0x3c]",
            "mov esi, dword [rbx + 0x30]",
            "cmp esi, eax",
            "ja cryptodev_verbosity",
            "test esi, esi",
            "je 0x8004740",
            "mov edi, dword [r15 + 0x40]",
            "test edi, edi",
            "je 0x8004585",
            "mov rdi, qword [r15 + 0x60]",
            "mov qword [rbp - 0x88], rdx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call crypto_aead_setauthsize",
            "mov rdx, qword [rbp - 0x88]",
            "mov ecx, dword [rbp - 0x80]",
            "mov r11, qword [rbp - 0x78]",
            "mov rax, qword [r15 + 0x68]",
            "test ecx, ecx",
            "mov esi, 0",
            "cmove r11, rsi",
            "mov r8d, dword [rbp - 0x64]",
            "lea rdi, [r15 + 0x38]",
            "mov rsi, r12",
            "mov dword [rax + 0x30], ecx",
            "mov qword [rax + 0x40], r11",
            "cmp word [rbx + 4], 0",
            "mov rcx, r8",
            "mov qword [rbp - 0x78], r8",
            "jne cryptodev_cipher_decrypt",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbp - 0x64]",
            "add r8, qword [rbx + 0x20]",
            "add eax, dword [rbx + 0x30]",
            "mov qword [rbx + 0x28], r8",
            "mov dword [rbx + 0x48], eax",
            "mov rdi, r15",
            "call release_user_pages",
            "mov rdi, qword [rbp - 0x70]",
            "xor esi, esi",
            "call free_pages",
            "test r12d, r12d",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x4c]",
            "mov rsi, r14",
            "mov rdi, r13",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "lea rdi, [r15 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x88",
            "mov eax, r12d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, dword [r15 + 0x38]",
            "test eax, eax",
            "jne 0x8004e22",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004970",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004689",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x800467c",
            "cmp dword [0x08004676], 1",
            "jg current_task",
            "mov r9, qword [rbx + 0x10]",
            "test r9, rdx",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [rbx + 0xc]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rdx, qword [rbx + 0x10]",
            "mov r10, qword [rbx + 0x18]",
            "sub r10, rdx",
            "cmp r10d, 0x100",
            "jbe 0x80048b0",
            "mov eax, dword [0x080046bd]",
            "test eax, eax",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "cmp dword [0x080046d2], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2ea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x30]",
            "mov edx, dword [rbp - 0x64]",
            "sub r8, rax",
            "add r8, qword [rbx + 0x20]",
            "sub edx, eax",
            "mov dword [rbx + 0x48], edx",
            "mov qword [rbx + 0x28], r8",
            "jmp release_user_pages",
            "mov dword [rbx + 0x30], eax",
            "jmp 0x8004585",
            "cmp dword [0x08004757], 1",
            "jle 0x8004689",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "add eax, 1",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r8d, 0x7c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004689",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004bfe",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004810",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x8004810",
            "cmp dword [0x080047ca], 1",
            "jle 0x8004810",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x43",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x78], r11",
            "call printk",
            "mov r11, qword [rbp - 0x78]",
            "nop dword [rax + rax]",
            "movsxd rax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, 1",
            "mov dword [r15 + 0xc0], 0",
            "mov rdi, r15",
            "mov rsi, rcx",
            "lea rax, [rcx + rax - 1]",
            "shr rsi, 0xc",
            "sub edx, esi",
            "shr rax, 0xc",
            "lea ecx, [rdx + rax]",
            "mov dword [r15 + 0xbc], ecx",
            "mov esi, ecx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov ecx, dword [rbp - 0x80]",
            "je 0x8004b46",
            "mov esi, dword [0x08004871]",
            "test esi, esi",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2a0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rcx, rdx",
            "lea rax, [rdx + rax - 1]",
            "mov esi, 1",
            "shr rcx, 0xc",
            "mov rdi, r15",
            "mov qword [rbp - 0x80], r10",
            "sub esi, ecx",
            "shr rax, 0xc",
            "lea r11d, [rsi + rax]",
            "lea esi, [r11 + r11]",
            "mov dword [rbp - 0x78], r11d",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "je 0x8004a70",
            "mov r14d, dword [0x080048f9]",
            "test r14d, r14d",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x92",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rdi, qword [rbp - 0x70]",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "mov edx, dword [rbx + 0xc]",
            "mov rsi, qword [rbp - 0x70]",
            "lea rdi, [rbp - 0x50]",
            "call sg_init_one",
            "lea r11, [rbp - 0x50]",
            "jmp 0x80044a0",
            "cmp qword [rbx + 0x10], 0",
            "jne 0x8004659",
            "mov eax, dword [0x08004981]",
            "test eax, eax",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x72",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "cmp dword [0x080049c7], 0",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x276",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "xor r11d, r11d",
            "jmp 0x80044a0",
            "mov r11d, dword [0x08004a17]",
            "test r11d, r11d",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x80045e5",
            "cmp dword [0x08004a32], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov ecx, r11d",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0xc]",
            "mov edx, 1",
            "mov rdi, qword [rbx + 0x10]",
            "mov qword [rbp - 0x80], r10",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov dword [rbp - 0x78], r11d",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r12, qword [r15 + 0xd0]",
            "movsxd rdi, r11d",
            "mov dword [r15 + 0xbc], r11d",
            "shl rdi, 5",
            "mov esi, r11d",
            "mov dword [r15 + 0xc0], 0",
            "mov qword [rbp - 0x80], r10",
            "add rdi, r12",
            "mov qword [rbp - 0x60], rdi",
            "call sg_init_table",
            "mov edx, dword [rbx + 0xc]",
            "mov rdi, qword [r15 + 0xd0]",
            "mov rsi, qword [rbp - 0x60]",
            "call sg_copy",
            "mov r10, qword [rbp - 0x80]",
            "mov rdi, qword [rbp - 0x60]",
            "mov esi, r10d",
            "call sg_advance",
            "test rax, rax",
            "mov r8, rax",
            "mov qword [rbp - 0x60], rax",
            "je release_user_pages",
            "mov ecx, dword [rbx + 0xc]",
            "mov r9d, dword [rbx + 8]",
            "mov rdx, r12",
            "mov rdi, r15",
            "mov rsi, rbx",
            "call sym.srtp_auth_n_crypt",
            "mov rdi, r15",
            "mov r12d, eax",
            "call release_user_pages",
            "jmp 0x80045f0",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov edx, 1",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0x48]",
            "mov rdi, qword [rbx + 0x20]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r8, qword [r15 + 0xd0]",
            "mov ecx, dword [rbx + 0xc]",
            "mov rdx, r11",
            "mov r9d, dword [rbx + 8]",
            "mov rsi, rbx",
            "mov rdi, r15",
            "mov qword [rbp - 0x60], r8",
            "call sym.tls_auth_n_crypt",
            "mov r12d, eax",
            "jmp release_user_pages",
            "mov rdi, r15",
            "call release_user_pages",
            "mov r13d, dword [0x08004bb9]",
            "test r13d, r13d",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov r12d, 0xffffffea",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004c10], 0",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x8004628",
            "cmp dword [0x08004c28], 0",
            "jle 0x8004c16",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp 0x8004628",
            "xor eax, eax",
            "jmp 0x8004545",
            "cmp dword [0x08004c74], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x80",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004cbd], 0",
            "mov r12d, 0xffffffea",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "cmp dword [0x08004d06], 0",
            "mov r12d, 0xffffffea",
            "js 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2aa",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004d4f], 0",
            "mov r12d, 0xffffffea",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x286",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004d98], 0",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2b2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004ddb], 0",
            "mov r12d, 0xffffffea",
            "js release_user_pages",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "add rax, 0x4b8",
            "mov r9d, esi",
            "mov r8d, 0x241",
            "mov rsi, rax",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [r15 + 0x44], 0",
            "je 0x8004e34",
            "cmp dword [r15 + 0x40], 0",
            "je 0x800464c",
            "cmp dword [0x08004e3b], 0",
            "js 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x270",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004e84], 0",
            "mov r12d, 0xfffffff4",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x28c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r10d",
            "mov r8d, 0x8a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004f0c], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x25a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [0x08004f52], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x250",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004c16",
            "cmp dword [0x08004fd1], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x99",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x0800501a], 0",
            "jle 0x8004a20",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x57",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x79",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov eax, dword [r15 + 0xb4]",
            "mov edx, eax",
            "sub rdx, 1",
            "jmp 0x800467c",
            "cmp dword [0x080050ac], 0",
            "mov r12d, 0xfffffff2",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x292",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x47",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity"
        ]
    },
    "unk.0x8004f8c": {
        "function_address": "0x08004f8c",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x88",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r15, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [r15 + 0x88]",
            "test eax, eax",
            "je 0x8004427",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "lea r13, [rbx + 0x50]",
            "cmovle edx, dword [rbx + 0x4c]",
            "lea r14, [r15 + 0x78]",
            "mov eax, 0x10",
            "mov rsi, r13",
            "mov rdi, r14",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "test byte [rbx + 6], 0x20",
            "jne 0x8004640",
            "cmp dword [rbx + 0xc], 0x1000",
            "ja cryptodev_verbosity",
            "xor esi, esi",
            "mov edi, 0xd0",
            "call __get_free_pages",
            "test rax, rax",
            "mov qword [rbp - 0x70], rax",
            "je cryptodev_verbosity",
            "mov rsi, qword [rbx + 0x10]",
            "test rsi, rsi",
            "je 0x8004a08",
            "mov edx, dword [rbx + 0xc]",
            "xor r11d, r11d",
            "test edx, edx",
            "jne _copy_from_user",
            "test byte [rbx + 6], 0x10",
            "je 0x80044b3",
            "mov r12d, dword [r15 + 0x40]",
            "test r12d, r12d",
            "je 0x80047a0",
            "mov r10d, dword [r15 + 0x38]",
            "test r10d, r10d",
            "je cryptodev_verbosity",
            "cmp qword [r15 + 0x40], 0",
            "je cryptodev_verbosity",
            "lea rax, [rbp - 0x60]",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, dword [rbx + 8]",
            "mov rsi, qword [rbx + 0x18]",
            "mov r9, qword [rbx + 0x60]",
            "mov rdi, r15",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x58]",
            "mov r8d, dword [rbx + 0x48]",
            "mov qword [rbp - 0x78], r11",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x68]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "mov r12d, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r9d, dword [r15 + 0x38]",
            "mov eax, dword [rbx + 8]",
            "mov rdx, qword [rbp - 0x60]",
            "mov r12, qword [rbp - 0x58]",
            "mov ecx, dword [rbx + 0xc]",
            "test r9d, r9d",
            "mov dword [rbp - 0x64], eax",
            "je 0x8004c66",
            "mov r8d, dword [r15 + 0x40]",
            "test r8d, r8d",
            "je 0x8004c66",
            "mov rax, qword [r15 + 0x60]",
            "mov eax, dword [rax + 0x3c]",
            "mov esi, dword [rbx + 0x30]",
            "cmp esi, eax",
            "ja cryptodev_verbosity",
            "test esi, esi",
            "je 0x8004740",
            "mov edi, dword [r15 + 0x40]",
            "test edi, edi",
            "je 0x8004585",
            "mov rdi, qword [r15 + 0x60]",
            "mov qword [rbp - 0x88], rdx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call crypto_aead_setauthsize",
            "mov rdx, qword [rbp - 0x88]",
            "mov ecx, dword [rbp - 0x80]",
            "mov r11, qword [rbp - 0x78]",
            "mov rax, qword [r15 + 0x68]",
            "test ecx, ecx",
            "mov esi, 0",
            "cmove r11, rsi",
            "mov r8d, dword [rbp - 0x64]",
            "lea rdi, [r15 + 0x38]",
            "mov rsi, r12",
            "mov dword [rax + 0x30], ecx",
            "mov qword [rax + 0x40], r11",
            "cmp word [rbx + 4], 0",
            "mov rcx, r8",
            "mov qword [rbp - 0x78], r8",
            "jne cryptodev_cipher_decrypt",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbp - 0x64]",
            "add r8, qword [rbx + 0x20]",
            "add eax, dword [rbx + 0x30]",
            "mov qword [rbx + 0x28], r8",
            "mov dword [rbx + 0x48], eax",
            "mov rdi, r15",
            "call release_user_pages",
            "mov rdi, qword [rbp - 0x70]",
            "xor esi, esi",
            "call free_pages",
            "test r12d, r12d",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x4c]",
            "mov rsi, r14",
            "mov rdi, r13",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "lea rdi, [r15 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x88",
            "mov eax, r12d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, dword [r15 + 0x38]",
            "test eax, eax",
            "jne 0x8004e22",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004970",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004689",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x800467c",
            "cmp dword [0x08004676], 1",
            "jg current_task",
            "mov r9, qword [rbx + 0x10]",
            "test r9, rdx",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [rbx + 0xc]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rdx, qword [rbx + 0x10]",
            "mov r10, qword [rbx + 0x18]",
            "sub r10, rdx",
            "cmp r10d, 0x100",
            "jbe 0x80048b0",
            "mov eax, dword [0x080046bd]",
            "test eax, eax",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "cmp dword [0x080046d2], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2ea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x30]",
            "mov edx, dword [rbp - 0x64]",
            "sub r8, rax",
            "add r8, qword [rbx + 0x20]",
            "sub edx, eax",
            "mov dword [rbx + 0x48], edx",
            "mov qword [rbx + 0x28], r8",
            "jmp release_user_pages",
            "mov dword [rbx + 0x30], eax",
            "jmp 0x8004585",
            "cmp dword [0x08004757], 1",
            "jle 0x8004689",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "add eax, 1",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r8d, 0x7c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004689",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004bfe",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004810",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x8004810",
            "cmp dword [0x080047ca], 1",
            "jle 0x8004810",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x43",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x78], r11",
            "call printk",
            "mov r11, qword [rbp - 0x78]",
            "nop dword [rax + rax]",
            "movsxd rax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, 1",
            "mov dword [r15 + 0xc0], 0",
            "mov rdi, r15",
            "mov rsi, rcx",
            "lea rax, [rcx + rax - 1]",
            "shr rsi, 0xc",
            "sub edx, esi",
            "shr rax, 0xc",
            "lea ecx, [rdx + rax]",
            "mov dword [r15 + 0xbc], ecx",
            "mov esi, ecx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov ecx, dword [rbp - 0x80]",
            "je 0x8004b46",
            "mov esi, dword [0x08004871]",
            "test esi, esi",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2a0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rcx, rdx",
            "lea rax, [rdx + rax - 1]",
            "mov esi, 1",
            "shr rcx, 0xc",
            "mov rdi, r15",
            "mov qword [rbp - 0x80], r10",
            "sub esi, ecx",
            "shr rax, 0xc",
            "lea r11d, [rsi + rax]",
            "lea esi, [r11 + r11]",
            "mov dword [rbp - 0x78], r11d",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "je 0x8004a70",
            "mov r14d, dword [0x080048f9]",
            "test r14d, r14d",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x92",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rdi, qword [rbp - 0x70]",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "mov edx, dword [rbx + 0xc]",
            "mov rsi, qword [rbp - 0x70]",
            "lea rdi, [rbp - 0x50]",
            "call sg_init_one",
            "lea r11, [rbp - 0x50]",
            "jmp 0x80044a0",
            "cmp qword [rbx + 0x10], 0",
            "jne 0x8004659",
            "mov eax, dword [0x08004981]",
            "test eax, eax",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x72",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "cmp dword [0x080049c7], 0",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x276",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "xor r11d, r11d",
            "jmp 0x80044a0",
            "mov r11d, dword [0x08004a17]",
            "test r11d, r11d",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x80045e5",
            "cmp dword [0x08004a32], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov ecx, r11d",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0xc]",
            "mov edx, 1",
            "mov rdi, qword [rbx + 0x10]",
            "mov qword [rbp - 0x80], r10",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov dword [rbp - 0x78], r11d",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r12, qword [r15 + 0xd0]",
            "movsxd rdi, r11d",
            "mov dword [r15 + 0xbc], r11d",
            "shl rdi, 5",
            "mov esi, r11d",
            "mov dword [r15 + 0xc0], 0",
            "mov qword [rbp - 0x80], r10",
            "add rdi, r12",
            "mov qword [rbp - 0x60], rdi",
            "call sg_init_table",
            "mov edx, dword [rbx + 0xc]",
            "mov rdi, qword [r15 + 0xd0]",
            "mov rsi, qword [rbp - 0x60]",
            "call sg_copy",
            "mov r10, qword [rbp - 0x80]",
            "mov rdi, qword [rbp - 0x60]",
            "mov esi, r10d",
            "call sg_advance",
            "test rax, rax",
            "mov r8, rax",
            "mov qword [rbp - 0x60], rax",
            "je release_user_pages",
            "mov ecx, dword [rbx + 0xc]",
            "mov r9d, dword [rbx + 8]",
            "mov rdx, r12",
            "mov rdi, r15",
            "mov rsi, rbx",
            "call sym.srtp_auth_n_crypt",
            "mov rdi, r15",
            "mov r12d, eax",
            "call release_user_pages",
            "jmp 0x80045f0",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov edx, 1",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0x48]",
            "mov rdi, qword [rbx + 0x20]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r8, qword [r15 + 0xd0]",
            "mov ecx, dword [rbx + 0xc]",
            "mov rdx, r11",
            "mov r9d, dword [rbx + 8]",
            "mov rsi, rbx",
            "mov rdi, r15",
            "mov qword [rbp - 0x60], r8",
            "call sym.tls_auth_n_crypt",
            "mov r12d, eax",
            "jmp release_user_pages",
            "mov rdi, r15",
            "call release_user_pages",
            "mov r13d, dword [0x08004bb9]",
            "test r13d, r13d",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov r12d, 0xffffffea",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004c10], 0",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x8004628",
            "cmp dword [0x08004c28], 0",
            "jle 0x8004c16",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp 0x8004628",
            "xor eax, eax",
            "jmp 0x8004545",
            "cmp dword [0x08004c74], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x80",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004cbd], 0",
            "mov r12d, 0xffffffea",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "cmp dword [0x08004d06], 0",
            "mov r12d, 0xffffffea",
            "js 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2aa",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004d4f], 0",
            "mov r12d, 0xffffffea",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x286",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004d98], 0",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2b2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004ddb], 0",
            "mov r12d, 0xffffffea",
            "js release_user_pages",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "add rax, 0x4b8",
            "mov r9d, esi",
            "mov r8d, 0x241",
            "mov rsi, rax",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [r15 + 0x44], 0",
            "je 0x8004e34",
            "cmp dword [r15 + 0x40], 0",
            "je 0x800464c",
            "cmp dword [0x08004e3b], 0",
            "js 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x270",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004e84], 0",
            "mov r12d, 0xfffffff4",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x28c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r10d",
            "mov r8d, 0x8a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004f0c], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x25a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [0x08004f52], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x250",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004c16",
            "cmp dword [0x08004fd1], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x99",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x0800501a], 0",
            "jle 0x8004a20",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x57",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x79",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov eax, dword [r15 + 0xb4]",
            "mov edx, eax",
            "sub rdx, 1",
            "jmp 0x800467c",
            "cmp dword [0x080050ac], 0",
            "mov r12d, 0xfffffff2",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x292",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x47",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity"
        ]
    },
    "unk.0x8004fc5": {
        "function_address": "0x08004fc5",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x88",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r15, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [r15 + 0x88]",
            "test eax, eax",
            "je 0x8004427",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "lea r13, [rbx + 0x50]",
            "cmovle edx, dword [rbx + 0x4c]",
            "lea r14, [r15 + 0x78]",
            "mov eax, 0x10",
            "mov rsi, r13",
            "mov rdi, r14",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "test byte [rbx + 6], 0x20",
            "jne 0x8004640",
            "cmp dword [rbx + 0xc], 0x1000",
            "ja cryptodev_verbosity",
            "xor esi, esi",
            "mov edi, 0xd0",
            "call __get_free_pages",
            "test rax, rax",
            "mov qword [rbp - 0x70], rax",
            "je cryptodev_verbosity",
            "mov rsi, qword [rbx + 0x10]",
            "test rsi, rsi",
            "je 0x8004a08",
            "mov edx, dword [rbx + 0xc]",
            "xor r11d, r11d",
            "test edx, edx",
            "jne _copy_from_user",
            "test byte [rbx + 6], 0x10",
            "je 0x80044b3",
            "mov r12d, dword [r15 + 0x40]",
            "test r12d, r12d",
            "je 0x80047a0",
            "mov r10d, dword [r15 + 0x38]",
            "test r10d, r10d",
            "je cryptodev_verbosity",
            "cmp qword [r15 + 0x40], 0",
            "je cryptodev_verbosity",
            "lea rax, [rbp - 0x60]",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, dword [rbx + 8]",
            "mov rsi, qword [rbx + 0x18]",
            "mov r9, qword [rbx + 0x60]",
            "mov rdi, r15",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x58]",
            "mov r8d, dword [rbx + 0x48]",
            "mov qword [rbp - 0x78], r11",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x68]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "mov r12d, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r9d, dword [r15 + 0x38]",
            "mov eax, dword [rbx + 8]",
            "mov rdx, qword [rbp - 0x60]",
            "mov r12, qword [rbp - 0x58]",
            "mov ecx, dword [rbx + 0xc]",
            "test r9d, r9d",
            "mov dword [rbp - 0x64], eax",
            "je 0x8004c66",
            "mov r8d, dword [r15 + 0x40]",
            "test r8d, r8d",
            "je 0x8004c66",
            "mov rax, qword [r15 + 0x60]",
            "mov eax, dword [rax + 0x3c]",
            "mov esi, dword [rbx + 0x30]",
            "cmp esi, eax",
            "ja cryptodev_verbosity",
            "test esi, esi",
            "je 0x8004740",
            "mov edi, dword [r15 + 0x40]",
            "test edi, edi",
            "je 0x8004585",
            "mov rdi, qword [r15 + 0x60]",
            "mov qword [rbp - 0x88], rdx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call crypto_aead_setauthsize",
            "mov rdx, qword [rbp - 0x88]",
            "mov ecx, dword [rbp - 0x80]",
            "mov r11, qword [rbp - 0x78]",
            "mov rax, qword [r15 + 0x68]",
            "test ecx, ecx",
            "mov esi, 0",
            "cmove r11, rsi",
            "mov r8d, dword [rbp - 0x64]",
            "lea rdi, [r15 + 0x38]",
            "mov rsi, r12",
            "mov dword [rax + 0x30], ecx",
            "mov qword [rax + 0x40], r11",
            "cmp word [rbx + 4], 0",
            "mov rcx, r8",
            "mov qword [rbp - 0x78], r8",
            "jne cryptodev_cipher_decrypt",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbp - 0x64]",
            "add r8, qword [rbx + 0x20]",
            "add eax, dword [rbx + 0x30]",
            "mov qword [rbx + 0x28], r8",
            "mov dword [rbx + 0x48], eax",
            "mov rdi, r15",
            "call release_user_pages",
            "mov rdi, qword [rbp - 0x70]",
            "xor esi, esi",
            "call free_pages",
            "test r12d, r12d",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x4c]",
            "mov rsi, r14",
            "mov rdi, r13",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "lea rdi, [r15 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x88",
            "mov eax, r12d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, dword [r15 + 0x38]",
            "test eax, eax",
            "jne 0x8004e22",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004970",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004689",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x800467c",
            "cmp dword [0x08004676], 1",
            "jg current_task",
            "mov r9, qword [rbx + 0x10]",
            "test r9, rdx",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [rbx + 0xc]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rdx, qword [rbx + 0x10]",
            "mov r10, qword [rbx + 0x18]",
            "sub r10, rdx",
            "cmp r10d, 0x100",
            "jbe 0x80048b0",
            "mov eax, dword [0x080046bd]",
            "test eax, eax",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "cmp dword [0x080046d2], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2ea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x30]",
            "mov edx, dword [rbp - 0x64]",
            "sub r8, rax",
            "add r8, qword [rbx + 0x20]",
            "sub edx, eax",
            "mov dword [rbx + 0x48], edx",
            "mov qword [rbx + 0x28], r8",
            "jmp release_user_pages",
            "mov dword [rbx + 0x30], eax",
            "jmp 0x8004585",
            "cmp dword [0x08004757], 1",
            "jle 0x8004689",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "add eax, 1",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r8d, 0x7c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004689",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004bfe",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004810",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x8004810",
            "cmp dword [0x080047ca], 1",
            "jle 0x8004810",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x43",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x78], r11",
            "call printk",
            "mov r11, qword [rbp - 0x78]",
            "nop dword [rax + rax]",
            "movsxd rax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, 1",
            "mov dword [r15 + 0xc0], 0",
            "mov rdi, r15",
            "mov rsi, rcx",
            "lea rax, [rcx + rax - 1]",
            "shr rsi, 0xc",
            "sub edx, esi",
            "shr rax, 0xc",
            "lea ecx, [rdx + rax]",
            "mov dword [r15 + 0xbc], ecx",
            "mov esi, ecx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov ecx, dword [rbp - 0x80]",
            "je 0x8004b46",
            "mov esi, dword [0x08004871]",
            "test esi, esi",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2a0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rcx, rdx",
            "lea rax, [rdx + rax - 1]",
            "mov esi, 1",
            "shr rcx, 0xc",
            "mov rdi, r15",
            "mov qword [rbp - 0x80], r10",
            "sub esi, ecx",
            "shr rax, 0xc",
            "lea r11d, [rsi + rax]",
            "lea esi, [r11 + r11]",
            "mov dword [rbp - 0x78], r11d",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "je 0x8004a70",
            "mov r14d, dword [0x080048f9]",
            "test r14d, r14d",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x92",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rdi, qword [rbp - 0x70]",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "mov edx, dword [rbx + 0xc]",
            "mov rsi, qword [rbp - 0x70]",
            "lea rdi, [rbp - 0x50]",
            "call sg_init_one",
            "lea r11, [rbp - 0x50]",
            "jmp 0x80044a0",
            "cmp qword [rbx + 0x10], 0",
            "jne 0x8004659",
            "mov eax, dword [0x08004981]",
            "test eax, eax",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x72",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "cmp dword [0x080049c7], 0",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x276",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "xor r11d, r11d",
            "jmp 0x80044a0",
            "mov r11d, dword [0x08004a17]",
            "test r11d, r11d",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x80045e5",
            "cmp dword [0x08004a32], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov ecx, r11d",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0xc]",
            "mov edx, 1",
            "mov rdi, qword [rbx + 0x10]",
            "mov qword [rbp - 0x80], r10",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov dword [rbp - 0x78], r11d",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r12, qword [r15 + 0xd0]",
            "movsxd rdi, r11d",
            "mov dword [r15 + 0xbc], r11d",
            "shl rdi, 5",
            "mov esi, r11d",
            "mov dword [r15 + 0xc0], 0",
            "mov qword [rbp - 0x80], r10",
            "add rdi, r12",
            "mov qword [rbp - 0x60], rdi",
            "call sg_init_table",
            "mov edx, dword [rbx + 0xc]",
            "mov rdi, qword [r15 + 0xd0]",
            "mov rsi, qword [rbp - 0x60]",
            "call sg_copy",
            "mov r10, qword [rbp - 0x80]",
            "mov rdi, qword [rbp - 0x60]",
            "mov esi, r10d",
            "call sg_advance",
            "test rax, rax",
            "mov r8, rax",
            "mov qword [rbp - 0x60], rax",
            "je release_user_pages",
            "mov ecx, dword [rbx + 0xc]",
            "mov r9d, dword [rbx + 8]",
            "mov rdx, r12",
            "mov rdi, r15",
            "mov rsi, rbx",
            "call sym.srtp_auth_n_crypt",
            "mov rdi, r15",
            "mov r12d, eax",
            "call release_user_pages",
            "jmp 0x80045f0",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov edx, 1",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0x48]",
            "mov rdi, qword [rbx + 0x20]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r8, qword [r15 + 0xd0]",
            "mov ecx, dword [rbx + 0xc]",
            "mov rdx, r11",
            "mov r9d, dword [rbx + 8]",
            "mov rsi, rbx",
            "mov rdi, r15",
            "mov qword [rbp - 0x60], r8",
            "call sym.tls_auth_n_crypt",
            "mov r12d, eax",
            "jmp release_user_pages",
            "mov rdi, r15",
            "call release_user_pages",
            "mov r13d, dword [0x08004bb9]",
            "test r13d, r13d",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov r12d, 0xffffffea",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004c10], 0",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x8004628",
            "cmp dword [0x08004c28], 0",
            "jle 0x8004c16",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp 0x8004628",
            "xor eax, eax",
            "jmp 0x8004545",
            "cmp dword [0x08004c74], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x80",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004cbd], 0",
            "mov r12d, 0xffffffea",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "cmp dword [0x08004d06], 0",
            "mov r12d, 0xffffffea",
            "js 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2aa",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004d4f], 0",
            "mov r12d, 0xffffffea",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x286",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004d98], 0",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2b2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004ddb], 0",
            "mov r12d, 0xffffffea",
            "js release_user_pages",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "add rax, 0x4b8",
            "mov r9d, esi",
            "mov r8d, 0x241",
            "mov rsi, rax",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [r15 + 0x44], 0",
            "je 0x8004e34",
            "cmp dword [r15 + 0x40], 0",
            "je 0x800464c",
            "cmp dword [0x08004e3b], 0",
            "js 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x270",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004e84], 0",
            "mov r12d, 0xfffffff4",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x28c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r10d",
            "mov r8d, 0x8a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004f0c], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x25a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [0x08004f52], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x250",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004c16",
            "cmp dword [0x08004fd1], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x99",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x0800501a], 0",
            "jle 0x8004a20",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x57",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x79",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov eax, dword [r15 + 0xb4]",
            "mov edx, eax",
            "sub rdx, 1",
            "jmp 0x800467c",
            "cmp dword [0x080050ac], 0",
            "mov r12d, 0xfffffff2",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x292",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x47",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity"
        ]
    },
    "unk.0x800500e": {
        "function_address": "0x0800500e",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x88",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r15, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [r15 + 0x88]",
            "test eax, eax",
            "je 0x8004427",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "lea r13, [rbx + 0x50]",
            "cmovle edx, dword [rbx + 0x4c]",
            "lea r14, [r15 + 0x78]",
            "mov eax, 0x10",
            "mov rsi, r13",
            "mov rdi, r14",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "test byte [rbx + 6], 0x20",
            "jne 0x8004640",
            "cmp dword [rbx + 0xc], 0x1000",
            "ja cryptodev_verbosity",
            "xor esi, esi",
            "mov edi, 0xd0",
            "call __get_free_pages",
            "test rax, rax",
            "mov qword [rbp - 0x70], rax",
            "je cryptodev_verbosity",
            "mov rsi, qword [rbx + 0x10]",
            "test rsi, rsi",
            "je 0x8004a08",
            "mov edx, dword [rbx + 0xc]",
            "xor r11d, r11d",
            "test edx, edx",
            "jne _copy_from_user",
            "test byte [rbx + 6], 0x10",
            "je 0x80044b3",
            "mov r12d, dword [r15 + 0x40]",
            "test r12d, r12d",
            "je 0x80047a0",
            "mov r10d, dword [r15 + 0x38]",
            "test r10d, r10d",
            "je cryptodev_verbosity",
            "cmp qword [r15 + 0x40], 0",
            "je cryptodev_verbosity",
            "lea rax, [rbp - 0x60]",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, dword [rbx + 8]",
            "mov rsi, qword [rbx + 0x18]",
            "mov r9, qword [rbx + 0x60]",
            "mov rdi, r15",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x58]",
            "mov r8d, dword [rbx + 0x48]",
            "mov qword [rbp - 0x78], r11",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x68]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "mov r12d, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r9d, dword [r15 + 0x38]",
            "mov eax, dword [rbx + 8]",
            "mov rdx, qword [rbp - 0x60]",
            "mov r12, qword [rbp - 0x58]",
            "mov ecx, dword [rbx + 0xc]",
            "test r9d, r9d",
            "mov dword [rbp - 0x64], eax",
            "je 0x8004c66",
            "mov r8d, dword [r15 + 0x40]",
            "test r8d, r8d",
            "je 0x8004c66",
            "mov rax, qword [r15 + 0x60]",
            "mov eax, dword [rax + 0x3c]",
            "mov esi, dword [rbx + 0x30]",
            "cmp esi, eax",
            "ja cryptodev_verbosity",
            "test esi, esi",
            "je 0x8004740",
            "mov edi, dword [r15 + 0x40]",
            "test edi, edi",
            "je 0x8004585",
            "mov rdi, qword [r15 + 0x60]",
            "mov qword [rbp - 0x88], rdx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call crypto_aead_setauthsize",
            "mov rdx, qword [rbp - 0x88]",
            "mov ecx, dword [rbp - 0x80]",
            "mov r11, qword [rbp - 0x78]",
            "mov rax, qword [r15 + 0x68]",
            "test ecx, ecx",
            "mov esi, 0",
            "cmove r11, rsi",
            "mov r8d, dword [rbp - 0x64]",
            "lea rdi, [r15 + 0x38]",
            "mov rsi, r12",
            "mov dword [rax + 0x30], ecx",
            "mov qword [rax + 0x40], r11",
            "cmp word [rbx + 4], 0",
            "mov rcx, r8",
            "mov qword [rbp - 0x78], r8",
            "jne cryptodev_cipher_decrypt",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbp - 0x64]",
            "add r8, qword [rbx + 0x20]",
            "add eax, dword [rbx + 0x30]",
            "mov qword [rbx + 0x28], r8",
            "mov dword [rbx + 0x48], eax",
            "mov rdi, r15",
            "call release_user_pages",
            "mov rdi, qword [rbp - 0x70]",
            "xor esi, esi",
            "call free_pages",
            "test r12d, r12d",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x4c]",
            "mov rsi, r14",
            "mov rdi, r13",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "lea rdi, [r15 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x88",
            "mov eax, r12d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, dword [r15 + 0x38]",
            "test eax, eax",
            "jne 0x8004e22",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004970",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004689",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x800467c",
            "cmp dword [0x08004676], 1",
            "jg current_task",
            "mov r9, qword [rbx + 0x10]",
            "test r9, rdx",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [rbx + 0xc]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rdx, qword [rbx + 0x10]",
            "mov r10, qword [rbx + 0x18]",
            "sub r10, rdx",
            "cmp r10d, 0x100",
            "jbe 0x80048b0",
            "mov eax, dword [0x080046bd]",
            "test eax, eax",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "cmp dword [0x080046d2], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2ea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x30]",
            "mov edx, dword [rbp - 0x64]",
            "sub r8, rax",
            "add r8, qword [rbx + 0x20]",
            "sub edx, eax",
            "mov dword [rbx + 0x48], edx",
            "mov qword [rbx + 0x28], r8",
            "jmp release_user_pages",
            "mov dword [rbx + 0x30], eax",
            "jmp 0x8004585",
            "cmp dword [0x08004757], 1",
            "jle 0x8004689",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "add eax, 1",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r8d, 0x7c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004689",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004bfe",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004810",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x8004810",
            "cmp dword [0x080047ca], 1",
            "jle 0x8004810",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x43",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x78], r11",
            "call printk",
            "mov r11, qword [rbp - 0x78]",
            "nop dword [rax + rax]",
            "movsxd rax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, 1",
            "mov dword [r15 + 0xc0], 0",
            "mov rdi, r15",
            "mov rsi, rcx",
            "lea rax, [rcx + rax - 1]",
            "shr rsi, 0xc",
            "sub edx, esi",
            "shr rax, 0xc",
            "lea ecx, [rdx + rax]",
            "mov dword [r15 + 0xbc], ecx",
            "mov esi, ecx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov ecx, dword [rbp - 0x80]",
            "je 0x8004b46",
            "mov esi, dword [0x08004871]",
            "test esi, esi",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2a0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rcx, rdx",
            "lea rax, [rdx + rax - 1]",
            "mov esi, 1",
            "shr rcx, 0xc",
            "mov rdi, r15",
            "mov qword [rbp - 0x80], r10",
            "sub esi, ecx",
            "shr rax, 0xc",
            "lea r11d, [rsi + rax]",
            "lea esi, [r11 + r11]",
            "mov dword [rbp - 0x78], r11d",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "je 0x8004a70",
            "mov r14d, dword [0x080048f9]",
            "test r14d, r14d",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x92",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rdi, qword [rbp - 0x70]",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "mov edx, dword [rbx + 0xc]",
            "mov rsi, qword [rbp - 0x70]",
            "lea rdi, [rbp - 0x50]",
            "call sg_init_one",
            "lea r11, [rbp - 0x50]",
            "jmp 0x80044a0",
            "cmp qword [rbx + 0x10], 0",
            "jne 0x8004659",
            "mov eax, dword [0x08004981]",
            "test eax, eax",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x72",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "cmp dword [0x080049c7], 0",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x276",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "xor r11d, r11d",
            "jmp 0x80044a0",
            "mov r11d, dword [0x08004a17]",
            "test r11d, r11d",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x80045e5",
            "cmp dword [0x08004a32], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov ecx, r11d",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0xc]",
            "mov edx, 1",
            "mov rdi, qword [rbx + 0x10]",
            "mov qword [rbp - 0x80], r10",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov dword [rbp - 0x78], r11d",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r12, qword [r15 + 0xd0]",
            "movsxd rdi, r11d",
            "mov dword [r15 + 0xbc], r11d",
            "shl rdi, 5",
            "mov esi, r11d",
            "mov dword [r15 + 0xc0], 0",
            "mov qword [rbp - 0x80], r10",
            "add rdi, r12",
            "mov qword [rbp - 0x60], rdi",
            "call sg_init_table",
            "mov edx, dword [rbx + 0xc]",
            "mov rdi, qword [r15 + 0xd0]",
            "mov rsi, qword [rbp - 0x60]",
            "call sg_copy",
            "mov r10, qword [rbp - 0x80]",
            "mov rdi, qword [rbp - 0x60]",
            "mov esi, r10d",
            "call sg_advance",
            "test rax, rax",
            "mov r8, rax",
            "mov qword [rbp - 0x60], rax",
            "je release_user_pages",
            "mov ecx, dword [rbx + 0xc]",
            "mov r9d, dword [rbx + 8]",
            "mov rdx, r12",
            "mov rdi, r15",
            "mov rsi, rbx",
            "call sym.srtp_auth_n_crypt",
            "mov rdi, r15",
            "mov r12d, eax",
            "call release_user_pages",
            "jmp 0x80045f0",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov edx, 1",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0x48]",
            "mov rdi, qword [rbx + 0x20]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r8, qword [r15 + 0xd0]",
            "mov ecx, dword [rbx + 0xc]",
            "mov rdx, r11",
            "mov r9d, dword [rbx + 8]",
            "mov rsi, rbx",
            "mov rdi, r15",
            "mov qword [rbp - 0x60], r8",
            "call sym.tls_auth_n_crypt",
            "mov r12d, eax",
            "jmp release_user_pages",
            "mov rdi, r15",
            "call release_user_pages",
            "mov r13d, dword [0x08004bb9]",
            "test r13d, r13d",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov r12d, 0xffffffea",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004c10], 0",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x8004628",
            "cmp dword [0x08004c28], 0",
            "jle 0x8004c16",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp 0x8004628",
            "xor eax, eax",
            "jmp 0x8004545",
            "cmp dword [0x08004c74], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x80",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004cbd], 0",
            "mov r12d, 0xffffffea",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "cmp dword [0x08004d06], 0",
            "mov r12d, 0xffffffea",
            "js 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2aa",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004d4f], 0",
            "mov r12d, 0xffffffea",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x286",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004d98], 0",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2b2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004ddb], 0",
            "mov r12d, 0xffffffea",
            "js release_user_pages",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "add rax, 0x4b8",
            "mov r9d, esi",
            "mov r8d, 0x241",
            "mov rsi, rax",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [r15 + 0x44], 0",
            "je 0x8004e34",
            "cmp dword [r15 + 0x40], 0",
            "je 0x800464c",
            "cmp dword [0x08004e3b], 0",
            "js 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x270",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004e84], 0",
            "mov r12d, 0xfffffff4",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x28c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r10d",
            "mov r8d, 0x8a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004f0c], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x25a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [0x08004f52], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x250",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004c16",
            "cmp dword [0x08004fd1], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x99",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x0800501a], 0",
            "jle 0x8004a20",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x57",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x79",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov eax, dword [r15 + 0xb4]",
            "mov edx, eax",
            "sub rdx, 1",
            "jmp 0x800467c",
            "cmp dword [0x080050ac], 0",
            "mov r12d, 0xfffffff2",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x292",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x47",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity"
        ]
    },
    "unk.0x8005057": {
        "function_address": "0x08005057",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x88",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r15, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [r15 + 0x88]",
            "test eax, eax",
            "je 0x8004427",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "lea r13, [rbx + 0x50]",
            "cmovle edx, dword [rbx + 0x4c]",
            "lea r14, [r15 + 0x78]",
            "mov eax, 0x10",
            "mov rsi, r13",
            "mov rdi, r14",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "test byte [rbx + 6], 0x20",
            "jne 0x8004640",
            "cmp dword [rbx + 0xc], 0x1000",
            "ja cryptodev_verbosity",
            "xor esi, esi",
            "mov edi, 0xd0",
            "call __get_free_pages",
            "test rax, rax",
            "mov qword [rbp - 0x70], rax",
            "je cryptodev_verbosity",
            "mov rsi, qword [rbx + 0x10]",
            "test rsi, rsi",
            "je 0x8004a08",
            "mov edx, dword [rbx + 0xc]",
            "xor r11d, r11d",
            "test edx, edx",
            "jne _copy_from_user",
            "test byte [rbx + 6], 0x10",
            "je 0x80044b3",
            "mov r12d, dword [r15 + 0x40]",
            "test r12d, r12d",
            "je 0x80047a0",
            "mov r10d, dword [r15 + 0x38]",
            "test r10d, r10d",
            "je cryptodev_verbosity",
            "cmp qword [r15 + 0x40], 0",
            "je cryptodev_verbosity",
            "lea rax, [rbp - 0x60]",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, dword [rbx + 8]",
            "mov rsi, qword [rbx + 0x18]",
            "mov r9, qword [rbx + 0x60]",
            "mov rdi, r15",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x58]",
            "mov r8d, dword [rbx + 0x48]",
            "mov qword [rbp - 0x78], r11",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x68]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "mov r12d, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r9d, dword [r15 + 0x38]",
            "mov eax, dword [rbx + 8]",
            "mov rdx, qword [rbp - 0x60]",
            "mov r12, qword [rbp - 0x58]",
            "mov ecx, dword [rbx + 0xc]",
            "test r9d, r9d",
            "mov dword [rbp - 0x64], eax",
            "je 0x8004c66",
            "mov r8d, dword [r15 + 0x40]",
            "test r8d, r8d",
            "je 0x8004c66",
            "mov rax, qword [r15 + 0x60]",
            "mov eax, dword [rax + 0x3c]",
            "mov esi, dword [rbx + 0x30]",
            "cmp esi, eax",
            "ja cryptodev_verbosity",
            "test esi, esi",
            "je 0x8004740",
            "mov edi, dword [r15 + 0x40]",
            "test edi, edi",
            "je 0x8004585",
            "mov rdi, qword [r15 + 0x60]",
            "mov qword [rbp - 0x88], rdx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call crypto_aead_setauthsize",
            "mov rdx, qword [rbp - 0x88]",
            "mov ecx, dword [rbp - 0x80]",
            "mov r11, qword [rbp - 0x78]",
            "mov rax, qword [r15 + 0x68]",
            "test ecx, ecx",
            "mov esi, 0",
            "cmove r11, rsi",
            "mov r8d, dword [rbp - 0x64]",
            "lea rdi, [r15 + 0x38]",
            "mov rsi, r12",
            "mov dword [rax + 0x30], ecx",
            "mov qword [rax + 0x40], r11",
            "cmp word [rbx + 4], 0",
            "mov rcx, r8",
            "mov qword [rbp - 0x78], r8",
            "jne cryptodev_cipher_decrypt",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbp - 0x64]",
            "add r8, qword [rbx + 0x20]",
            "add eax, dword [rbx + 0x30]",
            "mov qword [rbx + 0x28], r8",
            "mov dword [rbx + 0x48], eax",
            "mov rdi, r15",
            "call release_user_pages",
            "mov rdi, qword [rbp - 0x70]",
            "xor esi, esi",
            "call free_pages",
            "test r12d, r12d",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x4c]",
            "mov rsi, r14",
            "mov rdi, r13",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "lea rdi, [r15 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x88",
            "mov eax, r12d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, dword [r15 + 0x38]",
            "test eax, eax",
            "jne 0x8004e22",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004970",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004689",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x800467c",
            "cmp dword [0x08004676], 1",
            "jg current_task",
            "mov r9, qword [rbx + 0x10]",
            "test r9, rdx",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [rbx + 0xc]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rdx, qword [rbx + 0x10]",
            "mov r10, qword [rbx + 0x18]",
            "sub r10, rdx",
            "cmp r10d, 0x100",
            "jbe 0x80048b0",
            "mov eax, dword [0x080046bd]",
            "test eax, eax",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "cmp dword [0x080046d2], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2ea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x30]",
            "mov edx, dword [rbp - 0x64]",
            "sub r8, rax",
            "add r8, qword [rbx + 0x20]",
            "sub edx, eax",
            "mov dword [rbx + 0x48], edx",
            "mov qword [rbx + 0x28], r8",
            "jmp release_user_pages",
            "mov dword [rbx + 0x30], eax",
            "jmp 0x8004585",
            "cmp dword [0x08004757], 1",
            "jle 0x8004689",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "add eax, 1",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r8d, 0x7c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004689",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004bfe",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004810",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x8004810",
            "cmp dword [0x080047ca], 1",
            "jle 0x8004810",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x43",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x78], r11",
            "call printk",
            "mov r11, qword [rbp - 0x78]",
            "nop dword [rax + rax]",
            "movsxd rax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, 1",
            "mov dword [r15 + 0xc0], 0",
            "mov rdi, r15",
            "mov rsi, rcx",
            "lea rax, [rcx + rax - 1]",
            "shr rsi, 0xc",
            "sub edx, esi",
            "shr rax, 0xc",
            "lea ecx, [rdx + rax]",
            "mov dword [r15 + 0xbc], ecx",
            "mov esi, ecx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov ecx, dword [rbp - 0x80]",
            "je 0x8004b46",
            "mov esi, dword [0x08004871]",
            "test esi, esi",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2a0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rcx, rdx",
            "lea rax, [rdx + rax - 1]",
            "mov esi, 1",
            "shr rcx, 0xc",
            "mov rdi, r15",
            "mov qword [rbp - 0x80], r10",
            "sub esi, ecx",
            "shr rax, 0xc",
            "lea r11d, [rsi + rax]",
            "lea esi, [r11 + r11]",
            "mov dword [rbp - 0x78], r11d",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "je 0x8004a70",
            "mov r14d, dword [0x080048f9]",
            "test r14d, r14d",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x92",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rdi, qword [rbp - 0x70]",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "mov edx, dword [rbx + 0xc]",
            "mov rsi, qword [rbp - 0x70]",
            "lea rdi, [rbp - 0x50]",
            "call sg_init_one",
            "lea r11, [rbp - 0x50]",
            "jmp 0x80044a0",
            "cmp qword [rbx + 0x10], 0",
            "jne 0x8004659",
            "mov eax, dword [0x08004981]",
            "test eax, eax",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x72",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "cmp dword [0x080049c7], 0",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x276",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "xor r11d, r11d",
            "jmp 0x80044a0",
            "mov r11d, dword [0x08004a17]",
            "test r11d, r11d",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x80045e5",
            "cmp dword [0x08004a32], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov ecx, r11d",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0xc]",
            "mov edx, 1",
            "mov rdi, qword [rbx + 0x10]",
            "mov qword [rbp - 0x80], r10",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov dword [rbp - 0x78], r11d",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r12, qword [r15 + 0xd0]",
            "movsxd rdi, r11d",
            "mov dword [r15 + 0xbc], r11d",
            "shl rdi, 5",
            "mov esi, r11d",
            "mov dword [r15 + 0xc0], 0",
            "mov qword [rbp - 0x80], r10",
            "add rdi, r12",
            "mov qword [rbp - 0x60], rdi",
            "call sg_init_table",
            "mov edx, dword [rbx + 0xc]",
            "mov rdi, qword [r15 + 0xd0]",
            "mov rsi, qword [rbp - 0x60]",
            "call sg_copy",
            "mov r10, qword [rbp - 0x80]",
            "mov rdi, qword [rbp - 0x60]",
            "mov esi, r10d",
            "call sg_advance",
            "test rax, rax",
            "mov r8, rax",
            "mov qword [rbp - 0x60], rax",
            "je release_user_pages",
            "mov ecx, dword [rbx + 0xc]",
            "mov r9d, dword [rbx + 8]",
            "mov rdx, r12",
            "mov rdi, r15",
            "mov rsi, rbx",
            "call sym.srtp_auth_n_crypt",
            "mov rdi, r15",
            "mov r12d, eax",
            "call release_user_pages",
            "jmp 0x80045f0",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov edx, 1",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0x48]",
            "mov rdi, qword [rbx + 0x20]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r8, qword [r15 + 0xd0]",
            "mov ecx, dword [rbx + 0xc]",
            "mov rdx, r11",
            "mov r9d, dword [rbx + 8]",
            "mov rsi, rbx",
            "mov rdi, r15",
            "mov qword [rbp - 0x60], r8",
            "call sym.tls_auth_n_crypt",
            "mov r12d, eax",
            "jmp release_user_pages",
            "mov rdi, r15",
            "call release_user_pages",
            "mov r13d, dword [0x08004bb9]",
            "test r13d, r13d",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov r12d, 0xffffffea",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004c10], 0",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x8004628",
            "cmp dword [0x08004c28], 0",
            "jle 0x8004c16",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp 0x8004628",
            "xor eax, eax",
            "jmp 0x8004545",
            "cmp dword [0x08004c74], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x80",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004cbd], 0",
            "mov r12d, 0xffffffea",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "cmp dword [0x08004d06], 0",
            "mov r12d, 0xffffffea",
            "js 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2aa",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004d4f], 0",
            "mov r12d, 0xffffffea",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x286",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004d98], 0",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2b2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004ddb], 0",
            "mov r12d, 0xffffffea",
            "js release_user_pages",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "add rax, 0x4b8",
            "mov r9d, esi",
            "mov r8d, 0x241",
            "mov rsi, rax",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [r15 + 0x44], 0",
            "je 0x8004e34",
            "cmp dword [r15 + 0x40], 0",
            "je 0x800464c",
            "cmp dword [0x08004e3b], 0",
            "js 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x270",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004e84], 0",
            "mov r12d, 0xfffffff4",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x28c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r10d",
            "mov r8d, 0x8a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004f0c], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x25a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [0x08004f52], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x250",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004c16",
            "cmp dword [0x08004fd1], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x99",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x0800501a], 0",
            "jle 0x8004a20",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x57",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x79",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov eax, dword [r15 + 0xb4]",
            "mov edx, eax",
            "sub rdx, 1",
            "jmp 0x800467c",
            "cmp dword [0x080050ac], 0",
            "mov r12d, 0xfffffff2",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x292",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x47",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity"
        ]
    },
    "unk.0x8005093": {
        "function_address": "0x08005093",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x88",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r15, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [r15 + 0x88]",
            "test eax, eax",
            "je 0x8004427",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "lea r13, [rbx + 0x50]",
            "cmovle edx, dword [rbx + 0x4c]",
            "lea r14, [r15 + 0x78]",
            "mov eax, 0x10",
            "mov rsi, r13",
            "mov rdi, r14",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "test byte [rbx + 6], 0x20",
            "jne 0x8004640",
            "cmp dword [rbx + 0xc], 0x1000",
            "ja cryptodev_verbosity",
            "xor esi, esi",
            "mov edi, 0xd0",
            "call __get_free_pages",
            "test rax, rax",
            "mov qword [rbp - 0x70], rax",
            "je cryptodev_verbosity",
            "mov rsi, qword [rbx + 0x10]",
            "test rsi, rsi",
            "je 0x8004a08",
            "mov edx, dword [rbx + 0xc]",
            "xor r11d, r11d",
            "test edx, edx",
            "jne _copy_from_user",
            "test byte [rbx + 6], 0x10",
            "je 0x80044b3",
            "mov r12d, dword [r15 + 0x40]",
            "test r12d, r12d",
            "je 0x80047a0",
            "mov r10d, dword [r15 + 0x38]",
            "test r10d, r10d",
            "je cryptodev_verbosity",
            "cmp qword [r15 + 0x40], 0",
            "je cryptodev_verbosity",
            "lea rax, [rbp - 0x60]",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, dword [rbx + 8]",
            "mov rsi, qword [rbx + 0x18]",
            "mov r9, qword [rbx + 0x60]",
            "mov rdi, r15",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x58]",
            "mov r8d, dword [rbx + 0x48]",
            "mov qword [rbp - 0x78], r11",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x68]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "mov r12d, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r9d, dword [r15 + 0x38]",
            "mov eax, dword [rbx + 8]",
            "mov rdx, qword [rbp - 0x60]",
            "mov r12, qword [rbp - 0x58]",
            "mov ecx, dword [rbx + 0xc]",
            "test r9d, r9d",
            "mov dword [rbp - 0x64], eax",
            "je 0x8004c66",
            "mov r8d, dword [r15 + 0x40]",
            "test r8d, r8d",
            "je 0x8004c66",
            "mov rax, qword [r15 + 0x60]",
            "mov eax, dword [rax + 0x3c]",
            "mov esi, dword [rbx + 0x30]",
            "cmp esi, eax",
            "ja cryptodev_verbosity",
            "test esi, esi",
            "je 0x8004740",
            "mov edi, dword [r15 + 0x40]",
            "test edi, edi",
            "je 0x8004585",
            "mov rdi, qword [r15 + 0x60]",
            "mov qword [rbp - 0x88], rdx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call crypto_aead_setauthsize",
            "mov rdx, qword [rbp - 0x88]",
            "mov ecx, dword [rbp - 0x80]",
            "mov r11, qword [rbp - 0x78]",
            "mov rax, qword [r15 + 0x68]",
            "test ecx, ecx",
            "mov esi, 0",
            "cmove r11, rsi",
            "mov r8d, dword [rbp - 0x64]",
            "lea rdi, [r15 + 0x38]",
            "mov rsi, r12",
            "mov dword [rax + 0x30], ecx",
            "mov qword [rax + 0x40], r11",
            "cmp word [rbx + 4], 0",
            "mov rcx, r8",
            "mov qword [rbp - 0x78], r8",
            "jne cryptodev_cipher_decrypt",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbp - 0x64]",
            "add r8, qword [rbx + 0x20]",
            "add eax, dword [rbx + 0x30]",
            "mov qword [rbx + 0x28], r8",
            "mov dword [rbx + 0x48], eax",
            "mov rdi, r15",
            "call release_user_pages",
            "mov rdi, qword [rbp - 0x70]",
            "xor esi, esi",
            "call free_pages",
            "test r12d, r12d",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x4c]",
            "mov rsi, r14",
            "mov rdi, r13",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "lea rdi, [r15 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x88",
            "mov eax, r12d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, dword [r15 + 0x38]",
            "test eax, eax",
            "jne 0x8004e22",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004970",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004689",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x800467c",
            "cmp dword [0x08004676], 1",
            "jg current_task",
            "mov r9, qword [rbx + 0x10]",
            "test r9, rdx",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [rbx + 0xc]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rdx, qword [rbx + 0x10]",
            "mov r10, qword [rbx + 0x18]",
            "sub r10, rdx",
            "cmp r10d, 0x100",
            "jbe 0x80048b0",
            "mov eax, dword [0x080046bd]",
            "test eax, eax",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "cmp dword [0x080046d2], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2ea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x30]",
            "mov edx, dword [rbp - 0x64]",
            "sub r8, rax",
            "add r8, qword [rbx + 0x20]",
            "sub edx, eax",
            "mov dword [rbx + 0x48], edx",
            "mov qword [rbx + 0x28], r8",
            "jmp release_user_pages",
            "mov dword [rbx + 0x30], eax",
            "jmp 0x8004585",
            "cmp dword [0x08004757], 1",
            "jle 0x8004689",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "add eax, 1",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r8d, 0x7c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004689",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004bfe",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004810",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x8004810",
            "cmp dword [0x080047ca], 1",
            "jle 0x8004810",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x43",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x78], r11",
            "call printk",
            "mov r11, qword [rbp - 0x78]",
            "nop dword [rax + rax]",
            "movsxd rax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, 1",
            "mov dword [r15 + 0xc0], 0",
            "mov rdi, r15",
            "mov rsi, rcx",
            "lea rax, [rcx + rax - 1]",
            "shr rsi, 0xc",
            "sub edx, esi",
            "shr rax, 0xc",
            "lea ecx, [rdx + rax]",
            "mov dword [r15 + 0xbc], ecx",
            "mov esi, ecx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov ecx, dword [rbp - 0x80]",
            "je 0x8004b46",
            "mov esi, dword [0x08004871]",
            "test esi, esi",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2a0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rcx, rdx",
            "lea rax, [rdx + rax - 1]",
            "mov esi, 1",
            "shr rcx, 0xc",
            "mov rdi, r15",
            "mov qword [rbp - 0x80], r10",
            "sub esi, ecx",
            "shr rax, 0xc",
            "lea r11d, [rsi + rax]",
            "lea esi, [r11 + r11]",
            "mov dword [rbp - 0x78], r11d",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "je 0x8004a70",
            "mov r14d, dword [0x080048f9]",
            "test r14d, r14d",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x92",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rdi, qword [rbp - 0x70]",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "mov edx, dword [rbx + 0xc]",
            "mov rsi, qword [rbp - 0x70]",
            "lea rdi, [rbp - 0x50]",
            "call sg_init_one",
            "lea r11, [rbp - 0x50]",
            "jmp 0x80044a0",
            "cmp qword [rbx + 0x10], 0",
            "jne 0x8004659",
            "mov eax, dword [0x08004981]",
            "test eax, eax",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x72",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "cmp dword [0x080049c7], 0",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x276",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "xor r11d, r11d",
            "jmp 0x80044a0",
            "mov r11d, dword [0x08004a17]",
            "test r11d, r11d",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x80045e5",
            "cmp dword [0x08004a32], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov ecx, r11d",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0xc]",
            "mov edx, 1",
            "mov rdi, qword [rbx + 0x10]",
            "mov qword [rbp - 0x80], r10",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov dword [rbp - 0x78], r11d",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r12, qword [r15 + 0xd0]",
            "movsxd rdi, r11d",
            "mov dword [r15 + 0xbc], r11d",
            "shl rdi, 5",
            "mov esi, r11d",
            "mov dword [r15 + 0xc0], 0",
            "mov qword [rbp - 0x80], r10",
            "add rdi, r12",
            "mov qword [rbp - 0x60], rdi",
            "call sg_init_table",
            "mov edx, dword [rbx + 0xc]",
            "mov rdi, qword [r15 + 0xd0]",
            "mov rsi, qword [rbp - 0x60]",
            "call sg_copy",
            "mov r10, qword [rbp - 0x80]",
            "mov rdi, qword [rbp - 0x60]",
            "mov esi, r10d",
            "call sg_advance",
            "test rax, rax",
            "mov r8, rax",
            "mov qword [rbp - 0x60], rax",
            "je release_user_pages",
            "mov ecx, dword [rbx + 0xc]",
            "mov r9d, dword [rbx + 8]",
            "mov rdx, r12",
            "mov rdi, r15",
            "mov rsi, rbx",
            "call sym.srtp_auth_n_crypt",
            "mov rdi, r15",
            "mov r12d, eax",
            "call release_user_pages",
            "jmp 0x80045f0",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov edx, 1",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0x48]",
            "mov rdi, qword [rbx + 0x20]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r8, qword [r15 + 0xd0]",
            "mov ecx, dword [rbx + 0xc]",
            "mov rdx, r11",
            "mov r9d, dword [rbx + 8]",
            "mov rsi, rbx",
            "mov rdi, r15",
            "mov qword [rbp - 0x60], r8",
            "call sym.tls_auth_n_crypt",
            "mov r12d, eax",
            "jmp release_user_pages",
            "mov rdi, r15",
            "call release_user_pages",
            "mov r13d, dword [0x08004bb9]",
            "test r13d, r13d",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov r12d, 0xffffffea",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004c10], 0",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x8004628",
            "cmp dword [0x08004c28], 0",
            "jle 0x8004c16",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp 0x8004628",
            "xor eax, eax",
            "jmp 0x8004545",
            "cmp dword [0x08004c74], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x80",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004cbd], 0",
            "mov r12d, 0xffffffea",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "cmp dword [0x08004d06], 0",
            "mov r12d, 0xffffffea",
            "js 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2aa",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004d4f], 0",
            "mov r12d, 0xffffffea",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x286",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004d98], 0",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2b2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004ddb], 0",
            "mov r12d, 0xffffffea",
            "js release_user_pages",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "add rax, 0x4b8",
            "mov r9d, esi",
            "mov r8d, 0x241",
            "mov rsi, rax",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [r15 + 0x44], 0",
            "je 0x8004e34",
            "cmp dword [r15 + 0x40], 0",
            "je 0x800464c",
            "cmp dword [0x08004e3b], 0",
            "js 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x270",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004e84], 0",
            "mov r12d, 0xfffffff4",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x28c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r10d",
            "mov r8d, 0x8a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004f0c], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x25a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [0x08004f52], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x250",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004c16",
            "cmp dword [0x08004fd1], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x99",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x0800501a], 0",
            "jle 0x8004a20",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x57",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x79",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov eax, dword [r15 + 0xb4]",
            "mov edx, eax",
            "sub rdx, 1",
            "jmp 0x800467c",
            "cmp dword [0x080050ac], 0",
            "mov r12d, 0xfffffff2",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x292",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x47",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity"
        ]
    },
    "unk.0x80050e9": {
        "function_address": "0x080050e9",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x88",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r15, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [r15 + 0x88]",
            "test eax, eax",
            "je 0x8004427",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "lea r13, [rbx + 0x50]",
            "cmovle edx, dword [rbx + 0x4c]",
            "lea r14, [r15 + 0x78]",
            "mov eax, 0x10",
            "mov rsi, r13",
            "mov rdi, r14",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "test byte [rbx + 6], 0x20",
            "jne 0x8004640",
            "cmp dword [rbx + 0xc], 0x1000",
            "ja cryptodev_verbosity",
            "xor esi, esi",
            "mov edi, 0xd0",
            "call __get_free_pages",
            "test rax, rax",
            "mov qword [rbp - 0x70], rax",
            "je cryptodev_verbosity",
            "mov rsi, qword [rbx + 0x10]",
            "test rsi, rsi",
            "je 0x8004a08",
            "mov edx, dword [rbx + 0xc]",
            "xor r11d, r11d",
            "test edx, edx",
            "jne _copy_from_user",
            "test byte [rbx + 6], 0x10",
            "je 0x80044b3",
            "mov r12d, dword [r15 + 0x40]",
            "test r12d, r12d",
            "je 0x80047a0",
            "mov r10d, dword [r15 + 0x38]",
            "test r10d, r10d",
            "je cryptodev_verbosity",
            "cmp qword [r15 + 0x40], 0",
            "je cryptodev_verbosity",
            "lea rax, [rbp - 0x60]",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, dword [rbx + 8]",
            "mov rsi, qword [rbx + 0x18]",
            "mov r9, qword [rbx + 0x60]",
            "mov rdi, r15",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x58]",
            "mov r8d, dword [rbx + 0x48]",
            "mov qword [rbp - 0x78], r11",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x68]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "mov r12d, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r9d, dword [r15 + 0x38]",
            "mov eax, dword [rbx + 8]",
            "mov rdx, qword [rbp - 0x60]",
            "mov r12, qword [rbp - 0x58]",
            "mov ecx, dword [rbx + 0xc]",
            "test r9d, r9d",
            "mov dword [rbp - 0x64], eax",
            "je 0x8004c66",
            "mov r8d, dword [r15 + 0x40]",
            "test r8d, r8d",
            "je 0x8004c66",
            "mov rax, qword [r15 + 0x60]",
            "mov eax, dword [rax + 0x3c]",
            "mov esi, dword [rbx + 0x30]",
            "cmp esi, eax",
            "ja cryptodev_verbosity",
            "test esi, esi",
            "je 0x8004740",
            "mov edi, dword [r15 + 0x40]",
            "test edi, edi",
            "je 0x8004585",
            "mov rdi, qword [r15 + 0x60]",
            "mov qword [rbp - 0x88], rdx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call crypto_aead_setauthsize",
            "mov rdx, qword [rbp - 0x88]",
            "mov ecx, dword [rbp - 0x80]",
            "mov r11, qword [rbp - 0x78]",
            "mov rax, qword [r15 + 0x68]",
            "test ecx, ecx",
            "mov esi, 0",
            "cmove r11, rsi",
            "mov r8d, dword [rbp - 0x64]",
            "lea rdi, [r15 + 0x38]",
            "mov rsi, r12",
            "mov dword [rax + 0x30], ecx",
            "mov qword [rax + 0x40], r11",
            "cmp word [rbx + 4], 0",
            "mov rcx, r8",
            "mov qword [rbp - 0x78], r8",
            "jne cryptodev_cipher_decrypt",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbp - 0x64]",
            "add r8, qword [rbx + 0x20]",
            "add eax, dword [rbx + 0x30]",
            "mov qword [rbx + 0x28], r8",
            "mov dword [rbx + 0x48], eax",
            "mov rdi, r15",
            "call release_user_pages",
            "mov rdi, qword [rbp - 0x70]",
            "xor esi, esi",
            "call free_pages",
            "test r12d, r12d",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x4c]",
            "mov rsi, r14",
            "mov rdi, r13",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "lea rdi, [r15 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x88",
            "mov eax, r12d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, dword [r15 + 0x38]",
            "test eax, eax",
            "jne 0x8004e22",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004970",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004689",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x800467c",
            "cmp dword [0x08004676], 1",
            "jg current_task",
            "mov r9, qword [rbx + 0x10]",
            "test r9, rdx",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [rbx + 0xc]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rdx, qword [rbx + 0x10]",
            "mov r10, qword [rbx + 0x18]",
            "sub r10, rdx",
            "cmp r10d, 0x100",
            "jbe 0x80048b0",
            "mov eax, dword [0x080046bd]",
            "test eax, eax",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "cmp dword [0x080046d2], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2ea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x30]",
            "mov edx, dword [rbp - 0x64]",
            "sub r8, rax",
            "add r8, qword [rbx + 0x20]",
            "sub edx, eax",
            "mov dword [rbx + 0x48], edx",
            "mov qword [rbx + 0x28], r8",
            "jmp release_user_pages",
            "mov dword [rbx + 0x30], eax",
            "jmp 0x8004585",
            "cmp dword [0x08004757], 1",
            "jle 0x8004689",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "add eax, 1",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r8d, 0x7c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004689",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004bfe",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004810",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x8004810",
            "cmp dword [0x080047ca], 1",
            "jle 0x8004810",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x43",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x78], r11",
            "call printk",
            "mov r11, qword [rbp - 0x78]",
            "nop dword [rax + rax]",
            "movsxd rax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, 1",
            "mov dword [r15 + 0xc0], 0",
            "mov rdi, r15",
            "mov rsi, rcx",
            "lea rax, [rcx + rax - 1]",
            "shr rsi, 0xc",
            "sub edx, esi",
            "shr rax, 0xc",
            "lea ecx, [rdx + rax]",
            "mov dword [r15 + 0xbc], ecx",
            "mov esi, ecx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov ecx, dword [rbp - 0x80]",
            "je 0x8004b46",
            "mov esi, dword [0x08004871]",
            "test esi, esi",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2a0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rcx, rdx",
            "lea rax, [rdx + rax - 1]",
            "mov esi, 1",
            "shr rcx, 0xc",
            "mov rdi, r15",
            "mov qword [rbp - 0x80], r10",
            "sub esi, ecx",
            "shr rax, 0xc",
            "lea r11d, [rsi + rax]",
            "lea esi, [r11 + r11]",
            "mov dword [rbp - 0x78], r11d",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "je 0x8004a70",
            "mov r14d, dword [0x080048f9]",
            "test r14d, r14d",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x92",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rdi, qword [rbp - 0x70]",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "mov edx, dword [rbx + 0xc]",
            "mov rsi, qword [rbp - 0x70]",
            "lea rdi, [rbp - 0x50]",
            "call sg_init_one",
            "lea r11, [rbp - 0x50]",
            "jmp 0x80044a0",
            "cmp qword [rbx + 0x10], 0",
            "jne 0x8004659",
            "mov eax, dword [0x08004981]",
            "test eax, eax",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x72",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "cmp dword [0x080049c7], 0",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x276",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "xor r11d, r11d",
            "jmp 0x80044a0",
            "mov r11d, dword [0x08004a17]",
            "test r11d, r11d",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x80045e5",
            "cmp dword [0x08004a32], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov ecx, r11d",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0xc]",
            "mov edx, 1",
            "mov rdi, qword [rbx + 0x10]",
            "mov qword [rbp - 0x80], r10",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov dword [rbp - 0x78], r11d",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r12, qword [r15 + 0xd0]",
            "movsxd rdi, r11d",
            "mov dword [r15 + 0xbc], r11d",
            "shl rdi, 5",
            "mov esi, r11d",
            "mov dword [r15 + 0xc0], 0",
            "mov qword [rbp - 0x80], r10",
            "add rdi, r12",
            "mov qword [rbp - 0x60], rdi",
            "call sg_init_table",
            "mov edx, dword [rbx + 0xc]",
            "mov rdi, qword [r15 + 0xd0]",
            "mov rsi, qword [rbp - 0x60]",
            "call sg_copy",
            "mov r10, qword [rbp - 0x80]",
            "mov rdi, qword [rbp - 0x60]",
            "mov esi, r10d",
            "call sg_advance",
            "test rax, rax",
            "mov r8, rax",
            "mov qword [rbp - 0x60], rax",
            "je release_user_pages",
            "mov ecx, dword [rbx + 0xc]",
            "mov r9d, dword [rbx + 8]",
            "mov rdx, r12",
            "mov rdi, r15",
            "mov rsi, rbx",
            "call sym.srtp_auth_n_crypt",
            "mov rdi, r15",
            "mov r12d, eax",
            "call release_user_pages",
            "jmp 0x80045f0",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov edx, 1",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0x48]",
            "mov rdi, qword [rbx + 0x20]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r8, qword [r15 + 0xd0]",
            "mov ecx, dword [rbx + 0xc]",
            "mov rdx, r11",
            "mov r9d, dword [rbx + 8]",
            "mov rsi, rbx",
            "mov rdi, r15",
            "mov qword [rbp - 0x60], r8",
            "call sym.tls_auth_n_crypt",
            "mov r12d, eax",
            "jmp release_user_pages",
            "mov rdi, r15",
            "call release_user_pages",
            "mov r13d, dword [0x08004bb9]",
            "test r13d, r13d",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov r12d, 0xffffffea",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004c10], 0",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x8004628",
            "cmp dword [0x08004c28], 0",
            "jle 0x8004c16",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp 0x8004628",
            "xor eax, eax",
            "jmp 0x8004545",
            "cmp dword [0x08004c74], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x80",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004cbd], 0",
            "mov r12d, 0xffffffea",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "cmp dword [0x08004d06], 0",
            "mov r12d, 0xffffffea",
            "js 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2aa",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004d4f], 0",
            "mov r12d, 0xffffffea",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x286",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004d98], 0",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2b2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004ddb], 0",
            "mov r12d, 0xffffffea",
            "js release_user_pages",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "add rax, 0x4b8",
            "mov r9d, esi",
            "mov r8d, 0x241",
            "mov rsi, rax",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [r15 + 0x44], 0",
            "je 0x8004e34",
            "cmp dword [r15 + 0x40], 0",
            "je 0x800464c",
            "cmp dword [0x08004e3b], 0",
            "js 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x270",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004e84], 0",
            "mov r12d, 0xfffffff4",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x28c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r10d",
            "mov r8d, 0x8a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004f0c], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x25a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [0x08004f52], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x250",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004c16",
            "cmp dword [0x08004fd1], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x99",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x0800501a], 0",
            "jle 0x8004a20",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x57",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x79",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov eax, dword [r15 + 0xb4]",
            "mov edx, eax",
            "sub rdx, 1",
            "jmp 0x800467c",
            "cmp dword [0x080050ac], 0",
            "mov r12d, 0xfffffff2",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x292",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x47",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity"
        ]
    },
    "unk.0x8005125": {
        "function_address": "0x08005125",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x88",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r15, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x38]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [r15 + 0x88]",
            "test eax, eax",
            "je 0x8004427",
            "lea rdi, [r15 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r12d, eax",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "lea r13, [rbx + 0x50]",
            "cmovle edx, dword [rbx + 0x4c]",
            "lea r14, [r15 + 0x78]",
            "mov eax, 0x10",
            "mov rsi, r13",
            "mov rdi, r14",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "test byte [rbx + 6], 0x20",
            "jne 0x8004640",
            "cmp dword [rbx + 0xc], 0x1000",
            "ja cryptodev_verbosity",
            "xor esi, esi",
            "mov edi, 0xd0",
            "call __get_free_pages",
            "test rax, rax",
            "mov qword [rbp - 0x70], rax",
            "je cryptodev_verbosity",
            "mov rsi, qword [rbx + 0x10]",
            "test rsi, rsi",
            "je 0x8004a08",
            "mov edx, dword [rbx + 0xc]",
            "xor r11d, r11d",
            "test edx, edx",
            "jne _copy_from_user",
            "test byte [rbx + 6], 0x10",
            "je 0x80044b3",
            "mov r12d, dword [r15 + 0x40]",
            "test r12d, r12d",
            "je 0x80047a0",
            "mov r10d, dword [r15 + 0x38]",
            "test r10d, r10d",
            "je cryptodev_verbosity",
            "cmp qword [r15 + 0x40], 0",
            "je cryptodev_verbosity",
            "lea rax, [rbp - 0x60]",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, dword [rbx + 8]",
            "mov rsi, qword [rbx + 0x18]",
            "mov r9, qword [rbx + 0x60]",
            "mov rdi, r15",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x58]",
            "mov r8d, dword [rbx + 0x48]",
            "mov qword [rbp - 0x78], r11",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x68]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "mov r12d, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r9d, dword [r15 + 0x38]",
            "mov eax, dword [rbx + 8]",
            "mov rdx, qword [rbp - 0x60]",
            "mov r12, qword [rbp - 0x58]",
            "mov ecx, dword [rbx + 0xc]",
            "test r9d, r9d",
            "mov dword [rbp - 0x64], eax",
            "je 0x8004c66",
            "mov r8d, dword [r15 + 0x40]",
            "test r8d, r8d",
            "je 0x8004c66",
            "mov rax, qword [r15 + 0x60]",
            "mov eax, dword [rax + 0x3c]",
            "mov esi, dword [rbx + 0x30]",
            "cmp esi, eax",
            "ja cryptodev_verbosity",
            "test esi, esi",
            "je 0x8004740",
            "mov edi, dword [r15 + 0x40]",
            "test edi, edi",
            "je 0x8004585",
            "mov rdi, qword [r15 + 0x60]",
            "mov qword [rbp - 0x88], rdx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call crypto_aead_setauthsize",
            "mov rdx, qword [rbp - 0x88]",
            "mov ecx, dword [rbp - 0x80]",
            "mov r11, qword [rbp - 0x78]",
            "mov rax, qword [r15 + 0x68]",
            "test ecx, ecx",
            "mov esi, 0",
            "cmove r11, rsi",
            "mov r8d, dword [rbp - 0x64]",
            "lea rdi, [r15 + 0x38]",
            "mov rsi, r12",
            "mov dword [rax + 0x30], ecx",
            "mov qword [rax + 0x40], r11",
            "cmp word [rbx + 4], 0",
            "mov rcx, r8",
            "mov qword [rbp - 0x78], r8",
            "jne cryptodev_cipher_decrypt",
            "call cryptodev_cipher_encrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbp - 0x64]",
            "add r8, qword [rbx + 0x20]",
            "add eax, dword [rbx + 0x30]",
            "mov qword [rbx + 0x28], r8",
            "mov dword [rbx + 0x48], eax",
            "mov rdi, r15",
            "call release_user_pages",
            "mov rdi, qword [rbp - 0x70]",
            "xor esi, esi",
            "call free_pages",
            "test r12d, r12d",
            "jne cryptodev_verbosity",
            "mov edx, dword [r15 + 0x48]",
            "cmp dword [rbx + 0x4c], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x4c]",
            "mov rsi, r14",
            "mov rdi, r13",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "lea rdi, [r15 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x88",
            "mov eax, r12d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "mov eax, dword [r15 + 0x38]",
            "test eax, eax",
            "jne 0x8004e22",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004970",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004689",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x800467c",
            "cmp dword [0x08004676], 1",
            "jg current_task",
            "mov r9, qword [rbx + 0x10]",
            "test r9, rdx",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov eax, dword [rbx + 0xc]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rdx, qword [rbx + 0x10]",
            "mov r10, qword [rbx + 0x18]",
            "sub r10, rdx",
            "cmp r10d, 0x100",
            "jbe 0x80048b0",
            "mov eax, dword [0x080046bd]",
            "test eax, eax",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "cmp dword [0x080046d2], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2ea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "call cryptodev_cipher_decrypt",
            "test eax, eax",
            "mov r12d, eax",
            "mov r8, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov eax, dword [rbx + 0x30]",
            "mov edx, dword [rbp - 0x64]",
            "sub r8, rax",
            "add r8, qword [rbx + 0x20]",
            "sub edx, eax",
            "mov dword [rbx + 0x48], edx",
            "mov qword [rbx + 0x28], r8",
            "jmp release_user_pages",
            "mov dword [rbx + 0x30], eax",
            "jmp 0x8004585",
            "cmp dword [0x08004757], 1",
            "jle 0x8004689",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "add eax, 1",
            "lea rsi, [rcx + 0x4b8]",
            "mov dword [rsp], eax",
            "mov r8d, 0x7c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004689",
            "mov r9, qword [rbx + 0x20]",
            "test r9, r9",
            "je 0x8004bfe",
            "mov eax, dword [r15 + 0xb4]",
            "test eax, eax",
            "je 0x8004810",
            "mov edx, eax",
            "sub rdx, 1",
            "test r9, rdx",
            "je 0x8004810",
            "cmp dword [0x080047ca], 1",
            "jle 0x8004810",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x43",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov qword [rbp - 0x78], r11",
            "call printk",
            "mov r11, qword [rbp - 0x78]",
            "nop dword [rax + rax]",
            "movsxd rax, dword [rbx + 0x48]",
            "test eax, eax",
            "je cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x20]",
            "mov edx, 1",
            "mov dword [r15 + 0xc0], 0",
            "mov rdi, r15",
            "mov rsi, rcx",
            "lea rax, [rcx + rax - 1]",
            "shr rsi, 0xc",
            "sub edx, esi",
            "shr rax, 0xc",
            "lea ecx, [rdx + rax]",
            "mov dword [r15 + 0xbc], ecx",
            "mov esi, ecx",
            "mov dword [rbp - 0x80], ecx",
            "mov qword [rbp - 0x78], r11",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov ecx, dword [rbp - 0x80]",
            "je 0x8004b46",
            "mov esi, dword [0x08004871]",
            "test esi, esi",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2a0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rcx, rdx",
            "lea rax, [rdx + rax - 1]",
            "mov esi, 1",
            "shr rcx, 0xc",
            "mov rdi, r15",
            "mov qword [rbp - 0x80], r10",
            "sub esi, ecx",
            "shr rax, 0xc",
            "lea r11d, [rsi + rax]",
            "lea esi, [r11 + r11]",
            "mov dword [rbp - 0x78], r11d",
            "call adjust_sg_array",
            "test eax, eax",
            "mov r12d, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "je 0x8004a70",
            "mov r14d, dword [0x080048f9]",
            "test r14d, r14d",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x92",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rdi, qword [rbp - 0x70]",
            "call _copy_from_user",
            "test rax, rax",
            "jne cryptodev_verbosity",
            "mov edx, dword [rbx + 0xc]",
            "mov rsi, qword [rbp - 0x70]",
            "lea rdi, [rbp - 0x50]",
            "call sg_init_one",
            "lea r11, [rbp - 0x50]",
            "jmp 0x80044a0",
            "cmp qword [rbx + 0x10], 0",
            "jne 0x8004659",
            "mov eax, dword [0x08004981]",
            "test eax, eax",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x72",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "cmp dword [0x080049c7], 0",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x276",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "xor r11d, r11d",
            "jmp 0x80044a0",
            "mov r11d, dword [0x08004a17]",
            "test r11d, r11d",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x80045e5",
            "cmp dword [0x08004a32], 0",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2e0",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov ecx, r11d",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0xc]",
            "mov edx, 1",
            "mov rdi, qword [rbx + 0x10]",
            "mov qword [rbp - 0x80], r10",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov dword [rbp - 0x78], r11d",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r10, qword [rbp - 0x80]",
            "mov r11d, dword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r12, qword [r15 + 0xd0]",
            "movsxd rdi, r11d",
            "mov dword [r15 + 0xbc], r11d",
            "shl rdi, 5",
            "mov esi, r11d",
            "mov dword [r15 + 0xc0], 0",
            "mov qword [rbp - 0x80], r10",
            "add rdi, r12",
            "mov qword [rbp - 0x60], rdi",
            "call sg_init_table",
            "mov edx, dword [rbx + 0xc]",
            "mov rdi, qword [r15 + 0xd0]",
            "mov rsi, qword [rbp - 0x60]",
            "call sg_copy",
            "mov r10, qword [rbp - 0x80]",
            "mov rdi, qword [rbp - 0x60]",
            "mov esi, r10d",
            "call sg_advance",
            "test rax, rax",
            "mov r8, rax",
            "mov qword [rbp - 0x60], rax",
            "je release_user_pages",
            "mov ecx, dword [rbx + 0xc]",
            "mov r9d, dword [rbx + 8]",
            "mov rdx, r12",
            "mov rdi, r15",
            "mov rsi, rbx",
            "call sym.srtp_auth_n_crypt",
            "mov rdi, r15",
            "mov r12d, eax",
            "call release_user_pages",
            "jmp 0x80045f0",
            "mov rax, qword [rbx + 0x68]",
            "mov r9, qword [r15 + 0xd0]",
            "mov edx, 1",
            "mov r8, qword [r15 + 0xc8]",
            "mov esi, dword [rbx + 0x48]",
            "mov rdi, qword [rbx + 0x20]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x60]",
            "mov qword [rsp], rax",
            "call __get_userbuf",
            "test eax, eax",
            "mov r11, qword [rbp - 0x78]",
            "jne cryptodev_verbosity",
            "mov r8, qword [r15 + 0xd0]",
            "mov ecx, dword [rbx + 0xc]",
            "mov rdx, r11",
            "mov r9d, dword [rbx + 8]",
            "mov rsi, rbx",
            "mov rdi, r15",
            "mov qword [rbp - 0x60], r8",
            "call sym.tls_auth_n_crypt",
            "mov r12d, eax",
            "jmp release_user_pages",
            "mov rdi, r15",
            "call release_user_pages",
            "mov r13d, dword [0x08004bb9]",
            "test r13d, r13d",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa8",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov r12d, 0xffffffea",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004c10], 0",
            "jg current_task",
            "mov r12d, 0xffffffea",
            "jmp 0x8004628",
            "cmp dword [0x08004c28], 0",
            "jle 0x8004c16",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2cb",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp 0x8004628",
            "xor eax, eax",
            "jmp 0x8004545",
            "cmp dword [0x08004c74], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x80",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004cbd], 0",
            "mov r12d, 0xffffffea",
            "jle mutex_unlock",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800461f",
            "cmp dword [0x08004d06], 0",
            "mov r12d, 0xffffffea",
            "js 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2aa",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004d4f], 0",
            "mov r12d, 0xffffffea",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x286",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004d98], 0",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2b2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "cmp dword [0x08004ddb], 0",
            "mov r12d, 0xffffffea",
            "js release_user_pages",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "add rax, 0x4b8",
            "mov r9d, esi",
            "mov r8d, 0x241",
            "mov rsi, rax",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [r15 + 0x44], 0",
            "je 0x8004e34",
            "cmp dword [r15 + 0x40], 0",
            "je 0x800464c",
            "cmp dword [0x08004e3b], 0",
            "js 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x270",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004e84], 0",
            "mov r12d, 0xfffffff4",
            "jle cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x28c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r10d",
            "mov r8d, 0x8a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x08004f0c], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x25a",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "cmp dword [0x08004f52], 0",
            "js release_user_pages",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "mov r9d, eax",
            "mov r8d, 0x250",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp release_user_pages",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x2d2",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8004c16",
            "cmp dword [0x08004fd1], 0",
            "jle 0x80046c5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x99",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "cmp dword [0x0800501a], 0",
            "jle 0x8004a20",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x57",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity",
            "mov rcx, qword gs:[0]",
            "mov edx, dword [rcx + 0x318]",
            "lea rsi, [rcx + 0x4b8]",
            "add eax, 1",
            "mov dword [rsp], eax",
            "mov r8d, 0x79",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov eax, dword [r15 + 0xb4]",
            "mov edx, eax",
            "sub rdx, 1",
            "jmp 0x800467c",
            "cmp dword [0x080050ac], 0",
            "mov r12d, 0xfffffff2",
            "jle 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x292",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80045e5",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x47",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r12d, 0xffffffea",
            "call printk",
            "jmp cryptodev_verbosity"
        ]
    },
    "sym.cryptodev_cipher_encrypt": {
        "function_address": "0x08002d50",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push rbx",
            "mov rbx, rdi",
            "sub rsp, 8",
            "mov rax, qword [rdi + 0x38]",
            "mov dword [rax], 0",
            "mov edi, dword [rdi + 8]",
            "test edi, edi",
            "jne 0x8002db0",
            "mov rax, qword [rbx + 0x20]",
            "mov qword [rax + 0x48], rdx",
            "lea rdx, [rbx + 0x40]",
            "mov qword [rax + 0x40], rsi",
            "mov dword [rax + 0x30], ecx",
            "mov qword [rax + 0x38], rdx",
            "mov rdi, qword [rbx + 0x20]",
            "mov rax, qword [rdi + 0x20]",
            "call qword [rax + 0x10]",
            "mov edx, eax",
            "mov rbx, qword [rbx + 0x38]",
            "cmp edx, 0xfffffff0",
            "je 0x8002ddd",
            "xor eax, eax",
            "test edx, edx",
            "jne 0x8002e00",
            "add rsp, 8",
            "pop rbx",
            "pop rbp",
            "ret",
            "mov rax, qword [rbx + 0x30]",
            "mov qword [rax + 0x50], rdx",
            "lea rdx, [rbx + 0x40]",
            "mov qword [rax + 0x48], rsi",
            "mov dword [rax + 0x34], ecx",
            "mov qword [rax + 0x38], rdx",
            "mov rdi, qword [rbx + 0x30]",
            "mov rax, qword [rdi + 0x20]",
            "call qword [rax + 0x10]",
            "mov edx, eax",
            "mov rbx, qword [rbx + 0x38]",
            "cmp edx, 0xfffffff0",
            "jne 0x8002d9a",
            "mov rdi, rbx",
            "call wait_for_completion",
            "mov r9d, dword [rbx + 0x20]",
            "test r9d, r9d",
            "jne 0x8002e0f",
            "add rsp, 8",
            "xor eax, eax",
            "pop rbx",
            "pop rbp",
            "ret",
            "cmp edx, 0xffffff8d",
            "movsxd rax, edx",
            "je 0x8002ddd",
            "add rsp, 8",
            "pop rbx",
            "pop rbp",
            "ret",
            "cmp dword [0x08002e16], 0",
            "jns 0x8002e1d",
            "movsxd rax, r9d",
            "jmp 0x8002da0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x10f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r9d, dword [rbx + 0x20]",
            "jmp 0x8002e18"
        ]
    },
    "unk.0x8002de5": {
        "function_address": "0x08002de5",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push rbx",
            "mov rbx, rdi",
            "sub rsp, 8",
            "mov rax, qword [rdi + 0x38]",
            "mov dword [rax], 0",
            "mov edi, dword [rdi + 8]",
            "test edi, edi",
            "jne 0x8002db0",
            "mov rax, qword [rbx + 0x20]",
            "mov qword [rax + 0x48], rdx",
            "lea rdx, [rbx + 0x40]",
            "mov qword [rax + 0x40], rsi",
            "mov dword [rax + 0x30], ecx",
            "mov qword [rax + 0x38], rdx",
            "mov rdi, qword [rbx + 0x20]",
            "mov rax, qword [rdi + 0x20]",
            "call qword [rax + 0x10]",
            "mov edx, eax",
            "mov rbx, qword [rbx + 0x38]",
            "cmp edx, 0xfffffff0",
            "je 0x8002ddd",
            "xor eax, eax",
            "test edx, edx",
            "jne 0x8002e00",
            "add rsp, 8",
            "pop rbx",
            "pop rbp",
            "ret",
            "mov rax, qword [rbx + 0x30]",
            "mov qword [rax + 0x50], rdx",
            "lea rdx, [rbx + 0x40]",
            "mov qword [rax + 0x48], rsi",
            "mov dword [rax + 0x34], ecx",
            "mov qword [rax + 0x38], rdx",
            "mov rdi, qword [rbx + 0x30]",
            "mov rax, qword [rdi + 0x20]",
            "call qword [rax + 0x10]",
            "mov edx, eax",
            "mov rbx, qword [rbx + 0x38]",
            "cmp edx, 0xfffffff0",
            "jne 0x8002d9a",
            "mov rdi, rbx",
            "call wait_for_completion",
            "mov r9d, dword [rbx + 0x20]",
            "test r9d, r9d",
            "jne 0x8002e0f",
            "add rsp, 8",
            "xor eax, eax",
            "pop rbx",
            "pop rbp",
            "ret",
            "cmp edx, 0xffffff8d",
            "movsxd rax, edx",
            "je 0x8002ddd",
            "add rsp, 8",
            "pop rbx",
            "pop rbp",
            "ret",
            "cmp dword [0x08002e16], 0",
            "jns 0x8002e1d",
            "movsxd rax, r9d",
            "jmp 0x8002da0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x10f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r9d, dword [rbx + 0x20]",
            "jmp 0x8002e18"
        ]
    },
    "unk.0x8002e4e": {
        "function_address": "0x08002e4e",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push rbx",
            "mov rbx, rdi",
            "sub rsp, 8",
            "mov rax, qword [rdi + 0x38]",
            "mov dword [rax], 0",
            "mov edi, dword [rdi + 8]",
            "test edi, edi",
            "jne 0x8002db0",
            "mov rax, qword [rbx + 0x20]",
            "mov qword [rax + 0x48], rdx",
            "lea rdx, [rbx + 0x40]",
            "mov qword [rax + 0x40], rsi",
            "mov dword [rax + 0x30], ecx",
            "mov qword [rax + 0x38], rdx",
            "mov rdi, qword [rbx + 0x20]",
            "mov rax, qword [rdi + 0x20]",
            "call qword [rax + 0x10]",
            "mov edx, eax",
            "mov rbx, qword [rbx + 0x38]",
            "cmp edx, 0xfffffff0",
            "je 0x8002ddd",
            "xor eax, eax",
            "test edx, edx",
            "jne 0x8002e00",
            "add rsp, 8",
            "pop rbx",
            "pop rbp",
            "ret",
            "mov rax, qword [rbx + 0x30]",
            "mov qword [rax + 0x50], rdx",
            "lea rdx, [rbx + 0x40]",
            "mov qword [rax + 0x48], rsi",
            "mov dword [rax + 0x34], ecx",
            "mov qword [rax + 0x38], rdx",
            "mov rdi, qword [rbx + 0x30]",
            "mov rax, qword [rdi + 0x20]",
            "call qword [rax + 0x10]",
            "mov edx, eax",
            "mov rbx, qword [rbx + 0x38]",
            "cmp edx, 0xfffffff0",
            "jne 0x8002d9a",
            "mov rdi, rbx",
            "call wait_for_completion",
            "mov r9d, dword [rbx + 0x20]",
            "test r9d, r9d",
            "jne 0x8002e0f",
            "add rsp, 8",
            "xor eax, eax",
            "pop rbx",
            "pop rbp",
            "ret",
            "cmp edx, 0xffffff8d",
            "movsxd rax, edx",
            "je 0x8002ddd",
            "add rsp, 8",
            "pop rbx",
            "pop rbp",
            "ret",
            "cmp dword [0x08002e16], 0",
            "jns 0x8002e1d",
            "movsxd rax, r9d",
            "jmp 0x8002da0",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x10f",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "mov r9d, dword [rbx + 0x20]",
            "jmp 0x8002e18"
        ]
    },
    "sym.sg_advance": {
        "function_address": "0x08005790",
        "instructions": [
            "push rbp",
            "mov rax, rdi",
            "mov rbp, rsp",
            "push rbx",
            "mov ebx, esi",
            "sub rsp, 8",
            "nop",
            "mov edx, dword [rax + 0xc]",
            "cmp ebx, edx",
            "jb 0x80057d0",
            "mov rdi, rax",
            "sub ebx, edx",
            "call sg_next",
            "test rax, rax",
            "jne 0x80057a0",
            "test ebx, ebx",
            "jne 0x8005853",
            "xor eax, eax",
            "add rsp, 8",
            "pop rbx",
            "pop rbp",
            "ret",
            "test rax, rax",
            "sete cl",
            "test ebx, ebx",
            "jne 0x800584f",
            "test cl, cl",
            "jne 0x80057be",
            "mov ecx, dword [rax + 8]",
            "sub edx, ebx",
            "mov dword [rax + 0xc], edx",
            "add ecx, ebx",
            "cmp ecx, 0xfff",
            "mov dword [rax + 8], ecx",
            "jbe 0x80057c0",
            "mov rdi, qword [rax]",
            "movabs r8, 0x160000000000",
            "movabs rdx, 0x6db6db6db6db6db7",
            "mov rsi, rdi",
            "and edi, 3",
            "and rsi, 0xfffffffffffffffc",
            "add rsi, r8",
            "sar rsi, 3",
            "imul rsi, rdx",
            "mov edx, ecx",
            "and ecx, 0xfff",
            "shr edx, 0xc",
            "mov dword [rax + 8], ecx",
            "add rdx, rsi",
            "lea rsi, [rdx*8]",
            "shl rdx, 6",
            "sub rdx, rsi",
            "sub rdx, r8",
            "or rdx, rdi",
            "mov qword [rax], rdx",
            "add rsp, 8",
            "pop rbx",
            "pop rbp",
            "ret",
            "test cl, cl",
            "je 0x80057de",
            "mov esi, 0x26",
            "mov rdi, 0",
            "call warn_slowpath_null",
            "xor eax, eax",
            "jmp 0x80057c0"
        ]
    },
    "unk.0x80057b1": {
        "function_address": "0x080057b1",
        "instructions": [
            "push rbp",
            "mov rax, rdi",
            "mov rbp, rsp",
            "push rbx",
            "mov ebx, esi",
            "sub rsp, 8",
            "nop",
            "mov edx, dword [rax + 0xc]",
            "cmp ebx, edx",
            "jb 0x80057d0",
            "mov rdi, rax",
            "sub ebx, edx",
            "call sg_next",
            "test rax, rax",
            "jne 0x80057a0",
            "test ebx, ebx",
            "jne 0x8005853",
            "xor eax, eax",
            "add rsp, 8",
            "pop rbx",
            "pop rbp",
            "ret",
            "test rax, rax",
            "sete cl",
            "test ebx, ebx",
            "jne 0x800584f",
            "test cl, cl",
            "jne 0x80057be",
            "mov ecx, dword [rax + 8]",
            "sub edx, ebx",
            "mov dword [rax + 0xc], edx",
            "add ecx, ebx",
            "cmp ecx, 0xfff",
            "mov dword [rax + 8], ecx",
            "jbe 0x80057c0",
            "mov rdi, qword [rax]",
            "movabs r8, 0x160000000000",
            "movabs rdx, 0x6db6db6db6db6db7",
            "mov rsi, rdi",
            "and edi, 3",
            "and rsi, 0xfffffffffffffffc",
            "add rsi, r8",
            "sar rsi, 3",
            "imul rsi, rdx",
            "mov edx, ecx",
            "and ecx, 0xfff",
            "shr edx, 0xc",
            "mov dword [rax + 8], ecx",
            "add rdx, rsi",
            "lea rsi, [rdx*8]",
            "shl rdx, 6",
            "sub rdx, rsi",
            "sub rdx, r8",
            "or rdx, rdi",
            "mov qword [rax], rdx",
            "add rsp, 8",
            "pop rbx",
            "pop rbp",
            "ret",
            "test cl, cl",
            "je 0x80057de",
            "mov esi, 0x26",
            "mov rdi, 0",
            "call warn_slowpath_null",
            "xor eax, eax",
            "jmp 0x80057c0"
        ]
    },
    "unk.0x8005864": {
        "function_address": "0x08005864",
        "instructions": [
            "push rbp",
            "mov rax, rdi",
            "mov rbp, rsp",
            "push rbx",
            "mov ebx, esi",
            "sub rsp, 8",
            "nop",
            "mov edx, dword [rax + 0xc]",
            "cmp ebx, edx",
            "jb 0x80057d0",
            "mov rdi, rax",
            "sub ebx, edx",
            "call sg_next",
            "test rax, rax",
            "jne 0x80057a0",
            "test ebx, ebx",
            "jne 0x8005853",
            "xor eax, eax",
            "add rsp, 8",
            "pop rbx",
            "pop rbp",
            "ret",
            "test rax, rax",
            "sete cl",
            "test ebx, ebx",
            "jne 0x800584f",
            "test cl, cl",
            "jne 0x80057be",
            "mov ecx, dword [rax + 8]",
            "sub edx, ebx",
            "mov dword [rax + 0xc], edx",
            "add ecx, ebx",
            "cmp ecx, 0xfff",
            "mov dword [rax + 8], ecx",
            "jbe 0x80057c0",
            "mov rdi, qword [rax]",
            "movabs r8, 0x160000000000",
            "movabs rdx, 0x6db6db6db6db6db7",
            "mov rsi, rdi",
            "and edi, 3",
            "and rsi, 0xfffffffffffffffc",
            "add rsi, r8",
            "sar rsi, 3",
            "imul rsi, rdx",
            "mov edx, ecx",
            "and ecx, 0xfff",
            "shr edx, 0xc",
            "mov dword [rax + 8], ecx",
            "add rdx, rsi",
            "lea rsi, [rdx*8]",
            "shl rdx, 6",
            "sub rdx, rsi",
            "sub rdx, r8",
            "or rdx, rdi",
            "mov qword [rax], rdx",
            "add rsp, 8",
            "pop rbx",
            "pop rbp",
            "ret",
            "test cl, cl",
            "je 0x80057de",
            "mov esi, 0x26",
            "mov rdi, 0",
            "call warn_slowpath_null",
            "xor eax, eax",
            "jmp 0x80057c0"
        ]
    },
    "sym.sg_copy": {
        "function_address": "0x08005870",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r13",
            "mov r13d, edx",
            "push r12",
            "mov r12, rdi",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 8",
            "nop word cs:[rax + rax]",
            "mov eax, dword [r12 + 0xc]",
            "cmp r13d, eax",
            "jbe 0x80058f8",
            "mov rdx, qword [r12]",
            "mov rcx, qword [rbx]",
            "mov rdi, rbx",
            "mov esi, dword [r12 + 8]",
            "mov dword [rbx + 0xc], eax",
            "sub r13d, eax",
            "and rdx, 0xfffffffffffffffc",
            "and ecx, 3",
            "or rcx, rdx",
            "mov dword [rbx + 8], esi",
            "mov qword [rbx], rcx",
            "call sg_next",
            "mov rdi, r12",
            "mov rbx, rax",
            "call sg_next",
            "test r13d, r13d",
            "mov r12, rax",
            "je 0x8005890",
            "test rbx, rbx",
            "je 0x80058e1",
            "test rax, rax",
            "jne 0x8005890",
            "add rsp, 8",
            "mov eax, 0xfffffff4",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop rbp",
            "ret",
            "test r13d, r13d",
            "jne 0x8005920",
            "mov rax, qword [rbx]",
            "and rax, 0xfffffffffffffffe",
            "or rax, 2",
            "mov qword [rbx], rax",
            "add rsp, 8",
            "xor eax, eax",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop rbp",
            "ret",
            "mov rdx, qword [r12]",
            "mov rax, qword [rbx]",
            "mov ecx, dword [r12 + 8]",
            "mov dword [rbx + 0xc], r13d",
            "and eax, 3",
            "and rdx, 0xfffffffffffffffc",
            "or rax, rdx",
            "mov dword [rbx + 8], ecx",
            "jmp 0x8005900"
        ]
    },
    "unk.0x80058c4": {
        "function_address": "0x080058c4",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r13",
            "mov r13d, edx",
            "push r12",
            "mov r12, rdi",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 8",
            "nop word cs:[rax + rax]",
            "mov eax, dword [r12 + 0xc]",
            "cmp r13d, eax",
            "jbe 0x80058f8",
            "mov rdx, qword [r12]",
            "mov rcx, qword [rbx]",
            "mov rdi, rbx",
            "mov esi, dword [r12 + 8]",
            "mov dword [rbx + 0xc], eax",
            "sub r13d, eax",
            "and rdx, 0xfffffffffffffffc",
            "and ecx, 3",
            "or rcx, rdx",
            "mov dword [rbx + 8], esi",
            "mov qword [rbx], rcx",
            "call sg_next",
            "mov rdi, r12",
            "mov rbx, rax",
            "call sg_next",
            "test r13d, r13d",
            "mov r12, rax",
            "je 0x8005890",
            "test rbx, rbx",
            "je 0x80058e1",
            "test rax, rax",
            "jne 0x8005890",
            "add rsp, 8",
            "mov eax, 0xfffffff4",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop rbp",
            "ret",
            "test r13d, r13d",
            "jne 0x8005920",
            "mov rax, qword [rbx]",
            "and rax, 0xfffffffffffffffe",
            "or rax, 2",
            "mov qword [rbx], rax",
            "add rsp, 8",
            "xor eax, eax",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop rbp",
            "ret",
            "mov rdx, qword [r12]",
            "mov rax, qword [rbx]",
            "mov ecx, dword [r12 + 8]",
            "mov dword [rbx + 0xc], r13d",
            "and eax, 3",
            "and rdx, 0xfffffffffffffffc",
            "or rax, rdx",
            "mov dword [rbx + 8], ecx",
            "jmp 0x8005900"
        ]
    },
    "unk.0x80058cf": {
        "function_address": "0x080058cf",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r13",
            "mov r13d, edx",
            "push r12",
            "mov r12, rdi",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 8",
            "nop word cs:[rax + rax]",
            "mov eax, dword [r12 + 0xc]",
            "cmp r13d, eax",
            "jbe 0x80058f8",
            "mov rdx, qword [r12]",
            "mov rcx, qword [rbx]",
            "mov rdi, rbx",
            "mov esi, dword [r12 + 8]",
            "mov dword [rbx + 0xc], eax",
            "sub r13d, eax",
            "and rdx, 0xfffffffffffffffc",
            "and ecx, 3",
            "or rcx, rdx",
            "mov dword [rbx + 8], esi",
            "mov qword [rbx], rcx",
            "call sg_next",
            "mov rdi, r12",
            "mov rbx, rax",
            "call sg_next",
            "test r13d, r13d",
            "mov r12, rax",
            "je 0x8005890",
            "test rbx, rbx",
            "je 0x80058e1",
            "test rax, rax",
            "jne 0x8005890",
            "add rsp, 8",
            "mov eax, 0xfffffff4",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop rbp",
            "ret",
            "test r13d, r13d",
            "jne 0x8005920",
            "mov rax, qword [rbx]",
            "and rax, 0xfffffffffffffffe",
            "or rax, 2",
            "mov qword [rbx], rax",
            "add rsp, 8",
            "xor eax, eax",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop rbp",
            "ret",
            "mov rdx, qword [r12]",
            "mov rax, qword [rbx]",
            "mov ecx, dword [r12 + 8]",
            "mov dword [rbx + 0xc], r13d",
            "and eax, 3",
            "and rdx, 0xfffffffffffffffc",
            "or rax, rdx",
            "mov dword [rbx + 8], ecx",
            "jmp 0x8005900"
        ]
    },
    "sym.cryptodev_cipher_init": {
        "function_address": "0x080028f0",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x60",
            "mov qword [rbp - 0x38], rsi",
            "mov qword [rbp - 0x28], rbx",
            "xor esi, esi",
            "mov rbx, rdx",
            "xor edx, edx",
            "test r9d, r9d",
            "mov qword [rbp - 0x20], r12",
            "mov qword [rbp - 0x18], r13",
            "mov r12d, r9d",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r14, rdi",
            "mov r13, rcx",
            "mov r15d, r8d",
            "mov rdi, qword [rbp - 0x38]",
            "jne crypto_alloc_aead",
            "call crypto_alloc_ablkcipher",
            "cmp rax, 0xfffffffffffff000",
            "mov qword [r14 + 0x18], rax",
            "ja cryptodev_verbosity",
            "mov rdx, qword [rax + 0x50]",
            "cmp rdx, 0xffffffffffffff40",
            "je 0x80029c9",
            "mov ecx, dword [rdx + 0xf4]",
            "test ecx, ecx",
            "je 0x80029c9",
            "mov edi, dword [rdx + 0xf0]",
            "mov esi, edi",
            "cmp rsi, r13",
            "ja 0x8002970",
            "mov esi, ecx",
            "cmp r13, rsi",
            "jbe 0x80029c9",
            "cmp dword [0x08002977], 0",
            "mov ebx, 0xffffffea",
            "jg current_task",
            "mov rdi, qword [r14 + 0x20]",
            "test rdi, rdi",
            "je 0x8002990",
            "call kzfree",
            "mov rdi, qword [r14 + 0x18]",
            "test rdi, rdi",
            "je 0x80029a1",
            "mov rsi, rdi",
            "call crypto_destroy_tfm",
            "mov rdi, qword [r14 + 0x38]",
            "call kfree",
            "jmp 0x8002a8c",
            "call crypto_alloc_aead",
            "cmp rax, 0xfffffffffffff000",
            "mov qword [r14 + 0x28], rax",
            "ja cryptodev_verbosity",
            "mov rdx, qword [rax + 0x50]",
            "mov edx, dword [rdx + 0x24]",
            "mov rsi, rbx",
            "mov dword [r14 + 4], edx",
            "mov edx, dword [rax + 0x38]",
            "mov dword [r14 + 0x10], edx",
            "mov rdx, qword [rax + 0x50]",
            "mov edx, dword [rdx + 0x2c]",
            "mov dword [r14 + 0x14], edx",
            "mov edx, r13d",
            "mov rdi, qword [rax + 0x30]",
            "call qword [rax + 8]",
            "test eax, eax",
            "mov ebx, eax",
            "jne cryptodev_verbosity",
            "mov dword [r14 + 0xc], r15d",
            "mov dword [r14 + 8], r12d",
            "mov esi, 0x80d0",
            "mov rdi, qword [0x08002a0d]",
            "call kmem_cache_alloc",
            "test rax, rax",
            "mov qword [r14 + 0x38], rax",
            "je 0x8002b7d",
            "lea rdi, [rax + 8]",
            "mov dword [rax], 0",
            "mov rdx, 0",
            "mov rsi, 0",
            "call __init_waitqueue_head",
            "test r12d, r12d",
            "jne 0x8002aa8",
            "mov r12, qword [r14 + 0x18]",
            "mov esi, 0xd0",
            "mov edi, dword [r12 + 0x3c]",
            "add rdi, 0x50",
            "call __kmalloc",
            "test rax, rax",
            "je cryptodev_verbosity",
            "mov rdx, qword [r12 + 0x30]",
            "mov qword [rax + 0x20], rdx",
            "mov rdx, qword [r14 + 0x38]",
            "mov qword [r14 + 0x20], rax",
            "mov qword [rax + 0x10], 0",
            "mov dword [rax + 0x28], 0x400",
            "mov qword [rax + 0x18], rdx",
            "mov dword [r14], 1",
            "mov eax, ebx",
            "mov r12, qword [rbp - 0x20]",
            "mov rbx, qword [rbp - 0x28]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov r12, qword [r14 + 0x28]",
            "mov esi, 0xd0",
            "mov edi, dword [r12 + 0x40]",
            "add rdi, 0x58",
            "call __kmalloc",
            "test rax, rax",
            "je cryptodev_verbosity",
            "mov rdx, qword [r12 + 0x30]",
            "mov qword [rax + 0x20], rdx",
            "mov rdx, qword [r14 + 0x38]",
            "mov qword [r14 + 0x30], rax",
            "mov qword [rax + 0x10], 0",
            "mov dword [rax + 0x28], 0x400",
            "mov qword [rax + 0x18], rdx",
            "jmp 0x8002a85",
            "cmp dword [0x08002af5], 0",
            "jg current_task",
            "mov ebx, 0xffffffea",
            "jmp 0x8002a8c",
            "cmp dword [0x08002b09], 0",
            "jle 0x8002afb",
            "mov rax, qword gs:[0]",
            "mov r9, qword [rbp - 0x38]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x8c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002afb",
            "cmp dword [0x08002b49], 0",
            "mov ebx, 0xffffffea",
            "jg current_task",
            "test r12d, r12d",
            "je 0x8002982",
            "mov rdi, qword [r14 + 0x30]",
            "test rdi, rdi",
            "je 0x8002b6b",
            "call kzfree",
            "mov rdi, qword [r14 + 0x28]",
            "test rdi, rdi",
            "jne crypto_destroy_tfm",
            "jmp 0x80029a1",
            "mov ebx, 0xfffffff4",
            "jmp 0x8002b54",
            "cmp dword [0x08002b8b], 0",
            "mov qword [r14 + 0x20], 0",
            "jg current_task",
            "mov ebx, 0xfffffff4",
            "jmp 0x8002982",
            "cmp dword [0x08002baa], 0",
            "mov qword [r14 + 0x30], 0",
            "jg current_task",
            "mov ebx, 0xfffffff4",
            "jmp 0x8002b5d",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov rax, qword [rbp - 0x38]",
            "mov dword [rsp + 0x10], ecx",
            "mov dword [rsp + 8], edi",
            "mov r9, r13",
            "mov r8d, 0x97",
            "mov rcx, 0",
            "mov rdi, 0",
            "mov qword [rsp], rax",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002982",
            "mov rax, qword gs:[0]",
            "mov r9, qword [rbp - 0x38]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "shl r13, 3",
            "mov r8d, 0xb1",
            "mov rcx, 0",
            "mov qword [rsp], r13",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002b54",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xc4",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov ebx, 0xfffffff4",
            "call printk",
            "jmp 0x8002982",
            "mov rax, qword gs:[0]",
            "mov r9, qword [rbp - 0x38]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa5",
            "jmp .rodata",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xcf",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002bb8"
        ]
    },
    "unk.0x8002935": {
        "function_address": "0x08002935",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x60",
            "mov qword [rbp - 0x38], rsi",
            "mov qword [rbp - 0x28], rbx",
            "xor esi, esi",
            "mov rbx, rdx",
            "xor edx, edx",
            "test r9d, r9d",
            "mov qword [rbp - 0x20], r12",
            "mov qword [rbp - 0x18], r13",
            "mov r12d, r9d",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r14, rdi",
            "mov r13, rcx",
            "mov r15d, r8d",
            "mov rdi, qword [rbp - 0x38]",
            "jne crypto_alloc_aead",
            "call crypto_alloc_ablkcipher",
            "cmp rax, 0xfffffffffffff000",
            "mov qword [r14 + 0x18], rax",
            "ja cryptodev_verbosity",
            "mov rdx, qword [rax + 0x50]",
            "cmp rdx, 0xffffffffffffff40",
            "je 0x80029c9",
            "mov ecx, dword [rdx + 0xf4]",
            "test ecx, ecx",
            "je 0x80029c9",
            "mov edi, dword [rdx + 0xf0]",
            "mov esi, edi",
            "cmp rsi, r13",
            "ja 0x8002970",
            "mov esi, ecx",
            "cmp r13, rsi",
            "jbe 0x80029c9",
            "cmp dword [0x08002977], 0",
            "mov ebx, 0xffffffea",
            "jg current_task",
            "mov rdi, qword [r14 + 0x20]",
            "test rdi, rdi",
            "je 0x8002990",
            "call kzfree",
            "mov rdi, qword [r14 + 0x18]",
            "test rdi, rdi",
            "je 0x80029a1",
            "mov rsi, rdi",
            "call crypto_destroy_tfm",
            "mov rdi, qword [r14 + 0x38]",
            "call kfree",
            "jmp 0x8002a8c",
            "call crypto_alloc_aead",
            "cmp rax, 0xfffffffffffff000",
            "mov qword [r14 + 0x28], rax",
            "ja cryptodev_verbosity",
            "mov rdx, qword [rax + 0x50]",
            "mov edx, dword [rdx + 0x24]",
            "mov rsi, rbx",
            "mov dword [r14 + 4], edx",
            "mov edx, dword [rax + 0x38]",
            "mov dword [r14 + 0x10], edx",
            "mov rdx, qword [rax + 0x50]",
            "mov edx, dword [rdx + 0x2c]",
            "mov dword [r14 + 0x14], edx",
            "mov edx, r13d",
            "mov rdi, qword [rax + 0x30]",
            "call qword [rax + 8]",
            "test eax, eax",
            "mov ebx, eax",
            "jne cryptodev_verbosity",
            "mov dword [r14 + 0xc], r15d",
            "mov dword [r14 + 8], r12d",
            "mov esi, 0x80d0",
            "mov rdi, qword [0x08002a0d]",
            "call kmem_cache_alloc",
            "test rax, rax",
            "mov qword [r14 + 0x38], rax",
            "je 0x8002b7d",
            "lea rdi, [rax + 8]",
            "mov dword [rax], 0",
            "mov rdx, 0",
            "mov rsi, 0",
            "call __init_waitqueue_head",
            "test r12d, r12d",
            "jne 0x8002aa8",
            "mov r12, qword [r14 + 0x18]",
            "mov esi, 0xd0",
            "mov edi, dword [r12 + 0x3c]",
            "add rdi, 0x50",
            "call __kmalloc",
            "test rax, rax",
            "je cryptodev_verbosity",
            "mov rdx, qword [r12 + 0x30]",
            "mov qword [rax + 0x20], rdx",
            "mov rdx, qword [r14 + 0x38]",
            "mov qword [r14 + 0x20], rax",
            "mov qword [rax + 0x10], 0",
            "mov dword [rax + 0x28], 0x400",
            "mov qword [rax + 0x18], rdx",
            "mov dword [r14], 1",
            "mov eax, ebx",
            "mov r12, qword [rbp - 0x20]",
            "mov rbx, qword [rbp - 0x28]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov r12, qword [r14 + 0x28]",
            "mov esi, 0xd0",
            "mov edi, dword [r12 + 0x40]",
            "add rdi, 0x58",
            "call __kmalloc",
            "test rax, rax",
            "je cryptodev_verbosity",
            "mov rdx, qword [r12 + 0x30]",
            "mov qword [rax + 0x20], rdx",
            "mov rdx, qword [r14 + 0x38]",
            "mov qword [r14 + 0x30], rax",
            "mov qword [rax + 0x10], 0",
            "mov dword [rax + 0x28], 0x400",
            "mov qword [rax + 0x18], rdx",
            "jmp 0x8002a85",
            "cmp dword [0x08002af5], 0",
            "jg current_task",
            "mov ebx, 0xffffffea",
            "jmp 0x8002a8c",
            "cmp dword [0x08002b09], 0",
            "jle 0x8002afb",
            "mov rax, qword gs:[0]",
            "mov r9, qword [rbp - 0x38]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x8c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002afb",
            "cmp dword [0x08002b49], 0",
            "mov ebx, 0xffffffea",
            "jg current_task",
            "test r12d, r12d",
            "je 0x8002982",
            "mov rdi, qword [r14 + 0x30]",
            "test rdi, rdi",
            "je 0x8002b6b",
            "call kzfree",
            "mov rdi, qword [r14 + 0x28]",
            "test rdi, rdi",
            "jne crypto_destroy_tfm",
            "jmp 0x80029a1",
            "mov ebx, 0xfffffff4",
            "jmp 0x8002b54",
            "cmp dword [0x08002b8b], 0",
            "mov qword [r14 + 0x20], 0",
            "jg current_task",
            "mov ebx, 0xfffffff4",
            "jmp 0x8002982",
            "cmp dword [0x08002baa], 0",
            "mov qword [r14 + 0x30], 0",
            "jg current_task",
            "mov ebx, 0xfffffff4",
            "jmp 0x8002b5d",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov rax, qword [rbp - 0x38]",
            "mov dword [rsp + 0x10], ecx",
            "mov dword [rsp + 8], edi",
            "mov r9, r13",
            "mov r8d, 0x97",
            "mov rcx, 0",
            "mov rdi, 0",
            "mov qword [rsp], rax",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002982",
            "mov rax, qword gs:[0]",
            "mov r9, qword [rbp - 0x38]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "shl r13, 3",
            "mov r8d, 0xb1",
            "mov rcx, 0",
            "mov qword [rsp], r13",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002b54",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xc4",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov ebx, 0xfffffff4",
            "call printk",
            "jmp 0x8002982",
            "mov rax, qword gs:[0]",
            "mov r9, qword [rbp - 0x38]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa5",
            "jmp .rodata",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xcf",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002bb8"
        ]
    },
    "unk.0x8002990": {
        "function_address": "0x08002990",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x60",
            "mov qword [rbp - 0x38], rsi",
            "mov qword [rbp - 0x28], rbx",
            "xor esi, esi",
            "mov rbx, rdx",
            "xor edx, edx",
            "test r9d, r9d",
            "mov qword [rbp - 0x20], r12",
            "mov qword [rbp - 0x18], r13",
            "mov r12d, r9d",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r14, rdi",
            "mov r13, rcx",
            "mov r15d, r8d",
            "mov rdi, qword [rbp - 0x38]",
            "jne crypto_alloc_aead",
            "call crypto_alloc_ablkcipher",
            "cmp rax, 0xfffffffffffff000",
            "mov qword [r14 + 0x18], rax",
            "ja cryptodev_verbosity",
            "mov rdx, qword [rax + 0x50]",
            "cmp rdx, 0xffffffffffffff40",
            "je 0x80029c9",
            "mov ecx, dword [rdx + 0xf4]",
            "test ecx, ecx",
            "je 0x80029c9",
            "mov edi, dword [rdx + 0xf0]",
            "mov esi, edi",
            "cmp rsi, r13",
            "ja 0x8002970",
            "mov esi, ecx",
            "cmp r13, rsi",
            "jbe 0x80029c9",
            "cmp dword [0x08002977], 0",
            "mov ebx, 0xffffffea",
            "jg current_task",
            "mov rdi, qword [r14 + 0x20]",
            "test rdi, rdi",
            "je 0x8002990",
            "call kzfree",
            "mov rdi, qword [r14 + 0x18]",
            "test rdi, rdi",
            "je 0x80029a1",
            "mov rsi, rdi",
            "call crypto_destroy_tfm",
            "mov rdi, qword [r14 + 0x38]",
            "call kfree",
            "jmp 0x8002a8c",
            "call crypto_alloc_aead",
            "cmp rax, 0xfffffffffffff000",
            "mov qword [r14 + 0x28], rax",
            "ja cryptodev_verbosity",
            "mov rdx, qword [rax + 0x50]",
            "mov edx, dword [rdx + 0x24]",
            "mov rsi, rbx",
            "mov dword [r14 + 4], edx",
            "mov edx, dword [rax + 0x38]",
            "mov dword [r14 + 0x10], edx",
            "mov rdx, qword [rax + 0x50]",
            "mov edx, dword [rdx + 0x2c]",
            "mov dword [r14 + 0x14], edx",
            "mov edx, r13d",
            "mov rdi, qword [rax + 0x30]",
            "call qword [rax + 8]",
            "test eax, eax",
            "mov ebx, eax",
            "jne cryptodev_verbosity",
            "mov dword [r14 + 0xc], r15d",
            "mov dword [r14 + 8], r12d",
            "mov esi, 0x80d0",
            "mov rdi, qword [0x08002a0d]",
            "call kmem_cache_alloc",
            "test rax, rax",
            "mov qword [r14 + 0x38], rax",
            "je 0x8002b7d",
            "lea rdi, [rax + 8]",
            "mov dword [rax], 0",
            "mov rdx, 0",
            "mov rsi, 0",
            "call __init_waitqueue_head",
            "test r12d, r12d",
            "jne 0x8002aa8",
            "mov r12, qword [r14 + 0x18]",
            "mov esi, 0xd0",
            "mov edi, dword [r12 + 0x3c]",
            "add rdi, 0x50",
            "call __kmalloc",
            "test rax, rax",
            "je cryptodev_verbosity",
            "mov rdx, qword [r12 + 0x30]",
            "mov qword [rax + 0x20], rdx",
            "mov rdx, qword [r14 + 0x38]",
            "mov qword [r14 + 0x20], rax",
            "mov qword [rax + 0x10], 0",
            "mov dword [rax + 0x28], 0x400",
            "mov qword [rax + 0x18], rdx",
            "mov dword [r14], 1",
            "mov eax, ebx",
            "mov r12, qword [rbp - 0x20]",
            "mov rbx, qword [rbp - 0x28]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov r12, qword [r14 + 0x28]",
            "mov esi, 0xd0",
            "mov edi, dword [r12 + 0x40]",
            "add rdi, 0x58",
            "call __kmalloc",
            "test rax, rax",
            "je cryptodev_verbosity",
            "mov rdx, qword [r12 + 0x30]",
            "mov qword [rax + 0x20], rdx",
            "mov rdx, qword [r14 + 0x38]",
            "mov qword [r14 + 0x30], rax",
            "mov qword [rax + 0x10], 0",
            "mov dword [rax + 0x28], 0x400",
            "mov qword [rax + 0x18], rdx",
            "jmp 0x8002a85",
            "cmp dword [0x08002af5], 0",
            "jg current_task",
            "mov ebx, 0xffffffea",
            "jmp 0x8002a8c",
            "cmp dword [0x08002b09], 0",
            "jle 0x8002afb",
            "mov rax, qword gs:[0]",
            "mov r9, qword [rbp - 0x38]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x8c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002afb",
            "cmp dword [0x08002b49], 0",
            "mov ebx, 0xffffffea",
            "jg current_task",
            "test r12d, r12d",
            "je 0x8002982",
            "mov rdi, qword [r14 + 0x30]",
            "test rdi, rdi",
            "je 0x8002b6b",
            "call kzfree",
            "mov rdi, qword [r14 + 0x28]",
            "test rdi, rdi",
            "jne crypto_destroy_tfm",
            "jmp 0x80029a1",
            "mov ebx, 0xfffffff4",
            "jmp 0x8002b54",
            "cmp dword [0x08002b8b], 0",
            "mov qword [r14 + 0x20], 0",
            "jg current_task",
            "mov ebx, 0xfffffff4",
            "jmp 0x8002982",
            "cmp dword [0x08002baa], 0",
            "mov qword [r14 + 0x30], 0",
            "jg current_task",
            "mov ebx, 0xfffffff4",
            "jmp 0x8002b5d",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov rax, qword [rbp - 0x38]",
            "mov dword [rsp + 0x10], ecx",
            "mov dword [rsp + 8], edi",
            "mov r9, r13",
            "mov r8d, 0x97",
            "mov rcx, 0",
            "mov rdi, 0",
            "mov qword [rsp], rax",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002982",
            "mov rax, qword gs:[0]",
            "mov r9, qword [rbp - 0x38]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "shl r13, 3",
            "mov r8d, 0xb1",
            "mov rcx, 0",
            "mov qword [rsp], r13",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002b54",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xc4",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov ebx, 0xfffffff4",
            "call printk",
            "jmp 0x8002982",
            "mov rax, qword gs:[0]",
            "mov r9, qword [rbp - 0x38]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa5",
            "jmp .rodata",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xcf",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002bb8"
        ]
    },
    "unk.0x80029a1": {
        "function_address": "0x080029a1",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x60",
            "mov qword [rbp - 0x38], rsi",
            "mov qword [rbp - 0x28], rbx",
            "xor esi, esi",
            "mov rbx, rdx",
            "xor edx, edx",
            "test r9d, r9d",
            "mov qword [rbp - 0x20], r12",
            "mov qword [rbp - 0x18], r13",
            "mov r12d, r9d",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r14, rdi",
            "mov r13, rcx",
            "mov r15d, r8d",
            "mov rdi, qword [rbp - 0x38]",
            "jne crypto_alloc_aead",
            "call crypto_alloc_ablkcipher",
            "cmp rax, 0xfffffffffffff000",
            "mov qword [r14 + 0x18], rax",
            "ja cryptodev_verbosity",
            "mov rdx, qword [rax + 0x50]",
            "cmp rdx, 0xffffffffffffff40",
            "je 0x80029c9",
            "mov ecx, dword [rdx + 0xf4]",
            "test ecx, ecx",
            "je 0x80029c9",
            "mov edi, dword [rdx + 0xf0]",
            "mov esi, edi",
            "cmp rsi, r13",
            "ja 0x8002970",
            "mov esi, ecx",
            "cmp r13, rsi",
            "jbe 0x80029c9",
            "cmp dword [0x08002977], 0",
            "mov ebx, 0xffffffea",
            "jg current_task",
            "mov rdi, qword [r14 + 0x20]",
            "test rdi, rdi",
            "je 0x8002990",
            "call kzfree",
            "mov rdi, qword [r14 + 0x18]",
            "test rdi, rdi",
            "je 0x80029a1",
            "mov rsi, rdi",
            "call crypto_destroy_tfm",
            "mov rdi, qword [r14 + 0x38]",
            "call kfree",
            "jmp 0x8002a8c",
            "call crypto_alloc_aead",
            "cmp rax, 0xfffffffffffff000",
            "mov qword [r14 + 0x28], rax",
            "ja cryptodev_verbosity",
            "mov rdx, qword [rax + 0x50]",
            "mov edx, dword [rdx + 0x24]",
            "mov rsi, rbx",
            "mov dword [r14 + 4], edx",
            "mov edx, dword [rax + 0x38]",
            "mov dword [r14 + 0x10], edx",
            "mov rdx, qword [rax + 0x50]",
            "mov edx, dword [rdx + 0x2c]",
            "mov dword [r14 + 0x14], edx",
            "mov edx, r13d",
            "mov rdi, qword [rax + 0x30]",
            "call qword [rax + 8]",
            "test eax, eax",
            "mov ebx, eax",
            "jne cryptodev_verbosity",
            "mov dword [r14 + 0xc], r15d",
            "mov dword [r14 + 8], r12d",
            "mov esi, 0x80d0",
            "mov rdi, qword [0x08002a0d]",
            "call kmem_cache_alloc",
            "test rax, rax",
            "mov qword [r14 + 0x38], rax",
            "je 0x8002b7d",
            "lea rdi, [rax + 8]",
            "mov dword [rax], 0",
            "mov rdx, 0",
            "mov rsi, 0",
            "call __init_waitqueue_head",
            "test r12d, r12d",
            "jne 0x8002aa8",
            "mov r12, qword [r14 + 0x18]",
            "mov esi, 0xd0",
            "mov edi, dword [r12 + 0x3c]",
            "add rdi, 0x50",
            "call __kmalloc",
            "test rax, rax",
            "je cryptodev_verbosity",
            "mov rdx, qword [r12 + 0x30]",
            "mov qword [rax + 0x20], rdx",
            "mov rdx, qword [r14 + 0x38]",
            "mov qword [r14 + 0x20], rax",
            "mov qword [rax + 0x10], 0",
            "mov dword [rax + 0x28], 0x400",
            "mov qword [rax + 0x18], rdx",
            "mov dword [r14], 1",
            "mov eax, ebx",
            "mov r12, qword [rbp - 0x20]",
            "mov rbx, qword [rbp - 0x28]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov r12, qword [r14 + 0x28]",
            "mov esi, 0xd0",
            "mov edi, dword [r12 + 0x40]",
            "add rdi, 0x58",
            "call __kmalloc",
            "test rax, rax",
            "je cryptodev_verbosity",
            "mov rdx, qword [r12 + 0x30]",
            "mov qword [rax + 0x20], rdx",
            "mov rdx, qword [r14 + 0x38]",
            "mov qword [r14 + 0x30], rax",
            "mov qword [rax + 0x10], 0",
            "mov dword [rax + 0x28], 0x400",
            "mov qword [rax + 0x18], rdx",
            "jmp 0x8002a85",
            "cmp dword [0x08002af5], 0",
            "jg current_task",
            "mov ebx, 0xffffffea",
            "jmp 0x8002a8c",
            "cmp dword [0x08002b09], 0",
            "jle 0x8002afb",
            "mov rax, qword gs:[0]",
            "mov r9, qword [rbp - 0x38]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x8c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002afb",
            "cmp dword [0x08002b49], 0",
            "mov ebx, 0xffffffea",
            "jg current_task",
            "test r12d, r12d",
            "je 0x8002982",
            "mov rdi, qword [r14 + 0x30]",
            "test rdi, rdi",
            "je 0x8002b6b",
            "call kzfree",
            "mov rdi, qword [r14 + 0x28]",
            "test rdi, rdi",
            "jne crypto_destroy_tfm",
            "jmp 0x80029a1",
            "mov ebx, 0xfffffff4",
            "jmp 0x8002b54",
            "cmp dword [0x08002b8b], 0",
            "mov qword [r14 + 0x20], 0",
            "jg current_task",
            "mov ebx, 0xfffffff4",
            "jmp 0x8002982",
            "cmp dword [0x08002baa], 0",
            "mov qword [r14 + 0x30], 0",
            "jg current_task",
            "mov ebx, 0xfffffff4",
            "jmp 0x8002b5d",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov rax, qword [rbp - 0x38]",
            "mov dword [rsp + 0x10], ecx",
            "mov dword [rsp + 8], edi",
            "mov r9, r13",
            "mov r8d, 0x97",
            "mov rcx, 0",
            "mov rdi, 0",
            "mov qword [rsp], rax",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002982",
            "mov rax, qword gs:[0]",
            "mov r9, qword [rbp - 0x38]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "shl r13, 3",
            "mov r8d, 0xb1",
            "mov rcx, 0",
            "mov qword [rsp], r13",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002b54",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xc4",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov ebx, 0xfffffff4",
            "call printk",
            "jmp 0x8002982",
            "mov rax, qword gs:[0]",
            "mov r9, qword [rbp - 0x38]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa5",
            "jmp .rodata",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xcf",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002bb8"
        ]
    },
    "unk.0x80029aa": {
        "function_address": "0x080029aa",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x60",
            "mov qword [rbp - 0x38], rsi",
            "mov qword [rbp - 0x28], rbx",
            "xor esi, esi",
            "mov rbx, rdx",
            "xor edx, edx",
            "test r9d, r9d",
            "mov qword [rbp - 0x20], r12",
            "mov qword [rbp - 0x18], r13",
            "mov r12d, r9d",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r14, rdi",
            "mov r13, rcx",
            "mov r15d, r8d",
            "mov rdi, qword [rbp - 0x38]",
            "jne crypto_alloc_aead",
            "call crypto_alloc_ablkcipher",
            "cmp rax, 0xfffffffffffff000",
            "mov qword [r14 + 0x18], rax",
            "ja cryptodev_verbosity",
            "mov rdx, qword [rax + 0x50]",
            "cmp rdx, 0xffffffffffffff40",
            "je 0x80029c9",
            "mov ecx, dword [rdx + 0xf4]",
            "test ecx, ecx",
            "je 0x80029c9",
            "mov edi, dword [rdx + 0xf0]",
            "mov esi, edi",
            "cmp rsi, r13",
            "ja 0x8002970",
            "mov esi, ecx",
            "cmp r13, rsi",
            "jbe 0x80029c9",
            "cmp dword [0x08002977], 0",
            "mov ebx, 0xffffffea",
            "jg current_task",
            "mov rdi, qword [r14 + 0x20]",
            "test rdi, rdi",
            "je 0x8002990",
            "call kzfree",
            "mov rdi, qword [r14 + 0x18]",
            "test rdi, rdi",
            "je 0x80029a1",
            "mov rsi, rdi",
            "call crypto_destroy_tfm",
            "mov rdi, qword [r14 + 0x38]",
            "call kfree",
            "jmp 0x8002a8c",
            "call crypto_alloc_aead",
            "cmp rax, 0xfffffffffffff000",
            "mov qword [r14 + 0x28], rax",
            "ja cryptodev_verbosity",
            "mov rdx, qword [rax + 0x50]",
            "mov edx, dword [rdx + 0x24]",
            "mov rsi, rbx",
            "mov dword [r14 + 4], edx",
            "mov edx, dword [rax + 0x38]",
            "mov dword [r14 + 0x10], edx",
            "mov rdx, qword [rax + 0x50]",
            "mov edx, dword [rdx + 0x2c]",
            "mov dword [r14 + 0x14], edx",
            "mov edx, r13d",
            "mov rdi, qword [rax + 0x30]",
            "call qword [rax + 8]",
            "test eax, eax",
            "mov ebx, eax",
            "jne cryptodev_verbosity",
            "mov dword [r14 + 0xc], r15d",
            "mov dword [r14 + 8], r12d",
            "mov esi, 0x80d0",
            "mov rdi, qword [0x08002a0d]",
            "call kmem_cache_alloc",
            "test rax, rax",
            "mov qword [r14 + 0x38], rax",
            "je 0x8002b7d",
            "lea rdi, [rax + 8]",
            "mov dword [rax], 0",
            "mov rdx, 0",
            "mov rsi, 0",
            "call __init_waitqueue_head",
            "test r12d, r12d",
            "jne 0x8002aa8",
            "mov r12, qword [r14 + 0x18]",
            "mov esi, 0xd0",
            "mov edi, dword [r12 + 0x3c]",
            "add rdi, 0x50",
            "call __kmalloc",
            "test rax, rax",
            "je cryptodev_verbosity",
            "mov rdx, qword [r12 + 0x30]",
            "mov qword [rax + 0x20], rdx",
            "mov rdx, qword [r14 + 0x38]",
            "mov qword [r14 + 0x20], rax",
            "mov qword [rax + 0x10], 0",
            "mov dword [rax + 0x28], 0x400",
            "mov qword [rax + 0x18], rdx",
            "mov dword [r14], 1",
            "mov eax, ebx",
            "mov r12, qword [rbp - 0x20]",
            "mov rbx, qword [rbp - 0x28]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov r12, qword [r14 + 0x28]",
            "mov esi, 0xd0",
            "mov edi, dword [r12 + 0x40]",
            "add rdi, 0x58",
            "call __kmalloc",
            "test rax, rax",
            "je cryptodev_verbosity",
            "mov rdx, qword [r12 + 0x30]",
            "mov qword [rax + 0x20], rdx",
            "mov rdx, qword [r14 + 0x38]",
            "mov qword [r14 + 0x30], rax",
            "mov qword [rax + 0x10], 0",
            "mov dword [rax + 0x28], 0x400",
            "mov qword [rax + 0x18], rdx",
            "jmp 0x8002a85",
            "cmp dword [0x08002af5], 0",
            "jg current_task",
            "mov ebx, 0xffffffea",
            "jmp 0x8002a8c",
            "cmp dword [0x08002b09], 0",
            "jle 0x8002afb",
            "mov rax, qword gs:[0]",
            "mov r9, qword [rbp - 0x38]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x8c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002afb",
            "cmp dword [0x08002b49], 0",
            "mov ebx, 0xffffffea",
            "jg current_task",
            "test r12d, r12d",
            "je 0x8002982",
            "mov rdi, qword [r14 + 0x30]",
            "test rdi, rdi",
            "je 0x8002b6b",
            "call kzfree",
            "mov rdi, qword [r14 + 0x28]",
            "test rdi, rdi",
            "jne crypto_destroy_tfm",
            "jmp 0x80029a1",
            "mov ebx, 0xfffffff4",
            "jmp 0x8002b54",
            "cmp dword [0x08002b8b], 0",
            "mov qword [r14 + 0x20], 0",
            "jg current_task",
            "mov ebx, 0xfffffff4",
            "jmp 0x8002982",
            "cmp dword [0x08002baa], 0",
            "mov qword [r14 + 0x30], 0",
            "jg current_task",
            "mov ebx, 0xfffffff4",
            "jmp 0x8002b5d",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov rax, qword [rbp - 0x38]",
            "mov dword [rsp + 0x10], ecx",
            "mov dword [rsp + 8], edi",
            "mov r9, r13",
            "mov r8d, 0x97",
            "mov rcx, 0",
            "mov rdi, 0",
            "mov qword [rsp], rax",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002982",
            "mov rax, qword gs:[0]",
            "mov r9, qword [rbp - 0x38]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "shl r13, 3",
            "mov r8d, 0xb1",
            "mov rcx, 0",
            "mov qword [rsp], r13",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002b54",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xc4",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov ebx, 0xfffffff4",
            "call printk",
            "jmp 0x8002982",
            "mov rax, qword gs:[0]",
            "mov r9, qword [rbp - 0x38]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa5",
            "jmp .rodata",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xcf",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002bb8"
        ]
    },
    "unk.0x80029b5": {
        "function_address": "0x080029b5",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x60",
            "mov qword [rbp - 0x38], rsi",
            "mov qword [rbp - 0x28], rbx",
            "xor esi, esi",
            "mov rbx, rdx",
            "xor edx, edx",
            "test r9d, r9d",
            "mov qword [rbp - 0x20], r12",
            "mov qword [rbp - 0x18], r13",
            "mov r12d, r9d",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r14, rdi",
            "mov r13, rcx",
            "mov r15d, r8d",
            "mov rdi, qword [rbp - 0x38]",
            "jne crypto_alloc_aead",
            "call crypto_alloc_ablkcipher",
            "cmp rax, 0xfffffffffffff000",
            "mov qword [r14 + 0x18], rax",
            "ja cryptodev_verbosity",
            "mov rdx, qword [rax + 0x50]",
            "cmp rdx, 0xffffffffffffff40",
            "je 0x80029c9",
            "mov ecx, dword [rdx + 0xf4]",
            "test ecx, ecx",
            "je 0x80029c9",
            "mov edi, dword [rdx + 0xf0]",
            "mov esi, edi",
            "cmp rsi, r13",
            "ja 0x8002970",
            "mov esi, ecx",
            "cmp r13, rsi",
            "jbe 0x80029c9",
            "cmp dword [0x08002977], 0",
            "mov ebx, 0xffffffea",
            "jg current_task",
            "mov rdi, qword [r14 + 0x20]",
            "test rdi, rdi",
            "je 0x8002990",
            "call kzfree",
            "mov rdi, qword [r14 + 0x18]",
            "test rdi, rdi",
            "je 0x80029a1",
            "mov rsi, rdi",
            "call crypto_destroy_tfm",
            "mov rdi, qword [r14 + 0x38]",
            "call kfree",
            "jmp 0x8002a8c",
            "call crypto_alloc_aead",
            "cmp rax, 0xfffffffffffff000",
            "mov qword [r14 + 0x28], rax",
            "ja cryptodev_verbosity",
            "mov rdx, qword [rax + 0x50]",
            "mov edx, dword [rdx + 0x24]",
            "mov rsi, rbx",
            "mov dword [r14 + 4], edx",
            "mov edx, dword [rax + 0x38]",
            "mov dword [r14 + 0x10], edx",
            "mov rdx, qword [rax + 0x50]",
            "mov edx, dword [rdx + 0x2c]",
            "mov dword [r14 + 0x14], edx",
            "mov edx, r13d",
            "mov rdi, qword [rax + 0x30]",
            "call qword [rax + 8]",
            "test eax, eax",
            "mov ebx, eax",
            "jne cryptodev_verbosity",
            "mov dword [r14 + 0xc], r15d",
            "mov dword [r14 + 8], r12d",
            "mov esi, 0x80d0",
            "mov rdi, qword [0x08002a0d]",
            "call kmem_cache_alloc",
            "test rax, rax",
            "mov qword [r14 + 0x38], rax",
            "je 0x8002b7d",
            "lea rdi, [rax + 8]",
            "mov dword [rax], 0",
            "mov rdx, 0",
            "mov rsi, 0",
            "call __init_waitqueue_head",
            "test r12d, r12d",
            "jne 0x8002aa8",
            "mov r12, qword [r14 + 0x18]",
            "mov esi, 0xd0",
            "mov edi, dword [r12 + 0x3c]",
            "add rdi, 0x50",
            "call __kmalloc",
            "test rax, rax",
            "je cryptodev_verbosity",
            "mov rdx, qword [r12 + 0x30]",
            "mov qword [rax + 0x20], rdx",
            "mov rdx, qword [r14 + 0x38]",
            "mov qword [r14 + 0x20], rax",
            "mov qword [rax + 0x10], 0",
            "mov dword [rax + 0x28], 0x400",
            "mov qword [rax + 0x18], rdx",
            "mov dword [r14], 1",
            "mov eax, ebx",
            "mov r12, qword [rbp - 0x20]",
            "mov rbx, qword [rbp - 0x28]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov r12, qword [r14 + 0x28]",
            "mov esi, 0xd0",
            "mov edi, dword [r12 + 0x40]",
            "add rdi, 0x58",
            "call __kmalloc",
            "test rax, rax",
            "je cryptodev_verbosity",
            "mov rdx, qword [r12 + 0x30]",
            "mov qword [rax + 0x20], rdx",
            "mov rdx, qword [r14 + 0x38]",
            "mov qword [r14 + 0x30], rax",
            "mov qword [rax + 0x10], 0",
            "mov dword [rax + 0x28], 0x400",
            "mov qword [rax + 0x18], rdx",
            "jmp 0x8002a85",
            "cmp dword [0x08002af5], 0",
            "jg current_task",
            "mov ebx, 0xffffffea",
            "jmp 0x8002a8c",
            "cmp dword [0x08002b09], 0",
            "jle 0x8002afb",
            "mov rax, qword gs:[0]",
            "mov r9, qword [rbp - 0x38]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x8c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002afb",
            "cmp dword [0x08002b49], 0",
            "mov ebx, 0xffffffea",
            "jg current_task",
            "test r12d, r12d",
            "je 0x8002982",
            "mov rdi, qword [r14 + 0x30]",
            "test rdi, rdi",
            "je 0x8002b6b",
            "call kzfree",
            "mov rdi, qword [r14 + 0x28]",
            "test rdi, rdi",
            "jne crypto_destroy_tfm",
            "jmp 0x80029a1",
            "mov ebx, 0xfffffff4",
            "jmp 0x8002b54",
            "cmp dword [0x08002b8b], 0",
            "mov qword [r14 + 0x20], 0",
            "jg current_task",
            "mov ebx, 0xfffffff4",
            "jmp 0x8002982",
            "cmp dword [0x08002baa], 0",
            "mov qword [r14 + 0x30], 0",
            "jg current_task",
            "mov ebx, 0xfffffff4",
            "jmp 0x8002b5d",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov rax, qword [rbp - 0x38]",
            "mov dword [rsp + 0x10], ecx",
            "mov dword [rsp + 8], edi",
            "mov r9, r13",
            "mov r8d, 0x97",
            "mov rcx, 0",
            "mov rdi, 0",
            "mov qword [rsp], rax",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002982",
            "mov rax, qword gs:[0]",
            "mov r9, qword [rbp - 0x38]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "shl r13, 3",
            "mov r8d, 0xb1",
            "mov rcx, 0",
            "mov qword [rsp], r13",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002b54",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xc4",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov ebx, 0xfffffff4",
            "call printk",
            "jmp 0x8002982",
            "mov rax, qword gs:[0]",
            "mov r9, qword [rbp - 0x38]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa5",
            "jmp .rodata",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xcf",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002bb8"
        ]
    },
    "unk.0x8002a12": {
        "function_address": "0x08002a12",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x60",
            "mov qword [rbp - 0x38], rsi",
            "mov qword [rbp - 0x28], rbx",
            "xor esi, esi",
            "mov rbx, rdx",
            "xor edx, edx",
            "test r9d, r9d",
            "mov qword [rbp - 0x20], r12",
            "mov qword [rbp - 0x18], r13",
            "mov r12d, r9d",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r14, rdi",
            "mov r13, rcx",
            "mov r15d, r8d",
            "mov rdi, qword [rbp - 0x38]",
            "jne crypto_alloc_aead",
            "call crypto_alloc_ablkcipher",
            "cmp rax, 0xfffffffffffff000",
            "mov qword [r14 + 0x18], rax",
            "ja cryptodev_verbosity",
            "mov rdx, qword [rax + 0x50]",
            "cmp rdx, 0xffffffffffffff40",
            "je 0x80029c9",
            "mov ecx, dword [rdx + 0xf4]",
            "test ecx, ecx",
            "je 0x80029c9",
            "mov edi, dword [rdx + 0xf0]",
            "mov esi, edi",
            "cmp rsi, r13",
            "ja 0x8002970",
            "mov esi, ecx",
            "cmp r13, rsi",
            "jbe 0x80029c9",
            "cmp dword [0x08002977], 0",
            "mov ebx, 0xffffffea",
            "jg current_task",
            "mov rdi, qword [r14 + 0x20]",
            "test rdi, rdi",
            "je 0x8002990",
            "call kzfree",
            "mov rdi, qword [r14 + 0x18]",
            "test rdi, rdi",
            "je 0x80029a1",
            "mov rsi, rdi",
            "call crypto_destroy_tfm",
            "mov rdi, qword [r14 + 0x38]",
            "call kfree",
            "jmp 0x8002a8c",
            "call crypto_alloc_aead",
            "cmp rax, 0xfffffffffffff000",
            "mov qword [r14 + 0x28], rax",
            "ja cryptodev_verbosity",
            "mov rdx, qword [rax + 0x50]",
            "mov edx, dword [rdx + 0x24]",
            "mov rsi, rbx",
            "mov dword [r14 + 4], edx",
            "mov edx, dword [rax + 0x38]",
            "mov dword [r14 + 0x10], edx",
            "mov rdx, qword [rax + 0x50]",
            "mov edx, dword [rdx + 0x2c]",
            "mov dword [r14 + 0x14], edx",
            "mov edx, r13d",
            "mov rdi, qword [rax + 0x30]",
            "call qword [rax + 8]",
            "test eax, eax",
            "mov ebx, eax",
            "jne cryptodev_verbosity",
            "mov dword [r14 + 0xc], r15d",
            "mov dword [r14 + 8], r12d",
            "mov esi, 0x80d0",
            "mov rdi, qword [0x08002a0d]",
            "call kmem_cache_alloc",
            "test rax, rax",
            "mov qword [r14 + 0x38], rax",
            "je 0x8002b7d",
            "lea rdi, [rax + 8]",
            "mov dword [rax], 0",
            "mov rdx, 0",
            "mov rsi, 0",
            "call __init_waitqueue_head",
            "test r12d, r12d",
            "jne 0x8002aa8",
            "mov r12, qword [r14 + 0x18]",
            "mov esi, 0xd0",
            "mov edi, dword [r12 + 0x3c]",
            "add rdi, 0x50",
            "call __kmalloc",
            "test rax, rax",
            "je cryptodev_verbosity",
            "mov rdx, qword [r12 + 0x30]",
            "mov qword [rax + 0x20], rdx",
            "mov rdx, qword [r14 + 0x38]",
            "mov qword [r14 + 0x20], rax",
            "mov qword [rax + 0x10], 0",
            "mov dword [rax + 0x28], 0x400",
            "mov qword [rax + 0x18], rdx",
            "mov dword [r14], 1",
            "mov eax, ebx",
            "mov r12, qword [rbp - 0x20]",
            "mov rbx, qword [rbp - 0x28]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov r12, qword [r14 + 0x28]",
            "mov esi, 0xd0",
            "mov edi, dword [r12 + 0x40]",
            "add rdi, 0x58",
            "call __kmalloc",
            "test rax, rax",
            "je cryptodev_verbosity",
            "mov rdx, qword [r12 + 0x30]",
            "mov qword [rax + 0x20], rdx",
            "mov rdx, qword [r14 + 0x38]",
            "mov qword [r14 + 0x30], rax",
            "mov qword [rax + 0x10], 0",
            "mov dword [rax + 0x28], 0x400",
            "mov qword [rax + 0x18], rdx",
            "jmp 0x8002a85",
            "cmp dword [0x08002af5], 0",
            "jg current_task",
            "mov ebx, 0xffffffea",
            "jmp 0x8002a8c",
            "cmp dword [0x08002b09], 0",
            "jle 0x8002afb",
            "mov rax, qword gs:[0]",
            "mov r9, qword [rbp - 0x38]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x8c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002afb",
            "cmp dword [0x08002b49], 0",
            "mov ebx, 0xffffffea",
            "jg current_task",
            "test r12d, r12d",
            "je 0x8002982",
            "mov rdi, qword [r14 + 0x30]",
            "test rdi, rdi",
            "je 0x8002b6b",
            "call kzfree",
            "mov rdi, qword [r14 + 0x28]",
            "test rdi, rdi",
            "jne crypto_destroy_tfm",
            "jmp 0x80029a1",
            "mov ebx, 0xfffffff4",
            "jmp 0x8002b54",
            "cmp dword [0x08002b8b], 0",
            "mov qword [r14 + 0x20], 0",
            "jg current_task",
            "mov ebx, 0xfffffff4",
            "jmp 0x8002982",
            "cmp dword [0x08002baa], 0",
            "mov qword [r14 + 0x30], 0",
            "jg current_task",
            "mov ebx, 0xfffffff4",
            "jmp 0x8002b5d",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov rax, qword [rbp - 0x38]",
            "mov dword [rsp + 0x10], ecx",
            "mov dword [rsp + 8], edi",
            "mov r9, r13",
            "mov r8d, 0x97",
            "mov rcx, 0",
            "mov rdi, 0",
            "mov qword [rsp], rax",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002982",
            "mov rax, qword gs:[0]",
            "mov r9, qword [rbp - 0x38]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "shl r13, 3",
            "mov r8d, 0xb1",
            "mov rcx, 0",
            "mov qword [rsp], r13",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002b54",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xc4",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov ebx, 0xfffffff4",
            "call printk",
            "jmp 0x8002982",
            "mov rax, qword gs:[0]",
            "mov r9, qword [rbp - 0x38]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa5",
            "jmp .rodata",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xcf",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002bb8"
        ]
    },
    "unk.0x8002a3c": {
        "function_address": "0x08002a3c",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x60",
            "mov qword [rbp - 0x38], rsi",
            "mov qword [rbp - 0x28], rbx",
            "xor esi, esi",
            "mov rbx, rdx",
            "xor edx, edx",
            "test r9d, r9d",
            "mov qword [rbp - 0x20], r12",
            "mov qword [rbp - 0x18], r13",
            "mov r12d, r9d",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r14, rdi",
            "mov r13, rcx",
            "mov r15d, r8d",
            "mov rdi, qword [rbp - 0x38]",
            "jne crypto_alloc_aead",
            "call crypto_alloc_ablkcipher",
            "cmp rax, 0xfffffffffffff000",
            "mov qword [r14 + 0x18], rax",
            "ja cryptodev_verbosity",
            "mov rdx, qword [rax + 0x50]",
            "cmp rdx, 0xffffffffffffff40",
            "je 0x80029c9",
            "mov ecx, dword [rdx + 0xf4]",
            "test ecx, ecx",
            "je 0x80029c9",
            "mov edi, dword [rdx + 0xf0]",
            "mov esi, edi",
            "cmp rsi, r13",
            "ja 0x8002970",
            "mov esi, ecx",
            "cmp r13, rsi",
            "jbe 0x80029c9",
            "cmp dword [0x08002977], 0",
            "mov ebx, 0xffffffea",
            "jg current_task",
            "mov rdi, qword [r14 + 0x20]",
            "test rdi, rdi",
            "je 0x8002990",
            "call kzfree",
            "mov rdi, qword [r14 + 0x18]",
            "test rdi, rdi",
            "je 0x80029a1",
            "mov rsi, rdi",
            "call crypto_destroy_tfm",
            "mov rdi, qword [r14 + 0x38]",
            "call kfree",
            "jmp 0x8002a8c",
            "call crypto_alloc_aead",
            "cmp rax, 0xfffffffffffff000",
            "mov qword [r14 + 0x28], rax",
            "ja cryptodev_verbosity",
            "mov rdx, qword [rax + 0x50]",
            "mov edx, dword [rdx + 0x24]",
            "mov rsi, rbx",
            "mov dword [r14 + 4], edx",
            "mov edx, dword [rax + 0x38]",
            "mov dword [r14 + 0x10], edx",
            "mov rdx, qword [rax + 0x50]",
            "mov edx, dword [rdx + 0x2c]",
            "mov dword [r14 + 0x14], edx",
            "mov edx, r13d",
            "mov rdi, qword [rax + 0x30]",
            "call qword [rax + 8]",
            "test eax, eax",
            "mov ebx, eax",
            "jne cryptodev_verbosity",
            "mov dword [r14 + 0xc], r15d",
            "mov dword [r14 + 8], r12d",
            "mov esi, 0x80d0",
            "mov rdi, qword [0x08002a0d]",
            "call kmem_cache_alloc",
            "test rax, rax",
            "mov qword [r14 + 0x38], rax",
            "je 0x8002b7d",
            "lea rdi, [rax + 8]",
            "mov dword [rax], 0",
            "mov rdx, 0",
            "mov rsi, 0",
            "call __init_waitqueue_head",
            "test r12d, r12d",
            "jne 0x8002aa8",
            "mov r12, qword [r14 + 0x18]",
            "mov esi, 0xd0",
            "mov edi, dword [r12 + 0x3c]",
            "add rdi, 0x50",
            "call __kmalloc",
            "test rax, rax",
            "je cryptodev_verbosity",
            "mov rdx, qword [r12 + 0x30]",
            "mov qword [rax + 0x20], rdx",
            "mov rdx, qword [r14 + 0x38]",
            "mov qword [r14 + 0x20], rax",
            "mov qword [rax + 0x10], 0",
            "mov dword [rax + 0x28], 0x400",
            "mov qword [rax + 0x18], rdx",
            "mov dword [r14], 1",
            "mov eax, ebx",
            "mov r12, qword [rbp - 0x20]",
            "mov rbx, qword [rbp - 0x28]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov r12, qword [r14 + 0x28]",
            "mov esi, 0xd0",
            "mov edi, dword [r12 + 0x40]",
            "add rdi, 0x58",
            "call __kmalloc",
            "test rax, rax",
            "je cryptodev_verbosity",
            "mov rdx, qword [r12 + 0x30]",
            "mov qword [rax + 0x20], rdx",
            "mov rdx, qword [r14 + 0x38]",
            "mov qword [r14 + 0x30], rax",
            "mov qword [rax + 0x10], 0",
            "mov dword [rax + 0x28], 0x400",
            "mov qword [rax + 0x18], rdx",
            "jmp 0x8002a85",
            "cmp dword [0x08002af5], 0",
            "jg current_task",
            "mov ebx, 0xffffffea",
            "jmp 0x8002a8c",
            "cmp dword [0x08002b09], 0",
            "jle 0x8002afb",
            "mov rax, qword gs:[0]",
            "mov r9, qword [rbp - 0x38]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x8c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002afb",
            "cmp dword [0x08002b49], 0",
            "mov ebx, 0xffffffea",
            "jg current_task",
            "test r12d, r12d",
            "je 0x8002982",
            "mov rdi, qword [r14 + 0x30]",
            "test rdi, rdi",
            "je 0x8002b6b",
            "call kzfree",
            "mov rdi, qword [r14 + 0x28]",
            "test rdi, rdi",
            "jne crypto_destroy_tfm",
            "jmp 0x80029a1",
            "mov ebx, 0xfffffff4",
            "jmp 0x8002b54",
            "cmp dword [0x08002b8b], 0",
            "mov qword [r14 + 0x20], 0",
            "jg current_task",
            "mov ebx, 0xfffffff4",
            "jmp 0x8002982",
            "cmp dword [0x08002baa], 0",
            "mov qword [r14 + 0x30], 0",
            "jg current_task",
            "mov ebx, 0xfffffff4",
            "jmp 0x8002b5d",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov rax, qword [rbp - 0x38]",
            "mov dword [rsp + 0x10], ecx",
            "mov dword [rsp + 8], edi",
            "mov r9, r13",
            "mov r8d, 0x97",
            "mov rcx, 0",
            "mov rdi, 0",
            "mov qword [rsp], rax",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002982",
            "mov rax, qword gs:[0]",
            "mov r9, qword [rbp - 0x38]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "shl r13, 3",
            "mov r8d, 0xb1",
            "mov rcx, 0",
            "mov qword [rsp], r13",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002b54",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xc4",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov ebx, 0xfffffff4",
            "call printk",
            "jmp 0x8002982",
            "mov rax, qword gs:[0]",
            "mov r9, qword [rbp - 0x38]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa5",
            "jmp .rodata",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xcf",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002bb8"
        ]
    },
    "unk.0x8002a58": {
        "function_address": "0x08002a58",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x60",
            "mov qword [rbp - 0x38], rsi",
            "mov qword [rbp - 0x28], rbx",
            "xor esi, esi",
            "mov rbx, rdx",
            "xor edx, edx",
            "test r9d, r9d",
            "mov qword [rbp - 0x20], r12",
            "mov qword [rbp - 0x18], r13",
            "mov r12d, r9d",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r14, rdi",
            "mov r13, rcx",
            "mov r15d, r8d",
            "mov rdi, qword [rbp - 0x38]",
            "jne crypto_alloc_aead",
            "call crypto_alloc_ablkcipher",
            "cmp rax, 0xfffffffffffff000",
            "mov qword [r14 + 0x18], rax",
            "ja cryptodev_verbosity",
            "mov rdx, qword [rax + 0x50]",
            "cmp rdx, 0xffffffffffffff40",
            "je 0x80029c9",
            "mov ecx, dword [rdx + 0xf4]",
            "test ecx, ecx",
            "je 0x80029c9",
            "mov edi, dword [rdx + 0xf0]",
            "mov esi, edi",
            "cmp rsi, r13",
            "ja 0x8002970",
            "mov esi, ecx",
            "cmp r13, rsi",
            "jbe 0x80029c9",
            "cmp dword [0x08002977], 0",
            "mov ebx, 0xffffffea",
            "jg current_task",
            "mov rdi, qword [r14 + 0x20]",
            "test rdi, rdi",
            "je 0x8002990",
            "call kzfree",
            "mov rdi, qword [r14 + 0x18]",
            "test rdi, rdi",
            "je 0x80029a1",
            "mov rsi, rdi",
            "call crypto_destroy_tfm",
            "mov rdi, qword [r14 + 0x38]",
            "call kfree",
            "jmp 0x8002a8c",
            "call crypto_alloc_aead",
            "cmp rax, 0xfffffffffffff000",
            "mov qword [r14 + 0x28], rax",
            "ja cryptodev_verbosity",
            "mov rdx, qword [rax + 0x50]",
            "mov edx, dword [rdx + 0x24]",
            "mov rsi, rbx",
            "mov dword [r14 + 4], edx",
            "mov edx, dword [rax + 0x38]",
            "mov dword [r14 + 0x10], edx",
            "mov rdx, qword [rax + 0x50]",
            "mov edx, dword [rdx + 0x2c]",
            "mov dword [r14 + 0x14], edx",
            "mov edx, r13d",
            "mov rdi, qword [rax + 0x30]",
            "call qword [rax + 8]",
            "test eax, eax",
            "mov ebx, eax",
            "jne cryptodev_verbosity",
            "mov dword [r14 + 0xc], r15d",
            "mov dword [r14 + 8], r12d",
            "mov esi, 0x80d0",
            "mov rdi, qword [0x08002a0d]",
            "call kmem_cache_alloc",
            "test rax, rax",
            "mov qword [r14 + 0x38], rax",
            "je 0x8002b7d",
            "lea rdi, [rax + 8]",
            "mov dword [rax], 0",
            "mov rdx, 0",
            "mov rsi, 0",
            "call __init_waitqueue_head",
            "test r12d, r12d",
            "jne 0x8002aa8",
            "mov r12, qword [r14 + 0x18]",
            "mov esi, 0xd0",
            "mov edi, dword [r12 + 0x3c]",
            "add rdi, 0x50",
            "call __kmalloc",
            "test rax, rax",
            "je cryptodev_verbosity",
            "mov rdx, qword [r12 + 0x30]",
            "mov qword [rax + 0x20], rdx",
            "mov rdx, qword [r14 + 0x38]",
            "mov qword [r14 + 0x20], rax",
            "mov qword [rax + 0x10], 0",
            "mov dword [rax + 0x28], 0x400",
            "mov qword [rax + 0x18], rdx",
            "mov dword [r14], 1",
            "mov eax, ebx",
            "mov r12, qword [rbp - 0x20]",
            "mov rbx, qword [rbp - 0x28]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov r12, qword [r14 + 0x28]",
            "mov esi, 0xd0",
            "mov edi, dword [r12 + 0x40]",
            "add rdi, 0x58",
            "call __kmalloc",
            "test rax, rax",
            "je cryptodev_verbosity",
            "mov rdx, qword [r12 + 0x30]",
            "mov qword [rax + 0x20], rdx",
            "mov rdx, qword [r14 + 0x38]",
            "mov qword [r14 + 0x30], rax",
            "mov qword [rax + 0x10], 0",
            "mov dword [rax + 0x28], 0x400",
            "mov qword [rax + 0x18], rdx",
            "jmp 0x8002a85",
            "cmp dword [0x08002af5], 0",
            "jg current_task",
            "mov ebx, 0xffffffea",
            "jmp 0x8002a8c",
            "cmp dword [0x08002b09], 0",
            "jle 0x8002afb",
            "mov rax, qword gs:[0]",
            "mov r9, qword [rbp - 0x38]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x8c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002afb",
            "cmp dword [0x08002b49], 0",
            "mov ebx, 0xffffffea",
            "jg current_task",
            "test r12d, r12d",
            "je 0x8002982",
            "mov rdi, qword [r14 + 0x30]",
            "test rdi, rdi",
            "je 0x8002b6b",
            "call kzfree",
            "mov rdi, qword [r14 + 0x28]",
            "test rdi, rdi",
            "jne crypto_destroy_tfm",
            "jmp 0x80029a1",
            "mov ebx, 0xfffffff4",
            "jmp 0x8002b54",
            "cmp dword [0x08002b8b], 0",
            "mov qword [r14 + 0x20], 0",
            "jg current_task",
            "mov ebx, 0xfffffff4",
            "jmp 0x8002982",
            "cmp dword [0x08002baa], 0",
            "mov qword [r14 + 0x30], 0",
            "jg current_task",
            "mov ebx, 0xfffffff4",
            "jmp 0x8002b5d",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov rax, qword [rbp - 0x38]",
            "mov dword [rsp + 0x10], ecx",
            "mov dword [rsp + 8], edi",
            "mov r9, r13",
            "mov r8d, 0x97",
            "mov rcx, 0",
            "mov rdi, 0",
            "mov qword [rsp], rax",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002982",
            "mov rax, qword gs:[0]",
            "mov r9, qword [rbp - 0x38]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "shl r13, 3",
            "mov r8d, 0xb1",
            "mov rcx, 0",
            "mov qword [rsp], r13",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002b54",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xc4",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov ebx, 0xfffffff4",
            "call printk",
            "jmp 0x8002982",
            "mov rax, qword gs:[0]",
            "mov r9, qword [rbp - 0x38]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa5",
            "jmp .rodata",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xcf",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002bb8"
        ]
    },
    "unk.0x8002abf": {
        "function_address": "0x08002abf",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x60",
            "mov qword [rbp - 0x38], rsi",
            "mov qword [rbp - 0x28], rbx",
            "xor esi, esi",
            "mov rbx, rdx",
            "xor edx, edx",
            "test r9d, r9d",
            "mov qword [rbp - 0x20], r12",
            "mov qword [rbp - 0x18], r13",
            "mov r12d, r9d",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r14, rdi",
            "mov r13, rcx",
            "mov r15d, r8d",
            "mov rdi, qword [rbp - 0x38]",
            "jne crypto_alloc_aead",
            "call crypto_alloc_ablkcipher",
            "cmp rax, 0xfffffffffffff000",
            "mov qword [r14 + 0x18], rax",
            "ja cryptodev_verbosity",
            "mov rdx, qword [rax + 0x50]",
            "cmp rdx, 0xffffffffffffff40",
            "je 0x80029c9",
            "mov ecx, dword [rdx + 0xf4]",
            "test ecx, ecx",
            "je 0x80029c9",
            "mov edi, dword [rdx + 0xf0]",
            "mov esi, edi",
            "cmp rsi, r13",
            "ja 0x8002970",
            "mov esi, ecx",
            "cmp r13, rsi",
            "jbe 0x80029c9",
            "cmp dword [0x08002977], 0",
            "mov ebx, 0xffffffea",
            "jg current_task",
            "mov rdi, qword [r14 + 0x20]",
            "test rdi, rdi",
            "je 0x8002990",
            "call kzfree",
            "mov rdi, qword [r14 + 0x18]",
            "test rdi, rdi",
            "je 0x80029a1",
            "mov rsi, rdi",
            "call crypto_destroy_tfm",
            "mov rdi, qword [r14 + 0x38]",
            "call kfree",
            "jmp 0x8002a8c",
            "call crypto_alloc_aead",
            "cmp rax, 0xfffffffffffff000",
            "mov qword [r14 + 0x28], rax",
            "ja cryptodev_verbosity",
            "mov rdx, qword [rax + 0x50]",
            "mov edx, dword [rdx + 0x24]",
            "mov rsi, rbx",
            "mov dword [r14 + 4], edx",
            "mov edx, dword [rax + 0x38]",
            "mov dword [r14 + 0x10], edx",
            "mov rdx, qword [rax + 0x50]",
            "mov edx, dword [rdx + 0x2c]",
            "mov dword [r14 + 0x14], edx",
            "mov edx, r13d",
            "mov rdi, qword [rax + 0x30]",
            "call qword [rax + 8]",
            "test eax, eax",
            "mov ebx, eax",
            "jne cryptodev_verbosity",
            "mov dword [r14 + 0xc], r15d",
            "mov dword [r14 + 8], r12d",
            "mov esi, 0x80d0",
            "mov rdi, qword [0x08002a0d]",
            "call kmem_cache_alloc",
            "test rax, rax",
            "mov qword [r14 + 0x38], rax",
            "je 0x8002b7d",
            "lea rdi, [rax + 8]",
            "mov dword [rax], 0",
            "mov rdx, 0",
            "mov rsi, 0",
            "call __init_waitqueue_head",
            "test r12d, r12d",
            "jne 0x8002aa8",
            "mov r12, qword [r14 + 0x18]",
            "mov esi, 0xd0",
            "mov edi, dword [r12 + 0x3c]",
            "add rdi, 0x50",
            "call __kmalloc",
            "test rax, rax",
            "je cryptodev_verbosity",
            "mov rdx, qword [r12 + 0x30]",
            "mov qword [rax + 0x20], rdx",
            "mov rdx, qword [r14 + 0x38]",
            "mov qword [r14 + 0x20], rax",
            "mov qword [rax + 0x10], 0",
            "mov dword [rax + 0x28], 0x400",
            "mov qword [rax + 0x18], rdx",
            "mov dword [r14], 1",
            "mov eax, ebx",
            "mov r12, qword [rbp - 0x20]",
            "mov rbx, qword [rbp - 0x28]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov r12, qword [r14 + 0x28]",
            "mov esi, 0xd0",
            "mov edi, dword [r12 + 0x40]",
            "add rdi, 0x58",
            "call __kmalloc",
            "test rax, rax",
            "je cryptodev_verbosity",
            "mov rdx, qword [r12 + 0x30]",
            "mov qword [rax + 0x20], rdx",
            "mov rdx, qword [r14 + 0x38]",
            "mov qword [r14 + 0x30], rax",
            "mov qword [rax + 0x10], 0",
            "mov dword [rax + 0x28], 0x400",
            "mov qword [rax + 0x18], rdx",
            "jmp 0x8002a85",
            "cmp dword [0x08002af5], 0",
            "jg current_task",
            "mov ebx, 0xffffffea",
            "jmp 0x8002a8c",
            "cmp dword [0x08002b09], 0",
            "jle 0x8002afb",
            "mov rax, qword gs:[0]",
            "mov r9, qword [rbp - 0x38]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x8c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002afb",
            "cmp dword [0x08002b49], 0",
            "mov ebx, 0xffffffea",
            "jg current_task",
            "test r12d, r12d",
            "je 0x8002982",
            "mov rdi, qword [r14 + 0x30]",
            "test rdi, rdi",
            "je 0x8002b6b",
            "call kzfree",
            "mov rdi, qword [r14 + 0x28]",
            "test rdi, rdi",
            "jne crypto_destroy_tfm",
            "jmp 0x80029a1",
            "mov ebx, 0xfffffff4",
            "jmp 0x8002b54",
            "cmp dword [0x08002b8b], 0",
            "mov qword [r14 + 0x20], 0",
            "jg current_task",
            "mov ebx, 0xfffffff4",
            "jmp 0x8002982",
            "cmp dword [0x08002baa], 0",
            "mov qword [r14 + 0x30], 0",
            "jg current_task",
            "mov ebx, 0xfffffff4",
            "jmp 0x8002b5d",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov rax, qword [rbp - 0x38]",
            "mov dword [rsp + 0x10], ecx",
            "mov dword [rsp + 8], edi",
            "mov r9, r13",
            "mov r8d, 0x97",
            "mov rcx, 0",
            "mov rdi, 0",
            "mov qword [rsp], rax",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002982",
            "mov rax, qword gs:[0]",
            "mov r9, qword [rbp - 0x38]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "shl r13, 3",
            "mov r8d, 0xb1",
            "mov rcx, 0",
            "mov qword [rsp], r13",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002b54",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xc4",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov ebx, 0xfffffff4",
            "call printk",
            "jmp 0x8002982",
            "mov rax, qword gs:[0]",
            "mov r9, qword [rbp - 0x38]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa5",
            "jmp .rodata",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xcf",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002bb8"
        ]
    },
    "unk.0x8002b40": {
        "function_address": "0x08002b40",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x60",
            "mov qword [rbp - 0x38], rsi",
            "mov qword [rbp - 0x28], rbx",
            "xor esi, esi",
            "mov rbx, rdx",
            "xor edx, edx",
            "test r9d, r9d",
            "mov qword [rbp - 0x20], r12",
            "mov qword [rbp - 0x18], r13",
            "mov r12d, r9d",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r14, rdi",
            "mov r13, rcx",
            "mov r15d, r8d",
            "mov rdi, qword [rbp - 0x38]",
            "jne crypto_alloc_aead",
            "call crypto_alloc_ablkcipher",
            "cmp rax, 0xfffffffffffff000",
            "mov qword [r14 + 0x18], rax",
            "ja cryptodev_verbosity",
            "mov rdx, qword [rax + 0x50]",
            "cmp rdx, 0xffffffffffffff40",
            "je 0x80029c9",
            "mov ecx, dword [rdx + 0xf4]",
            "test ecx, ecx",
            "je 0x80029c9",
            "mov edi, dword [rdx + 0xf0]",
            "mov esi, edi",
            "cmp rsi, r13",
            "ja 0x8002970",
            "mov esi, ecx",
            "cmp r13, rsi",
            "jbe 0x80029c9",
            "cmp dword [0x08002977], 0",
            "mov ebx, 0xffffffea",
            "jg current_task",
            "mov rdi, qword [r14 + 0x20]",
            "test rdi, rdi",
            "je 0x8002990",
            "call kzfree",
            "mov rdi, qword [r14 + 0x18]",
            "test rdi, rdi",
            "je 0x80029a1",
            "mov rsi, rdi",
            "call crypto_destroy_tfm",
            "mov rdi, qword [r14 + 0x38]",
            "call kfree",
            "jmp 0x8002a8c",
            "call crypto_alloc_aead",
            "cmp rax, 0xfffffffffffff000",
            "mov qword [r14 + 0x28], rax",
            "ja cryptodev_verbosity",
            "mov rdx, qword [rax + 0x50]",
            "mov edx, dword [rdx + 0x24]",
            "mov rsi, rbx",
            "mov dword [r14 + 4], edx",
            "mov edx, dword [rax + 0x38]",
            "mov dword [r14 + 0x10], edx",
            "mov rdx, qword [rax + 0x50]",
            "mov edx, dword [rdx + 0x2c]",
            "mov dword [r14 + 0x14], edx",
            "mov edx, r13d",
            "mov rdi, qword [rax + 0x30]",
            "call qword [rax + 8]",
            "test eax, eax",
            "mov ebx, eax",
            "jne cryptodev_verbosity",
            "mov dword [r14 + 0xc], r15d",
            "mov dword [r14 + 8], r12d",
            "mov esi, 0x80d0",
            "mov rdi, qword [0x08002a0d]",
            "call kmem_cache_alloc",
            "test rax, rax",
            "mov qword [r14 + 0x38], rax",
            "je 0x8002b7d",
            "lea rdi, [rax + 8]",
            "mov dword [rax], 0",
            "mov rdx, 0",
            "mov rsi, 0",
            "call __init_waitqueue_head",
            "test r12d, r12d",
            "jne 0x8002aa8",
            "mov r12, qword [r14 + 0x18]",
            "mov esi, 0xd0",
            "mov edi, dword [r12 + 0x3c]",
            "add rdi, 0x50",
            "call __kmalloc",
            "test rax, rax",
            "je cryptodev_verbosity",
            "mov rdx, qword [r12 + 0x30]",
            "mov qword [rax + 0x20], rdx",
            "mov rdx, qword [r14 + 0x38]",
            "mov qword [r14 + 0x20], rax",
            "mov qword [rax + 0x10], 0",
            "mov dword [rax + 0x28], 0x400",
            "mov qword [rax + 0x18], rdx",
            "mov dword [r14], 1",
            "mov eax, ebx",
            "mov r12, qword [rbp - 0x20]",
            "mov rbx, qword [rbp - 0x28]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov r12, qword [r14 + 0x28]",
            "mov esi, 0xd0",
            "mov edi, dword [r12 + 0x40]",
            "add rdi, 0x58",
            "call __kmalloc",
            "test rax, rax",
            "je cryptodev_verbosity",
            "mov rdx, qword [r12 + 0x30]",
            "mov qword [rax + 0x20], rdx",
            "mov rdx, qword [r14 + 0x38]",
            "mov qword [r14 + 0x30], rax",
            "mov qword [rax + 0x10], 0",
            "mov dword [rax + 0x28], 0x400",
            "mov qword [rax + 0x18], rdx",
            "jmp 0x8002a85",
            "cmp dword [0x08002af5], 0",
            "jg current_task",
            "mov ebx, 0xffffffea",
            "jmp 0x8002a8c",
            "cmp dword [0x08002b09], 0",
            "jle 0x8002afb",
            "mov rax, qword gs:[0]",
            "mov r9, qword [rbp - 0x38]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x8c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002afb",
            "cmp dword [0x08002b49], 0",
            "mov ebx, 0xffffffea",
            "jg current_task",
            "test r12d, r12d",
            "je 0x8002982",
            "mov rdi, qword [r14 + 0x30]",
            "test rdi, rdi",
            "je 0x8002b6b",
            "call kzfree",
            "mov rdi, qword [r14 + 0x28]",
            "test rdi, rdi",
            "jne crypto_destroy_tfm",
            "jmp 0x80029a1",
            "mov ebx, 0xfffffff4",
            "jmp 0x8002b54",
            "cmp dword [0x08002b8b], 0",
            "mov qword [r14 + 0x20], 0",
            "jg current_task",
            "mov ebx, 0xfffffff4",
            "jmp 0x8002982",
            "cmp dword [0x08002baa], 0",
            "mov qword [r14 + 0x30], 0",
            "jg current_task",
            "mov ebx, 0xfffffff4",
            "jmp 0x8002b5d",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov rax, qword [rbp - 0x38]",
            "mov dword [rsp + 0x10], ecx",
            "mov dword [rsp + 8], edi",
            "mov r9, r13",
            "mov r8d, 0x97",
            "mov rcx, 0",
            "mov rdi, 0",
            "mov qword [rsp], rax",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002982",
            "mov rax, qword gs:[0]",
            "mov r9, qword [rbp - 0x38]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "shl r13, 3",
            "mov r8d, 0xb1",
            "mov rcx, 0",
            "mov qword [rsp], r13",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002b54",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xc4",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov ebx, 0xfffffff4",
            "call printk",
            "jmp 0x8002982",
            "mov rax, qword gs:[0]",
            "mov r9, qword [rbp - 0x38]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa5",
            "jmp .rodata",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xcf",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002bb8"
        ]
    },
    "unk.0x8002b6b": {
        "function_address": "0x08002b6b",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x60",
            "mov qword [rbp - 0x38], rsi",
            "mov qword [rbp - 0x28], rbx",
            "xor esi, esi",
            "mov rbx, rdx",
            "xor edx, edx",
            "test r9d, r9d",
            "mov qword [rbp - 0x20], r12",
            "mov qword [rbp - 0x18], r13",
            "mov r12d, r9d",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r14, rdi",
            "mov r13, rcx",
            "mov r15d, r8d",
            "mov rdi, qword [rbp - 0x38]",
            "jne crypto_alloc_aead",
            "call crypto_alloc_ablkcipher",
            "cmp rax, 0xfffffffffffff000",
            "mov qword [r14 + 0x18], rax",
            "ja cryptodev_verbosity",
            "mov rdx, qword [rax + 0x50]",
            "cmp rdx, 0xffffffffffffff40",
            "je 0x80029c9",
            "mov ecx, dword [rdx + 0xf4]",
            "test ecx, ecx",
            "je 0x80029c9",
            "mov edi, dword [rdx + 0xf0]",
            "mov esi, edi",
            "cmp rsi, r13",
            "ja 0x8002970",
            "mov esi, ecx",
            "cmp r13, rsi",
            "jbe 0x80029c9",
            "cmp dword [0x08002977], 0",
            "mov ebx, 0xffffffea",
            "jg current_task",
            "mov rdi, qword [r14 + 0x20]",
            "test rdi, rdi",
            "je 0x8002990",
            "call kzfree",
            "mov rdi, qword [r14 + 0x18]",
            "test rdi, rdi",
            "je 0x80029a1",
            "mov rsi, rdi",
            "call crypto_destroy_tfm",
            "mov rdi, qword [r14 + 0x38]",
            "call kfree",
            "jmp 0x8002a8c",
            "call crypto_alloc_aead",
            "cmp rax, 0xfffffffffffff000",
            "mov qword [r14 + 0x28], rax",
            "ja cryptodev_verbosity",
            "mov rdx, qword [rax + 0x50]",
            "mov edx, dword [rdx + 0x24]",
            "mov rsi, rbx",
            "mov dword [r14 + 4], edx",
            "mov edx, dword [rax + 0x38]",
            "mov dword [r14 + 0x10], edx",
            "mov rdx, qword [rax + 0x50]",
            "mov edx, dword [rdx + 0x2c]",
            "mov dword [r14 + 0x14], edx",
            "mov edx, r13d",
            "mov rdi, qword [rax + 0x30]",
            "call qword [rax + 8]",
            "test eax, eax",
            "mov ebx, eax",
            "jne cryptodev_verbosity",
            "mov dword [r14 + 0xc], r15d",
            "mov dword [r14 + 8], r12d",
            "mov esi, 0x80d0",
            "mov rdi, qword [0x08002a0d]",
            "call kmem_cache_alloc",
            "test rax, rax",
            "mov qword [r14 + 0x38], rax",
            "je 0x8002b7d",
            "lea rdi, [rax + 8]",
            "mov dword [rax], 0",
            "mov rdx, 0",
            "mov rsi, 0",
            "call __init_waitqueue_head",
            "test r12d, r12d",
            "jne 0x8002aa8",
            "mov r12, qword [r14 + 0x18]",
            "mov esi, 0xd0",
            "mov edi, dword [r12 + 0x3c]",
            "add rdi, 0x50",
            "call __kmalloc",
            "test rax, rax",
            "je cryptodev_verbosity",
            "mov rdx, qword [r12 + 0x30]",
            "mov qword [rax + 0x20], rdx",
            "mov rdx, qword [r14 + 0x38]",
            "mov qword [r14 + 0x20], rax",
            "mov qword [rax + 0x10], 0",
            "mov dword [rax + 0x28], 0x400",
            "mov qword [rax + 0x18], rdx",
            "mov dword [r14], 1",
            "mov eax, ebx",
            "mov r12, qword [rbp - 0x20]",
            "mov rbx, qword [rbp - 0x28]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov r12, qword [r14 + 0x28]",
            "mov esi, 0xd0",
            "mov edi, dword [r12 + 0x40]",
            "add rdi, 0x58",
            "call __kmalloc",
            "test rax, rax",
            "je cryptodev_verbosity",
            "mov rdx, qword [r12 + 0x30]",
            "mov qword [rax + 0x20], rdx",
            "mov rdx, qword [r14 + 0x38]",
            "mov qword [r14 + 0x30], rax",
            "mov qword [rax + 0x10], 0",
            "mov dword [rax + 0x28], 0x400",
            "mov qword [rax + 0x18], rdx",
            "jmp 0x8002a85",
            "cmp dword [0x08002af5], 0",
            "jg current_task",
            "mov ebx, 0xffffffea",
            "jmp 0x8002a8c",
            "cmp dword [0x08002b09], 0",
            "jle 0x8002afb",
            "mov rax, qword gs:[0]",
            "mov r9, qword [rbp - 0x38]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x8c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002afb",
            "cmp dword [0x08002b49], 0",
            "mov ebx, 0xffffffea",
            "jg current_task",
            "test r12d, r12d",
            "je 0x8002982",
            "mov rdi, qword [r14 + 0x30]",
            "test rdi, rdi",
            "je 0x8002b6b",
            "call kzfree",
            "mov rdi, qword [r14 + 0x28]",
            "test rdi, rdi",
            "jne crypto_destroy_tfm",
            "jmp 0x80029a1",
            "mov ebx, 0xfffffff4",
            "jmp 0x8002b54",
            "cmp dword [0x08002b8b], 0",
            "mov qword [r14 + 0x20], 0",
            "jg current_task",
            "mov ebx, 0xfffffff4",
            "jmp 0x8002982",
            "cmp dword [0x08002baa], 0",
            "mov qword [r14 + 0x30], 0",
            "jg current_task",
            "mov ebx, 0xfffffff4",
            "jmp 0x8002b5d",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov rax, qword [rbp - 0x38]",
            "mov dword [rsp + 0x10], ecx",
            "mov dword [rsp + 8], edi",
            "mov r9, r13",
            "mov r8d, 0x97",
            "mov rcx, 0",
            "mov rdi, 0",
            "mov qword [rsp], rax",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002982",
            "mov rax, qword gs:[0]",
            "mov r9, qword [rbp - 0x38]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "shl r13, 3",
            "mov r8d, 0xb1",
            "mov rcx, 0",
            "mov qword [rsp], r13",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002b54",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xc4",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov ebx, 0xfffffff4",
            "call printk",
            "jmp 0x8002982",
            "mov rax, qword gs:[0]",
            "mov r9, qword [rbp - 0x38]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa5",
            "jmp .rodata",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xcf",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002bb8"
        ]
    },
    "unk.0x8002c03": {
        "function_address": "0x08002c03",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x60",
            "mov qword [rbp - 0x38], rsi",
            "mov qword [rbp - 0x28], rbx",
            "xor esi, esi",
            "mov rbx, rdx",
            "xor edx, edx",
            "test r9d, r9d",
            "mov qword [rbp - 0x20], r12",
            "mov qword [rbp - 0x18], r13",
            "mov r12d, r9d",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r14, rdi",
            "mov r13, rcx",
            "mov r15d, r8d",
            "mov rdi, qword [rbp - 0x38]",
            "jne crypto_alloc_aead",
            "call crypto_alloc_ablkcipher",
            "cmp rax, 0xfffffffffffff000",
            "mov qword [r14 + 0x18], rax",
            "ja cryptodev_verbosity",
            "mov rdx, qword [rax + 0x50]",
            "cmp rdx, 0xffffffffffffff40",
            "je 0x80029c9",
            "mov ecx, dword [rdx + 0xf4]",
            "test ecx, ecx",
            "je 0x80029c9",
            "mov edi, dword [rdx + 0xf0]",
            "mov esi, edi",
            "cmp rsi, r13",
            "ja 0x8002970",
            "mov esi, ecx",
            "cmp r13, rsi",
            "jbe 0x80029c9",
            "cmp dword [0x08002977], 0",
            "mov ebx, 0xffffffea",
            "jg current_task",
            "mov rdi, qword [r14 + 0x20]",
            "test rdi, rdi",
            "je 0x8002990",
            "call kzfree",
            "mov rdi, qword [r14 + 0x18]",
            "test rdi, rdi",
            "je 0x80029a1",
            "mov rsi, rdi",
            "call crypto_destroy_tfm",
            "mov rdi, qword [r14 + 0x38]",
            "call kfree",
            "jmp 0x8002a8c",
            "call crypto_alloc_aead",
            "cmp rax, 0xfffffffffffff000",
            "mov qword [r14 + 0x28], rax",
            "ja cryptodev_verbosity",
            "mov rdx, qword [rax + 0x50]",
            "mov edx, dword [rdx + 0x24]",
            "mov rsi, rbx",
            "mov dword [r14 + 4], edx",
            "mov edx, dword [rax + 0x38]",
            "mov dword [r14 + 0x10], edx",
            "mov rdx, qword [rax + 0x50]",
            "mov edx, dword [rdx + 0x2c]",
            "mov dword [r14 + 0x14], edx",
            "mov edx, r13d",
            "mov rdi, qword [rax + 0x30]",
            "call qword [rax + 8]",
            "test eax, eax",
            "mov ebx, eax",
            "jne cryptodev_verbosity",
            "mov dword [r14 + 0xc], r15d",
            "mov dword [r14 + 8], r12d",
            "mov esi, 0x80d0",
            "mov rdi, qword [0x08002a0d]",
            "call kmem_cache_alloc",
            "test rax, rax",
            "mov qword [r14 + 0x38], rax",
            "je 0x8002b7d",
            "lea rdi, [rax + 8]",
            "mov dword [rax], 0",
            "mov rdx, 0",
            "mov rsi, 0",
            "call __init_waitqueue_head",
            "test r12d, r12d",
            "jne 0x8002aa8",
            "mov r12, qword [r14 + 0x18]",
            "mov esi, 0xd0",
            "mov edi, dword [r12 + 0x3c]",
            "add rdi, 0x50",
            "call __kmalloc",
            "test rax, rax",
            "je cryptodev_verbosity",
            "mov rdx, qword [r12 + 0x30]",
            "mov qword [rax + 0x20], rdx",
            "mov rdx, qword [r14 + 0x38]",
            "mov qword [r14 + 0x20], rax",
            "mov qword [rax + 0x10], 0",
            "mov dword [rax + 0x28], 0x400",
            "mov qword [rax + 0x18], rdx",
            "mov dword [r14], 1",
            "mov eax, ebx",
            "mov r12, qword [rbp - 0x20]",
            "mov rbx, qword [rbp - 0x28]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov r12, qword [r14 + 0x28]",
            "mov esi, 0xd0",
            "mov edi, dword [r12 + 0x40]",
            "add rdi, 0x58",
            "call __kmalloc",
            "test rax, rax",
            "je cryptodev_verbosity",
            "mov rdx, qword [r12 + 0x30]",
            "mov qword [rax + 0x20], rdx",
            "mov rdx, qword [r14 + 0x38]",
            "mov qword [r14 + 0x30], rax",
            "mov qword [rax + 0x10], 0",
            "mov dword [rax + 0x28], 0x400",
            "mov qword [rax + 0x18], rdx",
            "jmp 0x8002a85",
            "cmp dword [0x08002af5], 0",
            "jg current_task",
            "mov ebx, 0xffffffea",
            "jmp 0x8002a8c",
            "cmp dword [0x08002b09], 0",
            "jle 0x8002afb",
            "mov rax, qword gs:[0]",
            "mov r9, qword [rbp - 0x38]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x8c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002afb",
            "cmp dword [0x08002b49], 0",
            "mov ebx, 0xffffffea",
            "jg current_task",
            "test r12d, r12d",
            "je 0x8002982",
            "mov rdi, qword [r14 + 0x30]",
            "test rdi, rdi",
            "je 0x8002b6b",
            "call kzfree",
            "mov rdi, qword [r14 + 0x28]",
            "test rdi, rdi",
            "jne crypto_destroy_tfm",
            "jmp 0x80029a1",
            "mov ebx, 0xfffffff4",
            "jmp 0x8002b54",
            "cmp dword [0x08002b8b], 0",
            "mov qword [r14 + 0x20], 0",
            "jg current_task",
            "mov ebx, 0xfffffff4",
            "jmp 0x8002982",
            "cmp dword [0x08002baa], 0",
            "mov qword [r14 + 0x30], 0",
            "jg current_task",
            "mov ebx, 0xfffffff4",
            "jmp 0x8002b5d",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov rax, qword [rbp - 0x38]",
            "mov dword [rsp + 0x10], ecx",
            "mov dword [rsp + 8], edi",
            "mov r9, r13",
            "mov r8d, 0x97",
            "mov rcx, 0",
            "mov rdi, 0",
            "mov qword [rsp], rax",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002982",
            "mov rax, qword gs:[0]",
            "mov r9, qword [rbp - 0x38]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "shl r13, 3",
            "mov r8d, 0xb1",
            "mov rcx, 0",
            "mov qword [rsp], r13",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002b54",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xc4",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov ebx, 0xfffffff4",
            "call printk",
            "jmp 0x8002982",
            "mov rax, qword gs:[0]",
            "mov r9, qword [rbp - 0x38]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa5",
            "jmp .rodata",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xcf",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002bb8"
        ]
    },
    "unk.0x8002c45": {
        "function_address": "0x08002c45",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x60",
            "mov qword [rbp - 0x38], rsi",
            "mov qword [rbp - 0x28], rbx",
            "xor esi, esi",
            "mov rbx, rdx",
            "xor edx, edx",
            "test r9d, r9d",
            "mov qword [rbp - 0x20], r12",
            "mov qword [rbp - 0x18], r13",
            "mov r12d, r9d",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r14, rdi",
            "mov r13, rcx",
            "mov r15d, r8d",
            "mov rdi, qword [rbp - 0x38]",
            "jne crypto_alloc_aead",
            "call crypto_alloc_ablkcipher",
            "cmp rax, 0xfffffffffffff000",
            "mov qword [r14 + 0x18], rax",
            "ja cryptodev_verbosity",
            "mov rdx, qword [rax + 0x50]",
            "cmp rdx, 0xffffffffffffff40",
            "je 0x80029c9",
            "mov ecx, dword [rdx + 0xf4]",
            "test ecx, ecx",
            "je 0x80029c9",
            "mov edi, dword [rdx + 0xf0]",
            "mov esi, edi",
            "cmp rsi, r13",
            "ja 0x8002970",
            "mov esi, ecx",
            "cmp r13, rsi",
            "jbe 0x80029c9",
            "cmp dword [0x08002977], 0",
            "mov ebx, 0xffffffea",
            "jg current_task",
            "mov rdi, qword [r14 + 0x20]",
            "test rdi, rdi",
            "je 0x8002990",
            "call kzfree",
            "mov rdi, qword [r14 + 0x18]",
            "test rdi, rdi",
            "je 0x80029a1",
            "mov rsi, rdi",
            "call crypto_destroy_tfm",
            "mov rdi, qword [r14 + 0x38]",
            "call kfree",
            "jmp 0x8002a8c",
            "call crypto_alloc_aead",
            "cmp rax, 0xfffffffffffff000",
            "mov qword [r14 + 0x28], rax",
            "ja cryptodev_verbosity",
            "mov rdx, qword [rax + 0x50]",
            "mov edx, dword [rdx + 0x24]",
            "mov rsi, rbx",
            "mov dword [r14 + 4], edx",
            "mov edx, dword [rax + 0x38]",
            "mov dword [r14 + 0x10], edx",
            "mov rdx, qword [rax + 0x50]",
            "mov edx, dword [rdx + 0x2c]",
            "mov dword [r14 + 0x14], edx",
            "mov edx, r13d",
            "mov rdi, qword [rax + 0x30]",
            "call qword [rax + 8]",
            "test eax, eax",
            "mov ebx, eax",
            "jne cryptodev_verbosity",
            "mov dword [r14 + 0xc], r15d",
            "mov dword [r14 + 8], r12d",
            "mov esi, 0x80d0",
            "mov rdi, qword [0x08002a0d]",
            "call kmem_cache_alloc",
            "test rax, rax",
            "mov qword [r14 + 0x38], rax",
            "je 0x8002b7d",
            "lea rdi, [rax + 8]",
            "mov dword [rax], 0",
            "mov rdx, 0",
            "mov rsi, 0",
            "call __init_waitqueue_head",
            "test r12d, r12d",
            "jne 0x8002aa8",
            "mov r12, qword [r14 + 0x18]",
            "mov esi, 0xd0",
            "mov edi, dword [r12 + 0x3c]",
            "add rdi, 0x50",
            "call __kmalloc",
            "test rax, rax",
            "je cryptodev_verbosity",
            "mov rdx, qword [r12 + 0x30]",
            "mov qword [rax + 0x20], rdx",
            "mov rdx, qword [r14 + 0x38]",
            "mov qword [r14 + 0x20], rax",
            "mov qword [rax + 0x10], 0",
            "mov dword [rax + 0x28], 0x400",
            "mov qword [rax + 0x18], rdx",
            "mov dword [r14], 1",
            "mov eax, ebx",
            "mov r12, qword [rbp - 0x20]",
            "mov rbx, qword [rbp - 0x28]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov r12, qword [r14 + 0x28]",
            "mov esi, 0xd0",
            "mov edi, dword [r12 + 0x40]",
            "add rdi, 0x58",
            "call __kmalloc",
            "test rax, rax",
            "je cryptodev_verbosity",
            "mov rdx, qword [r12 + 0x30]",
            "mov qword [rax + 0x20], rdx",
            "mov rdx, qword [r14 + 0x38]",
            "mov qword [r14 + 0x30], rax",
            "mov qword [rax + 0x10], 0",
            "mov dword [rax + 0x28], 0x400",
            "mov qword [rax + 0x18], rdx",
            "jmp 0x8002a85",
            "cmp dword [0x08002af5], 0",
            "jg current_task",
            "mov ebx, 0xffffffea",
            "jmp 0x8002a8c",
            "cmp dword [0x08002b09], 0",
            "jle 0x8002afb",
            "mov rax, qword gs:[0]",
            "mov r9, qword [rbp - 0x38]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x8c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002afb",
            "cmp dword [0x08002b49], 0",
            "mov ebx, 0xffffffea",
            "jg current_task",
            "test r12d, r12d",
            "je 0x8002982",
            "mov rdi, qword [r14 + 0x30]",
            "test rdi, rdi",
            "je 0x8002b6b",
            "call kzfree",
            "mov rdi, qword [r14 + 0x28]",
            "test rdi, rdi",
            "jne crypto_destroy_tfm",
            "jmp 0x80029a1",
            "mov ebx, 0xfffffff4",
            "jmp 0x8002b54",
            "cmp dword [0x08002b8b], 0",
            "mov qword [r14 + 0x20], 0",
            "jg current_task",
            "mov ebx, 0xfffffff4",
            "jmp 0x8002982",
            "cmp dword [0x08002baa], 0",
            "mov qword [r14 + 0x30], 0",
            "jg current_task",
            "mov ebx, 0xfffffff4",
            "jmp 0x8002b5d",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov rax, qword [rbp - 0x38]",
            "mov dword [rsp + 0x10], ecx",
            "mov dword [rsp + 8], edi",
            "mov r9, r13",
            "mov r8d, 0x97",
            "mov rcx, 0",
            "mov rdi, 0",
            "mov qword [rsp], rax",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002982",
            "mov rax, qword gs:[0]",
            "mov r9, qword [rbp - 0x38]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "shl r13, 3",
            "mov r8d, 0xb1",
            "mov rcx, 0",
            "mov qword [rsp], r13",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002b54",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xc4",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov ebx, 0xfffffff4",
            "call printk",
            "jmp 0x8002982",
            "mov rax, qword gs:[0]",
            "mov r9, qword [rbp - 0x38]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa5",
            "jmp .rodata",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xcf",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002bb8"
        ]
    },
    "unk.0x8002c80": {
        "function_address": "0x08002c80",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x60",
            "mov qword [rbp - 0x38], rsi",
            "mov qword [rbp - 0x28], rbx",
            "xor esi, esi",
            "mov rbx, rdx",
            "xor edx, edx",
            "test r9d, r9d",
            "mov qword [rbp - 0x20], r12",
            "mov qword [rbp - 0x18], r13",
            "mov r12d, r9d",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r14, rdi",
            "mov r13, rcx",
            "mov r15d, r8d",
            "mov rdi, qword [rbp - 0x38]",
            "jne crypto_alloc_aead",
            "call crypto_alloc_ablkcipher",
            "cmp rax, 0xfffffffffffff000",
            "mov qword [r14 + 0x18], rax",
            "ja cryptodev_verbosity",
            "mov rdx, qword [rax + 0x50]",
            "cmp rdx, 0xffffffffffffff40",
            "je 0x80029c9",
            "mov ecx, dword [rdx + 0xf4]",
            "test ecx, ecx",
            "je 0x80029c9",
            "mov edi, dword [rdx + 0xf0]",
            "mov esi, edi",
            "cmp rsi, r13",
            "ja 0x8002970",
            "mov esi, ecx",
            "cmp r13, rsi",
            "jbe 0x80029c9",
            "cmp dword [0x08002977], 0",
            "mov ebx, 0xffffffea",
            "jg current_task",
            "mov rdi, qword [r14 + 0x20]",
            "test rdi, rdi",
            "je 0x8002990",
            "call kzfree",
            "mov rdi, qword [r14 + 0x18]",
            "test rdi, rdi",
            "je 0x80029a1",
            "mov rsi, rdi",
            "call crypto_destroy_tfm",
            "mov rdi, qword [r14 + 0x38]",
            "call kfree",
            "jmp 0x8002a8c",
            "call crypto_alloc_aead",
            "cmp rax, 0xfffffffffffff000",
            "mov qword [r14 + 0x28], rax",
            "ja cryptodev_verbosity",
            "mov rdx, qword [rax + 0x50]",
            "mov edx, dword [rdx + 0x24]",
            "mov rsi, rbx",
            "mov dword [r14 + 4], edx",
            "mov edx, dword [rax + 0x38]",
            "mov dword [r14 + 0x10], edx",
            "mov rdx, qword [rax + 0x50]",
            "mov edx, dword [rdx + 0x2c]",
            "mov dword [r14 + 0x14], edx",
            "mov edx, r13d",
            "mov rdi, qword [rax + 0x30]",
            "call qword [rax + 8]",
            "test eax, eax",
            "mov ebx, eax",
            "jne cryptodev_verbosity",
            "mov dword [r14 + 0xc], r15d",
            "mov dword [r14 + 8], r12d",
            "mov esi, 0x80d0",
            "mov rdi, qword [0x08002a0d]",
            "call kmem_cache_alloc",
            "test rax, rax",
            "mov qword [r14 + 0x38], rax",
            "je 0x8002b7d",
            "lea rdi, [rax + 8]",
            "mov dword [rax], 0",
            "mov rdx, 0",
            "mov rsi, 0",
            "call __init_waitqueue_head",
            "test r12d, r12d",
            "jne 0x8002aa8",
            "mov r12, qword [r14 + 0x18]",
            "mov esi, 0xd0",
            "mov edi, dword [r12 + 0x3c]",
            "add rdi, 0x50",
            "call __kmalloc",
            "test rax, rax",
            "je cryptodev_verbosity",
            "mov rdx, qword [r12 + 0x30]",
            "mov qword [rax + 0x20], rdx",
            "mov rdx, qword [r14 + 0x38]",
            "mov qword [r14 + 0x20], rax",
            "mov qword [rax + 0x10], 0",
            "mov dword [rax + 0x28], 0x400",
            "mov qword [rax + 0x18], rdx",
            "mov dword [r14], 1",
            "mov eax, ebx",
            "mov r12, qword [rbp - 0x20]",
            "mov rbx, qword [rbp - 0x28]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov r12, qword [r14 + 0x28]",
            "mov esi, 0xd0",
            "mov edi, dword [r12 + 0x40]",
            "add rdi, 0x58",
            "call __kmalloc",
            "test rax, rax",
            "je cryptodev_verbosity",
            "mov rdx, qword [r12 + 0x30]",
            "mov qword [rax + 0x20], rdx",
            "mov rdx, qword [r14 + 0x38]",
            "mov qword [r14 + 0x30], rax",
            "mov qword [rax + 0x10], 0",
            "mov dword [rax + 0x28], 0x400",
            "mov qword [rax + 0x18], rdx",
            "jmp 0x8002a85",
            "cmp dword [0x08002af5], 0",
            "jg current_task",
            "mov ebx, 0xffffffea",
            "jmp 0x8002a8c",
            "cmp dword [0x08002b09], 0",
            "jle 0x8002afb",
            "mov rax, qword gs:[0]",
            "mov r9, qword [rbp - 0x38]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x8c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002afb",
            "cmp dword [0x08002b49], 0",
            "mov ebx, 0xffffffea",
            "jg current_task",
            "test r12d, r12d",
            "je 0x8002982",
            "mov rdi, qword [r14 + 0x30]",
            "test rdi, rdi",
            "je 0x8002b6b",
            "call kzfree",
            "mov rdi, qword [r14 + 0x28]",
            "test rdi, rdi",
            "jne crypto_destroy_tfm",
            "jmp 0x80029a1",
            "mov ebx, 0xfffffff4",
            "jmp 0x8002b54",
            "cmp dword [0x08002b8b], 0",
            "mov qword [r14 + 0x20], 0",
            "jg current_task",
            "mov ebx, 0xfffffff4",
            "jmp 0x8002982",
            "cmp dword [0x08002baa], 0",
            "mov qword [r14 + 0x30], 0",
            "jg current_task",
            "mov ebx, 0xfffffff4",
            "jmp 0x8002b5d",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov rax, qword [rbp - 0x38]",
            "mov dword [rsp + 0x10], ecx",
            "mov dword [rsp + 8], edi",
            "mov r9, r13",
            "mov r8d, 0x97",
            "mov rcx, 0",
            "mov rdi, 0",
            "mov qword [rsp], rax",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002982",
            "mov rax, qword gs:[0]",
            "mov r9, qword [rbp - 0x38]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "shl r13, 3",
            "mov r8d, 0xb1",
            "mov rcx, 0",
            "mov qword [rsp], r13",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002b54",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xc4",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov ebx, 0xfffffff4",
            "call printk",
            "jmp 0x8002982",
            "mov rax, qword gs:[0]",
            "mov r9, qword [rbp - 0x38]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa5",
            "jmp .rodata",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xcf",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002bb8"
        ]
    },
    "unk.0x8002cdb": {
        "function_address": "0x08002cdb",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "sub rsp, 0x60",
            "mov qword [rbp - 0x38], rsi",
            "mov qword [rbp - 0x28], rbx",
            "xor esi, esi",
            "mov rbx, rdx",
            "xor edx, edx",
            "test r9d, r9d",
            "mov qword [rbp - 0x20], r12",
            "mov qword [rbp - 0x18], r13",
            "mov r12d, r9d",
            "mov qword [rbp - 0x10], r14",
            "mov qword [rbp - 8], r15",
            "mov r14, rdi",
            "mov r13, rcx",
            "mov r15d, r8d",
            "mov rdi, qword [rbp - 0x38]",
            "jne crypto_alloc_aead",
            "call crypto_alloc_ablkcipher",
            "cmp rax, 0xfffffffffffff000",
            "mov qword [r14 + 0x18], rax",
            "ja cryptodev_verbosity",
            "mov rdx, qword [rax + 0x50]",
            "cmp rdx, 0xffffffffffffff40",
            "je 0x80029c9",
            "mov ecx, dword [rdx + 0xf4]",
            "test ecx, ecx",
            "je 0x80029c9",
            "mov edi, dword [rdx + 0xf0]",
            "mov esi, edi",
            "cmp rsi, r13",
            "ja 0x8002970",
            "mov esi, ecx",
            "cmp r13, rsi",
            "jbe 0x80029c9",
            "cmp dword [0x08002977], 0",
            "mov ebx, 0xffffffea",
            "jg current_task",
            "mov rdi, qword [r14 + 0x20]",
            "test rdi, rdi",
            "je 0x8002990",
            "call kzfree",
            "mov rdi, qword [r14 + 0x18]",
            "test rdi, rdi",
            "je 0x80029a1",
            "mov rsi, rdi",
            "call crypto_destroy_tfm",
            "mov rdi, qword [r14 + 0x38]",
            "call kfree",
            "jmp 0x8002a8c",
            "call crypto_alloc_aead",
            "cmp rax, 0xfffffffffffff000",
            "mov qword [r14 + 0x28], rax",
            "ja cryptodev_verbosity",
            "mov rdx, qword [rax + 0x50]",
            "mov edx, dword [rdx + 0x24]",
            "mov rsi, rbx",
            "mov dword [r14 + 4], edx",
            "mov edx, dword [rax + 0x38]",
            "mov dword [r14 + 0x10], edx",
            "mov rdx, qword [rax + 0x50]",
            "mov edx, dword [rdx + 0x2c]",
            "mov dword [r14 + 0x14], edx",
            "mov edx, r13d",
            "mov rdi, qword [rax + 0x30]",
            "call qword [rax + 8]",
            "test eax, eax",
            "mov ebx, eax",
            "jne cryptodev_verbosity",
            "mov dword [r14 + 0xc], r15d",
            "mov dword [r14 + 8], r12d",
            "mov esi, 0x80d0",
            "mov rdi, qword [0x08002a0d]",
            "call kmem_cache_alloc",
            "test rax, rax",
            "mov qword [r14 + 0x38], rax",
            "je 0x8002b7d",
            "lea rdi, [rax + 8]",
            "mov dword [rax], 0",
            "mov rdx, 0",
            "mov rsi, 0",
            "call __init_waitqueue_head",
            "test r12d, r12d",
            "jne 0x8002aa8",
            "mov r12, qword [r14 + 0x18]",
            "mov esi, 0xd0",
            "mov edi, dword [r12 + 0x3c]",
            "add rdi, 0x50",
            "call __kmalloc",
            "test rax, rax",
            "je cryptodev_verbosity",
            "mov rdx, qword [r12 + 0x30]",
            "mov qword [rax + 0x20], rdx",
            "mov rdx, qword [r14 + 0x38]",
            "mov qword [r14 + 0x20], rax",
            "mov qword [rax + 0x10], 0",
            "mov dword [rax + 0x28], 0x400",
            "mov qword [rax + 0x18], rdx",
            "mov dword [r14], 1",
            "mov eax, ebx",
            "mov r12, qword [rbp - 0x20]",
            "mov rbx, qword [rbp - 0x28]",
            "mov r13, qword [rbp - 0x18]",
            "mov r14, qword [rbp - 0x10]",
            "mov r15, qword [rbp - 8]",
            "leave",
            "ret",
            "mov r12, qword [r14 + 0x28]",
            "mov esi, 0xd0",
            "mov edi, dword [r12 + 0x40]",
            "add rdi, 0x58",
            "call __kmalloc",
            "test rax, rax",
            "je cryptodev_verbosity",
            "mov rdx, qword [r12 + 0x30]",
            "mov qword [rax + 0x20], rdx",
            "mov rdx, qword [r14 + 0x38]",
            "mov qword [r14 + 0x30], rax",
            "mov qword [rax + 0x10], 0",
            "mov dword [rax + 0x28], 0x400",
            "mov qword [rax + 0x18], rdx",
            "jmp 0x8002a85",
            "cmp dword [0x08002af5], 0",
            "jg current_task",
            "mov ebx, 0xffffffea",
            "jmp 0x8002a8c",
            "cmp dword [0x08002b09], 0",
            "jle 0x8002afb",
            "mov rax, qword gs:[0]",
            "mov r9, qword [rbp - 0x38]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0x8c",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002afb",
            "cmp dword [0x08002b49], 0",
            "mov ebx, 0xffffffea",
            "jg current_task",
            "test r12d, r12d",
            "je 0x8002982",
            "mov rdi, qword [r14 + 0x30]",
            "test rdi, rdi",
            "je 0x8002b6b",
            "call kzfree",
            "mov rdi, qword [r14 + 0x28]",
            "test rdi, rdi",
            "jne crypto_destroy_tfm",
            "jmp 0x80029a1",
            "mov ebx, 0xfffffff4",
            "jmp 0x8002b54",
            "cmp dword [0x08002b8b], 0",
            "mov qword [r14 + 0x20], 0",
            "jg current_task",
            "mov ebx, 0xfffffff4",
            "jmp 0x8002982",
            "cmp dword [0x08002baa], 0",
            "mov qword [r14 + 0x30], 0",
            "jg current_task",
            "mov ebx, 0xfffffff4",
            "jmp 0x8002b5d",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov rax, qword [rbp - 0x38]",
            "mov dword [rsp + 0x10], ecx",
            "mov dword [rsp + 8], edi",
            "mov r9, r13",
            "mov r8d, 0x97",
            "mov rcx, 0",
            "mov rdi, 0",
            "mov qword [rsp], rax",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002982",
            "mov rax, qword gs:[0]",
            "mov r9, qword [rbp - 0x38]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "shl r13, 3",
            "mov r8d, 0xb1",
            "mov rcx, 0",
            "mov qword [rsp], r13",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002b54",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xc4",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov ebx, 0xfffffff4",
            "call printk",
            "jmp 0x8002982",
            "mov rax, qword gs:[0]",
            "mov r9, qword [rbp - 0x38]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xa5",
            "jmp .rodata",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xcf",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002bb8"
        ]
    },
    "sym.crypto_run": {
        "function_address": "0x08002390",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x38",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r12, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x88]",
            "test eax, eax",
            "je 0x80023f2",
            "movzx eax, word [rbx + 6]",
            "test ax, ax",
            "je 0x80023da",
            "test al, 0x40",
            "je 0x80023f2",
            "lea rdi, [r12 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r13d, eax",
            "jne cryptodev_verbosity",
            "mov eax, dword [r12 + 0x38]",
            "test eax, eax",
            "je 0x800243d",
            "mov r9d, dword [rbx + 8]",
            "mov ecx, dword [r12 + 0x3c]",
            "xor edx, edx",
            "mov eax, r9d",
            "div ecx",
            "test edx, edx",
            "jne cryptodev_verbosity",
            "mov edx, dword [r12 + 0x48]",
            "cmp dword [rbx + 0x30], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x30]",
            "lea rdi, [r12 + 0x78]",
            "lea rsi, [rbx + 0x34]",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "mov edx, dword [rbx + 8]",
            "test edx, edx",
            "je 0x80024b7",
            "movzx eax, word [rbx + 6]",
            "test al, 8",
            "jne 0x8002528",
            "mov rcx, qword [rbx + 0x18]",
            "lea rax, [rbp - 0x28]",
            "mov rsi, qword [rbx + 0x10]",
            "mov r9, qword [rbx + 0x88]",
            "mov r8d, edx",
            "mov rdi, r12",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x30]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x90]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "jne cryptodev_verbosity",
            "movzx esi, word [rbx + 4]",
            "mov r8d, dword [rbx + 8]",
            "mov rdi, r12",
            "mov rcx, qword [rbp - 0x28]",
            "mov rdx, qword [rbp - 0x30]",
            "call sym.hash_n_crypt.isra.0",
            "mov rdi, r12",
            "mov r13d, eax",
            "call release_user_pages",
            "test r13d, r13d",
            "jne 0x800250a",
            "mov eax, dword [r12 + 0x38]",
            "test eax, eax",
            "jne 0x8002550",
            "mov eax, dword [r12 + 0x88]",
            "xor r13d, r13d",
            "test eax, eax",
            "je 0x800250a",
            "movzx eax, word [rbx + 6]",
            "test al, 2",
            "jne 0x80024e3",
            "test al, 1",
            "jne 0x8002580",
            "lea rsi, [rbx + 0x48]",
            "lea rdi, [r12 + 0x88]",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r13d, eax",
            "jne cryptodev_verbosity",
            "mov eax, dword [r12 + 0x8c]",
            "mov dword [rbx + 0x44], eax",
            "lea rdi, [r12 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x38",
            "mov eax, r13d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop rbp",
            "ret",
            "mov edi, dword [r12 + 0xb4]",
            "test edi, edi",
            "jne 0x800262f",
            "mov rsi, rbx",
            "mov rdi, r12",
            "call sym.__crypto_run_std",
            "mov r13d, eax",
            "jmp 0x80024b2",
            "mov edx, dword [r12 + 0x48]",
            "cmp dword [rbx + 0x30], edx",
            "lea rdi, [rbx + 0x34]",
            "cmovle edx, dword [rbx + 0x30]",
            "mov eax, 0x10",
            "lea rsi, [r12 + 0x78]",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "jmp 0x80024c4",
            "mov eax, dword [rbx + 8]",
            "test eax, eax",
            "jne 0x800250a",
            "jmp 0x80024e3",
            "cmp dword [0x08002593], 0",
            "jle 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xcd",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800250a",
            "cmp dword [0x080025d6], 0",
            "jg current_task",
            "mov r13d, 0xffffffea",
            "jmp 0x8002514",
            "cmp dword [0x080025ee], 0",
            "jle 0x80025dc",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xc6",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r13d, 0xffffffea",
            "call printk",
            "jmp 0x8002514",
            "mov r9, qword [rbx + 0x10]",
            "mov edx, edi",
            "lea rcx, [rdx - 1]",
            "test r9, rcx",
            "jne cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x18]",
            "sub rdx, 1",
            "test rcx, rdx",
            "jne cryptodev_verbosity",
            "test al, 8",
            "jne 0x8002538",
            "mov edx, dword [rbx + 8]",
            "jmp 0x8002454",
            "cmp dword [0x0800266a], 0",
            "js 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r13d",
            "mov r8d, 0x102",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800250a",
            "cmp dword [0x080026b0], 0",
            "jle 0x8002538",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xae",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002538",
            "cmp dword [0x080026f3], 0",
            "mov r13d, 0xffffffea",
            "jle 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov dword [rsp], ecx",
            "mov r8d, 0xd7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xbf",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80025dc",
            "cmp dword [0x08002775], 1",
            "jle 0x80027b9",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "add edi, 1",
            "mov dword [rsp], edi",
            "mov r9, rcx",
            "mov r8d, 0xea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "movzx eax, word [rbx + 6]",
            "mov rcx, qword [rbx + 0x18]",
            "and eax, 0xfffffff7",
            "mov word [rbx + 6], ax",
            "jmp 0x800265b",
            "cmp dword [0x080027cc], 1",
            "jle 0x8002809",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "add edi, 1",
            "mov dword [rsp], edi",
            "mov r8d, 0xe4",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "movzx eax, word [rbx + 6]",
            "and eax, 0xfffffff7",
            "mov word [rbx + 6], ax",
            "mov edi, dword [r12 + 0xb4]",
            "test edi, edi",
            "mov edx, edi",
            "jne 0x8002642",
            "mov rcx, qword [rbx + 0x18]",
            "jmp 0x800265b"
        ]
    },
    "unk.0x80023b7": {
        "function_address": "0x080023b7",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x38",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r12, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x88]",
            "test eax, eax",
            "je 0x80023f2",
            "movzx eax, word [rbx + 6]",
            "test ax, ax",
            "je 0x80023da",
            "test al, 0x40",
            "je 0x80023f2",
            "lea rdi, [r12 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r13d, eax",
            "jne cryptodev_verbosity",
            "mov eax, dword [r12 + 0x38]",
            "test eax, eax",
            "je 0x800243d",
            "mov r9d, dword [rbx + 8]",
            "mov ecx, dword [r12 + 0x3c]",
            "xor edx, edx",
            "mov eax, r9d",
            "div ecx",
            "test edx, edx",
            "jne cryptodev_verbosity",
            "mov edx, dword [r12 + 0x48]",
            "cmp dword [rbx + 0x30], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x30]",
            "lea rdi, [r12 + 0x78]",
            "lea rsi, [rbx + 0x34]",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "mov edx, dword [rbx + 8]",
            "test edx, edx",
            "je 0x80024b7",
            "movzx eax, word [rbx + 6]",
            "test al, 8",
            "jne 0x8002528",
            "mov rcx, qword [rbx + 0x18]",
            "lea rax, [rbp - 0x28]",
            "mov rsi, qword [rbx + 0x10]",
            "mov r9, qword [rbx + 0x88]",
            "mov r8d, edx",
            "mov rdi, r12",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x30]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x90]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "jne cryptodev_verbosity",
            "movzx esi, word [rbx + 4]",
            "mov r8d, dword [rbx + 8]",
            "mov rdi, r12",
            "mov rcx, qword [rbp - 0x28]",
            "mov rdx, qword [rbp - 0x30]",
            "call sym.hash_n_crypt.isra.0",
            "mov rdi, r12",
            "mov r13d, eax",
            "call release_user_pages",
            "test r13d, r13d",
            "jne 0x800250a",
            "mov eax, dword [r12 + 0x38]",
            "test eax, eax",
            "jne 0x8002550",
            "mov eax, dword [r12 + 0x88]",
            "xor r13d, r13d",
            "test eax, eax",
            "je 0x800250a",
            "movzx eax, word [rbx + 6]",
            "test al, 2",
            "jne 0x80024e3",
            "test al, 1",
            "jne 0x8002580",
            "lea rsi, [rbx + 0x48]",
            "lea rdi, [r12 + 0x88]",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r13d, eax",
            "jne cryptodev_verbosity",
            "mov eax, dword [r12 + 0x8c]",
            "mov dword [rbx + 0x44], eax",
            "lea rdi, [r12 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x38",
            "mov eax, r13d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop rbp",
            "ret",
            "mov edi, dword [r12 + 0xb4]",
            "test edi, edi",
            "jne 0x800262f",
            "mov rsi, rbx",
            "mov rdi, r12",
            "call sym.__crypto_run_std",
            "mov r13d, eax",
            "jmp 0x80024b2",
            "mov edx, dword [r12 + 0x48]",
            "cmp dword [rbx + 0x30], edx",
            "lea rdi, [rbx + 0x34]",
            "cmovle edx, dword [rbx + 0x30]",
            "mov eax, 0x10",
            "lea rsi, [r12 + 0x78]",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "jmp 0x80024c4",
            "mov eax, dword [rbx + 8]",
            "test eax, eax",
            "jne 0x800250a",
            "jmp 0x80024e3",
            "cmp dword [0x08002593], 0",
            "jle 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xcd",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800250a",
            "cmp dword [0x080025d6], 0",
            "jg current_task",
            "mov r13d, 0xffffffea",
            "jmp 0x8002514",
            "cmp dword [0x080025ee], 0",
            "jle 0x80025dc",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xc6",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r13d, 0xffffffea",
            "call printk",
            "jmp 0x8002514",
            "mov r9, qword [rbx + 0x10]",
            "mov edx, edi",
            "lea rcx, [rdx - 1]",
            "test r9, rcx",
            "jne cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x18]",
            "sub rdx, 1",
            "test rcx, rdx",
            "jne cryptodev_verbosity",
            "test al, 8",
            "jne 0x8002538",
            "mov edx, dword [rbx + 8]",
            "jmp 0x8002454",
            "cmp dword [0x0800266a], 0",
            "js 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r13d",
            "mov r8d, 0x102",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800250a",
            "cmp dword [0x080026b0], 0",
            "jle 0x8002538",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xae",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002538",
            "cmp dword [0x080026f3], 0",
            "mov r13d, 0xffffffea",
            "jle 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov dword [rsp], ecx",
            "mov r8d, 0xd7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xbf",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80025dc",
            "cmp dword [0x08002775], 1",
            "jle 0x80027b9",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "add edi, 1",
            "mov dword [rsp], edi",
            "mov r9, rcx",
            "mov r8d, 0xea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "movzx eax, word [rbx + 6]",
            "mov rcx, qword [rbx + 0x18]",
            "and eax, 0xfffffff7",
            "mov word [rbx + 6], ax",
            "jmp 0x800265b",
            "cmp dword [0x080027cc], 1",
            "jle 0x8002809",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "add edi, 1",
            "mov dword [rsp], edi",
            "mov r8d, 0xe4",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "movzx eax, word [rbx + 6]",
            "and eax, 0xfffffff7",
            "mov word [rbx + 6], ax",
            "mov edi, dword [r12 + 0xb4]",
            "test edi, edi",
            "mov edx, edi",
            "jne 0x8002642",
            "mov rcx, qword [rbx + 0x18]",
            "jmp 0x800265b"
        ]
    },
    "unk.0x80023e7": {
        "function_address": "0x080023e7",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x38",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r12, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x88]",
            "test eax, eax",
            "je 0x80023f2",
            "movzx eax, word [rbx + 6]",
            "test ax, ax",
            "je 0x80023da",
            "test al, 0x40",
            "je 0x80023f2",
            "lea rdi, [r12 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r13d, eax",
            "jne cryptodev_verbosity",
            "mov eax, dword [r12 + 0x38]",
            "test eax, eax",
            "je 0x800243d",
            "mov r9d, dword [rbx + 8]",
            "mov ecx, dword [r12 + 0x3c]",
            "xor edx, edx",
            "mov eax, r9d",
            "div ecx",
            "test edx, edx",
            "jne cryptodev_verbosity",
            "mov edx, dword [r12 + 0x48]",
            "cmp dword [rbx + 0x30], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x30]",
            "lea rdi, [r12 + 0x78]",
            "lea rsi, [rbx + 0x34]",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "mov edx, dword [rbx + 8]",
            "test edx, edx",
            "je 0x80024b7",
            "movzx eax, word [rbx + 6]",
            "test al, 8",
            "jne 0x8002528",
            "mov rcx, qword [rbx + 0x18]",
            "lea rax, [rbp - 0x28]",
            "mov rsi, qword [rbx + 0x10]",
            "mov r9, qword [rbx + 0x88]",
            "mov r8d, edx",
            "mov rdi, r12",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x30]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x90]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "jne cryptodev_verbosity",
            "movzx esi, word [rbx + 4]",
            "mov r8d, dword [rbx + 8]",
            "mov rdi, r12",
            "mov rcx, qword [rbp - 0x28]",
            "mov rdx, qword [rbp - 0x30]",
            "call sym.hash_n_crypt.isra.0",
            "mov rdi, r12",
            "mov r13d, eax",
            "call release_user_pages",
            "test r13d, r13d",
            "jne 0x800250a",
            "mov eax, dword [r12 + 0x38]",
            "test eax, eax",
            "jne 0x8002550",
            "mov eax, dword [r12 + 0x88]",
            "xor r13d, r13d",
            "test eax, eax",
            "je 0x800250a",
            "movzx eax, word [rbx + 6]",
            "test al, 2",
            "jne 0x80024e3",
            "test al, 1",
            "jne 0x8002580",
            "lea rsi, [rbx + 0x48]",
            "lea rdi, [r12 + 0x88]",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r13d, eax",
            "jne cryptodev_verbosity",
            "mov eax, dword [r12 + 0x8c]",
            "mov dword [rbx + 0x44], eax",
            "lea rdi, [r12 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x38",
            "mov eax, r13d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop rbp",
            "ret",
            "mov edi, dword [r12 + 0xb4]",
            "test edi, edi",
            "jne 0x800262f",
            "mov rsi, rbx",
            "mov rdi, r12",
            "call sym.__crypto_run_std",
            "mov r13d, eax",
            "jmp 0x80024b2",
            "mov edx, dword [r12 + 0x48]",
            "cmp dword [rbx + 0x30], edx",
            "lea rdi, [rbx + 0x34]",
            "cmovle edx, dword [rbx + 0x30]",
            "mov eax, 0x10",
            "lea rsi, [r12 + 0x78]",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "jmp 0x80024c4",
            "mov eax, dword [rbx + 8]",
            "test eax, eax",
            "jne 0x800250a",
            "jmp 0x80024e3",
            "cmp dword [0x08002593], 0",
            "jle 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xcd",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800250a",
            "cmp dword [0x080025d6], 0",
            "jg current_task",
            "mov r13d, 0xffffffea",
            "jmp 0x8002514",
            "cmp dword [0x080025ee], 0",
            "jle 0x80025dc",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xc6",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r13d, 0xffffffea",
            "call printk",
            "jmp 0x8002514",
            "mov r9, qword [rbx + 0x10]",
            "mov edx, edi",
            "lea rcx, [rdx - 1]",
            "test r9, rcx",
            "jne cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x18]",
            "sub rdx, 1",
            "test rcx, rdx",
            "jne cryptodev_verbosity",
            "test al, 8",
            "jne 0x8002538",
            "mov edx, dword [rbx + 8]",
            "jmp 0x8002454",
            "cmp dword [0x0800266a], 0",
            "js 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r13d",
            "mov r8d, 0x102",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800250a",
            "cmp dword [0x080026b0], 0",
            "jle 0x8002538",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xae",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002538",
            "cmp dword [0x080026f3], 0",
            "mov r13d, 0xffffffea",
            "jle 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov dword [rsp], ecx",
            "mov r8d, 0xd7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xbf",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80025dc",
            "cmp dword [0x08002775], 1",
            "jle 0x80027b9",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "add edi, 1",
            "mov dword [rsp], edi",
            "mov r9, rcx",
            "mov r8d, 0xea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "movzx eax, word [rbx + 6]",
            "mov rcx, qword [rbx + 0x18]",
            "and eax, 0xfffffff7",
            "mov word [rbx + 6], ax",
            "jmp 0x800265b",
            "cmp dword [0x080027cc], 1",
            "jle 0x8002809",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "add edi, 1",
            "mov dword [rsp], edi",
            "mov r8d, 0xe4",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "movzx eax, word [rbx + 6]",
            "and eax, 0xfffffff7",
            "mov word [rbx + 6], ax",
            "mov edi, dword [r12 + 0xb4]",
            "test edi, edi",
            "mov edx, edi",
            "jne 0x8002642",
            "mov rcx, qword [rbx + 0x18]",
            "jmp 0x800265b"
        ]
    },
    "unk.0x800243d": {
        "function_address": "0x0800243d",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x38",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r12, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x88]",
            "test eax, eax",
            "je 0x80023f2",
            "movzx eax, word [rbx + 6]",
            "test ax, ax",
            "je 0x80023da",
            "test al, 0x40",
            "je 0x80023f2",
            "lea rdi, [r12 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r13d, eax",
            "jne cryptodev_verbosity",
            "mov eax, dword [r12 + 0x38]",
            "test eax, eax",
            "je 0x800243d",
            "mov r9d, dword [rbx + 8]",
            "mov ecx, dword [r12 + 0x3c]",
            "xor edx, edx",
            "mov eax, r9d",
            "div ecx",
            "test edx, edx",
            "jne cryptodev_verbosity",
            "mov edx, dword [r12 + 0x48]",
            "cmp dword [rbx + 0x30], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x30]",
            "lea rdi, [r12 + 0x78]",
            "lea rsi, [rbx + 0x34]",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "mov edx, dword [rbx + 8]",
            "test edx, edx",
            "je 0x80024b7",
            "movzx eax, word [rbx + 6]",
            "test al, 8",
            "jne 0x8002528",
            "mov rcx, qword [rbx + 0x18]",
            "lea rax, [rbp - 0x28]",
            "mov rsi, qword [rbx + 0x10]",
            "mov r9, qword [rbx + 0x88]",
            "mov r8d, edx",
            "mov rdi, r12",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x30]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x90]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "jne cryptodev_verbosity",
            "movzx esi, word [rbx + 4]",
            "mov r8d, dword [rbx + 8]",
            "mov rdi, r12",
            "mov rcx, qword [rbp - 0x28]",
            "mov rdx, qword [rbp - 0x30]",
            "call sym.hash_n_crypt.isra.0",
            "mov rdi, r12",
            "mov r13d, eax",
            "call release_user_pages",
            "test r13d, r13d",
            "jne 0x800250a",
            "mov eax, dword [r12 + 0x38]",
            "test eax, eax",
            "jne 0x8002550",
            "mov eax, dword [r12 + 0x88]",
            "xor r13d, r13d",
            "test eax, eax",
            "je 0x800250a",
            "movzx eax, word [rbx + 6]",
            "test al, 2",
            "jne 0x80024e3",
            "test al, 1",
            "jne 0x8002580",
            "lea rsi, [rbx + 0x48]",
            "lea rdi, [r12 + 0x88]",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r13d, eax",
            "jne cryptodev_verbosity",
            "mov eax, dword [r12 + 0x8c]",
            "mov dword [rbx + 0x44], eax",
            "lea rdi, [r12 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x38",
            "mov eax, r13d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop rbp",
            "ret",
            "mov edi, dword [r12 + 0xb4]",
            "test edi, edi",
            "jne 0x800262f",
            "mov rsi, rbx",
            "mov rdi, r12",
            "call sym.__crypto_run_std",
            "mov r13d, eax",
            "jmp 0x80024b2",
            "mov edx, dword [r12 + 0x48]",
            "cmp dword [rbx + 0x30], edx",
            "lea rdi, [rbx + 0x34]",
            "cmovle edx, dword [rbx + 0x30]",
            "mov eax, 0x10",
            "lea rsi, [r12 + 0x78]",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "jmp 0x80024c4",
            "mov eax, dword [rbx + 8]",
            "test eax, eax",
            "jne 0x800250a",
            "jmp 0x80024e3",
            "cmp dword [0x08002593], 0",
            "jle 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xcd",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800250a",
            "cmp dword [0x080025d6], 0",
            "jg current_task",
            "mov r13d, 0xffffffea",
            "jmp 0x8002514",
            "cmp dword [0x080025ee], 0",
            "jle 0x80025dc",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xc6",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r13d, 0xffffffea",
            "call printk",
            "jmp 0x8002514",
            "mov r9, qword [rbx + 0x10]",
            "mov edx, edi",
            "lea rcx, [rdx - 1]",
            "test r9, rcx",
            "jne cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x18]",
            "sub rdx, 1",
            "test rcx, rdx",
            "jne cryptodev_verbosity",
            "test al, 8",
            "jne 0x8002538",
            "mov edx, dword [rbx + 8]",
            "jmp 0x8002454",
            "cmp dword [0x0800266a], 0",
            "js 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r13d",
            "mov r8d, 0x102",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800250a",
            "cmp dword [0x080026b0], 0",
            "jle 0x8002538",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xae",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002538",
            "cmp dword [0x080026f3], 0",
            "mov r13d, 0xffffffea",
            "jle 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov dword [rsp], ecx",
            "mov r8d, 0xd7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xbf",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80025dc",
            "cmp dword [0x08002775], 1",
            "jle 0x80027b9",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "add edi, 1",
            "mov dword [rsp], edi",
            "mov r9, rcx",
            "mov r8d, 0xea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "movzx eax, word [rbx + 6]",
            "mov rcx, qword [rbx + 0x18]",
            "and eax, 0xfffffff7",
            "mov word [rbx + 6], ax",
            "jmp 0x800265b",
            "cmp dword [0x080027cc], 1",
            "jle 0x8002809",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "add edi, 1",
            "mov dword [rsp], edi",
            "mov r8d, 0xe4",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "movzx eax, word [rbx + 6]",
            "and eax, 0xfffffff7",
            "mov word [rbx + 6], ax",
            "mov edi, dword [r12 + 0xb4]",
            "test edi, edi",
            "mov edx, edi",
            "jne 0x8002642",
            "mov rcx, qword [rbx + 0x18]",
            "jmp 0x800265b"
        ]
    },
    "unk.0x8002487": {
        "function_address": "0x08002487",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x38",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r12, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x88]",
            "test eax, eax",
            "je 0x80023f2",
            "movzx eax, word [rbx + 6]",
            "test ax, ax",
            "je 0x80023da",
            "test al, 0x40",
            "je 0x80023f2",
            "lea rdi, [r12 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r13d, eax",
            "jne cryptodev_verbosity",
            "mov eax, dword [r12 + 0x38]",
            "test eax, eax",
            "je 0x800243d",
            "mov r9d, dword [rbx + 8]",
            "mov ecx, dword [r12 + 0x3c]",
            "xor edx, edx",
            "mov eax, r9d",
            "div ecx",
            "test edx, edx",
            "jne cryptodev_verbosity",
            "mov edx, dword [r12 + 0x48]",
            "cmp dword [rbx + 0x30], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x30]",
            "lea rdi, [r12 + 0x78]",
            "lea rsi, [rbx + 0x34]",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "mov edx, dword [rbx + 8]",
            "test edx, edx",
            "je 0x80024b7",
            "movzx eax, word [rbx + 6]",
            "test al, 8",
            "jne 0x8002528",
            "mov rcx, qword [rbx + 0x18]",
            "lea rax, [rbp - 0x28]",
            "mov rsi, qword [rbx + 0x10]",
            "mov r9, qword [rbx + 0x88]",
            "mov r8d, edx",
            "mov rdi, r12",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x30]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x90]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "jne cryptodev_verbosity",
            "movzx esi, word [rbx + 4]",
            "mov r8d, dword [rbx + 8]",
            "mov rdi, r12",
            "mov rcx, qword [rbp - 0x28]",
            "mov rdx, qword [rbp - 0x30]",
            "call sym.hash_n_crypt.isra.0",
            "mov rdi, r12",
            "mov r13d, eax",
            "call release_user_pages",
            "test r13d, r13d",
            "jne 0x800250a",
            "mov eax, dword [r12 + 0x38]",
            "test eax, eax",
            "jne 0x8002550",
            "mov eax, dword [r12 + 0x88]",
            "xor r13d, r13d",
            "test eax, eax",
            "je 0x800250a",
            "movzx eax, word [rbx + 6]",
            "test al, 2",
            "jne 0x80024e3",
            "test al, 1",
            "jne 0x8002580",
            "lea rsi, [rbx + 0x48]",
            "lea rdi, [r12 + 0x88]",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r13d, eax",
            "jne cryptodev_verbosity",
            "mov eax, dword [r12 + 0x8c]",
            "mov dword [rbx + 0x44], eax",
            "lea rdi, [r12 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x38",
            "mov eax, r13d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop rbp",
            "ret",
            "mov edi, dword [r12 + 0xb4]",
            "test edi, edi",
            "jne 0x800262f",
            "mov rsi, rbx",
            "mov rdi, r12",
            "call sym.__crypto_run_std",
            "mov r13d, eax",
            "jmp 0x80024b2",
            "mov edx, dword [r12 + 0x48]",
            "cmp dword [rbx + 0x30], edx",
            "lea rdi, [rbx + 0x34]",
            "cmovle edx, dword [rbx + 0x30]",
            "mov eax, 0x10",
            "lea rsi, [r12 + 0x78]",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "jmp 0x80024c4",
            "mov eax, dword [rbx + 8]",
            "test eax, eax",
            "jne 0x800250a",
            "jmp 0x80024e3",
            "cmp dword [0x08002593], 0",
            "jle 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xcd",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800250a",
            "cmp dword [0x080025d6], 0",
            "jg current_task",
            "mov r13d, 0xffffffea",
            "jmp 0x8002514",
            "cmp dword [0x080025ee], 0",
            "jle 0x80025dc",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xc6",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r13d, 0xffffffea",
            "call printk",
            "jmp 0x8002514",
            "mov r9, qword [rbx + 0x10]",
            "mov edx, edi",
            "lea rcx, [rdx - 1]",
            "test r9, rcx",
            "jne cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x18]",
            "sub rdx, 1",
            "test rcx, rdx",
            "jne cryptodev_verbosity",
            "test al, 8",
            "jne 0x8002538",
            "mov edx, dword [rbx + 8]",
            "jmp 0x8002454",
            "cmp dword [0x0800266a], 0",
            "js 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r13d",
            "mov r8d, 0x102",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800250a",
            "cmp dword [0x080026b0], 0",
            "jle 0x8002538",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xae",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002538",
            "cmp dword [0x080026f3], 0",
            "mov r13d, 0xffffffea",
            "jle 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov dword [rsp], ecx",
            "mov r8d, 0xd7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xbf",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80025dc",
            "cmp dword [0x08002775], 1",
            "jle 0x80027b9",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "add edi, 1",
            "mov dword [rsp], edi",
            "mov r9, rcx",
            "mov r8d, 0xea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "movzx eax, word [rbx + 6]",
            "mov rcx, qword [rbx + 0x18]",
            "and eax, 0xfffffff7",
            "mov word [rbx + 6], ax",
            "jmp 0x800265b",
            "cmp dword [0x080027cc], 1",
            "jle 0x8002809",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "add edi, 1",
            "mov dword [rsp], edi",
            "mov r8d, 0xe4",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "movzx eax, word [rbx + 6]",
            "and eax, 0xfffffff7",
            "mov word [rbx + 6], ax",
            "mov edi, dword [r12 + 0xb4]",
            "test edi, edi",
            "mov edx, edi",
            "jne 0x8002642",
            "mov rcx, qword [rbx + 0x18]",
            "jmp 0x800265b"
        ]
    },
    "unk.0x80024b2": {
        "function_address": "0x080024b2",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x38",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r12, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x88]",
            "test eax, eax",
            "je 0x80023f2",
            "movzx eax, word [rbx + 6]",
            "test ax, ax",
            "je 0x80023da",
            "test al, 0x40",
            "je 0x80023f2",
            "lea rdi, [r12 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r13d, eax",
            "jne cryptodev_verbosity",
            "mov eax, dword [r12 + 0x38]",
            "test eax, eax",
            "je 0x800243d",
            "mov r9d, dword [rbx + 8]",
            "mov ecx, dword [r12 + 0x3c]",
            "xor edx, edx",
            "mov eax, r9d",
            "div ecx",
            "test edx, edx",
            "jne cryptodev_verbosity",
            "mov edx, dword [r12 + 0x48]",
            "cmp dword [rbx + 0x30], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x30]",
            "lea rdi, [r12 + 0x78]",
            "lea rsi, [rbx + 0x34]",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "mov edx, dword [rbx + 8]",
            "test edx, edx",
            "je 0x80024b7",
            "movzx eax, word [rbx + 6]",
            "test al, 8",
            "jne 0x8002528",
            "mov rcx, qword [rbx + 0x18]",
            "lea rax, [rbp - 0x28]",
            "mov rsi, qword [rbx + 0x10]",
            "mov r9, qword [rbx + 0x88]",
            "mov r8d, edx",
            "mov rdi, r12",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x30]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x90]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "jne cryptodev_verbosity",
            "movzx esi, word [rbx + 4]",
            "mov r8d, dword [rbx + 8]",
            "mov rdi, r12",
            "mov rcx, qword [rbp - 0x28]",
            "mov rdx, qword [rbp - 0x30]",
            "call sym.hash_n_crypt.isra.0",
            "mov rdi, r12",
            "mov r13d, eax",
            "call release_user_pages",
            "test r13d, r13d",
            "jne 0x800250a",
            "mov eax, dword [r12 + 0x38]",
            "test eax, eax",
            "jne 0x8002550",
            "mov eax, dword [r12 + 0x88]",
            "xor r13d, r13d",
            "test eax, eax",
            "je 0x800250a",
            "movzx eax, word [rbx + 6]",
            "test al, 2",
            "jne 0x80024e3",
            "test al, 1",
            "jne 0x8002580",
            "lea rsi, [rbx + 0x48]",
            "lea rdi, [r12 + 0x88]",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r13d, eax",
            "jne cryptodev_verbosity",
            "mov eax, dword [r12 + 0x8c]",
            "mov dword [rbx + 0x44], eax",
            "lea rdi, [r12 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x38",
            "mov eax, r13d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop rbp",
            "ret",
            "mov edi, dword [r12 + 0xb4]",
            "test edi, edi",
            "jne 0x800262f",
            "mov rsi, rbx",
            "mov rdi, r12",
            "call sym.__crypto_run_std",
            "mov r13d, eax",
            "jmp 0x80024b2",
            "mov edx, dword [r12 + 0x48]",
            "cmp dword [rbx + 0x30], edx",
            "lea rdi, [rbx + 0x34]",
            "cmovle edx, dword [rbx + 0x30]",
            "mov eax, 0x10",
            "lea rsi, [r12 + 0x78]",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "jmp 0x80024c4",
            "mov eax, dword [rbx + 8]",
            "test eax, eax",
            "jne 0x800250a",
            "jmp 0x80024e3",
            "cmp dword [0x08002593], 0",
            "jle 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xcd",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800250a",
            "cmp dword [0x080025d6], 0",
            "jg current_task",
            "mov r13d, 0xffffffea",
            "jmp 0x8002514",
            "cmp dword [0x080025ee], 0",
            "jle 0x80025dc",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xc6",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r13d, 0xffffffea",
            "call printk",
            "jmp 0x8002514",
            "mov r9, qword [rbx + 0x10]",
            "mov edx, edi",
            "lea rcx, [rdx - 1]",
            "test r9, rcx",
            "jne cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x18]",
            "sub rdx, 1",
            "test rcx, rdx",
            "jne cryptodev_verbosity",
            "test al, 8",
            "jne 0x8002538",
            "mov edx, dword [rbx + 8]",
            "jmp 0x8002454",
            "cmp dword [0x0800266a], 0",
            "js 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r13d",
            "mov r8d, 0x102",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800250a",
            "cmp dword [0x080026b0], 0",
            "jle 0x8002538",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xae",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002538",
            "cmp dword [0x080026f3], 0",
            "mov r13d, 0xffffffea",
            "jle 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov dword [rsp], ecx",
            "mov r8d, 0xd7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xbf",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80025dc",
            "cmp dword [0x08002775], 1",
            "jle 0x80027b9",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "add edi, 1",
            "mov dword [rsp], edi",
            "mov r9, rcx",
            "mov r8d, 0xea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "movzx eax, word [rbx + 6]",
            "mov rcx, qword [rbx + 0x18]",
            "and eax, 0xfffffff7",
            "mov word [rbx + 6], ax",
            "jmp 0x800265b",
            "cmp dword [0x080027cc], 1",
            "jle 0x8002809",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "add edi, 1",
            "mov dword [rsp], edi",
            "mov r8d, 0xe4",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "movzx eax, word [rbx + 6]",
            "and eax, 0xfffffff7",
            "mov word [rbx + 6], ax",
            "mov edi, dword [r12 + 0xb4]",
            "test edi, edi",
            "mov edx, edi",
            "jne 0x8002642",
            "mov rcx, qword [rbx + 0x18]",
            "jmp 0x800265b"
        ]
    },
    "unk.0x80024f4": {
        "function_address": "0x080024f4",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x38",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r12, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x88]",
            "test eax, eax",
            "je 0x80023f2",
            "movzx eax, word [rbx + 6]",
            "test ax, ax",
            "je 0x80023da",
            "test al, 0x40",
            "je 0x80023f2",
            "lea rdi, [r12 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r13d, eax",
            "jne cryptodev_verbosity",
            "mov eax, dword [r12 + 0x38]",
            "test eax, eax",
            "je 0x800243d",
            "mov r9d, dword [rbx + 8]",
            "mov ecx, dword [r12 + 0x3c]",
            "xor edx, edx",
            "mov eax, r9d",
            "div ecx",
            "test edx, edx",
            "jne cryptodev_verbosity",
            "mov edx, dword [r12 + 0x48]",
            "cmp dword [rbx + 0x30], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x30]",
            "lea rdi, [r12 + 0x78]",
            "lea rsi, [rbx + 0x34]",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "mov edx, dword [rbx + 8]",
            "test edx, edx",
            "je 0x80024b7",
            "movzx eax, word [rbx + 6]",
            "test al, 8",
            "jne 0x8002528",
            "mov rcx, qword [rbx + 0x18]",
            "lea rax, [rbp - 0x28]",
            "mov rsi, qword [rbx + 0x10]",
            "mov r9, qword [rbx + 0x88]",
            "mov r8d, edx",
            "mov rdi, r12",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x30]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x90]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "jne cryptodev_verbosity",
            "movzx esi, word [rbx + 4]",
            "mov r8d, dword [rbx + 8]",
            "mov rdi, r12",
            "mov rcx, qword [rbp - 0x28]",
            "mov rdx, qword [rbp - 0x30]",
            "call sym.hash_n_crypt.isra.0",
            "mov rdi, r12",
            "mov r13d, eax",
            "call release_user_pages",
            "test r13d, r13d",
            "jne 0x800250a",
            "mov eax, dword [r12 + 0x38]",
            "test eax, eax",
            "jne 0x8002550",
            "mov eax, dword [r12 + 0x88]",
            "xor r13d, r13d",
            "test eax, eax",
            "je 0x800250a",
            "movzx eax, word [rbx + 6]",
            "test al, 2",
            "jne 0x80024e3",
            "test al, 1",
            "jne 0x8002580",
            "lea rsi, [rbx + 0x48]",
            "lea rdi, [r12 + 0x88]",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r13d, eax",
            "jne cryptodev_verbosity",
            "mov eax, dword [r12 + 0x8c]",
            "mov dword [rbx + 0x44], eax",
            "lea rdi, [r12 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x38",
            "mov eax, r13d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop rbp",
            "ret",
            "mov edi, dword [r12 + 0xb4]",
            "test edi, edi",
            "jne 0x800262f",
            "mov rsi, rbx",
            "mov rdi, r12",
            "call sym.__crypto_run_std",
            "mov r13d, eax",
            "jmp 0x80024b2",
            "mov edx, dword [r12 + 0x48]",
            "cmp dword [rbx + 0x30], edx",
            "lea rdi, [rbx + 0x34]",
            "cmovle edx, dword [rbx + 0x30]",
            "mov eax, 0x10",
            "lea rsi, [r12 + 0x78]",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "jmp 0x80024c4",
            "mov eax, dword [rbx + 8]",
            "test eax, eax",
            "jne 0x800250a",
            "jmp 0x80024e3",
            "cmp dword [0x08002593], 0",
            "jle 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xcd",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800250a",
            "cmp dword [0x080025d6], 0",
            "jg current_task",
            "mov r13d, 0xffffffea",
            "jmp 0x8002514",
            "cmp dword [0x080025ee], 0",
            "jle 0x80025dc",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xc6",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r13d, 0xffffffea",
            "call printk",
            "jmp 0x8002514",
            "mov r9, qword [rbx + 0x10]",
            "mov edx, edi",
            "lea rcx, [rdx - 1]",
            "test r9, rcx",
            "jne cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x18]",
            "sub rdx, 1",
            "test rcx, rdx",
            "jne cryptodev_verbosity",
            "test al, 8",
            "jne 0x8002538",
            "mov edx, dword [rbx + 8]",
            "jmp 0x8002454",
            "cmp dword [0x0800266a], 0",
            "js 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r13d",
            "mov r8d, 0x102",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800250a",
            "cmp dword [0x080026b0], 0",
            "jle 0x8002538",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xae",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002538",
            "cmp dword [0x080026f3], 0",
            "mov r13d, 0xffffffea",
            "jle 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov dword [rsp], ecx",
            "mov r8d, 0xd7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xbf",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80025dc",
            "cmp dword [0x08002775], 1",
            "jle 0x80027b9",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "add edi, 1",
            "mov dword [rsp], edi",
            "mov r9, rcx",
            "mov r8d, 0xea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "movzx eax, word [rbx + 6]",
            "mov rcx, qword [rbx + 0x18]",
            "and eax, 0xfffffff7",
            "mov word [rbx + 6], ax",
            "jmp 0x800265b",
            "cmp dword [0x080027cc], 1",
            "jle 0x8002809",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "add edi, 1",
            "mov dword [rsp], edi",
            "mov r8d, 0xe4",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "movzx eax, word [rbx + 6]",
            "and eax, 0xfffffff7",
            "mov word [rbx + 6], ax",
            "mov edi, dword [r12 + 0xb4]",
            "test edi, edi",
            "mov edx, edi",
            "jne 0x8002642",
            "mov rcx, qword [rbx + 0x18]",
            "jmp 0x800265b"
        ]
    },
    "unk.0x8002514": {
        "function_address": "0x08002514",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x38",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r12, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x88]",
            "test eax, eax",
            "je 0x80023f2",
            "movzx eax, word [rbx + 6]",
            "test ax, ax",
            "je 0x80023da",
            "test al, 0x40",
            "je 0x80023f2",
            "lea rdi, [r12 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r13d, eax",
            "jne cryptodev_verbosity",
            "mov eax, dword [r12 + 0x38]",
            "test eax, eax",
            "je 0x800243d",
            "mov r9d, dword [rbx + 8]",
            "mov ecx, dword [r12 + 0x3c]",
            "xor edx, edx",
            "mov eax, r9d",
            "div ecx",
            "test edx, edx",
            "jne cryptodev_verbosity",
            "mov edx, dword [r12 + 0x48]",
            "cmp dword [rbx + 0x30], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x30]",
            "lea rdi, [r12 + 0x78]",
            "lea rsi, [rbx + 0x34]",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "mov edx, dword [rbx + 8]",
            "test edx, edx",
            "je 0x80024b7",
            "movzx eax, word [rbx + 6]",
            "test al, 8",
            "jne 0x8002528",
            "mov rcx, qword [rbx + 0x18]",
            "lea rax, [rbp - 0x28]",
            "mov rsi, qword [rbx + 0x10]",
            "mov r9, qword [rbx + 0x88]",
            "mov r8d, edx",
            "mov rdi, r12",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x30]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x90]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "jne cryptodev_verbosity",
            "movzx esi, word [rbx + 4]",
            "mov r8d, dword [rbx + 8]",
            "mov rdi, r12",
            "mov rcx, qword [rbp - 0x28]",
            "mov rdx, qword [rbp - 0x30]",
            "call sym.hash_n_crypt.isra.0",
            "mov rdi, r12",
            "mov r13d, eax",
            "call release_user_pages",
            "test r13d, r13d",
            "jne 0x800250a",
            "mov eax, dword [r12 + 0x38]",
            "test eax, eax",
            "jne 0x8002550",
            "mov eax, dword [r12 + 0x88]",
            "xor r13d, r13d",
            "test eax, eax",
            "je 0x800250a",
            "movzx eax, word [rbx + 6]",
            "test al, 2",
            "jne 0x80024e3",
            "test al, 1",
            "jne 0x8002580",
            "lea rsi, [rbx + 0x48]",
            "lea rdi, [r12 + 0x88]",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r13d, eax",
            "jne cryptodev_verbosity",
            "mov eax, dword [r12 + 0x8c]",
            "mov dword [rbx + 0x44], eax",
            "lea rdi, [r12 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x38",
            "mov eax, r13d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop rbp",
            "ret",
            "mov edi, dword [r12 + 0xb4]",
            "test edi, edi",
            "jne 0x800262f",
            "mov rsi, rbx",
            "mov rdi, r12",
            "call sym.__crypto_run_std",
            "mov r13d, eax",
            "jmp 0x80024b2",
            "mov edx, dword [r12 + 0x48]",
            "cmp dword [rbx + 0x30], edx",
            "lea rdi, [rbx + 0x34]",
            "cmovle edx, dword [rbx + 0x30]",
            "mov eax, 0x10",
            "lea rsi, [r12 + 0x78]",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "jmp 0x80024c4",
            "mov eax, dword [rbx + 8]",
            "test eax, eax",
            "jne 0x800250a",
            "jmp 0x80024e3",
            "cmp dword [0x08002593], 0",
            "jle 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xcd",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800250a",
            "cmp dword [0x080025d6], 0",
            "jg current_task",
            "mov r13d, 0xffffffea",
            "jmp 0x8002514",
            "cmp dword [0x080025ee], 0",
            "jle 0x80025dc",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xc6",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r13d, 0xffffffea",
            "call printk",
            "jmp 0x8002514",
            "mov r9, qword [rbx + 0x10]",
            "mov edx, edi",
            "lea rcx, [rdx - 1]",
            "test r9, rcx",
            "jne cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x18]",
            "sub rdx, 1",
            "test rcx, rdx",
            "jne cryptodev_verbosity",
            "test al, 8",
            "jne 0x8002538",
            "mov edx, dword [rbx + 8]",
            "jmp 0x8002454",
            "cmp dword [0x0800266a], 0",
            "js 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r13d",
            "mov r8d, 0x102",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800250a",
            "cmp dword [0x080026b0], 0",
            "jle 0x8002538",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xae",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002538",
            "cmp dword [0x080026f3], 0",
            "mov r13d, 0xffffffea",
            "jle 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov dword [rsp], ecx",
            "mov r8d, 0xd7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xbf",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80025dc",
            "cmp dword [0x08002775], 1",
            "jle 0x80027b9",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "add edi, 1",
            "mov dword [rsp], edi",
            "mov r9, rcx",
            "mov r8d, 0xea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "movzx eax, word [rbx + 6]",
            "mov rcx, qword [rbx + 0x18]",
            "and eax, 0xfffffff7",
            "mov word [rbx + 6], ax",
            "jmp 0x800265b",
            "cmp dword [0x080027cc], 1",
            "jle 0x8002809",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "add edi, 1",
            "mov dword [rsp], edi",
            "mov r8d, 0xe4",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "movzx eax, word [rbx + 6]",
            "and eax, 0xfffffff7",
            "mov word [rbx + 6], ax",
            "mov edi, dword [r12 + 0xb4]",
            "test edi, edi",
            "mov edx, edi",
            "jne 0x8002642",
            "mov rcx, qword [rbx + 0x18]",
            "jmp 0x800265b"
        ]
    },
    "unk.0x800257a": {
        "function_address": "0x0800257a",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x38",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r12, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x88]",
            "test eax, eax",
            "je 0x80023f2",
            "movzx eax, word [rbx + 6]",
            "test ax, ax",
            "je 0x80023da",
            "test al, 0x40",
            "je 0x80023f2",
            "lea rdi, [r12 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r13d, eax",
            "jne cryptodev_verbosity",
            "mov eax, dword [r12 + 0x38]",
            "test eax, eax",
            "je 0x800243d",
            "mov r9d, dword [rbx + 8]",
            "mov ecx, dword [r12 + 0x3c]",
            "xor edx, edx",
            "mov eax, r9d",
            "div ecx",
            "test edx, edx",
            "jne cryptodev_verbosity",
            "mov edx, dword [r12 + 0x48]",
            "cmp dword [rbx + 0x30], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x30]",
            "lea rdi, [r12 + 0x78]",
            "lea rsi, [rbx + 0x34]",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "mov edx, dword [rbx + 8]",
            "test edx, edx",
            "je 0x80024b7",
            "movzx eax, word [rbx + 6]",
            "test al, 8",
            "jne 0x8002528",
            "mov rcx, qword [rbx + 0x18]",
            "lea rax, [rbp - 0x28]",
            "mov rsi, qword [rbx + 0x10]",
            "mov r9, qword [rbx + 0x88]",
            "mov r8d, edx",
            "mov rdi, r12",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x30]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x90]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "jne cryptodev_verbosity",
            "movzx esi, word [rbx + 4]",
            "mov r8d, dword [rbx + 8]",
            "mov rdi, r12",
            "mov rcx, qword [rbp - 0x28]",
            "mov rdx, qword [rbp - 0x30]",
            "call sym.hash_n_crypt.isra.0",
            "mov rdi, r12",
            "mov r13d, eax",
            "call release_user_pages",
            "test r13d, r13d",
            "jne 0x800250a",
            "mov eax, dword [r12 + 0x38]",
            "test eax, eax",
            "jne 0x8002550",
            "mov eax, dword [r12 + 0x88]",
            "xor r13d, r13d",
            "test eax, eax",
            "je 0x800250a",
            "movzx eax, word [rbx + 6]",
            "test al, 2",
            "jne 0x80024e3",
            "test al, 1",
            "jne 0x8002580",
            "lea rsi, [rbx + 0x48]",
            "lea rdi, [r12 + 0x88]",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r13d, eax",
            "jne cryptodev_verbosity",
            "mov eax, dword [r12 + 0x8c]",
            "mov dword [rbx + 0x44], eax",
            "lea rdi, [r12 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x38",
            "mov eax, r13d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop rbp",
            "ret",
            "mov edi, dword [r12 + 0xb4]",
            "test edi, edi",
            "jne 0x800262f",
            "mov rsi, rbx",
            "mov rdi, r12",
            "call sym.__crypto_run_std",
            "mov r13d, eax",
            "jmp 0x80024b2",
            "mov edx, dword [r12 + 0x48]",
            "cmp dword [rbx + 0x30], edx",
            "lea rdi, [rbx + 0x34]",
            "cmovle edx, dword [rbx + 0x30]",
            "mov eax, 0x10",
            "lea rsi, [r12 + 0x78]",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "jmp 0x80024c4",
            "mov eax, dword [rbx + 8]",
            "test eax, eax",
            "jne 0x800250a",
            "jmp 0x80024e3",
            "cmp dword [0x08002593], 0",
            "jle 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xcd",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800250a",
            "cmp dword [0x080025d6], 0",
            "jg current_task",
            "mov r13d, 0xffffffea",
            "jmp 0x8002514",
            "cmp dword [0x080025ee], 0",
            "jle 0x80025dc",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xc6",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r13d, 0xffffffea",
            "call printk",
            "jmp 0x8002514",
            "mov r9, qword [rbx + 0x10]",
            "mov edx, edi",
            "lea rcx, [rdx - 1]",
            "test r9, rcx",
            "jne cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x18]",
            "sub rdx, 1",
            "test rcx, rdx",
            "jne cryptodev_verbosity",
            "test al, 8",
            "jne 0x8002538",
            "mov edx, dword [rbx + 8]",
            "jmp 0x8002454",
            "cmp dword [0x0800266a], 0",
            "js 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r13d",
            "mov r8d, 0x102",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800250a",
            "cmp dword [0x080026b0], 0",
            "jle 0x8002538",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xae",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002538",
            "cmp dword [0x080026f3], 0",
            "mov r13d, 0xffffffea",
            "jle 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov dword [rsp], ecx",
            "mov r8d, 0xd7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xbf",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80025dc",
            "cmp dword [0x08002775], 1",
            "jle 0x80027b9",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "add edi, 1",
            "mov dword [rsp], edi",
            "mov r9, rcx",
            "mov r8d, 0xea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "movzx eax, word [rbx + 6]",
            "mov rcx, qword [rbx + 0x18]",
            "and eax, 0xfffffff7",
            "mov word [rbx + 6], ax",
            "jmp 0x800265b",
            "cmp dword [0x080027cc], 1",
            "jle 0x8002809",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "add edi, 1",
            "mov dword [rsp], edi",
            "mov r8d, 0xe4",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "movzx eax, word [rbx + 6]",
            "and eax, 0xfffffff7",
            "mov word [rbx + 6], ax",
            "mov edi, dword [r12 + 0xb4]",
            "test edi, edi",
            "mov edx, edi",
            "jne 0x8002642",
            "mov rcx, qword [rbx + 0x18]",
            "jmp 0x800265b"
        ]
    },
    "unk.0x80025ca": {
        "function_address": "0x080025ca",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x38",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r12, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x88]",
            "test eax, eax",
            "je 0x80023f2",
            "movzx eax, word [rbx + 6]",
            "test ax, ax",
            "je 0x80023da",
            "test al, 0x40",
            "je 0x80023f2",
            "lea rdi, [r12 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r13d, eax",
            "jne cryptodev_verbosity",
            "mov eax, dword [r12 + 0x38]",
            "test eax, eax",
            "je 0x800243d",
            "mov r9d, dword [rbx + 8]",
            "mov ecx, dword [r12 + 0x3c]",
            "xor edx, edx",
            "mov eax, r9d",
            "div ecx",
            "test edx, edx",
            "jne cryptodev_verbosity",
            "mov edx, dword [r12 + 0x48]",
            "cmp dword [rbx + 0x30], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x30]",
            "lea rdi, [r12 + 0x78]",
            "lea rsi, [rbx + 0x34]",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "mov edx, dword [rbx + 8]",
            "test edx, edx",
            "je 0x80024b7",
            "movzx eax, word [rbx + 6]",
            "test al, 8",
            "jne 0x8002528",
            "mov rcx, qword [rbx + 0x18]",
            "lea rax, [rbp - 0x28]",
            "mov rsi, qword [rbx + 0x10]",
            "mov r9, qword [rbx + 0x88]",
            "mov r8d, edx",
            "mov rdi, r12",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x30]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x90]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "jne cryptodev_verbosity",
            "movzx esi, word [rbx + 4]",
            "mov r8d, dword [rbx + 8]",
            "mov rdi, r12",
            "mov rcx, qword [rbp - 0x28]",
            "mov rdx, qword [rbp - 0x30]",
            "call sym.hash_n_crypt.isra.0",
            "mov rdi, r12",
            "mov r13d, eax",
            "call release_user_pages",
            "test r13d, r13d",
            "jne 0x800250a",
            "mov eax, dword [r12 + 0x38]",
            "test eax, eax",
            "jne 0x8002550",
            "mov eax, dword [r12 + 0x88]",
            "xor r13d, r13d",
            "test eax, eax",
            "je 0x800250a",
            "movzx eax, word [rbx + 6]",
            "test al, 2",
            "jne 0x80024e3",
            "test al, 1",
            "jne 0x8002580",
            "lea rsi, [rbx + 0x48]",
            "lea rdi, [r12 + 0x88]",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r13d, eax",
            "jne cryptodev_verbosity",
            "mov eax, dword [r12 + 0x8c]",
            "mov dword [rbx + 0x44], eax",
            "lea rdi, [r12 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x38",
            "mov eax, r13d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop rbp",
            "ret",
            "mov edi, dword [r12 + 0xb4]",
            "test edi, edi",
            "jne 0x800262f",
            "mov rsi, rbx",
            "mov rdi, r12",
            "call sym.__crypto_run_std",
            "mov r13d, eax",
            "jmp 0x80024b2",
            "mov edx, dword [r12 + 0x48]",
            "cmp dword [rbx + 0x30], edx",
            "lea rdi, [rbx + 0x34]",
            "cmovle edx, dword [rbx + 0x30]",
            "mov eax, 0x10",
            "lea rsi, [r12 + 0x78]",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "jmp 0x80024c4",
            "mov eax, dword [rbx + 8]",
            "test eax, eax",
            "jne 0x800250a",
            "jmp 0x80024e3",
            "cmp dword [0x08002593], 0",
            "jle 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xcd",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800250a",
            "cmp dword [0x080025d6], 0",
            "jg current_task",
            "mov r13d, 0xffffffea",
            "jmp 0x8002514",
            "cmp dword [0x080025ee], 0",
            "jle 0x80025dc",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xc6",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r13d, 0xffffffea",
            "call printk",
            "jmp 0x8002514",
            "mov r9, qword [rbx + 0x10]",
            "mov edx, edi",
            "lea rcx, [rdx - 1]",
            "test r9, rcx",
            "jne cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x18]",
            "sub rdx, 1",
            "test rcx, rdx",
            "jne cryptodev_verbosity",
            "test al, 8",
            "jne 0x8002538",
            "mov edx, dword [rbx + 8]",
            "jmp 0x8002454",
            "cmp dword [0x0800266a], 0",
            "js 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r13d",
            "mov r8d, 0x102",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800250a",
            "cmp dword [0x080026b0], 0",
            "jle 0x8002538",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xae",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002538",
            "cmp dword [0x080026f3], 0",
            "mov r13d, 0xffffffea",
            "jle 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov dword [rsp], ecx",
            "mov r8d, 0xd7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xbf",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80025dc",
            "cmp dword [0x08002775], 1",
            "jle 0x80027b9",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "add edi, 1",
            "mov dword [rsp], edi",
            "mov r9, rcx",
            "mov r8d, 0xea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "movzx eax, word [rbx + 6]",
            "mov rcx, qword [rbx + 0x18]",
            "and eax, 0xfffffff7",
            "mov word [rbx + 6], ax",
            "jmp 0x800265b",
            "cmp dword [0x080027cc], 1",
            "jle 0x8002809",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "add edi, 1",
            "mov dword [rsp], edi",
            "mov r8d, 0xe4",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "movzx eax, word [rbx + 6]",
            "and eax, 0xfffffff7",
            "mov word [rbx + 6], ax",
            "mov edi, dword [r12 + 0xb4]",
            "test edi, edi",
            "mov edx, edi",
            "jne 0x8002642",
            "mov rcx, qword [rbx + 0x18]",
            "jmp 0x800265b"
        ]
    },
    "unk.0x800262a": {
        "function_address": "0x0800262a",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x38",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r12, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x88]",
            "test eax, eax",
            "je 0x80023f2",
            "movzx eax, word [rbx + 6]",
            "test ax, ax",
            "je 0x80023da",
            "test al, 0x40",
            "je 0x80023f2",
            "lea rdi, [r12 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r13d, eax",
            "jne cryptodev_verbosity",
            "mov eax, dword [r12 + 0x38]",
            "test eax, eax",
            "je 0x800243d",
            "mov r9d, dword [rbx + 8]",
            "mov ecx, dword [r12 + 0x3c]",
            "xor edx, edx",
            "mov eax, r9d",
            "div ecx",
            "test edx, edx",
            "jne cryptodev_verbosity",
            "mov edx, dword [r12 + 0x48]",
            "cmp dword [rbx + 0x30], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x30]",
            "lea rdi, [r12 + 0x78]",
            "lea rsi, [rbx + 0x34]",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "mov edx, dword [rbx + 8]",
            "test edx, edx",
            "je 0x80024b7",
            "movzx eax, word [rbx + 6]",
            "test al, 8",
            "jne 0x8002528",
            "mov rcx, qword [rbx + 0x18]",
            "lea rax, [rbp - 0x28]",
            "mov rsi, qword [rbx + 0x10]",
            "mov r9, qword [rbx + 0x88]",
            "mov r8d, edx",
            "mov rdi, r12",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x30]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x90]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "jne cryptodev_verbosity",
            "movzx esi, word [rbx + 4]",
            "mov r8d, dword [rbx + 8]",
            "mov rdi, r12",
            "mov rcx, qword [rbp - 0x28]",
            "mov rdx, qword [rbp - 0x30]",
            "call sym.hash_n_crypt.isra.0",
            "mov rdi, r12",
            "mov r13d, eax",
            "call release_user_pages",
            "test r13d, r13d",
            "jne 0x800250a",
            "mov eax, dword [r12 + 0x38]",
            "test eax, eax",
            "jne 0x8002550",
            "mov eax, dword [r12 + 0x88]",
            "xor r13d, r13d",
            "test eax, eax",
            "je 0x800250a",
            "movzx eax, word [rbx + 6]",
            "test al, 2",
            "jne 0x80024e3",
            "test al, 1",
            "jne 0x8002580",
            "lea rsi, [rbx + 0x48]",
            "lea rdi, [r12 + 0x88]",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r13d, eax",
            "jne cryptodev_verbosity",
            "mov eax, dword [r12 + 0x8c]",
            "mov dword [rbx + 0x44], eax",
            "lea rdi, [r12 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x38",
            "mov eax, r13d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop rbp",
            "ret",
            "mov edi, dword [r12 + 0xb4]",
            "test edi, edi",
            "jne 0x800262f",
            "mov rsi, rbx",
            "mov rdi, r12",
            "call sym.__crypto_run_std",
            "mov r13d, eax",
            "jmp 0x80024b2",
            "mov edx, dword [r12 + 0x48]",
            "cmp dword [rbx + 0x30], edx",
            "lea rdi, [rbx + 0x34]",
            "cmovle edx, dword [rbx + 0x30]",
            "mov eax, 0x10",
            "lea rsi, [r12 + 0x78]",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "jmp 0x80024c4",
            "mov eax, dword [rbx + 8]",
            "test eax, eax",
            "jne 0x800250a",
            "jmp 0x80024e3",
            "cmp dword [0x08002593], 0",
            "jle 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xcd",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800250a",
            "cmp dword [0x080025d6], 0",
            "jg current_task",
            "mov r13d, 0xffffffea",
            "jmp 0x8002514",
            "cmp dword [0x080025ee], 0",
            "jle 0x80025dc",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xc6",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r13d, 0xffffffea",
            "call printk",
            "jmp 0x8002514",
            "mov r9, qword [rbx + 0x10]",
            "mov edx, edi",
            "lea rcx, [rdx - 1]",
            "test r9, rcx",
            "jne cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x18]",
            "sub rdx, 1",
            "test rcx, rdx",
            "jne cryptodev_verbosity",
            "test al, 8",
            "jne 0x8002538",
            "mov edx, dword [rbx + 8]",
            "jmp 0x8002454",
            "cmp dword [0x0800266a], 0",
            "js 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r13d",
            "mov r8d, 0x102",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800250a",
            "cmp dword [0x080026b0], 0",
            "jle 0x8002538",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xae",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002538",
            "cmp dword [0x080026f3], 0",
            "mov r13d, 0xffffffea",
            "jle 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov dword [rsp], ecx",
            "mov r8d, 0xd7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xbf",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80025dc",
            "cmp dword [0x08002775], 1",
            "jle 0x80027b9",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "add edi, 1",
            "mov dword [rsp], edi",
            "mov r9, rcx",
            "mov r8d, 0xea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "movzx eax, word [rbx + 6]",
            "mov rcx, qword [rbx + 0x18]",
            "and eax, 0xfffffff7",
            "mov word [rbx + 6], ax",
            "jmp 0x800265b",
            "cmp dword [0x080027cc], 1",
            "jle 0x8002809",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "add edi, 1",
            "mov dword [rsp], edi",
            "mov r8d, 0xe4",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "movzx eax, word [rbx + 6]",
            "and eax, 0xfffffff7",
            "mov word [rbx + 6], ax",
            "mov edi, dword [r12 + 0xb4]",
            "test edi, edi",
            "mov edx, edi",
            "jne 0x8002642",
            "mov rcx, qword [rbx + 0x18]",
            "jmp 0x800265b"
        ]
    },
    "unk.0x80026a4": {
        "function_address": "0x080026a4",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x38",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r12, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x88]",
            "test eax, eax",
            "je 0x80023f2",
            "movzx eax, word [rbx + 6]",
            "test ax, ax",
            "je 0x80023da",
            "test al, 0x40",
            "je 0x80023f2",
            "lea rdi, [r12 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r13d, eax",
            "jne cryptodev_verbosity",
            "mov eax, dword [r12 + 0x38]",
            "test eax, eax",
            "je 0x800243d",
            "mov r9d, dword [rbx + 8]",
            "mov ecx, dword [r12 + 0x3c]",
            "xor edx, edx",
            "mov eax, r9d",
            "div ecx",
            "test edx, edx",
            "jne cryptodev_verbosity",
            "mov edx, dword [r12 + 0x48]",
            "cmp dword [rbx + 0x30], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x30]",
            "lea rdi, [r12 + 0x78]",
            "lea rsi, [rbx + 0x34]",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "mov edx, dword [rbx + 8]",
            "test edx, edx",
            "je 0x80024b7",
            "movzx eax, word [rbx + 6]",
            "test al, 8",
            "jne 0x8002528",
            "mov rcx, qword [rbx + 0x18]",
            "lea rax, [rbp - 0x28]",
            "mov rsi, qword [rbx + 0x10]",
            "mov r9, qword [rbx + 0x88]",
            "mov r8d, edx",
            "mov rdi, r12",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x30]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x90]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "jne cryptodev_verbosity",
            "movzx esi, word [rbx + 4]",
            "mov r8d, dword [rbx + 8]",
            "mov rdi, r12",
            "mov rcx, qword [rbp - 0x28]",
            "mov rdx, qword [rbp - 0x30]",
            "call sym.hash_n_crypt.isra.0",
            "mov rdi, r12",
            "mov r13d, eax",
            "call release_user_pages",
            "test r13d, r13d",
            "jne 0x800250a",
            "mov eax, dword [r12 + 0x38]",
            "test eax, eax",
            "jne 0x8002550",
            "mov eax, dword [r12 + 0x88]",
            "xor r13d, r13d",
            "test eax, eax",
            "je 0x800250a",
            "movzx eax, word [rbx + 6]",
            "test al, 2",
            "jne 0x80024e3",
            "test al, 1",
            "jne 0x8002580",
            "lea rsi, [rbx + 0x48]",
            "lea rdi, [r12 + 0x88]",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r13d, eax",
            "jne cryptodev_verbosity",
            "mov eax, dword [r12 + 0x8c]",
            "mov dword [rbx + 0x44], eax",
            "lea rdi, [r12 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x38",
            "mov eax, r13d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop rbp",
            "ret",
            "mov edi, dword [r12 + 0xb4]",
            "test edi, edi",
            "jne 0x800262f",
            "mov rsi, rbx",
            "mov rdi, r12",
            "call sym.__crypto_run_std",
            "mov r13d, eax",
            "jmp 0x80024b2",
            "mov edx, dword [r12 + 0x48]",
            "cmp dword [rbx + 0x30], edx",
            "lea rdi, [rbx + 0x34]",
            "cmovle edx, dword [rbx + 0x30]",
            "mov eax, 0x10",
            "lea rsi, [r12 + 0x78]",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "jmp 0x80024c4",
            "mov eax, dword [rbx + 8]",
            "test eax, eax",
            "jne 0x800250a",
            "jmp 0x80024e3",
            "cmp dword [0x08002593], 0",
            "jle 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xcd",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800250a",
            "cmp dword [0x080025d6], 0",
            "jg current_task",
            "mov r13d, 0xffffffea",
            "jmp 0x8002514",
            "cmp dword [0x080025ee], 0",
            "jle 0x80025dc",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xc6",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r13d, 0xffffffea",
            "call printk",
            "jmp 0x8002514",
            "mov r9, qword [rbx + 0x10]",
            "mov edx, edi",
            "lea rcx, [rdx - 1]",
            "test r9, rcx",
            "jne cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x18]",
            "sub rdx, 1",
            "test rcx, rdx",
            "jne cryptodev_verbosity",
            "test al, 8",
            "jne 0x8002538",
            "mov edx, dword [rbx + 8]",
            "jmp 0x8002454",
            "cmp dword [0x0800266a], 0",
            "js 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r13d",
            "mov r8d, 0x102",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800250a",
            "cmp dword [0x080026b0], 0",
            "jle 0x8002538",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xae",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002538",
            "cmp dword [0x080026f3], 0",
            "mov r13d, 0xffffffea",
            "jle 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov dword [rsp], ecx",
            "mov r8d, 0xd7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xbf",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80025dc",
            "cmp dword [0x08002775], 1",
            "jle 0x80027b9",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "add edi, 1",
            "mov dword [rsp], edi",
            "mov r9, rcx",
            "mov r8d, 0xea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "movzx eax, word [rbx + 6]",
            "mov rcx, qword [rbx + 0x18]",
            "and eax, 0xfffffff7",
            "mov word [rbx + 6], ax",
            "jmp 0x800265b",
            "cmp dword [0x080027cc], 1",
            "jle 0x8002809",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "add edi, 1",
            "mov dword [rsp], edi",
            "mov r8d, 0xe4",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "movzx eax, word [rbx + 6]",
            "and eax, 0xfffffff7",
            "mov word [rbx + 6], ax",
            "mov edi, dword [r12 + 0xb4]",
            "test edi, edi",
            "mov edx, edi",
            "jne 0x8002642",
            "mov rcx, qword [rbx + 0x18]",
            "jmp 0x800265b"
        ]
    },
    "unk.0x80026e7": {
        "function_address": "0x080026e7",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x38",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r12, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x88]",
            "test eax, eax",
            "je 0x80023f2",
            "movzx eax, word [rbx + 6]",
            "test ax, ax",
            "je 0x80023da",
            "test al, 0x40",
            "je 0x80023f2",
            "lea rdi, [r12 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r13d, eax",
            "jne cryptodev_verbosity",
            "mov eax, dword [r12 + 0x38]",
            "test eax, eax",
            "je 0x800243d",
            "mov r9d, dword [rbx + 8]",
            "mov ecx, dword [r12 + 0x3c]",
            "xor edx, edx",
            "mov eax, r9d",
            "div ecx",
            "test edx, edx",
            "jne cryptodev_verbosity",
            "mov edx, dword [r12 + 0x48]",
            "cmp dword [rbx + 0x30], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x30]",
            "lea rdi, [r12 + 0x78]",
            "lea rsi, [rbx + 0x34]",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "mov edx, dword [rbx + 8]",
            "test edx, edx",
            "je 0x80024b7",
            "movzx eax, word [rbx + 6]",
            "test al, 8",
            "jne 0x8002528",
            "mov rcx, qword [rbx + 0x18]",
            "lea rax, [rbp - 0x28]",
            "mov rsi, qword [rbx + 0x10]",
            "mov r9, qword [rbx + 0x88]",
            "mov r8d, edx",
            "mov rdi, r12",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x30]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x90]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "jne cryptodev_verbosity",
            "movzx esi, word [rbx + 4]",
            "mov r8d, dword [rbx + 8]",
            "mov rdi, r12",
            "mov rcx, qword [rbp - 0x28]",
            "mov rdx, qword [rbp - 0x30]",
            "call sym.hash_n_crypt.isra.0",
            "mov rdi, r12",
            "mov r13d, eax",
            "call release_user_pages",
            "test r13d, r13d",
            "jne 0x800250a",
            "mov eax, dword [r12 + 0x38]",
            "test eax, eax",
            "jne 0x8002550",
            "mov eax, dword [r12 + 0x88]",
            "xor r13d, r13d",
            "test eax, eax",
            "je 0x800250a",
            "movzx eax, word [rbx + 6]",
            "test al, 2",
            "jne 0x80024e3",
            "test al, 1",
            "jne 0x8002580",
            "lea rsi, [rbx + 0x48]",
            "lea rdi, [r12 + 0x88]",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r13d, eax",
            "jne cryptodev_verbosity",
            "mov eax, dword [r12 + 0x8c]",
            "mov dword [rbx + 0x44], eax",
            "lea rdi, [r12 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x38",
            "mov eax, r13d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop rbp",
            "ret",
            "mov edi, dword [r12 + 0xb4]",
            "test edi, edi",
            "jne 0x800262f",
            "mov rsi, rbx",
            "mov rdi, r12",
            "call sym.__crypto_run_std",
            "mov r13d, eax",
            "jmp 0x80024b2",
            "mov edx, dword [r12 + 0x48]",
            "cmp dword [rbx + 0x30], edx",
            "lea rdi, [rbx + 0x34]",
            "cmovle edx, dword [rbx + 0x30]",
            "mov eax, 0x10",
            "lea rsi, [r12 + 0x78]",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "jmp 0x80024c4",
            "mov eax, dword [rbx + 8]",
            "test eax, eax",
            "jne 0x800250a",
            "jmp 0x80024e3",
            "cmp dword [0x08002593], 0",
            "jle 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xcd",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800250a",
            "cmp dword [0x080025d6], 0",
            "jg current_task",
            "mov r13d, 0xffffffea",
            "jmp 0x8002514",
            "cmp dword [0x080025ee], 0",
            "jle 0x80025dc",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xc6",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r13d, 0xffffffea",
            "call printk",
            "jmp 0x8002514",
            "mov r9, qword [rbx + 0x10]",
            "mov edx, edi",
            "lea rcx, [rdx - 1]",
            "test r9, rcx",
            "jne cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x18]",
            "sub rdx, 1",
            "test rcx, rdx",
            "jne cryptodev_verbosity",
            "test al, 8",
            "jne 0x8002538",
            "mov edx, dword [rbx + 8]",
            "jmp 0x8002454",
            "cmp dword [0x0800266a], 0",
            "js 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r13d",
            "mov r8d, 0x102",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800250a",
            "cmp dword [0x080026b0], 0",
            "jle 0x8002538",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xae",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002538",
            "cmp dword [0x080026f3], 0",
            "mov r13d, 0xffffffea",
            "jle 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov dword [rsp], ecx",
            "mov r8d, 0xd7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xbf",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80025dc",
            "cmp dword [0x08002775], 1",
            "jle 0x80027b9",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "add edi, 1",
            "mov dword [rsp], edi",
            "mov r9, rcx",
            "mov r8d, 0xea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "movzx eax, word [rbx + 6]",
            "mov rcx, qword [rbx + 0x18]",
            "and eax, 0xfffffff7",
            "mov word [rbx + 6], ax",
            "jmp 0x800265b",
            "cmp dword [0x080027cc], 1",
            "jle 0x8002809",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "add edi, 1",
            "mov dword [rsp], edi",
            "mov r8d, 0xe4",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "movzx eax, word [rbx + 6]",
            "and eax, 0xfffffff7",
            "mov word [rbx + 6], ax",
            "mov edi, dword [r12 + 0xb4]",
            "test edi, edi",
            "mov edx, edi",
            "jne 0x8002642",
            "mov rcx, qword [rbx + 0x18]",
            "jmp 0x800265b"
        ]
    },
    "unk.0x8002733": {
        "function_address": "0x08002733",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x38",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r12, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x88]",
            "test eax, eax",
            "je 0x80023f2",
            "movzx eax, word [rbx + 6]",
            "test ax, ax",
            "je 0x80023da",
            "test al, 0x40",
            "je 0x80023f2",
            "lea rdi, [r12 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r13d, eax",
            "jne cryptodev_verbosity",
            "mov eax, dword [r12 + 0x38]",
            "test eax, eax",
            "je 0x800243d",
            "mov r9d, dword [rbx + 8]",
            "mov ecx, dword [r12 + 0x3c]",
            "xor edx, edx",
            "mov eax, r9d",
            "div ecx",
            "test edx, edx",
            "jne cryptodev_verbosity",
            "mov edx, dword [r12 + 0x48]",
            "cmp dword [rbx + 0x30], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x30]",
            "lea rdi, [r12 + 0x78]",
            "lea rsi, [rbx + 0x34]",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "mov edx, dword [rbx + 8]",
            "test edx, edx",
            "je 0x80024b7",
            "movzx eax, word [rbx + 6]",
            "test al, 8",
            "jne 0x8002528",
            "mov rcx, qword [rbx + 0x18]",
            "lea rax, [rbp - 0x28]",
            "mov rsi, qword [rbx + 0x10]",
            "mov r9, qword [rbx + 0x88]",
            "mov r8d, edx",
            "mov rdi, r12",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x30]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x90]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "jne cryptodev_verbosity",
            "movzx esi, word [rbx + 4]",
            "mov r8d, dword [rbx + 8]",
            "mov rdi, r12",
            "mov rcx, qword [rbp - 0x28]",
            "mov rdx, qword [rbp - 0x30]",
            "call sym.hash_n_crypt.isra.0",
            "mov rdi, r12",
            "mov r13d, eax",
            "call release_user_pages",
            "test r13d, r13d",
            "jne 0x800250a",
            "mov eax, dword [r12 + 0x38]",
            "test eax, eax",
            "jne 0x8002550",
            "mov eax, dword [r12 + 0x88]",
            "xor r13d, r13d",
            "test eax, eax",
            "je 0x800250a",
            "movzx eax, word [rbx + 6]",
            "test al, 2",
            "jne 0x80024e3",
            "test al, 1",
            "jne 0x8002580",
            "lea rsi, [rbx + 0x48]",
            "lea rdi, [r12 + 0x88]",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r13d, eax",
            "jne cryptodev_verbosity",
            "mov eax, dword [r12 + 0x8c]",
            "mov dword [rbx + 0x44], eax",
            "lea rdi, [r12 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x38",
            "mov eax, r13d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop rbp",
            "ret",
            "mov edi, dword [r12 + 0xb4]",
            "test edi, edi",
            "jne 0x800262f",
            "mov rsi, rbx",
            "mov rdi, r12",
            "call sym.__crypto_run_std",
            "mov r13d, eax",
            "jmp 0x80024b2",
            "mov edx, dword [r12 + 0x48]",
            "cmp dword [rbx + 0x30], edx",
            "lea rdi, [rbx + 0x34]",
            "cmovle edx, dword [rbx + 0x30]",
            "mov eax, 0x10",
            "lea rsi, [r12 + 0x78]",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "jmp 0x80024c4",
            "mov eax, dword [rbx + 8]",
            "test eax, eax",
            "jne 0x800250a",
            "jmp 0x80024e3",
            "cmp dword [0x08002593], 0",
            "jle 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xcd",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800250a",
            "cmp dword [0x080025d6], 0",
            "jg current_task",
            "mov r13d, 0xffffffea",
            "jmp 0x8002514",
            "cmp dword [0x080025ee], 0",
            "jle 0x80025dc",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xc6",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r13d, 0xffffffea",
            "call printk",
            "jmp 0x8002514",
            "mov r9, qword [rbx + 0x10]",
            "mov edx, edi",
            "lea rcx, [rdx - 1]",
            "test r9, rcx",
            "jne cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x18]",
            "sub rdx, 1",
            "test rcx, rdx",
            "jne cryptodev_verbosity",
            "test al, 8",
            "jne 0x8002538",
            "mov edx, dword [rbx + 8]",
            "jmp 0x8002454",
            "cmp dword [0x0800266a], 0",
            "js 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r13d",
            "mov r8d, 0x102",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800250a",
            "cmp dword [0x080026b0], 0",
            "jle 0x8002538",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xae",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002538",
            "cmp dword [0x080026f3], 0",
            "mov r13d, 0xffffffea",
            "jle 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov dword [rsp], ecx",
            "mov r8d, 0xd7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xbf",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80025dc",
            "cmp dword [0x08002775], 1",
            "jle 0x80027b9",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "add edi, 1",
            "mov dword [rsp], edi",
            "mov r9, rcx",
            "mov r8d, 0xea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "movzx eax, word [rbx + 6]",
            "mov rcx, qword [rbx + 0x18]",
            "and eax, 0xfffffff7",
            "mov word [rbx + 6], ax",
            "jmp 0x800265b",
            "cmp dword [0x080027cc], 1",
            "jle 0x8002809",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "add edi, 1",
            "mov dword [rsp], edi",
            "mov r8d, 0xe4",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "movzx eax, word [rbx + 6]",
            "and eax, 0xfffffff7",
            "mov word [rbx + 6], ax",
            "mov edi, dword [r12 + 0xb4]",
            "test edi, edi",
            "mov edx, edi",
            "jne 0x8002642",
            "mov rcx, qword [rbx + 0x18]",
            "jmp 0x800265b"
        ]
    },
    "unk.0x8002769": {
        "function_address": "0x08002769",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x38",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r12, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x88]",
            "test eax, eax",
            "je 0x80023f2",
            "movzx eax, word [rbx + 6]",
            "test ax, ax",
            "je 0x80023da",
            "test al, 0x40",
            "je 0x80023f2",
            "lea rdi, [r12 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r13d, eax",
            "jne cryptodev_verbosity",
            "mov eax, dword [r12 + 0x38]",
            "test eax, eax",
            "je 0x800243d",
            "mov r9d, dword [rbx + 8]",
            "mov ecx, dword [r12 + 0x3c]",
            "xor edx, edx",
            "mov eax, r9d",
            "div ecx",
            "test edx, edx",
            "jne cryptodev_verbosity",
            "mov edx, dword [r12 + 0x48]",
            "cmp dword [rbx + 0x30], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x30]",
            "lea rdi, [r12 + 0x78]",
            "lea rsi, [rbx + 0x34]",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "mov edx, dword [rbx + 8]",
            "test edx, edx",
            "je 0x80024b7",
            "movzx eax, word [rbx + 6]",
            "test al, 8",
            "jne 0x8002528",
            "mov rcx, qword [rbx + 0x18]",
            "lea rax, [rbp - 0x28]",
            "mov rsi, qword [rbx + 0x10]",
            "mov r9, qword [rbx + 0x88]",
            "mov r8d, edx",
            "mov rdi, r12",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x30]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x90]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "jne cryptodev_verbosity",
            "movzx esi, word [rbx + 4]",
            "mov r8d, dword [rbx + 8]",
            "mov rdi, r12",
            "mov rcx, qword [rbp - 0x28]",
            "mov rdx, qword [rbp - 0x30]",
            "call sym.hash_n_crypt.isra.0",
            "mov rdi, r12",
            "mov r13d, eax",
            "call release_user_pages",
            "test r13d, r13d",
            "jne 0x800250a",
            "mov eax, dword [r12 + 0x38]",
            "test eax, eax",
            "jne 0x8002550",
            "mov eax, dword [r12 + 0x88]",
            "xor r13d, r13d",
            "test eax, eax",
            "je 0x800250a",
            "movzx eax, word [rbx + 6]",
            "test al, 2",
            "jne 0x80024e3",
            "test al, 1",
            "jne 0x8002580",
            "lea rsi, [rbx + 0x48]",
            "lea rdi, [r12 + 0x88]",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r13d, eax",
            "jne cryptodev_verbosity",
            "mov eax, dword [r12 + 0x8c]",
            "mov dword [rbx + 0x44], eax",
            "lea rdi, [r12 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x38",
            "mov eax, r13d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop rbp",
            "ret",
            "mov edi, dword [r12 + 0xb4]",
            "test edi, edi",
            "jne 0x800262f",
            "mov rsi, rbx",
            "mov rdi, r12",
            "call sym.__crypto_run_std",
            "mov r13d, eax",
            "jmp 0x80024b2",
            "mov edx, dword [r12 + 0x48]",
            "cmp dword [rbx + 0x30], edx",
            "lea rdi, [rbx + 0x34]",
            "cmovle edx, dword [rbx + 0x30]",
            "mov eax, 0x10",
            "lea rsi, [r12 + 0x78]",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "jmp 0x80024c4",
            "mov eax, dword [rbx + 8]",
            "test eax, eax",
            "jne 0x800250a",
            "jmp 0x80024e3",
            "cmp dword [0x08002593], 0",
            "jle 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xcd",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800250a",
            "cmp dword [0x080025d6], 0",
            "jg current_task",
            "mov r13d, 0xffffffea",
            "jmp 0x8002514",
            "cmp dword [0x080025ee], 0",
            "jle 0x80025dc",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xc6",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r13d, 0xffffffea",
            "call printk",
            "jmp 0x8002514",
            "mov r9, qword [rbx + 0x10]",
            "mov edx, edi",
            "lea rcx, [rdx - 1]",
            "test r9, rcx",
            "jne cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x18]",
            "sub rdx, 1",
            "test rcx, rdx",
            "jne cryptodev_verbosity",
            "test al, 8",
            "jne 0x8002538",
            "mov edx, dword [rbx + 8]",
            "jmp 0x8002454",
            "cmp dword [0x0800266a], 0",
            "js 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r13d",
            "mov r8d, 0x102",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800250a",
            "cmp dword [0x080026b0], 0",
            "jle 0x8002538",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xae",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002538",
            "cmp dword [0x080026f3], 0",
            "mov r13d, 0xffffffea",
            "jle 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov dword [rsp], ecx",
            "mov r8d, 0xd7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xbf",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80025dc",
            "cmp dword [0x08002775], 1",
            "jle 0x80027b9",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "add edi, 1",
            "mov dword [rsp], edi",
            "mov r9, rcx",
            "mov r8d, 0xea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "movzx eax, word [rbx + 6]",
            "mov rcx, qword [rbx + 0x18]",
            "and eax, 0xfffffff7",
            "mov word [rbx + 6], ax",
            "jmp 0x800265b",
            "cmp dword [0x080027cc], 1",
            "jle 0x8002809",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "add edi, 1",
            "mov dword [rsp], edi",
            "mov r8d, 0xe4",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "movzx eax, word [rbx + 6]",
            "and eax, 0xfffffff7",
            "mov word [rbx + 6], ax",
            "mov edi, dword [r12 + 0xb4]",
            "test edi, edi",
            "mov edx, edi",
            "jne 0x8002642",
            "mov rcx, qword [rbx + 0x18]",
            "jmp 0x800265b"
        ]
    },
    "unk.0x80027b1": {
        "function_address": "0x080027b1",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x38",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r12, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x88]",
            "test eax, eax",
            "je 0x80023f2",
            "movzx eax, word [rbx + 6]",
            "test ax, ax",
            "je 0x80023da",
            "test al, 0x40",
            "je 0x80023f2",
            "lea rdi, [r12 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r13d, eax",
            "jne cryptodev_verbosity",
            "mov eax, dword [r12 + 0x38]",
            "test eax, eax",
            "je 0x800243d",
            "mov r9d, dword [rbx + 8]",
            "mov ecx, dword [r12 + 0x3c]",
            "xor edx, edx",
            "mov eax, r9d",
            "div ecx",
            "test edx, edx",
            "jne cryptodev_verbosity",
            "mov edx, dword [r12 + 0x48]",
            "cmp dword [rbx + 0x30], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x30]",
            "lea rdi, [r12 + 0x78]",
            "lea rsi, [rbx + 0x34]",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "mov edx, dword [rbx + 8]",
            "test edx, edx",
            "je 0x80024b7",
            "movzx eax, word [rbx + 6]",
            "test al, 8",
            "jne 0x8002528",
            "mov rcx, qword [rbx + 0x18]",
            "lea rax, [rbp - 0x28]",
            "mov rsi, qword [rbx + 0x10]",
            "mov r9, qword [rbx + 0x88]",
            "mov r8d, edx",
            "mov rdi, r12",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x30]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x90]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "jne cryptodev_verbosity",
            "movzx esi, word [rbx + 4]",
            "mov r8d, dword [rbx + 8]",
            "mov rdi, r12",
            "mov rcx, qword [rbp - 0x28]",
            "mov rdx, qword [rbp - 0x30]",
            "call sym.hash_n_crypt.isra.0",
            "mov rdi, r12",
            "mov r13d, eax",
            "call release_user_pages",
            "test r13d, r13d",
            "jne 0x800250a",
            "mov eax, dword [r12 + 0x38]",
            "test eax, eax",
            "jne 0x8002550",
            "mov eax, dword [r12 + 0x88]",
            "xor r13d, r13d",
            "test eax, eax",
            "je 0x800250a",
            "movzx eax, word [rbx + 6]",
            "test al, 2",
            "jne 0x80024e3",
            "test al, 1",
            "jne 0x8002580",
            "lea rsi, [rbx + 0x48]",
            "lea rdi, [r12 + 0x88]",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r13d, eax",
            "jne cryptodev_verbosity",
            "mov eax, dword [r12 + 0x8c]",
            "mov dword [rbx + 0x44], eax",
            "lea rdi, [r12 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x38",
            "mov eax, r13d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop rbp",
            "ret",
            "mov edi, dword [r12 + 0xb4]",
            "test edi, edi",
            "jne 0x800262f",
            "mov rsi, rbx",
            "mov rdi, r12",
            "call sym.__crypto_run_std",
            "mov r13d, eax",
            "jmp 0x80024b2",
            "mov edx, dword [r12 + 0x48]",
            "cmp dword [rbx + 0x30], edx",
            "lea rdi, [rbx + 0x34]",
            "cmovle edx, dword [rbx + 0x30]",
            "mov eax, 0x10",
            "lea rsi, [r12 + 0x78]",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "jmp 0x80024c4",
            "mov eax, dword [rbx + 8]",
            "test eax, eax",
            "jne 0x800250a",
            "jmp 0x80024e3",
            "cmp dword [0x08002593], 0",
            "jle 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xcd",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800250a",
            "cmp dword [0x080025d6], 0",
            "jg current_task",
            "mov r13d, 0xffffffea",
            "jmp 0x8002514",
            "cmp dword [0x080025ee], 0",
            "jle 0x80025dc",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xc6",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r13d, 0xffffffea",
            "call printk",
            "jmp 0x8002514",
            "mov r9, qword [rbx + 0x10]",
            "mov edx, edi",
            "lea rcx, [rdx - 1]",
            "test r9, rcx",
            "jne cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x18]",
            "sub rdx, 1",
            "test rcx, rdx",
            "jne cryptodev_verbosity",
            "test al, 8",
            "jne 0x8002538",
            "mov edx, dword [rbx + 8]",
            "jmp 0x8002454",
            "cmp dword [0x0800266a], 0",
            "js 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r13d",
            "mov r8d, 0x102",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800250a",
            "cmp dword [0x080026b0], 0",
            "jle 0x8002538",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xae",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002538",
            "cmp dword [0x080026f3], 0",
            "mov r13d, 0xffffffea",
            "jle 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov dword [rsp], ecx",
            "mov r8d, 0xd7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xbf",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80025dc",
            "cmp dword [0x08002775], 1",
            "jle 0x80027b9",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "add edi, 1",
            "mov dword [rsp], edi",
            "mov r9, rcx",
            "mov r8d, 0xea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "movzx eax, word [rbx + 6]",
            "mov rcx, qword [rbx + 0x18]",
            "and eax, 0xfffffff7",
            "mov word [rbx + 6], ax",
            "jmp 0x800265b",
            "cmp dword [0x080027cc], 1",
            "jle 0x8002809",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "add edi, 1",
            "mov dword [rsp], edi",
            "mov r8d, 0xe4",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "movzx eax, word [rbx + 6]",
            "and eax, 0xfffffff7",
            "mov word [rbx + 6], ax",
            "mov edi, dword [r12 + 0xb4]",
            "test edi, edi",
            "mov edx, edi",
            "jne 0x8002642",
            "mov rcx, qword [rbx + 0x18]",
            "jmp 0x800265b"
        ]
    },
    "unk.0x8002805": {
        "function_address": "0x08002805",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r13",
            "push r12",
            "push rbx",
            "mov rbx, rsi",
            "sub rsp, 0x38",
            "movzx r9d, word [rsi + 4]",
            "cmp r9w, 1",
            "ja cryptodev_verbosity",
            "mov esi, dword [rsi]",
            "call crypto_get_session_by_sid",
            "test rax, rax",
            "mov r12, rax",
            "je cryptodev_verbosity",
            "mov eax, dword [rax + 0x88]",
            "test eax, eax",
            "je 0x80023f2",
            "movzx eax, word [rbx + 6]",
            "test ax, ax",
            "je 0x80023da",
            "test al, 0x40",
            "je 0x80023f2",
            "lea rdi, [r12 + 0x88]",
            "call cryptodev_hash_reset",
            "test eax, eax",
            "mov r13d, eax",
            "jne cryptodev_verbosity",
            "mov eax, dword [r12 + 0x38]",
            "test eax, eax",
            "je 0x800243d",
            "mov r9d, dword [rbx + 8]",
            "mov ecx, dword [r12 + 0x3c]",
            "xor edx, edx",
            "mov eax, r9d",
            "div ecx",
            "test edx, edx",
            "jne cryptodev_verbosity",
            "mov edx, dword [r12 + 0x48]",
            "cmp dword [rbx + 0x30], edx",
            "mov eax, 0x10",
            "cmovle edx, dword [rbx + 0x30]",
            "lea rdi, [r12 + 0x78]",
            "lea rsi, [rbx + 0x34]",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "mov edx, dword [rbx + 8]",
            "test edx, edx",
            "je 0x80024b7",
            "movzx eax, word [rbx + 6]",
            "test al, 8",
            "jne 0x8002528",
            "mov rcx, qword [rbx + 0x18]",
            "lea rax, [rbp - 0x28]",
            "mov rsi, qword [rbx + 0x10]",
            "mov r9, qword [rbx + 0x88]",
            "mov r8d, edx",
            "mov rdi, r12",
            "mov qword [rsp + 0x10], rax",
            "lea rax, [rbp - 0x30]",
            "mov qword [rsp + 8], rax",
            "mov rax, qword [rbx + 0x90]",
            "mov qword [rsp], rax",
            "call get_userbuf",
            "test eax, eax",
            "jne cryptodev_verbosity",
            "movzx esi, word [rbx + 4]",
            "mov r8d, dword [rbx + 8]",
            "mov rdi, r12",
            "mov rcx, qword [rbp - 0x28]",
            "mov rdx, qword [rbp - 0x30]",
            "call sym.hash_n_crypt.isra.0",
            "mov rdi, r12",
            "mov r13d, eax",
            "call release_user_pages",
            "test r13d, r13d",
            "jne 0x800250a",
            "mov eax, dword [r12 + 0x38]",
            "test eax, eax",
            "jne 0x8002550",
            "mov eax, dword [r12 + 0x88]",
            "xor r13d, r13d",
            "test eax, eax",
            "je 0x800250a",
            "movzx eax, word [rbx + 6]",
            "test al, 2",
            "jne 0x80024e3",
            "test al, 1",
            "jne 0x8002580",
            "lea rsi, [rbx + 0x48]",
            "lea rdi, [r12 + 0x88]",
            "call cryptodev_hash_final",
            "test eax, eax",
            "mov r13d, eax",
            "jne cryptodev_verbosity",
            "mov eax, dword [r12 + 0x8c]",
            "mov dword [rbx + 0x44], eax",
            "lea rdi, [r12 + 0x10]",
            "call mutex_unlock",
            "add rsp, 0x38",
            "mov eax, r13d",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop rbp",
            "ret",
            "mov edi, dword [r12 + 0xb4]",
            "test edi, edi",
            "jne 0x800262f",
            "mov rsi, rbx",
            "mov rdi, r12",
            "call sym.__crypto_run_std",
            "mov r13d, eax",
            "jmp 0x80024b2",
            "mov edx, dword [r12 + 0x48]",
            "cmp dword [rbx + 0x30], edx",
            "lea rdi, [rbx + 0x34]",
            "cmovle edx, dword [rbx + 0x30]",
            "mov eax, 0x10",
            "lea rsi, [r12 + 0x78]",
            "movsxd rdx, edx",
            "cmp rdx, 0x10",
            "cmova rdx, rax",
            "call memcpy",
            "jmp 0x80024c4",
            "mov eax, dword [rbx + 8]",
            "test eax, eax",
            "jne 0x800250a",
            "jmp 0x80024e3",
            "cmp dword [0x08002593], 0",
            "jle 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xcd",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800250a",
            "cmp dword [0x080025d6], 0",
            "jg current_task",
            "mov r13d, 0xffffffea",
            "jmp 0x8002514",
            "cmp dword [0x080025ee], 0",
            "jle 0x80025dc",
            "mov rax, qword gs:[0]",
            "mov r9d, dword [rbx]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xc6",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "mov r13d, 0xffffffea",
            "call printk",
            "jmp 0x8002514",
            "mov r9, qword [rbx + 0x10]",
            "mov edx, edi",
            "lea rcx, [rdx - 1]",
            "test r9, rcx",
            "jne cryptodev_verbosity",
            "mov rcx, qword [rbx + 0x18]",
            "sub rdx, 1",
            "test rcx, rdx",
            "jne cryptodev_verbosity",
            "test al, 8",
            "jne 0x8002538",
            "mov edx, dword [rbx + 8]",
            "jmp 0x8002454",
            "cmp dword [0x0800266a], 0",
            "js 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r9d, r13d",
            "mov r8d, 0x102",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800250a",
            "cmp dword [0x080026b0], 0",
            "jle 0x8002538",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xae",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x8002538",
            "cmp dword [0x080026f3], 0",
            "mov r13d, 0xffffffea",
            "jle 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov dword [rsp], ecx",
            "mov r8d, 0xd7",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x800250a",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "mov r8d, 0xbf",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "jmp 0x80025dc",
            "cmp dword [0x08002775], 1",
            "jle 0x80027b9",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "add edi, 1",
            "mov dword [rsp], edi",
            "mov r9, rcx",
            "mov r8d, 0xea",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "movzx eax, word [rbx + 6]",
            "mov rcx, qword [rbx + 0x18]",
            "and eax, 0xfffffff7",
            "mov word [rbx + 6], ax",
            "jmp 0x800265b",
            "cmp dword [0x080027cc], 1",
            "jle 0x8002809",
            "mov rax, qword gs:[0]",
            "mov edx, dword [rax + 0x318]",
            "lea rsi, [rax + 0x4b8]",
            "add edi, 1",
            "mov dword [rsp], edi",
            "mov r8d, 0xe4",
            "mov rcx, 0",
            "mov rdi, 0",
            "xor eax, eax",
            "call printk",
            "movzx eax, word [rbx + 6]",
            "and eax, 0xfffffff7",
            "mov word [rbx + 6], ax",
            "mov edi, dword [r12 + 0xb4]",
            "test edi, edi",
            "mov edx, edi",
            "jne 0x8002642",
            "mov rcx, qword [rbx + 0x18]",
            "jmp 0x800265b"
        ]
    },
    "sym.cryptodev_cipher_deinit": {
        "function_address": "0x08002ce0",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push rbx",
            "mov rbx, rdi",
            "sub rsp, 8",
            "mov ecx, dword [rdi]",
            "test ecx, ecx",
            "je 0x8002d27",
            "mov edx, dword [rdi + 8]",
            "test edx, edx",
            "je 0x8002d30",
            "mov rdi, qword [rdi + 0x30]",
            "test rdi, rdi",
            "je 0x8002d07",
            "call kzfree",
            "mov rdi, qword [rbx + 0x28]",
            "test rdi, rdi",
            "je 0x8002d18",
            "mov rsi, rdi",
            "call crypto_destroy_tfm",
            "mov rdi, qword [rbx + 0x38]",
            "call kfree",
            "mov dword [rbx], 0",
            "add rsp, 8",
            "pop rbx",
            "pop rbp",
            "ret",
            "mov rdi, qword [rdi + 0x20]",
            "test rdi, rdi",
            "je 0x8002d3e",
            "call kzfree",
            "mov rdi, qword [rbx + 0x18]",
            "test rdi, rdi",
            "jne 0x8002d10",
            "jmp 0x8002d18"
        ]
    },
    "unk.0x8002d07": {
        "function_address": "0x08002d07",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push rbx",
            "mov rbx, rdi",
            "sub rsp, 8",
            "mov ecx, dword [rdi]",
            "test ecx, ecx",
            "je 0x8002d27",
            "mov edx, dword [rdi + 8]",
            "test edx, edx",
            "je 0x8002d30",
            "mov rdi, qword [rdi + 0x30]",
            "test rdi, rdi",
            "je 0x8002d07",
            "call kzfree",
            "mov rdi, qword [rbx + 0x28]",
            "test rdi, rdi",
            "je 0x8002d18",
            "mov rsi, rdi",
            "call crypto_destroy_tfm",
            "mov rdi, qword [rbx + 0x38]",
            "call kfree",
            "mov dword [rbx], 0",
            "add rsp, 8",
            "pop rbx",
            "pop rbp",
            "ret",
            "mov rdi, qword [rdi + 0x20]",
            "test rdi, rdi",
            "je 0x8002d3e",
            "call kzfree",
            "mov rdi, qword [rbx + 0x18]",
            "test rdi, rdi",
            "jne 0x8002d10",
            "jmp 0x8002d18"
        ]
    },
    "unk.0x8002d18": {
        "function_address": "0x08002d18",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push rbx",
            "mov rbx, rdi",
            "sub rsp, 8",
            "mov ecx, dword [rdi]",
            "test ecx, ecx",
            "je 0x8002d27",
            "mov edx, dword [rdi + 8]",
            "test edx, edx",
            "je 0x8002d30",
            "mov rdi, qword [rdi + 0x30]",
            "test rdi, rdi",
            "je 0x8002d07",
            "call kzfree",
            "mov rdi, qword [rbx + 0x28]",
            "test rdi, rdi",
            "je 0x8002d18",
            "mov rsi, rdi",
            "call crypto_destroy_tfm",
            "mov rdi, qword [rbx + 0x38]",
            "call kfree",
            "mov dword [rbx], 0",
            "add rsp, 8",
            "pop rbx",
            "pop rbp",
            "ret",
            "mov rdi, qword [rdi + 0x20]",
            "test rdi, rdi",
            "je 0x8002d3e",
            "call kzfree",
            "mov rdi, qword [rbx + 0x18]",
            "test rdi, rdi",
            "jne 0x8002d10",
            "jmp 0x8002d18"
        ]
    },
    "unk.0x8002d21": {
        "function_address": "0x08002d21",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push rbx",
            "mov rbx, rdi",
            "sub rsp, 8",
            "mov ecx, dword [rdi]",
            "test ecx, ecx",
            "je 0x8002d27",
            "mov edx, dword [rdi + 8]",
            "test edx, edx",
            "je 0x8002d30",
            "mov rdi, qword [rdi + 0x30]",
            "test rdi, rdi",
            "je 0x8002d07",
            "call kzfree",
            "mov rdi, qword [rbx + 0x28]",
            "test rdi, rdi",
            "je 0x8002d18",
            "mov rsi, rdi",
            "call crypto_destroy_tfm",
            "mov rdi, qword [rbx + 0x38]",
            "call kfree",
            "mov dword [rbx], 0",
            "add rsp, 8",
            "pop rbx",
            "pop rbp",
            "ret",
            "mov rdi, qword [rdi + 0x20]",
            "test rdi, rdi",
            "je 0x8002d3e",
            "call kzfree",
            "mov rdi, qword [rbx + 0x18]",
            "test rdi, rdi",
            "jne 0x8002d10",
            "jmp 0x8002d18"
        ]
    },
    "unk.0x8002d3e": {
        "function_address": "0x08002d3e",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push rbx",
            "mov rbx, rdi",
            "sub rsp, 8",
            "mov ecx, dword [rdi]",
            "test ecx, ecx",
            "je 0x8002d27",
            "mov edx, dword [rdi + 8]",
            "test edx, edx",
            "je 0x8002d30",
            "mov rdi, qword [rdi + 0x30]",
            "test rdi, rdi",
            "je 0x8002d07",
            "call kzfree",
            "mov rdi, qword [rbx + 0x28]",
            "test rdi, rdi",
            "je 0x8002d18",
            "mov rsi, rdi",
            "call crypto_destroy_tfm",
            "mov rdi, qword [rbx + 0x38]",
            "call kfree",
            "mov dword [rbx], 0",
            "add rsp, 8",
            "pop rbx",
            "pop rbp",
            "ret",
            "mov rdi, qword [rdi + 0x20]",
            "test rdi, rdi",
            "je 0x8002d3e",
            "call kzfree",
            "mov rdi, qword [rbx + 0x18]",
            "test rdi, rdi",
            "jne 0x8002d10",
            "jmp 0x8002d18"
        ]
    },
    "sym.release_user_pages": {
        "function_address": "0x080053e0",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r12",
            "xor r12d, r12d",
            "push rbx",
            "mov edx, dword [rdi + 0xbc]",
            "mov rbx, rdi",
            "test edx, edx",
            "je 0x800544d",
            "nop word [rax + rax]",
            "mov rax, qword [rbx + 0xc8]",
            "mov edx, r12d",
            "mov rcx, qword [rax + rdx*8]",
            "mov rsi, qword [rcx]",
            "test esi, 0x400",
            "jne 0x8005424",
            "lock or byte [rcx], 0x10",
            "mov rax, qword [rbx + 0xc8]",
            "mov ecx, dword [rbx + 0xc0]",
            "test ecx, ecx",
            "je 0x8005437",
            "sub ecx, 1",
            "mov dword [rbx + 0xc0], ecx",
            "mov rdi, qword [rax + rdx*8]",
            "add r12d, 1",
            "call put_page",
            "cmp dword [rbx + 0xbc], r12d",
            "ja 0x8005400",
            "mov dword [rbx + 0xbc], 0",
            "pop rbx",
            "pop r12",
            "pop rbp",
            "ret"
        ]
    },
    "unk.0x8005444": {
        "function_address": "0x08005444",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r12",
            "xor r12d, r12d",
            "push rbx",
            "mov edx, dword [rdi + 0xbc]",
            "mov rbx, rdi",
            "test edx, edx",
            "je 0x800544d",
            "nop word [rax + rax]",
            "mov rax, qword [rbx + 0xc8]",
            "mov edx, r12d",
            "mov rcx, qword [rax + rdx*8]",
            "mov rsi, qword [rcx]",
            "test esi, 0x400",
            "jne 0x8005424",
            "lock or byte [rcx], 0x10",
            "mov rax, qword [rbx + 0xc8]",
            "mov ecx, dword [rbx + 0xc0]",
            "test ecx, ecx",
            "je 0x8005437",
            "sub ecx, 1",
            "mov dword [rbx + 0xc0], ecx",
            "mov rdi, qword [rax + rdx*8]",
            "add r12d, 1",
            "call put_page",
            "cmp dword [rbx + 0xbc], r12d",
            "ja 0x8005400",
            "mov dword [rbx + 0xbc], 0",
            "pop rbx",
            "pop r12",
            "pop rbp",
            "ret"
        ]
    },
    "sym.__get_userbuf": {
        "function_address": "0x08005130",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "mov r13d, ecx",
            "push r12",
            "mov r12, r9",
            "push rbx",
            "sub rsp, 0x38",
            "test ecx, ecx",
            "je 0x80052e6",
            "test esi, esi",
            "mov r15d, esi",
            "je 0x80052e6",
            "test rdi, rdi",
            "mov r14, rdi",
            "je 0x80052e6",
            "mov r10, qword [rbp + 0x18]",
            "mov rbx, r8",
            "mov dword [rbp - 0x48], edx",
            "add r10, 0x68",
            "mov rdi, r10",
            "mov qword [rbp - 0x40], r10",
            "call down_read",
            "mov edx, dword [rbp - 0x48]",
            "mov rsi, qword [rbp + 0x18]",
            "xor r9d, r9d",
            "mov rdi, qword [rbp + 0x10]",
            "mov ecx, r13d",
            "mov qword [rsp + 8], 0",
            "mov qword [rsp], rbx",
            "mov r8d, edx",
            "mov rdx, r14",
            "call get_user_pages",
            "mov r10, qword [rbp - 0x40]",
            "mov qword [rbp - 0x40], rax",
            "mov rdi, r10",
            "call up_read",
            "mov rax, qword [rbp - 0x40]",
            "cmp eax, r13d",
            "mov dword [rbp - 0x34], eax",
            "jne 0x80052d0",
            "mov esi, eax",
            "mov rdi, r12",
            "and r14d, 0xfff",
            "call sg_init_table",
            "mov eax, 0x1000",
            "mov edx, r15d",
            "mov rcx, qword [rbx]",
            "sub rax, r14",
            "cmp rax, rdx",
            "cmovg rax, rdx",
            "mov rdx, qword [r12]",
            "and edx, 3",
            "test cl, 3",
            "jne 0x80052e4",
            "or rdx, rcx",
            "sub r15d, eax",
            "mov dword [r12 + 8], r14d",
            "mov qword [r12], rdx",
            "mov dword [r12 + 0xc], eax",
            "mov rdi, r12",
            "call sg_next",
            "test r15d, r15d",
            "je 0x800529d",
            "mov rdx, qword [rax]",
            "mov rsi, qword [rbx + 8]",
            "cmp r15d, 0x1000",
            "mov ecx, 0x1000",
            "cmovbe ecx, r15d",
            "and edx, 3",
            "test sil, 3",
            "jne 0x80052e4",
            "mov r14d, 2",
            "mov r13d, 0x1000",
            "jmp 0x800527d",
            "movsxd rsi, r14d",
            "mov rdx, qword [rax]",
            "cmp r15d, 0x1000",
            "mov rsi, qword [rbx + rsi*8]",
            "mov ecx, r13d",
            "cmovbe ecx, r15d",
            "add r14d, 1",
            "and edx, 3",
            "test sil, 3",
            "jne 0x80052e4",
            "or rdx, rsi",
            "sub r15d, ecx",
            "mov dword [rax + 8], 0",
            "mov qword [rax], rdx",
            "mov dword [rax + 0xc], ecx",
            "mov rdi, rax",
            "call sg_next",
            "test r15d, r15d",
            "jne 0x8005258",
            "mov esi, dword [rbp - 0x34]",
            "mov rdi, r12",
            "call sg_last",
            "mov rdx, qword [rax]",
            "and rdx, 0xfffffffffffffffe",
            "or rdx, 2",
            "mov qword [rax], rdx",
            "xor eax, eax",
            "add rsp, 0x38",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "add rsp, 0x38",
            "mov eax, 0xffffffea",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "ud2",
            "mov rax, qword [r12]",
            "and rax, 0xfffffffffffffffe",
            "or rax, 2",
            "mov qword [r12], rax",
            "xor eax, eax",
            "jmp 0x80052b8"
        ]
    },
    "unk.0x8005180": {
        "function_address": "0x08005180",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "mov r13d, ecx",
            "push r12",
            "mov r12, r9",
            "push rbx",
            "sub rsp, 0x38",
            "test ecx, ecx",
            "je 0x80052e6",
            "test esi, esi",
            "mov r15d, esi",
            "je 0x80052e6",
            "test rdi, rdi",
            "mov r14, rdi",
            "je 0x80052e6",
            "mov r10, qword [rbp + 0x18]",
            "mov rbx, r8",
            "mov dword [rbp - 0x48], edx",
            "add r10, 0x68",
            "mov rdi, r10",
            "mov qword [rbp - 0x40], r10",
            "call down_read",
            "mov edx, dword [rbp - 0x48]",
            "mov rsi, qword [rbp + 0x18]",
            "xor r9d, r9d",
            "mov rdi, qword [rbp + 0x10]",
            "mov ecx, r13d",
            "mov qword [rsp + 8], 0",
            "mov qword [rsp], rbx",
            "mov r8d, edx",
            "mov rdx, r14",
            "call get_user_pages",
            "mov r10, qword [rbp - 0x40]",
            "mov qword [rbp - 0x40], rax",
            "mov rdi, r10",
            "call up_read",
            "mov rax, qword [rbp - 0x40]",
            "cmp eax, r13d",
            "mov dword [rbp - 0x34], eax",
            "jne 0x80052d0",
            "mov esi, eax",
            "mov rdi, r12",
            "and r14d, 0xfff",
            "call sg_init_table",
            "mov eax, 0x1000",
            "mov edx, r15d",
            "mov rcx, qword [rbx]",
            "sub rax, r14",
            "cmp rax, rdx",
            "cmovg rax, rdx",
            "mov rdx, qword [r12]",
            "and edx, 3",
            "test cl, 3",
            "jne 0x80052e4",
            "or rdx, rcx",
            "sub r15d, eax",
            "mov dword [r12 + 8], r14d",
            "mov qword [r12], rdx",
            "mov dword [r12 + 0xc], eax",
            "mov rdi, r12",
            "call sg_next",
            "test r15d, r15d",
            "je 0x800529d",
            "mov rdx, qword [rax]",
            "mov rsi, qword [rbx + 8]",
            "cmp r15d, 0x1000",
            "mov ecx, 0x1000",
            "cmovbe ecx, r15d",
            "and edx, 3",
            "test sil, 3",
            "jne 0x80052e4",
            "mov r14d, 2",
            "mov r13d, 0x1000",
            "jmp 0x800527d",
            "movsxd rsi, r14d",
            "mov rdx, qword [rax]",
            "cmp r15d, 0x1000",
            "mov rsi, qword [rbx + rsi*8]",
            "mov ecx, r13d",
            "cmovbe ecx, r15d",
            "add r14d, 1",
            "and edx, 3",
            "test sil, 3",
            "jne 0x80052e4",
            "or rdx, rsi",
            "sub r15d, ecx",
            "mov dword [rax + 8], 0",
            "mov qword [rax], rdx",
            "mov dword [rax + 0xc], ecx",
            "mov rdi, rax",
            "call sg_next",
            "test r15d, r15d",
            "jne 0x8005258",
            "mov esi, dword [rbp - 0x34]",
            "mov rdi, r12",
            "call sg_last",
            "mov rdx, qword [rax]",
            "and rdx, 0xfffffffffffffffe",
            "or rdx, 2",
            "mov qword [rax], rdx",
            "xor eax, eax",
            "add rsp, 0x38",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "add rsp, 0x38",
            "mov eax, 0xffffffea",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "ud2",
            "mov rax, qword [r12]",
            "and rax, 0xfffffffffffffffe",
            "or rax, 2",
            "mov qword [r12], rax",
            "xor eax, eax",
            "jmp 0x80052b8"
        ]
    },
    "unk.0x80051a9": {
        "function_address": "0x080051a9",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "mov r13d, ecx",
            "push r12",
            "mov r12, r9",
            "push rbx",
            "sub rsp, 0x38",
            "test ecx, ecx",
            "je 0x80052e6",
            "test esi, esi",
            "mov r15d, esi",
            "je 0x80052e6",
            "test rdi, rdi",
            "mov r14, rdi",
            "je 0x80052e6",
            "mov r10, qword [rbp + 0x18]",
            "mov rbx, r8",
            "mov dword [rbp - 0x48], edx",
            "add r10, 0x68",
            "mov rdi, r10",
            "mov qword [rbp - 0x40], r10",
            "call down_read",
            "mov edx, dword [rbp - 0x48]",
            "mov rsi, qword [rbp + 0x18]",
            "xor r9d, r9d",
            "mov rdi, qword [rbp + 0x10]",
            "mov ecx, r13d",
            "mov qword [rsp + 8], 0",
            "mov qword [rsp], rbx",
            "mov r8d, edx",
            "mov rdx, r14",
            "call get_user_pages",
            "mov r10, qword [rbp - 0x40]",
            "mov qword [rbp - 0x40], rax",
            "mov rdi, r10",
            "call up_read",
            "mov rax, qword [rbp - 0x40]",
            "cmp eax, r13d",
            "mov dword [rbp - 0x34], eax",
            "jne 0x80052d0",
            "mov esi, eax",
            "mov rdi, r12",
            "and r14d, 0xfff",
            "call sg_init_table",
            "mov eax, 0x1000",
            "mov edx, r15d",
            "mov rcx, qword [rbx]",
            "sub rax, r14",
            "cmp rax, rdx",
            "cmovg rax, rdx",
            "mov rdx, qword [r12]",
            "and edx, 3",
            "test cl, 3",
            "jne 0x80052e4",
            "or rdx, rcx",
            "sub r15d, eax",
            "mov dword [r12 + 8], r14d",
            "mov qword [r12], rdx",
            "mov dword [r12 + 0xc], eax",
            "mov rdi, r12",
            "call sg_next",
            "test r15d, r15d",
            "je 0x800529d",
            "mov rdx, qword [rax]",
            "mov rsi, qword [rbx + 8]",
            "cmp r15d, 0x1000",
            "mov ecx, 0x1000",
            "cmovbe ecx, r15d",
            "and edx, 3",
            "test sil, 3",
            "jne 0x80052e4",
            "mov r14d, 2",
            "mov r13d, 0x1000",
            "jmp 0x800527d",
            "movsxd rsi, r14d",
            "mov rdx, qword [rax]",
            "cmp r15d, 0x1000",
            "mov rsi, qword [rbx + rsi*8]",
            "mov ecx, r13d",
            "cmovbe ecx, r15d",
            "add r14d, 1",
            "and edx, 3",
            "test sil, 3",
            "jne 0x80052e4",
            "or rdx, rsi",
            "sub r15d, ecx",
            "mov dword [rax + 8], 0",
            "mov qword [rax], rdx",
            "mov dword [rax + 0xc], ecx",
            "mov rdi, rax",
            "call sg_next",
            "test r15d, r15d",
            "jne 0x8005258",
            "mov esi, dword [rbp - 0x34]",
            "mov rdi, r12",
            "call sg_last",
            "mov rdx, qword [rax]",
            "and rdx, 0xfffffffffffffffe",
            "or rdx, 2",
            "mov qword [rax], rdx",
            "xor eax, eax",
            "add rsp, 0x38",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "add rsp, 0x38",
            "mov eax, 0xffffffea",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "ud2",
            "mov rax, qword [r12]",
            "and rax, 0xfffffffffffffffe",
            "or rax, 2",
            "mov qword [r12], rax",
            "xor eax, eax",
            "jmp 0x80052b8"
        ]
    },
    "unk.0x80051b9": {
        "function_address": "0x080051b9",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "mov r13d, ecx",
            "push r12",
            "mov r12, r9",
            "push rbx",
            "sub rsp, 0x38",
            "test ecx, ecx",
            "je 0x80052e6",
            "test esi, esi",
            "mov r15d, esi",
            "je 0x80052e6",
            "test rdi, rdi",
            "mov r14, rdi",
            "je 0x80052e6",
            "mov r10, qword [rbp + 0x18]",
            "mov rbx, r8",
            "mov dword [rbp - 0x48], edx",
            "add r10, 0x68",
            "mov rdi, r10",
            "mov qword [rbp - 0x40], r10",
            "call down_read",
            "mov edx, dword [rbp - 0x48]",
            "mov rsi, qword [rbp + 0x18]",
            "xor r9d, r9d",
            "mov rdi, qword [rbp + 0x10]",
            "mov ecx, r13d",
            "mov qword [rsp + 8], 0",
            "mov qword [rsp], rbx",
            "mov r8d, edx",
            "mov rdx, r14",
            "call get_user_pages",
            "mov r10, qword [rbp - 0x40]",
            "mov qword [rbp - 0x40], rax",
            "mov rdi, r10",
            "call up_read",
            "mov rax, qword [rbp - 0x40]",
            "cmp eax, r13d",
            "mov dword [rbp - 0x34], eax",
            "jne 0x80052d0",
            "mov esi, eax",
            "mov rdi, r12",
            "and r14d, 0xfff",
            "call sg_init_table",
            "mov eax, 0x1000",
            "mov edx, r15d",
            "mov rcx, qword [rbx]",
            "sub rax, r14",
            "cmp rax, rdx",
            "cmovg rax, rdx",
            "mov rdx, qword [r12]",
            "and edx, 3",
            "test cl, 3",
            "jne 0x80052e4",
            "or rdx, rcx",
            "sub r15d, eax",
            "mov dword [r12 + 8], r14d",
            "mov qword [r12], rdx",
            "mov dword [r12 + 0xc], eax",
            "mov rdi, r12",
            "call sg_next",
            "test r15d, r15d",
            "je 0x800529d",
            "mov rdx, qword [rax]",
            "mov rsi, qword [rbx + 8]",
            "cmp r15d, 0x1000",
            "mov ecx, 0x1000",
            "cmovbe ecx, r15d",
            "and edx, 3",
            "test sil, 3",
            "jne 0x80052e4",
            "mov r14d, 2",
            "mov r13d, 0x1000",
            "jmp 0x800527d",
            "movsxd rsi, r14d",
            "mov rdx, qword [rax]",
            "cmp r15d, 0x1000",
            "mov rsi, qword [rbx + rsi*8]",
            "mov ecx, r13d",
            "cmovbe ecx, r15d",
            "add r14d, 1",
            "and edx, 3",
            "test sil, 3",
            "jne 0x80052e4",
            "or rdx, rsi",
            "sub r15d, ecx",
            "mov dword [rax + 8], 0",
            "mov qword [rax], rdx",
            "mov dword [rax + 0xc], ecx",
            "mov rdi, rax",
            "call sg_next",
            "test r15d, r15d",
            "jne 0x8005258",
            "mov esi, dword [rbp - 0x34]",
            "mov rdi, r12",
            "call sg_last",
            "mov rdx, qword [rax]",
            "and rdx, 0xfffffffffffffffe",
            "or rdx, 2",
            "mov qword [rax], rdx",
            "xor eax, eax",
            "add rsp, 0x38",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "add rsp, 0x38",
            "mov eax, 0xffffffea",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "ud2",
            "mov rax, qword [r12]",
            "and rax, 0xfffffffffffffffe",
            "or rax, 2",
            "mov qword [r12], rax",
            "xor eax, eax",
            "jmp 0x80052b8"
        ]
    },
    "unk.0x80051da": {
        "function_address": "0x080051da",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "mov r13d, ecx",
            "push r12",
            "mov r12, r9",
            "push rbx",
            "sub rsp, 0x38",
            "test ecx, ecx",
            "je 0x80052e6",
            "test esi, esi",
            "mov r15d, esi",
            "je 0x80052e6",
            "test rdi, rdi",
            "mov r14, rdi",
            "je 0x80052e6",
            "mov r10, qword [rbp + 0x18]",
            "mov rbx, r8",
            "mov dword [rbp - 0x48], edx",
            "add r10, 0x68",
            "mov rdi, r10",
            "mov qword [rbp - 0x40], r10",
            "call down_read",
            "mov edx, dword [rbp - 0x48]",
            "mov rsi, qword [rbp + 0x18]",
            "xor r9d, r9d",
            "mov rdi, qword [rbp + 0x10]",
            "mov ecx, r13d",
            "mov qword [rsp + 8], 0",
            "mov qword [rsp], rbx",
            "mov r8d, edx",
            "mov rdx, r14",
            "call get_user_pages",
            "mov r10, qword [rbp - 0x40]",
            "mov qword [rbp - 0x40], rax",
            "mov rdi, r10",
            "call up_read",
            "mov rax, qword [rbp - 0x40]",
            "cmp eax, r13d",
            "mov dword [rbp - 0x34], eax",
            "jne 0x80052d0",
            "mov esi, eax",
            "mov rdi, r12",
            "and r14d, 0xfff",
            "call sg_init_table",
            "mov eax, 0x1000",
            "mov edx, r15d",
            "mov rcx, qword [rbx]",
            "sub rax, r14",
            "cmp rax, rdx",
            "cmovg rax, rdx",
            "mov rdx, qword [r12]",
            "and edx, 3",
            "test cl, 3",
            "jne 0x80052e4",
            "or rdx, rcx",
            "sub r15d, eax",
            "mov dword [r12 + 8], r14d",
            "mov qword [r12], rdx",
            "mov dword [r12 + 0xc], eax",
            "mov rdi, r12",
            "call sg_next",
            "test r15d, r15d",
            "je 0x800529d",
            "mov rdx, qword [rax]",
            "mov rsi, qword [rbx + 8]",
            "cmp r15d, 0x1000",
            "mov ecx, 0x1000",
            "cmovbe ecx, r15d",
            "and edx, 3",
            "test sil, 3",
            "jne 0x80052e4",
            "mov r14d, 2",
            "mov r13d, 0x1000",
            "jmp 0x800527d",
            "movsxd rsi, r14d",
            "mov rdx, qword [rax]",
            "cmp r15d, 0x1000",
            "mov rsi, qword [rbx + rsi*8]",
            "mov ecx, r13d",
            "cmovbe ecx, r15d",
            "add r14d, 1",
            "and edx, 3",
            "test sil, 3",
            "jne 0x80052e4",
            "or rdx, rsi",
            "sub r15d, ecx",
            "mov dword [rax + 8], 0",
            "mov qword [rax], rdx",
            "mov dword [rax + 0xc], ecx",
            "mov rdi, rax",
            "call sg_next",
            "test r15d, r15d",
            "jne 0x8005258",
            "mov esi, dword [rbp - 0x34]",
            "mov rdi, r12",
            "call sg_last",
            "mov rdx, qword [rax]",
            "and rdx, 0xfffffffffffffffe",
            "or rdx, 2",
            "mov qword [rax], rdx",
            "xor eax, eax",
            "add rsp, 0x38",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "add rsp, 0x38",
            "mov eax, 0xffffffea",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "ud2",
            "mov rax, qword [r12]",
            "and rax, 0xfffffffffffffffe",
            "or rax, 2",
            "mov qword [r12], rax",
            "xor eax, eax",
            "jmp 0x80052b8"
        ]
    },
    "unk.0x800521b": {
        "function_address": "0x0800521b",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "mov r13d, ecx",
            "push r12",
            "mov r12, r9",
            "push rbx",
            "sub rsp, 0x38",
            "test ecx, ecx",
            "je 0x80052e6",
            "test esi, esi",
            "mov r15d, esi",
            "je 0x80052e6",
            "test rdi, rdi",
            "mov r14, rdi",
            "je 0x80052e6",
            "mov r10, qword [rbp + 0x18]",
            "mov rbx, r8",
            "mov dword [rbp - 0x48], edx",
            "add r10, 0x68",
            "mov rdi, r10",
            "mov qword [rbp - 0x40], r10",
            "call down_read",
            "mov edx, dword [rbp - 0x48]",
            "mov rsi, qword [rbp + 0x18]",
            "xor r9d, r9d",
            "mov rdi, qword [rbp + 0x10]",
            "mov ecx, r13d",
            "mov qword [rsp + 8], 0",
            "mov qword [rsp], rbx",
            "mov r8d, edx",
            "mov rdx, r14",
            "call get_user_pages",
            "mov r10, qword [rbp - 0x40]",
            "mov qword [rbp - 0x40], rax",
            "mov rdi, r10",
            "call up_read",
            "mov rax, qword [rbp - 0x40]",
            "cmp eax, r13d",
            "mov dword [rbp - 0x34], eax",
            "jne 0x80052d0",
            "mov esi, eax",
            "mov rdi, r12",
            "and r14d, 0xfff",
            "call sg_init_table",
            "mov eax, 0x1000",
            "mov edx, r15d",
            "mov rcx, qword [rbx]",
            "sub rax, r14",
            "cmp rax, rdx",
            "cmovg rax, rdx",
            "mov rdx, qword [r12]",
            "and edx, 3",
            "test cl, 3",
            "jne 0x80052e4",
            "or rdx, rcx",
            "sub r15d, eax",
            "mov dword [r12 + 8], r14d",
            "mov qword [r12], rdx",
            "mov dword [r12 + 0xc], eax",
            "mov rdi, r12",
            "call sg_next",
            "test r15d, r15d",
            "je 0x800529d",
            "mov rdx, qword [rax]",
            "mov rsi, qword [rbx + 8]",
            "cmp r15d, 0x1000",
            "mov ecx, 0x1000",
            "cmovbe ecx, r15d",
            "and edx, 3",
            "test sil, 3",
            "jne 0x80052e4",
            "mov r14d, 2",
            "mov r13d, 0x1000",
            "jmp 0x800527d",
            "movsxd rsi, r14d",
            "mov rdx, qword [rax]",
            "cmp r15d, 0x1000",
            "mov rsi, qword [rbx + rsi*8]",
            "mov ecx, r13d",
            "cmovbe ecx, r15d",
            "add r14d, 1",
            "and edx, 3",
            "test sil, 3",
            "jne 0x80052e4",
            "or rdx, rsi",
            "sub r15d, ecx",
            "mov dword [rax + 8], 0",
            "mov qword [rax], rdx",
            "mov dword [rax + 0xc], ecx",
            "mov rdi, rax",
            "call sg_next",
            "test r15d, r15d",
            "jne 0x8005258",
            "mov esi, dword [rbp - 0x34]",
            "mov rdi, r12",
            "call sg_last",
            "mov rdx, qword [rax]",
            "and rdx, 0xfffffffffffffffe",
            "or rdx, 2",
            "mov qword [rax], rdx",
            "xor eax, eax",
            "add rsp, 0x38",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "add rsp, 0x38",
            "mov eax, 0xffffffea",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "ud2",
            "mov rax, qword [r12]",
            "and rax, 0xfffffffffffffffe",
            "or rax, 2",
            "mov qword [r12], rax",
            "xor eax, eax",
            "jmp 0x80052b8"
        ]
    },
    "unk.0x8005298": {
        "function_address": "0x08005298",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "mov r13d, ecx",
            "push r12",
            "mov r12, r9",
            "push rbx",
            "sub rsp, 0x38",
            "test ecx, ecx",
            "je 0x80052e6",
            "test esi, esi",
            "mov r15d, esi",
            "je 0x80052e6",
            "test rdi, rdi",
            "mov r14, rdi",
            "je 0x80052e6",
            "mov r10, qword [rbp + 0x18]",
            "mov rbx, r8",
            "mov dword [rbp - 0x48], edx",
            "add r10, 0x68",
            "mov rdi, r10",
            "mov qword [rbp - 0x40], r10",
            "call down_read",
            "mov edx, dword [rbp - 0x48]",
            "mov rsi, qword [rbp + 0x18]",
            "xor r9d, r9d",
            "mov rdi, qword [rbp + 0x10]",
            "mov ecx, r13d",
            "mov qword [rsp + 8], 0",
            "mov qword [rsp], rbx",
            "mov r8d, edx",
            "mov rdx, r14",
            "call get_user_pages",
            "mov r10, qword [rbp - 0x40]",
            "mov qword [rbp - 0x40], rax",
            "mov rdi, r10",
            "call up_read",
            "mov rax, qword [rbp - 0x40]",
            "cmp eax, r13d",
            "mov dword [rbp - 0x34], eax",
            "jne 0x80052d0",
            "mov esi, eax",
            "mov rdi, r12",
            "and r14d, 0xfff",
            "call sg_init_table",
            "mov eax, 0x1000",
            "mov edx, r15d",
            "mov rcx, qword [rbx]",
            "sub rax, r14",
            "cmp rax, rdx",
            "cmovg rax, rdx",
            "mov rdx, qword [r12]",
            "and edx, 3",
            "test cl, 3",
            "jne 0x80052e4",
            "or rdx, rcx",
            "sub r15d, eax",
            "mov dword [r12 + 8], r14d",
            "mov qword [r12], rdx",
            "mov dword [r12 + 0xc], eax",
            "mov rdi, r12",
            "call sg_next",
            "test r15d, r15d",
            "je 0x800529d",
            "mov rdx, qword [rax]",
            "mov rsi, qword [rbx + 8]",
            "cmp r15d, 0x1000",
            "mov ecx, 0x1000",
            "cmovbe ecx, r15d",
            "and edx, 3",
            "test sil, 3",
            "jne 0x80052e4",
            "mov r14d, 2",
            "mov r13d, 0x1000",
            "jmp 0x800527d",
            "movsxd rsi, r14d",
            "mov rdx, qword [rax]",
            "cmp r15d, 0x1000",
            "mov rsi, qword [rbx + rsi*8]",
            "mov ecx, r13d",
            "cmovbe ecx, r15d",
            "add r14d, 1",
            "and edx, 3",
            "test sil, 3",
            "jne 0x80052e4",
            "or rdx, rsi",
            "sub r15d, ecx",
            "mov dword [rax + 8], 0",
            "mov qword [rax], rdx",
            "mov dword [rax + 0xc], ecx",
            "mov rdi, rax",
            "call sg_next",
            "test r15d, r15d",
            "jne 0x8005258",
            "mov esi, dword [rbp - 0x34]",
            "mov rdi, r12",
            "call sg_last",
            "mov rdx, qword [rax]",
            "and rdx, 0xfffffffffffffffe",
            "or rdx, 2",
            "mov qword [rax], rdx",
            "xor eax, eax",
            "add rsp, 0x38",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "add rsp, 0x38",
            "mov eax, 0xffffffea",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "ud2",
            "mov rax, qword [r12]",
            "and rax, 0xfffffffffffffffe",
            "or rax, 2",
            "mov qword [r12], rax",
            "xor eax, eax",
            "jmp 0x80052b8"
        ]
    },
    "unk.0x80052a8": {
        "function_address": "0x080052a8",
        "instructions": [
            "push rbp",
            "mov rbp, rsp",
            "push r15",
            "push r14",
            "push r13",
            "mov r13d, ecx",
            "push r12",
            "mov r12, r9",
            "push rbx",
            "sub rsp, 0x38",
            "test ecx, ecx",
            "je 0x80052e6",
            "test esi, esi",
            "mov r15d, esi",
            "je 0x80052e6",
            "test rdi, rdi",
            "mov r14, rdi",
            "je 0x80052e6",
            "mov r10, qword [rbp + 0x18]",
            "mov rbx, r8",
            "mov dword [rbp - 0x48], edx",
            "add r10, 0x68",
            "mov rdi, r10",
            "mov qword [rbp - 0x40], r10",
            "call down_read",
            "mov edx, dword [rbp - 0x48]",
            "mov rsi, qword [rbp + 0x18]",
            "xor r9d, r9d",
            "mov rdi, qword [rbp + 0x10]",
            "mov ecx, r13d",
            "mov qword [rsp + 8], 0",
            "mov qword [rsp], rbx",
            "mov r8d, edx",
            "mov rdx, r14",
            "call get_user_pages",
            "mov r10, qword [rbp - 0x40]",
            "mov qword [rbp - 0x40], rax",
            "mov rdi, r10",
            "call up_read",
            "mov rax, qword [rbp - 0x40]",
            "cmp eax, r13d",
            "mov dword [rbp - 0x34], eax",
            "jne 0x80052d0",
            "mov esi, eax",
            "mov rdi, r12",
            "and r14d, 0xfff",
            "call sg_init_table",
            "mov eax, 0x1000",
            "mov edx, r15d",
            "mov rcx, qword [rbx]",
            "sub rax, r14",
            "cmp rax, rdx",
            "cmovg rax, rdx",
            "mov rdx, qword [r12]",
            "and edx, 3",
            "test cl, 3",
            "jne 0x80052e4",
            "or rdx, rcx",
            "sub r15d, eax",
            "mov dword [r12 + 8], r14d",
            "mov qword [r12], rdx",
            "mov dword [r12 + 0xc], eax",
            "mov rdi, r12",
            "call sg_next",
            "test r15d, r15d",
            "je 0x800529d",
            "mov rdx, qword [rax]",
            "mov rsi, qword [rbx + 8]",
            "cmp r15d, 0x1000",
            "mov ecx, 0x1000",
            "cmovbe ecx, r15d",
            "and edx, 3",
            "test sil, 3",
            "jne 0x80052e4",
            "mov r14d, 2",
            "mov r13d, 0x1000",
            "jmp 0x800527d",
            "movsxd rsi, r14d",
            "mov rdx, qword [rax]",
            "cmp r15d, 0x1000",
            "mov rsi, qword [rbx + rsi*8]",
            "mov ecx, r13d",
            "cmovbe ecx, r15d",
            "add r14d, 1",
            "and edx, 3",
            "test sil, 3",
            "jne 0x80052e4",
            "or rdx, rsi",
            "sub r15d, ecx",
            "mov dword [rax + 8], 0",
            "mov qword [rax], rdx",
            "mov dword [rax + 0xc], ecx",
            "mov rdi, rax",
            "call sg_next",
            "test r15d, r15d",
            "jne 0x8005258",
            "mov esi, dword [rbp - 0x34]",
            "mov rdi, r12",
            "call sg_last",
            "mov rdx, qword [rax]",
            "and rdx, 0xfffffffffffffffe",
            "or rdx, 2",
            "mov qword [rax], rdx",
            "xor eax, eax",
            "add rsp, 0x38",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "add rsp, 0x38",
            "mov eax, 0xffffffea",
            "pop rbx",
            "pop r12",
            "pop r13",
            "pop r14",
            "pop r15",
            "pop rbp",
            "ret",
            "ud2",
            "mov rax, qword [r12]",
            "and rax, 0xfffffffffffffffe",
            "or rax, 2",
            "mov qword [r12], rax",
            "xor eax, eax",
            "jmp 0x80052b8"
        ]
    }
}