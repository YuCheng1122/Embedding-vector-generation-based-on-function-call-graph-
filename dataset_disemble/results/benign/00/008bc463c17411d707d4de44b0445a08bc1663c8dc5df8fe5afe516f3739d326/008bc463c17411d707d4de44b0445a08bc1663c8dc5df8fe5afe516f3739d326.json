{
    "fcn.00008fe8": {
        "function_address": "0x00008fe8",
        "instructions": [
            "push {r4, fp, lr}",
            "add fp, sp, 8",
            "sub sp, sp, 0x34c",
            "ldr r4, loc.imp.__register_frame_info",
            "add r4, pc, r4",
            "str r0, [fp, -0x348]",
            "str r1, [fp, -0x34c]",
            "mov r3, 0",
            "str r3, [fp, -0x18]",
            "mov r3, 0",
            "str r3, [fp, -0x20]",
            "ldr r3, [fp, -0x34c]",
            "ldr r3, [r3]",
            "mov r0, r3",
            "mov r1, 0x2f",
            "bl sym.imp.strrchr",
            "str r0, [fp, -0x1c]",
            "ldr r3, [fp, -0x1c]",
            "cmp r3, 0",
            "beq 0x9048",
            "ldr r3, [fp, -0x1c]",
            "add r3, r3, 1",
            "str r3, [fp, -0x1c]",
            "b 0x9054",
            "ldr r3, [fp, -0x34c]",
            "ldr r3, [r3]",
            "str r3, [fp, -0x1c]",
            "ldr r3, [0x00009670]",
            "add r3, r4, r3",
            "mov r0, r3",
            "bl sym.imp.strdup",
            "mov r3, r0",
            "mov r0, r3",
            "bl sym.imp.putenv",
            "ldr r0, [fp, -0x1c]",
            "ldr r3, [0x00009674]",
            "add r3, r4, r3",
            "mov r1, r3",
            "bl sym.imp.strcmp",
            "mov r3, r0",
            "cmp r3, 0",
            "bne 0x90a0",
            "ldr r3, [0x00009678]",
            "ldr r3, [r4, r3]",
            "mov r2, 1",
            "str r2, [r3]",
            "sub r3, fp, 0x124",
            "ldr r2, [0x0000967c]",
            "add r2, r4, r2",
            "str r2, [sp]",
            "ldr r0, [fp, -0x348]",
            "ldr r1, [fp, -0x34c]",
            "mov r2, r3",
            "ldr r3, [0x00009680]",
            "add r3, r4, r3",
            "bl sym.imp.snmp_parse_args",
            "str r0, [fp, -0x10]",
            "ldr r3, [fp, -0x10]",
            "cmn r3, 2",
            "beq 0x90e4",
            "cmn r3, 1",
            "beq 0x90ec",
            "b 0x90f8",
            "mov r0, 0",
            "bl sym.imp.exit",
            "bl fcn.00008c60",
            "mov r0, 1",
            "bl sym.imp.exit",
            "ldr r3, [0x00009684]",
            "ldr r3, [r4, r3]",
            "str r3, [fp, -0xf8]",
            "mov r3, 0",
            "str r3, [fp, -0xf4]",
            "ldr r3, [fp, -0x124]",
            "cmp r3, 3",
            "bne 0x91c4",
            "ldr r3, [0x00009678]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "bne 0x91c4",
            "mov r0, 0",
            "mov r1, 0",
            "bl sym.imp.setup_engineID",
            "ldr r3, [fp, -0xb4]",
            "cmp r3, 0",
            "beq 0x9150",
            "ldr r3, [fp, -0xb8]",
            "cmp r3, 0",
            "bne 0x9168",
            "sub r3, fp, 0x124",
            "add r3, r3, 0x70",
            "mov r0, r3",
            "bl sym.imp.snmpv3_generate_engineID",
            "mov r3, r0",
            "str r3, [fp, -0xb8]",
            "ldr r3, [fp, -0xcc]",
            "cmp r3, 0",
            "beq 0x9180",
            "ldr r3, [fp, -0xd0]",
            "cmp r3, 0",
            "bne 0x9198",
            "sub r3, fp, 0x124",
            "add r3, r3, 0x58",
            "mov r0, r3",
            "bl sym.imp.snmpv3_generate_engineID",
            "mov r3, r0",
            "str r3, [fp, -0xd0]",
            "ldr r3, [fp, -0xc8]",
            "cmp r3, 0",
            "bne 0x91ac",
            "mov r3, 1",
            "str r3, [fp, -0xc8]",
            "ldr r3, [fp, -0xc4]",
            "cmp r3, 0",
            "bne 0x91c4",
            "bl sym.imp.get_uptime",
            "mov r3, r0",
            "str r3, [fp, -0xc4]",
            "ldr r3, [fp, -0x10c]",
            "ldr r2, [0x00009688]",
            "add r2, r4, r2",
            "mov r0, r2",
            "mov r1, r3",
            "bl sym.imp.netsnmp_transport_open_client",
            "mov r3, r0",
            "sub r2, fp, 0x124",
            "mov r0, r2",
            "mov r1, r3",
            "mov r2, 0",
            "mov r3, 0",
            "bl sym.imp.snmp_add",
            "str r0, [fp, -0x24]",
            "ldr r3, [fp, -0x24]",
            "cmp r3, 0",
            "bne 0x9228",
            "sub r3, fp, 0x124",
            "ldr r2, [0x00009688]",
            "add r2, r4, r2",
            "mov r0, r2",
            "mov r1, r3",
            "bl sym.imp.snmp_sess_perror",
            "mov r0, 1",
            "bl sym.imp.exit",
            "ldr r3, [0x00009678]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x9244",
            "mov r3, 0xa6",
            "b 0x9248",
            "mov r3, 0xa7",
            "mov r0, r3",
            "bl sym.imp.snmp_pdu_create",
            "str r0, [fp, -0x28]",
            "ldr r3, [fp, -0x28]",
            "cmp r3, 0",
            "bne 0x9290",
            "ldr r3, [0x0000968c]",
            "add r3, r4, r3",
            "mov r2, r3",
            "ldr r3, [0x00009690]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "mov r0, r2",
            "mov r1, 1",
            "mov r2, 0x22",
            "bl sym.imp.fwrite",
            "mov r0, 1",
            "bl sym.imp.exit",
            "ldr r2, [fp, -0x10]",
            "ldr r3, [fp, -0x348]",
            "cmp r2, r3",
            "bne 0x92d4",
            "ldr r3, [0x00009694]",
            "add r3, r4, r3",
            "mov r2, r3",
            "ldr r3, [0x00009690]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "mov r0, r2",
            "mov r1, 1",
            "mov r2, 0x1a",
            "bl sym.imp.fwrite",
            "bl fcn.00008c60",
            "mov r0, 1",
            "bl sym.imp.exit",
            "ldr r3, [fp, -0x10]",
            "lsl r3, r3, 2",
            "ldr r2, [fp, -0x34c]",
            "add r3, r2, r3",
            "ldr r3, [r3]",
            "str r3, [fp, -0x18]",
            "ldr r3, [fp, -0x18]",
            "ldrb r3, [r3]",
            "cmp r3, 0",
            "bne 0x9328",
            "bl sym.imp.get_uptime",
            "str r0, [fp, -0x2c]",
            "ldr r3, [0x00009698]",
            "add r3, r4, r3",
            "sub r2, fp, 0x340",
            "mov r0, r2",
            "mov r1, r3",
            "ldr r2, [fp, -0x2c]",
            "bl sym.imp.sprintf",
            "sub r3, fp, 0x340",
            "str r3, [fp, -0x18]",
            "ldr r3, [fp, -0x18]",
            "str r3, [sp]",
            "ldr r0, [fp, -0x28]",
            "ldr r3, [0x0000969c]",
            "ldr r3, [r4, r3]",
            "mov r1, r3",
            "mov r2, 9",
            "mov r3, 0x74",
            "bl sym.imp.snmp_add_var",
            "ldr r3, [fp, -0x10]",
            "add r3, r3, 1",
            "str r3, [fp, -0x10]",
            "ldr r2, [fp, -0x10]",
            "ldr r3, [fp, -0x348]",
            "cmp r2, r3",
            "bne 0x939c",
            "ldr r3, [0x000096a0]",
            "add r3, r4, r3",
            "mov r2, r3",
            "ldr r3, [0x00009690]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "mov r0, r2",
            "mov r1, 1",
            "mov r2, 0x1b",
            "bl sym.imp.fwrite",
            "bl fcn.00008c60",
            "mov r0, 1",
            "bl sym.imp.exit",
            "ldr r3, [fp, -0x10]",
            "lsl r3, r3, 2",
            "ldr r2, [fp, -0x34c]",
            "add r3, r2, r3",
            "ldr r3, [r3]",
            "str r3, [sp]",
            "ldr r0, [fp, -0x28]",
            "ldr r3, [0x000096a4]",
            "ldr r3, [r4, r3]",
            "mov r1, r3",
            "mov r2, 0xb",
            "mov r3, 0x6f",
            "bl sym.imp.snmp_add_var",
            "mov r3, r0",
            "cmp r3, 0",
            "beq 0x9400",
            "ldr r3, [fp, -0x10]",
            "lsl r3, r3, 2",
            "ldr r2, [fp, -0x34c]",
            "add r3, r2, r3",
            "ldr r3, [r3]",
            "mov r0, r3",
            "bl sym.imp.snmp_perror",
            "mov r0, 1",
            "bl sym.imp.exit",
            "ldr r3, [fp, -0x10]",
            "add r3, r3, 1",
            "str r3, [fp, -0x10]",
            "b 0x955c",
            "ldr r3, [fp, -0x10]",
            "add r3, r3, 3",
            "str r3, [fp, -0x10]",
            "ldr r2, [fp, -0x10]",
            "ldr r3, [fp, -0x348]",
            "cmp r2, r3",
            "ble 0x9474",
            "ldr r3, [0x00009690]",
            "ldr r3, [r4, r3]",
            "ldr r1, [r3]",
            "ldr r3, [0x000096a8]",
            "add r3, r4, r3",
            "mov r2, r3",
            "ldr r3, [fp, -0x10]",
            "sub r3, r3, 3",
            "lsl r3, r3, 2",
            "ldr r0, [fp, -0x34c]",
            "add r3, r0, r3",
            "ldr r3, [r3]",
            "mov r0, r1",
            "mov r1, r2",
            "mov r2, r3",
            "bl sym.imp.fprintf",
            "mov r0, 1",
            "bl sym.imp.exit",
            "mov r3, 0x80",
            "str r3, [fp, -0x32c]",
            "ldr r3, [fp, -0x10]",
            "sub r3, r3, 3",
            "lsl r3, r3, 2",
            "ldr r2, [fp, -0x34c]",
            "add r3, r2, r3",
            "ldr r1, [r3]",
            "sub r2, fp, 0x328",
            "sub r3, fp, 0x32c",
            "mov r0, r1",
            "mov r1, r2",
            "mov r2, r3",
            "bl sym.imp.snmp_parse_oid",
            "mov r3, r0",
            "cmp r3, 0",
            "bne 0x94e0",
            "ldr r3, [fp, -0x10]",
            "sub r3, r3, 3",
            "lsl r3, r3, 2",
            "ldr r2, [fp, -0x34c]",
            "add r3, r2, r3",
            "ldr r3, [r3]",
            "mov r0, r3",
            "bl sym.imp.snmp_perror",
            "mov r0, 1",
            "bl sym.imp.exit",
            "ldr r2, [fp, -0x32c]",
            "ldr r3, [fp, -0x10]",
            "sub r3, r3, 2",
            "lsl r3, r3, 2",
            "ldr r1, [fp, -0x34c]",
            "add r3, r1, r3",
            "ldr r3, [r3]",
            "ldrb r3, [r3]",
            "ldr r1, [fp, -0x10]",
            "sub r1, r1, 1",
            "lsl r1, r1, 2",
            "ldr r0, [fp, -0x34c]",
            "add r1, r0, r1",
            "ldr r0, [r1]",
            "sub r1, fp, 0x328",
            "str r0, [sp]",
            "ldr r0, [fp, -0x28]",
            "bl sym.imp.snmp_add_var",
            "mov r3, r0",
            "cmp r3, 0",
            "beq 0x955c",
            "ldr r3, [fp, -0x10]",
            "sub r3, r3, 3",
            "lsl r3, r3, 2",
            "ldr r2, [fp, -0x34c]",
            "add r3, r2, r3",
            "ldr r3, [r3]",
            "mov r0, r3",
            "bl sym.imp.snmp_perror",
            "mov r0, 1",
            "bl sym.imp.exit",
            "ldr r2, [fp, -0x10]",
            "ldr r3, [fp, -0x348]",
            "cmp r2, r3",
            "blt 0x9410",
            "ldr r3, [0x00009678]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x959c",
            "sub r3, fp, 0x128",
            "ldr r0, [fp, -0x24]",
            "ldr r1, [fp, -0x28]",
            "mov r2, r3",
            "bl sym.imp.snmp_synch_response",
            "str r0, [fp, -0x14]",
            "b 0x95bc",
            "ldr r0, [fp, -0x24]",
            "ldr r1, [fp, -0x28]",
            "bl sym.imp.snmp_send",
            "mov r3, r0",
            "cmp r3, 0",
            "movne r3, 0",
            "moveq r3, 1",
            "str r3, [fp, -0x14]",
            "ldr r3, [fp, -0x14]",
            "cmp r3, 0",
            "beq 0x9624",
            "ldr r3, [0x00009678]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x95e8",
            "ldr r3, [0x00009674]",
            "add r3, r4, r3",
            "b 0x95f0",
            "ldr r3, [0x00009688]",
            "add r3, r4, r3",
            "mov r0, r3",
            "ldr r1, [fp, -0x24]",
            "bl sym.imp.snmp_sess_perror",
            "ldr r3, [0x00009678]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "bne 0x9618",
            "ldr r0, [fp, -0x28]",
            "bl sym.imp.snmp_free_pdu",
            "mov r3, 1",
            "str r3, [fp, -0x20]",
            "b 0x9644",
            "ldr r3, [0x00009678]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x9644",
            "ldr r3, [fp, -0x128]",
            "mov r0, r3",
            "bl sym.imp.snmp_free_pdu",
            "ldr r0, [fp, -0x24]",
            "bl sym.imp.snmp_close",
            "ldr r3, [0x000096ac]",
            "add r3, r4, r3",
            "mov r0, r3",
            "bl sym.imp.snmp_shutdown",
            "ldr r3, [fp, -0x20]",
            "mov r0, r3",
            "sub sp, fp, 8",
            "pop {r4, fp, pc}"
        ]
    },
    "sym.imp.strrchr": {
        "function_address": "0x00008a54",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 8, 20",
            "ldr pc, [ip, 0xfcc]!"
        ]
    },
    "sym.imp.strdup": {
        "function_address": "0x00008b5c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 8, 20",
            "ldr pc, [ip, 0xf1c]!"
        ]
    },
    "sym.imp.putenv": {
        "function_address": "0x00008a48",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 8, 20",
            "ldr pc, [ip, 0xfd4]!"
        ]
    },
    "sym.imp.strcmp": {
        "function_address": "0x00008b44",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 8, 20",
            "ldr pc, [ip, 0xf2c]!"
        ]
    },
    "sym.imp.snmp_parse_args": {
        "function_address": "0x00008a24",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 8, 20",
            "ldr pc, [ip, 0xfec]!"
        ]
    },
    "sym.imp.exit": {
        "function_address": "0x00008b38",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 8, 20",
            "ldr pc, [ip, 0xf34]!"
        ]
    },
    "fcn.00008c60": {
        "function_address": "0x00008c60",
        "instructions": [
            "push {r3, r4, fp, lr}",
            "add fp, sp, 0xc",
            "ldr r4, aav.0x00008d8c",
            "add r4, pc, r4",
            "ldr r3, [0x00008de0]",
            "ldr r3, [r4, r3]",
            "ldr r1, [r3]",
            "ldr r3, [0x00008de4]",
            "add r3, r4, r3",
            "mov r2, r3",
            "ldr r3, [0x00008de8]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x8ca8",
            "ldr r3, [0x00008dec]",
            "add r3, r4, r3",
            "b 0x8cb0",
            "ldr r3, [0x00008df0]",
            "add r3, r4, r3",
            "mov r0, r1",
            "mov r1, r2",
            "mov r2, r3",
            "bl sym.imp.fprintf",
            "ldr r3, [0x00008de0]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "mov r0, r3",
            "bl sym.imp.snmp_parse_args_usage",
            "ldr r3, [0x00008df4]",
            "add r3, r4, r3",
            "mov r2, r3",
            "ldr r3, [0x00008de0]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "mov r0, r2",
            "mov r1, 1",
            "mov r2, 0x12",
            "bl sym.imp.fwrite",
            "ldr r3, [0x00008de0]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "mov r0, r3",
            "bl sym.imp.snmp_parse_args_descriptions",
            "ldr r3, [0x00008df8]",
            "add r3, r4, r3",
            "mov r2, r3",
            "ldr r3, [0x00008de0]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "mov r0, r2",
            "mov r1, 1",
            "mov r2, 0x3a",
            "bl sym.imp.fwrite",
            "ldr r3, [0x00008dfc]",
            "add r3, r4, r3",
            "mov r2, r3",
            "ldr r3, [0x00008de0]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "mov r0, r2",
            "mov r1, 1",
            "mov r2, 0x2a",
            "bl sym.imp.fwrite",
            "ldr r3, [0x00008e00]",
            "add r3, r4, r3",
            "mov r2, r3",
            "ldr r3, [0x00008de0]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "mov r0, r2",
            "mov r1, 1",
            "mov r2, 0x63",
            "bl sym.imp.fwrite",
            "ldr r3, [0x00008e04]",
            "add r3, r4, r3",
            "mov r2, r3",
            "ldr r3, [0x00008de0]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "mov r0, r2",
            "mov r1, 1",
            "mov r2, 5",
            "bl sym.imp.fwrite",
            "ldr r3, [0x00008e08]",
            "add r3, r4, r3",
            "mov r2, r3",
            "ldr r3, [0x00008de0]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "mov r0, r2",
            "mov r1, 1",
            "mov r2, 0x3e",
            "bl sym.imp.fwrite",
            "pop {r3, r4, fp, pc}"
        ]
    },
    "sym.imp.setup_engineID": {
        "function_address": "0x00008b08",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 8, 20",
            "ldr pc, [ip, 0xf54]!"
        ]
    },
    "sym.imp.snmpv3_generate_engineID": {
        "function_address": "0x00008b68",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 8, 20",
            "ldr pc, [ip, 0xf14]!"
        ]
    },
    "sym.imp.get_uptime": {
        "function_address": "0x00008b50",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 8, 20",
            "ldr pc, [ip, 0xf24]!"
        ]
    },
    "sym.imp.netsnmp_transport_open_client": {
        "function_address": "0x00008aa8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 8, 20",
            "ldr pc, [ip, 0xf94]!"
        ]
    },
    "sym.imp.snmp_add": {
        "function_address": "0x00008a84",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 8, 20",
            "ldr pc, [ip, 0xfac]!"
        ]
    },
    "sym.imp.snmp_sess_perror": {
        "function_address": "0x00008b2c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 8, 20",
            "ldr pc, [ip, 0xf3c]!"
        ]
    },
    "sym.imp.snmp_pdu_create": {
        "function_address": "0x00008b20",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 8, 20",
            "ldr pc, [ip, 0xf44]!"
        ]
    },
    "sym.imp.fwrite": {
        "function_address": "0x00008a30",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 8, 20",
            "ldr pc, [ip, 0xfe4]!"
        ]
    },
    "sym.imp.sprintf": {
        "function_address": "0x00008b14",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 8, 20",
            "ldr pc, [ip, 0xf4c]!"
        ]
    },
    "sym.imp.snmp_add_var": {
        "function_address": "0x00008a78",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 8, 20",
            "ldr pc, [ip, 0xfb4]!"
        ]
    },
    "sym.imp.snmp_perror": {
        "function_address": "0x00008afc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 8, 20",
            "ldr pc, [ip, 0xf5c]!"
        ]
    },
    "sym.imp.fprintf": {
        "function_address": "0x00008acc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 8, 20",
            "ldr pc, [ip, 0xf7c]!"
        ]
    },
    "sym.imp.snmp_parse_oid": {
        "function_address": "0x00008a90",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 8, 20",
            "ldr pc, [ip, 0xfa4]!"
        ]
    },
    "sym.imp.snmp_synch_response": {
        "function_address": "0x00008b74",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 8, 20",
            "ldr pc, [ip, 0xf0c]!"
        ]
    },
    "sym.imp.snmp_send": {
        "function_address": "0x00008a60",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 8, 20",
            "ldr pc, [ip, 0xfc4]!"
        ]
    },
    "sym.imp.snmp_free_pdu": {
        "function_address": "0x00008ab4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 8, 20",
            "ldr pc, [ip, 0xf8c]!"
        ]
    },
    "sym.imp.snmp_close": {
        "function_address": "0x00008ac0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 8, 20",
            "ldr pc, [ip, 0xf84]!"
        ]
    },
    "sym.imp.snmp_shutdown": {
        "function_address": "0x00008ad8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 8, 20",
            "ldr pc, [ip, 0xf74]!"
        ]
    },
    "entry.init0": {
        "function_address": "0x00008c0c",
        "instructions": [
            "push {r3, lr}",
            "ldr r3, [0x00008c4c]",
            "cmp r3, 0",
            "beq 0x8c28",
            "ldr r0, [0x00008c50]",
            "ldr r1, [0x00008c54]",
            "bl loc.imp.__register_frame_info",
            "ldr r0, [0x00008c58]",
            "ldr r3, [r0]",
            "cmp r3, 0",
            "popeq {r3, pc}",
            "ldr r3, [0x00008c5c]",
            "cmp r3, 0",
            "popeq {r3, pc}",
            "blx r3",
            "pop {r3, pc}"
        ]
    },
    "loc.imp.__register_frame_info": {
        "function_address": "0x00008a00",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x9000",
            "ldr pc, [ip, 4]!"
        ]
    },
    "entry.fini0": {
        "function_address": "0x00008bc8",
        "instructions": [
            "push {r3, lr}",
            "ldr r3, loc.__bss_start__",
            "ldrb r3, [r3]",
            "cmp r3, 0",
            "popne {r3, pc}",
            "ldr r3, [0x00008c04]",
            "cmp r3, 0",
            "beq 0x8bf0",
            "ldr r0, [0x00008c08]",
            "bl loc.imp.__deregister_frame_info",
            "ldr r3, loc.__bss_start__",
            "mov r2, 1",
            "strb r2, [r3]",
            "pop {r3, pc}"
        ]
    },
    "loc.imp.__deregister_frame_info": {
        "function_address": "0x00008b80",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 8, 20",
            "ldr pc, [ip, 0xf04]!"
        ]
    },
    "sym.imp.snmp_parse_args_usage": {
        "function_address": "0x00008a9c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 8, 20",
            "ldr pc, [ip, 0xf9c]!"
        ]
    },
    "sym.imp.snmp_parse_args_descriptions": {
        "function_address": "0x00008a18",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 8, 20",
            "ldr pc, [ip, 0xff4]!"
        ]
    }
}