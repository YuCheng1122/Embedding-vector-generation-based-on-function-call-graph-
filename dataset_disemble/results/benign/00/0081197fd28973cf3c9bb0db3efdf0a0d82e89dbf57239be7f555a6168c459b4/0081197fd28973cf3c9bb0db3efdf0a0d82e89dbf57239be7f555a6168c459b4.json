{
    "fcn.0000ce6c": {
        "function_address": "0x0000ce6c",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r5, r1",
            "bl sym.imp.__errno_location",
            "ldr r3, [0x0000cec4]",
            "ldr r2, [0x0000cec8]",
            "ldr r4, [0x0000cec8]",
            "str r0, [r3]",
            "ldr r3, [r5]",
            "str r3, [r2]",
            "ldrb r1, [r3]",
            "cmp r1, 0x2d",
            "addeq r3, r3, 1",
            "streq r3, [r2]",
            "ldr r0, [r4]",
            "bl fcn.000264a0",
            "str r0, [r4]",
            "bl fcn.0000c704",
            "ldr r0, [r4]",
            "mov r1, r5",
            "bl fcn.0000ccf0",
            "ldr r0, str.applet_not_found",
            "bl fcn.000271d8"
        ]
    },
    "sym.imp.__errno_location": {
        "function_address": "0x0000b708",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xc1c]!"
        ]
    },
    "fcn.000264a0": {
        "function_address": "0x000264a0",
        "instructions": [
            "push {r4, lr}",
            "mov r1, 0x2f",
            "mov r4, r0",
            "bl sym.imp.strrchr",
            "cmp r0, 0",
            "addne r4, r0, 1",
            "mov r0, r4",
            "pop {r4, pc}"
        ]
    },
    "fcn.0000c704": {
        "function_address": "0x0000c704",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x17c",
            "bl sym.imp.getuid",
            "cmp r0, 0",
            "ldr r3, [0x0000ca7c]",
            "str r0, [r3]",
            "beq 0xca74",
            "ldr r0, str._etc_busybox.conf",
            "add r1, sp, 0x110",
            "bl sym.imp.stat64",
            "cmp r0, 0",
            "bne 0xca74",
            "ldr r7, [sp, 0x120]",
            "and r3, r7, 0xf000",
            "cmp r3, 0x8000",
            "bne 0xca74",
            "ldr r3, [sp, 0x128]",
            "cmp r3, 0",
            "bne 0xca74",
            "ands r7, r7, 0x12",
            "bne 0xca74",
            "ldr r0, str._etc_busybox.conf",
            "ldr r1, [0x0000ca84]",
            "bl sym.imp.fopen64",
            "subs r5, r0, 0",
            "beq 0xca74",
            "ldr r3, [0x0000ca88]",
            "mov r2, 1",
            "str r7, [sp, 0xc]",
            "mov r4, r7",
            "add sl, sp, 0x10",
            "mov r8, r7",
            "strb r2, [r3]",
            "b 0xc790",
            "mvn r7, 0",
            "mov r0, sl",
            "mov r1, 0x100",
            "mov r2, r5",
            "bl sym.imp.fgets",
            "cmp r0, 0",
            "bne 0xc7cc",
            "mov r0, r5",
            "bl sym.imp.ferror",
            "cmp r0, 0",
            "bne 0xc9e8",
            "mov r0, r5",
            "bl sym.imp.fclose",
            "ldr r3, [0x0000ca8c]",
            "str r4, [r3]",
            "b 0xca74",
            "ldr r2, [sp, 0xc]",
            "mov r0, sl",
            "mov r1, 0xa",
            "add r2, r2, 1",
            "str r2, [sp, 0xc]",
            "bl sym.imp.strchr",
            "cmp r0, 0",
            "bne 0xc7fc",
            "mov r0, r5",
            "bl sym.imp.feof",
            "cmp r0, 0",
            "beq 0xc9f0",
            "mov r1, 0x23",
            "mov r0, sl",
            "bl sym.imp.strchrnul",
            "mov r1, r0",
            "mov r0, sl",
            "bl fcn.0000c598",
            "ldrb r3, [r0]",
            "mov r6, r0",
            "cmp r3, 0",
            "beq 0xc790",
            "cmp r3, 0x5b",
            "bne 0xc874",
            "mov r1, 0x5d",
            "bl sym.imp.strchr",
            "subs r1, r0, 0",
            "beq 0xc9f8",
            "ldrb r3, [r1, 1]",
            "cmp r3, 0",
            "bne 0xc9f8",
            "add r0, r6, 1",
            "bl fcn.0000c598",
            "ldrb r3, [r0]",
            "cmp r3, 0",
            "beq 0xc9f8",
            "ldr r1, str.SUID",
            "bl sym.imp.strcasecmp",
            "cmp r0, 0",
            "mvnne r7, 0",
            "moveq r7, 1",
            "b 0xc790",
            "cmp r7, 1",
            "bne 0xc9d8",
            "mov r1, 0x3d",
            "bl sym.imp.strchr",
            "subs sb, r0, 0",
            "beq 0xca00",
            "mov r0, r6",
            "mov r1, sb",
            "bl fcn.0000c598",
            "ldrb r3, [r0]",
            "cmp r3, 0",
            "beq 0xca00",
            "bl fcn.0000c6dc",
            "subs fp, r0, 0",
            "beq 0xc790",
            "mov r0, 0x14",
            "bl fcn.00029e54",
            "cmp r7, 0",
            "bne 0xc78c",
            "ldr r3, str.keyword_outside_section",
            "b 0xca34",
            "ldr r3, str.reading",
            "b 0xca34",
            "ldr r3, [0x0000caa8]",
            "b 0xca34",
            "ldr r3, str.section_header",
            "b 0xca34",
            "ldr r3, [0x0000cab0]",
            "b 0xca34",
            "str r3, [sp]",
            "ldr r3, obj.stderr",
            "ldr r1, str.Parse_error_in__s__line__d:__s_n",
            "ldr r2, str._etc_busybox.conf",
            "ldr r0, [r3]",
            "ldr r3, [sp, 0xc]",
            "bl sym.imp.fprintf",
            "mov r0, r5",
            "bl sym.imp.fclose",
            "mov r0, r4",
            "b 0xca6c",
            "ldr r5, [r0, 0x10]",
            "bl sym.imp.free",
            "mov r0, r5",
            "cmp r0, 0",
            "bne 0xca60",
            "add sp, sp, 0x17c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0000ccf0": {
        "function_address": "0x0000ccf0",
        "instructions": [
            "push {r0, r1, r4, r5, r6, r7, r8, lr}",
            "mov r5, r0",
            "mov r4, r1",
            "bl fcn.0000c6dc",
            "ldr r3, [0x0000ce34]",
            "cmp r0, 0",
            "str r0, [r3]",
            "beq 0xcd18",
            "mov r0, r4",
            "bl fcn.0000cacc",
            "mov r0, r5",
            "ldr r1, str.busybox",
            "mov r2, 7",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "bne 0xce30",
            "ldr r0, [r4, 4]",
            "add r5, r4, 4",
            "cmp r0, 0",
            "bne 0xcde8",
            "add r1, sp, 8",
            "mov r3, 0x50",
            "mov r0, 0",
            "str r3, [r1, -4]!",
            "mov r2, r0",
            "ldr r5, aav.0x00059148",
            "bl fcn.0002a474",
            "ldr r3, [sp, 4]",
            "mov r4, 0",
            "ldr r1, str.BusyBox_v1.7.2__2014_01_17_17:20:52_CST_",
            "ldr r0, str._s_multi_call_binary_n",
            "sub r3, r3, 0x1c",
            "ldr r7, [0x0000ce48]",
            "str r3, [sp, 4]",
            "bl sym.imp.printf",
            "ldr r0, str.Copyright__C__1998_2006_Erik_Andersen__Rob_Landley__and_others._nLicensed_under_GPLv2._See_source_distribution_for_full_notice._n_nUsage:_busybox__function___arguments_..._n___or:__function___arguments_..._n_n_tBusyBox_is_a_multi_call_binary_that_combines_many_common_Unix_n_tutilities_into_a_single_executable.__Most_people_will_create_a_n_tlink_to_busybox_for_each_function_they_wish_to_use_and_BusyBox_n_twill_act_like_whatever_it_was_invoked_as__n_nCurrently_defined_functions:",
            "bl sym.imp.puts",
            "ldr r6, aav.0x00060438",
            "b 0xcdcc",
            "ldr r3, [sp, 4]",
            "cmp r4, r3",
            "ble 0xcdac",
            "ldr r0, aav.0x000619e0",
            "mov r4, 0",
            "bl sym.imp.puts",
            "ldr r1, [0x0000ce48]",
            "b 0xcdb8",
            "cmp r4, 0",
            "moveq r1, r7",
            "movne r1, r6",
            "ldr r2, [r5, -0xc]",
            "add r5, r5, 0xc",
            "ldr r0, aav.0x00061a94",
            "bl sym.imp.printf",
            "add r4, r4, r0",
            "ldr r8, [r5, -0xc]",
            "cmp r8, 0",
            "bne 0xcd8c",
            "ldr r0, aav.0x0005c340",
            "bl sym.imp.puts",
            "mov r0, r8",
            "bl sym.imp.exit",
            "ldr r1, str.__help",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0xce10",
            "ldr r3, [r4, 8]",
            "cmp r3, 0",
            "beq 0xcd40",
            "mov r5, r4",
            "str r3, [r4]",
            "str r0, [r4, 8]",
            "ldr r2, [r5]",
            "mov r1, r5",
            "ldr r3, [0x0000ce64]",
            "str r2, [r3]",
            "ldr r0, [r5]",
            "bl fcn.0000ccf0",
            "ldr r0, str.applet_not_found",
            "bl fcn.000271d8",
            "pop {r2, r3, r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.000271d8": {
        "function_address": "0x000271d8",
        "instructions": [
            "push {r0, r1, r2, r3}",
            "push {r0, r1, r2, lr}",
            "mov r2, 0",
            "add r1, sp, 0x14",
            "ldr r0, [sp, 0x10]",
            "str r1, [sp, 4]",
            "bl fcn.00029614",
            "bl fcn.000271ac"
        ]
    },
    "fcn.00029030": {
        "function_address": "0x00029030",
        "instructions": [
            "push {r0, r1, r2, lr}",
            "mov r2, 1",
            "add r1, sp, 7",
            "bl fcn.0002900c"
        ]
    },
    "entry.init0": {
        "function_address": "0x0000c544",
        "instructions": [
            "push {r3, lr}",
            "ldr r3, [0x0000c584]",
            "cmp r3, 0",
            "beq 0xc560",
            "ldr r0, [0x0000c588]",
            "ldr r1, [0x0000c58c]",
            "bl loc.imp.__register_frame_info",
            "ldr r0, [0x0000c590]",
            "ldr r3, [r0]",
            "cmp r3, 0",
            "popeq {r3, pc}",
            "ldr r3, [0x0000c594]",
            "cmp r3, 0",
            "popeq {r3, pc}",
            "blx r3",
            "pop {r3, pc}"
        ]
    },
    "loc.imp.__register_frame_info": {
        "function_address": "0x0000b6c0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xc4c]!"
        ]
    },
    "entry.fini0": {
        "function_address": "0x0000c500",
        "instructions": [
            "push {r3, lr}",
            "ldr r3, [0x0000c538]",
            "ldrb r3, [r3]",
            "cmp r3, 0",
            "popne {r3, pc}",
            "ldr r3, [0x0000c53c]",
            "cmp r3, 0",
            "beq 0xc528",
            "ldr r0, [0x0000c540]",
            "bl loc.imp.__deregister_frame_info",
            "ldr r3, [0x0000c538]",
            "mov r2, 1",
            "strb r2, [r3]",
            "pop {r3, pc}"
        ]
    },
    "loc.imp.__deregister_frame_info": {
        "function_address": "0x0000c4ac",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x304]!"
        ]
    },
    "fcn.00010af8": {
        "function_address": "0x00010af8",
        "instructions": [
            "push {r0, r1, r2, r4, r5, r6, r7, lr}",
            "cmn r1, 1",
            "mov r7, r3",
            "movw r3, 0xa190",
            "mov r5, r1",
            "mov r4, r0",
            "movw r0, 0xb190",
            "moveq r0, r3",
            "mov r6, r2",
            "bl fcn.00029eb4",
            "cmn r5, 1",
            "str r0, [sp, 4]",
            "mov r2, r0",
            "ldrne r2, [sp, 4]",
            "str r0, [r4]",
            "mov r1, 1",
            "str r5, [r0, 0x14]",
            "addne r3, r2, 0xa100",
            "streq r6, [r0, 0x24]",
            "addne r3, r3, 0x90",
            "streq r7, [r0, 0x1c]",
            "strne r3, [r2, 0x24]",
            "ldr r3, [sp, 4]",
            "add r0, r3, 0x158",
            "bl fcn.000270f8",
            "ldr r2, [sp, 4]",
            "add r0, r2, 0x48",
            "bl sym.imp._setjmp",
            "subs r4, r0, 0",
            "bne 0x10bc8",
            "ldr r0, [sp, 4]",
            "mov r1, 0x20",
            "bl fcn.00010058",
            "ldr r3, [0x00010bd0]",
            "add r3, r0, r3",
            "cmp r3, 8",
            "bhi 0x10bc4",
            "ldr r2, fcn.000186a0",
            "ldr r3, [0x00010bd8]",
            "mla r0, r2, r0, r3",
            "ldr r3, [sp, 4]",
            "str r0, [r3, 0x40]",
            "lsl r0, r0, 2",
            "bl fcn.00029e18",
            "ldr r2, [sp, 4]",
            "cmp r0, 0",
            "str r0, [r2, 0x3c]",
            "bne 0x10bc8",
            "mov r0, r2",
            "bl sym.imp.free",
            "bl fcn.000271ac",
            "mvn r4, 1",
            "mov r0, r4",
            "pop {r1, r2, r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.00029eb4": {
        "function_address": "0x00029eb4",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r5, r0",
            "bl fcn.00029e54"
        ]
    },
    "fcn.000270f8": {
        "function_address": "0x000270f8",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "cmp r1, 0",
            "ldr r3, [0x0002717c]",
            "mov r4, r1",
            "ldr r5, [0x00027180]",
            "movne r5, r3",
            "cmp r0, 0",
            "bne 0x27120",
            "mov r0, 0x400",
            "bl fcn.00029e54",
            "mov ip, r0",
            "mov r2, 0",
            "cmp r4, 0",
            "mov r1, 8",
            "lslne r3, r2, 0x18",
            "moveq r3, r2",
            "cmp r4, 0",
            "beq 0x27150",
            "cmp r3, 0",
            "lsl r3, r3, 1",
            "bge 0x27160",
            "b 0x2715c",
            "tst r3, 1",
            "lsr r3, r3, 1",
            "beq 0x27160",
            "eor r3, r3, r5",
            "subs r1, r1, 1",
            "bne 0x27138",
            "add r2, r2, 1",
            "str r3, [ip], 4",
            "cmp r2, 0x100",
            "bne 0x27128",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.imp._setjmp": {
        "function_address": "0x0000b66c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xc84]!"
        ]
    },
    "fcn.00010058": {
        "function_address": "0x00010058",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r6, 0",
            "mov r4, r0",
            "mov r5, r1",
            "mov r7, r6",
            "mov r8, 1",
            "b 0x10108",
            "ldr r2, [r4, 0x20]",
            "ldr r3, [r4, 0x1c]",
            "cmp r2, r3",
            "bne 0x100b0",
            "ldr r0, [r4, 0x14]",
            "mov r2, 0x1000",
            "ldr r1, [r4, 0x24]",
            "bl sym.imp.read",
            "cmp r0, 0",
            "str r0, [r4, 0x1c]",
            "bgt 0x100ac",
            "add r0, r4, 0x48",
            "mvn r1, 2",
            "bl sym.imp.longjmp",
            "str r7, [r4, 0x20]",
            "ldr r3, [r4, 0x28]",
            "cmp r3, 0x17",
            "bls 0x100dc",
            "lsl r6, r8, r3",
            "ldr r2, [r4, 0x2c]",
            "rsb r5, r3, r5",
            "str r7, [r4, 0x28]",
            "sub r6, r6, 1",
            "uxtb r5, r5",
            "and r6, r6, r2",
            "lsl r6, r6, r5",
            "ldr r3, [r4, 0x20]",
            "ldr r2, [r4, 0x24]",
            "ldr r1, [r4, 0x2c]",
            "ldrb r2, [r2, r3]",
            "add r3, r3, 1",
            "str r3, [r4, 0x20]",
            "ldr r3, [r4, 0x28]",
            "orr r2, r2, r1, lsl 8",
            "add r3, r3, 8",
            "str r2, [r4, 0x2c]",
            "str r3, [r4, 0x28]",
            "ldr r3, [r4, 0x28]",
            "cmp r3, r5",
            "blo 0x10074",
            "ldr r2, [r4, 0x2c]",
            "rsb r3, r5, r3",
            "str r3, [r4, 0x28]",
            "lsr r3, r2, r3",
            "mvn r2, 0",
            "bic r5, r3, r2, lsl r5",
            "orr r0, r5, r6",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.00029e18": {
        "function_address": "0x00029e18",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r5, r0",
            "bl sym.imp.malloc",
            "rsbs r3, r0, 1",
            "movlo r3, 0",
            "cmp r5, 0",
            "moveq r3, 0",
            "mov r4, r0",
            "cmp r3, 0",
            "beq 0x29e48",
            "ldr r0, aav.0x0005bbd8",
            "bl fcn.00027184",
            "mov r0, r4",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.imp.free": {
        "function_address": "0x0000c2b4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x454]!"
        ]
    },
    "fcn.000271ac": {
        "function_address": "0x000271ac",
        "instructions": [
            "push {r3, lr}",
            "ldr r3, [0x000271d0]",
            "ldr r0, [r3]",
            "cmp r0, 0",
            "beq 0x271c4",
            "bl sym.imp.sleep",
            "ldr r3, [0x000271d4]",
            "ldr r0, [r3]",
            "bl sym.imp.exit"
        ]
    },
    "fcn.00029e54": {
        "function_address": "0x00029e54",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r0",
            "bl sym.imp.malloc",
            "rsbs r3, r0, 1",
            "movlo r3, 0",
            "cmp r4, 0",
            "moveq r3, 0",
            "cmp r3, 0",
            "popeq {r4, pc}",
            "ldr r0, [pc]",
            "bl fcn.000271d8"
        ]
    },
    "sym.imp.memset": {
        "function_address": "0x0000bfa8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x65c]!"
        ]
    },
    "sym.imp.malloc": {
        "function_address": "0x0000b9cc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xa44]!"
        ]
    },
    "fcn.00029614": {
        "function_address": "0x00029614",
        "instructions": [
            "push {r0, r1, r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r5, r2",
            "ldr r2, [0x0002978c]",
            "mov r3, r0",
            "mov ip, r1",
            "ldr r2, [r2]",
            "cmp r2, 0",
            "beq 0x29788",
            "cmp r3, 0",
            "ldr r1, [0x00029790]",
            "add r0, sp, 4",
            "movne r1, r3",
            "mov r2, ip",
            "bl sym.imp.vasprintf",
            "subs sb, r0, 0",
            "blt 0x29788",
            "ldr r3, [0x00029794]",
            "ldr r0, [r3]",
            "bl sym.imp.strlen",
            "cmp r5, 0",
            "mov sl, r0",
            "add r6, r0, 2",
            "moveq r7, r5",
            "beq 0x29680",
            "mov r0, r5",
            "bl sym.imp.strlen",
            "mov r7, r0",
            "ldr r3, [0x00029798]",
            "add r4, r6, sb",
            "ldr r0, [r3]",
            "bl sym.imp.strlen",
            "add r1, r4, 3",
            "mov r8, r0",
            "add r1, r1, r7",
            "ldr r0, [sp, 4]",
            "add r1, r1, r8",
            "bl fcn.00029e84",
            "pop {r2, r3, r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "sym.imp.vasprintf": {
        "function_address": "0x0000b690",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xc6c]!"
        ]
    },
    "sym.imp.strlen": {
        "function_address": "0x0000ba74",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x9d4]!"
        ]
    },
    "fcn.00029e84": {
        "function_address": "0x00029e84",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r1",
            "bl sym.imp.realloc",
            "rsbs r3, r0, 1",
            "movlo r3, 0",
            "cmp r4, 0",
            "moveq r3, 0",
            "cmp r3, 0",
            "popeq {r4, pc}",
            "ldr r0, [pc]",
            "bl fcn.000271d8"
        ]
    },
    "sym.imp.memmove": {
        "function_address": "0x0000bc48",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x89c]!"
        ]
    },
    "sym.imp.strcpy": {
        "function_address": "0x0000c47c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x324]!"
        ]
    },
    "sym.imp.sleep": {
        "function_address": "0x0000b810",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xb6c]!"
        ]
    },
    "sym.imp.exit": {
        "function_address": "0x0000c1a0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x50c]!"
        ]
    },
    "sym.imp.read": {
        "function_address": "0x0000bb28",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x95c]!"
        ]
    },
    "sym.imp.longjmp": {
        "function_address": "0x0000bdd4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x794]!"
        ]
    },
    "fcn.00027184": {
        "function_address": "0x00027184",
        "instructions": [
            "push {r0, r1, r2, r3}",
            "push {r0, r1, r2, lr}",
            "mov r2, 0",
            "add r1, sp, 0x14",
            "ldr r0, [sp, 0x10]",
            "str r1, [sp, 4]",
            "bl fcn.00029614",
            "pop {r1, r2, r3, lr}",
            "add sp, sp, 0x10",
            "bx lr"
        ]
    },
    "fcn.00010990": {
        "function_address": "0x00010990",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r4, r0",
            "ldr r0, [r0, 0xc]",
            "mov r5, r1",
            "mov r7, r2",
            "cmp r0, 0",
            "poplt {r4, r5, r6, r7, r8, pc}",
            "ldr r6, [r4]",
            "ldr r8, [r4, 0x3c]",
            "ldr r2, [r4, 4]",
            "cmp r6, 0",
            "ldr r3, [r4, 0x10]",
            "beq 0x10ac4",
            "sub r6, r6, 1",
            "str r6, [r4]",
            "mov r6, 0",
            "cmp r6, r7",
            "blt 0x109f4",
            "str r3, [r4, 0x10]",
            "mov r0, r7",
            "ldr r3, [r4]",
            "str r2, [r4, 4]",
            "add r3, r3, 1",
            "str r3, [r4]",
            "pop {r4, r5, r6, r7, r8, pc}",
            "strb r3, [r5, r6]",
            "add r6, r6, 1",
            "ldr r1, [r4, 0x38]",
            "eor r0, r3, r1, lsr 24",
            "add r0, r0, 0x56",
            "ldr r0, [r4, r0, lsl 2]",
            "eor r1, r0, r1, lsl 8",
            "str r1, [r4, 0x38]",
            "ldr r1, [r4]",
            "cmp r1, 0",
            "subne r1, r1, 1",
            "strne r1, [r4]",
            "bne 0x109d0",
            "mov r1, r3",
            "mov ip, 5",
            "ldr r3, [r4, 0xc]",
            "cmp r3, 0",
            "sub r0, r3, 1",
            "str r0, [r4, 0xc]",
            "beq 0x10a94",
            "ldr r0, [r4, 8]",
            "ldr r2, [r8, r2, lsl 2]",
            "sub r0, r0, 1",
            "cmp r0, 0",
            "and r3, r2, 0xff",
            "str r0, [r4, 8]",
            "asr r2, r2, 8",
            "beq 0x10a74",
            "cmp r3, r1",
            "movne r1, 4",
            "strne r1, [r4, 8]",
            "b 0x109d0",
            "cmp r3, 0",
            "str r3, [r4]",
            "str ip, [r4, 8]",
            "beq 0x10a30",
            "sub r3, r3, 1",
            "str r3, [r4]",
            "mov r3, r1",
            "b 0x109d0",
            "ldr r2, [r4, 0x34]",
            "ldr r3, [r4, 0x38]",
            "mvn r3, r3",
            "eor r2, r3, r2, ror 31",
            "str r3, [r4, 0x38]",
            "str r2, [r4, 0x34]",
            "ldr r2, [r4, 0x30]",
            "cmp r3, r2",
            "addne r2, r2, 1",
            "mvnne r0, 0",
            "strne r2, [r4, 0x34]",
            "popne {r4, r5, r6, r7, r8, pc}",
            "mov r0, r4",
            "bl fcn.00010134",
            "cmp r0, 0",
            "beq 0x10ae4",
            "cmn r0, 1",
            "str r0, [r4, 0xc]",
            "moveq r0, r6",
            "pop {r4, r5, r6, r7, r8, pc}",
            "mvn r3, 0",
            "ldr r2, [r4, 4]",
            "str r3, [r4, 0x38]",
            "ldr r1, [r4, 0x10]",
            "b 0x10a2c"
        ]
    },
    "fcn.00010134": {
        "function_address": "0x00010134",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x780",
            "sub sp, sp, 4",
            "str r0, [sp, 0x18]",
            "ldr r1, [sp, 0x18]",
            "ldr r0, [r0, 0x3c]",
            "ldr r2, [sp, 0x18]",
            "ldr r1, [r1, 0x40]",
            "str r0, [sp, 0x1c]",
            "add r0, r2, 0x48",
            "str r1, [sp, 0x24]",
            "bl sym.imp._setjmp",
            "subs r4, r0, 0",
            "bne 0x1096c",
            "mov r1, 0x18",
            "ldr r0, [sp, 0x18]",
            "bl fcn.00010058",
            "mov r1, 0x18",
            "mov r5, r0",
            "ldr r0, [sp, 0x18]",
            "bl fcn.00010058",
            "mov r1, 0x20",
            "mov r6, r0",
            "ldr r0, [sp, 0x18]",
            "bl fcn.00010058",
            "ldr r3, [sp, 0x18]",
            "ldr r2, [0x0001097c]",
            "str r0, [r3, 0x30]",
            "ldr r3, [0x00010980]",
            "cmp r6, r2",
            "cmpeq r5, r3",
            "mvneq r4, 0",
            "beq 0x1096c",
            "ldr r3, [0x00010984]",
            "ldr r2, [0x00010988]",
            "cmp r5, r3",
            "cmpeq r6, r2",
            "mvnne r4, 1",
            "bne 0x1096c",
            "ldr r0, [sp, 0x18]",
            "mov r1, 1",
            "bl fcn.00010058",
            "cmp r0, 0",
            "mvnne r4, 6",
            "bne 0x1096c",
            "ldr r0, [sp, 0x18]",
            "mov r1, 0x18",
            "bl fcn.00010058",
            "ldr ip, [sp, 0x24]",
            "str r0, [sp, 0x2c]",
            "cmp r0, ip",
            "bhi 0x10968",
            "ldr r0, [sp, 0x18]",
            "mov r1, 0x10",
            "mov r6, 0xf",
            "mov r7, r4",
            "bl fcn.00010058",
            "mov sl, 0x10",
            "mov r5, r0",
            "mov r8, r6",
            "mov sb, r4",
            "str r4, [sp, 0x20]",
            "asr r3, r5, r6",
            "tst r3, 1",
            "beq 0x10278",
            "ldr r0, [sp, 0x18]",
            "mov r1, sl",
            "bl fcn.00010058",
            "mov r2, r7",
            "mov r3, r8",
            "asr r1, r0, r3",
            "sub r3, r3, 1",
            "tst r1, 1",
            "addne ip, sp, 0x780",
            "addne r1, ip, sb",
            "addne sb, sb, 1",
            "strbne r2, [r1, -0x118]",
            "cmn r3, 1",
            "add r2, r2, 1",
            "uxtb r2, r2",
            "bne 0x1024c",
            "sub r6, r6, 1",
            "add r7, r7, 0x10",
            "cmn r6, 1",
            "uxtb r7, r7",
            "bne 0x1022c",
            "ldr r0, [sp, 0x18]",
            "mov r1, 3",
            "str sb, [sp, 0x20]",
            "bl fcn.00010058",
            "sub r3, r0, 2",
            "str r0, [sp, 0x28]",
            "cmp r3, 4",
            "bhi 0x10968",
            "ldr r0, [sp, 0x18]",
            "mov r1, 0xf",
            "bl fcn.00010058",
            "cmp r0, 0",
            "str r0, [sp, 0x3c]",
            "beq 0x10968",
            "mov r3, r4",
            "add r8, sp, 0x560",
            "ldr r0, [sp, 0x28]",
            "add r8, r8, 8",
            "strb r3, [r8, r3]",
            "add r3, r3, 1",
            "cmp r3, r0",
            "bne 0x102c8",
            "ldr r1, [sp, 0x18]",
            "mov r7, r4",
            "mov sb, 0",
            "mov fp, 1",
            "mov r6, r5",
            "add r3, r1, 0x550",
            "add r3, r3, 7",
            "str r3, [sp, 0x34]",
            "mov sl, r3",
            "mov r3, r8",
            "b 0x1036c",
            "ldr r2, [sp, 0x28]",
            "cmp r5, r2",
            "bge 0x10968",
            "add r5, r5, 1",
            "ldr r0, [sp, 0x18]",
            "mov r1, fp",
            "str r3, [sp, 0x14]",
            "bl fcn.00010058",
            "cmp r0, 0",
            "ldr r3, [sp, 0x14]",
            "bne 0x10310",
            "add ip, sp, 0x780",
            "add r2, ip, r5",
            "add r5, r8, r5",
            "ldrb r2, [r2, -0x218]",
            "b 0x10358",
            "ldrb r1, [r5, -1]",
            "strb r1, [r5], -1",
            "cmp r5, r3",
            "bne 0x10350",
            "add r7, r7, 1",
            "strb r2, [sl, 1]!",
            "strb r2, [sp, 0x568]",
            "ldr r0, [sp, 0x3c]",
            "cmp r7, r0",
            "movlt r5, sb",
            "blt 0x10320",
            "ldr r2, [sp, 0x18]",
            "mov r5, r6",
            "ldr r1, [sp, 0x20]",
            "mov r6, 0",
            "mov r7, r6",
            "add fp, r2, 0x8a00",
            "add r8, r1, 2",
            "add fp, fp, 4",
            "b 0x10608",
            "ldr r0, [sp, 0x18]",
            "mov r1, 5",
            "bl fcn.00010058",
            "ldr r3, [sp, 0x18]",
            "sub sl, r0, 1",
            "mov r5, r4",
            "mov sb, 2",
            "cmp sl, 0x13",
            "bhi 0x10968",
            "mov r0, r3",
            "mov r1, sb",
            "str r3, [sp, 0x14]",
            "bl fcn.00010058",
            "cmp r0, 1",
            "ldr r3, [sp, 0x14]",
            "bgt 0x1040c",
            "ldr r2, [r3, 0x28]",
            "add r1, sl, 1",
            "add r2, r2, 1",
            "str r2, [r3, 0x28]",
            "add r2, sp, 0x460",
            "add r2, r2, 4",
            "strb r1, [r2, r5]",
            "add r5, r5, 1",
            "cmp r5, r8",
            "blt 0x103bc",
            "b 0x10420",
            "add r0, r0, 1",
            "and r0, r0, 2",
            "sub r0, r0, 1",
            "add sl, sl, r0",
            "b 0x103bc",
            "ldrb r3, [sp, 0x464]",
            "mov r1, 1",
            "mov r2, r3",
            "b 0x10454",
            "add r0, sp, 0x460",
            "add r0, r0, 4",
            "ldrb r0, [r0, r1]",
            "cmp r0, r3",
            "movgt r3, r0",
            "bgt 0x10450",
            "cmp r2, r0",
            "movge r2, r0",
            "add r1, r1, 1",
            "cmp r1, r8",
            "blt 0x10430",
            "movw ip, 0x4b4",
            "str r2, [sp, 0x54]",
            "mul r1, ip, r6",
            "ldr ip, [sp, 0x18]",
            "str r2, [fp]",
            "mov sl, r6",
            "str r3, [fp, 4]",
            "str r2, [sp, 0x44]",
            "add r1, r1, 0x8500",
            "add r0, ip, r1",
            "add r1, r1, 0x54",
            "add r1, ip, r1",
            "add r0, r0, 0xa8",
            "str r1, [sp, 0x30]",
            "sub r1, r2, 1",
            "str r0, [sp, 0x40]",
            "mov ip, r7",
            "ldr r0, [sp, 0x30]",
            "add r1, r0, r1, lsl 2",
            "movw r0, 0x12d",
            "mul sb, r0, r6",
            "str r1, [sp, 0x38]",
            "mov r5, r1",
            "mov r1, r2",
            "b 0x1051c",
            "add r0, sp, 0x760",
            "str r7, [r5, 4]!",
            "add r0, r0, 8",
            "str r3, [sp, 4]",
            "strb r7, [r0, r1]",
            "mov r0, 0",
            "b 0x1050c",
            "add r6, sp, 0x460",
            "add r6, r6, 4",
            "ldrb r6, [r6, r0]",
            "cmp r6, r1",
            "bne 0x10508",
            "ldr r3, [sp, 0x18]",
            "add r6, sb, ip",
            "add r6, r6, 0x2140",
            "add ip, ip, 1",
            "add r6, r3, r6, lsl 2",
            "str r0, [r6, 0xfc]",
            "add r0, r0, 1",
            "cmp r0, r8",
            "blt 0x104dc",
            "ldr r3, [sp, 4]",
            "add r1, r1, 1",
            "cmp r1, r3",
            "ble 0x104c0",
            "mov r6, sl",
            "mov r1, r4",
            "b 0x10554",
            "add r0, sp, 0x460",
            "add ip, sp, 0x780",
            "add r0, r0, 4",
            "ldrb r0, [r0, r1]",
            "add r1, r1, 1",
            "add r0, ip, r0",
            "ldrb ip, [r0, -0x18]",
            "add ip, ip, 1",
            "strb ip, [r0, -0x18]",
            "cmp r1, r8",
            "blt 0x10530",
            "ldr r0, [sp, 0x54]",
            "mov r5, 0",
            "ldr ip, [sp, 0x40]",
            "str r4, [sp, 8]",
            "rsb r1, r0, r3",
            "ldr r0, [sp, 0x44]",
            "add sb, ip, r0, lsl 2",
            "mov ip, r7",
            "b 0x105bc",
            "add r0, sp, 0x760",
            "ldr r4, [sp, 0x38]",
            "add r0, r0, 8",
            "ldrb sl, [r0, r2]",
            "add r2, r2, 1",
            "add ip, ip, sl",
            "add r5, r5, sl",
            "lsl r0, ip, r1",
            "lsl ip, ip, 1",
            "sub r0, r0, 1",
            "sub r1, r1, 1",
            "str r0, [r4, 4]!",
            "rsb r0, r5, ip",
            "str r4, [sp, 0x38]",
            "str r0, [sb, 4]!",
            "cmp r2, r3",
            "blt 0x10580",
            "ldr r0, [sp, 0x30]",
            "add r2, r3, 1",
            "mvn r1, 0x80000000",
            "ldr r4, [sp, 8]",
            "add fp, fp, 0x4b0",
            "add r6, r6, 1",
            "str r1, [r0, r2, lsl 2]",
            "add r1, sp, 0x780",
            "add r2, r1, r3",
            "add fp, fp, 4",
            "ldrb r2, [r2, -0x18]",
            "sub r2, r2, 1",
            "add ip, r2, ip",
            "ldr r2, [sp, 0x44]",
            "str ip, [r0, r3, lsl 2]",
            "ldr r3, [sp, 0x40]",
            "str r7, [r3, r2, lsl 2]",
            "ldr ip, [sp, 0x28]",
            "cmp r6, ip",
            "blt 0x103a0",
            "add r1, sp, 0x60",
            "mov r2, r4",
            "mov r7, 0",
            "add r3, sp, 0x560",
            "str r7, [r1, 4]!",
            "add r3, r3, 8",
            "strb r2, [r3, r2]",
            "add r2, r2, 1",
            "cmp r2, 0x100",
            "bne 0x10620",
            "str r4, [sp, 0x5c]",
            "mov fp, r7",
            "ldr r4, [sp, 0x18]",
            "mov r6, r7",
            "str r3, [sp, 0xc]",
            "ldr r1, [sp, 0x3c]",
            "cmp fp, r1",
            "bge 0x10968",
            "ldr r2, [sp, 0x34]",
            "movw ip, 0x4b4",
            "mov sl, 0x31",
            "ldr r8, [0x0001098c]",
            "ldrb r3, [r2, 1]!",
            "str r2, [sp, 0x34]",
            "mul r2, ip, r3",
            "add r1, r2, 0x8500",
            "add r2, r4, r2",
            "add sb, r2, 0x8a00",
            "str r2, [sp, 0x48]",
            "movw r2, 0x12d",
            "add r0, r4, r1",
            "mul r2, r2, r3",
            "add r1, r1, 0x54",
            "add r0, r0, 0xa8",
            "add r1, r4, r1",
            "str r0, [sp, 0x4c]",
            "add sb, sb, 8",
            "str r1, [sp, 0x50]",
            "str r2, [sp, 0x58]",
            "b 0x106f8",
            "ldr r3, [r4, 0x20]",
            "ldr r2, [r4, 0x1c]",
            "cmp r3, r2",
            "bne 0x106d4",
            "mov r0, r4",
            "uxtb r1, r1",
            "bl fcn.00010058",
            "b 0x10724",
            "ldr r2, [r4, 0x24]",
            "add r0, r0, 8",
            "ldr r1, [r4, 0x2c]",
            "ldrb r2, [r2, r3]",
            "add r3, r3, 1",
            "str r3, [r4, 0x20]",
            "str r0, [r4, 0x28]",
            "orr r2, r2, r1, lsl 8",
            "str r2, [r4, 0x2c]",
            "ldr r0, [r4, 0x28]",
            "ldr r1, [sb]",
            "cmp r0, r1",
            "blo 0x106b4",
            "ldr r2, [r4, 0x2c]",
            "mov ip, 1",
            "rsb r3, r1, r0",
            "lsl r0, ip, r1",
            "str r3, [r4, 0x28]",
            "sub r0, r0, 1",
            "and r0, r0, r2, lsr r3",
            "ldr r1, [sp, 0x48]",
            "add r3, r1, 0x8a00",
            "ldr r3, [r3, 4]",
            "lsl r2, r3, 2",
            "b 0x10740",
            "add r3, r3, 1",
            "mov r2, ip",
            "ldr r1, [sp, 0x50]",
            "add ip, r2, 4",
            "ldr r1, [r1, r2]",
            "cmp r0, r1",
            "bgt 0x10738",
            "ldr r1, [sb]",
            "rsb ip, r3, r1",
            "ldr r1, [r4, 0x28]",
            "add r1, r1, ip",
            "str r1, [r4, 0x28]",
            "ldr r1, [sb]",
            "cmp r3, r1",
            "bgt 0x10968",
            "ldr r1, [sp, 0x4c]",
            "ldr r3, [r1, r2]",
            "movw r2, 0x101",
            "rsb r0, r3, r0, asr ip",
            "cmp r0, r2",
            "bhi 0x10968",
            "ldr r3, [sp, 0x58]",
            "add r0, r3, r0",
            "add r0, r0, 0x2140",
            "add r0, r4, r0, lsl 2",
            "ldr r3, [r0, 0xfc]",
            "cmp r3, 1",
            "bhi 0x107c8",
            "ldr ip, [sp, 0x24]",
            "cmp r7, 0",
            "addeq r7, r7, 1",
            "moveq r5, 0",
            "add r5, r5, r7, lsl r3",
            "cmp r7, ip",
            "lsllt r7, r7, 1",
            "b 0x108b0",
            "cmp r7, 0",
            "beq 0x10820",
            "ldr r0, [sp, 0x24]",
            "add r2, r5, r6",
            "cmp r2, r0",
            "bge 0x10968",
            "ldrb r1, [sp, 0x568]",
            "add ip, sp, 0x780",
            "sub r6, r6, 1",
            "add r1, ip, r1",
            "ldrb r0, [r1, -0x118]",
            "add r1, ip, r0, lsl 2",
            "ldr ip, [r1, r8]",
            "add ip, r5, ip",
            "str ip, [r1, r8]",
            "ldr r1, [sp, 0x1c]",
            "add r6, r1, r6, lsl 2",
            "b 0x10814",
            "str r0, [r6, 4]!",
            "subs r5, r5, 1",
            "bhs 0x10810",
            "mov r6, r2",
            "ldr r2, [sp, 0x20]",
            "cmp r3, r2",
            "ble 0x10844",
            "add r1, sp, 0x460",
            "ldr r4, [sp, 0x5c]",
            "add r3, sp, 0x64",
            "add r1, r1, 4",
            "mov r2, 0",
            "b 0x108c8",
            "ldr ip, [sp, 0x24]",
            "cmp r6, ip",
            "bge 0x10968",
            "add r0, sp, 0x780",
            "add r1, sp, 0x560",
            "add r2, r0, r3",
            "add r1, r1, 8",
            "ldrb r2, [r2, -0x219]",
            "sub r3, r3, 1",
            "add r3, r1, r3",
            "ldrb r1, [r3, -1]!",
            "ldr ip, [sp, 0xc]",
            "strb r1, [r3, 1]",
            "cmp r3, ip",
            "bne 0x1086c",
            "add r0, sp, 0x780",
            "strb r2, [sp, 0x568]",
            "add r2, r0, r2",
            "mov r7, 0",
            "ldrb r3, [r2, -0x118]",
            "add r2, r0, r3, lsl 2",
            "ldr r1, [r2, r8]",
            "add r1, r1, 1",
            "str r1, [r2, r8]",
            "ldr r1, [sp, 0x1c]",
            "str r3, [r1, r6, lsl 2]",
            "add r6, r6, 1",
            "cmp sl, 0",
            "addeq fp, fp, 1",
            "beq 0x10650",
            "sub sl, sl, 1",
            "b 0x106f8",
            "mov r2, r0",
            "ldr r0, [r3]",
            "str r2, [r3], 4",
            "cmp r3, r1",
            "add r0, r2, r0",
            "bne 0x108c4",
            "ldr r0, [sp, 0x1c]",
            "mov r3, r4",
            "ldr r1, [0x0001098c]",
            "mov r5, r0",
            "b 0x1091c",
            "ldr ip, [r0], 4",
            "add r2, sp, 0x780",
            "uxtb ip, ip",
            "add ip, r2, ip, lsl 2",
            "ldr r2, [ip, r1]",
            "ldr r7, [r5, r2, lsl 2]",
            "orr r7, r7, r3, lsl 8",
            "add r3, r3, 1",
            "str r7, [r5, r2, lsl 2]",
            "add r2, r2, 1",
            "str r2, [ip, r1]",
            "cmp r3, r6",
            "blt 0x108f0",
            "cmp r6, 0",
            "beq 0x1095c",
            "ldr r3, [sp, 0x2c]",
            "cmp r3, r6",
            "bhs 0x10968",
            "ldr ip, [sp, 0x1c]",
            "ldr r0, [sp, 0x18]",
            "ldr r3, [ip, r3, lsl 2]",
            "uxtb r2, r3",
            "asr r3, r3, 8",
            "str r3, [r0, 4]",
            "mov r3, 5",
            "str r2, [r0, 0x10]",
            "str r3, [r0, 8]",
            "ldr r1, [sp, 0x18]",
            "str r6, [r1, 0xc]",
            "b 0x1096c",
            "mvn r4, 4",
            "mov r0, r4",
            "add sp, sp, 0x384",
            "add sp, sp, 0x400",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00010bdc": {
        "function_address": "0x00010bdc",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r0",
            "ldr r0, [r0, 0x3c]",
            "bl sym.imp.free",
            "mov r0, r4",
            "pop {r4, lr}",
            "b sym.imp.free"
        ]
    },
    "fcn.0000c598": {
        "function_address": "0x0000c598",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r4, r0",
            "mov r5, r1",
            "b 0xc5b8",
            "ldrb r0, [r5, -1]!",
            "bl sym.imp.isspace",
            "cmp r0, 0",
            "beq 0xc5c4",
            "cmp r5, r4",
            "mov r6, r5",
            "bhi 0xc5a8",
            "mov r3, 0",
            "mov r0, r4",
            "strb r3, [r6]",
            "pop {r4, r5, r6, lr}",
            "b fcn.000295c4"
        ]
    },
    "sym.imp.isspace": {
        "function_address": "0x0000c338",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x3fc]!"
        ]
    },
    "fcn.0000c6dc": {
        "function_address": "0x0000c6dc",
        "instructions": [
            "ldr r3, aav.0x0000c5d8",
            "push {r0, r1, r2, lr}",
            "mov r2, 0x6b",
            "ldr r1, aav.0x0005913c",
            "str r3, [sp]",
            "mov r3, 0xc",
            "bl sym.imp.bsearch",
            "pop {r1, r2, r3, pc}"
        ]
    },
    "sym.imp.bsearch": {
        "function_address": "0x0000bcb4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x854]!"
        ]
    },
    "fcn.000295c4": {
        "function_address": "0x000295c4",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r4, r0",
            "mov r5, r4",
            "ldrb r0, [r4], 1",
            "bl sym.imp.isspace",
            "cmp r0, 0",
            "bne 0x295cc",
            "mov r0, r5",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.000266e4": {
        "function_address": "0x000266e4",
        "instructions": [
            "push {r0, r1, r2, r4, r5, r6, r7, lr}",
            "mov r5, r0",
            "ldrb r0, [r0]",
            "mov r6, r1",
            "mov r7, r2",
            "bl sym.imp.isalnum",
            "cmp r0, 0",
            "bne 0x2670c",
            "bl fcn.000265fc",
            "b 0x2673c",
            "ldr r3, [0x00026740]",
            "mov r4, 0",
            "add r1, sp, 4",
            "mov r2, r7",
            "mov r0, r5",
            "ldr r3, [r3]",
            "str r4, [r3]",
            "bl sym.imp.strtoul",
            "mov r1, r4",
            "mov r2, r6",
            "ldr r3, [sp, 4]",
            "bl fcn.0002661c",
            "pop {r1, r2, r3, r4, r5, r6, r7, pc}"
        ]
    },
    "sym.imp.isalnum": {
        "function_address": "0x0000bae0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x98c]!"
        ]
    },
    "fcn.000265fc": {
        "function_address": "0x000265fc",
        "instructions": [
            "ldr r3, [0x00026618]",
            "mov r2, 0x22",
            "mvn r0, 0",
            "mvn r1, 0",
            "ldr r3, [r3]",
            "str r2, [r3]",
            "bx lr"
        ]
    },
    "sym.imp.strtoul": {
        "function_address": "0x0000b9b4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xa54]!"
        ]
    },
    "fcn.0002661c": {
        "function_address": "0x0002661c",
        "instructions": [
            "cmp r2, 0",
            "push {r4, r5, r6, lr}",
            "strne r3, [r2]",
            "mov r4, r0",
            "mov r5, r1",
            "ldrb r2, [r3, -1]",
            "cmp r2, 0x2d",
            "beq 0x26668",
            "ldrb r0, [r3]",
            "cmp r0, 0",
            "beq 0x26678",
            "bl sym.imp.isalnum",
            "cmp r0, 0",
            "bne 0x26668",
            "ldr r3, [0x00026684]",
            "ldr r3, [r3]",
            "ldr r2, [r3]",
            "cmp r2, 0",
            "beq 0x26670",
            "pop {r4, r5, r6, lr}",
            "b fcn.000265fc",
            "mov r2, 0x16",
            "str r2, [r3]",
            "mov r0, r4",
            "mov r1, r5",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.0000c5e0": {
        "function_address": "0x0000c5e0",
        "instructions": [
            "push {r0, r1, r2, lr}",
            "movw r3, 0x26a2",
            "add r0, sp, 4",
            "mvn r1, 0",
            "ldr r2, str.BZh11AYSY_",
            "bl fcn.00010af8",
            "cmp r0, 0",
            "movne r4, 0",
            "bne 0xc624",
            "movw r0, 0x69f9",
            "bl fcn.00029e18",
            "subs r4, r0, 0",
            "beq 0xc624",
            "ldr r0, [sp, 4]",
            "mov r1, r4",
            "movw r2, 0x69f9",
            "bl fcn.00010990",
            "ldr r0, [sp, 4]",
            "mov r5, r4",
            "bl fcn.00010bdc",
            "ldr r3, [0x0000c6b8]",
            "ldr r2, [r3]",
            "ldr r3, aav.0x0005913c",
            "rsb r3, r3, r2",
            "ldr r2, [0x0000c6c0]",
            "asr r3, r3, 2",
            "mul r3, r2, r3",
            "b 0xc660",
            "ldrb r2, [r5], 1",
            "cmp r2, 0",
            "bne 0xc650",
            "sub r3, r3, 1",
            "cmp r3, 0",
            "bne 0xc650",
            "ldr r6, obj.stderr",
            "ldr r1, str._s_multi_call_binary_n",
            "ldr r2, str.BusyBox_v1.7.2__2014_01_17_17:20:52_CST_",
            "ldr r0, [r6]",
            "bl sym.imp.fprintf",
            "ldrb r1, [r5]",
            "ldr r3, str._nUsage:__s__s_n_n",
            "ldr r2, str._nNo_help_available._n_n",
            "cmp r1, 8",
            "ldr r0, [r6]",
            "movne r1, r3",
            "ldr r3, [0x0000c6d8]",
            "moveq r1, r2",
            "ldr r2, [r3]",
            "mov r3, r5",
            "bl sym.imp.fprintf",
            "mov r0, r4",
            "bl sym.imp.free",
            "bl fcn.000271ac"
        ]
    },
    "sym.imp.fprintf": {
        "function_address": "0x0000c050",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x5ec]!"
        ]
    },
    "fcn.0002a298": {
        "function_address": "0x0002a298",
        "instructions": [
            "push {r3, lr}",
            "bl sym.imp.setgid",
            "cmp r0, 0",
            "popeq {r3, pc}",
            "ldr r0, [pc]",
            "bl fcn.00028900"
        ]
    },
    "sym.imp.setgid": {
        "function_address": "0x0000c3d4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x394]!"
        ]
    },
    "fcn.00028900": {
        "function_address": "0x00028900",
        "instructions": [
            "push {r0, r1, r2, r3}",
            "push {r0, r1, r2, lr}",
            "add r3, sp, 0x14",
            "str r3, [sp, 4]",
            "ldr r3, [0x0002893c]",
            "ldr r3, [r3]",
            "ldr r0, [r3]",
            "cmp r0, 0",
            "beq 0x28928",
            "bl sym.imp.strerror",
            "mov r2, r0",
            "ldr r1, [sp, 4]",
            "ldr r0, [sp, 0x10]",
            "bl fcn.00029614",
            "bl fcn.000271ac"
        ]
    },
    "sym.imp.strerror": {
        "function_address": "0x0000c32c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x404]!"
        ]
    },
    "fcn.0002a2b4": {
        "function_address": "0x0002a2b4",
        "instructions": [
            "push {r3, lr}",
            "bl sym.imp.setuid",
            "cmp r0, 0",
            "popeq {r3, pc}",
            "ldr r0, [pc]",
            "bl fcn.00028900"
        ]
    },
    "sym.imp.setuid": {
        "function_address": "0x0000bf18",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x6bc]!"
        ]
    },
    "fcn.0000cacc": {
        "function_address": "0x0000cacc",
        "instructions": [
            "push {r7, lr}",
            "mov r6, r0",
            "mov r3, r0",
            "mov r5, 1",
            "b 0xcae4",
            "add r5, r5, 1",
            "ldr r2, [r3, 4]!",
            "cmp r2, 0",
            "bne 0xcae0",
            "ldr r2, obj.optind",
            "mov r3, 1",
            "cmp r5, 2",
            "str r3, [r2]",
            "ldr r2, [0x0000ccc4]",
            "str r3, [r2]",
            "ldr r3, [0x0000ccc8]",
            "ldr r7, [r3]",
            "ldr r3, [0x0000cccc]",
            "ldr r2, [r7]",
            "str r2, [r3]",
            "bne 0xcb38",
            "ldr r0, [r6, 4]",
            "ldr r1, str.__help",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0xcb38",
            "bl fcn.0000c5e0",
            "ldr r4, [0x0000ccd4]",
            "ldr r3, [r4]",
            "cmp r3, 0",
            "beq 0xcca4",
            "bl sym.imp.getgid",
            "ldr r3, [0x0000ccd8]",
            "mov r8, r0",
            "ldrb r3, [r3]",
            "cmp r3, 0",
            "ldrne r3, [0x0000ccdc]",
            "ldrne r4, [r3]",
            "bne 0xcb7c",
            "b 0xcc70",
            "ldr r3, [r4]",
            "cmp r3, r7",
            "beq 0xcb98",
            "ldr r4, [r4, 0x10]",
            "cmp r4, 0",
            "bne 0xcb6c",
            "mov r0, r8",
            "bl fcn.0002a298",
            "ldr r3, [0x0000ccd4]",
            "ldr r7, [r4, 0xc]",
            "ldr sb, [r3]",
            "ldr r3, [r4, 4]",
            "cmp r3, sb",
            "lsreq r7, r7, 6",
            "beq 0xcc00",
            "ldr r0, [r4, 8]",
            "cmp r0, r8",
            "beq 0xcbfc",
            "bl sym.imp.getgrgid",
            "cmp r0, 0",
            "ldrne sl, [r0, 0xc]",
            "bne 0xcbec",
            "b 0xcc00",
            "bl sym.imp.getpwnam",
            "cmp r0, 0",
            "beq 0xcbec",
            "ldr r3, [r0, 8]",
            "cmp r3, sb",
            "beq 0xcbfc",
            "ldr r0, [sl], 4",
            "cmp r0, 0",
            "bne 0xcbd4",
            "b 0xcc00",
            "lsr r7, r7, 3",
            "tst r7, 1",
            "ldreq r0, str.you_have_no_permission_to_run_this_applet_",
            "beq 0xcc8c",
            "ldr r2, [r4, 0xc]",
            "movw r3, 0x408",
            "mvn r0, 0",
            "and r3, r2, r3",
            "movw r2, 0x408",
            "cmp r3, r2",
            "ldreq r8, [r4, 8]",
            "mov r1, r8",
            "mov r2, r8",
            "bl sym.imp.setresgid",
            "cmp r0, 0",
            "ldrne r0, str.setresgid",
            "bne 0xcc6c",
            "ldr r3, [0x0000ccd4]",
            "mvn r0, 0",
            "ldr r1, [r3]",
            "ldr r3, [r4, 0xc]",
            "tst r3, 0x800",
            "ldrne r1, [r4, 4]",
            "mov r2, r1",
            "bl sym.imp.setresuid",
            "cmp r0, 0",
            "beq 0xcca4",
            "ldr r0, str.setresuid",
            "bl fcn.00028900",
            "ldrb r3, [r7, 8]",
            "cmp r3, 2",
            "bne 0xcc90",
            "bl sym.imp.geteuid",
            "cmp r0, 0",
            "beq 0xcca4",
            "ldr r0, str.applet_requires_root_privileges_",
            "bl fcn.000271d8",
            "cmp r3, 0",
            "bne 0xcca4",
            "bl fcn.0002a298",
            "ldr r3, [0x0000ccc8]",
            "mov r1, r6",
            "mov r0, r5",
            "ldr r3, [r3]",
            "ldr r3, [r3, 4]",
            "blx r3",
            "bl sym.imp.exit"
        ]
    },
    "sym.imp.strcmp": {
        "function_address": "0x0000c224",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x4b4]!"
        ]
    },
    "sym.imp.getgid": {
        "function_address": "0x0000c320",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x40c]!"
        ]
    },
    "sym.imp.getgrgid": {
        "function_address": "0x0000c23c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x4a4]!"
        ]
    },
    "sym.imp.getpwnam": {
        "function_address": "0x0000bd8c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x7c4]!"
        ]
    },
    "sym.imp.setresgid": {
        "function_address": "0x0000c3c8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x39c]!"
        ]
    },
    "sym.imp.setresuid": {
        "function_address": "0x0000bf24",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x6b4]!"
        ]
    },
    "sym.imp.geteuid": {
        "function_address": "0x0000c494",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x314]!"
        ]
    },
    "fcn.0002a474": {
        "function_address": "0x0002a474",
        "instructions": [
            "push {r0, r1, r4, r5, r6, lr}",
            "mov r3, 0",
            "mov r5, r2",
            "mov r4, r1",
            "mov r2, sp",
            "movw r1, 0x5413",
            "str r3, [sp]",
            "str r3, [sp, 4]",
            "bl sym.imp.ioctl",
            "cmp r5, 0",
            "mov r6, r0",
            "beq 0x2a4ec",
            "ldrh r3, [sp]",
            "cmp r3, 0",
            "bne 0x2a4c8",
            "ldr r0, str.LINES",
            "bl sym.imp.getenv",
            "cmp r0, 0",
            "beq 0x2a4c8",
            "bl sym.imp.atoi",
            "strh r0, [sp]",
            "ldrh r2, [sp]",
            "movw r3, 0x752d",
            "sub r2, r2, 2",
            "uxth r2, r2",
            "cmp r2, r3",
            "movhi r3, 0x18",
            "strhhi r3, [sp]",
            "ldrh r3, [sp]",
            "str r3, [r5]",
            "cmp r4, 0",
            "beq 0x2a53c",
            "ldrh r3, [sp, 2]",
            "cmp r3, 0",
            "bne 0x2a518",
            "ldr r0, str.COLUMNS",
            "bl sym.imp.getenv",
            "cmp r0, 0",
            "beq 0x2a518",
            "bl sym.imp.atoi",
            "strh r0, [sp, 2]",
            "ldrh r2, [sp, 2]",
            "movw r3, 0x752d",
            "sub r2, r2, 2",
            "uxth r2, r2",
            "cmp r2, r3",
            "movhi r3, 0x50",
            "strhhi r3, [sp, 2]",
            "ldrh r3, [sp, 2]",
            "str r3, [r4]",
            "mov r0, r6",
            "pop {r2, r3, r4, r5, r6, pc}"
        ]
    },
    "sym.imp.ioctl": {
        "function_address": "0x0000ba5c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x9e4]!"
        ]
    },
    "sym.imp.getenv": {
        "function_address": "0x0000b738",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xbfc]!"
        ]
    },
    "sym.imp.atoi": {
        "function_address": "0x0000c2cc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x444]!"
        ]
    },
    "sym.imp.strncmp": {
        "function_address": "0x0000b9fc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xa24]!"
        ]
    },
    "sym.imp.printf": {
        "function_address": "0x0000c35c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x3e4]!"
        ]
    },
    "sym.imp.puts": {
        "function_address": "0x0000c3b0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x3ac]!"
        ]
    },
    "sym.imp.strrchr": {
        "function_address": "0x0000b9f0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xa2c]!"
        ]
    },
    "sym.imp.getuid": {
        "function_address": "0x0000c02c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x604]!"
        ]
    },
    "sym.imp.stat64": {
        "function_address": "0x0000bbc4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x8f4]!"
        ]
    },
    "sym.imp.fopen64": {
        "function_address": "0x0000ba20",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xa0c]!"
        ]
    },
    "sym.imp.fgets": {
        "function_address": "0x0000be70",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x72c]!"
        ]
    },
    "sym.imp.ferror": {
        "function_address": "0x0000be94",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x714]!"
        ]
    },
    "sym.imp.fclose": {
        "function_address": "0x0000bc78",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x87c]!"
        ]
    },
    "sym.imp.strchr": {
        "function_address": "0x0000c2f0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x42c]!"
        ]
    },
    "sym.imp.feof": {
        "function_address": "0x0000b8d0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xaec]!"
        ]
    },
    "sym.imp.strchrnul": {
        "function_address": "0x0000bdc8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x79c]!"
        ]
    },
    "sym.imp.strcasecmp": {
        "function_address": "0x0000b990",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xa6c]!"
        ]
    },
    "fcn.0002900c": {
        "function_address": "0x0002900c",
        "instructions": [
            "push {r4, lr}",
            "subs r4, r2, 0",
            "popeq {r4, pc}",
            "bl fcn.00028fb4",
            "cmp r0, r4",
            "popeq {r4, pc}",
            "ldr r0, [pc]",
            "bl fcn.000271d8"
        ]
    },
    "fcn.00028fb4": {
        "function_address": "0x00028fb4",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r7, r0",
            "mov r6, r1",
            "mov r5, r2",
            "mov r4, 0",
            "b 0x28ff4",
            "mov r0, r7",
            "mov r1, r6",
            "mov r2, r5",
            "bl fcn.00028f70",
            "cmp r0, 0",
            "poplt {r3, r4, r5, r6, r7, pc}",
            "beq 0x29004",
            "add r6, r6, r0",
            "add r4, r4, r0",
            "rsb r5, r0, r5",
            "cmp r5, 0",
            "bne 0x28fcc",
            "mov r0, r4",
            "pop {r3, r4, r5, r6, r7, pc}",
            "mov r0, r4",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.00028f70": {
        "function_address": "0x00028f70",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r7, r0",
            "ldr r4, [0x00028fb0]",
            "mov r6, r1",
            "mov r5, r2",
            "mov r0, r7",
            "mov r1, r6",
            "mov r2, r5",
            "bl sym.imp.read",
            "cmp r0, 0",
            "popge {r3, r4, r5, r6, r7, pc}",
            "ldr r3, [r4]",
            "ldr r3, [r3]",
            "cmp r3, 4",
            "beq 0x28f84",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.00010bf8": {
        "function_address": "0x00010bf8",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x64",
            "str r0, [sp, 0x54]",
            "mov r0, 0x840",
            "str r1, [sp, 0x58]",
            "bl fcn.00029eb4",
            "mov r4, r0",
            "mov r0, 0x1000",
            "bl fcn.00029eb4",
            "str r0, [sp, 0x28]",
            "mov r0, 0x20000",
            "bl fcn.00029eb4",
            "str r0, [sp, 0x2c]",
            "mov r0, 0x40000",
            "bl fcn.00029eb4",
            "mov r1, r4",
            "str r0, [sp, 0x34]",
            "mov r2, 1",
            "ldr r0, [sp, 0x54]",
            "bl fcn.00028fb4",
            "cmp r0, 1",
            "ldrne r0, str.short_read",
            "bne 0x10ed8",
            "ldrb r3, [r4]",
            "and r1, r3, 0x1f",
            "lsl r0, r0, r1",
            "cmp r1, 0x10",
            "str r1, [sp, 0x38]",
            "str r0, [sp, 0x50]",
            "ble 0x10c7c",
            "ldr r0, str.compressed_with__d_bits__can_only_handle_16_bits",
            "bl fcn.00027184",
            "b 0x10edc",
            "ands r3, r3, 0x80",
            "movw sl, 0x101",
            "str r3, [sp, 0x5c]",
            "moveq sl, 0x100",
            "mov r3, 0xff",
            "ldr r2, [sp, 0x2c]",
            "strb r3, [r2, r3]",
            "subs r3, r3, 1",
            "bhs 0x10c90",
            "ldr fp, [0x00011088]",
            "mov r8, 0",
            "mov r6, 9",
            "mov sb, r8",
            "mov r5, r8",
            "mov r7, r4",
            "add fp, r2, fp",
            "movw r1, 0x1ff",
            "str r1, [sp, 0x24]",
            "str r1, [sp, 0x40]",
            "str r8, [sp, 0x20]",
            "str r3, [sp, 0x30]",
            "str r8, [sp, 0x3c]",
            "ldr r2, [sp, 0x20]",
            "asr r5, r5, 3",
            "mov r3, 0",
            "rsb r4, r5, r2",
            "mov r2, r7",
            "b 0x10cf8",
            "ldrb r1, [r2, r5]",
            "add r3, r3, 1",
            "strb r1, [r2], 1",
            "cmp r3, r4",
            "blt 0x10cec",
            "cmp r4, 0x3f",
            "bgt 0x10d20",
            "add r1, r7, r4",
            "ldr r0, [sp, 0x54]",
            "mov r2, 0x800",
            "bl fcn.00028f70",
            "mov r8, r0",
            "add r4, r0, r4",
            "cmp r8, 0",
            "str r4, [sp, 0x20]",
            "ble 0x10d4c",
            "ldr r0, [sp, 0x20]",
            "mov r1, r6",
            "bl fcn.000551a4",
            "ldr r3, [sp, 0x20]",
            "rsb r1, r1, r3",
            "lsl r1, r1, 3",
            "str r1, [sp, 0x4c]",
            "b 0x10d5c",
            "ldr r1, [sp, 0x20]",
            "rsb r3, r6, 1",
            "add r3, r3, r1, lsl 3",
            "str r3, [sp, 0x4c]",
            "str r8, [sp, 0x48]",
            "mov r5, 0",
            "mov ip, r6",
            "mov r8, r7",
            "b 0x11014",
            "ldr r2, [sp, 0x24]",
            "cmp sl, r2",
            "ble 0x10dcc",
            "lsl r1, ip, 3",
            "mov r6, ip",
            "add r6, r6, 1",
            "sub r3, r1, 1",
            "mov r7, r8",
            "add r5, r3, r5",
            "ldr r8, [sp, 0x48]",
            "mov r0, r5",
            "bl fcn.000551a4",
            "ldr r3, [sp, 0x38]",
            "rsb r5, r1, r5",
            "cmp r6, r3",
            "mvnne r3, 0",
            "ldreq r1, [sp, 0x50]",
            "mvnne r3, r3, lsl r6",
            "strne r3, [sp, 0x24]",
            "mvn r3, 0",
            "streq r1, [sp, 0x24]",
            "mvn r3, r3, lsl r6",
            "b 0x10e78",
            "add r3, r8, r5, asr 3",
            "ldrb r6, [r3, 2]",
            "ldrb r2, [r3, 1]",
            "ldrb r3, [r8, r5, asr 3]",
            "lsl r6, r6, 0x10",
            "orr r6, r6, r2, lsl 8",
            "ldr r2, [sp, 0x40]",
            "orr r6, r6, r3",
            "and r3, r5, 7",
            "add r5, r5, ip",
            "and r6, r2, r6, asr r3",
            "ldr r3, [sp, 0x30]",
            "cmn r3, 1",
            "ldreq r1, [sp, 0x28]",
            "addeq r4, sb, 1",
            "strbeq r6, [r1, sb]",
            "streq r6, [sp, 0x3c]",
            "beq 0x1100c",
            "ldr r2, [sp, 0x5c]",
            "cmp r6, 0x100",
            "movne r3, 0",
            "moveq r3, 1",
            "cmp r2, 0",
            "moveq r3, 0",
            "cmp r3, 0",
            "beq 0x10e80",
            "mov r6, ip",
            "mov r1, 0",
            "mov r2, 0x100",
            "ldr r0, [sp, 0x34]",
            "mov r7, r8",
            "ldr r8, [sp, 0x48]",
            "bl sym.imp.memset",
            "lsl r1, r6, 3",
            "mov sl, 0x100",
            "mov r6, 9",
            "sub r3, r1, 1",
            "add r5, r3, r5",
            "mov r0, r5",
            "bl fcn.000551a4",
            "rsb r5, r1, r5",
            "movw r3, 0x1ff",
            "str r3, [sp, 0x24]",
            "str r3, [sp, 0x40]",
            "b 0x10cd4",
            "cmp r6, sl",
            "blt 0x10ef8",
            "ble 0x10ee4",
            "rsb r2, ip, r5",
            "mov r6, ip",
            "ldrb r0, [r8, r2, asr 3]",
            "add r1, r8, r2, asr 3",
            "mov r4, r8",
            "ldrb r3, [r1, -1]",
            "str r0, [sp]",
            "ldrb r0, [r1, 1]",
            "str r0, [sp, 4]",
            "ldrb r0, [r1, 2]",
            "str r0, [sp, 8]",
            "ldrb r1, [r1, 3]",
            "ldr r0, str.insize:_d_posbits:_d_inbuf:_02X__02X__02X__02X__02X___d_",
            "str r1, [sp, 0xc]",
            "and r1, r2, 7",
            "str r1, [sp, 0x10]",
            "ldr r1, [sp, 0x20]",
            "bl fcn.00027184",
            "ldr r0, str.uncompress:_corrupt_input",
            "bl fcn.00027184",
            "mvn r5, 0",
            "b 0x11054",
            "ldr r1, [sp, 0x3c]",
            "sub r2, fp, 1",
            "strb r1, [fp, -1]",
            "ldr r3, [sp, 0x30]",
            "b 0x10f18",
            "mov r3, r6",
            "mov r2, fp",
            "b 0x10f18",
            "strb r0, [r2, -1]",
            "mov r2, r1",
            "ldr r1, [sp, 0x34]",
            "lsl r3, r3, 1",
            "ldrh r3, [r1, r3]",
            "ldr r1, [sp, 0x2c]",
            "cmp r3, 0xff",
            "ldrb r0, [r1, r3]",
            "sub r1, r2, 1",
            "bgt 0x10f04",
            "rsb r2, r1, fp",
            "movw r3, 0x7ff",
            "add r4, r2, sb",
            "str r0, [sp, 0x44]",
            "cmp r4, r3",
            "str r0, [sp, 0x3c]",
            "mov r7, r1",
            "strb r0, [r1]",
            "ble 0x10fcc",
            "mov r4, sb",
            "mov sb, r5",
            "rsb r5, r4, 0x800",
            "cmp r5, r2",
            "movge r5, r2",
            "cmp r5, 0",
            "ble 0x10f8c",
            "ldr r1, [sp, 0x28]",
            "mov r2, r5",
            "str ip, [sp, 0x1c]",
            "add r0, r1, r4",
            "mov r1, r7",
            "bl sym.imp.memcpy",
            "ldr ip, [sp, 0x1c]",
            "add r4, r4, r5",
            "movw r2, 0x7ff",
            "cmp r4, r2",
            "ble 0x10fb4",
            "mov r2, r4",
            "ldr r0, [sp, 0x58]",
            "ldr r1, [sp, 0x28]",
            "mov r4, 0",
            "str ip, [sp, 0x1c]",
            "bl fcn.000274f4",
            "ldr ip, [sp, 0x1c]",
            "add r7, r7, r5",
            "rsb r2, r7, fp",
            "cmp r2, 0",
            "bgt 0x10f58",
            "mov r5, sb",
            "b 0x10fe0",
            "ldr r3, [sp, 0x28]",
            "str ip, [sp, 0x1c]",
            "add r0, r3, sb",
            "bl sym.imp.memcpy",
            "ldr ip, [sp, 0x1c]",
            "ldr r1, [sp, 0x50]",
            "cmp sl, r1",
            "bge 0x1100c",
            "ldr r2, [sp, 0x30]",
            "lsl r3, sl, 1",
            "ldr r1, [sp, 0x34]",
            "strh r2, [r1, r3]",
            "ldr r2, [sp, 0x44]",
            "ldr r3, [sp, 0x2c]",
            "strb r2, [r3, sl]",
            "add sl, sl, 1",
            "mov sb, r4",
            "str r6, [sp, 0x30]",
            "ldr r1, [sp, 0x4c]",
            "cmp r1, r5",
            "bgt 0x10d70",
            "mov r7, r8",
            "ldr r8, [sp, 0x48]",
            "mov r6, ip",
            "cmp r8, 0",
            "bgt 0x10cd4",
            "cmp sb, 0",
            "mov r4, r7",
            "ble 0x11050",
            "ldr r0, [sp, 0x58]",
            "mov r2, sb",
            "ldr r1, [sp, 0x28]",
            "bl fcn.000274f4",
            "mov r5, 0",
            "mov r0, r4",
            "bl sym.imp.free",
            "ldr r0, [sp, 0x28]",
            "bl sym.imp.free",
            "ldr r0, [sp, 0x2c]",
            "bl sym.imp.free",
            "ldr r0, [sp, 0x34]",
            "bl sym.imp.free",
            "mov r0, r5",
            "add sp, sp, 0x64",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.000551a4": {
        "function_address": "0x000551a4",
        "instructions": [
            "cmp r0, 0",
            "mvngt r0, 0x80000000",
            "movlt r0, 0x80000000",
            "b fcn.00055c64",
            "cmp r1, 0",
            "beq 0x55194",
            "push {r0, r1, lr}",
            "bl fcn.000550d0",
            "pop {r1, r2, lr}",
            "mul r3, r2, r0",
            "sub r1, r1, r3",
            "bx lr"
        ]
    },
    "sym.imp.memcpy": {
        "function_address": "0x0000b798",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xbbc]!"
        ]
    },
    "fcn.000274f4": {
        "function_address": "0x000274f4",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r7, r0",
            "mov r6, r1",
            "mov r4, r2",
            "mov r5, 0",
            "b 0x27530",
            "mov r0, r7",
            "mov r1, r6",
            "mov r2, r4",
            "bl fcn.00029580",
            "cmp r0, 0",
            "poplt {r3, r4, r5, r6, r7, pc}",
            "add r5, r5, r0",
            "add r6, r6, r0",
            "rsb r4, r0, r4",
            "cmp r4, 0",
            "bne 0x2750c",
            "mov r0, r5",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.0000fc40": {
        "function_address": "0x0000fc40",
        "instructions": [
            "push {r4, r5, lr}",
            "sub sp, sp, 0x14",
            "add r1, sp, 4",
            "mov r2, 8",
            "mov r4, r0",
            "bl fcn.0002900c"
        ]
    },
    "fcn.00012360": {
        "function_address": "0x00012360",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r5, r1",
            "mov r7, r0",
            "bl fcn.0001115c",
            "mov r3, 0x8000",
            "mov r2, r5",
            "str r3, [r0, 0x24]",
            "mov r1, r7",
            "mov r4, r0",
            "bl fcn.00011e08"
        ]
    },
    "fcn.0001115c": {
        "function_address": "0x0001115c",
        "instructions": [
            "push {r3, lr}",
            "mov r0, 0x80",
            "bl fcn.00029eb4",
            "mov r2, 0",
            "str r2, [r0, 0x30]",
            "mvn r2, 0",
            "str r2, [r0, 0x64]",
            "add r2, r2, 2",
            "str r2, [r0, 0x68]",
            "pop {r3, pc}"
        ]
    },
    "fcn.00011e08": {
        "function_address": "0x00011e08",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r0",
            "mov r0, 0x8000",
            "mov r5, r1",
            "mov sb, r2",
            "add r6, r4, 0x40",
            "bl fcn.00029e54"
        ]
    },
    "fcn.00029ed8": {
        "function_address": "0x00029ed8",
        "instructions": [
            "push {r3, lr}",
            "subs r3, r0, 0",
            "beq 0x29ef8",
            "bl sym.imp.strdup",
            "cmp r0, 0",
            "popne {r3, pc}",
            "ldr r0, aav.0x0005bbd8",
            "bl fcn.000271d8",
            "mov r0, r3",
            "pop {r3, pc}"
        ]
    },
    "sym.imp.strdup": {
        "function_address": "0x0000c3a4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x3b4]!"
        ]
    },
    "fcn.00029fa4": {
        "function_address": "0x00029fa4",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r4, r0",
            "bl sym.imp.open64",
            "subs r5, r0, 0",
            "bge 0x29fc4",
            "ldr r0, aav.0x0005beb4",
            "mov r1, r4",
            "bl fcn.000288b8",
            "mov r0, r5",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.imp.open64": {
        "function_address": "0x0000c218",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x4bc]!"
        ]
    },
    "fcn.000288b8": {
        "function_address": "0x000288b8",
        "instructions": [
            "push {r0, r1, r2, r3}",
            "push {r0, r1, r2, lr}",
            "add r3, sp, 0x14",
            "str r3, [sp, 4]",
            "ldr r3, [0x000288fc]",
            "ldr r3, [r3]",
            "ldr r0, [r3]",
            "cmp r0, 0",
            "beq 0x288e0",
            "bl sym.imp.strerror",
            "mov r2, r0",
            "ldr r1, [sp, 4]",
            "ldr r0, [sp, 0x10]",
            "bl fcn.00029614",
            "pop {r1, r2, r3, lr}",
            "add sp, sp, 0x10",
            "bx lr"
        ]
    },
    "fcn.0002a080": {
        "function_address": "0x0002a080",
        "instructions": [
            "cmp r0, r1",
            "push {r4, lr}",
            "mov r4, r0",
            "popeq {r4, pc}",
            "bl fcn.0002a060"
        ]
    },
    "fcn.0002a060": {
        "function_address": "0x0002a060",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r1",
            "bl sym.imp.dup2",
            "cmp r0, r4",
            "popeq {r4, pc}",
            "ldr r0, [pc]",
            "bl fcn.00028900"
        ]
    },
    "sym.imp.dup2": {
        "function_address": "0x0000bb1c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x964]!"
        ]
    },
    "fcn.0000cff8": {
        "function_address": "0x0000cff8",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r0",
            "mov r0, r1",
            "mov r1, r2",
            "mov r2, r3",
            "bl fcn.00029fa4",
            "cmp r0, 0",
            "blt 0xd028",
            "mov r1, r4",
            "bl fcn.0002a080",
            "mov r0, 0",
            "pop {r4, pc}",
            "mov r0, 1",
            "pop {r4, pc}"
        ]
    },
    "fcn.00029ff4": {
        "function_address": "0x00029ff4",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r0",
            "bl sym.imp.unlink",
            "cmp r0, 0",
            "popeq {r4, pc}",
            "ldr r0, str.cant_remove_file__s",
            "mov r1, r4",
            "bl fcn.00028900"
        ]
    },
    "sym.imp.unlink": {
        "function_address": "0x0000bf6c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x684]!"
        ]
    },
    "fcn.00027674": {
        "function_address": "0x00027674",
        "instructions": [
            "push {r1, r2, r3}",
            "mov r2, 0",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "add fp, sp, 0x20",
            "sub sp, sp, 0x440",
            "mov r6, r0",
            "sub sp, sp, 8",
            "mov r3, r0",
            "str r2, [fp, -0x44c]",
            "b 0x276a0",
            "add r2, r2, 1",
            "ldr r1, [r3], 4",
            "cmp r1, 0",
            "bne 0x2769c",
            "sub r0, fp, 0x440",
            "add r3, fp, 8",
            "str r2, [fp, -0x44c]",
            "sub r0, r0, 4",
            "mov r2, 0x420",
            "str r3, [fp, -0x24]",
            "bl sym.imp.memset",
            "ldr r2, [fp, 4]",
            "sub r5, fp, 0x440",
            "add r5, r5, 0x1c",
            "mov r4, 0",
            "mov r1, r5",
            "mov lr, 1",
            "ldrb r3, [r2]",
            "cmp r3, 0x2b",
            "cmpne r3, 0x2d",
            "ldr r3, [fp, -0x24]",
            "addeq r2, r2, 1",
            "ldrne r2, [fp, 4]",
            "b 0x27754",
            "cmp r4, 0x20",
            "beq 0x27760",
            "str r0, [r1, -0x20]",
            "lsl r0, lr, r4",
            "str r0, [r1, -0x18]",
            "add r0, r2, 1",
            "ldrb ip, [r2, 1]",
            "cmp ip, 0x3a",
            "movne ip, r3",
            "bne 0x27744",
            "add ip, r3, 4",
            "ldr r3, [r3]",
            "add r2, r2, 2",
            "str r3, [r1, -8]",
            "mov r0, r2",
            "ldrb r3, [r2], 1",
            "cmp r3, 0x3a",
            "beq 0x27734",
            "add r4, r4, 1",
            "add r1, r1, 0x20",
            "mov r3, ip",
            "mov r2, r0",
            "ldrb r0, [r2]",
            "cmp r0, 0",
            "bne 0x276fc",
            "str r3, [fp, -0x24]",
            "ldr r3, [0x00027c70]",
            "ldr r8, [r3]",
            "cmp r8, 0",
            "movne r7, 1",
            "bne 0x27790",
            "b 0x27888",
            "mov r0, r8",
            "add r7, r7, 1",
            "bl sym.imp.strlen",
            "add r0, r0, 3",
            "add r8, r8, r0",
            "ldrb r1, [r8]",
            "cmp r1, 0",
            "bne 0x2777c",
            "lsl r2, r7, 4",
            "add r3, r2, 8",
            "sub sp, sp, r3",
            "add r8, sp, 8",
            "mov r0, r8",
            "str r8, [fp, -0x458]",
            "bl sym.imp.memset",
            "ldr r3, [0x00027c70]",
            "mov sl, r8",
            "ldr sb, [r3]",
            "b 0x277f0",
            "str sb, [sl, -0x10]",
            "mov r0, sb",
            "bl sym.imp.strlen",
            "add r0, r0, 1",
            "ldrb r2, [sb, r0]",
            "add r3, sb, r0",
            "add sb, r3, 2",
            "str r2, [sl, -0xc]",
            "ldrb r2, [r3, 1]",
            "str r2, [sl, -4]",
            "subs r7, r7, 1",
            "add sl, sl, 0x10",
            "bne 0x277c8",
            "ldr r2, [fp, -0x24]",
            "add r8, r8, 0x10",
            "sub ip, fp, 0x440",
            "mov r0, 1",
            "b 0x27874",
            "ldr r3, [r8, -8]",
            "cmp r3, 0",
            "subeq r3, ip, 4",
            "beq 0x27834",
            "b 0x27870",
            "ldr lr, [r8, -4]",
            "cmp r1, lr",
            "beq 0x27870",
            "add r3, r3, 0x20",
            "ldr r1, [r3]",
            "cmp r1, 0",
            "bne 0x27824",
            "cmp r4, 0x1f",
            "bgt 0x27880",
            "ldr r1, [r8, -4]",
            "str r1, [r3]",
            "lsl r1, r0, r4",
            "add r4, r4, 1",
            "str r1, [r3, 8]",
            "ldr r1, [r8, -0xc]",
            "cmp r1, 0",
            "ldrne r1, [r2]",
            "addne r2, r2, 4",
            "strne r1, [r3, 0x18]",
            "add r8, r8, 0x10",
            "ldr r3, [r8, -0x10]",
            "cmp r3, 0",
            "bne 0x27810",
            "str r2, [fp, -0x24]",
            "b 0x27890",
            "ldr r3, aav.0x0005ba30",
            "str r3, [fp, -0x458]",
            "ldr r3, [0x00027c78]",
            "mov sl, 0",
            "mvn r7, 0",
            "str sl, [fp, -0x454]",
            "str sl, [fp, -0x450]",
            "mov r4, sl",
            "ldr ip, [r3]",
            "sub lr, fp, 0x440",
            "b 0x27a58",
            "cmp r1, 0x3a",
            "beq 0x27a54",
            "cmp r1, 0x3f",
            "add r0, ip, 1",
            "ldrb r2, [ip, 1]",
            "bne 0x278e4",
            "sub r2, r2, 0x30",
            "cmp r2, 9",
            "orrhi sl, sl, 1",
            "movls r7, r2",
            "bls 0x27928",
            "b 0x27a54",
            "cmp r1, 0x2d",
            "bne 0x27914",
            "sub r3, r2, 0x30",
            "cmp r3, 9",
            "bls 0x2790c",
            "cmp r2, 0x2d",
            "orreq sl, sl, 4",
            "orrne sl, sl, 2",
            "bne 0x27a54",
            "b 0x27928",
            "str r3, [fp, -0x454]",
            "b 0x27928",
            "cmp r1, 0x3d",
            "subne r3, lr, 4",
            "bne 0x2793c",
            "sub r7, r2, 0x30",
            "str r7, [fp, -0x454]",
            "mov ip, r0",
            "b 0x27a54",
            "cmp r8, r1",
            "beq 0x27948",
            "add r3, r3, 0x20",
            "ldr r8, [r3]",
            "cmp r8, 0",
            "bne 0x27930",
            "cmp r2, 0x3a",
            "bne 0x27968",
            "ldrb r8, [ip, 2]",
            "cmp r8, 0x3a",
            "ldreq r2, [r3, 4]",
            "addeq r2, r2, 1",
            "streq r2, [r3, 4]",
            "beq 0x27a54",
            "cmp r2, 0x3a",
            "cmpne r2, 0",
            "ldreq r2, [fp, -0x450]",
            "ldreq r3, [r3, 8]",
            "orreq r2, r2, r3",
            "streq r2, [fp, -0x450]",
            "beq 0x27a54",
            "cmp r2, 0x2d",
            "bne 0x279b4",
            "ldrb r8, [ip, 2]",
            "cmp r8, 0x3a",
            "cmpne r8, 0",
            "bne 0x279b4",
            "ldr r2, [r3, 8]",
            "ldr r1, [r3, 0x10]",
            "orr r4, r4, r2",
            "orr r2, r1, r2",
            "str r2, [r3, 0x10]",
            "b 0x27928",
            "cmp r2, r1",
            "bne 0x279d4",
            "ldr r2, [fp, -0x24]",
            "mov ip, r0",
            "add r1, r2, 4",
            "ldr r2, [r2]",
            "str r1, [fp, -0x24]",
            "str r2, [r3, 0x1c]",
            "add r2, r3, 8",
            "add ip, ip, 1",
            "add r8, r3, 0xc",
            "b 0x27a3c",
            "cmp r1, 0x3f",
            "addeq r2, r3, 0x14",
            "beq 0x27a3c",
            "cmp r1, 0x2d",
            "subne r0, lr, 4",
            "bne 0x27a28",
            "cmp r2, r8",
            "addeq r2, r3, 0x10",
            "beq 0x27a3c",
            "b 0x27a38",
            "cmp sb, r1",
            "ldreq r1, [r2]",
            "ldreq r0, [r0, 8]",
            "orreq r1, r1, r0",
            "streq r1, [r2]",
            "beq 0x27a3c",
            "add r0, r0, 0x20",
            "ldr sb, [r0]",
            "cmp sb, 0",
            "bne 0x27a0c",
            "b 0x27a3c",
            "mov r2, r8",
            "mov r0, ip",
            "ldrb r1, [ip], 1",
            "cmp r1, 0x3a",
            "cmpne r1, 0",
            "bne 0x279e4",
            "sub ip, r0, 1",
            "add ip, ip, 1",
            "cmp ip, 0",
            "beq 0x27a6c",
            "ldrb r1, [ip]",
            "cmp r1, 0",
            "bne 0x278b4",
            "tst sl, 4",
            "beq 0x27aa0",
            "ldr r1, [r6, 4]",
            "cmp r1, 0",
            "beq 0x27aa0",
            "ldrb r3, [r1]",
            "cmp r3, 0x2d",
            "beq 0x27aa0",
            "cmp r3, 0",
            "beq 0x27aa0",
            "ldr r0, [0x00027c7c]",
            "bl fcn.0002a2d0",
            "str r0, [r6, 4]",
            "ldr r3, obj.optind",
            "and sl, sl, 2",
            "mov r2, 1",
            "str sl, [fp, -0x45c]",
            "mov r8, 0",
            "ldr sl, obj.optarg",
            "str r2, [r3]",
            "b 0x27b70",
            "and r0, r0, 0xff",
            "mov sb, r8",
            "sub r2, fp, 0x440",
            "sub r3, r2, 4",
            "b 0x27af0",
            "subs r1, r0, 0",
            "movne r1, 1",
            "cmp r2, 0",
            "movne r1, 0",
            "cmp r1, 0",
            "bne 0x27c50",
            "add r3, r3, 0x20",
            "ldr r2, [r3]",
            "cmp r2, r0",
            "bne 0x27ad4",
            "ldr r2, [r3, 0x10]",
            "tst r4, r2",
            "bne 0x27c50",
            "ldr r1, [r3, 8]",
            "ldr r0, [r3, 0xc]",
            "and r2, r0, r1",
            "eor r0, r2, r0",
            "eor r1, r2, r1",
            "bic r0, r4, r0",
            "orr r0, r0, r1",
            "eor r4, r0, r2",
            "ldr r2, [r3, 0x1c]",
            "cmp r2, 0",
            "ldrne r1, [r2]",
            "addne r1, r1, 1",
            "strne r1, [r2]",
            "ldr r2, [r3, 4]",
            "cmp r2, 0",
            "beq 0x27b58",
            "ldr r0, [r3, 0x18]",
            "ldr r1, [sl]",
            "bl fcn.00027f80",
            "b 0x27b68",
            "ldr r3, [r3, 0x18]",
            "cmp r3, 0",
            "ldrne r2, [sl]",
            "strne r2, [r3]",
            "cmp sb, 0",
            "bne 0x27b94",
            "ldr r0, [fp, -0x44c]",
            "mov r1, r6",
            "ldr r2, [fp, 4]",
            "ldr r3, [fp, -0x458]",
            "str r8, [sp]",
            "bl sym.imp.getopt_long",
            "cmn r0, 1",
            "bne 0x27ac0",
            "mov sb, r8",
            "ldr r3, [fp, -0x45c]",
            "cmp r3, 0",
            "beq 0x27c08",
            "cmp sb, 0",
            "ldreq r2, obj.optind",
            "ldreq sb, [r2]",
            "addeq sb, r6, sb, lsl 2",
            "mov r2, sb",
            "b 0x27bcc",
            "ldrb r0, [r3]",
            "cmp r0, 0",
            "addne r3, r3, 1",
            "strne r3, [sb]",
            "bne 0x27ac8",
            "ldr r3, [r2]",
            "mov sb, r2",
            "add r2, r2, 4",
            "cmp r3, 0",
            "bne 0x27bb8",
            "b 0x27c08",
            "ldr r3, [r5, -0xc]",
            "cmp r3, 0",
            "beq 0x27c04",
            "ldr r2, [r5, -0x18]",
            "tst r4, r2",
            "beq 0x27c04",
            "tst r4, r3",
            "beq 0x27c50",
            "add r5, r5, 0x20",
            "ldr r3, [r5, -0x20]",
            "cmp r3, 0",
            "bne 0x27be4",
            "ldr r3, [fp, -0x450]",
            "cmp r3, 0",
            "beq 0x27c28",
            "tst r4, r3",
            "beq 0x27c50",
            "ldr r3, obj.optind",
            "ldr r2, [fp, -0x44c]",
            "ldr r3, [r3]",
            "rsb r3, r3, r2",
            "ldr r2, [fp, -0x454]",
            "cmp r3, r2",
            "blt 0x27c50",
            "cmp r7, 0",
            "cmpge r3, r7",
            "ble 0x27c54",
            "bl fcn.0000c5e0",
            "ldr r3, [0x00027c88]",
            "mov r0, r4",
            "str r4, [r3]",
            "sub sp, fp, 0x20",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "add sp, sp, 0xc",
            "bx lr"
        ]
    },
    "fcn.0002a2d0": {
        "function_address": "0x0002a2d0",
        "instructions": [
            "push {r0, r1, r2, r3}",
            "push {r0, r1, r2, lr}",
            "add r2, sp, 0x14",
            "mov r0, sp",
            "ldr r1, [sp, 0x10]",
            "str r2, [sp, 4]",
            "bl sym.imp.vasprintf",
            "cmp r0, 0",
            "bge 0x2a2fc",
            "ldr r0, aav.0x0005bbd8",
            "bl fcn.000271d8",
            "ldr r0, [sp]",
            "pop {r1, r2, r3, lr}",
            "add sp, sp, 0x10",
            "bx lr"
        ]
    },
    "fcn.00027f80": {
        "function_address": "0x00027f80",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r4, r0",
            "mov r0, 8",
            "mov r5, r1",
            "bl fcn.00029e54"
        ]
    },
    "sym.imp.getopt_long": {
        "function_address": "0x0000c368",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x3dc]!"
        ]
    },
    "fcn.0000dc3c": {
        "function_address": "0x0000dc3c",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r4, r0",
            "mov r2, r1",
            "mov r0, 0",
            "mov r1, r4",
            "bl fcn.00028f70",
            "sub r3, r0, 1",
            "cmn r3, 3",
            "pophi {r3, r4, r5, pc}",
            "ldr r3, [0x0000dca8]",
            "mov r1, 0",
            "ldr r3, [r3]",
            "ldr r2, [r3, -4]",
            "ldr ip, [r3, -8]",
            "ldrb r5, [r4, r1]",
            "add r1, r1, 1",
            "cmp r0, r1",
            "eor r5, r2, r5",
            "uxtb r5, r5",
            "ldr r5, [ip, r5, lsl 2]",
            "eor r2, r5, r2, lsr 8",
            "bne 0xdc74",
            "str r2, [r3, -4]",
            "ldr r2, [r3, -0x1c]",
            "add r2, r2, r0",
            "str r2, [r3, -0x1c]",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.0002a0a0": {
        "function_address": "0x0002a0a0",
        "instructions": [
            "push {r4, lr}",
            "subs r4, r2, 0",
            "popeq {r4, pc}",
            "bl fcn.000274f4",
            "cmp r0, r4",
            "popeq {r4, pc}",
            "ldr r0, [pc]",
            "bl fcn.000271d8"
        ]
    },
    "fcn.00029580": {
        "function_address": "0x00029580",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r7, r0",
            "ldr r4, [0x000295c0]",
            "mov r6, r1",
            "mov r5, r2",
            "mov r0, r7",
            "mov r1, r6",
            "mov r2, r5",
            "bl sym.imp.write",
            "cmp r0, 0",
            "popge {r3, r4, r5, r6, r7, pc}",
            "ldr r3, [r4]",
            "ldr r3, [r3]",
            "cmp r3, 4",
            "beq 0x29594",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.0000ddb4": {
        "function_address": "0x0000ddb4",
        "instructions": [
            "ldr r3, [0x0000dde4]",
            "push {r4, lr}",
            "ldr r4, [r3]",
            "ldr r2, [r4, -0x18]",
            "cmp r2, 0",
            "popeq {r4, pc}",
            "mov r0, 1",
            "ldr r1, [r4, -0x28]",
            "bl fcn.0002a0a0"
        ]
    },
    "fcn.0000dde8": {
        "function_address": "0x0000dde8",
        "instructions": [
            "ldr r3, [0x0000de68]",
            "push {r4, r5, r6, lr}",
            "mov r5, r0",
            "ldr r4, [r3]",
            "movw r3, 0x1ffd",
            "ldr r2, [r4, -0x18]",
            "ldr r1, [r4, -0x28]",
            "cmp r2, r3",
            "add r3, r2, 1",
            "bhi 0xde2c",
            "strb r0, [r1, r2]",
            "lsr r5, r0, 8",
            "ldr r2, [r4, -0x28]",
            "strb r5, [r2, r3]",
            "add r3, r3, 1",
            "str r3, [r4, -0x18]",
            "pop {r4, r5, r6, pc}",
            "cmp r3, 0x2000",
            "strb r0, [r1, r2]",
            "str r3, [r4, -0x18]",
            "bne 0xde40",
            "bl fcn.0000ddb4",
            "ldr r3, [r4, -0x18]",
            "lsr r5, r5, 8",
            "ldr r2, [r4, -0x28]",
            "strb r5, [r2, r3]",
            "add r3, r3, 1",
            "cmp r3, 0x2000",
            "str r3, [r4, -0x18]",
            "popne {r4, r5, r6, pc}",
            "pop {r4, r5, r6, lr}",
            "b fcn.0000ddb4"
        ]
    },
    "fcn.0000de6c": {
        "function_address": "0x0000de6c",
        "instructions": [
            "ldr r3, [0x0000ded4]",
            "rsb r2, r1, 0x10",
            "push {r4, r5, r6, lr}",
            "mov r4, r0",
            "mov r6, r1",
            "ldr r5, [r3]",
            "ldr r3, [r5, -0xc]",
            "cmp r3, r2",
            "ldrh r2, [r5, -0x10]",
            "lsl r0, r0, r3",
            "orrle r2, r0, r2",
            "strhle r2, [r5, -0x10]",
            "ble 0xdec8",
            "orr r0, r0, r2",
            "uxth r4, r4",
            "uxth r0, r0",
            "strh r0, [r5, -0x10]",
            "bl fcn.0000dde8",
            "ldr r3, [r5, -0xc]",
            "rsb r2, r3, 0x10",
            "sub r3, r3, 0x10",
            "asr r4, r4, r2",
            "strh r4, [r5, -0x10]",
            "add r6, r6, r3",
            "str r6, [r5, -0xc]",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.0000d4f0": {
        "function_address": "0x0000d4f0",
        "instructions": [
            "ldr r3, [0x0000d948]",
            "movw r2, 0x23d",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r7, r0",
            "ldr r4, [r0]",
            "sub sp, sp, 0x1c",
            "mvn r5, 0",
            "ldr r1, [r3]",
            "mov r3, 0",
            "ldr r0, [r0, 4]",
            "mov lr, r3",
            "ldr r8, [r7, 0x10]",
            "str r2, [r1, 0x480]",
            "mov r2, r3",
            "str r3, [r1, 0x47c]",
            "b 0xd570",
            "ldrh ip, [r4, r3]",
            "cmp ip, 0",
            "addeq r6, r4, r3",
            "strheq ip, [r6, 2]",
            "beq 0xd568",
            "ldr ip, [r1, 0x47c]",
            "mov r5, r2",
            "add ip, ip, 1",
            "str ip, [r1, 0x47c]",
            "lsl ip, ip, 1",
            "strh r2, [r1, ip]",
            "add ip, r1, r2",
            "add ip, ip, 0x1440",
            "strb lr, [ip, 0x34]",
            "add r2, r2, 1",
            "add r3, r3, 4",
            "cmp r2, r8",
            "blt 0xd530",
            "ldr r3, [0x0000d948]",
            "mov lr, 0",
            "movw r1, 0x1eb0",
            "movw r2, 0x1eb4",
            "ldr r6, [r3]",
            "b 0xd5f0",
            "cmp r5, 1",
            "add sl, sl, 1",
            "addle r5, r5, 1",
            "str sl, [r6, 0x47c]",
            "uxthle r3, r5",
            "lsl sl, sl, 1",
            "movgt r3, 0",
            "mov sb, 1",
            "lsl ip, r3, 2",
            "strh r3, [r6, sl]",
            "add r3, r6, r3",
            "add r3, r3, 0x1440",
            "strh sb, [r4, ip]",
            "add r3, r3, 0x30",
            "cmp r0, 0",
            "strb lr, [r3, 4]",
            "addne ip, r0, ip",
            "ldr r3, [r6, r1]",
            "sub r3, r3, 1",
            "str r3, [r6, r1]",
            "ldrhne r3, [ip, 2]",
            "ldrne ip, [r6, r2]",
            "rsbne r3, r3, ip",
            "strne r3, [r6, r2]",
            "ldr sl, [r6, 0x47c]",
            "cmp sl, 1",
            "ble 0xd590",
            "asr sl, sl, 1",
            "str r5, [r7, 0x18]",
            "mov r1, sl",
            "mov r0, r4",
            "bl fcn.0000d360",
            "subs sl, sl, 1",
            "bne 0xd604",
            "add sl, r6, r8",
            "add sb, r4, r8, lsl 2",
            "add sl, sl, 0x1440",
            "add sl, sl, 0x33",
            "ldr r3, [r6, 0x47c]",
            "mov r0, r4",
            "ldrh fp, [r6, 2]",
            "mov r1, 1",
            "lsl r2, r3, 1",
            "sub r3, r3, 1",
            "str r3, [r6, 0x47c]",
            "ldrh r2, [r6, r2]",
            "strh r2, [r6, 2]",
            "bl fcn.0000d360",
            "ldr r2, [r6, 0x480]",
            "lsl r0, fp, 2",
            "ldrh r3, [r6, 2]",
            "sub r2, r2, 1",
            "lsl r1, r2, 1",
            "sub r2, r2, 1",
            "str r2, [r6, 0x480]",
            "lsl ip, r3, 2",
            "lsl r2, r2, 1",
            "strh fp, [r6, r1]",
            "add r1, r4, ip",
            "strh r3, [r6, r2]",
            "add r2, r4, r0",
            "ldrh ip, [r4, ip]",
            "add fp, r6, fp",
            "ldrh r0, [r4, r0]",
            "add r3, r6, r3",
            "add fp, fp, 0x1440",
            "add r3, r3, 0x1440",
            "add fp, fp, 0x30",
            "add r3, r3, 0x30",
            "add r0, ip, r0",
            "strh r0, [sb], 4",
            "ldrb r0, [fp, 4]",
            "ldrb r3, [r3, 4]",
            "cmp r0, r3",
            "movhs r3, r0",
            "mov r0, r4",
            "add r3, r3, 1",
            "strb r3, [sl, 1]!",
            "uxth r3, r8",
            "add r8, r8, 1",
            "strh r3, [r1, 2]",
            "mov r1, 1",
            "strh r3, [r2, 2]",
            "strh r3, [r6, 2]",
            "bl fcn.0000d360",
            "ldr r3, [r6, 0x47c]",
            "cmp r3, 1",
            "bgt 0xd628",
            "ldr r3, [r6, 0x480]",
            "add ip, r6, 0x1440",
            "ldrh r0, [r6, 2]",
            "add ip, ip, 0x12",
            "ldr r2, [r7, 8]",
            "sub r3, r3, 1",
            "ldr r8, [r7, 0x18]",
            "str r3, [r6, 0x480]",
            "lsl r3, r3, 1",
            "ldr r1, [r7]",
            "strh r0, [r6, r3]",
            "ldr r3, [r7, 0xc]",
            "str r2, [sp, 0x14]",
            "mov r2, 0",
            "stmib sp, {r3, r8}",
            "ldr r3, [r7, 0x14]",
            "ldr r7, [r7, 4]",
            "str r7, [sp, 0xc]",
            "add r2, r2, 1",
            "mov sb, 0",
            "cmp r2, 0x10",
            "strh sb, [ip, 2]!",
            "bne 0xd738",
            "ldr r2, [0x0000d948]",
            "add r0, r1, r0, lsl 2",
            "movw sl, 0x1eb0",
            "strh sb, [r0, 2]",
            "ldr r2, [r2]",
            "ldr ip, [r6, 0x480]",
            "add r0, ip, 1",
            "add ip, r2, ip, lsl 1",
            "str ip, [sp, 0x10]",
            "mov ip, 0",
            "b 0xd828",
            "ldr r6, [sp, 0x10]",
            "ldrh r7, [r6, 2]!",
            "str r6, [sp, 0x10]",
            "lsl r8, r7, 2",
            "add sb, r1, r8",
            "ldrh r6, [sb, 2]",
            "add r6, r1, r6, lsl 2",
            "ldrh r6, [r6, 2]",
            "add r6, r6, 1",
            "cmp r6, r3",
            "movgt r6, r3",
            "addgt ip, ip, 1",
            "strh r6, [sb, 2]",
            "ldr sb, [sp, 8]",
            "cmp r7, sb",
            "bgt 0xd824",
            "add fp, r6, 0xa20",
            "add fp, fp, 8",
            "add fp, r2, fp, lsl 1",
            "ldrh sb, [fp, 4]",
            "add sb, sb, 1",
            "strh sb, [fp, 4]",
            "ldr sb, [sp, 4]",
            "cmp r7, sb",
            "rsbge r7, sb, r7",
            "ldrge sb, [sp, 0x14]",
            "movlt r7, 0",
            "ldrbge r7, [sb, r7]",
            "ldrh sb, [r1, r8]",
            "add fp, r7, r6",
            "ldr r6, [r2, sl]",
            "mla r6, sb, fp, r6",
            "str r6, [r2, sl]",
            "ldr r6, [sp, 0xc]",
            "cmp r6, 0",
            "beq 0xd824",
            "add r8, r6, r8",
            "ldrh r6, [r8, 2]",
            "movw r8, 0x1eb4",
            "add r7, r7, r6",
            "ldr r6, [r2, r8]",
            "mla r7, sb, r7, r6",
            "str r7, [r2, r8]",
            "add r0, r0, 1",
            "cmp r0, 0x23c",
            "ble 0xd778",
            "cmp ip, 0",
            "beq 0xd934",
            "ldr r2, [0x0000d948]",
            "add r7, r3, 0xa20",
            "add r7, r7, 8",
            "ldr r2, [r2]",
            "add r7, r2, r7, lsl 1",
            "sub r6, r3, 1",
            "add sl, r7, 4",
            "b 0xd85c",
            "sub r6, r6, 1",
            "ldrh r8, [sl, -2]!",
            "cmp r8, 0",
            "beq 0xd858",
            "add sl, r6, 0xa20",
            "add r6, r6, 0xa20",
            "add r6, r6, 9",
            "add sl, r2, sl, lsl 1",
            "add r6, r2, r6, lsl 1",
            "sub r8, r8, 1",
            "strh r8, [sl, 0x14]",
            "sub ip, ip, 2",
            "ldrh r8, [r6, 4]",
            "cmp ip, 0",
            "add r8, r8, 2",
            "strh r8, [r6, 4]",
            "ldrh r6, [r7, 4]",
            "sub r6, r6, 1",
            "strh r6, [r7, 4]",
            "bgt 0xd84c",
            "add fp, r3, 0xa20",
            "movw r6, 0x1eb0",
            "add fp, fp, 9",
            "add fp, r2, fp, lsl 1",
            "add fp, fp, 4",
            "b 0xd92c",
            "ldrh ip, [fp, -2]!",
            "add sb, r2, r0, lsl 1",
            "str r4, [sp, 0xc]",
            "b 0xd91c",
            "ldrh r7, [sb, -2]!",
            "sub r0, r0, 1",
            "ldr sl, [sp, 8]",
            "cmp r7, sl",
            "bgt 0xd91c",
            "lsl r7, r7, 2",
            "add sl, r1, r7",
            "ldrh r8, [sl, 2]",
            "cmp r8, r3",
            "beq 0xd918",
            "rsb r8, r8, r3",
            "ldrh r7, [r1, r7]",
            "str r8, [sp, 4]",
            "ldr r4, [sp, 4]",
            "ldr r8, [r2, r6]",
            "mla r8, r7, r4, r8",
            "str r8, [r2, r6]",
            "strh r3, [sl, 2]",
            "sub ip, ip, 1",
            "cmp ip, 0",
            "bne 0xd8d0",
            "ldr r4, [sp, 0xc]",
            "sub r3, r3, 1",
            "cmp r3, 0",
            "bne 0xd8c0",
            "mov r0, r4",
            "mov r1, r5",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "b fcn.0000d450"
        ]
    },
    "fcn.0000d360": {
        "function_address": "0x0000d360",
        "instructions": [
            "ldr r3, [0x0000d44c]",
            "lsl r2, r1, 1",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "ldr r3, [r3]",
            "ldrh ip, [r3, r2]",
            "ldr r8, [r3, 0x47c]",
            "add r4, r3, ip",
            "add r4, r4, 0x1440",
            "add fp, r0, ip, lsl 2",
            "add r4, r4, 0x30",
            "b 0xd438",
            "bge 0xd3ec",
            "add r5, r2, 1",
            "lsl r6, r5, 1",
            "ldrh r7, [r3, r6]",
            "lsl r6, r7, 2",
            "ldrh sb, [r0, r6]",
            "lsl r6, r2, 1",
            "ldrh r6, [r3, r6]",
            "lsl sl, r6, 2",
            "ldrh sl, [r0, sl]",
            "cmp sb, sl",
            "movlo r2, r5",
            "blo 0xd3ec",
            "bne 0xd3ec",
            "add r7, r3, r7",
            "add r6, r3, r6",
            "add r7, r7, 0x1440",
            "add r6, r6, 0x1440",
            "add r7, r7, 0x30",
            "add r6, r6, 0x30",
            "ldrb r7, [r7, 4]",
            "ldrb r6, [r6, 4]",
            "cmp r7, r6",
            "movls r2, r5",
            "lsl r5, r2, 1",
            "ldrh r7, [fp]",
            "ldrh r5, [r3, r5]",
            "lsl r6, r5, 2",
            "ldrh r6, [r0, r6]",
            "cmp r7, r6",
            "blo 0xd440",
            "bne 0xd428",
            "add r6, r3, r5",
            "ldrb r7, [r4, 4]",
            "add r6, r6, 0x1440",
            "add r6, r6, 0x30",
            "ldrb r6, [r6, 4]",
            "cmp r7, r6",
            "bls 0xd440",
            "lsl r1, r1, 1",
            "strh r5, [r3, r1]",
            "mov r1, r2",
            "lsl r2, r2, 1",
            "cmp r2, r8",
            "ble 0xd38c",
            "lsl r1, r1, 1",
            "strh ip, [r3, r1]",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0000e1e8": {
        "function_address": "0x0000e1e8",
        "instructions": [
            "ldr r3, [0x0000e248]",
            "push {r4, lr}",
            "ldr r4, [r3]",
            "ldr r3, [r4, -0xc]",
            "cmp r3, 8",
            "ble 0xe20c",
            "ldrh r0, [r4, -0x10]",
            "bl fcn.0000dde8",
            "b 0xe238",
            "cmp r3, 0",
            "ble 0xe238",
            "ldr r3, [r4, -0x18]",
            "ldr r2, [r4, -0x28]",
            "ldrh r1, [r4, -0x10]",
            "strb r1, [r2, r3]",
            "add r3, r3, 1",
            "cmp r3, 0x2000",
            "str r3, [r4, -0x18]",
            "bne 0xe238",
            "bl fcn.0000ddb4",
            "mov r3, 0",
            "strh r3, [r4, -0x10]",
            "str r3, [r4, -0xc]",
            "pop {r4, pc}"
        ]
    },
    "fcn.0000e060": {
        "function_address": "0x0000e060",
        "instructions": [
            "push {r0, r1, r2, r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "movw r3, 0x1ea0",
            "ldr r2, [0x0000e1c0]",
            "mov r6, r0",
            "str r1, [sp, 4]",
            "ldr r4, [r2]",
            "ldr r1, [r4, r3]",
            "cmp r1, 0",
            "beq 0xe1a8",
            "mov r5, 0",
            "mov fp, r5",
            "mov sb, r5",
            "mov r7, r5",
            "tst r7, 7",
            "bne 0xe0b8",
            "ldr r1, [0x0000e1c0]",
            "ldr r3, [r1]",
            "add r3, r3, fp",
            "add fp, fp, 1",
            "add r3, r3, 0x1a80",
            "add r3, r3, 0x20",
            "ldrb r5, [r3]",
            "ldr r3, [r4, -0x30]",
            "tst r5, 1",
            "ldrb r8, [r3, r7]",
            "add r7, r7, 1",
            "lsleq r8, r8, 2",
            "addeq r3, r6, r8",
            "ldrheq r0, [r6, r8]",
            "ldrheq r1, [r3, 2]",
            "beq 0xe190",
            "add r3, r4, r8",
            "add r3, r3, 0x1680",
            "add r3, r3, 0x30",
            "ldrb sl, [r3, 1]",
            "add r2, sl, 0x100",
            "add r2, r2, 1",
            "lsl r2, r2, 2",
            "add r3, r6, r2",
            "ldrh r0, [r6, r2]",
            "ldrh r1, [r3, 2]",
            "bl fcn.0000de6c",
            "ldr r2, [0x0000e1c4]",
            "ldrb r1, [r2, sl]",
            "cmp r1, 0",
            "beq 0xe12c",
            "add sl, sl, 0x660",
            "add sl, r4, sl, lsl 2",
            "ldr r0, [sl, 0x34]",
            "rsb r0, r0, r8",
            "bl fcn.0000de6c",
            "ldr r2, [r4, -0x2c]",
            "lsl r3, sb, 1",
            "ldr r1, [sp, 4]",
            "add sb, sb, 1",
            "ldrh r8, [r2, r3]",
            "cmp r8, 0xff",
            "addhi r3, r4, r8, lsr 7",
            "addls r3, r4, r8",
            "addls r3, r3, 0x1780",
            "addhi r3, r3, 0x1880",
            "add r3, r3, 0x30",
            "ldrb sl, [r3, 1]",
            "lsl r2, sl, 2",
            "add r3, r1, r2",
            "ldrh r0, [r1, r2]",
            "ldrh r1, [r3, 2]",
            "bl fcn.0000de6c",
            "ldr r2, [0x0000e1c8]",
            "ldrb r1, [r2, sl]",
            "cmp r1, 0",
            "beq 0xe194",
            "add sl, sl, 0x680",
            "add sl, sl, 0xa",
            "ldr r0, [r4, sl, lsl 2]",
            "rsb r0, r0, r8",
            "bl fcn.0000de6c",
            "movw r1, 0x1ea0",
            "ldr r3, [r4, r1]",
            "cmp r7, r3",
            "lsrlo r5, r5, 1",
            "blo 0xe094",
            "add r6, r6, 0x400",
            "ldrh r0, [r6]",
            "ldrh r1, [r6, 2]",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "b fcn.0000de6c"
        ]
    },
    "fcn.0000ded8": {
        "function_address": "0x0000ded8",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r8, 0",
            "ldrh r5, [r0, 2]",
            "mov fp, r1",
            "mov sb, r0",
            "mvn r3, 0",
            "mov sl, r8",
            "ldr r7, [0x0000e05c]",
            "cmp r5, 0",
            "moveq r1, 3",
            "movne r1, 4",
            "moveq r2, 0x8a",
            "movne r2, 7",
            "b 0xe050",
            "add r4, r8, 1",
            "ldrh r6, [sb, 6]",
            "cmp r4, r2",
            "bge 0xdf28",
            "cmp r5, r6",
            "beq 0xe040",
            "cmp r4, r1",
            "bge 0xdf58",
            "ldr r3, [r7]",
            "add r8, r5, 0x4d0",
            "add r8, r8, 8",
            "add r8, r3, r8, lsl 2",
            "ldrh r0, [r8, 4]",
            "ldrh r1, [r8, 6]",
            "bl fcn.0000de6c",
            "subs r4, r4, 1",
            "bne 0xdf40",
            "b 0xdffc",
            "cmp r5, 0",
            "beq 0xdfac",
            "cmp r5, r3",
            "beq 0xdf88",
            "ldr r2, [r7]",
            "add r3, r5, 0x4d0",
            "add r3, r3, 8",
            "mov r4, r8",
            "add r3, r2, r3, lsl 2",
            "ldrh r0, [r3, 4]",
            "ldrh r1, [r3, 6]",
            "bl fcn.0000de6c",
            "ldr r3, [r7]",
            "movw r2, 0x13a4",
            "ldrh r0, [r3, r2]",
            "add r2, r2, 2",
            "ldrh r1, [r3, r2]",
            "bl fcn.0000de6c",
            "sub r0, r4, 3",
            "mov r1, 2",
            "b 0xdff8",
            "cmp r4, 0xa",
            "bgt 0xdfd8",
            "ldr r3, [r7]",
            "movw r2, 0x13a8",
            "ldrh r0, [r3, r2]",
            "add r2, r2, 2",
            "ldrh r1, [r3, r2]",
            "bl fcn.0000de6c",
            "sub r0, r4, 3",
            "mov r1, 3",
            "b 0xdff8",
            "ldr r3, [r7]",
            "movw r2, 0x13ac",
            "ldrh r0, [r3, r2]",
            "add r2, r2, 2",
            "ldrh r1, [r3, r2]",
            "bl fcn.0000de6c",
            "sub r0, r4, 0xb",
            "mov r1, 7",
            "bl fcn.0000de6c",
            "cmp r6, 0",
            "beq 0xe01c",
            "cmp r5, r6",
            "moveq r3, r6",
            "moveq r1, 3",
            "moveq r2, 6",
            "beq 0xe03c",
            "b 0xe030",
            "mov r3, r5",
            "mov r1, 3",
            "mov r2, 0x8a",
            "mov r4, r6",
            "b 0xe040",
            "mov r3, r5",
            "mov r1, 4",
            "mov r2, 7",
            "mov r4, 0",
            "add sl, sl, 1",
            "add sb, sb, 4",
            "mov r8, r4",
            "mov r5, r6",
            "cmp sl, fp",
            "ble 0xdf10",
            "pop {r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0000e1cc": {
        "function_address": "0x0000e1cc",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r0",
            "uxth r0, r0",
            "bl fcn.0000dde8",
            "lsr r0, r4, 0x10",
            "pop {r4, lr}",
            "b fcn.0000dde8"
        ]
    },
    "fcn.0000d450": {
        "function_address": "0x0000d450",
        "instructions": [
            "ldr r3, [0x0000d4ec]",
            "mov r2, 0",
            "push {r4, r5, r6, r7, lr}",
            "mov r7, r1",
            "sub sp, sp, 0x24",
            "mov r6, r0",
            "add r0, sp, 0x1e",
            "ldr r1, [r3]",
            "mov r3, sp",
            "add r1, r1, 0x1440",
            "add r1, r1, 0x12",
            "ldrh ip, [r1, 2]!",
            "add r2, r2, ip",
            "uxth r2, r2",
            "lsl r2, r2, 1",
            "uxth r2, r2",
            "strh r2, [r3, 2]!",
            "cmp r3, r0",
            "bne 0xd47c",
            "mov r4, 0",
            "mov r5, r4",
            "b 0xd4dc",
            "add r3, r6, r4",
            "ldrh r1, [r3, 2]",
            "cmp r1, 0",
            "beq 0xd4d4",
            "add r2, sp, 0x20",
            "add r3, r2, r1, lsl 1",
            "ldrh r0, [r3, -0x20]",
            "add r2, r0, 1",
            "strh r2, [r3, -0x20]",
            "bl fcn.0000d278",
            "strh r0, [r6, r4]",
            "add r5, r5, 1",
            "add r4, r4, 4",
            "cmp r5, r7",
            "ble 0xd4a8",
            "add sp, sp, 0x24",
            "pop {r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.0000d278": {
        "function_address": "0x0000d278",
        "instructions": [
            "mov r3, r0",
            "mov r0, 0",
            "sub r1, r1, 1",
            "and r2, r3, 1",
            "cmp r1, 0",
            "orr r0, r2, r0",
            "bgt 0xd298",
            "bx lr",
            "lsr r3, r3, 1",
            "lsl r0, r0, 1",
            "b 0xd280"
        ]
    },
    "fcn.0000dcac": {
        "function_address": "0x0000dcac",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "ldr r3, [0x0000ddb0]",
            "ldr r4, [r3]",
            "ldr r5, [r4, -0x34]",
            "ldr r3, [r4, -0x3c]",
            "rsb r5, r5, 0x10000",
            "rsb r5, r3, r5",
            "cmn r5, 1",
            "mvneq r5, 1",
            "beq 0xdd68",
            "movw r2, 0xfef9",
            "cmp r3, r2",
            "bls 0xdd68",
            "ldr r0, [r4, -0x24]",
            "mov r2, 0x8000",
            "add r1, r0, 0x8000",
            "bl sym.imp.memcpy",
            "ldr r3, [r4, -0x38]",
            "mov r2, 0x2000",
            "movw ip, 0x7fff",
            "sub r3, r3, 0x8000",
            "str r3, [r4, -0x38]",
            "ldr r3, [r4, -0x3c]",
            "sub r3, r3, 0x8000",
            "str r3, [r4, -0x3c]",
            "ldr r3, [r4, -0x48]",
            "sub r3, r3, 0x8000",
            "str r3, [r4, -0x48]",
            "ldr r3, [r4, -0x20]",
            "add r1, r3, 0x10000",
            "ldrh r0, [r1], 2",
            "cmp r0, ip",
            "eorhi r0, r0, 0x8000",
            "movls r0, 0",
            "subs r2, r2, 1",
            "strh r0, [r1, -2]",
            "bne 0xdd24",
            "add r0, r3, 0x10000",
            "movw r1, 0x7fff",
            "ldrh r2, [r3], 2",
            "cmp r2, r1",
            "eorhi r2, r2, 0x8000",
            "movls r2, 0",
            "cmp r3, r0",
            "strh r2, [r3, -2]",
            "bne 0xdd48",
            "add r5, r5, 0x8000",
            "ldr r3, [r4, -0x14]",
            "cmp r3, 0",
            "popne {r3, r4, r5, pc}",
            "ldr r2, [r4, -0x34]",
            "mov r1, r5",
            "ldr r3, [r4, -0x3c]",
            "ldr r0, [r4, -0x24]",
            "add r3, r2, r3",
            "add r0, r0, r3",
            "bl fcn.0000dc3c",
            "sub r3, r0, 1",
            "cmn r3, 3",
            "ldrls r3, [r4, -0x34]",
            "movhi r3, 1",
            "strhi r3, [r4, -0x14]",
            "addls r0, r3, r0",
            "strls r0, [r4, -0x34]",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.0000e25c": {
        "function_address": "0x0000e25c",
        "instructions": [
            "ldr r3, [0x0000e518]",
            "push {r0, r1, r2, r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r7, r2",
            "mov r4, r1",
            "str r0, [sp, 4]",
            "ldr r5, [r3]",
            "movw r3, 0x1ea8",
            "ldr r2, [r5, r3]",
            "add r3, r3, 4",
            "ldrb r1, [r5, r3]",
            "add r6, r5, 0x1400",
            "movw r3, 0x1aa0",
            "mov r0, r6",
            "add r2, r5, r2",
            "add sl, r5, 0x480",
            "strb r1, [r2, r3]",
            "add sl, sl, 4",
            "bl fcn.0000d4f0",
            "add r0, r6, 0x1c",
            "add r8, r5, 0xd70",
            "bl fcn.0000d4f0",
            "movw r3, 0x1418",
            "mov r0, sl",
            "ldr r1, [r5, r3]",
            "add r8, r8, 8",
            "bl fcn.0000d94c",
            "movw r3, 0x1434",
            "mov r0, r8",
            "ldr r1, [r5, r3]",
            "bl fcn.0000d94c",
            "add r0, r6, 0x38",
            "mov r6, 0x12",
            "bl fcn.0000d4f0",
            "ldr r3, [0x0000e51c]",
            "ldrb r2, [r3, r6]",
            "add r2, r2, 0x4d0",
            "add r2, r5, r2, lsl 2",
            "ldrh r2, [r2, 0x26]",
            "cmp r2, 0",
            "bne 0xe308",
            "sub r6, r6, 1",
            "cmp r6, 2",
            "bne 0xe2e4",
            "movw r3, 0x1eb0",
            "add sb, r6, 1",
            "ldr r1, [r5, r3]",
            "movw fp, 0x1eb4",
            "add r2, sb, sb, lsl 1",
            "ldr r0, [r5, fp]",
            "ldr ip, [sp, 4]",
            "add r1, r1, 0xe",
            "add r1, r1, r2",
            "add r0, r0, 0xa",
            "str r1, [r5, r3]",
            "add r1, r1, 0xa",
            "lsr r1, r1, 3",
            "lsr r0, r0, 3",
            "add r3, r4, 4",
            "cmp r1, r0",
            "movhs r1, r0",
            "cmp r3, r1",
            "movhi r2, 0",
            "movls r2, 1",
            "cmp ip, 0",
            "moveq r2, 0",
            "cmp r2, 0",
            "beq 0xe3f0",
            "mov r0, r7",
            "mov r1, 3",
            "str r3, [sp]",
            "uxth r6, r4",
            "bl fcn.0000de6c",
            "movw r2, 0x1eb8",
            "ldr r3, [sp]",
            "ldr r1, [r5, r2]",
            "add r1, r1, 0xa",
            "bic r1, r1, 7",
            "add r3, r1, r3, lsl 3",
            "str r3, [r5, r2]",
            "bl fcn.0000e1e8",
            "mov r0, r6",
            "bl fcn.0000dde8",
            "mvn r0, r6",
            "uxth r0, r0",
            "bl fcn.0000dde8",
            "b 0xe3e4",
            "ldr r0, [sp, 4]",
            "ldr r3, [r5, -0x18]",
            "ldr r2, [r5, -0x28]",
            "ldrb r1, [r0], 1",
            "str r0, [sp, 4]",
            "strb r1, [r2, r3]",
            "add r3, r3, 1",
            "cmp r3, 0x2000",
            "str r3, [r5, -0x18]",
            "bne 0xe3e0",
            "bl fcn.0000ddb4",
            "sub r4, r4, 1",
            "cmp r4, 0",
            "bne 0xe3b4",
            "b 0xe4e8",
            "cmp r0, r1",
            "bne 0xe428",
            "add r0, r7, 2",
            "mov r1, 3",
            "bl fcn.0000de6c",
            "add r0, r5, 0xe60",
            "add r1, r5, 0x12c0",
            "add r1, r1, 0x2c",
            "add r0, r0, 0xc",
            "bl fcn.0000e060",
            "movw r3, 0x1eb8",
            "ldr r2, [r5, fp]",
            "ldr r1, [r5, r3]",
            "b 0xe4dc",
            "add r0, r7, 4",
            "mov r1, 3",
            "str r2, [sp]",
            "bl fcn.0000de6c",
            "movw r3, 0x1418",
            "mov r1, 5",
            "ldr fp, [r5, r3]",
            "add r3, r3, 0x1c",
            "ldr r4, [r5, r3]",
            "sub r0, fp, 0x100",
            "bl fcn.0000de6c",
            "mov r0, r4",
            "mov r1, 5",
            "bl fcn.0000de6c",
            "sub r0, r6, 3",
            "mov r1, 4",
            "bl fcn.0000de6c",
            "ldr r2, [sp]",
            "ldr r3, [0x0000e51c]",
            "mov r6, r2",
            "b 0xe4a0",
            "ldrb r2, [r3, r6]",
            "mov r1, 3",
            "add r6, r6, 1",
            "add r2, r2, 0x4d0",
            "add r2, r5, r2, lsl 2",
            "ldrh r0, [r2, 0x26]",
            "str r3, [sp]",
            "bl fcn.0000de6c",
            "ldr r3, [sp]",
            "cmp r6, sb",
            "blt 0xe47c",
            "mov r0, sl",
            "mov r1, fp",
            "bl fcn.0000ded8",
            "mov r0, r8",
            "mov r1, r4",
            "bl fcn.0000ded8",
            "mov r1, r8",
            "mov r0, sl",
            "bl fcn.0000e060",
            "movw r3, 0x1eb8",
            "movw r2, 0x1eb0",
            "ldr r1, [r5, r3]",
            "ldr r2, [r5, r2]",
            "add r2, r1, r2",
            "add r2, r2, 3",
            "str r2, [r5, r3]",
            "bl fcn.0000d2a4",
            "cmp r7, 0",
            "beq 0xe508",
            "bl fcn.0000e1e8",
            "movw r3, 0x1eb8",
            "ldr r2, [r5, r3]",
            "add r2, r2, 7",
            "str r2, [r5, r3]",
            "movw r3, 0x1eb8",
            "ldr r0, [r5, r3]",
            "lsr r0, r0, 3",
            "pop {r1, r2, r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0000d94c": {
        "function_address": "0x0000d94c",
        "instructions": [
            "add r3, r0, r1, lsl 2",
            "mvn ip, 0",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "ldrh r2, [r0, 2]",
            "mvn r5, 0",
            "movw sb, 0x13ac",
            "movw sl, 0x13a8",
            "strh ip, [r3, 6]",
            "movw fp, 0x13a4",
            "ldr r3, [0x0000da84]",
            "cmp r2, 0",
            "moveq r7, 3",
            "movne r7, 4",
            "moveq r6, 0x8a",
            "movne r6, 7",
            "ldr ip, [r3]",
            "mov r3, 0",
            "mov r8, r3",
            "b 0xda78",
            "add r3, r3, 1",
            "ldrh r4, [r0, 6]",
            "cmp r3, r6",
            "bge 0xd9b0",
            "cmp r2, r4",
            "beq 0xda6c",
            "cmp r3, r7",
            "bge 0xd9d4",
            "add r5, r2, 0x4d0",
            "add r5, r5, 8",
            "add r5, ip, r5, lsl 2",
            "ldrh r6, [r5, 4]",
            "add r3, r3, r6",
            "strh r3, [r5, 4]",
            "b 0xda28",
            "cmp r2, 0",
            "beq 0xda0c",
            "cmp r2, r5",
            "beq 0xd9fc",
            "add r3, r2, 0x4d0",
            "add r3, r3, 8",
            "add r3, ip, r3, lsl 2",
            "ldrh r5, [r3, 4]",
            "add r5, r5, 1",
            "strh r5, [r3, 4]",
            "ldrh r3, [ip, fp]",
            "add r3, r3, 1",
            "strh r3, [ip, fp]",
            "b 0xda28",
            "cmp r3, 0xa",
            "ldrhle r3, [ip, sl]",
            "ldrhgt r3, [ip, sb]",
            "addle r3, r3, 1",
            "addgt r3, r3, 1",
            "strhle r3, [ip, sl]",
            "strhgt r3, [ip, sb]",
            "cmp r4, 0",
            "beq 0xda48",
            "cmp r2, r4",
            "movne r5, r2",
            "movne r7, 4",
            "movne r6, 7",
            "bne 0xda68",
            "b 0xda5c",
            "mov r5, r2",
            "mov r7, 3",
            "mov r6, 0x8a",
            "mov r3, r4",
            "b 0xda6c",
            "mov r5, r4",
            "mov r7, 3",
            "mov r6, 6",
            "mov r3, 0",
            "add r8, r8, 1",
            "add r0, r0, 4",
            "mov r2, r4",
            "cmp r8, r1",
            "ble 0xd998",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0000d2a4": {
        "function_address": "0x0000d2a4",
        "instructions": [
            "ldr r3, [0x0000d35c]",
            "mov r2, 0",
            "movw r1, 0x478",
            "ldr r3, [r3]",
            "add r0, r3, r2",
            "add r2, r2, 4",
            "cmp r2, r1",
            "add r0, r0, 0x480",
            "mov ip, 0",
            "strh ip, [r0, 4]",
            "bne 0xd2b4",
            "mov r2, 0",
            "add r1, r3, r2",
            "add r2, r2, 4",
            "cmp r2, 0x78",
            "add r1, r1, 0xd70",
            "mov r0, 0",
            "strh r0, [r1, 8]",
            "bne 0xd2d4",
            "mov r1, 0",
            "add ip, r3, r1",
            "add r1, r1, 4",
            "cmp r1, 0x4c",
            "mov r2, 0",
            "add ip, ip, 0x1340",
            "mov r0, r2",
            "strh r2, [ip, 0x24]",
            "bne 0xd2f4",
            "mov r1, 1",
            "movw ip, 0x884",
            "strh r1, [r3, ip]",
            "movw ip, 0x1eb4",
            "str r2, [r3, ip]",
            "sub ip, ip, 4",
            "str r2, [r3, ip]",
            "sub ip, ip, 8",
            "str r2, [r3, ip]",
            "sub ip, ip, 4",
            "str r2, [r3, ip]",
            "sub ip, ip, 4",
            "str r2, [r3, ip]",
            "movw r2, 0x1eac",
            "strb r0, [r3, r2]",
            "add r2, r2, 1",
            "strb r1, [r3, r2]",
            "bx lr"
        ]
    },
    "fcn.00029fd8": {
        "function_address": "0x00029fd8",
        "instructions": [
            "push {r3, lr}",
            "bl sym.imp.pipe",
            "cmp r0, 0",
            "popeq {r3, pc}",
            "ldr r0, [pc]",
            "bl fcn.00028900"
        ]
    },
    "sym.imp.pipe": {
        "function_address": "0x0000c458",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x33c]!"
        ]
    },
    "fcn.00029168": {
        "function_address": "0x00029168",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x84",
            "ldr sl, aav.0x00029160",
            "cmp r2, 0",
            "movne fp, r2",
            "add r7, sp, 0x18",
            "ldr r5, [sp, 0xac]",
            "mov r6, r1",
            "moveq fp, sl",
            "cmp r3, 0",
            "movne sl, r3",
            "ldr r2, sym.imp.lstat64",
            "cmp r5, 0",
            "mov r4, r0",
            "moveq r3, 6",
            "movne r3, 2",
            "tst r3, r1",
            "ldr r3, sym.imp.stat64",
            "mov r1, r7",
            "ldr r8, [sp, 0xa8]",
            "moveq r3, r2",
            "blx r3",
            "cmp r0, 0",
            "blt 0x29304",
            "ldr r3, [sp, 0x28]",
            "and r3, r3, 0xf000",
            "cmp r3, 0x4000",
            "beq 0x291f0",
            "mov r0, r4",
            "mov r1, r7",
            "mov r2, r8",
            "mov r3, r5",
            "blx fp",
            "b 0x29314",
            "tst r6, 1",
            "bne 0x29210",
            "mov r0, r4",
            "mov r1, r7",
            "mov r2, r8",
            "mov r3, r5",
            "blx sl",
            "b 0x29314",
            "ands r3, r6, 8",
            "str r3, [sp, 0x10]",
            "bne 0x29244",
            "mov r0, r4",
            "mov r1, r7",
            "mov r2, r8",
            "mov r3, r5",
            "blx sl",
            "cmp r0, 0",
            "beq 0x29304",
            "cmp r0, 2",
            "moveq r0, 1",
            "beq 0x29314",
            "mov r0, r4",
            "bl sym.imp.opendir",
            "cmp r0, 0",
            "str r0, [sp, 0xc]",
            "beq 0x29304",
            "mov sb, 1",
            "mov r7, r5",
            "add r3, r5, sb",
            "mov r5, r4",
            "str r3, [sp, 0x14]",
            "b 0x292b0",
            "mov r0, r5",
            "add r1, r1, 0x13",
            "bl fcn.000268c8",
            "subs r4, r0, 0",
            "beq 0x292b0",
            "ldr r3, [sp, 0x14]",
            "mov r1, r6",
            "mov r2, fp",
            "str r8, [sp]",
            "str r3, [sp, 4]",
            "mov r3, sl",
            "bl fcn.00029168",
            "cmp r0, 0",
            "mov r0, r4",
            "moveq sb, 0",
            "bl sym.imp.free",
            "ldr r0, [sp, 0xc]",
            "bl sym.imp.readdir64",
            "subs r1, r0, 0",
            "bne 0x29270",
            "ldr r0, [sp, 0xc]",
            "mov r4, r5",
            "bl sym.imp.closedir",
            "ldr r3, [sp, 0x10]",
            "mov r5, r7",
            "cmp r3, 0",
            "beq 0x292f8",
            "mov r0, r4",
            "add r1, sp, 0x18",
            "mov r2, r8",
            "mov r3, r7",
            "blx sl",
            "cmp r0, 0",
            "beq 0x29304",
            "subs r0, sb, 0",
            "movne r0, 1",
            "b 0x29314",
            "ldr r0, aav.0x0005ad0c",
            "mov r1, r4",
            "bl fcn.000288b8",
            "mov r0, 0",
            "add sp, sp, 0x84",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.imp.opendir": {
        "function_address": "0x0000ba98",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x9bc]!"
        ]
    },
    "fcn.000268c8": {
        "function_address": "0x000268c8",
        "instructions": [
            "cmp r1, 0",
            "beq 0x26900",
            "ldrb r3, [r1]",
            "cmp r3, 0x2e",
            "bne 0x26900",
            "ldrb r3, [r1, 1]",
            "cmp r3, 0",
            "moveq r0, r3",
            "bxeq lr",
            "cmp r3, 0x2e",
            "bne 0x26900",
            "ldrb r3, [r1, 2]",
            "cmp r3, 0",
            "beq 0x26904",
            "b fcn.00026868",
            "mov r0, r3",
            "bx lr"
        ]
    },
    "sym.imp.readdir64": {
        "function_address": "0x0000c434",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x354]!"
        ]
    },
    "sym.imp.closedir": {
        "function_address": "0x0000bdbc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x7a4]!"
        ]
    },
    "fcn.0000f214": {
        "function_address": "0x0000f214",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "sub sp, sp, 0x28",
            "mov r4, r1",
            "add r5, sp, 0xc",
            "mov r6, r0",
            "mov r0, r5",
            "strd r2, r3, [sp]",
            "mov r2, r4",
            "ldr r1, str._0llo",
            "bl sym.imp.sprintf",
            "add r3, sp, 0x28",
            "rsb r0, r4, r0",
            "add r1, r5, r0",
            "add r0, r3, r0",
            "ldrb r3, [r0, -0x1c]",
            "mov r2, r4",
            "mov r0, r6",
            "cmp r3, 0x30",
            "addeq r1, r1, 1",
            "bl sym.imp.memcpy",
            "add sp, sp, 0x28",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.imp.sprintf": {
        "function_address": "0x0000c0f8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x57c]!"
        ]
    },
    "fcn.0000f270": {
        "function_address": "0x0000f270",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r5, r0",
            "add r0, r1, 0x100",
            "mov r4, r1",
            "add r0, r0, 1",
            "ldr r1, aav.0x000597f0",
            "bl sym.imp.strcpy",
            "mov r1, 0x20",
            "mov r2, 8",
            "add r0, r4, 0x94",
            "bl sym.imp.memset",
            "mov r3, r4",
            "add r1, r4, 0x200",
            "mov r2, 0",
            "ldrb r0, [r3], 1",
            "cmp r3, r1",
            "add r2, r2, r0",
            "bne 0xf2a8",
            "add r0, r4, 0x94",
            "asr r3, r2, 0x1f",
            "mov r1, 7",
            "bl fcn.0000f214",
            "mov r0, r5",
            "mov r1, r4",
            "mov r2, 0x200",
            "pop {r4, r5, r6, lr}",
            "b fcn.0002a0a0"
        ]
    },
    "fcn.00028b98": {
        "function_address": "0x00028b98",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r3, 0",
            "mov r4, r0",
            "mov r5, r1",
            "mov r7, r2",
            "ldr r8, [r0, 4]",
            "b 0x28b2c",
            "ldr r2, [r4]",
            "add r0, r2, r3, lsl 4",
            "ldr r2, [r2, r3, lsl 4]",
            "cmp r2, r5",
            "bne 0x28b28",
            "add r0, r0, 4",
            "pop {r4, r5, r6, r7, r8, pc}",
            "add r3, r3, 1",
            "cmp r3, r8",
            "blt 0x28b0c",
            "add r1, r8, 1",
            "lsl r6, r8, 4",
            "str r1, [r4, 4]",
            "lsl r1, r1, 4",
            "ldr r0, [r4]",
            "bl fcn.00029e84",
            "mov r1, r0",
            "ldr r2, fcn.0002652c",
            "ldr r0, [0x00028bac]",
            "b 0x28af0"
        ]
    },
    "fcn.0000f2e0": {
        "function_address": "0x0000f2e0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "subs r7, r3, 0",
            "movne r7, 1",
            "sub sp, sp, 0x200",
            "mov r5, r0",
            "add r6, r7, 1",
            "mov r0, r2",
            "mov sb, r1",
            "mov r8, r2",
            "bl sym.imp.strlen",
            "mov r2, 0x200",
            "add r6, r6, r0",
            "mov r1, 0",
            "mov r0, sp",
            "bl sym.imp.memset",
            "mov r0, sp",
            "ldr r1, str.._.__LongLink",
            "bl sym.imp.strcpy",
            "ldr lr, aav.0x00059754",
            "add sl, sp, 0x64",
            "mov ip, sl",
            "lsl r7, r7, 1",
            "mov r4, sp",
            "ldm lr!, {r0, r1, r2, r3}",
            "stm ip!, {r0, r1, r2, r3}",
            "ldm lr!, {r0, r1, r2, r3}",
            "stm ip!, {r0, r1, r2, r3}",
            "ldm lr, {r0, r1, r2, r3}",
            "stm ip, {r0, r1, r2, r3}",
            "mov r2, r6",
            "asr r3, r2, 0x1f",
            "add r0, sp, 0x7c",
            "mov r1, 0xc",
            "bl fcn.0000f214",
            "mov r0, r5",
            "mov r1, sp",
            "strb sb, [sp, 0x9c]",
            "bl fcn.0000f270",
            "rsb r2, r7, r6",
            "rsb r6, r6, 0",
            "lsl r6, r6, 0x17",
            "mov r0, r5",
            "mov r1, r8",
            "lsr r6, r6, 0x17",
            "bl fcn.0002a0a0"
        ]
    },
    "fcn.0002a6d8": {
        "function_address": "0x0002a6d8",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r5, r0",
            "bl fcn.0002a674"
        ]
    },
    "fcn.0002a674": {
        "function_address": "0x0002a674",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r5, 0",
            "mov r6, r0",
            "mov r4, r5",
            "add r5, r5, 0x50",
            "mov r0, r4",
            "mov r1, r5",
            "bl fcn.00029e84"
        ]
    },
    "sym.imp.readlink": {
        "function_address": "0x0000b870",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xb2c]!"
        ]
    },
    "fcn.0000f3d8": {
        "function_address": "0x0000f3d8",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "sub sp, sp, 0x200",
            "mov r7, r0",
            "mov sl, r1",
            "mov r8, r2",
            "mov r1, 0",
            "mov r2, 0x200",
            "mov r0, sp",
            "mov r4, r3",
            "add sb, sp, 0x7c",
            "bl sym.imp.memset",
            "mov r1, sl",
            "mov r2, 0x64",
            "mov r0, sp",
            "mov r5, sp",
            "bl sym.imp.strncpy",
            "ldr ip, [r4, 0x10]",
            "movw r2, 0xfff",
            "add r0, sp, 0x64",
            "mov r1, 8",
            "mov r3, 0",
            "and r2, r2, ip",
            "bl fcn.0000f214",
            "add r0, sp, 0x6c",
            "mov r1, 8",
            "ldr r2, [r4, 0x18]",
            "mov r3, 0",
            "bl fcn.0000f214",
            "mov r3, 0",
            "add r0, sp, 0x74",
            "mov r1, 8",
            "ldr r2, [r4, 0x1c]",
            "bl fcn.0000f214",
            "mov r1, 0x30",
            "mov r2, 0xb",
            "mov r0, sb",
            "bl sym.imp.memset",
            "ldr r2, [r4, 0x50]",
            "mov r1, 0xc",
            "add r0, sp, 0x88",
            "asr r3, r2, 0x1f",
            "bl fcn.0000f214",
            "ldr r0, [r4, 0x18]",
            "bl fcn.00028b98",
            "mov r1, r0",
            "add r0, sp, 0x108",
            "mov r2, 0x20",
            "add r0, r0, 1",
            "bl fcn.00029568",
            "ldr r0, [r4, 0x1c]",
            "bl fcn.00028bb0",
            "mov r1, r0",
            "add r0, sp, 0x128",
            "add r0, r0, 1",
            "mov r2, 0x20",
            "bl fcn.00029568",
            "ldr r6, [r7, 0x7c]",
            "cmp r6, 0",
            "beq 0xf504",
            "add r6, r6, 0x1a",
            "mov r3, 0x31",
            "add r0, sp, 0x9d",
            "mov r1, r6",
            "mov r2, 0x64",
            "strb r3, [sp, 0x9c]",
            "bl sym.imp.strncpy",
            "ldrb r3, [sp, 0x100]",
            "cmp r3, 0",
            "beq 0xf65c",
            "ldr r0, [r7]",
            "mov r1, 0x4b",
            "mov r2, r6",
            "mov r3, 0",
            "bl fcn.0000f2e0",
            "b 0xf65c",
            "ldr r3, [r4, 0x10]",
            "and r3, r3, 0xf000",
            "cmp r3, 0xa000",
            "bne 0xf56c",
            "mov r0, r8",
            "bl fcn.0002a6d8",
            "cmp r3, 0x4000",
            "bne 0xf5a4",
            "mov r3, 0x35",
            "strb r3, [sp, 0x9c]",
            "ldrb r3, [sp, 0x63]",
            "cmp r3, 0",
            "bne 0xf65c",
            "mov r0, sp",
            "bl sym.imp.strlen",
            "add r3, sp, 0x200",
            "add r0, r3, r0",
            "mov r3, 0x2f",
            "strb r3, [r0, -0x200]",
            "b 0xf65c",
            "cmp r3, 0x2000",
            "moveq r3, 0x33",
            "beq 0xf5bc",
            "cmp r3, 0x6000",
            "bne 0xf604",
            "mov r3, 0x34",
            "ldrd r0, r1, [r4, 0x20]",
            "strb r3, [sp, 0x9c]",
            "bl fcn.0000ef08",
            "mov r2, r0",
            "add r0, r5, 0x148",
            "mov r3, r6",
            "add r0, r0, 1",
            "mov r1, 8",
            "bl fcn.0000f214",
            "ldrd r0, r1, [r4, 0x20]",
            "bl fcn.0000ef1c",
            "mov r2, r0",
            "add r0, r5, 0x150",
            "add r0, r0, 1",
            "mov r1, 8",
            "mov r3, r6",
            "bl fcn.0000f214",
            "b 0xf65c",
            "cmp r3, 0x1000",
            "moveq r3, 0x36",
            "strbeq r3, [sp, 0x9c]",
            "beq 0xf65c",
            "cmp r3, 0x8000",
            "bne 0xf648",
            "ldr r3, [r4, 0x34]",
            "ldr r2, [r4, 0x30]",
            "cmp r3, 0xf",
            "movle r1, 0x30",
            "movle r0, sb",
            "strble r1, [sp, 0x9c]",
            "movle r1, 0xc",
            "ble 0xf5fc",
            "ldr r0, str.cannot_store_file__s_of_size__lld__aborting",
            "mov r1, r8",
            "bl fcn.000271d8",
            "ldr r0, str._s:_unknown_file_type",
            "mov r1, r8",
            "bl fcn.00027184",
            "mov r0, r6",
            "b 0xf6e4",
            "ldrb r3, [sp, 0x63]",
            "cmp r3, 0",
            "beq 0xf68c",
            "ldr r3, [r4, 0x10]",
            "mov r1, 0x4c",
            "ldr r0, [r7]",
            "mov r2, sl",
            "and r3, r3, 0xf000",
            "cmp r3, 0x4000",
            "movne r3, 0",
            "moveq r3, 1",
            "bl fcn.0000f2e0",
            "ldr r0, [r7]",
            "mov r1, sp",
            "bl fcn.0000f270",
            "ldr r3, [r7, 0x70]",
            "cmp r3, 0",
            "beq 0xf6e0",
            "ldr r3, obj.stdout",
            "mov r2, sl",
            "ldr lr, [r4, 0x10]",
            "ldr ip, [0x0000f6f8]",
            "ldr r0, [r3]",
            "ldr r3, [r7]",
            "and lr, lr, 0xf000",
            "ldr r1, [0x0000f6fc]",
            "cmp r3, 1",
            "ldreq r3, obj.stderr",
            "ldreq r0, [r3]",
            "cmp lr, 0x4000",
            "ldr r3, [0x0000f704]",
            "moveq r3, ip",
            "bl sym.imp.fprintf",
            "mov r0, 1",
            "add sp, sp, 0x200",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "sym.imp.strncpy": {
        "function_address": "0x0000beb8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x6fc]!"
        ]
    },
    "fcn.00029568": {
        "function_address": "0x00029568",
        "instructions": [
            "cmp r2, 0",
            "bxeq lr",
            "sub r2, r2, 1",
            "mov ip, 0",
            "strb ip, [r0, r2]",
            "b sym.imp.strncpy"
        ]
    },
    "fcn.00028bb0": {
        "function_address": "0x00028bb0",
        "instructions": [
            "mov r1, r0",
            "ldr r2, fcn.00026568",
            "ldr r0, [0x00028bc4]",
            "b 0x28af0"
        ]
    },
    "fcn.0000ef08": {
        "function_address": "0x0000ef08",
        "instructions": [
            "bic r1, r1, 0xff0",
            "ubfx r0, r0, 8, 0xc",
            "bic r1, r1, 0xf",
            "orr r0, r1, r0",
            "bx lr"
        ]
    },
    "fcn.0000ef1c": {
        "function_address": "0x0000ef1c",
        "instructions": [
            "lsr r3, r0, 0xc",
            "and r0, r0, 0xff",
            "orr r3, r3, r1, lsl 20",
            "bic r3, r3, 0xff",
            "orr r0, r3, r0",
            "bx lr"
        ]
    },
    "fcn.000270ac": {
        "function_address": "0x000270ac",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r5, r2",
            "mov r4, r3",
            "bl fcn.00027094",
            "cmp r0, r5",
            "bne 0x270cc",
            "cmp r1, r4",
            "popeq {r3, r4, r5, pc}",
            "cmn r0, 1",
            "bne 0x270dc",
            "cmn r1, 1",
            "beq 0x270e4",
            "ldr r0, str.short_read",
            "bl fcn.000271d8",
            "bl fcn.000271ac"
        ]
    },
    "fcn.00027094": {
        "function_address": "0x00027094",
        "instructions": [
            "orrs ip, r2, r3",
            "beq 0x270a0",
            "b 0x26f94",
            "mov r0, ip",
            "mov r1, 0",
            "bx lr"
        ]
    },
    "fcn.00012c84": {
        "function_address": "0x00012c84",
        "instructions": [
            "push {r4, lr}",
            "mov r0, 0x40",
            "bl fcn.00029eb4",
            "mov r4, r0",
            "mov r0, 0x28",
            "bl fcn.00029eb4",
            "ldr r3, fcn.00012e08",
            "str r0, [r4, 0x10]",
            "mov r0, r4",
            "str r3, [r4, 0x14]",
            "ldr r3, fcn.00010040",
            "str r3, [r4, 0x18]",
            "ldr r3, aav.0x00012df4",
            "str r3, [r4]",
            "ldr r3, aav.0x00012d3c",
            "str r3, [r4, 0x30]",
            "pop {r4, pc}"
        ]
    },
    "fcn.00027f1c": {
        "function_address": "0x00027f1c",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "subs r4, r0, 0",
            "mov r5, r1",
            "beq 0x27f50",
            "ldrb r3, [r4]",
            "cmp r3, 0",
            "moveq r4, r3",
            "beq 0x27f50",
            "bl sym.imp.strlen",
            "sub r0, r0, 1",
            "ldrb r3, [r4, r0]!",
            "cmp r3, r5",
            "movne r4, 0",
            "mov r0, r4",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.0002a358": {
        "function_address": "0x0002a358",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r0",
            "bl sym.imp.chdir",
            "cmp r0, 0",
            "popeq {r4, pc}",
            "ldr r0, str.chdir__s_",
            "mov r1, r4",
            "bl fcn.00028900"
        ]
    },
    "sym.imp.chdir": {
        "function_address": "0x0000bf54",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x694]!"
        ]
    },
    "fcn.0000ef34": {
        "function_address": "0x0000ef34",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r4, r0",
            "sub sp, sp, 0xb0",
            "mov r6, r1",
            "mov r7, 0",
            "mov r1, 0x1a4",
            "str r2, [sp, 0x14]",
            "str r3, [sp, 0xc]",
            "ldr r5, [sp, 0xcc]",
            "str r7, [sp, 0x90]",
            "bl sym.imp.fchmod",
            "mov r0, r4",
            "add r1, sp, 0x20",
            "str r4, [sp, 0x18]",
            "str r6, [sp, 0x88]",
            "bl sym.imp.fstat64",
            "cmp r0, r7",
            "ldrlt r0, str.cannot_stat_tar_file",
            "blt 0xf0e4",
            "cmp r5, 0",
            "beq 0xf0e8",
            "ldr r2, aav.0x00059744",
            "add r3, sp, 0xa0",
            "add r4, sp, 0x98",
            "cmp r5, 1",
            "str r7, [sp, 0xa8]",
            "ldm r2, {r0, r1}",
            "ldr r2, aav.0x0005974c",
            "stm r3, {r0, r1}",
            "ldm r2, {r0, r1}",
            "ldr r2, aav.0x000597b4",
            "stm r4, {r0, r1}",
            "mov r0, r3",
            "ldr r1, str.bzip2",
            "moveq r1, r2",
            "str r1, [sp, 0x10]",
            "bl fcn.00029fd8",
            "bl fcn.00028900",
            "ldr r3, [sp, 0xc8]",
            "mov r4, 0",
            "ldr r6, aav.0x0000f708",
            "add r7, sp, 0x18",
            "mov r8, r4",
            "str r3, [sp, 0x8c]",
            "b 0xf140",
            "ldr r3, [sp, 0xc]",
            "mov r2, r6",
            "ldr r0, [r3]",
            "ldr r3, [sp, 0x14]",
            "stm sp, {r7, r8}",
            "cmp r3, 0",
            "mov r3, r6",
            "moveq r1, 1",
            "movne r1, 3",
            "bl fcn.00029168",
            "ldr r3, [sp, 0xc]",
            "cmp r0, 0",
            "moveq r4, 1",
            "ldr r3, [r3, 4]",
            "str r3, [sp, 0xc]",
            "ldr r3, [sp, 0xc]",
            "cmp r3, 0",
            "bne 0xf104",
            "ldr r7, [0x0000f208]",
            "mov r6, 0x400",
            "mov r1, r3",
            "mov r2, r6",
            "mov r0, r7",
            "bl sym.imp.memset",
            "ldr r0, [sp, 0x18]",
            "mov r1, r7",
            "mov r2, r6",
            "bl fcn.0002a0a0"
        ]
    },
    "sym.imp.fchmod": {
        "function_address": "0x0000c2fc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x424]!"
        ]
    },
    "sym.imp.fstat64": {
        "function_address": "0x0000b8c4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xaf4]!"
        ]
    },
    "sym.imp.signal": {
        "function_address": "0x0000c404",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x374]!"
        ]
    },
    "sym.imp.vfork": {
        "function_address": "0x0000c020",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x60c]!"
        ]
    },
    "sym.imp.close": {
        "function_address": "0x0000be10",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x76c]!"
        ]
    },
    "fcn.000124cc": {
        "function_address": "0x000124cc",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r4, r0",
            "mov r5, r1",
            "b 0x124f8",
            "ldr r0, [r4]",
            "mov r1, r5",
            "mov r2, 0",
            "bl sym.imp.fnmatch",
            "cmp r0, 0",
            "beq 0x12500",
            "ldr r4, [r4, 4]",
            "cmp r4, 0",
            "bne 0x124dc",
            "mov r0, r4",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.imp.fnmatch": {
        "function_address": "0x0000c074",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x5d4]!"
        ]
    },
    "fcn.00027ff8": {
        "function_address": "0x00027ff8",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r5, r1",
            "sub sp, sp, 0x6c",
            "mov r4, r0",
            "mov r0, 0",
            "mov sl, r2",
            "bl sym.imp.umask",
            "cmn r5, 1",
            "mov r8, r0",
            "bne 0x28034",
            "mvn r5, r8",
            "lsl r5, r5, 0x17",
            "bl sym.imp.umask",
            "lsr r5, r5, 0x17",
            "b 0x2803c",
            "bic r0, r0, 0xc0",
            "bl sym.imp.umask",
            "ldr sb, [0x00028164]",
            "mov r6, r4",
            "and sl, sl, 4",
            "mov fp, 0",
            "cmp sl, 0",
            "movne r3, r6",
            "bne 0x28084",
            "b 0x2809c",
            "cmp r7, 0x2f",
            "bne 0x28084",
            "add r3, r6, 1",
            "ldrb r7, [r3]",
            "mov r6, r3",
            "add r3, r3, 1",
            "cmp r7, 0x2f",
            "beq 0x28068",
            "strb fp, [r6]",
            "b 0x280a0",
            "ldrb r7, [r3]",
            "mov r6, r3",
            "add r3, r3, 1",
            "cmp r7, 0",
            "bne 0x2805c",
            "b 0x280a0",
            "mov r7, sl",
            "mov r0, r4",
            "movw r1, 0x1ff",
            "bl sym.imp.mkdir",
            "cmp r0, 0",
            "bge 0x28114",
            "ldr r3, [sb]",
            "ldr r3, [r3]",
            "cmp r3, 0x11",
            "bne 0x280f0",
            "cmp sl, 0",
            "beq 0x280f0",
            "mov r0, r4",
            "mov r1, sp",
            "bl sym.imp.stat64",
            "cmp r0, 0",
            "blt 0x280f0",
            "ldr r3, [sp, 0x10]",
            "and r3, r3, 0xf000",
            "cmp r3, 0x4000",
            "beq 0x28100",
            "mov r0, r8",
            "bl sym.imp.umask",
            "ldr r1, str.create",
            "b 0x2814c",
            "cmp r7, 0",
            "bne 0x28140",
            "mov r0, r8",
            "bl sym.imp.umask",
            "b 0x28138",
            "cmp r7, 0",
            "bne 0x28140",
            "mov r0, r8",
            "bl sym.imp.umask",
            "mov r0, r4",
            "mov r1, r5",
            "bl sym.imp.chmod",
            "cmp r0, 0",
            "blt 0x28148",
            "mov r0, r7",
            "b 0x2815c",
            "strb r7, [r6]",
            "b 0x2804c",
            "ldr r1, str.set_permissions_of",
            "ldr r0, str.cannot__s_directory__s",
            "mov r2, r4",
            "bl fcn.000288b8",
            "mvn r0, 0",
            "add sp, sp, 0x6c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.imp.umask": {
        "function_address": "0x0000bea0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x70c]!"
        ]
    },
    "sym.imp.mkdir": {
        "function_address": "0x0000b9c0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xa4c]!"
        ]
    },
    "sym.imp.chmod": {
        "function_address": "0x0000bcfc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x824]!"
        ]
    },
    "fcn.00029f78": {
        "function_address": "0x00029f78",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r0",
            "bl sym.imp.open64",
            "cmp r0, 0",
            "popge {r4, pc}",
            "ldr r0, aav.0x0005beb4",
            "mov r1, r4",
            "bl fcn.00028900"
        ]
    },
    "fcn.000550d0": {
        "function_address": "0x000550d0",
        "instructions": [
            "eor ip, r0, r1",
            "rsbmi r1, r1, 0",
            "subs r2, r1, 1",
            "beq 0x55160",
            "movs r3, r0",
            "rsbmi r3, r0, 0",
            "cmp r3, r1",
            "bls 0x5516c",
            "tst r1, r2",
            "beq 0x5517c",
            "clz r2, r1",
            "clz r0, r3",
            "sub r0, r2, r0",
            "mov r2, 1",
            "lsl r1, r1, r0",
            "lsl r2, r2, r0",
            "mov r0, 0",
            "cmp r3, r1",
            "subhs r3, r3, r1",
            "orrhs r0, r0, r2",
            "cmp r3, r1, lsr 1",
            "subhs r3, r3, r1, lsr 1",
            "orrhs r0, r0, r2, lsr 1",
            "cmp r3, r1, lsr 2",
            "subhs r3, r3, r1, lsr 2",
            "orrhs r0, r0, r2, lsr 2",
            "cmp r3, r1, lsr 3",
            "subhs r3, r3, r1, lsr 3",
            "orrhs r0, r0, r2, lsr 3",
            "cmp r3, 0",
            "lsrsne r2, r2, 4",
            "lsrne r1, r1, 4",
            "bne 0x55114",
            "cmp ip, 0",
            "rsbmi r0, r0, 0",
            "bx lr",
            "teq ip, r0",
            "rsbmi r0, r0, 0",
            "bx lr",
            "movlo r0, 0",
            "asreq r0, ip, 0x1f",
            "orreq r0, r0, 1",
            "bx lr",
            "clz r2, r1",
            "rsb r2, r2, 0x1f",
            "cmp ip, 0",
            "lsr r0, r3, r2",
            "rsbmi r0, r0, 0",
            "bx lr"
        ]
    },
    "fcn.00011184": {
        "function_address": "0x00011184",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r4, r0",
            "mov r6, r1",
            "mov r5, r2",
            "mov r8, r3",
            "mov r7, 4",
            "b 0x11210",
            "ldr r2, [r4, 0x2c]",
            "ldr r3, [r4, 0x30]",
            "cmp r2, r3",
            "blo 0x111e8",
            "ldr r1, [r4, 0x28]",
            "ldr r2, [r4, 0x24]",
            "ldr r0, [r4, 0xc]",
            "add r1, r1, 4",
            "sub r2, r2, 8",
            "bl fcn.00028f70",
            "cmp r0, 0",
            "str r0, [r4, 0x30]",
            "bne 0x111dc",
            "ldr r0, aav.0x00059b54",
            "bl fcn.000271d8",
            "add r0, r0, 4",
            "str r7, [r4, 0x2c]",
            "str r0, [r4, 0x30]",
            "ldr r3, [r4, 0x2c]",
            "ldr r2, [r4, 0x28]",
            "ldrb r1, [r2, r3]",
            "add r3, r3, 1",
            "ldr r2, [r5]",
            "str r3, [r4, 0x2c]",
            "ldr r3, [r5]",
            "orr r6, r6, r1, lsl r2",
            "add r3, r3, 8",
            "str r3, [r5]",
            "ldr r3, [r5]",
            "cmp r3, r8",
            "blo 0x111a0",
            "mov r0, r6",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.00011228": {
        "function_address": "0x00011228",
        "instructions": [
            "cmp r1, 0x100",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r7, r0",
            "ldrhi r0, [r0, 0x400]",
            "sub sp, sp, 0x5d0",
            "mov r4, r1",
            "sub sp, sp, 0xc",
            "movls r1, 0x10",
            "strhi r0, [sp, 0x10]",
            "add r0, sp, 0x540",
            "str r2, [sp, 0x24]",
            "add r0, r0, 0xc",
            "strls r1, [sp, 0x10]",
            "mov r2, 0x44",
            "mov r1, 0",
            "str r3, [sp, 0x34]",
            "bl sym.imp.memset",
            "mov r2, r7",
            "mov r3, r4",
            "ldr r1, [r2], 4",
            "add r8, sp, 0x5d0",
            "add r8, r8, 8",
            "subs r3, r3, 1",
            "add r1, r8, r1, lsl 2",
            "ldr r0, [r1, -0x8c]",
            "add r0, r0, 1",
            "str r0, [r1, -0x8c]",
            "bne 0x11274",
            "ldr r2, [sp, 0x54c]",
            "cmp r2, r4",
            "addne r0, sp, 0x540",
            "movne r3, 1",
            "addne r0, r0, 0xc",
            "movne r2, r0",
            "bne 0x112cc",
            "ldr ip, [sp, 0x604]",
            "ldr r0, [sp, 0x608]",
            "str r3, [ip]",
            "str r3, [r0]",
            "b 0x11748",
            "add r3, r3, 1",
            "ldr r1, [r2, 4]!",
            "cmp r3, 0x10",
            "cmpls r1, 0",
            "beq 0x112c8",
            "mov r6, r3",
            "add r2, sp, 0x590",
            "mov r5, 0x10",
            "b 0x112f0",
            "sub r5, r5, 1",
            "ldr r1, [r2, -4]!",
            "subs ip, r5, 0",
            "movne ip, 1",
            "cmp r1, 0",
            "movne ip, 0",
            "cmp ip, 0",
            "bne 0x112ec",
            "ldr r8, [sp, 0x608]",
            "str r5, [sp, 0x14]",
            "ldr r2, [r8]",
            "cmp r2, r3",
            "movlo r2, r3",
            "blo 0x1132c",
            "cmp r5, r2",
            "movlo r2, r5",
            "ldr ip, [sp, 0x608]",
            "sub r8, r3, 1",
            "str r2, [ip]",
            "add ip, sp, 0x540",
            "add ip, ip, 0xc",
            "mov r2, 1",
            "add r8, ip, r8, lsl 2",
            "lsl r2, r2, r3",
            "str r8, [sp, 0x18]",
            "mov ip, r8",
            "b 0x1136c",
            "ldr r8, [ip, 4]!",
            "subs r2, r2, r8",
            "bmi 0x11748",
            "lsl r2, r2, 1",
            "add r3, r3, 1",
            "cmp r3, r5",
            "blo 0x11358",
            "subs r2, r2, r1",
            "str r2, [sp, 0x20]",
            "bmi 0x11748",
            "add r2, sp, 0x5d0",
            "ldr r8, [sp, 0x20]",
            "add r2, r2, 8",
            "add r3, r2, r5, lsl 2",
            "add r2, sp, 0x4c0",
            "add r1, r8, r1",
            "str r1, [r3, -0x8c]",
            "mov r3, 0",
            "str r3, [sp, 0x4c8]",
            "add r2, r2, 0xc",
            "b 0x113b8",
            "ldr r1, [r0, 4]!",
            "add r3, r3, r1",
            "str r3, [r2], 4",
            "subs r5, r5, 1",
            "bne 0x113ac",
            "mov r3, r5",
            "ldr r2, [r7], 4",
            "cmp r2, 0",
            "beq 0x113f0",
            "add ip, sp, 0x5d0",
            "add ip, ip, 8",
            "add r2, ip, r2, lsl 2",
            "ldr r1, [r2, -0x114]",
            "add r0, ip, r1, lsl 2",
            "add r1, r1, 1",
            "str r1, [r2, -0x114]",
            "str r3, [r0, -0x594]",
            "add r3, r3, 1",
            "cmp r3, r4",
            "blo 0x113c4",
            "add r7, sp, 0x44",
            "mov r3, 0",
            "add r4, r7, r4, lsl 2",
            "str r3, [sp, 0x4c4]",
            "str r3, [sp, 0x508]",
            "mvn r8, 0",
            "str r3, [sp, 0x590]",
            "str r3, [sp, 0xc]",
            "str r3, [sp, 8]",
            "str r4, [sp, 0x3c]",
            "b 0x11718",
            "ldr r0, [sp, 0x18]",
            "sub r2, r6, 1",
            "mov r1, 1",
            "lsl r1, r1, r2",
            "add r2, sp, 0x540",
            "ldr r4, [r0, 4]!",
            "add r2, r2, 0xc",
            "add r2, r2, r6, lsl 2",
            "str r1, [sp, 0x2c]",
            "rsb r1, r4, 0",
            "str r0, [sp, 0x18]",
            "str r1, [sp, 0x1c]",
            "str r2, [sp, 0x38]",
            "b 0x1170c",
            "ldr r3, [sp, 0x14]",
            "rsb sb, sl, r6",
            "ldr r0, [sp, 0x608]",
            "rsb ip, sl, r3",
            "ldr r3, [r0]",
            "lsl r0, r2, sb",
            "cmp ip, r3",
            "movhs ip, r3",
            "cmp r0, r4",
            "ldrhi r1, [sp, 0x1c]",
            "ldrhi r3, [sp, 0x38]",
            "addhi r0, r0, r1",
            "bhi 0x114ac",
            "b 0x114b8",
            "ldr r1, [r3, 4]!",
            "lsl r0, r0, 1",
            "cmp r0, r1",
            "bls 0x114b8",
            "rsb r0, r1, r0",
            "add sb, sb, 1",
            "cmp sb, ip",
            "blo 0x11498",
            "ldr ip, [sp, 0x10]",
            "add r3, sb, sl",
            "add r1, sp, 0x5d0",
            "add r1, r1, 8",
            "cmp r3, ip",
            "movls r3, 0",
            "movhi r3, 1",
            "cmp sl, ip",
            "movhs r3, 0",
            "cmp r3, 0",
            "add r3, r1, fp, lsl 2",
            "rsbne sb, sl, ip",
            "lsl r0, r2, sb",
            "add r1, sb, sl",
            "str r1, [r3, -0xcc]",
            "str r0, [sp, 0xc]",
            "add r0, r0, 1",
            "lsl r0, r0, 3",
            "str r2, [sp]",
            "bl fcn.00029eb4",
            "ldr r1, [sp, 0x604]",
            "add ip, r0, 8",
            "str ip, [sp, 8]",
            "add r0, r0, 4",
            "cmp fp, 0",
            "ldr r2, [sp]",
            "str ip, [r1]",
            "add ip, sp, 0x5d0",
            "str r0, [sp, 0x604]",
            "add ip, ip, 8",
            "ldr r0, [sp, 8]",
            "add r3, ip, fp, lsl 2",
            "str r0, [r3, -0x48]",
            "beq 0x1159c",
            "add r1, ip, r8, lsl 2",
            "str r5, [r3, -0x114]",
            "str r0, [sp, 0x5d4]",
            "add sb, sb, 0x10",
            "ldr r3, [r1, -0xd0]",
            "ldr ip, [r1, -0x48]",
            "add r1, sp, 0x5d0",
            "str r3, [sp, 0x28]",
            "lsl r3, r2, sl",
            "ldr r8, [sp, 0x28]",
            "sub r3, r3, 1",
            "and r3, r3, r5",
            "lsr r3, r3, r8",
            "add r0, ip, r3, lsl 3",
            "str r0, [sp, 4]",
            "ldr r8, [sp, 4]",
            "ldm r1, {r0, r1}",
            "stm r8, {r0, r1}",
            "strb sb, [ip, r3, lsl 3]",
            "ldr ip, [sp, 0x28]",
            "ldr r0, [sp, 4]",
            "rsb r8, ip, sl",
            "strb r8, [r0, 1]",
            "mov r3, sl",
            "mov r8, fp",
            "b 0x115ac",
            "mov r2, 1",
            "add ip, sp, 0x5d0",
            "add fp, r8, 1",
            "add ip, ip, 8",
            "add r1, ip, fp, lsl 2",
            "ldr sl, [r1, -0xd0]",
            "cmp r6, sl",
            "bgt 0x11460",
            "ldr r0, [sp, 0x3c]",
            "rsb r2, r3, r6",
            "uxtb r2, r2",
            "cmp r7, r0",
            "str r2, [sp, 0x28]",
            "movhs sl, 0x63",
            "bhs 0x1162c",
            "ldr r2, [r7]",
            "ldr r1, [sp, 0x24]",
            "cmp r2, r1",
            "bhs 0x11604",
            "cmp r2, 0xff",
            "movhi sl, 0xf",
            "movls sl, 0x10",
            "b 0x11620",
            "ldr r0, [sp, 0x24]",
            "ldr r1, [sp, 0x600]",
            "ldr ip, [sp, 0x34]",
            "rsb r2, r0, r2",
            "ldrb sl, [r1, r2]",
            "lsl r2, r2, 1",
            "ldrh r2, [ip, r2]",
            "add r7, r7, 4",
            "add ip, sp, 0x500",
            "strh r2, [ip, 0xd4]",
            "ldr r1, [sp, 8]",
            "rsb r2, r3, r6",
            "mov sb, 1",
            "lsr ip, r5, r3",
            "lsl sb, sb, r2",
            "add r2, r1, ip, lsl 3",
            "mvn r1, 7",
            "mul r1, r1, sb",
            "lsl r0, sb, 3",
            "str r0, [sp, 0x30]",
            "str r1, [sp, 4]",
            "b 0x11684",
            "ldr r0, [sp, 4]",
            "add r1, sp, 0x5d0",
            "add ip, ip, sb",
            "add fp, r2, r0",
            "ldm r1, {r0, r1}",
            "stm fp, {r0, r1}",
            "ldr r1, [sp, 4]",
            "strb sl, [r2, r1]",
            "ldr r0, [sp, 0x28]",
            "strb r0, [fp, 1]",
            "ldr r0, [sp, 0xc]",
            "ldr r1, [sp, 0x30]",
            "cmp ip, r0",
            "add r2, r2, r1",
            "blo 0x1165c",
            "ldr r1, [sp, 0x2c]",
            "b 0x116a8",
            "lsr r1, r1, 1",
            "mov r5, r2",
            "tst r1, r5",
            "eor r2, r5, r1",
            "bne 0x116a0",
            "add r1, sp, 0x4c0",
            "add ip, sp, 0x500",
            "add r1, r1, 4",
            "add ip, ip, 8",
            "add r0, r8, 1",
            "mov r5, r2",
            "add r0, r1, r0, lsl 2",
            "add r1, ip, r8, lsl 2",
            "mov ip, 1",
            "b 0x116e4",
            "ldr r3, [r1, -4]!",
            "sub r8, r8, 1",
            "lsl sb, ip, r3",
            "ldr sl, [r0, -4]!",
            "sub sb, sb, 1",
            "and sb, sb, r2",
            "cmp sb, sl",
            "bne 0x116dc",
            "ldr r0, [sp, 0x1c]",
            "sub r4, r4, 1",
            "add r0, r0, 1",
            "str r0, [sp, 0x1c]",
            "cmp r4, 0",
            "bne 0x115a8",
            "add r6, r6, 1",
            "ldr r1, [sp, 0x14]",
            "cmp r6, r1",
            "ble 0x11428",
            "ldr r3, [sp, 0x50c]",
            "ldr r2, [sp, 0x608]",
            "str r3, [r2]",
            "ldr r3, [sp, 0x20]",
            "cmp r3, 0",
            "cmpne r1, 1",
            "moveq r0, 0",
            "movne r0, 1",
            "b 0x1174c",
            "mov r0, 2",
            "add sp, sp, 0x1dc",
            "add sp, sp, 0x400",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00011138": {
        "function_address": "0x00011138",
        "instructions": [
            "push {r4, lr}",
            "b 0x11150",
            "ldr r4, [r0, -4]",
            "sub r0, r0, 8",
            "bl sym.imp.free",
            "mov r0, r4",
            "cmp r0, 0",
            "bne 0x11140",
            "pop {r4, pc}"
        ]
    },
    "fcn.00011758": {
        "function_address": "0x00011758",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x520",
            "ldrb r3, [r0, 0x20]",
            "sub sp, sp, 4",
            "add r5, sp, 0x520",
            "mov r6, r1",
            "ldr r1, [r0, 0x1c]",
            "mov r4, r0",
            "str r3, [r5, -4]!",
            "mov r3, 1",
            "mov r2, r5",
            "bl fcn.00011184",
            "and r3, r0, 1",
            "mov r1, r0",
            "str r3, [r6]",
            "lsr r1, r1, 1",
            "ldr r3, [sp, 0x51c]",
            "mov r2, r5",
            "mov r0, r4",
            "sub r3, r3, 1",
            "str r3, [sp, 0x51c]",
            "mov r3, 2",
            "bl fcn.00011184",
            "ldr r2, [sp, 0x51c]",
            "and r3, r0, 3",
            "lsr r1, r0, 2",
            "cmp r3, 1",
            "sub r2, r2, 2",
            "str r1, [r4, 0x1c]",
            "str r2, [sp, 0x51c]",
            "uxtb r2, r2",
            "strb r2, [r4, 0x20]",
            "beq 0x11870",
            "blo 0x117ec",
            "cmp r3, 2",
            "beq 0x119b0",
            "b 0x11dc4",
            "and r3, r2, 7",
            "add r5, sp, 0x520",
            "rsb r2, r3, r2",
            "lsr r1, r1, r3",
            "str r2, [r5, -0x14]!",
            "mov r3, 0x10",
            "mov r2, r5",
            "mov r0, r4",
            "bl fcn.00011184",
            "ldr r3, [sp, 0x50c]",
            "mov r1, r0",
            "uxth r6, r0",
            "lsr r1, r1, 0x10",
            "sub r3, r3, 0x10",
            "mov r0, r4",
            "str r3, [sp, 0x50c]",
            "mov r2, r5",
            "mov r3, 0x10",
            "bl fcn.00011184",
            "mvn r3, r0",
            "uxth r3, r3",
            "cmp r6, r3",
            "bne 0x11dd0",
            "ldr r3, [sp, 0x50c]",
            "lsr r0, r0, 0x10",
            "str r6, [r4, 0x70]",
            "mvn r7, 0",
            "str r0, [r4, 0x74]",
            "sub r3, r3, 0x10",
            "str r3, [r4, 0x78]",
            "ldr r3, [r4, 0x10]",
            "str r3, [r4, 0x7c]",
            "b 0x11dd4",
            "add r5, sp, 0x20",
            "add r1, sp, 0x254",
            "sub r6, r5, 8",
            "sub r5, r5, 0xc",
            "mov r3, r5",
            "mov r2, 8",
            "str r2, [r3, 4]!",
            "cmp r3, r1",
            "bne 0x11888",
            "add r3, sp, 0x254",
            "add r1, r6, 0x3fc",
            "mov r2, 9",
            "b 0x118a8",
            "str r2, [r3, 4]!",
            "cmp r3, r1",
            "bne 0x118a4",
            "add r3, sp, 0x410",
            "add r1, r6, 0x450",
            "add r3, r3, 4",
            "add r1, r1, 0xc",
            "mov r2, 7",
            "b 0x118cc",
            "str r2, [r3, 4]!",
            "cmp r3, r1",
            "bne 0x118c8",
            "mov r3, 8",
            "add r0, sp, 0x18",
            "str r3, [sp, 0x478]",
            "mov r1, 0x120",
            "str r3, [sp, 0x47c]",
            "movw r2, 0x101",
            "str r3, [sp, 0x480]",
            "str r3, [sp, 0x484]",
            "str r3, [sp, 0x488]",
            "str r3, [sp, 0x48c]",
            "str r3, [sp, 0x490]",
            "str r3, [sp, 0x494]",
            "mov r3, 7",
            "str r3, [sp, 0x50c]",
            "ldr r3, [0x00011de4]",
            "str r3, [sp]",
            "add r3, sp, 0x510",
            "add r3, r3, 4",
            "str r3, [sp, 4]",
            "add r3, sp, 0x500",
            "add r3, r3, 0xc",
            "str r3, [sp, 8]",
            "ldr r3, [0x00011de8]",
            "bl fcn.00011228",
            "subs r7, r0, 0",
            "bne 0x11dd4",
            "add r6, r6, 0x74",
            "mov r3, 5",
            "str r3, [r5, 4]!",
            "cmp r5, r6",
            "bne 0x11944",
            "str r3, [sp, 0x510]",
            "add r0, sp, 0x18",
            "ldr r3, [0x00011dec]",
            "mov r1, 0x1e",
            "mov r2, 0",
            "str r3, [sp]",
            "add r3, sp, 0x510",
            "add r3, r3, 8",
            "str r3, [sp, 4]",
            "add r3, sp, 0x510",
            "str r3, [sp, 8]",
            "ldr r3, [0x00011df0]",
            "bl fcn.00011228",
            "cmp r0, 1",
            "mov r7, r0",
            "ldrgt r0, [sp, 0x514]",
            "bgt 0x11d98",
            "ldr r3, [sp, 0x510]",
            "mov r0, r4",
            "ldr r1, [sp, 0x514]",
            "ldr r2, [sp, 0x518]",
            "str r3, [sp]",
            "ldr r3, [sp, 0x50c]",
            "b 0x11db8",
            "add r7, sp, 0x520",
            "mov r3, 5",
            "str r2, [r7, -0x18]!",
            "mov r0, r4",
            "mov r2, r7",
            "movw r5, 0x11e",
            "bl fcn.00011184",
            "ldr r3, [sp, 0x508]",
            "mov r1, r0",
            "and sb, r0, 0x1f",
            "lsr r1, r1, 5",
            "mov r2, r7",
            "sub r3, r3, 5",
            "mov r0, r4",
            "str r3, [sp, 0x508]",
            "mov r3, 5",
            "bl fcn.00011184",
            "and r3, r0, 0x1f",
            "mov r1, r0",
            "add r3, r3, 1",
            "mov r2, r7",
            "str r3, [sp, 0x10]",
            "mov r0, r4",
            "ldr r3, [sp, 0x508]",
            "lsr r1, r1, 5",
            "add sb, sb, 0x100",
            "add sb, sb, 1",
            "sub r3, r3, 5",
            "str r3, [sp, 0x508]",
            "mov r3, 4",
            "bl fcn.00011184",
            "ldr r2, [sp, 0x10]",
            "and sl, r0, 0xf",
            "ldr r3, [sp, 0x508]",
            "add sl, sl, 4",
            "cmp sb, r5",
            "cmpls r2, 0x1e",
            "sub r3, r3, 4",
            "movls r5, 0",
            "movhi r5, 1",
            "str r3, [sp, 0x508]",
            "bhi 0x11dd0",
            "lsr r6, r0, 4",
            "ldr r8, aav.0x00059c80",
            "mov r1, r6",
            "mov r2, r7",
            "mov r3, 3",
            "mov r0, r4",
            "bl fcn.00011184",
            "ldrb r3, [r8, r5]",
            "add ip, sp, 0x520",
            "and r2, r0, 7",
            "add r5, r5, 1",
            "cmp r5, sl",
            "lsr r1, r0, 3",
            "add r3, ip, r3, lsl 2",
            "str r2, [r3, -0x508]",
            "ldr r3, [sp, 0x508]",
            "sub r3, r3, 3",
            "str r3, [sp, 0x508]",
            "blo 0x11a64",
            "b 0x11ac0",
            "ldrb r1, [r2, r5]",
            "add r0, sp, 0x520",
            "add r5, r5, 1",
            "add r1, r0, r1, lsl 2",
            "str r3, [r1, -0x508]",
            "b 0x11acc",
            "ldr r2, aav.0x00059c80",
            "mov r6, r1",
            "mov r3, 0",
            "cmp r5, 0x12",
            "bls 0x11aa8",
            "add r2, sp, 0x510",
            "mov r3, 7",
            "add r2, r2, 8",
            "mov r1, 0x13",
            "str r2, [sp, 4]",
            "add fp, sp, 0x18",
            "add r2, sp, 0x510",
            "str r3, [sp, 0x510]",
            "str r2, [sp, 8]",
            "mov r3, 0",
            "mov r0, fp",
            "mov r2, r1",
            "str r3, [sp]",
            "bl fcn.00011228",
            "subs r5, r0, 0",
            "mov r7, r0",
            "beq 0x11b24",
            "cmp r0, 1",
            "bne 0x11dd4",
            "b 0x11d94",
            "ldr r2, [sp, 0x10]",
            "add sl, sp, 0x500",
            "ldr r3, [sp, 0x510]",
            "mov r8, r5",
            "add sl, sl, 8",
            "mov r1, r6",
            "add r7, r2, sb",
            "ldr r2, aav.0x00059c94",
            "lsl r3, r3, 1",
            "ldrh r3, [r2, r3]",
            "str r3, [sp, 0x14]",
            "mov r2, sl",
            "ldr r3, [sp, 0x510]",
            "mov r0, r4",
            "bl fcn.00011184",
            "ldr r3, [sp, 0x14]",
            "and r2, r0, r3",
            "ldr r3, [sp, 0x518]",
            "add r3, r3, r2, lsl 3",
            "str r3, [sp, 0x514]",
            "ldrb r2, [r3, 1]",
            "ldrh r3, [r3, 4]",
            "lsr r1, r0, r2",
            "ldr r0, [sp, 0x508]",
            "cmp r3, 0xf",
            "rsb r2, r2, r0",
            "str r2, [sp, 0x508]",
            "bhi 0x11bac",
            "add ip, sp, 0x520",
            "mov r8, r3",
            "add r2, ip, r5, lsl 2",
            "add r5, r5, 1",
            "str r3, [r2, -0x508]",
            "b 0x11ccc",
            "cmp r3, 0x10",
            "bne 0x11c0c",
            "mov r2, sl",
            "mov r3, 2",
            "mov r0, r4",
            "bl fcn.00011184",
            "ldr r1, [sp, 0x508]",
            "and r2, r0, 3",
            "add r3, r2, 3",
            "sub r1, r1, 2",
            "str r1, [sp, 0x508]",
            "add r1, r3, r5",
            "cmp r1, r7",
            "bhi 0x11dd0",
            "sub r1, r5, 1",
            "add r1, fp, r1, lsl 2",
            "b 0x11bf4",
            "str r8, [r1, 4]!",
            "subs r3, r3, 1",
            "bhs 0x11bf0",
            "add r5, r5, 3",
            "lsr r1, r0, 2",
            "add r5, r5, r2",
            "b 0x11ccc",
            "cmp r3, 0x11",
            "bne 0x11c70",
            "mov r2, sl",
            "mov r3, 3",
            "mov r0, r4",
            "bl fcn.00011184",
            "ldr r1, [sp, 0x508]",
            "and r2, r0, 7",
            "add r3, r2, 3",
            "sub r1, r1, 3",
            "str r1, [sp, 0x508]",
            "add r1, r3, r5",
            "cmp r1, r7",
            "bhi 0x11dd0",
            "sub r1, r5, 1",
            "add r1, fp, r1, lsl 2",
            "b 0x11c58",
            "mov ip, 0",
            "str ip, [r1, 4]!",
            "subs r3, r3, 1",
            "bhs 0x11c50",
            "add r5, r5, 3",
            "lsr r1, r0, 3",
            "add r5, r5, r2",
            "b 0x11cc8",
            "mov r2, sl",
            "mov r3, 7",
            "mov r0, r4",
            "bl fcn.00011184",
            "ldr r1, [sp, 0x508]",
            "and r2, r0, 0x7f",
            "add r3, r2, 0xb",
            "sub r1, r1, 7",
            "str r1, [sp, 0x508]",
            "add r1, r3, r5",
            "cmp r1, r7",
            "bhi 0x11dd0",
            "sub r1, r5, 1",
            "add r1, fp, r1, lsl 2",
            "b 0x11cb4",
            "mov ip, 0",
            "str ip, [r1, 4]!",
            "subs r3, r3, 1",
            "bhs 0x11cac",
            "add r5, r5, 0xb",
            "lsr r1, r0, 7",
            "add r5, r5, r2",
            "mov r8, 0",
            "cmp r5, r7",
            "blo 0x11b50",
            "ldr r0, [sp, 0x518]",
            "mov r6, r1",
            "bl fcn.00011138",
            "ldr r3, [sp, 0x508]",
            "add r5, sp, 0x18",
            "str r6, [r4, 0x1c]",
            "mov r0, r5",
            "mov r1, sb",
            "movw r2, 0x101",
            "strb r3, [r4, 0x20]",
            "mov r3, 9",
            "str r3, [sp, 0x510]",
            "ldr r3, [0x00011de4]",
            "str r3, [sp]",
            "add r3, sp, 0x510",
            "add r3, r3, 8",
            "str r3, [sp, 4]",
            "add r3, sp, 0x510",
            "str r3, [sp, 8]",
            "ldr r3, [0x00011de8]",
            "bl fcn.00011228",
            "subs r7, r0, 0",
            "beq 0x11d40",
            "cmp r7, 1",
            "ldreq r0, str.incomplete_literal_tree",
            "beq 0x11d90",
            "b 0x11dd4",
            "mov r3, 6",
            "mov r2, r7",
            "str r3, [sp, 0x50c]",
            "add r0, r5, sb, lsl 2",
            "ldr r3, [0x00011dec]",
            "ldr r1, [sp, 0x10]",
            "str r3, [sp]",
            "add r3, sp, 0x510",
            "add r3, r3, 4",
            "str r3, [sp, 4]",
            "add r3, sp, 0x500",
            "add r3, r3, 0xc",
            "str r3, [sp, 8]",
            "ldr r3, [0x00011df0]",
            "bl fcn.00011228",
            "subs r7, r0, 0",
            "beq 0x11da0",
            "cmp r7, 1",
            "bne 0x11d94",
            "ldr r0, str.incomplete_distance_tree",
            "bl fcn.000271d8",
            "ldr r0, [sp, 0x518]",
            "bl fcn.00011138",
            "b 0x11dd4",
            "ldr r3, [sp, 0x50c]",
            "mov r0, r4",
            "ldr r1, [sp, 0x518]",
            "ldr r2, [sp, 0x514]",
            "str r3, [sp]",
            "ldr r3, [sp, 0x510]",
            "bl fcn.00011094",
            "mvn r7, 1",
            "b 0x11dd4",
            "ldr r0, str.bad_block_type__d",
            "mov r1, r3",
            "bl fcn.000271d8",
            "mov r7, 1",
            "mov r0, r7",
            "add sp, sp, 0x124",
            "add sp, sp, 0x400",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00011094": {
        "function_address": "0x00011094",
        "instructions": [
            "str r2, [r0, 0x4c]",
            "ldr r2, [r0, 0x1c]",
            "ldr ip, [sp]",
            "str r3, [r0, 0x50]",
            "lsl r3, r3, 1",
            "str r2, [r0, 0x3c]",
            "ldrb r2, [r0, 0x20]",
            "str ip, [r0, 0x54]",
            "lsl ip, ip, 1",
            "str r1, [r0, 0x48]",
            "str r2, [r0, 0x40]",
            "ldr r2, [r0, 0x10]",
            "str r2, [r0, 0x44]",
            "ldr r2, aav.0x00059c94",
            "ldrh r3, [r2, r3]",
            "str r3, [r0, 0x34]",
            "ldrh r3, [r2, ip]",
            "str r3, [r0, 0x38]",
            "bx lr"
        ]
    },
    "fcn.00012508": {
        "function_address": "0x00012508",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "sub sp, sp, 0x1000",
            "add r6, sp, 0xff0",
            "mov r4, r0",
            "mov r8, r1",
            "mov r7, 0",
            "mov r5, sp",
            "add r6, r6, 0xf",
            "b 0x125a0",
            "ldr r2, [r4]",
            "mov r3, 0",
            "b 0x12540",
            "cmp r1, 0x2f",
            "addeq r3, r3, 1",
            "ldrb r1, [r2], 1",
            "cmp r1, 0",
            "bne 0x12538",
            "mov r0, r8",
            "mov r2, r5",
            "b 0x1256c",
            "cmp r1, 0x2f",
            "bne 0x12568",
            "subs r3, r3, 1",
            "blo 0x12580",
            "strb r1, [r2], 1",
            "ldrb r1, [r0], 1",
            "cmp r1, 0",
            "beq 0x12580",
            "cmp r2, r6",
            "bne 0x12558",
            "strb r7, [r2]",
            "mov r1, r5",
            "ldr r0, [r4]",
            "mov r2, 0",
            "bl sym.imp.fnmatch",
            "cmp r0, 0",
            "beq 0x125a8",
            "ldr r4, [r4, 4]",
            "cmp r4, 0",
            "bne 0x1252c",
            "mov r0, r4",
            "add sp, sp, 0x1000",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.00012d90": {
        "function_address": "0x00012d90",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r4, r1",
            "mov r5, 0",
            "mov r6, r0",
            "mov r2, r4",
            "mov r3, r5",
            "ldrd r0, r1, [r0, 0x28]",
            "bl fcn.00055be4",
            "mov r0, r4",
            "mov r1, r5",
            "subs r0, r0, r2",
            "sbc r1, r1, r3",
            "mov r2, r4",
            "mov r3, r5",
            "bl fcn.00055be4",
            "uxth r4, r2",
            "mov r0, r6",
            "ldr r3, [r6, 0x30]",
            "mov r1, r4",
            "blx r3",
            "ldrd r0, r1, [r6, 0x28]",
            "adds r0, r0, r4",
            "adc r1, r1, 0",
            "strd r0, r1, [r6, 0x28]",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.00055be4": {
        "function_address": "0x00055be4",
        "instructions": [
            "cmp r3, 0",
            "cmpeq r2, 0",
            "bne 0x55c0c",
            "cmp r1, 0",
            "cmpeq r0, 0",
            "movlt r1, 0x80000000",
            "movlt r0, 0",
            "mvngt r1, 0x80000000",
            "mvngt r0, 0",
            "b fcn.00055c64",
            "sub sp, sp, 8",
            "push {sp, lr}",
            "bl fcn.00055c74",
            "ldr lr, [sp, 4]",
            "add sp, sp, 8",
            "pop {r2, r3}",
            "bx lr"
        ]
    },
    "fcn.00055c74": {
        "function_address": "0x00055c74",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r7, r3",
            "mov r6, r2",
            "mov r4, r0",
            "mov r5, r1",
            "bl fcn.00055cec",
            "umull r2, r3, r0, r6",
            "mul r7, r0, r7",
            "ldr ip, [sp, 0x18]",
            "mla r7, r6, r1, r7",
            "add r3, r7, r3",
            "subs r2, r4, r2",
            "sbc r3, r5, r3",
            "strd r2, r3, [ip]",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.00029cc8": {
        "function_address": "0x00029cc8",
        "instructions": [
            "push {r0, r1, r2, lr}",
            "mvn r3, 0",
            "mov r2, 0",
            "str r2, [sp]",
            "bl fcn.00029b9c",
            "pop {r1, r2, r3, pc}"
        ]
    },
    "fcn.00029b9c": {
        "function_address": "0x00029b9c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r0",
            "ldrb r0, [r0]",
            "sub sp, sp, 0x14",
            "mov sb, r1",
            "mov r5, r2",
            "mov r8, r3",
            "ldr r6, [sp, 0x38]",
            "cmp r0, 0x2d",
            "cmpne r0, 0x2b",
            "beq 0x29cb0",
            "bl sym.imp.isspace",
            "cmp r0, 0",
            "bne 0x29cb0",
            "ldr r3, [0x00029cbc]",
            "mov r2, sb",
            "add r1, sp, 0xc",
            "ldr r7, [r3]",
            "ldr sl, [r7]",
            "str r0, [r7]",
            "mov r0, r4",
            "bl sym.imp.strtoul",
            "ldr r3, [r7]",
            "mov sb, r0",
            "cmp r3, 0",
            "bne 0x29cb0",
            "ldr fp, [sp, 0xc]",
            "cmp r4, fp",
            "beq 0x29cb0",
            "cmp r6, 0",
            "str sl, [r7]",
            "beq 0x29c60",
            "b 0x29c54",
            "mov r0, r6",
            "mov r1, fp",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x29c50",
            "mvn r0, 0",
            "mov r1, r7",
            "bl fcn.00055000",
            "cmp r0, sb",
            "mulhs sb, r7, sb",
            "bhs 0x29c6c",
            "b 0x29c94",
            "add r6, r6, 8",
            "ldr r7, [r6, 4]",
            "cmp r7, 0",
            "bne 0x29c20",
            "ldrb r3, [fp]",
            "cmp r3, 0",
            "bne 0x29cb0",
            "cmp sb, r8",
            "movhi r3, 0",
            "movls r3, 1",
            "cmp sb, r5",
            "movlo r3, 0",
            "cmp r3, 0",
            "beq 0x29c94",
            "mov r0, sb",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "mov r3, 0",
            "ldr r0, str.number__s_is_not_in__llu.._llu_range",
            "mov r1, r4",
            "mov r2, r5",
            "str r8, [sp]",
            "str r3, [sp, 4]",
            "bl fcn.000271d8",
            "ldr r0, str.invalid_number__s",
            "mov r1, r4",
            "bl fcn.000271d8"
        ]
    },
    "fcn.00055000": {
        "function_address": "0x00055000",
        "instructions": [
            "subs r2, r1, 1",
            "bxeq lr",
            "blo 0x5509c",
            "cmp r0, r1",
            "bls 0x55080",
            "tst r1, r2",
            "beq 0x5508c",
            "clz r3, r1",
            "clz r2, r0",
            "sub r2, r3, r2",
            "mov r3, 1",
            "lsl r1, r1, r2",
            "lsl r3, r3, r2",
            "mov r2, 0",
            "cmp r0, r1",
            "subhs r0, r0, r1",
            "orrhs r2, r2, r3",
            "cmp r0, r1, lsr 1",
            "subhs r0, r0, r1, lsr 1",
            "orrhs r2, r2, r3, lsr 1",
            "cmp r0, r1, lsr 2",
            "subhs r0, r0, r1, lsr 2",
            "orrhs r2, r2, r3, lsr 2",
            "cmp r0, r1, lsr 3",
            "subhs r0, r0, r1, lsr 3",
            "orrhs r2, r2, r3, lsr 3",
            "cmp r0, 0",
            "lsrsne r3, r3, 4",
            "lsrne r1, r1, 4",
            "bne 0x55038",
            "mov r0, r2",
            "bx lr",
            "moveq r0, 1",
            "movne r0, 0",
            "bx lr",
            "clz r2, r1",
            "rsb r2, r2, 0x1f",
            "lsr r0, r0, r2",
            "bx lr",
            "cmp r0, 0",
            "mvnne r0, 0",
            "b fcn.00055c64"
        ]
    },
    "fcn.000125b4": {
        "function_address": "0x000125b4",
        "instructions": [
            "push {r0, r1, r2, lr}",
            "mov r2, 0",
            "add r3, sp, 8",
            "str r0, [r3, -4]!",
            "strb r2, [r0, r1]",
            "mov r1, r3",
            "ldr r0, [sp, 4]",
            "add r2, r2, 8",
            "bl sym.imp.strtoull",
            "ldr r3, [sp, 4]",
            "ldrb r3, [r3]",
            "cmp r3, 0",
            "beq 0x125f0",
            "ldr r0, str.corrupted_octal_value_in_tar_header",
            "bl fcn.000271d8",
            "add sp, sp, 0xc",
            "ldm sp!, {pc}"
        ]
    },
    "sym.imp.strtoull": {
        "function_address": "0x0000bc18",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x8bc]!"
        ]
    },
    "fcn.00026868": {
        "function_address": "0x00026868",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "cmp r0, 0",
            "ldr r4, [0x000268bc]",
            "movne r4, r0",
            "mov r6, r1",
            "mov r1, 0x2f",
            "mov r0, r4",
            "bl fcn.00027f1c",
            "mov r5, r0",
            "mov r3, r6",
            "ldrb r2, [r6], 1",
            "cmp r2, 0x2f",
            "beq 0x2688c",
            "ldr ip, [0x000268c0]",
            "cmp r5, 0",
            "ldr r2, [0x000268bc]",
            "mov r1, r4",
            "ldr r0, str._s_s_s",
            "moveq r2, ip",
            "pop {r4, r5, r6, lr}",
            "b fcn.0002a2d0"
        ]
    },
    "fcn.00027f58": {
        "function_address": "0x00027f58",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r4, r0",
            "mov r0, 8",
            "mov r5, r1",
            "bl fcn.00029e54"
        ]
    },
    "fcn.00012cd8": {
        "function_address": "0x00012cd8",
        "instructions": [
            "push {r0, r1, r4, r5, r6, lr}",
            "mov r6, r0",
            "mov r0, sp",
            "mov r5, r1",
            "bl fcn.00029fd8"
        ]
    },
    "sym.imp.fork": {
        "function_address": "0x0000c1b8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x4fc]!"
        ]
    },
    "fcn.000125fc": {
        "function_address": "0x000125fc",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x20c",
            "ldr r4, [r0, 0x10]",
            "add r2, sp, 0x204",
            "mov r5, r0",
            "add r6, sp, 8",
            "add r2, r2, 3",
            "str r2, [sp, 4]",
            "add r7, r6, 0x148",
            "mov r0, r5",
            "add r7, r7, 1",
            "mov r1, 0x200",
            "bl fcn.00012d90",
            "ldr r0, [r5, 0x24]",
            "mov r1, r6",
            "mov r2, 0x200",
            "bl fcn.0002900c"
        ]
    },
    "fcn.000270ec": {
        "function_address": "0x000270ec",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "cmp r0, 0",
            "sub sp, sp, 0x1000",
            "mov fp, r1",
            "sub sp, sp, 0xc",
            "mov r4, r2",
            "mov r5, r3",
            "str r0, [sp, 4]",
            "blt 0x27070",
            "orrs r3, r2, r5",
            "mov r6, 0",
            "mvnne r8, 0",
            "moveq r8, 1",
            "moveq r4, 0x1000",
            "moveq r5, 0",
            "mov r7, 0",
            "add sb, sp, 8",
            "cmp r5, 0",
            "mov r2, r4",
            "bgt 0x26ff0",
            "bne 0x26ff4",
            "cmp r4, 0x1000",
            "bls 0x26ff4",
            "mov r2, 0x1000",
            "ldr r0, [sp, 4]",
            "mov r1, sb",
            "bl fcn.00028f70",
            "subs sl, r0, 0",
            "beq 0x27078",
            "ldrlt r0, aav.0x0005bc80",
            "blt 0x27034",
            "cmp fp, 0",
            "blt 0x27044",
            "mov r0, fp",
            "mov r1, sb",
            "mov r2, sl",
            "bl fcn.000274f4",
            "cmp r0, sl",
            "bge 0x27044",
            "ldr r0, str.write_error",
            "bl fcn.000288b8",
            "cmp r8, 0",
            "bne 0x27070",
            "b 0x27078",
            "mov r2, sl",
            "asr r3, r2, 0x1f",
            "adds r6, r6, r2",
            "adc r7, r7, r3",
            "cmn r8, 1",
            "bne 0x26fd8",
            "subs r4, r4, r2",
            "sbc r5, r5, r3",
            "orrs r3, r4, r5",
            "beq 0x27078",
            "b 0x26fd8",
            "mvn r6, 0",
            "mvn r7, 0",
            "mov r0, r6",
            "mov r1, r7",
            "add sp, sp, 0xc",
            "add sp, sp, 0x1000",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "mov r2, 0",
            "mov r3, 0",
            "b 0x26f94"
        ]
    },
    "fcn.00028664": {
        "function_address": "0x00028664",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r5, r0",
            "ldrb r3, [r0]",
            "sub sp, sp, 0x24",
            "mov r4, r1",
            "sub r3, r3, 0x30",
            "cmp r3, 7",
            "bhi 0x286b8",
            "add r1, sp, 0x1c",
            "mov r2, 8",
            "bl sym.imp.strtoul",
            "ldr r3, [sp, 0x1c]",
            "ldrb r3, [r3]",
            "subs r3, r3, 0",
            "movne r3, 1",
            "cmp r0, 0x1000",
            "orrhs r3, r3, 1",
            "cmp r3, 0",
            "streq r0, [r4]",
            "beq 0x2888c",
            "b 0x28894",
            "ldr r7, [r1]",
            "ldr sb, str.augo",
            "ldr fp, aav.0x0005bdb0",
            "b 0x2887c",
            "cmp r3, 0x2c",
            "addeq r5, r5, 1",
            "beq 0x2887c",
            "mov r3, r5",
            "mov r8, 0",
            "ldrb r0, [r3]",
            "mov r5, r3",
            "ldr r2, str.augo",
            "mov r1, r3",
            "ldrb r6, [r2]",
            "mov ip, r2",
            "cmp r6, r0",
            "bne 0x2871c",
            "ldrb r0, [r1, 1]",
            "rsb r2, sb, r2",
            "ldr r2, [fp, r2, lsl 2]",
            "add r3, r3, 1",
            "cmp r0, 0",
            "beq 0x28898",
            "orr r8, r8, r2",
            "b 0x286dc",
            "ldrb ip, [ip, 1]",
            "add r2, r2, 1",
            "cmp ip, 0",
            "bne 0x286ec",
            "mvn r0, r8",
            "str r0, [sp, 0x14]",
            "ldrb sl, [r5]",
            "cmp sl, 0x2d",
            "cmpne sl, 0x2b",
            "beq 0x28760",
            "cmp sl, 0x3d",
            "bne 0x28894",
            "ldr r3, [0x000288a8]",
            "cmp r8, 0",
            "ldr r2, [sp, 0x14]",
            "movne r3, r2",
            "and r7, r7, r3",
            "ldrb r0, [r5, 1]",
            "add r3, r5, 1",
            "ldr r2, [0x000288ac]",
            "mov r1, r2",
            "ldrb ip, [r2], 1",
            "cmp ip, r0",
            "bne 0x287ac",
            "rsb r2, sb, r1",
            "lsl r6, r7, 0x17",
            "ldr r2, [fp, r2, lsl 2]",
            "add r5, r3, 1",
            "and r6, r2, r6, lsr 23",
            "tst r6, 0x124",
            "orrne r6, r6, 0x124",
            "tst r6, 0x92",
            "orrne r6, r6, 0x92",
            "tst r6, 0x49",
            "orrne r6, r6, 0x49",
            "b 0x28830",
            "ldrb r6, [r2]",
            "cmp r6, 0",
            "bne 0x2876c",
            "movw r1, 0x4049",
            "and r1, r7, r1",
            "ldr r2, str.rwxXst",
            "mov r5, r3",
            "ldrb ip, [r3], 1",
            "str r3, [sp, 4]",
            "str r2, [sp, 0x10]",
            "ldrb r0, [r2]",
            "cmp r0, ip",
            "bne 0x2881c",
            "cmp ip, 0x58",
            "ldr r3, [sp, 4]",
            "bne 0x287f4",
            "cmp r1, 0",
            "beq 0x28808",
            "ldr r0, str.rwxXst",
            "rsb r2, r0, r2",
            "ldr r0, aav.0x0005bd98",
            "ldr r2, [r0, r2, lsl 2]",
            "orr r6, r6, r2",
            "ldrb r2, [r3]",
            "mov r5, r3",
            "cmp r2, 0",
            "beq 0x28830",
            "b 0x287c0",
            "ldr r3, [sp, 0x10]",
            "add r2, r2, 1",
            "ldrb r0, [r3, 1]",
            "cmp r0, 0",
            "bne 0x287d0",
            "cmp r6, 0",
            "beq 0x2886c",
            "cmp r8, 0",
            "movne r3, r8",
            "bne 0x2885c",
            "mov r0, r8",
            "bl sym.imp.umask",
            "str r0, [sp, 0xc]",
            "bl sym.imp.umask",
            "ldr r3, [sp, 0xc]",
            "mvn r3, r3",
            "and r6, r3, r6",
            "cmp sl, 0x2d",
            "biceq r7, r7, r6",
            "orrne r7, r7, r6",
            "ldrb r3, [r5]",
            "cmp r3, 0x2c",
            "cmpne r3, 0",
            "bne 0x28734",
            "ldrb r3, [r5]",
            "cmp r3, 0",
            "bne 0x286c8",
            "str r7, [r4]",
            "mov r0, 1",
            "b 0x28898",
            "mov r0, 0",
            "add sp, sp, 0x24",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.000191b0": {
        "function_address": "0x000191b0",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r5, r0",
            "mov r4, r1",
            "blx r2",
            "cmp r0, 0",
            "bge 0x191f0",
            "ldr r3, [0x00019210]",
            "ldr r3, [r3]",
            "ldr r3, [r3]",
            "cmp r3, 2",
            "beq 0x19208",
            "ldr r0, str.cannot_stat__s",
            "mov r1, r5",
            "bl fcn.000288b8",
            "mvn r0, 0",
            "pop {r3, r4, r5, pc}",
            "ldr r0, [r4, 0x10]",
            "and r0, r0, 0xf000",
            "cmp r0, 0x4000",
            "movne r0, 1",
            "moveq r0, 3",
            "pop {r3, r4, r5, pc}",
            "mov r0, 0",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.00026980": {
        "function_address": "0x00026980",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "ands r7, r2, 2",
            "mov r5, r2",
            "ldr r3, sym.imp.stat64",
            "sub sp, sp, 0xe4",
            "mov r4, r1",
            "ldr r2, sym.imp.lstat64",
            "add r1, sp, 0x70",
            "mov r6, r0",
            "moveq r3, r2",
            "blx r3",
            "cmp r0, 0",
            "bge 0x269c8",
            "tst r5, 0x60",
            "ldreq r0, str.cannot_stat__s",
            "moveq r1, r6",
            "beq 0x269f8",
            "b 0x26be0",
            "mov r0, r4",
            "add r1, sp, 8",
            "bl sym.imp.lstat64",
            "cmp r0, 0",
            "bge 0x26a04",
            "ldr r3, [0x00026f50]",
            "ldr r3, [r3]",
            "ldr r3, [r3]",
            "cmp r3, 2",
            "beq 0x26a54",
            "ldr r0, str.cannot_stat__s",
            "mov r1, r4",
            "bl fcn.000288b8",
            "mvn r7, 0",
            "b 0x26f38",
            "ldr r3, [sp, 8]",
            "ldr r2, [sp, 0x70]",
            "cmp r2, r3",
            "bne 0x26a5c",
            "ldr r3, [sp, 0xc]",
            "ldr r2, [sp, 0x74]",
            "cmp r2, r3",
            "bne 0x26a5c",
            "ldr r3, [sp, 0x68]",
            "ldr r2, [sp, 0xd0]",
            "cmp r2, r3",
            "bne 0x26a5c",
            "ldr r3, [sp, 0x6c]",
            "ldr r2, [sp, 0xd4]",
            "cmp r2, r3",
            "bne 0x26a5c",
            "ldr r0, str._s_and__s_are_the_same_file",
            "mov r1, r6",
            "mov r2, r4",
            "b 0x26e84",
            "mov r8, 0",
            "b 0x26a60",
            "mov r8, 1",
            "ldr r3, [sp, 0x80]",
            "and r3, r3, 0xf000",
            "cmp r3, 0x4000",
            "bne 0x26bd8",
            "tst r5, 4",
            "ldreq r0, [0x00026f58]",
            "beq 0x26a90",
            "add r0, sp, 0x70",
            "bl fcn.00027da0",
            "subs sl, r0, 0",
            "beq 0x26a98",
            "ldr r0, str.recursion_detected__omitting_directory__s",
            "mov r1, r6",
            "b 0x26ab8",
            "cmp r8, 0",
            "beq 0x26ac0",
            "ldr r3, [sp, 0x18]",
            "and r3, r3, 0xf000",
            "cmp r3, 0x4000",
            "beq 0x26b14",
            "ldr r0, str.target__s_is_not_a_directory",
            "mov r1, r4",
            "bl fcn.00027184",
            "b 0x269fc",
            "bl sym.imp.umask",
            "ldr r1, [sp, 0x80]",
            "tst r5, 1",
            "mov sl, r0",
            "biceq r1, r1, r0",
            "mov r0, r4",
            "orr r1, r1, 0x1c0",
            "bl sym.imp.mkdir",
            "cmp r0, 0",
            "bge 0x26af8",
            "mov r0, sl",
            "bl sym.imp.umask",
            "ldr r0, str.cannot_create_directory__s",
            "b 0x269f4",
            "mov r0, sl",
            "bl sym.imp.umask",
            "mov r0, r4",
            "add r1, sp, 8",
            "bl sym.imp.lstat64",
            "cmp r0, 0",
            "blt 0x269f0",
            "add r0, sp, 8",
            "mov r1, 0",
            "bl fcn.00027e30",
            "tst r5, 0x60",
            "beq 0x26c34",
            "ldr r3, sym.imp.symlink",
            "tst r5, 0x40",
            "ldr r8, sym.imp.link",
            "mov r0, r6",
            "mov r1, r4",
            "movne r8, r3",
            "blx r8",
            "cmp r0, 0",
            "bge 0x26f34",
            "mov r0, r4",
            "mov r1, r5",
            "bl fcn.0002690c",
            "sxtb r7, r0",
            "cmp r7, 0",
            "ble 0x26f38",
            "mov r0, r6",
            "mov r1, r4",
            "blx r8",
            "cmp r0, 0",
            "bge 0x26f34",
            "b 0x26c98",
            "cmp r3, 0x8000",
            "bne 0x26d9c",
            "cmp r7, 0",
            "bne 0x26cac",
            "add sb, sp, 0x70",
            "mov r0, sb",
            "bl fcn.00027da0",
            "subs sl, r0, 0",
            "beq 0x26ca0",
            "mov r1, r4",
            "bl sym.imp.link",
            "cmp r0, 0",
            "bge 0x26f38",
            "mov r0, r4",
            "mov r1, r5",
            "bl fcn.0002690c",
            "sxtb r0, r0",
            "cmp r0, 0",
            "movle r7, r0",
            "ble 0x26f38",
            "mov r0, sl",
            "mov r1, r4",
            "bl sym.imp.link",
            "cmp r0, 0",
            "bge 0x26f38",
            "ldr r0, str.cannot_create_link__s",
            "b 0x269f4",
            "mov r0, sb",
            "mov r1, r4",
            "bl fcn.00027e30",
            "mov r0, r6",
            "mov r1, 0",
            "bl fcn.00029fd0",
            "subs r6, r0, 0",
            "blt 0x269fc",
            "cmp r8, 0",
            "beq 0x26ce8",
            "tst r5, 0x14",
            "bne 0x26ce8",
            "ldr r3, [sp, 0x18]",
            "and r3, r3, 0xf000",
            "cmp r3, 0xa000",
            "movne r0, r4",
            "movwne r1, 0x241",
            "bne 0x26cf0",
            "mov r0, r4",
            "mov r1, 0xc1",
            "ldr r2, [sp, 0x80]",
            "bl sym.imp.open64",
            "cmn r0, 1",
            "mov r8, r0",
            "bne 0x26d4c",
            "mov r0, r4",
            "mov r1, r5",
            "bl fcn.0002690c",
            "sxtb r7, r0",
            "cmp r7, 0",
            "bgt 0x26d28",
            "mov r0, r6",
            "bl sym.imp.close",
            "b 0x26f38",
            "mov r0, r4",
            "mov r1, 0xc1",
            "ldr r2, [sp, 0x80]",
            "bl fcn.00029fa4",
            "subs r8, r0, 0",
            "bge 0x26d4c",
            "mov r0, r6",
            "bl sym.imp.close",
            "b 0x269fc",
            "mov r0, r6",
            "mov r1, r8",
            "bl fcn.000270ec",
            "cmn r0, 1",
            "bne 0x26d6c",
            "cmn r1, 1",
            "moveq r7, 0xff",
            "beq 0x26d70",
            "mov r7, 0",
            "mov r0, r8",
            "bl sym.imp.close",
            "cmp r0, 0",
            "bge 0x26d90",
            "mov r7, 0xff",
            "ldr r0, str.cannot_close__s",
            "mov r1, r4",
            "bl fcn.000288b8",
            "mov r0, r6",
            "bl sym.imp.close",
            "b 0x26e98",
            "cmp r8, 0",
            "beq 0x26dcc",
            "ldr r3, [0x00026f50]",
            "mov r2, 0x11",
            "mov r0, r4",
            "mov r1, r5",
            "ldr r3, [r3]",
            "str r2, [r3]",
            "bl fcn.0002690c",
            "sxtb r7, r0",
            "cmp r7, 0",
            "ble 0x26f38",
            "ldr r2, [sp, 0x80]",
            "and r3, r2, 0xf000",
            "cmp r3, 0xa000",
            "bne 0x26e40",
            "mov r0, r6",
            "bl fcn.0002a6d8",
            "cmp r3, 0x6000",
            "cmpne r3, 0x2000",
            "beq 0x26e5c",
            "cmp r3, 0xc000",
            "beq 0x26e5c",
            "cmp r3, 0x1000",
            "bne 0x26e7c",
            "mov r1, r2",
            "mov r0, r4",
            "ldrd r2, r3, [sp, 0x90]",
            "bl sym.imp.mknod",
            "cmp r0, 0",
            "ldrlt r0, str.cannot_create__s",
            "blt 0x269f4",
            "b 0x26e94",
            "ldr r0, str.unrecognized_file__s_with_mode__x",
            "mov r1, r6",
            "bl fcn.00027184",
            "b 0x269fc",
            "mov r7, 0",
            "tst r5, 1",
            "beq 0x26f2c",
            "ldr r3, [sp, 0xb8]",
            "mov r0, r4",
            "add r1, sp, 0xd8",
            "str r3, [sp, 0xd8]",
            "ldr r3, [sp, 0xc0]",
            "str r3, [sp, 0xdc]",
            "bl sym.imp.utime",
            "cmp r0, 0",
            "bge 0x26ed4",
            "ldr r0, str.cannot_preserve__s_of__s",
            "mov r2, r4",
            "ldr r1, aav.0x00060ec8",
            "bl fcn.000288b8",
            "mov r0, r4",
            "ldr r1, [sp, 0x88]",
            "ldr r2, [sp, 0x8c]",
            "bl sym.imp.chown",
            "cmp r0, 0",
            "bge 0x26f08",
            "ldr r3, [sp, 0x80]",
            "mov r2, r4",
            "ldr r0, str.cannot_preserve__s_of__s",
            "ldr r1, str.ownership",
            "bic r3, r3, 0xc00",
            "str r3, [sp, 0x80]",
            "bl fcn.000288b8",
            "mov r0, r4",
            "ldr r1, [sp, 0x80]",
            "bl sym.imp.chmod",
            "cmp r0, 0",
            "bge 0x26f2c",
            "ldr r0, str.cannot_preserve__s_of__s",
            "mov r2, r4",
            "ldr r1, str.permissions",
            "bl fcn.000288b8",
            "sxtb r7, r7",
            "b 0x26f38",
            "mov r7, 0",
            "mov r0, r7",
            "add sp, sp, 0xe4",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.imp.lstat64": {
        "function_address": "0x0000bd38",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x7fc]!"
        ]
    },
    "fcn.00027da0": {
        "function_address": "0x00027da0",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r4, r0",
            "ldr r3, [0x00027e2c]",
            "ldr r5, [r3]",
            "cmp r5, 0",
            "beq 0x27e24",
            "ldr r6, [r0, 0x64]",
            "movw r2, 0x137",
            "ldr r7, [r0, 0x60]",
            "mov r3, 0",
            "mov r1, r6",
            "mov r0, r7",
            "bl fcn.00055c28",
            "ldr r5, [r5, r2, lsl 2]",
            "b 0x27e1c",
            "ldr r3, [r5, 8]",
            "cmp r3, r7",
            "bne 0x27e18",
            "ldr r3, [r5, 0xc]",
            "cmp r3, r6",
            "bne 0x27e18",
            "ldr r2, [r5, 0x10]",
            "ldr r3, [r4]",
            "cmp r2, r3",
            "bne 0x27e18",
            "ldr r2, [r5, 0x14]",
            "ldr r3, [r4, 4]",
            "cmp r2, r3",
            "addeq r5, r5, 0x18",
            "beq 0x27e24",
            "ldr r5, [r5]",
            "cmp r5, 0",
            "bne 0x27ddc",
            "mov r0, r5",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.00027e30": {
        "function_address": "0x00027e30",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sl, lr}",
            "movw r2, 0x137",
            "mov r6, r1",
            "mov r7, r0",
            "mov r3, 0",
            "ldrd r0, r1, [r0, 0x60]",
            "bl fcn.00055c28",
            "ldr r3, [0x00027ec0]",
            "cmp r6, 0",
            "mov sl, r2",
            "moveq r6, r3",
            "mov r0, r6",
            "bl sym.imp.strlen",
            "add r0, r0, 0x20",
            "bl fcn.00029e54"
        ]
    },
    "fcn.0002690c": {
        "function_address": "0x0002690c",
        "instructions": [
            "tst r1, 0x10",
            "push {r4, lr}",
            "mov r4, r0",
            "beq 0x26944",
            "ldr r3, obj.stderr",
            "ldr r1, str._s:_overwrite__s_",
            "ldr r0, [r3]",
            "ldr r3, [0x00026978]",
            "ldr r2, [r3]",
            "mov r3, r4",
            "bl sym.imp.fprintf",
            "bl fcn.00026434",
            "cmp r0, 0",
            "popeq {r4, pc}",
            "mov r0, r4",
            "bl sym.imp.unlink",
            "cmp r0, 0",
            "bge 0x26968",
            "ldr r0, str.cannot_remove__s",
            "mov r1, r4",
            "bl fcn.000288b8",
            "mvn r0, 0",
            "pop {r4, pc}",
            "mov r0, 1",
            "pop {r4, pc}"
        ]
    },
    "sym.imp.link": {
        "function_address": "0x0000bef4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x6d4]!"
        ]
    },
    "fcn.00029fd0": {
        "function_address": "0x00029fd0",
        "instructions": [
            "movw r2, 0x1b6",
            "b fcn.00029fa4"
        ]
    },
    "sym.imp.mknod": {
        "function_address": "0x0000b6fc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xc24]!"
        ]
    },
    "sym.imp.utime": {
        "function_address": "0x0000bba0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x90c]!"
        ]
    },
    "sym.imp.chown": {
        "function_address": "0x0000b918",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xabc]!"
        ]
    },
    "fcn.00027640": {
        "function_address": "0x00027640",
        "instructions": [
            "push {r0, r1, r2, lr}",
            "add r1, sp, 4",
            "bl fcn.00027588",
            "ldr r3, [sp, 4]",
            "cmp r3, 0",
            "beq 0x27670",
            "sub r3, r3, 1",
            "str r3, [sp, 4]",
            "ldrb r2, [r0, r3]",
            "cmp r2, 0xa",
            "moveq r2, 0",
            "strbeq r2, [r0, r3]",
            "pop {r1, r2, r3, pc}"
        ]
    },
    "fcn.00027588": {
        "function_address": "0x00027588",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sl, lr}",
            "mov r5, 0",
            "mov r8, r0",
            "mov r7, r1",
            "mov sl, r5",
            "mov r4, r5",
            "b 0x275ec",
            "cmp r4, r5",
            "blt 0x275c0",
            "add r5, r5, 0x50",
            "mov r0, sl",
            "mov r1, r5",
            "bl fcn.00029e84",
            "cmp r6, 0",
            "strb r6, [sl, r4]",
            "add r4, r4, 1",
            "beq 0x27600",
            "cmp r6, 0xa",
            "movne r6, 0",
            "moveq r6, 1",
            "cmp r7, 0",
            "moveq r6, 0",
            "cmp r6, 0",
            "bne 0x27600",
            "mov r0, r8",
            "bl sym.imp.fgetc",
            "cmn r0, 1",
            "mov r6, r0",
            "bne 0x275a4",
            "cmp r7, 0",
            "strne r4, [r7]",
            "cmp sl, 0",
            "beq 0x27628",
            "mov r0, sl",
            "add r1, r4, 1",
            "bl fcn.00029e84",
            "mov r0, sl",
            "pop {r3, r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "sym.imp.fgetc": {
        "function_address": "0x0000bd50",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x7ec]!"
        ]
    },
    "sym.imp.realloc": {
        "function_address": "0x0000b81c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xb64]!"
        ]
    },
    "fcn.00013270": {
        "function_address": "0x00013270",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x24",
            "add r2, sp, 0x20",
            "mov r5, 0",
            "str r5, [r2, -8]!",
            "str r0, [sp, 0x14]",
            "str r2, [sp, 8]",
            "ldr sb, obj.stdout",
            "b 0x13510",
            "bl sym.imp.strlen",
            "bl fcn.00029eb4",
            "ldr r3, [0x00013530]",
            "mov r6, r0",
            "ldr fp, [sp, 0x18]",
            "ldr r4, [r3]",
            "ands r8, r4, 3",
            "beq 0x13344",
            "mov r7, 0",
            "ldr sl, [0x00013534]",
            "ldr r8, [0x00013538]",
            "b 0x13334",
            "lsl r3, r7, 3",
            "str r3, [sp, 4]",
            "ldr r3, [r8]",
            "ldr r4, [r3, r7, lsl 3]",
            "b 0x13320",
            "ldrb r3, [r6, r4]",
            "cmp r3, 0",
            "bne 0x132fc",
            "mov r2, 0x58",
            "strb r2, [r6, r4]",
            "ldr r3, [sp, 0x18]",
            "ldr r1, [sb]",
            "ldrb r0, [r3, r4]",
            "bl sym.imp.fputc",
            "ldr r3, [r8]",
            "add r4, r4, 1",
            "ldr r2, [sp, 4]",
            "add r3, r3, r2",
            "ldr r3, [r3, 4]",
            "cmp r4, r3",
            "bgt 0x13330",
            "cmn r3, 1",
            "beq 0x13330",
            "ldr r0, [sp, 0x18]",
            "bl sym.imp.strlen",
            "cmp r4, r0",
            "blo 0x132d8",
            "add r7, r7, 1",
            "ldr r3, [sl]",
            "cmp r7, r3",
            "blo 0x132c4",
            "b 0x134f0",
            "ldr sl, [0x0001353c]",
            "ldrb r1, [sl]",
            "cmp r1, 0xa",
            "bne 0x133bc",
            "ldr r3, [0x00013538]",
            "ldr r2, [r3]",
            "ldr r3, [r2]",
            "cmp r5, r3",
            "blo 0x134fc",
            "ldr r1, [0x00013534]",
            "ldr r1, [r1]",
            "cmp r1, 0",
            "beq 0x134fc",
            "b 0x133b0",
            "add r0, r2, r8, lsl 3",
            "add r3, r3, 1",
            "ldr r0, [r0, 4]",
            "cmp r3, r0",
            "bgt 0x13398",
            "cmn r0, 1",
            "bne 0x133b0",
            "add r8, r8, 1",
            "cmp r8, r1",
            "bhs 0x134fc",
            "ldr r3, [r2, r8, lsl 3]",
            "cmp r5, r3",
            "blo 0x134fc",
            "cmp r3, r5",
            "blo 0x1337c",
            "b 0x133e8",
            "mov r0, fp",
            "strb r1, [sp, 0x1c]",
            "strb r8, [sp, 0x1d]",
            "bl sym.imp.strchr",
            "cmp r0, 0",
            "strne r8, [sp, 4]",
            "mvnne r4, 0",
            "movne r7, r8",
            "bne 0x134d8",
            "tst r4, 0x10",
            "bne 0x134fc",
            "mov r0, fp",
            "bl sym.imp.puts",
            "b 0x134fc",
            "lsl r3, r7, 3",
            "str r3, [sp, 0x10]",
            "ldr r3, [0x00013538]",
            "ldr r2, [r3]",
            "ldr sl, [r2, r7, lsl 3]",
            "b 0x13420",
            "ldr r0, [sp, 8]",
            "add r1, sp, 0x1c",
            "bl sym.imp.strsep",
            "add r4, r4, 1",
            "mov r8, r0",
            "ldr r3, [sp, 0x18]",
            "cmp r3, 0",
            "cmpne r4, sl",
            "blt 0x1340c",
            "cmp r4, sl",
            "movne r3, 0",
            "moveq r3, 1",
            "cmp r8, 0",
            "moveq r3, 0",
            "cmp r3, 0",
            "beq 0x134a0",
            "add r2, r6, r4",
            "str r2, [sp, 0xc]",
            "ldrb r3, [r6, r4]",
            "cmp r3, 0",
            "bne 0x134a0",
            "ldr r3, [sp, 4]",
            "cmp r3, 0",
            "beq 0x1347c",
            "ldr r2, [0x0001353c]",
            "ldr r1, [sb]",
            "ldrb r0, [r2]",
            "bl sym.imp.fputc",
            "mov r0, r8",
            "ldr r1, [sb]",
            "bl sym.imp.fputs",
            "ldr r2, [sp, 0xc]",
            "mov r3, 0x58",
            "strb r3, [r2]",
            "ldr r3, [sp, 4]",
            "add r3, r3, 1",
            "str r3, [sp, 4]",
            "ldr r2, [0x00013538]",
            "add sl, sl, 1",
            "ldr r3, [r2]",
            "ldr r2, [sp, 0x10]",
            "add r3, r3, r2",
            "ldr r3, [r3, 4]",
            "cmp sl, r3",
            "bgt 0x134d4",
            "ldr r2, [sp, 0x18]",
            "cmp r2, 0",
            "beq 0x134d4",
            "cmn r3, 1",
            "bne 0x13420",
            "add r7, r7, 1",
            "ldr r3, [0x00013534]",
            "ldr r2, [r3]",
            "ldr r3, [sp, 0x18]",
            "cmp r3, 0",
            "cmpne r7, r2",
            "blo 0x133f4",
            "mov r0, 0xa",
            "ldr r1, [sb]",
            "bl sym.imp.fputc",
            "mov r0, r6",
            "add r5, r5, 1",
            "bl sym.imp.free",
            "mov r0, fp",
            "bl sym.imp.free",
            "ldr r0, [sp, 0x14]",
            "bl fcn.00027640",
            "cmp r0, 0",
            "str r0, [sp, 0x18]",
            "bne 0x13294",
            "add sp, sp, 0x24",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.imp.fputc": {
        "function_address": "0x0000be1c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x764]!"
        ]
    },
    "sym.imp.strsep": {
        "function_address": "0x0000bc60",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x88c]!"
        ]
    },
    "sym.imp.fputs": {
        "function_address": "0x0000bf0c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x6c4]!"
        ]
    },
    "fcn.0002995c": {
        "function_address": "0x0002995c",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r5, r0",
            "bl sym.imp.fopen64",
            "subs r4, r0, 0",
            "bne 0x29988",
            "ldr r0, aav.0x0005ad0c",
            "mov r1, r5",
            "bl fcn.000288b8",
            "ldr r3, [0x00029994]",
            "ldr r3, [r3]",
            "str r4, [r3]",
            "mov r0, r4",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.0002a450": {
        "function_address": "0x0002a450",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r0",
            "bl sym.imp.stat64",
            "cmp r0, 0",
            "popeq {r4, pc}",
            "ldr r0, str.cant_stat__s",
            "mov r1, r4",
            "bl fcn.00028900"
        ]
    },
    "fcn.0002724c": {
        "function_address": "0x0002724c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "sub sp, sp, 0x68",
            "mov r4, r1",
            "mov r1, sp",
            "mov sl, r0",
            "bl sym.imp.stat64",
            "cmp r0, 0",
            "movne r4, 0",
            "bne 0x27354",
            "ldr r3, [sp, 0x10]",
            "ldr r0, str._proc_mounts",
            "ldr r1, [0x00027364]",
            "and r3, r3, 0xf000",
            "cmp r3, 0x6000",
            "ldreq r6, [sp, 0x20]",
            "ldreq r7, [sp, 0x24]",
            "ldrne r6, [sp]",
            "ldrne r7, [sp, 4]",
            "cmp r4, 0",
            "movne r0, r4",
            "bl sym.imp.setmntent",
            "subs r5, r0, 0",
            "moveq r4, r5",
            "beq 0x27354",
            "b 0x27338",
            "mov r0, sl",
            "ldr r1, [r4, 4]",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x2734c",
            "ldr sb, [r4]",
            "mov r0, sl",
            "mov r1, sb",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x2734c",
            "mov r0, sb",
            "mov r1, sp",
            "bl sym.imp.stat64",
            "cmp r0, 0",
            "bne 0x27308",
            "ldr r3, [sp, 0x20]",
            "cmp r3, r6",
            "bne 0x27308",
            "ldr r3, [sp, 0x24]",
            "cmp r3, r7",
            "beq 0x2734c",
            "ldr r0, [r4, 4]",
            "mov r1, sp",
            "bl sym.imp.stat64",
            "cmp r0, 0",
            "bne 0x2733c",
            "ldr r3, [sp]",
            "cmp r3, r6",
            "bne 0x2733c",
            "ldr r3, [sp, 4]",
            "cmp r3, r7",
            "bne 0x2733c",
            "b 0x2734c",
            "mov r8, sp",
            "mov r0, r5",
            "bl sym.imp.getmntent",
            "subs r4, r0, 0",
            "bne 0x272b0",
            "mov r0, r5",
            "bl sym.imp.endmntent",
            "mov r0, r4",
            "add sp, sp, 0x68",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "sym.imp.setmntent": {
        "function_address": "0x0000baa4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x9b4]!"
        ]
    },
    "sym.imp.getmntent": {
        "function_address": "0x0000c1d0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x4ec]!"
        ]
    },
    "sym.imp.endmntent": {
        "function_address": "0x0000b84c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xb44]!"
        ]
    },
    "fcn.00055c28": {
        "function_address": "0x00055c28",
        "instructions": [
            "cmp r3, 0",
            "cmpeq r2, 0",
            "bne 0x55c48",
            "cmp r1, 0",
            "cmpeq r0, 0",
            "mvnne r1, 0",
            "mvnne r0, 0",
            "b fcn.00055c64",
            "sub sp, sp, 8",
            "push {sp, lr}",
            "bl fcn.00055cb0",
            "ldr lr, [sp, 4]",
            "add sp, sp, 8",
            "pop {r2, r3}",
            "bx lr"
        ]
    },
    "fcn.00055cb0": {
        "function_address": "0x00055cb0",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r7, r3",
            "mov r6, r2",
            "mov r4, r0",
            "mov r5, r1",
            "bl fcn.00056150",
            "umull r2, r3, r0, r6",
            "mul r7, r0, r7",
            "ldr ip, [sp, 0x18]",
            "mla r7, r6, r1, r7",
            "add r3, r7, r3",
            "subs r2, r4, r2",
            "sbc r3, r5, r3",
            "strd r2, r3, [ip]",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.00027478": {
        "function_address": "0x00027478",
        "instructions": [
            "push {r4, lr}",
            "sub sp, sp, 0x170",
            "mov r1, sp",
            "bl sym.imp.stat64",
            "cmp r0, 0",
            "movne r0, 0",
            "bne 0x274dc",
            "ldr r3, [sp, 0x10]",
            "and r3, r3, 0xf000",
            "cmp r3, 0x6000",
            "ldreq r3, [0x000274e4]",
            "addeq r0, sp, 0x170",
            "ldrdeq r2, r3, [r3, r0]",
            "ldrne r3, [0x000274e8]",
            "addne r1, sp, 0x170",
            "ldrdne r2, r3, [r3, r1]",
            "ldr r1, [0x000274ec]",
            "add r0, sp, 0x170",
            "mov r4, sp",
            "strd r2, r3, [r0, r1]",
            "add r0, sp, 0x70",
            "ldr r1, [0x000274f0]",
            "bl sym.imp.strcpy",
            "mov r0, sp",
            "bl fcn.00027368",
            "add sp, sp, 0x170",
            "pop {r4, pc}"
        ]
    },
    "fcn.00027368": {
        "function_address": "0x00027368",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sl, lr}",
            "add r6, r0, 0x70",
            "mov r4, r0",
            "mov r0, r6",
            "bl sym.imp.opendir",
            "subs r7, r0, 0",
            "moveq r5, r7",
            "beq 0x27470",
            "mov r0, r6",
            "bl sym.imp.strlen",
            "rsb r8, r0, 0xfe",
            "cmp r8, 0",
            "movle r5, 0",
            "ble 0x27470",
            "add r3, r4, r0",
            "mov r2, 0x2f",
            "add sl, r0, 0x71",
            "strb r2, [r3, 0x70]",
            "add sl, r4, sl",
            "b 0x27458",
            "add r1, r5, 0x13",
            "mov r2, r8",
            "mov r0, sl",
            "bl fcn.00029568",
            "mov r0, r6",
            "mov r1, r4",
            "bl sym.imp.lstat64",
            "cmp r0, 0",
            "bne 0x27458",
            "ldr r3, [r4, 0x10]",
            "and r3, r3, 0xf000",
            "cmp r3, 0x6000",
            "bne 0x2741c",
            "ldr r2, [r4, 0x20]",
            "ldr r3, [r4, 0x68]",
            "cmp r2, r3",
            "bne 0x27458",
            "ldr r2, [r4, 0x24]",
            "ldr r3, [r4, 0x6c]",
            "cmp r2, r3",
            "bne 0x27458",
            "mov r0, r6",
            "bl fcn.00029ed8",
            "mov r5, r0",
            "b 0x27468",
            "cmp r3, 0x4000",
            "bne 0x27458",
            "ldrb r3, [r5, 0x13]",
            "cmp r3, 0x2e",
            "bne 0x27448",
            "ldrb r3, [r5, 0x14]",
            "cmp r3, 0",
            "beq 0x27458",
            "ldrh r3, [r5, 0x14]",
            "cmp r3, 0x2e",
            "beq 0x27458",
            "mov r0, r4",
            "bl fcn.00027368",
            "subs r5, r0, 0",
            "bne 0x27468",
            "mov r0, r7",
            "bl sym.imp.readdir64",
            "subs r5, r0, 0",
            "bne 0x273b8",
            "mov r0, r7",
            "bl sym.imp.closedir",
            "mov r0, r5",
            "pop {r3, r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "fcn.00027c8c": {
        "function_address": "0x00027c8c",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "umull r4, r5, r2, r0",
            "mla r5, r2, r1, r5",
            "sub sp, sp, 0x14",
            "orrs r2, r4, r5",
            "ldreq r0, [0x00027d88]",
            "beq 0x27d80",
            "cmp r3, 0",
            "bne 0x27cc8",
            "ldr r6, [0x00027d8c]",
            "movw lr, 0x3ff",
            "ldr r2, str._llu",
            "mov r0, 0xa",
            "ldr ip, [0x00027d94]",
            "b 0x27d2c",
            "lsr r0, r3, 1",
            "mov r2, r3",
            "mov r3, 0",
            "adds r6, r4, r0",
            "adc r7, r5, 0",
            "mov r0, r6",
            "mov r1, r7",
            "bl fcn.00055c28",
            "ldr r2, str._llu",
            "mov r4, r0",
            "mov r5, r1",
            "ldr ip, [0x00027d88]",
            "b 0x27d5c",
            "lsl r3, r4, 0x16",
            "lsr r7, r4, 0xa",
            "lsr r2, r5, 0xa",
            "lsr r3, r3, 0x16",
            "orr r1, r7, r5, lsl 22",
            "mul r3, r0, r3",
            "mov r5, r2",
            "ldr r2, [0x00027d98]",
            "add ip, ip, 1",
            "mov r4, r1",
            "add r3, r3, 0x200",
            "asr r3, r3, 0xa",
            "cmp r5, 0",
            "bne 0x27d3c",
            "cmp r4, lr",
            "bls 0x27d44",
            "cmp ip, r6",
            "bne 0x27cfc",
            "cmp r3, 0xa",
            "bne 0x27d60",
            "mov r0, 1",
            "mov r1, 0",
            "adds r4, r4, r0",
            "adc r5, r5, r1",
            "mov r3, 0",
            "str r3, [sp, 8]",
            "mov r1, 0x15",
            "ldrb r3, [ip]",
            "ldr r0, [0x00027d9c]",
            "strd r4, r5, [sp]",
            "str r3, [sp, 0xc]",
            "bl sym.imp.snprintf",
            "ldr r0, [0x00027d9c]",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, pc}"
        ]
    },
    "sym.imp.snprintf": {
        "function_address": "0x0000baf8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x97c]!"
        ]
    },
    "fcn.00027218": {
        "function_address": "0x00027218",
        "instructions": [
            "push {r3, lr}",
            "mov r4, r0",
            "ldr r3, obj.stdout",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "cmp r0, 0",
            "beq 0x2723c",
            "ldr r0, str.standard_output",
            "bl fcn.00028900",
            "mov r0, r4",
            "bl sym.imp.exit"
        ]
    },
    "sym.imp.fflush": {
        "function_address": "0x0000bf9c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x664]!"
        ]
    },
    "fcn.0002a37c": {
        "function_address": "0x0002a37c",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r5, r0",
            "bl sym.imp.opendir",
            "subs r4, r0, 0",
            "bne 0x2a39c",
            "ldr r0, aav.0x0005beb4",
            "mov r1, r5",
            "bl fcn.000288b8",
            "mov r0, r4",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.00013ec0": {
        "function_address": "0x00013ec0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "sub sp, sp, 0x68",
            "mov r1, sp",
            "mov r5, r0",
            "bl sym.imp.lstat64",
            "cmp r0, 0",
            "bne 0x13f68",
            "ldr r3, [0x000140bc]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x13f28",
            "ldr r3, [0x000140c0]",
            "ldr r1, [0x000140c4]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "ldrdeq r2, r3, [sp]",
            "strdeq r2, r3, [r1]",
            "beq 0x13f28",
            "ldr r2, [r1]",
            "ldr r3, [sp]",
            "cmp r2, r3",
            "bne 0x140ac",
            "ldr r2, [r1, 4]",
            "ldr r3, [sp, 4]",
            "cmp r2, r3",
            "bne 0x140ac",
            "ldr r3, [sp, 0x10]",
            "ldr r4, [sp, 0x40]",
            "and r3, r3, 0xf000",
            "cmp r3, 0xa000",
            "bne 0x13f98",
            "ldr r6, [0x000140c8]",
            "ldr r3, [0x000140c0]",
            "ldr r2, [r6]",
            "ldr r3, [r3]",
            "cmp r2, r3",
            "ble 0x13f98",
            "mov r0, r5",
            "mov r1, sp",
            "bl sym.imp.stat64",
            "cmp r0, 0",
            "beq 0x13f84",
            "ldr r0, aav.0x0005ad0c",
            "mov r1, r5",
            "bl fcn.000288b8",
            "ldr r3, [0x000140d0]",
            "mov r2, 1",
            "str r2, [r3]",
            "b 0x140ac",
            "ldr r3, [r6]",
            "ldr r4, [sp, 0x40]",
            "cmp r3, 1",
            "mvneq r3, 0x80000000",
            "streq r3, [r6]",
            "ldr r3, [0x000140d4]",
            "ldr r2, [sp, 0x14]",
            "ldr r3, [r3]",
            "cmp r2, r3",
            "bls 0x13fc8",
            "mov r0, sp",
            "mov r6, sp",
            "bl fcn.00027da0",
            "subs r1, r0, 0",
            "bne 0x140ac",
            "mov r0, sp",
            "bl fcn.00027e30",
            "ldr r3, [sp, 0x10]",
            "and r3, r3, 0xf000",
            "cmp r3, 0x4000",
            "bne 0x1406c",
            "mov r0, r5",
            "bl fcn.0002a37c",
            "subs r7, r0, 0",
            "ldreq r3, [0x000140d0]",
            "moveq r2, 1",
            "streq r2, [r3]",
            "beq 0x140b0",
            "mov r0, r5",
            "mov r1, 0x2f",
            "bl fcn.00027f1c",
            "cmp r0, 0",
            "ldr r6, [0x000140c0]",
            "movne r3, 0",
            "strbne r3, [r0]",
            "b 0x14050",
            "mov r0, r5",
            "add r1, r1, 0x13",
            "bl fcn.000268c8",
            "subs r8, r0, 0",
            "beq 0x14050",
            "ldr r3, [r6]",
            "add r3, r3, 1",
            "str r3, [r6]",
            "bl fcn.00013ec0",
            "ldr r3, [r6]",
            "add r4, r4, r0",
            "mov r0, r8",
            "sub r3, r3, 1",
            "str r3, [r6]",
            "bl sym.imp.free",
            "mov r0, r7",
            "bl sym.imp.readdir64",
            "subs r1, r0, 0",
            "bne 0x14014",
            "mov r0, r7",
            "bl sym.imp.closedir",
            "b 0x14084",
            "ldr r3, [0x000140c0]",
            "ldr r2, [r3]",
            "ldr r3, [0x000140d8]",
            "ldr r3, [r3]",
            "cmp r2, r3",
            "bgt 0x140b0",
            "ldr r3, [0x000140c0]",
            "ldr r2, [r3]",
            "ldr r3, [0x000140dc]",
            "ldr r3, [r3]",
            "cmp r2, r3",
            "bgt 0x140b0",
            "mov r0, r4",
            "mov r1, r5",
            "bl fcn.00013e88",
            "b 0x140b0",
            "mov r4, 0",
            "mov r0, r4",
            "add sp, sp, 0x68",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.00013e88": {
        "function_address": "0x00013e88",
        "instructions": [
            "ldr r3, [0x00013eb8]",
            "mov r2, 0x200",
            "push {r4, lr}",
            "mov r4, r1",
            "asr r1, r0, 0x1f",
            "ldr r3, [r3]",
            "bl fcn.00027c8c",
            "mov r2, r4",
            "mov r1, r0",
            "ldr r0, str._s_t_s_n",
            "pop {r4, lr}",
            "b sym.imp.printf"
        ]
    },
    "fcn.000145b4": {
        "function_address": "0x000145b4",
        "instructions": [
            "ldr r3, [r0]",
            "push {r4, lr}",
            "mov r4, r0",
            "cmp r3, 0",
            "popne {r4, pc}",
            "ldr r0, [0x000145e4]",
            "ldr r1, [r4, 4]",
            "bl fcn.0002a2d0",
            "mov r3, 1",
            "str r0, [r4, 4]",
            "str r3, [r4]",
            "pop {r4, pc}"
        ]
    },
    "fcn.0002a754": {
        "function_address": "0x0002a754",
        "instructions": [
            "push {r3, lr}",
            "bl fcn.0002a704",
            "subs r1, r0, 0",
            "popeq {r3, pc}",
            "ldr r0, [pc]",
            "bl fcn.000271d8"
        ]
    },
    "fcn.0002a704": {
        "function_address": "0x0002a704",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r6, r0",
            "bl sym.imp.regcomp",
            "subs r5, r0, 0",
            "moveq r4, r5",
            "beq 0x2a74c",
            "mov r2, 0",
            "mov r1, r6",
            "mov r3, r2",
            "bl sym.imp.regerror",
            "mov r7, r0",
            "bl fcn.00029e54",
            "mov r0, r4",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.000145e8": {
        "function_address": "0x000145e8",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r5, r0",
            "mov r0, 8",
            "bl fcn.00029e54"
        ]
    },
    "fcn.00014598": {
        "function_address": "0x00014598",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r0",
            "mov r0, 8",
            "bl fcn.00029e54"
        ]
    },
    "fcn.00014710": {
        "function_address": "0x00014710",
        "instructions": [
            "push {r0, r1, r2, r4, r5, r6, r7, lr}",
            "mov r4, r0",
            "ldr r5, [r0]",
            "cmp r5, 1",
            "movne r0, 1",
            "bne 0x14770",
            "ldr r0, [r4, 4]",
            "add r1, sp, 4",
            "mov r2, 0xa",
            "bl sym.imp.strtol",
            "ldr r3, [sp, 4]",
            "mov r7, r0",
            "ldr r0, [r4, 4]",
            "cmp r0, r3",
            "beq 0x1476c",
            "ldrb r6, [r3]",
            "cmp r6, 0",
            "bne 0x1476c",
            "bl sym.imp.free",
            "str r7, [r4, 4]",
            "mov r0, r5",
            "str r6, [r4]",
            "b 0x14770",
            "mov r0, 0",
            "pop {r1, r2, r3, r4, r5, r6, r7, pc}"
        ]
    },
    "sym.imp.strtol": {
        "function_address": "0x0000bad4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x994]!"
        ]
    },
    "fcn.00014ec8": {
        "function_address": "0x00014ec8",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "bl fcn.00014d04",
            "mov r4, r0",
            "ldr r6, [0x00014f50]",
            "b 0x14f38",
            "ldr r3, [r6]",
            "add r3, r3, 4",
            "str r3, [r6]",
            "bl fcn.00014d04",
            "mov r5, r0",
            "mov r0, r4",
            "bl fcn.00014554",
            "cmp r0, 0",
            "bne 0x14f10",
            "mov r0, r5",
            "bl fcn.00014554",
            "cmp r0, 0",
            "beq 0x14f30",
            "mov r0, r4",
            "bl fcn.00014820",
            "mov r0, r5",
            "bl fcn.00014820",
            "mov r0, 0",
            "bl fcn.00014598",
            "mov r4, r0",
            "b 0x14f38",
            "mov r0, r5",
            "bl fcn.00014820",
            "ldr r0, [0x00014f54]",
            "bl fcn.00014848",
            "cmp r0, 0",
            "bne 0x14edc",
            "mov r0, r4",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.00014d04": {
        "function_address": "0x00014d04",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "ldr r7, [0x00014ea8]",
            "bl fcn.00014c6c",
            "mov r5, r0",
            "ldr r0, aav.0x0005b5dc",
            "bl fcn.00014848",
            "cmp r0, 0",
            "bne 0x14d8c",
            "ldr r0, aav.0x0005a214",
            "bl fcn.00014848",
            "cmp r0, 0",
            "bne 0x14d94",
            "ldr r0, [0x00014eb4]",
            "bl fcn.00014848",
            "cmp r0, 0",
            "bne 0x14d9c",
            "ldr r0, [0x00014eb8]",
            "bl fcn.00014848",
            "cmp r0, 0",
            "bne 0x14d9c",
            "ldr r0, [0x00014ebc]",
            "bl fcn.00014848",
            "cmp r0, 0",
            "bne 0x14da4",
            "ldr r0, [0x00014ec0]",
            "bl fcn.00014848",
            "cmp r0, 0",
            "bne 0x14dac",
            "ldr r0, [0x00014ec4]",
            "bl fcn.00014848",
            "cmp r0, 0",
            "bne 0x14db4",
            "mov r0, r5",
            "pop {r3, r4, r5, r6, r7, pc}",
            "mov r4, 0x3c",
            "b 0x14db8",
            "mov r4, 0x91",
            "b 0x14db8",
            "mov r4, 0x3d",
            "b 0x14db8",
            "mov r4, 0x21",
            "b 0x14db8",
            "mov r4, 0x8c",
            "b 0x14db8",
            "mov r4, 0x3e",
            "ldr r3, [r7]",
            "add r3, r3, 4",
            "str r3, [r7]",
            "bl fcn.00014c6c",
            "mov r6, r0",
            "mov r0, r5",
            "bl fcn.00014710",
            "mov r0, r6",
            "bl fcn.00014710",
            "ldr r3, [r5]",
            "cmp r3, 1",
            "beq 0x14e00",
            "ldr r3, [r6]",
            "cmp r3, 1",
            "ldrne r0, [r5, 4]",
            "ldrne r3, [r6, 4]",
            "rsbne r0, r3, r0",
            "bne 0x14e1c",
            "mov r0, r5",
            "bl fcn.000145b4",
            "mov r0, r6",
            "bl fcn.000145b4",
            "ldr r0, [r5, 4]",
            "ldr r1, [r6, 4]",
            "bl sym.imp.strcmp",
            "cmp r4, 0x3c",
            "lsreq r4, r0, 0x1f",
            "beq 0x14e88",
            "cmp r4, 0x91",
            "bne 0x14e40",
            "cmp r0, 0",
            "movgt r4, 0",
            "movle r4, 1",
            "b 0x14e88",
            "cmp r4, 0x3d",
            "bne 0x14e54",
            "rsbs r4, r0, 1",
            "movlo r4, 0",
            "b 0x14e88",
            "cmp r4, 0x21",
            "bne 0x14e68",
            "subs r4, r0, 0",
            "movne r4, 1",
            "b 0x14e88",
            "cmp r4, 0x3e",
            "bne 0x14e80",
            "cmp r0, 0",
            "movle r4, 0",
            "movgt r4, 1",
            "b 0x14e88",
            "mvn r4, r0",
            "lsr r4, r4, 0x1f",
            "mov r0, r5",
            "bl fcn.00014820",
            "mov r0, r6",
            "bl fcn.00014820",
            "mov r0, r4",
            "bl fcn.00014598",
            "mov r5, r0",
            "b 0x14d14"
        ]
    },
    "fcn.00014554": {
        "function_address": "0x00014554",
        "instructions": [
            "ldr r3, [r0]",
            "cmp r3, 0",
            "ldreq r0, [r0, 4]",
            "beq 0x14584",
            "ldr r3, [r0, 4]",
            "ldrb r2, [r3]",
            "cmp r2, 0",
            "moveq r0, 1",
            "bxeq lr",
            "cmp r2, 0x30",
            "bne 0x14590",
            "ldrb r0, [r3, 1]",
            "rsbs r0, r0, 1",
            "movlo r0, 0",
            "bx lr",
            "mov r0, 0",
            "bx lr"
        ]
    },
    "fcn.00014820": {
        "function_address": "0x00014820",
        "instructions": [
            "ldr r3, [r0]",
            "push {r4, lr}",
            "mov r4, r0",
            "cmp r3, 1",
            "bne 0x1483c",
            "ldr r0, [r0, 4]",
            "bl sym.imp.free",
            "mov r0, r4",
            "pop {r4, lr}",
            "b sym.imp.free"
        ]
    },
    "fcn.00014848": {
        "function_address": "0x00014848",
        "instructions": [
            "push {r3, lr}",
            "mov r1, r0",
            "ldr r3, [0x00014874]",
            "ldr r3, [r3]",
            "ldr r0, [r3]",
            "cmp r0, 0",
            "popeq {r3, pc}",
            "bl sym.imp.strcmp",
            "rsbs r0, r0, 1",
            "movlo r0, 0",
            "pop {r3, pc}"
        ]
    },
    "fcn.000267ac": {
        "function_address": "0x000267ac",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r4, r0",
            "mov r6, r1",
            "mov r5, 0",
            "b 0x267e8",
            "mov r0, r4",
            "mov r1, r6",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x267f8",
            "mov r0, r4",
            "add r5, r5, 1",
            "bl sym.imp.strlen",
            "add r0, r0, 1",
            "add r4, r4, r0",
            "ldrb r3, [r4]",
            "cmp r3, 0",
            "bne 0x267c0",
            "mvn r5, 0",
            "mov r0, r5",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.00014878": {
        "function_address": "0x00014878",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "bl fcn.00014ec8",
            "mov r4, r0",
            "ldr r5, [0x000148e0]",
            "b 0x148c8",
            "ldr r3, [r5]",
            "add r3, r3, 4",
            "str r3, [r5]",
            "bl fcn.00014ec8",
            "mov r6, r0",
            "mov r0, r4",
            "bl fcn.00014554",
            "cmp r0, 0",
            "beq 0x148c0",
            "mov r0, r4",
            "mov r4, r6",
            "bl fcn.00014820",
            "b 0x148c8",
            "mov r0, r6",
            "bl fcn.00014820",
            "ldr r0, [0x000148e4]",
            "bl fcn.00014848",
            "cmp r0, 0",
            "bne 0x1488c",
            "mov r0, r4",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.000148e8": {
        "function_address": "0x000148e8",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "ldr r5, [0x00014b34]",
            "ldr r3, [r5]",
            "ldr r1, [r3]",
            "cmp r1, 0",
            "beq 0x14910",
            "ldr r0, str.quote",
            "bl fcn.000267ac",
            "adds r6, r0, 1",
            "bne 0x14980",
            "ldr r4, [r5]",
            "ldr r6, [r4]",
            "cmp r6, 0",
            "beq 0x149a0",
            "ldr r0, aav.0x00060814",
            "bl fcn.00014848",
            "cmp r0, 0",
            "beq 0x14960",
            "add r4, r4, 4",
            "str r4, [r5]",
            "bl fcn.00014878",
            "mov r4, r0",
            "ldr r0, [0x00014b40]",
            "bl fcn.00014848",
            "cmp r0, 0",
            "beq 0x149a0",
            "ldr r3, [r5]",
            "add r3, r3, 4",
            "str r3, [r5]",
            "b 0x14b2c",
            "ldr r0, [0x00014b40]",
            "bl fcn.00014848",
            "cmp r0, 0",
            "bne 0x149a0",
            "add r4, r4, 4",
            "mov r0, r6",
            "str r4, [r5]",
            "b 0x149b0",
            "ldr r2, [r5]",
            "cmp r6, 1",
            "add r3, r2, 4",
            "str r3, [r5]",
            "bne 0x149b8",
            "ldr r0, [r2, 4]",
            "cmp r0, 0",
            "bne 0x149a8",
            "ldr r0, str.syntax_error",
            "bl fcn.000271d8",
            "add r3, r3, 4",
            "str r3, [r5]",
            "pop {r4, r5, r6, r7, r8, lr}",
            "b fcn.000145e8",
            "cmp r6, 2",
            "bne 0x149e4",
            "bl fcn.000148e8",
            "mov r5, r0",
            "bl fcn.000145b4",
            "ldr r0, [r5, 4]",
            "bl sym.imp.strlen",
            "bl fcn.00014598",
            "mov r4, r0",
            "mov r0, r5",
            "b 0x14b28",
            "bl fcn.000148e8",
            "cmp r6, 3",
            "mov r5, r0",
            "bne 0x14a10",
            "bl fcn.000148e8",
            "mov r6, r0",
            "mov r0, r5",
            "mov r1, r6",
            "bl fcn.00014618",
            "cmp r6, 4",
            "bne 0x14a6c",
            "bl fcn.000148e8",
            "mov r6, r0",
            "mov r0, r5",
            "bl fcn.000145b4",
            "mov r0, r6",
            "bl fcn.000145b4",
            "ldr r1, [r6, 4]",
            "ldr r0, [r5, 4]",
            "bl sym.imp.strcspn",
            "add r0, r0, 1",
            "bl fcn.00014598",
            "mov r4, r0",
            "ldr r0, [r5, 4]",
            "bl sym.imp.strlen",
            "ldr r3, [r4, 4]",
            "add r0, r0, 1",
            "cmp r3, r0",
            "moveq r3, 0",
            "streq r3, [r4, 4]",
            "mov r0, r5",
            "b 0x14b20",
            "cmp r6, 5",
            "bne 0x14b2c",
            "bl fcn.000148e8",
            "mov r7, r0",
            "bl fcn.000148e8",
            "mov r6, r0",
            "mov r0, r5",
            "bl fcn.000145b4",
            "mov r0, r7",
            "bl fcn.00014710",
            "cmp r0, 0",
            "beq 0x14ad4",
            "mov r0, r6",
            "bl fcn.00014710",
            "cmp r0, 0",
            "beq 0x14ad4",
            "ldr r4, [r7, 4]",
            "ldr r0, [r5, 4]",
            "bl sym.imp.strlen",
            "cmp r4, r0",
            "bgt 0x14ad4",
            "cmp r4, 0",
            "ble 0x14ad4",
            "ldr r3, [r6, 4]",
            "cmp r3, 0",
            "bgt 0x14ae4",
            "ldr r0, [0x00014b48]",
            "bl fcn.000145e8",
            "mov r4, r0",
            "b 0x14b14",
            "mov r0, 8",
            "bl fcn.00029e54",
            "mov r0, r5",
            "bl fcn.00014820",
            "mov r0, r7",
            "bl fcn.00014820",
            "mov r0, r6",
            "bl fcn.00014820",
            "mov r0, r4",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.00014618": {
        "function_address": "0x00014618",
        "instructions": [
            "push {r4, r5, r6, r7, r8, fp, lr}",
            "add fp, sp, 0x18",
            "sub sp, sp, 0x2c",
            "mov r8, r1",
            "sub sp, sp, 0x18",
            "mov r5, r0",
            "add r4, sp, 8",
            "bl fcn.000145b4",
            "mov r0, r8",
            "bl fcn.000145b4",
            "ldr r1, [r8, 4]",
            "ldrb r3, [r1]",
            "cmp r3, 0x5e",
            "bne 0x14658",
            "ldr r0, str.warning:_unportable_BRE:___s:_using___as_the_first_character_nof_a_basic_regular_expression_is_not_portable__it_is_being_ignored",
            "bl fcn.00027184",
            "sub r7, fp, 0x3c",
            "mov r6, 0",
            "mov r1, 0",
            "mov r2, 0x20",
            "mov r0, r7",
            "bl sym.imp.memset",
            "mov r0, r7",
            "ldr r1, [r8, 4]",
            "mov r2, r6",
            "str r6, [r4]",
            "str r6, [r4, 4]",
            "bl fcn.0002a754"
        ]
    },
    "sym.imp.strcspn": {
        "function_address": "0x0000c080",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x5cc]!"
        ]
    },
    "fcn.00029f04": {
        "function_address": "0x00029f04",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r2, r0",
            "mov r5, r0",
            "mov r3, r1",
            "b 0x29f28",
            "ldrb r0, [r2], 1",
            "cmp r0, 0",
            "beq 0x29f30",
            "sub r3, r3, 1",
            "cmp r3, 0",
            "bne 0x29f18",
            "rsb r4, r3, r1",
            "add r0, r4, 1",
            "bl fcn.00029e54"
        ]
    },
    "sym.imp.regexec": {
        "function_address": "0x0000b744",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xbf4]!"
        ]
    },
    "fcn.00014b4c": {
        "function_address": "0x00014b4c",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "bl fcn.000148e8",
            "mov r4, r0",
            "ldr r5, [0x00014bb0]",
            "b 0x14b98",
            "ldr r3, [r5]",
            "add r3, r3, 4",
            "str r3, [r5]",
            "bl fcn.000148e8",
            "mov r6, r0",
            "mov r0, r4",
            "mov r1, r6",
            "bl fcn.00014618",
            "ldr r0, [0x00014bb4]",
            "bl fcn.00014848",
            "cmp r0, 0",
            "bne 0x14b60",
            "mov r0, r4",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.00014774": {
        "function_address": "0x00014774",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r4, r0",
            "mov r5, r1",
            "mov r6, r2",
            "bl fcn.00014710",
            "cmp r0, 0",
            "beq 0x147a0",
            "mov r0, r5",
            "bl fcn.00014710",
            "cmp r0, 0",
            "bne 0x147a8",
            "ldr r0, str.non_numeric_argument",
            "b 0x147d4",
            "cmp r6, 0x2f",
            "movne r3, 0",
            "moveq r3, 1",
            "cmp r6, 0x2f",
            "cmpne r6, 0x25",
            "ldr r0, [r4, 4]",
            "ldr r1, [r5, 4]",
            "bne 0x147d8",
            "cmp r1, 0",
            "bne 0x147d8",
            "ldr r0, str.division_by_zero",
            "bl fcn.000271d8",
            "cmp r6, 0x2b",
            "addeq r0, r1, r0",
            "popeq {r4, r5, r6, pc}",
            "cmp r6, 0x2d",
            "rsbeq r0, r1, r0",
            "popeq {r4, r5, r6, pc}",
            "cmp r6, 0x2a",
            "muleq r0, r0, r1",
            "popeq {r4, r5, r6, pc}",
            "cmp r3, 0",
            "beq 0x1480c",
            "bl fcn.000550c8",
            "pop {r4, r5, r6, pc}",
            "bl fcn.000551a4",
            "mov r0, r1",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.000550c8": {
        "function_address": "0x000550c8",
        "instructions": [
            "cmp r1, 0",
            "beq 0x55194"
        ]
    },
    "fcn.00014bb8": {
        "function_address": "0x00014bb8",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "ldr r5, [0x00014c5c]",
            "bl fcn.00014b4c",
            "mov r4, r0",
            "ldr r0, [0x00014c60]",
            "bl fcn.00014848",
            "cmp r0, 0",
            "bne 0x14c00",
            "ldr r0, [0x00014c64]",
            "bl fcn.00014848",
            "cmp r0, 0",
            "bne 0x14c08",
            "ldr r0, aav.0x0005b294",
            "bl fcn.00014848",
            "cmp r0, 0",
            "bne 0x14c10",
            "mov r0, r4",
            "pop {r3, r4, r5, r6, r7, pc}",
            "mov r7, 0x2a",
            "b 0x14c14",
            "mov r7, 0x2f",
            "b 0x14c14",
            "mov r7, 0x25",
            "ldr r3, [r5]",
            "add r3, r3, 4",
            "str r3, [r5]",
            "bl fcn.00014b4c",
            "mov r6, r0",
            "mov r2, r7",
            "mov r1, r6",
            "mov r0, r4",
            "bl fcn.00014774",
            "mov r7, r0",
            "mov r0, r4",
            "bl fcn.00014820",
            "mov r0, r6",
            "bl fcn.00014820",
            "mov r0, r7",
            "bl fcn.00014598",
            "mov r4, r0",
            "b 0x14bc8"
        ]
    },
    "fcn.00014c6c": {
        "function_address": "0x00014c6c",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "ldr r5, [0x00014cf8]",
            "bl fcn.00014bb8",
            "mov r4, r0",
            "ldr r0, [0x00014cfc]",
            "bl fcn.00014848",
            "cmp r0, 0",
            "bne 0x14ca4",
            "ldr r0, aav.0x0005ea74",
            "bl fcn.00014848",
            "cmp r0, 0",
            "bne 0x14cac",
            "mov r0, r4",
            "pop {r3, r4, r5, r6, r7, pc}",
            "mov r7, 0x2b",
            "b 0x14cb0",
            "mov r7, 0x2d",
            "ldr r3, [r5]",
            "add r3, r3, 4",
            "str r3, [r5]",
            "bl fcn.00014bb8",
            "mov r6, r0",
            "mov r2, r7",
            "mov r1, r6",
            "mov r0, r4",
            "bl fcn.00014774",
            "mov r7, r0",
            "mov r0, r4",
            "bl fcn.00014820",
            "mov r0, r6",
            "bl fcn.00014820",
            "mov r0, r7",
            "bl fcn.00014598",
            "mov r4, r0",
            "b 0x14c7c"
        ]
    },
    "fcn.00029d28": {
        "function_address": "0x00029d28",
        "instructions": [
            "push {r0, r1, r2, lr}",
            "mvn r3, 0",
            "str r1, [sp]",
            "mov r2, 0",
            "mov r1, 0xa",
            "bl fcn.00029b9c",
            "pop {r1, r2, r3, pc}"
        ]
    },
    "fcn.0002a13c": {
        "function_address": "0x0002a13c",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r1",
            "bl sym.imp.ferror",
            "cmp r0, 0",
            "popeq {r4, pc}",
            "ldr r0, str._s:_I_O_error",
            "mov r1, r4",
            "bl fcn.000271d8",
            "ldr r3, obj.stdout",
            "ldr r1, str.standard_output",
            "ldr r0, [r3]",
            "b 0x2a118"
        ]
    },
    "fcn.000265d0": {
        "function_address": "0x000265d0",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r0",
            "bl sym.imp.getpwnam",
            "cmp r0, 0",
            "bne 0x265f0",
            "ldr r0, str.unknown_user_name:__s",
            "mov r1, r4",
            "bl fcn.000271d8",
            "ldr r0, [r0, 8]",
            "pop {r4, pc}"
        ]
    },
    "fcn.0002652c": {
        "function_address": "0x0002652c",
        "instructions": [
            "push {r0, r1, r4, r5, r6, lr}",
            "mov r5, r0",
            "mov r0, r2",
            "mov r4, r2",
            "mov r6, r1",
            "bl sym.imp.getpwuid",
            "mov r3, 0x75",
            "subs r2, r0, 0",
            "ldrne r2, [r2]",
            "mov r0, r5",
            "str r3, [sp]",
            "mov r1, r6",
            "mov r3, r4",
            "bl fcn.000264c0",
            "pop {r2, r3, r4, r5, r6, pc}"
        ]
    },
    "sym.imp.getpwuid": {
        "function_address": "0x0000be28",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x75c]!"
        ]
    },
    "fcn.000264c0": {
        "function_address": "0x000264c0",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r4, r2",
            "subs r2, r1, 0",
            "ldrb r5, [sp, 0x10]",
            "ble 0x264f4",
            "cmp r4, 0",
            "beq 0x264e8",
            "mov r1, r4",
            "pop {r4, r5, r6, lr}",
            "b fcn.00029568",
            "ldr r2, [0x00026524]",
            "bl sym.imp.snprintf",
            "b 0x2651c",
            "lsr r2, r2, 0x1f",
            "cmp r4, 0",
            "movne r2, 0",
            "andeq r2, r2, 1",
            "cmp r2, 0",
            "beq 0x2651c",
            "ldr r0, str.unknown__cid__ld",
            "mov r1, r5",
            "mov r2, r3",
            "bl fcn.000271d8",
            "mov r0, r4",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.00026568": {
        "function_address": "0x00026568",
        "instructions": [
            "push {r0, r1, r4, r5, r6, lr}",
            "mov r5, r0",
            "mov r0, r2",
            "mov r4, r2",
            "mov r6, r1",
            "bl sym.imp.getgrgid",
            "mov r3, 0x67",
            "subs r2, r0, 0",
            "ldrne r2, [r2]",
            "mov r0, r5",
            "str r3, [sp]",
            "mov r1, r6",
            "mov r3, r4",
            "bl fcn.000264c0",
            "pop {r2, r3, r4, r5, r6, pc}"
        ]
    },
    "fcn.00015208": {
        "function_address": "0x00015208",
        "instructions": [
            "subs r3, r1, 0",
            "mov ip, r0",
            "ldr r1, str._cid_u",
            "ldr r0, str._cid_u__s_",
            "push {r4, lr}",
            "movne r4, 0",
            "moveq r4, 1",
            "moveq r0, r1",
            "mov r1, r2",
            "mov r2, ip",
            "bl sym.imp.printf",
            "mov r0, r4",
            "pop {r4, pc}"
        ]
    },
    "fcn.00027ec8": {
        "function_address": "0x00027ec8",
        "instructions": [
            "push {r4, lr}",
            "subs r4, r2, 0",
            "sub sp, sp, 0x68",
            "moveq r4, sp",
            "cmp r1, 0",
            "beq 0x27eec",
            "mov r1, r4",
            "bl sym.imp.stat64",
            "b 0x27ef4",
            "mov r1, r4",
            "bl sym.imp.lstat64",
            "cmp r0, 0",
            "movlt r0, 0",
            "blt 0x27f14",
            "ldr r0, [r4, 0x10]",
            "and r0, r0, 0xf000",
            "cmp r0, 0x4000",
            "movne r0, 0",
            "moveq r0, 1",
            "add sp, sp, 0x68",
            "pop {r4, pc}"
        ]
    },
    "fcn.00055c64": {
        "function_address": "0x00055c64",
        "instructions": [
            "push {r1, lr}",
            "mov r0, 8",
            "bl sym.imp.raise",
            "pop {r1, pc}"
        ]
    },
    "sym.imp.raise": {
        "function_address": "0x0000c1dc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x4e4]!"
        ]
    },
    "fcn.000157f4": {
        "function_address": "0x000157f4",
        "instructions": [
            "ldr r3, [0x000158a8]",
            "push {r4, r5, r6, lr}",
            "sub sp, sp, 0x68",
            "mov r6, r1",
            "mov r5, r0",
            "mov r1, sp",
            "ldr r4, [r3]",
            "ubfx r4, r4, 0x19, 1",
            "cmp r2, 0",
            "orrne r4, r4, 1",
            "cmp r4, 0",
            "beq 0x15850",
            "bl sym.imp.stat64",
            "cmp r0, 0",
            "beq 0x1587c",
            "ldr r0, aav.0x0005ad0c",
            "mov r1, r5",
            "bl fcn.000288b8",
            "ldr r3, [0x000158b0]",
            "mov r2, 1",
            "mov r4, 0",
            "str r2, [r3]",
            "b 0x1589c",
            "mov r1, sp",
            "bl sym.imp.lstat64",
            "cmp r0, 0",
            "beq 0x1587c",
            "ldr r0, aav.0x0005ad0c",
            "mov r1, r5",
            "bl fcn.000288b8",
            "ldr r3, [0x000158b0]",
            "mov r2, 1",
            "str r2, [r3]",
            "b 0x1589c",
            "mov r0, 0x80",
            "bl fcn.00029e54",
            "mov r0, r4",
            "add sp, sp, 0x68",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.000159a4": {
        "function_address": "0x000159a4",
        "instructions": [
            "cmp r0, 0",
            "cmpne r1, 0",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0xb4",
            "mov r8, r1",
            "movgt r3, 0",
            "movle r3, 1",
            "str r0, [sp, 0x14]",
            "ble 0x15f4c",
            "ldr r2, [0x00015f54]",
            "ldr r4, [r2]",
            "ands r5, r4, 0x400000",
            "bne 0x15a64",
            "mov r7, r0",
            "mov r6, r5",
            "ldr r3, [r7], 4",
            "add r6, r6, 1",
            "ldr r0, [r3]",
            "bl sym.imp.strlen",
            "cmp r5, r0",
            "movlt r5, r0",
            "cmp r6, r8",
            "blt 0x159e0",
            "ldr r3, [0x00015f58]",
            "ldr r2, [r3]",
            "ands r3, r4, 1",
            "movne r3, 8",
            "ands r4, r4, 2",
            "movne r4, 5",
            "add r5, r5, r2",
            "add r5, r5, r3",
            "ldr r3, [0x00015f5c]",
            "add r5, r5, r4",
            "mov r1, r5",
            "str r5, [sp, 0x18]",
            "ldr r0, [r3]",
            "bl fcn.00055000",
            "cmp r0, 1",
            "mov sb, r0",
            "ble 0x15a70",
            "mov r0, r8",
            "mov r1, sb",
            "bl fcn.000550c8",
            "mul r3, sb, r0",
            "mov sl, r0",
            "cmp r3, r8",
            "addlt sl, r0, 1",
            "b 0x15a78",
            "mov sl, r1",
            "str r3, [sp, 0x18]",
            "b 0x15a74",
            "mov sl, r8",
            "mov sb, 1",
            "mov r0, 0",
            "ldr r7, [0x00015f60]",
            "str r0, [sp, 8]",
            "str r0, [sp, 0x24]",
            "str r0, [sp, 0xc]",
            "str r8, [sp, 0x3c]",
            "b 0x15f28",
            "ldr r1, [0x00015f54]",
            "ldr r0, [sp, 0x3c]",
            "ldr r3, [r1]",
            "tst r3, 0x100000",
            "ldrne r2, [sp, 0x10]",
            "ldrne r3, [sp, 8]",
            "ldreq r4, [sp, 0x1c]",
            "addne r4, r2, r3",
            "cmp r4, r0",
            "bge 0x15ed4",
            "cmp r6, 0",
            "ble 0x15ae0",
            "ldr r1, [sp, 0x24]",
            "ldr r0, [0x00015f64]",
            "ldr r2, [0x00015f68]",
            "rsb r5, r6, r1",
            "add r6, r6, r5",
            "mov r1, r5",
            "bl sym.imp.printf",
            "ldr r3, [sp, 0x14]",
            "ldr r2, [sp, 0x18]",
            "ldr r5, [r3, r4, lsl 2]",
            "add r2, r6, r2",
            "str r2, [sp, 0x24]",
            "ldr r4, [r5, 4]",
            "cmp r4, 0",
            "beq 0x15ed0",
            "ldr r3, [r5, 0x60]",
            "mov r4, 0",
            "ldr r0, [0x00015f54]",
            "mov r8, r4",
            "str r3, [sp, 0xac]",
            "ldr r3, [r0]",
            "add r0, sp, 0xac",
            "tst r3, 0x1000000",
            "ldrne r2, [r5, 0x58]",
            "strne r2, [sp, 0xac]",
            "tst r3, 0x800000",
            "ldrne r3, [r5, 0x68]",
            "strne r3, [sp, 0xac]",
            "bl sym.imp.ctime",
            "mov sl, r0",
            "ldr r0, [r5, 0x20]",
            "bl fcn.00015664",
            "add r1, sl, 4",
            "str r0, [sp, 0x20]",
            "str r1, [sp, 0x38]",
            "ldr r3, [0x00015f54]",
            "mov r0, 1",
            "ldr r2, [r3]",
            "and r3, r2, r0, lsl r8",
            "cmp r3, 0x80",
            "beq 0x15c6c",
            "bhi 0x15ba8",
            "cmp r3, 4",
            "beq 0x15c0c",
            "bhi 0x15b8c",
            "cmp r3, r0",
            "beq 0x15be4",
            "cmp r3, 2",
            "beq 0x15bf0",
            "b 0x15ec4",
            "cmp r3, 0x10",
            "beq 0x15c30",
            "cmp r3, 0x20",
            "beq 0x15c5c",
            "cmp r3, 8",
            "beq 0x15c24",
            "b 0x15ec4",
            "cmp r3, 0x400",
            "beq 0x15cf0",
            "bhi 0x15bc8",
            "cmp r3, 0x100",
            "beq 0x15c6c",
            "cmp r3, 0x200",
            "beq 0x15d04",
            "b 0x15ec4",
            "cmp r3, 0x1000",
            "beq 0x15dd8",
            "cmp r3, 0x2000",
            "beq 0x15ea4",
            "cmp r3, 0x800",
            "beq 0x15d54",
            "b 0x15ec4",
            "ldr r0, [0x00015f6c]",
            "ldr r1, [r5, 0x70]",
            "b 0x15c1c",
            "ldrd r2, r3, [r5, 0x50]",
            "ldr r0, str._4lld",
            "asrs r3, r3, 1",
            "rrx r2, r2",
            "bl sym.imp.printf",
            "add r4, r4, r0",
            "b 0x15ec4",
            "ldr r0, [r5, 0x20]",
            "bl fcn.000285c0",
            "mov r1, r0",
            "ldr r0, str.__10s",
            "bl sym.imp.printf",
            "b 0x15c04",
            "ldr r0, str._4ld",
            "ldr r1, [r5, 0x24]",
            "b 0x15c1c",
            "ldr r0, [r5, 0x28]",
            "add r4, r4, 0x11",
            "bl fcn.00028b98",
            "mov fp, r0",
            "ldr r0, [r5, 0x2c]",
            "bl fcn.00028bb0",
            "mov r1, fp",
            "mov r2, r0",
            "ldr r0, str.__8.8s___8.8s",
            "bl sym.imp.printf",
            "b 0x15ec4",
            "ldr r0, str.__8d___8d",
            "ldr r1, [r5, 0x28]",
            "ldr r2, [r5, 0x2c]",
            "b 0x15cb8",
            "ldr r3, [r5, 0x20]",
            "and r3, r3, 0xf000",
            "cmp r3, 0x6000",
            "cmpne r3, 0x2000",
            "movne r3, 0",
            "moveq r3, 1",
            "bne 0x15cc0",
            "ldr r3, [r5, 0x30]",
            "ldr r0, [r5, 0x34]",
            "ubfx ip, r3, 8, 0xc",
            "lsr r2, r3, 0xc",
            "bic r1, r0, 0xff0",
            "bic r1, r1, 0xf",
            "orr r2, r2, r0, lsl 20",
            "ldr r0, str._4d___3d",
            "and r3, r3, 0xff",
            "bic r2, r2, 0xff",
            "orr r1, r1, ip",
            "orr r2, r2, r3",
            "bl sym.imp.printf",
            "b 0x15c04",
            "ldrd r0, r1, [r5, 0x40]",
            "tst r2, 0x4000000",
            "strd r0, r1, [sp, 0x28]",
            "beq 0x15ce4",
            "mov r2, 1",
            "bl fcn.00027c8c",
            "mov r1, r0",
            "ldr r0, [0x00015f88]",
            "b 0x15c1c",
            "ldr r0, str._9lld",
            "ldrd r2, r3, [sp, 0x28]",
            "b 0x15c00",
            "ldr r0, str._24.24s",
            "mov r1, sl",
            "bl sym.imp.printf",
            "add r4, r4, 0x19",
            "b 0x15ec4",
            "tst r2, 0x400",
            "bne 0x15ec4",
            "ldr r1, [0x00015f94]",
            "add r4, r4, 0xd",
            "ldr r3, [sp, 0xac]",
            "ldr r0, str._6.6s",
            "ldr fp, [r1]",
            "ldr r1, [sp, 0x38]",
            "rsb fp, r3, fp",
            "bl sym.imp.printf",
            "ldr r2, [0x00015f9c]",
            "add fp, fp, 0x380",
            "add fp, fp, 3",
            "cmp fp, r2",
            "ldrls r0, str._5.5s",
            "addls r1, sl, 0xb",
            "ldrhi r0, str.__4.4s",
            "addhi r1, sl, 0x14",
            "bl sym.imp.printf",
            "b 0x15ec4",
            "ldr r0, [0x00015fa8]",
            "mov r2, 0",
            "ldr r3, [r0]",
            "str r2, [r3]",
            "ldr r3, [r7]",
            "cmp r3, r2",
            "beq 0x15db0",
            "ldr r0, [r5, 4]",
            "add r1, sp, 0x40",
            "bl sym.imp.lstat64",
            "cmp r0, 0",
            "bne 0x15db0",
            "ldr fp, [sp, 0x50]",
            "mov r0, fp",
            "bl fcn.00015630",
            "mov r1, r0",
            "mov r0, fp",
            "str r1, [sp, 4]",
            "bl fcn.000155e4",
            "ldr r1, [sp, 4]",
            "mov r2, r0",
            "ldr r0, str.e__d__dm",
            "bl sym.imp.printf",
            "ldr r0, aav.0x0005ad0c",
            "ldr r1, [r5]",
            "bl sym.imp.printf",
            "ldr r3, [r7]",
            "add r4, r4, r0",
            "cmp r3, 0",
            "beq 0x15ec4",
            "ldr r0, aav.0x0005c760",
            "bl sym.imp.printf",
            "b 0x15ec4",
            "ldr r3, [r5, 0x20]",
            "and r3, r3, 0xf000",
            "cmp r3, 0xa000",
            "bne 0x15ec4",
            "ldr r0, [r5, 4]",
            "bl fcn.0002a6d8",
            "ldr r2, [sp, 0x20]",
            "cmp r2, 0",
            "beq 0x15ec4",
            "ldr r3, obj.stdout",
            "add r4, r4, 1",
            "mov r0, r2",
            "ldr r1, [r3]",
            "bl sym.imp.fputc",
            "add r8, r8, 1",
            "cmp r8, 0x20",
            "bne 0x15b50",
            "add r6, r6, r4",
            "ldr r0, [sp, 0x10]",
            "ldr r2, [sp, 0x34]",
            "ldr r1, [sp, 0x1c]",
            "add r0, r0, 1",
            "cmp r0, r2",
            "str r0, [sp, 0x10]",
            "add r1, r1, sb",
            "str r1, [sp, 0x1c]",
            "blt 0x15a94",
            "ldr r3, obj.stdout",
            "mov r0, 0xa",
            "mov sl, sb",
            "mov sb, r2",
            "ldr r1, [r3]",
            "bl sym.imp.fputc",
            "ldr r3, [sp, 0xc]",
            "ldr r0, [sp, 8]",
            "add r3, r3, 1",
            "add r0, r0, sb",
            "str r3, [sp, 0xc]",
            "str r0, [sp, 8]",
            "ldr r1, [sp, 0xc]",
            "cmp r1, sl",
            "bge 0x15f4c",
            "mov r6, 0",
            "str sb, [sp, 0x34]",
            "str r1, [sp, 0x1c]",
            "mov sb, sl",
            "str r6, [sp, 0x10]",
            "b 0x15a94",
            "add sp, sp, 0xb4",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.imp.ctime": {
        "function_address": "0x0000ba8c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x9c4]!"
        ]
    },
    "fcn.00015664": {
        "function_address": "0x00015664",
        "instructions": [
            "ldr r3, [0x000156bc]",
            "mov r2, r0",
            "ldr r3, [r3]",
            "ands r0, r3, 0x2000",
            "bxeq lr",
            "and r1, r2, 0xf000",
            "cmp r1, 0x4000",
            "moveq r0, 0x2f",
            "bxeq lr",
            "ands r0, r3, 0x4000",
            "bxeq lr",
            "cmp r1, 0x8000",
            "bne 0x156a0",
            "tst r2, 0x49",
            "bne 0x156b4",
            "ldr r3, aav.0x0005a2ac",
            "ubfx r2, r2, 0xc, 4",
            "add r2, r3, r2",
            "ldrb r0, [r2, 0x22]",
            "bx lr",
            "mov r0, 0x2a",
            "bx lr"
        ]
    },
    "fcn.000285c0": {
        "function_address": "0x000285c0",
        "instructions": [
            "ldr r2, str._pc_d_b___l_s___rwxSTst",
            "ubfx r3, r0, 0xc, 4",
            "ldr r1, [0x0002865c]",
            "mov ip, 0x100",
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r8, 0x2d",
            "ldrb r3, [r2, r3]",
            "mov r7, 0x1000",
            "ldr r6, aav.0x0005bd78",
            "strb r3, [r1]",
            "mov r3, 0",
            "mov r4, 0",
            "mov r5, r1",
            "mov r2, r4",
            "tst ip, r0",
            "strb r8, [r5, 1]!",
            "ldrbne r4, [r6, r2]",
            "asr ip, ip, 1",
            "strbne r4, [r5]",
            "movne r4, r2",
            "add r2, r2, 1",
            "cmp r2, 3",
            "bne 0x285f8",
            "add r3, r3, 1",
            "ands r2, r0, r7, asr r3",
            "beq 0x28644",
            "cmp r3, 3",
            "movne r2, r6",
            "addeq r2, r6, 1",
            "and r4, r4, 2",
            "add r4, r2, r4",
            "ldrb r2, [r4, 3]",
            "strb r2, [r1, 3]",
            "cmp r3, 3",
            "add r1, r1, 3",
            "bne 0x285ec",
            "ldr r0, [0x0002865c]",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.00015630": {
        "function_address": "0x00015630",
        "instructions": [
            "and r3, r0, 0xf000",
            "cmp r3, 0x8000",
            "bne 0x15644",
            "tst r0, 0x49",
            "bne 0x15658",
            "ldr r3, aav.0x0005a2ac",
            "ubfx r0, r0, 0xc, 4",
            "add r0, r3, r0",
            "ldrb r0, [r0, 0x11]",
            "bx lr",
            "mov r0, 1",
            "bx lr"
        ]
    },
    "fcn.000155e4": {
        "function_address": "0x000155e4",
        "instructions": [
            "ldr r3, [0x00015628]",
            "ldr r3, [r3]",
            "ldr r3, [r3]",
            "cmp r3, 2",
            "moveq r0, 0x1f",
            "bxeq lr",
            "and r3, r0, 0xf000",
            "cmp r3, 0x8000",
            "bne 0x15610",
            "tst r0, 0x49",
            "bne 0x15620",
            "ldr r3, aav.0x0005a2ac",
            "ubfx r0, r0, 0xc, 4",
            "ldrb r0, [r3, r0]",
            "bx lr",
            "mov r0, 0x20",
            "bx lr"
        ]
    },
    "fcn.000158cc": {
        "function_address": "0x000158cc",
        "instructions": [
            "cmp r0, 0",
            "cmpne r1, 0",
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r4, r2",
            "mov r5, r1",
            "mov r6, r0",
            "movgt r2, 0",
            "movle r2, 1",
            "ble 0x1599c",
            "cmp r4, 2",
            "bne 0x15900",
            "bl fcn.000156c4",
            "b 0x15910",
            "mov r2, 1",
            "bl fcn.000156c4",
            "cmp r4, 0",
            "rsbeq r0, r0, r5",
            "bl fcn.000158b4",
            "mov r3, 0",
            "and r7, r4, 3",
            "mov r1, r3",
            "and r4, r4, 1",
            "ldr r2, [r6], 4",
            "ldr ip, [r2, 0x20]",
            "and ip, ip, 0xf000",
            "cmp ip, 0x4000",
            "bne 0x1597c",
            "cmp r7, 0",
            "beq 0x1598c",
            "cmp r4, 0",
            "ldr ip, [r2]",
            "bne 0x15984",
            "ldrb r8, [ip]",
            "cmp r8, 0x2e",
            "bne 0x15984",
            "ldrb r8, [ip, 1]",
            "cmp r8, 0",
            "beq 0x1598c",
            "cmp r8, 0x2e",
            "bne 0x15984",
            "ldrb ip, [ip, 2]",
            "cmp ip, 0",
            "beq 0x1598c",
            "b 0x15984",
            "cmp r7, 0",
            "bne 0x1598c",
            "str r2, [r0, r3, lsl 2]",
            "add r3, r3, 1",
            "add r1, r1, 1",
            "cmp r1, r5",
            "blt 0x15924",
            "pop {r4, r5, r6, r7, r8, pc}",
            "mov r0, 0",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.000156c4": {
        "function_address": "0x000156c4",
        "instructions": [
            "cmp r0, 0",
            "push {r4, r5, lr}",
            "movne r4, r0",
            "movne r0, 0",
            "movne r3, r0",
            "popeq {r4, r5, pc}",
            "b 0x15734",
            "ldr ip, [r4], 4",
            "ldr r5, [ip, 0x20]",
            "and r5, r5, 0xf000",
            "cmp r5, 0x4000",
            "bne 0x15730",
            "cmp r2, 0",
            "ldr ip, [ip]",
            "bne 0x1572c",
            "ldrb r5, [ip]",
            "cmp r5, 0x2e",
            "bne 0x1572c",
            "ldrb r5, [ip, 1]",
            "cmp r5, 0",
            "beq 0x15730",
            "cmp r5, 0x2e",
            "bne 0x1572c",
            "ldrb ip, [ip, 2]",
            "cmp ip, 0",
            "beq 0x15730",
            "add r0, r0, 1",
            "add r3, r3, 1",
            "cmp r3, r1",
            "blt 0x156e0",
            "pop {r4, r5, pc}"
        ]
    },
    "fcn.000158b4": {
        "function_address": "0x000158b4",
        "instructions": [
            "cmp r0, 0",
            "ble 0x158c4",
            "lsl r0, r0, 2",
            "b fcn.00029eb4",
            "mov r0, 0",
            "bx lr"
        ]
    },
    "fcn.00015fd0": {
        "function_address": "0x00015fd0",
        "instructions": [
            "cmp r0, 0",
            "cmpne r1, 0",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x14",
            "movgt sb, 0",
            "movle sb, 1",
            "stmib sp, {r1, r2}",
            "ble 0x1621c",
            "ldr r7, [0x00016224]",
            "mov r8, r0",
            "ldr r3, [r7]",
            "tst r3, 0x88000",
            "beq 0x16030",
            "ldr r2, [sp, 8]",
            "cmp r2, 0",
            "bne 0x16018",
            "ldr r0, [0x00016228]",
            "bl sym.imp.puts",
            "ldr r3, [r8]",
            "ldr r0, aav.0x0005c470",
            "ldr r1, [r3, 4]",
            "bl sym.imp.printf",
            "mov r3, 0",
            "str r3, [sp, 8]",
            "ldr r3, [r8], 4",
            "ldr r4, [r3, 4]",
            "cmp r4, 0",
            "beq 0x1620c",
            "mov r0, r4",
            "bl fcn.0002a37c",
            "subs fp, r0, 0",
            "movne r6, 0",
            "movne r5, r6",
            "bne 0x160f0",
            "ldr r2, [0x00016230]",
            "mov r3, 1",
            "str r3, [r2]",
            "b 0x1620c",
            "ldrb r3, [sl, 0x13]",
            "cmp r3, 0x2e",
            "bne 0x160a4",
            "ldrb r3, [sl, 0x14]",
            "cmp r3, 0",
            "beq 0x1608c",
            "ldrh r3, [sl, 0x14]",
            "cmp r3, 0x2e",
            "bne 0x16098",
            "ldr r3, [r7]",
            "tst r3, 0x20000",
            "beq 0x160f0",
            "ldr r3, [r7]",
            "tst r3, 0x10000",
            "beq 0x160f0",
            "add r1, sl, 0x13",
            "mov r0, r4",
            "bl fcn.00026868",
            "mov sl, r0",
            "bl fcn.000264a0",
            "mov r2, 0",
            "mov r1, r0",
            "mov r0, sl",
            "bl fcn.000157f4",
            "cmp r0, 0",
            "bne 0x160dc",
            "mov r0, sl",
            "bl sym.imp.free",
            "b 0x160f0",
            "mov r2, 1",
            "str r5, [r0, 0x78]",
            "add r6, r6, r2",
            "mov r5, r0",
            "str r2, [r0, 8]",
            "mov r0, fp",
            "bl sym.imp.readdir64",
            "subs sl, r0, 0",
            "bne 0x16068",
            "mov r0, fp",
            "bl sym.imp.closedir",
            "cmp r5, 0",
            "beq 0x1620c",
            "mov r0, r6",
            "bl fcn.000158b4",
            "mov r4, r0",
            "str r0, [sp, 0xc]",
            "mov r3, r0",
            "b 0x16134",
            "str r5, [r3], 4",
            "add sl, sl, 1",
            "ldr r5, [r5, 0x78]",
            "cmp sl, r6",
            "blt 0x16128",
            "cmp r4, 0",
            "beq 0x1620c",
            "ldr r6, [r4]",
            "mov r5, 0",
            "ldr r6, [r6, 0x78]",
            "add r5, r5, 1",
            "cmp r6, 0",
            "bne 0x1614c",
            "mov r0, r4",
            "mov r1, r5",
            "bl fcn.00015fc0",
            "mov r0, r4",
            "mov r1, r5",
            "bl fcn.000159a4",
            "ldr r3, [r7]",
            "tst r3, 0x80000",
            "beq 0x161d0",
            "mov r1, r5",
            "mov r2, 2",
            "mov r0, r4",
            "bl fcn.000158cc",
            "mov r1, r5",
            "mov sl, r0",
            "mov r2, r6",
            "mov r0, r4",
            "bl fcn.000156c4",
            "subs fp, r0, 0",
            "ble 0x161d0",
            "mov r0, sl",
            "mov r1, fp",
            "bl fcn.00015fc0",
            "mov r0, sl",
            "mov r1, fp",
            "mov r2, r6",
            "bl fcn.00015fd0",
            "mov r0, sl",
            "bl sym.imp.free",
            "ldr fp, [sp, 0xc]",
            "mov r6, 0",
            "ldr sl, [fp], 4",
            "ldr r3, [sl, 8]",
            "cmp r3, 0",
            "beq 0x161f0",
            "ldr r0, [sl, 4]",
            "bl sym.imp.free",
            "mov r0, sl",
            "add r6, r6, 1",
            "bl sym.imp.free",
            "cmp r6, r5",
            "blt 0x161d8",
            "mov r0, r4",
            "bl sym.imp.free",
            "ldr r3, [sp, 4]",
            "add sb, sb, 1",
            "cmp sb, r3",
            "blt 0x15ff8",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00015fc0": {
        "function_address": "0x00015fc0",
        "instructions": [
            "mov r2, 4",
            "ldr r3, [pc]",
            "b sym.imp.qsort"
        ]
    },
    "fcn.000284f0": {
        "function_address": "0x000284f0",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sl, lr}",
            "mov r5, r0",
            "ldr r0, [r1, 0x18]",
            "mvn r2, 0x7f",
            "mov r4, r1",
            "add r8, r1, 0x1c",
            "mov r7, 0",
            "add r3, r1, r0",
            "strb r2, [r3, 0x1c]",
            "add r2, r0, 1",
            "str r2, [r1, 0x18]",
            "add r0, r3, 0x1d",
            "rsb r2, r2, 0x80",
            "mov r1, 0",
            "bl sym.imp.memset",
            "ldr r2, [r4, 0x14]",
            "ldr r3, [r4, 0x10]",
            "lsl r2, r2, 3",
            "orr r2, r2, r3, lsr 29",
            "lsl r3, r3, 3",
            "str r3, [r4, 0x10]",
            "ldr r3, [r4, 0x18]",
            "str r2, [r4, 0x14]",
            "cmp r3, 0x38",
            "addhi r6, r4, 0x5c",
            "movls r6, r8",
            "add sl, r6, 0x37",
            "ldrd r0, r1, [r4, 0x10]",
            "mov r2, r7",
            "add r7, r7, 8",
            "bl fcn.000551c4",
            "cmp r7, 0x40",
            "strb r0, [sl, 1]!",
            "bne 0x2855c",
            "cmp r6, r8",
            "beq 0x2858c",
            "add r0, r4, 0x1c",
            "mov r1, r4",
            "bl fcn.000281c4",
            "mov r0, r6",
            "mov r1, r4",
            "bl fcn.000281c4",
            "ldr r3, [r4]",
            "mov r0, r5",
            "str r3, [r5]",
            "ldr r3, [r4, 4]",
            "str r3, [r5, 4]",
            "ldr r3, [r4, 8]",
            "str r3, [r5, 8]",
            "ldr r3, [r4, 0xc]",
            "str r3, [r5, 0xc]",
            "pop {r3, r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "fcn.000551c4": {
        "function_address": "0x000551c4",
        "instructions": [
            "subs r3, r2, 0x20",
            "rsb ip, r2, 0x20",
            "lsrmi r0, r0, r2",
            "lsrpl r0, r1, r3",
            "orrmi r0, r0, r1, lsl ip",
            "lsr r1, r1, r2",
            "bx lr"
        ]
    },
    "fcn.000281c4": {
        "function_address": "0x000281c4",
        "instructions": [
            "ldr r3, [r1, 8]",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x4c",
            "ldm r1, {r5, fp}",
            "ldr sb, [r1, 0xc]",
            "str r3, [sp]",
            "mov r3, 0",
            "str sb, [sp, 4]",
            "ldr ip, [r0, r3]",
            "add r2, sp, 8",
            "str ip, [r2, r3]",
            "add r3, r3, 4",
            "cmp r3, 0x40",
            "bne 0x281e4",
            "ldr r2, [sp, 4]",
            "mov ip, fp",
            "ldr r4, [sp]",
            "mov r7, r5",
            "mov r3, 0",
            "ldr r6, aav.0x0005ba98",
            "ldr sl, aav.0x0005bb98",
            "ldr r8, aav.0x0005ba88",
            "b 0x28230",
            "mov r7, r2",
            "mov r2, r4",
            "mov r4, ip",
            "mov ip, r0",
            "ldrb r0, [sl, r3]",
            "add sb, sp, 0x48",
            "add r0, sb, r0, lsl 2",
            "ldr sb, [r0, -0x40]",
            "ldr r0, [r6], 4",
            "add r0, sb, r0",
            "add r7, r0, r7",
            "eor r0, r2, r4",
            "and r0, r0, ip",
            "eor r0, r0, r2",
            "add r0, r7, r0",
            "and r7, r3, 3",
            "ldrb sb, [r8, r7]",
            "add r3, r3, 1",
            "cmp r3, 0x10",
            "rsb sb, sb, 0x20",
            "add r0, ip, r0, ror sb",
            "bne 0x28220",
            "mov r3, r4",
            "ldr r7, [0x0002840c]",
            "mov r8, r2",
            "mov r4, 0",
            "ldr r6, aav.0x0005bad8",
            "ldr sl, aav.0x0005ba88",
            "b 0x282a4",
            "mov r8, r3",
            "mov r3, ip",
            "mov ip, r0",
            "mov r0, r2",
            "ldrb r2, [r7, 1]!",
            "add sb, sp, 0x48",
            "add r2, sb, r2, lsl 2",
            "ldr sb, [r2, -0x40]",
            "ldr r2, [r6], 4",
            "add r2, sb, r2",
            "add r8, r2, r8",
            "eor r2, ip, r0",
            "and r2, r2, r3",
            "eor r2, r2, ip",
            "add r2, r8, r2",
            "and r8, r4, 3",
            "add r8, sl, r8",
            "add r4, r4, 1",
            "ldrb sb, [r8, 4]",
            "cmp r4, 0x10",
            "rsb sb, sb, 0x20",
            "add r2, r0, r2, ror sb",
            "bne 0x28294",
            "ldr r7, [0x00028414]",
            "mov r8, r3",
            "mov r4, 0",
            "ldr r6, aav.0x0005bb18",
            "ldr sl, aav.0x0005ba88",
            "b 0x28318",
            "mov r8, ip",
            "mov ip, r0",
            "mov r0, r2",
            "mov r2, r3",
            "ldrb r3, [r7, 1]!",
            "add sb, sp, 0x48",
            "add r3, sb, r3, lsl 2",
            "ldr sb, [r3, -0x40]",
            "ldr r3, [r6], 4",
            "add r3, sb, r3",
            "add r8, r3, r8",
            "eor r3, r0, r2",
            "eor r3, r3, ip",
            "add r3, r8, r3",
            "and r8, r4, 3",
            "add r8, sl, r8",
            "add r4, r4, 1",
            "ldrb sb, [r8, 8]",
            "cmp r4, 0x10",
            "rsb sb, sb, 0x20",
            "add r3, r2, r3, ror sb",
            "bne 0x28308",
            "ldr r7, [0x0002841c]",
            "mov r4, 0",
            "ldr r6, aav.0x0005bb58",
            "ldr r8, aav.0x0005ba88",
            "b 0x28384",
            "mov ip, r0",
            "mov r0, r2",
            "mov r2, r3",
            "mov r3, sl",
            "ldrb sl, [r7, 1]!",
            "add sb, sp, 0x48",
            "add sl, sb, sl, lsl 2",
            "ldr sb, [sl, -0x40]",
            "ldr sl, [r6], 4",
            "add sl, sb, sl",
            "add ip, sl, ip",
            "mvn sl, r0",
            "orr sl, sl, r3",
            "eor sl, sl, r2",
            "add sl, ip, sl",
            "and ip, r4, 3",
            "add ip, r8, ip",
            "add r4, r4, 1",
            "ldrb sb, [ip, 0xc]",
            "cmp r4, 0x10",
            "rsb sb, sb, 0x20",
            "add sl, r3, sl, ror sb",
            "bne 0x28374",
            "add r0, r0, r5",
            "add fp, sl, fp",
            "str r0, [r1]",
            "ldr r0, [sp]",
            "str fp, [r1, 4]",
            "add r3, r3, r0",
            "str r3, [r1, 8]",
            "ldr r3, [sp, 4]",
            "add r2, r2, r3",
            "str r2, [r1, 0xc]",
            "add sp, sp, 0x4c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00019224": {
        "function_address": "0x00019224",
        "instructions": [
            "push {r0, r1, r4, lr}",
            "mov r4, 0",
            "add r2, sp, 8",
            "movw r3, 0x1b6",
            "mov r0, r1",
            "str r4, [r2, -8]!",
            "mov r2, sp",
            "ldr r1, [0x00019278]",
            "str r3, [sp, 4]",
            "bl fcn.00027674",
            "tst r0, 1",
            "beq 0x19270",
            "ldr r0, [sp]",
            "add r1, sp, 4",
            "bl fcn.00028664",
            "cmp r0, r4",
            "beq 0x19270",
            "mov r0, r4",
            "bl sym.imp.umask",
            "ldr r0, [sp, 4]",
            "pop {r2, r3, r4, pc}"
        ]
    },
    "fcn.00029d04": {
        "function_address": "0x00029d04",
        "instructions": [
            "push {r0, r1, r2, lr}",
            "mov ip, r1",
            "mov r3, r2",
            "mov r2, 0",
            "mov r1, 0xa",
            "str r2, [sp]",
            "mov r2, ip",
            "bl fcn.00029b9c",
            "pop {r1, r2, r3, pc}"
        ]
    },
    "fcn.00026434": {
        "function_address": "0x00026434",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r5, 1",
            "mov r6, 0",
            "ldr r7, obj.stdin",
            "b 0x26478",
            "cmp r5, 0",
            "beq 0x26478",
            "bl sym.imp.isspace",
            "subs r5, r0, 0",
            "movne r5, 1",
            "bne 0x26478",
            "cmp r4, 0x79",
            "cmpne r4, 0x59",
            "movne r4, 0",
            "moveq r4, 1",
            "addeq r6, r6, 1",
            "movne r5, r4",
            "ldr r0, [r7]",
            "bl sym.imp.fgetc",
            "cmn r0, 1",
            "mov r4, r0",
            "beq 0x26494",
            "cmp r0, 0xa",
            "bne 0x26448",
            "mov r0, r6",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.0002932c": {
        "function_address": "0x0002932c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "sub sp, sp, 0x68",
            "mov r6, r1",
            "mov r1, sp",
            "mov r4, r0",
            "bl sym.imp.lstat64",
            "cmp r0, 0",
            "bge 0x29370",
            "ldr r3, [0x00029540]",
            "ldr r3, [r3]",
            "ldr r3, [r3]",
            "cmp r3, 2",
            "ldrne r0, str.cannot_stat__s",
            "bne 0x29520",
            "tst r6, 8",
            "bne 0x29530",
            "b 0x2951c",
            "ldr r3, [sp, 0x10]",
            "and r3, r3, 0xf000",
            "cmp r3, 0x4000",
            "bne 0x294a0",
            "tst r6, 4",
            "bne 0x29398",
            "ldr r0, str._s:_is_a_directory",
            "mov r1, r4",
            "bl fcn.00027184",
            "b 0x29528",
            "ands r5, r6, 8",
            "bne 0x293c4",
            "mov r0, r4",
            "mov r1, 2",
            "bl sym.imp.access",
            "cmp r0, 0",
            "bge 0x293c4",
            "mov r0, r5",
            "bl sym.imp.isatty",
            "cmp r0, 0",
            "bne 0x293cc",
            "tst r6, 0x10",
            "beq 0x293f4",
            "ldr r3, obj.stderr",
            "ldr r1, str._s:_descend_into_directory__s_",
            "ldr r0, [r3]",
            "ldr r3, [0x00029554]",
            "ldr r2, [r3]",
            "mov r3, r4",
            "bl sym.imp.fprintf",
            "bl fcn.00026434",
            "subs r5, r0, 0",
            "beq 0x29534",
            "mov r0, r4",
            "bl sym.imp.opendir",
            "subs r7, r0, 0",
            "movne r5, 0",
            "bne 0x29438",
            "b 0x29528",
            "mov r0, r4",
            "add r1, r1, 0x13",
            "bl fcn.000268c8",
            "subs r8, r0, 0",
            "beq 0x29438",
            "mov r1, r6",
            "bl fcn.0002932c",
            "cmp r0, 0",
            "mov r0, r8",
            "mvnlt r5, 0",
            "bl sym.imp.free",
            "mov r0, r7",
            "bl sym.imp.readdir64",
            "subs r1, r0, 0",
            "bne 0x2940c",
            "mov r0, r7",
            "bl sym.imp.closedir",
            "cmp r0, 0",
            "ldrlt r0, str.cannot_close__s",
            "blt 0x29520",
            "tst r6, 0x10",
            "beq 0x2948c",
            "ldr r3, obj.stderr",
            "ldr r1, str._s:_remove_directory__s_",
            "ldr r0, [r3]",
            "ldr r3, [0x00029554]",
            "ldr r2, [r3]",
            "mov r3, r4",
            "bl sym.imp.fprintf",
            "bl fcn.00026434",
            "cmp r0, 0",
            "beq 0x29534",
            "mov r0, r4",
            "bl sym.imp.rmdir",
            "cmp r0, 0",
            "bge 0x29534",
            "b 0x2951c",
            "ands r5, r6, 8",
            "bne 0x294dc",
            "mov r0, r4",
            "mov r1, 2",
            "bl sym.imp.access",
            "cmp r0, 0",
            "bge 0x294dc",
            "ldr r3, [sp, 0x10]",
            "and r3, r3, 0xf000",
            "cmp r3, 0xa000",
            "beq 0x294dc",
            "mov r0, r5",
            "bl sym.imp.isatty",
            "cmp r0, 0",
            "bne 0x294e4",
            "tst r6, 0x10",
            "beq 0x2950c",
            "ldr r3, obj.stderr",
            "ldr r1, str._s:_remove__s_",
            "ldr r0, [r3]",
            "ldr r3, [0x00029554]",
            "ldr r2, [r3]",
            "mov r3, r4",
            "bl sym.imp.fprintf",
            "bl fcn.00026434",
            "subs r5, r0, 0",
            "beq 0x29534",
            "mov r0, r4",
            "bl sym.imp.unlink",
            "cmp r0, 0",
            "bge 0x29530",
            "ldr r0, str.cannot_remove__s",
            "mov r1, r4",
            "bl fcn.000288b8",
            "mvn r5, 0",
            "b 0x29534",
            "mov r5, 0",
            "mov r0, r5",
            "add sp, sp, 0x68",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "sym.imp.access": {
        "function_address": "0x0000bbac",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x904]!"
        ]
    },
    "sym.imp.isatty": {
        "function_address": "0x0000bda4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x7b4]!"
        ]
    },
    "sym.imp.rmdir": {
        "function_address": "0x0000b930",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xaac]!"
        ]
    },
    "fcn.00029dd0": {
        "function_address": "0x00029dd0",
        "instructions": [
            "push {r0, r1, r2, lr}",
            "mov ip, r1",
            "mov r3, r2",
            "mov r2, 0",
            "mov r1, 0xa",
            "str r2, [sp]",
            "mov r2, ip",
            "bl fcn.00029d4c",
            "pop {r1, r2, r3, pc}"
        ]
    },
    "fcn.00029d4c": {
        "function_address": "0x00029d4c",
        "instructions": [
            "push {r0, r1, r2, r4, r5, r6, r7, lr}",
            "mov r4, r3",
            "ldrb r3, [r0]",
            "mov r7, r2",
            "mov r6, r0",
            "ldr r2, [sp, 0x20]",
            "cmp r3, 0x2d",
            "moveq r3, 0x80000000",
            "mvnne r3, 0x80000000",
            "addeq r0, r0, 1",
            "movne r0, r6",
            "str r2, [sp]",
            "mov r2, 0",
            "bl fcn.00029b9c",
            "ldrb r3, [r6]",
            "cmp r3, 0x2d",
            "rsbeq r0, r0, 0",
            "cmp r0, r7",
            "movge r3, 0",
            "movlt r3, 1",
            "cmp r0, r4",
            "orrgt r3, r3, 1",
            "cmp r3, 0",
            "beq 0x29dc8",
            "asr r5, r4, 0x1f",
            "ldr r0, str.number__s_is_not_in__lld.._lld_range",
            "mov r1, r6",
            "mov r2, r7",
            "asr r3, r2, 0x1f",
            "strd r4, r5, [sp]",
            "bl fcn.000271d8",
            "pop {r1, r2, r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.00016da0": {
        "function_address": "0x00016da0",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "mov r4, r0",
            "ldrb r3, [r0]",
            "sub sp, sp, 0x14",
            "mov r7, r1",
            "mov r6, r2",
            "cmp r3, 0x22",
            "cmpne r3, 0x27",
            "bne 0x16ddc",
            "ldrb r2, [r4, 1]",
            "mov r5, sp",
            "mov r4, sp",
            "mov r0, sp",
            "ldr r1, aav.0x0005c33c",
            "bl sym.imp.sprintf",
            "mov r0, r4",
            "mov r1, r7",
            "blx r6",
            "ldr r3, [0x00016e18]",
            "ldr r3, [r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x16e0c",
            "ldr r3, obj.stderr",
            "mov r0, r4",
            "ldr r1, [r3]",
            "bl sym.imp.fputs",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.00016e3c": {
        "function_address": "0x00016e3c",
        "instructions": [
            "push {r0, r1, r2, lr}",
            "add r1, sp, 4",
            "ldr r2, fcn.0001710c",
            "bl fcn.00016da0",
            "ldr r0, [sp, 4]",
            "pop {r1, r2, r3, pc}"
        ]
    },
    "fcn.0001710c": {
        "function_address": "0x0001710c",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r1",
            "mov r1, 0",
            "mov r2, r1",
            "bl fcn.00026744",
            "str r0, [r4]",
            "pop {r4, pc}"
        ]
    },
    "fcn.00026744": {
        "function_address": "0x00026744",
        "instructions": [
            "push {r0, r1, r4, r5, r6, lr}",
            "mov r4, r0",
            "ldrb r0, [r0]",
            "mov r5, r1",
            "mov r6, r2",
            "cmp r0, 0x2d",
            "beq 0x26774",
            "bl sym.imp.isalnum",
            "cmp r0, 0",
            "bne 0x26774",
            "bl fcn.000265fc",
            "b 0x267a4",
            "ldr r3, [0x000267a8]",
            "mov r2, 0",
            "add r1, sp, 4",
            "mov r0, r4",
            "ldr r3, [r3]",
            "str r2, [r3]",
            "mov r2, r6",
            "bl sym.imp.strtol",
            "mov r2, r5",
            "asr r1, r0, 0x1f",
            "ldr r3, [sp, 4]",
            "bl fcn.0002661c",
            "pop {r2, r3, r4, r5, r6, pc}"
        ]
    },
    "fcn.00016e20": {
        "function_address": "0x00016e20",
        "instructions": [
            "push {r0, r1, r2, lr}",
            "add r1, sp, 4",
            "ldr r2, fcn.00016e78",
            "bl fcn.00016da0",
            "ldr r0, [sp, 4]",
            "pop {r1, r2, r3, pc}"
        ]
    },
    "fcn.00016e78": {
        "function_address": "0x00016e78",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r1",
            "mov r1, 0",
            "mov r2, r1",
            "bl fcn.000266e4",
            "str r0, [r4]",
            "pop {r4, pc}"
        ]
    },
    "fcn.00016e58": {
        "function_address": "0x00016e58",
        "instructions": [
            "push {r0, r1, r2, lr}",
            "mov r1, sp",
            "ldr r2, fcn.00017128",
            "bl fcn.00016da0",
            "ldrd r0, r1, [sp]",
            "add sp, sp, 0xc",
            "ldm sp!, {pc}"
        ]
    },
    "fcn.00017128": {
        "function_address": "0x00017128",
        "instructions": [
            "push {r0, r1, r4, lr}",
            "mov r4, r1",
            "add r1, sp, 4",
            "bl sym.imp.strtod",
            "ldr r3, [sp, 4]",
            "strd r0, r1, [r4]",
            "ldrb r3, [r3]",
            "cmp r3, 0",
            "ldrne r3, [0x0001715c]",
            "movne r2, 0x22",
            "ldrne r3, [r3]",
            "strne r2, [r3]",
            "pop {r2, r3, r4, pc}"
        ]
    },
    "sym.imp.strtod": {
        "function_address": "0x0000bab0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x9ac]!"
        ]
    },
    "fcn.00016e94": {
        "function_address": "0x00016e94",
        "instructions": [
            "push {r0, r1, r2, r4, r5, r6, r7, r8, sl, lr}",
            "mov r6, r1",
            "mov r7, r0",
            "add r0, r1, 1",
            "mov r8, r3",
            "mov r5, r2",
            "ldr sl, [sp, 0x28]",
            "bl fcn.00029e54"
        ]
    },
    "fcn.0002a5ec": {
        "function_address": "0x0002a5ec",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "subs r4, r0, 0",
            "bne 0x2a604",
            "movw r0, 0x1002",
            "bl fcn.00029e54",
            "movw r5, 0x1002",
            "ldr r6, [0x0002a66c]",
            "b 0x2a624",
            "add r5, r5, 0x20",
            "mov r0, r4",
            "mov r1, r5",
            "bl fcn.00029e84",
            "mov r0, r4",
            "mov r1, r5",
            "bl sym.imp.getcwd",
            "subs r7, r0, 0",
            "bne 0x2a64c",
            "ldr r3, [r6]",
            "ldr r3, [r3]",
            "cmp r3, 0x22",
            "beq 0x2a610",
            "b 0x2a654",
            "mov r0, r4",
            "pop {r3, r4, r5, r6, r7, pc}",
            "mov r0, r4",
            "mov r4, r7",
            "bl sym.imp.free",
            "ldr r0, str.getcwd",
            "bl fcn.000288b8",
            "b 0x2a64c"
        ]
    },
    "sym.imp.getcwd": {
        "function_address": "0x0000b960",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xa8c]!"
        ]
    },
    "fcn.00029ce0": {
        "function_address": "0x00029ce0",
        "instructions": [
            "push {r0, r1, r2, lr}",
            "mov ip, r2",
            "mov lr, r1",
            "str r3, [sp]",
            "mov r1, 0xa",
            "mov r2, lr",
            "mov r3, ip",
            "bl fcn.00029b9c",
            "pop {r1, r2, r3, pc}"
        ]
    },
    "fcn.00017698": {
        "function_address": "0x00017698",
        "instructions": [
            "push {r3, lr}",
            "mov r3, r0",
            "mov r2, r1",
            "mov r0, 1",
            "mov r1, r3",
            "bl sym.imp.dprintf",
            "cmp r0, 0",
            "popge {r3, pc}",
            "bl fcn.00028940"
        ]
    },
    "sym.imp.dprintf": {
        "function_address": "0x0000bd14",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x814]!"
        ]
    },
    "fcn.00028940": {
        "function_address": "0x00028940",
        "instructions": [
            "mov r0, 0",
            "b fcn.00028900"
        ]
    },
    "fcn.000176bc": {
        "function_address": "0x000176bc",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r3, 1",
            "sub sp, sp, 0x70",
            "mov r6, r0",
            "mov r8, r2",
            "mov r2, 0",
            "str r3, [sp]",
            "mov r3, 0",
            "mov r7, r1",
            "bl sym.imp.lseek64",
            "mov r4, r0",
            "mov r5, r1",
            "mov r0, r6",
            "add r1, sp, 8",
            "bl sym.imp.fstat64",
            "cmp r0, 0",
            "bne 0x17724",
            "ldr r3, [sp, 0x3c]",
            "cmp r3, r5",
            "blt 0x1771c",
            "bne 0x17724",
            "ldr r3, [sp, 0x38]",
            "cmp r3, r4",
            "bhs 0x17724",
            "mov r4, 0",
            "mov r5, 0",
            "mov r3, 0",
            "mov r2, r4",
            "str r3, [sp]",
            "mov r0, r6",
            "mov r3, r5",
            "bl sym.imp.lseek64",
            "mov r0, r6",
            "mov r1, r7",
            "mov r2, r8",
            "bl fcn.00028f70",
            "subs r4, r0, 0",
            "bge 0x17768",
            "ldr r0, aav.0x0005bc80",
            "bl fcn.000288b8",
            "ldr r3, [0x00017778]",
            "mov r2, 1",
            "strb r2, [r3]",
            "mov r0, r4",
            "add sp, sp, 0x70",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "sym.imp.lseek64": {
        "function_address": "0x0000bb40",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x94c]!"
        ]
    },
    "fcn.00017cdc": {
        "function_address": "0x00017cdc",
        "instructions": [
            "mov r2, r1",
            "subs r1, r0, 0",
            "push {r3, lr}",
            "beq 0x17d04",
            "ldrb r3, [r1]",
            "cmp r3, 0",
            "beq 0x17d04",
            "ldr r0, [0x00017d1c]",
            "bl fcn.00027184",
            "b 0x17d10",
            "ldr r0, [0x00017d20]",
            "mov r1, r2",
            "bl fcn.00027184",
            "ldr r0, [0x00017d24]",
            "mov r1, 2",
            "bl sym.imp.longjmp",
            "muleq r6, fp, fp",
            "muleq r6, pc, fp",
            "andeq sl, r6, r8, ror sb"
        ]
    },
    "fcn.00017c70": {
        "function_address": "0x00017c70",
        "instructions": [
            "ldr r3, [0x00017cd0]",
            "mov r2, 0",
            "push {r4, r5, r6, lr}",
            "subs r5, r0, 0",
            "str r2, [r3]",
            "beq 0x17cc8",
            "ldr r6, str.STRING2_cannot_be_empty",
            "ldr r4, aav.0x0005a5c8",
            "mov r0, r5",
            "mov r1, r4",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x17cb4",
            "ldr r3, [0x00017cd0]",
            "ldrb r0, [r4, 4]",
            "str r4, [r3]",
            "pop {r4, r5, r6, pc}",
            "add r4, r4, 6",
            "cmp r4, r6",
            "bne 0x17c90",
            "mov r0, 0x27",
            "pop {r4, r5, r6, pc}",
            "mov r0, r5",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.00017d28": {
        "function_address": "0x00017d28",
        "instructions": [
            "ldr r3, [0x00017d8c]",
            "mov r2, 0xa",
            "push {r0, r1, r4, r5, r6, lr}",
            "add r1, sp, 4",
            "mov r4, r0",
            "ldr r5, [r3]",
            "mov r3, 0",
            "str r3, [r5]",
            "bl sym.imp.strtol",
            "ldr r3, [r5]",
            "mov r6, r0",
            "cmp r3, 0",
            "movne r0, r4",
            "ldrne r1, str.out_of_range",
            "bne 0x17d80",
            "ldr r0, [sp, 4]",
            "bl fcn.000295c4",
            "ldrb r3, [r0]",
            "cmp r3, 0",
            "beq 0x17d84",
            "ldr r1, str.bad_number",
            "mov r0, r4",
            "bl fcn.00017cdc",
            "mov r0, r6",
            "pop {r2, r3, r4, r5, r6, pc}"
        ]
    },
    "fcn.00017fdc": {
        "function_address": "0x00017fdc",
        "instructions": [
            "cmp r0, 0x22",
            "push {r4, r5, r6, r7, lr}",
            "mov r4, r0",
            "sub sp, sp, 0xd4",
            "bne 0x18018",
            "ldr r2, [0x000183ac]",
            "ldr r3, [r2]",
            "add r1, r3, 4",
            "ldr r0, [r3, 4]",
            "str r1, [r2]",
            "bl fcn.00017c70",
            "bl fcn.00017fdc",
            "rsbs r6, r0, 1",
            "movlo r6, 0",
            "b 0x183a0",
            "cmp r0, 0",
            "beq 0x180a8",
            "cmp r0, 0x25",
            "bne 0x18070",
            "ldr r4, [0x000183ac]",
            "ldr r3, [r4]",
            "add r2, r3, 4",
            "ldr r0, [r3, 4]",
            "str r2, [r4]",
            "bl fcn.00017c70",
            "bl fcn.00018428",
            "ldr r3, [r4]",
            "mov r6, r0",
            "add r2, r3, 4",
            "ldr r0, [r3, 4]",
            "str r2, [r4]",
            "bl fcn.00017c70",
            "cmp r0, 0x26",
            "beq 0x183a0",
            "ldr r1, str.closing_paren_expected",
            "mov r0, 0",
            "bl fcn.00017cdc",
            "ldr r3, [0x000183b4]",
            "ldr r0, [r3]",
            "cmp r0, 0",
            "beq 0x18358",
            "ldrb r3, [r0, 5]",
            "cmp r3, 0",
            "bne 0x18358",
            "ldr r2, [0x000183ac]",
            "ldr r3, [r2]",
            "ldr r5, [r3, 4]",
            "add r1, r3, 4",
            "str r1, [r2]",
            "cmp r5, 0",
            "bne 0x180b0",
            "ldr r1, str.argument_expected",
            "b 0x1806c",
            "cmp r4, 0x16",
            "ldrbeq r6, [r5]",
            "beq 0x18238",
            "cmp r4, 0x17",
            "ldrbeq r6, [r5]",
            "beq 0x18398",
            "cmp r4, 0xd",
            "bne 0x180e0",
            "mov r0, r5",
            "bl fcn.00017d28",
            "bl sym.imp.isatty",
            "b 0x18388",
            "cmp r4, 0xb",
            "add r1, sp, 0x68",
            "bne 0x18100",
            "mov r0, r5",
            "bl sym.imp.lstat64",
            "cmp r0, 0",
            "beq 0x18294",
            "b 0x18348",
            "mov r0, r5",
            "bl sym.imp.stat64",
            "cmp r0, 0",
            "bne 0x18348",
            "cmp r4, 4",
            "beq 0x18350",
            "uxtb r3, r4",
            "sub r2, r3, 1",
            "uxtb r2, r2",
            "cmp r2, 2",
            "bhi 0x18244",
            "cmp r4, 2",
            "beq 0x18140",
            "cmp r4, 3",
            "moveq r4, 1",
            "movne r4, 4",
            "bl sym.imp.geteuid",
            "mov r1, sp",
            "mov r6, r0",
            "mov r0, r5",
            "bl sym.imp.stat64",
            "cmp r0, 0",
            "mvnlt r6, 0",
            "blt 0x18238",
            "cmp r6, 0",
            "bne 0x1817c",
            "cmp r4, 1",
            "bne 0x18238",
            "ldr r3, [sp, 0x10]",
            "tst r3, 0x49",
            "bne 0x18238",
            "ldr r3, [sp, 0x18]",
            "cmp r3, r6",
            "lsleq r4, r4, 6",
            "beq 0x18228",
            "ldr r5, [sp, 0x1c]",
            "bl sym.imp.getgid",
            "cmp r5, r0",
            "beq 0x18224",
            "bl sym.imp.getegid",
            "cmp r5, r0",
            "beq 0x18224",
            "ldr r6, [0x000183bc]",
            "ldr r0, [r6]",
            "cmp r0, 0",
            "bne 0x181f0",
            "mov r1, r0",
            "bl sym.imp.getgroups",
            "cmp r0, 0",
            "mov r1, r0",
            "str r0, [r6]",
            "ble 0x181f0",
            "ldr r7, [0x000183c0]",
            "lsl r1, r1, 2",
            "ldr r0, [r7]",
            "bl fcn.00029e84",
            "ldr r3, [0x000183bc]",
            "ldr r1, [r3]",
            "ldr r3, [0x000183c0]",
            "ldr r2, [r3]",
            "mov r3, 0",
            "b 0x18218",
            "ldr r0, [r2], 4",
            "cmp r5, r0",
            "beq 0x18224",
            "add r3, r3, 1",
            "cmp r3, r1",
            "blt 0x18208",
            "b 0x18228",
            "lsl r4, r4, 3",
            "ldr r3, [sp, 0x10]",
            "tst r4, r3",
            "mvneq r6, 0",
            "movne r6, 0",
            "rsbs r6, r6, 1",
            "movlo r6, 0",
            "b 0x183a0",
            "sub r2, r3, 5",
            "uxtb r2, r2",
            "cmp r2, 5",
            "bhi 0x182b0",
            "cmp r4, 6",
            "moveq r4, 0x4000",
            "beq 0x18298",
            "cmp r4, 7",
            "moveq r4, 0x2000",
            "beq 0x18298",
            "cmp r4, 8",
            "moveq r4, 0x6000",
            "beq 0x18298",
            "cmp r4, 9",
            "moveq r4, 0x1000",
            "beq 0x18298",
            "cmp r4, 0xa",
            "moveq r4, 0xc000",
            "movne r4, 0x8000",
            "b 0x18298",
            "mov r4, 0xa000",
            "ldr r6, [sp, 0x78]",
            "and r6, r6, 0xf000",
            "cmp r6, r4",
            "movne r6, 0",
            "moveq r6, 1",
            "b 0x183a0",
            "sub r3, r3, 0xe",
            "uxtb r3, r3",
            "cmp r3, 2",
            "bhi 0x182ec",
            "cmp r4, 0xf",
            "moveq r4, 0x400",
            "beq 0x182d8",
            "cmp r4, 0x10",
            "moveq r4, 0x200",
            "movne r4, 0x800",
            "ldr r3, [sp, 0x78]",
            "tst r4, r3",
            "moveq r6, 0",
            "movne r6, 1",
            "b 0x183a0",
            "cmp r4, 0xc",
            "bne 0x18314",
            "ldr r1, [sp, 0x9c]",
            "asr r2, r1, 0x1f",
            "ldrd r0, r1, [sp, 0x98]",
            "mov r3, r2",
            "subs r2, r2, r0",
            "sbc r3, r3, r1",
            "lsr r6, r3, 0x1f",
            "b 0x183a0",
            "cmp r4, 0x14",
            "bne 0x18328",
            "ldr r6, [sp, 0x80]",
            "bl sym.imp.geteuid",
            "b 0x18338",
            "cmp r4, 0x15",
            "bne 0x18350",
            "ldr r6, [sp, 0x84]",
            "bl sym.imp.getegid",
            "cmp r6, r0",
            "movne r6, 0",
            "moveq r6, 1",
            "b 0x183a0",
            "mov r6, 0",
            "b 0x183a0",
            "mov r6, 1",
            "b 0x183a0",
            "ldr r3, [0x000183ac]",
            "ldr r4, [r3]",
            "ldr r0, [r4, 4]",
            "bl fcn.00017c70",
            "ldr r3, [0x000183b4]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x18390",
            "ldrb r3, [r3, 5]",
            "cmp r3, 1",
            "bne 0x18390",
            "bl fcn.00017d98",
            "mov r6, r0",
            "b 0x183a0",
            "ldr r3, [r4]",
            "ldrb r6, [r3]",
            "subs r6, r6, 0",
            "movne r6, 1",
            "mov r0, r6",
            "add sp, sp, 0xd4",
            "pop {r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.00018428": {
        "function_address": "0x00018428",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "ldr r5, [0x00018488]",
            "bl fcn.000183c4",
            "ldr r6, [r5]",
            "mov r4, r0",
            "add r7, r6, 4",
            "ldr r0, [r6, 4]",
            "str r7, [r5]",
            "bl fcn.00017c70",
            "cmp r0, 0x24",
            "strne r6, [r5]",
            "bne 0x18480",
            "add r3, r7, 4",
            "ldr r0, [r7, 4]",
            "str r3, [r5]",
            "bl fcn.00017c70",
            "bl fcn.00018428",
            "cmp r0, 0",
            "movne r4, 1",
            "bne 0x18480",
            "subs r4, r4, 0",
            "movne r4, 1",
            "mov r0, r4",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "sym.imp.getegid": {
        "function_address": "0x0000b864",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xb34]!"
        ]
    },
    "sym.imp.getgroups": {
        "function_address": "0x0000c4b8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x2fc]!"
        ]
    },
    "fcn.00017d98": {
        "function_address": "0x00017d98",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "sub sp, sp, 0xd4",
            "ldr r6, [0x00017fd0]",
            "ldr r3, [r6]",
            "mov r5, r3",
            "ldr r0, [r3, 4]",
            "ldr r7, [r5], 4",
            "str r5, [r6]",
            "bl fcn.00017c70",
            "ldr r3, [0x00017fd4]",
            "ldr r4, [r3]",
            "add r3, r5, 4",
            "str r3, [r6]",
            "ldr r6, [r5, 4]",
            "cmp r6, 0",
            "bne 0x17de4",
            "mov r0, r4",
            "ldr r1, str.argument_expected",
            "bl fcn.00017cdc",
            "ldrb r3, [r4, 4]",
            "sub r3, r3, 0x1c",
            "uxtb r3, r3",
            "cmp r3, 5",
            "bhi 0x17e9c",
            "mov r0, r7",
            "bl fcn.00017d28",
            "mov r5, r0",
            "mov r0, r6",
            "bl fcn.00017d28",
            "ldrb r3, [r4, 4]",
            "cmp r3, 0x1c",
            "bne 0x17e28",
            "cmp r5, r0",
            "movne r0, 0",
            "moveq r0, 1",
            "b 0x17fc8",
            "cmp r3, 0x1d",
            "bne 0x17e3c",
            "subs r0, r5, r0",
            "movne r0, 1",
            "b 0x17fc8",
            "cmp r3, 0x1e",
            "bne 0x17e54",
            "cmp r5, r0",
            "movlt r0, 0",
            "movge r0, 1",
            "b 0x17fc8",
            "cmp r3, 0x1f",
            "bne 0x17e6c",
            "cmp r5, r0",
            "movle r0, 0",
            "movgt r0, 1",
            "b 0x17fc8",
            "cmp r3, 0x20",
            "bne 0x17e84",
            "cmp r5, r0",
            "movgt r0, 0",
            "movle r0, 1",
            "b 0x17fc8",
            "cmp r3, 0x21",
            "bne 0x17e9c",
            "cmp r5, r0",
            "movge r0, 0",
            "movlt r0, 1",
            "b 0x17fc8",
            "ldrb r5, [r4, 4]",
            "sub r3, r5, 0x16",
            "uxtb r3, r3",
            "cmp r3, 5",
            "bhi 0x17f08",
            "mov r0, r7",
            "mov r1, r6",
            "bl sym.imp.strcmp",
            "cmp r5, 0x18",
            "bne 0x17ed0",
            "rsbs r0, r0, 1",
            "movlo r0, 0",
            "b 0x17fc8",
            "cmp r5, 0x19",
            "bne 0x17ee4",
            "subs r0, r0, 0",
            "movne r0, 1",
            "b 0x17fc8",
            "cmp r5, 0x1a",
            "lsreq r0, r0, 0x1f",
            "beq 0x17fc8",
            "cmp r5, 0x1b",
            "bne 0x17f08",
            "cmp r0, 0",
            "movle r0, 0",
            "movgt r0, 1",
            "b 0x17fc8",
            "mov r0, r7",
            "add r1, sp, 0x68",
            "bl sym.imp.stat64",
            "subs r5, r0, 0",
            "bne 0x17fc4",
            "mov r0, r6",
            "mov r1, sp",
            "bl sym.imp.stat64",
            "cmp r0, 0",
            "movne r0, r5",
            "bne 0x17fc8",
            "ldrb r3, [r4, 4]",
            "cmp r3, 0x11",
            "bne 0x17f58",
            "ldr r3, [sp, 0x50]",
            "ldr r0, [sp, 0xb8]",
            "cmp r0, r3",
            "movle r0, 0",
            "movgt r0, 1",
            "b 0x17fc8",
            "cmp r3, 0x12",
            "bne 0x17f78",
            "ldr r3, [sp, 0x50]",
            "ldr r0, [sp, 0xb8]",
            "cmp r0, r3",
            "movge r0, 0",
            "movlt r0, 1",
            "b 0x17fc8",
            "cmp r3, 0x13",
            "movne r0, 1",
            "bne 0x17fc8",
            "ldr r3, [sp]",
            "ldr r2, [sp, 0x68]",
            "cmp r2, r3",
            "bne 0x17fc4",
            "ldr r3, [sp, 4]",
            "ldr r2, [sp, 0x6c]",
            "cmp r2, r3",
            "bne 0x17fc4",
            "ldrd r0, r1, [sp, 0xc8]",
            "ldrd r2, r3, [sp, 0x60]",
            "eor r2, r2, r0",
            "eor r3, r3, r1",
            "orrs r1, r2, r3",
            "movne r0, 0",
            "moveq r0, 1",
            "b 0x17fc8",
            "mov r0, 0",
            "add sp, sp, 0xd4",
            "pop {r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.000183c4": {
        "function_address": "0x000183c4",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "ldr r5, [0x00018424]",
            "bl fcn.00017fdc",
            "ldr r6, [r5]",
            "mov r4, r0",
            "add r7, r6, 4",
            "ldr r0, [r6, 4]",
            "str r7, [r5]",
            "bl fcn.00017c70",
            "cmp r0, 0x23",
            "strne r6, [r5]",
            "bne 0x1841c",
            "add r3, r7, 4",
            "ldr r0, [r7, 4]",
            "str r3, [r5]",
            "bl fcn.00017c70",
            "bl fcn.000183c4",
            "cmp r0, 0",
            "moveq r4, r0",
            "beq 0x1841c",
            "subs r4, r4, 0",
            "movne r4, 1",
            "mov r0, r4",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.00018788": {
        "function_address": "0x00018788",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x14",
            "add r5, sp, 0x10",
            "mov r6, r1",
            "mov r4, r1",
            "mov sl, 0x5b",
            "str r0, [r5, -4]!",
            "mov r8, 0x3a",
            "mov r7, 9",
            "mov fp, 0x20",
            "b 0x18a24",
            "cmp r3, 0x5c",
            "add r1, r2, 1",
            "bne 0x187d4",
            "mov r0, r5",
            "str r1, [sp, 0xc]",
            "bl fcn.00028948",
            "strb r0, [r4], 1",
            "b 0x18a24",
            "ldrb r0, [r2, 1]",
            "cmp r0, 0x2d",
            "bne 0x18808",
            "ldrb r0, [r2, 2]",
            "cmp r0, 0",
            "bne 0x187f8",
            "b 0x18a1c",
            "strb r3, [r4], 1",
            "add r3, r3, 1",
            "cmp r3, r0",
            "bls 0x187f0",
            "add r2, r2, 3",
            "b 0x18a14",
            "cmp r3, 0x5b",
            "bne 0x18a1c",
            "str r1, [sp, 0xc]",
            "add r0, r1, 1",
            "ldrb ip, [r2, 1]",
            "str r0, [sp, 0xc]",
            "cmp ip, 0x3a",
            "bne 0x189d0",
            "mov r1, 7",
            "bl fcn.00029f04",
            "mov sb, r0",
            "ldr r0, str.alpha:_",
            "mov r1, sb",
            "bl fcn.000267ac",
            "mov r2, r0",
            "add r3, r0, 1",
            "mov r0, sb",
            "str r2, [sp, 8]",
            "str r3, [sp, 4]",
            "bl sym.imp.free",
            "ldr r2, [sp, 8]",
            "ldr r3, [sp, 4]",
            "sub r2, r2, 1",
            "cmp r2, 1",
            "bhi 0x18888",
            "mov r1, r4",
            "mov r2, 0x30",
            "strb r2, [r1], 1",
            "add r2, r2, 1",
            "cmp r2, 0x3a",
            "bne 0x18874",
            "add r4, r4, 0xa",
            "sub r2, r3, 1",
            "cmp r2, 1",
            "movhi r0, 0",
            "movls r0, 1",
            "cmp r3, 5",
            "cmpne r2, 1",
            "bhi 0x188c0",
            "mov r1, r4",
            "mov r2, 0x41",
            "strb r2, [r1], 1",
            "add r2, r2, 1",
            "cmp r2, 0x5b",
            "bne 0x188ac",
            "add r4, r4, 0x1a",
            "cmp r3, 4",
            "movne r2, r0",
            "orreq r2, r0, 1",
            "cmp r2, 0",
            "beq 0x188f0",
            "mov r1, r4",
            "mov r2, 0x61",
            "strb r2, [r1], 1",
            "add r2, r2, 1",
            "cmp r2, 0x7b",
            "bne 0x188dc",
            "add r4, r4, 0x1a",
            "sub r2, r3, 6",
            "cmp r2, 1",
            "bhi 0x18940",
            "cmp r3, 6",
            "mov r2, r4",
            "strb r7, [r2], 1",
            "bne 0x18938",
            "mov r0, 0xa",
            "add r1, r2, 1",
            "strb r0, [r4, 1]",
            "mov r0, 0xb",
            "strb r0, [r2, 1]",
            "mov r0, 0xc",
            "add r2, r1, 1",
            "strb r0, [r1, 1]",
            "mov r1, 0xd",
            "strb r1, [r2, 1]",
            "add r2, r2, 2",
            "mov r4, r2",
            "strb fp, [r4], 1",
            "sub r2, r3, 8",
            "cmp r2, 1",
            "bhi 0x189b4",
            "mov r7, r3",
            "mov r5, 0",
            "cmp r7, 8",
            "bne 0x18990",
            "mov r0, r5",
            "bl sym.imp.isprint",
            "cmp r0, 0",
            "beq 0x189a4",
            "mov r0, r5",
            "bl sym.imp.isalnum",
            "cmp r0, 0",
            "bne 0x189a4",
            "mov r0, r5",
            "bl sym.imp.isspace",
            "cmp r0, 0",
            "beq 0x189a0",
            "b 0x189a4",
            "mov r0, r5",
            "bl sym.imp.iscntrl",
            "cmp r0, 0",
            "beq 0x189a4",
            "strb r5, [r4], 1",
            "add r5, r5, 1",
            "cmp r5, 0x100",
            "bne 0x18954",
            "b 0x18a34",
            "cmp r3, 0",
            "bne 0x18a34",
            "mov r3, r4",
            "strb sl, [r3], 1",
            "strb r8, [r4, 1]",
            "add r4, r3, 1",
            "b 0x18a24",
            "ldrb sb, [r1, 1]",
            "cmp ip, 0x3d",
            "addeq r2, r2, 5",
            "strbeq sb, [r4], 1",
            "beq 0x18a14",
            "cmp sb, 0x2d",
            "add r2, r0, 1",
            "str r2, [sp, 0xc]",
            "bne 0x18a1c",
            "ldrb r3, [r0, 1]",
            "add r2, r2, 1",
            "b 0x18a08",
            "strb ip, [r4], 1",
            "add ip, ip, 1",
            "cmp ip, r3",
            "bls 0x18a00",
            "add r2, r2, 1",
            "str r2, [sp, 0xc]",
            "b 0x18a24",
            "strb r3, [r4], 1",
            "str r1, [sp, 0xc]",
            "ldr r2, [sp, 0xc]",
            "ldrb r3, [r2]",
            "cmp r3, 0",
            "bne 0x187b4",
            "rsb r0, r6, r4",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00028948": {
        "function_address": "0x00028948",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r1, 0",
            "ldr r4, [r0]",
            "ldrb r3, [r4]",
            "cmp r3, 0x78",
            "addeq r4, r4, 1",
            "moveq ip, 0x10",
            "moveq r2, 1",
            "movne ip, 8",
            "movne r2, 0",
            "b 0x28978",
            "mov r1, r5",
            "mov r3, r4",
            "ldrb r6, [r4], 1",
            "sub r5, r6, 0x30",
            "cmp r5, 9",
            "orrhi r5, r6, 0x20",
            "subhi r5, r5, 0x57",
            "cmp r5, ip",
            "blo 0x289b0",
            "cmp ip, 0x10",
            "bne 0x289d4",
            "cmp r2, 1",
            "subeq r3, r3, 1",
            "beq 0x289dc",
            "b 0x28a14",
            "mla r5, ip, r1, r5",
            "cmp r5, 0xff",
            "bhi 0x289d4",
            "add r2, r2, 1",
            "mov r3, r4",
            "cmp r2, 2",
            "bls 0x28974",
            "mov r1, r5",
            "b 0x28a14",
            "cmp r2, 0",
            "bne 0x28a14",
            "ldr r1, str.abfnrtv",
            "ldrb r4, [r3]",
            "mov ip, r1",
            "ldrb r5, [r1]",
            "mov r2, r1",
            "add r1, r1, 1",
            "cmp r5, r4",
            "addeq r3, r3, 1",
            "beq 0x28a10",
            "ldrb r5, [ip, 1]!",
            "mov r2, r1",
            "cmp r5, 0",
            "bne 0x289e8",
            "ldrb r1, [r2, 9]",
            "str r3, [r0]",
            "uxtb r0, r1",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.imp.isprint": {
        "function_address": "0x0000c0e0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x58c]!"
        ]
    },
    "sym.imp.iscntrl": {
        "function_address": "0x0000bd98",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x7bc]!"
        ]
    },
    "fcn.00018a44": {
        "function_address": "0x00018a44",
        "instructions": [
            "push {r4, lr}",
            "mov r4, 0",
            "sub sp, sp, 0x108",
            "mov r3, r4",
            "ldr r1, [0x00018ab4]",
            "b 0x18a90",
            "ldrb ip, [r2, r1]",
            "cmp ip, r3",
            "beq 0x18a84",
            "add r2, r2, 1",
            "cmp r2, r0",
            "blt 0x18a5c",
            "addeq ip, sp, 0x108",
            "addeq r2, ip, r4",
            "addeq r4, r4, 1",
            "strbeq r3, [r2, -0x104]",
            "add r3, r3, 1",
            "cmp r3, 0x100",
            "beq 0x18a98",
            "mov r2, 0",
            "b 0x18a6c",
            "add r1, sp, 4",
            "mov r2, r4",
            "ldr r0, [0x00018ab4]",
            "bl sym.imp.memcpy",
            "mov r0, r4",
            "add sp, sp, 0x108",
            "pop {r4, pc}"
        ]
    },
    "fcn.00019370": {
        "function_address": "0x00019370",
        "instructions": [
            "push {r4, lr}",
            "mov r0, 0x14",
            "bl fcn.00029eb4",
            "mov r3, 0x3d",
            "mov r4, r0",
            "str r3, [r0, 4]",
            "mov r0, 0xf4",
            "bl fcn.00029eb4",
            "str r0, [r4, 0x10]",
            "mov r0, r4",
            "pop {r4, pc}"
        ]
    },
    "fcn.00019514": {
        "function_address": "0x00019514",
        "instructions": [
            "ldr r3, [r0]",
            "push {r4, lr}",
            "mov r4, r0",
            "tst r3, 0x1000",
            "bne 0x19530",
            "ldr r0, [r0, 0x10]",
            "bl sym.imp.free",
            "ldr r2, [r4]",
            "movw r3, 0x6c02",
            "mov r0, r4",
            "and r3, r2, r3",
            "orr r3, r3, 0x4000",
            "str r3, [r4]",
            "mov r3, 0",
            "str r3, [r4, 0x10]",
            "pop {r4, pc}"
        ]
    },
    "fcn.000193d8": {
        "function_address": "0x000193d8",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r0",
            "mov r0, 0x14",
            "bl fcn.00029eb4",
            "ldr r2, [0x00019400]",
            "str r4, [r0]",
            "ldr r2, [r2]",
            "ldr r2, [r2, -0x30]",
            "str r2, [r0, 4]",
            "pop {r4, pc}"
        ]
    },
    "fcn.00019678": {
        "function_address": "0x00019678",
        "instructions": [
            "ldr r3, [0x000196f8]",
            "push {r4, r5, r6, lr}",
            "mov r6, r0",
            "ldr r4, [r3]",
            "ldr r5, [r4, -0x54]",
            "ldr r0, [r5]",
            "cmp r0, 0",
            "bne 0x196a4",
            "bl fcn.000193d8",
            "str r0, [r5, 4]",
            "str r0, [r5]",
            "ldr r3, [r4, -0x54]",
            "ldr r2, [r4, -0x34]",
            "ldr r1, [r3, 8]",
            "cmp r1, r2",
            "beq 0x196d4",
            "str r2, [r3, 8]",
            "mov r0, 0x300",
            "bl fcn.00019678",
            "mov r5, r0",
            "ldr r0, [r4, -0x34]",
            "bl fcn.00029ed8",
            "str r0, [r5, 8]",
            "ldr r5, [r4, -0x54]",
            "mov r0, 0x2800",
            "ldr r4, [r5, 4]",
            "str r6, [r4]",
            "bl fcn.000193d8",
            "str r0, [r4, 0x10]",
            "str r0, [r5, 4]",
            "mov r0, r4",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.000196fc": {
        "function_address": "0x000196fc",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r3, 0x2100",
            "mov r5, r0",
            "add r6, r2, 0x20",
            "mov r4, r1",
            "mov r0, r2",
            "str r3, [r1]",
            "str r2, [r1, 8]",
            "mov r2, 1",
            "str r6, [r1, 0xc]",
            "mov r1, r5",
            "bl fcn.0002a754"
        ]
    },
    "fcn.000197a4": {
        "function_address": "0x000197a4",
        "instructions": [
            "push {r0, r1, r2, r4, r5, lr}",
            "movw r3, 0x101",
            "ldr r1, [r0]",
            "mov r4, r0",
            "and r3, r1, r3",
            "cmp r3, 0",
            "bne 0x1983c",
            "mov r2, 0",
            "mov r3, 0",
            "strd r2, r3, [r0, 8]",
            "ldr r0, [r0, 0x10]",
            "cmp r0, 0",
            "str r0, [sp, 4]",
            "beq 0x19828",
            "ldrb r3, [r0]",
            "cmp r3, 0",
            "beq 0x19828",
            "add r5, sp, 4",
            "mov r1, r5",
            "bl sym.imp.strtod",
            "ldr r3, [r4]",
            "strd r0, r1, [r4, 8]",
            "tst r3, 0x200",
            "beq 0x19830",
            "mov r0, r5",
            "bl fcn.000192a4",
            "ldr r3, [sp, 4]",
            "ldrb r3, [r3]",
            "cmp r3, 0",
            "ldrne r3, [r4]",
            "bicne r3, r3, 0x200",
            "strne r3, [r4]",
            "b 0x19830",
            "bic r1, r1, 0x200",
            "str r1, [r4]",
            "ldr r3, [r4]",
            "orr r3, r3, 0x100",
            "str r3, [r4]",
            "ldrd r0, r1, [r4, 8]",
            "add sp, sp, 0xc",
            "pop {r4, r5, pc}"
        ]
    },
    "fcn.000192a4": {
        "function_address": "0x000192a4",
        "instructions": [
            "ldr r2, [0x000192fc]",
            "ldr r3, [r0]",
            "push {r4, lr}",
            "ldr r1, [r2]",
            "ldrb r2, [r3]",
            "cmp r2, 0x5c",
            "bne 0x192e0",
            "ldrb r4, [r3, 1]",
            "add ip, r3, 1",
            "cmp r4, 0xa",
            "ldreq r3, [r1, 0xc]",
            "addeq r3, r3, 1",
            "streq r3, [r1, 0xc]",
            "moveq r3, ip",
            "beq 0x192ec",
            "cmp r2, 9",
            "cmpne r2, 0x20",
            "bne 0x192f4",
            "add r3, r3, 1",
            "b 0x192b4",
            "str r3, [r0]",
            "pop {r4, pc}"
        ]
    },
    "fcn.00019848": {
        "function_address": "0x00019848",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r0",
            "bl fcn.000197a4",
            "movw r0, 0x4201",
            "ldr r3, [r4]",
            "eor r3, r3, 0x4000",
            "and r0, r3, r0",
            "pop {r4, pc}"
        ]
    },
    "fcn.00055ad0": {
        "function_address": "0x00055ad0",
        "instructions": [
            "str lr, [sp, -8]!",
            "bl fcn.00055abc",
            "moveq r0, 1",
            "movne r0, 0",
            "ldr pc, [sp], 8"
        ]
    },
    "fcn.00055abc": {
        "function_address": "0x00055abc",
        "instructions": [
            "push {r0, lr}",
            "bl fcn.00055a18",
            "cmp r0, 0",
            "cmnmi r0, 0",
            "pop {r0, pc}"
        ]
    },
    "fcn.00055a18": {
        "function_address": "0x00055a18",
        "instructions": [
            "mov ip, 1",
            "str ip, [sp, -4]!",
            "lsl ip, r1, 1",
            "mvns ip, ip, asr 21",
            "lsl ip, r3, 1",
            "mvnsne ip, ip, asr 21",
            "beq 0x55a70",
            "add sp, sp, 4",
            "orrs ip, r0, r1, lsl 1",
            "orrseq ip, r2, r3, lsl 1",
            "teqne r1, r3",
            "teqeq r0, r2",
            "moveq r0, 0",
            "bxeq lr",
            "cmn r0, 0",
            "teq r1, r3",
            "cmppl r1, r3",
            "cmpeq r0, r2",
            "asrhs r0, r3, 0x1f",
            "mvnlo r0, r3, asr 31",
            "orr r0, r0, 1",
            "bx lr",
            "lsl ip, r1, 1",
            "mvns ip, ip, asr 21",
            "bne 0x55a84",
            "orrs ip, r0, r1, lsl 12",
            "bne 0x55a98",
            "lsl ip, r3, 1",
            "mvns ip, ip, asr 21",
            "bne 0x55a34",
            "orrs ip, r2, r3, lsl 12",
            "beq 0x55a34",
            "pop {r0}",
            "bx lr"
        ]
    },
    "fcn.000550a8": {
        "function_address": "0x000550a8",
        "instructions": [
            "cmp r1, 0",
            "beq 0x5509c",
            "push {r0, r1, lr}",
            "bl fcn.00055000",
            "pop {r1, r2, lr}",
            "mul r3, r2, r0",
            "sub r1, r1, r3",
            "bx lr"
        ]
    },
    "fcn.000198c0": {
        "function_address": "0x000198c0",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r4, r0",
            "mov r0, r1",
            "mov r5, r1",
            "bl fcn.0001927c",
            "ldr r1, [r4, 4]",
            "bl fcn.000550a8",
            "ldr r3, [r4, 0x10]",
            "ldr r4, [r3, r1, lsl 2]",
            "b 0x19900",
            "add r0, r4, 0x1c",
            "mov r1, r5",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x19908",
            "ldr r4, [r4, 0x18]",
            "cmp r4, 0",
            "bne 0x198e8",
            "mov r0, r4",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.0001927c": {
        "function_address": "0x0001927c",
        "instructions": [
            "mov r3, 0",
            "b 0x19290",
            "lsl r1, r3, 6",
            "rsb r3, r3, r1",
            "add r3, r3, r2",
            "ldrb r2, [r0], 1",
            "cmp r2, 0",
            "bne 0x19284",
            "mov r0, r3",
            "bx lr"
        ]
    },
    "fcn.00019af4": {
        "function_address": "0x00019af4",
        "instructions": [
            "ldr r2, [0x00019b14]",
            "push {r3, lr}",
            "mov r3, r0",
            "ldr r0, str._s:_i:__s",
            "ldr r2, [r2]",
            "ldr r1, [r2, -0x34]",
            "ldr r2, [r2, -0x30]",
            "bl fcn.000271d8"
        ]
    },
    "fcn.00019554": {
        "function_address": "0x00019554",
        "instructions": [
            "ldr r3, [0x00019600]",
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r5, r0",
            "ldr r4, [r3]",
            "ldr r6, [r4, -0x28]",
            "sub r7, r4, 0x78",
            "cmp r0, r6",
            "blt 0x195bc",
            "add r1, r0, 0x10",
            "mov r8, 0x18",
            "str r1, [r4, -0x28]",
            "mul r1, r8, r1",
            "ldr r0, [r4, -0x24]",
            "bl fcn.00029e84",
            "ldr r3, [r4, -0x2c]",
            "cmp r5, r3",
            "movlt r8, 0x18",
            "movlt r6, r5",
            "mullt r8, r8, r5",
            "blt 0x195ec",
            "b 0x195f8",
            "ldr r0, [r7, 0x54]",
            "add r6, r6, 1",
            "add r0, r0, r8",
            "add r8, r8, 0x18",
            "bl fcn.00019514",
            "ldr r3, [r7, 0x4c]",
            "cmp r6, r3",
            "blt 0x195d8",
            "str r5, [r4, -0x2c]",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.00019c24": {
        "function_address": "0x00019c24",
        "instructions": [
            "ldr r3, [r0]",
            "push {r4, r5, r6, r7, r8, sl, lr}",
            "movw r8, 0x101",
            "sub sp, sp, 0x14",
            "mov r6, r0",
            "and r8, r3, r8",
            "cmp r8, 1",
            "bne 0x19c8c",
            "ldr r3, [0x00019ca4]",
            "ldr r7, [r3]",
            "ldr sl, [r7, -0x18]",
            "ldr r0, [r7, 0x14]",
            "bl fcn.00019c24",
            "ldrd r4, r5, [r6, 8]",
            "mov r2, r0",
            "mov r1, 0xf0",
            "mov r0, sl",
            "str r8, [sp, 8]",
            "strd r4, r5, [sp]",
            "bl fcn.00019b1c",
            "ldr r0, [r7, -0x18]",
            "bl fcn.00029ed8",
            "ldr r3, [r6]",
            "str r0, [r6, 0x10]",
            "orr r3, r3, 0x100",
            "str r3, [r6]",
            "ldr r0, [r6, 0x10]",
            "ldr r3, [0x00019ca8]",
            "cmp r0, 0",
            "moveq r0, r3",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "fcn.00019b1c": {
        "function_address": "0x00019b1c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r6, r0",
            "ldr r3, [sp, 0x28]",
            "mov r5, r1",
            "mov r4, r2",
            "ldrd r8, sb, [sp, 0x20]",
            "cmp r3, 0",
            "beq 0x19b6c",
            "mov r1, sb",
            "mov r0, r8",
            "bl fcn.00055b34",
            "mov r7, r0",
            "bl fcn.000554bc",
            "mov r2, r0",
            "mov r3, r1",
            "mov r0, r8",
            "mov r1, sb",
            "bl fcn.00055ad0",
            "cmp r0, 0",
            "bne 0x19b74",
            "mov r3, r4",
            "b 0x19b88",
            "mov r0, r6",
            "mov r1, r5",
            "ldr r2, aav.0x0005c33c",
            "mov r3, r7",
            "b 0x19bd8",
            "ldrb r7, [r3]",
            "mov r2, r3",
            "cmp r7, 0",
            "beq 0x19ba8",
            "ldrb r2, [r2, 1]",
            "add r3, r3, 1",
            "cmp r2, 0",
            "bne 0x19b88",
            "ldr r0, str.diouxX",
            "mov r1, r7",
            "bl sym.imp.strchr",
            "cmp r0, 0",
            "beq 0x19be0",
            "mov r1, sb",
            "mov r0, r8",
            "bl fcn.00055b34",
            "mov r1, r5",
            "mov r3, r0",
            "mov r2, r4",
            "mov r0, r6",
            "pop {r4, r5, r6, r7, r8, sb, sl, lr}",
            "b sym.imp.snprintf",
            "ldr r0, str.eEfgG",
            "mov r1, r7",
            "bl sym.imp.strchr",
            "cmp r0, 0",
            "beq 0x19c0c",
            "strd r8, sb, [sp, 0x20]",
            "mov r0, r6",
            "mov r1, r5",
            "mov r2, r4",
            "pop {r4, r5, r6, r7, r8, sb, sl, lr}",
            "b sym.imp.snprintf",
            "ldr r0, str.Invalid_format_specifier",
            "bl fcn.00019af4"
        ]
    },
    "fcn.000194dc": {
        "function_address": "0x000194dc",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r0",
            "ldr r0, [r0]",
            "cmp r0, 0",
            "beq 0x194fc",
            "ldr r3, [r2]",
            "cmp r1, r3",
            "poplt {r4, pc}",
            "add r3, r1, 0x50",
            "add r1, r3, r1, asr 1",
            "str r1, [r2]",
            "bl fcn.00029e84"
        ]
    },
    "fcn.00019e64": {
        "function_address": "0x00019e64",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r4, r0",
            "mov r5, r1",
            "bl fcn.00019514",
            "mov r0, r4",
            "str r5, [r4, 0x10]",
            "bl fcn.00019cac",
            "mov r0, r4",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.00019cac": {
        "function_address": "0x00019cac",
        "instructions": [
            "ldr r3, [r0]",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r5, r0",
            "sub sp, sp, 0x1c",
            "tst r3, 0x400",
            "beq 0x19e54",
            "ldr r3, [0x00019e5c]",
            "ldr r4, [r3]",
            "ldr r3, [r4, 0x50]",
            "cmp r0, r3",
            "bne 0x19db0",
            "bl fcn.000197a4",
            "bl fcn.00055b34",
            "str r0, [sp, 4]",
            "mov r6, 0",
            "bl fcn.00019554",
            "ldr r0, [r4, 0x20]",
            "add r8, sp, 0x18",
            "bl fcn.00019c24",
            "mov r7, r6",
            "str r0, [sp, 8]",
            "mov r5, r6",
            "bl sym.imp.strlen",
            "str r6, [r8, -4]!",
            "mov sl, r0",
            "b 0x19d80",
            "ldr r0, [r4, -0x24]",
            "add r0, r0, r6",
            "bl fcn.00019c24",
            "str r0, [sp, 0xc]",
            "bl sym.imp.strlen",
            "mov sb, r0",
            "ldr r0, [sp, 0x14]",
            "cmp r0, 0",
            "beq 0x19d4c",
            "add r0, r0, r5",
            "add r5, r5, sl",
            "ldr r1, [sp, 8]",
            "mov r2, sl",
            "bl sym.imp.memcpy",
            "add fp, r5, sb",
            "mov r0, r8",
            "add r1, fp, sl",
            "add r2, sp, 0x10",
            "bl fcn.000194dc",
            "ldr r0, [sp, 0x14]",
            "add r7, r7, 1",
            "add r6, r6, 0x18",
            "ldr r1, [sp, 0xc]",
            "mov r2, sb",
            "add r0, r0, r5",
            "mov r5, fp",
            "bl sym.imp.memcpy",
            "ldr r3, [sp, 4]",
            "cmp r7, r3",
            "blt 0x19d14",
            "ldr r3, [sp, 0x14]",
            "cmp r3, 0",
            "movne r2, 0",
            "strbne r2, [r3, r5]",
            "ldr r0, [r4, 0x5c]",
            "ldr r1, [sp, 0x14]",
            "bl fcn.00019e64",
            "mov r3, 1",
            "b 0x19dc0",
            "ldr r2, [r4, 0x5c]",
            "cmp r0, r2",
            "bne 0x19dc8",
            "mov r3, 0",
            "str r3, [r4, -4]",
            "b 0x19e54",
            "ldr r2, [r4, 0x1c]",
            "cmp r0, r2",
            "bne 0x19de0",
            "bl fcn.00019c24",
            "add r1, r4, 0x130",
            "b 0x19df4",
            "ldr r2, [r4, 0x28]",
            "cmp r0, r2",
            "bne 0x19dfc",
            "bl fcn.00019c24",
            "add r1, r4, 0x184",
            "bl fcn.00019744",
            "b 0x19e54",
            "ldr r2, [r4, 0x54]",
            "cmp r0, r2",
            "bne 0x19e14",
            "bl fcn.00019868",
            "str r0, [r4, -0x14]",
            "b 0x19e54",
            "mov r0, r3",
            "bl fcn.000197a4",
            "bl fcn.00055b34",
            "ldr r3, [r4, -0x24]",
            "ldr r6, [r4, 0x50]",
            "rsb r5, r3, r5",
            "ldr r3, [0x00019e60]",
            "asr r5, r5, 3",
            "mul r5, r3, r5",
            "cmp r0, r5",
            "addle r0, r5, 1",
            "bl fcn.000554bc",
            "mov r2, r0",
            "mov r3, r1",
            "mov r0, r6",
            "bl fcn.00019fe4",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00055b34": {
        "function_address": "0x00055b34",
        "instructions": [
            "lsl r2, r1, 1",
            "adds r2, r2, 0x200000",
            "bhs 0x55b74",
            "bpl 0x55b6c",
            "mvn r3, 0x3e0",
            "subs r2, r3, r2, asr 21",
            "bls 0x55b7c",
            "lsl r3, r1, 0xb",
            "orr r3, r3, 0x80000000",
            "orr r3, r3, r0, lsr 21",
            "tst r1, 0x80000000",
            "lsr r0, r3, r2",
            "rsbne r0, r0, 0",
            "bx lr",
            "mov r0, 0",
            "bx lr",
            "orrs r0, r0, r1, lsl 12",
            "bne 0x55b88",
            "ands r0, r1, 0x80000000",
            "mvneq r0, 0x80000000",
            "bx lr",
            "mov r0, 0",
            "bx lr"
        ]
    },
    "fcn.00019744": {
        "function_address": "0x00019744",
        "instructions": [
            "ldr r3, [r1]",
            "push {r4, r5, r6, lr}",
            "mov r5, r0",
            "mov r4, r1",
            "add r6, r1, 0x14",
            "and r3, r3, 0xff00",
            "cmp r3, 0x2100",
            "bne 0x19774",
            "mov r0, r6",
            "bl sym.imp.regfree",
            "add r0, r4, 0x34",
            "bl sym.imp.regfree",
            "mov r0, r5",
            "bl sym.imp.strlen",
            "cmp r0, 1",
            "ldrbls r3, [r5]",
            "strls r3, [r4]",
            "bls 0x1979c",
            "mov r0, r5",
            "mov r1, r4",
            "mov r2, r6",
            "bl fcn.000196fc",
            "mov r0, r4",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.00019868": {
        "function_address": "0x00019868",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r5, r0",
            "bl fcn.00019848",
            "cmp r0, 0",
            "beq 0x198a4",
            "ldrd r0, r1, [r5, 8]",
            "mov r2, 0",
            "mov r3, 0",
            "mov r4, 1",
            "bl fcn.00055ad0",
            "cmp r0, 0",
            "moveq r4, 0",
            "eor r4, r4, 1",
            "uxtb r0, r4",
            "pop {r3, r4, r5, pc}",
            "ldr r0, [r5, 0x10]",
            "cmp r0, 0",
            "popeq {r3, r4, r5, pc}",
            "ldrb r0, [r0]",
            "subs r0, r0, 0",
            "movne r0, 1",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.000554bc": {
        "function_address": "0x000554bc",
        "instructions": [
            "teq r1, 0",
            "moveq r1, r0",
            "moveq r0, 0",
            "clz r3, r1",
            "addeq r3, r3, 0x20",
            "sub r3, r3, 0xb",
            "subs r2, r3, 0x20",
            "bge 0x55374",
            "adds r2, r2, 0xc",
            "ble 0x55370",
            "add ip, r2, 0x14",
            "rsb r2, r2, 0xc",
            "lsl r0, r1, ip",
            "lsr r1, r1, r2",
            "b 0x55384",
            "add r2, r2, 0x14",
            "rsble ip, r2, 0x20",
            "lsl r1, r1, r2",
            "orrle r1, r1, r0, lsr ip",
            "lslle r0, r0, r2",
            "subs r4, r4, r3",
            "addge r1, r1, r4, lsl 20",
            "orrge r1, r1, r5",
            "popge {r4, r5, pc}",
            "mvn r4, r4",
            "subs r4, r4, 0x1f",
            "bge 0x553d8",
            "adds r4, r4, 0xc",
            "bgt 0x553c0",
            "add r4, r4, 0x14",
            "rsb r2, r4, 0x20",
            "lsr r0, r0, r4",
            "orr r0, r0, r1, lsl r2",
            "orr r1, r5, r1, lsr r4",
            "pop {r4, r5, pc}",
            "rsb r4, r4, 0xc",
            "rsb r2, r4, 0x20",
            "lsr r0, r0, r2",
            "orr r0, r0, r1, lsl r4",
            "mov r1, r5",
            "pop {r4, r5, pc}",
            "lsr r0, r1, r4",
            "mov r1, r5",
            "pop {r4, r5, pc}",
            "teq r0, 0",
            "moveq r1, 0",
            "bxeq lr",
            "push {r4, r5, lr}",
            "mov r4, 0x400",
            "add r4, r4, 0x32",
            "ands r5, r0, 0x80000000",
            "rsbmi r0, r0, 0",
            "mov r1, 0",
            "b 0x55334"
        ]
    },
    "fcn.00019fe4": {
        "function_address": "0x00019fe4",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r6, r0",
            "mov r4, r2",
            "mov r5, r3",
            "bl fcn.00019514",
            "ldr r3, [r6]",
            "mov r0, r6",
            "strd r4, r5, [r6, 8]",
            "orr r3, r3, 1",
            "str r3, [r6]",
            "bl fcn.00019cac",
            "mov r0, r6",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.imp.regfree": {
        "function_address": "0x0000be64",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x734]!"
        ]
    },
    "fcn.00019e88": {
        "function_address": "0x00019e88",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r0",
            "subs r0, r1, 0",
            "beq 0x19ea8",
            "ldrb r1, [r0]",
            "cmp r1, 0",
            "beq 0x19eac",
            "bl fcn.00029ed8",
            "mov r1, r0",
            "mov r0, r4",
            "pop {r4, lr}",
            "b fcn.00019e64"
        ]
    },
    "fcn.00019ab0": {
        "function_address": "0x00019ab0",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r4, r0",
            "ldr r5, [r0]",
            "ldrb r3, [r5], 1",
            "cmp r3, 0x5c",
            "str r5, [r0]",
            "bne 0x19aec",
            "bl fcn.00028948",
            "cmp r0, 0x5c",
            "mov r3, r0",
            "bne 0x19aec",
            "ldr r2, [r4]",
            "cmp r2, r5",
            "ldrbeq r3, [r2], 1",
            "streq r2, [r4]",
            "mov r0, r3",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.00019910": {
        "function_address": "0x00019910",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r4, r0",
            "mov r6, r1",
            "bl fcn.000198c0",
            "subs r5, r0, 0",
            "bne 0x19a1c",
            "ldm r4, {r0, r1}",
            "add r0, r0, 1",
            "str r0, [r4]",
            "bl fcn.00055000",
            "cmp r0, 0xa",
            "bls 0x199c8",
            "ldr r3, [r4, 8]",
            "cmp r3, 5",
            "beq 0x199c8",
            "ldr r1, aav.0x0005a768",
            "lsl r2, r3, 1",
            "add r3, r3, 1",
            "str r3, [r4, 8]",
            "ldrh sl, [r1, r2]",
            "lsl r0, sl, 2",
            "bl fcn.00029eb4",
            "mov r8, r0",
            "b 0x199ac",
            "ldr r3, [r4, 0x10]",
            "ldr r7, [r3, r5, lsl 2]",
            "b 0x199a0",
            "add r0, r7, 0x1c",
            "ldr sb, [r7, 0x18]",
            "bl fcn.0001927c",
            "mov r1, sl",
            "bl fcn.000550a8",
            "ldr r3, [r8, r1, lsl 2]",
            "str r3, [r7, 0x18]",
            "str r7, [r8, r1, lsl 2]",
            "mov r7, sb",
            "cmp r7, 0",
            "bne 0x1997c",
            "add r5, r5, 1",
            "ldr r3, [r4, 4]",
            "cmp r5, r3",
            "blo 0x19970",
            "ldr r0, [r4, 0x10]",
            "bl sym.imp.free",
            "str sl, [r4, 4]",
            "str r8, [r4, 0x10]",
            "mov r0, r6",
            "bl sym.imp.strlen",
            "add r7, r0, 1",
            "add r0, r0, 0x21",
            "bl fcn.00029eb4",
            "mov r2, r7",
            "mov r5, r0",
            "mov r1, r6",
            "add r0, r0, 0x1c",
            "bl sym.imp.memcpy",
            "mov r0, r6",
            "bl fcn.0001927c",
            "ldr r1, [r4, 4]",
            "bl fcn.000550a8",
            "ldr r3, [r4, 0x10]",
            "ldr r2, [r3, r1, lsl 2]",
            "str r2, [r5, 0x18]",
            "str r5, [r3, r1, lsl 2]",
            "ldr r3, [r4, 0xc]",
            "add r7, r3, r7",
            "str r7, [r4, 0xc]",
            "mov r0, r5",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "fcn.00019eb8": {
        "function_address": "0x00019eb8",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r0",
            "bl fcn.00019e88",
            "mov r0, r4",
            "ldr r3, [r4]",
            "orr r3, r3, 0x200",
            "str r3, [r4]",
            "pop {r4, pc}"
        ]
    },
    "fcn.0001939c": {
        "function_address": "0x0001939c",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r0",
            "b 0x193ac",
            "ldr r4, [r4, 0x14]",
            "ldr r3, [r4]",
            "tst r3, 0x2000",
            "bne 0x193a8",
            "tst r3, 2",
            "bne 0x193d0",
            "orr r3, r3, 2",
            "str r3, [r4]",
            "bl fcn.00019370",
            "str r0, [r4, 0x14]",
            "ldr r0, [r4, 0x14]",
            "pop {r4, pc}"
        ]
    },
    "fcn.0001a37c": {
        "function_address": "0x0001a37c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x24",
            "mov r7, r1",
            "mov r4, r2",
            "mov r5, r0",
            "bl sym.imp.strlen",
            "lsl r0, r0, 1",
            "add r0, r0, 3",
            "bl fcn.00029eb4",
            "mov r1, r5",
            "str r0, [sp, 0x18]",
            "str r0, [r4]",
            "bl sym.imp.strcpy",
            "ldrb r3, [r7]",
            "strb r3, [sp, 0x1d]",
            "strb r3, [sp, 0x1c]",
            "mov r3, 0",
            "strb r3, [sp, 0x1f]",
            "strb r3, [sp, 0x1e]",
            "ldr r3, [0x0001a60c]",
            "ldr r6, [r3]",
            "ldr r0, [r6, 0x28]",
            "bl fcn.00019c24",
            "ldrb r3, [r0]",
            "cmp r3, 0",
            "addeq r3, r3, 0xa",
            "strbeq r3, [sp, 0x1e]",
            "ldr r3, [r7]",
            "and r3, r3, 0xff00",
            "cmp r3, 0x2100",
            "bne 0x1a4d4",
            "ldrb r4, [r5]",
            "cmp r4, 0",
            "beq 0x1a600",
            "ldr r3, [0x0001a60c]",
            "mov r4, 1",
            "add sb, sp, 0x1e",
            "mov sl, 0",
            "mov r6, r4",
            "ldr fp, [r3]",
            "mov r1, sb",
            "mov r0, r5",
            "bl sym.imp.strcspn",
            "ldr r3, [fp, -0x14]",
            "mov r4, r0",
            "mov r8, r0",
            "mov r1, r5",
            "mov r2, 1",
            "cmp r3, 0",
            "add r3, sp, 8",
            "ldrne r0, [r7, 0xc]",
            "ldreq r0, [r7, 8]",
            "str sl, [sp]",
            "bl sym.imp.regexec",
            "cmp r0, 0",
            "bne 0x1a488",
            "ldr r3, [sp, 8]",
            "cmp r3, r4",
            "bgt 0x1a488",
            "ldr r2, [sp, 0xc]",
            "add r6, r6, 1",
            "cmp r2, 0",
            "addeq r3, r3, 1",
            "addeq r2, r2, 1",
            "streq r2, [sp, 0xc]",
            "mov r8, r3",
            "b 0x1a49c",
            "str r4, [sp, 0xc]",
            "ldrb r3, [r5, r4]",
            "cmp r3, 0",
            "addne r4, r4, 1",
            "strne r4, [sp, 0xc]",
            "mov r1, r5",
            "mov r2, r8",
            "ldr r0, [sp, 0x18]",
            "bl sym.imp.memcpy",
            "ldr r3, [sp, 0x18]",
            "add r0, sp, 0x18",
            "strb sl, [r3, r8]",
            "bl fcn.00019300",
            "ldr r3, [sp, 0xc]",
            "ldrb r3, [r5, r3]!",
            "cmp r3, 0",
            "bne 0x1a41c",
            "mov r4, r6",
            "b 0x1a600",
            "ldrb r4, [sp, 0x1c]",
            "cmp r4, 0",
            "moveq r0, r4",
            "beq 0x1a504",
            "b 0x1a514",
            "ldr r1, [sp, 0x18]",
            "add r4, r4, 1",
            "mov r3, r1",
            "strb r2, [r3], 1",
            "add r3, r3, 1",
            "strb r0, [r1, 1]",
            "str r3, [sp, 0x18]",
            "ldrb r2, [r5, r4]",
            "cmp r2, 0",
            "bne 0x1a4e8",
            "b 0x1a600",
            "cmp r4, 0x20",
            "moveq r4, 0",
            "moveq r8, r4",
            "beq 0x1a5f4",
            "ldr r3, [r6, -0x14]",
            "cmp r3, 0",
            "beq 0x1a55c",
            "bl sym.imp.__ctype_toupper_loc",
            "ldr r3, [r0]",
            "lsl r4, r4, 1",
            "ldrsh r3, [r3, r4]",
            "strb r3, [sp, 0x1c]",
            "bl sym.imp.__ctype_tolower_loc",
            "ldrb r3, [sp, 0x1d]",
            "ldr r2, [r0]",
            "lsl r3, r3, 1",
            "ldrsh r3, [r2, r3]",
            "strb r3, [sp, 0x1d]",
            "ldr r3, [sp, 0x18]",
            "add r6, sp, 0x1c",
            "mov r5, 0",
            "ldrb r4, [r3]",
            "subs r4, r4, 0",
            "movne r4, 1",
            "b 0x1a584",
            "add r4, r4, 1",
            "strb r5, [r0], 1",
            "str r0, [sp, 0x18]",
            "ldr r0, [sp, 0x18]",
            "mov r1, r6",
            "bl sym.imp.strpbrk",
            "cmp r0, 0",
            "bne 0x1a578",
            "b 0x1a600",
            "mov r0, r5",
            "bl fcn.000295c4",
            "ldrb r3, [r0]",
            "cmp r3, 0",
            "beq 0x1a600",
            "add r4, r4, 1",
            "mov r6, r0",
            "b 0x1a5c8",
            "ldr r3, [sp, 0x18]",
            "strb r7, [r3], 1",
            "str r3, [sp, 0x18]",
            "mov r5, r6",
            "ldrb r7, [r6], 1",
            "cmp r7, 0",
            "beq 0x1a5e8",
            "mov r0, r7",
            "bl sym.imp.isspace",
            "cmp r0, 0",
            "beq 0x1a5bc",
            "ldr r3, [sp, 0x18]",
            "strb r8, [r3], 1",
            "str r3, [sp, 0x18]",
            "ldrb r3, [r5]",
            "cmp r3, 0",
            "bne 0x1a59c",
            "mov r0, r4",
            "add sp, sp, 0x24",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00019300": {
        "function_address": "0x00019300",
        "instructions": [
            "mov r3, r0",
            "ldr r0, [r0]",
            "ldr r2, [r3]",
            "ldrb r1, [r2], 1",
            "cmp r1, 0",
            "str r2, [r3]",
            "bne 0x19308",
            "bx lr"
        ]
    },
    "sym.imp.__ctype_toupper_loc": {
        "function_address": "0x0000ba2c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xa04]!"
        ]
    },
    "sym.imp.__ctype_tolower_loc": {
        "function_address": "0x0000ba50",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x9ec]!"
        ]
    },
    "sym.imp.strpbrk": {
        "function_address": "0x0000c2d8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x43c]!"
        ]
    },
    "fcn.0001a6d0": {
        "function_address": "0x0001a6d0",
        "instructions": [
            "ldr r2, [0x0001ab30]",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov fp, r0",
            "sub sp, sp, 0x1c",
            "ldr r3, [r2]",
            "ldr r1, [r3, 0x10]",
            "cmp r1, 0",
            "movne r2, 0",
            "strne r2, [r3, 0x10]",
            "bne 0x1aaf4",
            "ldr r0, [r3, 0x70]",
            "cmp r0, 0",
            "beq 0x1a71c",
            "ldr r2, [r3, 0x64]",
            "str r1, [r3, 0x70]",
            "str r2, [r3, 4]",
            "ldr r2, [r3, 0x68]",
            "str r2, [r3]",
            "b 0x1aaf4",
            "ldr r3, [r3, -0x1c]",
            "add r8, sp, 0x18",
            "str fp, [sp, 8]",
            "str r3, [r8, -4]!",
            "and r3, fp, 4",
            "str r3, [sp, 0xc]",
            "ldr r3, [0x0001ab34]",
            "orr r3, fp, r3",
            "str r3, [sp, 4]",
            "mov r0, r8",
            "bl fcn.000192a4",
            "ldr r3, [0x0001ab30]",
            "ldr r2, [sp, 0x14]",
            "ldr r4, [r3]",
            "ldr r3, [r4, 0xc]",
            "str r3, [r4, -0x30]",
            "ldrb r2, [r2]",
            "cmp r2, 0x23",
            "beq 0x1a774",
            "b 0x1a788",
            "add r1, r1, 1",
            "str r1, [sp, 0x14]",
            "ldr r1, [sp, 0x14]",
            "ldrb r2, [r1]",
            "cmp r2, 0",
            "cmpne r2, 0xa",
            "bne 0x1a76c",
            "ldr r7, [sp, 0x14]",
            "ldrb r2, [r7]",
            "cmp r2, 0xa",
            "addeq r3, r3, 1",
            "streq r3, [r4, 0xc]",
            "ldrb sl, [r7]",
            "cmp sl, 0",
            "beq 0x1aa6c",
            "cmp sl, 0x22",
            "addeq r7, r7, 1",
            "streq r7, [sp, 0x14]",
            "streq r7, [r4, 8]",
            "beq 0x1a7d8",
            "b 0x1a800",
            "cmp r3, 0",
            "cmpne r3, 0xa",
            "beq 0x1a830",
            "mov r0, r8",
            "bl fcn.00019ab0",
            "strb r0, [r7], 1",
            "ldr r2, [sp, 0x14]",
            "ldrb r3, [r2]",
            "cmp r3, 0x22",
            "bne 0x1a7c0",
            "add r2, r2, 1",
            "mov r3, 0",
            "str r2, [sp, 0x14]",
            "mov r5, 0x10000000",
            "strb r3, [r7]",
            "b 0x1aa80",
            "ldr r3, [sp, 0xc]",
            "cmp r3, 0",
            "beq 0x1a8b0",
            "cmp sl, 0x2f",
            "addeq r7, r7, 1",
            "streq r7, [sp, 0x14]",
            "streq r7, [r4, 8]",
            "beq 0x1a880",
            "b 0x1a8b0",
            "cmp r2, 0",
            "cmpne r2, 0xa",
            "bne 0x1a838",
            "ldr r0, str.Unexpected_end_of_string",
            "b 0x1ab24",
            "add r5, r5, 1",
            "strb r2, [r3], 1",
            "str r5, [sp, 0x14]",
            "mov r7, r3",
            "ldrb r2, [r3, -1]",
            "cmp r2, 0x5c",
            "bne 0x1a884",
            "mov r0, r8",
            "bl fcn.00028948",
            "strb r0, [r6]",
            "ldrb r3, [r5]",
            "cmp r3, 0x5c",
            "strbeq r3, [r7], 1",
            "ldr r3, [sp, 0x14]",
            "cmp r3, r5",
            "ldrbeq r3, [r5], 1",
            "strbeq r3, [r7], 1",
            "streq r5, [sp, 0x14]",
            "mov r3, r7",
            "ldr r5, [sp, 0x14]",
            "mov r6, r3",
            "ldrb r2, [r5]",
            "cmp r2, 0x2f",
            "bne 0x1a824",
            "add r5, r5, 1",
            "mov r2, 0",
            "str r5, [sp, 0x14]",
            "mov r5, 4",
            "strb r2, [r3]",
            "b 0x1aa80",
            "sub r3, sl, 0x30",
            "uxtb r3, r3",
            "cmp sl, 0x2e",
            "cmpne r3, 9",
            "ldrhi fp, aav.0x0005a798",
            "movhi r5, 1",
            "ldrhi r6, aav.0x0005aa5c",
            "bhi 0x1a994",
            "mov r0, r7",
            "mov r1, r8",
            "bl sym.imp.strtod",
            "mov r3, 0x128",
            "strd r0, r1, [r4, r3]",
            "ldr r3, [sp, 0x14]",
            "ldrb r3, [r3]",
            "cmp r3, 0x2e",
            "bne 0x1aa74",
            "b 0x1a9d8",
            "cmp sb, 0xff",
            "add r6, r6, 1",
            "lsleq r5, r5, 1",
            "beq 0x1a994",
            "ldr r3, [sp, 4]",
            "tst r5, r3",
            "beq 0x1a98c",
            "ldrb r3, [r6]",
            "cmp r3, sl",
            "bne 0x1a98c",
            "mov r0, r7",
            "mov r1, r6",
            "mov r2, sb",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "bne 0x1a98c",
            "ldr r3, [0x0001ab44]",
            "and r3, r5, r3",
            "cmp r3, 0",
            "beq 0x1a978",
            "ldrb r3, [r7, sb]",
            "mov r0, r3",
            "str r3, [sp]",
            "bl sym.imp.isalnum",
            "ldr r3, [sp]",
            "cmp r3, 0x5f",
            "movne r3, 0",
            "moveq r3, 1",
            "cmp r0, 0",
            "orrne r3, r3, 1",
            "cmp r3, 0",
            "bne 0x1a98c",
            "ldr r3, [fp]",
            "add r7, r7, sb",
            "str r3, [r4]",
            "str r7, [sp, 0x14]",
            "b 0x1a9a0",
            "add fp, fp, 4",
            "add r6, r6, sb",
            "ldrb sb, [r6]",
            "cmp sb, 0",
            "bne 0x1a8f8",
            "ldrb r3, [r6]",
            "cmp r3, 0",
            "bne 0x1aa80",
            "ldr r5, [sp, 0x14]",
            "ldrb r6, [r5]",
            "mov r0, r6",
            "cmp r6, 0x5f",
            "movne r6, 0",
            "moveq r6, 1",
            "bl sym.imp.isalnum",
            "cmp r0, 0",
            "orrne r6, r6, 1",
            "cmp r6, 0",
            "bne 0x1a9e0",
            "ldr r0, str.Unexpected_token",
            "b 0x1ab24",
            "sub r5, r5, 1",
            "str r5, [sp, 0x14]",
            "str r5, [r4, 8]",
            "b 0x1a9f4",
            "strb r6, [r5]",
            "ldr r5, [sp, 0x14]",
            "add r3, r5, 1",
            "str r3, [sp, 0x14]",
            "ldrb r6, [r5, 1]",
            "mov r0, r6",
            "bl sym.imp.isalnum",
            "cmp r6, 0x5f",
            "movne r3, 0",
            "moveq r3, 1",
            "cmp r0, 0",
            "orrne r3, r3, 1",
            "cmp r3, 0",
            "bne 0x1a9f0",
            "strb r3, [r5]",
            "ldr r3, [sp, 8]",
            "tst r3, 0x2000000",
            "bne 0x1aa40",
            "mov r0, r8",
            "bl fcn.000192a4",
            "ldr r3, [sp, 0x14]",
            "ldrb r2, [r3]",
            "cmp r2, 0x28",
            "moveq r5, 0x8000000",
            "beq 0x1aa80",
            "cmp r2, 0x5b",
            "addeq r3, r3, 1",
            "moveq r5, 0x4000000",
            "streq r3, [sp, 0x14]",
            "beq 0x1aa80",
            "b 0x1aa7c",
            "mov r5, 0x1000000",
            "b 0x1aa80",
            "mov r5, 0x20000000",
            "b 0x1aa80",
            "mov r5, 0x2000000",
            "ldr r3, [sp, 0x14]",
            "ldr r2, [r4, 0x6c]",
            "str r3, [r4, -0x1c]",
            "movw r3, 0xf3c0",
            "and r3, r2, r3",
            "cmp r3, 0",
            "beq 0x1aaa4",
            "tst r5, 0x8000",
            "bne 0x1a740",
            "ldr r3, [0x0001ab4c]",
            "ldr fp, [sp, 8]",
            "and r3, r2, r3",
            "cmp r3, 0",
            "beq 0x1aaf0",
            "ldr r3, [0x0001ab50]",
            "and r3, r5, r3",
            "cmp r3, 0",
            "beq 0x1aaf0",
            "tst fp, 0x3c0",
            "beq 0x1aaf0",
            "mov r3, 1",
            "str r5, [r4, 0x64]",
            "str r3, [r4, 0x70]",
            "mov r5, 0x3c0",
            "ldr r3, [r4]",
            "str r3, [r4, 0x68]",
            "ldr r3, [0x0001ab54]",
            "str r3, [r4]",
            "str r5, [r4, 4]",
            "ldr r3, [0x0001ab30]",
            "ldr r3, [r3]",
            "ldr r0, [r3, 4]",
            "tst fp, r0",
            "str r0, [r3, 0x6c]",
            "bne 0x1ab28",
            "ldr r3, [0x0001ab58]",
            "ldr r2, str.Unexpected_end_of_string",
            "and r3, r0, r3",
            "ldr r0, str.Unexpected_token",
            "cmp r3, 0",
            "movne r0, r2",
            "bl fcn.00019af4",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0001ab5c": {
        "function_address": "0x0001ab5c",
        "instructions": [
            "ldr r1, [0x0001ae70]",
            "mov r3, 0x7f000000",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r6, 0",
            "ldr r5, [0x0001ae74]",
            "sub sp, sp, 0x24",
            "orr r1, r0, r1",
            "mov sl, r0",
            "ldr r8, [0x0001ae78]",
            "str r3, [sp, 0xc]",
            "orr r5, r0, r5",
            "str r6, [sp, 0x18]",
            "add r3, sp, 0xc",
            "ldr r7, [0x0001ae7c]",
            "orr r8, r0, r8",
            "str r1, [sp, 4]",
            "b 0x1ae48",
            "cmp r6, 0",
            "beq 0x1abdc",
            "ldr r2, [r7]",
            "ldr r1, [0x0001ae80]",
            "ldr r2, [r2]",
            "cmp r2, r1",
            "bne 0x1abdc",
            "ldr r0, [0x0001ae84]",
            "bl fcn.000193d8",
            "ldr r5, [0x0001ae88]",
            "mov r4, r0",
            "str r0, [r6, 8]",
            "str r6, [r0, 0x10]",
            "mov r6, fp",
            "b 0x1ae44",
            "tst sb, 0x3d0",
            "beq 0x1ac9c",
            "ldr r5, [r7]",
            "ldr r2, [r5]",
            "and r0, r2, 0x7f000000",
            "and r1, r2, 0xff00",
            "mov fp, r3",
            "ldr r3, [r3, 0x10]",
            "ldr ip, [r3]",
            "and ip, ip, 0x7e000000",
            "cmp r0, ip",
            "bhi 0x1abf4",
            "ldr ip, [fp]",
            "cmp r2, ip",
            "bne 0x1ac20",
            "cmp r1, 0x1200",
            "beq 0x1abf4",
            "and r3, r2, 0xff00",
            "cmp r3, 0x2500",
            "addeq r2, r2, 0x6000000",
            "streq r2, [r5]",
            "ldr r3, [fp, 0x10]",
            "ldr r0, [r5]",
            "str r3, [sp]",
            "bl fcn.000193d8",
            "ldr r3, [sp]",
            "tst sb, 0x3c0",
            "mov r4, r0",
            "str r0, [r3, 0xc]",
            "ldr r3, [fp, 0x10]",
            "str r3, [r0, 0x10]",
            "beq 0x1ac8c",
            "str fp, [r0, 8]",
            "ldr r3, [r5]",
            "and r3, r3, 0xff00",
            "cmp r3, 0x2000",
            "ldrne r5, [0x0001ae74]",
            "bne 0x1ac94",
            "mov r0, 0x100000",
            "bl fcn.0001a6d0",
            "ldr r3, [r4]",
            "bic r3, r3, 0x7f000000",
            "str r3, [r4]",
            "b 0x1ac90",
            "str fp, [r0, 0xc]",
            "mov r5, r8",
            "str r4, [fp, 0x10]",
            "b 0x1ae44",
            "ldr fp, [r7]",
            "ldr r0, [fp]",
            "str r3, [sp]",
            "bl fcn.000193d8",
            "ldr r2, [0x0001ae8c]",
            "mov r4, r0",
            "ldr r3, [sp]",
            "and r2, sb, r2",
            "cmp r2, 0",
            "str r0, [r3, 0xc]",
            "str r3, [r0, 0x10]",
            "ldreq r5, [0x0001ae74]",
            "beq 0x1ae44",
            "cmp sb, 0x2000000",
            "ldr r5, [sp, 4]",
            "beq 0x1ad3c",
            "bhi 0x1ad10",
            "cmp sb, 4",
            "beq 0x1ade0",
            "bhi 0x1acf8",
            "cmp sb, 1",
            "beq 0x1ae1c",
            "b 0x1ae44",
            "cmp sb, 0x80000",
            "beq 0x1ae3c",
            "cmp sb, 0x100000",
            "moveq r5, r8",
            "moveq r6, r0",
            "b 0x1ae44",
            "cmp sb, 0x8000000",
            "beq 0x1ae00",
            "bhi 0x1ad28",
            "cmp sb, 0x4000000",
            "beq 0x1ad3c",
            "b 0x1ae44",
            "cmp sb, 0x10000000",
            "beq 0x1ada8",
            "cmp sb, 0x20000000",
            "beq 0x1ada8",
            "b 0x1ae44",
            "ldr r3, [fp, 8]",
            "mov r2, 0x2700",
            "str r2, [r4]",
            "ldr r0, [fp, -0x40]",
            "mov r1, r3",
            "str r3, [sp]",
            "bl fcn.000198c0",
            "cmp r0, 0",
            "ldr r3, [sp]",
            "movne r3, 0x1800",
            "strne r3, [r4]",
            "ldrne r3, [r0, 0x14]",
            "strne r3, [r4, 8]",
            "bne 0x1ad84",
            "ldr r0, [fp, -0x44]",
            "mov r1, r3",
            "bl fcn.00019910",
            "str r0, [r4, 8]",
            "tst sb, 0x4000000",
            "beq 0x1ae44",
            "ldr r3, [r4]",
            "mov r0, 0x800",
            "orr r3, r3, 0xa0000",
            "str r3, [r4]",
            "bl fcn.0001ab5c",
            "str r0, [r4, 0xc]",
            "b 0x1ae44",
            "mov r1, 0x2700",
            "mov r0, 0x18",
            "str r1, [r4]",
            "bl fcn.00029eb4",
            "tst sb, 0x20000000",
            "str r0, [r4, 8]",
            "beq 0x1add4",
            "mov r3, 0x128",
            "ldrd r2, r3, [r3, fp]",
            "bl fcn.00019fe4",
            "b 0x1ae44",
            "ldr r1, [fp, 8]",
            "bl fcn.00019e88",
            "b 0x1ae44",
            "ldr sb, [fp, 8]",
            "mov r0, 0x40",
            "bl fcn.00029eb4",
            "mov r1, r4",
            "mov r2, r0",
            "mov r0, sb",
            "bl fcn.000196fc",
            "b 0x1ae44",
            "mov r2, 0x1900",
            "ldr r1, [fp, 8]",
            "str r2, [r0]",
            "ldr r0, [fp, -0x38]",
            "bl fcn.00019910",
            "str r0, [r4, 0xc]",
            "b 0x1ae3c",
            "mov r0, 2",
            "str r3, [sp]",
            "bl fcn.0001ab5c",
            "ldr r3, [sp]",
            "mov r4, r0",
            "str r0, [r3, 0xc]",
            "str r3, [r0, 0x10]",
            "b 0x1ae44",
            "bl fcn.0001ae90",
            "str r0, [r4, 8]",
            "mov r3, r4",
            "mov r0, r5",
            "str r3, [sp]",
            "bl fcn.0001a6d0",
            "ands fp, r0, sl",
            "mov sb, r0",
            "ldr r3, [sp]",
            "beq 0x1aba0",
            "ldr r0, [sp, 0x18]",
            "add sp, sp, 0x24",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0001ae90": {
        "function_address": "0x0001ae90",
        "instructions": [
            "push {r4, lr}",
            "mov r0, 1",
            "bl fcn.0001a6d0",
            "mov r0, 2",
            "pop {r4, lr}",
            "b fcn.0001ab5c"
        ]
    },
    "fcn.0001aee0": {
        "function_address": "0x0001aee0",
        "instructions": [
            "push {r4, lr}",
            "bl fcn.00019678",
            "mov r4, r0",
            "mov r0, 0xe000",
            "bl fcn.0001ab5c",
            "ldr r3, [0x0001aedc]",
            "str r0, [r4, 8]",
            "ldr r3, [r3]",
            "ldr r3, [r3, 4]",
            "tst r3, 0x2000",
            "popeq {r4, pc}",
            "pop {r4, lr}",
            "b fcn.00019320",
            "push {r4, r5, r6, lr}",
            "ldr r0, [0x0001b174]",
            "bl fcn.0001a6d0",
            "tst r0, 0x8000",
            "bne 0x1aee4",
            "tst r0, 0x1000",
            "bne 0x1af1c",
            "b 0x1af34",
            "ldr r3, [r4]",
            "ldr r3, [r3, 4]",
            "tst r3, 0x8000",
            "bne 0x1af20",
            "bl fcn.00019320",
            "bl fcn.0001aee0",
            "b 0x1af20",
            "ldr r4, [0x0001b178]",
            "ldr r0, [0x0001b17c]",
            "bl fcn.0001a6d0",
            "cmp r0, 0x2000",
            "bne 0x1af00",
            "pop {r4, r5, r6, pc}",
            "ldr r5, [0x0001b180]",
            "and r5, r0, r5",
            "cmp r5, 0",
            "beq 0x1af50",
            "bl fcn.00019320",
            "ldr r0, aav.0x00010200",
            "b 0x1b16c",
            "ldr r3, [0x0001b178]",
            "ldr r4, [r3]",
            "ldr r0, [r4]",
            "and r3, r0, 0xff00",
            "cmp r3, 0x900",
            "beq 0x1b158",
            "bhi 0x1af88",
            "cmp r3, 0x500",
            "beq 0x1b0f8",
            "cmp r3, 0x800",
            "beq 0x1b148",
            "cmp r3, 0x400",
            "beq 0x1b0f8",
            "b 0x1b16c",
            "cmp r3, 0x3100",
            "beq 0x1b020",
            "bhi 0x1afa0",
            "cmp r3, 0x3000",
            "beq 0x1afb4",
            "b 0x1b16c",
            "cmp r3, 0x3200",
            "beq 0x1b054",
            "cmp r3, 0x3300",
            "beq 0x1b008",
            "b 0x1b16c",
            "ldr r0, aav.0x00010700",
            "bl fcn.00019678",
            "mov r5, r0",
            "bl fcn.0001ae90",
            "str r0, [r5, 8]",
            "bl fcn.0001aee0",
            "mov r0, 0x200",
            "bl fcn.00019678",
            "ldr r3, [r4, -0x54]",
            "mov r6, r0",
            "ldr r0, [0x0001b18c]",
            "ldr r3, [r3, 4]",
            "str r3, [r5, 0xc]",
            "bl fcn.0001a6d0",
            "cmp r0, 0x40000",
            "bne 0x1b140",
            "bl fcn.0001aee0",
            "ldr r3, [r4, -0x54]",
            "ldr r3, [r3, 4]",
            "str r3, [r6, 0x10]",
            "pop {r4, r5, r6, pc}",
            "bl fcn.0001ae90",
            "mov r4, r0",
            "mov r0, r5",
            "bl fcn.0001b300",
            "str r4, [r0, 8]",
            "pop {r4, r5, r6, pc}",
            "mov r0, 0x200",
            "bl fcn.00019678",
            "mov r6, r0",
            "mov r0, r5",
            "bl fcn.0001b300",
            "ldr r3, [r0, 0x10]",
            "mov r4, r0",
            "mov r0, 0x20000",
            "str r3, [r6, 0x10]",
            "bl fcn.0001a6d0",
            "bl fcn.0001ae90",
            "str r0, [r4, 8]",
            "pop {r4, r5, r6, pc}",
            "mov r0, 1",
            "bl fcn.0001a6d0",
            "movw r0, 0x4002",
            "bl fcn.0001ab5c",
            "ldr r3, [r4, 4]",
            "mov r5, r0",
            "tst r3, 2",
            "beq 0x1b0c0",
            "ldr r3, [r0]",
            "and r3, r3, 0xff00",
            "cmp r3, 0x1b00",
            "beq 0x1b08c",
            "ldr r0, str.Unexpected_token",
            "bl fcn.00019af4",
            "ldr r0, aav.0x00030600",
            "bl fcn.00019678",
            "ldr r3, [r5, 8]",
            "str r3, [r0, 8]",
            "ldr r3, [r5, 0xc]",
            "str r3, [r0, 0xc]",
            "mov r0, 0",
            "bl fcn.0001b300",
            "ldr r3, aav.0x00010e00",
            "str r3, [r0]",
            "ldr r3, [r5, 8]",
            "str r3, [r0, 8]",
            "pop {r4, r5, r6, pc}",
            "ldr r0, aav.0x00010200",
            "bl fcn.00019678",
            "str r5, [r0, 8]",
            "mov r0, 0x4000",
            "bl fcn.0001ab5c",
            "mov r4, r0",
            "mov r0, 2",
            "bl fcn.0001ab5c",
            "bl fcn.0001b300",
            "cmp r4, 0",
            "str r4, [r0, 8]",
            "moveq r3, 0x200",
            "streq r3, [r0]",
            "pop {r4, r5, r6, pc}",
            "bl fcn.00019678",
            "mov r5, r0",
            "movw r0, 0xe008",
            "bl fcn.0001ab5c",
            "str r0, [r5, 8]",
            "ldr r3, [r4, 4]",
            "tst r3, 8",
            "beq 0x1b134",
            "ldr r2, [r5]",
            "mov r0, 0xe000",
            "ldr r3, [r4]",
            "orr r3, r2, r3",
            "str r3, [r5]",
            "bl fcn.0001ab5c",
            "str r0, [r5, 0xc]",
            "ldr r3, [r4, 4]",
            "tst r3, 0x2000",
            "popeq {r4, r5, r6, pc}",
            "pop {r4, r5, r6, lr}",
            "b fcn.00019320",
            "mov r0, 0x200",
            "bl fcn.00019678",
            "ldr r3, [r4, -0x50]",
            "b 0x1b164",
            "mov r0, 0x200",
            "bl fcn.00019678",
            "ldr r3, [r4, -0x4c]",
            "str r3, [r0, 0x10]",
            "pop {r4, r5, r6, pc}",
            "pop {r4, r5, r6, lr}",
            "b 0x1aea8"
        ]
    },
    "fcn.00019320": {
        "function_address": "0x00019320",
        "instructions": [
            "ldr r3, [0x00019334]",
            "mov r2, 1",
            "ldr r3, [r3]",
            "str r2, [r3, 0x10]",
            "bx lr"
        ]
    },
    "fcn.0001b300": {
        "function_address": "0x0001b300",
        "instructions": [
            "ldr r3, [0x0001b37c]",
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r8, r0",
            "ldr r0, aav.0x00010700",
            "ldr r4, [r3]",
            "ldr r6, [r4, -0x50]",
            "ldr r7, [r4, -0x4c]",
            "bl fcn.00019678",
            "mov r5, r0",
            "mov r0, 0x200",
            "bl fcn.000193d8",
            "str r0, [r4, -0x4c]",
            "mov r0, 0x200",
            "bl fcn.000193d8",
            "str r0, [r4, -0x50]",
            "bl fcn.0001aee0",
            "ldr r0, aav.0x00010200",
            "bl fcn.00019678",
            "ldr r3, [r4, -0x4c]",
            "str r5, [r0, 0x10]",
            "ldr r2, [r4, -0x50]",
            "str r0, [r3, 0x10]",
            "ldr r3, [r4, -0x54]",
            "str r8, [r0, 8]",
            "mov r0, r5",
            "ldr r3, [r3, 4]",
            "str r3, [r5, 0xc]",
            "str r3, [r2, 0x10]",
            "str r7, [r4, -0x4c]",
            "str r6, [r4, -0x50]",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.00019604": {
        "function_address": "0x00019604",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r5, r0",
            "mov r6, 0",
            "b 0x19650",
            "ldr r3, [r5, 0x10]",
            "lsl r7, r6, 2",
            "ldr r4, [r3, r6, lsl 2]",
            "b 0x1963c",
            "ldr r8, [r4, 0x18]",
            "ldr r0, [r4, 0x10]",
            "bl sym.imp.free",
            "mov r0, r4",
            "mov r4, r8",
            "bl sym.imp.free",
            "cmp r4, 0",
            "bne 0x19624",
            "ldr r3, [r5, 0x10]",
            "add r6, r6, 1",
            "str r4, [r3, r7]",
            "ldr r3, [r5, 4]",
            "cmp r6, r3",
            "blo 0x19614",
            "mov r3, 0",
            "str r3, [r5]",
            "str r3, [r5, 0xc]",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.00055b0c": {
        "function_address": "0x00055b0c",
        "instructions": [
            "str lr, [sp, -8]!",
            "bl fcn.00055aa0",
            "movls r0, 1",
            "movhi r0, 0",
            "ldr pc, [sp], 8"
        ]
    },
    "fcn.00055aa0": {
        "function_address": "0x00055aa0",
        "instructions": [
            "mov ip, r0",
            "mov r0, r2",
            "mov r2, ip",
            "mov ip, r1",
            "mov r1, r3",
            "mov r3, ip",
            "b fcn.00055abc"
        ]
    },
    "fcn.0001a018": {
        "function_address": "0x0001a018",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r0",
            "bl fcn.000197a4",
            "mov r2, 0",
            "ldr r3, [0x0001a044]",
            "bl fcn.000551ec",
            "mov r2, r0",
            "mov r3, r1",
            "mov r0, r4",
            "pop {r4, lr}",
            "b fcn.00019fe4"
        ]
    },
    "fcn.000551ec": {
        "function_address": "0x000551ec",
        "instructions": [
            "push {r4, r5, lr}",
            "lsl r4, r1, 1",
            "lsl r5, r3, 1",
            "teq r4, r5",
            "teqeq r0, r2",
            "orrsne ip, r4, r0",
            "orrsne ip, r5, r2",
            "mvnsne ip, r4, asr 21",
            "mvnsne ip, r5, asr 21",
            "beq 0x553fc",
            "lsr r4, r4, 0x15",
            "rsbs r5, r4, r5, lsr 21",
            "rsblt r5, r5, 0",
            "ble 0x55240",
            "add r4, r4, r5",
            "eor r2, r0, r2",
            "eor r3, r1, r3",
            "eor r0, r2, r0",
            "eor r1, r3, r1",
            "eor r2, r0, r2",
            "eor r3, r1, r3",
            "cmp r5, 0x36",
            "pophi {r4, r5, pc}",
            "tst r1, 0x80000000",
            "lsl r1, r1, 0xc",
            "mov ip, 0x100000",
            "orr r1, ip, r1, lsr 12",
            "beq 0x55264",
            "rsbs r0, r0, 0",
            "rsc r1, r1, 0",
            "tst r3, 0x80000000",
            "lsl r3, r3, 0xc",
            "orr r3, ip, r3, lsr 12",
            "beq 0x5527c",
            "rsbs r2, r2, 0",
            "rsc r3, r3, 0",
            "teq r4, r5",
            "beq 0x553e4",
            "sub r4, r4, 1",
            "rsbs lr, r5, 0x20",
            "blt 0x552a8",
            "lsl ip, r2, lr",
            "adds r0, r0, r2, lsr r5",
            "adc r1, r1, 0",
            "adds r0, r0, r3, lsl lr",
            "adcs r1, r1, r3, asr r5",
            "b 0x552c4",
            "sub r5, r5, 0x20",
            "add lr, lr, 0x20",
            "cmp r2, 1",
            "lsl ip, r3, lr",
            "orrhs ip, ip, 2",
            "adds r0, r0, r3, asr r5",
            "adcs r1, r1, r3, asr 31",
            "and r5, r1, 0x80000000",
            "bpl 0x552d8",
            "rsbs ip, ip, 0",
            "rscs r0, r0, 0",
            "rsc r1, r1, 0",
            "cmp r1, 0x100000",
            "blo 0x5531c",
            "cmp r1, 0x200000",
            "blo 0x55304",
            "lsrs r1, r1, 1",
            "rrxs r0, r0",
            "rrx ip, ip",
            "add r4, r4, 1",
            "lsl r2, r4, 0x15",
            "cmn r2, 0x400000",
            "bhs 0x5545c",
            "cmp ip, 0x80000000",
            "lsrseq ip, r0, 1",
            "adcs r0, r0, 0",
            "adc r1, r1, r4, lsl 20",
            "orr r1, r1, r5",
            "pop {r4, r5, pc}",
            "lsls ip, ip, 1",
            "adcs r0, r0, r0",
            "adc r1, r1, r1",
            "tst r1, 0x100000",
            "sub r4, r4, 1",
            "bne 0x55304",
            "teq r4, 0",
            "eor r3, r3, 0x100000",
            "eoreq r1, r1, 0x100000",
            "addeq r4, r4, 1",
            "subne r5, r5, 1",
            "b 0x55284",
            "mvns ip, r4, asr 21",
            "mvnsne ip, r5, asr 21",
            "beq 0x5546c",
            "teq r4, r5",
            "teqeq r0, r2",
            "beq 0x55424",
            "orrs ip, r4, r0",
            "moveq r1, r3",
            "moveq r0, r2",
            "pop {r4, r5, pc}",
            "teq r1, r3",
            "movne r1, 0",
            "movne r0, 0",
            "popne {r4, r5, pc}",
            "lsrs ip, r4, 0x15",
            "bne 0x5544c",
            "lsls r0, r0, 1",
            "adcs r1, r1, r1",
            "orrhs r1, r1, 0x80000000",
            "pop {r4, r5, pc}",
            "adds r4, r4, 0x400000",
            "addlo r1, r1, 0x100000",
            "poplo {r4, r5, pc}",
            "and r5, r1, 0x80000000",
            "orr r1, r5, 0x7f000000",
            "orr r1, r1, 0xf00000",
            "mov r0, 0",
            "pop {r4, r5, pc}",
            "mvns ip, r4, asr 21",
            "movne r1, r3",
            "movne r0, r2",
            "mvnseq ip, r5, asr 21",
            "movne r3, r1",
            "movne r2, r0",
            "orrs r4, r0, r1, lsl 12",
            "orrseq r5, r2, r3, lsl 12",
            "teqeq r1, r3",
            "orrne r1, r1, 0x80000",
            "pop {r4, r5, pc}"
        ]
    },
    "fcn.00019ed8": {
        "function_address": "0x00019ed8",
        "instructions": [
            "push {r0, r1, r2, r4, r5, r6, r7, lr}",
            "bl fcn.00029ed8",
            "mov r4, r0",
            "ldrb r5, [r0]",
            "mov r0, r5",
            "bl sym.imp.isalnum",
            "subs r0, r0, 0",
            "movne r0, 1",
            "cmp r5, 0x5f",
            "movne r5, r0",
            "orreq r5, r0, 1",
            "cmp r5, 0",
            "beq 0x19f24",
            "mov r0, r4",
            "mov r1, 0x3d",
            "bl sym.imp.strchr",
            "cmp r0, 0",
            "str r0, [sp, 4]",
            "bne 0x19f34",
            "mov r0, r4",
            "bl sym.imp.free",
            "mov r0, 0",
            "b 0x19f98",
            "mov r5, r0",
            "mov r3, 0",
            "add r7, sp, 8",
            "strb r3, [r5], 1",
            "str r5, [r7, -4]!",
            "mov r6, r5",
            "b 0x19f5c",
            "mov r0, r7",
            "bl fcn.00019ab0",
            "strb r0, [r6], 1",
            "ldr r3, [sp, 4]",
            "ldrb r3, [r3]",
            "cmp r3, 0",
            "bne 0x19f50",
            "strb r3, [r6]",
            "mov r1, r4",
            "ldr r3, [0x00019f9c]",
            "ldr r3, [r3]",
            "ldr r0, [r3, -0x44]",
            "bl fcn.00019910",
            "mov r1, r5",
            "bl fcn.00019eb8",
            "mov r0, r4",
            "bl sym.imp.free",
            "mov r0, 1",
            "pop {r1, r2, r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.00019404": {
        "function_address": "0x00019404",
        "instructions": [
            "ldr r3, [0x000194d4]",
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r6, r0",
            "mov r5, 0",
            "ldr r2, [0x000194d8]",
            "ldr r7, [r3]",
            "sub r3, r7, 0x78",
            "b 0x19450",
            "ldr r0, [r4, 4]",
            "add r1, r4, 0x10",
            "rsb r0, r1, r0",
            "ldr r1, [r4]",
            "asr r0, r0, 3",
            "mla r0, r2, r0, r6",
            "cmp r0, r1",
            "ble 0x19460",
            "ldr r1, [r4, 0xc]",
            "mov r5, r4",
            "str r1, [r3, 0x58]",
            "ldr r4, [r3, 0x58]",
            "cmp r4, 0",
            "bne 0x19424",
            "b 0x19498",
            "ldr r3, [r7, -0x20]",
            "mov r2, 0x18",
            "ldr r0, [r3, 4]",
            "mla r6, r2, r6, r0",
            "mov r2, 0",
            "str r6, [r3, 4]",
            "mov r3, r0",
            "b 0x1948c",
            "str r2, [r3]",
            "str r2, [r3, 0x10]",
            "add r3, r3, 0x18",
            "cmp r3, r6",
            "blo 0x19480",
            "pop {r4, r5, r6, r7, r8, pc}",
            "cmp r6, 0x40",
            "movge r8, r6",
            "movlt r8, 0x40",
            "mov r0, 0x18",
            "mul r0, r0, r8",
            "add r0, r0, 0x10",
            "bl fcn.00029e54"
        ]
    },
    "fcn.0001b5bc": {
        "function_address": "0x0001b5bc",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "subs r5, r0, 0",
            "sub sp, sp, 0xc4",
            "mov r4, r1",
            "bne 0x1b5e4",
            "mov r0, r1",
            "mov r1, r5",
            "bl fcn.00019e88",
            "mov r4, r0",
            "b 0x1cd80",
            "ldr fp, [0x0001c57c]",
            "mov r0, 2",
            "bl fcn.00019404",
            "str r0, [sp, 0x30]",
            "ldr r6, [fp]",
            "add r1, r6, 0xd0",
            "str r1, [sp, 0x44]",
            "ldm r5, {r2, r3}",
            "ldr r0, [r5, 8]",
            "tst r2, 0x10000",
            "str r2, [sp, 0x20]",
            "and sl, r2, 0x7f",
            "str r3, [r6, -0x30]",
            "str r0, [sp, 0xbc]",
            "beq 0x1b630",
            "ldr r1, [sp, 0x30]",
            "bl fcn.0001b5bc",
            "mov r8, r0",
            "mov r7, r0",
            "ldr r3, [sp, 0x20]",
            "tst r3, 0x20000",
            "beq 0x1b650",
            "ldr r2, [sp, 0x30]",
            "ldr r0, [r5, 0xc]",
            "add r1, r2, 0x18",
            "bl fcn.0001b5bc",
            "str r0, [sp, 0x18]",
            "ldr r3, [sp, 0x20]",
            "tst r3, 0x40000",
            "beq 0x1b668",
            "mov r0, r8",
            "bl fcn.00019c24",
            "mov r8, r0",
            "ldr r1, [sp, 0x20]",
            "tst r1, 0x80000",
            "beq 0x1b680",
            "ldr r0, [sp, 0x18]",
            "bl fcn.00019c24",
            "str r0, [sp, 0x18]",
            "ldr r2, [sp, 0x20]",
            "tst r2, 0x100000",
            "beq 0x1b69c",
            "mov r0, r8",
            "bl fcn.000197a4",
            "mov r8, r0",
            "mov sb, r1",
            "ldr r3, [sp, 0x20]",
            "and r3, r3, 0xff00",
            "str r3, [sp, 0x34]",
            "lsr r3, r3, 8",
            "sub r3, r3, 1",
            "cmp r3, 0x27",
            "ldrls pc, [pc, r3, lsl 2]",
            "b case.0x1b6b4.7",
            "ldr r0, [sp, 0xbc]",
            "ldr r3, [r0]",
            "and r3, r3, 0xff00",
            "cmp r3, 0x1300",
            "bne 0x1b7b8",
            "ldr r1, [sp, 0x20]",
            "tst r1, 0x200000",
            "bne 0x1b78c",
            "ldr r0, [r0, 8]",
            "bl fcn.0001d350",
            "cmp r0, 0",
            "beq 0x1b8cc",
            "ldr r3, [r5]",
            "orr r3, r3, 0x200000",
            "str r3, [r5]",
            "ldr r3, [sp, 0xbc]",
            "ldr r0, [r3, 0xc]",
            "bl fcn.0001d350",
            "cmp r0, 0",
            "ldrne r3, [r5]",
            "bicne r3, r3, 0x200000",
            "strne r3, [r5]",
            "b 0x1b8c4",
            "bl fcn.0001d350",
            "b 0x1b7c8",
            "mov r0, r8",
            "bl fcn.00019868",
            "cmp r0, 0",
            "beq 0x1b8cc",
            "b 0x1b8c4",
            "ldr r0, [sp, 0x18]",
            "mov sl, r8",
            "bl fcn.0001939c",
            "ldr r2, [r8]",
            "mov r3, r0",
            "tst r2, 0x800",
            "beq 0x1b800",
            "ldr r0, [r8, 0x14]",
            "str r3, [sp, 0x10]",
            "bl sym.imp.free",
            "ldr r3, [sp, 0x10]",
            "ldr r2, [sl]",
            "ldr r0, [r3, 0xc]",
            "orr r2, r2, 0x800",
            "str r2, [sl]",
            "add r0, r0, 0xa",
            "str r3, [sp, 0x10]",
            "bl fcn.00029eb4",
            "str r0, [sl, 0x14]",
            "add r1, r0, 8",
            "ldr r3, [sp, 0x10]",
            "mov ip, 0",
            "str r1, [r0, 4]",
            "str r1, [r0]",
            "mov sl, r3",
            "strd r8, sb, [sp, 0x20]",
            "mov r3, r7",
            "mov r8, ip",
            "mov sb, r0",
            "b 0x1b884",
            "ldr r2, [sl, 0x10]",
            "ldr r7, [r2, r8, lsl 2]",
            "b 0x1b878",
            "add r1, r7, 0x1c",
            "ldr r0, [sb]",
            "str r3, [sp, 0x10]",
            "bl sym.imp.strcpy",
            "mov r0, sb",
            "bl fcn.00019300",
            "ldr r7, [r7, 0x18]",
            "ldr r3, [sp, 0x10]",
            "cmp r7, 0",
            "bne 0x1b858",
            "add r8, r8, 1",
            "ldr r2, [sl, 4]",
            "cmp r8, r2",
            "blo 0x1b84c",
            "mov r7, r3",
            "ldrd r8, sb, [sp, 0x20]",
            "b case.0x1b6b4.1",
            "ldr r3, [r8, 0x14]",
            "ldr r2, [r3, 4]",
            "add r0, r3, 4",
            "ldr r3, [r3]",
            "cmp r2, r3",
            "beq 0x1b8cc",
            "bl fcn.00019300",
            "mov r1, r0",
            "mov r0, r8",
            "bl fcn.00019e88",
            "ldr r5, [r5, 0x10]",
            "b case.0x1b6b4.1",
            "ldr r5, [r5, 0xc]",
            "b case.0x1b6b4.1",
            "ldr r3, obj.stdout",
            "ldr r7, [r3]",
            "ldr r3, [r5, 0xc]",
            "cmp r3, 0",
            "beq 0x1b958",
            "ldr r0, [r6, -0x3c]",
            "ldr r1, [sp, 0x18]",
            "bl fcn.00019910",
            "ldr r3, [r0]",
            "mov r7, r0",
            "cmp r3, 0",
            "bne 0x1b954",
            "cmp sl, 0x7c",
            "bne 0x1b938",
            "ldr r0, [sp, 0x18]",
            "ldr r1, [0x0001c584]",
            "bl sym.imp.popen",
            "cmp r0, 0",
            "str r0, [r7]",
            "bne 0x1b92c",
            "ldr r0, str.popen",
            "bl fcn.00028900",
            "mov r3, 1",
            "str r3, [r7, 0x14]",
            "b 0x1b954",
            "ldr r3, [0x0001c584]",
            "cmp sl, 0x77",
            "ldr r1, [0x0001c58c]",
            "ldr r0, [sp, 0x18]",
            "moveq r1, r3",
            "bl fcn.00029f54",
            "ldr r7, [r7]",
            "ldr r2, [sp, 0x34]",
            "cmp r2, 0x400",
            "bne 0x1ba4c",
            "ldr r3, [sp, 0xbc]",
            "cmp r3, 0",
            "bne 0x1ba20",
            "ldr r3, [fp]",
            "ldr r0, [r3, 0x5c]",
            "bl fcn.00019c24",
            "mov r1, r7",
            "bl sym.imp.fputs",
            "b 0x1ba34",
            "add r0, sp, 0xbc",
            "bl fcn.00019338",
            "ldr r1, [sp, 0x30]",
            "bl fcn.0001b5bc",
            "ldr r3, [r0]",
            "mov sb, r0",
            "str r0, [sp, 0x20]",
            "tst r3, 1",
            "beq 0x1b9f0",
            "ldr r8, [fp]",
            "ldr sl, [r8, -0x18]",
            "ldr r0, [r8, 0x18]",
            "bl fcn.00019c24",
            "mov r2, r0",
            "mov r0, sb",
            "str r2, [sp, 0x14]",
            "mov sb, 1",
            "bl fcn.000197a4",
            "ldr r2, [sp, 0x14]",
            "strd r0, r1, [sp]",
            "mov r0, sl",
            "mov r1, 0xf0",
            "str sb, [sp, 8]",
            "bl fcn.00019b1c",
            "ldr r0, [r8, -0x18]",
            "b 0x1b9f4",
            "bl fcn.00019c24",
            "mov r1, r7",
            "bl sym.imp.fputs",
            "ldr r3, [sp, 0xbc]",
            "cmp r3, 0",
            "beq 0x1ba24",
            "ldr r3, [fp]",
            "ldr r0, [r3, 0x20]",
            "bl fcn.00019c24",
            "mov r1, r7",
            "bl sym.imp.fputs",
            "b 0x1ba24",
            "strd r8, sb, [sp, 0x20]",
            "ldr r3, [sp, 0xbc]",
            "cmp r3, 0",
            "bne 0x1b988",
            "ldrd r8, sb, [sp, 0x20]",
            "ldr r3, [fp]",
            "ldr r0, [r3, 0x24]",
            "bl fcn.00019c24",
            "mov r1, r7",
            "bl sym.imp.fputs",
            "b 0x1ba6c",
            "ldr r0, [sp, 0xbc]",
            "bl fcn.0001d140",
            "mov r1, r7",
            "mov sl, r0",
            "mov r8, r0",
            "bl sym.imp.fputs",
            "mov r0, sl",
            "bl sym.imp.free",
            "mov r0, r7",
            "bl sym.imp.fflush",
            "b case.0x1b6b4.1",
            "ldr r3, [sp, 0xbc]",
            "ldr r7, [r3]",
            "and r7, r7, 0xff00",
            "cmp r7, 0x2700",
            "ldreq r1, [r3, 8]",
            "streq r1, [sp, 0x18]",
            "beq 0x1babc",
            "cmp r7, 0x1800",
            "bne 0x1bab4",
            "ldr r1, [r3, 8]",
            "mov r0, 0x18",
            "ldr r2, [r6, 0x90]",
            "mla r2, r0, r1, r2",
            "str r2, [sp, 0x18]",
            "b 0x1babc",
            "ldr r0, str.Not_an_array",
            "b 0x1bca8",
            "ldr r3, [r3, 0xc]",
            "cmp r3, 0",
            "beq 0x1bb00",
            "mov r0, r8",
            "bl fcn.00019514",
            "ldr r3, [sp, 0xbc]",
            "ldr r1, [sp, 0x30]",
            "ldr r0, [r3, 0xc]",
            "bl fcn.0001b5bc",
            "bl fcn.00019c24",
            "mov sl, r0",
            "mov r8, r0",
            "ldr r0, [sp, 0x18]",
            "bl fcn.0001939c",
            "mov r1, sl",
            "bl fcn.00019a28",
            "b case.0x1b6b4.1",
            "ldr r0, [sp, 0x18]",
            "bl fcn.0001939c",
            "bl fcn.00019604",
            "b case.0x1b6b4.1",
            "ldr r3, [r5, 8]",
            "str r3, [r6, -0x34]",
            "b case.0x1b6b4.1",
            "mov r0, r4",
            "mov r1, r8",
            "bl fcn.0001a320",
            "b case.0x1b6b4.1",
            "mov r3, 1",
            "str r3, [r6, -8]",
            "mov r3, 1",
            "str r3, [r6, -0xc]",
            "mov r0, r4",
            "bl fcn.00019514",
            "b case.0x1b6b4.1",
            "mov r1, sb",
            "mov r0, r8",
            "bl fcn.00055b34",
            "bl fcn.0001cd8c",
            "ldr r3, [r5, 8]",
            "ldr r2, [r6, 0x50]",
            "mov r8, r3",
            "cmp r3, r2",
            "bne 0x1bb84",
            "bl fcn.0001a610",
            "b 0x1bb84",
            "ldr r2, [r5, 8]",
            "mov r1, 0x18",
            "ldr r3, [r6, 0x90]",
            "mla r8, r1, r2, r3",
            "ldr r3, [r5, 0xc]",
            "cmp r3, 0",
            "moveq r4, r8",
            "beq case.0x1b6b4.1",
            "mov r0, r8",
            "bl fcn.0001939c",
            "ldr r1, [sp, 0x18]",
            "bl fcn.00019910",
            "b 0x1bc88",
            "ldr r0, [sp, 0x18]",
            "bl fcn.0001939c",
            "mov r1, r8",
            "bl fcn.000198c0",
            "cmp r0, 0",
            "b 0x1cd14",
            "ldr r0, [r6, 0x5c]",
            "str r5, [sp, 0xbc]",
            "bl fcn.00019c24",
            "mov r8, r0",
            "b 0x1bbdc",
            "ldr r3, [r5, 0xc]",
            "str r3, [sp, 0xbc]",
            "add ip, r6, 0x98",
            "ldr r0, [sp, 0xbc]",
            "mov r1, ip",
            "str ip, [sp, 0x14]",
            "bl fcn.0001ce2c",
            "mov r2, 0",
            "mov r1, r8",
            "mov r3, r2",
            "mov r7, r0",
            "str r2, [sp]",
            "bl sym.imp.regexec",
            "ldr ip, [sp, 0x14]",
            "mov r3, r0",
            "str r0, [sp, 0x18]",
            "cmp r7, ip",
            "bne 0x1bc2c",
            "mov r0, r7",
            "str r3, [sp, 0x10]",
            "bl sym.imp.regfree",
            "ldr r3, [sp, 0x10]",
            "cmp sl, 0x21",
            "movne r0, 0",
            "moveq r0, 1",
            "cmp r3, 0",
            "eoreq r0, r0, 1",
            "b 0x1bed8",
            "ldr r1, [sp, 0x30]",
            "ldr sl, [sp, 0x18]",
            "add r3, r1, 0x18",
            "cmp sl, r3",
            "bne 0x1bc7c",
            "ldr r1, [sl, 0x10]",
            "cmp r1, 0",
            "beq 0x1bc7c",
            "mov r0, r8",
            "bl fcn.00019e64",
            "mov r3, 0",
            "mov r4, r0",
            "str r3, [sl, 0x10]",
            "b case.0x1b6b4.1",
            "mov r0, r8",
            "mov r1, sl",
            "bl fcn.0001a320",
            "mov r4, r0",
            "b case.0x1b6b4.1",
            "ldr r3, [r5, 0xc]",
            "ldr r3, [r3]",
            "and r3, r3, 0xff00",
            "cmp r3, 0x1200",
            "beq 0x1bcac",
            "ldr r0, str.Possible_syntax_error",
            "bl fcn.00019af4",
            "mov r0, r8",
            "bl fcn.00019868",
            "ldr r3, [r5, 0xc]",
            "cmp r0, 0",
            "mov r1, r4",
            "ldrne r0, [r3, 8]",
            "ldreq r0, [r3, 0xc]",
            "bl fcn.0001b5bc",
            "b 0x1bc88",
            "ldr r3, [r5, 0xc]",
            "ldr r2, [r3, 4]",
            "cmp r2, 0",
            "ldreq r0, str.Call_to_undefined_function",
            "beq 0x1bca8",
            "ldr r0, [r3]",
            "add r0, r0, 1",
            "bl fcn.00019404",
            "strd r8, sb, [sp, 0x20]",
            "mov sl, r0",
            "str r0, [sp, 0x18]",
            "mov sb, r0",
            "ldr ip, [0x0001c59c]",
            "b 0x1bd6c",
            "add r0, sp, 0xbc",
            "str ip, [sp, 0x14]",
            "bl fcn.00019338",
            "ldr r1, [sp, 0x30]",
            "bl fcn.0001b5bc",
            "ldr r7, [sp, 0x18]",
            "mov r8, r0",
            "str r0, [sp, 0x20]",
            "mov r1, r8",
            "mov r0, r7",
            "bl fcn.0001a320",
            "ldr r3, [r7]",
            "str r8, [r7, 0x14]",
            "ldr ip, [sp, 0x14]",
            "orr r3, r3, 0x2000",
            "str r3, [r7]",
            "add r7, r7, 0x18",
            "str r7, [sp, 0x18]",
            "rsb r7, sl, r7",
            "asr r7, r7, 3",
            "ldr r3, [r5, 0xc]",
            "mul r7, ip, r7",
            "ldr r3, [r3]",
            "cmp r7, r3",
            "bhs 0x1bd78",
            "ldr r3, [sp, 0xbc]",
            "cmp r3, 0",
            "bne 0x1bd08",
            "ldr r2, [r6, 0x90]",
            "mov r1, r4",
            "str sl, [r6, 0x90]",
            "mov r7, sb",
            "ldr r3, [r5, 0xc]",
            "ldr sl, [r6, -0x34]",
            "str r2, [sp, 0x18]",
            "ldr r0, [r3, 4]",
            "ldrd r8, sb, [sp, 0x20]",
            "mov r8, sl",
            "str r2, [sp, 0x14]",
            "bl fcn.0001b5bc",
            "str sl, [r6, -0x34]",
            "mov r4, r0",
            "ldr r0, [r6, 0x90]",
            "bl fcn.0001b388",
            "ldr r2, [sp, 0x14]",
            "str r2, [r6, 0x90]",
            "b case.0x1b6b4.1",
            "ldr r3, [sp, 0xbc]",
            "cmp r3, 0",
            "beq 0x1be28",
            "ldr r0, [r6, -0x3c]",
            "mov r1, r8",
            "bl fcn.00019910",
            "ldr r3, [r0]",
            "mov r7, r0",
            "cmp r3, 0",
            "bne 0x1be40",
            "ldr r2, [sp, 0x34]",
            "cmp r2, 0x2000",
            "bne 0x1be14",
            "mov r0, r8",
            "ldr r1, [0x0001c5a0]",
            "bl sym.imp.popen",
            "mov r3, 1",
            "str r0, [r7]",
            "str r3, [r7, 0x14]",
            "b 0x1be40",
            "mov r0, r8",
            "ldr r1, [0x0001c5a0]",
            "bl sym.imp.fopen64",
            "str r0, [r7]",
            "b 0x1be40",
            "ldr r3, [r6, -0x48]",
            "cmp r3, 0",
            "bne 0x1be3c",
            "bl fcn.0001b494",
            "str r0, [r6, -0x48]",
            "ldr r7, [r6, -0x48]",
            "ldr r3, [r7]",
            "cmp r3, 0",
            "bne 0x1be80",
            "ldr r3, [0x0001c5a4]",
            "ldr sl, [fp]",
            "ldr r3, [r3]",
            "ldr r0, [r3]",
            "bl fcn.000554bc",
            "mov r2, r0",
            "mov r3, r1",
            "ldr r0, [sl, 0x44]",
            "bl fcn.00019fe4",
            "mov r0, r4",
            "mov r2, 0",
            "ldr r3, [0x0001c5a8]",
            "b 0x1cd40",
            "ldr r3, [r5, 0xc]",
            "mov r0, r7",
            "cmp r3, 0",
            "ldreq r3, [fp]",
            "ldreq r3, [r3, 0x5c]",
            "streq r3, [sp, 0x18]",
            "ldr r1, [sp, 0x18]",
            "bl fcn.0001a048",
            "subs r8, r0, 0",
            "mov r3, r0",
            "ble 0x1bed4",
            "ldr r2, [sp, 0xbc]",
            "cmp r2, 0",
            "bne 0x1bed4",
            "ldr sl, [fp]",
            "ldr r0, [sl, 0x48]",
            "str r3, [sp, 0x10]",
            "bl fcn.0001a018",
            "ldr r0, [sl, 0x4c]",
            "bl fcn.0001a018",
            "ldr r3, [sp, 0x10]",
            "mov r0, r3",
            "bl fcn.000554bc",
            "mov r2, r0",
            "mov r3, r1",
            "b 0x1cd3c",
            "cmp sl, 0xc",
            "ldrls pc, [pc, sl, lsl 2]",
            "b 0x1c104",
            "mov r0, r8",
            "mov r1, sb",
            "bl fcn.00055b34",
            "b 0x1c0f4",
            "bl sym.imp.rand",
            "bl fcn.000554bc",
            "ldr r2, [0x0001c5ac]",
            "ldr r3, [0x0001c5b0]",
            "bl fcn.00055804",
            "b 0x1c0f8",
            "mov r0, r8",
            "mov r1, sb",
            "bl sym.imp.cos",
            "b 0x1c0f8",
            "mov r0, r8",
            "mov r1, sb",
            "bl sym.imp.exp",
            "b 0x1c0f8",
            "mov r0, r8",
            "mov r1, sb",
            "bl sym.imp.log",
            "b 0x1c0f8",
            "mov r0, r8",
            "mov r1, sb",
            "bl sym.imp.sin",
            "b 0x1c0f8",
            "mov r0, r8",
            "mov r1, sb",
            "bl sym.imp.sqrt",
            "b 0x1c0f8",
            "ldr r0, [r6, 0x94]",
            "bl fcn.00055498",
            "mov r2, r0",
            "ldr r0, [sp, 0xbc]",
            "mov r3, r1",
            "strd r2, r3, [sp, 0x18]",
            "cmp r0, 0",
            "beq 0x1bfd0",
            "mov r0, r8",
            "mov r1, sb",
            "bl fcn.00055b90",
            "b 0x1bfd4",
            "bl sym.imp.time",
            "str r0, [r6, 0x94]",
            "bl sym.imp.srand",
            "b 0x1c104",
            "mov r0, 0",
            "bl sym.imp.time",
            "b 0x1c0f4",
            "ldr r3, [sp, 0xbc]",
            "cmp r3, 0",
            "bne 0x1c004",
            "ldr r0, [r6, 0x5c]",
            "bl fcn.00019c24",
            "mov r8, r0",
            "mov r0, r8",
            "bl sym.imp.strlen",
            "bl fcn.00055498",
            "b 0x1c0f8",
            "mov r0, 0",
            "bl sym.imp.fflush",
            "mov r2, 0",
            "mov r3, 0",
            "b 0x1c100",
            "ldr r3, [sp, 0xbc]",
            "cmp r3, 0",
            "ldreq r3, obj.stdout",
            "ldreq r0, [r3]",
            "beq 0x1c06c",
            "subs r3, r8, 0",
            "beq 0x1c068",
            "ldrb r3, [r3]",
            "cmp r3, 0",
            "beq 0x1c068",
            "ldr r0, [r6, -0x3c]",
            "mov r1, r8",
            "bl fcn.00019910",
            "mov r7, r0",
            "ldr r0, [r0]",
            "b 0x1c06c",
            "mov r0, 0",
            "bl sym.imp.fflush",
            "b 0x1c104",
            "ldr r0, [r6, -0x3c]",
            "mov r1, r8",
            "bl fcn.000198c0",
            "subs r7, r0, 0",
            "mov sl, r8",
            "beq 0x1c0c4",
            "ldr r3, [r7, 0x14]",
            "cmp r3, 0",
            "beq 0x1c0a4",
            "ldr r0, [r7]",
            "bl sym.imp.pclose",
            "b 0x1c0ac",
            "ldr r0, [r7]",
            "bl sym.imp.fclose",
            "str r0, [sp, 0x18]",
            "ldr r0, [r7, 4]",
            "bl sym.imp.free",
            "ldr r0, [r6, -0x3c]",
            "mov r1, sl",
            "bl fcn.00019a28",
            "ldr sl, [sp, 0x18]",
            "cmp sl, 0",
            "beq 0x1c0f0",
            "ldr r3, [0x0001c5a4]",
            "ldr r3, [r3]",
            "ldr r0, [r3]",
            "bl fcn.000554bc",
            "mov r2, r0",
            "mov r3, r1",
            "ldr r0, [r6, 0x44]",
            "bl fcn.00019fe4",
            "mov r0, sl",
            "bl fcn.000554bc",
            "mov r2, r0",
            "mov r3, r1",
            "strd r2, r3, [sp, 0x18]",
            "mov r0, r4",
            "ldrd r2, r3, [sp, 0x18]",
            "b 0x1cd40",
            "mov r0, 4",
            "str r5, [sp, 0xb8]",
            "bl fcn.00019404",
            "ldr r3, [sp, 0xb8]",
            "strd r8, sb, [sp, 0x38]",
            "str r0, [sp, 0x40]",
            "ldr r1, [r3]",
            "ldr r3, [r3, 8]",
            "str r0, [sp, 0x20]",
            "str r1, [sp, 0x2c]",
            "mov sb, r1",
            "str r3, [sp, 0xb8]",
            "mov r3, 0",
            "str r3, [sp, 0x98]",
            "mov sl, r3",
            "str r3, [sp, 0x94]",
            "mov r8, r3",
            "b 0x1c1b4",
            "add r0, sp, 0xb8",
            "bl fcn.00019338",
            "tst sb, 0x9000000",
            "add r3, sp, 0x9c",
            "str r0, [r3, r8]",
            "beq 0x1c180",
            "ldr r1, [sp, 0x20]",
            "bl fcn.0001b5bc",
            "add r3, sp, 0x8c",
            "str r0, [r3, r8]",
            "tst sb, 0x8000000",
            "beq 0x1c19c",
            "add r3, sp, 0x8c",
            "ldr r0, [r3, r8]",
            "bl fcn.00019c24",
            "add r3, sp, 0x7c",
            "str r0, [r3, r8]",
            "ldr r3, [sp, 0x20]",
            "lsr sb, sb, 1",
            "add sl, sl, 1",
            "add r8, r8, 4",
            "add r3, r3, 0x18",
            "str r3, [sp, 0x20]",
            "ldr r2, [sp, 0xb8]",
            "cmp sl, 3",
            "movgt r3, 0",
            "movle r3, 1",
            "cmp r2, 0",
            "moveq r3, 0",
            "cmp r3, 0",
            "bne 0x1c158",
            "ldr r1, [sp, 0x2c]",
            "ldrd r8, sb, [sp, 0x38]",
            "cmp sl, r1, lsr 30",
            "ldrlo r0, str.Too_few_arguments_for_builtin",
            "blo 0x1bca8",
            "ldr r2, [sp, 0x2c]",
            "and r3, r2, 0x7f",
            "cmp r3, 0x10",
            "ldrls pc, [pc, r3, lsl 2]",
            "b 0x1c88c",
            "ldr r3, sym.imp.tolower",
            "str r3, [sp, 0x20]",
            "b 0x1c530",
            "add r1, sp, 0xc0",
            "add sl, r1, sl, lsl 2",
            "ldr r0, [sl, -0x34]",
            "bl fcn.000197a4",
            "strd r0, r1, [sp, 0x20]",
            "ldr r0, [sp, 0x90]",
            "bl fcn.000197a4",
            "mov r2, r0",
            "mov r3, r1",
            "ldrd r0, r1, [sp, 0x20]",
            "bl sym.imp.atan2",
            "b 0x1c87c",
            "cmp sl, 2",
            "addle r1, r6, 0x130",
            "ble 0x1c2bc",
            "ldr r1, [sp, 0xa4]",
            "ldr r3, [r1]",
            "and r3, r3, 0xff00",
            "cmp r3, 0x2100",
            "beq 0x1c2bc",
            "ldr r2, [sp, 0x40]",
            "mov r0, r1",
            "add r1, r2, 0x30",
            "bl fcn.0001b5bc",
            "bl fcn.00019c24",
            "ldr r1, [sp, 0x44]",
            "bl fcn.00019744",
            "mov r1, r0",
            "add r2, sp, 0xb0",
            "ldr r0, [sp, 0x7c]",
            "bl fcn.0001a37c",
            "ldr r3, [sp, 0xb0]",
            "mov sl, 1",
            "str r0, [sp, 0x20]",
            "str r3, [sp, 0xac]",
            "ldr r3, [sp, 0x90]",
            "mov r0, r3",
            "str r3, [sp, 0x2c]",
            "bl fcn.0001939c",
            "bl fcn.00019604",
            "b 0x1c30c",
            "add r0, sp, 0xac",
            "bl fcn.00019300",
            "mov r1, sl",
            "add sl, sl, 1",
            "mov r2, r0",
            "ldr r0, [sp, 0x2c]",
            "bl fcn.00019fa0",
            "ldr r1, [sp, 0x20]",
            "cmp sl, r1",
            "ble 0x1c2f0",
            "ldr r0, [sp, 0xb0]",
            "bl sym.imp.free",
            "ldr r0, [sp, 0x20]",
            "b 0x1c878",
            "ldr r2, [sp, 0x7c]",
            "mov r0, r2",
            "str r2, [sp, 0x20]",
            "bl sym.imp.strlen",
            "mov ip, r0",
            "ldr r0, [sp, 0x90]",
            "str ip, [sp, 0x14]",
            "bl fcn.000197a4",
            "mov r2, 0",
            "ldr r3, [0x0001c5d0]",
            "bl fcn.000551e8",
            "bl fcn.00055b34",
            "ldr ip, [sp, 0x14]",
            "cmp r0, ip",
            "movge r0, ip",
            "cmp sl, 2",
            "bic r0, r0, r0, asr 31",
            "str r0, [sp, 0x2c]",
            "ble 0x1c380",
            "ldr r0, [sp, 0x94]",
            "bl fcn.000197a4",
            "b 0x1c38c",
            "ldr r3, [sp, 0x2c]",
            "rsb r0, r3, ip",
            "bl fcn.000554bc",
            "bl fcn.00055b34",
            "bic sl, r0, r0, asr 31",
            "add r0, sl, 1",
            "bl fcn.00029e54",
            "ldr r0, [sp, 0x8c]",
            "bl fcn.000197a4",
            "mov r2, r0",
            "ldr r0, [sp, 0x90]",
            "str r2, [sp, 0x14]",
            "str r1, [sp, 0x10]",
            "bl fcn.000197a4",
            "bl fcn.00055b34",
            "ldr r2, [sp, 0x14]",
            "mov sl, r0",
            "ldr r3, [sp, 0x10]",
            "mov r0, r2",
            "mov r1, r3",
            "bl fcn.00055b34",
            "and r0, sl, r0",
            "b 0x1c878",
            "ldr r0, [sp, 0x8c]",
            "bl fcn.000197a4",
            "bl fcn.00055b34",
            "mvn r0, r0",
            "b 0x1c878",
            "ldr r0, [sp, 0x8c]",
            "bl fcn.000197a4",
            "mov r2, r0",
            "ldr r0, [sp, 0x90]",
            "str r2, [sp, 0x14]",
            "str r1, [sp, 0x10]",
            "bl fcn.000197a4",
            "ldr r2, [sp, 0x14]",
            "ldr r3, [sp, 0x10]",
            "strd r0, r1, [sp, 0x20]",
            "mov r0, r2",
            "mov r1, r3",
            "bl fcn.00055b34",
            "mov sl, r0",
            "ldrd r0, r1, [sp, 0x20]",
            "bl fcn.00055b34",
            "lsl r0, sl, r0",
            "b 0x1c878",
            "ldr r0, [sp, 0x8c]",
            "bl fcn.000197a4",
            "mov r2, r0",
            "ldr r0, [sp, 0x90]",
            "str r2, [sp, 0x14]",
            "str r1, [sp, 0x10]",
            "bl fcn.000197a4",
            "bl fcn.00055b34",
            "ldr r2, [sp, 0x14]",
            "mov sl, r0",
            "ldr r3, [sp, 0x10]",
            "mov r0, r2",
            "mov r1, r3",
            "bl fcn.00055b34",
            "orr r0, sl, r0",
            "b 0x1c878",
            "ldr r0, [sp, 0x8c]",
            "bl fcn.000197a4",
            "mov r2, r0",
            "ldr r0, [sp, 0x90]",
            "str r2, [sp, 0x14]",
            "str r1, [sp, 0x10]",
            "bl fcn.000197a4",
            "ldr r2, [sp, 0x14]",
            "ldr r3, [sp, 0x10]",
            "strd r0, r1, [sp, 0x20]",
            "mov r0, r2",
            "mov r1, r3",
            "bl fcn.00055b90",
            "mov sl, r0",
            "ldrd r0, r1, [sp, 0x20]",
            "bl fcn.00055b90",
            "lsr r0, sl, r0",
            "b 0x1c878",
            "ldr r0, [sp, 0x8c]",
            "bl fcn.000197a4",
            "mov r2, r0",
            "ldr r0, [sp, 0x90]",
            "str r2, [sp, 0x14]",
            "str r1, [sp, 0x10]",
            "bl fcn.000197a4",
            "bl fcn.00055b34",
            "ldr r2, [sp, 0x14]",
            "mov sl, r0",
            "ldr r3, [sp, 0x10]",
            "mov r0, r2",
            "mov r1, r3",
            "bl fcn.00055b34",
            "eor r0, sl, r0",
            "b 0x1c878",
            "ldr r1, sym.imp.toupper",
            "str r1, [sp, 0x20]",
            "ldr r0, [sp, 0x7c]",
            "bl fcn.00029ed8",
            "str r0, [sp, 0xb0]",
            "str r0, [sp, 0xac]",
            "b 0x1c55c",
            "ldr r2, [sp, 0x20]",
            "blx r2",
            "strb r0, [sl]",
            "ldr r3, [sp, 0xac]",
            "add r3, r3, 1",
            "str r3, [sp, 0xac]",
            "ldr sl, [sp, 0xac]",
            "ldrb r0, [sl]",
            "cmp r0, 0",
            "bne 0x1c544",
            "mov r0, r4",
            "ldr r1, [sp, 0xb0]",
            "bl fcn.00019e64",
            "b 0x1c88c",
            "ldr r3, [sp, 0x80]",
            "mov r0, r3",
            "str r3, [sp, 0x20]",
            "bl sym.imp.strlen",
            "ldr sl, [sp, 0x7c]",
            "mov ip, r0",
            "str ip, [sp, 0x14]",
            "mov r0, sl",
            "bl sym.imp.strlen",
            "ldr ip, [sp, 0x14]",
            "rsb r0, ip, r0",
            "cmp r0, 0",
            "cmpge ip, 0",
            "str r0, [sp, 0x2c]",
            "movle r3, 0",
            "movgt r3, 1",
            "ble 0x1c6a8",
            "ldr r3, [r6, -0x14]",
            "cmp r3, 0",
            "bne 0x1c644",
            "mov r0, sl",
            "ldr r1, [sp, 0x20]",
            "bl sym.imp.strstr",
            "cmp r0, 0",
            "str r0, [sp, 0xb0]",
            "rsbne sl, sl, 1",
            "addne r0, r0, sl",
            "b 0x1c878",
            "mov r3, 0",
            "strd r8, sb, [sp, 0x38]",
            "mov sb, r7",
            "mov r8, r5",
            "mov r7, ip",
            "mov r5, r3",
            "add r0, sl, r5",
            "ldr r1, [sp, 0x20]",
            "mov r2, r7",
            "bl sym.imp.strncasecmp",
            "cmp r0, 0",
            "add r3, r5, 1",
            "moveq r7, sb",
            "moveq r5, r8",
            "ldrdeq r8, sb, [sp, 0x38]",
            "beq 0x1c6a8",
            "ldr r1, [sp, 0x2c]",
            "mov r5, r3",
            "cmp r3, r1",
            "ble 0x1c65c",
            "mov r7, sb",
            "mov r5, r8",
            "mov r0, 0",
            "ldrd r8, sb, [sp, 0x38]",
            "b 0x1c878",
            "mov r0, r3",
            "b 0x1c878",
            "cmp sl, 1",
            "ble 0x1c6cc",
            "ldr r0, [sp, 0x90]",
            "bl fcn.000197a4",
            "bl fcn.00055b34",
            "str r0, [sp, 0xb4]",
            "b 0x1c6d4",
            "add r0, sp, 0xb4",
            "bl sym.imp.time",
            "ldr r2, [r6, -0x18]",
            "cmp sl, 0",
            "add r0, sp, 0xb4",
            "ldrne sl, [sp, 0x7c]",
            "ldreq sl, str._a__b__d__H:_M:_S__Z__Y",
            "str r2, [sp, 0x14]",
            "bl sym.imp.localtime",
            "ldr r2, [sp, 0x14]",
            "mov r3, r0",
            "mov r1, 0xf0",
            "mov r0, r2",
            "mov r2, sl",
            "bl sym.imp.strftime",
            "ldr r3, [r6, -0x18]",
            "mov r2, 0",
            "strb r2, [r3, r0]",
            "mov r0, r4",
            "ldr r1, [r6, -0x18]",
            "bl fcn.00019e88",
            "b 0x1c88c",
            "add r1, sp, 0x4c",
            "ldr r0, [sp, 0xa0]",
            "bl fcn.0001ce2c",
            "mov sl, 0",
            "add r3, sp, 0x6c",
            "mov r2, 1",
            "ldr r1, [sp, 0x7c]",
            "str sl, [sp]",
            "str r0, [sp, 0x20]",
            "bl sym.imp.regexec",
            "cmp r0, sl",
            "ldr r1, str.RSTART",
            "ldreq r3, [sp, 0x6c]",
            "mvnne r3, 0",
            "ldr r0, [r6, -0x44]",
            "strne sl, [sp, 0x6c]",
            "addeq r3, r3, 1",
            "streq r3, [sp, 0x6c]",
            "ldreq r3, [sp, 0x70]",
            "addeq r3, r3, 1",
            "str r3, [sp, 0x70]",
            "bl fcn.00019910",
            "mov sl, r0",
            "ldr r0, [sp, 0x6c]",
            "bl fcn.000554bc",
            "mov r2, r0",
            "mov r3, r1",
            "mov r0, sl",
            "bl fcn.00019fe4",
            "ldr r1, str.RLENGTH",
            "ldr r0, [r6, -0x44]",
            "bl fcn.00019910",
            "ldr r3, [sp, 0x6c]",
            "mov sl, r0",
            "ldr r0, [sp, 0x70]",
            "rsb r0, r3, r0",
            "bl fcn.000554bc",
            "mov r2, r0",
            "mov r3, r1",
            "mov r0, sl",
            "bl fcn.00019fe4",
            "ldr r0, [sp, 0x6c]",
            "bl fcn.000554bc",
            "mov r2, r0",
            "mov r3, r1",
            "mov r0, r4",
            "bl fcn.00019fe4",
            "ldr r2, [sp, 0x20]",
            "add r3, sp, 0x4c",
            "cmp r2, r3",
            "bne 0x1c88c",
            "mov r0, r2",
            "bl sym.imp.regfree",
            "b 0x1c88c",
            "ldr r3, [sp, 0x80]",
            "ldr r0, [sp, 0x94]",
            "ldr sl, [sp, 0x9c]",
            "str r3, [sp, 0x10]",
            "bl fcn.000197a4",
            "bl fcn.00055b34",
            "ldr r3, [sp, 0x10]",
            "mov r1, 1",
            "mov r2, r0",
            "str r1, [sp, 4]",
            "mov r0, sl",
            "str r4, [sp]",
            "mov r1, r3",
            "ldr r3, [sp, 0x98]",
            "bl fcn.0001ceb4",
            "b 0x1c88c",
            "ldr r3, [sp, 0x94]",
            "mov r2, 0",
            "str r2, [sp, 4]",
            "ldr r0, [sp, 0x9c]",
            "str r3, [sp]",
            "ldr r1, [sp, 0x80]",
            "b 0x1c874",
            "ldr r0, [sp, 0x9c]",
            "mov r2, 0",
            "ldr r1, [sp, 0x80]",
            "ldr r3, [sp, 0x94]",
            "str r2, [sp, 4]",
            "add r2, r2, 1",
            "str r3, [sp]",
            "bl fcn.0001ceb4",
            "bl fcn.000554bc",
            "mov r2, r0",
            "mov r3, r1",
            "mov r0, r4",
            "bl fcn.00019fe4",
            "ldr r0, [sp, 0x40]",
            "bl fcn.0001b388",
            "b case.0x1b6b4.1",
            "ldr r0, [sp, 0xbc]",
            "bl fcn.0001d140",
            "mov r1, r0",
            "mov r0, r4",
            "b 0x1ca94",
            "ldr r3, [sp, 0x18]",
            "mov r0, r3",
            "str r3, [sp, 0x20]",
            "mov r7, r3",
            "bl fcn.000197a4",
            "cmp sl, 0x50",
            "mov r8, r0",
            "mov sb, r1",
            "strd r8, sb, [sp, 0x18]",
            "mov r8, r0",
            "mov sb, r1",
            "beq 0x1c918",
            "bgt 0x1c904",
            "cmp sl, 0x2d",
            "moveq r8, r0",
            "addeq sb, r1, 0x80000000",
            "beq 0x1c9b0",
            "cmp sl, 0x4d",
            "beq 0x1c94c",
            "cmp sl, 0x21",
            "beq 0x1c984",
            "b 0x1c9b0",
            "cmp sl, 0x6d",
            "beq 0x1c968",
            "cmp sl, 0x70",
            "beq 0x1c93c",
            "b 0x1c9b0",
            "mov r2, 0",
            "ldr r3, [0x0001c5d0]",
            "bl fcn.000551ec",
            "mov r2, r0",
            "mov r3, r1",
            "strd r2, r3, [sp, 0x18]",
            "mov r8, r0",
            "mov sb, r1",
            "b 0x1c9a4",
            "mov r2, 0",
            "ldr r3, [0x0001c5d0]",
            "bl fcn.000551ec",
            "b 0x1c974",
            "mov r2, 0",
            "ldr r3, [0x0001c5d0]",
            "bl fcn.000551e8",
            "mov r8, r0",
            "mov sb, r1",
            "strd r8, sb, [sp, 0x18]",
            "b 0x1c9a4",
            "mov r2, 0",
            "ldr r3, [0x0001c5d0]",
            "bl fcn.000551e8",
            "mov r2, r0",
            "mov r3, r1",
            "strd r2, r3, [sp, 0x18]",
            "b 0x1c9a4",
            "mov r0, r7",
            "bl fcn.00019868",
            "cmp r0, 0",
            "moveq r8, 0",
            "ldreq sb, [0x0001c5d0]",
            "movne r8, 0",
            "movne sb, 0",
            "b 0x1c9b0",
            "ldr r0, [sp, 0x20]",
            "ldrd r2, r3, [sp, 0x18]",
            "bl fcn.00019fe4",
            "mov r0, r4",
            "mov r2, r8",
            "mov r3, sb",
            "b 0x1cd40",
            "ldr r0, [sp, 0x18]",
            "bl fcn.000197a4",
            "bl fcn.00055b34",
            "cmp r0, 0",
            "mov r4, r0",
            "str r0, [sp, 0x18]",
            "ldreq r4, [r6, 0x5c]",
            "beq case.0x1b6b4.1",
            "bl fcn.0001a610",
            "ldr r3, [r6, -0x2c]",
            "cmp r4, r3",
            "ble 0x1c9f8",
            "mov r0, r4",
            "bl fcn.00019554",
            "ldr r3, [r6, -0x24]",
            "sub r4, r4, 1",
            "mov r2, 0x18",
            "mla r4, r2, r4, r3",
            "b case.0x1b6b4.1",
            "mov r0, r8",
            "bl sym.imp.strlen",
            "ldr r1, [sp, 0x18]",
            "mov sl, r0",
            "mov r0, r1",
            "str r1, [sp, 0x20]",
            "bl sym.imp.strlen",
            "add sl, sl, r0",
            "add sl, sl, 2",
            "mov r0, sl",
            "bl fcn.00029e54",
            "bl fcn.00019e64",
            "b case.0x1b6b4.1",
            "mov r0, r8",
            "bl fcn.00019868",
            "cmp r0, 0",
            "beq 0x1cd34",
            "b 0x1cac0",
            "mov r0, r8",
            "bl fcn.00019868",
            "cmp r0, 0",
            "bne 0x1cd28",
            "ldr r0, [r5, 0xc]",
            "bl fcn.0001d350",
            "b 0x1bed8",
            "ldr r0, [sp, 0x18]",
            "sub sl, sl, 0x25",
            "bl fcn.000197a4",
            "mov r2, r0",
            "mov r3, r1",
            "strd r0, r1, [sp, 0x20]",
            "strd r2, r3, [sp, 0x18]",
            "cmp sl, 0xa",
            "ldrls pc, [pc, sl, lsl 2]",
            "b case.0x1caec.2",
            "ldrd r0, r1, [sp, 0x20]",
            "mov r2, r8",
            "mov r3, sb",
            "bl fcn.000551ec",
            "b 0x1cbec",
            "mov r0, r8",
            "mov r1, sb",
            "ldrd r2, r3, [sp, 0x20]",
            "b 0x1cbe8",
            "ldrd r0, r1, [sp, 0x20]",
            "mov r2, r8",
            "mov r3, sb",
            "bl fcn.00055598",
            "b 0x1cbec",
            "ldrd r0, r1, [sp, 0x20]",
            "mov r2, 0",
            "mov r3, 0",
            "bl fcn.00055ad0",
            "cmp r0, 0",
            "bne 0x1cbb0",
            "mov r0, r8",
            "mov r1, sb",
            "ldrd r2, r3, [sp, 0x20]",
            "bl fcn.00055804",
            "b 0x1cbec",
            "mov r0, r8",
            "mov r1, sb",
            "ldrd r2, r3, [sp, 0x20]",
            "bl sym.imp.pow",
            "b 0x1cbec",
            "ldrd r0, r1, [sp, 0x20]",
            "mov r2, 0",
            "mov r3, 0",
            "bl fcn.00055ad0",
            "cmp r0, 0",
            "beq 0x1cbb8",
            "ldr r0, str.Division_by_zero",
            "b 0x1bca8",
            "ldrd r2, r3, [sp, 0x20]",
            "mov r0, r8",
            "mov r1, sb",
            "bl fcn.00055804",
            "bl fcn.00055b34",
            "bl fcn.000554bc",
            "ldrd r2, r3, [sp, 0x20]",
            "bl fcn.00055598",
            "mov r2, r0",
            "mov r3, r1",
            "mov r0, r8",
            "mov r1, sb",
            "bl fcn.000551e8",
            "mov r8, r0",
            "mov sb, r1",
            "ldr r3, [sp, 0x34]",
            "mov r2, r8",
            "cmp r3, 0x1000",
            "mov r3, sb",
            "moveq r0, r4",
            "movne r0, r7",
            "bl fcn.00019fe4",
            "b 0x1bc88",
            "mov r0, r8",
            "str r8, [sp, 0x20]",
            "bl fcn.00019848",
            "cmp r0, 0",
            "beq 0x1cc68",
            "ldr r0, [sp, 0x18]",
            "bl fcn.00019848",
            "cmp r0, 0",
            "beq 0x1cc68",
            "mov r0, r8",
            "bl fcn.000197a4",
            "mov r8, r0",
            "mov sb, r1",
            "ldr r0, [sp, 0x18]",
            "bl fcn.000197a4",
            "mov r2, r0",
            "mov r3, r1",
            "mov r0, r8",
            "mov r1, sb",
            "bl fcn.000551e8",
            "b 0x1cca8",
            "ldr r0, [sp, 0x20]",
            "bl fcn.00019c24",
            "mov r8, r0",
            "ldr r0, [sp, 0x18]",
            "bl fcn.00019c24",
            "ldr r3, [r6, -0x14]",
            "mov r1, r0",
            "str r0, [sp, 0x18]",
            "cmp r3, 0",
            "beq 0x1cc9c",
            "mov r0, r8",
            "bl sym.imp.strcasecmp",
            "b 0x1cca4",
            "mov r0, r8",
            "bl sym.imp.strcmp",
            "bl fcn.000554bc",
            "and r3, sl, 0xfe",
            "mov r8, r0",
            "cmp r3, 2",
            "mov sb, r1",
            "beq 0x1ccdc",
            "cmp r3, 4",
            "beq 0x1ccec",
            "cmp r3, 0",
            "bne 0x1cd04",
            "mov r2, 0",
            "mov r3, 0",
            "bl fcn.00055b20",
            "b 0x1ccf8",
            "mov r2, 0",
            "mov r3, 0",
            "bl fcn.00055b0c",
            "b 0x1ccf8",
            "mov r2, 0",
            "mov r3, 0",
            "bl fcn.00055ad0",
            "subs r0, r0, 0",
            "movne r0, 1",
            "str r0, [sp, 0x18]",
            "tst sl, 1",
            "beq 0x1cd1c",
            "ldr r1, [sp, 0x18]",
            "cmp r1, 0",
            "beq 0x1cd34",
            "b 0x1cd28",
            "ldr r2, [sp, 0x18]",
            "cmp r2, 0",
            "bne 0x1cd34",
            "mov r2, 0",
            "ldr r3, [0x0001c5d0]",
            "b 0x1cd3c",
            "mov r2, 0",
            "mov r3, 0",
            "mov r0, r4",
            "bl fcn.00019fe4",
            "ldr r3, [sp, 0x34]",
            "cmp r3, 0x600",
            "ldrls r5, [r5, 0x10]",
            "bls 0x1cd60",
            "ldr r1, [sp, 0x34]",
            "cmp r1, 0x1000",
            "bhs 0x1cd78",
            "ldr r3, [fp]",
            "ldr r3, [r3, -0xc]",
            "cmp r3, 0",
            "bne 0x1cd78",
            "cmp r5, 0",
            "bne 0x1b600",
            "ldr r0, [sp, 0x30]",
            "bl fcn.0001b388",
            "mov r0, r4",
            "add sp, sp, 0xc4",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0001d350": {
        "function_address": "0x0001d350",
        "instructions": [
            "ldr r3, [0x0001d36c]",
            "push {r4, lr}",
            "ldr r1, [r3]",
            "add r1, r1, 0xb8",
            "bl fcn.0001b5bc",
            "pop {r4, lr}",
            "b fcn.00019868"
        ]
    },
    "sym.imp.popen": {
        "function_address": "0x0000c374",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x3d4]!"
        ]
    },
    "fcn.00029f54": {
        "function_address": "0x00029f54",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r0",
            "bl sym.imp.fopen64",
            "cmp r0, 0",
            "popne {r4, pc}",
            "ldr r0, aav.0x0005beb4",
            "mov r1, r4",
            "bl fcn.00028900"
        ]
    },
    "fcn.00019338": {
        "function_address": "0x00019338",
        "instructions": [
            "ldr r3, [r0]",
            "cmp r3, 0",
            "beq 0x19360",
            "ldr r2, [r3]",
            "and r2, r2, 0xff00",
            "cmp r2, 0x1300",
            "ldreq r2, [r3, 0xc]",
            "streq r2, [r0]",
            "ldreq r3, [r3, 8]",
            "beq 0x19368",
            "mov r2, 0",
            "str r2, [r0]",
            "mov r0, r3",
            "bx lr"
        ]
    },
    "fcn.0001d140": {
        "function_address": "0x0001d140",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x2c",
            "str r0, [sp, 0x1c]",
            "mov r4, 0",
            "mov r0, 1",
            "add r5, sp, 0x1c",
            "str r4, [sp, 0x24]",
            "add sb, sp, 0x24",
            "bl fcn.00019404",
            "mov r7, r0",
            "mov r0, r5",
            "bl fcn.00019338",
            "mov r1, r7",
            "bl fcn.0001b5bc",
            "bl fcn.00019c24",
            "bl fcn.00029ed8",
            "str r0, [sp, 0x14]",
            "mov r6, r0",
            "b 0x1d308",
            "add r8, r8, 1",
            "ldrb r3, [r8]",
            "cmp r3, 0",
            "beq 0x1d1c4",
            "cmp r3, 0x25",
            "bne 0x1d18c",
            "ldrb r3, [r8, 1]!",
            "cmp r3, 0x25",
            "beq 0x1d18c",
            "b 0x1d1c4",
            "cmp sl, 0x2a",
            "bne 0x1d1c4",
            "ldr r0, str._x_formats_are_not_supported",
            "bl fcn.00019af4",
            "mov r5, r8",
            "ldrb sl, [r8], 1",
            "cmp sl, 0",
            "beq 0x1d1e4",
            "mov r0, sl",
            "bl sym.imp.isalpha",
            "cmp r0, 0",
            "beq 0x1d1b4",
            "rsb sl, r6, 0xf0",
            "add r2, sp, 0x20",
            "add sl, r5, sl",
            "mov r0, sb",
            "add r8, sl, r4",
            "mov r1, r8",
            "bl fcn.000194dc",
            "ldrb fp, [r5]",
            "add r0, sp, 0x1c",
            "cmp fp, 0",
            "addne r5, r5, 1",
            "ldrb r3, [r5]",
            "str r3, [sp, 0x18]",
            "mov r3, 0",
            "strb r3, [r5]",
            "bl fcn.00019338",
            "mov r1, r7",
            "bl fcn.0001b5bc",
            "cmp fp, 0x63",
            "cmpne fp, 0",
            "movne r3, 0",
            "moveq r3, 1",
            "bne 0x1d288",
            "ldr r8, [sp, 0x24]",
            "str r0, [sp, 0x10]",
            "bl fcn.00019848",
            "cmp r0, 0",
            "add r8, r8, r4",
            "ldr r2, [sp, 0x10]",
            "beq 0x1d270",
            "mov r0, r2",
            "bl fcn.000197a4",
            "bl fcn.00055b90",
            "uxtb r2, r0",
            "b 0x1d27c",
            "mov r0, r2",
            "bl fcn.00019c24",
            "ldrb r2, [r0]",
            "mov r0, r8",
            "mov r1, r6",
            "b 0x1d2bc",
            "cmp fp, 0x73",
            "bne 0x1d2c4",
            "bl fcn.00019c24",
            "mov sl, r0",
            "bl sym.imp.strlen",
            "add r2, sp, 0x20",
            "add r1, r0, r8",
            "mov r0, sb",
            "bl fcn.000194dc",
            "ldr r0, [sp, 0x24]",
            "mov r1, r6",
            "mov r2, sl",
            "add r0, r0, r4",
            "bl sym.imp.sprintf",
            "b 0x1d2f0",
            "ldr r8, [sp, 0x24]",
            "str r3, [sp, 0x10]",
            "bl fcn.000197a4",
            "ldr r3, [sp, 0x10]",
            "add r8, r8, r4",
            "strd r0, r1, [sp]",
            "mov r2, r6",
            "mov r0, r8",
            "mov r1, sl",
            "str r3, [sp, 8]",
            "bl fcn.00019b1c",
            "add r0, r0, r4",
            "ldr r3, [sp, 0x18]",
            "cmp r4, r0",
            "movlt r4, r0",
            "mov r6, r5",
            "strb r3, [r5]",
            "ldrb r5, [r6]",
            "cmp r5, 0",
            "movne r8, r6",
            "bne 0x1d190",
            "add r1, r4, 1",
            "ldr r0, [sp, 0x24]",
            "bl fcn.00029e84"
        ]
    },
    "fcn.00019a28": {
        "function_address": "0x00019a28",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r4, r0",
            "mov r0, r1",
            "mov r7, r1",
            "bl fcn.0001927c",
            "ldr r1, [r4, 4]",
            "bl fcn.000550a8",
            "ldr r6, [r4, 0x10]",
            "add r6, r6, r1, lsl 2",
            "b 0x19aa0",
            "add r0, r5, 0x1c",
            "mov r1, r7",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x19a9c",
            "mov r0, r7",
            "bl sym.imp.strlen",
            "ldr r3, [r4, 0xc]",
            "mvn r0, r0",
            "add r0, r3, r0",
            "ldr r3, [r4]",
            "str r0, [r4, 0xc]",
            "mov r0, r5",
            "sub r3, r3, 1",
            "str r3, [r4]",
            "ldr r3, [r5, 0x18]",
            "str r3, [r6]",
            "pop {r4, r5, r6, r7, r8, lr}",
            "b sym.imp.free",
            "add r6, r5, 0x18",
            "ldr r5, [r6]",
            "cmp r5, 0",
            "bne 0x19a50",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.0001a320": {
        "function_address": "0x0001a320",
        "instructions": [
            "cmp r0, r1",
            "push {r3, r4, r5, lr}",
            "mov r4, r0",
            "mov r5, r1",
            "beq 0x1a36c",
            "bl fcn.00019514",
            "ldr r3, [r5]",
            "ldr r2, [r4]",
            "ldr r0, [r5, 0x10]",
            "bic r3, r3, 0x7c00",
            "bic r3, r3, 2",
            "orr r3, r2, r3",
            "cmp r0, 0",
            "str r3, [r4]",
            "ldrd r2, r3, [r5, 8]",
            "strd r2, r3, [r4, 8]",
            "beq 0x1a36c",
            "bl fcn.00029ed8",
            "str r0, [r4, 0x10]",
            "mov r0, r4",
            "bl fcn.00019cac",
            "mov r0, r4",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.0001cd8c": {
        "function_address": "0x0001cd8c",
        "instructions": [
            "push {r0, r1, r2, r3, r4, r5, r7, lr}",
            "mov r4, r0",
            "mov r0, sp",
            "bl fcn.0001966c",
            "ldr r3, [0x0001ce28]",
            "ldr r3, [r3]",
            "ldr r2, [r3, -0x10]",
            "cmp r2, 0",
            "bne 0x1cdc8",
            "mov r1, 1",
            "str r2, [r3, -0xc]",
            "str r1, [r3, -0x10]",
            "mov r1, sp",
            "ldr r0, [r3, -0x60]",
            "bl fcn.0001b5bc",
            "ldr r3, [0x0001ce28]",
            "mov r6, 0",
            "ldr r7, [r3]",
            "b 0x1ce10",
            "ldr r3, [r3, 0x10]",
            "ldr r5, [r3, r6, lsl 2]",
            "b 0x1ce04",
            "ldr r0, [r5]",
            "cmp r0, 0",
            "beq 0x1ce00",
            "ldr r3, [r5, 0x14]",
            "cmp r3, 0",
            "beq 0x1ce00",
            "bl sym.imp.pclose",
            "ldr r5, [r5, 0x18]",
            "cmp r5, 0",
            "bne 0x1cde4",
            "add r6, r6, 1",
            "ldr r3, [r7, -0x3c]",
            "ldr r2, [r3, 4]",
            "cmp r6, r2",
            "blo 0x1cdd8",
            "mov r0, r4",
            "bl sym.imp.exit"
        ]
    },
    "fcn.0001a610": {
        "function_address": "0x0001a610",
        "instructions": [
            "ldr r3, [0x0001a6cc]",
            "push {r0, r1, r4, r5, r6, r7, r8, sb, sl, lr}",
            "ldr r4, [r3]",
            "ldr r5, [r4, -4]",
            "sub r6, r4, 0x78",
            "cmp r5, 0",
            "bne 0x1a6c8",
            "mov r3, 1",
            "ldr r0, [r4, 0x60]",
            "str r3, [r4, -4]",
            "add r8, sp, 8",
            "bl sym.imp.free",
            "mov r0, r5",
            "mov r7, r5",
            "bl fcn.00019554",
            "ldr r0, [r4, 0x5c]",
            "bl fcn.00019c24",
            "add r1, r4, 0x130",
            "add r2, r4, 0x60",
            "bl fcn.0001a37c",
            "mov sl, r0",
            "bl fcn.00019554",
            "ldr r3, [r4, 0x60]",
            "str r3, [r8, -4]!",
            "b 0x1a6a0",
            "mov r0, r8",
            "ldr sb, [r6, 0x54]",
            "bl fcn.00019300",
            "ldr r3, [r6, 0x54]",
            "add r7, r7, 1",
            "add sb, sb, r5",
            "str r0, [sb, 0x10]",
            "ldr r2, [r3, r5]",
            "orr r2, r2, 0x5200",
            "str r2, [r3, r5]",
            "add r5, r5, 0x18",
            "cmp r7, sl",
            "blt 0x1a674",
            "ldr r0, [r4, 0x50]",
            "bl fcn.00019514",
            "ldr r5, [r4, 0x50]",
            "movw r3, 0x401",
            "ldr r0, [r4, -0x2c]",
            "str r3, [r5]",
            "bl fcn.000554bc",
            "strd r0, r1, [r5, 8]",
            "pop {r2, r3, r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "fcn.0001ce2c": {
        "function_address": "0x0001ce2c",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r6, r0",
            "ldr r3, [r0]",
            "mov r4, r1",
            "ldr r7, [0x0001ceb0]",
            "and r3, r3, 0xff00",
            "cmp r3, 0x2100",
            "bne 0x1ce64",
            "ldr r3, [r7]",
            "ldr r3, [r3, -0x14]",
            "cmp r3, 0",
            "ldrne r4, [r0, 0xc]",
            "ldreq r4, [r0, 8]",
            "b 0x1cea8",
            "mov r0, 1",
            "bl fcn.00019404",
            "mov r5, r0",
            "mov r0, r6",
            "mov r1, r5",
            "bl fcn.0001b5bc",
            "bl fcn.00019c24",
            "ldr r3, [r7]",
            "mov r1, r0",
            "mov r0, r4",
            "ldr r2, [r3, -0x14]",
            "cmp r2, 0",
            "moveq r2, 1",
            "movne r2, 3",
            "bl fcn.0002a754",
            "mov r0, r4",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.0001b388": {
        "function_address": "0x0001b388",
        "instructions": [
            "ldr r3, [0x0001b458]",
            "push {r4, r5, r6, lr}",
            "mov r5, r0",
            "ldr r3, [r3]",
            "sub r6, r3, 0x78",
            "ldr r3, [r3, -0x20]",
            "add r2, r3, 0x10",
            "cmp r0, r2",
            "blo 0x1b3bc",
            "ldr r3, [r3, 4]",
            "cmp r0, r3",
            "movlo r4, r0",
            "blo 0x1b418",
            "ldr r0, str.Internal_error",
            "bl fcn.00019af4",
            "ldr r2, [r4]",
            "movw r3, 0x2002",
            "and r3, r2, r3",
            "cmp r3, 2",
            "bne 0x1b3f8",
            "mov r0, r4",
            "bl fcn.0001939c",
            "bl fcn.00019604",
            "ldr r3, [r4, 0x14]",
            "ldr r0, [r3, 0x10]",
            "bl sym.imp.free",
            "ldr r0, [r4, 0x14]",
            "bl sym.imp.free",
            "ldr r3, [r4]",
            "tst r3, 0x800",
            "beq 0x1b40c",
            "ldr r0, [r4, 0x14]",
            "bl sym.imp.free",
            "mov r0, r4",
            "add r4, r4, 0x18",
            "bl fcn.00019514",
            "ldr r3, [r6, 0x58]",
            "ldr r2, [r3, 4]",
            "cmp r4, r2",
            "blo 0x1b3c4",
            "str r5, [r3, 4]",
            "b 0x1b434",
            "str r2, [r6, 0x58]",
            "ldr r3, [r6, 0x58]",
            "ldr r2, [r3, 8]",
            "cmp r2, 0",
            "popeq {r4, r5, r6, pc}",
            "add r1, r3, 0x10",
            "ldr r3, [r3, 4]",
            "cmp r3, r1",
            "beq 0x1b430",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.0001b494": {
        "function_address": "0x0001b494",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sb, lr}",
            "ldr r3, [0x0001b5ac]",
            "ldr r4, [r3]",
            "ldr r0, [r4, 0x78]",
            "cmp r0, 0",
            "beq 0x1b4b0",
            "bl sym.imp.fclose",
            "mov r3, 0",
            "ldr r7, obj.stdin",
            "str r3, [r4, 0x78]",
            "str r3, [r4, 0x80]",
            "str r3, [r4, 0x88]",
            "ldr r3, [0x0001b5ac]",
            "ldr r6, [r3]",
            "ldr r0, [r6, 0x38]",
            "bl fcn.000197a4",
            "mov r4, r0",
            "mov r5, r1",
            "ldr r0, [r6, 0x3c]",
            "bl fcn.000197a4",
            "mov r2, 0",
            "mov r8, r0",
            "mov sb, r1",
            "ldr r3, [0x0001b5b4]",
            "mov r0, r4",
            "mov r1, r5",
            "bl fcn.000551ec",
            "mov r2, r8",
            "mov r3, sb",
            "bl fcn.00055b0c",
            "cmp r0, 0",
            "beq 0x1b52c",
            "ldr r3, [r6, 0x74]",
            "cmp r3, 0",
            "bne 0x1b5a4",
            "ldr r4, [r7]",
            "ldr r8, aav.0x0005ea74",
            "b 0x1b57c",
            "ldr r0, [r6, 0x38]",
            "bl fcn.0001a018",
            "bl fcn.00019c24",
            "mov r4, r0",
            "ldr r0, [r6, 0x40]",
            "bl fcn.0001939c",
            "mov r1, r4",
            "bl fcn.00019910",
            "bl fcn.00019c24",
            "subs r8, r0, 0",
            "beq 0x1b4cc",
            "ldrb r3, [r8]",
            "cmp r3, 0",
            "beq 0x1b4cc",
            "bl fcn.00019ed8",
            "cmp r0, 0",
            "bne 0x1b4cc",
            "mov r0, r8",
            "bl fcn.0001b460",
            "mov r4, r0",
            "cmp r4, 0",
            "beq 0x1b4cc",
            "mov r3, 1",
            "ldr r0, [r6, 0x30]",
            "str r3, [r6, 0x74]",
            "mov r1, r8",
            "bl fcn.00019e88",
            "mov r0, r6",
            "str r4, [r0, 0x78]!",
            "pop {r3, r4, r5, r6, r7, r8, sb, pc}",
            "mov r0, 0",
            "pop {r3, r4, r5, r6, r7, r8, sb, pc}"
        ]
    },
    "fcn.0001a048": {
        "function_address": "0x0001a048",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r7, r0",
            "sub sp, sp, 0x3c",
            "ldr r0, [r0]",
            "str r1, [sp, 0x14]",
            "bl sym.imp.fileno",
            "ldr r2, [r7, 0xc]",
            "ldr r3, [r7, 4]",
            "str r0, [sp, 0x1c]",
            "str r2, [sp, 0x34]",
            "ldr r2, [0x0001a314]",
            "cmp r3, 0",
            "str r3, [sp, 0x30]",
            "ldr sl, [r7, 8]",
            "ldr r2, [r2]",
            "ldr r4, [r7, 0x10]",
            "ldrb r2, [r2, 0x184]",
            "str r2, [sp, 0x18]",
            "bne 0x1a0a4",
            "add r0, sp, 0x30",
            "mov r1, 0x100",
            "add r2, sp, 0x34",
            "bl fcn.000194dc",
            "mov ip, 0",
            "mov r6, ip",
            "mov fp, ip",
            "b 0x1a0bc",
            "mov r6, r4",
            "mov r4, sb",
            "cmp r4, 0",
            "ldr r5, [sp, 0x30]",
            "ble 0x1a1bc",
            "ldr r0, [0x0001a314]",
            "add r5, r5, sl",
            "ldr r3, [r0]",
            "ldr r2, [r3, 0x184]",
            "and r2, r2, 0xff00",
            "cmp r2, 0x2100",
            "bne 0x1a124",
            "ldr r2, [r3, -0x14]",
            "mov r1, r5",
            "cmp r2, 0",
            "mov r2, 0",
            "ldrne r0, [r3, 0x190]",
            "ldreq r0, [r3, 0x18c]",
            "add r3, sp, 0x20",
            "str r2, [sp]",
            "add r2, r2, 1",
            "bl sym.imp.regexec",
            "cmp r0, 0",
            "ldreq r6, [sp, 0x24]",
            "ldreq r8, [sp, 0x20]",
            "ldrbeq r3, [r5, r6]",
            "beq 0x1a1b0",
            "b 0x1a1bc",
            "ldr r3, [sp, 0x18]",
            "cmp r3, 0",
            "addeq r3, r5, fp",
            "beq 0x1a174",
            "add r8, r5, r6",
            "ldr r1, [sp, 0x18]",
            "mov r0, r8",
            "bl sym.imp.strchr",
            "subs r1, r0, 0",
            "bne 0x1a160",
            "mov r0, r8",
            "rsb r2, r6, r4",
            "bl sym.imp.memchr",
            "subs r1, r0, 0",
            "beq 0x1a1bc",
            "rsb r8, r5, r1",
            "mov ip, fp",
            "add r6, r8, 1",
            "b 0x1a308",
            "add fp, fp, 1",
            "mov r0, r3",
            "ldrb r2, [r3], 1",
            "cmp r2, 0xa",
            "beq 0x1a170",
            "ldr r1, [0x0001a318]",
            "bl sym.imp.strstr",
            "subs r8, r0, 0",
            "rsbne r8, r5, r8",
            "movne r6, r8",
            "bne 0x1a1a4",
            "b 0x1a1bc",
            "add r6, r6, 1",
            "ldrb r3, [r5, r6]",
            "cmp r3, 0xa",
            "beq 0x1a1a0",
            "cmp r3, 0",
            "bne 0x1a304",
            "b 0x1a1c4",
            "mov r6, r4",
            "mov r8, r4",
            "cmp sl, 0",
            "ble 0x1a1e0",
            "ldr r0, [sp, 0x30]",
            "add r2, r4, 1",
            "add r1, r0, sl",
            "mov sl, 0",
            "bl sym.imp.memmove",
            "add r1, r4, 0x80",
            "add r0, sp, 0x30",
            "add r1, r1, sl",
            "add r2, sp, 0x34",
            "bl fcn.000194dc",
            "ldr r5, [sp, 0x30]",
            "ldr r2, [sp, 0x34]",
            "ldr r0, [sp, 0x1c]",
            "add r5, r5, sl",
            "sub r2, r2, 1",
            "add r1, r5, r4",
            "rsb r2, r4, r2",
            "bl fcn.00028f70",
            "add sb, r0, r4",
            "cmp sb, r4",
            "movge r3, 1",
            "bge 0x1a254",
            "ldr r2, [0x0001a31c]",
            "ldr r0, [0x0001a314]",
            "ldr r3, [r2]",
            "ldr sb, [r0]",
            "ldr r0, [r3]",
            "bl fcn.000554bc",
            "mov r2, r0",
            "mov r3, r1",
            "ldr r0, [sb, 0x44]",
            "bl fcn.00019fe4",
            "mov r3, 0",
            "mov sb, r3",
            "cmp sb, r4",
            "mov r0, 0",
            "strb r0, [r5, sb]",
            "bgt 0x1a0b4",
            "cmp sb, 0",
            "mov ip, fp",
            "mov fp, r3",
            "subeq fp, r3, 1",
            "beq 0x1a2d8",
            "ldrb r3, [r5, r8]",
            "mov r4, 0",
            "strb r4, [r5, r8]",
            "add r2, r5, r8",
            "add r1, r5, ip",
            "ldr r0, [sp, 0x14]",
            "str r2, [sp, 0x10]",
            "str r3, [sp, 0xc]",
            "bl fcn.00019e88",
            "ldr r0, [sp, 0x14]",
            "ldr r3, [sp, 0xc]",
            "ldr r1, [r0]",
            "orr r1, r1, 0x200",
            "str r1, [r0]",
            "strb r3, [r5, r8]",
            "ldr r3, [0x0001a314]",
            "ldrb r8, [r5, r6]",
            "strb r4, [r5, r6]",
            "ldr r3, [r3]",
            "ldr r2, [sp, 0x10]",
            "ldr r0, [r3, 0x2c]",
            "mov r1, r2",
            "bl fcn.00019e88",
            "strb r8, [r5, r6]",
            "ldr r3, [sp, 0x30]",
            "add sl, r6, sl",
            "rsb r6, r6, sb",
            "str sl, [r7, 8]",
            "str r6, [r7, 0x10]",
            "mov r0, fp",
            "str r3, [r7, 4]",
            "ldr r3, [sp, 0x34]",
            "str r3, [r7, 0xc]",
            "add sp, sp, 0x3c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "mov ip, fp",
            "mov sb, r4",
            "mov fp, 1",
            "b 0x1a278"
        ]
    },
    "sym.imp.rand": {
        "function_address": "0x0000c170",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x52c]!"
        ]
    },
    "fcn.00055804": {
        "function_address": "0x00055804",
        "instructions": [
            "bgt 0x557e4",
            "cmn r4, 0x36",
            "movle r0, 0",
            "andle r1, r1, 0x80000000",
            "pople {r4, r5, r6, pc}",
            "rsb r4, r4, 0",
            "subs r4, r4, 0x20",
            "bge 0x55700",
            "adds r4, r4, 0xc",
            "bgt 0x556d4",
            "add r4, r4, 0x14",
            "rsb r5, r4, 0x20",
            "lsl r3, r0, r5",
            "lsr r0, r0, r4",
            "orr r0, r0, r1, lsl r5",
            "and r2, r1, 0x80000000",
            "bic r1, r1, 0x80000000",
            "adds r0, r0, r3, lsr 31",
            "adc r1, r2, r1, lsr r4",
            "orrs lr, lr, r3, lsl 1",
            "biceq r0, r0, r3, lsr 31",
            "pop {r4, r5, r6, pc}",
            "rsb r4, r4, 0xc",
            "rsb r5, r4, 0x20",
            "lsl r3, r0, r4",
            "lsr r0, r0, r5",
            "orr r0, r0, r1, lsl r4",
            "and r1, r1, 0x80000000",
            "adds r0, r0, r3, lsr 31",
            "adc r1, r1, 0",
            "orrs lr, lr, r3, lsl 1",
            "biceq r0, r0, r3, lsr 31",
            "pop {r4, r5, r6, pc}",
            "rsb r5, r4, 0x20",
            "orr lr, lr, r0, lsl r5",
            "lsr r3, r0, r4",
            "orr r3, r3, r1, lsl r5",
            "lsr r0, r1, r4",
            "and r1, r1, 0x80000000",
            "bic r0, r0, r1, lsr r4",
            "add r0, r0, r3, lsr 31",
            "orrs lr, lr, r3, lsl 1",
            "biceq r0, r0, r3, lsr 31",
            "pop {r4, r5, r6, pc}",
            "and r1, r1, 0x80000000",
            "orr r1, r1, 0x7f000000",
            "orr r1, r1, 0xf00000",
            "mov r0, 0",
            "pop {r4, r5, r6, pc}",
            "push {r4, r5, r6, lr}",
            "mov ip, 0xff",
            "orr ip, ip, 0x700",
            "ands r4, ip, r1, lsr 20",
            "andsne r5, ip, r3, lsr 20",
            "teqne r4, ip",
            "teqne r5, ip",
            "bleq fcn.00055998",
            "sub r4, r4, r5",
            "eor lr, r1, r3",
            "orrs r5, r2, r3, lsl 12",
            "lsl r1, r1, 0xc",
            "beq 0x55968",
            "lsl r3, r3, 0xc",
            "mov r5, 0x10000000",
            "orr r3, r5, r3, lsr 4",
            "orr r3, r3, r2, lsr 24",
            "lsl r2, r2, 8",
            "orr r5, r5, r1, lsr 4",
            "orr r5, r5, r0, lsr 24",
            "lsl r6, r0, 8",
            "and r1, lr, 0x80000000",
            "cmp r5, r3",
            "cmpeq r6, r2",
            "adc r4, r4, 0xfd",
            "add r4, r4, 0x300",
            "bhs 0x55878",
            "lsrs r3, r3, 1",
            "rrx r2, r2",
            "subs r6, r6, r2",
            "sbc r5, r5, r3",
            "lsrs r3, r3, 1",
            "rrx r2, r2",
            "mov r0, 0x100000",
            "mov ip, 0x80000",
            "subs lr, r6, r2",
            "sbcs lr, r5, r3",
            "subhs r6, r6, r2",
            "movhs r5, lr",
            "orrhs r0, r0, ip",
            "lsrs r3, r3, 1",
            "rrx r2, r2",
            "subs lr, r6, r2",
            "sbcs lr, r5, r3",
            "subhs r6, r6, r2",
            "movhs r5, lr",
            "orrhs r0, r0, ip, lsr 1",
            "lsrs r3, r3, 1",
            "rrx r2, r2",
            "subs lr, r6, r2",
            "sbcs lr, r5, r3",
            "subhs r6, r6, r2",
            "movhs r5, lr",
            "orrhs r0, r0, ip, lsr 2",
            "lsrs r3, r3, 1",
            "rrx r2, r2",
            "subs lr, r6, r2",
            "sbcs lr, r5, r3",
            "subhs r6, r6, r2",
            "movhs r5, lr",
            "orrhs r0, r0, ip, lsr 3",
            "orrs lr, r5, r6",
            "beq 0x55938",
            "lsl r5, r5, 4",
            "orr r5, r5, r6, lsr 28",
            "lsl r6, r6, 4",
            "lsl r3, r3, 3",
            "orr r3, r3, r2, lsr 29",
            "lsl r2, r2, 3",
            "lsrs ip, ip, 4",
            "bne 0x55890",
            "tst r1, 0x100000",
            "bne 0x55944",
            "orr r1, r1, r0",
            "mov r0, 0",
            "mov ip, 0x80000000",
            "b 0x55890",
            "tst r1, 0x100000",
            "orreq r1, r1, r0",
            "moveq r0, 0",
            "subs ip, r4, 0xfd",
            "cmphi ip, 0x700",
            "bhi 0x5567c",
            "subs ip, r5, r3",
            "subseq ip, r6, r2",
            "lsrseq ip, r0, 1",
            "adcs r0, r0, 0",
            "adc r1, r1, r4, lsl 20",
            "pop {r4, r5, r6, pc}",
            "and lr, lr, 0x80000000",
            "orr r1, lr, r1, lsr 12",
            "adds r4, r4, ip, lsr 1",
            "rsbsgt r5, r4, ip",
            "orrgt r1, r1, r4, lsl 20",
            "popgt {r4, r5, r6, pc}",
            "orr r1, r1, 0x100000",
            "mov lr, 0",
            "subs r4, r4, 1",
            "b 0x5567c"
        ]
    },
    "sym.imp.cos": {
        "function_address": "0x0000c314",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x414]!"
        ]
    },
    "sym.imp.exp": {
        "function_address": "0x0000c14c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x544]!"
        ]
    },
    "sym.imp.log": {
        "function_address": "0x0000bce4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x834]!"
        ]
    },
    "sym.imp.sin": {
        "function_address": "0x0000c158",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x53c]!"
        ]
    },
    "sym.imp.sqrt": {
        "function_address": "0x0000b6e4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xc34]!"
        ]
    },
    "fcn.00055498": {
        "function_address": "0x00055498",
        "instructions": [
            "teq r0, 0",
            "moveq r1, 0",
            "bxeq lr",
            "push {r4, r5, lr}",
            "mov r4, 0x400",
            "add r4, r4, 0x32",
            "mov r5, 0",
            "mov r1, 0",
            "b 0x55334"
        ]
    },
    "fcn.00055b90": {
        "function_address": "0x00055b90",
        "instructions": [
            "lsls r2, r1, 1",
            "bhs 0x55bc4",
            "adds r2, r2, 0x200000",
            "bhs 0x55bcc",
            "bpl 0x55bc4",
            "mvn r3, 0x3e0",
            "subs r2, r3, r2, asr 21",
            "bmi 0x55bd4",
            "lsl r3, r1, 0xb",
            "orr r3, r3, 0x80000000",
            "orr r3, r3, r0, lsr 21",
            "lsr r0, r3, r2",
            "bx lr",
            "mov r0, 0",
            "bx lr",
            "orrs r0, r0, r1, lsl 12",
            "bne 0x55bdc",
            "mvn r0, 0",
            "bx lr",
            "mov r0, 0",
            "bx lr"
        ]
    },
    "sym.imp.time": {
        "function_address": "0x0000bd44",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x7f4]!"
        ]
    },
    "sym.imp.srand": {
        "function_address": "0x0000c350",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x3ec]!"
        ]
    },
    "sym.imp.pclose": {
        "function_address": "0x0000bc6c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x884]!"
        ]
    },
    "sym.imp.atan2": {
        "function_address": "0x0000c230",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x4ac]!"
        ]
    },
    "fcn.00019fa0": {
        "function_address": "0x00019fa0",
        "instructions": [
            "push {r0, r1, r2, r3, r4, r5, r6, lr}",
            "mov r3, r1",
            "mov r6, r0",
            "mov r5, r2",
            "mov r0, sp",
            "mov r2, r3",
            "ldr r1, aav.0x0005c33c",
            "mov r4, sp",
            "bl sym.imp.sprintf",
            "mov r0, r6",
            "bl fcn.0001939c",
            "mov r1, sp",
            "bl fcn.00019910",
            "mov r1, r5",
            "bl fcn.00019eb8",
            "pop {r0, r1, r2, r3, r4, r5, r6, pc}"
        ]
    },
    "fcn.000551e8": {
        "function_address": "0x000551e8",
        "instructions": [
            "eor r3, r3, 0x80000000"
        ]
    },
    "sym.imp.strstr": {
        "function_address": "0x0000c20c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x4c4]!"
        ]
    },
    "sym.imp.strncasecmp": {
        "function_address": "0x0000bb7c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x924]!"
        ]
    },
    "sym.imp.localtime": {
        "function_address": "0x0000be04",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x774]!"
        ]
    },
    "sym.imp.strftime": {
        "function_address": "0x0000b6f0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xc2c]!"
        ]
    },
    "fcn.0001ceb4": {
        "function_address": "0x0001ceb4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x9c",
            "mov r7, r3",
            "str r1, [sp, 0x14]",
            "mov r3, 0",
            "add r1, sp, 0x70",
            "str r3, [sp, 0x94]",
            "mov r6, 0",
            "str r2, [sp, 0x18]",
            "mov r5, r6",
            "bl fcn.0001ce2c",
            "cmp r7, 0",
            "ldr r2, [sp, 0xc0]",
            "ldreq r3, [0x0001d13c]",
            "mov fp, r0",
            "ldreq r3, [r3]",
            "ldreq r7, [r3, 0x5c]",
            "cmp r2, 0",
            "ldreq r3, [0x0001d13c]",
            "mov r0, r7",
            "ldreq r3, [r3]",
            "ldreq r3, [r3, 0x5c]",
            "streq r3, [sp, 0xc0]",
            "bl fcn.00019c24",
            "mov r4, r0",
            "ldr r0, [sp, 0x14]",
            "bl sym.imp.strlen",
            "str r0, [sp, 0xc]",
            "b 0x1d0b4",
            "ldr r8, [sp, 0x24]",
            "add r0, sp, 0x94",
            "ldr r2, [sp, 0xc]",
            "add r5, r5, 1",
            "ldr r3, [sp, 0x20]",
            "add sb, r6, r8",
            "add r1, sb, r2",
            "add r2, sp, 0x90",
            "str r3, [sp, 0x10]",
            "bl fcn.000194dc",
            "ldr r0, [sp, 0x94]",
            "mov r1, r4",
            "mov r2, r8",
            "add r0, r0, r6",
            "bl sym.imp.memcpy",
            "ldr r3, [sp, 0x18]",
            "cmp r5, r3",
            "blt 0x1d070",
            "ldr r2, [sp, 0x10]",
            "mov ip, sl",
            "str r5, [sp, 0x1c]",
            "mov sl, r8",
            "rsb r3, r8, r2",
            "add sb, sb, r3",
            "ldr r3, [sp, 0x14]",
            "mov r8, r3",
            "b 0x1d05c",
            "ldr r1, [sp, 0x94]",
            "cmp r2, 0x5c",
            "addeq ip, ip, 1",
            "strb r2, [r1, sb]",
            "add sb, sb, 1",
            "beq 0x1d05c",
            "cmp r2, 0x26",
            "beq 0x1cfd8",
            "ldr r3, [sp, 0xc4]",
            "cmp r3, 0",
            "cmpne r2, 0x2f",
            "movle r1, 0",
            "movgt r1, 1",
            "movle ip, r1",
            "ble 0x1d05c",
            "cmp r2, 0x39",
            "bgt 0x1d058",
            "cmp r2, 0x26",
            "add r1, ip, 3",
            "addne ip, ip, 1",
            "subne r6, r2, 0x30",
            "moveq r6, 0",
            "ands ip, ip, 1",
            "sub sb, sb, r1, asr 1",
            "ldrne r1, [sp, 0x94]",
            "strbne r2, [r1, sb]",
            "addne sb, sb, 1",
            "bne 0x1d058",
            "add r2, sp, 0x98",
            "ldr r3, [sp, 0xc]",
            "add r6, r2, r6, lsl 3",
            "add r0, sp, 0x94",
            "ldr r2, [r6, -0x78]",
            "ldr r5, [r6, -0x74]",
            "str ip, [sp, 8]",
            "rsb r5, r2, r5",
            "add r2, sp, 0x90",
            "add r1, r3, r5",
            "add r1, r1, sb",
            "bl fcn.000194dc",
            "ldr r1, [r6, -0x78]",
            "mov r2, r5",
            "ldr r0, [sp, 0x94]",
            "add r1, r4, r1",
            "add r0, r0, sb",
            "add sb, sb, r5",
            "bl sym.imp.memcpy",
            "ldr ip, [sp, 8]",
            "b 0x1d05c",
            "mov ip, 0",
            "ldrb r2, [r8], 1",
            "cmp r2, 0",
            "bne 0x1cf94",
            "ldr r5, [sp, 0x1c]",
            "mov r8, sl",
            "ldr r2, [sp, 0x18]",
            "add r4, r4, r8",
            "cmp r5, r2",
            "beq 0x1d0e8",
            "ldr r3, [sp, 0x10]",
            "cmp r8, r3",
            "bne 0x1d0b0",
            "ldr r2, [sp, 0x94]",
            "mov r3, sb",
            "ldrb r1, [r4], 1",
            "strb r1, [r2, sb]",
            "add sb, sb, 1",
            "ldr r2, [sp, 0x94]",
            "ldrb r3, [r2, r3]",
            "cmp r3, 0",
            "beq 0x1d0e8",
            "mov r6, sb",
            "mov r0, r7",
            "bl fcn.00019c24",
            "subs r0, r4, r0",
            "movne r0, 1",
            "mov r1, r4",
            "str r0, [sp]",
            "mov r2, 0xa",
            "mov r0, fp",
            "add r3, sp, 0x20",
            "bl sym.imp.regexec",
            "subs sl, r0, 0",
            "beq 0x1cf28",
            "mov sb, r6",
            "mov r0, r4",
            "bl sym.imp.strlen",
            "add r2, sp, 0x90",
            "add r1, sb, r0",
            "add r0, sp, 0x94",
            "bl fcn.000194dc",
            "ldr r0, [sp, 0x94]",
            "mov r1, r4",
            "add r0, r0, sb",
            "bl sym.imp.strcpy",
            "ldr r0, [sp, 0xc0]",
            "ldr r1, [sp, 0x94]",
            "bl fcn.00019e64",
            "add r3, sp, 0x70",
            "cmp fp, r3",
            "bne 0x1d130",
            "mov r0, fp",
            "bl sym.imp.regfree",
            "mov r0, r5",
            "add sp, sp, 0x9c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00055598": {
        "function_address": "0x00055598",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov ip, 0xff",
            "orr ip, ip, 0x700",
            "ands r4, ip, r1, lsr 20",
            "andsne r5, ip, r3, lsr 20",
            "teqne r4, ip",
            "teqne r5, ip",
            "bleq fcn.00055778",
            "add r4, r4, r5",
            "eor r6, r1, r3",
            "bic r1, r1, ip, lsl 21",
            "bic r3, r3, ip, lsl 21",
            "orrs r5, r0, r1, lsl 12",
            "orrsne r5, r2, r3, lsl 12",
            "orr r1, r1, 0x100000",
            "orr r3, r3, 0x100000",
            "beq 0x55650",
            "umull ip, lr, r0, r2",
            "mov r5, 0",
            "umlal lr, r5, r1, r2",
            "and r2, r6, 0x80000000",
            "umlal lr, r5, r0, r3",
            "mov r6, 0",
            "umlal r5, r6, r1, r3",
            "teq ip, 0",
            "orrne lr, lr, 1",
            "sub r4, r4, 0xff",
            "cmp r6, 0x200",
            "sbc r4, r4, 0x300",
            "bhs 0x5561c",
            "lsls lr, lr, 1",
            "adcs r5, r5, r5",
            "adc r6, r6, r6",
            "orr r1, r2, r6, lsl 11",
            "orr r1, r1, r5, lsr 21",
            "lsl r0, r5, 0xb",
            "orr r0, r0, lr, lsr 21",
            "lsl lr, lr, 0xb",
            "subs ip, r4, 0xfd",
            "cmphi ip, 0x700",
            "bhi 0x5567c",
            "cmp lr, 0x80000000",
            "lsrseq lr, r0, 1",
            "adcs r0, r0, 0",
            "adc r1, r1, r4, lsl 20",
            "pop {r4, r5, r6, pc}",
            "and r6, r6, 0x80000000",
            "orr r1, r6, r1",
            "orr r0, r0, r2",
            "eor r1, r1, r3",
            "subs r4, r4, ip, lsr 1",
            "rsbsgt r5, r4, ip",
            "orrgt r1, r1, r4, lsl 20",
            "popgt {r4, r5, r6, pc}",
            "orr r1, r1, 0x100000",
            "mov lr, 0",
            "subs r4, r4, 1"
        ]
    },
    "sym.imp.pow": {
        "function_address": "0x0000c1e8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x4dc]!"
        ]
    },
    "fcn.00055b20": {
        "function_address": "0x00055b20",
        "instructions": [
            "str lr, [sp, -8]!",
            "bl fcn.00055aa0",
            "movlo r0, 1",
            "movhs r0, 0",
            "ldr pc, [sp], 8"
        ]
    },
    "sym.imp.isalpha": {
        "function_address": "0x0000c194",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x514]!"
        ]
    },
    "fcn.0001966c": {
        "function_address": "0x0001966c",
        "instructions": [
            "mov r1, 0",
            "mov r2, 0x18",
            "b sym.imp.memset"
        ]
    },
    "fcn.0001b460": {
        "function_address": "0x0001b460",
        "instructions": [
            "ldrb r3, [r0]",
            "cmp r3, 0x2d",
            "bne 0x1b484",
            "ldrb r3, [r0, 1]",
            "cmp r3, 0",
            "bne 0x1b484",
            "ldr r3, obj.stdin",
            "ldr r0, [r3]",
            "bx lr",
            "ldr r1, [0x0001b490]",
            "b fcn.00029f54"
        ]
    },
    "sym.imp.fileno": {
        "function_address": "0x0000bd68",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x7dc]!"
        ]
    },
    "sym.imp.memchr": {
        "function_address": "0x0000c17c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x524]!"
        ]
    },
    "fcn.00055998": {
        "function_address": "0x00055998",
        "instructions": [
            "and r5, ip, r3, lsr 20",
            "teq r4, ip",
            "teqeq r5, ip",
            "beq 0x557f8",
            "teq r4, ip",
            "bne 0x559cc",
            "orrs r4, r0, r1, lsl 12",
            "bne 0x557f8",
            "teq r5, ip",
            "bne 0x557e0",
            "mov r0, r2",
            "mov r1, r3",
            "b 0x557f8",
            "teq r5, ip",
            "bne 0x559e8",
            "orrs r5, r2, r3, lsl 12",
            "beq 0x55794",
            "mov r0, r2",
            "mov r1, r3",
            "b 0x557f8",
            "orrs r6, r0, r1, lsl 1",
            "orrsne r6, r2, r3, lsl 1",
            "bne 0x5572c",
            "orrs r4, r0, r1, lsl 1",
            "bne 0x557e0",
            "orrs r5, r2, r3, lsl 1",
            "bne 0x55794",
            "b 0x557f8"
        ]
    },
    "fcn.00055778": {
        "function_address": "0x00055778",
        "instructions": [
            "teq r4, 0",
            "bne 0x55758",
            "and r6, r1, 0x80000000",
            "lsls r0, r0, 1",
            "adc r1, r1, r1",
            "tst r1, 0x100000",
            "subeq r4, r4, 1",
            "beq 0x55738",
            "orr r1, r1, r6",
            "teq r5, 0",
            "bxne lr",
            "and r6, r3, 0x80000000",
            "lsls r2, r2, 1",
            "adc r3, r3, r3",
            "tst r3, 0x100000",
            "subeq r5, r5, 1",
            "beq 0x5575c",
            "orr r3, r3, r6",
            "bx lr",
            "teq r4, ip",
            "and r5, ip, r3, lsr 20",
            "teqne r5, ip",
            "beq 0x557a4",
            "orrs r6, r0, r1, lsl 1",
            "orrsne r6, r2, r3, lsl 1",
            "bne 0x5572c",
            "eor r1, r1, r3",
            "and r1, r1, 0x80000000",
            "mov r0, 0",
            "pop {r4, r5, r6, pc}",
            "orrs r6, r0, r1, lsl 1",
            "moveq r0, r2",
            "moveq r1, r3",
            "orrsne r6, r2, r3, lsl 1",
            "beq 0x557f8",
            "teq r4, ip",
            "bne 0x557c8",
            "orrs r6, r0, r1, lsl 12",
            "bne 0x557f8",
            "teq r5, ip",
            "bne 0x557e0",
            "orrs r6, r2, r3, lsl 12",
            "movne r0, r2",
            "movne r1, r3",
            "bne 0x557f8",
            "eor r1, r1, r3",
            "orr r1, r1, 0x7f000000",
            "orr r1, r1, 0xf80000",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.00027fcc": {
        "function_address": "0x00027fcc",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r5, r0",
            "ldr r0, [r0]",
            "cmp r0, 0",
            "moveq r4, r0",
            "beq 0x27ff0",
            "ldm r0, {r4, r6}",
            "bl sym.imp.free",
            "str r6, [r5]",
            "mov r0, r4",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.0001b19c": {
        "function_address": "0x0001b19c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r2, 1",
            "ldr r8, [0x0001b2ec]",
            "ldr r3, [r8]",
            "str r0, [r3, -0x1c]",
            "str r2, [r3, 0xc]",
            "b 0x1b2d8",
            "tst r0, 0xc000",
            "bne 0x1b2d8",
            "ldr r4, [r8]",
            "tst r0, 0x400000",
            "sub r6, r4, 0x78",
            "add r3, r6, 0xc",
            "str r3, [r4, -0x54]",
            "bne 0x1b1e4",
            "ands r7, r0, 0x800000",
            "beq 0x1b1ec",
            "add r6, r6, 0x18",
            "str r6, [r4, -0x54]",
            "b 0x1b2d4",
            "tst r0, 0x200000",
            "beq 0x1b278",
            "mov r0, 0x8000000",
            "bl fcn.0001a6d0",
            "ldr r3, [r4, -0x1c]",
            "ldr r0, [r4, -0x38]",
            "ldr r1, [r4, 8]",
            "add r3, r3, 1",
            "str r3, [r4, -0x1c]",
            "bl fcn.00019910",
            "mov r5, r0",
            "str r7, [r0, 4]",
            "str r7, [r0]",
            "b 0x1b250",
            "ldr r1, [r4, 8]",
            "ldr r0, [r6, 0x38]",
            "bl fcn.00019910",
            "ldr r3, [r5]",
            "str r3, [r0, 0x14]",
            "add r3, r3, 1",
            "str r3, [r5]",
            "movw r0, 0x102",
            "bl fcn.0001a6d0",
            "tst r0, 2",
            "bne 0x1b260",
            "ldr r0, [0x0001b2f0]",
            "bl fcn.0001a6d0",
            "tst r0, 0x2000000",
            "bne 0x1b224",
            "add r5, r5, 4",
            "str r5, [r4, -0x54]",
            "bl fcn.0001aee0",
            "ldr r0, [r4, -0x40]",
            "bl fcn.00019604",
            "b 0x1b2d8",
            "ldr r3, [0x0001b2f4]",
            "and r3, r0, r3",
            "cmp r3, 0",
            "beq 0x1b2d0",
            "bl fcn.00019320",
            "mov r0, 0xd00",
            "bl fcn.00019678",
            "mov r5, r0",
            "ldr r0, [0x0001b2f8]",
            "bl fcn.0001ab5c",
            "str r0, [r5, 8]",
            "ldr r3, [r4, 4]",
            "tst r3, 0x1000",
            "beq 0x1b2bc",
            "bl fcn.00019320",
            "bl fcn.0001aee0",
            "b 0x1b2c4",
            "mov r0, 0x400",
            "bl fcn.00019678",
            "ldr r3, [r4, -0x68]",
            "str r3, [r5, 0xc]",
            "b 0x1b2d8",
            "bl fcn.00019320",
            "bl fcn.0001aee0",
            "ldr r0, [0x0001b2fc]",
            "bl fcn.0001a6d0",
            "cmp r0, 0x1000000",
            "bne 0x1b1b8",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.0001d8c4": {
        "function_address": "0x0001d8c4",
        "instructions": [
            "subs r3, r0, 0",
            "mov r0, 0",
            "push {r4, lr}",
            "rsblt r3, r3, 0",
            "mvnlt r2, 1",
            "mvnge r2, 0",
            "mov r4, r0",
            "b 0x1d960",
            "cmp r2, 0",
            "blt 0x1d920",
            "cmp ip, 0x5d",
            "bne 0x1d95c",
            "sub ip, r0, 1",
            "cmp r2, ip",
            "beq 0x1d95c",
            "sub ip, r0, 2",
            "cmp r2, ip",
            "mvnne r2, 0",
            "bne 0x1d95c",
            "ldrb ip, [r1, -2]",
            "cmp ip, 0x5e",
            "mvnne r2, 0",
            "b 0x1d95c",
            "cmp r4, 0",
            "bne 0x1d948",
            "cmp ip, 0x5c",
            "beq 0x1d950",
            "cmp ip, 0x5b",
            "cmneq r2, 1",
            "beq 0x1d958",
            "cmp ip, r3",
            "bne 0x1d95c",
            "pop {r4, pc}",
            "mov r4, 0",
            "b 0x1d95c",
            "mov r4, 1",
            "b 0x1d95c",
            "mov r2, r0",
            "add r0, r0, 1",
            "ldrb ip, [r1], 1",
            "cmp ip, 0",
            "bne 0x1d8e4",
            "ldr r0, str.unmatched__c",
            "mov r1, r3",
            "bl fcn.000271d8"
        ]
    },
    "fcn.0001d97c": {
        "function_address": "0x0001d97c",
        "instructions": [
            "push {r0, r1, r4, r5, r6, lr}",
            "mov r6, r0",
            "add r0, r1, 1",
            "mov r5, r1",
            "bl fcn.00029e54"
        ]
    },
    "fcn.0001d84c": {
        "function_address": "0x0001d84c",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov ip, 0",
            "ldrb r4, [sp, 0x10]",
            "b 0x1d8b0",
            "ldrb r5, [r1, ip]",
            "cmp r5, 0x5c",
            "bne 0x1d8a4",
            "cmp r4, 0",
            "add r6, r1, ip",
            "beq 0x1d884",
            "ldrb r6, [r6, 1]",
            "cmp r6, r3",
            "beq 0x1d88c",
            "b 0x1d89c",
            "ldrb r5, [r6, 1]",
            "b 0x1d890",
            "mov r5, r4",
            "strb r5, [r0], 1",
            "add ip, ip, 2",
            "b 0x1d8b0",
            "add ip, ip, 1",
            "strb r5, [r0], 1",
            "ldrb r5, [r1, ip]",
            "add ip, ip, 1",
            "strb r5, [r0], 1",
            "cmp ip, r2",
            "blt 0x1d85c",
            "mov r3, 0",
            "strb r3, [r0]",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.0001dc74": {
        "function_address": "0x0001dc74",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "ldr r5, [0x0001dcac]",
            "b 0x1dc98",
            "ldr r0, [r5, 8]",
            "mov r2, r4",
            "ldr r1, [0x0001dcb0]",
            "bl sym.imp.fprintf",
            "mov r0, r4",
            "bl sym.imp.free",
            "ldr r0, [0x0001dcb4]",
            "bl fcn.00027fcc",
            "subs r4, r0, 0",
            "bne 0x1dc80",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.0001da34": {
        "function_address": "0x0001da34",
        "instructions": [
            "push {r0, r1, r2, r4, r5, r6, r7, lr}",
            "mov r7, r2",
            "str r0, [sp, 4]",
            "mov r4, r0",
            "mov r5, r1",
            "ldrb r3, [r0]",
            "sub r2, r3, 0x30",
            "cmp r2, 9",
            "bhi 0x1da6c",
            "add r1, sp, 4",
            "mov r2, 0xa",
            "bl sym.imp.strtol",
            "str r0, [r5]",
            "b 0x1db0c",
            "cmp r3, 0x24",
            "mvneq r3, 0",
            "streq r3, [r1]",
            "addeq r3, r0, 1",
            "streq r3, [sp, 4]",
            "beq 0x1db0c",
            "cmp r3, 0x5c",
            "movne r2, 0",
            "moveq r2, 1",
            "cmp r3, 0x5c",
            "cmpne r3, 0x2f",
            "bne 0x1db0c",
            "cmp r2, 0",
            "addne r3, r0, 1",
            "moveq r0, 0x2f",
            "strne r3, [sp, 4]",
            "ldr r1, [sp, 4]",
            "ldrbne r0, [r0, 1]",
            "add r1, r1, 1",
            "str r1, [sp, 4]",
            "bl fcn.0001d8c4",
            "mov r5, r0",
            "ldr r0, [sp, 4]",
            "mov r1, r5",
            "add r5, r5, 1",
            "bl fcn.0001d97c",
            "mov r6, r0",
            "mov r0, 0x20",
            "bl fcn.00029e54",
            "ldr r0, [sp, 4]",
            "rsb r0, r4, r0",
            "pop {r1, r2, r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.0001d9b4": {
        "function_address": "0x0001d9b4",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sl, lr}",
            "mov r4, r0",
            "ldrb r6, [r0]",
            "mov r5, r1",
            "mov sl, r2",
            "cmp r6, 0",
            "bne 0x1d9d8",
            "ldr r0, str.bad_format_in_substitution_expression",
            "bl fcn.000271d8",
            "add r7, r0, 1",
            "mov r0, r6",
            "mov r1, r7",
            "bl fcn.0001d8c4",
            "mov r8, r0",
            "mov r0, r7",
            "mov r1, r8",
            "bl fcn.0001d97c",
            "str r0, [r5]",
            "add r5, r8, 1",
            "add r5, r7, r5",
            "rsb r0, r6, 0",
            "mov r1, r5",
            "bl fcn.0001d8c4",
            "mov r6, r0",
            "mov r0, r5",
            "mov r1, r6",
            "rsb r4, r4, r6",
            "bl fcn.0001d97c",
            "str r0, [sl]",
            "add r0, r5, r4",
            "pop {r3, r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "fcn.0001dd98": {
        "function_address": "0x0001dd98",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r6, r0",
            "mov r7, r1",
            "mov r5, r0",
            "mov r4, 0",
            "b 0x1ddb4",
            "add r4, r4, 1",
            "ldrb r0, [r5]",
            "mov r8, r5",
            "bl sym.imp.isspace",
            "cmp r0, 0",
            "add r5, r5, 1",
            "bne 0x1ddb0",
            "mov r1, r4",
            "b 0x1ddd8",
            "add r4, r4, 1",
            "ldrb r5, [r6, r4]",
            "cmp r5, 0xa",
            "cmpne r5, 0",
            "bne 0x1ddd4",
            "cmp r4, r1",
            "bne 0x1ddf8",
            "ldr r0, str.empty_filename",
            "bl fcn.000271d8",
            "rsb r1, r1, 1",
            "cmp r5, 0xa",
            "movne r5, 0",
            "moveq r5, 1",
            "add r1, r1, r4",
            "mov r0, r8",
            "add r1, r1, r5",
            "bl fcn.00029f04",
            "cmp r5, 0",
            "str r0, [r7]",
            "movne r3, 0x5c",
            "strbne r3, [r0, r4]",
            "mov r0, r4",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.0001de34": {
        "function_address": "0x0001de34",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r0",
            "ldr r6, [0x0001e3a8]",
            "sub sp, sp, 0x1c",
            "ldr r1, [r6, 0xa4]",
            "cmp r1, 0",
            "beq 0x1de6c",
            "mov r2, r4",
            "ldr r0, str._s_n_s",
            "bl fcn.0002a2d0",
            "mov r4, r0",
            "ldr r0, [r6, 0xa4]",
            "bl sym.imp.free",
            "str r4, [r6, 0xa4]",
            "mov r0, r4",
            "bl sym.imp.strlen",
            "cmp r0, 0",
            "beq 0x1e37c",
            "sub r5, r0, 1",
            "ldrb r3, [r4, r5]",
            "cmp r3, 0x5c",
            "bne 0x1e37c",
            "ldr r3, [r6, 0xa4]",
            "cmp r3, 0",
            "bne 0x1dea4",
            "mov r0, r4",
            "bl fcn.00029ed8",
            "str r0, [r6, 0xa4]",
            "ldr r3, [r6, 0xa4]",
            "mov r2, 0",
            "strb r2, [r3, r5]",
            "b 0x1e3a0",
            "mov r0, r4",
            "ldr r1, str.___n_r_t_v",
            "bl sym.imp.strspn",
            "ldrb r3, [r4, r0]",
            "add r7, r4, r0",
            "cmp r3, 0",
            "beq 0x1e390",
            "cmp r3, 0x23",
            "bne 0x1df04",
            "ldrb r3, [r7, 1]",
            "mov r0, r7",
            "ldr r1, [0x0001e3b4]",
            "cmp r3, 0x6e",
            "ldreq r3, [r6]",
            "addeq r3, r3, 1",
            "streq r3, [r6]",
            "bl sym.imp.strpbrk",
            "subs r4, r0, 0",
            "beq 0x1e390",
            "b 0x1e384",
            "mov r0, 0x28",
            "bl fcn.00029eb4",
            "mov r5, r0",
            "mov r0, r7",
            "add r1, r5, 0x10",
            "add r2, r5, 4",
            "bl fcn.0001da34",
            "ldrb r3, [r7, r0]",
            "add r4, r7, r0",
            "cmp r3, 0x2c",
            "bne 0x1df54",
            "add r4, r4, 1",
            "add r1, r5, 0x14",
            "mov r0, r4",
            "add r2, r5, 8",
            "bl fcn.0001da34",
            "cmp r0, 0",
            "ldreq r0, str.no_address_after_comma",
            "beq 0x1df94",
            "add r4, r4, r0",
            "mov r0, r4",
            "bl fcn.000295c4",
            "ldrb r3, [r0]",
            "mov r8, r0",
            "cmp r3, 0x21",
            "bne 0x1df84",
            "ldrb r3, [r5, 0x22]",
            "add r0, r0, 1",
            "orr r3, r3, 1",
            "strb r3, [r5, 0x22]",
            "bl fcn.000295c4",
            "mov r8, r0",
            "ldrb r7, [r8]",
            "cmp r7, 0",
            "bne 0x1df98",
            "ldr r0, str.missing_command",
            "bl fcn.000271d8",
            "cmp r7, 0x73",
            "strb r7, [r5, 0x24]",
            "add r4, r8, 1",
            "bne 0x1e11c",
            "mov r0, r4",
            "mov r1, fp",
            "add r2, r5, 0x1c",
            "ldr sl, [r6, 4]",
            "bl fcn.0001d9b4",
            "mov r3, 1",
            "mov r7, r0",
            "strh r3, [r5, 0x20]",
            "b 0x1e0d4",
            "sub r1, r3, 0x30",
            "cmp r1, 9",
            "bhi 0x1e00c",
            "ldr r3, [sp, 0x14]",
            "ldrb r3, [r3]",
            "cmp r3, 0x5e",
            "beq 0x1e0d4",
            "str r2, [sp, 0x10]",
            "mov r0, r2",
            "mov r1, sb",
            "mov r2, 0xa",
            "bl sym.imp.strtol",
            "ldr r7, [sp, 0x10]",
            "strh r0, [r5, 0x20]",
            "rsb r7, r4, r7",
            "b 0x1e0d4",
            "mov r0, r3",
            "str r2, [sp, 0xc]",
            "str r3, [sp, 8]",
            "bl sym.imp.isspace",
            "cmp r0, 0",
            "ldr r2, [sp, 0xc]",
            "ldr r3, [sp, 8]",
            "bne 0x1e0d4",
            "cmp r3, 0x67",
            "beq 0x1e070",
            "bhi 0x1e054",
            "cmp r3, 0x3b",
            "beq 0x1e0e8",
            "cmp r3, 0x49",
            "beq 0x1e0a8",
            "cmp r3, 0x23",
            "beq 0x1e0b0",
            "b 0x1e0cc",
            "cmp r3, 0x77",
            "beq 0x1e094",
            "cmp r3, 0x7d",
            "beq 0x1e0e8",
            "cmp r3, 0x70",
            "beq 0x1e084",
            "b 0x1e0cc",
            "ldr r3, [sp, 0x14]",
            "ldrb r3, [r3]",
            "cmp r3, 0x5e",
            "strhne r0, [r5, 0x20]",
            "b 0x1e0d4",
            "ldrb r3, [r5, 0x22]",
            "orr r3, r3, 4",
            "strb r3, [r5, 0x22]",
            "b 0x1e0d4",
            "mov r0, r2",
            "mov r1, sb",
            "bl fcn.0001dd98",
            "add r7, r7, r0",
            "b 0x1e0d4",
            "orr sl, sl, 2",
            "b 0x1e0d4",
            "add r3, r7, 1",
            "add r8, r8, r3",
            "ldrb r3, [r8, 1]!",
            "add r7, r7, 1",
            "cmp r3, 0",
            "bne 0x1e0b8",
            "b 0x1e0e8",
            "ldr r0, str.bad_option_in_substitution_expression",
            "b 0x1df94",
            "add r7, r7, 1",
            "ldrb r3, [r4, r7]",
            "add r2, r4, r7",
            "cmp r3, 0",
            "bne 0x1dfcc",
            "ldr r3, [sp, 0x14]",
            "ldrb r3, [r3]",
            "cmp r3, 0",
            "beq 0x1e110",
            "mov r0, 0x20",
            "bl fcn.00029e54",
            "ldr r0, [sp, 0x14]",
            "bl sym.imp.free",
            "b 0x1e268",
            "ldr r0, [0x0001e3c4]",
            "mov r1, r7",
            "bl sym.imp.strchr",
            "cmp r0, 0",
            "beq 0x1e1bc",
            "ldr r3, [r5, 0x14]",
            "cmp r3, 0",
            "bne 0x1e148",
            "ldr r3, [r5, 8]",
            "cmp r3, 0",
            "beq 0x1e154",
            "cmp r7, 0x63",
            "ldrne r0, str.only_a_beginning_address_can_be_specified_for_edit_commands",
            "bne 0x1df94",
            "ldrb r0, [r4]",
            "mov r7, r4",
            "add r4, r4, 1",
            "cmp r0, 0xa",
            "cmpne r0, 0x5c",
            "moveq r7, r4",
            "beq 0x1e17c",
            "bl sym.imp.isspace",
            "cmp r0, 0",
            "bne 0x1e154",
            "mov r0, r7",
            "bl fcn.00029ed8",
            "mov r4, r0",
            "str r0, [r5, 0x1c]",
            "mov r0, r7",
            "bl sym.imp.strlen",
            "mov r3, 0",
            "mov r2, r0",
            "mov r1, r4",
            "mov r0, r4",
            "str r3, [sp]",
            "bl fcn.0001d84c",
            "mov r0, r7",
            "bl sym.imp.strlen",
            "add r4, r7, r0",
            "b 0x1e36c",
            "ldr r0, [0x0001e3cc]",
            "mov r1, r7",
            "bl sym.imp.strchr",
            "cmp r0, 0",
            "beq 0x1e228",
            "ldr r3, [r5, 0x14]",
            "cmp r3, 0",
            "bne 0x1e1e8",
            "ldr r3, [r5, 8]",
            "cmp r3, 0",
            "beq 0x1e1f0",
            "ldr r0, str.command_only_uses_one_address",
            "b 0x1df94",
            "mov r0, r4",
            "add r1, r5, 0x1c",
            "bl fcn.0001dd98",
            "ldrb r3, [r5, 0x24]",
            "add r4, r4, r0",
            "cmp r3, 0x77",
            "bne 0x1e36c",
            "ldr r0, [r5, 0x1c]",
            "ldr r1, [0x0001e3d4]",
            "bl fcn.00029f54",
            "ldr r0, str.:btT",
            "mov r1, r7",
            "bl sym.imp.strchr",
            "subs r8, r0, 0",
            "beq 0x1e270",
            "mov r0, r4",
            "bl fcn.000295c4",
            "ldr r1, str.___n_r_t_v",
            "mov r4, r0",
            "bl sym.imp.strcspn",
            "subs r7, r0, 0",
            "beq 0x1e36c",
            "mov r0, r4",
            "mov r1, r7",
            "bl fcn.00029f04",
            "str r0, [r5, 0x1c]",
            "add r4, r4, r7",
            "b 0x1e36c",
            "cmp r7, 0x79",
            "bne 0x1e34c",
            "mov r1, sb",
            "mov r2, fp",
            "mov r0, r4",
            "ldrb r7, [r4]",
            "bl fcn.0001d9b4",
            "ldr sl, [sp, 0x10]",
            "add r0, r0, 1",
            "add r4, r4, r0",
            "mov r0, sl",
            "bl sym.imp.strlen",
            "mov r1, sl",
            "mov r2, r0",
            "mov r3, r7",
            "mov r0, sl",
            "str r7, [sp]",
            "bl fcn.0001d84c",
            "ldr sl, [sp, 0x14]",
            "mov r0, sl",
            "bl sym.imp.strlen",
            "mov r3, r7",
            "mov r2, r0",
            "mov r1, sl",
            "mov r0, sl",
            "str r7, [sp]",
            "bl fcn.0001d84c",
            "ldr r0, [sp, 0x10]",
            "bl sym.imp.strlen",
            "add r0, r0, 1",
            "lsl r0, r0, 1",
            "bl fcn.00029eb4",
            "mov r3, 1",
            "str r0, [r5, 0x1c]",
            "b 0x1e31c",
            "ldr r1, [r5, 0x1c]",
            "strb r2, [r1, r8, lsl 1]",
            "ldr r1, [sp, 0x14]",
            "ldr r2, [r5, 0x1c]",
            "ldrb r1, [r1, r8]",
            "add r8, r8, 1",
            "strb r1, [r2, r3]",
            "add r3, r3, 2",
            "ldr r0, [sp, 0x10]",
            "ldrb r2, [r0, r8]",
            "cmp r2, 0",
            "beq 0x1e33c",
            "ldr r1, [sp, 0x14]",
            "ldrb r1, [r1, r8]",
            "cmp r1, 0",
            "bne 0x1e2fc",
            "bl sym.imp.free",
            "ldr r0, [sp, 0x14]",
            "bl sym.imp.free",
            "b 0x1e36c",
            "ldr r0, str.dDgGhHlnNpPqx",
            "mov r1, r7",
            "bl sym.imp.strchr",
            "cmp r0, 0",
            "bne 0x1e36c",
            "ldr r0, str.unsupported_command__c",
            "mov r1, r7",
            "bl fcn.000271d8",
            "ldr r3, [r6, 0x9c]",
            "str r5, [r3]",
            "str r5, [r6, 0x9c]",
            "b 0x1e384",
            "add sb, sp, 0x10",
            "add fp, sp, 0x14",
            "ldrb r3, [r4]",
            "cmp r3, 0",
            "bne 0x1deb4",
            "ldr r0, [r6, 0xa4]",
            "bl sym.imp.free",
            "mov r3, 0",
            "str r3, [r6, 0xa4]",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.imp.strspn": {
        "function_address": "0x0000b87c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xb24]!"
        ]
    },
    "fcn.0001dcb8": {
        "function_address": "0x0001dcb8",
        "instructions": [
            "push {r0, r1, r4, r5, r6, r7, r8, lr}",
            "mov r7, r0",
            "ldr r4, [0x0001dd7c]",
            "add r8, sp, 4",
            "bl fcn.0001dc74",
            "b 0x1dd58",
            "ldr r2, [r4, 0x1c]",
            "mov r1, r8",
            "ldr r6, [r2, r3, lsl 2]",
            "mov r0, r6",
            "bl fcn.00027588",
            "subs r5, r0, 0",
            "beq 0x1dd44",
            "ldr r2, [sp, 4]",
            "sub r2, r2, 1",
            "ldrb r3, [r5, r2]",
            "rsbs r1, r3, 1",
            "movlo r1, 0",
            "cmp r3, 0",
            "cmpne r3, 0xa",
            "movne r4, 1",
            "bne 0x1dd70",
            "mov r4, 0",
            "cmp r1, r4",
            "strb r4, [r5, r2]",
            "moveq r4, r3",
            "beq 0x1dd70",
            "mov r0, r6",
            "bl sym.imp.fgetc",
            "cmn r0, 1",
            "moveq r4, 2",
            "beq 0x1dd70",
            "mov r1, r6",
            "bl sym.imp.ungetc",
            "b 0x1dd70",
            "mov r0, r6",
            "bl sym.imp.fclose",
            "ldr r3, [r4, 0x18]",
            "add r3, r3, 1",
            "str r3, [r4, 0x18]",
            "ldr r3, [r4, 0x18]",
            "ldr r2, [r4, 0x14]",
            "cmp r3, r2",
            "blt 0x1dcd0",
            "mov r4, 1",
            "mov r5, 0",
            "strb r4, [r7]",
            "mov r0, r5",
            "pop {r2, r3, r4, r5, r6, r7, r8, pc}"
        ]
    },
    "sym.imp.ungetc": {
        "function_address": "0x0000c284",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x474]!"
        ]
    },
    "fcn.0001dbc8": {
        "function_address": "0x0001dbc8",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r5, r0",
            "ldrb r7, [r2]",
            "mov r4, r1",
            "mov r6, r2",
            "mov r8, r3",
            "cmp r7, 0",
            "cmpne r7, 0xa",
            "beq 0x1dbf8",
            "mov r7, 0xa",
            "mov r0, 0xa",
            "bl sym.imp.fputc",
            "mov r0, r5",
            "mov r1, r4",
            "bl sym.imp.fputs",
            "ldrb r3, [r5]",
            "cmp r3, 0",
            "movne r7, 0x78",
            "cmp r8, 2",
            "bne 0x1dc2c",
            "mov r0, 0",
            "mov r1, r4",
            "bl sym.imp.fputc",
            "mov r7, 0x78",
            "b 0x1dc44",
            "cmp r8, 1",
            "beq 0x1dc44",
            "mov r7, r8",
            "mov r0, r8",
            "mov r1, r4",
            "bl sym.imp.fputc",
            "mov r0, r4",
            "bl sym.imp.ferror",
            "cmp r0, 0",
            "strbeq r7, [r6]",
            "popeq {r4, r5, r6, r7, r8, pc}",
            "ldr r3, [0x0001dc6c]",
            "mov r2, 4",
            "ldr r0, str.write_error",
            "str r2, [r3]",
            "bl fcn.000271d8"
        ]
    },
    "fcn.0001db58": {
        "function_address": "0x0001db58",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r5, r0",
            "ldr r4, [0x0001dba8]",
            "ldr r1, [r4, 0xac]",
            "ldr r3, [r4, 0xb0]",
            "cmp r1, r3",
            "bne 0x1db90",
            "ldr r0, [r4, 0xa8]",
            "add r1, r1, 0x40",
            "bl fcn.00029e84",
            "ldr r3, [r4, 0xac]",
            "ldr r2, [r4, 0xa8]",
            "strb r5, [r2, r3]",
            "add r3, r3, 1",
            "str r3, [r4, 0xac]",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.0001dbac": {
        "function_address": "0x0001dbac",
        "instructions": [
            "push {r4, lr}",
            "bl fcn.00029ed8",
            "mov r1, r0",
            "ldr r0, [0x0001dbc4]",
            "pop {r4, lr}",
            "b fcn.00027f80"
        ]
    },
    "fcn.0002a310": {
        "function_address": "0x0002a310",
        "instructions": [
            "ldr r3, obj.stdout",
            "push {r4, lr}",
            "mov r4, r0",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, r4",
            "bl sym.imp.fileno",
            "mov r1, 1",
            "bl fcn.000270ec",
            "cmn r0, 1",
            "bne 0x2a348",
            "cmn r1, 1",
            "bne 0x2a348",
            "bl fcn.000271ac",
            "mov r0, r4",
            "pop {r4, lr}",
            "b sym.imp.fclose"
        ]
    },
    "fcn.0001e3e4": {
        "function_address": "0x0001e3e4",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "bl fcn.00029ed8",
            "mov r6, r0",
            "mov r5, r0",
            "mov r0, r5",
            "mov r1, 0xa",
            "bl sym.imp.strchr",
            "cmp r0, 0",
            "mov r4, r0",
            "beq 0x1e450",
            "mov r2, r0",
            "mov r3, 0",
            "b 0x1e41c",
            "add r3, r3, 1",
            "cmp r5, r2",
            "beq 0x1e430",
            "ldrb r1, [r2, -1]!",
            "cmp r1, 0x5c",
            "beq 0x1e418",
            "ands r3, r3, 1",
            "beq 0x1e44c",
            "sub r0, r4, 1",
            "mov r1, r4",
            "bl sym.imp.strcpy",
            "mov r0, r4",
            "b 0x1e3f8",
            "strb r3, [r4]",
            "mov r0, r5",
            "bl fcn.0001de34",
            "cmp r4, 0",
            "addne r5, r4, 1",
            "bne 0x1e3f4",
            "mov r0, r6",
            "pop {r4, r5, r6, lr}",
            "b sym.imp.free"
        ]
    },
    "fcn.0001db1c": {
        "function_address": "0x0001db1c",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r5, r0",
            "ldr r4, [0x0001db54]",
            "ldr r1, [r4, 0x14]",
            "ldr r0, [r4, 0x1c]",
            "add r1, r1, 1",
            "lsl r1, r1, 2",
            "bl fcn.00029e84"
        ]
    },
    "fcn.0001e470": {
        "function_address": "0x0001e470",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x3c",
            "add r4, sp, 0x36",
            "mov r3, 0xa",
            "mov sl, 0",
            "mov r0, r4",
            "strb r3, [sp, 0x37]",
            "mov fp, sl",
            "bl fcn.0001dcb8",
            "mov sb, sl",
            "mov r5, r0",
            "cmp r5, 0",
            "beq 0x1ee88",
            "add r0, sp, 0x36",
            "ldrb r7, [sp, 0x36]",
            "add sb, sb, 1",
            "mov r8, r5",
            "bl fcn.0001dcb8",
            "mov sl, r0",
            "mov r1, 0",
            "str r1, [sp, 0x18]",
            "ldr r5, [0x0001ee90]",
            "ldr r4, [r5, 0x74]",
            "b 0x1ee40",
            "ldrb r3, [r4, 0x22]",
            "ubfx ip, r3, 1, 1",
            "and r3, r3, 2",
            "uxtb r3, r3",
            "cmp r3, 0",
            "bne 0x1e56c",
            "ldr r3, [r4, 0x10]",
            "cmp r3, 0",
            "bne 0x1e518",
            "ldr r3, [r4, 0x14]",
            "cmp r3, 0",
            "bne 0x1e524",
            "ldr r3, [r4, 4]",
            "cmp r3, 0",
            "bne 0x1e524",
            "ldr r3, [r4, 8]",
            "cmp r3, 0",
            "b 0x1e520",
            "ble 0x1e524",
            "cmp r3, sb",
            "beq 0x1e56c",
            "ldr r0, [r4, 4]",
            "cmp r0, 0",
            "beq 0x1e554",
            "mov r1, r8",
            "mov r2, fp",
            "mov r3, fp",
            "str ip, [sp, 0xc]",
            "str fp, [sp]",
            "bl sym.imp.regexec",
            "cmp r0, 0",
            "ldr ip, [sp, 0xc]",
            "beq 0x1ee7c",
            "ldr r6, [r4, 0x10]",
            "cmp sl, 0",
            "cmneq r6, 1",
            "movne r6, 0",
            "moveq r6, 1",
            "b 0x1e570",
            "mov r6, 1",
            "uxtb r6, r6",
            "ldrb r3, [r4, 0x22]",
            "cmp r6, 0",
            "bfi r3, r6, 1, 1",
            "strb r3, [r4, 0x22]",
            "beq 0x1e60c",
            "ldr r3, [r4, 0x14]",
            "cmp r3, 0",
            "beq 0x1e5bc",
            "cmn r3, 1",
            "bne 0x1e5ac",
            "cmp sl, 0",
            "moveq r0, sl",
            "beq 0x1e600",
            "b 0x1e5c8",
            "cmp r3, sb",
            "movle r0, 0",
            "ble 0x1e600",
            "b 0x1e5c8",
            "ldr r0, [r4, 8]",
            "cmp r0, 0",
            "beq 0x1e600",
            "ldr r0, [r4, 8]",
            "eor ip, ip, 1",
            "cmp r0, 0",
            "movne r2, ip",
            "orreq r2, ip, 1",
            "cmp r2, 0",
            "movne r0, 1",
            "bne 0x1e600",
            "mov r1, r8",
            "mov r3, r2",
            "str r2, [sp]",
            "bl sym.imp.regexec",
            "subs r0, r0, 0",
            "movne r0, 1",
            "ldrb r3, [r4, 0x22]",
            "bfi r3, r0, 1, 1",
            "strb r3, [r4, 0x22]",
            "ldrb r3, [r4, 0x24]",
            "cmp r3, 0x7b",
            "ldrb r3, [r4, 0x22]",
            "bne 0x1e658",
            "tst r3, 1",
            "bne 0x1e62c",
            "rsbs r6, r6, 1",
            "movlo r6, 0",
            "cmp r6, 0",
            "bne 0x1e648",
            "b case.0x1e688.1",
            "ldr r4, [r4]",
            "cmp r4, 0",
            "ldreq r0, str.unterminated_",
            "beq 0x1e838",
            "ldrb r3, [r4, 0x24]",
            "cmp r3, 0x7d",
            "bne 0x1e638",
            "b case.0x1e688.1",
            "tst r3, 1",
            "beq 0x1e668",
            "rsbs r6, r6, 1",
            "movlo r6, 0",
            "cmp r6, 0",
            "beq case.0x1e688.1",
            "ldr r3, [r4, 4]",
            "cmp r3, 0",
            "strne r3, [r5, 0x70]",
            "ldrb r3, [r4, 0x24]",
            "sub r3, r3, 0x3d",
            "cmp r3, 0x3c",
            "ldrls pc, [pc, r3, lsl 2]",
            "b case.0x1e688.1",
            "mov r2, r8",
            "b 0x1ecdc",
            "ldr r0, [r5, 8]",
            "mov r2, sb",
            "ldr r1, aav.0x0005cf54",
            "bl sym.imp.fprintf",
            "b case.0x1e688.1",
            "mov r0, r8",
            "mov r1, 0xa",
            "bl sym.imp.strchr",
            "subs r6, r0, 0",
            "beq case.0x1e688.51",
            "mov r2, 0",
            "mov r3, 0xa",
            "strb r2, [r6]",
            "mov r0, r8",
            "ldr r1, [r5, 8]",
            "add r2, sp, 0x37",
            "bl fcn.0001dbc8",
            "mov r0, r8",
            "b 0x1eafc",
            "mov r0, r8",
            "mov r1, 0xa",
            "bl sym.imp.strchr",
            "cmp r0, 0",
            "beq case.0x1e688.39",
            "add r0, r0, 1",
            "bl fcn.00029ed8",
            "mov r4, r0",
            "mov r0, r8",
            "bl sym.imp.free",
            "mov r8, r4",
            "b 0x1e4c4",
            "ldr r1, [r4, 0xc]",
            "cmp r1, 0",
            "str r1, [sp, 0x10]",
            "bne 0x1e83c",
            "ldr r2, [r5, 0x70]",
            "cmp r2, 0",
            "str r2, [sp, 0x10]",
            "bne 0x1e844",
            "ldr r0, str.no_previous_regexp",
            "bl fcn.000271d8",
            "ldr r3, [sp, 0x10]",
            "str r3, [r5, 0x70]",
            "ldr r0, [sp, 0x10]",
            "mov r1, r8",
            "mov r2, 0xa",
            "ldr r3, [0x0001eea0]",
            "str fp, [sp]",
            "bl sym.imp.regexec",
            "cmp r0, 1",
            "beq case.0x1e688.1",
            "mov r0, 0x40",
            "mov r6, r8",
            "bl fcn.00029e54",
            "add r2, r4, 0x23",
            "mov r3, r7",
            "bl fcn.0001dbc8",
            "ldr r0, [r4, 0x1c]",
            "bl fcn.0001dbac",
            "b case.0x1e688.1",
            "ldr r0, [r4, 0x1c]",
            "ldr r1, [r5, 8]",
            "add r2, sp, 0x37",
            "mov r3, 0xa",
            "b 0x1eae4",
            "ldrb r3, [r4, 0x22]",
            "and r3, r3, 2",
            "uxtb r3, r3",
            "cmp r3, 0",
            "bne case.0x1e688.39",
            "ldr r0, [r4, 0x1c]",
            "add r2, sp, 0x37",
            "ldr r1, [r5, 8]",
            "add r3, r3, 1",
            "b 0x1ee64",
            "ldr r0, [r4, 0x1c]",
            "ldr r1, [0x0001eea4]",
            "bl sym.imp.fopen64",
            "subs r6, r0, 0",
            "bne 0x1eb50",
            "b case.0x1e688.1",
            "bl fcn.0001dbac",
            "mov r0, r6",
            "bl fcn.00027640",
            "cmp r0, 0",
            "bne 0x1eb4c",
            "mov r0, r6",
            "bl fcn.0002a310",
            "b case.0x1e688.1",
            "mov r0, r8",
            "ldr r1, [r4, 0x18]",
            "b 0x1eadc",
            "ldr r3, [r5]",
            "cmp r3, 0",
            "bne 0x1eb98",
            "mov r0, r8",
            "ldr r1, [r5, 8]",
            "add r2, sp, 0x37",
            "mov r3, r7",
            "bl fcn.0001dbc8",
            "cmp sl, 0",
            "beq case.0x1e688.52",
            "mov r0, r8",
            "add sb, sb, 1",
            "bl sym.imp.free",
            "add r0, sp, 0x36",
            "ldrb r7, [sp, 0x36]",
            "mov r8, sl",
            "bl fcn.0001dcb8",
            "mov sl, r0",
            "b case.0x1e688.1",
            "mov r0, sl",
            "mov sl, 0",
            "bl sym.imp.free",
            "b 0x1ee48",
            "cmp sl, 0",
            "bne 0x1ebe8",
            "mov r0, sl",
            "bl sym.imp.free",
            "b case.0x1e688.39",
            "mov r0, r8",
            "add sb, sb, 1",
            "bl sym.imp.strlen",
            "mov r6, r0",
            "mov r0, sl",
            "bl sym.imp.strlen",
            "add r1, r6, r0",
            "mov r0, r8",
            "add r1, r1, 2",
            "bl sym.imp.realloc",
            "mov r1, 0xa",
            "mov r8, r0",
            "strb r1, [r0, r6]",
            "add r0, r6, 1",
            "mov r1, sl",
            "add r0, r8, r0",
            "bl sym.imp.strcpy",
            "add r0, sp, 0x36",
            "ldrb r7, [sp, 0x36]",
            "bl fcn.0001dcb8",
            "mov sl, r0",
            "b case.0x1e688.1",
            "ldr r2, [sp, 0x18]",
            "cmp r2, 0",
            "movne r3, 0",
            "strne r3, [sp, 0x18]",
            "bne case.0x1e688.37",
            "b case.0x1e688.1",
            "ldr r1, [sp, 0x18]",
            "cmp r1, 0",
            "bne case.0x1e688.1",
            "ldr r6, [r4, 0x1c]",
            "cmp r6, 0",
            "beq 0x1ee48",
            "ldr r4, [r5, 0x74]",
            "b 0x1eca4",
            "ldrb r3, [r4, 0x24]",
            "cmp r3, 0x3a",
            "bne 0x1eca0",
            "ldr r0, [r4, 0x1c]",
            "cmp r0, 0",
            "beq 0x1eca0",
            "mov r1, r6",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq case.0x1e688.1",
            "ldr r4, [r4]",
            "cmp r4, 0",
            "bne 0x1ec78",
            "ldr r0, str.cant_find_label_for_jump_to__s",
            "mov r1, r6",
            "bl fcn.000271d8",
            "cmp r0, ip",
            "addeq r3, r1, r3",
            "ldrbeq r3, [r3, 1]",
            "strbeq r3, [r2, -1]",
            "beq 0x1ecdc",
            "add r3, r3, 2",
            "ldrb ip, [r1, r3]",
            "cmp ip, 0",
            "bne 0x1ecb8",
            "ldrb r0, [r2], 1",
            "cmp r0, 0",
            "beq case.0x1e688.1",
            "ldr r1, [r4, 0x1c]",
            "mov r3, 0",
            "b 0x1ecd0",
            "mov r0, r8",
            "bl sym.imp.free",
            "ldr r0, [r5, 0x10]",
            "ldr r2, [0x0001eeac]",
            "cmp r0, 0",
            "moveq r0, r2",
            "bl fcn.00029ed8",
            "mov r8, r0",
            "b case.0x1e688.1",
            "cmp r8, 0",
            "moveq r6, 2",
            "beq 0x1ed30",
            "mov r0, r8",
            "bl sym.imp.strlen",
            "add r6, r0, 2",
            "ldr r0, [r5, 0x10]",
            "cmp r0, 0",
            "beq 0x1ed40",
            "bl sym.imp.strlen",
            "mov r1, r0",
            "mov r0, r8",
            "add r1, r1, r6",
            "bl fcn.00029e84",
            "ldr r0, [r5, 0x10]",
            "bl sym.imp.free",
            "mov r0, r8",
            "bl fcn.00029ed8",
            "str r0, [r5, 0x10]",
            "b case.0x1e688.1",
            "ldr r3, [r5, 0x10]",
            "cmp r3, 0",
            "moveq r6, 2",
            "beq 0x1edbc",
            "mov r0, r3",
            "str r3, [sp, 0xc]",
            "bl sym.imp.strlen",
            "ldr r3, [sp, 0xc]",
            "add r6, r0, 2",
            "cmp r8, 0",
            "moveq r1, r8",
            "beq 0x1eddc",
            "mov r0, r8",
            "str r3, [sp, 0xc]",
            "bl sym.imp.strlen",
            "ldr r3, [sp, 0xc]",
            "mov r1, r0",
            "add r1, r1, r6",
            "mov r0, r3",
            "bl fcn.00029e84",
            "ldr r0, [r5, 0x10]",
            "cmp r0, 0",
            "bne 0x1ee30",
            "add r0, r0, 1",
            "bl fcn.00029eb4",
            "str r8, [r5, 0x10]",
            "mov r8, r0",
            "mov r7, 0xa",
            "ldr r4, [r4]",
            "cmp r4, 0",
            "bne 0x1e4d0",
            "ldr r3, [r5]",
            "cmp r3, 0",
            "bne case.0x1e688.39",
            "ldr r1, [r5, 8]",
            "mov r0, r8",
            "add r2, sp, 0x37",
            "mov r3, r7",
            "bl fcn.0001dbc8",
            "bl fcn.0001dc74",
            "mov r0, r8",
            "mov r5, sl",
            "bl sym.imp.free",
            "b 0x1e49c",
            "ldr r3, [r4, 4]",
            "str r3, [r5, 0x70]",
            "b 0x1e56c",
            "add sp, sp, 0x3c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.imp.strcat": {
        "function_address": "0x0000b8b8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xafc]!"
        ]
    },
    "fcn.0001f274": {
        "function_address": "0x0001f274",
        "instructions": [
            "push {r3, lr}",
            "bl fcn.0001f208",
            "ldrb r3, [r0]",
            "cmp r3, 0xa",
            "popne {r3, pc}",
            "ldr r3, [0x0001f2a4]",
            "ldr r3, [r3]",
            "ldr r3, [r3, 4]",
            "sub r3, r3, 1",
            "cmp r0, r3",
            "addlo r0, r0, 1",
            "pop {r3, pc}"
        ]
    },
    "fcn.0001f208": {
        "function_address": "0x0001f208",
        "instructions": [
            "ldr r3, [0x0001f238]",
            "mov r2, r0",
            "ldr r3, [r3]",
            "ldr r3, [r3, 4]",
            "sub r3, r3, 1",
            "cmp r2, r3",
            "mov r0, r2",
            "bxhs lr",
            "ldrb r1, [r2], 1",
            "cmp r1, 0xa",
            "bne 0x1f21c",
            "bx lr"
        ]
    },
    "fcn.0001f1b4": {
        "function_address": "0x0001f1b4",
        "instructions": [
            "ldr r3, [0x0001f1d4]",
            "push {r4, lr}",
            "ldr r1, [r3]",
            "sub r4, r1, 1",
            "add r4, r4, r0",
            "bl fcn.000551a4",
            "rsb r0, r1, r4",
            "pop {r4, pc}"
        ]
    },
    "fcn.0001f23c": {
        "function_address": "0x0001f23c",
        "instructions": [
            "push {r4, lr}",
            "bl fcn.0001f1d8",
            "sub r3, r0, 1",
            "ldrb r2, [r0, -1]",
            "cmp r2, 0xa",
            "bne 0x1f268",
            "ldr r2, [0x0001f270]",
            "ldr r2, [r2]",
            "ldr r2, [r2]",
            "cmp r0, r2",
            "movhi r0, r3",
            "pop {r4, lr}",
            "b fcn.0001f1d8"
        ]
    },
    "fcn.0001f1d8": {
        "function_address": "0x0001f1d8",
        "instructions": [
            "ldr r3, [0x0001f204]",
            "mov r2, r0",
            "ldr r3, [r3]",
            "ldr r3, [r3]",
            "cmp r2, r3",
            "mov r0, r2",
            "bxls lr",
            "ldrb r1, [r2, -1]!",
            "cmp r1, 0xa",
            "bne 0x1f1e8",
            "bx lr"
        ]
    },
    "fcn.0001f770": {
        "function_address": "0x0001f770",
        "instructions": [
            "push {r0, r1, r2, r3}",
            "push {r0, r1, r2, r4, r5, lr}",
            "add r3, sp, 0x1c",
            "ldr r4, [0x0001f7d0]",
            "ldr r1, str.e_7m",
            "str r3, [sp, 4]",
            "ldr r5, [r4]",
            "mov r0, r5",
            "bl sym.imp.strcpy",
            "mov r0, r5",
            "bl sym.imp.strlen",
            "ldr r2, [sp, 4]",
            "add r0, r5, r0",
            "ldr r1, [sp, 0x18]",
            "bl sym.imp.vsprintf",
            "ldr r0, [r4]",
            "ldr r1, str.e_0m",
            "bl sym.imp.strcat",
            "ldr r3, [0x0001f7dc]",
            "mov r2, 9",
            "str r2, [r3]",
            "pop {r1, r2, r3, r4, r5, lr}",
            "add sp, sp, 0x10",
            "bx lr"
        ]
    },
    "sym.imp.vsprintf": {
        "function_address": "0x0000bccc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x844]!"
        ]
    },
    "fcn.0001f8a0": {
        "function_address": "0x0001f8a0",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "subs r6, r1, 0",
            "mov r4, r0",
            "ble 0x1f924",
            "ldr r3, [0x0001f92c]",
            "ldr r5, [r3]",
            "ldm r5, {r0, r2, r3}",
            "add r1, r2, r6",
            "add r3, r0, r3",
            "cmp r1, r3",
            "bhs 0x1f8e8",
            "add r7, r4, r6",
            "mov r1, r4",
            "mov r0, r7",
            "rsb r2, r4, r2",
            "bl sym.imp.memmove",
            "cmp r7, r0",
            "beq 0x1f8f8",
            "ldr r0, str.cant_create_room_for_new_characters",
            "mov r4, 0",
            "bl fcn.0001f770",
            "b 0x1f924",
            "mov r2, r6",
            "mov r0, r4",
            "mov r1, 0x20",
            "bl sym.imp.memset",
            "ldr r3, [r5, 4]",
            "add r6, r3, r6",
            "ldr r3, [0x0001f934]",
            "str r6, [r5, 4]",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "mov r0, r4",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.0001f7e0": {
        "function_address": "0x0001f7e0",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "cmp r1, r0",
            "ldr r3, [0x0001f894]",
            "mov r7, r1",
            "addhs r1, r1, 1",
            "addlo r1, r0, 1",
            "movhs r4, r0",
            "movlo r4, r7",
            "ldr r5, [r3]",
            "mov r6, r0",
            "ldr r3, [r5]",
            "ldr r2, [r5, 4]",
            "cmp r1, r3",
            "blo 0x1f88c",
            "cmp r1, r2",
            "bhi 0x1f88c",
            "cmp r4, r3",
            "blo 0x1f88c",
            "cmp r4, r2",
            "bhs 0x1f88c",
            "cmp r1, r2",
            "bhs 0x1f854",
            "mov r0, r4",
            "rsb r2, r1, r2",
            "bl sym.imp.memmove",
            "cmp r4, r0",
            "beq 0x1f854",
            "ldr r0, str.cant_delete_the_character",
            "bl fcn.0001f770",
            "rsb r6, r6, r7",
            "ldm r5, {r3, r7}",
            "mvn r6, r6",
            "add r6, r7, r6",
            "cmp r4, r6",
            "str r6, [r5, 4]",
            "subhs r4, r6, 1",
            "cmp r6, r3",
            "strls r3, [r5, 4]",
            "movls r4, r3",
            "ldr r3, [0x0001f89c]",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "mov r0, r4",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.0001f2a8": {
        "function_address": "0x0001f2a8",
        "instructions": [
            "ldr r3, [0x0001f2e0]",
            "push {r4, r5, r6, lr}",
            "mov r4, 0",
            "ldr r5, [0x0001f2e4]",
            "ldr r0, [r3]",
            "b 0x1f2c8",
            "add r4, r4, 1",
            "bl fcn.0001f274",
            "ldr r3, [r5]",
            "sub r3, r3, 2",
            "cmp r4, r3",
            "blt 0x1f2c0",
            "pop {r4, r5, r6, lr}",
            "b fcn.0001f208"
        ]
    },
    "fcn.0001fe50": {
        "function_address": "0x0001fe50",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r6, r0",
            "mov r5, r1",
            "mov r4, r2",
            "bl sym.imp.strncmp",
            "ldr r3, [0x0001fe88]",
            "ldr r3, [r3]",
            "tst r3, 4",
            "popeq {r4, r5, r6, pc}",
            "mov r0, r6",
            "mov r1, r5",
            "mov r2, r4",
            "pop {r4, r5, r6, lr}",
            "b sym.imp.strncasecmp"
        ]
    },
    "fcn.0001f2e8": {
        "function_address": "0x0001f2e8",
        "instructions": [
            "cmp r1, r0",
            "push {r4, lr}",
            "movlo r3, r0",
            "mov r4, r0",
            "movlo r4, r1",
            "movlo r1, r3",
            "mov r0, r1",
            "bl fcn.0001f208",
            "ldr r3, [0x0001f344]",
            "ldr r2, [r3]",
            "mov r3, 0",
            "b 0x1f324",
            "ldrb r1, [r4], 1",
            "cmp r1, 0xa",
            "addeq r3, r3, 1",
            "cmp r4, r0",
            "bhi 0x1f33c",
            "ldr r1, [r2, 4]",
            "sub r1, r1, 1",
            "cmp r4, r1",
            "bls 0x1f318",
            "mov r0, r3",
            "pop {r4, pc}"
        ]
    },
    "fcn.0001fe8c": {
        "function_address": "0x0001fe8c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r7, r2",
            "mov r4, r0",
            "mov r0, r1",
            "mov r5, r1",
            "mov r8, r3",
            "bl sym.imp.strlen",
            "cmp r7, 1",
            "mov r6, r0",
            "bne 0x1ff04",
            "ldr r3, [0x0001ff64]",
            "cmp r8, 0",
            "ldr r3, [r3]",
            "ldr r7, [r3, 4]",
            "subne r7, r7, 1",
            "bne 0x1fef8",
            "mov r0, r4",
            "bl fcn.0001f274",
            "mov r7, r0",
            "b 0x1fef8",
            "mov r0, r4",
            "mov r1, r5",
            "mov r2, r6",
            "bl fcn.0001fe50",
            "cmp r0, 0",
            "beq 0x1ff5c",
            "add r4, r4, 1",
            "cmp r4, r7",
            "blo 0x1fedc",
            "b 0x1ff58",
            "cmn r7, 1",
            "bne 0x1ff58",
            "ldr r3, [0x0001ff64]",
            "cmp r8, 0",
            "ldr r3, [r3]",
            "ldr r7, [r3]",
            "bne 0x1ff2c",
            "mov r0, r4",
            "bl fcn.0001f23c",
            "mov r7, r0",
            "rsb r4, r6, r4",
            "b 0x1ff50",
            "mov r0, r4",
            "mov r1, r5",
            "mov r2, r6",
            "bl fcn.0001fe50",
            "cmp r0, 0",
            "beq 0x1ff5c",
            "sub r4, r4, 1",
            "cmp r4, r7",
            "bhs 0x1ff34",
            "mov r4, 0",
            "mov r0, r4",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.0001fa90": {
        "function_address": "0x0001fa90",
        "instructions": [
            "push {r0, r1, r2, r3}",
            "ldr r3, [0x0001fac8]",
            "push {r0, r1, r2, lr}",
            "add r2, sp, 0x14",
            "ldr r0, [r3]",
            "ldr r1, [sp, 0x10]",
            "str r2, [sp, 4]",
            "bl sym.imp.vsprintf",
            "ldr r3, [0x0001facc]",
            "mov r2, 1",
            "str r2, [r3]",
            "pop {r1, r2, r3, lr}",
            "add sp, sp, 0x10",
            "bx lr"
        ]
    },
    "fcn.00020188": {
        "function_address": "0x00020188",
        "instructions": [
            "cmp r1, r0",
            "push {r3, r4, r5, r6, r7, r8, sl, lr}",
            "movlo r3, r0",
            "mov r4, r0",
            "movlo r4, r1",
            "movlo r1, r3",
            "ldr r3, [0x000201f4]",
            "add r8, r1, 1",
            "add r6, r2, 4",
            "rsb r8, r4, r8",
            "add sl, r8, 1",
            "ldr r5, [r3]",
            "ldr r0, [r5, r6, lsl 2]",
            "bl sym.imp.free",
            "mov r0, sl",
            "bl fcn.00029e54"
        ]
    },
    "fcn.00020334": {
        "function_address": "0x00020334",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r0, 0",
            "sub sp, sp, 0x90",
            "bl sym.imp.alarm",
            "ldr r3, obj.stdout",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x00020520]",
            "ldr r4, [r3]",
            "cmp r4, 0",
            "bgt 0x20464",
            "ldr r6, [0x00020524]",
            "ldr r5, [0x00020528]",
            "mov r0, 0",
            "movw r2, 0x3ff",
            "mov r1, r5",
            "bl sym.imp.read",
            "subs r4, r0, 0",
            "bge 0x203c4",
            "ldr r2, [r6]",
            "ldr r3, [r2]",
            "cmp r3, 4",
            "beq 0x20364",
            "cmp r3, 9",
            "cmpne r3, 0xe",
            "beq 0x203ac",
            "cmp r3, 0x16",
            "beq 0x203ac",
            "cmp r3, 5",
            "bne 0x203b8",
            "ldr r3, [0x0002052c]",
            "mov r1, 0",
            "str r1, [r3]",
            "mov r5, 0",
            "str r5, [r2]",
            "b 0x20510",
            "moveq r5, r4",
            "beq 0x20510",
            "ldrb r3, [r5]",
            "cmp r3, 0x1b",
            "bne 0x2045c",
            "add r3, sp, 4",
            "add r1, sp, 0x84",
            "mov r2, 0",
            "str r2, [r3, 4]!",
            "cmp r3, r1",
            "bne 0x203e4",
            "ldr r3, [sp, 8]",
            "add r7, sp, 8",
            "str r2, [sp, 0x88]",
            "add r6, sp, 0x88",
            "movw r5, 0x3fb",
            "ldr r8, [0x00020528]",
            "orr r3, r3, 1",
            "str r3, [sp, 8]",
            "movw r3, sym.imp.srand",
            "str r3, [sp, 0x8c]",
            "b 0x20434",
            "add r1, r8, r4",
            "rsb r2, r4, 0x400",
            "mov r0, 0",
            "bl sym.imp.read",
            "cmp r0, 0",
            "addgt r4, r4, r0",
            "mov r2, 0",
            "mov r0, 1",
            "mov r1, r7",
            "mov r3, r2",
            "str r6, [sp]",
            "bl sym.imp.select",
            "cmp r0, 0",
            "ble 0x2045c",
            "cmp r4, r5",
            "ble 0x2041c",
            "ldr r3, [0x00020520]",
            "str r4, [r3]",
            "ldr r3, [0x00020528]",
            "ldrb r5, [r3]",
            "cmp r4, 1",
            "movle r3, 0",
            "movgt r3, 1",
            "cmp r5, 0x1b",
            "movne r3, 0",
            "cmp r3, 0",
            "moveq r4, 1",
            "beq 0x204e8",
            "ldr r5, str.e__d__dH",
            "sub r6, r5, 0x108",
            "ldr r8, [r6]",
            "mov r0, r8",
            "bl sym.imp.strlen",
            "cmp r4, r0",
            "mov r7, r0",
            "ble 0x204cc",
            "mov r0, r8",
            "ldr r1, [0x00020534]",
            "mov r2, r7",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "ldrbeq r5, [r6, 4]",
            "addeq r4, r7, 1",
            "beq 0x204dc",
            "add r6, r6, 8",
            "cmp r6, r5",
            "bne 0x20494",
            "mov r5, 0x1b",
            "ldr r3, str.e__d__dH",
            "cmp r6, r3",
            "moveq r4, 1",
            "ldr r3, [0x00020520]",
            "ldr r0, [0x00020528]",
            "ldr r2, [r3]",
            "add r1, r0, r4",
            "rsb r2, r4, r2",
            "str r2, [r3]",
            "rsb r2, r4, 0x400",
            "bl sym.imp.memmove",
            "mov r0, 3",
            "bl sym.imp.alarm",
            "mov r0, r5",
            "add sp, sp, 0x90",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "sym.imp.alarm": {
        "function_address": "0x0000c2e4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x434]!"
        ]
    },
    "sym.imp.select": {
        "function_address": "0x0000bb64",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x934]!"
        ]
    },
    "fcn.00020790": {
        "function_address": "0x00020790",
        "instructions": [
            "ldr r3, [0x000208b4]",
            "push {r4, r5, r6, r7, r8, lr}",
            "sub sp, sp, 0x800",
            "mov r4, r0",
            "mov r6, r1",
            "mov r8, r2",
            "mov r1, 0",
            "mov r2, 0x400",
            "add r0, sp, 0x400",
            "ldr r5, [r3]",
            "bic r4, r4, r4, asr 31",
            "bl sym.imp.memset",
            "ldr r3, [0x000208b8]",
            "bic r6, r6, r6, asr 31",
            "add r7, sp, 0x400",
            "ldr r1, str.e__d__dH",
            "mov r0, r7",
            "ldr r3, [r3]",
            "cmp r4, r3",
            "subge r4, r3, 1",
            "ldr r3, [0x000208c0]",
            "add r2, r4, 1",
            "ldr r3, [r3]",
            "cmp r6, r3",
            "subge r6, r3, 1",
            "add r3, r6, 1",
            "bl sym.imp.sprintf",
            "cmp r8, 0",
            "moveq r0, r7",
            "beq 0x208a8",
            "mov r0, sp",
            "mov r1, 0",
            "mov r2, 0x400",
            "bl sym.imp.memset",
            "b 0x2082c",
            "sub r5, r5, 1",
            "mov r0, sp",
            "ldr r1, [0x000208c4]",
            "bl sym.imp.strcat",
            "cmp r4, r5",
            "blt 0x2081c",
            "b 0x2084c",
            "mov r0, sp",
            "ldr r1, [0x000208c8]",
            "bl sym.imp.strcat",
            "add r5, r5, 1",
            "b 0x20850",
            "mov r8, sp",
            "cmp r4, r5",
            "bgt 0x20838",
            "ldr r1, aav.0x0005ad10",
            "mov r0, sp",
            "bl sym.imp.strcat",
            "ldr r3, [0x000208c0]",
            "mov r2, r6",
            "mov r0, sp",
            "ldr r1, [r3]",
            "ldr r3, [0x000208d0]",
            "ldr r3, [r3]",
            "mla r1, r1, r4, r3",
            "add r4, sp, 0x400",
            "bl sym.imp.strncat",
            "mov r0, sp",
            "bl sym.imp.strlen",
            "mov r7, r0",
            "mov r0, r4",
            "bl sym.imp.strlen",
            "cmp r7, r0",
            "movlo r0, r8",
            "movhs r0, r4",
            "bl fcn.0001fad0",
            "add sp, sp, 0x800",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "sym.imp.strncat": {
        "function_address": "0x0000bcc0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x84c]!"
        ]
    },
    "fcn.0001fad0": {
        "function_address": "0x0001fad0",
        "instructions": [
            "ldr r3, obj.stdout",
            "ldr r1, [r3]",
            "b sym.imp.fputs"
        ]
    },
    "fcn.00020300": {
        "function_address": "0x00020300",
        "instructions": [
            "ldr r3, obj.stdout",
            "push {r4, lr}",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x00020330]",
            "mov r0, 0",
            "mov r1, r0",
            "ldr r2, [r3]",
            "add r2, r2, 0x210",
            "pop {r4, lr}",
            "b sym.imp.tcsetattr"
        ]
    },
    "fcn.00020538": {
        "function_address": "0x00020538",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "ldr r3, [0x000205e0]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "bne 0x20594",
            "ldr r6, [0x000205e4]",
            "ldr r5, [0x000205e8]",
            "ldr r3, [r6]",
            "cmp r3, 0",
            "beq 0x20588",
            "ldrb r4, [r3], 1",
            "cmp r4, 0",
            "strb r4, [r5]",
            "str r3, [r6]",
            "bne 0x205d4",
            "ldr r7, [0x000205ec]",
            "ldr r0, [r7]",
            "bl sym.imp.free",
            "str r4, [r6]",
            "str r4, [r7]",
            "bl fcn.00020334",
            "strb r0, [r5]",
            "b 0x205d4",
            "bl fcn.00020334",
            "ldr r3, [0x000205e8]",
            "mov r5, r0",
            "strb r0, [r3]",
            "ldr r3, [0x000205f0]",
            "ldr r4, [r3]",
            "cmp r4, 0",
            "beq 0x205d4",
            "mov r0, r4",
            "bl sym.imp.strlen",
            "movw r3, 0x3fe",
            "cmp r0, r3",
            "strble r5, [r4, r0]",
            "ble 0x205d4",
            "ldr r0, str.last_modifying_cmd_overrun",
            "bl fcn.0001f770",
            "ldr r3, [0x000205e8]",
            "ldrb r0, [r3]",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.00020930": {
        "function_address": "0x00020930",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x400",
            "ldr r4, [0x00020e84]",
            "sub sp, sp, 0xc",
            "mov sb, r0",
            "mov r0, 0",
            "ldr r1, [0x00020e88]",
            "mov r2, r4",
            "ldr r6, [0x00020e8c]",
            "bl fcn.0002a474",
            "ldr r3, [0x00020e90]",
            "ldr r3, [r3]",
            "ldr r7, [r3, 0xc]",
            "mov r0, r7",
            "bl fcn.0001f1d8",
            "mov r5, r0",
            "bl fcn.0001f2a8",
            "ldr r1, [r6]",
            "cmp r5, r1",
            "bhs 0x209d0",
            "mov r0, r5",
            "bl fcn.0001f2e8",
            "ldr r3, [0x00020e84]",
            "ldr r6, [0x00020e8c]",
            "ldr r8, [r3]",
            "str r5, [r6]",
            "sub r8, r8, 1",
            "add r8, r8, r8, lsr 31",
            "asr r8, r8, 1",
            "cmp r0, r8",
            "movgt r4, 0",
            "bgt 0x209c4",
            "b 0x20a18",
            "add r4, r4, 1",
            "ldr r0, [r6]",
            "bl fcn.0001f23c",
            "str r0, [r6]",
            "cmp r4, r8",
            "blt 0x209b4",
            "b 0x20a18",
            "cmp r5, r0",
            "bls 0x20a18",
            "mov r1, r5",
            "bl fcn.0001f2e8",
            "ldr r3, [r4]",
            "sub r3, r3, 1",
            "add r3, r3, r3, lsr 31",
            "cmp r0, r3, asr 1",
            "movle r4, 0",
            "suble r8, r0, 1",
            "ble 0x20a10",
            "b 0x20988",
            "add r4, r4, 1",
            "ldr r0, [r6]",
            "bl fcn.0001f274",
            "str r0, [r6]",
            "cmp r4, r8",
            "blt 0x20a00",
            "ldr r3, [0x00020e8c]",
            "mov r4, 0",
            "ldr sl, [0x00020e84]",
            "ldr r6, [r3]",
            "mov r0, r6",
            "b 0x20a40",
            "cmp r0, r5",
            "beq 0x20a50",
            "add r4, r4, 1",
            "bl fcn.0001f274",
            "ldr r3, [sl]",
            "sub r3, r3, 1",
            "cmp r4, r3",
            "blt 0x20a30",
            "ldr sl, [0x00020e94]",
            "sub r8, r0, 1",
            "mov r0, 0",
            "ldrb r3, [r8, 1]!",
            "cmp r3, 0xa",
            "cmpne r3, 0",
            "beq 0x20aac",
            "cmp r3, 9",
            "bne 0x20a90",
            "cmp r7, r8",
            "bne 0x20a88",
            "ldr r3, [sl]",
            "cmp r3, 0",
            "bne 0x20aac",
            "bl fcn.0001f1b4",
            "b 0x20a9c",
            "cmp r3, 0x7f",
            "cmpne r3, 0x1f",
            "addls r0, r0, 1",
            "cmp r7, r8",
            "bls 0x20aac",
            "adds r0, r0, 1",
            "bne 0x20a5c",
            "ldr r3, [0x00020e98]",
            "ldr r2, [r3]",
            "cmp r0, r2",
            "strlt r0, [r3]",
            "ldr r3, [0x00020e88]",
            "ldr r2, [r3]",
            "ldr r3, [0x00020e98]",
            "ldr r1, [r3]",
            "add r1, r2, r1",
            "cmp r0, r1",
            "rsbge r2, r2, 1",
            "addge r2, r2, r0",
            "strge r2, [r3]",
            "cmp r7, r5",
            "bne 0x20afc",
            "ldrb r3, [r7]",
            "cmp r3, 9",
            "ldreq r3, [0x00020e98]",
            "moveq r2, 0",
            "streq r2, [r3]",
            "ldr r3, [0x00020e98]",
            "mvn fp, 1",
            "mov r5, 0",
            "ldr r3, [r3]",
            "rsb r0, r3, r0",
            "ldr r3, [0x00020e9c]",
            "str r4, [r3]",
            "ldr r3, [0x00020ea0]",
            "str r0, [r3]",
            "b 0x20e1c",
            "mov r2, 0x400",
            "add r0, sp, 8",
            "mov r1, 0x20",
            "mov r7, r6",
            "bl sym.imp.memset",
            "ldr r3, [0x00020e90]",
            "mov r4, 0",
            "strb r4, [sp, 0x407]",
            "ldr r8, [r3]",
            "ldr r3, [0x00020ea4]",
            "ldr sl, [r3]",
            "sub r3, sl, 1",
            "mov r2, r3",
            "mov r3, r6",
            "mov r6, r2",
            "rsbs r2, r4, 1",
            "movlo r2, 0",
            "ldr r1, [r8, 4]",
            "cmp r5, 0",
            "ldr r0, [r8]",
            "movle r2, 0",
            "cmp r2, 0",
            "moveq r2, 0x20",
            "movne r2, 0x7e",
            "cmp r0, r1",
            "bhs 0x20ba4",
            "cmp r7, r1",
            "bhs 0x20ba4",
            "ldrb r2, [r7]",
            "cmp r2, 0xa",
            "beq 0x20c70",
            "add r7, r7, 1",
            "tst r2, 0x80",
            "beq 0x20bc4",
            "cmp r2, 0x7f",
            "cmpne r2, 0x1f",
            "movls r2, 0x2e",
            "bls 0x20bc4",
            "cmp r2, 0x9b",
            "moveq r2, 0x2e",
            "cmp r2, 0x7f",
            "movne r1, 0",
            "moveq r1, 1",
            "cmp r2, 0x7f",
            "cmpne r2, 0x1f",
            "bhi 0x20c44",
            "cmp r2, 9",
            "bne 0x20c1c",
            "b 0x20bf8",
            "add r2, sp, 8",
            "mov r0, 0x20",
            "strb r0, [r2, r4]",
            "add r4, r4, 1",
            "mov r0, r4",
            "mov r1, sl",
            "str r3, [sp, 4]",
            "bl fcn.000551a4",
            "cmp r1, r6",
            "ldr r3, [sp, 4]",
            "bne 0x20be8",
            "mov r2, 0x20",
            "b 0x20c44",
            "cmp r1, 0",
            "add ip, sp, 0x400",
            "addeq r2, r2, 0x40",
            "add ip, ip, 8",
            "uxtbeq r2, r2",
            "add r0, ip, r4",
            "movne r2, 0x3f",
            "add r4, r4, 1",
            "mov ip, 0x5e",
            "strb ip, [r0, -0x400]",
            "add r0, sp, 0x400",
            "add r0, r0, 8",
            "add r1, r0, r4",
            "strb r2, [r1, -0x400]",
            "ldr r2, [r8, 4]",
            "cmp r7, r2",
            "bhs 0x20c70",
            "add r4, r4, 1",
            "movw r1, 0x3ff",
            "cmp r4, r1",
            "ble 0x20b60",
            "mov r6, r3",
            "ldr r3, [0x00020e90]",
            "ldr r3, [r3]",
            "ldr r2, [r3, 4]",
            "mov r3, r6",
            "cmp r3, r2",
            "mov r6, r3",
            "bhs 0x20ca0",
            "ldrb r1, [r3], 1",
            "cmp r1, 0xa",
            "mov r6, r3",
            "bne 0x20c84",
            "ldr r3, [0x00020e88]",
            "cmp sb, 0",
            "movne r4, 0",
            "ldr r1, [r3]",
            "ldr r3, [0x00020ea8]",
            "sub r2, r1, 1",
            "ldr sl, [r3]",
            "movne r7, r2",
            "movne r3, 1",
            "mla sl, r1, r5, sl",
            "bne 0x20d64",
            "ldr r3, [0x00020e98]",
            "add ip, sp, 0x400",
            "add ip, ip, 8",
            "mov r4, sb",
            "ldr r0, [r3]",
            "add r3, ip, r0",
            "sub r3, r3, 0x400",
            "sub r3, r3, 1",
            "b 0x20d04",
            "ldrb lr, [r3, 1]!",
            "ldrb ip, [sl, r4]",
            "cmp lr, ip",
            "bne 0x20d14",
            "add r4, r4, 1",
            "cmp r4, r2",
            "ble 0x20cf0",
            "mov r3, 0",
            "b 0x20d18",
            "mov r3, 1",
            "add ip, r0, r1",
            "add lr, sp, 8",
            "add ip, lr, ip",
            "mov r7, r2",
            "b 0x20d40",
            "ldrb lr, [ip, -1]!",
            "ldrb r8, [sl, r7]",
            "cmp r8, lr",
            "bne 0x20d4c",
            "sub r7, r7, 1",
            "cmp r7, r4",
            "bge 0x20d2c",
            "b 0x20d50",
            "mov r3, 1",
            "ldr ip, [0x00020eac]",
            "bic r4, r4, r4, asr 31",
            "ldr ip, [ip]",
            "cmp r0, ip",
            "movne r3, 1",
            "cmp r1, r7",
            "movle r7, r2",
            "cmp r4, r7",
            "movgt r7, r2",
            "movgt r4, 0",
            "cmp r3, 0",
            "beq 0x20e18",
            "ldr r3, [0x00020e98]",
            "add r7, r7, 1",
            "add sl, sl, r4",
            "rsb r7, r4, r7",
            "add r1, sp, 8",
            "mov r0, sl",
            "ldr r8, [r3]",
            "mov r2, r7",
            "add r3, r4, r8",
            "add r1, r1, r3",
            "bl sym.imp.memmove",
            "ldr r3, [0x00020eac]",
            "ldr r3, [r3]",
            "cmp r8, r3",
            "beq 0x20dd0",
            "mov r0, r5",
            "mov r1, r4",
            "mov r2, 0",
            "bl fcn.00020790",
            "b 0x20e08",
            "add r2, fp, 1",
            "mov r0, r5",
            "mov r1, r4",
            "cmp r5, r2",
            "movne r2, 0",
            "moveq r2, 1",
            "bl fcn.00020790",
            "mov fp, r5",
            "b 0x20e08",
            "ldr r2, obj.stdout",
            "sub r7, r7, 1",
            "ldrb r0, [sl], 1",
            "ldr r1, [r2]",
            "bl sym.imp.fputc",
            "cmp r7, 0",
            "bgt 0x20df4",
            "ldr r3, [0x00020eb4]",
            "str r5, [r3]",
            "add r5, r5, 1",
            "ldr r3, [0x00020e84]",
            "ldr r3, [r3]",
            "sub r3, r3, 1",
            "cmp r5, r3",
            "blt 0x20b24",
            "ldr r5, [0x00020e9c]",
            "ldr r4, [0x00020eb4]",
            "ldr r3, [0x00020ea0]",
            "ldr r0, [r5]",
            "ldr r2, [r4]",
            "ldr r1, [r3]",
            "cmp r0, r2",
            "movne r2, 0",
            "moveq r2, 1",
            "bl fcn.00020790",
            "ldr r3, [r5]",
            "str r3, [r4]",
            "ldr r3, [0x00020e98]",
            "ldr r2, [r3]",
            "ldr r3, [0x00020eac]",
            "ldr r1, [r3]",
            "cmp r2, r1",
            "strne r2, [r3]",
            "add sp, sp, 0xc",
            "add sp, sp, 0x400",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00021038": {
        "function_address": "0x00021038",
        "instructions": [
            "push {r4, lr}",
            "bl fcn.0001fae0",
            "ldr r0, str._Hit_return_to_continue_",
            "bl fcn.0001fad0",
            "bl fcn.0001faec",
            "bl fcn.00020538",
            "cmp r0, 0xa",
            "beq 0x21060",
            "cmp r0, 0xd",
            "bne 0x2104c",
            "mov r0, 1",
            "pop {r4, lr}",
            "b fcn.00020ff8"
        ]
    },
    "fcn.0001fae0": {
        "function_address": "0x0001fae0",
        "instructions": [
            "ldr r0, [pc]",
            "b fcn.0001fad0"
        ]
    },
    "fcn.0001faec": {
        "function_address": "0x0001faec",
        "instructions": [
            "ldr r0, [pc]",
            "b fcn.0001fad0"
        ]
    },
    "fcn.0001f624": {
        "function_address": "0x0001f624",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r5, r1",
            "ldr r6, [0x0001f694]",
            "mov r4, r0",
            "ldr r0, [r6]",
            "bl sym.imp.free",
            "mul r0, r4, r5",
            "ldr r3, [0x0001f698]",
            "sub r4, r4, 1",
            "add r0, r0, 8",
            "str r0, [r3]",
            "bl fcn.00029e54"
        ]
    },
    "fcn.0001f5f8": {
        "function_address": "0x0001f5f8",
        "instructions": [
            "ldr r3, [0x0001f610]",
            "mov r1, 0x20",
            "ldr r0, [r3]",
            "ldr r3, [0x0001f614]",
            "ldr r2, [r3]",
            "b sym.imp.memset"
        ]
    },
    "fcn.0001f69c": {
        "function_address": "0x0001f69c",
        "instructions": [
            "ldr r3, [0x0001f72c]",
            "mov r0, 0",
            "push {r4, r5, r6, lr}",
            "ldr r5, [r3]",
            "add r4, r5, 0x210",
            "mov r1, r4",
            "bl sym.imp.tcgetattr",
            "ldm r4!, {r0, r1, r2, r3}",
            "add ip, r5, 0x24c",
            "stm ip!, {r0, r1, r2, r3}",
            "ldm r4!, {r0, r1, r2, r3}",
            "stm ip!, {r0, r1, r2, r3}",
            "ldm r4!, {r0, r1, r2, r3}",
            "stm ip!, {r0, r1, r2, r3}",
            "ldr r3, [r5, 0x258]",
            "ldm r4, {r0, r1, r2}",
            "bic r3, r3, 0xa",
            "str r3, [r5, 0x258]",
            "ldr r3, [r5, 0x24c]",
            "stm ip, {r0, r1, r2}",
            "mov r0, 0",
            "mov r1, r0",
            "bic r3, r3, 0x500",
            "str r3, [r5, 0x24c]",
            "ldr r3, [r5, 0x250]",
            "ldrb r2, [r5, 0x25f]",
            "strb r0, [r5, 0x262]",
            "bic r3, r3, 4",
            "str r3, [r5, 0x250]",
            "mov r3, 1",
            "strb r3, [r5, 0x263]",
            "ldr r3, [0x0001f730]",
            "strb r2, [r3]",
            "add r2, r5, 0x24c",
            "pop {r4, r5, r6, lr}",
            "b sym.imp.tcsetattr"
        ]
    },
    "sym.imp.tcgetattr": {
        "function_address": "0x0000bf30",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x6ac]!"
        ]
    },
    "fcn.00020ff8": {
        "function_address": "0x00020ff8",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r0",
            "mov r0, 0",
            "mov r1, r0",
            "mov r2, r0",
            "bl fcn.00020790",
            "bl fcn.0001faf8",
            "bl fcn.0001f5f8",
            "ldr r3, [0x00021034]",
            "mov r2, 0",
            "mov r0, r4",
            "str r2, [r3]",
            "bl fcn.00020930",
            "pop {r4, lr}",
            "b fcn.00021070"
        ]
    },
    "fcn.0001faf8": {
        "function_address": "0x0001faf8",
        "instructions": [
            "ldr r0, [pc]",
            "b fcn.0001fad0"
        ]
    },
    "fcn.000205f8": {
        "function_address": "0x000205f8",
        "instructions": [
            "ldr r3, obj.stdout",
            "push {r4, lr}",
            "mov r4, r0",
            "sub sp, sp, 0x90",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "add r3, sp, 4",
            "add r1, sp, 0x84",
            "mov r2, 0",
            "str r2, [r3, 4]!",
            "cmp r3, r1",
            "bne 0x2061c",
            "ldr r3, [sp, 8]",
            "add r1, sp, 8",
            "mov r0, 1",
            "str r2, [sp, 0x88]",
            "orr r3, r3, 1",
            "str r3, [sp, 8]",
            "movw r3, 0x2710",
            "mul r4, r3, r4",
            "add r3, sp, 0x88",
            "str r3, [sp]",
            "mov r3, r2",
            "str r4, [sp, 0x8c]",
            "bl sym.imp.select",
            "ldr r0, [sp, 8]",
            "and r0, r0, 1",
            "add sp, sp, 0x90",
            "pop {r4, pc}"
        ]
    },
    "fcn.000213a4": {
        "function_address": "0x000213a4",
        "instructions": [
            "ldr r3, [0x000213e8]",
            "push {r4, lr}",
            "ldr r3, [r3]",
            "tst r3, 8",
            "bne 0x213c4",
            "ldr r0, [0x000213ec]",
            "pop {r4, lr}",
            "b fcn.0001fad0",
            "bl fcn.0001fae0",
            "mov r0, 1",
            "bl fcn.00020ff8",
            "mov r0, 0xa",
            "bl fcn.000205f8",
            "bl fcn.0001faec",
            "mov r0, 1",
            "pop {r4, lr}",
            "b fcn.00020ff8"
        ]
    },
    "fcn.0001f938": {
        "function_address": "0x0001f938",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r1",
            "mov r1, 1",
            "bl fcn.0001f8a0",
            "cmp r0, 0",
            "popeq {r4, pc}",
            "ldr r3, [0x0001f968]",
            "strb r4, [r0], 1",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "pop {r4, pc}"
        ]
    },
    "fcn.0001f734": {
        "function_address": "0x0001f734",
        "instructions": [
            "subs r3, r0, 0",
            "str lr, [sp, -4]!",
            "sub sp, sp, 0x6c",
            "beq 0x1f764",
            "ldrb r3, [r3]",
            "cmp r3, 0",
            "beq 0x1f764",
            "mov r1, sp",
            "bl sym.imp.stat64",
            "cmp r0, 0",
            "ldreq r0, [sp, 0x30]",
            "beq 0x1f768",
            "mvn r0, 0",
            "add sp, sp, 0x6c",
            "ldm sp!, {pc}"
        ]
    },
    "fcn.00021440": {
        "function_address": "0x00021440",
        "instructions": [
            "cmp r1, 0x16",
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r4, r0",
            "mov r5, r1",
            "bne 0x21484",
            "mov r1, 0x5e",
            "bl fcn.0001f938",
            "mov r4, r0",
            "mov r0, 0",
            "bl fcn.00020930",
            "bl fcn.00020538",
            "ldr r3, [0x00021614]",
            "strb r0, [r4, -1]",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "b 0x2160c",
            "cmp r1, 0x1b",
            "bne 0x214d8",
            "ldr r3, [0x00021618]",
            "mov r5, 0",
            "str r5, [r3]",
            "ldr r3, [0x0002161c]",
            "str r5, [r3]",
            "bl fcn.0001f590",
            "ldr r3, [0x00021620]",
            "sub r2, r4, 1",
            "str r5, [r3]",
            "ldrb r3, [r4, -1]",
            "cmp r3, 0xa",
            "beq 0x2160c",
            "ldr r3, [0x00021624]",
            "ldr r3, [r3]",
            "ldr r1, [r3, 0xc]",
            "ldr r3, [r3]",
            "cmp r1, r3",
            "movhi r4, r2",
            "b 0x2160c",
            "ldr r3, [0x00021628]",
            "ldrb r7, [r3]",
            "cmp r7, r1",
            "cmpne r1, 8",
            "movne r7, 0",
            "moveq r7, 1",
            "beq 0x214fc",
            "cmp r1, 0x7f",
            "bne 0x21530",
            "ldrb r3, [r4, -1]",
            "sub r0, r4, 1",
            "cmp r3, 0xa",
            "beq 0x2160c",
            "ldr r3, [0x00021624]",
            "ldr r3, [r3]",
            "ldr r2, [r3, 0xc]",
            "ldr r3, [r3]",
            "cmp r2, r3",
            "bls 0x2160c",
            "mov r1, r0",
            "pop {r4, r5, r6, r7, r8, lr}",
            "b fcn.0001f7e0",
            "cmp r1, 0xd",
            "moveq r5, 0xa",
            "mov r1, r5",
            "bl fcn.0001f938",
            "ldr r3, [0x0002162c]",
            "mov r6, r0",
            "ldr r3, [r3]",
            "tst r3, 2",
            "beq 0x215b4",
            "ldrb r8, [r4]",
            "ldr r0, [0x00021630]",
            "mov r1, r8",
            "bl sym.imp.strchr",
            "cmp r0, 0",
            "beq 0x215b4",
            "mov r0, r4",
            "mov r1, r8",
            "bl fcn.0001f4d0",
            "cmp r0, 0",
            "bne 0x21588",
            "bl fcn.000213a4",
            "b 0x215b4",
            "ldr r3, [0x00021624]",
            "ldr r4, [r3]",
            "ldr r8, [r4, 0xc]",
            "str r0, [r4, 0xc]",
            "mov r0, r7",
            "bl fcn.00020930",
            "mov r0, 0x28",
            "bl fcn.000205f8",
            "str r8, [r4, 0xc]",
            "mov r0, r7",
            "bl fcn.00020930",
            "ldr r3, [0x0002162c]",
            "ldr r3, [r3]",
            "cmp r5, 0xa",
            "movne r5, 0",
            "andeq r5, r3, 1",
            "cmp r5, 0",
            "moveq r4, r6",
            "beq 0x2160c",
            "mov r0, r6",
            "mov r4, r6",
            "bl fcn.0001f23c",
            "mov r5, r0",
            "b 0x215f8",
            "mov r0, r4",
            "mov r1, r6",
            "bl fcn.0001f938",
            "mov r4, r0",
            "ldrb r6, [r5], 1",
            "mov r0, r6",
            "bl sym.imp.isblank",
            "cmp r0, 0",
            "bne 0x215e8",
            "mov r0, r4",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.0001f590": {
        "function_address": "0x0001f590",
        "instructions": [
            "ldr r3, [0x0001f5b0]",
            "mov r2, 0x1a",
            "ldr r3, [r3]",
            "str r2, [r3, 0x80]",
            "mov r2, 0",
            "ldr r3, [0x0001f5b4]",
            "str r2, [r3]",
            "bx lr"
        ]
    },
    "fcn.0001f4d0": {
        "function_address": "0x0001f4d0",
        "instructions": [
            "cmp r1, 0x5d",
            "push {r4, r5, r6, lr}",
            "mvneq r3, 0",
            "moveq ip, 0x5b",
            "beq 0x1f534",
            "bhi 0x1f50c",
            "cmp r1, 0x29",
            "mvneq r3, 0",
            "moveq ip, 0x28",
            "beq 0x1f534",
            "cmp r1, 0x5b",
            "moveq r3, 1",
            "moveq ip, 0x5d",
            "beq 0x1f534",
            "b 0x1f52c",
            "cmp r1, 0x7b",
            "moveq r3, 1",
            "moveq ip, 0x7d",
            "beq 0x1f534",
            "cmp r1, 0x7d",
            "mvneq r3, 0",
            "moveq ip, 0x7b",
            "beq 0x1f534",
            "mov r3, 1",
            "mov ip, 0x29",
            "ldr r2, [0x0001f58c]",
            "add r0, r0, r3",
            "ldr r4, [r2]",
            "mov r2, 1",
            "ldr r6, [r4]",
            "b 0x1f56c",
            "ldrb r5, [r0]",
            "cmp r5, r1",
            "addeq r2, r2, 1",
            "cmp r5, ip",
            "subeq r2, r2, 1",
            "cmp r2, 0",
            "popeq {r4, r5, r6, pc}",
            "add r0, r0, r3",
            "cmp r6, r0",
            "bhi 0x1f580",
            "ldr r5, [r4, 4]",
            "cmp r0, r5",
            "blo 0x1f54c",
            "cmp r2, 0",
            "movne r0, 0",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.imp.isblank": {
        "function_address": "0x0000c200",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x4cc]!"
        ]
    },
    "fcn.0001fb10": {
        "function_address": "0x0001fb10",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sl, lr}",
            "sub sp, sp, 0x6c",
            "mov r4, r1",
            "mov r1, sp",
            "mov r5, r0",
            "mov sl, r2",
            "bl sym.imp.stat64",
            "cmp r0, 0",
            "blt 0x1fb90",
            "ldr r3, [sp, 0x10]",
            "tst r3, 0x8000",
            "bne 0x1fb50",
            "ldr r0, str.__s__Not_a_regular_file",
            "mov r1, r5",
            "bl fcn.0001f770",
            "b 0x1fc68",
            "ldr r3, [0x0001fcb4]",
            "ldr r3, [r3]",
            "ldr r2, [r3]",
            "cmp r4, r2",
            "blo 0x1fb70",
            "ldr r3, [r3, 4]",
            "cmp r4, r3",
            "bls 0x1fb7c",
            "ldr r0, str.Trying_to_insert_file_outside_of_memory",
            "bl fcn.0001f770",
            "b 0x1fc68",
            "mov r0, r5",
            "mov r1, 0",
            "bl sym.imp.open64",
            "subs r8, r0, 0",
            "bge 0x1fbb4",
            "ldr r3, [0x0001fcbc]",
            "ldr r3, [r3]",
            "ldr r0, [r3]",
            "bl sym.imp.strerror",
            "mov r1, r5",
            "mov r2, r0",
            "ldr r0, str.__s___s",
            "bl fcn.0001f770",
            "b 0x1fc68",
            "ldr r6, [sp, 0x30]",
            "mov r0, r4",
            "mov r1, r6",
            "bl fcn.0001f8a0",
            "subs r7, r0, 0",
            "beq 0x1fc68",
            "mov r0, r8",
            "mov r1, r7",
            "mov r2, r6",
            "bl sym.imp.read",
            "subs r4, r0, 0",
            "bge 0x1fc20",
            "ldr r3, [0x0001fcbc]",
            "ldr r3, [r3]",
            "ldr r0, [r3]",
            "bl sym.imp.strerror",
            "mov r1, r5",
            "mov r2, r0",
            "ldr r0, str.__s___s",
            "bl fcn.0001f770",
            "sub r1, r6, 1",
            "mov r0, r7",
            "add r1, r7, r1",
            "bl fcn.0001f7e0",
            "cmp r4, r6",
            "bge 0x1fc4c",
            "b 0x1fc5c",
            "cmp r4, r6",
            "bge 0x1fc4c",
            "rsb r6, r4, r6",
            "add r0, r7, r4",
            "sub r1, r6, 1",
            "add r1, r7, r1",
            "bl fcn.0001f7e0",
            "ldr r0, str.cannot_read_all_of_file___s_",
            "mov r1, r5",
            "bl fcn.0001f770",
            "b 0x1fc5c",
            "ldr r3, [0x0001fcc8]",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "mov r0, r8",
            "bl sym.imp.close",
            "b 0x1fc6c",
            "mvn r4, 0",
            "cmp sl, 0",
            "beq 0x1fca4",
            "mov r0, r5",
            "mov r1, 2",
            "bl sym.imp.access",
            "cmp r0, 0",
            "blt 0x1fc94",
            "ldr r3, [sp, 0x10]",
            "tst r3, 0x92",
            "bne 0x1fca4",
            "ldr r3, [0x0001fccc]",
            "ldr r2, [r3]",
            "orr r2, r2, 1",
            "str r2, [r3]",
            "mov r0, r4",
            "add sp, sp, 0x6c",
            "pop {r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "fcn.0001ff68": {
        "function_address": "0x0001ff68",
        "instructions": [
            "mvn r3, 0",
            "push {r4, r5, r6, r7, lr}",
            "str r3, [r1]",
            "sub sp, sp, 0x400",
            "sub sp, sp, 0xc",
            "mov r4, r0",
            "ldrb r3, [r0]",
            "mov r5, r1",
            "cmp r3, 0x2e",
            "ldreq r3, [0x00020104]",
            "addeq r4, r0, 1",
            "ldreq r6, [r3]",
            "ldreq r0, [r6, 0xc]",
            "beq 0x200bc",
            "cmp r3, 0x27",
            "bne 0x1fffc",
            "add r6, r0, 1",
            "bl sym.imp.__ctype_tolower_loc",
            "ldrb r3, [r6]",
            "add r4, r6, 1",
            "ldr r2, [r0]",
            "lsl r3, r3, 1",
            "ldrsh r2, [r2, r3]",
            "sub r2, r2, 0x61",
            "uxtb r2, r2",
            "cmp r2, 0x19",
            "bhi 0x200f4",
            "ldr r3, [0x00020104]",
            "add r2, r2, 0x22",
            "ldr r3, [r3]",
            "ldr r1, [r3, r2, lsl 2]",
            "cmp r1, 0",
            "beq 0x200f4",
            "ldr r0, [r3]",
            "bl fcn.0001f2e8",
            "str r0, [r5]",
            "b 0x200f4",
            "cmp r3, 0x2f",
            "bne 0x200a0",
            "add r1, sp, 8",
            "mov r3, 0",
            "sub r0, r1, 4",
            "mov r2, r4",
            "add r6, r4, 1",
            "mov lr, r1",
            "mov ip, r3",
            "b 0x2003c",
            "cmp r1, 0x2f",
            "beq 0x2004c",
            "sub r4, lr, 4",
            "strb r1, [r4, r3]",
            "add r3, r3, 1",
            "strb ip, [r0, 1]!",
            "ldrb r1, [r2, 1]!",
            "add r4, r6, r3",
            "cmp r1, 0",
            "bne 0x20024",
            "add r0, sp, 4",
            "bl fcn.00029ed8",
            "ldrb r3, [r4]",
            "mov r6, r0",
            "mov r2, 1",
            "mov r1, r6",
            "cmp r3, 0x2f",
            "ldr r3, [0x00020104]",
            "addeq r4, r4, 1",
            "ldr r7, [r3]",
            "mov r3, r2",
            "ldr r0, [r7, 0xc]",
            "bl fcn.0001fe8c",
            "subs r1, r0, 0",
            "beq 0x20094",
            "ldr r0, [r7]",
            "bl fcn.0001f2e8",
            "str r0, [r5]",
            "mov r0, r6",
            "bl sym.imp.free",
            "b 0x200f4",
            "cmp r3, 0x24",
            "bne 0x200cc",
            "ldr r3, [0x00020104]",
            "add r4, r0, 1",
            "ldr r6, [r3]",
            "ldr r0, [r6, 4]",
            "sub r0, r0, 1",
            "bl fcn.0001f1d8",
            "mov r1, r0",
            "ldr r0, [r6]",
            "b 0x1fff0",
            "sub r3, r3, 0x30",
            "cmp r3, 9",
            "bhi 0x200f4",
            "add r3, sp, 0x400",
            "ldr r1, str._d_n",
            "add r3, r3, 4",
            "mov r2, r5",
            "bl sym.imp.sscanf",
            "ldr r3, [sp, 0x404]",
            "add r4, r4, r3",
            "mov r0, r4",
            "add sp, sp, 0xc",
            "add sp, sp, 0x400",
            "pop {r4, r5, r6, r7, pc}"
        ]
    },
    "sym.imp.sscanf": {
        "function_address": "0x0000beac",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x704]!"
        ]
    },
    "fcn.0001f348": {
        "function_address": "0x0001f348",
        "instructions": [
            "ldr r3, [0x0001f374]",
            "push {r4, lr}",
            "mov r4, r0",
            "ldr r3, [r3]",
            "ldr r0, [r3]",
            "b 0x1f368",
            "sub r4, r4, 1",
            "bl fcn.0001f274",
            "cmp r4, 1",
            "bgt 0x1f360",
            "pop {r4, pc}"
        ]
    },
    "fcn.000201f8": {
        "function_address": "0x000201f8",
        "instructions": [
            "cmp r0, r1",
            "push {r4, r5, r6, lr}",
            "mov r6, r3",
            "movhi r3, r0",
            "mov r4, r0",
            "mov r5, r1",
            "movhi r4, r1",
            "movhi r5, r3",
            "cmp r2, 0",
            "bgt 0x20258",
            "ldrb r3, [r4]",
            "cmp r3, 0xa",
            "movne r3, r4",
            "bne 0x20244",
            "b 0x20288",
            "ldrb r1, [r3, 1]",
            "cmp r1, 0xa",
            "beq 0x20254",
            "mov r3, r2",
            "add r2, r3, 1",
            "cmp r5, r2",
            "bhs 0x20234",
            "b 0x20258",
            "mov r5, r3",
            "ldr r3, [0x00020290]",
            "mov r0, r4",
            "mov r1, r5",
            "ldr r3, [r3]",
            "ldr r2, [r3, 0x80]",
            "bl fcn.00020188",
            "cmp r6, 1",
            "bne 0x20288",
            "mov r0, r4",
            "mov r1, r5",
            "pop {r4, r5, r6, lr}",
            "b fcn.0001f7e0",
            "mov r0, r4",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.0001fd08": {
        "function_address": "0x0001fd08",
        "instructions": [
            "ldr r3, [0x0001fd54]",
            "push {r4, r5, r6, lr}",
            "ldr r4, [r3]",
            "b 0x1fd20",
            "add r5, r5, 1",
            "str r5, [r4, 0xc]",
            "ldr r5, [r4, 0xc]",
            "ldrb r6, [r5]",
            "mov r0, r6",
            "bl sym.imp.isspace",
            "cmp r0, 0",
            "popeq {r4, r5, r6, pc}",
            "cmp r6, 0xa",
            "popeq {r4, r5, r6, pc}",
            "ldr r3, [r4, 4]",
            "sub r3, r3, 1",
            "cmp r5, r3",
            "blo 0x1fd18",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.00021634": {
        "function_address": "0x00021634",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r5, r0",
            "bl fcn.0001f734",
            "mov r6, r0",
            "ldr r3, [0x00021700]",
            "ldr r7, [0x00021704]",
            "ldr r4, [r3]",
            "ldr r0, [r4]",
            "bl sym.imp.free",
            "lsl r3, r6, 1",
            "cmp r3, 0x2800",
            "str r3, [r4, 8]",
            "movlt r3, 0x2800",
            "strlt r3, [r4, 8]",
            "ldr r0, [r4, 8]",
            "bl fcn.00029eb4",
            "ldr r3, [0x00021708]",
            "str r0, [r4]",
            "str r0, [r4, 4]",
            "str r0, [r4, 0xc]",
            "str r0, [r3]",
            "ldr r0, [r7]",
            "cmp r5, r0",
            "beq 0x216a4",
            "bl sym.imp.free",
            "mov r0, r5",
            "bl fcn.00029ed8",
            "str r0, [r7]",
            "cmp r6, 0",
            "bge 0x216c0",
            "ldr r0, [r4]",
            "mov r1, 0xa",
            "bl fcn.00021440",
            "mov r5, 0",
            "b 0x216d4",
            "mov r0, r5",
            "ldr r1, [r4]",
            "mov r2, 1",
            "bl fcn.0001fb10",
            "mov r5, r0",
            "ldr r3, [0x0002170c]",
            "mov r1, 0",
            "mvn r2, 0",
            "add r0, r4, 0x88",
            "str r1, [r3]",
            "ldr r3, [0x00021710]",
            "str r2, [r3]",
            "add r2, r2, 0x71",
            "bl sym.imp.memset",
            "mov r0, r5",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.0001fddc": {
        "function_address": "0x0001fddc",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "add r6, r0, r2",
            "mov r7, r1",
            "mov r0, r1",
            "mov r4, r2",
            "mov r8, r3",
            "bl sym.imp.strlen",
            "mov r1, r7",
            "sub r2, r0, 1",
            "mov r0, r6",
            "ldr r5, [sp, 0x18]",
            "bl sym.imp.strncasecmp",
            "cmp r0, 0",
            "beq 0x1fe2c",
            "mov r0, r6",
            "mov r1, r8",
            "mov r2, 2",
            "bl sym.imp.strncasecmp",
            "cmp r0, 0",
            "popne {r4, r5, r6, r7, r8, pc}",
            "ldr r3, [0x0001fe4c]",
            "cmp r4, 0",
            "ldrne r2, [r3]",
            "ldreq r2, [r3]",
            "bicne r5, r2, r5",
            "orreq r5, r5, r2",
            "str r5, [r3]",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.0002010c": {
        "function_address": "0x0002010c",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r4, r0",
            "mov r0, r1",
            "mov r6, r1",
            "bl sym.imp.strlen",
            "mov r5, r0",
            "mov r0, r4",
            "mov r1, r5",
            "bl fcn.0001f8a0",
            "cmp r0, 0",
            "beq 0x2017c",
            "mov r0, r4",
            "mov r1, r6",
            "mov r2, r5",
            "mov r7, 0",
            "bl sym.imp.strncpy",
            "b 0x20158",
            "cmp r3, 0xa",
            "addeq r7, r7, 1",
            "ldrb r3, [r6], 1",
            "cmp r3, 0",
            "bne 0x20150",
            "bl fcn.0001f5b8",
            "mov r1, r7",
            "mov r3, r0",
            "mov r2, r5",
            "ldr r0, str.Put__d_lines___d_chars__from___c_",
            "bl fcn.0001fa90",
            "mov r0, r4",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.0001f5b8": {
        "function_address": "0x0001f5b8",
        "instructions": [
            "ldr r3, [0x0001f5f4]",
            "ldr r3, [r3]",
            "ldr r0, [r3, 0x80]",
            "cmp r0, 0x19",
            "addls r0, r0, 0x61",
            "uxtbls r0, r0",
            "bxls lr",
            "cmp r0, 0x1a",
            "beq 0x1f5ec",
            "cmp r0, 0x1b",
            "moveq r0, 0x55",
            "movne r0, 0x44",
            "bx lr",
            "mov r0, 0x44",
            "bx lr"
        ]
    },
    "fcn.00020294": {
        "function_address": "0x00020294",
        "instructions": [
            "cmp r0, 0",
            "push {r4, r5, r6, lr}",
            "mov r5, r1",
            "mov r4, r2",
            "bne 0x202b8",
            "ldr r0, str.No_current_filename",
            "mvn r4, 1",
            "bl fcn.0001f770",
            "b 0x202f4",
            "movw r1, 0x241",
            "mov r2, 0x1b4",
            "bl sym.imp.open64",
            "subs r6, r0, 0",
            "mvnlt r4, 0",
            "blt 0x202f4",
            "rsb r4, r5, r4",
            "mov r1, r5",
            "add r4, r4, 1",
            "mov r2, r4",
            "bl sym.imp.write",
            "cmp r0, r4",
            "mov r0, r6",
            "movne r4, 0",
            "bl sym.imp.close",
            "mov r0, r4",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.imp.write": {
        "function_address": "0x0000bd80",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x7cc]!"
        ]
    },
    "fcn.0001f96c": {
        "function_address": "0x0001f96c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sl, lr}",
            "sub sp, sp, 0x400",
            "sub sp, sp, 0xc",
            "mov r3, 0",
            "add r8, sp, 0x400",
            "add r5, sp, 4",
            "strb r3, [sp, 0x405]",
            "add r8, r8, 4",
            "strb r3, [sp, 4]",
            "ldrb r6, [r0]",
            "ldr r3, str._NULL_",
            "cmp r6, 0",
            "movne r6, r0",
            "moveq r6, r3",
            "b 0x1fa54",
            "tst r4, 0x80",
            "moveq r7, 0",
            "beq 0x1f9e4",
            "cmp r4, 0x7f",
            "cmpne r4, 0x1f",
            "movhi r7, 0",
            "movls r7, 1",
            "bls 0x1f9d0",
            "cmp r4, 0x9b",
            "bne 0x1f9e4",
            "mov r7, 1",
            "mov r4, 0x2e",
            "mov r0, r5",
            "ldr r1, str.e_0m",
            "bl sym.imp.strcat",
            "cmp r4, 0x7f",
            "movne sl, 0",
            "moveq sl, 1",
            "cmp r4, 0x7f",
            "cmpne r4, 0x1f",
            "bhi 0x1fa18",
            "mov r0, r5",
            "ldr r1, [0x0001fa80]",
            "bl sym.imp.strcat",
            "cmp sl, 0",
            "addeq r4, r4, 0x40",
            "movne r4, 0x3f",
            "uxtbeq r4, r4",
            "mov r0, r5",
            "mov r1, r8",
            "strb r4, [sp, 0x404]",
            "bl sym.imp.strcat",
            "cmp r7, 0",
            "beq 0x1fa3c",
            "mov r0, r5",
            "ldr r1, str.e_7m",
            "bl sym.imp.strcat",
            "ldrb r3, [r6, -1]",
            "cmp r3, 0xa",
            "bne 0x1fa54",
            "mov r0, r5",
            "ldr r1, [0x0001fa88]",
            "bl sym.imp.strcat",
            "ldrb r4, [r6], 1",
            "cmp r4, 0",
            "bne 0x1f9a8",
            "ldr r0, str._s_is_not_implemented",
            "add r1, sp, 4",
            "bl fcn.0001f770",
            "add sp, sp, 0xc",
            "add sp, sp, 0x400",
            "pop {r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "fcn.000213f0": {
        "function_address": "0x000213f0",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r4, r0",
            "ldr r3, [0x0002143c]",
            "ldr r5, [r3]",
            "ldr r3, [r5, 4]",
            "cmp r0, r3",
            "blo 0x21420",
            "ldr r2, [r5]",
            "cmp r3, r2",
            "bls 0x21420",
            "sub r4, r3, 1",
            "bl fcn.000213a4",
            "ldr r5, [r5]",
            "cmp r4, r5",
            "bhs 0x21434",
            "mov r4, r5",
            "bl fcn.000213a4",
            "mov r0, r4",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.00021070": {
        "function_address": "0x00021070",
        "instructions": [
            "ldr r3, [0x000212b0]",
            "push {r4, r5, r6, r7, r8, lr}",
            "sub sp, sp, 0x18",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "movne r3, 0",
            "movne r4, r3",
            "bne 0x211e4",
            "ldr r3, [0x000212b4]",
            "ldr r5, [0x000212b8]",
            "ldr r4, [r3]",
            "ldr r8, [r4, 0xc]",
            "ldr r0, [r4]",
            "mov r1, r8",
            "bl fcn.0001f2e8",
            "ldr r3, [0x000212bc]",
            "mov r6, r0",
            "ldr r7, [r3]",
            "ldr r3, [r5]",
            "cmp r7, r3",
            "beq 0x210e8",
            "ldr r1, [r4, 4]",
            "mov r0, r8",
            "sub r1, r1, 1",
            "bl fcn.0001f2e8",
            "ldr r2, [0x000212c0]",
            "sub r3, r6, 1",
            "add r3, r3, r0",
            "str r7, [r5]",
            "str r3, [r2]",
            "ldr r3, [0x000212c0]",
            "ldr r1, [r3]",
            "cmp r1, 0",
            "movle r6, 0",
            "movle r1, 0x64",
            "strle r6, [r3]",
            "ble 0x21114",
            "mov r0, 0x64",
            "mul r0, r0, r6",
            "bl fcn.000550c8",
            "mov r1, r0",
            "ldr r3, [0x000212c4]",
            "ldr r2, str._IR_",
            "ldr ip, str.No_file",
            "ldr r4, [r3]",
            "ldr r3, [0x000212d0]",
            "ldr r5, [0x000212d4]",
            "cmp r4, 0xc7",
            "movge r4, 0xc7",
            "ldr lr, str.__Readonly_",
            "ldr r3, [r3]",
            "ldr r0, [r5]",
            "and r3, r3, 3",
            "ldrb r3, [r2, r3]",
            "ldr r2, [0x000212dc]",
            "ldr r2, [r2]",
            "cmp r2, 0",
            "moveq r2, ip",
            "ldr ip, [0x000212e0]",
            "ldr r8, [ip]",
            "ldr ip, [0x000212e4]",
            "str r2, [sp]",
            "cmp r8, 0",
            "ldr r8, str.__Modified_",
            "ldr r2, [0x000212c0]",
            "moveq lr, ip",
            "cmp r7, 0",
            "str lr, [sp, 4]",
            "moveq r7, ip",
            "movne r7, r8",
            "str r7, [sp, 8]",
            "str r6, [sp, 0xc]",
            "ldr r2, [r2]",
            "str r1, [sp, 0x14]",
            "add r1, r4, 1",
            "str r2, [sp, 0x10]",
            "ldr r2, str._c__s_s_s__d__d__d__",
            "bl sym.imp.snprintf",
            "cmp r0, r4",
            "movge r3, 0",
            "movlt r3, 1",
            "cmp r0, 0",
            "movlt r3, 0",
            "ldr r2, [r5]",
            "cmp r3, 0",
            "mov r3, 0",
            "movne r4, r0",
            "add r1, r2, r4",
            "b 0x211dc",
            "ldrb r0, [r2], 1",
            "add r3, r3, r0",
            "cmp r2, r1",
            "blo 0x211d4",
            "ldr r2, [0x000212b0]",
            "ldr r2, [r2]",
            "cmp r2, 0",
            "bne 0x2120c",
            "cmp r4, 0",
            "ble 0x2129c",
            "ldr r2, [0x000212f0]",
            "ldr r2, [r2]",
            "cmp r2, r3",
            "beq 0x2129c",
            "ldr r2, [0x000212f0]",
            "mov r1, 0",
            "ldr r6, [0x000212d4]",
            "ldr r4, [0x000212b0]",
            "str r3, [r2]",
            "mov r2, r1",
            "ldr r3, [0x000212f4]",
            "ldr r0, [r3]",
            "sub r0, r0, 1",
            "bl fcn.00020790",
            "ldr r0, [r6]",
            "bl fcn.0001fad0",
            "bl fcn.0001fb04",
            "ldr r5, [r4]",
            "cmp r5, 0",
            "beq 0x21284",
            "ldr r0, [r6]",
            "rsb r5, r5, 1",
            "bl sym.imp.strlen",
            "ldr r3, [0x000212c4]",
            "add r5, r5, r0",
            "ldr r3, [r3]",
            "cmp r3, r5",
            "bgt 0x21278",
            "mov r3, 0",
            "str r3, [r4]",
            "bl fcn.00021038",
            "ldr r3, [0x000212b0]",
            "mov r2, 0",
            "str r2, [r3]",
            "ldr r3, [0x000212f8]",
            "mov r2, 0",
            "ldr r0, [r3]",
            "ldr r3, [0x000212fc]",
            "ldr r1, [r3]",
            "bl fcn.00020790",
            "ldr r3, obj.stdout",
            "ldr r0, [r3]",
            "add sp, sp, 0x18",
            "pop {r4, r5, r6, r7, r8, lr}",
            "b sym.imp.fflush"
        ]
    },
    "fcn.0001fb04": {
        "function_address": "0x0001fb04",
        "instructions": [
            "ldr r0, [pc]",
            "b fcn.0001fad0"
        ]
    },
    "fcn.000208d4": {
        "function_address": "0x000208d4",
        "instructions": [
            "ldr r3, [0x00020924]",
            "mov r1, 0",
            "mov r2, r1",
            "push {r4, lr}",
            "ldr r0, [r3]",
            "sub r0, r0, 1",
            "bl fcn.00020790",
            "bl fcn.0001fb04",
            "bl fcn.00020300",
            "ldr r1, fcn.00021350",
            "mov r0, 0x12",
            "bl sym.imp.signal",
            "mov r1, 0",
            "mov r0, 0x14",
            "bl sym.imp.signal",
            "ldr r3, [0x0002092c]",
            "mov r1, 0x14",
            "ldr r0, [r3]",
            "pop {r4, lr}",
            "b sym.imp.kill"
        ]
    },
    "fcn.00021350": {
        "function_address": "0x00021350",
        "instructions": [
            "push {r4, lr}",
            "mov r4, 0",
            "bl fcn.0001f69c",
            "mov r0, 1",
            "ldr r3, [0x00021398]",
            "str r4, [r3]",
            "bl fcn.00020ff8",
            "ldr r1, fcn.000208d4",
            "mov r0, 0x14",
            "bl sym.imp.signal",
            "mov r1, r4",
            "mov r0, 0x12",
            "bl sym.imp.signal",
            "ldr r3, [0x000213a0]",
            "mov r1, 0x12",
            "ldr r0, [r3]",
            "pop {r4, lr}",
            "b sym.imp.kill"
        ]
    },
    "fcn.0001fd58": {
        "function_address": "0x0001fd58",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r4, r0",
            "mov r6, r1",
            "ldr r5, [0x0001fdd4]",
            "b 0x1fd90",
            "cmp r6, 0",
            "bge 0x1fd80",
            "ldr r0, [r5]",
            "bl fcn.0001f23c",
            "b 0x1fd88",
            "ldr r0, [r5]",
            "bl fcn.0001f274",
            "sub r4, r4, 1",
            "str r0, [r5]",
            "cmp r4, 0",
            "bgt 0x1fd6c",
            "ldr r3, [0x0001fdd8]",
            "ldr r4, [r3]",
            "ldr r3, [0x0001fdd4]",
            "ldr r2, [r4, 0xc]",
            "ldr r3, [r3]",
            "cmp r2, r3",
            "strlo r3, [r4, 0xc]",
            "bl fcn.0001f2a8",
            "ldr r3, [r4, 0xc]",
            "cmp r3, r0",
            "bls 0x1fdcc",
            "bl fcn.0001f1d8",
            "str r0, [r4, 0xc]",
            "pop {r4, r5, r6, lr}",
            "b fcn.0001fd08"
        ]
    },
    "fcn.00022624": {
        "function_address": "0x00022624",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "sub sp, sp, 0x20",
            "mov r2, 9",
            "mov r4, r0",
            "mov r1, 0",
            "add r0, sp, 0xc",
            "str r0, [sp, 0x18]",
            "str r0, [sp, 0x1c]",
            "bl sym.imp.memset",
            "bl fcn.00021070",
            "sub r3, r4, 0x80",
            "uxtb r2, r3",
            "cmp r2, 8",
            "bhi 0x22678",
            "sxtb r3, r3",
            "mov r2, 1",
            "lsl r2, r2, r3",
            "movw r3, 0x1bf",
            "and r3, r2, r3",
            "cmp r3, 0",
            "bne 0x22710",
            "ldr r3, [0x0002361c]",
            "ldr r2, [r3]",
            "cmp r2, 2",
            "bne 0x226d8",
            "cmp r4, 0x86",
            "beq case.0x22718.105",
            "ldr r2, [0x00023668]",
            "ldr r5, [r2]",
            "ldr r0, [r5, 0xc]",
            "ldrb r2, [r0]",
            "cmp r2, 0xa",
            "moveq r2, 1",
            "streq r2, [r3]",
            "beq 0x226d8",
            "cmp r4, 0",
            "beq case.0x22718.0",
            "cmp r4, 0x1b",
            "beq 0x22700",
            "mov r1, r0",
            "mov r2, 0",
            "mov r3, 1",
            "bl fcn.000201f8",
            "str r0, [r5, 0xc]",
            "b 0x22700",
            "ldr r3, [0x0002361c]",
            "ldr r3, [r3]",
            "cmp r3, 1",
            "bne 0x22710",
            "cmp r4, 0x86",
            "beq case.0x22718.82",
            "cmp r4, 0",
            "beq case.0x22718.0",
            "ldr r3, [0x00023668]",
            "ldr r5, [r3]",
            "ldr r0, [r5, 0xc]",
            "mov r1, r4",
            "bl fcn.00021440",
            "b 0x22a88",
            "ldr r6, [0x00023668]",
            "cmp r4, 0x94",
            "ldrls pc, [pc, r4, lsl 2]",
            "b case.0x22718.1",
            "cmp r4, 0x1f",
            "mov r3, 0",
            "movls r2, 0x5e",
            "strb r4, [sp, 0xc]",
            "add r0, sp, 0xc",
            "strbls r2, [sp, 0xc]",
            "addls r2, r4, 0x40",
            "strb r3, [sp, 0xd]",
            "strbls r3, [sp, 0xe]",
            "strbls r2, [sp, 0xd]",
            "bl fcn.0001f96c",
            "b 0x23d44",
            "ldr r3, [0x000236a4]",
            "ldr r0, [r3]",
            "sub r0, r0, 2",
            "b 0x22b04",
            "ldr r0, [r6]",
            "mov r1, 1",
            "add r0, r0, 0x100",
            "bl sym.imp.longjmp",
            "mov r0, 0x14",
            "bl fcn.000208d4",
            "b case.0x22718.0",
            "ldr r3, [0x000236a4]",
            "ldr r0, [r3]",
            "sub r0, r0, 2",
            "add r0, r0, r0, lsr 31",
            "asr r0, r0, 1",
            "mov r1, 1",
            "bl fcn.0001fd58",
            "b case.0x22718.0",
            "mov r0, 1",
            "mov r1, r0",
            "b 0x229e8",
            "ldr r3, [0x000236a4]",
            "ldr r0, [r3]",
            "sub r0, r0, 2",
            "b 0x229e4",
            "mov r2, 0",
            "ldr r3, [0x00023620]",
            "b 0x23184",
            "ldr r2, [0x000236b8]",
            "ldr r3, [r2]",
            "cmp r3, 1",
            "sub r1, r3, 1",
            "str r1, [r2]",
            "ble 0x22a38",
            "mov r0, r4",
            "bl fcn.00022624",
            "bl fcn.0001f378",
            "b case.0x22718.0",
            "ldr r2, [0x000236b8]",
            "ldr r3, [r2]",
            "cmp r3, 1",
            "sub r1, r3, 1",
            "str r1, [r2]",
            "ble 0x22a60",
            "mov r0, r4",
            "bl fcn.00022624",
            "bl fcn.0001f490",
            "ldr r3, [0x00023668]",
            "ldr r5, [r3]",
            "ldr r3, [0x00023624]",
            "ldr r0, [r5, 0xc]",
            "ldr r1, [r3]",
            "ldr r3, [0x00023628]",
            "ldr r3, [r3]",
            "add r1, r1, r3",
            "bl fcn.0001f41c",
            "str r0, [r5, 0xc]",
            "b case.0x22718.0",
            "mov r0, 0",
            "mov r1, r0",
            "mov r2, r0",
            "bl fcn.00020790",
            "bl fcn.0001faf8",
            "mov r0, 0xa",
            "bl fcn.000205f8",
            "bl fcn.0001f5f8",
            "ldr r3, [0x00023620]",
            "mov r2, 0",
            "mov r0, 1",
            "str r2, [r3]",
            "bl fcn.00020930",
            "b case.0x22718.0",
            "ldr r2, [0x000236b8]",
            "ldr r3, [r2]",
            "cmp r3, 1",
            "sub r1, r3, 1",
            "str r1, [r2]",
            "ble 0x22ae8",
            "mov r0, r4",
            "bl fcn.00022624",
            "bl fcn.0001f490",
            "b 0x237e0",
            "ldr r3, [0x000236a4]",
            "ldr r0, [r3]",
            "sub r0, r0, 2",
            "add r0, r0, r0, lsr 31",
            "asr r0, r0, 1",
            "mvn r1, 0",
            "b 0x229e8",
            "mov r0, 1",
            "b 0x22b04",
            "ldr r3, [0x0002361c]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "bne 0x22b28",
            "bl fcn.000213a4",
            "ldr r3, [0x0002361c]",
            "mov r5, 0",
            "str r5, [r3]",
            "bl fcn.0001f590",
            "ldr r3, [0x00023620]",
            "str r5, [r3]",
            "b case.0x22718.0",
            "ldr r2, [0x000236b8]",
            "ldr r3, [r2]",
            "cmp r3, 1",
            "sub r1, r3, 1",
            "str r1, [r2]",
            "ble 0x22b64",
            "mov r0, r4",
            "bl fcn.00022624",
            "bl fcn.0001f3a8",
            "b case.0x22718.0",
            "bl fcn.00020538",
            "mov r5, r0",
            "bl sym.imp.__ctype_tolower_loc",
            "ldr r3, [r0]",
            "ldrb r5, [r3, r5, lsl 1]",
            "mov r0, r5",
            "bl sym.imp.islower",
            "cmp r0, 0",
            "beq 0x23740",
            "ldr r3, [0x00023668]",
            "sub r5, r5, 0x61",
            "ldr r3, [r3]",
            "str r5, [r3, 0x80]",
            "b case.0x22718.0",
            "bl fcn.00020538",
            "mov r5, r0",
            "bl sym.imp.__ctype_tolower_loc",
            "ldr r3, [r0]",
            "ldrb r5, [r3, r5, lsl 1]",
            "mov r0, r5",
            "bl sym.imp.islower",
            "cmp r0, 0",
            "beq 0x22c04",
            "ldr r3, [0x00023668]",
            "sub r5, r5, 0x61",
            "uxtb r5, r5",
            "ldr r3, [r3]",
            "add r5, r5, 0x22",
            "ldr r2, [r3, r5, lsl 2]",
            "ldr r1, [r3]",
            "str r2, [sp, 0x18]",
            "cmp r1, r2",
            "bhi case.0x22718.0",
            "ldr r1, [r3, 4]",
            "cmp r2, r1",
            "strlo r2, [r3, 0xc]",
            "blo case.0x22718.94",
            "b case.0x22718.0",
            "cmp r5, 0x27",
            "bne 0x23740",
            "ldr r3, [0x00023668]",
            "ldr r5, [r3]",
            "ldr r6, [r5, 0xf4]",
            "ldr r2, [r5]",
            "ldr r3, [r5, 0xc]",
            "cmp r2, r6",
            "bhi 0x22c70",
            "ldr r2, [r5, 4]",
            "sub r2, r2, 1",
            "cmp r6, r2",
            "bhi 0x22c70",
            "ldr r3, [r5, 0xf0]",
            "mov r0, r6",
            "str r6, [r5, 0xf0]",
            "str r3, [r5, 0xf4]",
            "bl fcn.0001f23c",
            "bl fcn.0001f23c",
            "bl fcn.0001f23c",
            "str r0, [r5, 0xf8]",
            "mov r0, r6",
            "bl fcn.0001f274",
            "bl fcn.0001f274",
            "bl fcn.0001f274",
            "mov r3, r6",
            "str r0, [r5, 0xfc]",
            "str r3, [r5, 0xc]",
            "b case.0x22718.94",
            "bl fcn.00020538",
            "mov r5, r0",
            "bl sym.imp.__ctype_tolower_loc",
            "ldr r3, [r0]",
            "ldrb r5, [r3, r5, lsl 1]",
            "mov r0, r5",
            "bl sym.imp.islower",
            "cmp r0, 0",
            "beq 0x23740",
            "ldr r3, [0x00023668]",
            "sub r5, r5, 0x61",
            "uxtb r5, r5",
            "ldr r3, [r3]",
            "add r5, r5, 0x22",
            "ldr r2, [r3, 0xc]",
            "str r2, [r3, r5, lsl 2]",
            "b case.0x22718.0",
            "ldr r5, [r6]",
            "ldr r3, [r5, 0x80]",
            "add r3, r3, 4",
            "ldr r0, [r5, r3, lsl 2]",
            "cmp r0, 0",
            "str r0, [sp, 0x1c]",
            "bne 0x22ce8",
            "bl fcn.0001f5b8",
            "mov r1, r0",
            "ldr r0, str.Nothing_in_register__c",
            "b 0x237bc",
            "mov r1, 0xa",
            "bl sym.imp.strchr",
            "cmp r0, 0",
            "beq 0x22d34",
            "cmp r4, 0x50",
            "bne 0x22d08",
            "bl fcn.0001f3dc",
            "b 0x22d40",
            "cmp r4, 0x70",
            "bne 0x22d40",
            "ldr r0, [r5, 0xc]",
            "bl fcn.0001f208",
            "ldr r3, [r5, 4]",
            "sub r2, r3, 1",
            "cmp r2, r0",
            "streq r3, [r5, 0xc]",
            "beq 0x22d40",
            "bl fcn.0001f490",
            "b 0x22d40",
            "cmp r4, 0x70",
            "bne 0x22d40",
            "bl fcn.0001f3a8",
            "ldr r0, [r5, 0xc]",
            "ldr r1, [sp, 0x1c]",
            "bl fcn.0002010c",
            "str r0, [r5, 0xc]",
            "b 0x23d44",
            "ldr r5, [r6]",
            "ldr r3, [r5, 0x84]",
            "add r3, r3, 4",
            "ldr r3, [r5, r3, lsl 2]",
            "cmp r3, 0",
            "beq case.0x22718.0",
            "ldr r7, [r5, 0xc]",
            "mov r0, r7",
            "bl fcn.0001f1d8",
            "mov r6, r0",
            "str r0, [sp, 0x1c]",
            "mov r0, r7",
            "bl fcn.0001f208",
            "mov r1, r0",
            "str r0, [sp, 0x18]",
            "mov r0, r6",
            "bl fcn.0001f7e0",
            "ldr r3, [r5, 0x84]",
            "str r0, [sp, 0x1c]",
            "add r3, r3, 4",
            "ldr r1, [r5, r3, lsl 2]",
            "bl fcn.0002010c",
            "str r0, [sp, 0x1c]",
            "b 0x23438",
            "ldr r2, [0x000236b8]",
            "ldr r3, [r2]",
            "cmp r3, 1",
            "sub r1, r3, 1",
            "str r1, [r2]",
            "ble 0x22dd4",
            "mov r0, r4",
            "bl fcn.00022624",
            "ldr r3, [0x00023668]",
            "ldr r5, [r3]",
            "ldr r0, [r5, 0xc]",
            "bl fcn.0001f208",
            "b 0x22a88",
            "ldr r6, [r6]",
            "ldr r3, [r6, 0xc]",
            "str r3, [sp, 0x18]",
            "b 0x22e38",
            "ldr r0, str.____",
            "mov r1, r7",
            "bl sym.imp.strchr",
            "cmp r0, 0",
            "beq 0x22e30",
            "mov r0, r5",
            "mov r1, r7",
            "bl fcn.0001f4d0",
            "cmp r0, 0",
            "str r0, [sp, 0x1c]",
            "strne r0, [r6, 0xc]",
            "bne 0x22e54",
            "bl fcn.000213a4",
            "b 0x22e54",
            "add r5, r5, 1",
            "str r5, [sp, 0x18]",
            "ldr r5, [sp, 0x18]",
            "ldr r3, [r6, 4]",
            "cmp r5, r3",
            "bhs 0x22e54",
            "ldrb r7, [r5]",
            "cmp r7, 0xa",
            "bne 0x22df8",
            "ldr r3, [sp, 0x18]",
            "ldrb r3, [r3]",
            "cmp r3, 0xa",
            "bne case.0x22718.0",
            "b 0x23740",
            "bl fcn.00020538",
            "ldr r3, [0x000236a0]",
            "strb r0, [r3]",
            "ldr r2, [0x000236b8]",
            "ldr r3, [r2]",
            "cmp r3, 1",
            "sub r1, r3, 1",
            "str r1, [r2]",
            "ble 0x22e94",
            "mov r0, 0x3b",
            "bl fcn.00022624",
            "ldr r3, [0x000236a0]",
            "ldrb r1, [r3]",
            "cmp r1, 0",
            "beq case.0x22718.0",
            "ldr r3, [0x00023668]",
            "ldr r2, [r3]",
            "ldr r3, [r2, 0xc]",
            "ldr ip, [r2, 4]",
            "add r3, r3, 1",
            "str r3, [sp, 0x18]",
            "sub ip, ip, 1",
            "b 0x22ecc",
            "add r3, r3, 1",
            "str r3, [sp, 0x18]",
            "ldr r3, [sp, 0x18]",
            "cmp r3, ip",
            "bhs 0x22eec",
            "ldrb r0, [r3]",
            "cmp r0, 0xa",
            "beq 0x22eec",
            "cmp r0, r1",
            "bne 0x22ec4",
            "ldrb r0, [r3]",
            "cmp r0, r1",
            "streq r3, [r2, 0xc]",
            "b case.0x22718.0",
            "ldr r2, [0x000236b8]",
            "ldr r3, [r2]",
            "cmp r3, 1",
            "sub r1, r3, 1",
            "str r1, [r2]",
            "ble 0x22f1c",
            "mov r0, 0x2d",
            "bl fcn.00022624",
            "bl fcn.0001f4b0",
            "b 0x237e0",
            "ldr r3, [0x00023634]",
            "ldr r0, [r3]",
            "cmp r0, 0",
            "beq case.0x22718.0",
            "bl fcn.00029ed8",
            "ldr r3, [0x00023638]",
            "str r0, [r3]",
            "ldr r3, [0x0002363c]",
            "str r0, [r3]",
            "b case.0x22718.0",
            "mov r3, 0",
            "add r0, sp, 0xc",
            "strb r3, [sp, 0xd]",
            "strb r4, [sp, 0xc]",
            "bl fcn.00020eb8",
            "str r0, [sp, 0x18]",
            "ldrb r3, [r0]",
            "cmp r3, 0",
            "beq case.0x22718.0",
            "ldrb r3, [r0, 1]",
            "cmp r3, 0",
            "beq 0x23010",
            "ldr r5, [0x00023640]",
            "ldr r0, [r5]",
            "bl sym.imp.free",
            "ldr r0, [sp, 0x18]",
            "bl fcn.00029ed8",
            "str r0, [r5]",
            "b 0x23010",
            "ldr r2, [0x000236b8]",
            "ldr r3, [r2]",
            "cmp r3, 1",
            "sub r1, r3, 1",
            "str r1, [r2]",
            "ble 0x22fb8",
            "mov r0, 0x4e",
            "bl fcn.00022624",
            "ldr r3, [0x00023668]",
            "ldr r3, [r3]",
            "ldr r3, [r3, 0xc]",
            "sub r2, r3, 1",
            "str r2, [sp, 0x1c]",
            "ldr r2, [0x00023640]",
            "ldr r2, [r2]",
            "ldrb r2, [r2]",
            "cmp r2, 0x3f",
            "addeq r3, r3, 1",
            "moveq r5, 1",
            "streq r3, [sp, 0x1c]",
            "beq 0x2306c",
            "b 0x23068",
            "ldr r2, [0x000236b8]",
            "ldr r3, [r2]",
            "cmp r3, 1",
            "sub r1, r3, 1",
            "str r1, [r2]",
            "ble 0x23010",
            "mov r0, 0x6e",
            "bl fcn.00022624",
            "ldr r3, [0x00023640]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "ldreq r1, str.No_previous_regular_expression",
            "beq 0x230fc",
            "ldrb r2, [r3]",
            "cmp r2, 0x2f",
            "ldreq r2, [0x00023668]",
            "moveq r5, 1",
            "movne r5, 0",
            "ldreq r2, [r2]",
            "ldreq r2, [r2, 0xc]",
            "addeq r2, r2, 1",
            "streq r2, [sp, 0x1c]",
            "ldrb r3, [r3]",
            "cmp r3, 0x3f",
            "bne 0x2306c",
            "ldr r3, [0x00023668]",
            "ldr r3, [r3]",
            "ldr r3, [r3, 0xc]",
            "sub r3, r3, 1",
            "str r3, [sp, 0x1c]",
            "mvn r5, 0",
            "ldr r3, [0x00023640]",
            "mov r2, r5",
            "ldr r0, [sp, 0x1c]",
            "ldr r6, [0x00023668]",
            "ldr r7, [r3]",
            "mov r3, 1",
            "add r7, r7, 1",
            "mov r1, r7",
            "bl fcn.0001fe8c",
            "cmp r0, 0",
            "str r0, [sp, 0x18]",
            "ldrne r3, [r6]",
            "ldrne r1, [0x00023648]",
            "strne r0, [r3, 0xc]",
            "bne 0x230fc",
            "ldr r6, [r6]",
            "cmn r5, 1",
            "mov r1, r7",
            "mov r2, r5",
            "ldr r3, [r6]",
            "str r3, [sp, 0x1c]",
            "ldreq r3, [r6, 4]",
            "subeq r3, r3, 1",
            "streq r3, [sp, 0x1c]",
            "mov r3, 1",
            "ldr r0, [sp, 0x1c]",
            "bl fcn.0001fe8c",
            "cmp r0, 0",
            "str r0, [sp, 0x18]",
            "ldreq r1, str.Pattern_not_found",
            "beq 0x230fc",
            "ldr r3, str.search_hit_BOTTOM__continuing_at_TOP",
            "cmn r5, 1",
            "ldr r1, str.search_hit_TOP__continuing_at_BOTTOM",
            "str r0, [r6, 0xc]",
            "movne r1, r3",
            "ldrb r3, [r1]",
            "cmp r3, 0",
            "ldrne r0, aav.0x0005ad0c",
            "bne 0x237bc",
            "b case.0x22718.0",
            "ldr r5, [r6]",
            "mvn r2, 0",
            "ldr r1, [0x0002365c]",
            "mov r3, 1",
            "ldr r0, [r5, 0xc]",
            "b 0x2313c",
            "ldr r5, [r6]",
            "mov r2, 1",
            "ldr r1, [0x0002365c]",
            "mov r3, r2",
            "ldr r0, [r5, 0xc]",
            "bl fcn.0001fe8c",
            "cmp r0, 0",
            "str r0, [sp, 0x18]",
            "beq case.0x22718.0",
            "bl fcn.0001f274",
            "b 0x22a88",
            "cmp r4, 0x30",
            "bne 0x2316c",
            "ldr r3, [0x000236b8]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "ble case.0x22718.132",
            "ldr r3, [0x000236b8]",
            "mov r1, 0xa",
            "ldr r2, [r3]",
            "mul r2, r1, r2",
            "sub r2, r2, 0x30",
            "add r2, r2, r4",
            "str r2, [r3]",
            "b case.0x22718.0",
            "ldr r0, [0x00023660]",
            "bl fcn.00020eb8",
            "str r0, [sp, 0x1c]",
            "bl fcn.00021714",
            "b case.0x22718.0",
            "ldr r3, [r6]",
            "ldr r8, [0x00023664]",
            "ldr r1, [r3, 0xc]",
            "ldr r0, [r3]",
            "bl fcn.0001f2e8",
            "mov r5, r0",
            "bl fcn.00020538",
            "add r1, sp, 0x18",
            "mov r2, r0",
            "add r0, sp, 0x1c",
            "bl fcn.00023e4c",
            "ldr r1, [sp, 0x18]",
            "mov r2, 1",
            "mov r3, 0",
            "ldr r0, [sp, 0x1c]",
            "bl fcn.000201f8",
            "ldr r0, [sp, 0x1c]",
            "bl fcn.0001f1d8",
            "mov r6, r0",
            "str r0, [sp, 0x1c]",
            "ldr r0, [sp, 0x18]",
            "bl fcn.0001f208",
            "mov r1, r0",
            "str r0, [sp, 0x18]",
            "mov r0, r6",
            "bl fcn.0001f2e8",
            "mov r6, r0",
            "b 0x23294",
            "cmp r4, 0x3c",
            "bne 0x23270",
            "ldr r0, [sp, 0x1c]",
            "ldrb r3, [r0]",
            "cmp r3, 9",
            "bne 0x23234",
            "mov r1, r0",
            "bl fcn.0001f7e0",
            "b 0x23284",
            "cmp r3, 0x20",
            "moveq r7, 0",
            "beq 0x23250",
            "b 0x23284",
            "add r7, r7, 1",
            "mov r1, r0",
            "bl fcn.0001f7e0",
            "ldr r0, [sp, 0x1c]",
            "ldrb r3, [r0]",
            "cmp r3, 0x20",
            "bne 0x23284",
            "ldr r3, [r8]",
            "cmp r7, r3",
            "blt 0x23244",
            "b 0x23284",
            "cmp r4, 0x3e",
            "bne 0x23284",
            "ldr r0, [sp, 0x1c]",
            "mov r1, 9",
            "bl fcn.00021440",
            "sub r6, r6, 1",
            "ldr r0, [sp, 0x1c]",
            "bl fcn.0001f274",
            "str r0, [sp, 0x1c]",
            "cmp r6, 0",
            "bgt 0x23210",
            "mov r0, r5",
            "bl fcn.0001f348",
            "ldr r3, [0x00023668]",
            "ldr r3, [r3]",
            "str r0, [r3, 0xc]",
            "bl fcn.0001fd08",
            "b 0x23d44",
            "bl fcn.0001f3fc",
            "ldr r3, [r6]",
            "ldr r2, [r3, 0xc]",
            "ldrb r1, [r2]",
            "cmp r1, 0xa",
            "addne r2, r2, 1",
            "strne r2, [r3, 0xc]",
            "b case.0x22718.105",
            "ldr r2, [0x000236b8]",
            "ldr r3, [r2]",
            "cmp r3, 1",
            "sub r1, r3, 1",
            "str r1, [r2]",
            "ble 0x232f8",
            "mov r0, r4",
            "bl fcn.00022624",
            "cmp r4, 0x42",
            "beq 0x23310",
            "cmp r4, 0x57",
            "movne r5, 1",
            "bne 0x23314",
            "b 0x23334",
            "mvn r5, 0",
            "ldr r3, [0x00023668]",
            "ldr r3, [r3]",
            "ldr r3, [r3, 0xc]",
            "ldrb r0, [r3, r5]",
            "bl sym.imp.isspace",
            "cmp r0, 0",
            "beq 0x23374",
            "b 0x23338",
            "mov r5, 1",
            "ldr r3, [0x00023668]",
            "mov r1, 1",
            "mov r2, r5",
            "ldr r6, [r3]",
            "mov r3, 2",
            "ldr r0, [r6, 0xc]",
            "bl fcn.00020670",
            "mov r1, 2",
            "str r0, [r6, 0xc]",
            "mov r2, r5",
            "mov r3, 3",
            "bl fcn.00020670",
            "cmp r4, 0x57",
            "str r0, [r6, 0xc]",
            "beq case.0x22718.0",
            "ldr r3, [0x00023668]",
            "mov r1, 1",
            "mov r2, r5",
            "ldr r6, [r3]",
            "mov r3, r1",
            "ldr r0, [r6, 0xc]",
            "bl fcn.00020670",
            "str r0, [r6, 0xc]",
            "b case.0x22718.0",
            "ldr r5, [r6]",
            "ldr r7, [r5, 0xc]",
            "ldr r2, [r5, 4]",
            "mov r3, r7",
            "sub r2, r2, 1",
            "cmp r3, r2",
            "mov r6, r3",
            "bhs 0x233c4",
            "ldrb r1, [r3], 1",
            "cmp r1, 0xa",
            "bne 0x233ac",
            "ldrb r3, [r6]",
            "cmp r3, 0xa",
            "bne 0x233e4",
            "mov r0, r6",
            "bl fcn.0001f1d8",
            "rsb r0, r0, r6",
            "cmp r0, 0",
            "subgt r6, r6, 1",
            "str r6, [r5, 0xc]",
            "mov r0, r7",
            "mov r1, r6",
            "mov r2, 0",
            "mov r3, 1",
            "bl fcn.000201f8",
            "cmp r4, 0x43",
            "str r0, [r5, 0xc]",
            "beq case.0x22718.105",
            "bl fcn.0001f590",
            "mov r4, 0x44",
            "b case.0x22718.0",
            "ldr r5, [r6]",
            "ldr r3, [r5, 4]",
            "sub r3, r3, 1",
            "str r3, [r5, 0xc]",
            "ldr r3, [0x000236b8]",
            "ldr r0, [r3]",
            "cmp r0, 0",
            "ble 0x237e0",
            "bl fcn.0001f348",
            "str r0, [r5, 0xc]",
            "b 0x237e0",
            "ldr r2, [0x000236a8]",
            "ldr r3, [r6]",
            "ldr r2, [r2]",
            "str r2, [r3, 0xc]",
            "ldr r3, [0x000236a4]",
            "ldr r2, [r3]",
            "ldr r3, [0x000236b8]",
            "ldr r1, [r3]",
            "cmp r2, r1",
            "suble r2, r2, 1",
            "strle r2, [r3]",
            "ldr r2, [0x000236b8]",
            "ldr r3, [r2]",
            "cmp r3, 1",
            "sub r1, r3, 1",
            "str r1, [r2]",
            "ble 0x237e0",
            "mov r0, 0x2b",
            "bl fcn.00022624",
            "b 0x237e0",
            "bl fcn.0001f3dc",
            "bl fcn.0001fd08",
            "mov r2, 1",
            "b 0x23614",
            "ldr r2, [0x000236b8]",
            "ldr r3, [r2]",
            "cmp r3, 2",
            "sub r1, r3, 1",
            "str r1, [r2]",
            "ble 0x234c0",
            "mov r0, 0x4a",
            "bl fcn.00022624",
            "bl fcn.0001f3fc",
            "ldr r3, [0x00023668]",
            "ldr r5, [r3]",
            "ldr r2, [r5, 4]",
            "ldr r3, [r5, 0xc]",
            "sub r2, r2, 1",
            "cmp r3, r2",
            "bhs 0x23d44",
            "mov r2, 0x20",
            "strb r2, [r3], 1",
            "str r3, [r5, 0xc]",
            "ldr r3, [0x000236ac]",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "b 0x2350c",
            "mov r0, r6",
            "mov r1, r6",
            "bl fcn.0001f7e0",
            "ldr r6, [r5, 0xc]",
            "ldrb r0, [r6]",
            "bl sym.imp.isblank",
            "cmp r0, 0",
            "bne 0x23500",
            "b 0x23d44",
            "bl fcn.0001f2a8",
            "ldr r3, [r6]",
            "str r0, [r3, 0xc]",
            "ldr r3, [0x000236a4]",
            "ldr r2, [r3]",
            "ldr r3, [0x000236b8]",
            "ldr r1, [r3]",
            "cmp r2, r1",
            "suble r2, r2, 1",
            "strle r2, [r3]",
            "ldr r2, [0x000236b8]",
            "ldr r3, [r2]",
            "cmp r3, 1",
            "sub r1, r3, 1",
            "str r1, [r2]",
            "ble case.0x22718.94",
            "mov r0, 0x2d",
            "bl fcn.00022624",
            "b case.0x22718.94",
            "ldr r3, [0x000236a8]",
            "mov r5, 0",
            "ldr r6, [r6]",
            "ldr r7, [0x000236a4]",
            "ldr r3, [r3]",
            "str r3, [r6, 0xc]",
            "b 0x2359c",
            "add r5, r5, 1",
            "ldr r0, [r6, 0xc]",
            "bl fcn.0001f274",
            "str r0, [r6, 0xc]",
            "ldr r3, [r7]",
            "sub r3, r3, 1",
            "add r3, r3, r3, lsr 31",
            "cmp r5, r3, asr 1",
            "blt 0x2358c",
            "b case.0x22718.0",
            "ldr r5, [r6]",
            "ldr r0, [r5, 0xc]",
            "bl fcn.0001f1d8",
            "str r0, [sp, 0x1c]",
            "ldrb r3, [r0, -1]",
            "cmp r3, 0xa",
            "bne 0x235f4",
            "bl fcn.0001f4b0",
            "bl fcn.0001f3fc",
            "ldr r3, [0x00023668]",
            "mov r1, 0xa",
            "ldr r5, [r3]",
            "ldr r0, [r5, 0xc]",
            "bl fcn.00021440",
            "str r0, [r5, 0xc]",
            "b case.0x22718.105",
            "bl fcn.0001f3dc",
            "ldr r0, [r5, 0xc]",
            "mov r1, 0xa",
            "bl fcn.00021440",
            "str r0, [r5, 0xc]",
            "bl fcn.0001f4b0",
            "b case.0x22718.105",
            "mov r2, 2",
            "ldr r3, [pc]",
            "b 0x23184",
            "ldr r2, [0x000236b8]",
            "ldr r3, [r2]",
            "cmp r3, 1",
            "sub r1, r3, 1",
            "str r1, [r2]",
            "ble 0x236e0",
            "mov r0, r4",
            "bl fcn.00022624",
            "ldr r3, [0x00023668]",
            "cmp r4, 0x58",
            "mvneq r2, 0",
            "movne r2, 0",
            "ldr r5, [r3]",
            "ldr r3, [r5, 0xc]",
            "ldrb r2, [r3, r2]",
            "cmp r2, 0xa",
            "beq 0x23728",
            "cmp r4, 0x58",
            "mov r2, 0",
            "subeq r3, r3, 1",
            "streq r3, [r5, 0xc]",
            "mov r3, 1",
            "ldr r0, [r5, 0xc]",
            "mov r1, r0",
            "bl fcn.000201f8",
            "str r0, [r5, 0xc]",
            "cmp r4, 0x73",
            "beq case.0x22718.105",
            "b 0x23d44",
            "bl fcn.00020538",
            "cmp r0, 0x5a",
            "beq 0x23748",
            "bl fcn.000213a4",
            "b case.0x22718.0",
            "ldr r3, [0x000236ac]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "ldreq r2, [0x00023680]",
            "streq r3, [r2]",
            "beq case.0x22718.0",
            "ldr r3, [0x0002366c]",
            "ldr r6, [r3]",
            "ldr r3, [0x00023670]",
            "cmp r6, 0",
            "ldrne r0, str.__s__File_is_read_only",
            "ldrne r1, [r3]",
            "bne 0x237bc",
            "ldr r2, [0x000236b0]",
            "ldr r0, [r3]",
            "ldr r5, [r2]",
            "ldm r5, {r1, r2}",
            "sub r2, r2, 1",
            "bl fcn.00020294",
            "cmp r0, 0",
            "bge 0x237c4",
            "cmn r0, 1",
            "bne case.0x22718.0",
            "ldr r3, [0x00023678]",
            "ldr r3, [r3]",
            "ldr r0, [r3]",
            "bl sym.imp.strerror",
            "mov r1, r0",
            "ldr r0, str.Write_error:__s",
            "bl fcn.0001f770",
            "b case.0x22718.0",
            "ldm r5, {r2, r3}",
            "sub r3, r3, r2",
            "cmp r0, r3",
            "ldreq r3, [0x00023680]",
            "streq r6, [r3]",
            "b case.0x22718.0",
            "bl fcn.0001f3dc",
            "bl fcn.0001fd08",
            "b case.0x22718.0",
            "ldr r2, [0x000236b8]",
            "ldr r3, [r2]",
            "cmp r3, 1",
            "sub r1, r3, 1",
            "str r1, [r2]",
            "ble 0x23808",
            "mov r0, r4",
            "bl fcn.00022624",
            "ldr r3, [0x000236b0]",
            "cmp r4, 0x62",
            "mvneq r6, 0",
            "movne r6, 1",
            "ldr r5, [r3]",
            "ldr r7, [r5, 0xc]",
            "ldr r3, [r5]",
            "add r7, r7, r6",
            "cmp r7, r3",
            "blo case.0x22718.0",
            "ldr r3, [r5, 4]",
            "sub r3, r3, 1",
            "cmp r7, r3",
            "bhi case.0x22718.0",
            "str r7, [r5, 0xc]",
            "ldrb r0, [r7]",
            "bl sym.imp.isspace",
            "cmp r0, 0",
            "beq 0x23874",
            "cmp r4, 0x65",
            "mov r0, r7",
            "movne r1, 1",
            "moveq r1, 2",
            "mov r2, r6",
            "mov r3, 3",
            "bl fcn.00020670",
            "str r0, [r5, 0xc]",
            "ldr r7, [r5, 0xc]",
            "ldrb r8, [r7]",
            "mov r0, r8",
            "bl sym.imp.isalnum",
            "cmp r0, 0",
            "bne 0x23894",
            "cmp r8, 0x5f",
            "bne 0x238a8",
            "mov r0, r7",
            "mov r1, 1",
            "mov r2, r6",
            "mov r3, 5",
            "b 0x23c4c",
            "mov r0, r8",
            "bl sym.imp.ispunct",
            "cmp r0, 0",
            "beq case.0x22718.0",
            "mov r0, r7",
            "mov r1, 1",
            "mov r2, r6",
            "mov r3, 4",
            "b 0x23c4c",
            "cmp r4, 0x59",
            "moveq r5, 0x79",
            "beq 0x238e0",
            "bl fcn.00020538",
            "mov r5, r0",
            "add r0, sp, 0x1c",
            "add r1, sp, 0x18",
            "mov r2, r5",
            "bl fcn.00023e4c",
            "cmp r5, 0x1b",
            "beq 0x23a34",
            "cmp r4, 0x79",
            "cmpne r4, 0x59",
            "ldr r0, [0x00023684]",
            "mov r1, r5",
            "movne r6, 0",
            "moveq r6, 1",
            "bl sym.imp.strchr",
            "subs r7, r0, 0",
            "eor r6, r6, 1",
            "beq 0x2397c",
            "cmp r4, 0x63",
            "beq 0x23954",
            "b 0x2396c",
            "ldr r3, [r7]",
            "ldr r3, [r3]",
            "cmp r5, r3",
            "bls 0x2396c",
            "ldrb r2, [r5, -1]",
            "sub r3, r5, 1",
            "cmp r2, 0xa",
            "beq 0x2396c",
            "str r3, [sp, 0x18]",
            "b 0x23958",
            "ldr r7, [0x000236b0]",
            "ldr r5, [sp, 0x18]",
            "ldrb r0, [r5]",
            "bl sym.imp.isblank",
            "cmp r0, 0",
            "bne 0x2392c",
            "ldr r0, [sp, 0x1c]",
            "mov r2, 0",
            "ldr r1, [sp, 0x18]",
            "b 0x2399c",
            "ldr r0, str.0bBeEft_",
            "mov r1, r5",
            "bl sym.imp.strchr",
            "cmp r0, 0",
            "beq 0x239bc",
            "ldr r0, [sp, 0x1c]",
            "mov r2, r7",
            "ldr r1, [sp, 0x18]",
            "mov r3, r6",
            "bl fcn.000201f8",
            "ldr r3, [0x000236b0]",
            "cmp r4, 0x63",
            "ldr r3, [r3]",
            "str r0, [r3, 0xc]",
            "beq 0x23a3c",
            "b 0x23a50",
            "ldr r0, str.cdykjHL___r_n",
            "mov r1, r5",
            "bl sym.imp.strchr",
            "cmp r0, 0",
            "beq 0x23a30",
            "ldr r3, [0x000236b0]",
            "mov r2, 1",
            "ldr r0, [sp, 0x1c]",
            "ldr r1, [sp, 0x18]",
            "ldr r5, [r3]",
            "mov r3, r6",
            "bl fcn.000201f8",
            "cmp r4, 0x63",
            "str r0, [r5, 0xc]",
            "bne 0x23a1c",
            "mov r1, 0xa",
            "bl fcn.00021440",
            "ldr r3, [r5, 4]",
            "str r0, [r5, 0xc]",
            "sub r3, r3, 1",
            "cmp r0, r3",
            "beq 0x23a3c",
            "bl fcn.0001f4b0",
            "b 0x23a3c",
            "cmp r4, 0x64",
            "bne 0x23a64",
            "bl fcn.0001f3dc",
            "bl fcn.0001fd08",
            "b 0x23a58",
            "bl fcn.000213a4",
            "mov r4, 0x1b",
            "b case.0x22718.0",
            "add r0, sp, 0xc",
            "ldr r1, str.Change",
            "bl sym.imp.strcpy",
            "mov r4, 0x63",
            "b case.0x22718.105",
            "cmp r4, 0x64",
            "bne 0x23a64",
            "add r0, sp, 0xc",
            "ldr r1, str.Delete",
            "bl sym.imp.strcpy",
            "cmp r4, 0x79",
            "cmpne r4, 0x59",
            "bne 0x23a7c",
            "add r0, sp, 0xc",
            "ldr r1, str.Yank",
            "bl sym.imp.strcpy",
            "ldr r3, [0x000236b0]",
            "mov r6, 0",
            "ldr r3, [r3]",
            "ldr r2, [r3, 0x80]",
            "add r2, r2, 4",
            "ldr r5, [r3, r2, lsl 2]",
            "mov r0, r5",
            "str r5, [sp, 0x1c]",
            "bl sym.imp.strlen",
            "add r0, r5, r0",
            "str r0, [sp, 0x18]",
            "b 0x23ac0",
            "ldrb r2, [r3]",
            "add r3, r3, 1",
            "str r3, [sp, 0x1c]",
            "cmp r2, 0xa",
            "addeq r6, r6, 1",
            "ldr r3, [sp, 0x1c]",
            "cmp r3, r0",
            "bls 0x23aac",
            "mov r0, r5",
            "bl sym.imp.strlen",
            "mov r5, r0",
            "bl fcn.0001f5b8",
            "add r1, sp, 0xc",
            "str r0, [sp]",
            "mov r2, r6",
            "ldr r0, str._s__d_lines___d_chars__using___c_",
            "mov r3, r5",
            "bl fcn.0001fa90",
            "b 0x23d44",
            "ldr r2, [0x000236b8]",
            "ldr r3, [r2]",
            "cmp r3, 1",
            "sub r1, r3, 1",
            "str r1, [r2]",
            "ble 0x23b18",
            "mov r0, r4",
            "bl fcn.00022624",
            "bl fcn.0001f4b0",
            "b 0x22a64",
            "bl fcn.00020538",
            "ldr r3, [r6]",
            "ldr r3, [r3, 0xc]",
            "ldrb r2, [r3]",
            "cmp r2, 0xa",
            "strbne r0, [r3]",
            "ldrne r3, [0x000236ac]",
            "ldrne r2, [r3]",
            "addne r2, r2, 1",
            "strne r2, [r3]",
            "b 0x23d44",
            "ldr r5, [0x000236a0]",
            "bl fcn.00020538",
            "strb r0, [r5]",
            "mov r0, 0x3b",
            "bl fcn.00022624",
            "ldr r3, [r6]",
            "ldr r3, [r3, 0xc]",
            "ldrb r2, [r3]",
            "ldrb r3, [r5]",
            "cmp r2, r3",
            "bne 0x23b7c",
            "bl fcn.0001f378",
            "ldr r3, [0x000236a0]",
            "mov r2, 0",
            "strb r2, [r3]",
            "b case.0x22718.0",
            "ldr r2, [0x000236b8]",
            "ldr r3, [r2]",
            "cmp r3, 1",
            "sub r1, r3, 1",
            "str r1, [r2]",
            "ble 0x23bac",
            "mov r0, 0x77",
            "bl fcn.00022624",
            "ldr r3, [0x000236b0]",
            "ldr r5, [r3]",
            "ldr r6, [r5, 0xc]",
            "ldrb r7, [r6]",
            "mov r0, r7",
            "bl sym.imp.isalnum",
            "cmp r0, 0",
            "bne 0x23bd4",
            "cmp r7, 0x5f",
            "bne 0x23be8",
            "mov r1, 1",
            "mov r0, r6",
            "mov r2, r1",
            "mov r3, 5",
            "b 0x23c08",
            "mov r0, r7",
            "bl sym.imp.ispunct",
            "cmp r0, 0",
            "beq 0x23c10",
            "mov r1, 1",
            "mov r0, r6",
            "mov r2, r1",
            "mov r3, 4",
            "bl fcn.00020670",
            "str r0, [r5, 0xc]",
            "ldr r2, [r5, 4]",
            "ldr r3, [r5, 0xc]",
            "sub r2, r2, 1",
            "cmp r3, r2",
            "addlo r3, r3, 1",
            "strlo r3, [r5, 0xc]",
            "ldr r6, [r5, 0xc]",
            "ldrb r0, [r6]",
            "bl sym.imp.isspace",
            "cmp r0, 0",
            "beq case.0x22718.0",
            "mov r0, r6",
            "mov r1, 2",
            "mov r2, 1",
            "mov r3, 3",
            "bl fcn.00020670",
            "b 0x22a88",
            "bl fcn.00020538",
            "cmp r0, 0x2e",
            "bne 0x23c78",
            "ldr r3, [0x000236a4]",
            "ldr r5, [r3]",
            "sub r5, r5, 2",
            "add r5, r5, r5, lsr 31",
            "asr r5, r5, 1",
            "b 0x23c8c",
            "cmp r0, 0x2d",
            "ldreq r3, [0x000236a4]",
            "movne r5, 0",
            "ldreq r5, [r3]",
            "subeq r5, r5, 2",
            "ldr r3, [0x000236b0]",
            "ldr r3, [r3]",
            "ldr r0, [r3, 0xc]",
            "bl fcn.0001f1d8",
            "ldr r3, [0x000236a8]",
            "str r0, [r3]",
            "mov r0, r5",
            "b 0x22b04",
            "ldr r3, [0x000236b8]",
            "ldr r5, [r6]",
            "ldr r1, [r3]",
            "ldr r0, [r5, 0xc]",
            "sub r1, r1, 1",
            "b 0x22a84",
            "ldr r2, [0x000236b8]",
            "ldr r3, [r2]",
            "cmp r3, 1",
            "sub r1, r3, 1",
            "str r1, [r2]",
            "ble 0x23ce4",
            "mov r0, 0x7e",
            "bl fcn.00022624",
            "ldr r3, [0x000236b0]",
            "ldr r3, [r3]",
            "ldr r6, [r3, 0xc]",
            "ldrb r5, [r6]",
            "mov r0, r5",
            "bl sym.imp.islower",
            "cmp r0, 0",
            "beq 0x23d0c",
            "bl sym.imp.__ctype_toupper_loc",
            "b 0x23d20",
            "mov r0, r5",
            "bl sym.imp.isupper",
            "cmp r0, 0",
            "beq 0x23d40",
            "bl sym.imp.__ctype_tolower_loc",
            "ldr r3, [r0]",
            "lsl r5, r5, 1",
            "ldrsh r3, [r3, r5]",
            "strb r3, [r6]",
            "ldr r3, [0x000236ac]",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "bl fcn.0001f3a8",
            "bl fcn.0001f590",
            "b case.0x22718.0",
            "bl fcn.0001f3dc",
            "ldr r3, [0x000236b0]",
            "ldr r5, [r3]",
            "ldr r0, [r5, 4]",
            "ldr r3, [r5]",
            "cmp r0, r3",
            "bne 0x23d78",
            "mov r1, 0xa",
            "bl fcn.00021440",
            "ldr r3, [r5]",
            "str r3, [r5, 0xc]",
            "ldr r0, [r5, 0xc]",
            "ldr r3, [r5, 4]",
            "cmp r0, r3",
            "beq 0x23d90",
            "bl fcn.000213f0",
            "str r0, [r5, 0xc]",
            "ldr r6, [r5, 0xc]",
            "ldr r3, [r5, 0xf8]",
            "cmp r6, r3",
            "blo 0x23dac",
            "ldr r3, [r5, 0xfc]",
            "cmp r6, r3",
            "bls 0x23df0",
            "ldr r3, [0x000236b4]",
            "mov r1, r4",
            "ldr r0, [r3]",
            "bl sym.imp.strchr",
            "cmp r0, 0",
            "beq 0x23df0",
            "ldr r3, [r5, 0xf0]",
            "mov r0, r6",
            "str r6, [r5, 0xf0]",
            "str r3, [r5, 0xf4]",
            "bl fcn.0001f23c",
            "bl fcn.0001f23c",
            "str r0, [r5, 0xf8]",
            "mov r0, r6",
            "bl fcn.0001f274",
            "bl fcn.0001f274",
            "str r0, [r5, 0xfc]",
            "sub r4, r4, 0x30",
            "mov r0, r6",
            "cmp r4, 9",
            "ldrhi r3, [0x000236b8]",
            "movhi r2, 0",
            "strhi r2, [r3]",
            "bl fcn.0001f1d8",
            "ldrb r3, [r6]",
            "rsb r0, r0, r6",
            "cmp r0, 0",
            "movle r0, 0",
            "movgt r0, 1",
            "cmp r3, 0xa",
            "movne r0, 0",
            "cmp r0, 0",
            "beq 0x23e44",
            "ldr r3, [0x000236bc]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "subeq r6, r6, 1",
            "streq r6, [r5, 0xc]",
            "add sp, sp, 0x20",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.0001f378": {
        "function_address": "0x0001f378",
        "instructions": [
            "ldr r3, [0x0001f3a4]",
            "ldr r3, [r3]",
            "ldr r2, [r3, 0xc]",
            "ldr r1, [r3]",
            "cmp r2, r1",
            "bxls lr",
            "sub r1, r2, 1",
            "ldrb r2, [r2, -1]",
            "cmp r2, 0xa",
            "strne r1, [r3, 0xc]",
            "bx lr"
        ]
    },
    "fcn.0001f490": {
        "function_address": "0x0001f490",
        "instructions": [
            "ldr r3, [0x0001f4ac]",
            "push {r4, lr}",
            "ldr r4, [r3]",
            "ldr r0, [r4, 0xc]",
            "bl fcn.0001f274",
            "str r0, [r4, 0xc]",
            "pop {r4, pc}"
        ]
    },
    "fcn.0001f41c": {
        "function_address": "0x0001f41c",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r7, r1",
            "ldr r6, [0x0001f48c]",
            "bl fcn.0001f1d8",
            "mov r4, r0",
            "mov r0, 0",
            "mov r5, r4",
            "ldrb r3, [r4], 1",
            "cmp r3, 0xa",
            "cmpne r3, 0",
            "beq 0x1f484",
            "cmp r3, 9",
            "bne 0x1f458",
            "bl fcn.0001f1b4",
            "b 0x1f464",
            "cmp r3, 0x7f",
            "cmpne r3, 0x1f",
            "addls r0, r0, 1",
            "add r0, r0, 1",
            "cmp r0, r7",
            "bgt 0x1f484",
            "ldr r3, [r6]",
            "ldr r3, [r3, 4]",
            "cmp r5, r3",
            "blo 0x1f434",
            "mov r5, r4",
            "mov r0, r5",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.0001f3a8": {
        "function_address": "0x0001f3a8",
        "instructions": [
            "ldr r3, [0x0001f3d8]",
            "ldr r3, [r3]",
            "ldr r1, [r3, 4]",
            "ldr r2, [r3, 0xc]",
            "sub r1, r1, 1",
            "cmp r2, r1",
            "bxhs lr",
            "ldrb r1, [r2]",
            "cmp r1, 0xa",
            "addne r2, r2, 1",
            "strne r2, [r3, 0xc]",
            "bx lr"
        ]
    },
    "sym.imp.islower": {
        "function_address": "0x0000bb4c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x944]!"
        ]
    },
    "fcn.0001f3dc": {
        "function_address": "0x0001f3dc",
        "instructions": [
            "ldr r3, [0x0001f3f8]",
            "push {r4, lr}",
            "ldr r4, [r3]",
            "ldr r0, [r4, 0xc]",
            "bl fcn.0001f1d8",
            "str r0, [r4, 0xc]",
            "pop {r4, pc}"
        ]
    },
    "fcn.0001f4b0": {
        "function_address": "0x0001f4b0",
        "instructions": [
            "ldr r3, [0x0001f4cc]",
            "push {r4, lr}",
            "ldr r4, [r3]",
            "ldr r0, [r4, 0xc]",
            "bl fcn.0001f23c",
            "str r0, [r4, 0xc]",
            "pop {r4, pc}"
        ]
    },
    "fcn.00020eb8": {
        "function_address": "0x00020eb8",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sl, lr}",
            "sub sp, sp, 0x400",
            "sub sp, sp, 4",
            "mov r6, r0",
            "mov r1, r6",
            "mov r0, sp",
            "bl sym.imp.strcpy",
            "ldr r3, [0x00020fe0]",
            "mov r4, 0",
            "mov r1, r4",
            "mov r2, r4",
            "mov r5, sp",
            "movw r8, 0x3ff",
            "str r4, [r3]",
            "ldr r3, [0x00020fe4]",
            "ldr r7, [0x00020fe8]",
            "ldr r0, [r3]",
            "sub r0, r0, 1",
            "bl fcn.00020790",
            "bl fcn.0001fb04",
            "mov r0, r6",
            "ldr r6, obj.stdout",
            "bl fcn.0001fad0",
            "mov r0, sp",
            "bl sym.imp.strlen",
            "mov sl, r0",
            "b 0x20fac",
            "bl fcn.00020538",
            "cmp r0, 0xa",
            "cmpne r0, 0xd",
            "beq 0x20fb4",
            "cmp r0, 0x1b",
            "beq 0x20fb4",
            "ldrb r2, [r7]",
            "cmp r2, r0",
            "cmpne r0, 8",
            "movne r2, 0",
            "moveq r2, 1",
            "beq 0x20f5c",
            "cmp r0, 0x7f",
            "bne 0x20f88",
            "sub r5, sl, 1",
            "add r1, sp, 0x400",
            "add r3, r1, r5",
            "add sl, r1, sl",
            "strb r4, [r3, -0x400]",
            "ldr r0, aav.0x0005b244",
            "strb r4, [sl, -0x400]",
            "bl fcn.0001fad0",
            "cmp r5, 0",
            "ble 0x20fb4",
            "b 0x20fa8",
            "add ip, sp, 0x400",
            "add r5, sl, 1",
            "add r1, ip, sl",
            "add r3, ip, r5",
            "strb r0, [r1, -0x400]",
            "strb r2, [r3, -0x400]",
            "ldr r1, [r6]",
            "bl sym.imp.fputc",
            "mov sl, r5",
            "cmp sl, r8",
            "ble 0x20f24",
            "ldr r4, [0x00020ff4]",
            "mov r0, 0",
            "bl fcn.00020930",
            "ldr r0, [r4]",
            "bl sym.imp.free",
            "mov r0, sp",
            "bl fcn.00029ed8",
            "str r0, [r4]",
            "add sp, sp, 4",
            "add sp, sp, 0x400",
            "pop {r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "fcn.00021714": {
        "function_address": "0x00021714",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x820",
            "ldrb r3, [r0]",
            "sub sp, sp, 4",
            "mov r7, r0",
            "cmp r3, 0",
            "beq 0x224d0",
            "cmp r3, 0x3a",
            "mvn r3, 0",
            "str r3, [sp, 0x814]",
            "mov r8, 0",
            "str r3, [sp, 0x818]",
            "addeq r7, r0, 1",
            "ldr r3, [0x00022510]",
            "add r0, sp, 0x410",
            "mov r1, r8",
            "mov r2, 0x400",
            "add r0, r0, 4",
            "str r8, [sp, 0x81c]",
            "ldr r6, [r3]",
            "ldr r3, [0x00022514]",
            "ldm r6, {r4, r5}",
            "ldr sl, [r3]",
            "bl sym.imp.memset",
            "add r0, sp, 0x14",
            "mov r1, r8",
            "mov r2, 0x400",
            "bl sym.imp.memset",
            "mov r8, r7",
            "ldrb sb, [r7], 1",
            "mov r0, sb",
            "bl sym.imp.isblank",
            "cmp r0, 0",
            "bne 0x21784",
            "cmp sb, 0x25",
            "bne 0x217c8",
            "ldr r1, [r6, 4]",
            "mov r3, 1",
            "ldr r0, [r6]",
            "add r7, r8, 1",
            "str r3, [sp, 0x818]",
            "sub r1, r1, 1",
            "bl fcn.0001f2e8",
            "str r0, [sp, 0x814]",
            "b 0x21828",
            "add r1, sp, 0x810",
            "mov r0, r8",
            "add r1, r1, 8",
            "bl fcn.0001ff68",
            "mov r6, r0",
            "mov r7, r6",
            "ldrb r8, [r6], 1",
            "mov r0, r8",
            "bl sym.imp.isblank",
            "cmp r0, 0",
            "bne 0x217dc",
            "cmp r8, 0x2c",
            "bne 0x21828",
            "add r7, r7, 1",
            "mov r6, r7",
            "ldrb r0, [r7], 1",
            "bl sym.imp.isblank",
            "cmp r0, 0",
            "bne 0x21800",
            "add r1, sp, 0x810",
            "mov r0, r6",
            "add r1, r1, 4",
            "bl fcn.0001ff68",
            "mov r7, r0",
            "ldrb r0, [r7]",
            "mov sb, r7",
            "bl sym.imp.isblank",
            "cmp r0, 0",
            "add r7, r7, 1",
            "bne 0x21828",
            "add fp, sp, 0x410",
            "mov r6, sb",
            "add fp, fp, 4",
            "b 0x21864",
            "mov r0, r8",
            "bl sym.imp.isspace",
            "cmp r0, 0",
            "bne 0x21874",
            "strb r8, [fp], 1",
            "mov r7, r6",
            "ldrb r8, [r6], 1",
            "cmp r8, 0",
            "bne 0x21850",
            "mov r8, r7",
            "ldrb r0, [r7], 1",
            "bl sym.imp.isblank",
            "subs r6, r0, 0",
            "bne 0x21874",
            "mov r1, r8",
            "add r0, sp, 0x14",
            "bl sym.imp.strcpy",
            "add r0, sp, 0x410",
            "mov r1, 0x21",
            "add r0, r0, 4",
            "bl fcn.00027f1c",
            "subs fp, r0, 0",
            "strbne r6, [fp]",
            "movne fp, 1",
            "ldr r8, [sp, 0x818]",
            "cmp r8, 0",
            "sublt r5, r5, 1",
            "blt 0x218d4",
            "mov r0, r8",
            "bl fcn.0001f348",
            "mov r4, r0",
            "bl fcn.0001f208",
            "mov r5, r0",
            "ldr r2, [sp, 0x814]",
            "cmp r2, 0",
            "str r2, [sp, 0xc]",
            "blt 0x218f4",
            "mov r0, r2",
            "bl fcn.0001f348",
            "bl fcn.0001f208",
            "mov r5, r0",
            "add r7, sp, 0x410",
            "add r7, r7, 4",
            "mov r0, r7",
            "bl sym.imp.strlen",
            "subs r6, r0, 0",
            "bne 0x21920",
            "cmp r8, 0",
            "blt 0x224d0",
            "mov r0, r8",
            "bl fcn.0001f348",
            "b 0x219c0",
            "mov r0, r7",
            "ldr r1, [0x00022518]",
            "mov r2, r6",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "bne 0x21968",
            "cmp r8, 0",
            "bge 0x2195c",
            "ldr r3, [0x00022510]",
            "ldr r3, [r3]",
            "ldr r0, [r3]",
            "ldr r1, [r3, 0xc]",
            "bl fcn.0001f2e8",
            "str r0, [sp, 0x814]",
            "str r0, [sp, 0x818]",
            "ldr r0, aav.0x0005c33c",
            "ldr r1, [sp, 0x818]",
            "b 0x22280",
            "mov r0, r7",
            "ldr r1, [0x00022520]",
            "mov r2, r6",
            "bl sym.imp.strncasecmp",
            "cmp r0, 0",
            "bne 0x219d4",
            "cmp r8, 0",
            "bge 0x219ac",
            "ldr r3, [0x00022510]",
            "ldr r3, [r3]",
            "ldr r5, [r3, 0xc]",
            "mov r0, r5",
            "bl fcn.0001f1d8",
            "mov r4, r0",
            "mov r0, r5",
            "bl fcn.0001f208",
            "mov r5, r0",
            "mov r2, 1",
            "mov r0, r4",
            "mov r1, r5",
            "mov r3, r2",
            "bl fcn.000201f8",
            "ldr r3, [0x00022510]",
            "ldr r3, [r3]",
            "str r0, [r3, 0xc]",
            "bl fcn.0001fd08",
            "b 0x224d0",
            "mov r0, r7",
            "ldr r1, [0x00022524]",
            "mov r2, r6",
            "bl sym.imp.strncasecmp",
            "cmp r0, 0",
            "bne 0x21b20",
            "ldr r3, [0x00022528]",
            "rsbs fp, fp, 1",
            "movlo fp, 0",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "moveq fp, 0",
            "cmp fp, 0",
            "ldrne r0, str.No_write_since_last_change__:edit__overrides_",
            "bne 0x21a3c",
            "ldrb r3, [sp, 0x14]",
            "cmp r3, 0",
            "bne 0x21a44",
            "ldr r3, [0x00022514]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x21a38",
            "ldrb r3, [r3]",
            "cmp r3, 0",
            "bne 0x21a48",
            "ldr r0, str.No_current_filename",
            "bl fcn.0001f770",
            "b 0x224d0",
            "add sl, sp, 0x14",
            "mov r0, sl",
            "bl fcn.00021634",
            "cmp r0, 0",
            "blt 0x224d0",
            "ldr r3, [0x00022510]",
            "ldr r4, [r3]",
            "ldr r3, [r4, 0x84]",
            "cmp r3, 0x1b",
            "bhi 0x21a90",
            "add r3, r3, 4",
            "ldr r0, [r4, r3, lsl 2]",
            "cmp r0, 0",
            "beq 0x21a90",
            "bl sym.imp.free",
            "ldr r3, [r4, 0x84]",
            "mov r2, 0",
            "add r3, r3, 4",
            "str r2, [r4, r3, lsl 2]",
            "ldr r3, [r4, 0x80]",
            "cmp r3, 0x1b",
            "bhi 0x21ac0",
            "add r3, r3, 4",
            "ldr r0, [r4, r3, lsl 2]",
            "cmp r0, 0",
            "beq 0x21ac0",
            "bl sym.imp.free",
            "ldr r3, [r4, 0x80]",
            "mov r2, 0",
            "add r3, r3, 4",
            "str r2, [r4, r3, lsl 2]",
            "ldm r4, {r0, r1}",
            "sub r1, r1, 1",
            "bl fcn.0001f2e8",
            "ldr r3, [0x00022514]",
            "mov r5, r0",
            "mov r0, sl",
            "ldr r4, [r3]",
            "bl fcn.0001f734",
            "ldr r3, [0x00022534]",
            "cmp r0, 0",
            "ldr ip, [0x00022538]",
            "mov r1, r4",
            "ldr r2, str.__New_file_",
            "ldr lr, [r3]",
            "ldr r3, [sp, 0x81c]",
            "movge r2, ip",
            "ldr r0, str.__s__s_s__dL___dC",
            "cmp lr, 0",
            "str r5, [sp]",
            "str r3, [sp, 4]",
            "ldr r3, str.__Readonly_",
            "moveq r3, ip",
            "bl fcn.0001fa90",
            "b 0x224d0",
            "mov r0, r7",
            "ldr r1, [0x00022548]",
            "mov r2, r6",
            "bl sym.imp.strncasecmp",
            "cmp r0, 0",
            "bne 0x21b84",
            "cmn r8, 1",
            "bne 0x21b4c",
            "ldr r3, [sp, 0xc]",
            "cmn r3, 1",
            "beq 0x21b54",
            "ldr r0, str.No_address_allowed_on_this_command",
            "b 0x224cc",
            "ldrb r3, [sp, 0x14]",
            "cmp r3, 0",
            "ldreq r2, [0x00022550]",
            "streq r3, [r2]",
            "beq 0x224d0",
            "ldr r4, [0x00022514]",
            "ldr r0, [r4]",
            "bl sym.imp.free",
            "add r0, sp, 0x14",
            "bl fcn.00029ed8",
            "str r0, [r4]",
            "b 0x224d0",
            "ldr r1, str.features",
            "mov r0, r7",
            "mov r2, r6",
            "bl sym.imp.strncasecmp",
            "subs r1, r0, 0",
            "bne 0x21bc4",
            "ldr r3, [0x00022558]",
            "mov r2, r1",
            "ldr r0, [r3]",
            "sub r0, r0, 1",
            "bl fcn.00020790",
            "bl fcn.0001fb04",
            "bl fcn.00020300",
            "bl fcn.0001f618",
            "bl fcn.0001f69c",
            "b 0x21cc8",
            "mov r0, r7",
            "ldr r1, [0x0002255c]",
            "mov r2, r6",
            "bl sym.imp.strncasecmp",
            "cmp r0, 0",
            "bne 0x21cd0",
            "cmp r8, 0",
            "bge 0x21c08",
            "ldr r3, [0x00022510]",
            "ldr r3, [r3]",
            "ldr r5, [r3, 0xc]",
            "mov r0, r5",
            "bl fcn.0001f1d8",
            "mov r4, r0",
            "mov r0, r5",
            "bl fcn.0001f208",
            "mov r5, r0",
            "ldr r3, [0x00022558]",
            "mov r1, 0",
            "mov r2, r1",
            "ldr r8, obj.stdout",
            "ldr r0, [r3]",
            "sub r0, r0, 1",
            "bl fcn.00020790",
            "bl fcn.0001fb04",
            "ldr r0, aav.0x0005ad10",
            "bl sym.imp.puts",
            "b 0x21cc0",
            "ldrb r6, [r4], 1",
            "tst r6, 0x80",
            "beq 0x224f4",
            "cmp r6, 0x7f",
            "cmpne r6, 0x1f",
            "bls 0x21c54",
            "cmp r6, 0x9b",
            "bne 0x224f4",
            "bl fcn.0001fae0",
            "mov r7, 1",
            "mov r6, 0x2e",
            "b 0x21c74",
            "ldr r0, aav.0x0005b328",
            "mov r7, 0",
            "bl fcn.0001fad0",
            "b 0x21ca8",
            "cmp r6, 0x7f",
            "movne sl, 0",
            "moveq sl, 1",
            "cmp r6, 0x7f",
            "cmpne r6, 0x1f",
            "bhi 0x21ca8",
            "mov r0, 0x5e",
            "ldr r1, [r8]",
            "bl sym.imp.fputc",
            "cmp sl, 0",
            "addeq r6, r6, 0x40",
            "movne r6, 0x3f",
            "uxtbeq r6, r6",
            "mov r0, r6",
            "ldr r1, [r8]",
            "bl sym.imp.fputc",
            "cmp r7, 0",
            "beq 0x21cc0",
            "bl fcn.0001faec",
            "cmp r5, r4",
            "bhs 0x21c34",
            "bl fcn.00021038",
            "b 0x224d0",
            "mov r0, r7",
            "ldr r1, str.quit",
            "mov r2, r6",
            "bl sym.imp.strncasecmp",
            "cmp r0, 0",
            "beq 0x21d00",
            "mov r0, r7",
            "ldr r1, str.next",
            "mov r2, r6",
            "bl sym.imp.strncasecmp",
            "cmp r0, 0",
            "bne 0x21dac",
            "cmp fp, 0",
            "beq 0x21d24",
            "ldrb r3, [sp, 0x414]",
            "cmp r3, 0x71",
            "ldreq r3, [0x00022574]",
            "ldreq r2, [r3]",
            "ldreq r3, obj.optind",
            "streq r2, [r3]",
            "b 0x2241c",
            "ldr r3, [0x00022528]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "ldrb r3, [sp, 0x414]",
            "beq 0x21d50",
            "ldr r2, str.quit",
            "cmp r3, 0x71",
            "ldr r1, str.next",
            "ldr r0, str.No_write_since_last_change__:_s__overrides_",
            "moveq r1, r2",
            "b 0x2231c",
            "cmp r3, 0x71",
            "bne 0x21d80",
            "ldr r2, [0x00022574]",
            "ldr r3, obj.optind",
            "ldr r1, [r2]",
            "ldr r3, [r3]",
            "sub r1, r1, 1",
            "cmp r3, r1",
            "ldrlt r0, str._d_more_file_to_edit",
            "rsblt r1, r3, r1",
            "blt 0x2231c",
            "b 0x2241c",
            "cmp r3, 0x6e",
            "bne 0x2241c",
            "ldr r3, [0x00022574]",
            "ldr r2, obj.optind",
            "ldr r3, [r3]",
            "ldr r2, [r2]",
            "sub r3, r3, 1",
            "cmp r2, r3",
            "ldrge r0, str.No_more_files_to_edit",
            "bge 0x21a3c",
            "b 0x2241c",
            "mov r0, r7",
            "ldr r1, [0x00022588]",
            "mov r2, r6",
            "bl sym.imp.strncasecmp",
            "cmp r0, 0",
            "bne 0x21e98",
            "ldrb r3, [sp, 0x14]",
            "cmp r3, 0",
            "ldreq r0, str.No_filename_given",
            "beq 0x21a3c",
            "cmp r8, 0",
            "bge 0x21df4",
            "ldr r3, [0x00022510]",
            "ldr r3, [r3]",
            "ldr r0, [r3, 0xc]",
            "bl fcn.0001f1d8",
            "mov r4, r0",
            "b 0x21df8",
            "beq 0x21e04",
            "mov r0, r4",
            "bl fcn.0001f274",
            "mov r4, r0",
            "add r5, sp, 0x14",
            "mov r1, r4",
            "mov r0, r5",
            "mov r2, 0",
            "bl fcn.0001fb10",
            "cmp r0, 0",
            "mov r6, r0",
            "str r0, [sp, 0x81c]",
            "blt 0x224d0",
            "sub r1, r0, 1",
            "mov r0, r4",
            "add r1, r4, r1",
            "bl fcn.0001f2e8",
            "ldr r2, [0x00022534]",
            "mov r3, r0",
            "ldr ip, str.__Readonly_",
            "mov r1, r5",
            "ldr r0, str.__s__s__dL___dC",
            "ldr lr, [r2]",
            "ldr r2, [0x00022538]",
            "str r6, [sp]",
            "cmp lr, 0",
            "movne r2, ip",
            "bl fcn.0001fa90",
            "ldr r2, [sp, 0x81c]",
            "cmp r2, 0",
            "ble 0x224d0",
            "ldr r3, [0x00022510]",
            "ldr r3, [r3]",
            "ldr r1, [r3, 0xc]",
            "cmp r4, r1",
            "addls r2, r1, r2",
            "strls r2, [r3, 0xc]",
            "ldr r3, [0x00022528]",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "b 0x22424",
            "add r7, sp, 0x410",
            "ldr r1, str.rewind",
            "add r7, r7, 4",
            "mov r2, r6",
            "mov r0, r7",
            "bl sym.imp.strncasecmp",
            "cmp r0, 0",
            "bne 0x21efc",
            "ldr r3, [0x00022528]",
            "rsbs fp, fp, 1",
            "movlo fp, 0",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "moveq fp, 0",
            "cmp fp, 0",
            "ldrne r0, str.No_write_since_last_change__:rewind__overrides_",
            "bne 0x21a3c",
            "ldr r3, [0x0002259c]",
            "ldr r2, [r3]",
            "ldr r3, obj.optind",
            "sub r2, r2, 1",
            "str r2, [r3]",
            "ldr r3, [0x000225a0]",
            "str fp, [r3]",
            "b 0x224d0",
            "mov r0, r7",
            "ldr r1, [0x000225a4]",
            "mov r2, r6",
            "bl sym.imp.strncasecmp",
            "subs r3, r0, 0",
            "bne 0x22124",
            "ldrb r2, [sp, 0x14]",
            "cmp r2, 0",
            "beq 0x21f40",
            "add r4, sp, 0x14",
            "ldr r1, [0x000225a8]",
            "mov r0, r4",
            "str r3, [sp, 8]",
            "bl sym.imp.strcasecmp",
            "cmp r0, 0",
            "ldr r3, [sp, 8]",
            "bne 0x220f8",
            "ldr r3, [0x00022558]",
            "mov r1, 0",
            "mov r2, r1",
            "ldr r0, [r3]",
            "sub r0, r0, 1",
            "bl fcn.00020790",
            "bl fcn.0001fb04",
            "ldr r0, str._________________________________________r",
            "bl sym.imp.puts",
            "ldr r3, [0x000225b0]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "bne 0x21f7c",
            "ldr r0, [0x000225b4]",
            "bl sym.imp.printf",
            "ldr r0, str.autoindent",
            "bl sym.imp.printf",
            "ldr r3, [0x000225b0]",
            "ldr r3, [r3]",
            "tst r3, 8",
            "bne 0x21f9c",
            "ldr r0, [0x000225b4]",
            "bl sym.imp.printf",
            "ldr r0, str.flash",
            "bl sym.imp.printf",
            "ldr r3, [0x000225b0]",
            "ldr r3, [r3]",
            "tst r3, 4",
            "bne 0x21fbc",
            "ldr r0, [0x000225b4]",
            "bl sym.imp.printf",
            "ldr r0, str.ignorecase",
            "bl sym.imp.printf",
            "ldr r3, [0x000225b0]",
            "ldr r3, [r3]",
            "tst r3, 2",
            "bne 0x21fdc",
            "ldr r0, [0x000225b4]",
            "bl sym.imp.printf",
            "ldr r0, str.showmatch",
            "bl sym.imp.printf",
            "ldr r3, [0x000225c8]",
            "ldr r0, [0x000225cc]",
            "ldr r1, [r3]",
            "bl sym.imp.printf",
            "ldr r0, aav.0x0005ad10",
            "bl sym.imp.puts",
            "b 0x21cc8",
            "ldr r1, [0x000225b4]",
            "mov r2, 2",
            "mov r0, r4",
            "bl sym.imp.strncasecmp",
            "cmp r0, 0",
            "ldr r1, str.autoindent",
            "moveq r5, 2",
            "mov r0, r4",
            "mov r2, r5",
            "ldr r3, [0x000225d0]",
            "str r7, [sp]",
            "add sl, r4, r5",
            "bl fcn.0001fddc",
            "mov r0, r4",
            "ldr r1, str.flash",
            "mov r2, r5",
            "ldr r3, [0x000225d4]",
            "str r8, [sp]",
            "bl fcn.0001fddc",
            "mov r0, r4",
            "ldr r1, str.ignorecase",
            "mov r2, r5",
            "ldr r3, aav.0x0005ad60",
            "str sb, [sp]",
            "bl fcn.0001fddc",
            "mov r3, 2",
            "mov r0, r4",
            "str r3, [sp]",
            "mov r2, r5",
            "ldr r1, str.showmatch",
            "ldr r3, aav.0x0005ad60",
            "bl fcn.0001fddc",
            "mov r0, sl",
            "ldr r1, [0x000225cc]",
            "mov r2, 7",
            "bl sym.imp.strncasecmp",
            "cmp r0, 0",
            "bne 0x220d0",
            "mov r1, 0x3d",
            "mov r0, sl",
            "bl sym.imp.strchr",
            "ldr r1, [0x000225dc]",
            "mov r2, fp",
            "bl sym.imp.sscanf",
            "ldr r3, [sp, 0x81c]",
            "cmp r3, 0",
            "ble 0x220d0",
            "ldr r2, [r6]",
            "sub r2, r2, 1",
            "cmp r3, r2",
            "ldrlt r2, [0x000225c8]",
            "strlt r3, [r2]",
            "mov r3, r4",
            "ldrb r2, [r4], 1",
            "cmp r2, 0x20",
            "cmpne r2, 0",
            "bne 0x220d0",
            "mov r4, r3",
            "ldrb r2, [r3], 1",
            "cmp r2, 0x20",
            "beq 0x220e4",
            "b 0x22114",
            "ldr r6, [0x000225e0]",
            "add fp, sp, 0x810",
            "mov r5, r3",
            "mov r7, 1",
            "mov r8, 8",
            "mov sb, 4",
            "add fp, fp, 0xc",
            "ldrb r3, [r4]",
            "cmp r3, 0",
            "bne 0x22000",
            "b 0x224d0",
            "mov r0, r7",
            "ldr r1, [0x000225e4]",
            "mov r2, 1",
            "bl sym.imp.strncasecmp",
            "cmp r0, 0",
            "str r0, [sp, 0xc]",
            "bne 0x22260",
            "ldrb r7, [sb, 1]",
            "add r5, sb, 2",
            "mov r0, r5",
            "mov r1, r7",
            "bl sym.imp.strchr",
            "subs r6, r0, 0",
            "beq 0x224e8",
            "ldr r3, [sp, 0xc]",
            "mov r1, r7",
            "strb r3, [r6], 1",
            "mov r0, r6",
            "bl sym.imp.strchr",
            "cmp r0, 0",
            "beq 0x224e8",
            "ldr r2, [sp, 0xc]",
            "ldrb r8, [r0, 1]",
            "strb r2, [r0]",
            "mov r0, r4",
            "bl fcn.0001f1d8",
            "ldr r3, [sp, 0x818]",
            "mov r4, r0",
            "cmp r3, 0",
            "bge 0x221c0",
            "ldr r3, [0x00022510]",
            "ldr r7, [r3]",
            "ldr r0, [r7, 0xc]",
            "bl fcn.0001f1d8",
            "mov r4, r0",
            "ldr r0, [r7]",
            "mov r1, r4",
            "bl fcn.0001f2e8",
            "str r0, [sp, 0x818]",
            "ldr r3, [sp, 0x814]",
            "ldr r7, [sp, 0x818]",
            "cmp r3, 0",
            "ldrlt r3, [sp, 0x818]",
            "strlt r3, [sp, 0x814]",
            "b 0x22250",
            "mov sl, r4",
            "mov r0, sl",
            "mov r1, r5",
            "mov r2, 1",
            "mov r3, 0",
            "bl fcn.0001fe8c",
            "subs sl, r0, 0",
            "beq 0x22240",
            "mov r0, r5",
            "bl sym.imp.strlen",
            "sub r1, r0, 1",
            "mov r0, sl",
            "add r1, sl, r1",
            "bl fcn.0001f7e0",
            "mov r0, sl",
            "mov r1, r6",
            "bl fcn.0002010c",
            "cmp r8, 0x67",
            "bne 0x22240",
            "mov r0, r6",
            "bl sym.imp.strlen",
            "add sl, sl, r0",
            "mov r0, r4",
            "bl fcn.0001f208",
            "cmp sl, r0",
            "blo 0x221dc",
            "mov r0, r4",
            "add r7, r7, 1",
            "bl fcn.0001f274",
            "mov r4, r0",
            "ldr r3, [sp, 0x814]",
            "cmp r7, r3",
            "ble 0x221d8",
            "b 0x224d0",
            "mov r0, r7",
            "ldr r1, [0x000225e8]",
            "mov r2, r6",
            "bl sym.imp.strncasecmp",
            "cmp r0, 0",
            "bne 0x22288",
            "ldr r0, aav.0x0005ad0c",
            "ldr r1, str.1.7.2_2014_01_17_17:20:52_CST",
            "bl fcn.0001fa90",
            "b 0x224d0",
            "mov r0, r7",
            "ldr r1, [0x000225f4]",
            "mov r2, r6",
            "bl sym.imp.strncasecmp",
            "cmp r0, 0",
            "beq 0x222e8",
            "mov r0, r7",
            "ldr r1, [0x000225f8]",
            "mov r2, r6",
            "bl sym.imp.strncasecmp",
            "cmp r0, 0",
            "beq 0x222e8",
            "mov r0, r7",
            "ldr r1, aav.0x0005d49c",
            "mov r2, r6",
            "bl sym.imp.strncasecmp",
            "cmp r0, 0",
            "beq 0x222e8",
            "mov r0, r7",
            "ldr r1, [0x00022600]",
            "mov r2, r6",
            "bl sym.imp.strncasecmp",
            "cmp r0, 0",
            "bne 0x2242c",
            "ldrb r3, [sp, 0x14]",
            "cmp r3, 0",
            "ldr r3, [0x00022534]",
            "addne sl, sp, 0x14",
            "rsbs fp, fp, 1",
            "movlo fp, 0",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "moveq fp, 0",
            "cmp fp, 0",
            "beq 0x22324",
            "ldr r0, str.__s__File_is_read_only",
            "mov r1, sl",
            "bl fcn.0001f770",
            "b 0x224d0",
            "mov r1, r5",
            "mov r0, r4",
            "bl fcn.0001f2e8",
            "rsb r3, r4, 1",
            "mov r7, r0",
            "add r3, r5, r3",
            "mov r0, sl",
            "mov r1, r4",
            "mov r2, r5",
            "str r3, [sp, 0x81c]",
            "bl fcn.00020294",
            "subs r6, r0, 0",
            "bge 0x22384",
            "cmn r6, 1",
            "bne 0x224d0",
            "ldr r3, [0x00022608]",
            "ldr r3, [r3]",
            "ldr r0, [r3]",
            "bl sym.imp.strerror",
            "mov r1, sl",
            "mov r2, r0",
            "ldr r0, str.__s___s",
            "bl fcn.0001f770",
            "b 0x224d0",
            "mov r2, r7",
            "mov r3, r6",
            "ldr r0, str.__s___dL___dC",
            "mov r1, sl",
            "bl fcn.0001fa90",
            "ldr r3, [0x00022510]",
            "ldr r3, [r3]",
            "ldr r2, [r3]",
            "cmp r4, r2",
            "bne 0x223d8",
            "ldr r3, [r3, 4]",
            "sub r3, r3, 1",
            "cmp r5, r3",
            "bne 0x223d8",
            "ldr r3, [sp, 0x81c]",
            "cmp r6, r3",
            "ldreq r3, [0x00022528]",
            "mvneq r2, 0",
            "streq fp, [r3]",
            "ldreq r3, [0x00022614]",
            "streq r2, [r3]",
            "ldrb r2, [sp, 0x414]",
            "cmp r2, 0x78",
            "beq 0x22410",
            "ldrb r3, [sp, 0x415]",
            "cmp r3, 0x71",
            "beq 0x22410",
            "cmp r3, 0x6e",
            "beq 0x22410",
            "cmp r2, 0x58",
            "beq 0x22410",
            "cmp r3, 0x51",
            "beq 0x22410",
            "cmp r3, 0x4e",
            "bne 0x224d0",
            "ldr r3, [sp, 0x81c]",
            "cmp r6, r3",
            "bne 0x224d0",
            "ldr r3, [0x000225a0]",
            "mov r2, 0",
            "str r2, [r3]",
            "b 0x224d0",
            "mov r0, r7",
            "ldr r1, str.yank",
            "mov r2, r6",
            "bl sym.imp.strncasecmp",
            "cmp r0, 0",
            "bne 0x224c8",
            "cmp r8, 0",
            "bge 0x22470",
            "ldr r3, [0x00022510]",
            "ldr r3, [r3]",
            "ldr r5, [r3, 0xc]",
            "mov r0, r5",
            "bl fcn.0001f1d8",
            "mov r4, r0",
            "mov r0, r5",
            "bl fcn.0001f208",
            "mov r5, r0",
            "ldr r3, [0x00022510]",
            "mov r1, r5",
            "mov r0, r4",
            "ldr r6, [r3]",
            "ldr r2, [r6, 0x80]",
            "bl fcn.00020188",
            "mov r1, r5",
            "mov r0, r4",
            "bl fcn.0001f2e8",
            "ldr r3, [r6, 0x80]",
            "mov r5, r0",
            "add r3, r3, 4",
            "ldr r0, [r6, r3, lsl 2]",
            "bl sym.imp.strlen",
            "mov r4, r0",
            "bl fcn.0001f5b8",
            "mov r1, r5",
            "mov r3, r0",
            "mov r2, r4",
            "ldr r0, str.Yank__d_lines___d_chars__into___c_",
            "bl fcn.0001fa90",
            "b 0x224d0",
            "mov r0, r7",
            "bl fcn.0001f96c",
            "ldr r3, [0x00022510]",
            "ldr r4, [r3]",
            "ldr r0, [r4, 0xc]",
            "bl fcn.000213f0",
            "str r0, [r4, 0xc]",
            "b 0x22504",
            "ldr r0, str.:s_expression_missing_delimiters",
            "bl fcn.0001fa90",
            "b 0x22504",
            "cmp r6, 0xa",
            "movne r7, 0",
            "bne 0x21c74",
            "b 0x21c64",
            "add sp, sp, 0x24",
            "add sp, sp, 0x800",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00023e4c": {
        "function_address": "0x00023e4c",
        "instructions": [
            "ldr r3, [0x00024034]",
            "push {r0, r1, r2, r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r5, r0",
            "mov r4, r1",
            "ldr r0, str.cdy__",
            "mov r1, r2",
            "mov r6, r2",
            "ldr r7, [r3]",
            "bl sym.imp.strchr",
            "cmp r0, 0",
            "ldr r8, [r7, 0xc]",
            "beq 0x23eb4",
            "mov r0, r8",
            "mov r7, 1",
            "bl fcn.0001f1d8",
            "ldr sb, [0x0002403c]",
            "mov sl, r0",
            "b 0x23e9c",
            "add r7, r7, 1",
            "bl fcn.0001f274",
            "ldr r3, [sb]",
            "cmp r7, r3",
            "blt 0x23e94",
            "bl fcn.0001f208",
            "mov sb, r0",
            "b 0x2400c",
            "ldr r0, str.__0bBeEft",
            "mov r1, r6",
            "bl sym.imp.strchr",
            "cmp r0, 0",
            "beq 0x23ed4",
            "mov r0, r6",
            "bl fcn.00022624",
            "b 0x23f90",
            "ldr r0, [0x00024044]",
            "mov r1, r6",
            "bl sym.imp.strchr",
            "cmp r0, 0",
            "beq 0x23f9c",
            "mov r0, r6",
            "bl fcn.00022624",
            "ldr sl, [r7, 0xc]",
            "ldr fp, [r7]",
            "cmp sl, fp",
            "bls 0x23f74",
            "sub r3, sl, 1",
            "str r3, [sp, 4]",
            "ldrb sb, [sl, -1]",
            "mov r0, sb",
            "bl sym.imp.isspace",
            "cmp r0, 0",
            "beq 0x23f2c",
            "ldrb r0, [sl]",
            "bl sym.imp.isspace",
            "cmp r0, 0",
            "beq 0x23f6c",
            "mov r0, sb",
            "bl sym.imp.ispunct",
            "cmp r0, 0",
            "beq 0x23f4c",
            "ldrb r0, [sl]",
            "bl sym.imp.ispunct",
            "cmp r0, 0",
            "beq 0x23f6c",
            "mov r0, sb",
            "bl sym.imp.isalnum",
            "cmp r0, 0",
            "beq 0x23f74",
            "ldrb r0, [sl]",
            "bl sym.imp.isalnum",
            "cmp r0, 0",
            "bne 0x23f74",
            "ldr r3, [sp, 4]",
            "str r3, [r7, 0xc]",
            "ldr r3, [r7, 0xc]",
            "cmp r3, fp",
            "bls 0x23f90",
            "ldrb r2, [r3]",
            "cmp r2, 0xa",
            "subeq r3, r3, 1",
            "streq r3, [r7, 0xc]",
            "ldr sb, [r7, 0xc]",
            "mov sl, r8",
            "b 0x2400c",
            "ldr r0, str.H_k",
            "mov r1, r6",
            "bl sym.imp.strchr",
            "cmp r0, 0",
            "beq 0x23fd0",
            "mov r0, r8",
            "bl fcn.0001f208",
            "mov sb, r0",
            "mov r0, r6",
            "bl fcn.00022624",
            "bl fcn.0001f3dc",
            "ldr sl, [r7, 0xc]",
            "b 0x2400c",
            "mov r1, r6",
            "ldr r0, str.Lj_r_n",
            "bl sym.imp.strchr",
            "cmp r0, 0",
            "moveq sb, r8",
            "moveq sl, r8",
            "moveq r6, 0x1b",
            "beq 0x2400c",
            "mov r0, r8",
            "bl fcn.0001f1d8",
            "mov sl, r0",
            "mov r0, r6",
            "bl fcn.00022624",
            "bl fcn.0001f3fc",
            "ldr sb, [r7, 0xc]",
            "ldr r3, [0x00024034]",
            "cmp sb, sl",
            "str sl, [r5]",
            "mov r0, r6",
            "str sb, [r4]",
            "ldr r3, [r3]",
            "strlo sb, [r5]",
            "strlo sl, [r4]",
            "str r8, [r3, 0xc]",
            "pop {r1, r2, r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0001f3fc": {
        "function_address": "0x0001f3fc",
        "instructions": [
            "ldr r3, [0x0001f418]",
            "push {r4, lr}",
            "ldr r4, [r3]",
            "ldr r0, [r4, 0xc]",
            "bl fcn.0001f208",
            "str r0, [r4, 0xc]",
            "pop {r4, pc}"
        ]
    },
    "fcn.00020670": {
        "function_address": "0x00020670",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r0",
            "mov r5, r1",
            "mov r6, r2",
            "mov sl, r3",
            "ldr fp, [0x0002078c]",
            "b 0x206d4",
            "cmp r8, 0xa",
            "bne 0x206a0",
            "sub r5, r5, 1",
            "cmp r5, 0",
            "ble 0x20784",
            "cmp r6, 0",
            "blt 0x206c0",
            "ldr r3, [fp]",
            "ldr r3, [r3, 4]",
            "sub r3, r3, 1",
            "cmp r4, r3",
            "bhs 0x20784",
            "b 0x206d0",
            "ldr r3, [fp]",
            "ldr r3, [r3]",
            "cmp r4, r3",
            "bls 0x20784",
            "mov r4, sb",
            "cmp sl, 1",
            "mov sb, r4",
            "ldrb r8, [sb], r6",
            "ldrb r7, [r4, r6]",
            "bne 0x20704",
            "mov r0, r7",
            "bl sym.imp.isspace",
            "cmp r7, 0xa",
            "cmpne r0, 0",
            "movne r0, 0",
            "moveq r0, 1",
            "b 0x20778",
            "cmp sl, 2",
            "bne 0x20728",
            "mov r0, r8",
            "bl sym.imp.isspace",
            "cmp r8, 0xa",
            "cmpne r0, 0",
            "movne r0, 0",
            "moveq r0, 1",
            "b 0x2077c",
            "cmp sl, 3",
            "bne 0x2073c",
            "mov r0, r8",
            "bl sym.imp.isspace",
            "b 0x2077c",
            "cmp sl, 4",
            "bne 0x20750",
            "mov r0, r7",
            "bl sym.imp.ispunct",
            "b 0x20778",
            "cmp sl, 5",
            "bne 0x20784",
            "mov r0, r7",
            "bl sym.imp.isalnum",
            "cmp r7, 0x5f",
            "movne r3, 0",
            "moveq r3, 1",
            "cmp r0, 0",
            "moveq r0, r3",
            "orrne r0, r3, 1",
            "mov r8, r7",
            "cmp r0, 0",
            "bne 0x2068c",
            "mov r0, r4",
            "pop {r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.imp.ispunct": {
        "function_address": "0x0000bbdc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x8e4]!"
        ]
    },
    "sym.imp.isupper": {
        "function_address": "0x0000bb94",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x914]!"
        ]
    },
    "fcn.0001f618": {
        "function_address": "0x0001f618",
        "instructions": [
            "ldr r0, [pc]",
            "b sym.imp.puts"
        ]
    },
    "fcn.0001fcd0": {
        "function_address": "0x0001fcd0",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r0",
            "ldr r1, fcn.0001fcd0",
            "mov r0, 2",
            "bl sym.imp.signal",
            "cmp r4, 0",
            "popeq {r4, pc}",
            "ldr r3, [0x0001fd04]",
            "mov r1, r4",
            "ldr r0, [r3]",
            "add r0, r0, 0x100",
            "bl sym.imp.longjmp",
            "invalid"
        ]
    },
    "fcn.00024050": {
        "function_address": "0x00024050",
        "instructions": [
            "ldr r3, [0x0002434c]",
            "push {r0, r1, r2, r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r2, 1",
            "ldr r5, [0x00024350]",
            "mov r6, r0",
            "ldr r4, [0x00024354]",
            "str r2, [r3]",
            "bl fcn.0001f69c",
            "mov r3, 0x18",
            "mov r2, r5",
            "str r3, [r5]",
            "add r3, r3, 0x38",
            "str r3, [r4]",
            "mov r1, r4",
            "mov r0, 0",
            "bl fcn.0002a474",
            "ldr r1, [r4]",
            "ldr r0, [r5]",
            "bl fcn.0001f624",
            "mov r0, r6",
            "bl fcn.00021634",
            "ldr r3, [0x00024358]",
            "mov r0, 0",
            "ldr r3, [r3]",
            "str r3, [sp, 4]",
            "mov r3, 0x1a",
            "ldr r1, [sp, 4]",
            "str r3, [r1, 0x80]",
            "add r3, r3, 1",
            "str r3, [r1, 0x84]",
            "ldr r3, [r1]",
            "str r3, [r1, 0xf4]",
            "str r3, [r1, 0xf0]",
            "ldr r3, [0x0002435c]",
            "strb r0, [r3]",
            "ldr r3, [0x00024360]",
            "strb r0, [r3]",
            "ldr r3, [0x00024364]",
            "str r0, [r3]",
            "ldr r3, [0x00024368]",
            "str r0, [r3]",
            "bl fcn.0001fcd0",
            "ldr r1, aav.0x00021304",
            "mov r0, 0x1c",
            "bl sym.imp.signal",
            "ldr r1, fcn.000208d4",
            "mov r0, 0x14",
            "bl sym.imp.signal",
            "ldr r2, [sp, 4]",
            "add r0, r2, 0x100",
            "bl sym.imp._setjmp",
            "cmp r0, 0",
            "mov r6, 0",
            "ldrne r1, [sp, 4]",
            "mov r7, 0xa",
            "ldrne r2, [0x00024374]",
            "ldr r5, [0x00024378]",
            "ldrne r3, [r1]",
            "ldr r4, [0x0002437c]",
            "ldr r0, [r5]",
            "strne r3, [r2]",
            "mov r2, 8",
            "strne r3, [r1, 0xc]",
            "ldr r3, [0x00024380]",
            "str r6, [r3]",
            "ldr r3, [0x00024384]",
            "str r6, [r3]",
            "ldr r3, [0x00024388]",
            "str r2, [r3]",
            "ldr r3, [0x0002438c]",
            "str r6, [r3]",
            "bl sym.imp.free",
            "ldr r0, [r4]",
            "bl sym.imp.free",
            "ldr r3, [0x00024390]",
            "mov r0, r6",
            "str r6, [r5]",
            "str r6, [r4]",
            "str r6, [r3]",
            "ldr r3, [0x00024394]",
            "str r6, [r3]",
            "bl fcn.00020ff8",
            "ldr r2, [sp, 4]",
            "add r5, r2, 0x288",
            "b 0x24200",
            "mov r4, r8",
            "mov r0, r4",
            "mov r1, r7",
            "bl sym.imp.strchr",
            "subs r8, r0, 0",
            "movne r3, r8",
            "bne 0x241c8",
            "b 0x241d8",
            "strb r6, [r3, -1]",
            "mov r8, r3",
            "ldrb r2, [r3], 1",
            "cmp r2, 0xa",
            "beq 0x241c4",
            "ldrb r3, [r4]",
            "cmp r3, 0",
            "beq 0x241ec",
            "mov r0, r4",
            "bl fcn.00021714",
            "cmp r8, 0",
            "bne 0x241a4",
            "ldr r0, [r5, -4]",
            "bl sym.imp.free",
            "str r8, [r5, -4]",
            "ldr r4, [r5], 4",
            "cmp r4, 0",
            "bne 0x241a8",
            "b 0x24308",
            "bl fcn.00020538",
            "ldr r3, [0x00024358]",
            "mov r4, r0",
            "strb r0, [sb]",
            "ldr fp, [r3]",
            "ldr r3, [fp, 0xc]",
            "mov r0, r3",
            "str r3, [sp]",
            "bl fcn.0001f1d8",
            "ldr r2, [r6]",
            "ldr r3, [sp]",
            "cmp r0, r2",
            "beq 0x24278",
            "str r0, [r6]",
            "mov r0, r3",
            "bl fcn.0001f1d8",
            "ldr r3, [sp]",
            "mov r2, r0",
            "str r2, [sp]",
            "mov r0, r3",
            "bl fcn.0001f208",
            "ldr r2, [sp]",
            "mov r1, r0",
            "mov r0, r2",
            "ldr r2, [fp, 0x84]",
            "bl fcn.00020188",
            "ldr r3, [r5]",
            "cmp r3, 0",
            "bne 0x242e4",
            "ldr r3, [r8]",
            "cmp r3, 0",
            "bne 0x242e4",
            "ldr r1, [0x00024398]",
            "ldr r0, [r1]",
            "mov r1, r4",
            "bl sym.imp.strchr",
            "cmp r0, 0",
            "beq 0x242e4",
            "ldr r0, [sl]",
            "bl sym.imp.free",
            "mov r0, 0x400",
            "bl fcn.00029eb4",
            "ldr r1, [0x00024384]",
            "str r0, [sl]",
            "ldr r2, [r1]",
            "cmp r2, 0",
            "strble r4, [r0]",
            "ble 0x242dc",
            "ldr r1, str._d_c",
            "mov r3, r4",
            "bl sym.imp.sprintf",
            "mov r3, 1",
            "str r3, [r5]",
            "mov r0, r4",
            "bl fcn.00022624",
            "mov r0, 0",
            "bl fcn.000205f8",
            "cmp r0, 0",
            "bne 0x24320",
            "bl fcn.00020930",
            "bl fcn.00021070",
            "b 0x24320",
            "ldr r7, [0x0002434c]",
            "ldr sb, [0x0002435c]",
            "ldr r6, [0x000243a0]",
            "ldr r5, [0x00024394]",
            "ldr r8, [0x0002437c]",
            "ldr sl, [0x00024378]",
            "ldr r3, [r7]",
            "cmp r3, 0",
            "bgt 0x24210",
            "ldr r3, [0x00024350]",
            "mov r1, 0",
            "mov r2, r1",
            "ldr r0, [r3]",
            "bl fcn.00020790",
            "bl fcn.0001fb04",
            "bl fcn.00020300",
            "pop {r1, r2, r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00024768": {
        "function_address": "0x00024768",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r4, r1",
            "ldr r1, [ip]",
            "mov r6, ip",
            "mov r5, r0",
            "ldmib ip, {r7, r8}",
            "add r1, r1, 2",
            "lsl r1, r1, 2",
            "ldr r0, [r7, r8, lsl 2]",
            "bl fcn.00029e84"
        ]
    },
    "fcn.000247dc": {
        "function_address": "0x000247dc",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r3, 0",
            "sub sp, sp, 0x84",
            "mov r6, r0",
            "mov r0, 8",
            "add r5, sp, 0x70",
            "str r3, [sp, 0x78]",
            "str r3, [sp, 0x70]",
            "strb r3, [sp, 0x7c]",
            "ldr r8, [0x00024e00]",
            "bl fcn.00029eb4",
            "ldr r7, [0x00024e04]",
            "str r0, [sp, 0x74]",
            "b 0x24de8",
            "ldr r0, [0x00024e08]",
            "mov r1, sl",
            "bl fcn.000267ac",
            "cmp r0, 9",
            "add r3, r6, 4",
            "ldr r4, [r6, 4]",
            "ble 0x2483c",
            "cmp r4, 0",
            "bne 0x24884",
            "b 0x249dc",
            "cmp r0, 0",
            "beq 0x24de4",
            "cmp r0, 1",
            "bne 0x24888",
            "ldr r1, [sp, 0x78]",
            "ldr r0, [sp, 0x74]",
            "add r3, r1, 1",
            "add r1, r1, 3",
            "lsl r1, r1, 2",
            "str r3, [sp, 0x78]",
            "bl fcn.00029e84",
            "mov r6, r3",
            "cmp r0, 2",
            "bne 0x248a4",
            "ldrb r3, [sp, 0x7c]",
            "subs r3, r3, 1",
            "movne r3, 1",
            "strb r3, [sp, 0x7c]",
            "b 0x24de4",
            "cmp r0, 3",
            "bne 0x248cc",
            "ldr r2, [0x00024e0c]",
            "mov r3, 0",
            "strb r3, [sp, 0x7c]",
            "mov ip, r5",
            "add r0, r0, 5",
            "ldr r1, aav.0x00025220",
            "strb r3, [r2]",
            "b 0x24954",
            "cmp r0, 4",
            "bne 0x248f4",
            "ldr r2, [0x00024e0c]",
            "mov r3, 0",
            "strb r3, [sp, 0x7c]",
            "mov ip, r5",
            "add r0, r0, 4",
            "ldr r1, aav.0x00025200",
            "strb r3, [r2]",
            "b 0x24954",
            "cmp r0, 5",
            "ldreq r3, [r7]",
            "orreq r3, r3, 8",
            "streq r3, [r7]",
            "beq 0x24de4",
            "cmp r0, 6",
            "bne 0x24928",
            "mov r3, 0",
            "mov ip, r5",
            "strb r3, [sp, 0x7c]",
            "add r0, r0, 2",
            "ldr r1, aav.0x0002474c",
            "b 0x24954",
            "cmp r0, 7",
            "bne 0x2495c",
            "ldr r2, [0x00024e0c]",
            "mov r3, 0",
            "ldr r1, aav.0x000251bc",
            "mov ip, r5",
            "add r0, r0, 1",
            "strb r3, [r2]",
            "ldr r3, [r7]",
            "orr r3, r3, 8",
            "str r3, [r7]",
            "bl fcn.00024768",
            "b 0x24de4",
            "cmp r0, 8",
            "bne 0x24a58",
            "ldr r3, [0x00024e0c]",
            "mov r4, 0",
            "mov ip, r5",
            "add r0, r0, 0xc",
            "ldr r1, aav.0x00025078",
            "strb r4, [r3]",
            "strb r4, [sp, 0x7c]",
            "bl fcn.00024768",
            "mov sb, r0",
            "add r3, r6, 4",
            "str r3, [r0, 8]",
            "str r4, [r0, 0x10]",
            "mov r6, r3",
            "ldr r2, [r3], 4",
            "cmp r2, 0",
            "ldreq r0, str._exec_CMD_must_end_by__",
            "beq 0x24a80",
            "ldrb r1, [r2]",
            "cmp r1, 0x3b",
            "bne 0x249c0",
            "ldrb r2, [r2, 1]",
            "cmp r2, 0",
            "beq 0x249d0",
            "ldr r2, [sb, 0x10]",
            "add r2, r2, 1",
            "str r2, [sb, 0x10]",
            "b 0x24994",
            "ldr r0, [sb, 0x10]",
            "cmp r0, 0",
            "bne 0x249e8",
            "ldr r0, str._s_requires_an_argument",
            "mov r1, sl",
            "b 0x24c48",
            "lsl r0, r0, 2",
            "bl fcn.00029e54",
            "cmp r0, 9",
            "bne 0x24aec",
            "add r4, r6, 4",
            "mov r3, 1",
            "mov r1, r4",
            "mov r6, r1",
            "ldr r2, [r1], 4",
            "cmp r2, 0",
            "bne 0x24a84",
            "ldr r0, str.unpaired__",
            "bl fcn.000271d8",
            "ldrb r0, [r2]",
            "cmp r0, 0x28",
            "bne 0x24aa0",
            "ldrb r2, [r2, 1]",
            "cmp r2, 0",
            "addeq r3, r3, 1",
            "b 0x24a6c",
            "cmp r0, 0x29",
            "bne 0x24a6c",
            "ldrb r2, [r2, 1]",
            "cmp r2, 0",
            "bne 0x24a6c",
            "subs r3, r3, 1",
            "bne 0x24a6c",
            "str r3, [r6]",
            "mov ip, r5",
            "ldr r1, aav.0x000246a4",
            "mov r0, 0xc",
            "bl fcn.00024768",
            "mov sl, r0",
            "mov r0, r4",
            "bl fcn.000247dc",
            "ldr r2, [0x00024e38]",
            "str r0, [sl, 8]",
            "str r2, [r6]",
            "b 0x24de4",
            "cmp r0, 0xa",
            "moveq ip, r5",
            "addeq r0, r0, 2",
            "ldreq r1, aav.0x00025014",
            "beq 0x24b14",
            "cmp r0, 0xb",
            "bne 0x24b20",
            "ldr r1, aav.0x00024ff4",
            "mov ip, r5",
            "add r0, r0, 1",
            "bl fcn.00024768",
            "str r4, [r0, 8]",
            "b 0x24de4",
            "cmp r0, 0xc",
            "bne 0x24b4c",
            "mov ip, r5",
            "ldr r1, aav.0x00024f98",
            "add r0, r0, 0x1c",
            "bl fcn.00024768",
            "mov r1, r4",
            "add r0, r0, 8",
            "mov r2, 0",
            "bl fcn.0002a754",
            "cmp r0, 0xd",
            "bne 0x24bf8",
            "mov ip, r5",
            "mov r0, 0xc",
            "ldr r1, aav.0x000245c4",
            "bl fcn.00024768",
            "ldrb r3, [r4]",
            "cmp r3, 0x62",
            "beq 0x24ba8",
            "cmp r3, 0x63",
            "beq 0x24bb0",
            "cmp r3, 0x64",
            "beq 0x24bb8",
            "cmp r3, 0x70",
            "beq 0x24bc0",
            "cmp r3, 0x66",
            "beq 0x24bc8",
            "cmp r3, 0x6c",
            "beq 0x24bd0",
            "cmp r3, 0x73",
            "bne 0x24be0",
            "mov r3, 0xc000",
            "b 0x24bd4",
            "mov r3, 0x6000",
            "b 0x24bd4",
            "mov r3, 0x2000",
            "b 0x24bd4",
            "mov r3, 0x4000",
            "b 0x24bd4",
            "mov r3, 0x1000",
            "b 0x24bd4",
            "mov r3, 0x8000",
            "b 0x24bd4",
            "mov r3, 0xa000",
            "ldrb r2, [r4, 1]",
            "cmp r2, 0",
            "beq 0x24bf0",
            "ldr r0, str.invalid_argument__s_to__s",
            "mov r1, r4",
            "ldr r2, str._type",
            "bl fcn.000271d8",
            "str r3, [r0, 8]",
            "b 0x24de4",
            "cmp r0, 0xe",
            "bne 0x24c4c",
            "mov ip, r5",
            "ldr r1, aav.0x000245e0",
            "add r0, r0, 2",
            "bl fcn.00024768",
            "ldrb r3, [r4]",
            "mov sl, r0",
            "strb r3, [r0, 8]",
            "mov r0, r4",
            "bl fcn.00024754",
            "mov r1, sl",
            "mov r3, 0",
            "str r3, [r1, 0xc]!",
            "mov r4, r0",
            "bl fcn.00028664",
            "cmp r0, 0",
            "bne 0x24de4",
            "ldr r0, str.invalid_mode:__s",
            "mov r1, r4",
            "bl fcn.000271d8",
            "cmp r0, 0xf",
            "moveq ip, r5",
            "addeq r0, r0, 1",
            "ldreq r1, aav.0x00024f04",
            "beq 0x24c70",
            "cmp r0, 0x10",
            "bne 0x24c94",
            "ldr r1, aav.0x00024e80",
            "mov ip, r5",
            "bl fcn.00024768",
            "ldrb r3, [r4]",
            "mov sl, r0",
            "strb r3, [r0, 8]",
            "mov r0, r4",
            "bl fcn.00024754",
            "bl fcn.00029d44",
            "str r0, [sl, 0xc]",
            "b 0x24de4",
            "cmp r0, 0x11",
            "bne 0x24cc8",
            "mov ip, r5",
            "ldr r1, aav.0x0002463c",
            "mov r0, 0xc",
            "bl fcn.00024768",
            "add r1, sp, 8",
            "mov sl, r0",
            "mov r0, r4",
            "bl fcn.0002a450",
            "cmp r0, 0x12",
            "bne 0x24cfc",
            "mov ip, r5",
            "ldr r1, aav.0x00024654",
            "mov r0, 0x10",
            "bl fcn.00024768",
            "mov sl, r0",
            "mov r0, r4",
            "bl fcn.00029d44",
            "mov r3, 0",
            "str r0, [sl, 8]",
            "str r3, [sl, 0xc]",
            "b 0x24de4",
            "cmp r0, 0x13",
            "bne 0x24d48",
            "mov ip, r5",
            "ldr r1, aav.0x00024674",
            "mov r0, 0xc",
            "bl fcn.00024768",
            "mov r1, 0",
            "mov sl, r0",
            "mov r2, 0xa",
            "mov r0, r4",
            "bl fcn.000266e4",
            "ldr r3, [r8]",
            "str r0, [sl, 8]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x24de4",
            "mov r0, r4",
            "bl fcn.000265d0",
            "b 0x24d90",
            "cmp r0, 0x14",
            "bne 0x24d98",
            "mov ip, r5",
            "ldr r1, aav.0x0002468c",
            "mov r0, 0xc",
            "bl fcn.00024768",
            "mov r1, 0",
            "mov sl, r0",
            "mov r2, 0xa",
            "mov r0, r4",
            "bl fcn.000266e4",
            "ldr r3, [r8]",
            "str r0, [sl, 8]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x24de4",
            "mov r0, r4",
            "bl fcn.000265a4",
            "str r0, [sl, 8]",
            "b 0x24de4",
            "cmp r0, 0x15",
            "bne 0x24dd4",
            "mov ip, r5",
            "ldr r1, aav.0x000246bc",
            "add r0, r0, 3",
            "bl fcn.00024768",
            "ldrb r3, [r4]",
            "mov sl, r0",
            "strb r3, [r0, 8]",
            "mov r0, r4",
            "bl fcn.00024754",
            "ldr r1, aav.0x0005b72c",
            "bl fcn.00029b70",
            "strd r0, r1, [sl, 0x10]",
            "b 0x24de4",
            "ldr r0, str.unrecognized:__s",
            "mov r1, sl",
            "bl fcn.00027184",
            "bl fcn.0000c5e0",
            "add r6, r6, 4",
            "ldr sl, [r6]",
            "cmp sl, 0",
            "bne 0x24814",
            "ldr r0, [sp, 0x74]",
            "add sp, sp, 0x84",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00024754": {
        "function_address": "0x00024754",
        "instructions": [
            "ldrb r3, [r0]",
            "cmp r3, 0x2d",
            "cmpne r3, 0x2b",
            "addeq r0, r0, 1",
            "bx lr"
        ]
    },
    "fcn.00029d44": {
        "function_address": "0x00029d44",
        "instructions": [
            "mov r1, 0",
            "b fcn.00029d28"
        ]
    },
    "fcn.000265a4": {
        "function_address": "0x000265a4",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r0",
            "bl sym.imp.getgrnam",
            "cmp r0, 0",
            "bne 0x265c4",
            "ldr r0, str.unknown_group_name:__s",
            "mov r1, r4",
            "bl fcn.000271d8",
            "ldr r0, [r0, 8]",
            "pop {r4, pc}"
        ]
    },
    "fcn.00029b70": {
        "function_address": "0x00029b70",
        "instructions": [
            "push {r0, r1, r2, r3, r4, lr}",
            "mvn r2, 0",
            "mvn r3, 0",
            "str r1, [sp, 8]",
            "mov r1, 0xa",
            "strd r2, r3, [sp]",
            "mov r2, 0",
            "mov r3, 0",
            "bl fcn.000299e8",
            "add sp, sp, 0x14",
            "ldm sp!, {pc}"
        ]
    },
    "sym.imp.getgrnam": {
        "function_address": "0x0000c380",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x3cc]!"
        ]
    },
    "fcn.000299e8": {
        "function_address": "0x000299e8",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x24",
            "mov r6, r0",
            "str r2, [sp, 0x10]",
            "mov r4, r1",
            "str r3, [sp, 0x14]",
            "ldrb r0, [r0]",
            "ldr r8, [sp, 0x48]",
            "ldr fp, [sp, 0x4c]",
            "cmp r0, 0x2d",
            "cmpne r0, 0x2b",
            "ldr sl, [sp, 0x50]",
            "beq 0x29b58",
            "bl sym.imp.isspace",
            "cmp r0, 0",
            "bne 0x29b58",
            "ldr r3, [0x00029b64]",
            "mov r2, r4",
            "add r1, sp, 0x1c",
            "ldr r7, [r3]",
            "ldr r3, [r7]",
            "str r0, [r7]",
            "mov r0, r6",
            "str r3, [sp, 0xc]",
            "bl sym.imp.strtoull",
            "ldr r2, [r7]",
            "mov r4, r0",
            "mov r5, r1",
            "ldr r3, [sp, 0xc]",
            "cmp r2, 0",
            "bne 0x29b58",
            "ldr sb, [sp, 0x1c]",
            "cmp r6, sb",
            "beq 0x29b58",
            "cmp sl, 0",
            "str r3, [r7]",
            "beq 0x29ad8",
            "b 0x29acc",
            "mov r0, sl",
            "mov r1, sb",
            "bl sym.imp.strcmp",
            "subs r3, r0, 0",
            "bne 0x29ac8",
            "mvn r0, 0",
            "mvn r1, 0",
            "mov r2, r7",
            "bl fcn.00055c28",
            "cmp r5, r1",
            "bhi 0x29b40",
            "bne 0x29ab8",
            "cmp r4, r0",
            "bhi 0x29b40",
            "mul r3, r7, r5",
            "umull r4, r5, r4, r7",
            "add r5, r3, r5",
            "b 0x29ae4",
            "add sl, sl, 8",
            "ldr r7, [sl, 4]",
            "cmp r7, 0",
            "bne 0x29a80",
            "ldrb r3, [sb]",
            "cmp r3, 0",
            "bne 0x29b58",
            "cmp r5, fp",
            "mov r2, 1",
            "bhi 0x29afc",
            "bne 0x29b00",
            "cmp r4, r8",
            "bls 0x29b00",
            "mov r2, 0",
            "ldr r1, [sp, 0x14]",
            "mov r3, 1",
            "cmp r1, r5",
            "bhi 0x29b20",
            "bne 0x29b24",
            "ldr r1, [sp, 0x10]",
            "cmp r1, r4",
            "bls 0x29b24",
            "mov r3, 0",
            "and r3, r2, r3",
            "tst r3, 0xff",
            "beq 0x29b40",
            "mov r0, r4",
            "mov r1, r5",
            "add sp, sp, 0x24",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r0, str.number__s_is_not_in__llu.._llu_range",
            "mov r1, r6",
            "ldr r2, [sp, 0x10]",
            "ldr r3, [sp, 0x14]",
            "stm sp, {r8, fp}",
            "bl fcn.000271d8",
            "ldr r0, str.invalid_number__s",
            "mov r1, r6",
            "bl fcn.000271d8"
        ]
    },
    "fcn.00029860": {
        "function_address": "0x00029860",
        "instructions": [
            "cmp r0, 0",
            "push {r0, r1, r2, lr}",
            "mvnle r0, 0",
            "ble 0x2985c",
            "add r1, sp, 4",
            "mov r2, 0",
            "bl sym.imp.waitpid",
            "cmn r0, 1",
            "beq 0x2985c",
            "ldr r3, [sp, 4]",
            "ands r0, r3, 0x7f",
            "ubfxeq r0, r3, 8, 8",
            "beq 0x2985c",
            "add r3, r0, 1",
            "sbfx r3, r3, 1, 7",
            "cmp r3, 0",
            "addgt r0, r0, 0x3e8",
            "movle r0, 0",
            "pop {r1, r2, r3, pc}",
            "push {r4, lr}",
            "bl fcn.000297a4",
            "pop {r4, lr}",
            "b 0x29814"
        ]
    },
    "sym.imp.waitpid": {
        "function_address": "0x0000c254",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x494]!"
        ]
    },
    "fcn.000297a4": {
        "function_address": "0x000297a4",
        "instructions": [
            "push {r0, r1, r2, r3, r4, lr}",
            "mov r3, 0",
            "str r0, [sp, 4]",
            "str r3, [sp, 0xc]",
            "bl sym.imp.vfork",
            "cmp r0, 0",
            "blt 0x29808",
            "bne 0x297ec",
            "ldr r3, [sp, 4]",
            "ldr r0, [r3]",
            "mov r1, r3",
            "bl sym.imp.execvp",
            "ldr r3, [0x00029810]",
            "mov r0, 0x6f",
            "ldr r3, [r3]",
            "ldr r3, [r3]",
            "str r3, [sp, 0xc]",
            "bl sym.imp._exit",
            "ldr r3, [sp, 0xc]",
            "cmp r3, 0",
            "ldrne r3, [0x00029810]",
            "mvnne r0, 0",
            "ldrne r2, [sp, 0xc]",
            "ldrne r3, [r3]",
            "strne r2, [r3]",
            "add sp, sp, 0x14",
            "ldm sp!, {pc}"
        ]
    },
    "sym.imp.execvp": {
        "function_address": "0x0000c3f8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x37c]!"
        ]
    },
    "sym.imp._exit": {
        "function_address": "0x0000bb70",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x92c]!"
        ]
    },
    "fcn.00025524": {
        "function_address": "0x00025524",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "subs r4, r1, 0",
            "mov r6, r0",
            "mov r5, r2",
            "pople {r4, r5, r6, pc}",
            "ldr r3, [0x00025604]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "bne 0x25558",
            "ldr r3, [0x00025608]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x25584",
            "ldr r3, [0x0002560c]",
            "ldrb r3, [r3]",
            "cmp r3, 0",
            "beq 0x25584",
            "ldr r2, [0x00025610]",
            "sub r3, r4, 1",
            "ldr r2, [r2]",
            "cmp r2, r3",
            "beq 0x25584",
            "ldr r0, [0x00025614]",
            "bl sym.imp.puts",
            "ldr r3, [0x0002560c]",
            "mov r2, 1",
            "strb r2, [r3]",
            "ldr r3, [0x00025610]",
            "str r4, [r3]",
            "ldr r3, [0x00025618]",
            "ldrb r3, [r3]",
            "cmp r3, 0",
            "beq 0x255bc",
            "ldr r3, [0x0002561c]",
            "mov r2, r5",
            "ldr r0, [0x00025620]",
            "ldr r1, [r3]",
            "bl sym.imp.printf",
            "ldr r3, [0x00025624]",
            "ldr r3, [r3]",
            "tst r3, 2",
            "beq 0x255dc",
            "ldr r0, str._i_c",
            "mov r1, r4",
            "mov r2, r5",
            "bl sym.imp.printf",
            "ldr r3, [0x00025624]",
            "ldr r2, [r3]",
            "movw r3, 0x2008",
            "and r3, r2, r3",
            "movw r2, 0x2008",
            "cmp r3, r2",
            "popeq {r4, r5, r6, pc}",
            "mov r0, r6",
            "pop {r4, r5, r6, lr}",
            "b sym.imp.puts"
        ]
    },
    "fcn.0002562c": {
        "function_address": "0x0002562c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r5, 0",
            "sub sp, sp, 0x24",
            "mov r7, r5",
            "mov r6, r5",
            "mov sb, r5",
            "str r0, [sp, 0x14]",
            "ldr r8, [0x000259ac]",
            "b 0x25930",
            "ldr r1, [0x000259b0]",
            "add sb, sb, 1",
            "mov fp, 0",
            "mov sl, r6",
            "ldr r1, [r1]",
            "str r1, [sp, 0x10]",
            "b 0x256f8",
            "ldr r3, [r8]",
            "ldr r2, [sp, 0x10]",
            "tst r3, 0x40",
            "ldr r6, [r2]",
            "beq 0x25698",
            "mov r0, r4",
            "ldr r1, [r6]",
            "bl sym.imp.strstr",
            "subs fp, r0, 0",
            "movne fp, 1",
            "b 0x256ec",
            "ldr r3, [r6, 0x24]",
            "tst r3, 2",
            "bne 0x256c0",
            "orr r3, r3, 2",
            "add r0, r6, 4",
            "str r3, [r6, 0x24]",
            "ldr r3, [0x000259b4]",
            "ldr r1, [r6]",
            "ldr r2, [r3]",
            "bl fcn.0002a754",
            "mov r1, 0",
            "add r0, r6, 4",
            "str r1, [sp, 0x18]",
            "mov r2, 1",
            "str r1, [sp, 0x1c]",
            "add r3, sp, 0x18",
            "str r1, [sp]",
            "mov r1, r4",
            "bl sym.imp.regexec",
            "cmp r0, 0",
            "moveq fp, 1",
            "ldr r2, [sp, 0x10]",
            "ldr r2, [r2, 4]",
            "str r2, [sp, 0x10]",
            "ldr r3, [sp, 0x10]",
            "cmp r3, 0",
            "bne 0x2566c",
            "ldr r3, [0x000259b8]",
            "mov r6, sl",
            "ldrb r3, [r3]",
            "cmp r3, fp",
            "beq 0x258a0",
            "ldr r3, [r8]",
            "movw r2, 0x1005",
            "and r2, r3, r2",
            "cmp r2, 0",
            "beq 0x25764",
            "mov r0, r4",
            "bl sym.imp.free",
            "ldr r3, [0x000259ac]",
            "ldr r3, [r3]",
            "tst r3, 4",
            "beq 0x2574c",
            "ldr r0, [sp, 0x10]",
            "bl sym.imp.exit",
            "tst r3, 1",
            "beq 0x2599c",
            "ldr r3, [0x000259bc]",
            "ldr r0, [r3]",
            "bl sym.imp.puts",
            "b 0x2599c",
            "tst r3, 0x8000",
            "add r6, sl, 1",
            "beq 0x25780",
            "ldr r2, [0x000259c0]",
            "ldr r2, [r2]",
            "cmp r6, r2",
            "bgt 0x25940",
            "tst r3, 0x20",
            "bne 0x258f8",
            "cmp r5, 0",
            "ldreq r3, [0x000259c4]",
            "subne r2, r5, 1",
            "ldreq r2, [r3]",
            "ldr r3, [0x000259c4]",
            "subeq r2, r2, 1",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x25860",
            "ldr r1, [0x000259c8]",
            "ldr fp, [r1]",
            "ldr r2, [fp, r2, lsl 2]",
            "cmp r2, 0",
            "beq 0x25860",
            "mov r7, r5",
            "mov r1, r5",
            "rsb sl, r3, sb",
            "mov r5, r4",
            "mov r4, r3",
            "b 0x257e8",
            "add sl, sl, 1",
            "add r0, r1, 1",
            "mov r1, r4",
            "bl fcn.000551a4",
            "ldr r3, [fp, r1, lsl 2]",
            "cmp r3, 0",
            "beq 0x257d8",
            "b 0x2583c",
            "mov r1, sl",
            "mov r2, 0x2d",
            "bl fcn.00025524",
            "ldr r2, [0x000259c8]",
            "add sl, sl, 1",
            "ldr r3, [r2]",
            "ldr r0, [r3, r7, lsl 2]",
            "str r3, [sp, 0xc]",
            "bl sym.imp.free",
            "ldr r3, [sp, 0xc]",
            "add r0, r7, 1",
            "str fp, [r3, r7, lsl 2]",
            "ldr r3, [0x000259c4]",
            "ldr r1, [r3]",
            "bl fcn.000551a4",
            "mov r7, r1",
            "b 0x2584c",
            "mov r4, r5",
            "mov fp, 0",
            "mov r5, r7",
            "mov r7, r1",
            "ldr r1, [0x000259c8]",
            "ldr r3, [r1]",
            "ldr r0, [r3, r7, lsl 2]",
            "cmp r0, 0",
            "bne 0x257f8",
            "ldr r3, [0x000259cc]",
            "ldr r7, [r3]",
            "ldr r3, [r8]",
            "tst r3, 0x2000",
            "ldrne r3, [sp, 0x1c]",
            "movne r2, 0",
            "movne r1, sb",
            "moveq r0, r4",
            "moveq r1, sb",
            "moveq r2, 0x3a",
            "strbne r2, [r4, r3]",
            "addne r2, r2, 0x3a",
            "ldrne r0, [sp, 0x18]",
            "addne r0, r4, r0",
            "bl fcn.00025524",
            "b 0x258f8",
            "cmp r7, 0",
            "beq 0x258c0",
            "mov r0, r4",
            "mov r1, sb",
            "mov r2, 0x2d",
            "sub r7, r7, 1",
            "bl fcn.00025524",
            "b 0x258f8",
            "ldr r3, [0x000259c4]",
            "ldr sl, [r3]",
            "cmp sl, 0",
            "beq 0x258f8",
            "ldr r2, [0x000259c8]",
            "ldr fp, [r2]",
            "ldr r0, [fp, r5, lsl 2]",
            "bl sym.imp.free",
            "str r4, [fp, r5, lsl 2]",
            "add r0, r5, 1",
            "mov r1, sl",
            "mov r4, r7",
            "bl fcn.000551a4",
            "mov r5, r1",
            "mov r0, r4",
            "bl sym.imp.free",
            "ldr r3, [r8]",
            "ubfx r3, r3, 0xf, 1",
            "cmp r7, 0",
            "movne r3, 0",
            "andeq r3, r3, 1",
            "cmp r3, 0",
            "beq 0x25930",
            "ldr r3, [0x000259c0]",
            "ldr r3, [r3]",
            "cmp r6, r3",
            "beq 0x25940",
            "mov r7, 0",
            "ldr r0, [sp, 0x14]",
            "bl fcn.00027640",
            "subs r4, r0, 0",
            "bne 0x25650",
            "ldr r3, [0x000259ac]",
            "ldr r3, [r3]",
            "tst r3, 0x20",
            "beq 0x2597c",
            "ldr r3, [0x000259d0]",
            "ldrb r3, [r3]",
            "cmp r3, 0",
            "beq 0x25970",
            "ldr r3, [0x000259bc]",
            "ldr r0, [0x000259d4]",
            "ldr r1, [r3]",
            "bl sym.imp.printf",
            "ldr r0, aav.0x0005cf54",
            "mov r1, r6",
            "bl sym.imp.printf",
            "ldr r3, [0x000259ac]",
            "ldr r3, [r3]",
            "tst r3, 0x1000",
            "beq 0x259a0",
            "ldr r3, [0x000259bc]",
            "ldr r0, [r3]",
            "bl sym.imp.puts",
            "b 0x259a0",
            "mov r6, 1",
            "mov r0, r6",
            "add sp, sp, 0x24",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00025504": {
        "function_address": "0x00025504",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r0",
            "mov r0, 0x28",
            "bl fcn.00029e54"
        ]
    },
    "fcn.00028a88": {
        "function_address": "0x00028a88",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r0",
            "ldr r0, [r0]",
            "bl sym.imp.free",
            "mov r3, 0",
            "str r3, [r4]",
            "str r3, [r4, 4]",
            "pop {r4, pc}"
        ]
    },
    "fcn.0002a3a8": {
        "function_address": "0x0002a3a8",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r0",
            "bl sym.imp.opendir",
            "cmp r0, 0",
            "popne {r4, pc}",
            "ldr r0, aav.0x0005beb4",
            "mov r1, r4",
            "bl fcn.00028900"
        ]
    },
    "fcn.00028bc8": {
        "function_address": "0x00028bc8",
        "instructions": [
            "push {r4, lr}",
            "mov r0, 0x4c",
            "bl fcn.00029eb4",
            "mov r4, r0",
            "ldr r0, [0x00028bec]",
            "bl fcn.0002a3a8"
        ]
    },
    "fcn.00028bf0": {
        "function_address": "0x00028bf0",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r0",
            "ldr r0, [r0]",
            "bl sym.imp.closedir",
            "ldr r0, [r4, 4]",
            "bl sym.imp.free",
            "mov r0, r4",
            "pop {r4, lr}",
            "b sym.imp.free"
        ]
    },
    "fcn.00028aa8": {
        "function_address": "0x00028aa8",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r4, r1",
            "mov r1, 0",
            "bl sym.imp.open64",
            "subs r5, r0, 0",
            "mvnlt r6, 0",
            "blt 0x28adc",
            "mov r1, r4",
            "movw r2, 0x3ff",
            "bl sym.imp.read",
            "mov r6, r0",
            "mov r0, r5",
            "bl sym.imp.close",
            "bic r3, r6, r6, asr 31",
            "mov r2, 0",
            "strb r2, [r4, r3]",
            "mov r0, r6",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.00029068": {
        "function_address": "0x00029068",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r4, r1",
            "mov r1, 0",
            "mov r5, r2",
            "bl sym.imp.open64",
            "cmp r0, 0",
            "poplt {r4, r5, r6, pc}",
            "mov r1, r4",
            "mov r2, r5",
            "pop {r4, r5, r6, lr}",
            "b fcn.00029048"
        ]
    },
    "fcn.0002a0c4": {
        "function_address": "0x0002a0c4",
        "instructions": [
            "push {r0, r1, r4, r5, r6, lr}",
            "mov r4, r2",
            "ldr r6, [sp, 0x18]",
            "mov r5, r3",
            "str r6, [sp]",
            "bl sym.imp.lseek64",
            "cmn r0, 1",
            "bne 0x2a10c",
            "cmn r1, 1",
            "bne 0x2a10c",
            "cmp r6, 0",
            "bne 0x2a104",
            "ldr r0, str.lseek__llu_",
            "mov r2, r4",
            "mov r3, r5",
            "bl fcn.00028900",
            "ldr r0, str.lseek",
            "bl fcn.00028900",
            "pop {r2, r3, r4, r5, r6, pc}"
        ]
    },
    "fcn.00029048": {
        "function_address": "0x00029048",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r4, r0",
            "bl fcn.00028fb4",
            "mov r5, r0",
            "mov r0, r4",
            "bl sym.imp.close",
            "mov r0, r5",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.00029870": {
        "function_address": "0x00029870",
        "instructions": [
            "push {r3, lr}",
            "bl sym.imp.fork",
            "cmp r0, 0",
            "bge 0x29888",
            "ldr r0, [0x00029894]",
            "bl fcn.00028900",
            "popeq {r3, pc}",
            "mov r0, 0",
            "bl sym.imp.exit"
        ]
    },
    "sym.imp.regcomp": {
        "function_address": "0x0000c164",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x534]!"
        ]
    },
    "sym.imp.regerror": {
        "function_address": "0x0000bf90",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x66c]!"
        ]
    },
    "fcn.0002a220": {
        "function_address": "0x0002a220",
        "instructions": [
            "push {r4, lr}",
            "mov r2, 0xc",
            "ldr r4, [0x0002a244]",
            "mov r1, r4",
            "bl fcn.0002a1f8",
            "mov r3, 0",
            "strb r3, [r0]",
            "mov r0, r4",
            "pop {r4, pc}"
        ]
    },
    "fcn.0002a1f8": {
        "function_address": "0x0002a1f8",
        "instructions": [
            "lsr r3, r0, 0x1f",
            "cmp r2, 0",
            "moveq r3, 0",
            "andne r3, r3, 1",
            "cmp r3, 0",
            "movne r3, 0x2d",
            "rsbne r0, r0, 0",
            "strbne r3, [r1], 1",
            "subne r2, r2, 1",
            "b fcn.0002a174"
        ]
    },
    "fcn.0002a8a0": {
        "function_address": "0x0002a8a0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r4, r0",
            "sub sp, sp, 0x128",
            "ldr r0, str._etc_passwd",
            "add r6, sp, 0x108",
            "add r5, sp, 8",
            "ldr r1, [0x0002a9b8]",
            "add r8, sp, 0x124",
            "bl fcn.00029f54"
        ]
    },
    "fcn.00027630": {
        "function_address": "0x00027630",
        "instructions": [
            "push {r0, r1, r2, lr}",
            "add r1, sp, 4",
            "bl fcn.00027588",
            "pop {r1, r2, r3, pc}"
        ]
    },
    "fcn.0002ac84": {
        "function_address": "0x0002ac84",
        "instructions": [
            "push {r0, r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r6, r1",
            "ldr r7, [r0, 4]",
            "mov r0, 1",
            "mov sb, r2",
            "bl fcn.00029eb4",
            "ldr r1, [0x0002ad6c]",
            "mov r4, r0",
            "mov r0, r6",
            "blx sb",
            "subs fp, r0, 0",
            "movne r8, 1",
            "bne 0x2ad14",
            "b 0x2ad5c",
            "mov r0, r7",
            "bl sym.imp.strlen",
            "mov sl, r0",
            "mov r1, r7",
            "mov r0, r5",
            "mov r2, sl",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "bne 0x2acec",
            "ldrb r3, [r5, sl]",
            "cmp r3, 0x3a",
            "moveq r8, 0",
            "mov r1, r4",
            "mov r2, r5",
            "ldr r0, aav.0x00061a94",
            "bl fcn.0002a2d0",
            "mov sl, r0",
            "mov r0, r4",
            "mov r4, sl",
            "bl sym.imp.free",
            "mov r0, r5",
            "bl sym.imp.free",
            "mov r0, fp",
            "bl fcn.00027630",
            "subs r5, r0, 0",
            "bne 0x2acbc",
            "cmp r8, 0",
            "beq 0x2ad40",
            "ldr r0, str.cant_find__s_in__s",
            "mov r1, r7",
            "mov r2, r6",
            "bl fcn.00027184",
            "b 0x2ad5c",
            "ldr r1, [0x0002ad78]",
            "mov r0, r6",
            "blx sb",
            "subs r1, r0, 0",
            "beq 0x2ad5c",
            "mov r0, r4",
            "bl sym.imp.fputs",
            "mov r0, r4",
            "add sp, sp, 4",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "b sym.imp.free"
        ]
    },
    "fcn.0005146c": {
        "function_address": "0x0005146c",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r5, r0",
            "ldr r6, [0x000515cc]",
            "sub sp, sp, 0x90",
            "mov r4, r1",
            "ldr r3, [r6]",
            "cmp r3, 0",
            "bne 0x51498",
            "mov r0, 0x80",
            "bl fcn.00029e54",
            "ldr r3, [0x000515cc]",
            "mov r2, 0x80",
            "mov r1, 0",
            "ldr r6, obj.stdout",
            "ldr r0, [r3]",
            "bl sym.imp.memset",
            "add r1, sp, 0x40",
            "mov r0, 0",
            "bl sym.imp.tcgetattr",
            "mov r0, 0",
            "mov r1, r0",
            "bl sym.imp.tcflush",
            "ldr r1, [r6]",
            "mov r0, r4",
            "bl sym.imp.fputs",
            "add r4, sp, 4",
            "ldr r0, [r6]",
            "bl sym.imp.fflush",
            "mov r1, r4",
            "mov r0, 0",
            "bl sym.imp.tcgetattr",
            "ldr r3, [sp, 4]",
            "mov r0, 0",
            "mov r1, r0",
            "mov r2, r4",
            "bic r3, r3, 0x1e00",
            "str r3, [sp, 4]",
            "ldr r3, [sp, 0x10]",
            "bic r3, r3, 0x178",
            "str r3, [sp, 0x10]",
            "bl sym.imp.tcsetattr",
            "cmp r5, 0",
            "beq 0x51540",
            "ldr r3, aav.0x00051468",
            "add r1, sp, 0x90",
            "mov r2, 0",
            "mov r0, 0xe",
            "str r2, [sp, 0x80]",
            "str r3, [r1, -0x14]!",
            "bl sym.imp.sigaction",
            "mov r0, r5",
            "bl sym.imp.alarm",
            "ldr r4, [0x000515cc]",
            "mov r0, 0",
            "mov r2, 0x7f",
            "ldr r1, [r4]",
            "bl sym.imp.read",
            "cmp r0, 0",
            "movle r4, 0",
            "ble 0x51588",
            "ldr r4, [r4]",
            "mov r1, 0",
            "mov r3, r4",
            "ldrb r2, [r3], 1",
            "cmp r2, 0xd",
            "cmpne r2, 0xa",
            "strbeq r1, [r3, -1]",
            "ldrb r2, [r3, -1]",
            "cmp r2, 0",
            "bne 0x5156c",
            "cmp r5, 0",
            "beq 0x51598",
            "mov r0, 0",
            "bl sym.imp.alarm",
            "ldr r5, obj.stdout",
            "mov r0, 0",
            "add r2, sp, 0x40",
            "mov r1, r0",
            "bl sym.imp.tcsetattr",
            "ldr r1, [r5]",
            "mov r0, 0xa",
            "bl sym.imp.fputc",
            "ldr r0, [r5]",
            "bl sym.imp.fflush",
            "mov r0, r4",
            "add sp, sp, 0x90",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.imp.tcflush": {
        "function_address": "0x0000c038",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x5fc]!"
        ]
    },
    "sym.imp.tcsetattr": {
        "function_address": "0x0000bedc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x6e4]!"
        ]
    },
    "sym.imp.sigaction": {
        "function_address": "0x0000be88",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x71c]!"
        ]
    },
    "fcn.00054214": {
        "function_address": "0x00054214",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r5, r0",
            "ldr r4, [0x00054244]",
            "mov r6, r1",
            "ldr r0, [r4]",
            "bl sym.imp.free",
            "mov r1, r6",
            "mov r0, r5",
            "bl sym.imp.crypt",
            "bl fcn.00029ed8",
            "str r0, [r4]",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.imp.crypt": {
        "function_address": "0x0000b780",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xbcc]!"
        ]
    },
    "fcn.000515d8": {
        "function_address": "0x000515d8",
        "instructions": [
            "push {r0, r1, r2, r4, r5, r6, r7, lr}",
            "mov r5, r0",
            "add r0, sp, 4",
            "add r4, sp, 8",
            "bl sym.imp.time",
            "ldr r3, [sp, 4]",
            "str r3, [r4, -8]!",
            "b 0x51608",
            "mov r0, r5",
            "bl sym.imp.sleep",
            "mov r0, sp",
            "bl sym.imp.time",
            "ldm sp, {r0, r1}",
            "bl sym.imp.difftime",
            "mov r6, r0",
            "mov r7, r1",
            "mov r0, r5",
            "bl fcn.000554bc",
            "mov r2, r0",
            "mov r3, r1",
            "mov r0, r6",
            "mov r1, r7",
            "bl fcn.00055ae4",
            "cmp r0, 0",
            "bne 0x515f8",
            "pop {r1, r2, r3, r4, r5, r6, r7, pc}"
        ]
    },
    "sym.imp.difftime": {
        "function_address": "0x0000b6d8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xc3c]!"
        ]
    },
    "fcn.00055ae4": {
        "function_address": "0x00055ae4",
        "instructions": [
            "str lr, [sp, -8]!",
            "bl fcn.00055abc",
            "movlo r0, 1",
            "movhs r0, 0",
            "ldr pc, [sp], 8"
        ]
    },
    "fcn.00053f9c": {
        "function_address": "0x00053f9c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "subs r6, r1, 0",
            "sub sp, sp, 0x104",
            "mov r4, r0",
            "mov r5, r2",
            "beq 0x54110",
            "mov r0, r6",
            "bl sym.imp.strlen",
            "cmp r0, 5",
            "mov r7, r0",
            "ble 0x54110",
            "mov r0, r6",
            "ldr r1, [r5]",
            "bl fcn.00053f14",
            "cmp r0, 0",
            "bne 0x54118",
            "ldr r1, [r5, 0x10]",
            "ldrb r3, [r1]",
            "cmp r3, 0",
            "beq 0x53ffc",
            "mov r0, r6",
            "bl fcn.00053f14",
            "cmp r0, 0",
            "bne 0x54120",
            "mov r0, sp",
            "mov r1, 0xff",
            "bl sym.imp.gethostname",
            "cmp r0, 0",
            "mov r5, sp",
            "beq 0x54024",
            "mov r5, 0",
            "asr fp, r7, 1",
            "mov r8, r5",
            "b 0x54040",
            "strb r0, [sp, 0xfe]",
            "mov r1, sp",
            "mov r0, r6",
            "bl fcn.00053f14",
            "cmp r0, 0",
            "bne 0x54128",
            "b 0x54014",
            "ldrb sl, [r6, r8]",
            "mov r0, sl",
            "bl sym.imp.islower",
            "cmp r0, 0",
            "orrne r5, r5, 1",
            "bne 0x5407c",
            "mov r0, sl",
            "bl sym.imp.isupper",
            "cmp r0, 0",
            "orrne r5, r5, 2",
            "bne 0x5407c",
            "sub r3, sl, 0x30",
            "cmp r3, 9",
            "orrls r5, r5, 4",
            "orrhi r5, r5, 8",
            "mov r0, r6",
            "mov sb, 0",
            "mov r1, sl",
            "bl sym.imp.strchr",
            "cmp r0, 0",
            "beq 0x540a0",
            "adds r0, r0, 1",
            "add sb, sb, 1",
            "bne 0x54084",
            "cmp sb, fp",
            "bge 0x54130",
            "add r8, r8, 1",
            "cmp r8, r7",
            "blt 0x54040",
            "mov r2, 0xe",
            "mov r3, 0",
            "asr r1, r5, r3",
            "add r3, r3, 1",
            "tst r1, 1",
            "subne r2, r2, 2",
            "cmp r3, 4",
            "bne 0x540bc",
            "cmp r7, r2",
            "blt 0x54138",
            "cmp r4, 0",
            "moveq r0, r4",
            "beq 0x54148",
            "ldrb r0, [r4]",
            "cmp r0, 0",
            "beq 0x54148",
            "mov r1, r4",
            "mov r0, r6",
            "bl fcn.00053f14",
            "cmp r0, 0",
            "ldrne r1, str.similar_to_old_password",
            "bne 0x5413c",
            "b 0x54148",
            "ldr r1, str.too_short",
            "b 0x5413c",
            "ldr r1, str.similar_to_username",
            "b 0x5413c",
            "ldr r1, str.similar_to_gecos",
            "b 0x5413c",
            "ldr r1, str.similar_to_hostname",
            "b 0x5413c",
            "ldr r1, str.too_many_similar_characters",
            "b 0x5413c",
            "ldr r1, str.too_weak",
            "ldr r0, str.Bad_password:__s_n",
            "bl sym.imp.printf",
            "mov r0, 1",
            "add sp, sp, 0x104",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00053f14": {
        "function_address": "0x00053f14",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sl, lr}",
            "mov r6, r0",
            "mov sl, r1",
            "bl fcn.00053ec4",
            "mov r5, r0",
            "mov r0, r6",
            "bl fcn.00029ed8",
            "mov r4, r0",
            "bl sym.imp.strlen",
            "mov r3, r4",
            "mov r7, r0",
            "b 0x53f50",
            "sub r7, r7, 1",
            "ldrb r2, [r6, r7]",
            "strb r2, [r3], 1",
            "cmp r7, 0",
            "bne 0x53f44",
            "add r4, r4, r0",
            "mov r0, r6",
            "bl sym.imp.strlen",
            "rsb r4, r0, r4",
            "mov r8, r0",
            "mov r1, sl",
            "mov r0, r4",
            "bl fcn.00053ec4",
            "mov r1, r7",
            "mov r6, r0",
            "mov r2, r8",
            "mov r0, r4",
            "bl sym.imp.memset",
            "mov r0, r4",
            "bl sym.imp.free",
            "orr r0, r6, r5",
            "pop {r3, r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "sym.imp.gethostname": {
        "function_address": "0x0000bcf0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x82c]!"
        ]
    },
    "fcn.000518a4": {
        "function_address": "0x000518a4",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sl, lr}",
            "mov r7, r2",
            "mov r5, r1",
            "mov r4, r0",
            "mov r8, r4",
            "bl sym.imp.getpid",
            "ldr sl, [0x00051914]",
            "mov r6, r0",
            "mov r0, 0",
            "bl sym.imp.time",
            "add r6, r6, r0",
            "add r6, r6, r7",
            "mov r7, r5",
            "mul r3, sl, r6",
            "ldr r6, [0x00051918]",
            "add r6, r3, r6",
            "asr r0, r6, 0x10",
            "bl fcn.0005186c",
            "strb r0, [r8]",
            "asr r0, r6, 0x16",
            "bl fcn.0005186c",
            "subs r7, r7, 1",
            "strb r0, [r8, 1]",
            "add r8, r8, 2",
            "bne 0x518d8",
            "strb r7, [r4, r5, lsl 1]",
            "mov r0, r6",
            "pop {r3, r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "sym.imp.getpid": {
        "function_address": "0x0000bbe8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x8dc]!"
        ]
    },
    "fcn.0005186c": {
        "function_address": "0x0005186c",
        "instructions": [
            "ands r0, r0, 0x3f",
            "moveq r0, 0x2e",
            "bxeq lr",
            "cmp r0, 1",
            "beq 0x5189c",
            "cmp r0, 0xb",
            "addle r0, r0, 0x2e",
            "bxle lr",
            "cmp r0, 0x25",
            "addle r0, r0, 0x35",
            "addgt r0, r0, 0x3b",
            "bx lr",
            "mov r0, 0x2f",
            "bx lr"
        ]
    },
    "fcn.0002ae20": {
        "function_address": "0x0002ae20",
        "instructions": [
            "push {r4, lr}",
            "subs r4, r0, 0",
            "popeq {r4, pc}",
            "bl sym.imp.strlen",
            "mov r1, 0",
            "mov r2, r0",
            "mov r0, r4",
            "pop {r4, lr}",
            "b sym.imp.memset"
        ]
    },
    "fcn.000546e0": {
        "function_address": "0x000546e0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r6, r0",
            "sub sp, sp, 0xa4",
            "mov r5, r1",
            "mov r1, r6",
            "ldr r0, aav.0x000620d8",
            "str r2, [sp, 0x14]",
            "bl fcn.0002a2d0",
            "mov r4, r0",
            "bl sym.imp.strlen",
            "mov r1, r5",
            "mov sl, r0",
            "ldr r0, [0x000549a4]",
            "bl fcn.0002a2d0",
            "str r0, [sp, 0xc]",
            "bl sym.imp.strlen",
            "ldr r1, aav.0x0005ea40",
            "str r0, [sp, 0x10]",
            "mov r0, r6",
            "bl sym.imp.fopen64",
            "subs fp, r0, 0",
            "mvneq sl, 0",
            "beq 0x5496c",
            "ldr r8, [0x000549ac]",
            "mov r7, 0x1e",
            "bl sym.imp.fileno",
            "mov sb, r0",
            "mov r0, r4",
            "mov r1, 0xc1",
            "mov r2, 0x180",
            "bl sym.imp.open64",
            "subs r5, r0, 0",
            "bge 0x54794",
            "ldr r3, [r8]",
            "ldr r3, [r3]",
            "cmp r3, 0x11",
            "bne 0x54784",
            "ldr r0, fcn.000186a0",
            "bl sym.imp.usleep",
            "subs r7, r7, 1",
            "bne 0x5474c",
            "ldr r0, str.cannot_create__s",
            "mov r1, r4",
            "bl fcn.000288b8",
            "b 0x54960",
            "mov r0, sb",
            "add r1, sp, 0x18",
            "bl sym.imp.fstat64",
            "cmp r0, 0",
            "bne 0x547cc",
            "ldr r1, [sp, 0x28]",
            "mov r0, r5",
            "lsl r1, r1, 0x17",
            "lsr r1, r1, 0x17",
            "bl sym.imp.fchmod",
            "mov r0, r5",
            "ldr r1, [sp, 0x30]",
            "ldr r2, [sp, 0x34]",
            "bl sym.imp.fchown",
            "mov r0, r5",
            "ldr r1, [0x000549b8]",
            "bl sym.imp.fdopen",
            "subs r8, r0, 0",
            "bne 0x547ec",
            "mov r0, r5",
            "bl sym.imp.close",
            "b 0x54958",
            "mov r3, 0x2d",
            "sub r7, sl, 1",
            "strb r3, [r4, r7]",
            "mov r0, r4",
            "bl sym.imp.unlink",
            "cmp r0, 0",
            "beq 0x54988",
            "ldr r3, [0x000549ac]",
            "ldr r3, [r3]",
            "ldr r3, [r3]",
            "cmp r3, 2",
            "beq 0x54988",
            "ldr r0, str.warning:_cannot_create_backup_copy__s",
            "mov r1, r4",
            "bl fcn.000288b8",
            "mov r3, 0x2b",
            "mov r2, 0",
            "strb r3, [r4, r7]",
            "mov r3, 1",
            "strh r3, [sp, 0x80]",
            "mov r3, 0",
            "strh r3, [sp, 0x82]",
            "mov r3, 0",
            "strd r2, r3, [sp, 0x88]",
            "mov r0, sb",
            "strd r2, r3, [sp, 0x90]",
            "mov r1, 0xd",
            "add r2, sp, 0x80",
            "bl sym.imp.fcntl64",
            "cmp r0, 0",
            "bge 0x54874",
            "ldr r0, str.warning:_cannot_lock__s",
            "mov r1, r6",
            "bl fcn.000288b8",
            "mov sl, 0",
            "mov r7, r4",
            "mov r3, 2",
            "strh r3, [sp, 0x80]",
            "mov r0, fp",
            "bl fcn.00027630",
            "subs r4, r0, 0",
            "beq 0x548f4",
            "ldr r0, [sp, 0xc]",
            "mov r1, r4",
            "ldr r2, [sp, 0x10]",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "bne 0x548dc",
            "ldr r3, [sp, 0x10]",
            "mov r1, 0x3a",
            "add sl, sl, 1",
            "add r0, r4, r3",
            "bl sym.imp.strchrnul",
            "ldr r1, str._s_s_s",
            "str r0, [sp]",
            "mov r0, r8",
            "ldr r2, [sp, 0xc]",
            "ldr r3, [sp, 0x14]",
            "bl sym.imp.fprintf",
            "b 0x548e8",
            "mov r0, r4",
            "mov r1, r8",
            "bl sym.imp.fputs",
            "mov r0, r4",
            "bl sym.imp.free",
            "b 0x54884",
            "mov r1, 0xd",
            "add r2, sp, 0x80",
            "mov r0, sb",
            "mov r4, r7",
            "bl sym.imp.fcntl64",
            "mov r0, fp",
            "bl sym.imp.ferror",
            "mov r7, r0",
            "mov r0, r8",
            "bl sym.imp.fflush",
            "mov sb, r0",
            "mov r0, r5",
            "bl sym.imp.fsync",
            "orr r7, sb, r7",
            "mov r5, r0",
            "orr r5, r7, r5",
            "mov r0, r8",
            "bl sym.imp.fclose",
            "orrs r5, r5, r0",
            "bne 0x54958",
            "mov r0, r4",
            "mov r1, r6",
            "bl sym.imp.rename",
            "cmp r0, 0",
            "beq 0x54964",
            "mov r0, r4",
            "bl sym.imp.unlink",
            "mvn sl, 0",
            "mov r0, fp",
            "bl sym.imp.fclose",
            "mov r0, r4",
            "bl sym.imp.free",
            "ldr r0, [sp, 0xc]",
            "bl sym.imp.free",
            "mov r0, sl",
            "add sp, sp, 0xa4",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "mov r0, r6",
            "mov r1, r4",
            "bl sym.imp.link",
            "cmp r0, 0",
            "bne 0x5481c",
            "b 0x54828"
        ]
    },
    "sym.imp.usleep": {
        "function_address": "0x0000b78c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xbc4]!"
        ]
    },
    "sym.imp.fchown": {
        "function_address": "0x0000c0bc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x5a4]!"
        ]
    },
    "sym.imp.fdopen": {
        "function_address": "0x0000bbb8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x8fc]!"
        ]
    },
    "sym.imp.fcntl64": {
        "function_address": "0x0000b720",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xc0c]!"
        ]
    },
    "sym.imp.fsync": {
        "function_address": "0x0000c308",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x41c]!"
        ]
    },
    "sym.imp.rename": {
        "function_address": "0x0000c1ac",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x504]!"
        ]
    },
    "fcn.00051e68": {
        "function_address": "0x00051e68",
        "instructions": [
            "push {r0, r1, r2, r3}",
            "ldr r3, [0x00051ed8]",
            "ldr r3, [r3]",
            "push {r0, r1, r4, lr}",
            "add r1, sp, 0x14",
            "ldr r4, [sp, 0x10]",
            "tst r3, 1",
            "str r1, [sp, 4]",
            "str r1, [sp]",
            "beq 0x51eac",
            "mov r0, r4",
            "bl sym.imp.vprintf",
            "ldr r3, [0x00051edc]",
            "ldr r0, [r3]",
            "ldr r3, obj.stdout",
            "ldr r1, [r3]",
            "bl sym.imp.fputs",
            "ldr r3, [0x00051ed8]",
            "ldr r3, [r3]",
            "tst r3, 2",
            "beq 0x51ecc",
            "mov r0, 6",
            "mov r1, r4",
            "ldr r2, [sp]",
            "bl sym.imp.vsyslog",
            "pop {r2, r3, r4, lr}",
            "add sp, sp, 0x10",
            "bx lr"
        ]
    },
    "sym.imp.vprintf": {
        "function_address": "0x0000bd74",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x7d4]!"
        ]
    },
    "sym.imp.vsyslog": {
        "function_address": "0x0000bd08",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x81c]!"
        ]
    },
    "fcn.000516bc": {
        "function_address": "0x000516bc",
        "instructions": [
            "cmp r0, 0",
            "push {r4, r5, r6, lr}",
            "sub sp, sp, 0x130",
            "beq 0x51728",
            "ldr r4, [r0, 4]",
            "ldrb r3, [r4]",
            "cmp r3, 0x78",
            "cmpne r3, 0x2a",
            "bne 0x51714",
            "ldrb r3, [r4, 1]",
            "cmp r3, 0",
            "bne 0x51714",
            "add r3, sp, 0x12c",
            "add r1, sp, 0x108",
            "str r3, [sp]",
            "add r2, sp, 8",
            "ldr r0, [r0]",
            "mov r3, 0x100",
            "bl sym.imp.getspnam_r",
            "cmp r0, 0",
            "ldreq r4, [sp, 0x10c]",
            "ldrne r4, [0x00051784]",
            "ldrb r3, [r4]",
            "cmp r3, 0",
            "moveq r0, 1",
            "beq 0x5177c",
            "b 0x5172c",
            "ldr r4, [0x00051784]",
            "mov r0, 0",
            "ldr r1, str.Password:",
            "bl fcn.0005146c",
            "subs r6, r0, 0",
            "moveq r0, r6",
            "beq 0x5177c",
            "mov r1, r4",
            "bl sym.imp.crypt",
            "mov r5, r0",
            "mov r0, r6",
            "bl sym.imp.strlen",
            "mov r1, 0",
            "mov r2, r0",
            "mov r0, r6",
            "bl sym.imp.memset",
            "mov r0, r5",
            "mov r1, r4",
            "bl sym.imp.strcmp",
            "rsbs r0, r0, 1",
            "movlo r0, 0",
            "add sp, sp, 0x130",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.imp.getspnam_r": {
        "function_address": "0x0000b924",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xab4]!"
        ]
    },
    "fcn.00051684": {
        "function_address": "0x00051684",
        "instructions": [
            "push {r3, lr}",
            "bl fcn.00051640",
            "subs r1, r0, 0",
            "popeq {r3, pc}",
            "ldr r0, [pc]",
            "bl fcn.00028900"
        ]
    },
    "fcn.00051640": {
        "function_address": "0x00051640",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r0",
            "ldr r1, [r4, 0xc]",
            "ldr r0, [r0]",
            "bl sym.imp.initgroups",
            "cmn r0, 1",
            "beq 0x51678",
            "bl sym.imp.endgrent",
            "ldr r0, [r4, 0xc]",
            "bl fcn.0002a298",
            "ldr r0, [pc]",
            "pop {r4, pc}"
        ]
    },
    "sym.imp.initgroups": {
        "function_address": "0x0000bb88",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x91c]!"
        ]
    },
    "sym.imp.endgrent": {
        "function_address": "0x0000bb34",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x954]!"
        ]
    },
    "fcn.00054324": {
        "function_address": "0x00054324",
        "instructions": [
            "push {r3, lr}",
            "mov r2, 1",
            "bl sym.imp.setenv",
            "cmp r0, 0",
            "popeq {r3, pc}",
            "ldr r0, [pc]",
            "bl fcn.000271d8",
            "cmp r1, 0",
            "push {r4, r5, r6, lr}",
            "mov r4, r0",
            "mov r5, r3",
            "beq 0x543d4",
            "ldr r0, [r3, 0x14]",
            "bl sym.imp.chdir",
            "cmp r0, 0",
            "beq 0x54360",
            "ldr r0, [0x0005441c]",
            "bl fcn.0002a358",
            "ldr r0, [0x00054428]",
            "bl sym.imp.getenv",
            "mov r6, r0",
            "bl sym.imp.clearenv",
            "cmp r6, 0",
            "beq 0x54384",
            "ldr r0, [0x00054428]",
            "mov r1, r6",
            "bl 0x2a154",
            "ldr r0, aav.0x0005c4dc",
            "ldr r1, [r5, 0x14]",
            "bl 0x2a154",
            "ldr r0, str.SHELL",
            "mov r1, r4",
            "bl 0x2a154",
            "ldr r0, [0x00054434]",
            "ldr r1, [r5]",
            "bl 0x2a154",
            "ldr r0, str.LOGNAME",
            "ldr r1, [r5]",
            "bl 0x2a154",
            "ldr r1, [r5, 8]",
            "ldr r3, [0x0005443c]",
            "ldr r0, [0x00054440]",
            "cmp r1, 0",
            "add r2, r3, 0x10",
            "moveq r1, r3",
            "movne r1, r2",
            "b 0x54414",
            "cmp r2, 0",
            "popeq {r4, r5, r6, pc}",
            "ldr r1, [r3, 0x14]",
            "ldr r0, aav.0x0005c4dc",
            "bl 0x2a154",
            "ldr r0, str.SHELL",
            "mov r1, r4",
            "bl 0x2a154",
            "ldr r3, [r5, 8]",
            "cmp r3, 0",
            "popeq {r4, r5, r6, pc}",
            "ldr r0, [0x00054434]",
            "ldr r1, [r5]",
            "bl 0x2a154",
            "ldr r0, str.LOGNAME",
            "ldr r1, [r5]",
            "pop {r4, r5, r6, lr}",
            "b 0x2a154"
        ]
    },
    "sym.imp.setenv": {
        "function_address": "0x0000b984",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xa74]!"
        ]
    },
    "sym.imp.clearenv": {
        "function_address": "0x0000c4a0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x30c]!"
        ]
    },
    "unk.0x2a154": {
        "function_address": "0x0002a154",
        "instructions": [
            "push {r3, lr}",
            "mov r2, 1",
            "bl sym.imp.setenv",
            "cmp r0, 0",
            "popeq {r3, pc}",
            "ldr r0, [pc]",
            "bl fcn.000271d8",
            "cmp r1, 0",
            "push {r4, r5, r6, lr}",
            "mov r4, r0",
            "mov r5, r3",
            "beq 0x543d4",
            "ldr r0, [r3, 0x14]",
            "bl sym.imp.chdir",
            "cmp r0, 0",
            "beq 0x54360",
            "ldr r0, [0x0005441c]",
            "bl fcn.0002a358",
            "ldr r0, [0x00054428]",
            "bl sym.imp.getenv",
            "mov r6, r0",
            "bl sym.imp.clearenv",
            "cmp r6, 0",
            "beq 0x54384",
            "ldr r0, [0x00054428]",
            "mov r1, r6",
            "bl 0x2a154",
            "ldr r0, aav.0x0005c4dc",
            "ldr r1, [r5, 0x14]",
            "bl 0x2a154",
            "ldr r0, str.SHELL",
            "mov r1, r4",
            "bl 0x2a154",
            "ldr r0, [0x00054434]",
            "ldr r1, [r5]",
            "bl 0x2a154",
            "ldr r0, str.LOGNAME",
            "ldr r1, [r5]",
            "bl 0x2a154",
            "ldr r1, [r5, 8]",
            "ldr r3, [0x0005443c]",
            "ldr r0, [0x00054440]",
            "cmp r1, 0",
            "add r2, r3, 0x10",
            "moveq r1, r3",
            "movne r1, r2",
            "b 0x54414",
            "cmp r2, 0",
            "popeq {r4, r5, r6, pc}",
            "ldr r1, [r3, 0x14]",
            "ldr r0, aav.0x0005c4dc",
            "bl 0x2a154",
            "ldr r0, str.SHELL",
            "mov r1, r4",
            "bl 0x2a154",
            "ldr r3, [r5, 8]",
            "cmp r3, 0",
            "popeq {r4, r5, r6, pc}",
            "ldr r0, [0x00054434]",
            "ldr r1, [r5]",
            "bl 0x2a154",
            "ldr r0, str.LOGNAME",
            "ldr r1, [r5]",
            "pop {r4, r5, r6, lr}",
            "b 0x2a154"
        ]
    },
    "fcn.00054248": {
        "function_address": "0x00054248",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sl, lr}",
            "mov r4, r0",
            "mov r6, r1",
            "mov r5, r2",
            "mov r8, r3",
            "mov sl, r3",
            "mov r0, 0",
            "b 0x5426c",
            "add r0, r0, 1",
            "cmp r3, 0",
            "beq 0x54280",
            "ldr r2, [r3], 4",
            "cmp r2, 0",
            "bne 0x54268",
            "add r0, r0, 4",
            "lsl r0, r0, 2",
            "bl fcn.00029e54"
        ]
    },
    "fcn.00027540": {
        "function_address": "0x00027540",
        "instructions": [
            "sub r3, r0, 1",
            "mov r2, r0",
            "b 0x27564",
            "cmp r1, 0x2f",
            "beq 0x27564",
            "add r3, r3, 1",
            "cmp ip, r3",
            "movhi r3, ip",
            "movhi r0, r3",
            "mov ip, r2",
            "ldrb r1, [r2], 1",
            "cmp r1, 0",
            "bne 0x2754c",
            "ldrb r2, [r0]",
            "cmp r2, 0x2f",
            "moveq r3, r0",
            "strb r1, [r3, 1]",
            "bx lr"
        ]
    },
    "fcn.0002b51c": {
        "function_address": "0x0002b51c",
        "instructions": [
            "push {r0, r1, r2, r3}",
            "push {r0, r1, r4, r5, r6, lr}",
            "add r2, sp, 0x1c",
            "ldr r4, [sp, 0x18]",
            "ldr r1, [0x0002b5e4]",
            "ldrb r3, [r4]",
            "ldr r1, [r1]",
            "str r2, [sp, 4]",
            "and r0, r3, 0xf",
            "tst r3, 0x40",
            "moveq r3, 5",
            "movne r3, 4",
            "cmp r0, r1",
            "blo 0x2b5c4",
            "ldr r1, [0x0002b5e8]",
            "add r5, r4, 1",
            "ldr r1, [r1]",
            "cmp r1, 0",
            "beq 0x2b57c",
            "ldr r3, obj.stderr",
            "mov r1, r5",
            "ldr r0, [r3]",
            "bl sym.imp.vfprintf",
            "b 0x2b5c4",
            "ldr r1, [0x0002b5f0]",
            "ldr r0, [r1]",
            "cmp r0, 0",
            "bne 0x2b59c",
            "mov r0, r3",
            "mov r1, r5",
            "bl sym.imp.vsyslog",
            "b 0x2b5c4",
            "movw r1, 0x441",
            "mov r2, 0x180",
            "bl fcn.00029fa4",
            "subs r6, r0, 0",
            "blt 0x2b5c4",
            "mov r1, r5",
            "ldr r2, [sp, 4]",
            "bl sym.imp.vdprintf",
            "mov r0, r6",
            "bl sym.imp.close",
            "ldrsb r3, [r4]",
            "cmp r3, 0",
            "bge 0x2b5d8",
            "mov r0, 0x14",
            "bl sym.imp.exit",
            "pop {r2, r3, r4, r5, r6, lr}",
            "add sp, sp, 0x10",
            "bx lr"
        ]
    },
    "sym.imp.vfprintf": {
        "function_address": "0x0000b840",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xb4c]!"
        ]
    },
    "sym.imp.vdprintf": {
        "function_address": "0x0000c044",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x5f4]!"
        ]
    },
    "fcn.0002b46c": {
        "function_address": "0x0002b46c",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sl, lr}",
            "mov r7, r0",
            "ldr r5, [0x0002b518]",
            "mov r6, 1",
            "b 0x2b508",
            "mov r0, r7",
            "ldr r1, [r4, 8]",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "addeq sl, r4, 4",
            "streq r0, [r4, 0x10]",
            "streq r6, [r4, 0x14]",
            "beq 0x2b4d0",
            "b 0x2b504",
            "ldr r3, [r8, 8]",
            "cmp r3, 0",
            "strgt r6, [r4, 0x10]",
            "movgt sl, r8",
            "bgt 0x2b4d0",
            "ldr r3, [r8]",
            "ldr r0, [r8, 4]",
            "str r3, [sl]",
            "bl sym.imp.free",
            "mov r0, r8",
            "bl sym.imp.free",
            "ldr r8, [sl]",
            "cmp r8, 0",
            "bne 0x2b4a4",
            "ldr r3, [r4, 0x10]",
            "cmp r3, 0",
            "bne 0x2b504",
            "ldr r3, [r4]",
            "ldr r0, [r4, 8]",
            "str r3, [r5]",
            "bl sym.imp.free",
            "mov r0, r4",
            "bl sym.imp.free",
            "b 0x2b508",
            "mov r5, r4",
            "ldr r4, [r5]",
            "cmp r4, 0",
            "bne 0x2b480",
            "pop {r3, r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "fcn.000545b4": {
        "function_address": "0x000545b4",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r5, r0",
            "bl sym.imp.strlen",
            "mov r4, r0",
            "add r6, r5, r0",
            "b 0x545d0",
            "sub r4, r4, 1",
            "cmp r4, 0",
            "beq 0x545ec",
            "ldrb r0, [r6, -1]!",
            "bl sym.imp.isspace",
            "cmp r0, 0",
            "bne 0x545cc",
            "b 0x545f8",
            "mov r3, 0",
            "strb r3, [r5, r4]",
            "pop {r4, r5, r6, pc}",
            "mov r0, r5",
            "ldr r1, str.__n_r_t_v",
            "bl sym.imp.strspn",
            "rsb r4, r0, r4",
            "mov r1, r0",
            "add r1, r5, r1",
            "mov r0, r5",
            "mov r2, r4",
            "bl sym.imp.memmove",
            "b 0x545ec"
        ]
    },
    "fcn.0002b5f4": {
        "function_address": "0x0002b5f4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x14",
            "ldr sl, [sp, 0x3c]",
            "mov fp, r0",
            "mov r4, r2",
            "str r1, [sp, 8]",
            "cmp sl, 0",
            "str r3, [sp, 0xc]",
            "mvnne r5, 0",
            "addne sb, sp, 0x3c",
            "movne r6, r5",
            "bne 0x2b7dc",
            "b 0x2b884",
            "cmp r3, 0x2a",
            "addeq r7, r7, 1",
            "subeq r5, r4, 1",
            "streq r7, [sp, 0x3c]",
            "moveq r6, 0",
            "beq 0x2b70c",
            "sub r3, r3, 0x30",
            "uxtb r3, r3",
            "cmp r3, 9",
            "bhi 0x2b690",
            "cmp r6, 0",
            "bge 0x2b674",
            "mov r2, 0xa",
            "mov r0, r7",
            "mov r1, sb",
            "bl sym.imp.strtol",
            "ldr r2, [sp, 0xc]",
            "add r6, r0, r2",
            "b 0x2b70c",
            "mov r0, r7",
            "mov r1, sb",
            "mov r2, 0xa",
            "bl sym.imp.strtol",
            "ldr r3, [sp, 0xc]",
            "add r5, r0, r3",
            "b 0x2b70c",
            "ldr r2, [sp, 0x38]",
            "cmp r2, 0",
            "beq 0x2b890",
            "mov r8, 0",
            "b 0x2b6f4",
            "mov r0, r7",
            "mov r2, 3",
            "bl sym.imp.strncasecmp",
            "cmp r0, 0",
            "bne 0x2b6f0",
            "cmp r6, 0",
            "add r7, r7, 3",
            "str r7, [sp, 0x3c]",
            "bge 0x2b6dc",
            "mov r0, r8",
            "mov r1, 3",
            "bl fcn.000550c8",
            "mov r6, r0",
            "b 0x2b70c",
            "mov r0, r8",
            "mov r1, 3",
            "bl fcn.000550c8",
            "mov r5, r0",
            "b 0x2b70c",
            "add r8, r8, 3",
            "ldr r3, [sp, 0x38]",
            "add r1, r3, r8",
            "ldrb r3, [r3, r8]",
            "cmp r3, 0",
            "bne 0x2b6a4",
            "b 0x2b890",
            "ldr r0, [sp, 0x3c]",
            "lsr r2, r5, 0x1f",
            "ldrb r3, [r0]",
            "cmp r3, 0x2d",
            "movne r1, 0",
            "andeq r1, r2, 1",
            "cmp r1, 0",
            "addne r0, r0, 1",
            "strne r0, [sp, 0x3c]",
            "bne 0x2b7dc",
            "cmp r2, 0",
            "movne r5, r6",
            "cmp r3, 0x2f",
            "movne r2, 1",
            "strne r2, [sp, 4]",
            "bne 0x2b760",
            "add r0, r0, 1",
            "mov r1, sb",
            "mov r2, 0xa",
            "bl sym.imp.strtol",
            "str r0, [sp, 4]",
            "sub r6, r6, 1",
            "mov r7, 0x400",
            "mov r8, 1",
            "add r0, r6, 1",
            "mov r1, r4",
            "bl fcn.000551a4",
            "subs r8, r8, 1",
            "mov r6, r1",
            "bne 0x2b7a0",
            "mov r0, r1",
            "mov r1, r4",
            "bl fcn.000551a4",
            "ldr r2, [sp, 8]",
            "mov r3, 1",
            "strb r3, [r2, r1]",
            "ldr r8, [sp, 4]",
            "cmp r6, r5",
            "beq 0x2b7b4",
            "subs r7, r7, 1",
            "bne 0x2b76c",
            "b 0x2b890",
            "cmp r7, 0",
            "beq 0x2b890",
            "ldr r3, [sp, 0x3c]",
            "ldrb r2, [r3]",
            "cmp r2, 0x2c",
            "bne 0x2b7f8",
            "mvn r5, 0",
            "add r3, r3, 1",
            "mov r6, r5",
            "str r3, [sp, 0x3c]",
            "ldr r7, [sp, 0x3c]",
            "ldrb r3, [r7]",
            "cmp r3, 9",
            "cmpne r3, 0x20",
            "beq 0x2b7f8",
            "cmp r3, 0xa",
            "bne 0x2b628",
            "ldr r3, [sp, 0x3c]",
            "ldrb r3, [r3]",
            "cmp r3, 9",
            "cmpne r3, 0x20",
            "beq 0x2b820",
            "cmp r3, 0xa",
            "beq 0x2b820",
            "b 0x2b890",
            "add r2, r2, 1",
            "str r2, [sp, 0x3c]",
            "ldr r2, [sp, 0x3c]",
            "ldrb r3, [r2]",
            "cmp r3, 0x20",
            "cmpne r3, 9",
            "movne r5, 0",
            "moveq r5, 1",
            "beq 0x2b818",
            "cmp r3, 0xa",
            "beq 0x2b818",
            "ldr r3, [0x0002b8a8]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x2b87c",
            "b 0x2b86c",
            "ldr r3, [sp, 8]",
            "ldr r0, [0x0002b8ac]",
            "ldrb r1, [r3, r5]",
            "add r5, r5, 1",
            "bl fcn.0002b51c",
            "cmp r5, r4",
            "blt 0x2b858",
            "ldr r0, [0x0002b8b0]",
            "bl fcn.0002b51c",
            "ldr r0, [sp, 0x3c]",
            "b 0x2b888",
            "mov r0, sl",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r0, str.Ifailed_user__s_parsing__s_n",
            "mov r1, fp",
            "mov r2, sl",
            "bl fcn.0002b51c",
            "mov r0, 0",
            "b 0x2b888"
        ]
    },
    "fcn.0002b8b8": {
        "function_address": "0x0002b8b8",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x530",
            "sub sp, sp, 4",
            "ldr r1, aav.0x0005a0a0",
            "mov r7, r0",
            "movw fp, 0xffff",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "movne fp, 0x100",
            "cmp r7, 0",
            "beq 0x2bbac",
            "mov r0, r7",
            "bl fcn.0002b46c",
            "mov r0, r7",
            "ldr r1, [0x0002bbbc]",
            "bl sym.imp.fopen64",
            "subs r3, r0, 0",
            "str r3, [sp, 0x10]",
            "beq 0x2bbac",
            "bl sym.imp.fileno",
            "add r1, sp, 0x4c0",
            "add r1, r1, 8",
            "bl sym.imp.fstat64",
            "cmp r0, 0",
            "bne 0x2bba4",
            "ldr r3, [sp, 0x4e0]",
            "cmp r3, 0",
            "bne 0x2bba4",
            "add r3, r3, 0xa",
            "add r0, r0, 0x18",
            "mul r3, r3, fp",
            "add r4, sp, 0x420",
            "add r4, r4, 0xc",
            "add sl, sp, 0x2c",
            "ldr sb, [0x0002bbc0]",
            "str r3, [sp, 0xc]",
            "bl fcn.00029eb4",
            "mov r5, r0",
            "mov r0, r7",
            "bl sym.imp.strdup",
            "add r3, r4, 0x14",
            "str r0, [r5, 8]",
            "str r3, [sp, 0x1c]",
            "add r3, r4, 0x50",
            "str r3, [sp, 0x20]",
            "add r3, r4, 0x68",
            "str r3, [sp, 0x18]",
            "add r3, r4, 0x88",
            "add r8, r5, 4",
            "str r3, [sp, 0x24]",
            "b 0x2bb48",
            "mov r0, sl",
            "bl fcn.000545b4",
            "ldrb r1, [sp, 0x2c]",
            "cmp r1, 0",
            "cmpne r1, 0x23",
            "movne r1, 0",
            "moveq r1, 1",
            "beq 0x2bb48",
            "subs fp, fp, 1",
            "beq 0x2bb70",
            "mov r0, r4",
            "mov r2, 0x9c",
            "bl sym.imp.memset",
            "ldr r3, [sb]",
            "cmp r3, 0",
            "beq 0x2b9d4",
            "ldr r0, str.IUser__s_Entry__s_n",
            "mov r1, r7",
            "mov r2, sl",
            "bl fcn.0002b51c",
            "mov r6, 0",
            "stm sp, {r6, sl}",
            "mov r2, 0x3c",
            "ldr r1, [sp, 0x1c]",
            "mov r3, r6",
            "ldr r0, [r5, 8]",
            "bl fcn.0002b5f4",
            "str r6, [sp]",
            "mov r2, 0x18",
            "str r0, [sp, 4]",
            "mov r3, r6",
            "ldr r1, [sp, 0x20]",
            "ldr r0, [r5, 8]",
            "bl fcn.0002b5f4",
            "str r6, [sp]",
            "mov r2, 0x20",
            "str r0, [sp, 4]",
            "mov r3, r6",
            "ldr r1, [sp, 0x18]",
            "ldr r0, [r5, 8]",
            "bl fcn.0002b5f4",
            "ldr r3, str.janfebmaraprmayjunjulaugsepoctnovdec",
            "mov r2, 0xc",
            "str r0, [sp, 4]",
            "ldr r1, [sp, 0x24]",
            "str r3, [sp]",
            "mvn r3, 0",
            "ldr r0, [r5, 8]",
            "bl fcn.0002b5f4",
            "ldr r3, str.sunmontuewedthufrisat",
            "add r1, r4, 0x94",
            "str r0, [sp, 4]",
            "mov r2, 7",
            "str r3, [sp]",
            "mov r3, r6",
            "ldr r0, [r5, 8]",
            "bl fcn.0002b5f4",
            "cmp r0, 0",
            "str r0, [sp, 0x14]",
            "beq 0x2bb48",
            "add r3, r4, 0x93",
            "add r2, r4, 0x9a",
            "ldrb r1, [r3, 1]!",
            "cmp r1, 0",
            "beq 0x2ba98",
            "cmp r3, r2",
            "bne 0x2ba7c",
            "mov r6, 0",
            "b 0x2ba9c",
            "mov r6, 1",
            "add r3, r4, 0x67",
            "add r2, r4, 0x87",
            "ldrb r1, [r3, 1]!",
            "cmp r1, 0",
            "beq 0x2bac0",
            "cmp r3, r2",
            "bne 0x2baa4",
            "mov r3, 0",
            "b 0x2bac4",
            "mov r3, 1",
            "eor r2, r3, 1",
            "tst r2, r6",
            "beq 0x2bae8",
            "ldr r0, [sp, 0x18]",
            "mov r1, 0",
            "mov r2, 0x20",
            "str r3, [sp, 8]",
            "bl sym.imp.memset",
            "ldr r3, [sp, 8]",
            "eor r6, r6, 1",
            "tst r3, r6",
            "beq 0x2bb04",
            "add r0, r4, 0x94",
            "mov r1, 0",
            "mov r2, 7",
            "bl sym.imp.memset",
            "mov r0, 0x9c",
            "bl fcn.00029eb4",
            "mov r1, r4",
            "mov r2, 0x9c",
            "str r0, [r8]",
            "bl sym.imp.memcpy",
            "ldr r0, [sp, 0x14]",
            "ldr r6, [r8]",
            "bl sym.imp.strdup",
            "ldr r3, [sb]",
            "str r0, [r6, 4]",
            "cmp r3, 0",
            "beq 0x2bb44",
            "ldr r0, str.I____Command__s_n",
            "ldr r1, [sp, 0x14]",
            "bl fcn.0002b51c",
            "ldr r8, [r8]",
            "mov r0, sl",
            "mov r1, 0x400",
            "ldr r2, [sp, 0x10]",
            "bl sym.imp.fgets",
            "cmp r0, 0",
            "beq 0x2bb70",
            "ldr r3, [sp, 0xc]",
            "subs r3, r3, 1",
            "str r3, [sp, 0xc]",
            "bne 0x2b984",
            "mov r3, 0",
            "str r3, [r8]",
            "ldr r3, [0x0002bbd4]",
            "ldr r2, [r3]",
            "str r2, [r5]",
            "str r5, [r3]",
            "ldr r3, [sp, 0xc]",
            "cmp r3, 0",
            "cmpne fp, 0",
            "bne 0x2bba4",
            "ldr r0, str.IMaximum_number_of_lines_reached_for_user__s_n",
            "mov r1, r7",
            "bl fcn.0002b51c",
            "ldr r0, [sp, 0x10]",
            "bl sym.imp.fclose",
            "add sp, sp, 0x134",
            "add sp, sp, 0x400",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00029898": {
        "function_address": "0x00029898",
        "instructions": [
            "tst r0, 1",
            "push {r4, r5, r6, lr}",
            "mov r5, r0",
            "beq 0x298b0",
            "ldr r0, [0x00029954]",
            "bl fcn.0002a358",
            "tst r5, 2",
            "beq 0x298d0",
            "mov r0, 0",
            "bl sym.imp.close",
            "mov r0, 1",
            "bl sym.imp.close",
            "mov r0, 2",
            "bl sym.imp.close",
            "mov r1, 2",
            "ldr r0, str._dev_null",
            "bl fcn.00029f9c",
            "b 0x298e8",
            "mov r0, r4",
            "bl sym.imp.dup",
            "cmp r0, 1",
            "mov r4, r0",
            "bls 0x298e0",
            "ands r6, r5, 8",
            "bne 0x29944",
            "bl fcn.00029870",
            "mov r0, r4",
            "bl sym.imp.close",
            "cmp r5, 0",
            "popeq {r4, r5, r6, pc}",
            "sub r4, r4, 1",
            "b 0x29948",
            "and r5, r5, 4",
            "cmp r4, 2",
            "bgt 0x2992c",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.00029f9c": {
        "function_address": "0x00029f9c",
        "instructions": [
            "movw r2, 0x1b6",
            "b fcn.00029f78"
        ]
    },
    "sym.imp.dup": {
        "function_address": "0x0000bb10",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x96c]!"
        ]
    },
    "sym.imp.setsid": {
        "function_address": "0x0000be34",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x754]!"
        ]
    },
    "fcn.0002bc4c": {
        "function_address": "0x0002bc4c",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "ldr r4, [0x0002bd28]",
            "ldr r3, [r4]",
            "b 0x2bc60",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x2bc78",
            "ldr r2, [r3, 0x14]",
            "cmp r2, 0",
            "bne 0x2bc5c",
            "b 0x2bd1c",
            "ldr r4, [0x0002bd2c]",
            "ldr r0, str.cron.update",
            "bl sym.imp.remove",
            "ldr r0, [r4]",
            "bl sym.imp.chdir",
            "cmp r0, 0",
            "bge 0x2bca0",
            "ldr r0, [0x0002bd34]",
            "ldr r1, [r4]",
            "bl fcn.0002b51c",
            "ldr r0, [0x0002bd38]",
            "bl sym.imp.opendir",
            "subs r5, r0, 0",
            "bne 0x2bcf4",
            "b 0x2bd10",
            "add r4, r0, 0x13",
            "mov r1, 0x2e",
            "mov r0, r4",
            "bl sym.imp.strchr",
            "cmp r0, 0",
            "bne 0x2bcf4",
            "mov r0, r4",
            "bl sym.imp.getpwnam",
            "cmp r0, 0",
            "beq 0x2bce8",
            "mov r0, r4",
            "bl fcn.0002b8b8",
            "b 0x2bcf4",
            "ldr r0, str._aignoring__s_n",
            "mov r1, r4",
            "bl fcn.0002b51c",
            "mov r0, r5",
            "bl sym.imp.readdir64",
            "cmp r0, 0",
            "bne 0x2bcb4",
            "mov r0, r5",
            "pop {r4, r5, r6, lr}",
            "b sym.imp.closedir",
            "ldr r0, aav.0x0005c3c4",
            "pop {r4, r5, r6, lr}",
            "b fcn.0002b51c",
            "ldr r0, [r3, 8]",
            "bl fcn.0002b46c",
            "b 0x2bc54"
        ]
    },
    "sym.imp.remove": {
        "function_address": "0x0000b90c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xac4]!"
        ]
    },
    "fcn.00054170": {
        "function_address": "0x00054170",
        "instructions": [
            "cmp r0, 0",
            "push {r4, r5, lr}",
            "sub sp, sp, 0x7c",
            "beq 0x54208",
            "movw r1, 0x241",
            "movw r2, 0x1b6",
            "bl sym.imp.open64",
            "subs r5, r0, 0",
            "blt 0x54208",
            "mov r1, sp",
            "bl sym.imp.fstat64",
            "cmp r0, 0",
            "movne r3, 0",
            "bne 0x541bc",
            "ldr r3, [sp, 0x10]",
            "and r3, r3, 0xf000",
            "cmp r3, 0x8000",
            "movne r3, 0",
            "moveq r3, 1",
            "ldr r2, [0x00054210]",
            "cmp r3, 0",
            "str r3, [r2]",
            "beq 0x54200",
            "add r4, sp, 0x68",
            "bl sym.imp.getpid",
            "mov r1, r4",
            "mov r2, 0xe",
            "bl fcn.0002a174",
            "mov r2, 0xa",
            "mov r3, r0",
            "strb r2, [r0]",
            "rsb r2, r4, 1",
            "mov r0, r5",
            "mov r1, r4",
            "add r2, r3, r2",
            "bl fcn.000274f4",
            "mov r0, r5",
            "bl sym.imp.close",
            "add sp, sp, 0x7c",
            "pop {r4, r5, pc}"
        ]
    },
    "fcn.0002a174": {
        "function_address": "0x0002a174",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sl, lr}",
            "subs sl, r2, 0",
            "mov r5, r0",
            "mov r4, r1",
            "beq 0x2a1ec",
            "ldr r6, [0x0002a1f4]",
            "mov r8, 0xa",
            "mov r7, 0",
            "mov r0, r5",
            "mov r1, r6",
            "bl fcn.00055000",
            "orrs r3, r0, r7",
            "moveq r3, 0",
            "movne r3, 1",
            "cmp r6, 1",
            "orreq r3, r3, 1",
            "cmp r3, 0",
            "beq 0x2a1d4",
            "subs sl, sl, 1",
            "beq 0x2a1ec",
            "add r7, r7, 1",
            "mls r5, r6, r0, r5",
            "add r0, r0, 0x30",
            "strb r0, [r4], 1",
            "mov r0, r6",
            "mov r1, 0xa",
            "bl fcn.00055000",
            "subs r8, r8, 1",
            "mov r6, r0",
            "bne 0x2a194",
            "mov r0, r4",
            "pop {r3, r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "fcn.0002bbdc": {
        "function_address": "0x0002bbdc",
        "instructions": [
            "push {r4, r5, lr}",
            "sub sp, sp, 0x104",
            "ldr r0, str.cron.update",
            "ldr r1, [0x0002bc44]",
            "bl sym.imp.fopen64",
            "subs r4, r0, 0",
            "beq 0x2bc38",
            "ldr r0, str.cron.update",
            "mov r5, sp",
            "bl sym.imp.remove",
            "b 0x2bc18",
            "ldr r1, str.__t_r_n",
            "mov r0, sp",
            "bl sym.imp.strtok",
            "bl fcn.0002b8b8",
            "mov r0, sp",
            "mov r1, 0x100",
            "mov r2, r4",
            "bl sym.imp.fgets",
            "cmp r0, 0",
            "bne 0x2bc08",
            "mov r0, r4",
            "bl sym.imp.fclose",
            "add sp, sp, 0x104",
            "pop {r4, r5, pc}"
        ]
    },
    "sym.imp.strtok": {
        "function_address": "0x0000bd5c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x7e4]!"
        ]
    },
    "fcn.0002c374": {
        "function_address": "0x0002c374",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r5, r0",
            "mov r6, r1",
            "bl sym.imp.getpwnam",
            "subs r4, r0, 0",
            "bne 0x2c398",
            "ldr r0, [0x0002c408]",
            "mov r1, r5",
            "bl fcn.00028900",
            "ldr r1, [r4]",
            "mov r2, 1",
            "ldr r0, [0x0002c40c]",
            "bl sym.imp.setenv",
            "ldr r1, [r4, 0x14]",
            "mov r2, 1",
            "ldr r0, aav.0x0005c4dc",
            "bl sym.imp.setenv",
            "ldr r1, [0x0002c414]",
            "mov r2, 1",
            "ldr r0, str.SHELL",
            "bl sym.imp.setenv",
            "mov r0, r4",
            "bl fcn.00051684"
        ]
    },
    "fcn.0002a018": {
        "function_address": "0x0002a018",
        "instructions": [
            "push {r4, lr}",
            "mov r1, 3",
            "mov r4, r0",
            "bl sym.imp.fcntl64",
            "mov r1, 4",
            "orr r2, r0, 0x800",
            "mov r0, r4",
            "pop {r4, lr}",
            "b sym.imp.fcntl64"
        ]
    },
    "fcn.0002ca84": {
        "function_address": "0x0002ca84",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r0",
            "bl fcn.0002ca64",
            "mov r2, r4",
            "ldr r3, [0x0002cab0]",
            "ldr r0, str.e_7m_.se_0m",
            "ldr r3, [r3]",
            "ldr r1, [r3, 0x18]",
            "sub r1, r1, 1",
            "pop {r4, lr}",
            "b sym.imp.printf"
        ]
    },
    "fcn.0002ca64": {
        "function_address": "0x0002ca64",
        "instructions": [
            "ldr r3, [0x0002ca7c]",
            "ldr r0, str.e__u_0He_K",
            "ldr r3, [r3]",
            "ldr r1, [r3, 0xc]",
            "add r1, r1, 2",
            "b sym.imp.printf"
        ]
    },
    "fcn.0002a03c": {
        "function_address": "0x0002a03c",
        "instructions": [
            "push {r4, lr}",
            "mov r1, 3",
            "mov r4, r0",
            "bl sym.imp.fcntl64",
            "mov r1, 4",
            "bic r2, r0, 0x800",
            "mov r0, r4",
            "pop {r4, lr}",
            "b sym.imp.fcntl64"
        ]
    },
    "fcn.0002cf24": {
        "function_address": "0x0002cf24",
        "instructions": [
            "ldr r3, obj.stdout",
            "push {r4, lr}",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x0002cf54]",
            "mov r1, 0",
            "ldr r2, [r3]",
            "ldr r0, [r2, 4]",
            "add r2, r2, 0x48",
            "pop {r4, lr}",
            "b sym.imp.tcsetattr"
        ]
    },
    "fcn.0002ce24": {
        "function_address": "0x0002ce24",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov sb, r0",
            "ldr r3, [0x0002cf10]",
            "add fp, sp, 0x24",
            "mov r7, 0",
            "mov r5, 0x7b",
            "ldr r0, [0x0002cf14]",
            "mov sl, 0x3f",
            "ldr r3, [r3]",
            "ldr r6, str._ABCDEFGHI_KLMNOPQRSTUVWXYZ___",
            "ldr r3, [r3, 0x18]",
            "add r3, r3, 0xe",
            "bic r3, r3, 7",
            "sub sp, sp, r3",
            "mov r4, sp",
            "bl sym.imp.printf",
            "b 0x2cef4",
            "ldr r1, aav.0x0005c6bc",
            "mov r0, sb",
            "bl sym.imp.strcspn",
            "subs r1, r0, 0",
            "beq 0x2ce9c",
            "ldrb r3, [sb, r1]",
            "add r8, sb, r1",
            "cmp r3, 0",
            "beq 0x2cf00",
            "mov r2, sb",
            "mov sb, r8",
            "ldr r0, aav.0x00061928",
            "bl sym.imp.printf",
            "mov r0, sb",
            "ldr r1, aav.0x0005c6bc",
            "bl sym.imp.strspn",
            "add r3, r4, 1",
            "mov r2, 0",
            "ldrb r1, [sb, r2]",
            "cmp r1, 0x7f",
            "strbeq sl, [r3, -1]",
            "beq 0x2ced0",
            "cmp r1, 0x9b",
            "ldrbne r1, [r6, r1]",
            "strbeq r5, [r3, -1]",
            "strbne r1, [r3, -1]",
            "add r2, r2, 1",
            "mov r1, r3",
            "cmp r0, r2",
            "add r3, r3, 1",
            "bne 0x2ceb0",
            "add sb, sb, r0",
            "strb r7, [r1]",
            "mov r0, r4",
            "bl fcn.0002ce14",
            "ldrb r3, [sb]",
            "cmp r3, 0",
            "bne 0x2ce68",
            "mov r0, sb",
            "bl sym.imp.puts",
            "sub sp, fp, 0x24",
            "pop {r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0002ce14": {
        "function_address": "0x0002ce14",
        "instructions": [
            "mov r1, r0",
            "ldr r0, [pc]",
            "b sym.imp.printf"
        ]
    },
    "fcn.0002cab8": {
        "function_address": "0x0002cab8",
        "instructions": [
            "ldr r3, [0x0002cdec]",
            "push {r0, r1, r2, r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "ldr r5, [r3]",
            "ldr r3, [0x0002cdf0]",
            "ldr sb, [r5, 0x18]",
            "ldr r3, [r3]",
            "ldrb r8, [r5, 0x44]",
            "tst r3, 8",
            "subne sb, sb, 8",
            "mov r0, sb",
            "bl fcn.00029e54"
        ]
    },
    "fcn.0002cf58": {
        "function_address": "0x0002cf58",
        "instructions": [
            "push {r0, r1, r2, r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov sb, r0",
            "ldr r8, obj.stdout",
            "mov r0, 1",
            "mov r4, 0",
            "add fp, sp, 7",
            "ldr sl, [0x0002d048]",
            "mov r7, r4",
            "bl fcn.00029eb4",
            "mov r5, r0",
            "ldr r0, [r8]",
            "bl sym.imp.fflush",
            "ldr r6, [sl]",
            "mov r1, 0",
            "add r2, r6, 0x84",
            "ldr r0, [r6, 4]",
            "bl sym.imp.tcsetattr",
            "strb r7, [sp, 7]",
            "mov r1, fp",
            "ldr r0, [r6, 4]",
            "mov r2, 1",
            "bl sym.imp.read",
            "ldrb r3, [sp, 7]",
            "cmp r3, 0xd",
            "bne 0x2cfc4",
            "mov r0, r5",
            "pop {r1, r2, r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "cmp r3, 0x7f",
            "moveq r3, 8",
            "strbeq r3, [sp, 7]",
            "subs r3, r4, 0",
            "movne r3, 1",
            "ldrb r2, [sp, 7]",
            "cmp r2, 8",
            "movne r3, 0",
            "cmp r3, 0",
            "beq 0x2cff8",
            "sub r4, r4, 1",
            "ldr r0, aav.0x0005b244",
            "bl sym.imp.printf",
            "ldrb r0, [sp, 7]",
            "cmp r0, 0x1f",
            "bls 0x2cf80",
            "ldr r3, [r6, 0x18]",
            "sub r3, r3, 1",
            "rsb r3, sb, r3",
            "cmp r4, r3",
            "bhs 0x2cf80",
            "ldr r1, [r8]",
            "bl sym.imp.fputc",
            "ldrb r3, [sp, 7]",
            "mov r0, r5",
            "strb r3, [r5, r4]",
            "add r4, r4, 1",
            "add r1, r4, 1",
            "bl fcn.00029e84"
        ]
    },
    "fcn.00012ed0": {
        "function_address": "0x00012ed0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r4, 0",
            "ldr r5, [r0]",
            "ldr r3, aav.0x00059de8",
            "cmp r5, 0",
            "movne r5, r0",
            "moveq r5, r3",
            "ldr r0, [r5]",
            "mov r7, r5",
            "ldrb r3, [r0]",
            "cmp r3, 0x2d",
            "bne 0x12f0c",
            "ldrb r6, [r0, 1]",
            "cmp r6, 0",
            "beq 0x12f20",
            "mov r1, 0",
            "bl fcn.00029fd0",
            "subs r6, r0, 0",
            "movlt r4, 1",
            "blt 0x12f48",
            "mov r0, r6",
            "mov r1, 1",
            "bl fcn.000270ec",
            "cmp r6, 0",
            "mov r8, r1",
            "beq 0x12f40",
            "mov r0, r6",
            "bl sym.imp.close",
            "cmp r8, 0",
            "movlt r4, 1",
            "ldr r3, [r7, 4]",
            "add r5, r5, 4",
            "cmp r3, 0",
            "bne 0x12eec",
            "mov r0, r4",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.0002d1bc": {
        "function_address": "0x0002d1bc",
        "instructions": [
            "ldr r3, [0x0002d280]",
            "push {r4, r5, r6, lr}",
            "ldr r4, [r3]",
            "ldr r3, [r4, 0x2c]",
            "cmp r3, 0",
            "movne r5, 0",
            "bne 0x2d1ec",
            "b 0x2d208",
            "ldr r3, [r4, 0x2c]",
            "ldr r0, [r3, r5, lsl 2]",
            "add r5, r5, 1",
            "bl sym.imp.free",
            "ldr r3, [r4, 0x10]",
            "cmp r5, r3",
            "bls 0x2d1dc",
            "ldr r0, [r4, 0x2c]",
            "bl sym.imp.free",
            "mov r3, 0",
            "str r3, [r4, 0x2c]",
            "ldr r0, [r4, 0x3c]",
            "mov r5, 0",
            "mvn r3, 0",
            "str r5, [r4]",
            "str r3, [r4, 0x10]",
            "cmp r0, r5",
            "str r5, [r4, 0x14]",
            "beq 0x2d250",
            "mov r1, r5",
            "bl fcn.00029f9c",
            "mov r1, r5",
            "mov r6, r0",
            "bl sym.imp.dup2",
            "cmp r6, r5",
            "beq 0x2d25c",
            "mov r0, r6",
            "bl sym.imp.close",
            "b 0x2d25c",
            "ldr r0, str.standard_input",
            "bl fcn.00029ed8",
            "str r0, [r4, 0x3c]",
            "mov r3, 0",
            "str r3, [r4, 0x20]",
            "str r3, [r4, 0x24]",
            "str r3, [r4, 8]",
            "add r3, r3, 1",
            "str r3, [r4, 0x44]",
            "bl fcn.0002cab8"
        ]
    },
    "fcn.0002d450": {
        "function_address": "0x0002d450",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0xa4",
            "ldr r8, [0x0002d61c]",
            "add r7, sp, 0x10",
            "add r2, r7, 0x7c",
            "ldr sl, [0x0002d620]",
            "str r2, [sp, 0xc]",
            "mov r5, 0",
            "add sb, sp, 0x90",
            "mov r6, r5",
            "mov fp, 1",
            "mov r0, sb",
            "mov r1, 0",
            "mov r2, 0x10",
            "bl sym.imp.memset",
            "ldr r3, obj.stdout",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "add r3, sp, 0xc",
            "ldr r2, [sp, 0xc]",
            "str r5, [r3, 4]!",
            "cmp r3, r2",
            "bne 0x2d49c",
            "ldr r4, [r8]",
            "ldr r2, [r4]",
            "ldr r3, [r4, 0xc]",
            "add r3, r2, r3",
            "ldr r2, [r4, 0x10]",
            "cmp r2, r3",
            "bhi 0x2d4dc",
            "ldr r3, [r4, 0x1c]",
            "cmp r3, 0",
            "ldrgt r3, [sp, 0x10]",
            "orrgt r3, r3, 1",
            "strgt r3, [sp, 0x10]",
            "ldr r0, [r4, 4]",
            "add r2, sp, 0xa0",
            "and r1, r0, 0x1f",
            "lsr r3, r0, 5",
            "add r3, r2, r3, lsl 2",
            "ldr r2, [r3, -0x90]",
            "orr r2, r2, fp, lsl r1",
            "mov r1, 0",
            "str r2, [r3, -0x90]",
            "add r2, r4, 0x84",
            "bl sym.imp.tcsetattr",
            "ldr r0, [r4, 4]",
            "mov r3, r6",
            "mov r1, r7",
            "mov r2, r6",
            "str r6, [sp]",
            "add r0, r0, 1",
            "bl sym.imp.select",
            "strb r5, [sp, 0x90]",
            "ldr r0, [r4, 4]",
            "bl fcn.0002a018",
            "mov r1, sb",
            "mov r2, 0x10",
            "ldr r0, [r4, 4]",
            "bl sym.imp.read",
            "mov r3, r0",
            "ldr r0, [r4, 4]",
            "str r3, [sp, 8]",
            "bl fcn.0002a03c",
            "ldr r3, [sp, 8]",
            "cmp r3, 0",
            "bge 0x2d578",
            "ldr r3, [sl]",
            "ldr r3, [r3]",
            "cmp r3, 0xb",
            "bne 0x2d578",
            "bl fcn.0002cab8",
            "ldrb r4, [sp, 0x90]",
            "cmp r4, 0x1b",
            "bne 0x2d5e0",
            "ldrb r3, [sp, 0x91]",
            "cmp r3, 0x5b",
            "bne 0x2d5e0",
            "bl fcn.0002cf24",
            "ldrb r3, [sp, 0x92]",
            "sub r0, r3, 0x41",
            "cmp r0, 3",
            "addls r0, r0, 0x14",
            "bls 0x2d614",
            "sub r0, r3, 0x35",
            "cmp r0, 3",
            "addls r0, r0, 0x18",
            "bls 0x2d614",
            "cmp r3, 0x48",
            "beq 0x2d608",
            "cmp r3, 0x31",
            "beq 0x2d608",
            "cmp r3, 0x46",
            "beq 0x2d610",
            "cmp r3, 0x34",
            "moveq r0, 0x1b",
            "movne r0, 0",
            "b 0x2d614",
            "subs r3, r4, 0xd",
            "movne r3, 1",
            "cmp r4, 0x1f",
            "movhi r3, 0",
            "cmp r3, 0",
            "beq 0x2d600",
            "cmp r4, 8",
            "bne 0x2d46c",
            "bl fcn.0002cf24",
            "b 0x2d610",
            "mov r0, 0x1a",
            "b 0x2d614",
            "mov r0, r4",
            "add sp, sp, 0xa4",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0002d140": {
        "function_address": "0x0002d140",
        "instructions": [
            "ldr r3, [0x0002d1b8]",
            "push {r4, lr}",
            "ldr r2, [r3]",
            "mov r3, 0",
            "ldr r0, [r2, 0xc]",
            "b 0x2d16c",
            "ldr r4, [r2, 0x2c]",
            "ldr ip, [r2, 0x28]",
            "ldr r1, [r4, r1, lsl 2]",
            "str r1, [ip, r3, lsl 2]",
            "add r3, r3, 1",
            "cmp r3, r0",
            "bls 0x2d17c",
            "lsl r1, r3, 2",
            "b 0x2d1a8",
            "ldr r1, [r2]",
            "ldr ip, [r2, 0x10]",
            "add r1, r3, r1",
            "cmp r1, ip",
            "bls 0x2d158",
            "b 0x2d174",
            "ldr ip, [r2, 0x28]",
            "add r3, r3, 1",
            "ldr r4, [r2, 0x30]",
            "str r4, [ip, r1]",
            "add r1, r1, 4",
            "cmp r3, r0",
            "bls 0x2d194",
            "pop {r4, lr}",
            "b fcn.0002d080"
        ]
    },
    "fcn.0002d354": {
        "function_address": "0x0002d354",
        "instructions": [
            "ldr r3, [0x0002d3d4]",
            "push {r4, r5, r6, lr}",
            "mov r5, r0",
            "ldr r4, [r3]",
            "ldr r3, [r4]",
            "add r3, r3, r0",
            "str r3, [r4]",
            "bl fcn.0002cab8"
        ]
    },
    "fcn.0002d3d8": {
        "function_address": "0x0002d3d8",
        "instructions": [
            "ldr r3, [0x0002d408]",
            "push {r4, lr}",
            "ldr r3, [r3]",
            "ldr r2, [r3]",
            "rsb r2, r0, r2",
            "cmp r2, 0",
            "str r2, [r3]",
            "movlt r2, 0",
            "strlt r2, [r3]",
            "bl fcn.0002cab8"
        ]
    },
    "fcn.0002d40c": {
        "function_address": "0x0002d40c",
        "instructions": [
            "ldr r3, [0x0002d44c]",
            "push {r4, r5, r6, lr}",
            "bic r4, r0, r0, asr 31",
            "ldr r5, [r3]",
            "str r4, [r5]",
            "bl fcn.0002cab8"
        ]
    },
    "fcn.0002d080": {
        "function_address": "0x0002d080",
        "instructions": [
            "mov r1, 0",
            "push {r4, r5, r6, lr}",
            "ldr r0, str.e__u__uH",
            "mov r2, r1",
            "mov r5, 0",
            "bl sym.imp.printf",
            "ldr r3, [0x0002d130]",
            "ldr r4, [r3]",
            "b 0x2d0b4",
            "ldr r3, [r4, 0x28]",
            "ldr r0, [r3, r5, lsl 2]",
            "add r5, r5, 1",
            "bl fcn.0002ce24",
            "ldr r3, [r4, 0xc]",
            "cmp r5, r3",
            "bls 0x2d0a4",
            "bl fcn.0002ca64",
            "ldr r3, [r4]",
            "cmp r3, 0",
            "beq 0x2d0f8",
            "ldr r1, [r4, 0x10]",
            "ldr r2, [r4, 0xc]",
            "rsb r2, r2, r1",
            "cmp r3, r2",
            "bhs 0x2d100",
            "ldr r3, obj.stdout",
            "mov r0, 0x3a",
            "ldr r1, [r3]",
            "pop {r4, r5, r6, lr}",
            "b sym.imp.fputc",
            "ldr r1, [r4, 0x3c]",
            "b 0x2d104",
            "ldr r1, str._END_",
            "ldr r3, [r4, 0x34]",
            "cmp r3, 1",
            "bls 0x2d120",
            "ldr r0, str.e_7m_s__file__i_of__i_e_0m",
            "ldr r2, [r4, 0x38]",
            "pop {r4, r5, r6, lr}",
            "b sym.imp.printf",
            "mov r0, r1",
            "pop {r4, r5, r6, lr}",
            "b fcn.0002ce14"
        ]
    },
    "fcn.0002d288": {
        "function_address": "0x0002d288",
        "instructions": [
            "ldr r3, [0x0002d2fc]",
            "subs r2, r0, 0",
            "push {r4, lr}",
            "movle r1, 1",
            "ldr r4, [r3]",
            "ldr r3, [r4, 0x38]",
            "ldrgt r1, [r4, 0x34]",
            "cmp r3, r1",
            "beq 0x2d2e4",
            "cmp r2, 0",
            "ldr r0, [r4, 0x3c]",
            "addne r3, r2, r3",
            "moveq r3, 1",
            "str r3, [r4, 0x38]",
            "bl sym.imp.free",
            "ldr r2, [r4, 0x38]",
            "ldr r3, [r4, 0x40]",
            "sub r2, r2, 1",
            "ldr r0, [r3, r2, lsl 2]",
            "bl fcn.00029ed8",
            "str r0, [r4, 0x3c]",
            "pop {r4, lr}",
            "b fcn.0002d1bc",
            "ldr r3, str.No_next_file",
            "cmp r2, 0",
            "ldr r0, str.No_previous_file",
            "movgt r0, r3",
            "pop {r4, lr}",
            "b fcn.0002ca84"
        ]
    },
    "fcn.0002d308": {
        "function_address": "0x0002d308",
        "instructions": [
            "push {r4, lr}",
            "ldr r0, str.Examine:",
            "bl fcn.0002ca84",
            "ldr r3, [0x0002d350]",
            "ldr r4, [r3]",
            "ldr r0, [r4, 0x3c]",
            "bl sym.imp.free",
            "mov r0, 9",
            "bl fcn.0002cf58",
            "ldr r3, [r4, 0x40]",
            "str r0, [r4, 0x3c]",
            "str r0, [r3]",
            "mov r3, 1",
            "str r3, [r4, 0x38]",
            "str r3, [r4, 0x34]",
            "pop {r4, lr}",
            "b fcn.0002d1bc"
        ]
    },
    "fcn.0002d060": {
        "function_address": "0x0002d060",
        "instructions": [
            "push {r3, lr}",
            "mov r0, 0xa",
            "ldr r3, obj.stdout",
            "ldr r1, [r3]",
            "bl sym.imp.fputc",
            "mov r0, 0",
            "bl fcn.00027218"
        ]
    },
    "fcn.0002deb4": {
        "function_address": "0x0002deb4",
        "instructions": [
            "push {r4, lr}",
            "mov r0, 0x30",
            "bl fcn.00029e54"
        ]
    },
    "fcn.0002de60": {
        "function_address": "0x0002de60",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r6, r0",
            "mov r8, r1",
            "ldrh r7, [r0, 0x30]",
            "mov r4, 0",
            "b 0x2de98",
            "ldr r3, [r6, 0x38]",
            "mov r1, r8",
            "ldr r5, [r3, r4, lsl 2]",
            "ldr r0, [r5, 0x28]",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x2dea4",
            "add r4, r4, 1",
            "cmp r4, r7",
            "blt 0x2de78",
            "mov r5, 0",
            "mov r0, r5",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.0002e3d0": {
        "function_address": "0x0002e3d0",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r6, r1",
            "ldr r1, str..modinfo",
            "bl fcn.0002de60",
            "cmp r0, 0",
            "ldrne r4, [r0, 0x2c]",
            "ldrne r7, [r0, 0x14]",
            "addne r7, r4, r7",
            "bne 0x2e47c",
            "b 0x2e484",
            "mov r0, r4",
            "mov r1, 0x3d",
            "bl sym.imp.strchr",
            "subs r5, r0, 0",
            "beq 0x2e464",
            "mov r0, r4",
            "ldr r1, [0x0002e498]",
            "rsb r2, r4, r5",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "bne 0x2e464",
            "ldr r4, aav.0x0005c7f4",
            "cmp r6, 0",
            "addne r3, r5, 1",
            "add r5, r5, 1",
            "strne r3, [r6]",
            "add r6, r4, 0x14",
            "b 0x2e454",
            "mov r0, r5",
            "ldr r1, [r4, 4]!",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "popeq {r3, r4, r5, r6, r7, pc}",
            "cmp r4, r6",
            "bne 0x2e440",
            "mov r0, 2",
            "pop {r3, r4, r5, r6, r7, pc}",
            "mov r0, r4",
            "mov r1, 0",
            "bl sym.imp.strchr",
            "cmp r0, 0",
            "beq 0x2e48c",
            "add r4, r0, 1",
            "cmp r4, r7",
            "blo 0x2e3f8",
            "mov r0, 1",
            "pop {r3, r4, r5, r6, r7, pc}",
            "mov r0, 1",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.0002dd20": {
        "function_address": "0x0002dd20",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r5, r0",
            "ldr r3, [r0, 0x50]",
            "mov r0, r1",
            "mov r6, r1",
            "blx r3",
            "movw r1, 0x209",
            "bl fcn.000550a8",
            "add r1, r5, r1, lsl 2",
            "ldr r4, [r1, 0x5c]",
            "b 0x2dd68",
            "ldr r3, [r5, 0x4c]",
            "mov r1, r6",
            "ldr r0, [r4, 4]",
            "blx r3",
            "cmp r0, 0",
            "beq 0x2dd70",
            "ldr r4, [r4]",
            "cmp r4, 0",
            "bne 0x2dd4c",
            "mov r0, r4",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.0002ded8": {
        "function_address": "0x0002ded8",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r5, r0",
            "mov fp, r3",
            "ldr r3, [r0, 0x50]",
            "mov r0, r1",
            "mov r6, r1",
            "mov r8, r2",
            "ldr r7, [sp, 0x28]",
            "blx r3",
            "movw r1, 0x209",
            "ubfx sl, fp, 4, 4",
            "bl fcn.000550a8",
            "add r3, r5, r1, lsl 2",
            "mov sb, r1",
            "ldr r4, [r3, 0x5c]",
            "b 0x2e00c",
            "ldr r3, [r5, 0x4c]",
            "mov r1, r6",
            "ldr r0, [r4, 4]",
            "blx r3",
            "cmp r0, 0",
            "bne 0x2e008",
            "cmp r7, 0",
            "ldr r2, [r4, 0x10]",
            "ldr r1, [r4, 0x14]",
            "beq 0x2e094",
            "cmp r2, 0",
            "beq 0x2e078",
            "ubfx r3, r1, 4, 4",
            "cmp sl, 1",
            "cmpeq r3, 0",
            "bne 0x2df9c",
            "bl fcn.0002deb4",
            "ldr r3, [r4]",
            "add sb, sb, 0x16",
            "add r5, r5, sb, lsl 2",
            "str r3, [r0]",
            "mvn r3, 0",
            "str r3, [r0, 0x18]",
            "add r2, r5, 4",
            "ldr r3, [r5, 4]",
            "b 0x2df88",
            "mov r2, r3",
            "ldr r3, [r3]",
            "cmp r3, r4",
            "bne 0x2df80",
            "str r0, [r2]",
            "mov r4, r0",
            "b 0x2e078",
            "cmp sl, 0",
            "bne 0x2dfbc",
            "bl fcn.0002deb4",
            "mvn r3, 0",
            "mov r4, r0",
            "str sl, [r0]",
            "str r3, [r0, 0x18]",
            "b 0x2e070",
            "cmp sl, 2",
            "beq 0x2e094",
            "cmp r3, 2",
            "beq 0x2e078",
            "movw r3, 0xfff2",
            "and r1, r1, 0xf",
            "cmp r1, 1",
            "cmpls r7, r3",
            "beq 0x2e094",
            "and r1, fp, 0xf",
            "cmp r1, 1",
            "cmpls r2, r3",
            "beq 0x2e078",
            "cmp r7, 0x10000",
            "bge 0x2e094",
            "ldr r0, str._s_multiply_defined",
            "mov r1, r6",
            "bl fcn.00027184",
            "b 0x2e094",
            "ldr r4, [r4]",
            "cmp r4, 0",
            "bne 0x2df18",
            "add sb, sb, 0x16",
            "rsbs sl, sl, 1",
            "movlo sl, 0",
            "add sb, r5, sb, lsl 2",
            "bl fcn.0002deb4",
            "ldr r3, [sb, 4]",
            "mov r4, r0",
            "str r3, [r0]",
            "mvn r3, 0",
            "cmp r8, r3",
            "str r0, [sb, 4]",
            "moveq sl, 0",
            "str r3, [r0, 0x18]",
            "cmp sl, 0",
            "beq 0x2e078",
            "ldr r3, [r5, 0x54]",
            "cmp r8, r3",
            "blo 0x2e070",
            "ldr r0, str.local_symbol__s_with_index__ld_exceeds_local_symtab_size__ld",
            "mov r1, r6",
            "mov r2, r8",
            "bl fcn.00027184",
            "b 0x2e078",
            "ldr r3, [r5, 0x58]",
            "str r4, [r3, r8, lsl 2]",
            "ldr r3, [sp, 0x2c]",
            "str r6, [r4, 4]",
            "str r7, [r4, 0x10]",
            "str r3, [r4, 8]",
            "ldr r3, [sp, 0x30]",
            "str fp, [r4, 0x14]",
            "str r3, [r4, 0xc]",
            "mov r0, r4",
            "pop {r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0002dde8": {
        "function_address": "0x0002dde8",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r4, r0",
            "ldr r6, [r0, 0x28]",
            "ldr r5, [r0, 8]",
            "ldrb r3, [r6]",
            "cmp r3, 0x2e",
            "bne 0x2de30",
            "mov r0, r6",
            "bl sym.imp.strlen",
            "cmp r0, 0xa",
            "bne 0x2de30",
            "add r0, r6, 5",
            "ldr r1, [0x0002de5c]",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "movne r0, 0x20",
            "moveq r0, 0",
            "b 0x2de34",
            "mov r0, 0x20",
            "tst r5, 2",
            "ldr r3, [r4, 4]",
            "orrne r0, r0, 0x10",
            "tst r5, 1",
            "orreq r0, r0, 8",
            "tst r5, 4",
            "orrne r0, r0, 4",
            "cmp r3, 8",
            "orrne r0, r0, 2",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.0002e874": {
        "function_address": "0x0002e874",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r4, r0",
            "mov r0, r1",
            "mov r6, r1",
            "bl fcn.0002dde8",
            "mov r7, r0",
            "b 0x2e8a4",
            "mov r0, r5",
            "bl fcn.0002dde8",
            "cmp r0, r7",
            "blt 0x2e8b0",
            "add r4, r5, 0x30",
            "ldr r5, [r4]",
            "cmp r5, 0",
            "bne 0x2e890",
            "str r5, [r6, 0x30]",
            "str r6, [r4]",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.0002e8bc": {
        "function_address": "0x0002e8bc",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r5, r1",
            "ldrh sl, [r0, 0x30]",
            "mov r4, r0",
            "mov r8, r3",
            "mov r6, r2",
            "add r1, sl, 1",
            "strh r1, [r0, 0x30]",
            "lsl r1, r1, 2",
            "ldr r0, [r0, 0x38]",
            "bl fcn.00029e84"
        ]
    },
    "fcn.0002deac": {
        "function_address": "0x0002deac",
        "instructions": [
            "mov r0, 0x38",
            "b fcn.00029e54"
        ]
    },
    "fcn.0002ddb4": {
        "function_address": "0x0002ddb4",
        "instructions": [
            "cmp r1, 0",
            "push {r3, r4, r5, lr}",
            "mov r4, r0",
            "ldr r5, [r0, 0x14]",
            "beq 0x2dddc",
            "add r1, r1, r5",
            "ldr r0, [r0, 0x2c]",
            "str r1, [r4, 0x14]",
            "bl fcn.00029e84",
            "ldr r0, [r4, 0x2c]",
            "add r0, r0, r5",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.0002e308": {
        "function_address": "0x0002e308",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r4, r0",
            "mov r0, r1",
            "mov r5, r1",
            "bl sym.imp.strlen",
            "ldr r1, str..modinfo",
            "mov r6, r0",
            "mov r0, r4",
            "bl fcn.0002de60",
            "subs r4, r0, 0",
            "ldrne sl, [r4, 0x2c]",
            "ldrne r8, [r4, 0x14]",
            "addne r8, sl, r8",
            "bne 0x2e3b8",
            "b 0x2e3c4",
            "mov r1, 0x3d",
            "mov r0, sl",
            "bl sym.imp.strchr",
            "mov r1, 0",
            "mov sb, r0",
            "mov r0, sl",
            "add r4, sl, r6",
            "bl sym.imp.strchr",
            "cmp sb, 0",
            "mov r7, r0",
            "beq 0x2e398",
            "cmp r4, sb",
            "bne 0x2e3b4",
            "mov r0, sl",
            "mov r1, r5",
            "mov r2, r6",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "bne 0x2e3b4",
            "add r4, r4, 1",
            "b 0x2e3c4",
            "cmp r4, r0",
            "bne 0x2e3b4",
            "mov r0, sl",
            "mov r1, r5",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x2e3c4",
            "add sl, r7, 1",
            "cmp sl, r8",
            "blo 0x2e344",
            "mov r4, 0",
            "mov r0, r4",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "fcn.0002e950": {
        "function_address": "0x0002e950",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sl, lr}",
            "mov r5, r0",
            "mov r0, r3",
            "mov r7, r1",
            "mov sl, r2",
            "mov r8, r3",
            "bl sym.imp.strlen",
            "add r6, r0, 1",
            "mov r0, 0x10",
            "bl fcn.00029e54"
        ]
    },
    "fcn.0002efb0": {
        "function_address": "0x0002efb0",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r4, r0",
            "mov r0, 0x10",
            "mov r7, r3",
            "mov r5, r1",
            "mov r6, r2",
            "bl fcn.00029e54"
        ]
    },
    "fcn.00029094": {
        "function_address": "0x00029094",
        "instructions": [
            "push {r0, r1, r4, r5, r6, r7, r8, sl, fp, lr}",
            "subs r5, r1, 0",
            "mov r1, 0",
            "ldrne r4, [r5]",
            "mvneq r4, 0x80000000",
            "mov r8, r0",
            "bl fcn.00029f9c",
            "mov r3, 2",
            "mov r2, 0",
            "str r3, [sp]",
            "mov r3, 0",
            "mov r6, r0",
            "mov r7, 0",
            "bl fcn.0002a0c4",
            "movw r2, 0x3ff",
            "mov r3, 0",
            "orr fp, r1, r3",
            "orr sl, r0, r2",
            "mov r3, 0",
            "mov r0, r6",
            "mov r2, 0",
            "str r7, [sp]",
            "bl fcn.0002a0c4",
            "cmp r7, fp",
            "bgt 0x29104",
            "bne 0x29108",
            "cmp r4, sl",
            "bls 0x29108",
            "mov r4, sl",
            "add r0, r4, 1",
            "bl fcn.00029e54"
        ]
    },
    "fcn.0002f84c": {
        "function_address": "0x0002f84c",
        "instructions": [
            "push {r0, r1, r2, r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r7, r1",
            "ldr r4, [r1, 4]",
            "cmp r4, 0",
            "bne 0x2f864",
            "bl fcn.0000c5e0",
            "mov r0, 1",
            "add r7, r7, 8",
            "bl fcn.00029eb4",
            "mov r6, 0",
            "mov r5, r0",
            "ldr sl, [0x0002f968]",
            "ldr r8, str.__s_",
            "b 0x2f8cc",
            "bl sym.imp.strlen",
            "add r1, r6, 4",
            "add r1, r1, r0",
            "mov r0, r5",
            "bl fcn.00029e84",
            "ldr r0, [r7], 4",
            "cmp r0, 0",
            "bne 0x2f884",
            "add r1, sp, 8",
            "mvn r3, 0x80000000",
            "str r3, [r1, -4]!",
            "mov r0, r4",
            "bl fcn.00029094"
        ]
    },
    "sym.imp.syscall": {
        "function_address": "0x0000b834",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xb54]!"
        ]
    },
    "fcn.0002f2ac": {
        "function_address": "0x0002f2ac",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "add fp, sp, 0x20",
            "sub sp, sp, 0x1c",
            "mov r8, r0",
            "movw r0, 0x888",
            "bl fcn.00029e54"
        ]
    },
    "sym.imp.fseek": {
        "function_address": "0x0000c140",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x54c]!"
        ]
    },
    "sym.imp.fread": {
        "function_address": "0x0000bc9c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x864]!"
        ]
    },
    "fcn.0002e4a0": {
        "function_address": "0x0002e4a0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r2",
            "sub sp, sp, 0x14",
            "mov r8, r1",
            "mov r5, 0",
            "mov r1, 0",
            "mov r7, r0",
            "mov sb, r3",
            "add r4, r4, 8",
            "mov r6, r5",
            "bl fcn.0002e3d0",
            "mov fp, r0",
            "b 0x2e560",
            "ldr sl, [r4, -4]",
            "mov r2, 8",
            "ldr r1, str.GPLONLY_",
            "mov r0, sl",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "bne 0x2e500",
            "cmp fp, 0",
            "bne 0x2e558",
            "add sl, sl, 8",
            "str sl, [r4, -4]",
            "ldr sl, [r4, -4]",
            "mov r0, r7",
            "mov r1, sl",
            "bl fcn.0002dd20",
            "cmp r0, 0",
            "beq 0x2e558",
            "ldrb r3, [r0, 0x14]",
            "lsrs r3, r3, 4",
            "beq 0x2e558",
            "str r8, [sp]",
            "mov r0, r7",
            "ldr r3, [r4, -8]",
            "mov r1, sl",
            "mvn r2, 0",
            "str r3, [sp, 4]",
            "mov r3, 0",
            "str r3, [sp, 8]",
            "add r3, r3, 0x10",
            "bl fcn.0002ded8",
            "ldr r3, [r0, 0x10]",
            "cmp r3, r8",
            "moveq r5, 1",
            "add r6, r6, 1",
            "add r4, r4, 8",
            "cmp r6, sb",
            "blo 0x2e4d4",
            "mov r0, r5",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0002e0a4": {
        "function_address": "0x0002e0a4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sl, fp, lr}",
            "add ip, r0, 0x58",
            "mov r4, r0",
            "movw r5, 0xfff2",
            "movw r0, 0x209",
            "add fp, sp, 0x1c",
            "mov r3, 0",
            "sub sp, sp, 8",
            "str r3, [fp, -0x20]",
            "ldr r3, [ip, 4]!",
            "b 0x2e128",
            "ldr r2, [r3, 0x10]",
            "cmp r2, r5",
            "subeq r2, fp, 0x1c",
            "ldreq r1, [r2, -4]!",
            "beq 0x2e104",
            "b 0x2e124",
            "ldr r6, [r1, 4]",
            "ldr r7, [r3, 0xc]",
            "ldr r6, [r6, 0xc]",
            "cmp r7, r6",
            "bls 0x2e10c",
            "mov r2, r1",
            "ldr r1, [r1]",
            "cmp r1, 0",
            "bne 0x2e0e8",
            "sub sp, sp, 0x10",
            "ldr r6, [r2]",
            "mov r1, sp",
            "str r3, [sp, 4]",
            "str r6, [sp]",
            "str sp, [r2]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "bne 0x2e0d0",
            "subs r0, r0, 1",
            "bne 0x2e0c8",
            "mov r0, 1",
            "movw r5, 0xfff2",
            "b 0x2e1b8",
            "ldr r3, [r4, 0x58]",
            "ldr r2, [r3, r0, lsl 2]",
            "cmp r2, 0",
            "beq 0x2e1b4",
            "ldr r3, [r2, 0x10]",
            "cmp r3, r5",
            "subeq r3, fp, 0x1c",
            "ldreq r1, [r3, -4]!",
            "beq 0x2e1ac",
            "b 0x2e1b4",
            "ldr ip, [r1, 4]",
            "cmp r2, ip",
            "beq 0x2e1b4",
            "ldr r6, [r2, 0xc]",
            "ldr ip, [ip, 0xc]",
            "cmp r6, ip",
            "bhs 0x2e1a4",
            "ldr ip, [r3]",
            "sub sp, sp, 0x10",
            "str r2, [sp, 4]",
            "mov r1, sp",
            "str ip, [sp]",
            "str sp, [r3]",
            "b 0x2e1b4",
            "mov r3, r1",
            "ldr r1, [r1]",
            "cmp r1, 0",
            "bne 0x2e16c",
            "add r0, r0, 1",
            "ldr r3, [r4, 0x54]",
            "cmp r0, r3",
            "blo 0x2e144",
            "ldr r6, [fp, -0x20]",
            "cmp r6, 0",
            "ldrhne r3, [r4, 0x30]",
            "movne r5, 0",
            "bne 0x2e1f4",
            "b 0x2e2a8",
            "ldr r2, [r4, 0x38]",
            "ldr r2, [r2, r5, lsl 2]",
            "ldr r2, [r2, 4]",
            "cmp r2, 8",
            "beq 0x2e1fc",
            "add r5, r5, 1",
            "cmp r5, r3",
            "blo 0x2e1dc",
            "cmp r5, r3",
            "bne 0x2e254",
            "add r8, r5, 1",
            "ldr r0, [r4, 0x38]",
            "lsl r1, r8, 2",
            "bl fcn.00029e84",
            "ldr r3, [r4, 0x38]",
            "ldr r2, [r3, r5, lsl 2]",
            "ldr r3, [r2, 0x14]",
            "ldr r0, [r2, 0x20]",
            "ldr r1, [r6, 4]",
            "ldr r6, [r6]",
            "ldr ip, [r1, 8]",
            "str r5, [r1, 0x10]",
            "cmp r0, ip",
            "movlo r0, ip",
            "sub ip, ip, 1",
            "tst r3, ip",
            "orrne r3, r3, ip",
            "addne r3, r3, 1",
            "cmp r6, 0",
            "str r3, [r1, 8]",
            "ldr r1, [r1, 0xc]",
            "add r3, r3, r1",
            "bne 0x2e264",
            "str r3, [r2, 0x14]",
            "str r0, [r2, 0x20]",
            "mov r6, 0",
            "mov r7, 1",
            "b 0x2e2f0",
            "ldr r3, [r4, 0x38]",
            "ldr r5, [r3, r6, lsl 2]",
            "ldr r3, [r5, 4]",
            "cmp r3, 8",
            "bne 0x2e2ec",
            "ldr r0, [r5, 0x14]",
            "cmp r0, 0",
            "beq 0x2e2e4",
            "bl fcn.00029e54",
            "str r0, [r5, 0x2c]",
            "str r7, [r5, 4]",
            "add r6, r6, 1",
            "ldrh r3, [r4, 0x30]",
            "cmp r6, r3",
            "blo 0x2e2b4",
            "sub sp, fp, 0x1c",
            "pop {r4, r5, r6, r7, r8, sl, fp, pc}"
        ]
    },
    "fcn.0002f704": {
        "function_address": "0x0002f704",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r5, r3",
            "lsr r3, r0, 0x1f",
            "sub sp, sp, 0x50",
            "mov r4, r0",
            "cmp r2, 0",
            "movne r3, 0",
            "andeq r3, r3, 1",
            "cmp r3, 0",
            "bne 0x2f7b8",
            "ldr r6, [0x0002f7c0]",
            "ldr r3, [sp, 0x64]",
            "ldr r0, str.Warning:_loading__s_will_taint_the_kernel:__s_s_n",
            "ldr r2, [sp, 0x60]",
            "bl sym.imp.printf",
            "ldr r3, [r6]",
            "cmp r3, 0",
            "bne 0x2f760",
            "ldr r0, str.__See__s_for_information_about_tainted_modules_n",
            "ldr r1, str.http:__www.tux.org_lkml_export_tainted",
            "bl sym.imp.printf",
            "mov r3, 1",
            "str r3, [r6]",
            "cmp r4, 0",
            "blt 0x2f7b8",
            "mov r1, sp",
            "mov r2, 0x4f",
            "mov r0, r4",
            "mov r6, sp",
            "bl sym.imp.read",
            "mov r1, 0",
            "mov r2, 0xa",
            "mov r0, sp",
            "strb r1, [sp, 0x4f]",
            "bl sym.imp.strtoul",
            "ldr r1, aav.0x0005cf54",
            "orr r2, r0, r5",
            "mov r0, sp",
            "bl sym.imp.sprintf",
            "mov r0, sp",
            "bl sym.imp.strlen",
            "mov r1, sp",
            "mov r2, r0",
            "mov r0, r4",
            "bl sym.imp.write",
            "add sp, sp, 0x50",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.0002e9e4": {
        "function_address": "0x0002e9e4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub r1, r1, 1",
            "add fp, sp, 0x20",
            "sub sp, sp, 0x2c",
            "mov r7, r0",
            "str r2, [fp, -0x3c]",
            "str r1, [fp, -0x38]",
            "b 0x2ef64",
            "ldr r1, [fp, -0x3c]",
            "ldr r4, [r1]",
            "mov r1, 0x3d",
            "mov r0, r4",
            "str r4, [fp, -0x28]",
            "bl sym.imp.strchr",
            "cmp r0, 0",
            "str r0, [fp, -0x2c]",
            "beq 0x2ef58",
            "rsb r0, r4, r0",
            "ldr r1, str.parm_",
            "add r0, r0, 0x14",
            "mov r2, 5",
            "bic r0, r0, 7",
            "sub sp, sp, r0",
            "mov r0, sp",
            "add r8, sp, 5",
            "bl sym.imp.memcpy",
            "ldr r1, [fp, -0x28]",
            "mov r0, r8",
            "ldr r5, [fp, -0x2c]",
            "mov r4, sp",
            "rsb r5, r1, r5",
            "mov r2, r5",
            "add r5, sp, r5",
            "bl sym.imp.memcpy",
            "mov r3, 0",
            "mov r0, r7",
            "strb r3, [r5, 5]",
            "mov r1, sp",
            "bl fcn.0002e308",
            "cmp r0, 0",
            "str r0, [fp, -0x28]",
            "bne 0x2eaa4",
            "mov r5, r8",
            "mov r8, r0",
            "mov r1, r5",
            "ldr r0, str.invalid_parameter__s",
            "bl fcn.00027184",
            "b 0x2ef78",
            "mov r0, r7",
            "mov r1, r8",
            "bl fcn.0002dd20",
            "subs r5, r0, 0",
            "beq 0x2eac4",
            "ldr r3, [r5, 0x10]",
            "cmp r3, 0x10000",
            "blt 0x2ead0",
            "mov r5, r8",
            "ldr r0, str.symbol_for_parameter__s_not_found",
            "b 0x2edb8",
            "ldr r0, [fp, -0x28]",
            "ldrb r3, [r0]",
            "sub r3, r3, 0x30",
            "cmp r3, 9",
            "movhi sl, 1",
            "strhi sl, [fp, -0x30]",
            "bhi 0x2eb28",
            "sub r4, fp, 0x28",
            "mov r2, 0xa",
            "mov r1, r4",
            "bl sym.imp.strtoul",
            "str r0, [fp, -0x30]",
            "ldr r0, [fp, -0x28]",
            "ldrb r3, [r0]",
            "cmp r3, 0x2d",
            "ldrne sl, [fp, -0x30]",
            "bne 0x2eb28",
            "add r0, r0, 1",
            "mov r1, r4",
            "mov r2, 0xa",
            "bl sym.imp.strtoul",
            "mov sl, r0",
            "ldr r2, [r5, 0x10]",
            "sub r1, fp, 0x24",
            "ldr r3, [r7, 0x38]",
            "mov sb, r8",
            "ldr r4, [r5, 8]",
            "ldr r3, [r3, r2, lsl 2]",
            "ldr r3, [r3, 0x2c]",
            "str r3, [fp, -0x44]",
            "add r4, r3, r4",
            "ldr r3, [fp, -0x2c]",
            "add r2, r3, 1",
            "str r2, [r1, -8]!",
            "str r1, [fp, -0x40]",
            "ldrb r3, [r3, 1]",
            "subs r3, r3, 0",
            "movne r3, 1",
            "str r3, [fp, -0x34]",
            "ldr r3, [fp, -0x28]",
            "ldrb r2, [r3]",
            "cmp r2, 0x73",
            "cmpne r2, 0x63",
            "movne r2, 0",
            "moveq r2, 1",
            "bne 0x2ee18",
            "ldr r6, [fp, -0x2c]",
            "ldrb r3, [r6]",
            "cmp r3, 0x22",
            "bne 0x2ed08",
            "mov r0, r6",
            "bl sym.imp.strlen",
            "ldr r3, [fp, -0x2c]",
            "add r0, r0, 0xe",
            "bic r0, r0, 7",
            "mov lr, 0xa",
            "sub sp, sp, r0",
            "mov ip, 7",
            "add r3, r3, 1",
            "mov r6, sp",
            "str r3, [fp, -0x2c]",
            "add r3, sp, 1",
            "b 0x2ece0",
            "cmp r2, 0",
            "bne 0x2ebf0",
            "mov r5, sb",
            "ldr r0, str.improperly_terminated_string_argument_for__s",
            "mov sb, r2",
            "mov r1, r5",
            "bl fcn.00027184",
            "mov r8, sb",
            "b 0x2ef78",
            "cmp r2, 0x5c",
            "bne 0x2eccc",
            "add r0, r1, 1",
            "str r0, [fp, -0x2c]",
            "ldrb r2, [r1, 1]",
            "cmp r2, 0x65",
            "beq 0x2ec68",
            "bhi 0x2ec38",
            "cmp r2, 0x30",
            "blo 0x2eccc",
            "cmp r2, 0x37",
            "bls 0x2ec7c",
            "cmp r2, 0x61",
            "strbeq ip, [r3, -1]",
            "beq 0x2ecd0",
            "cmp r2, 0x62",
            "moveq r2, 8",
            "b 0x2eccc",
            "cmp r2, 0x6e",
            "strbeq lr, [r3, -1]",
            "beq 0x2ecd0",
            "bhi 0x2ec54",
            "cmp r2, 0x66",
            "moveq r2, 0xc",
            "b 0x2eccc",
            "cmp r2, 0x72",
            "beq 0x2ec70",
            "cmp r2, 0x74",
            "moveq r2, 9",
            "b 0x2eccc",
            "mov r1, 0x1b",
            "b 0x2ec74",
            "mov r1, 0xd",
            "strb r1, [r3, -1]",
            "b 0x2ecd0",
            "ldrb r8, [r0, 1]",
            "sub r2, r2, 0x30",
            "add r1, r0, 1",
            "sub r8, r8, 0x30",
            "uxtb r8, r8",
            "cmp r8, 7",
            "bhi 0x2eccc",
            "str r1, [fp, -0x2c]",
            "ldrb r8, [r1, 1]",
            "ldrb r0, [r0, 1]",
            "sub r8, r8, 0x30",
            "uxtb r8, r8",
            "sub r0, r0, 0x30",
            "add r2, r0, r2, lsl 3",
            "add r0, r1, 1",
            "cmp r8, 7",
            "strls r0, [fp, -0x2c]",
            "ldrbls r1, [r1, 1]",
            "subls r1, r1, 0x30",
            "addls r2, r1, r2, lsl 3",
            "strb r2, [r3, -1]",
            "ldr r2, [fp, -0x2c]",
            "add r3, r3, 1",
            "add r2, r2, 1",
            "str r2, [fp, -0x2c]",
            "ldr r1, [fp, -0x2c]",
            "sub r0, r3, 1",
            "ldrb r2, [r1]",
            "cmp r2, 0x22",
            "bne 0x2ebcc",
            "mov r3, 0",
            "add r1, r1, 1",
            "strb r3, [r0]",
            "str r1, [fp, -0x2c]",
            "b 0x2ed70",
            "mov r0, r6",
            "mov r1, 0x2c",
            "bl sym.imp.strchr",
            "subs r8, r0, 0",
            "ldreq r3, [0x0002ef94]",
            "streq r3, [fp, -0x2c]",
            "beq 0x2ed70",
            "rsb r6, r6, r8",
            "add r6, r6, 0xf",
            "bic r6, r6, 7",
            "sub sp, sp, r6",
            "mov r1, sp",
            "lsr r3, r1, 3",
            "ldr r1, [fp, -0x2c]",
            "lsl r6, r3, 3",
            "str r3, [fp, -0x4c]",
            "rsb ip, r1, r8",
            "mov r2, ip",
            "mov r0, r6",
            "str ip, [fp, -0x48]",
            "bl sym.imp.memcpy",
            "ldr r3, [fp, -0x4c]",
            "mov r2, 0",
            "ldr ip, [fp, -0x48]",
            "strb r2, [ip, r3, lsl 3]",
            "str r8, [fp, -0x2c]",
            "ldr r0, [fp, -0x28]",
            "ldrb r3, [r0]",
            "cmp r3, 0x73",
            "bne 0x2eda0",
            "ldr r3, [fp, -0x44]",
            "mov r0, r7",
            "ldr r1, [r5, 0x10]",
            "rsb r2, r3, r4",
            "mov r3, r6",
            "bl fcn.0002e950",
            "ldrb r3, [r0, 1]",
            "sub r3, r3, 0x30",
            "cmp r3, 9",
            "bls 0x2edc8",
            "ldr r0, str.parameter_type_c_for__s_must_be_followed_by_the_maximum_size",
            "mov r5, sb",
            "mov r1, r5",
            "bl fcn.00027184",
            "mov r8, 0",
            "b 0x2ef78",
            "mov r1, 0",
            "mov r2, 0xa",
            "add r0, r0, 1",
            "bl sym.imp.strtoul",
            "mov r8, r0",
            "mov r0, r6",
            "bl sym.imp.strlen",
            "cmp r0, r8",
            "blo 0x2ee04",
            "mov r5, sb",
            "ldr r0, str.string_too_long_for__s__max__ld_",
            "mov sb, r8",
            "mov r1, r5",
            "sub r2, r8, 1",
            "b 0x2ef00",
            "mov r0, r4",
            "mov r1, r6",
            "bl sym.imp.strcpy",
            "add r4, r4, r8",
            "b 0x2ee90",
            "ldr r1, [fp, -0x40]",
            "ldr r0, [fp, -0x2c]",
            "bl sym.imp.strtoul",
            "ldr r3, [fp, -0x28]",
            "ldrb r1, [r3]",
            "sub r3, r1, 0x62",
            "cmp r3, 0xa",
            "ldrls pc, [pc, r3, lsl 2]",
            "b case.0x2ee34.1",
            "strb r0, [r4], 1",
            "b 0x2ee90",
            "strh r0, [r4], 2",
            "b 0x2ee90",
            "str r0, [r4], 4",
            "b 0x2ee90",
            "mov r5, sb",
            "ldr r0, str.unknown_parameter_type__c_for__s",
            "mov r2, sb",
            "b 0x2ef00",
            "ldr r2, [fp, -0x2c]",
            "ldrb r3, [r2]",
            "cmp r3, 0xa",
            "bhi 0x2eeb8",
            "cmp r3, 9",
            "bhs 0x2eed0",
            "cmp r3, 0",
            "beq 0x2ef20",
            "mov r5, sb",
            "b 0x2ef18",
            "cmp r3, 0x20",
            "beq 0x2eed0",
            "cmp r3, 0x2c",
            "beq 0x2eedc",
            "cmp r3, 0xd",
            "bne 0x2ef14",
            "add r2, r2, 1",
            "str r2, [fp, -0x2c]",
            "b 0x2ee90",
            "ldr r1, [fp, -0x34]",
            "add r1, r1, 1",
            "cmp r1, sl",
            "str r1, [fp, -0x34]",
            "ble 0x2ef08",
            "ldr r0, str.too_many_values_for__s__max__d_",
            "mov r5, sb",
            "mov r1, sb",
            "mov r2, sl",
            "bl fcn.00027184",
            "b 0x2edc0",
            "add r2, r2, 1",
            "str r2, [fp, -0x2c]",
            "b 0x2eb6c",
            "mov r5, sb",
            "ldr r0, str.invalid_argument_syntax_for__s",
            "b 0x2edb8",
            "ldr r2, [fp, -0x34]",
            "ldr r1, [fp, -0x30]",
            "cmp r2, r1",
            "bge 0x2ef4c",
            "ldr r0, str.too_few_values_for__s__min__d_",
            "mov r1, sb",
            "ldr r2, [fp, -0x30]",
            "mov r5, sb",
            "mov r8, r3",
            "bl fcn.00027184",
            "b 0x2ef78",
            "ldr r2, [fp, -0x3c]",
            "add r2, r2, 4",
            "str r2, [fp, -0x3c]",
            "ldr r3, [fp, -0x38]",
            "sub r3, r3, 1",
            "str r3, [fp, -0x38]",
            "ldr r1, [fp, -0x38]",
            "add r3, r1, 1",
            "cmp r3, 0",
            "bgt 0x2ea04",
            "mov r8, 1",
            "mov r0, r8",
            "sub sp, fp, 0x20",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0002f800": {
        "function_address": "0x0002f800",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r4, r2",
            "mov r6, r0",
            "mov r5, r1",
            "bl fcn.0002de60",
            "cmp r4, 0",
            "moveq r4, 8",
            "subs r7, r0, 0",
            "beq 0x2f834",
            "mov r1, r4",
            "bl fcn.0002ddb4",
            "mov r0, r7",
            "pop {r4, r5, r6, r7, r8, pc}",
            "mov r0, r6",
            "mov r1, r5",
            "mov r2, 8",
            "mov r3, r4",
            "pop {r4, r5, r6, r7, r8, lr}",
            "b fcn.0002e8bc"
        ]
    },
    "fcn.0002efe0": {
        "function_address": "0x0002efe0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r6, r1",
            "ldr r1, str.__ksymtab",
            "mov r5, r0",
            "bl fcn.0002de60",
            "subs r4, r0, 0",
            "beq 0x2f014",
            "ldr r3, [r4, 8]",
            "tst r3, 2",
            "bne 0x2f030",
            "ldr r3, [r4, 0x28]",
            "mov r2, 0x78",
            "strb r2, [r3]",
            "mov r0, r5",
            "ldr r1, str.__ksymtab",
            "mov r2, 4",
            "mov r3, 0",
            "bl fcn.0002e8bc",
            "ldr r3, [r4, 8]",
            "add r0, r5, 0x48",
            "ldr r7, [r4, 0x14]",
            "ldr r1, [r4, 0x34]",
            "orr r3, r3, 2",
            "str r3, [r4, 8]",
            "mov r3, 4",
            "str r3, [r4, 0x20]",
            "mov r2, r7",
            "mov r3, r6",
            "bl fcn.0002efb0",
            "ldr r1, [r4, 0x34]",
            "mov r0, r5",
            "add r2, r7, 4",
            "ldr r3, [r6, 4]",
            "bl fcn.0002e950"
        ]
    },
    "fcn.0002f084": {
        "function_address": "0x0002f084",
        "instructions": [
            "ldr r3, [0x0002f290]",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "add fp, sp, 0x20",
            "sub sp, sp, 0x14",
            "mov r4, r0",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x2f154",
            "mov ip, 0xc",
            "ldr r1, str..kmodtab",
            "mov r2, 4",
            "mul r3, ip, r3",
            "bl fcn.0002e8bc",
            "ldr r3, [0x0002f2a4]",
            "ldr r3, [r3]",
            "tst r3, 0x80",
            "bne 0x2f284",
            "mov r0, r4",
            "ldr r1, str.__ksymtab",
            "bl fcn.0002de60",
            "subs r3, r0, 0",
            "bne 0x2f284",
            "mov r2, 4",
            "mov r0, r4",
            "ldr r1, str.__ksymtab",
            "bl fcn.0002e8bc",
            "mov r0, 1",
            "sub sp, fp, 0x20",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0002e578": {
        "function_address": "0x0002e578",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "add fp, sp, 0x20",
            "sub sp, sp, 0xc",
            "mov r4, r0",
            "mov r1, 8",
            "ldr r0, str.Sections:_______Size________s__Align_n",
            "ldr r2, [0x0002e7c0]",
            "bl sym.imp.printf",
            "ldr r5, [r4, 0x3c]",
            "b 0x2e5e8",
            "ldr r2, [r5, 0x20]",
            "mvn r3, 0",
            "b 0x2e5b4",
            "lsr r2, r2, 1",
            "add r3, r3, 1",
            "cmp r2, 0",
            "bne 0x2e5ac",
            "ldr r2, [r5, 0xc]",
            "cmn r3, 1",
            "moveq r3, 0",
            "ldr r0, str.__15s__08lx___0lx__2_d_n",
            "str r3, [sp, 4]",
            "mov r3, 8",
            "str r2, [sp]",
            "ldr r1, [r5, 0x28]",
            "ldr r2, [r5, 0x14]",
            "bl sym.imp.printf",
            "ldr r5, [r5, 0x30]",
            "cmp r5, 0",
            "bne 0x2e5a0",
            "ldrh r3, [r4, 0x30]",
            "lsl r2, r3, 2",
            "add r2, r2, 0xe",
            "lsr r2, r2, 3",
            "lsl r2, r2, 3",
            "sub sp, sp, r2",
            "sub r2, r3, 1",
            "add r0, sp, 8",
            "lsl r2, r2, 2",
            "b 0x2e630",
            "ldr r1, [r4, 0x38]",
            "ldr r1, [r1, r2]",
            "ldr r1, [r1, 8]",
            "ubfx r1, r1, 1, 1",
            "str r1, [r0, r2]",
            "sub r2, r2, 4",
            "subs r3, r3, 1",
            "bhs 0x2e618",
            "add r1, r4, 0x58",
            "movw r2, 0x209",
            "mov lr, r1",
            "mov r6, 0",
            "movw r7, 0xffff",
            "movw r5, 0xfeff",
            "ldr r3, [lr, 4]!",
            "b 0x2e680",
            "ldr ip, [r3, 0x10]",
            "cmp ip, r7",
            "bgt 0x2e67c",
            "cmp ip, r5",
            "bgt 0x2e678",
            "ldr ip, [r0, ip, lsl 2]",
            "cmp ip, 0",
            "beq 0x2e67c",
            "add r6, r6, 1",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "bne 0x2e658",
            "subs r2, r2, 1",
            "bne 0x2e650",
            "lsl r6, r6, 2",
            "movw r2, 0x209",
            "movw r8, 0xffff",
            "add r3, r6, 0xe",
            "movw r7, 0xfeff",
            "bic r3, r3, 7",
            "sub sp, sp, r3",
            "add r5, sp, 8",
            "mov lr, r5",
            "ldr r3, [r1, 4]!",
            "b 0x2e6e4",
            "ldr ip, [r3, 0x10]",
            "cmp ip, r8",
            "bgt 0x2e6e0",
            "cmp ip, r7",
            "bgt 0x2e6dc",
            "ldr ip, [r0, ip, lsl 2]",
            "cmp ip, 0",
            "beq 0x2e6e0",
            "str r3, [lr], 4",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "bne 0x2e6bc",
            "subs r2, r2, 1",
            "bne 0x2e6b4",
            "ldr r0, str._nSymbols:",
            "add r6, r5, r6",
            "bl sym.imp.puts",
            "movw r7, 0xfff1",
            "b 0x2e7ac",
            "ldr sb, [r5], 4",
            "ldr sl, [sb, 0x10]",
            "cmp sl, r7",
            "ldreq sl, [sb, 8]",
            "moveq r8, 0x41",
            "beq 0x2e778",
            "cmp sl, 0",
            "moveq r8, 0x55",
            "beq 0x2e778",
            "ldr r3, [r4, 0x38]",
            "ldr r3, [r3, sl, lsl 2]",
            "ldr r2, [r3, 4]",
            "cmp r2, 8",
            "moveq r8, 0x42",
            "beq 0x2e76c",
            "ldr r2, [r3, 8]",
            "tst r2, 2",
            "moveq r8, 0x3f",
            "beq 0x2e76c",
            "tst r2, 4",
            "movne r8, 0x54",
            "bne 0x2e76c",
            "tst r2, 1",
            "moveq r8, 0x52",
            "movne r8, 0x44",
            "ldr sl, [r3, 0xc]",
            "ldr r3, [sb, 8]",
            "add sl, sl, r3",
            "ldrb r3, [sb, 0x14]",
            "lsrs r3, r3, 4",
            "bne 0x2e790",
            "bl sym.imp.__ctype_tolower_loc",
            "ldr r3, [r0]",
            "ldrb r8, [r3, r8, lsl 1]",
            "ldr r3, [sb, 4]",
            "mov r1, 8",
            "ldr r0, str._0lx__c__s_n",
            "mov r2, sl",
            "str r3, [sp]",
            "mov r3, r8",
            "bl sym.imp.printf",
            "cmp r5, r6",
            "blo 0x2e708",
            "sub sp, fp, 0x20",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00051ee4": {
        "function_address": "0x00051ee4",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "sub sp, sp, 0x188",
            "mov r0, sp",
            "mov r6, sp",
            "bl sym.imp.uname",
            "cmn r0, 1",
            "bne 0x51f10",
            "ldr r0, str.cannot_get_system_information",
            "mov r5, 0",
            "bl fcn.000288b8",
            "b 0x51f40",
            "mov r4, 3",
            "mov r5, 0",
            "add r0, sp, 0x82",
            "b 0x51f24",
            "mov r0, 0",
            "ldr r1, [0x00051f50]",
            "lsl r5, r5, 8",
            "bl sym.imp.strtok",
            "bl sym.imp.atoi",
            "subs r4, r4, 1",
            "add r5, r5, r0",
            "bne 0x51f20",
            "mov r0, r5",
            "add sp, sp, 0x188",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.imp.uname": {
        "function_address": "0x0000b7c8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xb9c]!"
        ]
    },
    "fcn.00051aac": {
        "function_address": "0x00051aac",
        "instructions": [
            "push {r0, r1, r2, r3}",
            "push {r0, r1, r2, lr}",
            "add r3, sp, 0x14",
            "str r3, [sp, 4]",
            "bl sym.imp.__h_errno_location",
            "ldr r0, [r0]",
            "bl sym.imp.hstrerror",
            "ldr r1, [sp, 4]",
            "mov r2, r0",
            "ldr r0, [sp, 0x10]",
            "bl fcn.00029614",
            "bl fcn.000271ac"
        ]
    },
    "sym.imp.__h_errno_location": {
        "function_address": "0x0000bff0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x62c]!"
        ]
    },
    "sym.imp.hstrerror": {
        "function_address": "0x0000bfc0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x64c]!"
        ]
    },
    "fcn.00032dbc": {
        "function_address": "0x00032dbc",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r6, r0",
            "ldr r5, aav.0x0005d5c8",
            "b 0x32de0",
            "ldr r0, [r4]",
            "mov r1, r6",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x32dec",
            "ldr r4, [r5, 4]!",
            "cmp r4, 0",
            "bne 0x32dcc",
            "mov r0, r4",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.00032d80": {
        "function_address": "0x00032d80",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r6, r0",
            "ldr r5, aav.0x0005dbcc",
            "b 0x32da4",
            "ldr r0, [r4]",
            "mov r1, r6",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x32db0",
            "ldr r4, [r5, 4]!",
            "cmp r4, 0",
            "bne 0x32d90",
            "mov r0, r4",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.0002a3cc": {
        "function_address": "0x0002a3cc",
        "instructions": [
            "push {r3, lr}",
            "bl sym.imp.socket",
            "cmp r0, 0",
            "popge {r3, pc}",
            "ldr r0, [pc]",
            "bl fcn.00028900"
        ]
    },
    "sym.imp.socket": {
        "function_address": "0x0000c134",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x554]!"
        ]
    },
    "fcn.0002a54c": {
        "function_address": "0x0002a54c",
        "instructions": [
            "str r3, [sp, -4]!",
            "push {r0, r1, lr}",
            "bl sym.imp.ioctl",
            "cmp r0, 0",
            "bge 0x2a58c",
            "add r3, sp, 0x10",
            "str r3, [sp, 4]",
            "ldr r3, [0x0002a598]",
            "ldr r3, [r3]",
            "ldr r0, [r3]",
            "bl sym.imp.strerror",
            "ldr r1, [sp, 4]",
            "mov r2, r0",
            "ldr r0, [sp, 0xc]",
            "bl fcn.00029614",
            "bl fcn.000271ac",
            "pop {r2, r3, lr}",
            "add sp, sp, 4",
            "bx lr"
        ]
    },
    "fcn.0002a5c8": {
        "function_address": "0x0002a5c8",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r1",
            "bl sym.imp.ioctl",
            "cmp r0, 0",
            "popge {r4, pc}",
            "ldr r0, str.ioctl__x_failed",
            "mov r1, r4",
            "bl fcn.00028900"
        ]
    },
    "fcn.00031248": {
        "function_address": "0x00031248",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "subs sb, r0, 0",
            "sub sp, sp, 0x2b4",
            "beq 0x312a0",
            "ldr r5, [0x0003151c]",
            "add r4, sp, 0x298",
            "mov r1, r4",
            "ldr r3, [r5]",
            "ldr r3, [r3, 0x18]",
            "blx r3",
            "cmp r0, 0",
            "bge 0x31284",
            "ldr r0, aav.0x0005ad0c",
            "mov r1, sb",
            "bl fcn.00051aac",
            "ldr r3, [r5]",
            "mov r1, 1",
            "mov r0, r4",
            "ldr r3, [r3, 0x14]",
            "blx r3",
            "bl fcn.00029ed8",
            "mov sb, r0",
            "ldr r1, [0x00031524]",
            "mov r5, 0",
            "ldr r0, str._proc_net_arp",
            "add r4, sp, 0x218",
            "bl fcn.00029f54"
        ]
    },
    "fcn.000516a0": {
        "function_address": "0x000516a0",
        "instructions": [
            "push {r3, lr}",
            "mov r1, 0xa",
            "bl fcn.00027f1c",
            "cmp r0, 0",
            "movne r3, 0",
            "strbne r3, [r0]",
            "pop {r3, pc}"
        ]
    },
    "fcn.00031c18": {
        "function_address": "0x00031c18",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "subs r4, r0, 0",
            "popeq {r3, r4, r5, pc}",
            "cmp r1, 0",
            "bne 0x31c68",
            "bl sym.imp.strlen",
            "mov r1, r0",
            "mov r0, r4",
            "bl sym.imp.sethostname",
            "cmp r0, 0",
            "popge {r3, r4, r5, pc}",
            "ldr r3, [0x00031cb8]",
            "ldr r3, [r3]",
            "ldr r3, [r3]",
            "cmp r3, 1",
            "bne 0x31c60",
            "ldr r0, str.permission_denied.__are_you_root__",
            "bl fcn.000271d8",
            "ldr r0, str.sethostname",
            "bl fcn.00028900",
            "ldr r1, [0x00031cc4]",
            "bl fcn.00029f54"
        ]
    },
    "sym.imp.sethostname": {
        "function_address": "0x0000bbf4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x8d4]!"
        ]
    },
    "fcn.00054fdc": {
        "function_address": "0x00054fdc",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r0",
            "bl sym.imp.gethostbyname",
            "cmp r0, 0",
            "popne {r4, pc}",
            "ldr r0, aav.0x0005ad0c",
            "mov r1, r4",
            "bl fcn.00051aac"
        ]
    },
    "sym.imp.gethostbyname": {
        "function_address": "0x0000b6cc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xc44]!"
        ]
    },
    "fcn.000333f0": {
        "function_address": "0x000333f0",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "subs r4, r0, 0",
            "bne 0x33484",
            "ldr r3, [0x000334c0]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "bne 0x33428",
            "bl fcn.00032574",
            "cmp r0, 0",
            "bne 0x3341c",
            "bl fcn.000324ac",
            "cmp r0, 0",
            "mvnlt r5, 0",
            "blt 0x334b8",
            "ldr r3, [0x000334c0]",
            "ldr r6, [0x000334c4]",
            "ldr r4, [r3]",
            "b 0x33474",
            "mov r0, r4",
            "bl fcn.00032848",
            "cmp r4, 0",
            "bne 0x33438",
            "mov r5, r4",
            "b 0x334b8",
            "bl fcn.00032574",
            "cmp r0, 0",
            "movlt r4, 0",
            "blt 0x334a0",
            "mov r0, r4",
            "bl fcn.00032418",
            "mov r4, r0",
            "mov r0, r4",
            "bl fcn.00032848",
            "lsr r0, r5, 0x1f",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.00032574": {
        "function_address": "0x00032574",
        "instructions": [
            "ldr r3, [0x0003282c]",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov sb, r0",
            "sub sp, sp, 0x2c4",
            "ldr r2, [r3]",
            "cmp r2, 0",
            "movne r4, 0",
            "bne 0x32820",
            "cmp r0, 0",
            "ldr r1, [0x00032830]",
            "addeq r2, r2, 1",
            "ldr r0, [0x00032834]",
            "streq r2, [r3]",
            "bl sym.imp.fopen64",
            "subs r6, r0, 0",
            "bne 0x325cc",
            "ldr r0, str.warning:_cannot_open__s__limiting_output",
            "ldr r1, [0x00032834]",
            "bl fcn.000288b8",
            "bl fcn.000324ac",
            "mov r4, r0",
            "b 0x32820",
            "add r4, sp, 0x40",
            "mov r1, 0x200",
            "mov r2, r6",
            "mov r0, r4",
            "bl sym.imp.fgets",
            "mov r1, 0x200",
            "mov r2, r6",
            "mov r0, r4",
            "bl sym.imp.fgets",
            "mov r0, r4",
            "ldr r1, str.compressed",
            "bl sym.imp.strstr",
            "cmp r0, 0",
            "movne r7, 2",
            "bne 0x327c0",
            "mov r0, r4",
            "ldr r1, aav.0x0005f0b0",
            "bl sym.imp.strstr",
            "subs r7, r0, 0",
            "movne r7, 1",
            "b 0x327c0",
            "add r4, r4, 1",
            "ldrb r0, [r5, r4]",
            "str r4, [sp, 0x3c]",
            "bl sym.imp.isspace",
            "cmp r0, 0",
            "bne 0x32620",
            "mov r6, r4",
            "b 0x32644",
            "add r4, r4, 1",
            "ldrb r0, [r5, r4]",
            "cmp r0, 0x3a",
            "cmpne r0, 0",
            "moveq r3, 0",
            "movne r3, 1",
            "bne 0x32668",
            "cmp r0, 0x3a",
            "beq 0x32678",
            "b 0x326bc",
            "bl sym.imp.isspace",
            "cmp r0, 0",
            "beq 0x32640",
            "b 0x326bc",
            "rsb r6, r6, r4",
            "cmp r6, 0xf",
            "bgt 0x326b4",
            "ldr r2, [sp, 0x3c]",
            "mov r0, fp",
            "str r3, [sp, 0x38]",
            "add r1, r5, r2",
            "mov r2, r6",
            "bl sym.imp.memcpy",
            "ldr r3, [sp, 0x38]",
            "add r2, sp, 0x2c0",
            "add r6, r2, r6",
            "strb r3, [r6, -0x80]",
            "add r6, r5, r4",
            "b 0x326c4",
            "strb r3, [sp, 0x240]",
            "b 0x326c0",
            "strb r8, [sp, 0x240]",
            "mov r6, r5",
            "mov r0, fp",
            "bl fcn.00032418",
            "add r3, r0, 0xa0",
            "mov r4, r0",
            "mov r1, 0",
            "mov r0, r3",
            "mov r2, 0x70",
            "str r3, [sp, 0x38]",
            "bl sym.imp.memset",
            "add r2, r4, 0xc0",
            "add r0, r6, 1",
            "str r2, [sp]",
            "add r2, r4, 0xc8",
            "str r2, [sp, 4]",
            "add r2, r4, 0xf0",
            "str r2, [sp, 8]",
            "add r2, r4, 0xec",
            "str r2, [sp, 0xc]",
            "add r2, r4, 0xd4",
            "str r2, [sp, 0x10]",
            "add r2, r4, 0xd0",
            "str r2, [sp, 0x14]",
            "add r2, r4, 0xb8",
            "str r2, [sp, 0x18]",
            "add r2, r4, 0xa8",
            "str r2, [sp, 0x1c]",
            "add r2, r4, 0xc4",
            "str r2, [sp, 0x20]",
            "add r2, r4, 0xcc",
            "str r2, [sp, 0x24]",
            "add r2, r4, 0x100",
            "str r2, [sp, 0x28]",
            "add r2, r4, 0xdc",
            "str r2, [sp, 0x2c]",
            "add r2, r4, 0xfc",
            "str r2, [sp, 0x30]",
            "add r2, r4, 0xd8",
            "str r2, [sp, 0x34]",
            "ldr r2, aav.0x0005db58",
            "ldr r3, [sp, 0x38]",
            "ldr r1, [r2, r7, lsl 2]",
            "add r2, r4, 0xb0",
            "bl sym.imp.sscanf",
            "cmp r7, 2",
            "beq 0x32798",
            "cmp r7, 0",
            "moveq r2, 0",
            "moveq r3, 0",
            "strdeq r2, r3, [r4, 0xb0]",
            "strdeq r2, r3, [r4, 0xb8]",
            "str r8, [r4, 0xd0]",
            "str r8, [r4, 0xd4]",
            "str r8, [r4, 0xd8]",
            "cmp sb, 0",
            "mov r3, 1",
            "str r3, [r4, 0x9c]",
            "beq 0x327d0",
            "mov r0, sb",
            "mov r1, fp",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x327ec",
            "b 0x327d0",
            "add r5, sp, 0x40",
            "mov r8, 0",
            "add fp, sp, 0x240",
            "mov sl, r6",
            "mov r0, r5",
            "mov r1, 0x200",
            "mov r2, sl",
            "bl sym.imp.fgets",
            "cmp r0, 0",
            "movne r4, 0",
            "bne 0x32624",
            "mov r0, sl",
            "mov r6, sl",
            "bl sym.imp.ferror",
            "subs r4, r0, 0",
            "beq 0x32818",
            "ldr r0, [0x00032834]",
            "mvn r4, 0",
            "bl fcn.000288b8",
            "ldr r3, [0x0003282c]",
            "mov r2, 0",
            "str r2, [r3]",
            "mov r0, r6",
            "bl sym.imp.fclose",
            "mov r0, r4",
            "add sp, sp, 0x2c4",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.000324ac": {
        "function_address": "0x000324ac",
        "instructions": [
            "push {r0, r1, r4, r5, r6, lr}",
            "mov r0, 2",
            "mov r2, 0",
            "mov r1, r0",
            "str r2, [sp, 4]",
            "bl sym.imp.socket",
            "subs r5, r0, 0",
            "bge 0x324dc",
            "ldr r0, str.error:_no_inet_socket_available",
            "mvn r4, 0",
            "bl fcn.000288b8",
            "b 0x32568",
            "mov r4, 0x3c0",
            "mov r6, sp",
            "b 0x324ec",
            "mov r1, r4",
            "ldr r0, [sp, 4]",
            "str r4, [sp]",
            "bl fcn.00029e84",
            "mov r0, r4",
            "pop {r2, r3, r4, r5, r6, pc}"
        ]
    },
    "fcn.00032848": {
        "function_address": "0x00032848",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "add r6, r0, 8",
            "mov r4, r0",
            "mov r0, 2",
            "sub sp, sp, 0x20",
            "mov r1, r0",
            "mov r2, 0",
            "mov r7, sp",
            "bl fcn.0002a3cc"
        ]
    },
    "fcn.00032418": {
        "function_address": "0x00032418",
        "instructions": [
            "ldr r3, [0x000324a4]",
            "push {r4, r5, r6, lr}",
            "mov r6, r0",
            "ldr r4, [r3]",
            "b 0x32448",
            "add r0, r4, 8",
            "mov r1, r6",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x3249c",
            "blt 0x32450",
            "ldr r4, [r4, 4]",
            "cmp r4, 0",
            "bne 0x3242c",
            "mov r0, 0x118",
            "bl fcn.00029eb4",
            "mov r2, 0x10",
            "mov r5, r0",
            "mov r1, r6",
            "add r0, r0, 8",
            "bl fcn.00029568",
            "ldr r2, [0x000324a8]",
            "cmp r4, 0",
            "movne r2, r4",
            "str r4, [r5, 4]",
            "mov r4, r5",
            "ldr r3, [r2]",
            "cmp r3, 0",
            "str r3, [r5]",
            "ldreq r3, [0x000324a4]",
            "strne r5, [r3, 4]",
            "streq r5, [r3]",
            "str r5, [r2]",
            "mov r0, r4",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.00054e18": {
        "function_address": "0x00054e18",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sl, fp, lr}",
            "add fp, sp, 0x1c",
            "sub sp, sp, 0x28",
            "mov r6, r3",
            "mov r3, 0",
            "str r3, [fp, -0x20]",
            "mov r4, r0",
            "ldrb r3, [r0]",
            "mov r5, r1",
            "mov sl, r2",
            "cmp r3, 0x5b",
            "bne 0x54cdc",
            "add r8, r0, 1",
            "mov r1, 0x5d",
            "mov r0, r8",
            "bl sym.imp.strchr",
            "subs r7, r0, 0",
            "beq 0x54cd0",
            "ldrb r3, [r7, 1]",
            "cmp r3, 0x3a",
            "beq 0x54d08",
            "ldr r0, str.bad_address__s",
            "mov r1, r4",
            "bl fcn.000271d8",
            "mov r1, 0x3a",
            "bl sym.imp.strrchr",
            "subs r8, r0, 0",
            "beq 0x54d48",
            "mov r0, r4",
            "mov r1, 0x3a",
            "bl sym.imp.strchr",
            "cmp r0, r8",
            "mov r7, r0",
            "bne 0x54d48",
            "mov r8, r4",
            "add r5, r7, 1",
            "mov r1, r8",
            "rsb r2, r8, r5",
            "add r3, r2, 0xe",
            "bic r3, r3, 7",
            "sub sp, sp, r3",
            "mov r0, sp",
            "bl fcn.00029568",
            "ldrb r3, [r7]",
            "mov r8, r0",
            "cmp r3, 0x3a",
            "movne r7, r5",
            "add r0, r7, 1",
            "bl fcn.00029e00",
            "mov r5, r0",
            "b 0x54d4c",
            "mov r8, r4",
            "sub r7, fp, 0x40",
            "mov r1, 0",
            "mov r2, 0x20",
            "mov r0, r7",
            "bl sym.imp.memset",
            "mov r3, 1",
            "mov r0, r8",
            "str r3, [fp, -0x38]",
            "bic r3, r6, 2",
            "str r3, [fp, -0x40]",
            "mov r1, 0",
            "mov r2, r7",
            "sub r3, fp, 0x20",
            "str sl, [fp, -0x3c]",
            "bl sym.imp.getaddrinfo",
            "cmp r0, 0",
            "bne 0x54d9c",
            "ldr r3, [fp, -0x20]",
            "cmp r3, 0",
            "bne 0x54db4",
            "ldr r0, str.bad_address__s",
            "mov r1, r4",
            "bl fcn.00027184",
            "ands r6, r6, 2",
            "beq 0x54dec",
            "bl fcn.000271ac",
            "ldr r0, [r3, 0x10]",
            "add r0, r0, 4",
            "bl fcn.00029e54",
            "ldr r0, [fp, -0x20]",
            "bl sym.imp.freeaddrinfo",
            "mov r0, r6",
            "sub sp, fp, 0x1c",
            "pop {r4, r5, r6, r7, r8, sl, fp, pc}",
            "mov r2, 0",
            "mov r3, 2",
            "b 0x54c7c"
        ]
    },
    "fcn.00029e00": {
        "function_address": "0x00029e00",
        "instructions": [
            "push {r3, lr}",
            "mov r1, 0",
            "movw r2, 0xffff",
            "bl fcn.00029d04",
            "uxth r0, r0",
            "pop {r3, pc}"
        ]
    },
    "sym.imp.getaddrinfo": {
        "function_address": "0x0000c464",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x334]!"
        ]
    },
    "fcn.00054c60": {
        "function_address": "0x00054c60",
        "instructions": [
            "ldrh r3, [r0, 4]",
            "cmp r3, 0xa",
            "beq 0x54c74",
            "cmp r3, 2",
            "bxne lr",
            "strh r1, [r0, 6]",
            "bx lr"
        ]
    },
    "sym.imp.freeaddrinfo": {
        "function_address": "0x0000b9a8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xa5c]!"
        ]
    },
    "fcn.0002a59c": {
        "function_address": "0x0002a59c",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r4, r1",
            "bl sym.imp.ioctl",
            "subs r5, r0, 0",
            "bge 0x2a5bc",
            "ldr r0, str.ioctl__x_failed",
            "mov r1, r4",
            "bl fcn.000288b8",
            "mov r0, r5",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.00051ba0": {
        "function_address": "0x00051ba0",
        "instructions": [
            "ldrh r3, [r0]",
            "push {r0, r1, r4, r5, r6, r7, r8, lr}",
            "mov r8, r0",
            "cmp r3, 2",
            "beq 0x51bcc",
            "ldr r3, [0x00051cd8]",
            "mov r2, 0x61",
            "mov r4, 0",
            "ldr r3, [r3]",
            "str r2, [r3]",
            "b 0x51cd0",
            "ldr r3, [r0, 4]",
            "cmp r3, 0",
            "str r3, [sp, 4]",
            "bne 0x51bfc",
            "lsls r0, r1, 0x14",
            "bne 0x51bfc",
            "tst r1, 0x8000",
            "ldrne r0, aav.0x0005bcf8",
            "ldreq r0, [0x00051ce0]",
            "bl fcn.00029ed8",
            "mov r4, r0",
            "b 0x51cd0",
            "lsls r0, r1, 0x14",
            "beq 0x51c10",
            "ldr r0, [r8, 4]",
            "bl sym.imp.inet_ntoa",
            "b 0x51bf0",
            "bics r2, r3, r2",
            "ldr r2, [0x00051ce4]",
            "ubfxeq r6, r1, 0xe, 1",
            "movne r6, 1",
            "ldr r0, [r2]",
            "b 0x51c48",
            "ldr r2, [r0, 8]",
            "cmp r2, r3",
            "bne 0x51c44",
            "ldr r2, [r0, 0x14]",
            "cmp r2, r6",
            "addeq r0, r0, 0x18",
            "beq 0x51bf0",
            "ldr r0, [r0]",
            "cmp r0, 0",
            "bne 0x51c28",
            "cmp r6, 0",
            "beq 0x51c80",
            "add r0, sp, 4",
            "mov r1, 4",
            "mov r2, 2",
            "bl sym.imp.gethostbyaddr",
            "cmp r0, 0",
            "beq 0x51c80",
            "ldr r0, [r0]",
            "bl fcn.00029ed8",
            "subs r4, r0, 0",
            "bne 0x51c90",
            "ldr r0, [r8, 4]",
            "bl sym.imp.inet_ntoa",
            "bl fcn.00029ed8",
            "mov r4, r0",
            "ldr r7, [0x00051ce4]",
            "mov r0, r4",
            "bl sym.imp.strlen",
            "add r0, r0, 0x1c",
            "bl fcn.00029e54",
            "mov r0, r4",
            "pop {r2, r3, r4, r5, r6, r7, r8, pc}"
        ]
    },
    "sym.imp.inet_ntoa": {
        "function_address": "0x0000bfb4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x654]!"
        ]
    },
    "sym.imp.gethostbyaddr": {
        "function_address": "0x0000c428",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x35c]!"
        ]
    },
    "fcn.00051d74": {
        "function_address": "0x00051d74",
        "instructions": [
            "mov r3, r0",
            "ldrh r0, [r0]",
            "push {r4, r5, lr}",
            "sub sp, sp, 0x94",
            "cmp r0, 0xa",
            "beq 0x51da4",
            "ldr r3, [0x00051e58]",
            "mov r2, 0x61",
            "mov r0, 0",
            "ldr r3, [r3]",
            "str r2, [r3]",
            "b 0x51e50",
            "lsls r2, r1, 0x11",
            "beq 0x51dc8",
            "add r4, sp, 0x10",
            "add r1, r3, 8",
            "mov r2, r4",
            "mov r3, 0x80",
            "bl sym.imp.inet_ntop",
            "mov r0, r4",
            "b 0x51e4c",
            "ldr r2, [r3, 8]",
            "cmp r2, 0",
            "bne 0x51e08",
            "ldr r2, [r3, 0xc]",
            "cmp r2, 0",
            "bne 0x51e08",
            "ldr r2, [r3, 0x10]",
            "cmp r2, 0",
            "bne 0x51e08",
            "ldr r2, [r3, 0x14]",
            "cmp r2, 0",
            "bne 0x51e08",
            "tst r1, 0x8000",
            "ldrne r0, aav.0x0005bcf8",
            "ldreq r0, [0x00051e60]",
            "b 0x51e4c",
            "add r5, sp, 0x10",
            "mov r4, 0",
            "mov r0, r3",
            "mov r1, 0x1c",
            "mov r2, r5",
            "mov r3, 0x80",
            "str r4, [sp]",
            "str r4, [sp, 4]",
            "str r4, [sp, 8]",
            "bl sym.imp.getnameinfo",
            "cmp r0, r4",
            "beq 0x51e48",
            "ldr r0, str.getnameinfo_failed",
            "bl fcn.00027184",
            "mov r0, r4",
            "b 0x51e50",
            "mov r0, r5",
            "bl fcn.00029ed8",
            "add sp, sp, 0x94",
            "pop {r4, r5, pc}"
        ]
    },
    "sym.imp.inet_ntop": {
        "function_address": "0x0000c41c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x364]!"
        ]
    },
    "sym.imp.getnameinfo": {
        "function_address": "0x0000b978",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xa7c]!"
        ]
    },
    "fcn.00032cd4": {
        "function_address": "0x00032cd4",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r5, r0",
            "ldr r4, [0x00032d20]",
            "mov r6, r1",
            "ldr r0, [r4]",
            "bl sym.imp.free",
            "ldrh r2, [r5]",
            "movw r3, 0xfffd",
            "sub r2, r2, 1",
            "uxth r2, r2",
            "cmp r2, r3",
            "bhi 0x32d18",
            "mov r0, r5",
            "mov r1, r6",
            "bl fcn.00051d74",
            "str r0, [r4]",
            "pop {r4, r5, r6, pc}",
            "ldr r0, str._NONE_SET_",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.00032b60": {
        "function_address": "0x00032b60",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "mov ip, r0",
            "ldr lr, [0x00032bdc]",
            "sub sp, sp, 0x1c",
            "mov r3, r1",
            "mov r4, 4",
            "mov r5, 0",
            "mov r7, 0xa",
            "movw r6, 0x3ff",
            "cmp r1, 0",
            "bne 0x32b94",
            "cmp r0, r6",
            "bls 0x32bb4",
            "lsl r5, r0, 0x16",
            "lsr r0, r0, 0xa",
            "lsr r5, r5, 0x16",
            "orr r0, r0, r1, lsl 22",
            "lsr r1, r1, 0xa",
            "mul r5, r7, r5",
            "add lr, lr, 3",
            "lsr r5, r5, 0xa",
            "subs r4, r4, 1",
            "bne 0x32b84",
            "str r0, [sp]",
            "str r2, [sp, 0x10]",
            "mov r2, ip",
            "ldr r0, str.X_bytes:_llu___llu._u__sB__s",
            "stmib sp, {r1, r5, lr}",
            "bl sym.imp.printf",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.00032e24": {
        "function_address": "0x00032e24",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r0",
            "sub sp, sp, 0xdc",
            "ldrh r0, [r0, 0x38]",
            "bl fcn.00032310",
            "subs r5, r0, 0",
            "bne 0x32e48",
            "bl fcn.00032310",
            "mov r5, r0",
            "ldrsh r6, [r4, 0x18]",
            "mov r0, r6",
            "bl fcn.00032df8",
            "subs r7, r0, 0",
            "bne 0x32e68",
            "mvn r0, 0",
            "bl fcn.00032df8",
            "mov r7, r0",
            "add r2, r4, 8",
            "ldr r0, str.__9.9s_Link_encap:_s",
            "mov r1, r2",
            "str r2, [sp, 0x30]",
            "ldr r2, [r7, 4]",
            "bl sym.imp.printf",
            "ldr r3, [r7, 0x10]",
            "cmp r3, 0",
            "addne r0, r4, 0x7c",
            "ldrne r1, [r7, 0xc]",
            "movne r2, 0",
            "bne 0x32eac",
            "b 0x32ecc",
            "ldrb ip, [r0, r2]",
            "cmp ip, 0",
            "bne 0x32eb8",
            "add r2, r2, 1",
            "cmp r2, r1",
            "blo 0x32e9c",
            "b 0x3333c",
            "add r0, r4, 0x7c",
            "blx r3",
            "mov r1, r0",
            "ldr r0, str.HWaddr__s",
            "bl sym.imp.printf",
            "ldrh r3, [r4, 0x1a]",
            "tst r3, 0x2000",
            "beq 0x32f00",
            "ldr r3, aav.0x0005dbe0",
            "ldrb r2, [r4, 0x34]",
            "ldr r0, str.Media:_s",
            "ldr r1, [r3, r2, lsl 2]",
            "bl sym.imp.printf",
            "ldrh r3, [r4, 0x1a]",
            "tst r3, 0x4000",
            "beq 0x32f00",
            "ldr r0, str._auto_",
            "bl sym.imp.printf",
            "ldr r0, [0x00033360]",
            "bl sym.imp.puts",
            "ldr r3, [r4, 0x78]",
            "cmp r3, 0",
            "beq 0x32fa4",
            "ldr r7, [r5]",
            "mov r1, 1",
            "ldr r3, [r5, 0x14]",
            "add r0, r4, 0x38",
            "blx r3",
            "mov r1, r7",
            "mov r2, r0",
            "ldr r0, str.___________s_addr:_s",
            "bl sym.imp.printf",
            "ldrh r3, [r4, 0x1a]",
            "tst r3, 0x10",
            "beq 0x32f60",
            "mov r1, 1",
            "ldr r3, [r5, 0x14]",
            "add r0, r4, 0x48",
            "blx r3",
            "mov r1, r0",
            "ldr r0, str._P_t_P:_s",
            "bl sym.imp.printf",
            "ldrh r3, [r4, 0x1a]",
            "tst r3, 2",
            "beq 0x32f88",
            "mov r1, 1",
            "ldr r3, [r5, 0x14]",
            "add r0, r4, 0x58",
            "blx r3",
            "mov r1, r0",
            "ldr r0, str._Bcast:_s",
            "bl sym.imp.printf",
            "mov r1, 1",
            "ldr r3, [r5, 0x14]",
            "add r0, r4, 0x68",
            "blx r3",
            "mov r1, r0",
            "ldr r0, str._Mask:_s_n",
            "bl sym.imp.printf",
            "ldr r0, str._proc_net_if_inet6",
            "ldr r1, [0x00033378]",
            "bl sym.imp.fopen64",
            "cmp r0, 0",
            "str r0, [sp, 0x34]",
            "bne 0x3309c",
            "b 0x33134",
            "add r0, sp, 0xb4",
            "ldr r1, [sp, 0x30]",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x330b4",
            "ldr r3, [sp, 0x38]",
            "add r7, sp, 0x70",
            "ldr r2, [sp, 0x3c]",
            "mov r0, r7",
            "ldr r1, str._s:_s:_s:_s:_s:_s:_s:_s",
            "str r3, [sp, 0x10]",
            "str r2, [sp, 0x14]",
            "mov r2, r5",
            "ldr r3, [sp, 0x40]",
            "stm sp, {r8, sl}",
            "str sb, [sp, 8]",
            "str fp, [sp, 0xc]",
            "bl sym.imp.sprintf",
            "ldr r2, [sp, 0x44]",
            "mov r1, r7",
            "mov r0, 0xa",
            "bl sym.imp.inet_pton",
            "mov r3, 0xa",
            "mov r1, 1",
            "add r0, sp, 0x98",
            "strh r3, [sp, 0x98]",
            "bl fcn.00032cd4",
            "ldr r2, [sp, 0xd4]",
            "mov r1, r0",
            "ldr r0, str.__________inet6_addr:__s__d",
            "bl sym.imp.printf",
            "ldr r0, str._Scope:",
            "bl sym.imp.printf",
            "ldr r3, [sp, 0xd0]",
            "and r3, r3, 0xf0",
            "cmp r3, 0x20",
            "ldreq r0, [0x00033388]",
            "beq 0x33094",
            "bhi 0x33078",
            "cmp r3, 0",
            "ldreq r0, str.Global",
            "beq 0x33094",
            "cmp r3, 0x10",
            "ldreq r0, str.Host",
            "beq 0x33094",
            "b 0x33090",
            "cmp r3, 0x40",
            "ldreq r0, str.Site",
            "beq 0x33094",
            "cmp r3, 0x80",
            "ldreq r0, str.Compat",
            "beq 0x33094",
            "ldr r0, str.Unknown",
            "bl sym.imp.puts",
            "b 0x330b4",
            "add r5, sp, 0x48",
            "add r3, sp, 0x98",
            "add r2, r5, 5",
            "add r3, r3, 8",
            "str r2, [sp, 0x40]",
            "str r3, [sp, 0x44]",
            "add r2, r5, 0x1e",
            "add r3, r5, 0x23",
            "str r2, [sp, 0x38]",
            "add r8, r5, 0xa",
            "str r2, [sp, 0x10]",
            "add r2, sp, 0xc8",
            "str r3, [sp, 0x3c]",
            "add sl, r5, 0xf",
            "str r3, [sp, 0x14]",
            "add r3, sp, 0xd4",
            "str r2, [sp, 0x18]",
            "add r2, sp, 0xd0",
            "str r3, [sp, 0x1c]",
            "add r3, sp, 0xcc",
            "str r2, [sp, 0x20]",
            "add r2, sp, 0xb4",
            "str r3, [sp, 0x24]",
            "add sb, r5, 0x14",
            "str r2, [sp, 0x28]",
            "add fp, r5, 0x19",
            "ldr r0, [sp, 0x34]",
            "mov r2, r5",
            "ldr r1, str._4s_4s_4s_4s_4s_4s_4s_4s__08x__02x__02x__02x__20s_n",
            "ldr r3, [sp, 0x40]",
            "stm sp, {r8, sl}",
            "str sb, [sp, 8]",
            "str fp, [sp, 0xc]",
            "bl sym.imp.fscanf",
            "cmn r0, 1",
            "bne 0x32fc0",
            "ldr r0, [sp, 0x34]",
            "bl sym.imp.fclose",
            "ldr r0, str.",
            "bl sym.imp.printf",
            "ldrsh r3, [r4, 0x1a]",
            "cmp r3, 0",
            "bne 0x33154",
            "ldr r0, str._NO_FLAGS_",
            "bl sym.imp.printf",
            "b 0x33190",
            "ldr r7, [0x000333ac]",
            "ldr r5, aav.0x0005db64",
            "ldrh r2, [r7, 2]!",
            "ldrsh r3, [r4, 0x1a]",
            "tst r2, r3",
            "beq 0x33178",
            "ldr r0, [0x000333b4]",
            "mov r1, r5",
            "bl sym.imp.printf",
            "mov r0, r5",
            "bl sym.imp.strlen",
            "add r0, r0, 1",
            "ldrb r3, [r5, r0]!",
            "cmp r3, 0",
            "bne 0x3315c",
            "ldr r2, [r4, 0x1c]",
            "ldr r1, [r4, 0x20]",
            "ldr r0, str._MTU:_d__Metric:_d",
            "cmp r2, 0",
            "moveq r2, 1",
            "bl sym.imp.printf",
            "ldr r0, [0x00033360]",
            "bl sym.imp.puts",
            "ldr r3, [r4, 0x9c]",
            "cmp r3, 0",
            "beq 0x332a4",
            "movw r3, 0x101",
            "movw r2, 0x103",
            "cmp r6, r3",
            "cmpne r6, r2",
            "ldr r0, str.",
            "movne r6, 0",
            "moveq r6, 1",
            "bl sym.imp.printf",
            "ldr r1, [r4, 0xc0]",
            "ldrd r2, r3, [r4, 0xa0]",
            "ldr r0, str.RX_packets:_llu_errors:_lu_dropped:_lu_overruns:_lu_frame:_lu_n",
            "str r1, [sp]",
            "ldr r1, [r4, 0xc8]",
            "str r1, [sp, 4]",
            "ldr r1, [r4, 0xf0]",
            "str r1, [sp, 8]",
            "ldr r1, [r4, 0xec]",
            "str r1, [sp, 0xc]",
            "bl sym.imp.printf",
            "cmp r6, 0",
            "beq 0x3321c",
            "ldr r0, str._____________compressed:_lu_n",
            "ldr r1, [r4, 0xd4]",
            "bl sym.imp.printf",
            "ldr r0, str.",
            "bl sym.imp.printf",
            "ldr r1, [r4, 0xc4]",
            "ldrd r2, r3, [r4, 0xa8]",
            "ldr r0, str.TX_packets:_llu_errors:_lu_dropped:_lu_overruns:_lu_carrier:_lu_n",
            "str r1, [sp]",
            "ldr r1, [r4, 0xcc]",
            "str r1, [sp, 4]",
            "ldr r1, [r4, 0x100]",
            "str r1, [sp, 8]",
            "ldr r1, [r4, 0xfc]",
            "str r1, [sp, 0xc]",
            "bl sym.imp.printf",
            "ldr r0, str.__________collisions:_lu",
            "ldr r1, [r4, 0xdc]",
            "bl sym.imp.printf",
            "cmp r6, 0",
            "beq 0x33270",
            "ldr r0, str.compressed:_lu",
            "ldr r1, [r4, 0xd8]",
            "bl sym.imp.printf",
            "ldr r1, [r4, 0x24]",
            "cmn r1, 1",
            "beq 0x33284",
            "ldr r0, str.txqueuelen:_d",
            "bl sym.imp.printf",
            "ldr r0, str._n__________R",
            "bl sym.imp.printf",
            "ldrd r0, r1, [r4, 0xb0]",
            "ldr r2, [0x000333d8]",
            "bl fcn.00032b60",
            "ldrd r0, r1, [r4, 0xb8]",
            "ldr r2, aav.0x0005c340",
            "bl fcn.00032b60",
            "ldrb r3, [r4, 0x32]",
            "cmp r3, 0",
            "bne 0x332c8",
            "ldr r3, [r4, 0x28]",
            "cmp r3, 0",
            "bne 0x332c8",
            "ldr r3, [r4, 0x30]",
            "bics r2, r3, 0xff0000",
            "beq 0x3332c",
            "ldr r0, str.",
            "bl sym.imp.printf",
            "ldrb r1, [r4, 0x32]",
            "cmp r1, 0",
            "beq 0x332e4",
            "ldr r0, str.Interrupt:_d",
            "bl sym.imp.printf",
            "ldrh r1, [r4, 0x30]",
            "cmp r1, 0xff",
            "bls 0x332f8",
            "ldr r0, str.Base_address:0x_lx",
            "bl sym.imp.printf",
            "ldr r1, [r4, 0x28]",
            "cmp r1, 0",
            "beq 0x33310",
            "ldr r0, str.Memory:_lx__lx",
            "ldr r2, [r4, 0x2c]",
            "bl sym.imp.printf",
            "ldrb r1, [r4, 0x33]",
            "cmp r1, 0",
            "beq 0x33324",
            "ldr r0, str.DMA_chan:_x",
            "bl sym.imp.printf",
            "ldr r0, [0x00033360]",
            "bl sym.imp.puts",
            "ldr r0, [0x00033360]",
            "bl sym.imp.puts",
            "add sp, sp, 0xdc",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r2, [r7, 0x1c]",
            "cmp r2, 0",
            "beq 0x32eb8",
            "b 0x32ecc"
        ]
    },
    "fcn.00032310": {
        "function_address": "0x00032310",
        "instructions": [
            "ldr r2, aav.0x0005dbcc",
            "b 0x32324",
            "ldr r1, [r3, 8]",
            "cmp r1, r0",
            "beq 0x32330",
            "ldr r3, [r2, 4]!",
            "cmp r3, 0",
            "bne 0x32318",
            "mov r0, r3",
            "bx lr"
        ]
    },
    "fcn.00032df8": {
        "function_address": "0x00032df8",
        "instructions": [
            "ldr r2, aav.0x0005d5c8",
            "b 0x32e0c",
            "ldr r1, [r3, 8]",
            "cmp r1, r0",
            "beq 0x32e18",
            "ldr r3, [r2, 4]!",
            "cmp r3, 0",
            "bne 0x32e00",
            "mov r0, r3",
            "bx lr"
        ]
    },
    "sym.imp.inet_pton": {
        "function_address": "0x0000ba14",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xa14]!"
        ]
    },
    "sym.imp.fscanf": {
        "function_address": "0x0000c3bc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x3a4]!"
        ]
    },
    "fcn.00038af0": {
        "function_address": "0x00038af0",
        "instructions": [
            "push {r0, r1, r2, r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov sb, 0x11",
            "str r0, [sp]",
            "mov sl, 0xa",
            "str r1, [sp, 4]",
            "ldr r5, [r0]",
            "ldr r4, [r1]",
            "ldr fp, [0x00038c44]",
            "ldr r7, [0x00038c48]",
            "b 0x38c0c",
            "ldr r8, [r4, 4]",
            "add r6, r4, 4",
            "ldr r1, [0x00038c4c]",
            "mov r0, r8",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "subeq r5, r5, 1",
            "moveq r4, r6",
            "beq 0x38c14",
            "ldrb r3, [r8]",
            "cmp r3, 0x2d",
            "bne 0x38c14",
            "ldrb r1, [r8, 1]",
            "ldr r0, str._family",
            "cmp r1, 0x2d",
            "movne r1, r8",
            "addeq r1, r8, 1",
            "bl fcn.000267ac",
            "add r0, r0, 1",
            "cmp r0, 1",
            "bne 0x38bc4",
            "ldr r1, [r6, 4]",
            "sub r5, r5, 1",
            "add r4, r6, 4",
            "cmp r1, 0",
            "beq 0x38c00",
            "ldr r0, str._family",
            "bl fcn.000267ac",
            "add r0, r0, 1",
            "cmp r0, 2",
            "streq r0, [r7]",
            "beq 0x38bb0",
            "cmp r0, 3",
            "streq sl, [r7]",
            "beq 0x38bb0",
            "cmp r0, 4",
            "bne 0x38bb8",
            "str sb, [r7]",
            "mov r4, r6",
            "b 0x38c04",
            "ldr r0, [r4]",
            "ldr r1, str.protocol_family",
            "bl fcn.0003f448",
            "cmp r0, 5",
            "moveq r3, 2",
            "streq r3, [r7]",
            "beq 0x38c04",
            "cmp r0, 6",
            "streq sl, [r7]",
            "beq 0x38c04",
            "cmp r0, 7",
            "streq sb, [r7]",
            "beq 0x38c04",
            "cmp r0, 8",
            "ldreq r3, [fp]",
            "addeq r3, r3, 1",
            "streq r3, [fp]",
            "beq 0x38c04",
            "bl fcn.0000c5e0",
            "sub r5, r5, 1",
            "add r4, r4, 4",
            "cmp r5, 1",
            "bgt 0x38b18",
            "ldr r3, [0x00038c44]",
            "ldr r2, [r3]",
            "ldr r3, [0x00038c58]",
            "cmp r2, 0",
            "moveq r2, 0xa",
            "movne r2, 0x5c",
            "strb r2, [r3]",
            "ldr r3, [sp]",
            "str r5, [r3]",
            "ldr r3, [sp, 4]",
            "str r4, [r3]",
            "pop {r1, r2, r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0003f448": {
        "function_address": "0x0003f448",
        "instructions": [
            "push {r3, lr}",
            "mov r3, r0",
            "mov r2, r1",
            "ldr r0, str.invalid_argument__s_to__s",
            "mov r1, r3",
            "bl fcn.000271d8"
        ]
    },
    "fcn.00026800": {
        "function_address": "0x00026800",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r5, r0",
            "mov r0, r1",
            "mov r6, r1",
            "bl sym.imp.strlen",
            "subs r7, r0, 0",
            "movne r4, 0",
            "bne 0x26850",
            "b 0x2685c",
            "mov r0, r5",
            "mov r1, r6",
            "mov r2, r7",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "beq 0x26860",
            "mov r0, r5",
            "add r4, r4, 1",
            "bl sym.imp.strlen",
            "add r0, r0, 1",
            "add r5, r5, r0",
            "ldrb r3, [r5]",
            "cmp r3, 0",
            "bne 0x26824",
            "mvn r4, 0",
            "mov r0, r4",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.00054fd4": {
        "function_address": "0x00054fd4",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "mov r7, r1",
            "ldrh r1, [r0]",
            "sub sp, sp, 0xa4",
            "mov r3, 0x10",
            "add r4, sp, 0x10",
            "str r3, [sp, 4]",
            "orr r3, r7, 2",
            "cmp r1, 2",
            "str r3, [sp, 8]",
            "moveq r1, 0x10",
            "movne r1, 0x1c",
            "add r5, sp, 0x90",
            "mov r2, r4",
            "mov r3, 0x80",
            "mov r6, r0",
            "str r5, [sp]",
            "bl sym.imp.getnameinfo",
            "cmp r0, 0",
            "movne r0, 0",
            "bne 0x54b1c",
            "tst r7, 2",
            "beq 0x54ae0",
            "mov r0, r4",
            "bl fcn.00029ed8",
            "b 0x54b1c",
            "ldrh r3, [r6]",
            "cmp r3, 0xa",
            "bne 0x54b0c",
            "mov r0, r4",
            "mov r1, 0x3a",
            "bl sym.imp.strchr",
            "cmp r0, 0",
            "ldrne r0, str.__s_:_s",
            "movne r1, r4",
            "movne r2, r5",
            "bne 0x54b18",
            "ldr r0, aav.0x0005d844",
            "add r1, sp, 0x10",
            "add r2, sp, 0x90",
            "bl fcn.0002a2d0",
            "add sp, sp, 0xa4",
            "pop {r4, r5, r6, r7, pc}",
            "mov r1, 3",
            "b 0x54a78"
        ]
    },
    "fcn.00033a18": {
        "function_address": "0x00033a18",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "sub sp, sp, 0x48",
            "add r4, sp, 0x38",
            "mov r5, r1",
            "add r3, r4, 8",
            "mov r2, r4",
            "str r3, [sp]",
            "add r3, r4, 0xc",
            "str r3, [sp, 4]",
            "add r6, sp, 8",
            "ldr r1, str._08X_08X_08X_08X",
            "add r3, r4, 4",
            "bl sym.imp.sscanf",
            "mov r3, 0x2e",
            "mov r1, r4",
            "mov r2, r6",
            "mov r0, 0xa",
            "bl sym.imp.inet_ntop",
            "mov r0, 0xa",
            "mov r1, r6",
            "add r2, r5, 8",
            "bl sym.imp.inet_pton",
            "mov r3, 0xa",
            "strh r3, [r5]",
            "add sp, sp, 0x48",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.00033704": {
        "function_address": "0x00033704",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r1",
            "add r2, r4, 4",
            "ldr r1, [0x00033724]",
            "bl sym.imp.sscanf",
            "mov r3, 2",
            "strh r3, [r4]",
            "pop {r4, pc}"
        ]
    },
    "fcn.00033a84": {
        "function_address": "0x00033a84",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "subs r7, r3, 0",
            "mov r5, r1",
            "mov r6, r2",
            "beq 0x33aa0",
            "bl fcn.00054fd4",
            "b 0x33aa4",
            "bl fcn.00054fbc",
            "uxth r5, r5",
            "mov r4, r0",
            "lsl r0, r5, 8",
            "orr r0, r0, r5, lsr 8",
            "uxth r0, r0",
            "cmp r0, 0",
            "ldreq r2, [0x00033b0c]",
            "beq 0x33aec",
            "cmp r7, 0",
            "bne 0x33ae0",
            "mov r1, r6",
            "bl sym.imp.getservbyport",
            "cmp r0, 0",
            "ldrne r2, [r0]",
            "bne 0x33aec",
            "mov r0, r5",
            "bl fcn.0002a220",
            "mov r2, r0",
            "mov r1, r4",
            "ldr r0, aav.0x0005d844",
            "bl fcn.0002a2d0",
            "mov r5, r0",
            "mov r0, r4",
            "bl sym.imp.free",
            "mov r0, r5",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.00054fbc": {
        "function_address": "0x00054fbc",
        "instructions": [
            "mov r1, 2",
            "b 0x54a78"
        ]
    },
    "sym.imp.getservbyport": {
        "function_address": "0x0000c008",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x61c]!"
        ]
    },
    "fcn.00035420": {
        "function_address": "0x00035420",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r8, r1",
            "sub sp, sp, 0xb4",
            "ldr r1, [0x000355e4]",
            "mov sl, r0",
            "ldr r0, str._proc_net_route",
            "bl fcn.00029f54"
        ]
    },
    "fcn.00033654": {
        "function_address": "0x00033654",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r4, r1",
            "ldr r1, [0x000336f4]",
            "mov r5, r0",
            "mov r7, r2",
            "bl sym.imp.fopen64",
            "subs r6, r0, 0",
            "bne 0x336a8",
            "ldr r3, [0x000336f8]",
            "ldr r3, [r3]",
            "ldr r3, [r3]",
            "cmp r3, 2",
            "beq 0x33698",
            "ldr r0, aav.0x0005ad0c",
            "mov r1, r5",
            "pop {r4, r5, r6, r7, r8, lr}",
            "b fcn.000288b8",
            "ldr r0, str.no_support_for__s_on_this_system",
            "mov r1, r4",
            "pop {r4, r5, r6, r7, r8, lr}",
            "b fcn.00027184",
            "mov r8, 0",
            "mov r0, r6",
            "bl fcn.00027630",
            "subs r4, r0, 0",
            "beq 0x336d8",
            "add r5, r8, 1",
            "mov r0, r8",
            "mov r1, r4",
            "mov r8, r5",
            "blx r7",
            "mov r0, r4",
            "bl sym.imp.free",
            "mov r0, r6",
            "bl sym.imp.feof",
            "cmp r0, 0",
            "beq 0x336ac",
            "mov r0, r6",
            "pop {r4, r5, r6, r7, r8, lr}",
            "b sym.imp.fclose"
        ]
    },
    "fcn.0003435c": {
        "function_address": "0x0003435c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "sub sp, sp, 0x28",
            "mov r4, 0",
            "add r6, sp, 4",
            "mov r5, r0",
            "mov r2, 0x20",
            "mov r0, r6",
            "mov r7, r1",
            "mov r1, r4",
            "str r4, [sp, 0x24]",
            "bl sym.imp.memset",
            "mov r3, 1",
            "mov r2, r6",
            "str r3, [sp, 0xc]",
            "mov r0, r5",
            "mov r1, r4",
            "add r3, sp, 0x24",
            "bl sym.imp.getaddrinfo",
            "subs r6, r0, 0",
            "bne 0x34420",
            "mov r2, r5",
            "ldr r0, str.__10s__s_n",
            "mov r1, r7",
            "ldr r4, [sp, 0x24]",
            "mov r5, r6",
            "bl sym.imp.printf",
            "b 0x34414",
            "ldr r0, [r4, 0x14]",
            "add r5, r5, 1",
            "bl fcn.00054fd4",
            "mov r8, r0",
            "ldr r0, [r4, 0x14]",
            "bl fcn.00054fc4",
            "cmp r0, 0",
            "mov r7, r0",
            "moveq r3, 0xa",
            "movne r3, 0x20",
            "ldr r0, str.Address__u:__s_c",
            "mov r1, r5",
            "mov r2, r8",
            "bl sym.imp.printf",
            "cmp r7, 0",
            "beq 0x34410",
            "mov r0, r7",
            "bl sym.imp.puts",
            "ldr r4, [r4, 0x1c]",
            "cmp r4, 0",
            "bne 0x343c8",
            "b 0x3442c",
            "ldr r0, str.cant_resolve__s",
            "mov r1, r5",
            "bl fcn.00027184",
            "subs r0, r6, 0",
            "movne r0, 1",
            "add sp, sp, 0x28",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.00054fc4": {
        "function_address": "0x00054fc4",
        "instructions": [
            "mov r1, 0xa",
            "b 0x54a78"
        ]
    },
    "fcn.0002a420": {
        "function_address": "0x0002a420",
        "instructions": [
            "push {r0, r1, r2, lr}",
            "str r3, [sp]",
            "ldr r3, [sp, 0x10]",
            "str r3, [sp, 4]",
            "mov r3, 0",
            "bl sym.imp.sendto",
            "cmp r0, 0",
            "bge 0x2a448",
            "ldr r0, str.sendto",
            "bl fcn.00028900",
            "pop {r1, r2, r3, pc}"
        ]
    },
    "sym.imp.sendto": {
        "function_address": "0x0000bac8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x99c]!"
        ]
    },
    "fcn.00054578": {
        "function_address": "0x00054578",
        "instructions": [
            "push {r0, r1, r2, lr}",
            "mov r1, 0",
            "mov r0, sp",
            "bl sym.imp.gettimeofday",
            "ldm sp, {r0, r2}",
            "ldr r1, [0x000545a8]",
            "asr r3, r2, 0x1f",
            "smlal r2, r3, r1, r0",
            "mov r0, r2",
            "mov r1, r3",
            "add sp, sp, 0xc",
            "ldm sp!, {pc}"
        ]
    },
    "sym.imp.gettimeofday": {
        "function_address": "0x0000b8a0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xb0c]!"
        ]
    },
    "fcn.000344f4": {
        "function_address": "0x000344f4",
        "instructions": [
            "push {r0, r1, r2, r4, r5, r6, r7, lr}",
            "mov r5, r0",
            "ldr r4, [0x000345bc]",
            "mov r7, 1",
            "mov r6, r2",
            "ldr r3, [r4, 0x10]",
            "uxth ip, r3",
            "add r3, r3, r7",
            "str r3, [r4, 0x10]",
            "mov r3, 0x1c",
            "ubfx r0, ip, 3, 7",
            "and ip, ip, 7",
            "add r0, r4, r0",
            "add r0, r0, 0x60",
            "ldrb lr, [r0, 4]",
            "bic ip, lr, r7, lsl ip",
            "strb ip, [r0, 4]",
            "str r3, [sp]",
            "mov r3, r4",
            "ldr r0, [r3], 0x40",
            "bl fcn.0002a420",
            "cmp r0, r6",
            "beq 0x34558",
            "ldr r0, str.write_error",
            "bl fcn.000271d8",
            "ldr r3, [r4, 0x5c]",
            "cmp r3, 0",
            "beq 0x34574",
            "ldr r0, [r4]",
            "bl sym.imp.close",
            "mov r0, 0",
            "bl sym.imp.exit",
            "mov r0, 0xe",
            "mov r1, r5",
            "bl sym.imp.signal",
            "ldr r3, [r4, 0x1c]",
            "cmp r3, 0",
            "beq 0x34598",
            "ldr r2, [r4, 0x10]",
            "cmp r2, r3",
            "bhs 0x345a0",
            "mov r0, 1",
            "b 0x345b0",
            "mov r0, 0xe",
            "ldr r1, fcn.00034704",
            "bl sym.imp.signal",
            "mov r0, 5",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, lr}",
            "b sym.imp.alarm"
        ]
    },
    "fcn.0005178c": {
        "function_address": "0x0005178c",
        "instructions": [
            "push {r4, lr}",
            "ldr r0, str.ipv6_icmp",
            "bl sym.imp.getprotobyname",
            "cmp r0, 0",
            "mov r1, 3",
            "ldrne r2, [r0, 8]",
            "moveq r2, 0x3a",
            "mov r0, 0xa",
            "bl sym.imp.socket",
            "subs r4, r0, 0",
            "bge 0x517dc",
            "ldr r3, [0x000517f0]",
            "ldr r3, [r3]",
            "ldr r3, [r3]",
            "cmp r3, 1",
            "bne 0x517d4",
            "ldr r0, str.permission_denied.__are_you_root__",
            "bl fcn.000271d8",
            "ldr r0, str.cant_create_raw_socket",
            "bl fcn.00028900",
            "bl sym.imp.getuid",
            "bl fcn.0002a2b4"
        ]
    },
    "sym.imp.getprotobyname": {
        "function_address": "0x0000b828",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xb5c]!"
        ]
    },
    "fcn.0002a3e8": {
        "function_address": "0x0002a3e8",
        "instructions": [
            "push {r3, lr}",
            "bl sym.imp.bind",
            "cmp r0, 0",
            "popeq {r3, pc}",
            "ldr r0, [pc]",
            "bl fcn.00028900"
        ]
    },
    "sym.imp.bind": {
        "function_address": "0x0000b6a8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xc5c]!"
        ]
    },
    "fcn.00054b50": {
        "function_address": "0x00054b50",
        "instructions": [
            "mov r3, 4",
            "push {r0, r1, r2, lr}",
            "mov r1, 1",
            "str r3, [sp]",
            "mov r2, 6",
            "ldr r3, aav.0x0005bd40",
            "bl sym.imp.setsockopt",
            "pop {r1, r2, r3, pc}"
        ]
    },
    "sym.imp.setsockopt": {
        "function_address": "0x0000bc90",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x86c]!"
        ]
    },
    "fcn.000345c8": {
        "function_address": "0x000345c8",
        "instructions": [
            "push {r4, r5, fp, lr}",
            "add fp, sp, 0xc",
            "ldr r5, [0x00034638]",
            "ldr r3, [r5, 8]",
            "add r3, r3, 0x1a",
            "bic r3, r3, 7",
            "sub sp, sp, r3",
            "mvn r3, 0x7f",
            "strb r3, [sp]",
            "add r3, r3, 0x80",
            "strb r3, [sp, 1]",
            "mov r4, sp",
            "strh r3, [sp, 2]",
            "ldr r3, [r5, 0x10]",
            "ubfx r2, r3, 8, 8",
            "orr r3, r2, r3, lsl 8",
            "strh r3, [sp, 6]",
            "ldrh r3, [r5, 0x20]",
            "strh r3, [sp, 4]",
            "bl fcn.00054578",
            "ldr r2, [r5, 8]",
            "mov r1, sp",
            "str r0, [sp, 8]",
            "ldr r0, fcn.000345c8",
            "add r2, r2, 8",
            "bl fcn.000344f4",
            "sub sp, fp, 0xc",
            "pop {r4, r5, fp, pc}"
        ]
    },
    "fcn.00034850": {
        "function_address": "0x00034850",
        "instructions": [
            "push {r0, r1, r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r6, r3",
            "ldr r7, [0x00034980]",
            "subs r5, r1, 0",
            "mov sb, r0",
            "mov sl, r2",
            "ldr r8, [sp, 0x28]",
            "ldr r3, [r7, 0x14]",
            "add r3, r3, 1",
            "str r3, [r7, 0x14]",
            "beq 0x348b0",
            "bl fcn.00054578",
            "ldr r4, [r5]",
            "ldrd r2, r3, [r7, 0x30]",
            "rsb r4, r4, r0",
            "adds r2, r2, r4",
            "adc r3, r3, 0",
            "strd r2, r3, [r7, 0x30]",
            "ldr r3, [r7, 0x24]",
            "cmp r4, r3",
            "ldr r3, [r7, 0x28]",
            "strlo r4, [r7, 0x24]",
            "cmp r4, r3",
            "strhi r4, [r7, 0x28]",
            "ubfx r3, r6, 3, 7",
            "and r1, r6, 7",
            "add r3, r7, r3",
            "add r3, r3, 0x60",
            "ldrb r2, [r3, 4]",
            "asr r0, r2, r1",
            "tst r0, 1",
            "beq 0x348f0",
            "ldr r3, [r7, 0x18]",
            "add r3, r3, 1",
            "str r3, [r7, 0x18]",
            "ldr r3, [r7, 0x14]",
            "sub r3, r3, 1",
            "str r3, [r7, 0x14]",
            "ldr r7, str.__DUP__",
            "b 0x34900",
            "ldr r7, [0x00034988]",
            "mov r0, 1",
            "orr r2, r2, r0, lsl r1",
            "strb r2, [r3, 4]",
            "ldr r3, [0x0003498c]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "bne 0x34978",
            "ldr r0, str._d_bytes_from__s:_seq_u_ttl_d",
            "mov r1, sb",
            "mov r2, sl",
            "mov r3, r6",
            "str r8, [sp]",
            "bl sym.imp.printf",
            "cmp r5, 0",
            "beq 0x3495c",
            "mov r1, 0x3e8",
            "mov r0, r4",
            "bl fcn.00055000",
            "mov r1, 0x3e8",
            "mov r5, r0",
            "mov r0, r4",
            "bl fcn.000550a8",
            "ldr r0, str._time_u._03u_ms",
            "mov r2, r1",
            "mov r1, r5",
            "bl sym.imp.printf",
            "mov r0, r7",
            "bl sym.imp.puts",
            "ldr r3, obj.stdout",
            "ldr r0, [r3]",
            "add sp, sp, 8",
            "pop {r4, r5, r6, r7, r8, sb, sl, lr}",
            "b sym.imp.fflush",
            "add sp, sp, 8",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "fcn.000517fc": {
        "function_address": "0x000517fc",
        "instructions": [
            "push {r4, lr}",
            "ldr r0, [0x0005185c]",
            "bl sym.imp.getprotobyname",
            "cmp r0, 0",
            "mov r1, 3",
            "ldrne r2, [r0, 8]",
            "moveq r2, 1",
            "mov r0, 2",
            "bl sym.imp.socket",
            "subs r4, r0, 0",
            "bge 0x5184c",
            "ldr r3, [0x00051860]",
            "ldr r3, [r3]",
            "ldr r3, [r3]",
            "cmp r3, 1",
            "bne 0x51844",
            "ldr r0, str.permission_denied.__are_you_root__",
            "bl fcn.000271d8",
            "ldr r0, str.cant_create_raw_socket",
            "bl fcn.00028900",
            "bl sym.imp.getuid",
            "bl fcn.0002a2b4"
        ]
    },
    "fcn.00034640": {
        "function_address": "0x00034640",
        "instructions": [
            "push {r4, r5, r6, fp, lr}",
            "add fp, sp, 0x10",
            "ldr r6, [0x000346fc]",
            "sub sp, sp, 0xc",
            "mov r5, 0",
            "ldr r3, [r6, 8]",
            "add r3, r3, 0x1a",
            "bic r3, r3, 7",
            "sub sp, sp, r3",
            "mov r3, 8",
            "strb r3, [sp]",
            "mov r4, sp",
            "ldr r3, [r6, 0x10]",
            "strb r5, [sp, 1]",
            "strh r5, [sp, 2]",
            "ubfx r2, r3, 8, 8",
            "orr r3, r2, r3, lsl 8",
            "strh r3, [sp, 6]",
            "ldrh r3, [r6, 0x20]",
            "strh r3, [sp, 4]",
            "bl fcn.00054578",
            "ldr r2, [r6, 8]",
            "mov r3, sp",
            "str r0, [sp, 8]",
            "strh r5, [fp, -0x16]",
            "add r2, r2, 8",
            "mov r1, r2",
            "b 0x346bc",
            "ldrh r0, [r3], 2",
            "sub r1, r1, 2",
            "add r5, r5, r0",
            "cmp r1, 1",
            "bgt 0x346b0",
            "ldrbeq r3, [r3]",
            "mov r1, r4",
            "ldr r0, fcn.00034640",
            "strbeq r3, [fp, -0x16]",
            "ldrheq r3, [fp, -0x16]",
            "addeq r5, r5, r3",
            "uxth r3, r5",
            "add r5, r3, r5, asr 16",
            "add r5, r5, r5, asr 16",
            "mvn r5, r5",
            "strh r5, [r4, 2]",
            "bl fcn.000344f4",
            "sub sp, fp, 0x10",
            "pop {r4, r5, r6, fp, pc}"
        ]
    },
    "fcn.000349b4": {
        "function_address": "0x000349b4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "add fp, sp, 0x20",
            "ldr r4, [0x00034cec]",
            "sub sp, sp, 0xbc",
            "mov r7, r0",
            "ldr r3, [r4, 8]",
            "add r8, r3, 0x88",
            "add r3, r3, 0x96",
            "bic r3, r3, 7",
            "sub sp, sp, r3",
            "bl fcn.0005178c",
            "mov ip, r4",
            "mov lr, r7",
            "str r0, [ip], 0x40",
            "mov r6, r0",
            "ldm lr!, {r0, r1, r2, r3}",
            "add r5, sp, 8",
            "stm ip!, {r0, r1, r2, r3}",
            "ldr r3, [r4, 4]",
            "ldm lr, {r0, r1, r2}",
            "cmp r3, 0",
            "stm ip, {r0, r1, r2}",
            "beq 0x34a20",
            "mov r0, r6",
            "add r1, r3, 4",
            "ldr r2, [r3]",
            "bl fcn.0002a3e8",
            "ldr r3, [0x00034cf0]",
            "sub r0, fp, 0x98",
            "ldr r3, [r3]",
            "tst r3, 2",
            "bne 0x34a4c",
            "mov r1, 0xff",
            "mov r2, 0x20",
            "bl sym.imp.memset",
            "mvn r3, 2",
            "str r3, [fp, -0x88]",
            "b 0x34a58",
            "mov r1, 0",
            "mov r2, 0x20",
            "bl sym.imp.memset",
            "mov r3, 0x20",
            "ldr r0, [r4]",
            "str r3, [sp]",
            "mov r1, 0x3a",
            "mov r2, 1",
            "sub r3, fp, 0x98",
            "bl sym.imp.setsockopt",
            "cmp r0, 0",
            "bge 0x34a84",
            "ldr r0, str.setsockopt_ICMP6_FILTER_",
            "bl fcn.000271d8",
            "ldr r0, [r4]",
            "sub r6, fp, 0x24",
            "bl fcn.00054b50",
            "mov r3, 0xc000",
            "mov r7, 4",
            "str r3, [r6, -4]!",
            "mov r1, 1",
            "mov r2, 8",
            "mov r3, r6",
            "ldr r0, [r4]",
            "sub sl, fp, 0x4c",
            "str r7, [sp]",
            "bl sym.imp.setsockopt",
            "mov r3, 2",
            "mov r1, 0xff",
            "str r3, [fp, -0x28]",
            "mov r2, 7",
            "mov r3, r6",
            "ldr r0, [r4]",
            "str r7, [sp]",
            "bl sym.imp.setsockopt",
            "mov r2, 8",
            "mov r1, 0x29",
            "ldr r3, aav.0x0005bd40",
            "ldr r0, [r4]",
            "str r7, [sp]",
            "bl sym.imp.setsockopt",
            "ldr r3, [r4, 0xc]",
            "mov r0, 2",
            "ldr r1, fcn.00034704",
            "ldr sb, [0x00034d00]",
            "cmp r3, 0",
            "strne r3, [r4, 0x58]",
            "bl sym.imp.signal",
            "mov r0, 0",
            "bl fcn.000345c8",
            "mov r2, 0x1c",
            "sub r3, fp, 0x68",
            "str r2, [fp, -0x48]",
            "sub r2, fp, 0x30",
            "str r2, [fp, -0x44]",
            "mov r2, 1",
            "str r3, [fp, -0x4c]",
            "add r3, r3, 8",
            "str r2, [fp, -0x40]",
            "sub r2, fp, 0xc8",
            "str r2, [fp, -0x3c]",
            "str r5, [fp, -0x30]",
            "str r8, [fp, -0x2c]",
            "str r3, [fp, -0xd0]",
            "mov r3, 0x30",
            "ldr r0, [r4]",
            "mov r1, sl",
            "mov r2, 0",
            "str r3, [fp, -0x38]",
            "bl sym.imp.recvmsg",
            "subs r6, r0, 0",
            "bge 0x34b88",
            "ldr r3, [sb]",
            "ldr r3, [r3]",
            "cmp r3, 4",
            "beq 0x34b4c",
            "ldr r0, str.recvfrom",
            "bl fcn.000288b8",
            "b 0x34b4c",
            "ldr r3, [fp, -0x38]",
            "mvn r7, 0",
            "cmp r3, 0xb",
            "ldrhi r8, [fp, -0x3c]",
            "movls r8, 0",
            "b 0x34bc8",
            "ldr r3, [r8, 4]",
            "cmp r3, 0x29",
            "bne 0x34bb8",
            "ldr r3, [r8, 8]",
            "cmp r3, 8",
            "ldreq r7, [r8, 0xc]",
            "mov r1, r8",
            "mov r0, sl",
            "bl sym.imp.__cmsg_nxthdr",
            "mov r8, r0",
            "cmp r8, 0",
            "bne 0x34ba0",
            "ldr r3, [r4, 8]",
            "add r3, r3, 8",
            "cmp r6, r3",
            "blo 0x34ccc",
            "ldrh r2, [r5, 4]",
            "ldrh r3, [r4, 0x20]",
            "cmp r2, r3",
            "bne 0x34ccc",
            "ldrb r1, [r5]",
            "cmp r1, 0x81",
            "bne 0x34c4c",
            "ldrh r3, [r5, 6]",
            "cmp r6, 0xb",
            "ldr r1, [fp, -0xd0]",
            "sub r2, fp, 0x98",
            "mov r0, 0xa",
            "addhi r8, r5, 8",
            "lsl ip, r3, 8",
            "orr ip, ip, r3, lsr 8",
            "mov r3, 0x2e",
            "uxth ip, ip",
            "str ip, [fp, -0xd4]",
            "bl sym.imp.inet_ntop",
            "ldr ip, [fp, -0xd4]",
            "mov r2, r0",
            "mov r1, r8",
            "mov r0, r6",
            "str r7, [sp]",
            "mov r3, ip",
            "bl fcn.00034850",
            "b 0x34ccc",
            "cmp r1, 0x80",
            "beq 0x34ccc",
            "bhi 0x34c94",
            "cmp r1, 2",
            "ldreq r2, str.Packet_too_big",
            "beq 0x34cc4",
            "bhi 0x34c78",
            "cmp r1, 1",
            "ldreq r2, str.Destination_Unreachable",
            "beq 0x34cc4",
            "b 0x34cc0",
            "cmp r1, 3",
            "ldreq r2, str.Time_Exceeded",
            "beq 0x34cc4",
            "cmp r1, 4",
            "ldreq r2, str.Parameter_Problem",
            "beq 0x34cc4",
            "b 0x34cc0",
            "cmp r1, 0x82",
            "ldreq r2, str.Listener_Query",
            "beq 0x34cc4",
            "ldrlo r2, str.Echo_Reply",
            "blo 0x34cc4",
            "cmp r1, 0x83",
            "ldreq r2, str.Listener_Report",
            "beq 0x34cc4",
            "cmp r1, 0x84",
            "ldreq r2, str.Listener_Reduction",
            "beq 0x34cc4",
            "ldr r2, str.unknown_ICMP_type",
            "ldr r0, str.warning:_got_ICMP__d___s_",
            "bl fcn.00027184",
            "ldr r3, [r4, 0x1c]",
            "cmp r3, 0",
            "beq 0x34b4c",
            "ldr r2, [r4, 0x14]",
            "cmp r2, r3",
            "blo 0x34b4c",
            "sub sp, fp, 0x20",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.imp.recvmsg": {
        "function_address": "0x0000c05c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x5e4]!"
        ]
    },
    "sym.imp.__cmsg_nxthdr": {
        "function_address": "0x0000b96c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xa84]!"
        ]
    },
    "fcn.00034d30": {
        "function_address": "0x00034d30",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "add fp, sp, 0x20",
            "ldr r4, [0x00034f34]",
            "sub sp, sp, 0x2c",
            "mov r6, r0",
            "ldr r3, [r4, 8]",
            "add r7, r3, 0x88",
            "add r3, r3, 0x96",
            "bic r3, r3, 7",
            "sub sp, sp, r3",
            "bl fcn.000517fc",
            "mov ip, r4",
            "mov lr, r0",
            "str r0, [ip], 0x40",
            "add r5, sp, 8",
            "ldm r6, {r0, r1, r2, r3}",
            "stm ip, {r0, r1, r2, r3}",
            "ldr r3, [r4, 4]",
            "cmp r3, 0",
            "beq 0x34dbc",
            "ldr r2, [r3]",
            "mov r0, lr",
            "mov r1, 0",
            "add r3, r3, 4",
            "str r2, [sp]",
            "mov r2, 0x20",
            "bl sym.imp.setsockopt",
            "cmp r0, 0",
            "beq 0x34dac",
            "ldr r0, str.cant_set_multicast_source_interface",
            "bl fcn.000271d8",
            "ldm r4, {r0, r3}",
            "add r1, r3, 4",
            "ldr r2, [r3]",
            "bl fcn.0002a3e8",
            "ldr r0, [r4]",
            "mov sl, 0x10",
            "bl fcn.00054b50",
            "sub r3, fp, 0x24",
            "mov r2, 0xc000",
            "str r2, [r3, -4]!",
            "mov r2, 4",
            "ldr r6, [0x00034f3c]",
            "mov r1, 1",
            "str r2, [sp]",
            "add r2, r2, r2",
            "ldr r0, [r4]",
            "bl sym.imp.setsockopt",
            "ldr r1, fcn.00034704",
            "mov r0, 2",
            "bl sym.imp.signal",
            "mov r0, 0",
            "bl fcn.00034640",
            "sub r3, fp, 0x3c",
            "ldr r0, [r4]",
            "str r3, [sp]",
            "sub r3, fp, 0x2c",
            "str r3, [sp, 4]",
            "mov r1, r5",
            "mov r2, r7",
            "mov r3, 0",
            "str sl, [fp, -0x2c]",
            "bl sym.imp.recvfrom",
            "cmp r0, 0",
            "bge 0x34e50",
            "ldr r3, [r6]",
            "ldr r3, [r3]",
            "cmp r3, 4",
            "beq 0x34e04",
            "ldr r0, str.recvfrom",
            "bl fcn.000288b8",
            "b 0x34e04",
            "ldr r3, [r4, 8]",
            "add r3, r3, 8",
            "cmp r0, r3",
            "blo 0x34efc",
            "ldrb r2, [r5]",
            "ldrh r1, [r4, 0x20]",
            "and r2, r2, 0xf",
            "lsl r3, r2, 2",
            "add sb, r5, r3",
            "ldrh ip, [sb, 4]",
            "cmp ip, r1",
            "bne 0x34efc",
            "ldrb r1, [r5, r2, lsl 2]",
            "cmp r1, 0",
            "bne 0x34edc",
            "ldrh r2, [sb, 6]",
            "rsb r3, r3, r0",
            "cmp r3, 0xb",
            "ldr r0, [fp, -0x38]",
            "movls sb, r1",
            "addhi sb, sb, 8",
            "str r3, [fp, -0x40]",
            "lsl r8, r2, 8",
            "orr r8, r8, r2, lsr 8",
            "bl sym.imp.inet_ntoa",
            "ldrb r1, [r5, 8]",
            "uxth r8, r8",
            "ldr r3, [fp, -0x40]",
            "mov r2, r0",
            "str r1, [sp]",
            "mov r1, sb",
            "mov r0, r3",
            "mov r3, r8",
            "bl fcn.00034850",
            "b 0x34efc",
            "cmp r1, 8",
            "beq 0x34efc",
            "cmp r1, 0x12",
            "ldr r0, str.warning:_got_ICMP__d___s_",
            "ldrls r3, aav.0x0005e11c",
            "ldrhi r2, str.unknown_ICMP_type",
            "ldrls r2, [r3, r1, lsl 2]",
            "bl fcn.00027184",
            "ldr r3, [r4, 0x60]",
            "cmp r3, 0",
            "beq 0x34f14",
            "ldr r3, [r4, 0x14]",
            "cmp r3, 0",
            "bne 0x34f2c",
            "ldr r3, [r4, 0x1c]",
            "cmp r3, 0",
            "beq 0x34e04",
            "ldr r2, [r4, 0x14]",
            "cmp r2, r3",
            "blo 0x34e04",
            "sub sp, fp, 0x20",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.imp.recvfrom": {
        "function_address": "0x0000c0c8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x59c]!"
        ]
    },
    "fcn.00034704": {
        "function_address": "0x00034704",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sl, lr}",
            "mov r1, 1",
            "ldr r4, [0x00034834]",
            "sub sp, sp, 0x14",
            "mov r0, 2",
            "bl sym.imp.signal",
            "ldr r1, [r4, 0x38]",
            "ldr r0, str._n_____s_ping_statistics_____n",
            "bl sym.imp.printf",
            "ldr r1, [r4, 0x10]",
            "ldr r0, str._lu_packets_transmitted_",
            "bl sym.imp.printf",
            "ldr r1, [r4, 0x14]",
            "ldr r0, str._lu_packets_received_",
            "bl sym.imp.printf",
            "ldr r1, [r4, 0x18]",
            "cmp r1, 0",
            "beq 0x34754",
            "ldr r0, str._lu_duplicates_",
            "bl sym.imp.printf",
            "ldr r1, [r4, 0x10]",
            "cmp r1, 0",
            "beq 0x34778",
            "ldr r3, [r4, 0x14]",
            "mov r0, 0x64",
            "rsb r3, r3, r1",
            "mul r0, r0, r3",
            "bl fcn.00055000",
            "str r0, [r4, 0x10]",
            "ldr r0, str._lu___packet_loss_n",
            "ldr r1, [r4, 0x10]",
            "bl sym.imp.printf",
            "ldr r5, [r4, 0x24]",
            "cmn r5, 1",
            "beq 0x34824",
            "ldr r3, [r4, 0x14]",
            "ldr r2, [r4, 0x18]",
            "ldrd r0, r1, [r4, 0x30]",
            "add r2, r2, r3",
            "mov r3, 0",
            "bl fcn.00055c28",
            "mov r1, 0x3e8",
            "mov r7, r0",
            "mov r0, r5",
            "ldr r6, [r4, 0x28]",
            "bl fcn.00055000",
            "mov r1, 0x3e8",
            "mov sl, r0",
            "mov r0, r5",
            "bl fcn.000550a8",
            "mov r0, r7",
            "mov r8, r1",
            "mov r1, 0x3e8",
            "bl fcn.00055000",
            "mov r1, 0x3e8",
            "mov r5, r0",
            "mov r0, r7",
            "bl fcn.000550a8",
            "mov r0, r6",
            "str r1, [sp]",
            "mov r1, 0x3e8",
            "bl fcn.00055000",
            "mov r1, 0x3e8",
            "str r0, [sp, 4]",
            "mov r0, r6",
            "bl fcn.000550a8",
            "ldr r0, str.round_trip_min_avg_max___u._03u__u._03u__u._03u_ms_n",
            "mov r2, r8",
            "str r1, [sp, 8]",
            "mov r3, r5",
            "mov r1, sl",
            "bl sym.imp.printf",
            "ldr r0, [r4, 0x14]",
            "rsbs r0, r0, 1",
            "movlo r0, 0",
            "bl sym.imp.exit"
        ]
    },
    "fcn.0003521c": {
        "function_address": "0x0003521c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x154",
            "ldr r1, [0x000353f8]",
            "add r5, sp, 0xac",
            "add r6, sp, 0xfc",
            "add r7, r5, 0xe",
            "ldr r0, str._proc_net_ipv6_route",
            "add r8, sp, 0x2c",
            "bl fcn.00029f54"
        ]
    },
    "fcn.00035198": {
        "function_address": "0x00035198",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r4, r0",
            "ldr r7, [r1]",
            "mov r6, r1",
            "ldr r5, [r7]",
            "cmp r5, 0",
            "beq 0x35214",
            "add r0, r4, 2",
            "mov r1, r5",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x35200",
            "add r3, r7, 4",
            "add r2, r4, 1",
            "str r3, [r6]",
            "ldrb r1, [r4, 1]",
            "tst r1, 0x10",
            "beq 0x351f8",
            "ldr r1, [r7, 4]",
            "cmp r1, 0",
            "bne 0x351f0",
            "bl fcn.0000c5e0",
            "add r3, r3, 4",
            "str r3, [r6]",
            "ldrb r0, [r2]",
            "pop {r3, r4, r5, r6, r7, pc}",
            "ldrb r3, [r4]",
            "ldrb r0, [r4, r3]!",
            "cmp r0, 0",
            "bne 0x351b4",
            "pop {r3, r4, r5, r6, r7, pc}",
            "mov r0, r5",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.00051ce8": {
        "function_address": "0x00051ce8",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "sub sp, sp, 0x28",
            "add r6, sp, 4",
            "mov r4, r0",
            "mov r2, 0x20",
            "mov r0, r6",
            "mov r5, r1",
            "mov r1, 0",
            "bl sym.imp.memset",
            "mov r3, 0xa",
            "mov r2, r6",
            "str r3, [sp, 8]",
            "mov r0, r4",
            "mov r1, 0",
            "add r3, sp, 0x24",
            "bl sym.imp.getaddrinfo",
            "subs r6, r0, 0",
            "beq 0x51d48",
            "ldr r0, str.getaddrinfo:__s:__d",
            "mov r1, r4",
            "mov r2, r6",
            "bl fcn.00027184",
            "mvn r0, 0",
            "b 0x51d68",
            "ldr r4, [sp, 0x24]",
            "mov r2, 0x1c",
            "mov r0, r5",
            "ldr r1, [r4, 0x14]",
            "bl sym.imp.memcpy",
            "mov r0, r4",
            "bl sym.imp.freeaddrinfo",
            "mov r0, r6",
            "add sp, sp, 0x28",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.00051adc": {
        "function_address": "0x00051adc",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r3, 2",
            "strh r3, [r1]",
            "mov r3, 0",
            "mov r4, r1",
            "mov r5, r0",
            "strh r3, [r1, 2]",
            "mov r6, r2",
            "ldr r1, aav.0x0005bcf8",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "streq r0, [r4, 4]",
            "moveq r0, 1",
            "popeq {r3, r4, r5, r6, r7, pc}",
            "add r4, r4, 4",
            "mov r0, r5",
            "mov r1, r4",
            "bl sym.imp.inet_aton",
            "subs r7, r0, 0",
            "movne r0, 0",
            "popne {r3, r4, r5, r6, r7, pc}",
            "cmp r6, 0",
            "beq 0x51b68",
            "mov r0, r5",
            "bl sym.imp.gethostbyname",
            "cmp r0, 0",
            "mvneq r0, 0",
            "popeq {r3, r4, r5, r6, r7, pc}",
            "ldr r3, [r0, 0x10]",
            "mov r2, 4",
            "mov r0, r4",
            "ldr r1, [r3]",
            "bl sym.imp.memcpy",
            "mov r0, r7",
            "pop {r3, r4, r5, r6, r7, pc}",
            "mov r0, r5",
            "bl sym.imp.gethostbyname",
            "cmp r0, 0",
            "beq 0x51b94",
            "ldr r3, [r0, 0x10]",
            "mov r2, 4",
            "mov r0, r4",
            "ldr r1, [r3]",
            "bl sym.imp.memcpy",
            "mov r0, r6",
            "pop {r3, r4, r5, r6, r7, pc}",
            "mvn r0, 0",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "sym.imp.inet_aton": {
        "function_address": "0x0000b714",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xc14]!"
        ]
    },
    "fcn.00035d10": {
        "function_address": "0x00035d10",
        "instructions": [
            "push {r4, lr}",
            "ldr r4, [0x00035d34]",
            "ldr r0, [r4]",
            "add r1, r4, 0x9c",
            "ldrsh r2, [r4, 4]",
            "bl sym.imp.write",
            "mov r3, 0",
            "strh r3, [r4, 4]",
            "pop {r4, pc}"
        ]
    },
    "fcn.00035e30": {
        "function_address": "0x00035e30",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r0",
            "bl fcn.00035d9c",
            "mov r0, r4",
            "bl sym.imp.exit"
        ]
    },
    "fcn.00035d9c": {
        "function_address": "0x00035d9c",
        "instructions": [
            "ldr r2, [0x00035dbc]",
            "ldrb r3, [r2, 0xb]",
            "cmp r3, 0",
            "bxeq lr",
            "mov r0, 0",
            "mov r1, 1",
            "add r2, r2, 0x11c",
            "b sym.imp.tcsetattr"
        ]
    },
    "fcn.00035dc0": {
        "function_address": "0x00035dc0",
        "instructions": [
            "ldr r3, [0x00035e20]",
            "push {r4, lr}",
            "ldrb r2, [r3, 9]",
            "tst r2, 1",
            "ldrb r2, [r3, 8]",
            "beq 0x35dfc",
            "cmp r2, 0",
            "popne {r4, pc}",
            "add r2, r2, 1",
            "ldr r1, str._r_nEscape_character_is",
            "strb r2, [r3, 8]",
            "ldr r0, str._r_nEntering_character_mode_s_._r_n",
            "bl sym.imp.printf",
            "pop {r4, lr}",
            "b fcn.00035d78",
            "cmp r2, 2",
            "popeq {r4, pc}",
            "mov r2, 2",
            "ldr r1, str._r_nEscape_character_is",
            "strb r2, [r3, 8]",
            "ldr r0, str._r_nEntering_line_mode_sC._r_n",
            "bl sym.imp.printf",
            "pop {r4, lr}",
            "b fcn.00035d9c"
        ]
    },
    "fcn.00035d38": {
        "function_address": "0x00035d38",
        "instructions": [
            "ldr r3, [0x00035d74]",
            "push {r4, r5, r6, lr}",
            "mov r4, r0",
            "mov r5, r1",
            "ldrsh r3, [r3, 4]",
            "cmp r3, 0x7d",
            "ble 0x35d58",
            "bl fcn.00035d10",
            "mov r0, 0xff",
            "bl fcn.00035ce0",
            "mov r0, r4",
            "bl fcn.00035ce0",
            "mov r0, r5",
            "pop {r4, r5, r6, lr}",
            "b fcn.00035ce0"
        ]
    },
    "fcn.00035ce0": {
        "function_address": "0x00035ce0",
        "instructions": [
            "ldr r3, [0x00035cfc]",
            "ldrh r2, [r3, 4]",
            "sxtah r1, r3, r2",
            "add r2, r2, 1",
            "strb r0, [r1, 0x9c]",
            "strh r2, [r3, 4]",
            "bx lr"
        ]
    },
    "fcn.00054bbc": {
        "function_address": "0x00054bbc",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "subs r8, r0, 0",
            "mov r7, r1",
            "mov r5, r2",
            "moveq r0, r2",
            "beq 0x54c30",
            "ldr r3, [0x00054c38]",
            "mov r1, 0",
            "mov r2, 0xa",
            "ldr r4, [r3]",
            "ldr r6, [r4]",
            "bl fcn.000266e4",
            "ldr r3, [r4]",
            "subs r3, r3, 0",
            "movne r3, 1",
            "cmp r0, 0x10000",
            "orrhs r3, r3, 1",
            "cmp r3, 0",
            "beq 0x54c2c",
            "mov r0, r8",
            "mov r1, r7",
            "bl sym.imp.getservbyname",
            "cmp r0, 0",
            "ldrne r3, [r0, 8]",
            "moveq r0, r5",
            "ubfxne r0, r3, 8, 8",
            "orrne r0, r0, r3, lsl 8",
            "uxthne r0, r0",
            "str r6, [r4]",
            "uxth r0, r0",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "sym.imp.getservbyname": {
        "function_address": "0x0000c38c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x3c4]!"
        ]
    },
    "fcn.00054f40": {
        "function_address": "0x00054f40",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "bl fcn.00054e18",
            "mov r5, r0",
            "mov r4, r0",
            "ldrh r0, [r5, 4]!",
            "mov r1, 1",
            "mov r2, 0",
            "bl fcn.0002a3cc"
        ]
    },
    "fcn.00054b2c": {
        "function_address": "0x00054b2c",
        "instructions": [
            "mov r3, 4",
            "push {r0, r1, r2, lr}",
            "mov r1, 1",
            "str r3, [sp]",
            "mov r2, 2",
            "ldr r3, aav.0x0005bd40",
            "bl sym.imp.setsockopt",
            "pop {r1, r2, r3, pc}"
        ]
    },
    "fcn.00054b74": {
        "function_address": "0x00054b74",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r1",
            "bl sym.imp.connect",
            "cmp r0, 0",
            "popge {r4, pc}",
            "ldrh r3, [r4]",
            "cmp r3, 2",
            "bne 0x54bac",
            "ldr r0, [r4, 4]",
            "bl sym.imp.inet_ntoa",
            "ldr r1, str.cannot_connect_to_remote_host",
            "mov r2, r0",
            "ldr r0, [0x00054bb8]",
            "bl fcn.00028900",
            "ldr r0, [pc]",
            "bl fcn.00028900"
        ]
    },
    "sym.imp.connect": {
        "function_address": "0x0000b7b0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xbac]!"
        ]
    },
    "fcn.00035e44": {
        "function_address": "0x00035e44",
        "instructions": [
            "push {r0, r1, r4, lr}",
            "ldr r4, [0x00035f80]",
            "ldrb r3, [r4, 0xa]",
            "cmp r3, 0",
            "beq 0x35e5c",
            "bl fcn.00035d78",
            "ldr r1, str._r_nConsole_escape._Commands_are:_r_n_n_l_tgo_to_line_mode_r_n_c_tgo_to_character_mode_r_n_z_tsuspend_telnet_r_n_e_texit_telnet_r_n",
            "mov r2, 0x72",
            "mov r0, 1",
            "bl sym.imp.write",
            "mov r0, 0",
            "add r1, sp, 7",
            "mov r2, 1",
            "bl sym.imp.read",
            "cmp r0, 0",
            "bgt 0x35e8c",
            "mov r0, 1",
            "bl fcn.00035e30",
            "ldrb r3, [sp, 7]",
            "cmp r3, 0x65",
            "beq 0x35f4c",
            "bhi 0x35ea8",
            "cmp r3, 0x63",
            "beq 0x35ef0",
            "b 0x35f54",
            "cmp r3, 0x6c",
            "beq 0x35ebc",
            "cmp r3, 0x7a",
            "beq 0x35f34",
            "b 0x35f54",
            "ldrb r3, [r4, 0xa]",
            "cmp r3, 0",
            "bne 0x35f54",
            "strb r3, [r4, 8]",
            "ldrb r3, [r4, 9]",
            "bic r3, r3, 3",
            "strb r3, [r4, 9]",
            "bl fcn.00035dc0",
            "mov r0, 0xfe",
            "mov r1, 1",
            "bl fcn.00035d38",
            "mov r0, 0xfe",
            "b 0x35f24",
            "ldrb r3, [r4, 0xa]",
            "cmp r3, 0",
            "beq 0x35f54",
            "mov r3, 0",
            "strb r3, [r4, 8]",
            "ldrb r3, [r4, 9]",
            "orr r3, r3, 3",
            "strb r3, [r4, 9]",
            "bl fcn.00035dc0",
            "mov r0, 0xfd",
            "mov r1, 1",
            "bl fcn.00035d38",
            "mov r0, 0xfd",
            "mov r1, 3",
            "bl fcn.00035d38",
            "bl fcn.00035d10",
            "b 0x35f74",
            "bl fcn.00035d9c",
            "mov r1, 0x14",
            "mov r0, 0",
            "bl sym.imp.kill",
            "bl fcn.00035d78",
            "b 0x35f54",
            "mov r0, 0",
            "bl fcn.00035e30",
            "mov r0, 1",
            "ldr r1, str.continuing..._r_n",
            "mov r2, 0xf",
            "bl sym.imp.write",
            "ldrb r3, [r4, 0xa]",
            "cmp r3, 0",
            "beq 0x35f74",
            "bl fcn.00035d9c",
            "mov r3, 0",
            "strb r3, [r4, 0xa]",
            "pop {r2, r3, r4, pc}"
        ]
    },
    "fcn.00035d78": {
        "function_address": "0x00035d78",
        "instructions": [
            "ldr r2, [0x00035d98]",
            "ldrb r3, [r2, 0xb]",
            "cmp r3, 0",
            "bxeq lr",
            "mov r0, 0",
            "mov r1, 1",
            "add r2, r2, 0x158",
            "b sym.imp.tcsetattr"
        ]
    },
    "sym.imp.kill": {
        "function_address": "0x0000c488",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x31c]!"
        ]
    },
    "fcn.000539a4": {
        "function_address": "0x000539a4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x294",
            "add r8, sp, 0x28c",
            "mov r5, r0",
            "mov r0, r8",
            "mov sl, r1",
            "bl sym.imp.time",
            "mov r0, sp",
            "mov r4, sp",
            "bl sym.imp.uname",
            "ldr r0, aav.0x0005ad10",
            "bl sym.imp.puts",
            "mov r0, r5",
            "ldr r1, [0x00053b7c]",
            "bl sym.imp.fopen64",
            "subs r6, r0, 0",
            "beq 0x53b70",
            "b 0x53b3c",
            "cmp r0, 0xa",
            "strb r5, [sp, 0x189]",
            "strbeq r5, [sp, 0x18a]",
            "strbeq sb, [sp, 0x189]",
            "cmp r0, 0x5c",
            "cmpne r0, 0x25",
            "strb r0, [sp, 0x188]",
            "addne r7, sp, 0x188",
            "bne 0x53b2c",
            "mov r0, r6",
            "bl sym.imp.fgetc",
            "cmp r0, 0x6e",
            "addeq r7, r4, 0x41",
            "beq 0x53b2c",
            "bgt 0x53a64",
            "cmp r0, 0x68",
            "beq 0x53b0c",
            "bgt 0x53a48",
            "cmp r0, 0x44",
            "beq 0x53aa4",
            "cmp r0, 0x64",
            "beq 0x53ac8",
            "b 0x53b24",
            "cmp r0, 0x6c",
            "moveq r7, sl",
            "beq 0x53b2c",
            "cmp r0, 0x6d",
            "addeq r7, sp, 0x104",
            "beq 0x53b2c",
            "b 0x53b24",
            "cmp r0, 0x73",
            "moveq r7, r4",
            "beq 0x53b2c",
            "bgt 0x53a8c",
            "cmp r0, 0x6f",
            "beq 0x53aa4",
            "cmp r0, 0x72",
            "addeq r7, r4, 0x82",
            "beq 0x53b2c",
            "b 0x53b24",
            "cmp r0, 0x74",
            "beq 0x53ae8",
            "cmp r0, 0x76",
            "addeq r7, r4, 0xc3",
            "beq 0x53b2c",
            "b 0x53b24",
            "add r7, sp, 0x188",
            "mov r1, 0x100",
            "mov r0, r7",
            "bl sym.imp.getdomainname",
            "add r3, sp, 0x290",
            "bic r0, r0, r0, asr 31",
            "add r0, r3, r0",
            "strb r5, [r0, -0x108]",
            "b 0x53b2c",
            "mov r0, r8",
            "add r7, sp, 0x188",
            "bl sym.imp.localtime",
            "movw r1, 0x101",
            "mov r3, r0",
            "ldr r2, str._A___d__B__Y",
            "mov r0, r7",
            "b 0x53b04",
            "mov r0, r8",
            "add r7, sp, 0x188",
            "bl sym.imp.localtime",
            "ldr r2, str._H:_M:_S",
            "mov r3, r0",
            "movw r1, 0x101",
            "mov r0, r7",
            "bl sym.imp.strftime",
            "b 0x53b2c",
            "add r7, sp, 0x188",
            "mov r1, 0x100",
            "mov r0, r7",
            "bl sym.imp.gethostname",
            "strb r5, [sp, 0x288]",
            "b 0x53b2c",
            "add r7, sp, 0x290",
            "strb r0, [r7, -0x108]!",
            "mov r0, r7",
            "ldr r1, [fp]",
            "bl sym.imp.fputs",
            "b 0x53b4c",
            "ldr fp, obj.stdout",
            "mov r5, 0",
            "mov sb, 0xd",
            "mov r4, sp",
            "mov r0, r6",
            "bl sym.imp.fgetc",
            "cmn r0, 1",
            "bne 0x539ec",
            "mov r0, r6",
            "bl sym.imp.fclose",
            "ldr r3, obj.stdout",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "add sp, sp, 0x294",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.imp.getdomainname": {
        "function_address": "0x0000be58",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x73c]!"
        ]
    },
    "fcn.000367d0": {
        "function_address": "0x000367d0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r6, r0",
            "sub sp, sp, 0xd4",
            "mov r0, 0x1000",
            "mov r7, r1",
            "add fp, sp, 0xa8",
            "bl fcn.00029eb4",
            "ldr r8, [0x00036a68]",
            "add r3, r0, 0x34",
            "str r3, [r0, 0x14]",
            "add r3, r3, 0x7e0",
            "add r3, r3, 6",
            "mov r4, r0",
            "str r3, [r0, 0x18]",
            "mov r0, fp",
            "ldr r1, str._dev_ptyXX",
            "bl sym.imp.strcpy",
            "ldrb r3, [r8, 1]!",
            "mov r0, fp",
            "mov r1, sp",
            "strb r3, [sp, 0xb0]",
            "mov r3, 0x30",
            "strb r3, [sp, 0xb1]",
            "bl sym.imp.stat64",
            "cmp r0, 0",
            "blt 0x36938",
            "mov sb, 0x30",
            "mov sl, 0",
            "cmp sl, 9",
            "mov r0, fp",
            "addgt r3, sb, 0x27",
            "movle r3, sb",
            "uxtbgt r3, r3",
            "movw r1, 0x102",
            "strb r3, [sp, 0xb1]",
            "bl sym.imp.open64",
            "subs r5, r0, 0",
            "blt 0x36924",
            "mov r3, 0x74",
            "mov r0, r5",
            "strb r3, [sp, 0xad]",
            "ldr r3, [0x00036a70]",
            "str r5, [r4, 0xc]",
            "ldr r2, [r3]",
            "cmp r5, r2",
            "strgt r5, [r3]",
            "bl fcn.0002a018",
            "ldr r3, [0x00036a70]",
            "mov r0, r7",
            "str r7, [r4, 8]",
            "ldr r2, [r3]",
            "cmp r7, r2",
            "strgt r7, [r3]",
            "ldr r3, [0x00036a70]",
            "ldr r2, [r3]",
            "cmp r6, r2",
            "strgt r6, [r3]",
            "bl fcn.0002a018",
            "str r6, [r4, 4]",
            "mov r0, r6",
            "bl fcn.0002a018",
            "mov r0, r4",
            "mov r1, 0xfd",
            "mov r2, 1",
            "bl fcn.000366c4",
            "mov r0, r4",
            "mov r1, 0xfd",
            "mov r2, 0x1f",
            "bl fcn.000366c4",
            "mov r0, r4",
            "mov r1, 0xfd",
            "mov r2, 0x21",
            "bl fcn.000366c4",
            "mov r0, r4",
            "mov r1, 0xfb",
            "mov r2, 1",
            "bl fcn.000366c4",
            "mov r0, r4",
            "mov r1, 0xfb",
            "mov r2, 3",
            "bl fcn.000366c4",
            "bl sym.imp.fork",
            "subs r6, r0, 0",
            "bge 0x36970",
            "b 0x36950",
            "add sl, sl, 1",
            "add sb, sb, 1",
            "cmp sl, 0x10",
            "uxtb sb, sb",
            "bne 0x36840",
            "ldr r3, [0x00036a74]",
            "cmp r8, r3",
            "bne 0x36814",
            "ldr r0, str.all_terminals_in_use",
            "bl fcn.00027184",
            "b 0x36968",
            "mov r0, r4",
            "bl sym.imp.free",
            "mov r0, r5",
            "bl sym.imp.close",
            "ldr r0, [0x00036a7c]",
            "bl fcn.000288b8",
            "mov r4, 0",
            "b 0x36a5c",
            "strne r6, [r4, 0x10]",
            "bne 0x36a5c",
            "bl sym.imp.setsid",
            "add r0, sp, 0xa8",
            "mov r1, 2",
            "bl fcn.00029f9c",
            "mov r1, r6",
            "mov r4, r0",
            "bl sym.imp.dup2",
            "mov r0, r4",
            "mov r1, 1",
            "bl sym.imp.dup2",
            "mov r0, r4",
            "mov r1, 2",
            "bl sym.imp.dup2",
            "b 0x369c0",
            "sub r5, r4, 1",
            "mov r0, r4",
            "mov r4, r5",
            "bl sym.imp.close",
            "cmp r4, 2",
            "bgt 0x369b0",
            "bl sym.imp.getpid",
            "add r4, sp, 0x6c",
            "mov r1, r0",
            "mov r0, 0",
            "bl sym.imp.tcsetpgrp",
            "mov r1, r4",
            "mov r0, 0",
            "bl sym.imp.tcgetattr",
            "ldr r3, [sp, 0x78]",
            "mov r0, 0",
            "mov r2, r4",
            "mov r1, r0",
            "ldr r4, [0x00036a80]",
            "orr r3, r3, 8",
            "str r3, [sp, 0x78]",
            "ldr r3, [sp, 0x70]",
            "orr r3, r3, 0x1800",
            "orr r3, r3, 4",
            "str r3, [sp, 0x70]",
            "ldr r3, [sp, 0x6c]",
            "orr r3, r3, 0x100",
            "bic r3, r3, 0x1000",
            "str r3, [sp, 0x6c]",
            "bl sym.imp.tcsetattr",
            "ldr r3, [0x00036a84]",
            "mov r1, 0",
            "ldr r0, [r3]",
            "bl fcn.000539a4",
            "ldr r0, [r4]",
            "mov r3, 0",
            "add r1, sp, 0xc8",
            "str r3, [sp, 0xcc]",
            "str r0, [sp, 0xc8]",
            "bl sym.imp.execv",
            "ldr r0, str.execv__s",
            "ldr r1, [r4]",
            "bl fcn.00028900",
            "mov r0, r4",
            "add sp, sp, 0xd4",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.000366c4": {
        "function_address": "0x000366c4",
        "instructions": [
            "push {r4, r5, lr}",
            "mvn r5, 0",
            "ldr ip, [r0, 0x28]",
            "ldr r4, [r0, 0x18]",
            "add r3, r4, ip",
            "strb r5, [r4, ip]",
            "strb r1, [r3, 1]",
            "strb r2, [r3, 2]",
            "ldr r3, [r0, 0x28]",
            "add r3, r3, 3",
            "str r3, [r0, 0x28]",
            "ldr r3, [r0, 0x30]",
            "add r3, r3, 3",
            "str r3, [r0, 0x30]",
            "pop {r4, r5, pc}"
        ]
    },
    "sym.imp.tcsetpgrp": {
        "function_address": "0x0000bd2c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x804]!"
        ]
    },
    "sym.imp.execv": {
        "function_address": "0x0000bb58",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x93c]!"
        ]
    },
    "fcn.00054f38": {
        "function_address": "0x00054f38",
        "instructions": [
            "subs r3, r0, 0",
            "push {r0, r1, r2, r4, r5, lr}",
            "mov r5, r1",
            "mov r4, r2",
            "beq 0x54ee4",
            "ldrb r3, [r3]",
            "cmp r3, 0",
            "beq 0x54ee4",
            "bl fcn.00054e24",
            "mov r1, r4",
            "str r0, [sp, 4]",
            "mov r2, 0",
            "ldrh r0, [r0, 4]",
            "bl fcn.0002a3cc",
            "mov r1, 0",
            "mov r2, r4",
            "add r0, sp, 4",
            "bl fcn.00054e30",
            "ubfx r3, r5, 8, 8",
            "mov r4, r0",
            "orr r5, r3, r5, lsl 8",
            "ldr r0, [sp, 4]",
            "uxth r1, r5",
            "bl fcn.00054c60",
            "mov r0, r4",
            "bl fcn.00054b2c",
            "ldr r3, [sp, 4]",
            "mov r0, r4",
            "add r1, r3, 4",
            "ldr r2, [r3]",
            "bl fcn.0002a3e8",
            "mov r2, 1",
            "b 0x54ea4"
        ]
    },
    "fcn.00054e24": {
        "function_address": "0x00054e24",
        "instructions": [
            "mov r2, 0",
            "mov r3, 6",
            "b 0x54c7c"
        ]
    },
    "fcn.00054e30": {
        "function_address": "0x00054e30",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "subs r4, r1, 0",
            "mov r6, r0",
            "mov r5, r2",
            "bne 0x54e68",
            "mov r1, r2",
            "mov r0, 0xa",
            "mov r2, r4",
            "bl sym.imp.socket",
            "subs r7, r0, 0",
            "movge r5, 0x1c",
            "movge r4, 0xa",
            "bge 0x54e88",
            "mov r4, 2",
            "mov r1, r5",
            "mov r0, r4",
            "mov r2, 0",
            "bl fcn.0002a3cc",
            "add r0, r5, 4",
            "bl fcn.00029eb4",
            "str r5, [r0]",
            "strh r4, [r0, 4]",
            "str r0, [r6]",
            "mov r0, r7",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.0002a404": {
        "function_address": "0x0002a404",
        "instructions": [
            "push {r3, lr}",
            "bl sym.imp.listen",
            "cmp r0, 0",
            "popeq {r3, pc}",
            "ldr r0, [pc]",
            "bl fcn.00028900"
        ]
    },
    "sym.imp.listen": {
        "function_address": "0x0000c344",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x3f4]!"
        ]
    },
    "fcn.00036700": {
        "function_address": "0x00036700",
        "instructions": [
            "ldr r2, [0x000367c8]",
            "push {r4, lr}",
            "mov r4, r0",
            "ldr r3, [r2]",
            "cmp r3, r0",
            "ldreq r3, [r0]",
            "streq r3, [r2]",
            "beq 0x3673c",
            "b 0x36728",
            "mov r3, r2",
            "ldr r2, [r3]",
            "cmp r2, r4",
            "bne 0x36724",
            "ldr r2, [r4]",
            "str r2, [r3]",
            "mov r1, 9",
            "ldr r0, [r4, 0x10]",
            "bl sym.imp.kill",
            "mov r1, 0",
            "ldr r0, [r4, 0x10]",
            "mov r2, r1",
            "mov r3, r1",
            "bl sym.imp.wait4",
            "ldr r0, [r4, 0xc]",
            "bl sym.imp.close",
            "ldr r0, [r4, 4]",
            "bl sym.imp.close",
            "ldr r0, [r4, 8]",
            "bl sym.imp.close",
            "mov r0, r4",
            "bl sym.imp.free",
            "ldr r3, [0x000367c8]",
            "mov r2, 0",
            "ldr r3, [r3]",
            "b 0x367b4",
            "ldr r1, [r3, 0xc]",
            "cmp r2, r1",
            "movlt r2, r1",
            "ldr r1, [r3, 4]",
            "cmp r2, r1",
            "movlt r2, r1",
            "ldr r1, [r3, 8]",
            "ldr r3, [r3]",
            "cmp r2, r1",
            "movlt r2, r1",
            "cmp r3, 0",
            "bne 0x3678c",
            "ldr r3, [0x000367cc]",
            "str r2, [r3]",
            "pop {r4, pc}"
        ]
    },
    "sym.imp.wait4": {
        "function_address": "0x0000b8dc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xae4]!"
        ]
    },
    "fcn.0003712c": {
        "function_address": "0x0003712c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "add fp, sp, 0x20",
            "sub sp, sp, 0xe4",
            "mov r4, r2",
            "mov r6, r1",
            "str r3, [fp, -0xd0]",
            "ldr r3, [r1]",
            "str r0, [fp, -0xb8]",
            "mov r0, 0x204",
            "ldr r7, [fp, 4]",
            "add r3, r3, 0x12",
            "bic r3, r3, 7",
            "sub sp, sp, r3",
            "add r2, sp, 8",
            "str r2, [fp, -0xc4]",
            "bl fcn.00029e54"
        ]
    },
    "fcn.00054f88": {
        "function_address": "0x00054f88",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r4, r0",
            "mov r5, r0",
            "ldrh r0, [r4, 4]!",
            "mov r1, 1",
            "mov r2, 0",
            "bl fcn.0002a3cc"
        ]
    },
    "fcn.000378b4": {
        "function_address": "0x000378b4",
        "instructions": [
            "push {r0, r1, r2, r3, r4, lr}",
            "mov r2, 0",
            "add r1, sp, 8",
            "str r0, [sp, 8]",
            "mov r3, sp",
            "str r2, [sp, 0xc]",
            "ldm r1, {r0, r1}",
            "stm r3, {r0, r1}",
            "mov r0, r2",
            "mov r1, sp",
            "bl sym.imp.setitimer",
            "add sp, sp, 0x14",
            "ldm sp!, {pc}"
        ]
    },
    "sym.imp.setitimer": {
        "function_address": "0x0000b9e4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xa34]!"
        ]
    },
    "fcn.000378e8": {
        "function_address": "0x000378e8",
        "instructions": [
            "cmn r0, 1",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "add fp, sp, 0x20",
            "sub sp, sp, 0x24",
            "mov r5, r0",
            "bne 0x37944",
            "bl fcn.000545ac",
            "ldr r3, [0x00037c94]",
            "mov r2, 0",
            "ldr r1, [0x00037c98]",
            "str r0, [r3]",
            "ldr r3, [0x00037c9c]",
            "str r0, [r3]",
            "mov r3, 0",
            "strd r2, r3, [r1]",
            "ldr r3, [0x00037ca0]",
            "ldr r1, [0x00037ca4]",
            "ldrd r2, r3, [r3]",
            "ldrd r0, r1, [r1]",
            "adds r2, r2, r0",
            "adc r3, r3, r1",
            "ldr r1, [0x00037ca8]",
            "strd r2, r3, [r1]",
            "ldr r3, [0x00037ca8]",
            "ldm r3, {r2, r3}",
            "orrs r1, r2, r3",
            "beq 0x3799c",
            "ldr r1, [0x00037cac]",
            "ldrb r1, [r1]",
            "cmp r1, 0",
            "bne 0x3799c",
            "ldr r1, [0x00037ca0]",
            "mov ip, 0x64",
            "ldrd r6, r7, [r1]",
            "ldr r1, [0x00037cb0]",
            "ldrd r0, r1, [r1]",
            "adds r6, r6, r0",
            "adc r7, r7, r1",
            "umull r0, r1, r6, ip",
            "mla r1, ip, r7, r1",
            "bl fcn.00055c28",
            "cmp r0, 0x64",
            "movlo r4, r0",
            "movhs r4, 0x64",
            "b 0x379a0",
            "mov r4, 0x64",
            "ldr r3, [0x00037cb4]",
            "ldr sl, obj.stderr",
            "ldr r1, str._r__20.20s_4d__",
            "ldr r2, [r3]",
            "mov r3, r4",
            "ldr r0, [sl]",
            "bl sym.imp.fprintf",
            "mov r0, 0",
            "sub r1, fp, 0x28",
            "mov r2, r0",
            "bl fcn.0002a474",
            "ldr r6, [fp, -0x28]",
            "sub r6, r6, 0x31",
            "cmp r6, 0",
            "ble 0x37a40",
            "mul r0, r6, r4",
            "mov r1, 0x64",
            "mov sb, sp",
            "bl fcn.00055000",
            "add r3, r0, 0xf",
            "mov r4, r0",
            "bic r3, r3, 7",
            "mov r1, 0x2a",
            "sub sp, sp, r3",
            "mov r2, r4",
            "add r8, sp, 0xf",
            "lsr r8, r8, 3",
            "lsl r7, r8, 3",
            "mov r0, r7",
            "bl sym.imp.memset",
            "mov r3, 0",
            "ldr r1, [0x00037cc0]",
            "strb r3, [r4, r8, lsl 3]",
            "mov r2, r7",
            "ldr r3, [0x00037cc4]",
            "str r3, [sp]",
            "rsb r3, r4, r6",
            "ldr r0, [sl]",
            "bl sym.imp.fprintf",
            "mov sp, sb",
            "ldr r3, [0x00037ca0]",
            "mov ip, 0",
            "ldr r1, [0x00037cb0]",
            "ldr lr, [0x00037cc8]",
            "ldrd r2, r3, [r3]",
            "ldrd r0, r1, [r1]",
            "adds r2, r2, r0",
            "adc r3, r3, r1",
            "b 0x37a7c",
            "lsr r4, r2, 0xa",
            "asr r1, r3, 0xa",
            "orr r0, r4, r3, lsl 22",
            "add ip, ip, 1",
            "mov r3, r1",
            "mov r2, r0",
            "cmp r3, 0",
            "bgt 0x37a64",
            "bne 0x37a90",
            "cmp r2, lr",
            "bhi 0x37a64",
            "ldr r1, obj.stderr",
            "ldr r3, str._kMGTPEZY",
            "ldr r0, [r1]",
            "ldrb r3, [r3, ip]",
            "ldr r1, str._6d_c",
            "bl sym.imp.fprintf",
            "bl fcn.000545ac",
            "ldr r2, [0x00037cb0]",
            "ldr r3, [0x00037c9c]",
            "ldr r1, [r2, 4]",
            "ldr ip, [r2]",
            "ldr r2, [0x00037c98]",
            "ldr r3, [r3]",
            "ldr lr, [r2, 4]",
            "rsb r3, r3, r0",
            "cmp lr, r1",
            "blt 0x37ae4",
            "bne 0x37b10",
            "ldr r2, [r2]",
            "cmp r2, ip",
            "bhs 0x37b10",
            "ldr r2, [0x00037c9c]",
            "cmp r3, 4",
            "str r0, [r2]",
            "ldr r2, [0x00037c98]",
            "str ip, [r2]",
            "str r1, [r2, 4]",
            "ldrhi r2, [0x00037c94]",
            "ldrhi r1, [r2]",
            "addhi r3, r3, r1",
            "strhi r3, [r2]",
            "mov r3, 0",
            "ldr r2, [0x00037c94]",
            "cmp r3, 4",
            "ldrhi r0, str.___stalled__",
            "ldr r4, [r2]",
            "bhi 0x37ba4",
            "ldr r3, [0x00037ca8]",
            "rsb r4, r4, r0",
            "mvn r0, 0",
            "mvn r1, 0",
            "ldr lr, [r3]",
            "ldr ip, [r3, 4]",
            "ldr r3, [0x00037ca0]",
            "ldrd r6, r7, [r3]",
            "ldr r3, [0x00037cb0]",
            "ldrd r2, r3, [r3]",
            "adds r0, r0, r2",
            "adc r1, r1, r3",
            "cmp r4, 0",
            "movgt r8, 0",
            "movle r8, 1",
            "orr r1, r1, r3",
            "orrs r8, r8, r1, lsr 31",
            "bne 0x37ba0",
            "mov r8, lr",
            "mov sb, ip",
            "subs r8, r8, r6",
            "sbc sb, sb, r7",
            "cmp r3, sb",
            "bgt 0x37ba0",
            "bne 0x37b90",
            "cmp r2, r8",
            "bhi 0x37ba0",
            "ldr r1, [0x00037cac]",
            "ldrb r1, [r1]",
            "cmp r1, 0",
            "beq 0x37bb4",
            "ldr r0, str.__:__:___ETA",
            "ldr r3, obj.stderr",
            "ldr r1, [r3]",
            "bl sym.imp.fputs",
            "b 0x37c1c",
            "umull r0, r1, r4, r8",
            "mla r1, r4, sb, r1",
            "bl fcn.00055c28",
            "rsb r4, r4, r0",
            "mov r1, 0xe10",
            "mov r0, r4",
            "bl fcn.000551a4",
            "mov r0, r4",
            "mov r6, r1",
            "mov r1, 0xe10",
            "bl fcn.000550c8",
            "mov r1, 0x3c",
            "mov r7, r0",
            "mov r0, r6",
            "bl fcn.000550c8",
            "mov r1, 0x3c",
            "mov r4, r0",
            "mov r0, r6",
            "bl fcn.000551a4",
            "ldr r3, obj.stderr",
            "mov r2, r7",
            "str r1, [sp]",
            "ldr r1, str._02d:_02d:_02d_ETA",
            "ldr r0, [r3]",
            "mov r3, r4",
            "bl sym.imp.fprintf",
            "cmn r5, 1",
            "bne 0x37c5c",
            "ldr r3, aav.0x00037ce4",
            "sub r4, fp, 0x24",
            "str r3, [r4, -0x18]!",
            "add r0, r4, 0xc",
            "bl sym.imp.sigemptyset",
            "mov r3, 0x10000000",
            "mov r1, r4",
            "mov r2, 0",
            "mov r0, 0xe",
            "str r3, [fp, -0x38]",
            "bl sym.imp.sigaction",
            "mov r0, 1",
            "bl fcn.000378b4",
            "b 0x37c8c",
            "cmp r5, 1",
            "bne 0x37c8c",
            "mov r0, 0",
            "bl fcn.000378b4",
            "ldr r1, [0x00037cb0]",
            "mov r3, 0",
            "mov r2, 0",
            "mov r0, 0xa",
            "strd r2, r3, [r1]",
            "ldr r3, obj.stderr",
            "ldr r1, [r3]",
            "bl sym.imp.fputc",
            "sub sp, fp, 0x20",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.000545ac": {
        "function_address": "0x000545ac",
        "instructions": [
            "mov r0, 0",
            "b sym.imp.time"
        ]
    },
    "sym.imp.sigemptyset": {
        "function_address": "0x0000c0ec",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x584]!"
        ]
    },
    "fcn.00037708": {
        "function_address": "0x00037708",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r4, r1",
            "bl fcn.00029ed8",
            "mov r2, 7",
            "mov r5, r0",
            "ldr r1, str.http:__",
            "bl sym.imp.strncmp",
            "subs r6, r0, 0",
            "bne 0x37750",
            "ldr r0, str.http",
            "mov r2, 0x50",
            "ldr r1, [0x00037878]",
            "add r5, r5, 7",
            "bl fcn.00054bbc",
            "str r5, [r4]",
            "str r0, [r4, 4]",
            "str r6, [r4, 0xc]",
            "b 0x3779c",
            "mov r0, r5",
            "ldr r1, str.ftp:__",
            "mov r2, 6",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "bne 0x37790",
            "ldr r0, [0x00037880]",
            "mov r2, 0x15",
            "ldr r1, [0x00037878]",
            "add r5, r5, 6",
            "bl fcn.00054bbc",
            "mov r3, 1",
            "str r0, [r4, 4]",
            "str r5, [r4]",
            "str r3, [r4, 0xc]",
            "b 0x3779c",
            "ldr r0, str.not_an_http_or_ftp_url:__s",
            "mov r1, r5",
            "bl fcn.000271d8",
            "ldr r6, [r4]",
            "mov r1, 0x2f",
            "mov r0, r6",
            "bl sym.imp.strchr",
            "mov r1, 0x3f",
            "mov r5, r0",
            "mov r0, r6",
            "bl sym.imp.strchr",
            "cmp r5, 0",
            "moveq r5, r0",
            "beq 0x377d4",
            "cmp r0, 0",
            "cmpne r5, r0",
            "movhi r5, r0",
            "mov r0, r6",
            "mov r1, 0x23",
            "bl sym.imp.strchr",
            "cmp r5, 0",
            "beq 0x377f4",
            "cmp r0, 0",
            "cmpne r5, r0",
            "bls 0x37808",
            "cmp r0, 0",
            "ldreq r3, [0x00037888]",
            "streq r3, [r4, 8]",
            "beq 0x37844",
            "mov r5, r0",
            "ldrb r3, [r5]",
            "cmp r3, 0x2f",
            "moveq r3, 0",
            "strbeq r3, [r5], 1",
            "beq 0x37840",
            "sub r0, r6, 1",
            "mov r1, r6",
            "rsb r2, r6, r5",
            "bl sym.imp.memmove",
            "ldr r3, [r4]",
            "sub r3, r3, 1",
            "str r3, [r4]",
            "mov r3, 0",
            "strb r3, [r5, -1]",
            "str r5, [r4, 8]",
            "ldr r5, [r4]",
            "mov r1, 0x40",
            "mov r0, r5",
            "bl sym.imp.strrchr",
            "mov r3, 0",
            "cmp r0, 0",
            "str r3, [r4, 0x10]",
            "strne r5, [r4, 0x10]",
            "strbne r3, [r0], 1",
            "strne r0, [r4]",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.0003788c": {
        "function_address": "0x0003788c",
        "instructions": [
            "push {r3, lr}",
            "bl fcn.00054f88",
            "ldr r1, aav.0x0005ea40",
            "bl sym.imp.fdopen",
            "cmp r0, 0",
            "popne {r3, pc}",
            "ldr r0, str.fdopen",
            "bl fcn.00028900"
        ]
    },
    "fcn.000376cc": {
        "function_address": "0x000376cc",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r4, r0",
            "mov r0, r1",
            "mov r5, r1",
            "bl sym.imp.strlen",
            "movw r2, 0x176",
            "mov r1, r5",
            "cmp r0, r2",
            "movlo r2, r0",
            "ldr r3, str.ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789__n",
            "mov r0, r4",
            "bl fcn.000549c8",
            "mov r0, r4",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.000549c8": {
        "function_address": "0x000549c8",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "b 0x54a34",
            "sub r2, r2, 3",
            "cmn r2, 2",
            "moveq ip, 0",
            "moveq r4, ip",
            "beq 0x549f4",
            "cmn r2, 1",
            "ldrb r4, [r1, -2]",
            "ldrbne ip, [r1, -1]",
            "moveq ip, 0",
            "ldrb r5, [r1, -3]",
            "ldrb r5, [r3, r5, lsr 2]",
            "strb r5, [r0]",
            "add r5, r3, r4, lsr 4",
            "ldrb r6, [r1, -3]",
            "and r4, r4, 0xf",
            "add r4, r3, r4, lsl 2",
            "and r6, r6, 3",
            "ldrb r5, [r5, r6, lsl 4]",
            "strb r5, [r0, 1]",
            "ldrb r4, [r4, ip, lsr 6]",
            "and ip, ip, 0x3f",
            "strb r4, [r0, 2]",
            "ldrb ip, [r3, ip]",
            "strb ip, [r0, 3]",
            "add r0, r0, 4",
            "cmp r2, 0",
            "add r1, r1, 3",
            "bgt 0x549d0",
            "mov r1, 0",
            "strb r1, [r0]",
            "b 0x54a58",
            "ldrb r1, [r3, 0x40]",
            "add r2, r2, 1",
            "strb r1, [r0, -1]!",
            "cmp r2, 0",
            "bne 0x54a4c",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.000295e8": {
        "function_address": "0x000295e8",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r4, r0",
            "mov r5, r4",
            "ldrb r0, [r4], 1",
            "cmp r0, 0",
            "beq 0x2960c",
            "bl sym.imp.isspace",
            "cmp r0, 0",
            "beq 0x295f0",
            "mov r0, r5",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.00037dc0": {
        "function_address": "0x00037dc0",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sl, lr}",
            "mov r6, r1",
            "mov r3, 0",
            "mov r5, r2",
            "mov r1, 0x200",
            "mov r4, r0",
            "str r3, [r2]",
            "mov r2, r6",
            "bl sym.imp.fgets",
            "cmp r0, 0",
            "beq 0x37ecc",
            "mov r8, r4",
            "mov r2, r4",
            "ldrb r3, [r2], 1",
            "cmp r3, 0xd",
            "beq 0x37df4",
            "cmp r3, 0xa",
            "beq 0x37ed4",
            "b 0x37e20",
            "bl sym.imp.__ctype_tolower_loc",
            "ldr r3, [r0]",
            "lsl r7, r7, 1",
            "ldrsh r3, [r3, r7]",
            "strb r3, [r8, -1]",
            "mov sl, r8",
            "ldrb r7, [r8], 1",
            "mov r0, r7",
            "bl sym.imp.isalnum",
            "cmp r0, 0",
            "bne 0x37e0c",
            "cmp r7, 0x2d",
            "beq 0x37e0c",
            "cmp r7, 0x3a",
            "beq 0x37e54",
            "ldr r0, str.bad_header_line:__s",
            "mov r1, r4",
            "bl fcn.000271d8",
            "strb r0, [sl], 1",
            "ldrb r3, [sl]",
            "mov r4, sl",
            "add sl, sl, 1",
            "cmp r3, 0x20",
            "cmpne r3, 9",
            "beq 0x37e58",
            "mov r1, r4",
            "ldrb r3, [r1]",
            "mov r2, r1",
            "add r1, r1, 1",
            "cmp r3, 0xd",
            "cmpne r3, 0",
            "bne 0x37e98",
            "cmp r3, 0",
            "bne 0x37ea0",
            "b 0x37eac",
            "cmp r3, 0xa",
            "bne 0x37e74",
            "mov r3, 0",
            "strb r3, [r2]",
            "b 0x37ed8",
            "mov r0, r6",
            "bl sym.imp.fgetc",
            "cmp r0, 0xa",
            "cmnne r0, 1",
            "bne 0x37eac",
            "mov r3, 1",
            "str r3, [r5]",
            "b 0x37ed8",
            "mov r4, r0",
            "b 0x37ed8",
            "mov r4, 0",
            "mov r0, r4",
            "pop {r3, r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "fcn.00026688": {
        "function_address": "0x00026688",
        "instructions": [
            "push {r0, r1, r4, r5, r6, lr}",
            "mov r4, r0",
            "ldrb r0, [r0]",
            "mov r5, r1",
            "mov r6, r2",
            "bl sym.imp.isalnum",
            "cmp r0, 0",
            "bne 0x266b0",
            "bl fcn.000265fc",
            "b 0x266dc",
            "ldr r3, [0x000266e0]",
            "mov r2, 0",
            "mov r0, r4",
            "add r1, sp, 4",
            "ldr r3, [r3]",
            "str r2, [r3]",
            "mov r2, r6",
            "bl sym.imp.strtoull",
            "mov r2, r5",
            "ldr r3, [sp, 4]",
            "bl fcn.0002661c",
            "pop {r2, r3, r4, r5, r6, pc}"
        ]
    },
    "fcn.00054540": {
        "function_address": "0x00054540",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r5, r0",
            "mov r4, r0",
            "b 0x54564",
            "bl sym.imp.__ctype_tolower_loc",
            "ldr r3, [r0]",
            "lsl r6, r6, 1",
            "ldrsh r3, [r3, r6]",
            "strb r3, [r4, -1]",
            "ldrb r6, [r4], 1",
            "cmp r6, 0",
            "bne 0x54550",
            "mov r0, r5",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.00037d08": {
        "function_address": "0x00037d08",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r5, r2",
            "subs r2, r0, 0",
            "mov ip, r1",
            "mov r4, r3",
            "beq 0x37d40",
            "cmp ip, 0",
            "ldr r3, [0x00037db0]",
            "mov r0, r5",
            "ldr r1, str._s_s_r_n",
            "movne r3, ip",
            "bl sym.imp.fprintf",
            "mov r0, r5",
            "bl sym.imp.fflush",
            "mov r6, 0",
            "mov r0, r4",
            "movw r1, 0x1fe",
            "mov r2, r5",
            "bl sym.imp.fgets",
            "cmp r0, 0",
            "bne 0x37d64",
            "ldr r0, str.error_getting_response",
            "bl fcn.00028900",
            "mov r0, r4",
            "ldr r1, [0x00037dbc]",
            "bl sym.imp.strstr",
            "cmp r0, 0",
            "strbne r6, [r0]",
            "ldrb r3, [r4]",
            "sub r3, r3, 0x30",
            "cmp r3, 9",
            "bhi 0x37d44",
            "ldrb r8, [r4, 3]",
            "add r7, r4, 3",
            "cmp r8, 0x20",
            "bne 0x37d44",
            "mov r3, 0",
            "mov r0, r4",
            "strb r3, [r7]",
            "bl fcn.00029df4",
            "strb r8, [r7]",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.00029df4": {
        "function_address": "0x00029df4",
        "instructions": [
            "mov r1, 0",
            "mvn r2, 0x80000000",
            "b fcn.00029d04"
        ]
    },
    "fcn.00037ee4": {
        "function_address": "0x00037ee4",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r6, r0",
            "ldr r5, [0x00037f3c]",
            "mov r4, r1",
            "mov r0, r4",
            "bl sym.imp.clearerr",
            "mov r0, r6",
            "mov r1, 0x200",
            "mov r2, r4",
            "bl sym.imp.fgets",
            "subs r7, r0, 0",
            "bne 0x37f34",
            "mov r0, r4",
            "bl sym.imp.ferror",
            "cmp r0, 0",
            "beq 0x37f34",
            "ldr r3, [r5]",
            "ldr r3, [r3]",
            "cmp r3, 4",
            "beq 0x37ef4",
            "mov r0, r7",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "sym.imp.clearerr": {
        "function_address": "0x0000c110",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x56c]!"
        ]
    },
    "fcn.0003f3c4": {
        "function_address": "0x0003f3c4",
        "instructions": [
            "cmp r2, 0x11",
            "push {r4, lr}",
            "ldreq r0, str.__s__may_be_inet_address__but_it_is_not_allowed_in_this_context",
            "mov r4, r1",
            "beq 0x3f3ec",
            "bl fcn.0003f294",
            "cmp r0, 0",
            "popeq {r4, pc}",
            "ldr r0, str.an_inet_address_is_expected_rather_than___s_",
            "mov r1, r4",
            "bl fcn.000271d8"
        ]
    },
    "fcn.0003f294": {
        "function_address": "0x0003f294",
        "instructions": [
            "push {r0, r1, r2, r4, r5, r6, r7, lr}",
            "mov r6, r1",
            "mov r7, r2",
            "mov r1, 0",
            "mov r2, 0x14",
            "mov r4, r0",
            "bl sym.imp.memset",
            "mov r0, r6",
            "ldr r1, aav.0x0005bcf8",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x3f2d8",
            "mov r0, r6",
            "ldr r1, aav.0x00060994",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x3f2ec",
            "mov r6, 0",
            "strb r7, [r4]",
            "strb r6, [r4, 1]",
            "strh r6, [r4, 2]",
            "b 0x3f378",
            "mov r0, r6",
            "mov r1, 0x2f",
            "bl sym.imp.strchr",
            "subs r5, r0, 0",
            "mov r1, r6",
            "movne r3, 0",
            "mov r0, r4",
            "strbne r3, [r5]",
            "mov r2, r7",
            "bl fcn.0003f128",
            "subs r6, r0, 0",
            "bne 0x3f368",
            "ldrb r3, [r4]",
            "cmp r3, 0xa",
            "moveq r3, 0x80",
            "movne r3, 0x20",
            "cmp r5, 0",
            "strh r3, [r4, 2]",
            "beq 0x3f378",
            "add r0, sp, 4",
            "add r1, r5, 1",
            "mov r2, 0",
            "bl fcn.0003f020",
            "cmp r0, 0",
            "bne 0x3f380",
            "ldr r3, [sp, 4]",
            "ldrsh r2, [r4, 2]",
            "cmp r3, r2",
            "strhle r3, [r4, 2]",
            "ble 0x3f370",
            "b 0x3f380",
            "cmp r5, 0",
            "beq 0x3f378",
            "mov r3, 0x2f",
            "strb r3, [r5]",
            "mov r0, r6",
            "pop {r1, r2, r3, r4, r5, r6, r7, pc}",
            "mvn r6, 0",
            "b 0x3f370"
        ]
    },
    "fcn.0003de7c": {
        "function_address": "0x0003de7c",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov ip, r2",
            "ldr r6, [r0]",
            "mov r4, r0",
            "ldr r2, [sp, 0x10]",
            "add r6, r6, 3",
            "bic r6, r6, 3",
            "add r5, r2, 4",
            "add r0, r5, r6",
            "cmp r0, r1",
            "bhi 0x3dedc",
            "add r0, r4, r6",
            "strh r5, [r4, r6]",
            "strh ip, [r0, 2]",
            "mov r1, r3",
            "add r0, r0, 4",
            "bl sym.imp.memcpy",
            "ldr r3, [r4]",
            "mov r0, 0",
            "add r3, r3, 3",
            "bic r3, r3, 3",
            "add r5, r5, r3",
            "str r5, [r4]",
            "pop {r4, r5, r6, pc}",
            "mvn r0, 0",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.0003f464": {
        "function_address": "0x0003f464",
        "instructions": [
            "push {r3, lr}",
            "mov r3, r0",
            "mov r2, r1",
            "ldr r0, str.duplicate___s_:___s__is_the_second_value",
            "mov r1, r3",
            "bl fcn.000271d8"
        ]
    },
    "fcn.0003f390": {
        "function_address": "0x0003f390",
        "instructions": [
            "cmp r2, 0x11",
            "push {r4, lr}",
            "ldreq r0, str.__s__may_be_inet_address__but_it_is_not_allowed_in_this_context",
            "mov r4, r1",
            "beq 0x3f3b8",
            "bl fcn.0003f128",
            "cmp r0, 0",
            "popeq {r4, pc}",
            "ldr r0, str.an_inet_address_is_expected_rather_than___s_",
            "mov r1, r4",
            "bl fcn.000271d8"
        ]
    },
    "fcn.0003f128": {
        "function_address": "0x0003f128",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r6, r1",
            "mov r5, r2",
            "mov r1, 0",
            "mov r2, 0x14",
            "mov r4, r0",
            "add r7, r0, 4",
            "bl sym.imp.memset",
            "mov r0, r6",
            "ldr r1, aav.0x0005bcf8",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x3f184",
            "mov r0, r6",
            "ldr r1, [0x0003f28c]",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x3f184",
            "mov r0, r6",
            "ldr r1, aav.0x00060994",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x3f1a8",
            "cmp r5, 0xa",
            "strb r5, [r4]",
            "mvn r2, 0",
            "movne r5, 4",
            "moveq r5, 0x10",
            "strh r2, [r4, 2]",
            "strb r5, [r4, 1]",
            "mov r0, 0",
            "pop {r3, r4, r5, r6, r7, pc}",
            "mov r0, r6",
            "mov r1, 0x3a",
            "bl sym.imp.strchr",
            "cmp r0, 0",
            "beq 0x3f204",
            "mov r0, 0xa",
            "cmp r5, r0",
            "cmpne r5, 0",
            "strb r0, [r4]",
            "moveq r5, 0",
            "movne r5, 1",
            "bne 0x3f278",
            "mov r1, r6",
            "mov r2, r7",
            "bl sym.imp.inet_pton",
            "cmp r0, 0",
            "ble 0x3f278",
            "mov r3, 0x10",
            "mov r0, r5",
            "strb r3, [r4, 1]",
            "mvn r3, 0",
            "strh r3, [r4, 2]",
            "pop {r3, r4, r5, r6, r7, pc}",
            "mov r3, 2",
            "cmp r5, r3",
            "cmpne r5, 0",
            "strb r3, [r4]",
            "moveq r3, 0",
            "movne r3, 1",
            "bne 0x3f278",
            "mov r2, 4",
            "mov r1, 0xa",
            "strb r2, [r4, 1]",
            "mvn r2, 0",
            "strh r2, [r4, 2]",
            "b 0x3f268",
            "sub r2, r0, 0x30",
            "uxtb r2, r2",
            "cmp r2, 9",
            "ldrbls r0, [r7, r3]",
            "mlals r2, r1, r0, r2",
            "strbls r2, [r7, r3]",
            "bls 0x3f268",
            "cmp r0, 0x2e",
            "bne 0x3f278",
            "add r3, r3, 1",
            "cmp r3, 3",
            "bgt 0x3f280",
            "ldrb r0, [r6], 1",
            "cmp r0, 0",
            "bne 0x3f238",
            "pop {r3, r4, r5, r6, r7, pc}",
            "mvn r0, 0",
            "pop {r3, r4, r5, r6, r7, pc}",
            "mvn r0, 0",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.0003e8a4": {
        "function_address": "0x0003e8a4",
        "instructions": [
            "ldr r3, [0x0003e974]",
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r4, r0",
            "mov r7, r1",
            "ldr r0, [r3]",
            "cmp r0, 0",
            "beq 0x3e8dc",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x3e8dc",
            "ldr r3, [0x0003e978]",
            "ldr r3, [r3]",
            "str r3, [r4]",
            "pop {r4, r5, r6, r7, r8, pc}",
            "ldr r8, [0x0003e97c]",
            "mov r5, 0",
            "bl fcn.0003e5e8",
            "ldr r3, [r8]",
            "ldr r6, [r3, r5, lsl 2]",
            "cmp r6, 0",
            "beq 0x3e924",
            "mov r0, r6",
            "mov r1, r7",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x3e924",
            "ldr r3, [0x0003e974]",
            "str r6, [r3]",
            "ldr r3, [0x0003e978]",
            "str r5, [r3]",
            "str r5, [r4]",
            "pop {r4, r5, r6, r7, r8, pc}",
            "add r5, r5, 1",
            "cmp r5, 0x100",
            "bne 0x3e8e8",
            "mov r1, 0",
            "mov r0, r7",
            "mov r2, r1",
            "bl fcn.000266e4",
            "ldr r3, [0x0003e978]",
            "str r0, [r3]",
            "ldr r3, [0x0003e980]",
            "ldr r3, [r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "mvnne r0, 0",
            "popne {r4, r5, r6, r7, r8, pc}",
            "cmp r0, 0xff",
            "strls r0, [r4]",
            "mvnhi r0, 0",
            "movls r0, r3",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.0003e5e8": {
        "function_address": "0x0003e5e8",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "sub sp, sp, 0x400",
            "sub sp, sp, 8",
            "mov sl, r1",
            "mov sb, r0",
            "ldr r1, [0x0003e568]",
            "bl sym.imp.fopen64",
            "subs r8, r0, 0",
            "beq 0x3e55c",
            "b 0x3e528",
            "mov r5, r2",
            "ldrb r3, [r2], 1",
            "cmp r3, 0x20",
            "cmpne r3, 9",
            "beq 0x3e458",
            "cmp r3, 0x23",
            "cmpne r3, 0xa",
            "beq 0x3e538",
            "cmp r3, 0",
            "beq 0x3e538",
            "mov r0, r5",
            "ldr r1, str.0x_x__s_n",
            "mov r2, r6",
            "mov r3, r4",
            "bl sym.imp.sscanf",
            "cmp r0, 2",
            "beq 0x3e504",
            "mov r0, r5",
            "ldr r1, str.0x_x__s_",
            "mov r2, r6",
            "mov r3, r4",
            "bl sym.imp.sscanf",
            "cmp r0, 2",
            "beq 0x3e504",
            "mov r0, r5",
            "ldr r1, [0x0003e574]",
            "mov r2, r6",
            "mov r3, r4",
            "bl sym.imp.sscanf",
            "cmp r0, 2",
            "beq 0x3e504",
            "mov r0, r5",
            "ldr r1, str._d__s_",
            "mov r2, r6",
            "mov r3, r4",
            "bl sym.imp.sscanf",
            "cmp r0, 2",
            "beq 0x3e504",
            "ldr r0, str.database__s_is_corrupted_at__s",
            "mov r1, sb",
            "mov r2, r5",
            "bl fcn.00027184",
            "b 0x3e55c",
            "ldr r5, [sp, 0x404]",
            "cmp r5, 0",
            "blt 0x3e538",
            "cmp r5, 0x100",
            "bgt 0x3e538",
            "mov r0, r4",
            "bl fcn.00029ed8",
            "str r0, [sl, r5, lsl 2]",
            "b 0x3e538",
            "add r6, sp, 0x400",
            "add r7, sp, 0x204",
            "add r6, r6, 4",
            "add r4, sp, 4",
            "mov r0, r7",
            "mov r1, 0x200",
            "mov r2, r8",
            "bl sym.imp.fgets",
            "cmp r0, 0",
            "movne r2, r7",
            "bne 0x3e458",
            "mov r0, r8",
            "bl sym.imp.fclose",
            "add sp, sp, 8",
            "add sp, sp, 0x400",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}",
            "push {r4, lr}",
            "ldr r4, [0x0003e640]",
            "ldr r3, [r4]",
            "cmp r3, 0",
            "popne {r4, pc}",
            "mov r0, 0x400",
            "bl fcn.00029eb4",
            "ldr r3, str.global",
            "mov r1, r0",
            "str r0, [r4]",
            "str r3, [r0]",
            "ldr r3, str.nowhere",
            "str r3, [r0, 0x3fc]",
            "ldr r3, aav.0x0006219c",
            "str r3, [r0, 0x3f8]",
            "ldr r3, [0x0003e650]",
            "str r3, [r0, 0x3f4]",
            "ldr r3, str.site",
            "str r3, [r0, 0x320]",
            "ldr r0, str._etc_iproute2_rt_scopes",
            "pop {r4, lr}",
            "b 0x3e430"
        ]
    },
    "fcn.0003f438": {
        "function_address": "0x0003f438",
        "instructions": [
            "push {r3, lr}",
            "ldr r0, [pc]",
            "bl fcn.000271d8"
        ]
    },
    "fcn.0003f480": {
        "function_address": "0x0003f480",
        "instructions": [
            "push {r3, lr}",
            "mov r3, r0",
            "mov r2, r1",
            "ldr r0, str.either___s__is_duplicate__or___s__is_garbage",
            "mov r1, r3",
            "bl fcn.000271d8"
        ]
    },
    "fcn.0003d964": {
        "function_address": "0x0003d964",
        "instructions": [
            "push {r0, r1, r2, r4, r5, r6, r7, lr}",
            "mov r4, r0",
            "mov r5, 0",
            "mov r6, r4",
            "mov r7, 0xc",
            "mov r1, 3",
            "str r5, [r0]",
            "mov r2, r5",
            "mov r0, 0x10",
            "bl fcn.0002a3cc"
        ]
    },
    "sym.imp.getsockname": {
        "function_address": "0x0000b894",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xb14]!"
        ]
    },
    "fcn.0003e3a0": {
        "function_address": "0x0003e3a0",
        "instructions": [
            "push {r4, lr}",
            "mov r1, 0",
            "mov r4, r0",
            "mov r2, 0x12",
            "bl fcn.0003da20",
            "mov r0, r4",
            "ldr r1, fcn.0003e190",
            "ldr r2, [0x0003e3d0]",
            "bl fcn.0003daf8"
        ]
    },
    "fcn.0003da20": {
        "function_address": "0x0003da20",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "sub sp, sp, 0x28",
            "add r5, sp, 0x1c",
            "mov r6, 0xc",
            "mov r4, r0",
            "mov r7, r1",
            "mov r8, r2",
            "mov r0, r5",
            "mov r2, r6",
            "mov r1, 0",
            "bl sym.imp.memset",
            "mov r3, 0x10",
            "mov r2, 0x14",
            "strh r3, [sp, 0x1c]",
            "movw r3, 0x301",
            "strh r3, [sp, 0xe]",
            "mov r3, 0",
            "str r3, [sp, 0x14]",
            "add r1, sp, 8",
            "ldr r3, [r4, 0x1c]",
            "ldr r0, [r4]",
            "str r2, [sp, 8]",
            "add r3, r3, 1",
            "strh r8, [sp, 0xc]",
            "str r3, [r4, 0x1c]",
            "str r3, [r4, 0x20]",
            "str r3, [sp, 0x10]",
            "mov r3, r5",
            "strb r7, [sp, 0x18]",
            "str r6, [sp]",
            "bl fcn.0002a420",
            "add sp, sp, 0x28",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.0003daf8": {
        "function_address": "0x0003daf8",
        "instructions": [
            "push {r3, lr}",
            "bl fcn.0003d778",
            "cmp r0, 0",
            "popge {r3, pc}",
            "ldr r0, [pc]",
            "bl fcn.000271d8"
        ]
    },
    "fcn.0003d778": {
        "function_address": "0x0003d778",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x2000",
            "sub sp, sp, 0x34",
            "ldr sl, [0x0003d944]",
            "add r3, sp, 0x30",
            "add r8, sp, 0x2000",
            "mov sb, r1",
            "mov fp, r2",
            "add r1, sp, 0x2000",
            "sub r2, r3, 0x30",
            "mov r7, r0",
            "add r8, r8, 0x1c",
            "mov r6, 0",
            "str r2, [r1, 0x28]",
            "mov r2, 0x2000",
            "str r2, [r1, 0x2c]",
            "add r2, sp, 0x2000",
            "mov r3, 0xc",
            "add r1, sp, 0x2000",
            "str r3, [r2, 4]",
            "add r1, r1, 0x28",
            "mov r3, 1",
            "str r1, [r2, 8]",
            "mov r1, r2",
            "str r8, [r2]",
            "str r3, [r2, 0xc]",
            "str r6, [r2, 0x10]",
            "str r6, [r2, 0x14]",
            "str r6, [r2, 0x18]",
            "mov r2, r6",
            "ldr r0, [r7]",
            "bl sym.imp.recvmsg",
            "subs r5, r0, 0",
            "bge 0x3d81c",
            "ldr r3, [sl]",
            "ldr r3, [r3]",
            "cmp r3, 4",
            "beq 0x3d7b8",
            "ldr r0, str.OVERRUN",
            "bl fcn.000288b8",
            "b 0x3d7b8",
            "ldreq r0, str.EOF_on_netlink",
            "beq 0x3d894",
            "add r2, sp, 0x2000",
            "ldr r1, [r2, 4]",
            "cmp r1, 0xc",
            "ldrne r0, str.sender_address_length___d",
            "bne 0x3d934",
            "add r3, sp, 0x30",
            "sub r4, r3, 0x30",
            "b 0x3d8ec",
            "add r1, sp, 0x2000",
            "ldr r0, [r1, 0x20]",
            "cmp r0, 0",
            "bne 0x3d8d8",
            "ldr r1, [r4, 0xc]",
            "ldr r2, [r7, 8]",
            "cmp r1, r2",
            "bne 0x3d8d8",
            "ldr r1, [r4, 8]",
            "ldr r2, [r7, 0x20]",
            "cmp r1, r2",
            "bne 0x3d8d8",
            "ldrh r2, [r4, 4]",
            "cmp r2, 3",
            "beq 0x3d938",
            "cmp r2, 2",
            "bne 0x3d8c0",
            "cmp r3, 0x23",
            "bhi 0x3d89c",
            "ldr r0, str.ERROR_truncated",
            "bl fcn.00027184",
            "b 0x3d8b8",
            "ldr r3, [0x0003d944]",
            "ldr r2, [r4, 0x10]",
            "ldr r0, str.RTNETLINK_answers",
            "ldr r3, [r3]",
            "rsb r2, r2, 0",
            "str r2, [r3]",
            "bl fcn.000288b8",
            "mvn r0, 0",
            "b 0x3d938",
            "mov r0, r8",
            "mov r1, r4",
            "mov r2, fp",
            "blx sb",
            "cmp r0, 0",
            "blt 0x3d938",
            "ldr r3, [r4]",
            "add r3, r3, 3",
            "bic r3, r3, 3",
            "rsb r5, r3, r5",
            "add r4, r4, r3",
            "cmp r5, 0xf",
            "ble 0x3d908",
            "ldr r3, [r4]",
            "cmp r3, 0xf",
            "bls 0x3d908",
            "cmp r3, r5",
            "bls 0x3d844",
            "add r2, sp, 0x2000",
            "ldr r3, [r2, 0x18]",
            "tst r3, 0x20",
            "beq 0x3d924",
            "ldr r0, str.message_truncated",
            "bl fcn.00027184",
            "b 0x3d7b8",
            "cmp r5, 0",
            "beq 0x3d7b8",
            "ldr r0, str.remnant_of_size__d_",
            "mov r1, r5",
            "bl fcn.000271d8",
            "add sp, sp, 0x34",
            "add sp, sp, 0x2000",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0003e31c": {
        "function_address": "0x0003e31c",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r4, r0",
            "mov r0, 2",
            "sub sp, sp, 0x20",
            "mov r1, r0",
            "mov r2, 0",
            "bl sym.imp.socket",
            "subs r5, r0, 0",
            "beq 0x3e388",
            "mov r1, r4",
            "mov r2, 0x10",
            "mov r0, sp",
            "bl sym.imp.strncpy",
            "mvn r3, 0",
            "movw r1, 0x8933",
            "mov r2, sp",
            "mov r0, r5",
            "str r3, [sp, 0x10]",
            "bl sym.imp.ioctl",
            "mov r6, r0",
            "mov r0, r5",
            "bl sym.imp.close",
            "cmp r6, 0",
            "blt 0x3e388",
            "ldr r0, [sp, 0x10]",
            "cmp r0, 0",
            "bgt 0x3e394",
            "ldr r0, str.cannot_find_device___s_",
            "mov r1, r4",
            "bl fcn.000271d8",
            "add sp, sp, 0x20",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.0003db14": {
        "function_address": "0x0003db14",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r5, r1",
            "mov r7, r3",
            "sub sp, sp, 0x2000",
            "sub sp, sp, 0x3c",
            "mov r4, r0",
            "ldr r3, [r5]",
            "add r1, sp, 0x2000",
            "add r0, sp, 0x2000",
            "str r2, [sp, 4]",
            "add r0, r0, 0x24",
            "mov r2, 0xc",
            "str r3, [r1, 0x34]",
            "add r3, sp, 0x2000",
            "add r3, r3, 0x30",
            "ldr r6, [r1, 0x60]",
            "str r3, [r1, 0x10]",
            "mov r3, 1",
            "str r5, [r1, 0x30]",
            "str r2, [r1, 0xc]",
            "str r3, [r1, 0x14]",
            "add r3, sp, 0x2000",
            "str r0, [r1, 8]",
            "mov r1, 0",
            "str r1, [r3, 0x18]",
            "str r1, [r3, 0x1c]",
            "str r1, [r3, 0x20]",
            "bl sym.imp.memset",
            "ldr r3, [sp, 4]",
            "cmp r6, 0",
            "add r2, sp, 0x2000",
            "ldr r8, [r4, 0x1c]",
            "mov r1, 0x10",
            "str r7, [r2, 0x2c]",
            "str r3, [r2, 0x28]",
            "ldrheq r3, [r5, 6]",
            "add r8, r8, 1",
            "str r8, [r4, 0x1c]",
            "str r8, [r5, 8]",
            "orreq r3, r3, 4",
            "strh r1, [r2, 0x24]",
            "strheq r3, [r5, 6]",
            "add r5, sp, 0x2000",
            "add r5, r5, 8",
            "ldr r0, [r4]",
            "mov r1, r5",
            "mov r2, 0",
            "bl sym.imp.sendmsg",
            "cmp r0, 0",
            "ldrlt r0, str.cannot_talk_to_rtnetlink",
            "blt 0x3dd60",
            "ldr sl, [0x0003ddec]",
            "add r3, sp, 0x38",
            "sub r2, r3, 0x30",
            "add r1, sp, 0x2000",
            "str r2, [r1, 0x30]",
            "mov r3, 0x2000",
            "add r1, sp, 0x2000",
            "add r2, sp, r3",
            "ldr r0, [r4]",
            "str r3, [r2, 0x34]",
            "add r1, r1, 8",
            "mov r2, 0",
            "bl sym.imp.recvmsg",
            "subs r7, r0, 0",
            "bge 0x3dc38",
            "ldr r3, [sl]",
            "ldr r3, [r3]",
            "cmp r3, 4",
            "beq 0x3dbf4",
            "ldr r0, str.OVERRUN",
            "bl fcn.000288b8",
            "b 0x3dbf4",
            "bne 0x3dc4c",
            "ldr r0, str.EOF_on_netlink",
            "bl fcn.00027184",
            "mvn r0, 0",
            "b 0x3dddc",
            "add r2, sp, 0x2000",
            "ldr r1, [r2, 0xc]",
            "cmp r1, 0xc",
            "ldrne r0, str.sender_address_length___d",
            "bne 0x3dca4",
            "add r3, sp, 0x38",
            "sub r5, r3, 0x30",
            "b 0x3dda0",
            "ldr fp, [r5]",
            "sub r3, fp, 0x10",
            "lsr sb, r3, 0x1f",
            "cmp fp, r7",
            "orrgt sb, sb, 1",
            "cmp sb, 0",
            "beq 0x3dca8",
            "add r1, sp, 0x2000",
            "ldr r3, [r1, 0x20]",
            "tst r3, 0x20",
            "ldrne r0, str.truncated_message",
            "bne 0x3dc40",
            "ldr r0, str.malformed_message:_len_d_",
            "mov r1, fp",
            "bl fcn.000271d8",
            "add r1, sp, 0x2000",
            "ldr r2, [r1, 0x28]",
            "ldr r1, [sp, 4]",
            "cmp r2, r1",
            "bne 0x3dcd8",
            "ldr r1, [r5, 0xc]",
            "ldr r2, [r4, 8]",
            "cmp r1, r2",
            "bne 0x3dcd8",
            "ldr r2, [r5, 8]",
            "cmp r2, r8",
            "beq 0x3dd10",
            "add r2, sp, 0x2000",
            "ldr r2, [r2, 0x64]",
            "cmp r2, 0",
            "beq 0x3dda0",
            "add r3, sp, 0x2000",
            "add r0, sp, 0x2000",
            "ldr r2, [r3, 0x68]",
            "add r0, r0, 0x24",
            "mov r1, r5",
            "ldr r3, [r3, 0x64]",
            "blx r3",
            "cmp r0, 0",
            "blt 0x3dddc",
            "b 0x3dda0",
            "ldrh r2, [r5, 4]",
            "cmp r2, 2",
            "bne 0x3dd68",
            "cmp r3, 0x13",
            "ldrls r0, str.ERROR_truncated",
            "bls 0x3dc40",
            "ldr sb, [r5, 0x10]",
            "ldr r3, [0x0003ddec]",
            "rsb sb, sb, 0",
            "ldr r3, [r3]",
            "cmp sb, 0",
            "str sb, [r3]",
            "bne 0x3dd5c",
            "cmp r6, 0",
            "movne r1, r5",
            "movne r0, r6",
            "ldrne r2, [r1]",
            "bne 0x3dd7c",
            "b 0x3ddd8",
            "ldr r0, str.RTNETLINK_answers",
            "bl fcn.000288b8",
            "b 0x3dc44",
            "cmp r6, 0",
            "beq 0x3dd88",
            "mov r0, r6",
            "mov r1, r5",
            "mov r2, fp",
            "bl sym.imp.memcpy",
            "mov r0, sb",
            "b 0x3dddc",
            "add fp, fp, 3",
            "ldr r0, str.unexpected_reply_",
            "bic fp, fp, 3",
            "rsb r7, fp, r7",
            "add r5, r5, fp",
            "bl fcn.00027184",
            "cmp r7, 0xf",
            "bhi 0x3dc6c",
            "add r1, sp, 0x2000",
            "ldr r3, [r1, 0x20]",
            "tst r3, 0x20",
            "beq 0x3ddc4",
            "ldr r0, str.message_truncated",
            "bl fcn.00027184",
            "b 0x3dbf4",
            "cmp r7, 0",
            "beq 0x3dbf4",
            "ldr r0, str.remnant_of_size__d_",
            "mov r1, r7",
            "b 0x3dca4",
            "mov r0, r6",
            "add sp, sp, 0x3c",
            "add sp, sp, 0x2000",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.imp.sendmsg": {
        "function_address": "0x0000baec",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x984]!"
        ]
    },
    "fcn.0003daa4": {
        "function_address": "0x0003daa4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "sub sp, sp, 0x18",
            "add r4, sp, 0xc",
            "mov r5, 0xc",
            "mov r8, r0",
            "mov r7, r1",
            "mov r6, r2",
            "mov r0, r4",
            "mov r2, r5",
            "mov r1, 0",
            "bl sym.imp.memset",
            "mov r3, 0x10",
            "ldr r0, [r8]",
            "strh r3, [sp, 0xc]",
            "mov r1, r7",
            "mov r2, r6",
            "mov r3, r4",
            "str r5, [sp]",
            "bl fcn.0002a420",
            "add sp, sp, 0x18",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.0003df48": {
        "function_address": "0x0003df48",
        "instructions": [
            "push {r4, lr}",
            "b 0x3df6c",
            "ldrh r4, [r2, 2]",
            "add ip, ip, 3",
            "bic ip, ip, 3",
            "rsb r3, ip, r3",
            "cmp r4, r1",
            "strle r2, [r0, r4, lsl 2]",
            "add r2, r2, ip",
            "cmp r3, 3",
            "ble 0x3df8c",
            "ldrh ip, [r2]",
            "cmp ip, 3",
            "bls 0x3df94",
            "cmp ip, r3",
            "ble 0x3df50",
            "b 0x3df94",
            "cmp r3, 0",
            "beq 0x3dfa4",
            "ldr r0, str.deficit__d__rta_len_d_",
            "mov r1, r3",
            "ldrh r2, [r2]",
            "bl fcn.00027184",
            "mov r0, 0",
            "pop {r4, pc}"
        ]
    },
    "fcn.0003e2a4": {
        "function_address": "0x0003e2a4",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "subs r5, r0, 0",
            "mov r4, r1",
            "ldreq r4, [0x0003e2e4]",
            "beq 0x3e2dc",
            "bl fcn.0003e15c",
            "cmp r0, 0",
            "addne r4, r0, 0x1c",
            "bne 0x3e2dc",
            "mov r0, r4",
            "mov r1, 0x10",
            "ldr r2, str.if_d",
            "mov r3, r5",
            "bl sym.imp.snprintf",
            "mov r0, r4",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.0003e15c": {
        "function_address": "0x0003e15c",
        "instructions": [
            "ldr r3, [0x0003e18c]",
            "and r2, r0, 0xf",
            "ldr r3, [r3, r2, lsl 2]",
            "b 0x3e17c",
            "ldr r2, [r3, 4]",
            "cmp r2, r0",
            "beq 0x3e184",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "bne 0x3e16c",
            "mov r0, r3",
            "bx lr"
        ]
    },
    "fcn.0003f49c": {
        "function_address": "0x0003f49c",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "asrs r7, r2, 5",
            "mov r5, r0",
            "mov r6, r1",
            "mov r4, r2",
            "beq 0x3f4cc",
            "add r0, r0, 4",
            "add r1, r1, 4",
            "lsl r2, r7, 2",
            "bl sym.imp.memcmp",
            "cmp r0, 0",
            "bne 0x3f50c",
            "ands r0, r4, 0x1f",
            "popeq {r3, r4, r5, r6, r7, pc}",
            "lsl r7, r7, 2",
            "rsb r0, r0, 0x20",
            "mvn r4, 0",
            "add r6, r6, r7",
            "add r7, r5, r7",
            "ldr r2, [r6, 4]",
            "lsl r0, r4, r0",
            "ldr r3, [r7, 4]",
            "rev r0, r0",
            "eor r3, r2, r3",
            "tst r0, r3",
            "moveq r0, 0",
            "movne r0, 1",
            "pop {r3, r4, r5, r6, r7, pc}",
            "mvn r0, 0",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "sym.imp.memcmp": {
        "function_address": "0x0000c0a4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x5b4]!"
        ]
    },
    "fcn.00039200": {
        "function_address": "0x00039200",
        "instructions": [
            "push {r4, lr}",
            "ldr r4, [0x0003923c]",
            "ldr r0, [r4, 0x4c]",
            "ldr r1, [r4, 0x40]",
            "ldr r2, [r4, 0x44]",
            "bl fcn.0003daa4",
            "cmp r0, 0",
            "bge 0x39230",
            "ldr r0, str.failed_to_send_flush_request",
            "bl fcn.000288b8",
            "mvn r0, 0",
            "pop {r4, pc}",
            "mov r0, 0",
            "str r0, [r4, 0x44]",
            "pop {r4, pc}"
        ]
    },
    "fcn.0003e834": {
        "function_address": "0x0003e834",
        "instructions": [
            "cmp r0, 0xff",
            "push {r4, r5, r6, lr}",
            "mov r5, r0",
            "mov r4, r1",
            "mov r6, r2",
            "bls 0x3e868",
            "mov r0, r1",
            "mov r3, r5",
            "mov r1, r2",
            "ldr r2, aav.0x0005c33c",
            "bl sym.imp.snprintf",
            "mov r0, r4",
            "pop {r4, r5, r6, pc}",
            "bl fcn.0003e5e8",
            "ldr r3, [0x0003e8a0]",
            "ldr r3, [r3]",
            "ldr r0, [r3, r5, lsl 2]",
            "cmp r0, 0",
            "popne {r4, r5, r6, pc}",
            "mov r0, r4",
            "mov r1, r6",
            "ldr r2, aav.0x0005c33c",
            "mov r3, r5",
            "bl sym.imp.snprintf",
            "mov r0, r4",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.0003e190": {
        "function_address": "0x0003e190",
        "instructions": [
            "ldrh r3, [r1, 4]",
            "push {r4, r5, r6, lr}",
            "sub sp, sp, 0x68",
            "cmp r3, 0x10",
            "bne 0x3e294",
            "ldr r5, [r1]",
            "cmp r5, 0x13",
            "mvnls r0, 0",
            "bls 0x3e298",
            "add r4, r1, 0x10",
            "mov r2, 0x68",
            "mov r1, 0",
            "mov r0, sp",
            "bl sym.imp.memset",
            "mov r0, sp",
            "mov r1, 0x19",
            "add r2, r4, 0x10",
            "sub r3, r5, 0x20",
            "bl fcn.0003df48",
            "ldr r0, [sp, 0xc]",
            "mov r6, sp",
            "cmp r0, 0",
            "beq 0x3e298",
            "ldr r3, [0x0003e2a0]",
            "ldr r1, [r4, 4]",
            "and r2, r1, 0xf",
            "add r6, r3, r2, lsl 2",
            "ldr r5, [r3, r2, lsl 2]",
            "b 0x3e218",
            "ldr r3, [r5, 4]",
            "cmp r3, r1",
            "beq 0x3e240",
            "mov r6, r5",
            "ldr r5, [r5]",
            "cmp r5, 0",
            "bne 0x3e204",
            "mov r0, 0x2c",
            "bl fcn.00029e54",
            "ldrh r3, [r4, 2]",
            "ldr r1, [sp, 4]",
            "str r3, [r5, 8]",
            "ldr r3, [r4, 8]",
            "cmp r1, 0",
            "streq r1, [r5, 0xc]",
            "streq r1, [r5, 0x14]",
            "str r3, [r5, 0x10]",
            "streq r1, [r5, 0x18]",
            "beq 0x3e284",
            "ldrh r2, [r1], 4",
            "add r0, r5, 0x14",
            "sub r2, r2, 4",
            "str r2, [r5, 0xc]",
            "cmp r2, 8",
            "movhs r2, 8",
            "bl sym.imp.memcpy",
            "ldr r1, [sp, 0xc]",
            "add r0, r5, 0x1c",
            "add r1, r1, 4",
            "bl sym.imp.strcpy",
            "mov r0, 0",
            "add sp, sp, 0x68",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.0003e2f8": {
        "function_address": "0x0003e2f8",
        "instructions": [
            "push {r3, lr}",
            "subs r3, r0, 0",
            "beq 0x3e314",
            "bl fcn.0003e15c",
            "cmp r0, 0",
            "ldrne r0, [r0, 0x10]",
            "pop {r3, pc}",
            "mov r0, r3",
            "pop {r3, pc}"
        ]
    },
    "fcn.0003e3d4": {
        "function_address": "0x0003e3d4",
        "instructions": [
            "ldr ip, aav.0x0005f93c",
            "push {r3, r4, r5, lr}",
            "mov r4, r1",
            "mov r3, r0",
            "mov r1, 0",
            "ldr r5, [ip, r1, lsl 3]",
            "lsl r0, r1, 3",
            "cmp r5, r3",
            "ldreq r3, aav.0x0005f93c",
            "addeq r3, r3, r0",
            "ldreq r4, [r3, 4]",
            "beq 0x3e420",
            "add r1, r1, 1",
            "cmp r1, 0x3e",
            "bne 0x3e3e8",
            "mov r1, r2",
            "mov r0, r4",
            "ldr r2, aav.0x0005fb2c",
            "bl sym.imp.snprintf",
            "mov r0, r4",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.0003dfb0": {
        "function_address": "0x0003dfb0",
        "instructions": [
            "cmp r1, 4",
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "ldr r5, [sp, 0x20]",
            "mov r7, r0",
            "mov sl, r1",
            "mov r8, r3",
            "bne 0x3dff0",
            "cmp r2, 0x300",
            "cmpne r2, 0x308",
            "movne r4, 0",
            "moveq r4, 1",
            "beq 0x3dffc",
            "movw r3, 0x30a",
            "cmp r2, r3",
            "beq 0x3dffc",
            "b 0x3dff4",
            "mov r4, 0",
            "mov r6, r4",
            "b 0x3e058",
            "mov r0, 2",
            "mov r1, r7",
            "mov r2, r8",
            "mov r3, r5",
            "pop {r4, r5, r6, r7, r8, sb, sl, lr}",
            "b sym.imp.inet_ntop",
            "cmp r6, 0",
            "add r0, r8, r4",
            "bne 0x3e03c",
            "mov r1, r5",
            "ldr r2, aav.0x0005f900",
            "ldrb r3, [r7]",
            "sub r5, r5, 2",
            "bl sym.imp.snprintf",
            "add r4, r4, 2",
            "b 0x3e054",
            "mov r1, r5",
            "add r4, r4, 3",
            "sub r5, r5, 3",
            "ldr r2, str.:_02x",
            "ldrb r3, [r7, r6]",
            "bl sym.imp.snprintf",
            "add r6, r6, 1",
            "cmp r6, sl",
            "blt 0x3e014",
            "mov r0, r8",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "fcn.00039244": {
        "function_address": "0x00039244",
        "instructions": [
            "ldrh r3, [r1, 4]",
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r4, r2",
            "sub sp, sp, 0x1e8",
            "mov r6, r1",
            "sub r2, r3, 0x14",
            "uxth r2, r2",
            "ldr r8, [r1]",
            "cmp r2, 1",
            "bhi 0x39780",
            "subs r8, r8, 0x18",
            "bpl 0x39284",
            "ldr r0, str.wrong_nlmsg_len__d",
            "mov r1, r8",
            "bl fcn.00027184",
            "b 0x39788",
            "ldr r7, [0x00039798]",
            "ldr r2, [r7, 0x40]",
            "cmp r2, 0",
            "beq 0x3929c",
            "cmp r3, 0x14",
            "bne 0x39780",
            "add sl, sp, 0x1c8",
            "mov r1, 0",
            "mov r2, 0x20",
            "mov r0, sl",
            "bl sym.imp.memset",
            "mov r3, r8",
            "mov r0, sl",
            "mov r1, 7",
            "add r2, r6, 0x18",
            "bl fcn.0003df48",
            "ldr r3, [sp, 0x1d0]",
            "add r5, r6, 0x10",
            "cmp r3, 0",
            "ldreq r3, [sp, 0x1cc]",
            "streq r3, [sp, 0x1d0]",
            "ldr r3, [sp, 0x1cc]",
            "cmp r3, 0",
            "ldreq r3, [sp, 0x1d0]",
            "streq r3, [sp, 0x1cc]",
            "ldr r3, [r7]",
            "cmp r3, 0",
            "beq 0x39300",
            "ldr r2, [r5, 4]",
            "cmp r3, r2",
            "bne 0x39780",
            "ldr r3, [r7, 0x24]",
            "ldrb r0, [r5, 3]",
            "eor r0, r0, r3",
            "ldr r3, [r7, 0x28]",
            "ands r0, r0, r3",
            "bne 0x39780",
            "ldr r3, [r7, 0x2c]",
            "ldrb r2, [r5, 2]",
            "eor r2, r2, r3",
            "ldr r3, [r7, 0x30]",
            "tst r2, r3",
            "bne 0x3978c",
            "ldr r3, [r7, 0x38]",
            "cmp r3, 0",
            "beq 0x39370",
            "ldr r1, [sp, 0x1d4]",
            "cmp r1, 0",
            "addne r1, r1, 4",
            "bne 0x3935c",
            "add r1, sp, 0x188",
            "ldr r0, [r5, 4]",
            "bl fcn.0003e2a4",
            "mov r1, r0",
            "ldr r0, [r7, 0x38]",
            "mov r2, 0",
            "bl sym.imp.fnmatch",
            "cmp r0, 0",
            "bne 0x39780",
            "ldrb r3, [r7, 0x10]",
            "cmp r3, 0",
            "beq 0x393d0",
            "ldr sl, [sp, 0x1d0]",
            "cmp sl, 0",
            "beq 0x393d0",
            "add r8, sp, 0x108",
            "mov r1, 0",
            "mov r2, 0x14",
            "mov r0, r8",
            "bl sym.imp.memset",
            "ldrb r3, [r6, 0x10]",
            "mov r1, sl",
            "add r0, r8, 4",
            "strb r3, [sp, 0x108]",
            "ldrh r2, [r1], 4",
            "sub r2, r2, 4",
            "bl sym.imp.memcpy",
            "mov r0, r8",
            "ldr r1, [0x0003979c]",
            "ldrsh r2, [r7, 0x12]",
            "bl fcn.0003f49c",
            "cmp r0, 0",
            "bne 0x39780",
            "ldr r3, [r7, 0x40]",
            "cmp r3, 0",
            "beq 0x39474",
            "ldr r2, [r7, 0x44]",
            "ldr r3, [r6]",
            "add r2, r2, 3",
            "bic r2, r2, 3",
            "add r2, r2, r3",
            "ldr r3, [r7, 0x48]",
            "cmp r2, r3",
            "bls 0x39408",
            "bl fcn.00039200",
            "cmp r0, 0",
            "bne 0x39788",
            "ldr r4, [r7, 0x44]",
            "mov r1, r6",
            "ldr r3, [r7, 0x40]",
            "ldr r2, [r6]",
            "add r4, r4, 3",
            "bic r4, r4, 3",
            "add r4, r3, r4",
            "mov r0, r4",
            "bl sym.imp.memcpy",
            "ldr r2, [r7, 0x4c]",
            "mov r3, 0x15",
            "strh r3, [r4, 4]",
            "mov r3, 1",
            "strh r3, [r4, 6]",
            "ldr r3, [r2, 0x1c]",
            "add r3, r3, 1",
            "str r3, [r2, 0x1c]",
            "str r3, [r4, 8]",
            "ldr r3, [r6]",
            "add r4, r4, r3",
            "ldr r3, [r7, 0x40]",
            "rsb r4, r3, r4",
            "ldr r3, [r7, 0x3c]",
            "str r4, [r7, 0x44]",
            "add r3, r3, 1",
            "str r3, [r7, 0x3c]",
            "b 0x39780",
            "ldrh r3, [r6, 4]",
            "cmp r3, 0x15",
            "bne 0x3948c",
            "ldr r0, str.Deleted",
            "mov r1, r4",
            "bl sym.imp.fputs",
            "ldr r3, [r7, 8]",
            "cmp r3, 0",
            "beq 0x394b8",
            "ldr r7, [r5, 4]",
            "mov r0, r7",
            "bl fcn.0003e2ec",
            "ldr r1, str._u:__s",
            "mov r3, r0",
            "mov r2, r7",
            "mov r0, r4",
            "bl sym.imp.fprintf",
            "ldrb r2, [r6, 0x10]",
            "cmp r2, 2",
            "ldreq r0, str.____inet",
            "beq 0x394d4",
            "cmp r2, 0xa",
            "bne 0x394e0",
            "ldr r0, str.____inet6",
            "mov r1, r4",
            "bl sym.imp.fputs",
            "b 0x394ec",
            "mov r0, r4",
            "ldr r1, str.____family__d",
            "bl sym.imp.fprintf",
            "ldr r2, [sp, 0x1d0]",
            "cmp r2, 0",
            "beq 0x39590",
            "ldrh r1, [r2], 4",
            "add sb, sp, 8",
            "ldrb r0, [r6, 0x10]",
            "mov r3, sb",
            "mov r7, 0x100",
            "sub r1, r1, 4",
            "str r7, [sp]",
            "bl fcn.0003f514",
            "mov r1, r4",
            "bl sym.imp.fputs",
            "ldr r8, [sp, 0x1cc]",
            "cmp r8, 0",
            "beq 0x3954c",
            "ldr r1, [sp, 0x1d0]",
            "add sl, r8, 4",
            "mov r0, sl",
            "mov r2, 4",
            "add r1, r1, 4",
            "bl sym.imp.memcmp",
            "cmp r0, 0",
            "bne 0x39560",
            "mov r0, r4",
            "ldr r1, [0x000397b4]",
            "ldrb r2, [r5, 1]",
            "bl sym.imp.fprintf",
            "b 0x39590",
            "ldrh r1, [r8]",
            "mov r2, sl",
            "ldrb r0, [r6, 0x10]",
            "mov r3, sb",
            "str r7, [sp]",
            "sub r1, r1, 4",
            "bl fcn.0003f514",
            "ldr r1, str._peer__s__d",
            "mov r2, r0",
            "ldrb r3, [r5, 1]",
            "mov r0, r4",
            "bl sym.imp.fprintf",
            "ldr r2, [sp, 0x1d8]",
            "cmp r2, 0",
            "beq 0x395c8",
            "ldrh r1, [r2], 4",
            "mov r3, 0x100",
            "ldrb r0, [r6, 0x10]",
            "str r3, [sp]",
            "add r3, sp, 8",
            "sub r1, r1, 4",
            "bl fcn.0003f514",
            "ldr r1, str.brd__s",
            "mov r2, r0",
            "mov r0, r4",
            "bl sym.imp.fprintf",
            "ldr r2, [sp, 0x1dc]",
            "cmp r2, 0",
            "beq 0x39600",
            "ldrh r1, [r2], 4",
            "mov r3, 0x100",
            "ldrb r0, [r6, 0x10]",
            "str r3, [sp]",
            "add r3, sp, 8",
            "sub r1, r1, 4",
            "bl fcn.0003f514",
            "ldr r1, str.any__s",
            "mov r2, r0",
            "mov r0, r4",
            "bl sym.imp.fprintf",
            "add r1, sp, 0x188",
            "mov r2, 0x40",
            "ldrb r0, [r5, 3]",
            "bl fcn.0003e834",
            "ldr r1, str.scope__s",
            "mov r2, r0",
            "mov r0, r4",
            "bl sym.imp.fprintf",
            "ldrb r3, [r5, 2]",
            "tst r3, 1",
            "beq 0x39640",
            "bic r3, r3, 1",
            "ldr r0, str.secondary",
            "strb r3, [r5, 2]",
            "mov r1, r4",
            "bl sym.imp.fputs",
            "ldrb r3, [r5, 2]",
            "tst r3, 0x40",
            "beq 0x39660",
            "bic r3, r3, 0x40",
            "ldr r0, str.tentative",
            "strb r3, [r5, 2]",
            "mov r1, r4",
            "bl sym.imp.fputs",
            "ldrb r3, [r5, 2]",
            "tst r3, 0x20",
            "beq 0x39680",
            "bic r3, r3, 0x20",
            "ldr r0, str.deprecated",
            "strb r3, [r5, 2]",
            "mov r1, r4",
            "bl sym.imp.fputs",
            "ldrb r3, [r5, 2]",
            "tst r3, 0x80",
            "andne r3, r3, 0x7f",
            "strbne r3, [r5, 2]",
            "bne 0x396a0",
            "ldr r0, str.dynamic",
            "mov r1, r4",
            "bl sym.imp.fputs",
            "ldrb r2, [r5, 2]",
            "cmp r2, 0",
            "beq 0x396b8",
            "mov r0, r4",
            "ldr r1, str.flags__02x",
            "bl sym.imp.fprintf",
            "ldr r0, [sp, 0x1d4]",
            "cmp r0, 0",
            "beq 0x396d0",
            "add r0, r0, 4",
            "mov r1, r4",
            "bl sym.imp.fputs",
            "ldr r5, [sp, 0x1e0]",
            "cmp r5, 0",
            "beq 0x3976c",
            "ldr r3, [0x000397dc]",
            "add r6, r5, 4",
            "mov r1, r4",
            "ldrb r0, [r3]",
            "bl sym.imp.fputc",
            "ldr r2, [r6, 4]",
            "add r6, sp, 0x108",
            "cmn r2, 1",
            "bne 0x39710",
            "mov r0, r6",
            "ldr r1, str.valid_lft_forever",
            "bl sym.imp.strcpy",
            "b 0x3971c",
            "mov r0, r6",
            "ldr r1, str.valid_lft__dsec",
            "bl sym.imp.sprintf",
            "ldr r5, [r5, 4]",
            "add r6, sp, 0x108",
            "cmn r5, 1",
            "bne 0x39744",
            "mov r0, r6",
            "bl sym.imp.strlen",
            "ldr r1, str._preferred_lft_forever",
            "add r0, r6, r0",
            "bl sym.imp.strcpy",
            "b 0x3975c",
            "mov r0, r6",
            "bl sym.imp.strlen",
            "ldr r1, str._preferred_lft__dsec",
            "add r0, r6, r0",
            "mov r2, r5",
            "bl sym.imp.sprintf",
            "mov r0, r4",
            "ldr r1, str.________s",
            "add r2, sp, 0x108",
            "bl sym.imp.fprintf",
            "mov r0, 0xa",
            "mov r1, r4",
            "bl sym.imp.fputc",
            "mov r0, r4",
            "bl sym.imp.fflush",
            "mov r0, 0",
            "b 0x3978c",
            "mvn r0, 0",
            "add sp, sp, 0x1e8",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "fcn.0003e2ec": {
        "function_address": "0x0003e2ec",
        "instructions": [
            "ldr r1, [pc]",
            "b fcn.0003e2a4"
        ]
    },
    "fcn.0003f514": {
        "function_address": "0x0003f514",
        "instructions": [
            "cmp r0, 2",
            "mov r1, r2",
            "mov r2, r3",
            "ldr r3, [sp]",
            "beq 0x3f530",
            "cmp r0, 0xa",
            "bne 0x3f534",
            "b sym.imp.inet_ntop",
            "ldr r0, [pc]",
            "bx lr"
        ]
    },
    "fcn.0003f020": {
        "function_address": "0x0003f020",
        "instructions": [
            "push {r0, r1, r2, r4, r5, lr}",
            "subs r4, r1, 0",
            "mov r5, r0",
            "beq 0x3f070",
            "ldrb r3, [r4]",
            "cmp r3, 0",
            "beq 0x3f070",
            "mov r0, r4",
            "add r1, sp, 4",
            "bl sym.imp.strtol",
            "ldr r3, [sp, 4]",
            "cmp r3, 0",
            "beq 0x3f070",
            "cmp r3, r4",
            "beq 0x3f070",
            "ldrb r3, [r3]",
            "cmp r3, 0",
            "streq r0, [r5]",
            "moveq r0, r3",
            "beq 0x3f074",
            "mvn r0, 0",
            "pop {r1, r2, r3, r4, r5, pc}"
        ]
    },
    "fcn.0003a338": {
        "function_address": "0x0003a338",
        "instructions": [
            "mov r1, r0",
            "push {r3, lr}",
            "ldr r0, [pc]",
            "bl fcn.000271d8"
        ]
    },
    "fcn.0003e070": {
        "function_address": "0x0003e070",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r7, r0",
            "sub sp, sp, 0x18",
            "mov r8, r1",
            "mov r0, r2",
            "mov r1, 0x2e",
            "mov r4, r2",
            "bl sym.imp.strchr",
            "subs r5, r0, 0",
            "moveq sl, r5",
            "addeq sb, sp, 0x14",
            "beq 0x3e138",
            "mov r0, sp",
            "mov r1, r4",
            "mov r2, 2",
            "mov r5, sp",
            "bl fcn.0003f128",
            "cmp r0, 0",
            "bne 0x3e114",
            "cmp r8, 3",
            "ble 0x3e148",
            "mov r0, r7",
            "add r1, sp, 4",
            "mov r2, 4",
            "bl sym.imp.memcpy",
            "mov r0, 4",
            "b 0x3e14c",
            "mov r1, 0x3a",
            "mov r0, r4",
            "bl sym.imp.strchr",
            "subs r6, r0, 0",
            "ldr r1, aav.0x0005ba28",
            "strbne sl, [r6], 1",
            "mov r0, r4",
            "mov r2, sb",
            "bl sym.imp.sscanf",
            "cmp r0, 1",
            "bne 0x3e114",
            "ldr r3, [sp, 0x14]",
            "cmp r3, 0xff",
            "bls 0x3e124",
            "ldr r0, str.__s__is_invalid_lladdr",
            "mov r1, r4",
            "bl fcn.00027184",
            "b 0x3e148",
            "cmp r6, 0",
            "strb r3, [r7, r5]",
            "beq 0x3e140",
            "add r5, r5, 1",
            "mov r4, r6",
            "cmp r5, r8",
            "blt 0x3e0dc",
            "add r0, r5, 1",
            "b 0x3e14c",
            "mvn r0, 0",
            "add sp, sp, 0x18",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "fcn.0003a34c": {
        "function_address": "0x0003a34c",
        "instructions": [
            "mov r0, 2",
            "push {r4, lr}",
            "mov r1, r0",
            "mov r2, 0",
            "bl sym.imp.socket",
            "cmp r0, 0",
            "popge {r4, pc}",
            "mov r0, 0x11",
            "mov r1, 2",
            "mov r2, 0",
            "bl sym.imp.socket",
            "cmp r0, 0",
            "popge {r4, pc}",
            "mov r0, 0xa",
            "mov r1, 2",
            "mov r2, 0",
            "pop {r4, lr}",
            "b fcn.0002a3cc"
        ]
    },
    "fcn.0003a394": {
        "function_address": "0x0003a394",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0xea0",
            "ldr r5, [0x0003a208]",
            "sub sp, sp, 4",
            "mov sl, r2",
            "mov r7, r0",
            "ldr r3, [0x0003a20c]",
            "mov r6, r1",
            "mov r0, r5",
            "mov r1, 0",
            "mov r2, 0x50",
            "str r1, [sp, 0xe9c]",
            "ldr r8, [r3]",
            "mov r4, r5",
            "str r1, [sp, 0xe98]",
            "bl sym.imp.memset",
            "mov r3, 1",
            "cmp sl, 0",
            "str r3, [r5, 0xc]",
            "ldr r3, [0x0003a210]",
            "str r8, [r5, 8]",
            "ldr r3, [r3]",
            "str r3, [r5, 4]",
            "beq 0x398ec",
            "cmp r7, 0",
            "bgt 0x398d8",
            "ldr r0, str._s_requires_an_argument",
            "ldr r1, [0x0003a218]",
            "bl fcn.000271d8",
            "ldr r3, [r5, 4]",
            "cmp r3, 0x11",
            "movne r8, 0",
            "bne 0x39a20",
            "b 0x398f4",
            "mov r8, sl",
            "b 0x39a20",
            "ldr r0, str.cannot_flush_link_addresses",
            "bl fcn.000271d8",
            "ldr r0, [0x0003a220]",
            "ldr r1, [r6]",
            "bl fcn.000267ac",
            "sub r3, r7, 1",
            "cmp r0, 4",
            "ldrls pc, [pc, r0, lsl 2]",
            "b 0x399fc",
            "cmp r3, 0",
            "mov r7, r3",
            "beq 0x399f8",
            "ldr r0, [0x0003a224]",
            "ldr r1, [r6, 4]!",
            "ldr r2, [r4, 4]",
            "bl fcn.0003f3c4",
            "cmp r3, 0",
            "str sb, [sp, 0xe94]",
            "mov r7, r3",
            "beq 0x399f8",
            "mvn r1, 0",
            "add r0, sp, 0xe90",
            "str r1, [r4, 0x28]",
            "add r0, r0, 4",
            "ldr r1, [r6, 4]!",
            "bl fcn.0003e8a4",
            "cmp r0, 0",
            "beq 0x399bc",
            "ldr fp, [r6]",
            "ldr r1, [0x0003a228]",
            "mov r0, fp",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x399b0",
            "mov r0, fp",
            "ldr r1, [0x0003a22c]",
            "bl fcn.0003f448",
            "mov r3, 0xff",
            "str sb, [r4, 0x28]",
            "str r3, [sp, 0xe94]",
            "ldr r3, [sp, 0xe94]",
            "str r3, [r4, 0x24]",
            "b 0x39a14",
            "mov r1, 1",
            "str r1, [r4, 0x34]",
            "b 0x39a14",
            "cmp r3, 0",
            "mov r7, r3",
            "beq 0x399f8",
            "ldr r3, [r6, 4]!",
            "str r3, [r4, 0x38]",
            "b 0x39a14",
            "subs r7, r3, 0",
            "addne r6, r6, 4",
            "bne 0x399fc",
            "bl fcn.0003f438",
            "cmp r8, 0",
            "beq 0x39a10",
            "ldr r0, aav.0x0005f6dc",
            "ldr r1, [r6]",
            "bl fcn.0003f480",
            "ldr r8, [r6]",
            "add r6, r6, 4",
            "sub r7, r7, 1",
            "b 0x39a24",
            "mov sb, 0",
            "cmp r7, 0",
            "bgt 0x398fc",
            "add r6, sp, 0xe50",
            "add r6, r6, 0xc",
            "mov r0, r6",
            "bl fcn.0003d964",
            "ldr r3, [0x0003a3a8]",
            "mov r2, 0x11",
            "str r2, [r3]",
            "mov r2, 0",
            "b 0x39864"
        ]
    },
    "fcn.0003a8a8": {
        "function_address": "0x0003a8a8",
        "instructions": [
            "push {r4, lr}",
            "ldr r4, [0x0003a8e4]",
            "ldr r0, [r4, 0x14]",
            "ldr r1, [r4, 8]",
            "ldr r2, [r4, 0xc]",
            "bl fcn.0003daa4",
            "cmp r0, 0",
            "bge 0x3a8d8",
            "ldr r0, str.failed_to_send_flush_request",
            "bl fcn.000288b8",
            "mvn r0, 0",
            "pop {r4, pc}",
            "mov r0, 0",
            "str r0, [r4, 0xc]",
            "pop {r4, pc}"
        ]
    },
    "fcn.0003ed70": {
        "function_address": "0x0003ed70",
        "instructions": [
            "push {r4, lr}",
            "mov r3, r0",
            "mov r4, r1",
            "cmp r0, 0xb",
            "ldrls pc, [pc, r0, lsl 2]",
            "b 0x3ee10",
            "ldr r4, str.none",
            "b 0x3ee28",
            "ldr r4, [0x0003ee34]",
            "b 0x3ee28",
            "ldr r4, [0x0003ee38]",
            "b 0x3ee28",
            "ldr r4, [0x0003ee3c]",
            "b 0x3ee28",
            "ldr r4, [0x0003ee40]",
            "b 0x3ee28",
            "ldr r4, str.blackhole",
            "b 0x3ee28",
            "ldr r4, str.unreachable",
            "b 0x3ee28",
            "ldr r4, str.prohibit",
            "b 0x3ee28",
            "ldr r4, str.throw",
            "b 0x3ee28",
            "ldr r4, [0x0003ee54]",
            "b 0x3ee28",
            "ldr r4, str.xresolve",
            "b 0x3ee28",
            "mov r0, r1",
            "mov r1, r2",
            "ldr r2, aav.0x0005c33c",
            "bl sym.imp.snprintf",
            "b 0x3ee28",
            "ldr r4, str.unicast",
            "mov r0, r4",
            "pop {r4, pc}"
        ]
    },
    "fcn.0003a87c": {
        "function_address": "0x0003a87c",
        "instructions": [
            "push {r4, lr}",
            "mov r1, 0",
            "ldr r4, [0x0003a8a4]",
            "mov r2, 0xc8",
            "mov r0, r4",
            "bl sym.imp.memset",
            "mvn r3, 0",
            "strh r3, [r4, 0x8e]",
            "strh r3, [r4, 0xb6]",
            "pop {r4, pc}"
        ]
    },
    "fcn.0003de18": {
        "function_address": "0x0003de18",
        "instructions": [
            "push {r0, r1, r4, lr}",
            "mov r4, r0",
            "str r3, [sp, 4]",
            "ldr r3, [r0]",
            "add r3, r3, 3",
            "bic r3, r3, 3",
            "add r0, r3, 8",
            "cmp r0, r1",
            "mvnhi r0, 0",
            "bhi 0x3de78",
            "add r0, r4, r3",
            "add r1, sp, 4",
            "strh r2, [r0, 2]",
            "mov r2, 8",
            "strh r2, [r4, r3]",
            "add r0, r0, 4",
            "mov r2, 4",
            "bl sym.imp.memcpy",
            "ldr r3, [r4]",
            "mov r0, 0",
            "add r3, r3, 3",
            "bic r3, r3, 3",
            "add r3, r3, 8",
            "str r3, [r4]",
            "pop {r2, r3, r4, pc}"
        ]
    },
    "fcn.0003a8ec": {
        "function_address": "0x0003a8ec",
        "instructions": [
            "ldrh r3, [r1, 4]",
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r7, r1",
            "mov r5, r2",
            "ldr r2, [r1]",
            "sub r1, r3, 0x18",
            "sub sp, sp, 0x1c0",
            "uxth r1, r1",
            "cmp r1, 1",
            "bls 0x3a930",
            "ldrh r1, [r7, 6]",
            "str r1, [sp]",
            "ldr r1, obj.stderr",
            "ldr r0, [r1]",
            "ldr r1, str.Not_a_route:__08x__08x__08x_n",
            "bl sym.imp.fprintf",
            "b 0x3afc4",
            "ldr r4, [0x0003afd8]",
            "ldr r1, [r4, 8]",
            "cmp r1, 0",
            "beq 0x3a948",
            "cmp r3, 0x18",
            "bne 0x3afc4",
            "subs sb, r2, 0x1c",
            "bpl 0x3a95c",
            "ldr r0, str.wrong_nlmsg_len__d",
            "mov r1, sb",
            "bl fcn.000271d8",
            "ldrb r3, [r7, 0x10]",
            "add r6, r7, 0x10",
            "cmp r3, 0xa",
            "beq 0x3a988",
            "ldr r2, [r4]",
            "cmp r3, 2",
            "moveq r8, 0x20",
            "mvnne r8, 0",
            "cmp r2, 0",
            "bgt 0x3a9e0",
            "b 0x3a9f4",
            "ldr r2, [r4]",
            "cmp r2, 0",
            "beq 0x3a9f0",
            "ldr r1, [r6, 8]",
            "bge 0x3a9a8",
            "tst r1, 0x200",
            "beq 0x3afc4",
            "b 0x3a9f0",
            "tst r1, 0x200",
            "bne 0x3afc4",
            "cmp r2, 0xff",
            "bne 0x3a9c8",
            "ldrb r2, [r6, 7]",
            "cmp r2, 2",
            "bne 0x3afc4",
            "b 0x3a9f0",
            "cmp r2, 0xfe",
            "bne 0x3afc4",
            "ldrb r2, [r6, 7]",
            "cmp r2, 2",
            "beq 0x3afc4",
            "b 0x3a9f0",
            "ldrb r1, [r6, 4]",
            "cmp r2, r1",
            "bne 0x3afc4",
            "b 0x3a9f4",
            "mov r8, 0x80",
            "ldrb r2, [r4, 0x78]",
            "cmp r2, 0",
            "beq 0x3aa18",
            "cmp r3, r2",
            "bne 0x3afc4",
            "ldrsh r1, [r4, 0x7a]",
            "ldrb r2, [r6, 1]",
            "cmp r1, r2",
            "bgt 0x3afc4",
            "ldrb r2, [r4, 0x8c]",
            "cmp r2, 0",
            "beq 0x3aa44",
            "cmp r3, r2",
            "bne 0x3afc4",
            "ldrsh r2, [r4, 0x8e]",
            "cmp r2, 0",
            "blt 0x3aa44",
            "ldrb r1, [r6, 1]",
            "cmp r2, r1",
            "blt 0x3afc4",
            "ldrb r2, [r4, 0xa0]",
            "cmp r2, 0",
            "beq 0x3aa68",
            "cmp r3, r2",
            "bne 0x3afc4",
            "ldrsh r1, [r4, 0xa2]",
            "ldrb r2, [r6, 2]",
            "cmp r1, r2",
            "bgt 0x3afc4",
            "ldrb r2, [r4, 0xb4]",
            "cmp r2, 0",
            "beq 0x3aa94",
            "cmp r3, r2",
            "bne 0x3afc4",
            "ldrsh r3, [r4, 0xb6]",
            "cmp r3, 0",
            "blt 0x3aa94",
            "ldrb r2, [r6, 2]",
            "cmp r3, r2",
            "blt 0x3afc4",
            "add sl, sp, 0x10c",
            "mov r1, 0",
            "mov r2, 0x44",
            "mov r0, sl",
            "bl sym.imp.memset",
            "mov r3, sb",
            "mov r0, sl",
            "mov r1, 0x10",
            "add r2, r6, 0xc",
            "bl fcn.0003df48",
            "ldrb r3, [r4, 0x78]",
            "cmp r3, 0",
            "beq 0x3aae0",
            "add r0, sp, 0x1a4",
            "ldr r1, [0x0003afe0]",
            "ldrsh r2, [r4, 0x7a]",
            "bl fcn.0003f49c",
            "cmp r0, 0",
            "bne 0x3afc4",
            "ldrb r3, [r4, 0x8c]",
            "cmp r3, 0",
            "beq 0x3ab10",
            "ldrsh r3, [r4, 0x8e]",
            "cmp r3, 0",
            "blt 0x3ab10",
            "add r0, sp, 0x1a4",
            "ldr r1, [0x0003afe4]",
            "ldrb r2, [r6, 1]",
            "bl fcn.0003f49c",
            "cmp r0, 0",
            "bne 0x3afc4",
            "ldrb r3, [r4, 0xa0]",
            "cmp r3, 0",
            "beq 0x3ab34",
            "add r0, sp, 0x190",
            "ldr r1, [0x0003afe8]",
            "ldrsh r2, [r4, 0xa2]",
            "bl fcn.0003f49c",
            "cmp r0, 0",
            "bne 0x3afc4",
            "ldrb r3, [r4, 0xb4]",
            "cmp r3, 0",
            "beq 0x3ab64",
            "ldrsh r3, [r4, 0xb6]",
            "cmp r3, 0",
            "blt 0x3ab64",
            "add r0, sp, 0x190",
            "ldr r1, [0x0003afec]",
            "ldrb r2, [r6, 2]",
            "bl fcn.0003f49c",
            "cmp r0, 0",
            "bne 0x3afc4",
            "ldr r3, [r4, 8]",
            "cmp r3, 0",
            "beq 0x3ac40",
            "ldrh r3, [r7, 0x10]",
            "cmp r3, 0xa",
            "bne 0x3aba0",
            "ldrb r3, [r6, 7]",
            "cmp r3, 7",
            "bne 0x3aba0",
            "ldr r3, [sp, 0x124]",
            "cmp r3, 0",
            "beq 0x3aba0",
            "ldr r3, [r3, 4]",
            "cmn r3, 1",
            "beq 0x3afc4",
            "ldr r2, [r4, 0xc]",
            "ldr r3, [r7]",
            "add r2, r2, 3",
            "bic r2, r2, 3",
            "add r2, r2, r3",
            "ldr r3, [r4, 0x10]",
            "cmp r2, r3",
            "bls 0x3abd4",
            "bl fcn.0003a8a8",
            "cmp r0, 0",
            "beq 0x3abd4",
            "ldr r0, [0x0003aff0]",
            "bl fcn.000271d8",
            "ldr r5, [r4, 0xc]",
            "mov r1, r7",
            "ldr r3, [r4, 8]",
            "ldr r2, [r7]",
            "add r5, r5, 3",
            "bic r5, r5, 3",
            "add r5, r3, r5",
            "mov r0, r5",
            "bl sym.imp.memcpy",
            "ldr r2, [r4, 0x14]",
            "mov r3, 0x19",
            "strh r3, [r5, 4]",
            "mov r3, 1",
            "strh r3, [r5, 6]",
            "ldr r3, [r2, 0x1c]",
            "add r3, r3, 1",
            "str r3, [r2, 0x1c]",
            "str r3, [r5, 8]",
            "ldr r3, [r7]",
            "add r5, r5, r3",
            "ldr r3, [r4, 8]",
            "rsb r5, r3, r5",
            "ldr r3, [r4, 4]",
            "str r5, [r4, 0xc]",
            "add r3, r3, 1",
            "str r3, [r4, 4]",
            "b 0x3afc4",
            "ldrh r3, [r7, 4]",
            "cmp r3, 0x19",
            "bne 0x3ac58",
            "ldr r0, str.Deleted",
            "mov r1, r5",
            "bl sym.imp.fputs",
            "ldrb r0, [r6, 7]",
            "cmp r0, 1",
            "beq 0x3ac8c",
            "ldr r3, [r4, 0x28]",
            "cmp r3, 0",
            "bne 0x3ac8c",
            "add r1, sp, 0x150",
            "mov r2, 0x40",
            "bl fcn.0003ed70",
            "ldr r1, [0x0003aff8]",
            "mov r2, r0",
            "mov r0, r5",
            "bl sym.imp.fprintf",
            "ldr r3, [sp, 0x110]",
            "ldrb r2, [r6, 1]",
            "cmp r3, 0",
            "beq 0x3acfc",
            "cmp r2, r8",
            "mov r2, r3",
            "ldrb r0, [r7, 0x10]",
            "add r3, sp, 0xc",
            "ldrh r1, [r2], 4",
            "beq 0x3acdc",
            "mov ip, 0x100",
            "sub r1, r1, 4",
            "str ip, [sp]",
            "bl fcn.0003f514",
            "ldr r1, aav.0x0005f0f4",
            "mov r2, r0",
            "ldrb r3, [r6, 1]",
            "mov r0, r5",
            "bl sym.imp.fprintf",
            "b 0x3ad20",
            "mov ip, 0x100",
            "sub r1, r1, 4",
            "str ip, [sp]",
            "bl fcn.0003f540",
            "ldr r1, [0x0003aff8]",
            "mov r2, r0",
            "mov r0, r5",
            "b 0x3ad0c",
            "cmp r2, 0",
            "beq 0x3ad14",
            "ldr r1, aav.0x0005f35c",
            "mov r0, r5",
            "bl sym.imp.fprintf",
            "b 0x3ad20",
            "ldr r0, [0x0003b004]",
            "mov r1, r5",
            "bl sym.imp.fputs",
            "ldr r1, [sp, 0x114]",
            "ldrb r2, [r6, 2]",
            "cmp r1, 0",
            "beq 0x3ad90",
            "cmp r2, r8",
            "mov r2, r1",
            "ldrb r0, [r7, 0x10]",
            "add r3, sp, 0xc",
            "ldrh r1, [r2], 4",
            "beq 0x3ad70",
            "mov ip, 0x100",
            "sub r1, r1, 4",
            "str ip, [sp]",
            "bl fcn.0003f514",
            "ldr r1, str.from__s__u",
            "mov r2, r0",
            "ldrb r3, [r6, 2]",
            "mov r0, r5",
            "bl sym.imp.fprintf",
            "b 0x3ada4",
            "mov ip, 0x100",
            "sub r1, r1, 4",
            "str ip, [sp]",
            "bl fcn.0003f540",
            "ldr r1, str.from__s",
            "mov r2, r0",
            "mov r0, r5",
            "b 0x3ada0",
            "cmp r2, 0",
            "beq 0x3ada4",
            "ldr r1, str.from_0__u",
            "mov r0, r5",
            "bl sym.imp.fprintf",
            "ldr r2, [sp, 0x120]",
            "cmp r2, 0",
            "beq 0x3ade8",
            "ldrsh r3, [r4, 0x66]",
            "cmp r3, r8",
            "beq 0x3ade8",
            "ldrh r1, [r2], 4",
            "mov r3, 0x100",
            "ldrb r0, [r7, 0x10]",
            "str r3, [sp]",
            "add r3, sp, 0xc",
            "sub r1, r1, 4",
            "bl fcn.0003f540",
            "ldr r1, str.via__s",
            "mov r2, r0",
            "mov r0, r5",
            "bl sym.imp.fprintf",
            "ldr r3, [sp, 0x11c]",
            "cmp r3, 0",
            "beq 0x3ae18",
            "ldr r2, [r4, 0x44]",
            "cmn r2, 1",
            "beq 0x3ae18",
            "ldr r0, [r3, 4]",
            "bl fcn.0003e2ec",
            "ldr r1, [0x0003b018]",
            "mov r2, r0",
            "mov r0, r5",
            "bl sym.imp.fprintf",
            "ldr r2, [sp, 0x128]",
            "cmp r2, 0",
            "beq 0x3ae5c",
            "ldrsh r3, [r4, 0x52]",
            "cmp r3, r8",
            "beq 0x3ae5c",
            "ldrh r1, [r2], 4",
            "mov r3, 0x100",
            "ldrb r0, [r7, 0x10]",
            "str r3, [sp]",
            "add r3, sp, 0xc",
            "sub r1, r1, 4",
            "bl fcn.0003f514",
            "ldr r1, str._src__s",
            "mov r2, r0",
            "mov r0, r5",
            "bl sym.imp.fprintf",
            "ldr r3, [sp, 0x124]",
            "cmp r3, 0",
            "beq 0x3ae78",
            "mov r0, r5",
            "ldr r1, str._metric__d",
            "ldr r2, [r3, 4]",
            "bl sym.imp.fprintf",
            "ldrb r3, [r7, 0x10]",
            "cmp r3, 0xa",
            "bne 0x3af80",
            "ldr r7, [sp, 0x13c]",
            "ldr r3, [r6, 8]",
            "cmp r7, 0",
            "addne r7, r7, 4",
            "tst r3, 0x200",
            "bne 0x3aeb4",
            "cmp r7, 0",
            "beq 0x3af80",
            "ldr r3, [r7, 8]",
            "cmp r3, 0",
            "bne 0x3aec8",
            "b 0x3af68",
            "ldr r3, [0x0003b024]",
            "mov r0, r5",
            "ldr r1, str._c____cache",
            "ldrb r2, [r3]",
            "bl sym.imp.fprintf",
            "ldr r8, [r7, 8]",
            "cmp r8, 0",
            "beq 0x3af68",
            "ldr r6, [0x0003b02c]",
            "ldr r1, [r6]",
            "cmp r1, 0",
            "bne 0x3af50",
            "ldr r0, str._proc_net_psched",
            "ldr r1, [0x0003b034]",
            "bl sym.imp.fopen64",
            "subs sl, r0, 0",
            "beq 0x3af2c",
            "ldr r1, str._08x_08x_08x_08x",
            "add r2, sp, 0x1bc",
            "add r3, sp, 0x1b8",
            "bl sym.imp.fscanf",
            "cmp r0, 2",
            "bne 0x3af24",
            "ldr r3, [0x0003b03c]",
            "ldr r2, [sp, 0x1bc]",
            "cmp r2, r3",
            "ldreq r3, [sp, 0x1b8]",
            "streq r3, [r6]",
            "mov r0, sl",
            "bl sym.imp.fclose",
            "ldr r6, [0x0003b02c]",
            "ldr r3, [r6]",
            "cmp r3, 0",
            "bne 0x3af48",
            "mov r0, 2",
            "bl sym.imp.sysconf",
            "str r0, [r6]",
            "ldr r3, [0x0003b02c]",
            "ldr r1, [r3]",
            "mov r0, r8",
            "bl fcn.00055000",
            "ldr r1, str._expires__dsec",
            "mov r2, r0",
            "mov r0, r5",
            "bl sym.imp.fprintf",
            "ldr r2, [r7, 0xc]",
            "cmp r2, 0",
            "beq 0x3af80",
            "mov r0, r5",
            "ldr r1, [0x0003b044]",
            "bl sym.imp.fprintf",
            "ldr r3, [sp, 0x118]",
            "cmp r3, 0",
            "beq 0x3afb0",
            "ldr r2, [r4, 0x3c]",
            "cmn r2, 1",
            "beq 0x3afb0",
            "ldr r0, [r3, 4]",
            "bl fcn.0003e2ec",
            "ldr r1, str._iif__s",
            "mov r2, r0",
            "mov r0, r5",
            "bl sym.imp.fprintf",
            "mov r0, 0xa",
            "mov r1, r5",
            "bl sym.imp.fputc",
            "mov r0, r5",
            "bl sym.imp.fflush",
            "mov r0, 0",
            "add sp, sp, 0x1c0",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "fcn.0003f540": {
        "function_address": "0x0003f540",
        "instructions": [
            "b fcn.0003f514"
        ]
    },
    "sym.imp.sysconf": {
        "function_address": "0x0000b6b4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xc54]!"
        ]
    },
    "fcn.0003e754": {
        "function_address": "0x0003e754",
        "instructions": [
            "ldr r3, [0x0003e824]",
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r4, r0",
            "mov r7, r1",
            "ldr r0, [r3]",
            "cmp r0, 0",
            "beq 0x3e78c",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x3e78c",
            "ldr r3, [0x0003e828]",
            "ldr r3, [r3]",
            "str r3, [r4]",
            "pop {r4, r5, r6, r7, r8, pc}",
            "ldr r8, [0x0003e82c]",
            "mov r5, 0",
            "bl fcn.0003e580",
            "ldr r3, [r8]",
            "ldr r6, [r3, r5, lsl 2]",
            "cmp r6, 0",
            "beq 0x3e7d4",
            "mov r0, r6",
            "mov r1, r7",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x3e7d4",
            "ldr r3, [0x0003e824]",
            "str r6, [r3]",
            "ldr r3, [0x0003e828]",
            "str r5, [r3]",
            "str r5, [r4]",
            "pop {r4, r5, r6, r7, r8, pc}",
            "add r5, r5, 1",
            "cmp r5, 0x100",
            "bne 0x3e798",
            "mov r1, 0",
            "mov r0, r7",
            "mov r2, r1",
            "bl fcn.000266e4",
            "ldr r3, [0x0003e828]",
            "str r0, [r3]",
            "ldr r3, [0x0003e830]",
            "ldr r3, [r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "mvnne r0, 0",
            "popne {r4, r5, r6, r7, r8, pc}",
            "cmp r0, 0xff",
            "strls r0, [r4]",
            "mvnhi r0, 0",
            "movls r0, r3",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.0003e580": {
        "function_address": "0x0003e580",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "ldr r4, [0x0003e5dc]",
            "ldr r3, [r4]",
            "cmp r3, 0",
            "popne {r4, r5, r6, pc}",
            "mov r0, 0x400",
            "bl fcn.00029eb4",
            "str r0, [r4]",
            "mov r5, r0",
            "ldr r4, aav.0x0005fc74",
            "mov ip, r5",
            "ldm r4!, {r0, r1, r2, r3}",
            "stm ip!, {r0, r1, r2, r3}",
            "ldm r4!, {r0, r1, r2, r3}",
            "stm ip!, {r0, r1, r2, r3}",
            "ldm r4!, {r0, r1, r2, r3}",
            "stm ip!, {r0, r1, r2, r3}",
            "mov r1, r5",
            "ldr r3, [r4]",
            "ldr r0, str._etc_iproute2_rt_protos",
            "str r3, [ip]",
            "pop {r4, r5, r6, lr}",
            "b 0x3e430"
        ]
    },
    "fcn.0003f078": {
        "function_address": "0x0003f078",
        "instructions": [
            "push {r0, r1, r2, r4, r5, lr}",
            "subs r4, r1, 0",
            "mov r5, r0",
            "beq 0x3f0c8",
            "ldrb r3, [r4]",
            "cmp r3, 0",
            "beq 0x3f0c8",
            "mov r0, r4",
            "add r1, sp, 4",
            "bl sym.imp.strtoul",
            "ldr r3, [sp, 4]",
            "cmp r3, 0",
            "beq 0x3f0c8",
            "cmp r3, r4",
            "beq 0x3f0c8",
            "ldrb r3, [r3]",
            "cmp r3, 0",
            "streq r0, [r5]",
            "moveq r0, r3",
            "beq 0x3f0cc",
            "mvn r0, 0",
            "pop {r1, r2, r3, r4, r5, pc}"
        ]
    },
    "fcn.0003dee4": {
        "function_address": "0x0003dee4",
        "instructions": [
            "push {r0, r1, r4, lr}",
            "mov r4, r0",
            "str r3, [sp, 4]",
            "ldrh r3, [r0]",
            "add r3, r3, 3",
            "bic r3, r3, 3",
            "add r0, r3, 8",
            "cmp r0, r1",
            "mvngt r0, 0",
            "bgt 0x3df44",
            "add r0, r4, r3",
            "add r1, sp, 4",
            "strh r2, [r0, 2]",
            "mov r2, 8",
            "strh r2, [r4, r3]",
            "add r0, r0, 4",
            "mov r2, 4",
            "bl sym.imp.memcpy",
            "ldrh r3, [r4]",
            "mov r0, 0",
            "add r3, r3, 3",
            "bic r3, r3, 3",
            "add r3, r3, 8",
            "strh r3, [r4]",
            "pop {r2, r3, r4, pc}"
        ]
    },
    "fcn.0003ec98": {
        "function_address": "0x0003ec98",
        "instructions": [
            "ldr r3, [0x0003ed60]",
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r4, r0",
            "mov r7, r1",
            "ldr r0, [r3]",
            "cmp r0, 0",
            "beq 0x3ecd0",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x3ecd0",
            "ldr r3, [0x0003ed64]",
            "ldr r3, [r3]",
            "str r3, [r4]",
            "pop {r4, r5, r6, r7, r8, pc}",
            "ldr r8, [0x0003ed68]",
            "mov r5, 0",
            "bl fcn.0003e6e4",
            "ldr r3, [r8]",
            "ldr r6, [r3, r5, lsl 2]",
            "cmp r6, 0",
            "beq 0x3ed18",
            "mov r0, r6",
            "mov r1, r7",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x3ed18",
            "ldr r3, [0x0003ed60]",
            "str r6, [r3]",
            "ldr r3, [0x0003ed64]",
            "str r5, [r3]",
            "str r5, [r4]",
            "pop {r4, r5, r6, r7, r8, pc}",
            "add r5, r5, 1",
            "cmp r5, 0x100",
            "bne 0x3ecdc",
            "mov r1, 0",
            "mov r0, r7",
            "mov r2, r1",
            "bl fcn.000266e4",
            "ldr r3, [0x0003ed6c]",
            "ldr r3, [r3]",
            "ldr r3, [r3]",
            "cmp r0, 0xff",
            "cmple r3, 0",
            "moveq r3, 0",
            "movne r3, 1",
            "streq r0, [r4]",
            "mvnne r0, 0",
            "moveq r0, r3",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.0003e6e4": {
        "function_address": "0x0003e6e4",
        "instructions": [
            "ldr r3, [0x0003e738]",
            "push {r4, lr}",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "popne {r4, pc}",
            "mov r0, 0x400",
            "bl fcn.00029eb4",
            "ldr r3, [0x0003e73c]",
            "mov r1, r0",
            "str r0, [r3]",
            "ldr r3, str.unspec",
            "str r3, [r0]",
            "ldr r3, [0x0003e744]",
            "str r3, [r0, 0x3fc]",
            "ldr r3, str.main",
            "str r3, [r0, 0x3f8]",
            "ldr r3, str.default",
            "str r3, [r0, 0x3f4]",
            "ldr r0, str._etc_iproute2_rt_tables",
            "pop {r4, lr}",
            "b 0x3e430"
        ]
    },
    "fcn.0003f0d0": {
        "function_address": "0x0003f0d0",
        "instructions": [
            "push {r0, r1, r2, r4, r5, lr}",
            "subs r4, r1, 0",
            "mov r5, r0",
            "beq 0x3f120",
            "ldrb r3, [r4]",
            "cmp r3, 0",
            "beq 0x3f120",
            "mov r0, r4",
            "add r1, sp, 4",
            "bl sym.imp.strtoul",
            "ldr r3, [sp, 4]",
            "cmp r3, 0",
            "beq 0x3f120",
            "cmp r3, r4",
            "beq 0x3f120",
            "ldrb r3, [r3]",
            "cmp r3, 0",
            "streq r0, [r5]",
            "moveq r0, r3",
            "beq 0x3f124",
            "mvn r0, 0",
            "pop {r1, r2, r3, r4, r5, pc}"
        ]
    },
    "fcn.0003ee64": {
        "function_address": "0x0003ee64",
        "instructions": [
            "push {r0, r1, r2, r4, r5, lr}",
            "mov r5, r0",
            "ldr r0, str.local",
            "mov r4, r1",
            "bl fcn.00026800",
            "add r3, r0, 1",
            "cmp r3, 1",
            "beq 0x3ef10",
            "cmp r3, 2",
            "beq 0x3ef18",
            "sub r0, r0, 2",
            "cmp r0, 1",
            "bls 0x3ef20",
            "cmp r3, 5",
            "beq 0x3ef28",
            "cmp r3, 6",
            "beq 0x3ef30",
            "cmp r3, 7",
            "beq 0x3ef38",
            "cmp r3, 8",
            "beq 0x3ef40",
            "cmp r3, 9",
            "beq 0x3ef48",
            "cmp r3, 0xa",
            "beq 0x3ef50",
            "cmp r3, 0xb",
            "beq 0x3ef58",
            "cmp r3, 0xc",
            "beq 0x3ef60",
            "mov r0, r4",
            "add r1, sp, 4",
            "mov r2, 0",
            "bl sym.imp.strtoul",
            "ldr r3, [sp, 4]",
            "cmp r3, 0",
            "beq 0x3ef70",
            "cmp r3, r4",
            "beq 0x3ef70",
            "ldrb r3, [r3]",
            "cmp r0, 0xff",
            "cmpls r3, 0",
            "bne 0x3ef70",
            "b 0x3ef64",
            "mov r0, 2",
            "b 0x3ef64",
            "mov r0, 0xa",
            "b 0x3ef64",
            "mov r0, 3",
            "b 0x3ef64",
            "mov r0, 4",
            "b 0x3ef64",
            "mov r0, 5",
            "b 0x3ef64",
            "mov r0, 8",
            "b 0x3ef64",
            "mov r0, 7",
            "b 0x3ef64",
            "mov r0, 6",
            "b 0x3ef64",
            "mov r0, 0xb",
            "b 0x3ef64",
            "mov r0, 1",
            "b 0x3ef64",
            "mov r0, 9",
            "str r0, [r5]",
            "mov r0, 0",
            "b 0x3ef74",
            "mvn r0, 0",
            "pop {r1, r2, r3, r4, r5, pc}"
        ]
    },
    "fcn.0003ead4": {
        "function_address": "0x0003ead4",
        "instructions": [
            "cmp r0, 0xff",
            "push {r4, r5, r6, lr}",
            "mov r5, r0",
            "mov r4, r1",
            "mov r6, r2",
            "bls 0x3eb08",
            "mov r0, r1",
            "mov r3, r5",
            "mov r1, r2",
            "ldr r2, aav.0x0005c33c",
            "bl sym.imp.snprintf",
            "mov r0, r4",
            "pop {r4, r5, r6, pc}",
            "bl fcn.0003e6a0",
            "ldr r3, [0x0003eb40]",
            "ldr r3, [r3]",
            "ldr r0, [r3, r5, lsl 2]",
            "cmp r0, 0",
            "popne {r4, r5, r6, pc}",
            "mov r0, r4",
            "mov r1, r6",
            "ldr r2, str.0x_02x",
            "mov r3, r5",
            "bl sym.imp.snprintf",
            "mov r0, r4",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.0003e6a0": {
        "function_address": "0x0003e6a0",
        "instructions": [
            "push {r4, lr}",
            "ldr r4, [0x0003e6d8]",
            "ldr r3, [r4]",
            "cmp r3, 0",
            "popne {r4, pc}",
            "mov r0, 0x400",
            "bl fcn.00029eb4",
            "ldr r3, aav.0x000607bc",
            "mov r1, r0",
            "str r0, [r4]",
            "str r3, [r0]",
            "ldr r0, str._etc_iproute2_rt_dsfield",
            "pop {r4, lr}",
            "b 0x3e430"
        ]
    },
    "fcn.0003ec28": {
        "function_address": "0x0003ec28",
        "instructions": [
            "cmp r0, 0xff",
            "push {r4, r5, r6, lr}",
            "mov r5, r0",
            "mov r4, r1",
            "mov r6, r2",
            "bls 0x3ec5c",
            "mov r0, r1",
            "mov r3, r5",
            "mov r1, r2",
            "ldr r2, aav.0x0005c33c",
            "bl sym.imp.snprintf",
            "mov r0, r4",
            "pop {r4, r5, r6, pc}",
            "bl fcn.0003e6e4",
            "ldr r3, [0x0003ec94]",
            "ldr r3, [r3]",
            "ldr r0, [r3, r5, lsl 2]",
            "cmp r0, 0",
            "popne {r4, r5, r6, pc}",
            "mov r0, r4",
            "mov r1, r6",
            "ldr r2, aav.0x0005c33c",
            "mov r3, r5",
            "bl sym.imp.snprintf",
            "mov r0, r4",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.0003ea64": {
        "function_address": "0x0003ea64",
        "instructions": [
            "cmp r0, 0xff",
            "push {r4, r5, r6, lr}",
            "mov r5, r0",
            "mov r4, r1",
            "mov r6, r2",
            "bls 0x3ea98",
            "mov r0, r1",
            "mov r3, r5",
            "mov r1, r2",
            "ldr r2, aav.0x0005c33c",
            "bl sym.imp.snprintf",
            "mov r0, r4",
            "pop {r4, r5, r6, pc}",
            "bl fcn.0003e65c",
            "ldr r3, [0x0003ead0]",
            "ldr r3, [r3]",
            "ldr r0, [r3, r5, lsl 2]",
            "cmp r0, 0",
            "popne {r4, r5, r6, pc}",
            "mov r0, r4",
            "mov r1, r6",
            "ldr r2, aav.0x0005c33c",
            "mov r3, r5",
            "bl sym.imp.snprintf",
            "mov r0, r4",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.0003e65c": {
        "function_address": "0x0003e65c",
        "instructions": [
            "push {r4, lr}",
            "ldr r4, [0x0003e694]",
            "ldr r3, [r4]",
            "cmp r3, 0",
            "popne {r4, pc}",
            "mov r0, 0x400",
            "bl fcn.00029eb4",
            "ldr r3, [0x0003e698]",
            "mov r1, r0",
            "str r0, [r4]",
            "str r3, [r0]",
            "ldr r0, str._etc_iproute2_rt_realms",
            "pop {r4, lr}",
            "b 0x3e430"
        ]
    },
    "fcn.0003eb48": {
        "function_address": "0x0003eb48",
        "instructions": [
            "ldr r3, [0x0003ec18]",
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r4, r0",
            "mov r7, r1",
            "ldr r0, [r3]",
            "cmp r0, 0",
            "beq 0x3eb80",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x3eb80",
            "ldr r3, [0x0003ec1c]",
            "ldr r3, [r3]",
            "str r3, [r4]",
            "pop {r4, r5, r6, r7, r8, pc}",
            "ldr r8, [0x0003ec20]",
            "mov r5, 0",
            "bl fcn.0003e6a0",
            "ldr r3, [r8]",
            "ldr r6, [r3, r5, lsl 2]",
            "cmp r6, 0",
            "beq 0x3ebc8",
            "mov r0, r6",
            "mov r1, r7",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x3ebc8",
            "ldr r3, [0x0003ec18]",
            "str r6, [r3]",
            "ldr r3, [0x0003ec1c]",
            "str r5, [r3]",
            "str r5, [r4]",
            "pop {r4, r5, r6, r7, r8, pc}",
            "add r5, r5, 1",
            "cmp r5, 0x100",
            "bne 0x3eb8c",
            "mov r0, r7",
            "mov r1, 0",
            "mov r2, 0x10",
            "bl fcn.000266e4",
            "ldr r3, [0x0003ec1c]",
            "str r0, [r3]",
            "ldr r3, [0x0003ec24]",
            "ldr r3, [r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "mvnne r0, 0",
            "popne {r4, r5, r6, r7, r8, pc}",
            "cmp r0, 0xff",
            "strls r0, [r4]",
            "mvnhi r0, 0",
            "movls r0, r3",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.0003ef7c": {
        "function_address": "0x0003ef7c",
        "instructions": [
            "push {r0, r1, r2, r4, r5, r6, r7, lr}",
            "mov r5, r0",
            "mov r7, 0",
            "mov r0, r1",
            "mov r4, r1",
            "mov r1, 0x2f",
            "str r7, [sp, 4]",
            "bl sym.imp.strchr",
            "subs r6, r0, 0",
            "str r7, [r5]",
            "beq 0x3efe0",
            "strb r7, [r6]",
            "mov r0, r5",
            "mov r1, r4",
            "bl fcn.0003e984",
            "cmp r0, r7",
            "movne r3, 0x2f",
            "strbne r3, [r6]",
            "bne 0x3f018",
            "ldr r3, [r5]",
            "mov r4, r6",
            "lsl r3, r3, 0x10",
            "str r3, [r5]",
            "mov r3, 0x2f",
            "strb r3, [r4], 1",
            "ldrb r3, [r4]",
            "cmp r3, 0",
            "beq 0x3f000",
            "add r0, sp, 4",
            "mov r1, r4",
            "bl fcn.0003e984",
            "cmp r0, 0",
            "bne 0x3f018",
            "ldr r2, [r5]",
            "mov r0, 0",
            "ldr r3, [sp, 4]",
            "orr r3, r2, r3",
            "str r3, [r5]",
            "b 0x3f01c",
            "mvn r0, 0",
            "pop {r1, r2, r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.0003e984": {
        "function_address": "0x0003e984",
        "instructions": [
            "ldr r3, [0x0003ea54]",
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r4, r0",
            "mov r7, r1",
            "ldr r0, [r3]",
            "cmp r0, 0",
            "beq 0x3e9bc",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x3e9bc",
            "ldr r3, [0x0003ea58]",
            "ldr r3, [r3]",
            "str r3, [r4]",
            "pop {r4, r5, r6, r7, r8, pc}",
            "ldr r8, [0x0003ea5c]",
            "mov r5, 0",
            "bl fcn.0003e65c",
            "ldr r3, [r8]",
            "ldr r6, [r3, r5, lsl 2]",
            "cmp r6, 0",
            "beq 0x3ea04",
            "mov r0, r6",
            "mov r1, r7",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x3ea04",
            "ldr r3, [0x0003ea54]",
            "str r6, [r3]",
            "ldr r3, [0x0003ea58]",
            "str r5, [r3]",
            "str r5, [r4]",
            "pop {r4, r5, r6, r7, r8, pc}",
            "add r5, r5, 1",
            "cmp r5, 0x100",
            "bne 0x3e9c8",
            "mov r1, 0",
            "mov r0, r7",
            "mov r2, r1",
            "bl fcn.000266e4",
            "ldr r3, [0x0003ea58]",
            "str r0, [r3]",
            "ldr r3, [0x0003ea60]",
            "ldr r3, [r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "mvnne r0, 0",
            "popne {r4, r5, r6, r7, r8, pc}",
            "cmp r0, 0xff",
            "strls r0, [r4]",
            "mvnhi r0, 0",
            "movls r0, r3",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.0003f3f8": {
        "function_address": "0x0003f3f8",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r0",
            "sub sp, sp, 0x18",
            "mov r1, r4",
            "add r0, sp, 4",
            "mov r2, 2",
            "bl fcn.0003f128",
            "cmp r0, 0",
            "beq 0x3f428",
            "ldr r0, str.an_IP_address_is_expected_rather_than___s_",
            "mov r1, r4",
            "bl fcn.000271d8",
            "ldr r0, [sp, 8]",
            "add sp, sp, 0x18",
            "pop {r4, pc}"
        ]
    },
    "fcn.0003c7b0": {
        "function_address": "0x0003c7b0",
        "instructions": [
            "push {r4, r5, lr}",
            "mov r3, r0",
            "sub sp, sp, 0x24",
            "mov r5, r1",
            "mov r0, sp",
            "mov r1, r3",
            "mov r2, 0x10",
            "bl sym.imp.strncpy",
            "mov r0, 2",
            "mov r2, 0",
            "mov r1, r0",
            "str r5, [sp, 0x10]",
            "bl fcn.0002a3cc"
        ]
    },
    "fcn.0003c80c": {
        "function_address": "0x0003c80c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x74",
            "add r7, sp, 0x5c",
            "mov r6, r0",
            "mov r5, r1",
            "mov r0, r3",
            "str r2, [sp, 4]",
            "mov r1, 0",
            "mov r2, 0x34",
            "mov r4, r3",
            "bl sym.imp.memset",
            "mov r0, r7",
            "mov r1, 0",
            "mov r2, 0x10",
            "mov fp, r7",
            "bl sym.imp.memset",
            "ldrb r2, [r4, 0x20]",
            "mov r3, 4",
            "mov r1, 5",
            "mov sl, 0",
            "add sb, sp, 8",
            "add r8, sp, 0x6c",
            "bfi r2, r3, 4, 4",
            "mov r7, r6",
            "bfi r2, r1, 0, 4",
            "strb r2, [r4, 0x20]",
            "mov r2, 0x40",
            "strh r2, [r4, 0x26]",
            "b 0x3cd0c",
            "ldr r0, str.mode",
            "ldr r1, [r5]",
            "bl fcn.000267ac",
            "cmp r0, 0",
            "bne 0x3c92c",
            "subs r7, r7, 1",
            "beq 0x3cc6c",
            "ldr r0, str.mode",
            "ldr r1, [r5, 4]!",
            "bl fcn.000267ac",
            "sub r3, r0, 1",
            "cmp r3, 1",
            "bhi 0x3c8cc",
            "ldrb r3, [r4, 0x29]",
            "cmp r3, 4",
            "cmpne r3, 0",
            "bne 0x3c910",
            "mov r3, 4",
            "b 0x3c91c",
            "sub r3, r0, 3",
            "cmp r3, 1",
            "bhi 0x3c8f4",
            "ldrb r3, [r4, 0x29]",
            "cmp r3, 0x2f",
            "cmpne r3, 0",
            "bne 0x3c910",
            "mov r2, 0x2f",
            "strb r2, [r4, 0x29]",
            "b 0x3cd00",
            "sub r0, r0, 5",
            "cmp r0, 1",
            "bhi 0x3c924",
            "ldrb r3, [r4, 0x29]",
            "cmp r3, 0x29",
            "cmpne r3, 0",
            "beq 0x3c918",
            "ldr r0, str.you_managed_to_ask_for_more_than_one_tunnel_mode",
            "b 0x3ce74",
            "mov r3, 0x29",
            "strb r3, [r4, 0x29]",
            "b 0x3cd00",
            "ldr r0, str.cannot_guess_tunnel_mode",
            "b 0x3ce74",
            "cmp r0, 7",
            "bne 0x3c9a8",
            "subs r7, r7, 1",
            "beq 0x3cc6c",
            "ldrh r3, [r4, 0x14]",
            "mov r1, 0x2e",
            "ldr r6, [r5, 4]!",
            "orr r3, r3, 0x20",
            "strh r3, [r4, 0x14]",
            "mov r0, r6",
            "ldrh r3, [r4, 0x16]",
            "orr r3, r3, 0x20",
            "strh r3, [r4, 0x16]",
            "bl sym.imp.strchr",
            "subs r2, r0, 0",
            "beq 0x3c980",
            "mov r0, r6",
            "bl fcn.0003f3f8",
            "str r0, [r4, 0x1c]",
            "str r0, [r4, 0x18]",
            "b 0x3cd00",
            "mov r0, r8",
            "mov r1, r6",
            "bl fcn.0003f078",
            "cmp r0, 0",
            "ldrlt r0, str.invalid_value_of__key_",
            "blt 0x3ce74",
            "ldr r3, [sp, 0x6c]",
            "rev r3, r3",
            "str r3, [r4, 0x1c]",
            "b 0x3c9fc",
            "cmp r0, 8",
            "bne 0x3ca04",
            "subs r7, r7, 1",
            "beq 0x3cc6c",
            "ldrh r3, [r4, 0x14]",
            "mov r1, 0x2e",
            "ldr r6, [r5, 4]!",
            "orr r3, r3, 0x20",
            "strh r3, [r4, 0x14]",
            "mov r0, r6",
            "bl sym.imp.strchr",
            "subs r2, r0, 0",
            "bne 0x3ca38",
            "mov r0, r8",
            "mov r1, r6",
            "bl fcn.0003f078",
            "cmp r0, 0",
            "ldrlt r0, str.invalid_value_of__ikey_",
            "blt 0x3ce74",
            "ldr r3, [sp, 0x6c]",
            "rev r3, r3",
            "str r3, [r4, 0x18]",
            "b 0x3cd00",
            "cmp r0, 9",
            "bne 0x3ca70",
            "subs r7, r7, 1",
            "beq 0x3cc6c",
            "ldrh r3, [r4, 0x16]",
            "mov r1, 0x2e",
            "ldr r6, [r5, 4]!",
            "orr r3, r3, 0x20",
            "strh r3, [r4, 0x16]",
            "mov r0, r6",
            "bl sym.imp.strchr",
            "subs r2, r0, 0",
            "beq 0x3ca48",
            "mov r0, r6",
            "bl fcn.0003f3f8",
            "str r0, [r4, 0x1c]",
            "b 0x3cd00",
            "mov r0, r8",
            "mov r1, r6",
            "bl fcn.0003f078",
            "cmp r0, 0",
            "ldrlt r0, str.invalid_value_of__okey_",
            "blt 0x3ce74",
            "ldr r3, [sp, 0x6c]",
            "rev r3, r3",
            "str r3, [r4, 0x1c]",
            "b 0x3cd00",
            "cmp r0, 0xa",
            "ldrheq r3, [r4, 0x14]",
            "orreq r3, r3, 0x10",
            "strheq r3, [r4, 0x14]",
            "beq 0x3ca9c",
            "cmp r0, 0xb",
            "ldrheq r3, [r4, 0x14]",
            "orreq r3, r3, 0x10",
            "beq 0x3cadc",
            "cmp r0, 0xc",
            "bne 0x3caa8",
            "ldrh r3, [r4, 0x16]",
            "orr r3, r3, 0x10",
            "b 0x3cac4",
            "cmp r0, 0xd",
            "bne 0x3cacc",
            "ldrh r3, [r4, 0x14]",
            "orr r3, r3, 0x80",
            "strh r3, [r4, 0x14]",
            "ldrh r3, [r4, 0x16]",
            "orr r3, r3, 0x80",
            "strh r3, [r4, 0x16]",
            "b 0x3cd00",
            "cmp r0, 0xe",
            "bne 0x3cae4",
            "ldrh r3, [r4, 0x14]",
            "orr r3, r3, 0x80",
            "strh r3, [r4, 0x14]",
            "b 0x3cd00",
            "cmp r0, 0xf",
            "beq 0x3cabc",
            "cmp r0, 0x10",
            "moveq r2, 0",
            "strheq r2, [r4, 0x26]",
            "beq 0x3cd00",
            "cmp r0, 0x11",
            "moveq r3, 0x40",
            "strheq r3, [r4, 0x26]",
            "beq 0x3cd00",
            "cmp r0, 0x12",
            "bne 0x3cb40",
            "subs r7, r7, 1",
            "beq 0x3cc6c",
            "ldr r0, str.mode",
            "ldr r1, [r5, 4]!",
            "bl fcn.000267ac",
            "cmp r0, 0x13",
            "beq 0x3cd00",
            "ldr r0, [r5]",
            "bl fcn.0003f3f8",
            "str r0, [r4, 0x30]",
            "b 0x3cd00",
            "cmp r0, 0x14",
            "bne 0x3cb74",
            "subs r7, r7, 1",
            "beq 0x3cc6c",
            "ldr r0, str.mode",
            "ldr r1, [r5, 4]!",
            "bl fcn.000267ac",
            "cmp r0, 0x13",
            "beq 0x3cd00",
            "ldr r0, [r5]",
            "bl fcn.0003f3f8",
            "str r0, [r4, 0x2c]",
            "b 0x3cd00",
            "cmp r0, 0x15",
            "bne 0x3cb98",
            "subs r7, r7, 1",
            "beq 0x3cc6c",
            "mov r0, fp",
            "ldr r1, [r5, 4]!",
            "mov r2, 0xf",
            "bl sym.imp.strncpy",
            "b 0x3cd00",
            "cmp r0, 0x16",
            "bne 0x3cbf8",
            "subs r7, r7, 1",
            "beq 0x3cc6c",
            "ldr r0, str.mode",
            "ldr r1, [r5, 4]!",
            "bl fcn.000267ac",
            "cmp r0, 0x17",
            "beq 0x3cd00",
            "mov r0, r8",
            "ldr r1, [r5]",
            "mov r2, 0",
            "bl fcn.0003f078",
            "cmp r0, 0",
            "ldrne r0, [r5]",
            "ldrne r1, [0x0003ce98]",
            "bne 0x3cc3c",
            "ldr r3, [sp, 0x6c]",
            "cmp r3, 0xff",
            "ldrhi r0, [r5]",
            "ldrhi r1, str.TTL_must_be__255",
            "bhi 0x3cc3c",
            "strb r3, [r4, 0x28]",
            "b 0x3cd00",
            "sub r3, r0, 0x18",
            "cmp r3, 1",
            "bhi 0x3cc58",
            "subs r7, r7, 1",
            "beq 0x3cc6c",
            "ldr r0, str.mode",
            "ldr r1, [r5, 4]!",
            "bl fcn.000267ac",
            "cmp r0, 0x17",
            "beq 0x3cc4c",
            "mov r0, r8",
            "ldr r1, [r5]",
            "bl fcn.0003eb48",
            "cmp r0, 0",
            "beq 0x3cc40",
            "ldr r0, [r5]",
            "ldr r1, [0x0003cea0]",
            "bl fcn.0003f448",
            "ldr r3, [sp, 0x6c]",
            "strb r3, [r4, 0x21]",
            "b 0x3cd00",
            "mov r2, 1",
            "strb r2, [r4, 0x21]",
            "b 0x3cd00",
            "cmp r0, 0x1a",
            "bne 0x3cc70",
            "subs r7, r7, 1",
            "addne r5, r5, 4",
            "bne 0x3cc70",
            "bl fcn.0003f438",
            "ldrb r6, [r4]",
            "cmp r6, 0",
            "beq 0x3cc88",
            "ldr r0, aav.0x000606ac",
            "ldr r1, [r5]",
            "bl fcn.0003f480",
            "mov r2, 0x10",
            "mov r0, r4",
            "ldr r1, [r5]",
            "bl sym.imp.strncpy",
            "ldr r3, [sp, 4]",
            "movw r2, 0x89f3",
            "cmp sl, 0",
            "cmpeq r3, r2",
            "bne 0x3cd00",
            "mov r1, r6",
            "mov r2, 0x34",
            "mov r0, sb",
            "bl sym.imp.memset",
            "ldr r0, [r5]",
            "mov r1, sb",
            "bl fcn.0003c7b0",
            "cmp r0, 0",
            "beq 0x3ccd8",
            "mov r0, 1",
            "bl sym.imp.exit",
            "mov ip, sb",
            "mov r6, r4",
            "ldm ip!, {r0, r1, r2, r3}",
            "stm r6!, {r0, r1, r2, r3}",
            "ldm ip!, {r0, r1, r2, r3}",
            "stm r6!, {r0, r1, r2, r3}",
            "ldm ip!, {r0, r1, r2, r3}",
            "stm r6!, {r0, r1, r2, r3}",
            "ldr r3, [ip]",
            "str r3, [r6]",
            "add sl, sl, 1",
            "sub r7, r7, 1",
            "add r5, r5, 4",
            "cmp r7, 0",
            "bgt 0x3c880",
            "ldrb r3, [r4, 0x29]",
            "cmp r3, 0",
            "bne 0x3cd78",
            "mov r0, r4",
            "ldr r1, aav.0x0005f4f0",
            "mov r2, 3",
            "bl sym.imp.memcmp",
            "cmp r0, 0",
            "moveq r3, 0x2f",
            "beq 0x3cd74",
            "mov r0, r4",
            "ldr r1, aav.0x0005f4f4",
            "mov r2, 4",
            "bl sym.imp.memcmp",
            "cmp r0, 0",
            "moveq r3, 4",
            "beq 0x3cd74",
            "mov r0, r4",
            "ldr r1, aav.0x0005f51c",
            "mov r2, 3",
            "bl sym.imp.memcmp",
            "cmp r0, 0",
            "bne 0x3cd78",
            "mov r3, 0x29",
            "strb r3, [r4, 0x29]",
            "ldrb r3, [r4, 0x29]",
            "cmp r3, 4",
            "cmpne r3, 0x29",
            "bne 0x3cda8",
            "ldrh r3, [r4, 0x14]",
            "tst r3, 0x20",
            "bne 0x3cda0",
            "ldrh r3, [r4, 0x16]",
            "tst r3, 0x20",
            "beq 0x3cda8",
            "ldr r0, str.keys_are_not_allowed_with_ipip_and_sit",
            "b 0x3ce74",
            "ldrb r3, [sp, 0x5c]",
            "cmp r3, 0",
            "beq 0x3cdf8",
            "add r5, sp, 0x3c",
            "add r1, sp, 0x5c",
            "mov r2, 0x10",
            "mov r0, r5",
            "bl sym.imp.strncpy",
            "mov r0, 2",
            "mov r2, 0",
            "mov r1, r0",
            "bl fcn.0002a3cc",
            "ldr r3, [r4, 0x18]",
            "cmp r3, 0",
            "bne 0x3ce24",
            "ldr r3, [r4, 0x30]",
            "rev r2, r3",
            "and r2, r2, 0xf0000000",
            "cmp r2, 0xe0000000",
            "streq r3, [r4, 0x18]",
            "ldrheq r3, [r4, 0x14]",
            "orreq r3, r3, 0x20",
            "strheq r3, [r4, 0x14]",
            "ldr r3, [r4, 0x1c]",
            "cmp r3, 0",
            "bne 0x3ce50",
            "ldr r3, [r4, 0x30]",
            "rev r2, r3",
            "and r2, r2, 0xf0000000",
            "cmp r2, 0xe0000000",
            "streq r3, [r4, 0x1c]",
            "ldrheq r3, [r4, 0x16]",
            "orreq r3, r3, 0x20",
            "strheq r3, [r4, 0x16]",
            "ldr r3, [r4, 0x30]",
            "rev r3, r3",
            "and r3, r3, 0xf0000000",
            "cmp r3, 0xe0000000",
            "bne 0x3ce78",
            "ldr r3, [r4, 0x2c]",
            "cmp r3, 0",
            "bne 0x3ce78",
            "ldr r0, str.broadcast_tunnel_requires_a_source_address",
            "bl fcn.000271d8",
            "add sp, sp, 0x74",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0003cebc": {
        "function_address": "0x0003cebc",
        "instructions": [
            "movw r3, 0x89f3",
            "push {r4, r5, lr}",
            "cmp r0, r3",
            "sub sp, sp, 0x24",
            "mov r5, r0",
            "mov r4, r2",
            "bne 0x3ceec",
            "ldrb r3, [r2]",
            "cmp r3, 0",
            "movne r0, sp",
            "movne r1, r2",
            "bne 0x3cef0",
            "mov r0, sp",
            "mov r2, 0x10",
            "bl sym.imp.strncpy",
            "mov r0, 2",
            "mov r2, 0",
            "mov r1, r0",
            "str r4, [sp, 0x10]",
            "bl fcn.0002a3cc"
        ]
    },
    "fcn.0003d038": {
        "function_address": "0x0003d038",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "mov r4, r0",
            "sub sp, sp, 0x2cc",
            "mov r5, 0x100",
            "mov r1, 4",
            "add r2, r4, 0x30",
            "add r3, sp, 0x108",
            "mov r0, 2",
            "str r5, [sp]",
            "bl fcn.0003f540",
            "mov r1, 4",
            "add r2, r4, 0x2c",
            "add r3, sp, 8",
            "mov r0, 2",
            "str r5, [sp]",
            "bl fcn.0003f540",
            "add r1, r4, 0x18",
            "add r2, sp, 0x288",
            "mov r3, 0x40",
            "mov r0, 2",
            "bl sym.imp.inet_ntop",
            "add r2, sp, 0x248",
            "mov r3, 0x40",
            "mov r0, 2",
            "add r1, r4, 0x1c",
            "bl sym.imp.inet_ntop",
            "ldrb r3, [r4, 0x29]",
            "cmp r3, 4",
            "ldreq r2, [0x0003d2e8]",
            "beq 0x3d0cc",
            "cmp r3, 0x2f",
            "ldreq r2, aav.0x0005f4f0",
            "beq 0x3d0cc",
            "ldr r1, [0x0003d2f0]",
            "cmp r3, 0x29",
            "ldr r2, str.ipv6",
            "movne r2, r1",
            "ldr r3, [r4, 0x30]",
            "ldr r1, [r4, 0x2c]",
            "ldr r0, str._s:__s_ip__remote__s__local__s",
            "cmp r3, 0",
            "addne r3, sp, 0x108",
            "ldreq r3, aav.0x00060994",
            "cmp r1, 0",
            "ldreq r1, aav.0x00060994",
            "addne r1, sp, 8",
            "str r1, [sp]",
            "mov r1, r4",
            "bl sym.imp.printf",
            "ldr r3, [r4, 0x10]",
            "cmp r3, 0",
            "beq 0x3d16c",
            "mov r0, 2",
            "mov r2, 0",
            "mov r1, r0",
            "add r5, sp, 0x208",
            "str r3, [sp, 0x218]",
            "bl fcn.0002a3cc",
            "ldrb r1, [r4, 0x28]",
            "cmp r1, 0",
            "beq 0x3d184",
            "ldr r0, str._ttl__d",
            "bl sym.imp.printf",
            "b 0x3d18c",
            "ldr r0, str._ttl_inherit",
            "bl sym.imp.printf",
            "ldrb r3, [r4, 0x21]",
            "cmp r3, 0",
            "beq 0x3d1e8",
            "ldr r0, str._tos",
            "bl sym.imp.printf",
            "ldrb r3, [r4, 0x21]",
            "tst r3, 1",
            "beq 0x3d1b4",
            "ldr r0, str._inherit",
            "bl sym.imp.printf",
            "ldrb r3, [r4, 0x21]",
            "bics r0, r3, 1",
            "beq 0x3d1e8",
            "tst r3, 1",
            "add r1, sp, 0x208",
            "moveq r5, 0x20",
            "movne r5, 0x2f",
            "mov r2, 0x40",
            "bl fcn.0003ead4",
            "mov r1, r5",
            "mov r2, r0",
            "ldr r0, [0x0003d314]",
            "bl sym.imp.printf",
            "ldrh r3, [r4, 0x26]",
            "and r3, r3, 0x40",
            "uxth r3, r3",
            "cmp r3, 0",
            "bne 0x3d204",
            "ldr r0, str._nopmtudisc",
            "bl sym.imp.printf",
            "ldrh r3, [r4, 0x14]",
            "ands r2, r3, 0x20",
            "beq 0x3d234",
            "ldrh r1, [r4, 0x16]",
            "tst r1, 0x20",
            "beq 0x3d234",
            "ldr r0, [r4, 0x1c]",
            "ldr r1, [r4, 0x18]",
            "cmp r0, r1",
            "ldreq r0, str._key__s",
            "addeq r1, sp, 0x288",
            "beq 0x3d26c",
            "ldrh r1, [r4, 0x16]",
            "orr r3, r3, r1",
            "tst r3, 0x20",
            "beq 0x3d270",
            "cmp r2, 0",
            "beq 0x3d258",
            "ldr r0, str._ikey__s",
            "add r1, sp, 0x288",
            "bl sym.imp.printf",
            "ldrh r3, [r4, 0x16]",
            "tst r3, 0x20",
            "beq 0x3d270",
            "ldr r0, str._okey__s",
            "add r1, sp, 0x248",
            "bl sym.imp.printf",
            "ldrh r3, [r4, 0x14]",
            "tst r3, 0x10",
            "beq 0x3d28c",
            "ldr r3, [0x0003d328]",
            "ldr r0, str._c__Drop_packets_out_of_sequence._n",
            "ldrb r1, [r3]",
            "bl sym.imp.printf",
            "ldrh r3, [r4, 0x14]",
            "tst r3, 0x80",
            "beq 0x3d2a8",
            "ldr r3, [0x0003d328]",
            "ldr r0, str._c__Checksum_in_received_packet_is_required.",
            "ldrb r1, [r3]",
            "bl sym.imp.printf",
            "ldrh r3, [r4, 0x16]",
            "tst r3, 0x10",
            "beq 0x3d2c4",
            "ldr r3, [0x0003d328]",
            "ldr r0, str._c__Sequence_packets_on_output.",
            "ldrb r1, [r3]",
            "bl sym.imp.printf",
            "ldrh r3, [r4, 0x16]",
            "tst r3, 0x80",
            "beq 0x3d2e0",
            "ldr r3, [0x0003d328]",
            "ldr r0, str._c__Checksum_output_packets.",
            "ldrb r1, [r3]",
            "bl sym.imp.printf",
            "add sp, sp, 0x2cc",
            "pop {r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.0003cf30": {
        "function_address": "0x0003cf30",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r0",
            "sub sp, sp, 0x38",
            "mov r0, r1",
            "add r3, sp, 4",
            "mov r1, r2",
            "mov r2, r4",
            "bl fcn.0003c80c",
            "ldrb r3, [sp, 0x2c]",
            "cmp r3, 0",
            "beq 0x3cf6c",
            "ldrh r3, [sp, 0x2a]",
            "cmp r3, 0",
            "ldreq r0, str.ttl___0_and_noptmudisc_are_incompatible",
            "beq 0x3cfbc",
            "ldrb r3, [sp, 0x2d]",
            "cmp r3, 0x29",
            "beq 0x3cfa0",
            "cmp r3, 0x2f",
            "beq 0x3cf94",
            "cmp r3, 4",
            "moveq r0, r4",
            "ldreq r1, str.tunl0",
            "beq 0x3cfa8",
            "b 0x3cfb8",
            "mov r0, r4",
            "ldr r1, str.gre0",
            "b 0x3cfa8",
            "ldr r1, str.sit0",
            "mov r0, r4",
            "add r2, sp, 4",
            "bl fcn.0003cebc",
            "add sp, sp, 0x38",
            "pop {r4, pc}",
            "ldr r0, str.cannot_determine_tunnel_mode__ipip__gre_or_sit_",
            "bl fcn.000271d8"
        ]
    },
    "fcn.0003cfd4": {
        "function_address": "0x0003cfd4",
        "instructions": [
            "push {r4, lr}",
            "mov r3, r0",
            "ldrb r2, [r1]",
            "sub sp, sp, 0x20",
            "mov r4, r1",
            "mov r0, sp",
            "cmp r2, 0",
            "mov r2, 0x10",
            "moveq r1, r3",
            "moveq r0, sp",
            "bl sym.imp.strncpy",
            "mov r0, 2",
            "mov r2, 0",
            "mov r1, r0",
            "str r4, [sp, 0x10]",
            "bl fcn.0002a3cc"
        ]
    },
    "fcn.0003d33c": {
        "function_address": "0x0003d33c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r0",
            "sub sp, sp, 0x2d4",
            "ldr r0, [0x0003d5c8]",
            "ldr r1, [0x0003d5cc]",
            "bl fcn.0002995c",
            "subs r6, r0, 0",
            "beq 0x3d5c0",
            "add r5, sp, 0x34",
            "mov r1, 0x200",
            "mov r0, r5",
            "mov r2, r6",
            "bl sym.imp.fgets",
            "mov r0, r5",
            "mov r1, 0x200",
            "mov r2, r6",
            "add r5, sp, 0x288",
            "bl sym.imp.fgets",
            "add r7, sp, 0x2cc",
            "add sb, sp, 0x2c8",
            "add fp, sp, 0x2c4",
            "mov r8, r6",
            "b 0x3d5a4",
            "mov r0, r6",
            "mov r1, 0x3a",
            "bl sym.imp.strchr",
            "subs sl, r0, 0",
            "beq 0x3d3cc",
            "mov r3, 0",
            "mov r0, r6",
            "strb r3, [sl]",
            "mov r2, r5",
            "ldr r1, aav.0x0005ad0c",
            "bl sym.imp.sscanf",
            "cmp r0, 1",
            "beq 0x3d3d8",
            "ldr r0, str.wrong_format_of__proc_net_dev",
            "bl fcn.00027184",
            "b 0x3d5c0",
            "add r3, sp, 0x2bc",
            "add r2, sp, 0x2c0",
            "str r3, [sp, 8]",
            "add r3, sp, 0x298",
            "str r3, [sp, 0x10]",
            "add r3, sp, 0x2b0",
            "str r3, [sp, 0x18]",
            "add r3, sp, 0x2ac",
            "str r3, [sp, 0x1c]",
            "add r3, sp, 0x2a8",
            "str r3, [sp, 0x20]",
            "add r3, sp, 0x2a4",
            "str r2, [sp, 4]",
            "add r2, sp, 0x2b8",
            "str r3, [sp, 0x24]",
            "add r3, sp, 0x2a0",
            "str r2, [sp, 0xc]",
            "add r2, sp, 0x2b4",
            "str r3, [sp, 0x28]",
            "add r3, sp, 0x29c",
            "str r2, [sp, 0x14]",
            "add r0, sl, 1",
            "str r3, [sp, 0x2c]",
            "mov r2, r7",
            "ldr r1, str._lu_lu_lu_lu_lu_lu_lu_d_lu_lu_lu_lu_lu_lu_lu",
            "mov r3, sb",
            "str fp, [sp]",
            "bl sym.imp.sscanf",
            "cmp r0, 0xe",
            "bne 0x3d5a4",
            "ldrb r3, [r4]",
            "cmp r3, 0",
            "beq 0x3d470",
            "mov r0, r4",
            "mov r1, r5",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x3d5a4",
            "add r6, sp, 0x268",
            "mov r1, r5",
            "mov r0, r6",
            "mov r2, 0x10",
            "bl sym.imp.strncpy",
            "mov r0, 2",
            "mov r2, 0",
            "mov r1, r0",
            "bl fcn.0002a3cc",
            "add r6, sp, 0x34",
            "mov r1, 0x200",
            "mov r0, r6",
            "mov r2, r8",
            "bl sym.imp.fgets",
            "cmp r0, 0",
            "bne 0x3d398",
            "add sp, sp, 0x2d4",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00054624": {
        "function_address": "0x00054624",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r1, 0",
            "mov r2, 0xa",
            "mov r4, r0",
            "bl fcn.000266e4",
            "ldr r3, [0x000546a0]",
            "ldr r3, [r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "moveq r5, r0",
            "beq 0x54698",
            "mov r0, r4",
            "ldr r1, aav.0x000620d4",
            "mov r2, 3",
            "ldr r6, str.EXIT",
            "bl sym.imp.strncasecmp",
            "cmp r0, 0",
            "mov r5, 0",
            "addeq r4, r4, 3",
            "mov r1, r6",
            "mov r0, r4",
            "bl sym.imp.strcasecmp",
            "cmp r0, 0",
            "add r6, r6, 7",
            "beq 0x54698",
            "add r5, r5, 1",
            "cmp r5, 0x20",
            "bne 0x54670",
            "mvn r5, 0",
            "mov r0, r5",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.00051974": {
        "function_address": "0x00051974",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r7, r0",
            "mov r4, 0",
            "mov r0, 4",
            "mov r6, r4",
            "bl fcn.00029e54"
        ]
    },
    "fcn.00028ee4": {
        "function_address": "0x00028ee4",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "sub sp, sp, 0x24",
            "add r6, sp, 4",
            "mov r4, r0",
            "mov r5, r1",
            "mov r0, r6",
            "ldr r1, str._proc__u_cmdline",
            "mov r7, r3",
            "bl sym.imp.sprintf",
            "mov r0, r6",
            "mov r1, r4",
            "mov r2, r5",
            "bl fcn.00029068",
            "cmp r0, 0",
            "ble 0x28f4c",
            "mov r3, 0",
            "strb r3, [r4, r0]",
            "add r0, r4, r0",
            "add r3, r3, 0x20",
            "b 0x28f40",
            "ldrb r2, [r0, -1]!",
            "cmp r2, 0x1f",
            "strbls r3, [r0]",
            "cmp r0, r4",
            "bne 0x28f34",
            "b 0x28f60",
            "mov r0, r4",
            "mov r1, r5",
            "ldr r2, [0x00028f6c]",
            "mov r3, r7",
            "bl sym.imp.snprintf",
            "add sp, sp, 0x24",
            "pop {r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.00028c14": {
        "function_address": "0x00028c14",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "subs r4, r0, 0",
            "sub sp, sp, 0x480",
            "mov r5, r1",
            "sub sp, sp, 8",
            "bne 0x28c38",
            "mov r0, r1",
            "bl fcn.00028bc8",
            "mov r4, r0",
            "ldr r7, [0x00028ed0]",
            "ldr r0, [r4]",
            "bl sym.imp.readdir64",
            "subs r6, r0, 0",
            "bne 0x28c5c",
            "mov r0, r4",
            "mov r4, r6",
            "bl fcn.00028bf0",
            "b 0x28ec0",
            "add r0, r6, 0x13",
            "mov r1, 0",
            "mov r2, 0xa",
            "bl fcn.000266e4",
            "ldr r3, [r7]",
            "mov r6, r0",
            "ldr r1, [r3]",
            "cmp r1, 0",
            "bne 0x28c3c",
            "add r0, r4, 8",
            "mov r2, 0x44",
            "bl sym.imp.memset",
            "bics r3, r5, 1",
            "str r6, [r4, 0x18]",
            "beq 0x28ec0",
            "add r7, sp, 0x460",
            "mov r2, r6",
            "add r7, r7, 8",
            "ldr r1, [0x00028ed4]",
            "mov r0, r7",
            "bl sym.imp.sprintf",
            "tst r5, 0x10",
            "mov r6, r0",
            "beq 0x28ce0",
            "mov r0, r7",
            "add r1, sp, 0x400",
            "bl sym.imp.stat64",
            "cmp r0, 0",
            "bne 0x28ec0",
            "ldr r3, [sp, 0x418]",
            "str r3, [r4, 0x28]",
            "ldr r3, [sp, 0x41c]",
            "str r3, [r4, 0x2c]",
            "movw r3, 0x7e2e",
            "add r8, sp, 0x460",
            "and r3, r5, r3",
            "add r8, r8, 8",
            "cmp r3, 0",
            "add r6, r8, r6",
            "beq 0x28e6c",
            "ldr r1, [0x00028ed8]",
            "mov r0, r6",
            "bl sym.imp.strcpy",
            "mov r0, r8",
            "mov r1, sp",
            "bl fcn.00028aa8",
            "cmp r0, 0",
            "mov r7, sp",
            "blt 0x28ec0",
            "mov r1, 0x29",
            "mov r0, sp",
            "bl sym.imp.strrchr",
            "mov r3, 0",
            "str r0, [sp, 0x484]",
            "mov r1, 0x28",
            "strb r3, [r0]",
            "mov r0, sp",
            "add r7, sp, 0x480",
            "bl sym.imp.strchr",
            "mov r2, 0x10",
            "add r1, r0, 1",
            "add r0, r4, 0x3c",
            "add r7, r7, 8",
            "bl fcn.00029568",
            "ldr r3, [sp, 0x484]",
            "ldrb r2, [r3, 2]",
            "add r3, r3, 4",
            "str r3, [r7, -4]!",
            "mov r0, r7",
            "strb r2, [r4, 0x38]",
            "bl fcn.00028a24",
            "str r0, [r4, 0x1c]",
            "mov r0, r7",
            "bl fcn.00028a24",
            "str r0, [r4, 0x20]",
            "mov r0, r7",
            "bl fcn.00028a24",
            "str r0, [r4, 0x24]",
            "mov r0, r7",
            "bl fcn.00028a24",
            "ubfx r3, r0, 8, 0xc",
            "asr r2, r0, 0xc",
            "str r3, [r4, 0x30]",
            "and r0, r0, 0xff",
            "ldr r3, [0x00028edc]",
            "mov r1, 6",
            "and r3, r2, r3",
            "orr r3, r3, r0",
            "ldr r0, [sp, 0x484]",
            "str r3, [r4, 0x34]",
            "bl fcn.00028a64",
            "str r0, [sp, 0x484]",
            "mov r0, r7",
            "bl fcn.00028a24",
            "str r0, [r4, 0x14]",
            "mov r0, r7",
            "bl fcn.00028a24",
            "mov r1, 3",
            "str r0, [r4, 0x10]",
            "ldr r0, [sp, 0x484]",
            "bl fcn.00028a64",
            "str r0, [sp, 0x484]",
            "mov r0, r7",
            "bl fcn.00028a24",
            "mov r1, 3",
            "mov r8, r0",
            "ldr r0, [sp, 0x484]",
            "bl fcn.00028a64",
            "str r0, [sp, 0x484]",
            "mov r0, r7",
            "bl fcn.00028a24",
            "lsr r0, r0, 0xa",
            "str r0, [r4, 8]",
            "mov r0, r7",
            "bl fcn.00028a24",
            "ldr r3, [r4, 8]",
            "lsr r0, r0, 0xa",
            "str r0, [r4, 0xc]",
            "cmp r3, 0",
            "bne 0x28e4c",
            "ldrb r3, [r4, 0x38]",
            "cmp r3, 0x5a",
            "movne r3, 0x57",
            "bne 0x28e50",
            "mov r3, 0x20",
            "cmp r8, 0",
            "strb r3, [r4, 0x39]",
            "movlt r3, 0x3c",
            "blt 0x28e68",
            "movne r3, 0x4e",
            "moveq r3, 0x20",
            "strb r3, [r4, 0x3a]",
            "tst r5, 0x80",
            "beq 0x28ec0",
            "ldr r0, [r4, 4]",
            "cmp r0, 0",
            "beq 0x28e8c",
            "bl sym.imp.free",
            "mov r3, 0",
            "str r3, [r4, 4]",
            "ldr r1, [0x00028ee0]",
            "mov r0, r6",
            "bl sym.imp.strcpy",
            "add r0, sp, 0x460",
            "mov r1, sp",
            "add r0, r0, 8",
            "mov r5, sp",
            "bl fcn.00028aa8",
            "cmp r0, 0",
            "ble 0x28ec0",
            "mov r0, sp",
            "bl fcn.00029ed8",
            "str r0, [r4, 4]",
            "mov r0, r4",
            "add sp, sp, 0x88",
            "add sp, sp, 0x400",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.00028a24": {
        "function_address": "0x00028a24",
        "instructions": [
            "ldr r3, [r0]",
            "mov r2, r0",
            "push {r4, lr}",
            "mov r4, 0xa",
            "ldrb r0, [r3], 1",
            "sub r0, r0, 0x30",
            "b 0x28a48",
            "sub r1, r1, 0x30",
            "mla r0, r4, r0, r1",
            "mov ip, r3",
            "ldrb r1, [r3], 1",
            "cmp r1, 0x20",
            "bne 0x28a40",
            "add r3, ip, 1",
            "str r3, [r2]",
            "pop {r4, pc}"
        ]
    },
    "fcn.00028a64": {
        "function_address": "0x00028a64",
        "instructions": [
            "mov r3, r0",
            "mov r0, r3",
            "ldrb r2, [r0], 1",
            "cmp r2, 0x20",
            "mov r3, r0",
            "bne 0x28a6c",
            "subs r1, r1, 1",
            "bne 0x28a68",
            "bx lr"
        ]
    },
    "fcn.0003fbb4": {
        "function_address": "0x0003fbb4",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r4, r0",
            "mov r5, r1",
            "mov r0, r1",
            "bl sym.imp.strlen",
            "mov r1, r5",
            "mov r2, r0",
            "mov r0, r4",
            "pop {r4, r5, r6, lr}",
            "b sym.imp.write"
        ]
    },
    "fcn.0003fbdc": {
        "function_address": "0x0003fbdc",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "subs r6, r0, 0",
            "mov r5, r1",
            "beq 0x3fd7c",
            "mov r1, 0x3d",
            "bl sym.imp.strchr",
            "subs r2, r0, 0",
            "bne 0x3fc10",
            "mov r1, r6",
            "ldr r0, str.error:__s_must_be_of_the_form_namevalue_n",
            "bl fcn.00027184",
            "mvn r6, 0",
            "b 0x3fd7c",
            "ldrb r3, [r6]",
            "cmp r3, 0",
            "beq 0x3fc30",
            "ldrb r3, [r2, 1]",
            "add r4, r2, 1",
            "cmp r6, r2",
            "cmpne r3, 0",
            "bne 0x3fc44",
            "mov r1, r6",
            "ldr r0, str.error:_Malformed_setting__s_n",
            "bl fcn.00027184",
            "mvn r6, 1",
            "b 0x3fd7c",
            "rsb r2, r6, r2",
            "mov r3, r6",
            "ldr r1, str._proc_sys_",
            "mov r6, 0x2f",
            "ldr r0, str._s_.s",
            "bl fcn.0002a2d0",
            "mov r8, r0",
            "ldr r0, str._proc_sys_",
            "bl sym.imp.strlen",
            "add r0, r8, r0",
            "bl fcn.00029ed8",
            "mov r7, r0",
            "b 0x3fc7c",
            "strb r6, [r0]",
            "mov r0, r8",
            "mov r1, 0x2e",
            "bl sym.imp.strchr",
            "cmp r0, 0",
            "bne 0x3fc78",
            "b 0x3fc9c",
            "strb r6, [r0]",
            "b 0x3fca0",
            "mov r6, 0x2e",
            "mov r0, r7",
            "mov r1, 0x2f",
            "bl sym.imp.strchr",
            "cmp r0, 0",
            "bne 0x3fc94",
            "mov r0, r8",
            "movw r1, 0x241",
            "movw r2, 0x1b6",
            "bl sym.imp.open64",
            "subs r6, r0, 0",
            "bge 0x3fd20",
            "ldr r3, [0x0003fd94]",
            "ldr r3, [r3]",
            "ldr r1, [r3]",
            "cmp r1, 2",
            "beq 0x3fcec",
            "cmp r1, 0xd",
            "beq 0x3fcfc",
            "b 0x3fd10",
            "ldr r0, str.error:__s_is_an_unknown_key_n",
            "mov r1, r7",
            "bl fcn.00027184",
            "b 0x3fd08",
            "ldr r0, str.error:_permission_denied_on_key__s_n",
            "mov r1, r7",
            "bl fcn.000288b8",
            "mvn r6, 0",
            "b 0x3fd6c",
            "ldr r0, str.error:_unknown_error__d_setting_key__s_n",
            "mov r2, r7",
            "bl fcn.00027184",
            "b 0x3fd08",
            "mov r1, r4",
            "bl fcn.0003fbb4",
            "mov r0, r6",
            "bl sym.imp.close",
            "cmp r5, 0",
            "beq 0x3fd50",
            "mov r0, 1",
            "mov r1, r7",
            "bl fcn.0003fbb4",
            "mov r0, 1",
            "ldr r1, [0x0003fda4]",
            "bl fcn.0003fbb4",
            "mov r0, 1",
            "mov r1, r4",
            "mov r6, 0",
            "bl fcn.0003fbb4",
            "mov r0, 1",
            "ldr r1, aav.0x0005c340",
            "bl fcn.0003fbb4",
            "mov r0, r8",
            "bl sym.imp.free",
            "mov r0, r7",
            "bl sym.imp.free",
            "mov r0, r6",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.00040084": {
        "function_address": "0x00040084",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "sub sp, sp, 0x68",
            "mov r8, r0",
            "mov r7, r1",
            "mov sl, r2",
            "bl sym.imp.opendir",
            "subs r6, r0, 0",
            "movne r4, 0",
            "movne sb, sp",
            "bne 0x40124",
            "b 0x40140",
            "mov r0, r8",
            "add r1, r1, 0x13",
            "bl fcn.000268c8",
            "subs r5, r0, 0",
            "beq 0x40124",
            "mov r1, sp",
            "bl sym.imp.stat64",
            "cmp r0, 0",
            "beq 0x400e0",
            "mov r0, r5",
            "bl fcn.000288b8",
            "b 0x4011c",
            "ldr r3, [sp, 0x10]",
            "and r3, r3, 0xf000",
            "cmp r3, 0x4000",
            "bne 0x40104",
            "mov r0, r5",
            "mov r1, r7",
            "mov r2, sl",
            "bl fcn.00040084",
            "b 0x4011c",
            "ldr r0, str._proc_sys_",
            "bl sym.imp.strlen",
            "mov r1, r7",
            "add r0, r5, r0",
            "bl fcn.0003fef8",
            "orr r4, r4, r0",
            "mov r0, r5",
            "bl sym.imp.free",
            "mov r0, r6",
            "bl sym.imp.readdir64",
            "subs r1, r0, 0",
            "bne 0x400b0",
            "mov r0, r6",
            "bl sym.imp.closedir",
            "b 0x40144",
            "mvn r4, 0",
            "mov r0, r4",
            "add sp, sp, 0x68",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "fcn.0003fef8": {
        "function_address": "0x0003fef8",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sl, lr}",
            "subs r4, r0, 0",
            "sub sp, sp, 0x400",
            "mov r8, r1",
            "sub sp, sp, 0xc",
            "beq 0x3ff1c",
            "ldrb r3, [r4]",
            "cmp r3, 0",
            "bne 0x3ff28",
            "ldr r0, str.error:__s_is_an_unknown_key_n",
            "mov r1, r4",
            "bl fcn.00027184",
            "mov r1, r4",
            "ldr r0, str._proc_sys_",
            "bl fcn.00026868",
            "mov r5, r0",
            "ldr r0, str._proc_sys_",
            "bl sym.imp.strlen",
            "add r0, r5, r0",
            "mov r6, 0x2f",
            "bl fcn.00029ed8",
            "mov r4, r0",
            "b 0x3ff58",
            "strb r6, [r0]",
            "mov r0, r5",
            "mov r1, 0x2e",
            "bl sym.imp.strchr",
            "cmp r0, 0",
            "bne 0x3ff54",
            "b 0x3ff78",
            "strb r6, [r0]",
            "b 0x3ff7c",
            "mov r6, 0x2e",
            "mov r0, r4",
            "mov r1, 0x2f",
            "bl sym.imp.strchr",
            "cmp r0, 0",
            "bne 0x3ff70",
            "mov r0, r5",
            "ldr r1, [0x00040070]",
            "bl sym.imp.fopen64",
            "subs r6, r0, 0",
            "bne 0x40020",
            "ldr r3, [0x00040074]",
            "ldr r3, [r3]",
            "ldr r1, [r3]",
            "cmp r1, 2",
            "beq 0x3ffc4",
            "cmp r1, 0xd",
            "beq 0x3ffcc",
            "b 0x3ffe0",
            "ldr r0, str.error:__s_is_an_unknown_key_n",
            "b 0x3ffd0",
            "ldr r0, str.error:_permission_denied_on_key__s_n",
            "mov r1, r4",
            "bl fcn.00027184",
            "mvn r6, 0",
            "b 0x40048",
            "ldr r0, str.error:_unknown_error__d_reading_key__s_n",
            "mov r2, r4",
            "bl fcn.00027184",
            "b 0x3ffd8",
            "cmp r8, 0",
            "beq 0x40010",
            "mov r0, 1",
            "mov r1, r4",
            "bl fcn.0003fbb4",
            "mov r0, 1",
            "ldr r1, [0x00040080]",
            "bl fcn.0003fbb4",
            "mov r0, 1",
            "mov r1, r7",
            "bl fcn.0003fbb4",
            "b 0x40024",
            "add r7, sp, 4",
            "mov r0, r7",
            "mov r1, 0x400",
            "mov r2, r6",
            "bl sym.imp.fgets",
            "subs sl, r0, 0",
            "bne 0x3fff0",
            "mov r0, r6",
            "mov r6, sl",
            "bl sym.imp.fclose",
            "mov r0, r5",
            "bl sym.imp.free",
            "mov r0, r4",
            "bl sym.imp.free",
            "mov r0, r6",
            "add sp, sp, 0xc",
            "add sp, sp, 0x400",
            "pop {r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "fcn.00040358": {
        "function_address": "0x00040358",
        "instructions": [
            "cmp r1, r2",
            "push {r4, r5, r6, lr}",
            "mov r4, r0",
            "blo 0x40374",
            "ldr r1, str.__100_",
            "bl sym.imp.strcpy",
            "b 0x40408",
            "mov r0, 0x3e8",
            "mul r0, r0, r1",
            "mov r1, r2",
            "bl fcn.00055000",
            "mov r1, 0x64",
            "mov r5, r0",
            "bl fcn.00055000",
            "mov r1, 0x64",
            "mov r6, r0",
            "mov r0, r5",
            "bl fcn.000550a8",
            "cmp r6, 0",
            "mov r3, 0x20",
            "addne r6, r6, 0x30",
            "moveq r6, r3",
            "uxtbne r6, r6",
            "mov r5, r1",
            "strb r3, [r4]",
            "mov r0, r1",
            "strb r6, [r4, 1]",
            "mov r1, 0xa",
            "bl fcn.00055000",
            "mov r3, 0x2e",
            "add r0, r0, 0x30",
            "strb r0, [r4, 2]",
            "mov r1, 0xa",
            "strb r3, [r4, 3]",
            "mov r0, r5",
            "bl fcn.000550a8",
            "mov r3, 0x25",
            "add r1, r1, 0x30",
            "strb r3, [r4, 5]",
            "mov r3, 0x20",
            "strb r3, [r4, 6]",
            "mov r3, 0",
            "strb r1, [r4, 4]",
            "strb r3, [r4, 7]",
            "mov r0, r4",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.00028b78": {
        "function_address": "0x00028b78",
        "instructions": [
            "push {r4, lr}",
            "ldr r0, [0x00028b90]",
            "bl fcn.00028a88",
            "ldr r0, [0x00028b94]",
            "pop {r4, lr}",
            "b fcn.00028a88"
        ]
    },
    "fcn.00040414": {
        "function_address": "0x00040414",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x2c",
            "ldr r4, [0x00040608]",
            "ldr r1, [0x0004060c]",
            "ldr r0, [0x00040610]",
            "bl fcn.00029f54"
        ]
    },
    "fcn.0004061c": {
        "function_address": "0x0004061c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "add fp, sp, 0x20",
            "ldr r4, [0x00040b98]",
            "sub sp, sp, 0x13c",
            "sub sb, fp, 0x28",
            "str r0, [fp, -0x130]",
            "sub r8, fp, 0xcc",
            "str r1, [fp, -0x120]",
            "sub sl, fp, 0x30",
            "ldr r1, [0x00040b9c]",
            "sub r6, fp, 0x34",
            "ldr r0, str.meminfo",
            "ldr r5, [r4]",
            "bl fcn.00029f54"
        ]
    },
    "fcn.00040bf8": {
        "function_address": "0x00040bf8",
        "instructions": [
            "push {r4, lr}",
            "ldr r4, [0x00040c1c]",
            "bl fcn.00028b78",
            "ldr r0, [r4]",
            "bl sym.imp.free",
            "mov r3, 0",
            "str r3, [r4]",
            "str r3, [r4, 4]",
            "pop {r4, pc}"
        ]
    },
    "fcn.0004122c": {
        "function_address": "0x0004122c",
        "instructions": [
            "push {r3, lr}",
            "bl fcn.000411e4",
            "rsbs r0, r0, 1",
            "movlo r0, 0",
            "pop {r3, pc}"
        ]
    },
    "fcn.000411e4": {
        "function_address": "0x000411e4",
        "instructions": [
            "mov ip, 0",
            "b 0x411fc",
            "cmp r3, 0",
            "cmpne r3, 0x3d",
            "add ip, ip, 1",
            "beq 0x41220",
            "ldrb r3, [r0, ip]",
            "ldrb r2, [r1, ip]",
            "cmp r3, r2",
            "beq 0x411ec",
            "cmp r3, 0x3d",
            "moveq r3, 0",
            "cmp r2, 0x3d",
            "moveq r2, 0",
            "b 0x41224",
            "mov r2, r3",
            "rsb r0, r2, r3",
            "bx lr"
        ]
    },
    "fcn.00041240": {
        "function_address": "0x00041240",
        "instructions": [
            "push {r3, lr}",
            "ldrb r3, [r0]",
            "lsl r3, r3, 4",
            "b 0x41254",
            "add r3, r3, r2",
            "ldrb r2, [r0], 1",
            "cmp r2, 0x3d",
            "cmpne r2, 0",
            "bne 0x41250",
            "mov r0, r3",
            "mov r1, 0x27",
            "bl fcn.000550a8",
            "ldr r0, [0x0004127c]",
            "add r0, r0, r1, lsl 2",
            "pop {r3, pc}"
        ]
    },
    "fcn.0004128c": {
        "function_address": "0x0004128c",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r4, r0",
            "mov r6, r1",
            "b 0x412b4",
            "ldr r0, [r5, 8]",
            "mov r1, r6",
            "bl fcn.0004122c",
            "cmp r0, 0",
            "bne 0x412c0",
            "mov r4, r5",
            "ldr r5, [r4]",
            "cmp r5, 0",
            "bne 0x4129c",
            "mov r0, r4",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.000414e4": {
        "function_address": "0x000414e4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r4, r0",
            "ldr r6, [0x00041604]",
            "ldr r7, aav.0x00061008",
            "ldr r5, [0x0004160c]",
            "cmp r4, 0",
            "popeq {r4, r5, r6, r7, r8, pc}",
            "ldr r3, [r4]",
            "lsl r2, r3, 1",
            "ldrsh r1, [r7, r2]",
            "ldr r2, [r6]",
            "add r2, r1, r2",
            "str r2, [r6]",
            "cmp r3, 0x19",
            "ldrls pc, [pc, r3, lsl 2]",
            "b 0x41600",
            "ldr r0, [r4, 8]",
            "pop {r4, r5, r6, r7, r8, lr}",
            "b 0x41610",
            "ldr r0, [r4, 0xc]",
            "bl sym.imp.strlen",
            "ldr r3, [r5]",
            "add r3, r3, 1",
            "add r3, r3, r0",
            "str r3, [r5]",
            "b case.0x4151c.2",
            "ldr r0, [r4, 0xc]",
            "bl fcn.000414e4",
            "ldr r0, [r4, 8]",
            "b 0x415f4",
            "ldr r0, [r4, 0xc]",
            "bl 0x41610",
            "ldr r0, [r4, 8]",
            "bl sym.imp.strlen",
            "ldr r3, [r5]",
            "add r3, r3, 1",
            "add r3, r3, r0",
            "str r3, [r5]",
            "b case.0x4151c.25",
            "ldr r0, [r4, 0x10]",
            "b 0x415f4",
            "ldr r0, [r4, 0xc]",
            "bl fcn.000414e4",
            "ldr r4, [r4, 4]",
            "b 0x414f8",
            "pop {r4, r5, r6, r7, r8, pc}",
            "push {r3, r4, r5, lr}",
            "mov r4, r0",
            "ldr r5, [0x00041644]",
            "b 0x41638",
            "ldr r3, [r5]",
            "ldr r0, [r4, 4]",
            "add r3, r3, 8",
            "str r3, [r5]",
            "bl fcn.000414e4",
            "ldr r4, [r4]",
            "cmp r4, 0",
            "bne 0x41620",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "unk.0x41610": {
        "function_address": "0x00041610",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r4, r0",
            "ldr r6, [0x00041604]",
            "ldr r7, aav.0x00061008",
            "ldr r5, [0x0004160c]",
            "cmp r4, 0",
            "popeq {r4, r5, r6, r7, r8, pc}",
            "ldr r3, [r4]",
            "lsl r2, r3, 1",
            "ldrsh r1, [r7, r2]",
            "ldr r2, [r6]",
            "add r2, r1, r2",
            "str r2, [r6]",
            "cmp r3, 0x19",
            "ldrls pc, [pc, r3, lsl 2]",
            "b 0x41600",
            "ldr r0, [r4, 8]",
            "pop {r4, r5, r6, r7, r8, lr}",
            "b 0x41610",
            "ldr r0, [r4, 0xc]",
            "bl sym.imp.strlen",
            "ldr r3, [r5]",
            "add r3, r3, 1",
            "add r3, r3, r0",
            "str r3, [r5]",
            "b case.0x4151c.2",
            "ldr r0, [r4, 0xc]",
            "bl fcn.000414e4",
            "ldr r0, [r4, 8]",
            "b 0x415f4",
            "ldr r0, [r4, 0xc]",
            "bl 0x41610",
            "ldr r0, [r4, 8]",
            "bl sym.imp.strlen",
            "ldr r3, [r5]",
            "add r3, r3, 1",
            "add r3, r3, r0",
            "str r3, [r5]",
            "b case.0x4151c.25",
            "ldr r0, [r4, 0x10]",
            "b 0x415f4",
            "ldr r0, [r4, 0xc]",
            "bl fcn.000414e4",
            "ldr r4, [r4, 4]",
            "b 0x414f8",
            "pop {r4, r5, r6, r7, r8, pc}",
            "push {r3, r4, r5, lr}",
            "mov r4, r0",
            "ldr r5, [0x00041644]",
            "b 0x41638",
            "ldr r3, [r5]",
            "ldr r0, [r4, 4]",
            "add r3, r3, 8",
            "str r3, [r5]",
            "bl fcn.000414e4",
            "ldr r4, [r4]",
            "cmp r4, 0",
            "bne 0x41620",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.00041760": {
        "function_address": "0x00041760",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r4, r0",
            "ldrb r0, [r0]",
            "cmp r0, 0x5f",
            "bne 0x4177c",
            "add r5, r4, 1",
            "b 0x417a0",
            "bl sym.imp.isalpha",
            "cmp r0, 0",
            "beq 0x417b0",
            "b 0x41774",
            "cmp r0, 0x5f",
            "beq 0x417a0",
            "bl sym.imp.isalnum",
            "cmp r0, 0",
            "beq 0x417b0",
            "mov r4, r5",
            "ldrb r0, [r5], 1",
            "cmp r0, 0",
            "bne 0x4178c",
            "mov r0, r4",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.000419b0": {
        "function_address": "0x000419b0",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r5, r0",
            "ldrb r3, [r0]",
            "mov r2, r5",
            "lsl r0, r3, 4",
            "b 0x419d0",
            "add r0, r0, r3",
            "ldrb r3, [r2, 1]!",
            "cmp r3, 0",
            "bne 0x419c8",
            "mov r1, 0x27",
            "bl fcn.000550a8",
            "ldr r3, [0x00041a1c]",
            "ldr r4, [r3, r1, lsl 2]",
            "add r6, r3, r1, lsl 2",
            "b 0x41a0c",
            "mov r0, r5",
            "ldr r1, [r4, 4]",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x41a14",
            "mov r6, r4",
            "ldr r4, [r4]",
            "cmp r4, 0",
            "bne 0x419f0",
            "mov r0, r6",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.00041a4c": {
        "function_address": "0x00041a4c",
        "instructions": [
            "cmp r1, 1",
            "push {r0, r1, r2, r4, r5, r6, r7, lr}",
            "mov r7, r1",
            "str r0, [sp, 4]",
            "ble 0x41b04",
            "asr r6, r1, 1",
            "mov r5, r0",
            "mov r2, 0",
            "mov r3, r6",
            "b 0x41a7c",
            "mov r2, r5",
            "ldr r5, [r5]",
            "subs r3, r3, 1",
            "bpl 0x41a74",
            "mov r3, 0",
            "mov r1, r6",
            "str r3, [r2]",
            "bl fcn.00041a4c",
            "rsb r1, r6, r7",
            "mov r4, r0",
            "mov r0, r5",
            "add r6, sp, 4",
            "bl fcn.00041a4c",
            "mov r5, r0",
            "b 0x41ab8",
            "mov r6, r5",
            "mov r5, r3",
            "ldr r0, [r5, 4]",
            "ldr r1, [r4, 4]",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bge 0x41ae4",
            "str r5, [r6]",
            "ldr r3, [r5]",
            "cmp r3, 0",
            "bne 0x41ab0",
            "str r4, [r5]",
            "b 0x41b00",
            "str r4, [r6]",
            "ldr r3, [r4]",
            "cmp r3, 0",
            "movne r6, r4",
            "movne r4, r3",
            "bne 0x41ab8",
            "str r5, [r4]",
            "ldr r0, [sp, 4]",
            "pop {r1, r2, r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.00041e58": {
        "function_address": "0x00041e58",
        "instructions": [
            "push {r0, r1, r2, r4, r5, r6, r7, lr}",
            "mov r4, r0",
            "add r5, sp, 4",
            "ldr r7, [0x00041ea4]",
            "b 0x41e90",
            "ldr r6, [r7]",
            "ldr r0, [r4, 4]",
            "str r6, [r5]",
            "add r3, r6, 8",
            "str r3, [r7]",
            "bl fcn.00041d0c",
            "ldr r4, [r4]",
            "ldr r5, [r5]",
            "str r0, [r6, 4]",
            "cmp r4, 0",
            "bne 0x41e6c",
            "str r4, [r5]",
            "ldr r0, [sp, 4]",
            "pop {r1, r2, r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.00041d0c": {
        "function_address": "0x00041d0c",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "subs r5, r0, 0",
            "moveq r4, r5",
            "beq 0x41e48",
            "ldr r3, [r5]",
            "ldr r2, [0x00041e50]",
            "ldr r0, aav.0x00061008",
            "lsl r1, r3, 1",
            "ldr r4, [r2]",
            "ldrsh r1, [r0, r1]",
            "add r1, r4, r1",
            "str r1, [r2]",
            "cmp r3, 0x19",
            "ldrls pc, [pc, r3, lsl 2]",
            "b 0x41e40",
            "ldr r0, [r5, 8]",
            "bl fcn.00041e58",
            "ldr r3, [r5, 4]",
            "str r0, [r4, 8]",
            "str r3, [r4, 4]",
            "b 0x41e40",
            "ldr r0, [r5, 0xc]",
            "bl fcn.00041cd0",
            "b 0x41ddc",
            "ldr r0, [r5, 0xc]",
            "bl fcn.00041d0c",
            "str r0, [r4, 0xc]",
            "ldr r0, [r5, 8]",
            "bl fcn.00041d0c",
            "b 0x41e00",
            "ldr r0, [r5, 0xc]",
            "bl fcn.00041e58",
            "str r0, [r4, 0xc]",
            "ldr r0, [r5, 8]",
            "bl fcn.00041cd0",
            "str r0, [r4, 8]",
            "b case.0x41d40.25",
            "ldr r0, [r5, 0x10]",
            "bl fcn.00041d0c",
            "ldr r3, [r5, 0xc]",
            "str r0, [r4, 0x10]",
            "str r3, [r4, 0xc]",
            "b 0x41e2c",
            "ldr r0, [r5, 0xc]",
            "bl fcn.00041d0c",
            "str r0, [r4, 0xc]",
            "ldr r3, [r5, 8]",
            "str r3, [r4, 8]",
            "ldr r0, [r5, 4]",
            "bl fcn.00041d0c",
            "str r0, [r4, 4]",
            "ldr r3, [r5]",
            "str r3, [r4]",
            "mov r0, r4",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.00041cd0": {
        "function_address": "0x00041cd0",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r6, r0",
            "ldr r5, [0x00041d08]",
            "mov r1, r6",
            "ldr r4, [r5]",
            "mov r0, r4",
            "bl sym.imp.strcpy",
            "mov r0, r6",
            "bl sym.imp.strlen",
            "add r0, r0, 1",
            "add r0, r4, r0",
            "str r0, [r5]",
            "mov r0, r4",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.00041ea8": {
        "function_address": "0x00041ea8",
        "instructions": [
            "push {r3, lr}",
            "ldr r3, [0x00041ed4]",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "ldr r3, [0x00041ed8]",
            "mov r1, 1",
            "str r0, [r3]",
            "ldr r3, [0x00041edc]",
            "ldr r0, [r3]",
            "bl sym.imp.longjmp",
            "andeq fp, r6, r0, lsl 6",
            "andeq fp, r6, r0, lsr 7",
            "muleq r6, ip, r3"
        ]
    },
    "fcn.00041fbc": {
        "function_address": "0x00041fbc",
        "instructions": [
            "ldr r3, [0x00042044]",
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r6, r0",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "ldr r8, [0x00042048]",
            "ldr r4, [0x0004204c]",
            "ldr r7, [0x00042050]",
            "b 0x42034",
            "ldrh r3, [r0, 8]",
            "cmp r3, 0",
            "ldreq r3, [r0, 4]",
            "beq 0x42000",
            "cmp r3, 2",
            "bne 0x42018",
            "ldr r3, [r7]",
            "cmp r3, r6",
            "blt 0x42018",
            "ldr r3, [r0]",
            "str r3, [r5]",
            "bl sym.imp.free",
            "b 0x4201c",
            "mov r5, r0",
            "ldr r0, [r5]",
            "cmp r0, 0",
            "bne 0x41fe4",
            "add r4, r4, 4",
            "cmp r4, r8",
            "beq 0x4203c",
            "mov r5, r4",
            "b 0x4201c",
            "pop {r4, r5, r6, r7, r8, lr}",
            "b fcn.00041f80"
        ]
    },
    "fcn.00041f80": {
        "function_address": "0x00041f80",
        "instructions": [
            "push {r3, lr}",
            "ldr r3, [0x00041fb4]",
            "ldr r2, [r3]",
            "sub r2, r2, 1",
            "str r2, [r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "popne {r3, pc}",
            "ldr r3, [0x00041fb8]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "popeq {r3, pc}",
            "bl fcn.00041ee0",
            "andeq fp, r6, r0, lsl 6",
            "andeq sl, r6, r8, lsl 26"
        ]
    },
    "fcn.00041ee0": {
        "function_address": "0x00041ee0",
        "instructions": [
            "ldr r3, [0x00041f6c]",
            "mov r4, 0",
            "push {r0, r1, r2, lr}",
            "mov r0, sp",
            "str r4, [r3]",
            "bl sym.imp.sigemptyset",
            "mov r0, 2",
            "mov r1, sp",
            "mov r2, r4",
            "bl sym.imp.sigprocmask",
            "ldr r3, [0x00041f70]",
            "ldrb r3, [r3, 1]",
            "cmp r3, r4",
            "beq 0x41f64",
            "ldr r3, [0x00041f74]",
            "ldr r3, [r3, 8]",
            "cmp r3, r4",
            "bne 0x41f64",
            "ldr r3, [0x00041f78]",
            "ldr r0, [r3]",
            "cmp r0, r4",
            "bne 0x41f48",
            "ldr r3, [0x00041f7c]",
            "ldrb r3, [r3, 3]",
            "cmp r3, r4",
            "bne 0x41f68",
            "mov r1, 0",
            "mov r0, 2",
            "bl sym.imp.signal",
            "mov r0, 2",
            "bl sym.imp.raise",
            "mov r0, 0",
            "b 0x41f68",
            "mov r0, 5",
            "bl fcn.00041ea8",
            "andeq sl, r6, r8, lsl 26",
            "andeq sl, r6, ip, lsl 30",
            "muleq r6, r0, r1",
            "andeq sl, r6, ip, ror 25",
            "andeq fp, r6, r0, ror 5"
        ]
    },
    "fcn.00042164": {
        "function_address": "0x00042164",
        "instructions": [
            "push {r2, r3}",
            "push {r0, r1, r4, lr}",
            "add r3, sp, 0x14",
            "str r3, [sp, 4]",
            "ldr r3, [0x000421a8]",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "ldr r2, [sp, 0x10]",
            "ldr r3, [sp, 4]",
            "bl sym.imp.vsnprintf",
            "mov r4, r0",
            "bl fcn.00041f80",
            "mov r0, r4",
            "pop {r2, r3, r4, lr}",
            "add sp, sp, 8",
            "bx lr"
        ]
    },
    "sym.imp.vsnprintf": {
        "function_address": "0x0000c0b0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x5ac]!"
        ]
    },
    "fcn.00041800": {
        "function_address": "0x00041800",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r4, r0",
            "ldr r3, [r0, 0xc]",
            "tst r3, 1",
            "orrne r3, r3, 2",
            "strne r3, [r0, 0xc]",
            "bne 0x4183c",
            "ldr r5, [r0]",
            "ldr r0, [r0, 4]",
            "bl sym.imp.free",
            "ldr r0, [r4, 8]",
            "bl sym.imp.free",
            "mov r0, r4",
            "mov r4, r5",
            "bl sym.imp.free",
            "mov r0, r4",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.0004240c": {
        "function_address": "0x0004240c",
        "instructions": [
            "push {r4, lr}",
            "bl fcn.000419b0",
            "mov r4, r0",
            "ldr r3, [r0]",
            "cmp r3, 0",
            "beq 0x4244c",
            "ldr r3, [0x00042454]",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "ldr r0, [r0]",
            "bl fcn.00041800",
            "str r0, [r4]",
            "bl fcn.00041f80",
            "mov r0, 0",
            "pop {r4, pc}",
            "mov r0, 1",
            "pop {r4, pc}"
        ]
    },
    "fcn.00042458": {
        "function_address": "0x00042458",
        "instructions": [
            "ldr r3, [0x00042520]",
            "push {r4, lr}",
            "ldr r3, [r3]",
            "ldr r4, [r3, 0x1c]",
            "ldr r3, [0x00042524]",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "ldr r3, [r4, 0xc]",
            "cmp r3, 0",
            "beq 0x424dc",
            "ldr r2, [0x00042528]",
            "ldr r0, [r4, 0x10]",
            "ldr r3, [r3, 8]",
            "ldr r2, [r2]",
            "ldrb r2, [r2, -1]",
            "cmp r2, 0x20",
            "cmpne r2, 9",
            "ldreq r2, [0x0004252c]",
            "ldreq r1, [r2]",
            "orreq r1, r1, 1",
            "streq r1, [r2]",
            "cmp r0, r3",
            "beq 0x424bc",
            "bl sym.imp.free",
            "ldr r3, [r4, 0xc]",
            "ldr r2, [r3, 0xc]",
            "tst r2, 2",
            "bic r1, r2, 1",
            "str r1, [r3, 0xc]",
            "beq 0x424dc",
            "ldr r0, [r3, 4]",
            "bl fcn.0004240c",
            "ldr r2, [r4, 4]",
            "ldr r3, [0x00042528]",
            "str r2, [r3]",
            "ldr r2, [r4, 8]",
            "ldr r3, [0x00042530]",
            "str r2, [r3]",
            "ldr r3, [0x00042520]",
            "ldr r2, [r4]",
            "ldr r3, [r3]",
            "str r2, [r3, 0x1c]",
            "add r3, r3, 0x20",
            "cmp r4, r3",
            "beq 0x42518",
            "mov r0, r4",
            "bl sym.imp.free",
            "pop {r4, lr}",
            "b fcn.00041f80"
        ]
    },
    "fcn.00042534": {
        "function_address": "0x00042534",
        "instructions": [
            "ldr r3, [0x000425d0]",
            "push {r4, r5, r6, lr}",
            "ldr r5, [r3]",
            "ldr r3, [0x000425d4]",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "ldr r0, [r5, 8]",
            "cmp r0, 0",
            "blt 0x42560",
            "bl sym.imp.close",
            "ldr r0, [r5, 0x18]",
            "cmp r0, 0",
            "beq 0x42578",
            "bl sym.imp.free",
            "b 0x42578",
            "bl fcn.00042458",
            "ldr r3, [r5, 0x1c]",
            "cmp r3, 0",
            "bne 0x42574",
            "ldr r4, [r5]",
            "mov r0, r5",
            "ldr r3, [0x000425d0]",
            "str r4, [r3]",
            "bl sym.imp.free",
            "ldr r2, [r4, 0xc]",
            "ldr r3, [0x000425d8]",
            "str r2, [r3]",
            "ldr r2, [r4, 0x10]",
            "ldr r3, [0x000425dc]",
            "str r2, [r3]",
            "ldr r2, [r4, 0x14]",
            "ldr r3, [0x000425e0]",
            "str r2, [r3]",
            "ldr r2, [r4, 4]",
            "ldr r3, [0x000425e4]",
            "str r2, [r3]",
            "pop {r4, r5, r6, lr}",
            "b fcn.00041f80"
        ]
    },
    "fcn.00042614": {
        "function_address": "0x00042614",
        "instructions": [
            "ldr r3, [0x00042634]",
            "push {r4, lr}",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "bl sym.imp.fputs",
            "pop {r4, lr}",
            "b fcn.00041f80"
        ]
    },
    "fcn.00042678": {
        "function_address": "0x00042678",
        "instructions": [
            "ldr r3, obj.stderr",
            "push {r4, lr}",
            "ldr r1, [r3]",
            "bl fcn.00042614",
            "pop {r4, lr}",
            "b fcn.00042648"
        ]
    },
    "fcn.000421ac": {
        "function_address": "0x000421ac",
        "instructions": [
            "ands r3, r1, 0x7f",
            "push {r4, r5, r6, lr}",
            "mov r6, r0",
            "mov r5, r1",
            "beq 0x42230",
            "and r1, r1, 0xff",
            "cmp r1, 0x7f",
            "ubfxeq r3, r5, 8, 8",
            "cmp r2, 0",
            "beq 0x421f4",
            "cmp r3, 2",
            "cmpne r3, 0xd",
            "movne r4, 0",
            "moveq r4, 1",
            "moveq r4, 0",
            "beq 0x42268",
            "cmp r1, 0x7f",
            "beq 0x42268",
            "and r0, r3, 0x7f",
            "bl sym.imp.strsignal",
            "mov r1, 0x20",
            "mov r2, r0",
            "mov r0, r6",
            "bl fcn.00042164",
            "tst r5, 0x80",
            "mov r4, r0",
            "beq 0x42268",
            "add r0, r6, r0",
            "mov r1, 0x10",
            "ldr r2, [0x00042270]",
            "bl fcn.00042164",
            "add r4, r4, r0",
            "b 0x42268",
            "cmp r2, 0",
            "bne 0x42264",
            "ubfx r3, r1, 8, 8",
            "cmp r3, 0",
            "beq 0x42254",
            "mov r1, 0x10",
            "ldr r2, str.Done__d_",
            "pop {r4, r5, r6, lr}",
            "b fcn.00042164",
            "mov r1, 0x10",
            "ldr r2, str.Done",
            "pop {r4, r5, r6, lr}",
            "b fcn.00042164",
            "mov r4, r3",
            "mov r0, r4",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.imp.strsignal": {
        "function_address": "0x0000c440",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x34c]!"
        ]
    },
    "sym.imp.sigprocmask": {
        "function_address": "0x0000bc24",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x8b4]!"
        ]
    },
    "fcn.00042938": {
        "function_address": "0x00042938",
        "instructions": [
            "ldr r3, [0x0004296c]",
            "push {r4, lr}",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "ldr r3, obj.stdout",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, obj.stderr",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "pop {r4, lr}",
            "b fcn.00041f80"
        ]
    },
    "fcn.00053348": {
        "function_address": "0x00053348",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "cmp r2, 0x400",
            "movge r2, 0x400",
            "sub sp, sp, 0x14",
            "mov r5, 0",
            "cmp r3, r5",
            "mov r6, r0",
            "str r2, [sp, 4]",
            "mov r4, r1",
            "ldr r2, [0x0005394c]",
            "mov r0, r5",
            "ldr sl, [0x00053950]",
            "ldr sb, [0x00053954]",
            "moveq r3, r2",
            "ldr r8, [0x00053958]",
            "str r3, [sl]",
            "ldr fp, [0x0005395c]",
            "ldr r3, [0x00053960]",
            "str r5, [sp, 8]",
            "str r5, [fp]",
            "str r1, [r3]",
            "str r5, [r8]",
            "strb r5, [r1]",
            "mov r1, sb",
            "bl sym.imp.tcgetattr",
            "mov lr, sb",
            "ldr r7, [0x00053964]",
            "ldm lr!, {r0, r1, r2, r3}",
            "add sb, sp, 0xf",
            "mov ip, r7",
            "stm ip!, {r0, r1, r2, r3}",
            "ldm lr!, {r0, r1, r2, r3}",
            "stm ip!, {r0, r1, r2, r3}",
            "ldm lr!, {r0, r1, r2, r3}",
            "stm ip!, {r0, r1, r2, r3}",
            "ldr r3, [r7, 0xc]",
            "ldm lr, {r0, r1, r2}",
            "bic r3, r3, 0x4b",
            "str r3, [r7, 0xc]",
            "mov r3, 1",
            "strb r3, [r7, 0x17]",
            "stm ip, {r0, r1, r2}",
            "mov r2, r7",
            "strb r5, [r7, 0x16]",
            "mov r1, r5",
            "mov r0, r5",
            "strb r5, [r7, 0x11]",
            "mov r7, r8",
            "bl sym.imp.tcsetattr",
            "ldr r1, fcn.00053218",
            "mov r0, 0x1c",
            "bl sym.imp.signal",
            "ldr r3, [0x0005396c]",
            "str r0, [r3]",
            "mov r0, r5",
            "bl fcn.00053218",
            "ldr r3, [0x00053970]",
            "mov r0, r6",
            "str r6, [r3]",
            "bl sym.imp.strlen",
            "ldr r3, [0x00053974]",
            "ldr r6, [0x00053978]",
            "str r0, [r3]",
            "bl fcn.00052018",
            "ldr r2, [sp, 4]",
            "sub r2, r2, 2",
            "str r2, [sp, 4]",
            "ldr r3, obj.stdout",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "mov r0, 0",
            "mov r1, sb",
            "mov r2, 1",
            "bl fcn.00028f70",
            "cmp r0, 0",
            "ble 0x53560",
            "ldrb r5, [sp, 0xf]",
            "cmp r5, 0xa",
            "beq 0x53524",
            "bhi 0x534cc",
            "cmp r5, 4",
            "beq 0x53548",
            "bhi 0x534ac",
            "cmp r5, 2",
            "beq 0x537a4",
            "bhi 0x53530",
            "cmp r5, 1",
            "beq 0x537b4",
            "b 0x537d4",
            "cmp r5, 6",
            "beq 0x5379c",
            "blo 0x537bc",
            "cmp r5, 8",
            "beq 0x53570",
            "cmp r5, 9",
            "beq 0x5372c",
            "b 0x537d4",
            "cmp r5, 0x10",
            "beq 0x53738",
            "bhi 0x534f8",
            "cmp r5, 0xc",
            "beq 0x53594",
            "blo 0x53578",
            "cmp r5, 0xd",
            "beq 0x53524",
            "cmp r5, 0xe",
            "beq 0x5375c",
            "b 0x537d4",
            "cmp r5, 0x17",
            "beq 0x535e4",
            "bhi 0x53510",
            "cmp r5, 0x15",
            "beq 0x535b0",
            "b 0x537d4",
            "cmp r5, 0x1b",
            "beq 0x53630",
            "cmp r5, 0x7f",
            "beq 0x53570",
            "b 0x537d4",
            "bl fcn.000521bc",
            "mov r8, 1",
            "b 0x5384c",
            "bl fcn.000521bc",
            "ldr r3, [0x00053958]",
            "mov r2, 0",
            "mvn r8, 0",
            "str r2, [r3]",
            "b 0x5384c",
            "ldr r3, [r7]",
            "cmp r3, 0",
            "bne 0x537ac",
            "ldr r2, [0x00053980]",
            "ldr r2, [r2]",
            "str r3, [r2]",
            "ldr r3, [0x00053958]",
            "mvn r8, 0",
            "str r8, [r3]",
            "b 0x5384c",
            "bl fcn.00053320",
            "b 0x53938",
            "ldr r3, [r6]",
            "mov r2, 0",
            "ldr r0, [0x00053984]",
            "strb r2, [r4, r3]",
            "str r3, [r7]",
            "bl sym.imp.printf",
            "b 0x53938",
            "ldr r0, aav.0x00061ee4",
            "bl sym.imp.printf",
            "ldr r1, [r7]",
            "mov r0, 0",
            "ldr r3, [r6]",
            "rsb r1, r3, r1",
            "b 0x53794",
            "ldr r5, [r6]",
            "cmp r5, 0",
            "beq 0x53938",
            "add r1, r4, r5",
            "mov r0, r4",
            "bl sym.imp.strcpy",
            "ldr r1, [r7]",
            "ldr r2, [0x0005395c]",
            "rsb r1, r5, r1",
            "str r1, [r7]",
            "ldr r0, [r2]",
            "b 0x53794",
            "bl fcn.00053320",
            "ldr r3, [r6]",
            "cmp r3, 0",
            "beq 0x5360c",
            "add r3, r4, r3",
            "ldrb r0, [r3, -1]",
            "bl sym.imp.isspace",
            "cmp r0, 0",
            "bne 0x535e0",
            "b 0x5360c",
            "bl fcn.00053320",
            "ldr r3, [r6]",
            "cmp r3, 0",
            "beq 0x53938",
            "add r3, r4, r3",
            "ldrb r0, [r3, -1]",
            "bl sym.imp.isspace",
            "cmp r0, 0",
            "beq 0x53608",
            "b 0x53938",
            "mov r0, 0",
            "mov r1, sb",
            "mov r2, 1",
            "bl fcn.00028f70",
            "cmp r0, 0",
            "ble 0x53560",
            "ldrb r3, [sp, 0xf]",
            "cmp r3, 0x5b",
            "cmpne r3, 0x4f",
            "bne 0x53670",
            "mov r0, 0",
            "mov r1, sb",
            "mov r2, 1",
            "bl fcn.00028f70",
            "cmp r0, 0",
            "ble 0x53560",
            "ldrb r3, [sp, 0xf]",
            "sub r3, r3, 0x31",
            "uxtb r3, r3",
            "cmp r3, 8",
            "bhi 0x536ac",
            "mov r0, 0",
            "add r1, sp, 0xe",
            "mov r2, 1",
            "bl fcn.00028f70",
            "cmp r0, 0",
            "ble 0x53560",
            "ldrb r3, [sp, 0xe]",
            "cmp r3, 0x7e",
            "movne r3, 0",
            "strbne r3, [sp, 0xf]",
            "ldrb r3, [sp, 0xf]",
            "cmp r3, 0x41",
            "beq 0x53738",
            "bhi 0x536f8",
            "cmp r3, 0x34",
            "beq 0x537bc",
            "bhi 0x536e4",
            "cmp r3, 0x31",
            "beq 0x537b4",
            "cmp r3, 0x33",
            "beq 0x537ac",
            "cmp r3, 9",
            "beq 0x5372c",
            "b 0x537c4",
            "cmp r3, 0x37",
            "beq 0x537b4",
            "cmp r3, 0x38",
            "beq 0x537bc",
            "b 0x537c4",
            "cmp r3, 0x44",
            "beq 0x537a4",
            "bhi 0x53718",
            "cmp r3, 0x42",
            "beq 0x5375c",
            "cmp r3, 0x43",
            "beq 0x5379c",
            "b 0x537c4",
            "cmp r3, 0x46",
            "beq 0x537bc",
            "cmp r3, 0x48",
            "beq 0x537b4",
            "b 0x537c4",
            "add r0, sp, 8",
            "bl fcn.0005237c",
            "b 0x53938",
            "ldr r3, [sl]",
            "ldr r2, [r3]",
            "tst r2, 1",
            "beq 0x537cc",
            "ldr r3, [r3, 0xc]",
            "cmp r3, 0",
            "ble 0x537cc",
            "bl fcn.0005224c",
            "b 0x53768",
            "bl fcn.000522cc",
            "cmp r0, 0",
            "beq 0x53938",
            "ldr r3, [sl]",
            "mov r0, r4",
            "ldr r2, [r3, 0xc]",
            "add r2, r2, 4",
            "ldr r1, [r3, r2, lsl 2]",
            "bl sym.imp.strcpy",
            "bl sym.imp.strlen",
            "ldr r3, [0x0005395c]",
            "mov r1, 0",
            "str r0, [r7]",
            "ldr r0, [r3]",
            "bl fcn.000521f0",
            "b 0x53938",
            "bl fcn.00052150",
            "b 0x53938",
            "mov r0, 1",
            "b 0x53844",
            "bl fcn.000532bc",
            "b 0x53938",
            "ldr r0, [r6]",
            "b 0x53844",
            "bl fcn.00052188",
            "b 0x53938",
            "mov r3, 0",
            "strb r3, [sp, 0xf]",
            "bl fcn.00052078",
            "b 0x53938",
            "cmp r5, 0x9b",
            "cmpne r5, 0x1f",
            "movhi r0, 0",
            "movls r0, 1",
            "bls 0x53938",
            "ldr r3, [r7]",
            "ldr r2, [sp, 4]",
            "cmp r3, r2",
            "bhs 0x53938",
            "ldr r8, [r6]",
            "add r2, r3, 1",
            "str r2, [r7]",
            "cmp r8, r3",
            "add r1, r4, r8",
            "bne 0x53824",
            "strb r5, [r4, r8]",
            "strb r0, [r1, 1]",
            "mov r0, 0x20",
            "bl fcn.0005208c",
            "b 0x53938",
            "add fp, r8, 1",
            "rsb r2, r8, r2",
            "add r0, r4, fp",
            "bl sym.imp.memmove",
            "strb r5, [r4, r8]",
            "bl fcn.00052188",
            "ldr r0, [r6]",
            "rsb r0, fp, r0",
            "bl fcn.00051f54",
            "b 0x53938",
            "ldr r3, [0x00053958]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x538d4",
            "ldr r3, [0x00053950]",
            "ldr r6, [r3]",
            "ldr r3, [r6]",
            "tst r3, 1",
            "beq 0x538d4",
            "ldr r5, [r6, 8]",
            "mov sl, 0",
            "ldr r0, [r6, 0x4c]",
            "bl sym.imp.free",
            "cmp r5, 0xe",
            "str sl, [r6, 0x4c]",
            "ble 0x538b0",
            "mov r7, r6",
            "mov r5, sl",
            "ldr r0, [r7, 0x10]!",
            "bl sym.imp.free",
            "add r5, r5, 1",
            "ldr r3, [r7, 4]!",
            "cmp r5, 0xe",
            "str r3, [r7, -4]",
            "bne 0x5389c",
            "mov r0, r4",
            "bl fcn.00029ed8",
            "add r3, r5, 4",
            "add r5, r5, 1",
            "str r0, [r6, r3, lsl 2]",
            "ldr r3, [0x00053950]",
            "ldr r3, [r3]",
            "str r5, [r3, 0xc]",
            "str r5, [r3, 8]",
            "cmp r8, 0",
            "ble 0x538fc",
            "ldr r2, [0x00053958]",
            "mov r1, 0xa",
            "ldr r3, [r2]",
            "strb r1, [r4, r3]",
            "add r3, r3, 1",
            "str r3, [r2]",
            "mov r2, 0",
            "strb r2, [r4, r3]",
            "mov r0, 0",
            "ldr r2, [0x00053954]",
            "mov r1, r0",
            "bl sym.imp.tcsetattr",
            "ldr r3, [0x0005396c]",
            "mov r0, 0x1c",
            "ldr r1, [r3]",
            "bl sym.imp.signal",
            "ldr r3, obj.stdout",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "ldr r3, [0x00053958]",
            "ldr r0, [r3]",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldrb r3, [sp, 0xf]",
            "cmp r3, 9",
            "movne r3, 0",
            "strne r3, [sp, 8]",
            "b 0x53454"
        ]
    },
    "fcn.00053218": {
        "function_address": "0x00053218",
        "instructions": [
            "push {r0, r1, r2, r4, r5, lr}",
            "mov r4, r0",
            "mov r0, 0",
            "add r1, sp, 4",
            "mov r2, r0",
            "bl fcn.0002a474",
            "ldr r1, [sp, 4]",
            "cmp r4, 0",
            "ldr r3, [0x000532a0]",
            "str r1, [r3]",
            "beq 0x5329c",
            "ldr r3, [0x000532a4]",
            "ldr r5, [r3]",
            "ldr r3, [0x000532a8]",
            "ldr r0, [r3]",
            "add r0, r5, r0",
            "bl fcn.00055000",
            "ldr r2, [0x000532ac]",
            "ldr r3, [0x000532b0]",
            "ldr r1, [r2]",
            "ldr r3, [r3]",
            "rsb r1, r5, r1",
            "cmp r0, r3",
            "movlt r0, r3",
            "bl fcn.000521f0",
            "ldr r3, obj.stdout",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "cmp r4, 0x1c",
            "bne 0x5329c",
            "mov r0, r4",
            "ldr r1, fcn.00053218",
            "bl sym.imp.signal",
            "pop {r1, r2, r3, r4, r5, pc}"
        ]
    },
    "fcn.00052018": {
        "function_address": "0x00052018",
        "instructions": [
            "push {r3, lr}",
            "ldr r3, [0x00052060]",
            "ldr r0, [r3]",
            "cmp r0, 0",
            "beq 0x52038",
            "ldr r3, obj.stdout",
            "ldr r1, [r3]",
            "bl sym.imp.fputs",
            "ldr r3, [0x00052068]",
            "ldr r2, [r3]",
            "ldr r3, [0x0005206c]",
            "str r2, [r3]",
            "mov r3, 0",
            "ldr r2, [0x00052070]",
            "str r3, [r2]",
            "ldr r2, [0x00052074]",
            "str r3, [r2]",
            "pop {r3, pc}"
        ]
    },
    "fcn.000521bc": {
        "function_address": "0x000521bc",
        "instructions": [
            "push {r4, lr}",
            "bl fcn.00052188",
            "ldr r3, [0x000521e8]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "popeq {r4, pc}",
            "ldr r3, obj.stdout",
            "mov r0, 0xa",
            "ldr r1, [r3]",
            "pop {r4, lr}",
            "b sym.imp.fputc"
        ]
    },
    "fcn.00053320": {
        "function_address": "0x00053320",
        "instructions": [
            "ldr r3, [0x00053344]",
            "push {r4, lr}",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "popeq {r4, pc}",
            "mov r0, 1",
            "bl fcn.00051f54",
            "pop {r4, lr}",
            "b fcn.000532bc"
        ]
    },
    "fcn.0005237c": {
        "function_address": "0x0005237c",
        "instructions": [
            "ldr r3, [0x000531e0]",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x2480",
            "sub sp, sp, 0x1c",
            "ldr r3, [r3]",
            "str r0, [sp, 0x18]",
            "ldr r3, [r3]",
            "tst r3, 4",
            "beq 0x531d4",
            "ldr r4, [r0]",
            "cmp r4, 0",
            "bne 0x53030",
            "mov r3, 1",
            "add r7, sp, 0x20",
            "str r3, [r0]",
            "add r0, sp, 0x2000",
            "ldr r3, [0x000531e4]",
            "add r0, r0, 0x28",
            "ldr r5, [r3]",
            "ldr r3, [0x000531e8]",
            "mov r2, r5",
            "ldr r1, [r3]",
            "bl sym.imp.strncpy",
            "add r1, sp, 0x1040",
            "mov r3, r4",
            "add r1, r1, 0x18",
            "strb r4, [r0, r5]",
            "add r2, sp, 0x2000",
            "add r2, r2, 0x28",
            "ldrb r5, [r2, r3]",
            "sub r2, r1, 0x34",
            "cmp r5, 0",
            "str r5, [r2, r4]",
            "bne 0x52428",
            "add r0, sp, 0x2480",
            "ldr r1, [0x000531ec]",
            "add r0, r0, 0x18",
            "add r4, r2, 4",
            "add r3, r0, r3, lsl 2",
            "mvn r0, 0",
            "mov r6, 0x1000",
            "str r0, [r3, r1]",
            "b 0x52480",
            "str r3, [r7, r4]",
            "add r3, r3, 1",
            "add r4, r4, 4",
            "b 0x523e8",
            "cmp r3, 0x5c",
            "bne 0x52470",
            "mov r1, r4",
            "mov r2, r6",
            "sub r0, r4, 4",
            "add r5, r5, 1",
            "bl sym.imp.memmove",
            "mov r0, r7",
            "add r1, r7, 4",
            "mov r2, r6",
            "bl sym.imp.memmove",
            "ldr r3, [r4, -4]",
            "orr r3, r3, 0x100",
            "str r3, [r4, -4]",
            "add r5, r5, 1",
            "add r4, r4, 4",
            "sub r6, r6, 8",
            "add r7, r7, 4",
            "add r1, sp, 0x2480",
            "add r1, r1, 0x18",
            "add r3, r1, r5",
            "ldrb r3, [r3, -0x470]",
            "cmp r3, 0",
            "bne 0x52438",
            "add r2, sp, 0x1000",
            "add r2, r2, 0x24",
            "b 0x524e0",
            "cmp r4, 0x27",
            "cmpne r4, 0x22",
            "bne 0x524cc",
            "cmp r3, 0",
            "moveq r3, r4",
            "beq 0x524e0",
            "cmp r4, r3",
            "moveq r3, 0",
            "beq 0x524e0",
            "b 0x524d8",
            "cmp r3, 0",
            "cmpne r4, 0x24",
            "beq 0x524e0",
            "orr r4, r4, 0x100",
            "str r4, [r2, -4]",
            "ldr r4, [r2], 4",
            "cmp r4, 0",
            "bne 0x524a4",
            "add r7, sp, 0x1000",
            "mov r3, r4",
            "add r7, r7, 0x24",
            "add r6, sp, 0x20",
            "b 0x52588",
            "add ip, sp, 0x2480",
            "add r2, r3, 1",
            "add ip, ip, 0x18",
            "cmp r3, 0",
            "add r2, ip, r2, lsl 2",
            "sub r2, r2, 0x1440",
            "sub r2, r2, 0x34",
            "ldr r1, [r2]",
            "subne r2, r3, 1",
            "addne r2, ip, r2, lsl 2",
            "mvneq r2, 0",
            "subne r2, r2, 0x1440",
            "subne r2, r2, 0x34",
            "ldrne r2, [r2]",
            "cmp r5, 0x26",
            "movne r0, 0",
            "moveq r0, 1",
            "cmp r5, 0x26",
            "cmpne r5, 0x3b",
            "beq 0x52558",
            "cmp r5, 0x7c",
            "bne 0x52584",
            "cmp r5, r1",
            "movne r1, 1",
            "moveq r1, 2",
            "cmp r0, 0",
            "beq 0x52578",
            "cmp r2, 0x3e",
            "cmpne r2, 0x3c",
            "b 0x52580",
            "cmp r2, 0x3e",
            "cmpeq r5, 0x7c",
            "bne 0x53198",
            "add r3, r3, 1",
            "add r0, sp, 0x2480",
            "add r0, r0, 0x18",
            "add r2, r0, r3, lsl 2",
            "sub r2, r2, 0x1440",
            "sub r2, r2, 0x34",
            "ldr r5, [r2]",
            "cmp r5, 0",
            "bne 0x52500",
            "add r6, sp, 0x1000",
            "add sb, sp, 0x20",
            "add r6, r6, 0x24",
            "b 0x5267c",
            "cmp r3, 0x60",
            "addeq r3, r5, 1",
            "addeq r2, r6, r2",
            "beq 0x52618",
            "b 0x52678",
            "cmp r1, 0x60",
            "add sl, r3, 1",
            "bne 0x52614",
            "rsb r7, r5, 0x400",
            "lsl r8, r5, 2",
            "rsb r7, r3, r7",
            "lsl sl, sl, 2",
            "lsl r7, r7, 2",
            "add r0, r6, r8",
            "add r1, r6, sl",
            "mov r2, r7",
            "sub r5, r5, 1",
            "bl sym.imp.memmove",
            "add r0, sb, r8",
            "add r1, sb, sl",
            "mov r2, r7",
            "bl sym.imp.memmove",
            "b 0x52678",
            "mov r3, sl",
            "ldr r1, [r2, 4]!",
            "cmp r1, 0",
            "bne 0x525cc",
            "add r6, r5, 1",
            "mvn r5, r5",
            "add r5, r5, 0x400",
            "lsl r6, r6, 2",
            "add r5, r5, 1",
            "lsl r5, r5, 2",
            "add r0, sp, 0x1000",
            "add r0, r0, 0x24",
            "add r1, r0, r6",
            "mov r2, r5",
            "bl sym.imp.memmove",
            "add r0, sp, 0x20",
            "mov r2, r5",
            "add r1, r0, r6",
            "bl sym.imp.memmove",
            "mov r5, 0",
            "add r7, sp, 0x1000",
            "mov r3, r5",
            "add r7, r7, 0x24",
            "add r6, sp, 0x20",
            "b 0x52708",
            "add r5, r5, 1",
            "lsl r2, r5, 2",
            "add r1, sp, 0x2480",
            "add r1, r1, 0x18",
            "add r3, r1, r2",
            "sub r3, r3, 0x1440",
            "sub r3, r3, 0x34",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "bne 0x525b8",
            "b 0x52660",
            "cmp r8, 0x28",
            "movne r2, 0",
            "moveq r2, 1",
            "cmp r8, 0x28",
            "cmpne r8, 0x7b",
            "bne 0x52704",
            "mvn r8, r3",
            "add sl, r3, 1",
            "add r8, r8, 0x400",
            "lsl sl, sl, 2",
            "add r8, r8, 1",
            "lsl r8, r8, 2",
            "cmp r2, 0",
            "add r1, r7, sl",
            "mov r2, r8",
            "mov r0, r7",
            "addne r5, r5, 1",
            "addeq r4, r4, 1",
            "bl sym.imp.memmove",
            "mov r0, r6",
            "add r1, r6, sl",
            "mov r2, r8",
            "bl sym.imp.memmove",
            "mvn r3, 0",
            "add r3, r3, 1",
            "add ip, sp, 0x2480",
            "add ip, ip, 0x18",
            "add r2, ip, r3, lsl 2",
            "sub r2, r2, 0x1440",
            "sub r2, r2, 0x34",
            "ldr r8, [r2]",
            "cmp r8, 0",
            "bne 0x526a4",
            "add r7, sp, 0x1000",
            "add r6, sp, 0x20",
            "add r7, r7, 0x24",
            "b 0x527bc",
            "sub r3, r0, 0x1440",
            "sub r3, r3, 0x34",
            "ldr r3, [r3]",
            "cmp r3, 0x29",
            "movne r2, 0",
            "andeq r2, r2, 1",
            "cmp r2, 0",
            "bne 0x52770",
            "cmp r3, 0x7d",
            "movne r1, 0",
            "andeq r1, r1, 1",
            "cmp r1, 0",
            "bne 0x52778",
            "b 0x527b8",
            "sub r5, r5, 1",
            "b 0x5277c",
            "sub r4, r4, 1",
            "add sl, r8, 1",
            "mvn r8, r8",
            "add r8, r8, 0x400",
            "lsl sl, sl, 2",
            "add r8, r8, 1",
            "lsl r8, r8, 2",
            "add r1, r7, sl",
            "mov r0, r7",
            "mov r2, r8",
            "bl sym.imp.memmove",
            "mov r2, r8",
            "mvn r8, 0",
            "mov r0, r6",
            "add r1, r6, sl",
            "bl sym.imp.memmove",
            "add r8, r8, 1",
            "add r1, sp, 0x2480",
            "add r1, r1, 0x18",
            "add r0, r1, r8, lsl 2",
            "sub r3, r0, 0x2440",
            "sub r3, r3, 0x38",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "bge 0x527f0",
            "add r4, sp, 0x1000",
            "mov r5, 0",
            "add r4, r4, 0x20",
            "mov r3, r4",
            "b 0x52820",
            "cmp r5, 0",
            "movle r2, 0",
            "movgt r2, 1",
            "cmp r4, 0",
            "movle r1, 0",
            "movgt r1, 1",
            "orrs r3, r1, r2",
            "bne 0x52738",
            "b 0x527dc",
            "cmp r2, 0x20",
            "bne 0x5282c",
            "add r5, r5, 1",
            "ldr r2, [r3, 4]!",
            "cmp r2, 0",
            "bne 0x52814",
            "cmp r5, 0",
            "beq 0x52868",
            "lsl r6, r5, 2",
            "rsb r5, r5, 0x400",
            "add r5, r5, 1",
            "lsl r5, r5, 2",
            "add r0, sp, 0x1000",
            "add r0, r0, 0x24",
            "add r1, r0, r6",
            "mov r2, r5",
            "bl sym.imp.memmove",
            "add r0, sp, 0x20",
            "mov r2, r5",
            "add r1, r0, r6",
            "bl sym.imp.memmove",
            "ldr r3, [0x000531ec]",
            "add ip, sp, 0x2480",
            "add ip, ip, 0x18",
            "mov r2, r4",
            "mov r6, 0",
            "ldr r0, [ip, r3]",
            "add r3, sp, 0x20",
            "ldr r1, [r3, 4]",
            "add r0, ip, r0",
            "add r1, ip, r1",
            "b 0x528e4",
            "cmp r3, 0x20",
            "movne ip, 0",
            "moveq ip, 1",
            "cmp r3, 0x20",
            "cmpne r3, 0x3c",
            "beq 0x528b4",
            "cmp r3, 0x3e",
            "bne 0x528e4",
            "cmp r6, 0",
            "movne r6, 0",
            "andeq r6, ip, 1",
            "cmp r6, 0",
            "beq 0x528f4",
            "ldrb r3, [r0, -0x470]",
            "cmp r3, 0x63",
            "bne 0x528f4",
            "ldrb r3, [r1, -0x470]",
            "cmp r3, 0x64",
            "bne 0x528f4",
            "mov r6, 1",
            "ldr r3, [r2, 4]!",
            "cmp r3, 0",
            "bne 0x52894",
            "b 0x528f8",
            "mov r6, 2",
            "mov r2, r4",
            "mov r3, 0",
            "b 0x52908",
            "add r3, r3, 1",
            "ldr r1, [r2, 4]!",
            "cmp r1, 0",
            "bne 0x52904",
            "add r2, sp, 0x1000",
            "sub r5, r3, 1",
            "add r2, r2, 0x24",
            "add r2, r2, r3, lsl 2",
            "b 0x52994",
            "ldr r3, [r2, -4]!",
            "cmp r3, 0x20",
            "cmpne r3, 0x3c",
            "beq 0x5294c",
            "cmp r3, 0x3e",
            "cmpne r3, 0x7c",
            "beq 0x5294c",
            "cmp r3, 0x26",
            "bne 0x52990",
            "add r7, r5, 1",
            "mvn r5, r5",
            "add r5, r5, 0x400",
            "lsl r7, r7, 2",
            "add r5, r5, 1",
            "lsl r5, r5, 2",
            "add r0, sp, 0x1000",
            "add r0, r0, 0x24",
            "add r1, r0, r7",
            "mov r2, r5",
            "bl sym.imp.memmove",
            "add r0, sp, 0x20",
            "mov r2, r5",
            "add r1, r0, r7",
            "bl sym.imp.memmove",
            "mov r3, 0",
            "b 0x529a4",
            "sub r5, r5, 1",
            "cmn r5, 1",
            "bne 0x52928",
            "b 0x52988",
            "add r3, r3, 1",
            "ldr r2, [r4, 4]!",
            "cmp r2, 0x27",
            "cmpne r2, 0x22",
            "beq 0x529a0",
            "add r2, sp, 0x1000",
            "sub r1, r3, 1",
            "add r2, r2, 0x24",
            "add r2, r2, r1, lsl 2",
            "b 0x529cc",
            "mov r3, r0",
            "ldr r1, [r2, 4]!",
            "bic r1, r1, 0x100",
            "cmp r1, 0x2f",
            "bne 0x529f4",
            "ldr r1, [r2, 4]",
            "add r0, r3, 1",
            "bic r1, r1, 0x100",
            "cmp r1, 0x2f",
            "cmpne r1, 0x7e",
            "beq 0x529c8",
            "add r2, sp, 0x20",
            "sub r3, r3, 1",
            "add r3, r2, r3, lsl 2",
            "mov r2, 0",
            "mov r1, r2",
            "b 0x52a30",
            "add ip, sp, 0x2480",
            "add ip, ip, 0x18",
            "add r1, ip, r0",
            "ldrb ip, [r1, -0x470]",
            "add r1, sp, 0x2000",
            "add r1, r1, 0x28",
            "strb ip, [r1, r2]",
            "add r2, r2, 1",
            "add r1, r0, 1",
            "ldr r0, [r3, 4]!",
            "cmp r0, 0",
            "bge 0x52a0c",
            "add r0, sp, 0x2480",
            "mov r3, 0",
            "add r0, r0, 0x18",
            "cmp r1, r3",
            "add r2, r0, r2",
            "streq r1, [sp, 0x14]",
            "strb r3, [r2, -0x470]",
            "ldrne r3, [0x000531ec]",
            "ldrne r3, [r0, r3]",
            "rsbne r3, r3, r1",
            "strne r3, [sp, 0x14]",
            "ldr r3, [0x000531f0]",
            "ldr r5, [r3]",
            "cmp r5, 0",
            "bne 0x52a90",
            "b 0x52ab0",
            "sub r4, r4, 1",
            "str r4, [r7]",
            "ldr r0, [r5, r4, lsl 2]",
            "bl sym.imp.free",
            "b 0x52a94",
            "ldr r7, [0x000531f4]",
            "ldr r4, [r7]",
            "cmp r4, 0",
            "bne 0x52a7c",
            "mov r0, r5",
            "bl sym.imp.free",
            "ldr r3, [0x000531f0]",
            "str r4, [r3]",
            "ldr r3, [0x000531f0]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "bne 0x52dd8",
            "add r4, sp, 0x2000",
            "mov r1, 0x2f",
            "add r4, r4, 0x28",
            "mov r0, r4",
            "bl sym.imp.strrchr",
            "ldr r3, [0x000531f8]",
            "subs r8, r0, 0",
            "add r1, sp, 0x2000",
            "str r3, [r1, 0x494]",
            "bne 0x52bd4",
            "cmp r6, 0",
            "bne 0x52bbc",
            "ldr r3, [0x000531e0]",
            "ldr r3, [r3]",
            "ldr r2, [r3]",
            "tst r2, 0x20",
            "ldrne r5, [r3, 4]",
            "bne 0x52b14",
            "ldr r0, [0x000531fc]",
            "bl sym.imp.getenv",
            "mov r5, r0",
            "cmp r5, 0",
            "beq 0x52bbc",
            "ldrb r3, [r5]",
            "cmp r3, 0",
            "beq 0x52bbc",
            "cmp r3, 0x3a",
            "bne 0x52b3c",
            "ldrb r3, [r5, 1]",
            "cmp r3, 0",
            "beq 0x52bbc",
            "mov r0, r5",
            "mov r4, 1",
            "mov r1, 0x3a",
            "bl sym.imp.strchr",
            "subs r3, r0, 0",
            "beq 0x52b68",
            "add r0, r3, 1",
            "ldrb r3, [r3, 1]",
            "cmp r3, 0",
            "addne r4, r4, 1",
            "bne 0x52b44",
            "lsl r0, r4, 2",
            "mov r8, 0",
            "bl fcn.00029e54",
            "add r4, sp, 0x2480",
            "mov r5, 1",
            "add r4, r4, 0x14",
            "add r8, sp, 0x2000",
            "add r8, r8, 0x28",
            "b 0x52c04",
            "add r5, sp, 0x1000",
            "rsb r2, r4, 2",
            "add r5, r5, 0x24",
            "mov r1, r4",
            "add r4, sp, 0x2480",
            "mov r0, r5",
            "add r2, r8, r2",
            "add r4, r4, 0x18",
            "bl fcn.00029568",
            "add r8, r8, 1",
            "str r5, [r4, -4]!",
            "mov r5, 1",
            "ldr sb, [0x000531f4]",
            "add r3, sp, 0x1000",
            "mov r7, r4",
            "mov fp, r4",
            "mov r2, 0",
            "add r3, r3, 0x24",
            "str r2, [sp, 0x10]",
            "str r3, [sp, 4]",
            "ldr r0, [r7], 4",
            "bl sym.imp.opendir",
            "cmp r0, 0",
            "str r0, [sp, 0x1c]",
            "beq 0x52da4",
            "b 0x52d84",
            "add r4, r5, 0x13",
            "mov r0, r8",
            "bl sym.imp.strlen",
            "mov r1, r8",
            "mov r2, r0",
            "mov r0, r4",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "bne 0x52d88",
            "ldrb r3, [r5, 0x13]",
            "cmp r3, 0x2e",
            "bne 0x52ca8",
            "ldrb r3, [r8]",
            "cmp r3, 0",
            "bne 0x52ca8",
            "ldr r3, [r7, -4]",
            "ldrb r2, [r3]",
            "cmp r2, 0x2f",
            "bne 0x52d88",
            "ldrb r3, [r3, 1]",
            "cmp r3, 0",
            "bne 0x52d88",
            "ldrb r3, [r5, 0x14]",
            "cmp r3, 0",
            "ldreq r1, [0x00053200]",
            "beq 0x52cac",
            "b 0x52d88",
            "mov r1, r4",
            "ldr r0, [r7, -4]",
            "bl fcn.00026868",
            "add r1, sp, 0x2400",
            "mov r5, r0",
            "add r1, r1, 0x28",
            "bl sym.imp.stat64",
            "cmp r0, 0",
            "blt 0x52d78",
            "ldr r3, [r7, -4]",
            "ldr ip, [sp, 4]",
            "cmp r3, ip",
            "beq 0x52ce8",
            "mov r0, r5",
            "mov r1, r4",
            "bl sym.imp.strcpy",
            "mov r0, r5",
            "bl sym.imp.strlen",
            "mov r4, r0",
            "mov r0, r5",
            "add r1, r4, 2",
            "bl fcn.00029e84",
            "mov r0, r5",
            "bl sym.imp.free",
            "b 0x52d88",
            "mov sl, r5",
            "ldr r0, [sp, 0x1c]",
            "bl sym.imp.readdir64",
            "subs r5, r0, 0",
            "bne 0x52c3c",
            "ldr r0, [sp, 0x1c]",
            "mov r5, sl",
            "bl sym.imp.closedir",
            "ldr r0, [sp, 0x10]",
            "add r0, r0, 1",
            "cmp r0, r5",
            "str r0, [sp, 0x10]",
            "blt 0x52c24",
            "add r3, sp, 0x2480",
            "add r3, r3, 0x14",
            "cmp fp, r3",
            "beq 0x52dd8",
            "ldr r0, [fp]",
            "bl sym.imp.free",
            "mov r0, fp",
            "bl sym.imp.free",
            "ldr r4, [0x000531f0]",
            "ldr r0, [r4]",
            "cmp r0, 0",
            "beq 0x52e8c",
            "ldr r5, [0x000531f4]",
            "mov r2, 4",
            "ldr r3, aav.0x00052240",
            "mov r6, 0",
            "mov sb, 4",
            "mov r7, r6",
            "ldr r1, [r5]",
            "bl sym.imp.qsort",
            "b 0x52e60",
            "ldr r8, [r4]",
            "lsl fp, r7, 2",
            "ldr sl, [r8, r7, lsl 2]",
            "cmp sl, 0",
            "beq 0x52e58",
            "ldr r1, [r8, sb]",
            "cmp r1, 0",
            "beq 0x52e58",
            "mov r0, sl",
            "bl sym.imp.strcmp",
            "subs r3, r0, 0",
            "strne sl, [r8, r6, lsl 2]",
            "addne r6, r6, 1",
            "bne 0x52e58",
            "mov r0, sl",
            "str r3, [sp, 0xc]",
            "bl sym.imp.free",
            "ldr r3, [sp, 0xc]",
            "str r3, [r8, fp]",
            "add r7, r7, 1",
            "add sb, sb, 4",
            "ldr r3, [r5]",
            "sub r3, r3, 1",
            "cmp r7, r3",
            "blo 0x52e0c",
            "ldr r3, [0x000531f0]",
            "ldr r3, [r3]",
            "ldr r2, [r3, r7, lsl 2]",
            "str r2, [r3, r6, lsl 2]",
            "add r6, r6, 1",
            "ldr r3, [0x000531f4]",
            "str r6, [r3]",
            "ldr r3, [0x000531f0]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x52eac",
            "ldr r2, [0x000531f4]",
            "ldr r2, [r2]",
            "cmp r2, 1",
            "bls 0x52f44",
            "ldr r4, [0x000531f0]",
            "bl fcn.00052078",
            "ldr r3, [r4]",
            "cmp r3, 0",
            "beq 0x531d4",
            "ldr r0, [r3]",
            "bl fcn.00029ed8",
            "ldr r3, [0x000531f4]",
            "mov r5, r0",
            "ldr lr, [r4]",
            "mov ip, 0",
            "ldr r6, [r3]",
            "sub r3, r0, 1",
            "b 0x52f04",
            "ldr r7, [r1, 4]!",
            "ldrb r7, [r7, r4]",
            "cmp r7, r0",
            "strbne ip, [r3]",
            "bne 0x52f04",
            "add r2, r2, 1",
            "cmp r2, r6",
            "blo 0x52ee4",
            "ldrb r0, [r3, 1]!",
            "cmp r0, 0",
            "movne r1, lr",
            "movne r2, 1",
            "rsbne r4, r5, r3",
            "bne 0x52efc",
            "ldrb r3, [r5]",
            "cmp r3, 0",
            "moveq r0, r5",
            "beq 0x53028",
            "mov r0, r5",
            "bl fcn.00052318",
            "mov r4, r0",
            "mov r0, r5",
            "bl sym.imp.free",
            "b 0x52f78",
            "ldr r0, [r3]",
            "mov r5, 0",
            "bl fcn.00052318",
            "ldr r1, [sp, 0x18]",
            "mov r4, r0",
            "str r5, [r1]",
            "bl sym.imp.strlen",
            "add r3, r4, r0",
            "ldrb r2, [r3, -1]",
            "cmp r2, 0x2f",
            "movne r2, 0x20",
            "strbne r2, [r4, r0]",
            "strbne r5, [r3, 1]",
            "add r6, sp, 0x2000",
            "ldr r7, [0x00053208]",
            "mov r0, r4",
            "add r6, r6, 0x28",
            "bl sym.imp.strlen",
            "mov sb, r0",
            "mov r0, r6",
            "bl sym.imp.strlen",
            "ldr r3, [r7]",
            "add r3, sb, r3",
            "rsb r3, r0, r3",
            "cmp r3, 0x400",
            "bhs 0x53024",
            "ldr sl, [0x000531e4]",
            "mov r0, r6",
            "ldr r8, [0x000531e8]",
            "rsb sb, sb, 0",
            "ldr r2, [sp, 0x14]",
            "ldr r1, [sl]",
            "ldr r5, [r8]",
            "rsb r3, r2, r1",
            "mov r2, 0",
            "strb r2, [r5, r3]",
            "add r1, r5, r1",
            "bl sym.imp.strcpy",
            "mov r1, r4",
            "mov r0, r5",
            "bl sym.imp.strcat",
            "mov r1, r6",
            "mov r0, r5",
            "bl sym.imp.strcat",
            "ldr r0, [sp, 0x14]",
            "bl fcn.00051f54",
            "ldr r3, [sl]",
            "ldr r0, [r8]",
            "rsb sb, r3, sb",
            "bl sym.imp.strlen",
            "ldr r3, [0x0005320c]",
            "mov r1, r0",
            "str r0, [r7]",
            "add r1, sb, r1",
            "ldr r0, [r3]",
            "bl fcn.000521f0",
            "mov r0, r4",
            "bl sym.imp.free",
            "b 0x531d4",
            "ldr r7, [0x000531f0]",
            "ldr r3, [r7]",
            "cmp r3, 0",
            "beq 0x531d4",
            "ldr r4, [0x000531f4]",
            "ldr r3, [r4]",
            "cmp r3, 0",
            "beq 0x531d4",
            "ldr r3, [0x000531e4]",
            "ldr r3, [r3]",
            "str r3, [sp, 0x14]",
            "bl fcn.000521bc",
            "ldr r6, [r4]",
            "mov r4, 0",
            "mov r5, r4",
            "b 0x53088",
            "ldr r3, [r7]",
            "ldr r0, [r3, r5, lsl 2]",
            "add r5, r5, 1",
            "bl sym.imp.strlen",
            "cmp r4, r0",
            "movlt r4, r0",
            "cmp r5, r6",
            "blt 0x53070",
            "ldr r3, [0x00053210]",
            "add r4, r4, 2",
            "mov r1, r4",
            "str r4, [sp, 0x10]",
            "ldr r0, [r3]",
            "bl fcn.00055000",
            "cmp r0, 1",
            "mov r7, r0",
            "movle r4, r6",
            "movle r7, 1",
            "ble 0x530e0",
            "mov r1, r7",
            "mov r0, r6",
            "bl fcn.000550c8",
            "mov r1, r7",
            "mov r4, r0",
            "mov r0, r6",
            "bl fcn.000551a4",
            "cmp r1, 0",
            "addne r4, r4, 1",
            "lsl r3, r4, 2",
            "mov r5, 0",
            "ldr r8, [0x000531f0]",
            "str r3, [sp, 0x18]",
            "mvn r3, 3",
            "mul r3, r3, r4",
            "str r3, [sp, 0x1c]",
            "b 0x53168",
            "ldr ip, [sp, 0x1c]",
            "add sb, sb, 1",
            "ldr r2, [r8]",
            "add r3, ip, sl",
            "ldr r1, [r2, r3]",
            "mov r0, r1",
            "str r1, [sp, 0xc]",
            "bl sym.imp.strlen",
            "ldr r3, [sp, 0x10]",
            "ldr r1, [sp, 0xc]",
            "rsb r2, r0, r3",
            "ldr r3, [0x00053200]",
            "ldr r0, str._s__s",
            "bl sym.imp.printf",
            "mov r3, fp",
            "cmp sb, r7",
            "bge 0x53158",
            "add fp, r3, r4",
            "ldr ip, [sp, 0x18]",
            "cmp fp, r6",
            "add sl, sl, ip",
            "blt 0x53100",
            "ldr r2, [r8]",
            "add r5, r5, 1",
            "ldr r0, [r2, r3, lsl 2]",
            "bl sym.imp.puts",
            "cmp r5, r4",
            "lsllt sl, r5, 2",
            "movlt r3, r5",
            "movlt sb, 1",
            "blt 0x5313c",
            "ldr r3, [0x00053208]",
            "mov r0, 0",
            "ldr r2, [sp, 0x14]",
            "ldr r1, [r3]",
            "rsb r1, r2, r1",
            "bl fcn.000521f0",
            "b 0x531d4",
            "add r3, r1, r3",
            "mov r0, r7",
            "lsl r8, r3, 2",
            "rsb r3, r3, 0x400",
            "add r5, r3, 1",
            "lsl r5, r5, 2",
            "add r1, r7, r8",
            "mov r2, r5",
            "bl sym.imp.memmove",
            "mov r0, r6",
            "add r1, r6, r8",
            "mov r2, r5",
            "bl sym.imp.memmove",
            "mvn r3, 0",
            "b 0x52584",
            "add sp, sp, 0x9c",
            "add sp, sp, 0x2400",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0005224c": {
        "function_address": "0x0005224c",
        "instructions": [
            "ldr r3, [0x000522c4]",
            "push {r4, r5, r6, lr}",
            "ldr r5, [r3]",
            "ldrb r3, [r5]",
            "cmp r3, 0",
            "bne 0x52280",
            "ldr r3, [0x000522c8]",
            "ldr r3, [r3]",
            "ldr r2, [r3, 0xc]",
            "add r2, r2, 4",
            "ldr r3, [r3, r2, lsl 2]",
            "cmp r3, 0",
            "bne 0x522ac",
            "ldr r3, [0x000522c8]",
            "ldr r4, [r3]",
            "ldr r3, [r4, 0xc]",
            "add r3, r3, 4",
            "ldr r0, [r4, r3, lsl 2]",
            "bl sym.imp.free",
            "ldr r6, [r4, 0xc]",
            "mov r0, r5",
            "bl fcn.00029ed8",
            "add r3, r6, 4",
            "str r0, [r4, r3, lsl 2]",
            "ldr r3, [0x000522c8]",
            "ldr r3, [r3]",
            "ldr r2, [r3, 0xc]",
            "sub r2, r2, 1",
            "str r2, [r3, 0xc]",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.000522cc": {
        "function_address": "0x000522cc",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "ldr r4, [0x00052314]",
            "ldr r3, [r4]",
            "ldr r2, [r3]",
            "tst r2, 1",
            "beq 0x52308",
            "ldr r5, [r3, 0xc]",
            "ldr r3, [r3, 8]",
            "cmp r5, r3",
            "bge 0x52308",
            "bl fcn.0005224c",
            "ldr r3, [r4]",
            "add r0, r5, 1",
            "str r0, [r3, 0xc]",
            "pop {r3, r4, r5, pc}",
            "bl fcn.00052078",
            "mov r0, 0",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.000521f0": {
        "function_address": "0x000521f0",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r1",
            "subs r1, r0, 0",
            "ble 0x52208",
            "ldr r0, str.e__dA",
            "bl sym.imp.printf",
            "ldr r3, obj.stdout",
            "mov r0, 0xd",
            "ldr r1, [r3]",
            "bl sym.imp.fputc",
            "bl fcn.00052018",
            "bl fcn.00052188",
            "ldr r0, [0x0005223c]",
            "bl sym.imp.printf",
            "mov r0, r4",
            "pop {r4, lr}",
            "b fcn.00051f54"
        ]
    },
    "fcn.00052150": {
        "function_address": "0x00052150",
        "instructions": [
            "ldr r3, [0x0005217c]",
            "ldr r2, [0x00052180]",
            "ldr r3, [r3]",
            "ldr r2, [r2]",
            "cmp r3, r2",
            "bxhs lr",
            "ldr r2, [0x00052184]",
            "ldr r2, [r2]",
            "add r3, r2, r3",
            "ldrb r0, [r3, 1]",
            "b fcn.0005208c"
        ]
    },
    "fcn.000532bc": {
        "function_address": "0x000532bc",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "ldr r5, [0x00053314]",
            "ldr r6, [0x00053318]",
            "ldr r4, [r5]",
            "ldr r7, [r6]",
            "cmp r4, r7",
            "popeq {r4, r5, r6, r7, r8, pc}",
            "ldr r3, [0x0005331c]",
            "add r1, r4, 1",
            "sub r7, r7, 1",
            "ldr r3, [r3]",
            "add r0, r3, r4",
            "add r1, r3, r1",
            "bl sym.imp.strcpy",
            "str r7, [r6]",
            "bl fcn.00052188",
            "mov r0, 0x20",
            "bl fcn.0005208c",
            "ldr r0, [r5]",
            "rsb r0, r4, r0",
            "pop {r4, r5, r6, r7, r8, lr}",
            "b fcn.00051f54"
        ]
    },
    "fcn.00052188": {
        "function_address": "0x00052188",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "ldr r5, [0x000521b4]",
            "ldr r4, [0x000521b8]",
            "b 0x521a0",
            "mov r0, 0x20",
            "bl fcn.0005208c",
            "ldr r2, [r5]",
            "ldr r3, [r4]",
            "cmp r2, r3",
            "blo 0x52198",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.00052078": {
        "function_address": "0x00052078",
        "instructions": [
            "ldr r3, obj.stdout",
            "mov r0, 7",
            "ldr r1, [r3]",
            "b sym.imp.fputc"
        ]
    },
    "fcn.0005208c": {
        "function_address": "0x0005208c",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r5, r0",
            "ldr r3, [0x00052134]",
            "ldr r2, [r3]",
            "ldr r3, [0x00052138]",
            "ldr r3, [r3]",
            "ldrb r0, [r2, r3]",
            "ldr r3, [0x0005213c]",
            "cmp r0, 0",
            "ldr r3, [r3, 0xc]",
            "moveq r0, 0x20",
            "tst r3, 8",
            "beq 0x520cc",
            "ldr r3, obj.stdout",
            "ldr r1, [r3]",
            "bl sym.imp.fputc",
            "ldr r3, [0x00052144]",
            "ldr r1, [0x00052148]",
            "ldr r2, [r3]",
            "ldr r1, [r1]",
            "add r2, r2, 1",
            "cmp r2, r1",
            "str r2, [r3]",
            "blo 0x52120",
            "ldr r2, [0x0005214c]",
            "mov r0, r5",
            "ldr r4, obj.stdout",
            "ldr r1, [r2]",
            "add r1, r1, 1",
            "str r1, [r2]",
            "mov r2, 0",
            "ldr r1, [r4]",
            "str r2, [r3]",
            "bl sym.imp.fputc",
            "mov r0, 8",
            "ldr r1, [r4]",
            "bl sym.imp.fputc",
            "ldr r3, [0x00052138]",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.00051f54": {
        "function_address": "0x00051f54",
        "instructions": [
            "ldr r3, [0x00051ffc]",
            "push {r4, r5, r6, lr}",
            "ldr r2, [r3]",
            "cmp r0, r2",
            "movlo r1, r0",
            "movhs r1, r2",
            "cmp r1, 0",
            "popeq {r4, r5, r6, pc}",
            "ldr r4, [0x00052000]",
            "rsb r2, r1, r2",
            "str r2, [r3]",
            "ldr r5, [r4]",
            "cmp r5, r1",
            "blo 0x51fb8",
            "cmp r1, 4",
            "rsb r5, r1, r5",
            "str r5, [r4]",
            "bhi 0x51fac",
            "ldr r0, [0x00052004]",
            "rsb r0, r1, r0",
            "pop {r4, r5, r6, lr}",
            "b sym.imp.printf",
            "ldr r0, str.e__uD",
            "pop {r4, r5, r6, lr}",
            "b sym.imp.printf",
            "ldr r6, [0x0005200c]",
            "rsb r5, r5, r1",
            "mov r0, r5",
            "ldr r1, [r6]",
            "bl fcn.00055000",
            "ldr r3, [0x00052010]",
            "add r1, r0, 1",
            "ldr r0, str._re__dAe__dC",
            "ldr r2, [r3]",
            "rsb r2, r1, r2",
            "str r2, [r3]",
            "ldr r2, [r6]",
            "mul r2, r2, r1",
            "rsb r2, r5, r2",
            "str r2, [r4]",
            "pop {r4, r5, r6, lr}",
            "b sym.imp.printf"
        ]
    },
    "fcn.00042a98": {
        "function_address": "0x00042a98",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "ldr r4, [0x00042d64]",
            "ldr r3, [r4]",
            "sub r3, r3, 1",
            "cmp r3, 0",
            "str r3, [r4]",
            "blt 0x42b04",
            "b 0x42d38",
            "ldr r3, [r4]",
            "cmn r3, 1",
            "bne 0x42ae8",
            "ldr r3, [r2, 0xc]",
            "cmp r3, 0",
            "beq 0x42ae8",
            "ldr r3, [r5]",
            "ldrb r3, [r3, -1]",
            "cmp r3, 0x20",
            "beq 0x42ae8",
            "cmp r3, 9",
            "bne 0x42d4c",
            "bl fcn.00042458",
            "ldr r3, [r4]",
            "sub r3, r3, 1",
            "cmp r3, 0",
            "str r3, [r4]",
            "blt 0x42b0c",
            "b 0x42d38",
            "ldr r6, [0x00042d68]",
            "ldr r5, [0x00042d6c]",
            "ldr r3, [r6]",
            "ldr r2, [r3, 0x1c]",
            "cmp r2, 0",
            "bne 0x42ab8",
            "ldr r2, [0x00042d64]",
            "ldr r2, [r2]",
            "cmn r2, 0x63",
            "beq 0x42d54",
            "ldr r3, [r3, 0x18]",
            "cmp r3, 0",
            "beq 0x42d5c",
            "bl fcn.00042938",
            "ldr r3, [0x00042d70]",
            "ldr sl, [r3]",
            "cmp sl, 0",
            "bgt 0x42c98",
            "ldr r5, [0x00042d68]",
            "ldr fp, [0x00042d74]",
            "ldr r7, [0x00042d78]",
            "ldr r3, [r5]",
            "ldr r8, [0x00042d7c]",
            "ldr r6, [0x00042d80]",
            "ldr sb, [0x00042d84]",
            "ldr r4, [r3, 0x18]",
            "ldr r3, [0x00042d6c]",
            "str r4, [r3]",
            "ldrb r3, [fp, 3]",
            "cmp r3, 0",
            "beq 0x42b90",
            "ldr r3, [r5]",
            "ldr r3, [r3, 8]",
            "cmp r3, 0",
            "beq 0x42bb0",
            "ldr r3, [r5]",
            "mov r1, r4",
            "movw r2, 0xfff",
            "ldr r0, [r3, 8]",
            "bl fcn.00028f70",
            "subs sl, r0, 0",
            "blt 0x42c18",
            "b 0x42c78",
            "ldr r2, [r8, 0x18]",
            "mov r1, r4",
            "ldr r3, [r7]",
            "add r2, r2, 5",
            "str r2, [r3, 4]",
            "ldr r2, [0x00042d88]",
            "ldr r0, [r2]",
            "mov r2, 0x1000",
            "bl fcn.00053348",
            "subs sl, r0, 0",
            "bne 0x42c04",
            "ldr r3, [sb, 8]",
            "cmp r3, 0",
            "beq 0x42b74",
            "mov r3, 0xa",
            "strb sl, [r4, 1]",
            "strb r3, [r4]",
            "add r0, r0, 2",
            "bl sym.imp.raise",
            "mov sl, 1",
            "b 0x42c98",
            "bge 0x42c78",
            "ldr r3, [r6]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x42c80",
            "ldr r3, [r5]",
            "ldr sl, [r3, 8]",
            "cmp sl, 0",
            "bne 0x42c80",
            "ldr r3, [r6]",
            "ldr r3, [r3]",
            "cmp r3, 0xb",
            "bne 0x42c80",
            "mov r0, sl",
            "mov r1, 3",
            "bl sym.imp.fcntl64",
            "subs r2, r0, 0",
            "blt 0x42c80",
            "tst r2, 0x800",
            "beq 0x42c80",
            "mov r0, sl",
            "mov r1, 4",
            "bic r2, r2, 0x800",
            "bl sym.imp.fcntl64",
            "cmp r0, 0",
            "blt 0x42c80",
            "ldr r0, str.sh:_turning_off_NDELAY_mode_n",
            "bl fcn.00042678",
            "b 0x42b74",
            "cmp sl, 0",
            "bgt 0x42c98",
            "ldr r2, [0x00042d64]",
            "mvn r3, 0x62",
            "str r3, [r2]",
            "ldr r2, [0x00042d70]",
            "str r3, [r2]",
            "b 0x42d54",
            "ldr r3, [0x00042d6c]",
            "ldr r5, [r3]",
            "mov r4, r5",
            "mov r1, r4",
            "sub sl, sl, 1",
            "ldrb r3, [r1], 1",
            "cmp r3, 0",
            "bne 0x42cc8",
            "mov r0, r4",
            "mov r2, sl",
            "bl sym.imp.memmove",
            "b 0x42ce4",
            "cmp r3, 0xa",
            "mov r4, r1",
            "ldreq r3, [0x00042d64]",
            "mvneq r5, r5",
            "addeq r5, r1, r5",
            "streq r5, [r3]",
            "beq 0x42d04",
            "cmp sl, 0",
            "bgt 0x42ca4",
            "mvn r5, r5",
            "ldr r3, [0x00042d64]",
            "add r5, r4, r5",
            "cmp r5, 0",
            "str r5, [r3]",
            "blt 0x42b4c",
            "ldr r3, [0x00042d70]",
            "str sl, [r3]",
            "mov r3, 0",
            "ldrb r5, [r4]",
            "strb r3, [r4]",
            "ldr r3, [0x00042d74]",
            "ldrb r3, [r3, 8]",
            "cmp r3, 0",
            "beq 0x42d34",
            "ldr r3, [0x00042d6c]",
            "ldr r0, [r3]",
            "bl fcn.00042678",
            "strb r5, [r4]",
            "ldr r2, [0x00042d6c]",
            "ldr r3, [r2]",
            "ldrsb r0, [r3], 1",
            "str r3, [r2]",
            "pop {r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "mvn r0, 0x80",
            "pop {r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "mvn r0, 0x81",
            "pop {r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "mvn r0, 0x81",
            "pop {r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00042df4": {
        "function_address": "0x00042df4",
        "instructions": [
            "push {r0, r1, r2, r3}",
            "ldr r3, [0x00042e34]",
            "ldr r2, [r3]",
            "push {r0, r1, r4, lr}",
            "add r2, r2, 1",
            "str r2, [r3]",
            "add r1, sp, 0x14",
            "ldr r0, [sp, 0x10]",
            "str r1, [sp, 4]",
            "bl sym.imp.vprintf",
            "mov r4, r0",
            "bl fcn.00041f80",
            "mov r0, r4",
            "pop {r2, r3, r4, lr}",
            "add sp, sp, 0x10",
            "bx lr"
        ]
    },
    "fcn.000430c0": {
        "function_address": "0x000430c0",
        "instructions": [
            "ldr r3, [0x000430f4]",
            "push {r4, lr}",
            "mov r4, r0",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "mov r0, 0xa",
            "mov r1, r4",
            "bl sym.imp.fputc",
            "mov r0, r4",
            "bl sym.imp.fflush",
            "pop {r4, lr}",
            "b fcn.00041f80"
        ]
    },
    "fcn.000430f8": {
        "function_address": "0x000430f8",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r6, 0xc",
            "ldr r4, [r0, 0xc]",
            "mov r5, r1",
            "ldrh r3, [r0, 0x14]",
            "mla r6, r6, r3, r4",
            "b 0x43124",
            "mov r0, r5",
            "ldr r1, str.___s",
            "ldr r2, [r4, 8]",
            "bl sym.imp.fprintf",
            "add r4, r4, 0xc",
            "cmp r6, r4",
            "bhi 0x43114",
            "mov r0, r5",
            "bl fcn.000430c0",
            "pop {r4, r5, r6, lr}",
            "b fcn.00042938"
        ]
    },
    "fcn.00042388": {
        "function_address": "0x00042388",
        "instructions": [
            "ldr r3, [0x00042404]",
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r4, r0",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "ldrh r5, [r0, 0x14]",
            "ldr r6, [r0, 0xc]",
            "ldr r7, [0x00042408]",
            "sub r5, r5, 1",
            "b 0x423cc",
            "ldr r0, [r6, 8]",
            "cmp r0, r7",
            "beq 0x423c4",
            "bl sym.imp.free",
            "add r6, r6, 0xc",
            "sub r5, r5, 1",
            "cmp r5, 0",
            "bge 0x423b4",
            "ldr r0, [r4, 0xc]",
            "cmp r0, r4",
            "beq 0x423e4",
            "bl sym.imp.free",
            "ldrb r3, [r4, 0x17]",
            "mov r0, r4",
            "mov r1, 2",
            "bfc r3, 3, 1",
            "strb r3, [r4, 0x17]",
            "bl fcn.000412c8",
            "pop {r4, r5, r6, r7, r8, lr}",
            "b fcn.00041f80"
        ]
    },
    "fcn.000412c8": {
        "function_address": "0x000412c8",
        "instructions": [
            "ldr r2, [0x00041334]",
            "ldr r3, [r2]",
            "cmp r3, r0",
            "addne r2, r3, 0x18",
            "ldrne r3, [r3, 0x18]",
            "bne 0x412d0",
            "ldr r3, [r0, 0x18]",
            "cmp r1, 0",
            "str r3, [r2]",
            "beq 0x41320",
            "cmp r1, 1",
            "bxne lr",
            "ldr r2, [0x00041334]",
            "ldr r3, [r2]",
            "cmp r3, 0",
            "beq 0x41324",
            "ldrb r1, [r3, 0x16]",
            "cmp r1, 1",
            "bne 0x41324",
            "add r2, r3, 0x18",
            "ldr r3, [r3, 0x18]",
            "b 0x41300",
            "ldr r2, [0x00041334]",
            "ldr r3, [r2]",
            "str r3, [r0, 0x18]",
            "str r0, [r2]",
            "bx lr"
        ]
    },
    "fcn.000426f4": {
        "function_address": "0x000426f4",
        "instructions": [
            "ldr r3, [0x00042890]",
            "mov r2, 0",
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r5, r1",
            "sub sp, sp, 0x38",
            "ldr r1, [r3]",
            "cmp r1, 0",
            "movne r1, 2",
            "moveq r1, 0",
            "cmp r0, 0",
            "add r0, sp, 0x34",
            "orreq r1, r1, 1",
            "bl sym.imp.wait3",
            "subs r4, r0, 0",
            "ble 0x42884",
            "ldr r3, [0x00042894]",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "ldr r3, [0x00042898]",
            "mov ip, 0xc",
            "ldr lr, [sp, 0x34]",
            "ldr r3, [r3]",
            "b 0x427c4",
            "ldrb r2, [r3, 0x16]",
            "cmp r2, 2",
            "beq 0x427c0",
            "ldr r1, [r3, 0xc]",
            "mov r2, 2",
            "ldrh r7, [r3, 0x14]",
            "mov r6, 0",
            "mla r7, ip, r7, r1",
            "ldr r0, [r1]",
            "cmp r0, r4",
            "streq lr, [r1, 4]",
            "moveq r6, r3",
            "ldr r0, [r1, 4]",
            "cmn r0, 1",
            "moveq r2, 0",
            "beq 0x427ac",
            "cmp r2, 0",
            "beq 0x427ac",
            "and r8, r0, 0xff",
            "cmp r8, 0x7f",
            "moveq r2, 1",
            "streq r0, [r3, 0x10]",
            "add r1, r1, 0xc",
            "cmp r1, r7",
            "blo 0x42774",
            "cmp r6, 0",
            "bne 0x427e8",
            "ldr r3, [r3, 0x18]",
            "cmp r3, 0",
            "bne 0x42754",
            "ldrb r2, [sp, 0x34]",
            "cmp r2, 0x7f",
            "ldrne r2, [0x0004289c]",
            "ldrne r1, [r2]",
            "subne r1, r1, 1",
            "strne r1, [r2]",
            "b 0x42824",
            "cmp r2, 0",
            "beq 0x42828",
            "ldrb r3, [r6, 0x17]",
            "orr r3, r3, 0x10",
            "strb r3, [r6, 0x17]",
            "ldrb r3, [r6, 0x16]",
            "cmp r3, r2",
            "beq 0x42828",
            "cmp r2, 1",
            "strb r2, [r6, 0x16]",
            "bne 0x42828",
            "mov r0, r6",
            "mov r1, 0",
            "bl fcn.000412c8",
            "b 0x42828",
            "mov r6, r3",
            "cmp r6, r5",
            "movne r5, 0",
            "moveq r5, 1",
            "bl fcn.00041f80",
            "cmp r6, 0",
            "moveq r5, 0",
            "cmp r5, 0",
            "beq 0x42884",
            "mov r0, sp",
            "ldr r1, [sp, 0x34]",
            "mov r2, 1",
            "mov r5, sp",
            "bl fcn.000421ac",
            "cmp r0, 0",
            "beq 0x42884",
            "add r3, sp, 0x38",
            "add r0, r3, r0",
            "mov r3, 0xa",
            "strb r3, [r0, -0x38]",
            "mov r3, 0",
            "strb r3, [r0, -0x37]",
            "mov r0, sp",
            "bl fcn.00042678",
            "mov r0, r4",
            "add sp, sp, 0x38",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "sym.imp.wait3": {
        "function_address": "0x0000bca8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x85c]!"
        ]
    },
    "fcn.00043144": {
        "function_address": "0x00043144",
        "instructions": [
            "tst r2, 1",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r7, r0",
            "sub sp, sp, 0x5c",
            "mov r4, r1",
            "mov r8, r2",
            "ldr r5, [r1, 0xc]",
            "beq 0x43174",
            "ldr r1, aav.0x0005cf54",
            "ldr r2, [r5]",
            "bl sym.imp.fprintf",
            "b 0x432f0",
            "mov r0, r1",
            "bl fcn.00041338",
            "ldr r2, [0x000432fc]",
            "mov r3, r0",
            "mov r1, 0x10",
            "add r0, sp, 8",
            "bl fcn.00042164",
            "ldr r3, [0x00043300]",
            "mov r6, r0",
            "ldr r3, [r3]",
            "cmp r4, r3",
            "addeq r2, sp, 0x58",
            "addeq r3, r2, r0",
            "moveq r2, 0x2b",
            "beq 0x431d0",
            "cmp r3, 0",
            "beq 0x431d4",
            "ldr r3, [r3, 0x18]",
            "cmp r4, r3",
            "bne 0x431d4",
            "add r2, sp, 0x58",
            "add r3, r2, r0",
            "mov r2, 0x2d",
            "strb r2, [r3, -0x52]",
            "ands fp, r8, 4",
            "moveq sl, r6",
            "beq 0x431fc",
            "add r0, sp, 8",
            "mov r1, 0x10",
            "add r0, r0, r6",
            "ldr r2, aav.0x0005f128",
            "ldr r3, [r5]",
            "bl fcn.00042164",
            "add sl, r0, r6",
            "ldrh r3, [r4, 0x14]",
            "mov r8, 0xc",
            "mla r8, r8, r3, r5",
            "ldrb r3, [r4, 0x16]",
            "cmp r3, 0",
            "bne 0x4322c",
            "add r0, sp, 8",
            "ldr r1, str.Running",
            "add r0, r0, sl",
            "bl sym.imp.strcpy",
            "add r0, sl, 7",
            "b 0x43278",
            "cmp r3, 1",
            "add r0, sp, 8",
            "ldr r1, [r8, -8]",
            "add r0, r0, sl",
            "ldreq r1, [r4, 0x10]",
            "mov r2, 0",
            "bl fcn.000421ac",
            "add r0, r0, sl",
            "b 0x43278",
            "str sb, [sp]",
            "mov r0, sl",
            "ldr r3, [r5]",
            "mov r1, 0x30",
            "ldr r2, str.__n_c_d",
            "str r3, [sp, 4]",
            "mov r3, r6",
            "bl fcn.00042164",
            "sub r0, r0, 3",
            "b 0x43280",
            "add sl, sp, 8",
            "mov sb, 0x20",
            "str sb, [sp]",
            "rsb r3, r0, 0x21",
            "ldr r2, [r5, 8]",
            "mov r0, r7",
            "ldr r1, str._s_c_s",
            "bic r3, r3, r3, asr 31",
            "str r2, [sp, 4]",
            "mov r2, sl",
            "bl sym.imp.fprintf",
            "cmp fp, 0",
            "bne 0x432bc",
            "mov r0, r4",
            "mov r1, r7",
            "bl fcn.000430f8",
            "b 0x432d0",
            "add r5, r5, 0xc",
            "cmp r5, r8",
            "bne 0x43250",
            "mov r0, r7",
            "bl fcn.000430c0",
            "ldrb r3, [r4, 0x17]",
            "bfc r3, 4, 1",
            "strb r3, [r4, 0x17]",
            "ldrb r3, [r4, 0x16]",
            "cmp r3, 2",
            "bne 0x432f0",
            "mov r0, r4",
            "bl fcn.00042388",
            "add sp, sp, 0x5c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00041338": {
        "function_address": "0x00041338",
        "instructions": [
            "ldr r3, [0x00041358]",
            "ldr r3, [r3]",
            "rsb r3, r3, r0",
            "ldr r0, [0x0004135c]",
            "asr r3, r3, 2",
            "mul r0, r0, r3",
            "add r0, r0, 1",
            "bx lr"
        ]
    },
    "fcn.00043384": {
        "function_address": "0x00043384",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r7, r0",
            "ldr r4, obj.stderr",
            "mov r6, r1",
            "ldr r5, [0x0004343c]",
            "ldr r0, [r4]",
            "ldr r1, [0x00043440]",
            "ldr r2, [r5]",
            "bl sym.imp.fprintf",
            "ldr r3, [0x00043444]",
            "ldr r8, [r3]",
            "cmp r8, 0",
            "beq 0x43418",
            "ldr r0, [r5]",
            "mov r1, r8",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x433dc",
            "ldr r0, [r4]",
            "mov r2, r8",
            "ldr r1, [0x00043440]",
            "bl sym.imp.fprintf",
            "ldr r3, [0x00043448]",
            "ldrb r3, [r3, 3]",
            "cmp r3, 0",
            "beq 0x43400",
            "ldr r3, [0x0004344c]",
            "ldr r3, [r3]",
            "ldr r3, [r3, 8]",
            "cmp r3, 0",
            "beq 0x43418",
            "ldr r3, obj.stderr",
            "ldr r1, str.line__d:",
            "ldr r0, [r3]",
            "ldr r3, [0x00043454]",
            "ldr r2, [r3]",
            "bl sym.imp.fprintf",
            "ldr r4, obj.stderr",
            "mov r1, r7",
            "mov r2, r6",
            "ldr r0, [r4]",
            "bl sym.imp.vfprintf",
            "ldr r0, [r4]",
            "pop {r4, r5, r6, r7, r8, lr}",
            "b fcn.000430c0"
        ]
    },
    "fcn.0004347c": {
        "function_address": "0x0004347c",
        "instructions": [
            "push {r3, lr}",
            "mov r4, r0",
            "mov r0, r1",
            "mov r1, r2",
            "bl fcn.00043384",
            "bl fcn.00042938",
            "mov r0, r4",
            "bl fcn.00041ea8"
        ]
    },
    "fcn.00043628": {
        "function_address": "0x00043628",
        "instructions": [
            "push {r4, lr}",
            "mov r0, 0x34",
            "ldr r4, [0x00043690]",
            "ldr r2, [0x00043694]",
            "ldr r3, [r4]",
            "ldr r2, [r2]",
            "str r2, [r3, 0xc]",
            "ldr r2, [0x00043698]",
            "ldr r2, [r2]",
            "str r2, [r3, 0x10]",
            "ldr r2, [0x0004369c]",
            "ldr r2, [r2]",
            "str r2, [r3, 0x14]",
            "ldr r2, [0x000436a0]",
            "ldr r2, [r2]",
            "str r2, [r3, 4]",
            "bl fcn.000434d4",
            "ldr r3, [r4]",
            "str r0, [r4]",
            "str r3, [r0]",
            "mvn r3, 0",
            "str r3, [r0, 8]",
            "add r3, r3, 1",
            "str r3, [r0, 0x1c]",
            "str r3, [r0, 0x20]",
            "pop {r4, pc}"
        ]
    },
    "fcn.000434d4": {
        "function_address": "0x000434d4",
        "instructions": [
            "mov r1, r0",
            "mov r0, 0",
            "b fcn.000434b8"
        ]
    },
    "fcn.000434b8": {
        "function_address": "0x000434b8",
        "instructions": [
            "push {r3, lr}",
            "bl sym.imp.realloc",
            "cmp r0, 0",
            "popne {r3, pc}",
            "ldr r0, [pc]",
            "bl fcn.0004349c",
            "ldrdeq fp, ip, [r5], -r8"
        ]
    },
    "fcn.0004349c": {
        "function_address": "0x0004349c",
        "instructions": [
            "push {r0, r1, r2, r3}",
            "push {r0, r1, r2, lr}",
            "mov r0, 1",
            "add r2, sp, 0x14",
            "ldr r1, [sp, 0x10]",
            "str r2, [sp, 4]",
            "bl fcn.0004347c"
        ]
    },
    "fcn.00043a28": {
        "function_address": "0x00043a28",
        "instructions": [
            "push {r3, lr}",
            "bl sym.imp.strdup",
            "cmp r0, 0",
            "popne {r3, pc}",
            "ldr r0, [pc]",
            "bl fcn.0004349c",
            "ldrdeq fp, ip, [r5], -r8"
        ]
    },
    "fcn.00041864": {
        "function_address": "0x00041864",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r4, r0",
            "ldrb r3, [r0, 4]",
            "cmp r3, 0",
            "ldrne r5, [r0, 8]",
            "popeq {r4, r5, r6, pc}",
            "b 0x41884",
            "bl sym.imp.free",
            "ldr r0, [r5], 4",
            "cmp r0, 0",
            "bne 0x41880",
            "ldr r0, [r4, 8]",
            "pop {r4, r5, r6, lr}",
            "b sym.imp.free"
        ]
    },
    "fcn.00043ac8": {
        "function_address": "0x00043ac8",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r4, r1",
            "mov r6, r0",
            "bl fcn.00041240",
            "ldr r3, [0x00043bd8]",
            "mov r1, r6",
            "mov r7, r0",
            "ldrb r5, [r3, 0xa]",
            "bl fcn.0004128c",
            "and r5, r5, 1",
            "orr r5, r4, r5",
            "ldr r4, [r0]",
            "cmp r4, 0",
            "beq 0x43b98",
            "ldr r2, [r4, 4]",
            "movw r3, 0x202",
            "and r3, r2, r3",
            "cmp r3, 2",
            "bne 0x43b44",
            "tst r5, 0x100",
            "beq 0x43b24",
            "mov r0, r6",
            "bl sym.imp.free",
            "ldr r4, [r4, 8]",
            "mov r1, 0x3d",
            "mov r0, r4",
            "bl sym.imp.strchrnul",
            "mov r2, r4",
            "rsb r1, r4, r0",
            "ldr r0, str._.s:_is_read_only",
            "bl fcn.0004349c",
            "tst r5, 0x80",
            "popne {r4, r5, r6, r7, r8, pc}",
            "ldr r7, [r4, 0xc]",
            "cmp r7, 0",
            "beq 0x43b74",
            "tst r5, 0x40",
            "bne 0x43b74",
            "mov r0, r6",
            "mov r1, 0x3d",
            "bl sym.imp.strchrnul",
            "add r0, r0, 1",
            "blx r7",
            "ldr r3, [r4, 4]",
            "tst r3, 0x18",
            "bne 0x43b88",
            "ldr r0, [r4, 8]",
            "bl sym.imp.free",
            "ldr r3, [r4, 4]",
            "bic r3, r3, 0x138",
            "orr r5, r5, r3",
            "b 0x43bbc",
            "ands r8, r5, 0x80",
            "popne {r4, r5, r6, r7, r8, pc}",
            "mov r0, 0x10",
            "bl fcn.000434d4",
            "ldr r3, [r7]",
            "mov r4, r0",
            "str r8, [r0, 0xc]",
            "str r3, [r0]",
            "str r0, [r7]",
            "tst r5, 0x118",
            "bne 0x43bd0",
            "mov r0, r6",
            "bl fcn.00043a28",
            "mov r6, r0",
            "stmib r4, {r5, r6}",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.00043c24": {
        "function_address": "0x00043c24",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r7, r0",
            "mov r4, r1",
            "mov r8, r2",
            "bl fcn.00041760",
            "mov r1, 0x3d",
            "mov r6, r0",
            "bl sym.imp.strchrnul",
            "subs r6, r0, r6",
            "movne r6, 1",
            "rsb r5, r7, r0",
            "cmp r0, r7",
            "movne r0, r6",
            "orreq r0, r6, 1",
            "cmp r0, 0",
            "beq 0x43c74",
            "ldr r0, str._.s:_bad_variable_name",
            "mov r1, r5",
            "mov r2, r7",
            "bl fcn.0004349c",
            "cmp r4, 0",
            "orreq r8, r8, 0x20",
            "moveq r6, r4",
            "beq 0x43c90",
            "mov r0, r4",
            "bl sym.imp.strlen",
            "mov r6, r0",
            "ldr r3, [0x00043d04]",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "add r0, r5, 2",
            "add r0, r0, r6",
            "bl fcn.000434d4",
            "mov r1, r7",
            "mov r2, r5",
            "mov sl, r0",
            "bl sym.imp.memcpy",
            "cmp r4, 0",
            "add r3, r0, r5",
            "beq 0x43ce4",
            "mov r2, 0x3d",
            "mov r1, r4",
            "strb r2, [r0, r5]",
            "add r0, r3, 1",
            "mov r2, r6",
            "bl sym.imp.memcpy",
            "add r3, r0, r6",
            "mov r2, 0",
            "mov r0, sl",
            "strb r2, [r3]",
            "orr r1, r8, 0x100",
            "bl fcn.00043ac8",
            "pop {r4, r5, r6, r7, r8, sb, sl, lr}",
            "b fcn.00041f80"
        ]
    },
    "fcn.00044458": {
        "function_address": "0x00044458",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "mov r4, r0",
            "ldr r0, [r0, 0xc]",
            "sub sp, sp, 0x14",
            "cmp r0, 0",
            "beq 0x444e8",
            "bl fcn.00041424",
            "subs r6, r0, 0",
            "streq r6, [r4]",
            "moveq r0, r6",
            "beq 0x444e8",
            "ldr r3, [0x000444f0]",
            "ldr r7, [r3]",
            "mov r5, r7",
            "b 0x444ac",
            "ldr r0, [r5]",
            "ldr r1, [r4, 0xc]",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x444e4",
            "ldr r5, [r5, 4]",
            "cmp r5, 0",
            "bne 0x44494",
            "ldr r3, [r4, 0xc]",
            "mov r0, r6",
            "ldr r5, [0x000444f0]",
            "add r1, sp, 0xc",
            "stmib sp, {r3, r7}",
            "add r3, sp, 4",
            "str r3, [r5]",
            "bl fcn.00043d98",
            "str r7, [r5]",
            "str r0, [r4]",
            "ldr r0, [sp, 0xc]",
            "b 0x444e8",
            "mvn r0, 4",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.00041424": {
        "function_address": "0x00041424",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r0",
            "bl fcn.00041240",
            "mov r1, r4",
            "bl fcn.0004128c",
            "ldr r4, [r0]",
            "cmp r4, 0",
            "moveq r0, r4",
            "popeq {r4, pc}",
            "ldr r3, [r4, 4]",
            "tst r3, 0x200",
            "beq 0x41460",
            "ldr r3, [r4, 0xc]",
            "mov r0, 0",
            "blx r3",
            "ldr r3, [r4, 4]",
            "tst r3, 0x20",
            "bne 0x41480",
            "ldr r0, [r4, 8]",
            "mov r1, 0x3d",
            "bl sym.imp.strchrnul",
            "add r0, r0, 1",
            "pop {r4, pc}",
            "mov r0, 0",
            "pop {r4, pc}"
        ]
    },
    "fcn.00043d98": {
        "function_address": "0x00043d98",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "add fp, sp, 0x20",
            "sub r2, fp, 0x24",
            "sub sp, sp, 0x34",
            "str r0, [r2, -0x14]!",
            "str r1, [fp, -0x48]",
            "str r2, [fp, -0x4c]",
            "bl sym.imp.strlen",
            "add r3, r0, 2",
            "add r0, r0, 0x10",
            "lsr r3, r3, 1",
            "bic r0, r0, 7",
            "ldr ip, [0x00044448]",
            "lsl r3, r3, 4",
            "add r3, r3, 8",
            "mov sb, ip",
            "sub sp, sp, r3",
            "mov r3, 0",
            "str sp, [fp, -0x40]",
            "sub sp, sp, r0",
            "mov r4, sp",
            "str sp, [fp, -0x50]",
            "strb r3, [r4], 1",
            "ldr r8, [fp, -0x40]",
            "ldr r1, [fp, -0x48]",
            "str r3, [r1]",
            "str r3, [fp, -0x3c]",
            "ldr sl, [fp, -0x38]",
            "ldrb r7, [sl]",
            "cmp r7, 0",
            "bne 0x43e7c",
            "ldr r2, [0x00044448]",
            "cmp sb, r2",
            "beq 0x4443c",
            "ldr r3, [0x0004444c]",
            "cmp sl, r3",
            "strne r2, [fp, -0x38]",
            "bne 0x43e04",
            "ldr r1, [fp, -0x40]",
            "add r3, r1, 0x10",
            "cmp r8, r3",
            "beq 0x43e50",
            "ldr r2, [fp, -0x48]",
            "mvn r0, 0",
            "str r0, [r2]",
            "b 0x44440",
            "ldr r3, [fp, -0x40]",
            "ldr r0, [r3, 0xc]",
            "cmp r0, 0",
            "beq 0x43e68",
            "mov r0, r3",
            "bl fcn.00044458",
            "ldr r1, [fp, -0x48]",
            "ldr r2, [fp, -0x40]",
            "str r0, [r1]",
            "ldr r0, [r2]",
            "b 0x44440",
            "cmp r7, 0x20",
            "cmpne r7, 0xa",
            "movne r6, 0",
            "moveq r6, 1",
            "beq 0x4442c",
            "cmp r7, 9",
            "beq 0x4442c",
            "mov r0, sl",
            "bl fcn.00041760",
            "cmp r0, sl",
            "mov r5, r0",
            "beq 0x43ef0",
            "rsb r2, sl, 1",
            "mov r1, sl",
            "add r2, r0, r2",
            "add r3, r2, 0xe",
            "bic r3, r3, 7",
            "sub sp, sp, r3",
            "mov r0, sp",
            "str sp, [r8, 0xc]",
            "bl fcn.00029568",
            "str r5, [fp, -0x38]",
            "mov r3, 0",
            "mov r1, 0x14",
            "strb r3, [r8, 8]",
            "mov sb, r5",
            "add r8, r8, 0x10",
            "str r1, [fp, -0x3c]",
            "b 0x43e04",
            "sub r7, r7, 0x30",
            "cmp r7, 9",
            "ldrhi r2, aav.0x0006114c",
            "bhi 0x43f18",
            "str r6, [r8, 0xc]",
            "mov r2, r6",
            "ldr r1, [fp, -0x4c]",
            "bl sym.imp.strtol",
            "str r0, [r8]",
            "b 0x43ed4",
            "ldrb r3, [r2]",
            "cmp r3, 0",
            "beq 0x43e40",
            "mov r3, r5",
            "ldrb r1, [r2]",
            "mov sb, r2",
            "add r2, r2, 1",
            "cmp r1, 0",
            "bne 0x43f64",
            "ldr r2, [fp, -0x3c]",
            "sub r3, r3, 1",
            "str r3, [fp, -0x38]",
            "ldrb sl, [sb, 1]",
            "cmp r2, 0x13",
            "cmpne r2, 0x33",
            "moveq r1, 0x14",
            "streq r1, [fp, -0x3c]",
            "beq 0x43fc4",
            "b 0x43f88",
            "ldrb r0, [r3], 1",
            "cmp r0, r1",
            "beq 0x43f28",
            "mov r2, sb",
            "ldrb r3, [sb], 1",
            "cmp r3, 0",
            "bne 0x43f70",
            "add r2, r2, 2",
            "b 0x43f18",
            "ldr r3, [fp, -0x3c]",
            "cmp r3, 0x14",
            "beq 0x43fc4",
            "cmp sl, 0x13",
            "moveq sl, 0x12",
            "beq 0x43fc4",
            "bhi 0x43fb0",
            "cmp sl, 0xd",
            "moveq sl, 0x31",
            "b 0x43fc4",
            "cmp sl, 0x2d",
            "moveq sl, 0x11",
            "beq 0x43fc4",
            "cmp sl, 0x33",
            "moveq sl, 0x32",
            "and ip, sl, 0x1f",
            "sub r3, ip, 1",
            "uxtb r3, r3",
            "cmp ip, 0x14",
            "cmpne r3, 0xe",
            "bhi 0x44418",
            "ldr r2, [fp, -0x3c]",
            "cmp r2, 0x14",
            "bne 0x43e40",
            "b 0x443d0",
            "ldr r1, [fp, -0x44]",
            "cmp sb, 0x34",
            "ldrb r2, [r1, -1]",
            "bne 0x4400c",
            "cmp r2, 0",
            "sub r4, r1, 1",
            "beq 0x44424",
            "b 0x44040",
            "and r2, r2, 0x1f",
            "cmp sl, 3",
            "moveq sl, 2",
            "cmp r2, 3",
            "moveq r2, 2",
            "cmp r2, sl",
            "blo 0x4440c",
            "bne 0x44040",
            "cmp sl, 2",
            "cmpne sl, 0xf",
            "beq 0x4440c",
            "cmp sl, 4",
            "beq 0x4440c",
            "ldr r2, [fp, -0x44]",
            "ldr r1, [fp, -0x40]",
            "ldrb r5, [r2, -1]!",
            "cmp r3, r1",
            "str r2, [fp, -0x44]",
            "beq 0x443c8",
            "sub r7, r3, 0x10",
            "str r3, [fp, -0x54]",
            "mov r0, r7",
            "bl fcn.00044458",
            "cmp r0, 0",
            "ldr r3, [fp, -0x54]",
            "bne 0x43e68",
            "ldr r4, [r3, -0x10]",
            "cmp r5, 0x11",
            "rsbeq r4, r4, 0",
            "beq 0x44328",
            "cmp r5, 0x30",
            "bne 0x44098",
            "rsbs r4, r4, 1",
            "movlo r4, 0",
            "b 0x44328",
            "cmp r5, 0x10",
            "mvneq r4, r4",
            "beq 0x44328",
            "sub r2, r5, 0x12",
            "uxtb r2, r2",
            "cmp r2, 1",
            "addls r4, r4, 1",
            "bls 0x44328",
            "sub r2, r5, 0x32",
            "uxtb r2, r2",
            "cmp r2, 1",
            "subls r4, r4, 1",
            "bls 0x44328",
            "cmp r5, 0x31",
            "beq 0x44328",
            "ldr r2, [fp, -0x40]",
            "cmp r7, r2",
            "beq 0x443c8",
            "cmp r5, 4",
            "ldrb r3, [r7, 8]",
            "bne 0x440fc",
            "cmp r3, 0",
            "beq 0x443c8",
            "ldr r3, [r7, 4]",
            "b 0x44108",
            "cmp r3, 0",
            "bne 0x443c8",
            "mov r3, r4",
            "cmp r5, 2",
            "sub r6, r7, 0x10",
            "beq 0x44134",
            "mov r0, r6",
            "str r3, [fp, -0x54]",
            "bl fcn.00044458",
            "cmp r0, 0",
            "ldr r3, [fp, -0x54]",
            "bne 0x43e68",
            "cmp r5, 4",
            "streq r3, [r6, 4]",
            "ldr r0, [r6]",
            "cmp r5, 7",
            "cmpne r5, 0x42",
            "orreq r4, r4, r0",
            "beq 0x44340",
            "cmp r5, 5",
            "bne 0x44160",
            "orrs r0, r0, r4",
            "moveq r4, 0",
            "movne r4, 1",
            "b 0x44340",
            "cmp r5, 9",
            "cmpne r5, 0x22",
            "andeq r4, r4, r0",
            "beq 0x44340",
            "cmp r5, 8",
            "cmpne r5, 0x62",
            "eoreq r4, r4, r0",
            "beq 0x44340",
            "cmp r5, 6",
            "bne 0x4419c",
            "cmp r0, 0",
            "cmpne r4, 0",
            "moveq r4, 0",
            "movne r4, 1",
            "b 0x44340",
            "cmp r5, 0xa",
            "bne 0x441b4",
            "cmp r0, r4",
            "movne r4, 0",
            "moveq r4, 1",
            "b 0x44340",
            "cmp r5, 0x2a",
            "bne 0x441c8",
            "subs r4, r0, r4",
            "movne r4, 1",
            "b 0x44340",
            "cmp r5, 0x4b",
            "bne 0x441e0",
            "cmp r0, r4",
            "movlt r4, 0",
            "movge r4, 1",
            "b 0x44340",
            "cmp r5, 0x2c",
            "cmpne r5, 0xe2",
            "asreq r4, r0, r4",
            "beq 0x44340",
            "cmp r5, 0xc",
            "cmpne r5, 0xc2",
            "lsleq r4, r0, r4",
            "beq 0x44340",
            "cmp r5, 0x2b",
            "bne 0x44218",
            "cmp r0, r4",
            "movle r4, 0",
            "movgt r4, 1",
            "b 0x44340",
            "cmp r5, 0xb",
            "bne 0x44230",
            "cmp r0, r4",
            "movge r4, 0",
            "movlt r4, 1",
            "b 0x44340",
            "cmp r5, 0x6b",
            "bne 0x44248",
            "cmp r0, r4",
            "movgt r4, 0",
            "movle r4, 1",
            "b 0x44340",
            "cmp r5, 0xe",
            "cmpne r5, 3",
            "muleq r4, r0, r4",
            "beq 0x44340",
            "cmp r5, 0xd",
            "cmpne r5, 0x82",
            "addeq r4, r4, r0",
            "beq 0x44340",
            "cmp r5, 0x2d",
            "cmpne r5, 0xa2",
            "rsbeq r4, r4, r0",
            "beq 0x44340",
            "sub r3, r5, 1",
            "uxtb r3, r3",
            "cmp r3, 1",
            "bls 0x44340",
            "cmp r5, 0x24",
            "bne 0x442a8",
            "ldr r3, [fp, -0x40]",
            "cmp r6, r3",
            "beq 0x443c8",
            "strb r5, [r6, 8]",
            "str r4, [r6, 4]",
            "b 0x4433c",
            "cmp r5, 4",
            "bne 0x442bc",
            "cmp r0, 0",
            "ldreq r4, [r6, 4]",
            "b 0x44340",
            "cmp r5, 0x2f",
            "bne 0x442ec",
            "cmp r4, 0",
            "blt 0x443b8",
            "movne r3, r4",
            "movne r4, 1",
            "bne 0x442e0",
            "b 0x44334",
            "mul r4, r0, r4",
            "subs r3, r3, 1",
            "bhs 0x442dc",
            "b 0x44340",
            "cmp r4, 0",
            "beq 0x443c0",
            "cmp r5, 0x2e",
            "cmpne r5, 0x23",
            "bne 0x4430c",
            "mov r1, r4",
            "bl fcn.000550c8",
            "b 0x4433c",
            "cmp r5, 0x4e",
            "cmpne r5, 0x43",
            "bne 0x4433c",
            "mov r1, r4",
            "bl fcn.000551a4",
            "mov r4, r1",
            "b 0x44340",
            "mov r6, r7",
            "mov r7, r3",
            "b 0x44340",
            "mov r4, 1",
            "b 0x44340",
            "mov r4, r0",
            "and r3, r5, 0x1f",
            "cmp r3, 3",
            "moveq r3, 2",
            "cmp r3, 2",
            "cmpne r3, 0x12",
            "beq 0x44360",
            "cmp r3, 0x13",
            "bne 0x443a4",
            "ldr r3, [r6, 0xc]",
            "cmp r3, 0",
            "beq 0x443c8",
            "mov r3, r4",
            "mov r1, 0xe",
            "ldr r2, [0x00044454]",
            "sub r0, fp, 0x34",
            "bl sym.imp.snprintf",
            "ldr r0, [r6, 0xc]",
            "sub r1, fp, 0x34",
            "mov r2, 0",
            "bl fcn.00043c24",
            "cmp r5, 0x13",
            "subeq r4, r4, 1",
            "beq 0x443a4",
            "cmp r5, 0x33",
            "addeq r4, r4, 1",
            "mov r1, 0",
            "str r4, [r6]",
            "str r1, [r6, 0xc]",
            "mov r3, r7",
            "b 0x443e4",
            "mvn r0, 2",
            "b 0x43e68",
            "mvn r0, 1",
            "b 0x43e68",
            "mvn r0, 0",
            "b 0x43e68",
            "mov r3, r8",
            "mov r8, sb",
            "mov sb, sl",
            "mov sl, ip",
            "str r4, [fp, -0x44]",
            "ldr r4, [fp, -0x44]",
            "ldr r2, [fp, -0x50]",
            "cmp r4, r2",
            "bne 0x43fec",
            "mov sl, sb",
            "mov sb, r8",
            "cmp sl, 0x34",
            "mov r8, r3",
            "beq 0x43e40",
            "b 0x44418",
            "mov sl, sb",
            "mov sb, r8",
            "mov r8, r3",
            "strb sl, [r4], 1",
            "str sl, [fp, -0x3c]",
            "b 0x4442c",
            "mov sb, r8",
            "mov r8, r3",
            "ldr r3, [fp, -0x38]",
            "add r3, r3, 1",
            "str r3, [fp, -0x38]",
            "b 0x43e04",
            "mov r0, r7",
            "sub sp, fp, 0x20",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0004488c": {
        "function_address": "0x0004488c",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r0",
            "bl fcn.000411b0",
            "cmp r0, 0",
            "bne 0x448ac",
            "ldr r0, str.Illegal_number:__s",
            "mov r1, r4",
            "bl fcn.0004349c",
            "mov r0, r4",
            "pop {r4, lr}",
            "b sym.imp.atoi"
        ]
    },
    "fcn.000411b0": {
        "function_address": "0x000411b0",
        "instructions": [
            "ldrb r2, [r0]",
            "mov r3, r0",
            "sub r2, r2, 0x30",
            "cmp r2, 9",
            "bhi 0x411dc",
            "ldrb r3, [r3, 1]",
            "add r0, r0, 1",
            "cmp r3, 0",
            "bne fcn.000411b0",
            "mov r0, 1",
            "bx lr",
            "mov r0, 0",
            "bx lr"
        ]
    },
    "fcn.00042694": {
        "function_address": "0x00042694",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "ldr r5, [0x000426e8]",
            "ldr r0, [r5]",
            "cmp r0, 0",
            "movne r0, 0",
            "popne {r3, r4, r5, pc}",
            "ldr r3, [0x000426ec]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x426e0",
            "ldrb r4, [r3, 0x16]",
            "cmp r4, 1",
            "popne {r3, r4, r5, pc}",
            "ldr r0, str.You_have_stopped_jobs._n",
            "bl fcn.00042678",
            "mov r3, 2",
            "mov r0, r4",
            "str r3, [r5]",
            "pop {r3, r4, r5, pc}",
            "mov r0, r3",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.000449cc": {
        "function_address": "0x000449cc",
        "instructions": [
            "push {r3, lr}",
            "bl sym.imp.tcsetpgrp",
            "cmp r0, 0",
            "popeq {r3, pc}",
            "ldr r0, [pc]",
            "bl fcn.0004349c",
            "ldrdeq r0, r1, [r6], -lr"
        ]
    },
    "fcn.00043458": {
        "function_address": "0x00043458",
        "instructions": [
            "push {r0, r1, r2, r3}",
            "push {r0, r1, r2, lr}",
            "add r1, sp, 0x14",
            "ldr r0, [sp, 0x10]",
            "str r1, [sp, 4]",
            "bl fcn.00043384",
            "pop {r1, r2, r3, lr}",
            "add sp, sp, 0x10",
            "bx lr"
        ]
    },
    "fcn.00041b14": {
        "function_address": "0x00041b14",
        "instructions": [
            "ldr r3, [0x00041cb8]",
            "push {r4, r5, r6, lr}",
            "mov r5, r0",
            "sub sp, sp, 0x18",
            "ldr r3, [r3, r0, lsl 2]",
            "cmp r3, 0",
            "moveq r4, 1",
            "beq 0x41b44",
            "ldrb r4, [r3]",
            "cmp r4, 0",
            "moveq r4, 3",
            "movne r4, 2",
            "ldr r3, [0x00041cbc]",
            "ldr r3, [r3]",
            "cmp r4, 1",
            "cmpeq r3, 0",
            "bne 0x41bf0",
            "cmp r5, 0xf",
            "beq 0x41bc0",
            "bgt 0x41b78",
            "cmp r5, 2",
            "beq 0x41b8c",
            "cmp r5, 3",
            "beq 0x41bc0",
            "b 0x41be4",
            "cmp r5, 0x14",
            "beq 0x41bcc",
            "cmp r5, 0x16",
            "beq 0x41bcc",
            "b 0x41be4",
            "ldr r3, [0x00041cc0]",
            "ldrb r2, [r3, 3]",
            "cmp r2, 0",
            "bne 0x41bec",
            "ldr r2, [0x00041cc4]",
            "ldr r2, [r2]",
            "cmp r2, 0",
            "bne 0x41bec",
            "ldrb r4, [r3, 6]",
            "cmp r4, 0",
            "moveq r4, 2",
            "movne r4, 1",
            "b 0x41bf0",
            "ldr r3, [0x00041cc0]",
            "ldrb r4, [r3, 3]",
            "b 0x41bd4",
            "ldr r3, [0x00041cc0]",
            "ldrb r4, [r3, 4]",
            "cmp r4, 0",
            "movne r4, 3",
            "moveq r4, 1",
            "b 0x41bf0",
            "mov r4, 1",
            "b 0x41bf0",
            "mov r4, r5",
            "ldr r3, [0x00041cc8]",
            "sub r6, r5, 1",
            "ldrb r1, [r3, r6]",
            "cmp r1, 0",
            "bne 0x41c44",
            "mov r0, r5",
            "add r2, sp, 4",
            "bl sym.imp.sigaction",
            "cmn r0, 1",
            "beq 0x41cb0",
            "ldr r3, [sp, 4]",
            "cmp r3, 1",
            "bne 0x41ca0",
            "ldr r3, [0x00041cc0]",
            "ldrb r3, [r3, 4]",
            "cmp r3, 0",
            "beq 0x41cb0",
            "sub r3, r5, 0x14",
            "cmp r3, 2",
            "bls 0x41ca8",
            "b 0x41cb0",
            "cmp r1, 4",
            "beq 0x41cb0",
            "cmp r1, r4",
            "beq 0x41cb0",
            "cmp r4, 2",
            "ldreq r3, aav.0x000429cc",
            "beq 0x41c6c",
            "cmp r4, 3",
            "moveq r3, 1",
            "movne r3, 0",
            "str r3, [sp, 4]",
            "ldr r3, [0x00041cc8]",
            "strb r4, [r3, r6]",
            "add r6, sp, 4",
            "mov r4, 0",
            "add r0, r6, 0xc",
            "str r4, [sp, 8]",
            "bl sym.imp.sigfillset",
            "mov r0, r5",
            "mov r1, r6",
            "mov r2, r4",
            "bl sym.imp.sigaction",
            "b 0x41cb0",
            "mov r1, 5",
            "b 0x41c4c",
            "mov r1, 3",
            "b 0x41c4c",
            "add sp, sp, 0x18",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.imp.sigfillset": {
        "function_address": "0x0000b7bc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xba4]!"
        ]
    },
    "fcn.00044a78": {
        "function_address": "0x00044a78",
        "instructions": [
            "ldr r3, [0x00044bfc]",
            "push {r4, r5, r6, lr}",
            "mov r5, r0",
            "ldr r3, [r3]",
            "cmp r0, r3",
            "popeq {r4, r5, r6, pc}",
            "ldr r3, [0x00044c00]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "popne {r4, r5, r6, pc}",
            "cmp r0, 0",
            "beq 0x44b98",
            "ldr r0, str._dev_tty",
            "mov r1, 2",
            "bl sym.imp.open64",
            "subs r6, r0, 0",
            "movge r4, r6",
            "bge 0x44adc",
            "add r4, r6, 3",
            "mov r0, r4",
            "bl sym.imp.isatty",
            "cmp r0, 0",
            "bne 0x44adc",
            "subs r4, r4, 1",
            "bpl 0x44ac4",
            "mov r0, r4",
            "mov r1, 0",
            "mov r2, 0xa",
            "bl sym.imp.fcntl64",
            "mov r4, r0",
            "mov r0, r6",
            "bl sym.imp.close",
            "cmp r4, 0",
            "blt 0x44b20",
            "mov r0, r4",
            "mov r1, 2",
            "mov r2, 1",
            "bl sym.imp.fcntl64",
            "mov r0, r4",
            "bl sym.imp.tcgetpgrp",
            "subs r6, r0, 0",
            "bge 0x44b38",
            "ldr r0, str.cant_access_tty__job_control_turned_off",
            "bl fcn.00043458",
            "ldr r3, [0x00044c0c]",
            "mov r2, 0",
            "strb r2, [r3, 4]",
            "b 0x44bd8",
            "bl sym.imp.getpgrp",
            "cmp r6, r0",
            "beq 0x44b54",
            "mov r1, 0x15",
            "mov r0, 0",
            "bl sym.imp.killpg",
            "b 0x44b10",
            "ldr r3, [0x00044c10]",
            "mov r0, 0x14",
            "str r6, [r3]",
            "bl fcn.00041b14",
            "mov r0, 0x16",
            "bl fcn.00041b14",
            "mov r0, 0x15",
            "bl fcn.00041b14",
            "ldr r3, [0x00044c14]",
            "mov r0, 0",
            "ldr r6, [r3]",
            "mov r1, r6",
            "bl sym.imp.setpgid",
            "mov r0, r4",
            "mov r1, r6",
            "bl fcn.000449cc",
            "b 0x44be8",
            "ldr r3, [0x00044c18]",
            "ldr r4, [r3]",
            "ldr r3, [0x00044c10]",
            "mov r0, r4",
            "ldr r6, [r3]",
            "mov r1, r6",
            "bl sym.imp.tcsetpgrp",
            "mov r1, r6",
            "mov r0, r5",
            "bl sym.imp.setpgid",
            "mov r0, 0x14",
            "bl fcn.00041b14",
            "mov r0, 0x16",
            "bl fcn.00041b14",
            "mov r0, 0x15",
            "bl fcn.00041b14",
            "mov r0, r4",
            "mov r5, 0",
            "mvn r4, 0",
            "bl sym.imp.close",
            "ldr r3, [0x00044c18]",
            "str r4, [r3]",
            "ldr r3, [0x00044bfc]",
            "str r5, [r3]",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.imp.tcgetpgrp": {
        "function_address": "0x0000b684",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xc74]!"
        ]
    },
    "sym.imp.getpgrp": {
        "function_address": "0x0000b804",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xb74]!"
        ]
    },
    "sym.imp.killpg": {
        "function_address": "0x0000bdf8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x77c]!"
        ]
    },
    "sym.imp.setpgid": {
        "function_address": "0x0000bb04",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x974]!"
        ]
    },
    "fcn.00044cb4": {
        "function_address": "0x00044cb4",
        "instructions": [
            "push {r4, lr}",
            "mov r2, r1",
            "mov r1, 0",
            "mov r4, r0",
            "bl sym.imp.fcntl64",
            "cmp r0, 0",
            "popge {r4, pc}",
            "ldr r3, [0x00044cf8]",
            "ldr r3, [r3]",
            "ldr r3, [r3]",
            "cmp r3, 0x18",
            "beq 0x44cf0",
            "ldr r0, str._d:__m",
            "mov r1, r4",
            "bl fcn.0004349c",
            "mvn r0, 1",
            "pop {r4, pc}"
        ]
    },
    "fcn.00044d00": {
        "function_address": "0x00044d00",
        "instructions": [
            "ldr r2, [0x00044da4]",
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r7, r0",
            "ldr r3, [r2]",
            "sub r3, r3, 1",
            "cmp r3, 0",
            "str r3, [r2]",
            "popge {r4, r5, r6, r7, r8, pc}",
            "ldr r3, [0x00044da8]",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "ldr r3, [0x00044dac]",
            "mov r4, 0",
            "ldr r5, [r3]",
            "mov r6, r5",
            "ldr r3, [r6, 4]!",
            "cmn r3, 2",
            "beq 0x44d70",
            "cmp r7, 0",
            "bne 0x44d68",
            "mov r0, r4",
            "bl sym.imp.close",
            "ldr r0, [r6]",
            "mov r1, r4",
            "bl fcn.00044cb4",
            "ldr r0, [r6]",
            "bl sym.imp.close",
            "add r4, r4, 1",
            "cmp r4, 0xa",
            "bne 0x44d40",
            "ldr r2, [r5]",
            "mov r0, r5",
            "ldr r3, [0x00044dac]",
            "str r2, [r3]",
            "ldr r2, [r5, 0x2c]",
            "ldr r3, [0x00044da4]",
            "str r2, [r3]",
            "bl sym.imp.free",
            "pop {r4, r5, r6, r7, r8, lr}",
            "b fcn.00041f80"
        ]
    },
    "fcn.00041714": {
        "function_address": "0x00041714",
        "instructions": [
            "push {r3, lr}",
            "cmp r0, 3",
            "mov r3, r0",
            "ldr r0, [0x00041754]",
            "movgt r2, 0x22",
            "ldr r1, [0x00041758]",
            "strbgt r2, [r0], 1",
            "cmp r3, 3",
            "ldr r2, aav.0x00060514",
            "ldr r2, [r2, r3, lsl 2]",
            "movgt r3, 0x22",
            "movle r3, 0",
            "add r2, r2, 1",
            "bl sym.imp.sprintf",
            "ldr r0, [pc]",
            "pop {r3, pc}"
        ]
    },
    "fcn.00044de8": {
        "function_address": "0x00044de8",
        "instructions": [
            "mov r1, r0",
            "push {r3, lr}",
            "ldr r0, [pc]",
            "bl fcn.0004349c",
            "andeq r0, r6, sl, ror r7"
        ]
    },
    "fcn.00044ee0": {
        "function_address": "0x00044ee0",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "add r0, r0, 7",
            "ldr r6, [0x00044f84]",
            "bic r4, r0, 7",
            "ldr r3, [r6]",
            "cmp r4, r3",
            "bls 0x44f60",
            "cmp r4, 0x1f8",
            "movhs r5, r4",
            "movlo r5, 0x1f8",
            "adds r0, r5, 4",
            "blo 0x44f18",
            "ldr r0, aav.0x0005bbd8",
            "bl fcn.0004349c",
            "ldr r3, [0x00044f8c]",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "bl fcn.000434d4",
            "ldr r2, [0x00044f90]",
            "mov r3, r0",
            "str r5, [r6]",
            "add r5, r0, r5",
            "add r5, r5, 4",
            "ldr r1, [r2]",
            "str r0, [r2]",
            "str r1, [r3], 4",
            "ldr r1, [0x00044f94]",
            "str r3, [r1]",
            "ldr r3, [0x00044f98]",
            "str r5, [r3]",
            "bl fcn.00041f80",
            "ldr r3, [0x00044f94]",
            "ldr r0, [r3]",
            "add r2, r0, r4",
            "str r2, [r3]",
            "ldr r3, [0x00044f84]",
            "ldr r2, [r3]",
            "rsb r4, r4, r2",
            "str r4, [r3]",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.00044f9c": {
        "function_address": "0x00044f9c",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r5, r0",
            "bl sym.imp.strlen",
            "add r4, r0, 1",
            "mov r0, r4",
            "bl fcn.00044ee0",
            "mov r1, r5",
            "mov r2, r4",
            "pop {r4, r5, r6, lr}",
            "b sym.imp.memcpy"
        ]
    },
    "fcn.00044fc4": {
        "function_address": "0x00044fc4",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r5, r0",
            "mov r0, 8",
            "bl fcn.00044ee0",
            "mov r4, r0",
            "mov r0, r5",
            "bl fcn.00044f9c",
            "ldr r3, [0x00044ff8]",
            "str r0, [r4, 4]",
            "ldr r2, [r3, 4]",
            "str r4, [r2]",
            "str r4, [r3, 4]",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.00044ffc": {
        "function_address": "0x00044ffc",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r2, 0",
            "sub sp, sp, 0x6c",
            "mov r4, r0",
            "mov r5, r1",
            "mov r6, r1",
            "b 0x45094",
            "cmp r3, 0x2a",
            "cmpne r3, 0x3f",
            "beq 0x4508c",
            "cmp r3, 0x5b",
            "bne 0x45068",
            "ldrb r0, [r6, 1]",
            "add r3, r6, 1",
            "cmp r0, 0x21",
            "addeq r3, r3, 1",
            "ldrb r0, [r3]",
            "cmp r0, 0x5c",
            "addeq r3, r3, 1",
            "ldrb r0, [r3]",
            "cmp r0, 0x2f",
            "cmpne r0, 0",
            "beq 0x45090",
            "ldrb r0, [r3, 1]!",
            "cmp r0, 0x5d",
            "beq 0x4508c",
            "b 0x4503c",
            "cmp r3, 0x5c",
            "addeq r6, r6, 1",
            "beq 0x45090",
            "cmp r3, 0x2f",
            "bne 0x45090",
            "cmp r2, 0",
            "bne 0x45100",
            "add r5, r6, 1",
            "b 0x45090",
            "mov r2, 1",
            "add r6, r6, 1",
            "ldrb r3, [r6]",
            "cmp r3, 0",
            "bne 0x45018",
            "cmp r2, 0",
            "bne 0x45100",
            "ldr r3, [0x0004526c]",
            "ldr r0, [r3]",
            "mov r3, r4",
            "ldrb r2, [r1]",
            "cmp r2, 0x5c",
            "addeq r1, r1, 1",
            "ldrb r2, [r1]",
            "strb r2, [r3], 1",
            "ldrb r2, [r1]",
            "cmp r2, 0",
            "addne r1, r1, 1",
            "bne 0x450b4",
            "cmp r4, r0",
            "beq 0x450f0",
            "mov r1, sp",
            "bl sym.imp.lstat64",
            "cmp r0, 0",
            "blt 0x45264",
            "ldr r3, [0x0004526c]",
            "ldr r0, [r3]",
            "bl fcn.00044fc4",
            "b 0x45264",
            "cmp r1, r5",
            "bhs 0x4512c",
            "mov r3, r4",
            "ldrb r2, [r1]",
            "cmp r2, 0x5c",
            "addeq r1, r1, 1",
            "ldrb r2, [r1], 1",
            "cmp r1, r5",
            "strb r2, [r3], 1",
            "mov r4, r3",
            "blo 0x4510c",
            "ldr r3, [0x0004526c]",
            "ldr r0, [r3]",
            "cmp r4, r0",
            "ldreq r0, [0x00045270]",
            "beq 0x45164",
            "add r3, r0, 1",
            "cmp r4, r3",
            "bne 0x4515c",
            "ldrb r3, [r0]",
            "cmp r3, 0x2f",
            "ldreq r0, [0x00045274]",
            "beq 0x45164",
            "mov r3, 0",
            "strb r3, [r4, -1]",
            "bl sym.imp.opendir",
            "subs sl, r0, 0",
            "beq 0x45264",
            "ldr r3, [0x0004526c]",
            "ldr fp, [0x00045278]",
            "ldr r3, [r3]",
            "cmp r4, r3",
            "movne r3, 0x2f",
            "strbne r3, [r4, -1]",
            "ldrb r3, [r6]",
            "cmp r3, 0",
            "movne r7, 0",
            "moveq r7, 1",
            "strbne r7, [r6], 1",
            "ldrb r3, [r5]",
            "cmp r3, 0x5c",
            "addeq r3, r5, 1",
            "movne r3, r5",
            "ldrb sb, [r3]",
            "b 0x45234",
            "ldrb r3, [r0, 0x13]",
            "subs r2, sb, 0x2e",
            "movne r2, 1",
            "cmp r3, 0x2e",
            "movne r2, 0",
            "cmp r2, 0",
            "bne 0x45234",
            "add r8, r0, 0x13",
            "mov r0, r5",
            "mov r1, r8",
            "bl sym.imp.fnmatch",
            "cmp r0, 0",
            "bne 0x45234",
            "cmp r7, 0",
            "beq 0x4520c",
            "mov r0, r4",
            "mov r1, r8",
            "bl sym.imp.strcpy",
            "ldr r3, [0x0004526c]",
            "ldr r0, [r3]",
            "bl fcn.00044fc4",
            "b 0x45234",
            "mov r0, r4",
            "ldrb r3, [r8], 1",
            "mov r2, r0",
            "cmp r3, 0",
            "strb r3, [r0], 1",
            "bne 0x45210",
            "mov r3, 0x2f",
            "mov r1, r6",
            "strb r3, [r2]",
            "bl fcn.00044ffc",
            "ldr r3, [fp]",
            "cmp r3, 0",
            "bne 0x45250",
            "mov r0, sl",
            "bl sym.imp.readdir64",
            "cmp r0, 0",
            "bne 0x451b4",
            "mov r0, sl",
            "bl sym.imp.closedir",
            "cmp r7, 0",
            "moveq r3, 0x2f",
            "strbeq r3, [r6, -1]",
            "add sp, sp, 0x6c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0004527c": {
        "function_address": "0x0004527c",
        "instructions": [
            "push {r3, lr}",
            "mov r0, 0x10",
            "bl fcn.00044ee0",
            "mov r2, 0xf",
            "str r2, [r0]",
            "mov r2, 0",
            "str r2, [r0, 4]",
            "ldr r2, [0x000452b4]",
            "ldr r2, [r2]",
            "str r2, [r0, 8]",
            "ldr r2, [0x000452b8]",
            "ldr r2, [r2]",
            "str r2, [r0, 0xc]",
            "pop {r3, pc}"
        ]
    },
    "fcn.00045328": {
        "function_address": "0x00045328",
        "instructions": [
            "ldr r3, [0x00045424]",
            "push {r4, r5, r6, r7, r8, lr}",
            "ldr r5, [r3]",
            "lsl r4, r5, 1",
            "cmp r4, r5",
            "bhs 0x45348",
            "ldr r0, aav.0x0005bbd8",
            "bl fcn.0004349c",
            "ldr r6, [0x0004542c]",
            "cmp r4, 0x7f",
            "ldr r7, [0x00045430]",
            "addls r4, r4, 0x80",
            "ldr r3, [r6]",
            "ldr r8, [r7]",
            "add r2, r3, 4",
            "cmp r8, r2",
            "bne 0x453f4",
            "ldr r2, [0x00045434]",
            "cmp r3, r2",
            "beq 0x453f4",
            "ldr r3, [0x00045438]",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "ldr r5, [r6]",
            "add r1, r4, 4",
            "mov r0, r5",
            "ldr r8, [r5]",
            "bl fcn.000434b8",
            "ldr r3, [0x00045424]",
            "add r1, r0, r4",
            "add r1, r1, 4",
            "add r2, r0, 4",
            "str r8, [r0]",
            "str r4, [r3]",
            "ldr r3, [0x0004543c]",
            "str r0, [r6]",
            "str r2, [r7]",
            "str r1, [r3]",
            "ldr r3, [0x00045440]",
            "ldr r3, [r3]",
            "b 0x453d8",
            "stm r3, {r0, r2, r4}",
            "ldr r3, [r3, 0xc]",
            "cmp r3, 0",
            "beq 0x453ec",
            "ldr r1, [r3]",
            "cmp r1, r5",
            "beq 0x453d0",
            "pop {r4, r5, r6, r7, r8, lr}",
            "b fcn.00041f80",
            "mov r0, r4",
            "bl fcn.00044ee0",
            "mov r2, r5",
            "mov r1, r8",
            "bl sym.imp.memcpy",
            "ldr r3, [0x00045430]",
            "str r0, [r3]",
            "ldr r3, [0x00045424]",
            "ldr r2, [r3]",
            "add r4, r4, r2",
            "str r4, [r3]",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.00045444": {
        "function_address": "0x00045444",
        "instructions": [
            "ldr r3, [0x00045484]",
            "push {r4, r5, r6, lr}",
            "mov r4, r0",
            "ldr r6, [0x00045488]",
            "ldr r3, [r3]",
            "rsb r5, r3, r1",
            "ldr r3, [r6]",
            "rsb r3, r5, r3",
            "cmp r3, r4",
            "bhs 0x45474",
            "bl fcn.00045328",
            "b 0x4545c",
            "ldr r3, [0x00045484]",
            "ldr r0, [r3]",
            "add r0, r0, r5",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.00041684": {
        "function_address": "0x00041684",
        "instructions": [
            "cmn r0, 0x82",
            "push {r3, r4, r5, lr}",
            "mov r3, r0",
            "mov r5, r1",
            "moveq r0, 0xb",
            "popeq {r3, r4, r5, pc}",
            "cmn r3, 0x81",
            "beq 0x416ec",
            "add r2, r3, 0x7f",
            "uxtb r2, r2",
            "cmp r2, 7",
            "movls r0, 0xc",
            "popls {r3, r4, r5, pc}",
            "ldr r4, str._t_n________:_______",
            "mov r1, r3",
            "mov r0, r4",
            "bl sym.imp.strchr",
            "cmp r0, 0",
            "popeq {r3, r4, r5, pc}",
            "ldrb r3, [r0]",
            "cmp r3, 0",
            "beq 0x41700",
            "ldr r3, aav.0x00061360",
            "rsb r0, r4, r0",
            "ldrb r3, [r3, r0]",
            "b 0x416f0",
            "mov r3, 0",
            "add r5, r5, r3, lsl 2",
            "ldr r3, aav.0x0006103c",
            "ldrb r0, [r3, r5]",
            "pop {r3, r4, r5, pc}",
            "mov r0, r3",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.000457a8": {
        "function_address": "0x000457a8",
        "instructions": [
            "push {r0, r1, r4, r5, r6, lr}",
            "subs r4, r0, 0",
            "beq 0x45a68",
            "ldr r3, [r4]",
            "cmp r3, 0x19",
            "ldrls pc, [pc, r3, lsl 2]",
            "b case.0x457bc.1",
            "ldr r5, [0x00045a6c]",
            "b 0x45a18",
            "ldr r0, str.while",
            "b 0x458f8",
            "ldr r5, aav.0x0006088c",
            "b 0x45874",
            "ldr r4, [r4, 8]",
            "ldr r0, [r4, 4]",
            "bl fcn.000457a8",
            "ldr r4, [r4]",
            "cmp r4, 0",
            "beq 0x45a68",
            "ldr r0, aav.0x00060860",
            "bl fcn.000455a4",
            "b 0x45848",
            "ldr r5, str._",
            "b 0x45874",
            "ldr r5, [0x00045a80]",
            "ldr r0, [r4, 4]",
            "bl fcn.000457a8",
            "mov r0, r5",
            "bl fcn.000455a4",
            "ldr r0, [r4, 8]",
            "b 0x45898",
            "ldr r0, [0x00045a84]",
            "bl fcn.000455a4",
            "ldr r0, [r4, 4]",
            "bl fcn.000457a8",
            "b 0x45a68",
            "ldr r0, aav.0x00060864",
            "bl fcn.000455a4",
            "ldr r0, [r4, 4]",
            "bl fcn.000457a8",
            "ldr r0, str.__then",
            "bl fcn.000455a4",
            "ldr r5, [r4, 8]",
            "ldr r3, [r5, 0xc]",
            "cmp r3, 0",
            "beq 0x45918",
            "mov r0, r5",
            "bl fcn.000457a8",
            "ldr r0, str.__else",
            "bl fcn.000455a4",
            "ldr r5, [r5, 0xc]",
            "b 0x45918",
            "ldr r0, aav.0x00060814",
            "bl fcn.000455a4",
            "ldr r5, [r4, 4]",
            "ldr r4, [0x00045a98]",
            "b 0x4591c",
            "ldr r0, str.until",
            "bl fcn.000455a4",
            "ldr r0, [r4, 4]",
            "bl fcn.000457a8",
            "ldr r0, str.__do",
            "ldr r5, [r4, 8]",
            "bl fcn.000455a4",
            "ldr r4, str.__done",
            "b 0x4591c",
            "ldr r4, str.__fi",
            "mov r0, r5",
            "bl fcn.000457a8",
            "b 0x45988",
            "ldr r0, str.for",
            "bl fcn.000455a4",
            "ldr r0, [r4, 0xc]",
            "bl fcn.000455a4",
            "ldr r0, str._in",
            "bl fcn.000455a4",
            "ldr r0, [r4, 4]",
            "mov r1, 1",
            "bl fcn.00045ae4",
            "b 0x45904",
            "ldr r0, [r4, 8]",
            "bl fcn.000455a4",
            "ldr r4, str.____..._",
            "b 0x45988",
            "ldr r0, [r4, 8]",
            "mov r1, 1",
            "bl fcn.00045ae4",
            "ldr r0, [r4, 0xc]",
            "mov r1, 0",
            "bl fcn.00045ae4",
            "b 0x45a68",
            "ldr r4, [r4, 8]",
            "b 0x45988",
            "ldr r4, str.__...",
            "mov r0, r4",
            "bl fcn.000455a4",
            "b 0x45a68",
            "ldr r0, [0x00045abc]",
            "bl fcn.000455a4",
            "ldr r3, [r4, 4]",
            "ldr r0, [r3, 8]",
            "bl fcn.000455a4",
            "ldr r0, str._in",
            "bl fcn.000455a4",
            "ldr r4, [r4, 8]",
            "b 0x459dc",
            "ldr r0, [r4, 8]",
            "bl fcn.000457a8",
            "ldr r0, aav.0x00060888",
            "bl fcn.000455a4",
            "ldr r0, [r4, 0xc]",
            "bl fcn.000457a8",
            "ldr r0, [0x00045ac4]",
            "bl fcn.000455a4",
            "ldr r4, [r4, 4]",
            "cmp r4, 0",
            "bne 0x459b8",
            "ldr r4, str.esac",
            "b 0x45988",
            "ldr r5, [0x00045acc]",
            "b 0x45a18",
            "ldr r5, [0x00045ad0]",
            "b 0x45a18",
            "ldr r5, aav.0x0005b5dc",
            "b 0x45a18",
            "ldr r5, [0x00045ad8]",
            "b 0x45a18",
            "ldr r5, [0x00045adc]",
            "b 0x45a18",
            "ldr r5, aav.0x00060854",
            "ldr r3, [r4, 8]",
            "add r6, sp, 4",
            "mov r0, r6",
            "add r3, r3, 0x30",
            "strb r3, [sp, 4]",
            "mov r3, 0",
            "strb r3, [sp, 5]",
            "bl fcn.000455a4",
            "mov r0, r5",
            "bl fcn.000455a4",
            "ldr r3, [r4]",
            "sub r3, r3, 0x15",
            "cmp r3, 1",
            "ldrls r3, [r4, 0xc]",
            "movls r4, r6",
            "addls r3, r3, 0x30",
            "strbls r3, [sp, 4]",
            "bls 0x45988",
            "ldr r0, [r4, 0xc]",
            "b 0x45898",
            "pop {r2, r3, r4, r5, r6, pc}"
        ]
    },
    "fcn.000455a4": {
        "function_address": "0x000455a4",
        "instructions": [
            "push {r0, r1, r2, r4, r5, r6, r7, r8, sl, lr}",
            "mov r3, 0x20",
            "strh r3, [sp, 4]",
            "mov r4, r0",
            "bl sym.imp.strlen",
            "ldr r3, [0x00045780]",
            "add r0, r0, 1",
            "lsl r0, r0, 3",
            "ldr sl, [0x00045784]",
            "ldr r8, [0x00045788]",
            "ldr r1, [r3]",
            "bl fcn.00045444",
            "mov r1, 0",
            "ldr r7, [0x0004578c]",
            "mov ip, r1",
            "ldr r6, [0x00045790]",
            "ldr r5, aav.0x00060f8c",
            "b 0x45754",
            "cmp r3, 0x82",
            "add r4, r4, 1",
            "beq 0x45684",
            "bhi 0x45638",
            "cmp r3, 0x27",
            "beq 0x45710",
            "bhi 0x4561c",
            "cmp r3, 0x22",
            "beq 0x45710",
            "cmp r3, 0x24",
            "beq 0x45710",
            "b 0x45720",
            "cmp r3, 0x5c",
            "beq 0x45710",
            "cmp r3, 0x81",
            "beq 0x4567c",
            "cmp r3, 0x3d",
            "beq 0x456e8",
            "b 0x45720",
            "cmp r3, 0x85",
            "beq 0x456d0",
            "bhi 0x45658",
            "cmp r3, 0x83",
            "beq 0x456b8",
            "cmp r3, 0x84",
            "beq 0x45674",
            "b 0x45720",
            "cmp r3, 0x87",
            "beq 0x456e0",
            "blo 0x456d8",
            "cmp r3, 0x88",
            "eoreq r1, r1, 1",
            "moveq r3, 0x22",
            "b 0x45720",
            "ldr r2, str.__..._",
            "b 0x45748",
            "ldrb r3, [r4], 1",
            "b 0x45720",
            "ldrb ip, [r4], 1",
            "and r2, ip, 0xf",
            "cmp r2, 0xa",
            "movne r2, sl",
            "moveq r2, r8",
            "tst r1, 1",
            "movne r3, 0",
            "moveq r3, 1",
            "cmp r3, ip, lsr 7",
            "eoreq r1, r1, 1",
            "moveq r3, 0x22",
            "beq 0x45734",
            "b 0x45748",
            "tst r1, 1",
            "mov ip, 0",
            "moveq r2, r7",
            "movne r2, r6",
            "asr r1, r1, 1",
            "b 0x45748",
            "ldr r2, str.___...__",
            "b 0x45748",
            "ldr r2, [0x000457a0]",
            "b 0x45748",
            "ldr r2, [0x000457a4]",
            "b 0x45748",
            "cmp ip, 0",
            "beq 0x45728",
            "and r3, ip, 0xf",
            "and r2, ip, 0xf",
            "cmp r3, 1",
            "add r2, r5, r2, lsl 2",
            "lslne r1, r1, 1",
            "tst ip, 0x10",
            "bne 0x45730",
            "b 0x45738",
            "add r2, sp, 8",
            "strb r3, [r2, -4]!",
            "mov r3, 0x5c",
            "b 0x45734",
            "mov r2, 0",
            "b 0x45734",
            "mov r2, ip",
            "b 0x45734",
            "mov r3, 0x3a",
            "strb r3, [r0], 1",
            "cmp r2, 0",
            "beq 0x45754",
            "b 0x45748",
            "strb r3, [r0], 1",
            "ldrb r3, [r2], 1",
            "cmp r3, 0",
            "bne 0x45744",
            "ldrb r3, [r4]",
            "cmp r3, 0",
            "bne 0x455ec",
            "tst r1, 1",
            "addne r3, r3, 0x22",
            "strbne r3, [r0], 1",
            "mov r3, 0",
            "strb r3, [r0]",
            "ldr r3, [0x00045780]",
            "str r0, [r3]",
            "pop {r1, r2, r3, r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "fcn.00045ae4": {
        "function_address": "0x00045ae4",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r4, r0",
            "mov r5, r1",
            "b 0x45b2c",
            "cmp r5, 0",
            "bne 0x45b04",
            "ldr r0, [0x00045b38]",
            "bl fcn.000455a4",
            "mov r0, r4",
            "bl fcn.000457a8",
            "cmp r5, 0",
            "beq 0x45b28",
            "ldr r3, [r4, 4]",
            "cmp r3, 0",
            "beq 0x45b28",
            "ldr r0, [0x00045b38]",
            "bl fcn.000455a4",
            "ldr r4, [r4, 4]",
            "cmp r4, 0",
            "bne 0x45af4",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.00045c74": {
        "function_address": "0x00045c74",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sl, lr}",
            "mov r5, r0",
            "ldr r3, [0x00045d28]",
            "mov r8, 0x27",
            "mov r7, 0x22",
            "ldr sl, [r3]",
            "mov r1, 0x27",
            "mov r0, r5",
            "bl sym.imp.strchrnul",
            "rsb r4, r5, r0",
            "mov r1, sl",
            "add r0, r4, 3",
            "add r6, r5, r4",
            "bl fcn.00045444",
            "mov r2, r4",
            "mov r1, r5",
            "strb r8, [r0], 1",
            "bl sym.imp.memcpy",
            "ldr r1, [0x00045d2c]",
            "add sl, r0, r4",
            "strb r8, [r0, r4]",
            "mov r0, r6",
            "bl sym.imp.strspn",
            "subs r4, r0, 0",
            "add sl, sl, 1",
            "beq 0x45d14",
            "mov r1, sl",
            "add r0, r4, 3",
            "bl fcn.00045444",
            "mov r1, r6",
            "strb r7, [r0], 1",
            "mov r2, r4",
            "add r5, r6, r4",
            "bl sym.imp.memcpy",
            "strb r7, [r0, r4]",
            "add sl, r0, r4",
            "ldrb r3, [r6, r4]",
            "add sl, sl, 1",
            "cmp r3, 0",
            "bne 0x45c8c",
            "mov r3, 0",
            "strb r3, [sl]",
            "ldr r3, [0x00045d28]",
            "ldr r0, [r3]",
            "pop {r3, r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "fcn.00045d30": {
        "function_address": "0x00045d30",
        "instructions": [
            "push {r4, lr}",
            "ldr r4, [r0, 4]",
            "ldr r0, [r0, 8]",
            "bl fcn.00045c74",
            "mov r1, r4",
            "mov r2, r0",
            "ldr r0, str._s_s_n",
            "pop {r4, lr}",
            "b fcn.00042df4"
        ]
    },
    "fcn.00045ebc": {
        "function_address": "0x00045ebc",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "ldr r3, [0x00045f14]",
            "ldr r4, [0x00045f18]",
            "ldr r5, [r3]",
            "ldr r3, [0x00045f1c]",
            "ldr r0, [r3]",
            "cmp r5, 0x400",
            "movlo r3, 0",
            "movhs r3, 1",
            "cmp r0, 0",
            "movlt r3, 0",
            "cmp r3, 0",
            "beq 0x45f04",
            "ldr r1, [r4]",
            "mov r2, r5",
            "bl fcn.000274f4",
            "ldr r0, [r4]",
            "pop {r3, r4, r5, pc}",
            "bl fcn.00045328",
            "ldr r0, [r4]",
            "add r0, r0, r5",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.00045f4c": {
        "function_address": "0x00045f4c",
        "instructions": [
            "ldr r3, [0x00045fec]",
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r4, r0",
            "ldr r7, [0x00045ff0]",
            "mov r5, r2",
            "orr sb, r1, r4",
            "ldr r0, [r3]",
            "ldr r8, [0x00045ff4]",
            "add sl, r7, 0x9c",
            "ldr r6, [r7, 4]!",
            "b 0x45fa4",
            "ldr r3, [r6, 4]",
            "and r3, sb, r3",
            "cmp r3, r4",
            "bne 0x45fa0",
            "ldr r3, [r8]",
            "cmp r0, r3",
            "bne 0x45f98",
            "bl fcn.00045ebc",
            "ldr r3, [r6, 8]",
            "str r3, [r0], 4",
            "ldr r6, [r6]",
            "cmp r6, 0",
            "bne 0x45f78",
            "cmp r7, sl",
            "bne 0x45f70",
            "ldr r3, [0x00045ff4]",
            "ldr r3, [r3]",
            "cmp r0, r3",
            "bne 0x45fc8",
            "bl fcn.00045ebc",
            "cmp r5, 0",
            "mov r3, 0",
            "strne r0, [r5]",
            "str r3, [r0], 4",
            "ldr r3, [0x00045fec]",
            "ldr r3, [r3]",
            "rsb r0, r3, r0",
            "pop {r4, r5, r6, r7, r8, sb, sl, lr}",
            "b fcn.00044ee0"
        ]
    },
    "fcn.000425e8": {
        "function_address": "0x000425e8",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "ldr r5, [0x0004260c]",
            "ldr r4, [0x00042610]",
            "b 0x425fc",
            "bl fcn.00042534",
            "ldr r3, [r5]",
            "cmp r3, r4",
            "bne 0x425f8",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.00041648": {
        "function_address": "0x00041648",
        "instructions": [
            "ldr r3, [0x00041680]",
            "push {r4, lr}",
            "sub r4, r0, 1",
            "ldrb r3, [r3, r4]",
            "sub r3, r3, 3",
            "uxtb r3, r3",
            "cmp r3, 1",
            "bls 0x41670",
            "mov r1, 1",
            "bl sym.imp.signal",
            "ldr r3, [0x00041680]",
            "mov r2, 4",
            "strb r2, [r3, r4]",
            "pop {r4, pc}"
        ]
    },
    "fcn.000464f0": {
        "function_address": "0x000464f0",
        "instructions": [
            "ldr r3, [0x000465f8]",
            "push {r4, lr}",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x46510",
            "ldrb r2, [r3]",
            "cmp r2, 0",
            "bne 0x46560",
            "ldr r2, [0x000465fc]",
            "ldr ip, [r2]",
            "ldr r1, [ip]",
            "cmp r1, 0",
            "beq 0x465e8",
            "ldrb r3, [r1]",
            "cmp r3, 0x2d",
            "movne r0, 0",
            "popne {r4, pc}",
            "add r3, r1, 1",
            "ldrb r1, [r1, 1]",
            "cmp r1, 0",
            "beq 0x465e8",
            "cmp r1, 0x2d",
            "add ip, ip, 4",
            "str ip, [r2]",
            "bne 0x46560",
            "ldrb r1, [r3, 1]",
            "cmp r1, 0",
            "beq 0x465f0",
            "ldrb r1, [r3]",
            "b 0x46584",
            "cmp ip, 0",
            "ldreq r0, str.illegal_option___c",
            "beq 0x465d0",
            "ldrb ip, [r2, 1]!",
            "cmp ip, 0x3a",
            "bne 0x46588",
            "add r0, r0, 1",
            "mov r2, r0",
            "mov r4, r0",
            "ldrb ip, [r0], 1",
            "cmp ip, r1",
            "bne 0x46568",
            "ldrb r0, [r4, 1]",
            "add r2, r3, 1",
            "cmp r0, 0x3a",
            "bne 0x465e0",
            "ldrb r3, [r3, 1]",
            "cmp r3, 0",
            "bne 0x465d4",
            "ldr r0, [0x000465fc]",
            "ldr r3, [r0]",
            "ldr r2, [r3], 4",
            "cmp r2, 0",
            "str r3, [r0]",
            "bne 0x465d4",
            "ldr r0, str.no_arg_for___c_option",
            "bl fcn.0004349c",
            "ldr r3, [0x00046608]",
            "str r2, [r3]",
            "mov r2, 0",
            "ldr r3, [0x000465f8]",
            "str r2, [r3]",
            "mov r0, r1",
            "pop {r4, pc}",
            "mov r0, r1",
            "pop {r4, pc}"
        ]
    },
    "fcn.000444f4": {
        "function_address": "0x000444f4",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r6, r0",
            "bl fcn.00041240",
            "mov r1, r6",
            "bl fcn.0004128c",
            "ldr r4, [r0]",
            "mov r7, r0",
            "cmp r4, 0",
            "moveq r0, 2",
            "popeq {r3, r4, r5, r6, r7, pc}",
            "ldr r3, [r4, 4]",
            "ands r0, r3, 2",
            "bne 0x445a0",
            "bic r2, r3, 0x200",
            "ands r5, r3, 0x20",
            "str r2, [r4, 4]",
            "popne {r3, r4, r5, r6, r7, pc}",
            "tst r3, 4",
            "bne 0x4457c",
            "ldr r2, [0x000445a8]",
            "ldr r1, [r2]",
            "add r1, r1, 1",
            "str r1, [r2]",
            "tst r3, 0x18",
            "bne 0x44560",
            "ldr r0, [r4, 8]",
            "bl sym.imp.free",
            "ldr r3, [r4]",
            "mov r0, r4",
            "str r3, [r7]",
            "bl sym.imp.free",
            "bl fcn.00041f80",
            "mov r0, 0",
            "pop {r3, r4, r5, r6, r7, pc}",
            "mov r0, r6",
            "mov r1, r5",
            "mov r2, r5",
            "bl fcn.00043c24",
            "ldr r3, [r4, 4]",
            "mov r0, r5",
            "bic r3, r3, 1",
            "str r3, [r4, 4]",
            "pop {r3, r4, r5, r6, r7, pc}",
            "mov r0, 1",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.00043554": {
        "function_address": "0x00043554",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r5, r0",
            "ldrb r0, [r0]",
            "mov r7, r1",
            "mov r3, r5",
            "lsl r0, r0, 4",
            "b 0x43574",
            "add r0, r0, r2",
            "ldrb r2, [r3], 1",
            "cmp r2, 0",
            "bne 0x43570",
            "lsl r0, r0, 0x11",
            "mov r1, 0x1f",
            "lsr r0, r0, 0x11",
            "bl fcn.000550a8",
            "ldr r3, [0x00043620]",
            "ldr r4, [r3, r1, lsl 2]",
            "add r6, r3, r1, lsl 2",
            "b 0x435bc",
            "add r0, r4, 0xb",
            "mov r1, r5",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x435c4",
            "mov r6, r4",
            "ldr r4, [r4]",
            "cmp r4, 0",
            "bne 0x435a0",
            "rsbs r3, r4, 1",
            "movlo r3, 0",
            "cmp r7, 0",
            "moveq r3, 0",
            "cmp r3, 0",
            "beq 0x43610",
            "mov r0, r5",
            "bl sym.imp.strlen",
            "add r0, r0, 0xc",
            "bl fcn.000434d4",
            "mov r3, 0",
            "str r0, [r6]",
            "str r3, [r0]",
            "mvn r3, 0",
            "mov r4, r0",
            "strh r3, [r0, 8]",
            "mov r1, r5",
            "add r0, r0, 0xb",
            "bl sym.imp.strcpy",
            "ldr r3, [0x00043624]",
            "mov r0, r4",
            "str r6, [r3]",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.00042978": {
        "function_address": "0x00042978",
        "instructions": [
            "ldr r3, [0x000429c4]",
            "push {r4, lr}",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "ldr r3, [0x000429c8]",
            "ldr r3, [r3]",
            "ldr r4, [r3]",
            "ldr r2, [r4]",
            "str r2, [r3]",
            "ldrsh r3, [r4, 8]",
            "cmp r3, 1",
            "bne 0x429b4",
            "ldr r0, [r4, 4]",
            "bl fcn.00041844",
            "mov r0, r4",
            "bl sym.imp.free",
            "pop {r4, lr}",
            "b fcn.00041f80"
        ]
    },
    "fcn.00041844": {
        "function_address": "0x00041844",
        "instructions": [
            "subs r2, r0, 0",
            "bxeq lr",
            "ldr r3, [r2]",
            "sub r3, r3, 1",
            "cmp r3, 0",
            "str r3, [r2]",
            "bxge lr",
            "b sym.imp.free"
        ]
    },
    "fcn.0004678c": {
        "function_address": "0x0004678c",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r5, 0x4c",
            "mov r4, 0",
            "b 0x467a8",
            "cmp r0, r5",
            "eorne r4, r4, 1",
            "movne r5, r0",
            "ldr r0, [0x000467c0]",
            "bl fcn.000464f0",
            "cmp r0, 0",
            "bne 0x4679c",
            "mov r0, r4",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.00044784": {
        "function_address": "0x00044784",
        "instructions": [
            "ldr r3, [0x00044874]",
            "cmp r1, 0",
            "push {r4, r5, r6, lr}",
            "mov r5, r0",
            "ldr r4, [r3]",
            "beq 0x447ac",
            "ldr r0, str.OLDPWD",
            "mov r1, r4",
            "mov r2, 1",
            "bl fcn.00043c24",
            "ldr r3, [0x0004487c]",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "ldr r3, [0x00044880]",
            "ldr r0, [r3]",
            "ldr r3, [0x00044884]",
            "cmp r0, r3",
            "beq 0x447e8",
            "cmp r0, r4",
            "beq 0x447dc",
            "bl sym.imp.free",
            "ldr r2, [0x00044884]",
            "ldr r3, [0x00044880]",
            "str r2, [r3]",
            "rsbs r6, r5, 1",
            "movlo r6, 0",
            "cmp r5, 0",
            "cmpne r4, r5",
            "bne 0x44828",
            "mov r0, 0",
            "ldr r5, [0x00044884]",
            "mov r1, r0",
            "bl sym.imp.getcwd",
            "ldr r3, [0x00044880]",
            "cmp r0, 0",
            "movne r5, r0",
            "cmp r6, 0",
            "str r5, [r3]",
            "bne 0x44834",
            "b 0x44854",
            "mov r0, r5",
            "bl fcn.00043a28",
            "mov r5, r0",
            "cmp r4, r5",
            "beq 0x44854",
            "ldr r3, [0x00044884]",
            "cmp r4, r3",
            "beq 0x44850",
            "mov r0, r4",
            "bl sym.imp.free",
            "mov r4, r5",
            "ldr r3, [0x00044874]",
            "str r4, [r3]",
            "bl fcn.00041f80",
            "ldr r0, aav.0x000606b4",
            "mov r1, r4",
            "mov r2, 1",
            "pop {r4, r5, r6, lr}",
            "b fcn.00043c24"
        ]
    },
    "fcn.00045ff8": {
        "function_address": "0x00045ff8",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "sub sp, sp, 0x14",
            "mov r5, r0",
            "mov r0, r1",
            "mov r1, r2",
            "add r2, sp, 0xc",
            "bl fcn.00045f4c",
            "ldr r1, [sp, 0xc]",
            "mov r2, 4",
            "ldr r3, aav.0x00041280",
            "mov r4, r0",
            "rsb r1, r0, r1",
            "asr r1, r1, 2",
            "bl sym.imp.qsort",
            "ldrb r6, [r5]",
            "ldr r3, [0x000460b0]",
            "cmp r6, 0",
            "moveq r6, r5",
            "movne r6, r3",
            "b 0x46094",
            "ldr r0, [r4], 4",
            "mov r1, 0x3d",
            "bl sym.imp.strchrnul",
            "ldrb r3, [r0]",
            "mov r7, r0",
            "cmp r3, 0",
            "ldreq r0, [0x000460b4]",
            "beq 0x46074",
            "add r7, r7, 1",
            "mov r0, r7",
            "bl fcn.00045c74",
            "ldr r3, [r4, -4]",
            "mov r1, r5",
            "str r0, [sp, 4]",
            "mov r2, r6",
            "ldr r0, str._s_s_.s_s_n",
            "str r3, [sp]",
            "rsb r3, r3, r7",
            "bl fcn.00042df4",
            "ldr r3, [sp, 0xc]",
            "cmp r3, r4",
            "bhi 0x46048",
            "mov r0, 0",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, pc}"
        ]
    },
    "sym.imp.qsort": {
        "function_address": "0x0000bfd8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x63c]!"
        ]
    },
    "fcn.000468e8": {
        "function_address": "0x000468e8",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sl, lr}",
            "subs r6, r0, 0",
            "ldr r3, [0x00046a50]",
            "mov sl, r1",
            "ldr r4, [r3]",
            "beq 0x46954",
            "ldrb r3, [r6]",
            "cmp r3, 0x25",
            "bne 0x46a30",
            "ldrb r8, [r6, 1]",
            "add r5, r6, 1",
            "cmp r8, 0",
            "beq 0x46954",
            "ldrb r3, [r5, 1]",
            "add r7, r5, 1",
            "cmp r3, 0",
            "bne 0x46964",
            "cmp r8, 0x2b",
            "cmpne r8, 0x25",
            "beq 0x46954",
            "cmp r8, 0x2d",
            "bne 0x46964",
            "cmp r4, 0",
            "ldrne r4, [r4, 0x18]",
            "ldrne r5, str.No_previous_job",
            "bne 0x46958",
            "b 0x46a38",
            "ldr r5, str.No_current_job",
            "cmp r4, 0",
            "beq 0x46a44",
            "b 0x46a0c",
            "mov r0, r5",
            "bl fcn.000411b0",
            "cmp r0, 0",
            "beq 0x469b8",
            "mov r0, r5",
            "bl sym.imp.atoi",
            "ldr r3, [0x00046a5c]",
            "ldr r3, [r3]",
            "cmp r0, r3",
            "bhs 0x469b8",
            "ldr r3, [0x00046a60]",
            "sub r0, r0, 1",
            "mov r4, 0x1c",
            "ldr r3, [r3]",
            "mla r4, r4, r0, r3",
            "ldrb r3, [r4, 0x17]",
            "and r3, r3, 8",
            "uxtb r3, r3",
            "cmp r3, 0",
            "bne 0x46a0c",
            "b 0x46a30",
            "cmp r8, 0x3f",
            "ldr r3, fcn.0004117c",
            "ldr sl, sym.imp.strstr",
            "movne r7, r5",
            "ldr r5, str.No_such_job:__s",
            "mov r8, 0",
            "movne sl, r3",
            "cmp r4, 0",
            "beq 0x46a44",
            "ldr r3, [r4, 0xc]",
            "mov r1, r7",
            "ldr r0, [r3, 8]",
            "blx sl",
            "cmp r0, 0",
            "beq 0x46a04",
            "cmp r8, 0",
            "bne 0x46a44",
            "ldr r5, str._s:_ambiguous",
            "mov r8, r4",
            "ldr r4, [r4, 0x18]",
            "b 0x469d4",
            "cmp sl, 0",
            "beq 0x46a28",
            "ldrb r3, [r4, 0x17]",
            "and r3, r3, 2",
            "uxtb r3, r3",
            "cmp r3, 0",
            "beq 0x46a40",
            "mov r0, r4",
            "pop {r3, r4, r5, r6, r7, r8, sl, pc}",
            "ldr r5, str.No_such_job:__s",
            "b 0x46a44",
            "ldr r5, str.No_previous_job",
            "b 0x46a44",
            "ldr r5, str.job__s_not_created_under_job_control",
            "mov r0, r5",
            "mov r1, r6",
            "bl fcn.0004349c",
            "andeq fp, r6, r0, lsr r3",
            "andeq r0, r6, ip, lsl 18",
            "strdeq r0, r1, [r6], -sp",
            "ldrdeq fp, ip, [r6], -r8",
            "andeq sl, r6, ip, asr pc",
            "andeq r1, r4, ip, ror r1",
            "andeq ip, r0, ip, lsl 4",
            "andeq r0, r6, ip, lsl sb",
            "andeq r0, r6, ip, lsr 18",
            "andeq r0, r6, sl, lsr sb",
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r4, 0",
            "b 0x46a90",
            "cmp r0, 0x6c",
            "movne r4, 1",
            "moveq r4, 4",
            "ldr r0, [0x00046b04]",
            "bl fcn.000464f0",
            "cmp r0, 0",
            "bne 0x46a84",
            "ldr r3, [0x00046b08]",
            "ldr r5, [r3]",
            "ldr r3, [r5]",
            "cmp r3, 0",
            "beq 0x46aec",
            "ldr r6, obj.stdout",
            "ldr r8, [r6]",
            "mov r7, r5",
            "mov r1, 0",
            "ldr r0, [r5], 4",
            "bl fcn.000468e8",
            "mov r2, r4",
            "mov r1, r0",
            "mov r0, r8",
            "bl fcn.00043144",
            "ldr r3, [r7, 4]",
            "cmp r3, 0",
            "bne 0x46ab8",
            "b 0x46afc",
            "ldr r3, obj.stdout",
            "mov r1, r4",
            "ldr r0, [r3]",
            "bl fcn.00043314",
            "mov r0, 0",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.00043314": {
        "function_address": "0x00043314",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r7, r0",
            "mov r5, r1",
            "mov r0, 0",
            "mov r1, r0",
            "bl fcn.000426f4",
            "cmp r0, 0",
            "bgt 0x43320",
            "ldr r3, [0x00043380]",
            "and r6, r5, 8",
            "ldr r4, [r3]",
            "b 0x43374",
            "cmp r6, 0",
            "beq 0x43360",
            "ldrb r3, [r4, 0x17]",
            "and r3, r3, 0x10",
            "uxtb r3, r3",
            "cmp r3, 0",
            "beq 0x43370",
            "mov r0, r7",
            "mov r1, r4",
            "mov r2, r5",
            "bl fcn.00043144",
            "ldr r4, [r4, 0x18]",
            "cmp r4, 0",
            "bne 0x43344",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.000449e8": {
        "function_address": "0x000449e8",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r4, r0",
            "b 0x44a00",
            "mov r0, 1",
            "mov r1, r4",
            "bl fcn.000426f4",
            "ldrb r3, [r4, 0x16]",
            "cmp r3, 0",
            "beq 0x449f4",
            "mov r0, r4",
            "bl fcn.00041360",
            "ldrb r3, [r4, 0x17]",
            "mov r5, r0",
            "and r3, r3, 2",
            "uxtb r3, r3",
            "cmp r3, 0",
            "beq 0x44a54",
            "ldr r3, [0x00044a70]",
            "ldr r0, [r3]",
            "ldr r3, [0x00044a74]",
            "ldr r1, [r3]",
            "bl fcn.000449cc",
            "ldrb r3, [r4, 0x17]",
            "tst r3, 1",
            "beq 0x44a54",
            "mov r0, 2",
            "bl sym.imp.raise",
            "ldrb r3, [r4, 0x16]",
            "cmp r3, 2",
            "bne 0x44a68",
            "mov r0, r4",
            "bl fcn.00042388",
            "mov r0, r5",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.00041360": {
        "function_address": "0x00041360",
        "instructions": [
            "ldr r1, [r0, 0xc]",
            "mov r3, r0",
            "ldrh r2, [r0, 0x14]",
            "mov r0, 0xc",
            "sub r2, r2, 1",
            "mla r2, r0, r2, r1",
            "ldr r2, [r2, 4]",
            "ands r1, r2, 0x7f",
            "ubfx r0, r2, 8, 8",
            "bxeq lr",
            "and r2, r2, 0xff",
            "cmp r2, 0x7f",
            "moveq r1, r0",
            "beq 0x413a8",
            "cmp r1, 2",
            "ldrbeq r2, [r3, 0x17]",
            "orreq r2, r2, 1",
            "strbeq r2, [r3, 0x17]",
            "add r0, r1, 0x80",
            "bx lr"
        ]
    },
    "fcn.0003f700": {
        "function_address": "0x0003f700",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r7, r1",
            "ldr r5, [r7], 4",
            "mov r4, r0",
            "mov r6, r1",
            "mov r0, r5",
            "bl sym.imp.strlen",
            "add r0, r5, r0",
            "sub r5, r4, 1",
            "cmp r5, 0",
            "ldrb sl, [r0, -3]",
            "ldr r4, [r6, 4]",
            "ble 0x3f87c",
            "ldrb r3, [r4]",
            "cmp r3, 0x2d",
            "bne 0x3f9ac",
            "ldrb r3, [r4, 1]",
            "cmp r3, 0x6c",
            "bne 0x3f808",
            "ldrb r2, [r4, 2]",
            "cmp r2, 0",
            "bne 0x3f808",
            "cmp r5, 1",
            "ldrne r4, [0x0003f9c0]",
            "bne 0x3f7f8",
            "mov r0, r5",
            "bl fcn.000546ac",
            "ldrb r3, [r0]",
            "sub r3, r3, 0x30",
            "cmp r3, 9",
            "bls 0x3f780",
            "bl sym.imp.puts",
            "add r5, r5, 1",
            "cmp r5, 0x20",
            "bne 0x3f764",
            "mov r5, 0",
            "b 0x3f9a4",
            "ldrb r3, [r5]",
            "sub r3, r3, 0x30",
            "cmp r3, 9",
            "bhi 0x3f7d4",
            "mov r0, r5",
            "mov r1, 0",
            "mov r2, 0xa",
            "bl fcn.000266e4",
            "ldr r3, [r4]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "bne 0x3f7e4",
            "and r0, r0, 0x7f",
            "bl fcn.000546ac",
            "bl sym.imp.puts",
            "b 0x3f7f8",
            "mov r0, r5",
            "bl fcn.00054624",
            "subs r1, r0, 0",
            "bge 0x3f7f0",
            "ldr r0, str.unknown_signal__s",
            "mov r1, r5",
            "b 0x3f868",
            "ldr r0, aav.0x0005cf54",
            "bl sym.imp.printf",
            "ldr r5, [r7, 4]!",
            "cmp r5, 0",
            "bne 0x3f794",
            "b 0x3f9a4",
            "cmp sl, 0x61",
            "bne 0x3f848",
            "cmp r3, 0x71",
            "bne 0x3f848",
            "ldrb r3, [r4, 2]",
            "cmp r3, 0",
            "bne 0x3f848",
            "subs r5, r5, 1",
            "ldr r4, [r7, 4]!",
            "bne 0x3f834",
            "bl fcn.0000c5e0",
            "ldrb r3, [r4]",
            "cmp r3, 0x2d",
            "moveq r8, 1",
            "beq 0x3f84c",
            "b 0x3f9b4",
            "mov r8, 0",
            "add r4, r4, 1",
            "mov r0, r4",
            "bl fcn.00054624",
            "subs r6, r0, 0",
            "bge 0x3f870",
            "ldr r0, str.bad_signal_name__s",
            "mov r1, r4",
            "bl fcn.00027184",
            "b 0x3f884",
            "cmp r5, 1",
            "ldr r4, [r7, 4]!",
            "bne 0x3f88c",
            "ldr r0, str.You_need_to_specify_whom_to_kill",
            "bl sym.imp.puts",
            "mov r5, 1",
            "b 0x3f9a4",
            "cmp sl, 0x61",
            "movne r5, 0",
            "ldrne r8, [0x0003f9c0]",
            "bne 0x3f99c",
            "bl sym.imp.getpid",
            "mov r5, 0",
            "mov sb, r0",
            "b 0x3f92c",
            "mov r0, r4",
            "bl fcn.00051974",
            "ldr r3, [r0]",
            "mov sl, r0",
            "cmp r3, 0",
            "movne r4, r0",
            "bne 0x3f914",
            "cmp r8, 0",
            "add r5, r5, 1",
            "bne 0x3f920",
            "ldr r0, str._s:_no_process_killed",
            "mov r1, r4",
            "bl fcn.00027184",
            "b 0x3f920",
            "cmp r0, sb",
            "beq 0x3f914",
            "mov r1, r6",
            "bl sym.imp.kill",
            "cmp r0, 0",
            "beq 0x3f914",
            "cmp r8, 0",
            "add r5, r5, 1",
            "bne 0x3f914",
            "ldr r0, str.cannot_kill_pid__u",
            "ldr r1, [r4, -4]",
            "bl fcn.000288b8",
            "ldr r0, [r4], 4",
            "cmp r0, 0",
            "bne 0x3f8e4",
            "mov r0, sl",
            "bl sym.imp.free",
            "ldr r4, [r7, 4]!",
            "cmp r4, 0",
            "bne 0x3f8ac",
            "b 0x3f9a4",
            "ldrb r3, [r4]",
            "mov r1, 0",
            "mov r2, 0xa",
            "cmp r3, 0x20",
            "addeq r4, r4, 1",
            "mov r0, r4",
            "bl fcn.00026744",
            "ldr r3, [r8]",
            "mov sl, r0",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x3f978",
            "ldr r0, str.bad_pid__s",
            "mov r1, r4",
            "bl fcn.00027184",
            "b 0x3f994",
            "mov r1, r6",
            "bl sym.imp.kill",
            "cmp r0, 0",
            "beq 0x3f998",
            "ldr r0, str.cannot_kill_pid__d",
            "mov r1, sl",
            "bl fcn.000288b8",
            "add r5, r5, 1",
            "ldr r4, [r7, 4]!",
            "cmp r4, 0",
            "bne 0x3f938",
            "mov r0, r5",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}",
            "mov r8, 0",
            "b 0x3f9b8",
            "mov r8, 1",
            "mov r6, 0xf",
            "b 0x3f88c"
        ]
    },
    "fcn.000546ac": {
        "function_address": "0x000546ac",
        "instructions": [
            "cmp r0, 0x1f",
            "bhi 0x546d8",
            "mov r3, 7",
            "ldr r2, str.EXIT",
            "mul r3, r3, r0",
            "add r1, r2, r3",
            "ldrb r3, [r2, r3]",
            "cmp r3, 0",
            "beq 0x546d8",
            "mov r0, r1",
            "bx lr",
            "b fcn.0002a220"
        ]
    },
    "fcn.00044e5c": {
        "function_address": "0x00044e5c",
        "instructions": [
            "push {r0, r1, r2, r4, r5, lr}",
            "mov r3, 0",
            "add r1, sp, 8",
            "mov r4, r0",
            "str r3, [r1, -4]!",
            "ldr r3, [0x00044ed0]",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "bl fcn.00043d98",
            "ldr r3, [sp, 4]",
            "mov r5, r0",
            "cmp r3, 0",
            "bge 0x44ec4",
            "cmn r3, 3",
            "ldreq r0, str.exponent_less_than_0",
            "beq 0x44eac",
            "cmn r3, 2",
            "bne 0x44eb0",
            "ldr r0, str.divide_by_zero",
            "bl fcn.0004349c",
            "cmn r3, 5",
            "ldreq r0, str.expression_recursion_loop_detected",
            "beq 0x44eac",
            "mov r0, r4",
            "bl fcn.00044de8",
            "bl fcn.00041f80",
            "mov r0, r5",
            "pop {r1, r2, r3, r4, r5, pc}"
        ]
    },
    "fcn.0004728c": {
        "function_address": "0x0004728c",
        "instructions": [
            "push {r0, r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "subs sb, r0, 0",
            "movne r2, 0",
            "ldrne r3, [0x000474b0]",
            "bne 0x47450",
            "b 0x47494",
            "ldrb r3, [r2]",
            "cmp r3, 0x2b",
            "cmpne r3, 0x2d",
            "moveq r4, 0",
            "movne r4, 1",
            "bne 0x474a8",
            "cmp r3, 0x2d",
            "add r0, r0, 4",
            "add r5, r2, 1",
            "str r0, [r1]",
            "bne 0x472f4",
            "ldrb r3, [r2, 1]",
            "cmp r3, 0",
            "beq 0x47300",
            "cmp r3, 0x2d",
            "bne 0x472f0",
            "ldrb r2, [r5, 1]",
            "cmp r2, 0",
            "beq 0x47300",
            "mov r4, 1",
            "ldr fp, [0x000474b4]",
            "ldr r6, [0x000474b8]",
            "b 0x47488",
            "cmp sb, 0",
            "bne 0x474a8",
            "cmp r3, 0",
            "ldreq r2, [0x000474b4]",
            "strbeq r3, [r2, 8]",
            "strbeq r3, [r2, 7]",
            "beq 0x474a8",
            "ldr r3, [r0]",
            "cmp r3, 0",
            "bne 0x474a8",
            "add sp, sp, 4",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "b fcn.00043a44",
            "subs r3, sb, 0",
            "movne r3, 1",
            "cmp r1, 0x63",
            "movne r7, 0",
            "andeq r7, r3, 1",
            "cmp r7, 0",
            "ldrne r3, [0x000474b0]",
            "strne r5, [r3]",
            "bne 0x47488",
            "cmp r1, 0x6f",
            "bne 0x47404",
            "ldr r3, [r6]",
            "ldr sl, [r3]",
            "cmp sl, 0",
            "beq 0x473a8",
            "ldr r8, aav.0x00060fc8",
            "ldr r1, [r8, 4]!",
            "mov r0, sl",
            "add r1, r1, 1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "strbeq r4, [fp, r7]",
            "beq 0x473ec",
            "add r7, r7, 1",
            "cmp r7, 0xe",
            "bne 0x47374",
            "ldr r0, str.illegal_option__o__s",
            "mov r1, sl",
            "b 0x47484",
            "ldr r7, aav.0x00060fc8",
            "ldr r8, [0x000474c4]",
            "ldr r0, str.Current_option_settings_n",
            "bl fcn.00042638",
            "ldrb r2, [r8, 1]!",
            "ldr ip, [0x000474cc]",
            "ldr r1, [r7, 4]!",
            "ldr r3, [0x000474d0]",
            "cmp r2, 0",
            "movne r3, ip",
            "ldr r0, str.__16s_s_n",
            "add r1, r1, 1",
            "mov r2, r3",
            "bl fcn.00042df4",
            "ldr r2, aav.0x00061000",
            "cmp r7, r2",
            "bne 0x473b8",
            "ldr r3, [r6]",
            "ldr r2, [r3]",
            "cmp r2, 0",
            "addne r3, r3, 4",
            "strne r3, [r6]",
            "b 0x47488",
            "cmp r1, 0x6c",
            "movne r2, 0",
            "andeq r2, r3, 1",
            "cmp r2, 0",
            "ldrne ip, [0x000474dc]",
            "movne r3, 1",
            "strne r3, [ip]",
            "bne 0x47488",
            "tst r3, r4",
            "beq 0x47458",
            "cmp r1, 0x2d",
            "bne 0x47458",
            "mov r0, r5",
            "ldr r1, str.login",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x47494",
            "ldr r3, [0x000474dc]",
            "mov r2, 1",
            "str r2, [r3]",
            "b 0x47494",
            "ldr r2, aav.0x00060fc8",
            "mov r3, 0",
            "ldr r0, [r2, 4]!",
            "ldrb r0, [r0]",
            "cmp r0, r1",
            "strbeq r4, [fp, r3]",
            "beq 0x47488",
            "add r3, r3, 1",
            "cmp r3, 0xe",
            "bne 0x47460",
            "ldr r0, str.illegal_option___c",
            "bl fcn.0004349c",
            "ldrb r1, [r5], 1",
            "cmp r1, 0",
            "bne 0x47334",
            "ldr r1, [0x000474b8]",
            "ldr r0, [r1]",
            "ldr r2, [r0]",
            "cmp r2, 0",
            "bne 0x472a4",
            "add sp, sp, 4",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00042638": {
        "function_address": "0x00042638",
        "instructions": [
            "ldr r3, obj.stdout",
            "ldr r1, [r3]",
            "b fcn.00042614"
        ]
    },
    "fcn.00044c1c": {
        "function_address": "0x00044c1c",
        "instructions": [
            "ldr r3, [0x00044ca0]",
            "push {r4, lr}",
            "ldr r4, [0x00044ca4]",
            "ldrb r3, [r3, 3]",
            "ldr r2, [r4]",
            "add r3, r3, 1",
            "cmp r3, r2",
            "beq 0x44c88",
            "str r3, [r4]",
            "mov r0, 2",
            "bl fcn.00041b14",
            "mov r0, 3",
            "bl fcn.00041b14",
            "mov r0, 0xf",
            "bl fcn.00041b14",
            "ldr r3, [r4]",
            "cmp r3, 1",
            "ble 0x44c88",
            "ldr r4, [0x00044ca8]",
            "ldr r3, [r4]",
            "cmp r3, 0",
            "bne 0x44c88",
            "ldr r0, str._n_n_s_built_in_shell__ash__nEnter_help_for_a_list_of_built_in_commands._n_n",
            "ldr r1, str.BusyBox_v1.7.2__2014_01_17_17:20:52_CST_",
            "bl fcn.00042df4",
            "mov r3, 1",
            "str r3, [r4]",
            "ldr r4, [0x00044ca0]",
            "ldrb r0, [r4, 4]",
            "bl fcn.00044a78",
            "mov r3, 0",
            "strb r3, [r4, 0xd]",
            "pop {r4, pc}"
        ]
    },
    "fcn.00043a44": {
        "function_address": "0x00043a44",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r6, r0",
            "mov r3, r0",
            "mov r5, 0",
            "b 0x43a5c",
            "mov r5, r0",
            "ldr r2, [r3], 4",
            "add r0, r5, 1",
            "cmp r2, 0",
            "bne 0x43a58",
            "lsl r0, r0, 2",
            "bl fcn.000434d4",
            "mov r7, r0",
            "mov r4, r0",
            "b 0x43a88",
            "bl fcn.00043a28",
            "str r0, [r4], 4",
            "ldr r0, [r6], 4",
            "cmp r0, 0",
            "bne 0x43a80",
            "str r0, [r4]",
            "ldr r4, [0x00043ac4]",
            "mov r0, r4",
            "bl fcn.00041864",
            "mov r3, 1",
            "str r5, [r4]",
            "strb r3, [r4, 4]",
            "str r3, [r4, 0xc]",
            "mvn r3, 0",
            "str r7, [r4, 8]",
            "str r3, [r4, 0x10]",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.00042f68": {
        "function_address": "0x00042f68",
        "instructions": [
            "mov r3, r1",
            "tst r0, 1",
            "ldr ip, [r1, 8]",
            "ldrne ip, [r3]",
            "ldr r1, [r1, 0xc]",
            "ldrne r1, [r3, 4]",
            "cmn ip, 1",
            "push {r4, lr}",
            "bne 0x42fa0",
            "cmn r1, 1",
            "bne 0x42fa0",
            "ldr r0, str.unlimited_n",
            "pop {r4, lr}",
            "b fcn.00042df4",
            "ldr r2, [r2]",
            "mov r0, ip",
            "asr r3, r2, 0x1f",
            "bl fcn.00055c28",
            "mov r2, r0",
            "mov r3, r1",
            "ldr r0, str._lld_n",
            "pop {r4, lr}",
            "b fcn.00042df4"
        ]
    },
    "fcn.00041488": {
        "function_address": "0x00041488",
        "instructions": [
            "ldr r3, [0x000414e0]",
            "push {r4, r5, r6, lr}",
            "mov r5, r0",
            "ldr r4, [r3]",
            "b 0x414cc",
            "ldr r6, [r4, 4]",
            "mov r1, r5",
            "mov r0, r6",
            "bl fcn.0004122c",
            "cmp r0, 0",
            "beq 0x414c8",
            "mov r0, r6",
            "mov r1, 0x3d",
            "bl sym.imp.strchrnul",
            "add r0, r0, 1",
            "pop {r4, r5, r6, pc}",
            "ldr r4, [r4]",
            "cmp r4, 0",
            "bne 0x4149c",
            "mov r0, r5",
            "pop {r4, r5, r6, lr}",
            "b fcn.00041424"
        ]
    },
    "fcn.00045f20": {
        "function_address": "0x00045f20",
        "instructions": [
            "ldr r3, [0x00045f48]",
            "push {r4, lr}",
            "mov r4, r0",
            "mov r0, r1",
            "ldr r3, [r3]",
            "cmp r1, r3",
            "bne 0x45f40",
            "bl fcn.00045ebc",
            "strb r4, [r0], 1",
            "pop {r4, pc}"
        ]
    },
    "fcn.000460bc": {
        "function_address": "0x000460bc",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r7, r0",
            "ldr sb, [r0]",
            "mov sl, r1",
            "cmp sb, 0",
            "beq 0x461b4",
            "mov r3, sb",
            "mov r4, r3",
            "ldrb r2, [r3], 1",
            "cmp r2, 0x3a",
            "cmpne r2, 0",
            "beq 0x460f4",
            "cmp r2, 0x25",
            "bne 0x460d8",
            "mov r0, sl",
            "rsb r6, sb, r4",
            "bl sym.imp.strlen",
            "add r0, r0, 2",
            "ldr r5, [0x000461bc]",
            "add r8, r0, r6",
            "b 0x46114",
            "bl fcn.00045328",
            "ldr r3, [r5]",
            "cmp r3, r8",
            "blo 0x46110",
            "ldr r3, [0x000461c0]",
            "cmp r4, sb",
            "ldr r5, [r3]",
            "beq 0x46150",
            "mov r0, r5",
            "mov r2, r6",
            "mov r1, sb",
            "bl sym.imp.memcpy",
            "add r3, r5, r6",
            "mov r2, 0x2f",
            "strb r2, [r5, r6]",
            "add r5, r3, 1",
            "mov r0, r5",
            "mov r1, sl",
            "bl sym.imp.strcpy",
            "ldr r2, [0x000461c4]",
            "mov r3, 0",
            "str r3, [r2]",
            "ldrb r3, [r4]",
            "cmp r3, 0x25",
            "bne 0x46190",
            "add r3, r4, 1",
            "str r3, [r2]",
            "mov r4, r3",
            "ldrb r2, [r3], 1",
            "cmp r2, 0x3a",
            "cmpne r2, 0",
            "bne 0x4617c",
            "ldrb r3, [r4]",
            "mov r0, r8",
            "cmp r3, 0x3a",
            "addeq r4, r4, 1",
            "movne r3, 0",
            "streq r4, [r7]",
            "strne r3, [r7]",
            "pop {r4, r5, r6, r7, r8, sb, sl, lr}",
            "b fcn.00044ee0",
            "mov r0, sb",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "fcn.0004553c": {
        "function_address": "0x0004553c",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r4, r1",
            "mov r5, r0",
            "bl sym.imp.strlen",
            "mov r2, r4",
            "mov r1, r0",
            "mov r0, r5",
            "pop {r4, r5, r6, lr}",
            "b fcn.00045510"
        ]
    },
    "fcn.00044db0": {
        "function_address": "0x00044db0",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r7, r0",
            "ldr r6, [0x00044de0]",
            "mov r5, 0",
            "ldr r4, [0x00044de4]",
            "ldr r3, [r4]",
            "str r5, [r6]",
            "cmp r3, 0",
            "popeq {r3, r4, r5, r6, r7, pc}",
            "mov r0, r7",
            "bl fcn.00044d00",
            "b 0x44dc4"
        ]
    },
    "fcn.000437bc": {
        "function_address": "0x000437bc",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r6, r0",
            "ldr r8, [0x00043860]",
            "mov r4, r1",
            "mov sl, r2",
            "mov r5, 0",
            "ldr r7, [0x00043864]",
            "mov r0, r6",
            "mov r1, r4",
            "mov r2, sl",
            "add r5, r5, 1",
            "bl sym.imp.execve",
            "cmp r5, 2",
            "bne 0x43800",
            "mov r0, r4",
            "pop {r4, r5, r6, r7, r8, sb, sl, lr}",
            "b sym.imp.free",
            "ldr r3, [r8]",
            "ldr r3, [r3]",
            "cmp r3, 8",
            "popne {r4, r5, r6, r7, r8, sb, sl, pc}",
            "mov sb, r4",
            "mov r3, r4",
            "mov r0, r3",
            "ldr r2, [r3], 4",
            "cmp r2, 0",
            "bne 0x43818",
            "rsb r4, r4, r0",
            "bic r0, r4, 3",
            "add r0, r0, 8",
            "bl fcn.000434d4",
            "mov r3, r0",
            "str r6, [r0, 4]",
            "str r7, [r3], 8",
            "ldr r2, [sb, 4]!",
            "cmp r2, 0",
            "str r2, [r3], 4",
            "bne 0x43844",
            "mov r4, r0",
            "ldr r6, [0x00043864]",
            "b 0x437d8"
        ]
    },
    "sym.imp.execve": {
        "function_address": "0x0000b900",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xacc]!"
        ]
    },
    "fcn.00048114": {
        "function_address": "0x00048114",
        "instructions": [
            "push {r1, r2, r3}",
            "push {r0, r1, lr}",
            "add r2, sp, 0x10",
            "ldr r1, [sp, 0xc]",
            "str r2, [sp, 4]",
            "bl fcn.0004347c"
        ]
    },
    "fcn.0004b38c": {
        "function_address": "0x0004b38c",
        "instructions": [
            "push {r0, r1, r2, r3, r4, r5, r6, lr}",
            "cmp r0, 1",
            "ldr r3, [0x0004b418]",
            "mov r2, 0",
            "str r2, [r3]",
            "beq 0x4b3b0",
            "cmp r0, 2",
            "beq 0x4b3bc",
            "b 0x4b3cc",
            "ldr r3, [0x0004b41c]",
            "ldr r4, [r3, 0x28]",
            "b 0x4b3c4",
            "ldr r3, [0x0004b41c]",
            "ldr r4, [r3, 0x38]",
            "add r4, r4, 4",
            "b 0x4b3d0",
            "ldr r4, [0x0004b420]",
            "mov r0, sp",
            "mov r5, sp",
            "bl fcn.00041134",
            "ldr r3, [0x0004b424]",
            "ldr r0, [r3]",
            "bl fcn.00044ee0",
            "mov r0, r4",
            "ldr r4, [0x0004b428]",
            "bl fcn.0004b318",
            "mov r6, r0",
            "ldr r0, [r4]",
            "bl sym.imp.free",
            "mov r0, r6",
            "bl fcn.00043a28",
            "str r0, [r4]",
            "mov r0, sp",
            "bl fcn.000428a0",
            "pop {r0, r1, r2, r3, r4, r5, r6, pc}"
        ]
    },
    "fcn.00041134": {
        "function_address": "0x00041134",
        "instructions": [
            "ldr r3, [0x0004116c]",
            "ldr r3, [r3]",
            "str r3, [r0]",
            "ldr r3, [0x00041170]",
            "ldr r3, [r3]",
            "str r3, [r0, 4]",
            "ldr r3, [0x00041174]",
            "ldr r3, [r3]",
            "str r3, [r0, 8]",
            "ldr r3, [0x00041178]",
            "ldr r2, [r3]",
            "str r0, [r3]",
            "str r2, [r0, 0xc]",
            "bx lr"
        ]
    },
    "fcn.0004b318": {
        "function_address": "0x0004b318",
        "instructions": [
            "push {r0, r1, r2, r3, r4, r5, r6, lr}",
            "bl fcn.000436a4",
            "bl fcn.00042a98",
            "mov r1, 1",
            "ldr r2, [0x0004b37c]",
            "mov r3, 0",
            "bl fcn.00048294",
            "bl fcn.00042534",
            "mov r3, 0xf",
            "mov r1, 0",
            "str r3, [sp, 4]",
            "add r0, sp, 4",
            "ldr r3, [0x0004b380]",
            "mov r2, r1",
            "str r1, [sp, 8]",
            "ldr r3, [r3]",
            "str r3, [sp, 0xc]",
            "ldr r3, [0x0004b384]",
            "ldr r3, [r3]",
            "str r3, [sp, 0x10]",
            "bl fcn.0004a7d0",
            "ldr r3, [0x0004b388]",
            "ldr r0, [r3]",
            "add sp, sp, 0x1c",
            "ldm sp!, {pc}"
        ]
    },
    "fcn.000428a0": {
        "function_address": "0x000428a0",
        "instructions": [
            "ldr r3, [r0]",
            "push {r4, r5, r6, lr}",
            "mov r4, r0",
            "cmp r3, 0",
            "popeq {r4, r5, r6, pc}",
            "ldr r3, [0x00042920]",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "ldr r3, [0x00042924]",
            "ldr r2, [r0, 0xc]",
            "ldr r5, [0x00042928]",
            "str r2, [r3]",
            "b 0x428e4",
            "ldr r3, [r0]",
            "str r3, [r5]",
            "bl sym.imp.free",
            "ldr r0, [r5]",
            "ldr r3, [r4]",
            "cmp r0, r3",
            "bne 0x428d8",
            "ldr r2, [r4, 4]",
            "ldr r3, [0x0004292c]",
            "ldr r1, [0x00042930]",
            "str r2, [r3]",
            "ldr r3, [r4, 8]",
            "str r3, [r1]",
            "add r3, r2, r3",
            "ldr r1, [0x00042934]",
            "str r3, [r1]",
            "pop {r4, r5, r6, lr}",
            "b fcn.00041f80"
        ]
    },
    "fcn.000436a4": {
        "function_address": "0x000436a4",
        "instructions": [
            "ldr r3, [0x000436fc]",
            "push {r4, lr}",
            "mov r4, r0",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "bl fcn.00043628",
            "ldr r3, [0x00043700]",
            "mov r0, r4",
            "str r4, [r3]",
            "bl sym.imp.strlen",
            "ldr r3, [0x00043704]",
            "mov r2, 0",
            "str r0, [r3]",
            "ldr r3, [0x00043708]",
            "ldr r3, [r3]",
            "str r2, [r3, 0x18]",
            "add r2, r2, 1",
            "ldr r3, [0x0004370c]",
            "str r2, [r3]",
            "pop {r4, lr}",
            "b fcn.00041f80"
        ]
    },
    "fcn.00048294": {
        "function_address": "0x00048294",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sl, lr}",
            "sub sp, sp, 0x1b4",
            "str r2, [sp, 0x18]",
            "mov r4, r0",
            "ldr r2, [0x0004905c]",
            "str r1, [sp, 0xc]",
            "str r3, [sp, 0x38]",
            "mov r3, 0",
            "ldr r1, [r2]",
            "ldr r2, [0x00049060]",
            "str r3, [sp, 0x1ac]",
            "str r3, [sp, 0x1c]",
            "str r1, [r2]",
            "ldr r2, [0x00049064]",
            "ldr r1, [sp, 0xc]",
            "str r3, [sp, 0x24]",
            "ldr r2, [r2]",
            "str r3, [sp, 0x30]",
            "cmp r1, 1",
            "movne r1, 0",
            "moveq r1, 1",
            "str r3, [sp, 0x14]",
            "str r3, [sp, 0x20]",
            "str r3, [sp, 0x2c]",
            "ldr r3, str.__",
            "str r2, [sp, 8]",
            "add r2, sp, 0x154",
            "str r1, [sp, 0x10]",
            "rsb r3, r3, 1",
            "str r2, [sp, 4]",
            "str r3, [sp, 0x3c]",
            "b 0x48794",
            "ldr r1, [0x0004906c]",
            "ldr r2, [sp, 8]",
            "ldr r3, [r1]",
            "rsb r3, r2, r3",
            "cmp r3, 3",
            "bhi 0x4833c",
            "mov r0, 4",
            "mov r1, r2",
            "bl fcn.00045444",
            "str r0, [sp, 8]",
            "mov r0, r4",
            "ldr r1, [sp, 0xc]",
            "bl fcn.00041684",
            "cmp r0, 0xe",
            "ldrls pc, [pc, r0, lsl 2]",
            "b case.0x4834c.13",
            "mov r3, 1",
            "str r3, [sp, 0x10]",
            "str r3, [sp, 0xc]",
            "b 0x48518",
            "ldr r1, [sp, 0xc]",
            "cmp r1, 0",
            "beq 0x486bc",
            "ldr r2, [sp, 8]",
            "ldr r3, [0x0004905c]",
            "strb r4, [r2], 1",
            "str r2, [sp, 8]",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "ldr r3, [0x00049070]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x483e0",
            "mov r0, 2",
            "bl fcn.0004b38c",
            "bl fcn.00042a98",
            "mov r4, r0",
            "b 0x48794",
            "ldr r3, [sp, 8]",
            "strb r4, [r3], 1",
            "str r3, [sp, 8]",
            "b case.0x4834c.14",
            "ldr r1, [sp, 0x18]",
            "cmp r1, 0",
            "beq 0x48414",
            "ldr r2, [sp, 0x10]",
            "cmp r2, 0",
            "beq 0x485b0",
            "ldr r1, [sp, 8]",
            "mvn r3, 0x7e",
            "strb r3, [r1], 1",
            "str r1, [sp, 8]",
            "b 0x485b0",
            "bl fcn.00042d90",
            "cmn r0, 0x82",
            "mov r4, r0",
            "bne 0x4845c",
            "ldr r3, [sp, 8]",
            "mvn r2, 0x7e",
            "strb r2, [r3], 1",
            "add r2, r2, 0xdb",
            "ldr r1, [sp, 8]",
            "add r3, r3, 1",
            "strb r2, [r1, 1]",
            "str r3, [sp, 8]",
            "b 0x48a14",
            "cmp r0, 0xa",
            "bne 0x48480",
            "ldr r3, [0x00049070]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq case.0x4834c.14",
            "mov r0, 2",
            "bl fcn.0004b38c",
            "b case.0x4834c.14",
            "ldr r3, [sp, 0x10]",
            "cmp r0, 0x5c",
            "moveq r3, 0",
            "andne r3, r3, 1",
            "cmp r3, 0",
            "beq 0x484d4",
            "cmp r0, 0x24",
            "cmpne r0, 0x60",
            "beq 0x484d4",
            "ldr r2, [sp, 0x18]",
            "cmp r2, 0",
            "cmpeq r0, 0x22",
            "beq 0x484d4",
            "ldr r3, [sp, 8]",
            "mvn r2, 0x7e",
            "strb r2, [r3], 1",
            "add r2, r2, 0xdb",
            "ldr r1, [sp, 8]",
            "add r3, r3, 1",
            "strb r2, [r1, 1]",
            "str r3, [sp, 8]",
            "mov r1, 2",
            "mov r0, r4",
            "bl fcn.00041684",
            "cmp r0, 0xc",
            "ldreq r2, [sp, 8]",
            "mvneq r3, 0x7e",
            "strbeq r3, [r2], 1",
            "streq r2, [sp, 8]",
            "ldr r3, [sp, 8]",
            "strb r4, [r3], 1",
            "ldr r1, [sp, 0x2c]",
            "str r3, [sp, 8]",
            "add r1, r1, 1",
            "str r1, [sp, 0x2c]",
            "b case.0x4834c.14",
            "mov r2, 2",
            "str r2, [sp, 0xc]",
            "ldr r3, [sp, 0x18]",
            "cmp r3, 0",
            "mvneq r3, 0x77",
            "beq 0x485a8",
            "b case.0x4834c.14",
            "ldr r2, [sp, 0x18]",
            "cmp r2, 0",
            "beq 0x48550",
            "ldr r3, [sp, 0x14]",
            "cmp r3, 0",
            "bne 0x48550",
            "ldr r1, [sp, 0x20]",
            "cmp r1, 0",
            "beq 0x485b0",
            "ldr r3, [sp, 0x24]",
            "ldr r1, [sp, 0x10]",
            "ldr r2, [sp, 0xc]",
            "cmp r3, 0",
            "moveq r1, r3",
            "moveq r2, r3",
            "ldr r3, [sp, 0x2c]",
            "str r1, [sp, 0x10]",
            "str r2, [sp, 0xc]",
            "add r3, r3, 1",
            "str r3, [sp, 0x2c]",
            "b 0x48518",
            "ldr r1, [sp, 0x20]",
            "cmp r1, 0",
            "beq 0x485b0",
            "ldr r2, [sp, 0x24]",
            "mvn r3, 0x7c",
            "sub r1, r1, 1",
            "str r1, [sp, 0x20]",
            "cmp r2, 0",
            "subne r2, r2, 1",
            "strne r2, [sp, 0x24]",
            "ldr r1, [sp, 8]",
            "b 0x48fa4",
            "ldr r2, [sp, 8]",
            "strb r4, [r2], 1",
            "b 0x48fb8",
            "ldr r3, [sp, 0x30]",
            "add r3, r3, 1",
            "str r3, [sp, 0x30]",
            "b 0x49044",
            "ldr r2, [sp, 0x30]",
            "cmp r2, 0",
            "beq 0x485f0",
            "ldr r3, [sp, 8]",
            "sub r2, r2, 1",
            "strb r4, [r3], 1",
            "str r2, [sp, 0x30]",
            "str r3, [sp, 8]",
            "b case.0x4834c.14",
            "bl fcn.00042a98",
            "cmp r0, 0x29",
            "bne 0x4863c",
            "ldr r1, [sp, 0x14]",
            "subs r1, r1, 1",
            "str r1, [sp, 0x14]",
            "bne 0x48630",
            "ldr r2, [sp, 8]",
            "mvn r3, 0x78",
            "strb r3, [r2], 1",
            "ldr r3, [sp, 0x1c]",
            "str r2, [sp, 8]",
            "cmp r3, 1",
            "streq r3, [sp, 0x10]",
            "beq 0x4903c",
            "b 0x48664",
            "ldr r1, [sp, 8]",
            "strb r0, [r1], 1",
            "b 0x4904c",
            "bl fcn.000413f8",
            "mov r3, 0x29",
            "ldr r2, [sp, 8]",
            "b 0x48fb4",
            "ldr r3, [sp, 0x20]",
            "cmp r3, 0",
            "beq case.0x4834c.11",
            "cmn r4, 0x81",
            "beq case.0x4834c.14",
            "b 0x49044",
            "ldr r2, [sp, 0x1c]",
            "ldr r3, [sp, 0x14]",
            "str r2, [sp, 0xc]",
            "str r3, [sp, 0x10]",
            "bl fcn.00042a98",
            "mov r4, r0",
            "b 0x48314",
            "ldr r1, [sp, 0xc]",
            "cmp r1, 3",
            "ldreq r0, str.Missing___",
            "beq 0x486b8",
            "ldr r2, [sp, 0xc]",
            "cmp r2, 0",
            "beq 0x486bc",
            "ldr r3, [0x00049078]",
            "ldr r1, [sp, 0x18]",
            "ldr r3, [r3]",
            "cmp r1, 0",
            "cmpeq r3, 0",
            "bne 0x486bc",
            "ldr r0, str.Unterminated_quoted_string",
            "bl fcn.00044de8",
            "ldr r2, [sp, 0x20]",
            "cmp r2, 0",
            "beq 0x486e0",
            "ldr r3, [0x0004905c]",
            "ldr r0, str.Missing_",
            "ldr r2, [r3]",
            "ldr r3, [0x00049060]",
            "str r2, [r3]",
            "b 0x486b8",
            "ldr r3, [sp, 8]",
            "ldr r1, [sp, 0x20]",
            "ldr r2, [0x00049064]",
            "strb r1, [r3], 1",
            "ldr r7, [r2]",
            "ldr r2, [sp, 0x18]",
            "rsb r8, r7, r3",
            "cmp r2, 0",
            "bne 0x48748",
            "cmp r4, 0x3e",
            "movne r6, 0",
            "moveq r6, 1",
            "cmp r4, 0x3e",
            "cmpne r4, 0x3c",
            "bne 0x48744",
            "ldr r3, [sp, 0x2c]",
            "cmp r8, 2",
            "cmple r3, 0",
            "bne 0x48744",
            "ldrb r5, [r7]",
            "sub r3, r5, 0x30",
            "uxtb r3, r3",
            "cmp r5, 0",
            "cmpne r3, 9",
            "bls 0x488a0",
            "bl fcn.000413f8",
            "ldr r3, [0x00049084]",
            "mov r0, 3",
            "ldr r1, [sp, 0x2c]",
            "ldr r2, [sp, 0x1ac]",
            "str r1, [r3]",
            "ldr r3, [0x00049088]",
            "str r2, [r3]",
            "add r3, r8, 7",
            "ldr r2, [0x00049064]",
            "bic r3, r3, 7",
            "add r1, r7, r3",
            "str r1, [r2]",
            "ldr r2, [0x0004908c]",
            "ldr r1, [r2]",
            "rsb r3, r3, r1",
            "str r3, [r2]",
            "ldr r3, [0x00049090]",
            "str r7, [r3]",
            "b 0x489a4",
            "ldr r2, [sp, 0x18]",
            "cmp r2, 0",
            "beq 0x48314",
            "cmn r4, 0x81",
            "bne 0x487b0",
            "bl fcn.00042d90",
            "mov r4, r0",
            "ldr r3, [sp, 0x38]",
            "cmp r3, 0",
            "movne r0, r4",
            "bne 0x487c8",
            "b 0x487d4",
            "bl fcn.00042d90",
            "cmp r0, 9",
            "beq 0x487c4",
            "mov r4, r0",
            "ldr r1, [sp, 0x18]",
            "ldrb r3, [r1]",
            "cmp r4, r3",
            "addeq r7, sp, 0x154",
            "addeq r8, r7, 0x4f",
            "moveq r6, r7",
            "beq 0x48820",
            "b 0x48314",
            "bl fcn.00042d90",
            "cmn r0, 0x82",
            "bne 0x48810",
            "ldr r2, [sp, 4]",
            "cmp r5, r2",
            "beq 0x48314",
            "b 0x4882c",
            "cmp r0, 0xa",
            "strb r0, [r6], 1",
            "mov r5, r6",
            "beq 0x4882c",
            "cmp r6, r8",
            "mov r5, r6",
            "bne 0x487f4",
            "mov r3, 0",
            "strb r3, [r5]",
            "ldr r2, [sp, 0x18]",
            "ldrb r3, [r2, 1]!",
            "mov r1, r7",
            "cmp r3, 0",
            "beq 0x48854",
            "ldrb r0, [r7], 1",
            "cmp r0, r3",
            "beq 0x48838",
            "ldrb r2, [r1]",
            "cmp r2, 0xa",
            "bne 0x48890",
            "cmp r3, 0",
            "bne 0x48890",
            "ldr r3, [0x0004905c]",
            "mvn r4, 0x81",
            "ldr r1, [0x00049094]",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "ldr r3, [0x00049070]",
            "ldr r3, [r3]",
            "str r3, [r1]",
            "b 0x48314",
            "add r0, sp, 0x154",
            "mov r1, 0",
            "bl fcn.00043710",
            "b 0x48314",
            "mov r0, 0x14",
            "bl fcn.00044ee0",
            "cmp r6, 0",
            "mov r4, r0",
            "beq 0x488ec",
            "mov r3, 1",
            "str r3, [r0, 8]",
            "bl fcn.00042a98",
            "cmp r0, 0x3e",
            "moveq r3, 0x14",
            "beq 0x48970",
            "cmp r0, 0x7c",
            "moveq r3, 0x11",
            "beq 0x48970",
            "cmp r0, 0x26",
            "moveq r3, 0x15",
            "movne r3, 0x10",
            "bne 0x48984",
            "b 0x48970",
            "ldr r2, [sp, 0x18]",
            "str r2, [r0, 8]",
            "bl fcn.00042a98",
            "cmp r0, 0x3c",
            "beq 0x48914",
            "cmp r0, 0x3e",
            "beq 0x48978",
            "cmp r0, 0x26",
            "beq 0x4896c",
            "b 0x48980",
            "mov r0, 0x10",
            "ldr r6, [0x00049098]",
            "bl fcn.00044ee0",
            "ldr r3, [sp, 0x18]",
            "mov r4, r0",
            "str r3, [r0, 8]",
            "mov r3, 0x17",
            "str r3, [r0]",
            "mov r0, 0x10",
            "bl fcn.00044ee0",
            "str r0, [r6]",
            "str r4, [r0, 4]",
            "bl fcn.00042a98",
            "cmp r0, 0x2d",
            "ldreq r3, [r6]",
            "moveq r2, 1",
            "ldrne r3, [r6]",
            "ldrne r1, [sp, 0x18]",
            "streq r2, [r3, 0xc]",
            "strne r1, [r3, 0xc]",
            "bne 0x48988",
            "b 0x4898c",
            "mov r3, 0x16",
            "str r3, [r4]",
            "b 0x4898c",
            "mov r3, 0x13",
            "b 0x48970",
            "mov r3, 0x12",
            "str r3, [r4]",
            "bl fcn.000413f8",
            "ldr r3, [0x0004909c]",
            "cmp r5, 0",
            "mov r0, 2",
            "subne r5, r5, 0x30",
            "strne r5, [r4, 8]",
            "str r4, [r3]",
            "ldr r3, [0x000490a0]",
            "str r0, [r3]",
            "add sp, sp, 0x1b4",
            "pop {r4, r5, r6, r7, r8, sl, pc}",
            "bl fcn.00042a98",
            "cmn r0, 0x80",
            "mov r4, r0",
            "blt 0x48a04",
            "cmp r0, 0x7b",
            "cmpne r0, 0x28",
            "beq 0x48a1c",
            "cmp r0, 0x5f",
            "beq 0x48a3c",
            "uxtb r0, r0",
            "bl sym.imp.isalpha",
            "cmp r0, 0",
            "bne 0x48a1c",
            "sub r3, r4, 0x21",
            "cmp r3, 0x1f",
            "bhi 0x48a04",
            "ldr r2, [0x000490a4]",
            "lsr r3, r2, r3",
            "tst r3, 1",
            "bne 0x48a1c",
            "ldr r2, [sp, 8]",
            "mov r3, 0x24",
            "strb r3, [r2], 1",
            "str r2, [sp, 8]",
            "bl fcn.000413f8",
            "b case.0x4834c.14",
            "cmp r4, 0x28",
            "bne 0x48a3c",
            "bl fcn.00042a98",
            "cmp r0, 0x28",
            "beq 0x48fc0",
            "bl fcn.000413f8",
            "mov r3, 0",
            "b 0x48c54",
            "ldr r7, [sp, 8]",
            "mvn r3, 0x7d",
            "cmp r4, 0x7b",
            "strb r3, [r7], 1",
            "ldr r3, [0x00049064]",
            "ldr r1, [sp, 8]",
            "ldr r8, [r3]",
            "mov r3, 1",
            "strb r3, [r1, 1]",
            "add r6, r7, r3",
            "bne 0x49054",
            "bl fcn.00042a98",
            "cmp r0, 0x23",
            "mov r4, r0",
            "bne 0x48a90",
            "bl fcn.00042a98",
            "cmp r0, 0x7d",
            "movne r4, r0",
            "movne r5, 0xa",
            "bne 0x48a94",
            "b 0x49054",
            "mov r5, 0",
            "cmn r4, 0x80",
            "blt 0x48af0",
            "cmp r4, 0x5f",
            "beq 0x48ab4",
            "uxtb r0, r4",
            "bl sym.imp.isalpha",
            "cmp r0, 0",
            "beq 0x48af0",
            "mov r1, r6",
            "mov r0, r4",
            "bl fcn.00045f20",
            "mov r6, r0",
            "bl fcn.00042a98",
            "cmn r0, 0x80",
            "mov r4, r0",
            "blt 0x48b58",
            "cmp r0, 0x5f",
            "beq 0x48ab4",
            "uxtb r0, r0",
            "bl sym.imp.isalnum",
            "cmp r0, 0",
            "bne 0x48ab4",
            "b 0x48b58",
            "sub r3, r4, 0x30",
            "cmp r3, 9",
            "bhi 0x48b20",
            "mov r0, r4",
            "mov r1, r6",
            "bl fcn.00045f20",
            "mov r6, r0",
            "bl fcn.00042a98",
            "sub r3, r0, 0x30",
            "cmp r3, 9",
            "bls 0x48b00",
            "b 0x48b48",
            "sub r3, r4, 0x21",
            "cmp r3, 0x1f",
            "bhi 0x48b50",
            "ldr r2, [0x000490a4]",
            "lsr r3, r2, r3",
            "tst r3, 1",
            "beq 0x48b50",
            "strb r4, [r7, 1]",
            "add r6, r6, 1",
            "bl fcn.00042a98",
            "mov r4, r0",
            "b 0x48b58",
            "ldr r0, str.Bad_substitution",
            "b 0x486b8",
            "mov r0, 0x3d",
            "mov r1, r6",
            "bl fcn.00045f20",
            "cmp r5, 0",
            "str r0, [sp, 8]",
            "bne 0x48bdc",
            "cmp r4, 0x25",
            "beq 0x48bc0",
            "cmp r4, 0x3a",
            "beq 0x48b8c",
            "cmp r4, 0x23",
            "beq 0x48bc8",
            "b 0x48b9c",
            "bl fcn.00042a98",
            "mov r6, 0x10",
            "mov r4, r0",
            "b 0x48ba0",
            "mov r6, r5",
            "ldr r0, str.__",
            "mov r1, r4",
            "bl sym.imp.strchr",
            "cmp r0, 0",
            "beq 0x48b50",
            "ldr r2, [sp, 0x3c]",
            "add r5, r0, r2",
            "b 0x48be4",
            "mov r5, 6",
            "b 0x48bcc",
            "mov r5, 8",
            "bl fcn.00042a98",
            "cmp r0, r4",
            "addeq r5, r5, 1",
            "beq 0x48be0",
            "bl fcn.000413f8",
            "mov r6, 0",
            "ldr r3, [sp, 0x10]",
            "cmp r3, 0",
            "bne 0x48bfc",
            "ldr r1, [sp, 0x14]",
            "cmp r1, 0",
            "beq 0x48c00",
            "orr r6, r6, 0x80",
            "ldr r3, [0x00049064]",
            "cmp r5, 1",
            "rsb r7, r8, r7",
            "orr r6, r6, r5",
            "ldr r3, [r3]",
            "strb r6, [r3, r7]",
            "beq case.0x4834c.14",
            "ldr r3, [sp, 0x10]",
            "ldr r2, [sp, 0x20]",
            "cmp r3, 0",
            "add r2, r2, 1",
            "str r2, [sp, 0x20]",
            "bne 0x48c40",
            "ldr r1, [sp, 0x14]",
            "cmp r1, 0",
            "beq case.0x4834c.14",
            "ldr r2, [sp, 0x24]",
            "add r2, r2, 1",
            "str r2, [sp, 0x24]",
            "b case.0x4834c.14",
            "mov r3, 1",
            "str r3, [sp, 0x28]",
            "add r0, sp, 0x40",
            "ldr r3, [0x00049078]",
            "ldr r3, [r3]",
            "str r3, [sp, 0x34]",
            "bl sym.imp._setjmp",
            "cmp r0, 0",
            "beq 0x48ca8",
            "ldr r3, [sp, 0x1a8]",
            "cmp r3, 0",
            "beq 0x48c88",
            "ldr r0, [sp, 0x1a8]",
            "bl sym.imp.free",
            "ldr r3, [0x00049078]",
            "mov r2, 0",
            "ldr r0, [sp, 0x1a4]",
            "mov r1, 1",
            "str r2, [r3]",
            "ldr r3, [0x000490ac]",
            "str r0, [r3]",
            "bl sym.imp.longjmp",
            "ldr r3, [0x000490b0]",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "ldr r5, [0x00049064]",
            "ldr r1, [sp, 8]",
            "str r0, [sp, 0x1a8]",
            "ldr r4, [r5]",
            "subs r4, r1, r4",
            "beq 0x48cec",
            "mov r0, r4",
            "bl fcn.000434d4",
            "str r0, [sp, 0x1a8]",
            "mov r2, r4",
            "ldr r0, [sp, 0x1a8]",
            "ldr r1, [r5]",
            "bl sym.imp.memcpy",
            "ldr r3, [0x000490ac]",
            "ldr r2, [r3]",
            "str r2, [sp, 0x1a4]",
            "add r2, sp, 0x40",
            "str r2, [r3]",
            "bl fcn.00041f80",
            "ldr r2, [sp, 0x28]",
            "cmp r2, 0",
            "beq 0x48e64",
            "ldr r3, [0x00049064]",
            "mov r7, 2",
            "ldr r6, [0x00049070]",
            "mov r8, 0x5c",
            "ldr sl, [r3]",
            "ldr r1, [0x00049094]",
            "ldr r3, [r1]",
            "cmp r3, 0",
            "beq 0x48d3c",
            "mov r0, r7",
            "bl fcn.0004b38c",
            "bl fcn.00042a98",
            "cmp r0, 0xa",
            "mov r5, r0",
            "beq 0x48e0c",
            "bgt 0x48d60",
            "add r3, r0, 0x82",
            "cmp r3, 1",
            "bhi 0x48e28",
            "b 0x48df4",
            "cmp r0, 0x5c",
            "beq 0x48d74",
            "cmp r0, 0x60",
            "beq 0x48e3c",
            "b 0x48e28",
            "bl fcn.00042a98",
            "cmp r0, 0xa",
            "mov r5, r0",
            "bne 0x48dac",
            "ldr r2, [0x0004905c]",
            "ldr r3, [r2]",
            "add r3, r3, 1",
            "str r3, [r2]",
            "ldr r3, [r6]",
            "cmp r3, 0",
            "beq 0x48d24",
            "mov r0, r7",
            "bl fcn.0004b38c",
            "b 0x48d24",
            "cmp r0, 0x60",
            "cmpne r0, 0x5c",
            "beq 0x48dec",
            "cmp r0, 0x24",
            "beq 0x48e28",
            "ldr r1, [sp, 0x10]",
            "rsbs r3, r1, 1",
            "movlo r3, 0",
            "cmp r0, 0x22",
            "orrne r3, r3, 1",
            "cmp r3, 0",
            "beq 0x48dec",
            "mov r1, sl",
            "mov r0, r8",
            "bl fcn.00045f20",
            "mov sl, r0",
            "cmn r5, 0x80",
            "bge 0x48e28",
            "ldr r3, [0x0004905c]",
            "ldr r0, str.EOF_in_backquote_substitution",
            "ldr r2, [r3]",
            "ldr r3, [0x00049060]",
            "str r2, [r3]",
            "b 0x486b8",
            "ldr r2, [0x0004905c]",
            "ldr r1, [0x00049094]",
            "ldr r3, [r2]",
            "add r3, r3, 1",
            "str r3, [r2]",
            "ldr r3, [r6]",
            "str r3, [r1]",
            "mov r1, sl",
            "mov r0, r5",
            "bl fcn.00045f20",
            "mov sl, r0",
            "b 0x48d24",
            "mov r0, 0",
            "mov r1, sl",
            "bl fcn.00045f20",
            "ldr r3, [0x00049064]",
            "ldr r3, [r3]",
            "cmp r0, r3",
            "beq 0x48e64",
            "rsb r0, r3, r0",
            "bl fcn.00044ee0",
            "bl fcn.000436a4",
            "add r6, sp, 0x1b0",
            "ldr r5, [r6, -4]!",
            "b 0x48e78",
            "mov r6, r5",
            "ldr r5, [r5]",
            "cmp r5, 0",
            "bne 0x48e70",
            "mov r0, 8",
            "bl fcn.00044ee0",
            "ldr r2, [sp, 0x28]",
            "ldr r3, [0x00049078]",
            "str r0, [r6]",
            "cmp r2, 0",
            "str r5, [r0]",
            "str r2, [r3]",
            "mov r0, 2",
            "ldrne r3, [0x00049070]",
            "ldreq r7, [sp, 0x28]",
            "ldrne r7, [r3]",
            "strne r5, [r3]",
            "bl fcn.000493c0",
            "ldr r3, [sp, 0x28]",
            "mov r5, r0",
            "cmp r3, 0",
            "ldrne r3, [0x00049070]",
            "strne r7, [r3]",
            "bne 0x48ee4",
            "bl fcn.00049160",
            "cmp r0, 0xa",
            "beq 0x48ee4",
            "mov r0, 0xa",
            "bl fcn.00044dfc",
            "ldr r1, [sp, 0x28]",
            "ldr r3, [r6]",
            "cmp r1, 0",
            "str r5, [r3, 4]",
            "beq 0x48f10",
            "bl fcn.00042534",
            "ldr r3, [0x000490b8]",
            "mov r2, 0",
            "str r2, [r3]",
            "b 0x48f10",
            "bl fcn.00045328",
            "ldr r2, [0x0004908c]",
            "ldr r3, [r2]",
            "cmp r3, r4",
            "bls 0x48f0c",
            "ldr r3, [0x00049064]",
            "ldr r5, [r3]",
            "ldr r3, [sp, 0x1a8]",
            "cmp r3, 0",
            "beq 0x48f6c",
            "mov r2, r4",
            "ldr r1, [sp, 0x1a8]",
            "mov r0, r5",
            "add r5, r5, r4",
            "bl sym.imp.memcpy",
            "ldr r3, [0x000490b0]",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "ldr r0, [sp, 0x1a8]",
            "bl sym.imp.free",
            "mov r3, 0",
            "str r3, [sp, 0x1a8]",
            "bl fcn.00041f80",
            "ldr r3, [0x00049078]",
            "ldr r1, [sp, 0x34]",
            "ldr r2, [sp, 0x1a4]",
            "str r1, [r3]",
            "ldr r3, [0x000490ac]",
            "str r2, [r3]",
            "ldr r2, [sp, 0x14]",
            "cmp r2, 0",
            "bne 0x48f9c",
            "ldr r3, [sp, 0x10]",
            "cmp r3, 0",
            "beq 0x48fac",
            "mvn r3, 0x7a",
            "mov r1, r5",
            "strb r3, [r1], 1",
            "b 0x4904c",
            "mvn r3, 0x7b",
            "mov r2, r5",
            "strb r3, [r2], 1",
            "str r2, [sp, 8]",
            "b case.0x4834c.14",
            "ldr r3, [sp, 0x14]",
            "add r3, r3, 1",
            "cmp r3, 1",
            "str r3, [sp, 0x14]",
            "bne 0x49044",
            "ldr r3, [sp, 8]",
            "mvn r2, 0x79",
            "strb r2, [r3], 1",
            "ldr r1, [sp, 0x10]",
            "cmp r1, 0",
            "beq 0x4901c",
            "ldr r1, [sp, 8]",
            "add r2, r2, 0x9c",
            "add r3, r3, 1",
            "strb r2, [r1, 1]",
            "mov r1, 3",
            "ldr r2, [sp, 0xc]",
            "str r3, [sp, 8]",
            "ldr r3, [sp, 0x14]",
            "str r2, [sp, 0x1c]",
            "str r1, [sp, 0xc]",
            "str r3, [sp, 0x10]",
            "b case.0x4834c.14",
            "ldr r1, [sp, 8]",
            "mov r2, 0x20",
            "add r3, r3, 1",
            "strb r2, [r1, 1]",
            "ldr r2, [sp, 0xc]",
            "str r3, [sp, 8]",
            "mov r3, 3",
            "str r2, [sp, 0x1c]",
            "str r3, [sp, 0xc]",
            "b case.0x4834c.14",
            "ldr r1, [sp, 8]",
            "strb r4, [r1], 1",
            "str r1, [sp, 8]",
            "b case.0x4834c.14",
            "mov r5, 1",
            "b 0x48a9c"
        ]
    },
    "fcn.0004a7d0": {
        "function_address": "0x0004a7d0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r2",
            "ldr r3, [0x0004abdc]",
            "sub sp, sp, 0x14",
            "mov r6, 0",
            "ldr r2, [r0, 0xc]",
            "ldr r8, [0x0004abe0]",
            "ldr r5, [0x0004abe4]",
            "str r2, [r3]",
            "ldr r3, [r8]",
            "ldr r7, [0x0004abe8]",
            "str r1, [sp, 4]",
            "mov r1, r4",
            "str r3, [r5]",
            "ldr r3, [0x0004abec]",
            "ldr r0, [r0, 8]",
            "str r6, [r7]",
            "str r6, [r3]",
            "bl fcn.0004a1b4",
            "mov r0, r6",
            "ldr r1, [r5]",
            "bl fcn.00045f20",
            "ldr r2, [sp, 4]",
            "sub r3, r0, 1",
            "str r3, [r5]",
            "cmp r2, r6",
            "beq 0x4abd4",
            "ldr r3, [r8]",
            "rsb r0, r3, r0",
            "bl fcn.00044ee0",
            "ldr r3, [0x0004abf0]",
            "ands r1, r4, 1",
            "mov r6, r0",
            "str r3, [r3, 4]",
            "beq 0x4ab34",
            "ldr r3, [r7]",
            "cmp r3, 0",
            "beq 0x4a9e0",
            "ldr r3, [0x0004abf4]",
            "mov r5, r0",
            "ldr r7, [0x0004abec]",
            "ldr r2, [r3, 4]",
            "tst r2, 0x20",
            "ldreq r3, [r3, 8]",
            "ldrne r3, [0x0004abf8]",
            "addeq r3, r3, 4",
            "str r3, [sp, 0xc]",
            "ldr sl, [r7, 0xc]",
            "mov r8, 0",
            "ldr r2, [0x0004abfc]",
            "ldr r0, [sp, 0xc]",
            "ldr r4, [r7, 4]",
            "cmp sl, 0",
            "movne r0, r2",
            "str r0, [sp, 8]",
            "add r4, r6, r4",
            "b 0x4a9b8",
            "ldrb r3, [r4]",
            "ldr r0, [sp, 8]",
            "cmp r3, 0x81",
            "addeq sb, r4, 1",
            "movne sb, r4",
            "ldrb fp, [sb]",
            "mov r1, fp",
            "bl sym.imp.strchr",
            "cmp r0, 0",
            "addeq r4, sb, 1",
            "beq 0x4a9b8",
            "cmp sl, 0",
            "bne 0x4a8fc",
            "ldr r0, [0x0004abf8]",
            "mov r1, fp",
            "bl sym.imp.strchr",
            "subs r8, r0, 0",
            "movne r8, 1",
            "cmp r4, r5",
            "movne r3, 0",
            "andeq r3, r8, 1",
            "add sb, sb, 1",
            "cmp r3, 0",
            "movne r4, sb",
            "movne r8, 1",
            "movne r5, r4",
            "bne 0x4a9b8",
            "strb r3, [r4]",
            "mov r0, 8",
            "bl fcn.00044ee0",
            "ldr r2, [0x0004abf0]",
            "cmp sl, 0",
            "str r5, [r0, 4]",
            "mov r4, sb",
            "ldr r3, [r2, 4]",
            "str r0, [r3]",
            "str r0, [r2, 4]",
            "bne 0x4a9b4",
            "ldr r3, [r7, 8]",
            "add r3, r6, r3",
            "cmp r4, r3",
            "bhs 0x4a9b4",
            "ldrb r3, [r4]",
            "ldr r0, [sp, 8]",
            "cmp r3, 0x81",
            "addeq r5, r4, 1",
            "movne r5, r4",
            "ldrb sb, [r5]",
            "mov r1, sb",
            "bl sym.imp.strchr",
            "cmp r0, 0",
            "beq 0x4a9b4",
            "ldr r0, [0x0004abf8]",
            "mov r1, sb",
            "bl sym.imp.strchr",
            "cmp r0, 0",
            "bne 0x4a9ac",
            "cmp r8, 0",
            "beq 0x4a9b4",
            "add r4, r5, 1",
            "mov r8, r0",
            "b 0x4a94c",
            "add r4, r5, 1",
            "b 0x4a94c",
            "mov r5, r4",
            "ldr r3, [r7, 8]",
            "add r3, r6, r3",
            "cmp r4, r3",
            "blo 0x4a8b4",
            "ldr r7, [r7]",
            "cmp r7, 0",
            "bne 0x4a88c",
            "cmp sl, 0",
            "bne 0x4a9f0",
            "mov r6, r5",
            "ldrb r3, [r6]",
            "cmp r3, 0",
            "beq 0x4aa0c",
            "mov r5, r6",
            "mov r0, 8",
            "bl fcn.00044ee0",
            "ldr r3, [0x0004abf0]",
            "str r5, [r0, 4]",
            "ldr r2, [r3, 4]",
            "str r0, [r2]",
            "str r0, [r3, 4]",
            "ldr r5, [0x0004abf0]",
            "mov sl, 0",
            "ldr fp, [0x0004ac00]",
            "ldr r8, [0x0004ac04]",
            "ldr r3, [r5, 4]",
            "ldr r7, [0x0004ac08]",
            "str sl, [r3]",
            "str r5, [r5, 4]",
            "ldr r4, [r5]",
            "b 0x4ab28",
            "ldrb sb, [fp, 1]",
            "cmp sb, 0",
            "bne 0x4aac4",
            "ldr r0, [r4, 4]",
            "ldr r1, [0x0004ac0c]",
            "bl sym.imp.strpbrk",
            "cmp r0, 0",
            "beq 0x4aac4",
            "ldr r3, [r8]",
            "ldr r6, [r5, 4]",
            "add r3, r3, 1",
            "str r3, [r8]",
            "mov r2, 0x11",
            "mov r1, sb",
            "ldr r0, [r4, 4]",
            "bl fcn.00045c60",
            "mov sb, r0",
            "ldr r0, [r4, 4]",
            "bl sym.imp.strlen",
            "cmp r0, 0x800",
            "movlt r0, 0x800",
            "bl fcn.000434d4",
            "mov r1, sb",
            "str r0, [r7]",
            "bl fcn.00044ffc",
            "ldr r0, [r7]",
            "bl sym.imp.free",
            "ldr r3, [r4, 4]",
            "cmp sb, r3",
            "beq 0x4aab4",
            "mov r0, sb",
            "bl sym.imp.free",
            "bl fcn.00041f80",
            "ldr r3, [r5, 4]",
            "cmp r3, r6",
            "bne 0x4aae0",
            "ldr r3, [r5, 4]",
            "mov r1, 0",
            "ldr r0, [r4, 4]",
            "str r4, [r3]",
            "bl fcn.00045b3c",
            "str r4, [r5, 4]",
            "b 0x4ab24",
            "str sl, [r3]",
            "mov r1, sl",
            "ldr r0, [r6]",
            "mov r3, r0",
            "b 0x4aafc",
            "ldr r3, [r3]",
            "add r1, r1, 1",
            "cmp r3, 0",
            "bne 0x4aaf4",
            "bl fcn.00041a4c",
            "str r0, [r6]",
            "b 0x4ab14",
            "mov r0, r3",
            "ldr r3, [r0]",
            "cmp r3, 0",
            "bne 0x4ab10",
            "str r0, [r5, 4]",
            "ldr r4, [r4]",
            "cmp r4, 0",
            "bne 0x4aa34",
            "b 0x4ab5c",
            "tst r4, 8",
            "beq 0x4ab40",
            "bl fcn.00045b3c",
            "mov r0, 8",
            "bl fcn.00044ee0",
            "ldr r3, [0x0004abf0]",
            "str r6, [r0, 4]",
            "ldr r2, [r3, 4]",
            "str r0, [r2]",
            "str r0, [r3, 4]",
            "ldr r3, [0x0004abec]",
            "ldr r2, [r3]",
            "cmp r2, 0",
            "beq 0x4abac",
            "ldr r2, [0x0004ac04]",
            "ldr r1, [r2]",
            "add r1, r1, 1",
            "str r1, [r2]",
            "ldr r0, [r3]",
            "b 0x4ab88",
            "mov r0, r4",
            "ldr r4, [r0]",
            "bl sym.imp.free",
            "cmp r4, 0",
            "bne 0x4ab84",
            "ldr r3, [0x0004abe8]",
            "str r4, [r3]",
            "ldr r3, [0x0004abec]",
            "str r4, [r3]",
            "bl fcn.00041f80",
            "ldr r2, [0x0004abf0]",
            "mov r1, 0",
            "ldr r3, [r2, 4]",
            "str r1, [r3]",
            "ldr r2, [r2]",
            "cmp r2, r1",
            "ldrne r0, [sp, 4]",
            "ldrne r1, [r0, 4]",
            "strne r2, [r1]",
            "strne r3, [r0, 4]",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00042d90": {
        "function_address": "0x00042d90",
        "instructions": [
            "push {r3, lr}",
            "bl fcn.00042a98",
            "cmn r0, 0x81",
            "beq 0x42d94",
            "pop {r3, pc}"
        ]
    },
    "fcn.000413f8": {
        "function_address": "0x000413f8",
        "instructions": [
            "ldr r3, [0x0004141c]",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "ldr r3, [0x00041420]",
            "ldr r2, [r3]",
            "sub r2, r2, 1",
            "str r2, [r3]",
            "bx lr"
        ]
    },
    "fcn.00043710": {
        "function_address": "0x00043710",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r4, r0",
            "mov r5, r1",
            "bl sym.imp.strlen",
            "ldr r3, [0x000437ac]",
            "mov r7, r0",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "ldr r6, [0x000437b0]",
            "ldr r3, [r6]",
            "ldr r2, [r3, 0x1c]",
            "cmp r2, 0",
            "addeq r0, r3, 0x20",
            "beq 0x43760",
            "mov r0, 0x14",
            "bl fcn.000434d4",
            "ldr r3, [r6]",
            "ldr r2, [r3, 0x1c]",
            "str r2, [r0]",
            "str r0, [r3, 0x1c]",
            "cmp r5, 0",
            "ldr r3, [0x000437b4]",
            "str r5, [r0, 0xc]",
            "ldr r3, [r3]",
            "str r3, [r0, 4]",
            "ldr r3, [0x000437b8]",
            "ldr r3, [r3]",
            "str r3, [r0, 8]",
            "ldrne r3, [r5, 0xc]",
            "orrne r3, r3, 1",
            "strne r3, [r5, 0xc]",
            "ldr r3, [0x000437b4]",
            "strne r4, [r0, 0x10]",
            "str r4, [r3]",
            "ldr r3, [0x000437b8]",
            "str r7, [r3]",
            "pop {r4, r5, r6, r7, r8, lr}",
            "b fcn.00041f80"
        ]
    },
    "fcn.000493c0": {
        "function_address": "0x000493c0",
        "instructions": [
            "ldr r3, [0x00049578]",
            "cmp r0, 2",
            "push {r0, r1, r2, r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r2, 7",
            "mov r7, r0",
            "str r2, [r3]",
            "bne 0x493e8",
            "bl fcn.00049390",
            "cmp r0, 0",
            "bne 0x4956c",
            "ldr sb, [0x00049578]",
            "mov r5, 0",
            "ldr r6, [0x0004957c]",
            "mov r8, 7",
            "mov fp, 3",
            "bl fcn.00049c90",
            "mov r4, r0",
            "bl fcn.00049160",
            "cmp r0, 6",
            "beq 0x49438",
            "cmp r0, 7",
            "beq 0x49440",
            "ldr r3, [r6]",
            "add r3, r3, 1",
            "str r3, [r6]",
            "bl fcn.00049160",
            "cmp r0, 5",
            "mov sl, r0",
            "beq 0x49470",
            "b 0x494a4",
            "mov sl, 5",
            "b 0x49444",
            "mov sl, 6",
            "str r8, [sb]",
            "bl fcn.00049c90",
            "mov r3, r0",
            "mov r0, 0xc",
            "str r3, [sp, 4]",
            "bl fcn.00044ee0",
            "str sl, [r0]",
            "str r4, [r0, 4]",
            "ldr r3, [sp, 4]",
            "str r3, [r0, 8]",
            "b 0x49400",
            "ldr r3, [r4]",
            "cmp r3, 1",
            "streq r3, [r4, 4]",
            "beq 0x494a4",
            "cmp r3, 2",
            "beq 0x494a0",
            "mov r0, 0xc",
            "bl fcn.00044ee0",
            "str r4, [r0, 4]",
            "mov r4, r0",
            "mov r3, 0",
            "str r3, [r0, 8]",
            "str fp, [r4]",
            "cmp r5, 0",
            "moveq r5, r4",
            "beq 0x494c8",
            "mov r0, 0xc",
            "bl fcn.00044ee0",
            "str r5, [r0, 4]",
            "mov r5, r0",
            "str r8, [r0]",
            "str r4, [r0, 8]",
            "cmp sl, 5",
            "ldrls pc, [pc, sl, lsl 2]",
            "b case.0x494cc.2",
            "bl fcn.00049160",
            "cmp r0, 1",
            "bne 0x49508",
            "bl fcn.000490bc",
            "cmp r7, 1",
            "beq 0x49570",
            "b 0x49514",
            "ldr r3, [r6]",
            "add r3, r3, 1",
            "str r3, [r6]",
            "str r8, [sb]",
            "bl fcn.00049390",
            "cmp r0, 0",
            "bne 0x49570",
            "b 0x493fc",
            "ldr r3, [0x00049580]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x49540",
            "bl fcn.000490bc",
            "b 0x49570",
            "bl fcn.000413f8",
            "b 0x49570",
            "cmp r7, 1",
            "bne 0x49558",
            "mvn r0, 0",
            "bl fcn.00044dfc",
            "ldr r3, [0x0004957c]",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "b 0x49570",
            "mov r5, 0",
            "mov r0, r5",
            "pop {r1, r2, r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00049160": {
        "function_address": "0x00049160",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "ldr r5, [0x00049230]",
            "ldr r7, [0x00049234]",
            "ldr r6, [0x00049238]",
            "bl fcn.0004b42c",
            "ldr r3, [r5]",
            "mov r4, r0",
            "tst r3, 4",
            "beq 0x4919c",
            "b 0x49194",
            "bl fcn.000490bc",
            "bl fcn.0004b42c",
            "mov r4, r0",
            "cmp r4, 1",
            "beq 0x49188",
            "cmp r4, 3",
            "bne 0x4921c",
            "ldr r3, [r7]",
            "cmp r3, 0",
            "bne 0x4921c",
            "ldr r3, [r5]",
            "tst r3, 2",
            "beq 0x491e4",
            "ldr r0, [r6]",
            "bl fcn.00042da4",
            "cmp r0, 0",
            "beq 0x491e4",
            "ldr r3, aav.0x00060514",
            "rsb r4, r3, r0",
            "ldr r3, [0x00049240]",
            "asr r4, r4, 2",
            "str r4, [r3]",
            "b 0x4921c",
            "ldr r3, [r5]",
            "tst r3, 1",
            "beq 0x4921c",
            "mov r1, 1",
            "ldr r0, [r6]",
            "bl fcn.00041a20",
            "subs r1, r0, 0",
            "beq 0x4921c",
            "ldr r0, [r1, 8]",
            "ldrb r3, [r0]",
            "cmp r3, 0",
            "beq 0x49170",
            "bl fcn.00043710",
            "b 0x49170",
            "ldr r3, [0x00049230]",
            "mov r2, 0",
            "mov r0, r4",
            "str r2, [r3]",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.00044dfc": {
        "function_address": "0x00044dfc",
        "instructions": [
            "ldr r3, [0x00044e50]",
            "mov r5, r0",
            "str lr, [sp, -4]!",
            "sub sp, sp, 0x44",
            "ldr r0, [r3]",
            "bl fcn.00041714",
            "ldr r1, str._s_unexpected",
            "mov r2, r0",
            "mov r0, sp",
            "bl sym.imp.sprintf",
            "cmp r5, 0",
            "mov r6, r0",
            "blt 0x44e48",
            "mov r0, r5",
            "bl fcn.00041714",
            "ldr r1, str.__expecting__s_",
            "mov r2, r0",
            "add r0, sp, r6",
            "bl sym.imp.sprintf",
            "mov r0, sp",
            "bl fcn.00044de8",
            "andeq sl, r6, r4, asr pc",
            "andeq r0, r6, fp, lsl 15",
            "muleq r6, sb, r7"
        ]
    },
    "fcn.0004a1b4": {
        "function_address": "0x0004a1b4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r5, r1",
            "tst r5, 4",
            "sub sp, sp, 0xb4",
            "and r1, r1, 0x11",
            "and r2, r5, 0x80",
            "ldreq r3, [0x0004a7a0]",
            "mov r4, r0",
            "str r1, [sp, 0xc]",
            "str r2, [sp, 0x10]",
            "streq r3, [sp, 4]",
            "beq 0x4a1f8",
            "ldr r3, [0x0004a7a4]",
            "tst r5, 0x40",
            "add r2, r3, 1",
            "moveq r2, r3",
            "str r2, [sp, 4]",
            "ands r3, r5, 2",
            "movne r1, 0",
            "bicne r5, r5, 2",
            "strne r1, [sp]",
            "bne 0x4a214",
            "b 0x4a33c",
            "mov r5, sl",
            "ldrb r3, [r4]",
            "cmp r3, 0x81",
            "bne 0x4a22c",
            "tst r5, 0x100",
            "addne r0, r4, 1",
            "bne 0x4a230",
            "mov r0, r4",
            "ldrb r3, [r0]",
            "cmp r3, 0x7e",
            "addeq r0, r0, 1",
            "andeq r2, r5, 4",
            "moveq r3, r0",
            "beq 0x4a288",
            "b 0x4a340",
            "cmp r7, 0x81",
            "beq 0x4a340",
            "bhi 0x4a26c",
            "cmp r7, 0x2f",
            "beq 0x4a298",
            "cmp r7, 0x3a",
            "beq 0x4a280",
            "b 0x4a288",
            "cmp r7, 0x83",
            "beq 0x4a298",
            "cmp r7, 0x88",
            "beq 0x4a340",
            "b 0x4a288",
            "cmp r2, 0",
            "bne 0x4a298",
            "mov r6, r3",
            "ldrb r7, [r3], 1",
            "cmp r7, 0",
            "bne 0x4a24c",
            "mov r3, 0",
            "strb r3, [r6]",
            "ldrb r3, [r0]",
            "cmp r3, 0",
            "bne 0x4a2bc",
            "ldr r0, str.HOME",
            "bl fcn.00041424",
            "mov sl, r0",
            "b 0x4a2cc",
            "bl sym.imp.getpwnam",
            "cmp r0, 0",
            "beq 0x4a334",
            "ldr sl, [r0, 0x14]",
            "cmp sl, 0",
            "beq 0x4a334",
            "ldrb r3, [sl]",
            "cmp r3, 0",
            "beq 0x4a334",
            "strb r7, [r6]",
            "mov r0, sl",
            "ldr r4, [0x0004a7ac]",
            "ldr r7, [0x0004a7b0]",
            "ldr r3, [r4]",
            "ldr r8, [r7]",
            "rsb r8, r3, r8",
            "bl sym.imp.strlen",
            "mov r2, 2",
            "mov r1, r0",
            "and r3, r5, 0x11",
            "mov r0, sl",
            "bl fcn.0004548c",
            "ldr r3, [r4]",
            "mov r0, r8",
            "ldr r1, [r7]",
            "mov r2, 0",
            "mov r4, r6",
            "rsb r1, r3, r1",
            "bl fcn.000434e0",
            "b 0x4a340",
            "strb r7, [r6]",
            "b 0x4a340",
            "str r3, [sp]",
            "ldr r6, [0x0004a7b0]",
            "ldr r7, [0x0004a7ac]",
            "ldr r8, [r6]",
            "mov sb, 0",
            "ldr r3, [r7]",
            "mov sl, r5",
            "rsb r8, r3, r8",
            "b 0x4a364",
            "mov sb, 0",
            "add r0, r4, sb",
            "ldr r1, [sp, 4]",
            "bl sym.imp.strcspn",
            "add sb, r0, sb",
            "ldrb r5, [r4, sb]",
            "cmp r5, 0",
            "str r5, [sp, 8]",
            "beq 0x4a3a0",
            "tst r5, 0x80",
            "movne r3, 0",
            "moveq r3, 1",
            "cmp r5, 0x87",
            "orreq r3, r3, 1",
            "cmp r3, 0",
            "addne sb, sb, 1",
            "cmp sb, 0",
            "beq 0x4a400",
            "mov r1, sb",
            "ldr r2, [r6]",
            "mov r0, r4",
            "bl fcn.00045510",
            "ldr r2, [sp]",
            "ldr r1, [sp, 0x10]",
            "ldr fp, [r7]",
            "rsbs r3, r2, 1",
            "movlo r3, 0",
            "str r0, [r6]",
            "cmp r1, 0",
            "moveq r3, 0",
            "rsb fp, fp, r0",
            "cmp r3, 0",
            "beq 0x4a3fc",
            "cmp fp, r8",
            "ble 0x4a3fc",
            "mov r0, r8",
            "mov r1, fp",
            "mov r2, 0",
            "bl fcn.000434e0",
            "mov r8, fp",
            "cmp r5, 0x3a",
            "add sb, sb, 1",
            "add r4, r4, sb",
            "beq 0x4a440",
            "cmp r5, 0x3d",
            "beq 0x4a424",
            "cmp r5, 0",
            "beq case.0x4a458.2",
            "b 0x4a450",
            "tst sl, 0x40",
            "subne r4, r4, 1",
            "bne case.0x4a458.5",
            "ldr r2, [sp, 4]",
            "orr sl, sl, 0x40",
            "add r2, r2, 1",
            "str r2, [sp, 4]",
            "ldrb r3, [r4, -1]!",
            "cmp r3, 0x7e",
            "beq 0x4a210",
            "b case.0x4a458.5",
            "sub r5, r5, 0x81",
            "cmp r5, 7",
            "ldrls pc, [pc, r5, lsl 2]",
            "b case.0x4a458.5",
            "ldr r3, [sp]",
            "cmp r3, 0",
            "bne 0x4a4dc",
            "mov r0, r4",
            "ldr r1, [0x0004a7b4]",
            "mov r2, 4",
            "bl sym.imp.memcmp",
            "cmp r0, 0",
            "bne 0x4a4dc",
            "ldrb r3, [r4, 4]",
            "cmp r3, 0x88",
            "beq 0x4a4c4",
            "cmp r3, 0x83",
            "bne 0x4a4dc",
            "ldrb r3, [r4, 5]",
            "cmp r3, 0x88",
            "bne 0x4a4dc",
            "add r0, r4, 1",
            "mov r1, sl",
            "bl fcn.0004b77c",
            "mov r5, sl",
            "add r4, r0, 1",
            "b 0x4a348",
            "ldr r1, [sp]",
            "mov sb, 0",
            "rsbs r1, r1, 1",
            "movlo r1, 0",
            "str r1, [sp]",
            "ldr r2, [sp, 0xc]",
            "cmp r2, 0",
            "subne r4, r4, 1",
            "addne sb, sb, 1",
            "addne r8, r8, 1",
            "b 0x4a364",
            "add r8, r8, 1",
            "mov sb, 1",
            "b 0x4a4f0",
            "mov r0, r4",
            "mov r1, sl",
            "bl fcn.0004b77c",
            "mov r5, sl",
            "mov r4, r0",
            "b 0x4a348",
            "mov r3, 0",
            "mov r5, sl",
            "str r3, [sp, 8]",
            "b 0x4a540",
            "mov r5, sl",
            "ldr r1, [0x0004a7b8]",
            "ldr r2, [sp, 8]",
            "ldr r3, [r1]",
            "subs r2, r2, 0",
            "movne r2, 1",
            "str r2, [sp, 0x14]",
            "ldr r8, [r3, 4]",
            "ldr r3, [0x0004a7bc]",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "add r0, sp, 0x98",
            "bl fcn.00041134",
            "ldr sl, [r6]",
            "ldr r3, [r7]",
            "rsb sl, r3, sl",
            "mov r0, sl",
            "bl fcn.00044ee0",
            "cmp r8, 0",
            "beq 0x4a63c",
            "ldr r3, [0x0004a7c0]",
            "mvn r2, 0",
            "add r0, sp, 0xa8",
            "ldr fp, [r3]",
            "str r2, [r3]",
            "bl sym.imp.pipe",
            "cmp r0, 0",
            "bge 0x4a5b8",
            "ldr r0, str.pipe_call_failed",
            "bl fcn.0004349c",
            "mov r0, 1",
            "bl fcn.00043868",
            "mov r1, r8",
            "mov r2, 2",
            "mov sb, r0",
            "bl fcn.000461c8",
            "cmp r0, 0",
            "bne 0x4a624",
            "bl fcn.00042a54",
            "ldr r0, [sp, 0xa8]",
            "bl sym.imp.close",
            "ldr r3, [sp, 0xac]",
            "cmp r3, 1",
            "beq 0x4a60c",
            "mov r0, 1",
            "bl sym.imp.close",
            "ldr r0, [sp, 0xac]",
            "mov r1, 1",
            "bl fcn.00044cb4",
            "ldr r0, [sp, 0xac]",
            "bl sym.imp.close",
            "ldr r3, [0x0004a7c8]",
            "mov r2, 0",
            "mov r0, r8",
            "mov r1, 1",
            "strb r2, [r3]",
            "bl fcn.00049e74",
            "ldr r0, [sp, 0xac]",
            "bl sym.imp.close",
            "ldr r3, [0x0004a7c0]",
            "ldr r8, [sp, 0xa8]",
            "str fp, [r3]",
            "b 0x4a644",
            "mov sb, r8",
            "mvn r8, 0",
            "add r0, sp, 0x98",
            "bl fcn.000428a0",
            "cmp r8, 0",
            "blt 0x4a684",
            "b 0x4a668",
            "add r0, sp, 0x18",
            "ldr r2, [sp, 0x14]",
            "ldr r3, [sp, 0xc]",
            "bl fcn.0004548c",
            "add r1, sp, 0x18",
            "mov r0, r8",
            "mov r2, 0x80",
            "bl fcn.00028f70",
            "subs r1, r0, 0",
            "ble 0x4a77c",
            "b 0x4a658",
            "bl fcn.00041f80",
            "ldr r3, [r7]",
            "ldr r2, [r6]",
            "cmp r2, r3",
            "mov r1, r2",
            "bls 0x4a6a8",
            "ldrb r0, [r2, -1]!",
            "cmp r0, 0xa",
            "beq 0x4a690",
            "ldr r2, [sp, 8]",
            "str r1, [r6]",
            "cmp r2, 0",
            "bne 0x4a6c4",
            "mov r0, sl",
            "rsb r1, r3, r1",
            "bl fcn.000434e0",
            "ldr r1, [0x0004a7b8]",
            "ldr r3, [r1]",
            "ldr r3, [r3]",
            "str r3, [r1]",
            "b 0x4a348",
            "ldr r8, [r6]",
            "mov r3, 0",
            "mov r5, sl",
            "sub r4, r4, 1",
            "ldr sl, [r7]",
            "strb r3, [r8, -1]",
            "sub r8, r8, 2",
            "b 0x4a6fc",
            "sub r8, r8, 1",
            "ldrb r3, [r8]",
            "cmp r3, 0x86",
            "bne 0x4a6f8",
            "mov r0, sl",
            "mov r1, r8",
            "bl fcn.000413b0",
            "ands fp, r0, 1",
            "mvnne r0, r0",
            "addne r8, r8, r0",
            "bne 0x4a6fc",
            "rsb sl, sl, r8",
            "mov r0, sl",
            "bl fcn.0004227c",
            "ldr r2, [sp, 0xc]",
            "ldrb sb, [r8, 1]",
            "str r8, [r6]",
            "cmp r2, 0",
            "beq 0x4a750",
            "add r0, r8, 2",
            "mov r1, fp",
            "bl fcn.00045b3c",
            "add r0, r8, 2",
            "bl fcn.00044e5c",
            "bl fcn.00045560",
            "cmp sb, 0x22",
            "mov r1, r0",
            "beq 0x4a348",
            "mov r0, sl",
            "add r1, r1, sl",
            "mov r2, 0",
            "bl fcn.000434e0",
            "b 0x4a348",
            "mov r0, r8",
            "bl sym.imp.close",
            "mov r0, sb",
            "bl fcn.000449e8",
            "ldr r3, [0x0004a7cc]",
            "str r0, [r3]",
            "b 0x4a684",
            "add sp, sp, 0xb4",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00045c60": {
        "function_address": "0x00045c60",
        "instructions": [
            "cmp r1, 0",
            "orr r3, r2, 2",
            "orrne r3, r2, 6",
            "mov r1, r3",
            "b fcn.00045b3c"
        ]
    },
    "fcn.00045b3c": {
        "function_address": "0x00045b3c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r6, r1",
            "ldr r1, [0x00045c58]",
            "mov r8, r0",
            "bl sym.imp.strpbrk",
            "subs r4, r0, 0",
            "beq 0x45c50",
            "tst r6, 1",
            "moveq r5, r8",
            "moveq r7, r4",
            "beq 0x45bc4",
            "bl sym.imp.strlen",
            "rsb r7, r8, r4",
            "tst r6, 8",
            "add r3, r7, 1",
            "add r0, r3, r0",
            "beq 0x45b90",
            "ldr r3, [0x00045c5c]",
            "ldr r1, [r3]",
            "bl fcn.00045444",
            "b 0x45ba4",
            "tst r6, 0x10",
            "beq 0x45ba0",
            "bl fcn.000434d4",
            "b 0x45ba4",
            "bl fcn.00044ee0",
            "cmp r7, 0",
            "mov r5, r0",
            "moveq r7, r0",
            "beq 0x45bc4",
            "mov r2, r7",
            "mov r1, r8",
            "bl sym.imp.memcpy",
            "add r7, r0, r7",
            "mvn r0, r6",
            "and r2, r6, 2",
            "and r0, r0, 4",
            "mov r3, r2",
            "mov ip, 0x5c",
            "b 0x45c2c",
            "cmp r1, 0x88",
            "mvneq r0, r0",
            "addeq r4, r4, 1",
            "moveq r3, r2",
            "beq 0x45c2c",
            "cmp r1, 0x5c",
            "moveq r3, 0",
            "beq 0x45c24",
            "cmp r1, 0x81",
            "bne 0x45c20",
            "cmp r0, 0",
            "cmpne r3, 0",
            "add r4, r4, 1",
            "beq 0x45c20",
            "ldrb r3, [r4]",
            "cmp r3, 0x2f",
            "strbne ip, [r7], 1",
            "mov r3, r2",
            "ldrb r1, [r4], 1",
            "strb r1, [r7], 1",
            "ldrb r1, [r4]",
            "cmp r1, 0",
            "bne 0x45bdc",
            "tst r6, 8",
            "mov r8, r5",
            "ldrne r3, [0x00045c5c]",
            "strb r1, [r7]",
            "addne r7, r7, 1",
            "strne r7, [r3]",
            "mov r0, r8",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.00049390": {
        "function_address": "0x00049390",
        "instructions": [
            "push {r3, lr}",
            "bl fcn.00049160",
            "ldr r3, [0x000493b8]",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "ldr r3, aav.0x00060514",
            "ldr r3, [r3, r0, lsl 2]",
            "ldrb r0, [r3]",
            "pop {r3, pc}"
        ]
    },
    "fcn.00049c90": {
        "function_address": "0x00049c90",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sl, lr}",
            "bl fcn.00049160",
            "cmp r0, 0xd",
            "ldrne r3, [0x00049d80]",
            "moveq r2, 3",
            "ldreq r3, [0x00049d84]",
            "moveq r7, 1",
            "movne r7, 0",
            "ldrne r2, [r3]",
            "streq r2, [r3]",
            "addne r2, r2, 1",
            "strne r2, [r3]",
            "bl fcn.00049584",
            "mov r4, r0",
            "bl fcn.00049160",
            "cmp r0, 8",
            "mov r6, r0",
            "bne 0x49d4c",
            "mov r0, 0xc",
            "ldr sl, [0x00049d84]",
            "bl fcn.00044ee0",
            "mov r3, 1",
            "mov r5, r0",
            "str r3, [r0]",
            "mov r3, 0",
            "str r3, [r0, 4]",
            "mov r0, r6",
            "bl fcn.00044ee0",
            "mov r8, 7",
            "str r0, [r5, 8]",
            "mov r6, r0",
            "str r4, [r0, 4]",
            "b 0x49d18",
            "mov r6, r4",
            "mov r0, 8",
            "bl fcn.00044ee0",
            "mov r4, r0",
            "str r8, [sl]",
            "bl fcn.00049584",
            "str r4, [r6]",
            "str r0, [r4, 4]",
            "bl fcn.00049160",
            "cmp r0, 8",
            "beq 0x49d14",
            "mov r3, 0",
            "str r3, [r4]",
            "mov r4, r5",
            "ldr r3, [0x00049d80]",
            "cmp r7, 0",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "beq 0x49d78",
            "mov r0, 8",
            "bl fcn.00044ee0",
            "mov r3, 0x19",
            "stm r0, {r3, r4}",
            "pop {r3, r4, r5, r6, r7, r8, sl, pc}",
            "mov r0, r4",
            "pop {r3, r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "fcn.000490bc": {
        "function_address": "0x000490bc",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sl, lr}",
            "mov sl, 0",
            "ldr r3, [0x00049150]",
            "mov r8, 0xf",
            "ldr r7, [0x00049154]",
            "ldr r4, [r3]",
            "ldr r6, [0x00049158]",
            "str sl, [r3]",
            "ldr r5, [0x0004915c]",
            "b 0x49144",
            "ldr r3, [r7]",
            "cmp r3, 0",
            "beq 0x490f8",
            "mov r0, 2",
            "bl fcn.0004b38c",
            "bl fcn.00042a98",
            "ldr r3, [r4, 4]",
            "ldr r2, [r4, 8]",
            "ldr r1, [r3]",
            "ldr r3, [r4, 0xc]",
            "cmp r1, 0x17",
            "movne r1, 1",
            "moveq r1, 2",
            "bl fcn.00048294",
            "mov r0, 0x10",
            "bl fcn.00044ee0",
            "ldr r3, [r6]",
            "stm r0, {r8, sl}",
            "str r3, [r0, 8]",
            "ldr r3, [r5]",
            "str r3, [r0, 0xc]",
            "ldr r3, [r4, 4]",
            "ldr r4, [r4]",
            "str r0, [r3, 0xc]",
            "cmp r4, 0",
            "bne 0x490e4",
            "pop {r3, r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "fcn.0004b42c": {
        "function_address": "0x0004b42c",
        "instructions": [
            "ldr r3, [0x0004b5ac]",
            "push {r4, r5, r6, r7, r8, lr}",
            "ldr r2, [r3]",
            "cmp r2, 0",
            "beq 0x4b454",
            "mov r2, 0",
            "str r2, [r3]",
            "ldr r3, [0x0004b5b0]",
            "ldr r0, [r3]",
            "pop {r4, r5, r6, r7, r8, pc}",
            "ldr r3, [0x0004b5b4]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x4b46c",
            "mov r0, 2",
            "bl fcn.0004b38c",
            "ldr r5, [0x0004b5b8]",
            "ldr r6, [0x0004b5bc]",
            "ldr r7, [0x0004b5c0]",
            "ldr r3, [r5]",
            "str r3, [r7]",
            "bl fcn.00042a98",
            "cmp r0, 9",
            "cmpne r0, 0x20",
            "mov r4, r0",
            "beq 0x4b480",
            "cmn r0, 0x81",
            "beq 0x4b480",
            "cmp r0, 0x23",
            "bne 0x4b4c0",
            "bl fcn.00042a98",
            "cmp r0, 0xa",
            "beq 0x4b4b8",
            "cmn r0, 0x82",
            "bne 0x4b4a4",
            "bl fcn.000413f8",
            "b 0x4b480",
            "cmp r0, 0x5c",
            "bne 0x4b504",
            "bl fcn.00042a98",
            "cmp r0, 0xa",
            "beq 0x4b4dc",
            "bl fcn.000413f8",
            "b 0x4b54c",
            "ldr r3, [r5]",
            "add r3, r3, 1",
            "str r3, [r5]",
            "str r3, [r7]",
            "ldr r3, [r6]",
            "cmp r3, 0",
            "beq 0x4b480",
            "mov r0, 2",
            "bl fcn.0004b38c",
            "b 0x4b480",
            "cmn r0, 0x82",
            "beq 0x4b58c",
            "cmp r0, 0xa",
            "bne 0x4b534",
            "ldr r3, [0x0004b5b8]",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "ldr r3, [0x0004b5bc]",
            "ldr r2, [r3]",
            "ldr r3, [0x0004b5b4]",
            "str r2, [r3]",
            "ldr r5, [0x0004b5c4]",
            "mov r1, r4",
            "mov r0, r5",
            "bl sym.imp.strchr",
            "subs r6, r0, 0",
            "bne 0x4b564",
            "mov r1, 0",
            "mov r0, r4",
            "mov r2, r1",
            "mov r3, r1",
            "pop {r4, r5, r6, r7, r8, lr}",
            "b fcn.00048294",
            "rsb r5, r5, r6",
            "cmp r5, 2",
            "bls 0x4b590",
            "bl fcn.00042a98",
            "ldrb r3, [r6]",
            "cmp r0, r3",
            "addeq r6, r6, 4",
            "beq 0x4b590",
            "bl fcn.000413f8",
            "b 0x4b590",
            "ldr r6, aav.0x000605ac",
            "ldr r3, [0x0004b5c4]",
            "rsb r6, r3, r6",
            "ldr r3, [0x0004b5cc]",
            "ldrb r0, [r3, r6]",
            "ldr r3, [0x0004b5b0]",
            "str r0, [r3]",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.00042da4": {
        "function_address": "0x00042da4",
        "instructions": [
            "ldr r3, aav.0x00041b08",
            "push {r0, r1, r2, lr}",
            "mov r2, 0x10",
            "ldr r1, aav.0x00060548",
            "str r3, [sp]",
            "mov r3, 4",
            "bl sym.imp.bsearch",
            "pop {r1, r2, r3, pc}"
        ]
    },
    "fcn.00041a20": {
        "function_address": "0x00041a20",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r1",
            "bl fcn.000419b0",
            "ldr r0, [r0]",
            "cmp r0, 0",
            "cmpne r4, 0",
            "popeq {r4, pc}",
            "ldr r3, [r0, 0xc]",
            "tst r3, 1",
            "movne r0, 0",
            "pop {r4, pc}"
        ]
    },
    "fcn.00049584": {
        "function_address": "0x00049584",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r3, 0",
            "sub sp, sp, 0x1c",
            "str r3, [sp, 0x10]",
            "bl fcn.00049160",
            "sub r0, r0, 2",
            "cmp r0, 0x19",
            "ldrls pc, [pc, r0, lsl 2]",
            "b case.0x495a0.2",
            "mov r0, 0x10",
            "mov r5, 8",
            "bl fcn.00044ee0",
            "mov r4, r0",
            "str r5, [r0]",
            "mov r0, 0",
            "bl fcn.000493c0",
            "str r0, [r4, 4]",
            "bl fcn.00049160",
            "cmp r0, 0x18",
            "beq 0x49644",
            "mov r0, 0x18",
            "bl fcn.00044dfc",
            "mov r0, 0",
            "mov r6, r4",
            "bl fcn.000493c0",
            "mov r7, r5",
            "str r0, [r4, 8]",
            "b 0x49698",
            "mov r0, 0x10",
            "bl fcn.00044ee0",
            "str r0, [r6, 0xc]",
            "mov r5, r0",
            "str r7, [r0]",
            "mov r0, 0",
            "bl fcn.000493c0",
            "str r0, [r5, 4]",
            "bl fcn.00049160",
            "cmp r0, 0x18",
            "bne 0x4963c",
            "mov r6, r5",
            "mov r0, 0",
            "bl fcn.000493c0",
            "str r0, [r5, 8]",
            "bl fcn.00049160",
            "cmp r0, 0x11",
            "beq 0x4965c",
            "ldr r3, [0x00049c68]",
            "ldr r3, [r3]",
            "cmp r3, 0x12",
            "bne 0x496c4",
            "mov r0, 0",
            "bl fcn.000493c0",
            "str r0, [r6, 0xc]",
            "b 0x496dc",
            "mov r3, 0",
            "str r3, [r6, 0xc]",
            "ldr r3, [0x00049c6c]",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "mov r5, 0x14",
            "b 0x49bc8",
            "mov r0, 0xc",
            "bl fcn.00044ee0",
            "ldr r3, [0x00049c68]",
            "mov r4, r0",
            "ldr r3, [r3]",
            "cmp r3, 0x1a",
            "movne r3, 0xa",
            "moveq r3, 9",
            "str r3, [r0]",
            "mov r0, 0",
            "bl fcn.000493c0",
            "str r0, [r4, 4]",
            "b 0x49840",
            "bl fcn.00049160",
            "cmp r0, 3",
            "mov r7, r0",
            "bne 0x4974c",
            "ldr r3, [0x00049c70]",
            "ldr r5, [r3]",
            "cmp r5, 0",
            "bne 0x4974c",
            "ldr r6, [0x00049c74]",
            "ldr r0, [r6]",
            "bl fcn.000417b8",
            "cmp r0, 0",
            "bne 0x49754",
            "ldr r0, str.Bad_for_loop_variable",
            "b 0x49b58",
            "mov r0, 0x10",
            "bl fcn.00044ee0",
            "mov r3, 0xb",
            "mov r4, r0",
            "str r3, [r0]",
            "ldr r3, [r6]",
            "str r3, [r0, 0xc]",
            "ldr r3, [0x00049c7c]",
            "str r7, [r3]",
            "bl fcn.00049160",
            "cmp r0, 0x17",
            "bne 0x497f0",
            "add r5, sp, 0x14",
            "mov r8, 0xf",
            "ldr r7, [0x00049c80]",
            "b 0x497b8",
            "mov r0, 0x10",
            "bl fcn.00044ee0",
            "ldr r3, [r6]",
            "str r8, [r0]",
            "str r3, [r0, 8]",
            "ldr r3, [r7]",
            "str r3, [r0, 0xc]",
            "str r0, [r5]",
            "add r5, r0, 4",
            "bl fcn.00049160",
            "cmp r0, 3",
            "beq 0x49794",
            "mov r3, 0",
            "str r3, [r5]",
            "ldr r3, [sp, 0x14]",
            "str r3, [r4, 4]",
            "ldr r3, [0x00049c68]",
            "ldr r3, [r3]",
            "cmp r3, 4",
            "cmpne r3, 1",
            "beq 0x49834",
            "mvn r0, 0",
            "b 0x49640",
            "mov r0, 0x10",
            "bl fcn.00044ee0",
            "mov r3, 0xf",
            "str r5, [r0, 0xc]",
            "str r3, [r0]",
            "ldr r3, [0x00049c84]",
            "str r5, [r0, 4]",
            "str r3, [r0, 8]",
            "ldr r3, [0x00049c68]",
            "str r0, [r4, 4]",
            "ldr r3, [r3]",
            "cmp r3, 4",
            "cmpne r3, 1",
            "ldrne r3, [0x00049c6c]",
            "ldrne r2, [r3]",
            "addne r2, r2, 1",
            "strne r2, [r3]",
            "ldr r3, [0x00049c7c]",
            "mov r2, 7",
            "str r2, [r3]",
            "bl fcn.00049160",
            "cmp r0, 0xf",
            "movne r0, 0xf",
            "bne 0x49640",
            "mov r0, 0",
            "mov r5, 0x10",
            "bl fcn.000493c0",
            "str r0, [r4, 8]",
            "b 0x49bc8",
            "mov r0, 0xc",
            "bl fcn.00044ee0",
            "mov r3, 0xc",
            "mov r4, r0",
            "str r3, [r0]",
            "bl fcn.00049160",
            "cmp r0, 3",
            "mov r5, r0",
            "movne r0, 3",
            "bne 0x49640",
            "mov r0, 0x10",
            "ldr r6, [0x00049c7c]",
            "bl fcn.00044ee0",
            "mov r3, 0xf",
            "str r0, [r4, 4]",
            "str r3, [r0]",
            "ldr r3, [0x00049c74]",
            "ldr r3, [r3]",
            "str r3, [r0, 8]",
            "ldr r3, [0x00049c80]",
            "ldr r3, [r3]",
            "str r3, [r0, 0xc]",
            "mov r3, 0",
            "str r3, [r0, 4]",
            "str r5, [r6]",
            "bl fcn.00049160",
            "cmp r0, 1",
            "beq 0x498c4",
            "ldr r7, [0x00049c68]",
            "ldr r3, [r7]",
            "cmp r3, 0x17",
            "movne r0, 0x17",
            "bne 0x49640",
            "ldr sl, [0x00049c7c]",
            "add r6, r4, 8",
            "ldr fp, [0x00049c74]",
            "mov r8, 6",
            "ldr sb, [0x00049c80]",
            "mov r2, 6",
            "str r2, [sl]",
            "bl fcn.00049160",
            "cmp r0, 0x13",
            "beq 0x499c8",
            "ldr r3, [r7]",
            "cmp r3, 9",
            "bne 0x49920",
            "bl fcn.00049160",
            "mov r0, 0x10",
            "bl fcn.00044ee0",
            "mov r5, r0",
            "str r0, [r6]",
            "mov r3, 0xd",
            "mov r6, r0",
            "str r3, [r6], 8",
            "mov r0, 0x10",
            "bl fcn.00044ee0",
            "str r0, [sp, 0x14]",
            "mov r2, 0xf",
            "str r0, [r6]",
            "ldr r3, [sp, 0x14]",
            "str r2, [r3]",
            "ldr r2, [fp]",
            "str r2, [r3, 8]",
            "ldr r2, [sb]",
            "str r2, [r3, 0xc]",
            "bl fcn.00049160",
            "cmp r0, 8",
            "ldr r6, [sp, 0x14]",
            "bne 0x49984",
            "add r6, r6, 4",
            "bl fcn.00049160",
            "b 0x4993c",
            "mov r3, 0",
            "str r3, [r6, 4]",
            "ldr r3, [r7]",
            "cmp r3, 0xa",
            "bne 0x49b18",
            "mov r0, 2",
            "add r6, r5, 4",
            "bl fcn.000493c0",
            "str r8, [sl]",
            "str r0, [r5, 0xc]",
            "bl fcn.00049160",
            "cmp r0, 0x13",
            "beq 0x499c8",
            "cmp r0, 0xb",
            "beq 0x498fc",
            "mov r0, 0xb",
            "b 0x49640",
            "mov r3, 0",
            "str r3, [r6]",
            "b 0x49bd8",
            "mov r0, 0xc",
            "mov r5, 0xa",
            "bl fcn.00044ee0",
            "mov r3, 4",
            "mov r4, r0",
            "str r3, [r0]",
            "mov r0, 0",
            "bl fcn.000493c0",
            "mov r3, 0",
            "stmib r4, {r0, r3}",
            "b 0x49bc8",
            "mov r0, 0",
            "mov r5, 0x1c",
            "bl fcn.000493c0",
            "mov r4, r0",
            "b 0x49bc8",
            "ldr r3, [0x00049c6c]",
            "mov r6, 1",
            "ldr sb, [0x00049c74]",
            "add r8, sp, 8",
            "ldr sl, [0x00049c80]",
            "add r7, sp, 0xc",
            "ldr r2, [r3]",
            "mov fp, 0xf",
            "mov r4, 0",
            "add r5, sp, 0x18",
            "str r4, [sp, 0xc]",
            "add r2, r2, 1",
            "str r4, [sp, 8]",
            "str r2, [r3]",
            "str r4, [r5, -0x14]!",
            "ldr r3, [0x00049c7c]",
            "str r6, [r3]",
            "bl fcn.00049160",
            "cmp r0, 3",
            "beq 0x49a78",
            "cmp r0, 9",
            "beq 0x49adc",
            "cmp r0, 2",
            "beq 0x49ac4",
            "b 0x49b7c",
            "mov r0, 0x10",
            "bl fcn.00044ee0",
            "ldr r3, [sl]",
            "mov r4, r0",
            "str fp, [r0]",
            "cmp r6, 0",
            "ldr r0, [sb]",
            "str r3, [r4, 0xc]",
            "str r0, [r4, 8]",
            "beq 0x49ab4",
            "bl fcn.000417d0",
            "cmp r0, 0",
            "strne r4, [r8]",
            "addne r8, r4, 4",
            "bne 0x49a50",
            "str r4, [r7]",
            "mov r6, 0",
            "add r7, r4, 4",
            "b 0x49a50",
            "ldr r2, [0x00049c88]",
            "ldr r4, [r2]",
            "str r4, [r5]",
            "add r5, r4, 4",
            "bl fcn.00049244",
            "b 0x49a50",
            "ldr r3, [sp, 0xc]",
            "cmp r3, 0",
            "beq 0x49b7c",
            "add r3, r3, 4",
            "cmp r7, r3",
            "bne 0x49b7c",
            "ldr r3, [sp, 8]",
            "cmp r3, 0",
            "bne 0x49b7c",
            "ldr r3, [sp, 4]",
            "cmp r3, 0",
            "bne 0x49b7c",
            "bl fcn.00049160",
            "cmp r0, 0xa",
            "beq 0x49b20",
            "mov r0, 0xa",
            "b 0x49640",
            "ldr r5, [r4, 8]",
            "mov r0, r5",
            "bl fcn.000417b8",
            "cmp r0, 0",
            "beq 0x49b54",
            "mov r0, r5",
            "bl fcn.00042dcc",
            "cmp r0, 0",
            "beq 0x49b5c",
            "ldr r3, [r0]",
            "ldrb r3, [r3]",
            "tst r3, 1",
            "beq 0x49b5c",
            "ldr r0, str.Bad_function_name",
            "bl fcn.00044de8",
            "mov r3, 0xe",
            "mov r2, 7",
            "str r3, [r4]",
            "ldr r3, [0x00049c7c]",
            "str r2, [r3]",
            "bl fcn.00049584",
            "str r0, [r4, 4]",
            "b 0x49c5c",
            "ldr r3, [0x00049c6c]",
            "mov r6, 0",
            "mov r0, 0x10",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "str r6, [r7]",
            "str r6, [r8]",
            "str r6, [r5]",
            "bl fcn.00044ee0",
            "ldr r3, [sp, 0xc]",
            "mov r4, r0",
            "str r6, [r0]",
            "str r3, [r0, 8]",
            "ldr r3, [sp, 8]",
            "str r3, [r0, 4]",
            "ldr r3, [sp, 4]",
            "str r3, [r0, 0xc]",
            "b 0x49c5c",
            "bl fcn.00049160",
            "cmp r0, r5",
            "movne r0, r5",
            "bne 0x49640",
            "ldr r3, [0x00049c7c]",
            "mov r2, 3",
            "add r5, sp, 0x10",
            "ldr r6, [0x00049c88]",
            "str r2, [r3]",
            "b 0x49c00",
            "ldr r3, [r6]",
            "str r3, [r5]",
            "add r5, r3, 4",
            "bl fcn.00049244",
            "bl fcn.00049160",
            "cmp r0, 2",
            "beq 0x49bf0",
            "ldr r3, [0x00049c6c]",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "mov r3, 0",
            "str r3, [r5]",
            "ldr r3, [sp, 0x10]",
            "cmp r3, 0",
            "beq 0x49c5c",
            "ldr r3, [r4]",
            "cmp r3, 4",
            "beq 0x49c54",
            "mov r0, 0xc",
            "bl fcn.00044ee0",
            "str r4, [r0, 4]",
            "mov r4, r0",
            "mov r3, 2",
            "str r3, [r0]",
            "ldr r3, [sp, 0x10]",
            "str r3, [r4, 8]",
            "mov r0, r4",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.000417b8": {
        "function_address": "0x000417b8",
        "instructions": [
            "push {r3, lr}",
            "bl fcn.00041760",
            "ldrb r0, [r0]",
            "rsbs r0, r0, 1",
            "movlo r0, 0",
            "pop {r3, pc}"
        ]
    },
    "fcn.000417d0": {
        "function_address": "0x000417d0",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r0",
            "bl fcn.00041760",
            "cmp r4, r0",
            "beq 0x417f8",
            "ldrb r0, [r0]",
            "cmp r0, 0x3d",
            "movne r0, 0",
            "moveq r0, 1",
            "pop {r4, pc}",
            "mov r0, 0",
            "pop {r4, pc}"
        ]
    },
    "fcn.00049244": {
        "function_address": "0x00049244",
        "instructions": [
            "ldr r3, [0x00049378]",
            "push {r4, r5, r6, r7, r8, lr}",
            "ldr r4, [r3]",
            "bl fcn.00049160",
            "cmp r0, 3",
            "beq 0x49264",
            "mvn r0, 0",
            "bl fcn.00044dfc",
            "ldr r3, [r4]",
            "cmp r3, 0x17",
            "bne 0x49334",
            "ldr r3, [0x0004937c]",
            "ldr r6, [r3]",
            "ldr r3, [0x00049380]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "addeq r3, r3, 0x18",
            "streq r3, [r4]",
            "ldr r3, [0x00049384]",
            "ldr r7, [r3]",
            "mov r5, r7",
            "b 0x492c8",
            "cmp r4, 0x88",
            "add r5, r5, 1",
            "beq 0x492c8",
            "cmp r4, 0x81",
            "addeq r5, r5, 1",
            "beq 0x492c8",
            "mov r0, r4",
            "mov r1, 0",
            "bl fcn.00041684",
            "cmp r0, 0xc",
            "beq 0x492e0",
            "ldrb r4, [r5]",
            "cmp r4, 0",
            "bne 0x4929c",
            "b 0x49364",
            "cmp r0, 0x4f",
            "ble 0x492e8",
            "ldr r0, str.Illegal_eof_marker_for____redirection",
            "bl fcn.00044de8",
            "mov r0, r7",
            "mov r1, r4",
            "bl fcn.00045b3c",
            "ldr r3, [0x00049384]",
            "ldr r2, [0x0004938c]",
            "str r4, [r6]",
            "ldr r3, [r3]",
            "str r3, [r6, 8]",
            "ldr r3, [r2]",
            "cmp r3, 0",
            "streq r6, [r2]",
            "popeq {r4, r5, r6, r7, r8, pc}",
            "b 0x49320",
            "mov r3, r2",
            "ldr r2, [r3]",
            "cmp r2, 0",
            "bne 0x4931c",
            "str r6, [r3]",
            "pop {r4, r5, r6, r7, r8, pc}",
            "sub r3, r3, 0x15",
            "cmp r3, 1",
            "bhi 0x49358",
            "ldr r3, [0x00049384]",
            "mov r0, r4",
            "mov r2, 0",
            "ldr r1, [r3]",
            "pop {r4, r5, r6, r7, r8, lr}",
            "b fcn.000452bc",
            "bl fcn.0004527c",
            "str r0, [r4, 0xc]",
            "pop {r4, r5, r6, r7, r8, pc}",
            "mov r0, r7",
            "bl sym.imp.strlen",
            "cmp r0, 0",
            "beq 0x492e0",
            "b 0x492d8"
        ]
    },
    "fcn.00042dcc": {
        "function_address": "0x00042dcc",
        "instructions": [
            "ldr r3, aav.0x00041b08",
            "push {r0, r1, r2, lr}",
            "mov r2, 0x2a",
            "ldr r1, aav.0x000611dc",
            "str r3, [sp]",
            "mov r3, 8",
            "bl sym.imp.bsearch",
            "pop {r1, r2, r3, pc}"
        ]
    },
    "fcn.00049e74": {
        "function_address": "0x00049e74",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "subs r4, r0, 0",
            "mov r6, r1",
            "moveq r5, r4",
            "beq 0x4a0dc",
            "ldr r5, [r4]",
            "ldr r7, [0x0004a16c]",
            "cmp r5, 0xe",
            "ldrls pc, [pc, r5, lsl 2]",
            "b case.0x49e94.13",
            "ldr r3, aav.0x0004bf64",
            "b 0x49f70",
            "ldr r3, aav.0x0004c8fc",
            "b 0x49f44",
            "ldr r0, [r4, 4]",
            "mov r1, 2",
            "bl fcn.00049e74",
            "ldr r5, [r7]",
            "rsbs r5, r5, 1",
            "movlo r5, 0",
            "b 0x4a0d0",
            "ldr r0, [r4, 8]",
            "bl fcn.0004ac10",
            "ldr r0, [r4, 8]",
            "mov r1, 1",
            "bl fcn.0004b18c",
            "subs r5, r0, 0",
            "bne 0x49f34",
            "ldr r0, [r4, 4]",
            "and r1, r6, 2",
            "bl fcn.00049e74",
            "ldr r3, [0x0004a16c]",
            "ldr r5, [r3]",
            "mov r0, 0",
            "bl fcn.00044d00",
            "b 0x4a0d0",
            "ldr r3, aav.0x0004cee0",
            "ldr r2, [0x0004a17c]",
            "ldrb r5, [r2]",
            "cmp r5, 0",
            "beq 0x49fcc",
            "tst r6, 2",
            "mvneq r5, 0",
            "movne r5, 0",
            "b 0x49fcc",
            "ldr r3, aav.0x0004b24c",
            "b 0x49f70",
            "ldr r3, aav.0x0004bd08",
            "mov r5, 0",
            "b 0x49fcc",
            "sub r5, r5, 5",
            "ldr r0, [r4, 4]",
            "lsr r1, r5, 1",
            "sub r1, r1, 1",
            "orr r1, r1, r6",
            "and r1, r1, 2",
            "bl fcn.00049e74",
            "ldr r3, [r7]",
            "rsbs r3, r3, 1",
            "movlo r3, 0",
            "cmp r3, r5",
            "beq 0x4a0d8",
            "ldr r3, [0x0004a188]",
            "ldr r5, [r3]",
            "cmp r5, 0",
            "bne 0x4a0d8",
            "b 0x4a008",
            "ldr r3, aav.0x0004be5c",
            "b 0x49f70",
            "ldr r3, fcn.00049e74",
            "mov r5, r2",
            "mov r0, r4",
            "mov r1, r6",
            "blx r3",
            "b 0x4a0dc",
            "ldr r0, [r4, 4]",
            "mov r1, 2",
            "bl fcn.00049e74",
            "ldr r3, [0x0004a188]",
            "ldr r2, [r3]",
            "cmp r2, 0",
            "bne 0x4a0d8",
            "ldr r3, [0x0004a16c]",
            "ldr r5, [r3]",
            "cmp r5, 0",
            "bne 0x4a014",
            "ldr r4, [r4, 8]",
            "ldr r3, fcn.00049e74",
            "b 0x49fcc",
            "ldr r4, [r4, 0xc]",
            "cmp r4, 0",
            "moveq r5, r4",
            "beq 0x4a0d0",
            "b 0x49fc4",
            "ldr r3, [0x0004a194]",
            "ldmib r4, {r7, sl}",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "ldr r4, [0x0004a198]",
            "mov r3, 4",
            "ldr r8, [0x0004a19c]",
            "mov r5, 0",
            "mov r0, r7",
            "str r5, [r4]",
            "str r3, [r8]",
            "bl fcn.000414e4",
            "ldr r8, [r8]",
            "ldr r0, [r4]",
            "add r0, r8, r0",
            "bl fcn.000434d4",
            "ldr r3, [0x0004a1a0]",
            "add r2, r0, 4",
            "add r8, r0, r8",
            "mov r4, r0",
            "mov r0, r7",
            "str r2, [r3]",
            "ldr r3, [0x0004a1a4]",
            "str r8, [r3]",
            "bl fcn.00041d0c",
            "str r5, [r4]",
            "mov r0, sl",
            "mov r1, 1",
            "bl fcn.00043554",
            "ldrsh r3, [r0, 8]",
            "mov r7, r0",
            "cmp r3, 1",
            "bne 0x4a0b8",
            "ldr r0, [r0, 4]",
            "bl fcn.00041844",
            "mov r3, 1",
            "mov r5, 0",
            "strh r3, [r7, 8]",
            "str r4, [r7, 4]",
            "strb r5, [r7, 0xa]",
            "bl fcn.00041f80",
            "ldr r3, [0x0004a16c]",
            "str r5, [r3]",
            "mov r5, 0",
            "ldr sl, [0x0004a16c]",
            "ldr r8, [sl]",
            "ands r5, r5, r8",
            "ldrne r3, [0x0004a188]",
            "ldrne r2, [r3]",
            "orrne r2, r2, 0x10",
            "strne r2, [r3]",
            "bne 0x4a15c",
            "ldr r3, [0x0004a1a8]",
            "ldr r2, [r3]",
            "cmp r2, 0",
            "beq 0x4a15c",
            "str r5, [r3]",
            "ldr r4, [0x0004a1ac]",
            "ldr r7, [0x0004a1b0]",
            "add sb, r4, 0x40",
            "ldrb r3, [r4, -1]",
            "cmp r3, 0",
            "beq 0x4a14c",
            "strb r5, [r4, -1]",
            "ldr r0, [r7, 4]",
            "cmp r0, 0",
            "beq 0x4a14c",
            "mov r1, 0x10",
            "bl fcn.00049e00",
            "cmp r0, 0",
            "str r8, [sl]",
            "bne 0x4a164",
            "add r4, r4, 1",
            "add r7, r7, 4",
            "cmp r4, sb",
            "bne 0x4a11c",
            "tst r6, 1",
            "popeq {r4, r5, r6, r7, r8, sb, sl, pc}",
            "mov r0, 4",
            "bl fcn.00041ea8",
            "strheq fp, [r6], -r8",
            "andeq fp, r4, r4, ror 30",
            "strdeq ip, sp, [r4], -ip",
            "andeq ip, r4, r0, ror 29",
            "andeq fp, r6, r0, ror 5",
            "andeq fp, r4, ip, asr 4",
            "andeq fp, r4, r8, lsl 26",
            "andeq fp, r6, r8, ror r1",
            "andeq fp, r4, ip, asr lr",
            "andeq sb, r4, r4, ror lr",
            "andeq fp, r6, r0, lsl 6",
            "andeq sl, r6, r4, ror 30",
            "muleq r6, ip, r2",
            "andeq fp, r6, r8, asr 6",
            "andeq sl, r6, r8, asr pc",
            "andeq fp, r6, r4, lsl 6",
            "andeq sl, r6, sp, lsl 30",
            "muleq r6, r0, r1"
        ]
    },
    "fcn.0004ac10": {
        "function_address": "0x0004ac10",
        "instructions": [
            "push {r0, r1, r4, r5, r6, lr}",
            "mov r4, r0",
            "mov r5, sp",
            "mov r6, 0",
            "b 0x4acbc",
            "ldr r3, [r4]",
            "str r6, [r5]",
            "str r5, [sp, 4]",
            "sub r3, r3, 0x10",
            "cmp r3, 6",
            "ldrls pc, [pc, r3, lsl 2]",
            "b 0x4acb8",
            "ldr r0, [r4, 0xc]",
            "mov r1, sp",
            "mov r2, 0xa",
            "bl fcn.0004a7d0",
            "ldr r3, [sp]",
            "ldr r3, [r3, 4]",
            "str r3, [r4, 0x10]",
            "b 0x4acb8",
            "ldr r0, [r4, 0x10]",
            "cmp r0, 0",
            "beq 0x4acb8",
            "mov r1, sp",
            "mov r2, 3",
            "bl fcn.0004a7d0",
            "ldr r3, [sp]",
            "cmp r3, 0",
            "bne 0x4aca8",
            "ldr r0, str.redir_error",
            "bl fcn.0004349c",
            "mov r0, r4",
            "ldr r1, [r3, 4]",
            "mov r2, 1",
            "bl fcn.000452bc",
            "ldr r4, [r4, 4]",
            "cmp r4, 0",
            "bne 0x4ac24",
            "pop {r2, r3, r4, r5, r6, pc}"
        ]
    },
    "fcn.0004b18c": {
        "function_address": "0x0004b18c",
        "instructions": [
            "ldr r3, [0x0004b23c]",
            "push {r4, lr}",
            "sub sp, sp, 0x120",
            "str r0, [sp]",
            "add r0, sp, 8",
            "ldr r3, [r3]",
            "str r1, [sp, 4]",
            "str r3, [sp, 0x118]",
            "ldr r3, [0x0004b240]",
            "ldr r3, [r3]",
            "str r3, [sp, 0x11c]",
            "bl sym.imp._setjmp",
            "lsls r4, r0, 1",
            "bne 0x4b1d8",
            "ldr r3, [0x0004b23c]",
            "add r2, sp, 8",
            "ldm sp, {r0, r1}",
            "str r2, [r3]",
            "bl fcn.0004accc",
            "ldr r0, [sp, 0x118]",
            "cmp r4, 0",
            "ldr r3, [0x0004b23c]",
            "str r0, [r3]",
            "beq 0x4b204",
            "ldr r3, [0x0004b244]",
            "ldr r3, [r3]",
            "cmp r3, 1",
            "beq 0x4b204",
            "mov r1, 1",
            "bl sym.imp.longjmp",
            "ldr r3, [0x0004b240]",
            "ldr r2, [sp, 0x11c]",
            "str r2, [r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "bne 0x4b230",
            "ldr r3, [0x0004b248]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x4b230",
            "bl fcn.00041ee0",
            "mov r0, r4",
            "add sp, sp, 0x120",
            "pop {r4, pc}"
        ]
    },
    "fcn.00049e00": {
        "function_address": "0x00049e00",
        "instructions": [
            "push {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}",
            "mov r4, r1",
            "bl fcn.000436a4",
            "mov r0, sp",
            "mov r6, sp",
            "bl fcn.00041134",
            "ldr r7, [0x00049e6c]",
            "ldr r5, [0x00049e70]",
            "b 0x49e40",
            "mov r1, 0",
            "bl fcn.00049e74",
            "mov r0, sp",
            "bl fcn.000428a0",
            "ldr r8, [r5]",
            "cmp r8, 0",
            "bne 0x49e54",
            "mov r0, 0",
            "bl fcn.00049d88",
            "cmp r7, r0",
            "bne 0x49e24",
            "mov r8, 0",
            "bl fcn.00042534",
            "ldr r3, [0x00049e70]",
            "and r0, r8, r4",
            "str r0, [r3]",
            "add sp, sp, 0x10",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.00049d88": {
        "function_address": "0x00049d88",
        "instructions": [
            "ldr r2, [0x00049df4]",
            "mov r1, 0",
            "push {r4, lr}",
            "cmp r0, r1",
            "str r1, [r2]",
            "ldr r2, [0x00049df8]",
            "str r0, [r2]",
            "beq 0x49dac",
            "bl fcn.0004b38c",
            "ldr r3, [0x00049dfc]",
            "mov r4, 0",
            "str r4, [r3]",
            "bl fcn.00049160",
            "cmp r0, 0",
            "ldreq r0, [0x00049df4]",
            "popeq {r4, pc}",
            "cmp r0, 1",
            "beq 0x49dec",
            "ldr r3, [0x00049df4]",
            "mov r0, 1",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "pop {r4, lr}",
            "b fcn.000493c0",
            "mov r0, r4",
            "pop {r4, pc}"
        ]
    },
    "fcn.000452bc": {
        "function_address": "0x000452bc",
        "instructions": [
            "cmp r2, 0",
            "push {r4, lr}",
            "streq r2, [r0, 0x10]",
            "mov r4, r0",
            "ldrb r3, [r1]",
            "sub r0, r3, 0x30",
            "cmp r0, 9",
            "bhi 0x452ec",
            "ldrb ip, [r1, 1]",
            "cmp ip, 0",
            "streq r0, [r4, 0xc]",
            "popeq {r4, pc}",
            "cmp r3, 0x2d",
            "bne 0x45308",
            "ldrb r3, [r1, 1]",
            "cmp r3, 0",
            "mvneq r3, 0",
            "streq r3, [r4, 0xc]",
            "popeq {r4, pc}",
            "cmp r2, 0",
            "beq 0x45318",
            "ldr r0, str.Bad_fd_number",
            "bl fcn.00044de8",
            "bl fcn.0004527c",
            "str r0, [r4, 0x10]",
            "pop {r4, pc}"
        ]
    },
    "fcn.0004accc": {
        "function_address": "0x0004accc",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "subs r4, r0, 0",
            "ldr r5, [0x0004b150]",
            "sub sp, sp, 0xe4",
            "mov sb, r1",
            "ldr r3, [r5]",
            "add r3, r3, 1",
            "str r3, [r5]",
            "beq 0x4b148",
            "ldr r3, [0x0004b154]",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "ands r8, r1, 1",
            "beq 0x4ad58",
            "mov r0, 0x30",
            "bl fcn.000434d4",
            "ldr r3, [0x0004b158]",
            "ldr r2, [r3]",
            "str r0, [r3]",
            "ldr r3, [r5]",
            "str r2, [r0]",
            "mvn r2, 1",
            "sub r3, r3, 1",
            "str r3, [r0, 0x2c]",
            "mov r3, 0",
            "add r1, r0, r3",
            "add r3, r3, 4",
            "cmp r3, 0x28",
            "str r2, [r1, 4]",
            "bne 0x4ad34",
            "ldr r3, [0x0004b150]",
            "mov r8, r0",
            "mov r2, 0",
            "str r2, [r3]",
            "ldr sl, [0x0004b15c]",
            "add fp, sp, 0xd8",
            "ldr r3, [r4]",
            "ldr r7, [r4, 8]",
            "sub r2, r3, 0x15",
            "cmp r2, 1",
            "bhi 0x4ad80",
            "ldr r2, [r4, 0xc]",
            "cmp r2, r7",
            "beq 0x4b10c",
            "sub r3, r3, 0x10",
            "cmp r3, 8",
            "ldrls pc, [pc, r3, lsl 2]",
            "b case.0x4ad88.5",
            "ldr r6, [r4, 0x10]",
            "mov r1, 0",
            "mov r0, r6",
            "bl sym.imp.open64",
            "subs r5, r0, 0",
            "blt 0x4b03c",
            "b 0x4b010",
            "ldr r6, [r4, 0x10]",
            "movw r1, 0x242",
            "mov r0, r6",
            "b 0x4aed8",
            "ldr r2, [0x0004b160]",
            "ldrb r3, [r2, 9]",
            "cmp r3, 0",
            "beq case.0x4ad88.1",
            "ldr r6, [r4, 0x10]",
            "add r1, sp, 0x70",
            "mov r0, r6",
            "bl sym.imp.stat64",
            "cmp r0, 0",
            "bne 0x4ae1c",
            "ldr r3, [sp, 0x80]",
            "and r3, r3, 0xf000",
            "cmp r3, 0x8000",
            "bne 0x4ae28",
            "b 0x4aea8",
            "mov r0, r6",
            "mov r1, 0xc1",
            "b 0x4aed8",
            "mov r0, r6",
            "mov r1, 0x41",
            "movw r2, 0x1b6",
            "bl sym.imp.open64",
            "subs r5, r0, 0",
            "blt 0x4b01c",
            "add r1, sp, 8",
            "bl sym.imp.fstat64",
            "cmp r0, 0",
            "bne 0x4aea0",
            "ldr r3, [sp, 0x18]",
            "and r3, r3, 0xf000",
            "cmp r3, 0x8000",
            "beq 0x4aea0",
            "ldr r3, [sp, 8]",
            "ldr r2, [sp, 0x70]",
            "cmp r2, r3",
            "bne 0x4aea0",
            "ldr r3, [sp, 0xc]",
            "ldr r2, [sp, 0x74]",
            "cmp r2, r3",
            "bne 0x4aea0",
            "ldr r3, [sp, 0x68]",
            "ldr r2, [sp, 0xd0]",
            "cmp r2, r3",
            "bne 0x4aea0",
            "ldr r3, [sp, 0x6c]",
            "ldr r2, [sp, 0xd4]",
            "cmp r2, r3",
            "beq 0x4b010",
            "mov r0, r5",
            "bl sym.imp.close",
            "ldr r3, [0x0004b15c]",
            "mov r2, 0x11",
            "ldr r3, [r3]",
            "str r2, [r3]",
            "b 0x4b01c",
            "ldr r6, [r4, 0x10]",
            "movw r1, 0x241",
            "mov r0, r6",
            "b 0x4aed8",
            "ldr r6, [r4, 0x10]",
            "movw r1, 0x441",
            "mov r0, r6",
            "movw r2, 0x1b6",
            "bl sym.imp.open64",
            "subs r5, r0, 0",
            "blt 0x4b01c",
            "b 0x4b010",
            "mov r0, fp",
            "bl sym.imp.pipe",
            "cmp r0, 0",
            "bge 0x4af04",
            "ldr r0, str.pipe_call_failed",
            "bl fcn.0004349c",
            "ldr r3, [r4]",
            "cmp r3, 0x17",
            "bne 0x4af40",
            "ldr r3, [r4, 0xc]",
            "ldr r6, [r3, 8]",
            "mov r0, r6",
            "bl sym.imp.strlen",
            "cmp r0, 0x1000",
            "mov r5, r0",
            "bhi 0x4af44",
            "ldr r0, [sp, 0xdc]",
            "mov r1, r6",
            "mov r2, r5",
            "bl fcn.000274f4",
            "b 0x4affc",
            "mov r5, 0",
            "mov r0, 0",
            "mov r2, 2",
            "mov r1, r0",
            "bl fcn.000461c8",
            "subs r6, r0, 0",
            "bne 0x4affc",
            "ldr r0, [sp, 0xd8]",
            "bl sym.imp.close",
            "mov r1, 1",
            "mov r0, 2",
            "bl sym.imp.signal",
            "mov r1, 1",
            "mov r0, 3",
            "bl sym.imp.signal",
            "mov r0, 1",
            "mov r1, r0",
            "bl sym.imp.signal",
            "mov r1, 1",
            "mov r0, 0x14",
            "bl sym.imp.signal",
            "mov r1, r6",
            "mov r0, 0xd",
            "bl sym.imp.signal",
            "ldr r3, [r4]",
            "cmp r3, 0x17",
            "ldr r3, [r4, 0xc]",
            "ldreq r0, [sp, 0xdc]",
            "moveq r2, r5",
            "ldreq r1, [r3, 8]",
            "beq 0x4aff0",
            "ldr r4, [sp, 0xdc]",
            "mov r0, r3",
            "ldr r2, [0x0004b168]",
            "mov r1, r6",
            "str r4, [r2]",
            "mov r2, r6",
            "bl fcn.0004a7d0",
            "ldr r3, [0x0004b16c]",
            "mov r0, r4",
            "ldr r1, [r3]",
            "ldr r3, [0x0004b170]",
            "ldr r2, [r3]",
            "rsb r2, r1, r2",
            "bl fcn.000274f4",
            "mov r0, 0",
            "bl sym.imp._exit",
            "ldr r0, [sp, 0xdc]",
            "bl sym.imp.close",
            "ldr r5, [sp, 0xd8]",
            "b 0x4b010",
            "mvn r5, 0",
            "cmp r7, r5",
            "beq 0x4b10c",
            "b 0x4b060",
            "ldr r3, [0x0004b15c]",
            "ldr r1, str.nonexistent_directory",
            "ldr r3, [r3]",
            "ldr r0, [r3]",
            "bl fcn.00042a80",
            "mov r2, r0",
            "ldr r0, str.cannot_create__s:__s",
            "b 0x4b058",
            "ldr r3, [0x0004b15c]",
            "ldr r1, str.no_such_file",
            "ldr r3, [r3]",
            "ldr r0, [r3]",
            "bl fcn.00042a80",
            "mov r2, r0",
            "ldr r0, str.cannot_open__s:__s",
            "mov r1, r6",
            "bl fcn.0004349c",
            "cmp r8, 0",
            "beq 0x4b0c4",
            "add r6, r8, r7, lsl 2",
            "ldr r3, [r6, 4]",
            "cmn r3, 2",
            "bne 0x4b0c4",
            "mov r0, r7",
            "mov r1, 0",
            "mov r2, 0xa",
            "bl sym.imp.fcntl64",
            "cmn r0, 1",
            "bne 0x4b0c0",
            "ldr r6, [sl]",
            "ldr r3, [r6]",
            "cmp r3, 9",
            "beq 0x4b0cc",
            "mov r0, r5",
            "str r3, [sp, 4]",
            "bl sym.imp.close",
            "ldr r3, [sp, 4]",
            "mov r1, r7",
            "ldr r0, str._d:__m",
            "str r3, [r6]",
            "bl fcn.0004349c",
            "str r0, [r6, 4]",
            "mov r0, r7",
            "bl sym.imp.close",
            "ldr r3, [r4]",
            "ldr r1, [r4, 8]",
            "sub r3, r3, 0x15",
            "cmp r3, 1",
            "bhi 0x4b0f4",
            "ldr r0, [r4, 0xc]",
            "cmp r0, 0",
            "blt 0x4b10c",
            "bl fcn.00044cb4",
            "b 0x4b10c",
            "cmp r5, r1",
            "beq 0x4b10c",
            "mov r0, r5",
            "bl fcn.00044cb4",
            "mov r0, r5",
            "bl sym.imp.close",
            "ldr r4, [r4, 4]",
            "cmp r4, 0",
            "bne 0x4ad60",
            "bl fcn.00041f80",
            "ands sb, sb, 3",
            "movne sb, 1",
            "cmp r8, 0",
            "moveq sb, 0",
            "andne sb, sb, 1",
            "cmp sb, 0",
            "beq 0x4b148",
            "ldr r3, [r8, 0xc]",
            "cmp r3, 0",
            "ldrge r2, [0x0004b188]",
            "strge r3, [r2]",
            "add sp, sp, 0xe4",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0004548c": {
        "function_address": "0x0004548c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov sb, r3",
            "ldr r3, [0x0004550c]",
            "mov r5, r0",
            "mov r4, r1",
            "lsl r0, r1, 1",
            "mov r6, r2",
            "ldr r1, [r3]",
            "mvn sl, 0x7e",
            "bl fcn.00045444",
            "mov r7, r0",
            "b 0x454f8",
            "ldrsb r8, [r5], 1",
            "cmp r8, 0",
            "beq 0x454f4",
            "cmp sb, 0",
            "beq 0x454f0",
            "mov r0, r8",
            "mov r1, r6",
            "bl fcn.00041684",
            "cmp r0, 0xc",
            "beq 0x454ec",
            "cmp r0, 2",
            "bne 0x454f0",
            "strb sl, [r7], 1",
            "strb r8, [r7], 1",
            "sub r4, r4, 1",
            "cmp r4, 0",
            "bne 0x454bc",
            "ldr r3, [0x0004550c]",
            "str r7, [r3]",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "fcn.000434e0": {
        "function_address": "0x000434e0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r4, r0",
            "ldr r6, [0x00043548]",
            "mov r5, r1",
            "mov r7, r2",
            "ldr r3, [r6]",
            "cmp r3, 0",
            "ldreq r8, [0x0004354c]",
            "beq 0x43534",
            "ldr r3, [0x00043550]",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "mov r0, 0x10",
            "bl fcn.000434d4",
            "mov r3, 0",
            "mov r8, r0",
            "str r3, [r0]",
            "ldr r3, [r6]",
            "str r0, [r3]",
            "bl fcn.00041f80",
            "ldr r3, [0x00043548]",
            "stmib r8, {r4, r5}",
            "str r8, [r3]",
            "str r7, [r8, 0xc]",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.00045510": {
        "function_address": "0x00045510",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r4, r1",
            "mov r5, r0",
            "mov r0, r1",
            "mov r1, r2",
            "bl fcn.00045444",
            "mov r1, r5",
            "mov r2, r4",
            "bl sym.imp.memcpy",
            "add r0, r0, r4",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.0004b77c": {
        "function_address": "0x0004b77c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "and r2, r1, 0x11",
            "sub sp, sp, 0x3c",
            "mov r8, r0",
            "str r2, [sp, 0x1c]",
            "str r1, [sp, 0x28]",
            "ldrb r6, [r8], 1",
            "ands r3, r6, 0x80",
            "and sl, r6, 0xf",
            "moveq r2, 1",
            "str r3, [sp, 0x30]",
            "streq r2, [sp, 0x18]",
            "beq 0x4b7d4",
            "ldrb r3, [r0, 1]",
            "cmp r3, 0x40",
            "movne r3, 0",
            "bne 0x4b7d0",
            "ldr r3, [0x0004bcd8]",
            "ldr r3, [r3]",
            "subs r3, r3, 0",
            "movne r3, 1",
            "str r3, [sp, 0x18]",
            "ldr fp, [0x0004bcdc]",
            "mov r0, r8",
            "ldr r3, [0x0004bce0]",
            "mov r1, 0x3d",
            "ldr r2, [fp]",
            "ldr r3, [r3]",
            "rsb r3, r3, r2",
            "str r3, [sp, 0x20]",
            "bl sym.imp.strchr",
            "add r5, r0, 1",
            "str r5, [sp, 0x14]",
            "ands r3, r6, 0x80",
            "and r5, r6, 0xf",
            "moveq r7, r3",
            "beq 0x4b81c",
            "ldr r2, [sp, 0x28]",
            "ands r7, r2, 1",
            "movne r7, 0x100",
            "subs r3, r3, 0",
            "movne r3, 1",
            "str r3, [sp, 0x2c]",
            "ldrb r3, [r8]",
            "cmp r3, 0x39",
            "bhi 0x4b870",
            "cmp r3, 0x30",
            "bhs 0x4ba1c",
            "cmp r3, 0x24",
            "beq 0x4b884",
            "bhi 0x4b85c",
            "cmp r3, 0x21",
            "beq 0x4b8a4",
            "cmp r3, 0x23",
            "beq 0x4b898",
            "b 0x4ba58",
            "cmp r3, 0x2a",
            "beq 0x4b914",
            "cmp r3, 0x2d",
            "beq 0x4b8c0",
            "b 0x4ba58",
            "cmp r3, 0x3f",
            "beq 0x4b88c",
            "cmp r3, 0x40",
            "beq 0x4b908",
            "b 0x4ba58",
            "ldr r3, [0x0004bce4]",
            "b 0x4b89c",
            "ldr r2, [0x0004bce8]",
            "ldr r0, [r2]",
            "b 0x4b8b4",
            "ldr r3, [0x0004bcd8]",
            "ldr r0, [r3]",
            "b 0x4b8b4",
            "ldr r3, [0x0004bcec]",
            "ldr r0, [r3]",
            "cmp r0, 0",
            "beq 0x4bab4",
            "bl fcn.00045560",
            "mov r4, r0",
            "b 0x4ba9c",
            "ldr r1, [fp]",
            "mov r0, 0xe",
            "bl fcn.00045444",
            "ldr r2, [0x0004bcf0]",
            "mov r4, 0",
            "ldr r3, aav.0x00060fcc",
            "ldr r1, [0x0004bcf8]",
            "ldrb ip, [r2, -1]!",
            "cmp ip, 0",
            "ldrne ip, [r3, 0x34]",
            "addne r4, r4, 1",
            "sub r3, r3, 4",
            "ldrbne ip, [ip]",
            "strbne ip, [r0], 1",
            "cmp r2, r1",
            "bne 0x4b8dc",
            "str r0, [fp]",
            "b 0x4ba9c",
            "cmp r7, 0",
            "movne sb, 0",
            "bne 0x4b960",
            "ldr r2, [0x0004bcfc]",
            "ldr r3, [r2, 4]",
            "tst r3, 0x20",
            "ldreq r3, [r2, 8]",
            "movne r7, 0x20",
            "ldrsbeq r7, [r3, 4]",
            "ldr r3, [sp, 0x1c]",
            "cmp r3, 0",
            "ldreq sb, [sp, 0x1c]",
            "beq 0x4b960",
            "mov r0, r7",
            "ldr r1, [sp, 0x2c]",
            "bl fcn.00041684",
            "cmp r0, 0xc",
            "moveq sb, 1",
            "beq 0x4b960",
            "cmp r0, 2",
            "movne sb, 0",
            "moveq sb, 1",
            "ldr r2, [0x0004bcd8]",
            "ldr r3, [r2, 8]",
            "cmp r3, 0",
            "strne r3, [sp, 0x24]",
            "movne r4, 0",
            "bne 0x4ba04",
            "b 0x4bab4",
            "mov r0, r3",
            "str r3, [sp, 0x10]",
            "bl sym.imp.strlen",
            "cmp r5, 0xa",
            "cmpne r5, 3",
            "mov r1, r0",
            "add r4, r0, r4",
            "ldr r3, [sp, 0x10]",
            "beq 0x4b9b0",
            "mov r0, r3",
            "ldr r2, [sp, 0x2c]",
            "ldr r3, [sp, 0x1c]",
            "bl fcn.0004548c",
            "ldr r3, [sp, 0x24]",
            "ldr r2, [sp, 0x34]",
            "add r3, r3, 4",
            "str r3, [sp, 0x24]",
            "ldr r3, [r2, 4]",
            "cmp r7, 0",
            "cmpne r3, 0",
            "beq 0x4ba04",
            "cmp r5, 3",
            "cmpne r5, 0xa",
            "add r4, r4, 1",
            "beq 0x4ba04",
            "cmp sb, 0",
            "ldr r1, [fp]",
            "beq 0x4b9f8",
            "mov r0, 0x81",
            "bl fcn.00045f20",
            "mov r1, r0",
            "mov r0, r7",
            "bl fcn.00045f20",
            "str r0, [fp]",
            "ldr r3, [sp, 0x24]",
            "str r3, [sp, 0x34]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "bne 0x4b97c",
            "b 0x4bab8",
            "mov r0, r8",
            "bl sym.imp.atoi",
            "cmp r0, 0",
            "blt 0x4bab4",
            "ldr r2, [0x0004bcd8]",
            "ldr r3, [r2]",
            "cmp r0, r3",
            "bgt 0x4bab4",
            "cmp r0, 0",
            "ldrne r3, [r2, 8]",
            "subne r0, r0, 1",
            "ldreq r3, [0x0004bd00]",
            "ldrne r7, [r3, r0, lsl 2]",
            "ldreq r7, [r3]",
            "b 0x4ba64",
            "mov r0, r8",
            "bl fcn.00041424",
            "mov r7, r0",
            "cmp r7, 0",
            "beq 0x4bab4",
            "mov r0, r7",
            "bl sym.imp.strlen",
            "cmp r5, 0xa",
            "cmpne r5, 3",
            "mov r4, r0",
            "beq 0x4bab8",
            "mov r0, r7",
            "mov r1, r4",
            "ldr r2, [sp, 0x2c]",
            "ldr r3, [sp, 0x1c]",
            "bl fcn.0004548c",
            "b 0x4bab8",
            "cmp r5, 3",
            "cmpne r5, 0xa",
            "ldreq r3, [fp]",
            "rsbeq r3, r4, r3",
            "streq r3, [fp]",
            "b 0x4bab8",
            "mvn r4, 0",
            "tst r6, 0x10",
            "subne r4, r4, 1",
            "cmp sl, 3",
            "ldreq r5, [sp, 0x14]",
            "mvneq r4, r4",
            "beq 0x4badc",
            "cmp sl, 2",
            "bne 0x4bb0c",
            "ldr r5, [sp, 0x14]",
            "cmp r4, 0",
            "bge 0x4bb5c",
            "ldr r2, [sp, 0x28]",
            "mov r0, r5",
            "orr r1, r2, 2",
            "ldr r2, [sp, 0x30]",
            "cmp r2, 0",
            "moveq r3, 0x80",
            "movne r3, 0x100",
            "orr r1, r1, r3",
            "bl fcn.0004a1b4",
            "b 0x4bc5c",
            "sub r3, sl, 4",
            "cmp r3, 1",
            "bhi 0x4bb6c",
            "cmp r4, 0",
            "bge 0x4bb58",
            "ldr r2, [sp, 0x20]",
            "mov r1, r8",
            "ldr r0, [sp, 0x14]",
            "mov r3, sl",
            "stm sp, {r2, r6}",
            "mov r2, 0",
            "str r2, [sp, 8]",
            "bl fcn.0004b5d0",
            "cmp r0, 0",
            "beq 0x4bc58",
            "ldr r0, [sp, 0x20]",
            "bic r6, r6, 0x10",
            "bl fcn.0004227c",
            "b 0x4b800",
            "ldr r5, [sp, 0x14]",
            "ldr r3, [sp, 0x18]",
            "cmp r3, 0",
            "bne 0x4bbc4",
            "b 0x4bc5c",
            "cmp r4, 0",
            "ldr r5, [sp, 0x14]",
            "bge 0x4bb9c",
            "ldr r3, [0x0004bcf8]",
            "ldrb r3, [r3, 0xc]",
            "cmp r3, 0",
            "beq 0x4bb9c",
            "mov r2, 0",
            "mov r0, r5",
            "mov r1, r8",
            "mov r3, r2",
            "bl fcn.00044964",
            "cmp sl, 0xa",
            "bne 0x4bbb0",
            "bic r0, r4, r4, asr 31",
            "bl fcn.00045560",
            "b 0x4bbc4",
            "cmp sl, 1",
            "bne 0x4bbe8",
            "ldr r2, [sp, 0x18]",
            "cmp r2, 0",
            "beq 0x4bccc",
            "ldr r3, [0x0004bcdc]",
            "ldr r0, [sp, 0x20]",
            "ldr r2, [sp, 0x30]",
            "ldr r1, [r3]",
            "ldr r3, [0x0004bce0]",
            "ldr r3, [r3]",
            "rsb r1, r3, r1",
            "bl fcn.000434e0",
            "b 0x4bc5c",
            "cmp r4, 0",
            "blt 0x4bc64",
            "ldr sb, [0x0004bcdc]",
            "mov r0, 0",
            "ldr r8, [0x0004bce0]",
            "ldr r1, [sb]",
            "bl fcn.00045f20",
            "ldr r7, [r8]",
            "mov r1, 0",
            "ldr r3, [sp, 0x20]",
            "ldr r2, [sp, 0x1c]",
            "rsb r7, r7, r0",
            "str r0, [sb]",
            "str r3, [sp]",
            "mov r0, r5",
            "mov r3, sl",
            "str r2, [sp, 8]",
            "mov r2, r7",
            "str r6, [sp, 4]",
            "bl fcn.0004b5d0",
            "cmp r0, 0",
            "ldr r0, [sp, 0x20]",
            "ldreq r3, [r8]",
            "subeq r7, r7, 1",
            "addeq r7, r3, r7",
            "streq r7, [sb]",
            "bl fcn.0004227c",
            "b 0x4bbc4",
            "ldr r5, [sp, 0x14]",
            "cmp sl, 1",
            "beq 0x4bccc",
            "ldr r3, [0x0004bd04]",
            "ldr r1, [r3]",
            "mov r3, 1",
            "ldrb r2, [r5], 1",
            "cmp r2, 0x81",
            "addeq r5, r5, 1",
            "beq 0x4bc70",
            "sub r0, r2, 0x84",
            "cmp r0, 1",
            "bhi 0x4bc98",
            "cmp r4, 0",
            "ldrge r1, [r1]",
            "b 0x4bc70",
            "cmp r2, 0x82",
            "bne 0x4bcb4",
            "ldrb r2, [r5], 1",
            "and r2, r2, 0xf",
            "cmp r2, 1",
            "addne r3, r3, 1",
            "b 0x4bc70",
            "cmp r2, 0x83",
            "bne 0x4bc70",
            "subs r3, r3, 1",
            "bne 0x4bc70",
            "ldr r3, [0x0004bd04]",
            "str r1, [r3]",
            "mov r0, r5",
            "add sp, sp, 0x3c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00045560": {
        "function_address": "0x00045560",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r5, r0",
            "ldr r4, [0x0004559c]",
            "mov r0, 0x20",
            "ldr r1, [r4]",
            "bl fcn.00045444",
            "mov r3, r5",
            "mov r1, 0x20",
            "ldr r2, [0x000455a0]",
            "str r0, [r4]",
            "bl fcn.00042164",
            "ldr r3, [r4]",
            "add r3, r3, r0",
            "str r3, [r4]",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.0004b5d0": {
        "function_address": "0x0004b5d0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov sl, r3",
            "ldr r4, [0x0004b764]",
            "mov r6, r1",
            "sub r1, sl, 4",
            "mvn r3, 0",
            "ldr r7, [0x0004b768]",
            "cmp r1, 1",
            "ldr sb, [0x0004b76c]",
            "sub sp, sp, 0x14",
            "ldr fp, [r4]",
            "movhi r1, 0x10",
            "str r3, [r4]",
            "movls r1, 0",
            "ldr r8, [r7]",
            "mov r5, r2",
            "str r0, [sp, 0xc]",
            "bl fcn.0004a1b4",
            "mov r0, 0",
            "ldr r1, [sb]",
            "bl fcn.00045f20",
            "str fp, [r4]",
            "cmp sl, 4",
            "ldr fp, [0x0004b770]",
            "str r8, [r7]",
            "ldr r3, [sp, 0x38]",
            "ldr r8, [fp]",
            "str r0, [sb]",
            "ldr ip, [sp, 0xc]",
            "add r4, r8, r3",
            "beq 0x4b66c",
            "cmp sl, 5",
            "bne 0x4b680",
            "mov r0, r6",
            "mov r1, r4",
            "mov r2, 0",
            "bl fcn.00043c24",
            "str r4, [sb]",
            "b 0x4b758",
            "mov r0, ip",
            "mov r1, r6",
            "mov r2, r4",
            "ldr r3, [sp, 0x3c]",
            "bl fcn.00044964",
            "ldr r3, [sp, 0x40]",
            "sub sl, sl, 6",
            "add r8, r8, r5",
            "cmp r3, 0",
            "moveq r7, r4",
            "beq 0x4b6bc",
            "mov r0, r4",
            "mov r1, 9",
            "bl fcn.00045b3c",
            "cmp r0, r4",
            "mov r7, r0",
            "ldrne r4, [fp]",
            "ldrne r3, [sp, 0x38]",
            "ldrne r8, [sb]",
            "addne r4, r4, r3",
            "ldr r3, [0x0004b770]",
            "mov r2, 0",
            "asr r6, sl, 1",
            "sub r8, r8, 1",
            "ldr r3, [r3]",
            "add r5, r3, r5",
            "ldr r3, [sp, 0x3c]",
            "mov r0, r5",
            "and r1, r3, 0x80",
            "bl fcn.00045c60",
            "ldr r3, aav.0x00041938",
            "and ip, sl, 1",
            "cmp ip, r6",
            "ldr r2, aav.0x0004189c",
            "mov r1, r7",
            "str r6, [sp, 4]",
            "movne ip, r3",
            "ldr r3, [sp, 0x40]",
            "moveq ip, r2",
            "mov r0, r4",
            "mov r2, r8",
            "str r3, [sp]",
            "mov r3, r5",
            "blx ip",
            "subs r1, r0, 0",
            "beq 0x4b754",
            "cmp r6, 0",
            "beq 0x4b744",
            "rsb r5, r1, r5",
            "mov r0, r4",
            "mov r2, r5",
            "sub r5, r5, 1",
            "bl sym.imp.memmove",
            "add r1, r4, r5",
            "mov r3, 0",
            "strb r3, [r1]",
            "ldr r3, [0x0004b76c]",
            "str r1, [r3]",
            "mov r4, r1",
            "mov r0, r4",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0004227c": {
        "function_address": "0x0004227c",
        "instructions": [
            "ldr r3, [0x0004237c]",
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r4, r0",
            "ldr r2, [r3]",
            "cmp r2, 0",
            "popeq {r4, r5, r6, r7, r8, pc}",
            "ldr r5, [0x00042380]",
            "ldr r2, [r5, 8]",
            "cmp r2, r0",
            "bgt 0x422cc",
            "b 0x422fc",
            "ldr r3, [r6]",
            "add r3, r3, 1",
            "str r3, [r6]",
            "ldr r0, [r5]",
            "ldr r7, [r0]",
            "bl sym.imp.free",
            "str r7, [r5]",
            "bl fcn.00041f80",
            "b 0x422d0",
            "ldr r6, [0x00042384]",
            "ldr r1, [r5]",
            "ldr r3, [0x00042380]",
            "cmp r1, 0",
            "bne 0x422a8",
            "ldr r2, [r3, 4]",
            "cmp r2, r4",
            "ldr r2, [0x0004237c]",
            "strgt r1, [r2]",
            "strle r3, [r2]",
            "popgt {r4, r5, r6, r7, r8, pc}",
            "b 0x42374",
            "str r5, [r3]",
            "b 0x42308",
            "mov r5, r3",
            "ldr r3, [r5]",
            "cmp r3, 0",
            "beq 0x42320",
            "ldr r2, [r3, 4]",
            "cmp r2, r4",
            "blt 0x42304",
            "ldr r3, [0x0004237c]",
            "ldr r6, [0x0004237c]",
            "str r5, [r3]",
            "ldr r5, [0x00042384]",
            "b 0x42358",
            "ldr r3, [r5]",
            "add r3, r3, 1",
            "str r3, [r5]",
            "ldr r7, [r6]",
            "ldr r0, [r7]",
            "ldr r8, [r0]",
            "bl sym.imp.free",
            "str r8, [r7]",
            "bl fcn.00041f80",
            "ldr r3, [r6]",
            "ldr r2, [r3]",
            "cmp r2, 0",
            "bne 0x42334",
            "ldr r2, [r3, 8]",
            "cmp r2, r4",
            "pople {r4, r5, r6, r7, r8, pc}",
            "str r4, [r3, 8]",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.00044964": {
        "function_address": "0x00044964",
        "instructions": [
            "push {r0, r1, r2, lr}",
            "cmp r2, 0",
            "mov ip, r1",
            "beq 0x4499c",
            "ldrb r1, [r0]",
            "cmp r1, 0x83",
            "movne r3, r2",
            "ldrne r2, [0x000449bc]",
            "bne 0x449a4",
            "tst r3, 0x10",
            "ldr r2, str._or_null",
            "ldr r3, [0x000449bc]",
            "moveq r2, r3",
            "b 0x449a0",
            "ldr r2, [0x000449bc]",
            "ldr r3, str.parameter_not_set",
            "sub r1, r0, 1",
            "str r2, [sp]",
            "ldr r0, str._.s:__s_s",
            "rsb r1, ip, r1",
            "mov r2, ip",
            "bl fcn.0004349c",
            "andeq fp, r6, ip, lsl 3",
            "andeq r0, r6, sl, asr 13",
            "strheq r0, [r6], -r8",
            "ldrdeq r0, r1, [r6], -r3"
        ]
    },
    "fcn.00043868": {
        "function_address": "0x00043868",
        "instructions": [
            "ldr r2, [0x00043a18]",
            "ldr r3, [0x00043a1c]",
            "push {r4, r5, r6, lr}",
            "mov r5, r0",
            "ldr r6, [r2]",
            "movw r0, 0x402",
            "ldr r2, [0x00043a20]",
            "ldr r1, [r3]",
            "mov r4, r6",
            "ldr ip, [r2]",
            "mov r3, r1",
            "subs r3, r3, 1",
            "bpl 0x4396c",
            "mov r4, 0x1c",
            "mov r0, r6",
            "mul r4, r4, r1",
            "add r1, r4, 0x70",
            "bl fcn.000434b8",
            "subs r2, r0, r6",
            "addne r6, r6, r4",
            "addne r3, r0, r4",
            "movne r1, r4",
            "bne 0x438f4",
            "b 0x43910",
            "ldr ip, [r3, -0x10]",
            "sub r6, r6, 0x1c",
            "sub r1, r1, 0x1c",
            "cmp ip, r6",
            "addeq ip, r6, r2",
            "streq ip, [r3, -0x10]",
            "ldr ip, [r3, -4]",
            "cmp ip, 0",
            "addne ip, ip, r2",
            "strne ip, [r3, -4]",
            "sub r3, r3, 0x1c",
            "cmp r1, 0",
            "bne 0x438c8",
            "ldr r3, [0x00043a24]",
            "ldr r1, [r3]",
            "cmp r1, 0",
            "addne r2, r1, r2",
            "strne r2, [r3]",
            "ldr r3, [0x00043a1c]",
            "add r4, r0, r4",
            "ldr r2, [r3]",
            "add r2, r2, 4",
            "str r2, [r3]",
            "ldr r3, [0x00043a18]",
            "str r0, [r3]",
            "add r3, r4, 0x54",
            "ldrb r2, [r3, 0x17]",
            "bfc r2, 3, 1",
            "strb r2, [r3, 0x17]",
            "add r3, r4, 0x38",
            "ldrb r2, [r3, 0x17]",
            "bfc r2, 3, 1",
            "strb r2, [r3, 0x17]",
            "add r3, r4, 0x1c",
            "ldrb r2, [r3, 0x17]",
            "bfc r2, 3, 1",
            "strb r2, [r3, 0x17]",
            "ldrb r2, [r3, -5]",
            "bfc r2, 3, 1",
            "strb r2, [r3, -5]",
            "b 0x439b0",
            "ldrb r2, [r4, 0x17]",
            "and r2, r2, 8",
            "uxtb r2, r2",
            "cmp r2, 0",
            "beq 0x439b0",
            "ldrh lr, [r4, 0x16]",
            "movw r2, 0x4ff",
            "and r2, lr, r2",
            "cmp r2, r0",
            "bne 0x439a8",
            "cmp ip, 0",
            "bne 0x439a8",
            "mov r0, r4",
            "bl fcn.00042388",
            "b 0x439b0",
            "add r4, r4, 0x1c",
            "b 0x43894",
            "mov r2, 0x1c",
            "mov r0, r4",
            "mov r1, 0",
            "bl sym.imp.memset",
            "ldr r3, [0x00043a20]",
            "str r4, [r4, 0xc]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "ldrbne r3, [r4, 0x17]",
            "orrne r3, r3, 2",
            "strbne r3, [r4, 0x17]",
            "cmp r5, 1",
            "ldr r3, [0x00043a24]",
            "ldr r2, [r3]",
            "str r4, [r3]",
            "ldrb r3, [r4, 0x17]",
            "str r2, [r4, 0x18]",
            "orr r3, r3, 8",
            "strb r3, [r4, 0x17]",
            "ble 0x43a10",
            "mov r0, 0xc",
            "mul r0, r0, r5",
            "bl fcn.000434d4",
            "str r0, [r4, 0xc]",
            "mov r0, r4",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.000461c8": {
        "function_address": "0x000461c8",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r0",
            "mov r5, r1",
            "mov r7, r2",
            "bl sym.imp.fork",
            "subs r6, r0, 0",
            "bge 0x461fc",
            "cmp r4, 0",
            "beq 0x461f4",
            "mov r0, r4",
            "bl fcn.00042388",
            "ldr r0, str.cannot_fork",
            "bl fcn.0004349c",
            "bne 0x463ac",
            "ldr r3, [0x000464b4]",
            "ldr r8, [0x000464b8]",
            "ldr r5, [r3]",
            "add r2, r5, 1",
            "str r2, [r3]",
            "bl fcn.000425e8",
            "ldr r3, [r8]",
            "ldr r0, [r3, 8]",
            "cmp r0, 0",
            "ble 0x46234",
            "bl sym.imp.close",
            "ldr r3, [r8]",
            "str r6, [r3, 8]",
            "ldr r8, [0x000464bc]",
            "mov fp, 0",
            "ldr sb, [0x000464c0]",
            "add sl, r8, 4",
            "ldr r3, [r8, 4]!",
            "cmp r3, 0",
            "beq 0x4628c",
            "ldrb r3, [r3]",
            "cmp r3, 0",
            "beq 0x4628c",
            "ldr r3, [sb]",
            "add r3, r3, 1",
            "str r3, [sb]",
            "ldr r0, [r8]",
            "bl sym.imp.free",
            "cmp sl, r8",
            "str fp, [r8]",
            "beq 0x46288",
            "rsb r0, sl, r8",
            "asr r0, r0, 2",
            "bl fcn.00041b14",
            "bl fcn.00041f80",
            "ldr r3, [0x000464c4]",
            "cmp r8, r3",
            "bne 0x46244",
            "ldr r3, [0x000464c8]",
            "cmp r7, 2",
            "mov r2, 0",
            "str r2, [r3]",
            "beq 0x46360",
            "ldrb r2, [r4, 0x17]",
            "rsbs r3, r5, 1",
            "movlo r3, 0",
            "ands r3, r3, r2, lsr 1",
            "beq 0x46314",
            "ldrh r3, [r4, 0x14]",
            "cmp r3, 0",
            "ldrne r3, [r4, 0xc]",
            "ldrne r5, [r3]",
            "bne 0x462dc",
            "bl sym.imp.getpid",
            "mov r5, r0",
            "mov r0, 0",
            "mov r1, r5",
            "bl sym.imp.setpgid",
            "cmp r7, 0",
            "bne 0x46300",
            "ldr r3, [0x000464cc]",
            "mov r1, r5",
            "ldr r0, [r3]",
            "bl fcn.000449cc",
            "mov r0, 0x14",
            "bl fcn.00041b14",
            "mov r0, 0x16",
            "bl fcn.00041b14",
            "b 0x46368",
            "cmp r7, 1",
            "bne 0x46360",
            "mov r0, 2",
            "bl fcn.00041648",
            "mov r0, 3",
            "bl fcn.00041648",
            "ldrh r7, [r4, 0x14]",
            "cmp r7, 0",
            "bne 0x46360",
            "mov r0, r7",
            "bl sym.imp.close",
            "ldr r0, str._dev_null",
            "mov r1, r7",
            "bl sym.imp.open64",
            "cmp r0, 0",
            "beq 0x46360",
            "ldr r0, str.cant_open__s",
            "ldr r1, str._dev_null",
            "bl fcn.0004349c",
            "cmp r5, 0",
            "bne 0x46390",
            "ldr r3, [0x000464d8]",
            "ldrb r3, [r3, 3]",
            "cmp r3, 0",
            "beq 0x46390",
            "mov r0, 2",
            "bl fcn.00041b14",
            "mov r0, 3",
            "bl fcn.00041b14",
            "mov r0, 0xf",
            "bl fcn.00041b14",
            "cmp r4, 0",
            "beq 0x463a0",
            "mov r0, r4",
            "bl fcn.00042388",
            "mov r2, 0",
            "ldr r3, [0x000464dc]",
            "b 0x463e4",
            "cmp r4, 0",
            "bne 0x463ec",
            "ldr r4, [0x000464dc]",
            "ldr r3, [r4]",
            "cmp r3, 0",
            "beq 0x463d8",
            "mov r0, 0",
            "mov r1, r0",
            "bl fcn.000426f4",
            "cmp r0, 0",
            "bgt 0x463b8",
            "ldr r3, [0x000464dc]",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "b 0x464a8",
            "cmp r7, 2",
            "beq 0x46440",
            "ldrb r3, [r4, 0x17]",
            "and r3, r3, 2",
            "uxtb r3, r3",
            "cmp r3, 0",
            "beq 0x46424",
            "ldrh r3, [r4, 0x14]",
            "mov r0, r6",
            "cmp r3, 0",
            "ldrne r3, [r4, 0xc]",
            "moveq r1, r6",
            "ldrne r1, [r3]",
            "bl sym.imp.setpgid",
            "cmp r7, 1",
            "bne 0x46440",
            "ldr r3, [0x000464e0]",
            "mov r0, r4",
            "mov r1, r7",
            "str r6, [r3]",
            "bl fcn.000412c8",
            "ldrh r1, [r4, 0x14]",
            "mov r3, 0xc",
            "ldr r2, [r4, 0xc]",
            "mul r3, r3, r1",
            "add r1, r1, 1",
            "strh r1, [r4, 0x14]",
            "add r7, r2, r3",
            "str r6, [r2, r3]",
            "mvn r3, 0",
            "str r3, [r7, 4]",
            "ldr r3, [0x000464e4]",
            "str r3, [r7, 8]",
            "ldr r3, [0x000464c8]",
            "ldr r3, [r3]",
            "cmp r5, 0",
            "cmpne r3, 0",
            "beq 0x464a8",
            "ldr r4, [0x000464e8]",
            "mov r0, r5",
            "ldr r3, [0x000464ec]",
            "ldr r2, [r4]",
            "str r2, [r3]",
            "bl fcn.000457a8",
            "ldr r0, [r4]",
            "bl fcn.00043a28",
            "str r0, [r7, 8]",
            "mov r0, r6",
            "pop {r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00042a54": {
        "function_address": "0x00042a54",
        "instructions": [
            "push {r3, lr}",
            "mov r2, 0",
            "ldr r3, [0x00042a78]",
            "str r2, [r3]",
            "ldr r3, [0x00042a7c]",
            "ldr r3, [r3]",
            "cmp r3, r2",
            "popeq {r3, pc}",
            "bl fcn.00041ee0",
            "andeq fp, r6, r0, lsl 6",
            "andeq sl, r6, r8, lsl 26"
        ]
    },
    "fcn.000413b0": {
        "function_address": "0x000413b0",
        "instructions": [
            "mov r3, r0",
            "mov r0, 0",
            "b 0x413c0",
            "add r0, r0, 1",
            "cmp r3, r1",
            "bxhs lr",
            "ldrb r2, [r1, -1]!",
            "cmp r2, 0x81",
            "beq 0x413bc",
            "bx lr"
        ]
    },
    "fcn.00042a80": {
        "function_address": "0x00042a80",
        "instructions": [
            "cmp r0, 2",
            "cmpne r0, 0x14",
            "beq 0x42a90",
            "b sym.imp.strerror",
            "mov r0, r1",
            "bx lr"
        ]
    },
    "fcn.00046e2c": {
        "function_address": "0x00046e2c",
        "instructions": [
            "ldr r3, [0x00046f18]",
            "push {r4, r5, r6, lr}",
            "mov r6, r0",
            "mov r5, r1",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "mov r1, 0",
            "bl sym.imp.open64",
            "subs r4, r0, 0",
            "bge 0x46e6c",
            "tst r5, 2",
            "bne 0x46f0c",
            "ldr r0, str.cant_open__s",
            "mov r1, r6",
            "bl fcn.0004349c",
            "cmp r4, 9",
            "bgt 0x46e9c",
            "mov r1, 0xa",
            "bl fcn.00044cb4",
            "mov r6, r0",
            "mov r0, r4",
            "bl sym.imp.close",
            "cmp r6, 0",
            "bge 0x46e98",
            "ldr r0, str.out_of_file_descriptors",
            "bl fcn.0004349c",
            "mov r4, r6",
            "mov r0, r4",
            "mov r1, 2",
            "mov r2, 1",
            "bl sym.imp.fcntl64",
            "tst r5, 1",
            "beq 0x46ec8",
            "bl fcn.00043628",
            "ldr r3, [0x00046f24]",
            "mov r2, 0",
            "ldr r3, [r3]",
            "str r2, [r3, 0x18]",
            "ldr r3, [0x00046f24]",
            "ldr r5, [r3]",
            "ldr r3, [r5, 0x18]",
            "str r4, [r5, 8]",
            "cmp r3, 0",
            "bne 0x46eec",
            "movw r0, 0x1001",
            "bl fcn.000434d4",
            "str r0, [r5, 0x18]",
            "ldr r2, [0x00046f28]",
            "mov r3, 0",
            "str r3, [r2]",
            "ldr r2, [0x00046f2c]",
            "str r3, [r2]",
            "mov r2, 1",
            "ldr r3, [0x00046f30]",
            "str r2, [r3]",
            "bl fcn.00041f80",
            "mov r0, r4",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.0004c3d8": {
        "function_address": "0x0004c3d8",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x14",
            "ldr fp, [0x0004c4d8]",
            "mov sl, r0",
            "mov r4, 0",
            "mov r8, sp",
            "ldr sb, obj.stderr",
            "ldr r5, [0x0004c4e0]",
            "ldr r7, [0x0004c4e4]",
            "mov r0, sp",
            "bl fcn.00041134",
            "ldr r3, [fp]",
            "cmp r3, 0",
            "beq 0x4c41c",
            "ldr r0, [sb]",
            "mov r1, 8",
            "bl fcn.00043314",
            "ldrb r0, [r5, 3]",
            "cmp sl, 0",
            "cmpne r0, 0",
            "moveq r0, 0",
            "movne r0, 1",
            "bl fcn.00049d88",
            "ldr r3, [0x0004c4e8]",
            "cmp r3, r0",
            "bne 0x4c480",
            "rsbs r3, sl, 1",
            "movlo r3, 0",
            "cmp r4, 0x31",
            "orrgt r3, r3, 1",
            "cmp r3, 0",
            "bne 0x4c4cc",
            "bl fcn.00042694",
            "cmp r0, 0",
            "bne 0x4c478",
            "ldrb r0, [r5, 2]",
            "cmp r0, 0",
            "beq 0x4c4d0",
            "ldr r0, str._nUse__exit__to_leave_shell._n",
            "bl fcn.00042678",
            "add r4, r4, 1",
            "b 0x4c4a4",
            "ldrb r6, [r5, 5]",
            "cmp r6, 0",
            "bne 0x4c4a4",
            "ldr r3, [r7]",
            "mov r4, r6",
            "mov r1, r6",
            "asr r3, r3, 1",
            "str r3, [r7]",
            "bl fcn.00049e74",
            "mov r0, sp",
            "bl fcn.000428a0",
            "ldr r3, [0x0004c4f0]",
            "ldr r0, [r3]",
            "cmp r0, 0",
            "beq 0x4c3fc",
            "mov r2, 0",
            "and r0, r0, 0x10",
            "str r2, [r3]",
            "b 0x4c4d0",
            "mov r0, 0",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0004c4f4": {
        "function_address": "0x0004c4f4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r1",
            "sub sp, sp, 0x84",
            "mov r1, 0x2f",
            "mov r5, r0",
            "mov r6, r2",
            "str r3, [sp, 0x14]",
            "bl sym.imp.strchr",
            "cmp r0, 0",
            "beq 0x4c54c",
            "tst r6, 2",
            "mvn r7, 0",
            "str r7, [r4, 4]",
            "beq 0x4c544",
            "mov r0, r5",
            "add r1, sp, 0x18",
            "bl sym.imp.stat64",
            "cmp r0, 0",
            "strlt r7, [r4]",
            "blt 0x4c8c4",
            "mov r3, 0",
            "b 0x4c858",
            "ldr r3, [0x0004c8cc]",
            "ldr r0, [sp, 0x14]",
            "ldr r8, [r3, 0x18]",
            "add r8, r8, 5",
            "cmp r0, r8",
            "movne r8, 0",
            "moveq r8, 1",
            "cmp r8, 0",
            "bne 0x4c584",
            "ldr r1, str._builtin",
            "orr r6, r6, 8",
            "bl sym.imp.strstr",
            "cmp r0, 0",
            "orrne r6, r6, 0x20",
            "mov r0, r5",
            "mov r1, 0",
            "bl fcn.00043554",
            "subs r7, r0, 0",
            "beq 0x4c5dc",
            "ldrh r3, [r7, 8]",
            "sub r2, r3, 1",
            "uxth r2, r2",
            "cmp r2, 1",
            "subls r3, r3, 1",
            "ldrls r2, aav.0x0006050c",
            "sxthls r3, r3",
            "movhi r3, 8",
            "ldrls r3, [r2, r3, lsl 2]",
            "tst r3, r6",
            "bne 0x4c5d4",
            "ldrb r3, [r7, 0xa]",
            "cmp r3, 0",
            "beq 0x4c8ac",
            "b 0x4c5dc",
            "mov r8, 0",
            "mov r7, r8",
            "mov r0, r5",
            "bl fcn.00042dcc",
            "cmp r0, 0",
            "str r0, [sp, 0xc]",
            "beq 0x4c624",
            "ldr r3, [r0]",
            "ldrb r3, [r3]",
            "tst r3, 2",
            "bne 0x4c860",
            "tst r6, 8",
            "beq 0x4c614",
            "tst r6, 0x20",
            "beq 0x4c860",
            "b 0x4c624",
            "ldr r3, [0x0004c8d8]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "ble 0x4c860",
            "cmp r7, 0",
            "beq 0x4c654",
            "ldrb r3, [r7, 0xa]",
            "cmp r3, 0",
            "beq 0x4c660",
            "ldrsh r3, [r7, 8]",
            "cmp r3, 2",
            "ldreq r3, [0x0004c8d8]",
            "ldrne r2, [r7, 4]",
            "ldreq r3, [r3]",
            "bne 0x4c664",
            "b 0x4c658",
            "mvn r3, 0",
            "str r3, [sp, 4]",
            "b 0x4c668",
            "mvn r2, 0",
            "str r2, [sp, 4]",
            "mov r3, 2",
            "and r2, r6, 4",
            "str r3, [sp, 8]",
            "mvn sl, 0",
            "str r2, [sp, 0x10]",
            "b 0x4c804",
            "bl fcn.00041108",
            "ldr r3, [0x0004c8dc]",
            "add sl, sl, 1",
            "ldr fp, [r3]",
            "cmp fp, 0",
            "beq 0x4c6dc",
            "mov r0, fp",
            "ldr r1, [0x0004c8e0]",
            "bl fcn.0004117c",
            "cmp r0, 0",
            "beq 0x4c6bc",
            "ldr r2, [sp, 0xc]",
            "cmp r2, 0",
            "bne 0x4c860",
            "b 0x4c804",
            "ldr r3, [sp, 0x10]",
            "cmp r3, 0",
            "bne 0x4c804",
            "mov r0, fp",
            "ldr r1, str.func",
            "bl fcn.0004117c",
            "cmp r0, 0",
            "beq 0x4c804",
            "ldrb fp, [sb]",
            "ldr r2, [sp, 4]",
            "cmp sl, r2",
            "cmple fp, 0x2f",
            "movne fp, 0",
            "moveq fp, 1",
            "bne 0x4c728",
            "cmp sl, r2",
            "blt 0x4c804",
            "b 0x4c8ac",
            "ldr r2, [0x0004c8e8]",
            "ldr r3, [r2]",
            "ldr r2, [sp, 8]",
            "ldr r3, [r3]",
            "cmp r3, 0x14",
            "cmpne r3, 2",
            "movne r2, r3",
            "str r2, [sp, 8]",
            "b 0x4c804",
            "mov r0, sb",
            "add r1, sp, 0x18",
            "bl sym.imp.stat64",
            "cmp r0, 0",
            "blt 0x4c704",
            "ldr r3, [sp, 0x28]",
            "and r3, r3, 0xf000",
            "cmp r3, 0x8000",
            "bne 0x4c7fc",
            "ldr r3, [0x0004c8dc]",
            "ldr r6, [r3]",
            "cmp r6, 0",
            "beq 0x4c7c0",
            "mov r0, sb",
            "bl sym.imp.strlen",
            "add r0, r0, 1",
            "bl fcn.00044ee0",
            "mov r1, 1",
            "mov r0, sb",
            "bl fcn.00046e2c",
            "mov r0, fp",
            "bl fcn.0004c3d8",
            "bl fcn.00042534",
            "mov r0, r5",
            "mov r1, fp",
            "bl fcn.00043554",
            "subs r7, r0, 0",
            "beq 0x4c7a4",
            "ldrsh r3, [r7, 8]",
            "cmp r3, 1",
            "beq 0x4c7b4",
            "ldr r0, str._s_not_defined_in__s",
            "mov r1, r5",
            "mov r2, sb",
            "bl fcn.0004349c",
            "mov r0, sb",
            "bl fcn.00041108",
            "b 0x4c8ac",
            "cmp r8, 0",
            "streq r8, [r4]",
            "streq sl, [r4, 4]",
            "beq 0x4c8c4",
            "ldr r3, [0x0004c8f0]",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "mov r1, 1",
            "mov r0, r5",
            "bl fcn.00043554",
            "mov r7, r0",
            "strh r6, [r0, 8]",
            "str sl, [r0, 4]",
            "b 0x4c8a8",
            "mov r3, 0xd",
            "str r3, [sp, 8]",
            "add r0, sp, 0x14",
            "mov r1, r5",
            "bl fcn.000460bc",
            "subs sb, r0, 0",
            "bne 0x4c680",
            "cmp r7, 0",
            "moveq r7, 0",
            "andne r7, r8, 1",
            "cmp r7, 0",
            "beq 0x4c830",
            "bl fcn.00042978",
            "tst r6, 1",
            "beq 0x4c854",
            "ldr r1, aav.0x00060c98",
            "ldr r0, [sp, 8]",
            "bl fcn.00042a80",
            "mov r1, r5",
            "mov r2, r0",
            "ldr r0, [0x0004c8f8]",
            "bl fcn.00043458",
            "mvn r3, 0",
            "str r3, [r4]",
            "b 0x4c8c4",
            "cmp r8, 0",
            "ldreq r2, [sp, 0xc]",
            "moveq r3, 2",
            "streq r3, [r4]",
            "streq r2, [r4, 4]",
            "beq 0x4c8c4",
            "ldr r3, [0x0004c8f0]",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "mov r1, 1",
            "mov r0, r5",
            "bl fcn.00043554",
            "ldr r2, [sp, 0xc]",
            "mov r7, r0",
            "mov r3, 2",
            "strh r3, [r0, 8]",
            "str r2, [r0, 4]",
            "bl fcn.00041f80",
            "mov r3, 0",
            "strb r3, [r7, 0xa]",
            "ldrsh r3, [r7, 8]",
            "str r3, [r4]",
            "ldr r3, [r7, 4]",
            "str r3, [r4, 4]",
            "add sp, sp, 0x84",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00041108": {
        "function_address": "0x00041108",
        "instructions": [
            "ldr r3, [0x0004112c]",
            "ldr r2, [0x00041130]",
            "ldr r1, [r3]",
            "ldr ip, [r2]",
            "str r0, [r3]",
            "rsb r1, r0, r1",
            "add r1, r1, ip",
            "str r1, [r2]",
            "bx lr"
        ]
    },
    "fcn.0004117c": {
        "function_address": "0x0004117c",
        "instructions": [
            "b 0x41190",
            "ldrb ip, [r0]",
            "add r0, r3, 1",
            "cmp r2, ip",
            "bne 0x411a4",
            "ldrb r2, [r1], 1",
            "mov r3, r0",
            "cmp r2, 0",
            "bne 0x41180",
            "b 0x411a8",
            "mov r3, 0",
            "mov r0, r3",
            "bx lr"
        ]
    },
    "fcn.0004cc30": {
        "function_address": "0x0004cc30",
        "instructions": [
            "ldr r3, [0x0004cdec]",
            "push {r4, r5, r6, r7, r8, sl, lr}",
            "subs r5, r1, 0",
            "sub sp, sp, 0x14",
            "mov r4, r0",
            "ldr r3, [r3, 0x18]",
            "add r3, r3, 5",
            "str r3, [sp, 0xc]",
            "beq 0x4cc58",
            "bl fcn.00042638",
            "mov r0, r4",
            "bl fcn.00042da4",
            "subs r1, r0, 0",
            "beq 0x4cc78",
            "cmp r5, 0",
            "ldr r0, str._is_a_shell_keyword",
            "moveq r0, r4",
            "b 0x4cdac",
            "mov r0, r4",
            "bl fcn.00041a20",
            "subs r6, r0, 0",
            "beq 0x4ccb4",
            "cmp r5, 0",
            "bne 0x4cca8",
            "ldr r0, str.alias",
            "bl fcn.00042638",
            "mov r0, r6",
            "bl fcn.00045d30",
            "mov r0, r5",
            "b 0x4cde4",
            "ldr r0, str._is_an_alias_for__s",
            "ldr r1, [r6, 8]",
            "b 0x4cda0",
            "mov r1, r6",
            "mov r0, r4",
            "bl fcn.00043554",
            "subs r6, r0, 0",
            "ldrshne r3, [r6, 8]",
            "strne r3, [sp, 4]",
            "ldrne r3, [r6, 4]",
            "strne r3, [sp, 8]",
            "bne 0x4ccec",
            "mov r0, r4",
            "add r1, sp, 4",
            "mov r2, 2",
            "ldr r3, [sp, 0xc]",
            "bl fcn.0004c4f4",
            "ldr r3, [sp, 4]",
            "cmp r3, 1",
            "beq 0x4cd68",
            "cmp r3, 2",
            "beq 0x4cd78",
            "cmp r3, 0",
            "bne 0x4cdb4",
            "ldr r7, [sp, 8]",
            "cmn r7, 1",
            "moveq r8, r4",
            "beq 0x4cd38",
            "add sl, sp, 0xc",
            "mov r1, r4",
            "mov r0, sl",
            "bl fcn.000460bc",
            "mov r8, r0",
            "bl fcn.00041108",
            "subs r7, r7, 1",
            "bpl 0x4cd1c",
            "cmp r5, 0",
            "beq 0x4cd60",
            "ldr r3, str._a_tracked_alias_for",
            "cmp r6, 0",
            "ldr r1, [0x0004ce00]",
            "mov r2, r8",
            "ldr r0, str._is_s__s",
            "movne r1, r3",
            "bl fcn.00042df4",
            "b 0x4cdc8",
            "mov r0, r8",
            "b 0x4cdac",
            "cmp r5, 0",
            "ldrne r0, str._is_a_shell_function",
            "bne 0x4cdac",
            "b 0x4cda8",
            "cmp r5, 0",
            "beq 0x4cda8",
            "ldr r3, [sp, 8]",
            "ldr r1, [0x0004ce00]",
            "ldr r0, str._is_a__sshell_builtin",
            "ldr r3, [r3]",
            "ldrb r3, [r3]",
            "tst r3, 1",
            "ldr r3, str.special",
            "movne r1, r3",
            "bl fcn.00042df4",
            "b 0x4cdc8",
            "mov r0, r4",
            "bl fcn.00042638",
            "b 0x4cdc8",
            "cmp r5, 0",
            "beq 0x4cde0",
            "ldr r0, str.:_not_found_n",
            "bl fcn.00042638",
            "b 0x4cde0",
            "ldr r3, obj.stdout",
            "ldr r0, aav.0x0005c340",
            "ldr r1, [r3]",
            "bl fcn.00042614",
            "mov r0, 0",
            "b 0x4cde4",
            "mov r0, 0x7f",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "fcn.00042648": {
        "function_address": "0x00042648",
        "instructions": [
            "ldr r3, [0x00042670]",
            "push {r4, lr}",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "ldr r3, obj.stderr",
            "ldr r0, [r3]",
            "bl sym.imp.fflush",
            "pop {r4, lr}",
            "b fcn.00041f80"
        ]
    },
    "fcn.00043be0": {
        "function_address": "0x00043be0",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "subs r4, r0, 0",
            "mov r5, r1",
            "popeq {r4, r5, r6, pc}",
            "ldr r3, [0x00043c20]",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "ldr r0, [r4, 4]",
            "mov r1, r5",
            "bl fcn.00043ac8",
            "ldr r4, [r4]",
            "cmp r4, 0",
            "bne 0x43c00",
            "pop {r4, r5, r6, lr}",
            "b fcn.00041f80"
        ]
    },
    "fcn.0004812c": {
        "function_address": "0x0004812c",
        "instructions": [
            "push {r0, r1, r2, r7, fp, lr}",
            "mov r5, r0",
            "mov r0, 1",
            "str r1, [sp, 4]",
            "mov r6, r2",
            "bl fcn.00044db0",
            "mov r1, 0x20",
            "mov r2, 0",
            "mov r0, 1",
            "bl fcn.00045f4c",
            "ldr r4, [r5]",
            "mov r7, r0",
            "mov r1, 0x2f",
            "mov r0, r4",
            "bl sym.imp.strchr",
            "cmp r0, 0",
            "moveq r4, 2",
            "addeq fp, sp, 4",
            "ldreq sl, [0x00048230]",
            "ldreq r8, [0x00048234]",
            "beq 0x481dc",
            "mov r0, r4",
            "mov r1, r5",
            "mov r2, r7",
            "bl fcn.000437bc",
            "ldr r3, [0x00048234]",
            "ldr r3, [r3]",
            "ldr r4, [r3]",
            "b 0x481f0",
            "subs r6, r6, 1",
            "bpl 0x481d4",
            "ldr r3, [sl]",
            "cmp r3, 0",
            "bne 0x481d4",
            "mov r1, r5",
            "mov r2, r7",
            "bl fcn.000437bc",
            "ldr r3, [r8]",
            "ldr r3, [r3]",
            "cmp r3, 0x14",
            "cmpne r3, 2",
            "movne r4, r3",
            "mov r0, sb",
            "bl fcn.00041108",
            "mov r0, fp",
            "ldr r1, [r5]",
            "bl fcn.000460bc",
            "subs sb, r0, 0",
            "bne 0x481a0",
            "sub r3, r4, 2",
            "ldr r5, [r5]",
            "cmp r3, 0xb",
            "ldr r1, aav.0x00060c98",
            "ldrls r2, aav.0x000604dc",
            "movhi r3, 2",
            "mov r0, r4",
            "ldrls r3, [r2, r3, lsl 2]",
            "ldr r2, [0x00048240]",
            "str r3, [r2]",
            "bl fcn.00042a80",
            "ldr r1, [0x00048244]",
            "mov r3, r0",
            "mov r2, r5",
            "mov r0, 3",
            "bl fcn.00048114",
            "andeq fp, r6, r0, lsl r3",
            "andeq sl, r6, r8, asr 15",
            "muleq r6, r8, ip",
            "ldrdeq r0, r1, [r6], -ip",
            "strheq fp, [r6], -r8",
            "muleq r6, fp, fp",
            "cmp r0, 1",
            "push {r3, r4, r5, lr}",
            "mov r5, r1",
            "ble 0x48284",
            "ldr r3, [0x0004828c]",
            "mov r4, 0",
            "strb r4, [r3, 3]",
            "strb r4, [r3, 4]",
            "bl fcn.00044c1c",
            "ldr r3, [0x00048290]",
            "add r0, r5, 4",
            "mov r2, r4",
            "ldr r1, [r3, 0x18]",
            "add r1, r1, 5",
            "bl fcn.0004812c",
            "mov r0, 0",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.00042fcc": {
        "function_address": "0x00042fcc",
        "instructions": [
            "ldr r3, [0x000430a4]",
            "push {r4, r5, r6, r7, lr}",
            "sub sp, sp, 0x12c",
            "str r0, [sp, 8]",
            "add r0, sp, 0x10",
            "ldr r3, [r3]",
            "str r1, [sp, 0xc]",
            "str r2, [sp, 4]",
            "str r3, [sp, 0x124]",
            "bl sym.imp._setjmp",
            "subs r4, r0, 0",
            "bne 0x43050",
            "ldr r3, [0x000430a8]",
            "ldr r0, [sp, 0xc]",
            "ldr r2, [r3]",
            "str r2, [sp, 0x120]",
            "add r2, sp, 0x10",
            "str r2, [r3]",
            "ldr r3, [sp, 4]",
            "ldr r2, [0x000430a4]",
            "ldr r1, [r3], 4",
            "str r1, [r2]",
            "ldr r2, [0x000430ac]",
            "ldr r1, [sp, 4]",
            "str r3, [r2]",
            "ldr r3, [0x000430b0]",
            "ldr r2, [sp, 8]",
            "str r4, [r3]",
            "ldr r3, [r2]",
            "blx r3",
            "ldr r3, [0x000430b4]",
            "str r0, [r3]",
            "bl fcn.00042938",
            "ldr r6, [0x000430b4]",
            "ldr r5, obj.stdout",
            "ldr r7, [r6]",
            "ldr r0, [r5]",
            "bl sym.imp.ferror",
            "orr r0, r0, r7",
            "str r0, [r6]",
            "ldr r0, [r5]",
            "bl sym.imp.clearerr",
            "ldr r2, [sp, 0x124]",
            "mov r0, r4",
            "ldr r3, [0x000430a4]",
            "str r2, [r3]",
            "mov r2, 0",
            "ldr r3, [0x000430bc]",
            "str r2, [r3]",
            "ldr r2, [sp, 0x120]",
            "ldr r3, [0x000430a8]",
            "str r2, [r3]",
            "add sp, sp, 0x12c",
            "pop {r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.0004c0a0": {
        "function_address": "0x0004c0a0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x144",
            "ldr lr, [0x0004c2a8]",
            "add ip, sp, 0x124",
            "stm sp, {r0, r1, r2, r3}",
            "ldm lr!, {r0, r1, r2, r3}",
            "stm ip!, {r0, r1, r2, r3}",
            "add r0, sp, 0x10",
            "ldr r3, [lr]",
            "str r3, [ip]",
            "ldr r3, [0x0004c2ac]",
            "ldr r3, [r3]",
            "str r3, [sp, 0x13c]",
            "bl sym.imp._setjmp",
            "subs r4, r0, 0",
            "bne 0x4c174",
            "ldr r3, [0x0004c2b0]",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "ldr r3, [0x0004c2b4]",
            "ldr r5, [0x0004c2a8]",
            "ldr r2, [r3]",
            "strb r4, [r5, 4]",
            "str r2, [sp, 0x138]",
            "add r2, sp, 0x10",
            "str r2, [r3]",
            "ldr r2, [sp]",
            "ldr r3, [0x0004c2ac]",
            "mov r6, r2",
            "str r4, [r3]",
            "ldr r3, [r2]",
            "add r3, r3, 1",
            "str r3, [r6], 4",
            "ldr r3, [0x0004c2b8]",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "bl fcn.00041f80",
            "ldr r2, [sp, 4]",
            "mov r0, r6",
            "sub r3, r2, 1",
            "ldr r2, [sp, 8]",
            "str r3, [r5]",
            "add r3, r2, 4",
            "str r3, [r5, 8]",
            "mov r3, 1",
            "str r3, [r5, 0xc]",
            "mvn r3, 0",
            "str r3, [r5, 0x10]",
            "ldr r3, [sp, 0xc]",
            "and r1, r3, 2",
            "bl fcn.00049e74",
            "ldr r3, [0x0004c2b0]",
            "ldr r2, [r3]",
            "add r2, r2, 1",
            "str r2, [r3]",
            "ldr r3, [0x0004c2b8]",
            "mov sl, 0x3d",
            "ldr r0, [sp]",
            "mov r7, 0xe",
            "ldr r6, [0x0004c2ac]",
            "ldr r2, [r3]",
            "ldr r8, [0x0004c2bc]",
            "sub r2, r2, 1",
            "str r2, [r3]",
            "bl fcn.00041844",
            "b 0x4c248",
            "ldm r5, {r3, sb}",
            "cmp sb, 0",
            "str r3, [r6]",
            "bne 0x4c1e0",
            "ldr r1, [r5, 0xc]",
            "mov r2, r7",
            "mov r0, r8",
            "bl sym.imp.memcpy",
            "ldr r0, [r5, 0xc]",
            "bl sym.imp.free",
            "bl fcn.00044c1c",
            "b 0x4c240",
            "ldr r3, [r5, 8]",
            "and r3, r3, 0x24",
            "cmp r3, 0x20",
            "bne 0x4c1fc",
            "ldr r0, [sb, 8]",
            "bl fcn.000444f4",
            "b 0x4c240",
            "ldr fp, [sb, 0xc]",
            "cmp fp, 0",
            "beq 0x4c21c",
            "ldr r0, [r5, 0xc]",
            "mov r1, sl",
            "bl sym.imp.strchrnul",
            "add r0, r0, 1",
            "blx fp",
            "ldr r3, [sb, 4]",
            "tst r3, 0x18",
            "bne 0x4c230",
            "ldr r0, [sb, 8]",
            "bl sym.imp.free",
            "ldr r3, [r5, 8]",
            "str r3, [sb, 4]",
            "ldr r3, [r5, 0xc]",
            "str r3, [sb, 8]",
            "mov r0, r5",
            "bl sym.imp.free",
            "ldr r5, [r6]",
            "cmp r5, 0",
            "bne 0x4c1b0",
            "ldr r3, [sp, 0x13c]",
            "ldr r5, [0x0004c2a8]",
            "str r3, [r6]",
            "mov r0, r5",
            "bl fcn.00041864",
            "add ip, sp, 0x124",
            "ldm ip!, {r0, r1, r2, r3}",
            "stm r5!, {r0, r1, r2, r3}",
            "ldr r2, [ip]",
            "ldr r3, [0x0004c2b4]",
            "str r2, [r5]",
            "ldr r2, [sp, 0x138]",
            "str r2, [r3]",
            "bl fcn.00041f80",
            "ldr r3, [0x0004c2c0]",
            "mov r0, r4",
            "ldr r2, [r3]",
            "bic r2, r2, 4",
            "str r2, [r3]",
            "add sp, sp, 0x144",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0004c350": {
        "function_address": "0x0004c350",
        "instructions": [
            "ldr r3, [0x0004c3c8]",
            "str lr, [sp, -4]!",
            "sub sp, sp, 0x11c",
            "add r0, sp, 8",
            "ldr r3, [r3]",
            "str r3, [sp, 4]",
            "bl sym.imp._setjmp",
            "subs r1, r0, 0",
            "beq 0x4c390",
            "ldr r3, [0x0004c3cc]",
            "ldr r3, [r3]",
            "cmp r3, 4",
            "ldreq r3, [0x0004c3c8]",
            "ldreq r3, [r3]",
            "streq r3, [sp, 4]",
            "b 0x4c3b8",
            "ldr r3, [0x0004c3d0]",
            "add r2, sp, 8",
            "str r2, [r3]",
            "ldr r3, [0x0004c3d4]",
            "ldr r0, [r3]",
            "cmp r0, 0",
            "beq 0x4c3b4",
            "str r1, [r3]",
            "bl fcn.00049e00",
            "bl fcn.00042938",
            "mov r0, 0",
            "bl fcn.00044a78",
            "ldr r0, [sp, 4]",
            "bl sym.imp._exit"
        ]
    },
    "fcn.000445ac": {
        "function_address": "0x000445ac",
        "instructions": [
            "ldr r3, [0x00044648]",
            "push {r4, lr}",
            "sub sp, sp, 0x128",
            "str r0, [sp, 4]",
            "add r0, sp, 0x10",
            "ldr r3, [r3]",
            "str r1, [sp, 8]",
            "str r2, [sp, 0xc]",
            "str r3, [sp, 0x120]",
            "ldr r3, [0x0004464c]",
            "ldr r3, [r3]",
            "str r3, [sp, 0x124]",
            "bl sym.imp._setjmp",
            "subs r4, r0, 0",
            "movne r0, 1",
            "bne 0x44608",
            "ldr r3, [0x00044648]",
            "add r2, sp, 0x10",
            "ldmib sp, {r0, r1}",
            "str r2, [r3]",
            "ldr r2, [sp, 0xc]",
            "bl fcn.00043c24",
            "mov r0, r4",
            "ldr r2, [sp, 0x120]",
            "ldr r3, [0x00044648]",
            "str r2, [r3]",
            "ldr r3, [0x0004464c]",
            "ldr r2, [sp, 0x124]",
            "str r2, [r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "bne 0x44640",
            "ldr r3, [0x00044650]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x44640",
            "bl fcn.00041ee0",
            "add sp, sp, 0x128",
            "pop {r4, pc}"
        ]
    },
    "fcn.0005398c": {
        "function_address": "0x0005398c",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r0",
            "mov r0, 0x50",
            "bl fcn.00029eb4",
            "str r4, [r0]",
            "pop {r4, pc}"
        ]
    },
    "fcn.0004d658": {
        "function_address": "0x0004d658",
        "instructions": [
            "push {r4, lr}",
            "mov r1, 3",
            "bl fcn.00046e2c",
            "cmp r0, 0",
            "poplt {r4, pc}",
            "mov r0, 0",
            "bl fcn.0004c3d8",
            "mov r4, r0",
            "bl fcn.00042534",
            "cmp r4, 0",
            "popeq {r4, pc}",
            "bl fcn.0004c350"
        ]
    },
    "fcn.0004e128": {
        "function_address": "0x0004e128",
        "instructions": [
            "push {r3, lr}",
            "mov r4, r0",
            "ldr r3, [0x0004e144]",
            "ldr r0, [r3]",
            "bl sym.imp.shmdt",
            "mov r0, r4",
            "bl fcn.00028900"
        ]
    },
    "sym.imp.shmdt": {
        "function_address": "0x0000bee8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x6dc]!"
        ]
    },
    "fcn.0004e148": {
        "function_address": "0x0004e148",
        "instructions": [
            "push {r3, lr}",
            "mov r2, 1",
            "ldr r1, [0x0004e168]",
            "bl sym.imp.semop",
            "cmn r0, 1",
            "popne {r3, pc}",
            "ldr r0, str.semop_SMrup_",
            "bl fcn.0004e128"
        ]
    },
    "sym.imp.semop": {
        "function_address": "0x0000c1f4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x4d4]!"
        ]
    },
    "fcn.0005191c": {
        "function_address": "0x0005191c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r8, r0",
            "mov r4, r1",
            "orr r6, r1, 0x800",
            "mov r5, 5",
            "mov r0, r8",
            "mov r1, r6",
            "mov r2, 0x180",
            "bl sym.imp.open64",
            "subs r7, r0, 0",
            "blt 0x51954",
            "cmp r6, r4",
            "bne 0x51960",
            "b 0x5196c",
            "subs r5, r5, 1",
            "bne 0x51930",
            "b 0x5196c",
            "mov r1, 4",
            "mov r2, r4",
            "bl sym.imp.fcntl64",
            "mov r0, r7",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.0004e3b0": {
        "function_address": "0x0004e3b0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "add fp, sp, 0x20",
            "sub sp, sp, 0x9c",
            "mov r5, r0",
            "bl sym.imp.strlen",
            "ldr r3, [0x0004e6b8]",
            "mov r8, r0",
            "ldr r3, [r3]",
            "tst r3, 0x200",
            "beq 0x4e48c",
            "ldr r3, [0x0004e6bc]",
            "ldr r4, [r3]",
            "ldr r3, [r4, 0x48]",
            "cmp r3, 0",
            "beq 0x4e48c",
            "ldr r0, [r4, 0x28]",
            "add r1, r4, 0x36",
            "mov r2, 3",
            "bl sym.imp.semop",
            "cmn r0, 1",
            "ldreq r0, str.SMwdn",
            "beq 0x4e488",
            "add r8, r8, 1",
            "mov r7, 0",
            "ldr r0, [r4, 0x48]",
            "ldr r3, [r0, 4]",
            "ldr r6, [r0], 8",
            "add sl, r8, r3",
            "cmp sl, r6",
            "bge 0x4e45c",
            "add r0, r0, r3",
            "mov r1, r5",
            "mov r2, r8",
            "bl sym.imp.memcpy",
            "ldr r3, [r4, 0x48]",
            "add r1, r4, 0x30",
            "ldr r0, [r4, 0x28]",
            "mov r2, 1",
            "str sl, [r3, 4]",
            "bl sym.imp.semop",
            "cmn r0, 1",
            "beq 0x4e484",
            "b 0x4e6b0",
            "rsb r6, r3, r6",
            "add r0, r0, r3",
            "mov r1, r5",
            "mov r2, r6",
            "bl sym.imp.memcpy",
            "ldr r3, [r4, 0x48]",
            "add r5, r5, r6",
            "rsb r8, r6, r8",
            "str r7, [r3, 4]",
            "b 0x4e410",
            "ldr r0, str.SMwup",
            "bl fcn.00028900",
            "ldr r3, [0x0004e6bc]",
            "ldr r4, [r3]",
            "ldr r3, [r4, 4]",
            "cmp r3, 0",
            "blt 0x4e4c4",
            "sub r0, fp, 0x28",
            "bl sym.imp.time",
            "ldr r3, [fp, -0x28]",
            "ldr r2, [r4, 0x4c]",
            "cmp r2, r3",
            "beq 0x4e554",
            "str r3, [r4, 0x4c]",
            "ldr r0, [r4, 4]",
            "bl sym.imp.close",
            "ldr r3, [0x0004e6bc]",
            "movw r1, 0xd41",
            "ldr r4, [r3]",
            "ldr r0, [r4]",
            "bl fcn.0005191c",
            "cmp r0, 0",
            "str r0, [r4, 4]",
            "bge 0x4e520",
            "movw r1, 0x901",
            "ldr r0, str._dev_console",
            "bl fcn.0005191c",
            "cmp r0, 0",
            "mov r1, r5",
            "movge r4, r0",
            "movlt r4, 2",
            "mov r0, r4",
            "mov r2, r8",
            "bl fcn.000274f4",
            "cmp r4, 2",
            "beq 0x4e6b0",
            "mov r0, r4",
            "bl sym.imp.close",
            "b 0x4e6b0",
            "sub r1, fp, 0xb4",
            "bl sym.imp.fstat64",
            "cmp r0, 0",
            "movne r3, 0",
            "bne 0x4e548",
            "ldr r3, [fp, -0xa4]",
            "and r3, r3, 0xf000",
            "cmp r3, 0x8000",
            "movne r3, 0",
            "moveq r3, 1",
            "str r3, [r4, 0x18]",
            "ldr r3, [fp, -0x84]",
            "str r3, [r4, 0x14]",
            "mov r3, 0",
            "mov r2, 1",
            "strh r3, [fp, -0x4a]",
            "mov r3, 0",
            "strd r2, r3, [fp, -0x3c]",
            "sub r2, fp, 0x24",
            "mov r3, 1",
            "mov r6, 0",
            "strh r3, [r2, -0x28]!",
            "mov r7, 0",
            "ldr r3, [0x0004e6bc]",
            "mov r1, 0xe",
            "strd r6, r7, [fp, -0x44]",
            "ldr r4, [r3]",
            "ldr r0, [r4, 4]",
            "bl sym.imp.fcntl64",
            "ldr r3, [r4, 0xc]",
            "cmp r3, 0",
            "beq 0x4e67c",
            "ldr r2, [r4, 0x18]",
            "cmp r2, 0",
            "beq 0x4e67c",
            "ldr r2, [r4, 0x14]",
            "cmp r2, r3",
            "bls 0x4e67c",
            "ldr r3, [r4, 0x10]",
            "cmp r3, 0",
            "beq 0x4e66c",
            "ldr r0, [r4]",
            "mov sb, sp",
            "str r3, [fp, -0xb8]",
            "bl sym.imp.strlen",
            "add r0, r0, 0x12",
            "ldr r3, [fp, -0xb8]",
            "bic r0, r0, 7",
            "sub sp, sp, r0",
            "mov sl, sp",
            "sub sp, sp, r0",
            "mov r7, sp",
            "sub r6, r3, 1",
            "mov r0, r7",
            "ldr r1, str._s._d",
            "ldr r2, [r4]",
            "mov r3, r6",
            "bl sym.imp.sprintf",
            "cmp r6, 0",
            "beq 0x4e638",
            "sub r6, r6, 1",
            "mov r0, sl",
            "ldr r1, str._s._d",
            "mov r3, r6",
            "ldr r2, [r4]",
            "bl sym.imp.sprintf",
            "mov r0, sl",
            "mov r1, r7",
            "bl sym.imp.rename",
            "b 0x4e5f4",
            "mov r1, r7",
            "ldr r0, [r4]",
            "bl sym.imp.rename",
            "sub r2, fp, 0x24",
            "mov r3, 2",
            "strh r3, [r2, -0x28]!",
            "mov r1, 0xe",
            "ldr r0, [r4, 4]",
            "bl sym.imp.fcntl64",
            "ldr r0, [r4, 4]",
            "bl sym.imp.close",
            "mov sp, sb",
            "b 0x4e4c4",
            "ldr r0, [r4, 4]",
            "mov r2, r6",
            "mov r3, r7",
            "bl sym.imp.ftruncate64",
            "ldr r6, [r4, 0x14]",
            "mov r1, r5",
            "mov r2, r8",
            "ldr r0, [r4, 4]",
            "bl fcn.000274f4",
            "sub r2, fp, 0x24",
            "add r0, r0, r6",
            "mov r3, 2",
            "str r0, [r4, 0x14]",
            "strh r3, [r2, -0x28]!",
            "mov r1, 0xe",
            "ldr r0, [r4, 4]",
            "bl sym.imp.fcntl64",
            "sub sp, fp, 0x20",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.imp.ftruncate64": {
        "function_address": "0x0000c3e0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x38c]!"
        ]
    },
    "fcn.0004e6d0": {
        "function_address": "0x0004e6d0",
        "instructions": [
            "cmp r2, 0xf",
            "push {r4, r5, r6, r7, lr}",
            "mov r7, r0",
            "sub sp, sp, 0x24",
            "mov r4, r1",
            "ble 0x4e72c",
            "ldrb r3, [r1, 3]",
            "cmp r3, 0x20",
            "bne 0x4e72c",
            "ldrb r3, [r1, 6]",
            "cmp r3, 0x20",
            "bne 0x4e72c",
            "ldrb r3, [r1, 9]",
            "cmp r3, 0x3a",
            "bne 0x4e72c",
            "ldrb r3, [r1, 0xc]",
            "cmp r3, 0x3a",
            "bne 0x4e72c",
            "ldrb r3, [r1, 0xf]",
            "cmp r3, 0x20",
            "moveq r6, r1",
            "addeq r4, r1, 0x10",
            "beq 0x4e744",
            "add r5, sp, 0x1c",
            "mov r0, r5",
            "bl sym.imp.time",
            "mov r0, r5",
            "bl sym.imp.ctime",
            "add r6, r0, 4",
            "mov r3, 0",
            "strb r3, [r6, 0xf]",
            "ldr r3, [0x0004e858]",
            "ldr r3, [r3]",
            "tst r3, 0x100",
            "beq 0x4e850",
            "ldr r1, [0x0004e85c]",
            "and r2, r7, 7",
            "ldr r5, [r1]",
            "ldr r1, [r5, 8]",
            "cmp r2, r1",
            "bge 0x4e850",
            "tst r3, 0x10",
            "beq 0x4e794",
            "add r0, r5, 0x390",
            "ldr r1, [0x0004e860]",
            "mov r2, r6",
            "mov r3, r4",
            "bl sym.imp.sprintf",
            "b 0x4e840",
            "cmp r7, 0",
            "bne 0x4e7f4",
            "b 0x4e820",
            "ldr ip, [ip, -4]",
            "add r1, r1, 8",
            "cmp ip, r0",
            "bne 0x4e7fc",
            "ldr r1, aav.0x00061460",
            "b 0x4e7e0",
            "ldr ip, [ip, -4]",
            "add r1, r1, 8",
            "cmp ip, r2",
            "bne 0x4e7e0",
            "str r0, [sp]",
            "mov r1, 0x14",
            "add r0, sp, 8",
            "ldr r2, str._s._s",
            "bl sym.imp.snprintf",
            "b 0x4e820",
            "ldr r0, [r1, -8]",
            "mov ip, r1",
            "cmp r0, 0",
            "bne 0x4e7b8",
            "b 0x4e80c",
            "ldr r1, aav.0x0006165c",
            "and r0, r7, 0x3f8",
            "ldr r3, [r1, -8]",
            "mov ip, r1",
            "cmp r3, 0",
            "bne 0x4e7a0",
            "add r0, sp, 8",
            "mov r1, 0x14",
            "ldr r2, str.__d_",
            "mov r3, r7",
            "bl sym.imp.snprintf",
            "add r3, sp, 8",
            "add r0, r5, 0x390",
            "str r3, [sp]",
            "mov r2, r6",
            "ldr r1, str._s__s__s__s_n",
            "add r3, r5, 0x50",
            "str r4, [sp, 4]",
            "bl sym.imp.sprintf",
            "ldr r3, [0x0004e85c]",
            "ldr r0, [r3]",
            "add r0, r0, 0x390",
            "bl fcn.0004e3b0",
            "add sp, sp, 0x24",
            "pop {r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.0004e878": {
        "function_address": "0x0004e878",
        "instructions": [
            "push {r7, fp, lr}",
            "mov r0, 2",
            "sub sp, sp, 0x104",
            "ldr r1, aav.0x0004ece4",
            "bl sym.imp.signal",
            "ldr r1, aav.0x0004ece4",
            "mov r0, 0xf",
            "bl sym.imp.signal",
            "ldr r1, aav.0x0004ece4",
            "mov r0, 3",
            "bl sym.imp.signal",
            "mov r0, 1",
            "mov r1, r0",
            "bl sym.imp.signal",
            "mov r1, 1",
            "mov r0, 0x11",
            "bl sym.imp.signal",
            "mov r0, 0x11",
            "mov r1, 1",
            "bl sym.imp.signal",
            "ldr r3, [0x0004eca0]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x4e8e0",
            "ldr r0, str._var_run_syslogd.pid",
            "bl sym.imp.unlink",
            "add r4, sp, 0x8c",
            "mov r2, 0x6e",
            "mov r0, r4",
            "mov r1, 0",
            "add r5, r4, 2",
            "ldr r4, [0x0004eca8]",
            "bl sym.imp.memset",
            "mov r6, 1",
            "ldr r1, [0x0004ecac]",
            "mov r0, r5",
            "strh r6, [sp, 0x8c]",
            "bl sym.imp.strcpy",
            "mov r3, 0",
            "ldr r0, [0x0004ecac]",
            "str r3, [r4]",
            "bl fcn.0002a6d8"
        ]
    },
    "fcn.0004f4c8": {
        "function_address": "0x0004f4c8",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r0",
            "ldr sl, aav.0x00061c40",
            "mov r7, r1",
            "mov r6, 0x8000",
            "mov sb, 0x2c",
            "mov r0, r4",
            "mov r1, 0x2c",
            "bl sym.imp.strchr",
            "mov r5, 0",
            "subs r8, r0, 0",
            "movne r3, 0",
            "strbne r3, [r8]",
            "ldr r0, [sl, r5, lsl 3]",
            "mov r1, r4",
            "bl sym.imp.strcasecmp",
            "cmp r0, 0",
            "lsl fp, r5, 3",
            "bne 0x4f530",
            "ldr r3, aav.0x00061c40",
            "add fp, r3, fp",
            "ldr r3, [fp, 4]",
            "cmp r3, 0",
            "andlt r6, r6, r3",
            "orrge r6, r6, r3",
            "b 0x4f53c",
            "add r5, r5, 1",
            "cmp r5, 0x1f",
            "bne 0x4f4fc",
            "cmp r5, 0x1f",
            "movne r5, 0",
            "moveq r5, 1",
            "cmp r7, 0",
            "moveq r5, 0",
            "cmp r5, 0",
            "beq 0x4f5ac",
            "ldr fp, [r7]",
            "cmp fp, 0",
            "moveq r5, fp",
            "beq 0x4f574",
            "mov r0, fp",
            "bl sym.imp.strlen",
            "mov r5, r0",
            "mov r0, r4",
            "bl sym.imp.strlen",
            "add r1, r0, 2",
            "mov r0, fp",
            "add r1, r1, r5",
            "bl fcn.00029e84",
            "cmp r8, 0",
            "movne r4, r8",
            "strbne sb, [r4], 1",
            "bne 0x4f4e0",
            "mov r0, r6",
            "pop {r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0004f624": {
        "function_address": "0x0004f624",
        "instructions": [
            "push {r0, r1, r2, r4, r5, r6, r7, lr}",
            "mov r5, r0",
            "ldr r6, [0x0004f6a8]",
            "mov r4, r1",
            "mov r7, r2",
            "ldr r0, [r5]",
            "mov r3, r4",
            "ldmib r5, {r1, r2}",
            "str r7, [sp]",
            "bl sym.imp.mount",
            "cmp r0, 0",
            "beq 0x4f68c",
            "tst r4, 1",
            "bne 0x4f690",
            "ldr r3, [r6]",
            "ldr r3, [r3]",
            "cmp r3, 0x1e",
            "cmpne r3, 0xd",
            "bne 0x4f690",
            "ldr r0, str._s_is_write_protected__mounting_read_only",
            "orr r4, r4, 1",
            "ldr r1, [r5]",
            "bl fcn.00027184",
            "b 0x4f638",
            "ldr r0, str.permission_denied.__are_you_root__",
            "bl fcn.000271d8",
            "pop {r1, r2, r3, r4, r5, r6, r7, pc}",
            "ldr r3, [0x0004f6a8]",
            "ldr r3, [r3]",
            "ldr r3, [r3]",
            "cmp r3, 1",
            "beq 0x4f684",
            "b 0x4f68c"
        ]
    },
    "sym.imp.mount": {
        "function_address": "0x0000c2a8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x45c]!"
        ]
    },
    "fcn.00051a74": {
        "function_address": "0x00051a74",
        "instructions": [
            "push {r0, r1, r2, r3}",
            "push {r0, r1, r2, lr}",
            "add r3, sp, 0x14",
            "str r3, [sp, 4]",
            "bl sym.imp.__h_errno_location",
            "ldr r0, [r0]",
            "bl sym.imp.hstrerror",
            "ldr r1, [sp, 4]",
            "mov r2, r0",
            "ldr r0, [sp, 0x10]",
            "bl fcn.00029614",
            "pop {r1, r2, r3, lr}",
            "add sp, sp, 0x10",
            "bx lr"
        ]
    },
    "fcn.0004f5c8": {
        "function_address": "0x0004f5c8",
        "instructions": [
            "push {r4, lr}",
            "ldrb r3, [r0]",
            "mov r4, r0",
            "add r0, r0, 1",
            "cmp r3, 0x20",
            "cmpne r3, 0x3a",
            "beq 0x4f5cc",
            "mov r0, r4",
            "bl sym.imp.strlen",
            "mov r1, r0",
            "add r3, r4, r0",
            "b 0x4f5fc",
            "sub r1, r1, 1",
            "cmp r1, 0",
            "beq 0x4f610",
            "ldrb r2, [r3, -1]!",
            "cmp r2, 0xa",
            "beq 0x4f5f8",
            "ldr r0, aav.0x00061928",
            "mov r2, r4",
            "pop {r4, lr}",
            "b fcn.00027184"
        ]
    },
    "fcn.0004f718": {
        "function_address": "0x0004f718",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "bl sym.imp.fork",
            "subs r5, r0, 0",
            "bge 0x4f73c",
            "ldr r3, [0x0004f7c0]",
            "ldr r3, [r3]",
            "ldr r0, [r3]",
            "rsb r0, r0, 0",
            "pop {r3, r4, r5, pc}",
            "bne 0x4f7b8",
            "mov r1, 2",
            "ldr r0, str._dev_null",
            "bl fcn.00029f9c",
            "mov r1, r5",
            "mov r4, r0",
            "bl sym.imp.dup2",
            "mov r0, r4",
            "mov r1, 1",
            "bl sym.imp.dup2",
            "mov r0, r4",
            "mov r1, 2",
            "bl sym.imp.dup2",
            "b 0x4f784",
            "sub r5, r4, 1",
            "mov r0, r4",
            "mov r4, r5",
            "bl sym.imp.close",
            "cmp r4, 2",
            "bgt 0x4f774",
            "bl sym.imp.setsid",
            "ldr r3, [0x0004f7c8]",
            "mov r2, 0x18",
            "mov r1, 1",
            "ldr r0, [r3]",
            "bl sym.imp.openlog",
            "ldr r3, [0x0004f7cc]",
            "mov r2, 2",
            "mov r0, 1",
            "str r2, [r3]",
            "pop {r3, r4, r5, pc}",
            "mov r0, 0",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.imp.openlog": {
        "function_address": "0x0000b948",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xa9c]!"
        ]
    },
    "fcn.0004f6b4": {
        "function_address": "0x0004f6b4",
        "instructions": [
            "push {r4, lr}",
            "mov r2, r0",
            "mov r3, 0",
            "ldr ip, aav.0x000617c0",
            "b 0x4f6e8",
            "cmp r1, r2",
            "bne 0x4f6e4",
            "ldr r3, aav.0x000617c0",
            "add r3, r3, r0",
            "ldr r0, [r3, 4]",
            "pop {r4, lr}",
            "b sym.imp.strerror",
            "add r3, r3, 1",
            "ldr r1, [ip, r3, lsl 3]",
            "lsl r0, r3, 3",
            "cmn r1, 1",
            "bne 0x4f6c8",
            "ldr r1, str.unknown_nfs_status_return_value:__d",
            "ldr r0, [0x0004f714]",
            "bl sym.imp.sprintf",
            "ldr r0, [0x0004f714]",
            "pop {r4, pc}"
        ]
    },
    "fcn.00054444": {
        "function_address": "0x00054444",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r5, r0",
            "ldrb r3, [r0]",
            "cmp r3, 0x2f",
            "bne 0x54464",
            "bl fcn.00029ed8",
            "mov r5, r0",
            "b 0x54484",
            "mov r0, 0",
            "bl fcn.0002a5ec",
            "mov r1, r5",
            "mov r4, r0",
            "bl fcn.00026868",
            "mov r5, r0",
            "mov r0, r4",
            "bl sym.imp.free",
            "mov r3, r5",
            "mov r2, r5",
            "ldrb r1, [r3]",
            "cmp r1, 0x2f",
            "bne 0x544fc",
            "ldrb r1, [r2]",
            "cmp r1, 0x2f",
            "beq 0x5450c",
            "cmp r1, 0x2e",
            "bne 0x544fc",
            "ldrb r1, [r2, 1]",
            "add r0, r2, 1",
            "cmp r1, 0x2f",
            "cmpne r1, 0",
            "beq 0x5450c",
            "cmp r1, 0x2e",
            "bne 0x544fc",
            "ldrb r1, [r2, 2]",
            "cmp r1, 0x2f",
            "cmpne r1, 0",
            "bne 0x544fc",
            "cmp r3, r5",
            "bls 0x54508",
            "sub r2, r3, 1",
            "ldrb r1, [r2]",
            "mov r3, r2",
            "sub r2, r2, 1",
            "cmp r1, 0x2f",
            "bne 0x544e4",
            "b 0x54508",
            "ldrb r1, [r2]",
            "strb r1, [r3, 1]!",
            "b 0x5450c",
            "mov r2, r0",
            "ldrb r1, [r2, 1]!",
            "cmp r1, 0",
            "bne 0x5448c",
            "cmp r3, r5",
            "beq 0x5452c",
            "ldrb r2, [r3]",
            "cmp r2, 0x2f",
            "beq 0x54530",
            "add r3, r3, 1",
            "mov r2, 0",
            "mov r0, r5",
            "strb r2, [r3]",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.00053bc4": {
        "function_address": "0x00053bc4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r0",
            "sub sp, sp, 0x17c",
            "mov r0, r1",
            "mov sb, r1",
            "mov r1, 2",
            "str r2, [sp, 8]",
            "str r3, [sp, 0xc]",
            "bl sym.imp.open64",
            "cmp r0, 0",
            "str r0, [sp]",
            "bge 0x53c20",
            "mov r0, sb",
            "mov r1, 0",
            "bl sym.imp.open64",
            "cmp r0, 0",
            "str r0, [sp]",
            "bge 0x53c28",
            "ldr r3, [0x00053e10]",
            "ldr r3, [r3]",
            "ldr r5, [r3]",
            "rsb r5, r5, 0",
            "b 0x53e04",
            "mov r7, 2",
            "b 0x53c2c",
            "mov r7, 0",
            "ldr r8, [r4]",
            "mvn r5, 0",
            "ldr sl, [0x00053e10]",
            "mov r6, r4",
            "mov r2, 0",
            "cmp r8, 0",
            "str r2, [sp, 4]",
            "addeq r8, sp, 0x160",
            "ldr r1, str._dev_loop_d",
            "add r0, sp, 0x160",
            "ldr r2, [sp, 4]",
            "bl sym.imp.sprintf",
            "mov r0, r8",
            "add r1, sp, 0xf8",
            "bl sym.imp.stat64",
            "subs fp, r0, 0",
            "bne 0x53dc4",
            "ldr r3, [sp, 0x108]",
            "and r3, r3, 0xf000",
            "cmp r3, 0x6000",
            "bne 0x53dc4",
            "mov r0, r8",
            "mov r1, r7",
            "bl sym.imp.open64",
            "subs r4, r0, 0",
            "bge 0x53cc0",
            "ldr r3, [sl]",
            "ldr r3, [r3]",
            "cmp r3, 0x1e",
            "bne 0x53da0",
            "mov r0, r8",
            "mov r1, fp",
            "bl sym.imp.open64",
            "subs r4, r0, 0",
            "movlt r7, fp",
            "blt 0x53da0",
            "mov r7, fp",
            "mov r0, r4",
            "movw r1, 0x4c05",
            "add r2, sp, 0x10",
            "bl sym.imp.ioctl",
            "subs r5, r0, 0",
            "beq 0x53d60",
            "ldr r3, [sl]",
            "ldr r3, [r3]",
            "cmp r3, 6",
            "bne 0x53d60",
            "mov r1, 0",
            "mov r2, 0xe8",
            "add r0, sp, 0x10",
            "bl sym.imp.memset",
            "mov r1, sb",
            "mov r2, 0x40",
            "add r0, sp, 0x48",
            "bl fcn.00029568",
            "ldr r2, [sp, 0xc]",
            "mov r0, r4",
            "ldr r3, [sp, 8]",
            "mov r1, 0x4c00",
            "str r2, [sp, 0x2c]",
            "ldr r2, [sp]",
            "str r3, [sp, 0x28]",
            "bl sym.imp.ioctl",
            "subs fp, r0, 0",
            "bne 0x53d98",
            "mov r0, r4",
            "movw r1, 0x4c04",
            "add r2, sp, 0x10",
            "bl sym.imp.ioctl",
            "cmp r0, 0",
            "moveq r5, r0",
            "beq 0x53d98",
            "mov r0, r4",
            "movw r1, 0x4c01",
            "mov r2, fp",
            "bl sym.imp.ioctl",
            "b 0x53d98",
            "mov r0, sb",
            "add r1, sp, 0x48",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x53d94",
            "ldr r3, [sp, 0x28]",
            "ldr r2, [sp, 8]",
            "cmp r3, r2",
            "bne 0x53d94",
            "ldr r3, [sp, 0x2c]",
            "ldr r2, [sp, 0xc]",
            "cmp r3, r2",
            "beq 0x53d98",
            "mvn r5, 0",
            "mov r0, r4",
            "bl sym.imp.close",
            "ldr r3, [r6]",
            "cmp r3, 0",
            "bne 0x53dd0",
            "cmp r5, 0",
            "beq 0x53dd0",
            "ldr r3, [sp, 4]",
            "add r3, r3, 1",
            "str r3, [sp, 4]",
            "b 0x53c4c",
            "mov r4, r6",
            "mvn r5, 1",
            "b 0x53dd4",
            "mov r4, r6",
            "ldr r0, [sp]",
            "bl sym.imp.close",
            "cmp r5, 0",
            "bne 0x53e04",
            "ldr r3, [r4]",
            "cmp r3, 0",
            "bne 0x53dfc",
            "add r0, sp, 0x160",
            "bl fcn.00029ed8",
            "str r0, [r4]",
            "rsbs r5, r7, 1",
            "movlo r5, 0",
            "mov r0, r5",
            "add sp, sp, 0x17c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00053b8c": {
        "function_address": "0x00053b8c",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r1, 0",
            "bl sym.imp.open64",
            "subs r4, r0, 0",
            "movlt r5, 1",
            "blt 0x53bbc",
            "movw r1, 0x4c01",
            "mov r2, 0",
            "bl sym.imp.ioctl",
            "mov r5, r0",
            "mov r0, r4",
            "bl sym.imp.close",
            "mov r0, r5",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.0004f3dc": {
        "function_address": "0x0004f3dc",
        "instructions": [
            "ldr r3, [r0]",
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r5, r0",
            "mov r4, r1",
            "cmp r3, 0",
            "beq 0x4f4b4",
            "ldrb r3, [r3]",
            "cmp r3, 0",
            "bne 0x4f4a4",
            "b 0x4f4b4",
            "mov r0, r4",
            "bl sym.imp.strlen",
            "mov r1, 0x2c",
            "mov r6, r0",
            "mov r0, r4",
            "bl sym.imp.strchr",
            "ldr r8, [r5]",
            "cmp r0, 0",
            "rsbne r6, r4, r0",
            "mov r7, r8",
            "mov r0, r7",
            "mov r1, r4",
            "mov r2, r6",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "bne 0x4f454",
            "ldrb r3, [r7, r6]",
            "cmp r3, 0x2c",
            "cmpne r3, 0",
            "beq 0x4f490",
            "mov r0, r7",
            "mov r1, 0x2c",
            "bl sym.imp.strchr",
            "cmp r0, 0",
            "addne r7, r0, 1",
            "bne 0x4f42c",
            "mov r1, r8",
            "mov r2, r6",
            "mov r3, r4",
            "ldr r0, str._s__.s",
            "bl fcn.0002a2d0",
            "mov r7, r0",
            "ldr r0, [r5]",
            "bl sym.imp.free",
            "str r7, [r5]",
            "add r6, r4, r6",
            "mov r4, r6",
            "ldrb r3, [r6], 1",
            "cmp r3, 0x2c",
            "beq 0x4f494",
            "ldrb r3, [r4]",
            "cmp r3, 0",
            "bne 0x4f404",
            "pop {r4, r5, r6, r7, r8, pc}",
            "mov r0, r4",
            "bl fcn.00029ed8",
            "str r0, [r5]",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.0004f8b8": {
        "function_address": "0x0004f8b8",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x33c",
            "str r1, [sp, 0x54]",
            "mov r3, 0",
            "add r1, sp, 0x338",
            "mov r4, r0",
            "str r3, [r1, -4]!",
            "ldr r0, [r0, 0xc]",
            "bl fcn.0004f4c8",
            "str r0, [sp, 0x18]",
            "ldr r0, [r4, 8]",
            "cmp r0, 0",
            "beq 0x4f8fc",
            "ldr r1, [0x00050854]",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "streq r0, [r4, 8]",
            "ldr r5, [r4, 8]",
            "cmp r5, 0",
            "beq 0x4f91c",
            "mov r0, r5",
            "ldr r1, str.cifs",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x4f9fc",
            "ldr r3, [r4]",
            "ldrb r2, [r3]",
            "cmp r2, 0x2f",
            "cmpne r2, 0x5c",
            "bne 0x4f9f4",
            "ldrb r1, [r3, 1]",
            "cmp r1, r2",
            "moveq r2, 0x5c",
            "beq 0x4f94c",
            "b 0x4f9f4",
            "cmp r6, 0x2f",
            "strbeq r2, [r3, -1]",
            "ldrb r6, [r3], 1",
            "cmp r6, 0",
            "bne 0x4f944",
            "ldr r7, [r4]",
            "mov r1, 0x5c",
            "mov r0, r7",
            "add r7, r7, 1",
            "bl sym.imp.strrchr",
            "cmp r0, r7",
            "mov r5, r0",
            "bls 0x50b84",
            "strb r6, [r0]",
            "mov r1, r6",
            "ldr r0, [r4]",
            "add r0, r0, 2",
            "bl fcn.00054e0c",
            "cmp r0, 0",
            "mov r3, 0x5c",
            "strb r3, [r5]",
            "beq 0x50b84",
            "add r0, r0, 4",
            "bl fcn.00054fd4",
            "mov r6, r0",
            "ldr r0, str.ip_s",
            "mov r1, r6",
            "bl fcn.0002a2d0",
            "add r1, sp, 0x334",
            "bl fcn.0004f4c8",
            "mov r1, r6",
            "mov r2, r5",
            "ldr r0, str._s_s",
            "bl fcn.0002a2d0",
            "ldr r2, [sp, 0x18]",
            "ldr r3, str.cifs",
            "str r0, [r4]",
            "mov r0, r4",
            "orr r1, r2, 0x40",
            "ldr r2, [sp, 0x334]",
            "str r3, [r4, 8]",
            "bl fcn.0004f624",
            "mov sb, r0",
            "b 0x50b28",
            "cmp r5, 0",
            "beq 0x4fa10",
            "mov r0, r5",
            "ldr r1, [0x00050864]",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x50918",
            "ldr r0, [r4]",
            "mov r1, 0x3a",
            "bl sym.imp.strchr",
            "cmp r0, 0",
            "beq 0x50918",
            "ldr r6, [0x00050868]",
            "ldr r7, [sp, 0x334]",
            "ldr r3, [r6]",
            "cmp r3, 0",
            "bne 0x4fa94",
            "ldr r5, [0x0005086c]",
            "add r3, r3, 4",
            "str r3, [r5]",
            "bl fcn.00051ee4",
            "cmp r0, 0",
            "str r0, [r6]",
            "beq 0x4fa94",
            "ldr r3, [0x00050870]",
            "cmp r0, r3",
            "movle r3, 1",
            "ble 0x4fa90",
            "ldr r2, [0x00050874]",
            "sub r3, r0, 0x20000",
            "sub r3, r3, 0x300",
            "cmp r0, r2",
            "movgt r0, 0",
            "movle r0, 1",
            "cmp r3, 0x62",
            "orrls r0, r0, 1",
            "cmp r0, 0",
            "beq 0x4fa94",
            "mov r3, 3",
            "str r3, [r5]",
            "mvn r3, 0",
            "mov r0, r7",
            "str r3, [sp, 0x32c]",
            "mov r5, 0",
            "bl fcn.00029ed8",
            "mov r7, r0",
            "ldr r0, [r4]",
            "bl fcn.00029ed8",
            "mov r1, 0x3a",
            "str r0, [sp, 0x1c]",
            "bl sym.imp.strchr",
            "add r3, r0, 1",
            "mov r1, 0x2c",
            "str r3, [sp, 0x330]",
            "strb r5, [r0]",
            "ldr r0, [sp, 0x1c]",
            "bl sym.imp.strchr",
            "cmp r0, 0",
            "beq 0x4faec",
            "strb r5, [r0]",
            "ldr r0, str.warning:_multiple_hostnames_not_supported",
            "bl fcn.00027184",
            "add r1, sp, 0x338",
            "mov r3, 2",
            "strh r3, [r1, -0x30]!",
            "add r1, r1, 4",
            "ldr r0, [sp, 0x1c]",
            "bl sym.imp.inet_aton",
            "cmp r0, 0",
            "bne 0x4fb64",
            "ldr r0, [sp, 0x1c]",
            "bl sym.imp.gethostbyname",
            "subs r5, r0, 0",
            "bne 0x4fb34",
            "ldr r0, aav.0x0005ad0c",
            "mvn r6, 0",
            "ldr r1, [sp, 0x1c]",
            "bl fcn.00051a74",
            "str r5, [sp, 0x20]",
            "b 0x507e8",
            "ldr r3, [r5, 0xc]",
            "cmp r3, 4",
            "bls 0x4fb50",
            "ldr r0, str.got_bad_hp__h_length",
            "bl fcn.00027184",
            "mov r3, 4",
            "str r3, [r5, 0xc]",
            "ldr r3, [r5, 0x10]",
            "add r0, sp, 0x30c",
            "ldr r2, [r5, 0xc]",
            "ldr r1, [r3]",
            "bl sym.imp.memcpy",
            "add r3, sp, 0x308",
            "ldr r6, [r4, 0xc]",
            "ldm r3, {r0, r1, r2, r3}",
            "add ip, sp, 0x2f8",
            "cmp r6, 0",
            "stm ip, {r0, r1, r2, r3}",
            "bne 0x4fb9c",
            "ldr r0, [sp, 0x30c]",
            "bl sym.imp.inet_ntoa",
            "mov r1, r0",
            "ldr r0, aav.0x000619d4",
            "bl fcn.0002a2d0",
            "str r0, [r4, 0xc]",
            "b 0x4fbe0",
            "ldrb r5, [r6]",
            "ldr r3, aav.0x000619e0",
            "ldr r2, [0x0005088c]",
            "cmp r5, 0",
            "ldr r0, [sp, 0x30c]",
            "movne r5, r3",
            "moveq r5, r2",
            "bl sym.imp.inet_ntoa",
            "mov r2, r5",
            "mov r3, r0",
            "mov r1, r6",
            "ldr r0, str._s_saddr_s",
            "bl fcn.0002a2d0",
            "mov r5, r0",
            "ldr r0, [r4, 0xc]",
            "bl sym.imp.free",
            "str r5, [r4, 0xc]",
            "mov r2, 0x1a8",
            "add r0, sp, 0x58",
            "mov r1, 0",
            "bl sym.imp.memset",
            "mov r3, 3",
            "cmp r7, 0",
            "str r3, [sp, 0x90]",
            "mov r2, 0x1e",
            "str r3, [sp, 0x94]",
            "add r3, r3, 0x39",
            "str r3, [sp, 0x98]",
            "str r3, [sp, 0xa0]",
            "add r3, r3, 0xc3",
            "str r2, [sp, 0x9c]",
            "str r3, [sp, 0x1b4]",
            "beq 0x4ff54",
            "ldr r1, aav.0x000619e0",
            "mov r0, r7",
            "bl sym.imp.strtok",
            "ldr r1, [0x00050894]",
            "mov r6, r0",
            "ldr r0, [0x00050898]",
            "mov r5, 0",
            "movw r2, 0x2710",
            "mov r8, r5",
            "str r1, [sp, 0x3c]",
            "mov sl, r5",
            "str r0, [sp, 0x50]",
            "mov fp, r7",
            "str r2, [sp, 0x4c]",
            "str r5, [sp, 0x48]",
            "str r5, [sp, 0x44]",
            "str r5, [sp, 0x38]",
            "str r5, [sp, 0x30]",
            "str r5, [sp, 0x24]",
            "str r5, [sp, 0x14]",
            "str r5, [sp, 0x2c]",
            "str r5, [sp, 0x34]",
            "str r5, [sp, 0x28]",
            "str r5, [sp, 0x20]",
            "b 0x4ff48",
            "mov r0, r6",
            "mov r1, 0x3d",
            "bl sym.imp.strchr",
            "subs r3, r0, 0",
            "beq 0x4fe30",
            "add r7, r3, 1",
            "str r3, [sp, 0x10]",
            "mov r0, r7",
            "bl fcn.00029df4",
            "ldr r3, [sp, 0x10]",
            "mov sb, r0",
            "mov r0, 0",
            "mov r1, r6",
            "strb r0, [r3]",
            "ldr r0, str.rsize",
            "bl fcn.000267ac",
            "cmp r0, 0x14",
            "ldrls pc, [pc, r0, lsl 2]",
            "b 0x4fe18",
            "str sb, [sp, 0x84]",
            "b case.0x4fcc8.20",
            "str sb, [sp, 0x88]",
            "b case.0x4fcc8.20",
            "str sb, [sp, 0x8c]",
            "b case.0x4fcc8.20",
            "str sb, [sp, 0x90]",
            "b case.0x4fcc8.20",
            "str sb, [sp, 0x94]",
            "b case.0x4fcc8.20",
            "str sb, [sp, 0x98]",
            "b case.0x4fcc8.20",
            "str sb, [sp, 0x9c]",
            "b case.0x4fcc8.20",
            "str sb, [sp, 0x94]",
            "str sb, [sp, 0x98]",
            "str sb, [sp, 0x9c]",
            "str sb, [sp, 0xa0]",
            "b case.0x4fcc8.20",
            "str sb, [sp, 0x28]",
            "b case.0x4fcc8.20",
            "str sb, [sp, 0x34]",
            "b case.0x4fcc8.20",
            "ldr r1, str.__t_n_r_",
            "mov r0, r7",
            "bl sym.imp.strcspn",
            "mov r1, r0",
            "mov r0, r7",
            "bl fcn.00029f04",
            "str r0, [sp, 0x20]",
            "b case.0x4fcc8.20",
            "str sb, [sp, 0x3c]",
            "b case.0x4fcc8.20",
            "mov r8, sb",
            "b case.0x4fcc8.20",
            "str sb, [sp, 0x50]",
            "b case.0x4fcc8.20",
            "mov r5, sb",
            "b case.0x4fcc8.20",
            "mov r0, r7",
            "ldr r1, [0x000508a4]",
            "mov r2, 3",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "moveq sl, 1",
            "beq case.0x4fcc8.20",
            "mov r0, r7",
            "ldr r1, [0x000508a8]",
            "mov r2, 3",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "ldrne r0, str.warning:_unrecognized_proto_option",
            "bne 0x4fef8",
            "b 0x4ff2c",
            "ldr r1, [0x0005086c]",
            "ldr r3, [r1]",
            "cmp r3, 1",
            "strgt sb, [sp, 0x1b4]",
            "ldrle r0, str.warning:_option_namlen_is_not_supported_n",
            "ble 0x4fef8",
            "b case.0x4fcc8.20",
            "mov r7, fp",
            "ldr r0, str.unknown_nfs_mount_parameter:__s_d",
            "mov fp, sb",
            "mov r1, r6",
            "mov r2, sb",
            "b 0x4ff1c",
            "mov r0, r6",
            "ldr r1, [0x000508b8]",
            "mov r2, 2",
            "bl sym.imp.strncmp",
            "subs sb, r0, 0",
            "ldr r0, aav.0x00061c10",
            "addeq r6, r6, 2",
            "movne sb, 1",
            "mov r1, r6",
            "bl fcn.000267ac",
            "cmp r0, 0xa",
            "ldrls pc, [pc, r0, lsl 2]",
            "b 0x4ff00",
            "eor sb, sb, 1",
            "str sb, [sp, 0x2c]",
            "b case.0x4fcc8.20",
            "eor sb, sb, 1",
            "b case.0x4fe5c.2",
            "str sb, [sp, 0x24]",
            "b case.0x4fcc8.20",
            "str sb, [sp, 0x30]",
            "b case.0x4fcc8.20",
            "eor sb, sb, 1",
            "str sb, [sp, 0x38]",
            "b case.0x4fcc8.20",
            "eor sb, sb, 1",
            "str sb, [sp, 0x44]",
            "b case.0x4fcc8.20",
            "mov sl, sb",
            "b case.0x4fcc8.20",
            "eor sl, sb, 1",
            "b case.0x4fcc8.20",
            "ldr r2, [0x0005086c]",
            "ldr r3, [r2]",
            "cmp r3, 2",
            "eorgt sb, sb, 1",
            "strgt sb, [sp, 0x48]",
            "bgt case.0x4fcc8.20",
            "ldr r0, str.warning:_option_nolock_is_not_supported",
            "bl fcn.00027184",
            "b case.0x4fcc8.20",
            "ldr r3, [0x0005088c]",
            "cmp sb, 0",
            "ldr r0, str.unknown_nfs_mount_option:__s_s",
            "mov r7, fp",
            "ldr r1, [0x000508b8]",
            "mov r2, r6",
            "movne r1, r3",
            "bl fcn.00027184",
            "b 0x507e0",
            "str sb, [sp, 0x4c]",
            "b case.0x4fcc8.20",
            "mov sl, r0",
            "b case.0x4fcc8.20",
            "str sb, [sp, 0x14]",
            "mov r0, 0",
            "ldr r1, aav.0x000619e0",
            "bl sym.imp.strtok",
            "mov r6, r0",
            "cmp r6, 0",
            "bne 0x4fc84",
            "b 0x4ffa4",
            "ldr r3, [0x00050898]",
            "movw r1, 0x2710",
            "ldr r0, [0x00050894]",
            "mov r5, r7",
            "mov r8, r7",
            "mov sl, r7",
            "str r3, [sp, 0x50]",
            "str r0, [sp, 0x3c]",
            "str r1, [sp, 0x4c]",
            "str r7, [sp, 0x48]",
            "str r7, [sp, 0x44]",
            "str r7, [sp, 0x38]",
            "str r7, [sp, 0x30]",
            "str r7, [sp, 0x24]",
            "str r7, [sp, 0x14]",
            "str r7, [sp, 0x2c]",
            "str r7, [sp, 0x34]",
            "str r7, [sp, 0x28]",
            "str r7, [sp, 0x20]",
            "b 0x4ffb8",
            "cmp sl, 0",
            "mov r7, fp",
            "movne r2, 6",
            "strne r2, [sp, 0x40]",
            "bne 0x4ffc0",
            "mov r3, 0x11",
            "str r3, [sp, 0x40]",
            "ldr r0, [sp, 0x24]",
            "ldr r1, [sp, 0x14]",
            "cmp r0, 0",
            "ldr r0, [sp, 0x30]",
            "movne r3, 2",
            "moveq r3, 0",
            "cmp r1, 0",
            "orrne r3, r3, 1",
            "ldr r1, [sp, 0x38]",
            "cmp r0, 0",
            "ldr r0, [sp, 0x44]",
            "movne r2, 8",
            "moveq r2, 0",
            "cmp r1, 0",
            "orr r3, r3, r2",
            "movne r2, 0x10",
            "moveq r2, 0",
            "cmp r0, 0",
            "orr r3, r3, r2",
            "movne r2, 0x20",
            "moveq r2, 0",
            "orr r3, r3, r2",
            "ldr r2, [0x0005086c]",
            "str r3, [sp, 0x80]",
            "ldr r1, [r2]",
            "cmp r1, 1",
            "ble 0x50b7c",
            "cmp sl, 0",
            "movne r2, 0x40",
            "moveq r2, 0",
            "cmp r1, 2",
            "orr r3, r2, r3",
            "str r3, [sp, 0x80]",
            "beq 0x50b7c",
            "ldr r0, [sp, 0x48]",
            "cmp r0, 0",
            "movne r2, 0x200",
            "moveq r2, 0",
            "orr r3, r2, r3",
            "cmp r1, 3",
            "str r3, [sp, 0x80]",
            "moveq r3, 2",
            "movne r3, 3",
            "cmp r5, r3",
            "bgt 0x50088",
            "cmp r1, 3",
            "movle r3, 2",
            "movgt r3, 3",
            "cmp r8, r3",
            "ble 0x50098",
            "ldr r0, str.NFSv_d_not_supported",
            "mov r1, r5",
            "bl fcn.00027184",
            "b 0x507e0",
            "subs r3, r5, 0",
            "movne r3, 1",
            "cmp r8, 0",
            "movne r2, 0",
            "andeq r2, r3, 1",
            "cmp r2, 0",
            "beq 0x500c0",
            "cmp r5, 3",
            "moveq r8, 3",
            "movne r8, 1",
            "cmp r5, r8",
            "movge r3, 0",
            "andlt r3, r3, 1",
            "cmp r3, 0",
            "ldr r3, [sp, 0x8c]",
            "movne r8, r5",
            "cmp r3, 0",
            "bne 0x500f0",
            "cmp sl, 0",
            "moveq r3, 7",
            "movne r3, 0x46",
            "str r3, [sp, 0x8c]",
            "str r1, [sp, 0x58]",
            "ldr r1, [sp, 0x18]",
            "tst r1, 0x20",
            "bne 0x507a4",
            "ldr r2, [sp, 0x20]",
            "cmp r2, 0",
            "beq 0x50198",
            "ldrb r3, [r2]",
            "sub r3, r3, 0x30",
            "uxtb r3, r3",
            "cmp r3, 9",
            "bhi 0x5013c",
            "mov r3, 2",
            "add r0, sp, 0x200",
            "strh r3, [r0, 0xf8]",
            "ldr r0, [sp, 0x1c]",
            "bl sym.imp.inet_addr",
            "str r0, [sp, 0x2fc]",
            "b 0x50198",
            "ldr r0, [sp, 0x20]",
            "bl sym.imp.gethostbyname",
            "subs r5, r0, 0",
            "bne 0x5015c",
            "ldr r0, aav.0x0005ad0c",
            "ldr r1, [sp, 0x20]",
            "bl fcn.00051a74",
            "b 0x5064c",
            "ldr r3, [r5, 0xc]",
            "cmp r3, 4",
            "bls 0x50178",
            "ldr r0, str.got_bad_hp__h_length_",
            "bl fcn.00027184",
            "mov r3, 4",
            "str r3, [r5, 0xc]",
            "ldr r3, [r5, 0x10]",
            "add r0, sp, 0x338",
            "mov r1, 2",
            "ldr r2, [r5, 0xc]",
            "strh r1, [r0, -0x40]!",
            "add r0, r0, 4",
            "ldr r1, [r3]",
            "bl sym.imp.memcpy",
            "mov r5, 0",
            "mov r3, 3",
            "str r3, [sp, 0x318]",
            "mov r0, r5",
            "add r3, r3, 0x11",
            "str r5, [sp, 0x31c]",
            "str r3, [sp, 0x320]",
            "mov fp, r7",
            "str r5, [sp, 0x324]",
            "mov sb, r5",
            "bl sym.imp.time",
            "ldr r2, [sp, 0x4c]",
            "mov r3, 0x3c",
            "ldr r6, [0x000508d0]",
            "mov r7, r4",
            "str r5, [sp, 0x14]",
            "mla r3, r3, r2, r0",
            "str r3, [sp, 0x38]",
            "mov r3, 0x1e",
            "str r3, [sp, 0x24]",
            "ldr r0, [sp, 0x24]",
            "ldr r1, [sp, 0x14]",
            "rsb r3, r1, r0",
            "cmp r3, 0x1d",
            "bgt 0x50204",
            "mov r0, 0x1e",
            "bl sym.imp.sleep",
            "mov r2, 0x6f",
            "add r3, sp, 0x200",
            "strh r2, [r3, 0xfa]",
            "add r0, sp, 0x2f8",
            "bl sym.imp.pmap_getmaps",
            "mov ip, r0",
            "ldr r0, [0x0005086c]",
            "ldr lr, [sp, 0x3c]",
            "mov r4, r8",
            "ldr r1, [0x00050894]",
            "ldr r3, [r0]",
            "ldr r0, [sp, 0x34]",
            "cmp r3, 3",
            "ldr r3, [sp, 0x40]",
            "movle r2, 2",
            "movgt r2, 3",
            "cmp r8, r2",
            "str r0, [r6, 0xc]",
            "movhi r4, r2",
            "cmp lr, 0",
            "moveq lr, r1",
            "str r4, [r6, 4]",
            "str lr, [r6]",
            "sub r5, r4, 1",
            "str r3, [r6, 8]",
            "b 0x50320",
            "ldr r3, [ip]",
            "cmp r3, lr",
            "bne 0x5031c",
            "cmp r4, 0",
            "bne 0x50294",
            "ldr r2, [r6, 4]",
            "ldr r3, [ip, 4]",
            "cmp r2, r3",
            "bhi 0x5031c",
            "b 0x502a8",
            "cmp r4, 3",
            "bne 0x502a8",
            "ldr r3, [ip, 4]",
            "cmp r3, 3",
            "bne 0x5031c",
            "cmp r5, 1",
            "bhi 0x502bc",
            "ldr r3, [ip, 4]",
            "cmp r3, 2",
            "bhi 0x5031c",
            "ldr r1, [0x0005086c]",
            "ldr r2, [ip, 4]",
            "ldr r3, [r1]",
            "cmp r3, 3",
            "movle r3, 2",
            "movgt r3, 3",
            "cmp r2, r3",
            "bhi 0x5031c",
            "ldr r3, [r6, 8]",
            "cmp r3, 0",
            "beq 0x502f8",
            "ldr r3, [ip, 8]",
            "ldr r2, [sp, 0x40]",
            "cmp r3, r2",
            "bne 0x5031c",
            "ldr r3, [sp, 0x34]",
            "cmp r3, 0",
            "beq 0x50314",
            "ldr r3, [ip, 0xc]",
            "ldr r0, [sp, 0x34]",
            "cmp r3, r0",
            "bne 0x5031c",
            "ldm ip, {r0, r1, r2, r3}",
            "stm r6, {r0, r1, r2, r3}",
            "ldr ip, [ip, 0x10]",
            "cmp ip, 0",
            "bne 0x5026c",
            "ldr r3, [r6, 4]",
            "add r0, sp, 0x200",
            "mvn r4, 0",
            "str r4, [sp, 0x32c]",
            "cmp r3, 0",
            "addeq r3, r3, 1",
            "streq r3, [r6, 4]",
            "ldr r3, [r6, 0xc]",
            "ldr r2, [r6, 4]",
            "cmp r3, 0",
            "ldr r3, [r6, 8]",
            "movweq r1, 0x27b",
            "streq r1, [r6, 0xc]",
            "cmp r3, 0",
            "addeq r3, r3, 6",
            "streq r3, [r6, 8]",
            "cmp r2, 2",
            "movhs r3, r2",
            "movlo r3, 2",
            "str r3, [sp, 0x30]",
            "ldr r3, [r6, 0xc]",
            "ubfx r1, r3, 8, 8",
            "orr r3, r1, r3, lsl 8",
            "strh r3, [r0, 0xfa]",
            "ldr r3, [r6, 8]",
            "cmp r3, 6",
            "beq 0x503dc",
            "cmp r3, 0x11",
            "bne 0x50400",
            "add r3, sp, 0x32c",
            "add r0, sp, 0x2f8",
            "str r3, [sp, 4]",
            "ldr r3, [sp, 0x31c]",
            "str r3, [sp]",
            "ldr r3, [sp, 0x318]",
            "ldr r1, [r6]",
            "bl sym.imp.clntudp_create",
            "subs r5, r0, 0",
            "bne 0x50420",
            "ldr r3, [r6, 0xc]",
            "add r1, sp, 0x200",
            "str r4, [sp, 0x32c]",
            "ubfx r2, r3, 8, 8",
            "orr r3, r2, r3, lsl 8",
            "strh r3, [r1, 0xfa]",
            "mov r3, 0",
            "add r0, sp, 0x2f8",
            "str r3, [sp]",
            "str r3, [sp, 4]",
            "add r3, sp, 0x32c",
            "ldm r6, {r1, r2}",
            "bl sym.imp.clnttcp_create",
            "subs r5, r0, 0",
            "bne 0x50420",
            "ldr r2, [sp, 0x14]",
            "cmp r2, 0",
            "cmpeq sb, 0",
            "bne 0x50500",
            "ldr r0, [0x000508d4]",
            "bl sym.imp.clnt_spcreateerror",
            "bl fcn.0004f5c8",
            "b 0x50500",
            "bl sym.imp.authunix_create_default",
            "mov r1, 0",
            "str r0, [r5]",
            "mov r2, 0x24",
            "add r0, sp, 0x2d4",
            "bl sym.imp.memset",
            "ldr r3, [r6, 4]",
            "add r1, sp, 0x320",
            "ldr r2, [r5, 4]",
            "cmp r3, 3",
            "add r3, sp, 8",
            "ldreq r0, aav.0x0004f818",
            "ldrne r0, aav.0x0004f7d0",
            "str r0, [sp]",
            "add r0, sp, 0x2d4",
            "str r0, [sp, 4]",
            "ldm r1, {r0, r1}",
            "stm r3, {r0, r1}",
            "mov r0, r5",
            "ldr ip, [r2]",
            "mov r1, 1",
            "ldr r2, aav.0x0004f8a0",
            "add r3, sp, 0x330",
            "blx ip",
            "cmp r0, 0",
            "beq 0x5054c",
            "ldr r3, [0x00050910]",
            "ldr r3, [r3]",
            "ldr r3, [r3]",
            "cmp r3, 0x6f",
            "beq 0x504b8",
            "ldr r1, [0x000508d4]",
            "mov r0, r5",
            "mov r4, r7",
            "mov r7, fp",
            "bl sym.imp.clnt_sperror",
            "bl fcn.0004f5c8",
            "b 0x5064c",
            "ldr r1, [sp, 0x14]",
            "cmp r1, 0",
            "cmpeq sb, 0",
            "bne 0x504d8",
            "ldr r1, [0x000508d4]",
            "mov r0, r5",
            "bl sym.imp.clnt_sperror",
            "bl fcn.0004f5c8",
            "ldr r0, [r5]",
            "ldr r3, [r0, 0x20]",
            "ldr r3, [r3, 0x10]",
            "blx r3",
            "ldr r3, [r5, 4]",
            "mov r0, r5",
            "ldr r3, [r3, 0x10]",
            "blx r3",
            "ldr r0, [sp, 0x32c]",
            "bl sym.imp.close",
            "ldr r2, [sp, 0x2c]",
            "cmp r2, 0",
            "beq 0x507c4",
            "cmp sb, 0",
            "bne 0x50528",
            "bl fcn.0004f718",
            "subs sb, r0, 0",
            "movle r4, r7",
            "movle r7, fp",
            "ble 0x50774",
            "mov r0, 0",
            "bl sym.imp.time",
            "ldr r3, [sp, 0x38]",
            "cmp r0, r3",
            "bge 0x507d8",
            "ldr r1, [sp, 0x24]",
            "str r0, [sp, 0x24]",
            "str r1, [sp, 0x14]",
            "b 0x501e8",
            "ldr r2, [sp, 0x30]",
            "mov r4, r7",
            "mov r7, fp",
            "mov fp, r0",
            "cmp r2, 2",
            "bne 0x505b4",
            "ldr r0, [sp, 0x2d4]",
            "cmp r0, 0",
            "bne 0x505c0",
            "add r6, sp, 0x2d8",
            "add r0, sp, 0x1bc",
            "mov r1, r6",
            "mov r2, 0x20",
            "add r0, r0, 2",
            "bl sym.imp.memcpy",
            "ldr r3, [0x000508e4]",
            "mov r0, 0x20",
            "add r1, sp, 0x338",
            "mov ip, r6",
            "add lr, sp, 0x60",
            "strh r0, [r1, r3]",
            "ldm ip!, {r0, r1, r2, r3}",
            "stm lr!, {r0, r1, r2, r3}",
            "ldm ip, {r0, r1, r2, r3}",
            "stm lr, {r0, r1, r2, r3}",
            "b 0x5062c",
            "ldr r0, [sp, 0x2d4]",
            "cmp r0, 0",
            "beq 0x505e0",
            "ldr r6, [sp, 0x330]",
            "bl fcn.0004f6b4",
            "ldr r1, [sp, 0x1c]",
            "mov r3, r0",
            "mov r2, r6",
            "ldr r0, str._s:_s_failed__reason_given_by_server:__s",
            "bl fcn.00027184",
            "b 0x5064c",
            "mov r1, fp",
            "mov r2, 0x20",
            "add r6, sp, 0x1bc",
            "add r0, sp, 0x60",
            "bl sym.imp.memset",
            "mov r1, fp",
            "mov r2, 0x42",
            "mov r0, r6",
            "bl sym.imp.memset",
            "ldr r3, [0x000508e4]",
            "add r0, sp, 0x338",
            "ldr r2, [sp, 0x2d8]",
            "ldr r1, [sp, 0x2dc]",
            "strh r2, [r0, r3]",
            "add r0, r6, 2",
            "bl sym.imp.memcpy",
            "ldr r3, [sp, 0x80]",
            "orr r3, r3, 0x80",
            "str r3, [sp, 0x80]",
            "cmp sl, 0",
            "beq 0x50664",
            "ldr r3, [0x0005086c]",
            "ldr r3, [r3]",
            "cmp r3, 2",
            "bgt 0x50654",
            "ldr r0, str.NFS_over_TCP_is_not_supported",
            "bl fcn.00027184",
            "mvn r6, 0",
            "b 0x507e8",
            "mov r0, 2",
            "mov r1, 1",
            "mov r2, 6",
            "b 0x50670",
            "mov r0, 2",
            "mov r2, 0x11",
            "mov r1, r0",
            "bl sym.imp.socket",
            "cmp r0, 0",
            "mov r6, r0",
            "ldrlt r0, str.nfs_socket",
            "blt 0x5069c",
            "mov r0, r6",
            "mov r1, 0",
            "bl sym.imp.bindresvport",
            "cmp r0, 0",
            "bge 0x506a4",
            "ldr r0, str.nfs_bindresvport",
            "bl fcn.000288b8",
            "b 0x507e8",
            "ldr r1, [sp, 0x28]",
            "cmp r1, 0",
            "bne 0x506e8",
            "add r3, sp, 0x300",
            "cmp sl, 0",
            "mov r2, 0x6f",
            "add r0, sp, 0x308",
            "strh r2, [r3, 0xa]",
            "moveq r3, 0x11",
            "movne r3, 6",
            "ldr r1, [sp, 0x50]",
            "ldr r2, [sp, 0x30]",
            "bl sym.imp.pmap_getport",
            "movw r3, 0x801",
            "cmp r0, 0",
            "moveq r0, r3",
            "str r0, [sp, 0x28]",
            "ldr r0, [sp, 0x28]",
            "add r1, sp, 0x300",
            "add ip, sp, 0xa4",
            "str r6, [sp, 0x5c]",
            "ubfx r3, r0, 8, 8",
            "orr r3, r3, r0, lsl 8",
            "strh r3, [r1, 0xa]",
            "add r3, sp, 0x308",
            "ldm r3, {r0, r1, r2, r3}",
            "stm ip, {r0, r1, r2, r3}",
            "mov r2, 0x100",
            "ldr r1, [sp, 0x1c]",
            "add r0, sp, 0xb4",
            "bl sym.imp.strncpy",
            "ldr r0, [r5]",
            "ldr r3, [r0, 0x20]",
            "ldr r3, [r3, 0x10]",
            "blx r3",
            "ldr r3, [r5, 4]",
            "mov r0, r5",
            "ldr r3, [r3, 0x10]",
            "blx r3",
            "ldr r0, [sp, 0x32c]",
            "bl sym.imp.close",
            "ldr r2, [sp, 0x2c]",
            "cmp r2, 0",
            "movne r5, 1",
            "addne r6, sp, 0x200",
            "bne 0x50790",
            "b 0x507a4",
            "cmp sb, 0",
            "bne 0x5077c",
            "bl fcn.0004f718",
            "subs sb, r0, 0",
            "bgt 0x5077c",
            "rsb sb, sb, 0",
            "b 0x50838",
            "mov r0, r5",
            "lsl r5, r5, 1",
            "cmp r5, 0x1e",
            "movge r5, 0x1e",
            "bl sym.imp.sleep",
            "ldr r0, [r4, 4]",
            "mov r1, r6",
            "bl sym.imp.stat64",
            "cmn r0, 1",
            "beq 0x50760",
            "ldr r3, [0x00050864]",
            "mov r0, r4",
            "ldr r1, [sp, 0x18]",
            "add r2, sp, 0x58",
            "str r3, [r4, 8]",
            "bl fcn.0004f624",
            "mov sb, r0",
            "b 0x50838",
            "mov r4, r7",
            "mvn r6, 0",
            "mov r7, fp",
            "ldr r5, [sp, 0x2c]",
            "b 0x507e8",
            "mov r4, r7",
            "mov r7, fp",
            "mvn r6, 0",
            "mov r5, 0",
            "ldr r3, [sp, 0x32c]",
            "cmn r3, 1",
            "beq 0x50824",
            "cmp r5, 0",
            "beq 0x5081c",
            "ldr r0, [r5]",
            "ldr r3, [r0, 0x20]",
            "ldr r3, [r3, 0x10]",
            "blx r3",
            "ldr r3, [r5, 4]",
            "mov r0, r5",
            "ldr r3, [r3, 0x10]",
            "blx r3",
            "ldr r0, [sp, 0x32c]",
            "bl sym.imp.close",
            "cmn r6, 1",
            "beq 0x50834",
            "mov r0, r6",
            "bl sym.imp.close",
            "mov sb, 0x6e",
            "ldr r0, [sp, 0x1c]",
            "bl sym.imp.free",
            "ldr r0, [sp, 0x20]",
            "bl sym.imp.free",
            "mov r0, r7",
            "bl sym.imp.free",
            "b 0x50b28",
            "ldr r0, [r4]",
            "add r1, sp, 0x268",
            "bl sym.imp.stat64",
            "subs r5, r0, 0",
            "bne 0x509d4",
            "ldr r3, [sp, 0x18]",
            "movw r6, 0x3020",
            "and r6, r3, r6",
            "cmp r6, 0",
            "bne 0x509e0",
            "ldr r3, [sp, 0x278]",
            "and r3, r3, 0xf000",
            "cmp r3, 0x8000",
            "bne 0x509b0",
            "ldr r0, [r4]",
            "bl fcn.00054444",
            "mov r5, r0",
            "str r6, [r4]",
            "mov r0, r4",
            "mov r1, r5",
            "mov r2, 0",
            "mov r3, 0",
            "bl fcn.00053bc4",
            "cmp r0, 0",
            "bge 0x509e0",
            "ldr r3, [0x00050910]",
            "ldr r4, [r3]",
            "ldr r3, [r4]",
            "cmp r3, 1",
            "cmpne r3, 0xd",
            "bne 0x509a0",
            "ldr r0, str.permission_denied.__are_you_root__",
            "bl fcn.00027184",
            "b 0x509a8",
            "ldr r0, str.cannot_setup_loop_device",
            "bl fcn.000288b8",
            "ldr sb, [r4]",
            "b 0x50b70",
            "cmp r3, 0x4000",
            "bne 0x509dc",
            "ldr r5, [r4, 8]",
            "cmp r5, 0",
            "ldreq r0, [sp, 0x18]",
            "orreq r0, r0, 0x1000",
            "streq r0, [sp, 0x18]",
            "beq 0x509e0",
            "b 0x509dc",
            "mov r5, 0",
            "b 0x509e0",
            "mov r5, r6",
            "ldr r3, [r4, 8]",
            "cmp r3, 0",
            "bne 0x50a00",
            "ldr r1, [sp, 0x18]",
            "movw r3, 0x3020",
            "and r3, r1, r3",
            "cmp r3, 0",
            "beq 0x50a18",
            "mov r0, r4",
            "ldr r1, [sp, 0x18]",
            "ldr r2, [sp, 0x334]",
            "bl fcn.0004f624",
            "mov sb, r0",
            "b 0x50b10",
            "ldr r3, [0x0005090c]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "bne 0x50ad4",
            "ldr r6, str._etc_filesystems",
            "add r7, sp, 0x338",
            "str r3, [r7, -0x10]!",
            "add sb, r6, 0x24",
            "mov r0, r6",
            "ldr r1, [0x00050904]",
            "bl sym.imp.fopen64",
            "subs sl, r0, 0",
            "beq 0x50abc",
            "b 0x50aac",
            "ldr r1, str.nodev",
            "mov r2, 5",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "bne 0x50a74",
            "ldrb r0, [r8, 5]",
            "bl sym.imp.isspace",
            "cmp r0, 0",
            "bne 0x50aac",
            "mov r0, r8",
            "bl fcn.000295c4",
            "ldrb r3, [r0]",
            "cmp r3, 0x23",
            "cmpne r3, 0x2a",
            "beq 0x50aac",
            "cmp r3, 0",
            "beq 0x50aac",
            "bl fcn.00029ed8",
            "mov r1, r0",
            "mov r0, r7",
            "bl fcn.00027f80",
            "mov r0, r8",
            "bl sym.imp.free",
            "mov r0, sl",
            "bl fcn.00027640",
            "subs r8, r0, 0",
            "bne 0x50a50",
            "add r6, r6, 0x12",
            "cmp r6, sb",
            "bne 0x50a38",
            "ldr r2, [sp, 0x328]",
            "ldr r3, [0x0005090c]",
            "str r2, [r3]",
            "ldr r3, [0x0005090c]",
            "mvn sb, 0",
            "ldr r6, [r3]",
            "b 0x50b08",
            "ldr r3, [r6]",
            "mov r0, r4",
            "ldr r1, [sp, 0x18]",
            "ldr r2, [sp, 0x334]",
            "str r3, [r4, 8]",
            "bl fcn.0004f624",
            "subs sb, r0, 0",
            "beq 0x50b10",
            "ldr r6, [r6, 4]",
            "cmp r6, 0",
            "bne 0x50ae4",
            "cmp sb, 0",
            "cmpne r5, 0",
            "beq 0x50b28",
            "ldr r0, [r4]",
            "bl fcn.00053b8c",
            "b 0x50b30",
            "cmp sb, 0",
            "beq 0x50b70",
            "ldr r3, [0x00050910]",
            "ldr r0, [sp, 0x54]",
            "ldr r3, [r3]",
            "ldr r2, [r3]",
            "subs r3, r0, 0",
            "movne r3, 1",
            "cmp r2, 0x10",
            "movne r3, 0",
            "cmp r3, 0",
            "movne sb, 0",
            "bne 0x50b70",
            "cmp sb, 0",
            "bge 0x50b70",
            "ldr r0, str.mounting__s_on__s_failed",
            "ldm r4, {r1, r2}",
            "bl fcn.000288b8",
            "mov r0, sb",
            "add sp, sp, 0x33c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "mov r3, 2",
            "b 0x5006c",
            "mov sb, 1",
            "b 0x50b30"
        ]
    },
    "fcn.00054e0c": {
        "function_address": "0x00054e0c",
        "instructions": [
            "mov r2, 0",
            "mov r3, r2",
            "b 0x54c7c"
        ]
    },
    "sym.imp.inet_addr": {
        "function_address": "0x0000c068",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x5dc]!"
        ]
    },
    "sym.imp.pmap_getmaps": {
        "function_address": "0x0000b7f8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xb7c]!"
        ]
    },
    "sym.imp.clntudp_create": {
        "function_address": "0x0000b7e0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xb8c]!"
        ]
    },
    "sym.imp.clnttcp_create": {
        "function_address": "0x0000b888",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xb1c]!"
        ]
    },
    "sym.imp.clnt_spcreateerror": {
        "function_address": "0x0000bf60",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x68c]!"
        ]
    },
    "sym.imp.authunix_create_default": {
        "function_address": "0x0000ba80",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x9cc]!"
        ]
    },
    "sym.imp.clnt_sperror": {
        "function_address": "0x0000be7c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x724]!"
        ]
    },
    "sym.imp.bindresvport": {
        "function_address": "0x0000c470",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x32c]!"
        ]
    },
    "sym.imp.pmap_getport": {
        "function_address": "0x0000b99c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0xa64]!"
        ]
    },
    "fcn.00053e18": {
        "function_address": "0x00053e18",
        "instructions": [
            "cmp r0, 0",
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r4, r1",
            "mvneq r5, 0",
            "beq 0x53ebc",
            "cmp r1, 0",
            "moveq r5, r1",
            "beq 0x53ebc",
            "ldrb r3, [r1]",
            "cmp r3, 0x6e",
            "bne 0x53e58",
            "ldrb r3, [r1, 1]",
            "cmp r3, 0x6f",
            "addeq r4, r1, 2",
            "mvneq r5, 0",
            "beq 0x53e5c",
            "mov r5, 0",
            "ldr r7, [r0, 8]",
            "mov r0, r7",
            "bl sym.imp.strlen",
            "mov r6, r0",
            "b 0x53eb0",
            "mov r0, r7",
            "mov r1, r4",
            "mov r2, r6",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "bne 0x53e98",
            "ldrb r3, [r4, r6]",
            "cmp r3, 0",
            "cmpne r3, 0x2c",
            "beq 0x53ebc",
            "mov r0, r4",
            "mov r1, 0x2c",
            "bl sym.imp.strchr",
            "cmp r0, 0",
            "beq 0x53eb8",
            "add r4, r0, 1",
            "cmp r4, 0",
            "bne 0x53e70",
            "mvn r5, r5",
            "mov r0, r5",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.00052318": {
        "function_address": "0x00052318",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r6, r0",
            "bl sym.imp.strlen",
            "add r0, r0, 1",
            "mov r4, 0",
            "lsl r0, r0, 1",
            "mov r7, 0x5c",
            "bl fcn.00029e54"
        ]
    },
    "fcn.00053ec4": {
        "function_address": "0x00053ec4",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r5, r0",
            "mov r4, r1",
            "bl sym.imp.strcasecmp",
            "cmp r0, 0",
            "moveq r0, 1",
            "popeq {r3, r4, r5, pc}",
            "mov r0, r4",
            "mov r1, r5",
            "bl sym.imp.strcasestr",
            "cmp r0, 0",
            "bne 0x53f0c",
            "mov r0, r5",
            "mov r1, r4",
            "bl sym.imp.strcasestr",
            "subs r0, r0, 0",
            "movne r0, 1",
            "pop {r3, r4, r5, pc}",
            "mov r0, 1",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.imp.strcasestr": {
        "function_address": "0x0000c11c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x5e000",
            "ldr pc, [ip, 0x564]!"
        ]
    },
    "fcn.00055cec": {
        "function_address": "0x00055cec",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x14",
            "subs r8, r1, 0",
            "mov r4, r0",
            "mov r7, r2",
            "mov ip, r3",
            "movge r1, 0",
            "bge 0x55d20",
            "rsbs r0, r0, 0",
            "rsc r1, r1, 0",
            "mov r8, r1",
            "mov r4, r0",
            "mvn r1, 0",
            "cmp ip, 0",
            "str r1, [sp, 0xc]",
            "bge 0x55d48",
            "ldr r1, [sp, 0xc]",
            "rsbs r2, r2, 0",
            "rsc r3, r3, 0",
            "mov r7, r2",
            "mov ip, r3",
            "mvn r1, r1",
            "str r1, [sp, 0xc]",
            "cmp ip, 0",
            "mov sb, r7",
            "mov fp, r4",
            "mov r5, r8",
            "bne 0x55fb4",
            "cmp r7, r8",
            "bls 0x55e24",
            "clz r3, r7",
            "cmp r3, 0",
            "rsbne r2, r3, 0x20",
            "lslne sb, r7, r3",
            "lsrne r2, r4, r2",
            "lslne fp, r4, r3",
            "lsr r6, sb, 0x10",
            "orrne r5, r2, r8, lsl r3",
            "uxth r8, sb",
            "mov r0, r5",
            "mov r1, r6",
            "bl fcn.000550a8",
            "mov r0, r5",
            "mov r7, r1",
            "mov r1, r6",
            "bl fcn.00055000",
            "lsr r3, fp, 0x10",
            "mul r5, r8, r0",
            "mov r4, r0",
            "orr r7, r3, r7, lsl 16",
            "cmp r7, r5",
            "bhs 0x55dd4",
            "adds r7, r7, sb",
            "sub r4, r0, 1",
            "bhs 0x55dd4",
            "cmp r7, r5",
            "sublo r4, r4, 1",
            "addlo r7, r7, sb",
            "rsb r5, r5, r7",
            "mov r1, r6",
            "mov r0, r5",
            "uxth fp, fp",
            "bl fcn.000550a8",
            "mov r0, r5",
            "mov sl, r1",
            "mov r1, r6",
            "orr sl, fp, sl, lsl 16",
            "bl fcn.00055000",
            "mul r8, r8, r0",
            "cmp sl, r8",
            "bhs 0x55e1c",
            "adds sl, sl, sb",
            "sub r0, r0, 1",
            "bhs 0x55e1c",
            "cmp sl, r8",
            "sublo r0, r0, 1",
            "orr r7, r0, r4, lsl 16",
            "b 0x56114",
            "cmp r7, 0",
            "bne 0x55e3c",
            "mov r0, 1",
            "mov r1, ip",
            "bl fcn.00055000",
            "mov sb, r0",
            "clz r3, sb",
            "cmp r3, 0",
            "rsbeq r8, sb, r8",
            "moveq r6, 1",
            "beq 0x55f10",
            "lsl sb, sb, r3",
            "rsb sl, r3, 0x20",
            "lsr r6, r8, sl",
            "lsr sl, r4, sl",
            "lsr r5, sb, 0x10",
            "lsl fp, r4, r3",
            "orr sl, sl, r8, lsl r3",
            "uxth r8, sb",
            "mov r0, r6",
            "mov r1, r5",
            "bl fcn.000550a8",
            "mov r0, r6",
            "mov r4, r1",
            "mov r1, r5",
            "bl fcn.00055000",
            "lsr r2, sl, 0x10",
            "mul r3, r8, r0",
            "mov r7, r0",
            "orr r4, r2, r4, lsl 16",
            "cmp r4, r3",
            "bhs 0x55ebc",
            "adds r4, r4, sb",
            "sub r7, r0, 1",
            "bhs 0x55ebc",
            "cmp r4, r3",
            "sublo r7, r7, 1",
            "addlo r4, r4, sb",
            "rsb r4, r3, r4",
            "mov r1, r5",
            "mov r0, r4",
            "uxth sl, sl",
            "bl fcn.000550a8",
            "mov r0, r4",
            "mov r6, r1",
            "mov r1, r5",
            "orr sl, sl, r6, lsl 16",
            "bl fcn.00055000",
            "mul r8, r8, r0",
            "cmp sl, r8",
            "bhs 0x55f08",
            "adds sl, sl, sb",
            "sub r0, r0, 1",
            "bhs 0x55f08",
            "cmp sl, r8",
            "sublo r0, r0, 1",
            "addlo sl, sl, sb",
            "orr r6, r0, r7, lsl 16",
            "rsb r8, r8, sl",
            "lsr r7, sb, 0x10",
            "mov r0, r8",
            "uxth r5, sb",
            "mov r1, r7",
            "bl fcn.000550a8",
            "mov r0, r8",
            "mov sl, r1",
            "mov r1, r7",
            "bl fcn.00055000",
            "lsr r3, fp, 0x10",
            "mul r8, r5, r0",
            "mov r4, r0",
            "orr sl, r3, sl, lsl 16",
            "cmp sl, r8",
            "bhs 0x55f64",
            "adds sl, sl, sb",
            "sub r4, r0, 1",
            "bhs 0x55f64",
            "cmp sl, r8",
            "sublo r4, r4, 1",
            "addlo sl, sl, sb",
            "rsb r8, r8, sl",
            "mov r1, r7",
            "mov r0, r8",
            "uxth fp, fp",
            "bl fcn.000550a8",
            "mov r0, r8",
            "mov sl, r1",
            "mov r1, r7",
            "orr sl, fp, sl, lsl 16",
            "bl fcn.00055000",
            "mul r5, r5, r0",
            "cmp sl, r5",
            "bhs 0x55fac",
            "adds sl, sl, sb",
            "sub r0, r0, 1",
            "bhs 0x55fac",
            "cmp sl, r5",
            "sublo r0, r0, 1",
            "orr r7, r0, r4, lsl 16",
            "b 0x56124",
            "cmp ip, r8",
            "movhi r6, 0",
            "bhi 0x56120",
            "clz r6, ip",
            "cmp r6, 0",
            "bne 0x55fe8",
            "cmp r8, ip",
            "cmpls r4, r7",
            "movlo r4, 0",
            "movhs r4, 1",
            "movhs r7, 1",
            "bhs 0x56124",
            "b 0x5611c",
            "rsb sl, r6, 0x20",
            "lsr r5, r7, sl",
            "lsl r7, r7, r6",
            "orr r5, r5, ip, lsl r6",
            "str r7, [sp, 8]",
            "lsr r7, r8, sl",
            "lsr sl, r4, sl",
            "uxth sb, r5",
            "orr sl, sl, r8, lsl r6",
            "lsr r8, r5, 0x10",
            "mov r0, r7",
            "mov r1, r8",
            "bl fcn.000550a8",
            "mov r0, r7",
            "mov fp, r1",
            "mov r1, r8",
            "bl fcn.00055000",
            "lsr r2, sl, 0x10",
            "mul r3, sb, r0",
            "mov r7, r0",
            "orr fp, r2, fp, lsl 16",
            "cmp fp, r3",
            "bhs 0x5605c",
            "adds fp, fp, r5",
            "sub r7, r0, 1",
            "bhs 0x5605c",
            "cmp fp, r3",
            "sublo r7, r7, 1",
            "addlo fp, fp, r5",
            "rsb fp, r3, fp",
            "mov r1, r8",
            "mov r0, fp",
            "uxth sl, sl",
            "bl fcn.000550a8",
            "mov r0, fp",
            "mov r3, r1",
            "mov r1, r8",
            "str r3, [sp, 4]",
            "bl fcn.00055000",
            "ldr r3, [sp, 4]",
            "mul sb, sb, r0",
            "orr r3, sl, r3, lsl 16",
            "cmp r3, sb",
            "bhs 0x560b0",
            "adds r3, r3, r5",
            "sub r0, r0, 1",
            "bhs 0x560b0",
            "cmp r3, sb",
            "sublo r0, r0, 1",
            "addlo r3, r3, r5",
            "rsb r3, sb, r3",
            "orr r7, r0, r7, lsl 16",
            "ldr r8, [sp, 8]",
            "lsr r0, r7, 0x10",
            "lsr r1, r8, 0x10",
            "bic r5, r7, r0, lsl 16",
            "bic ip, r8, r1, lsl 16",
            "mul r2, r5, ip",
            "mul ip, r0, ip",
            "mul r5, r1, r5",
            "mul r1, r0, r1",
            "adds r5, ip, r5",
            "addhs r1, r1, 0x10000",
            "adds r2, r2, r5, lsl 16",
            "adc r1, r1, r5, lsr 16",
            "cmp r1, r3",
            "bhi 0x56110",
            "movne r3, 0",
            "moveq r3, 1",
            "cmp r2, r4, lsl r6",
            "movls r6, 0",
            "andhi r6, r3, 1",
            "cmp r6, 0",
            "beq 0x56124",
            "sub r7, r7, 1",
            "mov r6, 0",
            "b 0x56124",
            "mov r6, r4",
            "mov r7, r6",
            "ldr r1, [sp, 0xc]",
            "mov r2, r7",
            "mov r3, r6",
            "cmp r1, 0",
            "beq 0x56140",
            "rsbs r2, r2, 0",
            "rsc r3, r3, 0",
            "mov r0, r2",
            "mov r1, r3",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00056150": {
        "function_address": "0x00056150",
        "instructions": [
            "push {r0, r1, r2, r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "cmp r3, 0",
            "mov r5, r0",
            "mov r4, r1",
            "mov r8, r2",
            "mov sl, r0",
            "mov sb, r1",
            "bne 0x563c8",
            "cmp r2, r1",
            "bls 0x56238",
            "clz r3, r2",
            "cmp r3, 0",
            "lslne r8, r2, r3",
            "rsbne r2, r3, 0x20",
            "lsrne r2, r0, r2",
            "lslne sl, r0, r3",
            "lsr r5, r8, 0x10",
            "uxth r6, r8",
            "orrne sb, r2, r1, lsl r3",
            "mov r1, r5",
            "mov r0, sb",
            "bl fcn.000550a8",
            "mov r0, sb",
            "mov fp, r1",
            "mov r1, r5",
            "bl fcn.00055000",
            "lsr r3, sl, 0x10",
            "mul r7, r6, r0",
            "mov r4, r0",
            "orr fp, r3, fp, lsl 16",
            "cmp fp, r7",
            "bhs 0x561e8",
            "adds fp, fp, r8",
            "sub r4, r0, 1",
            "bhs 0x561e8",
            "cmp fp, r7",
            "sublo r4, r4, 1",
            "addlo fp, fp, r8",
            "rsb r7, r7, fp",
            "mov r1, r5",
            "mov r0, r7",
            "uxth sl, sl",
            "bl fcn.000550a8",
            "mov r0, r7",
            "mov fp, r1",
            "mov r1, r5",
            "orr fp, sl, fp, lsl 16",
            "bl fcn.00055000",
            "mul r6, r6, r0",
            "cmp fp, r6",
            "bhs 0x56230",
            "adds fp, fp, r8",
            "sub r0, r0, 1",
            "bhs 0x56230",
            "cmp fp, r6",
            "sublo r0, r0, 1",
            "orr r4, r0, r4, lsl 16",
            "b 0x56524",
            "cmp r2, 0",
            "bne 0x56250",
            "mov r0, 1",
            "mov r1, r2",
            "bl fcn.00055000",
            "mov r8, r0",
            "clz r3, r8",
            "cmp r3, 0",
            "rsbeq r4, r8, r4",
            "moveq r7, 1",
            "beq 0x56324",
            "lsl r8, r8, r3",
            "rsb sb, r3, 0x20",
            "lsr r7, r4, sb",
            "lsr sb, r5, sb",
            "lsr r6, r8, 0x10",
            "uxth fp, r8",
            "orr sb, sb, r4, lsl r3",
            "lsl sl, r5, r3",
            "mov r0, r7",
            "mov r1, r6",
            "bl fcn.000550a8",
            "mov r0, r7",
            "mov r4, r1",
            "mov r1, r6",
            "bl fcn.00055000",
            "lsr r3, sb, 0x10",
            "mul r7, fp, r0",
            "mov r5, r0",
            "orr r4, r3, r4, lsl 16",
            "cmp r4, r7",
            "bhs 0x562d0",
            "adds r4, r4, r8",
            "sub r5, r0, 1",
            "bhs 0x562d0",
            "cmp r4, r7",
            "sublo r5, r5, 1",
            "addlo r4, r4, r8",
            "rsb r7, r7, r4",
            "mov r1, r6",
            "mov r0, r7",
            "uxth sb, sb",
            "bl fcn.000550a8",
            "mov r0, r7",
            "mov r4, r1",
            "mov r1, r6",
            "orr r4, sb, r4, lsl 16",
            "bl fcn.00055000",
            "mul fp, fp, r0",
            "cmp r4, fp",
            "bhs 0x5631c",
            "adds r4, r4, r8",
            "sub r0, r0, 1",
            "bhs 0x5631c",
            "cmp r4, fp",
            "sublo r0, r0, 1",
            "addlo r4, r4, r8",
            "orr r7, r0, r5, lsl 16",
            "rsb r4, fp, r4",
            "lsr r5, r8, 0x10",
            "mov r0, r4",
            "uxth r6, r8",
            "mov r1, r5",
            "bl fcn.000550a8",
            "mov r0, r4",
            "mov fp, r1",
            "mov r1, r5",
            "bl fcn.00055000",
            "lsr r3, sl, 0x10",
            "mul sb, r6, r0",
            "mov r4, r0",
            "orr fp, r3, fp, lsl 16",
            "cmp fp, sb",
            "bhs 0x56378",
            "adds fp, fp, r8",
            "sub r4, r0, 1",
            "bhs 0x56378",
            "cmp fp, sb",
            "sublo r4, r4, 1",
            "addlo fp, fp, r8",
            "rsb sb, sb, fp",
            "mov r1, r5",
            "mov r0, sb",
            "uxth sl, sl",
            "bl fcn.000550a8",
            "mov r0, sb",
            "mov fp, r1",
            "mov r1, r5",
            "orr fp, sl, fp, lsl 16",
            "bl fcn.00055000",
            "mul r6, r6, r0",
            "cmp fp, r6",
            "bhs 0x563c0",
            "adds fp, fp, r8",
            "sub r0, r0, 1",
            "bhs 0x563c0",
            "cmp fp, r6",
            "sublo r0, r0, 1",
            "orr r4, r0, r4, lsl 16",
            "b 0x5653c",
            "cmp r3, r1",
            "bhi 0x5652c",
            "clz r7, r3",
            "cmp r7, 0",
            "bne 0x563f8",
            "cmp r1, r3",
            "cmpls r0, r2",
            "movlo r4, 0",
            "movhs r4, 1",
            "movhs r4, 1",
            "bhs 0x5653c",
            "b 0x56534",
            "rsb r1, r7, 0x20",
            "lsr r6, r2, r1",
            "lsr sb, r4, r1",
            "lsr r1, r0, r1",
            "lsl r2, r2, r7",
            "orr r6, r6, r3, lsl r7",
            "orr r4, r1, r4, lsl r7",
            "mov r0, sb",
            "lsr r8, r6, 0x10",
            "uxth sl, r6",
            "str r2, [sp, 4]",
            "mov r1, r8",
            "bl fcn.000550a8",
            "mov r0, sb",
            "mov fp, r1",
            "mov r1, r8",
            "bl fcn.00055000",
            "lsr r2, r4, 0x10",
            "mul r3, sl, r0",
            "mov sb, r0",
            "orr fp, r2, fp, lsl 16",
            "cmp fp, r3",
            "bhs 0x5646c",
            "adds fp, fp, r6",
            "sub sb, r0, 1",
            "bhs 0x5646c",
            "cmp fp, r3",
            "sublo sb, sb, 1",
            "addlo fp, fp, r6",
            "rsb fp, r3, fp",
            "mov r1, r8",
            "mov r0, fp",
            "uxth r4, r4",
            "bl fcn.000550a8",
            "mov r0, fp",
            "mov r3, r1",
            "mov r1, r8",
            "str r3, [sp]",
            "bl fcn.00055000",
            "ldr r3, [sp]",
            "mul sl, sl, r0",
            "orr r3, r4, r3, lsl 16",
            "cmp r3, sl",
            "bhs 0x564c0",
            "adds r3, r3, r6",
            "sub r0, r0, 1",
            "bhs 0x564c0",
            "cmp r3, sl",
            "sublo r0, r0, 1",
            "addlo r3, r3, r6",
            "rsb r3, sl, r3",
            "orr r4, r0, sb, lsl 16",
            "ldr r8, [sp, 4]",
            "lsr r0, r4, 0x10",
            "lsr r1, r8, 0x10",
            "bic ip, r4, r0, lsl 16",
            "bic r6, r8, r1, lsl 16",
            "mul r2, ip, r6",
            "mul r6, r0, r6",
            "mul ip, r1, ip",
            "mul r1, r0, r1",
            "adds ip, r6, ip",
            "addhs r1, r1, 0x10000",
            "adds r2, r2, ip, lsl 16",
            "adc r1, r1, ip, lsr 16",
            "cmp r1, r3",
            "bhi 0x56520",
            "movne r3, 0",
            "moveq r3, 1",
            "cmp r2, r5, lsl r7",
            "movls r7, 0",
            "andhi r7, r3, 1",
            "cmp r7, 0",
            "beq 0x5653c",
            "sub r4, r4, 1",
            "mov r7, 0",
            "b 0x5653c",
            "mov r7, 0",
            "b 0x56538",
            "mov r7, r4",
            "mov r4, r7",
            "mov r0, r4",
            "mov r1, r7",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    }
}