{
    "sym.dhd_reboot_callback": {
        "function_address": "0x08004914",
        "instructions": [
            "ldr r3, [0x0800495c]",
            "push {r4, lr}",
            "mov r4, r1",
            "ldr r3, [r3]",
            "tst r3, 2",
            "bne 0x8004948",
            "cmp r4, 1",
            "beq 0x800493c",
            "mov r0, 0",
            "pop {r4, pc}",
            "bl sym.dhd_module_cleanup",
            "mov r0, 0",
            "pop {r4, pc}",
            "mov r2, r1",
            "ldr r0, [0x08004960]",
            "ldr r1, [0x08004964]",
            "bl printk",
            "b 0x800492c"
        ]
    },
    "sym.dhd_module_cleanup": {
        "function_address": "0x080048d8",
        "instructions": [
            "ldr r3, [0x08004908]",
            "push {r4, lr}",
            "ldr r3, [r3]",
            "tst r3, 2",
            "bne 0x80048f8",
            "bl dhd_bus_unregister",
            "pop {r4, lr}",
            "b dhd_wifi_platform_unregister_drv",
            "ldr r1, [0x0800490c]",
            "ldr r0, [0x08004910]",
            "bl printk",
            "b dhd_bus_unregister"
        ]
    },
    "sym.dhd_rxf_thread": {
        "function_address": "0x08005640",
        "instructions": [
            "ldr r3, [0x080057a8]",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r8, r0",
            "sub sp, sp, 0x14",
            "ldr r6, [r0]",
            "ldr r1, [r3, 0x11c]",
            "cmp r1, 0",
            "ble 0x8005688",
            "mov r2, sp",
            "cmp r1, 0x63",
            "movge r1, 0x63",
            "bic r3, r2, 0x1fc0",
            "add r2, sp, 0x10",
            "bic r3, r3, 0x3f",
            "str r1, [r2, -4]!",
            "ldr r0, [r3, 0xc]",
            "mov r1, 1",
            "bl setScheduler",
            "add r3, r8, 0x28",
            "ldr r0, [0x080057ac]",
            "str r3, [sp, 4]",
            "add sb, r8, 0x14",
            "bl daemonize",
            "mov r0, 9",
            "ldr sl, [0x080057b0]",
            "bl allow_signal",
            "mov r0, 0xf",
            "movw r7, 0x178c",
            "bl allow_signal",
            "ldr r0, [sp, 4]",
            "mov r5, 0",
            "bl complete",
            "mov r0, sb",
            "bl down_interruptible",
            "cmp r0, 0",
            "bne 0x800575c",
            "ldr r3, [r8, 0x24]",
            "cmp r3, 0",
            "bne 0x800575c",
            "ldr r0, [r6, 0x14]",
            "str r3, [sp]",
            "add r0, r0, 0x3940",
            "add r0, r0, 0x3c",
            "bl _raw_spin_lock_bh",
            "ldr fp, [r6, r7]",
            "movw r2, 0x1788",
            "ldr r1, [r6, r2]",
            "ldr r3, [sp]",
            "add r2, fp, 0x1e0",
            "add r2, r2, 2",
            "ldr r4, [r6, r2, lsl 2]",
            "cmp r4, 0",
            "beq 0x8005768",
            "str r3, [r6, r2, lsl 2]",
            "add r3, fp, 1",
            "ldr r2, [sl]",
            "lsl r3, r3, 0x16",
            "lsr r3, r3, 0x16",
            "tst r2, 2",
            "str r3, [r6, r7]",
            "bne 0x8005794",
            "ldr r0, [r6, 0x14]",
            "bl fcn.080054e8",
            "ldr fp, [r4]",
            "mov r0, r4",
            "str r5, [r4]",
            "bl netif_rx_ni",
            "cmp fp, 0",
            "beq 0x80056c0",
            "mov r4, fp",
            "b 0x800573c",
            "ldr r0, [sp, 4]",
            "mov r1, 0",
            "bl complete_and_exit",
            "ldr r0, [r6, 0x14]",
            "str r1, [sp]",
            "bl fcn.080054e8",
            "ldr r3, [sl]",
            "ldr r1, [sp]",
            "tst r3, 1",
            "beq 0x80056c0",
            "mov r2, fp",
            "ldr r0, [0x080057b4]",
            "bl printk",
            "b 0x80056c0",
            "mov r1, r4",
            "mov r2, fp",
            "ldr r0, [0x080057b8]",
            "bl printk",
            "b 0x8005734"
        ]
    },
    "fcn.080054e8": {
        "function_address": "0x080054e8",
        "instructions": [
            "add r0, r0, 0x3940",
            "add r0, r0, 0x3c",
            "b _raw_spin_unlock_bh"
        ]
    },
    "sym.dhd_open": {
        "function_address": "0x08008a68",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r5, r0",
            "ldr r6, [r0, 0x380]",
            "add r7, r6, 8",
            "mov r0, r7",
            "bl dhd_perim_lock",
            "mov r3, 0",
            "add r2, r6, 0x1800",
            "add r2, r2, 4",
            "mov r4, r3",
            "strb r3, [r6, 0x275]",
            "str r3, [r6, 0x278]",
            "ldr r3, [r2, 4]!",
            "cmp r3, 0",
            "beq 0x8008ab8",
            "ldr r3, [r3, 8]",
            "cmp r3, 0",
            "beq 0x8008ab8",
            "cmp r5, r3",
            "beq 0x8008ac8",
            "add r4, r4, 1",
            "cmp r4, 0x10",
            "bne 0x8008a98",
            "mvn r4, 0xe",
            "ldr r8, [0x08008bec]",
            "ldr r3, [r8]",
            "tst r3, 2",
            "bne 0x8008bc4",
            "cmp r4, 0",
            "blt 0x8008b8c",
            "add r3, r4, 0x600",
            "add r3, r3, 2",
            "ldr r3, [r6, r3, lsl 2]",
            "cmp r3, 0",
            "beq 0x8008ba8",
            "cmp r4, 0",
            "bne 0x8008b44",
            "ldr r3, [r6, 0x1c]",
            "movw r2, 0x39ac",
            "str r4, [r6, r2]",
            "cmp r3, 2",
            "beq 0x8008b34",
            "mov r0, r7",
            "bl dhd_perim_unlock",
            "mov r0, r7",
            "bl dhd_bus_start",
            "mov r4, r0",
            "mov r0, r7",
            "bl dhd_perim_lock",
            "cmp r4, 0",
            "bne 0x8008b70",
            "ldr r0, [r5, 0x160]",
            "add r1, r6, 0x34",
            "mov r2, 6",
            "bl memcpy",
            "ldr r1, [r5, 0x220]",
            "mov r0, 0",
            "mov r4, r0",
            "add r1, r1, 8",
            "bl _clear_bit_le",
            "mov r3, 1",
            "strb r3, [r6, 0x18]",
            "mov r0, r7",
            "bl dhd_perim_unlock",
            "mov r0, r4",
            "pop {r4, r5, r6, r7, r8, pc}",
            "ldr r3, [r8]",
            "tst r3, 1",
            "bne 0x8008bd8",
            "mov r0, r5",
            "mvn r4, 0",
            "bl sym.dhd_stop",
            "b 0x8008b60",
            "ldr r3, [r8]",
            "tst r3, 1",
            "beq 0x8008b7c",
            "ldr r1, [0x08008bf0]",
            "ldr r0, [0x08008bf4]",
            "bl printk",
            "b 0x8008b7c",
            "ldr r3, [r8]",
            "tst r3, 1",
            "beq 0x8008b7c",
            "ldr r1, [0x08008bf0]",
            "ldr r0, [0x08008bf8]",
            "bl printk",
            "b 0x8008b7c",
            "mov r2, r4",
            "ldr r1, [0x08008bf0]",
            "ldr r0, [0x08008bfc]",
            "bl printk",
            "b 0x8008ad8",
            "ldr r1, [0x08008bf0]",
            "mov r2, r4",
            "ldr r0, [0x08008c00]",
            "bl printk",
            "b 0x8008b7c"
        ]
    },
    "sym.dhd_stop": {
        "function_address": "0x080057bc",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sl, lr}",
            "mov r5, r0",
            "ldr r4, [r0, 0x380]",
            "add r7, r0, 0x380",
            "add r6, r4, 8",
            "mov r0, r6",
            "bl dhd_perim_lock",
            "ldr r3, [0x080058b4]",
            "ldr r3, [r3]",
            "tst r3, 2",
            "bne 0x80058a0",
            "ldrb r3, [r4, 0x18]",
            "cmp r3, 0",
            "beq 0x8005868",
            "ldr r8, [r7, 4]",
            "cmp r8, 0",
            "beq 0x8005848",
            "ldr r0, [r8, 4]",
            "cmp r0, 0",
            "beq 0x8005848",
            "mov sl, r8",
            "ldr r1, [sl, 0x98]!",
            "cmp sl, r1",
            "ldr r7, [r1], -0x20",
            "beq 0x8005848",
            "sub r7, r7, 0x20",
            "b fwder_flush",
            "ldr r0, [r8, 4]",
            "bl fwder_flush",
            "mov r3, r7",
            "mov r1, r7",
            "ldr r7, [r3, 0x20]!",
            "cmp sl, r3",
            "sub r7, r7, 0x20",
            "bne 0x8005828",
            "ldr r1, [r5, 0x220]",
            "mov r0, 0",
            "add r1, r1, 8",
            "bl _set_bit_le",
            "mov r3, 0",
            "mov r0, r6",
            "strb r3, [r4, 0x18]",
            "bl dhd_prot_stop",
            "ldr r2, [0x080058b8]",
            "mov r3, 0",
            "mov r0, r6",
            "str r3, [r4, 0x27c]",
            "str r3, [r4, 0x280]",
            "ldr r2, [r2, 0x120]",
            "str r3, [r4, 0x278]",
            "cmp r2, r3",
            "strbeq r2, [r4, 0x254]",
            "streq r2, [r4, 0x258]",
            "strbeq r2, [r4, 0x25c]",
            "bl dhd_perim_unlock",
            "mov r0, 0",
            "pop {r3, r4, r5, r6, r7, r8, sl, pc}",
            "mov r2, r5",
            "ldr r1, [0x080058bc]",
            "ldr r0, [0x080058c0]",
            "bl printk",
            "b 0x80057e8"
        ]
    },
    "sym.dhd_forward": {
        "function_address": "0x080209a0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r0",
            "sub sp, sp, 0x24",
            "ldr r0, [r0, 0x3c]",
            "mov fp, r1",
            "str r2, [sp, 0x10]",
            "str r3, [sp, 0x18]",
            "ldrh sb, [r4, 0x28]",
            "bl 0x80209c0",
            "ldr r0, [sp, 0x10]",
            "cmp r0, 0",
            "ble 0x8020b88",
            "ldr r1, [0x08020d0c]",
            "mov r2, 0",
            "str r2, [sp, 0xc]",
            "mov r5, r2",
            "str r1, [sp, 0x14]",
            "sub r6, r1, 0x220",
            "b 0x8020b1c",
            "mov r0, r4",
            "mov r1, r8",
            "mov r2, 0x10",
            "str r3, [sp, 8]",
            "bl 0x80209fc",
            "cmn r0, 1",
            "mov sl, r0",
            "ldr r3, [sp, 8]",
            "beq 0x8020c6c",
            "ldrb r2, [r8, 0xc]",
            "ldrb r1, [r8, 0xd]",
            "orr r2, r2, r1, lsl 8",
            "cmp r2, 8",
            "beq 0x8020a30",
            "movw ip, 0xdd86",
            "subs r3, r2, ip",
            "movne r3, 1",
            "ldr r0, [sp, 0xc]",
            "cmp sl, r0",
            "beq 0x8020c90",
            "ldr r6, [sl, 0x14]",
            "ldr r2, [0x08020d10]",
            "ldr r1, [r6, 8]",
            "cmp r1, r2",
            "beq 0x8020cf4",
            "ldr r2, [r6]",
            "ldrb ip, [r6, 0x8c]",
            "add r0, r2, 8",
            "ldr lr, [r2, 0x1c]",
            "str r0, [sp, 0x14]",
            "movw r0, 0x17c9",
            "str ip, [sp, 0xc]",
            "ldrb ip, [r2, r0]",
            "ldr r0, [r6, 0xc]",
            "ldrb r2, [r2, 0x18]",
            "cmn r0, 0xf",
            "cmpne lr, 0",
            "ldr r0, [sp, 0xc]",
            "movne lr, 0",
            "moveq lr, 1",
            "eor r2, r2, 1",
            "orr lr, lr, ip",
            "orr lr, lr, r2",
            "orrs lr, lr, r3",
            "orrne r0, r0, 1",
            "cmp r0, 0",
            "strne r1, [r7, 0x2c]",
            "movne r1, 0",
            "strne r1, [sp, 0xc]",
            "bne 0x8020af0",
            "str r1, [r7, 0x2c]",
            "ldrb r3, [r8, 0xe]",
            "lsr r2, r3, 4",
            "cmp r2, 4",
            "beq 0x8020cb0",
            "cmp r2, 6",
            "ubfxeq r3, r3, 1, 3",
            "movne r3, 0",
            "add r2, sl, r3, lsl 1",
            "str r3, [r7, 0x88]",
            "ldrh r8, [r2, 4]",
            "movw r2, 0xffff",
            "cmp r8, r2",
            "bne 0x8020bd8",
            "str sl, [sp, 0xc]",
            "mov r1, r7",
            "mov r0, r4",
            "bl 0x8020af8",
            "mov r0, r7",
            "mov r2, 1",
            "ldr r1, [r7, 0x2c]",
            "bl sym.dhd_start_xmit_try",
            "ldr r0, [sp, 0x10]",
            "add r5, r5, 1",
            "cmp r0, r5",
            "ble 0x8020b88",
            "ldr r7, [fp], 4",
            "ldr r8, [r7, 0xbc]",
            "ldrb r3, [r8, sb]",
            "add r8, r8, sb",
            "ands r3, r3, 1",
            "beq 0x80209ec",
            "ldr r3, [sp, 0x18]",
            "mov r0, r4",
            "mov r1, r7",
            "add r5, r5, 1",
            "str r3, [r7, 0x2c]",
            "bl 0x8020b48",
            "ldr r0, [r4, 0x2c]",
            "mov r1, r7",
            "mov r2, 1",
            "bl 0x8020b58",
            "movw ip, 0",
            "ldr r2, [r4, 0x2c]",
            "movt ip, 0",
            "mov r0, r4",
            "mov r1, r7",
            "mov r3, 0",
            "str ip, [sp]",
            "bl 0x8020b78",
            "ldr r0, [sp, 0x10]",
            "cmp r0, r5",
            "bgt 0x8020b1c",
            "ldr r5, [0x08020d14]",
            "ldr r7, [r4, 0x3c]",
            "add r6, r5, 0x30",
            "ldr r3, [r5]",
            "ldr r2, [r5, 8]",
            "add r5, r5, 0xc",
            "cmp r7, r2",
            "movne r2, 0",
            "moveq r2, 1",
            "cmp r3, 0",
            "moveq r2, 0",
            "cmp r2, 0",
            "bne 0x8020c60",
            "cmp r5, r6",
            "bne 0x8020b94",
            "ldr r0, [r4, 0x3c]",
            "bl 0x8020bc8",
            "mov r0, 0",
            "add sp, sp, 0x24",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r3, [sp, 0x14]",
            "mov r1, r7",
            "ldr ip, [r7, 0x78]",
            "mov r2, 1",
            "ldr r0, [r3]",
            "str ip, [sp, 0x1c]",
            "bl 0x8020bf0",
            "ldr r3, [r7, 0x6c]",
            "mov r1, r7",
            "strh r8, [r7, 0x30]",
            "mov r2, r8",
            "strh sb, [r7, 0x32]",
            "orr r3, r3, 0x10",
            "str r3, [r7, 0x6c]",
            "ldr r3, [sp, 0x14]",
            "ldr r0, [r3, 4]",
            "bl 0x8020c18",
            "cmp r0, 0",
            "bne 0x8020cbc",
            "ldr ip, [sp, 0x14]",
            "ldr r0, [sp, 0x1c]",
            "str sl, [sp, 0xc]",
            "ldr r3, [ip, 0x58]",
            "add r3, r3, 1",
            "str r3, [ip, 0x58]",
            "ldr r3, [r6, 0x3c]",
            "ldr r2, [r6, 0x34]",
            "add r3, r0, r3",
            "sub r3, r3, 4",
            "add r2, r2, 1",
            "rsb r3, sb, r3",
            "str r2, [r6, 0x34]",
            "str r3, [r6, 0x3c]",
            "b 0x8020b0c",
            "ldr r0, [r3, 4]",
            "bl 0x8020c64",
            "b 0x8020bbc",
            "mov r0, r4",
            "bl 0x8020c70",
            "cmp r0, 0",
            "strne r0, [r7, 0x2c]",
            "bne 0x8020af0",
            "mov r0, r4",
            "mov r1, r7",
            "bl 0x8020c88",
            "b 0x8020b0c",
            "cmp r3, 0",
            "ldreq r1, [r6, 8]",
            "bne 0x8020a3c",
            "str r1, [r7, 0x2c]",
            "ldrb r3, [r8, 0xe]",
            "lsr r2, r3, 4",
            "cmp r2, 4",
            "bne 0x8020ac8",
            "ldrb r3, [r8, 0xf]",
            "asr r3, r3, 5",
            "b 0x8020ad4",
            "ldr r1, [sp, 0x14]",
            "mov r2, 0",
            "str sl, [sp, 0xc]",
            "ldr r0, [r1]",
            "mov r1, r7",
            "bl 0x8020cd0",
            "ldr r2, [sp, 0x14]",
            "ldr r3, [r2, 0x5c]",
            "add r3, r3, 1",
            "str r3, [r2, 0x5c]",
            "ldr r3, [r6, 0x4c]",
            "add r3, r3, 1",
            "str r3, [r6, 0x4c]",
            "b 0x8020b0c",
            "mov r0, r4",
            "mov r1, r7",
            "bl 0x8020cfc",
            "mov r3, 0",
            "str r3, [sp, 0xc]",
            "b 0x8020b0c"
        ]
    },
    "sym.dhd_start_xmit_try": {
        "function_address": "0x08020558",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r5, r1",
            "ldr r8, [0x08020980]",
            "sub sp, sp, 0xc",
            "mov sl, r0",
            "mov r6, r2",
            "add r7, r1, 0x380",
            "ldr r4, [r1, 0x380]",
            "ldr r3, [r8]",
            "tst r3, 2",
            "bne 0x8020920",
            "cmp r6, 0",
            "ldr r3, [r4, 4]",
            "beq 0x80206a8",
            "ldr r3, [r4, 0x1c]",
            "cmp r3, 0",
            "bne 0x80205e8",
            "ldr r2, [r8]",
            "tst r2, 1",
            "bne 0x802090c",
            "ldr r1, [r5, 0x220]",
            "mov r0, 0",
            "add r1, r1, 8",
            "bl 0x80205b4",
            "cmp r6, 0",
            "ldr r3, [r4, 4]",
            "movne r0, 0x10",
            "bne 0x80205e0",
            "ldr r2, [0x08020984]",
            "add r3, r3, r3, lsl 1",
            "add r0, r2, r3, lsl 2",
            "add r0, r0, 4",
            "bl 0x80205d8",
            "mov r0, 0x10",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r2, [r4, 0x278]",
            "cmp r2, 0",
            "bne 0x802059c",
            "ldmib r7, {r7, sb}",
            "cmn sb, 0xf",
            "beq 0x8020838",
            "ldr r5, [sl, 0xbc]",
            "tst r5, 1",
            "bne 0x80206dc",
            "ldr fp, [sl, 0x78]",
            "ldr r0, [r4, 8]",
            "mov r1, sl",
            "bl 0x8020618",
            "subs r5, r0, 0",
            "beq 0x8020858",
            "ldrb r2, [r7, 0x8c]",
            "ldr r3, [r5, 0xbc]",
            "cmp r2, 0",
            "beq 0x8020654",
            "ldrb r1, [r3, 0xd]",
            "ldrb r2, [r3, 0xc]",
            "orr r2, r2, r1, lsl 8",
            "lsr r1, r2, 8",
            "orr r2, r1, r2, lsl 8",
            "sxth r2, r2",
            "cmp r2, 0x800",
            "beq 0x802071c",
            "add r8, r4, 8",
            "mov r0, r8",
            "mov r1, sb",
            "mov r2, r5",
            "bl 0x8020664",
            "cmp r0, 0",
            "bne 0x802086c",
            "ldr r3, [r4, 0x60]",
            "add r3, r3, 1",
            "str r3, [r4, 0x60]",
            "ldr r3, [r7, 0x34]",
            "ldr r2, [r7, 0x3c]",
            "add r3, r3, 1",
            "add fp, r2, fp",
            "str r3, [r7, 0x34]",
            "str fp, [r7, 0x3c]",
            "cmp r6, 0",
            "ldr r3, [r4, 4]",
            "beq 0x80206c0",
            "mov r0, 0",
            "b 0x80205e0",
            "ldr r2, [0x08020984]",
            "add r3, r3, r3, lsl 1",
            "add r0, r2, r3, lsl 2",
            "add r0, r0, 4",
            "bl 0x80206b8",
            "b 0x8020590",
            "ldr r2, [0x08020984]",
            "add r3, r3, r3, lsl 1",
            "add r0, r2, r3, lsl 2",
            "add r0, r0, 4",
            "bl 0x80206d0",
            "mov r0, r6",
            "b 0x80205e0",
            "ldr fp, [sl, 0x78]",
            "mov r1, 1",
            "mov r0, sl",
            "bl 0x80206e8",
            "ldr r0, [sl, 0xbc]",
            "mov r1, r5",
            "mov r2, fp",
            "bl 0x80206f8",
            "ldr r3, [sl, 0x7c]",
            "cmp r3, 0",
            "bne 0x8020954",
            "ldr r3, [sl, 0xbc]",
            "str fp, [sl, 0x78]",
            "add r3, r3, fp",
            "str r3, [sl, 0xb0]",
            "b 0x8020610",
            "ldrb r2, [r3, 0xe]",
            "add r0, r3, 0xe",
            "lsr r1, r2, 4",
            "cmp r1, 4",
            "bne 0x8020654",
            "ldrb r3, [r3]",
            "tst r3, 1",
            "bne 0x8020758",
            "ldrb r3, [r0, 9]",
            "cmp r3, 2",
            "bne 0x8020654",
            "movw r3, 0x17c6",
            "ldrb r3, [r4, r3]",
            "cmp r3, 0",
            "beq 0x8020654",
            "movw r3, 0x17c8",
            "ldr ip, [r0, 0x10]",
            "ldrb r3, [r4, r3]",
            "rev ip, ip",
            "cmp r3, 0",
            "moveq ip, r3",
            "beq 0x8020780",
            "cmn ip, 0x10000006",
            "movne ip, 0",
            "moveq ip, 1",
            "movw r3, 0x17c7",
            "ldrb r3, [r4, r3]",
            "cmp r3, 0",
            "beq 0x80207a0",
            "ldrb r3, [r0, 9]",
            "cmp r3, 2",
            "movne r3, 0",
            "beq 0x802093c",
            "orrs ip, r3, ip",
            "beq 0x80208c0",
            "mov sl, r7",
            "ldr r3, [sl, 0x98]!",
            "mov r8, r3",
            "ldr r2, [r8], -0x20",
            "pld [r2]",
            "cmp sl, r3",
            "beq 0x8020888",
            "mov sb, 1",
            "b 0x80207f0",
            "ldr r0, [r7, 0x94]",
            "str sb, [sp]",
            "bl 0x80207d4",
            "ldr r3, [r8, 0x20]",
            "mov r8, r3",
            "ldr r2, [r8], -0x20",
            "pld [r2]",
            "cmp sl, r3",
            "beq 0x8020888",
            "mov r1, r5",
            "ldr r0, [r4, 8]",
            "bl 0x80207f8",
            "subs r1, r0, 0",
            "mov r3, r8",
            "mov r2, 0",
            "bne 0x80207cc",
            "cmp r6, r2",
            "ldr r3, [r4, 4]",
            "movne r0, 1",
            "bne 0x80205e0",
            "ldr r2, [0x08020984]",
            "mov r1, 0xc",
            "mla r3, r1, r3, r2",
            "add r0, r3, 4",
            "bl 0x802082c",
            "mov r0, 1",
            "b 0x80205e0",
            "ldr r3, [r8]",
            "tst r3, 1",
            "beq 0x80205a8",
            "mov r2, sb",
            "ldr r1, [0x08020988]",
            "ldr r0, [0x0802098c]",
            "bl 0x8020850",
            "b 0x80205a8",
            "ldr r3, [r8]",
            "tst r3, 1",
            "bne 0x8020964",
            "mov r0, sl",
            "bl 0x8020868",
            "ldr r3, [r7, 0x4c]",
            "add r3, r3, 1",
            "str r3, [r7, 0x4c]",
            "ldr r3, [r4, 0x64]",
            "add r3, r3, 1",
            "str r3, [r4, 0x64]",
            "b 0x8020694",
            "cmp r6, 0",
            "ldr r2, [r4, 4]",
            "bne 0x80208a8",
            "ldr r3, [0x08020984]",
            "mov r0, 0xc",
            "mla r0, r0, r2, r3",
            "add r0, r0, 4",
            "bl 0x80208a4",
            "ldr r0, [r4, 8]",
            "mov r1, r5",
            "mov r2, 1",
            "bl 0x80208b4",
            "mov r0, 0",
            "b 0x80205e0",
            "add r8, r4, 8",
            "mov r1, r5",
            "mov r0, r8",
            "mov r2, ip",
            "mov r3, sb",
            "str ip, [sp]",
            "bl 0x80208d8",
            "cmp r0, 0",
            "bne 0x8020930",
            "cmp r6, 0",
            "ldr r3, [r4, 4]",
            "bne 0x80206a0",
            "ldr r2, [0x08020984]",
            "mov r1, 0xc",
            "mla r3, r1, r3, r2",
            "add r0, r3, 4",
            "bl 0x8020900",
            "mov r0, r6",
            "b 0x80205e0",
            "ldr r1, [0x08020988]",
            "ldrb r2, [r4, 0x18]",
            "ldr r0, [0x08020990]",
            "bl 0x8020918",
            "b 0x80205a8",
            "ldr r1, [0x08020988]",
            "ldr r0, [0x08020994]",
            "bl 0x8020928",
            "b 0x8020584",
            "cmp r0, 2",
            "bne 0x8020658",
            "b 0x80208e4",
            "and r2, r2, 0xf",
            "ldrb r3, [r0, r2, lsl 2]",
            "cmp r3, 0x11",
            "movne r3, 0",
            "moveq r3, 1",
            "b 0x80207a0",
            "ldr r0, [0x08020998]",
            "movw r1, 0x5c4",
            "bl 0x802095c",
            "b 0x802060c",
            "mov r1, sb",
            "add r0, r4, 8",
            "bl 0x802096c",
            "mov r1, r0",
            "ldr r0, [0x0802099c]",
            "bl 0x8020978",
            "b 0x8020864"
        ]
    },
    "sym.dhd_ioctl_entry": {
        "function_address": "0x08009e20",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r7, r0",
            "ldr r5, [r0, 0x380]",
            "sub sp, sp, 0x24",
            "mov r8, r2",
            "mov sl, r1",
            "mov r4, 0",
            "add r6, r5, 8",
            "mov r0, r6",
            "bl dhd_perim_lock",
            "add r2, r5, 0x1800",
            "add r2, r2, 4",
            "ldr r3, [r2, 4]!",
            "cmp r3, 0",
            "beq 0x8009e70",
            "ldr r3, [r3, 8]",
            "cmp r3, 0",
            "beq 0x8009e70",
            "cmp r7, r3",
            "beq 0x8009e80",
            "add r4, r4, 1",
            "cmp r4, 0x10",
            "bne 0x8009e50",
            "mvn r4, 0xe",
            "ldr r7, [0x0800a158]",
            "ldr r3, [r7]",
            "tst r3, 2",
            "bne 0x800a130",
            "cmn r4, 0xf",
            "beq 0x800a0e0",
            "movw r3, 0x8946",
            "cmp r8, r3",
            "beq 0x800a080",
            "movw r3, 0x89f0",
            "cmp r8, r3",
            "bne 0x800a09c",
            "add r8, sp, 4",
            "mov r1, 0x1c",
            "mov r0, r8",
            "bl __memzero",
            "mov r3, sp",
            "ldr r1, [sl, 0x10]",
            "bic r7, r3, 0x1fc0",
            "bic r7, r7, 0x3f",
            "ldr r3, [r7, 8]",
            "adds r2, r1, 0x18",
            "sbcslo r2, r2, r3",
            "movlo r3, 0",
            "cmp r3, 0",
            "bne 0x800a034",
            "mov r0, r8",
            "mov r2, 0x18",
            "bl __copy_from_user",
            "cmp r0, 0",
            "bne 0x800a078",
            "ldr r1, [sl, 0x10]",
            "ldr r3, [r7, 8]",
            "add r1, r1, 0x18",
            "adds r2, r1, 4",
            "sbcslo r2, r2, r3",
            "movlo r3, 0",
            "cmp r3, 0",
            "bne 0x800a064",
            "add r0, r8, 0x18",
            "mov r2, 4",
            "bl __copy_from_user",
            "cmp r0, 0",
            "bne 0x800a078",
            "mov r0, 0xc",
            "bl capable",
            "cmp r0, 0",
            "mvneq r4, 0x19",
            "beq 0x800a044",
            "ldr r3, [sp, 0xc]",
            "cmp r3, 0",
            "beq 0x800a0ac",
            "cmp r3, 0x2000",
            "movhs r3, 0x2000",
            "ldr r0, [r5, 8]",
            "uxth sl, r3",
            "add fp, sl, 1",
            "mov r1, fp",
            "bl osl_malloc",
            "subs sb, r0, 0",
            "mvneq r4, 0x1a",
            "beq 0x800a044",
            "mov r0, r6",
            "bl dhd_perim_unlock",
            "ldr r3, [r7, 8]",
            "ldr r1, [sp, 8]",
            "adds r2, r1, sl",
            "sbcslo r2, r2, r3",
            "movlo r3, 0",
            "cmp r3, 0",
            "beq 0x800a0fc",
            "cmp sl, 0",
            "bne 0x800a120",
            "mov r0, r6",
            "bl dhd_perim_lock",
            "mov r3, 0",
            "mov r1, r4",
            "strb r3, [sb, sl]",
            "mov r0, r6",
            "mov r3, sb",
            "mov r2, r8",
            "bl dhd_ioctl_process",
            "rsbs r3, r0, 1",
            "movlo r3, 0",
            "cmp sl, 0",
            "moveq r3, 0",
            "mov r4, r0",
            "cmp r3, 0",
            "beq 0x800a020",
            "ldr r4, [sp, 8]",
            "cmp r4, 0",
            "beq 0x800a020",
            "mov r0, r6",
            "bl dhd_perim_unlock",
            "ldr r3, [r7, 8]",
            "ldr r0, [sp, 8]",
            "adds r2, r0, sl",
            "sbcslo r2, r2, r3",
            "movlo r3, 0",
            "cmp r3, 0",
            "beq 0x800a0c4",
            "mvn r4, 0xd",
            "mov r0, r6",
            "bl dhd_perim_lock",
            "ldr r0, [r5, 8]",
            "mov r1, sb",
            "mov r2, fp",
            "bl osl_mfree",
            "b 0x800a044",
            "mvn r4, 0x14",
            "mov r0, r8",
            "mov r1, 0x18",
            "bl __memzero",
            "mov r0, r6",
            "bl dhd_perim_unlock",
            "mov r0, r4",
            "bl osl_error",
            "mov r4, r0",
            "mov r0, r4",
            "add sp, sp, 0x24",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "add r0, r8, 0x18",
            "mov r1, 4",
            "bl __memzero",
            "mvn r4, 0x14",
            "b 0x800a044",
            "mvn r4, 0x14",
            "b 0x800a044",
            "mov r0, r5",
            "ldr r1, [sl, 0x10]",
            "bl fcn.08004c54",
            "mov r4, r0",
            "mov r0, r6",
            "bl dhd_perim_unlock",
            "b 0x800a058",
            "mov r0, r6",
            "mvn r4, 0x5e",
            "bl dhd_perim_unlock",
            "b 0x800a058",
            "mov r1, r4",
            "mov r0, r6",
            "mov r2, r8",
            "bl dhd_ioctl_process",
            "mov r4, r0",
            "b 0x800a044",
            "mov r1, sb",
            "mov r2, sl",
            "bl __copy_to_user",
            "cmp r0, 0",
            "moveq r4, r0",
            "beq 0x800a018",
            "b 0x800a014",
            "ldr r3, [r7]",
            "tst r3, 1",
            "bne 0x800a148",
            "mov r0, r6",
            "mvn r4, 0",
            "bl dhd_perim_unlock",
            "b 0x800a058",
            "mov r0, sb",
            "mov r2, sl",
            "bl __copy_from_user",
            "cmp r0, 0",
            "beq 0x8009fa4",
            "mov r0, r6",
            "mvn r4, 0x14",
            "bl dhd_perim_lock",
            "b 0x800a020",
            "mov r0, sb",
            "mov r1, sl",
            "bl __memzero",
            "b 0x800a110",
            "mov r2, r4",
            "ldr r1, [0x0800a15c]",
            "mov r3, r8",
            "ldr r0, [0x0800a160]",
            "bl printk",
            "b 0x8009e90",
            "ldr r1, [0x0800a15c]",
            "ldr r0, [0x0800a164]",
            "bl printk",
            "b 0x800a0ec"
        ]
    },
    "fcn.08004c54": {
        "function_address": "0x08004c54",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r8, r0",
            "ldr r5, [0x08004e7c]",
            "sub sp, sp, 0xf4",
            "mov r4, r1",
            "ldr r3, [r5]",
            "tst r3, 2",
            "bne 0x8004d9c",
            "mov r3, sp",
            "bic r6, r3, 0x1fc0",
            "bic r6, r6, 0x3f",
            "ldr r3, [r6, 8]",
            "adds r2, r4, 4",
            "sbcslo r2, r2, r3",
            "movlo r3, 0",
            "cmp r3, 0",
            "bne 0x8004cb8",
            "add r0, sp, 0xec",
            "mov r1, r4",
            "mov r2, 4",
            "bl __copy_from_user",
            "cmp r0, 0",
            "beq 0x8004cd0",
            "mvn r0, 0xd",
            "b 0x8004cc8",
            "add r0, sp, 0xec",
            "mov r1, 4",
            "bl __memzero",
            "mvn r0, 0xd",
            "add sp, sp, 0xf4",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r3, [sp, 0xec]",
            "cmp r3, 3",
            "mvnne r0, 0x5e",
            "bne 0x8004cc8",
            "ldr r3, [r6, 8]",
            "adds r2, r4, 0xc4",
            "sbcslo r2, r2, r3",
            "movlo r3, 0",
            "cmp r3, 0",
            "bne 0x8004d88",
            "add r7, sp, 8",
            "mov r1, r4",
            "mov r0, r7",
            "mov r2, 0xc4",
            "bl __copy_from_user",
            "subs sl, r0, 0",
            "bne 0x8004cb0",
            "add fp, sp, 0xcc",
            "add sb, r7, 4",
            "mov r2, 0x20",
            "mov r1, sb",
            "mov r0, fp",
            "bl strncpy",
            "mov r0, r7",
            "mov r1, 0xc4",
            "strb sl, [sp, 0xeb]",
            "bl __memzero",
            "ldr r3, [sp, 0xec]",
            "mov r0, fp",
            "ldr r1, [0x08004e80]",
            "str r3, [sp, 8]",
            "bl strcmp",
            "subs sl, r0, 0",
            "beq 0x8004e54",
            "ldrb r3, [r8, 0x18]",
            "cmp r3, 0",
            "bne 0x8004dac",
            "ldr r3, [r5]",
            "tst r3, 1",
            "mvneq r0, 0x12",
            "beq 0x8004cc8",
            "ldr r0, [0x08004e84]",
            "ldr r1, [0x08004e88]",
            "bl printk",
            "mvn r0, 0x12",
            "b 0x8004cc8",
            "add r0, sp, 8",
            "mov r1, 0xc4",
            "bl __memzero",
            "mvn r0, 0xd",
            "b 0x8004cc8",
            "ldr r1, [0x08004e88]",
            "ldr r0, [0x08004e8c]",
            "bl printk",
            "b 0x8004c74",
            "ldrb r3, [r8, 0x2d]",
            "cmp r3, 0",
            "beq 0x8004e40",
            "mov r0, sb",
            "mov r1, 0x20",
            "ldr r2, [0x08004e90]",
            "bl snprintf",
            "ldr r2, [0x08004e94]",
            "add r0, r7, 0x24",
            "ldr r3, [r8, 0x30]",
            "mov r1, 0x20",
            "bl snprintf",
            "ldr r3, [r6, 8]",
            "adds r2, r4, 0xc4",
            "sbcslo r2, r2, r3",
            "movlo r3, 0",
            "cmp r3, 0",
            "bne 0x8004cb0",
            "mov r0, r4",
            "mov r1, r7",
            "mov r2, 0xc4",
            "bl __copy_to_user",
            "subs r4, r0, 0",
            "bne 0x8004cb0",
            "ldr r3, [r5]",
            "ands r3, r3, 0x10",
            "moveq r0, r3",
            "beq 0x8004cc8",
            "add r7, r7, 4",
            "ldr r0, [0x08004e98]",
            "ldr r1, [0x08004e88]",
            "mov r2, 0x20",
            "mov r3, fp",
            "str r7, [sp]",
            "bl printk",
            "mov r0, r4",
            "b 0x8004cc8",
            "mov r0, sb",
            "mov r1, 0x20",
            "ldr r2, [0x08004e9c]",
            "bl snprintf",
            "b 0x8004dc8",
            "mov r1, 0x20",
            "ldr r2, [0x08004ea0]",
            "mov r0, sb",
            "bl snprintf",
            "add r0, r7, 0x24",
            "ldr r1, [0x08004ea4]",
            "mov r2, 0x1f",
            "bl strncpy",
            "strb sl, [sp, 0x4b]",
            "b 0x8004dc8"
        ]
    },
    "sym.dhd_alloc_ring_space": {
        "function_address": "0x0802116c",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sl, lr}",
            "mov r4, r1",
            "ldrb r5, [sp, 0x20]",
            "mov r1, r2",
            "mov r7, r2",
            "mov r6, r3",
            "mov r2, r3",
            "mov r8, r0",
            "mov r3, r5",
            "mov r0, r4",
            "bl fcn.08020d28",
            "subs sl, r0, 0",
            "beq 0x80211a8",
            "mov r0, sl",
            "pop {r3, r4, r5, r6, r7, r8, sl, pc}",
            "movw r3, 0x17bc",
            "ldrb r3, [r8, r3]",
            "cmp r3, 0",
            "beq 0x802120c",
            "add r0, r8, 8",
            "mov r1, 0xc",
            "ldrh r2, [r4, 2]",
            "bl 0x80211c4",
            "ldr r3, [r4, 0x34]",
            "strh r0, [r3, 2]",
            "mov r0, r4",
            "mov r1, r7",
            "mov r2, r6",
            "mov r3, r5",
            "bl fcn.08020d28",
            "subs sl, r0, 0",
            "bne 0x80211a0",
            "ldr r3, [0x08021228]",
            "ldr r3, [r3]",
            "tst r3, 4",
            "beq 0x80211a0",
            "add r1, r4, 4",
            "ldr r0, [0x0802122c]",
            "bl 0x8021204",
            "b 0x80211a0",
            "ldr r1, [r4, 0x34]",
            "mov r2, 0xf",
            "ldr r0, [r8, 4]",
            "ldrh r3, [r4, 2]",
            "add r1, r1, 2",
            "bl 0x8021220",
            "b 0x80211d0"
        ]
    },
    "fcn.08020d28": {
        "function_address": "0x08020d28",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov ip, r1",
            "ldr r1, [r0, 0x34]",
            "mov r4, r0",
            "ldrh r0, [r1, 4]",
            "ldrh r1, [r1, 2]",
            "cmp r0, r1",
            "ldrlo r5, [r4, 0x30]",
            "rsblo r6, r0, r1",
            "ldrhs r5, [r4, 0x30]",
            "rsbhs r1, r1, r0",
            "ldrhlo r5, [r5, 4]",
            "ldrhhs r5, [r5, 4]",
            "addlo r7, r5, r0",
            "rsblo r1, r1, r7",
            "sub r7, r5, 1",
            "rsbhs r6, r0, r5",
            "rsb r1, r1, r7",
            "cmp r1, r6",
            "movge r1, r6",
            "uxth r1, r1",
            "cmp r1, 0",
            "beq 0x8020de8",
            "cmp r3, 0",
            "beq 0x8020da0",
            "cmp r1, ip",
            "bhs 0x8020da0",
            "rsb r0, r0, r5",
            "cmp r0, ip",
            "bge 0x8020de8",
            "cmp r1, ip",
            "movlo ip, r1",
            "strh ip, [r2]",
            "ldr r5, [r4, 0x34]",
            "ldr r2, [r4, 0x30]",
            "ldr r1, [r4, 0x1c]",
            "ldrh r3, [r5, 4]",
            "ldrh r4, [r2, 4]",
            "ldrh r0, [r2, 6]",
            "add ip, ip, r3",
            "cmp ip, r4",
            "mla r0, r3, r0, r1",
            "moveq r3, 0",
            "strheq r3, [r5, 4]",
            "popeq {r3, r4, r5, r6, r7, pc}",
            "strhlt ip, [r5, 4]",
            "movge r0, 0",
            "pop {r3, r4, r5, r6, r7, pc}",
            "ldr r5, [0x08020e34]",
            "ldr r0, [r5]",
            "ands r0, r0, 4",
            "popeq {r3, r4, r5, r6, r7, pc}",
            "ldr r0, [0x08020e38]",
            "add r1, r4, 4",
            "mov r2, ip"
        ]
    },
    "sym.prot_get_src_addr": {
        "function_address": "0x0800ca20",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r6, r0",
            "ldr r3, [0x0800cb2c]",
            "mov r4, r1",
            "mov r5, r2",
            "ldr r3, [r3]",
            "tst r3, 2",
            "bne 0x800cb10",
            "movw r3, 0x17bc",
            "ldrb r3, [r6, r3]",
            "cmp r3, 0",
            "beq 0x800caf4",
            "add r0, r6, 8",
            "mov r1, 0xd",
            "ldrh r2, [r4, 2]",
            "bl sym.dhd_get_dmaed_index.clone.3",
            "ldr r3, [r4, 0x34]",
            "strh r0, [r3, 4]",
            "ldr r3, [r4, 0x34]",
            "ldr r1, [r4, 0x30]",
            "ldrh r2, [r3, 4]",
            "ldrh r3, [r3, 2]",
            "ldrh r0, [r1, 4]",
            "cmp r2, r3",
            "rsbhs r0, r3, r2",
            "rsblo r0, r3, r0",
            "uxthhs r0, r0",
            "uxthlo r0, r0",
            "cmp r0, 0",
            "strh r0, [r5]",
            "popeq {r3, r4, r5, r6, r7, pc}",
            "ldr r2, [r4, 0x34]",
            "ldr r1, [r4, 0x30]",
            "ldr ip, [r4, 0x1c]",
            "ldrh r7, [r2, 2]",
            "ldrh lr, [r1, 4]",
            "ldrh r6, [r1, 6]",
            "add r0, r0, r7",
            "cmp r0, lr",
            "strhlt r0, [r2, 2]",
            "mla r6, r3, r6, ip",
            "movge r3, 0",
            "strhge r3, [r2, 2]",
            "ldr r2, [r4, 0x30]",
            "mov r0, r6",
            "ldrh r3, [r5]",
            "ldrh r1, [r2, 6]",
            "mul r1, r1, r3",
            "uxth r1, r1",
            "strh r1, [r5]",
            "bl osl_cache_inv",
            "mov r0, r6",
            "pop {r3, r4, r5, r6, r7, pc}",
            "ldr r1, [r4, 0x34]",
            "mov r2, 0x10",
            "ldr r0, [r6, 4]",
            "ldrh r3, [r4, 2]",
            "add r1, r1, 4",
            "bl dhd_bus_cmn_readshared",
            "b 0x800ca68",
            "ldr r3, [r0, 8]",
            "ldr r1, [0x0800cb30]",
            "ldr r0, [0x0800cb34]",
            "ldr r2, [r3, 0x80]",
            "ldr r3, [r3, 0x90]",
            "bl printk",
            "b 0x800ca40"
        ]
    },
    "sym.dhd_get_dmaed_index.clone.3": {
        "function_address": "0x0800c8d0",
        "instructions": [
            "sub r1, r1, 0xb",
            "push {r3, r4, r5, lr}",
            "mov r4, r0",
            "mov r5, r2",
            "cmp r1, 3",
            "ldrls pc, [pc, r1, lsl 2]",
            "b 0x800c9c8",
            "tst r3, 2",
            "bne 0x800c9f8",
            "mov r0, r4",
            "pop {r3, r4, r5, pc}",
            "ldr r5, [0x0800ca10]",
            "ldr r3, [r5]",
            "ands r4, r3, 1",
            "moveq r5, r4",
            "beq 0x800c930",
            "ldr r0, [0x0800ca14]",
            "mov r4, 0",
            "ldr r1, [0x0800ca18]",
            "bl printk",
            "ldr r3, [r5]",
            "mov r5, r4",
            "b 0x800c930",
            "mov r2, r5",
            "ldr r1, [0x0800ca18]",
            "mov r3, r4",
            "ldr r0, [0x0800ca1c]",
            "bl printk",
            "b 0x800c938",
            "ands r1, r8, 0x1f",
            "mov r5, r1",
            "movne r1, 1",
            "add r8, r1, r8, lsr 5",
            "cmp r8, 0",
            "strh r8, [r4]",
            "beq 0x80191dc",
            "lsl ip, r8, 2",
            "add r2, r4, 8",
            "mov r3, 0",
            "mvn r0, 0",
            "add r3, r3, 4",
            "str r0, [r2, 4]!",
            "cmp r3, ip",
            "bne 0x80191cc",
            "cmp r1, 0",
            "beq 0x80191fc",
            "add r3, r8, 1",
            "mvn r1, 0",
            "add r3, r4, r3, lsl 2",
            "ldr r2, [r3, 4]",
            "eor r5, r2, r1, lsl r5",
            "str r5, [r3, 4]",
            "mov r0, r4",
            "pop {r3, r4, r5, r6, r7, r8, sl, pc}",
            "str r1, [r3, 4]",
            "strb sl, [r2, 0x1b]",
            "b 0x80191a0",
            "lsr r1, r1, 0xa",
            "add r2, r0, r2, lsl 2",
            "sub ip, ip, 1",
            "strh ip, [r0, 4]",
            "add r1, r1, 2",
            "ldr r4, [r2, 4]",
            "add ip, r0, r3",
            "add r0, r0, r1, lsl 2",
            "mov r1, 1",
            "add ip, ip, 0x18",
            "and r3, r3, 0x1f",
            "eor r1, r4, r1, lsl r5",
            "str r1, [r2, 4]",
            "ldrb r2, [ip, 4]",
            "sub r2, r2, 1",
            "uxtb r2, r2",
            "strb r2, [ip, 4]",
            "rsbs r2, r2, 1",
            "movlo r2, 0",
            "ldr r1, [r0, 4]",
            "eor r3, r1, r2, lsl r3",
            "str r3, [r0, 4]",
            "pop {r4, r5}",
            "bx lr"
        ]
    },
    "sym.dhd_prot_event_process": {
        "function_address": "0x0800d044",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r5, r0",
            "ldr r3, [r0, 8]",
            "ldr r4, [r1, 4]",
            "ldrh r2, [r3, 0x18]",
            "ldrh r6, [r1, 0xc]",
            "ldrb r7, [r1, 1]",
            "cmp r2, 0",
            "subne r2, r2, 1",
            "strhne r2, [r3, 0x18]",
            "bl fcn.0800d018",
            "add r3, r4, 0x30",
            "cmp r4, 0",
            "ldrh r2, [r3, 4]",
            "ldr r1, [r3, 8]",
            "popeq {r4, r5, r6, r7, r8, pc}",
            "ldr r3, [r4, 0x6c]",
            "tst r3, 0x10",
            "beq 0x800d0c4",
            "ldr r3, [r4, 0x7c]",
            "cmp r3, 0",
            "bne 0x800d0d4",
            "ldr r3, [r4, 0xbc]",
            "str r6, [r4, 0x78]",
            "add r6, r3, r6",
            "str r6, [r4, 0xb0]",
            "ldr r0, [r5, 4]",
            "mov r1, r4",
            "mov r2, r7",
            "mov r3, 1",
            "pop {r4, r5, r6, r7, r8, lr}",
            "b dhd_bus_rx_frame",
            "ldr r0, [r5]",
            "mov r3, 2",
            "bl osl_dma_unmap",
            "b 0x800d090",
            "ldr r0, [0x0800d0e4]",
            "movw r1, 0x5c4",
            "bl warn_slowpath_null",
            "b 0x800d0ac"
        ]
    },
    "fcn.0800d018": {
        "function_address": "0x0800d018",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r1, 1",
            "ldr r4, [r0, 8]",
            "ldrh r5, [r4, 0x18]",
            "ldrh r2, [r4, 0x14]",
            "rsb r2, r5, r2",
            "bl fcn.0800cd90",
            "add r5, r0, r5",
            "mov r0, 0",
            "strh r5, [r4, 0x18]",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.dhd_msgbuf_rxbuf_post": {
        "function_address": "0x080212c0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov sl, r0",
            "ldr r0, [r0, 8]",
            "mov r8, 0",
            "sub sp, sp, 0x24",
            "ldrh r2, [r0, 0x12]",
            "ldrh r3, [r0, 0x10]",
            "str r0, [sp, 0x14]",
            "rsb r3, r3, r2",
            "uxth r3, r3",
            "sxth r3, r3",
            "cmp r3, 0x1f",
            "ble 0x80214a4",
            "ldr r7, [sl, 8]",
            "mov r1, 0",
            "strh r1, [sp, 0x1e]",
            "mov r1, 1",
            "mov r0, sl",
            "mov r2, 0x20",
            "ldr sb, [r7, 0x28]",
            "add r3, sp, 0x1e",
            "str r1, [sp]",
            "mov r1, sb",
            "bl sym.dhd_alloc_ring_space",
            "cmp r0, 0",
            "str r0, [sp, 0x10]",
            "beq 0x8021544",
            "ldrh r3, [sp, 0x1e]",
            "cmp r3, 0",
            "beq 0x80214b0",
            "mov r2, 0",
            "ldr r4, [sp, 0x10]",
            "str r2, [sp, 0xc]",
            "mov r6, r2",
            "b 0x8021420",
            "bl 0x802134c",
            "ldr r3, [r5, 0x6c]",
            "mov r2, 0x140",
            "ldr r1, [r5, 0x78]",
            "tst r3, 2",
            "str r1, [sp, 8]",
            "ldrne r1, [r5, 0xbc]",
            "ldreq r1, [r5, 0xbc]",
            "ldreq r2, [sp, 8]",
            "addne r3, r1, r2",
            "strne r3, [r5, 0x18]",
            "mov r3, 2",
            "ldr r0, [sl]",
            "stm sp, {r5, r8}",
            "bl 0x8021384",
            "subs fp, r0, 0",
            "mov r0, r5",
            "beq 0x8021500",
            "ldrh r1, [r7, 0xc4]",
            "add r6, r6, 1",
            "bl 0x802139c",
            "ldr r3, [r5, 0x78]",
            "add r2, r5, 0x30",
            "mov r0, 0x11",
            "mov r1, 0",
            "strb r0, [r4]",
            "uxtb r6, r6",
            "strb r1, [r4, 1]",
            "uxth r3, r3",
            "str fp, [r2, 8]",
            "str r6, [sp, 0xc]",
            "strh r3, [r2, 4]",
            "mov r2, 0",
            "str r5, [r4, 4]",
            "strh r3, [r4, 0xa]",
            "str r2, [r4, 0x1c]",
            "ldrh r3, [r7, 0xc4]",
            "add r3, fp, r3",
            "str r3, [r4, 0x18]",
            "ldrh r3, [r7, 0xc4]",
            "cmp r3, r2",
            "strhne r3, [r4, 8]",
            "ldrh r3, [sp, 0x1e]",
            "strne r8, [r4, 0x14]",
            "strne fp, [r4, 0x10]",
            "strheq r8, [r4, 8]",
            "streq r8, [r4, 0x14]",
            "streq r8, [r4, 0x10]",
            "cmp r6, r3",
            "ldr r2, [sb, 0x30]",
            "ldrh r2, [r2, 6]",
            "bhs 0x80214b0",
            "add r4, r4, r2",
            "mov r1, 0x820",
            "ldr r0, [sl]",
            "bl 0x8021428",
            "subs r5, r0, 0",
            "mov r1, 0x20",
            "bne 0x802134c",
            "movw r0, 0",
            "movt r0, 0",
            "ldr r3, [r0]",
            "tst r3, 1",
            "bne 0x8021568",
            "ldrh r3, [sp, 0x1e]",
            "ldr r0, [sp, 0xc]",
            "cmp r3, r0",
            "bls 0x80214b0",
            "ldr r2, [sb, 0x34]",
            "rsb r6, r6, r3",
            "ldrh r1, [r2, 4]",
            "cmp r1, r6",
            "ldrlt r1, [sb, 0x30]",
            "rsbge r3, r3, r1",
            "ldrge r1, [sp, 0xc]",
            "ldrhlt r1, [r1, 4]",
            "addge r3, r1, r3",
            "strhge r3, [r2, 4]",
            "rsblt r3, r3, r1",
            "addlt r3, r0, r3",
            "strhlt r3, [r2, 4]",
            "ldr r3, [sp, 0xc]",
            "ldr r2, [sp, 0xc]",
            "cmp r3, 0",
            "strh r2, [sp, 0x1e]",
            "bne 0x80214c0",
            "mov r0, 0",
            "add sp, sp, 0x24",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "str r3, [sp, 0xc]",
            "ldr r3, [sp, 0xc]",
            "cmp r3, 0",
            "beq 0x80214a4",
            "mov r0, sl",
            "ldr r1, [r7, 0x28]",
            "ldr r2, [sp, 0x10]",
            "bl sym.prot_ring_write_complete",
            "ldrh r3, [sp, 0x1e]",
            "cmp r3, 0",
            "beq 0x80214a4",
            "ldr r0, [sp, 0x14]",
            "ldrh r2, [r0, 0x10]",
            "ldrh r1, [r0, 0x12]",
            "add r3, r3, r2",
            "uxth r2, r3",
            "rsb r3, r2, r1",
            "strh r2, [r0, 0x10]",
            "uxth r3, r3",
            "b 0x80212e8",
            "mov r3, 2",
            "ldr r0, [sl]",
            "mov r1, r8",
            "ldr r2, [sp, 8]",
            "bl 0x8021510",
            "mov r2, r8",
            "ldr r0, [sl]",
            "mov r1, r5",
            "bl 0x8021520",
            "movw r2, 0",
            "movt r2, 0",
            "ldr r3, [r2]",
            "tst r3, 1",
            "beq 0x802144c",
            "ldr r0, [0x0802157c]",
            "bl 0x802153c",
            "b 0x802144c",
            "ldr r3, [0x08021580]",
            "ldr r3, [r3]",
            "tst r3, 4",
            "beq 0x80214a4",
            "ldr r1, [0x08021584]",
            "movw r2, 0x5a9",
            "ldr r0, [0x08021588]",
            "bl 0x8021560",
            "b 0x80214a4",
            "ldr r1, [0x08021584]",
            "movw r2, 0x5b6",
            "ldr r0, [0x0802158c]",
            "bl 0x8021574",
            "b 0x802144c"
        ]
    },
    "sym.prot_ring_write_complete": {
        "function_address": "0x08021230",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r5, r1",
            "ldr r1, [r1, 0x30]",
            "mov r4, r0",
            "sub sp, sp, 8",
            "mov r0, r2",
            "ldr r6, [r4, 8]",
            "ldrh r1, [r1, 6]",
            "mul r1, r1, r3",
            "bl 0x8021254",
            "movw r3, 0x17bd",
            "ldrb r3, [r4, r3]",
            "cmp r3, 0",
            "bne 0x80212a4",
            "ldr r1, [r5, 0x34]",
            "mov r2, 2",
            "ldrh ip, [r5, 2]",
            "mov r3, 0x10",
            "ldr r0, [r4, 4]",
            "add r1, r1, 4",
            "str ip, [sp]",
            "bl 0x8021284",
            "ldr r2, [r5, 0x34]",
            "ldr r3, [r6, 0x58]",
            "ldr r0, [r4, 4]",
            "ldrh r1, [r2, 4]",
            "blx r3",
            "add sp, sp, 8",
            "pop {r4, r5, r6, pc}",
            "ldr r3, [r5, 0x34]",
            "mov r1, 0xb",
            "ldr r0, [r4, 8]",
            "ldrh r2, [r5, 2]",
            "ldrh r3, [r3, 4]",
            "bl 0x80212b8",
            "b 0x8021288"
        ]
    },
    "sym.dhd_prot_rxcmplt_process": {
        "function_address": "0x0802187c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sl, lr}",
            "mov r5, r1",
            "ldr r3, [r0, 8]",
            "sub sp, sp, 0x14",
            "mov r6, r0",
            "ldrh r2, [r3, 0x10]",
            "cmp r2, 0",
            "subne r1, r2, 1",
            "strheq r2, [r3, 0x10]",
            "uxthne r1, r1",
            "moveq r1, r2",
            "strhne r1, [r3, 0x10]",
            "ldrh r3, [r3, 0x12]",
            "sub r3, r3, 0x20",
            "cmp r3, r1",
            "bge 0x8021ab4",
            "ldr r4, [r5, 4]",
            "ldrh r8, [r5, 0x10]",
            "cmp r4, 0",
            "add r3, r4, 0x30",
            "ldrh r2, [r3, 4]",
            "ldr r1, [r3, 8]",
            "beq 0x8021a20",
            "ldr r3, [r4, 0x6c]",
            "tst r3, 0x10",
            "beq 0x8021ad8",
            "ldr r7, [0x08021c04]",
            "ldr r3, [r7]",
            "tst r3, 4",
            "bne 0x8021bd0",
            "ldr r3, [0x08021c08]",
            "ldrb r2, [r5, 2]",
            "ldrb r1, [r3]",
            "cmp r1, r2",
            "strbne r2, [r3]",
            "ldrh r3, [r5, 0x12]",
            "tst r3, 2",
            "bne 0x8021a28",
            "cmp r8, 0",
            "bne 0x8021abc",
            "ldr r3, [r6, 8]",
            "ldr r1, [r3, 0x3c]",
            "cmp r1, 0",
            "bne 0x8021ae8",
            "ldr r2, [r4, 0x7c]",
            "ldrh r3, [r5, 0xe]",
            "cmp r2, 0",
            "bne 0x8021bbc",
            "ldr r7, [r4, 0xbc]",
            "str r3, [r4, 0x78]",
            "add r3, r7, r3",
            "str r3, [r4, 0xb0]",
            "ldrb r8, [r7, 0xe]",
            "ldrb sl, [r5, 1]",
            "ldr r5, [r6, 8]",
            "lsr r3, r8, 4",
            "cmp r3, 4",
            "beq 0x8021acc",
            "cmp r3, 6",
            "ubfxeq r8, r8, 1, 3",
            "movne r8, 0",
            "ldr r3, [r5, 0xc8]",
            "cmp r3, 0",
            "bne 0x8021a40",
            "add r2, r7, 6",
            "mov r3, r7",
            "str r2, [r5, 0xdc]",
            "mov r2, 1",
            "str r4, [r5, 0xd4]",
            "str r4, [r5, 0xd0]",
            "str r7, [r5, 0xd8]",
            "strb r8, [r5, 0xe0]",
            "str sl, [r5, 0xcc]",
            "str r2, [r5, 0xc8]",
            "ldrb r3, [r3]",
            "tst r3, 1",
            "bne 0x8021aa4",
            "ldrb r2, [r7, 0xd]",
            "ldrb r3, [r7, 0xc]",
            "orr r3, r3, r2, lsl 8",
            "movw r2, 0xdd86",
            "cmp r3, 8",
            "cmpne r3, r2",
            "bne 0x8021aa4",
            "ldr r3, [r4, 0x6c]",
            "orr r3, r3, 8",
            "str r3, [r4, 0x6c]",
            "ldr r3, [r5, 0xd0]",
            "add r3, r3, 8",
            "ldrh r2, [r3, 4]",
            "ubfx r1, r2, 3, 9",
            "add r1, r1, 1",
            "bfi r2, r1, 3, 9",
            "strh r2, [r3, 4]",
            "ldr r3, [r5, 0xd0]",
            "ldr r0, [r4, 0x78]",
            "add r3, r3, 8",
            "ldr r1, [r3, 4]",
            "mov r2, r1",
            "add r1, r0, r1, lsr 12",
            "bfi r2, r1, 0xc, 0x14",
            "str r2, [r3, 4]",
            "ldr r3, [r5, 0xc8]",
            "cmp r3, 0x3f",
            "bhi 0x8021aa4",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sl, pc}",
            "ldr r3, [r7]",
            "tst r3, 4",
            "beq 0x8021914",
            "ldr r0, [0x08021c0c]",
            "bl 0x8021a38",
            "b 0x8021914",
            "ldrh r1, [r7, 2]",
            "ldrh r2, [r7, 4]",
            "ldrh r3, [r7]",
            "orr r0, r1, r2",
            "orrs r0, r3, r0",
            "beq 0x8021a64",
            "ldrb r0, [r7]",
            "tst r0, 1",
            "beq 0x8021af4",
            "mov r1, r5",
            "ldr r0, [r6, 4]",
            "bl fcn.08021590",
            "ldr r3, [r5, 0xc8]",
            "cmp r3, 0",
            "beq 0x802197c",
            "ldr r3, [r5, 0xd4]",
            "str r4, [r3, 8]",
            "ldr r2, [r5, 0xc8]",
            "ldr r3, [r5, 0xd8]",
            "str r4, [r5, 0xd4]",
            "add r2, r2, 1",
            "str r2, [r5, 0xc8]",
            "ldrb r3, [r3]",
            "tst r3, 1",
            "beq 0x80219b0",
            "ldmib r6, {r0, r1}",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sl, lr}",
            "b fcn.08021590",
            "bl sym.dhd_msgbuf_rxbuf_post",
            "b 0x80218bc",
            "mov r0, r4",
            "mov r1, r8",
            "bl 0x8021ac4",
            "b 0x802192c",
            "ldrb r8, [r7, 0xf]",
            "lsr r8, r8, 5",
            "b 0x8021970",
            "ldr r0, [r6]",
            "mov r3, 2",
            "bl 0x8021ae0",
            "b 0x80218e4",
            "mov r0, r4",
            "bl 0x8021aec",
            "b 0x802192c",
            "ldr r0, [r5, 0xd8]",
            "ldrh lr, [r0, 2]",
            "ldrh ip, [r0, 4]",
            "ldrh r0, [r0]",
            "eor r1, r1, lr",
            "eor r2, r2, ip",
            "orr r2, r1, r2",
            "eor r3, r3, r0",
            "orrs r3, r2, r3",
            "bne 0x8021a64",
            "ldr r3, [r5, 0xdc]",
            "add r2, r7, 6",
            "ldrh lr, [r2, 2]",
            "ldrh r2, [r2, 4]",
            "ldrh r0, [r3, 2]",
            "ldrh ip, [r3, 4]",
            "ldrh r1, [r7, 6]",
            "ldrh r3, [r3]",
            "eor r0, lr, r0",
            "eor r2, r2, ip",
            "orr r2, r0, r2",
            "eor r3, r1, r3",
            "orrs r3, r2, r3",
            "bne 0x8021a64",
            "ldrb r3, [r5, 0xe0]",
            "cmp r3, r8",
            "bne 0x8021a64",
            "mov r0, r6",
            "mov r1, r7",
            "mov r2, sl",
            "bl 0x8021b6c",
            "cmp r0, 0",
            "beq 0x8021b94",
            "ldrb r2, [r7, 0xd]",
            "ldrb r3, [r7, 0xc]",
            "orr r3, r3, r2, lsl 8",
            "movw r2, 0xdd86",
            "cmp r3, r2",
            "cmpne r3, 8",
            "beq 0x8021b9c",
            "ldr r1, [r6, 8]",
            "b 0x8021a68",
            "mov r0, r6",
            "mov r1, r7",
            "mov r2, sl",
            "bl 0x8021ba8",
            "cmp r0, 0",
            "bne 0x8021a70",
            "ldr r1, [r6, 8]",
            "b 0x8021a68",
            "ldr r0, [0x08021c10]",
            "movw r1, 0x5c4",
            "bl 0x8021bc4",
            "ldr r7, [r4, 0xbc]",
            "b 0x802194c",
            "ldrb r0, [r5, 1]",
            "mov r2, r8",
            "ldrb r1, [r5, 2]",
            "ldrh r3, [r5, 0xe]",
            "stm sp, {r0, r1}",
            "ldrh ip, [r5, 0xc]",
            "ldr lr, [r4, 0xbc]",
            "ldr r1, [r5, 4]",
            "ldr r0, [0x08021c14]",
            "str lr, [sp, 8]",
            "str ip, [sp, 0xc]",
            "bl 0x8021bfc",
            "b 0x80218f4"
        ]
    },
    "fcn.08021590": {
        "function_address": "0x08021590",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r1",
            "ldr r3, [r1, 0xc8]",
            "cmp r3, 0",
            "popeq {r4, pc}",
            "ldr r1, [r1, 0xd0]",
            "ldr r2, [r4, 0xcc]",
            "bl 0x80215ac",
            "mov r3, 0",
            "str r3, [r4, 0xc8]",
            "pop {r4, pc}"
        ]
    },
    "sym.dhdpcie_bus_process_mailbox_intr": {
        "function_address": "0x08013004",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "mov r4, r0",
            "ldr r3, [r0, 0x20]",
            "sub sp, sp, 0x14",
            "mov r5, r1",
            "ldr r3, [r3, 0xc]",
            "cmp r3, 2",
            "cmpne r3, 6",
            "movne r6, 0",
            "moveq r6, 1",
            "beq 0x8013050",
            "cmp r3, 4",
            "beq 0x8013050",
            "tst r1, 0x300",
            "bne 0x8013064",
            "tst r5, 0xab0000",
            "bne 0x8013058",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, pc}",
            "tst r5, 2",
            "beq 0x8013048",
            "mov r0, r4",
            "bl fcn.080104a4",
            "b 0x8013048",
            "mov r3, r6",
            "add r1, sp, 0xc",
            "mov r2, 9",
            "str r6, [sp, 0xc]",
            "str r6, [sp, 8]",
            "bl dhd_bus_cmn_readshared",
            "ldr r3, [sp, 0xc]",
            "cmp r3, 0",
            "beq 0x8013040",
            "ldr r7, [0x080131c8]",
            "mov r3, 9",
            "mov r0, r4",
            "add r1, sp, 8",
            "mov r2, 4",
            "str r6, [sp]",
            "bl dhd_bus_cmn_writeshared",
            "ldr r3, [r7]",
            "tst r3, 4",
            "bne 0x80131a8",
            "ldr r3, [sp, 0xc]",
            "tst r3, 2",
            "beq 0x80130e4",
            "ldr r3, [r7]",
            "tst r3, 4",
            "bne 0x801319c",
            "mov r0, r4",
            "mov r1, 2",
            "bl fcn.08012da8",
            "ldr r3, [r7]",
            "tst r3, 4",
            "bne 0x8013190",
            "ldr r3, [sp, 0xc]",
            "tst r3, 4",
            "beq 0x80130f8",
            "ldr r2, [r7]",
            "tst r2, 4",
            "bne 0x80131b8",
            "tst r3, 1",
            "beq 0x801310c",
            "ldr r2, [r7]",
            "tst r2, 4",
            "bne 0x8013168",
            "tst r3, 0x10000000",
            "beq 0x8013040",
            "ldr r3, [r7]",
            "tst r3, 4",
            "bne 0x8013184",
            "mov r0, r4",
            "bl fcn.08010890",
            "ldr r3, [r4]",
            "mov r2, 0",
            "ldr r0, [0x080131cc]",
            "str r2, [r3, 0x14]",
            "bl nvram_get",
            "cmp r0, 0",
            "beq 0x8013040",
            "bl bcm_atoi",
            "cmp r0, 0",
            "beq 0x8013040",
            "ldr r3, [r7]",
            "tst r3, 1",
            "bne 0x8013178",
            "mov r3, 0",
            "str r3, [r3]",
            "b 0x8013040",
            "ldr r0, [0x080131d0]",
            "bl printk",
            "ldr r3, [sp, 0xc]",
            "b 0x801310c",
            "ldr r0, [0x080131d4]",
            "bl printk",
            "b 0x801315c",
            "ldr r0, [0x080131d8]",
            "bl printk",
            "b 0x8013120",
            "ldr r0, [0x080131dc]",
            "bl printk",
            "b 0x80130e0",
            "ldr r0, [0x080131e0]",
            "bl printk",
            "b 0x80130c8",
            "ldr r1, [sp, 0xc]",
            "ldr r0, [0x080131e4]",
            "bl printk",
            "b 0x80130b0",
            "ldr r0, [0x080131e8]",
            "bl printk",
            "ldr r3, [sp, 0xc]",
            "b 0x80130f8"
        ]
    },
    "fcn.080104a4": {
        "function_address": "0x080104a4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "movw r3, 0x1788",
            "ldr r2, [r0]",
            "mov r7, r0",
            "ldr r2, [r2, r3]",
            "lsr r3, r2, 0x1f",
            "add r2, r2, r3",
            "and r0, r2, 1",
            "rsb r0, r3, r0",
            "bl dhd_perim_lock_all",
            "ldr r0, [r7]",
            "bl dhd_prot_process_ctrlbuf",
            "ldr r6, [r7]",
            "ldr r5, [r6, 4]",
            "ldr r3, [r5, 0x18]!",
            "cmp r3, r5",
            "beq 0x801050c",
            "ldr r4, [r3]",
            "mov r0, r6",
            "ldrh r1, [r3, 0x32]",
            "ldr r2, [r3, 0x44]",
            "bl dhd_prot_update_txflowring",
            "cmp r4, r5",
            "mov r3, r4",
            "bne 0x80104e8",
            "ldr r6, [r7]",
            "mov r0, r6",
            "bl dhd_prot_process_msgbuf_txcpl",
            "ldr r0, [r7]",
            "bl dhd_prot_process_msgbuf_rxcpl",
            "ldr r2, [r7]",
            "movw r3, 0x1788",
            "ldr r2, [r2, r3]",
            "lsr r3, r2, 0x1f",
            "add r2, r2, r3",
            "and r0, r2, 1",
            "rsb r0, r3, r0",
            "pop {r4, r5, r6, r7, r8, lr}",
            "b dhd_perim_unlock_all"
        ]
    },
    "fcn.08012da8": {
        "function_address": "0x08012da8",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "sub sp, sp, 0x1c",
            "mov r3, 0",
            "add r5, sp, 0x18",
            "mov r2, 8",
            "mov r6, r0",
            "str r1, [sp, 0xc]",
            "str r3, [r5, -4]!",
            "mov r1, r5",
            "bl dhd_bus_cmn_readshared",
            "ldr r1, [sp, 0x14]",
            "cmp r1, 0",
            "ldreq r7, [0x08012f1c]",
            "beq 0x8012e50",
            "ldr r7, [0x08012f1c]",
            "ldr r3, [r7]",
            "tst r3, 4",
            "bne 0x8012ef8",
            "mov r0, 0xa",
            "mov r4, 2",
            "bl osl_delay",
            "mov r0, r6",
            "mov r1, r5",
            "mov r2, 8",
            "mov r3, 0",
            "bl dhd_bus_cmn_readshared",
            "b 0x8012e38",
            "bl osl_delay",
            "add r4, r4, 1",
            "mov r0, r6",
            "mov r1, r5",
            "mov r2, 8",
            "mov r3, 0",
            "bl dhd_bus_cmn_readshared",
            "cmp r4, 0x65",
            "beq 0x8012ed4",
            "ldr r3, [sp, 0x14]",
            "mov r0, 0xa",
            "cmp r3, 0",
            "bne osl_delay",
            "cmp r4, 0x63",
            "bhi 0x8012ed4",
            "mov r3, 8",
            "mov ip, 0",
            "mov r0, r6",
            "add r1, sp, 0xc",
            "mov r2, 4",
            "str ip, [sp]",
            "bl dhd_bus_cmn_writeshared",
            "ldr r3, [r6, 0x20]",
            "ldr r3, [r3, 0xc]",
            "cmp r3, 2",
            "cmpne r3, 6",
            "beq 0x8012ec0",
            "cmp r3, 4",
            "beq 0x8012ec0",
            "ldr r3, [r7]",
            "tst r3, 4",
            "bne 0x8012eec",
            "ldr r0, [r6, 0x1a0]",
            "mov r1, 0x98",
            "mov r2, 4",
            "mov r3, 1",
            "bl osl_pci_write_config",
            "ldr r0, [r6, 0x1a0]",
            "mov r1, 0x98",
            "mov r2, 4",
            "mov r3, 1",
            "bl osl_pci_write_config",
            "b 0x8012ecc",
            "ldr r3, [r7]",
            "tst r3, 1",
            "bne 0x8012f10",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, pc}",
            "ldr r3, [r7]",
            "tst r3, 1",
            "beq 0x8012e50",
            "ldr r0, [0x08012f20]",
            "bl printk",
            "b 0x8012e50",
            "ldr r0, [0x08012f24]",
            "bl printk",
            "b 0x8012e94",
            "ldr r0, [0x08012f28]",
            "bl printk",
            "ldr r3, [sp, 0x14]",
            "cmp r3, 0",
            "beq 0x8012e50",
            "b 0x8012df0",
            "ldr r0, [0x08012f2c]",
            "bl printk",
            "b 0x8012ecc"
        ]
    },
    "fcn.08010890": {
        "function_address": "0x08010890",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r0",
            "ldr r5, [0x08010f84]",
            "sub sp, sp, 0x184",
            "ldr r8, [r0, 0x174]",
            "ldr r7, [r5]",
            "tst r7, 2",
            "bne 0x8010ed4",
            "ands r7, r7, 0x20000",
            "movne r6, 0",
            "bne 0x80109c4",
            "ldr r3, [r4]",
            "mov r1, 0x200",
            "ldr r0, [r3]",
            "bl osl_malloc",
            "subs sb, r0, 0",
            "beq 0x8010b84",
            "ldr r3, [r4]",
            "mov r1, 0x100",
            "ldr r0, [r3]",
            "bl osl_malloc",
            "subs sl, r0, 0",
            "beq 0x80109d0",
            "mov r0, r4",
            "bl fcn.0800f42c",
            "subs r6, r0, 0",
            "blt 0x8010978",
            "add fp, sp, 0x164",
            "mov r1, sb",
            "mov r2, 0x200",
            "mov r0, fp",
            "bl bcm_binit",
            "ldr r3, [r8, 0x14]",
            "mov r0, fp",
            "ldr r1, [0x08010f88]",
            "ldr r2, [r8, 0x18]",
            "bl bcm_bprintf",
            "ldr r3, [r8]",
            "tst r3, 0x100",
            "beq 0x8010b98",
            "ldr r3, [r4, 0x174]",
            "ldr r3, [r3]",
            "ands r7, r3, 0x600",
            "bne 0x8010a00",
            "tst r3, 0x100",
            "ldr r2, [0x08010f8c]",
            "ldr r3, [0x08010f90]",
            "mov r0, fp",
            "ldr r1, [0x08010f94]",
            "movne r2, r3",
            "bl bcm_bprintf",
            "ldr r3, [r4, 0x174]",
            "ldr r3, [r3]",
            "tst r3, 0x600",
            "beq 0x8010978",
            "ldr r3, [r5]",
            "tst r3, 1",
            "bne 0x8010f58",
            "ldr r3, [r4]",
            "mov r1, sb",
            "mov r2, 0x200",
            "ldr r0, [r3]",
            "bl osl_mfree",
            "cmp sl, 0",
            "beq 0x80109a8",
            "ldr r3, [r4]",
            "mov r1, sl",
            "mov r2, 0x100",
            "ldr r0, [r3]",
            "bl osl_mfree",
            "cmp r7, 0",
            "beq 0x80109c4",
            "ldr r3, [r4]",
            "mov r1, r7",
            "ldr r2, [sp, 0x178]",
            "ldr r0, [r3]",
            "bl osl_mfree",
            "mov r0, r6",
            "add sp, sp, 0x184",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r3, [r5]",
            "tst r3, 1",
            "moveq r7, sl",
            "mvneq r6, 0x1a",
            "beq 0x8010978",
            "ldr r0, [0x08010f98]",
            "mov r2, 0x100",
            "ldr r1, [0x08010f9c]",
            "mov r7, sl",
            "bl printk",
            "mvn r6, 0x1a",
            "b 0x8010978",
            "tst r3, 0x200",
            "bne 0x8010ba8",
            "ands r7, r3, 0x400",
            "beq 0x8010964",
            "mov r8, r4",
            "mov r1, 1",
            "ldr r3, [r8], 0x19c",
            "add ip, sp, 0x114",
            "mov r0, r4",
            "mov r2, 0",
            "strb r1, [r3, 0x26d]",
            "mov r1, r8",
            "ldr r3, [r4, 0x174]",
            "ldr r3, [r3, 4]",
            "str ip, [sp]",
            "mov ip, 0x50",
            "str ip, [sp, 4]",
            "bl fcn.0800f2e4",
            "subs r6, r0, 0",
            "movlt r7, 0",
            "blt 0x8010978",
            "ldr r3, [sp, 0x11c]",
            "mov r0, fp",
            "ldr r1, [r4, 0x174]",
            "mov r7, 4",
            "ldr ip, [sp, 0x15c]",
            "str r3, [sp]",
            "ldr r3, [sp, 0x120]",
            "str ip, [sp, 0xc]",
            "ldr ip, [sp, 0x160]",
            "str r3, [sp, 4]",
            "ldr r3, [sp, 0x158]",
            "str ip, [sp, 0x10]",
            "ldr r2, [sp, 0x114]",
            "str r3, [sp, 8]",
            "ldr ip, [r1, 4]",
            "ldr r3, [sp, 0x118]",
            "ldr r1, [0x08010fa0]",
            "str ip, [sp, 0x14]",
            "ldr ip, [sp, 0x124]",
            "str ip, [sp, 0x18]",
            "ldr ip, [sp, 0x128]",
            "str ip, [sp, 0x1c]",
            "ldr ip, [sp, 0x12c]",
            "str ip, [sp, 0x20]",
            "ldr ip, [sp, 0x130]",
            "str ip, [sp, 0x24]",
            "ldr ip, [sp, 0x134]",
            "str ip, [sp, 0x28]",
            "ldr ip, [sp, 0x138]",
            "str ip, [sp, 0x2c]",
            "ldr ip, [sp, 0x13c]",
            "str ip, [sp, 0x30]",
            "ldr ip, [sp, 0x140]",
            "str ip, [sp, 0x34]",
            "bl bcm_bprintf",
            "ldr r3, [r4, 0x174]",
            "mov r0, r4",
            "mov r1, r8",
            "mov r2, 0",
            "ldr ip, [r3, 0x14]",
            "add r3, sp, 0x17c",
            "stm sp, {r3, r7}",
            "add r3, ip, 8",
            "bl fcn.0800f2e4",
            "cmp r0, 0",
            "blt 0x8010b74",
            "ldr r3, [r4, 0x174]",
            "mov r0, r4",
            "mov r1, r8",
            "mov r2, 0",
            "ldr ip, [r3, 0x14]",
            "add r3, sp, 0x178",
            "stm sp, {r3, r7}",
            "add r3, ip, 0xc",
            "bl fcn.0800f2e4",
            "cmp r0, 0",
            "blt 0x8010b74",
            "ldr r3, [r4, 0x174]",
            "mov r0, r4",
            "mov r1, r8",
            "mov r2, 0",
            "ldr ip, [r3, 0x14]",
            "add r3, sp, 0x174",
            "stm sp, {r3, r7}",
            "add r3, ip, 0x10",
            "bl fcn.0800f2e4",
            "cmp r0, 0",
            "blt 0x8010b74",
            "ldr r1, [sp, 0x178]",
            "movw r3, 0x7e8",
            "cmp r1, r3",
            "bls 0x8010c80",
            "ldr r3, [r4, 0x174]",
            "mov r7, 0",
            "ldr r3, [r3]",
            "b 0x8010964",
            "ldr r3, [r5]",
            "tst r3, 1",
            "bne 0x8010f40",
            "mvn r6, 0x1a",
            "b 0x80109c4",
            "mov r0, fp",
            "ldr r1, [0x08010fa4]",
            "bl bcm_bprintf",
            "b 0x8010930",
            "mov r0, fp",
            "ldr r1, [0x08010fa8]",
            "bl bcm_bprintf",
            "ldr r3, [r4, 0x174]",
            "ldr r2, [r3, 8]",
            "cmp r2, 0",
            "bne 0x8010c34",
            "ldr r2, [r3, 0xc]",
            "cmp r2, 0",
            "beq 0x8010c18",
            "mov r7, 0",
            "mov ip, 0x100",
            "strb r7, [sl]",
            "mov r0, r4",
            "ldr r3, [r4, 0x174]",
            "add r1, r4, 0x19c",
            "mov r2, r7",
            "ldr r3, [r3, 0xc]",
            "stm sp, {sl, ip}",
            "bl fcn.0800f2e4",
            "subs r6, r0, 0",
            "blt 0x8010978",
            "strb r7, [sl, 0xff]",
            "mov r0, fp",
            "ldr r1, [0x08010fac]",
            "mov r2, sl",
            "bl bcm_bprintf",
            "ldr r3, [r4, 0x174]",
            "ldr r2, [r3, 0x10]",
            "mov r0, fp",
            "ldr r1, [0x08010fb0]",
            "bl bcm_bprintf",
            "ldr r3, [r4, 0x174]",
            "ldr r3, [r3]",
            "b 0x8010a08",
            "mov r7, 0",
            "mov ip, 0x100",
            "strb r7, [sl]",
            "mov r0, r4",
            "ldr r3, [r4, 0x174]",
            "add r1, r4, 0x19c",
            "mov r2, r7",
            "ldr r3, [r3, 8]",
            "stm sp, {sl, ip}",
            "bl fcn.0800f2e4",
            "subs r6, r0, 0",
            "blt 0x8010978",
            "strb r7, [sl, 0xff]",
            "mov r0, fp",
            "ldr r1, [0x08010fb4]",
            "mov r2, sl",
            "bl bcm_bprintf",
            "ldr r3, [r4, 0x174]",
            "b 0x8010bc4",
            "ldr r3, [r4]",
            "ldr r0, [r3]",
            "bl osl_malloc",
            "subs r7, r0, 0",
            "beq 0x8010ec8",
            "ldr ip, [sp, 0x178]",
            "mov r0, r4",
            "mov r1, r8",
            "mov r2, 0",
            "ldr r3, [sp, 0x17c]",
            "stm sp, {r7, ip}",
            "bl fcn.0800f2e4",
            "cmp r0, 0",
            "blt 0x8010ec8",
            "ldr r2, [sp, 0x178]",
            "cmp r2, 0",
            "beq 0x8010d3c",
            "mov r3, 0",
            "str sl, [sp, 0x44]",
            "mov fp, r3",
            "mov sl, r2",
            "str sb, [sp, 0x40]",
            "str r8, [sp, 0x48]",
            "ldr sb, [sp, 0x174]",
            "mov r8, 0",
            "add sb, fp, sb",
            "b 0x8010d00",
            "add r0, sp, 0x54",
            "strb r3, [r0, r8]",
            "add r8, r8, 1",
            "cmp r8, 0xbe",
            "beq 0x8010e30",
            "add r0, r8, sb",
            "mov r1, sl",
            "bl __aeabi_uidivmod",
            "ldrb r3, [r7, r1]",
            "cmp r3, 0xa",
            "bne 0x8010cec",
            "cmp r8, 0",
            "moveq r8, 1",
            "bne 0x8010e30",
            "add fp, fp, r8",
            "cmp fp, sl",
            "blo 0x8010cdc",
            "ldr sb, [sp, 0x40]",
            "ldr sl, [sp, 0x44]",
            "ldr r8, [sp, 0x48]",
            "ldr ip, [r4, 0x3c]",
            "ldr r3, [r4]",
            "mov r1, ip",
            "ldr r0, [r3]",
            "str ip, [sp, 0x3c]",
            "bl osl_malloc",
            "cmp r0, 0",
            "ldr ip, [sp, 0x3c]",
            "str r0, [sp, 0x40]",
            "beq 0x8010f18",
            "ldr r3, [r5]",
            "tst r3, 2",
            "bne 0x8010ee8",
            "cmp ip, 0",
            "beq 0x8010e8c",
            "ldr r2, [sp, 0x40]",
            "mov r3, 0",
            "str sb, [sp, 0x44]",
            "mov fp, r7",
            "str sl, [sp, 0x48]",
            "mov sb, r8",
            "str r6, [sp, 0x4c]",
            "mov sl, r3",
            "mov r7, ip",
            "mov r8, r2",
            "b 0x8010db8",
            "ldr r3, [r5]",
            "tst r3, 2",
            "bne 0x8010efc",
            "subs r7, r7, r6",
            "beq 0x8010e7c",
            "cmp r7, 0x800",
            "movlt r6, r7",
            "movge r6, 0x800",
            "mov r3, sl",
            "mov r2, 0",
            "mov r1, sb",
            "mov r0, r4",
            "str r8, [sp]",
            "str r6, [sp, 4]",
            "add sl, sl, r6",
            "bl fcn.0800f2e4",
            "subs r2, r0, 0",
            "add r8, r8, r6",
            "beq 0x8010da4",
            "ldr r3, [r5]",
            "mov ip, r7",
            "ldr sb, [sp, 0x44]",
            "mov r7, fp",
            "ldr sl, [sp, 0x48]",
            "tst r3, 1",
            "ldr r6, [sp, 0x4c]",
            "bne 0x8010f6c",
            "ldr r3, [r4]",
            "mov r2, ip",
            "ldr r1, [sp, 0x40]",
            "ldr r0, [r3]",
            "bl osl_mfree",
            "ldr r3, [r4, 0x174]",
            "ldr r3, [r3]",
            "b 0x8010964",
            "sub r3, r8, 1",
            "add r0, sp, 0x180",
            "add r1, r0, r3",
            "ldr r2, [r5]",
            "ldrb r1, [r1, -0x12c]",
            "cmp r1, 0xd",
            "moveq r8, r3",
            "tst r2, 1",
            "add r3, r0, r8",
            "mov r2, 0",
            "strb r2, [r3, -0x12c]",
            "addeq r8, r8, 1",
            "beq 0x8010d24",
            "ldr r0, [0x08010fb8]",
            "add r1, sp, 0x54",
            "bl printk",
            "add r8, r8, 1",
            "ldr sl, [sp, 0x178]",
            "b 0x8010d24",
            "ldr sb, [sp, 0x44]",
            "mov r7, fp",
            "ldr sl, [sp, 0x48]",
            "ldr r6, [sp, 0x4c]",
            "ldr r3, [r5]",
            "tst r3, 2",
            "bne 0x8010f08",
            "ldr r0, [r4]",
            "ldr r1, [sp, 0x40]",
            "ldr r2, [r4, 0x3c]",
            "bl write_to_file",
            "cmp r0, 0",
            "beq 0x8010ec8",
            "ldr r3, [r5]",
            "tst r3, 1",
            "beq 0x8010ec8",
            "ldr r0, [0x08010fbc]",
            "ldr r1, [0x08010fc0]",
            "bl printk",
            "ldr r3, [r4, 0x174]",
            "ldr r3, [r3]",
            "b 0x8010964",
            "ldr r0, [0x08010fc4]",
            "ldr r1, [0x08010f9c]",
            "bl printk",
            "ldr r7, [r5]",
            "b 0x80108b0",
            "ldr r0, [0x08010fc8]",
            "str ip, [sp, 0x3c]",
            "bl printk",
            "ldr ip, [sp, 0x3c]",
            "b 0x8010d70",
            "ldr r0, [0x08010fcc]",
            "bl printk",
            "b 0x8010db0",
            "ldr r1, [0x08010fc0]",
            "ldr r0, [0x08010fd0]",
            "bl printk",
            "b 0x8010e98",
            "ldr r3, [r5]",
            "tst r3, 1",
            "beq 0x8010ec8",
            "ldr r0, [0x08010fd4]",
            "mov r2, ip",
            "ldr r1, [0x08010fc0]",
            "bl printk",
            "ldr r3, [r4, 0x174]",
            "ldr r3, [r3]",
            "b 0x8010964",
            "ldr r1, [0x08010f9c]",
            "mov r2, 0x200",
            "ldr r0, [0x08010f98]",
            "mvn r6, 0x1a",
            "bl printk",
            "b 0x80109c4",
            "ldr r1, [0x08010f9c]",
            "ldr r2, [sp, 0x16c]",
            "ldr r0, [0x08010fd8]",
            "bl printk",
            "b 0x8010978",
            "ldr r0, [0x08010fdc]",
            "ldr r1, [0x08010fc0]",
            "str ip, [sp, 0x3c]",
            "bl printk",
            "ldr ip, [sp, 0x3c]",
            "b 0x8010e10"
        ]
    },
    "sym.dhd_prot_process_msgbuf_txcpl": {
        "function_address": "0x08021cb4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "sub sp, sp, 8",
            "mov r4, r0",
            "ldr r7, [0x08021d44]",
            "add r6, sp, 6",
            "ldr r5, [r0, 8]",
            "b 0x8021d10",
            "bl 0x8021cd0",
            "mov r0, r4",
            "ldr r1, [r5, 0x30]",
            "mov r2, r8",
            "ldrh r3, [sp, 6]",
            "bl fcn.080215bc",
            "cmp r0, 0",
            "beq 0x8021cfc",
            "ldr r3, [r7]",
            "tst r3, 1",
            "bne 0x8021d30",
            "ldr r3, [r5, 0x30]",
            "mov r0, r4",
            "ldrh r1, [r3, 2]",
            "ldr r2, [r3, 0x34]",
            "bl 0x8021d0c",
            "ldr r1, [r5, 0x30]",
            "mov r2, r6",
            "mov r0, r4",
            "bl 0x8021d1c",
            "subs r8, r0, 0",
            "bne 0x8021cd0",
            "add sp, sp, 8",
            "pop {r4, r5, r6, r7, r8, pc}",
            "ldrh r2, [sp, 6]",
            "ldr r1, [0x08021d48]",
            "ldr r0, [0x08021d4c]",
            "bl 0x8021d3c",
            "b 0x8021cfc"
        ]
    },
    "fcn.080215bc": {
        "function_address": "0x080215bc",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x24",
            "ldr sl, [0x08021854]",
            "mov r7, r0",
            "mov fp, r1",
            "str r3, [sp, 0xc]",
            "ldr r3, [sl]",
            "ldr r0, [r0, 8]",
            "str r2, [sp, 0x14]",
            "tst r3, 4",
            "str r0, [sp, 0x18]",
            "bne 0x8021824",
            "ldr r2, [sp, 0xc]",
            "ldr r1, [0x08021870]",
            "ldr r0, [0x08021874]"
        ]
    },
    "sym.si_clkctl_init": {
        "function_address": "0x0801d30c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r0",
            "ldr r3, [r0, 0x18]",
            "sub sp, sp, 0xc",
            "tst r3, 0x40000",
            "beq 0x801d424",
            "ldr r3, [r0, 4]",
            "cmp r3, 1",
            "beq 0x801d4c8",
            "mov r0, r4",
            "mov r1, 0x800",
            "mov r2, 0",
            "ldr fp, [r4, 0x8c]",
            "bl si_setcore",
            "subs r5, r0, 0",
            "movne sb, 0",
            "beq 0x801d424",
            "ldr r3, [r4, 0x14]",
            "cmp r3, 9",
            "ldrle r6, [0x0801d710]",
            "bgt 0x801d488",
            "mov r0, r4",
            "movw sl, 0x47e",
            "bl fcn.0801bf28",
            "cmp r0, 1",
            "mov r0, r4",
            "moveq sl, 0x96",
            "ldr r8, [r4, 0x14]",
            "bl fcn.0801bf28",
            "ldr r3, [r4, 0x14]",
            "mov r7, r0",
            "cmp r8, 9",
            "movgt r8, 0",
            "movle r8, 1",
            "cmp r3, 5",
            "bgt 0x801d42c",
            "cmp r0, 2",
            "beq 0x801d544",
            "cmp r8, 0",
            "bne 0x801d598",
            "movw r2, 0x70fe",
            "movw r3, 0x423f",
            "movt r2, 9",
            "movt r3, 0xf",
            "mul sl, r2, sl",
            "movw r8, 0xde83",
            "movt r8, 0x431b",
            "mov r7, 0x7c",
            "add r3, sl, r3",
            "umull ip, r8, r8, r3",
            "lsr r8, r8, 0x12",
            "dsb sy",
            "ldr r3, [r6, 0xc]",
            "cmp r3, 0",
            "beq 0x801d3ec",
            "blx r3",
            "str r8, [r5, 0xb0]",
            "dsb sy",
            "ldr r3, [r6, 0xc]",
            "cmp r3, 0",
            "beq 0x801d404",
            "blx r3",
            "str r7, [r5, 0xb4]",
            "movw r0, 0x4e20",
            "bl osl_delay",
            "cmp sb, 0",
            "bne 0x801d424",
            "mov r0, r4",
            "mov r1, fp",
            "bl si_setcoreidx",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "cmp r3, 9",
            "bgt 0x801d4f4",
            "add r1, r5, 0xb8",
            "ldr r0, [r4, 0x58]",
            "add r2, sp, 4",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "cmp r7, 0",
            "ldr r1, [sp, 4]",
            "bne 0x801d620",
            "cmp r8, 0",
            "bne 0x801d6cc",
            "movw r2, 0x61a8",
            "movw r3, 0x423f",
            "mul sl, r2, sl",
            "movt r3, 0xf",
            "movw r8, 0xde83",
            "mov r7, 5",
            "movt r8, 0x431b",
            "add r3, sl, r3",
            "umull ip, r8, r8, r3",
            "lsr r8, r8, 0x12",
            "b 0x801d3d8",
            "dsb sy",
            "ldr r6, [0x0801d710]",
            "ldr r3, [r6, 0xc]",
            "cmp r3, 0",
            "beq 0x801d4a0",
            "blx r3",
            "mov r3, 4",
            "ldr r0, [r4, 0x58]",
            "add r1, r5, 0xc0",
            "add r2, sp, 4",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 4]",
            "uxth r3, r3",
            "orr r3, r3, 0x40000",
            "str r3, [r5, 0xc0]",
            "b 0x801d360",
            "ldr r3, [r0, 8]",
            "movw r2, 0x83c",
            "cmp r3, 0x820",
            "cmpne r3, r2",
            "bne 0x801d57c",
            "ldr r5, [r4, 0x88]",
            "adds r5, r5, 0x3000",
            "beq 0x801d424",
            "mov sb, 1",
            "mov fp, 0",
            "b 0x801d350",
            "add r1, r5, 0xc0",
            "ldr r0, [r4, 0x58]",
            "add r2, sp, 4",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "cmp r8, 0",
            "ldr r1, [sp, 4]",
            "beq 0x801d5c8",
            "mov r2, 0x3a40",
            "movw r3, 0x423f",
            "movt r2, 0x134",
            "movt r3, 0xf",
            "mul sl, r2, sl",
            "movw r8, 0xde83",
            "movt r8, 0x431b",
            "movw r7, 0xfc8",
            "add r3, sl, r3",
            "umull ip, r8, r8, r3",
            "lsr r8, r8, 0x12",
            "b 0x801d3d8",
            "cmp r8, 0",
            "bne 0x801d69c",
            "movw r2, 0xf5e1",
            "movw r3, 0x423f",
            "movt r2, 5",
            "movt r3, 0xf",
            "mul r2, r2, sl",
            "movw r8, 0xde83",
            "movt r8, 0x431b",
            "mov r7, 0x4f",
            "add r3, r2, r3",
            "umull ip, r8, r8, r3",
            "lsr r8, r8, 0x12",
            "b 0x801d3d8",
            "movw r2, 0x804",
            "cmp r3, r2",
            "bne 0x801d330",
            "ldr r3, [r0, 0xc]",
            "cmp r3, 0xc",
            "bls 0x801d330",
            "b 0x801d4dc",
            "movw r2, 0xa1d2",
            "movw r3, 0x423f",
            "movt r2, 9",
            "movt r3, 0xf",
            "mul sl, r2, sl",
            "movw r8, 0xde83",
            "movt r8, 0x431b",
            "mov r7, 0x7f",
            "add r3, sl, r3",
            "umull r2, r8, r8, r3",
            "lsr r8, r8, 0x12",
            "b 0x801d3d8",
            "lsr r1, r1, 0x10",
            "mov r0, 0x1fc0",
            "movt r0, 0x12e",
            "add r1, r1, 1",
            "movw r8, 0x423f",
            "lsl r1, r1, 2",
            "movw r7, 0xde83",
            "movt r7, 0x431b",
            "bl __aeabi_uidiv",
            "mov r2, 0xc8",
            "mul sl, r0, sl",
            "mov r3, r8",
            "movt r8, 0xf",
            "mul r0, r2, r0",
            "movt r3, 0xf",
            "add r8, sl, r8",
            "umull r2, r8, r7, r8",
            "lsr r8, r8, 0x12",
            "add r3, r0, r3",
            "umull ip, r7, r7, r3",
            "lsr r7, r7, 0x12",
            "b 0x801d3d8",
            "lsr r1, r1, 0x10",
            "cmp r7, 1",
            "add r1, r1, 1",
            "lsl r1, r1, 2",
            "beq 0x801d6f8",
            "cmp r7, 2",
            "movne r7, 0",
            "movne r8, r7",
            "bne 0x801d3d8",
            "cmp r8, 0",
            "movweq r0, 0x7840",
            "movwne r0, 0xcc80",
            "movteq r0, 0x17d",
            "movtne r0, 0x206",
            "bl __aeabi_uidiv",
            "mov r1, 0xc8",
            "mul sl, r0, sl",
            "movw r2, 0x423f",
            "mul r0, r1, r0",
            "mov r3, r2",
            "movw r1, 0xde83",
            "movt r2, 0xf",
            "movt r3, 0xf",
            "movt r1, 0x431b",
            "add r2, sl, r2",
            "add r3, r0, r3",
            "umull ip, r2, r1, r2",
            "lsr r8, r2, 0x12",
            "umull r2, r3, r1, r3",
            "lsr r7, r3, 0x12",
            "b 0x801d3d8",
            "movw r2, 0x1b32",
            "movw r3, 0x423f",
            "movt r2, 8",
            "movt r3, 0xf",
            "mul r2, r2, sl",
            "movw r8, 0xde83",
            "movt r8, 0x431b",
            "mov r7, 0x6b",
            "add r3, r2, r3",
            "umull r2, r8, r8, r3",
            "lsr r8, r8, 0x12",
            "b 0x801d3d8",
            "movw r2, 0xa7f8",
            "movw r3, 0x423f",
            "mul sl, r2, sl",
            "movt r3, 0xf",
            "movw r8, 0xde83",
            "mov r7, 9",
            "movt r8, 0x431b",
            "add r3, sl, r3",
            "umull r2, r8, r8, r3",
            "lsr r8, r8, 0x12",
            "b 0x801d3d8",
            "cmp r8, 0",
            "movne r0, 0x3a40",
            "moveq r0, 0x1fc0",
            "movtne r0, 0x134",
            "movteq r0, 0x12e",
            "b __aeabi_uidiv"
        ]
    },
    "fcn.0801bf28": {
        "function_address": "0x0801bf28",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r0",
            "ldr r3, [r0, 0x14]",
            "sub sp, sp, 8",
            "cmp r3, 5",
            "bgt 0x801bf58",
            "ldr r3, [r0, 4]",
            "cmp r3, 1",
            "beq 0x801bf88",
            "mov r0, 1",
            "add sp, sp, 8",
            "pop {r4, pc}",
            "cmp r3, 9",
            "bgt 0x801bf4c",
            "ldr r1, [r0, 0x8c]",
            "bl si_setcoreidx",
            "add r2, sp, 4",
            "add r1, r0, 0xb8",
            "mov r3, 4",
            "ldr r0, [r4, 0x58]",
            "bl osl_pcie_rreg",
            "ldr r0, [sp, 4]",
            "and r0, r0, 7",
            "b 0x801bf50",
            "ldr r0, [r0, 0x58]",
            "mov r1, 0xb4",
            "mov r2, 4",
            "bl osl_pci_read_config",
            "tst r0, 0x10",
            "movne r0, 2",
            "moveq r0, 1",
            "b 0x801bf50"
        ]
    },
    "sym.sb_core_reset": {
        "function_address": "0x0801b72c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sl, lr}",
            "orr r8, r2, r1",
            "ldr r6, [r0, 0x88]",
            "mov r7, r1",
            "mov r1, r8",
            "orr r8, r8, 3",
            "lsl r8, r8, 0x10",
            "sub sp, sp, 0xc",
            "add r6, r6, 0xf00",
            "mov r4, r0",
            "add r5, r6, 0x98",
            "bl sb_core_disable",
            "orr r2, r8, 1",
            "mov r0, r4",
            "mov r1, r5",
            "add sl, r6, 0x9c",
            "bl fcn.0801a710",
            "mov r1, r5",
            "mov r0, r4",
            "bl fcn.0801a5fc",
            "mov r3, r0",
            "mov r0, 1",
            "str r3, [sp, 4]",
            "ldr r3, [sp, 4]",
            "bl osl_delay",
            "mov r0, r4",
            "mov r1, sl",
            "bl fcn.0801a5fc",
            "tst r0, 1",
            "bne 0x801b84c",
            "add r6, r6, 0x90",
            "mov r0, r4",
            "mov r1, r6",
            "bl fcn.0801a5fc",
            "str r0, [sp, 4]",
            "ldr r3, [sp, 4]",
            "tst r3, 0x60000",
            "beq 0x801b7e0",
            "mov r1, r6",
            "mov r0, r4",
            "bl fcn.0801a5fc",
            "mov r1, r6",
            "bic r2, r0, 0x60000",
            "mov r0, r4",
            "bl fcn.0801a710",
            "mov r2, r8",
            "mov r0, r4",
            "mov r1, r5",
            "bl fcn.0801a710",
            "mov r1, r5",
            "mov r0, r4",
            "bl fcn.0801a5fc",
            "mov r3, r0",
            "mov r0, 1",
            "str r3, [sp, 4]",
            "ldr r3, [sp, 4]",
            "bl osl_delay",
            "orr r2, r7, 1",
            "mov r0, r4",
            "lsl r2, r2, 0x10",
            "mov r1, r5",
            "bl fcn.0801a710",
            "mov r0, r4",
            "mov r1, r5",
            "bl fcn.0801a5fc",
            "mov r3, r0",
            "mov r0, 1",
            "str r3, [sp, 4]",
            "ldr r3, [sp, 4]",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sl, lr}",
            "b osl_delay",
            "mov r0, r4",
            "mov r1, sl",
            "mov r2, 0",
            "bl fcn.0801a710",
            "b 0x801b7a4"
        ]
    },
    "fcn.0801a710": {
        "function_address": "0x0801a710",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r4, r0",
            "ldr r3, [r0, 4]",
            "sub sp, sp, 0x10",
            "mov r5, r1",
            "mov r6, r2",
            "ldr r7, [r0, 0x9c]",
            "cmp r3, 2",
            "movne r8, 0",
            "beq 0x801a7c4",
            "dsb sy",
            "ldr r3, [0x0801a8b8]",
            "ldr r3, [r3, 0xc]",
            "cmp r3, 0",
            "beq 0x801a750",
            "blx r3",
            "str r6, [r5]",
            "ldr r3, [r4, 4]",
            "cmp r3, 2",
            "beq 0x801a768",
            "add sp, sp, 0x10",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}",
            "ldrb r3, [r4, 0x7c]",
            "cmp r3, 0",
            "beq 0x801a760",
            "add r2, sp, 0x10",
            "mov r3, 0",
            "strb r3, [r2, -1]!",
            "movw r1, 0x39a",
            "mov r3, 1",
            "ldr r0, [r4, 0x58]",
            "bl osl_pcmcia_write_attr",
            "ldr r3, [r4, 0x6c]",
            "cmp r3, 0",
            "beq 0x801a760",
            "ldr r1, [r4, 0x8c]",
            "ldr r2, [r4, 0x60]",
            "add r1, r1, 0x20",
            "ldr r1, [r7, r1, lsl 2]",
            "cmp r1, r2",
            "bne 0x801a760",
            "ldr r0, [r4, 0x64]",
            "mov r1, r8",
            "blx r3",
            "b 0x801a760",
            "ldrb r8, [r0, 0x7c]",
            "cmp r8, 0",
            "bne 0x801a854",
            "add sl, sp, 4",
            "ldr r0, [r4, 0x58]",
            "mov r1, r5",
            "mov r2, sl",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 4]",
            "str r3, [sp, 8]",
            "ldr r3, [sp, 8]",
            "dsb sy",
            "ldr sb, [0x0801a8b8]",
            "ldr r3, [sb, 0xc]",
            "cmp r3, 0",
            "beq 0x801a80c",
            "blx r3",
            "uxth r3, r6",
            "mov r1, r5",
            "mov r2, sl",
            "strh r3, [r5]",
            "mov r3, 4",
            "ldr r0, [r4, 0x58]",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 4]",
            "str r3, [sp, 8]",
            "ldr r3, [sp, 8]",
            "dsb sy",
            "ldr r3, [sb, 0xc]",
            "cmp r3, 0",
            "beq 0x801a848",
            "blx r3",
            "lsr r6, r6, 0x10",
            "strh r6, [r5, 2]",
            "b 0x801a754",
            "ldr r8, [r0, 0x68]",
            "cmp r8, 0",
            "beq 0x801a87c",
            "ldr r2, [r0, 0x8c]",
            "ldr r3, [r0, 0x60]",
            "add r2, r2, 0x20",
            "ldr r2, [r7, r2, lsl 2]",
            "cmp r2, r3",
            "movne r8, 0",
            "beq 0x801a8a8",
            "mov r3, 1",
            "add r2, sp, 0x10",
            "strb r3, [r2, -1]!",
            "movw r1, 0x39a",
            "ldr r0, [r4, 0x58]",
            "bic r5, r5, 0x800",
            "bl osl_pcmcia_write_attr",
            "ldr r3, [r4, 4]",
            "cmp r3, 2",
            "bne 0x801a738",
            "b 0x801a7d0",
            "ldr r0, [r0, 0x64]",
            "blx r8",
            "mov r8, r0",
            "b 0x801a87c"
        ]
    },
    "fcn.0801a5fc": {
        "function_address": "0x0801a5fc",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "mov r4, r0",
            "ldr r3, [r0, 4]",
            "sub sp, sp, 0xc",
            "mov r5, r1",
            "ldr r6, [r0, 0x9c]",
            "cmp r3, 2",
            "movne r7, 0",
            "beq 0x801a6ac",
            "mov r1, r5",
            "mov r3, 4",
            "ldr r0, [r4, 0x58]",
            "mov r2, sp",
            "bl osl_pcie_rreg",
            "ldr r3, [r4, 4]",
            "ldr r5, [sp]",
            "cmp r3, 2",
            "beq 0x801a650",
            "mov r0, r5",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, pc}",
            "ldrb r3, [r4, 0x7c]",
            "cmp r3, 0",
            "beq 0x801a644",
            "add r2, sp, 8",
            "mov r3, 0",
            "strb r3, [r2, -1]!",
            "movw r1, 0x39a",
            "mov r3, 1",
            "ldr r0, [r4, 0x58]",
            "bl osl_pcmcia_write_attr",
            "ldr r3, [r4, 0x6c]",
            "cmp r3, 0",
            "beq 0x801a644",
            "ldr r1, [r4, 0x8c]",
            "ldr r2, [r4, 0x60]",
            "add r1, r1, 0x20",
            "ldr r1, [r6, r1, lsl 2]",
            "cmp r1, r2",
            "bne 0x801a644",
            "ldr r0, [r4, 0x64]",
            "mov r1, r7",
            "blx r3",
            "b 0x801a644",
            "ldrb r7, [r0, 0x7c]",
            "cmp r7, 0",
            "beq 0x801a620",
            "ldr r7, [r0, 0x68]",
            "cmp r7, 0",
            "beq 0x801a6e0",
            "ldr r2, [r0, 0x8c]",
            "ldr r3, [r0, 0x60]",
            "add r2, r2, 0x20",
            "ldr r2, [r6, r2, lsl 2]",
            "cmp r2, r3",
            "movne r7, 0",
            "beq 0x801a700",
            "mov r3, 1",
            "add r2, sp, 8",
            "strb r3, [r2, -1]!",
            "movw r1, 0x39a",
            "ldr r0, [r4, 0x58]",
            "bic r5, r5, 0x800",
            "bl osl_pcmcia_write_attr",
            "b 0x801a620",
            "ldr r0, [r0, 0x64]",
            "blx r7",
            "mov r7, r0",
            "b 0x801a6e0"
        ]
    },
    "sym.sb_core_cflags_wo": {
        "function_address": "0x0801ac60",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r5, r1",
            "ldr r6, [r0, 0x88]",
            "mov r4, r0",
            "mov r7, r2",
            "add r6, r6, 0xf90",
            "add r6, r6, 8",
            "mov r1, r6",
            "bl fcn.0801a5fc",
            "bic r5, r0, r5, lsl 16",
            "mov r1, r6",
            "mov r0, r4",
            "orr r2, r5, r7, lsl 16",
            "pop {r4, r5, r6, r7, r8, lr}",
            "b fcn.0801a710"
        ]
    },
    "sym.dhd_prot_txdata": {
        "function_address": "0x0802217c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r8, r0",
            "sub sp, sp, 0x1c",
            "mov r4, r1",
            "mov r1, 0",
            "ldr r0, [r0, 4]",
            "str r2, [sp, 0xc]",
            "ldr r7, [r8, 8]",
            "strh r1, [sp, 0x16]",
            "bl 0x80221a0",
            "cmp r0, 0",
            "mov ip, 0",
            "ldrheq fp, [r4, 0x30]",
            "movweq r3, 0x1798",
            "ldreq r3, [r8, r3]",
            "mov r0, r8",
            "ldrne r6, [r7, 0x24]",
            "movne fp, 0",
            "addeq r2, fp, fp, lsl 3",
            "addeq r3, r3, r2, lsl 3",
            "mov r2, 1",
            "ldreq r6, [r3, 0x44]",
            "add r3, sp, 0x16",
            "str ip, [sp]",
            "mov r1, r6",
            "bl sym.dhd_alloc_ring_space",
            "subs r5, r0, 0",
            "beq 0x8022444",
            "ldr r1, [r4, 0xbc]",
            "mov r2, 0xe",
            "add r0, r5, 8",
            "ldr sb, [r4, 0x78]",
            "bl 0x80221fc",
            "mov r0, r4",
            "mov r1, 0xe",
            "bl 0x8022208",
            "cmp r4, 0",
            "sub sb, sb, 0xe",
            "beq 0x8022438",
            "ldr r3, [r4, 0x6c]",
            "tst r3, 2",
            "bne 0x8022360",
            "ldr r1, [r4, 0xbc]",
            "mov r2, sb",
            "ldr r0, [r8]",
            "mov r3, 1",
            "mov ip, 0",
            "stm sp, {r4, ip}",
            "bl 0x802223c",
            "subs r3, r0, 0",
            "ldrne sl, [0x080224b8]",
            "bne 0x802225c",
            "ldr sl, [0x080224b8]",
            "ldr r2, [sl]",
            "tst r2, 1",
            "bne 0x8022488",
            "uxth sb, sb",
            "add r2, r4, 0x30",
            "str r3, [r2, 8]",
            "strh sb, [r2, 4]",
            "mov r2, 1",
            "ldrh r1, [r6, 0x2c]",
            "cmp r1, 0",
            "add r1, r1, r2",
            "strh r1, [r6, 0x2c]",
            "mov r1, 0xf",
            "streq r5, [r6, 0x28]",
            "strb r2, [r5, 0x16]",
            "strb r1, [r5]",
            "ldr r1, [sp, 0xc]",
            "str r4, [r5, 4]",
            "strb r1, [r5, 1]",
            "ldrb r1, [r4, 0x88]",
            "strb r2, [r5, 0x17]",
            "mov r2, 0",
            "str r2, [r5, 0x24]",
            "str r3, [r5, 0x20]",
            "lsl r2, r1, 5",
            "strh sb, [r5, 0x2a]",
            "orr r3, r2, 1",
            "strb r3, [r5, 0x16]",
            "ldrh r1, [r7, 0xc6]",
            "ldr sb, [r4, 0xbc]",
            "ldr r3, [r4, 0xb8]",
            "cmp r1, 0",
            "beq 0x80222f0",
            "rsb sb, r3, sb",
            "uxth sb, sb",
            "cmp sb, r1",
            "bhs 0x80223a8",
            "ldr r3, [sl]",
            "tst r3, 1",
            "bne 0x8022388",
            "mov r3, 0",
            "strh r3, [r5, 0x28]",
            "str r3, [r5, 0x1c]",
            "str r3, [r5, 0x18]",
            "mov r0, r4",
            "mov r1, 0xe",
            "bl 0x8022308",
            "ldr r3, [sl]",
            "tst r3, 2",
            "bne 0x8022474",
            "ldrh r2, [r6, 0x2c]",
            "ldrh r3, [r7, 0x20]",
            "cmp r2, r3",
            "beq 0x8022374",
            "ldr r3, [r6, 0x30]",
            "ldr r2, [r6, 0x1c]",
            "ldrh r1, [r3, 6]",
            "ldrh r0, [r3, 4]",
            "sub r3, r0, 1",
            "mla r3, r1, r3, r2",
            "cmp r5, r3",
            "beq 0x8022374",
            "ldrh r3, [r7, 0x1c]",
            "mov r0, 0",
            "add r3, r3, 1",
            "strh r3, [r7, 0x1c]",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r1, [r4, 0xbc]",
            "mov r2, 0x140",
            "add r3, r1, r2",
            "str r3, [r4, 0x18]",
            "b 0x802222c",
            "mov r0, r8",
            "mov r1, fp",
            "mov r2, 1",
            "bl 0x8022380",
            "b 0x8022348",
            "ldr r0, [0x080224bc]",
            "mov r2, sb",
            "bl 0x8022390",
            "ldrh r1, [r7, 0xc6]",
            "cmp r1, 0",
            "beq 0x80222f0",
            "cmp sb, r1",
            "blo 0x80222f0",
            "ldr r3, [sl]",
            "tst r3, 2",
            "bne 0x802249c",
            "mov r0, r4",
            "bl 0x80223b8",
            "cmp r4, 0",
            "ldrh r2, [r7, 0xc6]",
            "beq 0x80223d4",
            "ldr r3, [r4, 0x6c]",
            "tst r3, 2",
            "bne 0x8022424",
            "ldr r1, [r4, 0xbc]",
            "ldr r0, [r8]",
            "mov ip, 0",
            "mov r3, 2",
            "stm sp, {r4, ip}",
            "bl 0x80223e8",
            "subs sb, r0, 0",
            "bne 0x8022400",
            "ldr r3, [sl]",
            "tst r3, 1",
            "bne 0x80224ac",
            "mov r0, r4",
            "ldrh r1, [r7, 0xc6]",
            "bl 0x8022408",
            "ldrh r3, [r7, 0xc6]",
            "str sb, [r5, 0x18]",
            "strh r3, [r5, 0x28]",
            "mov r3, 0",
            "str r3, [r5, 0x1c]",
            "b 0x8022300",
            "ldr r1, [r4, 0xbc]",
            "mov r2, 0x140",
            "add r3, r1, r2",
            "str r3, [r4, 0x18]",
            "b 0x80223d8",
            "mov r2, sb",
            "ldr r1, [r4, 0xbc]",
            "b 0x802222c",
            "ldr r3, [0x080224b8]",
            "ldr r3, [r3]",
            "tst r3, 4",
            "mvneq r0, 0x15",
            "beq 0x8022358",
            "ldr r0, [0x080224c0]",
            "movw r2, 0x92a",
            "ldr r1, [0x080224c4]",
            "ldrh r3, [r7, 0x1c]",
            "bl 0x8022468",
            "mvn r0, 0x15",
            "b 0x8022358",
            "ldrh r1, [r5, 0x2a]",
            "ldr r2, [r5, 4]",
            "ldr r0, [0x080224c8]",
            "bl 0x8022480",
            "b 0x8022318",
            "ldr r0, [0x080224cc]",
            "str r3, [sp, 8]",
            "bl 0x8022490",
            "ldr r3, [sp, 8]",
            "b 0x802225c",
            "ldr r0, [0x080224d0]",
            "bl 0x80224a0",
            "ldrh r1, [r7, 0xc6]",
            "b 0x80223b4",
            "ldr r0, [0x080224cc]",
            "bl 0x80224b0",
            "b 0x8022400"
        ]
    },
    "sym.dhd_bus_init": {
        "function_address": "0x08014004",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r5, r0",
            "ldr r6, [0x080140a8]",
            "ldr r4, [r0, 4]",
            "ldr r3, [r6]",
            "tst r3, 2",
            "bne 0x8014098",
            "ldr r7, [r4]",
            "cmp r7, 0",
            "beq 0x8014074",
            "movw r1, 0x83c",
            "mov r2, 0",
            "ldr r0, [r4, 0x20]",
            "bl si_setcore",
            "str r0, [r4, 0x30]",
            "mov r0, r4",
            "bl fcn.0800f42c",
            "subs r7, r0, 0",
            "blt 0x801407c",
            "ldr r0, [r4, 0x20]",
            "movw r1, 0x83c",
            "mov r2, 0",
            "bl si_setcore",
            "mov r3, 2",
            "str r0, [r4, 0x30]",
            "str r3, [r5, 0x14]",
            "mov r0, r4",
            "bl sym.dhdpcie_bus_intr_enable",
            "mov r0, r7",
            "pop {r3, r4, r5, r6, r7, pc}",
            "ldr r3, [r6]",
            "tst r3, 1",
            "beq 0x8014074",
            "ldr r1, [0x080140ac]",
            "ldr r0, [0x080140b0]",
            "bl printk",
            "b 0x8014074",
            "ldr r1, [0x080140ac]",
            "ldr r0, [0x080140b4]",
            "bl printk",
            "b 0x8014020"
        ]
    },
    "fcn.0800f42c": {
        "function_address": "0x0800f42c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x5c",
            "ldr r6, [r0, 0x16c]",
            "add r5, sp, 0x48",
            "movw r1, 0x4b40",
            "mov r4, r0",
            "ldr r3, [r0, 0x3c]",
            "movt r1, 0x4c",
            "mov r0, r5",
            "ldr r7, [r4, 0x174]",
            "mov sl, 0",
            "add r8, r4, 0x19c",
            "add r6, r6, r3",
            "sub r6, r6, 4",
            "bl dhd_timeout_start",
            "mov r0, r5",
            "bl dhd_timeout_expired",
            "cmp r0, 0",
            "mov r1, r8",
            "mov r2, r6",
            "mov r0, r4",
            "bne 0x800f70c",
            "bl fcn.0800f284",
            "subs sl, r0, 0",
            "beq 0x800f468",
            "ldr r3, [r4, 0x1a4]",
            "cmp r3, sl",
            "beq 0x800f468",
            "ldr r3, [r4, 0x16c]",
            "cmp r3, sl",
            "movls r3, 0",
            "movhi r3, 1",
            "cmp r6, sl",
            "movhs r6, r3",
            "orrlo r6, r3, 1",
            "cmp r6, 0",
            "bne 0x800f720",
            "ldr r6, [0x0800fb70]",
            "str sl, [r4, 0x170]",
            "ldr r3, [r6]",
            "tst r3, 1",
            "bne 0x800fa74",
            "add r5, r4, 0x19c",
            "mov r3, sl",
            "mov r8, 0x4c",
            "mov r0, r4",
            "mov r1, r5",
            "mov r2, 0",
            "stm sp, {r7, r8}",
            "bl fcn.0800f2e4",
            "subs sl, r0, 0",
            "blt 0x800f738",
            "ldr r2, [r7, 0x14]",
            "ldr r3, [r4, 0x174]",
            "ldr r0, [r4]",
            "str r2, [r4, 0x160]",
            "ldr r1, [r3, 0x24]",
            "str r1, [r4, 0x194]",
            "bl dhd_prot_rx_dataoffset",
            "ldr r3, [r6]",
            "ands r1, r3, 1",
            "bne 0x800f98c",
            "ldr r2, [r7]",
            "and r3, r2, 0xff",
            "cmp r3, 5",
            "bhi 0x800f934",
            "cmp r3, 3",
            "bls 0x800f55c",
            "ands r2, r2, 0x4000",
            "movne r3, 1",
            "strbeq r2, [r4, 0xe18]",
            "strbne r3, [r4, 0xe18]",
            "ldreq r1, [r6]",
            "ldrne r1, [r6]",
            "andeq r1, r1, 1",
            "andne r1, r1, r3",
            "cmp r1, 0",
            "bne 0x800fb60",
            "ldr r3, [r7]",
            "tst r3, 0x10000",
            "beq 0x800f7c0",
            "ldr r3, [r6]",
            "tst r3, 1",
            "bne 0x800fa24",
            "add ip, sp, 0x10",
            "ldr r3, [r7, 0x30]",
            "mov r0, r4",
            "str ip, [sp]",
            "mov r1, r5",
            "mov ip, 0x38",
            "mov r2, 0",
            "str ip, [sp, 4]",
            "bl fcn.0800f2e4",
            "subs sl, r0, 0",
            "blt 0x800f744",
            "ldr r3, [r7, 0x28]",
            "ldrh r2, [sp, 0x44]",
            "ldr r0, [r4]",
            "str r3, [r4, 0xe04]",
            "ldr r3, [r7, 0x2c]",
            "str r2, [r4, 0xe1c]",
            "str r3, [r4, 0xe08]",
            "movw r3, 0x17bd",
            "ldrb r3, [r0, r3]",
            "cmp r3, 0",
            "bne 0x800f8ec",
            "movw r3, 0x17bc",
            "ldrb r3, [r0, r3]",
            "cmp r3, 0",
            "bne 0x800f8a4",
            "ldr r3, [r6]",
            "ldr sb, [sp, 0x10]",
            "mov fp, r4",
            "mov r8, r4",
            "mov r5, 0",
            "and r3, r3, 4",
            "mov sl, r7",
            "mov r2, sb",
            "cmp r3, 0",
            "str r2, [r8, 0x1b8]",
            "add r7, r2, 0x10",
            "add r8, r8, 0xc",
            "bne 0x800f974",
            "add r5, r5, 1",
            "mov r2, r7",
            "cmp r5, 5",
            "bne 0x800f604",
            "ldrb r2, [r4, 0xe18]",
            "mov r7, sl",
            "add sb, sb, 0x50",
            "cmp r2, 0",
            "bne 0x800f7fc",
            "ldr sl, [sp, 0x14]",
            "cmp r3, 0",
            "ldr r8, [sp, 0x18]",
            "ldr r3, [sp, 0x1c]",
            "ldr ip, [sp, 0x20]",
            "add r5, sl, 4",
            "str sl, [r4, 0x1bc]",
            "add sb, r8, 4",
            "str r3, [sp, 0xc]",
            "str r8, [r4, 0x1c0]",
            "bne 0x800f9f0",
            "ldr r3, [r6]",
            "str r5, [r4, 0x1c8]",
            "str sb, [r4, 0x1cc]",
            "ands r3, r3, 4",
            "bne 0x800fa48",
            "ldr r5, [sp, 0xc]",
            "cmp r3, 0",
            "mov r0, ip",
            "mov sb, 0",
            "mov ip, r7",
            "add r1, sb, 2",
            "mov r7, r4",
            "str r5, [fp, 0x1d4]",
            "add sl, sl, 8",
            "add r8, r8, 8",
            "str r0, [fp, 0x1d8]",
            "add sb, sb, 1",
            "add r4, r0, 4",
            "add r5, r5, 4",
            "bne 0x800f6f0",
            "cmp sb, 3",
            "mov r0, r4",
            "add fp, fp, 0xc",
            "beq 0x800f750",
            "ldr r3, [r6]",
            "add r1, sb, 2",
            "str r5, [fp, 0x1d4]",
            "add sb, sb, 1",
            "str r0, [fp, 0x1d8]",
            "add r4, r0, 4",
            "and r3, r3, 4",
            "add r5, r5, 4",
            "cmp r3, 0",
            "beq 0x800f6b8",
            "ldr r2, [fp, 0x1d4]",
            "mov r3, r0",
            "ldr r0, [0x0800fb74]",
            "str ip, [sp, 8]",
            "bl printk",
            "ldr ip, [sp, 8]",
            "b 0x800f6b8",
            "cmp sl, 0",
            "beq 0x800f720",
            "ldr r3, [r4, 0x1a4]",
            "cmp r3, sl",
            "bne 0x800f49c",
            "ldr r4, [0x0800fb70]",
            "ldr r3, [r4]",
            "tst r3, 1",
            "bne 0x800f9a8",
            "mvn sl, 0",
            "b 0x800f744",
            "ldr r3, [r6]",
            "tst r3, 1",
            "bne 0x800fa10",
            "mov r0, sl",
            "add sp, sp, 0x5c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "mov r4, r7",
            "mov r7, ip",
            "ldrb r3, [r4, 0xe18]",
            "cmp r3, 0",
            "beq 0x800f824",
            "ldr r3, [r6]",
            "str sl, [r4, 0x1f8]",
            "str r8, [r4, 0x1fc]",
            "tst r3, 4",
            "bne 0x800fb48",
            "ldr r0, [0x0800fb78]",
            "add r1, sp, 0x10",
            "mov r2, 0x38",
            "bl bcm_print_bytes",
            "ldr r3, [r6]",
            "tst r3, 4",
            "bne 0x800fb34",
            "tst r3, 1",
            "bne 0x800fb20",
            "tst r3, 4",
            "bne 0x800faa8",
            "ldr r1, [r7]",
            "movw r3, 0x17a8",
            "ldr r2, [r4]",
            "mov sl, 0",
            "and r1, r1, 0x60000",
            "str r1, [r2, r3]",
            "b 0x800f744",
            "ldr r3, [r4]",
            "movw r2, 0x17bc",
            "ldrb r2, [r3, r2]",
            "cmp r2, 0",
            "beq 0x800f890",
            "ldr r2, [r6]",
            "tst r2, 1",
            "bne 0x800fa94",
            "mov r2, 0",
            "movw r1, 0x17bc",
            "strb r2, [r3, r1]",
            "movw r3, 0x17bd",
            "ldr r1, [r4]",
            "strb r2, [r1, r3]",
            "b 0x800f57c",
            "cmp r3, 0",
            "str sb, [r4, 0x1f4]",
            "beq 0x800f63c",
            "ldr r0, [0x0800fb7c]",
            "mov r1, r5",
            "mov r2, sb",
            "bl printk",
            "ldr r3, [r6]",
            "and r3, r3, 4",
            "b 0x800f63c",
            "ldr r1, [r4, 0xe1c]",
            "cmp r1, 2",
            "beq 0x800f778",
            "mov r5, 5",
            "mov fp, 0xc",
            "mov sb, ip",
            "mov r7, r4",
            "ldr r2, [r6]",
            "add r3, r5, r5, lsl 1",
            "add r4, r8, 4",
            "add r3, r7, r3, lsl 2",
            "tst r2, 4",
            "str sl, [r3, 0x1bc]",
            "add sl, sl, 4",
            "str r8, [r3, 0x1c0]",
            "bne 0x800f954",
            "sub r2, r5, 4",
            "sub r3, r1, 2",
            "uxth r2, r2",
            "add r5, r5, 1",
            "uxth r5, r5",
            "mov r8, r4",
            "cmp r2, r3",
            "blo 0x800f840",
            "mov r4, r7",
            "mov r7, sb",
            "b 0x800f778",
            "movw r2, 0x17bd",
            "ldrb r2, [r3, r2]",
            "cmp r2, 0",
            "beq 0x800f57c",
            "b 0x800f7d4",
            "mov r1, 5",
            "mov r2, 3",
            "bl dhd_prot_init_index_dma_block",
            "mov r1, 4",
            "mov r5, r0",
            "ldr r2, [r4, 0xe1c]",
            "ldr r0, [r4]",
            "bl dhd_prot_init_index_dma_block",
            "orrs r5, r0, r5",
            "beq 0x800f5e4",
            "ldr r3, [r6]",
            "tst r3, 1",
            "bne 0x800f9d8",
            "ldr r1, [r4]",
            "mov r0, 0",
            "movw r2, 0x17bc",
            "strb r0, [r1, r2]",
            "b 0x800f5e8",
            "mov r1, 3",
            "bl dhd_prot_init_index_dma_block",
            "mov r1, 6",
            "mov r5, r0",
            "mov r2, 3",
            "ldr r0, [r4]",
            "bl dhd_prot_init_index_dma_block",
            "orrs r5, r0, r5",
            "beq 0x800f92c",
            "ldr r3, [r6]",
            "tst r3, 1",
            "bne 0x800fa84",
            "ldr r2, [r4]",
            "mov r1, 0",
            "movw r3, 0x17bd",
            "strb r1, [r2, r3]",
            "ldr r0, [r4]",
            "b 0x800f5d4",
            "cmp r1, 0",
            "beq 0x800f730",
            "ldr r0, [0x0800fb80]",
            "mov r2, 5",
            "ldr r1, [0x0800fb84]",
            "mvn sl, 0",
            "bl printk",
            "b 0x800f744",
            "mla r2, fp, r5, r7",
            "ldr r0, [0x0800fb88]",
            "mov r1, r5",
            "mov r3, r8",
            "ldr r2, [r2, 0x1bc]",
            "bl printk",
            "ldr r1, [r7, 0xe1c]",
            "b 0x800f864",
            "mov r1, r5",
            "ldr r0, [0x0800fb8c]",
            "bl printk",
            "ldr r3, [r6]",
            "and r3, r3, 4",
            "b 0x800f618",
            "ldr r1, [r4, 0x194]",
            "ldr r0, [0x0800fb90]",
            "bl printk",
            "ldr r3, [0x0800fb70]",
            "ldr r1, [r3]",
            "and r1, r1, 1",
            "b 0x800f524",
            "ldr r0, [0x0800fb94]",
            "mov r2, sl",
            "ldr r1, [0x0800fb84]",
            "bl printk",
            "ldr r3, [r4]",
            "tst r3, 1",
            "beq 0x800f730",
            "ldr r1, [sp, 0x50]",
            "mvn sl, 0",
            "ldr r0, [0x0800fb98]",
            "bl printk",
            "b 0x800f744",
            "ldr r0, [0x0800fb9c]",
            "ldr r1, [0x0800fb84]",
            "bl printk",
            "ldr r3, [0x0800fb70]",
            "ldr r3, [r3]",
            "b 0x800f8d8",
            "ldr r0, [0x0800fba0]",
            "mov r1, 0",
            "mov r2, sl",
            "mov r3, r8",
            "str ip, [sp, 8]",
            "bl printk",
            "ldr ip, [sp, 8]",
            "b 0x800f668",
            "mov r1, sl",
            "mov r2, r8",
            "ldr r0, [0x0800fba4]",
            "bl printk",
            "b 0x800f744",
            "ldr r3, [r4]",
            "movw ip, 0x17bc",
            "movw r2, 0x17bd",
            "ldr r1, [0x0800fb84]",
            "ldr r0, [0x0800fba8]",
            "ldrb r2, [r3, r2]",
            "ldrb r3, [r3, ip]",
            "bl printk",
            "b 0x800f57c",
            "mov r3, sb",
            "ldr r0, [0x0800fba0]",
            "mov r1, 1",
            "mov r2, r5",
            "str ip, [sp, 8]",
            "bl printk",
            "ldr r3, [0x0800fb70]",
            "ldr ip, [sp, 8]",
            "ldr r3, [r3]",
            "and r3, r3, 4",
            "b 0x800f67c",
            "ldr r1, [sp, 0x50]",
            "ldr r0, [0x0800fbac]",
            "bl printk",
            "b 0x800f4d4",
            "ldr r1, [0x0800fb84]",
            "ldr r0, [0x0800fbb0]",
            "bl printk",
            "b 0x800f91c",
            "ldr r0, [0x0800fbb4]",
            "ldr r1, [0x0800fb84]",
            "bl printk",
            "ldr r3, [r4]",
            "b 0x800f7e0",
            "ldr r0, [0x0800fbb8]",
            "bl printk",
            "ldr r3, [r6]",
            "ldr r5, [0x0800fb70]",
            "tst r3, 4",
            "beq 0x800f7a4",
            "ldr r0, [0x0800fbbc]",
            "ldr r1, [r4, 0xe04]",
            "bl printk",
            "ldr r3, [r5]",
            "tst r3, 4",
            "beq 0x800f7a4",
            "ldr r1, [r4, 0xe08]",
            "ldr r0, [0x0800fbc0]",
            "bl printk",
            "ldr r2, [r5]",
            "movw r3, 0x17a8",
            "ldr r0, [r7]",
            "ldr r1, [r4]",
            "ands r2, r2, 4",
            "and r0, r0, 0x60000",
            "moveq sl, r2",
            "str r0, [r1, r3]",
            "beq 0x800f744",
            "ldr r2, [r4]",
            "mov sl, 0",
            "ldr r0, [0x0800fbc4]",
            "ldr r1, [r2, r3]",
            "bl printk",
            "b 0x800f744",
            "ldr r0, [0x0800fbc8]",
            "ldrh r1, [sp, 0x44]",
            "bl printk",
            "ldr r3, [r6]",
            "b 0x800f79c",
            "ldr r0, [0x0800fbcc]",
            "bl printk",
            "ldr r3, [0x0800fb70]",
            "ldr r3, [r3]",
            "b 0x800f794",
            "mov r1, 5",
            "mov r2, sl",
            "mov r3, r8",
            "ldr r0, [0x0800fbd0]",
            "bl printk",
            "b 0x800f778",
            "ldrb r1, [r4, 0xe18]",
            "ldr r0, [0x0800fbd4]",
            "bl printk",
            "b 0x800f564"
        ]
    },
    "sym.dhdpcie_bus_intr_enable": {
        "function_address": "0x08011710",
        "instructions": [
            "ldr r3, [0x08011790]",
            "push {r4, lr}",
            "mov r4, r0",
            "sub sp, sp, 8",
            "ldr r3, [r3]",
            "tst r3, 2",
            "bne 0x8011784",
            "ldr r3, [r4, 0x20]",
            "ldr r2, [r3, 0xc]",
            "cmp r2, 2",
            "cmpne r2, 6",
            "beq 0x8011774",
            "cmp r2, 4",
            "beq 0x8011774",
            "cmp r3, 0",
            "beq 0x801176c",
            "ldr ip, [r4, 0xe0c]",
            "mov r0, r3",
            "ldr r1, [r3, 0x10]",
            "mov r2, 0x4c",
            "mov r3, ip",
            "str ip, [sp]",
            "bl si_corereg",
            "add sp, sp, 8",
            "pop {r4, pc}",
            "mov r0, r4",
            "add sp, sp, 8",
            "pop {r4, lr}",
            "b dhpcie_bus_unmask_interrupt",
            "ldr r0, [0x08011794]",
            "bl printk",
            "b 0x801172c"
        ]
    },
    "sym.dhd_detach": {
        "function_address": "0x08007f8c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sl, lr}",
            "subs r6, r0, 0",
            "sub sp, sp, 0xc",
            "beq 0x80081e0",
            "ldr r4, [r6, 0xc]",
            "cmp r4, 0",
            "beq 0x80081e0",
            "ldr r7, [0x08008378]",
            "ldr r3, [r7]",
            "tst r3, 2",
            "bne 0x8008288",
            "movw r5, 0x39b0",
            "mov r2, 0",
            "ldr r3, [r4, r5]",
            "strb r2, [r4, 0x18]",
            "tst r3, 0x200",
            "beq 0x8008254",
            "tst r3, 8",
            "bne 0x800822c",
            "ldr r3, [0x0800837c]",
            "ldrb r2, [r3, -0xfc0]",
            "cmp r2, 0",
            "bne 0x8008218",
            "movw r3, 0x39b0",
            "ldr r3, [r4, r3]",
            "tst r3, 4",
            "beq 0x80080fc",
            "add r8, r4, 0x1800",
            "mov r5, 1",
            "add r8, r8, 8",
            "add sl, r4, 8",
            "ldr r3, [r8, 4]!",
            "mov r1, r5",
            "mov r0, sl",
            "add r5, r5, 1",
            "mov r2, 1",
            "cmp r3, 0",
            "beq 0x8008028",
            "bl dhd_remove_if",
            "cmp r5, 0x10",
            "bne 0x8008008",
            "movw r3, 0x1808",
            "ldr r5, [r4, r3]",
            "cmp r5, 0",
            "beq 0x80080fc",
            "ldr r3, [r5, 8]",
            "cmp r3, 0",
            "beq 0x80080fc",
            "ldr r0, [r4]",
            "mov ip, 0",
            "ldr r1, [r4, 4]",
            "ldr r2, [r5, 0xc]",
            "str ip, [sp]",
            "bl fwder_bind",
            "movw r3, 0x39b8",
            "str r0, [r5, 4]",
            "ldr r0, [r4, r3]",
            "cmp r0, 0",
            "beq 0x8008084",
            "ldrb r3, [r0]",
            "cmp r3, 0",
            "bne 0x8008278",
            "ldr r0, [r5, 8]",
            "mov r3, 0x27c",
            "ldrh r3, [r0, r3]",
            "cmp r3, 0",
            "beq free_netdev",
            "bl unregister_netdev",
            "mov r8, 0",
            "mov r0, r6",
            "mov r1, r8",
            "add r6, r4, 8",
            "str r8, [r5, 8]",
            "bl dhd_wmf_cleanup",
            "mov r3, r8",
            "mov r2, 1",
            "mov r1, r8",
            "mov r0, r6",
            "str r8, [sp]",
            "bl dhd_l2_filter_arp_table_update",
            "ldr r1, [r5, 0xa8]",
            "mov r0, r6",
            "bl dhd_deinit_l2_arp_table",
            "mov r0, r5",
            "str r8, [r5, 0xa8]",
            "bl fcn.080051c0",
            "ldr r0, [r4, 8]",
            "mov r1, r5",
            "mov r2, 0xac",
            "bl osl_mfree",
            "movw r3, 0x1808",
            "str r8, [r4, r3]",
            "movw r3, 0x3888",
            "mov r1, 0",
            "ldrb r2, [r4, r3]",
            "strb r1, [r4, r3]",
            "cmp r2, r1",
            "bne 0x8008208",
            "movw r3, 0x39b0",
            "ldr r3, [r4, r3]",
            "tst r3, 0x20",
            "beq 0x8008170",
            "movw r5, 0x3908",
            "ldr r3, [r4, r5]",
            "cmp r3, 0",
            "bge 0x80082a0",
            "mov r3, 0x3980",
            "ldrb r3, [r4, r3]",
            "cmp r3, 0",
            "beq 0x8008154",
            "movw r5, 0x3948",
            "ldr r3, [r4, r5]",
            "cmp r3, 0",
            "bge 0x80082e8",
            "movw r5, 0x38c8",
            "ldr r3, [r4, r5]",
            "cmp r3, 0",
            "bge 0x8008330",
            "add r0, r4, 0x3880",
            "add r0, r0, 0xc",
            "bl tasklet_kill",
            "movw r5, 0x39b4",
            "ldr r0, [r4, r5]",
            "bl dhd_deferred_work_deinit",
            "movw r3, 0x39b0",
            "mov r2, 0",
            "ldr r3, [r4, r3]",
            "str r2, [r4, r5]",
            "tst r3, 0x40",
            "bne 0x80081e8",
            "ldr r0, [r4, 8]",
            "bl osl_ctfpool_cleanup",
            "movw r3, 0x39b8",
            "ldr r0, [r4, r3]",
            "cmp r0, 0",
            "beq 0x80081b8",
            "ldrb r3, [r0]",
            "cmp r3, 0",
            "bne 0x8008264",
            "ldr r3, [r4, 4]",
            "mov r1, 1",
            "ldr r2, [0x08008380]",
            "add r3, r3, r3, lsl 1",
            "add r3, r2, r3, lsl 2",
            "mov r2, 0",
            "str r2, [r3, 4]",
            "ldm r4, {r0, r2}",
            "bl fwder_dettach",
            "str r0, [r4]",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sl, pc}",
            "ldr r3, [r7]",
            "tst r3, 2",
            "beq 0x8008194",
            "movw r3, 0x398c",
            "ldr r0, [0x08008384]",
            "ldr r1, [r4, r3]",
            "bl printk",
            "b 0x8008194",
            "add r0, r4, 0x3840",
            "add r0, r0, 0x2c",
            "bl del_timer_sync",
            "b 0x8008114",
            "mov r2, 0",
            "ldr r0, [0x08008388]",
            "strb r2, [r3, -0xfc0]",
            "bl unregister_inet6addr_notifier",
            "b 0x8007fe8",
            "mov r0, r6",
            "bl dhd_flow_rings_deinit",
            "mov r0, r6",
            "bl dhd_bus_detach",
            "ldr r3, [r6, 8]",
            "cmp r3, 0",
            "beq 0x8007fd8",
            "mov r0, r6",
            "bl dhd_prot_detach",
            "b 0x8007fd8",
            "mov r0, 0x64",
            "bl osl_sleep",
            "ldr r3, [r4, r5]",
            "b 0x8007fd0",
            "ldr r3, [r0, 4]",
            "blx r3",
            "b 0x80081b8",
            "bl free_netdev",
            "b 0x800809c",
            "ldr r3, [r0, 0x54]",
            "ldr r1, [r5, 8]",
            "blx r3",
            "b 0x8008084",
            "movw r3, 0x39b0",
            "ldr r1, [0x0800838c]",
            "ldr r2, [r4, r3]",
            "ldr r0, [0x08008390]",
            "bl printk",
            "b 0x8007fb8",
            "mov r2, 1",
            "movw r3, 0x3920",
            "str r2, [r4, r3]",
            "dmb sy",
            "add r6, r4, 0x3900",
            "add r0, r6, 0x10",
            "bl up",
            "add r0, r6, 0x24",
            "bl wait_for_completion",
            "mov r3, 0x3900",
            "ldr r0, [0x08008394]",
            "ldr r2, [r4, r3]",
            "ldr r1, [0x0800838c]",
            "ldr r3, [r4, r5]",
            "bl printk",
            "mvn r3, 0",
            "str r3, [r4, r5]",
            "b 0x8008134",
            "mov r2, 1",
            "movw r3, 0x3960",
            "str r2, [r4, r3]",
            "dmb sy",
            "add r6, r4, 0x3940",
            "add r0, r6, 0x10",
            "bl up",
            "add r0, r6, 0x24",
            "bl wait_for_completion",
            "mov r3, 0x3940",
            "ldr r0, [0x08008394]",
            "ldr r2, [r4, r3]",
            "ldr r1, [0x0800838c]",
            "ldr r3, [r4, r5]",
            "bl printk",
            "mvn r3, 0",
            "str r3, [r4, r5]",
            "b 0x8008154",
            "mov r2, 1",
            "movw r3, 0x38e0",
            "str r2, [r4, r3]",
            "dmb sy",
            "add r6, r4, 0x38c0",
            "add r0, r6, 0x10",
            "bl up",
            "add r0, r6, 0x24",
            "bl wait_for_completion",
            "mov r3, 0x38c0",
            "ldr r0, [0x08008394]",
            "ldr r2, [r4, r3]",
            "ldr r1, [0x0800838c]",
            "ldr r3, [r4, r5]",
            "bl printk",
            "mvn r3, 0",
            "str r3, [r4, r5]",
            "b 0x8008170"
        ]
    },
    "fcn.080051c0": {
        "function_address": "0x080051c0",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sl, lr}",
            "mov r7, r0",
            "ldr r4, [r7, 0x98]!",
            "mov r6, r0",
            "cmp r7, r4",
            "ldr r5, [r4], -0x20",
            "popeq {r3, r4, r5, r6, r7, r8, sl, pc}",
            "mov sl, 0x100",
            "mov r8, 0x200",
            "sub r5, r5, 0x20",
            "movt sl, 0x10",
            "movt r8, 0x20",
            "ldr r0, [r6, 4]",
            "mov r2, r4",
            "add r1, r4, 0x18",
            "cmp r0, 0",
            "beq 0x8005208",
            "bl fwder_deassoc",
            "ldr r3, [r4, 0x24]",
            "mov r1, r4",
            "ldr r2, [r4, 0x20]",
            "str r3, [r2, 4]",
            "str r2, [r3]",
            "str sl, [r4, 0x20]",
            "str r8, [r4, 0x24]",
            "mov r4, r5",
            "ldr r0, [r6]",
            "add r0, r0, 8",
            "bl fcn.080050d4",
            "ldr r3, [r5, 0x20]!",
            "cmp r7, r5",
            "sub r5, r3, 0x20",
            "bne 0x80051f0",
            "pop {r3, r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "sym.si_socdevram_size": {
        "function_address": "0x0801e1f4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r0",
            "ldr r3, [r0, 0x68]",
            "sub sp, sp, 0x14",
            "ldr r8, [r0, 0x9c]",
            "cmp r3, 0",
            "beq 0x801e370",
            "ldr sl, [r0, 0x8c]",
            "ldr r2, [r0, 0x60]",
            "add r1, sl, 0x20",
            "ldr r1, [r8, r1, lsl 2]",
            "cmp r1, r2",
            "movne r3, 0",
            "strne r3, [sp, 4]",
            "beq 0x801e37c",
            "mov r0, r4",
            "movw r1, 0x80e",
            "mov r2, 0",
            "bl si_setcore",
            "subs r7, r0, 0",
            "moveq r6, r7",
            "beq 0x801e28c",
            "mov r0, r4",
            "bl si_iscoreup",
            "cmp r0, 0",
            "str r0, [sp]",
            "beq 0x801e338",
            "mov r0, r4",
            "bl si_corerev",
            "cmp r0, 9",
            "movls r6, 0",
            "bhi 0x801e2cc",
            "ldr r3, [sp]",
            "cmp r3, 0",
            "beq 0x801e2bc",
            "mov r0, r4",
            "mov r1, sl",
            "bl si_setcoreidx",
            "ldr r3, [r4, 0x6c]",
            "cmp r3, 0",
            "beq 0x801e2b0",
            "ldr r1, [r4, 0x8c]",
            "ldr r2, [r4, 0x60]",
            "add r1, r1, 0x20",
            "ldr r1, [r8, r1, lsl 2]",
            "cmp r1, r2",
            "beq 0x801e360",
            "mov r0, r6",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "mov r0, r4",
            "mov r1, r3",
            "bl si_core_disable",
            "b 0x801e280",
            "ldr r0, [r4, 0x58]",
            "add r1, r7, 8",
            "add r2, sp, 0xc",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "ldr sb, [sp, 0xc]",
            "ubfx sb, sb, 0xc, 4",
            "cmp sb, 0",
            "moveq r6, sb",
            "beq 0x801e274",
            "mov r5, 0",
            "add fp, r4, 0x58",
            "mov r6, r5",
            "mov r2, r5",
            "add r5, r5, 1",
            "uxtb r5, r5",
            "mov r0, fp",
            "mov r1, r7",
            "mov r3, 2",
            "bl fcn.0801ba94",
            "cmp sb, r5",
            "add r6, r6, r0",
            "bhi 0x801e300",
            "ldr r3, [sp]",
            "cmp r3, 0",
            "bne 0x801e280",
            "b 0x801e2bc",
            "ldr r1, [sp]",
            "mov r0, r4",
            "mov r2, r1",
            "bl si_core_reset",
            "mov r0, r4",
            "bl si_corerev",
            "cmp r0, 9",
            "movls r6, 0",
            "bls 0x801e274",
            "b 0x801e2cc",
            "ldr r0, [r4, 0x64]",
            "ldr r1, [sp, 4]",
            "blx r3",
            "b 0x801e2b0",
            "ldr sl, [r0, 0x8c]",
            "str r3, [sp, 4]",
            "b 0x801e230",
            "ldr r0, [r0, 0x64]",
            "blx r3",
            "ldr sl, [r4, 0x8c]",
            "str r0, [sp, 4]",
            "b 0x801e230"
        ]
    },
    "fcn.0801ba94": {
        "function_address": "0x0801ba94",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r4, r0",
            "sub sp, sp, 8",
            "mov r5, r1",
            "orr r6, r2, r3, lsl 8",
            "dsb sy",
            "ldr r3, [0x0801baf0]",
            "ldr r1, [r3, 0xc]",
            "cmp r1, 0",
            "beq 0x801bac0",
            "blx r1",
            "str r6, [r5, 0x10]",
            "add r1, r5, 0x40",
            "ldr r0, [r4]",
            "add r2, sp, 4",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "ldr r0, [sp, 4]",
            "and r0, r0, 0x7f",
            "add r0, r0, 1",
            "lsl r0, r0, 0xd",
            "add sp, sp, 8",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.dhd_prot_txdata_write_flush": {
        "function_address": "0x0802213c",
        "instructions": [
            "movw r3, 0x1798",
            "push {r4, lr}",
            "ldr r3, [r0, r3]",
            "add r1, r1, r1, lsl 3",
            "add r1, r3, r1, lsl 3",
            "ldr r4, [r1, 0x44]",
            "ldrh r3, [r4, 0x2c]",
            "cmp r3, 0",
            "popeq {r4, pc}",
            "mov r1, r4",
            "ldr r2, [r4, 0x28]",
            "bl sym.prot_ring_write_complete",
            "mov r3, 0",
            "strh r3, [r4, 0x2c]",
            "str r3, [r4, 0x28]",
            "pop {r4, pc}"
        ]
    },
    "sym.si_socram_srmem_size": {
        "function_address": "0x0801e9cc",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "movw r3, 0x4334",
            "ldr r2, [r0, 0x3c]",
            "mov r4, r0",
            "sub sp, sp, 0x24",
            "ldr r0, [r0, 0x9c]",
            "cmp r2, r3",
            "str r0, [sp, 4]",
            "beq 0x801eb84",
            "ldr r3, [r4, 0x68]",
            "cmp r3, 0",
            "beq 0x801eba0",
            "ldr r0, [r4, 0x8c]",
            "ldr r2, [r4, 0x60]",
            "str r0, [sp, 8]",
            "add r1, r0, 0x20",
            "ldr r0, [sp, 4]",
            "ldr r1, [r0, r1, lsl 2]",
            "cmp r1, r2",
            "movne r3, 0",
            "strne r3, [sp, 0x14]",
            "beq 0x801ebe4",
            "mov r0, r4",
            "movw r1, 0x80e",
            "mov r2, 0",
            "bl si_setcore",
            "subs r6, r0, 0",
            "moveq sl, r6",
            "beq 0x801eb50",
            "mov r0, r4",
            "bl si_iscoreup",
            "cmp r0, 0",
            "str r0, [sp, 0xc]",
            "beq 0x801ebb0",
            "mov r0, r4",
            "add r7, sp, 0x1c",
            "bl si_corerev",
            "mov r1, r6",
            "mov r5, r0",
            "mov r2, r7",
            "ldr r0, [r4, 0x58]",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "cmp r5, 0xf",
            "ldr r8, [sp, 0x1c]",
            "movls sl, 0",
            "bls 0x801eb38",
            "ubfx r8, r8, 4, 4",
            "cmp r8, 0",
            "moveq sl, r8",
            "beq 0x801eb38",
            "mov r2, 0",
            "add r0, r4, 0x58",
            "ldr sb, [0x0801ebfc]",
            "mov r5, r2",
            "mov sl, r2",
            "add fp, r6, 0x40",
            "str r0, [sp, 0x10]",
            "b 0x801eacc",
            "add r5, r5, 1",
            "uxtb r5, r5",
            "cmp r8, r5",
            "mov r2, r5",
            "bls 0x801eb38",
            "dsb sy",
            "ldr r3, [sb, 0xc]",
            "cmp r3, 0",
            "beq 0x801eae8",
            "str r2, [sp]",
            "blx r3",
            "ldr r2, [sp]",
            "str r2, [r6, 0x10]",
            "mov r3, 4",
            "mov r1, fp",
            "ldr r0, [r4, 0x58]",
            "mov r2, r7",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 0x1c]",
            "tst r3, 0x10000",
            "beq 0x801eab8",
            "mov r2, r5",
            "add r5, r5, 1",
            "uxtb r5, r5",
            "ldr r0, [sp, 0x10]",
            "mov r1, r6",
            "mov r3, 0",
            "bl fcn.0801ba94",
            "cmp r8, r5",
            "add sl, sl, r0",
            "mov r2, r5",
            "bhi 0x801eacc",
            "ldr r2, [sp, 0xc]",
            "cmp r2, 0",
            "beq 0x801ebc4",
            "mov r0, r4",
            "ldr r1, [sp, 8]",
            "bl si_setcoreidx",
            "ldr r3, [r4, 0x6c]",
            "cmp r3, 0",
            "beq 0x801eb78",
            "ldr r1, [r4, 0x8c]",
            "ldr r0, [sp, 4]",
            "ldr r2, [r4, 0x60]",
            "add r1, r1, 0x20",
            "ldr r1, [r0, r1, lsl 2]",
            "cmp r1, r2",
            "beq 0x801ebd4",
            "mov r0, sl",
            "add sp, sp, 0x24",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r3, [r4, 0x40]",
            "cmp r3, 1",
            "movls sl, 0x8000",
            "bls 0x801eb78",
            "ldr r3, [r4, 0x68]",
            "cmp r3, 0",
            "bne 0x801e9fc",
            "ldr r2, [r4, 0x8c]",
            "str r3, [sp, 0x14]",
            "str r2, [sp, 8]",
            "b 0x801ea24",
            "ldr r1, [sp, 0xc]",
            "mov r0, r4",
            "mov r2, r1",
            "bl si_core_reset",
            "b 0x801ea54",
            "mov r0, r4",
            "mov r1, r2",
            "bl si_core_disable",
            "b 0x801eb44",
            "ldr r0, [r4, 0x64]",
            "ldr r1, [sp, 0x14]",
            "blx r3",
            "b 0x801eb78",
            "ldr r0, [r4, 0x64]",
            "blx r3",
            "ldr r2, [r4, 0x8c]",
            "str r0, [sp, 0x14]",
            "str r2, [sp, 8]",
            "b 0x801ea24"
        ]
    },
    "sym.dhd_prot_process_ctrlbuf": {
        "function_address": "0x08021d50",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "sub sp, sp, 8",
            "mov r4, r0",
            "ldr r7, [0x08021de0]",
            "add r6, sp, 6",
            "ldr r5, [r0, 8]",
            "b 0x8021dac",
            "bl 0x8021d6c",
            "mov r0, r4",
            "ldr r1, [r5, 0x38]",
            "mov r2, r8",
            "ldrh r3, [sp, 6]",
            "bl fcn.080215bc",
            "cmp r0, 0",
            "beq 0x8021d98",
            "ldr r3, [r7]",
            "tst r3, 1",
            "bne 0x8021dcc",
            "ldr r3, [r5, 0x38]",
            "mov r0, r4",
            "ldrh r1, [r3, 2]",
            "ldr r2, [r3, 0x34]",
            "bl 0x8021da8",
            "ldr r1, [r5, 0x38]",
            "mov r2, r6",
            "mov r0, r4",
            "bl 0x8021db8",
            "subs r8, r0, 0",
            "bne 0x8021d6c",
            "add sp, sp, 8",
            "pop {r4, r5, r6, r7, r8, pc}",
            "ldrh r2, [sp, 6]",
            "ldr r1, [0x08021de4]",
            "ldr r0, [0x08021de8]",
            "bl 0x8021dd8",
            "b 0x8021d98"
        ]
    },
    "sym.si_kattach": {
        "function_address": "0x0801c734",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "mov r7, r0",
            "ldr r4, [0x0801c7d8]",
            "sub sp, sp, 0xc",
            "ldrb r5, [r4, 0x624]",
            "cmp r5, 0",
            "addne r0, r4, 0x580",
            "beq 0x801c75c",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, pc}",
            "mov r2, r5",
            "mov r1, 0x1000",
            "mov r0, 0x18000000",
            "bl __arm_ioremap",
            "mov r6, r0",
            "movw r1, 0x4710",
            "add r0, r4, 0x580",
            "mov r2, r7",
            "mov r3, r6",
            "str r5, [sp]",
            "str r5, [sp, 4]",
            "str r4, [r4, 0x61c]",
            "bl fcn.0801bfa8",
            "subs r5, r0, 0",
            "beq 0x801c7c8",
            "mov r0, r6",
            "bl __iounmap",
            "ldr r3, [r4, 0x598]",
            "ldr r0, [0x0801c7dc]",
            "tst r3, 0x10000000",
            "movne r3, 0x20",
            "movweq r3, 0x4e20",
            "strne r3, [r4, 0x628]",
            "streq r3, [r4, 0x628]",
            "mov r3, 1",
            "strb r3, [r4, 0x624]",
            "b 0x801c754",
            "mov r0, r6",
            "bl __iounmap",
            "mov r0, r5",
            "b 0x801c754"
        ]
    },
    "fcn.0801bfa8": {
        "function_address": "0x0801bfa8",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x2c",
            "ldr r5, [sp, 0x50]",
            "mov r6, r3",
            "mov r3, 0x21",
            "mov r4, r0",
            "str r3, [r0, 0x10]",
            "mov r8, r2",
            "ldr r3, [sp, 0x54]",
            "cmp r5, 1",
            "mov sb, r1",
            "str r6, [r0, 0x88]",
            "str r2, [r4, 0x58]",
            "str r3, [r0, 0x5c]",
            "beq 0x801c310",
            "mov r0, 0x18000000",
            "mov r1, 0x1000",
            "mov r2, 0",
            "bl __arm_ioremap",
            "cmp r5, 2",
            "mov r7, r0",
            "str r5, [r4, 4]",
            "movne sl, 0",
            "beq 0x801c2c0",
            "cmp r7, 0",
            "moveq r4, r7",
            "beq 0x801c0b0",
            "mov r0, r8",
            "mov r1, r7",
            "add r2, sp, 0x24",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x24]",
            "movw r3, 0x4335",
            "movt r3, 2",
            "movw ip, 0x4329",
            "bic r1, r2, 0xff000000",
            "bic r1, r1, 0xf00000",
            "cmp r1, r3",
            "subeq r2, r2, 0xff00",
            "subeq r2, r2, 0xfc",
            "uxth r1, r2",
            "lsr r3, r2, 0x1c",
            "cmp r1, ip",
            "ubfx r0, r2, 0x10, 4",
            "ubfx r2, r2, 0x14, 4",
            "str r1, [r4, 0x3c]",
            "str r3, [r4]",
            "str r0, [r4, 0x40]",
            "str r2, [r4, 0x44]",
            "beq 0x801c2d0",
            "sub r2, r2, 0xe",
            "cmp r2, 1",
            "movhi r2, 0",
            "movls r2, 1",
            "cmp r3, 0",
            "strb r2, [r4, 0x4c]",
            "beq 0x801c0bc",
            "cmp r3, 1",
            "cmpne r3, 3",
            "movne r2, 0",
            "moveq r2, 1",
            "beq 0x801c2ec",
            "cmp r3, 2",
            "movne r4, r2",
            "beq 0x801c0cc",
            "mov r0, r4",
            "add sp, sp, 0x2c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "mov r0, r4",
            "mov r1, r6",
            "mov r2, sb",
            "bl sb_scan",
            "ldr r3, [r4, 0x90]",
            "cmp r3, 0",
            "moveq r4, r3",
            "beq 0x801c0b0",
            "mov r1, 0",
            "mov r0, r4",
            "ldr fp, [r4, 0x9c]",
            "bl si_setcoreidx",
            "str r0, [sp, 0x18]",
            "mov r0, r4",
            "bl si_corerev",
            "cmp r0, 0xa",
            "str r0, [r4, 0x14]",
            "bgt 0x801c5ec",
            "ldr r3, [sp, 0x18]",
            "add r2, sp, 0x24",
            "ldr r0, [r4, 0x58]",
            "add r1, r3, 4",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "ldr r2, [r4, 0x14]",
            "ldr r3, [sp, 0x24]",
            "cmp r2, 0x22",
            "str r3, [r4, 0x18]",
            "bgt 0x801c5c4",
            "tst r3, 0x10000000",
            "beq 0x801c1d8",
            "ldr r3, [r4, 0x14]",
            "cmp r3, 0x22",
            "ble 0x801c59c",
            "ldr r3, [r4, 0x1c]",
            "tst r3, 0x40",
            "beq 0x801c59c",
            "ldr r0, [r4, 0x90]",
            "ldr r3, [r4, 0x9c]",
            "cmp r0, 0",
            "beq 0x801c194",
            "ldr r2, [r3, 0x80]",
            "movw ip, 0x827",
            "cmp r2, ip",
            "addne r3, r3, 0x80",
            "movne r1, 0",
            "bne 0x801c188",
            "b 0x801c6dc",
            "ldr r2, [r3, 4]!",
            "cmp r2, ip",
            "beq 0x801c198",
            "add r1, r1, 1",
            "cmp r0, r1",
            "bhi 0x801c17c",
            "mov r1, 0x21",
            "mov r0, r4",
            "bl si_setcoreidx",
            "add r1, r0, 0x600",
            "add r2, sp, 0x24",
            "add r1, r1, 4",
            "ldr r0, [r4, 0x58]",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 0x24]",
            "mov r0, r4",
            "mov r1, 0",
            "str r3, [r4, 0x24]",
            "bl si_setcoreidx",
            "ldr r3, [r4, 0x24]",
            "and r3, r3, 0xff",
            "str r3, [r4, 0x20]",
            "ldr r1, [r4, 0x90]",
            "mvn r3, 0",
            "mov r2, 0x21",
            "mov r0, 0x700",
            "str r0, [r4, 8]",
            "cmp r1, 0",
            "str r3, [r4, 0xc]",
            "str r2, [r4, 0x10]",
            "moveq ip, r1",
            "beq 0x801c4a8",
            "mov r1, 0",
            "str r7, [sp, 0x1c]",
            "str r1, [sp, 8]",
            "mov sb, r1",
            "str r2, [sp, 0x10]",
            "mov r7, r1",
            "str r3, [sp, 0x14]",
            "str r1, [sp, 0xc]",
            "b 0x801c268",
            "movw r2, 0x83c",
            "cmp r3, r2",
            "beq 0x801c390",
            "cmp sl, 0",
            "beq 0x801c248",
            "ldr r3, [fp, 0x100]",
            "cmp sl, r3",
            "moveq r7, sb",
            "beq 0x801c254",
            "ldr r3, [fp]",
            "cmp r6, r3",
            "moveq r7, sb",
            "ldr r3, [r4, 0x90]",
            "add sb, sb, 1",
            "add fp, fp, 4",
            "cmp sb, r3",
            "bhs 0x801c46c",
            "mov r1, sb",
            "mov r0, r4",
            "bl si_setcoreidx",
            "ldr r2, [r4, 0x8c]",
            "mov r0, r4",
            "ldr r3, [r4, 0x9c]",
            "add r2, r2, 0x20",
            "ldr r3, [r3, r2, lsl 2]",
            "str r3, [sp, 4]",
            "bl si_corerev",
            "cmp r5, 0",
            "ldr r3, [sp, 4]",
            "beq 0x801c224",
            "cmp r5, 1",
            "beq 0x801c3d0",
            "movw r1, 0x80d",
            "cmp r5, 2",
            "cmpeq r3, r1",
            "streq r0, [r4, 0xc]",
            "streq r1, [r4, 8]",
            "streq sb, [r4, 0x10]",
            "b 0x801c230",
            "mov r3, 1",
            "mov sl, 0",
            "strb r3, [r4, 0x7c]",
            "b 0x801c008",
            "cmp r0, 0",
            "bne 0x801c074",
            "cmp r2, 0",
            "movne r1, 1",
            "movne r2, r0",
            "strne r1, [r4, 0x44]",
            "b 0x801c084",
            "mov r0, r4",
            "mov r1, r7",
            "mov r2, sb",
            "bl ai_scan",
            "ldr r3, [r4, 0x90]",
            "cmp r3, 0",
            "moveq r4, r3",
            "beq 0x801c0b0",
            "b 0x801c0dc",
            "mov r0, r2",
            "mov r1, 0x88",
            "mov r2, 4",
            "bl osl_pci_read_config",
            "cmn r0, 1",
            "beq 0x801c42c",
            "ldr r0, [r4, 0x58]",
            "mov r1, 0x80",
            "mov r2, 4",
            "bl osl_pci_read_config",
            "add r3, r0, 0xe8000000",
            "mov sl, r0",
            "cmp r3, 0x20000",
            "movhs sl, 0x18000000",
            "blo 0x801c37c",
            "mov r3, 0x18000000",
            "ldr r0, [r4, 0x58]",
            "mov r1, 0x80",
            "mov r2, 4",
            "bl osl_pci_write_config",
            "cmp r6, 0",
            "movne r3, 1",
            "movne r7, r6",
            "strne r3, [r4, 4]",
            "bne 0x801c008",
            "mov r4, r6",
            "b 0x801c0b0",
            "lsl r3, sl, 0x14",
            "lsr r3, r3, 0x14",
            "cmp r3, 0",
            "movne sl, 0x18000000",
            "b 0x801c34c",
            "ldr r3, [r4, 0x3c]",
            "movw r1, 0xaa52",
            "cmp r3, r1",
            "beq 0x801c454",
            "movw r2, 0x4345",
            "cmp r3, r2",
            "bne 0x801c230",
            "ldr r3, [r4, 0x48]",
            "tst r3, 8",
            "beq 0x801c230",
            "mov r3, 1",
            "str r0, [sp, 0x14]",
            "str r3, [sp, 8]",
            "str sb, [sp, 0x10]",
            "str r3, [sp, 0xc]",
            "b 0x801c230",
            "movw r1, 0x804",
            "cmp r3, r1",
            "beq 0x801c230",
            "movw r1, 0x83c",
            "cmp r3, r1",
            "movne r2, 0",
            "moveq r2, 1",
            "cmp r3, r1",
            "cmpne r3, 0x820",
            "bne 0x801c230",
            "cmp r2, 0",
            "ldr r2, [sp, 8]",
            "moveq r0, r0",
            "movne r3, sb",
            "moveq r3, sb",
            "movne r1, r5",
            "moveq r1, r5",
            "str r0, [sp, 0x14]",
            "movne r2, r5",
            "str r3, [sp, 0x10]",
            "str r1, [sp, 0xc]",
            "str r2, [sp, 8]",
            "b 0x801c230",
            "mov r0, 0x18000000",
            "mov r1, 0x1000",
            "mov r2, 0",
            "bl __arm_ioremap",
            "mov r3, 0",
            "mov r7, r0",
            "mov sl, r3",
            "str r3, [r4, 4]",
            "mov r5, r3",
            "b 0x801c008",
            "mov r2, 1",
            "str r0, [sp, 0x14]",
            "str r2, [sp, 8]",
            "str sb, [sp, 0x10]",
            "str r2, [sp, 0xc]",
            "b 0x801c230",
            "ldr r1, [sp, 0xc]",
            "mov ip, r7",
            "ldr r7, [sp, 0x1c]",
            "cmp r1, 0",
            "beq 0x801c4a8",
            "ldr r2, [sp, 8]",
            "ldr r1, [sp, 0x10]",
            "cmp r2, 0",
            "movwne r3, 0x83c",
            "moveq r3, 0x820",
            "strne r3, [r4, 8]",
            "streq r3, [r4, 8]",
            "ldr r3, [sp, 0x14]",
            "str r1, [r4, 0x10]",
            "str r3, [r4, 0xc]",
            "ldr r3, [r4, 4]",
            "cmp r3, 0",
            "bne 0x801c4c4",
            "ldr r2, [r4, 0x3c]",
            "movw r3, 0x4712",
            "cmp r2, r3",
            "beq 0x801c610",
            "mov r1, ip",
            "mov r0, r4",
            "str ip, [sp, 4]",
            "bl si_setcoreidx",
            "ldr r3, [r4, 0x3c]",
            "movw r2, 0x4322",
            "ldr ip, [sp, 4]",
            "cmp r3, r2",
            "beq 0x801c6c4",
            "ldr r2, [r4, 0x14]",
            "cmp r2, 0x25",
            "beq 0x801c67c",
            "cmp r2, 0x13",
            "ble 0x801c0b0",
            "mov r0, r4",
            "mov r1, 0x800",
            "mov r2, 0",
            "str ip, [sp, 4]",
            "bl si_setcore",
            "ldr r6, [r4, 0x3c]",
            "movw r2, 0xa886",
            "movw r3, 0x4314",
            "mov r5, r0",
            "ldr ip, [sp, 4]",
            "cmp r6, r3",
            "cmpne r6, r2",
            "movne r6, 0",
            "moveq r6, 1",
            "moveq r8, 0x2e0",
            "moveq r6, 0x500",
            "movne r8, r6",
            "movteq r6, 2",
            "movteq r8, 4",
            "dsb sy",
            "ldr r7, [0x0801c730]",
            "ldr r3, [r7, 0xc]",
            "cmp r3, 0",
            "beq 0x801c568",
            "str ip, [sp, 4]",
            "blx r3",
            "ldr ip, [sp, 4]",
            "str r8, [r5, 0x58]",
            "dsb sy",
            "ldr r3, [r7, 0xc]",
            "cmp r3, 0",
            "beq 0x801c588",
            "str ip, [sp, 4]",
            "blx r3",
            "ldr ip, [sp, 4]",
            "str r6, [r5, 0x5c]",
            "mov r0, r4",
            "mov r1, ip",
            "bl si_setcoreidx",
            "b 0x801c0b0",
            "ldr r3, [sp, 0x18]",
            "add r2, sp, 0x24",
            "ldr r0, [r4, 0x58]",
            "add r1, r3, 0x600",
            "mov r3, 4",
            "add r1, r1, 4",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 0x24]",
            "str r3, [r4, 0x24]",
            "b 0x801c1d0",
            "ldr r2, [sp, 0x18]",
            "mov r3, 4",
            "ldr r0, [r4, 0x58]",
            "add r1, r2, 0xac",
            "add r2, sp, 0x24",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x24]",
            "ldr r3, [r4, 0x18]",
            "str r2, [r4, 0x1c]",
            "b 0x801c130",
            "ldr r2, [sp, 0x18]",
            "mov r3, 4",
            "ldr r0, [r4, 0x58]",
            "add r1, r2, 0x2c",
            "add r2, sp, 0x24",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 0x24]",
            "str r3, [r4, 0x48]",
            "b 0x801c104",
            "ldr r3, [r4, 0x44]",
            "cmp r3, 0",
            "beq 0x801c4c4",
            "ldr r3, [r4, 0x40]",
            "cmp r3, 3",
            "bhi 0x801c4c4",
            "dsb sy",
            "ldr r3, [0x0801c730]",
            "ldr r3, [r3, 0xc]",
            "cmp r3, 0",
            "beq 0x801c648",
            "str ip, [sp, 4]",
            "blx r3",
            "ldr ip, [sp, 4]",
            "ldr r2, [sp, 0x18]",
            "mov r3, 4",
            "ldr r0, [r4, 0x58]",
            "str ip, [sp, 4]",
            "add r1, r2, 0xb8",
            "add r2, sp, 0x24",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 0x24]",
            "ldr r1, [sp, 0x18]",
            "orr r3, r3, 1",
            "str r3, [r1, 0xb8]",
            "ldr ip, [sp, 4]",
            "b 0x801c4c4",
            "sub r1, r3, 0xa800",
            "movw r2, 0xa8e6",
            "sub r1, r1, 0xe2",
            "cmp r3, r2",
            "cmpne r1, 2",
            "bhi 0x801c4fc",
            "ldr r3, [r4, 0x40]",
            "cmp r3, 2",
            "bhi 0x801c4fc",
            "ldr r3, [r7, 0x2c]",
            "tst r3, 0x200",
            "bne 0x801c6e4",
            "mov r0, 0xa",
            "str ip, [sp, 4]",
            "bl osl_delay",
            "ldr r2, [r4, 0x14]",
            "ldr ip, [sp, 4]",
            "b 0x801c4f4",
            "ldr r2, [r4, 0x48]",
            "ubfx r2, r2, 6, 2",
            "cmp r2, 3",
            "moveq r4, 0",
            "bne 0x801c4e8",
            "b 0x801c0b0",
            "mov r1, 0",
            "b 0x801c198",
            "mov r0, r8",
            "add r1, r7, 0xa4",
            "add r2, sp, 0x24",
            "mov r3, 4",
            "str ip, [sp, 4]",
            "bl osl_pcie_rreg",
            "ldr r5, [sp, 0x24]",
            "bic r5, r5, 0xf0000",
            "orr r5, r5, 0xe0000",
            "dsb sy",
            "ldr r3, [0x0801c730]",
            "ldr ip, [sp, 4]",
            "ldr r3, [r3, 0xc]",
            "cmp r3, 0",
            "beq 0x801c728",
            "blx r3",
            "ldr ip, [sp, 4]",
            "str r5, [r7, 0xa4]",
            "b 0x801c6ac"
        ]
    },
    "sym.sb_corerev": {
        "function_address": "0x0801aa18",
        "instructions": [
            "push {r3, lr}",
            "ldr r1, [r0, 0x88]",
            "add r1, r1, 0xff0",
            "add r1, r1, 0xc",
            "bl fcn.0801a5fc",
            "and r3, r0, 0x7000",
            "and r0, r0, 0xf",
            "orr r0, r0, r3, lsr 8",
            "pop {r3, pc}"
        ]
    },
    "sym.sb_core_disable": {
        "function_address": "0x0801b544",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r8, r1",
            "ldr r6, [r0, 0x88]",
            "sub sp, sp, 8",
            "mov r4, r0",
            "add r6, r6, 0xf00",
            "add r5, r6, 0x98",
            "mov r1, r5",
            "bl fcn.0801a5fc",
            "tst r0, 1",
            "beq 0x801b578",
            "add sp, sp, 8",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}",
            "mov r0, r4",
            "mov r1, r5",
            "bl fcn.0801a5fc",
            "tst r0, 0x10000",
            "bne 0x801b5b0",
            "lsl r2, r8, 0x10",
            "mov r0, r4",
            "mov r1, r5",
            "orr r2, r2, 3",
            "bl fcn.0801a710",
            "mov r0, 1",
            "add sp, sp, 8",
            "pop {r4, r5, r6, r7, r8, sb, sl, lr}",
            "b osl_delay",
            "mov r1, r5",
            "mov r0, r4",
            "bl fcn.0801a5fc",
            "mov r1, r5",
            "orr r2, r0, 2",
            "mov r0, r4",
            "movw r7, 0x86a9",
            "bl fcn.0801a710",
            "mov r1, r5",
            "mov r0, r4",
            "bl fcn.0801a5fc",
            "str r0, [sp, 4]",
            "mov r0, 1",
            "ldr r3, [sp, 4]",
            "movt r7, 1",
            "bl osl_delay",
            "add sl, r6, 0x9c",
            "b 0x801b608",
            "cmp r7, 9",
            "sub r7, r7, 0xa",
            "beq 0x801b620",
            "bl osl_delay",
            "mov r1, sl",
            "mov r0, r4",
            "bl fcn.0801a5fc",
            "tst r0, 4",
            "mov r0, 0xa",
            "bne 0x801b5f8",
            "mov r1, sl",
            "mov r0, r4",
            "add sb, r6, 0xf8",
            "bl fcn.0801a5fc",
            "mov r0, r4",
            "mov r1, sb",
            "bl fcn.0801a5fc",
            "tst r0, 0x80",
            "bne 0x801b6b4",
            "orr r2, r8, 3",
            "mov r0, r4",
            "lsl r2, r2, 0x10",
            "mov r1, r5",
            "orr r2, r2, 3",
            "bl fcn.0801a710",
            "mov r1, r5",
            "mov r0, r4",
            "bl fcn.0801a5fc",
            "mov r3, r0",
            "mov r0, 0xa",
            "str r3, [sp, 4]",
            "ldr r3, [sp, 4]",
            "bl osl_delay",
            "mov r0, r4",
            "mov r1, sb",
            "bl fcn.0801a5fc",
            "tst r0, 0x80",
            "beq 0x801b58c",
            "add r6, r6, 0x90",
            "mov r0, r4",
            "mov r1, r6",
            "bl fcn.0801a5fc",
            "mov r1, r6",
            "bic r2, r0, 0x2000000",
            "mov r0, r4",
            "bl fcn.0801a710",
            "b 0x801b58c",
            "add sl, r6, 0x90",
            "mov r0, r4",
            "mov r1, sl",
            "movw r7, 0x86a9",
            "bl fcn.0801a5fc",
            "mov r1, sl",
            "orr r2, r0, 0x2000000",
            "mov r0, r4",
            "movt r7, 1",
            "bl fcn.0801a710",
            "mov r0, r4",
            "mov r1, sl",
            "bl fcn.0801a5fc",
            "mov r3, r0",
            "mov r0, 1",
            "str r3, [sp, 4]",
            "ldr r3, [sp, 4]",
            "bl osl_delay",
            "b 0x801b710",
            "cmp r7, 9",
            "sub r7, r7, 0xa",
            "beq 0x801b644",
            "bl osl_delay",
            "mov r1, sl",
            "mov r0, r4",
            "bl fcn.0801a5fc",
            "tst r0, 0x1800000",
            "mov r0, 0xa",
            "bne 0x801b700",
            "b 0x801b644"
        ]
    },
    "sym.dhd_prot_flow_ring_create": {
        "function_address": "0x0800e940",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r2, 0x200",
            "ldrh ip, [r1, 0x32]",
            "sub sp, sp, 0x20",
            "mov r5, r1",
            "mov r7, r0",
            "ldr sl, [r0, 8]",
            "mov r8, 0",
            "add ip, ip, 3",
            "ldr r1, [0x0800eb28]",
            "uxth ip, ip",
            "mov r3, 0x30",
            "mov r0, sl",
            "strh r8, [sp, 0x1e]",
            "str ip, [sp]",
            "bl fcn.0800d264",
            "subs r6, r0, 0",
            "beq 0x800eab4",
            "str r6, [r5, 0x44]",
            "mov r0, r7",
            "ldr r1, [sl, 0x2c]",
            "mov r2, 1",
            "add r3, sp, 0x1e",
            "str r8, [sp]",
            "bl dhd_alloc_ring_space",
            "subs r4, r0, 0",
            "beq 0x800eacc",
            "mov r3, 1",
            "add r1, r5, 0x36",
            "strb r3, [r6]",
            "mov r3, 3",
            "strb r3, [r4]",
            "mov r2, 6",
            "ldrb r3, [r5, 0x35]",
            "add sb, r5, 0x3c",
            "str r8, [r4, 4]",
            "add r0, r4, 0xe",
            "add r8, sp, 0xc",
            "strb r3, [r4, 1]",
            "ldrb r3, [r5, 0x34]",
            "strb r3, [r4, 0x14]",
            "ldrh r3, [r5, 0x32]",
            "strh r3, [r4, 0x16]",
            "bl memcpy",
            "mov r1, sb",
            "mov r2, 6",
            "add r0, r4, 8",
            "bl memcpy",
            "ldr r3, [r6, 0x30]",
            "mov r2, 0x200",
            "mov r0, sb",
            "mov r1, r8",
            "ldr r3, [r3, 8]",
            "str r3, [r4, 0x20]",
            "ldr r3, [r6, 0x30]",
            "ldr r3, [r3, 0xc]",
            "strh r2, [r4, 0x1c]",
            "mov r2, 0x30",
            "strh r2, [r4, 0x1e]",
            "str r3, [r4, 0x24]",
            "bl bcm_ether_ntoa",
            "ldr r3, [0x0800eb2c]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "bne 0x800eaf0",
            "mov r2, r4",
            "mov r3, 1",
            "mov r0, r7",
            "ldr r1, [sl, 0x2c]",
            "bl prot_ring_write_complete",
            "movw r3, 0x17bd",
            "ldrb r4, [r7, r3]",
            "cmp r4, 0",
            "bne 0x800ea94",
            "ldr r1, [r6, 0x34]",
            "mov r2, 2",
            "ldrh ip, [r6, 2]",
            "mov r3, 0x10",
            "ldr r0, [r7, 4]",
            "add r1, r1, 4",
            "str ip, [sp]",
            "bl dhd_bus_cmn_writeshared",
            "mov r0, r4",
            "add sp, sp, 0x20",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}",
            "ldr r3, [r6, 0x34]",
            "mov r1, 0xb",
            "ldr r0, [r7, 8]",
            "ldrh r2, [r6, 2]",
            "ldrh r3, [r3, 4]",
            "bl sym.dhd_set_dmaed_index.clone.4",
            "mov r0, 0",
            "b 0x800ea8c",
            "ldr r3, [0x0800eb2c]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "bne 0x800eb14",
            "mvn r0, 0x1a",
            "b 0x800ea8c",
            "ldr r3, [0x0800eb2c]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "beq 0x800eac4",
            "ldr r0, [0x0800eb30]",
            "ldr r1, [0x0800eb34]",
            "bl printk",
            "mvn r0, 0x1a",
            "b 0x800ea8c",
            "ldrb ip, [r5, 0x34]",
            "mov r3, r8",
            "ldrb lr, [r5, 0x35]",
            "ldrh r2, [r5, 0x32]",
            "ldr r1, [0x0800eb34]",
            "ldr r0, [0x0800eb38]",
            "stm sp, {ip, lr}",
            "bl printk",
            "b 0x800ea44",
            "ldr r0, [0x0800eb3c]",
            "ldr r1, [0x0800eb34]",
            "bl printk",
            "mvn r0, 0x1a",
            "b 0x800ea8c"
        ]
    },
    "fcn.0800d264": {
        "function_address": "0x0800d264",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r5, r0",
            "sub sp, sp, 0x1c",
            "ldr r0, [r0]",
            "mov sb, r1",
            "mov r7, 0",
            "mov r1, 0x3c",
            "mov r8, r2",
            "mov sl, r3",
            "ldrh r6, [sp, 0x40]",
            "str r7, [sp, 0x14]",
            "bl osl_malloc",
            "subs r4, r0, 0",
            "beq 0x800d378",
            "mov r1, 0x3c",
            "add fp, r4, 4",
            "bl __memzero",
            "mov r1, sb",
            "mov r2, 0x18",
            "mov r0, fp",
            "bl strncpy",
            "strh r6, [r4, 2]",
            "mov r1, 0x10",
            "ldr r0, [r5]",
            "bl osl_malloc",
            "cmp r0, r7",
            "mov r3, r0",
            "str r0, [r4, 0x30]",
            "beq 0x800d3f0",
            "mov r1, 0x10",
            "mul r6, r8, sl",
            "bl __memzero",
            "ldr r1, [r4, 0x30]",
            "uxth r6, r6",
            "add ip, r4, 0x20",
            "mov r2, 4",
            "add r3, sp, 0x14",
            "strh r8, [r1, 4]",
            "mov r1, r6",
            "ldr r0, [r4, 0x30]",
            "strh sl, [r0, 6]",
            "ldr r0, [r5]",
            "str ip, [sp]",
            "bl osl_dma_alloc_consistent",
            "cmp r0, r7",
            "str r0, [r4, 0x1c]",
            "beq 0x800d3f8",
            "ldr r3, [r4, 0x30]",
            "cmp r6, 0",
            "str r7, [r3, 0xc]",
            "ldr r3, [r4, 0x30]",
            "ldr r2, [r4, 0x20]",
            "str r2, [r3, 8]",
            "ldr r0, [r4, 0x1c]",
            "bne 0x800d384",
            "mov r1, r6",
            "bl osl_cache_flush",
            "ldr r0, [r5]",
            "mov r1, 8",
            "bl osl_malloc",
            "cmp r0, 0",
            "str r0, [r4, 0x34]",
            "beq 0x800d394",
            "mov r1, 8",
            "bl __memzero",
            "ldr r3, [0x0800d43c]",
            "ldr r3, [r3]",
            "tst r3, 4",
            "bne 0x800d404",
            "mov r0, r4",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "mov r1, r6",
            "bl __memzero",
            "ldr r0, [r4, 0x1c]",
            "b 0x800d340",
            "ldr r3, [r4, 0x30]",
            "ldr r1, [r4, 0x1c]",
            "ldrh r2, [r3, 6]",
            "ldrh ip, [r3, 4]",
            "ldr r0, [r5]",
            "ldr r3, [r4, 0x20]",
            "mul r2, ip, r2",
            "uxth r2, r2",
            "bl osl_dma_free_consistent",
            "ldr r1, [r4, 0x30]",
            "mov r3, 0",
            "str r3, [r4, 0x1c]",
            "cmp r1, r3",
            "beq 0x800d3d8",
            "ldr r0, [r5]",
            "mov r2, 0x10",
            "bl osl_mfree",
            "mov r1, r4",
            "ldr r0, [r5]",
            "mov r2, 0x3c",
            "mov r4, 0",
            "bl osl_mfree",
            "b 0x800d378",
            "ldr r1, [r4, 0x1c]",
            "b 0x800d39c",
            "ldr r3, [r4, 0x30]",
            "mov r1, r0",
            "b 0x800d39c",
            "ldr ip, [r4, 0x30]",
            "mov r1, fp",
            "ldr r0, [0x0800d440]",
            "ldrh r2, [ip, 4]",
            "ldrh r3, [ip, 6]",
            "str r6, [sp]",
            "ldr lr, [r4, 0x1c]",
            "str lr, [sp, 4]",
            "ldr lr, [ip, 0xc]",
            "str lr, [sp, 8]",
            "ldr ip, [ip, 8]",
            "str ip, [sp, 0xc]",
            "bl printk",
            "b 0x800d378"
        ]
    },
    "sym.dhd_set_dmaed_index.clone.4": {
        "function_address": "0x0800cb38",
        "instructions": [
            "cmp r1, 0xb",
            "push {r4, r5, r6, r7, lr}",
            "mov ip, r0",
            "sub sp, sp, 0xc",
            "mov r4, r2",
            "mov r5, r3",
            "beq 0x800cba8",
            "cmp r1, 0xe",
            "beq 0x800cb7c",
            "ldr r7, [0x0800cc10]",
            "ldr r3, [r7]",
            "ands r6, r3, 1",
            "bne 0x800cbdc",
            "tst r3, 2",
            "bne 0x800cbf4",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, pc}",
            "ldr r3, [r0, 0xa0]",
            "sub r6, r2, 2",
            "uxth r6, r6",
            "str r5, [r3, r6, lsl 2]",
            "ldr r0, [r0, 0xa0]",
            "add r6, r3, r6, lsl 2",
            "ldr r1, [ip, 0x9c]",
            "bl osl_cache_flush",
            "ldr r3, [0x0800cc10]",
            "ldr r3, [r3]",
            "b 0x800cb6c",
            "cmp r2, 4",
            "ldr r3, [r0, 0x70]",
            "subhi r6, r2, 3",
            "movls r6, r2",
            "uxthhi r6, r6",
            "str r5, [r3, r6, lsl 2]",
            "add r6, r3, r6, lsl 2",
            "ldr r0, [r0, 0x70]",
            "ldr r1, [ip, 0x6c]",
            "bl osl_cache_flush",
            "ldr r3, [0x0800cc10]",
            "ldr r3, [r3]",
            "b 0x800cb6c",
            "ldr r0, [0x0800cc14]",
            "mov r6, 0",
            "ldr r1, [0x0800cc18]",
            "bl printk",
            "ldr r3, [r7]",
            "b 0x800cb6c",
            "mov r2, r6",
            "ldr r1, [0x0800cc18]",
            "mov r3, r4",
            "ldr r0, [0x0800cc1c]",
            "str r5, [sp]",
            "bl printk",
            "b 0x800cb74"
        ]
    },
    "sym.sb_addrspacesize": {
        "function_address": "0x0801ba3c",
        "instructions": [
            "push {r4, lr}",
            "ldr r3, [r0, 0x88]",
            "add r3, r3, 0xf00",
            "cmp r1, 3",
            "ldrls pc, [pc, r1, lsl 2]",
            "b 0x801ba8c",
            "bl fcn.0801a5fc",
            "pop {r4, lr}",
            "b sb_size",
            "mov r1, 0",
            "b 0x801ba68",
            "ldmdblt fp, {r0, r1, r5, r6, r7, r8, sb, sl, fp, ip, sp, lr}",
            "invalid",
            "ldrbeq sp, [r8, -r0, asr 8]",
            "strthi r8, [r2], sl, ror 21",
            "ldreq sp, [sb, lr, lsr 10]",
            "invalid",
            "invalid"
        ]
    },
    "sym.dhd_rx_frame": {
        "function_address": "0x0800aafc",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x6c",
            "ldr fp, [0x0800b77c]",
            "mov r5, r0",
            "mov r4, r2",
            "str r3, [sp, 0x10]",
            "ldr r3, [fp]",
            "ldr r0, [r0, 0xc]",
            "str r1, [sp, 0x24]",
            "tst r3, 2",
            "str r0, [sp, 0xc]",
            "bne 0x800b76c",
            "ldr r1, [sp, 0x10]",
            "cmp r4, 0",
            "cmpne r1, 0",
            "movle r3, 0",
            "movgt r3, 1",
            "strle r3, [sp, 0x1c]",
            "ble 0x800af04",
            "mov r2, 0",
            "mov ip, sp",
            "bic r3, ip, 0x1fc0",
            "movw r0, 0x886c",
            "mov sl, r2",
            "movt r0, 0xffff",
            "bic r3, r3, 0x3f",
            "str r2, [sp, 0x18]",
            "str r2, [sp, 0x1c]",
            "str r0, [sp, 0x14]",
            "str r3, [sp, 0x20]",
            "mov r3, 0",
            "ldr r6, [r4]",
            "str r3, [r4]",
            "ldr r3, [sp, 0x24]",
            "ldr r1, [sp, 0xc]",
            "add r3, r3, 0x600",
            "add r3, r3, 2",
            "ldr r7, [r1, r3, lsl 2]",
            "cmp r7, 0",
            "beq 0x800ae00",
            "ldr r3, [r7, 8]",
            "ldr r8, [r4, 0xbc]",
            "cmp r3, 0",
            "beq 0x800abbc",
            "mov r2, 0x27c",
            "ldrh r3, [r3, r2]",
            "cmp r3, 1",
            "beq 0x800aca8",
            "ldrb r2, [r8, 0xd]",
            "ldrb r3, [r8, 0xc]",
            "orr r3, r3, r2, lsl 8",
            "lsr r2, r3, 8",
            "orr r3, r2, r3, lsl 8",
            "ldr r2, [sp, 0x14]",
            "sxth r3, r3",
            "cmp r3, r2",
            "beq 0x800aca8",
            "ldr r3, [fp]",
            "tst r3, 1",
            "bne 0x800b75c",
            "cmp r4, 0",
            "beq 0x800ac8c",
            "ldr r3, [r4, 0x6c]",
            "mov r7, 0",
            "add r0, r4, 8",
            "mov r1, r4",
            "mov r2, r7",
            "ands r3, r3, 8",
            "beq 0x800ac5c",
            "ldr r3, [r4, 0x6c]",
            "ldr r8, [r4, 8]",
            "str r7, [r4, 8]",
            "bic r3, r3, 8",
            "str r3, [r4, 0x6c]",
            "mov r4, r8",
            "ldrb r3, [r0, 4]",
            "bfi r3, r7, 0, 3",
            "strb r3, [r0, 4]",
            "ldr r0, [r5]",
            "bl osl_pktfree",
            "cmp r8, 0",
            "beq 0x800ac8c",
            "ldr r3, [r4, 0x6c]",
            "add r0, r4, 8",
            "mov r1, r4",
            "mov r2, r7",
            "ands r3, r3, 8",
            "bne 0x800ac10",
            "ldr ip, [r4, 0x6c]",
            "add r0, r4, 8",
            "mov r1, r4",
            "mov r2, r3",
            "str r3, [r4, 8]",
            "bic ip, ip, 8",
            "str ip, [r4, 0x6c]",
            "ldrb ip, [r0, 4]",
            "bfi ip, r3, 0, 3",
            "strb ip, [r0, 4]",
            "ldr r0, [r5]",
            "bl osl_pktfree",
            "ldr r0, [sp, 0x10]",
            "add sl, sl, 1",
            "cmp r6, 0",
            "cmpne r0, sl",
            "ble 0x800af04",
            "mov r4, r6",
            "b 0x800ab74",
            "movw r3, 0x17fc",
            "ldrb r3, [r5, r3]",
            "cmp r3, 0",
            "bne 0x800ae68",
            "movw r3, 0x17fd",
            "ldrb r3, [r5, r3]",
            "cmp r3, 0",
            "beq 0x800ace8",
            "ldr r3, [sp, 0x24]",
            "movw r2, 0x179c",
            "ldr r2, [r5, r2]",
            "add r3, r3, r3, lsl 8",
            "add r3, r2, r3, lsl 2",
            "ldrb r3, [r3, 1]",
            "cmp r3, 0",
            "beq 0x800b250",
            "ldrb r3, [r7, 0xa4]",
            "cmp r3, 0",
            "beq 0x800ad14",
            "ldr r1, [sp, 0x24]",
            "movw r3, 0x179c",
            "ldr r3, [r5, r3]",
            "add r2, r1, r1, lsl 8",
            "add r3, r3, r2, lsl 2",
            "ldrb r3, [r3, 1]",
            "cmp r3, 1",
            "beq 0x800b424",
            "ldrb r3, [r7, 0x8c]",
            "cmp r3, 0",
            "beq 0x800ad2c",
            "ldrb r3, [r8]",
            "tst r3, 1",
            "bne 0x800b10c",
            "ldr r0, [r5]",
            "mov r1, r4",
            "bl osl_pkt_tonative",
            "ldr r3, [r7, 8]",
            "mov sb, r0",
            "str r3, [r0, 0x2c]",
            "ldr r2, [r7, 4]",
            "cmp r2, 0",
            "beq 0x800af38",
            "ldrb r1, [r8, 0xd]",
            "ldrb r3, [r8, 0xc]",
            "ldr ip, [sp, 0x14]",
            "orr r3, r3, r1, lsl 8",
            "lsr r1, r3, 8",
            "orr r3, r1, r3, lsl 8",
            "sxth r3, r3",
            "cmp r3, ip",
            "beq 0x800af38",
            "ldrb r3, [r8]",
            "tst r3, 1",
            "beq 0x800b2c0",
            "ldr r3, [r4, 0x6c]",
            "tst r3, 8",
            "beq dhd_start_xmit_try",
            "ldr r3, [fp]",
            "tst r3, 1",
            "bne 0x800b71c",
            "ldr r0, [r5]",
            "mov r1, r4",
            "bl osl_pkt_frmnative",
            "cmp r4, 0",
            "beq 0x800ac8c",
            "mov r7, 0",
            "ldr r3, [r4, 0x6c]",
            "add r0, r4, 8",
            "mov r1, r4",
            "mov r2, r7",
            "ands r3, r3, 8",
            "beq 0x800ac5c",
            "ldr r3, [r4, 0x6c]",
            "ldr r8, [r4, 8]",
            "str r7, [r4, 8]",
            "bic r3, r3, 8",
            "str r3, [r4, 0x6c]",
            "mov r4, r8",
            "ldrb r3, [r0, 4]",
            "bfi r3, r7, 0, 3",
            "strb r3, [r0, 4]",
            "ldr r0, [r5]",
            "bl osl_pktfree",
            "cmp r8, 0",
            "bne 0x800adb0",
            "b 0x800ac8c",
            "ldr r3, [fp]",
            "tst r3, 1",
            "bne 0x800b70c",
            "cmp r4, 0",
            "beq 0x800ac8c",
            "mov r7, 0",
            "ldr r3, [r4, 0x6c]",
            "add r0, r4, 8",
            "mov r1, r4",
            "mov r2, r7",
            "ands r3, r3, 8",
            "beq 0x800ac5c",
            "ldr r3, [r4, 0x6c]",
            "ldr r8, [r4, 8]",
            "str r7, [r4, 8]",
            "bic r3, r3, 8",
            "str r3, [r4, 0x6c]",
            "mov r4, r8",
            "ldrb r3, [r0, 4]",
            "bfi r3, r7, 0, 3",
            "strb r3, [r0, 4]",
            "ldr r0, [r5]",
            "bl osl_pktfree",
            "cmp r8, 0",
            "bne 0x800ae18",
            "b 0x800ac8c",
            "add ip, sp, 0x67",
            "mov r0, r5",
            "mov r1, r4",
            "add r2, sp, 0x5c",
            "add r3, sp, 0x58",
            "str ip, [sp]",
            "bl sym.dhd_get_pkt_ip_type",
            "cmp r0, 0",
            "bne 0x800acb8",
            "ldrb r3, [sp, 0x67]",
            "cmp r3, 1",
            "bne 0x800acb8",
            "ldr r3, [sp, 0x5c]",
            "ldrb r3, [r3]",
            "cmp r3, 8",
            "bne 0x800acb8",
            "cmp r4, 0",
            "beq 0x800ac8c",
            "mov r7, r0",
            "ldr r3, [r4, 0x6c]",
            "add r0, r4, 8",
            "mov r1, r4",
            "mov r2, r7",
            "ands r3, r3, 8",
            "beq 0x800ac5c",
            "ldr r3, [r4, 0x6c]",
            "ldr r8, [r4, 8]",
            "str r7, [r4, 8]",
            "bic r3, r3, 8",
            "str r3, [r4, 0x6c]",
            "mov r4, r8",
            "ldrb r3, [r0, 4]",
            "bfi r3, r7, 0, 3",
            "strb r3, [r0, 4]",
            "ldr r0, [r5]",
            "bl osl_pktfree",
            "cmp r8, 0",
            "bne 0x800aeb4",
            "b 0x800ac8c",
            "ldr r1, [sp, 0xc]",
            "mov r3, 0x3980",
            "ldrb r3, [r1, r3]",
            "cmp r3, 0",
            "beq 0x800af30",
            "ldr r2, [sp, 0x1c]",
            "cmp r2, 0",
            "beq 0x800af30",
            "mov r0, r5",
            "mov r1, r2",
            "bl fcn.080054f4",
            "add sp, sp, 0x6c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r1, [sp, 0x24]",
            "movw r3, 0x179c",
            "ldr r3, [r5, r3]",
            "add r2, r1, r1, lsl 8",
            "add r3, r3, r2, lsl 2",
            "ldrb r3, [r3, 1]",
            "cmp r3, 1",
            "beq 0x800b1b4",
            "movw r4, 0x1788",
            "ldr r2, [r5, r4]",
            "lsr r3, r2, 0x1f",
            "add r2, r2, r3",
            "and r0, r2, 1",
            "rsb r0, r3, r0",
            "bl dhd_perim_unlock_all",
            "ldr r1, [sp, 0xc]",
            "movw r3, 0x39b8",
            "ldr r0, [r1, r3]",
            "cmp r0, 0",
            "beq 0x800af94",
            "ldrb r3, [r0]",
            "cmp r3, 0",
            "bne 0x800b4c4",
            "ldr r3, [sb, 0x6c]",
            "tst r3, 1",
            "bic r3, r3, 4",
            "str r3, [sb, 0x6c]",
            "bne 0x800b578",
            "tst r3, 8",
            "mov r8, 0",
            "bic r3, r3, 1",
            "str r8, [sb, 0x68]",
            "str r3, [sb, 0x6c]",
            "bne 0x800b4f8",
            "movw r3, 0x1788",
            "ldr r2, [r5, r3]",
            "lsr r3, r2, 0x1f",
            "add r2, r2, r3",
            "and r0, r2, 1",
            "rsb r0, r3, r0",
            "bl dhd_perim_lock_all",
            "mov r0, sb",
            "ldr r1, [sb, 0x2c]",
            "ldr r8, [sb, 0xbc]",
            "ldr r4, [sb, 0x78]",
            "bl eth_type_trans",
            "ldrb r3, [sb, 0x8d]",
            "strh r0, [sb, 0x8e]",
            "and r3, r3, 7",
            "cmp r3, 2",
            "beq 0x800b5a4",
            "mov r1, 0xe",
            "str r8, [sb, 0xbc]",
            "str r4, [sb, 0x78]",
            "mov r0, sb",
            "bl skb_pull",
            "mov r1, 0x30",
            "add r0, sp, 0x28",
            "bl __memzero",
            "ldrh r3, [sb, 0x8e]",
            "ldr r1, [sp, 0x14]",
            "lsr r2, r3, 8",
            "orr r3, r2, r3, lsl 8",
            "sxth r3, r3",
            "cmp r3, r1",
            "beq 0x800b678",
            "ldr r3, [sp, 0x24]",
            "ldr r0, [sp, 0xc]",
            "add r3, r3, 0x600",
            "add r3, r3, 2",
            "ldr r3, [r0, r3, lsl 2]",
            "ldr r0, [sp, 0x14]",
            "ldr r2, [r3, 8]",
            "cmp r2, 0",
            "movwne ip, 0",
            "movtne ip, 0",
            "ldrne r1, [ip]",
            "strne r1, [r2, 0x15c]",
            "ldrh r2, [sb, 0x8e]",
            "lsr r1, r2, 8",
            "orr r2, r1, r2, lsl 8",
            "sxth r2, r2",
            "cmp r2, r0",
            "beq 0x800b0c0",
            "ldr r1, [sb, 0x78]",
            "ldr r0, [r5, 0x3c]",
            "ldr r2, [r5, 0x70]",
            "add r1, r0, r1",
            "add r2, r2, 1",
            "str r1, [r5, 0x3c]",
            "str r2, [r5, 0x70]",
            "ldr r1, [sb, 0x78]",
            "ldr r0, [r3, 0x38]",
            "ldr r2, [r3, 0x30]",
            "add r1, r0, r1",
            "add r2, r2, 1",
            "str r1, [r3, 0x38]",
            "str r2, [r3, 0x30]",
            "ldr r1, [sp, 0x20]",
            "ldr r3, [r1, 4]",
            "bic r3, r3, 0xfe000000",
            "bic r3, r3, 0xff",
            "cmp r3, 0",
            "bne 0x800b604",
            "ldr r0, [sp, 0xc]",
            "mov r3, 0x3980",
            "ldrb r3, [r0, r3]",
            "cmp r3, 0",
            "beq 0x800b648",
            "ldr r1, [sp, 0x1c]",
            "cmp r1, 0",
            "streq sb, [sp, 0x18]",
            "streq sb, [sp, 0x1c]",
            "ldrne r2, [sp, 0x18]",
            "strne sb, [sp, 0x18]",
            "strne sb, [r2]",
            "b 0x800ac8c",
            "ldr r1, [sp, 0x24]",
            "add r2, r8, 6",
            "mov r0, r5",
            "bl dhd_find_sta",
            "mov ip, 1",
            "mov r2, r0",
            "mov r1, r4",
            "mov r0, r5",
            "ldr r3, [sp, 0x24]",
            "str ip, [sp]",
            "bl dhd_wmf_packets_handle",
            "cmp r0, 0",
            "bne 0x800b1a8",
            "ldr r3, [fp]",
            "tst r3, 1",
            "bne 0x800b74c",
            "cmp r4, 0",
            "beq 0x800ac8c",
            "mov r7, 0",
            "ldr r3, [r4, 0x6c]",
            "add r0, r4, 8",
            "mov r1, r4",
            "mov r2, r7",
            "ands r3, r3, 8",
            "beq 0x800ac5c",
            "ldr r3, [r4, 0x6c]",
            "ldr r8, [r4, 8]",
            "str r7, [r4, 8]",
            "bic r3, r3, 8",
            "str r3, [r4, 0x6c]",
            "mov r4, r8",
            "ldrb r3, [r0, 4]",
            "bfi r3, r7, 0, 3",
            "strb r3, [r0, 4]",
            "ldr r0, [r5]",
            "bl osl_pktfree",
            "cmp r8, 0",
            "bne 0x800b158",
            "b 0x800ac8c",
            "cmp r0, 2",
            "bne 0x800ad2c",
            "b 0x800ac8c",
            "ldr r3, [r7, 0xa0]",
            "cmp r3, 0",
            "bne 0x800af58",
            "ldr r2, [r4, 0xbc]",
            "ldrb r3, [r2]",
            "tst r3, 1",
            "beq 0x800b5c4",
            "ldr r3, [r4, 0x6c]",
            "tst r3, 8",
            "beq 0x800b6ac",
            "ldr r3, [fp]",
            "tst r3, 1",
            "bne 0x800b734",
            "ldr r0, [r5]",
            "mov r1, r4",
            "bl osl_pkt_frmnative",
            "cmp r4, 0",
            "beq 0x800ac8c",
            "mov r7, 0",
            "ldr r3, [r4, 0x6c]",
            "add r0, r4, 8",
            "mov r1, r4",
            "mov r2, r7",
            "ands r3, r3, 8",
            "beq 0x800ac5c",
            "ldr r3, [r4, 0x6c]",
            "ldr r8, [r4, 8]",
            "str r7, [r4, 8]",
            "bic r3, r3, 8",
            "str r3, [r4, 0x6c]",
            "mov r4, r8",
            "ldrb r3, [r0, 4]",
            "bfi r3, r7, 0, 3",
            "strb r3, [r0, 4]",
            "ldr r0, [r5]",
            "bl osl_pktfree",
            "cmp r8, 0",
            "bne 0x800b200",
            "b 0x800ac8c",
            "mov r0, r5",
            "mov r1, r4",
            "bl dhd_process_gratuitous_arp",
            "cmp r0, 0",
            "bne 0x800ace8",
            "cmp r4, 0",
            "beq 0x800ac8c",
            "mov r7, r0",
            "ldr r3, [r4, 0x6c]",
            "add r0, r4, 8",
            "mov r1, r4",
            "mov r2, r7",
            "ands r3, r3, 8",
            "beq 0x800ac5c",
            "ldr r3, [r4, 0x6c]",
            "ldr r8, [r4, 8]",
            "str r7, [r4, 8]",
            "bic r3, r3, 8",
            "str r3, [r4, 0x6c]",
            "mov r4, r8",
            "ldrb r3, [r0, 4]",
            "bfi r3, r7, 0, 3",
            "strb r3, [r0, 4]",
            "ldr r0, [r5]",
            "bl osl_pktfree",
            "cmp r8, 0",
            "bne 0x800b270",
            "b 0x800ac8c",
            "ldr r0, [r2, 8]",
            "mov r1, r8",
            "ldr r2, [r7, 0xc]",
            "bl fwder_lookup",
            "cmn r0, 1",
            "beq 0x800b380",
            "ldr r2, [r0, 0x28]",
            "movw r3, 0xffff",
            "cmp r2, r3",
            "beq 0x800b3bc",
            "ldr r3, [r0, 0x14]",
            "ldr r2, [r3, 8]",
            "cmp r3, r7",
            "str r2, [sb, 0x2c]",
            "beq 0x800b6d0",
            "ldr r0, [r3]",
            "mov r2, r4",
            "ldr r1, [r3, 0xc]",
            "add r0, r0, 8",
            "bl dhd_sendpkt",
            "b 0x800ac8c",
            "movw ip, 0",
            "ldr r0, [r2, 8]",
            "mov r3, 1",
            "ldr r2, [r5]",
            "movt ip, 0",
            "mov r1, sb",
            "str ip, [sp]",
            "bl fwder_flood",
            "ldr r3, [sp, 0x24]",
            "movw r2, 0x179c",
            "ldr r2, [r5, r2]",
            "add r3, r3, r3, lsl 8",
            "add r3, r2, r3, lsl 2",
            "ldrb r3, [r3, 1]",
            "cmp r3, 1",
            "bne 0x800b380",
            "ldr r3, [r7, 0xa0]",
            "cmp r3, 0",
            "bne 0x800b380",
            "ldr r0, [r5]",
            "mov r1, r4",
            "bl osl_pktdup",
            "subs r2, r0, 0",
            "beq 0x800b380",
            "mov r0, r5",
            "ldr r1, [sp, 0x24]",
            "bl dhd_sendpkt",
            "ldr r7, [r7, 4]",
            "ldr r8, [sb, 0x2c]",
            "mov r0, r7",
            "bl _raw_spin_lock_bh",
            "mov r3, r8",
            "mov r1, sb",
            "mov r2, 1",
            "ldr ip, [r7, 0xc]",
            "mov r0, r7",
            "blx ip",
            "mov r8, r0",
            "mov r0, r7",
            "bl _raw_spin_unlock_bh",
            "cmp r8, 0",
            "beq 0x800ac8c",
            "ldr r0, [r5]",
            "mov r1, r4",
            "bl osl_pkt_frmnative",
            "cmp r4, 0",
            "beq 0x800ac8c",
            "mov r7, 0",
            "ldr r3, [r4, 0x6c]",
            "add r0, r4, 8",
            "mov r1, r4",
            "mov r2, r7",
            "ands r3, r3, 8",
            "beq 0x800ac5c",
            "ldr r3, [r4, 0x6c]",
            "ldr r8, [r4, 8]",
            "str r7, [r4, 8]",
            "bic r3, r3, 8",
            "str r3, [r4, 0x6c]",
            "mov r4, r8",
            "ldrb r3, [r0, 4]",
            "bfi r3, r7, 0, 3",
            "strb r3, [r0, 4]",
            "ldr r0, [r5]",
            "bl osl_pktfree",
            "cmp r8, 0",
            "bne 0x800b3d4",
            "b 0x800ac8c",
            "mov r0, r5",
            "mov r2, r4",
            "mov r3, 0",
            "bl dhd_l2fltr_pkt_handle",
            "cmp r0, 0",
            "bne 0x800ad14",
            "cmp r4, 0",
            "beq 0x800ac8c",
            "ldr r3, [r4, 0x6c]",
            "mov r8, r0",
            "mov r1, r4",
            "add r0, r4, 8",
            "mov r2, 1",
            "ands r3, r3, 8",
            "beq 0x800b4ac",
            "ldr r3, [r4, 0x6c]",
            "ldr r7, [r4, 8]",
            "str r8, [r4, 8]",
            "bic r3, r3, 8",
            "str r3, [r4, 0x6c]",
            "mov r4, r7",
            "ldrb r3, [r0, 4]",
            "bfi r3, r8, 0, 3",
            "strb r3, [r0, 4]",
            "ldr r0, [r5]",
            "bl osl_pktfree",
            "cmp r7, 0",
            "beq 0x800ac8c",
            "ldr r3, [r4, 0x6c]",
            "add r0, r4, 8",
            "mov r1, r4",
            "mov r2, 1",
            "ands r3, r3, 8",
            "bne 0x800b460",
            "ldr ip, [r4, 0x6c]",
            "add r0, r4, 8",
            "str r3, [r4, 8]",
            "mov r1, r4",
            "mov r2, 1",
            "b 0x800ac70",
            "ldr r2, [sb, 0x2c]",
            "mov r1, sb",
            "ldr r3, [r0, 8]",
            "blx r3",
            "cmn r0, 1",
            "ldrne r2, [r5, r4]",
            "beq 0x800af94",
            "lsr r3, r2, 0x1f",
            "add r2, r2, r3",
            "and r0, r2, 1",
            "rsb r0, r3, r0",
            "bl dhd_perim_lock_all",
            "b 0x800ac8c",
            "ldr r3, [sp, 0xc]",
            "mov r1, sb",
            "ldr r0, [r3, 8]",
            "bl osl_pkt_frmnative",
            "cmp sb, r8",
            "beq 0x800b568",
            "mov r3, r8",
            "mov r4, sb",
            "mov r8, r6",
            "b 0x800b528",
            "str r6, [r4]",
            "mov r4, r6",
            "ldr r6, [r4, 0x6c]",
            "add r2, r4, 8",
            "ldr r1, [r4, 0x6c]",
            "ands r6, r6, 8",
            "bic r1, r1, 8",
            "ldrne r6, [r4, 8]",
            "str r1, [r4, 0x6c]",
            "cmp sb, r4",
            "str r3, [r4, 8]",
            "ldrb r1, [r2, 4]",
            "bfi r1, r3, 0, 3",
            "strb r1, [r2, 4]",
            "beq 0x800b5e8",
            "cmp r6, 0",
            "bne 0x800b520",
            "str r8, [r4]",
            "mov r3, 0",
            "ldr r6, [sb]",
            "str r3, [sb]",
            "b 0x800afc0",
            "ldr r2, [sp, 0xc]",
            "mov r8, 0",
            "ldr r0, [r2, 8]",
            "bl osl_ctfpool_add",
            "ldr r3, [sb, 0x6c]",
            "str r8, [sb, 0x68]",
            "tst r3, 8",
            "bic r3, r3, 1",
            "str r3, [sb, 0x6c]",
            "beq 0x800afc0",
            "b 0x800b4f8",
            "ldr r0, [sp, 0xc]",
            "ldr r3, [r0, 0x7c]",
            "add r3, r3, 1",
            "str r3, [r0, 0x7c]",
            "ldr r3, [r7, 0x50]",
            "add r3, r3, 1",
            "str r3, [r7, 0x50]",
            "b 0x800b004",
            "mov r0, r5",
            "bl dhd_find_sta",
            "cmp r0, 0",
            "beq 0x800af58",
            "mov r0, r5",
            "ldr r1, [sp, 0x24]",
            "mov r2, r4",
            "bl dhd_sendpkt",
            "b 0x800ac8c",
            "ldr ip, [sp, 0xc]",
            "mov r1, sb",
            "ldr r0, [ip, 8]",
            "str r3, [sp, 8]",
            "bl osl_pkt_tonative",
            "ldr r3, [sp, 8]",
            "b 0x800b55c",
            "ldr r3, [sp, 0xc]",
            "ldr r2, [r3, 4]",
            "lsr r3, r2, 0x1f",
            "add r2, r2, r3",
            "and r0, r2, 1",
            "rsb r0, r3, r0",
            "bl dhd_perim_unlock_all",
            "mov r0, sb",
            "bl netif_rx",
            "ldr ip, [sp, 0xc]",
            "ldr r2, [ip, 4]",
            "lsr r3, r2, 0x1f",
            "add r2, r2, r3",
            "and r0, r2, 1",
            "rsb r0, r3, r0",
            "bl dhd_perim_lock_all",
            "b 0x800ac8c",
            "ldr r3, [sp, 0xc]",
            "ldr r2, [r3, 4]",
            "lsr r3, r2, 0x1f",
            "add r2, r2, r3",
            "and r0, r2, 1",
            "rsb r0, r3, r0",
            "bl dhd_perim_unlock_all",
            "mov r0, sb",
            "bl netif_rx_ni",
            "ldr ip, [sp, 0xc]",
            "ldr r2, [ip, 4]",
            "b 0x800b4e0",
            "ldr r3, [sp, 0xc]",
            "add ip, sp, 0x60",
            "ldr r2, [sb, 0xac]",
            "add r1, sp, 0x24",
            "str ip, [sp]",
            "mov ip, 0",
            "add r0, r3, 8",
            "add r3, sp, 0x28",
            "str ip, [sp, 4]",
            "bl wl_host_event",
            "add r0, sp, 0x28",
            "bl wl_event_to_host_order",
            "b 0x800b040",
            "ldr r0, [r5]",
            "mov r1, r4",
            "bl osl_pktdup",
            "subs r2, r0, 0",
            "beq 0x800af58",
            "mov r0, r5",
            "ldr r1, [sp, 0x24]",
            "bl dhd_sendpkt",
            "b 0x800af58",
            "ldr r1, [sp, 0x24]",
            "movw r3, 0x179c",
            "ldr r3, [r5, r3]",
            "add r2, r1, r1, lsl 8",
            "add r3, r3, r2, lsl 2",
            "ldrb r3, [r3, 1]",
            "cmp r3, 1",
            "bne 0x800b380",
            "ldr r3, [r7, 0xa0]",
            "cmp r3, 0",
            "bne 0x800b380",
            "mov r0, r5",
            "mov r2, r4",
            "bl dhd_sendpkt",
            "b 0x800ac8c",
            "ldr r1, [0x0800b780]",
            "ldr r0, [0x0800b784]",
            "bl printk",
            "b 0x800ae0c",
            "movw r2, 0x1002",
            "ldr r1, [0x0800b780]",
            "mov r3, r4",
            "ldr r0, [0x0800b788]",
            "bl printk",
            "b 0x800ad98",
            "movw r2, 0x102b",
            "ldr r1, [0x0800b780]",
            "mov r3, r4",
            "ldr r0, [0x0800b788]",
            "bl printk",
            "b 0x800b1e8",
            "ldr r1, [0x0800b780]",
            "ldr r0, [0x0800b78c]",
            "bl printk",
            "b 0x800b14c",
            "ldr r1, [0x0800b780]",
            "ldr r0, [0x0800b790]",
            "bl printk",
            "b 0x800abec",
            "ldr r1, [0x0800b780]",
            "ldr r0, [0x0800b794]",
            "bl printk",
            "b 0x800ab2c"
        ]
    },
    "sym.dhd_get_pkt_ip_type": {
        "function_address": "0x0800a958",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "sub sp, sp, 0x1c",
            "add ip, sp, 0x14",
            "mov r5, r2",
            "mov r4, r3",
            "add r2, sp, 0x10",
            "str ip, [sp]",
            "add r3, sp, 0xc",
            "add ip, sp, 0x17",
            "str ip, [sp, 4]",
            "bl dhd_get_pkt_ether_type",
            "cmp r0, 0",
            "beq 0x800a998",
            "mvn r0, 0",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, pc}",
            "ldrh r3, [sp, 0x14]",
            "cmp r3, 0x800",
            "bne 0x800a98c",
            "ldr r2, [sp, 0xc]",
            "cmp r2, 0x13",
            "ble 0x800a98c",
            "ldr r3, [sp, 0x10]",
            "ldrb r7, [r3]",
            "lsr r1, r7, 4",
            "cmp r1, 4",
            "bne 0x800a98c",
            "ldrb r1, [r3, 2]",
            "ldrb r3, [r3, 3]",
            "orr r3, r1, r3, lsl 8",
            "lsr r1, r3, 8",
            "orr r3, r1, r3, lsl 8",
            "uxth r6, r3",
            "cmp r2, r6",
            "ble 0x800aa64",
            "ldr r3, [0x0800aae4]",
            "ldr r3, [r3]",
            "tst r3, 4",
            "beq 0x800aa00",
            "ldr r0, [0x0800aae8]",
            "ldr r1, [0x0800aaec]",
            "bl printk",
            "str r6, [sp, 0xc]",
            "and r2, r7, 0xf",
            "lsl r2, r2, 2",
            "cmp r2, 0x13",
            "bls 0x800aab4",
            "ldr r1, [sp, 0xc]",
            "cmp r2, r1",
            "bgt 0x800aab4",
            "ldr r3, [sp, 0x10]",
            "ldrb ip, [r3, 7]",
            "ldrb r0, [r3, 6]",
            "orr r0, r0, ip, lsl 8",
            "lsr ip, r0, 8",
            "orr r0, ip, r0, lsl 8",
            "lsl r0, r0, 0x12",
            "lsrs r0, r0, 0x12",
            "bne 0x800aa90",
            "ldrb ip, [r3, 9]",
            "add r3, r3, r2",
            "rsb r2, r2, r1",
            "str r3, [r5]",
            "str r2, [r4]",
            "ldr r3, [sp, 0x30]",
            "strb ip, [r3]",
            "b 0x800a990",
            "bge 0x800aa04",
            "ldr r3, [0x0800aae4]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "beq 0x800a98c",
            "ldr r0, [0x0800aaf0]",
            "rsb r2, r2, r6",
            "ldr r1, [0x0800aaec]",
            "bl printk",
            "mvn r0, 0",
            "b 0x800a990",
            "ldr r3, [0x0800aae4]",
            "ldr r3, [r3]",
            "tst r3, 4",
            "beq 0x800a98c",
            "ldr r0, [0x0800aaf4]",
            "ldr r1, [0x0800aaec]",
            "bl printk",
            "mvn r0, 0",
            "b 0x800a990",
            "ldr r3, [0x0800aae4]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "beq 0x800a98c",
            "ldr ip, [sp, 0xc]",
            "mov r3, 0x14",
            "ldr r0, [0x0800aaf8]",
            "ldr r1, [0x0800aaec]",
            "str ip, [sp]",
            "bl printk",
            "mvn r0, 0",
            "b 0x800a990"
        ]
    },
    "fcn.080054f4": {
        "function_address": "0x080054f4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0xc",
            "ldr r7, [0x0800562c]",
            "mov r4, r0",
            "mov r6, r1",
            "ldr r2, [r0, 0xc]",
            "ldr r3, [r7]",
            "str r2, [sp, 4]",
            "tst r3, 2",
            "bne 0x8005620",
            "mov r8, 0x1780",
            "movw sl, 0x1784",
            "cmp r6, 0",
            "beq 0x8005588",
            "ldr r0, [r4, 0xc]",
            "add r0, r0, 0x3940",
            "add r0, r0, 0x3c",
            "bl _raw_spin_lock_bh",
            "ldr fp, [r4, r8]",
            "ldr sb, [r4, sl]",
            "add r5, fp, 0x1e0",
            "ldr r3, [r4, r5, lsl 2]",
            "cmp r3, 0",
            "beq 0x80055a4",
            "ldr r0, [r4, 0xc]",
            "bl fcn.080054e8",
            "ldr r3, [r7]",
            "tst r3, 1",
            "beq 0x8005524",
            "mov r1, r6",
            "mov r2, fp",
            "mov r3, sb",
            "ldr r0, [0x08005630]",
            "bl printk",
            "b 0x8005524",
            "ldr r0, [0x08005634]",
            "bl printk",
            "ldr r3, [r7]",
            "tst r3, 1",
            "bne 0x8005580",
            "ldr r3, [r7]",
            "tst r3, 1",
            "beq 0x8005588",
            "b 0x8005580",
            "ldr r3, [r7]",
            "tst r3, 2",
            "addeq r7, fp, 1",
            "bne 0x8005600",
            "lsl r7, r7, 0x16",
            "mov r3, 0x1780",
            "str r6, [r4, r5, lsl 2]",
            "lsr r7, r7, 0x16",
            "ldr r0, [r4, 0xc]",
            "str r7, [r4, r3]",
            "bl fcn.080054e8",
            "ldr r2, [sp, 4]",
            "movw r3, 0x3948",
            "ldr r3, [r2, r3]",
            "cmp r3, 0",
            "blt 0x80055f8",
            "add r0, r2, 0x3940",
            "add r0, r0, 0x10",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "b up",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "add r7, fp, 1",
            "mov r1, r6",
            "lsl r3, r7, 0x16",
            "mov r2, fp",
            "ldr r0, [0x08005638]",
            "lsr r3, r3, 0x16",
            "bl printk",
            "b 0x80055b4",
            "ldr r0, [0x0800563c]",
            "bl printk",
            "b 0x800551c"
        ]
    },
    "sym.dhd_del_sta": {
        "function_address": "0x08005a40",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x14",
            "str r1, [sp, 0xc]",
            "mov fp, r0",
            "mov r6, r2",
            "ldr r1, [r0, 0xc]",
            "ldr r0, [sp, 0xc]",
            "add r3, r0, 0x600",
            "add r3, r3, 2",
            "ldr r8, [r1, r3, lsl 2]",
            "mov r7, r8",
            "ldr r4, [r7, 0x98]!",
            "cmp r7, r4",
            "ldr r5, [r4], -0x20",
            "beq 0x8005b00",
            "mov sl, 0x100",
            "mov sb, 0x200",
            "sub r5, r5, 0x20",
            "movt sl, 0x10",
            "movt sb, 0x20",
            "mov r1, r6",
            "mov r2, 6",
            "add r0, r4, 0x18",
            "bl memcmp",
            "cmp r0, 0",
            "bne 0x8005ae8",
            "ldr r0, [r8, 4]",
            "mov r2, r4",
            "mov r1, r6",
            "cmp r0, 0",
            "beq 0x8005ac0",
            "bl fwder_deassoc",
            "ldr r3, [r4, 0x24]",
            "mov r1, r4",
            "ldr r2, [r4, 0x20]",
            "str r3, [r2, 4]",
            "str r2, [r3]",
            "str sl, [r4, 0x20]",
            "str sb, [r4, 0x24]",
            "ldr r0, [r8]",
            "add r0, r0, 8",
            "bl fcn.080050d4",
            "mov r3, r5",
            "mov r4, r5",
            "ldr r5, [r3, 0x20]!",
            "cmp r7, r3",
            "sub r5, r5, 0x20",
            "bne 0x8005a90",
            "ldrb r3, [r8, 0xa4]",
            "cmp r3, 0",
            "beq 0x8005b28",
            "mov ip, 0",
            "mov r0, fp",
            "ldr r1, [sp, 0xc]",
            "mov r2, ip",
            "mov r3, r6",
            "str ip, [sp]",
            "bl dhd_l2_filter_arp_table_update",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.080050d4": {
        "function_address": "0x080050d4",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sl, lr}",
            "mov r7, r1",
            "mov r4, r0",
            "mov r5, r1",
            "add sl, r1, 0x10",
            "movw r8, 0xffff",
            "b 0x8005100",
            "cmp r5, sl",
            "mvn r3, 0",
            "strh r3, [r5, 2]",
            "beq 0x8005170",
            "ldrh r1, [r5, 4]",
            "add r5, r5, 2",
            "cmp r1, r8",
            "beq 0x80050f0",
            "mov r0, r4",
            "bl dhd_flow_queue",
            "ldrh r3, [r0, 0x10]",
            "mov r6, r0",
            "cmp r3, 0",
            "beq 0x80050f0",
            "mov r1, r6",
            "mov r0, r4",
            "bl dhd_flow_queue_dequeue",
            "subs r1, r0, 0",
            "mov r2, 1",
            "beq 0x80050f0",
            "ldr r0, [r4]",
            "bl osl_pktfree",
            "mov r1, r6",
            "mov r0, r4",
            "bl dhd_flow_queue_dequeue",
            "subs r1, r0, 0",
            "mov r2, 1",
            "bne 0x8005140",
            "cmp r5, sl",
            "mvn r3, 0",
            "strh r3, [r5, 2]",
            "bne 0x8005100",
            "movw r3, 0x1790",
            "ldrh r1, [r7, 0x28]",
            "ldr r0, [r4, r3]",
            "bl id16_map_free",
            "mov r3, 0",
            "add r0, r7, 0x18",
            "str r3, [r7]",
            "mvn r3, 0xe",
            "str r3, [r7, 0x2c]",
            "mov r1, 6",
            "ldr r3, [0x080051bc]",
            "str r3, [r7, 0x14]",
            "bl __memzero",
            "add r3, r7, 0x20",
            "str r3, [r7, 0x20]",
            "str r3, [r7, 0x24]",
            "movw r3, 0xffff",
            "str r3, [r7, 0x28]",
            "pop {r3, r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "sym.dhd_prot_detach": {
        "function_address": "0x0800d8a8",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r5, r0",
            "ldr r4, [r0, 8]",
            "cmp r4, 0",
            "popeq {r3, r4, r5, pc}",
            "ldr r1, [r4, 0x60]",
            "cmp r1, 0",
            "beq 0x800d8e0",
            "ldr r3, [r4, 0x64]",
            "mov r2, 8",
            "ldr r0, [r0]",
            "bl osl_dma_free_consistent",
            "mov r3, 0",
            "str r3, [r4, 0x60]",
            "ldr r1, [r4, 0x70]",
            "cmp r1, 0",
            "beq 0x800d904",
            "ldr r3, [r4, 0x74]",
            "ldr r0, [r5]",
            "ldr r2, [r4, 0x6c]",
            "bl osl_dma_free_consistent",
            "mov r3, 0",
            "str r3, [r4, 0x70]",
            "ldr r1, [r4, 0x80]",
            "cmp r1, 0",
            "beq 0x800d928",
            "ldr r3, [r4, 0x84]",
            "ldr r0, [r5]",
            "ldr r2, [r4, 0x7c]",
            "bl osl_dma_free_consistent",
            "mov r3, 0",
            "str r3, [r4, 0x80]",
            "ldr r1, [r4, 0x90]",
            "cmp r1, 0",
            "beq 0x800d94c",
            "ldr r3, [r4, 0x94]",
            "ldr r0, [r5]",
            "ldr r2, [r4, 0x8c]",
            "bl osl_dma_free_consistent",
            "mov r3, 0",
            "str r3, [r4, 0x90]",
            "ldr r1, [r4, 0xa0]",
            "cmp r1, 0",
            "beq 0x800d970",
            "ldr r3, [r4, 0xa4]",
            "ldr r0, [r5]",
            "ldr r2, [r4, 0x9c]",
            "bl osl_dma_free_consistent",
            "mov r3, 0",
            "str r3, [r4, 0xa0]",
            "ldr r3, [r4, 0x40]",
            "cmp r3, 0",
            "beq 0x800d9a0",
            "ldr r3, [r5, 8]",
            "movw r2, 0x2008",
            "ldr r0, [r5]",
            "ldr r1, [r3, 0x40]",
            "ldr r3, [r3, 0x44]",
            "bl osl_dma_free_consistent",
            "ldr r3, [r5, 8]",
            "mov r2, 0",
            "str r2, [r3, 0x40]",
            "ldr r3, [r4, 0x4c]",
            "cmp r3, 0",
            "beq 0x800d9d0",
            "ldr r3, [r5, 8]",
            "movw r2, 0x2008",
            "ldr r0, [r5]",
            "ldr r1, [r3, 0x4c]",
            "ldr r3, [r3, 0x50]",
            "bl osl_dma_free_consistent",
            "ldr r3, [r5, 8]",
            "mov r2, 0",
            "str r2, [r3, 0x4c]",
            "ldr r0, [r5, 8]",
            "ldr r1, [r4, 0x24]",
            "bl fcn.0800d1c4",
            "ldr r0, [r5, 8]",
            "ldr r1, [r4, 0x28]",
            "bl fcn.0800d1c4",
            "ldr r0, [r5, 8]",
            "ldr r1, [r4, 0x2c]",
            "bl fcn.0800d1c4",
            "ldr r0, [r5, 8]",
            "ldr r1, [r4, 0x30]",
            "bl fcn.0800d1c4",
            "ldr r0, [r5, 8]",
            "ldr r1, [r4, 0x34]",
            "bl fcn.0800d1c4",
            "ldr r0, [r5, 8]",
            "ldr r1, [r4, 0x38]",
            "bl fcn.0800d1c4",
            "ldr r0, [r5]",
            "mov r2, 0xe4",
            "ldr r1, [r5, 8]",
            "bl osl_mfree",
            "mov r3, 0",
            "str r3, [r5, 8]",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.0800d1c4": {
        "function_address": "0x0800d1c4",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "subs r4, r1, 0",
            "mov r5, r0",
            "popeq {r4, r5, r6, pc}",
            "ldr r1, [r4, 0x1c]",
            "mov r6, 0",
            "ldr r3, [r4, 0x30]",
            "strb r6, [r4]",
            "cmp r1, r6",
            "ldrh r0, [r3, 4]",
            "ldrh r2, [r3, 6]",
            "beq 0x800d210",
            "mul r2, r0, r2",
            "ldr r3, [r4, 0x20]",
            "ldr r0, [r5]",
            "uxth r2, r2",
            "bl osl_dma_free_consistent",
            "ldr r3, [r4, 0x30]",
            "str r6, [r4, 0x1c]",
            "cmp r3, 0",
            "beq 0x800d230",
            "mov r1, r3",
            "ldr r0, [r5]",
            "mov r2, 0x10",
            "bl osl_mfree",
            "mov r3, 0",
            "str r3, [r4, 0x30]",
            "ldr r1, [r4, 0x34]",
            "cmp r1, 0",
            "beq 0x800d250",
            "ldr r0, [r5]",
            "mov r2, 8",
            "bl osl_mfree",
            "mov r3, 0",
            "str r3, [r4, 0x34]",
            "ldr r0, [r5]",
            "mov r1, r4",
            "mov r2, 0x3c",
            "pop {r4, r5, r6, lr}",
            "b osl_mfree"
        ]
    },
    "sym.dhd_prot_attach": {
        "function_address": "0x0800da34",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "mov r1, 0xe4",
            "sub sp, sp, 0x14",
            "mov r5, r0",
            "mov r6, 0",
            "ldr r0, [r0]",
            "str r6, [sp, 0xc]",
            "bl osl_malloc",
            "subs r4, r0, 0",
            "beq 0x800dc6c",
            "mov r1, 0xe4",
            "bl __memzero",
            "ldr r3, [r5]",
            "movw ip, 0x17bc",
            "mov r0, r4",
            "ldr r1, [0x0800dd40]",
            "mov r2, 0x200",
            "str r3, [r4]",
            "mov r3, 0x30",
            "strb r6, [r5, ip]",
            "movw ip, 0x17bd",
            "strb r6, [r5, ip]",
            "mov ip, 5",
            "str r4, [r5, 8]",
            "str ip, [sp]",
            "bl fcn.0800d264",
            "cmp r0, 0",
            "str r0, [r4, 0x24]",
            "beq 0x800dc90",
            "mov ip, 1",
            "mov r0, r4",
            "ldr r1, [0x0800dd44]",
            "mov r2, 0x200",
            "mov r3, 0x20",
            "str ip, [sp]",
            "bl fcn.0800d264",
            "cmp r0, 0",
            "str r0, [r4, 0x28]",
            "beq 0x800dcb0",
            "mov r0, r4",
            "ldr r1, [0x0800dd48]",
            "mov r2, 0x14",
            "mov r3, 0x28",
            "str r6, [sp]",
            "bl fcn.0800d264",
            "cmp r0, 0",
            "str r0, [r4, 0x2c]",
            "beq 0x800dcd0",
            "mov ip, 3",
            "mov r0, r4",
            "ldr r1, [0x0800dd4c]",
            "mov r2, 0x400",
            "mov r3, 0x10",
            "str ip, [sp]",
            "bl fcn.0800d264",
            "cmp r0, 0",
            "str r0, [r4, 0x30]",
            "beq 0x800dcf0",
            "mov r6, 4",
            "mov r0, r4",
            "ldr r1, [0x0800dd50]",
            "mov r2, 0x200",
            "mov r3, 0x20",
            "str r6, [sp]",
            "bl fcn.0800d264",
            "cmp r0, 0",
            "str r0, [r4, 0x34]",
            "beq 0x800dd10",
            "mov ip, 2",
            "mov r0, r4",
            "ldr r1, [0x0800dd54]",
            "mov r2, 0x100",
            "mov r3, 0x18",
            "str ip, [sp]",
            "bl fcn.0800d264",
            "cmp r0, 0",
            "str r0, [r4, 0x38]",
            "beq 0x800dba4",
            "add r7, sp, 0xc",
            "ldr r0, [r5]",
            "add ip, r4, 0x44",
            "movw r1, 0x2008",
            "mov r2, r6",
            "mov r3, r7",
            "str ip, [sp]",
            "bl osl_dma_alloc_consistent",
            "cmp r0, 0",
            "str r0, [r4, 0x40]",
            "bne 0x800dbc4",
            "mvn r0, 0x1a",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, pc}",
            "ldr r3, [0x0800dd58]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "bne 0x800dd30",
            "mov r0, r5",
            "bl dhd_prot_detach",
            "mvn r0, 0x1a",
            "b 0x800db9c",
            "movw r1, 0x2008",
            "bl __memzero",
            "ldr r0, [r4, 0x40]",
            "movw r1, 0x2008",
            "bl osl_cache_flush",
            "ldr r0, [r5]",
            "add ip, r4, 0x50",
            "movw r1, 0x2008",
            "mov r2, r6",
            "mov r3, r7",
            "str ip, [sp]",
            "bl osl_dma_alloc_consistent",
            "cmp r0, 0",
            "str r0, [r4, 0x4c]",
            "beq 0x800db98",
            "movw r1, 0x2008",
            "bl __memzero",
            "ldr r0, [r4, 0x4c]",
            "movw r1, 0x2008",
            "bl osl_cache_flush",
            "mov r1, 8",
            "add ip, r4, 0x64",
            "str r1, [r4, 0x5c]",
            "mov r2, r6",
            "ldr r0, [r5]",
            "mov r3, r7",
            "str ip, [sp]",
            "bl osl_dma_alloc_consistent",
            "cmp r0, 0",
            "str r0, [r4, 0x60]",
            "beq 0x800db98",
            "mov r1, 8",
            "bl __memzero",
            "ldr r0, [r4, 0x60]",
            "mov r1, 8",
            "bl osl_cache_flush",
            "mov r3, 0",
            "strh r3, [r4, 0xc4]",
            "mov r0, r3",
            "strh r3, [r4, 0xc6]",
            "str r3, [r4, 0xc8]",
            "b 0x800db9c",
            "ldr r3, [0x0800dd58]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "beq 0x800db98",
            "ldr r0, [0x0800dd5c]",
            "ldr r1, [0x0800dd60]",
            "bl printk",
            "mvn r0, 0x1a",
            "b 0x800db9c",
            "ldr r3, [0x0800dd58]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "beq 0x800dbb4",
            "ldr r1, [0x0800dd60]",
            "ldr r0, [0x0800dd64]",
            "bl printk",
            "b 0x800dbb4",
            "ldr r3, [0x0800dd58]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "beq 0x800dbb4",
            "ldr r1, [0x0800dd60]",
            "ldr r0, [0x0800dd68]",
            "bl printk",
            "b 0x800dbb4",
            "ldr r3, [0x0800dd58]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "beq 0x800dbb4",
            "ldr r1, [0x0800dd60]",
            "ldr r0, [0x0800dd6c]",
            "bl printk",
            "b 0x800dbb4",
            "ldr r3, [0x0800dd58]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "beq 0x800dbb4",
            "ldr r1, [0x0800dd60]",
            "ldr r0, [0x0800dd70]",
            "bl printk",
            "b 0x800dbb4",
            "ldr r3, [0x0800dd58]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "beq 0x800dbb4",
            "ldr r1, [0x0800dd60]",
            "ldr r0, [0x0800dd74]",
            "bl printk",
            "b 0x800dbb4",
            "ldr r1, [0x0800dd60]",
            "ldr r0, [0x0800dd78]",
            "bl printk",
            "b 0x800dbb4"
        ]
    },
    "sym.dhdpcie_bus_suspend": {
        "function_address": "0x08013c34",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r4, r0",
            "ldr r3, [r0]",
            "sub sp, sp, 8",
            "mov r5, r1",
            "cmp r3, 0",
            "beq 0x8013d44",
            "ldr r2, [r3, 8]",
            "cmp r2, 0",
            "beq 0x8013d64",
            "ldr r2, [r3, 0x14]",
            "sub r2, r2, 2",
            "cmp r2, 1",
            "bls 0x8013c88",
            "ldr r3, [0x08013dac]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "bne 0x8013d34",
            "mvn r0, 0",
            "add sp, sp, 8",
            "pop {r4, r5, r6, pc}",
            "ldrb r6, [r3, 0x12]",
            "cmp r6, 0",
            "mvnne r0, 4",
            "bne 0x8013c80",
            "ldrb r3, [r4, 0xe11]",
            "cmp r3, r1",
            "moveq r0, r6",
            "beq 0x8013c80",
            "cmp r1, 0",
            "beq 0x8013cf4",
            "mov r1, 1",
            "bl fcn.08012da8",
            "mov r1, r4",
            "str r6, [r4, 0xe14]",
            "ldr r0, [r1], 0xe10",
            "add r2, sp, 7",
            "add r1, r1, 4",
            "bl dhd_os_ioctl_resp_wait",
            "ldr r6, [r4, 0xe14]",
            "cmp r6, 0",
            "bne 0x8013d10",
            "cmp r0, 0",
            "movne r0, r6",
            "beq 0x8013d84",
            "mov r3, 1",
            "str r3, [r4, 0xe14]",
            "b 0x8013c80",
            "ldr r0, [r4, 4]",
            "bl dhdpcie_pci_suspend_resume",
            "ldr r3, [r4]",
            "mov r2, 2",
            "strb r5, [r4, 0xe11]",
            "str r2, [r3, 0x14]",
            "b 0x8013c80",
            "ldr r0, [r4, 4]",
            "mov r1, 1",
            "bl dhdpcie_pci_suspend_resume",
            "ldr r3, [r4]",
            "mov r2, 1",
            "strb r2, [r4, 0xe11]",
            "mov r2, 3",
            "str r2, [r3, 0x14]",
            "b 0x8013ce8",
            "ldr r0, [0x08013db0]",
            "bl printk",
            "mvn r0, 0",
            "b 0x8013c80",
            "ldr r3, [0x08013dac]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "beq 0x8013c7c",
            "ldr r0, [0x08013db4]",
            "bl printk",
            "mvn r0, 0",
            "b 0x8013c80",
            "ldr r3, [0x08013dac]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "beq 0x8013c7c",
            "ldr r0, [0x08013db8]",
            "bl printk",
            "mvn r0, 0",
            "b 0x8013c80",
            "ldr r3, [0x08013dac]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "mvneq r0, 0x6d",
            "beq 0x8013c80",
            "ldr r0, [0x08013dbc]",
            "ldr r1, [0x08013dc0]",
            "bl printk",
            "mvn r0, 0x6d",
            "b 0x8013c80"
        ]
    },
    "sym.dhd_remove_if": {
        "function_address": "0x08006eec",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sl, lr}",
            "add r6, r1, 0x600",
            "ldr r5, [r0, 0xc]",
            "add r6, r6, 2",
            "sub sp, sp, 0xc",
            "mov r7, r0",
            "mov sl, r1",
            "mov r8, r2",
            "ldr r4, [r5, r6, lsl 2]",
            "cmp r4, 0",
            "beq 0x8006fa4",
            "ldr r0, [r4, 8]",
            "cmp r0, 0",
            "beq 0x8006f50",
            "ldr r3, [0x08007044]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "bne 0x800702c",
            "mov r3, 0x27c",
            "ldrh r3, [r0, r3]",
            "cmp r3, 0",
            "bne 0x8006fb0",
            "bl free_netdev",
            "mov r3, 0",
            "str r3, [r4, 8]",
            "mov r8, 0",
            "mov r0, r7",
            "mov r1, sl",
            "bl dhd_wmf_cleanup",
            "mov r2, 1",
            "mov r3, r8",
            "mov r1, sl",
            "mov r0, r7",
            "str r8, [sp]",
            "bl dhd_l2_filter_arp_table_update",
            "ldr r1, [r4, 0xa8]",
            "mov r0, r7",
            "bl dhd_deinit_l2_arp_table",
            "mov r0, r4",
            "str r8, [r4, 0xa8]",
            "bl fcn.080051c0",
            "str r8, [r5, r6, lsl 2]",
            "mov r1, r4",
            "ldr r0, [r5, 8]",
            "mov r2, 0xac",
            "bl osl_mfree",
            "mov r0, 0",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sl, pc}",
            "ldr r1, [r0, 0x220]",
            "mov r0, 0",
            "add r1, r1, 8",
            "bl _set_bit_le",
            "ldr r3, [r4, 8]",
            "mov ip, 0",
            "ldm r5, {r0, r1}",
            "ldr r2, [r4, 0xc]",
            "str ip, [sp]",
            "bl fwder_bind",
            "movw r3, 0x39b8",
            "str r0, [r4, 4]",
            "ldr r0, [r5, r3]",
            "cmp r0, 0",
            "beq 0x8006ff8",
            "ldrb r3, [r0]",
            "cmp r3, 0",
            "bne 0x800701c",
            "cmp r8, 0",
            "beq 0x800700c",
            "ldr r0, [r4, 8]",
            "bl unregister_netdev",
            "b 0x8006f48",
            "ldr r0, [r4, 8]",
            "mov r1, r8",
            "bl unregister_netdevice_queue",
            "b 0x8006f48",
            "ldr r3, [r0, 0x54]",
            "ldr r1, [r4, 8]",
            "blx r3",
            "b 0x8006ff8",
            "mov r1, r0",
            "ldr r2, [r4, 0xc]",
            "ldr r0, [0x08007048]",
            "bl printk",
            "ldr r0, [r4, 8]",
            "b 0x8006f34"
        ]
    },
    "sym.dhd_bus_console_in": {
        "function_address": "0x08012f30",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov sl, r1",
            "ldr r4, [r0, 4]",
            "sub sp, sp, 0x10",
            "mov r7, r2",
            "ldr r3, [r4, 0x160]",
            "cmp r3, 0",
            "mvneq sb, 0x16",
            "beq 0x8012fec",
            "ldr r0, [r4]",
            "ldrb ip, [r0, 0x12]",
            "cmp ip, 0",
            "bne 0x8012ff8",
            "add r6, r4, 0x19c",
            "add r5, sp, 0x10",
            "mov r8, 4",
            "mov r0, r4",
            "mov r1, r6",
            "mov r2, 1",
            "add r3, r3, 0x18",
            "str ip, [r5, -4]!",
            "stm sp, {r5, r8}",
            "bl fcn.0800f2e4",
            "subs sb, r0, 0",
            "blt 0x8012fec",
            "ldr r3, [r4, 0x160]",
            "mov r0, r4",
            "mov r1, r6",
            "mov r2, 1",
            "str sl, [sp]",
            "add r3, r3, 0x1c",
            "str r7, [sp, 4]",
            "bl fcn.0800f2e4",
            "subs sb, r0, 0",
            "blt 0x8012fec",
            "ldr r3, [r4, 0x160]",
            "mov r0, r4",
            "mov r1, r6",
            "mov r2, 1",
            "str r7, [sp, 0xc]",
            "stm sp, {r5, r8}",
            "bl fcn.0800f2e4",
            "subs sb, r0, 0",
            "blt 0x8012fec",
            "mov r0, r4",
            "mov r1, 0x80000000",
            "bl fcn.08012da8",
            "mov r0, sb",
            "add sp, sp, 0x10",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}",
            "mvn sb, 0x18",
            "bl dhd_os_sdunlock",
            "b 0x8012fec"
        ]
    },
    "fcn.0800f2e4": {
        "function_address": "0x0800f2e4",
        "instructions": [
            "cmp r2, 0",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x14",
            "mov sl, r0",
            "mov r7, r1",
            "mov r6, r3",
            "ldr r5, [sp, 0x38]",
            "ldr r4, [sp, 0x3c]",
            "bne 0x800f3e0",
            "cmp r4, 0",
            "beq 0x800f34c",
            "cmp r4, 7",
            "mov r8, 8",
            "add sb, sp, r8",
            "mov fp, sp",
            "bls osl_acp_war_enab",
            "bl osl_acp_war_enab",
            "cmp r0, 0",
            "bne 0x800f390",
            "ldr r3, [r7]",
            "ldrd r2, r3, [r3, r6]",
            "strd r2, r3, [sp, 8]",
            "ldrd r2, r3, [sp, 8]",
            "strd r2, r3, [r5]",
            "subs r4, r4, r8",
            "bne 0x800f358",
            "mov r0, 0",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "cmp r4, 7",
            "add r5, r5, r8",
            "add r6, r6, r8",
            "bhi osl_acp_war_enab",
            "bl osl_acp_war_enab",
            "cmp r0, 0",
            "bne 0x800f3b8",
            "ldr r3, [r7]",
            "ldrb r3, [r3, r6]",
            "strb r3, [sp]",
            "ldrb r3, [sp]",
            "mov r8, 1",
            "strb r3, [r5]",
            "b 0x800f344",
            "ldr r0, [sl]",
            "mov r2, sp",
            "ldr r1, [r7]",
            "mov r3, 8",
            "ldr r0, [r0]",
            "add r1, r1, r6",
            "bl osl_pcie_rreg",
            "ldrd r2, r3, [sp]",
            "strd r2, r3, [sp, 8]",
            "b 0x800f33c",
            "ldr r0, [sl]",
            "mov r3, 1",
            "ldr r1, [r7]",
            "mov r2, sb",
            "ldr r0, [r0]",
            "add r1, r1, r6",
            "bl osl_pcie_rreg",
            "ldrb r3, [sp, 8]",
            "strb r3, [sp]",
            "b 0x800f380",
            "cmp r4, 0",
            "beq 0x800f34c",
            "cmp r4, 7",
            "mov r1, 8",
            "bls 0x800f418",
            "ldrd r2, r3, [r5]",
            "ldr r0, [r7]",
            "strd r2, r3, [r0, r6]",
            "subs r4, r4, r1",
            "add r5, r5, r1",
            "add r6, r6, r1",
            "beq 0x800f34c",
            "cmp r4, 7",
            "bhi 0x800f3f4",
            "ldrb r2, [r5]",
            "mov r1, 1",
            "ldr r3, [r7]",
            "strb r2, [r3, r6]",
            "b 0x800f400"
        ]
    },
    "sym.sb_setcoreidx": {
        "function_address": "0x0801afc8",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r4, r0",
            "ldr r3, [r0, 0x90]",
            "mov r5, r1",
            "cmp r3, r1",
            "bhi 0x801afe8",
            "mov r0, 0",
            "pop {r3, r4, r5, pc}",
            "bl fcn.0801a8bc",
            "str r5, [r4, 0x8c]",
            "str r0, [r4, 0x88]",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.0801a8bc": {
        "function_address": "0x0801a8bc",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "add r2, r1, 0x40",
            "ldr r3, [r0, 4]",
            "sub sp, sp, 0xc",
            "mov r4, r0",
            "mov r7, r1",
            "ldr r6, [r0, 0x9c]",
            "cmp r3, 1",
            "ldr r5, [r6, r2, lsl 2]",
            "beq 0x801a980",
            "blo 0x801a95c",
            "cmp r3, 2",
            "movne r2, 0",
            "bne 0x801a950",
            "add r6, sp, 8",
            "ubfx r3, r5, 0xc, 4",
            "strb r3, [r6, -1]!",
            "movw r1, 0x397",
            "ldr r0, [r0, 0x58]",
            "mov r2, r6",
            "mov r3, 1",
            "bl osl_pcmcia_write_attr",
            "lsr ip, r5, 0x10",
            "ldr r0, [r4, 0x58]",
            "mov r1, 0x398",
            "lsr r5, r5, 0x18",
            "mov r2, r6",
            "strb ip, [sp, 7]",
            "mov r3, 1",
            "bl osl_pcmcia_write_attr",
            "mov r2, r6",
            "ldr r0, [r4, 0x58]",
            "movw r1, 0x399",
            "mov r3, 1",
            "strb r5, [sp, 7]",
            "bl osl_pcmcia_write_attr",
            "ldr r2, [r4, 0x88]",
            "mov r0, r2",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, pc}",
            "ldr r2, [r6, r1, lsl 2]",
            "cmp r2, 0",
            "bne 0x801a950",
            "mov r0, r5",
            "mov r1, 0x1000",
            "bl __arm_ioremap",
            "mov r2, r0",
            "str r0, [r6, r7, lsl 2]",
            "b 0x801a950",
            "mov r2, 4",
            "ldr r0, [r0, 0x58]",
            "mov r1, 0x80",
            "mov r3, r5",
            "bl osl_pci_write_config",
            "ldr r2, [r4, 0x88]",
            "b 0x801a950"
        ]
    },
    "sym.dhd_prot_ioctl": {
        "function_address": "0x0800e17c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov sl, r1",
            "ldr r1, [r0, 0x14]",
            "sub sp, sp, 0x1c",
            "mov r4, r0",
            "mov r5, r2",
            "mov r8, r3",
            "ldr sb, [sp, 0x40]",
            "cmp r1, 0",
            "ldr r6, [r0, 8]",
            "beq 0x800e35c",
            "ldr r3, [r0, 0x270]",
            "cmp r3, 0",
            "bne 0x800e35c",
            "cmp r1, 3",
            "beq 0x800e288",
            "ldr r7, [0x0800e564]",
            "ldr r3, [r7]",
            "tst r3, 2",
            "bne 0x800e484",
            "cmp sb, 0x2000",
            "bgt 0x800e298",
            "ldr r3, [r6, 0xc]",
            "cmp r3, 1",
            "beq 0x800e430",
            "mov r3, 1",
            "str r3, [r6, 0xc]",
            "ldr r3, [r5]",
            "str r3, [r6, 8]",
            "ldrb fp, [r5, 0xc]",
            "tst fp, 1",
            "beq 0x800e2a8",
            "ldr r3, [r7]",
            "ldr ip, [r5]",
            "tst r3, 2",
            "bne 0x800e4dc",
            "ldr r3, [r4, 0x14]",
            "cmp r3, 0",
            "beq 0x800e410",
            "ldr r3, [r4, 0x270]",
            "cmp r3, 0",
            "bne 0x800e3fc",
            "mov r2, ip",
            "mov r3, r8",
            "mov r0, r4",
            "uxth r1, sb",
            "str ip, [sp, 8]",
            "str sl, [sp]",
            "bl fcn.0800cc20",
            "ldr r3, [r7]",
            "ldr ip, [sp, 8]",
            "tst r3, 4",
            "bne 0x800e4a4",
            "mov r0, r4",
            "mov r1, sb",
            "mov r2, r8",
            "bl fcn.0800d444",
            "mov sl, r0",
            "cmp sl, 0",
            "bge 0x800e344",
            "ldr r3, [r7]",
            "tst r3, 1",
            "bne 0x800e550",
            "str sl, [r4, 0xa4]",
            "mov r3, 0",
            "str r3, [r6, 0xc]",
            "b 0x800e29c",
            "ldr r3, [0x0800e564]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "bne 0x800e3cc",
            "mvn sl, 0",
            "mov r0, sl",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r3, [r7]",
            "ldr r1, [r5]",
            "tst r3, 2",
            "str r1, [sp, 0xc]",
            "bne 0x800e494",
            "ldr r1, [sp, 0xc]",
            "movw r2, 0x106",
            "subs r3, r8, 0",
            "movne r3, 1",
            "cmp r1, r2",
            "movne r3, 0",
            "cmp r3, 0",
            "beq 0x800e304",
            "mov r0, r8",
            "ldr r1, [0x0800e568]",
            "bl strcmp",
            "cmp r0, 0",
            "beq 0x800e3e0",
            "mov r0, r8",
            "ldr r1, [0x0800e56c]",
            "bl strcmp",
            "cmp r0, 0",
            "beq 0x800e3c0",
            "mov r3, r8",
            "mov r0, r4",
            "uxth r1, sb",
            "ldr r2, [sp, 0xc]",
            "str sl, [sp]",
            "bl fcn.0800cc20",
            "ldr r3, [r7]",
            "tst r3, 4",
            "bne 0x800e4c0",
            "mov r0, r4",
            "mov r1, sb",
            "mov r2, r8",
            "bl fcn.0800d444",
            "subs sl, r0, 0",
            "strgt sl, [r5, 0x10]",
            "ble 0x800e264",
            "ldr r2, [r5]",
            "movw r3, 0x107",
            "cmp r2, r3",
            "beq 0x800e380",
            "mov sl, 0",
            "b 0x800e27c",
            "ldr r3, [0x0800e564]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "beq 0x800e298",
            "ldr r1, [0x0800e570]",
            "mvn sl, 0",
            "ldr r0, [0x0800e574]",
            "bl printk",
            "b 0x800e29c",
            "mov r0, r8",
            "ldr r1, [0x0800e578]",
            "bl strcmp",
            "subs r3, r0, 0",
            "bne 0x800e354",
            "ldr r0, [0x0800e578]",
            "str r3, [sp, 0x14]",
            "bl strlen",
            "add r3, r0, 5",
            "add r1, r0, 1",
            "cmp sb, r3",
            "bge 0x800e470",
            "ldr r3, [sp, 0x14]",
            "mov sl, 0",
            "strb r3, [r4, 0x24]",
            "b 0x800e27c",
            "ldr r3, [r4, 0xa4]",
            "str r3, [r8]",
            "b 0x800e344",
            "ldr r1, [0x0800e570]",
            "mvn sl, 0",
            "ldr r0, [0x0800e57c]",
            "bl printk",
            "b 0x800e29c",
            "ldr r0, [r4, 0xa4]",
            "bl bcmerrorstr",
            "mov r2, 0x40",
            "mov r1, r0",
            "mov r0, r8",
            "bl strncpy",
            "b 0x800e344",
            "ldr r3, [r7]",
            "tst r3, 1",
            "bne 0x800e53c",
            "mvn sl, 4",
            "b 0x800e26c",
            "ldr r3, [r7]",
            "tst r3, 1",
            "beq 0x800e408",
            "ldr r1, [0x0800e580]",
            "mvn sl, 4",
            "ldr r0, [0x0800e574]",
            "bl printk",
            "b 0x800e26c",
            "ldr r3, [r7]",
            "tst r3, 1",
            "bne 0x800e51c",
            "ldr r3, [r5]",
            "sub r3, r3, 0x104",
            "sub r3, r3, 2",
            "cmp r3, 1",
            "bhi 0x800e298",
            "ldr r3, [r7]",
            "tst r3, 2",
            "beq 0x800e298",
            "ldr r0, [0x0800e584]",
            "mov r1, r8",
            "bl printk",
            "mvn sl, 0",
            "b 0x800e29c",
            "add r0, sp, 0x14",
            "add r1, r8, r1",
            "mov r2, 4",
            "bl memcpy",
            "b 0x800e3b0",
            "ldr r1, [0x0800e570]",
            "ldr r0, [0x0800e588]",
            "bl printk",
            "b 0x800e1cc",
            "ldr r1, [0x0800e58c]",
            "ldr r0, [0x0800e588]",
            "bl printk",
            "b 0x800e2bc",
            "mov r1, fp",
            "mov r2, sl",
            "mov r3, ip",
            "ldr r0, [0x0800e590]",
            "str sb, [sp]",
            "bl printk",
            "b 0x800e250",
            "mov r1, fp",
            "mov r2, sl",
            "ldr r3, [sp, 0xc]",
            "ldr r0, [0x0800e594]",
            "str sb, [sp]",
            "bl printk",
            "b 0x800e328",
            "ldr r0, [0x0800e598]",
            "ldr r1, [0x0800e580]",
            "str ip, [sp, 8]",
            "bl printk",
            "ldr r3, [0x0800e564]",
            "ldr ip, [sp, 8]",
            "ldr r3, [r3]",
            "tst r3, 2",
            "beq 0x800e20c",
            "mov r2, ip",
            "ldr r0, [0x0800e59c]",
            "ldr r1, [0x0800e580]",
            "mov r3, sb",
            "bl printk",
            "ldr ip, [sp, 8]",
            "b 0x800e20c",
            "ldr r1, [r5]",
            "ldr ip, [r6, 8]",
            "ldr r0, [0x0800e5a0]",
            "mov r2, r1",
            "mov r3, ip",
            "str ip, [sp]",
            "bl printk",
            "b 0x800e43c",
            "ldr r1, [0x0800e580]",
            "mvn sl, 4",
            "ldr r0, [0x0800e5a4]",
            "bl printk",
            "b 0x800e26c",
            "mov r2, sl",
            "ldr r1, [0x0800e570]",
            "ldr r0, [0x0800e5a8]",
            "bl printk",
            "b 0x800e278"
        ]
    },
    "fcn.0800cc20": {
        "function_address": "0x0800cc20",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x14",
            "ldr r5, [r0, 8]",
            "mov r6, 0",
            "add ip, sp, 0x10",
            "mov r7, r1",
            "strh r6, [ip, -2]!",
            "mov fp, r2",
            "ldr r1, [r5, 0x2c]",
            "mov sl, r3",
            "mov r2, 1",
            "mov r3, ip",
            "mov r8, r0",
            "str r6, [sp]",
            "bl dhd_alloc_ring_space",
            "subs r4, r0, 0",
            "mov sb, r6",
            "beq 0x800cd3c",
            "mov r3, 9",
            "strb r6, [r4, 2]",
            "strb r3, [r4]",
            "movw r2, 0x5ee",
            "ldr r3, [sp, 0x38]",
            "cmp r7, r2",
            "movlo r2, r7",
            "str fp, [r4, 8]",
            "cmp sl, 0",
            "strh r7, [r4, 0x10]",
            "strb r3, [r4, 1]",
            "movw r3, 0xfffe",
            "str r3, [r4, 4]",
            "ldrh r3, [r5, 0xbc]",
            "add r1, r3, 1",
            "strh r3, [r4, 0xc]",
            "strh r1, [r5, 0xbc]",
            "strh r2, [r4, 0xe]",
            "str r6, [r4, 0x1c]",
            "ldr r3, [r5, 0x50]",
            "str r3, [r4, 0x18]",
            "ldr r6, [r5, 0x4c]",
            "moveq r0, r6",
            "beq 0x800ccdc",
            "mov r0, r6",
            "mov r1, sl",
            "mov r2, r7",
            "bl memcpy",
            "ldr r0, [r5, 0x4c]",
            "mov r1, r7",
            "bl osl_cache_flush",
            "tst r6, 3",
            "bne 0x800cd1c",
            "ldr r3, [0x0800cd80]",
            "ldr r3, [r3]",
            "tst r3, 0x10",
            "bne 0x800cd60",
            "mov r0, r8",
            "ldr r1, [r5, 0x2c]",
            "mov r2, r4",
            "mov r3, 1",
            "bl prot_ring_write_complete",
            "mov r0, 0",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r6, [0x0800cd80]",
            "ldr r3, [r6]",
            "tst r3, 1",
            "beq 0x800ccf4",
            "ldr r0, [0x0800cd84]",
            "bl printk",
            "ldr r3, [r6]",
            "b 0x800ccf4",
            "ldr r3, [0x0800cd80]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "mvneq r0, 0",
            "beq 0x800cd14",
            "ldr r0, [0x0800cd88]",
            "bl printk",
            "mvn r0, 0",
            "b 0x800cd14",
            "ldrh r1, [r4, 0xc]",
            "mov r2, fp",
            "ldrh r3, [r4, 0x10]",
            "ldr r0, [0x0800cd8c]",
            "str r1, [sp]",
            "ldr r1, [r4, 4]",
            "bl printk",
            "b 0x800ccfc"
        ]
    },
    "fcn.0800d444": {
        "function_address": "0x0800d444",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sl, lr}",
            "mov r4, r0",
            "ldr r5, [0x0800d5f4]",
            "sub sp, sp, 0x24",
            "mov r8, r1",
            "mov r7, r2",
            "ldr r6, [r0, 8]",
            "ldr r3, [r5]",
            "tst r3, 2",
            "bne 0x800d5ac",
            "ldrh r3, [r6, 0x1a]",
            "mov r0, r4",
            "cmp r3, 0",
            "subne r3, r3, 1",
            "strhne r3, [r6, 0x1a]",
            "bl fcn.0800cfbc",
            "ldr r0, [r4, 4]",
            "add r1, sp, 8",
            "mov r2, 0",
            "bl dhd_bus_rxctl",
            "subs sl, r0, 0",
            "ble 0x800d588",
            "ldr r3, [r5]",
            "tst r3, 4",
            "bne 0x800d5bc",
            "ldrh r3, [sp, 0x14]",
            "cmp r3, 0",
            "beq 0x800d51c",
            "ldr r6, [sp, 0xc]",
            "cmp r6, 0",
            "add r3, r6, 0x30",
            "ldrh r2, [r3, 4]",
            "ldr r1, [r3, 8]",
            "beq 0x800d4d8",
            "ldr r3, [r6, 0x6c]",
            "tst r3, 0x10",
            "beq 0x800d568",
            "ldr r3, [r5]",
            "tst r3, 4",
            "bne 0x800d5dc",
            "subs r3, r6, 0",
            "movne r3, 1",
            "cmp r7, 0",
            "cmpne r6, 0",
            "bne 0x800d554",
            "cmp r3, 0",
            "beq 0x800d510",
            "ldr r0, [r4]",
            "mov r1, r6",
            "mov r2, 0",
            "bl osl_pktfree",
            "ldrsh r0, [sp, 0x10]",
            "add sp, sp, 0x24",
            "pop {r4, r5, r6, r7, r8, sl, pc}",
            "ldr r5, [sp, 0xc]",
            "cmp r5, 0",
            "add r3, r5, 0x30",
            "ldrh r2, [r3, 4]",
            "ldr r1, [r3, 8]",
            "beq 0x800d510",
            "ldr r3, [r5, 0x6c]",
            "tst r3, 0x10",
            "beq 0x800d578",
            "ldr r0, [r4]",
            "mov r1, r5",
            "mov r2, 0",
            "bl osl_pktfree",
            "b 0x800d510",
            "mov r0, r7",
            "ldr r1, [r6, 0xbc]",
            "mov r2, r8",
            "bl memcpy",
            "b 0x800d500",
            "ldr r0, [r4]",
            "mov r3, 2",
            "bl osl_dma_unmap",
            "b 0x800d4d8",
            "ldr r0, [r4]",
            "mov r3, 1",
            "bl osl_dma_unmap",
            "b 0x800d540",
            "ldr r3, [r5]",
            "tst r3, 1",
            "mvneq r0, 0",
            "beq 0x800d514",
            "ldr r0, [0x0800d5f8]",
            "mov r1, sl",
            "bl printk",
            "mvn r0, 0",
            "b 0x800d514",
            "ldr r1, [0x0800d5fc]",
            "ldr r0, [0x0800d600]",
            "bl printk",
            "b 0x800d46c",
            "ldr ip, [sp, 0xc]",
            "mov r1, sl",
            "ldrsh r2, [sp, 0x10]",
            "ldrh r3, [sp, 0x14]",
            "ldr r0, [0x0800d604]",
            "str ip, [sp]",
            "bl printk",
            "b 0x800d4a8",
            "mov r1, r6",
            "mov r2, sl",
            "ldrsh r3, [sp, 0x10]",
            "ldr r0, [0x0800d608]",
            "bl printk",
            "b 0x800d4e4"
        ]
    },
    "sym.sb_scan": {
        "function_address": "0x0801aea0",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "mov r5, r1",
            "ldr r1, [r0, 0x88]",
            "mov r4, r0",
            "sub sp, sp, 0x14",
            "add r1, r1, 0xff0",
            "add r1, r1, 8",
            "bl fcn.0801a5fc",
            "ldr r3, [r4, 4]",
            "lsr r0, r0, 0x1c",
            "str r0, [r4, 0x50]",
            "cmp r3, 1",
            "beq 0x801afb0",
            "bhs 0x801af44",
            "ldr r1, [r4, 0x88]",
            "mov r0, r4",
            "add r1, r1, 0xfb0",
            "bl fcn.0801a5fc",
            "ands r3, r0, 3",
            "biceq r1, r0, 0xff",
            "beq 0x801af18",
            "cmp r3, 1",
            "biceq r1, r0, 0xff0",
            "biceq r1, r1, 0xf",
            "beq 0x801af18",
            "cmp r3, 2",
            "lsreq r1, r0, 0x10",
            "lsleq r1, r1, 0x10",
            "beq 0x801af18",
            "mov r1, 0",
            "mov ip, 0x18000000",
            "mov r0, r4",
            "str ip, [sp]",
            "mov r2, r5",
            "mov ip, 1",
            "mov r3, 0",
            "str ip, [sp, 4]",
            "bl fcn.0801aa3c",
            "str r0, [r4, 0x90]",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, pc}",
            "cmp r3, 2",
            "bne 0x801af14",
            "add r6, sp, 0x10",
            "mov r3, 0",
            "strb r3, [r6, -1]!",
            "movw r1, 0x397",
            "mov r2, r6",
            "ldr r0, [r4, 0x58]",
            "mov r3, 1",
            "bl osl_pcmcia_read_attr",
            "ldrb r7, [sp, 0xf]",
            "mov r2, r6",
            "mov r1, 0x398",
            "ldr r0, [r4, 0x58]",
            "mov r3, 1",
            "bl osl_pcmcia_read_attr",
            "ldrb ip, [sp, 0xf]",
            "lsl r7, r7, 0xc",
            "movw r1, 0x399",
            "ldr r0, [r4, 0x58]",
            "mov r2, r6",
            "mov r3, 1",
            "orr r6, r7, ip, lsl 16",
            "bl osl_pcmcia_read_attr",
            "ldrb r1, [sp, 0xf]",
            "orr r1, r6, r1, lsl 24",
            "b 0x801af18",
            "mov r1, 0x80",
            "ldr r0, [r4, 0x58]",
            "mov r2, 4",
            "bl osl_pci_read_config",
            "mov r1, r0",
            "b 0x801af18"
        ]
    },
    "fcn.0801aa3c": {
        "function_address": "0x0801aa3c",
        "instructions": [
            "cmp r3, 1",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x2c",
            "mov r4, r0",
            "str r2, [sp, 0x10]",
            "str r1, [sp, 0xc]",
            "ldr r2, [r0, 0x9c]",
            "movhi r0, 0",
            "ldr sl, [sp, 0x54]",
            "bls 0x801aa6c",
            "ldr sb, [r4, 0x90]",
            "subs r5, sl, 0",
            "movne r5, 1",
            "cmp sb, 0xf",
            "movhi r5, 0",
            "cmp r5, 0",
            "streq r5, [sp, 0x18]",
            "beq 0x801ac48",
            "add r8, sb, 0x3f",
            "mov r5, 0",
            "add r3, r3, 1",
            "add r8, r2, r8, lsl 2",
            "add r7, sb, 1",
            "ldr r6, [sp, 0x50]",
            "str r5, [sp, 0x18]",
            "str r3, [sp, 0x1c]",
            "b 0x801aae0",
            "cmp r0, 0x830",
            "beq 0x801ab8c",
            "add r5, r5, 1",
            "cmp r7, 0xf",
            "movhi r3, 0",
            "movls r3, 1",
            "cmp sl, r5",
            "add r6, r6, 0x1000",
            "movls r3, 0",
            "add r7, r7, 1",
            "cmp r3, 0",
            "beq 0x801ac48",
            "str r6, [r8, 4]!",
            "add fp, r5, sb",
            "ldr r3, [r4, 4]",
            "cmp r3, 0",
            "bne 0x801ab04",
            "ldr r2, [sp, 0xc]",
            "cmp r6, r2",
            "ldreq r3, [sp, 0x10]",
            "streq r3, [r8, -0x100]",
            "mov r1, fp",
            "mov r0, r4",
            "bl fcn.0801a8bc",
            "str fp, [r4, 0x8c]",
            "str r0, [r4, 0x88]",
            "mov r0, r4",
            "bl sb_coreid",
            "cmp r0, 0x800",
            "str r0, [r8, -0x80]",
            "bne 0x801aab0",
            "mov r0, r4",
            "ldr sl, [r4, 0x88]",
            "bl sb_corerev",
            "cmp r0, 4",
            "movne r3, 0",
            "moveq r3, 1",
            "cmp r0, 5",
            "orrhi r3, r3, 1",
            "cmp r3, 0",
            "bne 0x801ac28",
            "ldr sl, [r4, 0x3c]",
            "movw r2, 0x4306",
            "cmp sl, r2",
            "moveq sl, 6",
            "beq 0x801aab8",
            "movw r3, 0x4704",
            "cmp sl, r3",
            "moveq sl, 9",
            "beq 0x801aab8",
            "movw r2, 0x5365",
            "cmp sl, r2",
            "moveq sl, 7",
            "movne sl, 1",
            "b 0x801aab8",
            "ldr r3, [r4, 0x88]",
            "mov r0, r4",
            "add r1, r3, 0xf70",
            "add r3, r3, 0xf00",
            "str r3, [sp, 0x14]",
            "bl fcn.0801a5fc",
            "lsr r3, r0, 0x14",
            "str r7, [r4, 0x90]",
            "cmp r3, 0x180",
            "bne 0x801aab8",
            "ldr r2, [r4, 0x9c]",
            "bic r0, r0, 0xff0",
            "bic fp, r0, 0xf",
            "mov r3, 0",
            "add r2, r2, 0xfc",
            "ldr r1, [r2, 4]!",
            "add r3, r3, 1",
            "cmp fp, r1",
            "beq 0x801aab8",
            "cmp r3, r7",
            "blo 0x801abc8",
            "ldr r3, [sp, 0x14]",
            "mov r0, r4",
            "add r1, r3, 0x9c",
            "bl fcn.0801a5fc",
            "ldr r2, [sp, 0x10]",
            "ubfx ip, r0, 0x10, 4",
            "ldr r1, [sp, 0xc]",
            "mov r0, r4",
            "ldr r3, [sp, 0x1c]",
            "stm sp, {fp, ip}",
            "bl fcn.0801aa3c",
            "ldr r2, [sp, 0x50]",
            "cmp r2, 0x18000000",
            "beq 0x801ac58",
            "ldr r3, [sp, 0x18]",
            "add r3, r3, r0",
            "str r3, [sp, 0x18]",
            "b 0x801aab8",
            "mov r1, sl",
            "ldr r0, [r4, 0x58]",
            "add r2, sp, 0x24",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "ldr sl, [sp, 0x24]",
            "ubfx sl, sl, 0x18, 4",
            "b 0x801aab8",
            "ldr r2, [sp, 0x18]",
            "add r0, r2, r5",
            "str r0, [r4, 0x90]",
            "rsb sl, r0, sl",
            "b 0x801ac18"
        ]
    },
    "sym.dhd_sendup": {
        "function_address": "0x08006774",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r4, r0",
            "mov r6, r1",
            "ldr r0, [r0]",
            "mov r1, r2",
            "mov r5, r2",
            "bl osl_pkt_tonative",
            "ldr r3, [r4, 0xc]",
            "add r6, r6, 0x600",
            "add r6, r6, 2",
            "mov r7, r0",
            "ldr r6, [r3, r6, lsl 2]",
            "ldr r1, [r6, 8]",
            "str r1, [r0, 0x2c]",
            "ldr r3, [r6, 4]",
            "cmp r3, 0",
            "beq eth_type_trans",
            "ldr r0, [r3, 8]",
            "ldr r1, [r5, 0xbc]",
            "ldr r2, [r6, 0xc]",
            "bl fwder_lookup",
            "cmn r0, 1",
            "beq 0x80067f4",
            "mov r1, r5",
            "ldr r0, [r4]",
            "bl osl_pkt_frmnative",
            "ldr r0, [r4]",
            "mov r1, r5",
            "mov r2, 0",
            "bl osl_pktfree",
            "mov r0, 0",
            "pop {r4, r5, r6, r7, r8, pc}",
            "ldr r6, [r6, 4]",
            "ldr r8, [r7, 0x2c]",
            "mov r0, r6",
            "bl _raw_spin_lock_bh",
            "mov r1, r7",
            "mov r2, 1",
            "mov r3, r8",
            "ldr ip, [r6, 0xc]",
            "mov r0, r6",
            "blx ip",
            "mov r7, r0",
            "mov r0, r6",
            "bl _raw_spin_unlock_bh",
            "cmp r7, 0",
            "bne 0x80067d0",
            "mov r0, 0",
            "pop {r4, r5, r6, r7, r8, pc}",
            "bl eth_type_trans",
            "mov r2, sp",
            "strh r0, [r7, 0x8e]",
            "bic r3, r2, 0x1fc0",
            "bic r3, r3, 0x3f",
            "ldr r3, [r3, 4]",
            "bic r3, r3, 0xfe000000",
            "bic r3, r3, 0xff",
            "cmp r3, 0",
            "bne 0x800688c",
            "ldr r2, [r4, 0xc]",
            "mov r3, 0x3980",
            "ldrb r3, [r2, r3]",
            "cmp r3, 0",
            "beq 0x8006898",
            "cmp r7, 0",
            "beq 0x80067ec",
            "mov r0, r4",
            "mov r1, r7",
            "bl fcn.080054f4",
            "b 0x80067ec",
            "mov r0, r7",
            "bl netif_rx",
            "b 0x80067ec",
            "mov r0, r7",
            "bl netif_rx_ni",
            "b 0x80067ec"
        ]
    },
    "sym.dhd_prot_init": {
        "function_address": "0x0800de7c",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "mov r2, 0x200",
            "ldr r6, [0x0800e0b8]",
            "sub sp, sp, 0xc",
            "mov r5, r0",
            "ldr r4, [r0, 8]",
            "ldr r3, [r6]",
            "strh r2, [r4, 0x1e]",
            "tst r3, 4",
            "bne 0x800e0a0",
            "mov r3, 0",
            "ldr r0, [r5, 4]",
            "add r1, r4, 0x12",
            "mov r2, 0x13",
            "bl dhd_bus_cmn_readshared",
            "ldrh r3, [r4, 0x12]",
            "cmp r3, 0",
            "moveq r3, 0x100",
            "strheq r3, [r4, 0x12]",
            "ldr r3, [r6]",
            "tst r3, 4",
            "bne 0x800e088",
            "mov r2, 8",
            "mov r3, 0x30",
            "mov r6, r5",
            "mov r7, 0",
            "strh r2, [r4, 0x14]",
            "strh r2, [r4, 0x16]",
            "mov r2, 1",
            "strh r3, [r4, 0x20]",
            "strh r2, [r4, 0xbc]",
            "strh r7, [r4, 0x1c]",
            "strh r7, [r4, 0xba]",
            "strh r7, [r4, 0xb8]",
            "ldr r0, [r6, 4]!",
            "bl dhd_bus_get_mbintr_fn",
            "ldr r1, [r4, 0x24]",
            "str r0, [r4, 0x58]",
            "mov r0, r6",
            "bl fcn.0800d144",
            "mov r0, r6",
            "ldr r1, [r4, 0x28]",
            "bl fcn.0800d144",
            "mov r0, r6",
            "ldr r1, [r4, 0x2c]",
            "bl fcn.0800d144",
            "mov r0, r6",
            "ldr r1, [r4, 0x30]",
            "bl fcn.0800d144",
            "mov r0, r6",
            "ldr r1, [r4, 0x34]",
            "bl fcn.0800d144",
            "mov r0, r6",
            "ldr r1, [r4, 0x38]",
            "bl fcn.0800d144",
            "ldr r2, [r4, 0x30]",
            "mov r3, 0xfe",
            "str r7, [r4, 0xb0]",
            "str r7, [r4, 0xb4]",
            "str r3, [r2, 0x38]",
            "ldr r2, [r4, 0x34]",
            "str r3, [r2, 0x38]",
            "ldr r2, [r4, 0x38]",
            "str r3, [r2, 0x38]",
            "movw r3, 0x17a8",
            "ldr r3, [r5, r3]",
            "tst r3, 0x20000",
            "beq 0x800e03c",
            "ldr r3, [reloc.dhd_prot_d2h_sync_seqnum]",
            "str r3, [r4, 0xac]",
            "ldr r0, [r5, 4]",
            "mov r6, 0",
            "add r1, r4, 0x64",
            "mov r2, 4",
            "mov r3, 1",
            "str r6, [sp]",
            "bl dhd_bus_cmn_writeshared",
            "ldr r0, [r5, 4]",
            "mov r3, 2",
            "add r1, r4, 0x5c",
            "mov r2, 4",
            "str r6, [sp]",
            "bl dhd_bus_cmn_writeshared",
            "movw r3, 0x17bc",
            "ldrb r3, [r5, r3]",
            "cmp r3, r6",
            "bne 0x800e054",
            "movw r3, 0x17bd",
            "ldrb r3, [r5, r3]",
            "cmp r3, 0",
            "beq 0x800e01c",
            "ldr r0, [r5, 4]",
            "mov r6, 0",
            "add r1, r4, 0x74",
            "mov r2, 4",
            "mov r3, 3",
            "str r6, [sp]",
            "bl dhd_bus_cmn_writeshared",
            "ldr r0, [r5, 4]",
            "add r1, r4, 0xa4",
            "mov r2, 4",
            "mov r3, 6",
            "str r6, [sp]",
            "bl dhd_bus_cmn_writeshared",
            "mov r0, r5",
            "bl dhd_msgbuf_rxbuf_post",
            "mov r0, r5",
            "bl fcn.0800d018",
            "mov r0, r5",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, lr}",
            "b fcn.0800cfbc",
            "tst r3, 0x40000",
            "ldrne r3, [reloc.dhd_prot_d2h_sync_xorcsum]",
            "ldreq r3, [reloc.dhd_prot_d2h_sync_none]",
            "strne r3, [r4, 0xac]",
            "streq r3, [r4, 0xac]",
            "b 0x800df94",
            "ldr r0, [r5, 4]",
            "add r1, r4, 0x94",
            "mov r2, 4",
            "mov r3, 5",
            "str r6, [sp]",
            "bl dhd_bus_cmn_writeshared",
            "mov r2, 4",
            "ldr r0, [r5, 4]",
            "add r1, r4, 0x84",
            "mov r3, r2",
            "str r6, [sp]",
            "bl dhd_bus_cmn_writeshared",
            "b 0x800dfd8",
            "movw r2, 0x4c4",
            "ldr r1, [0x0800e0c8]",
            "ldrh r3, [r4, 0x12]",
            "ldr r0, [0x0800e0cc]",
            "bl printk",
            "b 0x800ded4",
            "movw r2, 0x4bb",
            "ldr r1, [0x0800e0c8]",
            "mov r3, 0x200",
            "ldr r0, [0x0800e0d0]",
            "bl printk",
            "b 0x800dea4"
        ]
    },
    "fcn.0800d144": {
        "function_address": "0x0800d144",
        "instructions": [
            "push {r4, r5, lr}",
            "mov r4, r1",
            "ldr r1, [r1, 0x30]",
            "mov r2, 8",
            "sub sp, sp, 0xc",
            "mov r5, r0",
            "ldrh ip, [r4, 2]",
            "mov r3, 0xa",
            "ldr r0, [r0]",
            "add r1, r1, r2",
            "str ip, [sp]",
            "bl dhd_bus_cmn_writeshared",
            "ldr r1, [r4, 0x30]",
            "mov r2, 2",
            "ldrh ip, [r4, 2]",
            "mov r3, 0x12",
            "ldr r0, [r5]",
            "add r1, r1, 4",
            "str ip, [sp]",
            "bl dhd_bus_cmn_writeshared",
            "ldr r1, [r4, 0x30]",
            "mov r3, 0x11",
            "ldrh ip, [r4, 2]",
            "mov r2, 2",
            "ldr r0, [r5]",
            "add r1, r1, 6",
            "str ip, [sp]",
            "bl dhd_bus_cmn_writeshared",
            "mov r3, 1",
            "strb r3, [r4]",
            "add sp, sp, 0xc",
            "pop {r4, r5, pc}"
        ]
    },
    "sym.ai_scan": {
        "function_address": "0x080156dc",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r0",
            "sub sp, sp, 0x4c",
            "ldr ip, [r4, 0x9c]",
            "add r7, sp, 0x40",
            "mov r3, 4",
            "mov r2, r7",
            "mov r5, r1",
            "ldr r0, [r0, 0x58]",
            "add r1, r1, 0xfc",
            "str ip, [sp, 0x18]",
            "bl osl_pcie_rreg",
            "ldr r2, [r4, 4]",
            "ldr r3, [sp, 0x40]",
            "cmp r2, 0",
            "bne 0x801589c",
            "mov r0, r3",
            "mov r1, 0x1000",
            "bl __arm_ioremap",
            "str r0, [sp, 0x44]",
            "add r6, sp, 0x44",
            "add r8, sp, 0x3c",
            "add sl, sp, 0x38",
            "add sb, sp, 0x34",
            "mov r5, r4",
            "add r1, r0, 0xe00",
            "str r1, [sp, 0x20]",
            "ldr r3, [sp, 0x20]",
            "cmp r0, r3",
            "bhs 0x8015850",
            "mov r0, r5",
            "mov r1, r6",
            "mov r2, 0xe",
            "mov r3, 0",
            "bl fcn.08015520",
            "cmp r0, 0xf",
            "mov r4, r0",
            "beq 0x801585c",
            "mov r2, 0",
            "mov r0, r5",
            "mov r1, r6",
            "mov r3, r2",
            "bl fcn.08015520",
            "tst r0, 0xe",
            "mov fp, r0",
            "bne 0x8015850",
            "movw r2, 0x43b",
            "ubfx ip, r4, 8, 0xc",
            "cmp r2, r4, lsr 20",
            "movw r0, 0xfff",
            "movne r3, 0",
            "moveq r3, 1",
            "cmp ip, r0",
            "movne r3, 0",
            "andeq r3, r3, 1",
            "cmp r3, 0",
            "bne 0x8015894",
            "ubfx r1, fp, 9, 5",
            "cmp r1, 0",
            "str r1, [sp, 0x14]",
            "beq 0x8015894",
            "ubfx r2, fp, 0xe, 5",
            "ubfx r3, fp, 0x13, 5",
            "str r2, [sp, 0x24]",
            "adds r2, r3, r2",
            "str r3, [sp, 0x2c]",
            "beq 0x80158c8",
            "ldr lr, [r5, 0x90]",
            "ubfx r0, fp, 4, 5",
            "cmp r0, 0",
            "str lr, [sp, 0x28]",
            "add r2, lr, 0x120",
            "add r1, lr, 0x140",
            "add r3, lr, 0x20",
            "ldr lr, [sp, 0x18]",
            "str r4, [lr, r2, lsl 2]",
            "str fp, [lr, r1, lsl 2]",
            "str ip, [lr, r3, lsl 2]",
            "beq 0x8015900",
            "mov r4, 0",
            "mov fp, r0",
            "b 0x801582c",
            "cmp fp, r4",
            "bls 0x8015900",
            "mov r2, 1",
            "mov r0, r5",
            "mov r1, r6",
            "mov r3, r2",
            "bl fcn.08015520",
            "and r0, r0, 0xe",
            "add r4, r4, 1",
            "cmp r0, 2",
            "beq 0x8015824",
            "mov r4, r5",
            "mov r3, 0",
            "str r3, [r5, 0x90]",
            "add sp, sp, 0x4c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "mov r0, r5",
            "mov r1, r6",
            "mov r3, r2",
            "str ip, [sp, 0x10]",
            "stm sp, {r7, r8, sl}",
            "str sb, [sp, 0xc]",
            "bl fcn.080155cc",
            "cmp r0, 0",
            "ldr ip, [sp, 0x10]",
            "beq 0x80158d4",
            "ldr r3, [sp, 0x40]",
            "str r3, [r5, 0x98]",
            "ldr r0, [sp, 0x44]",
            "b 0x8015748",
            "cmp r2, 1",
            "bne 0x801585c",
            "add r2, r5, 0x1000",
            "ldr r0, [r4, 0x58]",
            "str r2, [r4, 0x94]",
            "mov r1, 0x80",
            "mov r2, 4",
            "bl osl_pci_write_config",
            "mov r0, r5",
            "str r5, [sp, 0x44]",
            "b 0x801572c",
            "movw r3, 0x367",
            "cmp ip, r3",
            "beq 0x8015864",
            "movw r2, 0x5dc",
            "movw r3, 0x50b",
            "cmp ip, r3",
            "cmpne ip, r2",
            "beq 0x80157e8",
            "movw r3, 0x827",
            "cmp ip, 0x840",
            "cmpne ip, r3",
            "beq 0x80157e8",
            "ldr r0, [sp, 0x44]",
            "b 0x8015748",
            "mov r2, 0",
            "mov r0, r5",
            "mov r3, r2",
            "mov r1, r6",
            "stm sp, {r7, r8, sl}",
            "str sb, [sp, 0xc]",
            "bl fcn.080155cc",
            "cmp r0, 0",
            "movne r2, 0",
            "strne r2, [sp, 0x1c]",
            "bne 0x8015990",
            "str r0, [sp, 0x1c]",
            "mov r0, r5",
            "mov r1, r6",
            "mov r2, 0",
            "mov r3, 0x40",
            "stm sp, {r7, r8, sl}",
            "str sb, [sp, 0xc]",
            "bl fcn.080155cc",
            "cmp r0, 0",
            "bne 0x8015988",
            "ldr r1, [sp, 0x1c]",
            "cmp r1, 0",
            "bne 0x8015990",
            "ldr r3, [sp, 0x3c]",
            "cmp r3, 0",
            "bne 0x8015850",
            "ldr r3, [sp, 0x34]",
            "cmp r3, 0",
            "bne 0x8015850",
            "ldr r3, [sp, 0x38]",
            "cmp r3, 0x1000",
            "beq 0x8015930",
            "b 0x8015850",
            "mov r0, 1",
            "b 0x801592c",
            "ldr ip, [sp, 0x28]",
            "mov r4, 2",
            "ldr r1, [sp, 0x40]",
            "ldr lr, [sp, 0x18]",
            "add r3, ip, 0x40",
            "add r2, ip, 0xa0",
            "str r1, [lr, r3, lsl 2]",
            "ldr r3, [sp, 0x38]",
            "str r3, [lr, r2, lsl 2]",
            "ldr fp, [sp, 0x28]",
            "mov r2, 0",
            "mov r0, r5",
            "mov r3, r2",
            "mov r1, r6",
            "stm sp, {r7, r8, sl}",
            "str sb, [sp, 0xc]",
            "bl fcn.080155cc",
            "subs r0, r0, 0",
            "movne r0, 1",
            "cmp r4, 2",
            "movne r3, 0",
            "andeq r3, r0, 1",
            "cmp r3, 0",
            "beq 0x8015a24",
            "ldr r3, [sp, 0x38]",
            "cmp r3, 0x1000",
            "beq 0x8015a04",
            "add r4, r4, 1",
            "b 0x80159b8",
            "ldr r0, [sp, 0x40]",
            "add r1, fp, 0x80",
            "ldr ip, [sp, 0x18]",
            "add r2, fp, 0xc0",
            "add r4, r4, 1",
            "str r0, [ip, r1, lsl 2]",
            "str r3, [ip, r2, lsl 2]",
            "b 0x80159b8",
            "cmp r0, 0",
            "bne 0x80159fc",
            "ldr r0, [sp, 0x14]",
            "cmp r0, 1",
            "movne fp, 1",
            "beq 0x8015a84",
            "mov r4, 0",
            "b 0x8015a48",
            "add r4, r4, 1",
            "mov r0, r5",
            "mov r1, r6",
            "mov r2, fp",
            "mov r3, 0",
            "stm sp, {r7, r8, sl}",
            "str sb, [sp, 0xc]",
            "bl fcn.080155cc",
            "cmp r0, 0",
            "bne 0x8015a44",
            "cmp r4, 0",
            "beq 0x8015850",
            "ldr r1, [sp, 0x14]",
            "add fp, fp, 1",
            "cmp r1, fp",
            "bhi 0x8015a3c",
            "ldr r2, [sp, 0x24]",
            "cmp r2, 0",
            "beq 0x8015b00",
            "mov r4, 0",
            "ldr fp, [sp, 0x28]",
            "b 0x8015ad4",
            "ldr r3, [sp, 0x34]",
            "cmp r3, 0",
            "bne 0x8015850",
            "ldr r3, [sp, 0x38]",
            "cmp r3, 0x1000",
            "bne 0x8015850",
            "cmp r4, 0",
            "add r4, r4, 1",
            "ldreq r3, [sp, 0x40]",
            "ldreq ip, [sp, 0x18]",
            "streq r3, [ip, r2, lsl 2]",
            "ldr r0, [sp, 0x24]",
            "cmp r0, r4",
            "bls 0x8015b00",
            "mov r2, r4",
            "mov r0, r5",
            "mov r1, r6",
            "mov r3, 0xc0",
            "stm sp, {r7, r8, sl}",
            "str sb, [sp, 0xc]",
            "bl fcn.080155cc",
            "cmp r0, 0",
            "add r2, fp, 0x100",
            "bne 0x8015a9c",
            "b 0x8015850",
            "ldr r1, [sp, 0x2c]",
            "cmp r1, 0",
            "beq 0x8015b90",
            "ldr r2, [sp, 0x14]",
            "mov r4, 0",
            "subs fp, r2, 1",
            "movne fp, 1",
            "b 0x8015b60",
            "ldr r3, [sp, 0x34]",
            "cmp r3, 0",
            "bne 0x8015850",
            "ldr r3, [sp, 0x38]",
            "cmp r3, 0x1000",
            "bne 0x8015850",
            "ldr ip, [sp, 0x24]",
            "cmp r4, 0",
            "cmpeq ip, 0",
            "add r4, r4, 1",
            "ldreq r3, [sp, 0x40]",
            "ldreq r0, [sp, 0x18]",
            "streq r3, [r0, r2, lsl 2]",
            "ldr r1, [sp, 0x2c]",
            "cmp r1, r4",
            "bls 0x8015b90",
            "add r2, r4, fp",
            "mov r3, 0x80",
            "mov r0, r5",
            "mov r1, r6",
            "stm sp, {r7, r8, sl}",
            "str sb, [sp, 0xc]",
            "bl fcn.080155cc",
            "ldr r3, [sp, 0x28]",
            "cmp r0, 0",
            "add r2, r3, 0x100",
            "bne 0x8015b20",
            "b 0x8015850",
            "ldr r2, [sp, 0x1c]",
            "ldr r0, [sp, 0x44]",
            "cmp r2, 0",
            "ldreq r3, [r5, 0x90]",
            "addeq r3, r3, 1",
            "streq r3, [r5, 0x90]",
            "b 0x8015748"
        ]
    },
    "fcn.08015520": {
        "function_address": "0x08015520",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r5, r0",
            "sub sp, sp, 8",
            "mov r4, r1",
            "mov r6, r2",
            "mov r8, r3",
            "add r7, sp, 4",
            "bl si_osh",
            "mov r0, r5",
            "bl si_osh",
            "mov r2, r7",
            "mov r3, 4",
            "ldr r1, [r4]",
            "bl osl_pcie_rreg",
            "ldr r2, [r4]",
            "cmp r6, 0",
            "ldr r3, [sp, 4]",
            "add r2, r2, 4",
            "str r2, [r4]",
            "bne 0x80155b0",
            "mov r0, r3",
            "add sp, sp, 8",
            "pop {r4, r5, r6, r7, r8, pc}",
            "cmp r2, r8",
            "beq 0x8015570",
            "bl si_osh",
            "mov r0, r5",
            "bl si_osh",
            "mov r2, r7",
            "mov r3, 4",
            "ldr r1, [r4]",
            "bl osl_pcie_rreg",
            "ldr r2, [r4]",
            "ldr r3, [sp, 4]",
            "add r2, r2, 4",
            "str r2, [r4]",
            "tst r3, 1",
            "mov r0, r5",
            "and r2, r3, r6",
            "beq si_osh",
            "cmp r3, 0xf",
            "bne 0x801557c",
            "b 0x8015570"
        ]
    },
    "fcn.080155cc": {
        "function_address": "0x080155cc",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r6, r2",
            "mov r2, 1",
            "mov r7, r3",
            "mov r3, r2",
            "mov r8, r0",
            "mov r5, r1",
            "ldr sl, [sp, 0x2c]",
            "ldr fp, [sp, 0x30]",
            "ldr sb, [sp, 0x34]",
            "bl fcn.08015520",
            "and r3, r0, 6",
            "mov r4, r0",
            "cmp r3, 4",
            "beq 0x8015620",
            "ldr r3, [r5]",
            "mov r4, 0",
            "sub r3, r3, 4",
            "str r3, [r5]",
            "mov r0, r4",
            "pop {r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ubfx r3, r0, 8, 4",
            "cmp r3, r6",
            "bne 0x8015608",
            "and r3, r0, 0xc0",
            "cmp r3, r7",
            "bne 0x8015608",
            "ldr r3, [sp, 0x28]",
            "bic r2, r0, 0xff0",
            "ands r1, r0, 8",
            "bic r2, r2, 0xf",
            "str r2, [r3]",
            "streq r1, [sl]",
            "bne 0x801567c",
            "and r3, r4, 0x30",
            "mov r6, 0",
            "cmp r3, 0x30",
            "str r6, [sb]",
            "beq 0x8015698",
            "lsr r3, r3, 4",
            "mov r2, 0x1000",
            "lsl r3, r2, r3",
            "str r3, [fp]",
            "b 0x8015618",
            "mov r2, 0",
            "mov r0, r8",
            "mov r1, r5",
            "mov r3, r2",
            "bl fcn.08015520",
            "str r0, [sl]",
            "b 0x8015654",
            "mov r3, r6",
            "mov r0, r8",
            "mov r1, r5",
            "mov r2, r6",
            "bl fcn.08015520",
            "bic r3, r0, 0xff0",
            "tst r0, 8",
            "bic r3, r3, 0xf",
            "str r3, [fp]",
            "beq 0x8015618",
            "mov r2, r6",
            "mov r0, r8",
            "mov r1, r5",
            "mov r3, r6",
            "bl fcn.08015520",
            "str r0, [sb]",
            "b 0x8015618"
        ]
    },
    "sym.dhd_attach": {
        "function_address": "0x08008e58",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "movw lr, 0",
            "movt lr, 0",
            "mov sl, r0",
            "sub sp, sp, 0x2c",
            "mov ip, 0",
            "ldr r0, [lr]",
            "add r8, sp, 0x18",
            "add r3, r8, 4",
            "mov fp, r1",
            "str ip, [r3], 4",
            "tst r0, 2",
            "str ip, [r3], 4",
            "str r2, [sp, 0xc]",
            "str ip, [sp, 0x18]",
            "str ip, [r3]",
            "bne 0x8009520",
            "mvn r0, 0",
            "mov r1, r0",
            "mov r2, r0",
            "bl dhd_wifi_platform_get_adapter",
            "mov r1, 7",
            "movw r2, 0x39d0",
            "mov r5, r0",
            "bl wifi_platform_prealloc",
            "subs r4, r0, 0",
            "beq 0x8009390",
            "ldr r6, [0x08009764]",
            "add r2, r4, 0x3880",
            "movw r1, 0x39d0",
            "mov r0, r4",
            "str r2, [sp, 0x10]",
            "mov r7, 0",
            "bl __memzero",
            "ldr r1, [r6, -0xfb8]",
            "add r3, r4, 0x3880",
            "ldr ip, [r6, -0xfbc]",
            "add r3, r3, 0x34",
            "ldr lr, [sp, 0x10]",
            "mov sb, 1",
            "mov r0, r4",
            "str sl, [r4, 8]",
            "add ip, ip, r1",
            "movw r1, 0x38ac",
            "str r7, [r4, r1]",
            "mov r1, 0x39c0",
            "str r7, [r3], 4",
            "add r2, lr, 0x34",
            "str r7, [r3]",
            "movw r3, 0x1848",
            "str r5, [r4, r3]",
            "movw r3, 0x38c8",
            "str ip, [r4, r1]",
            "mvn r1, 1",
            "str r1, [r4, r3]",
            "mvn r1, 0",
            "movw r3, 0x3908",
            "str r1, [r4, r3]",
            "movw r3, 0x38b0",
            "str sb, [r4, r3]",
            "movw r3, 0x38b4",
            "str r2, [r4, r3]",
            "movw r3, 0x38b8",
            "str r2, [r4, r3]",
            "bl dhd_update_fw_nv_path",
            "ldr r1, [r6, -0xfb4]",
            "mov r0, sb",
            "str r4, [r4, 0x14]",
            "bl fwder_assign",
            "cmn r0, 1",
            "mov r1, r0",
            "str r0, [r4, 4]",
            "beq dhd_msg_level",
            "ldr ip, [r6, -0xfb4]",
            "movw r3, 0x1790",
            "str r0, [r4, r3]",
            "mov r2, sb",
            "str r7, [sp]",
            "mov r0, sb",
            "ldr lr, [r4, 8]",
            "add ip, ip, 1",
            "ldr r3, [reloc.dhd_forward]",
            "mov r5, r4",
            "str ip, [r6, -0xfb4]",
            "str lr, [sp, 4]",
            "bl fwder_attach",
            "ldr r3, [r4, 4]",
            "movw r2, 0",
            "movt r2, 0",
            "str r0, [r5], 8",
            "ldr lr, [sp, 0xc]",
            "str r5, [sp, 0x14]",
            "add r3, r3, r3, lsl 1",
            "add r3, r2, r3, lsl 2",
            "str r5, [r3, 4]",
            "str fp, [r4, 0xc]",
            "ldrb r3, [r6, -0xfb0]",
            "str lr, [r4, 0x20]",
            "cmp r3, 0",
            "bne 0x80092f0",
            "mov ip, 0",
            "mov r0, r5",
            "mov r1, ip",
            "mov r3, ip",
            "str ip, [sp]",
            "mov r2, r8",
            "mov ip, 1",
            "str ip, [sp, 4]",
            "bl dhd_allocate_if",
            "subs sb, r0, 0",
            "beq dhd_msg_level",
            "mov r0, sl",
            "add r7, r4, 0x3840",
            "bl osl_pci_device",
            "cmp r0, 0",
            "mov r8, 0",
            "addne r0, r0, 0x60",
            "add r3, r7, 0x14",
            "movw r1, 0x384c",
            "strne r0, [sb, 0x290]",
            "mov r2, r3",
            "str r8, [sb, 0xcc]",
            "str r8, [r4, r1]",
            "movw ip, 0x3850",
            "str r8, [r3], 4",
            "mov sl, 1",
            "str r8, [r3]",
            "movw r3, 0x3854",
            "str r2, [r4, r3]",
            "movw r3, 0x3858",
            "str r2, [r4, r3]",
            "add r0, r7, 0x1c",
            "str sl, [r4, ip]",
            "ldr r1, [0x0800976c]",
            "bl __init_waitqueue_head",
            "add r0, r4, 0x3980",
            "ldr r1, [0x0800976c]",
            "add r0, r0, 0x20",
            "bl __init_waitqueue_head",
            "movw r3, 0x38a0",
            "mov r0, r5",
            "str r8, [r4, r3]",
            "movw r3, 0x38a4",
            "str r8, [r4, r3]",
            "movw r3, 0x38a8",
            "str r8, [r4, r3]",
            "movw r3, 0x397c",
            "str r8, [r4, r3]",
            "movw r3, 0x3984",
            "str r8, [r4, r3]",
            "movw r3, 0x3988",
            "str r8, [r4, r3]",
            "movw r3, 0x398c",
            "str r8, [r4, r3]",
            "movw r3, 0x3990",
            "str r8, [r4, r3]",
            "movw r3, 0x3994",
            "str r8, [r4, r3]",
            "bl dhd_prot_attach",
            "cmp r0, r8",
            "bne dhd_msg_level",
            "mov r2, sl",
            "ldr r0, [r4, 8]",
            "mov r1, 0x80",
            "bl id16_map_init",
            "subs sl, r0, 0",
            "beq dhd_msg_level",
            "ldr r0, [r4, 8]",
            "movw r1, 0x1830",
            "bl osl_malloc",
            "subs fp, r0, 0",
            "beq dhd_msg_level",
            "movw r3, 0x1794",
            "add r2, fp, 0x1800",
            "str fp, [r4, r3]",
            "movw r3, 0x1798",
            "str sl, [r4, r3]",
            "movw r1, 0x1830",
            "str r2, [sp, 0xc]",
            "add r8, r2, 0x28",
            "add sb, fp, 0x28",
            "bl __memzero",
            "mov r0, sl",
            "bl id16_map_alloc",
            "str r0, [r8], -0x30",
            "cmp r8, sb",
            "bne 0x8009130",
            "ldr r3, [sp, 0xc]",
            "add fp, fp, 0x30",
            "add r8, r3, 0x30",
            "mvn lr, 0",
            "mov r1, fp",
            "strh lr, [fp, 4]",
            "mov r0, r5",
            "strh lr, [fp, 6]",
            "strh lr, [fp, 8]",
            "strh lr, [fp, 0xa]",
            "strh lr, [fp, 0xc]",
            "strh lr, [fp, 0xe]",
            "strh lr, [fp, 0x10]",
            "strh lr, [fp, 0x12]",
            "add fp, fp, 0x30",
            "bl fcn.080050d4",
            "cmp fp, r8",
            "bne 0x8009150",
            "ldr r3, [reloc.ctf_attach_fn]",
            "ldr ip, [r3]",
            "cmp ip, 0",
            "beq 0x80092b4",
            "ldr r0, [r4, 8]",
            "ldr r3, [reloc.dhd_ctf_detach]",
            "ldr r1, [0x08009778]",
            "str r4, [sp]",
            "ldr r2, [0x0800977c]",
            "blx ip",
            "cmp r0, 0",
            "movw r3, 0x39b8",
            "str r0, [r4, r3]",
            "beq dhd_msg_level",
            "ldrb r3, [r0]",
            "cmp r3, 0",
            "bne 0x80093d0",
            "mov r1, 0",
            "add r0, r7, 0x2c",
            "mov r2, r1",
            "ldr r5, [0x08009780]",
            "bl init_timer_key",
            "movw r0, 0",
            "ldr r1, [reloc.dhd_watchdog]",
            "movt r0, 0",
            "ldr r2, [r5, 0x118]",
            "ldr r3, [r0]",
            "cmp r3, 0",
            "mov r3, 0x3880",
            "str r4, [r4, r3]",
            "movw r3, 0x387c",
            "str r1, [r4, r3]",
            "movw r3, 0x3868",
            "str r2, [r4, r3]",
            "mvnlt r2, 0",
            "movwlt r3, 0x3908",
            "strlt r2, [r4, r3]",
            "bge 0x80096ac",
            "ldr r3, [r5, 0x280]",
            "cmp r3, 0",
            "bge 0x8009530",
            "ldr lr, [sp, 0x10]",
            "mov r2, r4",
            "ldr r1, [reloc.dhd_dpc]",
            "add r0, lr, 0xc",
            "bl tasklet_init",
            "mvn r2, 0",
            "movw r3, 0x38c8",
            "str r2, [r4, r3]",
            "mov r3, 0x3980",
            "ldrb r3, [r4, r3]",
            "cmp r3, 0",
            "bne 0x80095e8",
            "ldrb r3, [r6, -0xfc0]",
            "cmp r3, 0",
            "bne 0x8009280",
            "ldr r3, [0x08009764]",
            "mov r2, 1",
            "ldr r0, [0x0800978c]",
            "strb r2, [r3, -0xfc0]",
            "bl register_inet6addr_notifier",
            "mov r0, r4",
            "bl dhd_deferred_work_init",
            "ldr r3, [r6, -0xfb8]",
            "movw r2, 0x39b4",
            "str r0, [r4, r2]",
            "movw r1, 0x26e",
            "movw r2, 0x39b0",
            "add r3, r3, 1",
            "str r1, [r4, r2]",
            "str r3, [r6, -0xfb8]",
            "ldr r0, [sp, 0x14]",
            "add sp, sp, 0x2c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "movw r3, 0x39b8",
            "str ip, [r4, r3]",
            "movw r2, 0",
            "movt r2, 0",
            "ldr r3, [r2]",
            "tst r3, 1",
            "beq 0x80091d0",
            "ldr r0, [0x08009790]",
            "ldr r1, [0x08009794]",
            "bl printk",
            "movw r3, 0x39b8",
            "ldr r0, [r4, r3]",
            "cmp r0, 0",
            "bne 0x80091c4",
            "b 0x80091d0",
            "mov r2, 0x10",
            "sub r1, r6, 0xfb0",
            "mov r0, r8",
            "bl strncpy",
            "mov r0, r8",
            "strb r7, [sp, 0x27]",
            "bl strlen",
            "add r2, sp, 0x28",
            "add r3, r2, r0",
            "ldrb r3, [r3, -0x11]",
            "sub r3, r3, 0x30",
            "uxtb r3, r3",
            "cmp r3, 9",
            "movls r3, 0",
            "movhi r3, 1",
            "cmp r0, 0xd",
            "movgt r3, 0",
            "cmp r3, 0",
            "beq 0x8008fe8",
            "mov r0, r8",
            "ldr r1, [0x08009798]",
            "bl strcat",
            "b 0x8008fe8",
            "movw r0, 0",
            "movt r0, 0",
            "ldr r3, [r0]",
            "tst r3, 1",
            "moveq r7, 0x46",
            "bne 0x8009508",
            "tst r3, 2",
            "bne 0x80094f0",
            "movw r3, 0x39b0",
            "mov r0, r5",
            "mov r2, 0",
            "str r7, [r4, r3]",
            "str r2, [sp, 0x14]",
            "bl dhd_detach",
            "mov r0, r5",
            "bl dhd_free",
            "b 0x80092a8",
            "mov r0, sl",
            "movw r1, 0x39d0",
            "bl osl_malloc",
            "subs r4, r0, 0",
            "bne 0x8008ec4",
            "movw r0, 0",
            "movt r0, 0",
            "ldr r3, [r0]",
            "ands r3, r3, 1",
            "streq r3, [sp, 0x14]",
            "beq 0x80092a8",
            "ldr r1, [0x08009794]",
            "ldr r0, [0x0800979c]",
            "str r4, [sp, 0x14]",
            "bl printk",
            "b 0x80092a8",
            "ldr r0, [r4, 8]",
            "mov r1, 0x800",
            "mov r2, 0x6a0",
            "bl osl_ctfpool_init",
            "cmp r0, 0",
            "bge 0x80091d0",
            "movw lr, 0",
            "movt lr, 0",
            "ldr r3, [lr]",
            "tst r3, 1",
            "beq 0x80091d0",
            "ldr r1, [0x08009794]",
            "ldr r0, [0x080097a0]",
            "bl printk",
            "b 0x80091d0",
            "movw r0, 0",
            "movt r0, 0",
            "ldr r3, [r0]",
            "tst r3, 1",
            "moveq r7, 2",
            "addeq r5, r4, 8",
            "beq 0x8009364",
            "ldr r0, [0x080097a4]",
            "add r7, r7, 2",
            "ldr r1, [0x08009794]",
            "add r5, r4, 8",
            "ldr r2, [r6, -0xfb4]",
            "bl printk",
            "ldr r3, [0x0800977c]",
            "ldr r3, [r3]",
            "b 0x8009364",
            "movw lr, 0",
            "mov r7, 2",
            "movt lr, 0",
            "ldr r3, [lr]",
            "b 0x8009364",
            "movw r2, 0",
            "movt r2, 0",
            "ldr r3, [r2]",
            "tst r3, 1",
            "bne 0x80094d0",
            "mov r7, 0x4e",
            "b 0x8009364",
            "movw lr, 0",
            "movt lr, 0",
            "ldr r3, [lr]",
            "tst r3, 1",
            "bne 0x80094e0",
            "ldr r0, [r4, 8]",
            "mov r1, sl",
            "bl id16_map_fini",
            "movw r0, 0",
            "movt r0, 0",
            "ldr r3, [r0]",
            "tst r3, 1",
            "beq 0x8009474",
            "ldr r0, [0x080097a8]",
            "mov r2, 0x80",
            "ldr r1, [0x08009794]",
            "mov r7, 0x4e",
            "bl printk",
            "ldr r3, [0x0800977c]",
            "ldr r3, [r3]",
            "b 0x8009364",
            "ldr r1, [0x080097ac]",
            "ldr r0, [0x080097b0]",
            "bl printk",
            "b dhd_msg_level",
            "ldr r1, [0x080097ac]",
            "ldr r0, [0x080097b4]",
            "bl printk",
            "b 0x8009490",
            "mov r2, r7",
            "ldr r1, [0x08009794]",
            "mov r3, r5",
            "ldr r0, [0x080097b8]",
            "bl printk",
            "b 0x800936c",
            "ldr r0, [0x080097bc]",
            "mov r7, 0x46",
            "bl printk",
            "ldr r3, [0x0800977c]",
            "ldr r3, [r3]",
            "b 0x8009364",
            "ldr r1, [0x08009794]",
            "ldr r0, [0x080097c0]",
            "bl printk",
            "b 0x8008e9c",
            "mov r2, 0x10",
            "add r0, r4, 0x38c0",
            "mov r7, r0",
            "mov r1, 0",
            "add r0, r0, r2",
            "add r5, r7, 0x18",
            "bl memset",
            "movw r3, 0x38d8",
            "mov r8, 0",
            "str r5, [r4, r3]",
            "add r3, r3, 4",
            "str r5, [r4, r3]",
            "add r3, r3, 8",
            "add r0, r7, 0x28",
            "ldr r1, [0x0800976c]",
            "str r8, [r4, r3]",
            "bl __init_waitqueue_head",
            "movw r3, 0x38bc",
            "ldr r2, [0x080097c4]",
            "str r4, [r4, r3]",
            "ldr r3, [sp, 0x10]",
            "ldr r0, [reloc.dhd_dpc_thread]",
            "add r1, r3, 0x3c",
            "mov r3, 0x38c0",
            "str r2, [r4, r3]",
            "add r3, r3, 0x20",
            "str r8, [r4, r3]",
            "bl kthread_create",
            "cmn r0, 0x1000",
            "mov r5, r0",
            "bhi 0x80095b0",
            "bl wake_up_process",
            "movw r3, 0x38c4",
            "mov r1, 0",
            "str r5, [r4, r3]",
            "movw r2, 0x38f4",
            "ldr r3, [r5, 0xd8]",
            "str r1, [r4, r2]",
            "sub r2, r2, 0x2c",
            "ldr r1, [0x08009794]",
            "str r3, [r4, r2]",
            "mov r2, 0x38c0",
            "ldr r2, [r4, r2]",
            "ldr r0, [0x080097cc]",
            "bl printk",
            "b 0x8009250",
            "add r0, r4, 0x780",
            "mov r1, 0x1000",
            "add r0, r0, 8",
            "add r5, r4, 0x3940",
            "bl __memzero",
            "mov r2, 0x10",
            "mov r1, 0",
            "add r0, r5, r2",
            "mov r7, 0",
            "bl memset",
            "add r3, r5, 0x18",
            "movw r2, 0x3958",
            "str r3, [r4, r2]",
            "add r2, r2, 4",
            "str r3, [r4, r2]",
            "movw r3, 0x3964",
            "add r0, r5, 0x28",
            "ldr r1, [0x0800976c]",
            "str r7, [r4, r3]",
            "bl __init_waitqueue_head",
            "ldr r2, [0x080097d0]",
            "movw r3, 0x393c",
            "str r4, [r4, r3]",
            "add r3, r3, 4",
            "add r1, r4, 0x3900",
            "ldr r0, [reloc.dhd_rxf_thread]",
            "str r2, [r4, r3]",
            "add r3, r3, 0x20",
            "add r1, r1, 0x3c",
            "str r7, [r4, r3]",
            "bl kthread_create",
            "cmn r0, 0x1000",
            "mov r5, r0",
            "bhi 0x8009674",
            "bl wake_up_process",
            "movw r3, 0x3944",
            "mov r1, 0",
            "str r5, [r4, r3]",
            "movw r2, 0x3974",
            "ldr r3, [r5, 0xd8]",
            "str r1, [r4, r2]",
            "sub r2, r2, 0x2c",
            "ldr r1, [0x08009794]",
            "str r3, [r4, r2]",
            "mov r2, 0x3940",
            "ldr r2, [r4, r2]",
            "ldr r0, [0x080097cc]",
            "bl printk",
            "b 0x8009260",
            "mov r2, 0x10",
            "add r0, r4, 0x3900",
            "mov r7, r0",
            "mov r1, 0",
            "add r0, r0, r2",
            "add r8, r7, 0x18",
            "bl memset",
            "movw r3, 0x3918",
            "mov sl, 0",
            "str r8, [r4, r3]",
            "add r3, r3, 4",
            "str r8, [r4, r3]",
            "add r3, r3, 8",
            "add r0, r7, 0x28",
            "ldr r1, [0x0800976c]",
            "str sl, [r4, r3]",
            "bl __init_waitqueue_head",
            "ldr r2, [0x080097d8]",
            "movw r3, 0x38fc",
            "str r4, [r4, r3]",
            "add r3, r3, 4",
            "add r1, r4, 0x38c0",
            "ldr r0, [reloc.dhd_watchdog_thread]",
            "str r2, [r4, r3]",
            "add r3, r3, 0x20",
            "add r1, r1, 0x3c",
            "str sl, [r4, r3]",
            "bl kthread_create",
            "cmn r0, 0x1000",
            "mov r7, r0",
            "bhi 0x800972c",
            "bl wake_up_process",
            "movw r3, 0x3904",
            "mov r1, 0",
            "str r7, [r4, r3]",
            "movw r2, 0x3934",
            "ldr r3, [r7, 0xd8]",
            "str r1, [r4, r2]",
            "sub r2, r2, 0x2c",
            "ldr r1, [0x08009794]",
            "str r3, [r4, r2]",
            "mov r2, 0x3900",
            "ldr r2, [r4, r2]",
            "ldr r0, [0x080097cc]",
            "bl printk",
            "b 0x8009224"
        ]
    },
    "sym.sb_corevendor": {
        "function_address": "0x0801a9fc",
        "instructions": [
            "push {r3, lr}",
            "ldr r1, [r0, 0x88]",
            "add r1, r1, 0xff0",
            "add r1, r1, 0xc",
            "bl fcn.0801a5fc",
            "lsr r0, r0, 0x10",
            "pop {r3, pc}"
        ]
    },
    "sym.sb_corereg": {
        "function_address": "0x0801aff8",
        "instructions": [
            "cmp r1, 0x1f",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r6, r2",
            "sub sp, sp, 0x14",
            "mov r5, r1",
            "mov r4, r0",
            "mov r8, r3",
            "ldr r7, [r0, 0x9c]",
            "movhi r6, 0",
            "bhi 0x801b10c",
            "ldr r3, [r0, 4]",
            "cmp r3, 0",
            "beq 0x801b118",
            "cmp r3, 1",
            "beq 0x801b1d8",
            "ldr r3, [r4, 0x68]",
            "cmp r3, 0",
            "beq 0x801b05c",
            "ldr r1, [r4, 0x8c]",
            "ldr r2, [r4, 0x60]",
            "add r1, r1, 0x20",
            "ldr r1, [r7, r1, lsl 2]",
            "cmp r1, r2",
            "movne r3, 0",
            "beq 0x801b218",
            "str r3, [sp, 4]",
            "mov r0, r4",
            "mov sb, 0",
            "bl si_coreidx",
            "mov r1, r5",
            "mov fp, r0",
            "mov r0, r4",
            "bl sb_setcoreidx",
            "ldr r3, [sp, 0x38]",
            "add sl, r0, r6",
            "orrs r3, r3, r8",
            "bne 0x801b144",
            "cmp r6, 0xf00",
            "bhs 0x801b170",
            "ldr r2, [r4, 0x3c]",
            "movw r3, 0x5354",
            "cmp r5, 0",
            "cmpeq r2, r3",
            "bne 0x801b0b4",
            "cmp r6, 0x80",
            "ldreq r6, [sp, 0x38]",
            "beq 0x801b0cc",
            "ldr r0, [r4, 0x58]",
            "mov r1, sl",
            "add r2, sp, 0xc",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "ldr r6, [sp, 0xc]",
            "cmp sb, 0",
            "bne 0x801b10c",
            "cmp fp, r5",
            "beq 0x801b0e8",
            "mov r0, r4",
            "mov r1, fp",
            "bl sb_setcoreidx",
            "ldr r3, [r4, 0x6c]",
            "cmp r3, 0",
            "beq 0x801b10c",
            "ldr r1, [r4, 0x8c]",
            "ldr r2, [r4, 0x60]",
            "add r1, r1, 0x20",
            "ldr r1, [r7, r1, lsl 2]",
            "cmp r1, r2",
            "beq 0x801b1c8",
            "mov r0, r6",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r2, [r7, r1, lsl 2]",
            "cmp r2, 0",
            "beq 0x801b228",
            "add sl, r2, r6",
            "mov r3, 0",
            "mov sb, 1",
            "str r3, [sp, 4]",
            "mov fp, r3",
            "ldr r3, [sp, 0x38]",
            "orrs r3, r3, r8",
            "beq 0x801b08c",
            "cmp r6, 0xf00",
            "blo 0x801b184",
            "mov r1, sl",
            "mov r0, r4",
            "bl fcn.0801a5fc",
            "ldr r3, [sp, 0x38]",
            "bic r2, r0, r8",
            "mov r1, sl",
            "mov r0, r4",
            "orr r2, r2, r3",
            "bl fcn.0801a710",
            "mov r0, r4",
            "mov r1, sl",
            "bl fcn.0801a5fc",
            "mov r6, r0",
            "b 0x801b0cc",
            "ldr r0, [r4, 0x58]",
            "mov r1, sl",
            "add r2, sp, 0xc",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 0xc]",
            "bic r8, r3, r8",
            "ldr r3, [sp, 0x38]",
            "orr r8, r8, r3",
            "dsb sy",
            "ldr r3, [0x0801b2bc]",
            "ldr r3, [r3, 0xc]",
            "cmp r3, 0",
            "beq 0x801b1c0",
            "blx r3",
            "str r8, [sl]",
            "b 0x801b094",
            "ldr r0, [r4, 0x64]",
            "ldr r1, [sp, 4]",
            "blx r3",
            "b 0x801b10c",
            "add r3, r1, 0x20",
            "ldr r3, [r7, r3, lsl 2]",
            "cmp r3, 0x800",
            "beq 0x801b244",
            "ldr r3, [r4, 0x10]",
            "cmp r3, r5",
            "bne 0x801b034",
            "ldr r3, [r4, 8]",
            "movw r2, 0x83c",
            "cmp r3, 0x820",
            "cmpne r3, r2",
            "bne 0x801b284",
            "ldr sl, [r4, 0x88]",
            "add r3, r6, 0x2000",
            "add sl, sl, r3",
            "b 0x801b128",
            "ldr r0, [r4, 0x64]",
            "blx r3",
            "str r0, [sp, 4]",
            "b 0x801b060",
            "add r3, r1, 0x40",
            "mov r1, 0x1000",
            "ldr r0, [r7, r3, lsl 2]",
            "bl __arm_ioremap",
            "mov r2, r0",
            "str r0, [r7, r5, lsl 2]",
            "b 0x801b124",
            "ldr r3, [r0, 8]",
            "movw r2, 0x83c",
            "cmp r3, 0x820",
            "cmpne r3, r2",
            "bne 0x801b268",
            "ldr sl, [r4, 0x88]",
            "add r3, r6, 0x3000",
            "add sl, sl, r3",
            "b 0x801b128",
            "movw r2, 0x804",
            "cmp r3, r2",
            "bne 0x801b1e8",
            "ldr r3, [r0, 0xc]",
            "cmp r3, 0xc",
            "bls 0x801b1e8",
            "b 0x801b258",
            "movw r2, 0x804",
            "cmp r3, r2",
            "beq 0x801b2ac",
            "cmp r6, 0xf00",
            "ldr sl, [r4, 0x88]",
            "movlo r3, 0x1800",
            "movhs r3, 0x1000",
            "add r3, r3, r6",
            "add sl, sl, r3",
            "b 0x801b128",
            "ldr r3, [r4, 0xc]",
            "cmp r3, 0xc",
            "bls 0x801b290",
            "b 0x801b208"
        ]
    },
    "sym.dhd_prot_clean_flow_ring": {
        "function_address": "0x0800eb40",
        "instructions": [
            "push {r4, lr}",
            "ldr r0, [r0, 8]",
            "bl fcn.0800d1c4",
            "ldr r3, [0x0800eb6c]",
            "ldr r3, [r3]",
            "tst r3, 4",
            "popeq {r4, pc}",
            "ldr r0, [0x0800eb70]",
            "ldr r1, [0x0800eb74]",
            "pop {r4, lr}",
            "b printk"
        ]
    },
    "sym.dhd_prot_process_msgbuf_rxcpl": {
        "function_address": "0x08021c18",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "sub sp, sp, 8",
            "mov r4, r0",
            "ldr r7, [0x08021ca8]",
            "add r6, sp, 6",
            "ldr r5, [r0, 8]",
            "b 0x8021c74",
            "bl 0x8021c34",
            "mov r0, r4",
            "ldr r1, [r5, 0x34]",
            "mov r2, r8",
            "ldrh r3, [sp, 6]",
            "bl fcn.080215bc",
            "cmp r0, 0",
            "beq 0x8021c60",
            "ldr r3, [r7]",
            "tst r3, 1",
            "bne 0x8021c94",
            "ldr r3, [r5, 0x34]",
            "mov r0, r4",
            "ldrh r1, [r3, 2]",
            "ldr r2, [r3, 0x34]",
            "bl 0x8021c70",
            "ldr r1, [r5, 0x34]",
            "mov r2, r6",
            "mov r0, r4",
            "bl 0x8021c80",
            "subs r8, r0, 0",
            "bne 0x8021c34",
            "add sp, sp, 8",
            "pop {r4, r5, r6, r7, r8, pc}",
            "ldrh r2, [sp, 6]",
            "ldr r1, [0x08021cac]",
            "ldr r0, [0x08021cb0]",
            "bl 0x8021ca0",
            "b 0x8021c60"
        ]
    },
    "sym.sb_core_cflags": {
        "function_address": "0x0801ac9c",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "orrs r3, r2, r1",
            "ldr r5, [r0, 0x88]",
            "mov r4, r0",
            "mov r6, r1",
            "mov r7, r2",
            "add r5, r5, 0xf00",
            "addeq r5, r5, 0x98",
            "beq 0x801ace0",
            "add r5, r5, 0x98",
            "mov r1, r5",
            "bl fcn.0801a5fc",
            "bic r2, r0, r6, lsl 16",
            "mov r1, r5",
            "mov r0, r4",
            "orr r2, r2, r7, lsl 16",
            "bl fcn.0801a710",
            "mov r0, r4",
            "mov r1, r5",
            "bl fcn.0801a5fc",
            "lsr r0, r0, 0x10",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "sym.dhd_prot_txqueue_flush": {
        "function_address": "0x08021df0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x3c",
            "str r1, [sp, 0x10]",
            "mov r2, 0",
            "mov r8, r0",
            "ldrh r1, [r1, 0x18]",
            "ldr r3, [r0, 8]",
            "strh r2, [sp, 0x36]",
            "str r1, [sp, 0x28]",
            "ldr r2, [sp, 0x10]",
            "str r3, [sp, 0x2c]",
            "ldr r3, [sp, 0x28]",
            "ldr r1, [sp, 0x10]",
            "ldr r2, [r2, 0x44]",
            "cmp r3, 0",
            "add r1, r1, 8",
            "ldreq r0, [sp, 0x28]",
            "str r1, [sp, 0xc]",
            "str r2, [sp, 0x20]",
            "beq 0x80220b4",
            "ldr sb, [0x08022124]",
            "mov sl, r8",
            "mov r1, 0",
            "cmp r3, 0x200",
            "movhs r3, 0x200",
            "str r1, [sp, 0x24]",
            "str r3, [sp, 0x14]",
            "str r1, [sp, 0x18]",
            "mov r6, 0",
            "mov r0, sl",
            "ldr r1, [sp, 0x20]",
            "add r3, sp, 0x36",
            "ldr r2, [sp, 0x14]",
            "str r6, [sp]",
            "bl sym.dhd_alloc_ring_space",
            "cmp r0, 0",
            "str r0, [sp, 0x1c]",
            "beq 0x80220bc",
            "ldrh r3, [sp, 0x36]",
            "ldr r1, [sp, 0x14]",
            "cmp r3, 0",
            "rsb r3, r3, r1",
            "uxth r3, r3",
            "str r3, [sp, 0x14]",
            "beq 0x8022020",
            "ldr r4, [sp, 0x1c]",
            "mov fp, r6",
            "b 0x8021f88",
            "ldrh r3, [r5, 0x32]",
            "add r2, r4, 8",
            "ldr ip, [r8, r3]",
            "add r0, r8, r3",
            "rsb r7, r3, r7",
            "add r3, r3, 0xe",
            "add r1, r8, r3",
            "sub r7, r7, 0x12",
            "str ip, [r4, 8]",
            "uxth r7, r7",
            "ldr r3, [r0, 4]",
            "str r3, [r2, 4]",
            "ldr r3, [r0, 8]",
            "str r3, [r2, 8]",
            "ldrh r0, [r0, 0xc]",
            "strh r0, [r2, 0xc]",
            "ldr r3, [r5, 0x6c]",
            "tst r3, 2",
            "addne r3, r1, 0x140",
            "movne r2, 0x140",
            "strne r3, [r5, 0x18]",
            "moveq r2, 0x38",
            "ldr r0, [sl]",
            "mov r3, 2",
            "stm sp, {r5, fp}",
            "bl 0x8021f14",
            "cmp r0, 0",
            "beq 0x8021ffc",
            "add r3, r5, 0x30",
            "mov r1, 0xf",
            "strh r7, [r3, 4]",
            "str r0, [r3, 8]",
            "strb r1, [r4]",
            "mov r1, 1",
            "str r5, [r4, 4]",
            "ldr r2, [sp, 0x10]",
            "ldrb r3, [r2, 0x35]",
            "strb r3, [r4, 1]",
            "ldrb r3, [r5, 0x88]",
            "strb r1, [r4, 0x17]",
            "strh r7, [r4, 0x2a]",
            "str fp, [r4, 0x24]",
            "lsl r3, r3, 5",
            "str r0, [r4, 0x20]",
            "orr r3, r3, 1",
            "strb r3, [r4, 0x16]",
            "ldr r3, [sb]",
            "tst r3, 2",
            "bne 0x80220e4",
            "ldrh r3, [sp, 0x36]",
            "add r6, r6, 1",
            "cmp r3, r6",
            "ble 0x8022058",
            "add r4, r4, 0x30",
            "mov r0, sl",
            "ldr r1, [sp, 0xc]",
            "bl 0x8021f90",
            "subs r5, r0, 0",
            "beq 0x802203c",
            "ldr r3, [r5, 0x6c]",
            "ldr r8, [r5, 0xbc]",
            "ldrh r7, [r5, 0x78]",
            "tst r3, 0x10",
            "bne 0x8021eb0",
            "mov r2, 0xe",
            "mov r1, r8",
            "add r0, r4, 8",
            "sub r7, r7, 0xe",
            "bl 0x8021fc0",
            "ldr r3, [r5, 0x6c]",
            "add r1, r8, 0xe",
            "uxth r7, r7",
            "tst r3, 2",
            "movne r2, 0x140",
            "moveq r2, r7",
            "addne r3, r1, r2",
            "strne r3, [r5, 0x18]",
            "mov r3, 1",
            "ldr r0, [sl]",
            "stm sp, {r5, fp}",
            "bl 0x8021ff0",
            "cmp r0, 0",
            "bne 0x8021f20",
            "ldr r3, [sb]",
            "tst r3, 1",
            "bne 0x80220f8",
            "mov r0, sl",
            "ldr r1, [sp, 0xc]",
            "mov r2, r5",
            "bl 0x8022014",
            "cmp r6, 0",
            "bne 0x8022058",
            "ldr r3, [sp, 0x14]",
            "ldr r1, [sp, 0x18]",
            "cmp r3, r1",
            "bls 0x80220a4",
            "movw r2, 0xffff",
            "str r2, [sp, 0x18]",
            "b 0x8021e60",
            "ldr r3, [sb]",
            "tst r3, 1",
            "movweq r2, 0xffff",
            "streq r2, [sp, 0x18]",
            "bne 0x8022104",
            "cmp r6, 0",
            "beq 0x8022020",
            "uxth r6, r6",
            "ldr r1, [sp, 0x20]",
            "ldr r2, [sp, 0x1c]",
            "mov r0, sl",
            "mov r3, r6",
            "bl sym.prot_ring_write_complete",
            "ldr r1, [sp, 0x2c]",
            "ldrh r3, [r1, 0x1c]",
            "ldr r1, [sp, 0x24]",
            "add r2, r6, r1",
            "add r6, r6, r3",
            "uxth r2, r2",
            "ldr r3, [sp, 0x14]",
            "ldr r1, [sp, 0x18]",
            "str r2, [sp, 0x24]",
            "ldr r2, [sp, 0x2c]",
            "cmp r3, r1",
            "strh r6, [r2, 0x1c]",
            "bhi 0x8022030",
            "ldr r2, [sp, 0x24]",
            "cmp r2, 0",
            "mvneq r0, 0x15",
            "movne r0, 0",
            "add sp, sp, 0x3c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r3, [0x08022124]",
            "ldr r3, [r3]",
            "tst r3, 4",
            "beq 0x80220a4",
            "ldr r3, [sp, 0x2c]",
            "ldr r1, [0x08022128]",
            "ldr r0, [0x0802212c]",
            "ldrh r2, [r3, 0x1c]",
            "bl 0x80220dc",
            "b 0x80220a4",
            "mov r1, r7",
            "mov r2, r5",
            "ldr r0, [0x08022130]",
            "bl 0x80220f0",
            "b 0x8021f74",
            "ldr r0, [0x08022134]",
            "bl 0x80220fc",
            "b 0x8022008",
            "movw r3, 0xffff",
            "ldr r2, [sp, 0x28]",
            "str r3, [sp, 0x18]",
            "ldr r1, [0x08022128]",
            "ldrh r3, [sp, 0x36]",
            "ldr r0, [0x08022138]",
            "bl 0x802211c",
            "b 0x8022050"
        ]
    },
    "sym.si_socram_size": {
        "function_address": "0x0801e5cc",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r0",
            "ldr fp, [r0, 0x68]",
            "sub sp, sp, 0x14",
            "ldr r8, [r0, 0x9c]",
            "cmp fp, 0",
            "beq 0x801e720",
            "ldr sl, [r0, 0x8c]",
            "ldr r3, [r0, 0x60]",
            "add r2, sl, 0x20",
            "ldr r2, [r8, r2, lsl 2]",
            "cmp r2, r3",
            "movne fp, 0",
            "beq 0x801e714",
            "mov r0, r4",
            "movw r1, 0x80e",
            "mov r2, 0",
            "bl si_setcore",
            "subs r7, r0, 0",
            "moveq r5, r7",
            "beq 0x801e680",
            "mov r0, r4",
            "bl si_iscoreup",
            "subs sb, r0, 0",
            "beq 0x801e700",
            "mov r0, r4",
            "bl si_corerev",
            "mov r3, 4",
            "mov r6, r0",
            "mov r1, r7",
            "ldr r0, [r4, 0x58]",
            "add r2, sp, 0xc",
            "bl osl_pcie_rreg",
            "cmp r6, 0",
            "ldr r3, [sp, 0xc]",
            "bne 0x801e6b0",
            "and r3, r3, 0xf",
            "mov r5, 1",
            "add r3, r3, 0x10",
            "lsl r5, r5, r3",
            "cmp sb, 0",
            "beq 0x801e728",
            "mov r0, r4",
            "mov r1, sl",
            "bl si_setcoreidx",
            "ldr r3, [r4, 0x6c]",
            "cmp r3, 0",
            "beq 0x801e6a4",
            "ldr r1, [r4, 0x8c]",
            "ldr r2, [r4, 0x60]",
            "add r1, r1, 0x20",
            "ldr r1, [r8, r1, lsl 2]",
            "cmp r1, r2",
            "beq 0x801e754",
            "mov r0, r5",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "cmp r6, 2",
            "bls 0x801e738",
            "cmp r6, 0xc",
            "cmpne r6, 7",
            "movhi r6, 0",
            "movls r6, 1",
            "bhi 0x801e764",
            "ubfx r2, r3, 0x14, 4",
            "ubfx r1, r3, 4, 4",
            "cmp r2, 0",
            "and r3, r3, 0xf",
            "movne r5, 1",
            "addne r2, r2, 0xd",
            "lslne r2, r5, r2",
            "addne r3, r3, 0xe",
            "subne r5, r1, 1",
            "addeq r3, r3, 0xe",
            "addne r5, r2, r5, lsl r3",
            "lsleq r5, r1, r3",
            "b 0x801e66c",
            "mov r0, r4",
            "mov r1, sb",
            "mov r2, sb",
            "bl si_core_reset",
            "b 0x801e630",
            "ldr r0, [r0, 0x64]",
            "blx fp",
            "mov fp, r0",
            "ldr sl, [r4, 0x8c]",
            "b 0x801e604",
            "mov r0, r4",
            "mov r1, sb",
            "bl si_core_disable",
            "b 0x801e674",
            "and r5, r3, 0xf",
            "mov r2, 1",
            "add r5, r5, 0xe",
            "ubfx r3, r3, 4, 4",
            "lsl r5, r2, r5",
            "mul r5, r3, r5",
            "b 0x801e66c",
            "ldr r0, [r4, 0x64]",
            "mov r1, fp",
            "blx r3",
            "b 0x801e6a4",
            "ubfx r3, r3, 4, 4",
            "cmp r3, 0",
            "moveq r5, r3",
            "beq 0x801e66c",
            "add r2, r4, 0x58",
            "str fp, [sp]",
            "str sl, [sp, 4]",
            "mov fp, r8",
            "mov sl, r4",
            "mov r5, r6",
            "mov r8, r3",
            "mov r4, r2",
            "mov r2, r6",
            "add r6, r6, 1",
            "uxtb r6, r6",
            "mov r0, r4",
            "mov r1, r7",
            "mov r3, 0",
            "bl fcn.0801ba94",
            "cmp r8, r6",
            "add r5, r5, r0",
            "bhi 0x801e794",
            "mov r8, fp",
            "mov r4, sl",
            "ldr fp, [sp]",
            "ldr sl, [sp, 4]",
            "b 0x801e66c"
        ]
    },
    "sym.sb_set_initiator_to": {
        "function_address": "0x0801b860",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sl, lr}",
            "bics r3, r1, 0x77",
            "mov r5, r1",
            "mov r4, r0",
            "mov sl, r2",
            "ldr r6, [r0, 0x9c]",
            "bne 0x801b970",
            "cmp r2, 0x21",
            "beq 0x801b934",
            "ldr r8, [r4, 0x68]",
            "cmp r8, 0",
            "beq 0x801b8ac",
            "ldr r2, [r4, 0x8c]",
            "ldr r3, [r4, 0x60]",
            "add r2, r2, 0x20",
            "ldr r2, [r6, r2, lsl 2]",
            "cmp r2, r3",
            "movne r8, 0",
            "beq 0x801b98c",
            "mov r0, r4",
            "bl si_coreidx",
            "mov r1, sl",
            "mov r7, r0",
            "mov r0, r4",
            "bl sb_setcoreidx",
            "add sl, r0, 0xfa0",
            "mov r0, r4",
            "add sl, sl, 8",
            "mov r1, sl",
            "bl fcn.0801a5fc",
            "bic r2, r0, 0x77",
            "mov r3, r0",
            "orr r2, r2, r5",
            "mov r1, sl",
            "mov r0, r4",
            "and r5, r3, 0x77",
            "bl fcn.0801a710",
            "mov r0, r4",
            "bl sb_commit",
            "mov r0, r4",
            "mov r1, r7",
            "bl sb_setcoreidx",
            "ldr r3, [r4, 0x6c]",
            "cmp r3, 0",
            "beq 0x801b92c",
            "ldr r1, [r4, 0x8c]",
            "ldr r2, [r4, 0x60]",
            "add r1, r1, 0x20",
            "ldr r1, [r6, r1, lsl 2]",
            "cmp r1, r2",
            "beq 0x801b97c",
            "mov r0, r5",
            "pop {r3, r4, r5, r6, r7, r8, sl, pc}",
            "ldr r3, [r0, 4]",
            "cmp r3, 4",
            "ldrls pc, [pc, r3, lsl 2]",
            "b 0x801b970",
            "mvn r5, 0",
            "mov r0, r5",
            "pop {r3, r4, r5, r6, r7, r8, sl, pc}",
            "ldr r0, [r4, 0x64]",
            "mov r1, r8",
            "blx r3",
            "b 0x801b92c",
            "ldr r0, [r4, 0x64]",
            "blx r8",
            "mov r8, r0",
            "b 0x801b8ac",
            "invalid",
            "andsls pc, r8, sp, asr 17",
            "muleq r6, r4, r8",
            "ldmdbvs r0!, {r0, r1, r3, r4, r5, sb, sl, lr} ^",
            "cdp2 p0, 0xa, c15, c4, c3, 0",
            "sbcpl pc, sl, 0x1400000",
            "strls r2, [r0, -r1, lsl 6]",
            "movwls sb, 0x2301",
            "bge 0x81517e4",
            "invalid",
            "sbclt r1, sb, 0x5900",
            "andhs r8, ip, 0xd1000000",
            "strpl pc, [r3, -0xb02]",
            "umaallo pc, ip, sp, r8",
            "stclo p8, c15, [r6], -0x214",
            "invalid",
            "andlt r3, sb, r8, lsr 24",
            "mvnshi lr, 0xbd0000",
            "ldmvs r3, {r1, r7, r8, sb, fp, sp, lr} ^",
            "invalid"
        ]
    },
    "sym.si_attach": {
        "function_address": "0x0801c7e0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r5, r1",
            "sub sp, sp, 0xc",
            "mov r7, r0",
            "mov r1, 0xa4",
            "mov r0, r5",
            "mov r6, r2",
            "mov r8, r3",
            "ldr sb, [sp, 0x34]",
            "ldr fp, [sp, 0x38]",
            "bl osl_mallocz",
            "subs r4, r0, 0",
            "moveq r0, r4",
            "beq 0x801c870",
            "mov r0, r5",
            "mov r1, 0x580",
            "bl osl_mallocz",
            "subs sl, r0, 0",
            "beq 0x801c878",
            "ldr ip, [sp, 0x30]",
            "mov r3, r6",
            "str sl, [r4, 0x9c]",
            "mov r0, r4",
            "mov r1, r7",
            "mov r2, r5",
            "stm sp, {r8, ip}",
            "bl fcn.0801bfa8",
            "subs r6, r0, 0",
            "beq 0x801c890",
            "cmp sb, 0",
            "mov r0, r4",
            "ldrne sb, [sb]",
            "cmp fp, 0",
            "str sb, [r4, 0x80]",
            "ldrne fp, [fp]",
            "str fp, [r4, 0x84]",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "mov r0, r5",
            "mov r1, r4",
            "mov r2, 0xa4",
            "bl osl_mfree",
            "mov r0, sl",
            "b 0x801c870",
            "mov r2, 0xa4",
            "mov r0, r5",
            "mov r1, r4",
            "bl osl_mfree",
            "mov r0, r5",
            "mov r1, sl",
            "mov r2, 0x580",
            "bl osl_mfree",
            "mov r0, r6",
            "b 0x801c870"
        ]
    },
    "sym.dhd_l2_filter_arp_table_update": {
        "function_address": "0x080045b8",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x3c",
            "mov fp, r2",
            "ldrb r2, [sp, 0x60]",
            "add r5, sp, 0x20",
            "add r8, sp, 0x30",
            "mov sb, r3",
            "mov r7, r0",
            "str r1, [sp, 0xc]",
            "str r2, [sp, 8]",
            "bl dhd_get_ifp_arp_table_handle",
            "add r3, r0, 0x80",
            "add ip, r0, 0x90",
            "str r0, [sp, 0x1c]",
            "str r0, [sp, 0x10]",
            "str r3, [sp, 0x18]",
            "str ip, [sp, 0x14]",
            "ldr r0, [sp, 0x14]",
            "bl _raw_spin_lock_irqsave",
            "ldr r2, [sp, 0x10]",
            "mov r1, r0",
            "ldr r0, [sp, 0x14]",
            "ldr r4, [r2], 4",
            "str r2, [sp, 0x10]",
            "bl _raw_spin_unlock_irqrestore",
            "cmp r4, 0",
            "beq 0x80046c4",
            "cmp fp, 0",
            "addne sl, r4, 8",
            "bne 0x8004678",
            "ldr r3, [sp, 8]",
            "add sl, r4, 8",
            "mov r0, sb",
            "mov r1, sl",
            "mov r2, 6",
            "cmp r3, 0",
            "beq 0x8004664",
            "ldr ip, [r4, 4]",
            "ldr r3, [r7, 0xa0]",
            "rsb r3, ip, r3",
            "movw ip, 0xea60",
            "cmp r3, ip",
            "bhi 0x8004678",
            "cmp sb, 0",
            "beq 0x80047f0",
            "bl memcmp",
            "cmp r0, 0",
            "bne 0x80047f0",
            "ldrb r2, [r4, 0xf]",
            "add r1, r4, 0x10",
            "mov r0, r5",
            "ldrb r6, [r4, 0xe]",
            "bl memcpy",
            "mov r1, sl",
            "mov r2, 6",
            "mov r0, r8",
            "bl memcpy",
            "ldr r4, [r4]",
            "mov ip, 1",
            "mov r0, r7",
            "ldr r1, [sp, 0xc]",
            "mov r2, r8",
            "mov r3, r5",
            "stm sp, {r6, ip}",
            "bl fcn.08002b54",
            "cmp r4, 0",
            "bne 0x8004624",
            "ldr r2, [sp, 0x10]",
            "ldr r3, [sp, 0x18]",
            "cmp r2, r3",
            "bne 0x80045fc",
            "ldr ip, [sp, 0x1c]",
            "ldr r4, [ip, 0x80]",
            "cmp r4, 0",
            "beq 0x80047e8",
            "str sb, [sp, 0x10]",
            "mov r5, 0",
            "mov sl, 1",
            "ldr sb, [sp, 8]",
            "b 0x800474c",
            "cmp sb, 0",
            "beq 0x8004718",
            "ldr r2, [r7, 0xa0]",
            "ldr r3, [r4, 4]",
            "rsb r3, r3, r2",
            "cmp r3, 0xc8",
            "movhi r8, 1",
            "bhi 0x8004778",
            "ldr r2, [sp, 0x10]",
            "cmp r2, 0",
            "beq 0x800473c",
            "mov r0, r2",
            "add r1, r4, 8",
            "mov r2, 6",
            "bl memcmp",
            "cmp r0, 0",
            "beq 0x8004754",
            "mov r5, r4",
            "ldr r4, [r4]",
            "cmp r4, 0",
            "beq 0x80047e8",
            "cmp fp, 0",
            "beq 0x80046f8",
            "cmp sb, 0",
            "moveq r8, sb",
            "beq 0x8004778",
            "ldr r8, [r7, 0xa0]",
            "ldr r3, [r4, 4]",
            "rsb r8, r3, r8",
            "cmp r8, 0xc8",
            "movls r8, 0",
            "movhi r8, 1",
            "cmp r5, 0",
            "add r6, r4, 0x10",
            "ldreq r3, [r4]",
            "mov r0, r7",
            "ldrne r3, [r4]",
            "mov r2, r6",
            "ldreq ip, [sp, 0x1c]",
            "ldr r1, [sp, 0xc]",
            "strne r3, [r5]",
            "streq r3, [ip, 0x80]",
            "mov r3, 6",
            "str sl, [sp]",
            "bl fcn.08002cb4",
            "cmp r8, 0",
            "beq 0x80047bc",
            "cmp r0, 0",
            "beq 0x80047f8",
            "ldrb r2, [r4, 0xf]",
            "mov r1, r4",
            "ldr r0, [r7]",
            "add r2, r2, 0x14",
            "bl osl_mfree",
            "cmp r5, 0",
            "ldreq r2, [sp, 0x1c]",
            "ldrne r4, [r5]",
            "ldreq r4, [r2, 0x80]",
            "cmp r4, 0",
            "bne 0x800474c",
            "add sp, sp, 0x3c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r4, [r4]",
            "b 0x800461c",
            "ldrb ip, [r4, 0xe]",
            "mov r0, r7",
            "ldr r1, [sp, 0xc]",
            "add r2, r4, 8",
            "mov r3, r6",
            "str sl, [sp, 4]",
            "str ip, [sp]",
            "bl fcn.08002d74",
            "b 0x80047bc"
        ]
    },
    "fcn.08002b54": {
        "function_address": "0x08002b54",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x14",
            "ldrb r4, [sp, 0x38]",
            "mov fp, r0",
            "mov r7, r3",
            "str r2, [sp, 8]",
            "ldrb r2, [sp, 0x3c]",
            "cmp r4, 4",
            "str r2, [sp, 4]",
            "bne 0x8002c58",
            "ldrb r3, [r3, 3]",
            "mov r8, r4",
            "and r3, r3, 0x1f",
            "str r3, [sp, 0xc]",
            "mov r0, fp",
            "bl dhd_get_ifp_arp_table_handle",
            "add sb, r0, 0x90",
            "mov sl, r0",
            "mov r0, sb",
            "bl _raw_spin_lock_irqsave",
            "ldr r3, [sp, 4]",
            "mov r1, r0",
            "mov r0, sb",
            "cmp r3, 0",
            "ldrne r2, [sp, 0xc]",
            "ldreq r5, [sl, 0x80]",
            "ldrne r5, [sl, r2, lsl 2]",
            "bl _raw_spin_unlock_irqrestore",
            "cmp r5, 0",
            "beq 0x8002c78",
            "mov r6, 0",
            "b 0x8002be8",
            "ldr r0, [r5]",
            "mov r6, r5",
            "cmp r0, 0",
            "mov r5, r0",
            "beq 0x8002c50",
            "ldrb r3, [r5, 0xe]",
            "cmp r3, r4",
            "bne 0x8002bd4",
            "add r0, r5, 0x10",
            "mov r1, r7",
            "mov r2, r8",
            "bl memcmp",
            "cmp r0, 0",
            "bne 0x8002bd4",
            "add r0, r5, 8",
            "ldr r1, [sp, 8]",
            "mov r2, 6",
            "bl memcmp",
            "cmp r0, 0",
            "bne 0x8002bd4",
            "cmp r6, 0",
            "beq 0x8002c80",
            "ldr r3, [r5]",
            "str r3, [r6]",
            "cmp r5, 0",
            "beq 0x8002c78",
            "ldr r0, [fp]",
            "mov r1, r5",
            "add r2, r8, 0x14",
            "bl osl_mfree",
            "mov r0, 0",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "cmp r4, 6",
            "mvnne r0, 0",
            "bne 0x8002c50",
            "ldrb r3, [r3, 0xf]",
            "mov r8, 0x10",
            "and r3, r3, 0x1f",
            "str r3, [sp, 0xc]",
            "b 0x8002b8c",
            "mov r0, r5",
            "b 0x8002c50",
            "mov r0, sb",
            "bl _raw_spin_lock_irqsave",
            "ldr r3, [sp, 4]",
            "mov r1, r0",
            "mov r0, sb",
            "cmp r3, 0",
            "ldrne r3, [r5]",
            "ldrne r2, [sp, 0xc]",
            "ldreq r3, [r5]",
            "strne r3, [sl, r2, lsl 2]",
            "streq r3, [sl, 0x80]",
            "bl _raw_spin_unlock_irqrestore",
            "b 0x8002c34"
        ]
    },
    "fcn.08002cb4": {
        "function_address": "0x08002cb4",
        "instructions": [
            "cmp r3, 4",
            "push {r3, r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r5, r3",
            "mov r8, r0",
            "mov r6, r2",
            "ldrb r4, [sp, 0x28]",
            "bne 0x8002d58",
            "ldrb sl, [r2, 3]",
            "mov r7, r3",
            "and sl, sl, 0x1f",
            "mov r0, r8",
            "bl dhd_get_ifp_arp_table_handle",
            "add sb, r0, 0x90",
            "mov fp, r0",
            "mov r0, sb",
            "bl _raw_spin_lock_irqsave",
            "cmp r4, 0",
            "mov r1, r0",
            "ldrne r4, [fp, sl, lsl 2]",
            "mov r0, sb",
            "ldreq r4, [fp, 0x80]",
            "bl _raw_spin_unlock_irqrestore",
            "cmp r4, 0",
            "bne 0x8002d24",
            "b 0x8002d50",
            "ldr r4, [r4]",
            "cmp r4, 0",
            "beq 0x8002d50",
            "ldrb r3, [r4, 0xe]",
            "cmp r3, r5",
            "bne 0x8002d18",
            "add r0, r4, 0x10",
            "mov r1, r6",
            "mov r2, r7",
            "bl memcmp",
            "cmp r0, 0",
            "bne 0x8002d18",
            "ldr r3, [r8, 0xa0]",
            "str r3, [r4, 4]",
            "mov r0, r4",
            "pop {r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "cmp r3, 6",
            "movne r4, 0",
            "bne 0x8002d50",
            "ldrb sl, [r2, 0xf]",
            "mov r7, 0x10",
            "and sl, sl, 0x1f",
            "b 0x8002cdc"
        ]
    },
    "fcn.08002d74": {
        "function_address": "0x08002d74",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x14",
            "ldrb r5, [sp, 0x38]",
            "mov r4, r0",
            "mov r8, r2",
            "mov r7, r3",
            "str r1, [sp, 4]",
            "ldrb sb, [sp, 0x3c]",
            "uxtb fp, r5",
            "cmp fp, 4",
            "bne 0x8002e78",
            "ldrb r1, [r3, 1]",
            "ldrb r2, [r3, 2]",
            "ldrb r3, [r3]",
            "ldrb sl, [r7, 3]",
            "orr r0, r1, r2",
            "orr r0, r3, r0",
            "orrs r0, sl, r0",
            "beq 0x8002e80",
            "and r2, r1, r2",
            "and r3, r3, r2",
            "and r3, sl, r3",
            "cmp r3, 0xff",
            "beq 0x8002e80",
            "and sl, sl, 0x1f",
            "mov r1, 0x18",
            "str fp, [sp, 8]",
            "str fp, [sp, 0xc]",
            "ldr r0, [r4]",
            "bl osl_mallocz",
            "subs r6, r0, 0",
            "beq 0x8002f24",
            "mov r1, r8",
            "mov r2, 6",
            "add r0, r6, 8",
            "bl memcpy",
            "ldr r3, [r4, 0xa0]",
            "add r0, r6, 0x10",
            "strb r5, [r6, 0xe]",
            "ldr r1, [sp, 0xc]",
            "str r3, [r6, 4]",
            "ldr r2, [sp, 8]",
            "strb r1, [r6, 0xf]",
            "mov r1, r7",
            "bl memcpy",
            "ldr r1, [sp, 4]",
            "mov r0, r4",
            "bl dhd_get_ifp_arp_table_handle",
            "add r5, r0, 0x90",
            "mov r4, r0",
            "mov r0, r5",
            "bl _raw_spin_lock_irqsave",
            "cmp sb, 0",
            "mov r1, r0",
            "ldrne r3, [r4, sl, lsl 2]",
            "mov r0, r5",
            "ldreq r3, [r4, 0x80]",
            "strne r3, [r6]",
            "streq r3, [r6]",
            "strne r6, [r4, sl, lsl 2]",
            "streq r6, [r4, 0x80]",
            "bl _raw_spin_unlock_irqrestore",
            "mov r0, 0",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "cmp fp, 6",
            "beq 0x8002e88",
            "mvn r0, 0",
            "b 0x8002e70",
            "ldrb r2, [r3, 2]",
            "ldrb r0, [r3, 1]",
            "ldrb r3, [r3]",
            "ldrb r1, [r7, 3]",
            "orr r0, r0, r2",
            "ldrb r2, [r7, 4]",
            "orr r0, r0, r3",
            "ldrb r3, [r7, 5]",
            "orr r0, r0, r1",
            "ldrb r1, [r7, 6]",
            "orr r0, r0, r2",
            "ldrb r2, [r7, 7]",
            "orr r0, r0, r3",
            "ldrb r3, [r7, 8]",
            "orr r0, r0, r1",
            "ldrb r1, [r7, 9]",
            "orr r0, r0, r2",
            "ldrb r2, [r7, 0xa]",
            "orr r0, r0, r3",
            "ldrb r3, [r7, 0xb]",
            "orr r0, r0, r1",
            "ldrb r1, [r7, 0xc]",
            "orr r0, r0, r2",
            "ldrb r2, [r7, 0xd]",
            "orr r0, r0, r3",
            "ldrb r3, [r7, 0xe]",
            "ldrb sl, [r7, 0xf]",
            "orr r1, r0, r1",
            "orr r2, r1, r2",
            "orr r3, r2, r3",
            "orrs r3, sl, r3",
            "beq 0x8002e80",
            "mov r1, 0x10",
            "mov r3, 0x10",
            "str r1, [sp, 8]",
            "and sl, sl, 0x1f",
            "mov r1, 0x24",
            "str r3, [sp, 0xc]",
            "b 0x8002de4",
            "ldr r3, [0x08002f4c]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "mvneq r0, 0x1a",
            "beq 0x8002e70",
            "ldr r0, [0x08002f50]",
            "mov r1, fp",
            "bl printk",
            "mvn r0, 0x1a",
            "b 0x8002e70"
        ]
    },
    "sym.ai_coreaddrspaceX": {
        "function_address": "0x08015cf0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r5, r1",
            "ldr r1, [r0, 0x90]",
            "sub sp, sp, 0x3c",
            "mov r4, r0",
            "str r2, [sp, 0x1c]",
            "cmp r1, 0",
            "str r3, [sp, 0x18]",
            "ldr r8, [r0, 0x9c]",
            "beq 0x8015d48",
            "ldr r3, [r8, 0x80]",
            "cmp r3, 0x800",
            "addne r2, r8, 0x80",
            "movne r3, 0",
            "bne 0x8015d3c",
            "b 0x8015d5c",
            "ldr r0, [r2, 4]!",
            "cmp r0, 0x800",
            "beq 0x8015d60",
            "add r3, r3, 1",
            "cmp r3, r1",
            "blo 0x8015d30",
            "ldr r1, [sp, 0x18]",
            "mov r3, 0",
            "str r3, [r1]",
            "add sp, sp, 0x3c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "mov r3, 0",
            "ldr r1, [r8, r3, lsl 2]",
            "cmp r1, 0",
            "beq 0x8015d48",
            "mov r3, 4",
            "ldr r0, [r4, 0x58]",
            "add r1, r1, 0xfc",
            "add r2, sp, 0x20",
            "bl osl_pcie_rreg",
            "mov r1, 0x1000",
            "mov r2, 0",
            "ldr r0, [sp, 0x20]",
            "add r6, sp, 0x38",
            "bl __arm_ioremap",
            "ldr r3, [r4, 0x8c]",
            "mov ip, r0",
            "str r0, [r6, -4]!",
            "add r7, r0, 0xe00",
            "cmp ip, r7",
            "mov r0, r4",
            "add r2, r3, 0x140",
            "add r3, r3, 0x120",
            "ldr sb, [r8, r2, lsl 2]",
            "mov r2, 0xe",
            "ldr r8, [r8, r3, lsl 2]",
            "mov r3, 0",
            "ubfx r1, sb, 9, 5",
            "ubfx sl, sb, 4, 5",
            "str r1, [sp, 0x14]",
            "mov r1, r6",
            "bhs 0x8015e00",
            "bl fcn.08015520",
            "cmp r0, r8",
            "beq 0x8015f08",
            "ldr ip, [sp, 0x34]",
            "cmp ip, r7",
            "mov r1, r6",
            "mov r2, 0xe",
            "mov r3, 0",
            "mov r0, r4",
            "blo 0x8015dd8",
            "cmp sl, 0",
            "movne r7, 0",
            "beq 0x8015e2c",
            "mov r2, 1",
            "mov r0, r4",
            "add r7, r7, r2",
            "mov r1, r6",
            "mov r3, r2",
            "bl fcn.08015520",
            "cmp sl, r7",
            "bhi 0x8015e0c",
            "mov r2, 0",
            "add r8, sp, 0x30",
            "mov r3, r2",
            "add sl, sp, 0x2c",
            "add sb, sp, 0x28",
            "add fp, sp, 0x24",
            "mov r0, r4",
            "mov r1, r6",
            "stm sp, {r8, sl}",
            "str sb, [sp, 8]",
            "str fp, [sp, 0xc]",
            "bl fcn.080155cc",
            "subs r2, r0, 0",
            "beq 0x8015f48",
            "mov r2, 0",
            "mov r0, r4",
            "mov r1, r6",
            "mov r3, r2",
            "stm sp, {r8, sl}",
            "str sb, [sp, 8]",
            "str fp, [sp, 0xc]",
            "bl fcn.080155cc",
            "cmp r0, 0",
            "bne 0x8015e64",
            "ldr r2, [sp, 0x14]",
            "cmp r2, 1",
            "movhi r2, 1",
            "movhi r7, r4",
            "strhi r2, [sp, 0x10]",
            "bls 0x8015d48",
            "mov r4, 0",
            "b 0x8015ebc",
            "cmp r5, 0",
            "add r4, r4, 1",
            "sub r5, r5, 1",
            "beq 0x8015f2c",
            "mov r0, r7",
            "mov r1, r6",
            "ldr r2, [sp, 0x10]",
            "mov r3, 0",
            "stm sp, {r8, sl}",
            "str sb, [sp, 8]",
            "str fp, [sp, 0xc]",
            "bl fcn.080155cc",
            "cmp r0, 0",
            "bne 0x8015eac",
            "cmp r4, 0",
            "beq 0x8015d48",
            "ldr r3, [sp, 0x10]",
            "ldr r1, [sp, 0x14]",
            "add r3, r3, 1",
            "cmp r1, r3",
            "str r3, [sp, 0x10]",
            "bhi 0x8015ea4",
            "b 0x8015d48",
            "mov r2, 0",
            "mov r0, r4",
            "mov r1, r6",
            "mov r3, r2",
            "bl fcn.08015520",
            "cmp r0, sb",
            "beq 0x8015e00",
            "ldr ip, [sp, 0x34]",
            "b 0x8015de8",
            "ldr r2, [sp, 0x30]",
            "ldr r1, [sp, 0x1c]",
            "ldr r3, [sp, 0x28]",
            "str r2, [r1]",
            "ldr r2, [sp, 0x18]",
            "str r3, [r2]",
            "b 0x8015d54",
            "mov r0, r4",
            "mov r1, r6",
            "mov r3, 0x40",
            "stm sp, {r8, sl}",
            "str sb, [sp, 8]",
            "str fp, [sp, 0xc]",
            "bl fcn.080155cc",
            "b 0x8015e64"
        ]
    },
    "sym.dhd_bus_download_firmware": {
        "function_address": "0x08011d5c",
        "instructions": [
            "cmp r2, 0",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r0",
            "sub sp, sp, 0x2c",
            "moveq r7, 1",
            "str r2, [r0, 0x54]",
            "str r3, [r0, 0x58]",
            "beq 0x8011d88",
            "ldrb r7, [r2]",
            "rsbs r7, r7, 1",
            "movlo r7, 0",
            "ldr r3, [r4]",
            "mov r1, 0x1800",
            "ldr r0, [r3]",
            "bl osl_malloc",
            "cmp r0, 0",
            "mov r6, r0",
            "str r0, [r4, 0x5c]",
            "beq 0x80123dc",
            "mov r3, 0",
            "ldr r0, [0x08012718]",
            "strb r3, [r6]",
            "ldr r3, [r4, 0x5c]",
            "str r3, [sp, 0x24]",
            "bl strlen",
            "ldr r6, [sp, 0x24]",
            "mov r5, r0",
            "ldr r0, [r4]",
            "bl dhd_get_instance",
            "add r1, r5, 1",
            "mov r3, r0",
            "ldr r2, [0x0801271c]",
            "mov r0, r6",
            "bl snprintf",
            "ldr r2, [sp, 0x24]",
            "add r3, r0, 1",
            "mov r5, r0",
            "ldr r1, [0x08012720]",
            "ldr r0, [r4, 0x20]",
            "add r3, r2, r3",
            "str r3, [sp, 0x24]",
            "bl si_getdevpathvar",
            "subs r6, r0, 0",
            "beq 0x80121d8",
            "ldr r0, [0x08012724]",
            "bl strlen",
            "ldr ip, [sp, 0x24]",
            "add r1, r0, 1",
            "ldr r2, [0x08012728]",
            "mov r3, r6",
            "mov r0, ip",
            "rsb r5, r5, 0x17c0",
            "bl snprintf",
            "ldr ip, [sp, 0x24]",
            "mov r1, r0",
            "add r0, r0, 1",
            "add r2, sp, 0x28",
            "add r3, r5, 0x3e",
            "add ip, ip, r0",
            "rsb r3, r1, r3",
            "ldr r0, [r4, 0x20]",
            "str ip, [r2, -4]!",
            "ldr r1, [r4, 0x1a0]",
            "bl dbushost_initvars_flash",
            "cmp r0, 0",
            "beq 0x8011e74",
            "ldr r6, [0x0801272c]",
            "ldr r3, [r6]",
            "tst r3, 1",
            "bne 0x8012314",
            "ldr r3, [sp, 0x24]",
            "mov r2, 6",
            "ldr r5, [r4, 0x5c]",
            "ldr r1, [0x08012730]",
            "mov r0, r3",
            "rsb r5, r5, r3",
            "add r5, r5, 6",
            "bl memcpy",
            "mov r0, r4",
            "str r5, [r4, 0x60]",
            "mov r1, 1",
            "bl fcn.0800fd5c",
            "cmp r0, 0",
            "bne 0x8011f10",
            "ldr r5, [r4, 0x54]",
            "cmp r5, 0",
            "beq 0x8011ec4",
            "ldrb r3, [r5]",
            "cmp r3, 0",
            "bne 0x8011f34",
            "cmp r7, 0",
            "bne 0x8012130",
            "ldr r3, [0x0801272c]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "bne 0x80124d0",
            "mvn r5, 0",
            "ldr r1, [r4, 0x5c]",
            "ldr r3, [r4]",
            "cmp r1, 0",
            "beq 0x8011f04",
            "ldr r0, [r3]",
            "mov r2, 0x1800",
            "bl osl_mfree",
            "mov r3, 0",
            "str r3, [r4, 0x5c]",
            "mov r0, r5",
            "add sp, sp, 0x2c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r3, [0x0801272c]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "beq 0x8011edc",
            "ldr r1, [0x08012734]",
            "mvn r5, 0",
            "ldr r0, [0x08012738]",
            "bl printk",
            "b 0x8011ee0",
            "ldr r6, [0x0801272c]",
            "ldr r3, [r6]",
            "tst r3, 1",
            "bne 0x801250c",
            "mov r0, r5",
            "bl dhd_os_open_image",
            "subs sl, r0, 0",
            "beq 0x8012118",
            "ldr r3, [r4]",
            "mov r1, 0x820",
            "ldr r0, [r3]",
            "bl osl_malloc",
            "cmp r0, 0",
            "str r0, [sp, 0x10]",
            "beq 0x80124b4",
            "ldr r2, [sp, 0x10]",
            "mov r5, 0",
            "mvn sb, 0",
            "add fp, r4, 0x19c",
            "ands r3, r2, 0x1f",
            "rsbne r3, r3, 0x20",
            "ldreq r7, [sp, 0x10]",
            "addne r7, r2, r3",
            "b 0x8011fdc",
            "blt 0x801241c",
            "ldr r0, [r4, 0x20]",
            "bl si_setcore",
            "cmp r0, 0",
            "mov r1, fp",
            "mov r2, 1",
            "mov r0, r4",
            "beq 0x8011fc4",
            "cmp r5, 0",
            "ldreq r5, [r4, 0x16c]",
            "ldreq r3, [r7]",
            "streq r3, [r4, 0x168]",
            "mov r3, r5",
            "stm sp, {r7, r8}",
            "bl fcn.0800f2e4",
            "subs sb, r0, 0",
            "bne 0x8012444",
            "add r5, r5, 0x800",
            "mov r1, 0x800",
            "mov r2, sl",
            "mov r0, r7",
            "bl dhd_os_get_image_block",
            "subs r8, r0, 0",
            "movw r1, 0x83e",
            "mov r2, 0",
            "bne 0x8011f94",
            "ldr r3, [r4]",
            "mov r2, 0x820",
            "ldr r1, [sp, 0x10]",
            "ldr r0, [r3]",
            "bl osl_mfree",
            "mov r0, sl",
            "bl dhd_os_close_image",
            "cmp sb, 0",
            "bne 0x8012118",
            "ldr r0, [r4, 0x58]",
            "cmp r0, 0",
            "beq 0x8012324",
            "ldrb r3, [r0]",
            "cmp r3, 0",
            "beq 0x8012324",
            "bl dhd_os_open_image",
            "subs r6, r0, 0",
            "beq 0x801247c",
            "mov r7, 1",
            "ldr r3, [r4]",
            "mov r1, 0x1800",
            "ldr r0, [r3]",
            "bl osl_malloc",
            "subs r8, r0, 0",
            "beq 0x801246c",
            "cmp r7, 0",
            "beq 0x801239c",
            "mov r1, 0x1800",
            "mov r2, r6",
            "bl dhd_os_get_image_block",
            "mov r5, r0",
            "sub r2, r5, 1",
            "movw r3, 0x17fe",
            "cmp r2, r3",
            "bhi 0x8012370",
            "cmp r7, 0",
            "mov r3, 0",
            "strb r3, [r8, r5]",
            "bne 0x80124a0",
            "tst r5, 3",
            "mov r3, 0",
            "bicne r5, r5, 3",
            "addne r5, r5, 4",
            "cmp r5, 0",
            "strb r3, [r8, r5]",
            "mvneq r5, 0",
            "bne 0x8012484",
            "ldr r3, [0x0801272c]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "bne 0x80124f8",
            "ldr r3, [r4]",
            "mov r1, r8",
            "mov r2, 0x1800",
            "ldr r0, [r3]",
            "bl osl_mfree",
            "cmp r6, 0",
            "beq 0x80120ec",
            "mov r0, r6",
            "bl dhd_os_close_image",
            "cmp r5, 0",
            "beq 0x8012338",
            "ldr r3, [0x0801272c]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "beq 0x8011edc",
            "ldr r1, [0x08012734]",
            "mvn r5, 0",
            "ldr r0, [0x0801273c]",
            "bl printk",
            "b 0x8011ee0",
            "ldr r3, [r6]",
            "tst r3, 1",
            "beq 0x8012130",
            "ldr r1, [0x08012734]",
            "ldr r0, [0x08012740]",
            "bl printk",
            "ldr r3, [r4, 0x20]",
            "mov r2, 0",
            "ldr r7, [0x08012744]",
            "str r2, [sp, 0x24]",
            "ldr r2, [r3, 0x3c]",
            "mov r1, r7",
            "b 0x8012158",
            "cmn r0, 1",
            "add r1, r1, 0x10",
            "beq 0x80123b0",
            "ldm r1, {r0, ip}",
            "ldr r5, [r1, 8]",
            "cmp r2, r0",
            "bne 0x801214c",
            "ldr r6, [r3, 0x40]",
            "cmp ip, r6",
            "bne 0x801214c",
            "ldr ip, [r3, 0x44]",
            "cmp r5, ip",
            "bne 0x801214c",
            "ldr r1, [r1, 0xc]",
            "cmn r1, 1",
            "beq 0x80123b0",
            "add r1, r1, r1, lsl 2",
            "add r3, r7, r1, lsl 2",
            "ldr r6, [r3, 0x20]",
            "ldr r2, [r3, 0x24]",
            "ldr r7, [r3, 0x28]",
            "cmp r6, 0",
            "ldr r5, [r3, 0x2c]",
            "ldr r8, [r3, 0x30]",
            "str r2, [sp, 0x24]",
            "bne 0x8012204",
            "ldr r6, [0x0801272c]",
            "ldr r3, [r6]",
            "tst r3, 1",
            "beq 0x8011edc",
            "ldr r1, [0x08012734]",
            "mvn r5, 0",
            "ldr r0, [0x08012748]",
            "bl printk",
            "b 0x8011ee0",
            "ldr r0, [0x08012720]",
            "bl nvram_get",
            "mov r6, r0",
            "ldr r0, [0x08012724]",
            "bl strlen",
            "ldr r3, [0x0801274c]",
            "cmp r6, 0",
            "add r1, r0, 1",
            "ldr ip, [sp, 0x24]",
            "moveq r6, r3",
            "b 0x8011e1c",
            "cmp r2, 0",
            "beq 0x80121b4",
            "ldr r3, [r4, 0x3c]",
            "cmp r2, r3",
            "bhi 0x80121b4",
            "cmp r7, 0",
            "beq 0x80121b4",
            "cmp r5, 0",
            "beq 0x80121b4",
            "cmp r8, 0",
            "beq 0x80121b4",
            "ldr r3, [r4]",
            "mov r1, 0x820",
            "ldr r0, [r3]",
            "bl osl_malloc",
            "cmp r0, 0",
            "str r0, [sp, 0x18]",
            "beq 0x8012640",
            "ldr ip, [sp, 0x18]",
            "mov fp, 0",
            "mov sl, r7",
            "mov sb, r5",
            "mov r7, r6",
            "mov r6, fp",
            "ands r3, ip, 0x1f",
            "rsbne r3, r3, 0x20",
            "ldreq r2, [sp, 0x18]",
            "addne r3, ip, r3",
            "strne r3, [sp, 0x14]",
            "add r3, r4, 0x19c",
            "streq r2, [sp, 0x14]",
            "str r3, [sp, 0x1c]",
            "ldr r3, [sp, 0x24]",
            "add r1, r7, fp",
            "ldr r0, [sp, 0x14]",
            "cmp fp, r3",
            "rsb r5, fp, r3",
            "bhs 0x8012588",
            "movw ip, 0x7ff",
            "cmp r5, ip",
            "movhi r5, 0x800",
            "mov r2, r5",
            "add fp, fp, r5",
            "bl memcpy",
            "movw r1, 0x83e",
            "mov r2, 0",
            "ldr r0, [r4, 0x20]",
            "bl si_setcore",
            "cmp r0, 0",
            "ldr r1, [sp, 0x1c]",
            "mov r2, 1",
            "mov r0, r4",
            "beq 0x80122ec",
            "cmp r6, 0",
            "ldreq ip, [sp, 0x14]",
            "ldreq r6, [r4, 0x16c]",
            "ldreq r3, [ip]",
            "streq r3, [r4, 0x168]",
            "ldr ip, [sp, 0x14]",
            "mov r3, r6",
            "str r5, [sp, 4]",
            "str ip, [sp]",
            "bl fcn.0800f2e4",
            "cmp r0, 0",
            "str r0, [sp, 0x10]",
            "bne 0x8012538",
            "add r6, r6, 0x800",
            "b 0x8012284",
            "ldr r1, [0x08012750]",
            "ldr r0, [0x08012754]",
            "bl printk",
            "b 0x8011e74",
            "ldr r3, [r4, 0x5c]",
            "cmp r3, 0",
            "movne r7, 0",
            "movne r6, r7",
            "bne 0x8012048",
            "mov r0, r4",
            "mov r1, 0",
            "bl fcn.0800fd5c",
            "subs r5, r0, 0",
            "beq 0x8011ee0",
            "ldr r3, [0x0801272c]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "beq 0x8011edc",
            "ldr r1, [0x08012734]",
            "mvn r5, 0",
            "ldr r0, [0x08012758]",
            "bl printk",
            "b 0x8011ee0",
            "ldr r3, [0x0801272c]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "mvneq r5, 0",
            "beq 0x80120c8",
            "mov r2, r5",
            "ldr r1, [0x0801275c]",
            "ldr r0, [0x08012760]",
            "mvn r5, 0",
            "bl printk",
            "b 0x80120c8",
            "ldr r5, [r4, 0x60]",
            "ldr r1, [r4, 0x5c]",
            "mov r2, r5",
            "bl memcpy",
            "b 0x8012078",
            "ldr r6, [0x0801272c]",
            "ldr r1, [r6]",
            "tst r1, 1",
            "beq 0x80121b8",
            "ldr ip, [r3, 0x44]",
            "ldr r1, [0x08012764]",
            "ldr r0, [0x08012768]",
            "str ip, [sp]",
            "ldr r3, [r3, 0x40]",
            "bl printk",
            "b 0x80121b8",
            "ldr r4, [0x0801272c]",
            "ldr r3, [r4]",
            "ands r5, r3, 1",
            "beq 0x8011f04",
            "ldr r0, [0x0801276c]",
            "ldr r1, [0x08012750]",
            "bl printk",
            "ldr r3, [r4]",
            "ands r3, r3, 1",
            "moveq r5, r3",
            "beq 0x8011f04",
            "ldr r1, [0x08012734]",
            "mov r5, r6",
            "ldr r0, [0x08012770]",
            "bl printk",
            "b 0x8011f04",
            "ldr r3, [r6]",
            "tst r3, 1",
            "mvneq sb, 0",
            "beq 0x8011ffc",
            "mov r2, r8",
            "ldr r1, [0x08012774]",
            "ldr r0, [0x08012778]",
            "mvn sb, 0",
            "bl printk",
            "b 0x8011ffc",
            "ldr r3, [r6]",
            "tst r3, 1",
            "beq 0x8011ffc",
            "ldr r1, [0x08012774]",
            "mov r2, sb",
            "mov r3, 0x800",
            "ldr r0, [0x0801277c]",
            "str r5, [sp]",
            "bl printk",
            "b 0x8011ffc",
            "ldr r3, [0x0801272c]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "bne 0x8012520",
            "mvn r5, 0",
            "b 0x80120dc",
            "add r2, r5, 1",
            "mov r0, r4",
            "mov r1, r8",
            "bl fcn.0800f1d0",
            "subs r5, r0, 0",
            "beq 0x80120c8",
            "b 0x80120b8",
            "mov r1, r5",
            "mov r0, r8",
            "bl process_nvram_vars",
            "mov r5, r0",
            "b 0x8012098",
            "ldr r3, [r6]",
            "tst r3, 1",
            "bne 0x80124e4",
            "cmp sl, 0",
            "beq 0x8012118",
            "mvn sb, 0",
            "b 0x8012010",
            "ldr r1, [0x08012734]",
            "mvn r5, 0",
            "ldr r0, [0x08012780]",
            "bl printk",
            "b 0x8011ee0",
            "ldr r1, [0x08012774]",
            "mov r2, 0x800",
            "ldr r0, [0x08012784]",
            "bl printk",
            "b 0x80124c0",
            "ldr r1, [0x0801275c]",
            "mov r2, r5",
            "ldr r0, [0x08012788]",
            "bl printk",
            "b 0x80120c8",
            "mov r2, r5",
            "ldr r1, [0x08012774]",
            "ldr r0, [0x0801278c]",
            "bl printk",
            "b 0x8011f44",
            "ldr r1, [0x0801275c]",
            "mov r2, 0x1800",
            "ldr r0, [0x08012784]",
            "mvn r5, 0",
            "bl printk",
            "b 0x80120dc",
            "mov ip, r6",
            "ldr r6, [0x0801272c]",
            "ldr r3, [r6]",
            "tst r3, 1",
            "beq 0x8012564",
            "mov r2, r0",
            "ldr r1, [0x08012790]",
            "mov r3, 0x800",
            "ldr r0, [0x0801277c]",
            "str ip, [sp]",
            "bl printk",
            "ldr r3, [r4]",
            "mov r2, 0x820",
            "ldr r1, [sp, 0x18]",
            "ldr r0, [r3]",
            "bl osl_mfree",
            "ldr r5, [sp, 0x10]",
            "cmp r5, 0",
            "beq 0x8012020",
            "b 0x80121b4",
            "mov r6, r7",
            "mov r7, sl",
            "mov sl, r3",
            "ldr r3, [r4]",
            "mov r1, sl",
            "mov r5, sb",
            "ldr r0, [r3]",
            "bl osl_malloc",
            "subs r2, r0, 0",
            "mvneq r3, 0",
            "str r2, [sp, 0x14]",
            "streq r3, [sp, 0x10]",
            "beq 0x8012564",
            "cmp sl, 0",
            "ldr fp, [r4, 0x16c]",
            "beq 0x80125d4",
            "mov r1, 0xaa",
            "mov r2, sl",
            "bl memset",
            "mov sb, 0",
            "mvn r3, 0",
            "add ip, r4, 0x19c",
            "str r3, [sp, 0x10]",
            "str ip, [sp, 0x1c]",
            "str r5, [sp, 0xc]",
            "ldr r2, [sp, 0x14]",
            "cmp sb, sl",
            "rsb ip, sb, sl",
            "mov r3, fp",
            "mov r0, r4",
            "ldr r1, [sp, 0x1c]",
            "add lr, r2, sb",
            "mov r2, 0",
            "bhs 0x80126a4",
            "movw r5, 0x7ff",
            "str lr, [sp]",
            "cmp ip, r5",
            "movhi ip, 0x800",
            "str ip, [sp, 4]",
            "add sb, sb, ip",
            "bl fcn.0800f2e4",
            "cmp r0, 0",
            "str r0, [sp, 0x10]",
            "bne 0x8012664",
            "add fp, fp, 0x800",
            "b 0x80125ec",
            "ldr r6, [0x0801272c]",
            "ldr r3, [r6]",
            "tst r3, 1",
            "beq 0x80121b8",
            "ldr r1, [0x08012790]",
            "mov r2, 0x800",
            "ldr r0, [0x08012784]",
            "bl printk",
            "b 0x80121b8",
            "ldr r6, [0x0801272c]",
            "ldr r3, [r6]",
            "tst r3, 1",
            "beq 0x801268c",
            "mov r2, r0",
            "ldr r1, [0x08012790]",
            "mov r3, 0x800",
            "ldr r0, [0x08012794]",
            "str fp, [sp]",
            "bl printk",
            "ldr r3, [r4]",
            "mov r2, sl",
            "ldr r1, [sp, 0x14]",
            "ldr r0, [r3]",
            "bl osl_mfree",
            "b 0x8012564",
            "mov r0, r6",
            "ldr r1, [sp, 0x14]",
            "mov r2, sl",
            "ldr r5, [sp, 0xc]",
            "bl memcmp",
            "cmp r0, 0",
            "beq 0x80126ec",
            "ldr r6, [0x0801272c]",
            "ldr r3, [r6]",
            "tst r3, 1",
            "beq 0x801268c",
            "ldr r1, [0x08012790]",
            "mov r2, r7",
            "mov r3, r5",
            "ldr r0, [0x08012798]",
            "str r8, [sp]",
            "bl printk",
            "b 0x801268c",
            "ldr r6, [0x0801272c]",
            "ldr r3, [r6]",
            "tst r3, 1",
            "beq 0x801268c",
            "ldr r1, [0x08012790]",
            "mov r2, r7",
            "mov r3, r5",
            "ldr r0, [0x0801279c]",
            "str r8, [sp]",
            "bl printk",
            "b 0x801268c"
        ]
    },
    "fcn.0800fd5c": {
        "function_address": "0x0800fd5c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r0",
            "ldr r0, [r0, 0x20]",
            "sub sp, sp, 0x1c",
            "mov r5, r1",
            "cmp r0, 0",
            "mvneq r7, 0",
            "beq 0x800fe90",
            "cmp r1, 0",
            "bne 0x800fe9c",
            "movw r1, 0x83e",
            "mov r2, r5",
            "bl si_setcore",
            "subs r6, r0, 0",
            "beq 0x8010174",
            "ldr r0, [r4, 0x20]",
            "movw r3, 0xaa52",
            "ldr r2, [r0, 0x3c]",
            "cmp r2, r3",
            "beq 0x800ff18",
            "ldr r6, [r4, 0x28]",
            "ldr r3, [r4, 0x16c]",
            "ldr r7, [r4, 0x3c]",
            "ldr r8, [r4, 0x24]",
            "cmp r6, 0",
            "addne r6, r6, 3",
            "bicne r6, r6, 3",
            "add r7, r3, r7",
            "cmp r8, 0",
            "sub r7, r7, 4",
            "rsb r7, r6, r7",
            "bne 0x8010044",
            "ldr r5, [0x08010400]",
            "add sl, r4, 0x19c",
            "ldrb r2, [r4, 0x165]",
            "cmp r2, 0",
            "ldr r2, [r5]",
            "ldrne r1, [r4, 0x3c]",
            "ldreq r1, [r4, 0x40]",
            "tst r2, 4",
            "add r3, r1, r3",
            "bne 0x8010358",
            "movw r1, 0xfffc",
            "cmp r8, 0",
            "movt r1, 0xffff",
            "movne r2, 0",
            "rsb r1, r7, r1",
            "strne r2, [sp, 0x14]",
            "add r1, r1, r3",
            "strne r2, [r4, 0x1a4]",
            "lsreq r0, r1, 2",
            "uxtheq ip, r0",
            "mvneq r2, r0",
            "orreq r2, ip, r2, lsl 16",
            "streq r2, [sp, 0x14]",
            "streq r2, [r4, 0x1a4]",
            "ldr r2, [r5]",
            "tst r2, 4",
            "bne 0x8010398",
            "add ip, sp, 0x14",
            "mov r6, 4",
            "mov r0, r4",
            "mov r1, sl",
            "mov r2, 1",
            "sub r3, r3, 4",
            "str ip, [sp]",
            "str r6, [sp, 4]",
            "bl fcn.0800f2e4",
            "subs r7, r0, 0",
            "beq 0x800ff50",
            "ldr r3, [r5]",
            "tst r3, 1",
            "bne 0x8010348",
            "ldr r0, [r4, 0x20]",
            "movw r1, 0x83c",
            "mov r2, 0",
            "bl si_setcore",
            "mov r0, r7",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "mov r3, 1",
            "movw r1, 0x83e",
            "strb r3, [r4, 0x164]",
            "mov r2, 0",
            "bl si_setcore",
            "subs r5, r0, 0",
            "beq 0x80101c0",
            "mov r1, 0x20",
            "ldr r0, [r4, 0x20]",
            "mov r2, r1",
            "bl si_core_reset",
            "ldr r3, [r4, 0x20]",
            "ldr r2, [r3, 0x3c]",
            "movw r3, 0xaa52",
            "cmp r2, r3",
            "beq 0x800ffb4",
            "ldr lr, [r4, 0x16c]",
            "add ip, sp, 0x18",
            "ldr r3, [r4, 0x3c]",
            "mov r7, 0",
            "str r7, [ip, -4]!",
            "mov r0, r4",
            "str ip, [sp]",
            "add r1, r4, 0x19c",
            "add r3, lr, r3",
            "mov ip, 4",
            "mov r2, 1",
            "sub r3, r3, 4",
            "str ip, [sp, 4]",
            "bl fcn.0800f2e4",
            "b 0x800fe80",
            "movw r1, 0x80e",
            "mov r2, r5",
            "bl si_setcore",
            "cmp r0, 0",
            "beq 0x801002c",
            "ldr r0, [r4, 0x20]",
            "mov r1, r5",
            "mov r2, r5",
            "bl si_core_reset",
            "ldr r0, [r4, 0x20]",
            "movw r1, 0x83e",
            "mov r2, r5",
            "bl si_setcore",
            "b 0x800fdac",
            "ldr r0, [r4, 0x20]",
            "movw r1, 0x83e",
            "mov r2, r7",
            "bl si_setcore",
            "cmp r0, 0",
            "beq 0x8010154",
            "add ip, r4, 0x168",
            "mov r3, r7",
            "mov r0, r4",
            "mov r1, sl",
            "mov r2, 1",
            "str ip, [sp]",
            "str r6, [sp, 4]",
            "bl fcn.0800f2e4",
            "mov r7, r0",
            "mov r1, 0",
            "ldr r0, [r4, 0x20]",
            "mov r2, r1",
            "bl si_core_reset",
            "ldr r3, [r4]",
            "mov r2, 0",
            "strb r2, [r4, 0x164]",
            "mov r2, 1",
            "str r2, [r3, 0x14]",
            "b 0x800fe80",
            "dsb sy",
            "ldr r6, [0x08010404]",
            "ldr r3, [r6, 0xc]",
            "cmp r3, 0",
            "beq 0x800ffcc",
            "blx r3",
            "mov r3, 5",
            "str r3, [r5, 0x40]",
            "dsb sy",
            "ldr r3, [r6, 0xc]",
            "cmp r3, 0",
            "beq 0x800ffe8",
            "blx r3",
            "mov r3, 0",
            "str r3, [r5, 0x4c]",
            "dsb sy",
            "ldr r3, [r6, 0xc]",
            "cmp r3, 0",
            "beq 0x8010004",
            "blx r3",
            "mov r3, 7",
            "str r3, [r5, 0x40]",
            "dsb sy",
            "ldr r3, [r6, 0xc]",
            "cmp r3, 0",
            "beq 0x8010020",
            "blx r3",
            "mov r3, 0",
            "str r3, [r5, 0x4c]",
            "b 0x800fedc",
            "ldr r3, [0x08010400]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "bne 0x80103b0",
            "mvn r7, 0",
            "b 0x800fe80",
            "ldr r3, [r4]",
            "mov r1, r6",
            "ldr r0, [r3]",
            "bl osl_malloc",
            "subs sb, r0, 0",
            "ldreq r5, [0x08010400]",
            "bne 0x8010068",
            "mvn r7, 0x1a",
            "b 0x800fe74",
            "cmp r6, 0",
            "bne 0x80102f4",
            "ldr r5, [0x08010400]",
            "mov r0, sb",
            "ldr r1, [r4, 0x24]",
            "add sl, r4, 0x19c",
            "ldr r2, [r4, 0x28]",
            "bl memcpy",
            "mov r3, r7",
            "mov r0, r4",
            "mov r1, sl",
            "mov r2, 1",
            "str sb, [sp]",
            "str r6, [sp, 4]",
            "bl fcn.0800f2e4",
            "ldr r3, [r5]",
            "tst r3, 4",
            "bne 0x80103f0",
            "ldr r3, [r4]",
            "mov r1, r6",
            "ldr r0, [r3]",
            "bl osl_malloc",
            "subs fp, r0, 0",
            "beq 0x8010060",
            "cmp r6, 0",
            "bne 0x8010300",
            "mov r0, r4",
            "mov r1, sl",
            "mov r2, 0",
            "mov r3, r7",
            "str fp, [sp]",
            "str r6, [sp, 4]",
            "bl fcn.0800f2e4",
            "subs r8, r0, 0",
            "beq 0x8010100",
            "ldr r3, [r5]",
            "tst r3, 1",
            "bne 0x80103c4",
            "mov r0, sb",
            "mov r1, fp",
            "mov r2, r6",
            "bl memcmp",
            "cmp r0, 0",
            "beq 0x80102c0",
            "ldr r3, [r5]",
            "tst r3, 1",
            "bne 0x80103e0",
            "ldr r3, [r4]",
            "mov r1, fp",
            "mov r2, r6",
            "ldr r0, [r3]",
            "bl osl_mfree",
            "ldr r3, [r4]",
            "mov r1, sb",
            "mov r2, r6",
            "ldr r0, [r3]",
            "bl osl_mfree",
            "ldr r3, [r4, 0x16c]",
            "b 0x800fde4",
            "ldr r3, [r5]",
            "tst r3, 1",
            "beq 0x801003c",
            "ldr r1, [0x08010408]",
            "mvn r7, 0",
            "ldr r0, [0x0801040c]",
            "bl printk",
            "b 0x800fe80",
            "ldr r0, [r4, 0x20]",
            "movw r1, 0x80e",
            "mov r2, r6",
            "bl si_setcore",
            "cmp r0, 0",
            "beq 0x801002c",
            "ldr r0, [r4, 0x20]",
            "bl si_iscoreup",
            "cmp r0, 0",
            "bne 0x8010250",
            "ldr r3, [0x08010400]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "beq 0x801003c",
            "ldr r1, [0x08010408]",
            "mvn r7, 0",
            "ldr r0, [0x08010410]",
            "bl printk",
            "b 0x800fe80",
            "mov r2, r5",
            "ldr r0, [r4, 0x20]",
            "movw r1, 0x825",
            "bl si_setcore",
            "subs r2, r0, 0",
            "beq 0x80102dc",
            "ldr r0, [r4, 0x20]",
            "mov r1, 0",
            "bl si_core_disable",
            "ldr r0, [r4, 0x20]",
            "movw r1, 0x80e",
            "mov r2, 0",
            "bl si_setcore",
            "cmp r0, 0",
            "beq 0x801002c",
            "mov r1, 0",
            "ldr r0, [r4, 0x20]",
            "mov r2, r1",
            "bl si_core_reset",
            "ldr r7, [r4, 0x3c]",
            "cmp r7, 0",
            "beq 0x800fe80",
            "add ip, sp, 0x18",
            "mov lr, 0",
            "str lr, [ip, -4]!",
            "sub r3, r7, 4",
            "mov lr, 4",
            "mov r0, r4",
            "add r1, r4, 0x19c",
            "mov r2, 1",
            "stm sp, {ip, lr}",
            "bl fcn.0800f2e4",
            "cmp r0, 0",
            "mvnlt r7, 0",
            "movge r7, 0",
            "b 0x800fe80",
            "mov r2, r6",
            "ldr r0, [r4, 0x20]",
            "movw r1, 0x80d",
            "bl si_setcore",
            "subs r2, r0, 0",
            "beq 0x8010310",
            "ldr r0, [r4, 0x20]",
            "movw r1, 0x825",
            "mov r2, 0",
            "bl si_setcore",
            "subs r7, r0, 0",
            "movne r7, 0",
            "bne 0x800ff8c",
            "ldr r0, [r4, 0x20]",
            "movw r1, 0x82a",
            "mov r2, r7",
            "bl si_setcore",
            "cmp r0, 0",
            "bne 0x800ff8c",
            "ldr r3, [0x08010400]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "beq 0x801003c",
            "ldr r1, [0x08010408]",
            "mvn r7, 0",
            "ldr r0, [0x08010414]",
            "bl printk",
            "b 0x800fe80",
            "ldr r3, [r5]",
            "tst r3, 1",
            "beq 0x8010124",
            "ldr r1, [0x08010418]",
            "ldr r0, [0x0801041c]",
            "bl printk",
            "b 0x8010124",
            "ldr r0, [r4, 0x20]",
            "movw r1, 0x82a",
            "bl si_setcore",
            "cmp r0, 0",
            "bne 0x80101d8",
            "b 0x801029c",
            "mov r1, r6",
            "bl __memzero",
            "b 0x8010070",
            "mov r1, 0xaa",
            "mov r2, r6",
            "bl memset",
            "b 0x80100d0",
            "ldr r0, [r4, 0x20]",
            "movw r1, 0x829",
            "bl si_setcore",
            "cmp r0, 0",
            "bne 0x8010268",
            "ldr r3, [0x08010400]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "beq 0x801003c",
            "ldr r1, [0x08010408]",
            "mvn r7, 0",
            "ldr r0, [0x08010420]",
            "bl printk",
            "b 0x800fe80",
            "ldr r1, [0x08010408]",
            "ldr r0, [0x08010424]",
            "bl printk",
            "b 0x800fe80",
            "ldr r2, [r4, 0x3c]",
            "mov r1, r3",
            "ldr r0, [0x08010428]",
            "str r3, [sp, 0xc]",
            "bl printk",
            "ldr r2, [0x08010400]",
            "ldr r3, [sp, 0xc]",
            "ldr r2, [r2]",
            "tst r2, 4",
            "beq 0x800fe04",
            "ldr r0, [0x0801042c]",
            "mov r1, r7",
            "mov r2, r6",
            "bl printk",
            "ldr r3, [sp, 0xc]",
            "b 0x800fe04",
            "ldr r0, [0x08010430]",
            "ldr r2, [sp, 0x14]",
            "str r3, [sp, 0xc]",
            "bl printk",
            "ldr r3, [sp, 0xc]",
            "b 0x800fe48",
            "ldr r1, [0x08010408]",
            "mvn r7, 0",
            "ldr r0, [0x08010434]",
            "bl printk",
            "b 0x800fe80",
            "mov r2, r8",
            "ldr r1, [0x08010418]",
            "mov r3, r6",
            "ldr r0, [0x08010438]",
            "str r7, [sp]",
            "bl printk",
            "b 0x8010100",
            "ldr r1, [0x08010418]",
            "ldr r0, [0x0801043c]",
            "bl printk",
            "b 0x8010124",
            "mov r1, r6",
            "ldr r0, [0x08010440]",
            "bl printk",
            "b 0x80100b0"
        ]
    },
    "fcn.0800f1d0": {
        "function_address": "0x0800f1d0",
        "instructions": [
            "ldr r3, [0x0800f278]",
            "push {r4, r5, r6, lr}",
            "mov r4, r0",
            "mov r6, r1",
            "mov r5, r2",
            "ldr r3, [r3]",
            "tst r3, 2",
            "bne 0x800f268",
            "ldr r3, [r4]",
            "ldrb r2, [r3, 0x10]",
            "cmp r2, 0",
            "mvnne r0, 4",
            "popne {r4, r5, r6, pc}",
            "cmp r5, 0",
            "bne 0x800f214",
            "mvn r0, 0xd",
            "pop {r4, r5, r6, pc}",
            "ldr r1, [r4, 0x24]",
            "cmp r1, 0",
            "beq 0x800f230",
            "ldr r0, [r3]",
            "ldr r2, [r4, 0x28]",
            "bl osl_mfree",
            "ldr r3, [r4]",
            "ldr r0, [r3]",
            "mov r1, r5",
            "bl osl_malloc",
            "cmp r0, 0",
            "str r0, [r4, 0x24]",
            "streq r0, [r4, 0x28]",
            "mvneq r0, 0x1a",
            "popeq {r4, r5, r6, pc}",
            "str r5, [r4, 0x28]",
            "mov r1, r6",
            "mov r2, r5",
            "bl memcpy",
            "mov r0, 0",
            "pop {r4, r5, r6, pc}",
            "ldr r1, [0x0800f27c]",
            "ldr r0, [0x0800f280]",
            "bl printk",
            "b 0x800f1f0"
        ]
    },
    "sym.dhd_prot_update_txflowring": {
        "function_address": "0x0800e0d4",
        "instructions": [
            "movw r3, 0x17bc",
            "push {r4, r5, r6, lr}",
            "ldrb r3, [r0, r3]",
            "mov r4, r0",
            "mov r6, r1",
            "mov r5, r2",
            "cmp r3, 0",
            "beq 0x800e130",
            "add r0, r0, 8",
            "mov r1, 0xc",
            "ldrh r2, [r2, 2]",
            "bl sym.dhd_get_dmaed_index.clone.3",
            "ldr r3, [r5, 0x34]",
            "strh r0, [r3, 2]",
            "ldr r3, [0x0800e168]",
            "ldr r3, [r3]",
            "tst r3, 2",
            "bne 0x800e14c",
            "ldr r0, [r4, 4]",
            "mov r1, r6",
            "mov r2, 1",
            "pop {r4, r5, r6, lr}",
            "b dhd_bus_schedule_queue",
            "ldr r1, [r2, 0x34]",
            "mov r2, 0xf",
            "ldr r0, [r0, 4]",
            "ldrh r3, [r5, 2]",
            "add r1, r1, 2",
            "bl dhd_bus_cmn_readshared",
            "b 0x800e10c",
            "ldr r3, [r5, 0x34]",
            "mov r1, r6",
            "ldr r0, [0x0800e16c]",
            "ldrh r2, [r3, 4]",
            "ldrh r3, [r3, 2]",
            "bl printk",
            "b 0x800e11c"
        ]
    },
    "sym.si_socdevram_remap_size": {
        "function_address": "0x0801e3a4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r0",
            "ldr r3, [r0, 0x68]",
            "sub sp, sp, 0x24",
            "ldr r8, [r0, 0x9c]",
            "cmp r3, 0",
            "beq 0x801e5ac",
            "ldr sb, [r0, 0x8c]",
            "ldr r2, [r0, 0x60]",
            "add r1, sb, 0x20",
            "ldr r1, [r8, r1, lsl 2]",
            "cmp r1, r2",
            "movne r1, 0",
            "strne r1, [sp, 0xc]",
            "beq 0x801e5b8",
            "mov r0, r4",
            "movw r1, 0x80e",
            "mov r2, 0",
            "bl si_setcore",
            "subs r7, r0, 0",
            "moveq r6, r7",
            "beq 0x801e440",
            "mov r0, r4",
            "bl si_iscoreup",
            "cmp r0, 0",
            "str r0, [sp, 8]",
            "beq 0x801e568",
            "mov r0, r4",
            "bl si_corerev",
            "cmp r0, 0xf",
            "mov r5, r0",
            "movls r6, 0",
            "bhi 0x801e480",
            "ldr r3, [sp, 8]",
            "cmp r3, 0",
            "beq 0x801e470",
            "mov r0, r4",
            "mov r1, sb",
            "bl si_setcoreidx",
            "ldr r3, [r4, 0x6c]",
            "cmp r3, 0",
            "beq 0x801e464",
            "ldr r1, [r4, 0x8c]",
            "ldr r2, [r4, 0x60]",
            "add r1, r1, 0x20",
            "ldr r1, [r8, r1, lsl 2]",
            "cmp r1, r2",
            "beq 0x801e59c",
            "mov r0, r6",
            "add sp, sp, 0x24",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "mov r0, r4",
            "mov r1, r3",
            "bl si_core_disable",
            "b 0x801e434",
            "add fp, sp, 0x1c",
            "ldr r0, [r4, 0x58]",
            "add r1, r7, 8",
            "mov r2, fp",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "ldr sl, [sp, 0x1c]",
            "ubfx sl, sl, 0xc, 4",
            "cmp r5, 0x10",
            "cmpeq sl, 5",
            "beq 0x801e594",
            "cmp sl, 0",
            "moveq r6, sl",
            "beq 0x801e428",
            "mov r5, 0",
            "add r2, r7, 0x40",
            "add r3, r4, 0x58",
            "str r8, [sp, 0x10]",
            "str sb, [sp, 0x14]",
            "mov r6, r5",
            "mov sb, r2",
            "mov r8, r3",
            "b 0x801e4f4",
            "add r5, r5, 1",
            "uxtb r5, r5",
            "bl fcn.0801ba94",
            "cmp r5, sl",
            "add r6, r6, r0",
            "bhs 0x801e550",
            "orr r2, r5, 0x200",
            "dsb sy",
            "movw r1, 0",
            "movt r1, 0",
            "ldr r3, [r1, 0xc]",
            "cmp r3, 0",
            "beq 0x801e51c",
            "str r2, [sp, 4]",
            "blx r3",
            "ldr r2, [sp, 4]",
            "str r2, [r7, 0x10]",
            "mov r1, sb",
            "ldr r0, [r4, 0x58]",
            "mov r2, fp",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "ldr ip, [sp, 0x1c]",
            "mov r2, r5",
            "mov r0, r8",
            "mov r1, r7",
            "mov r3, 2",
            "tst ip, 0x1000000",
            "bne 0x801e4dc",
            "ldr r3, [sp, 8]",
            "ldr r8, [sp, 0x10]",
            "ldr sb, [sp, 0x14]",
            "cmp r3, 0",
            "bne 0x801e434",
            "b 0x801e470",
            "ldr r1, [sp, 8]",
            "mov r0, r4",
            "mov r2, r1",
            "bl si_core_reset",
            "mov r0, r4",
            "bl si_corerev",
            "cmp r0, 0xf",
            "mov r5, r0",
            "movls r6, 0",
            "bls 0x801e428",
            "b 0x801e480",
            "mov sl, 4",
            "b 0x801e4b8",
            "ldr r0, [r4, 0x64]",
            "ldr r1, [sp, 0xc]",
            "blx r3",
            "b 0x801e464",
            "ldr sb, [r0, 0x8c]",
            "str r3, [sp, 0xc]",
            "b 0x801e3e0",
            "ldr r0, [r0, 0x64]",
            "blx r3",
            "ldr sb, [r4, 0x8c]",
            "str r0, [sp, 0xc]",
            "b 0x801e3e0"
        ]
    },
    "sym.sb_flag": {
        "function_address": "0x0801a9c0",
        "instructions": [
            "push {r3, lr}",
            "ldr r1, [r0, 0x88]",
            "add r1, r1, 0xf10",
            "add r1, r1, 8",
            "bl fcn.0801a5fc",
            "and r0, r0, 0x3f",
            "pop {r3, pc}"
        ]
    },
    "sym.dhd_bus_watchdog": {
        "function_address": "0x08011cec",
        "instructions": [
            "push {r4, lr}",
            "ldr r2, [r0, 0x14]",
            "ldr r3, [r0, 4]",
            "cmp r2, 2",
            "beq 0x8011d08",
            "mov r0, 0",
            "pop {r4, pc}",
            "ldr r4, [reloc.dhd_console_ms]",
            "ldr r2, [r4]",
            "cmp r2, 0",
            "beq 0x8011d00",
            "ldr r0, [reloc.dhd_watchdog_ms]",
            "ldr r1, [r3, 0x13c]",
            "ldr r0, [r0]",
            "add r1, r0, r1",
            "cmp r2, r1",
            "str r1, [r3, 0x13c]",
            "bhi 0x8011d00",
            "rsb r2, r2, r1",
            "mov r0, r3",
            "str r2, [r3, 0x13c]",
            "bl fcn.0800fbd8",
            "cmp r0, 0",
            "movlt r3, 0",
            "strlt r3, [r4]",
            "b 0x8011d00"
        ]
    },
    "fcn.0800fbd8": {
        "function_address": "0x0800fbd8",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r4, r0",
            "ldr r3, [r0, 0x160]",
            "sub sp, sp, 0xc8",
            "cmp r3, 0",
            "bne 0x800fbfc",
            "mvn r0, 0",
            "add sp, sp, 0xc8",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}",
            "add ip, r0, 0x144",
            "add r6, r0, 0x19c",
            "str ip, [sp]",
            "mov r1, r6",
            "mov ip, 0x10",
            "mov r2, 0",
            "add r3, r3, 8",
            "str ip, [sp, 4]",
            "bl fcn.0800f2e4",
            "cmp r0, 0",
            "blt 0x800fbf4",
            "ldr r3, [r4, 0x158]",
            "cmp r3, 0",
            "beq 0x800fd30",
            "ldr r5, [r4, 0x14c]",
            "ldr ip, [r4, 0x154]",
            "cmp r5, ip",
            "bhi 0x800fbf0",
            "ldr r3, [r4, 0x15c]",
            "cmp r3, r5",
            "beq 0x800fd28",
            "ldr lr, [r4, 0x158]",
            "mov r0, r4",
            "ldr r3, [r4, 0x144]",
            "mov r1, r6",
            "mov r2, 0",
            "str ip, [sp, 4]",
            "str lr, [sp]",
            "bl fcn.0800f2e4",
            "cmp r0, 0",
            "movge sb, 0",
            "blt 0x800fbf4",
            "ldr r1, [r4, 0x15c]",
            "cmp r5, r1",
            "beq 0x800fd28",
            "ldr sl, [r4, 0x158]",
            "mov r6, 0",
            "ldr r8, [r4, 0x154]",
            "ldrb r7, [sl, r1]",
            "add r0, r1, 1",
            "mov r1, r8",
            "bl __aeabi_uidivmod",
            "cmp r7, 0xa",
            "add r2, sp, 8",
            "str r1, [r4, 0x15c]",
            "beq 0x800fcec",
            "strb r7, [r2, r6]",
            "add r6, r6, 1",
            "cmp r6, 0xbe",
            "beq 0x800fcf8",
            "cmp r5, r1",
            "bne 0x800fc94",
            "cmp r6, r5",
            "rsbls r5, r6, r5",
            "rsbhi r6, r6, r8",
            "movls r0, 0",
            "strls r5, [r4, 0x15c]",
            "movhi r0, 0",
            "strhi r6, [r4, 0x15c]",
            "b 0x800fbf4",
            "cmp r6, 0",
            "beq 0x800fc80",
            "add r2, sp, 8",
            "add r1, sp, 0xc8",
            "ldr r0, [0x0800fd58]",
            "add r3, r1, r6",
            "ldrb r1, [r3, -0xc1]",
            "cmp r1, 0xd",
            "addeq r1, sp, 0xc8",
            "subeq r6, r6, 1",
            "addeq r3, r1, r6",
            "mov r1, r2",
            "strb sb, [r3, -0xc0]",
            "bl printk",
            "b 0x800fc7c",
            "mov r0, 0",
            "b 0x800fbf4",
            "ldr r1, [r4, 0x148]",
            "ldr r3, [r4]",
            "str r1, [r4, 0x154]",
            "ldr r0, [r3]",
            "bl osl_malloc",
            "cmp r0, 0",
            "str r0, [r4, 0x158]",
            "mvneq r0, 0x1a",
            "beq 0x800fbf4",
            "b 0x800fc34"
        ]
    },
    "sym.dhd_do_driver_init": {
        "function_address": "0x08008c04",
        "instructions": [
            "push {r3, lr}",
            "subs r3, r0, 0",
            "beq 0x8008c68",
            "ldr r3, [r3, 0x380]",
            "ldr r3, [r3, 0x1c]",
            "cmp r3, 2",
            "beq 0x8008c48",
            "bl sym.dhd_open",
            "cmp r0, 0",
            "movge r0, 0",
            "popge {r3, pc}",
            "ldr r3, [0x08008c9c]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "bne 0x8008c8c",
            "mvn r0, 0",
            "pop {r3, pc}",
            "ldr r3, [0x08008c9c]",
            "ldr r0, [r3]",
            "ands r0, r0, 2",
            "popeq {r3, pc}",
            "ldr r0, [0x08008ca0]",
            "bl printk",
            "mov r0, 0",
            "pop {r3, pc}",
            "ldr r3, [0x08008c9c]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "mvneq r0, 0x15",
            "popeq {r3, pc}",
            "ldr r0, [0x08008ca4]",
            "bl printk",
            "mvn r0, 0x15",
            "pop {r3, pc}",
            "ldr r0, [0x08008ca8]",
            "bl printk",
            "mvn r0, 0",
            "pop {r3, pc}"
        ]
    },
    "sym.sb_intflag": {
        "function_address": "0x0801b2c0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r4, r0",
            "ldr r7, [r0, 0x68]",
            "ldr r5, [r0, 0x9c]",
            "cmp r7, 0",
            "beq 0x801b2f4",
            "ldr r2, [r0, 0x8c]",
            "ldr r3, [r0, 0x60]",
            "add r2, r2, 0x20",
            "ldr r2, [r5, r2, lsl 2]",
            "cmp r2, r3",
            "movne r7, 0",
            "beq 0x801b370",
            "mov r0, r4",
            "bl si_coreidx",
            "mov r2, 0",
            "mov r6, r0",
            "mov r1, 0x800",
            "mov r0, r4",
            "bl si_setcore",
            "add r1, r0, 0xfe0",
            "mov r0, r4",
            "add r1, r1, 8",
            "bl fcn.0801a5fc",
            "mov r1, r6",
            "mov r8, r0",
            "mov r0, r4",
            "bl sb_setcoreidx",
            "ldr r3, [r4, 0x6c]",
            "cmp r3, 0",
            "beq 0x801b354",
            "ldr r1, [r4, 0x8c]",
            "ldr r2, [r4, 0x60]",
            "add r1, r1, 0x20",
            "ldr r1, [r5, r1, lsl 2]",
            "cmp r1, r2",
            "beq 0x801b35c",
            "mov r0, r8",
            "pop {r4, r5, r6, r7, r8, pc}",
            "ldr r0, [r4, 0x64]",
            "mov r1, r7",
            "blx r3",
            "mov r0, r8",
            "pop {r4, r5, r6, r7, r8, pc}",
            "ldr r0, [r0, 0x64]",
            "blx r7",
            "mov r7, r0",
            "b 0x801b2f4"
        ]
    },
    "sym.sb_core_sflags": {
        "function_address": "0x0801acf4",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "orrs r3, r2, r1",
            "ldr r5, [r0, 0x88]",
            "mov r4, r0",
            "mov r6, r1",
            "mov r7, r2",
            "add r5, r5, 0xf00",
            "addeq r5, r5, 0x9c",
            "beq 0x801ad38",
            "add r5, r5, 0x9c",
            "mov r1, r5",
            "bl fcn.0801a5fc",
            "bic r2, r0, r6, lsl 16",
            "mov r1, r5",
            "mov r0, r4",
            "orr r2, r2, r7, lsl 16",
            "bl fcn.0801a710",
            "mov r0, r4",
            "mov r1, r5",
            "bl fcn.0801a5fc",
            "lsr r0, r0, 0x10",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "sym.sb_coreid": {
        "function_address": "0x0801a99c",
        "instructions": [
            "push {r3, lr}",
            "ldr r1, [r0, 0x88]",
            "add r1, r1, 0xff0",
            "add r1, r1, 0xc",
            "bl fcn.0801a5fc",
            "movw r3, 0x8ff0",
            "and r3, r0, r3",
            "lsr r0, r3, 4",
            "pop {r3, pc}"
        ]
    },
    "sym.sb_numaddrspaces": {
        "function_address": "0x0801b380",
        "instructions": [
            "push {r3, lr}",
            "ldr r1, [r0, 0x88]",
            "add r1, r1, 0xff0",
            "add r1, r1, 8",
            "bl fcn.0801a5fc",
            "ubfx r0, r0, 3, 3",
            "add r0, r0, 1",
            "pop {r3, pc}"
        ]
    },
    "sym.sb_iscoreup": {
        "function_address": "0x0801ad4c",
        "instructions": [
            "push {r3, lr}",
            "ldr r1, [r0, 0x88]",
            "add r1, r1, 0xf90",
            "add r1, r1, 8",
            "bl fcn.0801a5fc",
            "mov r3, 7",
            "movt r3, 1",
            "and r3, r0, r3",
            "cmp r3, 0x10000",
            "movne r0, 0",
            "moveq r0, 1",
            "pop {r3, pc}"
        ]
    },
    "sym.sb_addrspace": {
        "function_address": "0x0801b3a0",
        "instructions": [
            "push {r3, lr}",
            "ldr r3, [r0, 0x88]",
            "add r3, r3, 0xf00",
            "cmp r1, 3",
            "ldrls pc, [pc, r1, lsl 2]",
            "b 0x801b448",
            "cmp r3, 1",
            "biceq r0, r0, 0xff0",
            "biceq r0, r0, 0xf",
            "popeq {r3, pc}",
            "cmp r3, 2",
            "lsreq r0, r0, 0x10",
            "movne r0, 0",
            "lsleq r0, r0, 0x10",
            "pop {r3, pc}",
            "mov r1, 0",
            "bl fcn.0801a5fc",
            "ands r3, r0, 3",
            "biceq r0, r0, 0xff",
            "bne 0x801b3dc",
            "pop {r3, pc}",
            "ldrbvc r4, [sl, -r0, lsr 12]",
            "ldrhtmi lr, [r8], -sp",
            "svclt 0x2ef7ff",
            "invalid",
            "strtmi r2, [r8], -r6, lsl 6",
            "andlo pc, r0, sp, lsl 17",
            "invalid",
            "invalid",
            "bvs 0x7b17948",
            "andlo r7, r1, 0xda0000",
            "ldrsb r7, [pc], -sl",
            "invalid"
        ]
    },
    "sym.dhd_l2fltr_pkt_handle": {
        "function_address": "0x08003838",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov ip, 0",
            "ldr r4, [r2, 0xbc]",
            "sub sp, sp, 0x7c",
            "mov r7, r0",
            "mov r6, r1",
            "ldr r5, [r2, 0x78]",
            "mov r8, r3",
            "str ip, [sp, 0x70]",
            "strb ip, [sp, 0x77]",
            "cmp r4, ip",
            "cmpne r5, ip",
            "bgt 0x8003878",
            "mvn r0, 0",
            "add sp, sp, 0x7c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldrb r3, [r4, 0xc]",
            "add sl, sp, 0x44",
            "ldrb sb, [r4, 0xd]",
            "mov r0, sl",
            "mov r1, 0x18",
            "orr sb, r3, sb, lsl 8",
            "lsr r3, sb, 8",
            "orr sb, r3, sb, lsl 8",
            "uxth sb, sb",
            "bl __memzero",
            "cmp sb, 0x600",
            "str r4, [sp, 0x44]",
            "strh r5, [sp, 0x4a]",
            "blo 0x8003a30",
            "cmp sb, 0x8100",
            "beq 0x8003a04",
            "sub r5, r5, 0xe",
            "mov r3, 3",
            "cmp r5, 0",
            "strb r3, [sp, 0x48]",
            "ble 0x800386c",
            "add r4, r4, 0xe",
            "movw r3, 0x806",
            "str r4, [sp, 0x4c]",
            "cmp sb, r3",
            "strh r5, [sp, 0x52]",
            "beq 0x8003d94",
            "bhi 0x8003a94",
            "cmp sb, 0x800",
            "bne 0x800386c",
            "ldrb r3, [r4]",
            "and r0, r3, 0xf",
            "lsl r0, r0, 2",
            "rsb r5, r0, r5",
            "cmp r5, 0",
            "ble 0x800386c",
            "lsr r3, r3, 4",
            "cmp r0, 0x13",
            "movls r2, 0",
            "movhi r2, 1",
            "cmp r3, 4",
            "movne r2, 0",
            "cmp r2, 0",
            "beq 0x800386c",
            "mov r3, 4",
            "add r0, r4, r0",
            "strb r3, [sp, 0x50]",
            "ldrb r3, [r4, 9]",
            "cmp r3, 6",
            "str r0, [sp, 0x54]",
            "strh r5, [sp, 0x5a]",
            "beq 0x8003fe0",
            "bhi 0x8003fc0",
            "cmp r3, 1",
            "beq 0x8003ff0",
            "cmp r3, 2",
            "beq 0x8003fd0",
            "ldrb r3, [sp, 0x50]",
            "cmp r3, 7",
            "bne 0x8003acc",
            "ldr r4, [sp, 0x4c]",
            "ldrb r3, [r4, 8]",
            "ldrb r5, [r4, 9]",
            "ldrb ip, [r4, 0xa]",
            "ldrb r0, [r4, 0xb]",
            "ldrb r1, [r4, 0xc]",
            "orr sb, r5, r3",
            "ldrb r2, [r4, 0xd]",
            "orr sb, ip, sb",
            "ldrb fp, [r4, 6]",
            "orr sb, r0, sb",
            "ldrb sl, [r4, 7]",
            "orr sb, r1, sb",
            "orrs sb, r2, sb",
            "orr sl, fp, sl, lsl 8",
            "beq 0x800386c",
            "and r5, r5, r3",
            "and ip, ip, r5",
            "and r0, r0, ip",
            "and r1, r1, r0",
            "and r2, r2, r1",
            "cmp r2, 0xff",
            "beq 0x800386c",
            "tst r3, 1",
            "bne 0x800386c",
            "lsr r3, sl, 8",
            "orr sl, r3, sl, lsl 8",
            "uxth sl, sl",
            "cmp sl, 2",
            "bls 0x8003db8",
            "ldr r3, [0x0800441c]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "beq 0x800386c",
            "mov r1, r6",
            "mov r2, sl",
            "ldr r0, [0x08004420]",
            "bl printk",
            "b 0x800386c",
            "sub r5, r5, 0x12",
            "mov r3, 4",
            "cmp r5, 0",
            "strb r3, [sp, 0x48]",
            "ldrh r3, [r4, 0x10]",
            "ble 0x800386c",
            "lsr sb, r3, 8",
            "add r4, r4, 0x12",
            "orr r3, sb, r3, lsl 8",
            "uxth sb, r3",
            "b 0x80038d0",
            "add r0, r4, 0xe",
            "ldr r1, [0x08004424]",
            "mov r2, 6",
            "bl memcmp",
            "cmp r0, 0",
            "bne 0x800386c",
            "ldrb r2, [r4, 0x15]",
            "ldrb r3, [r4, 0x14]",
            "orr r3, r3, r2, lsl 8",
            "lsr r2, r3, 8",
            "orr r3, r2, r3, lsl 8",
            "sxth r3, r3",
            "cmn r3, 0x7f00",
            "beq 0x800386c",
            "sub r5, r5, 0x1a",
            "mov r3, 1",
            "cmp r5, 0",
            "strb r3, [sp, 0x48]",
            "ldrh r3, [r4, 0x18]",
            "ble 0x800386c",
            "lsr sb, r3, 8",
            "add r4, r4, 0x1a",
            "orr r3, sb, r3, lsl 8",
            "uxth sb, r3",
            "b 0x80038d0",
            "movw r3, 0x86dd",
            "cmp sb, r3",
            "beq 0x8003c64",
            "movw r3, 0x888e",
            "cmp sb, r3",
            "bne 0x800386c",
            "sub r5, r5, 4",
            "cmp r5, 0",
            "ble 0x800386c",
            "ldrb r3, [r4, 1]",
            "cmp r3, 3",
            "moveq r3, 8",
            "strbeq r3, [sp, 0x50]",
            "bne 0x800386c",
            "ldrb r3, [sp, 0x58]",
            "cmp r3, 0x3a",
            "beq 0x8003d24",
            "cmp r3, 0x11",
            "bne 0x800386c",
            "mov r0, r7",
            "mov r1, r6",
            "bl dhd_get_ifp_arp_table_handle",
            "ldr r5, [sp, 0x54]",
            "mov r3, r0",
            "add r4, r5, 8",
            "ldrb r2, [r4, 0xec]",
            "cmp r2, 0x63",
            "bne 0x800386c",
            "ldrb r2, [r4, 0xed]",
            "cmp r2, 0x82",
            "bne 0x800386c",
            "ldrb r2, [r4, 0xee]",
            "cmp r2, 0x53",
            "bne 0x800386c",
            "ldrb r2, [r4, 0xef]",
            "cmp r2, 0x63",
            "bne 0x800386c",
            "ldrh r2, [sp, 0x5a]",
            "add r1, r3, 0x84",
            "add r3, r3, 0x8a",
            "add sl, r0, 0x90",
            "str r3, [sp, 0x1c]",
            "mov r0, sl",
            "sub r3, r2, 0xf8",
            "add fp, sp, 0x64",
            "uxth r3, r3",
            "str r1, [sp, 0x18]",
            "add sb, sp, 0x5c",
            "str r3, [sp, 0x10]",
            "bl _raw_spin_lock_irqsave",
            "ldr r1, [sp, 0x18]",
            "mov ip, r0",
            "mov r2, 6",
            "mov r0, fp",
            "str ip, [sp, 0x14]",
            "bl memcpy",
            "mov r2, 6",
            "ldr r1, [sp, 0x1c]",
            "mov r0, sb",
            "bl memcpy",
            "ldr ip, [sp, 0x14]",
            "mov r0, sl",
            "mov r1, ip",
            "bl _raw_spin_unlock_irqrestore",
            "cmp r8, 0",
            "ldr r3, [sp, 0x10]",
            "beq 0x80041e0",
            "add r0, r5, 0xf8",
            "mov r1, r3",
            "mov r2, 0x35",
            "bl bcm_parse_tlvs",
            "cmp r0, 0",
            "beq 0x800386c",
            "ldrb r3, [r0, 2]",
            "cmp r3, 5",
            "bne 0x800386c",
            "mov r0, sb",
            "add r1, r5, 0x24",
            "mov r2, 6",
            "bl memcmp",
            "cmp r0, 0",
            "bne 0x800437c",
            "ldrb r0, [r4, 0x11]",
            "add r5, r4, 0x10",
            "ldrb r1, [r4, 0x10]",
            "ldrb r2, [r4, 0x12]",
            "ldrb r3, [r4, 0x13]",
            "orr r1, r0, r1",
            "orr r2, r1, r2",
            "orrs r3, r2, r3",
            "beq 0x800386c",
            "mov r0, r7",
            "mov r1, r6",
            "mov r2, fp",
            "bl dhd_sta_associated",
            "cmp r0, 0",
            "bne 0x800386c",
            "mov r4, 1",
            "mov r0, r7",
            "mov r1, r6",
            "mov r2, r5",
            "mov r3, 4",
            "str r4, [sp]",
            "bl fcn.08002cb4",
            "cmp r0, 0",
            "bne 0x800386c",
            "mov ip, 4",
            "mov r0, r7",
            "mov r1, r6",
            "mov r2, fp",
            "mov r3, r5",
            "str ip, [sp]",
            "str r4, [sp, 4]",
            "bl fcn.08002d74",
            "mvn r0, 0",
            "b 0x8003870",
            "sub r5, r5, 0x28",
            "cmp r5, 0",
            "ble 0x800386c",
            "ldrb r3, [r4]",
            "lsr r3, r3, 4",
            "cmp r3, 6",
            "bne 0x800386c",
            "strb r3, [sp, 0x50]",
            "add r0, r4, 0x28",
            "ldrb r3, [r4, 6]",
            "cmp r3, 0",
            "cmpne r3, 0x2b",
            "beq 0x8003cb0",
            "cmp r3, 0x2c",
            "cmpne r3, 0x33",
            "beq 0x8003cb0",
            "cmp r3, 0x3b",
            "cmpne r3, 0x3c",
            "bne 0x8003938",
            "mov r1, r0",
            "mov r2, 0",
            "b 0x8003cfc",
            "cmp r3, 0x2c",
            "beq 0x8003d1c",
            "cmp r3, 0x33",
            "beq 0x8003da8",
            "cmp r3, 0x3b",
            "beq 0x800386c",
            "cmp r3, 0x3c",
            "bne 0x8004070",
            "cmp r3, 0x33",
            "beq 0x8003da8",
            "ldrb r3, [r1, 1]",
            "add r3, r3, 1",
            "lsl r3, r3, 3",
            "add r2, r3, r2",
            "uxth r2, r2",
            "add r1, r0, r2",
            "ldrb r3, [r1]",
            "cmp r3, 0",
            "cmpne r3, 0x2b",
            "bne 0x8003cbc",
            "cmp r3, 0x3b",
            "beq 0x800386c",
            "cmp r3, 0x2c",
            "bne 0x8003cdc",
            "mov r3, 8",
            "b 0x8003cf0",
            "add ip, sp, 0x77",
            "mov r0, r7",
            "mov r1, r6",
            "mov r2, sl",
            "add r3, sp, 0x70",
            "str ip, [sp]",
            "str r8, [sp, 4]",
            "bl fcn.0800303c",
            "cmp r0, 0",
            "beq 0x8003870",
            "cmp r0, 2",
            "bne 0x800386c",
            "ldr r2, [sp, 0x70]",
            "cmp r2, 0",
            "beq 0x800386c",
            "ldrb r4, [sp, 0x77]",
            "cmp r4, 0",
            "beq 0x8003d80",
            "mov r0, r7",
            "mov r1, r6",
            "bl dhd_sendpkt",
            "mov r0, 0",
            "b 0x8003870",
            "mov r0, r7",
            "mov r1, r6",
            "bl dhd_sendup",
            "mov r0, r4",
            "b 0x8003870",
            "cmp r5, 0x1c",
            "movpl r3, 7",
            "strbpl r3, [sp, 0x50]",
            "bpl 0x800396c",
            "b 0x800386c",
            "ldrb r3, [r1, 1]",
            "add r3, r3, 2",
            "lsl r3, r3, 2",
            "b 0x8003cf0",
            "ldrb r1, [r4, 0xe]",
            "ldrb r0, [r4, 0xf]",
            "ldrb r2, [r4, 0x10]",
            "ldrb r3, [r4, 0x11]",
            "orr ip, r0, r1",
            "orr ip, r2, ip",
            "orrs ip, r3, ip",
            "beq 0x8003f48",
            "and r1, r0, r1",
            "and r2, r2, r1",
            "and r3, r3, r2",
            "cmp r3, 0xff",
            "beq 0x8003f48",
            "add sb, r4, 0xe",
            "mov r5, 1",
            "mov r0, r7",
            "mov r1, r6",
            "mov r2, sb",
            "mov r3, 4",
            "str r5, [sp]",
            "bl fcn.08002cb4",
            "cmp r0, 0",
            "beq 0x80041bc",
            "ldrb r2, [r4, 0xe]",
            "ldrb r1, [r4, 0xf]",
            "ldrb r3, [r4, 0x10]",
            "ldrb r5, [r4, 0x11]",
            "orr r0, r1, r2",
            "orr r0, r3, r0",
            "orrs r0, r5, r0",
            "beq 0x8003ecc",
            "and r2, r1, r2",
            "and r3, r3, r2",
            "and r3, r5, r3",
            "cmp r3, 0xff",
            "beq 0x8003ecc",
            "mov r1, r6",
            "mov r0, r7",
            "bl dhd_get_ifp_arp_table_handle",
            "add fp, r0, 0x90",
            "mov r3, r0",
            "mov r0, fp",
            "str r3, [sp, 0x10]",
            "bl _raw_spin_lock_irqsave",
            "ldr r3, [sp, 0x10]",
            "and r5, r5, 0x1f",
            "str r0, [sp, 0x18]",
            "ldr r5, [r3, r5, lsl 2]",
            "cmp r5, 0",
            "bne 0x8003e90",
            "b 0x8004060",
            "ldr r5, [r5]",
            "cmp r5, 0",
            "beq 0x8004060",
            "add r0, r5, 0x10",
            "mov r1, sb",
            "mov r2, 4",
            "bl memcmp",
            "cmp r0, 0",
            "bne 0x8003e84",
            "add r1, r4, 8",
            "add r0, r5, 8",
            "mov r2, 6",
            "bl memcpy",
            "ldr r3, [r7, 0xa0]",
            "mov r0, fp",
            "ldr r1, [sp, 0x18]",
            "str r3, [r5, 4]",
            "bl _raw_spin_unlock_irqrestore",
            "cmp sl, 2",
            "beq 0x8004000",
            "cmp r8, 0",
            "beq 0x800386c",
            "add r5, r4, 0xe",
            "add r8, r4, 0x18",
            "mov r0, r5",
            "mov r1, r8",
            "mov r2, 4",
            "bl memcmp",
            "cmp r0, 0",
            "beq 0x8003870",
            "cmp sl, 1",
            "beq 0x8004084",
            "mov r1, r6",
            "mov ip, 1",
            "mov r0, r7",
            "mov r2, r5",
            "mov r3, 4",
            "str ip, [sp]",
            "bl fcn.08002cb4",
            "subs r1, r0, 0",
            "beq 0x800386c",
            "add r0, r4, 8",
            "add r1, r1, 8",
            "mov r2, 6",
            "bl memcmp",
            "cmp r0, 0",
            "beq 0x800386c",
            "mov r0, 0",
            "b 0x8003870",
            "cmp r8, 0",
            "bne 0x8003ecc",
            "cmp sl, 1",
            "bne 0x8003ecc",
            "add r5, r4, 0x18",
            "mov r0, r7",
            "mov r1, r6",
            "mov r2, r5",
            "mov r3, 4",
            "str sl, [sp]",
            "bl fcn.08002cb4",
            "cmp r0, 0",
            "bne 0x800386c",
            "mov r0, r7",
            "mov r1, r6",
            "mov r2, r5",
            "mov r3, 4",
            "str r8, [sp]",
            "bl fcn.08002cb4",
            "cmp r0, 0",
            "bne 0x800386c",
            "mov ip, 4",
            "mov r0, r7",
            "mov r1, r6",
            "add r2, r4, 8",
            "mov r3, r5",
            "str ip, [sp]",
            "str r8, [sp, 4]",
            "bl fcn.08002d74",
            "b 0x800386c",
            "cmp r3, 0x11",
            "beq 0x8003fd0",
            "cmp r3, 0x3a",
            "bne 0x800395c",
            "cmp r5, 8",
            "strb r3, [sp, 0x58]",
            "bpl 0x800395c",
            "b 0x800386c",
            "cmp r5, 0x14",
            "strb r3, [sp, 0x58]",
            "bpl 0x800395c",
            "b 0x800386c",
            "cmp r5, 4",
            "strb r3, [sp, 0x58]",
            "bpl 0x800395c",
            "b 0x800386c",
            "add sb, r4, 0xe",
            "mov r1, r6",
            "mov fp, 0",
            "mov r0, r7",
            "mov r2, sb",
            "mov r3, 4",
            "str fp, [sp]",
            "bl fcn.08002cb4",
            "subs r1, r0, 0",
            "beq 0x8003ed4",
            "add r5, sp, 0x64",
            "add r1, r1, 8",
            "mov r2, 6",
            "mov r0, r5",
            "bl memcpy",
            "mov ip, 4",
            "mov r0, r7",
            "mov r1, r6",
            "mov r2, r5",
            "mov r3, sb",
            "str ip, [sp]",
            "str fp, [sp, 4]",
            "bl fcn.08002b54",
            "b 0x8003ed4",
            "mov r0, fp",
            "ldr r1, [sp, 0x18]",
            "bl _raw_spin_unlock_irqrestore",
            "b 0x8003ecc",
            "rsb r5, r2, r5",
            "cmp r5, 0",
            "addgt r0, r0, r2",
            "bgt 0x8003938",
            "b 0x800386c",
            "mov r0, r7",
            "mov r1, r6",
            "mov r2, r8",
            "mov r3, 4",
            "str sl, [sp]",
            "bl fcn.08002cb4",
            "subs fp, r0, 0",
            "beq 0x8004310",
            "add sb, r4, 8",
            "add r8, fp, 8",
            "mov r0, sb",
            "mov r1, r8",
            "mov r2, 6",
            "bl memcmp",
            "cmp r0, 0",
            "beq 0x8003870",
            "mov r0, r7",
            "mov r1, r6",
            "mov r2, r8",
            "bl dhd_sta_associated",
            "cmp r0, 0",
            "beq 0x8003870",
            "mov r1, r6",
            "mov r2, sb",
            "mov r0, r7",
            "bl dhd_sta_associated",
            "ldrb ip, [sp, 0x48]",
            "cmp r0, 0",
            "movw r1, 0x806",
            "strbne sl, [sp, 0x77]",
            "ldr r0, [r7]",
            "mov r2, r8",
            "sub ip, ip, 1",
            "str r1, [sp]",
            "uxtb ip, ip",
            "add r1, sp, 0x6c",
            "str r1, [sp, 8]",
            "mov r3, sb",
            "cmp ip, 2",
            "movhs ip, 0",
            "movlo ip, 1",
            "movlo r1, 0x32",
            "movhs r1, 0x2a",
            "str ip, [sp, 4]",
            "bl fcn.08002f54",
            "cmp r0, 0",
            "str r0, [sp, 0x70]",
            "beq 0x800433c",
            "mov r1, r4",
            "ldr r0, [sp, 0x6c]",
            "mov r2, 6",
            "bl memcpy",
            "ldr r3, [sp, 0x6c]",
            "mov r0, 0",
            "mov r1, r8",
            "mov r2, 6",
            "strb r0, [r3, 6]",
            "add r0, r0, 2",
            "strb r0, [r3, 7]",
            "ldr r0, [sp, 0x6c]",
            "add r0, r0, 8",
            "bl memcpy",
            "ldr r0, [sp, 0x6c]",
            "add r1, fp, 0x10",
            "mov r2, 4",
            "add r0, r0, 0xe",
            "bl memcpy",
            "ldr r0, [sp, 0x6c]",
            "mov r1, sb",
            "mov r2, 6",
            "add r0, r0, 0x12",
            "bl memcpy",
            "ldr r0, [sp, 0x6c]",
            "mov r1, r5",
            "mov r2, 4",
            "add r0, r0, 0x18",
            "bl memcpy",
            "b 0x8003d54",
            "mov ip, 4",
            "mov r0, r7",
            "mov r1, r6",
            "add r2, r4, 8",
            "mov r3, sb",
            "str ip, [sp]",
            "str r5, [sp, 4]",
            "bl fcn.08002d74",
            "b 0x8003ecc",
            "add r0, r5, 0xf8",
            "mov r1, r3",
            "mov r2, 0x35",
            "ldr r7, [sp, 0x44]",
            "bl bcm_parse_tlvs",
            "cmp r0, 0",
            "beq 0x800386c",
            "ldrb r3, [r0, 2]",
            "cmp r3, 3",
            "bne 0x800386c",
            "ldrb r3, [r5, 0x24]",
            "add sb, r5, 0x24",
            "ldrb r5, [r4, 0x1d]",
            "ldrb ip, [r4, 0x1e]",
            "ldrb r0, [r4, 0x1f]",
            "ldrb r1, [r4, 0x20]",
            "orr r8, r5, r3",
            "ldrb r2, [r4, 0x21]",
            "orr r8, ip, r8",
            "orr r8, r0, r8",
            "orr r8, r1, r8",
            "orrs r8, r2, r8",
            "beq 0x80042b4",
            "and r5, r5, r3",
            "and ip, ip, r5",
            "and r0, r0, ip",
            "and r1, r1, r0",
            "and r2, r2, r1",
            "cmp r2, 0xff",
            "beq 0x80042b4",
            "tst r3, 1",
            "bne 0x80042b4",
            "ldrb r3, [r7, 6]",
            "ldrb r5, [r7, 7]",
            "ldrb ip, [r7, 8]",
            "ldrb r0, [r7, 9]",
            "ldrb r1, [r7, 0xa]",
            "orr r8, r5, r3",
            "ldrb r2, [r7, 0xb]",
            "orr r8, ip, r8",
            "orr r8, r0, r8",
            "orr r8, r1, r8",
            "orrs r8, r2, r8",
            "beq 0x80042b4",
            "and r5, r5, r3",
            "and ip, ip, r5",
            "and r0, r0, ip",
            "and r1, r1, r0",
            "and r2, r2, r1",
            "cmp r2, 0xff",
            "beq 0x80042b4",
            "tst r3, 1",
            "beq 0x80043dc",
            "ldr r8, [0x0800441c]",
            "ldr r3, [r8]",
            "tst r3, 1",
            "beq 0x800386c",
            "add r5, sp, 0x24",
            "add r0, r7, 6",
            "mov r1, r5",
            "bl bcm_ether_ntoa",
            "mov r1, r6",
            "mov r2, r0",
            "ldr r0, [0x08004428]",
            "bl printk",
            "ldr r3, [r8]",
            "tst r3, 1",
            "beq 0x800386c",
            "mov r1, r5",
            "add r0, r4, 0x1c",
            "bl bcm_ether_ntoa",
            "mov r1, r0",
            "ldr r0, [0x0800442c]",
            "bl printk",
            "mvn r0, 0",
            "b 0x8003870",
            "ldr r3, [0x0800441c]",
            "ldr r3, [r3]",
            "tst r3, 4",
            "bne 0x800435c",
            "mov r0, r7",
            "mov r1, r6",
            "bl dhd_parp_discard_is_enabled",
            "cmp r0, 0",
            "beq 0x800386c",
            "mov r0, 0",
            "b 0x8003870",
            "ldr r3, [0x0800441c]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "beq 0x800386c",
            "mov r1, r6",
            "ldr r0, [0x08004430]",
            "bl printk",
            "b 0x800386c",
            "ldrb ip, [r4, 0x1b]",
            "ldrb r1, [r4, 0x18]",
            "ldrb r2, [r4, 0x19]",
            "ldrb r3, [r4, 0x1a]",
            "ldr r0, [0x08004434]",
            "str ip, [sp]",
            "bl printk",
            "b 0x8004320",
            "ldr r7, [0x0800441c]",
            "add r5, sp, 0x24",
            "mov r0, r5",
            "mov r1, sb",
            "mov r2, 6",
            "bl memcpy",
            "ldr r3, [r7]",
            "tst r3, 1",
            "beq 0x800386c",
            "ldr r0, [0x08004438]",
            "mov r1, r6",
            "mov r2, r5",
            "bl printk",
            "ldr r3, [r7]",
            "tst r3, 1",
            "beq 0x800386c",
            "mov r1, r5",
            "add r0, r4, 0x1c",
            "bl bcm_ether_ntoa",
            "mov r1, r0",
            "ldr r0, [0x0800443c]",
            "bl printk",
            "mvn r0, 0",
            "b 0x8003870",
            "mov r0, sl",
            "bl _raw_spin_lock_irqsave",
            "mov r2, 6",
            "mov r4, r0",
            "add r1, r7, r2",
            "ldr r0, [sp, 0x18]",
            "bl memcpy",
            "mov r1, sb",
            "mov r2, 6",
            "ldr r0, [sp, 0x1c]",
            "bl memcpy",
            "mov r0, sl",
            "mov r1, r4",
            "bl _raw_spin_unlock_irqrestore",
            "mvn r0, 0",
            "b 0x8003870"
        ]
    },
    "fcn.0800303c": {
        "function_address": "0x0800303c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r2",
            "ldrh r2, [r2, 0xe]",
            "sub sp, sp, 0xcc",
            "mov r7, r0",
            "mov r8, r1",
            "mov sl, r3",
            "ldrb sb, [sp, 0xf4]",
            "cmp r2, 0x3f",
            "ldr r6, [r4]",
            "ldr r5, [r4, 8]",
            "ble 0x8003078",
            "ldrb r3, [r5, 6]",
            "cmp r3, 0x3a",
            "beq 0x8003084",
            "mov r0, 1",
            "add sp, sp, 0xcc",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldrb fp, [r5, 0x28]",
            "add r0, r5, 0x28",
            "str r0, [sp, 0x30]",
            "cmp fp, 0x87",
            "beq 0x8003408",
            "cmp fp, 0x88",
            "bne 0x8003078",
            "mov r0, 2",
            "add r3, r5, 0x30",
            "mov ip, 0",
            "str r3, [sp, 0x34]",
            "str ip, [sp, 0x38]",
            "cmp r2, 0x40",
            "bne 0x8003500",
            "add r0, r6, 6",
            "str r0, [sp, 0x3c]",
            "ldrb r0, [r6, 0xa]",
            "ldrb r2, [r6, 8]",
            "ldrb r3, [r6, 6]",
            "str r0, [sp, 0x28]",
            "ldrb r0, [r6, 0xb]",
            "str r2, [sp, 0x14]",
            "ldrb r1, [r6, 7]",
            "str r0, [sp, 0x2c]",
            "ldr r0, [sp, 0x14]",
            "ldrb ip, [r6, 9]",
            "orr r2, r1, r3",
            "orr r2, r0, r2",
            "ldr r0, [sp, 0x28]",
            "orr r2, ip, r2",
            "orr r2, r0, r2",
            "ldr r0, [sp, 0x2c]",
            "str r2, [sp, 0x18]",
            "orrs r0, r0, r2",
            "beq 0x80034cc",
            "ldr r2, [sp, 0x14]",
            "and r1, r1, r3",
            "ldr r0, [sp, 0x2c]",
            "and r1, r2, r1",
            "and r1, ip, r1",
            "ldr ip, [sp, 0x28]",
            "and r1, ip, r1",
            "and r1, r0, r1",
            "cmp r1, 0xff",
            "beq 0x80034cc",
            "tst r3, 1",
            "bne 0x80034cc",
            "cmp fp, 0x88",
            "beq 0x800357c",
            "cmp fp, 0x87",
            "beq 0x8003570",
            "cmp sb, 0",
            "beq 0x80035d8",
            "cmp fp, 0x87",
            "bne 0x8003078",
            "ldr r0, [sp, 0x30]",
            "mov r2, 1",
            "ldr r3, [0x080037f8]",
            "add fp, sp, 0xb8",
            "str r2, [sp]",
            "add ip, sp, 0xa0",
            "add r0, r0, 8",
            "str ip, [sp, 0x1c]",
            "str r0, [sp, 0x28]",
            "ldm r3, {r0, r1}",
            "add r3, r3, 8",
            "str r0, [sp, 0xb8]",
            "strh r1, [fp, 4]",
            "ldm r3, {r0, r1, r2, r3}",
            "stm ip, {r0, r1, r2, r3}",
            "mov r0, r7",
            "mov r1, r8",
            "ldr r2, [sp, 0x28]",
            "mov r3, 6",
            "bl fcn.08002cb4",
            "cmp r0, 0",
            "beq 0x80036fc",
            "add sb, r0, 8",
            "mov r2, 6",
            "ldr r0, [sp, 0x3c]",
            "mov r1, sb",
            "bl memcmp",
            "cmp r0, 0",
            "beq 0x800307c",
            "mov r0, r7",
            "mov r1, r8",
            "mov r2, sb",
            "bl dhd_sta_associated",
            "cmp r0, 0",
            "beq 0x800307c",
            "add r6, r6, 6",
            "mov r1, r8",
            "mov r0, r7",
            "mov r2, r6",
            "bl dhd_sta_associated",
            "cmp r0, 0",
            "ldrne r3, [sp, 0xf0]",
            "movne ip, 1",
            "strbne ip, [r3]",
            "ldrb r3, [r4, 4]",
            "ldr r1, [sp, 0x38]",
            "sub r3, r3, 1",
            "uxtb r3, r3",
            "cmp r3, 2",
            "movhs r0, 0",
            "movlo r0, 1",
            "movlo r4, 0x5e",
            "movhs r4, 0x56",
            "cmp r1, 0",
            "str r0, [sp, 0x2c]",
            "beq 0x8003258",
            "mov r0, r7",
            "mov r1, r8",
            "bl dhd_parp_allnode_is_enabled",
            "cmp r0, 0",
            "movne r6, fp",
            "str r6, [sp, 0x3c]",
            "movw ip, 0x86dd",
            "ldr r0, [r7]",
            "str ip, [sp]",
            "mov r1, r4",
            "ldr ip, [sp, 0x2c]",
            "mov r2, sb",
            "ldr r3, [sp, 0x3c]",
            "str ip, [sp, 4]",
            "add ip, sp, 0xc0",
            "str ip, [sp, 8]",
            "bl fcn.08002f54",
            "cmp r0, 0",
            "str r0, [sl]",
            "beq 0x8003078",
            "mov r1, r5",
            "mov r2, 0x28",
            "ldr r0, [sp, 0xc0]",
            "mov r4, 0",
            "bl memcpy",
            "ldr r3, [sp, 0xc0]",
            "mov r5, 0x20",
            "ldr r1, [sp, 0x28]",
            "mov r2, 0x10",
            "strb r4, [r3, 4]",
            "strb r5, [r3, 5]",
            "mvn r3, 0",
            "ldr r0, [sp, 0xc0]",
            "strb r3, [r0, 7]",
            "add r0, r0, 8",
            "bl memcpy",
            "ldr r0, [sp, 0x38]",
            "cmp r0, r4",
            "beq 0x8003714",
            "ldr r0, [sp, 0xc0]",
            "mov r2, 0x10",
            "add r1, sp, 0xa0",
            "add r0, r0, 0x18",
            "bl memcpy",
            "ldr r3, [sp, 0xc0]",
            "mvn r2, 0x77",
            "add r6, r3, 0x28",
            "strb r2, [r3, 0x28]",
            "strb r4, [r6, 1]",
            "strb r4, [r6, 5]",
            "strb r4, [r6, 6]",
            "strb r4, [r6, 7]",
            "strb r5, [r6, 4]",
            "ldr r1, [sp, 0x28]",
            "mov r2, 0x10",
            "add r0, r6, 8",
            "bl memcpy",
            "mov r3, 2",
            "mov r1, sb",
            "strb r3, [r6, 0x18]",
            "mov r3, 1",
            "strb r3, [r6, 0x19]",
            "mov r2, 6",
            "add r0, r6, 0x1a",
            "bl memcpy",
            "mov r2, 0",
            "strb r2, [r6, 2]",
            "strb r2, [r6, 3]",
            "ldr r1, [sp, 0xc0]",
            "strh r2, [sp, 0xc6]",
            "adds r0, r1, 8",
            "moveq r3, r0",
            "beq 0x80033c8",
            "mov r3, r2",
            "ldrh ip, [r0, r2]",
            "add r2, r2, 2",
            "cmp r2, 0x10",
            "add r3, r3, ip",
            "bne 0x8003368",
            "add r1, r1, 0x18",
            "mov r2, 0",
            "ldrh r0, [r1, r2]",
            "add r2, r2, 2",
            "cmp r2, 0x10",
            "add r3, r3, r0",
            "bne 0x8003384",
            "mov r1, 0",
            "add r2, sp, 0xb0",
            "str r1, [sp, 0xb4]",
            "add r0, r2, 8",
            "add r1, r1, 0x20000000",
            "str r1, [sp, 0xb0]",
            "mov r1, 0x3a",
            "strb r1, [sp, 0xb7]",
            "ldrh r1, [r2], 2",
            "cmp r2, r0",
            "add r3, r3, r1",
            "bne 0x80033b8",
            "mov r2, r6",
            "add r0, r6, 0x20",
            "ldrh r1, [r2], 2",
            "cmp r2, r0",
            "add r3, r3, r1",
            "bne 0x80033d0",
            "uxth r2, r3",
            "mov r0, 2",
            "add r3, r2, r3, lsr 16",
            "add r3, r3, r3, lsr 16",
            "mvn r3, r3",
            "uxth r3, r3",
            "lsr r2, r3, 8",
            "strb r3, [r6, 2]",
            "strb r2, [r6, 3]",
            "b 0x800307c",
            "ldrb r0, [r5, 9]",
            "ldrb r1, [r5, 8]",
            "ldrb r3, [r5, 0xa]",
            "ldrb ip, [r5, 0xb]",
            "orr r1, r0, r1",
            "ldrb r0, [r5, 0xc]",
            "orr r3, r1, r3",
            "ldrb r1, [r5, 0xe]",
            "orr ip, r3, ip",
            "str r0, [sp, 0x28]",
            "ldr r3, [sp, 0x28]",
            "ldrb r0, [r5, 0xd]",
            "orr ip, ip, r3",
            "ldrb r3, [r5, 0xf]",
            "orr r0, ip, r0",
            "ldrb ip, [r5, 0x10]",
            "orr r1, r0, r1",
            "str r3, [sp, 0x28]",
            "ldr r0, [sp, 0x28]",
            "ldrb r3, [r5, 0x11]",
            "orr r1, r1, r0",
            "ldrb r0, [r5, 0x12]",
            "orr ip, r1, ip",
            "ldrb r1, [r5, 0x13]",
            "orr r3, ip, r3",
            "str r0, [sp, 0x28]",
            "ldr ip, [sp, 0x28]",
            "ldrb r0, [r5, 0x14]",
            "orr r3, r3, ip",
            "ldrb ip, [r5, 0x15]",
            "orr r1, r3, r1",
            "ldrb r3, [r5, 0x16]",
            "orr r0, r1, r0",
            "str ip, [sp, 0x28]",
            "ldr r1, [sp, 0x28]",
            "ldrb ip, [r5, 0x17]",
            "orr r0, r0, r1",
            "orr r0, r0, r3",
            "orrs ip, r0, ip",
            "moveq r0, 1",
            "addeq r3, r5, 0x30",
            "addne ip, r5, 8",
            "movne r1, 0",
            "streq r3, [sp, 0x34]",
            "movne r0, 1",
            "streq r0, [sp, 0x38]",
            "strne ip, [sp, 0x34]",
            "strne r1, [sp, 0x38]",
            "b 0x80030b4",
            "ldr r3, [0x080037fc]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "beq 0x8003078",
            "add r1, sp, 0x80",
            "add r0, r6, 6",
            "bl bcm_ether_ntoa",
            "mov r1, r8",
            "mov r2, r0",
            "ldr r0, [0x08003800]",
            "bl printk",
            "mov r0, 1",
            "b 0x800307c",
            "sub r2, r2, 0x40",
            "cmp r2, 1",
            "beq 0x80030bc",
            "add r3, r5, 0x40",
            "ldrb ip, [r5, 0x40]",
            "ldrb r1, [r3, 1]",
            "lsl r1, r1, 3",
            "cmp r2, r1",
            "cmpge r0, ip",
            "beq 0x8003550",
            "rsb r2, r1, r2",
            "add r3, r3, r1",
            "cmp r2, 1",
            "ble 0x80030bc",
            "ldrb r1, [r3, 1]",
            "ldrb ip, [r3]",
            "lsl r1, r1, 3",
            "cmp r1, r2",
            "cmple r0, ip",
            "bne 0x8003528",
            "cmp r3, 0",
            "beq 0x80030bc",
            "ldrb r2, [r3, 1]",
            "cmp r2, 1",
            "addeq r3, r3, 2",
            "streq r3, [sp, 0x3c]",
            "bne 0x80030bc",
            "b 0x80030c4",
            "ldr r1, [sp, 0x38]",
            "cmp r1, 0",
            "bne 0x8003150",
            "mov ip, 1",
            "mov r0, r7",
            "mov r1, r8",
            "ldr r2, [sp, 0x34]",
            "mov r3, 6",
            "str ip, [sp]",
            "bl fcn.08002cb4",
            "cmp r0, 0",
            "beq 0x80036c4",
            "ldrb r3, [r5, 0x28]",
            "cmp r3, 0x88",
            "beq 0x8003654",
            "cmp sb, 0",
            "beq 0x8003078",
            "ldrb fp, [r5, 0x28]",
            "cmp fp, 0x88",
            "bne 0x8003158",
            "ldr r2, [sp, 0x30]",
            "ldrb r3, [r2, 4]",
            "tst r3, 0xc0",
            "moveq r0, 0",
            "movne r0, 1",
            "b 0x800307c",
            "mov ip, 1",
            "mov r0, r7",
            "mov r1, r8",
            "ldr r2, [sp, 0x34]",
            "mov r3, 6",
            "str ip, [sp]",
            "bl fcn.08002cb4",
            "cmp r0, 0",
            "bne 0x80035a0",
            "mov r0, r7",
            "mov r1, r8",
            "ldr r2, [sp, 0x34]",
            "mov r3, 6",
            "str sb, [sp]",
            "bl fcn.08002cb4",
            "cmp r0, 0",
            "bne 0x80035a0",
            "ldr r3, [0x080037fc]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "bne 0x800378c",
            "mov ip, 6",
            "mov r0, r7",
            "str ip, [sp]",
            "mov r1, r8",
            "mov ip, 0",
            "ldr r2, [sp, 0x3c]",
            "ldr r3, [sp, 0x34]",
            "str ip, [sp, 4]",
            "bl fcn.08002d74",
            "b 0x80035a0",
            "mov r1, r8",
            "mov ip, 0",
            "mov r0, r7",
            "ldr r2, [sp, 0x34]",
            "mov r3, 6",
            "str ip, [sp]",
            "bl fcn.08002cb4",
            "subs r1, r0, 0",
            "beq 0x80035ac",
            "add fp, sp, 0xb8",
            "add r1, r1, 8",
            "mov r0, fp",
            "mov r2, 6",
            "bl memcpy",
            "ldr r3, [0x080037fc]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "bne 0x80037c0",
            "mov ip, 6",
            "mov r0, r7",
            "str ip, [sp]",
            "mov r1, r8",
            "mov ip, 0",
            "mov r2, fp",
            "ldr r3, [sp, 0x34]",
            "str ip, [sp, 4]",
            "bl fcn.08002b54",
            "b 0x80035ac",
            "ldr r3, [0x080037fc]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "bne 0x8003758",
            "mov ip, 6",
            "mov r0, r7",
            "str ip, [sp]",
            "mov r1, r8",
            "mov ip, 1",
            "ldr r2, [sp, 0x3c]",
            "ldr r3, [sp, 0x34]",
            "str ip, [sp, 4]",
            "bl fcn.08002d74",
            "b 0x80035a0",
            "mov r0, r7",
            "mov r1, r8",
            "bl dhd_parp_discard_is_enabled",
            "eor r0, r0, 1",
            "uxtb r0, r0",
            "b 0x800307c",
            "ldr r0, [sp, 0xc0]",
            "mov r2, 0x10",
            "ldr r1, [sp, 0x34]",
            "add r0, r0, 0x18",
            "bl memcpy",
            "ldr r3, [sp, 0xc0]",
            "mvn r2, 0x77",
            "strb r2, [r3, 0x28]",
            "add r6, r3, 0x28",
            "ldr r1, [sp, 0x38]",
            "mov r3, 0x60",
            "strb r3, [r6, 4]",
            "strb r1, [r6, 1]",
            "strb r1, [r6, 5]",
            "strb r1, [r6, 6]",
            "strb r1, [r6, 7]",
            "b 0x8003314",
            "add r1, sp, 0x80",
            "ldr r0, [sp, 0x3c]",
            "bl bcm_ether_ntoa",
            "add r1, sp, 0x40",
            "mov fp, r0",
            "ldr r0, [sp, 0x34]",
            "bl bcm_ipv6_ntoa",
            "mov r1, r8",
            "mov r3, r0",
            "mov r2, fp",
            "ldr r0, [0x08003804]",
            "bl printk",
            "b 0x80036d4",
            "add r1, sp, 0x80",
            "ldr r0, [sp, 0x3c]",
            "bl bcm_ether_ntoa",
            "add r1, sp, 0x40",
            "mov fp, r0",
            "ldr r0, [sp, 0x34]",
            "bl bcm_ipv6_ntoa",
            "mov r1, r8",
            "mov r3, r0",
            "mov r2, fp",
            "ldr r0, [0x08003808]",
            "bl printk",
            "b 0x800362c",
            "add r1, sp, 0x80",
            "mov r0, fp",
            "bl bcm_ether_ntoa",
            "add r1, sp, 0x40",
            "mov r2, r0",
            "ldr r0, [sp, 0x34]",
            "str r2, [sp, 0x24]",
            "bl bcm_ipv6_ntoa",
            "mov r1, r8",
            "mov r3, r0",
            "ldr r2, [sp, 0x24]",
            "ldr r0, [0x0800380c]",
            "bl printk",
            "b 0x800369c"
        ]
    },
    "fcn.08002f54": {
        "function_address": "0x08002f54",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "add r4, r1, 2",
            "mov r1, r4",
            "mov sb, r2",
            "mov sl, r3",
            "ldrh r7, [sp, 0x20]",
            "ldrb r8, [sp, 0x24]",
            "bl osl_pktget",
            "subs r6, r0, 0",
            "beq 0x8003008",
            "mov r1, 2",
            "bl skb_pull",
            "ldr r5, [r6, 0xbc]",
            "mov r2, 6",
            "mov r1, sb",
            "add r0, r5, r2",
            "bl memcpy",
            "mov r0, r5",
            "mov r1, sl",
            "mov r2, 6",
            "bl memcpy",
            "cmp r8, 0",
            "bne 0x8002fd4",
            "lsr r2, r7, 8",
            "mov r3, 0xe",
            "strb r7, [r5, 0xd]",
            "strb r2, [r5, 0xc]",
            "add r5, r5, r3",
            "ldr r3, [sp, 0x28]",
            "str r5, [r3]",
            "mov r0, r6",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}",
            "uxth r4, r4",
            "mov r2, 6",
            "add r0, r5, 0xe",
            "ldr r1, [0x0800302c]",
            "lsr r3, r4, 8",
            "strb r4, [r5, 0xd]",
            "strb r3, [r5, 0xc]",
            "bl memcpy",
            "lsr r2, r7, 8",
            "strb r7, [r5, 0x15]",
            "mov r3, 0x16",
            "strb r2, [r5, 0x14]",
            "b 0x8002fc0",
            "ldr r3, [0x08003030]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "beq 0x8002fcc",
            "ldr r1, [0x08003034]",
            "movw r2, 0x176",
            "ldr r0, [0x08003038]",
            "bl printk",
            "b 0x8002fcc"
        ]
    },
    "fcn.0800cd90": {
        "function_address": "0x0800cd90",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x1c",
            "str r2, [sp, 0xc]",
            "movw r2, 0",
            "movt r2, 0",
            "mov r5, r0",
            "ldr r3, [r2]",
            "mov fp, r1",
            "tst r3, 4",
            "bne 0x800cf7c",
            "ldr r3, [sp, 0xc]",
            "cmp r3, 0",
            "beq 0x800cf50",
            "mov r7, 0",
            "mov r6, r7",
            "b 0x800ce44",
            "ldr r1, [r8, 0x2c]",
            "str r6, [sp]",
            "bl dhd_alloc_ring_space",
            "subs r1, r0, 0",
            "beq dhd_msg_level",
            "cmp fp, 0",
            "strb r6, [r1, 1]",
            "movne r3, 0xd",
            "moveq r2, 0xb",
            "strbne r3, [r1]",
            "add r3, r4, 0x30",
            "strbeq r2, [r1]",
            "mov r0, r5",
            "strh sb, [r3, 4]",
            "mov r2, r1",
            "str sl, [r3, 8]",
            "mov r3, 1",
            "str r4, [r1, 4]",
            "add r7, r7, r3",
            "strb r6, [r1, 2]",
            "ldrh r4, [r4, 0x78]",
            "str r6, [r1, 0x14]",
            "str sl, [r1, 0x10]",
            "strh r4, [r1, 8]",
            "ldr r1, [r8, 0x2c]",
            "bl prot_ring_write_complete",
            "ldr r3, [sp, 0xc]",
            "cmp r3, r7",
            "bls 0x800ced8",
            "cmp fp, 0",
            "mov r2, 0",
            "moveq r1, 0x2000",
            "movne r1, 0x800",
            "ldr r0, [r5]",
            "strh r2, [sp, 0x16]",
            "ldr r8, [r5, 8]",
            "bl osl_pktget",
            "subs r4, r0, 0",
            "mov r2, 0x140",
            "beq dhd_msg_level",
            "ldr r3, [r4, 0x6c]",
            "ldr sb, [r4, 0x78]",
            "tst r3, 2",
            "ldrne r1, [r4, 0xbc]",
            "moveq r2, sb",
            "ldreq r1, [r4, 0xbc]",
            "addne r3, r1, 0x140",
            "strne r3, [r4, 0x18]",
            "mov r3, 2",
            "ldr r0, [r5]",
            "stm sp, {r4, r6}",
            "bl osl_dma_map",
            "subs sl, r0, 0",
            "mov r2, 1",
            "add r3, sp, 0x16",
            "mov r0, r5",
            "bne 0x800cdd0",
            "movw r2, 0",
            "movt r2, 0",
            "ldr r3, [r2]",
            "tst r3, 1",
            "bne 0x800cf70",
            "ldr r0, [r5]",
            "mov r1, r4",
            "mov r2, 0",
            "bl osl_pktfree",
            "uxth r4, r7",
            "movw r2, 0",
            "movt r2, 0",
            "ldr r3, [r2]",
            "tst r3, 4",
            "bne 0x800cf90",
            "mov r0, r4",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "movw r2, 0",
            "movt r2, 0",
            "ldr r3, [r2]",
            "tst r3, 1",
            "beq 0x800ced8",
            "ldr r1, [0x0800cfa4]",
            "movw r2, 0x61f",
            "ldr r0, [0x0800cfa8]",
            "bl printk",
            "b 0x800ced8",
            "movw r2, 0",
            "movt r2, 0",
            "ldr r3, [r2]",
            "tst r3, 1",
            "bne 0x800cf5c",
            "ldr r0, [r5]",
            "mov r1, sl",
            "mov r2, sb",
            "mov r3, 2",
            "bl osl_dma_unmap",
            "b 0x800cec8",
            "ldr r4, [sp, 0xc]",
            "mov r7, r4",
            "b dhd_msg_level",
            "movw r2, 0x632",
            "ldr r1, [0x0800cfa4]",
            "ldr r0, [0x0800cfac]",
            "bl printk",
            "b 0x800cf38",
            "ldr r0, [0x0800cfb0]",
            "bl printk",
            "b 0x800cec8",
            "ldr r1, [sp, 0xc]",
            "mov r2, fp",
            "ldr r0, [0x0800cfb4]",
            "bl printk",
            "b 0x800cdb8",
            "mov r1, r7",
            "mov r2, fp",
            "ldr r0, [0x0800cfb8]",
            "bl printk",
            "b 0x800cef0"
        ]
    },
    "fcn.0800cfbc": {
        "function_address": "0x0800cfbc",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r5, r0",
            "ldr r3, [0x0800d010]",
            "ldr r4, [r0, 8]",
            "ldr r3, [r3]",
            "tst r3, 4",
            "bne 0x800d004",
            "ldrh r3, [r4, 0x1a]",
            "mov r0, r5",
            "ldrh r2, [r4, 0x16]",
            "mov r1, 0",
            "rsb r2, r3, r2",
            "bl fcn.0800cd90",
            "ldrh r3, [r4, 0x1a]",
            "add r3, r0, r3",
            "mov r0, 0",
            "strh r3, [r4, 0x1a]",
            "pop {r3, r4, r5, pc}",
            "ldr r0, [0x0800d014]",
            "bl printk",
            "b 0x800cfd8"
        ]
    },
    "fcn.0800f284": {
        "function_address": "0x0800f284",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "sub sp, sp, 8",
            "mov r5, r0",
            "mov r6, r1",
            "mov r4, r2",
            "bl osl_acp_war_enab",
            "cmp r0, 0",
            "bne 0x800f2bc",
            "ldr r3, [r6]",
            "ldr r3, [r3, r4]",
            "str r3, [sp, 4]",
            "ldr r0, [sp, 4]",
            "add sp, sp, 8",
            "pop {r4, r5, r6, pc}",
            "ldr r0, [r5]",
            "mov r3, 4",
            "ldr r1, [r6]",
            "mov r2, sp",
            "ldr r0, [r0]",
            "add r1, r1, r4",
            "bl osl_pcie_rreg",
            "ldr r3, [sp]",
            "str r3, [sp, 4]",
            "b 0x800f2b0"
        ]
    },
    "fcn.0802171c": {
        "function_address": "0x0802171c",
        "instructions": [
            "ldr r0, [sp, 0x18]",
            "ldr r3, [r0, 0x3c]",
            "cmp r3, 0",
            "ldrne r1, [sp, 0xc]",
            "ldreq r2, [sp, 0xc]",
            "rsbne r2, r3, r1",
            "ldrne r1, [sp, 0x14]",
            "uxthne r2, r2",
            "streq r2, [sp, 0x10]",
            "ldrne r0, [r1], r3",
            "ldr r3, [fp, 0x30]",
            "strne r2, [sp, 0xc]",
            "strne r0, [sp, 0x10]",
            "ldrh r4, [r3, 6]",
            "ldr r0, [sp, 0x10]",
            "strne r1, [sp, 0x14]",
            "cmp r4, 0",
            "uxth r8, r0",
            "beq 0x80217c4",
            "cmp r8, 0",
            "beq 0x8021748",
            "rsb r3, r4, 0",
            "rsb sb, r4, r8",
            "uxth r3, r3",
            "uxth sb, sb",
            "ldr r5, [sp, 0x14]",
            "str r3, [sp, 8]",
            "b 0x80216d8",
            "tst r3, 4",
            "bne 0x8021814",
            "movw r3, 0",
            "movt r3, 0",
            "add r6, r3, r6, lsl 2",
            "ldr r3, [r6, 0x12c]",
            "cmp r3, 0",
            "beq 0x80216a8",
            "mov r0, r7",
            "mov r1, r5",
            "mov r2, r4",
            "blx r3",
            "cmp r4, r8",
            "bhi 0x802177c",
            "ldr r0, [sp, 8]",
            "rsb r8, r4, r8",
            "uxth r8, r8",
            "add sb, sb, r0",
            "uxth sb, sb",
            "add r3, sb, r4",
            "uxth r3, r3",
            "cmp r3, 0",
            "beq 0x8021748",
            "add r5, r5, r4",
            "ldr ip, [r7, 8]",
            "mov r3, r4",
            "mov r0, r7",
            "mov r1, fp",
            "mov r2, r5",
            "ldr ip, [ip, 0xac]",
            "blx ip",
            "ldr r3, [sl]",
            "mov r6, r0",
            "tst r3, 4",
            "bne 0x80217fc",
            "cmp r6, 0x83",
            "ldrne r3, [sl]",
            "bne 0x8021678",
            "ldr r0, [0x08021858]",
            "mov r1, r5",
            "mov r2, r4",
            "bl fcn.0802171c",
            "ldr r3, [sl]",
            "tst r3, 1",
            "beq 0x8021678",
            "ldr r0, [0x0802185c]",
            "mov r1, r4",
            "bl 0x8021734",
            "movw r2, 0",
            "movt r2, 0",
            "ldr r3, [r2]",
            "b 0x8021678",
            "ldmib r7, {r0, r1}",
            "bl fcn.08021590",
            "ldr r1, [sp, 0xc]",
            "ldr r2, [sp, 0x10]",
            "rsb r3, r2, r1",
            "uxth r3, r3",
            "cmp r3, 0",
            "str r3, [sp, 0xc]",
            "beq 0x80217b8",
            "ldr r3, [sp, 0x14]",
            "add r3, r3, r2",
            "str r3, [sp, 0x14]",
            "b 0x8021608",
            "ldmib r7, {r0, r1}",
            "bl fcn.08021590",
            "ldr r3, [sl]",
            "and r3, r3, 1",
            "cmp r3, 0",
            "bne 0x8021838",
            "ldr r1, [sp, 0xc]",
            "mvn r0, 0",
            "ldr r2, [sp, 0x10]",
            "str r0, [sp, 0x1c]",
            "rsb r3, r2, r1",
            "uxth r3, r3",
            "cmp r3, 0",
            "str r3, [sp, 0xc]",
            "bne 0x802176c",
            "ldr r0, [sp, 0x1c]",
            "add sp, sp, 0x24",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r3, [sl]",
            "tst r3, 1",
            "beq 0x8021794",
            "ldrh r2, [fp, 2]",
            "mov r3, r4",
            "ldr r1, [0x08021860]",
            "ldr r0, [0x08021864]",
            "str r8, [sp]",
            "bl 0x80217e4",
            "movw r1, 0",
            "movt r1, 0",
            "ldr r3, [r1]",
            "and r3, r3, 1",
            "b 0x802178c",
            "mov r1, r6",
            "mov r2, r4",
            "mov r3, r8",
            "ldr r0, [0x08021868]",
            "bl 0x802180c",
            "b 0x8021704",
            "mov r1, r6",
            "ldr r0, [0x0802186c]",
            "bl 0x802181c",
            "b 0x8021680",
            "mvn r3, 0",
            "ldr r2, [sp, 0x10]",
            "ldr r1, [0x08021870]",
            "ldr r0, [0x08021878]",
            "str r3, [sp, 0x1c]",
            "bl 0x802184c",
            "b 0x8021750"
        ]
    }
}