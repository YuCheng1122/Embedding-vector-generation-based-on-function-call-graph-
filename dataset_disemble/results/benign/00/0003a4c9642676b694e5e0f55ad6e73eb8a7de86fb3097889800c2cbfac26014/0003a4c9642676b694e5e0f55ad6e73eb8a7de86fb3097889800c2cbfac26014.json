{
    "sym.dhd_runner_iovar_dump": {
        "function_address": "0x08001fc8",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sl, lr}",
            "mov r5, r0",
            "ldr sl, [r0, 0x110]",
            "sub sp, sp, 0x234",
            "mov r6, r1",
            "mov r0, r1",
            "ldr r1, [0x080021e8]",
            "mov r4, 5",
            "sub r3, sl, 1",
            "ldr r8, [r5, 0x118]",
            "rsbs sl, r3, 0",
            "mov r7, 0",
            "adc sl, sl, r3",
            "bl bcm_bprintf",
            "ldr r2, [r5]",
            "movw ip, 0x1974",
            "and r3, r8, 1",
            "ldr r1, [0x080021ec]",
            "ubfx r8, r8, 1, 1",
            "mov r0, r6",
            "ldr r2, [r2, ip]",
            "str sl, [sp]",
            "str r8, [sp, 4]",
            "bl bcm_bprintf",
            "ldr r3, [r5, 0xb0]",
            "mov r0, r6",
            "ldr r1, [0x080021f0]",
            "ldr r2, [r3]",
            "bl bcm_bprintf",
            "ldr r2, [r5, 0xb0]",
            "add r3, r7, 6",
            "mov r0, r6",
            "ldr r1, [0x080021f4]",
            "ldr r3, [r2, r3, lsl 2]",
            "add r2, r2, r7, lsl 2",
            "add r7, r7, 1",
            "ldr r2, [r2, 4]",
            "bl bcm_bprintf",
            "subs r4, r4, 1",
            "bne 0x800203c",
            "ldr r1, [0x080021f8]",
            "mov r0, r6",
            "bl bcm_bprintf",
            "ldr r3, [r5]",
            "movw r7, 0x1974",
            "ldr r8, [0x080021fc]",
            "add sl, sp, 0x230",
            "strb r4, [sl, -0x228]!",
            "mov r2, 0x200",
            "ldr r3, [r3, r7]",
            "mov r1, sl",
            "add r0, r8, 0x14",
            "add r3, r3, r3, lsl 1",
            "add r0, r0, r3, lsl 4",
            "bl fcn.08001e40",
            "ldr r2, [r5]",
            "mov r0, r6",
            "ldr r1, [0x08002200]",
            "mov r3, sl",
            "ldr r2, [r2, r7]",
            "add r2, r2, r2, lsl 1",
            "add r2, r8, r2, lsl 4",
            "ldr r2, [r2, 0x14]",
            "bl bcm_bprintf",
            "ldr r2, [r5, 0xa4]",
            "cmp r2, 0",
            "beq 0x80021a4",
            "mov r3, 5",
            "mov r1, r4",
            "add r0, sp, 0x230",
            "subs r3, r3, 1",
            "add ip, r0, r4, lsl 2",
            "add r4, r4, 1",
            "str r1, [ip, -0x14]",
            "str r1, [ip, -0x28]",
            "bne 0x80020dc",
            "ldr ip, [r5, 0x90]",
            "cmp ip, 2",
            "ble 0x8002148",
            "mov r3, 2",
            "ldrh r1, [r2, 0x2a]",
            "add lr, sp, 0x230",
            "rev16 r1, r1",
            "uxth r1, r1",
            "add r3, r3, 1",
            "cmp r3, ip",
            "ubfx r0, r1, 2, 1",
            "ubfx r1, r1, 4, 4",
            "add r1, r1, r0, lsl 2",
            "add r2, r2, 0x10",
            "add r1, r1, r0",
            "add r1, lr, r1, lsl 2",
            "ldr r0, [r1, -0x28]",
            "add r0, r0, 1",
            "str r0, [r1, -0x28]",
            "bne 0x8002108",
            "ldr r3, [r5, 0xb0]",
            "mov r0, r6",
            "ldr r1, [0x08002204]",
            "mov r7, 5",
            "mov r4, 0",
            "ldr r2, [r3]",
            "bl bcm_bprintf",
            "add r0, sp, 0x230",
            "ldr r2, [r8, r4, lsl 2]",
            "add r3, r0, r4, lsl 2",
            "mov r0, r6",
            "add r4, r4, 1",
            "mov r1, r3",
            "ldr r3, [r3, -0x28]",
            "ldr ip, [r1, -0x14]",
            "ldr r1, [0x08002208]",
            "str ip, [sp]",
            "bl bcm_bprintf",
            "subs r7, r7, 1",
            "bne 0x8002164",
            "mov r0, r6",
            "ldr r1, [0x080021f8]",
            "bl bcm_bprintf",
            "ldr ip, [r5, 0x140]",
            "mov r0, r6",
            "ldr r2, [r5, 0x138]",
            "ldr r3, [r5, 0x13c]",
            "ldr r1, [0x0800220c]",
            "str ip, [sp]",
            "bl bcm_bprintf",
            "ldr ip, [r5, 0x14c]",
            "mov r0, r6",
            "ldr r2, [r5, 0x144]",
            "ldr r3, [r5, 0x148]",
            "ldr r1, [0x08002210]",
            "str ip, [sp]",
            "bl bcm_bprintf",
            "mov r0, 0",
            "add sp, sp, 0x234",
            "pop {r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "fcn.08001e40": {
        "function_address": "0x08001e40",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r4, r1",
            "ldr r1, [r0]",
            "sub sp, sp, 0x18",
            "mov r7, r0",
            "mov r6, r2",
            "cmp r1, 5",
            "ldrls pc, [pc, r1, lsl 2]",
            "b 0x8001f84",
            "add sp, sp, 0x18",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}",
            "ldr r3, [0x08001fc0]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "beq 0x8001ec8",
            "ldr r0, [0x08001fc4]",
            "add sp, sp, 0x18",
            "pop {r4, r5, r6, r7, r8, sb, sl, lr}",
            "b printk"
        ]
    },
    "sym.dhd_runner_iovar_get_policy": {
        "function_address": "0x08002404",
        "instructions": [
            "ldr r3, [0x0800250c]",
            "push {r4, r5, r6, r7, lr}",
            "mov r6, r0",
            "sub sp, sp, 0x21c",
            "mov r5, r1",
            "mov r4, r2",
            "ldr r3, [r3]",
            "tst r3, 2",
            "bne 0x80024f0",
            "mov r2, r4",
            "ldr r7, [r6]",
            "mov r1, r5",
            "add r0, sp, 0x208",
            "bl bcm_binit",
            "add r0, sp, 0x208",
            "ldr r1, [0x08002510]",
            "bl bcm_bprintf",
            "movw r2, 0x1974",
            "ldr r3, [0x08002514]",
            "ldr r6, [r7, r2]",
            "mov r4, 0",
            "mov r7, r4",
            "add r5, r3, 0xbc",
            "add r6, r6, r6, lsl 1",
            "add r6, r3, r6, lsl 4",
            "b 0x800247c",
            "add r4, r4, 1",
            "bl bcm_bprintf",
            "cmp r4, 6",
            "beq 0x80024d8",
            "ldr r2, [r5, 4]!",
            "add r0, sp, 0x208",
            "ldr r1, [0x08002518]",
            "bl bcm_bprintf",
            "ldr r3, [r6]",
            "mov r2, r4",
            "add r0, sp, 0x208",
            "ldr r1, [0x0800251c]",
            "cmp r3, r4",
            "bne 0x800246c",
            "add r1, sp, 8",
            "mov r0, r6",
            "mov r2, 0x200",
            "strb r7, [sp, 8]",
            "bl fcn.08001e40",
            "mov r2, r4",
            "add r0, sp, 0x208",
            "ldr r1, [0x08002520]",
            "add r3, sp, 8",
            "add r4, r4, 1",
            "bl bcm_bprintf",
            "cmp r4, 6",
            "bne 0x800247c",
            "ldr r3, [sp, 0x20c]",
            "cmp r3, 0",
            "mvneq r0, 0xd",
            "movne r0, 0",
            "add sp, sp, 0x21c",
            "pop {r4, r5, r6, r7, pc}",
            "mov r2, r6",
            "ldr r1, [0x08002524]",
            "mov r3, r5",
            "ldr r0, [0x08002528]",
            "str r4, [sp]",
            "bl printk",
            "b 0x8002428"
        ]
    },
    "sym.dhd_runner_iovar_set_rxoffl": {
        "function_address": "0x080034b0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r6, r0",
            "ldr r4, [0x080035d4]",
            "sub sp, sp, 0x20",
            "mov r7, r1",
            "mov r5, r2",
            "ldr r3, [r4]",
            "tst r3, 2",
            "bne 0x80035a8",
            "rsbs r3, r5, 1",
            "movlo r3, 0",
            "cmp r5, 0x200",
            "movle r5, r3",
            "orrgt r5, r3, 1",
            "cmp r5, 0",
            "beq 0x8003508",
            "ldr r3, [r4]",
            "tst r3, 1",
            "mvneq r0, 1",
            "bne 0x80035c4",
            "add sp, sp, 0x20",
            "pop {r4, r5, r6, r7, r8, pc}",
            "mov r1, 0x10",
            "add r0, sp, 0xc",
            "bl __memzero",
            "ldr r1, [0x080035d8]",
            "add r2, sp, 0x1c",
            "mov r0, r7",
            "movw r8, 0x1974",
            "bl sscanf",
            "ldr ip, [sp, 0x1c]",
            "mov r3, 0x400",
            "mov r1, 0x10",
            "ldr r2, [0x080035dc]",
            "str r3, [sp]",
            "add r0, sp, 0xc",
            "cmp ip, 0",
            "movle ip, 0",
            "movgt ip, 1",
            "mov r3, ip",
            "str ip, [sp, 0x1c]",
            "bl snprintf",
            "ldr r0, [r6]",
            "mov r1, 2",
            "add r2, sp, 0xc",
            "mov r3, 0x10",
            "ldr r0, [r0, r8]",
            "bl fcn.080023b0",
            "cmp r0, 0",
            "movge r0, r5",
            "bge 0x8003500",
            "ldr r3, [r4]",
            "tst r3, 1",
            "mvneq r0, 0",
            "beq 0x8003500",
            "ldr r3, [r6]",
            "ldr r0, [0x080035e0]",
            "ldr r1, [sp, 0x1c]",
            "ldr r2, [r3, r8]",
            "bl printk",
            "mvn r0, 0",
            "b 0x8003500",
            "mov r2, r6",
            "ldr r1, [0x080035e4]",
            "mov r3, r7",
            "ldr r0, [0x080035e8]",
            "str r5, [sp]",
            "bl printk",
            "b 0x80034d4",
            "ldr r0, [0x080035ec]",
            "bl printk",
            "mvn r0, 1",
            "b 0x8003500"
        ]
    },
    "fcn.080023b0": {
        "function_address": "0x080023b0",
        "instructions": [
            "push {r4, r5, lr}",
            "mov r5, r2",
            "ldr r2, [0x08002400]",
            "rsb lr, r1, r1, lsl 4",
            "sub sp, sp, 0x14",
            "mov ip, r0",
            "mov r4, r3",
            "add r2, r2, lr",
            "mov r3, ip",
            "mov r1, 0x10",
            "mov r0, sp",
            "bl snprintf",
            "mov r3, 0",
            "mov r0, sp",
            "mov r1, r5",
            "mov r2, r4",
            "strb r3, [sp, 0xe]",
            "bl kerSysScratchPadSet",
            "add sp, sp, 0x14",
            "pop {r4, r5, pc}"
        ]
    },
    "sym.dhd_runner_iovar_get_rxoffl": {
        "function_address": "0x080035f0",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "mov r5, r0",
            "ldr r4, [0x080036ac]",
            "sub sp, sp, 0x24",
            "mov r7, r1",
            "mov r6, r2",
            "ldr r3, [r4]",
            "tst r3, 2",
            "bne 0x8003674",
            "mov r0, r5",
            "add r1, sp, 0x18",
            "bl fcn.08002698",
            "cmp r0, 0",
            "beq 0x8003640",
            "ldr r3, [r4]",
            "tst r3, 1",
            "mvneq r0, 0",
            "bne 0x8003690",
            "add sp, sp, 0x24",
            "pop {r4, r5, r6, r7, pc}",
            "mov r1, r7",
            "mov r2, r6",
            "add r0, sp, 8",
            "bl bcm_binit",
            "add r0, sp, 8",
            "ldr r1, [0x080036b0]",
            "ldr r2, [sp, 0x18]",
            "bl bcm_bprintf",
            "ldr r3, [sp, 0xc]",
            "cmp r3, 0",
            "movne r0, 0",
            "mvneq r0, 0xd",
            "b 0x8003638",
            "mov r2, r5",
            "ldr r1, [0x080036b4]",
            "mov r3, r7",
            "ldr r0, [0x080036b8]",
            "str r6, [sp]",
            "bl printk",
            "b 0x8003614",
            "ldr r2, [r5]",
            "movw r3, 0x1974",
            "ldr r0, [0x080036bc]",
            "ldr r1, [r2, r3]",
            "bl printk",
            "mvn r0, 0",
            "b 0x8003638"
        ]
    },
    "fcn.08002698": {
        "function_address": "0x08002698",
        "instructions": [
            "push {r4, r5, lr}",
            "mov r2, 1",
            "sub sp, sp, 0x1c",
            "mov r3, 0x400",
            "mov r4, r1",
            "mov r5, r0",
            "stm r4, {r2, r3}",
            "mov r1, 0x10",
            "mov r0, sp",
            "bl __memzero",
            "ldr ip, [r5]",
            "movw r0, 0x1974",
            "mov r1, 2",
            "mov r2, sp",
            "mov r3, 0x10",
            "ldr r0, [ip, r0]",
            "bl fcn.0800263c",
            "cmp r0, 0",
            "beq 0x800271c",
            "ldr r1, [0x08002728]",
            "add r2, sp, 0x10",
            "add r3, sp, 0x14",
            "mov r0, sp",
            "bl sscanf",
            "ldr r2, [sp, 0x10]",
            "ldr r3, [sp, 0x14]",
            "cmp r2, 0",
            "sub r1, r3, 1",
            "movle r2, 0",
            "movgt r2, 1",
            "cmp r1, 0x4000",
            "str r2, [r4]",
            "strlo r3, [r4, 4]",
            "mov r0, 0",
            "add sp, sp, 0x1c",
            "pop {r4, r5, pc}"
        ]
    },
    "sym.dhd_runner_iovar_set_policy": {
        "function_address": "0x08003ca4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r6, r0",
            "sub sp, sp, 0x39c",
            "mov r2, 0x30",
            "mov r5, r1",
            "add r0, sp, 0x328",
            "ldr r1, [r6, 0xac]",
            "add r4, sp, 0x398",
            "bl memcpy",
            "add r0, sp, 0x28",
            "mov r1, 0x300",
            "bl __memzero",
            "str r5, [r4, -8]!",
            "mov r2, 0",
            "ldr r1, [0x08003c58]",
            "mov r0, r4",
            "bl bcmstrtok",
            "subs r5, r0, 0",
            "beq 0x800389c",
            "mov r3, 0",
            "strb r3, [sp, 0x358]",
            "ldrb r3, [r5]",
            "cmp r3, 0x2d",
            "addne r7, sp, 0x358",
            "beq strlen",
            "ldr r8, [0x08003c5c]",
            "mov r5, 0",
            "ldr sl, [r8], 4",
            "mov r0, sl",
            "bl strlen",
            "mov r1, sl",
            "mov r2, r0",
            "mov r0, r7",
            "bl strncmp",
            "subs r2, r0, 0",
            "beq 0x80037a4",
            "add r5, r5, 1",
            "cmp r5, 6",
            "bne 0x800372c",
            "ldr r3, [0x08003c60]",
            "str r5, [sp, 0x328]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "bne 0x8003bc0",
            "mvn ip, 1",
            "mov r0, ip",
            "add sp, sp, 0x39c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "bl strlen",
            "cmp r0, 4",
            "add r7, sp, 0x358",
            "bls 0x8003724",
            "mov r0, r5",
            "ldr r1, [0x08003c64]",
            "mov r2, r7",
            "bl sscanf",
            "b 0x8003724",
            "mov r0, r4",
            "ldr r1, [0x08003c58]",
            "str r5, [sp, 0x328]",
            "bl bcmstrtok",
            "subs r5, r0, 0",
            "beq 0x8003bd0",
            "ldr r3, [sp, 0x328]",
            "cmp r3, 5",
            "ldrls pc, [pc, r3, lsl 2]",
            "b 0x8003840",
            "ldr r0, [r6]",
            "movw r4, 0x1974",
            "mov r1, 1",
            "add r2, sp, 0x28",
            "mov r3, 0x300",
            "ldr r0, [r0, r4]",
            "bl fcn.080023b0",
            "cmp r0, 0",
            "blt 0x80038bc",
            "ldr r6, [r6]",
            "add r5, sp, 0x328",
            "ldm r5!, {r0, r1, r2, r3}",
            "mov ip, 0",
            "ldr r4, [r6, r4]",
            "ldr r6, [0x08003c6c]",
            "add r4, r4, r4, lsl 1",
            "add r4, r6, r4, lsl 4",
            "stm r4!, {r0, r1, r2, r3}",
            "ldm r5!, {r0, r1, r2, r3}",
            "stm r4!, {r0, r1, r2, r3}",
            "ldm r5, {r0, r1, r2, r3}",
            "stm r4, {r0, r1, r2, r3}",
            "b 0x8003774",
            "ldr r3, [0x08003c60]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "beq 0x8003770",
            "ldr r0, [0x08003c70]",
            "bl printk",
            "mvn ip, 1",
            "b 0x8003774",
            "ldr r3, [0x08003c60]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "mvneq ip, 0",
            "beq 0x8003774",
            "ldr r3, [r6]",
            "ldr r0, [0x08003c74]",
            "ldr r1, [r3, r4]",
            "bl printk",
            "mvn ip, 0",
            "b 0x8003774",
            "ldr r0, [0x08003c98]",
            "bl printk",
            "mvn ip, 1",
            "b 0x8003774",
            "ldr r3, [0x08003c60]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "beq 0x8003770",
            "ldr r0, [0x08003c9c]",
            "bl printk",
            "mvn ip, 1",
            "b 0x8003774",
            "push {r4, r5, r6, r7, lr}",
            "mov r7, r0",
            "ldr r5, [0x08003d38]",
            "sub sp, sp, 0xc",
            "mov r6, r1",
            "mov r4, r2",
            "ldr r3, [r5]",
            "tst r3, 2",
            "bne 0x8003d10",
            "rsbs r3, r4, 1",
            "movlo r3, 0",
            "cmp r4, 0x200",
            "movle r4, r3",
            "orrgt r4, r3, 1",
            "cmp r4, 0",
            "beq 0x8003cfc",
            "ldr r3, [r5]",
            "tst r3, 1",
            "bne 0x8003d2c",
            "mvn r0, 1",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, pc}",
            "mov r0, r7",
            "mov r1, r6",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, lr}",
            "b 0x80036c0",
            "mov r2, r7",
            "ldr r1, [0x08003d3c]",
            "mov r3, r6",
            "ldr r0, [0x08003d40]",
            "str r4, [sp]",
            "bl printk",
            "b case.0x8001e5c.0",
            "ldr r0, [0x08003d44]",
            "bl printk",
            "b 0x8003cf0",
            "movw r2, 0x4860",
            "ldr r2, [r4, r2]",
            "add r1, r1, 0x20",
            "ldr r1, [r6, r1, lsl 2]",
            "cmp r1, r2",
            "movne r3, 0",
            "beq 0x8007228",
            "str r3, [sp, 4]",
            "mov r0, r4",
            "mov sb, 0",
            "bl si_coreidx",
            "mov r1, r5",
            "mov fp, r0",
            "mov r0, r4",
            "add sl, sp, 0xc",
            "bl ai_setcoreidx",
            "ldr r3, [sp, 0x38]",
            "add r8, r0, r8",
            "orrs r3, r3, r7",
            "beq 0x8007160",
            "movw r3, 0x4858",
            "mov r1, r8",
            "ldr r0, [r4, r3]",
            "mov r2, sl",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 0xc]",
            "bic r7, r3, r7",
            "ldr r3, [sp, 0x38]",
            "orr r7, r7, r3",
            "dsb st",
            "ldr r3, [0x080072bc]",
            "ldr r3, [r3, 0x18]",
            "cmp r3, 0",
            "beq 0x8007110",
            "blx r3",
            "str r7, [r8]",
            "b 0x8007160",
            "mov r3, 0",
            "mov sb, 1",
            "str r3, [sp, 4]",
            "mov fp, r3",
            "ldr r3, [sp, 0x38]",
            "add sl, sp, 0xc",
            "orrs r3, r3, r7",
            "bne 0x80070d0",
            "movw r3, 0x4858",
            "mov r1, r8",
            "ldr r0, [r4, r3]",
            "mov r2, sl",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "cmp sb, 0",
            "ldr r7, [sp, 0xc]",
            "bne 0x80071d8",
            "cmp fp, r5",
            "beq 0x8007198",
            "mov r0, r4",
            "mov r1, fp",
            "bl ai_setcoreidx",
            "movw r3, 0x486c",
            "ldr r3, [r4, r3]",
            "cmp r3, 0",
            "beq 0x80071d8",
            "movw r2, 0x4888",
            "ldr r1, [r4, r2]",
            "movw r2, 0x4860",
            "ldr r2, [r4, r2]",
            "add r1, r1, 0x20",
            "ldr r1, [r6, r1, lsl 2]",
            "cmp r1, r2",
            "bne 0x80071d8",
            "movw r2, 0x4864",
            "ldr r1, [sp, 4]",
            "ldr r0, [r4, r2]",
            "blx r3",
            "mov r0, r7",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "movw r2, 0x4864",
            "ldr r0, [r4, r2]",
            "blx r3",
            "str r0, [sp, 4]",
            "b 0x80070a0",
            "movhs r2, 0x1000",
            "add r8, r2, r8",
            "add r8, r3, r8",
            "b 0x8007140",
            "ldr r3, [r0, 4]",
            "cmp r3, 0",
            "bne 0x80072fc",
            "ldr r2, [r6, r1, lsl 2]",
            "cmp r2, 0",
            "beq 0x8007360",
            "add r0, r2, r5",
            "pop {r4, r5, r6, pc}",
            "cmp r3, 1",
            "beq 0x8007314",
            "movw r3, 0x4884",
            "ldr r0, [r0, r3]",
            "add r0, r0, r5",
            "pop {r4, r5, r6, pc}",
            "add r3, r1, 0x20",
            "ldr r3, [r6, r3, lsl 2]",
            "cmp r3, 0x800",
            "beq 0x800737c",
            "ldr r3, [r0, 0x10]",
            "cmp r3, r4",
            "bne 0x8007304",
            "ldr r3, [r0, 8]",
            "movw r2, 0x83c",
            "cmp r3, 0x820",
            "cmpne r3, r2",
            "bne 0x80073c0",
            "movw r3, 0x4884",
            "add r5, r5, 0x2000",
            "ldr r0, [r0, r3]",
            "add r0, r0, r5",
            "pop {r4, r5, r6, pc}",
            "add r3, r1, 0x40",
            "mov r1, 0x1000",
            "ldr r0, [r6, r3, lsl 2]",
            "bl __arm_ioremap",
            "mov r2, r0",
            "str r0, [r6, r4, lsl 2]",
            "b 0x80072f4",
            "ldr r3, [r0, 8]",
            "movw r2, 0x83c",
            "cmp r3, 0x820",
            "cmpne r3, r2",
            "bne 0x80073a4",
            "movw r3, 0x4884",
            "add r5, r5, 0x3000",
            "ldr r0, [r0, r3]",
            "add r0, r0, r5",
            "pop {r4, r5, r6, pc}",
            "movw r2, 0x804",
            "cmp r3, r2",
            "bne 0x8007324",
            "ldr r3, [r0, 0xc]",
            "cmp r3, 0xc",
            "bls 0x8007324",
            "b 0x8007390",
            "movw r2, 0x804",
            "cmp r3, r2",
            "beq 0x80073ec",
            "movw r2, 0x4884",
            "cmp r5, 0xf00",
            "ldr r0, [r0, r2]",
            "movlo r3, 0x1800",
            "movhs r3, 0x1000",
            "add r5, r3, r5",
            "add r0, r0, r5",
            "pop {r4, r5, r6, pc}",
            "ldr r3, [r0, 0xc]",
            "cmp r3, 0xc",
            "bls 0x80073cc",
            "b 0x8007344"
        ]
    },
    "sym.dhd_runner_iovar_set_profile": {
        "function_address": "0x08004124",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "movw r3, 0x1974",
            "ldr r2, [r0]",
            "sub sp, sp, 0x278",
            "mov r7, r1",
            "mov r5, r0",
            "mov r1, 0x40",
            "add r0, sp, 0x28",
            "ldr r6, [r2, r3]",
            "add r4, sp, 0x278",
            "bl __memzero",
            "mov r1, 0",
            "add r2, sp, 0x28",
            "mov r3, 0x200",
            "mov r0, r6",
            "bl fcn.0800263c",
            "str r7, [r4, -4]!",
            "mov r2, 0",
            "ldr r1, [0x080040ec]",
            "mov r0, r4",
            "bl bcmstrtok",
            "cmp r0, 0",
            "beq 0x8003db8",
            "ldr r1, [0x080040f0]",
            "mov r2, 3",
            "bl strncmp",
            "subs r8, r0, 0",
            "beq 0x8003dd8",
            "ldr r3, [0x080040f4]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "bne 0x8003e48",
            "mvn ip, 1",
            "mov r0, ip",
            "add sp, sp, 0x278",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}",
            "mov r0, r4",
            "ldr r1, [0x080040ec]",
            "mov r2, r8",
            "bl bcmstrtok",
            "cmp r0, 0",
            "beq 0x8003db8",
            "ldr r1, [0x080040f8]",
            "add r2, sp, 0x228",
            "bl sscanf",
            "mov r0, r4",
            "ldr r1, [0x080040ec]",
            "mov r2, r8",
            "bl bcmstrtok",
            "subs r7, r0, 0",
            "beq 0x8004058",
            "ldr r5, [sp, 0x228]",
            "cmp r5, 2",
            "ble 0x8003e58",
            "ldr r3, [0x080040f4]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "beq 0x8003dc8",
            "ldr r0, [0x080040fc]",
            "mov r1, r5",
            "mov r2, r7",
            "bl printk",
            "mvn ip, 1",
            "b 0x8003dcc",
            "ldr r0, [0x08004100]",
            "bl printk",
            "mvn ip, 1",
            "b 0x8003dcc",
            "ldr sb, [0x08004104]",
            "mov lr, 0x2c",
            "add ip, sp, 0x228",
            "mov r6, r8",
            "mla lr, lr, r5, sb",
            "ldm lr!, {r0, r1, r2, r3}",
            "stm ip!, {r0, r1, r2, r3}",
            "ldm lr!, {r0, r1, r2, r3}",
            "stm ip!, {r0, r1, r2, r3}",
            "ldm lr, {r0, r1, r2}",
            "stm ip, {r0, r1, r2}",
            "strb r6, [sp, 0x254]",
            "ldrb r3, [r7]",
            "cmp r3, 0x2d",
            "beq 0x8003eec",
            "ldr sl, [0x08004108]",
            "mov r8, 0",
            "ldr r7, [sl], 4",
            "mov r0, r7",
            "bl strlen",
            "mov r1, r7",
            "mov r2, r0",
            "add r0, sp, 0x254",
            "bl strncmp",
            "subs r7, r0, 0",
            "beq 0x8003f10",
            "add r8, r8, 1",
            "cmp r8, 5",
            "bne 0x8003e9c",
            "ldr r3, [0x080040f4]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "beq 0x8003dc8",
            "ldr r0, [0x0800410c]",
            "bl printk",
            "mvn ip, 1",
            "b 0x8003dcc",
            "mov r0, r7",
            "bl strlen",
            "cmp r0, 4",
            "bls 0x8003e94",
            "mov r0, r7",
            "ldr r1, [0x08004110]",
            "add r2, sp, 0x254",
            "bl sscanf",
            "b 0x8003e94",
            "mov r0, r4",
            "ldr r1, [0x080040ec]",
            "mov r2, r7",
            "bl bcmstrtok",
            "cmp r0, 0",
            "beq 0x8003f60",
            "add r1, sp, 0x228",
            "add ip, sp, 0x228",
            "add r2, r1, r8, lsl 2",
            "add r3, r8, 6",
            "ldr r1, [0x08004114]",
            "add r3, ip, r3, lsl 2",
            "add r2, r2, 4",
            "bl sscanf",
            "mov r2, r7",
            "mov r0, r4",
            "ldr r1, [0x080040ec]",
            "bl bcmstrtok",
            "subs r7, r0, 0",
            "bne 0x8003e84",
            "mov r0, 5",
            "mov r3, 0",
            "add r1, sp, 0x278",
            "add r2, r1, r3, lsl 2",
            "add r3, r3, 1",
            "mov r1, r2",
            "ldr r2, [r2, -0x38]",
            "cmp r2, 0x4000",
            "bgt 0x8004084",
            "ldr r1, [r1, -0x4c]",
            "cmn r1, 1",
            "blt 0x8004084",
            "cmp r2, r1",
            "blt 0x8004084",
            "subs r0, r0, 1",
            "bne 0x8003f68",
            "ldr ip, [sp, 0x22c]",
            "mov r1, 0x200",
            "ldrb r3, [sp, 0x28]",
            "add r0, sp, 0x28",
            "ldr r2, [0x08004118]",
            "str ip, [sp]",
            "ldr ip, [sp, 0x240]",
            "cmp r3, 0",
            "subne r3, r3, 0x30",
            "moveq r3, r5",
            "str ip, [sp, 4]",
            "ldr ip, [sp, 0x230]",
            "str ip, [sp, 8]",
            "ldr ip, [sp, 0x244]",
            "str ip, [sp, 0xc]",
            "ldr ip, [sp, 0x234]",
            "str ip, [sp, 0x10]",
            "ldr ip, [sp, 0x248]",
            "str ip, [sp, 0x14]",
            "ldr ip, [sp, 0x238]",
            "str ip, [sp, 0x18]",
            "ldr ip, [sp, 0x24c]",
            "str ip, [sp, 0x1c]",
            "ldr ip, [sp, 0x23c]",
            "str ip, [sp, 0x20]",
            "ldr ip, [sp, 0x250]",
            "str ip, [sp, 0x24]",
            "bl snprintf",
            "mov r0, r5",
            "mov r1, 0",
            "add r2, sp, 0x28",
            "mov r3, 0x40",
            "bl fcn.080023b0",
            "cmp r0, 0",
            "blt 0x80040e4",
            "add r4, sp, 0x228",
            "mov r6, 0x2c",
            "ldm r4!, {r0, r1, r2, r3}",
            "mov ip, 0",
            "mla r5, r6, r0, sb",
            "stm r5!, {r0, r1, r2, r3}",
            "ldm r4!, {r0, r1, r2, r3}",
            "stm r5!, {r0, r1, r2, r3}",
            "ldm r4, {r0, r1, r2}",
            "stm r5, {r0, r1, r2}",
            "b 0x8003dcc",
            "ldr r1, [sp, 0x228]",
            "cmp r1, 7",
            "ble 0x80040a4",
            "ldr r3, [0x080040f4]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "beq 0x8003dc8",
            "ldr r0, [0x0800411c]",
            "bl printk",
            "mvn ip, 1",
            "b 0x8003dcc",
            "ldr r3, [0x080040f4]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "beq 0x8003dc8",
            "ldr r0, [0x08004120]",
            "bl printk",
            "mvn ip, 1",
            "b 0x8003dcc",
            "add ip, r1, 0x30",
            "mov r0, r6",
            "mov r1, r7",
            "add r2, sp, 0x28",
            "mov r3, 0x40",
            "strb ip, [sp, 0x28]",
            "bl fcn.080023b0",
            "cmp r0, 0",
            "blt 0x80040e4",
            "ldr r3, [sp, 0x228]",
            "mov r1, 0x2c",
            "ldr r2, [0x08004104]",
            "mov ip, r7",
            "mla r3, r1, r3, r2",
            "str r3, [r5, 0xb0]",
            "b 0x8003dcc",
            "mvn ip, 0",
            "b 0x8003dcc",
            "push {r4, r5, r6, r7, lr}",
            "mov r7, r0",
            "ldr r5, [0x080041b8]",
            "sub sp, sp, 0xc",
            "mov r6, r1",
            "mov r4, r2",
            "ldr r3, [r5]",
            "tst r3, 2",
            "bne 0x8004190",
            "rsbs r3, r4, 1",
            "movlo r3, 0",
            "cmp r4, 0x200",
            "movle r4, r3",
            "orrgt r4, r3, 1",
            "cmp r4, 0",
            "beq 0x800417c",
            "ldr r3, [r5]",
            "tst r3, 1",
            "bne 0x80041ac",
            "mvn r0, 1",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, pc}",
            "mov r0, r7",
            "mov r1, r6",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, lr}",
            "b 0x8003d48",
            "mov r2, r7",
            "ldr r1, [0x080041bc]",
            "mov r3, r6",
            "ldr r0, [0x080041c0]",
            "str r4, [sp]",
            "bl printk",
            "b 0x8004148",
            "ldr r0, [0x080041c4]",
            "bl printk",
            "b 0x8004170"
        ]
    },
    "fcn.0800263c": {
        "function_address": "0x0800263c",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r5, r2",
            "ldr r2, [0x08002694]",
            "rsb ip, r1, r1, lsl 4",
            "sub sp, sp, 0x10",
            "mov r6, r3",
            "mov r1, 0x10",
            "add r2, r2, ip",
            "mov r3, r0",
            "mov r0, sp",
            "mov r4, 0",
            "bl snprintf",
            "mov r1, r5",
            "mov r0, sp",
            "mov r2, r6",
            "strb r4, [sp, 0xe]",
            "bl kerSysScratchPadGet",
            "cmp r0, 0",
            "addgt r5, r5, r0",
            "strbgt r4, [r5, -1]",
            "add sp, sp, 0x10",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.dhd_reboot_callback": {
        "function_address": "0x080199c4",
        "instructions": [
            "ldr r3, [0x08019a0c]",
            "push {r4, lr}",
            "mov r4, r1",
            "ldr r3, [r3]",
            "tst r3, 2",
            "bne 0x80199f8",
            "cmp r4, 1",
            "beq 0x80199ec",
            "mov r0, 0",
            "pop {r4, pc}",
            "bl sym.dhd_module_cleanup",
            "mov r0, 0",
            "pop {r4, pc}",
            "mov r2, r1",
            "ldr r0, [0x08019a10]",
            "ldr r1, [0x08019a14]",
            "bl printk",
            "b 0x80199dc"
        ]
    },
    "sym.dhd_module_cleanup": {
        "function_address": "0x08019988",
        "instructions": [
            "push {r3, lr}",
            "ldr r3, [0x080199b8]",
            "ldr r3, [r3]",
            "tst r3, 2",
            "bne 0x80199a8",
            "bl dhd_bus_unregister",
            "pop {r3, lr}",
            "b dhd_wifi_platform_unregister_drv",
            "ldr r1, [0x080199bc]",
            "ldr r0, [0x080199c0]",
            "bl printk",
            "b dhd_bus_unregister"
        ]
    },
    "sym.dhd_set_mac_address": {
        "function_address": "0x0801b010",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "mov r7, r1",
            "ldr r5, [r0, 0x420]",
            "mov r1, r0",
            "sub sp, sp, 0xc",
            "mov r0, r5",
            "bl dhd_net2idx",
            "cmn r0, 0xf",
            "mvneq r0, 0",
            "beq 0x801b090",
            "add r3, r0, 0x660",
            "mov r0, r5",
            "add r3, r5, r3, lsl 2",
            "mov r4, 0",
            "ldr r6, [r3, 4]",
            "bl fcn.08019acc",
            "add r1, r7, 2",
            "mov r2, 6",
            "add r0, r6, 0x14",
            "bl memcpy",
            "mov r3, 1",
            "mov r0, r5",
            "strb r3, [r6, 0x1a]",
            "bl fcn.08019ab8",
            "movw r3, 0x3bb8",
            "mov r1, r6",
            "ldr r0, [r5, r3]",
            "mov r2, 3",
            "ldr r3, [reloc.dhd_set_mac_addr_handler]",
            "str r4, [sp]",
            "bl dhd_deferred_schedule_work",
            "mov r0, r4",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.08019acc": {
        "function_address": "0x08019acc",
        "instructions": [
            "cmp r0, 0",
            "bxeq lr",
            "add r0, r0, 0x3b40",
            "add r0, r0, 0x10",
            "b mutex_lock"
        ]
    },
    "fcn.08019ab8": {
        "function_address": "0x08019ab8",
        "instructions": [
            "cmp r0, 0",
            "bxeq lr",
            "add r0, r0, 0x3b40",
            "add r0, r0, 0x10",
            "b mutex_unlock"
        ]
    },
    "sym.dhd_set_mac_addr_handler": {
        "function_address": "0x0801b8d0",
        "instructions": [
            "cmp r2, 3",
            "push {r3, r4, r5, r6, r7, lr}",
            "ldr r6, [0x0801b9e0]",
            "mov r4, r0",
            "mov r5, r1",
            "beq 0x801b8f4",
            "ldr r3, [r6]",
            "tst r3, 1",
            "bne 0x801b9b0",
            "cmp r4, 0",
            "beq 0x801b97c",
            "mov r0, r4",
            "add r7, r4, 0xc",
            "bl fcn.08019acc",
            "mov r0, r7",
            "bl dhd_perim_lock",
            "cmp r5, 0",
            "ldr r3, [r6]",
            "beq 0x801b998",
            "tst r3, 4",
            "bne 0x801b9c0",
            "mov r3, 0",
            "mov r0, r4",
            "strb r3, [r5, 0x1a]",
            "add r2, r5, 0x14",
            "ldr r1, [r5, 0xc]",
            "bl _dhd_set_mac_address",
            "cmp r0, 0",
            "ldr r3, [r6]",
            "beq 0x801b964",
            "tst r3, 1",
            "bne 0x801b9d0",
            "mov r0, r7",
            "bl dhd_perim_unlock",
            "mov r0, r4",
            "pop {r3, r4, r5, r6, r7, lr}",
            "b fcn.08019ab8",
            "tst r3, 4",
            "beq 0x801b950",
            "ldr r1, [0x0801b9e4]",
            "ldr r0, [0x0801b9e8]",
            "bl printk",
            "b 0x801b950",
            "ldr r3, [r6]",
            "tst r3, 1",
            "popeq {r3, r4, r5, r6, r7, pc}",
            "ldr r0, [0x0801b9ec]",
            "ldr r1, [0x0801b9e4]",
            "pop {r3, r4, r5, r6, r7, lr}",
            "b printk",
            "tst r3, 1",
            "beq 0x801b950",
            "ldr r1, [0x0801b9e4]",
            "ldr r0, [0x0801b9f0]",
            "bl printk",
            "b 0x801b950",
            "ldr r1, [0x0801b9e4]",
            "ldr r0, [0x0801b9f4]",
            "bl printk",
            "b 0x801b8f4",
            "ldr r1, [0x0801b9e4]",
            "ldr r0, [0x0801b9e8]",
            "bl printk",
            "b 0x801b924",
            "ldr r1, [0x0801b9e4]",
            "ldr r0, [0x0801b9f8]",
            "bl printk",
            "b 0x801b950"
        ]
    },
    "sym.dhd_set_mcast_list_handler": {
        "function_address": "0x0801b28c",
        "instructions": [
            "cmp r2, 4",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r7, r2",
            "sub sp, sp, 0x3c",
            "mov r4, r0",
            "beq 0x801b2bc",
            "ldr r3, [0x0801b724]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "bne 0x801b6c0",
            "add sp, sp, 0x3c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "cmp r0, 0",
            "beq 0x801b314",
            "add r5, r0, 0xc",
            "str r1, [sp, 8]",
            "bl fcn.08019acc",
            "mov r0, r5",
            "bl dhd_perim_lock",
            "ldr r1, [sp, 8]",
            "cmp r1, 0",
            "beq 0x801b2f0",
            "ldrb r3, [r4, 0x1c]",
            "cmp r3, 0",
            "bne 0x801b334",
            "ldr r3, [0x0801b724]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "bne 0x801b6d0",
            "mov r0, r5",
            "bl dhd_perim_unlock",
            "mov r0, r4",
            "bl fcn.08019ab8",
            "b 0x801b2b4",
            "ldr r3, [0x0801b724]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "beq 0x801b2b4",
            "ldr r1, [0x0801b728]",
            "ldr r0, [0x0801b72c]",
            "bl printk",
            "b 0x801b2b4",
            "ldr r1, [r1, 0xc]",
            "add r3, r1, 0x660",
            "str r1, [sp, 0x10]",
            "add r3, r4, r3, lsl 2",
            "ldr r3, [r3, 4]",
            "cmp r3, 0",
            "beq 0x801b618",
            "ldr sb, [r3, 8]",
            "cmp sb, 0",
            "beq 0x801b60c",
            "add r3, sb, 0x1a4",
            "mov r0, r3",
            "str r3, [sp, 0xc]",
            "bl _raw_spin_lock_bh",
            "ldr r6, [sb, 0x1c0]",
            "ldr r0, [sp, 0xc]",
            "str r6, [sp, 0x34]",
            "add r8, r6, r6, lsl 1",
            "bl _raw_spin_unlock_bh",
            "lsl r8, r8, 1",
            "ldr r3, [sb, 0x160]",
            "ldr r0, [r4, 0xc]",
            "add ip, r8, 0xf",
            "ubfx r3, r3, 9, 1",
            "mov r1, ip",
            "str ip, [sp, 0x14]",
            "str r3, [sp, 0x30]",
            "bl osl_malloc",
            "subs fp, r0, 0",
            "beq 0x801b508",
            "add r8, r8, 0xe",
            "ldr r1, [0x0801b730]",
            "mov r2, r8",
            "mov sl, sb",
            "bl strncpy",
            "mov r3, 0",
            "mov r2, r7",
            "add r1, sp, 0x34",
            "strb r3, [fp, r8]",
            "add r0, fp, 0xb",
            "bl memcpy",
            "ldr r0, [sp, 0xc]",
            "bl _raw_spin_lock_bh",
            "ldr r7, [sl, 0x1b8]!",
            "cmp r7, sl",
            "beq 0x801b42c",
            "cmp r6, 0",
            "addne r8, fp, 0xf",
            "bne 0x801b404",
            "b 0x801b42c",
            "cmp r6, 0",
            "beq 0x801b42c",
            "mov r0, r8",
            "add r1, r7, 8",
            "mov r2, 6",
            "sub r6, r6, 1",
            "bl memcpy",
            "ldr r7, [r7]",
            "add r8, r8, 6",
            "str r6, [sp, 0x34]",
            "cmp r7, sl",
            "bne 0x801b3fc",
            "ldr r0, [sp, 0xc]",
            "bl _raw_spin_unlock_bh",
            "add r0, sp, 0x18",
            "mov r1, 0x18",
            "bl __memzero",
            "movw ip, 0x107",
            "mov r0, r5",
            "str ip, [sp, 0x18]",
            "add r2, sp, 0x18",
            "ldr ip, [sp, 0x14]",
            "mov r3, fp",
            "ldr r1, [sp, 0x10]",
            "str fp, [sp, 0x1c]",
            "str ip, [sp, 0x20]",
            "mov ip, 1",
            "strb ip, [sp, 0x24]",
            "ldr ip, [sp, 0x14]",
            "ldr r6, [0x0801b724]",
            "str ip, [sp]",
            "bl dhd_wl_ioctl",
            "cmp r0, 0",
            "blt 0x801b670",
            "ldr r0, [r4, 0xc]",
            "mov r1, fp",
            "ldr r2, [sp, 0x14]",
            "bl osl_mfree",
            "ldr r0, [r4, 0xc]",
            "mov r1, 0xd",
            "bl osl_malloc",
            "subs r7, r0, 0",
            "beq 0x801b640",
            "mov r8, 0xd",
            "ldr r0, [0x0801b734]",
            "add r1, sp, 0x30",
            "mov r2, 4",
            "mov r3, r7",
            "str r8, [sp]",
            "bl bcm_mkiovar",
            "cmp r0, 0",
            "bne 0x801b53c",
            "ldr r3, [r6]",
            "tst r3, 1",
            "bne 0x801b6e0",
            "ldr r0, [r4, 0xc]",
            "mov r1, r7",
            "mov r2, 0xd",
            "bl osl_mfree",
            "ldr r3, [r6]",
            "tst r3, 4",
            "beq 0x801b300",
            "ldr r2, [sp, 0x10]",
            "ldr r1, [0x0801b728]",
            "ldr r0, [0x0801b738]",
            "bl printk",
            "b 0x801b300",
            "ldr r7, [0x0801b724]",
            "ldr r3, [r7]",
            "tst r3, 1",
            "beq 0x801b4ec",
            "ldr r1, [sp, 0x10]",
            "mov r0, r5",
            "bl dhd_ifname",
            "mov r2, r6",
            "mov r1, r0",
            "ldr r0, [0x0801b73c]",
            "bl printk",
            "ldr r3, [r7]",
            "b 0x801b4ec",
            "add r0, sp, 0x18",
            "mov r1, 0x18",
            "bl __memzero",
            "movw ip, 0x107",
            "mov r0, r5",
            "str ip, [sp, 0x18]",
            "add r2, sp, 0x18",
            "mov ip, 1",
            "ldr r1, [sp, 0x10]",
            "mov r3, r7",
            "str r7, [sp, 0x1c]",
            "str r8, [sp, 0x20]",
            "strb ip, [sp, 0x24]",
            "str r8, [sp]",
            "bl dhd_wl_ioctl",
            "cmp r0, 0",
            "blt 0x801b694",
            "mov r2, 0xd",
            "ldr r0, [r4, 0xc]",
            "mov r1, r7",
            "bl osl_mfree",
            "ldr r3, [sb, 0x160]",
            "add r0, sp, 0x18",
            "mov r1, 0x18",
            "ubfx r3, r3, 8, 1",
            "str r3, [sp, 0x30]",
            "bl __memzero",
            "mov lr, 0xa",
            "mov ip, 4",
            "add r3, sp, 0x30",
            "str lr, [sp, 0x18]",
            "mov r0, r5",
            "mov lr, 1",
            "ldr r1, [sp, 0x10]",
            "add r2, sp, 0x18",
            "str r3, [sp, 0x1c]",
            "str ip, [sp, 0x20]",
            "strb lr, [sp, 0x24]",
            "str ip, [sp]",
            "bl dhd_wl_ioctl",
            "cmp r0, 0",
            "ldr r3, [r6]",
            "bge 0x801b4ec",
            "tst r3, 1",
            "beq 0x801b4ec",
            "ldr r1, [sp, 0x10]",
            "mov r0, r5",
            "bl dhd_ifname",
            "ldr r2, [sp, 0x30]",
            "mov r1, r0",
            "ldr r0, [0x0801b740]",
            "bl printk",
            "ldr r3, [0x0801b724]",
            "ldr r3, [r3]",
            "b 0x801b4ec",
            "ldr r6, [0x0801b724]",
            "ldr r3, [r6]",
            "tst r3, 1",
            "beq 0x801b4ec",
            "mov r2, r1",
            "ldr r0, [0x0801b744]",
            "ldr r1, [0x0801b748]",
            "bl printk",
            "ldr r3, [r6]",
            "b 0x801b4ec",
            "ldr r3, [r6]",
            "tst r3, 1",
            "beq 0x801b4ec",
            "ldr r1, [sp, 0x10]",
            "mov r0, r5",
            "bl dhd_ifname",
            "mov r1, r0",
            "ldr r0, [0x0801b74c]",
            "bl printk",
            "ldr r3, [0x0801b724]",
            "ldr r3, [r3]",
            "b 0x801b4ec",
            "ldr r3, [r6]",
            "tst r3, 1",
            "bne 0x801b704",
            "ldr r3, [sp, 0x34]",
            "cmp r3, 0",
            "ldreq r3, [sp, 0x30]",
            "movne r3, 1",
            "str r3, [sp, 0x30]",
            "b 0x801b484",
            "ldr r3, [r6]",
            "tst r3, 1",
            "beq 0x801b580",
            "ldr r1, [sp, 0x10]",
            "mov r0, r5",
            "bl dhd_ifname",
            "ldr r2, [sp, 0x30]",
            "mov r1, r0",
            "ldr r0, [0x0801b750]",
            "bl printk",
            "b 0x801b580",
            "ldr r1, [0x0801b728]",
            "ldr r0, [0x0801b754]",
            "bl printk",
            "b 0x801b2b4",
            "ldr r1, [0x0801b728]",
            "ldr r0, [0x0801b758]",
            "bl printk",
            "b 0x801b300",
            "ldr r1, [sp, 0x10]",
            "mov r0, r5",
            "bl dhd_ifname",
            "mov r2, 4",
            "mov r1, r0",
            "mov r3, r8",
            "ldr r0, [0x0801b75c]",
            "bl printk",
            "b 0x801b4d8",
            "ldr r1, [sp, 0x10]",
            "mov r0, r5",
            "bl dhd_ifname",
            "ldr r2, [sp, 0x34]",
            "mov r1, r0",
            "ldr r0, [0x0801b760]",
            "bl printk",
            "b 0x801b67c"
        ]
    },
    "sym.dhd_ifadd_event_handler": {
        "function_address": "0x0801d76c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "add r4, r0, 0xc",
            "ldr r7, [0x0801d74c]",
            "sub sp, sp, 0x118",
            "mov r5, r1",
            "mov r6, r0",
            "bl fcn.08019acc",
            "mov r0, r4",
            "bl dhd_perim_lock",
            "ldr r3, [r7]",
            "ldrb r8, [r5, 8]",
            "ldrb sb, [r5, 0xb]",
            "tst r3, 2",
            "bne 0x801d728",
            "add ip, r5, 0xd",
            "mov sl, 1",
            "mov r0, r4",
            "mov r1, r8",
            "mov r2, ip",
            "add r3, r5, 0x1e",
            "stm sp, {sb, sl, ip}",
            "bl dhd_allocate_if",
            "cmp r0, 0",
            "beq 0x801d68c",
            "mov r0, r4",
            "bl dhd_perim_unlock",
            "mov r1, r8",
            "mov r2, sl",
            "mov r0, r4",
            "bl dhd_register_if",
            "mov sb, r0",
            "mov r0, r4",
            "bl dhd_perim_lock",
            "cmp sb, 0",
            "bne 0x801d66c",
            "add r0, r6, 0x6c0",
            "ldr r1, [0x0801d750]",
            "add r0, r0, 0xc",
            "bl strstr",
            "cmp r0, 0",
            "beq 0x801d644",
            "ldrb r3, [r5, 0xc]",
            "cmp r3, 0",
            "bne 0x801d6a8",
            "mov r1, r5",
            "mov r2, 0x24",
            "ldr r0, [r6, 0xc]",
            "bl osl_mfree",
            "mov r0, r4",
            "bl dhd_perim_unlock",
            "mov r0, r6",
            "bl fcn.08019ab8",
            "add sp, sp, 0x118",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}",
            "ldr r3, [r7]",
            "tst r3, 1",
            "bne 0x801d73c",
            "mov r0, r4",
            "mov r1, r8",
            "mov r2, 1",
            "bl dhd_remove_if",
            "b 0x801d644",
            "ldr r3, [r7]",
            "tst r3, 1",
            "beq 0x801d644",
            "ldr r1, [0x0801d754]",
            "ldr r0, [0x0801d758]",
            "bl printk",
            "b 0x801d644",
            "mov r1, 0x100",
            "add r0, sp, 0x14",
            "mov sb, r1",
            "str sl, [sp, 0x114]",
            "bl __memzero",
            "add r1, sp, 0x114",
            "mov r2, 4",
            "add r3, sp, 0x14",
            "ldr r0, [0x0801d75c]",
            "str sb, [sp]",
            "bl bcm_mkiovar",
            "mov r0, r4",
            "bl dhd_perim_unlock",
            "movw r1, 0x107",
            "add r2, sp, 0x14",
            "mov r3, sb",
            "mov r0, r4",
            "str sl, [sp]",
            "str r8, [sp, 4]",
            "bl dhd_wl_ioctl_cmd",
            "mov sl, r0",
            "mov r0, r4",
            "bl dhd_perim_lock",
            "cmp sl, 0",
            "beq 0x801d644",
            "ldr r3, [r7]",
            "tst r3, 1",
            "beq 0x801d678",
            "ldr r1, [0x0801d754]",
            "ldr r0, [0x0801d760]",
            "bl printk",
            "b 0x801d678",
            "mov r2, r8",
            "ldr r1, [0x0801d754]",
            "ldr r0, [0x0801d764]",
            "bl printk",
            "b 0x801d5cc",
            "ldr r1, [0x0801d754]",
            "ldr r0, [0x0801d768]",
            "bl printk",
            "b 0x801d678",
            "cmp r2, 1",
            "beq 0x801d790",
            "ldr r3, [0x0801d7dc]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "bxeq lr",
            "ldr r0, [0x0801d7e0]",
            "ldr r1, [0x0801d7e4]",
            "b printk",
            "cmp r0, 0",
            "beq 0x801d7c0",
            "cmp r1, 0",
            "beq 0x801d7a4",
            "b 0x801d594",
            "ldr r3, [0x0801d7dc]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "bxeq lr",
            "ldr r0, [0x0801d7e8]",
            "ldr r1, [0x0801d7e4]",
            "b printk",
            "ldr r3, [0x0801d7dc]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "bxeq lr",
            "ldr r0, [0x0801d7ec]",
            "ldr r1, [0x0801d7e4]",
            "b printk"
        ]
    },
    "sym.dhd_ifdel_event_handler": {
        "function_address": "0x0801c728",
        "instructions": [
            "cmp r2, 2",
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r4, r0",
            "mov r5, r1",
            "beq 0x801c75c",
            "ldr r3, [0x0801c814]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "popeq {r3, r4, r5, r6, r7, pc}",
            "ldr r0, [0x0801c818]",
            "ldr r1, [0x0801c81c]",
            "pop {r3, r4, r5, r6, r7, lr}",
            "b printk",
            "cmp r0, 0",
            "beq 0x801c7e4",
            "cmp r1, 0",
            "beq 0x801c7c4",
            "add r6, r0, 0xc",
            "bl fcn.08019acc",
            "mov r0, r6",
            "bl dhd_perim_lock",
            "ldr r3, [0x0801c814]",
            "ldrb r7, [r5, 8]",
            "ldr r3, [r3]",
            "tst r3, 2",
            "bne 0x801c804",
            "mov r1, r7",
            "mov r2, 1",
            "mov r0, r6",
            "bl dhd_remove_if",
            "mov r1, r5",
            "mov r2, 0x24",
            "ldr r0, [r4, 0xc]",
            "bl osl_mfree",
            "mov r0, r6",
            "bl dhd_perim_unlock",
            "mov r0, r4",
            "pop {r3, r4, r5, r6, r7, lr}",
            "b fcn.08019ab8",
            "ldr r3, [0x0801c814]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "popeq {r3, r4, r5, r6, r7, pc}",
            "ldr r0, [0x0801c820]",
            "ldr r1, [0x0801c81c]",
            "pop {r3, r4, r5, r6, r7, lr}",
            "b printk",
            "ldr r3, [0x0801c814]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "popeq {r3, r4, r5, r6, r7, pc}",
            "ldr r0, [0x0801c824]",
            "ldr r1, [0x0801c81c]",
            "pop {r3, r4, r5, r6, r7, lr}",
            "b printk",
            "mov r1, r7",
            "ldr r0, [0x0801c828]",
            "bl printk",
            "b 0x801c790"
        ]
    },
    "sym.dhd_open": {
        "function_address": "0x08020184",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r7, r0",
            "ldr r4, [r0, 0x420]",
            "ldr r8, [0x080202e4]",
            "add r5, r4, 0xc",
            "mov r0, r5",
            "bl dhd_perim_lock",
            "mov r3, 0",
            "mov r0, r4",
            "strb r3, [r4, 0x2b5]",
            "mov r1, r7",
            "str r3, [r4, 0x2b8]",
            "bl dhd_net2idx",
            "ldr r3, [r8]",
            "mov r6, r0",
            "tst r3, 2",
            "bne 0x80202c0",
            "cmp r6, 0",
            "blt 0x8020288",
            "add r3, r6, 0x660",
            "add r3, r4, r3, lsl 2",
            "ldr r3, [r3, 4]",
            "cmp r3, 0",
            "beq 0x80202a4",
            "cmp r6, 0",
            "bne 0x8020254",
            "ldr r3, [r4, 0x20]",
            "movw r2, 0x3bb0",
            "str r6, [r4, r2]",
            "cmp r3, 2",
            "beq 0x8020244",
            "mov r0, r5",
            "bl dhd_perim_unlock",
            "mov r0, r5",
            "bl dhd_bus_start",
            "mov r6, r0",
            "mov r0, r5",
            "bl dhd_perim_lock",
            "cmp r6, 0",
            "beq 0x8020244",
            "ldr r3, [r8]",
            "tst r3, 1",
            "beq 0x8020294",
            "ldr r1, [0x080202e8]",
            "mov r2, r6",
            "ldr r0, [0x080202ec]",
            "bl printk",
            "b 0x8020294",
            "ldr r0, [r7, 0x1f8]",
            "add r1, r4, 0x38",
            "mov r2, 6",
            "bl memcpy",
            "ldr r1, [r7, 0x260]",
            "mov r0, 0",
            "mov r6, r0",
            "add r1, r1, 0x54",
            "bl _clear_bit",
            "mov r3, 1",
            "mov r0, r5",
            "strb r3, [r4, 0x1c]",
            "bl dhd_dbg_init",
            "mov r0, r5",
            "bl dhd_perim_unlock",
            "mov r0, r6",
            "pop {r4, r5, r6, r7, r8, pc}",
            "ldr r3, [r8]",
            "tst r3, 1",
            "bne 0x80202d4",
            "mov r0, r7",
            "mvn r6, 0",
            "bl sym.dhd_stop",
            "b 0x8020278",
            "ldr r3, [r8]",
            "tst r3, 1",
            "beq 0x8020294",
            "ldr r1, [0x080202e8]",
            "ldr r0, [0x080202f0]",
            "bl printk",
            "b 0x8020294",
            "mov r2, r6",
            "ldr r1, [0x080202e8]",
            "ldr r0, [0x080202f4]",
            "bl printk",
            "b 0x80201c8",
            "ldr r1, [0x080202e8]",
            "ldr r0, [0x080202f8]",
            "bl printk",
            "b 0x8020294"
        ]
    },
    "sym.dhd_stop": {
        "function_address": "0x08020090",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r6, r0",
            "ldr r4, [r0, 0x420]",
            "add r5, r4, 0xc",
            "mov r0, r5",
            "bl dhd_perim_lock",
            "ldr r3, [0x0802016c]",
            "ldr r3, [r3]",
            "tst r3, 2",
            "bne 0x8020140",
            "ldrb r3, [r4, 0x1c]",
            "mov r7, 0",
            "str r7, [r4, 0x2bc]",
            "str r7, [r4, 0x2c0]",
            "cmp r3, r7",
            "str r7, [r4, 0x2c4]",
            "bne 0x8020108",
            "mov r3, 0",
            "mov r0, r5",
            "str r3, [r4, 0x2b8]",
            "ldr r3, [0x08020170]",
            "ldr r3, [r3, 0x814]",
            "cmp r3, 0",
            "strbeq r3, [r4, 0x294]",
            "streq r3, [r4, 0x298]",
            "strbeq r3, [r4, 0x29c]",
            "bl dhd_perim_unlock",
            "bl dhd_dbg_remove",
            "mov r0, 0",
            "pop {r3, r4, r5, r6, r7, pc}",
            "mov r1, r6",
            "mov r0, r4",
            "bl dhd_net2idx",
            "ldr r1, [r6, 0x260]",
            "cmp r1, r7",
            "beq 0x8020154",
            "mov r0, r7",
            "add r1, r1, 0x54",
            "bl _set_bit",
            "mov r3, 0",
            "mov r0, r5",
            "strb r3, [r4, 0x1c]",
            "bl dhd_prot_stop",
            "b 0x80200d4",
            "mov r2, r6",
            "ldr r1, [0x08020174]",
            "ldr r0, [0x08020178]",
            "bl printk",
            "b 0x80200b8",
            "ldr r0, [0x0802017c]",
            "movw r1, 0x777",
            "bl warn_slowpath_null",
            "ldr r0, [0x08020180]",
            "bl printk",
            "b 0x802012c"
        ]
    },
    "sym.dhd_ioctl_entry": {
        "function_address": "0x080213d4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r8, r0",
            "ldr r6, [r0, 0x420]",
            "sub sp, sp, 0x24",
            "mov r5, r2",
            "mov sl, r1",
            "ldr r7, [0x08021710]",
            "add r4, r6, 0xc",
            "mov r0, r4",
            "bl dhd_perim_lock",
            "mov r0, r6",
            "mov r1, r8",
            "bl dhd_net2idx",
            "ldr r3, [r7]",
            "mov sb, r0",
            "tst r3, 2",
            "bne 0x80216e8",
            "cmn sb, 0xf",
            "beq 0x8021698",
            "movw r3, 0x8946",
            "cmp r5, r3",
            "beq 0x8021638",
            "sub r3, r5, 0x8900",
            "sub r3, r3, 0xf1",
            "cmp r3, 0xe",
            "bls 0x8021618",
            "movw r3, 0x89f0",
            "cmp r5, r3",
            "bne 0x8021654",
            "mov r1, 0x1c",
            "add r0, sp, 4",
            "bl __memzero",
            "mov r0, r4",
            "bl dhd_perim_unlock",
            "mov r3, sp",
            "ldr r1, [sl, 0x10]",
            "bic r5, r3, 0x1fc0",
            "add r0, sp, 4",
            "bic r5, r5, 0x3f",
            "ldr r3, [r5, 8]",
            "adds r2, r1, 0x18",
            "sbcslo r2, r2, r3",
            "movlo r3, 0",
            "cmp r3, 0",
            "bne 0x80215d8",
            "mov r2, 0x18",
            "bl __copy_from_user",
            "cmp r0, 0",
            "bne 0x80215e0",
            "ldr r1, [sl, 0x10]",
            "add r0, sp, 0x1c",
            "ldr r3, [r5, 8]",
            "add r1, r1, 0x18",
            "adds r2, r1, 4",
            "sbcslo r2, r2, r3",
            "movlo r3, 0",
            "cmp r3, 0",
            "bne 0x802160c",
            "mov r2, 4",
            "bl __copy_from_user",
            "cmp r0, 0",
            "bne 0x80215e0",
            "mov r0, r4",
            "bl dhd_perim_lock",
            "mov r0, 0xc",
            "bl capable",
            "cmp r0, 0",
            "mvneq sl, 0x19",
            "beq 0x80215ec",
            "ldr r7, [sp, 0xc]",
            "cmp r7, 0",
            "beq 0x8021664",
            "cmp r7, 0x4000",
            "movhs r7, 0x4000",
            "ldr r0, [r6, 0xc]",
            "uxth r7, r7",
            "add fp, r7, 1",
            "mov r1, fp",
            "bl osl_malloc",
            "subs r8, r0, 0",
            "mvneq sl, 0x1a",
            "beq 0x80215ec",
            "mov r0, r4",
            "bl dhd_perim_unlock",
            "ldr r3, [r5, 8]",
            "ldr r1, [sp, 8]",
            "adds r2, r1, r7",
            "sbcslo r2, r2, r3",
            "movlo r3, 0",
            "cmp r3, 0",
            "beq 0x80216b4",
            "cmp r7, 0",
            "bne 0x80216d8",
            "mov r0, r4",
            "bl dhd_perim_lock",
            "mov r3, 0",
            "mov r0, r4",
            "strb r3, [r8, r7]",
            "mov r1, sb",
            "mov r3, r8",
            "add r2, sp, 4",
            "bl dhd_ioctl_process",
            "rsbs r3, r0, 1",
            "mov sl, r0",
            "movlo r3, 0",
            "cmp r7, 0",
            "moveq r3, 0",
            "cmp r3, 0",
            "beq 0x80215c4",
            "ldr sl, [sp, 8]",
            "cmp sl, 0",
            "beq 0x80215c4",
            "mov r0, r4",
            "bl dhd_perim_unlock",
            "ldr r3, [r5, 8]",
            "ldr r0, [sp, 8]",
            "adds r2, r0, r7",
            "sbcslo r2, r2, r3",
            "movlo r3, 0",
            "cmp r3, 0",
            "beq 0x8021680",
            "mvn sl, 0xd",
            "mov r0, r4",
            "bl dhd_perim_lock",
            "ldr r0, [r6, 0xc]",
            "mov r1, r8",
            "mov r2, fp",
            "bl osl_mfree",
            "b 0x80215ec",
            "mov r1, 0x18",
            "bl __memzero",
            "mov r0, r4",
            "mvn sl, 0x14",
            "bl dhd_perim_lock",
            "mov r0, r4",
            "bl dhd_perim_unlock",
            "mov r0, sl",
            "bl osl_error",
            "mov r5, r0",
            "mov r0, r5",
            "add sp, sp, 0x24",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "mov r1, 4",
            "bl __memzero",
            "b 0x80215e0",
            "mov r2, r5",
            "mov r0, r8",
            "mov r1, sl",
            "bl dhd_priv_ioctl",
            "mov r5, r0",
            "mov r0, r4",
            "bl dhd_perim_unlock",
            "b 0x8021600",
            "mov r0, r6",
            "ldr r1, [sl, 0x10]",
            "bl fcn.08019db4",
            "mov r5, r0",
            "mov r0, r4",
            "bl dhd_perim_unlock",
            "b 0x8021600",
            "mov r0, r4",
            "mvn r5, 0x5e",
            "bl dhd_perim_unlock",
            "b 0x8021600",
            "mov r0, r4",
            "mov r1, sb",
            "add r2, sp, 4",
            "mov r3, 0",
            "bl dhd_ioctl_process",
            "mov sl, r0",
            "b 0x80215ec",
            "mov r1, r8",
            "mov r2, r7",
            "bl __copy_to_user",
            "subs sl, r0, 0",
            "beq 0x80215bc",
            "b 0x80215b8",
            "ldr r3, [r7]",
            "tst r3, 1",
            "bne 0x8021700",
            "mov r0, r4",
            "mvn r5, 0",
            "bl dhd_perim_unlock",
            "b 0x8021600",
            "mov r0, r8",
            "mov r2, r7",
            "bl __copy_from_user",
            "cmp r0, 0",
            "beq 0x8021548",
            "mov r0, r4",
            "mvn sl, 0x14",
            "bl dhd_perim_lock",
            "b 0x80215c4",
            "mov r0, r8",
            "mov r1, r7",
            "bl __memzero",
            "b 0x80216c8",
            "mov r2, sb",
            "ldr r1, [0x08021714]",
            "mov r3, r5",
            "ldr r0, [0x08021718]",
            "bl printk",
            "b 0x8021418",
            "ldr r1, [0x08021714]",
            "ldr r0, [0x0802171c]",
            "bl printk",
            "b 0x80216a4"
        ]
    },
    "fcn.08019db4": {
        "function_address": "0x08019db4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sl, lr}",
            "mov r7, r0",
            "ldr r6, [0x08019fcc]",
            "sub sp, sp, 0xf4",
            "mov r4, r1",
            "ldr r3, [r6]",
            "tst r3, 2",
            "bne 0x8019fbc",
            "mov r3, sp",
            "add r0, sp, 0xec",
            "bic r5, r3, 0x1fc0",
            "bic r5, r5, 0x3f",
            "ldr r3, [r5, 8]",
            "adds r2, r4, 4",
            "sbcslo r2, r2, r3",
            "movlo r3, 0",
            "cmp r3, 0",
            "bne 0x8019ec4",
            "mov r1, r4",
            "mov r2, 4",
            "bl __copy_from_user",
            "cmp r0, 0",
            "bne 0x8019f40",
            "ldr r3, [sp, 0xec]",
            "cmp r3, 3",
            "mvnne r0, 0x5e",
            "beq 0x8019e28",
            "add sp, sp, 0xf4",
            "pop {r4, r5, r6, r7, r8, sl, pc}",
            "ldr r3, [r5, 8]",
            "adds r2, r4, 0xc4",
            "sbcslo r2, r2, r3",
            "movlo r3, 0",
            "cmp r3, 0",
            "bne 0x8019ed4",
            "mov r1, r4",
            "add r0, sp, 8",
            "mov r2, 0xc4",
            "bl __copy_from_user",
            "subs r8, r0, 0",
            "bne 0x8019f40",
            "mov r2, 0x20",
            "add r1, sp, 0xc",
            "add r0, sp, 0xcc",
            "bl strncpy",
            "add r0, sp, 8",
            "mov r1, 0xc4",
            "strb r8, [sp, 0xeb]",
            "bl __memzero",
            "ldr r3, [sp, 0xec]",
            "add r0, sp, 0xcc",
            "ldr r1, [0x08019fd0]",
            "str r3, [sp, 8]",
            "bl strcmp",
            "subs sl, r0, 0",
            "beq 0x8019f48",
            "ldrb r3, [r7, 0x1c]",
            "cmp r3, 0",
            "bne 0x8019ee8",
            "ldr r3, [r6]",
            "tst r3, 1",
            "mvneq r0, 0x12",
            "beq 0x8019e20",
            "ldr r0, [0x08019fd4]",
            "ldr r1, [0x08019fd8]",
            "bl printk",
            "mvn r0, 0x12",
            "b 0x8019e20",
            "mov r1, 4",
            "bl __memzero",
            "mvn r0, 0xd",
            "b 0x8019e20",
            "add r0, sp, 8",
            "mov r1, 0xc4",
            "bl __memzero",
            "mvn r0, 0xd",
            "b 0x8019e20",
            "ldrb r3, [r7, 0x31]",
            "cmp r3, 0",
            "addne r0, sp, 0xc",
            "movne r1, 0x20",
            "ldrne r2, [0x08019fdc]",
            "addeq r0, sp, 0xc",
            "moveq r1, 0x20",
            "ldreq r2, [0x08019fe0]",
            "addne r8, sp, 0x2c",
            "addeq r8, sp, 0x2c",
            "bl snprintf",
            "ldr r2, [0x08019fe4]",
            "mov r0, r8",
            "ldr r3, [r7, 0x34]",
            "mov r1, 0x20",
            "bl snprintf",
            "ldr r3, [r5, 8]",
            "adds r2, r4, 0xc4",
            "sbcslo r2, r2, r3",
            "movlo r3, 0",
            "cmp r3, 0",
            "beq 0x8019f74",
            "mvn r0, 0xd",
            "b 0x8019e20",
            "mov r1, 0x20",
            "ldr r2, [0x08019fe8]",
            "add r0, sp, 0xc",
            "add r8, sp, 0x2c",
            "bl snprintf",
            "mov r0, r8",
            "ldr r1, [0x08019fec]",
            "mov r2, 0x1f",
            "bl strncpy",
            "strb sl, [sp, 0x4b]",
            "b 0x8019f14",
            "mov r0, r4",
            "add r1, sp, 8",
            "mov r2, 0xc4",
            "bl __copy_to_user",
            "subs r4, r0, 0",
            "bne 0x8019f40",
            "ldr r0, [r6]",
            "ands r0, r0, 0x10",
            "beq 0x8019e20",
            "add ip, sp, 0xc",
            "ldr r0, [0x08019ff0]",
            "ldr r1, [0x08019fd8]",
            "mov r2, 0x20",
            "add r3, sp, 0xcc",
            "str ip, [sp]",
            "bl printk",
            "mov r0, r4",
            "b 0x8019e20",
            "ldr r1, [0x08019fd8]",
            "ldr r0, [0x08019ff4]",
            "bl printk",
            "b 0x8019dd4"
        ]
    },
    "sym.wifi_plat_dev_drv_probe": {
        "function_address": "0x08022298",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r1, 0x400",
            "ldr r5, [0x08022304]",
            "mov r6, r0",
            "ldr r3, [r0, 0x5c]",
            "ldr ip, [r5]",
            "ldr r2, [0x08022308]",
            "ldr r4, [ip, 4]",
            "str r3, [r4, 0x14]",
            "bl platform_get_resource_byname",
            "cmp r0, 0",
            "beq 0x80222e8",
            "ldr r3, [r0]",
            "str r3, [r4, 4]",
            "ldr r3, [r0, 0xc]",
            "and r3, r3, 0xf",
            "str r3, [r4, 8]",
            "bl fcn.0802203c",
            "str r0, [r5, 8]",
            "pop {r4, r5, r6, pc}",
            "mov r0, r6",
            "mov r1, 0x400",
            "ldr r2, [0x0802230c]",
            "bl platform_get_resource_byname",
            "cmp r0, 0",
            "beq 0x80222dc",
            "b 0x80222c8"
        ]
    },
    "fcn.0802203c": {
        "function_address": "0x0802203c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "sub sp, sp, 8",
            "ldr r7, [0x08022258]",
            "ldr r3, [r7]",
            "cmp r3, 0",
            "beq 0x80221e4",
            "ldr r8, [0x0802225c]",
            "ldr r2, [r8]",
            "cmp r2, 0",
            "beq dhd_bus_register",
            "ldr r2, [r3]",
            "cmp r2, 0",
            "beq dhd_bus_register",
            "ldr r5, [0x08022260]",
            "mov r2, 0",
            "mov r6, r2",
            "mov sb, r5",
            "ldr r1, [r5]",
            "add r2, r2, r2, lsl 3",
            "ldr r3, [r3, 4]",
            "tst r1, 1",
            "add r4, r3, r2, lsl 2",
            "bne 0x8022234",
            "tst r1, 4",
            "bne 0x80221f0",
            "mov sl, 3",
            "mov r2, 0xc8",
            "mov r1, 1",
            "mov r0, r4",
            "bl wifi_platform_set_power",
            "cmp r0, 0",
            "beq 0x8022184",
            "ldr r3, [r5]",
            "tst r3, 1",
            "bne 0x8022220",
            "mov r1, 0",
            "mov r0, r4",
            "mov r2, r1",
            "bl wifi_platform_set_power",
            "subs sl, sl, 1",
            "bhs 0x80220a4",
            "ldr r3, [r7]",
            "add r6, r6, 1",
            "mov r2, r6",
            "ldr r1, [r3]",
            "cmp r6, r1",
            "blo 0x8022080",
            "bl dhd_bus_register",
            "subs r5, r0, 0",
            "beq 0x8022178",
            "ldr r3, [0x08022260]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "bne 0x8022248",
            "ldr r3, [r8]",
            "cmp r3, 0",
            "beq 0x8022178",
            "ldr r2, [r7]",
            "ldr r3, [r2]",
            "cmp r3, 0",
            "beq 0x8022178",
            "mov r3, 0",
            "mov r4, r3",
            "ldr r2, [r2, 4]",
            "add r3, r3, r3, lsl 3",
            "mov r1, 0",
            "add r4, r4, 1",
            "add r6, r2, r3, lsl 2",
            "mov r0, r6",
            "bl wifi_platform_bus_enumerate",
            "mov r1, 0",
            "mov r0, r6",
            "mov r2, r1",
            "bl wifi_platform_set_power",
            "ldr r2, [r7]",
            "mov r3, r4",
            "ldr r1, [r2]",
            "cmp r4, r1",
            "blo 0x8022138",
            "mov r0, r5",
            "add sp, sp, 8",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}",
            "mov r1, 1",
            "mov r0, r4",
            "bl wifi_platform_bus_enumerate",
            "cmp r0, 0",
            "beq 0x80221b8",
            "ldr r3, [r5]",
            "tst r3, 1",
            "beq 0x80220c8",
            "mov r2, sl",
            "ldr r1, [r4]",
            "ldr r0, [0x08022264]",
            "bl printk",
            "b 0x80220c8",
            "cmp sl, 0",
            "bne 0x80220e0",
            "ldr r3, [r5]",
            "tst r3, 1",
            "mvneq r5, 0x12",
            "beq 0x8022178",
            "ldr r1, [r4]",
            "mvn r5, 0x12",
            "ldr r0, [0x08022268]",
            "bl printk",
            "b 0x8022178",
            "add sp, sp, 8",
            "pop {r4, r5, r6, r7, r8, sb, sl, lr}",
            "b dhd_bus_register",
            "ldmib r4, {r1, r2, r3, ip}",
            "ldr r0, [0x0802226c]",
            "str ip, [sp]",
            "bl printk",
            "ldr r3, [r5]",
            "tst r3, 4",
            "beq 0x80220a0",
            "add r1, r4, 0x18",
            "ldr r0, [0x08022270]",
            "ldm r1, {r1, r2, r3}",
            "bl printk",
            "b 0x80220a0",
            "ldr r1, [r4]",
            "mov r2, sl",
            "ldr r0, [0x08022274]",
            "bl printk",
            "b 0x80220c8",
            "ldr r1, [r3, r2, lsl 2]",
            "ldr r0, [0x08022278]",
            "bl printk",
            "ldr r1, [sb]",
            "b 0x8022098",
            "ldr r1, [0x0802227c]",
            "ldr r0, [0x08022280]",
            "bl printk",
            "b 0x8022114"
        ]
    },
    "sym.dhd_msgbuf_dmaxfer_process": {
        "function_address": "0x0802343c",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r5, r0",
            "ldr r4, [r0, 8]",
            "ldr r0, [r4, 0x2d0]",
            "ldr r1, [r4, 0x2f0]",
            "bl osl_cache_inv",
            "ldr r6, [r4, 0x2b8]",
            "cmp r6, 0",
            "beq 0x8023494",
            "ldr r1, [r4, 0x2d0]",
            "cmp r1, 0",
            "beq 0x8023494",
            "ldr r7, [r4, 0x2f0]",
            "mov r0, r6",
            "mov r2, r7",
            "bl memcmp",
            "cmp r0, 0",
            "bne 0x80234b0",
            "ldr r3, [0x080234e0]",
            "ldr r3, [r3]",
            "tst r3, 4",
            "bne 0x80234d4",
            "mov r0, r5",
            "add r1, r4, 0x2b8",
            "bl fcn.08023418",
            "ldr r3, [r5, 8]",
            "mov r2, 0",
            "strb r2, [r3, 0x2f4]",
            "pop {r3, r4, r5, r6, r7, pc}",
            "mov r1, r6",
            "mov r2, r7",
            "ldr r0, [0x080234e4]",
            "bl bcm_print_bytes",
            "ldr r0, [0x080234e8]",
            "ldr r1, [r4, 0x2d0]",
            "ldr r2, [r4, 0x2f0]",
            "bl bcm_print_bytes",
            "b 0x8023494",
            "ldr r0, [0x080234ec]",
            "bl printk",
            "b 0x8023494"
        ]
    },
    "fcn.08023418": {
        "function_address": "0x08023418",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "subs r4, r1, 0",
            "mov r5, r0",
            "popeq {r3, r4, r5, pc}",
            "bl fcn.080233d4",
            "mov r0, r5",
            "add r1, r4, 0x18",
            "pop {r3, r4, r5, lr}",
            "b fcn.080233d4"
        ]
    },
    "sym.dhd_prot_alloc_ring_space": {
        "function_address": "0x08034678",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sl, lr}",
            "mov r4, r1",
            "ldrb r5, [sp, 0x20]",
            "mov r1, r2",
            "mov r7, r2",
            "mov r6, r3",
            "mov r2, r3",
            "mov r8, r0",
            "mov r3, r5",
            "mov r0, r4",
            "bl fcn.0803420c",
            "subs sl, r0, 0",
            "beq 0x80346b4",
            "mov r0, sl",
            "pop {r3, r4, r5, r6, r7, r8, sl, pc}",
            "movw r3, 0x1911",
            "ldrb r3, [r8, r3]",
            "cmp r3, 0",
            "beq 0x8034714",
            "mov r0, r8",
            "mov r1, 7",
            "ldrh r2, [r4, 2]",
            "bl 0x80346d0",
            "strh r0, [r4, 4]",
            "mov r0, r4",
            "mov r1, r7",
            "mov r2, r6",
            "mov r3, r5",
            "bl fcn.0803420c",
            "subs sl, r0, 0",
            "bne 0x80346ac",
            "ldr r3, [0x0803472c]",
            "ldr r3, [r3]",
            "tst r3, 4",
            "beq 0x80346ac",
            "add r1, r4, 0x36",
            "ldr r0, [0x08034730]",
            "bl 0x803470c",
            "b 0x80346ac",
            "ldr r0, [r8, 4]",
            "add r1, r4, 4",
            "mov r2, 0xf",
            "ldrh r3, [r4, 2]",
            "bl 0x8034724",
            "b 0x80346d8"
        ]
    },
    "fcn.0803420c": {
        "function_address": "0x0803420c",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "mov r6, r1",
            "ldrh r4, [r0, 6]",
            "mov ip, r0",
            "sub sp, sp, 0xc",
            "ldrh r5, [r0, 4]",
            "ldrh r1, [r0, 8]",
            "cmp r4, r5",
            "rsblo r0, r5, r1",
            "rsbhs r0, r5, r4",
            "addlo r0, r4, r0",
            "rsbhs r7, r4, r1",
            "rsb r0, r0, r1",
            "rsblo r7, r4, r5",
            "sub r0, r0, 1",
            "cmp r0, r7",
            "movge r0, r7",
            "uxth r0, r0",
            "cmp r0, 0",
            "beq 0x80342b8",
            "cmp r3, 0",
            "bne 0x80342a4",
            "cmp r0, r6",
            "movlo r6, r0",
            "strh r6, [r2]",
            "ldrh r3, [ip, 6]",
            "ldrh r1, [ip, 8]",
            "ldrh r0, [ip, 0xa]",
            "ldr r2, [ip, 0x14]",
            "add r6, r3, r6",
            "cmp r6, r1",
            "mla r0, r0, r3, r2",
            "moveq r3, 0",
            "strheq r3, [ip, 6]",
            "beq 0x80342c8",
            "strhlt r6, [ip, 6]",
            "movge r0, 0",
            "b 0x80342c8",
            "cmp r0, r6",
            "bhs 0x8034264",
            "rsb r1, r4, r1",
            "cmp r1, r6",
            "blt 0x8034264",
            "ldr r3, [0x080342f0]",
            "ldr r0, [r3]",
            "ands r0, r0, 4",
            "bne 0x80342d0",
            "ldr r0, [0x080342f4]",
            "add r1, ip, 0x36",
            "mov r2, r6",
            "mov r3, r4",
            "str r5, [sp]"
        ]
    },
    "sym.dhd_msgbuf_rxbuf_post.isra.11": {
        "function_address": "0x080347b4",
        "instructions": [
            "movw r3, 0x1970",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "ldr r3, [r0, r3]",
            "sub sp, sp, 0x34",
            "mov r7, r0",
            "ldr r6, [r0, 8]",
            "tst r3, 4",
            "str r6, [sp, 0x1c]",
            "bne 0x8034b18",
            "ldrh r2, [r6, 6]",
            "ldrh r3, [r6, 4]",
            "rsb r3, r3, r2",
            "sxth r3, r3",
            "cmp r3, 0x1f",
            "ble 0x8034b18",
            "movw r3, 0x8da9",
            "mov r0, 0xff",
            "movt r3, 0x8184",
            "str r0, [sp, 0x18]",
            "str r3, [sp, 0x14]",
            "add r1, r6, 0x68",
            "mov r4, 0",
            "mov r0, r7",
            "mov r2, 0x20",
            "add r3, sp, 0x2e",
            "str r1, [sp, 0x20]",
            "strh r4, [sp, 0x2e]",
            "str r4, [sp]",
            "bl sym.dhd_prot_alloc_ring_space",
            "cmp r0, 0",
            "str r0, [sp, 0x24]",
            "beq 0x8034b08",
            "ldrh r3, [sp, 0x2e]",
            "cmp r3, r4",
            "beq 0x8034a94",
            "str r4, [sp, 0x10]",
            "mov sl, r4",
            "ldr r5, [sp, 0x24]",
            "mov r8, r4",
            "b 0x80349b0",
            "ldr r0, [r7]",
            "bl 0x8034858",
            "mov r1, r4",
            "ldr r0, [r7]",
            "bl 0x8034864",
            "ldr sb, [r7]",
            "mov fp, r0",
            "mov r1, r4",
            "mov r0, sb",
            "bl 0x8034878",
            "mov r3, 2",
            "mov r1, r0",
            "mov r2, fp",
            "mov r0, sb",
            "stm sp, {r4, r8}",
            "bl 0x8034890",
            "subs sb, r0, 0",
            "mov r1, r4",
            "beq 0x8034ac4",
            "mov r3, 0x30c",
            "ldr r0, [r7]",
            "ldrh r2, [r6, r3]",
            "add sl, sl, 1",
            "bl 0x80348b0",
            "mov r1, r4",
            "ldr r0, [r7]",
            "bl 0x80348bc",
            "mov r3, 0x11",
            "strb r8, [r5, 1]",
            "strb r3, [r5]",
            "uxth r0, r0",
            "ldr r2, [r6, 0x94]",
            "uxtb sl, sl",
            "ldr r1, [sp, 0x14]",
            "umull r1, r3, r1, r2",
            "lsr r3, r3, 7",
            "str r0, [sp, 0x10]",
            "mov r0, r4",
            "rsb r1, r3, r3, lsl 6",
            "add r3, r3, r1, lsl 2",
            "rsb r3, r3, r2",
            "strb r3, [r5, 3]",
            "ldr r2, [r6, 0x94]",
            "ldr r3, [r6, 0x8c]",
            "add r2, r2, 1",
            "str r2, [r6, 0x94]",
            "ldr r2, [r7, 8]",
            "ldr fp, [r2, 0x300]",
            "str r3, [sp, 0xc]",
            "bl 0x8034918",
            "ldr r2, [sp, 0x10]",
            "strh r2, [r0, 0x10]",
            "mov r0, r4",
            "bl 0x8034928",
            "mov r2, r0",
            "mov r0, r4",
            "str r8, [r2, 0x18]",
            "bl 0x8034938",
            "str sb, [r0, 0x14]",
            "mov r0, r4",
            "bl 0x8034944",
            "ldr r3, [sp, 0xc]",
            "mov r1, r4",
            "str r3, [r0, 0x1c]",
            "ldr r0, [fp, 4]",
            "bl 0x8034958",
            "ldr r3, [sp, 0x10]",
            "mov r0, 0x30c",
            "str r8, [r5, 0x1c]",
            "str sl, [sp, 0x10]",
            "strh r3, [r5, 0xa]",
            "ldrh r3, [r6, r0]",
            "add r3, sb, r3",
            "str r3, [r5, 0x18]",
            "ldrh r3, [r6, r0]",
            "str r4, [r5, 4]",
            "cmp r3, 0",
            "strh r3, [r5, 8]",
            "streq r3, [r5, 0x14]",
            "streq r3, [r5, 0x10]",
            "ldrh r3, [sp, 0x2e]",
            "strne r8, [r5, 0x14]",
            "strne sb, [r5, 0x10]",
            "ldrh r2, [r6, 0x72]",
            "cmp sl, r3",
            "add r5, r5, r2",
            "bhs 0x8034a94",
            "mov r1, 0x820",
            "ldr r0, [r7]",
            "bl 0x80349b8",
            "subs r4, r0, 0",
            "mov r2, 0x20",
            "mov r1, r4",
            "bne 0x8034854",
            "movw r3, 0",
            "movt r3, 0",
            "ldr r2, [r3]",
            "ldr r3, [r7, 0xc8]",
            "tst r2, 4",
            "add r3, r3, 1",
            "str r3, [r7, 0xc8]",
            "bne 0x8034b58",
            "ldr r3, [r7, 0x90]",
            "add r3, r3, 1",
            "str r3, [r7, 0x90]",
            "ldrh r3, [sp, 0x2e]",
            "ldr r1, [sp, 0x10]",
            "cmp r3, r1",
            "bls 0x8034a94",
            "ldrh r2, [r6, 0x6e]",
            "rsb sl, sl, r3",
            "ldr r0, [sp, 0x10]",
            "cmp r2, sl",
            "ldrhlt r2, [r6, 0x70]",
            "rsbge r3, r3, r2",
            "ldrge r2, [sp, 0x10]",
            "rsblt r3, r3, r2",
            "addlt r3, r1, r3",
            "addge r3, r2, r3",
            "strh r3, [r6, 0x6e]",
            "cmp r0, 0",
            "ldr r3, [sp, 0x10]",
            "ldreq r1, [sp, 0x10]",
            "strh r3, [sp, 0x2e]",
            "bne 0x8034aa8",
            "ldr r2, [sp, 0x1c]",
            "ldr r0, [sp, 0x1c]",
            "ldrh r3, [r2, 4]",
            "ldrh r2, [r2, 6]",
            "add r3, r1, r3",
            "uxth r3, r3",
            "rsb r2, r3, r2",
            "strh r3, [r0, 4]",
            "sxth r3, r2",
            "cmp r3, 0x1f",
            "ble 0x8034b18",
            "ldr r0, [sp, 0x18]",
            "sub r3, r0, 1",
            "uxth r3, r3",
            "cmp r3, 0",
            "str r3, [sp, 0x18]",
            "beq 0x8034b20",
            "ldr r6, [r7, 8]",
            "b 0x8034804",
            "str r3, [sp, 0x10]",
            "ldr r0, [sp, 0x10]",
            "cmp r0, 0",
            "ldreq r1, [sp, 0x10]",
            "beq 0x8034a48",
            "ldr r1, [sp, 0x20]",
            "mov r0, r7",
            "ldr r2, [sp, 0x24]",
            "ldr r3, [sp, 0x10]",
            "bl sym.dhd_prot_ring_write_complete",
            "ldrh r1, [sp, 0x2e]",
            "b 0x8034a48",
            "mov r3, 2",
            "ldr r0, [r7]",
            "mov r1, sb",
            "mov r2, fp",
            "bl 0x8034ad4",
            "ldr r0, [r7]",
            "mov r1, r4",
            "mov r2, sb",
            "bl 0x8034ae4",
            "movw r0, 0",
            "movt r0, 0",
            "ldr r3, [r0]",
            "tst r3, 1",
            "beq 0x80349f8",
            "ldr r0, [0x08034b80]",
            "bl 0x8034b00",
            "b 0x80349f8",
            "ldr r3, [0x08034b84]",
            "ldr r3, [r3]",
            "tst r3, 4",
            "bne 0x8034b6c",
            "add sp, sp, 0x34",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r4, [0x08034b84]",
            "ldr r3, [r4]",
            "tst r3, 4",
            "beq 0x8034b18",
            "ldr r0, [0x08034b88]",
            "bl 0x8034b34",
            "ldr r3, [r4]",
            "tst r3, 4",
            "beq 0x8034b18",
            "ldr r2, [sp, 0x1c]",
            "ldr r0, [0x08034b8c]",
            "ldrh r1, [r2, 4]",
            "bl 0x8034b50",
            "b 0x8034b18",
            "movw r2, 0xc2f",
            "ldr r1, [0x08034b90]",
            "ldr r0, [0x08034b94]",
            "bl 0x8034b64",
            "b 0x80349ec",
            "ldr r1, [0x08034b90]",
            "mov r2, 0xc20",
            "ldr r0, [0x08034b98]",
            "bl 0x8034b78",
            "b 0x8034b18"
        ]
    },
    "sym.dhd_prot_ring_write_complete": {
        "function_address": "0x08034734",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r4, r1",
            "ldrh r1, [r1, 0xa]",
            "mov r5, r0",
            "sub sp, sp, 8",
            "mov r0, r2",
            "ldr r6, [r5, 8]",
            "mul r1, r3, r1",
            "bl 0x8034754",
            "movw r3, 0x1912",
            "ldrb r3, [r5, r3]",
            "cmp r3, 0",
            "bne 0x803479c",
            "ldrh ip, [r4, 2]",
            "add r1, r4, 6",
            "ldr r0, [r5, 4]",
            "mov r2, 2",
            "mov r3, 0x10",
            "str ip, [sp]",
            "bl 0x8034780",
            "ldr r3, [r6, 0x1cc]",
            "ldr r0, [r5, 4]",
            "ldrh r1, [r4, 6]",
            "blx r3",
            "add sp, sp, 8",
            "pop {r4, r5, r6, pc}",
            "mov r0, r5",
            "ldrh r1, [r4, 6]",
            "mov r2, 6",
            "ldrh r3, [r4, 2]",
            "bl 0x80347ac",
            "b 0x8034784"
        ]
    },
    "sym.dhd_prot_get_read_addr": {
        "function_address": "0x08023ac4",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r4, r0",
            "ldr r6, [0x08023be0]",
            "mov r5, r1",
            "mov r7, r2",
            "ldr r3, [r6]",
            "tst r3, 2",
            "bne 0x8023bb0",
            "ldr r3, [r4, 0x14]",
            "cmp r3, 0",
            "beq 0x8023afc",
            "ldr r3, [r4, 0x2ac]",
            "cmp r3, 0",
            "beq 0x8023b10",
            "ldr r4, [r6]",
            "ands r4, r4, 1",
            "bne 0x8023bcc",
            "mov r0, r4",
            "pop {r3, r4, r5, r6, r7, pc}",
            "movw r3, 0x1911",
            "ldrb r3, [r4, r3]",
            "cmp r3, 0",
            "bne 0x8023b90",
            "ldr r0, [r4, 4]",
            "add r1, r5, 6",
            "mov r2, 0x10",
            "ldrh r3, [r5, 2]",
            "bl dhd_bus_cmn_readshared",
            "ldrh r0, [r5, 6]",
            "ldrh r3, [r5, 4]",
            "ldrh ip, [r5, 8]",
            "cmp r3, r0",
            "rsbls r2, r3, r0",
            "rsbhi r2, r3, ip",
            "uxth r2, r2",
            "cmp r2, 0",
            "beq 0x8023ba8",
            "ldrh r1, [r5, 0xa]",
            "add r0, r3, r2",
            "ldr r4, [r5, 0x14]",
            "cmp r0, ip",
            "strhlt r0, [r5, 4]",
            "mla r4, r1, r3, r4",
            "mul r1, r2, r1",
            "movge r3, 0",
            "strhge r3, [r5, 4]",
            "mov r0, r4",
            "str r1, [r7]",
            "bl osl_cache_inv",
            "mov r0, r4",
            "pop {r3, r4, r5, r6, r7, pc}",
            "mov r0, r4",
            "mov r1, 8",
            "ldrh r2, [r5, 2]",
            "bl sym.dhd_prot_dma_indx_get",
            "strh r0, [r5, 6]",
            "b 0x8023b38",
            "mov r4, r2",
            "b 0x8023b08",
            "ldr r3, [r0, 8]",
            "ldr r1, [0x08023be4]",
            "ldr r0, [0x08023be8]",
            "ldr r2, [r3, 0x270]",
            "ldr r3, [r3, 0x258]",
            "bl printk",
            "b 0x8023ae4",
            "ldr r1, [0x08023be4]",
            "mov r4, 0",
            "ldr r0, [0x08023bec]",
            "bl printk",
            "b 0x8023b08"
        ]
    },
    "sym.dhd_prot_dma_indx_get": {
        "function_address": "0x08022dac",
        "instructions": [
            "sub r3, r1, 6",
            "push {r4, r5, r6, r7, lr}",
            "mov r5, r1",
            "sub sp, sp, 0x1c",
            "mov r4, r2",
            "ldr r1, [r0, 8]",
            "cmp r3, 3",
            "ldrls pc, [pc, r3, lsl 2]",
            "b 0x8022e64",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, pc}",
            "ldr r3, [0x08022ea8]",
            "ldr r0, [r3]",
            "ands r0, r0, 1",
            "beq 0x8022e20",
            "ldr r0, [0x08022eac]",
            "ldr r1, [0x08022eb0]",
            "bl printk",
            "mov r0, 0",
            "b 0x8022e20",
            "rsbsvc r2, r7, 0x64",
            "rsbhs r7, r5, sb, ror 8",
            "eorvc r6, r0, 0x25000000",
            "rsbhs r6, r4, r5, ror 2",
            "andeq r6, sl, r5, lsr 8",
            "eorshs r7, sl, r5, lsr 6",
            "cmnvs r6, sb, asr 28",
            "rsbhs r6, r4, ip, ror 18",
            "ldmdbvs r4!, {r0, r1, r2, r3, r5, r6, ip, sp, lr} ^",
            "strtvs r6, [r0], -pc, ror 28",
            "strtmi r7, [r0], -0x26f",
            "cdpvs p1, 6, c4, c9, c13, 2",
            "ldrbvs r2, [r2, -0x67]!",
            "strvc r6, [pc, -r1, ror 8]!",
            "ldrbvs r6, [r4, -0x972]!",
            "strbtvs r6, [lr], -0x920",
            "andeq r7, sl, r5, ror 16",
            "eorshs r7, sl, r5, lsr 6",
            "cmnvs r4, r4, ror 2",
            "rsbhs r2, r4, r0, lsr 10",
            "ldrbvs r7, [r0, -0x974]!",
            "rsbhs r2, r4, r0, lsr 10",
            "invalid",
            "strtvs r2, [r5], -0x74",
            "andeq r0, r0, sl",
            "eorshs r7, sl, r5, lsr 6",
            "invalid"
        ]
    },
    "sym.dhd_prot_event_process": {
        "function_address": "0x08024384",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r5, r0",
            "ldr r3, [r0, 8]",
            "ldr r4, [r1, 4]",
            "ldrh r2, [r3, 0xc]",
            "ldrh r7, [r1, 0xc]",
            "ldrb r6, [r1, 1]",
            "cmp r2, 0",
            "subne r2, r2, 1",
            "strhne r2, [r3, 0xc]",
            "bl fcn.08024328",
            "ldr r3, [r5, 8]",
            "mov r0, r4",
            "ldr sb, [r3, 0x300]",
            "bl osl_pkt_get_tag",
            "ldrh r8, [r0, 0x10]",
            "mov r0, r4",
            "bl osl_pkt_get_tag",
            "mov r0, r4",
            "bl osl_pkt_get_tag",
            "ldr sl, [r0, 0x14]",
            "mov r0, r4",
            "bl osl_pkt_get_tag",
            "ldr r0, [sb, 8]",
            "mov r1, r4",
            "bl dhd_pkt_unlink",
            "cmp r4, 0",
            "popeq {r4, r5, r6, r7, r8, sb, sl, pc}",
            "mov r0, r4",
            "bl osl_pkt_get_tag",
            "ldrh r3, [r0, 0x12]",
            "tst r3, 2",
            "beq 0x802445c",
            "mov r0, r4",
            "bl osl_pkt_get_tag",
            "ldrh r3, [r0, 0x12]",
            "tst r3, 2",
            "bne 0x8024444",
            "ldr r0, [r5]",
            "mov r1, r4",
            "mov r2, r7",
            "bl osl_pktsetlen",
            "ldr r0, [r5, 4]",
            "mov r1, r4",
            "mov r2, r6",
            "mov r3, 1",
            "pop {r4, r5, r6, r7, r8, sb, sl, lr}",
            "b dhd_bus_rx_frame",
            "mov r0, r4",
            "bl osl_pkt_get_tag",
            "ldrh r3, [r0, 0x12]",
            "bic r3, r3, 2",
            "strh r3, [r0, 0x12]",
            "b 0x802441c",
            "mov r3, 2",
            "ldr r0, [r5]",
            "mov r1, sl",
            "mov r2, r8",
            "bl osl_dma_unmap",
            "mov r0, r4",
            "bl osl_pkt_get_tag",
            "ldrh r3, [r0, 0x12]",
            "tst r3, 2",
            "beq 0x802441c",
            "b 0x8024444"
        ]
    },
    "fcn.08024328": {
        "function_address": "0x08024328",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "ldr r4, [r0, 8]",
            "ldrh r5, [r4, 0xc]",
            "ldrh r2, [r4, 8]",
            "rsb r2, r5, r2",
            "cmp r2, 0",
            "ble 0x8024358",
            "mov r1, 1",
            "bl fcn.08023d58",
            "add r0, r0, r5",
            "strh r0, [r4, 0xc]",
            "pop {r3, r4, r5, pc}",
            "ldr r3, [0x08024378]",
            "ldr r3, [r3]",
            "tst r3, 4",
            "popeq {r3, r4, r5, pc}",
            "ldr r0, [0x0802437c]",
            "ldr r1, [0x08024380]",
            "pop {r3, r4, r5, lr}",
            "b printk"
        ]
    },
    "sym.dhd_prot_rxcmplt_process": {
        "function_address": "0x08034d04",
        "instructions": [
            "movw r3, 0x1970",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "ldr r3, [r0, r3]",
            "sub sp, sp, 0x1c",
            "mov r4, r0",
            "mov sl, r1",
            "tst r3, 4",
            "beq 0x8034d3c",
            "ldr r3, [0x08034f6c]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "bne 0x8034f08",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r5, [r1, 4]",
            "ldr r3, [r0, 8]",
            "ldrh fp, [r1, 0x10]",
            "mov r0, r5",
            "ldr r8, [r3, 0x300]",
            "bl 0x8034d50",
            "ldrh r6, [r0, 0x10]",
            "mov r0, r5",
            "bl 0x8034d5c",
            "mov r0, r5",
            "bl 0x8034d64",
            "ldr r7, [r0, 0x14]",
            "mov r0, r5",
            "bl 0x8034d70",
            "ldr r0, [r8, 4]",
            "mov r1, r5",
            "bl 0x8034d7c",
            "cmp r5, 0",
            "beq 0x8034d34",
            "mov r0, r5",
            "bl 0x8034d8c",
            "ldrh r3, [r0, 0x12]",
            "tst r3, 2",
            "beq 0x8034ebc",
            "mov r0, r5",
            "bl 0x8034da0",
            "ldrh r3, [r0, 0x12]",
            "tst r3, 2",
            "bne 0x8034ea4",
            "ldr r3, [r4, 8]",
            "ldrh r2, [r3, 4]",
            "cmp r2, 0",
            "subne r2, r2, 1",
            "uxthne r2, r2",
            "strhne r2, [r3, 4]",
            "ldrh r3, [r3, 6]",
            "sub r3, r3, 0x20",
            "cmp r2, r3",
            "ble 0x8034e98",
            "ldr sb, [0x08034f6c]",
            "ldr r3, [sb]",
            "tst r3, 4",
            "bne 0x8034f1c",
            "ldrh r3, [sl, 0x12]",
            "tst r3, 2",
            "beq 0x8034e00",
            "ldr r3, [sb]",
            "tst r3, 4",
            "bne 0x8034ee4",
            "cmp fp, 0",
            "bne 0x8034e84",
            "ldr r3, [r4, 8]",
            "ldr r2, [r3, 0x1c8]",
            "cmp r2, 0",
            "bne 0x8034ed4",
            "ldr r0, [r4]",
            "mov r1, r5",
            "ldrh r2, [sl, 0xe]",
            "bl 0x8034e24",
            "ldrb r7, [sl, 1]",
            "mov r0, r4",
            "mov r1, r7",
            "bl 0x8034e34",
            "cmp r0, 0",
            "beq 0x8034e4c",
            "ldrh r3, [sl, 0x12]",
            "tst r3, 2",
            "bne 0x8034ef0",
            "ldr r6, [r4, 0x34]",
            "mov r3, 1",
            "ldr ip, [r4, 0x3c]",
            "mov r1, r5",
            "mov r2, r7",
            "ldr r0, [r4, 4]",
            "add r6, r6, r3",
            "str r6, [r4, 0x34]",
            "ldrh r5, [sl, 0xe]",
            "add ip, ip, r5",
            "str ip, [r4, 0x3c]",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "b 0x8034e80",
            "ldr r0, [r4]",
            "mov r1, r5",
            "mov r2, fp",
            "bl 0x8034e90",
            "b 0x8034e18",
            "mov r0, r4",
            "bl sym.dhd_msgbuf_rxbuf_post.isra.11",
            "b 0x8034dd8",
            "mov r0, r5",
            "bl 0x8034ea8",
            "ldrh r3, [r0, 0x12]",
            "bic r3, r3, 2",
            "strh r3, [r0, 0x12]",
            "b 0x8034db0",
            "ldr r0, [r4]",
            "mov r1, r7",
            "mov r2, r6",
            "mov r3, 2",
            "bl 0x8034ecc",
            "b 0x8034d9c",
            "ldr r0, [r4]",
            "mov r1, r5",
            "bl 0x8034edc",
            "b 0x8034e18",
            "ldr r0, [0x08034f70]",
            "bl 0x8034ee8",
            "b 0x8034e00",
            "mov r0, r4",
            "mov r1, r5",
            "mov r2, r7",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "b 0x8034f04",
            "ldr r0, [0x08034f74]",
            "ldr r1, [0x08034f78]",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "b 0x8034f18",
            "ldr r3, [sl, 4]",
            "mov r1, r5",
            "ldr r0, [r4]",
            "ldrh r8, [sl, 0xe]",
            "ldrb r7, [sl, 1]",
            "ldrb r6, [sl, 2]",
            "str r3, [sp, 0x14]",
            "bl 0x8034f38",
            "ldr r3, [sp, 0x14]",
            "mov r2, fp",
            "ldrh ip, [sl, 0xc]",
            "str r0, [sp, 8]",
            "mov r1, r3",
            "ldr r0, [0x08034f7c]",
            "mov r3, r8",
            "str r7, [sp]",
            "str r6, [sp, 4]",
            "str ip, [sp, 0xc]",
            "bl 0x8034f64",
            "b 0x8034de8"
        ]
    },
    "sym.dhdpcie_checkdied.constprop.15": {
        "function_address": "0x0802998c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r0",
            "ldr r5, [0x08029e90]",
            "sub sp, sp, 0x174",
            "ldr r8, [r0, 0x170]",
            "ldr r7, [r5]",
            "tst r7, 2",
            "bne 0x8029e24",
            "ands r7, r7, 0x20000",
            "movne r5, 0",
            "bne 0x8029a9c",
            "ldr r3, [r4]",
            "mov r1, 0x200",
            "ldr r0, [r3]",
            "bl osl_malloc",
            "subs sl, r0, 0",
            "beq 0x8029b10",
            "ldr r3, [r4]",
            "mov r1, 0x100",
            "ldr r0, [r3]",
            "bl osl_malloc",
            "subs r6, r0, 0",
            "beq 0x8029aa8",
            "mov r0, r4",
            "bl fcn.08028fb4",
            "subs r5, r0, 0",
            "blt 0x8029a50",
            "mov r1, sl",
            "mov r2, 0x200",
            "add r0, sp, 0x154",
            "bl bcm_binit",
            "ldr r3, [r8, 0x14]",
            "add r0, sp, 0x154",
            "ldr r1, [0x08029e94]",
            "ldr r2, [r8, 0x18]",
            "bl bcm_bprintf",
            "ldr r3, [r8]",
            "tst r3, 0x100",
            "beq 0x8029b00",
            "ldr r3, [r4, 0x170]",
            "ldr r3, [r3]",
            "ands r7, r3, 0x600",
            "beq 0x8029ad8",
            "tst r3, 0x200",
            "bne 0x8029b38",
            "ands r7, r3, 0x400",
            "bne 0x8029bc4",
            "tst r3, 0x600",
            "bne 0x8029b24",
            "ldr r3, [r4]",
            "mov r1, sl",
            "mov r2, 0x200",
            "ldr r0, [r3]",
            "bl osl_mfree",
            "cmp r6, 0",
            "beq 0x8029a80",
            "ldr r3, [r4]",
            "mov r1, r6",
            "mov r2, 0x100",
            "ldr r0, [r3]",
            "bl osl_mfree",
            "cmp r7, 0",
            "beq 0x8029a9c",
            "ldr r3, [r4]",
            "mov r1, r7",
            "ldr r2, [sp, 0x168]",
            "ldr r0, [r3]",
            "bl osl_mfree",
            "mov r0, r5",
            "add sp, sp, 0x174",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r3, [r5]",
            "tst r3, 1",
            "moveq r7, r6",
            "mvneq r5, 0x1a",
            "beq 0x8029a50",
            "ldr r0, [0x08029e98]",
            "mov r2, 0x100",
            "ldr r1, [0x08029e9c]",
            "mov r7, r6",
            "bl printk",
            "mvn r5, 0x1a",
            "b 0x8029a50",
            "tst r3, 0x100",
            "ldr r2, [0x08029ea0]",
            "ldr r3, [0x08029ea4]",
            "add r0, sp, 0x154",
            "ldr r1, [0x08029ea8]",
            "movne r2, r3",
            "bl bcm_bprintf",
            "ldr r3, [r4, 0x170]",
            "ldr r3, [r3]",
            "b 0x8029a48",
            "add r0, sp, 0x154",
            "ldr r1, [0x08029eac]",
            "bl bcm_bprintf",
            "b 0x8029a28",
            "ldr r3, [r5]",
            "tst r3, 1",
            "bne 0x8029e38",
            "mvn r5, 0x1a",
            "b 0x8029a9c",
            "ldr r1, [0x08029e9c]",
            "ldr r2, [sp, 0x15c]",
            "ldr r0, [0x08029eb0]",
            "bl printk",
            "b 0x8029a50",
            "add r0, sp, 0x154",
            "ldr r1, [0x08029eb4]",
            "bl bcm_bprintf",
            "ldr r3, [r4, 0x170]",
            "ldr r2, [r3, 8]",
            "cmp r2, 0",
            "bne 0x8029d20",
            "ldr r2, [r3, 0xc]",
            "cmp r2, 0",
            "beq 0x8029ba8",
            "mov r7, 0",
            "mov ip, 0x100",
            "strb r7, [r6]",
            "mov r0, r4",
            "ldr r2, [r4, 0x170]",
            "mov r1, r7",
            "mov r3, r6",
            "ldr r2, [r2, 0xc]",
            "str ip, [sp]",
            "bl fcn.08027c78",
            "subs r5, r0, 0",
            "blt 0x8029a50",
            "strb r7, [r6, 0xff]",
            "add r0, sp, 0x154",
            "ldr r1, [0x08029eb8]",
            "mov r2, r6",
            "bl bcm_bprintf",
            "ldr r3, [r4, 0x170]",
            "ldr r2, [r3, 0x10]",
            "add r0, sp, 0x154",
            "ldr r1, [0x08029ebc]",
            "bl bcm_bprintf",
            "ldr r3, [r4, 0x170]",
            "ldr r3, [r3]",
            "b 0x8029a40",
            "ldr r2, [r4]",
            "mov ip, 1",
            "mov r0, r4",
            "mov r1, 0",
            "add r3, sp, 0x104",
            "strb ip, [r2, 0x2a9]",
            "mov ip, 0x50",
            "ldr r2, [r4, 0x170]",
            "ldr r2, [r2, 4]",
            "str ip, [sp]",
            "bl fcn.08027c78",
            "subs r5, r0, 0",
            "movlt r7, 0",
            "blt 0x8029a50",
            "ldr r3, [sp, 0x10c]",
            "add r0, sp, 0x154",
            "ldr r1, [r4, 0x170]",
            "mov r7, 4",
            "ldr ip, [sp, 0x14c]",
            "str r3, [sp]",
            "ldr r3, [sp, 0x110]",
            "str ip, [sp, 0xc]",
            "ldr ip, [sp, 0x150]",
            "str r3, [sp, 4]",
            "ldr r3, [sp, 0x148]",
            "str ip, [sp, 0x10]",
            "ldr r2, [sp, 0x104]",
            "str r3, [sp, 8]",
            "ldr ip, [r1, 4]",
            "ldr r3, [sp, 0x108]",
            "ldr r1, [0x08029ec0]",
            "str ip, [sp, 0x14]",
            "ldr ip, [sp, 0x114]",
            "str ip, [sp, 0x18]",
            "ldr ip, [sp, 0x118]",
            "str ip, [sp, 0x1c]",
            "ldr ip, [sp, 0x11c]",
            "str ip, [sp, 0x20]",
            "ldr ip, [sp, 0x120]",
            "str ip, [sp, 0x24]",
            "ldr ip, [sp, 0x124]",
            "str ip, [sp, 0x28]",
            "ldr ip, [sp, 0x128]",
            "str ip, [sp, 0x2c]",
            "ldr ip, [sp, 0x12c]",
            "str ip, [sp, 0x30]",
            "ldr ip, [sp, 0x130]",
            "str ip, [sp, 0x34]",
            "bl bcm_bprintf",
            "ldr r2, [r4, 0x170]",
            "mov r0, r4",
            "mov r1, 0",
            "add r3, sp, 0x164",
            "ldr r2, [r2, 0x14]",
            "str r7, [sp]",
            "add r2, r2, 8",
            "bl fcn.08027c78",
            "cmp r0, 0",
            "blt 0x8029d10",
            "ldr r2, [r4, 0x170]",
            "mov r0, r4",
            "mov r1, 0",
            "add r3, sp, 0x168",
            "ldr r2, [r2, 0x14]",
            "str r7, [sp]",
            "add r2, r2, 0xc",
            "bl fcn.08027c78",
            "cmp r0, 0",
            "blt 0x8029d10",
            "ldr r2, [r4, 0x170]",
            "mov r0, r4",
            "mov r1, 0",
            "add r3, sp, 0x16c",
            "ldr r2, [r2, 0x14]",
            "str r7, [sp]",
            "add r2, r2, 0x10",
            "bl fcn.08027c78",
            "cmp r0, 0",
            "blt 0x8029d10",
            "ldr r1, [sp, 0x168]",
            "movw r3, 0x7e8",
            "cmp r1, r3",
            "bls 0x8029d6c",
            "ldr r3, [r4, 0x170]",
            "mov r7, 0",
            "ldr r3, [r3]",
            "b 0x8029a48",
            "mov r7, 0",
            "mov ip, 0x100",
            "strb r7, [r6]",
            "mov r0, r4",
            "ldr r2, [r4, 0x170]",
            "mov r1, r7",
            "mov r3, r6",
            "ldr r2, [r2, 8]",
            "str ip, [sp]",
            "bl fcn.08027c78",
            "subs r5, r0, 0",
            "blt 0x8029a50",
            "strb r7, [r6, 0xff]",
            "add r0, sp, 0x154",
            "ldr r1, [0x08029ec4]",
            "mov r2, r6",
            "bl bcm_bprintf",
            "ldr r3, [r4, 0x170]",
            "b 0x8029b54",
            "ldr r3, [r4]",
            "ldr r0, [r3]",
            "bl osl_malloc",
            "subs r7, r0, 0",
            "beq 0x8029e18",
            "ldr ip, [sp, 0x168]",
            "mov r0, r4",
            "mov r1, 0",
            "ldr r2, [sp, 0x164]",
            "mov r3, r7",
            "str ip, [sp]",
            "bl fcn.08027c78",
            "cmp r0, 0",
            "blt 0x8029e18",
            "ldr sb, [sp, 0x168]",
            "cmp sb, 0",
            "movne r3, 0",
            "strne r3, [sp, 0x3c]",
            "beq 0x8029e18",
            "ldr fp, [sp, 0x16c]",
            "mov r8, 0",
            "ldr r2, [sp, 0x3c]",
            "add fp, r2, fp",
            "b 0x8029ddc",
            "strb r3, [r1, r8]",
            "add r8, r8, 1",
            "cmp r8, 0xbe",
            "beq 0x8029e54",
            "add r0, r8, fp",
            "mov r1, sb",
            "bl __aeabi_uidivmod",
            "ldrb r3, [r7, r1]",
            "add r1, sp, 0x44",
            "cmp r3, 0xa",
            "bne 0x8029dcc",
            "cmp r8, 0",
            "moveq r3, 1",
            "bne 0x8029e50",
            "ldr r2, [sp, 0x3c]",
            "add r2, r2, r3",
            "cmp r2, sb",
            "str r2, [sp, 0x3c]",
            "blo 0x8029db8",
            "ldr r3, [r4, 0x170]",
            "ldr r3, [r3]",
            "b 0x8029a48",
            "ldr r0, [0x08029ec8]",
            "ldr r1, [0x08029e9c]",
            "bl printk",
            "ldr r7, [r5]",
            "b 0x80299ac",
            "ldr r1, [0x08029e9c]",
            "mov r2, 0x200",
            "ldr r0, [0x08029e98]",
            "mvn r5, 0x1a",
            "bl printk",
            "b 0x8029a9c",
            "add r1, sp, 0x44",
            "sub sb, r8, 1",
            "add r2, sp, 0x170",
            "add r3, r2, sb",
            "ldr r0, [0x08029ecc]",
            "ldrb r2, [r3, -0x12c]",
            "cmp r2, 0xd",
            "movne sb, r8",
            "addne r2, sp, 0x170",
            "addne r3, r2, sb",
            "mov r2, 0",
            "strb r2, [r3, -0x12c]",
            "bl printk",
            "add r3, sb, 1",
            "ldr sb, [sp, 0x168]",
            "b 0x8029e04"
        ]
    },
    "fcn.08028fb4": {
        "function_address": "0x08028fb4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "movw r1, 0x4b40",
            "ldr r7, [r0, 0x168]",
            "sub sp, sp, 0x5c",
            "mov r4, r0",
            "movt r1, 0x4c",
            "ldr r3, [r0, 0x3c]",
            "add r0, sp, 0x48",
            "ldr r6, [r4, 0x170]",
            "mov r5, 0",
            "add r7, r7, r3",
            "sub r7, r7, 4",
            "bl dhd_timeout_start",
            "add r0, sp, 0x48",
            "bl dhd_timeout_expired",
            "cmp r0, 0",
            "mov r1, r7",
            "mov r0, r4",
            "bne 0x8029290",
            "bl fcn.08028f48",
            "subs r5, r0, 0",
            "beq 0x8028fe8",
            "ldr r3, [r4, 0x188]",
            "cmp r3, r5",
            "beq 0x8028fe8",
            "ldr r3, [r4, 0x168]",
            "cmp r3, r5",
            "movls r3, 0",
            "movhi r3, 1",
            "cmp r7, r5",
            "movhs r7, r3",
            "orrlo r7, r3, 1",
            "cmp r7, 0",
            "bne 0x8029298",
            "ldr r7, [0x080296c0]",
            "str r5, [r4, 0x16c]",
            "ldr r3, [r7]",
            "tst r3, 1",
            "bne 0x80294f0",
            "mov r2, r5",
            "mov ip, 0x50",
            "mov r0, r4",
            "mov r1, 0",
            "mov r3, r6",
            "str ip, [sp]",
            "bl fcn.08027c78",
            "subs r5, r0, 0",
            "blt 0x80292b8",
            "ldr r2, [r6, 0x14]",
            "ldr r3, [r4, 0x170]",
            "ldr r0, [r4]",
            "str r2, [r4, 0x15c]",
            "ldr r1, [r3, 0x24]",
            "str r1, [r4, 0x178]",
            "bl dhd_prot_rx_dataoffset",
            "ldr r3, [r7]",
            "tst r3, 1",
            "bne 0x80294d8",
            "tst r3, 4",
            "ldrb r5, [r6]",
            "bne 0x8029634",
            "cmp r5, 5",
            "bhi 0x80292e4",
            "ldr r2, [r6]",
            "tst r2, 0x100000",
            "moveq r2, 4",
            "movne r2, 2",
            "tst r3, 1",
            "mov r3, 0x2600",
            "str r2, [r4, r3]",
            "bne 0x8029624",
            "ldr r3, [r6]",
            "tst r3, 0x10000",
            "beq 0x80293d0",
            "tst r3, 0x100000",
            "beq 0x8029100",
            "ldr r1, [r4]",
            "mov r3, 1",
            "movw r2, 0x1912",
            "strb r3, [r1, r2]",
            "movw r2, 0x1911",
            "ldr r1, [r4]",
            "strb r3, [r1, r2]",
            "ldr r3, [r7]",
            "tst r3, 1",
            "bne 0x8029534",
            "ldr r2, [r6, 0x30]",
            "mov ip, 0x38",
            "mov r0, r4",
            "mov r1, 0",
            "add r3, sp, 0x10",
            "str ip, [sp]",
            "bl fcn.08027c78",
            "subs r5, r0, 0",
            "blt 0x80292ac",
            "ldr r1, [r6, 0x28]",
            "movw r2, 0x25e8",
            "ldrh r3, [sp, 0x44]",
            "ldr r0, [r4]",
            "str r1, [r4, r2]",
            "add r2, r2, 0x14",
            "ldr r1, [r6, 0x2c]",
            "str r3, [r4, r2]",
            "movw r2, 0x25ec",
            "str r1, [r4, r2]",
            "movw r2, 0x1912",
            "ldrb r2, [r0, r2]",
            "cmp r2, 0",
            "bne 0x8029474",
            "movw r3, 0x1911",
            "ldrb r3, [r0, r3]",
            "cmp r3, 0",
            "ldreq r3, [r7]",
            "bne 0x802941c",
            "ldr r2, [sp, 0x10]",
            "mov fp, r4",
            "mov r8, r4",
            "mov r5, 0",
            "and r3, r3, 4",
            "mov sl, r6",
            "cmp r3, 0",
            "str r2, [r8, 0x19c]",
            "add r6, r2, 0x10",
            "add r8, r8, 0xc",
            "bne 0x802967c",
            "add r5, r5, 1",
            "mov r2, r6",
            "cmp r5, 5",
            "bne 0x8029194",
            "mov r2, 0x2600",
            "ldr ip, [sp, 0x20]",
            "ldr r8, [sp, 0x14]",
            "mov r6, sl",
            "ldr r0, [sp, 0x18]",
            "mov r5, r4",
            "ldr r2, [r4, r2]",
            "mov sb, 0",
            "ldr r1, [sp, 0x1c]",
            "str r1, [sp, 0xc]",
            "cmp r3, 0",
            "str r8, [r5, 0x1a0]",
            "str r0, [r5, 0x1a4]",
            "add sl, r2, r0",
            "add r8, r8, r2",
            "bne 0x802964c",
            "add sb, sb, 1",
            "mov r0, sl",
            "cmp sb, 2",
            "add r5, r5, 0xc",
            "bne 0x80291e0",
            "ldr r5, [sp, 0xc]",
            "cmp r3, 0",
            "mov r0, ip",
            "mov ip, r6",
            "str r0, [fp, 0x1bc]",
            "mov r6, r4",
            "str r5, [fp, 0x1b8]",
            "add r4, r2, r0",
            "add r5, r5, r2",
            "bne 0x8029270",
            "add sb, sb, 1",
            "mov r0, r4",
            "cmp sb, 5",
            "add fp, fp, 0xc",
            "beq 0x8029310",
            "ldr r3, [r7]",
            "mov r1, 0x2600",
            "ldr r2, [r6, r1]",
            "str r5, [fp, 0x1b8]",
            "and r3, r3, 4",
            "str r0, [fp, 0x1bc]",
            "cmp r3, 0",
            "add r4, r2, r0",
            "add r5, r5, r2",
            "beq 0x8029234",
            "ldr r2, [fp, 0x1b8]",
            "mov r3, r0",
            "mov r1, sb",
            "ldr r0, [0x080296c4]",
            "str ip, [sp, 8]",
            "bl printk",
            "ldr ip, [sp, 8]",
            "b 0x8029234",
            "cmp r5, 0",
            "bne 0x80292d4",
            "ldr r4, [0x080296c0]",
            "ldr r3, [r4]",
            "tst r3, 1",
            "bne 0x8029504",
            "mvn r5, 0",
            "mov r0, r5",
            "add sp, sp, 0x5c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r3, [r7]",
            "tst r3, 1",
            "beq 0x80292ac",
            "mov r1, r5",
            "ldr r0, [0x080296c8]",
            "bl printk",
            "b 0x80292ac",
            "ldr r3, [r4, 0x188]",
            "cmp r3, r5",
            "beq 0x8029298",
            "b 0x8029018",
            "cmp r5, 6",
            "beq 0x80290b0",
            "tst r3, 1",
            "beq 0x80292a8",
            "mov r2, 5",
            "ldr r1, [0x080296cc]",
            "ldrb r3, [r6]",
            "mvn r5, 0",
            "ldr r0, [0x080296d0]",
            "bl printk",
            "b 0x80292ac",
            "mov r4, r6",
            "movw fp, 0x25fc",
            "ldr r3, [r4, fp]",
            "mov r6, ip",
            "cmp r3, 2",
            "beq 0x8029388",
            "mov r5, sb",
            "mov r3, sl",
            "mov sb, 0x2600",
            "mov sl, ip",
            "add r2, r5, r5, lsl 1",
            "ldr r1, [r7]",
            "add r2, r4, r2, lsl 2",
            "tst r1, 4",
            "str r8, [r2, 0x1a0]",
            "str r3, [r2, 0x1a4]",
            "ldr r1, [r4, sb]",
            "add r6, r3, r1",
            "add r8, r8, r1",
            "bne 0x8029610",
            "ldr r2, [r4, fp]",
            "sub r1, r5, 4",
            "uxth r1, r1",
            "add r5, r5, 1",
            "mov r3, r6",
            "uxth r5, r5",
            "sub r2, r2, 2",
            "cmp r1, r2",
            "blo 0x8029338",
            "mov r6, sl",
            "ldr r0, [0x080296d4]",
            "add r1, sp, 0x10",
            "mov r2, 0x38",
            "bl bcm_print_bytes",
            "ldr r3, [r7]",
            "tst r3, 4",
            "bne 0x80295fc",
            "tst r3, 1",
            "bne 0x80295e4",
            "tst r3, 4",
            "bne 0x8029558",
            "ldr r1, [r6]",
            "movw r3, 0x18f4",
            "ldr r2, [r4]",
            "mov r5, 0",
            "and r1, r1, 0x60000",
            "str r1, [r2, r3]",
            "b 0x80292ac",
            "ldr r3, [r4]",
            "movw r2, 0x1911",
            "ldrb r2, [r3, r2]",
            "cmp r2, 0",
            "bne 0x80293f4",
            "movw r2, 0x1912",
            "ldrb r2, [r3, r2]",
            "cmp r2, 0",
            "beq 0x802910c",
            "ldr r2, [r7]",
            "tst r2, 1",
            "bne 0x8029694",
            "mov r2, 0",
            "movw r1, 0x1911",
            "strb r2, [r3, r1]",
            "movw r3, 0x1912",
            "ldr r1, [r4]",
            "strb r2, [r1, r3]",
            "b 0x802910c",
            "mov r5, 0x2600",
            "mov r2, 4",
            "ldr r1, [r4, r5]",
            "mov r3, 3",
            "bl dhd_prot_dma_indx_init",
            "movw r3, 0x25fc",
            "mov r8, r0",
            "ldr r3, [r4, r3]",
            "mov r2, 3",
            "ldr r0, [r4]",
            "ldr r1, [r4, r5]",
            "bl dhd_prot_dma_indx_init",
            "orrs r8, r0, r8",
            "ldr r3, [r7]",
            "beq 0x802917c",
            "tst r3, 1",
            "bne 0x80296a8",
            "ldr r1, [r4]",
            "mov r0, 0",
            "movw r2, 0x1911",
            "strb r0, [r1, r2]",
            "b 0x802917c",
            "mov r8, 0x2600",
            "mov r2, 2",
            "ldr r1, [r4, r8]",
            "bl dhd_prot_dma_indx_init",
            "ldr r1, [r4, r8]",
            "mov r5, r0",
            "mov r2, 5",
            "ldr r0, [r4]",
            "mov r3, 3",
            "bl dhd_prot_dma_indx_init",
            "orrs r5, r0, r5",
            "beq 0x80294c0",
            "ldr r3, [r7]",
            "tst r3, 1",
            "bne 0x80294c8",
            "ldr r2, [r4]",
            "mov r1, 0",
            "movw r3, 0x1912",
            "strb r1, [r2, r3]",
            "ldr r0, [r4]",
            "b 0x8029168",
            "ldr r1, [0x080296cc]",
            "ldr r0, [0x080296d8]",
            "bl printk",
            "b 0x80294b0",
            "ldr r0, [0x080296dc]",
            "ldr r1, [r4, 0x178]",
            "bl printk",
            "ldr r3, [0x080296c0]",
            "ldr r3, [r3]",
            "b 0x802909c",
            "mov r1, r5",
            "ldr r2, [sp, 0x50]",
            "ldr r0, [0x080296e0]",
            "bl printk",
            "b 0x8029050",
            "ldr r0, [0x080296e4]",
            "mov r2, r5",
            "ldr r1, [0x080296cc]",
            "bl printk",
            "ldr r3, [r4]",
            "tst r3, 1",
            "beq 0x80292a8",
            "ldr r1, [sp, 0x50]",
            "mvn r5, 0",
            "ldr r0, [0x080296e8]",
            "bl printk",
            "b 0x80292ac",
            "ldr r3, [r4]",
            "movw ip, 0x1911",
            "movw r2, 0x1912",
            "ldr r1, [0x080296cc]",
            "ldr r0, [0x080296ec]",
            "ldrb r2, [r3, r2]",
            "ldrb r3, [r3, ip]",
            "bl printk",
            "b 0x802910c",
            "ldr r0, [0x080296f0]",
            "bl printk",
            "ldr r3, [r7]",
            "ldr r5, [0x080296c0]",
            "tst r3, 4",
            "beq 0x80293b4",
            "movw r3, 0x25e8",
            "ldr r0, [0x080296f4]",
            "ldr r2, [r4, r3]",
            "ldr r1, [0x080296cc]",
            "bl printk",
            "ldr r3, [r5]",
            "tst r3, 4",
            "beq 0x80293b4",
            "movw r3, 0x25ec",
            "ldr r1, [0x080296cc]",
            "ldr r2, [r4, r3]",
            "ldr r0, [0x080296f8]",
            "bl printk",
            "ldr r2, [r5]",
            "movw r3, 0x18f4",
            "ldr r0, [r6]",
            "ldr r1, [r4]",
            "ands r2, r2, 4",
            "and r0, r0, 0x60000",
            "moveq r5, r2",
            "str r0, [r1, r3]",
            "beq 0x80292ac",
            "ldr r2, [r4]",
            "mov r5, 0",
            "ldr r1, [0x080296cc]",
            "ldr r0, [0x080296fc]",
            "ldr r2, [r2, r3]",
            "bl printk",
            "b 0x80292ac",
            "ldr r0, [0x08029700]",
            "ldr r1, [0x080296cc]",
            "ldrh r2, [sp, 0x44]",
            "bl printk",
            "ldr r3, [r7]",
            "b 0x80293ac",
            "ldr r0, [0x08029704]",
            "bl printk",
            "ldr r3, [0x080296c0]",
            "ldr r3, [r3]",
            "b 0x80293a4",
            "mov r1, r5",
            "ldr r2, [r2, 0x1a0]",
            "ldr r0, [0x08029708]",
            "bl printk",
            "b 0x8029360",
            "ldr r1, [0x080296cc]",
            "ldr r0, [0x0802970c]",
            "bl printk",
            "b 0x80290d0",
            "ldr r0, [0x08029710]",
            "mov r1, r5",
            "mov r2, 5",
            "bl printk",
            "ldr r3, [r7]",
            "b 0x80290a8",
            "ldr r2, [r5, 0x1a0]",
            "mov r3, r0",
            "mov r1, sb",
            "ldr r0, [0x08029714]",
            "str ip, [sp, 8]",
            "bl printk",
            "ldr r3, [r7]",
            "mov r1, 0x2600",
            "ldr r2, [r4, r1]",
            "ldr ip, [sp, 8]",
            "and r3, r3, 4",
            "b 0x80291f8",
            "mov r1, r5",
            "ldr r0, [0x08029718]",
            "bl printk",
            "ldr r3, [r7]",
            "and r3, r3, 4",
            "b 0x80291a8",
            "ldr r0, [0x0802971c]",
            "ldr r1, [0x080296cc]",
            "bl printk",
            "ldr r3, [r4]",
            "b 0x8029400",
            "ldr r0, [0x08029720]",
            "ldr r1, [0x080296cc]",
            "bl printk",
            "ldr r3, [0x080296c0]",
            "ldr r3, [r3]",
            "b 0x8029460"
        ]
    },
    "fcn.08027c78": {
        "function_address": "0x08027c78",
        "instructions": [
            "cmp r1, 0",
            "push {r4, r5, r6, r7, r8, sl, lr}",
            "mov sl, 1",
            "sub sp, sp, 0x1c",
            "mov r5, r0",
            "mov r7, r2",
            "mov r6, r3",
            "ldr r4, [sp, 0x38]",
            "str sl, [sp, 0x14]",
            "bne 0x8027d7c",
            "cmp r4, 0",
            "movne r8, 8",
            "beq 0x8027cf4",
            "cmp r4, 7",
            "bls osl_acp_war_enab",
            "cmp sl, 0",
            "bne osl_acp_war_enab",
            "bl osl_acp_war_enab",
            "cmp r0, 0",
            "bne 0x8027d00",
            "bl osl_arch_is_coherent",
            "cmp r0, 0",
            "bne 0x8027d00",
            "ldr r3, [r5, 0x180]",
            "ldrb r3, [r3, r7]",
            "strb r3, [sp, 8]",
            "ldrb r3, [sp, 8]",
            "mov r8, 1",
            "strb r3, [r6]",
            "subs r4, r4, r8",
            "bne 0x8027d28",
            "mov r0, 0",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, r8, sl, pc}",
            "ldr r0, [r5]",
            "mov r3, 1",
            "ldr r1, [r5, 0x180]",
            "mov r2, sp",
            "ldr r0, [r0]",
            "add r1, r1, r7",
            "bl osl_pcie_rreg",
            "ldrb r3, [sp]",
            "strb r3, [sp, 8]",
            "b 0x8027ce0",
            "add r6, r6, r8",
            "add r7, r7, r8",
            "b 0x8027cac",
            "bl osl_acp_war_enab",
            "cmp r0, 0",
            "bne 0x8027d4c",
            "bl osl_arch_is_coherent",
            "cmp r0, 0",
            "beq 0x8027dd0",
            "ldr r0, [r5]",
            "add r2, sp, 8",
            "ldr r1, [r5, 0x180]",
            "mov r3, 8",
            "ldr r0, [r0]",
            "add r1, r1, r7",
            "bl osl_pcie_rreg",
            "ldrd r2, r3, [sp, 8]",
            "strd r2, r3, [sp]",
            "ldrd r2, r3, [sp]",
            "strd r2, r3, [r6]",
            "b 0x8027cec",
            "cmp r4, 0",
            "beq 0x8027cf4",
            "cmp r4, 7",
            "mov r1, 8",
            "bls 0x8027dbc",
            "cmp sl, 0",
            "beq 0x8027dbc",
            "ldrd r2, r3, [r6]",
            "ldr r0, [r5, 0x180]",
            "strd r2, r3, [r0, r7]",
            "subs r4, r4, r1",
            "add r6, r6, r1",
            "add r7, r7, r1",
            "beq 0x8027cf4",
            "cmp r4, 7",
            "bhi 0x8027d90",
            "ldrb r2, [r6]",
            "mov r1, 1",
            "ldr r3, [r5, 0x180]",
            "strb r2, [r3, r7]",
            "b 0x8027da4",
            "ldr r3, [r5, 0x180]",
            "ldrd r2, r3, [r3, r7]",
            "strd r2, r3, [sp]",
            "b 0x8027d70"
        ]
    },
    "sym.dhd_psta_dhcp_proc": {
        "function_address": "0x08030f84",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x34",
            "ldr fp, [sp, 0x64]",
            "mov r7, r0",
            "mov sl, r2",
            "add r0, sp, 0x1e",
            "mov r2, 6",
            "mov r6, r3",
            "ldr r1, [fp]",
            "ldr sb, [sp, 0x58]",
            "ldrh r8, [sp, 0x60]",
            "ldrb r4, [sp, 0x68]",
            "ldrb r5, [sp, 0x6c]",
            "bl memcpy",
            "mov r2, 6",
            "add r0, sp, 0x24",
            "add r1, sp, 0x1e",
            "bl memcpy",
            "ldr r3, [0x080311ec]",
            "ldrb r2, [sp, 0x24]",
            "ldr r3, [r3]",
            "orr r2, r2, 2",
            "strb r2, [sp, 0x24]",
            "tst r3, 4",
            "bne 0x80311d4",
            "cmp r4, 0",
            "beq 0x8030ff8",
            "cmp r5, 0",
            "bne 0x8031038",
            "add ip, sp, 0x1e",
            "mov r0, r8",
            "str ip, [sp]",
            "mov r1, r6",
            "add ip, sp, 0x24",
            "mov r2, sb",
            "ldrh r3, [sp, 0x5c]",
            "str ip, [sp, 4]",
            "str r4, [sp, 8]",
            "str r5, [sp, 0xc]",
            "bl bcm_psta_dhcp_proc",
            "cmp r0, 0",
            "movge r0, 0",
            "mvnlt r0, 0",
            "add sp, sp, 0x34",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r1, [sl]",
            "ldr r0, [r7]",
            "bl osl_pktdata",
            "add r3, sp, 0x2c",
            "mov r1, r0",
            "add ip, sp, 0x2f",
            "ldr r0, [r7]",
            "add r2, sp, 0x2a",
            "str ip, [sp]",
            "bl bcm_psta_ether_type",
            "mov r0, r7",
            "ldr r1, [sl]",
            "bl fcn.08030eb8",
            "subs r3, r0, 0",
            "mvneq r0, 0x1a",
            "beq 0x8031030",
            "mov r1, r3",
            "ldr r0, [r7]",
            "str r3, [sp, 0x14]",
            "bl osl_pktdata",
            "ldrh r1, [sp, 0x2c]",
            "ldr r3, [sp, 0x14]",
            "ldrb r2, [r0, r1]",
            "add r0, r0, r1",
            "lsr r1, r2, 4",
            "cmp r1, 6",
            "andne r6, r2, 0xf",
            "lslne r6, r6, 2",
            "beq 0x80310e8",
            "ldr r1, [sl]",
            "add r6, r0, r6",
            "mov r2, 1",
            "ldr r0, [r7]",
            "str r3, [sp, 0x14]",
            "add sb, r6, 8",
            "bl osl_pktfree",
            "ldr r3, [sp, 0x14]",
            "str r3, [sl]",
            "mov r1, r3",
            "ldr r0, [r7]",
            "bl osl_pktdata",
            "add r0, r0, 6",
            "str r0, [fp]",
            "b 0x8030ff8",
            "ldrb ip, [r0, 6]",
            "cmp ip, 0",
            "cmpne ip, 0x2b",
            "movne r1, 0",
            "moveq r1, 1",
            "moveq ip, r0",
            "moveq r1, 0",
            "beq 0x8031180",
            "cmp ip, 0x2c",
            "cmpne ip, 0x33",
            "movne lr, 0",
            "moveq lr, 1",
            "moveq ip, r0",
            "beq 0x8031180",
            "cmp ip, 0x3b",
            "cmpne ip, 0x3c",
            "movne r6, 0x28",
            "bne 0x80310ac",
            "mov ip, r0",
            "mov r1, lr",
            "b 0x8031180",
            "cmp r2, 0x2c",
            "beq 0x803119c",
            "cmp r2, 0x33",
            "beq 0x80311a4",
            "cmp r2, 0x3b",
            "beq 0x80311b4",
            "cmp r2, 0x3c",
            "bne 0x80311cc",
            "cmp r2, 0x33",
            "beq 0x80311a4",
            "ldrb r2, [ip, 1]",
            "add r2, r2, 1",
            "lsl r2, r2, 3",
            "add r1, r2, r1",
            "uxth r1, r1",
            "ldrb r2, [r0, r1]",
            "add ip, r0, r1",
            "cmp r2, 0",
            "cmpne r2, 0x2b",
            "bne 0x803113c",
            "cmp r2, 0x3b",
            "beq 0x80311b4",
            "cmp r2, 0x2c",
            "bne 0x803115c",
            "mov r2, 8",
            "b 0x8031170",
            "ldrb r2, [ip, 1]",
            "add r2, r2, 2",
            "lsl r2, r2, 2",
            "b 0x8031170",
            "ldr r0, [r7]",
            "mov r1, r3",
            "mov r2, 1",
            "bl osl_pktfree",
            "mov r0, 0",
            "b 0x8031030",
            "add r6, r1, 0x28",
            "b 0x80310ac",
            "mov r2, 0x76",
            "ldr r1, [0x080311f0]",
            "mov r3, r8",
            "ldr r0, [0x080311f4]",
            "bl printk",
            "b 0x8030fe8"
        ]
    },
    "fcn.08030eb8": {
        "function_address": "0x08030eb8",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r5, r0",
            "ldr r8, [0x08030f74]",
            "sub sp, sp, 8",
            "mov r7, r1",
            "ldr r0, [r0]",
            "bl pkttotlen",
            "ldr r3, [r8]",
            "mov r6, r0",
            "tst r3, 4",
            "bne 0x8030f60",
            "ldr r0, [r5]",
            "mov r1, r6",
            "bl osl_pktget",
            "subs r4, r0, 0",
            "beq 0x8030f40",
            "mov r0, r7",
            "bl osl_pktprio",
            "mov r1, r0",
            "mov r0, r4",
            "bl osl_pktsetprio",
            "ldr r5, [r5]",
            "mov r1, r4",
            "mov r0, r5",
            "bl osl_pktdata",
            "mov r1, r7",
            "str r0, [sp]",
            "mov r2, 0",
            "mov r0, r5",
            "mov r3, r6",
            "bl pktcopy",
            "mov r0, r4",
            "add sp, sp, 8",
            "pop {r4, r5, r6, r7, r8, pc}",
            "ldr r3, [r8]",
            "tst r3, 1",
            "beq 0x8030f34",
            "ldr r1, [0x08030f78]",
            "mov r2, r6",
            "ldr r0, [0x08030f7c]",
            "bl printk",
            "b 0x8030f34",
            "mov r2, r6",
            "ldr r1, [0x08030f78]",
            "ldr r0, [0x08030f80]",
            "bl printk",
            "b 0x8030ee4"
        ]
    },
    "sym.wet_arp_proc": {
        "function_address": "0x08037408",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "sub sp, sp, 0x24",
            "ldr r1, [sp, 0x3c]",
            "mov r6, r0",
            "mov r5, r2",
            "mov r4, r3",
            "cmp r1, 0",
            "bne 0x803749c",
            "ldrh r3, [r3, 6]",
            "cmp r3, 0x200",
            "beq 0x8037454",
            "cmp r3, 0x100",
            "beq 0x8037448",
            "mov r0, r1",
            "add sp, sp, 0x24",
            "pop {r4, r5, r6, r7, pc}",
            "ldrb r3, [r2]",
            "tst r3, 1",
            "bne 0x803743c",
            "mov r0, r6",
            "add r1, r4, 0x18",
            "add r2, sp, 0x1c",
            "bl fcn.0803736c",
            "cmp r0, 0",
            "blt 0x8037500",
            "add r0, r4, 0x12",
            "ldr r4, [sp, 0x1c]",
            "mov r2, 6",
            "add r4, r4, 4",
            "mov r1, r4",
            "bl 0x8037480",
            "mov r0, r5",
            "mov r1, r4",
            "mov r2, 6",
            "bl 0x8037490",
            "mov r0, 0",
            "b 0x8037440",
            "add r5, r2, 6",
            "add r1, r3, 0xe",
            "mov r2, r5",
            "add r3, sp, 0x1c",
            "bl fcn.08037148",
            "cmp r0, 0",
            "bge 0x80374d0",
            "ldr r3, [0x08037574]",
            "ldr r3, [r3]",
            "tst r3, 4",
            "bne 0x8037534",
            "mvn r0, 0",
            "b 0x8037440",
            "ldr r1, [r6]",
            "mov r2, 6",
            "mov r0, r5",
            "add r1, r1, 0x2c",
            "bl 0x80374e0",
            "ldr r1, [r6]",
            "add r0, r4, 8",
            "mov r2, 6",
            "add r1, r1, 0x2c",
            "bl 0x80374f4",
            "mov r0, 0",
            "b 0x8037440",
            "ldr r3, [0x08037574]",
            "ldr r3, [r3]",
            "tst r3, 4",
            "beq 0x80374c8",
            "ldrb ip, [r4, 0x1b]",
            "ldrb r1, [r4, 0x18]",
            "ldrb r2, [r4, 0x19]",
            "ldrb r3, [r4, 0x1a]",
            "ldr r0, [0x08037578]",
            "str ip, [sp]",
            "bl 0x8037528",
            "mvn r0, 0",
            "b 0x8037440",
            "ldrb r7, [r4, 0xe]",
            "mov r0, r5",
            "ldrb r6, [r4, 0xf]",
            "add r1, sp, 0xa",
            "ldrb r5, [r4, 0x10]",
            "ldrb r4, [r4, 0x11]",
            "bl 0x803754c",
            "mov r1, r7",
            "str r0, [sp, 4]",
            "mov r2, r6",
            "ldr r0, [0x0803757c]",
            "mov r3, r5",
            "str r4, [sp]",
            "bl 0x8037568",
            "mvn r0, 0",
            "b 0x8037440"
        ]
    },
    "fcn.0803736c": {
        "function_address": "0x0803736c",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "mov r5, r1",
            "ldrb r6, [r1, 3]",
            "sub sp, sp, 0xc",
            "mov r7, r2",
            "and r3, r6, 0x7f",
            "add r3, r3, 0x600",
            "add r3, r3, 4",
            "add r3, r0, r3, lsl 2",
            "ldr r4, [r3, 4]",
            "cmp r4, 0",
            "beq 0x80373c0"
        ]
    },
    "fcn.08037148": {
        "function_address": "0x08037148",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sl, lr}",
            "mov r6, r2",
            "sub sp, sp, 0x24",
            "mov r5, r1",
            "add r2, sp, 0x1c",
            "mov r1, r6",
            "mov r4, r0",
            "mov r7, r3",
            "bl fcn.0803709c",
            "cmp r0, 0",
            "bne 0x8037294",
            "ldr r6, [sp, 0x1c]",
            "mov r1, r5",
            "mov r2, 4",
            "mov r0, r6",
            "ldrb r8, [r6, 3]",
            "mov r0, r4",
            "add r1, sp, 0x1c"
        ]
    },
    "sym.wet_ip_proc": {
        "function_address": "0x08037644",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x24",
            "ldr r1, [sp, 0x48]",
            "mov r8, r0",
            "mov r7, r2",
            "mov r5, r3",
            "ldr fp, [sp, 0x4c]",
            "cmp r1, 0",
            "ble 0x8037678",
            "ldrb sb, [r3]",
            "lsr r3, sb, 4",
            "cmp r3, 4",
            "beq 0x8037698",
            "ldr r3, [0x080378b0]",
            "ldr r3, [r3]",
            "tst r3, 4",
            "ldrne r0, [0x080378b4]",
            "bne 0x803772c",
            "mvn r0, 0",
            "add sp, sp, 0x24",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "and sb, sb, 0xf",
            "lsl sb, sb, 2",
            "cmp r1, sb",
            "blt 0x8037718",
            "ldrb r6, [r5, 9]",
            "ldr r3, [0x080378b8]",
            "and r2, r6, 1",
            "lsl r4, r2, 1",
            "add r4, r4, r2",
            "adds r4, r3, r4, lsl 2",
            "beq 0x8037748",
            "add sl, r5, sb",
            "rsb sb, sb, r1",
            "b 0x80376dc",
            "ldr r4, [r4, 8]",
            "cmp r4, 0",
            "beq 0x8037748",
            "ldrb r3, [r4]",
            "cmp r3, r6",
            "bne 0x80376d0",
            "ldr ip, [r4, 4]",
            "mov r0, r8",
            "mov r1, r7",
            "mov r2, r5",
            "mov r3, sl",
            "cmp ip, 0",
            "beq 0x80376d0",
            "stm sp, {sb, fp}",
            "blx ip",
            "cmp r0, 0",
            "beq 0x80376d0",
            "b 0x8037690",
            "ldr r3, [0x080378b0]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "beq 0x803768c",
            "ldr r0, [0x080378bc]",
            "ldr r3, [0x080378c0]",
            "cmp fp, 0",
            "ldr r1, [0x080378c4]",
            "movne r1, r3",
            "bl 0x803773c",
            "mvn r0, 0",
            "b 0x8037690",
            "cmp fp, 0",
            "beq 0x80377a4",
            "ldr r2, [r5, 0x10]",
            "ldr r3, [r5, 0xc]",
            "rev r2, r2",
            "rev r3, r3",
            "and r2, r2, 0xf0000000",
            "cmp r2, 0xe0000000",
            "cmpeq r3, 0",
            "bne 0x80377f0",
            "ldr r3, [0x080378b0]",
            "ldr r3, [r3]",
            "tst r3, 4",
            "bne 0x8037894",
            "ldr r3, [r8]",
            "mov r0, 0",
            "ldrh r2, [r3, 0x2c]",
            "strh r2, [r7, 6]",
            "ldrh r2, [r3, 0x2e]",
            "strh r2, [r7, 8]",
            "ldrh r3, [r3, 0x30]",
            "strh r3, [r7, 0xa]",
            "b 0x8037690",
            "ldrb r3, [r7]",
            "tst r3, 1",
            "movne r0, fp",
            "bne 0x8037690",
            "mov r0, r8",
            "add r1, r5, 0x10",
            "add r2, sp, 0x1c",
            "bl fcn.0803736c",
            "cmp r0, 0",
            "blt 0x8037860",
            "ldr r3, [sp, 0x1c]",
            "mov r0, fp",
            "ldrh r2, [r3, 4]",
            "strh r2, [r7]",
            "ldrh r2, [r3, 6]",
            "strh r2, [r7, 2]",
            "ldrh r3, [r3, 8]",
            "strh r3, [r7, 4]",
            "b 0x8037690",
            "add r4, r7, 6",
            "mov r0, r8",
            "add r1, r5, 0xc",
            "mov r2, r4",
            "add r3, sp, 0x1c",
            "bl fcn.08037148",
            "cmp r0, 0",
            "bge 0x8037780",
            "ldr r3, [0x080378b0]",
            "ldr r3, [r3]",
            "tst r3, 4",
            "beq 0x803768c",
            "ldrb r8, [r5, 0xc]",
            "mov r0, r4",
            "ldrb r7, [r5, 0xd]",
            "add r1, sp, 0xa",
            "ldrb r6, [r5, 0xe]",
            "ldrb r4, [r5, 0xf]",
            "bl 0x8037838",
            "mov r1, r8",
            "str r0, [sp, 4]",
            "mov r2, r7",
            "ldr r0, [0x080378c8]",
            "mov r3, r6",
            "str r4, [sp]",
            "bl 0x8037854",
            "mvn r0, 0",
            "b 0x8037690",
            "ldr r3, [0x080378b0]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "beq 0x803768c",
            "ldrb ip, [r5, 0x13]",
            "ldrb r1, [r5, 0x10]",
            "ldrb r2, [r5, 0x11]",
            "ldrb r3, [r5, 0x12]",
            "ldr r0, [0x080378cc]",
            "str ip, [sp]",
            "bl 0x8037888",
            "mvn r0, 0",
            "b 0x8037690",
            "add r1, sp, 0xa",
            "add r0, r7, 6",
            "bl 0x803789c",
            "mov r1, r0",
            "ldr r0, [0x080378d0]",
            "bl 0x80378a8",
            "b 0x8037780"
        ]
    },
    "sym.wet_dhcps_proc": {
        "function_address": "0x080378d4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sl, lr}",
            "sub sp, sp, 0x24",
            "ldr r2, [sp, 0x48]",
            "mov r5, r0",
            "mov r6, r1",
            "mov r7, r3",
            "ldr r4, [sp, 0x40]",
            "cmp r2, 0",
            "movne r0, 0",
            "bne 0x803790c",
            "ldrb r3, [r4]",
            "cmp r3, 2",
            "movne r0, r2",
            "beq 0x8037914",
            "add sp, sp, 0x24",
            "pop {r4, r5, r6, r7, r8, sl, pc}",
            "add r8, r4, 0x1c",
            "add r2, sp, 0x1c",
            "mov r1, r8",
            "bl fcn.0803709c",
            "cmp r0, 0",
            "blt 0x80379f0",
            "ldrb r1, [r5, 9]",
            "ldrb r2, [r5, 8]",
            "ldrb r3, [r5, 0xa]",
            "ldrb r0, [r5, 0xb]",
            "orr r2, r1, r2",
            "ldrb r1, [r5, 0xc]",
            "orr r2, r2, r3",
            "ldrb r3, [r5, 0xd]",
            "orr r2, r2, r0",
            "orr r2, r2, r1",
            "orrs r3, r2, r3",
            "beq 0x80379a8",
            "ldr r1, [r5]",
            "mov r0, r8",
            "mov r2, 6",
            "add r1, r1, 0x2c",
            "bl 0x803796c",
            "cmp r0, 0",
            "bne 0x80379a8",
            "mov sl, 6",
            "add r5, r5, 8",
            "add r0, r7, sl",
            "mov r1, r8",
            "mov r2, sl",
            "mov r3, r5",
            "str sl, [sp]",
            "bl fcn.08036c8c",
            "mov r0, r8",
            "mov r1, r5",
            "mov r2, sl",
            "bl 0x80379a4",
            "ldr r8, [sp, 0x1c]",
            "add r4, r4, 0xa",
            "mov r0, r4",
            "mov r2, 2",
            "add sl, r8, 0xa",
            "mov r1, sl",
            "bl 0x80379c0",
            "cmp r0, 0",
            "bne 0x8037a24",
            "ldrh r3, [r8, 0xa]",
            "mov r0, r6",
            "mov r2, 6",
            "tst r3, 0x80",
            "ldrne r1, [0x08037a58]",
            "addeq r1, r8, 4",
            "bl 0x80379e4",
            "mov r0, 1",
            "b 0x803790c",
            "ldr r3, [0x08037a5c]",
            "ldr r3, [r3]",
            "tst r3, 4",
            "mvneq r0, 0",
            "beq 0x803790c",
            "add r1, sp, 0xa",
            "mov r0, r8",
            "bl 0x8037a0c",
            "mov r1, r0",
            "ldr r0, [0x08037a60]",
            "bl 0x8037a18",
            "mvn r0, 0",
            "b 0x803790c",
            "mov r5, 2",
            "add r0, r7, 6",
            "mov r1, r4",
            "mov r2, r5",
            "mov r3, sl",
            "str r5, [sp]",
            "bl fcn.08036c8c",
            "ldr r8, [sp, 0x1c]",
            "mov r0, r4",
            "mov r2, r5",
            "add r1, r8, 0xa",
            "bl 0x8037a50",
            "b 0x80379cc"
        ]
    },
    "fcn.0803709c": {
        "function_address": "0x0803709c",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r5, r1",
            "ldrb r3, [r5, 3]",
            "mov r6, r2",
            "sub sp, sp, 0x18",
            "ldrb r1, [r1, 4]",
            "ldrb r2, [r5, 5]",
            "eor r3, r1, r3",
            "eor r3, r3, r2",
            "and r3, r3, 0x7f",
            "add r3, r3, 0x680",
            "add r3, r3, 4",
            "add r3, r0, r3, lsl 2",
            "ldr r4, [r3, 4]",
            "cmp r4, 0",
            "beq 0x8037100"
        ]
    },
    "fcn.08036c8c": {
        "function_address": "0x08036c8c",
        "instructions": [
            "push {r4, r5, r6}",
            "ldrb ip, [r0]",
            "ldrb r4, [r0, 1]",
            "ldr r5, [sp, 0xc]",
            "adds ip, r4, ip, lsl 8",
            "beq 0x8036d24",
            "cmp r2, 0",
            "mvn ip, ip",
            "uxth ip, ip",
            "beq 0x8036ce0",
            "ldrb r6, [r1]",
            "ldrb r4, [r1, 1]",
            "add r1, r1, 2",
            "add r4, r4, r6, lsl 8",
            "uxth r4, r4",
            "rsb ip, r4, ip",
            "cmp ip, 0",
            "suble ip, ip, 1",
            "uxthle ip, ip",
            "subs r2, r2, 2",
            "bne 0x8036cb4",
            "cmp r5, 0",
            "beq 0x8036d10",
            "ldrb r1, [r3]",
            "ldrb r2, [r3, 1]",
            "add r3, r3, 2",
            "add r2, r2, r1, lsl 8",
            "uxtah ip, ip, r2",
            "tst ip, 0x10000",
            "add r2, ip, 1",
            "uxthne ip, r2",
            "subs r5, r5, 2",
            "bne 0x8036ce8",
            "mvn ip, ip",
            "uxth ip, ip",
            "asr r3, ip, 8",
            "strb ip, [r0, 1]",
            "strb r3, [r0]",
            "pop {r4, r5, r6}",
            "bx lr"
        ]
    },
    "sym.wet_dhcpc_proc": {
        "function_address": "0x08037a64",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x44",
            "ldr ip, [sp, 0x70]",
            "mov r4, r0",
            "mov sl, r1",
            "mov r8, r2",
            "mov r6, r3",
            "ldr r5, [sp, 0x68]",
            "cmp ip, 0",
            "bne 0x8037aa4",
            "ldrb sb, [r5]",
            "cmp sb, 2",
            "movne r0, ip",
            "beq 0x8037bc8",
            "add sp, sp, 0x44",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldrb r3, [r5]",
            "cmp r3, 1",
            "movne r0, 0",
            "bne 0x8037a9c",
            "add r7, r5, 0x1c",
            "add r2, sp, 0x38",
            "mov r1, r7",
            "bl fcn.0803709c",
            "cmp r0, 0",
            "ldreq r8, [sp, 0x38]",
            "bne 0x8037df0",
            "add sb, r5, 0xa",
            "mov r2, 2",
            "mov r1, sb",
            "add r0, sp, 0x3c",
            "str r8, [sp, 0x34]",
            "bl 0x8037ae4",
            "ldrb r1, [r4, 9]",
            "ldrb r2, [r4, 8]",
            "ldrb r3, [r4, 0xa]",
            "ldrb r0, [r4, 0xb]",
            "orr r2, r1, r2",
            "ldrb r1, [r4, 0xc]",
            "orr r2, r2, r3",
            "ldrb r3, [r4, 0xd]",
            "orr r2, r2, r0",
            "orr r2, r2, r1",
            "orrs r3, r2, r3",
            "beq 0x8037b30",
            "mov r0, r7",
            "add r1, r4, 8",
            "mov r2, 6",
            "bl 0x8037b24",
            "cmp r0, 0",
            "beq 0x8037d88",
            "ldrb r0, [r4, 5]",
            "ldrb r2, [r4, 4]",
            "ldrb r1, [r4, 6]",
            "ldrb r3, [r4, 7]",
            "orr r2, r0, r2",
            "orr r2, r2, r1",
            "orrs r3, r2, r3",
            "bne 0x8037d48",
            "ldrh r3, [sp, 0x3c]",
            "orr r3, r3, 0x80",
            "strh r3, [sp, 0x3c]",
            "mov r5, 2",
            "add r0, r8, 0xa",
            "mov r2, r5",
            "mov r1, sb",
            "bl 0x8037b6c",
            "ldr r2, [sp, 0x34]",
            "ldrh r3, [sp, 0x3c]",
            "ldrh r2, [r2, 0xa]",
            "cmp r2, r3",
            "beq 0x8037bac",
            "add r0, r6, 6",
            "mov r1, sb",
            "mov r2, r5",
            "add r3, sp, 0x3c",
            "str r5, [sp]",
            "bl fcn.08036c8c",
            "mov r0, sb",
            "add r1, sp, 0x3c",
            "mov r2, r5",
            "bl 0x8037ba8",
            "ldr r1, [r4]",
            "add r0, sl, 6",
            "mov r2, 6",
            "add r1, r1, 0x2c",
            "bl 0x8037bbc",
            "mov r0, 1",
            "b 0x8037a9c",
            "ldrb r0, [r4, 5]",
            "ldrb r2, [r4, 4]",
            "ldrb r1, [r4, 6]",
            "ldrb r3, [r4, 7]",
            "orr r2, r0, r2",
            "orr r2, r2, r1",
            "orrs r3, r2, r3",
            "beq 0x8037c04",
            "add r7, r5, 0x18",
            "add r1, r4, 4",
            "mov r0, r7",
            "mov r2, 4",
            "bl 0x8037bf8",
            "cmp r0, 0",
            "beq 0x8037c1c",
            "ldr r3, [0x08037f38]",
            "ldr r3, [r3]",
            "tst r3, 4",
            "bne 0x8037dd0",
            "mvn r0, 0",
            "b 0x8037a9c",
            "add fp, r5, 0x1c",
            "mov r0, r4",
            "mov r1, fp",
            "add r2, sp, 0x34",
            "bl fcn.0803709c",
            "cmp r0, 0",
            "blt 0x8037e58",
            "mov r4, 4",
            "add fp, r6, 6",
            "add ip, r5, 0xa",
            "ldr r3, [0x08037f3c]",
            "mov r2, r4",
            "mov r1, r7",
            "mov r0, fp",
            "str ip, [sp, 0xc]",
            "str r4, [sp]",
            "bl fcn.08036c8c",
            "mov r2, r4",
            "ldr r1, [0x08037f3c]",
            "mov r0, r7",
            "bl 0x8037c6c",
            "ldr r4, [sp, 0x34]",
            "mov r2, sb",
            "ldr r0, [sp, 0xc]",
            "add r4, r4, 0xa",
            "mov r1, r4",
            "bl 0x8037c84",
            "cmp r0, 0",
            "bne 0x8037f08",
            "mov r7, 2",
            "add r4, sp, 0x40",
            "add r6, r6, r7",
            "mov r3, 0x4400",
            "strh r3, [r4, -2]!",
            "mov r2, r7",
            "mov r3, r4",
            "mov r1, r6",
            "mov r0, fp",
            "str r7, [sp]",
            "bl fcn.08036c8c",
            "mov r2, r7",
            "mov r1, r4",
            "mov r0, r6",
            "add r4, r8, 0x10",
            "bl 0x8037ccc",
            "ldr r3, [sp, 0x34]",
            "mov r6, 4",
            "mov r0, fp",
            "mov r1, r4",
            "ldrh r2, [r3, 0xa]",
            "str r6, [sp]",
            "tst r2, 0x80",
            "mov r2, r6",
            "ldrne r7, [0x08037f40]",
            "addeq r7, r5, 0x10",
            "ldrne r5, [0x08037f44]",
            "addeq r5, r3, 4",
            "mov r3, r7",
            "bl fcn.08036c8c",
            "mov r3, r7",
            "add r0, r8, 0xa",
            "mov r1, r4",
            "mov r2, r6",
            "str r6, [sp]",
            "bl fcn.08036c8c",
            "mov r1, r7",
            "mov r2, r6",
            "mov r0, r4",
            "bl 0x8037d2c",
            "mov r0, sl",
            "mov r1, r5",
            "mov r2, 6",
            "bl 0x8037d3c",
            "mov r0, 1",
            "b 0x8037a9c",
            "ldrb r0, [r5, 0x19]",
            "ldrb r2, [r5, 0x18]",
            "ldrb r1, [r5, 0x1a]",
            "ldrb r3, [r5, 0x1b]",
            "orr r2, r0, r2",
            "orr r2, r2, r1",
            "orrs r3, r2, r3",
            "beq 0x8037ed4",
            "ldr r3, [0x08037f38]",
            "ldr r3, [r3]",
            "tst r3, 4",
            "beq 0x8037c14",
            "ldr r0, [0x08037f48]",
            "bl 0x8037d7c",
            "mvn r0, 0",
            "b 0x8037a9c",
            "ldr r3, [r4]",
            "mov r5, 6",
            "add r0, r6, r5",
            "mov r1, r7",
            "mov r2, r5",
            "str r5, [sp]",
            "add r3, r3, 0x2c",
            "bl fcn.08036c8c",
            "ldr r1, [r4]",
            "mov r0, r7",
            "mov r2, r5",
            "add r1, r1, 0x2c",
            "bl 0x8037db8",
            "ldrh r3, [sp, 0x3c]",
            "ldr r8, [sp, 0x34]",
            "bic r3, r3, 0x80",
            "strh r3, [sp, 0x3c]",
            "b 0x8037b5c",
            "add r1, sp, 0x10",
            "add r0, r5, 0x1c",
            "bl 0x8037dd8",
            "mov r1, r0",
            "ldr r0, [0x08037f4c]",
            "bl 0x8037de4",
            "mvn r0, 0",
            "b 0x8037a9c",
            "mov r0, r4",
            "add r1, sp, 0x38",
            "bl 0x8037df8",
            "cmp r0, 0",
            "beq 0x8037e88",
            "ldr r4, [0x08037f38]",
            "ldr r3, [r4]",
            "tst r3, 4",
            "beq 0x8037c14",
            "add r1, sp, 0x22",
            "mov r0, r7",
            "bl 0x8037e1c",
            "mov r1, r0",
            "ldr r0, [0x08037f50]",
            "bl 0x8037e28",
            "ldr r3, [r4]",
            "tst r3, 4",
            "beq 0x8037c14",
            "add r1, sp, 0x10",
            "mov r0, r7",
            "bl 0x8037e40",
            "mov r1, r0",
            "ldr r0, [0x08037f54]",
            "bl 0x8037e4c",
            "mvn r0, 0",
            "b 0x8037a9c",
            "ldr r3, [0x08037f38]",
            "ldr r3, [r3]",
            "tst r3, 4",
            "beq 0x8037c14",
            "add r1, sp, 0x10",
            "mov r0, fp",
            "bl 0x8037e70",
            "mov r1, r0",
            "ldr r0, [0x08037f58]",
            "bl 0x8037e7c",
            "mvn r0, 0",
            "b 0x8037a9c",
            "ldrb r0, [r5, 0x1f]",
            "mov r2, 6",
            "ldrb r8, [r5, 0x20]",
            "mov r1, r7",
            "ldrb r3, [r5, 0x21]",
            "eor r8, r8, r0",
            "ldr r0, [sp, 0x38]",
            "eor r8, r8, r3",
            "and r8, r8, 0x7f",
            "add r0, r0, 4",
            "bl 0x8037eb0",
            "add r3, r8, 0x680",
            "ldr r8, [sp, 0x38]",
            "add r3, r3, 4",
            "add r3, r4, r3, lsl 2",
            "ldr r2, [r3, 4]",
            "str r2, [r8, 0x14]",
            "str r8, [r3, 4]",
            "b 0x8037ad0",
            "mov r8, 4",
            "add r5, r5, 0x18",
            "add r7, r4, r8",
            "add r0, r6, 6",
            "mov r1, r5",
            "mov r2, r8",
            "mov r3, r7",
            "str r8, [sp]",
            "bl fcn.08036c8c",
            "mov r0, r5",
            "mov r1, r7",
            "mov r2, r8",
            "b 0x8037db8",
            "mov r0, fp",
            "ldr r1, [sp, 0xc]",
            "mov r2, sb",
            "mov r3, r4",
            "str sb, [sp]",
            "bl fcn.08036c8c",
            "ldr r1, [sp, 0x34]",
            "mov r2, sb",
            "ldr r0, [sp, 0xc]",
            "add r1, r1, 0xa",
            "bl 0x8037f30",
            "b 0x8037c90"
        ]
    },
    "sym.dhd_prot_process_msgbuf_txcpl": {
        "function_address": "0x08035068",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r0",
            "ldr r8, [r0, 8]",
            "sub sp, sp, 0x14",
            "mov sb, r1",
            "mov r6, 0",
            "ldr sl, [0x08035144]",
            "add r5, r8, 0x108",
            "add fp, r5, 0x36",
            "b 0x80350f0",
            "bl 0x8035090",
            "subs r7, r0, 0",
            "beq 0x8035114",
            "bl 0x803509c",
            "mov r0, r4",
            "mov r1, r5",
            "mov r2, r7",
            "ldr r3, [sp, 0xc]",
            "bl fcn.080342f8",
            "cmp r0, 0",
            "beq 0x80350c8",
            "ldr r3, [sl]",
            "tst r3, 1",
            "bne 0x8035124",
            "mov r0, r4",
            "mov r1, r5",
            "bl 0x80350d0",
            "movw r3, 0x112",
            "ldr r0, [sp, 0xc]",
            "ldrh r1, [r8, r3]",
            "bl 0x80350e0",
            "add r6, r6, r0",
            "cmp r6, sb",
            "bhs 0x803511c",
            "ldr r3, [r4, 0x2ac]",
            "mov r1, r5",
            "add r2, sp, 0xc",
            "mov r0, r4",
            "cmp r3, 0",
            "beq 0x8035090",
            "mov r0, 0",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "mov r0, r7",
            "b 0x803510c",
            "mov r0, 1",
            "b 0x803510c",
            "ldr ip, [sp, 0xc]",
            "mov r2, fp",
            "mov r3, r7",
            "ldr r1, [0x08035148]",
            "ldr r0, [0x0803514c]",
            "str ip, [sp]",
            "bl 0x803513c",
            "b 0x80350c8"
        ]
    },
    "fcn.080342f8": {
        "function_address": "0x080342f8",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov fp, r1",
            "ldrh r8, [r1, 0xa]",
            "sub sp, sp, 0x14",
            "mov r4, r0",
            "mov r5, r2",
            "mov r6, r3",
            "cmp r8, 0",
            "beq 0x80343f8",
            "cmp r3, 0",
            "ble 0x8034428",
            "ldr r3, [r0, 0x2ac]",
            "cmp r3, 0",
            "bne 0x80343ec",
            "rsb r2, r8, 0",
            "ldr sb, [0x08034494]",
            "str r2, [sp, 0xc]",
            "b 0x8034380",
            "cmp r7, 0x24",
            "mov r5, sl",
            "bhi 0x8034488",
            "ldr r3, [r3, 0x34]",
            "cmp r3, 0",
            "beq 0x803435c",
            "blx r3",
            "ldr r3, [sp, 0xc]",
            "cmp r8, r6",
            "add r6, r6, r3",
            "bgt 0x80343ec",
            "cmp r6, 0",
            "ble 0x8034428",
            "ldr r3, [r4, 0x2ac]",
            "cmp r3, 0",
            "bne 0x80343ec",
            "ldr ip, [r4, 8]",
            "mov r3, r8",
            "mov r2, r5",
            "mov r1, fp",
            "add sl, r5, r8",
            "mov r0, r4",
            "ldr ip, [ip, 0x2ac]",
            "blx ip",
            "mov r7, r0",
            "mov r0, sl",
            "bl 0x80343a8",
            "ldr r3, [sb]",
            "tst r3, 4",
            "bne 0x8034470",
            "movw r2, 0",
            "cmp r7, 0x83",
            "movt r2, 0",
            "mov r1, r5",
            "add r3, r2, r7, lsl 2",
            "mov r0, r4",
            "bne 0x8034340",
            "ldr r0, [0x08034498]",
            "mov r2, r8",
            "bl 0x80343dc",
            "ldr r3, [sb]",
            "tst r3, 1",
            "bne 0x8034430",
            "mvn r0, 0",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r3, [0x08034494]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "beq 0x80343ec",
            "ldrh r2, [r1, 2]",
            "mov r3, r8",
            "ldr r0, [0x0803449c]",
            "ldr r1, [0x080344a0]",
            "str r6, [sp]",
            "bl 0x803441c",
            "mvn r0, 0",
            "b 0x80343f0",
            "mov r0, 0",
            "b 0x80343f0",
            "ldr r0, [0x080344a4]",
            "mov r1, r8",
            "bl 0x8034438",
            "ldr r3, [0x08034494]",
            "ldr r3, [r3]",
            "and r3, r3, 1",
            "cmp r3, 0",
            "beq 0x80343ec",
            "ldr r0, [0x080344a8]",
            "mov r2, r7",
            "ldr r1, [0x080344a0]",
            "mov r3, r8",
            "str r6, [sp]",
            "bl 0x8034464",
            "mvn r0, 0",
            "b 0x80343f0",
            "mov r3, r6",
            "mov r1, r7",
            "mov r2, r8",
            "ldr r0, [0x080344ac]",
            "bl 0x8034480",
            "b 0x80343b8",
            "ldr r3, [sb]",
            "and r3, r3, 1",
            "b 0x8034448"
        ]
    },
    "sym.sb_core_reset": {
        "function_address": "0x08010c40",
        "instructions": [
            "movw r3, 0x4884",
            "push {r4, r5, r6, r7, r8, sl, lr}",
            "ldr r8, [r0, r3]",
            "orr r7, r2, r1",
            "mov r6, r1",
            "mov r1, r7",
            "orr r7, r7, 3",
            "sub sp, sp, 0xc",
            "add r5, r8, 0xf00",
            "lsl r7, r7, 0x10",
            "mov r4, r0",
            "add sl, r5, 0x98",
            "bl sb_core_disable",
            "orr r2, r7, 1",
            "mov r1, sl",
            "mov r0, r4",
            "bl fcn.0800fafc",
            "mov r1, sl",
            "mov r0, r4",
            "bl fcn.0800f9b4",
            "add sl, r5, 0x9c",
            "str r0, [sp, 4]",
            "mov r0, 1",
            "ldr r3, [sp, 4]",
            "bl osl_delay",
            "mov r0, r4",
            "mov r1, sl",
            "bl fcn.0800f9b4",
            "tst r0, 1",
            "bne 0x8010d60",
            "add r8, r8, 0xf90",
            "mov r0, r4",
            "mov r1, r8",
            "bl fcn.0800f9b4",
            "tst r0, 0x60000",
            "str r0, [sp, 4]",
            "beq 0x8010cf0",
            "mov r1, r8",
            "mov r0, r4",
            "bl fcn.0800f9b4",
            "mov r1, r8",
            "bic r2, r0, 0x60000",
            "mov r0, r4",
            "bl fcn.0800fafc",
            "add r5, r5, 0x98",
            "mov r2, r7",
            "mov r0, r4",
            "mov r1, r5",
            "bl fcn.0800fafc",
            "mov r1, r5",
            "mov r0, r4",
            "bl fcn.0800f9b4",
            "mov r3, r0",
            "mov r0, 1",
            "str r3, [sp, 4]",
            "ldr r3, [sp, 4]",
            "bl osl_delay",
            "orr r2, r6, 1",
            "mov r0, r4",
            "lsl r2, r2, 0x10",
            "mov r1, r5",
            "bl fcn.0800fafc",
            "mov r0, r4",
            "mov r1, r5",
            "bl fcn.0800f9b4",
            "mov r3, r0",
            "mov r0, 1",
            "str r3, [sp, 4]",
            "ldr r3, [sp, 4]",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sl, lr}",
            "b osl_delay",
            "mov r0, r4",
            "mov r1, sl",
            "mov r2, 0",
            "bl fcn.0800fafc",
            "b 0x8010cb8"
        ]
    },
    "fcn.0800fafc": {
        "function_address": "0x0800fafc",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sl, lr}",
            "mov r6, r2",
            "ldr r3, [r0, 4]",
            "movw r2, 0x4898",
            "sub sp, sp, 0x14",
            "mov r4, r0",
            "mov r5, r1",
            "ldr r7, [r0, r2]",
            "cmp r3, 2",
            "movne r8, 0",
            "beq 0x800fbcc",
            "dsb st",
            "ldr r3, [0x0800fcdc]",
            "ldr r3, [r3, 0x18]",
            "cmp r3, 0",
            "beq 0x800fb40",
            "blx r3",
            "str r6, [r5]",
            "ldr r3, [r4, 4]",
            "cmp r3, 2",
            "beq 0x800fb58",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sl, pc}",
            "movw r3, 0x4878",
            "ldrb r3, [r4, r3]",
            "cmp r3, 0",
            "beq 0x800fb50",
            "add r2, sp, 0x10",
            "mov r3, 0",
            "strb r3, [r2, -1]!",
            "movw r3, 0x4858",
            "ldr r0, [r4, r3]",
            "movw r1, 0x39a",
            "mov r3, 1",
            "bl osl_pcmcia_write_attr",
            "movw r3, 0x486c",
            "ldr r3, [r4, r3]",
            "cmp r3, 0",
            "beq 0x800fb50",
            "movw r2, 0x4888",
            "ldr r1, [r4, r2]",
            "movw r2, 0x4860",
            "ldr r2, [r4, r2]",
            "add r1, r1, 0x20",
            "ldr r1, [r7, r1, lsl 2]",
            "cmp r1, r2",
            "bne 0x800fb50",
            "movw r2, 0x4864",
            "mov r1, r8",
            "ldr r0, [r4, r2]",
            "blx r3",
            "b 0x800fb50",
            "movw r3, 0x4878",
            "ldrb r8, [r0, r3]",
            "cmp r8, 0",
            "bne 0x800fc64",
            "movw r3, 0x4858",
            "mov r1, r5",
            "ldr r0, [r4, r3]",
            "add r2, sp, 8",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 8]",
            "str r3, [sp, 4]",
            "ldr r3, [sp, 4]",
            "dsb st",
            "ldr sl, [0x0800fcdc]",
            "ldr r3, [sl, 0x18]",
            "cmp r3, 0",
            "beq 0x800fc18",
            "blx r3",
            "uxth r3, r6",
            "mov r1, r5",
            "add r2, sp, 8",
            "strh r3, [r5]",
            "movw r3, 0x4858",
            "ldr r0, [r4, r3]",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 8]",
            "str r3, [sp, 4]",
            "ldr r3, [sp, 4]",
            "dsb st",
            "ldr r3, [sl, 0x18]",
            "cmp r3, 0",
            "beq 0x800fc58",
            "blx r3",
            "lsr r6, r6, 0x10",
            "strh r6, [r5, 2]",
            "b 0x800fb44",
            "movw r3, 0x4868",
            "ldr r8, [r0, r3]",
            "cmp r8, 0",
            "beq 0x800fc98",
            "add r3, r3, 0x20",
            "ldr r2, [r0, r3]",
            "movw r3, 0x4860",
            "ldr r3, [r0, r3]",
            "add r2, r2, 0x20",
            "ldr r2, [r7, r2, lsl 2]",
            "cmp r2, r3",
            "movne r8, 0",
            "beq 0x800fcc8",
            "mov r3, 1",
            "add r2, sp, 0x10",
            "movw r1, 0x4858",
            "strb r3, [r2, -1]!",
            "ldr r0, [r4, r1]",
            "movw r1, 0x39a",
            "bl osl_pcmcia_write_attr",
            "ldr r3, [r4, 4]",
            "bic r5, r5, 0x800",
            "cmp r3, 2",
            "bne 0x800fb28",
            "b 0x800fbdc",
            "movw r3, 0x4864",
            "ldr r0, [r0, r3]",
            "blx r8",
            "mov r8, r0",
            "b 0x800fc98"
        ]
    },
    "fcn.0800f9b4": {
        "function_address": "0x0800f9b4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "movw r2, 0x4898",
            "ldr r3, [r0, 4]",
            "sub sp, sp, 8",
            "mov r4, r0",
            "mov r5, r1",
            "ldr r7, [r0, r2]",
            "cmp r3, 2",
            "movne r8, 0",
            "beq 0x800fa80",
            "movw r6, 0x4858",
            "mov r1, r5",
            "mov r3, 4",
            "ldr r0, [r4, r6]",
            "mov r2, sp",
            "bl osl_pcie_rreg",
            "ldr r3, [r4, 4]",
            "ldr r5, [sp]",
            "cmp r3, 2",
            "beq 0x800fa10",
            "mov r0, r5",
            "add sp, sp, 8",
            "pop {r4, r5, r6, r7, r8, pc}",
            "movw r3, 0x4878",
            "ldrb r3, [r4, r3]",
            "cmp r3, 0",
            "beq 0x800fa04",
            "add r2, sp, 8",
            "mov r3, 0",
            "strb r3, [r2, -1]!",
            "movw r1, 0x39a",
            "mov r3, 1",
            "ldr r0, [r4, r6]",
            "bl osl_pcmcia_write_attr",
            "movw r3, 0x486c",
            "ldr r3, [r4, r3]",
            "cmp r3, 0",
            "beq 0x800fa04",
            "movw r2, 0x4888",
            "ldr r1, [r4, r2]",
            "movw r2, 0x4860",
            "ldr r2, [r4, r2]",
            "add r1, r1, 0x20",
            "ldr r1, [r7, r1, lsl 2]",
            "cmp r1, r2",
            "bne 0x800fa04",
            "movw r2, 0x4864",
            "mov r1, r8",
            "ldr r0, [r4, r2]",
            "blx r3",
            "b 0x800fa04",
            "movw r3, 0x4878",
            "ldrb r8, [r0, r3]",
            "cmp r8, 0",
            "beq 0x800f9dc",
            "movw r3, 0x4868",
            "ldr r8, [r0, r3]",
            "cmp r8, 0",
            "beq 0x800fac4",
            "add r3, r3, 0x20",
            "ldr r2, [r0, r3]",
            "movw r3, 0x4860",
            "ldr r3, [r0, r3]",
            "add r2, r2, 0x20",
            "ldr r2, [r7, r2, lsl 2]",
            "cmp r2, r3",
            "movne r8, 0",
            "beq 0x800fae8",
            "mov r3, 1",
            "add r2, sp, 8",
            "movw r1, 0x4858",
            "strb r3, [r2, -1]!",
            "ldr r0, [r4, r1]",
            "movw r1, 0x39a",
            "bl osl_pcmcia_write_attr",
            "bic r5, r5, 0x800",
            "b 0x800f9dc",
            "movw r3, 0x4864",
            "ldr r0, [r0, r3]",
            "blx r8",
            "mov r8, r0",
            "b 0x800fac4"
        ]
    },
    "sym.sb_core_cflags_wo": {
        "function_address": "0x080100c8",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "movw r3, 0x4884",
            "ldr r6, [r0, r3]",
            "mov r5, r1",
            "mov r4, r0",
            "mov r7, r2",
            "add r6, r6, 0xf90",
            "add r6, r6, 8",
            "mov r1, r6",
            "bl fcn.0800f9b4",
            "bic r5, r0, r5, lsl 16",
            "mov r1, r6",
            "mov r0, r4",
            "orr r2, r5, r7, lsl 16",
            "pop {r3, r4, r5, r6, r7, lr}",
            "b fcn.0800fafc"
        ]
    },
    "sym.dhd_bus_init": {
        "function_address": "0x0802bc78",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "mov r5, r0",
            "ldr r7, [0x0802bd7c]",
            "sub sp, sp, 0xc",
            "ldr r4, [r0, 4]",
            "ldr r3, [r7]",
            "tst r3, 2",
            "bne 0x802bd6c",
            "ldr r6, [r4]",
            "cmp r6, 0",
            "beq 0x802bd38",
            "movw r1, 0x83c",
            "mov r2, 0",
            "ldr r0, [r4, 0x20]",
            "bl si_setcore",
            "str r0, [r4, 0x30]",
            "mov r0, r4",
            "bl fcn.08028fb4",
            "subs r6, r0, 0",
            "blt 0x802bd44",
            "ldr r0, [r4, 0x20]",
            "movw r1, 0x83c",
            "mov r2, 0",
            "bl si_setcore",
            "add r2, sp, 4",
            "mov r1, r0",
            "str r0, [r4, 0x30]",
            "mov r3, 4",
            "ldr r0, [r4, 0x184]",
            "bl osl_pcie_rreg",
            "ldr r7, [sp, 4]",
            "bic r7, r7, 4",
            "dsb st",
            "ldr r3, [reloc.outer_cache]",
            "ldr r3, [r3, 0x18]",
            "cmp r3, 0",
            "beq 0x802bd10",
            "blx r3",
            "ldr r3, [r4, 0x30]",
            "mov r2, 2",
            "str r7, [r3]",
            "ldr r3, [reloc.dhd_download_fw_on_driverload]",
            "str r2, [r5, 0x14]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "beq 0x802bd60",
            "mov r0, r4",
            "bl dhdpcie_bus_intr_enable",
            "mov r0, r6",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, pc}",
            "ldr r3, [r7]",
            "tst r3, 1",
            "beq 0x802bd38",
            "ldr r1, [0x0802bd88]",
            "ldr r0, [0x0802bd8c]",
            "bl printk",
            "b 0x802bd38",
            "ldr r0, [r4]",
            "bl dhd_dpc_enable",
            "b 0x802bd30",
            "ldr r1, [0x0802bd88]",
            "ldr r0, [0x0802bd90]",
            "bl printk",
            "b 0x802bc98"
        ]
    },
    "sym.dhd_detach": {
        "function_address": "0x0801d85c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "subs r5, r0, 0",
            "sub sp, sp, 0x14",
            "beq 0x801d9e0",
            "ldr r4, [r5, 0xc]",
            "cmp r4, 0",
            "beq 0x801d9e0",
            "movw r1, 0",
            "movt r1, 0",
            "ldr r3, [r1]",
            "tst r3, 2",
            "bne 0x801dbf8",
            "movw r3, 0x3bb4",
            "mov r2, 0",
            "ldr r3, [r4, r3]",
            "ldr r6, [0x0801dcec]",
            "strb r2, [r4, 0x1c]",
            "tst r3, 0x200",
            "beq 0x801da1c",
            "ldr r3, [r6, -0xfa4]",
            "cmp r3, r2",
            "subgt r3, r3, 1",
            "strgt r3, [r6, -0xfa4]",
            "ldr r3, [r6, -0xfa0]",
            "cmp r3, 0",
            "ldrgt r2, [0x0801dcec]",
            "subgt r3, r3, 1",
            "strgt r3, [r2, -0xfa0]",
            "movw r3, 0x1970",
            "add sl, r4, 0xc",
            "ldr r1, [r4, r3]",
            "mov r0, sl",
            "movw r7, 0x3bb4",
            "bl dhd_free_wet_info",
            "ldr r3, [r4, r7]",
            "tst r3, 8",
            "bne 0x801db40",
            "tst r3, 4",
            "bne 0x801da28",
            "movw r3, 0x3a1c",
            "mov r1, 0",
            "ldrb r2, [r4, r3]",
            "strb r1, [r4, r3]",
            "cmp r2, r1",
            "bne 0x801da10",
            "movw r3, 0x3bb4",
            "ldr r3, [r4, r3]",
            "tst r3, 0x20",
            "beq 0x801d96c",
            "movw r7, 0x3ab8",
            "ldr r3, [r4, r7]",
            "cmp r3, 0",
            "bge 0x801dc10",
            "movw r3, 0x3b4c",
            "ldrb r3, [r4, r3]",
            "cmp r3, 0",
            "beq 0x801d950",
            "movw r7, 0x3b04",
            "ldr r3, [r4, r7]",
            "cmp r3, 0",
            "bge 0x801dca4",
            "movw r7, 0x3a6c",
            "ldr r3, [r4, r7]",
            "cmp r3, 0",
            "bge 0x801dc58",
            "add r0, r4, 0x3a00",
            "add r0, r0, 0x20",
            "bl tasklet_kill",
            "movw r7, 0x3bb8",
            "ldr r0, [r4, r7]",
            "bl dhd_deferred_work_deinit",
            "movw r3, 0x3bb4",
            "mov r2, 0",
            "ldr r3, [r4, r3]",
            "str r2, [r4, r7]",
            "tst r3, 0x40",
            "bne dhd_msg_level",
            "ldr r3, [r4, 8]",
            "mov r2, 0",
            "ldr r7, [0x0801dcf0]",
            "mov r0, r5",
            "add r3, r7, r3, lsl 4",
            "str r2, [r3, 8]",
            "bl dhd_flow_rings_deinit",
            "ldr r3, [r5, 8]",
            "cmp r3, 0",
            "beq 0x801d9c0",
            "mov r0, r5",
            "bl dhd_prot_detach",
            "ldr r0, [r4, 0xc]",
            "bl osl_ctfpool_cleanup",
            "ldr r2, [0x0801dcf4]",
            "mov r3, 0",
            "str r3, [r4]",
            "str r3, [r6, -0xfa4]",
            "str r3, [r2]",
            "str r3, [r7, 0x50]",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "movw r2, 0",
            "movt r2, 0",
            "ldr r3, [r2]",
            "tst r3, 2",
            "beq 0x801d990",
            "movw r3, 0x3b8c",
            "ldr r0, [0x0801dcf8]",
            "ldr r1, [r4, r3]",
            "bl printk",
            "b 0x801d990",
            "add r0, r4, 0x3a00",
            "bl del_timer_sync",
            "b 0x801d910",
            "mov r0, 0x64",
            "bl osl_sleep",
            "b 0x801d8cc",
            "add r8, r4, 0x1980",
            "mov r0, r4",
            "mov r7, 1",
            "add r8, r8, 4",
            "bl fcn.08019acc",
            "ldr r3, [r8, 4]!",
            "mov r1, r7",
            "mov r0, sl",
            "add r7, r7, 1",
            "mov r2, 1",
            "cmp r3, 0",
            "beq 0x801da5c",
            "bl dhd_remove_if",
            "cmp r7, 0x10",
            "bne 0x801da3c",
            "mov r0, r4",
            "bl fcn.08019ab8",
            "movw r3, 0x1984",
            "ldr r3, [r4, r3]",
            "cmp r3, 0",
            "str r3, [sp, 8]",
            "beq 0x801d8f8",
            "ldr fp, [r3, 8]",
            "cmp fp, 0",
            "beq 0x801d8f8",
            "mov r8, 0",
            "str r8, [r3, 4]",
            "ldrb r3, [fp, 0x2c0]",
            "cmp r3, r8",
            "bne local_bh_disable",
            "mov r0, fp",
            "bl free_netdev",
            "ldr r3, [0x0801dcfc]",
            "mov r1, 0",
            "ldr r2, [sp, 8]",
            "mov r0, r5",
            "mov r7, r1",
            "str r3, [r2, 8]",
            "bl dhd_wmf_cleanup",
            "ldr r2, [sp, 8]",
            "mov r3, r7",
            "ldr r0, [r5]",
            "ldr r1, [r2, 0x1f8]",
            "mov r2, 1",
            "str r7, [sp]",
            "ldr ip, [r5, 0xdc]",
            "str ip, [sp, 4]",
            "bl bcm_l2_filter_arp_table_update",
            "ldr r3, [sp, 8]",
            "ldr r0, [r5]",
            "ldr r1, [r3, 0x1f8]",
            "bl deinit_l2_filter_arp_table",
            "ldr r3, [sp, 8]",
            "ldr r2, [sp, 8]",
            "ldr r1, [r2, 0x200]",
            "mov r2, 0x40",
            "str r7, [r3, 0x1f8]",
            "ldr r0, [r5]",
            "bl osl_mfree",
            "ldr r0, [sp, 8]",
            "str r7, [r0, 0x200]",
            "strb r7, [r0, 0x204]",
            "bl fcn.08019d44",
            "ldr r0, [r4, 0xc]",
            "mov r2, 0x210",
            "ldr r1, [sp, 8]",
            "bl osl_mfree",
            "movw r3, 0x1984",
            "str r7, [r4, r3]",
            "b 0x801d8f8",
            "mov r0, r5",
            "bl dhd_bus_detach",
            "ldr r3, [r4, r7]",
            "b 0x801d8f0",
            "bl local_bh_disable",
            "ldr r3, [fp, 0x264]",
            "mov r1, sp",
            "bic r2, r1, 0x1fc0",
            "bic r2, r2, 0x3f",
            "cmp r3, 0",
            "ldr sb, [r2, 0x14]",
            "beq local_bh_enable",
            "mov sl, r8",
            "str r4, [sp, 0xc]",
            "ldr r4, [fp, 0x260]",
            "add r4, r4, r8",
            "add r7, r4, 0x40",
            "mov r0, r7",
            "bl _raw_spin_lock",
            "cmp r4, 0",
            "mov r0, 0",
            "add r1, r4, 0x54",
            "str sb, [r4, 0x48]",
            "beq 0x801dbe0",
            "bl _set_bit",
            "mvn r2, 0",
            "mov r0, r7",
            "str r2, [r4, 0x48]",
            "add sl, sl, 1",
            "bl _raw_spin_unlock",
            "ldr r3, [fp, 0x264]",
            "add r8, r8, 0xc0",
            "cmp sl, r3",
            "blo 0x801db78",
            "ldr r4, [sp, 0xc]",
            "bl local_bh_enable",
            "ldr r3, [sp, 8]",
            "ldr r0, [r3, 8]",
            "bl unregister_netdev",
            "b 0x801daa8",
            "ldr r0, [0x0801dd00]",
            "movw r1, 0x777",
            "bl warn_slowpath_null",
            "ldr r0, [0x0801dd04]",
            "bl printk",
            "b 0x801dba4",
            "movw r3, 0x3bb4",
            "ldr r1, [0x0801dd08]",
            "ldr r2, [r4, r3]",
            "ldr r0, [0x0801dd0c]",
            "bl printk",
            "b 0x801d88c",
            "mov r2, 1",
            "movw r3, 0x3ad4",
            "str r2, [r4, r3]",
            "dmb ishst",
            "add r8, r4, 0x3ac0",
            "mov r0, r8",
            "bl up",
            "add r0, r8, 0x18",
            "bl wait_for_completion",
            "movw r3, 0x3ab0",
            "ldr r0, [0x0801dd10]",
            "ldr r2, [r4, r3]",
            "ldr r1, [0x0801dd08]",
            "ldr r3, [r4, r7]",
            "bl printk",
            "mvn r3, 0",
            "str r3, [r4, r7]",
            "b 0x801d930",
            "mov r2, 1",
            "movw r3, 0x3a88",
            "str r2, [r4, r3]",
            "dmb ishst",
            "add r0, r4, 0x3a40",
            "add r0, r0, 0x34",
            "bl up",
            "add r0, r4, 0x3a80",
            "add r0, r0, 0xc",
            "bl wait_for_completion",
            "movw r3, 0x3a64",
            "ldr r0, [0x0801dd10]",
            "ldr r2, [r4, r3]",
            "ldr r1, [0x0801dd08]",
            "ldr r3, [r4, r7]",
            "bl printk",
            "mvn r3, 0",
            "str r3, [r4, r7]",
            "b 0x801d96c",
            "mov r2, 1",
            "movw r3, 0x3b20",
            "str r2, [r4, r3]",
            "dmb ishst",
            "add r8, r4, 0x3b00",
            "add r0, r8, 0xc",
            "bl up",
            "add r0, r8, 0x24",
            "bl wait_for_completion",
            "movw r3, 0x3afc",
            "ldr r0, [0x0801dd10]",
            "ldr r2, [r4, r3]",
            "ldr r1, [0x0801dd08]",
            "ldr r3, [r4, r7]",
            "bl printk",
            "mvn r3, 0",
            "str r3, [r4, r7]",
            "b 0x801d950"
        ]
    },
    "fcn.08019d44": {
        "function_address": "0x08019d44",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r5, r0",
            "ldr r3, [r5, 0x1e8]!",
            "mov r6, r0",
            "cmp r5, r3",
            "ldr r2, [r3], -0x20",
            "popeq {r4, r5, r6, r7, r8, pc}",
            "mov r8, 0x100",
            "mov r7, 0x200",
            "sub r4, r2, 0x20",
            "movt r8, 0x10",
            "movt r7, 0x20",
            "ldr r0, [r3, 0x24]",
            "mov r1, r3",
            "str r0, [r2, 4]",
            "str r2, [r0]",
            "str r8, [r3, 0x20]",
            "str r7, [r3, 0x24]",
            "ldr r0, [r6]",
            "add r0, r0, 0xc",
            "bl fcn.08019c3c",
            "mov r1, r4",
            "mov r3, r4",
            "ldr r2, [r1, 0x20]!",
            "cmp r5, r1",
            "sub r4, r2, 0x20",
            "bne 0x8019d74",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "sym._initvars_srom_pci": {
        "function_address": "0x0800966c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x54",
            "str r0, [sp, 0x18]",
            "mov r7, r2",
            "mov r0, r3",
            "mov r5, 1",
            "ldr r2, [sp, 0x18]",
            "str r1, [sp, 0x2c]",
            "ldr r1, [0x08009e54]",
            "str r3, [sp, 0x30]",
            "lsl r5, r5, r2",
            "ldr r6, [0x08009e58]",
            "ldr r4, [0x08009e5c]",
            "bl fcn.08008f4c",
            "ldr r8, [sp, 0x2c]",
            "ldr r3, [r4, 4]",
            "tst r5, r3",
            "beq 0x80098c8",
            "ldrh r1, [r4, 0xc]",
            "cmp r1, r7",
            "blo 0x80098c8",
            "ldr fp, [r4, 8]",
            "tst fp, 0x80",
            "bne 0x80098c8",
            "ldr r2, [sp, 0x78]",
            "ldrb r3, [r2, r1]",
            "cmp r3, 0",
            "beq 0x80098c8",
            "tst fp, 0x20",
            "bne 0x8009c00",
            "ldr r3, [sp, 0x18]",
            "cmp r3, 9",
            "bls 0x80096f8",
            "tst fp, 0x100",
            "bne .LANCHOR2",
            "mov r2, fp",
            "rsb r3, r7, r1",
            "ldrh r0, [r4, 0xe]",
            "lsl r3, r3, 1",
            "mov r1, 0",
            "ldrh sb, [r8, r3]",
            "and sb, r0, sb",
            "asr ip, r0, r1",
            "mov r3, r1",
            "add r1, r1, 1",
            "ands ip, ip, 1",
            "bne 0x8009734",
            "cmp r1, 0x10",
            "bne 0x8009714",
            "mov r3, ip",
            "asr sb, sb, r3",
            "add r3, r4, 0x18",
            "str r2, [sp, 0xc]",
            "str r3, [sp, 0x10]",
            "bl fcn.08008ca0",
            "ldr r2, [sp, 0xc]",
            "mov sl, r0",
            "ldr r3, [sp, 0x10]",
            "str fp, [sp, 0x14]",
            "mov fp, r6",
            "tst r2, 1",
            "mov r6, r5",
            "mov r5, r4",
            "mov r4, r3",
            "beq 0x80097dc",
            "ldrh r3, [r4, 4]",
            "add r5, r5, 0x10",
            "cmp r3, 0",
            "beq 0x80097d0",
            "cmp r7, r3",
            "bhi 0x80097d0",
            "rsb r3, r7, r3",
            "ldrh r0, [r4, 6]",
            "lsl r3, r3, 1",
            "mov r2, 0",
            "ldrh ip, [r8, r3]",
            "and ip, r0, ip",
            "asr r1, r0, r2",
            "mov r3, r2",
            "add r2, r2, 1",
            "ands r1, r1, 1",
            "bne 0x80097c0",
            "cmp r2, 0x10",
            "bne 0x80097a0",
            "mov r3, r1",
            "asr r3, ip, r3",
            "add sb, sb, r3, lsl sl",
            "bl fcn.08008ca0",
            "add sl, sl, r0",
            "ldr r2, [r4], 0x10",
            "tst r2, 1",
            "bne 0x8009770",
            "mov r4, r5",
            "mov r5, r6",
            "mov r6, fp",
            "ldr fp, [sp, 0x14]",
            "tst fp, 2",
            "beq 0x8009804",
            "mvn r3, 0",
            "mvn r3, r3, lsl sl",
            "cmp sb, r3",
            "beq 0x80098c8",
            "ldr r3, [sp, 0x18]",
            "cmp r3, 9",
            "bhi .LANCHOR2",
            "tst r2, 0x100",
            "beq .LANCHOR2",
            "add r2, r4, 0x10",
            "mov r0, r2",
            "mov r3, r2",
            "b 0x800982c",
            "add r2, r2, 0x10",
            "rsb r1, r4, r3",
            "add r3, r3, 0x10",
            "add r1, r1, r0",
            "ldr r1, [r1, -8]",
            "tst r1, 0x100",
            "bne 0x8009828",
            "add r4, r2, 0x10",
            "movw lr, 0",
            "movt lr, 0",
            "ldrb r3, [lr]",
            "cmp r3, 0",
            "beq 0x8009be0",
            "tst fp, 4",
            "bne 0x8009d1c",
            "tst fp, 8",
            "beq .LANCHOR2",
            "sub r3, sl, 1",
            "mov r2, 1",
            "ands r2, sb, r2, lsl r3",
            "bne .LANCHOR2",
            "movw r3, 0",
            "ldr r0, [0x08009e60]",
            "movt r3, 0",
            "ldr r2, [0x08009e64]",
            "ldr ip, [r3, 4]",
            "mov r3, sb",
            "rsb r1, ip, 0x100",
            "add r0, r0, ip",
            "bl snprintf",
            "cmp r0, 0",
            "ble 0x8009d50",
            "movw r1, 0",
            "ldr ip, [r4, 8]",
            "movt r1, 0",
            "ldr r3, [r1, 4]",
            "ands ip, ip, 0x100",
            "add r0, r0, r3",
            "str r0, [r1, 4]",
            "beq .LANCHOR2",
            "ldr r6, [r4, 0x10]",
            "add r4, r4, 0x10",
            "cmp r6, 0",
            "bne 0x80096a8",
            "ldr r1, [sp, 0x18]",
            "cmp r1, 3",
            "bls 0x8009a90",
            "cmp r1, 0xc",
            "bls 0x8009a98",
            "mov sl, 0x48",
            "mov r6, 0x100",
            "mov r3, 4",
            "str r3, [sp, 0x24]",
            "ldr r3, [sp, 0x18]",
            "mov r8, 0",
            "str r8, [sp, 0x34]",
            "str r8, [sp, 0x1c]",
            "cmp r3, 0xc",
            "str r8, [sp, 0x20]",
            "movls r3, 0",
            "movhi r3, 1",
            "str r3, [sp, 0x28]",
            "ldr sb, [0x08009e68]",
            "rsb r3, r7, r6",
            "ldr r4, [0x08009e6c]",
            "str r3, [sp, 0x14]",
            "ldr r3, [r4, 4]",
            "tst r5, r3",
            "beq 0x8009a54",
            "ldrh r3, [r4, 0xc]",
            "add r2, r6, r3",
            "cmp r7, r2",
            "bhi 0x8009a54",
            "ldr fp, [r4, 8]",
            "tst fp, 0x80",
            "bne 0x8009a54",
            "ldr r1, [sp, 0x78]",
            "ldrb r2, [r1, r3]",
            "cmp r2, 0",
            "beq 0x8009a54",
            "ldr r2, [sp, 0x18]",
            "cmp r2, 9",
            "bls 0x8009988",
            "tst fp, 0x100",
            "beq 0x8009988",
            "ldr lr, [sp, 0x20]",
            "cmp lr, 0",
            "beq 0x8009b8c",
            "ldr lr, [sp, 0x14]",
            "mov r2, 0",
            "ldr r1, [sp, 0x2c]",
            "ldrh r0, [r4, 0xe]",
            "add r3, lr, r3",
            "lsl r3, r3, 1",
            "ldrh sb, [r1, r3]",
            "and sb, r0, sb",
            "asr r1, r0, r2",
            "mov r3, r2",
            "add r2, r2, 1",
            "ands r1, r1, 1",
            "bne 0x80099c8",
            "cmp r2, 0x10",
            "bne 0x80099a8",
            "mov r3, r1",
            "asr sb, sb, r3",
            "bl fcn.08008ca0",
            "tst fp, 2",
            "mov ip, r0",
            "beq 0x80099ec",
            "mvn r3, 0",
            "mvn r3, r3, lsl r0",
            "cmp sb, r3",
            "beq 0x8009a54",
            "ldr r2, [sp, 0x20]",
            "cmp r2, 0",
            "beq 0x8009ac4",
            "tst fp, 4",
            "bne 0x8009ae8",
            "tst fp, 8",
            "beq 0x8009a18",
            "sub r3, ip, 1",
            "mov r2, 1",
            "ands r2, sb, r2, lsl r3",
            "bne 0x8009bb8",
            "ldr r3, [sp, 0x1c]",
            "ldr fp, [0x08009e70]",
            "ldr r2, [0x08009e64]",
            "rsb r1, r3, 0x100",
            "add r0, fp, r3",
            "mov r3, sb",
            "bl snprintf",
            "cmp r0, 0",
            "ble 0x8009b10",
            "ldr ip, [r4, 8]",
            "ldr r1, [sp, 0x1c]",
            "ands ip, ip, 0x100",
            "add r1, r1, r0",
            "str r1, [sp, 0x1c]",
            "beq 0x8009b58",
            "ldr sb, [r4, 0x10]",
            "add r4, r4, 0x10",
            "cmp sb, 0",
            "bne 0x8009930",
            "ldr r3, [sp, 0x28]",
            "ldr r2, [sp, 0x24]",
            "cmp r8, 2",
            "movne r3, 0",
            "andeq r3, r3, 1",
            "add r8, r8, 1",
            "cmp r3, 0",
            "movne sl, 0x70",
            "cmp r2, r8",
            "add r6, r6, sl",
            "bhi 0x8009920",
            "add sp, sp, 0x54",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "beq 0x8009c74",
            "cmp r1, 0xb",
            "beq 0x8009d08",
            "cmp r1, 8",
            "mov r2, 4",
            "str r2, [sp, 0x24]",
            "movlo sl, 0x17",
            "movhs sl, 0x10",
            "movlo r6, 0x40",
            "movhs r6, 0x60",
            "b 0x80098fc",
            "tst fp, 4",
            "ldr r2, [r4]",
            "ldr r0, [sp, 0x30]",
            "mov r3, r8",
            "ldrne r1, [0x08009e74]",
            "ldreq r1, [0x08009e78]",
            "str sb, [sp]",
            "bl fcn.08008f4c",
            "b 0x8009a54",
            "ldr r3, [sp, 0x1c]",
            "ldr lr, [0x08009e70]",
            "ldr r2, [0x08009e7c]",
            "rsb r1, r3, 0x100",
            "ldr fp, [0x08009e70]",
            "add r0, lr, r3",
            "mov r3, sb",
            "bl snprintf",
            "cmp r0, 0",
            "bgt 0x8009a3c",
            "ldr r3, [r4, 8]",
            "tst r3, 0x100",
            "moveq r2, r4",
            "beq 0x8009b48",
            "add r0, r4, 0x10",
            "mov r2, r4",
            "mov r3, r0",
            "rsb r1, r4, r3",
            "add r2, r2, 0x10",
            "add r1, r1, r0",
            "add r3, r3, 0x10",
            "ldr r1, [r1, -8]",
            "tst r1, 0x100",
            "bne 0x8009b2c",
            "add r4, r2, 0x10",
            "mov r2, 0",
            "str r2, [sp, 0x20]",
            "b 0x8009a54",
            "ldr r3, [sp, 0x1c]",
            "movw r1, 0",
            "movt r1, 0",
            "ldr r0, [sp, 0x30]",
            "ldr r2, [sp, 0x34]",
            "add lr, r1, r3",
            "ldr r1, [0x08009e80]",
            "strb ip, [lr, 0x10b]",
            "mov r3, r8",
            "str fp, [sp]",
            "str ip, [sp, 0x20]",
            "bl fcn.08008f4c",
            "b 0x8009a54",
            "mov r1, 0x100",
            "ldr r0, [0x08009e70]",
            "bl __memzero",
            "ldr r1, [sp, 0x20]",
            "mov r2, 1",
            "ldrh r3, [r4, 0xc]",
            "ldr fp, [r4, 8]",
            "str r1, [sp, 0x1c]",
            "str sb, [sp, 0x34]",
            "str r2, [sp, 0x20]",
            "b 0x8009988",
            "ldr r1, [sp, 0x1c]",
            "mvn r3, 0",
            "ldr r2, [0x08009e70]",
            "orr r3, sb, r3, lsl ip",
            "ldr fp, [0x08009e70]",
            "add r0, r2, r1",
            "rsb r1, r1, 0x100",
            "ldr r2, [0x08009e84]",
            "bl snprintf",
            "b 0x8009a34",
            "tst fp, 0x10",
            "beq 0x8009cc8",
            "cmp sb, 0",
            "ldr r0, [sp, 0x30]",
            "bne 0x8009d3c",
            "ldr r1, [0x08009e88]",
            "bl fcn.08008f4c",
            "b 0x80098c8",
            "rsb r3, r7, r1",
            "add r0, sp, 0x4a",
            "add r2, r8, r3, lsl 1",
            "lsl r1, r3, 1",
            "mov r3, r2",
            "ldrh ip, [r8, r1]",
            "ldrh r2, [r2, 2]",
            "add r1, sp, 0x38",
            "ldrh r3, [r3, 4]",
            "strb ip, [sp, 0x4b]",
            "strb r2, [sp, 0x4d]",
            "lsr ip, ip, 8",
            "lsr r2, r2, 8",
            "strb r3, [sp, 0x4f]",
            "lsr r3, r3, 8",
            "strb ip, [sp, 0x4a]",
            "strb r2, [sp, 0x4c]",
            "strb r3, [sp, 0x4e]",
            "bl bcm_ether_ntoa",
            "mov r2, r6",
            "ldr r0, [sp, 0x30]",
            "ldr r1, [0x08009e8c]",
            "add r3, sp, 0x38",
            "bl fcn.08008f4c",
            "ldr r6, [r4, 0x10]",
            "add r4, r4, 0x10",
            "cmp r6, 0",
            "bne 0x80096a8",
            "b 0x80098d8",
            "mov r1, 3",
            "mov sl, 0x48",
            "str r1, [sp, 0x24]",
            "mov r6, 0x100",
            "b 0x80098fc",
            "movw lr, 0",
            "movt lr, 0",
            "ldrb r3, [lr]",
            "cmp r3, 0",
            "bne 0x80096f8",
            "mov r1, 0x100",
            "stmib lr, {r3, r6}",
            "ldr r0, [0x08009e60]",
            "bl __memzero",
            "movw r2, 0",
            "mov r3, 1",
            "movt r2, 0",
            "ldrh r1, [r4, 0xc]",
            "strb r3, [r2]",
            "ldr r2, [r4, 8]",
            "b 0x80096fc",
            "tst fp, 0x40",
            "bne 0x8009ddc",
            "tst fp, 4",
            "ldr r0, [sp, 0x30]",
            "bne 0x8009e28",
            "tst fp, 8",
            "beq 0x8009cf4",
            "sub r3, sl, 1",
            "mov r2, 1",
            "ands r2, sb, r2, lsl r3",
            "bne 0x8009e3c",
            "ldr r1, [0x08009e90]",
            "mov r2, r6",
            "mov r3, sb",
            "bl fcn.08008f4c",
            "b 0x80098c8",
            "mov r2, 3",
            "mov sl, 0x14",
            "str r2, [sp, 0x24]",
            "mov r6, 0x6c",
            "b 0x80098fc",
            "ldr ip, [lr, 4]",
            "mov r3, sb",
            "ldr r0, [0x08009e60]",
            "ldr r2, [0x08009e7c]",
            "rsb r1, ip, 0x100",
            "add r0, r0, ip",
            "bl snprintf",
            "b 0x80098a0",
            "ldr r1, [0x08009e94]",
            "lsr r2, sb, 8",
            "uxtb r3, sb",
            "bl fcn.08008f4c",
            "b 0x80098c8",
            "ldr r3, [r4, 8]",
            "tst r3, 0x100",
            "moveq r2, r4",
            "beq .LANCHOR2",
            "add r0, r4, 0x10",
            "mov r2, r4",
            "mov r3, r0",
            "rsb r1, r4, r3",
            "add r2, r2, 0x10",
            "add r1, r1, r0",
            "add r3, r3, 0x10",
            "ldr r1, [r1, -8]",
            "tst r1, 0x100",
            "bne 0x8009d6c",
            "movw r3, 0",
            "add r4, r2, 0x10",
            "movt r3, 0",
            "mov r2, 0",
            "strb r2, [r3]",
            "b 0x80098c8",
            "movw r1, 0",
            "movw r3, 0",
            "movt r1, 0",
            "movt r3, 0",
            "add lr, r1, r0",
            "ldr r2, [r3, 8]",
            "strb ip, [lr, 0xb]",
            "movw lr, 0",
            "movt lr, 0",
            "ldr r0, [sp, 0x30]",
            "ldr r1, [0x08009e8c]",
            "ldr r3, [0x08009e60]",
            "strb ip, [lr]",
            "bl fcn.08008f4c",
            "b 0x80098c8",
            "lsr r3, sb, 8",
            "lsl r2, sb, 0x18",
            "ldr r1, [0x08009e98]",
            "lsl r3, r3, 0x18",
            "ldr r0, [sp, 0x30]",
            "orr r2, r3, r2, lsr 16",
            "bl fcn.08008f4c",
            "b 0x80098c8",
            "movw r2, 0",
            "ldr r0, [0x08009e60]",
            "movt r2, 0",
            "mvn r3, 0",
            "ldr ip, [r2, 4]",
            "orr r3, sb, r3, lsl sl",
            "ldr r2, [0x08009e84]",
            "rsb r1, ip, 0x100",
            "add r0, r0, ip",
            "bl snprintf",
            "b 0x80098a0",
            "ldr r1, [0x08009e9c]",
            "mov r2, r6",
            "mov r3, sb",
            "bl fcn.08008f4c",
            "b 0x80098c8",
            "mvn r3, 0",
            "ldr r1, [0x08009ea0]",
            "mov r2, r6",
            "orr r3, sb, r3, lsl sl",
            "bl fcn.08008f4c",
            "b 0x80098c8"
        ]
    },
    "fcn.08008f4c": {
        "function_address": "0x08008f4c",
        "instructions": [
            "push {r1, r2, r3}",
            "push {r4, r5, r6, r7, r8, sl, lr}"
        ]
    },
    "fcn.08008ca0": {
        "function_address": "0x08008ca0",
        "instructions": [
            "mov r3, 0xf",
            "asr r2, r0, r3",
            "ands r2, r2, 1",
            "bne 0x8008cc0",
            "subs r3, r3, 1",
            "bhs 0x8008ca4",
            "mov r0, r2",
            "bx lr",
            "mov r2, 0",
            "asr r1, r0, r2",
            "ands r1, r1, 1",
            "bne 0x8008ce0",
            "add r2, r2, 1",
            "cmp r2, 0x10",
            "bne 0x8008cc4",
            "mov r2, r1",
            "add r3, r3, 1",
            "rsb r0, r2, r3",
            "bx lr"
        ]
    },
    "sym.dhdpcie_download_map_bin": {
        "function_address": "0x0802c460",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r5, 0",
            "ldr r8, [r0, 0x17c]",
            "sub sp, sp, 0x20",
            "mov r4, r0",
            "ldr r0, [r0, 0x20]",
            "str r5, [sp, 0x14]",
            "str r5, [sp, 0x18]",
            "bl si_osh",
            "mov r1, r8",
            "mov r7, r0",
            "ldr r0, [r4, 0x20]",
            "strh r5, [sp, 0x1e]",
            "bl srom_offset",
            "mov r1, r8",
            "mov r6, r0",
            "add r2, sp, 0x14",
            "ldr r0, [r4, 0x20]",
            "add r3, sp, 0x18",
            "bl initvars_srom_pci",
            "subs r5, r0, 0",
            "bne 0x802c4c4",
            "ldr r3, [sp, 0x18]",
            "cmp r3, 0",
            "bne 0x802c4e0",
            "ldr r3, [0x0802c63c]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "bne 0x802c618",
            "mov r0, r5",
            "add sp, sp, 0x20",
            "pop {r4, r5, r6, r7, r8, pc}",
            "cmp r3, 0x4000",
            "bhs 0x802c4c4",
            "ldr r3, [r4]",
            "mov r1, 0x4000",
            "ldr r0, [r3]",
            "bl osl_mallocz",
            "subs r8, r0, 0",
            "beq 0x802c5ec",
            "ldr r1, [sp, 0x14]",
            "ldr r2, [sp, 0x18]",
            "bl memcpy",
            "ldr r3, [r4]",
            "ldr r1, [sp, 0x14]",
            "ldr r2, [sp, 0x18]",
            "ldr r0, [r3]",
            "bl osl_mfree",
            "mov r0, r4",
            "mov r1, r8",
            "add r2, sp, 0x18",
            "bl dhd_vars_adjust",
            "subs r5, r0, 0",
            "beq 0x802c550",
            "ldr r3, [r4]",
            "mov r1, r8",
            "mov r2, 0x4000",
            "ldr r0, [r3]",
            "bl osl_mfree",
            "b 0x802c4d4",
            "ldr r0, [r4, 0x20]",
            "bl si_is_sprom_available",
            "cmp r0, 0",
            "beq 0x802c590",
            "add ip, sp, 0x1e",
            "ldr r1, [r4, 0x20]",
            "mov r0, r7",
            "str ip, [sp]",
            "mov r2, r6",
            "mov ip, 1",
            "mov r3, r5",
            "str ip, [sp, 4]",
            "str r5, [sp, 8]",
            "bl sprom_read_pci",
            "cmp r0, 0",
            "beq 0x802c5a0",
            "ldr r0, [r4]",
            "mov r1, r8",
            "add r2, sp, 0x18",
            "bl dhd_check_and_set_mac",
            "ldr r2, [sp, 0x18]",
            "ands r3, r2, 3",
            "beq 0x802c5d8",
            "rsb r3, r3, 4",
            "mov r1, 0",
            "add r2, r3, r2",
            "str r2, [sp, 0x18]",
            "sub r3, r3, 1",
            "sub r2, r2, 1",
            "rsb r2, r3, r2",
            "cmp r3, 0",
            "strb r1, [r8, r2]",
            "ldr r2, [sp, 0x18]",
            "bne 0x802c5bc",
            "mov r0, r4",
            "mov r1, r8",
            "bl fcn.08027b70",
            "mov r5, r0",
            "b 0x802c538",
            "ldr r3, [0x0802c63c]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "bne 0x802c628",
            "ldr r3, [r4]",
            "mvn r5, 0",
            "ldr r1, [sp, 0x14]",
            "ldr r2, [sp, 0x18]",
            "ldr r0, [r3]",
            "bl osl_mfree",
            "b 0x802c4d4",
            "ldr r1, [0x0802c640]",
            "ldr r0, [0x0802c644]",
            "bl printk",
            "b 0x802c4d4",
            "mov r2, 0x4000",
            "ldr r1, [0x0802c640]",
            "ldr r0, [0x0802c648]",
            "bl printk",
            "b 0x802c5fc"
        ]
    },
    "fcn.08027b70": {
        "function_address": "0x08027b70",
        "instructions": [
            "ldr r3, [0x08027c18]",
            "push {r4, r5, r6, lr}",
            "mov r4, r0",
            "mov r6, r1",
            "mov r5, r2",
            "ldr r3, [r3]",
            "tst r3, 2",
            "bne 0x8027c08",
            "ldr r3, [r4]",
            "ldrb r2, [r3, 0x10]",
            "cmp r2, 0",
            "mvnne r0, 4",
            "popne {r4, r5, r6, pc}",
            "cmp r5, 0",
            "beq 0x8027c00",
            "ldr r1, [r4, 0x24]",
            "cmp r1, 0",
            "beq 0x8027bc8",
            "ldr r0, [r3]",
            "ldr r2, [r4, 0x28]",
            "bl osl_mfree",
            "ldr r3, [r4]",
            "ldr r0, [r3]",
            "mov r1, r5",
            "bl osl_malloc",
            "cmp r0, 0",
            "str r0, [r4, 0x24]",
            "streq r0, [r4, 0x28]",
            "mvneq r0, 0x1a",
            "popeq {r4, r5, r6, pc}",
            "str r5, [r4, 0x28]",
            "mov r1, r6",
            "mov r2, r5",
            "bl memcpy",
            "mov r0, 0",
            "pop {r4, r5, r6, pc}",
            "mvn r0, 0xd",
            "pop {r4, r5, r6, pc}",
            "ldr r1, [0x08027c1c]",
            "ldr r0, [0x08027c20]",
            "bl printk",
            "b 0x8027b90"
        ]
    },
    "sym.dhd_prot_flowrings_pool_release": {
        "function_address": "0x08025d38",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "add r1, r1, r1, lsl 2",
            "ldr r3, [r0, 8]",
            "lsl r5, r1, 4",
            "ldr r6, [r3, 0x1a8]",
            "sub r5, r5, 0xa0",
            "add r4, r6, r5",
            "add r0, r4, 0x14",
            "bl fcn.08023384",
            "mov r3, 0",
            "strh r3, [r4, 6]",
            "strh r3, [r4, 4]",
            "strb r3, [r6, r5]",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.08023384": {
        "function_address": "0x08023384",
        "instructions": [
            "push {r3, lr}",
            "ldr r2, [r0, 8]",
            "ldr r3, [r0, 4]",
            "cmn r3, r2",
            "movlo r0, 0",
            "poplo {r3, pc}",
            "ldr r1, [0x080233c8]",
            "ldr r1, [r1]",
            "tst r1, 1",
            "bne 0x80233b4",
            "mvn r0, 0",
            "pop {r3, pc}",
            "ldr r0, [0x080233cc]",
            "ldr r1, [0x080233d0]",
            "bl printk",
            "mvn r0, 0",
            "pop {r3, pc}"
        ]
    },
    "sym.si_socdevram_size": {
        "function_address": "0x08014218",
        "instructions": [
            "movw r3, 0x4868",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "ldr r3, [r0, r3]",
            "movw r2, 0x4898",
            "sub sp, sp, 0x14",
            "mov r4, r0",
            "ldr r8, [r0, r2]",
            "cmp r3, 0",
            "beq 0x80143a8",
            "movw r5, 0x4888",
            "movw r2, 0x4860",
            "ldr sl, [r0, r5]",
            "ldr r2, [r0, r2]",
            "add r1, sl, 0x20",
            "ldr r1, [r8, r1, lsl 2]",
            "cmp r1, r2",
            "movne r3, 0",
            "strne r3, [sp, 4]",
            "beq 0x80143b8",
            "mov r0, r4",
            "movw r1, 0x80e",
            "mov r2, 0",
            "bl si_setcore",
            "subs r7, r0, 0",
            "moveq r6, r7",
            "beq 0x80142b8",
            "mov r0, r4",
            "bl si_iscoreup",
            "subs fp, r0, 0",
            "beq 0x801436c",
            "mov r0, r4",
            "bl si_corerev",
            "cmp r0, 9",
            "movls r6, 0",
            "bhi 0x8014304",
            "cmp fp, 0",
            "beq 0x80142f4",
            "mov r0, r4",
            "mov r1, sl",
            "bl si_setcoreidx",
            "movw r3, 0x486c",
            "ldr r3, [r4, r3]",
            "cmp r3, 0",
            "beq 0x80142e8",
            "movw r2, 0x4888",
            "ldr r1, [r4, r2]",
            "movw r2, 0x4860",
            "ldr r2, [r4, r2]",
            "add r1, r1, 0x20",
            "ldr r1, [r8, r1, lsl 2]",
            "cmp r1, r2",
            "beq 0x8014394",
            "mov r0, r6",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "mov r0, r4",
            "mov r1, fp",
            "bl si_core_disable",
            "b 0x80142ac",
            "movw r3, 0x4858",
            "add r1, r7, 8",
            "ldr r0, [r4, r3]",
            "add r2, sp, 0xc",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "ldr sb, [sp, 0xc]",
            "ubfx sb, sb, 0xc, 4",
            "cmp sb, 0",
            "moveq r6, sb",
            "beq 0x80142a4",
            "mov r5, 0",
            "mov r6, r5",
            "mov r2, r5",
            "add r5, r5, 1",
            "uxtb r5, r5",
            "mov r0, r4",
            "mov r1, r7",
            "mov r3, 2",
            "bl fcn.08010fcc",
            "cmp sb, r5",
            "add r6, r6, r0",
            "bhi 0x8014338",
            "cmp fp, 0",
            "bne 0x80142ac",
            "b 0x80142f4",
            "mov r0, r4",
            "mov r1, fp",
            "mov r2, fp",
            "bl si_core_reset",
            "mov r0, r4",
            "bl si_corerev",
            "cmp r0, 9",
            "movls r6, 0",
            "bls 0x80142a4",
            "b 0x8014304",
            "movw r2, 0x4864",
            "ldr r1, [sp, 4]",
            "ldr r0, [r4, r2]",
            "blx r3",
            "b 0x80142e8",
            "str r3, [sp, 4]",
            "movw r3, 0x4888",
            "ldr sl, [r0, r3]",
            "b 0x8014264",
            "movw r2, 0x4864",
            "ldr r0, [r0, r2]",
            "blx r3",
            "ldr sl, [r4, r5]",
            "str r0, [sp, 4]",
            "b 0x8014264"
        ]
    },
    "fcn.08010fcc": {
        "function_address": "0x08010fcc",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r4, r0",
            "sub sp, sp, 8",
            "mov r5, r1",
            "orr r6, r2, r3, lsl 8",
            "dsb st",
            "ldr r3, [0x0801102c]",
            "ldr r1, [r3, 0x18]",
            "cmp r1, 0",
            "beq 0x8010ff8",
            "blx r1",
            "movw r3, 0x4858",
            "str r6, [r5, 0x10]",
            "add r1, r5, 0x40",
            "ldr r0, [r4, r3]",
            "add r2, sp, 4",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "ldr r0, [sp, 4]",
            "and r0, r0, 0x7f",
            "add r0, r0, 1",
            "lsl r0, r0, 0xd",
            "add sp, sp, 8",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.dhd_prot_txdata_write_flush": {
        "function_address": "0x080357c8",
        "instructions": [
            "movw r2, 0x18dc",
            "push {r4, lr}",
            "ldr r3, [r0, r2]",
            "cmp r3, 0",
            "popeq {r4, pc}",
            "mov r2, 0x54",
            "mla r3, r2, r1, r3",
            "ldr r4, [r3, 0x4c]",
            "ldrh r3, [r4, 0x34]",
            "cmp r3, 0",
            "popeq {r4, pc}",
            "mov r1, r4",
            "ldr r2, [r4, 0x30]",
            "bl sym.dhd_prot_ring_write_complete",
            "mov r3, 0",
            "strh r3, [r4, 0x34]",
            "str r3, [r4, 0x30]",
            "pop {r4, pc}"
        ]
    },
    "sym.osl_ctfpool_add": {
        "function_address": "0x0800e6ec",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "subs r4, r0, 0",
            "moveq r5, r4",
            "beq 0x800e7b4",
            "ldr r0, [r4, 0x1c]",
            "cmp r0, 0",
            "moveq r5, r0",
            "beq 0x800e7b4",
            "add r0, r0, 0x28",
            "bl _raw_spin_lock_bh",
            "ldr r0, [r4, 0x1c]",
            "ldr r2, [r0, 0x38]",
            "ldr r3, [r0, 0x34]",
            "cmp r2, r3",
            "beq 0x800e7bc",
            "ldr r0, [r0, 0x3c]",
            "bl sym.osl_alloc_skb.isra.21",
            "subs r5, r0, 0",
            "ldr r3, [r4, 0x1c]",
            "beq 0x800e7cc",
            "ldr r3, [r3]",
            "str r3, [r5]",
            "ldr r3, [r4, 0x1c]",
            "str r5, [r3]",
            "ldr r2, [r4, 0x1c]",
            "ldr r3, [r5, 0x1c]",
            "ldr r2, [r2, 4]",
            "str r2, [r3]",
            "ldr r3, [r4, 0x1c]",
            "ldr r2, [r5, 0x1c]",
            "str r2, [r3, 4]",
            "ldr r3, [r4, 0x1c]",
            "ldr r2, [r3, 0xc]",
            "add r2, r2, 1",
            "str r2, [r3, 0xc]",
            "ldr r3, [r4, 0x1c]",
            "ldr r2, [r3, 8]",
            "add r2, r2, 1",
            "str r2, [r3, 8]",
            "ldr r3, [r4, 0x1c]",
            "ldr r2, [r3, 0x48]",
            "add r2, r2, 1",
            "str r2, [r3, 0x48]",
            "ldr r3, [r4, 0x1c]",
            "ldr r2, [r3, 0x38]",
            "add r2, r2, 1",
            "str r2, [r3, 0x38]",
            "ldr r0, [r4, 0x1c]",
            "add r0, r0, 0x28",
            "bl _raw_spin_unlock_bh",
            "mov r0, r5",
            "pop {r3, r4, r5, pc}",
            "add r0, r0, 0x28",
            "mov r5, 0",
            "bl _raw_spin_unlock_bh",
            "b 0x800e7b4",
            "ldr r1, [0x0800e7ec]",
            "ldr r2, [r3, 0x3c]",
            "ldr r0, [0x0800e7f0]",
            "bl printk",
            "ldr r0, [r4, 0x1c]",
            "add r0, r0, 0x28",
            "bl _raw_spin_unlock_bh",
            "b 0x800e7b4"
        ]
    },
    "sym.osl_alloc_skb.isra.21": {
        "function_address": "0x0800e494",
        "instructions": [
            "push {r3, lr}",
            "mov r2, sp",
            "bic r3, r2, 0x1fc0",
            "bic r3, r3, 0x3f",
            "ldr r3, [r3, 4]",
            "bics r2, r3, 0x40000000",
            "movne r1, 0x20",
            "bne 0x800e4c4",
            "mrs r3, apsr",
            "tst r3, 0x80",
            "movne r1, 0x20",
            "moveq r1, 0xd0",
            "add r0, r0, 0x20",
            "mov r2, 0",
            "mvn r3, 0",
            "bl __alloc_skb",
            "cmp r0, 0",
            "popeq {r3, pc}",
            "ldr r2, [r0, 0x28]",
            "ldr r3, [r0, 0x14]",
            "add r2, r2, 0x20",
            "add r3, r3, 0x20",
            "str r2, [r0, 0x28]",
            "str r3, [r0, 0x14]",
            "pop {r3, pc}"
        ]
    },
    "sym.ai_core_reset": {
        "function_address": "0x08007570",
        "instructions": [
            "movw r3, 0x4890",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "ldr sl, [r0, r3]",
            "sub sp, sp, 0x14",
            "mov r5, r0",
            "mov r8, r2",
            "str r1, [sp, 4]",
            "mov r4, 0x1f",
            "add r6, sl, 0x800",
            "movw r7, 0x4858",
            "mov fp, r6",
            "add r6, r6, 4",
            "b 0x8005f8c",
            "subs r4, r4, 1",
            "beq 0x8005fb4",
            "bl osl_delay",
            "ldr r0, [r5, r7]",
            "mov r3, 4",
            "mov r1, r6",
            "add r2, sp, 0xc",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 0xc]",
            "mov r0, 0xa",
            "cmp r3, 0",
            "str r3, [sp, 8]",
            "bne 0x8005f80",
            "dsb st",
            "ldr sb, [0x080061e4]",
            "ldr r3, [sb, 0x18]",
            "cmp r3, 0",
            "beq 0x8005fcc",
            "blx r3",
            "mov r3, 1",
            "mov r0, 0xa",
            "str r3, [sl, 0x800]",
            "mov r4, 0x1f",
            "bl osl_delay",
            "movw r7, 0x4858",
            "b 0x8005ff4",
            "subs r4, r4, 1",
            "beq 0x8006018",
            "bl osl_delay",
            "ldr r0, [r5, r7]",
            "mov r3, 4",
            "mov r1, r6",
            "add r2, sp, 0xc",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 0xc]",
            "mov r0, 0xa",
            "cmp r3, 0",
            "bne 0x8005fe8",
            "dsb st",
            "ldr r3, [sb, 0x18]",
            "cmp r3, 0",
            "beq 0x800602c",
            "blx r3",
            "ldr r2, [sp, 4]",
            "movw r7, 0x4858",
            "mov r4, 0x1f",
            "orr r3, r2, 3",
            "add r2, sl, 0x400",
            "add r2, r2, 8",
            "orr r8, r3, r8",
            "str r2, [sp]",
            "mov r1, r2",
            "str r8, [sl, 0x408]",
            "mov r3, 4",
            "ldr r0, [r5, r7]",
            "add r2, sp, 0xc",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 0xc]",
            "str r3, [sp, 8]",
            "ldr r3, [sp, 8]",
            "b 0x8006080",
            "subs r4, r4, 1",
            "beq 0x80061dc",
            "bl osl_delay",
            "ldr r0, [r5, r7]",
            "mov r3, 4",
            "mov r1, r6",
            "add r2, sp, 0xc",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 0xc]",
            "mov r0, 0xa",
            "cmp r3, 0",
            "str r3, [sp, 8]",
            "bne 0x8006074",
            "mov r8, 0xa",
            "movw r7, 0x4858",
            "mov r3, 4",
            "ldr r0, [r5, r7]",
            "mov r1, fp",
            "add r2, sp, 0xc",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 0xc]",
            "cmp r3, 0",
            "beq 0x8006188",
            "subs r8, r8, 1",
            "beq 0x8006188",
            "mov r4, 0x1f",
            "b 0x80060ec",
            "subs r4, r4, 1",
            "beq 0x8006114",
            "bl osl_delay",
            "ldr r0, [r5, r7]",
            "mov r3, 4",
            "mov r1, r6",
            "add r2, sp, 0xc",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 0xc]",
            "mov r0, 0xa",
            "cmp r3, 0",
            "str r3, [sp, 8]",
            "bne 0x80060e0",
            "dsb st",
            "ldr r3, [sb, 0x18]",
            "cmp r3, 0",
            "beq 0x8006128",
            "blx r3",
            "mov r3, 0",
            "mov r4, 0x1f",
            "str r3, [sl, 0x800]",
            "b 0x8006144",
            "subs r4, r4, 1",
            "beq 0x80060b0",
            "bl osl_delay",
            "ldr r0, [r5, r7]",
            "mov r3, 4",
            "mov r1, r6",
            "add r2, sp, 0xc",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 0xc]",
            "mov r0, 0xa",
            "cmp r3, 0",
            "bne 0x8006138",
            "mov r3, 4",
            "ldr r0, [r5, r7]",
            "mov r1, fp",
            "add r2, sp, 0xc",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 0xc]",
            "cmp r3, 0",
            "bne 0x80060d0",
            "dsb st",
            "ldr r3, [sb, 0x18]",
            "cmp r3, 0",
            "beq 0x800619c",
            "blx r3",
            "ldr r2, [sp, 4]",
            "ldr r1, [sp]",
            "orr r3, r2, 1",
            "add r2, sp, 0xc",
            "str r3, [sl, 0x408]",
            "movw r3, 0x4858",
            "ldr r0, [r5, r3]",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 0xc]",
            "mov r0, 1",
            "str r3, [sp, 8]",
            "ldr r3, [sp, 8]",
            "bl osl_delay",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "mov r8, r0",
            "b 0x80060ac",
            "push {r3, r4, r5, r6, r7, lr}",
            "movw r3, 0x4888",
            "ldr r5, [r0, r3]",
            "add r3, r3, 0x10",
            "mov r6, r2",
            "mov r4, r0",
            "ldr r3, [r0, r3]",
            "mov r7, r1",
            "add r2, r5, 0x140",
            "ldr r3, [r3, r2, lsl 2]",
            "cmp r3, 0",
            "beq 0x80075c4",
            "mov r1, r5",
            "bl ai_setcoreidx_2ndwrap",
            "mov r0, r4",
            "mov r1, r7",
            "mov r2, r6",
            "bl 0x8005f4c",
            "mov r0, r4",
            "mov r1, r5",
            "bl ai_setcoreidx",
            "mov r0, r4",
            "mov r1, r7",
            "mov r2, r6",
            "pop {r3, r4, r5, r6, r7, lr}",
            "b 0x8005f4c"
        ]
    },
    "unk.0x8005f4c": {
        "function_address": "0x08005f4c",
        "instructions": [
            "movw r3, 0x4890",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "ldr sl, [r0, r3]",
            "sub sp, sp, 0x14",
            "mov r5, r0",
            "mov r8, r2",
            "str r1, [sp, 4]",
            "mov r4, 0x1f",
            "add r6, sl, 0x800",
            "movw r7, 0x4858",
            "mov fp, r6",
            "add r6, r6, 4",
            "b 0x8005f8c",
            "subs r4, r4, 1",
            "beq 0x8005fb4",
            "bl osl_delay",
            "ldr r0, [r5, r7]",
            "mov r3, 4",
            "mov r1, r6",
            "add r2, sp, 0xc",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 0xc]",
            "mov r0, 0xa",
            "cmp r3, 0",
            "str r3, [sp, 8]",
            "bne 0x8005f80",
            "dsb st",
            "ldr sb, [0x080061e4]",
            "ldr r3, [sb, 0x18]",
            "cmp r3, 0",
            "beq 0x8005fcc",
            "blx r3",
            "mov r3, 1",
            "mov r0, 0xa",
            "str r3, [sl, 0x800]",
            "mov r4, 0x1f",
            "bl osl_delay",
            "movw r7, 0x4858",
            "b 0x8005ff4",
            "subs r4, r4, 1",
            "beq 0x8006018",
            "bl osl_delay",
            "ldr r0, [r5, r7]",
            "mov r3, 4",
            "mov r1, r6",
            "add r2, sp, 0xc",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 0xc]",
            "mov r0, 0xa",
            "cmp r3, 0",
            "bne 0x8005fe8",
            "dsb st",
            "ldr r3, [sb, 0x18]",
            "cmp r3, 0",
            "beq 0x800602c",
            "blx r3",
            "ldr r2, [sp, 4]",
            "movw r7, 0x4858",
            "mov r4, 0x1f",
            "orr r3, r2, 3",
            "add r2, sl, 0x400",
            "add r2, r2, 8",
            "orr r8, r3, r8",
            "str r2, [sp]",
            "mov r1, r2",
            "str r8, [sl, 0x408]",
            "mov r3, 4",
            "ldr r0, [r5, r7]",
            "add r2, sp, 0xc",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 0xc]",
            "str r3, [sp, 8]",
            "ldr r3, [sp, 8]",
            "b 0x8006080",
            "subs r4, r4, 1",
            "beq 0x80061dc",
            "bl osl_delay",
            "ldr r0, [r5, r7]",
            "mov r3, 4",
            "mov r1, r6",
            "add r2, sp, 0xc",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 0xc]",
            "mov r0, 0xa",
            "cmp r3, 0",
            "str r3, [sp, 8]",
            "bne 0x8006074",
            "mov r8, 0xa",
            "movw r7, 0x4858",
            "mov r3, 4",
            "ldr r0, [r5, r7]",
            "mov r1, fp",
            "add r2, sp, 0xc",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 0xc]",
            "cmp r3, 0",
            "beq 0x8006188",
            "subs r8, r8, 1",
            "beq 0x8006188",
            "mov r4, 0x1f",
            "b 0x80060ec",
            "subs r4, r4, 1",
            "beq 0x8006114",
            "bl osl_delay",
            "ldr r0, [r5, r7]",
            "mov r3, 4",
            "mov r1, r6",
            "add r2, sp, 0xc",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 0xc]",
            "mov r0, 0xa",
            "cmp r3, 0",
            "str r3, [sp, 8]",
            "bne 0x80060e0",
            "dsb st",
            "ldr r3, [sb, 0x18]",
            "cmp r3, 0",
            "beq 0x8006128",
            "blx r3",
            "mov r3, 0",
            "mov r4, 0x1f",
            "str r3, [sl, 0x800]",
            "b 0x8006144",
            "subs r4, r4, 1",
            "beq 0x80060b0",
            "bl osl_delay",
            "ldr r0, [r5, r7]",
            "mov r3, 4",
            "mov r1, r6",
            "add r2, sp, 0xc",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 0xc]",
            "mov r0, 0xa",
            "cmp r3, 0",
            "bne 0x8006138",
            "mov r3, 4",
            "ldr r0, [r5, r7]",
            "mov r1, fp",
            "add r2, sp, 0xc",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 0xc]",
            "cmp r3, 0",
            "bne 0x80060d0",
            "dsb st",
            "ldr r3, [sb, 0x18]",
            "cmp r3, 0",
            "beq 0x800619c",
            "blx r3",
            "ldr r2, [sp, 4]",
            "ldr r1, [sp]",
            "orr r3, r2, 1",
            "add r2, sp, 0xc",
            "str r3, [sl, 0x408]",
            "movw r3, 0x4858",
            "ldr r0, [r5, r3]",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 0xc]",
            "mov r0, 1",
            "str r3, [sp, 8]",
            "ldr r3, [sp, 8]",
            "bl osl_delay",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "mov r8, r0",
            "b 0x80060ac",
            "push {r3, r4, r5, r6, r7, lr}",
            "movw r3, 0x4888",
            "ldr r5, [r0, r3]",
            "add r3, r3, 0x10",
            "mov r6, r2",
            "mov r4, r0",
            "ldr r3, [r0, r3]",
            "mov r7, r1",
            "add r2, r5, 0x140",
            "ldr r3, [r3, r2, lsl 2]",
            "cmp r3, 0",
            "beq 0x80075c4",
            "mov r1, r5",
            "bl ai_setcoreidx_2ndwrap",
            "mov r0, r4",
            "mov r1, r7",
            "mov r2, r6",
            "bl 0x8005f4c",
            "mov r0, r4",
            "mov r1, r5",
            "bl ai_setcoreidx",
            "mov r0, r4",
            "mov r1, r7",
            "mov r2, r6",
            "pop {r3, r4, r5, r6, r7, lr}",
            "b 0x8005f4c"
        ]
    },
    "sym.bcm_psta_dhcp_proc": {
        "function_address": "0x080161e4",
        "instructions": [
            "cmp r0, 0x44",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x1c",
            "mov r4, r2",
            "mov r5, r1",
            "ldr r6, [sp, 0x40]",
            "ldr r7, [sp, 0x44]",
            "ldrb r2, [sp, 0x48]",
            "beq 0x8016420",
            "bls 0x8016318",
            "movw r1, 0x222",
            "cmp r0, r1",
            "beq 0x801632c",
            "add r1, r1, 1",
            "cmp r0, r1",
            "bne 0x8016320",
            "cmp r2, 0",
            "beq 0x8016320",
            "ldrb r8, [r4]",
            "cmp r8, 0xc",
            "movne r8, 4",
            "moveq r8, 0x22",
            "cmp r3, r8",
            "bls 0x8016320",
            "ldrh r2, [r4, r8]",
            "cmp r2, 0x100",
            "movne r2, r8",
            "beq 0x8016290",
            "add r1, r4, r8",
            "ldrh r1, [r1, 2]",
            "lsr r0, r1, 8",
            "orr r1, r0, r1, lsl 8",
            "add r1, r1, 4",
            "uxth r1, r1",
            "add r2, r1, r2",
            "add r8, r1, r8",
            "uxth r2, r2",
            "uxth r8, r8",
            "cmp r3, r2",
            "bls 0x8016320",
            "ldrh r1, [r4, r8]",
            "cmp r1, 0x100",
            "bne 0x8016254",
            "add r3, r4, r8",
            "ldrh r3, [r3, 4]",
            "cmp r3, 0x100",
            "addeq r8, r8, 0xc",
            "beq 0x80162b0",
            "cmp r3, 0x300",
            "bne 0x8016320",
            "add r8, r8, 8",
            "add sl, r4, r8",
            "mov r2, 6",
            "mov r1, sl",
            "add r0, sp, 0x12",
            "bl memcpy",
            "ldrh r3, [sp, 0x14]",
            "ldrh r0, [r6, 2]",
            "ldrh r2, [r6]",
            "ldrh ip, [sp, 0x12]",
            "eor r0, r0, r3",
            "ldrh r1, [r6, 4]",
            "ldrh r3, [sp, 0x16]",
            "eor r2, r2, ip",
            "orr r2, r0, r2",
            "eor r3, r1, r3",
            "orrs r3, r2, r3",
            "bne 0x8016320",
            "ldrb r3, [r7]",
            "add r0, r5, 6",
            "mov r1, sl",
            "add r2, sp, 0x12",
            "strb r3, [sp, 0x12]",
            "bl fcn.08015e2c",
            "ldrb r3, [r7]",
            "strb r3, [r4, r8]",
            "b 0x8016320",
            "cmp r0, 0x43",
            "beq 0x8016538",
            "mov r0, 0",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "cmp r2, 0",
            "bne 0x8016320",
            "ldrb r8, [r4]",
            "cmp r8, 0xc",
            "movne r8, 4",
            "moveq r8, 0x22",
            "cmp r3, r8",
            "bls 0x8016320",
            "ldrh r2, [r4, r8]",
            "cmp r2, 0x100",
            "movne r2, r8",
            "beq 0x8016398",
            "add r1, r4, r8",
            "ldrh r1, [r1, 2]",
            "lsr r0, r1, 8",
            "orr r1, r0, r1, lsl 8",
            "add r1, r1, 4",
            "uxth r1, r1",
            "add r2, r1, r2",
            "add r8, r1, r8",
            "uxth r2, r2",
            "uxth r8, r8",
            "cmp r3, r2",
            "bls 0x8016320",
            "ldrh r1, [r4, r8]",
            "cmp r1, 0x100",
            "bne 0x801635c",
            "add r3, r4, r8",
            "ldrh r3, [r3, 4]",
            "cmp r3, 0x100",
            "addeq r8, r8, 0xc",
            "beq 0x80163b8",
            "cmp r3, 0x300",
            "bne 0x8016320",
            "add r8, r8, 8",
            "add sl, r4, r8",
            "mov r2, 6",
            "mov r1, sl",
            "add r0, sp, 0xc",
            "bl memcpy",
            "ldrh r3, [sp, 0xe]",
            "ldrh r0, [r7, 2]",
            "ldrh r2, [r7]",
            "ldrh ip, [sp, 0xc]",
            "eor r0, r0, r3",
            "ldrh r1, [r7, 4]",
            "ldrh r3, [sp, 0x10]",
            "eor r2, r2, ip",
            "orr r2, r0, r2",
            "eor r3, r1, r3",
            "orrs r3, r2, r3",
            "bne 0x8016320",
            "ldrb r3, [r6]",
            "add r0, r5, 6",
            "mov r1, sl",
            "add r2, sp, 0xc",
            "strb r3, [sp, 0xc]",
            "bl fcn.08015e2c",
            "ldrb r3, [r6]",
            "strb r3, [r4, r8]",
            "b 0x8016320",
            "cmp r2, 0",
            "bne 0x8016320",
            "ldrb r2, [r4]",
            "cmp r2, 2",
            "bne 0x8016320",
            "add r8, sp, 0x12",
            "add sl, r4, 0x1c",
            "mov r1, sl",
            "mov r2, 6",
            "mov r0, r8",
            "str r3, [sp]",
            "bl memcpy",
            "ldrh r2, [r8, 2]",
            "ldrh ip, [r7, 2]",
            "ldrh r1, [r7]",
            "ldrh lr, [sp, 0x12]",
            "eor ip, ip, r2",
            "ldrh r0, [r7, 4]",
            "ldrh r2, [r8, 4]",
            "eor r1, r1, lr",
            "ldr r3, [sp]",
            "orr r1, ip, r1",
            "eor r2, r0, r2",
            "orrs r2, r1, r2",
            "beq 0x8016650",
            "mov r0, r4",
            "mov r1, r3",
            "bl fcn.08015ec0",
            "cmn r0, 1",
            "mov sb, r0",
            "beq 0x8016320",
            "add r3, r4, r0",
            "ldrb r3, [r3, 2]",
            "cmp r3, 1",
            "bne 0x8016320",
            "add fp, r0, 3",
            "mov r2, 6",
            "add r3, r4, fp",
            "mov r0, r8",
            "mov r1, r3",
            "str r3, [sp, 4]",
            "bl memcpy",
            "ldrh ip, [r7, 2]",
            "ldrh r1, [r7]",
            "ldrh r0, [r8, 2]",
            "ldrh r2, [sp, 0x12]",
            "ldrh r3, [r7, 4]",
            "ldrh r7, [r8, 4]",
            "eor r0, ip, r0",
            "eor r2, r1, r2",
            "orr r2, r0, r2",
            "eor r3, r3, r7",
            "orrs r3, r2, r3",
            "bne 0x8016320",
            "ldrb r3, [r6]",
            "tst fp, 1",
            "strb r3, [sp, 0x12]",
            "bne 0x80166a0",
            "add sl, sp, 0xc",
            "mov r1, r8",
            "mov r0, sl",
            "mov r2, 6",
            "bl memcpy",
            "ldr r1, [sp, 4]",
            "add r0, r5, 6",
            "mov r2, sl",
            "bl fcn.08015e2c",
            "ldrb r3, [r6]",
            "strb r3, [r4, fp]",
            "b 0x8016320",
            "cmp r2, 0",
            "beq 0x8016320",
            "ldrb r2, [r4]",
            "cmp r2, 1",
            "bne 0x8016320",
            "add sl, sp, 0xc",
            "add r8, r4, 0x1c",
            "mov r1, r8",
            "mov r2, 6",
            "mov r0, sl",
            "str r3, [sp]",
            "bl memcpy",
            "ldrh r2, [sl, 2]",
            "ldrh ip, [r6, 2]",
            "ldrh r1, [r6]",
            "ldrh lr, [sp, 0xc]",
            "eor ip, ip, r2",
            "ldrh r0, [r6, 4]",
            "ldrh r2, [sl, 4]",
            "eor r1, r1, lr",
            "ldr r3, [sp]",
            "orr r1, ip, r1",
            "eor r2, r0, r2",
            "orrs r2, r1, r2",
            "beq 0x8016678",
            "mov r0, r4",
            "mov r1, r3",
            "bl fcn.08015ec0",
            "cmn r0, 1",
            "mov sb, r0",
            "beq 0x8016320",
            "add r3, r4, r0",
            "ldrb r3, [r3, 2]",
            "cmp r3, 1",
            "bne 0x8016320",
            "add fp, r0, 3",
            "mov r2, 6",
            "add r3, r4, fp",
            "mov r0, sl",
            "mov r1, r3",
            "str r3, [sp, 4]",
            "bl memcpy",
            "ldrh ip, [r6, 2]",
            "ldrh r1, [r6]",
            "ldrh r0, [sl, 2]",
            "ldrh r2, [sp, 0xc]",
            "ldrh r3, [r6, 4]",
            "ldrh r6, [sl, 4]",
            "eor r0, ip, r0",
            "eor r2, r1, r2",
            "orr r2, r0, r2",
            "eor r3, r3, r6",
            "orrs r3, r2, r3",
            "bne 0x8016320",
            "ldrb r3, [r7]",
            "tst fp, 1",
            "strb r3, [sp, 0xc]",
            "bne 0x80166cc",
            "add r8, sp, 0x12",
            "mov r1, sl",
            "mov r0, r8",
            "mov r2, 6",
            "bl memcpy",
            "ldr r1, [sp, 4]",
            "add r0, r5, 6",
            "mov r2, r8",
            "bl fcn.08015e2c",
            "ldrb r3, [r7]",
            "strb r3, [r4, fp]",
            "b 0x8016320",
            "ldrb ip, [r6]",
            "mov r2, r8",
            "add r0, r5, 6",
            "mov r1, sl",
            "strb ip, [sp, 0x12]",
            "bl fcn.08015e2c",
            "ldrb r2, [r6]",
            "strb r2, [r4, 0x1c]",
            "ldr r3, [sp]",
            "b 0x8016484",
            "ldrb ip, [r7]",
            "mov r2, sl",
            "add r0, r5, 6",
            "mov r1, r8",
            "strb ip, [sp, 0xc]",
            "bl fcn.08015e2c",
            "ldrb r2, [r7]",
            "strb r2, [r4, 0x1c]",
            "ldr r3, [sp]",
            "b 0x801659c",
            "ldr r2, [sp, 4]",
            "mov r1, r8",
            "add r0, sp, 0xd",
            "add sl, sp, 0xc",
            "ldrb r3, [r2, -1]",
            "mov r2, 5",
            "strb r3, [sp, 0xc]",
            "bl memcpy",
            "add r1, sb, 2",
            "add r1, r4, r1",
            "b 0x8016520",
            "ldr r2, [sp, 4]",
            "mov r1, sl",
            "add r0, sp, 0x13",
            "add r8, sp, 0x12",
            "ldrb r3, [r2, -1]",
            "mov r2, 5",
            "strb r3, [sp, 0x12]",
            "bl memcpy",
            "add r1, sb, 2",
            "add r1, r4, r1",
            "b 0x8016638"
        ]
    },
    "fcn.08015e2c": {
        "function_address": "0x08015e2c",
        "instructions": [
            "ldrb r3, [r0]",
            "ldrb ip, [r0, 1]",
            "push {r4, r5}",
            "adds r3, ip, r3, lsl 8",
            "beq 0x8015eb8",
            "mvn r3, r3",
            "add r5, r1, 6",
            "uxth r3, r3",
            "ldrb r4, [r1]",
            "ldrb ip, [r1, 1]",
            "add r1, r1, 2",
            "add ip, ip, r4, lsl 8",
            "uxth ip, ip",
            "rsb r3, ip, r3",
            "cmp r3, 0",
            "suble r3, r3, 1",
            "uxthle r3, r3",
            "cmp r1, r5",
            "bne 0x8015e4c",
            "add r4, r2, 6",
            "ldrb ip, [r2]",
            "ldrb r1, [r2, 1]",
            "add r2, r2, 2",
            "add r1, r1, ip, lsl 8",
            "uxtah r3, r3, r1",
            "tst r3, 0x10000",
            "add r1, r3, 1",
            "uxthne r3, r1",
            "cmp r2, r4",
            "bne 0x8015e7c",
            "mvn r3, r3",
            "uxth r3, r3",
            "asr r2, r3, 8",
            "strb r3, [r0, 1]",
            "strb r2, [r0]",
            "pop {r4, r5}",
            "bx lr"
        ]
    },
    "fcn.08015ec0": {
        "function_address": "0x08015ec0",
        "instructions": [
            "cmp r1, 0xec",
            "bls 0x8015f54",
            "ldrb r3, [r0, 0xec]",
            "cmp r3, 0x63",
            "bne 0x8015f54",
            "ldrb r3, [r0, 0xed]",
            "cmp r3, 0x82",
            "bne 0x8015f54",
            "ldrb r3, [r0, 0xee]",
            "cmp r3, 0x53",
            "bne 0x8015f54",
            "ldrb r3, [r0, 0xef]",
            "cmp r3, 0x63",
            "bne 0x8015f64",
            "cmp r1, 0xf0",
            "bls 0x8015f54",
            "ldrb r3, [r0, 0xf0]",
            "cmp r3, 0xff",
            "beq 0x8015f54",
            "cmp r3, 0x3d",
            "movne ip, 0xf0",
            "movne r3, ip",
            "bne 0x8015f34",
            "b 0x8015f6c",
            "ldrb r2, [r0, r3]",
            "cmp r2, 0xff",
            "beq 0x8015f54",
            "cmp r2, 0x3d",
            "beq 0x8015f5c",
            "add ip, r0, ip",
            "ldrb r2, [ip, 1]",
            "add r2, r2, 2",
            "add r3, r3, r2",
            "uxth r3, r3",
            "cmp r1, r3",
            "mov ip, r3",
            "bhi 0x8015f20",
            "mvn r0, 0",
            "bx lr",
            "mov r0, r3",
            "bx lr",
            "mvn r0, 0",
            "bx lr",
            "mov r0, 0xf0",
            "bx lr"
        ]
    },
    "sym.si_socram_srmem_size": {
        "function_address": "0x08014a64",
        "instructions": [
            "movw r2, 0x4898",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "ldr r2, [r0, r2]",
            "sub sp, sp, 0x24",
            "mov r4, r0",
            "ldr r3, [r0, 0x3c]",
            "str r2, [sp, 8]",
            "movw r2, 0x4334",
            "cmp r3, r2",
            "beq 0x8014aa8",
            "movw r2, 0xa9a6",
            "cmp r3, r2",
            "moveq r7, 0x10000",
            "bne 0x8014ab4",
            "mov r0, r7",
            "add sp, sp, 0x24",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r3, [r0, 0x40]",
            "cmp r3, 1",
            "bls 0x8014c60",
            "movw r3, 0x4868",
            "ldr r3, [r4, r3]",
            "cmp r3, 0",
            "beq 0x8014c8c",
            "movw r5, 0x4888",
            "movw r2, 0x4860",
            "ldr r0, [r4, r5]",
            "ldr r2, [r4, r2]",
            "add r1, r0, 0x20",
            "str r0, [sp, 0xc]",
            "ldr r0, [sp, 8]",
            "ldr r1, [r0, r1, lsl 2]",
            "cmp r1, r2",
            "movne r2, 0",
            "strne r2, [sp, 0x14]",
            "beq 0x8014ca0",
            "mov r0, r4",
            "movw r1, 0x80e",
            "mov r2, 0",
            "bl si_setcore",
            "subs r6, r0, 0",
            "moveq r7, r6",
            "beq 0x8014c18",
            "mov r0, r4",
            "bl si_iscoreup",
            "cmp r0, 0",
            "str r0, [sp, 0x10]",
            "beq 0x8014c78",
            "mov r0, r4",
            "movw fp, 0x4858",
            "bl si_corerev",
            "mov r1, r6",
            "mov r5, r0",
            "add r2, sp, 0x1c",
            "ldr r0, [r4, fp]",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "cmp r5, 0xf",
            "ldr r8, [sp, 0x1c]",
            "movls r7, 0",
            "bls 0x8014c00",
            "ubfx r8, r8, 4, 4",
            "cmp r8, 0",
            "moveq r7, r8",
            "beq 0x8014c00",
            "mov r2, 0",
            "ldr sl, [0x08014cbc]",
            "mov r5, r2",
            "mov r7, r2",
            "add sb, r6, 0x40",
            "b 0x8014b94",
            "add r5, r5, 1",
            "uxtb r5, r5",
            "cmp r8, r5",
            "mov r2, r5",
            "bls 0x8014c00",
            "dsb st",
            "ldr r3, [sl, 0x18]",
            "cmp r3, 0",
            "beq 0x8014bb0",
            "str r2, [sp, 4]",
            "blx r3",
            "ldr r2, [sp, 4]",
            "str r2, [r6, 0x10]",
            "mov r3, 4",
            "mov r1, sb",
            "ldr r0, [r4, fp]",
            "add r2, sp, 0x1c",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 0x1c]",
            "tst r3, 0x10000",
            "beq 0x8014b80",
            "mov r2, r5",
            "add r5, r5, 1",
            "uxtb r5, r5",
            "mov r0, r4",
            "mov r1, r6",
            "mov r3, 0",
            "bl fcn.08010fcc",
            "cmp r8, r5",
            "add r7, r7, r0",
            "mov r2, r5",
            "bhi 0x8014b94",
            "ldr r3, [sp, 0x10]",
            "cmp r3, 0",
            "beq 0x8014c68",
            "mov r0, r4",
            "ldr r1, [sp, 0xc]",
            "bl si_setcoreidx",
            "movw r3, 0x486c",
            "ldr r3, [r4, r3]",
            "cmp r3, 0",
            "beq 0x8014a9c",
            "movw r2, 0x4888",
            "ldr r0, [sp, 8]",
            "ldr r1, [r4, r2]",
            "movw r2, 0x4860",
            "ldr r2, [r4, r2]",
            "add r1, r1, 0x20",
            "ldr r1, [r0, r1, lsl 2]",
            "cmp r1, r2",
            "bne 0x8014a9c",
            "movw r2, 0x4864",
            "ldr r1, [sp, 0x14]",
            "ldr r0, [r4, r2]",
            "blx r3",
            "b 0x8014a9c",
            "mov r7, 0x8000",
            "b 0x8014a9c",
            "mov r0, r4",
            "mov r1, r3",
            "bl si_core_disable",
            "b 0x8014c0c",
            "ldr r1, [sp, 0x10]",
            "mov r0, r4",
            "mov r2, r1",
            "bl si_core_reset",
            "b 0x8014b24",
            "str r3, [sp, 0x14]",
            "movw r3, 0x4888",
            "ldr r3, [r4, r3]",
            "str r3, [sp, 0xc]",
            "b 0x8014af4",
            "movw r2, 0x4864",
            "ldr r0, [r4, r2]",
            "blx r3",
            "ldr r5, [r4, r5]",
            "str r0, [sp, 0x14]",
            "str r5, [sp, 0xc]",
            "b 0x8014af4"
        ]
    },
    "sym.dhd_prot_process_ctrlbuf": {
        "function_address": "0x08035150",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r4, r0",
            "ldr r3, [r0, 0x2ac]",
            "sub sp, sp, 0x10",
            "ldr r8, [r0, 8]",
            "cmp r3, 0",
            "add r5, r8, 0xb8",
            "bne 0x80351d8",
            "ldr r7, [0x08035204]",
            "add r8, r8, 0xee",
            "b 0x80351c0",
            "bl 0x803517c",
            "mov r0, r4",
            "mov r1, r5",
            "mov r2, r6",
            "ldr r3, [sp, 0xc]",
            "bl fcn.080342f8",
            "cmp r0, 0",
            "beq 0x80351a8",
            "ldr r3, [r7]",
            "tst r3, 1",
            "bne 0x80351e4",
            "mov r0, r4",
            "mov r1, r5",
            "bl 0x80351b0",
            "ldr r3, [r4, 0x2ac]",
            "cmp r3, 0",
            "bne 0x80351d8",
            "mov r1, r5",
            "add r2, sp, 0xc",
            "mov r0, r4",
            "bl 0x80351cc",
            "subs r6, r0, 0",
            "bne 0x803517c",
            "mov r0, 0",
            "add sp, sp, 0x10",
            "pop {r4, r5, r6, r7, r8, pc}",
            "ldr ip, [sp, 0xc]",
            "mov r2, r8",
            "ldr r1, [0x08035208]",
            "mov r3, r6",
            "ldr r0, [0x0803520c]",
            "str ip, [sp]",
            "bl 0x80351fc",
            "b 0x80351a8"
        ]
    },
    "sym.dhd_bus_iovar_op": {
        "function_address": "0x0802e644",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r6, r3",
            "ldr r7, [0x0802e730]",
            "sub sp, sp, 0x1c",
            "mov r5, r1",
            "mov r4, r2",
            "ldr fp, [sp, 0x40]",
            "ldr r3, [r7]",
            "ldr sb, [sp, 0x44]",
            "ldrb r8, [sp, 0x48]",
            "tst r3, 2",
            "ldr sl, [r0, 4]",
            "bne 0x802e71c",
            "tst r3, 4",
            "bne case.0x8016d58.23",
            "mov r1, r5",
            "ldr r0, [0x0802e734]",
            "bl bcm_iovar_lookup",
            "subs r1, r0, 0",
            "mvneq r0, 0x16",
            "beq 0x802e6d8",
            "ldrh ip, [r1, 8]",
            "cmp r4, 0",
            "moveq r6, sb",
            "moveq r4, fp",
            "cmp ip, 0",
            "bne 0x802e6e0",
            "ldrh r2, [r1, 4]",
            "cmp r8, 0",
            "mov r0, sl",
            "mov r3, r5",
            "stm sp, {r4, r6, fp}",
            "str sb, [sp, 0xc]",
            "lsl r2, r2, 1",
            "str ip, [sp, 0x10]",
            "addne r2, r2, 1",
            "bl fcn.0802d3a4",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "cmp ip, 8",
            "moveq ip, sb",
            "movne ip, 4",
            "b 0x802e6b0",
            "ldr ip, [0x0802e738]",
            "cmp r8, 0",
            "ldr r3, [0x0802e73c]",
            "mov r2, r5",
            "ldr r1, [0x0802e740]",
            "moveq r3, ip",
            "ldr r0, [0x0802e744]",
            "str sb, [sp]",
            "str r6, [sp, 4]",
            "bl printk",
            "b 0x802e680",
            "ldr r0, [0x0802e748]",
            "ldr r1, [0x0802e740]",
            "bl printk",
            "ldr r3, [r7]",
            "b 0x802e678"
        ]
    },
    "fcn.0802d3a4": {
        "function_address": "0x0802d3a4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r5, r1",
            "ldr r6, [0x0802e378]",
            "sub sp, sp, 0x6c",
            "mov ip, 0",
            "mov r7, r0",
            "mov r4, r2",
            "ldr fp, [sp, 0x94]",
            "ldr r1, [r6]",
            "ldr sl, [sp, 0x98]",
            "ldr sb, [sp, 0x9c]",
            "tst r1, 2",
            "str ip, [sp, 0x54]",
            "str ip, [sp, 0x58]",
            "str ip, [sp, 0x5c]",
            "strb ip, [sp, 0x65]",
            "bne 0x802e4c8",
            "ldr ip, [sp, 0x90]",
            "ldr r1, [0x0802e424]",
            "ldr r0, [0x0802e400]",
            "str ip, [sp]",
            "ldr ip, [sp, 0xa0]",
            "str fp, [sp, 4]",
            "str sl, [sp, 8]",
            "str sb, [sp, 0xc]",
            "str ip, [sp, 0x10]"
        ]
    },
    "sym.sb_corerev": {
        "function_address": "0x0800fe60",
        "instructions": [
            "push {r3, lr}",
            "movw r3, 0x4884",
            "ldr r1, [r0, r3]",
            "add r1, r1, 0xff0",
            "add r1, r1, 0xc",
            "bl fcn.0800f9b4",
            "and r3, r0, 0x7000",
            "and r0, r0, 0xf",
            "orr r0, r0, r3, lsr 8",
            "pop {r3, pc}"
        ]
    },
    "sym.bcm_psta_icmp6_proc": {
        "function_address": "0x080166f8",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r4, r1",
            "ldrb r3, [r4]",
            "sub sp, sp, 0x18",
            "mov r1, r0",
            "ldr r5, [sp, 0x28]",
            "cmp r3, 0x85",
            "beq 0x80167bc",
            "cmp r3, 0x86",
            "beq 0x80167d0",
            "cmp r3, 0x87",
            "beq 0x80167fc",
            "cmp r3, 0x88",
            "beq 0x801685c",
            "cmp r3, 0x89",
            "beq 0x8016848",
            "mov r6, 0",
            "ldrb r3, [sp, 0x2c]",
            "cmp r3, 0",
            "beq 0x80167b0",
            "cmp r6, 0",
            "beq 0x80167b0",
            "mov r1, r6",
            "mov r2, 6",
            "add r0, sp, 0x12",
            "bl memcpy",
            "ldrb r2, [r5]",
            "ldrh r3, [sp, 0x14]",
            "ldrh r0, [r5, 2]",
            "strb r2, [sp, 0x12]",
            "ldrh r2, [r5]",
            "ldrh ip, [sp, 0x12]",
            "eor r0, r0, r3",
            "ldrh r1, [r5, 4]",
            "ldrh r3, [sp, 0x16]",
            "eor r2, r2, ip",
            "orr r2, r0, r2",
            "eor r3, r1, r3",
            "orrs r3, r2, r3",
            "bne 0x80167b0",
            "add r0, r4, 2",
            "mov r1, r6",
            "add r2, sp, 0x12",
            "bl fcn.08015e2c",
            "ldrb r3, [r5]",
            "strb r3, [r6]",
            "mov r0, 0",
            "add sp, sp, 0x18",
            "pop {r4, r5, r6, pc}",
            "ldrb r3, [r4, 8]",
            "cmp r3, 1",
            "addeq r6, r4, 0xa",
            "bne 0x8016738",
            "b 0x801673c",
            "ldrb r3, [r4, 0x10]",
            "cmp r3, 3",
            "ldrbeq r6, [r4, 0x11]",
            "addne r6, r4, 0x10",
            "addeq r6, r6, 2",
            "ldrbeq r3, [r4, r6, lsl 3]",
            "addeq r6, r4, r6, lsl 3",
            "cmp r3, 1",
            "addeq r6, r6, 2",
            "bne 0x8016738",
            "b 0x801673c",
            "mov r6, 0",
            "add r0, sp, 2",
            "add r1, r1, 8",
            "mov r2, 0x10",
            "strh r6, [sp, 2]",
            "strh r6, [sp, 4]",
            "strh r6, [sp, 6]",
            "strh r6, [sp, 8]",
            "strh r6, [sp, 0xa]",
            "strh r6, [sp, 0xc]",
            "strh r6, [sp, 0xe]",
            "strh r6, [sp, 0x10]",
            "bl memcmp",
            "cmp r0, r6",
            "beq 0x80167b0",
            "ldrb r3, [r4, 0x18]",
            "cmp r3, 1",
            "addeq r6, r4, 0x1a",
            "b 0x801673c",
            "ldrb r3, [r4, 0x28]",
            "cmp r3, 2",
            "addeq r6, r4, 0x2a",
            "bne 0x8016738",
            "b 0x801673c",
            "cmp r2, 0x18",
            "beq 0x80167b0",
            "ldrb r3, [r4, 0x18]",
            "cmp r3, 2",
            "bne 0x8016738",
            "add r6, r4, 0x1a",
            "b 0x801673c"
        ]
    },
    "sym.sb_core_disable": {
        "function_address": "0x08010a60",
        "instructions": [
            "movw r3, 0x4884",
            "push {r4, r5, r6, r7, r8, sl, lr}",
            "ldr r7, [r0, r3]",
            "sub sp, sp, 0xc",
            "mov r8, r1",
            "mov r4, r0",
            "add r5, r7, 0xf00",
            "add r6, r5, 0x98",
            "mov r1, r6",
            "bl fcn.0800f9b4",
            "tst r0, 1",
            "beq 0x8010a98",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sl, pc}",
            "mov r0, r4",
            "mov r1, r6",
            "bl fcn.0800f9b4",
            "tst r0, 0x10000",
            "bne 0x8010ad0",
            "lsl r2, r8, 0x10",
            "mov r0, r4",
            "add r1, r5, 0x98",
            "orr r2, r2, 3",
            "bl fcn.0800fafc",
            "mov r0, 1",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sl, lr}",
            "b osl_delay",
            "mov r1, r6",
            "mov r0, r4",
            "bl fcn.0800f9b4",
            "mov r1, r6",
            "orr r2, r0, 2",
            "mov r0, r4",
            "add sl, r5, 0x9c",
            "bl fcn.0800fafc",
            "mov r1, r6",
            "mov r0, r4",
            "bl fcn.0800f9b4",
            "mov r3, r0",
            "mov r0, 1",
            "str r3, [sp, 4]",
            "movw r6, 0x2711",
            "ldr r3, [sp, 4]",
            "bl osl_delay",
            "b 0x8010b24",
            "subs r6, r6, 1",
            "beq 0x8010b3c",
            "bl osl_delay",
            "mov r1, sl",
            "mov r0, r4",
            "bl fcn.0800f9b4",
            "tst r0, 4",
            "mov r0, 0xa",
            "bne 0x8010b18",
            "add r1, r5, 0x9c",
            "mov r0, r4",
            "bl fcn.0800f9b4",
            "mov r0, r4",
            "add r1, r5, 0xf8",
            "bl fcn.0800f9b4",
            "tst r0, 0x80",
            "bne 0x8010bd0",
            "orr r2, r8, 3",
            "add r6, r5, 0x98",
            "lsl r2, r2, 0x10",
            "mov r0, r4",
            "mov r1, r6",
            "orr r2, r2, 3",
            "bl fcn.0800fafc",
            "mov r1, r6",
            "mov r0, r4",
            "bl fcn.0800f9b4",
            "mov r3, r0",
            "mov r0, 0xa",
            "str r3, [sp, 4]",
            "ldr r3, [sp, 4]",
            "bl osl_delay",
            "mov r0, r4",
            "add r1, r5, 0xf8",
            "bl fcn.0800f9b4",
            "tst r0, 0x80",
            "beq 0x8010aac",
            "add r7, r7, 0xf90",
            "mov r0, r4",
            "mov r1, r7",
            "bl fcn.0800f9b4",
            "mov r1, r7",
            "bic r2, r0, 0x2000000",
            "mov r0, r4",
            "bl fcn.0800fafc",
            "b 0x8010aac",
            "add sl, r7, 0xf90",
            "mov r0, r4",
            "mov r1, sl",
            "movw r6, 0x2711",
            "bl fcn.0800f9b4",
            "mov r1, sl",
            "orr r2, r0, 0x2000000",
            "mov r0, r4",
            "bl fcn.0800fafc",
            "mov r0, r4",
            "mov r1, sl",
            "bl fcn.0800f9b4",
            "mov r3, r0",
            "mov r0, 1",
            "str r3, [sp, 4]",
            "ldr r3, [sp, 4]",
            "bl osl_delay",
            "b 0x8010c24",
            "subs r6, r6, 1",
            "beq 0x8010b5c",
            "bl osl_delay",
            "mov r1, sl",
            "mov r0, r4",
            "bl fcn.0800f9b4",
            "tst r0, 0x1800000",
            "mov r0, 0xa",
            "bne 0x8010c18",
            "b 0x8010b5c"
        ]
    },
    "sym.dhd_runner_detach": {
        "function_address": "0x08004244",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "subs r4, r1, 0",
            "mov r6, r0",
            "popeq {r4, r5, r6, r7, r8, pc}",
            "ldr r3, [r4, 0x70]",
            "cmp r3, 0",
            "beq 0x80042f8",
            "ldr r5, [0x08004374]",
            "ldr r3, [r5]",
            "tst r3, 4",
            "bne 0x8004328",
            "mov r0, r4",
            "mov r1, 0",
            "bl fcn.080032b0",
            "ldr r3, [r5]",
            "tst r3, 4",
            "bne 0x8004340",
            "ldr r0, [r4, 0x68]",
            "cmp r0, 0",
            "beq 0x8004298",
            "bl bdmf_destroy",
            "ldr r7, [0x08004378]",
            "ldr r3, [r7]",
            "cmp r3, 1",
            "beq 0x8004314",
            "ldr r3, [r7]",
            "mov r8, 0",
            "str r8, [r4, 0x6c]",
            "ldr r0, [r4, 0x70]",
            "sub r3, r3, 1",
            "str r3, [r7]",
            "bl bdmf_put",
            "ldr r3, [r4, 0x120]",
            "str r8, [r4, 0x70]",
            "cmp r3, r8",
            "beq 0x80042f8",
            "mov r0, r4",
            "add r1, r4, 0x120",
            "mov r2, 1",
            "bl fcn.08002d04",
            "ldr r3, [r5]",
            "tst r3, 4",
            "bne 0x8004354",
            "mov r3, 0",
            "str r3, [r4, 0x120]",
            "mov r3, 0",
            "mov r1, r4",
            "str r3, [r4]",
            "mov r2, 0x150",
            "ldr r0, [r6]",
            "pop {r4, r5, r6, r7, r8, lr}",
            "b osl_mfree",
            "ldr r0, [r4, 0x6c]",
            "cmp r0, 0",
            "beq 0x80042a8",
            "bl bdmf_destroy",
            "b 0x80042a8",
            "mov r2, r4",
            "ldr r1, [0x0800437c]",
            "mov r3, r6",
            "ldr r0, [0x08004380]",
            "bl printk",
            "b 0x8004270",
            "mov r2, r4",
            "ldr r1, [0x08004384]",
            "ldr r0, [0x08004388]",
            "bl printk",
            "b 0x8004288",
            "ldr r1, [r4]",
            "movw r3, 0x1974",
            "ldr r2, [r4, 0x124]",
            "ldr r0, [0x0800438c]",
            "ldr r1, [r1, r3]",
            "ldr r3, [r4, 0x120]",
            "bl printk",
            "b 0x80042f0"
        ]
    },
    "fcn.080032b0": {
        "function_address": "0x080032b0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "subs r5, r1, 0",
            "sub sp, sp, 0x48",
            "mov r4, r0",
            "bne 0x8003410",
            "ldr r1, [r0, 4]",
            "mov r0, r5",
            "bl rdpa_cpu_int_disable",
            "ldr r1, [r4, 4]",
            "mov r0, r5",
            "bl rdpa_cpu_int_clear",
            "add r0, r4, 0xc",
            "add r6, sp, 8",
            "bl tasklet_kill",
            "mov r8, 1",
            "ldr r2, [r4, 4]",
            "mov r1, 3",
            "mov r0, r5",
            "mov sb, 0",
            "strd r8, sb, [sp]",
            "bl bdmf_attrelem_set_as_num",
            "ldr r0, [r4, 0x70]",
            "mov ip, 0x20",
            "ldr r2, [r4, 4]",
            "mov r1, 2",
            "mov r3, r6",
            "str ip, [sp]",
            "bl bdmf_attrelem_get_as_buf",
            "str r5, [sp, 0x10]",
            "str r4, [sp, 0x18]",
            "str r5, [sp, 8]",
            "str r5, [sp, 0xc]",
            "ldr r0, [r4, 0x70]",
            "mov ip, 0x20",
            "ldr r2, [r4, 4]",
            "mov r1, 2",
            "mov r3, r6",
            "str ip, [sp]",
            "bl bdmf_attrelem_set_as_buf",
            "subs sb, r0, 0",
            "blt 0x8003404",
            "ldr r2, [r4]",
            "cmp r5, 0",
            "movw r3, 0x1974",
            "mov r1, 0x400",
            "ldr r0, [r2, r3]",
            "bne rdpa_dhd_helper_dhd_complete_ring_create",
            "bl rdpa_dhd_helper_dhd_complete_ring_destroy",
            "mov sb, r0",
            "cmp sb, 0",
            "blt 0x8003404",
            "cmp r5, 0",
            "beq 0x8003404",
            "mov r6, 0",
            "add r7, sp, 0x28",
            "mov r5, r6",
            "mvn sl, 0",
            "mov r8, r7",
            "ldr ip, [r4, 8]",
            "mov r1, 7",
            "ldr lr, [r4, 4]",
            "add r2, sp, 0x38",
            "str r5, [r7]",
            "mov r3, r8",
            "ldr r0, [r4, 0x70]",
            "mov r7, r8",
            "str ip, [sp, 0x3c]",
            "mov ip, 0x10",
            "str r6, [sp, 0x38]",
            "add r6, r6, 1",
            "str r5, [sp, 0x30]",
            "str r5, [sp, 0x34]",
            "str r5, [sp, 0x40]",
            "str r5, [sp, 0x44]",
            "str lr, [sp, 0x28]",
            "str sl, [sp, 0x2c]",
            "str ip, [sp]",
            "bl bdmf_attrelem_set_as_buf",
            "subs sb, r0, 0",
            "blt 0x8003404",
            "cmp r6, 2",
            "bne 0x8003398",
            "mov r0, 0",
            "ldr r1, [r4, 4]",
            "bl rdpa_cpu_int_enable",
            "mov r0, sb",
            "add sp, sp, 0x48",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}",
            "add r0, r0, 0xc",
            "ldr r1, [reloc.dhd_runner_rx_tasklet_handler]",
            "mov r2, r4",
            "add r6, sp, 8",
            "bl tasklet_init",
            "ldr r0, [r4, 0x70]",
            "mov r3, r6",
            "ldr r2, [r4, 4]",
            "mov ip, 0x20",
            "mov r1, 2",
            "str ip, [sp]",
            "bl bdmf_attrelem_get_as_buf",
            "ldr r3, [reloc.dhd_runner_cpu_queue_isr]",
            "str r5, [sp, 0x10]",
            "str r4, [sp, 0x18]",
            "str r3, [sp, 8]",
            "b 0x8003330",
            "bl rdpa_dhd_helper_dhd_complete_ring_create",
            "mov sb, r0",
            "b 0x8003374"
        ]
    },
    "fcn.08002d04": {
        "function_address": "0x08002d04",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r1",
            "ldr r1, [r1]",
            "cmp r1, 0",
            "popeq {r4, pc}",
            "cmp r2, 1",
            "ldr r3, [r0]",
            "beq 0x8002d48",
            "cmp r2, 2",
            "beq 0x8002d8c",
            "ldr r0, [r3]",
            "ldmib r4, {r2, r3}",
            "bl osl_dma_free_consistent",
            "mov r0, r4",
            "mov r1, 0x18",
            "pop {r4, lr}",
            "b __memzero",
            "add r2, r0, 0x120",
            "cmp r4, r2",
            "beq 0x8002d70",
            "ldr r2, [r0, 0x120]",
            "cmp r1, r2",
            "bhs 0x8002d38",
            "ldr r0, [r0, 0x124]",
            "add r2, r2, r0",
            "cmp r1, r2",
            "blo 0x8002d38",
            "ldr r0, [r3, 4]",
            "mov r2, r1",
            "ldmib r4, {r1, r3}",
            "ldr r0, [r0, 4]",
            "add r0, r0, 0x60",
            "bl dma_free_coherent",
            "b 0x8002d38",
            "mov r0, r1",
            "bl kfree",
            "b 0x8002d38"
        ]
    },
    "sym.sb_addrspacesize": {
        "function_address": "0x08010f70",
        "instructions": [
            "push {r3, lr}",
            "movw r3, 0x4884",
            "ldr r3, [r0, r3]",
            "cmp r1, 3",
            "ldrls pc, [pc, r1, lsl 2]",
            "b 0x8010fc4",
            "bl fcn.0800f9b4",
            "pop {r3, lr}",
            "b sb_size",
            "mov r1, 0",
            "b 0x8010f9c",
            "bne 0x8021f04",
            "ldr r3, [0x08021f50]",
            "mov r2, 0",
            "strb r2, [r3, 4]",
            "mov r0, r4",
            "pop {r3, r4, r5, r6, r7, pc}",
            "cmp r7, 0",
            "beq 0x8021ef0",
            "ldr r3, [0x08021f50]",
            "mov r4, 0",
            "mov r2, 1",
            "mov r0, r4",
            "strb r2, [r3, 4]",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "sym.dhd_rx_frame": {
        "function_address": "0x08020604",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x6c",
            "ldr fp, [0x08020e68]",
            "mov r6, r0",
            "str r3, [sp, 0x14]",
            "ldr r3, [fp]",
            "str r1, [sp, 0x2c]",
            "str r2, [sp, 0x28]",
            "tst r3, 2",
            "ldr sb, [r0, 0xc]",
            "bne 0x8020e18",
            "ldr r3, [sp, 0x28]",
            "ldr ip, [sp, 0x14]",
            "cmp r3, 0",
            "cmpne ip, 0",
            "movle r2, 0",
            "movgt r2, 1",
            "strle r2, [sp, 0x1c]",
            "ble 0x8020990",
            "mov r1, sp",
            "mov ip, 0",
            "bic r2, r1, 0x1fc0",
            "str ip, [sp, 0x18]",
            "bic r2, r2, 0x3f",
            "str ip, [sp, 0x1c]",
            "mov r8, ip",
            "str r2, [sp, 0x20]",
            "b 0x80206fc",
            "ldr r0, [r6]",
            "ldr r1, [sp, 0x28]",
            "bl osl_pktdata",
            "ldr r3, [r4, 8]",
            "mov sl, r0",
            "cmp r3, 0",
            "beq 0x802069c",
            "ldrb r3, [r3, 0x2c0]",
            "cmp r3, 1",
            "beq 0x802073c",
            "ldrb r1, [sl, 0xd]",
            "movw r3, 0x886c",
            "ldrb r2, [sl, 0xc]",
            "movt r3, 0xffff",
            "orr r2, r2, r1, lsl 8",
            "lsr r1, r2, 8",
            "orr r2, r1, r2, lsl 8",
            "sxth r2, r2",
            "cmp r2, r3",
            "beq 0x802073c",
            "ldr r3, [fp]",
            "tst r3, 1",
            "bne 0x8020e08",
            "ldr r0, [r6]",
            "mov r2, 0",
            "ldr r1, [sp, 0x28]",
            "bl osl_pktfree",
            "ldr ip, [sp, 0x14]",
            "add r8, r8, 1",
            "str r7, [sp, 0x28]",
            "cmp r7, 0",
            "cmpne ip, r8",
            "ble 0x8020990",
            "mov r3, r7",
            "mov r2, 0",
            "ldr r7, [r3]",
            "str r2, [r3]",
            "ldr r3, [sp, 0x2c]",
            "add r3, r3, 0x660",
            "add r3, sb, r3, lsl 2",
            "ldr r4, [r3, 4]",
            "cmp r4, r2",
            "bne 0x8020674",
            "ldr r3, [fp]",
            "tst r3, 1",
            "beq 0x80206d0",
            "ldr r1, [0x08020e6c]",
            "ldr r0, [0x08020e70]",
            "bl printk",
            "b 0x80206d0",
            "ldrb r3, [r4, 0x1fd]",
            "cmp r3, 0",
            "bne 0x80209d4",
            "ldrb r3, [r4, 0x1fe]",
            "ldr r1, [sp, 0x2c]",
            "cmp r3, 0",
            "movw r3, 0x18e0",
            "beq 0x80209c0",
            "ldr r2, [r6, r3]",
            "add r0, r1, r1, lsl 8",
            "add r2, r2, r0, lsl 2",
            "ldrb r5, [r2, 1]",
            "cmp r5, 0",
            "beq 0x8020aa8",
            "ldrb r3, [r4, 0x1f4]",
            "cmp r3, 0",
            "beq 0x8020788",
            "cmp r5, 1",
            "beq 0x8020c18",
            "ldrb r3, [r4, 0x205]",
            "cmp r3, 0",
            "beq 0x80207b0",
            "cmp r5, 2",
            "beq 0x80207b0",
            "cmp r5, 1",
            "beq 0x80207b0",
            "ldrb r3, [sl]",
            "tst r3, 1",
            "beq 0x8020b6c",
            "ldrb r3, [r4, 0x1d8]",
            "cmp r3, 0",
            "beq 0x80207c8",
            "ldrb r3, [sl]",
            "tst r3, 1",
            "bne 0x8020a48",
            "ldr r0, [r6]",
            "ldr r1, [sp, 0x28]",
            "bl osl_pkt_tonative",
            "ldr r3, [r4, 8]",
            "mov r5, r0",
            "str r3, [r0, 8]",
            "movw r3, 0x3bd8",
            "ldr r2, [sb, 0x18]",
            "ldr r3, [r2, r3]",
            "cmp r3, 1",
            "beq 0x8020b28",
            "ldr r2, [r6, 0xc]",
            "movw r3, 0x3bd4",
            "ldr r3, [r2, r3]",
            "cmp r3, 2",
            "beq 0x80209f8",
            "ldr sl, [sp, 0x2c]",
            "movw r3, 0x18e0",
            "ldr r3, [r6, r3]",
            "add r2, sl, sl, lsl 8",
            "add r3, r3, r2, lsl 2",
            "ldrb r3, [r3, 1]",
            "cmp r3, 1",
            "bne 0x8020834",
            "ldr r3, [r4, 0x1f0]",
            "cmp r3, 0",
            "beq 0x8020adc",
            "mov r0, r6",
            "mov r1, sl",
            "mov r2, r5",
            "bl dhd_handle_blog_sinit",
            "cmp r0, 0",
            "beq 0x80206e0",
            "ldr r3, [r5, 0x28]",
            "mov r0, r5",
            "ldr r1, [r5, 8]",
            "ldr sl, [r5, 0x2c]",
            "str r3, [sp, 0x10]",
            "bl eth_type_trans",
            "ldrb r2, [r5, 0xd5]",
            "strh r0, [r5, 0xd6]",
            "ldr r3, [sp, 0x10]",
            "and r2, r2, 7",
            "cmp r2, 2",
            "beq 0x8020bac",
            "str r3, [r5, 0x28]",
            "mov r1, 0xe",
            "str sl, [r5, 0x2c]",
            "mov r0, r5",
            "bl skb_pull",
            "mov r1, 0x30",
            "add r0, sp, 0x34",
            "bl __memzero",
            "ldrh r2, [r5, 0xd6]",
            "movw r3, 0x886c",
            "movt r3, 0xffff",
            "lsr r1, r2, 8",
            "orr r2, r1, r2, lsl 8",
            "sxth r2, r2",
            "cmp r2, r3",
            "beq 0x8020d10",
            "ldr r3, [r4, 8]",
            "cmp r3, 0",
            "beq 0x80208f8",
            "movw r2, 0",
            "movt r2, 0",
            "ldr r1, [r2]",
            "movw r2, 0x886c",
            "movt r2, 0xffff",
            "str r1, [r3, 0x1f0]",
            "ldrh r3, [r5, 0xd6]",
            "lsl r1, r3, 8",
            "orr r3, r1, r3, lsr 8",
            "sxth r3, r3",
            "cmp r3, r2",
            "beq 0x8020930",
            "ldr r2, [r5, 0x2c]",
            "ldr r1, [r6, 0x3c]",
            "ldr r3, [r6, 0x70]",
            "add r2, r1, r2",
            "add r3, r3, 1",
            "str r2, [r6, 0x3c]",
            "str r3, [r6, 0x70]",
            "ldr r2, [r5, 0x2c]",
            "ldr r1, [r4, 0x4c]",
            "ldr r3, [r4, 0x44]",
            "add r2, r1, r2",
            "add r3, r3, 1",
            "str r2, [r4, 0x4c]",
            "str r3, [r4, 0x44]",
            "ldr ip, [sp, 0x20]",
            "ldr r3, [ip, 4]",
            "bic r3, r3, 0xf8000000",
            "bic r3, r3, 0xff",
            "cmp r3, 0",
            "bne 0x8020c4c",
            "movw r3, 0x3b4c",
            "ldrb r3, [sb, r3]",
            "cmp r3, 0",
            "beq 0x8020c88",
            "ldr ip, [sp, 0x1c]",
            "cmp ip, 0",
            "streq r5, [sp, 0x18]",
            "streq r5, [sp, 0x1c]",
            "beq 0x80206e0",
            "ldr ip, [sp, 0x18]",
            "add r8, r8, 1",
            "str r5, [sp, 0x18]",
            "str r5, [ip]",
            "ldr ip, [sp, 0x14]",
            "str r7, [sp, 0x28]",
            "cmp r7, 0",
            "cmpne ip, r8",
            "bgt 0x80206f8",
            "movw r3, 0x3b4c",
            "ldrb r3, [sb, r3]",
            "cmp r3, 0",
            "beq 0x80209b8",
            "ldr ip, [sp, 0x1c]",
            "cmp ip, 0",
            "beq 0x80209b8",
            "mov r0, r6",
            "mov r1, ip",
            "bl fcn.08019ae0",
            "add sp, sp, 0x6c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r3, [r6, r3]",
            "add r2, r1, r1, lsl 8",
            "add r3, r3, r2, lsl 2",
            "ldrb r5, [r3, 1]",
            "b 0x8020774",
            "ldr r0, [r6]",
            "ldr r1, [sp, 0x28]",
            "bl bcm_l2_filter_block_ping",
            "subs r2, r0, 0",
            "bne 0x8020748",
            "ldr r0, [r6]",
            "ldr r1, [sp, 0x28]",
            "bl osl_pktfree",
            "b 0x80206e0",
            "ldrb r3, [r4, 0x20c]",
            "cmp r3, 0",
            "bne 0x8020808",
            "mov r0, r6",
            "ldr r1, [sp, 0x2c]",
            "add r2, sp, 0x28",
            "bl dhd_psta_proc",
            "cmp r0, 0",
            "bge 0x8020808",
            "ldr r3, [fp]",
            "tst r3, 1",
            "beq 0x8020808",
            "ldr r1, [sp, 0x2c]",
            "mov r0, r6",
            "bl dhd_ifname",
            "ldr r1, [0x08020e6c]",
            "mov r2, r0",
            "ldr r0, [0x08020e74]",
            "bl printk",
            "b 0x8020808",
            "ldr r5, [sp, 0x2c]",
            "add r2, sl, 6",
            "mov r0, r6",
            "mov r1, r5",
            "bl dhd_find_sta",
            "mov ip, 1",
            "mov r2, r0",
            "mov r3, r5",
            "mov r0, r6",
            "ldr r1, [sp, 0x28]",
            "str ip, [sp]",
            "bl dhd_wmf_packets_handle",
            "cmp r0, 0",
            "bne 0x8020a9c",
            "ldr r3, [fp]",
            "tst r3, 1",
            "beq 0x80206d0",
            "ldr r1, [0x08020e6c]",
            "ldr r0, [0x08020e78]",
            "bl printk",
            "b 0x80206d0",
            "cmp r0, 2",
            "bne 0x80207c8",
            "b 0x80206e0",
            "ldr r0, [r6]",
            "ldr r1, [sp, 0x28]",
            "str r3, [sp, 0x10]",
            "bl bcm_l2_filter_gratuitous_arp",
            "subs r2, r0, 0",
            "ldr r3, [sp, 0x10]",
            "beq 0x80209e8",
            "ldr r1, [sp, 0x2c]",
            "ldr r3, [r6, r3]",
            "add r2, r1, r1, lsl 8",
            "add r3, r3, r2, lsl 2",
            "ldrb r5, [r3, 1]",
            "b 0x8020774",
            "ldr r0, [r6]",
            "ldr r1, [sp, 0x28]",
            "bl osl_pktdata",
            "ldrb r3, [r0]",
            "mov r2, r0",
            "tst r3, 1",
            "beq 0x8020cac",
            "ldr r1, [sp, 0x28]",
            "tst r1, 3",
            "bne 0x8020bc8",
            "ldr r3, [r1, 0x8c]",
            "tst r3, 8",
            "beq 0x8020bc8",
            "ldr r3, [fp]",
            "tst r3, 1",
            "bne 0x8020e4c",
            "ldr r0, [r6]",
            "bl osl_pkt_frmnative",
            "b 0x80206d0",
            "movw r3, 0x1970",
            "ldr r1, [sp, 0x28]",
            "ldr r0, [sb, r3]",
            "bl dhd_wet_recv_proc",
            "cmp r0, 0",
            "bge 0x80207f4",
            "ldr r3, [fp]",
            "tst r3, 4",
            "beq 0x80207f4",
            "ldr r1, [sp, 0x2c]",
            "mov r0, r6",
            "bl dhd_ifname",
            "ldr r1, [0x08020e6c]",
            "mov r2, r0",
            "ldr r0, [0x08020e7c]",
            "bl printk",
            "b 0x80207f4",
            "mov r0, sl",
            "bl dhd_mcast_reverse_translation",
            "cmp r0, 0",
            "bne 0x80207b0",
            "ldr r2, [r6, 0xc]",
            "movw r3, 0x3bd4",
            "ldr r3, [r2, r3]",
            "cmp r3, 1",
            "beq 0x8020b98",
            "cmp r3, 2",
            "bne 0x80207b0",
            "ldr r3, [sp, 0x2c]",
            "cmp r3, 0",
            "movwne r3, 0x1984",
            "ldrne r4, [r2, r3]",
            "b 0x80207b0",
            "ldr r2, [sb, 0x80]",
            "add r2, r2, 1",
            "str r2, [sb, 0x80]",
            "ldr r2, [r4, 0x64]",
            "add r2, r2, 1",
            "str r2, [r4, 0x64]",
            "b 0x802087c",
            "ldrb r3, [r2, 0xc]",
            "ldrb r2, [r2, 0xd]",
            "orr r3, r3, r2, lsl 8",
            "lsr r2, r3, 8",
            "orr r3, r2, r3, lsl 8",
            "sxth r3, r3",
            "cmp r3, 6",
            "beq 0x8020c10",
            "ldr r0, [r6]",
            "bl osl_pktdup",
            "subs r2, r0, 0",
            "beq 0x8020c10",
            "ldr r3, [r6, 0xd4]",
            "mov r0, r6",
            "ldr r1, [sp, 0x2c]",
            "add r3, r3, 1",
            "str r3, [r6, 0xd4]",
            "bl dhd_sendpkt",
            "ldr sl, [sp, 0x2c]",
            "b 0x8020834",
            "mov r0, r6",
            "ldr r2, [sp, 0x28]",
            "mov r3, 0",
            "bl dhd_l2_filter_pkt_handle",
            "cmp r0, 0",
            "beq 0x8020dc0",
            "ldr r3, [sp, 0x2c]",
            "movw r2, 0x18e0",
            "ldr r2, [r6, r2]",
            "add r3, r3, r3, lsl 8",
            "add r3, r2, r3, lsl 2",
            "ldrb r5, [r3, 1]",
            "b 0x8020788",
            "ldr r2, [sb, 8]",
            "lsr r3, r2, 0x1f",
            "add r2, r2, r3",
            "and r0, r2, 1",
            "rsb r0, r3, r0",
            "bl dhd_perim_unlock_all",
            "mov r0, r5",
            "bl netif_rx",
            "ldr r2, [sb, 8]",
            "lsr r3, r2, 0x1f",
            "add r2, r2, r3",
            "and r0, r2, 1",
            "rsb r0, r3, r0",
            "bl dhd_perim_lock_all",
            "b 0x80206e0",
            "ldr r2, [sb, 8]",
            "lsr r3, r2, 0x1f",
            "add r2, r2, r3",
            "and r0, r2, 1",
            "rsb r0, r3, r0",
            "bl dhd_perim_unlock_all",
            "mov r0, r5",
            "bl netif_rx_ni",
            "b 0x8020c6c",
            "ldr sl, [sp, 0x2c]",
            "mov r0, r6",
            "mov r1, sl",
            "bl dhd_find_sta",
            "cmp r0, 0",
            "beq 0x8020834",
            "ldr r2, [fp]",
            "ldr r3, [r6, 0xd0]",
            "tst r2, 4",
            "add r3, r3, 1",
            "str r3, [r6, 0xd0]",
            "bne 0x8020e28",
            "mov r0, r6",
            "mov r1, sl",
            "ldr r2, [sp, 0x28]",
            "bl dhd_handle_blog_sinit",
            "cmp r0, 0",
            "bne 0x8020df4",
            "ldr r3, [fp]",
            "tst r3, 4",
            "beq 0x80206e0",
            "ldr r1, [0x08020e6c]",
            "ldr r0, [0x08020e80]",
            "bl printk",
            "b 0x80206e0",
            "ldr ip, [r5, 0x6c]",
            "add r4, sb, 0xc",
            "sub r3, sl, 2",
            "mov r0, r4",
            "add r1, sp, 0x2c",
            "uxth r3, r3",
            "str ip, [sp, 0x24]",
            "mov r2, ip",
            "add ip, sp, 0x34",
            "str ip, [sp]",
            "add ip, sp, 0x64",
            "str ip, [sp, 4]",
            "mov ip, 0",
            "str ip, [sp, 8]",
            "bl wl_host_event",
            "cmp r0, 0",
            "beq 0x8020dd4",
            "add r0, sp, 0x34",
            "bl wl_event_to_host_order",
            "ldr ip, [sp, 0x14]",
            "cmp ip, 1",
            "beq 0x8020d74",
            "ldr r3, [fp]",
            "tst r3, 1",
            "bne 0x8020e3c",
            "ldr r3, [sp, 0x2c]",
            "add r3, r3, 0x660",
            "add r3, sb, r3, lsl 2",
            "ldr r4, [r3, 4]",
            "cmp r4, 0",
            "beq 0x8020da4",
            "ldr r3, [r4, 8]",
            "cmp r3, 0",
            "beq 0x8020da4",
            "ldrb r2, [r3, 0x2c0]",
            "cmp r2, 1",
            "beq jiffies",
            "ldr r3, [fp]",
            "tst r3, 1",
            "beq 0x80206d0",
            "ldr r1, [0x08020e6c]",
            "ldr r0, [0x08020e84]",
            "bl printk",
            "b 0x80206d0",
            "ldr r0, [r6]",
            "mov r2, r5",
            "ldr r1, [sp, 0x28]",
            "bl osl_pktfree",
            "b 0x80206e0",
            "add ip, sp, 0x64",
            "mov r0, r4",
            "add r1, sp, 0x2c",
            "ldr r2, [sp, 0x24]",
            "add r3, sp, 0x34",
            "str ip, [sp]",
            "bl dhd_dslcpe_event",
            "b 0x8020d54",
            "mov r0, r6",
            "ldr r1, [sp, 0x2c]",
            "ldr r2, [sp, 0x28]",
            "bl dhd_sendpkt",
            "b 0x80206e0",
            "ldr r1, [0x08020e6c]",
            "ldr r0, [0x08020e88]",
            "bl printk",
            "b 0x80206d0",
            "ldr r1, [0x08020e6c]",
            "ldr r0, [0x08020e8c]",
            "bl printk",
            "b 0x8020630",
            "ldr r0, [0x08020e90]",
            "ldr r1, [0x08020e6c]",
            "bl printk",
            "ldr sl, [sp, 0x2c]",
            "b 0x8020cdc",
            "ldr r1, [0x08020e6c]",
            "ldr r0, [0x08020e94]",
            "bl printk",
            "b 0x8020d74",
            "mov r3, r1",
            "ldr r0, [0x08020e98]",
            "ldr r1, [0x08020e6c]",
            "movw r2, 0x19a2",
            "bl printk",
            "ldr r1, [sp, 0x28]",
            "b 0x8020b1c"
        ]
    },
    "fcn.08019ae0": {
        "function_address": "0x08019ae0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0xc",
            "ldr r7, [0x08019c28]",
            "mov r4, r0",
            "mov r6, r1",
            "ldr r2, [r0, 0xc]",
            "ldr r3, [r7]",
            "str r2, [sp, 4]",
            "tst r3, 2",
            "bne 0x8019c1c",
            "mov r8, 0x18c0",
            "movw sl, 0x18c4",
            "cmp r6, 0",
            "beq 0x8019b7c",
            "ldr r0, [r4, 0xc]",
            "add r0, r0, 0x3b40",
            "add r0, r0, 4",
            "bl _raw_spin_lock_bh",
            "ldr sb, [r4, r8]",
            "ldr fp, [r4, sl]",
            "add r5, sb, 0x230",
            "ldr r3, [r4, r5, lsl 2]",
            "cmp r3, 0",
            "beq 0x8019b98",
            "ldr r0, [r4, 0xc]",
            "add r0, r0, 0x3b40",
            "add r0, r0, 4",
            "bl _raw_spin_unlock_bh",
            "ldr r3, [r7]",
            "tst r3, 1",
            "beq 0x8019b10",
            "mov r1, r6",
            "mov r2, sb",
            "mov r3, fp",
            "ldr r0, [0x08019c2c]",
            "bl printk",
            "b 0x8019b10",
            "ldr r0, [0x08019c30]",
            "bl printk",
            "ldr r3, [r7]",
            "tst r3, 1",
            "bne 0x8019b74",
            "ldr r3, [r7]",
            "tst r3, 1",
            "beq 0x8019b7c",
            "b 0x8019b74",
            "ldr r3, [r7]",
            "add r7, sb, 1",
            "tst r3, 2",
            "lsleq r7, r7, 0x16",
            "lsreq r7, r7, 0x16",
            "bne 0x8019bfc",
            "str r6, [r4, r5, lsl 2]",
            "mov r3, 0x18c0",
            "ldr r0, [r4, 0xc]",
            "str r7, [r4, r3]",
            "add r0, r0, 0x3b40",
            "add r0, r0, 4",
            "bl _raw_spin_unlock_bh",
            "ldr r2, [sp, 4]",
            "movw r3, 0x3b04",
            "ldr r3, [r2, r3]",
            "cmp r3, 0",
            "blt 0x8019bf4",
            "add r0, r2, 0x3b00",
            "add r0, r0, 0xc",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "b up",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "lsl r7, r7, 0x16",
            "mov r1, r6",
            "mov r2, sb",
            "ldr r0, [0x08019c34]",
            "lsr r7, r7, 0x16",
            "mov r3, r7",
            "bl printk",
            "b 0x8019bb0",
            "ldr r0, [0x08019c38]",
            "bl printk",
            "b 0x8019b08"
        ]
    },
    "sym.dhd_del_sta": {
        "function_address": "0x0801a730",
        "instructions": [
            "cmp r1, 0xf",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov fp, r0",
            "sub sp, sp, 0xc",
            "mov r8, r2",
            "bhi 0x801a828",
            "ldr r3, [r0, 0xc]",
            "add r1, r1, 0x660",
            "add r1, r3, r1, lsl 2",
            "ldr r6, [r1, 4]",
            "cmp r6, 0",
            "beq 0x801a828",
            "mov r7, r6",
            "ldr r4, [r7, 0x1e8]!",
            "cmp r7, r4",
            "ldr r5, [r4], -0x20",
            "beq 0x801a7f8",
            "mov sl, 0x100",
            "mov sb, 0x200",
            "sub r5, r5, 0x20",
            "movt sl, 0x10",
            "movt sb, 0x20",
            "mov r1, r8",
            "mov r2, 6",
            "add r0, r4, 0x18",
            "bl memcmp",
            "cmp r0, 0",
            "bne 0x801a7e0",
            "ldr r3, [r4, 0x24]",
            "ldr r2, [r4, 0x20]",
            "str r3, [r2, 4]",
            "str r2, [r3]",
            "str sl, [r4, 0x20]",
            "str sb, [r4, 0x24]",
            "ldrb r3, [r6, 0x1d8]",
            "cmp r3, 0",
            "beq 0x801a7d0",
            "ldr r2, [r4, 0x34]",
            "cmp r2, 0",
            "bne 0x801a830",
            "ldr r0, [r6]",
            "mov r1, r4",
            "add r0, r0, 0xc",
            "bl fcn.08019c3c",
            "mov r3, r5",
            "mov r4, r5",
            "ldr r5, [r3, 0x20]!",
            "cmp r7, r3",
            "sub r5, r5, 0x20",
            "bne 0x801a788",
            "ldrb r3, [r6, 0x1f4]",
            "cmp r3, 0",
            "beq 0x801a828",
            "ldr ip, [fp, 0xdc]",
            "mov lr, 0",
            "ldr r1, [r6, 0x1f8]",
            "mov r2, lr",
            "ldr r0, [fp]",
            "mov r3, r8",
            "str lr, [sp]",
            "str ip, [sp, 4]",
            "bl bcm_l2_filter_arp_table_update",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r3, [r6, 0x1dc]",
            "mov r1, r4",
            "ldr r0, [r3, 4]",
            "bl emfc_remove_sta",
            "b 0x801a7d0"
        ]
    },
    "fcn.08019c3c": {
        "function_address": "0x08019c3c",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r0",
            "mov r8, r1",
            "mov r5, 0",
            "movw sl, 0xffff",
            "mov sb, 5",
            "b 0x8019c6c",
            "add r5, r5, 2",
            "mvn r3, 0",
            "cmp r5, 0x10",
            "strh r3, [r7, 4]",
            "beq 0x8019cf4",
            "add r7, r8, r5",
            "ldrh fp, [r7, 4]",
            "cmp fp, sl",
            "beq 0x8019c58",
            "mov r1, fp",
            "mov r0, r4",
            "bl dhd_flow_queue",
            "mov r1, fp",
            "mov r6, r0",
            "mov r0, r4",
            "bl dhd_flow_ring_node",
            "strb sb, [r0, 0x39]",
            "ldrh r3, [r6, 0x10]",
            "cmp r3, 0",
            "beq 0x8019c58",
            "mov r1, r6",
            "mov r0, r4",
            "bl dhd_flow_queue_dequeue",
            "subs r1, r0, 0",
            "mov r2, 1",
            "beq 0x8019c58",
            "ldr r0, [r4]",
            "bl osl_pktfree",
            "mov r1, r6",
            "mov r0, r4",
            "bl dhd_flow_queue_dequeue",
            "subs r1, r0, 0",
            "mov r2, 1",
            "bne 0x8019cc0",
            "add r5, r5, 2",
            "mvn r3, 0",
            "cmp r5, 0x10",
            "strh r3, [r7, 4]",
            "bne 0x8019c6c",
            "movw r3, 0x18d0",
            "ldrh r1, [r8, 0x28]",
            "ldr r0, [r4, r3]",
            "bl id16_map_free",
            "mov r3, 0",
            "add r0, r8, 0x18",
            "str r3, [r8]",
            "mvn r3, 0xe",
            "str r3, [r8, 0x2c]",
            "mov r1, 6",
            "ldr r3, [0x08019d40]",
            "str r3, [r8, 0x14]",
            "bl __memzero",
            "add r3, r8, 0x20",
            "str r3, [r8, 0x20]",
            "str r3, [r8, 0x24]",
            "movw r3, 0xffff",
            "str r3, [r8, 0x28]",
            "pop {r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.dhd_prot_detach": {
        "function_address": "0x08024d28",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r4, r0",
            "ldr r5, [r0, 8]",
            "cmp r5, 0",
            "popeq {r4, r5, r6, pc}",
            "add r1, r5, 0x20c",
            "movw r6, 0x196c",
            "bl fcn.080233d4",
            "mov r0, r4",
            "add r1, r5, 0x1dc",
            "bl fcn.080233d4",
            "mov r0, r4",
            "add r1, r5, 0x1f4",
            "bl fcn.080233d4",
            "mov r0, r4",
            "add r1, r5, 0x288",
            "bl fcn.080233d4",
            "mov r2, 2",
            "mov r1, 0",
            "movt r2, 2",
            "add r3, r5, 0x228",
            "ldr r0, [r4, r6]",
            "bl dhd_runner_notify",
            "mov r2, 3",
            "mov r1, 0",
            "movt r2, 2",
            "add r3, r5, 0x240",
            "ldr r0, [r4, r6]",
            "bl dhd_runner_notify",
            "mov r2, 4",
            "mov r1, 0",
            "movt r2, 2",
            "add r3, r5, 0x258",
            "ldr r0, [r4, r6]",
            "bl dhd_runner_notify",
            "mov r2, 5",
            "add r3, r5, 0x270",
            "movt r2, 2",
            "mov r1, 0",
            "ldr r0, [r4, r6]",
            "bl dhd_runner_notify",
            "mov r0, r4",
            "add r1, r5, 0x18",
            "bl fcn.08023bf0",
            "mov r0, r4",
            "add r1, r5, 0x68",
            "bl fcn.08023bf0",
            "mov r0, r4",
            "add r1, r5, 0xb8",
            "bl fcn.08023bf0",
            "mov r0, r4",
            "add r1, r5, 0x108",
            "bl fcn.08023bf0",
            "add r1, r5, 0x158",
            "mov r0, r4",
            "bl fcn.08023bf0",
            "mov r0, r4",
            "bl fcn.08023c54",
            "ldr r1, [r4, r6]",
            "mov r0, r4",
            "bl dhd_runner_detach",
            "ldr r1, [r4, 8]",
            "mov r3, 0",
            "str r3, [r4, r6]",
            "ldr r3, [r1, 0x300]",
            "cmp r3, 0",
            "beq 0x8024e44",
            "mov r1, r3",
            "mov r0, r4",
            "bl fcn.08023254",
            "ldr r1, [r4, 8]",
            "ldr r0, [r4]",
            "mov r2, 0x378",
            "bl osl_mfree",
            "mov r3, 0",
            "str r3, [r4, 8]",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.080233d4": {
        "function_address": "0x080233d4",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r4, r1",
            "ldr r3, [r1]",
            "ldr r5, [r0]",
            "cmp r3, 0",
            "popeq {r3, r4, r5, pc}",
            "mov r0, r1",
            "bl fcn.08023384",
            "mov r0, r5",
            "ldr r1, [r4]",
            "ldr r2, [r4, 0x14]",
            "ldr r3, [r4, 8]",
            "bl osl_dma_free_consistent",
            "mov r0, r4",
            "mov r1, 0x18",
            "pop {r3, r4, r5, lr}",
            "b __memzero"
        ]
    },
    "fcn.08023bf0": {
        "function_address": "0x08023bf0",
        "instructions": [
            "push {r4, lr}",
            "mov r3, r1",
            "ldrh r2, [r1, 2]",
            "mov r1, 0",
            "ldr ip, [r0, 8]",
            "cmp r2, 4",
            "strb r1, [r3]",
            "bls 0x8023c38",
            "ldr r1, [ip, 0x1ac]",
            "cmp r1, 0",
            "beq 0x8023c38",
            "add r4, r3, 0x14",
            "mov r0, r4",
            "bl fcn.08023384",
            "mov r0, r4",
            "mov r1, 0x18",
            "pop {r4, lr}",
            "b __memzero",
            "movw ip, 0x196c",
            "mov r1, 0",
            "ldr r0, [r0, ip]",
            "add r2, r2, 0x80000",
            "add r3, r3, 0x14",
            "pop {r4, lr}",
            "b dhd_runner_notify"
        ]
    },
    "fcn.08023c54": {
        "function_address": "0x08023c54",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r7, r0",
            "ldr r4, [r0, 8]",
            "ldr r5, [r4, 0x1a8]",
            "cmp r5, 0",
            "popeq {r4, r5, r6, r7, r8, pc}",
            "mov r8, 0x1c4",
            "ldrh r2, [r4, r8]",
            "cmp r2, 2",
            "ble 0x8023ca4",
            "mov r6, 2",
            "mov r1, r5",
            "mov r0, r7",
            "bl fcn.08023bf0",
            "ldrh r2, [r4, r8]",
            "add r6, r6, 1",
            "add r5, r5, 0x50",
            "cmp r2, r6",
            "bgt 0x8023c80",
            "ldr r5, [r4, 0x1a8]",
            "sub r2, r2, 2",
            "ldr r0, [r4]",
            "add r2, r2, r2, lsl 2",
            "mov r1, r5",
            "lsl r2, r2, 4",
            "bl osl_mfree",
            "mov r3, 0",
            "mov r2, 0x1c4",
            "str r3, [r4, 0x1a8]",
            "strh r3, [r4, r2]",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.08023254": {
        "function_address": "0x08023254",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "subs r4, r1, 0",
            "ldr r5, [r0]",
            "popeq {r3, r4, r5, pc}",
            "ldr r1, [r4, 8]",
            "cmp r1, 0",
            "beq 0x8023288",
            "mov r0, r5",
            "bl dhd_pkt_queue_purge",
            "mov r0, r5",
            "ldr r1, [r4, 8]",
            "mov r2, 8",
            "bl osl_mfree",
            "ldr r1, [r4, 4]",
            "cmp r1, 0",
            "beq 0x80232ac",
            "mov r0, r5",
            "bl dhd_pkt_queue_purge",
            "mov r0, r5",
            "ldr r1, [r4, 4]",
            "mov r2, 8",
            "bl osl_mfree",
            "ldr r1, [r4]",
            "cmp r1, 0",
            "beq 0x80232d0",
            "mov r0, r5",
            "bl dhd_pkt_queue_purge",
            "mov r0, r5",
            "ldr r1, [r4]",
            "mov r2, 8",
            "bl osl_mfree",
            "mov r0, r5",
            "mov r1, r4",
            "mov r2, 0xc",
            "pop {r3, r4, r5, lr}",
            "b osl_mfree"
        ]
    },
    "sym.dhd_prot_attach": {
        "function_address": "0x08024e5c",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "mov r1, 0x378",
            "ldr r7, [r0]",
            "sub sp, sp, 0xc",
            "mov r4, r0",
            "mov r0, r7",
            "bl osl_malloc",
            "subs r5, r0, 0",
            "beq 0x8024f48",
            "mov r1, 0x378",
            "movw r6, 0x1970",
            "bl __memzero",
            "mov r3, 0",
            "movw r2, 0x1911",
            "str r7, [r5]",
            "mov r0, r4",
            "str r5, [r4, 8]",
            "add r1, r5, 0x330",
            "strb r3, [r4, r2]",
            "add r2, r2, 1",
            "strb r3, [r4, r2]",
            "str r3, [r4, r6]",
            "bl dhd_runner_attach",
            "cmp r0, 0",
            "movw r3, 0x196c",
            "str r0, [r4, r3]",
            "beq 0x8024fbc",
            "ldr r3, [r4, r6]",
            "mov ip, 0x28",
            "mov lr, 0",
            "mov r0, r4",
            "add r1, r5, 0x18",
            "orr r2, r3, 1",
            "str r2, [r4, r6]",
            "ldr r2, [r5, 0x348]",
            "cmp r2, 0",
            "orrne r3, r3, 0xb",
            "strne r3, [r4, r6]",
            "ldr r3, [r5, 0x360]",
            "cmp r3, 0",
            "movwne r3, 0x1970",
            "ldrne r2, [r4, r3]",
            "orrne r2, r2, 4",
            "strne r2, [r4, r3]",
            "mov r3, 0x40",
            "ldr r2, [0x0802512c]",
            "stm sp, {ip, lr}",
            "bl fcn.080234f0",
            "cmp r0, 0",
            "beq 0x8024f70",
            "ldr r3, [0x08025130]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "bne 0x802511c",
            "mov r0, r4",
            "bl dhd_prot_detach",
            "mvn r0, 0x1a",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, pc}",
            "ldr r3, [0x08025130]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "mvneq r0, 0x1a",
            "beq 0x8024f40",
            "ldr r0, [0x08025134]",
            "ldr r1, [0x08025138]",
            "bl printk",
            "mvn r0, 0x1a",
            "b 0x8024f40",
            "mov ip, 1",
            "mov r6, 0x20",
            "mov r0, r4",
            "add r1, r5, 0x68",
            "ldr r2, [0x0802513c]",
            "mov r3, 0x400",
            "str r6, [sp]",
            "str ip, [sp, 4]",
            "bl fcn.080234f0",
            "cmp r0, 0",
            "beq 0x8024fdc",
            "ldr r3, [0x08025130]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "beq 0x8024f34",
            "ldr r1, [0x08025138]",
            "ldr r0, [0x08025140]",
            "bl printk",
            "b 0x8024f34",
            "ldr r3, [0x08025130]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "beq 0x8024f34",
            "ldr r1, [0x08025138]",
            "ldr r0, [0x08025144]",
            "bl printk",
            "b 0x8024f34",
            "mov ip, 0x18",
            "mov lr, 2",
            "mov r0, r4",
            "add r1, r5, 0xb8",
            "ldr r2, [0x08025148]",
            "mov r3, 0x100",
            "stm sp, {ip, lr}",
            "bl fcn.080234f0",
            "cmp r0, 0",
            "beq 0x8025024",
            "ldr r3, [0x08025130]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "beq 0x8024f34",
            "ldr r1, [0x08025138]",
            "ldr r0, [0x0802514c]",
            "bl printk",
            "b 0x8024f34",
            "mov ip, 0x10",
            "mov lr, 3",
            "mov r0, r4",
            "add r1, r5, 0x108",
            "ldr r2, [0x08025150]",
            "mov r3, 0x400",
            "stm sp, {ip, lr}",
            "bl fcn.080234f0",
            "cmp r0, 0",
            "beq 0x802506c",
            "ldr r3, [0x08025130]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "beq 0x8024f34",
            "ldr r1, [0x08025138]",
            "ldr r0, [0x08025154]",
            "bl printk",
            "b 0x8024f34",
            "mov ip, 4",
            "mov r0, r4",
            "add r1, r5, 0x158",
            "ldr r2, [0x08025158]",
            "mov r3, 0x400",
            "str r6, [sp]",
            "str ip, [sp, 4]",
            "bl fcn.080234f0",
            "cmp r0, 0",
            "beq 0x80250b4",
            "ldr r3, [0x08025130]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "beq 0x8024f34",
            "ldr r1, [0x08025138]",
            "ldr r0, [0x0802515c]",
            "bl printk",
            "b 0x8024f34",
            "mov r0, r4",
            "add r1, r5, 0x1dc",
            "movw r2, 0x2008",
            "bl fcn.08024488",
            "cmp r0, 0",
            "bne 0x8024f34",
            "mov r0, r4",
            "add r1, r5, 0x1f4",
            "movw r2, 0x2008",
            "bl fcn.08024488",
            "cmp r0, 0",
            "bne 0x8024f34",
            "mov r2, 0x10",
            "mov r0, r4",
            "add r1, r5, 0x20c",
            "movt r2, 8",
            "bl fcn.08024488",
            "cmp r0, 0",
            "bne 0x8024f34",
            "mov r0, r4",
            "add r1, r5, 0x288",
            "mov r2, 0x800",
            "bl fcn.08024488",
            "cmp r0, 0",
            "bne 0x8024f34",
            "b 0x8024f40",
            "ldr r1, [0x08025138]",
            "ldr r0, [0x08025160]",
            "bl printk",
            "b 0x8024f34"
        ]
    },
    "fcn.080234f0": {
        "function_address": "0x080234f0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x14",
            "ldrh r5, [sp, 0x3c]",
            "add fp, r1, 0x36",
            "mov r4, r1",
            "mov r7, r0",
            "ldrh r6, [sp, 0x38]",
            "mov r1, r2",
            "mov r0, fp",
            "mov r2, 0x18",
            "mov sl, r3",
            "ldr r8, [r7, 8]",
            "bl strncpy",
            "cmp r5, 4",
            "mov r1, 0",
            "mul sb, r6, sl",
            "strb r1, [r4, 0x4d]",
            "strh r5, [r4, 2]",
            "strh sl, [r4, 8]",
            "strh r6, [r4, 0xa]",
            "bls 0x80235f8",
            "ldr r1, [r8, 0x1ac]",
            "cmp r1, 0",
            "beq 0x80235bc",
            "sub r5, r5, 3",
            "str sb, [r4, 0x18]",
            "uxth r5, r5",
            "ldr r3, [r8, 0x1ac]",
            "add r0, r4, 0x14",
            "sub r5, r5, 2",
            "mul r5, sb, r5",
            "add r3, r3, r5",
            "str r3, [r4, 0x14]",
            "ldr r3, [r8, 0x1b4]",
            "add r5, r5, r3",
            "str r5, [r4, 0x1c]",
            "ldr r3, [r8, 0x1b8]",
            "str r3, [r4, 0x20]",
            "ldr r3, [r8, 0x1bc]",
            "str r3, [r4, 0x24]",
            "bl fcn.08023384",
            "ldr r3, [0x08023644]",
            "mov r5, 0",
            "ldr ip, [r4, 0x1c]",
            "str r5, [r4, 0x10]",
            "ldr r0, [r3]",
            "str ip, [r4, 0xc]",
            "ands r0, r0, 4",
            "bne 0x8023618",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "movw r0, 0x196c",
            "add r2, r5, 0x40000",
            "str sb, [r4, 0x18]",
            "add r3, r4, 0x14",
            "ldr r0, [r7, r0]",
            "bl dhd_runner_notify",
            "ldrh r1, [r4, 0xa]",
            "mov r5, r0",
            "ldr r0, [r4, 0x18]",
            "bl __aeabi_uidiv",
            "strh r0, [r4, 8]",
            "cmp r5, 0",
            "mvnne r0, 0x1a",
            "beq 0x8023594",
            "b 0x80235b4",
            "movw r3, 0x196c",
            "str sb, [r4, 0x18]",
            "add r2, r5, 0x40000",
            "ldr r0, [r7, r3]",
            "add r3, r4, 0x14",
            "bl dhd_runner_notify",
            "mov r5, r0",
            "b 0x80235e8",
            "ldr lr, [r4, 0x14]",
            "mov r1, fp",
            "ldrh r2, [r4, 8]",
            "ldrh r3, [r4, 0xa]",
            "ldr r0, [0x08023648]",
            "stm sp, {sb, lr}",
            "str r5, [sp, 8]",
            "str ip, [sp, 0xc]",
            "bl printk",
            "mov r0, r5",
            "b 0x80235b4"
        ]
    },
    "fcn.08024488": {
        "function_address": "0x08024488",
        "instructions": [
            "ands r3, r2, 0x1f",
            "push {r4, r5, r6, lr}",
            "movne r3, 0x20",
            "mov r4, r1",
            "add ip, r1, 8",
            "sub sp, sp, 8",
            "add r1, r3, r2",
            "mov r6, r0",
            "mov r5, r2",
            "ldr r0, [r0]",
            "mov r2, 0x20",
            "add r3, r4, 0x14",
            "str ip, [sp]",
            "bl osl_dma_alloc_consistent",
            "cmp r0, 0",
            "str r0, [r4]",
            "beq 0x80244f4",
            "str r5, [r4, 4]",
            "mov r0, r4",
            "bl fcn.08023384",
            "subs r5, r0, 0",
            "bne 0x8024520",
            "mov r0, r4",
            "bl fcn.08023cd0",
            "mov r0, r5",
            "add sp, sp, 8",
            "pop {r4, r5, r6, pc}",
            "ldr r3, [0x08024534]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "mvneq r0, 0x1a",
            "beq 0x80244ec",
            "ldr r0, [0x08024538]",
            "mov r2, r5",
            "ldr r1, [0x0802453c]",
            "bl printk",
            "mvn r0, 0x1a",
            "b 0x80244ec",
            "mov r0, r6",
            "mov r1, r4",
            "bl fcn.080233d4",
            "mvn r0, 0",
            "b 0x80244ec"
        ]
    },
    "sym.dhdpcie_bus_suspend": {
        "function_address": "0x0802b0f4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r4, r0",
            "ldr r3, [r0]",
            "mov r6, r1",
            "cmp r3, 0",
            "beq 0x802b174",
            "ldr r2, [r3, 8]",
            "cmp r2, 0",
            "beq 0x802b194",
            "ldr r2, [r3, 0x14]",
            "sub r2, r2, 2",
            "cmp r2, 1",
            "bls 0x802b144",
            "ldr r3, [0x0802b434]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "bne 0x802b2e4",
            "mvn r5, 0",
            "mov r0, r5",
            "pop {r4, r5, r6, r7, r8, pc}",
            "ldrb r2, [r3, 0x12]",
            "cmp r2, 0",
            "beq 0x802b1b4",
            "ldr r3, [0x0802b434]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "mvneq r5, 4",
            "beq 0x802b13c",
            "ldr r0, [0x0802b438]",
            "mvn r5, 4",
            "bl printk",
            "b 0x802b13c",
            "ldr r3, [0x0802b434]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "beq 0x802b138",
            "ldr r0, [0x0802b43c]",
            "mvn r5, 0",
            "bl printk",
            "b 0x802b13c",
            "ldr r3, [0x0802b434]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "beq 0x802b138",
            "ldr r0, [0x0802b440]",
            "mvn r5, 0",
            "bl printk",
            "b 0x802b13c",
            "movw ip, 0x2605",
            "ldrb ip, [r0, ip]",
            "cmp ip, r1",
            "beq 0x802b2f4",
            "cmp r1, 0",
            "beq dhdpcie_pci_suspend_resume",
            "ldr r7, [0x0802b434]",
            "ldr r2, [r7]",
            "tst r2, 1",
            "bne 0x802b3ec",
            "mov r2, 0",
            "movw r5, 0x25f8",
            "str r2, [r4, r5]",
            "mov r8, 1",
            "movw r2, 0x2605",
            "strb r8, [r4, r2]",
            "mov r2, 3",
            "str r2, [r3, 0x14]",
            "movw r2, 0x195c",
            "ldr r3, [r4]",
            "ldrb r2, [r3, r2]",
            "cmp r2, 0",
            "bne 0x802b390",
            "mov r0, 0x7d0",
            "bl dhd_os_set_ioctl_resp_timeout",
            "mov r1, r8",
            "mov r0, r4",
            "bl sym.dhdpcie_send_mb_data",
            "add r1, r4, 0x25c0",
            "ldr r0, [r4]",
            "add r1, r1, 0x38",
            "bl dhd_os_d3ack_wait",
            "mov r8, r0",
            "mov r0, 0x7d0",
            "bl dhd_os_set_ioctl_resp_timeout",
            "ldr r5, [r4, r5]",
            "cmp r5, 0",
            "beq 0x802b314",
            "ldr r3, [r7]",
            "tst r3, 1",
            "bne 0x802b3dc",
            "ldr r0, [r4]",
            "bl dhd_os_check_wakelock_all",
            "subs r8, r0, 0",
            "beq 0x802b358",
            "ldr r3, [r7]",
            "tst r3, 1",
            "bne 0x802b400",
            "ldr r3, [r4]",
            "movw r2, 0x2605",
            "mov r1, 0",
            "mvn r5, 0",
            "strb r1, [r4, r2]",
            "mov r2, 2",
            "str r2, [r3, 0x14]",
            "ldr r3, [r4]",
            "mov r2, 0",
            "str r2, [r3, 0x2b8]",
            "mov r2, 1",
            "movw r3, 0x25f8",
            "str r2, [r4, r3]",
            "b 0x802b13c",
            "bl dhdpcie_pci_suspend_resume",
            "ldr r3, [r4]",
            "mov r5, r0",
            "ldr r2, [r3, 0x14]",
            "cmp r2, 3",
            "beq 0x802b3b8",
            "mov r1, 0",
            "movw r2, 0x2605",
            "strb r1, [r4, r2]",
            "mov r2, 2",
            "mov r0, r4",
            "str r2, [r3, 0x14]",
            "bl dhdpcie_bus_intr_enable",
            "b 0x802b13c",
            "ldr r0, [0x0802b444]",
            "mvn r5, 0",
            "bl printk",
            "b 0x802b13c",
            "ldr r3, [0x0802b434]",
            "ldr r5, [r3]",
            "ands r5, r5, 1",
            "beq 0x802b13c",
            "ldr r0, [0x0802b448]",
            "mov r5, r2",
            "bl printk",
            "b 0x802b13c",
            "cmp r8, 0",
            "bne 0x802b29c",
            "ldr r3, [r4]",
            "ldr r1, [r7]",
            "ldr r2, [r3, 0x2b8]",
            "tst r1, 1",
            "add r2, r2, 1",
            "str r2, [r3, 0x2b8]",
            "bne 0x802b40c",
            "ldr r3, [r4]",
            "movw r2, 0x2605",
            "mov r1, 0",
            "mvn r5, 0x6d",
            "strb r1, [r4, r2]",
            "mov r2, 2",
            "str r2, [r3, 0x14]",
            "b 0x802b29c",
            "mov r1, 8",
            "mov r0, r4",
            "bl sym.dhdpcie_send_mb_data",
            "mov r0, r4",
            "bl dhdpcie_bus_intr_disable",
            "mov r1, r6",
            "mov r0, r4",
            "bl dhdpcie_pci_suspend_resume",
            "mov r5, r0",
            "add r0, r4, 0x2600",
            "add r0, r0, 0x18",
            "mov r1, r8",
            "bl fcn.08028f04",
            "b 0x802b290",
            "ldr r2, [r7]",
            "tst r2, 1",
            "bne 0x802b424",
            "mov r2, 2",
            "mvn r5, 0xf",
            "str r2, [r3, 0x14]",
            "mov r2, 0",
            "movw r3, 0x2605",
            "strb r2, [r4, r3]",
            "b 0x802b13c",
            "mov r0, r4",
            "mov r1, 0x10",
            "bl sym.dhdpcie_send_mb_data",
            "add r0, r4, 0x2600",
            "mov r1, 1",
            "add r0, r0, 0x18",
            "bl fcn.08028f04",
            "ldr r3, [r4]",
            "b 0x802b2c4",
            "ldr r1, [0x0802b44c]",
            "ldr r0, [0x0802b450]",
            "bl printk",
            "b 0x802b258",
            "ldr r0, [0x0802b454]",
            "ldr r1, [0x0802b44c]",
            "bl printk",
            "ldr r3, [r4]",
            "b 0x802b1dc",
            "ldr r0, [0x0802b458]",
            "bl printk",
            "b 0x802b274",
            "ldr r3, [r4]",
            "ldr r1, [0x0802b44c]",
            "ldr r0, [0x0802b45c]",
            "ldr r2, [r3, 0x2b8]",
            "bl printk",
            "b 0x802b338",
            "ldr r0, [0x0802b460]",
            "bl printk",
            "ldr r3, [r4]",
            "b 0x802b39c"
        ]
    },
    "sym.dhdpcie_send_mb_data": {
        "function_address": "0x0802ad24",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r3, 0",
            "ldr r6, [0x0802afe8]",
            "sub sp, sp, 0x18",
            "mov r5, r0",
            "str r3, [sp, 0x14]",
            "ldr r3, [r6]",
            "str r1, [sp, 0xc]",
            "tst r3, 4",
            "bne 0x802afc4",
            "add r1, sp, 0x14",
            "mov r0, r5",
            "mov r2, 0xa",
            "mov r3, 0",
            "bl dhd_bus_cmn_readshared",
            "ldr r1, [sp, 0x14]",
            "cmp r1, 0",
            "beq 0x802add8",
            "ldr r3, [r6]",
            "tst r3, 4",
            "bne 0x802afac",
            "mov r0, 0xa",
            "mov r4, 2",
            "bl osl_delay",
            "mov r0, r5",
            "add r1, sp, 0x14",
            "mov r2, 0xa",
            "mov r3, 0",
            "bl dhd_bus_cmn_readshared",
            "b 0x802adc0",
            "bl osl_delay",
            "add r4, r4, 1",
            "mov r0, r5",
            "add r1, sp, 0x14",
            "mov r2, 0xa",
            "mov r3, 0",
            "bl dhd_bus_cmn_readshared",
            "cmp r4, 0x65",
            "beq 0x802aeec",
            "ldr r3, [sp, 0x14]",
            "mov r0, 0xa",
            "cmp r3, 0",
            "bne osl_delay",
            "cmp r4, 0x63",
            "bhi 0x802aeec",
            "mov r0, r5",
            "mov r3, 0xa",
            "mov ip, 0",
            "add r1, sp, 0xc",
            "mov r2, 4",
            "str ip, [sp]",
            "bl dhd_bus_cmn_writeshared",
            "ldr r0, [r5, 0x20]",
            "ldr r3, [r0, 0xc]",
            "cmp r3, 2",
            "cmpne r3, 6",
            "beq 0x802aebc",
            "cmp r3, 4",
            "beq 0x802aebc",
            "movw r3, 0x2604",
            "ldrb r3, [r5, r3]",
            "cmp r3, 0",
            "ldr r3, [r6]",
            "beq 0x802af28",
            "tst r3, 4",
            "bne 0x802afd8",
            "movw ip, 0x5678",
            "ldr r1, [r0, 0x10]",
            "movt ip, 0x1234",
            "mvn r3, 0",
            "mov r2, 0x144",
            "str ip, [sp]",
            "bl si_corereg",
            "ldr r3, [sp, 0xc]",
            "cmp r3, 1",
            "bne 0x802aed4",
            "ldr r2, [r6]",
            "tst r2, 4",
            "bne 0x802af8c",
            "movw r2, 0x261c",
            "cmp r3, 8",
            "ldr r1, [r5, r2]",
            "add r1, r1, 1",
            "str r1, [r5, r2]",
            "bne 0x802aedc",
            "ldr r2, [r6]",
            "tst r2, 4",
            "bne 0x802af78",
            "movw r2, 0x2624",
            "cmp r3, 0x10",
            "ldr r1, [r5, r2]",
            "add r1, r1, 1",
            "str r1, [r5, r2]",
            "bne 0x802aee4",
            "ldr r3, [r6]",
            "tst r3, 4",
            "bne 0x802af68",
            "movw r3, 0x2620",
            "ldr r2, [r5, r3]",
            "add r2, r2, 1",
            "str r2, [r5, r3]",
            "b 0x802aee4",
            "ldr r3, [r6]",
            "tst r3, 1",
            "bne 0x802afa0",
            "ldr r3, [sp, 0xc]",
            "cmp r3, 1",
            "beq 0x802ae54",
            "cmp r3, 8",
            "beq 0x802ae78",
            "cmp r3, 0x10",
            "beq 0x802ae9c",
            "add sp, sp, 0x18",
            "pop {r4, r5, r6, pc}",
            "ldr r3, [r6]",
            "tst r3, 1",
            "beq 0x802add8",
            "ldr r0, [0x0802afec]",
            "ldr r1, [0x0802aff0]",
            "bl printk",
            "ldr r3, [0x0802afe8]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "beq 0x802add8",
            "ldr r1, [0x0802aff0]",
            "ldr r2, [sp, 0x14]",
            "ldr r0, [0x0802aff4]",
            "bl printk",
            "b 0x802add8",
            "tst r3, 4",
            "bne 0x802af5c",
            "ldr r0, [r5, 0x184]",
            "mov r1, 0x98",
            "mov r2, 4",
            "mov r3, 1",
            "bl osl_pci_write_config",
            "ldr r0, [r5, 0x184]",
            "mov r1, 0x98",
            "mov r2, 4",
            "mov r3, 1",
            "bl osl_pci_write_config",
            "b 0x802aec8",
            "ldr r0, [0x0802aff8]",
            "bl printk",
            "b 0x802af30",
            "ldr r1, [0x0802aff0]",
            "ldr r0, [0x0802affc]",
            "bl printk",
            "b 0x802aea8",
            "ldr r0, [0x0802b000]",
            "ldr r1, [0x0802aff0]",
            "bl printk",
            "ldr r3, [sp, 0xc]",
            "b 0x802ae84",
            "ldr r0, [0x0802b004]",
            "ldr r1, [0x0802aff0]",
            "bl printk",
            "ldr r3, [sp, 0xc]",
            "b 0x802ae60",
            "ldr r0, [0x0802b008]",
            "bl printk",
            "b 0x802aec8",
            "ldr r0, [0x0802b00c]",
            "bl printk",
            "ldr r3, [sp, 0x14]",
            "cmp r3, 0",
            "beq 0x802add8",
            "b 0x802ad78",
            "ldr r1, [0x0802aff0]",
            "ldr r2, [sp, 0xc]",
            "ldr r0, [0x0802b010]",
            "bl printk",
            "b 0x802ad4c",
            "ldr r0, [0x0802b014]",
            "bl printk",
            "ldr r0, [r5, 0x20]",
            "b 0x802ae2c"
        ]
    },
    "fcn.08028f04": {
        "function_address": "0x08028f04",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r4, r0",
            "ldrb r3, [r0]",
            "mov r5, r1",
            "cmp r3, r1",
            "popeq {r3, r4, r5, pc}",
            "ldr r3, [0x08028f40]",
            "ldr r3, [r3]",
            "tst r3, 4",
            "bne 0x8028f34",
            "strb r5, [r4]",
            "pop {r3, r4, r5, pc}",
            "ldr r0, [0x08028f44]",
            "bl printk",
            "b 0x8028f2c"
        ]
    },
    "sym.dhd_remove_if": {
        "function_address": "0x0801c1d0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "movw r3, 0x18e0",
            "ldr sl, [r0, 0xc]",
            "add r7, r1, 0x660",
            "sub sp, sp, 0x14",
            "mov r8, r0",
            "ldr fp, [r0, r3]",
            "mov sb, r1",
            "str r2, [sp, 0xc]",
            "add r3, sl, r7, lsl 2",
            "ldr r4, [r3, 4]",
            "cmp r4, 0",
            "beq 0x801c31c",
            "ldr r2, [sl, 8]",
            "mov r6, 0",
            "ldr r3, [0x0801c44c]",
            "ldr r5, [r4, 8]",
            "add r3, r3, r2, lsl 4",
            "ldr r3, [r3, 4]",
            "subs r3, r3, r6",
            "movne r3, 1",
            "str r3, [sp, 8]",
            "bl dhd_wmf_cleanup",
            "ldr ip, [r8, 0xdc]",
            "mov r3, r6",
            "ldr r1, [r4, 0x1f8]",
            "mov r2, 1",
            "ldr r0, [r8]",
            "stm sp, {r6, ip}",
            "bl bcm_l2_filter_arp_table_update",
            "ldr r0, [r8]",
            "ldr r1, [r4, 0x1f8]",
            "bl deinit_l2_filter_arp_table",
            "str r6, [r4, 0x1f8]",
            "mov r2, 0x40",
            "ldr r0, [r8]",
            "ldr r1, [r4, 0x200]",
            "bl osl_mfree",
            "str r6, [r4, 0x200]",
            "mov r0, r4",
            "strb r6, [r4, 0x204]",
            "bl fcn.08019d44",
            "add r3, sb, sb, lsl 8",
            "add fp, fp, r3, lsl 2",
            "ldrb r3, [fp, 1]",
            "cmp r3, 2",
            "beq 0x801c3fc",
            "add r7, sl, r7, lsl 2",
            "mov r3, 0",
            "str r3, [r4, 0x208]",
            "mov r1, r4",
            "str r3, [r7, 4]",
            "mov r2, 0x210",
            "ldr r0, [sl, 0xc]",
            "movw r7, 0x1974",
            "bl osl_mfree",
            "ldr r6, [0x0801c450]",
            "mov r1, sb",
            "ldr r0, [sl, r7]",
            "bl wfd_unregisterdevice",
            "cmp r0, 0",
            "ldr r3, [r6]",
            "bne 0x801c328",
            "tst r3, 4",
            "bne 0x801c434",
            "ldr r1, [sp, 8]",
            "cmp r1, 0",
            "bne 0x801c3e4",
            "cmp r5, 0",
            "beq 0x801c308",
            "ldr r3, [r6]",
            "tst r3, 1",
            "bne 0x801c424",
            "ldrb r3, [r5, 0x2c0]",
            "cmp r3, 0",
            "bne local_bh_disable",
            "mov r0, r5",
            "bl free_netdev",
            "ldr r3, [sp, 8]",
            "cmp r3, 0",
            "beq 0x801c31c",
            "mov r0, r8",
            "bl dhd_perim_lock",
            "mov r0, 0",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "tst r3, 1",
            "beq 0x801c2d4",
            "ldr r1, [0x0801c454]",
            "mov r3, sb",
            "ldr r2, [sl, r7]",
            "ldr r0, [0x0801c458]",
            "bl printk",
            "b 0x801c2d4",
            "bl local_bh_disable",
            "ldr r3, [r5, 0x264]",
            "mov r1, sp",
            "bic r2, r1, 0x1fc0",
            "bic r2, r2, 0x3f",
            "cmp r3, 0",
            "ldr fp, [r2, 0x14]",
            "beq local_bh_enable",
            "mov r7, 0",
            "mov sl, r7",
            "ldr r6, [r5, 0x260]",
            "add r6, r6, r7",
            "add sb, r6, 0x40",
            "mov r0, sb",
            "bl _raw_spin_lock",
            "cmp r6, 0",
            "mov r0, 0",
            "add r1, r6, 0x54",
            "str fp, [r6, 0x48]",
            "beq 0x801c40c",
            "bl _set_bit",
            "mvn r3, 0",
            "mov r0, sb",
            "str r3, [r6, 0x48]",
            "add sl, sl, 1",
            "bl _raw_spin_unlock",
            "ldr r3, [r5, 0x264]",
            "add r7, r7, 0xc0",
            "cmp sl, r3",
            "blo 0x801c370",
            "bl local_bh_enable",
            "ldr r1, [sp, 0xc]",
            "mov r3, 0",
            "mov r0, r5",
            "str r3, [r4, 4]",
            "cmp r1, 0",
            "beq 0x801c3f0",
            "bl unregister_netdev",
            "b 0x801c308",
            "mov r0, r8",
            "bl dhd_perim_unlock",
            "b 0x801c2e0",
            "ldr r1, [sp, 0xc]",
            "bl unregister_netdevice_queue",
            "b 0x801c308",
            "mov r0, r8",
            "uxtb r1, sb",
            "bl dhd_flow_rings_delete",
            "b 0x801c28c",
            "ldr r0, [0x0801c45c]",
            "movw r1, 0x777",
            "bl warn_slowpath_null",
            "ldr r0, [0x0801c460]",
            "bl printk",
            "b 0x801c39c",
            "mov r1, r5",
            "ldr r0, [0x0801c464]",
            "bl printk",
            "b 0x801c2f4",
            "mov r3, sb",
            "ldr r1, [0x0801c454]",
            "ldr r2, [sl, r7]",
            "ldr r0, [0x0801c468]",
            "bl printk",
            "b 0x801c2d4"
        ]
    },
    "sym.dhd_bus_console_in": {
        "function_address": "0x0802b018",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sl, lr}",
            "mov r7, r2",
            "ldr r4, [r0, 4]",
            "sub sp, sp, 0x14",
            "mov r8, r1",
            "ldr r2, [r4, 0x15c]",
            "cmp r2, 0",
            "mvneq sl, 0x16",
            "beq 0x802b0cc",
            "ldr r0, [r4]",
            "ldrb r3, [r0, 0x12]",
            "cmp r3, 0",
            "bne 0x802b0d8",
            "add r5, sp, 0x10",
            "mov r6, 4",
            "str r3, [r5, -4]!",
            "mov r0, r4",
            "mov r1, 1",
            "add r2, r2, 0x18",
            "mov r3, r5",
            "str r6, [sp]",
            "bl fcn.08027c78",
            "subs sl, r0, 0",
            "blt 0x802b0cc",
            "ldr r2, [r4, 0x15c]",
            "mov r0, r4",
            "mov r1, 1",
            "mov r3, r8",
            "str r7, [sp]",
            "add r2, r2, 0x1c",
            "bl fcn.08027c78",
            "subs sl, r0, 0",
            "blt 0x802b0cc",
            "ldr r2, [r4, 0x15c]",
            "mov r0, r4",
            "mov r1, 1",
            "mov r3, r5",
            "str r7, [sp, 0xc]",
            "str r6, [sp]",
            "bl fcn.08027c78",
            "subs sl, r0, 0",
            "blt 0x802b0cc",
            "mov r0, r4",
            "mov r1, 0x80000000",
            "bl sym.dhdpcie_send_mb_data",
            "mov r0, sl",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sl, pc}",
            "mvn sl, 0x18",
            "bl dhd_os_sdunlock",
            "b 0x802b0cc"
        ]
    },
    "sym.sb_setcoreidx": {
        "function_address": "0x08010454",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "movw r3, 0x488c",
            "ldr r3, [r0, r3]",
            "mov r4, r0",
            "mov r5, r1",
            "cmp r3, r1",
            "bls 0x8010488",
            "bl fcn.0800fce0",
            "movw r3, 0x4884",
            "str r0, [r4, r3]",
            "add r3, r3, 4",
            "str r5, [r4, r3]",
            "pop {r3, r4, r5, pc}",
            "mov r0, 0",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.0800fce0": {
        "function_address": "0x0800fce0",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "movw r2, 0x4898",
            "ldr r3, [r0, 4]",
            "sub sp, sp, 0xc",
            "mov r4, r0",
            "mov r7, r1",
            "ldr r6, [r0, r2]",
            "add r2, r1, 0x40",
            "cmp r3, 1",
            "ldr r5, [r6, r2, lsl 2]",
            "beq 0x800fdb0",
            "blo 0x800fd8c",
            "cmp r3, 2",
            "movne r2, 0",
            "bne 0x800fd80",
            "add r6, sp, 8",
            "movw r7, 0x4858",
            "ubfx r3, r5, 0xc, 4",
            "ldr r0, [r0, r7]",
            "strb r3, [r6, -1]!",
            "movw r1, 0x397",
            "mov r2, r6",
            "mov r3, 1",
            "bl osl_pcmcia_write_attr",
            "lsr ip, r5, 0x10",
            "ldr r0, [r4, r7]",
            "mov r1, 0x398",
            "lsr r5, r5, 0x18",
            "mov r2, r6",
            "strb ip, [sp, 7]",
            "mov r3, 1",
            "bl osl_pcmcia_write_attr",
            "mov r2, r6",
            "mov r3, 1",
            "ldr r0, [r4, r7]",
            "movw r1, 0x399",
            "strb r5, [sp, 7]",
            "bl osl_pcmcia_write_attr",
            "movw r3, 0x4884",
            "ldr r2, [r4, r3]",
            "mov r0, r2",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, pc}",
            "ldr r2, [r6, r1, lsl 2]",
            "cmp r2, 0",
            "bne 0x800fd80",
            "mov r0, r5",
            "mov r1, 0x1000",
            "bl __arm_ioremap",
            "mov r2, r0",
            "str r0, [r6, r7, lsl 2]",
            "b 0x800fd80",
            "movw r3, 0x4858",
            "mov r2, 4",
            "ldr r0, [r0, r3]",
            "mov r1, 0x80",
            "mov r3, r5",
            "bl osl_pci_write_config",
            "movw r3, 0x4884",
            "ldr r2, [r4, r3]",
            "b 0x800fd80"
        ]
    },
    "sym.dhdmsgbuf_dmaxfer_req": {
        "function_address": "0x080259ac",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r7, r3",
            "ldr r5, [r0, 8]",
            "mov r4, 0",
            "sub sp, sp, 0x10",
            "mov r6, r0",
            "mov r8, r2",
            "strh r4, [sp, 0xe]",
            "ldrb r3, [r5, 0x2f4]",
            "cmp r3, r4",
            "beq 0x80259f0",
            "ldr r3, [0x08025ba0]",
            "ldr r0, [r3]",
            "ands r0, r0, 1",
            "bne 0x8025b90",
            "add sp, sp, 0x10",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}",
            "adds r4, r5, 0x2b8",
            "mov r3, 1",
            "strb r3, [r5, 0x2f4]",
            "beq 0x8025b5c",
            "cmp r1, 0x400000",
            "movlo sl, r1",
            "movhs sl, 0x400000",
            "mov r1, r4",
            "bl fcn.08023418",
            "mov r0, r6",
            "mov r1, r4",
            "mov r2, sl",
            "bl fcn.08024488",
            "cmp r0, 0",
            "bne 0x8025b4c",
            "mov r0, r6",
            "add r1, r5, 0x2d0",
            "add r2, sl, 8",
            "bl fcn.08024488",
            "cmp r0, 0",
            "bne 0x8025b64",
            "cmp sl, 0",
            "str sl, [r5, 0x2f0]",
            "moveq r1, sl",
            "beq 0x8025a6c",
            "ldr r3, [r4]",
            "strb r0, [r3, r0]",
            "add r0, r0, 1",
            "ldr r1, [r4, 0x38]",
            "cmp r0, r1",
            "blo 0x8025a54",
            "ldr r0, [r5, 0x2b8]",
            "add sb, r5, 0x18",
            "bl osl_cache_flush",
            "mov sl, 0",
            "str r7, [r5, 0x2ec]",
            "str r8, [r5, 0x2e8]",
            "mov r0, r6",
            "mov r1, sb",
            "mov r2, 1",
            "add r3, sp, 0xe",
            "str sl, [sp]",
            "bl dhd_prot_alloc_ring_space",
            "subs r7, r0, 0",
            "beq 0x8025b78",
            "movw r3, 0xace0",
            "mov r2, 0x13",
            "movt r3, 0xf",
            "movw ip, 0x8da9",
            "str r3, [r7, 4]",
            "movt ip, 0x8184",
            "strb r2, [r7]",
            "mov r0, r6",
            "ldr lr, [r5, 0x44]",
            "umull r3, ip, ip, lr",
            "lsr ip, ip, 7",
            "mov r3, 1",
            "mov r1, sb",
            "rsb r4, ip, ip, lsl 6",
            "mov r2, r7",
            "add ip, ip, r4, lsl 2",
            "rsb lr, ip, lr",
            "strb lr, [r7, 3]",
            "ldr ip, [r5, 0x44]",
            "add ip, ip, r3",
            "str ip, [r5, 0x44]",
            "str sl, [r7, 0xc]",
            "ldr ip, [r5, 0x2c0]",
            "str sl, [r7, 0x14]",
            "str ip, [r7, 8]",
            "ldr ip, [r5, 0x2d8]",
            "str ip, [r7, 0x10]",
            "ldr ip, [r5, 0x2f0]",
            "str ip, [r7, 0x18]",
            "ldr ip, [r5, 0x2e8]",
            "str ip, [r7, 0x1c]",
            "ldr ip, [r5, 0x2ec]",
            "str ip, [r7, 0x20]",
            "bl dhd_prot_ring_write_complete",
            "ldr r3, [0x08025ba0]",
            "ldr r0, [r3]",
            "ands r0, r0, 1",
            "beq 0x80259e8",
            "ldr r0, [0x08025ba4]",
            "bl printk",
            "mov r0, sl",
            "b 0x80259e8",
            "mvn r0, 0x1a",
            "mov r3, 0",
            "strb r3, [r5, 0x2f4]",
            "b 0x80259e8",
            "mvn r0, 0",
            "b 0x8025b50",
            "mov r0, r6",
            "mov r1, r4",
            "bl fcn.080233d4",
            "mvn r0, 0x1a",
            "b 0x8025b50",
            "mov r0, r6",
            "mov r1, r4",
            "bl fcn.08023418",
            "strb r7, [r5, 0x2f4]",
            "mvn r0, 0x1a",
            "b 0x80259e8",
            "ldr r0, [0x08025ba8]",
            "bl printk",
            "mov r0, r4",
            "b 0x80259e8"
        ]
    },
    "sym.dhd_prot_ioctl": {
        "function_address": "0x080254fc",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r8, r1",
            "ldr r1, [r0, 0x14]",
            "sub sp, sp, 0x1c",
            "mov r4, r0",
            "mov r6, r2",
            "mov r5, r3",
            "cmp r1, 0",
            "beq 0x802552c",
            "ldr r3, [r0, 0x2ac]",
            "cmp r3, 0",
            "beq 0x802554c",
            "ldr r3, [0x0802588c]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "bne 0x80257a0",
            "mvn r8, 0",
            "mov r0, r8",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "cmp r1, 3",
            "beq 0x8025614",
            "ldr r7, [0x0802588c]",
            "ldr r3, [r7]",
            "tst r3, 2",
            "bne 0x80257f0",
            "ldr ip, [sp, 0x40]",
            "cmp ip, 0x2000",
            "bgt 0x802553c",
            "ldr sl, [r6]",
            "adds sb, r5, 0",
            "movne sb, 1",
            "movw fp, 0x107",
            "ldrb ip, [r6, 0xc]",
            "cmp sl, fp",
            "movne r2, 0",
            "andeq r2, sb, 1",
            "ldr r3, [r4, 8]",
            "cmp r2, 0",
            "str ip, [sp, 0xc]",
            "beq 0x80255c0",
            "mov r0, r5",
            "ldr r1, [0x08025890]",
            "str r3, [sp, 8]",
            "bl strcmp",
            "subs sl, r0, 0",
            "ldr r3, [sp, 8]",
            "movne sl, fp",
            "beq 0x80257b4",
            "ldr ip, [sp, 0xc]",
            "ldr r3, [r7]",
            "tst ip, 1",
            "beq 0x8025638",
            "tst r3, 2",
            "bne 0x802584c",
            "ldr r3, [r4, 0x14]",
            "cmp r3, 0",
            "beq 0x8025764",
            "ldr r3, [r4, 0x2ac]",
            "cmp r3, 0",
            "beq 0x802571c",
            "ldr r3, [r7]",
            "tst r3, 1",
            "bne 0x8025800",
            "mvn r8, 4",
            "ldr r3, [r7]",
            "tst r3, 4",
            "bne 0x8025814",
            "str r8, [r4, 0xe0]",
            "b 0x8025540",
            "ldr r3, [0x0802588c]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "beq 0x802553c",
            "ldr r1, [0x08025894]",
            "mvn r8, 0",
            "ldr r0, [0x08025898]",
            "bl printk",
            "b 0x8025540",
            "tst r3, 2",
            "bne 0x802585c",
            "movw r3, 0x106",
            "cmp sl, r3",
            "movne r3, 0",
            "andeq r3, sb, 1",
            "cmp r3, 0",
            "beq 0x8025688",
            "mov r0, r5",
            "ldr r1, [0x0802589c]",
            "bl strcmp",
            "cmp r0, 0",
            "beq 0x8025784",
            "mov r0, r5",
            "ldr r1, [0x080258a0]",
            "bl strcmp",
            "cmp r0, 0",
            "ldreq r3, [r4, 0xe0]",
            "streq r3, [r5]",
            "beq 0x80256cc",
            "ldr ip, [sp, 0x40]",
            "mov r3, r5",
            "mov r0, r4",
            "mov r2, sl",
            "str r8, [sp]",
            "uxth r1, ip",
            "bl fcn.08023874",
            "ldr r3, [r7]",
            "tst r3, 0x10",
            "bne 0x802582c",
            "mov r0, r4",
            "ldr r1, [sp, 0x40]",
            "mov r2, r5",
            "bl fcn.08024158",
            "subs r8, r0, 0",
            "strgt r8, [r6, 0x10]",
            "ble 0x8025758",
            "ldr r8, [r6]",
            "movw r3, 0x107",
            "cmp r8, r3",
            "movne r8, 0",
            "andeq r8, sb, 1",
            "cmp r8, 0",
            "beq 0x8025540",
            "mov r0, r5",
            "ldr r1, [0x080258a4]",
            "bl strcmp",
            "cmp r0, 0",
            "movne r8, 0",
            "bne 0x8025540",
            "ldr ip, [sp, 0x40]",
            "str r0, [sp, 0x14]",
            "cmp ip, 0xa",
            "bgt 0x80257d8",
            "strb r0, [r4, 0x24]",
            "mov r8, 0",
            "b 0x8025540",
            "ldr ip, [sp, 0x40]",
            "mov r3, r5",
            "mov r0, r4",
            "mov r2, sl",
            "str r8, [sp]",
            "uxth r1, ip",
            "bl fcn.08023874",
            "ldr r3, [r7]",
            "tst r3, 0x10",
            "bne 0x802586c",
            "mov r0, r4",
            "ldr r1, [sp, 0x40]",
            "mov r2, r5",
            "bl fcn.08024158",
            "mov r8, r0",
            "cmp r8, 0",
            "blt 0x8025600",
            "b 0x80256cc",
            "ldr r3, [r7]",
            "tst r3, 1",
            "beq 0x80255fc",
            "ldr r1, [0x080258a8]",
            "mvn r8, 4",
            "ldr r0, [0x080258ac]",
            "bl printk",
            "b 0x8025600",
            "ldr r0, [r4, 0xe0]",
            "bl bcmerrorstr",
            "mov r2, 0x40",
            "mov r1, r0",
            "mov r0, r5",
            "bl strncpy",
            "b 0x80256cc",
            "ldr r1, [0x08025894]",
            "mvn r8, 0",
            "ldr r0, [0x080258ac]",
            "bl printk",
            "b 0x8025540",
            "add r1, r3, 0x290",
            "add r0, r5, 0x12",
            "mov r2, 4",
            "bl memcpy",
            "mov r3, 8",
            "strb sl, [r5, 0x10]",
            "strb r3, [r5, 0x11]",
            "ldr sl, [r6]",
            "b 0x80255c0",
            "add r0, sp, 0x14",
            "add r1, r5, 7",
            "mov r2, 4",
            "bl memcpy",
            "ldrb r0, [sp, 0x14]",
            "b 0x8025710",
            "ldr r1, [0x08025894]",
            "ldr r0, [0x080258b0]",
            "bl printk",
            "b 0x8025564",
            "ldr r1, [0x080258a8]",
            "mvn r8, 4",
            "ldr r0, [0x080258b4]",
            "bl printk",
            "b 0x8025600",
            "ldr r0, [0x080258b8]",
            "mov r2, r8",
            "ldr r1, [0x08025894]",
            "bl printk",
            "str r8, [r4, 0xe0]",
            "b 0x8025540",
            "ldr ip, [sp, 0x40]",
            "mov r2, r8",
            "ldr r1, [sp, 0xc]",
            "mov r3, sl",
            "ldr r0, [0x080258bc]",
            "str ip, [sp]",
            "bl printk",
            "b 0x80256b0",
            "ldr r1, [0x080258a8]",
            "ldr r0, [0x080258c0]",
            "bl printk",
            "b 0x80255d8",
            "ldr r1, [0x080258c4]",
            "ldr r0, [0x080258b0]",
            "bl printk",
            "b 0x8025640",
            "ldr ip, [sp, 0x40]",
            "mov r2, r8",
            "ldr r1, [sp, 0xc]",
            "mov r3, sl",
            "ldr r0, [0x080258c8]",
            "str ip, [sp]",
            "bl printk",
            "b 0x8025744"
        ]
    },
    "fcn.08023874": {
        "function_address": "0x08023874",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov ip, 0",
            "ldr r4, [r0, 8]",
            "sub sp, sp, 0x1c",
            "mov r7, r0",
            "mov r8, r1",
            "mov sb, r2",
            "mov sl, r3",
            "ldrb r6, [r4, 0x1d0]",
            "mov fp, ip",
            "strh ip, [sp, 0x16]",
            "cmp r6, ip",
            "beq 0x80238c4",
            "ldr r3, [0x08023a58]",
            "ldr r3, [r3]",
            "tst r3, 0x10",
            "mvneq r0, 0xf",
            "bne 0x8023a18",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "add ip, r4, 0x18",
            "mov r3, 3",
            "strb r3, [r4, 0x1d0]",
            "mov r1, ip",
            "mov r2, 1",
            "add r3, sp, 0x16",
            "str ip, [sp, 0xc]",
            "str r6, [sp]",
            "bl dhd_prot_alloc_ring_space",
            "subs r5, r0, 0",
            "beq 0x80239f8",
            "mov r2, 9",
            "movw r1, 0xffe0",
            "strb r2, [r5]",
            "movt r1, 0xf",
            "ldr r2, [sp, 0x40]",
            "movw r3, 0x8da9",
            "strb fp, [r5, 2]",
            "movt r3, 0x8184",
            "str r1, [r5, 4]",
            "movw r0, 0x7d8",
            "strb r2, [r5, 1]",
            "mov r2, 0x2fc",
            "ldr r1, [r4, 0x44]",
            "umull ip, r3, r3, r1",
            "lsr r3, r3, 7",
            "cmp r8, r0",
            "movlo r0, r8",
            "cmp sl, 0",
            "rsb ip, r3, r3, lsl 6",
            "add r3, r3, ip, lsl 2",
            "rsb r1, r3, r1",
            "strb r1, [r5, 3]",
            "ldr r3, [r4, 0x44]",
            "add r3, r3, 1",
            "str r3, [r4, 0x44]",
            "str sb, [r5, 8]",
            "strh r8, [r5, 0x10]",
            "ldrh r3, [r4, r2]",
            "add r3, r3, 1",
            "uxth r3, r3",
            "strh r3, [r4, r2]",
            "strh r0, [r5, 0xe]",
            "strh r3, [r5, 0xc]",
            "str r6, [r5, 0x1c]",
            "ldr r3, [r4, 0x1fc]",
            "str r3, [r5, 0x18]",
            "ldr r6, [r4, 0x1f4]",
            "mov r0, r6",
            "beq 0x802399c",
            "mov r1, sl",
            "mov r2, r8",
            "bl memcpy",
            "ldr r0, [r4, 0x1f4]",
            "mov r1, r8",
            "bl osl_cache_flush",
            "tst r6, 3",
            "bne 0x80239d8",
            "ldr r3, [0x08023a58]",
            "ldr r3, [r3]",
            "tst r3, 0x10",
            "bne 0x8023a2c",
            "mov r0, r7",
            "ldr r1, [sp, 0xc]",
            "mov r2, r5",
            "mov r3, 1",
            "bl dhd_prot_ring_write_complete",
            "mov r0, 0",
            "b 0x80238bc",
            "ldr r4, [0x08023a58]",
            "ldr r3, [r4]",
            "tst r3, 1",
            "beq 0x80239b4",
            "ldr r0, [0x08023a5c]",
            "bl printk",
            "ldr r3, [r4]",
            "b 0x80239b4",
            "ldr r3, [0x08023a58]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "bne 0x8023a4c",
            "mov r3, 0",
            "mvn r0, 0",
            "strb r3, [r4, 0x1d0]",
            "b 0x80238bc",
            "ldr r0, [0x08023a60]",
            "mov r1, r6",
            "bl printk",
            "mvn r0, 0xf",
            "b 0x80238bc",
            "ldrh r1, [r5, 0xc]",
            "mov r2, sb",
            "ldrh r3, [r5, 0x10]",
            "ldr r0, [0x08023a64]",
            "str r1, [sp]",
            "ldr r1, [r5, 4]",
            "bl printk",
            "b 0x80239bc",
            "ldr r0, [0x08023a68]",
            "bl printk",
            "b 0x8023a08"
        ]
    },
    "fcn.08024158": {
        "function_address": "0x08024158",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r4, r0",
            "ldr r5, [0x0802430c]",
            "mov r7, r1",
            "mov r6, r2",
            "ldr r8, [r0, 8]",
            "ldr r3, [r5]",
            "tst r3, 2",
            "bne 0x80242b0",
            "ldrb r3, [r4, 0x12]",
            "cmp r3, 0",
            "bne 0x80242a4",
            "ldrh r3, [r8, 0xe]",
            "mov r0, r4",
            "cmp r3, 0",
            "subne r3, r3, 1",
            "strhne r3, [r8, 0xe]",
            "bl fcn.080240d8",
            "mov r0, r4",
            "add r1, r8, 0x1d8",
            "bl dhd_os_ioctl_resp_wait",
            "cmp r0, 0",
            "beq 0x802421c",
            "ldr r2, [r5]",
            "mov r1, 0",
            "ldr r3, [r4, 0x7c]",
            "str r1, [r4, 0x2b0]",
            "tst r2, 0x10",
            "add r3, r3, 1",
            "str r3, [r4, 0x7c]",
            "bne 0x80242d0",
            "ldrb r3, [r4, 0x2a9]",
            "cmp r3, 0",
            "beq 0x8024260",
            "ldr r3, [r5]",
            "tst r3, 1",
            "bne 0x80242fc",
            "ldr r3, [r4, 8]",
            "mvn r0, 0x78",
            "ldrb r1, [r3, 0x1d0]",
            "mov r2, 0",
            "bic r1, r1, 2",
            "strb r1, [r3, 0x1d0]",
            "mov r3, 0x1d4",
            "ldr r1, [r4, 8]",
            "strh r2, [r1, r3]",
            "ldr r3, [r4, 8]",
            "str r2, [r3, 0x1d8]",
            "pop {r4, r5, r6, r7, r8, pc}",
            "ldr r1, [r5]",
            "ldr r2, [r4, 0x2b0]",
            "ldr r3, [r4, 0x80]",
            "tst r1, 1",
            "add r2, r2, 1",
            "add r3, r3, 1",
            "str r2, [r4, 0x2b0]",
            "str r3, [r4, 0x80]",
            "bne 0x80242e8",
            "cmp r2, 0",
            "ble 0x8024254",
            "ldr r3, [r5]",
            "tst r3, 1",
            "bne 0x80242c0",
            "ldr r3, [r4, 8]",
            "mvn r0, 0x6d",
            "b 0x80241f4",
            "ldr r3, [r4, 8]",
            "mov r2, 0x1d4",
            "ldrh r1, [r3, r2]",
            "cmp r1, r7",
            "strhhi r7, [r3, r2]",
            "ldrhi r3, [r4, 8]",
            "cmp r6, 0",
            "beq 0x8024298",
            "mov r2, 0x1d4",
            "ldr r1, [r3, 0x1dc]",
            "ldrh r2, [r3, r2]",
            "mov r0, r6",
            "bl memcpy",
            "ldr r3, [r4, 8]",
            "movw r2, 0x1d2",
            "ldrsh r0, [r3, r2]",
            "b 0x80241f4",
            "ldr r3, [r4, 8]",
            "mvn r0, 4",
            "b 0x80241f4",
            "ldr r1, [0x08024310]",
            "ldr r0, [0x08024314]",
            "bl printk",
            "b 0x802417c",
            "ldr r1, [0x08024310]",
            "ldr r0, [0x08024318]",
            "bl printk",
            "b 0x8024254",
            "mov r3, 0x1d4",
            "ldr r1, [0x08024310]",
            "ldrh r2, [r8, r3]",
            "ldr r0, [0x0802431c]",
            "bl printk",
            "b 0x80241d4",
            "ldr r0, [0x08024320]",
            "ldr r1, [0x08024310]",
            "bl printk",
            "ldr r2, [r4, 0x2b0]",
            "b 0x8024240",
            "ldr r1, [0x08024310]",
            "ldr r0, [0x08024324]",
            "bl printk",
            "b 0x80241ec"
        ]
    },
    "sym.sb_scan": {
        "function_address": "0x08010320",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "movw r6, 0x4884",
            "ldr r3, [r0, r6]",
            "mov r5, r1",
            "mov r4, r0",
            "sub sp, sp, 0x10",
            "add r1, r3, 0xff0",
            "add r1, r1, 8",
            "bl fcn.0800f9b4",
            "ldr r3, [r4, 4]",
            "lsr r0, r0, 0x1c",
            "str r0, [r4, 0x50]",
            "cmp r3, 1",
            "beq 0x8010438",
            "bhs 0x80103c8",
            "ldr r1, [r4, r6]",
            "mov r0, r4",
            "add r1, r1, 0xfb0",
            "bl fcn.0800f9b4",
            "ands r3, r0, 3",
            "biceq r1, r0, 0xff",
            "beq 0x801039c",
            "cmp r3, 1",
            "biceq r1, r0, 0xff0",
            "biceq r1, r1, 0xf",
            "beq 0x801039c",
            "cmp r3, 2",
            "lsreq r1, r0, 0x10",
            "lsleq r1, r1, 0x10",
            "beq 0x801039c",
            "mov r1, 0",
            "mov r3, 0",
            "mov ip, 0x18000000",
            "mov lr, 1",
            "mov r0, r4",
            "mov r2, r5",
            "stm sp, {ip, lr}",
            "bl fcn.0800fe88",
            "movw r3, 0x488c",
            "str r0, [r4, r3]",
            "add sp, sp, 0x10",
            "pop {r4, r5, r6, r7, r8, pc}",
            "cmp r3, 2",
            "bne 0x8010398",
            "add r6, sp, 0x10",
            "movw r8, 0x4858",
            "mov r3, 0",
            "ldr r0, [r4, r8]",
            "strb r3, [r6, -1]!",
            "movw r1, 0x397",
            "mov r2, r6",
            "mov r3, 1",
            "bl osl_pcmcia_read_attr",
            "ldrb r7, [sp, 0xf]",
            "mov r1, 0x398",
            "ldr r0, [r4, r8]",
            "mov r2, r6",
            "mov r3, 1",
            "bl osl_pcmcia_read_attr",
            "ldrb ip, [sp, 0xf]",
            "lsl r7, r7, 0xc",
            "movw r1, 0x399",
            "ldr r0, [r4, r8]",
            "mov r2, r6",
            "mov r3, 1",
            "orr r7, r7, ip, lsl 16",
            "bl osl_pcmcia_read_attr",
            "ldrb r1, [sp, 0xf]",
            "orr r1, r7, r1, lsl 24",
            "b 0x801039c",
            "movw r3, 0x4858",
            "mov r1, 0x80",
            "ldr r0, [r4, r3]",
            "mov r2, 4",
            "bl osl_pci_read_config",
            "mov r1, r0",
            "b 0x801039c"
        ]
    },
    "fcn.0800fe88": {
        "function_address": "0x0800fe88",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "cmp r3, 1",
            "sub sp, sp, 0x2c",
            "mov r4, r0",
            "str r3, [sp, 0x18]",
            "movw r3, 0x4898",
            "str r2, [sp, 0x14]",
            "str r1, [sp, 0x10]",
            "ldr r2, [r0, r3]",
            "movhi r0, 0",
            "ldr sl, [sp, 0x54]",
            "bls 0x800fec0",
            "add sp, sp, 0x2c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "movw r3, 0x488c",
            "adds r0, sl, 0",
            "ldr sb, [r4, r3]",
            "movne r0, 1",
            "cmp sb, 0xf",
            "movhi r0, 0",
            "cmp r0, 0",
            "beq 0x80100b4",
            "add r7, sb, 0x3f",
            "add r5, sb, 1",
            "add r7, r2, r7, lsl 2",
            "mov r2, 0",
            "ldr r6, [sp, 0x50]",
            "movw r8, 0x4884",
            "str r2, [sp, 0x1c]",
            "b 0x800ff30",
            "cmp r0, 0x830",
            "beq 0x800ffe0",
            "cmp r5, 0xf",
            "rsb r0, sb, r5",
            "movhi r3, 0",
            "movls r3, 1",
            "cmp sl, r0",
            "add r6, r6, 0x1000",
            "movls r3, 0",
            "add r5, r5, 1",
            "cmp r3, 0",
            "beq 0x80100ac",
            "str r6, [r7, 4]!",
            "sub fp, r5, 1",
            "ldr r3, [r4, 4]",
            "cmp r3, 0",
            "bne 0x800ff54",
            "ldr r3, [sp, 0x10]",
            "cmp r6, r3",
            "ldreq lr, [sp, 0x14]",
            "streq lr, [r7, -0x100]",
            "mov r1, fp",
            "mov r0, r4",
            "bl fcn.0800fce0",
            "movw r2, 0x4888",
            "str fp, [r4, r2]",
            "str r0, [r4, r8]",
            "mov r0, r4",
            "bl sb_coreid",
            "cmp r0, 0x800",
            "str r0, [r7, -0x80]",
            "bne 0x800ff00",
            "mov r0, r4",
            "ldr sl, [r4, r8]",
            "bl sb_corerev",
            "sub r2, r0, 4",
            "rsbs r3, r2, 0",
            "adc r3, r3, r2",
            "cmp r0, 5",
            "orrhi r3, r3, 1",
            "cmp r3, 0",
            "bne 0x8010088",
            "ldr r3, [r4, 0x3c]",
            "movw r2, 0x4306",
            "cmp r3, r2",
            "moveq sl, 6",
            "beq 0x800ff08",
            "movw r2, 0x4704",
            "cmp r3, r2",
            "moveq sl, 9",
            "beq 0x800ff08",
            "movw sl, 0x5365",
            "cmp r3, sl",
            "moveq sl, 7",
            "movne sl, 1",
            "b 0x800ff08",
            "ldr ip, [r4, r8]",
            "mov r0, r4",
            "add r1, ip, 0xf70",
            "str ip, [sp, 0xc]",
            "bl fcn.0800f9b4",
            "movw r3, 0x488c",
            "str r5, [r4, r3]",
            "lsr r3, r0, 0x14",
            "ldr ip, [sp, 0xc]",
            "cmp r3, 0x180",
            "bne 0x800ff08",
            "movw r3, 0x4898",
            "bic r0, r0, 0xff0",
            "ldr r2, [r4, r3]",
            "bic fp, r0, 0xf",
            "mov r3, 0",
            "add r2, r2, 0xfc",
            "ldr r1, [r2, 4]!",
            "add r3, r3, 1",
            "cmp fp, r1",
            "beq 0x800ff08",
            "cmp r3, r5",
            "blo 0x8010024",
            "add r1, ip, 0xf90",
            "mov r0, r4",
            "add r1, r1, 0xc",
            "bl fcn.0800f9b4",
            "ldr lr, [sp, 0x18]",
            "ubfx ip, r0, 0x10, 4",
            "ldr r2, [sp, 0x14]",
            "mov r0, r4",
            "ldr r1, [sp, 0x10]",
            "add r3, lr, 1",
            "stm sp, {fp, ip}",
            "bl fcn.0800fe88",
            "ldr r2, [sp, 0x50]",
            "cmp r2, 0x18000000",
            "beq 0x80100c0",
            "ldr r2, [sp, 0x1c]",
            "add r2, r2, r0",
            "str r2, [sp, 0x1c]",
            "b 0x800ff08",
            "movw r3, 0x4858",
            "mov r1, sl",
            "ldr r0, [r4, r3]",
            "add r2, sp, 0x24",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "ldr sl, [sp, 0x24]",
            "ubfx sl, sl, 0x18, 4",
            "b 0x800ff08",
            "ldr r3, [sp, 0x1c]",
            "add r0, r3, r0",
            "movw r3, 0x488c",
            "str r0, [r4, r3]",
            "b 0x800feb8",
            "rsb sl, r0, sl",
            "b 0x8010078"
        ]
    },
    "sym.dhd_sendup": {
        "function_address": "0x0801bb34",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r4, r0",
            "mov r5, r1",
            "ldr r0, [r0]",
            "mov r1, r2",
            "add r5, r5, 0x660",
            "bl osl_pkt_tonative",
            "ldr r3, [r4, 0xc]",
            "mov r6, r0",
            "add r5, r3, r5, lsl 2",
            "ldr r3, [r5, 4]",
            "ldr r1, [r3, 8]",
            "str r1, [r0, 8]",
            "bl eth_type_trans",
            "mov r2, sp",
            "strh r0, [r6, 0xd6]",
            "bic r3, r2, 0x1fc0",
            "bic r3, r3, 0x3f",
            "ldr r3, [r3, 4]",
            "bic r3, r3, 0xf8000000",
            "bic r3, r3, 0xff",
            "cmp r3, 0",
            "bne 0x801bbc0",
            "ldr r2, [r4, 0xc]",
            "movw r3, 0x3b4c",
            "ldrb r3, [r2, r3]",
            "cmp r3, 0",
            "beq 0x801bbd0",
            "cmp r6, 0",
            "beq 0x801bbb8",
            "mov r0, r4",
            "mov r1, r6",
            "bl fcn.08019ae0",
            "mov r0, 0",
            "pop {r4, r5, r6, pc}",
            "mov r0, r6",
            "bl netif_rx",
            "mov r0, 0",
            "pop {r4, r5, r6, pc}",
            "mov r0, r6",
            "bl netif_rx_ni",
            "mov r0, 0",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.dhd_prot_init": {
        "function_address": "0x08024564",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r0",
            "ldr r5, [r0, 8]",
            "sub sp, sp, 0x3c",
            "ldr r3, [r5, 0x300]",
            "cmp r3, 0",
            "beq 0x802459c",
            "ldr r3, [0x08024cd8]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "bne 0x802493c",
            "mvn r0, 0",
            "add sp, sp, 0x3c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r7, [r0]",
            "mov r1, 0xc",
            "mov r0, r7",
            "bl osl_mallocz",
            "subs r6, r0, 0",
            "beq 0x8024920",
            "mov r0, r7",
            "mov r1, 8",
            "bl osl_malloc",
            "cmp r0, 0",
            "str r0, [r6]",
            "beq 0x8024a0c",
            "mov r0, r7",
            "mov r1, 8",
            "bl osl_malloc",
            "cmp r0, 0",
            "str r0, [r6, 4]",
            "beq 0x8024aa0",
            "mov r0, r7",
            "mov r1, 8",
            "bl osl_malloc",
            "cmp r0, 0",
            "str r0, [r6, 8]",
            "beq 0x8024ac8",
            "ldr r0, [r6]",
            "ldr r8, [0x08024cd8]",
            "bl dhd_pkt_queue_head_init",
            "ldr r0, [r6, 4]",
            "bl dhd_pkt_queue_head_init",
            "ldr r0, [r6, 8]",
            "bl dhd_pkt_queue_head_init",
            "ldr r2, [r8]",
            "mov r3, 0xa00",
            "str r6, [r5, 0x300]",
            "strh r3, [r5, 0x12]",
            "tst r2, 4",
            "bne 0x8024c84",
            "mov r3, 0",
            "ldr r0, [r4, 4]",
            "add r1, r5, 6",
            "mov r2, 0x12",
            "bl dhd_bus_cmn_readshared",
            "ldrh r3, [r5, 6]",
            "cmp r3, 0",
            "moveq r3, 0x100",
            "strheq r3, [r5, 6]",
            "ldr r3, [r8]",
            "tst r3, 4",
            "bne 0x8024cc0",
            "mov r2, 8",
            "mov r6, 0",
            "strh r2, [r5, 8]",
            "mov r3, 0x30c",
            "strh r2, [r5, 0xa]",
            "movw r2, 0x2fa",
            "strh r6, [r5, 0xe]",
            "strh r6, [r5, 0x10]",
            "strh r6, [r5, r2]",
            "mov r2, 0x2f8",
            "strh r6, [r5, r2]",
            "strh r6, [r5, 4]",
            "strh r6, [r5, 0xc]",
            "str r6, [r5, 0x2b8]",
            "str r6, [r5, 0x2d0]",
            "strb r6, [r5, 0x2f4]",
            "strb r6, [r5, 0x304]",
            "strh r6, [r5, r3]",
            "add r3, r3, 2",
            "strh r6, [r5, r3]",
            "mov r3, 0x30",
            "strh r3, [r5, 0x14]",
            "mov r3, 0x2fc",
            "strh r6, [r5, r3]",
            "ldr r0, [r4, 4]",
            "bl dhd_bus_get_mbintr_fn",
            "add r1, r5, 0x18",
            "str r0, [r5, 0x1cc]",
            "mov r0, r4",
            "bl fcn.08022eb8",
            "mov r0, r4",
            "add r1, r5, 0x68",
            "bl fcn.08022eb8",
            "mov r0, r4",
            "add r1, r5, 0xb8",
            "bl fcn.08022eb8",
            "mov r0, r4",
            "add r1, r5, 0x108",
            "bl fcn.08022eb8",
            "mov r0, r4",
            "add r1, r5, 0x158",
            "bl fcn.08022eb8",
            "ldr r3, [r4, 8]",
            "mov r2, 0xfe",
            "str r2, [r3, 0xe4]",
            "str r2, [r3, 0x134]",
            "str r2, [r3, 0x184]",
            "movw r2, 0x18f4",
            "str r6, [r3, 0x2b0]",
            "str r6, [r3, 0x2b4]",
            "ldr r2, [r4, r2]",
            "tst r2, 0x20000",
            "beq 0x8024950",
            "ldr r2, [reloc.dhd_prot_d2h_sync_seqnum]",
            "str r2, [r3, 0x2ac]",
            "ldr r0, [r4, 8]",
            "mov ip, 0xfe",
            "mov r6, 0",
            "add r1, sp, 0x2c",
            "mov r2, 8",
            "mov r3, r6",
            "str ip, [r0, 0x94]",
            "str ip, [r0, 0x44]",
            "ldr ip, [r5, 0x214]",
            "ldr r0, [r4, 4]",
            "str r6, [sp, 0x30]",
            "str ip, [sp, 0x2c]",
            "str r6, [sp]",
            "bl dhd_bus_cmn_writeshared",
            "ldr r0, [r4, 4]",
            "mov r3, 1",
            "add r1, r5, 0x210",
            "mov r2, 4",
            "str r6, [sp]",
            "bl dhd_bus_cmn_writeshared",
            "movw r3, 0x1911",
            "ldrb r3, [r4, r3]",
            "cmp r3, r6",
            "bne 0x80249c0",
            "movw r3, 0x1912",
            "ldrb r3, [r4, r3]",
            "cmp r3, 0",
            "bne 0x8024970",
            "ldr r6, [r4, 8]",
            "ldr r3, [r6, 0x1a8]",
            "cmp r3, 0",
            "beq 0x8024b10",
            "add r3, sp, 0x38",
            "mov r7, 0",
            "add r1, r6, 0x18",
            "strh r7, [r3, -2]!",
            "mov ip, 1",
            "mov r0, r4",
            "mov r2, 3",
            "str r1, [sp, 8]",
            "str ip, [sp]",
            "bl dhd_prot_alloc_ring_space",
            "cmp r0, 0",
            "str r0, [sp, 0xc]",
            "beq 0x8024af0",
            "ldr r5, [sp, 0xc]",
            "movw sb, 0x8da9",
            "movw fp, 0xace0",
            "mov sl, 2",
            "movt sb, 0x8184",
            "movt fp, 0xf",
            "mov r3, 0",
            "mov r2, 0x20",
            "strb r2, [r5]",
            "add r2, r7, r7, lsl 1",
            "strb r3, [r5, 1]",
            "add r7, r7, 1",
            "strb r3, [r5, 2]",
            "lsl r2, r2, 3",
            "ldr r0, [r6, 0x44]",
            "umull r1, r3, sb, r0",
            "lsr r3, r3, 7",
            "add r2, r2, 0x330",
            "add r1, r6, r2",
            "rsb ip, r3, r3, lsl 6",
            "add r3, r3, ip, lsl 2",
            "rsb r0, r3, r0",
            "strb r0, [r5, 3]",
            "ldr r0, [r6, 0x44]",
            "ldr r3, [r8]",
            "add r0, r0, 1",
            "tst r3, 4",
            "mov r3, 1",
            "str r0, [r6, 0x44]",
            "strh sl, [r5, 0xa]",
            "str fp, [r5, 4]",
            "strh r3, [r5, 8]",
            "ldr ip, [r6, r2]",
            "str ip, [r5, 0x10]",
            "ldr r2, [r1, 0xc]",
            "str r2, [r5, 0x1c]",
            "ldr r3, [r1, 8]",
            "str r3, [r5, 0x18]",
            "ldrh r0, [r1, 0x10]",
            "strh r0, [r5, 0x20]",
            "ldrh r1, [r1, 0x12]",
            "strh r1, [r5, 0x22]",
            "bne 0x8024c50",
            "ldrh r3, [r6, 0x22]",
            "cmp r7, 3",
            "add sl, sl, 1",
            "uxth sl, sl",
            "add r5, r5, r3",
            "bne 0x8024808",
            "mov r0, r4",
            "ldr r1, [sp, 8]",
            "ldr r2, [sp, 0xc]",
            "mov r3, r7",
            "bl dhd_prot_ring_write_complete",
            "ldr r2, [r4, 4]",
            "movw r5, 0x196c",
            "mov r3, 0",
            "ldr r0, [r4, r5]",
            "mov r1, 1",
            "ldr r2, [r2, 4]",
            "bl dhd_runner_notify",
            "movw r3, 0x1970",
            "ldr r3, [r4, r3]",
            "tst r3, 4",
            "beq 0x8024964",
            "mov r2, 0",
            "ldr r0, [r4, r5]",
            "mov r1, 2",
            "mov r3, r2",
            "bl dhd_runner_notify",
            "mov r0, r4",
            "bl fcn.080240d8",
            "mov r0, r4",
            "bl fcn.08024328",
            "mov r0, 0",
            "b 0x8024594",
            "ldr r4, [0x08024cd8]",
            "ldr r3, [r4]",
            "ands r3, r3, 1",
            "streq r3, [r5, 0x300]",
            "bne 0x8024c64",
            "mvn r0, 0x1a",
            "b 0x8024594",
            "ldr r0, [0x08024ce0]",
            "ldr r1, [0x08024ce4]",
            "bl printk",
            "mvn r0, 0",
            "b 0x8024594",
            "tst r2, 0x40000",
            "ldrne r2, [reloc.dhd_prot_d2h_sync_xorcsum]",
            "ldreq r2, [reloc.dhd_prot_d2h_sync_none]",
            "str r2, [r3, 0x2ac]",
            "b 0x802473c",
            "mov r0, r4",
            "bl dhd_msgbuf_rxbuf_post.isra.11",
            "b 0x8024908",
            "ldr ip, [r5, 0x230]",
            "mov r6, 0",
            "ldr r0, [r4, 4]",
            "add r1, sp, 0x2c",
            "mov r2, 8",
            "mov r3, 2",
            "str ip, [sp, 0x2c]",
            "str r6, [sp, 0x30]",
            "str r6, [sp]",
            "bl dhd_bus_cmn_writeshared",
            "ldr ip, [r5, 0x278]",
            "add r1, sp, 0x2c",
            "ldr r0, [r4, 4]",
            "mov r2, 8",
            "mov r3, 5",
            "str r6, [sp, 0x30]",
            "str r6, [sp]",
            "str ip, [sp, 0x2c]",
            "bl dhd_bus_cmn_writeshared",
            "b 0x80247ac",
            "ldr ip, [r5, 0x260]",
            "add r1, sp, 0x2c",
            "ldr r0, [r4, 4]",
            "mov r2, 8",
            "mov r3, 4",
            "str r6, [sp, 0x30]",
            "str ip, [sp, 0x2c]",
            "str r6, [sp]",
            "bl dhd_bus_cmn_writeshared",
            "ldr ip, [r5, 0x248]",
            "add r1, sp, 0x2c",
            "ldr r0, [r4, 4]",
            "mov r2, 8",
            "mov r3, 3",
            "str r6, [sp, 0x30]",
            "str r6, [sp]",
            "str ip, [sp, 0x2c]",
            "bl dhd_bus_cmn_writeshared",
            "b 0x802479c",
            "ldr r8, [0x08024cd8]",
            "ldr r3, [r8]",
            "tst r3, 1",
            "bne 0x8024ca8",
            "ldr r1, [r6, 8]",
            "cmp r1, 0",
            "beq 0x8024a34",
            "mov r0, r7",
            "mov r2, 8",
            "bl osl_mfree",
            "ldr r1, [r6, 4]",
            "cmp r1, 0",
            "beq 0x8024a4c",
            "mov r0, r7",
            "mov r2, 8",
            "bl osl_mfree",
            "ldr r1, [r6]",
            "cmp r1, 0",
            "beq 0x8024a64",
            "mov r0, r7",
            "mov r2, 8",
            "bl osl_mfree",
            "mov r0, r7",
            "mov r1, r6",
            "mov r2, 0xc",
            "bl osl_mfree",
            "ldr r3, [r8]",
            "and r3, r3, 1",
            "cmp r3, 0",
            "mov r3, 0",
            "str r3, [r5, 0x300]",
            "beq 0x8024934",
            "ldr r0, [0x08024cf0]",
            "ldr r1, [0x08024ce4]",
            "bl printk",
            "mvn r0, 0x1a",
            "b 0x8024594",
            "ldr r8, [0x08024cd8]",
            "ldr r3, [r8]",
            "tst r3, 1",
            "beq 0x8024a1c",
            "ldr r1, [0x08024cf4]",
            "movw r2, 0x798",
            "mov r3, 8",
            "ldr r0, [0x08024cf8]",
            "bl printk",
            "b 0x8024a1c",
            "ldr r8, [0x08024cd8]",
            "ldr r3, [r8]",
            "tst r3, 1",
            "beq 0x8024a34",
            "ldr r1, [0x08024cf4]",
            "movw r2, 0x79e",
            "mov r3, 8",
            "ldr r0, [0x08024cf8]",
            "bl printk",
            "b 0x8024a1c",
            "ldr r3, [r8]",
            "tst r3, 1",
            "beq 0x80248c8",
            "ldr r1, [0x08024cfc]",
            "mov r2, 3",
            "ldr r0, [0x08024d00]",
            "bl printk",
            "b 0x80248c8",
            "ldr r0, [r4, 4]",
            "bl dhd_bus_max_h2d_queues",
            "uxth r2, r0",
            "mov r3, 0x1c4",
            "cmp r2, 1",
            "strh r2, [r6, r3]",
            "ldr r3, [r8]",
            "bls 0x8024c14",
            "tst r3, 1",
            "sub r2, r2, 2",
            "uxth r5, r2",
            "bne 0x8024c98",
            "add r1, r5, r5, lsl 2",
            "ldr r0, [r6]",
            "lsl r1, r1, 4",
            "bl osl_mallocz",
            "cmp r0, 0",
            "str r0, [r6, 0x1a8]",
            "beq 0x8024c30",
            "mov fp, 0x1c4",
            "movw r3, 0x196c",
            "ldr r0, [r4, r3]",
            "mov r1, 6",
            "add r3, r6, 0x2a8",
            "ldrh r2, [r6, fp]",
            "bl dhd_runner_notify",
            "ldrh r3, [r6, fp]",
            "ldr r7, [r6, 0x1a8]",
            "cmp r3, 2",
            "movhi r5, 2",
            "movhi sl, 0",
            "movhi sb, 0x30",
            "bhi 0x8024ba4",
            "b 0x8024c0c",
            "ldrh r3, [r6, fp]",
            "cmp r3, r5",
            "bls 0x8024c0c",
            "mov r3, r5",
            "mov r1, 0x18",
            "ldr r2, [0x08024d04]",
            "add r0, sp, 0x14",
            "bl snprintf",
            "add ip, r5, 3",
            "mov r1, r7",
            "uxth ip, ip",
            "mov r0, r4",
            "add r2, sp, 0x14",
            "strb sl, [sp, 0x2b]",
            "mov r3, 0xa00",
            "stm sp, {sb, ip}",
            "bl fcn.080234f0",
            "cmp r0, 0",
            "add r5, r5, 1",
            "add r7, r7, 0x50",
            "uxth r5, r5",
            "beq 0x8024b98",
            "mov r0, r4",
            "bl fcn.08023c54",
            "mov r2, 0",
            "mov r3, 0x1c4",
            "strh r2, [r6, r3]",
            "mvn r0, 0",
            "b 0x8024594",
            "ldr r6, [r4, 8]",
            "b 0x80247bc",
            "tst r3, 1",
            "beq 0x8024590",
            "ldr r0, [0x08024d08]",
            "ldr r1, [0x08024d0c]",
            "bl printk",
            "mvn r0, 0",
            "b 0x8024594",
            "ldr r3, [r8]",
            "tst r3, 1",
            "beq 0x8024bf8",
            "ldr r1, [0x08024d0c]",
            "mov r2, r5",
            "ldr r0, [0x08024d10]",
            "bl printk",
            "b 0x8024bf8",
            "ldr r1, [0x08024cfc]",
            "ldr r0, [0x08024d14]",
            "str ip, [sp]",
            "bl printk",
            "b 0x802489c",
            "mov r3, 0xc",
            "ldr r0, [0x08024d18]",
            "movw r2, 0x78c",
            "ldr r1, [0x08024cf4]",
            "bl printk",
            "ldr r3, [r4]",
            "and r3, r3, 1",
            "b 0x8024a7c",
            "mov r2, 0x930",
            "ldr r1, [0x08024ce4]",
            "ldr r0, [0x08024d1c]",
            "bl printk",
            "b 0x8024630",
            "mov r1, r5",
            "ldr r0, [0x08024d20]",
            "bl printk",
            "b 0x8024b40",
            "ldr r1, [0x08024cf4]",
            "movw r2, 0x792",
            "mov r3, 8",
            "ldr r0, [0x08024cf8]",
            "bl printk",
            "b 0x8024a1c",
            "movw r2, 0x939",
            "ldr r1, [0x08024ce4]",
            "ldrh r3, [r5, 6]",
            "ldr r0, [0x08024d24]",
            "bl printk",
            "b 0x8024660"
        ]
    },
    "fcn.08022eb8": {
        "function_address": "0x08022eb8",
        "instructions": [
            "push {r4, r5, lr}",
            "mov r3, 0",
            "ldrh ip, [r1, 2]",
            "mov r4, r1",
            "sub sp, sp, 0xc",
            "mov r5, r0",
            "strh r3, [r1, 6]",
            "mov r2, 8",
            "strh r3, [r4, 4]",
            "add r1, r1, 0xc",
            "ldr r0, [r0, 4]",
            "mov r3, 0xc",
            "str ip, [sp]",
            "bl dhd_bus_cmn_writeshared",
            "ldrh ip, [r4, 2]",
            "add r1, r4, 8",
            "ldr r0, [r5, 4]",
            "mov r2, 2",
            "mov r3, 0xe",
            "str ip, [sp]",
            "bl dhd_bus_cmn_writeshared",
            "ldrh ip, [r4, 2]",
            "add r1, r4, 0xa",
            "ldr r0, [r5, 4]",
            "mov r2, 2",
            "mov r3, 0xd",
            "str ip, [sp]",
            "bl dhd_bus_cmn_writeshared",
            "ldrh ip, [r4, 2]",
            "add r1, r4, 6",
            "ldr r0, [r5, 4]",
            "mov r2, 2",
            "mov r3, 0x10",
            "str ip, [sp]",
            "bl dhd_bus_cmn_writeshared",
            "ldrh ip, [r4, 2]",
            "mov r3, 0xf",
            "ldr r0, [r5, 4]",
            "add r1, r4, 4",
            "mov r2, 2",
            "str ip, [sp]",
            "bl dhd_bus_cmn_writeshared",
            "mov r3, 1",
            "strb r3, [r4]",
            "add sp, sp, 0xc",
            "pop {r4, r5, pc}"
        ]
    },
    "fcn.080240d8": {
        "function_address": "0x080240d8",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r6, r0",
            "ldr r7, [0x08024148]",
            "ldr r4, [r0, 8]",
            "ldr r3, [r7]",
            "tst r3, 4",
            "bne 0x802413c",
            "ldrh r5, [r4, 0xe]",
            "ldrh r2, [r4, 0xa]",
            "rsb r2, r5, r2",
            "cmp r2, 0",
            "ble 0x8024120",
            "mov r0, r6",
            "mov r1, 0",
            "bl fcn.08023d58",
            "add r0, r0, r5",
            "strh r0, [r4, 0xe]",
            "pop {r3, r4, r5, r6, r7, pc}",
            "ldr r3, [r7]",
            "tst r3, 4",
            "popeq {r3, r4, r5, r6, r7, pc}",
            "ldr r0, [0x0802414c]",
            "ldr r1, [0x08024150]",
            "pop {r3, r4, r5, r6, r7, lr}",
            "b printk",
            "ldr r0, [0x08024154]",
            "bl printk",
            "b 0x80240f4"
        ]
    },
    "sym.ai_scan": {
        "function_address": "0x08006584",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "movw ip, 0x4898",
            "mov r4, r0",
            "sub sp, sp, 0x54",
            "movw r7, 0x4858",
            "add r6, sp, 0x40",
            "ldr ip, [r4, ip]",
            "mov r2, r6",
            "mov r3, 4",
            "mov r5, r1",
            "ldr r0, [r0, r7]",
            "add r1, r1, 0xfc",
            "str ip, [sp, 0x18]",
            "bl osl_pcie_rreg",
            "ldr r2, [r4, 4]",
            "ldr r3, [sp, 0x40]",
            "cmp r2, 0",
            "bne 0x8006754",
            "mov r0, r3",
            "mov r1, 0x1000",
            "bl __arm_ioremap",
            "mov r5, r0",
            "str r0, [sp, 0x3c]",
            "add ip, r5, 0xe00",
            "str ip, [sp, 0x20]",
            "ldr ip, [sp, 0x20]",
            "cmp r5, ip",
            "bhs 0x80066f8",
            "mov r0, r4",
            "add r1, sp, 0x3c",
            "mov r2, 0xe",
            "mov r3, 0",
            "bl fcn.080061e8",
            "cmp r0, 0xf",
            "mov r5, r0",
            "beq 0x8006704",
            "mov r2, 0",
            "mov r0, r4",
            "add r1, sp, 0x3c",
            "mov r3, r2",
            "bl fcn.080061e8",
            "tst r0, 0xe",
            "mov r7, r0",
            "bne 0x80066f8",
            "movw r3, 0x43b",
            "ubfx fp, r5, 8, 0xc",
            "cmp r3, r5, lsr 20",
            "movw r3, 0xfff",
            "movne ip, 0",
            "moveq ip, 1",
            "str ip, [sp, 0x14]",
            "cmp fp, r3",
            "movne ip, 0",
            "andeq ip, ip, 1",
            "cmp ip, 0",
            "bne 0x800674c",
            "ubfx ip, r0, 9, 5",
            "cmp ip, 0",
            "str ip, [sp, 0x28]",
            "beq 0x800674c",
            "ubfx ip, r0, 0xe, 5",
            "str ip, [sp, 0x30]",
            "ubfx ip, r0, 0x13, 5",
            "ldr r0, [sp, 0x30]",
            "str ip, [sp, 0x2c]",
            "adds r2, ip, r0",
            "beq 0x8006780",
            "movw r3, 0x488c",
            "ldr ip, [sp, 0x18]",
            "ldr r3, [r4, r3]",
            "ubfx r8, r7, 4, 5",
            "cmp r8, 0",
            "add r1, r3, 0x160",
            "add r2, r3, 0x180",
            "str r3, [sp, 0x24]",
            "add r3, r3, 0x20",
            "str r5, [ip, r1, lsl 2]",
            "str r7, [ip, r2, lsl 2]",
            "str fp, [ip, r3, lsl 2]",
            "beq 0x80067b8",
            "mov r5, 0",
            "b 0x80066d4",
            "cmp r5, r8",
            "beq 0x80067b8",
            "mov r2, 1",
            "mov r0, r4",
            "add r1, sp, 0x3c",
            "mov r3, r2",
            "bl fcn.080061e8",
            "and r0, r0, 0xe",
            "add r5, r5, 1",
            "cmp r0, 2",
            "beq 0x80066cc",
            "mov r2, 0",
            "movw r3, 0x488c",
            "str r2, [r4, r3]",
            "add sp, sp, 0x54",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "add ip, sp, 0x44",
            "mov r0, r4",
            "str ip, [sp, 4]",
            "add ip, sp, 0x48",
            "str ip, [sp, 8]",
            "add r1, sp, 0x3c",
            "add ip, sp, 0x4c",
            "mov r3, r2",
            "str r6, [sp]",
            "str ip, [sp, 0xc]",
            "bl fcn.08006474",
            "cmp r0, 0",
            "beq 0x800678c",
            "ldr r2, [sp, 0x40]",
            "movw r3, 0x4894",
            "str r2, [r4, r3]",
            "ldr r5, [sp, 0x3c]",
            "b 0x80065e8",
            "cmp r2, 1",
            "bne 0x8006704",
            "add r1, r5, 0x1000",
            "movw r2, 0x4890",
            "str r1, [r4, r2]",
            "mov r1, 0x80",
            "ldr r0, [r4, r7]",
            "mov r2, 4",
            "bl osl_pci_write_config",
            "str r5, [sp, 0x3c]",
            "b 0x80065e0",
            "movw r3, 0x367",
            "cmp fp, r3",
            "beq 0x800670c",
            "movw r3, 0x5dc",
            "movw r2, 0x50b",
            "cmp fp, r2",
            "cmpne fp, r3",
            "beq 0x8006690",
            "movw r3, 0x827",
            "cmp fp, 0x840",
            "cmpne fp, r3",
            "beq 0x8006690",
            "ldr r5, [sp, 0x3c]",
            "b 0x80065e8",
            "mov r2, 0",
            "add sl, sp, 0x44",
            "add r8, sp, 0x48",
            "add r7, sp, 0x4c",
            "mov r0, r4",
            "add r1, sp, 0x3c",
            "mov r3, r2",
            "stm sp, {r6, sl}",
            "str r8, [sp, 8]",
            "str r7, [sp, 0xc]",
            "bl fcn.08006474",
            "cmp r0, 0",
            "movne ip, 0",
            "strne ip, [sp, 0x1c]",
            "bne 0x800685c",
            "str r0, [sp, 0x1c]",
            "mov r0, r4",
            "add r1, sp, 0x3c",
            "mov r2, 0",
            "mov r3, 0x40",
            "stm sp, {r6, sl}",
            "str r8, [sp, 8]",
            "str r7, [sp, 0xc]",
            "bl fcn.08006474",
            "cmp r0, 0",
            "movne ip, 1",
            "strne ip, [sp, 0x1c]",
            "bne 0x80067f8",
            "ldr ip, [sp, 0x1c]",
            "cmp ip, 0",
            "bne 0x800685c",
            "ldr r3, [sp, 0x44]",
            "cmp r3, 0",
            "bne 0x80066f8",
            "ldr r3, [sp, 0x4c]",
            "cmp r3, 0",
            "bne 0x80066f8",
            "ldr r3, [sp, 0x48]",
            "cmp r3, 0x1000",
            "beq 0x80067f8",
            "b 0x80066f8",
            "ldr ip, [sp, 0x24]",
            "mov r5, 2",
            "ldr r1, [sp, 0x40]",
            "ldr sb, [sp, 0x24]",
            "add r3, ip, 0x40",
            "add r2, ip, 0xa0",
            "ldr ip, [sp, 0x18]",
            "str r1, [ip, r3, lsl 2]",
            "ldr r3, [sp, 0x48]",
            "str r3, [ip, r2, lsl 2]",
            "mov r2, 0",
            "mov r0, r4",
            "mov r3, r2",
            "add r1, sp, 0x3c",
            "stm sp, {r6, sl}",
            "str r8, [sp, 8]",
            "str r7, [sp, 0xc]",
            "bl fcn.08006474",
            "adds r0, r0, 0",
            "movne r0, 1",
            "cmp r5, 2",
            "movne r3, 0",
            "andeq r3, r0, 1",
            "cmp r3, 0",
            "beq 0x80068f4",
            "ldr r3, [sp, 0x48]",
            "cmp r3, 0x1000",
            "beq 0x80068d4",
            "add r5, r5, 1",
            "b 0x8006884",
            "ldr r0, [sp, 0x40]",
            "add r1, sb, 0x80",
            "ldr ip, [sp, 0x18]",
            "add r2, sb, 0xc0",
            "add r5, r5, 1",
            "str r0, [ip, r1, lsl 2]",
            "str r3, [ip, r2, lsl 2]",
            "b 0x8006884",
            "cmp r0, 0",
            "bne 0x80068cc",
            "ldr ip, [sp, 0x28]",
            "cmp ip, 1",
            "beq 0x8006968",
            "str fp, [sp, 0x34]",
            "mov sb, 1",
            "ldr fp, [sp, 0x28]",
            "mov r5, r4",
            "mov r4, 0",
            "b 0x8006924",
            "add r4, r4, 1",
            "mov r0, r5",
            "add r1, sp, 0x3c",
            "mov r2, sb",
            "mov r3, 0",
            "stm sp, {r6, sl}",
            "str r8, [sp, 8]",
            "str r7, [sp, 0xc]",
            "bl fcn.08006474",
            "cmp r0, 0",
            "bne 0x8006920",
            "cmp r4, 0",
            "beq 0x8006a0c",
            "add sb, sb, 1",
            "cmp sb, fp",
            "bne 0x8006918",
            "ldr fp, [sp, 0x34]",
            "mov r4, r5",
            "ldr ip, [sp, 0x30]",
            "cmp ip, 0",
            "beq 0x8006a18",
            "str fp, [sp, 0x34]",
            "mov r5, 0",
            "mov fp, ip",
            "ldr sb, [sp, 0x24]",
            "b 0x800699c",
            "cmp r5, 1",
            "beq 0x80069f8",
            "add r5, r5, 1",
            "cmp r5, fp",
            "beq 0x8006a14",
            "mov r3, 0xc0",
            "mov r2, r5",
            "mov r0, r4",
            "add r1, sp, 0x3c",
            "stm sp, {r6, sl}",
            "str r8, [sp, 8]",
            "str r7, [sp, 0xc]",
            "bl fcn.08006474",
            "cmp r0, 0",
            "add r3, sb, 0x100",
            "beq 0x80066f8",
            "ldr r2, [sp, 0x4c]",
            "cmp r2, 0",
            "bne 0x80066f8",
            "ldr r2, [sp, 0x48]",
            "cmp r2, 0x1000",
            "bne 0x80066f8",
            "cmp r5, 0",
            "bne 0x8006988",
            "ldr r2, [sp, 0x40]",
            "ldr ip, [sp, 0x18]",
            "str r2, [ip, r3, lsl 2]",
            "b 0x8006990",
            "ldr r2, [sp, 0x40]",
            "add r3, sb, 0x140",
            "ldr ip, [sp, 0x18]",
            "str r2, [ip, r3, lsl 2]",
            "b 0x8006990",
            "mov r4, r5",
            "b 0x80066f8",
            "ldr fp, [sp, 0x34]",
            "ldr ip, [sp, 0x2c]",
            "cmp ip, 0",
            "beq 0x8006b2c",
            "ldr ip, [sp, 0x28]",
            "movw r3, 0x135",
            "mov r5, 0",
            "subs sb, ip, 1",
            "ldr ip, [sp, 0x14]",
            "movne sb, 1",
            "str sb, [sp, 0x14]",
            "cmp fp, r3",
            "movne ip, 0",
            "andeq ip, ip, 1",
            "ldr sb, [sp, 0x30]",
            "mov fp, ip",
            "b 0x8006a74",
            "ldr r3, [sp, 0x40]",
            "ldr ip, [sp, 0x18]",
            "str r3, [ip, r1, lsl 2]",
            "ldr ip, [sp, 0x2c]",
            "add r5, r5, 1",
            "cmp r5, ip",
            "beq 0x8006b2c",
            "ldr ip, [sp, 0x14]",
            "add r1, sp, 0x3c",
            "mov r0, r4",
            "mov r3, 0x80",
            "stm sp, {r6, sl}",
            "add r2, r5, ip",
            "str r8, [sp, 8]",
            "str r7, [sp, 0xc]",
            "bl fcn.08006474",
            "ldr ip, [sp, 0x24]",
            "cmp fp, 0",
            "add r1, ip, 0x100",
            "beq 0x8006ad0",
            "movw r3, 0x48a8",
            "ldr ip, [sp, 0x40]",
            "ldr r2, [r4, r3]",
            "add r3, r2, 0x1200",
            "add r2, r2, 1",
            "add r3, r3, 0x2a",
            "add r3, r4, r3, lsl 2",
            "str ip, [r3, 4]",
            "movw ip, 0x48a8",
            "str r2, [r4, ip]",
            "cmp r0, 0",
            "beq 0x80066f8",
            "ldr r3, [sp, 0x4c]",
            "cmp r3, 0",
            "bne 0x80066f8",
            "ldr r3, [sp, 0x48]",
            "cmp r3, 0x1000",
            "bne 0x80066f8",
            "rsbs r3, sb, 1",
            "movlo r3, 0",
            "cmp r5, 0",
            "cmpeq sb, 0",
            "beq 0x8006a58",
            "ldr ip, [sp, 0x24]",
            "cmp r5, 1",
            "movne r3, 0",
            "andeq r3, r3, 1",
            "cmp r3, 0",
            "ldrne r3, [sp, 0x40]",
            "add r2, ip, 0x140",
            "ldrne ip, [sp, 0x18]",
            "strne r3, [ip, r2, lsl 2]",
            "b 0x8006a64",
            "ldr ip, [sp, 0x1c]",
            "cmp ip, 0",
            "movweq r3, 0x488c",
            "ldreq r2, [r4, r3]",
            "addeq r2, r2, 1",
            "streq r2, [r4, r3]",
            "ldr r5, [sp, 0x3c]",
            "b 0x80065e8"
        ]
    },
    "fcn.080061e8": {
        "function_address": "0x080061e8",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sl, lr}",
            "mov r5, r0",
            "sub sp, sp, 0xc",
            "mov r4, r1",
            "mov r7, r2",
            "mov r8, r3",
            "bl si_osh",
            "mov r0, r5",
            "bl si_osh",
            "add r2, sp, 4",
            "mov r3, 4",
            "ldr r1, [r4]",
            "bl osl_pcie_rreg",
            "ldr r2, [r4]",
            "cmp r7, 0",
            "ldr r3, [sp, 4]",
            "movne r6, 0",
            "movwne sl, 0xfff",
            "add r2, r2, 4",
            "str r2, [r4]",
            "bne 0x800627c",
            "b 0x8006298",
            "cmp r2, r8",
            "beq 0x8006298",
            "cmp r6, sl",
            "bhi 0x8006298",
            "bl si_osh",
            "mov r0, r5",
            "bl si_osh",
            "add r2, sp, 4",
            "mov r3, 4",
            "ldr r1, [r4]",
            "bl osl_pcie_rreg",
            "ldr r2, [r4]",
            "ldr r3, [sp, 4]",
            "add r2, r2, 4",
            "str r2, [r4]",
            "tst r3, 1",
            "mov r0, r5",
            "and r2, r3, r7",
            "beq si_osh",
            "cmp r3, 0xf",
            "add r6, r6, 4",
            "bne 0x8006240",
            "mov r0, r3",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "fcn.08006474": {
        "function_address": "0x08006474",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r6, r2",
            "mov r2, 1",
            "mov r7, r3",
            "mov r3, r2",
            "mov r8, r0",
            "mov r5, r1",
            "ldr sl, [sp, 0x2c]",
            "ldr fp, [sp, 0x30]",
            "ldr sb, [sp, 0x34]",
            "bl fcn.080061e8",
            "and r3, r0, 6",
            "mov r4, r0",
            "cmp r3, 4",
            "beq 0x80064c8",
            "ldr r3, [r5]",
            "mov r4, 0",
            "sub r3, r3, 4",
            "str r3, [r5]",
            "mov r0, r4",
            "pop {r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ubfx r3, r0, 8, 4",
            "cmp r3, r6",
            "bne 0x80064b0",
            "and r3, r0, 0xc0",
            "cmp r3, r7",
            "bne 0x80064b0",
            "ldr r3, [sp, 0x28]",
            "bic r2, r0, 0xff0",
            "ands r1, r0, 8",
            "bic r2, r2, 0xf",
            "str r2, [r3]",
            "streq r1, [sl]",
            "bne 0x8006524",
            "and r3, r4, 0x30",
            "mov r6, 0",
            "cmp r3, 0x30",
            "str r6, [sb]",
            "beq 0x8006540",
            "lsr r3, r3, 4",
            "mov r2, 0x1000",
            "lsl r3, r2, r3",
            "str r3, [fp]",
            "b 0x80064c0",
            "mov r2, 0",
            "mov r0, r8",
            "mov r1, r5",
            "mov r3, r2",
            "bl fcn.080061e8",
            "str r0, [sl]",
            "b 0x80064fc",
            "mov r3, r6",
            "mov r0, r8",
            "mov r1, r5",
            "mov r2, r6",
            "bl fcn.080061e8",
            "bic r3, r0, 0xff0",
            "tst r0, 8",
            "bic r3, r3, 0xf",
            "str r3, [fp]",
            "beq 0x80064c0",
            "mov r2, r6",
            "mov r0, r8",
            "mov r1, r5",
            "mov r3, r6",
            "bl fcn.080061e8",
            "str r0, [sb]",
            "b 0x80064c0"
        ]
    },
    "sym.dhd_attach": {
        "function_address": "0x0801e7b4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r8, r1",
            "movw r1, 0",
            "mov r7, r2",
            "movt r1, 0",
            "sub sp, sp, 0x34",
            "ldr r2, [r1]",
            "mov r3, 0",
            "mov r5, r0",
            "str r3, [sp, 0x20]",
            "str r3, [sp, 0x24]",
            "tst r2, 2",
            "str r3, [sp, 0x28]",
            "str r3, [sp, 0x2c]",
            "bne 0x801edf8",
            "mvn r0, 0",
            "mov r1, r0",
            "mov r2, r0",
            "bl dhd_wifi_platform_get_adapter",
            "mov r1, 7",
            "movw r2, 0x3c30",
            "mov sl, r0",
            "bl wifi_platform_prealloc",
            "subs r4, r0, 0",
            "beq 0x801ed48",
            "ldr sb, [0x0801f168]",
            "movw r1, 0x3c30",
            "ldr fp, [0x0801f16c]",
            "mov r0, r4",
            "bl __memzero",
            "ldr r1, [sb, -0xfa4]",
            "movw r3, 0x3bc4",
            "ldr r2, [fp, 0x50]",
            "add r6, r4, 0xc",
            "add ip, r4, 0x3a40",
            "mov r0, r6",
            "str ip, [sp, 0x14]",
            "add r2, r1, r2",
            "mov r1, 0x1980",
            "str r2, [r4, r3]",
            "str r2, [r4, r1]",
            "movw r2, 0x19c4",
            "str r5, [r4, 0xc]",
            "mvn r1, 1",
            "str sl, [r4, r2]",
            "movw r2, 0x3a6c",
            "str r1, [r4, r2]",
            "mvn r1, 0",
            "add r2, r2, 0x4c",
            "mov r5, 0",
            "str r1, [r4, r2]",
            "str r3, [sp, 0x10]",
            "bl dhd_get_wet_info",
            "ldr lr, [sp, 0x14]",
            "add r2, r4, 0x3a40",
            "mov r1, r2",
            "add r2, r2, 0x10",
            "add ip, lr, 0x18",
            "movw lr, 0x1970",
            "str r0, [r4, lr]",
            "movw lr, 0x3a4c",
            "str r5, [r4, lr]",
            "mov r0, r4",
            "str r5, [r2], 4",
            "str r5, [r2], 4",
            "str r5, [r2], 4",
            "str r5, [r2]",
            "mov r2, 1",
            "str r2, [r1, 0x14]",
            "str ip, [r1, 0x18]",
            "str ip, [r1, 0x1c]",
            "bl dhd_update_fw_nv_path",
            "ldr r3, [sp, 0x10]",
            "ldr r3, [r4, r3]",
            "str r5, [r4, 4]",
            "ldrb r2, [sb, 0x74]",
            "str r4, [r4, 0x18]",
            "add r3, fp, r3, lsl 4",
            "cmp r2, r5",
            "str r6, [r3, 8]",
            "str r7, [r4, 0x24]",
            "add r7, sp, 0x20",
            "str r8, [r4, 0x10]",
            "bne 0x801ead0",
            "mov r5, 0",
            "mov ip, 1",
            "mov r0, r6",
            "mov r1, r5",
            "mov r2, r7",
            "mov r3, r5",
            "str r5, [sp]",
            "str ip, [sp, 4]",
            "str r5, [sp, 8]",
            "bl dhd_allocate_if",
            "subs r8, r0, 0",
            "beq dhd_msg_level",
            "movw r3, 0x195c",
            "add sl, r4, 0x39c0",
            "str r5, [r4, r3]",
            "add r3, sl, 0x14",
            "ldrd r0, r1, [r8, 0x90]",
            "mov r2, 0",
            "str r3, [sp, 0x18]",
            "mov r3, 4",
            "str r5, [r8, 0x154]",
            "add ip, sl, 0xc",
            "orr r2, r2, r0",
            "orr r3, r3, r1",
            "strd r2, r3, [r8, 0x90]",
            "movw r3, 0x39c8",
            "str r5, [r4, r3]",
            "add r3, r4, 0x3b40",
            "str r3, [sp, 0x1c]",
            "add r0, sl, 0x1c",
            "ldr r3, [sp, 0x18]",
            "add r7, r4, 0x3b80",
            "str r5, [ip], 4",
            "str r5, [ip], 4",
            "str r5, [ip], 4",
            "str r5, [ip]",
            "mov ip, 1",
            "str ip, [sl, 0x10]",
            "str r3, [sl, 0x14]",
            "str r3, [sl, 0x18]",
            "ldr r1, [0x0801f170]",
            "ldr r2, [0x0801f174]",
            "bl __init_waitqueue_head",
            "add r0, sl, 0x2c",
            "ldr r1, [0x0801f178]",
            "ldr r2, [0x0801f174]",
            "bl __init_waitqueue_head",
            "add r0, r7, 0x20",
            "ldr r1, [0x0801f17c]",
            "ldr r2, [0x0801f174]",
            "bl __init_waitqueue_head",
            "ldr lr, [sp, 0x1c]",
            "add r2, r4, 0x3a00",
            "movw r1, 0x3a34",
            "add ip, r4, 0x3a40",
            "str r5, [r4, r1]",
            "add r3, r4, 0x3b40",
            "add r0, lr, 0x10",
            "ldr lr, [sp, 0x14]",
            "str r5, [r2, 0x38]",
            "movw r2, 0x3a3c",
            "str r5, [r4, r2]",
            "str r5, [lr]",
            "movw lr, 0x3a44",
            "str r5, [r4, lr]",
            "str r5, [ip, 8]",
            "movw ip, 0x3b44",
            "str r5, [r4, ip]",
            "str r5, [r3, 8]",
            "mov r3, 0x3b80",
            "str r5, [r4, r3]",
            "add r3, r3, 8",
            "str r5, [r7, 4]",
            "str r5, [r4, r3]",
            "add r3, r3, 4",
            "str r5, [r4, r3]",
            "add r3, r3, 4",
            "str r5, [r4, r3]",
            "add r3, r3, 4",
            "ldr r1, [0x0801f180]",
            "ldr r2, [0x0801f174]",
            "str r5, [r4, r3]",
            "bl __mutex_init",
            "ldr r3, [sp, 0x1c]",
            "ldr r1, [0x0801f184]",
            "ldr r2, [0x0801f174]",
            "add r0, r3, 0x28",
            "bl __mutex_init",
            "mov r0, r6",
            "bl dhd_prot_attach",
            "subs r7, r0, 0",
            "beq 0x801eb30",
            "movw ip, 0",
            "movt ip, 0",
            "ldr r3, [ip]",
            "tst r3, 1",
            "moveq r5, 0x46",
            "bne 0x801f0ac",
            "movw lr, 0",
            "mov r5, 2",
            "movt lr, 0",
            "ldr r3, [lr]",
            "b 0x801ea8c",
            "add r1, sb, 0x74",
            "mov r2, 0x10",
            "mov r0, r7",
            "bl strncpy",
            "mov r0, r7",
            "strb r5, [sp, 0x2f]",
            "bl strlen",
            "add r1, sp, 0x30",
            "add r3, r1, r0",
            "ldrb r3, [r3, -0x11]",
            "sub r3, r3, 0x30",
            "uxtb r3, r3",
            "cmp r3, 9",
            "movls r3, 0",
            "movhi r3, 1",
            "cmp r0, 0xd",
            "movgt r3, 0",
            "cmp r3, 0",
            "beq 0x801e904",
            "add r0, r7, r0",
            "ldr r1, [0x0801f188]",
            "mov r2, 3",
            "bl memcpy",
            "b 0x801e904",
            "ldr r0, [r4, 0xc]",
            "mov r1, 0x80",
            "mov r2, 1",
            "bl id16_map_init",
            "subs sl, r0, 0",
            "beq case.0x800f6c0.3",
            "ldr r0, [r4, 0xc]",
            "movw r1, 0x1c38",
            "bl osl_malloc",
            "subs r5, r0, 0",
            "beq dhd_msg_level",
            "movw r3, 0x18d8",
            "movw r1, 0x1c38",
            "str r5, [r4, r3]",
            "add r3, r3, 4",
            "str sl, [r4, r3]",
            "bl __memzero",
            "mov r0, sl",
            "bl id16_map_alloc",
            "add r3, r5, r7",
            "sub r7, r7, 0x38",
            "cmn r7, 0x1c00",
            "add r3, r3, 0x1c00",
            "str r0, [r3, 0x28]",
            "bne 0x801eb74",
            "add r5, r5, 0x3c",
            "mov sl, 1",
            "mvn r7, 0",
            "strh r7, [r5]",
            "sub r1, r5, 4",
            "strh r7, [r5, 2]",
            "mov r0, r6",
            "strh r7, [r5, 4]",
            "add sl, sl, 1",
            "strh r7, [r5, 6]",
            "strh r7, [r5, 8]",
            "strh r7, [r5, 0xa]",
            "strh r7, [r5, 0xc]",
            "strh r7, [r5, 0xe]",
            "add r5, r5, 0x38",
            "bl fcn.08019c3c",
            "cmp sl, 0x81",
            "bne 0x801eba0",
            "ldr r3, [reloc.num_physpages]",
            "ldr r2, [r3]",
            "movw r3, 0xfffe",
            "cmp r2, r3",
            "ldr r3, [reloc.allocskbsz]",
            "movhi r2, 0x1000",
            "strhi r2, [r3]",
            "movw r2, 0x197c",
            "ldr r2, [r4, r2]",
            "tst r2, 4",
            "beq 0x801f0dc",
            "mov r1, 0",
            "str r1, [r3]",
            "movw r3, 0x3bc4",
            "ldr r2, [r4, r3]",
            "mov ip, r1",
            "ldr r3, [reloc.allocskbmode]",
            "str r1, [r3]",
            "ldr r3, [0x0801f198]",
            "ldr r1, [0x0801f19c]",
            "mov r5, 0",
            "ldr r0, [0x0801f1a0]",
            "add sl, r4, 0x3a00",
            "str ip, [sp]",
            "bl printk",
            "movw r3, 0x3bbc",
            "mov r1, r5",
            "str r5, [r4, r3]",
            "mov r2, r5",
            "mov r0, sl",
            "ldr r7, [0x0801f1a4]",
            "bl init_timer_key",
            "ldr r3, [fp, 4]",
            "ldr r1, [reloc.dhd_watchdog]",
            "ldr r2, [r7, 0x214]",
            "cmp r3, r5",
            "movw r3, 0x3a14",
            "str r4, [r4, r3]",
            "movw r3, 0x3a10",
            "str r1, [r4, r3]",
            "movw r3, 0x39fc",
            "str r2, [r4, r3]",
            "mvnlt r2, 0",
            "movwlt r3, 0x3ab8",
            "strlt r2, [r4, r3]",
            "bge 0x801efec",
            "ldr r3, [r7, 0x810]",
            "cmp r3, 0",
            "bge 0x801eef4",
            "mov r2, r4",
            "add r0, sl, 0x20",
            "ldr r1, [reloc.dhd_dpc]",
            "bl tasklet_init",
            "mvn r2, 0",
            "movw r3, 0x3a6c",
            "str r2, [r4, r3]",
            "movw r3, 0x3b4c",
            "ldrb r3, [r4, r3]",
            "cmp r3, 0",
            "bne 0x801ee18",
            "ldr r3, [reloc.dhd_nic_hook_fn]",
            "mov r0, r4",
            "movw r5, 0x3bc4",
            "str r3, [r4]",
            "bl dhd_deferred_work_init",
            "ldr r2, [sb, -0xfa4]",
            "movw r1, 0x3bb8",
            "ldr r3, [sb, -0xfa0]",
            "ldr lr, [reloc.fdb_check_expired_dhd]",
            "ldr ip, [reloc.fdb_check_expired_dhd_hook]",
            "add r2, r2, 1",
            "str r0, [r4, r1]",
            "add r3, r3, 1",
            "movw r0, 0x26e",
            "movw r1, 0x3bb4",
            "str r0, [r4, r1]",
            "mov r0, r8",
            "str r2, [sb, -0xfa4]",
            "str r3, [sb, -0xfa0]",
            "ldr r1, [r4, r5]",
            "str lr, [ip]",
            "bl dhd_wfd_bind",
            "ldr r3, [r4, r5]",
            "movw r2, 0x1974",
            "str r0, [r4, r2]",
            "movw r2, 0x18d4",
            "str r3, [r4, 8]",
            "add sb, sb, r3, lsl 2",
            "str r3, [r4, r2]",
            "str r6, [sb, -0xf9c]",
            "b 0x801eab0",
            "mov r0, r5",
            "movw r1, 0x3c30",
            "bl osl_malloc",
            "subs r4, r0, 0",
            "bne 0x801e818",
            "movw r2, 0",
            "movt r2, 0",
            "ldr r3, [r2]",
            "ands r3, r3, 1",
            "moveq r6, r3",
            "beq 0x801eab0",
            "ldr r1, [0x0801f19c]",
            "mov r6, r4",
            "movw r1, 0",
            "ldr r1, [0x0801f19c]",
            "ldr r0, [0x0801f1c8]",
            "bl printk",
            "b 0x801e7f0",
            "add r0, r4, 0x8c0",
            "mov r1, 0x1000",
            "add r0, r0, 0xc",
            "mov r5, 0",
            "bl __memzero",
            "add r0, r4, 0x3b00",
            "movw r2, 0x3b0c",
            "add r3, r0, 0x10",
            "str r5, [r4, r2]",
            "mov ip, r0",
            "str r5, [r3], 4",
            "add lr, r0, 0x18",
            "str r5, [r3], 4",
            "str r5, [r3], 4",
            "add r0, r0, 0x28",
            "str r5, [r3]",
            "movw r3, 0x3b24",
            "str lr, [ip, 0x18]",
            "str lr, [ip, 0x1c]",
            "ldr r1, [0x0801f1d4]",
            "str r5, [r4, r3]",
            "ldr r2, [0x0801f174]",
            "bl __init_waitqueue_head",
            "ldr r3, [0x0801f1d8]",
            "movw r2, 0x3af8",
            "str r4, [r4, r2]",
            "add r2, r2, 4",
            "add r1, r4, 0x3ac0",
            "ldr r0, [reloc.dhd_rxf_thread]",
            "str r3, [r4, r2]",
            "add r2, r2, 0x24",
            "str r5, [r4, r2]",
            "add r1, r1, 0x38",
            "mvn r2, 0",
            "bl kthread_create_on_node",
            "cmn r0, 0x1000",
            "mov r5, r0",
            "bhi 0x801eeb4",
            "bl wake_up_process",
            "mov r3, 0x3b00",
            "mov r1, 0",
            "str r5, [r4, r3]",
            "movw r0, 0x3b38",
            "ldr r3, [r5, 0xfc]",
            "add r2, r4, 0x3b00",
            "str r1, [r4, r0]",
            "movw r0, 0x3b04",
            "str r3, [r4, r0]",
            "str r1, [r2, 0x3c]",
            "movw r2, 0x3afc",
            "ldr r1, [0x0801f19c]",
            "ldr r2, [r4, r2]",
            "ldr r0, [0x0801f1e0]",
            "bl printk",
            "b 0x801eccc",
            "movw r7, 0x3bc4",
            "ldr sl, [0x0801f174]",
            "ldr r3, [r4, r7]",
            "mov r5, 0",
            "ldr r1, [0x0801f1e4]",
            "mov r2, r3",
            "add r3, r3, r3, lsl 2",
            "add r0, sl, r3, lsl 1",
            "bl sprintf",
            "ldr r1, [sp, 0x14]",
            "add lr, r4, 0x3a40",
            "mov r3, lr",
            "add r0, r4, 0x3a80",
            "add lr, lr, 0x38",
            "movw r2, 0x3a74",
            "add ip, r1, 0x40",
            "str r5, [r4, r2]",
            "str r5, [lr], 4",
            "mov r2, sl",
            "str r5, [lr], 4",
            "str r5, [lr], 4",
            "str r5, [lr]",
            "str ip, [r0], 0x10",
            "str ip, [r3, 0x44]",
            "movw r3, 0x3a8c",
            "str r5, [r4, r3]",
            "ldr r1, [0x0801f1d4]",
            "bl __init_waitqueue_head",
            "ldr r3, [r4, r7]",
            "movw r2, 0x3a60",
            "ldr ip, [sp, 0x14]",
            "str r4, [r4, r2]",
            "add r2, r2, 0x28",
            "str r5, [r4, r2]",
            "mvn r2, 0",
            "add r3, r3, r3, lsl 2",
            "add r1, ip, 0x20",
            "movw ip, 0x3a64",
            "ldr r0, [reloc.dhd_dpc_thread]",
            "add r3, sl, r3, lsl 1",
            "str r3, [r4, ip]",
            "bl kthread_create_on_node",
            "cmn r0, 0x1000",
            "mov r5, r0",
            "bhi 0x801efac",
            "bl wake_up_process",
            "movw r3, 0x3a68",
            "mov r1, 0",
            "str r5, [r4, r3]",
            "movw r0, 0x3aa0",
            "ldr r3, [r5, 0xfc]",
            "add r2, r4, 0x3a80",
            "str r1, [r4, r0]",
            "movw r0, 0x3a6c",
            "str r3, [r4, r0]",
            "str r1, [r2, 0x24]",
            "movw r2, 0x3a64",
            "ldr r1, [0x0801f19c]",
            "ldr r2, [r4, r2]",
            "ldr r0, [0x0801f1e0]",
            "bl printk",
            "b 0x801ecbc",
            "add ip, r4, 0x3ac0",
            "ldr r1, [0x0801f1d4]",
            "mov r3, ip",
            "add lr, ip, 0xc",
            "str r5, [r3], 4",
            "add r0, ip, 0x1c",
            "str r5, [r3], 4",
            "str r5, [r3], 4",
            "str r5, [r3], 4",
            "str r5, [r3]",
            "movw r3, 0x3ad8",
            "str lr, [ip, 0xc]",
            "str lr, [ip, 0x10]",
            "ldr r2, [0x0801f174]",
            "str r5, [r4, r3]",
            "bl __init_waitqueue_head",
            "ldr r3, [0x0801f1ec]",
            "movw r2, 0x3aac",
            "str r4, [r4, r2]",
            "add r2, r2, 4",
            "add r1, r4, 0x3a80",
            "ldr r0, [reloc.dhd_watchdog_thread]",
            "str r3, [r4, r2]",
            "add r2, r2, 0x24",
            "str r5, [r4, r2]",
            "add r1, r1, 0x2c",
            "mvn r2, 0",
            "bl kthread_create_on_node",
            "cmn r0, 0x1000",
            "mov r5, r0",
            "bhi 0x801f06c",
            "bl wake_up_process",
            "movw r3, 0x3ab4",
            "mov r1, 0",
            "str r5, [r4, r3]",
            "movw r0, 0x3aec",
            "ldr r3, [r5, 0xfc]",
            "add r2, r4, 0x3ac0",
            "str r1, [r4, r0]",
            "movw r0, 0x3ab8",
            "str r3, [r4, r0]",
            "str r1, [r2, 0x30]",
            "movw r2, 0x3ab0",
            "ldr r1, [0x0801f19c]",
            "ldr r2, [r4, r2]",
            "ldr r0, [0x0801f1e0]",
            "bl printk",
            "b 0x801ec94",
            "ldr r0, [0x0801f1f4]",
            "mov r5, 0x46",
            "bl printk",
            "ldr r3, [0x0801f1c4]",
            "ldr r3, [r3]",
            "b 0x801ea8c",
            "ldr r1, [r3]",
            "ldr r5, [reloc.allocskbsz]",
            "cmp r1, 0",
            "bne 0x801f120",
            "ldr r3, [reloc.allocskbmode]",
            "mov ip, r1",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "movw r3, 0x3bc4",
            "ldr r2, [r4, r3]",
            "ldrne r3, [0x0801f1fc]",
            "bne 0x801ec28",
            "b 0x801ec24",
            "ldr r0, [r4, 0xc]",
            "mov r2, 0x820",
            "bl osl_ctfpool_init",
            "cmp r0, 0",
            "blt dhd_msg_level",
            "ldr r3, [reloc.allocskbmode]",
            "ldr ip, [r5]",
            "ldr r3, [r3]",
            "b 0x801f0f8",
            "movw ip, 0",
            "movt ip, 0",
            "ldr r3, [ip]",
            "tst r3, 1",
            "beq 0x801f134",
            "ldr r1, [0x0801f19c]",
            "ldr r0, [0x0801f204]",
            "bl printk",
            "b 0x801f134"
        ]
    },
    "sym.wl_host_event": {
        "function_address": "0x080187dc",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x2c",
            "ldr r6, [sp, 0x50]",
            "mov r4, r2",
            "mov r7, r0",
            "mov r8, r1",
            "ldr sb, [sp, 0x54]",
            "mov r0, r2",
            "mov r1, r6",
            "mov sl, r3",
            "mov r2, sb",
            "bl wl_host_event_get_data",
            "subs r5, r0, 0",
            "bne 0x8018848",
            "cmp sl, 0x47",
            "bls 0x8018844",
            "ldrb r3, [r4, 0xf]",
            "ldrb r2, [r4, 0xe]",
            "orr r2, r3, r2, lsl 8",
            "movw r3, 0x8001",
            "cmp r2, r3",
            "beq 0x8018854",
            "ldr r3, [0x08018e64]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "bne 0x8018da4",
            "mvn r5, 0",
            "mov r0, r5",
            "add sp, sp, 0x2c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r0, [0x08018e68]",
            "add r1, r4, 0x13",
            "mov r2, 3",
            "bl memcmp",
            "cmp r0, 0",
            "bne 0x8018834",
            "ldrb r2, [r4, 0x16]",
            "ldrb r3, [r4, 0x17]",
            "orr r3, r3, r2, lsl 8",
            "cmp r3, 1",
            "bne 0x8018834",
            "ldrb r3, [r6, 0x15]",
            "ldrb ip, [r6, 0x14]",
            "ldrb r2, [r6, 4]",
            "ldrb r0, [r6, 0x17]",
            "lsl r3, r3, 0x10",
            "ldrb r1, [r6, 0x16]",
            "str r2, [sp, 8]",
            "orr r3, r3, ip, lsl 24",
            "ldrb r2, [r6, 0xa]",
            "ldr sb, [sb]",
            "orr r3, r3, r0",
            "ldrb ip, [r6, 6]",
            "orr r3, r3, r1, lsl 8",
            "ldrb r0, [r6, 7]",
            "str r2, [sp, 0x18]",
            "ldrb r2, [r6, 0xb]",
            "cmp r3, sl",
            "str sb, [sp, 0x20]",
            "str ip, [sp, 0xc]",
            "str r0, [sp, 0x10]",
            "ldrb sb, [r6, 5]",
            "ldrb r0, [r6, 2]",
            "ldrb r1, [r6, 3]",
            "ldrb fp, [r6, 8]",
            "ldrb ip, [r6, 9]",
            "str r2, [sp, 0x1c]",
            "bhi 0x8018844",
            "add r3, r3, 0x48",
            "cmp r3, sl",
            "str r3, [sp, 0x14]",
            "bgt 0x8018844",
            "lsl ip, ip, 0x10",
            "ldr r3, [sp, 8]",
            "lsl sb, sb, 0x10",
            "orr r1, r1, r0, lsl 8",
            "orr ip, ip, fp, lsl 24",
            "ldr r0, [sp, 0x10]",
            "str r1, [sp, 0x24]",
            "orr ip, ip, r2",
            "ldr r2, [sp, 0xc]",
            "orr sb, sb, r3, lsl 24",
            "ldr r3, [sp, 0x18]",
            "orr sb, sb, r0",
            "orr sl, sb, r2, lsl 8",
            "orr ip, ip, r3, lsl 8",
            "sub r3, sl, 4",
            "str ip, [sp, 0xc]",
            "cmp r3, 0x88",
            "ldrls pc, [pc, r3, lsl 2]",
            "b 0x8018c00",
            "ldr r1, [r8]",
            "mov r0, r7",
            "bl dhd_ifname",
            "mov r2, 0x10",
            "mov r1, r0",
            "add r0, r4, 0x36",
            "bl memcpy",
            "b 0x8018848",
            "ldr ip, [0x08018e64]",
            "add sb, r6, 0x1e",
            "str ip, [sp, 0x10]",
            "mov r1, sb",
            "ldr r0, [r7, 0xc]",
            "bl dhd_ifname2idx",
            "mov r1, r4",
            "mov r3, r0",
            "str r0, [r8]",
            "ldr r2, [sp, 0x14]",
            "ldr r0, [r7, 0xc]",
            "bl dhd_event",
            "ldr ip, [sp, 0x10]",
            "ldr r3, [ip]",
            "tst r3, 2",
            "beq 0x8018be0",
            "ldr ip, [sp, 0xc]",
            "mov r2, sl",
            "ldr r1, [0x08018e6c]",
            "ldr r3, [sp, 0x24]",
            "ldr r0, [0x08018e70]",
            "str ip, [sp]",
            "bl printk",
            "b 0x8018be0",
            "ldr r1, [0x08018e6c]",
            "mvn r5, 0",
            "ldr r0, [0x08018e78]",
            "bl printk",
            "b 0x8018848",
            "mov r0, 0",
            "add sp, sp, 0x4c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "mov r0, sb",
            "mov r1, r6",
            "mov r2, r7",
            "mov r3, r8",
            "bl bcm_psta_arp_proc",
            "cmp r0, 0",
            "movge r0, 0",
            "mvnlt r0, 0",
            "b 0x8031258",
            "ldr ip, [reloc.dhd_psta_dhcp_proc]",
            "str r8, [sp, 8]",
            "str r5, [sp, 0xc]",
            "str ip, [sp, 0x10]",
            "bl bcm_psta_udp_proc",
            "b 0x8031258",
            "cmp r2, 0x11",
            "beq 0x80315c8",
            "cmp r2, 0x3a",
            "bne 0x8031254",
            "add r3, fp, 0x28",
            "add r7, sp, 0x28",
            "add r3, sb, r3",
            "ldr r1, [sp, 0x34]",
            "str r3, [sp, 0x1c]",
            "mov r2, 6",
            "ldrb r3, [sb, 4]",
            "mov r0, r7",
            "add r6, sp, 0x2e",
            "str r3, [sp, 0x20]",
            "ldrb r3, [sb, 5]",
            "str r3, [sp, 0x24]",
            "bl memcpy",
            "mov r0, r6",
            "mov r1, r7",
            "mov r2, 6",
            "bl memcpy",
            "ldrb r3, [sp, 0x2e]",
            "cmp r8, 0",
            "orr r3, r3, 2",
            "strb r3, [sp, 0x2e]",
            "beq 0x8031488",
            "cmp r5, 0",
            "bne 0x80315f0",
            "ldr r1, [sp, 0x24]",
            "mov r0, sb",
            "ldr r3, [sp, 0x20]",
            "str r6, [sp]",
            "str r8, [sp, 4]",
            "orr r2, r1, r3, lsl 8",
            "ldr r1, [sp, 0x1c]",
            "mov r3, r7",
            "rsb r2, fp, r2",
            "uxth r2, r2",
            "bl bcm_psta_icmp6_proc",
            "cmp r0, 0",
            "movge r0, 0",
            "mvnlt r0, 0",
            "b 0x8031258",
            "cmp r3, 0x2c",
            "beq 0x803152c",
            "cmp r3, 0x33",
            "beq 0x8031534",
            "cmp r3, 0x3b",
            "beq 0x8031258",
            "cmp r3, 0x3c",
            "bne 0x80315c0",
            "cmp r3, 0x33",
            "beq 0x8031534",
            "ldrb r3, [r2, 1]",
            "add r3, r3, 1",
            "lsl r3, r3, 3",
            "add fp, r3, fp",
            "uxth fp, fp",
            "ldrb r3, [sb, fp]",
            "add r2, sb, fp",
            "cmp r3, 0",
            "cmpne r3, 0x2b",
            "movne r0, 0",
            "moveq r0, 1",
            "bne 0x80314c4",
            "cmp r3, 0x3b",
            "beq 0x8031254",
            "cmp r3, 0x2c",
            "bne 0x80314e4",
            "mov r3, 8",
            "b 0x80314f8",
            "ldrb r3, [r2, 1]",
            "add r3, r3, 2",
            "lsl r3, r3, 2",
            "b 0x80314f8",
            "bl fcn.08030eb8",
            "subs r5, r0, 0",
            "beq 0x803168c",
            "mov r1, r5",
            "ldr r0, [r4]",
            "bl osl_pktdata",
            "ldrh sb, [sp, 0x42]",
            "mov r2, 1",
            "ldr r1, [sl]",
            "add sb, r0, sb",
            "ldr r0, [r4]",
            "bl osl_pktfree",
            "str r5, [sl]",
            "mov r1, r5",
            "ldr r0, [r4]",
            "bl osl_pktdata",
            "add r0, r0, 6",
            "str r0, [sp, 0x34]",
            "b 0x8031330",
            "mov r2, r3",
            "b 0x8031418",
            "add ip, fp, 0x28",
            "mov r0, r4",
            "add ip, sb, ip",
            "add r1, sp, 0x38",
            "str ip, [sp]",
            "add ip, sp, 0x34",
            "mov r2, sl",
            "mov r3, sb",
            "str ip, [sp, 4]",
            "b 0x803139c",
            "ldr r1, [sl]",
            "ldr r0, [r4]",
            "bl osl_pktdata",
            "add ip, sp, 0x47",
            "mov r1, r0",
            "add r2, sp, 0x42",
            "add r3, sp, 0x44",
            "ldr r0, [r4]",
            "str ip, [sp]",
            "bl bcm_psta_ether_type",
            "mov r0, r4",
            "ldr r1, [sl]",
            "bl fcn.08030eb8",
            "subs r5, r0, 0",
            "beq 0x803168c",
            "ldr r0, [r4]",
            "mov r1, r5",
            "bl osl_pktdata",
            "ldrh r2, [sp, 0x44]",
            "ldrb r3, [r0, r2]",
            "add sb, r0, r2",
            "lsr r2, r3, 4",
            "cmp r2, 6",
            "andne r3, r3, 0xf",
            "lslne r3, r3, 2",
            "beq case.0x8018940.1",
            "add r3, sb, r3",
            "ldr r0, [r4]",
            "mov r2, 1",
            "ldr r1, [sl]",
            "str r3, [sp, 0x1c]",
            "bl osl_pktfree",
            "str r5, [sl]",
            "mov r1, r5",
            "ldr r0, [r4]",
            "bl osl_pktdata",
            "add r0, r0, 6",
            "str r0, [sp, 0x34]",
            "b 0x8031488",
            "mvn r0, 0x1a",
            "b 0x8031258",
            "ldrb r3, [sb, 6]",
            "cmp r3, 0",
            "cmpne r3, 0x2b",
            "movne r0, 0",
            "moveq r0, 1",
            "moveq r1, sb",
            "moveq r2, 0",
            "beq 0x8031730",
            "cmp r3, 0x2c",
            "cmpne r3, 0x33",
            "movne r2, 0",
            "moveq r2, 1",
            "moveq r1, sb",
            "moveq r2, r0",
            "beq 0x8031730",
            "cmp r3, 0x3b",
            "cmpne r3, 0x3c",
            "movne r3, 0",
            "moveq r3, 1",
            "moveq r1, sb",
            "beq 0x8031730",
            "add r3, r3, 0x28",
            "b 0x8031658",
            "cmp r3, 0x2c",
            "beq 0x8031750",
            "cmp r3, 0x33",
            "beq 0x8031758",
            "cmp r3, 0x3b",
            "beq 0x8031768",
            "cmp r3, 0x3c",
            "bne 0x8031780",
            "cmp r3, 0x33",
            "ldrbne r3, [r1, 1]",
            "addne r3, r3, 1",
            "lslne r3, r3, 3",
            "beq 0x8031758",
            "add r2, r3, r2",
            "uxth r2, r2",
            "add r1, sb, r2",
            "ldrb r3, [r1]",
            "cmp r3, 0",
            "cmpne r3, 0x2b",
            "bne 0x80316f0",
            "cmp r3, 0x3b",
            "beq 0x8031768",
            "cmp r3, 0x2c",
            "bne 0x8031710",
            "mov r3, 8",
            "b 0x8031724",
            "ldrb r3, [r1, 1]",
            "add r3, r3, 2",
            "lsl r3, r3, 2",
            "b 0x8031724",
            "ldr r0, [r4]",
            "mov r1, r5",
            "mov r2, 1",
            "bl osl_pktfree",
            "mov r0, 0",
            "b 0x8031258",
            "mov r3, r2",
            "add r3, r3, 0x28",
            "b 0x8031658"
        ]
    },
    "sym.sb_corevendor": {
        "function_address": "0x0800fe40",
        "instructions": [
            "push {r3, lr}",
            "movw r3, 0x4884",
            "ldr r1, [r0, r3]",
            "add r1, r1, 0xff0",
            "add r1, r1, 0xc",
            "bl fcn.0800f9b4",
            "lsr r0, r0, 0x10",
            "pop {r3, pc}"
        ]
    },
    "sym.sb_corereg": {
        "function_address": "0x08010490",
        "instructions": [
            "cmp r1, 0x1f",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r8, r3",
            "movw r3, 0x4898",
            "mov r6, r2",
            "sub sp, sp, 0x14",
            "mov r5, r1",
            "mov r4, r0",
            "ldr r7, [r0, r3]",
            "movhi r6, 0",
            "bhi 0x80105c4",
            "ldr r3, [r0, 4]",
            "cmp r3, 0",
            "beq 0x80105d0",
            "cmp r3, 1",
            "beq 0x8010694",
            "movw r3, 0x4868",
            "ldr r3, [r4, r3]",
            "cmp r3, 0",
            "beq 0x8010504",
            "movw r2, 0x4888",
            "ldr r1, [r4, r2]",
            "movw r2, 0x4860",
            "ldr r2, [r4, r2]",
            "add r1, r1, 0x20",
            "ldr r1, [r7, r1, lsl 2]",
            "cmp r1, r2",
            "movne r3, 0",
            "beq 0x80106d8",
            "str r3, [sp, 4]",
            "mov r0, r4",
            "mov sb, 0",
            "bl si_coreidx",
            "mov r1, r5",
            "mov fp, r0",
            "mov r0, r4",
            "bl sb_setcoreidx",
            "ldr r3, [sp, 0x38]",
            "add sl, r0, r6",
            "orrs r3, r3, r8",
            "bne 0x80105fc",
            "cmp r6, 0xf00",
            "bhs 0x8010628",
            "ldr r2, [r4, 0x3c]",
            "movw r3, 0x5354",
            "cmp r5, 0",
            "cmpeq r2, r3",
            "bne 0x801055c",
            "cmp r6, 0x80",
            "ldreq r6, [sp, 0x38]",
            "beq 0x8010578",
            "movw r3, 0x4858",
            "mov r1, sl",
            "ldr r0, [r4, r3]",
            "add r2, sp, 0xc",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "ldr r6, [sp, 0xc]",
            "cmp sb, 0",
            "bne 0x80105c4",
            "cmp fp, r5",
            "beq 0x8010594",
            "mov r0, r4",
            "mov r1, fp",
            "bl sb_setcoreidx",
            "movw r3, 0x486c",
            "ldr r3, [r4, r3]",
            "cmp r3, 0",
            "beq 0x80105c4",
            "movw r2, 0x4888",
            "ldr r1, [r4, r2]",
            "movw r2, 0x4860",
            "ldr r2, [r4, r2]",
            "add r1, r1, 0x20",
            "ldr r1, [r7, r1, lsl 2]",
            "cmp r1, r2",
            "beq 0x8010680",
            "mov r0, r6",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r2, [r7, r1, lsl 2]",
            "cmp r2, 0",
            "beq 0x80106ec",
            "add sl, r2, r6",
            "mov r3, 0",
            "mov sb, 1",
            "str r3, [sp, 4]",
            "mov fp, r3",
            "ldr r3, [sp, 0x38]",
            "orrs r3, r3, r8",
            "beq 0x8010534",
            "cmp r6, 0xf00",
            "mov r1, sl",
            "blo 0x801063c",
            "mov r0, r4",
            "bl fcn.0800f9b4",
            "ldr r3, [sp, 0x38]",
            "bic r2, r0, r8",
            "mov r1, sl",
            "mov r0, r4",
            "orr r2, r2, r3",
            "bl fcn.0800fafc",
            "mov r0, r4",
            "mov r1, sl",
            "bl fcn.0800f9b4",
            "mov r6, r0",
            "b 0x8010578",
            "movw r3, 0x4858",
            "add r2, sp, 0xc",
            "ldr r0, [r4, r3]",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 0xc]",
            "bic r8, r3, r8",
            "ldr r3, [sp, 0x38]",
            "orr r8, r8, r3",
            "dsb st",
            "ldr r3, [0x08010788]",
            "ldr r3, [r3, 0x18]",
            "cmp r3, 0",
            "beq 0x8010678",
            "blx r3",
            "str r8, [sl]",
            "b 0x801053c",
            "movw r2, 0x4864",
            "ldr r1, [sp, 4]",
            "ldr r0, [r4, r2]",
            "blx r3",
            "b 0x80105c4",
            "add r3, r1, 0x20",
            "ldr r3, [r7, r3, lsl 2]",
            "cmp r3, 0x800",
            "beq 0x8010708",
            "ldr r3, [r4, 0x10]",
            "cmp r3, r5",
            "bne 0x80104d0",
            "ldr r3, [r4, 8]",
            "movw r2, 0x83c",
            "cmp r3, 0x820",
            "cmpne r3, r2",
            "bne 0x801074c",
            "movw r2, 0x4884",
            "add r3, r6, 0x2000",
            "ldr sl, [r4, r2]",
            "add sl, sl, r3",
            "b 0x80105e0",
            "movw r2, 0x4864",
            "ldr r0, [r4, r2]",
            "blx r3",
            "str r0, [sp, 4]",
            "b 0x8010508",
            "add r3, r1, 0x40",
            "mov r1, 0x1000",
            "ldr r0, [r7, r3, lsl 2]",
            "bl __arm_ioremap",
            "mov r2, r0",
            "str r0, [r7, r5, lsl 2]",
            "b 0x80105dc",
            "ldr r3, [r0, 8]",
            "movw r2, 0x83c",
            "cmp r3, 0x820",
            "cmpne r3, r2",
            "bne 0x8010730",
            "movw r2, 0x4884",
            "add r3, r6, 0x3000",
            "ldr sl, [r4, r2]",
            "add sl, sl, r3",
            "b 0x80105e0",
            "movw r2, 0x804",
            "cmp r3, r2",
            "bne 0x80106a4",
            "ldr r3, [r0, 0xc]",
            "cmp r3, 0xc",
            "bls 0x80106a4",
            "b 0x801071c",
            "movw r2, 0x804",
            "cmp r3, r2",
            "beq 0x8010778",
            "movw r2, 0x4884",
            "cmp r6, 0xf00",
            "ldr sl, [r4, r2]",
            "movlo r3, 0x1800",
            "movhs r3, 0x1000",
            "add r3, r3, r6",
            "add sl, sl, r3",
            "b 0x80105e0",
            "ldr r3, [r4, 0xc]",
            "cmp r3, 0xc",
            "bls 0x8010758",
            "b 0x80106c4"
        ]
    },
    "sym.dhdpcie_bus_release": {
        "function_address": "0x0802a568",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r4, r0",
            "ldr r5, [0x0802a77c]",
            "ldr r3, [r5]",
            "tst r3, 2",
            "bne 0x802a738",
            "cmp r4, 0",
            "beq 0x802a6c0",
            "ldr r0, [r4]",
            "ldr r6, [r4, 0x184]",
            "cmp r0, 0",
            "beq 0x802a624",
            "ldr r3, [r5]",
            "ldrb r7, [r0, 0x2a8]",
            "tst r3, 2",
            "bne 0x802a758",
            "bl dhd_os_sdlock",
            "ldr r3, [r4]",
            "mov r2, 0",
            "mov r0, r4",
            "str r2, [r3, 0x14]",
            "bl dhdpcie_bus_intr_disable",
            "movw r0, 0x86a0",
            "movt r0, 1",
            "bl osl_delay",
            "ldr r0, [r4, 0x184]",
            "ldr r1, [r4, 0x20]",
            "ldr r2, [r4, 0x17c]",
            "bl pcie_watchdog_reset",
            "ldr r0, [r4]",
            "bl dhd_os_sdunlock",
            "ldr r3, [r5]",
            "tst r3, 2",
            "bne 0x802a748",
            "ldrb r3, [r4, 0x12c]",
            "cmp r3, 0",
            "bne 0x802a710",
            "mov r1, r6",
            "mov r2, r7",
            "mov r0, r4",
            "bl fcn.08029820",
            "ldr r0, [r4]",
            "bl dhd_detach",
            "ldr r0, [r4]",
            "bl dhd_free",
            "mov r3, 0",
            "str r3, [r4]",
            "ldr r0, [r4, 0x17c]",
            "cmp r0, 0",
            "beq 0x802a63c",
            "bl __arm_iounmap",
            "mov r3, 0",
            "str r3, [r4, 0x17c]",
            "ldr r0, [r4, 0x180]",
            "cmp r0, 0",
            "beq 0x802a654",
            "bl __arm_iounmap",
            "mov r3, 0",
            "str r3, [r4, 0x180]",
            "ldr r3, [r5]",
            "tst r3, 2",
            "bne 0x802a76c",
            "ldr r3, [r4]",
            "cmp r3, 0",
            "beq 0x802a6dc",
            "ldrb r3, [r3, 0x12]",
            "cmp r3, 0",
            "beq 0x802a6dc",
            "ldr r1, [r4, 0x170]",
            "cmp r1, 0",
            "beq 0x802a698",
            "mov r0, r6",
            "mov r2, 0x50",
            "bl osl_mfree",
            "mov r3, 0",
            "str r3, [r4, 0x170]",
            "ldr r1, [r4, 0x154]",
            "cmp r1, 0",
            "beq 0x802a6b0",
            "mov r0, r6",
            "ldr r2, [r4, 0x150]",
            "bl osl_mfree",
            "mov r0, r6",
            "mov r1, r4",
            "movw r2, 0x262c",
            "bl osl_mfree",
            "ldr r3, [r5]",
            "tst r3, 2",
            "popeq {r3, r4, r5, r6, r7, pc}",
            "ldr r0, [0x0802a780]",
            "ldr r1, [0x0802a784]",
            "pop {r3, r4, r5, r6, r7, lr}",
            "b printk",
            "ldr r1, [r4, 0x24]",
            "cmp r1, 0",
            "beq 0x802a6f4",
            "ldr r2, [r4, 0x28]",
            "cmp r2, 0",
            "bne 0x802a724",
            "ldr r3, [r5]",
            "tst r3, 2",
            "beq 0x802a678",
            "ldr r1, [0x0802a788]",
            "ldr r0, [0x0802a780]",
            "bl printk",
            "b 0x802a678",
            "mov r0, r4",
            "bl dhdpcie_bus_intr_disable",
            "mov r0, r4",
            "bl dhdpcie_free_irq",
            "b 0x802a5fc",
            "mov r0, r6",
            "bl osl_mfree",
            "mov r3, 0",
            "str r3, [r4, 0x24]",
            "b 0x802a6f4",
            "ldr r1, [0x0802a784]",
            "ldr r0, [0x0802a78c]",
            "bl printk",
            "b 0x802a580",
            "ldr r1, [0x0802a790]",
            "ldr r0, [0x0802a794]",
            "bl printk",
            "b 0x802a5f0",
            "ldr r0, [0x0802a798]",
            "ldr r1, [0x0802a790]",
            "bl printk",
            "ldr r0, [r4]",
            "b dhd_os_sdlock",
            "ldr r1, [0x0802a788]",
            "ldr r0, [0x0802a78c]",
            "bl printk",
            "b 0x802a660"
        ]
    },
    "fcn.08029820": {
        "function_address": "0x08029820",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "mov r4, r0",
            "ldr r5, [0x0802997c]",
            "sub sp, sp, 0xc",
            "mov r7, r1",
            "mov r6, r2",
            "ldr r3, [r5]",
            "tst r3, 2",
            "bne 0x8029964",
            "ldr r3, [r4]",
            "cmp r3, 0",
            "beq 0x8029870",
            "ldrb r3, [r3, 0x12]",
            "cmp r3, 0",
            "beq 0x8029870",
            "ldr r3, [r5]",
            "tst r3, 2",
            "bne 0x8029950",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, pc}",
            "ldr r0, [r4, 0x20]",
            "cmp r0, 0",
            "beq 0x802985c",
            "cmp r6, 0",
            "beq 0x80298fc",
            "movw r3, 0x25f4",
            "ldrb r3, [r4, r3]",
            "cmp r3, 0",
            "bne 0x80298d8",
            "ldr r3, [r0, 0xc]",
            "cmp r3, 0xd",
            "beq 0x8029938",
            "cmp r0, 0",
            "beq 0x80298b4",
            "bl si_detach",
            "mov r3, 0",
            "str r3, [r4, 0x20]",
            "ldr r1, [r4, 0x24]",
            "cmp r1, 0",
            "beq 0x80298cc",
            "ldr r2, [r4, 0x28]",
            "cmp r2, 0",
            "bne 0x8029924",
            "mov r3, 0",
            "str r3, [r4, 0x24]",
            "b 0x802985c",
            "ldr ip, [r0, 0x10]",
            "mov r1, 0",
            "str r1, [sp]",
            "mov r2, 0x1a0",
            "mvn r3, 0",
            "mov r1, ip",
            "bl si_corereg",
            "ldr r0, [r4, 0x20]",
            "b 0x8029894",
            "mov r1, r0",
            "ldr r2, [r4, 0x17c]",
            "ldr r0, [r4, 0x184]",
            "bl pcie_watchdog_reset",
            "movw r3, 0x25f4",
            "ldr r0, [r4, 0x20]",
            "ldrb r3, [r4, r3]",
            "cmp r3, 0",
            "beq 0x8029894",
            "b 0x80298d8",
            "mov r0, r7",
            "bl osl_mfree",
            "mov r3, 0",
            "str r3, [r4, 0x24]",
            "b 0x802985c",
            "mov r1, r0",
            "ldr r2, [r4, 0x17c]",
            "ldr r0, [r4, 0x184]",
            "bl pcie_serdes_iddqdisable",
            "ldr r0, [r4, 0x20]",
            "b 0x80298a0",
            "ldr r0, [0x08029980]",
            "ldr r1, [0x08029984]",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, lr}",
            "b printk",
            "ldr r2, [r0]",
            "ldr r1, [0x08029984]",
            "ldr r0, [0x08029988]",
            "ldrb r3, [r2, 0x12]",
            "bl printk",
            "b 0x8029844"
        ]
    },
    "sym.dhd_bus_devreset": {
        "function_address": "0x0802d0fc",
        "instructions": [
            "cmp r1, 1",
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r5, r0",
            "ldr r4, [r0, 4]",
            "beq 0x802d148",
            "ldr r6, [0x0802d370]",
            "ldr r3, [r6]",
            "tst r3, 1",
            "bne 0x802d30c",
            "ldr r3, [r4]",
            "ldrb r3, [r3, 0x12]",
            "cmp r3, 0",
            "bne 0x802d1e0",
            "ldr r3, [r6]",
            "tst r3, 1",
            "bne 0x802d2dc",
            "mvn r7, 0x23",
            "mov r0, r7",
            "pop {r3, r4, r5, r6, r7, pc}",
            "ldrb r3, [r0, 0x12]",
            "cmp r3, 0",
            "bne 0x802d24c",
            "ldr r6, [0x0802d370]",
            "ldr r3, [r6]",
            "tst r3, 1",
            "bne 0x802d31c",
            "mov r7, 0",
            "mov r0, r5",
            "bl dhd_os_sdlock",
            "mov r1, r7",
            "mov r0, r5",
            "bl dhd_os_wd_timer",
            "mov r1, r7",
            "mov r0, r4",
            "bl dhd_bus_stop",
            "mov r0, r5",
            "bl dhd_flow_rings_deinit",
            "ldr r3, [r4]",
            "mov r0, r4",
            "ldr r1, [r3]",
            "ldrb r2, [r3, 0x2a8]",
            "bl fcn.08029820",
            "ldr r3, [r4]",
            "mov r2, 1",
            "mov r0, r5",
            "strb r2, [r3, 0x12]",
            "ldr r3, [r4]",
            "strb r7, [r3, 0x10]",
            "bl dhd_os_sdunlock",
            "ldr r3, [r6]",
            "ands r3, r3, 1",
            "moveq r7, r3",
            "beq 0x802d140",
            "ldr r1, [0x0802d374]",
            "ldr r0, [0x0802d378]",
            "bl printk",
            "b 0x802d140",
            "mov r0, r5",
            "bl dhd_os_sdlock",
            "mov r0, r4",
            "bl fcn.080280f4",
            "cmp r0, 0",
            "bne 0x802d2f0",
            "ldr r2, [r6]",
            "ldr r3, [r4]",
            "tst r2, 4",
            "str r0, [r3, 0x14]",
            "bne 0x802d340",
            "ldr r1, [r4]",
            "mov r0, r4",
            "ldr r2, [r4, 0x54]",
            "ldr r3, [r4, 0x58]",
            "ldr r1, [r1]",
            "bl dhd_bus_download_firmware",
            "subs r1, r0, 0",
            "beq 0x802d270",
            "ldr r3, [r6]",
            "tst r3, 1",
            "mvneq r7, 0x23",
            "bne 0x802d32c",
            "mov r0, r5",
            "bl dhd_os_sdunlock",
            "mov r0, r7",
            "pop {r3, r4, r5, r6, r7, pc}",
            "ldr r3, [0x0802d370]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "beq 0x802d13c",
            "ldr r1, [0x0802d374]",
            "mvn r7, 0x23",
            "ldr r0, [0x0802d37c]",
            "bl printk",
            "b 0x802d140",
            "ldr r0, [r4]",
            "bl dhd_bus_init",
            "subs r7, r0, 0",
            "beq 0x802d29c",
            "ldr r3, [r6]",
            "tst r3, 1",
            "bne 0x802d350",
            "mov r0, r4",
            "mov r1, 0",
            "bl dhd_bus_stop",
            "b 0x802d23c",
            "ldr r3, [r4]",
            "mov r0, r5",
            "ldr r2, [reloc.dhd_watchdog_ms]",
            "strb r7, [r3, 0x12]",
            "ldr r3, [r4]",
            "ldr r1, [r2]",
            "mov r2, 1",
            "strb r2, [r3, 0x10]",
            "bl dhd_os_wd_timer",
            "ldr r3, [r6]",
            "tst r3, 1",
            "beq 0x802d23c",
            "ldr r1, [0x0802d374]",
            "ldr r0, [0x0802d384]",
            "bl printk",
            "b 0x802d23c",
            "ldr r1, [0x0802d374]",
            "mvn r7, 0x23",
            "ldr r0, [0x0802d388]",
            "bl printk",
            "b 0x802d140",
            "ldr r3, [r6]",
            "tst r3, 1",
            "bne 0x802d360",
            "mov r0, r5",
            "mvn r7, 0x23",
            "bl dhd_os_sdunlock",
            "b 0x802d140",
            "ldr r1, [0x0802d374]",
            "ldr r0, [0x0802d38c]",
            "bl printk",
            "b 0x802d120",
            "ldr r1, [0x0802d374]",
            "ldr r0, [0x0802d390]",
            "bl printk",
            "b 0x802d164",
            "ldr r1, [0x0802d374]",
            "mvn r7, 0x23",
            "ldr r0, [0x0802d394]",
            "bl printk",
            "b 0x802d23c",
            "ldr r1, [0x0802d374]",
            "ldr r0, [0x0802d398]",
            "bl printk",
            "b 0x802d20c",
            "ldr r1, [0x0802d374]",
            "ldr r0, [0x0802d39c]",
            "bl printk",
            "b 0x802d28c",
            "ldr r1, [0x0802d374]",
            "ldr r0, [0x0802d3a0]",
            "bl printk",
            "b 0x802d2fc"
        ]
    },
    "fcn.080280f4": {
        "function_address": "0x080280f4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r4, r0",
            "ldr r5, [0x08028630]",
            "sub sp, sp, 0x18",
            "ldr r0, [r0, 0x184]",
            "ldr r3, [r5]",
            "ldr sb, [r4, 0x17c]",
            "mov r7, r0",
            "ldrh sl, [r4, 0x52]",
            "tst r3, 2",
            "bne 0x80285a0",
            "mov r6, 0",
            "mov r8, 1",
            "mov r3, 0x18000000",
            "mov r2, 4",
            "mov r1, 0x80",
            "strb r8, [r4, 0x160]",
            "str r6, [r4, 0x20]",
            "bl osl_pci_write_config",
            "mov r0, r7",
            "mov r1, r6",
            "mov r2, 4",
            "bl osl_pci_read_config",
            "uxth r0, r0",
            "movw r3, 0x14e4",
            "cmp r0, r3",
            "beq 0x80281a0",
            "ldr r3, [r5]",
            "tst r3, 1",
            "bne 0x80285c8",
            "ldr r0, [r4, 0x20]",
            "cmp r0, 0",
            "ldreq r3, [r5]",
            "beq 0x802818c",
            "bl si_detach",
            "ldr r3, [r5]",
            "mov r2, 0",
            "str r2, [r4, 0x20]",
            "tst r3, 2",
            "moveq r0, 1",
            "bne 0x80285b4",
            "add sp, sp, 0x18",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}",
            "add lr, r4, 0x24",
            "add ip, r4, 0x28",
            "mov r0, sl",
            "mov r1, r7",
            "mov r2, sb",
            "mov r3, r8",
            "stm sp, {r4, lr}",
            "str ip, [sp, 8]",
            "bl si_attach",
            "cmp r0, 0",
            "str r0, [r4, 0x20]",
            "beq 0x8028380",
            "mov ip, 4",
            "mov r1, r6",
            "mvn r3, 0",
            "mov r2, 0x80",
            "str ip, [sp]",
            "bl si_corereg",
            "movw r0, 0x86a0",
            "movt r0, 1",
            "bl osl_delay",
            "mov r2, r6",
            "ldr r0, [r4, 0x20]",
            "movw r1, 0x83c",
            "bl si_setcore",
            "ldr r6, [r4, 0x17c]",
            "dsb st",
            "ldr r8, [0x08028634]",
            "ldr r3, [r8, 0x18]",
            "cmp r3, 0",
            "beq 0x8028220",
            "blx r3",
            "mov r3, 0x4e0",
            "mov r0, r7",
            "str r3, [r6, 0x120]",
            "add r1, r6, 0x124",
            "add r2, sp, 0x14",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "ldr r7, [sp, 0x14]",
            "dsb st",
            "ldr r3, [r8, 0x18]",
            "cmp r3, 0",
            "beq 0x8028254",
            "blx r3",
            "str r7, [r6, 0x124]",
            "mov r2, 0",
            "movw r1, 0x825",
            "ldr r0, [r4, 0x20]",
            "bl si_setcore",
            "subs r2, r0, 0",
            "beq 0x802839c",
            "ldr r0, [r4, 0x20]",
            "bl si_corerev",
            "movw r1, 0x849",
            "str r0, [r4, 0x34]",
            "mov r2, 0",
            "ldr r0, [r4, 0x20]",
            "bl si_setcore",
            "subs r6, r0, 0",
            "beq 0x80283f4",
            "ldr r0, [r4, 0x20]",
            "bl si_sysmem_size",
            "cmp r0, 0",
            "str r0, [r4, 0x40]",
            "beq 0x8028364",
            "mov r3, 0x1c0000",
            "mov r2, 0x200000",
            "mov r0, r3",
            "str r2, [r4, 0x168]",
            "str r3, [r4, 0x40]",
            "ldr r6, [0x08028638]",
            "str r0, [r4, 0x3c]",
            "ldr r1, [r6]",
            "cmp r1, 0",
            "beq 0x80282f0",
            "ldr r3, [r5]",
            "tst r3, 1",
            "bne 0x8028604",
            "cmp r1, 0x20000",
            "ble 0x80282f0",
            "ldr r3, [r4, 0x40]",
            "cmp r1, r3",
            "strlt r1, [r4, 0x3c]",
            "ldr r3, [r5]",
            "tst r3, 1",
            "bne 0x8028618",
            "ldr r0, [r4, 0x20]",
            "mov r6, 0",
            "bl si_socram_srmem_size",
            "ldr r1, [reloc.dhd_intr]",
            "mov r2, 0x300",
            "ldr r3, [r5]",
            "movt r2, 0xff",
            "str r0, [r4, 0x44]",
            "movw r0, 0x25f0",
            "ldr r1, [r1]",
            "str r2, [r4, r0]",
            "mov r2, 1",
            "subs r1, r1, r6",
            "movne r1, 1",
            "ands r0, r3, 2",
            "movw r3, 0x25f8",
            "strb r1, [r4, 0x12c]",
            "str r2, [r4, r3]",
            "add r3, r3, 0xd",
            "strb r6, [r4, r3]",
            "beq 0x8028198",
            "ldr r0, [0x08028640]",
            "ldr r1, [0x08028644]",
            "bl printk",
            "mov r0, r6",
            "b 0x8028198",
            "ldr r3, [r5]",
            "tst r3, 1",
            "beq 0x802816c",
            "ldr r1, [0x08028644]",
            "ldr r0, [0x08028648]",
            "bl printk",
            "b 0x802816c",
            "ldr r3, [r5]",
            "tst r3, 1",
            "beq 0x802818c",
            "ldr r1, [0x08028644]",
            "ldr r0, [0x0802864c]",
            "bl printk",
            "b 0x802816c",
            "ldr r0, [r4, 0x20]",
            "movw r1, 0x82a",
            "bl si_setcore",
            "subs r2, r0, 0",
            "bne 0x8028270",
            "ldr r0, [r4, 0x20]",
            "movw r1, 0x83e",
            "bl si_setcore",
            "subs r2, r0, 0",
            "bne 0x8028270",
            "ldr r0, [r4, 0x20]",
            "movw r1, 0x847",
            "bl si_setcore",
            "cmp r0, 0",
            "bne 0x8028270",
            "ldr r3, [r5]",
            "tst r3, 1",
            "beq 0x802816c",
            "ldr r1, [0x08028644]",
            "ldr r0, [0x08028650]",
            "bl printk",
            "b 0x802816c",
            "ldr r0, [r4, 0x20]",
            "movw r1, 0x83e",
            "mov r2, r6",
            "bl si_setcore",
            "cmp r0, 0",
            "ldr r0, [r4, 0x20]",
            "beq si_socram_size",
            "bl si_tcm_size",
            "cmp r0, 0",
            "str r0, [r4, 0x40]",
            "bne 0x802843c",
            "ldr r3, [r5]",
            "tst r3, 1",
            "beq 0x802816c",
            "ldr r1, [0x08028644]",
            "ldr r0, [0x08028654]",
            "bl printk",
            "b 0x802816c",
            "ldr r2, [r4, 0x20]",
            "movw r1, 0x4360",
            "ldrh r3, [r2, 0x3c]",
            "cmp r3, r1",
            "streq r6, [r4, 0x168]",
            "beq 0x80282bc",
            "bhi 0x80284e8",
            "movw r1, 0x4350",
            "cmp r3, r1",
            "beq 0x80284dc",
            "bhi 0x8028564",
            "movw r1, 0x4339",
            "cmp r3, r1",
            "beq 0x80284dc",
            "bhi 0x80285d8",
            "movw r2, 0x4335",
            "cmp r3, r2",
            "beq 0x80284dc",
            "ldr r3, [r5]",
            "mov r2, 0",
            "str r2, [r4, 0x168]",
            "tst r3, 1",
            "beq 0x80282bc",
            "ldr r0, [0x08028658]",
            "ldr r1, [0x08028644]",
            "bl printk",
            "ldr r0, [r4, 0x40]",
            "b 0x80282bc",
            "movw r2, 0xaa32",
            "cmp r3, r2",
            "bhi 0x8028590",
            "movw r2, 0xaa31",
            "cmp r3, r2",
            "bhs 0x80284dc",
            "movw r2, 0xaa02",
            "cmp r3, r2",
            "beq 0x80284dc",
            "add r2, r2, 0x2d",
            "cmp r3, r2",
            "bne 0x8028484",
            "mov r3, 0x180000",
            "str r3, [r4, 0x168]",
            "b 0x80282bc",
            "movw r1, 0xa9c6",
            "cmp r3, r1",
            "beq 0x80284dc",
            "bhi 0x80284ac",
            "movw r1, 0xa9be",
            "cmp r3, r1",
            "blo 0x8028484",
            "add r1, r1, 1",
            "cmp r3, r1",
            "bls 0x8028520",
            "sub r3, r3, 0xa900",
            "sub r3, r3, 0xc1",
            "cmp r3, 1",
            "bhi 0x8028484",
            "ldr r3, [r2, 0x40]",
            "cmp r3, 5",
            "movhi r3, 0x198000",
            "movls r3, 0x1b0000",
            "str r3, [r4, 0x168]",
            "b 0x80282bc",
            "bl si_socram_size",
            "cmp r0, 0",
            "str r0, [r4, 0x40]",
            "bne 0x80282bc",
            "ldr r3, [r5]",
            "tst r3, 1",
            "beq 0x802816c",
            "ldr r1, [0x08028644]",
            "ldr r0, [0x0802865c]",
            "bl printk",
            "b 0x802816c",
            "movw r2, 0x4356",
            "cmp r3, r2",
            "beq 0x80284dc",
            "bhi 0x80285f4",
            "movw r2, 0x4354",
            "cmp r3, r2",
            "beq 0x80284dc",
            "add r2, r2, 1",
            "cmp r3, r2",
            "bne 0x8028484",
            "b 0x80284dc",
            "movw r2, 0xaa52",
            "cmp r3, r2",
            "bne 0x8028484",
            "b 0x80284dc",
            "ldr r0, [0x08028660]",
            "ldr r1, [0x08028644]",
            "bl printk",
            "ldr r0, [r4, 0x184]",
            "b 0x8028120",
            "ldr r0, [0x08028664]",
            "ldr r1, [0x08028644]",
            "bl printk",
            "mov r0, 1",
            "b 0x8028198",
            "ldr r1, [0x08028644]",
            "ldr r0, [0x08028668]",
            "bl printk",
            "b 0x802816c",
            "movw r1, 0x4345",
            "cmp r3, r1",
            "beq 0x8028520",
            "movw r2, 0x4349",
            "cmp r3, r2",
            "bne 0x8028484",
            "b 0x80284dc",
            "movw r2, 0x4358",
            "cmp r3, r2",
            "bne 0x8028580",
            "b 0x80284dc",
            "ldr r0, [0x0802866c]",
            "mov r2, 0x20000",
            "bl printk",
            "ldr r1, [r6]",
            "b 0x80282dc",
            "ldr r1, [r4, 0x3c]",
            "ldr r2, [r4, 0x40]",
            "ldr r3, [r4, 0x168]",
            "ldr r0, [0x08028670]",
            "bl printk",
            "b 0x80282fc"
        ]
    },
    "sym.dhd_runner_attach": {
        "function_address": "0x08004390",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "movw r3, 0x1974",
            "ldr r6, [0x08004680]",
            "mov r5, r0",
            "sub sp, sp, 0x4c",
            "mov fp, r1",
            "ldr r0, [r0, r3]",
            "mov r3, 0",
            "ldr r2, [r6]",
            "ldr sl, [reloc.bdmf_global_trace_level]",
            "str r0, [sp, 0xc]",
            "tst r2, 4",
            "str r3, [sp, 0x10]",
            "ldr sb, [sl]",
            "str r3, [sp, 0x14]",
            "str r3, [sp, 0x18]",
            "str r3, [sp, 0x1c]",
            "bne 0x80044f0",
            "ldr r0, [r5]",
            "mov r1, 0x150",
            "bl osl_mallocz",
            "subs r4, r0, 0",
            "beq 0x80044d4",
            "mov r0, 0",
            "add r1, r4, 0x70",
            "bl rdpa_cpu_get",
            "subs r8, r0, 0",
            "bne 0x8004478",
            "ldr r3, [0x08004688]",
            "add r7, sp, 0x20",
            "ldr r8, [r6]",
            "add ip, sp, 0x2c",
            "add lr, r3, 0xc",
            "ldm r3, {r0, r1, r2}",
            "tst r8, 4",
            "stm r7, {r0, r1, r2}",
            "ldm lr, {r0, r1, r2}",
            "stm ip, {r0, r1, r2}",
            "bne 0x8004504",
            "movw r7, 0x1974",
            "str r5, [r4]",
            "ldr r3, [r5, r7]",
            "add r2, sp, 0x48",
            "mov r0, r4",
            "mov r1, 0x80",
            "add r3, r2, r3, lsl 2",
            "ldr r3, [r3, -0x28]",
            "str r3, [r4, 4]",
            "ldr r3, [r5, r7]",
            "add r3, r2, r3, lsl 2",
            "ldr r3, [r3, -0x1c]",
            "str r3, [r4, 8]",
            "bl fcn.080032b0",
            "subs r8, r0, 0",
            "beq 0x8004494",
            "ldr r3, [r6]",
            "tst r3, 1",
            "bne 0x800462c",
            "cmp r8, 0",
            "blt 0x80044c4",
            "mov r4, 0",
            "str sb, [sl]",
            "mov r0, r4",
            "add sp, sp, 0x4c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "mov r3, 0x4000",
            "mov r0, r4",
            "str r3, [r4, 0x124]",
            "add r1, r4, 0x120",
            "mov r2, 1",
            "bl fcn.08002b8c",
            "cmp r0, 0",
            "str r0, [r4, 0x120]",
            "bne 0x800451c",
            "ldr r3, [r6]",
            "tst r3, 1",
            "bne 0x800461c",
            "mov r0, r5",
            "mov r1, r4",
            "bl dhd_runner_detach",
            "b 0x8004480",
            "ldr r3, [r6]",
            "tst r3, 1",
            "beq 0x8004488",
            "ldr r1, [0x0800468c]",
            "ldr r0, [0x08004690]",
            "bl printk",
            "b 0x8004488",
            "mov r2, r5",
            "ldr r1, [0x0800468c]",
            "ldr r0, [0x08004694]",
            "bl printk",
            "b 0x80043d8",
            "add r1, r3, 0x18",
            "mov r2, r4",
            "mov r3, r5",
            "ldr r0, [0x08004698]",
            "bl printk",
            "b 0x800442c",
            "ldr r3, [r6]",
            "str r8, [r4, 0x134]",
            "tst r3, 4",
            "bne 0x800465c",
            "add r0, sp, 0xc",
            "bl rdpa_dhd_helper_wakeup_information_get",
            "ldr r1, [sp, 0x10]",
            "ldr r2, [sp, 0x14]",
            "ldr r0, [0x0800469c]",
            "bl printk",
            "ldr r1, [sp, 0x18]",
            "ldr r2, [sp, 0x1c]",
            "ldr r0, [0x080046a0]",
            "bl printk",
            "movw r3, 0x1974",
            "mov r1, 8",
            "ldr r2, [0x080046a4]",
            "add r0, sp, 0x38",
            "ldr r3, [r5, r3]",
            "bl snprintf",
            "mov r3, 0",
            "add r1, sp, 0x48",
            "str r3, [r1, -8]!",
            "add r2, sp, 0x44",
            "add r0, sp, 0x38",
            "strb r3, [sp, 0x3c]",
            "str r3, [sp, 0x44]",
            "bl BcmMemReserveGetByName",
            "cmp r0, 0",
            "add r1, r4, 0x110",
            "moveq r3, 3",
            "mov r0, r4",
            "streq r3, [r4, 0x118]",
            "moveq r3, 0x400",
            "streq r3, [r4, 0x11c]",
            "bl fcn.08002698",
            "ldr ip, [r4, 0x110]",
            "ldr r3, [0x080046a8]",
            "ldr r2, [0x080046ac]",
            "cmp ip, 0",
            "ldr r0, [0x080046b0]",
            "movne r2, r3",
            "ldr r1, [0x0800468c]",
            "ldr r3, [r4, 0x114]",
            "bl printk",
            "ldr r3, [r4, 0x118]",
            "tst r3, 1",
            "beq 0x80045f4",
            "mov r3, 0",
            "str r3, [fp, 0x24]",
            "ldr r3, [sp, 0x14]",
            "str r3, [fp, 0x18]",
            "ldr r3, [sp, 0x10]",
            "str r3, [fp, 0x20]",
            "ldr r3, [r4, 0x110]",
            "cmp r3, 1",
            "bne 0x8004488",
            "mov r3, 0",
            "str r3, [fp, 0x3c]",
            "ldr r3, [sp, 0x1c]",
            "str r3, [fp, 0x30]",
            "ldr r3, [sp, 0x18]",
            "str r3, [fp, 0x38]",
            "b 0x8004488",
            "ldr r1, [0x0800468c]",
            "ldr r0, [0x080046b4]",
            "bl printk",
            "b 0x80044c4",
            "ldr r0, [0x080046b8]",
            "mov r2, r8",
            "ldr r1, [0x080046bc]",
            "bl printk",
            "ldr r3, [0x08004680]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "beq 0x8004478",
            "ldr r1, [0x0800468c]",
            "ldr r0, [0x080046c0]",
            "bl printk",
            "b 0x8004478",
            "ldr r2, [r4]",
            "mov r3, r0",
            "ldr r1, [r4, 0x128]",
            "ldr r0, [0x080046c4]",
            "str r1, [sp]",
            "ldr r1, [r2, r7]",
            "ldr r2, [r4, 0x124]",
            "bl printk",
            "b 0x800452c"
        ]
    },
    "fcn.08002b8c": {
        "function_address": "0x08002b8c",
        "instructions": [
            "cmp r2, 1",
            "mov r3, 0",
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r5, r2",
            "sub sp, sp, 0x10",
            "ldr r2, [r0]",
            "mov r4, r1",
            "str r3, [r1]",
            "str r3, [r1, 0xc]",
            "beq 0x8002c30",
            "cmp r5, 2",
            "beq 0x8002c14",
            "ldr r0, [r2]",
            "add ip, r1, 8",
            "add r3, sp, 0xc",
            "ldr r1, [r1, 4]",
            "mov r2, 4",
            "str ip, [sp]",
            "bl osl_dma_alloc_consistent",
            "add r3, r0, 0x40000000",
            "str r0, [r4]",
            "str r3, [r4, 8]",
            "cmp r0, 0",
            "beq 0x8002c0c",
            "ldr r1, [r4, 4]",
            "cmp r1, 0",
            "bne __memzero",
            "cmp r5, 1",
            "beq 0x8002c0c",
            "ldr r1, [r4, 4]",
            "bl osl_cache_flush",
            "ldr r0, [r4]",
            "add sp, sp, 0x10",
            "pop {r4, r5, r6, r7, r8, pc}",
            "ldr r0, [r1, 4]",
            "movw r1, 0x8021",
            "bl __kmalloc",
            "add r3, r0, 0x40000000",
            "str r0, [r4]",
            "str r3, [r4, 8]",
            "b 0x8002be4",
            "ldr ip, [r0, 0x120]",
            "ldr r1, [r1, 4]",
            "cmp ip, r3",
            "beq 0x8002c64",
            "add r3, r1, 0x3fc",
            "ldr r6, [r0, 0x134]",
            "add r3, r3, 3",
            "ldr r8, [r0, 0x124]",
            "bic r3, r3, 0x3fc",
            "bic r3, r3, 3",
            "add r7, r3, r6",
            "cmp r8, r7",
            "bhs 0x8002c90",
            "ldr r0, [r2, 4]",
            "mov r3, 0xd0",
            "add r2, r4, 8",
            "ldr r0, [r0, 4]",
            "add r0, r0, 0x60",
            "bl dma_alloc_coherent",
            "str r0, [r4]",
            "b 0x8002be4",
            "bl __memzero",
            "ldr r0, [r4]",
            "b 0x8002bf8",
            "ldr r2, [0x08002cfc]",
            "add ip, ip, r6",
            "str ip, [r4]",
            "ldr ip, [r0, 0x134]",
            "ldr r1, [r0, 0x128]",
            "ldr r2, [r2]",
            "str r3, [r4, 0x14]",
            "add r1, ip, r1",
            "str r1, [r4, 8]",
            "tst r2, 4",
            "ldr r2, [r0, 0x134]",
            "add r3, r2, r3",
            "str r3, [r0, 0x134]",
            "ldreq r0, [r4]",
            "beq 0x8002be4",
            "ldr r3, [r0, 0x120]",
            "ldr r2, [r4, 8]",
            "ldr r1, [r0]",
            "ldr r0, [0x08002d00]",
            "stm sp, {r2, r3}",
            "movw r3, 0x1974",
            "ldr r1, [r1, r3]",
            "ldr r2, [r4, 0x14]",
            "ldr r3, [r4]",
            "bl printk",
            "ldr r0, [r4]",
            "b 0x8002be4"
        ]
    },
    "sym.dhdpcie_bus_attach": {
        "function_address": "0x08029f50",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sl, lr}",
            "mov sl, r3",
            "ldr r5, [0x0802a124]",
            "mov r4, r0",
            "mov r6, r1",
            "mov r8, r2",
            "ldr r3, [r5]",
            "tst r3, 2",
            "bne 0x802a0fc",
            "mov r0, r4",
            "movw r1, 0x262c",
            "bl osl_mallocz",
            "subs r7, r0, 0",
            "beq 0x802a054",
            "add ip, r7, 8",
            "add r2, r7, 0x10",
            "add r3, r7, 0x18",
            "str r6, [r7, 0x17c]",
            "str r8, [r7, 0x180]",
            "mov r0, r4",
            "str r4, [r7, 0x184]",
            "mov r1, 0x50",
            "stmib r7, {sl, ip}",
            "str ip, [r7, 0xc]",
            "str r2, [r7, 0x10]",
            "str r2, [r7, 0x14]",
            "str r3, [r7, 0x18]",
            "str r3, [r7, 0x1c]",
            "bl osl_mallocz",
            "cmp r0, 0",
            "str r0, [r7, 0x170]",
            "beq 0x802a030",
            "mov r0, r7",
            "bl fcn.080280f4",
            "subs r6, r0, 0",
            "beq 0x802a078",
            "ldr r3, [r5]",
            "tst r3, 1",
            "bne 0x802a10c",
            "tst r3, 2",
            "bne 0x802a0ec",
            "cmp r7, 0",
            "beq 0x802a028",
            "ldr r1, [r7, 0x170]",
            "cmp r1, 0",
            "beq 0x802a014",
            "mov r0, r4",
            "mov r2, 0x50",
            "bl osl_mfree",
            "mov r1, r7",
            "mov r0, r4",
            "movw r2, 0x262c",
            "mov r7, 0",
            "bl osl_mfree",
            "mov r0, r7",
            "pop {r3, r4, r5, r6, r7, r8, sl, pc}",
            "ldr r3, [r5]",
            "tst r3, 1",
            "beq 0x8029fec",
            "ldr r0, [0x0802a128]",
            "ldr r1, [0x0802a12c]",
            "bl printk",
            "ldr r3, [0x0802a124]",
            "ldr r3, [r3]",
            "b 0x8029fec",
            "ldr r3, [r5]",
            "tst r3, 1",
            "beq 0x8029fec",
            "ldr r0, [0x0802a130]",
            "ldr r1, [0x0802a12c]",
            "bl printk",
            "ldr r3, [0x0802a124]",
            "ldr r3, [r3]",
            "b 0x8029fec",
            "mov r0, r4",
            "mov r1, r7",
            "mov r2, r6",
            "bl dhd_attach",
            "cmp r0, 0",
            "str r0, [r7]",
            "beq 0x802a0c8",
            "ldr r1, [r5]",
            "mov r3, 1",
            "str r6, [r0, 0x14]",
            "ldr r2, [r7]",
            "tst r1, 2",
            "movw r1, 0x2604",
            "strb r3, [r7, r1]",
            "strb r3, [r2, 0x2bc]",
            "beq 0x802a028",
            "ldr r1, [0x0802a12c]",
            "ldr r0, [0x0802a134]",
            "bl printk",
            "b 0x802a028",
            "ldr r3, [r5]",
            "tst r3, 1",
            "beq 0x8029fec",
            "ldr r0, [0x0802a138]",
            "ldr r1, [0x0802a12c]",
            "bl printk",
            "ldr r3, [0x0802a124]",
            "ldr r3, [r3]",
            "b 0x8029fec",
            "ldr r1, [0x0802a12c]",
            "ldr r0, [0x0802a13c]",
            "bl printk",
            "b 0x8029ff4",
            "ldr r1, [0x0802a12c]",
            "ldr r0, [0x0802a140]",
            "bl printk",
            "b 0x8029f74",
            "ldr r0, [0x0802a144]",
            "ldr r1, [0x0802a12c]",
            "bl printk",
            "ldr r3, [0x0802a124]",
            "ldr r3, [r3]",
            "b 0x8029fec"
        ]
    },
    "sym.dhd_wet_recv_proc": {
        "function_address": "0x080380cc",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r4, r0",
            "ldr r3, [r0]",
            "sub sp, sp, 8",
            "mov r5, r1",
            "ldr r0, [r3]",
            "bl 0x80380e4",
            "ldr r3, [r4]",
            "mov r6, r0",
            "mov r1, r5",
            "ldr r0, [r3]",
            "bl 0x80380f8",
            "mov ip, 0",
            "mov r3, r0",
            "mov r1, r5",
            "mov r0, r4",
            "mov r2, r6",
            "str ip, [sp]",
            "bl fcn.08036d2c",
            "cmp r0, 0",
            "mvnlt r0, 0",
            "movge r0, 0",
            "add sp, sp, 8",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.08036d2c": {
        "function_address": "0x08036d2c",
        "instructions": [
            "cmp r3, 0xd",
            "push {r4, r5, r6, r7, r8, sl, lr}",
            "sub sp, sp, 0xc",
            "mov r6, r3",
            "mov r5, r2",
            "mov r7, r0",
            "mov r8, r1",
            "ldr sl, [sp, 0x28]",
            "add r3, r2, 0xc",
            "bgt 0x8036d70",
            "ldr r3, [0x08036ed4]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "mvneq r0, 0",
            "bne 0x8036eb4",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sl, pc}",
            "ldrb r2, [r2, 0xc]",
            "cmp r2, 5",
            "ldrbhi r2, [r5, 0xd]",
            "bls 0x8036e58",
            "ldr r1, [0x08036ed8]",
            "and r2, r2, 7",
            "add r2, r2, r2, lsl 1",
            "ldrh r4, [r3]",
            "adds r2, r1, r2, lsl 2",
            "beq 0x8036db0",
            "ldrh r1, [r2]",
            "cmp r1, r4",
            "beq 0x8036e24",
            "ldr r2, [r2, 8]",
            "cmp r2, 0",
            "bne 0x8036d98",
            "ldr r0, [r7]",
            "add r1, r5, 6",
            "mov r2, 6",
            "add r0, r0, 0x2c",
            "bl 0x8036dc0",
            "cmp r0, 0",
            "beq 0x8036d68",
            "ldr r3, [0x08036ed4]",
            "ldr r3, [r3]",
            "tst r3, 4",
            "mvneq r0, 0x16",
            "beq 0x8036d68",
            "ldr r1, [0x08036edc]",
            "cmp sl, 0",
            "ldr ip, [0x08036ee0]",
            "movw r5, 0xdd86",
            "ldr lr, [0x08036ee4]",
            "mov r3, r4",
            "ldr r2, [0x08036ee8]",
            "moveq r2, r1",
            "cmp r4, r5",
            "ldr r0, [0x08036eec]",
            "movne r4, lr",
            "moveq r4, ip",
            "ldr r1, [0x08036ef0]",
            "str r4, [sp]",
            "bl 0x8036e18",
            "mvn r0, 0x16",
            "b 0x8036d68",
            "ldr ip, [r2, 4]",
            "cmp ip, 0",
            "beq 0x8036da4",
            "add r3, r3, 2",
            "str sl, [sp, 4]",
            "rsb r2, r3, r5",
            "mov r0, r7",
            "add r6, r2, r6",
            "mov r1, r8",
            "str r6, [sp]",
            "mov r2, r5",
            "blx ip",
            "b 0x8036d68",
            "beq 0x8036ea4",
            "cmp r6, 0x15",
            "ble 0x8036d54",
            "ldr r0, [0x08036ef4]",
            "add r1, r5, 0xe",
            "mov r2, 6",
            "bl 0x8036e70",
            "cmp r0, 0",
            "movne r0, 0",
            "bne 0x8036d68",
            "ldrb r2, [r5, 0x15]",
            "add r3, r5, 0x14",
            "ldr r1, [0x08036ed8]",
            "ldrh r4, [r3]",
            "and r2, r2, 7",
            "add r2, r2, r2, lsl 1",
            "adds r2, r1, r2, lsl 2",
            "bne 0x8036d98",
            "b 0x8036db0",
            "ldrb r2, [r5, 0xd]",
            "cmp r2, 0xdc",
            "bhi 0x8036d80",
            "b 0x8036e5c",
            "ldr r3, [0x08036ee8]",
            "cmp sl, 0",
            "ldr r1, [0x08036edc]",
            "ldr r0, [0x08036ef8]",
            "movne r1, r3",
            "bl 0x8036ec8",
            "mvn r0, 0",
            "b 0x8036d68"
        ]
    },
    "sym.dhd_wet_send_proc": {
        "function_address": "0x08037f5c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sl, lr}",
            "mov r4, r0",
            "ldr r3, [r0]",
            "sub sp, sp, 0xc",
            "mov r5, r1",
            "mov sl, r2",
            "ldr r0, [r3]",
            "bl 0x8037f78",
            "ldr r3, [r4]",
            "mov r7, r0",
            "mov r1, r5",
            "ldr r0, [r3]",
            "bl 0x8037f8c",
            "cmp r0, 0xd",
            "mov r6, r0",
            "bgt 0x8037fb8",
            "ldr r3, [0x080380c0]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "bne 0x80380b0",
            "mvn r0, 0",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sl, pc}",
            "ldrb r3, [r7]",
            "tst r3, 1",
            "moveq r8, r5",
            "beq 0x8038060",
            "ldr r3, [r4]",
            "mov r1, r5",
            "ldr r0, [r3]",
            "bl 0x8037fd4",
            "ldr r3, [r4]",
            "mov r1, r0",
            "mov r6, r0",
            "ldr r0, [r3]",
            "bl 0x8037fe8",
            "subs r8, r0, 0",
            "beq 0x8038090",
            "ldr r3, [r4]",
            "mov r1, r8",
            "ldr r0, [r3]",
            "bl 0x8038000",
            "mov r7, r0",
            "ldr r0, [r4]",
            "mov r3, r6",
            "mov r2, 0",
            "mov r1, r5",
            "ldr r0, [r0]",
            "str r7, [sp]",
            "bl 0x8038020",
            "mov r0, r5",
            "bl 0x8038028",
            "mov r1, r0",
            "mov r0, r8",
            "bl 0x8038034",
            "ldr r3, [r4]",
            "mov r1, r5",
            "mov r2, 1",
            "ldr r0, [r3]",
            "bl 0x8038048",
            "ldr r3, [r4]",
            "mov r1, r8",
            "mov r2, r6",
            "ldr r0, [r3]",
            "bl 0x803805c",
            "str r8, [sl]",
            "mov ip, 1",
            "mov r0, r4",
            "mov r1, r5",
            "mov r2, r7",
            "mov r3, r6",
            "str ip, [sp]",
            "bl fcn.08036d2c",
            "cmp r0, 0",
            "movge r0, 0",
            "mvnlt r0, 0",
            "b 0x8037fb0",
            "ldr r3, [0x080380c0]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "beq 0x8037fac",
            "ldr r0, [0x080380c4]",
            "bl 0x80380a4",
            "mvn r0, 0",
            "b 0x8037fb0",
            "ldr r0, [0x080380c8]",
            "bl 0x80380b4",
            "mvn r0, 0",
            "b 0x8037fb0"
        ]
    },
    "sym.dhd_prot_schedule_runner": {
        "function_address": "0x08026870",
        "instructions": [
            "push {r4, r5, lr}",
            "movw r5, 0x1970",
            "ldr r3, [r0, r5]",
            "sub sp, sp, 0xc",
            "mov r4, r0",
            "tst r3, 2",
            "bne 0x80268d4",
            "tst r3, 4",
            "bne 0x802689c",
            "add sp, sp, 0xc",
            "pop {r4, r5, pc}",
            "ldr r1, [r4, 8]",
            "mov r0, r4",
            "add r2, sp, 4",
            "add r1, r1, 0x158",
            "bl sym.dhd_prot_get_read_addr",
            "cmp r0, 0",
            "beq 0x8026894",
            "mov r2, 0",
            "movw r3, 0x196c",
            "ldr r0, [r4, r3]",
            "mov r1, 4",
            "mov r3, r2",
            "bl dhd_runner_notify",
            "b 0x8026894",
            "ldr r1, [r0, 8]",
            "add r2, sp, 4",
            "add r1, r1, 0x108",
            "bl sym.dhd_prot_get_read_addr",
            "cmp r0, 0",
            "beq 0x8026904",
            "movw r3, 0x196c",
            "mov r2, 0",
            "ldr r0, [r4, r3]",
            "mov r1, 5",
            "mov r3, r2",
            "bl dhd_runner_notify",
            "ldr r3, [r4, r5]",
            "b 0x802688c"
        ]
    },
    "sym.si_getdevpathvar": {
        "function_address": "0x08013430",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r5, r1",
            "sub sp, sp, 0x30",
            "mov r2, r5",
            "mov r1, sp",
            "mov r6, r0",
            "bl fcn.0801317c",
            "mov r0, 0",
            "mov r1, sp",
            "bl getvar",
            "subs r4, r0, 0",
            "beq 0x801346c",
            "mov r0, r4",
            "add sp, sp, 0x30",
            "pop {r4, r5, r6, pc}",
            "ldr r3, [r6, 4]",
            "cmp r3, 1",
            "beq 0x80134a8",
            "mov r0, r6",
            "mov r1, sp",
            "mov r2, 0x30",
            "mov r3, r5",
            "bl si_coded_devpathvar",
            "cmp r0, 0",
            "beq 0x8013460",
            "mov r0, 0",
            "mov r1, sp",
            "bl getvar",
            "mov r4, r0",
            "b 0x8013460",
            "mov r2, r5",
            "mov r1, sp",
            "mov r0, r6",
            "bl fcn.0801324c",
            "mov r0, r4",
            "mov r1, sp",
            "bl getvar",
            "cmp r0, 0",
            "movne r4, r0",
            "bne 0x8013460",
            "b 0x8013478"
        ]
    },
    "fcn.0801317c": {
        "function_address": "0x0801317c",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "subs r4, r1, 0",
            "mov r5, r2",
            "bne 0x8013194",
            "mov r0, r4",
            "pop {r3, r4, r5, r6, r7, pc}",
            "mov r2, 0x30",
            "bl si_devpath",
            "subs r7, r0, 0",
            "bne 0x801318c",
            "mov r0, r4",
            "bl strlen",
            "mov r6, r0",
            "mov r0, r5",
            "bl strlen",
            "rsb r3, r6, 0x30",
            "add r0, r0, 1",
            "cmp r0, r3",
            "strbhi r7, [r4]",
            "bhi 0x801318c",
            "add r0, r4, r6",
            "mov r1, r5",
            "rsb r2, r6, 0x2f",
            "bl strncpy",
            "b 0x801318c"
        ]
    },
    "fcn.0801324c": {
        "function_address": "0x0801324c",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "subs r4, r1, 0",
            "mov r5, r2",
            "bne 0x8013264",
            "mov r0, r4",
            "pop {r3, r4, r5, r6, r7, pc}",
            "mov r2, 0x30",
            "bl si_devpath_pcie",
            "subs r7, r0, 0",
            "bne 0x801325c",
            "mov r0, r4",
            "bl strlen",
            "mov r6, r0",
            "mov r0, r5",
            "bl strlen",
            "rsb r3, r6, 0x30",
            "add r0, r0, 1",
            "cmp r0, r3",
            "strbhi r7, [r4]",
            "bhi 0x801325c",
            "add r0, r4, r6",
            "mov r1, r5",
            "rsb r2, r6, 0x2f",
            "bl strncpy",
            "b 0x801325c"
        ]
    },
    "sym.dhd_prot_process_msgbuf_rxcpl": {
        "function_address": "0x08034f80",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r0",
            "ldr r8, [r0, 8]",
            "sub sp, sp, 0x14",
            "mov sb, r1",
            "mov r6, 0",
            "ldr sl, [0x0803505c]",
            "add r5, r8, 0x158",
            "add fp, r5, 0x36",
            "b 0x8035008",
            "bl 0x8034fa8",
            "subs r7, r0, 0",
            "beq 0x803502c",
            "bl 0x8034fb4",
            "mov r0, r4",
            "mov r1, r5",
            "mov r2, r7",
            "ldr r3, [sp, 0xc]",
            "bl fcn.080342f8",
            "cmp r0, 0",
            "beq 0x8034fe0",
            "ldr r3, [sl]",
            "tst r3, 1",
            "bne 0x803503c",
            "mov r0, r4",
            "mov r1, r5",
            "bl 0x8034fe8",
            "movw r3, 0x162",
            "ldr r0, [sp, 0xc]",
            "ldrh r1, [r8, r3]",
            "bl 0x8034ff8",
            "add r6, r6, r0",
            "cmp r6, sb",
            "bhs 0x8035034",
            "ldr r3, [r4, 0x2ac]",
            "mov r1, r5",
            "add r2, sp, 0xc",
            "mov r0, r4",
            "cmp r3, 0",
            "beq 0x8034fa8",
            "mov r0, 0",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "mov r0, r7",
            "b 0x8035024",
            "mov r0, 1",
            "b 0x8035024",
            "ldr ip, [sp, 0xc]",
            "mov r2, fp",
            "mov r3, r7",
            "ldr r1, [0x08035060]",
            "ldr r0, [0x08035064]",
            "str ip, [sp]",
            "bl 0x8035054",
            "b 0x8034fe0"
        ]
    },
    "sym.sb_core_cflags": {
        "function_address": "0x08010108",
        "instructions": [
            "orrs r3, r2, r1",
            "movw r3, 0x4884",
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r5, r1",
            "ldr r6, [r0, r3]",
            "mov r7, r2",
            "mov r4, r0",
            "add r6, r6, 0xf00",
            "beq 0x801014c",
            "add r8, r6, 0x98",
            "mov r1, r8",
            "bl fcn.0800f9b4",
            "bic r2, r0, r5, lsl 16",
            "mov r1, r8",
            "mov r0, r4",
            "orr r2, r2, r7, lsl 16",
            "bl fcn.0800fafc",
            "mov r0, r4",
            "add r1, r6, 0x98",
            "bl fcn.0800f9b4",
            "lsr r0, r0, 0x10",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "sym.dhd_prot_txqueue_flush": {
        "function_address": "0x08035214",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x44",
            "ldr r3, [r0, 0x14]",
            "mov r2, 0",
            "mov r5, r0",
            "str r1, [sp, 0x14]",
            "ldr r1, [r0, 8]",
            "cmp r3, r2",
            "strh r2, [sp, 0x3e]",
            "str r1, [sp, 0x2c]",
            "beq 0x803524c",
            "ldr r2, [r0, 0x2ac]",
            "cmp r2, 0",
            "beq 0x8035268",
            "ldr r3, [0x080357a4]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "mvneq r0, 0x15",
            "bne 0x8035754",
            "add sp, sp, 0x44",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r3, [sp, 0x14]",
            "ldr r1, [sp, 0x14]",
            "ldrh r3, [r3, 0x18]",
            "add r1, r1, 8",
            "str r1, [sp, 0x1c]",
            "str r3, [sp, 0x34]",
            "ldr r3, [sp, 0x14]",
            "ldr r1, [sp, 0x34]",
            "ldr r3, [r3, 0x4c]",
            "cmp r1, 0",
            "ldreq r0, [sp, 0x34]",
            "str r3, [sp, 0x18]",
            "beq 0x8035260",
            "ldr r4, [0x080357a8]",
            "cmp r1, 0xa00",
            "movhs r1, 0xa00",
            "str r2, [sp, 0x30]",
            "str r1, [sp, 0x20]",
            "str r2, [sp, 0x24]",
            "mov r6, 0",
            "mov r0, r5",
            "ldr r1, [sp, 0x18]",
            "add r3, sp, 0x3e",
            "ldr r2, [sp, 0x20]",
            "str r6, [sp]",
            "bl sym.dhd_prot_alloc_ring_space",
            "cmp r0, 0",
            "str r0, [sp, 0x28]",
            "beq 0x8035718",
            "ldrh r3, [sp, 0x3e]",
            "ldr r1, [sp, 0x20]",
            "cmp r3, 0",
            "rsb r3, r3, r1",
            "uxth r3, r3",
            "str r3, [sp, 0x20]",
            "beq 0x8035534",
            "ldr r8, [sp, 0x28]",
            "mov r0, r5",
            "ldr r1, [sp, 0x1c]",
            "bl 0x8035304",
            "subs r7, r0, 0",
            "beq 0x80356a8",
            "mov r1, r7",
            "ldr r0, [r5]",
            "bl 0x8035318",
            "mov r1, r7",
            "mov sl, r0",
            "ldr r0, [r5]",
            "bl 0x8035328",
            "uxth sb, r0",
            "mov r0, r7",
            "bl 0x8035334",
            "ldrh r3, [r0, 0x12]",
            "tst r3, 4",
            "beq 0x8035614",
            "mov r0, r7",
            "bl 0x8035348",
            "mov r2, 6",
            "add r1, r0, 0x20",
            "add r0, r8, 8",
            "bl 0x8035358",
            "add r0, r8, 0xe",
            "add r1, sl, 6",
            "mov r2, 8",
            "bl 0x8035368",
            "add r1, sl, 0xe",
            "mov r0, r7",
            "str r1, [sp, 0x10]",
            "sub sb, sb, 0xe",
            "bl 0x803537c",
            "ldrh r3, [r0, 0x12]",
            "uxth sb, sb",
            "tst r3, 2",
            "beq 0x8035558",
            "tst r7, 3",
            "beq 0x8035668",
            "bic r3, r7, 3",
            "ldr r2, [r3]",
            "cmn r2, 0xf0000001",
            "bls 0x80353b4",
            "ldr r1, [r3, 0x18]",
            "cmp r1, 0",
            "beq 0x8035550",
            "add fp, r3, 0x100",
            "ldr sl, [r3, 4]",
            "ldr r3, [sp, 0x10]",
            "bic sl, sl, 1",
            "cmp fp, r3",
            "movhs fp, r3",
            "ldr r3, [r4, 0x24]",
            "bic fp, fp, 0x1f",
            "blx r3",
            "cmp sl, fp",
            "bls 0x8035400",
            "add r0, fp, 0x40000000",
            "mcr p15, 0, fp, c7, c14, 1",
            "add fp, fp, 0x20",
            "dsb sy",
            "ldr r3, [r4, 0x30]",
            "blx r3",
            "cmp sl, fp",
            "bhi 0x80353e0",
            "ldr r3, [r4, 0x2c]",
            "blx r3",
            "ldr r3, [r4, 0x28]",
            "blx r3",
            "ldr r3, [sp, 0x10]",
            "adds sl, r3, 0x40000000",
            "beq 0x80355e4",
            "ldr r1, [sp, 0x18]",
            "mov r0, r7",
            "ldr r2, [r5, 8]",
            "ldr r3, [r1, 0x24]",
            "ldr fp, [r2, 0x300]",
            "str r3, [sp, 0xc]",
            "bl 0x8035434",
            "strh sb, [r0, 0x10]",
            "mov r0, r7",
            "bl 0x8035440",
            "mov r1, 0",
            "mov r2, r0",
            "str r1, [r2, 0x18]",
            "mov r0, r7",
            "bl 0x8035454",
            "str sl, [r0, 0x14]",
            "mov r0, r7",
            "bl 0x8035460",
            "ldr r3, [sp, 0xc]",
            "mov r1, r7",
            "str r3, [r0, 0x1c]",
            "ldr r0, [fp]",
            "bl 0x8035474",
            "ldr r1, [sp, 0x14]",
            "mov r2, 0xf",
            "strb r2, [r8]",
            "mov r0, r7",
            "str r7, [r8, 4]",
            "ldrb r3, [r1, 0x3f]",
            "strb r3, [r8, 1]",
            "bl 0x8035494",
            "uxtb r0, r0",
            "mov r3, 1",
            "movw r1, 0",
            "strb r3, [r8, 0x17]",
            "lsl r0, r0, 5",
            "mov r2, 0",
            "movt r1, 0",
            "strh sb, [r8, 0x2a]",
            "orr r0, r0, r3",
            "str r2, [r8, 0x24]",
            "str sl, [r8, 0x20]",
            "strb r0, [r8, 0x16]",
            "ldr r3, [r1]",
            "tst r3, 2",
            "bne 0x8035740",
            "ldrh r3, [sp, 0x3e]",
            "add r6, r6, 1",
            "add r8, r8, 0x30",
            "cmp r3, r6",
            "bgt 0x80352fc",
            "uxth r7, r6",
            "ldr r1, [sp, 0x18]",
            "ldr r2, [sp, 0x28]",
            "mov r0, r5",
            "mov r3, r7",
            "bl sym.dhd_prot_ring_write_complete",
            "ldr r1, [sp, 0x2c]",
            "ldrh r3, [r1, 0x10]",
            "ldr r1, [sp, 0x30]",
            "add r3, r7, r3",
            "add r2, r7, r1",
            "ldr r1, [sp, 0x14]",
            "uxth r2, r2",
            "str r2, [sp, 0x30]",
            "ldr r2, [sp, 0x2c]",
            "strh r3, [r2, 0x10]",
            "ldr r3, [r1, 0x34]",
            "add r6, r3, r6",
            "str r6, [r1, 0x34]",
            "ldr r2, [sp, 0x20]",
            "ldr r3, [sp, 0x24]",
            "cmp r2, r3",
            "bls 0x80356dc",
            "movw r2, 0xffff",
            "str r2, [sp, 0x24]",
            "b 0x80352b4",
            "add fp, r2, 0x100",
            "b 0x80353b8",
            "tst r7, 3",
            "beq 0x8035628",
            "bic r3, r7, 3",
            "ldr r2, [r3]",
            "cmn r2, 0xf0000001",
            "bls 0x803557c",
            "ldr r1, [r3, 0x18]",
            "cmp r1, 0",
            "beq 0x803560c",
            "add fp, r3, 0x100",
            "ldr r2, [sp, 0x10]",
            "ldr sl, [r3, 4]",
            "ldr r3, [r4, 0x24]",
            "cmp fp, r2",
            "movhs fp, r2",
            "bic fp, fp, 0x1f",
            "bic sl, sl, 1",
            "blx r3",
            "cmp sl, fp",
            "bls 0x8035400",
            "add r0, fp, 0x40000000",
            "mcr p15, 0, fp, c7, c14, 1",
            "add fp, fp, 0x20",
            "dsb sy",
            "ldr r3, [r4, 0x30]",
            "blx r3",
            "cmp sl, fp",
            "bhi 0x80355a8",
            "ldr r3, [r4, 0x2c]",
            "blx r3",
            "ldr r3, [r4, 0x28]",
            "blx r3",
            "ldr r3, [sp, 0x10]",
            "adds sl, r3, 0x40000000",
            "bne 0x803541c",
            "movw r1, 0",
            "movt r1, 0",
            "ldr r3, [r1]",
            "tst r3, 1",
            "bne 0x8035798",
            "mov r0, r5",
            "ldr r1, [sp, 0x1c]",
            "mov r2, r7",
            "bl 0x8035604",
            "b 0x80356c4",
            "add fp, r2, 0x100",
            "b 0x8035580",
            "add r0, r8, 8",
            "mov r1, sl",
            "mov r2, 0xe",
            "bl 0x8035620",
            "b 0x803536c",
            "ldr r1, [sp, 0x10]",
            "ldr r3, [r4, 0x24]",
            "bic sl, r1, 0x1f",
            "add fp, r1, sb",
            "blx r3",
            "cmp sl, fp",
            "bhs 0x8035400",
            "add r0, sl, 0x40000000",
            "mcr p15, 0, sl, c7, c14, 1",
            "add sl, sl, 0x20",
            "dsb sy",
            "ldr r3, [r4, 0x30]",
            "blx r3",
            "cmp fp, sl",
            "bhi 0x8035644",
            "b 0x8035400",
            "ldr r2, [sp, 0x10]",
            "add sl, sl, 0x1e",
            "ldr r3, [r4, 0x24]",
            "bic fp, r2, 0x1f",
            "blx r3",
            "cmp fp, sl",
            "bhs 0x8035400",
            "add r0, fp, 0x40000000",
            "mcr p15, 0, fp, c7, c14, 1",
            "add fp, fp, 0x20",
            "dsb sy",
            "ldr r3, [r4, 0x30]",
            "blx r3",
            "cmp sl, fp",
            "bhi 0x8035684",
            "b 0x8035400",
            "movw r2, 0",
            "movt r2, 0",
            "ldr r3, [r2]",
            "tst r3, 1",
            "movweq r2, 0xffff",
            "streq r2, [sp, 0x24]",
            "bne 0x8035768",
            "cmp r6, 0",
            "bne 0x80354e8",
            "ldr r2, [sp, 0x20]",
            "ldr r3, [sp, 0x24]",
            "cmp r2, r3",
            "bhi 0x8035544",
            "ldr r1, [sp, 0x2c]",
            "ldrh r2, [r1, 4]",
            "cmp r2, 0x1f",
            "bhi 0x8035704",
            "ldr r3, [0x080357a4]",
            "ldr r3, [r3]",
            "tst r3, 4",
            "bne 0x8035788",
            "mov r0, r5",
            "bl sym.dhd_msgbuf_rxbuf_post.isra.11",
            "ldr r2, [sp, 0x30]",
            "cmp r2, 0",
            "mvneq r0, 0x15",
            "movne r0, 0",
            "b 0x8035260",
            "ldr r3, [0x080357a4]",
            "ldr r3, [r3]",
            "tst r3, 4",
            "beq 0x8035704",
            "ldr r3, [sp, 0x2c]",
            "ldr r1, [0x080357ac]",
            "ldr r0, [0x080357b0]",
            "ldrh r2, [r3, 0x10]",
            "bl 0x8035738",
            "b 0x8035704",
            "mov r1, sb",
            "mov r2, r7",
            "ldr r0, [0x080357b4]",
            "bl 0x803574c",
            "b 0x80354d4",
            "ldr r0, [0x080357b8]",
            "ldr r1, [0x080357ac]",
            "bl 0x803575c",
            "mvn r0, 0x15",
            "b 0x8035260",
            "movw r3, 0xffff",
            "ldr r2, [sp, 0x34]",
            "str r3, [sp, 0x24]",
            "ldr r1, [0x080357ac]",
            "ldrh r3, [sp, 0x3e]",
            "ldr r0, [0x080357bc]",
            "bl 0x8035780",
            "b 0x80356c4",
            "ldr r1, [0x080357ac]",
            "ldr r0, [0x080357c0]",
            "bl 0x8035790",
            "b 0x80356fc",
            "ldr r0, [0x080357c4]",
            "bl 0x803579c",
            "b 0x80355f8"
        ]
    },
    "sym.si_socram_size": {
        "function_address": "0x08014628",
        "instructions": [
            "movw r3, 0x4868",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "ldr fp, [r0, r3]",
            "add r3, r3, 0x30",
            "sub sp, sp, 0x14",
            "mov r4, r0",
            "ldr r8, [r0, r3]",
            "cmp fp, 0",
            "beq 0x80147d0",
            "movw r5, 0x4888",
            "movw r3, 0x4860",
            "ldr sl, [r0, r5]",
            "ldr r3, [r0, r3]",
            "add r2, sl, 0x20",
            "ldr r2, [r8, r2, lsl 2]",
            "cmp r2, r3",
            "movne fp, 0",
            "beq 0x80147dc",
            "mov r0, r4",
            "movw r1, 0x80e",
            "mov r2, 0",
            "bl si_setcore",
            "subs r7, r0, 0",
            "moveq r5, r7",
            "beq 0x80146f0",
            "mov r0, r4",
            "bl si_iscoreup",
            "subs sb, r0, 0",
            "beq 0x801477c",
            "mov r0, r4",
            "bl si_corerev",
            "movw r3, 0x4858",
            "mov r6, r0",
            "mov r1, r7",
            "ldr r0, [r4, r3]",
            "add r2, sp, 0xc",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "cmp r6, 0",
            "ldr r3, [sp, 0xc]",
            "bne 0x801472c",
            "and r3, r3, 0xf",
            "mov r5, 1",
            "add r3, r3, 0x10",
            "lsl r5, r5, r3",
            "cmp sb, 0",
            "beq 0x8014790",
            "mov r0, r4",
            "mov r1, sl",
            "bl si_setcoreidx",
            "movw r3, 0x486c",
            "ldr r3, [r4, r3]",
            "cmp r3, 0",
            "beq 0x8014720",
            "movw r2, 0x4888",
            "ldr r1, [r4, r2]",
            "movw r2, 0x4860",
            "ldr r2, [r4, r2]",
            "add r1, r1, 0x20",
            "ldr r1, [r8, r1, lsl 2]",
            "cmp r1, r2",
            "beq 0x80147bc",
            "mov r0, r5",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "cmp r6, 2",
            "bls 0x80147a0",
            "cmp r6, 0xc",
            "cmpne r6, 7",
            "movhi r6, 0",
            "movls r6, 1",
            "bhi 0x80147f4",
            "ubfx r2, r3, 0x14, 4",
            "ubfx r1, r3, 4, 4",
            "cmp r2, 0",
            "and r3, r3, 0xf",
            "movne r5, 1",
            "addne r2, r2, 0xd",
            "lslne r2, r5, r2",
            "addne r3, r3, 0xe",
            "subne r5, r1, 1",
            "addeq r3, r3, 0xe",
            "addne r5, r2, r5, lsl r3",
            "lsleq r5, r1, r3",
            "b 0x80146dc",
            "mov r0, r4",
            "mov r1, sb",
            "mov r2, sb",
            "bl si_core_reset",
            "b 0x801469c",
            "mov r0, r4",
            "mov r1, sb",
            "bl si_core_disable",
            "b 0x80146e4",
            "and r5, r3, 0xf",
            "mov r2, 1",
            "add r5, r5, 0xe",
            "ubfx r3, r3, 4, 4",
            "lsl r5, r2, r5",
            "mul r5, r3, r5",
            "b 0x80146dc",
            "movw r2, 0x4864",
            "mov r1, fp",
            "ldr r0, [r4, r2]",
            "blx r3",
            "b 0x8014720",
            "movw r3, 0x4888",
            "ldr sl, [r0, r3]",
            "b 0x8014670",
            "movw r3, 0x4864",
            "ldr r0, [r0, r3]",
            "blx fp",
            "ldr sl, [r4, r5]",
            "mov fp, r0",
            "b 0x8014670",
            "ubfx r3, r3, 4, 4",
            "cmp r3, 0",
            "str r3, [sp, 4]",
            "ldreq r5, [sp, 4]",
            "beq 0x80146dc",
            "mov r5, r6",
            "mov r2, r6",
            "mov r3, 0",
            "mov r0, r4",
            "mov r1, r7",
            "bl fcn.08010fcc",
            "add r6, r6, 1",
            "ldr r3, [sp, 4]",
            "uxtb r6, r6",
            "add r5, r5, r0",
            "cmp r3, r6",
            "bhi 0x801480c",
            "b 0x80146dc"
        ]
    },
    "sym.dhd_l2_filter_pkt_handle": {
        "function_address": "0x080302e0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r7, r2",
            "sub sp, sp, 0x6c",
            "mov r2, 0",
            "mov r4, r0",
            "mov r5, r1",
            "ldr r0, [r0]",
            "mov r1, r7",
            "mov r8, r3",
            "str r2, [sp, 0x5c]",
            "strb r2, [sp, 0x67]",
            "bl osl_pktdata",
            "mov r1, r7",
            "mov r6, r0",
            "ldr r0, [r4]",
            "bl osl_pktlen",
            "cmp r6, 0",
            "cmpne r0, 0",
            "mov r7, r0",
            "bgt 0x803033c",
            "ldrb r3, [r6, 0xc]",
            "add r0, sp, 0x38",
            "ldrb sl, [r6, 0xd]",
            "mov r1, 0x18",
            "orr sl, r3, sl, lsl 8",
            "lsr r3, sl, 8",
            "orr sl, r3, sl, lsl 8",
            "uxth sl, sl",
            "bl __memzero",
            "cmp sl, 0x600",
            "str r6, [sp, 0x38]",
            "strh r7, [sp, 0x3e]",
            "blo 0x80304c4",
            "cmp sl, 0x8100",
            "beq 0x80307c4",
            "sub r7, r7, 0xe",
            "mov r3, 3",
            "cmp r7, 0",
            "strb r3, [sp, 0x3c]",
            "ble 0x8030330",
            "add r6, r6, 0xe",
            "movw r3, 0x806",
            "str r6, [sp, 0x40]",
            "cmp sl, r3",
            "strh r7, [sp, 0x46]",
            "beq 0x80307f0",
            "bhi 0x8030528",
            "cmp sl, 0x800",
            "bne 0x8030330",
            "ldrb r3, [r6]",
            "and r0, r3, 0xf",
            "lsl r0, r0, 2",
            "rsb r7, r0, r7",
            "cmp r7, 0",
            "ble 0x8030330",
            "lsr r3, r3, 4",
            "cmp r0, 0x13",
            "movls r2, 0",
            "movhi r2, 1",
            "cmp r3, 4",
            "movne r2, 0",
            "cmp r2, 0",
            "beq 0x8030330",
            "mov r3, 4",
            "add r0, r6, r0",
            "strb r3, [sp, 0x44]",
            "ldrb r3, [r6, 9]",
            "cmp r3, 6",
            "str r0, [sp, 0x48]",
            "strh r7, [sp, 0x4e]",
            "beq 0x80309cc",
            "bhi 0x803099c",
            "cmp r3, 1",
            "beq 0x80309bc",
            "cmp r3, 2",
            "beq 0x80309ac",
            "ldrb r3, [sp, 0x44]",
            "cmp r3, 7",
            "bne 0x8030560",
            "ldr r6, [sp, 0x40]",
            "ldrb r3, [r6, 8]",
            "ldrb r7, [r6, 9]",
            "ldrb ip, [r6, 0xa]",
            "ldrb r0, [r6, 0xb]",
            "ldrb r1, [r6, 0xc]",
            "orr sb, r7, r3",
            "ldrb r2, [r6, 0xd]",
            "orr sb, ip, sb",
            "ldrb fp, [r6, 6]",
            "orr sb, r0, sb",
            "ldrb sl, [r6, 7]",
            "orr sb, r1, sb",
            "orrs sb, r2, sb",
            "orr sl, fp, sl, lsl 8",
            "beq 0x8030330",
            "and r7, r7, r3",
            "and ip, ip, r7",
            "and r0, r0, ip",
            "and r1, r1, r0",
            "and r2, r2, r1",
            "cmp r2, 0xff",
            "beq 0x8030330",
            "tst r3, 1",
            "bne 0x8030330",
            "lsr r3, sl, 8",
            "orr sl, r3, sl, lsl 8",
            "uxth sl, sl",
            "cmp sl, 2",
            "bls 0x8030814",
            "ldr r3, [0x08030de4]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "beq 0x8030330",
            "mov r1, r5",
            "mov r2, sl",
            "ldr r0, [0x08030de8]",
            "bl printk",
            "b 0x8030330",
            "add r0, r6, 0xe",
            "ldr r1, [0x08030dec]",
            "mov r2, 6",
            "bl memcmp",
            "cmp r0, 0",
            "bne 0x8030330",
            "ldrb r2, [r6, 0x15]",
            "ldrb r3, [r6, 0x14]",
            "orr r3, r3, r2, lsl 8",
            "lsr r2, r3, 8",
            "orr r3, r2, r3, lsl 8",
            "sxth r3, r3",
            "cmn r3, 0x7f00",
            "beq 0x8030330",
            "sub r7, r7, 0x1a",
            "mov r3, 1",
            "cmp r7, 0",
            "strb r3, [sp, 0x3c]",
            "ldrh r3, [r6, 0x18]",
            "ble 0x8030330",
            "lsr sl, r3, 8",
            "add r6, r6, 0x1a",
            "orr r3, sl, r3, lsl 8",
            "uxth sl, r3",
            "b 0x8030390",
            "movw r3, 0x86dd",
            "cmp sl, r3",
            "beq 0x8030680",
            "movw r3, 0x888e",
            "cmp sl, r3",
            "bne 0x8030330",
            "sub r7, r7, 4",
            "cmp r7, 0",
            "ble 0x8030330",
            "ldrb r3, [r6, 1]",
            "cmp r3, 3",
            "moveq r3, 8",
            "strbeq r3, [sp, 0x44]",
            "bne 0x8030330",
            "ldrb r3, [sp, 0x4c]",
            "cmp r3, 0x3a",
            "beq 0x803075c",
            "cmp r3, 0x11",
            "bne 0x8030330",
            "mov r0, r4",
            "mov r1, r5",
            "bl dhd_get_ifp_arp_table_handle",
            "ldr r7, [sp, 0x48]",
            "mov r6, r0",
            "ldr sl, [r4, 0xdc]",
            "ldrb r3, [r7, 0xf4]",
            "cmp r3, 0x63",
            "bne 0x8030330",
            "ldrb r3, [r7, 0xf5]",
            "cmp r3, 0x82",
            "bne 0x8030330",
            "ldrb r3, [r7, 0xf6]",
            "cmp r3, 0x53",
            "bne 0x8030330",
            "ldrb r3, [r7, 0xf7]",
            "cmp r3, 0x63",
            "bne 0x8030330",
            "ldrh sb, [sp, 0x4e]",
            "add r1, sp, 0x50",
            "bl bcm_l2_filter_parp_get_smac",
            "mov r0, r6",
            "add r1, sp, 0x56",
            "sub sb, sb, 0xf8",
            "bl bcm_l2_filter_parp_get_cmac",
            "uxth sb, sb",
            "cmp r8, 0",
            "add r0, r7, 0xf8",
            "mov r1, sb",
            "mov r2, 0x35",
            "beq 0x8030b78",
            "bl bcm_parse_tlvs",
            "cmp r0, 0",
            "beq 0x8030330",
            "ldrb r3, [r0, 2]",
            "cmp r3, 5",
            "bne 0x8030330",
            "add r8, r7, 0x24",
            "add r0, sp, 0x56",
            "mov r1, r8",
            "mov r2, 6",
            "bl memcmp",
            "cmp r0, 0",
            "beq 0x8030ccc",
            "ldr r4, [0x08030de4]",
            "add r0, sp, 0x18",
            "add r1, sp, 0x56",
            "mov r2, 6",
            "bl memcpy",
            "ldr r3, [r4]",
            "tst r3, 4",
            "beq 0x8030330",
            "ldr r0, [0x08030df0]",
            "mov r1, r5",
            "add r2, sp, 0x18",
            "bl printk",
            "ldr r3, [r4]",
            "tst r3, 4",
            "beq 0x8030330",
            "add r1, sp, 0x18",
            "mov r0, r8",
            "bl bcm_ether_ntoa",
            "mov r1, r0",
            "ldr r0, [0x08030df4]",
            "bl printk",
            "mvn r0, 0",
            "b 0x8030334",
            "sub r7, r7, 0x28",
            "cmp r7, 0",
            "ble 0x8030330",
            "ldrb r3, [r6]",
            "lsr r3, r3, 4",
            "cmp r3, 6",
            "bne 0x8030330",
            "strb r3, [sp, 0x44]",
            "add r0, r6, 0x28",
            "ldrb r3, [r6, 6]",
            "cmp r3, 0",
            "cmpne r3, 0x2b",
            "movne r2, 0",
            "moveq r2, 1",
            "moveq r1, r0",
            "moveq r2, 0",
            "beq 0x8030734",
            "cmp r3, 0x2c",
            "cmpne r3, 0x33",
            "movne ip, 0",
            "moveq ip, 1",
            "moveq r1, r0",
            "beq 0x8030734",
            "cmp r3, 0x3b",
            "cmpne r3, 0x3c",
            "moveq r1, r0",
            "moveq r2, ip",
            "beq 0x8030734",
            "b 0x80303f8",
            "cmp r3, 0x2c",
            "beq 0x8030754",
            "cmp r3, 0x33",
            "beq 0x8030804",
            "cmp r3, 0x3b",
            "beq 0x8030330",
            "cmp r3, 0x3c",
            "bne 0x8030b64",
            "cmp r3, 0x33",
            "beq 0x8030804",
            "ldrb r3, [r1, 1]",
            "add r3, r3, 1",
            "lsl r3, r3, 3",
            "add r2, r3, r2",
            "uxth r2, r2",
            "add r1, r0, r2",
            "ldrb r3, [r1]",
            "cmp r3, 0",
            "cmpne r3, 0x2b",
            "bne 0x80306f4",
            "cmp r3, 0x3b",
            "beq 0x8030330",
            "cmp r3, 0x2c",
            "bne 0x8030714",
            "mov r3, 8",
            "b 0x8030728",
            "add ip, sp, 0x67",
            "mov r0, r4",
            "mov r1, r5",
            "add r2, sp, 0x38",
            "add r3, sp, 0x5c",
            "str ip, [sp]",
            "str r8, [sp, 4]",
            "bl fcn.0802fbbc",
            "cmp r0, 0",
            "beq 0x8030334",
            "cmp r0, 2",
            "bne 0x8030330",
            "sub r7, r7, 0x12",
            "mov r3, 4",
            "cmp r7, 0",
            "strb r3, [sp, 0x3c]",
            "ldrh r3, [r6, 0x10]",
            "ble 0x8030330",
            "lsr sl, r3, 8",
            "add r6, r6, 0x12",
            "orr r3, sl, r3, lsl 8",
            "uxth sl, r3",
            "b 0x8030390",
            "cmp r7, 0x1c",
            "movpl r3, 7",
            "strbpl r3, [sp, 0x44]",
            "bpl 0x803042c",
            "b 0x8030330",
            "ldrb r3, [r1, 1]",
            "add r3, r3, 2",
            "lsl r3, r3, 2",
            "b 0x8030728",
            "mov r1, r5",
            "mov r0, r4",
            "bl dhd_get_ifp_arp_table_handle",
            "ldrb r1, [r6, 0xe]",
            "movw r3, 0x851f",
            "ldrb ip, [r6, 0xf]",
            "movt r3, 0x51eb",
            "ldrb r2, [r6, 0x10]",
            "ldrb sb, [r6, 0x11]",
            "orr r7, ip, r1",
            "ldr fp, [r4, 0xdc]",
            "orr r7, r2, r7",
            "umull fp, r3, r3, fp",
            "orrs r7, sb, r7",
            "str r0, [sp, 0x14]",
            "lsr fp, r3, 5",
            "beq 0x8030924",
            "and r1, ip, r1",
            "and r2, r2, r1",
            "and sb, sb, r2",
            "cmp sb, 0xff",
            "beq 0x8030924",
            "add r7, r6, 0xe",
            "mov r2, 4",
            "mov r1, r7",
            "mov r3, 1",
            "str fp, [sp]",
            "bl bcm_l2_filter_parp_findentry",
            "cmp r0, 0",
            "beq 0x8030c78",
            "mov ip, 1",
            "ldr r0, [sp, 0x14]",
            "add r1, r6, 8",
            "mov r2, r7",
            "mov r3, 4",
            "str ip, [sp]",
            "str fp, [sp, 4]",
            "bl bcm_l2_filter_parp_modifyentry",
            "cmp sl, 2",
            "beq 0x80309dc",
            "cmp r8, 0",
            "beq 0x8030330",
            "add r8, r6, 0xe",
            "add r7, r6, 0x18",
            "mov r0, r8",
            "mov r1, r7",
            "mov r2, 4",
            "bl memcmp",
            "cmp r0, 0",
            "beq 0x8030334",
            "cmp sl, 1",
            "ldr r0, [sp, 0x14]",
            "beq 0x8030a34",
            "mov r1, r8",
            "mov r2, 4",
            "mov r3, 1",
            "str fp, [sp]",
            "bl bcm_l2_filter_parp_findentry",
            "subs r1, r0, 0",
            "beq 0x8030330",
            "add r0, r6, 8",
            "add r1, r1, 8",
            "mov r2, 6",
            "bl memcmp",
            "cmp r0, 0",
            "beq 0x8030330",
            "mov r0, 0",
            "b 0x8030334",
            "cmp r8, 0",
            "bne 0x80308ac",
            "cmp sl, 1",
            "bne 0x80308ac",
            "add r5, r6, 0x18",
            "ldr r0, [sp, 0x14]",
            "mov r1, r5",
            "mov r2, 4",
            "mov r3, sl",
            "str fp, [sp]",
            "bl bcm_l2_filter_parp_findentry",
            "cmp r0, 0",
            "bne 0x8030330",
            "ldr r0, [sp, 0x14]",
            "cmp r3, 0x11",
            "beq 0x80309ac",
            "cmp r3, 0x3a",
            "bne 0x803041c",
            "cmp r7, 8",
            "strb r3, [sp, 0x4c]",
            "bpl 0x803041c",
            "b 0x8030330",
            "cmp r7, 4",
            "strb r3, [sp, 0x4c]",
            "bpl 0x803041c",
            "b 0x8030330",
            "cmp r7, 0x14",
            "strb r3, [sp, 0x4c]",
            "bpl 0x803041c",
            "b 0x8030330",
            "add r7, r6, 0xe",
            "ldr r0, [sp, 0x14]",
            "mov r1, r7",
            "mov r2, 4",
            "mov r3, 0",
            "str fp, [sp]",
            "bl bcm_l2_filter_parp_findentry",
            "subs r1, r0, 0",
            "beq 0x80308b4",
            "add r1, r1, 8",
            "mov r2, 6",
            "add r0, sp, 0x50",
            "bl memcpy",
            "ldr r0, [r4]",
            "mov ip, 4",
            "mov lr, 0",
            "ldr r1, [sp, 0x14]",
            "add r2, sp, 0x50",
            "mov r3, r7",
            "stm sp, {ip, lr}",
            "bl bcm_l2_filter_parp_delentry",
            "b 0x80308b4",
            "mov r1, r7",
            "mov r2, 4",
            "mov r3, sl",
            "str fp, [sp]",
            "bl bcm_l2_filter_parp_findentry",
            "subs fp, r0, 0",
            "beq 0x8030ca0",
            "add sb, r6, 8",
            "add r7, fp, 8",
            "mov r0, sb",
            "mov r1, r7",
            "mov r2, 6",
            "bl memcmp",
            "cmp r0, 0",
            "beq 0x8030334",
            "mov r0, r4",
            "mov r1, r5",
            "mov r2, r7",
            "bl dhd_sta_associated",
            "cmp r0, 0",
            "rsb r7, r2, r7",
            "cmp r7, 0",
            "addgt r0, r0, r2",
            "bgt 0x80303f8",
            "b 0x8030330",
            "ldr r4, [sp, 0x38]",
            "bl bcm_parse_tlvs",
            "cmp r0, 0",
            "beq 0x8030330",
            "ldrb r3, [r0, 2]",
            "cmp r3, 3",
            "bne 0x8030330",
            "ldrb r3, [r7, 0x24]",
            "ldrb r8, [r7, 0x25]",
            "ldrb ip, [r7, 0x26]",
            "ldrb r0, [r7, 0x27]",
            "ldrb r1, [r7, 0x28]",
            "orr sl, r8, r3",
            "ldrb r2, [r7, 0x29]",
            "orr sl, ip, sl",
            "orr sl, r0, sl",
            "orr sl, r1, sl",
            "orrs sl, r2, sl",
            "beq 0x8030c3c",
            "and r8, r8, r3",
            "and ip, ip, r8",
            "and r0, r0, ip",
            "and r1, r1, r0",
            "and r2, r2, r1",
            "cmp r2, 0xff",
            "beq 0x8030c3c",
            "tst r3, 1",
            "bne 0x8030c3c",
            "ldrb r3, [r4, 6]",
            "ldrb r8, [r4, 7]",
            "ldrb ip, [r4, 8]",
            "ldrb r0, [r4, 9]",
            "ldrb r1, [r4, 0xa]",
            "orr sl, r8, r3",
            "ldrb r2, [r4, 0xb]",
            "orr sl, ip, sl",
            "orr sl, r0, sl",
            "orr sl, r1, sl",
            "orrs sl, r2, sl",
            "beq 0x8030c3c",
            "and r8, r8, r3",
            "and ip, ip, r8",
            "and r0, r0, ip",
            "and r1, r1, r0",
            "and r2, r2, r1",
            "cmp r2, 0xff",
            "beq 0x8030c3c",
            "tst r3, 1",
            "beq 0x8030d64",
            "ldr r6, [0x08030de4]",
            "ldr r3, [r6]",
            "tst r3, 1",
            "bne 0x8030da4",
            "ldr r3, [r6]",
            "tst r3, 4",
            "beq 0x8030330",
            "add r1, sp, 0x18",
            "add r0, r7, 0x24",
            "bl bcm_ether_ntoa",
            "mov r1, r0",
            "ldr r0, [0x08030df8]",
            "bl printk",
            "mvn r0, 0",
            "b 0x8030334",
            "ldr r0, [r4]",
            "mov ip, 4",
            "mov lr, 1",
            "ldr r1, [sp, 0x14]",
            "add r2, r6, 8",
            "mov r3, r7",
            "stm sp, {ip, lr}",
            "str fp, [sp, 8]",
            "bl bcm_l2_filter_parp_addentry",
            "b 0x80308ac",
            "ldr r3, [0x08030de4]",
            "ldr r3, [r3]",
            "tst r3, 4",
            "bne 0x8030dc4",
            "mov r0, r4",
            "mov r1, r5",
            "bl dhd_parp_discard_is_enabled",
            "cmp r0, 0",
            "beq 0x8030330",
            "mov r0, 0",
            "b 0x8030334",
            "ldrb r0, [r7, 0x19]",
            "ldrb r1, [r7, 0x18]",
            "ldrb r2, [r7, 0x1a]",
            "ldrb r3, [r7, 0x1b]",
            "orr r1, r0, r1",
            "orr r2, r1, r2",
            "orrs r3, r2, r3",
            "beq 0x8030330",
            "mov r0, r4",
            "mov r1, r5",
            "add r2, sp, 0x50",
            "bl dhd_sta_associated",
            "cmp r0, 0",
            "bne 0x8030330",
            "mov r1, 0x64",
            "mov r0, sl",
            "add r7, r7, 0x18",
            "bl __aeabi_uidiv",
            "mov r1, r7",
            "mov r5, r0",
            "mov r2, 4",
            "mov r0, r6",
            "mov r3, 1",
            "str r5, [sp]",
            "bl bcm_l2_filter_parp_findentry",
            "cmp r0, 0",
            "bne 0x8030330",
            "ldr r0, [r4]",
            "mov ip, 4",
            "mov lr, 1",
            "mov r1, r6",
            "add r2, sp, 0x50",
            "mov r3, r7",
            "stm sp, {ip, lr}",
            "str r5, [sp, 8]",
            "bl bcm_l2_filter_parp_addentry",
            "mvn r0, 0",
            "b 0x8030334",
            "add r1, r4, 6",
            "mov r0, r6",
            "bl bcm_l2_filter_parp_set_smac",
            "mov r0, r6",
            "add r1, r7, 0x24",
            "bl bcm_l2_filter_parp_set_cmac",
            "mvn r0, 0",
            "b 0x8030334",
            "add r1, sp, 0x18",
            "add r0, r4, 6",
            "bl bcm_ether_ntoa",
            "mov r1, r5",
            "mov r2, r0",
            "ldr r0, [0x08030e00]",
            "bl printk",
            "b 0x8030c4c",
            "ldrb ip, [r6, 0x1b]",
            "ldrb r1, [r6, 0x18]",
            "ldrb r2, [r6, 0x19]",
            "ldrb r3, [r6, 0x1a]",
            "ldr r0, [0x08030e04]",
            "str ip, [sp]",
            "bl printk",
            "b 0x8030cb0"
        ]
    },
    "fcn.0802fbbc": {
        "function_address": "0x0802fbbc",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r2",
            "sub sp, sp, 0xbc",
            "mov r6, r0",
            "mov fp, r1",
            "str r3, [sp, 0x20]",
            "ldrb sb, [sp, 0xe4]",
            "ldr r7, [r2]",
            "ldr r5, [r2, 8]",
            "bl dhd_get_ifp_arp_table_handle",
            "ldrh r1, [r4, 0xe]",
            "mov r8, r0",
            "ldr sl, [r6, 0xdc]",
            "cmp r1, 0x3f",
            "ble 0x802fc04",
            "ldrb r3, [r5, 6]",
            "cmp r3, 0x3a",
            "beq 0x802fc10",
            "mov r0, 1",
            "add sp, sp, 0xbc",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldrb r3, [r5, 0x28]",
            "cmp r3, 0x87",
            "beq 0x802fee8",
            "cmp r3, 0x88",
            "bne 0x802fc04",
            "add ip, r5, 0x30",
            "mov r2, 2",
            "str ip, [sp, 0x2c]",
            "mov ip, 0",
            "str ip, [sp, 0x30]",
            "cmp r1, 0x40",
            "bne 0x802ffe0",
            "add ip, r7, 6",
            "str ip, [sp, 0x34]",
            "ldrb r1, [r7, 7]",
            "ldrb r2, [r7, 0xa]",
            "ldrb r3, [r7, 6]",
            "str r1, [sp, 0x14]",
            "str r2, [sp, 0x24]",
            "orr r2, r1, r3",
            "ldrb r1, [r7, 0xb]",
            "ldrb r0, [r7, 8]",
            "ldrb ip, [r7, 9]",
            "str r1, [sp, 0x28]",
            "ldr r1, [sp, 0x24]",
            "orr r2, r0, r2",
            "orr r2, ip, r2",
            "orr r2, r1, r2",
            "ldr r1, [sp, 0x28]",
            "str r2, [sp, 0x18]",
            "orrs r1, r1, r2",
            "beq 0x802ffac",
            "ldr r1, [sp, 0x14]",
            "and r2, r1, r3",
            "ldr r1, [sp, 0x28]",
            "and r2, r0, r2",
            "and r2, ip, r2",
            "ldr ip, [sp, 0x24]",
            "and r2, ip, r2",
            "and r2, r1, r2",
            "cmp r2, 0xff",
            "beq 0x802ffac",
            "tst r3, 1",
            "bne 0x802ffac",
            "ldrb r3, [r5, 0x28]",
            "movw r2, 0x851f",
            "movt r2, 0x51eb",
            "umull ip, r2, r2, sl",
            "lsr sl, r2, 5",
            "cmp r3, 0x88",
            "beq 0x803001c",
            "cmp r3, 0x87",
            "beq 0x8030010",
            "cmp sb, 0",
            "beq 0x8030084",
            "cmp r3, 0x87",
            "bne 0x802fc04",
            "add ip, sp, 0xae",
            "ldr r1, [0x080302c4]",
            "mov r0, ip",
            "mov r2, 6",
            "str ip, [sp, 0x24]",
            "add sb, r5, 0x30",
            "bl memcpy",
            "ldr r1, [0x080302c8]",
            "mov r2, 0x10",
            "add r0, sp, 0x9e",
            "bl memcpy",
            "mov r0, r8",
            "mov r1, sb",
            "mov r2, 6",
            "mov r3, 1",
            "str sl, [sp]",
            "bl bcm_l2_filter_parp_findentry",
            "cmp r0, 0",
            "beq 0x80301a0",
            "add r8, r0, 8",
            "mov r2, 6",
            "ldr r0, [sp, 0x34]",
            "mov r1, r8",
            "bl memcmp",
            "cmp r0, 0",
            "beq 0x802fc08",
            "mov r0, r6",
            "mov r1, fp",
            "mov r2, r8",
            "bl dhd_sta_associated",
            "cmp r0, 0",
            "beq 0x802fc08",
            "add r7, r7, 6",
            "mov r0, r6",
            "mov r2, r7",
            "mov r1, fp",
            "bl dhd_sta_associated",
            "cmp r0, 0",
            "ldr ip, [sp, 0x30]",
            "ldrne r3, [sp, 0xe0]",
            "movne r2, 1",
            "strbne r2, [r3]",
            "ldrb r3, [r4, 4]",
            "sub r3, r3, 1",
            "uxtb r3, r3",
            "cmp r3, 2",
            "movhs sl, 0",
            "movlo sl, 1",
            "movlo r4, 0x5e",
            "movhs r4, 0x56",
            "cmp ip, 0",
            "bne 0x80301fc",
            "movw ip, 0x86dd",
            "ldr r0, [r6]",
            "mov r1, r4",
            "str ip, [sp]",
            "mov r2, r8",
            "add ip, sp, 0xb4",
            "ldr r3, [sp, 0x34]",
            "str ip, [sp, 8]",
            "str sl, [sp, 4]",
            "bl bcm_l2_filter_proxyarp_alloc_reply",
            "ldr ip, [sp, 0x20]",
            "cmp r0, 0",
            "str r0, [ip]",
            "beq 0x802fc04",
            "mov r1, r5",
            "mov r2, 0x28",
            "ldr r0, [sp, 0xb4]",
            "mov r5, 0",
            "bl memcpy",
            "ldr r3, [sp, 0xb4]",
            "mvn ip, 0",
            "mov r6, 0x20",
            "mov r1, sb",
            "mov r2, 0x10",
            "strb ip, [r3, 7]",
            "add r0, r3, 8",
            "strb r5, [r3, 4]",
            "strb r6, [r3, 5]",
            "bl memcpy",
            "ldr ip, [sp, 0x30]",
            "cmp ip, r5",
            "beq 0x80301b8",
            "ldr r4, [sp, 0xb4]",
            "add r1, sp, 0x9e",
            "mov r2, 0x10",
            "add r0, r4, 0x18",
            "add r7, r4, 0x28",
            "bl memcpy",
            "mvn r3, 0x77",
            "strb r5, [r4, 0x29]",
            "strb r3, [r4, 0x28]",
            "strb r5, [r4, 0x2d]",
            "strb r5, [r4, 0x2e]",
            "strb r5, [r4, 0x2f]",
            "strb r6, [r4, 0x2c]",
            "mov r1, sb",
            "mov r2, 0x10",
            "add r0, r4, 0x30",
            "mov r5, 2",
            "bl memcpy",
            "mov r3, 1",
            "mov r1, r8",
            "mov r2, 6",
            "strb r3, [r4, 0x41]",
            "strb r5, [r4, 0x40]",
            "add r0, r4, 0x42",
            "bl memcpy",
            "mov r1, 0",
            "mov r2, 0x20",
            "strb r1, [r4, 0x2a]",
            "mov r3, 0x3a",
            "strb r1, [r4, 0x2b]",
            "ldr r1, [sp, 0xb4]",
            "str r7, [sp]",
            "add r0, r1, 8",
            "add r1, r1, 0x18",
            "bl calc_checksum",
            "mov r3, r0",
            "mov r0, r5",
            "ubfx r2, r3, 8, 0x10",
            "strb r3, [r4, 0x2a]",
            "strb r2, [r4, 0x2b]",
            "b 0x802fc08",
            "ldrb r2, [r5, 9]",
            "ldrb ip, [r5, 0xb]",
            "ldrb r3, [r5, 8]",
            "ldrb r0, [r5, 0xa]",
            "str ip, [sp, 0x24]",
            "orr r3, r2, r3",
            "ldrb r2, [r5, 0xc]",
            "orr r0, r3, r0",
            "ldr r3, [sp, 0x24]",
            "ldrb ip, [r5, 0xd]",
            "orr r0, r0, r3",
            "ldrb r3, [r5, 0xe]",
            "orr r0, r0, r2",
            "ldrb r2, [r5, 0xf]",
            "orr ip, r0, ip",
            "ldrb r0, [r5, 0x10]",
            "orr r3, ip, r3",
            "str r2, [sp, 0x24]",
            "ldr ip, [sp, 0x24]",
            "ldrb r2, [r5, 0x11]",
            "orr r3, r3, ip",
            "ldrb ip, [r5, 0x12]",
            "orr r3, r3, r0",
            "ldrb r0, [r5, 0x13]",
            "orr r2, r3, r2",
            "str ip, [sp, 0x24]",
            "ldr r3, [sp, 0x24]",
            "ldrb ip, [r5, 0x14]",
            "orr r2, r2, r3",
            "ldrb r3, [r5, 0x15]",
            "orr r2, r2, r0",
            "ldrb r0, [r5, 0x16]",
            "orr ip, r2, ip",
            "str r3, [sp, 0x24]",
            "ldr r2, [sp, 0x24]",
            "ldrb r3, [r5, 0x17]",
            "orr ip, ip, r2",
            "orr ip, ip, r0",
            "orrs r3, ip, r3",
            "addne ip, r5, 8",
            "moveq r2, 1",
            "addeq ip, r5, 0x30",
            "strne ip, [sp, 0x2c]",
            "movne ip, 0",
            "streq ip, [sp, 0x2c]",
            "streq r2, [sp, 0x30]",
            "movne r2, 1",
            "strne ip, [sp, 0x30]",
            "b 0x802fc38",
            "ldr r3, [0x080302cc]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "beq 0x802fc04",
            "add r1, sp, 0x7e",
            "add r0, r7, 6",
            "bl bcm_ether_ntoa",
            "mov r1, fp",
            "mov r2, r0",
            "ldr r0, [0x080302d0]",
            "bl printk",
            "mov r0, 1",
            "b 0x802fc08",
            "ldr r0, [r4, 8]",
            "sub r1, r1, 0x40",
            "add r0, r0, 0x40",
            "bl parse_nd_options",
            "cmp r0, 0",
            "beq 0x802fc40",
            "ldrb r3, [r0, 1]",
            "cmp r3, 1",
            "bne 0x802fc40",
            "add r0, r0, 2",
            "str r0, [sp, 0x34]",
            "b 0x802fc48",
            "ldr ip, [sp, 0x30]",
            "cmp ip, 0",
            "bne 0x802fce4",
            "mov r0, r8",
            "ldr r1, [sp, 0x2c]",
            "mov r2, 6",
            "mov r3, 1",
            "str sl, [sp]",
            "bl bcm_l2_filter_parp_findentry",
            "cmp r0, 0",
            "beq 0x8030168",
            "ldrb r3, [r5, 0x28]",
            "cmp r3, 0x88",
            "beq 0x80300fc",
            "cmp sb, 0",
            "beq 0x802fc04",
            "ldrb r3, [r5, 0x28]",
            "cmp r3, 0x88",
            "bne 0x802fcec",
            "ldrb r3, [r5, 0x2c]",
            "tst r3, 0xc0",
            "bne 0x802fc04",
            "cmn r5, 0x40",
            "beq 0x802fc04",
            "ldrb r0, [r5, 0x40]",
            "sub r3, r0, 2",
            "rsbs r0, r3, 0",
            "adc r0, r0, r3",
            "b 0x802fc08",
            "mov r0, r8",
            "ldr r1, [sp, 0x2c]",
            "mov r2, 6",
            "mov r3, 1",
            "str sl, [sp]",
            "bl bcm_l2_filter_parp_findentry",
            "cmp r0, 0",
            "bne 0x803003c",
            "mov r0, r8",
            "ldr r1, [sp, 0x2c]",
            "mov r2, 6",
            "mov r3, sb",
            "str sl, [sp]",
            "bl bcm_l2_filter_parp_findentry",
            "cmp r0, 0",
            "bne 0x803003c",
            "ldr r3, [0x080302cc]",
            "ldr r3, [r3]",
            "tst r3, 4",
            "bne 0x803021c",
            "ldr r0, [r6]",
            "mov ip, 6",
            "mov lr, 0",
            "mov r1, r8",
            "ldr r2, [sp, 0x34]",
            "ldr r3, [sp, 0x2c]",
            "stm sp, {ip, lr}",
            "str sl, [sp, 8]",
            "bl bcm_l2_filter_parp_addentry",
            "b 0x803003c",
            "ldr r1, [sp, 0x2c]",
            "mov r0, r8",
            "mov r2, 6",
            "mov r3, 0",
            "str sl, [sp]",
            "bl bcm_l2_filter_parp_findentry",
            "subs r1, r0, 0",
            "beq 0x8030048",
            "add ip, sp, 0xae",
            "add r1, r1, 8",
            "mov r0, ip",
            "mov r2, 6",
            "str ip, [sp, 0x24]",
            "bl memcpy",
            "ldr r3, [0x080302cc]",
            "ldr r3, [r3]",
            "tst r3, 4",
            "bne 0x8030254",
            "ldr r0, [r6]",
            "mov ip, 6",
            "mov lr, 0",
            "mov r1, r8",
            "ldr r2, [sp, 0x24]",
            "ldr r3, [sp, 0x2c]",
            "stm sp, {ip, lr}",
            "bl bcm_l2_filter_parp_delentry",
            "b 0x8030048",
            "ldr r3, [0x080302cc]",
            "ldr r3, [r3]",
            "tst r3, 4",
            "bne 0x803028c",
            "ldr r0, [r6]",
            "mov ip, 6",
            "mov lr, 1",
            "mov r1, r8",
            "ldr r2, [sp, 0x34]",
            "ldr r3, [sp, 0x2c]",
            "stm sp, {ip, lr}",
            "str sl, [sp, 8]",
            "bl bcm_l2_filter_parp_addentry",
            "b 0x803003c",
            "mov r0, r6",
            "mov r1, fp",
            "bl dhd_parp_discard_is_enabled",
            "eor r0, r0, 1",
            "uxtb r0, r0",
            "b 0x802fc08",
            "ldr r0, [sp, 0xb4]",
            "mov r2, 0x10",
            "ldr r1, [sp, 0x2c]",
            "add r0, r0, 0x18",
            "bl memcpy",
            "ldr r4, [sp, 0xb4]",
            "mvn r3, 0x77",
            "ldr ip, [sp, 0x30]",
            "strb r3, [r4, 0x28]",
            "mov r3, 0x60",
            "add r7, r4, 0x28",
            "strb ip, [r4, 0x29]",
            "strb ip, [r4, 0x2d]",
            "strb ip, [r4, 0x2e]",
            "strb ip, [r4, 0x2f]",
            "strb r3, [r4, 0x2c]",
            "b 0x802fe78",
            "mov r0, r6",
            "mov r1, fp",
            "bl dhd_parp_allnode_is_enabled",
            "ldr ip, [sp, 0x24]",
            "cmp r0, 0",
            "moveq ip, r7",
            "str ip, [sp, 0x34]",
            "b 0x802fdc4",
            "add r1, sp, 0x7e",
            "ldr r0, [sp, 0x34]",
            "bl bcm_ether_ntoa",
            "add r1, sp, 0x3e",
            "mov r2, r0",
            "ldr r0, [sp, 0x2c]",
            "str r2, [sp, 0x1c]",
            "bl bcm_ipv6_ntoa",
            "mov r1, fp",
            "mov r3, r0",
            "ldr r2, [sp, 0x1c]",
            "ldr r0, [0x080302d4]",
            "bl printk",
            "b 0x80300d4",
            "add r1, sp, 0x7e",
            "ldr r0, [sp, 0x24]",
            "bl bcm_ether_ntoa",
            "add r1, sp, 0x3e",
            "mov r2, r0",
            "ldr r0, [sp, 0x2c]",
            "str r2, [sp, 0x1c]",
            "bl bcm_ipv6_ntoa",
            "mov r1, fp",
            "mov r3, r0",
            "ldr r2, [sp, 0x1c]",
            "ldr r0, [0x080302d8]",
            "bl printk",
            "b 0x8030144",
            "add r1, sp, 0x7e",
            "ldr r0, [sp, 0x34]",
            "bl bcm_ether_ntoa",
            "add r1, sp, 0x3e",
            "mov r2, r0",
            "ldr r0, [sp, 0x2c]",
            "str r2, [sp, 0x1c]",
            "bl bcm_ipv6_ntoa",
            "mov r1, fp",
            "mov r3, r0",
            "ldr r2, [sp, 0x1c]",
            "ldr r0, [0x080302dc]",
            "bl printk",
            "b 0x8030178"
        ]
    },
    "sym.si_attach": {
        "function_address": "0x08011ec0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r5, r1",
            "sub sp, sp, 0xc",
            "mov r7, r0",
            "movw r1, 0x48c0",
            "mov r0, r5",
            "mov r6, r2",
            "mov r8, r3",
            "ldr sb, [sp, 0x34]",
            "ldr fp, [sp, 0x38]",
            "bl osl_mallocz",
            "subs r4, r0, 0",
            "beq 0x8011f58",
            "mov r0, r5",
            "mov r1, 0x680",
            "bl osl_mallocz",
            "subs sl, r0, 0",
            "beq 0x8011f64",
            "ldr ip, [sp, 0x30]",
            "movw r3, 0x4898",
            "str sl, [r4, r3]",
            "mov r0, r4",
            "mov r3, r6",
            "mov r1, r7",
            "mov r2, r5",
            "str r8, [sp]",
            "str ip, [sp, 4]",
            "bl fcn.080115cc",
            "subs r3, r0, 0",
            "beq 0x8011f7c",
            "cmp sb, 0",
            "movw r3, 0x487c",
            "ldrne sb, [sb]",
            "cmp fp, 0",
            "str sb, [r4, r3]",
            "movw r3, 0x4880",
            "ldrne fp, [fp]",
            "str fp, [r4, r3]",
            "mov r0, r4",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "mov r1, r4",
            "mov r0, r5",
            "movw r2, 0x48c0",
            "mov r4, sl",
            "bl osl_mfree",
            "b 0x8011f58",
            "mov r1, r4",
            "mov r0, r5",
            "movw r2, 0x48c0",
            "mov r4, r3",
            "bl osl_mfree",
            "mov r0, r5",
            "mov r1, sl",
            "mov r2, 0x680",
            "bl osl_mfree",
            "b 0x8011f58"
        ]
    },
    "fcn.080115cc": {
        "function_address": "0x080115cc",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x34",
            "ldr r5, [sp, 0x58]",
            "mov r8, r3",
            "mov r3, 0x21",
            "mov r6, r1",
            "str r2, [sp, 0x1c]",
            "movw r7, 0x4858",
            "ldr r2, [sp, 0x5c]",
            "cmp r5, 1",
            "str r3, [r0, 0x10]",
            "movw r3, 0x4884",
            "ldr r1, [sp, 0x1c]",
            "mov r4, r0",
            "str r8, [r0, r3]",
            "movw r3, 0x485c",
            "str r2, [r0, r3]",
            "mvn r2, 0",
            "add r3, r3, 0x48",
            "str r1, [r0, r7]",
            "str r2, [r0, r3]",
            "beq 0x8011d14",
            "mov r0, 0x18000000",
            "mov r1, 0x1000",
            "mov r2, 0",
            "bl __arm_ioremap",
            "cmp r5, 2",
            "str r0, [sp, 0x20]",
            "str r5, [r4, 4]",
            "beq 0x8011920",
            "ldr r2, [sp, 0x20]",
            "cmp r2, 0",
            "ldreq r4, [sp, 0x20]",
            "beq 0x80118e8",
            "mov r7, 0",
            "ldr r0, [sp, 0x1c]",
            "add r2, sp, 0x2c",
            "ldr r1, [sp, 0x20]",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 0x2c]",
            "movw r2, 0x4335",
            "movt r2, 2",
            "movw ip, 0x4358",
            "bic r1, r3, 0xff000000",
            "bic r1, r1, 0xf00000",
            "cmp r1, r2",
            "subeq r3, r3, 0xff00",
            "subeq r3, r3, 0xfc",
            "uxth r2, r3",
            "lsr r0, r3, 0x1c",
            "cmp r2, ip",
            "ubfx r1, r3, 0x10, 4",
            "ubfx r3, r3, 0x14, 4",
            "str r2, [r4, 0x3c]",
            "str r0, [r4]",
            "str r1, [r4, 0x40]",
            "str r3, [r4, 0x44]",
            "beq 0x8011b20",
            "bhi 0x80118f4",
            "movw r1, 0x4356",
            "cmp r2, r1",
            "beq 0x8011b34",
            "movw r1, 0x4329",
            "cmp r2, r1",
            "bne 0x80116e0",
            "ldr r2, [r4, 0x40]",
            "cmp r2, 0",
            "beq 0x8011b48",
            "sub r3, r3, 0xe",
            "cmp r3, 1",
            "movhi r3, 0",
            "movls r3, 1",
            "ldr r2, [r4]",
            "strb r3, [r4, 0x4c]",
            "cmp r2, 0",
            "beq 0x8011b0c",
            "cmp r2, 1",
            "cmpne r2, 3",
            "movne r3, 0",
            "moveq r3, 1",
            "beq 0x8011bec",
            "cmp r2, 2",
            "bne 0x80118e4",
            "movw r3, 0x488c",
            "ldr r3, [r4, r3]",
            "cmp r3, 0",
            "beq 0x80118e4",
            "ldr r3, [r4]",
            "movw r2, 0x4898",
            "ldr sb, [r4, r2]",
            "cmp r3, 1",
            "beq 0x8011d94",
            "mov r1, 0",
            "mov r0, r4",
            "bl si_setcoreidx",
            "str r0, [sp, 0x24]",
            "mov r0, r4",
            "bl si_corerev",
            "cmp r0, 0xa",
            "str r0, [r4, 0x14]",
            "bgt 0x8011c28",
            "ldr r2, [sp, 0x24]",
            "movw r6, 0x4858",
            "mov r3, 4",
            "ldr r0, [r4, r6]",
            "add r1, r2, 4",
            "add r2, sp, 0x2c",
            "bl osl_pcie_rreg",
            "ldr r2, [r4, 0x14]",
            "ldr r3, [sp, 0x2c]",
            "cmp r2, 0x22",
            "str r3, [r4, 0x18]",
            "bgt 0x8011c00",
            "tst r3, 0x10000000",
            "beq 0x80117e4",
            "ldr r3, [r4, 0x14]",
            "cmp r3, 0x22",
            "ble 0x80117b4",
            "ldr r3, [r4, 0x1c]",
            "tst r3, 0x40",
            "bne 0x8011b5c",
            "ldr r2, [sp, 0x24]",
            "movw r3, 0x4858",
            "ldr r0, [r4, r3]",
            "mov r3, 4",
            "add r1, r2, 0x600",
            "add r2, sp, 0x2c",
            "add r1, r1, 4",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 0x2c]",
            "str r3, [r4, 0x24]",
            "uxtb r3, r3",
            "str r3, [r4, 0x20]",
            "movw r3, 0x488c",
            "mov r2, 0x21",
            "ldr r6, [r4, r3]",
            "mov r1, 0x700",
            "mvn r3, 0",
            "str r1, [r4, 8]",
            "str r3, [r4, 0xc]",
            "cmp r6, 0",
            "str r2, [r4, 0x10]",
            "beq 0x8011a38",
            "mov r1, 0",
            "str r2, [sp, 0x14]",
            "str r1, [sp, 0xc]",
            "mov sl, r1",
            "str r3, [sp, 0x18]",
            "mov r6, r1",
            "str r1, [sp, 0x10]",
            "movw fp, 0x4898",
            "b 0x8011878",
            "movw r2, 0x83c",
            "cmp r3, r2",
            "beq 0x8011930",
            "cmp r7, 0",
            "beq 0x8011854",
            "ldr r3, [sb, 0x100]",
            "cmp r7, r3",
            "moveq r6, sl",
            "beq 0x8011860",
            "ldr r3, [sb]",
            "cmp r8, r3",
            "moveq r6, sl",
            "movw r3, 0x488c",
            "add sl, sl, 1",
            "ldr r3, [r4, r3]",
            "add sb, sb, 4",
            "cmp sl, r3",
            "bhs 0x8011a08",
            "mov r1, sl",
            "mov r0, r4",
            "bl si_setcoreidx",
            "movw r2, 0x4888",
            "ldr r3, [r4, fp]",
            "ldr r2, [r4, r2]",
            "mov r0, r4",
            "add r2, r2, 0x20",
            "ldr r3, [r3, r2, lsl 2]",
            "str r3, [sp, 4]",
            "bl si_corerev",
            "str r0, [sp, 8]",
            "mov r0, 0x7d0",
            "bl osl_delay",
            "cmp r5, 0",
            "ldr r3, [sp, 4]",
            "beq 0x8011830",
            "cmp r5, 1",
            "beq 0x80119a8",
            "movw r2, 0x80d",
            "cmp r5, 2",
            "cmpeq r3, r2",
            "ldreq r3, [sp, 8]",
            "streq r2, [r4, 8]",
            "streq sl, [r4, 0x10]",
            "streq r3, [r4, 0xc]",
            "b 0x801183c",
            "mov r4, r3",
            "mov r0, r4",
            "add sp, sp, 0x34",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "movw r1, 0xaa2e",
            "cmp r2, r1",
            "beq 0x8011b20",
            "add r1, r1, 1",
            "cmp r2, r1",
            "bne 0x80116c8",
            "movw r1, 0x48a0",
            "str r2, [r4, r1]",
            "movw r2, 0xaa32",
            "str r2, [r4, 0x3c]",
            "b 0x80116e0",
            "mov r2, 1",
            "movw r3, 0x4878",
            "strb r2, [r4, r3]",
            "b 0x8011644",
            "ldr r3, [r4, 0x3c]",
            "movw r2, 0xaa52",
            "movw r1, 0xa9c6",
            "cmp r3, r2",
            "cmpne r3, r1",
            "beq 0x801198c",
            "movw r2, 0xaa02",
            "cmp r3, r2",
            "beq 0x801198c",
            "movw r2, 0x4365",
            "cmp r3, r2",
            "beq 0x801198c",
            "add r2, r2, 1",
            "cmp r3, r2",
            "beq 0x801198c",
            "movw r2, 0x4345",
            "movw r1, 0xa9be",
            "cmp r3, r2",
            "cmpne r3, r1",
            "bne 0x801183c",
            "ldr r3, [r4, 0x48]",
            "tst r3, 8",
            "beq 0x801183c",
            "ldr r3, [sp, 8]",
            "mov r2, 1",
            "str r2, [sp, 0xc]",
            "str sl, [sp, 0x14]",
            "str r3, [sp, 0x18]",
            "str r2, [sp, 0x10]",
            "b 0x801183c",
            "movw r2, 0x804",
            "cmp r3, r2",
            "beq 0x801183c",
            "add r2, r2, 0x38",
            "rsb r0, r2, r3",
            "rsbs r1, r0, 0",
            "adc r1, r1, r0",
            "cmp r3, r2",
            "cmpne r3, 0x820",
            "bne 0x801183c",
            "ldr r2, [sp, 8]",
            "cmp r1, 0",
            "movne r3, r5",
            "moveq r3, r5",
            "str r3, [sp, 0x10]",
            "moveq r2, r2",
            "str r2, [sp, 0x18]",
            "movne r2, sl",
            "moveq r2, sl",
            "str r2, [sp, 0x14]",
            "ldr r2, [sp, 0xc]",
            "movne r2, r5",
            "str r2, [sp, 0xc]",
            "b 0x801183c",
            "ldr r2, [sp, 0x10]",
            "cmp r2, 0",
            "beq 0x8011a38",
            "ldr r2, [sp, 0xc]",
            "ldr r3, [sp, 0x18]",
            "cmp r2, 0",
            "ldr r2, [sp, 0x14]",
            "str r3, [r4, 0xc]",
            "movw r3, 0x83c",
            "moveq r3, 0x820",
            "str r2, [r4, 0x10]",
            "str r3, [r4, 8]",
            "ldr r3, [r4, 4]",
            "cmp r3, 0",
            "bne 0x8011a54",
            "ldr r2, [r4, 0x3c]",
            "movw r3, 0x4712",
            "cmp r2, r3",
            "beq 0x8011cb4",
            "mov r0, r4",
            "mov r1, r6",
            "bl si_setcoreidx",
            "ldr r2, [r4, 0x3c]",
            "movw r3, 0x4322",
            "cmp r2, r3",
            "beq 0x8011c50",
            "ldr r3, [r4, 0x14]",
            "cmp r3, 0x25",
            "beq 0x8011c70",
            "cmp r3, 0x13",
            "ble 0x80118e8",
            "mov r0, r4",
            "mov r1, 0x800",
            "mov r2, 0",
            "bl si_setcore",
            "ldr r7, [r4, 0x3c]",
            "movw r2, 0xa886",
            "movw r3, 0x4314",
            "mov r5, r0",
            "cmp r7, r3",
            "cmpne r7, r2",
            "movne r7, 0",
            "moveq r7, 1",
            "moveq sl, 0x2e0",
            "moveq r7, 0x500",
            "movne sl, r7",
            "movteq r7, 2",
            "movteq sl, 4",
            "dsb st",
            "ldr r8, [0x08011e0c]",
            "ldr r3, [r8, 0x18]",
            "cmp r3, 0",
            "beq 0x8011ae0",
            "blx r3",
            "str sl, [r5, 0x58]",
            "dsb st",
            "ldr r3, [r8, 0x18]",
            "cmp r3, 0",
            "beq 0x8011af8",
            "blx r3",
            "str r7, [r5, 0x5c]",
            "mov r0, r4",
            "mov r1, r6",
            "bl si_setcoreidx",
            "b 0x80118e8",
            "mov r0, r4",
            "mov r1, r8",
            "mov r2, r6",
            "bl sb_scan",
            "b 0x801171c",
            "movw r1, 0x48a0",
            "str r2, [r4, r1]",
            "movw r2, 0xaa31",
            "str r2, [r4, 0x3c]",
            "b 0x80116e0",
            "movw r1, 0x48a0",
            "str r2, [r4, r1]",
            "movw r2, 0x4354",
            "str r2, [r4, 0x3c]",
            "b 0x80116e0",
            "cmp r3, 0",
            "movne r3, r2",
            "movne r2, 1",
            "strne r2, [r4, 0x44]",
            "b 0x80116f0",
            "movw r3, 0x488c",
            "ldr r0, [r4, r3]",
            "add r3, r3, 0xc",
            "ldr r3, [r4, r3]",
            "cmp r0, 0",
            "beq 0x8011ba8",
            "ldr r2, [r3, 0x80]",
            "movw ip, 0x827",
            "cmp r2, ip",
            "addne r3, r3, 0x80",
            "movne r1, 0",
            "bne 0x8011b9c",
            "b 0x8011e04",
            "ldr r2, [r3, 4]!",
            "cmp r2, ip",
            "beq 0x8011bac",
            "add r1, r1, 1",
            "cmp r1, r0",
            "bne 0x8011b90",
            "mov r1, 0x21",
            "mov r0, r4",
            "bl si_setcoreidx",
            "movw r3, 0x4858",
            "add r1, r0, 0x600",
            "add r1, r1, 4",
            "ldr r0, [r4, r3]",
            "add r2, sp, 0x2c",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 0x2c]",
            "mov r0, r4",
            "mov r1, 0",
            "str r3, [r4, 0x24]",
            "bl si_setcoreidx",
            "ldr r3, [r4, 0x24]",
            "b 0x80117dc",
            "mov r0, r4",
            "ldr r1, [sp, 0x20]",
            "mov r2, r6",
            "bl ai_scan",
            "b 0x801171c",
            "ldr r3, [sp, 0x24]",
            "add r2, sp, 0x2c",
            "ldr r0, [r4, r6]",
            "add r1, r3, 0xac",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "ldr r2, [sp, 0x2c]",
            "ldr r3, [r4, 0x18]",
            "str r2, [r4, 0x1c]",
            "b 0x8011794",
            "ldr r3, [sp, 0x24]",
            "add r2, sp, 0x2c",
            "add r1, r3, 0x2c",
            "movw r3, 0x4858",
            "ldr r0, [r4, r3]",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 0x2c]",
            "str r3, [r4, 0x48]",
            "b 0x8011764",
            "ldr r3, [r4, 0x48]",
            "ubfx r3, r3, 6, 2",
            "cmp r3, 3",
            "moveq r4, 0",
            "beq 0x80118e8",
            "ldr r3, [r4, 0x14]",
            "cmp r3, 0x25",
            "bne 0x8011a7c",
            "sub r1, r2, 0xa800",
            "movw r3, 0xa8e6",
            "sub r1, r1, 0xe2",
            "cmp r2, r3",
            "cmpne r1, 2",
            "bhi 0x8011a84",
            "ldr r3, [r4, 0x40]",
            "cmp r3, 2",
            "bhi 0x8011a84",
            "ldr r2, [sp, 0x20]",
            "ldr r3, [r2, 0x2c]",
            "tst r3, 0x200",
            "bne 0x8011dc0",
            "mov r0, 0xa",
            "bl osl_delay",
            "ldr r3, [r4, 0x14]",
            "b 0x8011a7c",
            "ldr r3, [r4, 0x44]",
            "cmp r3, 0",
            "beq 0x8011a54",
            "ldr r3, [r4, 0x40]",
            "cmp r3, 3",
            "bhi 0x8011a54",
            "dsb st",
            "ldr r3, [0x08011e0c]",
            "ldr r3, [r3, 0x18]",
            "cmp r3, 0",
            "beq 0x8011ce4",
            "blx r3",
            "ldr r3, [sp, 0x24]",
            "add r2, sp, 0x2c",
            "add r1, r3, 0xb8",
            "movw r3, 0x4858",
            "ldr r0, [r4, r3]",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 0x2c]",
            "ldr r1, [sp, 0x24]",
            "orr r3, r3, 1",
            "str r3, [r1, 0xb8]",
            "b 0x8011a54",
            "mov r0, r1",
            "mov r2, 4",
            "mov r1, 0x88",
            "bl osl_pci_read_config",
            "cmn r0, 1",
            "beq 0x8011da0",
            "ldr r0, [r4, r7]",
            "mov r1, 0x80",
            "mov r2, 4",
            "bl osl_pci_read_config",
            "add r3, r0, 0xe8000000",
            "mov r7, r0",
            "cmp r3, 0x20000",
            "movhs r7, 0x18000000",
            "bhs 0x8011d60",
            "lsl r3, r7, 0x14",
            "lsr r3, r3, 0x14",
            "cmp r3, 0",
            "movne r7, 0x18000000",
            "movw r3, 0x4858",
            "mov r1, 0x80",
            "ldr r0, [r4, r3]",
            "mov r2, 4",
            "mov r3, 0x18000000",
            "bl osl_pci_write_config",
            "cmp r8, 0",
            "movne r3, 1",
            "strne r8, [sp, 0x20]",
            "strne r3, [r4, 4]",
            "bne 0x8011658",
            "mov r4, r8",
            "b 0x80118e8",
            "mov r0, r4",
            "bl ai_enable_backplane_timeouts",
            "b 0x8011740",
            "mov r0, 0x18000000",
            "mov r1, 0x1000",
            "mov r2, 0",
            "mov r5, 0",
            "bl __arm_ioremap",
            "str r5, [r4, 4]",
            "str r0, [sp, 0x20]",
            "b 0x8011644",
            "add r1, r2, 0xa4",
            "ldr r0, [sp, 0x1c]",
            "add r2, sp, 0x2c",
            "mov r3, 4",
            "bl osl_pcie_rreg",
            "ldr r5, [sp, 0x2c]",
            "bic r5, r5, 0xf0000",
            "orr r5, r5, 0xe0000",
            "dsb st",
            "ldr r3, [0x08011e0c]",
            "ldr r3, [r3, 0x18]",
            "cmp r3, 0",
            "beq 0x8011df8",
            "blx r3",
            "ldr r3, [sp, 0x20]",
            "str r5, [r3, 0xa4]",
            "b 0x8011ca4",
            "mov r1, 0",
            "b 0x8011bac"
        ]
    },
    "case.0x80130a8.1": {
        "function_address": "0x08026178",
        "instructions": [
            "mov r0, sl",
            "mov r1, sb",
            "mov r2, r4",
            "mov r3, 1",
            "bl dhd_prot_ring_write_complete",
            "mov r0, 0",
            "ldrh r3, [r5, 2]",
            "bl sym.dhd_prot_dma_indx_set",
            "b 0x802614c"
        ]
    },
    "sym.dhd_prot_dma_indx_set": {
        "function_address": "0x080237a0",
        "instructions": [
            "cmp r2, 6",
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r5, r3",
            "sub sp, sp, 0x10",
            "mov r4, r2",
            "mov r6, r1",
            "ldr r3, [r0, 8]",
            "beq 0x8023838",
            "cmp r2, 9",
            "beq 0x80237e0",
            "ldr r3, [0x08023864]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "bne 0x8023850",
            "add sp, sp, 0x10",
            "pop {r4, r5, r6, r7, r8, pc}",
            "sub r8, r5, 2",
            "ldr r2, [r3, 0x270]",
            "uxth r8, r8",
            "ldr r7, [r3, 0x224]",
            "movw r3, 0x196c",
            "ldr r0, [r0, r3]",
            "mov r1, 0xb",
            "mov r3, r6",
            "mla r7, r7, r8, r2",
            "mov r2, r7",
            "bl dhd_runner_notify",
            "ldr r3, [0x08023864]",
            "ldr r3, [r3]",
            "tst r3, 2",
            "beq 0x80237d8",
            "mov r2, r6",
            "ldr r1, [0x08023868]",
            "mov r3, r4",
            "ldr r0, [0x0802386c]",
            "stm sp, {r5, r7, r8}",
            "bl printk",
            "b 0x80237d8",
            "cmp r5, 4",
            "ldr r2, [r3, 0x228]",
            "subhi r8, r5, 3",
            "uxthhi r8, r8",
            "movls r8, r5",
            "b 0x80237ec",
            "ldr r0, [0x08023870]",
            "ldr r1, [0x08023868]",
            "add sp, sp, 0x10",
            "pop {r4, r5, r6, r7, r8, lr}",
            "b printk"
        ]
    },
    "sym.ai_coreaddrspaceX": {
        "function_address": "0x08006b5c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r0",
            "movw r0, 0x488c",
            "sub sp, sp, 0x3c",
            "mov r5, r1",
            "ldr r0, [r4, r0]",
            "str r3, [sp, 0x18]",
            "movw r3, 0x4898",
            "str r2, [sp, 0x1c]",
            "cmp r0, 0",
            "ldr r8, [r4, r3]",
            "beq 0x8006bbc",
            "ldr r3, [r8, 0x80]",
            "cmp r3, 0x800",
            "addne r2, r8, 0x80",
            "movne r3, 0",
            "bne 0x8006bb0",
            "b 0x8006bd0",
            "ldr r1, [r2, 4]!",
            "cmp r1, 0x800",
            "beq 0x8006bd4",
            "add r3, r3, 1",
            "cmp r3, r0",
            "bne 0x8006ba4",
            "ldr r2, [sp, 0x18]",
            "mov r3, 0",
            "str r3, [r2]",
            "add sp, sp, 0x3c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "mov r3, 0",
            "ldr r1, [r8, r3, lsl 2]",
            "cmp r1, 0",
            "beq 0x8006bbc",
            "movw r3, 0x4858",
            "add r1, r1, 0xfc",
            "ldr r0, [r4, r3]",
            "add r2, sp, 0x34",
            "mov r3, 4",
            "add r6, sp, 0x38",
            "bl osl_pcie_rreg",
            "mov r1, 0x1000",
            "mov r2, 0",
            "ldr r0, [sp, 0x34]",
            "bl __arm_ioremap",
            "movw r3, 0x4888",
            "str r0, [r6, -0x18]!",
            "ldr r3, [r4, r3]",
            "mov ip, r0",
            "add r7, r0, 0xe00",
            "mov r1, r6",
            "cmp r7, ip",
            "mov r0, r4",
            "add r2, r3, 0x180",
            "add r3, r3, 0x160",
            "ldr sb, [r8, r2, lsl 2]",
            "ldr r8, [r8, r3, lsl 2]",
            "mov r3, 0",
            "ubfx r2, sb, 9, 5",
            "ubfx sl, sb, 4, 5",
            "str r2, [sp, 0x14]",
            "mov r2, 0xe",
            "bls 0x8006c7c",
            "bl fcn.080061e8",
            "cmp r0, r8",
            "beq 0x8006d84",
            "ldr ip, [sp, 0x20]",
            "cmp r7, ip",
            "mov r1, r6",
            "mov r2, 0xe",
            "mov r3, 0",
            "mov r0, r4",
            "bhi 0x8006c54",
            "cmp sl, 0",
            "movne r7, 0",
            "beq 0x8006ca8",
            "mov r2, 1",
            "mov r0, r4",
            "add r7, r7, r2",
            "mov r1, r6",
            "mov r3, r2",
            "bl fcn.080061e8",
            "cmp r7, sl",
            "bne 0x8006c88",
            "mov r2, 0",
            "add fp, sp, 0x24",
            "mov r3, r2",
            "add sb, sp, 0x28",
            "add sl, sp, 0x2c",
            "add r8, sp, 0x30",
            "mov r0, r4",
            "mov r1, r6",
            "str fp, [sp]",
            "stmib sp, {sb, sl}",
            "str r8, [sp, 0xc]",
            "bl fcn.08006474",
            "subs r2, r0, 0",
            "beq 0x8006dc4",
            "mov r2, 0",
            "mov r0, r4",
            "mov r1, r6",
            "mov r3, r2",
            "str fp, [sp]",
            "stmib sp, {sb, sl}",
            "str r8, [sp, 0xc]",
            "bl fcn.08006474",
            "cmp r0, 0",
            "bne 0x8006ce0",
            "ldr r3, [sp, 0x14]",
            "cmp r3, 1",
            "movhi r3, 1",
            "movhi r7, r4",
            "strhi r3, [sp, 0x10]",
            "bls 0x8006bbc",
            "mov r4, 0",
            "b 0x8006d38",
            "cmp r5, 0",
            "add r4, r4, 1",
            "sub r5, r5, 1",
            "beq 0x8006da8",
            "mov r0, r7",
            "mov r1, r6",
            "ldr r2, [sp, 0x10]",
            "mov r3, 0",
            "str fp, [sp]",
            "stmib sp, {sb, sl}",
            "str r8, [sp, 0xc]",
            "bl fcn.08006474",
            "cmp r0, 0",
            "bne 0x8006d28",
            "cmp r4, 0",
            "beq 0x8006bbc",
            "ldr r3, [sp, 0x10]",
            "ldr r2, [sp, 0x14]",
            "add r3, r3, 1",
            "cmp r3, r2",
            "str r3, [sp, 0x10]",
            "bne 0x8006d20",
            "b 0x8006bbc",
            "mov r2, 0",
            "mov r0, r4",
            "mov r1, r6",
            "mov r3, r2",
            "bl fcn.080061e8",
            "cmp r0, sb",
            "beq 0x8006c7c",
            "ldr ip, [sp, 0x20]",
            "b 0x8006c64",
            "ldr r3, [sp, 0x24]",
            "ldr r2, [sp, 0x1c]",
            "str r3, [r2]",
            "ldr r3, [sp, 0x2c]",
            "ldr r2, [sp, 0x18]",
            "str r3, [r2]",
            "b 0x8006bc8",
            "mov r0, r4",
            "mov r1, r6",
            "mov r3, 0x40",
            "str fp, [sp]",
            "stmib sp, {sb, sl}",
            "str r8, [sp, 0xc]",
            "bl fcn.08006474",
            "b 0x8006ce0"
        ]
    },
    "sym.dhd_bus_download_firmware": {
        "function_address": "0x0802c64c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r0",
            "ldr r5, [0x0802d064]",
            "sub sp, sp, 0x24",
            "mov r1, r2",
            "str r3, [r0, 0x58]",
            "ldr r0, [r5]",
            "str r2, [r4, 0x54]",
            "tst r0, 1",
            "bne 0x802cf90",
            "mov r0, r4",
            "bl update_firmware_path",
            "ldr r3, [r4, 0x54]",
            "cmp r3, 0",
            "beq 0x802c694",
            "ldrb r3, [r3]",
            "cmp r3, 0",
            "bne 0x802c6ac",
            "ldr r5, [r5]",
            "ands r5, r5, 1",
            "bne 0x802cfa4",
            "mov r0, r5",
            "add sp, sp, 0x24",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r3, [r4]",
            "mov r1, 0x4000",
            "ldr r0, [r3]",
            "bl osl_malloc",
            "cmp r0, 0",
            "mov r6, r0",
            "str r0, [r4, 0x5c]",
            "beq 0x802c828",
            "mov r3, 0",
            "strb r3, [r0]",
            "ldr r6, [r4, 0x5c]",
            "ldr r0, [r4]",
            "str r6, [sp, 0x18]",
            "bl dhd_get_instance",
            "mov r1, 0xc",
            "mov r3, r0",
            "ldr r2, [0x0802d068]",
            "mov r0, r6",
            "bl snprintf",
            "ldr r3, [sp, 0x18]",
            "add r6, r0, 1",
            "ldr r1, [0x0802d06c]",
            "ldr r0, [r4, 0x20]",
            "add r3, r3, r6",
            "str r3, [sp, 0x18]",
            "bl si_getdevpathvar",
            "subs r3, r0, 0",
            "ldrne ip, [sp, 0x18]",
            "beq 0x802cb74",
            "mov r1, 0x10",
            "ldr r2, [0x0802d070]",
            "mov r0, ip",
            "bl snprintf",
            "ldr r2, [sp, 0x18]",
            "add r3, r0, 1",
            "ldr r1, [0x0802d074]",
            "add r6, r6, r3",
            "ldr r0, [r4, 0x20]",
            "add r3, r2, r3",
            "str r3, [sp, 0x18]",
            "bl si_getdevpathvar",
            "cmp r0, 0",
            "beq 0x802cb3c",
            "ldr r0, [r4, 0x20]",
            "add r2, sp, 0x18",
            "ldr r1, [r4, 0x184]",
            "rsb r3, r6, 0x4000",
            "bl dbushost_initvars_flash",
            "cmp r0, 0",
            "beq 0x802c780",
            "ldr r3, [r5]",
            "tst r3, 1",
            "bne 0x802cff0",
            "ldr r3, [sp, 0x18]",
            "mov r2, 6",
            "ldr r6, [r4, 0x5c]",
            "add r7, sp, 8",
            "ldr r1, [0x0802d078]",
            "mov r0, r3",
            "rsb r6, r6, r3",
            "bl memcpy",
            "ldr r3, [0x0802d07c]",
            "add r6, r6, 6",
            "ldr r2, [r5]",
            "str r6, [r4, 0x60]",
            "ldm r3, {r0, r1}",
            "tst r2, 1",
            "stm r7, {r0, r1}",
            "bne 0x802cfb8",
            "ldr r3, [0x0802d080]",
            "ldr r8, [r3]",
            "cmp r8, 0",
            "beq 0x802c8a4",
            "ldr r3, [r5]",
            "tst r3, 1",
            "bne 0x802cfc8",
            "mov r0, r4",
            "mov r1, 1",
            "bl fcn.08028914",
            "cmp r0, 0",
            "beq 0x802c868",
            "ldr r3, [r5]",
            "tst r3, 1",
            "bne 0x802d000",
            "mvn r5, 0",
            "ldr r1, [r4, 0x5c]",
            "cmp r1, 0",
            "beq 0x802c6a0",
            "ldr r3, [r4]",
            "mov r2, 0x4000",
            "ldr r0, [r3]",
            "bl osl_mfree",
            "mov r3, 0",
            "str r3, [r4, 0x5c]",
            "b 0x802c6a0",
            "ldr r5, [r5]",
            "ands r5, r5, 1",
            "beq 0x802c6a0",
            "ldr r0, [0x0802d084]",
            "ldr r1, [0x0802d088]",
            "bl printk",
            "ldr r3, [0x0802d064]",
            "ldr r3, [r3]",
            "ands r3, r3, 1",
            "moveq r5, r3",
            "beq 0x802c6a0",
            "ldr r1, [0x0802d08c]",
            "mov r5, r6",
            "ldr r0, [0x0802d090]",
            "bl printk",
            "b 0x802c6a0",
            "ldr r6, [r4, 0x54]",
            "cmp r6, 0",
            "beq 0x802c880",
            "ldrb r3, [r6]",
            "cmp r3, 0",
            "bne 0x802ca00",
            "ldr r3, [r5]",
            "tst r3, 1",
            "beq 0x802c7fc",
            "movw r2, 0x7f2",
            "ldr r1, [0x0802d08c]",
            "ldr r0, [0x0802d094]",
            "mvn r5, 0",
            "bl printk",
            "b 0x802c800",
            "ldr r3, [r4, 0x54]",
            "cmp r3, 0",
            "beq 0x802c9e4",
            "ldrb r3, [r3]",
            "cmp r3, 0",
            "beq 0x802c9e4",
            "ldr r6, [sp, 8]",
            "cmn r6, 1",
            "beq 0x802c7dc",
            "mov r3, r7",
            "cmp r8, r6",
            "movlo r8, r6",
            "ldr r6, [r3, 4]!",
            "cmn r6, 1",
            "bne 0x802c8cc",
            "cmp r8, 0",
            "beq 0x802c7dc",
            "ldr r3, [r4]",
            "add r8, r8, 8",
            "mov r1, r8",
            "ldr r0, [r3]",
            "bl osl_malloc",
            "subs sl, r0, 0",
            "beq 0x802ceac",
            "cmp r8, 0",
            "beq 0x802c9cc",
            "ldr r0, [r4, 0x54]",
            "cmp r0, 0",
            "beq 0x802c9cc",
            "ldrb r3, [r0]",
            "cmp r3, 0",
            "beq 0x802c9cc",
            "bl dhd_os_open_image",
            "subs sb, r0, 0",
            "beq 0x802cf30",
            "mov r0, sl",
            "mov r1, r8",
            "mov r2, sb",
            "bl dhd_os_get_image_block",
            "cmp r8, r0",
            "moveq r6, 0",
            "beq 0x802c958",
            "ldr r3, [r5]",
            "tst r3, 1",
            "bne 0x802cfdc",
            "mov r0, sb",
            "bl dhd_os_close_image",
            "cmp r6, 0",
            "bne 0x802c9cc",
            "ldr r1, [sp, 8]",
            "cmn r1, 1",
            "beq 0x802c9cc",
            "movw r6, 0x4152",
            "movt r6, 0x534d",
            "b 0x802c98c",
            "ldr r1, [r7, 4]!",
            "cmn r1, 1",
            "beq 0x802c9cc",
            "add r3, r1, 8",
            "cmp r8, r3",
            "blo 0x802c980",
            "add r1, sl, r1",
            "add r0, sp, 0x10",
            "mov r2, 8",
            "bl memcpy",
            "ldr r3, [sp, 0x10]",
            "cmp r3, r6",
            "bne 0x802c980",
            "ldr r3, [r5]",
            "ldr r2, [sp, 0x14]",
            "tst r3, 1",
            "str r2, [r4, 0x40]",
            "str r2, [r4, 0x3c]",
            "bne 0x802d040",
            "ldr r3, [r4]",
            "mov r1, sl",
            "mov r2, r8",
            "ldr r0, [r3]",
            "bl osl_mfree",
            "b 0x802c7dc",
            "ldr r3, [r5]",
            "tst r3, 1",
            "beq 0x802c7dc",
            "ldr r1, [0x0802d098]",
            "ldr r0, [0x0802d09c]",
            "bl printk",
            "b 0x802c7dc",
            "ldr r3, [r5]",
            "tst r3, 1",
            "bne 0x802d02c",
            "mov r0, r6",
            "bl dhd_os_open_image",
            "subs sb, r0, 0",
            "beq 0x802cb18",
            "ldr r3, [r4]",
            "mov r1, 0x820",
            "ldr r0, [r3]",
            "bl osl_malloc",
            "subs fp, r0, 0",
            "beq 0x802cf14",
            "ands r3, fp, 0x1f",
            "mov r6, 0",
            "rsbne r3, r3, 0x20",
            "moveq r8, fp",
            "addne r8, fp, r3",
            "mvn r7, 0",
            "b 0x802ca84",
            "cmp r6, 0",
            "ldreq r6, [r4, 0x168]",
            "ldreq r3, [r8]",
            "streq r3, [r4, 0x164]",
            "mov r2, r6",
            "mov r0, r4",
            "mov r1, 1",
            "mov r3, r8",
            "str sl, [sp]",
            "bl fcn.08027c78",
            "subs r7, r0, 0",
            "bne 0x802ce84",
            "add r6, r6, 0x800",
            "mov r1, 0x800",
            "mov r2, sb",
            "mov r0, r8",
            "bl dhd_os_get_image_block",
            "subs sl, r0, 0",
            "movw r1, 0x83e",
            "mov r2, 0",
            "beq 0x802caf4",
            "blt 0x802cad0",
            "ldr r0, [r4, 0x20]",
            "bl si_setcore",
            "subs r2, r0, 0",
            "bne 0x802ca50",
            "movw r1, 0x847",
            "ldr r0, [r4, 0x20]",
            "bl si_setcore",
            "cmp r0, 0",
            "bne 0x802ca50",
            "b 0x802ca60",
            "ldr r3, [r5]",
            "tst r3, 1",
            "mvneq r7, 0",
            "beq 0x802caf4",
            "ldr r0, [0x0802d0a0]",
            "mov r2, sl",
            "ldr r1, [0x0802d0a4]",
            "mvn r7, 0",
            "bl printk",
            "ldr r3, [r4]",
            "mov r1, fp",
            "mov r2, 0x820",
            "ldr r0, [r3]",
            "bl osl_mfree",
            "mov r0, sb",
            "bl dhd_os_close_image",
            "cmp r7, 0",
            "beq 0x802cb90",
            "ldr r3, [r5]",
            "tst r3, 1",
            "beq 0x802c7fc",
            "movw r2, 0x7d9",
            "ldr r1, [0x0802d08c]",
            "ldr r0, [0x0802d0a8]",
            "mvn r5, 0",
            "bl printk",
            "b 0x802c800",
            "ldr r0, [0x0802d074]",
            "bl nvram_get",
            "subs r3, r0, 0",
            "beq 0x802c758",
            "ldr r0, [sp, 0x18]",
            "mov r1, 0x11",
            "ldr r2, [0x0802d0ac]",
            "bl snprintf",
            "ldr r3, [sp, 0x18]",
            "add r0, r0, 1",
            "add r6, r6, r0",
            "add r0, r3, r0",
            "str r0, [sp, 0x18]",
            "b 0x802c758",
            "ldr r0, [0x0802d06c]",
            "bl nvram_get",
            "cmp r0, 0",
            "ldr r3, [0x0802d0b0]",
            "ldr ip, [sp, 0x18]",
            "movne r3, r0",
            "b 0x802c720",
            "ldr r8, [r4, 0x58]",
            "str r7, [sp, 0x1c]",
            "cmp r8, 0",
            "beq 0x802cbac",
            "ldrb r7, [r8]",
            "adds r7, r7, 0",
            "movne r7, 1",
            "mov ip, 0x4000",
            "ldr r0, [r4]",
            "add r3, sp, 0x1c",
            "str ip, [sp, 0x18]",
            "mov r1, 0",
            "add ip, sp, 0x18",
            "mov r2, 1",
            "str ip, [sp]",
            "bl dhd_get_download_buffer",
            "ldr r3, [sp, 0x18]",
            "cmp r3, 0",
            "beq 0x802cbf8",
            "ldr r6, [sp, 0x1c]",
            "ldrb r2, [r6]",
            "cmp r2, 0",
            "movne r8, 0",
            "movne r1, 1",
            "mvnne sl, 0",
            "bne 0x802cc1c",
            "cmp r7, 0",
            "bne 0x802cdb0",
            "ldr r2, [r4, 0x60]",
            "cmp r2, 0",
            "bne 0x802cecc",
            "ldr r6, [sp, 0x1c]",
            "mov r8, r7",
            "mov r1, r7",
            "mov sl, r7",
            "sub r2, r3, 1",
            "cmp r2, 0x4000",
            "blo 0x802cd0c",
            "cmp r6, 0",
            "beq 0x802cc48",
            "cmp r8, 0",
            "bne 0x802ccf4",
            "ldr r0, [r4]",
            "mov r1, r6",
            "mov r2, 0x4000",
            "bl dhd_free_download_buffer",
            "cmp sl, 0",
            "bne 0x802cc98",
            "ldr r3, [r4, 0x58]",
            "cmp r3, 0",
            "beq 0x802cc68",
            "ldrb r3, [r3]",
            "cmp r3, 0",
            "bne 0x802ccbc",
            "mov r0, r4",
            "bl dhdpcie_download_map_bin",
            "cmp r0, 0",
            "beq 0x802ccbc",
            "ldr r3, [r5]",
            "tst r3, 1",
            "beq 0x802c7fc",
            "ldr r1, [0x0802d08c]",
            "mvn r5, 0",
            "ldr r0, [0x0802d0b4]",
            "bl printk",
            "b 0x802c800",
            "ldr r3, [r5]",
            "tst r3, 1",
            "beq 0x802c7fc",
            "movw r2, 0x7fd",
            "ldr r1, [0x0802d08c]",
            "ldr r0, [0x0802d0b8]",
            "mvn r5, 0",
            "bl printk",
            "b 0x802c800",
            "mov r0, r4",
            "mov r1, 0",
            "bl fcn.08028914",
            "cmp r0, 0",
            "moveq r5, r0",
            "beq 0x802c800",
            "ldr r3, [r5]",
            "tst r3, 1",
            "beq 0x802c7fc",
            "ldr r1, [0x0802d08c]",
            "mvn r5, 0",
            "ldr r0, [0x0802d0bc]",
            "bl printk",
            "b 0x802c800",
            "ldr r3, [r4]",
            "mov r1, r6",
            "mov r2, 0x4000",
            "ldr r0, [r3]",
            "bl osl_mfree",
            "b 0x802cc48",
            "cmp r1, 0",
            "mov r2, 0",
            "strb r2, [r6, r3]",
            "beq 0x802ce00",
            "mov r0, r6",
            "ldr r1, [sp, 0x18]",
            "bl process_nvram_vars",
            "cmp r7, 0",
            "str r0, [sp, 0x18]",
            "bne 0x802ce18",
            "ands r3, r0, 3",
            "beq 0x802cd74",
            "rsb r3, r3, 4",
            "mov ip, 0",
            "add r2, r3, r0",
            "str r2, [sp, 0x18]",
            "b 0x802cd54",
            "ldr r2, [sp, 0x18]",
            "sub r3, r3, 1",
            "ldr r1, [sp, 0x1c]",
            "sub r2, r2, 1",
            "cmp r3, 0",
            "rsb r2, r3, r2",
            "strb ip, [r1, r2]",
            "bne 0x802cd50",
            "ldr r0, [sp, 0x18]",
            "ldr r2, [sp, 0x1c]",
            "mov r3, 0",
            "strb r3, [r2, r0]",
            "ldr r2, [sp, 0x18]",
            "strb r3, [r6, r2]",
            "ldr r2, [sp, 0x18]",
            "cmp r2, r3",
            "bne 0x802cf4c",
            "cmp sl, 0",
            "beq 0x802cda8",
            "ldr r3, [r5]",
            "tst r3, 1",
            "bne 0x802d014",
            "ldr r6, [sp, 0x1c]",
            "b 0x802cc28",
            "mov ip, 0x4000",
            "ldr r0, [r4]",
            "mov r1, r8",
            "mov r2, 1",
            "add r3, sp, 0x1c",
            "str ip, [sp, 0x18]",
            "add ip, sp, 0x18",
            "str ip, [sp]",
            "bl dhd_get_download_buffer",
            "ldr r3, [sp, 0x18]",
            "ldr r6, [sp, 0x1c]",
            "sub r2, r3, 1",
            "cmp r2, 0x4000",
            "movhs r8, 0",
            "mvnhs sl, 0",
            "bhs 0x802cc28",
            "mov r2, 0",
            "mvn sl, 0",
            "mov r8, r2",
            "strb r2, [r6, r3]",
            "cmp r7, 0",
            "beq 0x802ce7c",
            "mov r0, r6",
            "ldr r1, [sp, 0x18]",
            "bl process_nvram_vars",
            "str r0, [sp, 0x18]",
            "ldr r1, [r4]",
            "add r3, sp, 0x18",
            "ldr r0, [r4, 0x20]",
            "ldr r2, [sp, 0x1c]",
            "ldr r1, [r1]",
            "bl update_nvram_from_srom",
            "subs sl, r0, 0",
            "bne 0x802cda8",
            "ldr r2, [sp, 0x18]",
            "movw r3, 0x3ffe",
            "sub r2, r2, 1",
            "cmp r2, r3",
            "bhi 0x802cda8",
            "mov r0, r4",
            "ldr r1, [sp, 0x1c]",
            "add r2, sp, 0x18",
            "bl dhd_vars_adjust",
            "subs sl, r0, 0",
            "bne 0x802cda8",
            "ldr r0, [r4]",
            "add r2, sp, 0x18",
            "ldr r1, [sp, 0x1c]",
            "bl dhd_check_and_set_mac",
            "subs sl, r0, 0",
            "bne 0x802cda8",
            "ldr r0, [sp, 0x18]",
            "b 0x802cd34",
            "ldr r3, [r5]",
            "tst r3, 1",
            "beq 0x802caf4",
            "ldr r1, [0x0802d0a4]",
            "mov r2, r7",
            "mov r3, 0x800",
            "ldr r0, [0x0802d0c0]",
            "str r6, [sp]",
            "bl printk",
            "b 0x802caf4",
            "ldr r3, [r5]",
            "tst r3, 1",
            "beq 0x802c7dc",
            "ldr r1, [0x0802d098]",
            "mov r2, r8",
            "ldr r0, [0x0802d0c4]",
            "bl printk",
            "b 0x802c7dc",
            "ldr r3, [r4]",
            "mov r1, 0x4000",
            "ldr r0, [r3]",
            "bl osl_mallocz",
            "cmp r0, 0",
            "str r0, [sp, 0x1c]",
            "beq 0x802cf64",
            "ldr r3, [r4, 0x60]",
            "mov r8, 1",
            "ldr r1, [r4, 0x5c]",
            "mvn sl, 0",
            "mov r2, r3",
            "str r3, [sp, 0x18]",
            "bl memcpy",
            "ldr r3, [sp, 0x18]",
            "mov r1, r7",
            "ldr r6, [sp, 0x1c]",
            "b 0x802cc1c",
            "ldr r3, [r5]",
            "tst r3, 1",
            "bne 0x802d050",
            "cmp sb, 0",
            "beq 0x802cb18",
            "mvn r7, 0",
            "b 0x802cb08",
            "ldr r3, [r5]",
            "tst r3, 1",
            "beq 0x802c9cc",
            "ldr r1, [0x0802d0c8]",
            "ldr r0, [0x0802d0cc]",
            "bl printk",
            "b 0x802c9cc",
            "mov r0, r4",
            "ldr r1, [sp, 0x1c]",
            "add r2, r2, 1",
            "bl fcn.08027b70",
            "mov sl, r0",
            "b 0x802cd94",
            "ldr r3, [r5]",
            "tst r3, 1",
            "beq 0x802c7fc",
            "ldr r0, [0x0802d0c4]",
            "mov r2, 0x4000",
            "ldr r1, [0x0802d0d0]",
            "mov r8, r7",
            "bl printk",
            "mvn sl, 0",
            "ldr r6, [sp, 0x1c]",
            "b 0x802cc28",
            "ldr r1, [0x0802d0d4]",
            "ldr r0, [0x0802d0d8]",
            "bl printk",
            "ldr r1, [r4, 0x54]",
            "b 0x802c674",
            "ldr r1, [0x0802d08c]",
            "mov r5, 0",
            "ldr r0, [0x0802d09c]",
            "bl printk",
            "b 0x802c6a0",
            "add r1, r3, 8",
            "ldr r0, [0x0802d0dc]",
            "bl printk",
            "b 0x802c7c0",
            "ldr r1, [0x0802d098]",
            "mov r2, r8",
            "ldr r0, [0x0802d0e0]",
            "bl printk",
            "b 0x802c7dc",
            "mov r2, r8",
            "ldr r1, [0x0802d0c8]",
            "ldr r0, [0x0802d0e4]",
            "bl printk",
            "b 0x802c958",
            "ldr r1, [0x0802d088]",
            "ldr r0, [0x0802d0e8]",
            "bl printk",
            "b 0x802c780",
            "ldr r1, [0x0802d08c]",
            "mvn r5, 0",
            "ldr r0, [0x0802d0ec]",
            "bl printk",
            "b 0x802c800",
            "ldr r0, [0x0802d0f0]",
            "mov r2, sl",
            "ldr r1, [0x0802d0d0]",
            "bl printk",
            "ldr r6, [sp, 0x1c]",
            "b 0x802cc28",
            "mov r2, r6",
            "ldr r1, [0x0802d0a4]",
            "ldr r0, [0x0802d0f4]",
            "bl printk",
            "b 0x802ca0c",
            "ldr r1, [0x0802d098]",
            "ldr r0, [0x0802d0f8]",
            "bl printk",
            "b 0x802c9cc",
            "ldr r1, [0x0802d0a4]",
            "mov r2, 0x800",
            "ldr r0, [0x0802d0c4]",
            "bl printk",
            "b 0x802cf20"
        ]
    },
    "fcn.08028914": {
        "function_address": "0x08028914",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r4, r0",
            "ldr r0, [r0, 0x20]",
            "sub sp, sp, 0x10",
            "mov r2, r1",
            "cmp r0, 0",
            "beq 0x8028a00",
            "cmp r1, 0",
            "bne 0x8028984",
            "movw r1, 0x847",
            "bl si_setcore",
            "subs r2, r0, 0",
            "beq 0x8028b68",
            "mov r0, r4",
            "bl fcn.08028674",
            "subs r6, r0, 0",
            "beq 0x8028af0",
            "ldr r3, [0x08028ecc]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "bne 0x8028e70",
            "ldr r0, [r4, 0x20]",
            "movw r1, 0x83c",
            "mov r2, 0",
            "bl si_setcore",
            "mov r0, r6",
            "add sp, sp, 0x10",
            "pop {r4, r5, r6, pc}",
            "mov r3, 1",
            "movw r1, 0x83e",
            "strb r3, [r4, 0x160]",
            "mov r2, 0",
            "bl si_setcore",
            "subs r6, r0, 0",
            "beq 0x8028c60",
            "ldr r0, [r4, 0x20]",
            "movw r1, 0x847",
            "mov r2, 0",
            "bl si_setcore",
            "cmp r0, 0",
            "beq 0x8028a28",
            "mov r1, 0x20",
            "ldr r0, [r4, 0x20]",
            "mov r2, r1",
            "bl si_core_reset",
            "ldr r0, [r4, 0x20]",
            "movw r1, 0x849",
            "mov r2, 0",
            "bl si_setcore",
            "cmp r0, 0",
            "beq 0x8028b50",
            "mov r1, 0",
            "ldr r0, [r4, 0x20]",
            "mov r2, r1",
            "mov r6, r1",
            "bl si_core_reset",
            "mov r0, r4",
            "bl fcn.08027de0",
            "b 0x8028968",
            "ldr r3, [0x08028ecc]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "mvneq r6, 0",
            "beq 0x8028978",
            "ldr r1, [0x08028ed0]",
            "mvn r6, 0",
            "ldr r0, [0x08028ed4]",
            "bl printk",
            "b 0x8028978",
            "cmp r6, 0",
            "beq 0x8028d20",
            "mov r1, 0x20",
            "ldr r0, [r4, 0x20]",
            "mov r2, r1",
            "bl si_core_reset",
            "ldr r3, [r4, 0x20]",
            "movw r2, 0xaa52",
            "movw r1, 0xa9c6",
            "ldr r3, [r3, 0x3c]",
            "cmp r3, r2",
            "cmpne r3, r1",
            "beq 0x8028a78",
            "movw r2, 0xaa02",
            "cmp r3, r2",
            "beq 0x8028a78",
            "mov r0, r4",
            "mov r6, 0",
            "bl fcn.08027de0",
            "b 0x8028968",
            "dsb st",
            "ldr r5, [0x08028ed8]",
            "ldr r3, [r5, 0x18]",
            "cmp r3, 0",
            "beq 0x8028a90",
            "blx r3",
            "mov r3, 5",
            "str r3, [r6, 0x40]",
            "dsb st",
            "ldr r3, [r5, 0x18]",
            "cmp r3, 0",
            "beq 0x8028aac",
            "blx r3",
            "mov r3, 0",
            "str r3, [r6, 0x4c]",
            "dsb st",
            "ldr r3, [r5, 0x18]",
            "cmp r3, 0",
            "beq 0x8028ac8",
            "blx r3",
            "mov r3, 7",
            "str r3, [r6, 0x40]",
            "dsb st",
            "ldr r3, [r5, 0x18]",
            "cmp r3, 0",
            "beq 0x8028ae4",
            "blx r3",
            "mov r3, 0",
            "str r3, [r6, 0x4c]",
            "b 0x8028a68",
            "ldr r0, [r4, 0x20]",
            "movw r1, 0x847",
            "mov r2, r6",
            "bl si_setcore",
            "cmp r0, 0",
            "beq 0x8028cfc",
            "mov r2, r6",
            "mov ip, 4",
            "mov r0, r4",
            "mov r1, 1",
            "add r3, r4, 0x164",
            "str ip, [sp]",
            "bl fcn.08027c78",
            "mov r6, r0",
            "mov r1, 0",
            "ldr r0, [r4, 0x20]",
            "mov r2, r1",
            "bl si_core_reset",
            "ldr r3, [r4]",
            "mov r2, 0",
            "strb r2, [r4, 0x160]",
            "mov r2, 1",
            "str r2, [r3, 0x14]",
            "b 0x8028968",
            "ldr r3, [0x08028ecc]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "bne 0x8028eb8",
            "mvn r6, 0",
            "b 0x8028968",
            "ldr r0, [r4, 0x20]",
            "movw r1, 0x83e",
            "bl si_setcore",
            "subs r5, r0, 0",
            "ldr r0, [r4, 0x20]",
            "beq 0x8028dd8",
            "ldr r3, [r0, 0x3c]",
            "movw r2, 0xaa52",
            "movw r1, 0xa9c6",
            "cmp r3, r2",
            "cmpne r3, r1",
            "beq 0x8028cc4",
            "movw r2, 0xaa02",
            "cmp r3, r2",
            "beq 0x8028cc4",
            "mov r0, r4",
            "bl fcn.08028674",
            "subs r6, r0, 0",
            "bne 0x8028958",
            "ldr r0, [r4, 0x20]",
            "movw r1, 0x83e",
            "mov r2, r6",
            "bl si_setcore",
            "cmp r0, 0",
            "beq 0x8028db4",
            "mov r2, r6",
            "mov r5, 4",
            "mov r0, r4",
            "mov r1, 1",
            "add r3, r4, 0x164",
            "str r5, [sp]",
            "bl fcn.08027c78",
            "subs r6, r0, 0",
            "bne 0x8028b28",
            "mov r1, r6",
            "mov r2, r6",
            "mov r0, r4",
            "add r3, sp, 0xc",
            "str r5, [sp]",
            "bl fcn.08027c78",
            "subs r6, r0, 0",
            "bne 0x8028b28",
            "ldr r2, [r4, 0x164]",
            "ldr r3, [sp, 0xc]",
            "cmp r2, r3",
            "beq 0x8028b28",
            "ldr r5, [0x08028ecc]",
            "ldr r3, [r5]",
            "tst r3, 1",
            "beq 0x8028b60",
            "ldr r0, [0x08028edc]",
            "ldr r1, [0x08028ed0]",
            "bl printk",
            "ldr r3, [r5]",
            "tst r3, 1",
            "beq 0x8028b60",
            "ldr r1, [0x08028ed0]",
            "mvn r6, 0",
            "ldr r2, [sp, 0xc]",
            "ldr r0, [0x08028ee0]",
            "bl printk",
            "b 0x8028968",
            "mov r2, r6",
            "ldr r0, [r4, 0x20]",
            "movw r1, 0x825",
            "bl si_setcore",
            "subs r2, r0, 0",
            "bne 0x80289a0",
            "ldr r0, [r4, 0x20]",
            "movw r1, 0x82a",
            "bl si_setcore",
            "subs r2, r0, 0",
            "bne 0x80289a0",
            "ldr r0, [r4, 0x20]",
            "movw r1, 0x847",
            "bl si_setcore",
            "cmp r0, 0",
            "bne 0x80289a0",
            "ldr r3, [0x08028ecc]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "beq 0x8028b60",
            "ldr r1, [0x08028ed0]",
            "mvn r6, 0",
            "ldr r0, [0x08028ee4]",
            "bl printk",
            "b 0x8028968",
            "movw r1, 0x80e",
            "mov r2, 0",
            "bl si_setcore",
            "cmp r0, 0",
            "beq 0x8028d90",
            "mov r1, 0",
            "ldr r0, [r4, 0x20]",
            "mov r2, r1",
            "bl si_core_reset",
            "ldr r0, [r4, 0x20]",
            "movw r1, 0x83e",
            "mov r2, 0",
            "bl si_setcore",
            "b 0x8028ba4",
            "ldr r3, [0x08028ecc]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "beq 0x8028b60",
            "ldr r1, [0x08028ed0]",
            "mvn r6, 0",
            "ldr r0, [0x08028ee8]",
            "bl printk",
            "b 0x8028968",
            "ldr r0, [r4, 0x20]",
            "mov r1, r6",
            "bl si_core_disable",
            "ldr r0, [r4, 0x20]",
            "movw r1, 0x80e",
            "mov r2, r6",
            "bl si_setcore",
            "cmp r0, 0",
            "beq 0x8028d90",
            "mov r2, r6",
            "ldr r0, [r4, 0x20]",
            "mov r1, r6",
            "bl si_core_reset",
            "ldr r2, [r4, 0x3c]",
            "cmp r2, 0",
            "beq 0x8028968",
            "add r3, sp, 0x10",
            "mov ip, 4",
            "str r6, [r3, -4]!",
            "mov r0, r4",
            "mov r1, 1",
            "sub r2, r2, 4",
            "str ip, [sp]",
            "bl fcn.08027c78",
            "cmp r0, 0",
            "mvnlt r6, 0",
            "movge r6, 0",
            "b 0x8028968",
            "ldr r3, [0x08028ecc]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "beq 0x8028b60",
            "ldr r1, [0x08028ed0]",
            "mvn r6, 0",
            "ldr r0, [0x08028eec]",
            "bl printk",
            "b 0x8028968",
            "ldr r3, [0x08028ecc]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "beq 0x8028b60",
            "ldr r1, [0x08028ed0]",
            "mvn r6, 0",
            "ldr r0, [0x08028ef0]",
            "bl printk",
            "b 0x8028968",
            "movw r1, 0x80e",
            "mov r2, r5",
            "bl si_setcore",
            "cmp r0, 0",
            "beq 0x8028d90",
            "ldr r0, [r4, 0x20]",
            "bl si_iscoreup",
            "cmp r0, 0",
            "bne 0x8028e20",
            "ldr r3, [0x08028ecc]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "beq 0x8028b60",
            "ldr r1, [0x08028ed0]",
            "mvn r6, 0",
            "ldr r0, [0x08028ef4]",
            "bl printk",
            "b 0x8028968",
            "mov r2, r5",
            "ldr r0, [r4, 0x20]",
            "movw r1, 0x80d",
            "bl si_setcore",
            "subs r2, r0, 0",
            "beq 0x8028e80",
            "ldr r0, [r4, 0x20]",
            "movw r1, 0x825",
            "mov r2, 0",
            "bl si_setcore",
            "subs r6, r0, 0",
            "movne r6, 0",
            "bne 0x8028b28",
            "ldr r0, [r4, 0x20]",
            "movw r1, 0x82a",
            "mov r2, r6",
            "bl si_setcore",
            "cmp r0, 0",
            "bne 0x8028b28",
            "b 0x8028ca0",
            "ldr r1, [0x08028ed0]",
            "ldr r0, [0x08028ef8]",
            "bl printk",
            "b 0x8028968",
            "ldr r0, [r4, 0x20]",
            "movw r1, 0x829",
            "bl si_setcore",
            "cmp r0, 0",
            "bne 0x8028e38",
            "ldr r3, [0x08028ecc]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "beq 0x8028b60",
            "ldr r1, [0x08028ed0]",
            "mvn r6, 0",
            "ldr r0, [0x08028efc]",
            "bl printk",
            "b 0x8028968",
            "ldr r1, [0x08028ed0]",
            "mvn r6, 0",
            "ldr r0, [0x08028f00]",
            "bl printk",
            "b 0x8028968"
        ]
    },
    "sym.dhd_prot_update_txflowring": {
        "function_address": "0x08025444",
        "instructions": [
            "movw r3, 0x1911",
            "push {r4, r5, r6, lr}",
            "ldrb r3, [r0, r3]",
            "sub sp, sp, 8",
            "mov r4, r0",
            "mov r5, r1",
            "mov r6, r2",
            "cmp r3, 0",
            "bne 0x8025490",
            "ldr r3, [0x080254c4]",
            "ldr r3, [r3]",
            "tst r3, 2",
            "bne 0x80254a4",
            "ldr r0, [r4, 4]",
            "mov r1, r5",
            "mov r2, 1",
            "add sp, sp, 8",
            "pop {r4, r5, r6, lr}",
            "b dhd_bus_schedule_queue",
            "mov r1, 7",
            "ldrh r2, [r2, 2]",
            "bl sym.dhd_prot_dma_indx_get",
            "strh r0, [r6, 4]",
            "b 0x8025468",
            "ldrh ip, [r6, 4]",
            "mov r2, r5",
            "ldrh r1, [r6, 2]",
            "ldrh r3, [r6, 6]",
            "ldr r0, [0x080254c8]",
            "str ip, [sp]",
            "bl printk",
            "b 0x8025478"
        ]
    },
    "sym.sb_flag": {
        "function_address": "0x0800fdfc",
        "instructions": [
            "push {r3, lr}",
            "movw r3, 0x4884",
            "ldr r1, [r0, r3]",
            "add r1, r1, 0xf10",
            "add r1, r1, 8",
            "bl fcn.0800f9b4",
            "and r0, r0, 0x3f",
            "pop {r3, pc}"
        ]
    },
    "sym.initvars_srom_pci": {
        "function_address": "0x08009ea4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x284",
            "mov r5, r1",
            "str r2, [sp, 0x18]",
            "mov r4, r0",
            "str r3, [sp, 0x1c]",
            "bl si_osh",
            "mov r1, 0x800",
            "mov r6, r0",
            "bl osl_malloc",
            "subs r7, r0, 0",
            "mvneq r4, 1",
            "beq 0x800a024",
            "mov r1, r5",
            "mov r0, r4",
            "bl srom_offset",
            "mov r5, r0",
            "mov r0, r4",
            "bl si_is_sprom_available",
            "cmp r0, 0",
            "bne 0x800a030",
            "add r5, r4, 0x850",
            "ldr r0, [0x0800a518]",
            "add r5, r5, 5",
            "bl printk",
            "mov r0, r4",
            "ldr r1, [r4, 0x3c]",
            "mov r2, r5",
            "mov r3, 0x4000",
            "bl init_sromvars_map",
            "cmp r0, 0",
            "bne 0x800a148",
            "cmp r5, 0",
            "str r5, [sp, 0x27c]",
            "beq 0x800a4b4",
            "ldrb r8, [r4, 0x855]",
            "cmp r8, 0",
            "beq 0x8009f88",
            "mov sl, r5",
            "mov r8, r0",
            "movw sb, 0x3ffb",
            "mov r0, sl",
            "ldr r1, [0x0800a51c]",
            "bl strcmp",
            "cmp r0, 0",
            "mov r0, sl",
            "beq 0x8009f88",
            "bl strlen",
            "add r0, r0, 1",
            "add r8, r8, r0",
            "cmp r8, sb",
            "bhi 0x8009f90",
            "adds sl, sl, r0",
            "beq 0x8009f88",
            "ldrb r3, [sl]",
            "cmp r3, 0",
            "bne 0x8009f48",
            "add r3, r8, 4",
            "b 0x8009f94",
            "mov r3, 0",
            "ldr r2, [0x0800a520]",
            "add r8, r3, 0x850",
            "add r8, r4, r8",
            "add r4, r4, r3",
            "add r8, r8, 6",
            "str r3, [r2, 0x20c]",
            "mov r3, 0",
            "str r8, [sp, 0x27c]",
            "strb r3, [r4, 0x855]",
            "rsb r8, r5, r8",
            "cmp r8, 1",
            "ble 0x800a12c",
            "mov r0, r6",
            "mov r1, r8",
            "bl osl_malloc",
            "subs sl, r0, 0",
            "mvneq r4, 0x1a",
            "beq 0x8009ffc",
            "mov r2, r8",
            "mov r1, r5",
            "bl memcpy",
            "ldr r2, [sp, 0x18]",
            "mov r4, 0",
            "ldr r3, [sp, 0x1c]",
            "str sl, [r2]",
            "str r8, [r3]",
            "cmp r5, 0",
            "beq 0x800a014",
            "mov r0, r6",
            "mov r1, r5",
            "mov r2, 0x4000",
            "bl osl_mfree",
            "mov r0, r6",
            "mov r1, r7",
            "mov r2, 0x800",
            "bl osl_mfree",
            "mov r0, r4",
            "add sp, sp, 0x284",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "movw ip, 0x24e",
            "mov r8, 1",
            "mov r0, r6",
            "mov r1, r4",
            "mov r2, r5",
            "mov r3, 0",
            "str r7, [sp]",
            "str ip, [sp, 4]",
            "str r8, [sp, 8]",
            "bl sprom_read_pci",
            "cmp r0, 0",
            "bne 0x800a078",
            "ldr r0, [0x0800a524]",
            "bl printk",
            "mov r0, r7",
            "mov r1, 0x800",
            "bl __memzero",
            "b 0x8009ef8",
            "mov ip, 0x200",
            "mov r0, r6",
            "mov r1, r4",
            "mov r2, r5",
            "mov r3, 0",
            "str r7, [sp]",
            "str ip, [sp, 4]",
            "str r8, [sp, 8]",
            "bl sprom_read_pci",
            "cmp r0, 0",
            "beq 0x800a060",
            "mov ip, 0xea",
            "mov r0, r6",
            "mov r1, r4",
            "mov r2, r5",
            "mov r3, 0",
            "str r7, [sp]",
            "str ip, [sp, 4]",
            "str r8, [sp, 8]",
            "bl sprom_read_pci",
            "cmp r0, 0",
            "beq 0x800a060",
            "mov ip, 0xdc",
            "mov r0, r6",
            "mov r1, r4",
            "mov r2, r5",
            "mov r3, 0",
            "str r7, [sp]",
            "str ip, [sp, 4]",
            "str r8, [sp, 8]",
            "bl sprom_read_pci",
            "cmp r0, 0",
            "beq 0x800a060",
            "mov ip, 0x40",
            "mov r0, r6",
            "mov r1, r4",
            "mov r2, r5",
            "mov r3, 0",
            "str r7, [sp]",
            "str ip, [sp, 4]",
            "str r8, [sp, 8]",
            "bl sprom_read_pci",
            "cmp r0, 0",
            "bne 0x8009ef8",
            "b 0x800a060",
            "ldr lr, [sp, 0x18]",
            "mov r3, 0",
            "ldr r2, [sp, 0x1c]",
            "mov r4, r3",
            "str r3, [lr]",
            "str r3, [r2]",
            "b 0x8009ffc",
            "add sl, r4, 0x55",
            "mov r3, 0x800",
            "mov r2, sl",
            "ldr r1, [r4, 0x3c]",
            "mov r0, r4",
            "bl init_srom_sw_map",
            "mov r2, 0",
            "mov r3, 0x800",
            "mov r0, sl",
            "mov r1, r7",
            "bl read_sromfile",
            "ldrh r2, [r7, 0x40]",
            "movw r3, 0x5372",
            "ldrb r8, [r7, 0x7e]",
            "cmp r2, r3",
            "beq 0x800a468",
            "ldr r3, [r4, 8]",
            "cmp r3, 0x820",
            "beq 0x800a45c",
            "ldr r2, [r4, 4]",
            "cmp r2, 0",
            "bne 0x800a1a8",
            "cmp r3, 0x700",
            "beq 0x800a468",
            "movw r2, 0x804",
            "cmp r3, r2",
            "beq 0x800a508",
            "movw r2, 0x83c",
            "cmp r3, r2",
            "beq 0x800a468",
            "mov r1, 1",
            "movw r2, 0x24e",
            "add r0, sp, 0x22",
            "bl memset",
            "mov r0, r4",
            "mov r1, r7",
            "add r2, sp, 0x22",
            "bl sprom_update_params",
            "cmp r8, 0xd",
            "movweq r5, 0x24e",
            "beq 0x800a220",
            "cmp r8, 0xc",
            "moveq r5, 0x200",
            "beq 0x800a220",
            "cmp r8, 0xb",
            "moveq r5, 0xea",
            "beq 0x800a220",
            "cmp r8, 4",
            "cmpne r8, 8",
            "moveq r5, 0xdc",
            "beq 0x800a220",
            "cmp r8, 9",
            "movne r5, 0x3f",
            "moveq r5, 0xdc",
            "mov r1, r8",
            "mov r2, r5",
            "ldr r0, [0x0800a528]",
            "mov sb, r7",
            "bl printk",
            "ldr r0, [0x0800a52c]",
            "mov sl, 0",
            "bl printk",
            "tst sl, 7",
            "bne 0x800a254",
            "mov r1, sl",
            "ldr r0, [0x0800a530]",
            "bl printk",
            "ldr r0, [0x0800a534]",
            "add sl, sl, 1",
            "ldrh r1, [sb], 2",
            "bl printk",
            "cmp r5, sl",
            "bhi 0x800a240",
            "ldr r0, [0x0800a538]",
            "bl printk",
            "cmp r8, 0",
            "movne sb, 0",
            "beq 0x800a3e0",
            "mov fp, 1",
            "movw r3, 0x3f3e",
            "lsl r2, fp, r8",
            "and r3, r2, r3",
            "cmp r3, 0",
            "bne 0x800a2a0",
            "mvn r4, 1",
            "b 0x800a014",
            "mov r0, r6",
            "mov r1, 0x4000",
            "bl osl_malloc",
            "cmp r0, 0",
            "mov r5, r0",
            "str r0, [sp, 0x27c]",
            "beq 0x800a298",
            "cmp sb, 0",
            "bne 0x800a40c",
            "add sl, sp, 0x280",
            "mov ip, 0x4000",
            "str r5, [sl, -0x10]!",
            "mov r1, fp",
            "movw r2, 0x24e",
            "add r0, sp, 0x22",
            "str ip, [sp, 0x278]",
            "str ip, [sp, 0x14]",
            "str r5, [sp, 0x274]",
            "bl memset",
            "mov r0, r8",
            "add lr, sp, 0x22",
            "mov r2, sb",
            "mov r3, sl",
            "mov r1, r7",
            "str lr, [sp]",
            "bl _initvars_srom_pci",
            "ldr ip, [sp, 0x14]",
            "mov r0, r6",
            "mov r1, ip",
            "bl osl_malloc",
            "subs r8, r0, 0",
            "ldr ip, [sp, 0x14]",
            "beq 0x800a44c",
            "mov r1, ip",
            "bl __memzero",
            "mov r0, r4",
            "mov r1, r8",
            "bl init_nvramvars_cmn",
            "cmp r0, 0",
            "moveq fp, sb",
            "beq 0x800a398",
            "mov r1, 0x4000",
            "mov r0, r8",
            "bl __memzero",
            "mov r0, r4",
            "ldr r1, [r4, 0x3c]",
            "mov r2, r8",
            "bl init_nvramvars_chip",
            "subs sb, r0, 0",
            "moveq r4, sb",
            "beq 0x800a3c0",
            "mov r0, r6",
            "mov r1, r8",
            "mov r2, 0x4000",
            "bl osl_mfree",
            "ldr r8, [sp, 0x274]",
            "mov r3, 0",
            "strb r3, [r8], 1",
            "str r8, [sp, 0x27c]",
            "b 0x8009fb8",
            "bl fcn.08008f4c",
            "add sb, sb, r0",
            "mov r0, r8",
            "bl fcn.08008cec",
            "cmp fp, r0",
            "add r1, r8, sb",
            "mov r0, sl",
            "add fp, fp, 1",
            "blo 0x800a390",
            "b 0x800a344",
            "bl fcn.08008f4c",
            "add sb, sb, r0",
            "mov r0, r8",
            "bl fcn.08008cec",
            "cmp r4, r0",
            "add r1, r8, sb",
            "mov r0, sl",
            "add r4, r4, 1",
            "blo 0x800a3b8",
            "b 0x800a36c",
            "mov r0, r4",
            "ldr r1, [0x0800a53c]",
            "bl si_getdevpathvar",
            "cmp r0, 0",
            "beq 0x800a430",
            "mov r1, r8",
            "mov r2, r8",
            "bl bcm_strtoul",
            "mov sb, 1",
            "uxtb r8, r0",
            "b 0x800a280",
            "mov r0, r4",
            "mov r1, r6",
            "add r2, sp, 0x27c",
            "mov r3, 0x4000",
            "bl fcn.08008d54",
            "subs r4, r0, 0",
            "ldreq r8, [sp, 0x27c]",
            "beq 0x8009fb8",
            "b 0x800a004",
            "mov r0, r4",
            "ldr r1, [0x0800a53c]",
            "bl si_getnvramflvar",
            "cmp r0, 0",
            "movne r4, 0",
            "mvneq r4, 0",
            "b 0x800a014",
            "ldr r1, [0x0800a540]",
            "ldr r0, [0x0800a544]",
            "bl printk",
            "b 0x800a37c",
            "ldr r2, [r4, 0xc]",
            "cmp r2, 5",
            "bls 0x800a194",
            "ldrh r3, [r7, 0x80]",
            "movw r2, 0x4d55",
            "cmp r3, r2",
            "beq 0x800a4ec",
            "movw r2, 0x634",
            "cmp r3, r2",
            "beq 0x800a4d0",
            "movw r5, 0x1b6",
            "movw r3, 0x5372",
            "ldrh r2, [r7, r5]",
            "mov r0, sl",
            "mov r1, r7",
            "cmp r2, r3",
            "mov r2, 0",
            "beq 0x800a4c0",
            "mov r3, 0x1b8",
            "bl read_sromfile",
            "ldrb r8, [r7, r5]",
            "b 0x800a1c0",
            "mov r8, r5",
            "add r3, r8, 4",
            "b 0x8009f94",
            "mov r3, 0x1cc",
            "ldrb r8, [r7, 0x1ca]",
            "bl read_sromfile",
            "b 0x800a1c0",
            "mov r0, sl",
            "mov r1, r7",
            "mov r2, 0",
            "mov r3, 0x1d4",
            "ldrb r8, [r7, 0x1d2]",
            "bl read_sromfile",
            "b 0x800a1c0",
            "mov r0, sl",
            "mov r1, r7",
            "mov r2, 0",
            "movw r3, 0x49c",
            "ldrb r8, [r7, 0x49a]",
            "bl read_sromfile",
            "b 0x800a1c0",
            "ldr r3, [r4, 0xc]",
            "cmp r3, 0xd",
            "bhi 0x800a468",
            "b 0x800a1c0"
        ]
    },
    "fcn.08008cec": {
        "function_address": "0x08008cec",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "subs r4, r0, 0",
            "moveq r5, r4",
            "beq 0x8008d48",
            "ldrb r5, [r4]",
            "cmp r5, 0",
            "beq 0x8008d48",
            "mov r5, 0",
            "b 0x8008d30",
            "bl strlen",
            "add r0, r0, 1",
            "add r5, r5, 1",
            "adds r4, r4, r0",
            "beq 0x8008d48",
            "ldrb r3, [r4]",
            "cmp r3, 0",
            "beq 0x8008d48",
            "mov r0, r4",
            "ldr r1, [0x08008d50]",
            "bl strcmp",
            "cmp r0, 0",
            "mov r0, r4",
            "bne strlen",
            "mov r0, r5",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.08008d54": {
        "function_address": "0x08008d54",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x44",
            "str r1, [sp]",
            "mov ip, 0",
            "mov r7, r0",
            "mov r1, 0x10000",
            "ldr r0, [sp]",
            "mov r4, r3",
            "str r2, [sp, 0xc]",
            "ldr r5, [r2]",
            "str ip, [sp, 0x30]",
            "str ip, [sp, 0x34]",
            "str ip, [sp, 0x38]",
            "str ip, [sp, 0x3c]",
            "bl osl_malloc",
            "subs r2, r0, 0",
            "str r2, [sp, 8]",
            "mvneq r2, 0x1a",
            "streq r2, [sp, 4]",
            "beq 0x8008dc8",
            "mov r1, 0x10000",
            "bl nvram_getall",
            "cmp r0, 0",
            "str r0, [sp, 4]",
            "beq 0x8008dd4",
            "ldr r0, [sp]",
            "mov r2, 0x10000",
            "ldr r1, [sp, 8]",
            "bl osl_mfree",
            "ldr r0, [sp, 4]",
            "add sp, sp, 0x44",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "mov r2, 0x10",
            "mov r0, r7",
            "add r1, sp, r2",
            "bl si_devpath",
            "add r0, sp, 0x10",
            "bl strlen",
            "ldr r3, [r7, 4]",
            "mov r6, r0",
            "cmp r3, 1",
            "ldrne sb, [sp, 4]",
            "beq 0x8008f28",
            "mov r2, 0x10",
            "ldr r3, [0x08008f48]",
            "add r1, sp, 0x30",
            "mov r0, r7",
            "bl si_coded_devpathvar",
            "add r0, sp, 0x30",
            "bl strlen",
            "cmp r0, 5",
            "addgt r2, sp, 0x40",
            "subgt fp, r0, 5",
            "addgt r3, r2, fp",
            "movgt r2, 0",
            "strbgt r2, [r3, -0x10]",
            "movle fp, 0",
            "ldr r2, [sp, 8]",
            "ldrb r3, [r2]",
            "cmp r3, 0",
            "beq 0x8008ef4",
            "mov r7, r2",
            "mov r0, r7",
            "bl strlen",
            "add r1, sp, 0x10",
            "mov r8, r0",
            "mov r2, r6",
            "mov r0, r7",
            "bl strncmp",
            "cmp r0, 0",
            "moveq sl, r6",
            "beq 0x8008ebc",
            "cmp sb, 0",
            "beq 0x8008e98",
            "mov r0, r7",
            "add r1, sp, 0x20",
            "mov r2, sb",
            "mov sl, sb",
            "bl strncmp",
            "cmp r0, 0",
            "beq 0x8008ebc",
            "cmp fp, 0",
            "beq 0x8008f14",
            "mov r0, r7",
            "add r1, sp, 0x30",
            "mov r2, fp",
            "mov sl, fp",
            "bl strncmp",
            "cmp r0, 0",
            "bne 0x8008f14",
            "add r8, r8, 1",
            "rsb r2, sl, r8",
            "cmp r2, r4",
            "bhi 0x8008f1c",
            "mov r0, r5",
            "add r1, r7, sl",
            "rsb r4, r2, r4",
            "add r5, r5, r2",
            "bl strncpy",
            "adds r7, r7, r8",
            "beq 0x8008ef4",
            "ldrb r3, [r7]",
            "cmp r3, 0",
            "bne 0x8008e4c",
            "cmp r4, 0",
            "mvneq r3, 0xd",
            "streq r3, [sp, 4]",
            "movne r3, 0",
            "strbne r3, [r5], 1",
            "ldrne r3, [sp, 0xc]",
            "strne r5, [r3]",
            "b 0x8008db8",
            "add r8, r8, 1",
            "b 0x8008ee0",
            "mvn r2, 0xd",
            "str r2, [sp, 4]",
            "b 0x8008db8",
            "mov r2, 0x10",
            "add r1, sp, 0x20",
            "mov r0, r7",
            "bl si_devpath_pcie",
            "add r0, sp, 0x20",
            "bl strlen",
            "mov sb, r0",
            "b 0x8008e00"
        ]
    },
    "sym.dhd_runner_flowmgr_init": {
        "function_address": "0x08004aa8",
        "instructions": [
            "mov r3, r1",
            "sub r1, r1, 2",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "rsb r1, r2, r1",
            "ldr ip, [r0, 0x78]",
            "cmp r1, 0",
            "mov r5, r0",
            "add lr, r1, 3",
            "ldr sb, [r5], 0x90",
            "movlt r1, lr",
            "str r2, [r0, 0x94]",
            "asr r1, r1, 2",
            "ldr r2, [reloc.dhd_runner_flowring_select_policy]",
            "cmp ip, 0",
            "sub sp, sp, 0xa4",
            "mov r4, r0",
            "str r3, [r0, 0x90]",
            "str r1, [r0, 0x98]",
            "str r2, [r0, 0x108]",
            "str r5, [sp, 0x30]",
            "str r0, [r4, 0x10c]",
            "beq 0x8005018",
            "movw r3, 0x1974",
            "mov r1, 8",
            "ldr r2, [0x08005144]",
            "add r0, sp, 0x90",
            "ldr r3, [sb, r3]",
            "bl snprintf",
            "mov r3, 0",
            "add r0, sp, 0x90",
            "add r1, r4, 0x9c",
            "add r2, r4, 0xa0",
            "strb r3, [sp, 0x94]",
            "bl BcmMemReserveGetByName",
            "cmp r0, 0",
            "bne 0x8004d50",
            "ldr r1, [r4, 0xa0]",
            "ldr r0, [r4, 0x9c]",
            "cmp r1, 0",
            "bne __memzero",
            "ldr r3, [0x08005148]",
            "str r3, [sp, 0x34]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "bne 0x800511c",
            "sub r0, r0, 0x3c000",
            "movw r3, 0x1974",
            "str r0, [r4, 0x24]",
            "ldr r7, [sb, r3]",
            "cmp r7, 0",
            "beq 0x8004d80",
            "ldr sl, [0x0800514c]",
            "add r8, sp, 0x3c",
            "mov r0, r7",
            "mov r1, 0",
            "mov r2, r8",
            "mov r3, 0x40",
            "bl fcn.0800263c",
            "cmp r0, 0",
            "moveq ip, 3",
            "streq ip, [sp, 0x98]",
            "bne 0x8004fc8",
            "movw lr, 0",
            "mov fp, 0x2c",
            "movt lr, 0",
            "mov r2, ip",
            "mla ip, fp, ip, lr",
            "ldr r1, [0x08005150]",
            "ldr r0, [0x08005154]",
            "mov r8, r5",
            "mov r7, 0",
            "add r6, sp, 0x7c",
            "ldr lr, [ip, 0x104]",
            "ldr r3, [ip, 0xf0]",
            "str lr, [sp]",
            "ldr lr, [ip, 0xf4]",
            "str lr, [sp, 4]",
            "ldr lr, [ip, 0x108]",
            "str lr, [sp, 8]",
            "ldr lr, [ip, 0xf8]",
            "str lr, [sp, 0xc]",
            "ldr lr, [ip, 0x10c]",
            "str lr, [sp, 0x10]",
            "ldr lr, [ip, 0xfc]",
            "str lr, [sp, 0x14]",
            "ldr lr, [ip, 0x110]",
            "str lr, [sp, 0x18]",
            "ldr lr, [ip, 0x100]",
            "str lr, [sp, 0x1c]",
            "ldr ip, [ip, 0x114]",
            "str ip, [sp, 0x20]",
            "bl printk",
            "ldr r3, [sp, 0x98]",
            "mov r0, sb",
            "mla sl, fp, r3, sl",
            "str sl, [r4, 0xb0]",
            "mov sl, r5",
            "bl fcn.0800272c",
            "ldr r1, [r4, 0x90]",
            "mov r2, 2",
            "str r0, [r4, 0xac]",
            "ldr r0, [sb]",
            "sub r1, r1, 2",
            "uxth r1, r1",
            "bl id16_map_init",
            "str r0, [r4, 0xb4]",
            "ldr r1, [r4, 0x98]",
            "rsb r5, r4, r8",
            "movw r2, 0xffff",
            "add r5, sl, r5",
            "ldr r0, [sb]",
            "add r8, r8, 4",
            "str r1, [r6, r7]",
            "add r7, r7, 4",
            "uxth r1, r1",
            "bl id16_map_init",
            "movw r2, 0xffff",
            "str r0, [r5, -0x68]",
            "ldr r0, [sb]",
            "ldrh r1, [r4, 0x98]",
            "bl id16_map_init",
            "cmp r7, 0x10",
            "str r0, [r5, -0x54]",
            "bne 0x8004c50",
            "ldr r1, [r4, 0x94]",
            "movw r2, 0xffff",
            "ldr r0, [sb]",
            "mov r5, sl",
            "mov sl, 0",
            "str r1, [sp, 0x8c]",
            "mov r8, sl",
            "uxth r1, r1",
            "bl id16_map_init",
            "ldrh r1, [r4, 0x94]",
            "movw r2, 0xffff",
            "str r0, [r4, 0xc8]",
            "ldr r0, [sb]",
            "bl id16_map_init",
            "ldr r3, [r4, 0xb0]",
            "str r0, [r4, 0xdc]",
            "add r2, r3, r8, lsl 2",
            "ldr r2, [r2, 4]",
            "cmp r2, 0",
            "bne 0x8004dd8",
            "ldr r7, [r6, sl]",
            "cmp r7, 0",
            "bne 0x8004d08",
            "b 0x8004dd8",
            "sub r7, r7, 1",
            "cmp r7, 0",
            "str r7, [r6, sl]",
            "beq 0x8004dd4",
            "mov r0, r5",
            "mov r1, r8",
            "mov r2, 1",
            "bl fcn.08003100",
            "cmn r0, 1",
            "bne 0x8004cf8",
            "ldr r2, [sp, 0x34]",
            "ldr r3, [r2]",
            "tst r3, 1",
            "bne .LANCHOR0",
            "mov r2, 0",
            "mov r0, r4",
            "mov r1, r5",
            "str r2, [sp, 0x30]",
            "bl dhd_runner_flowmgr_fini",
            "ldr r0, [sp, 0x30]",
            "add sp, sp, 0xa4",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r2, [0x08005148]",
            "ldr r3, [r2]",
            "str r2, [sp, 0x34]",
            "tst r3, 4",
            "bne 0x8005110",
            "mov r3, 0",
            "str r3, [r4, 0x9c]",
            "str r3, [r4, 0xa0]",
            "movw r3, 0x1974",
            "ldr r7, [sb, r3]",
            "cmp r7, 0",
            "bne 0x8004b74",
            "ldr sl, [0x0800514c]",
            "mov fp, sb",
            "add r8, sp, 0x3c",
            "mov sb, r4",
            "mov r6, r5",
            "mov r0, r7",
            "mov r1, 0",
            "mov r2, r8",
            "mov r3, 0x40",
            "bl fcn.0800263c",
            "cmp r0, 0",
            "bne 0x8004f30",
            "add r7, r7, 1",
            "cmp r7, 3",
            "bne 0x8004d94",
            "movw r3, 0x1974",
            "mov r4, sb",
            "mov r5, r6",
            "mov sb, fp",
            "ldr r7, [fp, r3]",
            "b 0x8004b7c",
            "ldr r3, [r4, 0xb0]",
            "add r8, r8, 1",
            "add sl, sl, 4",
            "cmp r8, 5",
            "bne 0x8004cd8",
            "mov sl, 0",
            "mov r8, sl",
            "mov fp, sl",
            "add r3, r3, r8, lsl 2",
            "ldr r3, [r3, 4]",
            "cmn r3, 1",
            "beq 0x8004e30",
            "ldr r3, [r6, sl]",
            "add fp, fp, r3",
            "add r8, r8, 1",
            "add sl, sl, 4",
            "cmp r8, 4",
            "beq 0x8004ea4",
            "ldr r3, [r4, 0xb0]",
            "add r3, r3, r8, lsl 2",
            "ldr r3, [r3, 4]",
            "cmn r3, 1",
            "bne 0x8004e04",
            "ldr r7, [r6, sl]",
            "cmp r7, 0",
            "bne 0x8004e50",
            "b 0x8004e0c",
            "sub r7, r7, 1",
            "cmp r7, 0",
            "str r7, [r6, sl]",
            "beq 0x8004e0c",
            "mov r0, r5",
            "mov r1, r8",
            "mov r2, 0",
            "bl fcn.08003100",
            "cmn r0, 1",
            "bne 0x8004e40",
            "ldr lr, [sp, 0x34]",
            "ldr r3, [lr]",
            "tst r3, 1",
            "movne r1, r7",
            "beq 0x8004d30",
            "movw r3, 0",
            "ldr r0, [0x08005158]",
            "movt r3, 0",
            "ldr r2, [r3, r8, lsl 2]",
            "bl printk",
            "b 0x8004d30",
            "add r8, r8, 1",
            "add sl, sl, 4",
            "cmp r8, 4",
            "bne 0x8004eb4",
            "cmp fp, 0",
            "beq 0x800506c",
            "mov sl, 0",
            "mov r8, sl",
            "ldr r3, [r4, 0xb0]",
            "add r3, r3, r8, lsl 2",
            "ldr r7, [r3, 4]",
            "add r3, r7, 1",
            "cmp r3, 1",
            "bls 0x8004e94",
            "ldr r3, [r6, sl]",
            "cmp r3, r7",
            "movlt r7, r3",
            "movge r7, r7",
            "cmp r7, 0",
            "rsb r3, r7, r3",
            "str r3, [sp, 0x2c]",
            "rsb fp, r7, fp",
            "str r3, [r6, sl]",
            "bne 0x8004f00",
            "b 0x8004e94",
            "subs r7, r7, 1",
            "beq 0x8004e94",
            "mov r0, r5",
            "mov r1, r8",
            "mov r2, 0",
            "bl fcn.08003100",
            "cmn r0, 1",
            "bne 0x8004ef8",
            "ldr lr, [sp, 0x34]",
            "ldr r3, [lr]",
            "tst r3, 1",
            "beq 0x8004d30",
            "ldr r1, [sp, 0x2c]",
            "b .LANCHOR0",
            "ldr r1, [0x0800515c]",
            "mov r2, 0",
            "add r0, sp, 0x9c",
            "str r8, [sp, 0x9c]",
            "bl bcmstrtok",
            "ldr r1, [0x08005160]",
            "add r2, sp, 0x98",
            "mov r0, r8",
            "bl sscanf",
            "add r0, sp, 0x9c",
            "ldr r1, [0x0800515c]",
            "mov r2, 0",
            "bl bcmstrtok",
            "cmp r0, 0",
            "beq 0x8004db0",
            "add r5, r7, r7, lsl 2",
            "mov r4, 0",
            "add r5, r7, r5, lsl 1",
            "add r3, r5, r4",
            "ldr r1, [0x08005164]",
            "add r2, sl, r3, lsl 2",
            "add r3, r3, 6",
            "add r3, sl, r3, lsl 2",
            "add r4, r4, 1",
            "add r2, r2, 4",
            "bl sscanf",
            "add r0, sp, 0x9c",
            "ldr r1, [0x0800515c]",
            "mov r2, 0",
            "bl bcmstrtok",
            "cmp r4, 4",
            "movhi r3, 0",
            "movls r3, 1",
            "cmp r0, 0",
            "moveq r3, 0",
            "cmp r3, 0",
            "bne 0x8004f78",
            "b 0x8004db0",
            "add r0, sp, 0xa0",
            "ldr r1, [0x0800515c]",
            "mov r2, 0",
            "str r8, [r0, -4]!",
            "bl bcmstrtok",
            "mov r0, r8",
            "ldr r1, [0x08005160]",
            "add r2, sp, 0x98",
            "bl sscanf",
            "ldr ip, [sp, 0x98]",
            "cmp ip, 7",
            "ble .LANCHOR0",
            "mov r1, ip",
            "ldr r0, [0x08005168]",
            "mov r2, r7",
            "bl printk",
            "mov r3, 3",
            "mov ip, r3",
            "str r3, [sp, 0x98]",
            "b .LANCHOR0",
            "lsl r6, r3, 4",
            "add r1, r0, 0x78",
            "mov r2, 1",
            "add r3, r6, r3, lsl 2",
            "add r3, r3, 0x1f",
            "bic r3, r3, 0x1f",
            "str r3, [r0, 0x7c]",
            "bl fcn.08002b8c",
            "cmp r0, 0",
            "str r0, [r4, 0x78]",
            "beq 0x80050d0",
            "ldr r3, [r4, 0x80]",
            "add r6, r0, r6",
            "str r0, [r4, 0x50]",
            "str r0, [r4, 0xa4]",
            "str r3, [r4, 0x54]",
            "str r6, [r4, 0xa8]",
            "b 0x8004b00",
            "bl __memzero",
            "ldr r0, [r4, 0x9c]",
            "b 0x8004b48",
            "ldr r6, [sp, 0x8c]",
            "cmp r6, 0",
            "bne 0x8005084",
            "b 0x80050bc",
            "subs r6, r6, 1",
            "beq 0x80050bc",
            "mov r0, r5",
            "mov r1, 4",
            "mov r2, 0",
            "bl fcn.08003100",
            "cmn r0, 1",
            "bne 0x800507c",
            "ldr lr, [sp, 0x34]",
            "ldr r3, [lr]",
            "tst r3, 1",
            "beq 0x8004d30",
            "mov r1, r6",
            "ldr r0, [0x0800516c]",
            "bl printk",
            "b 0x8004d30",
            "ldr r0, [sb]",
            "ldr r1, [r4, 0xb4]",
            "bl id16_map_fini",
            "str r0, [r4, 0xb4]",
            "b 0x8004d44",
            "ldr r3, [0x08005148]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "beq 0x8004d30",
            "ldr r1, [0x08005170]",
            "ldr r2, [r4, 0x7c]",
            "ldr r0, [0x08005174]",
            "bl printk",
            "b 0x8004d30",
            "movw r3, 0",
            "mov r1, r7",
            "movt r3, 0",
            "ldr r0, [0x08005178]",
            "ldr r2, [r3, r8, lsl 2]",
            "bl printk",
            "b 0x8004d30",
            "ldr r0, [0x0800517c]",
            "bl printk",
            "b 0x8004d64",
            "ldr ip, [r4, 0xa0]",
            "mov r3, r0",
            "add r2, sp, 0x90",
            "ldr r0, [0x08005180]",
            "ldr r1, [0x08005170]",
            "str ip, [sp]",
            "bl printk",
            "ldr r0, [r4, 0x9c]",
            "b 0x8004b5c"
        ]
    },
    "fcn.0800272c": {
        "function_address": "0x0800272c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "movw r8, 0x1974",
            "ldr sb, [r0, r8]",
            "sub sp, sp, 0x33c",
            "add r6, sp, 0x10",
            "mov r7, r0",
            "mov r1, 0x300",
            "mov r0, r6",
            "ldr fp, [0x08002a6c]",
            "add sb, sb, sb, lsl 1",
            "bl __memzero",
            "ldr r0, [r7, r8]",
            "mov r1, 1",
            "mov r2, r6",
            "mov r3, 0x300",
            "lsl sb, sb, 4",
            "add sl, fp, 0x14",
            "bl fcn.0800263c",
            "cmp r0, 0",
            "add r4, sl, sb",
            "beq 0x8002818",
            "add r5, sp, 0x338",
            "ldr r1, [0x08002a70]",
            "str r6, [r5, -0xc]!",
            "mov r2, 0",
            "mov r0, r5",
            "bl bcmstrtok",
            "ldr r1, [0x08002a74]",
            "mov r0, r6",
            "add r2, sp, 0x328",
            "bl sscanf",
            "ldr r1, [sp, 0x328]",
            "cmp r1, 5",
            "bgt 0x8002a50",
            "str r1, [sl, sb]",
            "cmp r1, 5",
            "ldrls pc, [pc, r1, lsl 2]",
            "b 0x80029d8",
            "mov r3, 0",
            "mov r0, r4",
            "mov r1, r6",
            "mov r2, 0x300",
            "strb r3, [sp, 0x10]",
            "bl fcn.08001e40",
            "ldr r1, [0x08002a78]",
            "mov r3, r6",
            "ldr r2, [sl, sb]",
            "ldr r0, [0x08002a7c]",
            "bl printk",
            "mov r0, r4",
            "add sp, sp, 0x33c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r3, [0x08002a88]",
            "ldr r4, [r3]",
            "ands r4, r4, 1",
            "beq 0x8002844",
            "ldr r0, [0x08002a8c]",
            "mov r4, 0",
            "bl printk",
            "b 0x8002844",
            "ldr r3, [r7, r8]",
            "mov r2, 0x30",
            "ldr r0, [0x08002a90]",
            "mla fp, r2, r3, fp",
            "ldr r2, [fp, 0x14]",
            "bl printk",
            "b 0x8002818"
        ]
    },
    "fcn.08003100": {
        "function_address": "0x08003100",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r0",
            "sub sp, sp, 0x1c",
            "ldr r0, [r0, 0x24]",
            "mov r6, r1",
            "mov fp, r2",
            "bl id16_map_alloc",
            "movw r3, 0xffff",
            "mov r5, r0",
            "cmp r0, r3",
            "beq 0x800324c",
            "ldr r7, [r4, 0x14]",
            "mov r2, 0",
            "ldr sb, [r4, 0x18]",
            "add r3, r6, 6",
            "lsl sl, r6, 4",
            "add r8, r7, r0, lsl 4",
            "uxth sl, sl",
            "str r2, [r8, 4]",
            "ldr r2, [r4, 0x20]",
            "ldr r2, [r2, r3, lsl 2]",
            "uxth r2, r2",
            "rev16 r2, r2",
            "strh r2, [r8, 8]",
            "ldr r1, [r4, 0x20]",
            "ldr r2, [r4, 0x10]",
            "ldr r3, [r1, r3, lsl 2]",
            "add r3, r3, r3, lsl 1",
            "lsl r3, r3, 4",
            "cmp r2, r3",
            "bls 0x8003184",
            "cmp fp, 0",
            "beq 0x8003200",
            "ldr r0, [r4, 0x7c]",
            "mov r1, sp",
            "mov r2, 0",
            "str r3, [sp, 4]",
            "bl fcn.08002b8c",
            "cmp r0, 0",
            "str r0, [sp]",
            "beq 0x8003264",
            "ldr r2, [sp, 8]",
            "add r3, r6, 0x18",
            "add r3, r4, r3, lsl 2",
            "add r4, r4, r6, lsl 2",
            "str r2, [r7, r5, lsl 4]",
            "mov r2, 0",
            "str r2, [r8, 4]",
            "ldr r2, [sp]",
            "str r2, [sb, r5, lsl 2]",
            "ldr r2, [r3, 4]",
            "add r2, r2, 1",
            "str r2, [r3, 4]",
            "ldr r0, [r4, 0x3c]",
            "ldr r3, [r7, r5, lsl 4]",
            "mov r1, r5",
            "rev r3, r3",
            "rev16 sl, sl",
            "str r3, [r7, r5, lsl 4]",
            "strh sl, [r8, 0xa]",
            "bl id16_map_free",
            "mov r0, 0",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r1, [r4, 0xc]",
            "add r2, r6, 0x14",
            "add r6, r6, 0xa",
            "orr sl, sl, 4",
            "add r1, r1, 0x40000000",
            "str r1, [r7, r0, lsl 4]",
            "ldr r1, [r4, 0xc]",
            "str r1, [sb, r0, lsl 2]",
            "ldr r0, [r4, 0xc]",
            "ldr r1, [r4, 0x10]",
            "rsb r1, r3, r1",
            "add r3, r0, r3",
            "str r1, [r4, 0x10]",
            "str r3, [r4, 0xc]",
            "ldr r3, [r4, r2, lsl 2]",
            "add r3, r3, 1",
            "str r3, [r4, r2, lsl 2]",
            "ldr r0, [r4, r6, lsl 2]",
            "b 0x80031d8",
            "ldr r3, [0x080032a0]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "bne 0x800328c",
            "mvn r0, 0",
            "b 0x80031f8",
            "ldr r3, [0x080032a0]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "beq 0x800325c",
            "ldr r0, [0x080032a4]",
            "mov r2, r5",
            "ldr r1, [0x080032a8]",
            "bl printk",
            "mvn r0, 0",
            "b 0x80031f8",
            "ldr r0, [0x080032ac]",
            "ldr r1, [0x080032a8]",
            "bl printk",
            "mvn r0, 0",
            "b 0x80031f8"
        ]
    },
    "sym.dhd_bus_watchdog": {
        "function_address": "0x0802a860",
        "instructions": [
            "push {r4, lr}",
            "ldr r2, [r0, 0x14]",
            "ldr r3, [r0, 4]",
            "cmp r2, 2",
            "beq 0x802a87c",
            "mov r0, 0",
            "pop {r4, pc}",
            "ldr r4, [reloc.dhd_console_ms]",
            "ldr r2, [r4]",
            "cmp r2, 0",
            "beq 0x802a874",
            "ldr r0, [0x0802a8cc]",
            "ldr r1, [r3, 0x138]",
            "ldr r0, [r0]",
            "add r1, r0, r1",
            "cmp r2, r1",
            "str r1, [r3, 0x138]",
            "bhi 0x802a874",
            "rsb r2, r2, r1",
            "mov r0, r3",
            "str r2, [r3, 0x138]",
            "bl fcn.08027e1c",
            "cmp r0, 0",
            "movlt r3, 0",
            "strlt r3, [r4]",
            "b 0x802a874"
        ]
    },
    "fcn.08027e1c": {
        "function_address": "0x08027e1c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r4, r0",
            "ldr r2, [r0, 0x15c]",
            "sub sp, sp, 0xc8",
            "cmp r2, 0",
            "beq 0x8027f30",
            "mov ip, 0x10",
            "mov r1, 0",
            "add r2, r2, 8",
            "add r3, r0, 0x140",
            "str ip, [sp]",
            "bl fcn.08027c78",
            "cmp r0, 0",
            "blt 0x8027f0c",
            "ldr r3, [r4, 0x154]",
            "cmp r3, 0",
            "beq 0x8027f6c",
            "ldr r5, [r4, 0x148]",
            "ldr ip, [r4, 0x150]",
            "cmp r5, ip",
            "bhi 0x8027f30",
            "ldr r3, [r4, 0x158]",
            "cmp r3, r5",
            "beq 0x8027f14",
            "ldr r2, [r4, 0x140]",
            "mov r0, r4",
            "ldr r3, [r4, 0x154]",
            "mov r1, 0",
            "str ip, [sp]",
            "bl fcn.08027c78",
            "cmp r0, 0",
            "movge sb, 0",
            "blt 0x8027f0c",
            "ldr r1, [r4, 0x158]",
            "cmp r5, r1",
            "beq 0x8027f14",
            "ldr sl, [r4, 0x154]",
            "mov r6, 0",
            "ldr r8, [r4, 0x150]",
            "ldrb r7, [sl, r1]",
            "add r0, r1, 1",
            "mov r1, r8",
            "bl __aeabi_uidivmod",
            "cmp r7, 0xa",
            "add r3, sp, 8",
            "str r1, [r4, 0x158]",
            "beq 0x8027f1c",
            "strb r7, [r3, r6]",
            "add r6, r6, 1",
            "cmp r6, 0xbe",
            "beq 0x8027f38",
            "cmp r5, r1",
            "bne 0x8027eb8",
            "cmp r5, r6",
            "movhs r0, 0",
            "movlo r0, 0",
            "rsbhs r5, r6, r5",
            "rsblo r6, r6, r8",
            "strhs r5, [r4, 0x158]",
            "strlo r6, [r4, 0x158]",
            "add sp, sp, 0xc8",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}",
            "mov r0, 0",
            "b 0x8027f0c",
            "cmp r6, 0",
            "beq 0x8027ea4",
            "sub r2, r6, 1",
            "add r3, sp, 8",
            "b 0x8027f3c",
            "mvn r0, 0",
            "b 0x8027f0c",
            "mov r2, 0xbd",
            "add r1, sp, 0xc8",
            "ldr r0, [0x08027f94]",
            "add r2, r1, r2",
            "mov r1, r3",
            "ldrb r2, [r2, -0xc0]",
            "cmp r2, 0xd",
            "add r2, sp, 0xc8",
            "subeq r6, r6, 1",
            "add r6, r2, r6",
            "strb sb, [r6, -0xc0]",
            "bl printk",
            "b 0x8027ea0",
            "ldr r1, [r4, 0x144]",
            "ldr r3, [r4]",
            "str r1, [r4, 0x150]",
            "ldr r0, [r3]",
            "bl osl_malloc",
            "cmp r0, 0",
            "str r0, [r4, 0x154]",
            "mvneq r0, 0x1a",
            "bne 0x8027e60",
            "b 0x8027f0c"
        ]
    },
    "sym.sb_intflag": {
        "function_address": "0x0801078c",
        "instructions": [
            "movw r3, 0x4868",
            "push {r4, r5, r6, r7, r8, lr}",
            "ldr r7, [r0, r3]",
            "add r3, r3, 0x30",
            "mov r4, r0",
            "ldr r5, [r0, r3]",
            "cmp r7, 0",
            "beq 0x80107d0",
            "movw r3, 0x4888",
            "ldr r2, [r0, r3]",
            "movw r3, 0x4860",
            "ldr r3, [r0, r3]",
            "add r2, r2, 0x20",
            "ldr r2, [r5, r2, lsl 2]",
            "cmp r2, r3",
            "movne r7, 0",
            "beq 0x801085c",
            "mov r0, r4",
            "bl si_coreidx",
            "mov r2, 0",
            "mov r6, r0",
            "mov r1, 0x800",
            "mov r0, r4",
            "bl si_setcore",
            "add r1, r0, 0xfe0",
            "mov r0, r4",
            "add r1, r1, 8",
            "bl fcn.0800f9b4",
            "mov r1, r6",
            "mov r8, r0",
            "mov r0, r4",
            "bl sb_setcoreidx",
            "movw r3, 0x486c",
            "ldr r3, [r4, r3]",
            "cmp r3, 0",
            "beq 0x801083c",
            "movw r2, 0x4888",
            "ldr r1, [r4, r2]",
            "movw r2, 0x4860",
            "ldr r2, [r4, r2]",
            "add r1, r1, 0x20",
            "ldr r1, [r5, r1, lsl 2]",
            "cmp r1, r2",
            "beq 0x8010844",
            "mov r0, r8",
            "pop {r4, r5, r6, r7, r8, pc}",
            "movw r2, 0x4864",
            "mov r1, r7",
            "ldr r0, [r4, r2]",
            "blx r3",
            "mov r0, r8",
            "pop {r4, r5, r6, r7, r8, pc}",
            "movw r3, 0x4864",
            "ldr r0, [r0, r3]",
            "blx r7",
            "mov r7, r0",
            "b 0x80107d0"
        ]
    },
    "sym.sb_core_sflags": {
        "function_address": "0x08010160",
        "instructions": [
            "orrs r3, r2, r1",
            "movw r3, 0x4884",
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r5, r1",
            "ldr r6, [r0, r3]",
            "mov r7, r2",
            "mov r4, r0",
            "add r6, r6, 0xf00",
            "beq 0x80101a4",
            "add r8, r6, 0x9c",
            "mov r1, r8",
            "bl fcn.0800f9b4",
            "bic r2, r0, r5, lsl 16",
            "mov r1, r8",
            "mov r0, r4",
            "orr r2, r2, r7, lsl 16",
            "bl fcn.0800fafc",
            "mov r0, r4",
            "add r1, r6, 0x9c",
            "bl fcn.0800f9b4",
            "lsr r0, r0, 0x10",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "sym.sb_coreid": {
        "function_address": "0x0800fdd4",
        "instructions": [
            "push {r3, lr}",
            "movw r3, 0x4884",
            "ldr r1, [r0, r3]",
            "add r1, r1, 0xff0",
            "add r1, r1, 0xc",
            "bl fcn.0800f9b4",
            "movw r3, 0x8ff0",
            "and r3, r0, r3",
            "lsr r0, r3, 4",
            "pop {r3, pc}"
        ]
    },
    "sym.getintvar": {
        "function_address": "0x0800b34c",
        "instructions": [
            "push {r3, lr}",
            "bl fcn.0800a76c",
            "cmp r0, 0",
            "popeq {r3, pc}",
            "mov r1, 0",
            "mov r2, r1",
            "pop {r3, lr}",
            "b bcm_strtoul"
        ]
    },
    "fcn.0800a76c": {
        "function_address": "0x0800a76c",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "subs r6, r1, 0",
            "mov r4, r0",
            "mov r0, r6",
            "popeq {r4, r5, r6, pc}",
            "bl strlen",
            "subs r5, r0, 0",
            "bne 0x800a7cc",
            "b 0x800a7ec",
            "ldrb r3, [r4]",
            "cmp r3, 0",
            "beq 0x800a7d4",
            "mov r0, r4",
            "mov r1, r6",
            "mov r2, r5",
            "bl memcmp",
            "cmp r0, 0",
            "bne 0x800a7c0",
            "ldrb r3, [r4, r5]",
            "cmp r3, 0x3d",
            "beq 0x800a7e0",
            "ldrb r3, [r4], 1",
            "cmp r3, 0",
            "bne 0x800a7c0",
            "cmp r4, 0",
            "bne 0x800a790",
            "mov r0, r6",
            "pop {r4, r5, r6, lr}",
            "b nvram_get",
            "add r0, r5, 1",
            "add r0, r4, r0",
            "pop {r4, r5, r6, pc}",
            "mov r0, r5",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.sb_numaddrspaces": {
        "function_address": "0x08010870",
        "instructions": [
            "push {r3, lr}",
            "movw r3, 0x4884",
            "ldr r1, [r0, r3]",
            "add r1, r1, 0xff0",
            "add r1, r1, 8",
            "bl fcn.0800f9b4",
            "ubfx r0, r0, 3, 3",
            "add r0, r0, 1",
            "pop {r3, pc}"
        ]
    },
    "sym.dhd_runner_flowmgr_fini": {
        "function_address": "0x08004934",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "subs r6, r0, 0",
            "sub sp, sp, 0x24",
            "mov r5, r1",
            "beq 0x8004a9c",
            "ldr r3, [r1, 0x14]",
            "ldr sb, [r6]",
            "cmp r3, 0",
            "beq 0x8004a30",
            "ldr r8, [r1]",
            "cmp r8, 2",
            "ble 0x8004a30",
            "mov r4, 2",
            "mov fp, 0x200",
            "b 0x80049a4",
            "bl fcn.08002a94",
            "asr r3, r4, 0x1f",
            "ldr r0, [r6, 0x68]",
            "mov r1, 2",
            "str r4, [sp]",
            "mvn r2, 0",
            "str r3, [sp, 4]",
            "bl bdmf_attrelem_set_as_num",
            "ldr r8, [r5]",
            "add r4, r4, 1",
            "cmp r8, r4",
            "ble 0x8004a30",
            "ldr r3, [r5, 0x14]",
            "ldr lr, [r5, 0x18]",
            "mov r2, 0",
            "add r3, r3, r4, lsl 4",
            "mov r0, r6",
            "mov r1, r4",
            "lsl sl, r4, 2",
            "ldr r7, [lr, r4, lsl 2]",
            "ldrh ip, [r3, 0xa]",
            "rev16 ip, ip",
            "cmp r7, r2",
            "beq 0x8004994",
            "ands ip, ip, 4",
            "bne 0x8004970",
            "str r7, [sp, 8]",
            "add r1, sp, 8",
            "ldr r2, [r3]",
            "add r4, r4, 1",
            "rev r2, r2",
            "str r2, [sp, 0x10]",
            "mov r2, ip",
            "ldrh r7, [r3, 8]",
            "rev16 r7, r7",
            "uxth r7, r7",
            "str ip, [sp, 0x14]",
            "add r7, r7, r7, lsl 1",
            "lsl r7, r7, 4",
            "str r7, [sp, 0xc]",
            "str ip, [r3]",
            "str ip, [lr, sl]",
            "strh ip, [r3, 8]",
            "strh fp, [r3, 0xa]",
            "bl fcn.08002d04",
            "ldr r8, [r5]",
            "cmp r8, r4",
            "bgt 0x80049a0",
            "ldr r3, [r6, 0x78]",
            "cmp r3, 0",
            "beq 0x8004a58",
            "mov r0, r6",
            "add r1, r6, 0x78",
            "mov r2, 1",
            "bl fcn.08002d04",
            "mov r3, 0",
            "str r3, [r6, 0x50]",
            "str r3, [r6, 0x54]",
            "mov r4, r5",
            "mov r6, 5",
            "ldr r0, [sb]",
            "ldr r1, [r5, 0x24]",
            "bl id16_map_fini",
            "str r0, [r5, 0x24]",
            "ldr r1, [r4, 0x28]",
            "ldr r0, [sb]",
            "bl id16_map_fini",
            "ldr r1, [r4, 0x3c]",
            "str r0, [r4, 0x28]",
            "ldr r0, [sb]",
            "bl id16_map_fini",
            "subs r6, r6, 1",
            "str r0, [r4, 0x3c]",
            "add r4, r4, 4",
            "bne 0x8004a70",
            "mov r0, 0",
            "add sp, sp, 0x24",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.08002a94": {
        "function_address": "0x08002a94",
        "instructions": [
            "push {r4, lr}",
            "mov r3, r1",
            "ldr r1, [r0, 0x78]",
            "sub sp, sp, 8",
            "cmp r1, 0",
            "beq 0x8002b2c",
            "ldr r1, [r0, 0xa4]",
            "cmp r1, 0",
            "beq 0x8002b50",
            "add r1, r1, r3, lsl 4",
            "ldrh r4, [r1, 0xa]",
            "rev16 ip, r4",
            "tst ip, 4",
            "beq 0x8002b04",
            "cmp r2, 0",
            "uxtb ip, r2",
            "orreq r4, r4, 0x200",
            "bicne r4, r4, 0x200",
            "mov r2, r3",
            "strh r4, [r1, 0xa]",
            "mov r3, 0",
            "ldr r0, [r0, 0x68]",
            "mov r1, 3",
            "str ip, [sp]",
            "str r3, [sp, 4]",
            "bl bdmf_attrelem_set_as_num",
            "add sp, sp, 8",
            "pop {r4, pc}",
            "ldr r2, [0x08002b78]",
            "ldr r2, [r2]",
            "tst r2, 4",
            "beq 0x8002afc",
            "ldr r0, [0x08002b7c]",
            "mov r2, r3",
            "ldr r1, [0x08002b80]",
            "add sp, sp, 8",
            "pop {r4, lr}",
            "b printk",
            "ldr r3, [0x08002b78]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "beq 0x8002afc",
            "ldr r0, [0x08002b84]",
            "ldr r1, [0x08002b80]",
            "add sp, sp, 8",
            "pop {r4, lr}",
            "b printk",
            "ldr r2, [0x08002b78]",
            "ldr r2, [r2]",
            "tst r2, 1",
            "beq 0x8002afc",
            "ldr r0, [0x08002b88]",
            "mov r2, r3",
            "ldr r1, [0x08002b80]",
            "add sp, sp, 8",
            "pop {r4, lr}",
            "b printk"
        ]
    },
    "sym.sb_iscoreup": {
        "function_address": "0x080101b8",
        "instructions": [
            "push {r3, lr}",
            "movw r3, 0x4884",
            "ldr r1, [r0, r3]",
            "add r1, r1, 0xf90",
            "add r1, r1, 8",
            "bl fcn.0800f9b4",
            "mov r3, 7",
            "movt r3, 1",
            "and r3, r0, r3",
            "sub r1, r3, 0x10000",
            "rsbs r0, r1, 0",
            "adc r0, r0, r1",
            "pop {r3, pc}"
        ]
    },
    "sym.sb_addrspace": {
        "function_address": "0x08010894",
        "instructions": [
            "push {r3, lr}",
            "movw r3, 0x4884",
            "ldr r3, [r0, r3]",
            "cmp r1, 3",
            "ldrls pc, [pc, r1, lsl 2]",
            "b 0x8010940",
            "cmp r3, 1",
            "biceq r0, r0, 0xff0",
            "biceq r0, r0, 0xf",
            "popeq {r3, pc}",
            "cmp r3, 2",
            "lsreq r0, r0, 0x10",
            "movne r0, 0",
            "lsleq r0, r0, 0x10",
            "pop {r3, pc}",
            "mov r1, 0",
            "bl fcn.0800f9b4",
            "ands r3, r0, 3",
            "biceq r0, r0, 0xff",
            "bne 0x80108d0",
            "pop {r3, pc}",
            "andeq r0, r0, r0",
            "andeq r5, r0, r4, lsl 5",
            "andeq r6, r0, r0, lsr 10",
            "andeq r6, r0, ip, lsr 10"
        ]
    },
    "fcn.08016cec": {
        "function_address": "0x08016cec",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r7, r3",
            "ldr r4, [0x08017cb8]",
            "sub sp, sp, 0x3c",
            "mov r8, r0",
            "mov r6, r1",
            "mov r5, r2",
            "ldr fp, [sp, 0x64]",
            "ldr r3, [r4]",
            "ldr sl, [sp, 0x68]",
            "ldr sb, [sp, 0x6c]",
            "tst r3, 2",
            "mov r3, 0",
            "str r3, [sp, 0x2c]",
            "bne 0x8017e28",
            "mov r0, r6",
            "and r3, r5, 1",
            "mov r1, sl",
            "mov r2, sb",
            "bl bcm_iovar_lencheck",
            "subs r6, r0, 0",
            "ldrne r3, [r4]",
            "bne 0x8016f20",
            "cmp fp, 3",
            "bgt 0x8016f34",
            "sub r3, r5, 2",
            "cmp r3, 0x53",
            "ldrls pc, [pc, r3, lsl 2]",
            "b 0x8016f48",
            "tst r3, 2",
            "bne 0x8017e58",
            "mov r0, r6",
            "add sp, sp, 0x3c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "add r0, sp, 0x2c",
            "ldr r1, [sp, 0x60]",
            "mov r2, 4",
            "bl memcpy",
            "b 0x8016d50",
            "ldr r3, [r4]",
            "mvn r6, 0x16",
            "b 0x8016f20",
            "ldr r0, [0x08017cf8]",
            "ldr r1, [0x08017d08]",
            "bl printk",
            "ldr r3, [r4]",
            "tst r3, 2",
            "beq 0x8016d28",
            "mov r2, r5",
            "ldr r1, [0x08017d08]",
            "mov r3, r7",
            "ldr r0, [0x08017cfc]",
            "bl printk",
            "b 0x8016d28",
            "mov r2, r5",
            "ldr r1, [0x08017d08]",
            "mov r3, r6",
            "ldr r0, [0x08017d00]",
            "bl printk",
            "b 0x8016f28",
            "mov r0, r5",
            "mov r1, sl",
            "mov r2, sb",
            "and r3, r4, 1",
            "bl bcm_iovar_lencheck",
            "subs r5, r0, 0",
            "bne 0x802d62c",
            "cmp fp, 3",
            "bgt 0x802d638",
            "ldr r0, [r7]",
            "ldr r8, [sp, 0x54]",
            "ldrb r1, [r0, 0x12]",
            "adds r3, r8, 0",
            "movne r3, 1",
            "cmp r1, 0",
            "mov r2, r3",
            "strb r3, [sp, 0x65]",
            "uxtb r1, r3",
            "beq 0x802d444",
            "sub r3, r4, 0xa",
            "cmp r3, 1",
            "mvnhi r5, 0x18",
            "bhi 0x802d62c",
            "sub r3, r4, 4",
            "cmp r3, 0x45",
            "ldrls pc, [pc, r3, lsl 2]",
            "b 0x802d89c",
            "ldr r0, [r7, 0x20]",
            "movw r1, 0x849",
            "bl si_setcore",
            "cmp r0, 0",
            "bne 0x802dfa0",
            "ldr r3, [r7, 0x40]",
            "cmp r3, 0",
            "beq 0x802e160",
            "cmp r8, r3",
            "bhi 0x802d5a4",
            "ldr ip, [sp, 0x1c]",
            "add r2, ip, r8",
            "cmp r3, r2",
            "bhs 0x802e160",
            "ldr r0, [r7, 0x20]",
            "add r3, sp, 0x66",
            "add ip, sp, 0x67",
            "mov r1, 0",
            "add r2, sp, 0x60",
            "str ip, [sp]",
            "bl si_socdevram",
            "ldrb r3, [sp, 0x60]",
            "cmp r3, 0",
            "beq 0x802d5d8",
            "ldrb r3, [sp, 0x66]",
            "cmp r3, 0",
            "beq 0x802e14c",
            "ldr r3, [r6]",
            "tst r3, 1",
            "mvneq r5, 1",
            "beq 0x802d62c",
            "ldr r3, [sp, 0x1c]",
            "ldr r2, [r7, 0x40]",
            "ldr r0, [0x0802e37c]",
            "ldr r1, [0x0802e424]",
            "str r8, [sp]",
            "bl printk",
            "ldr r3, [0x0802e378]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "mvneq r5, 1",
            "beq 0x802d62c",
            "ldr r0, [0x0802e380]",
            "mvn r5, 1",
            "ldr r1, [0x0802e424]",
            "ldrb r2, [sp, 0x60]",
            "ldrb r3, [sp, 0x66]",
            "bl printk",
            "mov r0, r5",
            "add sp, sp, 0x6c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "add r0, sp, 0x54",
            "ldr r1, [sp, 0x90]",
            "mov r2, 4",
            "bl memcpy",
            "cmp fp, 7",
            "ble 0x802d40c",
            "ldr ip, [sp, 0x90]",
            "add r0, sp, 0x58",
            "mov r2, 4",
            "add r1, ip, 4",
            "bl memcpy",
            "cmp fp, 0xb",
            "ble 0x802d40c",
            "ldr ip, [sp, 0x90]",
            "add r0, sp, 0x5c",
            "mov r2, 4",
            "add r1, ip, 8",
            "bl memcpy",
            "b 0x802d40c",
            "mvn r5, 0x16",
            "b 0x802d62c",
            "ldr r3, [r6]",
            "tst r3, 1",
            "mvneq r5, 0",
            "beq 0x802d62c",
            "ldr r0, [0x0802e398]",
            "mvn r5, 0",
            "bl printk",
            "b 0x802d62c",
            "ldr r3, [r6]",
            "tst r3, 1",
            "mvneq r5, 0",
            "beq 0x802d62c",
            "ldr r0, [0x0802e398]",
            "mvn r5, 0",
            "bl printk",
            "b 0x802d62c",
            "mov ip, 0",
            "mov r2, 0x124",
            "mov r3, ip",
            "ldr r1, [r0, 0x10]",
            "str ip, [sp]",
            "bl si_corereg",
            "add r1, sp, 0x68",
            "mov r2, 4",
            "str r0, [r1, -0x14]!",
            "mov r0, sl",
            "bl memcpy",
            "b 0x802d62c",
            "bl dhdpcie_bus_suspend",
            "b 0x802d62c",
            "bl memcpy",
            "b 0x802d62c",
            "cmp r1, 2",
            "beq 0x802e198",
            "ldr r3, [r6]",
            "tst r3, 1",
            "mvneq r5, 0",
            "beq 0x802d62c",
            "ldr r0, [0x0802e39c]",
            "mvn r5, 0",
            "bl printk",
            "b 0x802d62c",
            "strb r2, [r7, 0x198]",
            "b 0x802d62c",
            "str r8, [r7, 0x40]",
            "b 0x802d62c",
            "add r1, sp, 0x68",
            "mov r0, sl",
            "ldr r2, [sp, 0xa0]",
            "str r3, [r1, -0x14]!",
            "bl memcpy",
            "b 0x802d62c",
            "mov r2, 0",
            "mov r1, 0x800",
            "mov sl, r0",
            "ldr r0, [r7, 0x20]",
            "bl si_setcore",
            "mov r8, r0",
            "ldr r0, [r7, 0x20]",
            "bl si_corerev",
            "cmp r0, 0x2b",
            "mov r2, r0",
            "bhi 0x802df10",
            "ldr r3, [r6]",
            "tst r3, 1",
            "mvneq r5, 0x16",
            "beq 0x802d62c",
            "add r1, r4, 0x10",
            "ldr r0, [0x0802e3a4]",
            "mvn r5, 0x16",
            "bl printk",
            "b 0x802d62c",
            "cmp r3, 0",
            "beq 0x802e224",
            "ldr r3, [r0, 0x14]",
            "cmp r3, 2",
            "beq 0x802e2dc",
            "ldr r3, [r6]",
            "tst r3, 1",
            "beq 0x802d62c",
            "ldr r0, [0x0802e39c]",
            "bl printk",
            "b 0x802d62c",
            "ldr r2, [sp, 0xa0]",
            "str r3, [r1, -0x14]!",
            "bl memcpy",
            "b 0x802d62c",
            "mov r2, 4",
            "adc r4, r4, r5",
            "add r1, ip, 4",
            "mov r5, r8",
            "bl memcpy",
            "ldr ip, [sp, 0x54]",
            "cmp r4, 0",
            "subne sb, fp, 8",
            "ldr r3, [r6]",
            "str ip, [sp, 0x1c]",
            "ldr ip, [sp, 0x1c]",
            "cmp sb, ip",
            "bhs 0x802df80",
            "tst r3, 1",
            "mvneq r5, 1",
            "beq 0x802d62c",
            "ldr ip, [0x0802e3a8]",
            "cmp r4, 0",
            "ldr r2, [0x0802e3ac]",
            "mov r3, r8",
            "ldr r1, [0x0802e424]",
            "mvn r5, 1",
            "moveq r2, ip",
            "ldr ip, [sp, 0x1c]",
            "ldr r0, [0x0802e3b0]",
            "str sb, [sp, 4]",
            "str ip, [sp]",
            "bl printk",
            "b 0x802d62c",
            "b 0x802d62c",
            "ldr r3, [r7, 0x20]",
            "movw r2, 0x4350",
            "ldrh r3, [r3, 0x3c]",
            "cmp r3, r2",
            "beq 0x802e000",
            "movw r2, 0x4345",
            "movw r1, 0xa9be",
            "cmp r3, r1",
            "cmpne r3, r2",
            "beq 0x802e000",
            "movw r2, 0xa9bf",
            "cmp r3, r2",
            "beq 0x802e000",
            "add r2, r2, 2",
            "cmp r3, r2",
            "beq 0x802e000",
            "add r2, r2, 1",
            "cmp r3, r2",
            "beq 0x802e000",
            "ldr r3, [r6]",
            "tst r3, 1",
            "mvneq r5, 0x16",
            "beq 0x802d62c",
            "ldr r0, [0x0802e3b4]",
            "add r1, r4, 0x10",
            "bl printk",
            "mvn r5, 0x16",
            "b 0x802d62c",
            "tst r3, 4",
            "bne 0x802e528",
            "mov r2, 0",
            "ldr r0, [r7, 0x20]",
            "movw r1, 0x83e",
            "bl si_setcore",
            "subs r2, r0, 0",
            "beq 0x802d56c",
            "cmp r4, 0",
            "beq 0x802e168",
            "ldr r3, [r7, 0x168]",
            "cmp r3, r8",
            "beq 0x802e318",
            "ldr ip, [sp, 0x90]",
            "add r3, ip, 8",
            "ldr ip, [sp, 0x1c]",
            "mov r2, r5",
            "mov r0, r7",
            "mov r1, r4",
            "str ip, [sp]",
            "bl fcn.08027c78",
            "mov r5, r0",
            "b 0x802d62c",
            "ldr r3, [r8, 0x190]",
            "ands r4, r3, 1",
            "bne 0x802e2b8",
            "ldr r3, [r8, 0x190]",
            "ands sb, r3, 0x20",
            "bne 0x802e25c",
            "ldr r3, [r8, 0x190]",
            "tst r3, 1",
            "bne 0x802e054",
            "ldr r3, [r8, 4]",
            "tst r3, 0x380000",
            "bne 0x802e054",
            "ldr r3, [r6]",
            "tst r3, 1",
            "mvneq r5, 0x1d",
            "beq 0x802d62c",
            "ldr r1, [0x0802e3bc]",
            "mvn r5, 0x1d",
            "ldr r0, [0x0802e3c0]",
            "bl printk",
            "b 0x802d62c",
            "ldr r3, [r8, 0x190]",
            "tst r3, 0x10",
            "beq 0x802e06c",
            "ldr r3, [r8, 0x190]",
            "tst r3, 0x20",
            "bne 0x802e33c",
            "ldr r3, [r8, 0x190]",
            "tst r3, 0x10",
            "bne 0x802e084",
            "ldr r3, [r8, 0x190]",
            "tst r3, 1",
            "bne 0x802e4ac",
            "ldr r3, [r6]",
            "tst r3, 1",
            "mvneq r5, 0x1d",
            "beq 0x802d62c",
            "ldr r1, [0x0802e3bc]",
            "mvn r5, 0x1d",
            "ldr r0, [0x0802e3c4]",
            "bl printk",
            "b 0x802d62c",
            "cmp r1, r2",
            "bne 0x802db3c",
            "add ip, sp, 0x5c",
            "mov r0, r7",
            "mov r1, r8",
            "ldr r2, [sp, 0x58]",
            "str ip, [sp]",
            "bl pcie2_mdioop.constprop.13",
            "cmp r0, 0",
            "beq 0x802d62c",
            "ldr r3, [r6]",
            "tst r3, 1",
            "mvneq r5, 0",
            "beq 0x802d62c",
            "ldr r0, [0x0802e3c8]",
            "mvn r5, 0",
            "bl printk",
            "b 0x802d62c",
            "ldr r2, [r3, 8]",
            "movw r3, 0x83c",
            "cmp r2, r3",
            "bne 0x802db6c",
            "add r4, sp, 0x60",
            "mov r0, r7",
            "mov r1, r8",
            "ldr r2, [sp, 0x58]",
            "mov r3, 0",
            "str r4, [sp]",
            "bl pcie2_mdioop.constprop.13",
            "cmp r0, 0",
            "beq case.0x8016d58.45",
            "ldr r3, [r6]",
            "tst r3, 1",
            "mvneq r5, 0",
            "beq 0x802d62c",
            "ldr r0, [0x0802e3c8]",
            "mvn r5, 0",
            "bl printk",
            "b 0x802d62c",
            "ldrb r3, [r7, 0x161]",
            "cmp r3, 0",
            "bne 0x802e5c4",
            "cmp r8, 0x800000",
            "bhs 0x802e550",
            "cmp r4, 0",
            "bne 0x802dfb4",
            "mov r3, sl",
            "b 0x802dfbc",
            "mov r2, 4",
            "bl memcpy",
            "b 0x802d62c",
            "movw r1, 0xfff3",
            "sub ip, r8, 5",
            "movt r1, 0x3f",
            "cmp ip, r1",
            "bls 0x802e32c",
            "ldr r3, [r6]",
            "tst r3, 1",
            "mvneq r5, 0",
            "beq 0x802d62c",
            "ldr r0, [0x0802e3cc]",
            "mvn r5, 0",
            "bl printk",
            "b 0x802d62c",
            "and r2, r8, 1",
            "movw r3, 0x1911",
            "strb r2, [r0, r3]",
            "ubfx r8, r8, 1, 1",
            "ldr r2, [r7]",
            "add r3, r3, 1",
            "strb r8, [r2, r3]",
            "b 0x802d62c",
            "tst r3, 1",
            "beq 0x802d62c",
            "ldr r0, [0x0802e3d0]",
            "bl printk",
            "b 0x802d62c",
            "b 0x802d62c",
            "ldr r3, [r6]",
            "tst r3, 1",
            "beq 0x802d62c",
            "ldr r0, [0x0802e3d4]",
            "bl printk",
            "b 0x802d62c",
            "mvn r5, 0",
            "bl printk",
            "b 0x802d62c",
            "add r0, sp, 0x44",
            "ldr r1, [0x0802e3d8]",
            "bl bcm_bprintf",
            "ldr r3, [r8, 0x1c]",
            "ubfx r3, r3, 0x10, 3",
            "cmp r3, 1",
            "beq 0x802e488",
            "ldr r3, [r8, 4]",
            "add r2, sp, 0x68",
            "add r0, sp, 0x44",
            "ldr r1, [0x0802e3f8]",
            "ubfx r3, r3, 0x13, 3",
            "add r3, r2, r3, lsl 2",
            "ldr sb, [r3, -0x44]",
            "mov r2, sb",
            "bl bcm_bprintf",
            "ldr r3, [r6]",
            "tst r3, 4",
            "beq 0x802e018",
            "ldr r1, [0x0802e3bc]",
            "ldr r0, [0x0802e3dc]",
            "bl printk",
            "b 0x802e018",
            "ldr r3, [r8, 0x190]",
            "mov r4, 0x400",
            "add r0, sp, 0x44",
            "ldr r1, [0x0802e3e0]",
            "and r3, r3, 6",
            "lsl r4, r4, r3",
            "mov r2, r4",
            "bl bcm_bprintf",
            "b 0x802e00c",
            "mov r1, r8",
            "bl dhdmsgbuf_lpbk_req",
            "b 0x802d62c",
            "mov r2, 0x63",
            "movw r3, 0x107",
            "stm sp, {ip, lr}",
            "bl dhd_wl_ioctl_set_intiovar",
            "b 0x802d62c",
            "ldr ip, [sp, 0x90]",
            "mov r5, r8",
            "ldr r3, [ip, 8]",
            "str r3, [r7, 0x164]",
            "b 0x802dfb4",
            "mov r1, r8",
            "bl dhdmsgbuf_dmaxfer_req",
            "mov r5, r0",
            "b 0x802d62c",
            "lsr sb, sb, 4",
            "add r0, sp, 0x44",
            "ldr r1, [0x0802e3e8]",
            "bl bcm_bprintf",
            "ldr r3, [r7, 0x17c]",
            "cmp r3, 0",
            "beq 0x802e4f4",
            "add r0, sp, 0x44",
            "ldr r1, [0x0802e3ec]",
            "bl bcm_bprintf",
            "cmp sb, 0",
            "beq 0x802e474",
            "mov r6, 0",
            "mov r4, r6",
            "b case.0x8016d58.52",
            "andeq sb, r0, r8, ror 27",
            "andeq sb, r0, r4, asr 29",
            "andeq sl, r0, r0, rrx",
            "andeq sl, r0, r8, lsr 4",
            "andeq r6, r0, r8, asr r1",
            "strdeq sl, fp, [r0], -ip",
            "andeq sl, r0, r8, lsl 3",
            "andeq sb, r0, ip, lsl 29",
            "andeq sb, r0, r4, lsr 29",
            "andeq sb, r0, r0, lsr 6",
            "andeq sb, r0, r0, lsr r3",
            "strheq sl, [r0], -r4",
            "ldrdeq sl, fp, [r0], -r4",
            "muleq r0, r4, r0",
            "andeq sl, r0, r0, ror 4",
            "andeq sl, r0, r4, lsr 2",
            "ldrdeq sl, fp, [r0], -ip",
            "strdeq sl, fp, [r0], -r4",
            "andeq sl, r0, r8, ror 3",
            "andeq sl, r0, r4, asr 1",
            "andeq sl, r0, r4, asr r1",
            "andeq sb, r0, r0, lsl 28",
            "strheq sl, [r0], -r8",
            "strdeq sb, sl, [r0], -ip",
            "andeq sb, r0, ip, lsl 31",
            "andeq r0, r0, r0",
            "strheq sb, [r0], -r4",
            "andeq sl, r0, r0, lsl r0",
            "strdeq sb, sl, [r0], -r8",
            "strdeq sb, sl, [r0], -r0",
            "andeq r6, r0, r4, lsr 2",
            "ldrdeq sb, sl, [r0], -ip",
            "add r3, r6, 0x400",
            "add r4, r4, 1",
            "lsl r3, r3, 1",
            "uxth r4, r4",
            "ldr r1, [0x0802e3f0]",
            "add r0, sp, 0x44",
            "ldrh r2, [r8, r3]",
            "bl bcm_bprintf",
            "cmp r4, sb",
            "mov r6, r4",
            "bhs 0x802e474",
            "tst r4, 1",
            "bne 0x802e42c",
            "lsl r2, r4, 1",
            "ldr r1, [0x0802e3f4]",
            "add r0, sp, 0x44",
            "bl bcm_bprintf",
            "b 0x802e42c",
            "ldr r0, [r7, 0x20]",
            "mov r1, sl",
            "mov r2, 0",
            "bl si_setcore",
            "b 0x802d62c",
            "ldr sb, [r8, 4]",
            "add r0, sp, 0x44",
            "ldr r1, [0x0802e3f8]",
            "ubfx sb, sb, 0x13, 3",
            "add sb, sb, 1",
            "lsl sb, sb, 0xa",
            "mov r2, sb",
            "bl bcm_bprintf",
            "b 0x802e018",
            "add r0, sp, 0x44",
            "ldr r1, [0x0802e3fc]",
            "bl bcm_bprintf",
            "cmp r4, 8",
            "movhi sb, 0x200",
            "movls sb, 0",
            "b 0x802e34c",
            "bl printk",
            "b 0x802d3e8",
            "ldr r3, [r6]",
            "tst r3, 1",
            "mvneq r5, 0x18",
            "beq 0x802d62c",
            "ldr r0, [0x0802e404]",
            "mvn r5, 0x18",
            "bl printk",
            "b 0x802d62c",
            "mov r0, sl",
            "mov r1, r4",
            "mov r2, 4",
            "bl memcpy",
            "b 0x802d62c",
            "ldr ip, [0x0802e41c]",
            "cmp r4, 0",
            "ldr r2, [0x0802e420]",
            "ldr r3, [sp, 0x1c]",
            "ldr r1, [0x0802e424]",
            "moveq r2, ip",
            "ldr r0, [0x0802e408]",
            "stm sp, {r8, sb}",
            "bl printk",
            "b 0x802df88",
            "ldr r0, [r7, 0x20]",
            "bl si_socdevram_size",
            "ldr ip, [sp, 0x1c]",
            "add r3, r0, 0x800000",
            "mov r5, r0",
            "add r2, ip, r8",
            "cmp r2, r3",
            "ldr r3, [r6]",
            "bls 0x802e610",
            "tst r3, 1",
            "mvneq r5, 1",
            "beq 0x802d62c",
            "mov r3, ip",
            "ldr r0, [0x0802e40c]",
            "mov r2, r8",
            "ldr r1, [0x0802e424]",
            "bl printk",
            "ldr r3, [case.0x8016d58.50]",
            "ldr r3, [r3]",
            "tst r3, 1",
            "mvneq r5, 1",
            "beq 0x802d62c",
            "mov r3, r5",
            "ldr r0, [0x0802e414]",
            "mov r2, 0x800000",
            "ldr r1, [0x0802e424]",
            "bl printk",
            "mvn r5, 1",
            "b 0x802d62c",
            "ldr r3, [r7, 0x40]",
            "cmp r8, r3",
            "blo 0x802e160",
            "ldr r3, [r7, 0x3c]",
            "cmp r8, r3",
            "bhs 0x802e160",
            "ldrb r3, [sp, 0x67]",
            "cmp r3, 0",
            "beq 0x802e160",
            "ldr r3, [r6]",
            "tst r3, 1",
            "mvneq r5, 0",
            "beq 0x802d62c",
            "mov r2, r8",
            "ldr r1, [0x0802e424]",
            "ldr r0, [0x0802e418]",
            "mvn r5, 0",
            "bl printk",
            "b 0x802d62c",
            "tst r3, 4",
            "add r5, r8, 0x1d800000",
            "beq 0x802e160",
            "ldr ip, [0x0802e41c]",
            "cmp r4, 0",
            "ldr r2, [0x0802e420]",
            "ldr r3, [sp, 0x1c]",
            "ldr r1, [0x0802e424]",
            "moveq r2, ip",
            "ldr r0, [0x0802e428]",
            "str r5, [sp]",
            "bl printk",
            "b 0x802e160"
        ]
    },
    "fcn.08017eb4": {
        "function_address": "0x08017eb4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r8, r3",
            "ldr r7, [0x08017fa8]",
            "sub sp, sp, 0x1c",
            "mov sb, r0",
            "mov r6, r1",
            "mov r5, r2",
            "ldr fp, [sp, 0x44]",
            "ldr r3, [r7]",
            "ldrb sl, [sp, 0x48]",
            "tst r3, 2",
            "bne 0x8017f98",
            "ldr r0, [0x08017fac]",
            "mov r1, r6",
            "bl bcm_iovar_lookup",
            "subs r4, r0, 0",
            "mvneq r0, 0x16",
            "beq 0x8017f54",
            "ldr r3, [r7]",
            "tst r3, 0x10",
            "bne 0x8017f6c",
            "ldrh ip, [r4, 8]",
            "cmp r5, 0",
            "moveq r8, fp",
            "ldreq r5, [sp, 0x40]",
            "cmp ip, 0",
            "bne 0x8017f5c",
            "ldrh r2, [r4, 4]",
            "cmp sl, 0",
            "ldr lr, [sp, 0x40]",
            "mov r0, sb",
            "mov r1, r4",
            "mov r3, r6",
            "stm sp, {r5, r8}",
            "lsl r2, r2, 1",
            "str lr, [sp, 8]",
            "str fp, [sp, 0xc]",
            "addne r2, r2, 1",
            "str ip, [sp, 0x10]",
            "bl fcn.08016cec",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "cmp ip, 8",
            "moveq ip, fp",
            "movne ip, 4",
            "b 0x8017f20",
            "ldr ip, [0x08017fb0]",
            "cmp sl, 0",
            "ldr r3, [0x08017fb4]",
            "mov r2, r6",
            "ldr r1, [0x08017fb8]",
            "moveq r3, ip",
            "ldr r0, [0x08017fbc]",
            "str fp, [sp]",
            "str r8, [sp, 4]",
            "bl printk",
            "b 0x8017f08",
            "ldr r1, [0x08017fb8]",
            "ldr r0, [0x08017fc0]",
            "bl printk",
            "b 0x8017ee4"
        ]
    },
    "fcn.08023cd0": {
        "function_address": "0x08023cd0",
        "instructions": [
            "push {r4, lr}",
            "subs r4, r0, 0",
            "popeq {r4, pc}",
            "ldr r3, [r4]",
            "cmp r3, 0",
            "popeq {r4, pc}",
            "bl fcn.08023384",
            "ldm r4, {r0, r1}",
            "cmp r1, 0",
            "bne __memzero",
            "pop {r4, lr}",
            "b osl_cache_flush",
            "bl __memzero",
            "ldm r4, {r0, r1}",
            "b 0x8023cf8"
        ]
    },
    "fcn.08023d58": {
        "function_address": "0x08023d58",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r0",
            "movw r0, 0",
            "sub sp, sp, 0x4c",
            "movt r0, 0",
            "ldr r3, [r0]",
            "str r1, [sp, 0x18]",
            "str r2, [sp, 0x14]",
            "tst r3, 4",
            "bne 0x802405c",
            "ldr r3, [r4, 0x14]",
            "cmp r3, 0",
            "bne 0x8023dac",
            "movw r0, 0",
            "movt r0, 0",
            "ldr r5, [r0]",
            "ands r5, r5, 1",
            "bne 0x8024070",
            "mov r0, r5",
            "add sp, sp, 0x4c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r2, [sp, 0x14]",
            "cmp r2, 0",
            "moveq r5, r2",
            "moveq sl, r5",
            "beq dhd_msg_level",
            "ldr r0, [sp, 0x18]",
            "mov r3, 0",
            "ldr r5, [r4, 8]",
            "movw r7, 0x8da9",
            "mov sl, r3",
            "mov r8, r3",
            "cmp r0, r3",
            "movt r7, 0x8184",
            "moveq r0, 0x2000",
            "movne r0, 0x800",
            "add r2, r5, 0x18",
            "strh r3, [sp, 0x46]",
            "str r0, [sp, 0x1c]",
            "str r2, [sp, 0x10]",
            "add r0, sp, 0x2c",
            "mov r1, 0x18",
            "bl __memzero",
            "ldr r1, [sp, 0x1c]",
            "ldr r0, [r4]",
            "bl osl_pktget",
            "subs r6, r0, 0",
            "mov r1, r6",
            "beq dhd_msg_level",
            "ldr r0, [r4]",
            "bl osl_pktlen",
            "ldr sb, [r4]",
            "mov r1, r6",
            "str r0, [sp, 0x20]",
            "mov r0, sb",
            "bl osl_pktdata",
            "ldr r2, [sp, 0x20]",
            "mov r1, r0",
            "mov r3, 2",
            "mov r0, sb",
            "stm sp, {r6, r8}",
            "bl osl_dma_map",
            "cmp r0, 0",
            "mov r2, 1",
            "str r0, [sp, 0x24]",
            "add r3, sp, 0x46",
            "ldr r1, [sp, 0x10]",
            "mov r0, r4",
            "beq dhd_msg_level",
            "str r8, [sp]",
            "bl dhd_prot_alloc_ring_space",
            "subs sb, r0, 0",
            "mov r0, r6",
            "beq dhd_msg_level",
            "ldr r2, [sp, 0x18]",
            "add sl, sl, 1",
            "cmp r2, 0",
            "movne r3, 0xd",
            "moveq r3, 0xb",
            "strb r3, [sb]",
            "ldr r3, [r5, 0x3c]",
            "ldr r2, [r4, 8]",
            "ldr fp, [r2, 0x300]",
            "str r3, [sp, 0xc]",
            "bl osl_pkt_get_tag",
            "ldr r2, [sp, 0x20]",
            "strh r2, [r0, 0x10]",
            "mov r0, r6",
            "bl osl_pkt_get_tag",
            "str r8, [r0, 0x18]",
            "mov r0, r6",
            "bl osl_pkt_get_tag",
            "ldr r2, [sp, 0x24]",
            "str r2, [r0, 0x14]",
            "mov r0, r6",
            "bl osl_pkt_get_tag",
            "ldr r3, [sp, 0xc]",
            "mov r1, r6",
            "str r3, [r0, 0x1c]",
            "ldr r0, [fp, 8]",
            "bl dhd_pkt_queue_head",
            "str r6, [sb, 4]",
            "mov r1, r6",
            "strb r8, [sb, 1]",
            "ldr r2, [r5, 0x44]",
            "umull r0, r3, r7, r2",
            "lsr r3, r3, 7",
            "rsb r0, r3, r3, lsl 6",
            "add r3, r3, r0, lsl 2",
            "rsb r3, r3, r2",
            "strb r3, [sb, 3]",
            "ldr r3, [r5, 0x44]",
            "add r3, r3, 1",
            "str r3, [r5, 0x44]",
            "strb r8, [sb, 2]",
            "ldr r0, [r4]",
            "bl osl_pktlen",
            "ldr r2, [sp, 0x24]",
            "mov r3, 1",
            "strh r0, [sb, 8]",
            "mov r0, r4",
            "ldr r1, [sp, 0x10]",
            "str r2, [sb, 0x10]",
            "mov r2, sb",
            "str r8, [sb, 0x14]",
            "bl dhd_prot_ring_write_complete",
            "ldr r3, [sp, 0x14]",
            "cmp sl, r3",
            "beq 0x8023fe4",
            "ldr r3, [r4, 0x14]",
            "ldr r5, [r4, 8]",
            "strh r8, [sp, 0x46]",
            "cmp r3, 0",
            "add r2, r5, 0x18",
            "str r2, [sp, 0x10]",
            "bne 0x8023df8",
            "movw r0, 0",
            "uxth r5, sl",
            "movt r0, 0",
            "ldr r3, [r0]",
            "tst r3, 1",
            "bne 0x802404c",
            "movw r0, 0",
            "movt r0, 0",
            "ldr r3, [r0]",
            "tst r3, 4",
            "beq 0x8023da0",
            "mov r1, sl",
            "ldr r2, [sp, 0x18]",
            "ldr r0, [0x080240b8]",
            "bl printk",
            "b 0x8023da0",
            "movw r0, 0",
            "movt r0, 0",
            "ldr r3, [r0]",
            "tst r3, 1",
            "bne 0x8024084",
            "ldr r0, [r4]",
            "mov r1, r6",
            "mov r2, 0",
            "uxth r5, sl",
            "bl osl_pktfree",
            "b dhd_msg_level",
            "uxth r5, sl",
            "b dhd_msg_level",
            "movw r3, 0",
            "movt r3, 0",
            "ldr r2, [r3]",
            "ldr r3, [r4, 0xcc]",
            "tst r2, 4",
            "add r3, r3, 1",
            "str r3, [r4, 0xcc]",
            "bne 0x8024090",
            "ldr r3, [r4, 0x90]",
            "uxth r5, sl",
            "add r3, r3, 1",
            "str r3, [r4, 0x90]",
            "b dhd_msg_level",
            "movw r2, 0",
            "movt r2, 0",
            "ldr r3, [r2]",
            "tst r3, 1",
            "bne 0x80240a4",
            "ldr r0, [r4]",
            "mov r3, 2",
            "ldr r1, [sp, 0x24]",
            "ldr r2, [sp, 0x20]",
            "bl osl_dma_unmap",
            "b 0x8023fcc",
            "ldr r1, [0x080240bc]",
            "ldr r0, [0x080240c0]",
            "bl printk",
            "b dhd_msg_level",
            "mov r1, r2",
            "ldr r0, [0x080240c4]",
            "ldr r2, [sp, 0x18]",
            "bl printk",
            "b 0x8023d80",
            "ldr r1, [0x080240c8]",
            "mov r5, r3",
            "ldr r0, [0x080240c0]",
            "bl printk",
            "b 0x8023da0",
            "ldr r0, [0x080240cc]",
            "bl printk",
            "b 0x8023fcc",
            "movw r2, 0xd46",
            "ldr r1, [0x080240bc]",
            "ldr r0, [0x080240d0]",
            "bl printk",
            "b 0x802400c",
            "movw r2, 0xd69",
            "ldr r1, [0x080240bc]",
            "ldr r0, [0x080240d4]",
            "bl printk",
            "b 0x8024034"
        ]
    },
    "fcn.08023d0c": {
        "function_address": "0x08023d0c",
        "instructions": [
            "ldr r3, [0x08023d4c]",
            "push {r4, lr}",
            "mov r4, r0",
            "ldr r3, [r3]",
            "tst r3, 2",
            "bne 0x8023d3c",
            "add r0, r4, 0x14",
            "bl fcn.08023cd0",
            "mov r3, 0",
            "strh r3, [r4, 6]",
            "strh r3, [r4, 4]",
            "pop {r4, pc}",
            "ldr r1, [0x08023d50]",
            "ldr r0, [0x08023d54]",
            "bl printk",
            "b 0x8023d24"
        ]
    },
    "fcn.08028674": {
        "function_address": "0x08028674",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r0",
            "ldr r5, [r0, 0x28]",
            "sub sp, sp, 0x14",
            "ldr r3, [r0, 0x168]",
            "ldr r8, [r0, 0x3c]",
            "cmp r5, 0",
            "ldr fp, [r0, 0x24]",
            "addne r5, r5, 3",
            "bicne r5, r5, 3",
            "add r8, r3, r8",
            "cmp fp, 0",
            "sub r8, r8, 4",
            "rsb r8, r5, r8",
            "beq 0x802886c",
            "ldr r3, [r0]",
            "mov r1, r5",
            "ldr r0, [r3]",
            "bl osl_malloc",
            "subs r7, r0, 0",
            "beq 0x8028884",
            "cmp r5, 0",
            "bne 0x8028848",
            "ldr r6, [0x080288f0]",
            "mov r0, r7",
            "ldr r1, [r4, 0x24]",
            "ldr r2, [r4, 0x28]",
            "bl memcpy",
            "mov r3, r7",
            "mov r0, r4",
            "mov r1, 1",
            "mov r2, r8",
            "str r5, [sp]",
            "bl fcn.08027c78",
            "ldr r3, [r6]",
            "tst r3, 4",
            "bne 0x80288d0",
            "ldr r3, [r4]",
            "mov r1, r5",
            "ldr r0, [r3]",
            "bl osl_malloc",
            "subs sb, r0, 0",
            "beq 0x8028884",
            "cmp r5, 0",
            "bne 0x8028874",
            "mov r0, r4",
            "mov r1, 0",
            "mov r2, r8",
            "mov r3, sb",
            "str r5, [sp]",
            "bl fcn.08027c78",
            "subs fp, r0, 0",
            "ldr sl, [r6]",
            "bne 0x802881c",
            "and sl, sl, 1",
            "mov r0, r7",
            "mov r1, sb",
            "mov r2, r5",
            "bl memcmp",
            "cmp r0, 0",
            "beq 0x8028854",
            "cmp sl, 0",
            "bne 0x80288e0",
            "ldr r3, [r4]",
            "mov r1, sb",
            "mov r2, r5",
            "ldr r0, [r3]",
            "bl osl_mfree",
            "ldr r3, [r4]",
            "mov r1, r7",
            "mov r2, r5",
            "ldr r0, [r3]",
            "bl osl_mfree",
            "ldr r3, [r4, 0x168]",
            "ldrb r2, [r4, 0x161]",
            "cmp r2, 0",
            "ldr r2, [r6]",
            "ldrne r7, [r4, 0x3c]",
            "ldreq r7, [r4, 0x40]",
            "tst r2, 4",
            "add r7, r7, r3",
            "bne 0x802888c",
            "movw r1, 0xfffc",
            "cmp fp, 0",
            "movt r1, 0xffff",
            "movne r3, 0",
            "rsb r1, r8, r1",
            "add r1, r1, r7",
            "lsreq r2, r1, 2",
            "uxtheq r0, r2",
            "mvneq r3, r2",
            "orreq r3, r0, r3, lsl 16",
            "str r3, [sp, 0xc]",
            "str r3, [r4, 0x188]",
            "ldr r3, [r6]",
            "tst r3, 4",
            "bne 0x80288c0",
            "mov ip, 4",
            "mov r0, r4",
            "mov r1, 1",
            "sub r2, r7, 4",
            "add r3, sp, 0xc",
            "str ip, [sp]",
            "bl fcn.08027c78",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ands sl, sl, 1",
            "beq 0x8028750",
            "mov r3, r5",
            "ldr r0, [0x080288f4]",
            "mov r2, fp",
            "ldr r1, [0x080288f8]",
            "str r8, [sp]",
            "bl printk",
            "ldr r3, [0x080288f0]",
            "ldr sl, [r3]",
            "b 0x802874c",
            "mov r1, r5",
            "bl __memzero",
            "b 0x80286d0",
            "cmp sl, 0",
            "beq 0x8028770",
            "ldr r1, [0x080288f8]",
            "ldr r0, [0x080288fc]",
            "bl printk",
            "b 0x8028770",
            "ldr r6, [0x080288f0]",
            "b 0x802879c",
            "mov r1, 0xaa",
            "mov r2, r5",
            "bl memset",
            "b 0x8028728",
            "mvn r0, 0x1a",
            "b 0x8028814",
            "ldr r0, [0x08028900]",
            "mov r1, r7",
            "ldr r2, [r4, 0x3c]",
            "bl printk",
            "ldr r3, [0x080288f0]",
            "ldr r3, [r3]",
            "tst r3, 4",
            "beq 0x80287bc",
            "mov r1, r8",
            "mov r2, r5",
            "ldr r0, [0x08028904]",
            "bl printk",
            "b 0x80287bc",
            "ldr r2, [sp, 0xc]",
            "ldr r0, [0x08028908]",
            "bl printk",
            "b 0x80287f8",
            "mov r1, r5",
            "ldr r0, [0x0802890c]",
            "bl printk",
            "b 0x8028708",
            "ldr r1, [0x080288f8]",
            "ldr r0, [0x08028910]",
            "bl printk",
            "b 0x8028770"
        ]
    },
    "fcn.08027de0": {
        "function_address": "0x08027de0",
        "instructions": [
            "str lr, [sp, -4]!",
            "sub sp, sp, 0x14",
            "ldr ip, [r0, 0x168]",
            "add r3, sp, 0x10",
            "mov r1, 0",
            "mov lr, 4",
            "ldr r2, [r0, 0x3c]",
            "str r1, [r3, -4]!",
            "mov r1, 1",
            "str lr, [sp]",
            "add r2, ip, r2",
            "sub r2, r2, 4",
            "bl fcn.08027c78",
            "add sp, sp, 0x14",
            "ldm sp!, {pc}"
        ]
    },
    "fcn.08028f48": {
        "function_address": "0x08028f48",
        "instructions": [
            "push {r4, r5, lr}",
            "sub sp, sp, 0x14",
            "mov r4, r0",
            "mov r5, r1",
            "bl osl_acp_war_enab",
            "cmp r0, 0",
            "bne 0x8028f7c",
            "bl osl_arch_is_coherent",
            "cmp r0, 0",
            "ldreq r3, [r4, 0x180]",
            "ldreq r3, [r3, r5]",
            "streq r3, [sp, 4]",
            "beq 0x8028fa8",
            "ldr r0, [r4]",
            "mov r3, 4",
            "ldr r1, [r4, 0x180]",
            "add r2, sp, 0xc",
            "ldr r0, [r0]",
            "add r1, r1, r5",
            "bl osl_pcie_rreg",
            "ldr r3, [sp, 0xc]",
            "str r3, [sp, 8]",
            "ldr r3, [sp, 8]",
            "str r3, [sp, 4]",
            "ldr r0, [sp, 4]",
            "add sp, sp, 0x14",
            "pop {r4, r5, pc}"
        ]
    },
    "fcn.0803584c": {
        "function_address": "0x0803584c",
        "instructions": [
            "bl fcn.0803584c",
            "uxth r0, r0",
            "ldr r1, [r5, r7]",
            "mov r2, 1",
            "str r0, [sp, 0x14]",
            "add r3, sp, 0x2e",
            "ldr ip, [sp, 0x14]",
            "mov r0, r5",
            "mla sb, sb, ip, r1",
            "ldr r7, [sb, 0x4c]",
            "str r6, [sp]",
            "mov r1, r7",
            "bl sym.dhd_prot_alloc_ring_space",
            "subs r6, r0, 0",
            "beq 0x8035cb8",
            "mov r1, r4",
            "ldr r0, [r5]",
            "bl 0x8035890",
            "mov r1, r4",
            "mov fp, r0",
            "ldr r0, [r5]",
            "bl 0x80358a0",
            "mov r1, fp",
            "mov sl, r0",
            "mov r2, 0xe",
            "add r0, r6, 8",
            "bl 0x80358b4",
            "sub sl, sl, 0xe",
            "ldr r0, [r5]",
            "mov r1, r4",
            "mov r2, 0xe",
            "str sl, [sp, 0x18]",
            "bl 0x80358cc",
            "ands r3, r4, 3",
            "str r0, [sp, 0x10]",
            "str r3, [sp, 0x20]",
            "beq 0x8035c50",
            "bic r3, r4, 3",
            "ldr r2, [r3]",
            "cmn r2, 0xf0000001",
            "bhi 0x8035b0c",
            "add sl, r3, 0x100",
            "ldr r3, [r3, 4]",
            "ldr fp, [0x08035d30]",
            "ldr r1, [sp, 0x10]",
            "bic r2, r3, 1",
            "ldr r3, [fp, 0x24]",
            "str r2, [sp, 0xc]",
            "cmp sl, r1",
            "movhs sl, r1",
            "blx r3",
            "ldr r2, [sp, 0xc]",
            "bic sl, sl, 0x1f",
            "cmp r2, sl",
            "bls 0x8035954",
            "str r4, [sp, 0x24]",
            "mov r4, r2",
            "add r0, sl, 0x40000000",
            "mcr p15, 0, sl, c7, c14, 1",
            "add sl, sl, 0x20",
            "dsb sy",
            "ldr r3, [fp, 0x30]",
            "blx r3",
            "cmp r4, sl",
            "bhi 0x8035930",
            "ldr r4, [sp, 0x24]",
            "ldr r3, [fp, 0x2c]",
            "blx r3",
            "ldr r3, [fp, 0x28]",
            "blx r3",
            "ldr r2, [sp, 0x10]",
            "ldr fp, [0x08035d34]",
            "adds sl, r2, 0x40000000",
            "bne 0x8035980",
            "ldr r3, [fp]",
            "tst r3, 1",
            "bne 0x8035d24",
            "ldr r2, [r5, 8]",
            "mov r0, r4",
            "ldr r3, [r7, 0x24]",
            "ldr r2, [r2, 0x300]",
            "str r3, [sp, 8]",
            "str r2, [sp, 0xc]",
            "bl 0x8035998",
            "mov ip, 0",
            "mov r1, r0",
            "strh ip, [r1, 0x10]",
            "mov r0, r4",
            "bl 0x80359ac",
            "mov ip, 0",
            "mov r1, r0",
            "str ip, [r1, 0x18]",
            "mov r0, r4",
            "bl 0x80359c0",
            "str sl, [r0, 0x14]",
            "mov r0, r4",
            "bl 0x80359cc",
            "ldr r3, [sp, 8]",
            "mov r1, r4",
            "str r3, [r0, 0x1c]",
            "ldr r2, [sp, 0xc]",
            "ldr r0, [r2]",
            "bl 0x80359e4",
            "ldrh r3, [r7, 0x34]",
            "mov r0, r4",
            "ldr ip, [sp, 0x1c]",
            "add r2, r3, 1",
            "cmp r3, 0",
            "strh r2, [r7, 0x34]",
            "mov r3, 1",
            "mov r2, 0xf",
            "streq r6, [r7, 0x30]",
            "strb r2, [r6]",
            "strb ip, [r6, 1]",
            "strb r3, [r6, 0x16]",
            "str r3, [sp, 8]",
            "bl 0x8035a1c",
            "ldr r3, [sp, 8]",
            "uxtb r0, r0",
            "ldrb ip, [r6, 0x16]",
            "mov r1, r4",
            "str sl, [r6, 0x20]",
            "mov r2, 0xe",
            "strb r3, [r6, 0x17]",
            "ldr r3, [sp, 0x18]",
            "orr r0, ip, r0, lsl 5",
            "strh r3, [r6, 0x2a]",
            "mov r3, 0",
            "str r3, [r6, 0x24]",
            "strb r0, [r6, 0x16]",
            "ldr r0, [r5]",
            "bl 0x8035a58",
            "ldr ip, [sp, 0x20]",
            "cmp ip, 0",
            "beq 0x8035b20",
            "ldr r2, [fp]",
            "tst r2, 2",
            "str r4, [r6, 4]",
            "bne 0x8035cdc",
            "ldrh r2, [r7, 0x34]",
            "ldrh r3, [r8, 0x14]",
            "cmp r2, r3",
            "beq 0x8035ca4",
            "ldrh r3, [r7, 8]",
            "ldrh r1, [r7, 0xa]",
            "ldr r2, [r7, 0x14]",
            "sub r3, r3, 1",
            "mla r3, r1, r3, r2",
            "cmp r6, r3",
            "beq 0x8035ca4",
            "ldrh r3, [r8, 0x10]",
            "cmn sb, 0x34",
            "add r3, r3, 1",
            "strh r3, [r8, 0x10]",
            "ldrne r3, [sb, 0x34]",
            "addne r3, r3, 1",
            "strne r3, [sb, 0x34]",
            "ldr r3, [r5, 0x38]",
            "ldr r2, [r5, 0x40]",
            "add r3, r3, 1",
            "str r3, [r5, 0x38]",
            "ldrh r3, [r6, 0x2a]",
            "add r3, r2, r3",
            "str r3, [r5, 0x40]",
            "ldrh r2, [r8, 4]",
            "cmp r2, 0x1f",
            "movhi r0, 0",
            "bhi 0x8035b04",
            "ldr r3, [fp]",
            "tst r3, 4",
            "bne 0x8035d14",
            "mov r0, r5",
            "bl sym.dhd_msgbuf_rxbuf_post.isra.11",
            "mov r0, 0",
            "add sp, sp, 0x34",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r1, [r3, 0x18]",
            "cmp r1, 0",
            "bne 0x80358f0",
            "add sl, r2, 0x100",
            "b 0x80358f4",
            "mov r1, r4",
            "ldr r0, [r5]",
            "movw sl, 0x30e",
            "bl 0x8035b2c",
            "ldrh r1, [r8, sl]",
            "ldr r3, [r4, 0x1c]",
            "cmp r1, 0",
            "ldreq r2, [fp]",
            "beq 0x8035c3c",
            "rsb r3, r3, r0",
            "ldr r2, [fp]",
            "uxth r3, r3",
            "cmp r3, r1",
            "bhs 0x8035b64",
            "tst r2, 1",
            "ldr ip, [0x08035d34]",
            "bne 0x8035c10",
            "cmp r3, r1",
            "blo 0x8035c3c",
            "tst r2, 2",
            "bne 0x8035d08",
            "movw sl, 0x30e",
            "mov r1, r4",
            "ldrh r2, [r8, sl]",
            "ldr r0, [r5]",
            "bl 0x8035b84",
            "ldr r3, [r5]",
            "mov r1, r4",
            "mov r0, r3",
            "str r3, [sp, 8]",
            "bl 0x8035b98",
            "ldr r3, [sp, 8]",
            "mov r1, r0",
            "ldrh r2, [r8, sl]",
            "mov ip, 0",
            "str r4, [sp]",
            "mov r0, r3",
            "mov r3, 2",
            "str ip, [sp, 4]",
            "bl 0x8035bbc",
            "cmp r0, 0",
            "str r0, [sp, 0x10]",
            "bne 0x8035be0",
            "ldr r3, [fp]",
            "tst r3, 1",
            "beq 0x8035be0",
            "ldr r0, [0x08035d38]",
            "bl 0x8035bdc",
            "movw sl, 0x30e",
            "ldr r0, [r5]",
            "ldrh r2, [r8, sl]",
            "mov r1, r4",
            "bl 0x8035bf0",
            "ldrh r3, [r8, sl]",
            "mov r2, 0",
            "ldr ip, [sp, 0x10]",
            "str r2, [r6, 0x1c]",
            "strh r3, [r6, 0x28]",
            "str ip, [r6, 0x18]",
            "b 0x8035a68",
            "mov r2, r3",
            "ldr r0, [0x08035d3c]",
            "str r3, [sp, 8]",
            "str ip, [sp, 0xc]",
            "bl 0x8035c20",
            "ldrh r1, [r8, sl]",
            "ldr ip, [sp, 0xc]",
            "ldr r3, [sp, 8]",
            "cmp r1, 0",
            "ldr r2, [ip]",
            "bne 0x8035b64",
            "mov r3, 0",
            "strh r3, [r6, 0x28]",
            "str r3, [r6, 0x1c]",
            "str r3, [r6, 0x18]",
            "b 0x8035a6c",
            "ldr ip, [sp, 0x18]",
            "bic sl, r0, 0x1f",
            "ldr fp, [0x08035d30]",
            "add r2, r0, ip",
            "ldr r3, [fp, 0x24]",
            "str r2, [sp, 0xc]",
            "blx r3",
            "ldr r2, [sp, 0xc]",
            "cmp sl, r2",
            "bhs 0x8035954",
            "str r4, [sp, 0x24]",
            "mov r4, r2",
            "add r0, sl, 0x40000000",
            "mcr p15, 0, sl, c7, c14, 1",
            "add sl, sl, 0x20",
            "dsb sy",
            "ldr r3, [fp, 0x30]",
            "blx r3",
            "cmp r4, sl",
            "bhi 0x8035c80",
            "b 0x8035950",
            "mov r0, r5",
            "ldr r1, [sp, 0x14]",
            "mov r2, 1",
            "bl 0x8035cb0",
            "b 0x8035aa4",
            "ldr r3, [0x08035d34]",
            "ldr r3, [r3]",
            "tst r3, 4",
            "bne 0x8035cf0",
            "ldr r3, [r5, 0xc4]",
            "mvn r0, 0x15",
            "add r3, r3, 1",
            "str r3, [r5, 0xc4]",
            "b 0x8035b04",
            "mov r2, r4",
            "ldrh r1, [r6, 0x2a]",
            "ldr r0, [0x08035d40]",
            "bl 0x8035ce8",
            "b 0x8035a78",
            "movw r2, 0x1228",
            "ldr r1, [0x08035d44]",
            "ldrh r3, [r8, 0x10]",
            "ldr r0, [0x08035d48]",
            "bl 0x8035d00",
            "b 0x8035cc8",
            "ldr r0, [0x08035d4c]",
            "bl 0x8035d0c",
            "b 0x8035b74",
            "ldr r1, [0x08035d44]",
            "ldr r0, [0x08035d50]",
            "bl 0x8035d1c",
            "b 0x8035af8",
            "ldr r0, [0x08035d38]",
            "bl 0x8035d28",
            "b 0x8035980"
        ]
    },
    "fcn.08037188": {
        "function_address": "0x08037188",
        "instructions": [
            "bl fcn.08037188",
            "cmp r0, 0",
            "beq 0x803721c",
            "and r2, r8, 0x7f",
            "add r2, r2, 0x600",
            "add r2, r2, 4",
            "add r2, r4, r2, lsl 2",
            "ldr r3, [r2, 4]",
            "cmp r3, 0",
            "beq 0x80371d4",
            "cmp r6, r3",
            "bne 0x80371c4",
            "b 0x80372fc",
            "cmp r6, r3",
            "beq 0x8037300",
            "add r2, r3, 0x10",
            "ldr r3, [r3, 0x10]",
            "cmp r3, 0",
            "bne 0x80371bc",
            "ldrb r3, [r5, 3]",
            "mov r1, r5",
            "mov r0, r6",
            "mov r2, 4",
            "and r5, r3, 0x7f",
            "add r5, r5, 0x600",
            "add r5, r5, 4",
            "add r5, r4, r5, lsl 2",
            "bl 0x80371f4",
            "ldr r8, [sp, 0x1c]",
            "ldr r3, [r5, 4]",
            "mov r6, r8",
            "str r3, [r8, 0x10]",
            "str r8, [r5, 4]",
            "ldr r5, [r8, 0x10]",
            "cmp r5, 0",
            "movwne sl, 0x1810",
            "bne 0x8037274",
            "mov r0, 0",
            "str r6, [r7]",
            "add sp, sp, 0x24",
            "pop {r4, r5, r6, r7, r8, sl, pc}",
            "ldr r2, [r5, 0x10]",
            "add r1, r5, 4",
            "mov r0, r4",
            "str r2, [r8, 0x10]",
            "str r3, [r5, 0x10]",
            "bl sym.wet_sta_remove_mac_entry",
            "mov r0, r5",
            "mov r1, 0x18",
            "bl 0x803724c",
            "ldr r6, [sp, 0x1c]",
            "mov r2, r8",
            "ldr r3, [r4, sl]",
            "str r3, [r5, 0xc]",
            "str r5, [r4, sl]",
            "ldr r5, [r2, 0x10]",
            "mov r8, r2",
            "cmp r5, 0",
            "beq 0x803721c",
            "mov r2, 4",
            "mov r1, r5",
            "mov r0, r6",
            "bl 0x8037280",
            "subs r3, r0, 0",
            "mov r2, r5",
            "bne 0x8037264",
            "b 0x803722c",
            "add r2, r2, 4",
            "ldr r3, [r6, 0x10]",
            "str r3, [r2]",
            "mov r3, 0",
            "str r3, [r6, 0x10]",
            "ldr r6, [sp, 0x1c]",
            "b 0x80371d4"
        ]
    },
    "sym.wet_sta_remove_mac_entry": {
        "function_address": "0x08036efc",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r5, r1",
            "ldrb r7, [r1, 4]",
            "sub sp, sp, 0x18",
            "mov r8, r0",
            "ldrb r2, [r1, 3]",
            "ldrb r3, [r1, 5]",
            "eor r7, r7, r2",
            "eor r7, r7, r3",
            "and r7, r7, 0x7f",
            "add r7, r7, 0x680",
            "add r7, r7, 4",
            "add r3, r0, r7, lsl 2",
            "ldr r6, [r3, 4]",
            "cmp r6, 0",
            "beq 0x8036f84",
            "mov r4, r6",
            "b 0x8036f58",
            "ldr r3, [r4, 0x14]",
            "mov r6, r4",
            "cmp r3, 0",
            "mov r4, r3",
            "beq 0x8036f84",
            "add r0, r4, 4",
            "mov r1, r5",
            "mov r2, 6",
            "bl 0x8036f64",
            "cmp r0, 0",
            "bne 0x8036f44",
            "cmp r4, r6",
            "beq 0x8036fa0",
            "ldr r3, [r4, 0x14]",
            "str r3, [r6, 0x14]",
            "b 0x8036f98",
            "ldr r3, [0x08036fd0]",
            "ldr r3, [r3]",
            "tst r3, 4",
            "mvneq r0, 0",
            "bne 0x8036fb0",
            "add sp, sp, 0x18",
            "pop {r4, r5, r6, r7, r8, pc}",
            "ldr r3, [r4, 0x14]",
            "add r7, r8, r7, lsl 2",
            "str r3, [r7, 4]",
            "b 0x8036f98",
            "add r1, sp, 6",
            "mov r0, r5",
            "bl 0x8036fb8",
            "mov r1, r0",
            "ldr r0, [0x08036fd4]",
            "bl 0x8036fc4",
            "mvn r0, 0",
            "b 0x8036f98"
        ]
    }
}