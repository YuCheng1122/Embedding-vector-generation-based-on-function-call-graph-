{
    "entry0": {
        "function_address": "0x000021c8",
        "instructions": [
            "push {r4, lr}",
            "ldr r4, [0x0000222c]",
            "ldr r3, [0x00002230]",
            "add r4, pc, r4",
            "ldrb r3, [r4, r3]",
            "cmp r3, 0",
            "popne {r4, pc}",
            "ldr r3, [0x00002234]",
            "ldr r3, [r4, r3]",
            "cmp r3, 0",
            "beq 0x2200",
            "ldr r3, [0x00002238]",
            "ldr r0, [r4, r3]",
            "bl sym.imp.__cxa_finalize",
            "ldr r3, [0x0000223c]",
            "ldr r3, [r4, r3]",
            "cmp r3, 0",
            "beq 0x221c",
            "ldr r0, [0x00002240]",
            "add r0, r4, r0",
            "bl loc.imp.__deregister_frame_info",
            "ldr r3, [0x00002230]",
            "mov r2, 1",
            "strb r2, [r4, r3]",
            "pop {r4, pc}"
        ]
    },
    "sym.imp.__cxa_finalize": {
        "function_address": "0x00001e68",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x2cc]!"
        ]
    },
    "loc.imp.__deregister_frame_info": {
        "function_address": "0x00001f28",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x24c]!"
        ]
    },
    "sym.zylog_print_debug": {
        "function_address": "0x000067b4",
        "instructions": [
            "push {r0, r1, r2, r3, r4, lr}",
            "ldr r2, [0x00006820]",
            "ldr r3, [0x00006824]",
            "add r2, pc, r2",
            "ldr r1, [0x00006828]",
            "ldr r0, [0x0000682c]",
            "add r3, r2, r3",
            "ldr ip, [0x00006830]",
            "ldr r3, [r3, 0x228]",
            "add r0, r2, r0",
            "ldr r2, [0x00006834]",
            "add r1, r3, r1",
            "str r1, [sp]",
            "ldr r1, [0x00006838]",
            "ldr r1, [r3, r1]",
            "str r1, [sp, 4]",
            "ldr r1, [0x0000683c]",
            "ldr r1, [r3, r1]",
            "str r1, [sp, 8]",
            "ldr r1, [r3, r2]",
            "sub r2, r2, 4",
            "ldr r2, [r3, r2]",
            "ldr r3, [r3, ip]",
            "bl sym.imp.printf",
            "mov r0, 0",
            "add sp, sp, 0x14",
            "ldm sp!, {pc}"
        ]
    },
    "sym.imp.printf": {
        "function_address": "0x00001dc0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x33c]!"
        ]
    },
    "sym.zylog_attach_buffer": {
        "function_address": "0x00006b6c",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r1, 0",
            "ldr r3, [0x00006bb4]",
            "mov r5, r0",
            "ldr r2, [0x00006bb8]",
            "add r3, pc, r3",
            "ldr r4, [r3, r2]",
            "mov r2, r1",
            "str r1, [r4]",
            "ldr r0, [r0]",
            "bl sym.imp.shmat",
            "cmp r0, 0",
            "str r0, [r5, 4]",
            "moveq r3, 1",
            "mvneq r0, 0",
            "streq r3, [r4]",
            "movne r0, 1",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.imp.shmat": {
        "function_address": "0x00001e44",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x2e4]!"
        ]
    },
    "sym.fini_zylog_identifier": {
        "function_address": "0x000064cc",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r5, 0",
            "ldr r4, [0x00006520]",
            "mov r8, 0x38",
            "ldr r7, [0x00006524]",
            "add r4, pc, r4",
            "ldr r6, [r4, r7]",
            "b 0x6514",
            "ldr r3, [r6, 0xc]",
            "cmp r3, 0",
            "beq 0x650c",
            "mul r3, r8, r5",
            "ldr r0, [r4, r7]",
            "add r3, r3, 0x18",
            "add r0, r0, r3",
            "bl sym.imp.regfree",
            "add r5, r5, 1",
            "add r6, r6, 0x38",
            "cmp r5, 0x1d",
            "bne 0x64ec",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "sym.imp.regfree": {
        "function_address": "0x0000215c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0xd4]!"
        ]
    },
    "sym.zylog_send_WTPlog2AC": {
        "function_address": "0x00006840",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x6a0",
            "sub sp, sp, 4",
            "ldr r4, [0x00006a80]",
            "mov fp, r3",
            "add r3, sp, 0x600",
            "str r2, [sp, 0xc]",
            "add r2, sp, 0x600",
            "ldr r6, [0x00006a84]",
            "add r4, pc, r4",
            "ldrh r2, [r2, 0xc8]",
            "add r8, sp, 0x410",
            "ldrh r3, [r3, 0xd0]",
            "add r8, r8, 0xc",
            "add r6, r4, r6",
            "stmib sp, {r0, r1}",
            "mov r0, r8",
            "str r2, [sp, 0x10]",
            "mov r1, r6",
            "mov r2, 2",
            "str r3, [sp, 0x14]",
            "add r7, sp, 0x20",
            "bl sym.imp.memcpy",
            "add r0, sp, 0x410",
            "mov r1, 0",
            "movw r2, 0x1fe",
            "add r0, r0, 0xe",
            "sub sl, r7, 4",
            "bl sym.imp.memset",
            "mov r1, r6",
            "mov r2, 2",
            "mov r0, sl",
            "bl sym.imp.memcpy",
            "mov r1, 0",
            "movw r2, 0x3fe",
            "sub r0, r7, 2",
            "bl sym.imp.memset",
            "mov r0, 1",
            "mov r1, 2",
            "mov r2, 0",
            "bl sym.imp.socket",
            "cmn r0, 1",
            "mov r5, r0",
            "bne 0x6914",
            "ldr r3, [0x00006a88]",
            "add r2, r6, 0x200",
            "ldr r1, [0x00006a8c]",
            "ldr r3, [r4, r3]",
            "add r1, r4, r1",
            "ldr r0, [r3]",
            "bl sym.imp.fprintf",
            "mov r0, r5",
            "b 0x6a74",
            "ldr r1, [0x00006a90]",
            "add sb, sp, 0x6a0",
            "mov r2, 1",
            "strh r2, [sb, -0x84]!",
            "add r0, sb, 2",
            "add r1, r4, r1",
            "bl sym.imp.strcpy",
            "mov r0, r5",
            "mov r1, sb",
            "mov r2, 0x6e",
            "bl sym.imp.connect",
            "cmn r0, 1",
            "bne 0x6974",
            "mov r0, r5",
            "bl sym.imp.close",
            "ldr r3, [0x00006a88]",
            "add r2, r6, 0x200",
            "ldr r1, [0x00006a94]",
            "ldr r3, [r4, r3]",
            "add r1, r4, r1",
            "ldr r0, [r3]",
            "bl sym.imp.fprintf",
            "mvn r0, 1",
            "b 0x6a74",
            "add sb, sp, 0x680",
            "mov r1, 0",
            "add sb, sb, 0xc",
            "mov r2, 0x10",
            "mov r0, sb",
            "bl sym.imp.memset",
            "ldr r3, [sp, 4]",
            "mov r1, 0x200",
            "ldr r2, [sp, 8]",
            "mov r0, r8",
            "str fp, [sp, 0x690]",
            "strb r3, [sp, 0x68c]",
            "ldr r3, [sp, 0xc]",
            "strb r2, [sp, 0x68d]",
            "ldr r2, [sp, 0x10]",
            "strb r3, [sp, 0x68e]",
            "add r3, sp, 0x600",
            "ldr fp, [0x00006a98]",
            "strh r2, [r3, 0x98]",
            "ldr r3, [sp, 0x6cc]",
            "ldr r2, [sp, 0x14]",
            "add fp, r4, fp",
            "str r3, [sp, 0x694]",
            "add r3, sp, 0x600",
            "strh r2, [r3, 0x9a]",
            "add r3, sp, 0x6d0",
            "add r3, r3, 0xc",
            "ldr r2, [sp, 0x6d8]",
            "str r3, [sp, 0x69c]",
            "bl sym.imp.vsnprintf",
            "ldr r3, [0x00006a9c]",
            "mov r1, 0x40",
            "mov r2, fp",
            "mov r0, sl",
            "add r3, r4, r3",
            "bl sym.imp.snprintf",
            "mov r1, sb",
            "mov r2, 0x10",
            "add r0, r7, 0xe",
            "bl sym.imp.memcpy",
            "mov r1, 0x200",
            "mov r2, fp",
            "mov r3, r8",
            "add r0, r7, 0x1e",
            "bl sym.imp.snprintf",
            "mov r0, r8",
            "bl sym.imp.strlen",
            "mov r1, sl",
            "add r2, r0, 0x23",
            "mov r3, 0",
            "mov r0, r5",
            "bl sym.imp.send",
            "cmp r0, 0",
            "bge 0x6a68",
            "ldr r3, [0x00006a88]",
            "add r2, r6, 0x200",
            "ldr r1, [0x00006aa0]",
            "ldr r3, [r4, r3]",
            "add r1, r4, r1",
            "ldr r0, [r3]",
            "bl sym.imp.fprintf",
            "mov r0, r5",
            "bl sym.imp.close",
            "mov r0, 0",
            "add sp, sp, 0x2a4",
            "add sp, sp, 0x400",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.imp.memcpy": {
        "function_address": "0x00001e50",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x2dc]!"
        ]
    },
    "sym.imp.memset": {
        "function_address": "0x00002024",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x1a4]!"
        ]
    },
    "sym.imp.socket": {
        "function_address": "0x00001e98",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x2ac]!"
        ]
    },
    "sym.imp.fprintf": {
        "function_address": "0x00001eec",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x274]!"
        ]
    },
    "sym.imp.strcpy": {
        "function_address": "0x00001d9c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x354]!"
        ]
    },
    "sym.imp.connect": {
        "function_address": "0x00001dcc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x334]!"
        ]
    },
    "sym.imp.close": {
        "function_address": "0x000021a4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0xa4]!"
        ]
    },
    "sym.imp.vsnprintf": {
        "function_address": "0x00001e8c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x2b4]!"
        ]
    },
    "sym.imp.snprintf": {
        "function_address": "0x00001dfc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x314]!"
        ]
    },
    "sym.imp.strlen": {
        "function_address": "0x0000212c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0xf4]!"
        ]
    },
    "sym.imp.send": {
        "function_address": "0x00001ebc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x294]!"
        ]
    },
    "sym.__zylog2": {
        "function_address": "0x000051d8",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r0",
            "ldr r5, [0x00005d10]",
            "sub sp, sp, 0x1a4",
            "ldr r3, [0x00005d14]",
            "add r5, pc, r5",
            "add r3, r5, r3",
            "ldr r3, [r3, 0x2cc]",
            "cmp r3, 0",
            "beq 0x5208",
            "cmp r3, 1",
            "b 0x5210",
            "bl rsym.zylog_init",
            "cmp r0, 0",
            "bne 0x5d00",
            "ldrb r2, [r4, 0x53a]",
            "ldr r3, [0x00005d14]",
            "sbfx r2, r2, 3, 1",
            "add r3, r5, r3",
            "str r2, [r3, 8]",
            "ldrb r3, [r4, 0x53a]",
            "and r3, r3, 8",
            "uxtb r3, r3",
            "cmp r3, 0",
            "beq 0x54a0",
            "ldr r3, [r4, 0x53c]",
            "add sl, sp, 0xac",
            "add sb, sp, 0xec",
            "tst r3, 4",
            "beq 0x52ac",
            "ldr r6, [0x00005d18]",
            "add r7, sp, 0x16c",
            "mov r1, r4",
            "mov r2, r7",
            "mov r3, 0x2e",
            "add r8, sp, 0x50",
            "mov r0, 0xa",
            "add r6, r5, r6",
            "bl sym.imp.inet_ntop",
            "add r1, r4, 0x10",
            "mov r2, r8",
            "mov r3, 0x2e",
            "mov r0, 0xa",
            "bl sym.imp.inet_ntop",
            "mov r1, r6",
            "mov r2, r7",
            "mov r0, sl",
            "ldrh r3, [r4, 0x28]",
            "bl sym.imp.sprintf",
            "mov r0, sb",
            "mov r1, r6",
            "mov r2, r8",
            "b 0x52e4",
            "ldr r6, [0x00005d1c]",
            "ldr r0, [r4, 0x20]",
            "bl sym.imp.inet_ntoa",
            "add r6, r5, r6",
            "mov r2, r0",
            "mov r1, r6",
            "ldrh r3, [r4, 0x28]",
            "mov r0, sl",
            "bl sym.imp.sprintf",
            "ldr r0, [r4, 0x24]",
            "bl sym.imp.inet_ntoa",
            "mov r1, r6",
            "mov r2, r0",
            "mov r0, sb",
            "ldrh r3, [r4, 0x2a]",
            "bl sym.imp.sprintf",
            "ldr r3, [0x00005d14]",
            "add r3, r5, r3",
            "ldr r3, [r3, 8]",
            "cmp r3, 0",
            "beq 0x5364",
            "ldrb r0, [r4, 0x532]",
            "ldr r3, [0x00005d20]",
            "ldrb r2, [r4, 0x530]",
            "str r0, [sp]",
            "add r0, sp, 0xac",
            "str r0, [sp, 4]",
            "add r0, sp, 0xec",
            "str r0, [sp, 8]",
            "add r0, r4, 0x2c",
            "str r0, [sp, 0xc]",
            "add r0, r4, 0x420",
            "add r0, r0, 0xc",
            "ldr r1, [r5, r3]",
            "str r0, [sp, 0x10]",
            "add r0, r4, 0x440",
            "add r0, r0, 0xc",
            "ldrb r3, [r4, 0x531]",
            "str r0, [sp, 0x14]",
            "ldrb r0, [r4, 0x53a]",
            "sbfx r0, r0, 2, 1",
            "str r0, [sp, 0x18]",
            "ldr r0, [r1]",
            "ldr r1, [0x00005d24]",
            "add r1, r5, r1",
            "bl sym.imp.fprintf",
            "ldrb r3, [r4, 0x531]",
            "cmp r3, 0x11",
            "bhi 0x538c",
            "cmp r3, 0x10",
            "bhs 0x5450",
            "cmp r3, 8",
            "beq 0x53f8",
            "cmp r3, 0xa",
            "bne 0x54a0",
            "b 0x5398",
            "cmp r3, 0x26",
            "bne 0x54a0",
            "b 0x53f8",
            "ldr r3, [0x00005d14]",
            "add r3, r5, r3",
            "ldr r3, [r3, 8]",
            "cmp r3, 0",
            "beq 0x54a0",
            "ldr r1, [r4, 0x4a0]",
            "ldr r3, [0x00005d20]",
            "str r1, [sp]",
            "ldr r1, [r4, 0x4a4]",
            "ldr r2, [r5, r3]",
            "add r3, r4, 0x4a0",
            "add r3, r3, 8",
            "str r1, [sp, 4]",
            "add r1, r4, 0x500",
            "add r1, r1, 0xc",
            "str r1, [sp, 8]",
            "movw r1, 0x50a",
            "ldrh r1, [r4, r1]",
            "str r1, [sp, 0xc]",
            "ldr r1, [0x00005d28]",
            "ldr r0, [r2]",
            "ldr r2, [r4, 0x49c]",
            "add r1, r5, r1",
            "b 0x5448",
            "ldr r3, [0x00005d14]",
            "add r3, r5, r3",
            "ldr r3, [r3, 8]",
            "cmp r3, 0",
            "beq 0x54a0",
            "ldr r3, [0x00005d20]",
            "add r2, r4, 0x490",
            "ldr r0, [r4, 0x4cc]",
            "add r2, r2, 0xc",
            "ldr r1, [r5, r3]",
            "add r3, r4, 0x4b0",
            "str r0, [sp]",
            "add r0, r4, 0x4d0",
            "str r0, [sp, 4]",
            "add r0, r4, 0x4e0",
            "str r0, [sp, 8]",
            "add r3, r3, 0xc",
            "ldr r0, [r1]",
            "ldr r1, [0x00005d2c]",
            "add r1, r5, r1",
            "bl sym.imp.fprintf",
            "b 0x54a0",
            "ldr r3, [0x00005d14]",
            "add r3, r5, r3",
            "ldr r3, [r3, 8]",
            "cmp r3, 0",
            "beq 0x54a0",
            "ldr r3, [0x00005d20]",
            "add r0, r4, 0x4d0",
            "add r0, r0, 0xc",
            "add r2, r4, 0x4b0",
            "str r0, [sp]",
            "add r0, r4, 0x520",
            "ldr r1, [r5, r3]",
            "add r3, r4, 0x490",
            "str r0, [sp, 4]",
            "add r2, r2, 0xc",
            "add r3, r3, 0xc",
            "ldr r0, [r1]",
            "ldr r1, [0x00005d30]",
            "add r1, r5, r1",
            "bl sym.imp.fprintf",
            "ldr r7, [0x00005d14]",
            "add r7, r5, r7",
            "add sl, r7, 0xc",
            "mov r0, sl",
            "bl rsym.zylog_dolock",
            "cmn r0, 1",
            "moveq r6, r0",
            "beq 0x5d04",
            "ldr r8, [r7, 0x228]",
            "ldr r6, [0x00005d34]",
            "bl sym.imp.getpid",
            "ldr r3, [r7, 0x228]",
            "ldr r1, [0x00005d38]",
            "str r0, [r8, r6]",
            "add r8, sp, 0x12c",
            "mov r0, r8",
            "ldr r2, [r3, r6]",
            "add r1, r5, r1",
            "bl sym.imp.sprintf",
            "ldr r1, [0x00005d3c]",
            "mov r0, r8",
            "add r1, r5, r1",
            "bl sym.imp.fopen",
            "subs r8, r0, 0",
            "bne 0x5530",
            "ldr r3, [r7, 0x228]",
            "mov r0, sl",
            "ldr r2, [0x00005d40]",
            "ldr r1, [r3, r6]",
            "str r1, [r3, r2]",
            "sub r2, r2, 4",
            "ldr r1, [r3, r2]",
            "add r1, r1, 1",
            "str r1, [r3, r2]",
            "bl rsym.zylog_unlock",
            "b 0x5d00",
            "ldr r3, [r7, 0x228]",
            "mov r1, 0x40",
            "ldr r0, [0x00005d44]",
            "mov r2, r8",
            "add r0, r3, r0",
            "bl sym.imp.fgets",
            "mov r0, r8",
            "bl sym.imp.fclose",
            "ldr r3, [r7, 0x228]",
            "ldr r1, [0x00005d48]",
            "ldr r2, [r3, r1]",
            "movw r1, 0x544",
            "lsl r2, r2, 0x17",
            "lsr r2, r2, 0x17",
            "mla r3, r1, r2, r3",
            "ldrb r3, [r3, 0x53a]",
            "tst r3, 3",
            "beq 0x5590",
            "mov r0, 0",
            "mov r1, r0",
            "bl fcn.00002cb0",
            "mov r0, 1",
            "mov r1, 0",
            "bl fcn.00002cb0",
            "add r6, r4, 0x2c",
            "mov r0, r6",
            "bl sym.imp.strlen",
            "subs r3, r0, 0",
            "ble 0x55bc",
            "add r3, r4, r3",
            "add r3, r3, 0x27",
            "ldrsb r2, [r3, 4]",
            "cmp r2, 0xa",
            "moveq r2, 0",
            "strbeq r2, [r3, 4]",
            "ldr r3, [0x00005d14]",
            "ldrb r7, [r4, 0x530]",
            "add r2, r5, r3",
            "ldr r3, [r5, r3]",
            "ldrsb r3, [r3, r7]",
            "cmp r3, 1",
            "beq 0x55e8",
            "cmp r3, 2",
            "movne r6, 0",
            "bne 0x5a34",
            "b 0x560c",
            "ldrb r3, [r4, 0x532]",
            "cmp r3, 6",
            "bls 0x562c",
            "ldrb r6, [r4, 0x53a]",
            "and r6, r6, 4",
            "uxtb r6, r6",
            "cmp r6, 0",
            "beq 0x5a34",
            "b 0x562c",
            "ldrb r3, [r4, 0x532]",
            "cmp r3, 6",
            "bls 0x562c",
            "ldrb r3, [r4, 0x53a]",
            "and r3, r3, 4",
            "uxtb r3, r3",
            "cmp r3, 0",
            "beq 0x5644",
            "mov r0, r4",
            "bl fcn.00004924",
            "cmp r0, 0",
            "mov r6, r0",
            "bne 0x5820",
            "b 0x5a34",
            "ldr r2, [r2, 0x228]",
            "mov r0, r6",
            "ldr r3, [0x00005d4c]",
            "ldrd r8, sb, [r2, r3]",
            "bl sym.imp.strlen",
            "cmp r0, 0",
            "str r0, [sp, 0x34]",
            "bne 0x5688",
            "mov r0, r7",
            "bl rsym.zylog_getid_by_source",
            "subs r3, r0, 0",
            "beq 0x5688",
            "ldr r1, [0x00005d50]",
            "mov r0, r6",
            "ldr r2, [r3, 4]",
            "add r1, r5, r1",
            "bl sym.imp.sprintf",
            "add r2, r4, 0x530",
            "mov r3, r4",
            "add r2, r2, 4",
            "mov fp, 0",
            "b 0x56a4",
            "ldr r1, [r3], 4",
            "add fp, fp, r1",
            "cmp r3, r2",
            "bne 0x569c",
            "ldr r6, [0x00005d14]",
            "str fp, [r4, 0x540]",
            "ldr sl, [r5, r6]",
            "ldr r3, [sl, 0x824]",
            "cmp r3, 0",
            "beq 0x57b8",
            "ldrb r3, [r4, 0x53a]",
            "and r3, r3, 0x10",
            "uxtb r3, r3",
            "cmp r3, 0",
            "beq 0x577c",
            "b 0x57b8",
            "mvn r0, 0",
            "mvn r1, 0",
            "adds r8, r8, r0",
            "ldr r2, [r6, 0x228]",
            "adc sb, sb, r1",
            "lsl r1, r8, 0x16",
            "ldr r0, [r4, 0x534]",
            "lsr r1, r1, 0x16",
            "mul r1, ip, r1",
            "add r7, r2, r1",
            "add r3, r7, 0xa8000",
            "add r3, r3, 0xd30",
            "ldr r3, [r3, 4]",
            "rsb r0, r3, r0",
            "ldr r3, [sl, 0x828]",
            "cmp r0, r3",
            "bhi 0x57b8",
            "add r3, r7, 0xa8000",
            "add r3, r3, 0xd40",
            "ldr r3, [r3]",
            "cmp r3, fp",
            "bne 0x5798",
            "add r1, r1, 0xa8000",
            "str ip, [sp, 0x24]",
            "add r0, r1, 0x800",
            "mov r1, r4",
            "add r0, r2, r0",
            "movw r2, 0x534",
            "bl sym.imp.memcmp",
            "cmp r0, 0",
            "ldr ip, [sp, 0x24]",
            "bne 0x5798",
            "ldr r3, [0x00005d54]",
            "ldrh r2, [r7, r3]",
            "cmp r2, 0xfe",
            "addls r2, r2, 1",
            "movls r6, r0",
            "strhls r2, [r7, r3]",
            "bhi 0x57b8",
            "b 0x5a34",
            "ldr r2, [0x00005d58]",
            "mvn r3, 0",
            "add r6, r5, r6",
            "movw ip, 0x544",
            "adds r2, r2, r8",
            "adc r3, r3, sb",
            "strd r2, r3, [sp, 0x28]",
            "orrs r3, r8, sb",
            "beq 0x57b8",
            "ldr r0, [sp, 0x28]",
            "cmp r8, r0",
            "bne 0x56dc",
            "ldr r1, [sp, 0x2c]",
            "cmp sb, r1",
            "bne 0x56dc",
            "movw r3, 0x538",
            "mov r2, 1",
            "strh r2, [r4, r3]",
            "movw r2, 0x544",
            "ldr r3, [0x00005d14]",
            "mov r1, r4",
            "ldr r7, [0x00005d4c]",
            "add r3, r5, r3",
            "ldr r6, [r3, 0x228]",
            "ldr r0, [r6, r7]",
            "add r3, r6, 0xa8000",
            "add r3, r3, 0x800",
            "lsl r0, r0, 0x16",
            "lsr r0, r0, 0x16",
            "mla r0, r2, r0, r3",
            "bl sym.imp.memcpy",
            "ldrd r2, r3, [r6, r7]",
            "mov r0, 1",
            "mov r1, 0",
            "adds r2, r2, r0",
            "adc r3, r3, r1",
            "strd r2, r3, [r6, r7]",
            "ldr r6, [sp, 0x34]",
            "cmp r6, 0",
            "moveq r6, 1",
            "b 0x5a34",
            "ldr r8, [0x00005d14]",
            "mov r1, 0",
            "ldr r3, [0x00005d48]",
            "mov r7, r1",
            "ldr fp, [0x00005d5c]",
            "mov sb, r5",
            "add r8, r5, r8",
            "str r1, [sp, 0x28]",
            "ldr r0, [r8, 0x228]",
            "str r6, [sp, 0x4c]",
            "ldr r2, [r0, r3]",
            "str r0, [sp, 0x34]",
            "lsl r3, r2, 0x17",
            "ldr r2, [0x00005d20]",
            "sub r3, r3, 0x800000",
            "lsr r3, r3, 0x17",
            "str r2, [sp, 0x44]",
            "str r3, [sp, 0x38]",
            "ldr r3, [0x00005d60]",
            "add r3, r5, r3",
            "str r3, [sp, 0x3c]",
            "ldr r3, [0x00005d64]",
            "add r3, r5, r3",
            "str r3, [sp, 0x40]",
            "ldr r3, [0x00005d68]",
            "add r3, r5, r3",
            "str r3, [sp, 0x48]",
            "ldr r3, [r8]",
            "mov r2, 0x2ac",
            "mla r3, r2, r7, r3",
            "ldrsb r2, [r3, 0x94]",
            "cmp r2, 0",
            "beq 0x59f8",
            "ldrb r2, [r4, 0x530]",
            "add r3, r3, r2",
            "ldrb r3, [r3, 0x2ea]",
            "tst r3, 1",
            "ldrne r0, [sp, 0x28]",
            "movne r2, 1",
            "orrne r2, r0, r2, lsl r7",
            "uxtbne r2, r2",
            "strne r2, [sp, 0x28]",
            "ldrb r2, [r4, 0x532]",
            "cmp r2, 2",
            "bls 0x58e8",
            "ldrb r2, [r4, 0x53a]",
            "and r2, r2, 4",
            "uxtb r2, r2",
            "cmp r2, 0",
            "beq 0x59f8",
            "ldr r2, [r8, 0x228]",
            "ldr r1, [r2, fp]",
            "cmp r1, 0x100000",
            "bhi 0x59f8",
            "tst r3, 2",
            "beq 0x59f8",
            "ldr r5, [0x00005d6c]",
            "add sl, sp, 0xec",
            "mov r0, sl",
            "add r5, r7, r5",
            "ldr r3, [r2, r5, lsl 2]",
            "add r1, r3, 1",
            "str r1, [r2, r5, lsl 2]",
            "mov r2, r7",
            "ldr r1, [sp, 0x3c]",
            "bl sym.imp.sprintf",
            "mov r0, sl",
            "mov r1, 0x41",
            "mov r2, 0x100",
            "bl sym.imp.open",
            "subs r6, r0, 0",
            "bge 0x5968",
            "ldr r3, [r8, 8]",
            "cmp r3, 0",
            "beq 0x59f8",
            "ldr r1, [sp, 0x44]",
            "mov r2, sl",
            "ldr r3, [sb, r1]",
            "ldr r1, [sp, 0x48]",
            "ldr r0, [r3]",
            "bl sym.imp.fprintf",
            "b 0x59f8",
            "mov r2, r6",
            "mov r1, 1",
            "mov r0, r7",
            "bl fcn.00002498",
            "mov r0, r6",
            "bl fcn.000022b8",
            "mov r2, r6",
            "mov r1, 1",
            "mov r0, r4",
            "bl fcn.00002ae8",
            "mov r0, r6",
            "add r6, sp, 0xac",
            "bl sym.imp.close",
            "ldr r3, [r8, 0x228]",
            "mov r2, r7",
            "ldr r1, [sp, 0x40]",
            "mov r0, r6",
            "ldr r3, [r3, r5, lsl 2]",
            "sub r3, r3, 1",
            "bl sym.imp.sprintf",
            "mov r1, r6",
            "mov r0, sl",
            "bl sym.imp.rename",
            "add r1, sp, 0x50",
            "mov r0, r6",
            "bl sym.imp.stat",
            "ldr r3, [r8, 0x228]",
            "ldr r1, [sp, 0x7c]",
            "ldr r2, [r3, fp]",
            "add r2, r1, r2",
            "str r2, [r3, fp]",
            "ldr r2, [0x00005d70]",
            "ldr r1, [r3, r2]",
            "add r1, r1, 1",
            "str r1, [r3, r2]",
            "bl fcn.000026f8",
            "add r7, r7, 1",
            "cmp r7, 2",
            "bne 0x588c",
            "ldr r2, [sp, 0x38]",
            "movw r3, 0x544",
            "ldr r0, [sp, 0x34]",
            "mov r5, sb",
            "ldr r1, [sp, 0x28]",
            "ldr r6, [sp, 0x4c]",
            "mla r3, r3, r2, r0",
            "add r3, r3, 0x530",
            "add r3, r3, 8",
            "ldrb r2, [r3, 2]",
            "bfi r2, r1, 0, 2",
            "strb r2, [r3, 2]",
            "ldr r7, [0x00005d14]",
            "mov sl, 0",
            "ldr r0, [0x00005d20]",
            "mov r8, sl",
            "mov sb, sl",
            "mov r2, 0x31",
            "add r7, r5, r7",
            "str r2, [sp, 0x28]",
            "add r3, r7, 0x28c",
            "str r0, [sp, 0x34]",
            "str r3, [sp, 0x38]",
            "ldr r3, [0x00005d74]",
            "str r6, [sp, 0x48]",
            "add r3, r5, r3",
            "str r3, [sp, 0x3c]",
            "ldr r3, [0x00005d78]",
            "add r3, r5, r3",
            "str r3, [sp, 0x40]",
            "ldr r3, [0x00005d7c]",
            "add r3, r5, r3",
            "str r3, [sp, 0x44]",
            "ldr r3, [r7]",
            "mov r2, 0x8c",
            "mla r2, r2, sb, r3",
            "ldrb r1, [r2, 0x5ec]",
            "cmp r1, 0",
            "beq 0x5c18",
            "ldrb r1, [r4, 0x530]",
            "add r2, r2, r1",
            "ldrb r2, [r2, 0x630]",
            "cmp r2, 0",
            "beq 0x5c18",
            "cmp r2, 1",
            "bne 0x5ac8",
            "ldrb r2, [r4, 0x532]",
            "cmp r2, 7",
            "beq 0x5c18",
            "mov r2, 0x8c",
            "mla r3, r2, sb, r3",
            "ldrb r2, [r3, 0x62e]",
            "add r1, r3, 0x620",
            "add r1, r1, 8",
            "sxtb r2, r2",
            "cmp r2, 0",
            "beq 0x5af4",
            "cmp r2, 1",
            "bne 0x5b30",
            "b 0x5b08",
            "ldrsb r1, [r1, 7]",
            "add r2, sp, 0x19c",
            "mov r0, r4",
            "bl fcn.00004b18",
            "b 0x5b18",
            "ldrsb r1, [r1, 7]",
            "add r2, sp, 0x19c",
            "mov r0, r4",
            "bl fcn.00004e30",
            "add r3, r7, 0x2dc",
            "mov r6, r0",
            "ldr fp, [r3, sl]",
            "cmp fp, 0",
            "bge 0x5b54",
            "b 0x5ba0",
            "ldr r3, [r7, 8]",
            "cmp r3, 0",
            "beq 0x5c18",
            "ldr r1, [sp, 0x34]",
            "ldr r3, [r5, r1]",
            "ldr r1, [sp, 0x44]",
            "ldr r0, [r3]",
            "bl sym.imp.fprintf",
            "b 0x5c18",
            "mov r0, fp",
            "mov r1, r6",
            "ldr r2, [sp, 0x19c]",
            "bl sym.imp.write",
            "ldr r3, [sp, 0x19c]",
            "mov r8, r0",
            "cmp r0, r3",
            "beq 0x5c18",
            "ldr r2, [r7, 8]",
            "cmp r2, 0",
            "beq 0x5b98",
            "ldr r0, [sp, 0x34]",
            "ldr r1, [sp, 0x40]",
            "ldr r2, [r5, r0]",
            "ldr r0, [r2]",
            "mov r2, r8",
            "bl sym.imp.fprintf",
            "mov r0, fp",
            "bl sym.imp.close",
            "ldr r1, [sp, 0x28]",
            "ldr r0, [sp, 0x38]",
            "strb r1, [r7, 0x29b]",
            "mov r1, 1",
            "bl sym.imp.open",
            "cmp r0, 0",
            "add r3, r7, 0x2dc",
            "mov fp, r0",
            "str r0, [r3, sl]",
            "blt 0x5be4",
            "mov r1, r6",
            "ldr r2, [sp, 0x19c]",
            "bl sym.imp.write",
            "ldr r3, [sp, 0x19c]",
            "mov r8, r0",
            "cmp r0, r3",
            "beq 0x5c18",
            "ldr r3, [r7, 8]",
            "cmp r3, 0",
            "beq 0x5c18",
            "ldr r2, [sp, 0x34]",
            "str r8, [sp, 4]",
            "ldr r1, [sp, 0x3c]",
            "ldr r3, [r5, r2]",
            "ldr r2, [sp, 0x19c]",
            "str r2, [sp]",
            "mov r2, sb",
            "ldr r0, [r3]",
            "mov r3, fp",
            "bl sym.imp.fprintf",
            "ldr r0, [sp, 0x28]",
            "add sb, sb, 1",
            "cmp sb, 4",
            "add sl, sl, 4",
            "add r3, r0, 1",
            "uxtb r3, r3",
            "str r3, [sp, 0x28]",
            "bne 0x5a88",
            "ldr r3, [0x00005d14]",
            "ldr r6, [sp, 0x48]",
            "add r7, r5, r3",
            "ldr r3, [r5, r3]",
            "ldrsb r2, [r3, 0x48]",
            "cmp r2, 0",
            "beq 0x5cec",
            "ldrb r1, [r4, 0x530]",
            "ldrb r2, [r4, 0x532]",
            "add r3, r3, r1",
            "ldrsb r3, [r3, 0x49]",
            "cmp r2, r3",
            "bgt 0x5cec",
            "ldr r3, [r7, 0x2ec]",
            "cmp r3, 0",
            "bge 0x5cc4",
            "ldr r8, [0x00005d80]",
            "mov r1, 1",
            "add r8, r5, r8",
            "mov r0, r8",
            "bl sym.imp.open",
            "cmp r0, 0",
            "str r0, [r7, 0x2ec]",
            "bge 0x5cc4",
            "ldr r3, [r7, 8]",
            "cmp r3, 0",
            "beq 0x5cec",
            "ldr r3, [0x00005d20]",
            "mov r2, r8",
            "ldr r1, [0x00005d84]",
            "ldr r3, [r5, r3]",
            "add r1, r5, r1",
            "ldr r0, [r3]",
            "bl sym.imp.fprintf",
            "b 0x5cec",
            "ldrb r1, [r4, 0x530]",
            "add r2, sp, 0x19c",
            "mov r0, r4",
            "bl fcn.00004b18",
            "ldr r3, [0x00005d14]",
            "mov r1, r0",
            "ldr r2, [sp, 0x19c]",
            "add r3, r5, r3",
            "ldr r0, [r3, 0x2ec]",
            "bl sym.imp.write",
            "ldr r3, [0x00005d14]",
            "add r5, r5, r3",
            "add r0, r5, 0xc",
            "bl rsym.zylog_unlock",
            "b 0x5d04",
            "mvn r6, 0",
            "mov r0, r6",
            "add sp, sp, 0x1a4",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "rsym.zylog_init": {
        "function_address": "0x000020e4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x124]!"
        ]
    },
    "sym.imp.inet_ntop": {
        "function_address": "0x00002120",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0xfc]!"
        ]
    },
    "sym.imp.sprintf": {
        "function_address": "0x00002084",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x164]!"
        ]
    },
    "sym.imp.inet_ntoa": {
        "function_address": "0x0000203c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x194]!"
        ]
    },
    "rsym.zylog_dolock": {
        "function_address": "0x000020f0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x11c]!"
        ]
    },
    "sym.imp.getpid": {
        "function_address": "0x00001e20",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x2fc]!"
        ]
    },
    "sym.imp.fopen": {
        "function_address": "0x0000200c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x1b4]!"
        ]
    },
    "rsym.zylog_unlock": {
        "function_address": "0x00002144",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0xe4]!"
        ]
    },
    "sym.imp.fgets": {
        "function_address": "0x00001e38",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x2ec]!"
        ]
    },
    "sym.imp.fclose": {
        "function_address": "0x00002030",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x19c]!"
        ]
    },
    "fcn.00002cb0": {
        "function_address": "0x00002cb0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov sl, 1",
            "ldr r4, [0x00002f78]",
            "lsl sl, sl, r0",
            "sub sp, sp, 0xf4",
            "ldr r8, [0x00002f7c]",
            "mov r6, r0",
            "add r4, pc, r4",
            "ldr r3, [0x00002f80]",
            "str r1, [sp, 0xc]",
            "uxtb sl, sl",
            "add r8, r4, r8",
            "ldr r2, [r8, 0x228]",
            "ldr r3, [r2, r3]",
            "cmp r3, 0x100000",
            "movhi r5, 0",
            "bhi 0x2f6c",
            "ldr r1, [0x00002f84]",
            "add r5, sp, 0xb0",
            "add r1, r0, r1",
            "ldr r3, [r2, r1, lsl 2]",
            "add r0, r3, 1",
            "str r0, [r2, r1, lsl 2]",
            "mov r2, r6",
            "ldr r1, [0x00002f88]",
            "mov r0, r5",
            "add r1, r4, r1",
            "bl sym.imp.sprintf",
            "mov r0, r5",
            "mov r1, 0x41",
            "mov r2, 0x100",
            "bl sym.imp.open",
            "subs r7, r0, 0",
            "bge 0x2d64",
            "ldr r3, [r8, 8]",
            "cmp r3, 0",
            "beq 0x2f68",
            "ldr r3, [0x00002f8c]",
            "mov r2, r5",
            "ldr r1, [0x00002f90]",
            "ldr r3, [r4, r3]",
            "add r1, r4, r1",
            "ldr r0, [r3]",
            "bl sym.imp.fprintf",
            "b 0x2f68",
            "mov r2, r7",
            "mov r0, r6",
            "mov r1, 0",
            "bl fcn.00002498",
            "mov r0, r7",
            "bl fcn.000022b8",
            "ldr r3, [0x00002f94]",
            "ldr r2, [r8, 0x228]",
            "add r2, r2, r3",
            "ldrd r2, r3, [r2]",
            "cmp r3, 0",
            "bne 0x2da4",
            "cmp r2, 0x200",
            "movlo r0, 0",
            "movlo r1, 0",
            "blo 0x2db4",
            "ldr r0, [0x00002f98]",
            "mvn r1, 0",
            "adds r0, r0, r2",
            "adc r1, r1, r3",
            "ldr r3, [0x00002f7c]",
            "mov r5, 0",
            "strd r0, r1, [sp]",
            "sxtb r1, sl",
            "mvn fp, sl",
            "ldr sb, [0x00002f94]",
            "add r3, r4, r3",
            "mov sl, r6",
            "mov r8, r5",
            "str r3, [sp, 0x10]",
            "str r1, [sp, 0x14]",
            "mov r6, r4",
            "b 0x2e7c",
            "ldr r2, [sp]",
            "movw r0, 0x544",
            "ldr r1, [sp, 0xc]",
            "lsl r4, r2, 0x17",
            "cmp r1, 0",
            "lsr r4, r4, 0x17",
            "mla r4, r0, r4, r3",
            "bne 0x2e4c",
            "ldrb r3, [r4, 0x53a]",
            "ldr r2, [sp, 0x14]",
            "sbfx r3, r3, 0, 2",
            "tst r2, r3",
            "beq 0x2e64",
            "add r8, r8, 1",
            "mov r2, r7",
            "mov r0, r4",
            "mov r1, r8",
            "bl fcn.00002ae8",
            "ldrb r3, [r4, 0x53a]",
            "add r5, r5, 1",
            "sbfx r2, r3, 0, 2",
            "and r2, fp, r2",
            "bfi r3, r2, 0, 2",
            "strb r3, [r4, 0x53a]",
            "b 0x2e64",
            "add r8, r8, 1",
            "add r5, r5, 1",
            "mov r0, r4",
            "mov r1, r8",
            "mov r2, r7",
            "bl fcn.00002ae8",
            "ldrd r0, r1, [sp]",
            "mov r2, 1",
            "mov r3, 0",
            "adds r0, r0, r2",
            "adc r1, r1, r3",
            "strd r0, r1, [sp]",
            "ldr r0, [sp, 0x10]",
            "ldr r1, [sp, 4]",
            "ldr r3, [r0, 0x228]",
            "add r2, r3, 0x1f8000",
            "add r2, r2, 0x1800",
            "ldr r2, [r2, 4]",
            "cmp r2, r1",
            "bhi 0x2de8",
            "bne 0x2eb0",
            "ldr r2, [r3, sb]",
            "ldr r0, [sp]",
            "cmp r2, r0",
            "bhi 0x2de8",
            "ldr r1, [0x00002f9c]",
            "mov r4, r6",
            "mov r2, 0xc",
            "mov r0, r7",
            "mov r6, sl",
            "add sl, sp, 0xb0",
            "add r1, r4, r1",
            "bl sym.imp.write",
            "mov r0, r7",
            "bl sym.imp.close",
            "cmp r5, 0",
            "bne 0x2eec",
            "mov r0, sl",
            "bl sym.imp.unlink",
            "b 0x2f6c",
            "ldr r8, [0x00002f7c]",
            "add r7, sp, 0x70",
            "ldr r3, [0x00002f84]",
            "mov r0, r7",
            "ldr r1, [0x00002fa0]",
            "add r8, r4, r8",
            "ldr r2, [r8, 0x228]",
            "add r3, r6, r3",
            "add r1, r4, r1",
            "ldr r3, [r2, r3, lsl 2]",
            "mov r2, r6",
            "sub r3, r3, 1",
            "bl sym.imp.sprintf",
            "mov r1, r7",
            "mov r0, sl",
            "bl sym.imp.rename",
            "add r1, sp, 0x18",
            "mov r0, r7",
            "bl sym.imp.stat",
            "ldr r3, [r8, 0x228]",
            "ldr r2, [0x00002f80]",
            "ldr r0, [sp, 0x44]",
            "ldr r1, [r3, r2]",
            "add r1, r0, r1",
            "str r1, [r3, r2]",
            "add r2, r2, 8",
            "ldr r1, [r3, r2]",
            "add r1, r1, 1",
            "str r1, [r3, r2]",
            "bl fcn.000026f8",
            "b 0x2f6c",
            "mvn r5, 0",
            "mov r0, r5",
            "add sp, sp, 0xf4",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00004924": {
        "function_address": "0x00004924",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "add r8, r0, 0x2c",
            "ldr r7, [0x00004b04]",
            "sub sp, sp, 0x1c",
            "mov r6, r0",
            "mov r0, r8",
            "ldr r3, [0x00004b08]",
            "add r7, pc, r7",
            "add r3, r7, r3",
            "ldr r2, [r3, 0x228]",
            "ldr r3, [0x00004b0c]",
            "ldrd r4, r5, [r2, r3]",
            "bl sym.imp.strlen",
            "cmp r0, 0",
            "str r0, [sp, 0x14]",
            "bne 0x4988",
            "ldrb r0, [r6, 0x530]",
            "bl rsym.zylog_getid_by_source",
            "subs r3, r0, 0",
            "beq 0x4988",
            "ldr r1, [0x00004b10]",
            "mov r0, r8",
            "ldr r2, [r3, 4]",
            "add r1, r7, r1",
            "bl sym.imp.sprintf",
            "add r2, r6, 0x530",
            "mov r3, r6",
            "add r2, r2, 4",
            "mov sl, 0",
            "b 0x49a4",
            "ldr r1, [r3], 4",
            "add sl, sl, r1",
            "cmp r3, r2",
            "bne 0x499c",
            "ldr fp, [0x00004b08]",
            "str sl, [r6, 0x540]",
            "ldr sb, [r7, fp]",
            "ldr r3, [sb, 0x81c]",
            "cmp r3, 0",
            "beq 0x4aa0",
            "ldrb r3, [r6, 0x53a]",
            "and r3, r3, 0x10",
            "uxtb r3, r3",
            "cmp r3, 0",
            "beq 0x4a64",
            "b 0x4aa0",
            "sub r8, r4, 1",
            "ldr r2, [fp, 0x228]",
            "lsl r8, r8, 0x17",
            "ldr r1, [r6, 0x534]",
            "lsr r8, r8, 0x17",
            "mla r8, r3, r8, r2",
            "ldr r2, [r8, 0x534]",
            "rsb r1, r2, r1",
            "ldr r2, [sb, 0x820]",
            "cmp r1, r2",
            "bhi 0x4aa0",
            "ldr r2, [r8, 0x540]",
            "cmp r2, sl",
            "bne 0x4a34",
            "mov r0, r8",
            "mov r1, r6",
            "movw r2, 0x534",
            "str r3, [sp, 4]",
            "bl sym.imp.memcmp",
            "cmp r0, 0",
            "ldr r3, [sp, 4]",
            "beq 0x4a48",
            "mvn r0, 0",
            "mvn r1, 0",
            "adds r4, r4, r0",
            "adc r5, r5, r1",
            "b 0x4a80",
            "movw r3, 0x538",
            "ldrh r2, [r8, r3]",
            "cmp r2, 0xfe",
            "addls r2, r2, 1",
            "strhls r2, [r8, r3]",
            "bhi 0x4aa0",
            "b 0x4afc",
            "ldr r2, [0x00004b14]",
            "mvn r3, 0",
            "add fp, r7, fp",
            "adds r2, r2, r4",
            "adc r3, r3, r5",
            "strd r2, r3, [sp, 8]",
            "movw r3, 0x544",
            "orrs r0, r4, r5",
            "beq 0x4aa0",
            "ldr r1, [sp, 8]",
            "cmp r4, r1",
            "bne 0x49dc",
            "ldr r2, [sp, 0xc]",
            "cmp r5, r2",
            "bne 0x49dc",
            "movw r3, 0x538",
            "mov r0, 1",
            "strh r0, [r6, r3]",
            "movw r2, 0x544",
            "ldr r3, [0x00004b08]",
            "mov r1, r6",
            "add r7, r7, r3",
            "ldr r4, [r7, 0x228]",
            "ldr r7, [0x00004b0c]",
            "ldr r0, [r4, r7]",
            "lsl r0, r0, 0x17",
            "lsr r0, r0, 0x17",
            "mla r0, r2, r0, r4",
            "bl sym.imp.memcpy",
            "ldrd r2, r3, [r4, r7]",
            "mov r0, 1",
            "mov r1, 0",
            "adds r2, r2, r0",
            "ldr r0, [sp, 0x14]",
            "adc r3, r3, r1",
            "strd r2, r3, [r4, r7]",
            "cmp r0, 0",
            "moveq r0, 1",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "rsym.zylog_getid_by_source": {
        "function_address": "0x0000206c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x174]!"
        ]
    },
    "sym.imp.memcmp": {
        "function_address": "0x00001fac",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x1f4]!"
        ]
    },
    "sym.imp.open": {
        "function_address": "0x00002138",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0xec]!"
        ]
    },
    "fcn.00002498": {
        "function_address": "0x00002498",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "sub sp, sp, 0x170",
            "ldr r4, [0x00002664]",
            "mov r6, r0",
            "mov sb, r1",
            "add r0, sp, 0x10c",
            "ldr r3, [0x00002668]",
            "mov r1, 0x40",
            "add r4, pc, r4",
            "mov r8, r2",
            "add r7, sp, 0x14c",
            "ldr r5, [r4, r3]",
            "bl sym.imp.gethostname",
            "mov r0, 0",
            "bl sym.imp.time",
            "add r3, sp, 0x170",
            "str r0, [r3, -4]!",
            "mov r0, r3",
            "bl sym.imp.localtime",
            "ldr r2, [0x0000266c]",
            "mov r3, r0",
            "mov r1, 0x20",
            "mov r0, r7",
            "add r2, r4, r2",
            "bl sym.imp.strftime",
            "ldr r1, [0x00002670]",
            "mov r0, r7",
            "add r1, r4, r1",
            "bl sym.imp.strstr",
            "cmp r0, 0",
            "bne 0x252c",
            "ldr r1, [0x00002674]",
            "mov r0, r7",
            "add r1, r4, r1",
            "bl sym.imp.strstr",
            "cmp r0, 0",
            "beq 0x2570",
            "mov r2, 0x3a",
            "ldrb r3, [r0, 4]",
            "add r1, sp, 0x16c",
            "strb r2, [r0, 4]",
            "add r0, r0, 4",
            "b 0x2550",
            "ldrb r2, [r0]",
            "strb r3, [r0]",
            "uxtb r3, r2",
            "mov r2, r0",
            "ldrb ip, [r0], 1",
            "cmp ip, 0",
            "beq 0x2568",
            "cmp r0, r1",
            "blo 0x2544",
            "mov r3, 0",
            "strb r3, [r2]",
            "mov r7, 0x2ac",
            "ldr r1, [0x00002678]",
            "mul r7, r7, r6",
            "add sl, sp, 0xc",
            "mov r0, sl",
            "add r1, r4, r1",
            "add r2, r5, r7",
            "add r2, r2, 0x124",
            "bl sym.imp.sprintf",
            "mov r1, sl",
            "mov r2, r0",
            "mov r0, r8",
            "add sl, sp, 0xc",
            "bl sym.imp.write",
            "ldr r1, [0x0000267c]",
            "cmp sb, 0",
            "addne r7, r5, r7",
            "addeq r7, r5, r7",
            "addne r2, r7, 0x224",
            "addeq r2, r7, 0x1a4",
            "add r1, r4, r1",
            "mov r0, sl",
            "bl sym.imp.sprintf",
            "mov r1, sl",
            "mov r2, r0",
            "mov r0, r8",
            "bl sym.imp.write",
            "cmp sb, 0",
            "ldr r2, [0x00002680]",
            "ldreq r2, [0x00002684]",
            "mov r1, 0x2ac",
            "add r2, r4, r2",
            "mul r1, r1, r6",
            "add r3, r5, r1",
            "add r1, r5, r1",
            "ldr r1, [r1, 0x11c]",
            "add r3, r3, 0xdc",
            "cmp r1, 0",
            "addne r0, sp, 0x10c",
            "ldreq r0, [0x00002684]",
            "addeq r0, r4, r0",
            "mov r1, 0x2ac",
            "mla r5, r1, r6, r5",
            "ldr r1, [r5, 0x120]",
            "cmp r1, 0",
            "addne r1, sp, 0x14c",
            "ldreq r1, [0x00002684]",
            "addeq r1, r4, r1",
            "str r1, [sp, 4]",
            "add r5, sp, 0xc",
            "ldr r1, [0x00002688]",
            "str r0, [sp]",
            "mov r0, r5",
            "add r1, r4, r1",
            "bl sym.imp.sprintf",
            "mov r1, r5",
            "mov r2, r0",
            "mov r0, r8",
            "bl sym.imp.write",
            "add sp, sp, 0x170",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "fcn.000022b8": {
        "function_address": "0x000022b8",
        "instructions": [
            "ldr r3, [0x00002360]",
            "ldr r2, [0x00002364]",
            "push {r4, r5, lr}",
            "sub sp, sp, 0x124",
            "add r3, pc, r3",
            "ldr r1, [0x00002368]",
            "add r2, r3, r2",
            "add r4, sp, 0x20",
            "str r2, [sp]",
            "mov r5, r0",
            "ldr r2, [0x0000236c]",
            "add r1, r3, r1",
            "str r1, [sp, 0xc]",
            "mov r0, r4",
            "ldr r1, [0x00002370]",
            "add r2, r3, r2",
            "ldr ip, [0x00002374]",
            "str r2, [sp, 4]",
            "ldr r2, [0x00002378]",
            "add r1, r3, r1",
            "str r1, [sp, 0x10]",
            "ldr r1, [0x0000237c]",
            "add r2, r3, r2",
            "str r2, [sp, 8]",
            "str r2, [sp, 0x18]",
            "add r1, r3, r1",
            "ldr r2, [0x00002380]",
            "str r1, [sp, 0x14]",
            "ldr r1, [0x00002384]",
            "add r2, r3, r2",
            "str r2, [sp, 0x1c]",
            "ldr r2, [0x00002388]",
            "add r1, r3, r1",
            "add r2, r3, r2",
            "add r3, r3, ip",
            "bl sym.imp.sprintf",
            "mov r1, r4",
            "mov r2, r0",
            "mov r0, r5",
            "bl sym.imp.write",
            "add sp, sp, 0x124",
            "pop {r4, r5, pc}"
        ]
    },
    "fcn.00002ae8": {
        "function_address": "0x00002ae8",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sl, lr}",
            "mov r5, r0",
            "ldr r4, [0x00002c8c]",
            "sub sp, sp, 0x164",
            "mov r8, r1",
            "add r1, sp, 0x18",
            "ldr r0, [0x00002c90]",
            "mov r7, r2",
            "add r4, pc, r4",
            "add r6, sp, 0x134",
            "add r0, r4, r0",
            "bl sym.imp.stat",
            "ldr r3, [0x00002c94]",
            "add r0, r5, 0x530",
            "ldr r2, [sp, 0x58]",
            "add r0, r0, 4",
            "add r3, r4, r3",
            "ldr r1, [r3, 0x24]",
            "cmp r1, r2",
            "mov r1, r6",
            "strne r2, [r3, 0x24]",
            "bl sym.imp.localtime_r",
            "ldr r2, [0x00002c98]",
            "mov r3, r6",
            "mov r1, 0x40",
            "add r0, sp, 0xf4",
            "add r6, sp, 0x74",
            "add r2, r4, r2",
            "bl sym.imp.strftime",
            "ldr r3, [r5, 0x53c]",
            "add r2, sp, 0xb4",
            "ldrh r1, [r5, 0x28]",
            "tst r3, 4",
            "beq 0x2b8c",
            "mov r0, r5",
            "bl fcn.000023e8",
            "add r0, r5, 0x10",
            "ldrh r1, [r5, 0x2a]",
            "mov r2, r6",
            "bl fcn.000023e8",
            "b 0x2ba4",
            "ldr r0, [r5, 0x20]",
            "bl fcn.0000268c",
            "ldr r0, [r5, 0x24]",
            "mov r2, r6",
            "ldrh r1, [r5, 0x2a]",
            "bl fcn.0000268c",
            "ldrb r0, [r5, 0x532]",
            "bl rsym.zylog_transfer_severity",
            "mov sl, r0",
            "ldrb r0, [r5, 0x530]",
            "bl rsym.zylog_transfer_category",
            "add r3, sp, 0xb4",
            "ldr r6, [0x00002c94]",
            "str r3, [sp]",
            "add r3, sp, 0x74",
            "str r3, [sp, 4]",
            "mov r2, r8",
            "ldr r3, [0x00002c9c]",
            "add r6, r4, r6",
            "ldr r1, [0x00002ca0]",
            "add r6, r6, 0x28",
            "str r0, [sp, 0x10]",
            "mov r0, r6",
            "add r3, r4, r3",
            "str sl, [sp, 0xc]",
            "str r3, [sp, 8]",
            "add r3, r5, 0x420",
            "add r3, r3, 0xc",
            "add r1, r4, r1",
            "str r3, [sp, 0x14]",
            "add r3, sp, 0xf4",
            "bl sym.imp.sprintf",
            "mov r1, r6",
            "mov r2, r0",
            "mov r0, r7",
            "bl sym.imp.write",
            "movw r3, 0x538",
            "ldr r2, [0x00002ca4]",
            "ldrh r1, [r5, r3]",
            "add r3, r5, 0x2c",
            "cmp r1, 1",
            "bne 0x2c4c",
            "ldr r1, [0x00002ca8]",
            "mov r0, r6",
            "add r2, r4, r2",
            "add r1, r4, r1",
            "bl sym.imp.sprintf",
            "b 0x2c64",
            "str r1, [sp]",
            "mov r0, r6",
            "ldr r1, [0x00002cac]",
            "add r2, r4, r2",
            "add r1, r4, r1",
            "bl sym.imp.sprintf",
            "ldr r3, [0x00002c94]",
            "mov r2, r0",
            "mov r0, r7",
            "add r4, r4, r3",
            "add r4, r4, 0x28",
            "mov r1, r4",
            "bl sym.imp.write",
            "mov r0, r4",
            "add sp, sp, 0x164",
            "pop {r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "sym.imp.rename": {
        "function_address": "0x00001ed4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x284]!"
        ]
    },
    "sym.imp.stat": {
        "function_address": "0x000020d8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x12c]!"
        ]
    },
    "fcn.000026f8": {
        "function_address": "0x000026f8",
        "instructions": [
            "push {r0, r1, r2, r3, r4, r5, r6, lr}",
            "ldr r4, [0x0000286c]",
            "ldr r5, [0x00002870]",
            "add r4, pc, r4",
            "add r5, r4, r5",
            "ldr r3, [r5, 4]",
            "cmp r3, 0",
            "bge 0x272c",
            "bl fcn.0000238c",
            "cmp r0, 0",
            "str r0, [r5, 4]",
            "ldrlt r3, [r5, 8]",
            "blt 0x2778",
            "ldr r6, [0x00002870]",
            "mov r1, 0xa",
            "add r6, r4, r6",
            "ldr r0, [r6, 4]",
            "bl sym.imp.kill",
            "cmp r0, 0",
            "beq 0x2868",
            "bl sym.imp.__errno_location",
            "ldr r3, [r0]",
            "mov r5, r0",
            "cmp r3, 1",
            "beq 0x27a8",
            "cmp r3, 3",
            "bne 0x2838",
            "bl fcn.0000238c",
            "cmp r0, 0",
            "str r0, [r6, 4]",
            "bge 0x279c",
            "ldr r3, [r6, 8]",
            "cmp r3, 0",
            "beq 0x2868",
            "ldr r3, [0x00002874]",
            "ldr r0, [0x00002878]",
            "ldr r3, [r4, r3]",
            "add r0, r4, r0",
            "ldr r1, [r3]",
            "bl sym.imp.fputs",
            "b 0x2868",
            "mov r1, 0xa",
            "bl sym.imp.kill",
            "b 0x2868",
            "ldr r3, [r6, 8]",
            "cmp r3, 0",
            "beq 0x27cc",
            "ldr r3, [0x00002874]",
            "ldr r0, [0x0000287c]",
            "ldr r3, [r4, r3]",
            "add r0, r4, r0",
            "ldr r1, [r3]",
            "bl sym.imp.fputs",
            "bl sym.imp.fork",
            "cmn r0, 1",
            "mov r6, r0",
            "beq 0x27e8",
            "cmp r0, 0",
            "beq 0x2804",
            "b 0x282c",
            "ldr r3, [0x00002874]",
            "ldr r0, [0x00002880]",
            "ldr r3, [r4, r3]",
            "add r0, r4, r0",
            "ldr r1, [r3]",
            "bl sym.imp.fputs",
            "b 0x2838",
            "ldr r3, [0x00002884]",
            "add r1, sp, 4",
            "ldr r0, [0x00002888]",
            "str r6, [sp, 0xc]",
            "add r0, r4, r0",
            "add r4, r4, r3",
            "stmib sp, {r0, r4}",
            "bl sym.imp.execv",
            "mov r0, r6",
            "bl sym.imp.exit",
            "mov r1, 0",
            "mov r2, r1",
            "bl sym.imp.waitpid",
            "ldr r3, [0x00002870]",
            "add r3, r4, r3",
            "ldr r3, [r3, 8]",
            "cmp r3, 0",
            "beq 0x2868",
            "ldr r3, [0x00002874]",
            "ldr r1, [0x0000288c]",
            "ldr r2, [r5]",
            "ldr r3, [r4, r3]",
            "add r1, r4, r1",
            "ldr r0, [r3]",
            "bl sym.imp.fprintf",
            "pop {r0, r1, r2, r3, r4, r5, r6, pc}"
        ]
    },
    "fcn.00004b18": {
        "function_address": "0x00004b18",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r4, r0",
            "ldr r5, [0x00004e08]",
            "sub sp, sp, 0x180",
            "mov r6, r1",
            "add r1, sp, 0x28",
            "ldr r0, [0x00004e0c]",
            "mov sb, r2",
            "add r5, pc, r5",
            "add r0, r5, r0",
            "bl sym.imp.stat",
            "ldr r3, [0x00004e10]",
            "add r0, sp, 0x140",
            "ldr r2, [sp, 0x68]",
            "add r3, r5, r3",
            "ldr r1, [r3, 0x24]",
            "cmp r1, r2",
            "mov r1, 0x40",
            "strne r2, [r3, 0x24]",
            "bl sym.imp.gethostname",
            "add r0, r4, 0x530",
            "add r1, sp, 0x100",
            "add r0, r0, 4",
            "ldrb sl, [r4, 0x532]",
            "bl sym.imp.ctime_r",
            "mov r3, 0",
            "strb r3, [sp, 0x118]",
            "ldrb r0, [r4, 0x530]",
            "add sl, sl, r6, lsl 3",
            "bl rsym.zylog_getid_by_source",
            "cmp r0, 0",
            "ldrne r6, [r0, 4]",
            "ldreq r6, [0x00004e14]",
            "addeq r6, r5, r6",
            "ldr r3, [r4, 0x53c]",
            "add r8, sp, 0xc0",
            "add r7, sp, 0x80",
            "tst r3, 4",
            "beq 0x4be0",
            "mov r1, r4",
            "mov r2, r8",
            "mov r3, 0x2e",
            "mov r0, 0xa",
            "bl sym.imp.inet_ntop",
            "add r1, r4, 0x10",
            "mov r2, r7",
            "mov r3, 0x2e",
            "mov r0, 0xa",
            "bl sym.imp.inet_ntop",
            "b 0x4c08",
            "ldr r0, [r4, 0x20]",
            "bl sym.imp.inet_ntoa",
            "mov r1, r0",
            "mov r0, r8",
            "bl sym.imp.strcpy",
            "ldr r0, [r4, 0x24]",
            "bl sym.imp.inet_ntoa",
            "mov r1, r0",
            "mov r0, r7",
            "bl sym.imp.strcpy",
            "ldr r3, [0x00004e10]",
            "add r3, r5, r3",
            "ldrsb r3, [r3, 0x14]",
            "cmp r3, 0",
            "bne 0x4c20",
            "bl fcn.0000293c",
            "add r2, sp, 0x140",
            "ldr r8, [0x00004e10]",
            "str r2, [sp]",
            "add r2, sp, 0xc0",
            "str r2, [sp, 4]",
            "ldrh r2, [r4, 0x28]",
            "add r3, r5, r8",
            "ldr r1, [0x00004e18]",
            "add r7, r3, 0x370",
            "add r3, r3, 0x14",
            "mov r0, r7",
            "str r2, [sp, 8]",
            "add r2, sp, 0x80",
            "str r2, [sp, 0xc]",
            "add r1, r5, r1",
            "ldrh r2, [r4, 0x2a]",
            "str r3, [sp, 0x20]",
            "add r3, sp, 0x104",
            "str r6, [sp, 0x24]",
            "str r2, [sp, 0x10]",
            "add r2, r4, 0x2c",
            "str r2, [sp, 0x14]",
            "add r2, r4, 0x420",
            "add r2, r2, 0xc",
            "str r2, [sp, 0x18]",
            "add r2, r4, 0x440",
            "add r2, r2, 0xc",
            "str r2, [sp, 0x1c]",
            "mov r2, sl",
            "bl sym.imp.sprintf",
            "ldrb r3, [r4, 0x531]",
            "mov r6, r0",
            "cmp r3, 0x11",
            "bhi 0x4cc4",
            "cmp r3, 0x10",
            "bhs 0x4d6c",
            "cmp r3, 8",
            "beq 0x4d14",
            "cmp r3, 0xa",
            "bne 0x4dd0",
            "b 0x4cd0",
            "cmp r3, 0x26",
            "bne 0x4dd0",
            "b 0x4d14",
            "ldr r3, [r4, 0x4a4]",
            "add r0, r7, r0",
            "ldr r1, [0x00004e1c]",
            "str r3, [sp]",
            "add r3, r4, 0x4a0",
            "add r3, r3, 8",
            "add r1, r5, r1",
            "str r3, [sp, 4]",
            "movw r3, 0x50a",
            "ldrh r3, [r4, r3]",
            "str r3, [sp, 8]",
            "add r3, r4, 0x500",
            "add r3, r3, 0xc",
            "str r3, [sp, 0xc]",
            "ldr r2, [r4, 0x49c]",
            "ldr r3, [r4, 0x4a0]",
            "b 0x4d60",
            "ldrb lr, [r4, 0x4e0]",
            "add r0, r5, r8",
            "add r2, r4, 0x490",
            "add r3, r4, 0x4b0",
            "add r0, r0, 0x370",
            "ldr ip, [r4, 0x4cc]",
            "cmp lr, 0",
            "add r1, r4, 0x4d0",
            "add r0, r0, r6",
            "add r2, r2, 0xc",
            "add r3, r3, 0xc",
            "addne r4, r4, 0x4e0",
            "ldreq r4, [0x00004e20]",
            "addeq r4, r5, r4",
            "str r1, [sp, 4]",
            "ldr r1, [0x00004e24]",
            "str ip, [sp]",
            "str r4, [sp, 8]",
            "add r1, r5, r1",
            "bl sym.imp.sprintf",
            "add r6, r0, r6",
            "b 0x4df0",
            "ldrb r1, [r4, 0x4cc]",
            "add r2, r4, 0x490",
            "add r3, r4, 0x4b0",
            "add r0, r7, r0",
            "add r2, r2, 0xc",
            "add r3, r3, 0xc",
            "cmp r1, 0",
            "addne r1, r4, 0x4c0",
            "addne r1, r1, 0xc",
            "ldreq r1, [0x00004e20]",
            "addeq r1, r5, r1",
            "ldrb r7, [r4, 0x520]",
            "add lr, r4, 0x4d0",
            "movw ip, 0x51e",
            "add lr, lr, 0xc",
            "ldrh ip, [r4, ip]",
            "cmp r7, 0",
            "addne r4, r4, 0x520",
            "ldreq r4, [0x00004e28]",
            "addeq r4, r5, r4",
            "stm sp, {r1, lr}",
            "str ip, [sp, 8]",
            "str r4, [sp, 0xc]",
            "ldr r1, [0x00004e2c]",
            "b 0x4d5c",
            "add r8, r5, r8",
            "mov r2, 0xa",
            "add r3, r8, r6",
            "add r6, r6, 1",
            "strb r2, [r3, 0x370]",
            "add r8, r8, r6",
            "mov r3, 0",
            "strb r3, [r8, 0x370]",
            "ldr r3, [0x00004e10]",
            "str r6, [sb]",
            "add r5, r5, r3",
            "add r0, r5, 0x370",
            "add sp, sp, 0x180",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "fcn.00004e30": {
        "function_address": "0x00004e30",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r0",
            "ldr r5, [0x000051b0]",
            "sub sp, sp, 0x5a0",
            "sub sp, sp, 4",
            "mov sb, r1",
            "ldr r0, [0x000051b4]",
            "add r1, sp, 0x420",
            "add r5, pc, r5",
            "add r1, r1, 8",
            "mov fp, r2",
            "add r0, r5, r0",
            "bl sym.imp.stat",
            "ldr r3, [0x000051b8]",
            "add r0, sp, 0x540",
            "ldr r2, [sp, 0x468]",
            "add r3, r5, r3",
            "ldr r1, [r3, 0x24]",
            "cmp r1, r2",
            "mov r1, 0x40",
            "strne r2, [r3, 0x24]",
            "bl sym.imp.gethostname",
            "add r0, r4, 0x530",
            "add r1, sp, 0x500",
            "add r0, r0, 4",
            "ldrb r7, [r4, 0x532]",
            "bl sym.imp.ctime_r",
            "mov r3, 0",
            "strb r3, [sp, 0x513]",
            "ldrb r0, [r4, 0x530]",
            "add sb, r7, sb, lsl 3",
            "rsb r7, r7, 0xa",
            "bl rsym.zylog_getid_by_source",
            "cmp r0, 0",
            "ldrne sl, [r0, 4]",
            "ldreq sl, [0x000051bc]",
            "addeq sl, r5, sl",
            "ldr r3, [r4, 0x53c]",
            "add r8, sp, 0x4c0",
            "add r6, sp, 0x480",
            "tst r3, 4",
            "beq 0x4f04",
            "mov r1, r4",
            "mov r2, r8",
            "mov r3, 0x2e",
            "mov r0, 0xa",
            "bl sym.imp.inet_ntop",
            "add r1, r4, 0x10",
            "mov r2, r6",
            "mov r3, 0x2e",
            "mov r0, 0xa",
            "bl sym.imp.inet_ntop",
            "b 0x4f2c",
            "ldr r0, [r4, 0x20]",
            "bl sym.imp.inet_ntoa",
            "mov r1, r0",
            "mov r0, r8",
            "bl sym.imp.strcpy",
            "ldr r0, [r4, 0x24]",
            "bl sym.imp.inet_ntoa",
            "mov r1, r0",
            "mov r0, r6",
            "bl sym.imp.strcpy",
            "ldr r3, [0x000051b8]",
            "add r3, r5, r3",
            "ldrsb r3, [r3, 0x14]",
            "cmp r3, 0",
            "bne 0x4f44",
            "bl fcn.0000293c",
            "add r6, sp, 0x580",
            "mov r1, 0",
            "mov r0, r6",
            "bl sym.imp.zykit_get_current_model_name",
            "ldr r3, [0x000051b8]",
            "add r2, sp, 0x540",
            "ldr r1, [0x000051c0]",
            "str r2, [sp]",
            "mov r2, sb",
            "add r3, r5, r3",
            "str r6, [sp, 4]",
            "add r8, r3, 0x570",
            "add r3, r3, 0x26c",
            "str r3, [sp, 8]",
            "add r3, sp, 0x500",
            "add r1, r5, r1",
            "add r3, r3, 4",
            "mov r0, r8",
            "bl sym.imp.sprintf",
            "ldrb r3, [r4, 0x531]",
            "mov r6, r0",
            "add r1, r4, 0x2c",
            "cmp r3, 0x11",
            "bhi 0x4fc0",
            "cmp r3, 0x10",
            "bhs 0x50c8",
            "cmp r3, 8",
            "beq 0x503c",
            "cmp r3, 0xa",
            "bne 0x512c",
            "b 0x4fcc",
            "cmp r3, 0x26",
            "bne 0x512c",
            "b 0x503c",
            "add r3, sp, 0x4c0",
            "add r0, r8, r0",
            "str r3, [sp]",
            "add r3, sp, 0x480",
            "str r3, [sp, 4]",
            "mov r2, sl",
            "ldrh r3, [r4, 0x28]",
            "str r3, [sp, 8]",
            "ldrh r3, [r4, 0x2a]",
            "str r1, [sp, 0x10]",
            "ldr r1, [0x000051c4]",
            "str r3, [sp, 0xc]",
            "ldr r3, [r4, 0x49c]",
            "add r1, r5, r1",
            "str r3, [sp, 0x14]",
            "ldr r3, [r4, 0x4a0]",
            "str r3, [sp, 0x18]",
            "ldr r3, [r4, 0x4a4]",
            "str r3, [sp, 0x1c]",
            "movw r3, 0x50a",
            "ldrh r3, [r4, r3]",
            "add r4, r4, 0x500",
            "add r4, r4, 0xc",
            "str r4, [sp, 0x24]",
            "str r3, [sp, 0x20]",
            "mov r3, r7",
            "bl sym.imp.sprintf",
            "b 0x50c0",
            "add r8, sp, 0x28",
            "mov r0, r8",
            "bl sym.imp.strcpy",
            "mov r1, 0x3d",
            "mov r0, r8",
            "bl sym.imp.strchr",
            "cmp r0, 0",
            "add r2, sp, 0x4c0",
            "movne r3, 0x3a",
            "ldr r1, [0x000051c8]",
            "strbne r3, [r0]",
            "add r3, r4, 0x490",
            "str r2, [sp, 4]",
            "add r2, sp, 0x480",
            "str r7, [sp]",
            "add r1, r5, r1",
            "str r2, [sp, 8]",
            "add r3, r3, 0xc",
            "ldrh r2, [r4, 0x28]",
            "ldr r0, [0x000051b8]",
            "str r2, [sp, 0xc]",
            "ldrh r2, [r4, 0x2a]",
            "add r0, r5, r0",
            "add r0, r0, 0x570",
            "add r0, r0, r6",
            "str r2, [sp, 0x10]",
            "add r2, sp, 0x28",
            "str r2, [sp, 0x14]",
            "add r2, r4, 0x4b0",
            "add r2, r2, 0xc",
            "str r2, [sp, 0x18]",
            "ldr r2, [r4, 0x4cc]",
            "bl sym.imp.sprintf",
            "add r6, r0, r6",
            "b 0x5194",
            "add r0, r8, r0",
            "ldrb r8, [r4, 0x520]",
            "add r2, r4, 0x490",
            "movw r3, 0x51e",
            "ldrh lr, [r4, 0x28]",
            "add r2, r2, 0xc",
            "cmp r8, 0",
            "ldrh ip, [r4, 0x2a]",
            "ldrh r3, [r4, r3]",
            "addne r4, r4, 0x520",
            "ldreq r4, [0x000051cc]",
            "addeq r4, r5, r4",
            "str r1, [sp, 0x10]",
            "add r8, sp, 0x4c0",
            "ldr r1, [0x000051d0]",
            "str r8, [sp]",
            "add r8, sp, 0x480",
            "str r3, [sp, 0x14]",
            "mov r3, r7",
            "str r8, [sp, 4]",
            "add r1, r5, r1",
            "str lr, [sp, 8]",
            "str ip, [sp, 0xc]",
            "str r4, [sp, 0x18]",
            "b 0x50bc",
            "add r3, sp, 0x4c0",
            "ldr r8, [0x000051b8]",
            "str r3, [sp]",
            "add r3, sp, 0x480",
            "str r3, [sp, 4]",
            "mov r2, sl",
            "ldrh r3, [r4, 0x28]",
            "add r8, r5, r8",
            "add r0, r8, 0x570",
            "add r0, r0, r6",
            "str r3, [sp, 8]",
            "ldrh r3, [r4, 0x2a]",
            "str r1, [sp, 0x10]",
            "ldr r1, [0x000051d4]",
            "str r3, [sp, 0xc]",
            "mov r3, r7",
            "add r1, r5, r1",
            "bl sym.imp.sprintf",
            "add r6, r0, r6",
            "mov r2, 0xa",
            "add r3, r8, r6",
            "add r6, r6, 1",
            "strb r2, [r3, 0x570]",
            "add r8, r8, r6",
            "mov r3, 0",
            "strb r3, [r8, 0x570]",
            "ldr r3, [0x000051b8]",
            "str r6, [fp]",
            "add r5, r5, r3",
            "add r0, r5, 0x570",
            "add sp, sp, 0x1a4",
            "add sp, sp, 0x400",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.imp.write": {
        "function_address": "0x00001ee0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x27c]!"
        ]
    },
    "sym.zylog_mail_dec": {
        "function_address": "0x000046a4",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r5, r0",
            "ldr r4, [0x00004740]",
            "mov r7, r1",
            "ldr r3, [0x00004744]",
            "add r4, pc, r4",
            "add r3, r4, r3",
            "ldr r3, [r3, 0x2cc]",
            "cmp r3, 0",
            "beq 0x46dc",
            "cmp r3, 1",
            "mvnne r0, 0",
            "popne {r3, r4, r5, r6, r7, pc}",
            "b 0x46e8",
            "bl rsym.zylog_init",
            "cmp r0, 0",
            "bne 0x4738",
            "ldr r6, [0x00004744]",
            "add r6, r4, r6",
            "add r0, r6, 0xc",
            "bl rsym.zylog_dolock",
            "cmn r0, 1",
            "popeq {r3, r4, r5, r6, r7, pc}",
            "cmp r5, 0",
            "ldreq r3, [0x00004748]",
            "ldrne r3, [0x0000474c]",
            "ldreq r2, [r6, 0x228]",
            "ldrne r2, [r6, 0x228]",
            "ldr r1, [r2, r3]",
            "rsb r7, r7, r1",
            "str r7, [r2, r3]",
            "ldr r3, [0x00004744]",
            "add r4, r4, r3",
            "add r0, r4, 0xc",
            "bl rsym.zylog_unlock",
            "mov r0, 0",
            "pop {r3, r4, r5, r6, r7, pc}",
            "mvn r0, 0",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "sym.zylog_get_entry_file": {
        "function_address": "0x00006528",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "cmp r0, 2",
            "ldr r5, [0x000065e4]",
            "add r5, pc, r5",
            "beq 0x6548",
            "cmp r0, 3",
            "bne 0x65dc",
            "b 0x6550",
            "ldr r0, [0x000065e8]",
            "b 0x6554",
            "ldr r0, [0x000065ec]",
            "add r0, r5, r0",
            "mov r1, 0",
            "bl sym.imp.open",
            "cmn r0, 1",
            "mov r4, r0",
            "bne 0x65a0",
            "ldr r3, [0x000065f0]",
            "ldr r3, [r5, r3]",
            "ldr r6, [r3]",
            "bl sym.imp.__errno_location",
            "ldr r0, [r0]",
            "bl sym.imp.strerror",
            "ldr r1, [0x000065f4]",
            "mov r2, r0",
            "mov r0, r6",
            "add r1, r5, r1",
            "bl sym.imp.fprintf",
            "mov r0, r4",
            "pop {r4, r5, r6, pc}",
            "ldr r1, [sp, 0x10]",
            "movw r5, 0x544",
            "mov r2, 0",
            "mul r1, r5, r1",
            "sub r1, r1, 0x540",
            "sub r1, r1, 4",
            "bl sym.imp.lseek",
            "ldr r1, [sp, 0x14]",
            "mov r2, r5",
            "mov r0, r4",
            "bl sym.imp.read",
            "mov r0, r4",
            "bl sym.imp.close",
            "mov r0, 0",
            "pop {r4, r5, r6, pc}",
            "mvn r0, 0",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.imp.__errno_location": {
        "function_address": "0x000020fc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x114]!"
        ]
    },
    "sym.imp.strerror": {
        "function_address": "0x00001de4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x324]!"
        ]
    },
    "sym.imp.lseek": {
        "function_address": "0x00001ea4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x2a4]!"
        ]
    },
    "sym.imp.read": {
        "function_address": "0x00001f64",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x224]!"
        ]
    },
    "sym.zylog_create_buffer": {
        "function_address": "0x00006aa4",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r7, r1",
            "ldr r3, [0x00006b08]",
            "mov r6, 0",
            "mov r4, r0",
            "mov r0, r7",
            "ldr r1, [0x00006b0c]",
            "add r3, pc, r3",
            "ldr r5, [r3, r1]",
            "mov r1, r2",
            "movw r2, 0x7b6",
            "str r6, [r5]",
            "bl sym.imp.shmget",
            "cmp r0, 0",
            "bge 0x6b00",
            "bl sym.imp.__errno_location",
            "ldr r3, [r0]",
            "mvn r0, 0",
            "cmp r3, 0x11",
            "moveq r3, 2",
            "movne r3, 1",
            "str r3, [r5]",
            "pop {r3, r4, r5, r6, r7, pc}",
            "stm r4, {r0, r6, r7}",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "sym.imp.shmget": {
        "function_address": "0x00001f4c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x234]!"
        ]
    },
    "sym.zylog_clear_log": {
        "function_address": "0x0000408c",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r5, r0",
            "ldr r4, [0x00004168]",
            "ldr r3, [0x0000416c]",
            "add r4, pc, r4",
            "add r3, r4, r3",
            "ldr r3, [r3, 0x2cc]",
            "cmp r3, 0",
            "beq 0x40b8",
            "cmp r3, 1",
            "b 0x40c0",
            "bl rsym.zylog_init",
            "cmp r0, 0",
            "mvnne r5, 0",
            "bne 0x4160",
            "ldr r6, [0x0000416c]",
            "add r6, r4, r6",
            "add r0, r6, 0xc",
            "bl rsym.zylog_dolock",
            "cmn r0, 1",
            "moveq r5, r0",
            "beq 0x4160",
            "cmp r5, 0",
            "beq 0x40fc",
            "cmp r5, 1",
            "mvnne r5, 0",
            "bne 0x4150",
            "b 0x4124",
            "ldr r6, [r6, 0x228]",
            "mov r1, r5",
            "ldr r2, [0x00004170]",
            "mov r0, r6",
            "bl sym.imp.memset",
            "ldr r1, [0x00004174]",
            "mov r2, 0",
            "mov r3, 0",
            "strd r2, r3, [r6, r1]",
            "b 0x4150",
            "ldr r5, [r6, 0x228]",
            "mov r1, 0",
            "ldr r2, [0x00004178]",
            "add r0, r5, 0xa8000",
            "add r0, r0, 0x800",
            "bl sym.imp.memset",
            "ldr r1, [0x0000417c]",
            "mov r2, 0",
            "mov r3, 0",
            "strd r2, r3, [r5, r1]",
            "mov r5, 0",
            "ldr r3, [0x0000416c]",
            "add r4, r4, r3",
            "add r0, r4, 0xc",
            "bl rsym.zylog_unlock",
            "mov r0, r5",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.log_counter_semaphore_dolock": {
        "function_address": "0x00007000",
        "instructions": [
            "mov r3, 0",
            "push {r0, r1, r4, lr}",
            "strh r3, [sp]",
            "mvn r3, 0",
            "mov r1, sp",
            "mov r2, 1",
            "strh r3, [sp, 2]",
            "mov r3, 0x1000",
            "ldr r4, [0x00007048]",
            "strh r3, [sp, 4]",
            "bl sym.imp.semop",
            "cmn r0, 1",
            "add r4, pc, r4",
            "bne 0x7044",
            "ldr r0, [0x0000704c]",
            "add r0, r4, r0",
            "bl sym.imp.perror",
            "pop {r2, r3, r4, pc}"
        ]
    },
    "sym.imp.semop": {
        "function_address": "0x00002108",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x10c]!"
        ]
    },
    "sym.imp.perror": {
        "function_address": "0x00001e5c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x2d4]!"
        ]
    },
    "sym.zylog_mail_clear_event_bit": {
        "function_address": "0x00004488",
        "instructions": [
            "push {r0, r1, r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r7, 1",
            "ldr r4, [0x000045a8]",
            "lsl r7, r7, r0",
            "mov r5, r0",
            "ldr r3, [0x000045ac]",
            "uxtb r7, r7",
            "add r4, pc, r4",
            "add r3, r4, r3",
            "ldr r3, [r3, 0x2cc]",
            "cmp r3, 0",
            "beq 0x44c0",
            "cmp r3, 1",
            "b 0x44c8",
            "bl rsym.zylog_init",
            "cmp r0, 0",
            "bne 0x45a0",
            "cmp r5, 1",
            "bhi 0x45a0",
            "ldr r5, [0x000045ac]",
            "add r5, r4, r5",
            "add r0, r5, 0xc",
            "bl rsym.zylog_dolock",
            "cmn r0, 1",
            "beq 0x45a4",
            "ldr ip, [r5, 0x228]",
            "ldr r3, [0x000045b0]",
            "ldrd r0, r1, [ip, r3]",
            "cmp r1, 0",
            "bne 0x4510",
            "cmp r0, 0x200",
            "movlo r2, 0",
            "movlo r3, 0",
            "blo 0x4560",
            "ldr r2, [0x000045b4]",
            "mvn r3, 0",
            "adds r2, r2, r0",
            "adc r3, r3, r1",
            "b 0x4560",
            "lsl lr, r2, 0x17",
            "mov r4, 1",
            "lsr lr, lr, 0x17",
            "mla lr, sl, lr, ip",
            "ldrb r5, [lr, 0x53a]",
            "sbfx r6, r5, 0, 2",
            "sxtb sb, r6",
            "tst r8, sb",
            "andne r6, r7, r6",
            "bfine r5, r6, 0, 2",
            "strbne r5, [lr, 0x53a]",
            "mov r5, 0",
            "adds r2, r2, r4",
            "adc r3, r3, r5",
            "b 0x4570",
            "sxtb r8, r7",
            "movw sl, 0x544",
            "mvn r7, r7",
            "str r4, [sp, 4]",
            "cmp r1, r3",
            "bhi 0x4524",
            "bne 0x4584",
            "cmp r0, r2",
            "bhi 0x4524",
            "ldr r4, [sp, 4]",
            "ldr r3, [0x000045ac]",
            "add r4, r4, r3",
            "add r0, r4, 0xc",
            "bl rsym.zylog_unlock",
            "mov r0, 0",
            "b 0x45a4",
            "mvn r0, 0",
            "pop {r2, r3, r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "sym.zylog_get_config": {
        "function_address": "0x00003868",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sl, lr}",
            "mov r8, r3",
            "ldr r4, [0x000039ec]",
            "mov r5, r0",
            "mov r6, r1",
            "mov r7, r2",
            "ldr r3, [0x000039f0]",
            "add r4, pc, r4",
            "add r3, r4, r3",
            "ldr r3, [r3, 0x2cc]",
            "cmp r3, 0",
            "beq 0x38a0",
            "cmp r3, 1",
            "b 0x38a8",
            "bl rsym.zylog_init",
            "cmp r0, 0",
            "mvnne r5, 0",
            "bne 0x39e4",
            "ldr sl, [0x000039f0]",
            "add r0, r4, sl",
            "add r0, r0, 0xc",
            "bl rsym.zylog_dolock",
            "cmn r0, 1",
            "moveq r5, r0",
            "beq 0x39e4",
            "cmp r5, 4",
            "addls pc, pc, r5, lsl 2",
            "b 0x39d0",
            "b 0x38ec",
            "b 0x38fc",
            "b 0x3928",
            "b 0x393c",
            "b 0x3968",
            "mov r0, r8",
            "ldr r1, [r4, sl]",
            "mov r2, 0x48",
            "b 0x391c",
            "cmp r6, 1",
            "bhi 0x39d0",
            "ldr r3, [0x000039f0]",
            "mov r2, 0x2ac",
            "mov r0, r8",
            "ldr r3, [r4, r3]",
            "mla r6, r2, r6, r3",
            "add r1, r6, 0x94",
            "bl sym.imp.memcpy",
            "mov r5, 0",
            "b 0x39d4",
            "ldr r1, [r4, sl]",
            "mov r0, r8",
            "mov r2, 0x49",
            "add r1, r1, 0x48",
            "b 0x391c",
            "cmp r6, 3",
            "bhi 0x39d0",
            "mov r2, 0x8c",
            "ldr r3, [0x000039f0]",
            "mul r6, r2, r6",
            "mov r0, r8",
            "ldr r1, [r4, r3]",
            "add r6, r6, 0x5e0",
            "add r1, r1, r6",
            "add r1, r1, 0xc",
            "b 0x391c",
            "sub r7, r7, 0x10",
            "ldr sl, [0x000039f0]",
            "cmp r7, 4",
            "addls pc, pc, r7, lsl 2",
            "b 0x39d0",
            "b 0x3990",
            "b 0x399c",
            "b 0x39a8",
            "b 0x39b4",
            "b 0x39c4",
            "ldr r3, [r4, sl]",
            "ldr r3, [r3, 0x81c]",
            "b 0x39bc",
            "ldr r3, [r4, sl]",
            "ldr r3, [r3, 0x820]",
            "b 0x39bc",
            "ldr r3, [r4, sl]",
            "ldr r3, [r3, 0x824]",
            "b 0x39bc",
            "ldr r3, [r4, sl]",
            "ldr r3, [r3, 0x828]",
            "str r3, [r8]",
            "b 0x3920",
            "ldr r3, [r4, sl]",
            "ldr r3, [r3, 0x82c]",
            "b 0x39bc",
            "mvn r5, 0",
            "ldr r3, [0x000039f0]",
            "add r4, r4, r3",
            "add r0, r4, 0xc",
            "bl rsym.zylog_unlock",
            "mov r0, r5",
            "pop {r3, r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "sym.log_counter_create_semaphore": {
        "function_address": "0x00006f3c",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r1, 1",
            "ldr r5, [0x00006f84]",
            "movw r2, 0x7b6",
            "bl sym.imp.semget",
            "subs r4, r0, 0",
            "add r5, pc, r5",
            "bge 0x6f6c",
            "ldr r0, [0x00006f88]",
            "add r0, r5, r0",
            "bl sym.imp.perror",
            "b 0x6f7c",
            "mov r1, 0",
            "mov r2, 0x10",
            "mov r3, 1",
            "bl sym.imp.semctl",
            "mov r0, r4",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.imp.semget": {
        "function_address": "0x00001e14",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x304]!"
        ]
    },
    "sym.imp.semctl": {
        "function_address": "0x00001e74",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x2c4]!"
        ]
    },
    "sym.zylog_valist": {
        "function_address": "0x00005d88",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r6, r3",
            "ldr r4, [0x00005f08]",
            "sub sp, sp, 0x720",
            "sub sp, sp, 4",
            "mov fp, r1",
            "ldr r3, [0x00005f0c]",
            "mov r8, r2",
            "add r4, pc, r4",
            "add r1, sp, 0x700",
            "add r2, sp, 0x700",
            "ldrh r1, [r1, 0x48]",
            "add r3, r4, r3",
            "ldrh r2, [r2, 0x50]",
            "ldr r3, [r3, 0x2cc]",
            "mov r7, r0",
            "strh r1, [sp, 0xc]",
            "strh r2, [sp, 0xe]",
            "cmp r3, 0",
            "ldr sl, [sp, 0x754]",
            "beq 0x5de4",
            "cmp r3, 1",
            "b 0x5dec",
            "bl rsym.zylog_init",
            "cmp r0, 0",
            "bne 0x5ef8",
            "cmp r7, 0x47",
            "bhi 0x5ef8",
            "cmp r8, 0x47",
            "bhi 0x5ef8",
            "mov r0, r7",
            "bl fcn.00002890",
            "subs r1, r0, 0",
            "bne 0x5ef8",
            "cmp r6, 0",
            "beq 0x5e40",
            "add r0, sp, 0x550",
            "mov r2, r1",
            "add r0, r0, 8",
            "mov r3, r6",
            "str r1, [sp]",
            "bl sym.imp.uam_find_first_match",
            "cmp r0, 0",
            "addgt r5, sp, 0x560",
            "addgt r5, r5, 8",
            "bgt 0x5e48",
            "ldr r5, [0x00005f10]",
            "add r5, r4, r5",
            "cmp sl, 0",
            "ldreq sl, [0x00005f14]",
            "addeq sl, r4, sl",
            "add sb, sp, 0x14",
            "mov r1, 0",
            "mov r0, sb",
            "movw r2, 0x544",
            "bl sym.imp.memset",
            "ldr r3, [sp, 0x74c]",
            "add r2, sp, 0x720",
            "ldrh r1, [sp, 0xc]",
            "mov r0, 0",
            "strb r7, [sp, 0x544]",
            "str r3, [sp, 0x38]",
            "ldr r3, [0x00005f18]",
            "strb r8, [sp, 0x545]",
            "strb fp, [sp, 0x546]",
            "strh r1, [r2, r3]",
            "add r3, r3, 2",
            "ldrh r1, [sp, 0xe]",
            "str r6, [sp, 0x34]",
            "strh r1, [r2, r3]",
            "bl sym.imp.time",
            "ldr r2, [sp, 0x758]",
            "mov r1, 0x400",
            "str r0, [sp, 0x548]",
            "add r0, sp, 0x40",
            "ldr r3, [sp, 0x75c]",
            "bl sym.imp.vsnprintf",
            "ldr r3, [0x00005f1c]",
            "add r0, sp, 0x440",
            "mov r1, 0x20",
            "add r4, r4, r3",
            "mov r3, sl",
            "mov r2, r4",
            "bl sym.imp.snprintf",
            "add r0, sp, 0x460",
            "mov r1, 0x20",
            "mov r2, r4",
            "mov r3, r5",
            "bl sym.imp.snprintf",
            "mov r0, sb",
            "bl rsym.__zylog2",
            "b 0x5efc",
            "mvn r0, 0",
            "add sp, sp, 0x324",
            "add sp, sp, 0x400",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00002890": {
        "function_address": "0x00002890",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r5, r0",
            "ldr r4, [0x00002934]",
            "ldr r6, [0x00002938]",
            "add r4, pc, r4",
            "add r0, r4, r6",
            "add r0, r0, 0xc",
            "bl rsym.zylog_dolock",
            "cmn r0, 1",
            "popeq {r4, r5, r6, pc}",
            "ldr r2, [r4, r6]",
            "ldrsb r1, [r2, r5]",
            "cmp r1, 0",
            "bne 0x291c",
            "mov r3, r2",
            "ldrb r0, [r3, 0x5ec]",
            "cmp r0, 0",
            "beq 0x28e8",
            "add r0, r3, r5",
            "ldrb r0, [r0, 0x630]",
            "cmp r0, 0",
            "bne 0x291c",
            "add r1, r1, 1",
            "add r3, r3, 0x8c",
            "cmp r1, 4",
            "bne 0x28cc",
            "ldrsb r3, [r2, 0x48]",
            "cmp r3, 0",
            "bne 0x291c",
            "ldr r3, [0x00002938]",
            "add r4, r4, r3",
            "add r0, r4, 0xc",
            "bl rsym.zylog_unlock",
            "mov r0, 1",
            "pop {r4, r5, r6, pc}",
            "ldr r3, [0x00002938]",
            "add r4, r4, r3",
            "add r0, r4, 0xc",
            "bl rsym.zylog_unlock",
            "mov r0, 0",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.imp.uam_find_first_match": {
        "function_address": "0x00001e08",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x30c]!"
        ]
    },
    "sym.imp.time": {
        "function_address": "0x00002054",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x184]!"
        ]
    },
    "rsym.__zylog2": {
        "function_address": "0x00001df0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x31c]!"
        ]
    },
    "sym.zylog_extension": {
        "function_address": "0x00006010",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "sub sp, sp, 0x560",
            "add r5, sp, 0x500",
            "ldr r6, rsym.zylog_transfer_category",
            "ldrh lr, [r5, 0x70]",
            "ldrh ip, [r5, 0x78]",
            "add r5, sp, 0x18",
            "ldr r4, [sp, 0x580]",
            "add r6, pc, r6",
            "str lr, [sp]",
            "ldr lr, [sp, 0x574]",
            "str ip, [sp, 8]",
            "ldr ip, [sp, 0x57c]",
            "str lr, [sp, 4]",
            "str r5, [sp, 0x10]",
            "str ip, [sp, 0xc]",
            "bl rsym.zylog_prepare",
            "cmp r0, 0",
            "bne 0x60e0",
            "cmp r4, 0",
            "beq 0x60b4",
            "ldr r3, [0x000060ec]",
            "add r0, r5, 0x460",
            "mov r1, 0x10",
            "add r0, r0, 0xc",
            "add r6, r6, r3",
            "ldr r3, [r4]",
            "mov r2, r6",
            "bl sym.imp.snprintf",
            "add r0, r5, 0x470",
            "mov r1, 0x10",
            "mov r2, r6",
            "ldr r3, [r4, 4]",
            "add r0, r0, 0xc",
            "bl sym.imp.snprintf",
            "add r0, r5, 0x480",
            "mov r1, 0x10",
            "add r0, r0, 0xc",
            "mov r2, r6",
            "ldr r3, [r4, 8]",
            "bl sym.imp.snprintf",
            "add r0, sp, 0x20",
            "add r3, sp, 0x580",
            "add r3, r3, 8",
            "sub r4, r0, 8",
            "mov r1, 0x400",
            "add r0, r0, 0x24",
            "ldr r2, [sp, 0x584]",
            "str r3, [sp, 0x55c]",
            "bl sym.imp.vsnprintf",
            "mov r0, r4",
            "bl rsym.__zylog2",
            "add sp, sp, 0x560",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "rsym.zylog_prepare": {
        "function_address": "0x00001f88",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x20c]!"
        ]
    },
    "sym.create_socket": {
        "function_address": "0x00002fa4",
        "instructions": [
            "push {r0, r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "ldr r5, [0x000030c8]",
            "ldr r3, [0x000030cc]",
            "add r5, pc, r5",
            "ldr r4, [r5, r3]",
            "ldr r3, [r4]",
            "cmp r3, 0",
            "bge 0x2fd8",
            "mov r0, 0x10",
            "mov r1, 3",
            "mov r2, 0x1f",
            "bl sym.imp.socket",
            "str r0, [r4]",
            "ldr r4, [0x000030d0]",
            "mov r6, 0xc",
            "mov r1, 0",
            "mov r2, r6",
            "mov r7, 0",
            "mov fp, 1",
            "add r4, r5, r4",
            "add sl, r4, 0x22c",
            "mov r0, sl",
            "bl sym.imp.memset",
            "mov r3, 0x22c",
            "mov r2, 0x10",
            "strh r2, [r4, r3]",
            "bl sym.imp.getpid",
            "ldr r3, [0x000030cc]",
            "mov r1, sl",
            "str r0, [r4, 0x230]",
            "mov r2, r6",
            "add sl, r4, 0x238",
            "str r7, [r4, 0x234]",
            "ldr r8, [r5, r3]",
            "ldr r0, [r8]",
            "bl sym.imp.bind",
            "mov r1, r7",
            "mov r2, r6",
            "mov r0, sl",
            "bl sym.imp.memset",
            "mov r2, 0x10",
            "mov r3, 0x238",
            "strh r2, [r4, r3]",
            "mov r0, 0x210",
            "bl sym.imp.malloc",
            "mov r3, 0x210",
            "mov sb, r0",
            "str r3, [r0]",
            "str r0, [r4, 0x244]",
            "bl sym.imp.getpid",
            "ldr r1, [0x000030d4]",
            "mov r2, 0x12",
            "str r0, [sb, 0xc]",
            "ldr sb, [r4, 0x244]",
            "add r1, r5, r1",
            "strh r2, [sb, 4]",
            "add r0, sb, 0x10",
            "strh fp, [sb, 6]",
            "bl sym.imp.strcpy",
            "str sb, [r4, 0x248]",
            "add r1, r4, 0x250",
            "ldr r3, [sb]",
            "mov r2, r7",
            "str sl, [r4, 0x250]",
            "str r6, [r4, 0x254]",
            "str r3, [r4, 0x24c]",
            "add r3, r4, 0x248",
            "str r3, [r4, 0x258]",
            "str fp, [r4, 0x25c]",
            "ldr r0, [r8]",
            "add sp, sp, 4",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "b sym.imp.sendmsg"
        ]
    },
    "sym.imp.bind": {
        "function_address": "0x00001f04",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x264]!"
        ]
    },
    "sym.imp.malloc": {
        "function_address": "0x00001e80",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x2bc]!"
        ]
    },
    "sym.save_log": {
        "function_address": "0x00006674",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "subs r8, r0, 0",
            "ldr r4, [0x000067a0]",
            "sub sp, sp, 0x550",
            "sub sp, sp, 4",
            "add r4, pc, r4",
            "ldrne r5, [0x000067a4]",
            "ldreq r5, [0x000067a8]",
            "add r5, r4, r5",
            "uxtb sb, r8",
            "mov r0, r5",
            "bl sym.imp.unlink",
            "mov r0, r5",
            "mov r1, 0x42",
            "bl sym.imp.open",
            "mov r5, r0",
            "sxtb r0, sb",
            "bl rsym.zylog_get_current_num",
            "cmp r8, 0",
            "mov r6, r0",
            "mov r7, r1",
            "bne 0x66ec",
            "cmp r1, 0",
            "mov sl, r0",
            "mov fp, r1",
            "bne 0x66e4",
            "cmp r0, 0x200",
            "bls 0x670c",
            "mov sl, 0x200",
            "b 0x6708",
            "cmp r1, 0",
            "mov sl, r0",
            "mov fp, r1",
            "bne 0x6704",
            "cmp r0, 0x400",
            "bls 0x670c",
            "mov sl, 0x400",
            "mov fp, 0",
            "cmn r5, 1",
            "movne r4, 1",
            "sxtbne sb, sb",
            "addne r8, sp, 0xc",
            "bne 0x6780",
            "ldr r3, [0x000067ac]",
            "ldr r3, [r4, r3]",
            "ldr r5, [r3]",
            "bl sym.imp.__errno_location",
            "ldr r0, [r0]",
            "bl sym.imp.strerror",
            "ldr r1, [0x000067b0]",
            "mov r2, r0",
            "mov r0, r5",
            "add r1, r4, r1",
            "bl sym.imp.fprintf",
            "b 0x6790",
            "mov r0, sb",
            "mov r2, r6",
            "mov r3, r7",
            "stm sp, {r4, r8}",
            "bl rsym.zylog_get_entry",
            "cmp r0, 0",
            "bne 0x677c",
            "mov r0, r5",
            "mov r1, r8",
            "movw r2, 0x544",
            "bl sym.imp.write",
            "add r4, r4, 1",
            "cmp r4, sl",
            "ble 0x6750",
            "mov r0, r5",
            "bl sym.imp.close",
            "mov r0, 0",
            "add sp, sp, 0x154",
            "add sp, sp, 0x400",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.imp.unlink": {
        "function_address": "0x00001fa0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x1fc]!"
        ]
    },
    "rsym.zylog_get_current_num": {
        "function_address": "0x0000218c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0xb4]!"
        ]
    },
    "rsym.zylog_get_entry": {
        "function_address": "0x00001f7c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x214]!"
        ]
    },
    "sym.zylog_create_lock": {
        "function_address": "0x00006d34",
        "instructions": [
            "ldr r3, [0x00006db0]",
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r7, r2",
            "ldr r2, [0x00006db4]",
            "mov r4, r0",
            "add r3, pc, r3",
            "mov r0, r1",
            "mov r6, r1",
            "mov r1, 1",
            "ldr r5, [r3, r2]",
            "mov r3, 0",
            "movw r2, 0x7b6",
            "str r3, [r5]",
            "bl sym.imp.semget",
            "subs r8, r0, 0",
            "bge 0x6d94",
            "bl sym.imp.__errno_location",
            "ldr r3, [r0]",
            "mvn r8, 0",
            "cmp r3, 0x11",
            "moveq r3, 2",
            "movne r3, 1",
            "str r3, [r5]",
            "b 0x6da8",
            "str r8, [r4]",
            "mov r0, r4",
            "str r6, [r4, 4]",
            "mov r1, r7",
            "bl rsym.zylog_set_lock_val",
            "mov r0, r8",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "rsym.zylog_set_lock_val": {
        "function_address": "0x00002000",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x1bc]!"
        ]
    },
    "sym.zylog6": {
        "function_address": "0x00005f98",
        "instructions": [
            "push {r4, r5, lr}",
            "sub sp, sp, 0x560",
            "sub sp, sp, 4",
            "add r4, sp, 0x500",
            "add r5, sp, 0x20",
            "ldrh lr, [r4, 0x70]",
            "ldrh ip, [r4, 0x78]",
            "sub r4, r5, 8",
            "str r4, [sp, 0x10]",
            "str lr, [sp]",
            "str ip, [sp, 8]",
            "ldr lr, [sp, 0x574]",
            "ldr ip, [sp, 0x57c]",
            "str lr, [sp, 4]",
            "str ip, [sp, 0xc]",
            "bl rsym.zylog_prepare6",
            "cmp r0, 0",
            "bne 0x6004",
            "add r3, sp, 0x580",
            "add r0, r5, 0x24",
            "add r3, r3, 4",
            "mov r1, 0x400",
            "ldr r2, [sp, 0x580]",
            "str r3, [sp, 0x55c]",
            "bl sym.imp.vsnprintf",
            "mov r0, r4",
            "bl rsym.__zylog2",
            "add sp, sp, 0x164",
            "add sp, sp, 0x400",
            "pop {r4, r5, pc}"
        ]
    },
    "rsym.zylog_prepare6": {
        "function_address": "0x00002150",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0xdc]!"
        ]
    },
    "sym.zyklog_nl_msg": {
        "function_address": "0x000030d8",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0xa4",
            "ldr r5, [0x00003324]",
            "mov r7, 0",
            "mov sl, r7",
            "mov r6, r7",
            "ldr r3, [0x00003328]",
            "add r5, pc, r5",
            "str r0, [sp, 0x10]",
            "mov r4, r5",
            "strb r7, [sp, 0x20]",
            "ldr r3, [r4, r3]!",
            "str r3, [sp, 0xc]",
            "add r1, r4, 0x22c",
            "ldr r3, [0x0000332c]",
            "str r1, [sp, 8]",
            "add r3, r5, r3",
            "str r3, [sp, 0x14]",
            "ldr r3, [0x00003330]",
            "add r3, r5, r3",
            "str r3, [sp, 0x18]",
            "ldr r3, [0x00003334]",
            "add r3, r5, r3",
            "str r3, [sp, 0x1c]",
            "ldr r3, [sp, 0xc]",
            "ldr r1, [sp, 0x10]",
            "ldrb r2, [r3, r6]",
            "ldrsb r3, [r1, r6]",
            "sxtb r1, r2",
            "cmp r3, r1",
            "beq 0x31cc",
            "cmp r3, 0",
            "beq 0x316c",
            "blt 0x31b0",
            "cmp r3, 3",
            "bgt 0x31b0",
            "b 0x3184",
            "mov r0, r6",
            "bl rsym.zylog_transfer_category",
            "ldr r1, [sp, 0x14]",
            "mov r2, r0",
            "add r0, sp, 0x20",
            "b 0x31a0",
            "cmp r2, 0",
            "bne 0x31cc",
            "mov r0, r6",
            "bl rsym.zylog_transfer_category",
            "ldr r1, [sp, 0x1c]",
            "mov r2, r0",
            "add r0, sp, 0x20",
            "bl sym.imp.sprintf",
            "mov r7, 1",
            "add sl, r0, 1",
            "b 0x31cc",
            "mov r0, r6",
            "bl rsym.zylog_transfer_category",
            "ldr r1, [sp, 0x18]",
            "mov r2, r0",
            "add r0, sp, 0x20",
            "bl sym.imp.sprintf",
            "mov sl, r0",
            "cmp sl, 0",
            "moveq r3, 0",
            "andne r3, r7, 1",
            "cmp r3, 0",
            "beq 0x3310",
            "ldr r3, [0x00003338]",
            "ldr r7, [r5, r3]",
            "ldr r3, [r7]",
            "cmp r3, 0",
            "bge 0x3208",
            "mov r0, 0x10",
            "mov r1, 3",
            "mov r2, 0x1f",
            "bl sym.imp.socket",
            "str r0, [r7]",
            "mov r8, 0xc",
            "mov r1, 0",
            "mov r2, r8",
            "ldr r0, [sp, 8]",
            "bl sym.imp.memset",
            "mov r3, 0x22c",
            "mov r2, 0x10",
            "strh r2, [r4, r3]",
            "mov r7, 0",
            "bl sym.imp.getpid",
            "ldr r3, [0x00003338]",
            "mov r2, r8",
            "str r0, [r4, 0x230]",
            "add sl, sl, 0x13",
            "str r7, [r4, 0x234]",
            "bic sl, sl, 3",
            "ldr ip, [r5, r3]",
            "mov fp, 1",
            "ldr r1, [sp, 8]",
            "ldr r0, [ip]",
            "str ip, [sp]",
            "bl sym.imp.bind",
            "add r3, r4, 0x238",
            "mov r1, r7",
            "mov r0, r3",
            "mov r2, r8",
            "str r3, [sp, 4]",
            "bl sym.imp.memset",
            "mov r2, 0x238",
            "mov r1, 0x10",
            "strh r1, [r4, r2]",
            "mov r0, sl",
            "bl sym.imp.malloc",
            "str sl, [r0]",
            "mov sb, r0",
            "str r0, [r4, 0x244]",
            "bl sym.imp.getpid",
            "ldr sl, [r4, 0x244]",
            "mov r1, 0x11",
            "str r0, [sb, 0xc]",
            "add sb, r4, 0x248",
            "strh r1, [sl, 4]",
            "add r0, sl, 0x10",
            "strh fp, [sl, 6]",
            "add r1, sp, 0x20",
            "bl sym.imp.strcpy",
            "str r7, [sb, 4]",
            "mov r1, r7",
            "str sl, [r4, 0x248]",
            "ldr r2, [sl]",
            "add sl, r4, 0x250",
            "mov r0, sl",
            "str r2, [r4, 0x24c]",
            "mov r2, 0x1c",
            "bl sym.imp.memset",
            "ldr r3, [sp, 4]",
            "mov r1, sl",
            "str r8, [r4, 0x254]",
            "mov sl, r7",
            "str sb, [r4, 0x258]",
            "mov r2, r7",
            "str r3, [r4, 0x250]",
            "str fp, [r4, 0x25c]",
            "ldr ip, [sp]",
            "ldr r0, [ip]",
            "bl sym.imp.sendmsg",
            "add r6, r6, 1",
            "cmp r6, 0x48",
            "bne 0x3138",
            "add sp, sp, 0xa4",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "rsym.zylog_transfer_category": {
        "function_address": "0x000020b4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x144]!"
        ]
    },
    "sym.imp.sendmsg": {
        "function_address": "0x00001f70",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x21c]!"
        ]
    },
    "sym.zylog_init_buffer": {
        "function_address": "0x00006b10",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r5, 0",
            "ldr r3, [0x00006b64]",
            "mov r4, r0",
            "mov r6, r1",
            "mov r0, r1",
            "ldr r2, [0x00006b68]",
            "mov r1, r5",
            "add r3, pc, r3",
            "ldr r7, [r3, r2]",
            "movw r2, 0x1b6",
            "str r5, [r7]",
            "bl sym.imp.shmget",
            "cmp r0, 0",
            "movlt r3, 1",
            "mvnlt r0, 0",
            "strlt r3, [r7]",
            "strge r0, [r4]",
            "strge r6, [r4, 8]",
            "strge r5, [r4, 4]",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "sym.zylog_detach_buffer": {
        "function_address": "0x00006bbc",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r4, r0",
            "ldr r3, [0x00006bfc]",
            "ldr r2, [0x00006c00]",
            "add r3, pc, r3",
            "ldr r0, [r0, 4]",
            "ldr r5, [r3, r2]",
            "mov r3, 0",
            "str r3, [r5]",
            "bl sym.imp.shmdt",
            "cmp r0, 0",
            "movlt r3, 1",
            "strlt r3, [r5]",
            "mov r3, 0",
            "str r3, [r4, 4]",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.imp.shmdt": {
        "function_address": "0x00001f34",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x244]!"
        ]
    },
    "sym.zylog_mail_inc": {
        "function_address": "0x00004750",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r5, r0",
            "ldr r4, case.0x3974.1",
            "mov r7, r1",
            "ldr r3, [0x000047f0]",
            "add r4, pc, r4",
            "add r3, r4, r3",
            "ldr r3, [r3, 0x2cc]",
            "cmp r3, 0",
            "beq 0x4788",
            "cmp r3, 1",
            "mvnne r0, 0",
            "popne {r3, r4, r5, r6, r7, pc}",
            "b 0x4794",
            "bl rsym.zylog_init",
            "cmp r0, 0",
            "bne 0x47e4",
            "ldr r6, [0x000047f0]",
            "add r6, r4, r6",
            "add r0, r6, 0xc",
            "bl rsym.zylog_dolock",
            "cmn r0, 1",
            "popeq {r3, r4, r5, r6, r7, pc}",
            "cmp r5, 0",
            "ldreq r3, [0x000047f4]",
            "ldrne r3, [0x000047f8]",
            "ldreq r2, [r6, 0x228]",
            "ldrne r2, [r6, 0x228]",
            "ldr r1, [r2, r3]",
            "add r7, r7, r1",
            "str r7, [r2, r3]",
            "ldr r3, [0x000047f0]",
            "add r4, r4, r3",
            "add r0, r4, 0xc",
            "bl rsym.zylog_unlock",
            "mov r0, 0",
            "pop {r3, r4, r5, r6, r7, pc}",
            "mvn r0, 0",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "sym.zylog_get_entry": {
        "function_address": "0x00003ebc",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r5, r3",
            "ldr r6, [0x00003fd0]",
            "mov r7, r0",
            "mov r4, r2",
            "ldr r3, [0x00003fd4]",
            "add r6, pc, r6",
            "ldr r8, [sp, 0x1c]",
            "add r3, r6, r3",
            "ldr r3, [r3, 0x2cc]",
            "cmp r3, 0",
            "beq 0x3ef4",
            "cmp r3, 1",
            "b 0x3efc",
            "bl rsym.zylog_init",
            "cmp r0, 0",
            "mvnne r7, 0",
            "bne 0x3fc8",
            "ldr r0, [0x00003fd4]",
            "add r0, r6, r0",
            "add r0, r0, 0xc",
            "bl rsym.zylog_dolock",
            "cmn r0, 1",
            "moveq r7, r0",
            "beq 0x3fc8",
            "ldr r2, [sp, 0x18]",
            "mov r3, 0",
            "cmp r3, r5",
            "bhi 0x3fb4",
            "bne 0x3f3c",
            "cmp r2, r4",
            "bhi 0x3fb4",
            "subs r4, r4, r2",
            "sbc r5, r5, r3",
            "cmp r7, 0",
            "beq 0x3f58",
            "cmp r7, 1",
            "bne 0x3fb4",
            "b 0x3f80",
            "ldr r3, [0x00003fd4]",
            "lsl r4, r4, 0x17",
            "movw r2, 0x544",
            "lsr r4, r4, 0x17",
            "mov r0, r8",
            "add r3, r6, r3",
            "ldr r1, [r3, 0x228]",
            "mla r1, r4, r2, r1",
            "bl sym.imp.memcpy",
            "b 0x3fb8",
            "ldr r3, [0x00003fd4]",
            "lsl r4, r4, 0x16",
            "movw r2, 0x544",
            "lsr r4, r4, 0x16",
            "mov r0, r8",
            "add r3, r6, r3",
            "ldr r1, [r3, 0x228]",
            "mov r7, 0",
            "add r1, r1, 0xa8000",
            "add r1, r1, 0x800",
            "mla r1, r4, r2, r1",
            "bl sym.imp.memcpy",
            "b 0x3fb8",
            "mvn r7, 0",
            "ldr r3, [0x00003fd4]",
            "add r6, r6, r3",
            "add r0, r6, 0xc",
            "bl rsym.zylog_unlock",
            "mov r0, r7",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "sym.zylog_remove_lock": {
        "function_address": "0x00006ef8",
        "instructions": [
            "ldr r3, [0x00006f34]",
            "mov r1, 0",
            "ldr r2, [0x00006f38]",
            "push {r4, lr}",
            "add r3, pc, r3",
            "ldr r4, [r3, r2]",
            "mov r3, r1",
            "mov r2, r1",
            "str r1, [r4]",
            "ldr r0, [r0]",
            "bl sym.imp.semctl",
            "cmp r0, 0",
            "movlt r3, 1",
            "strlt r3, [r4]",
            "pop {r4, pc}"
        ]
    },
    "sym.zylog_prepare": {
        "function_address": "0x00004180",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x1d4",
            "mov sl, r3",
            "add r3, sp, 0x100",
            "mov r7, r0",
            "mov sb, r2",
            "ldrh fp, [r3, 0xf8]",
            "add r3, sp, 0x200",
            "ldrh r3, [r3]",
            "ldr r5, [0x000042cc]",
            "str r1, [sp]",
            "strh r3, [sp, 6]",
            "ldr r3, [0x000042d0]",
            "add r5, pc, r5",
            "ldr r6, [sp, 0x204]",
            "ldr r4, [sp, 0x208]",
            "add r3, r5, r3",
            "ldr r3, [r3, 0x2cc]",
            "cmp r3, 0",
            "beq 0x41d8",
            "cmp r3, 1",
            "b 0x41e0",
            "bl rsym.zylog_init",
            "cmp r0, 0",
            "bne 0x42c0",
            "cmp r7, 0x47",
            "bhi 0x42c0",
            "cmp sb, 0x47",
            "bhi 0x42c0",
            "mov r0, r7",
            "bl fcn.00002890",
            "cmp r0, 0",
            "bne 0x42c0",
            "cmp sl, 0",
            "beq 0x4224",
            "add r0, sp, 8",
            "mov r1, sl",
            "bl sym.imp.uam_find_first_match_by_ip",
            "cmp r0, 0",
            "addgt r8, sp, 0x18",
            "bgt 0x422c",
            "ldr r8, [0x000042d4]",
            "add r8, r5, r8",
            "mov r1, 0",
            "movw r2, 0x544",
            "mov r0, r4",
            "bl sym.imp.memset",
            "strb r7, [r4, 0x530]",
            "mov r0, 0",
            "strb sb, [r4, 0x531]",
            "ldr r3, [sp]",
            "str sl, [r4, 0x20]",
            "strh fp, [r4, 0x28]",
            "strb r3, [r4, 0x532]",
            "ldr r3, [sp, 0x1fc]",
            "str r3, [r4, 0x24]",
            "ldrh r3, [sp, 6]",
            "strh r3, [r4, 0x2a]",
            "bl sym.imp.time",
            "ldr r3, [0x000042d8]",
            "mov r1, 0x20",
            "str r0, [r4, 0x534]",
            "add r0, r4, 0x440",
            "add r0, r0, 0xc",
            "add r5, r5, r3",
            "mov r3, r8",
            "mov r2, r5",
            "bl sym.imp.snprintf",
            "cmp r6, 0",
            "strbeq r6, [r4, 0x42c]",
            "moveq r0, r6",
            "beq 0x42c4",
            "add r0, r4, 0x420",
            "mov r1, 0x20",
            "add r0, r0, 0xc",
            "mov r2, r5",
            "mov r3, r6",
            "bl sym.imp.snprintf",
            "mov r0, 0",
            "b 0x42c4",
            "mvn r0, 0",
            "add sp, sp, 0x1d4",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.imp.uam_find_first_match_by_ip": {
        "function_address": "0x00002060",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x17c]!"
        ]
    },
    "sym.zylog_call_lock": {
        "function_address": "0x0000333c",
        "instructions": [
            "push {r3, lr}",
            "ldr r3, [0x00003364]",
            "ldr r2, [0x00003368]",
            "add r3, pc, r3",
            "add r3, r3, r2",
            "add r0, r3, 0xc",
            "bl rsym.zylog_dolock",
            "cmn r0, 1",
            "popeq {r3, pc}",
            "pop {r3, pc}"
        ]
    },
    "sym.zylog_remove_buffer": {
        "function_address": "0x00006c04",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r1, 0",
            "ldr r3, [0x00006c4c]",
            "mov r4, r0",
            "ldr r2, [0x00006c50]",
            "add r3, pc, r3",
            "ldr r5, [r3, r2]",
            "mov r2, r1",
            "str r1, [r5]",
            "ldr r0, [r0]",
            "bl sym.imp.shmctl",
            "cmp r0, 0",
            "movlt r3, 1",
            "strlt r3, [r5]",
            "mov r3, 0",
            "str r3, [r4]",
            "str r3, [r4, 4]",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.imp.shmctl": {
        "function_address": "0x00001dd8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x32c]!"
        ]
    },
    "sym.zylog_init_lock": {
        "function_address": "0x00006c54",
        "instructions": [
            "ldr r3, [0x00006ca4]",
            "ldr r2, [0x00006ca8]",
            "push {r4, r5, r6, lr}",
            "mov r4, r0",
            "add r3, pc, r3",
            "mov r5, r1",
            "mov r0, r1",
            "mov r1, 1",
            "ldr r6, [r3, r2]",
            "mov r3, 0",
            "movw r2, 0x1b6",
            "str r3, [r6]",
            "bl sym.imp.semget",
            "cmp r0, 0",
            "movlt r3, 1",
            "mvnlt r0, 0",
            "strlt r3, [r6]",
            "strge r0, [r4]",
            "strge r5, [r4, 4]",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.zylog_reset": {
        "function_address": "0x000037d8",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "ldr r6, [0x00003860]",
            "ldr r3, [0x00003864]",
            "add r6, pc, r6",
            "add r3, r6, r3",
            "ldr r3, [r3, 0x2cc]",
            "cmp r3, 0",
            "beq 0x3808",
            "cmp r3, 1",
            "mvnne r0, 0",
            "popne {r3, r4, r5, r6, r7, pc}",
            "b 0x3814",
            "bl rsym.zylog_init",
            "cmp r0, 0",
            "bne 0x3858",
            "ldr r7, [0x00003864]",
            "add r5, r6, r7",
            "add r4, r5, 0xc",
            "mov r0, r4",
            "bl rsym.zylog_dolock",
            "cmn r0, 1",
            "popeq {r3, r4, r5, r6, r7, pc}",
            "mov r1, 0",
            "mov r2, 0x830",
            "ldr r0, [r6, r7]",
            "bl sym.imp.memset",
            "ldr r0, [r5, 0x2d4]",
            "bl rsym.zylog_init_log_system",
            "mov r0, r4",
            "bl rsym.zylog_unlock",
            "mov r0, 0",
            "pop {r3, r4, r5, r6, r7, pc}",
            "mvn r0, 0",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "rsym.zylog_init_log_system": {
        "function_address": "0x000021b0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x9c]!"
        ]
    },
    "sym.zylog_set_lock_val": {
        "function_address": "0x00006cf0",
        "instructions": [
            "ldr r2, [0x00006d2c]",
            "mov r3, r1",
            "ldr r1, [0x00006d30]",
            "push {r4, lr}",
            "add r2, pc, r2",
            "ldr r4, [r2, r1]",
            "mov r1, 0",
            "mov r2, 0x10",
            "str r1, [r4]",
            "ldr r0, [r0]",
            "bl sym.imp.semctl",
            "cmp r0, 0",
            "movlt r3, 1",
            "strlt r3, [r4]",
            "pop {r4, pc}"
        ]
    },
    "sym.zylog_set_config": {
        "function_address": "0x000039f4",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sl, lr}",
            "mov r7, r3",
            "ldr r4, [0x00003eb4]",
            "mov r5, r0",
            "mov r6, r1",
            "mov r8, r2",
            "ldr r3, [0x00003eb8]",
            "add r4, pc, r4",
            "add r3, r4, r3",
            "ldr r3, [r3, 0x2cc]",
            "cmp r3, 0",
            "beq 0x3a2c",
            "cmp r3, 1",
            "b 0x3a34",
            "bl rsym.zylog_init",
            "cmp r0, 0",
            "mvnne r5, 0",
            "bne 0x3eac",
            "ldr sl, [0x00003eb8]",
            "add r0, r4, sl",
            "add r0, r0, 0xc",
            "bl rsym.zylog_dolock",
            "cmn r0, 1",
            "moveq r5, r0",
            "beq 0x3eac",
            "cmp r5, 4",
            "addls pc, pc, r5, lsl 2",
            "b 0x3e98",
            "b 0x3a78",
            "b 0x3a98",
            "b 0x3ce8",
            "b 0x3d18",
            "b 0x3e20",
            "cmp r8, 3",
            "ldr r5, [r4, sl]",
            "bne 0x3e98",
            "mov r0, r7",
            "bl rsym.zyklog_nl_msg",
            "mov r0, r5",
            "mov r1, r7",
            "b 0x3e10",
            "cmp r6, 1",
            "bhi 0x3e98",
            "ldr r3, [0x00003eb8]",
            "ldr r5, [r4, r3]",
            "cmp r8, 0x18",
            "addls pc, pc, r8, lsl 2",
            "b 0x3e98",
            "b 0x3b18",
            "b 0x3b28",
            "b 0x3b3c",
            "b 0x3c50",
            "b 0x3b50",
            "b 0x3b60",
            "b 0x3b74",
            "b 0x3b88",
            "b 0x3b9c",
            "b 0x3bb0",
            "b 0x3bc4",
            "b 0x3bd8",
            "b 0x3bec",
            "b 0x3c24",
            "b 0x3e98",
            "b 0x3e98",
            "b 0x3e98",
            "b 0x3e98",
            "b 0x3e98",
            "b 0x3e98",
            "b 0x3e98",
            "b 0x3c70",
            "b 0x3c84",
            "b 0x3cc0",
            "b 0x3cd4",
            "mov r2, 0x2ac",
            "mla r6, r2, r6, r5",
            "add r0, r6, 0x94",
            "b 0x3d88",
            "mov r3, 0x2ac",
            "mla r6, r3, r6, r5",
            "ldrb r3, [r7]",
            "strb r3, [r6, 0x94]",
            "b 0x3e18",
            "mov r3, 0x2ac",
            "mla r6, r3, r6, r5",
            "ldrb r3, [r7, 1]",
            "strb r3, [r6, 0x95]",
            "b 0x3e18",
            "mov r3, 0x2ac",
            "mla r6, r3, r6, r5",
            "add r0, r6, 0x96",
            "b 0x3dcc",
            "mov r3, 0x2ac",
            "mla r6, r3, r6, r5",
            "ldr r3, [r7, 0x44]",
            "str r3, [r6, 0xd8]",
            "b 0x3e18",
            "mov r3, 0x2ac",
            "add r1, r7, 0x48",
            "mla r6, r3, r6, r5",
            "add r0, r6, 0xdc",
            "b 0x3dd0",
            "mov r3, 0x2ac",
            "add r1, r7, 0x90",
            "mla r6, r3, r6, r5",
            "add r0, r6, 0x124",
            "b 0x3dd0",
            "mov r3, 0x2ac",
            "add r1, r7, 0x110",
            "mla r6, r3, r6, r5",
            "add r0, r6, 0x1a4",
            "b 0x3dd0",
            "mov r3, 0x2ac",
            "add r1, r7, 0x190",
            "mla r6, r3, r6, r5",
            "add r0, r6, 0x224",
            "b 0x3dd0",
            "mov r3, 0x2ac",
            "mla r6, r3, r6, r5",
            "ldrb r3, [r7, 0x210]",
            "strb r3, [r6, 0x2a4]",
            "b 0x3e18",
            "mov r3, 0x2ac",
            "mla r6, r3, r6, r5",
            "ldrb r3, [r7, 0x211]",
            "strb r3, [r6, 0x2a5]",
            "b 0x3e18",
            "mov r3, 0x2ac",
            "add r1, r7, 0x210",
            "mul r6, r3, r6",
            "add r1, r1, 2",
            "add r0, r6, 0x2a0",
            "add r6, r6, 0x2c0",
            "add r0, r5, r0",
            "add r5, r5, r6",
            "add r0, r0, 6",
            "bl sym.imp.strcpy",
            "add r1, r7, 0x230",
            "add r0, r5, 6",
            "add r1, r1, 2",
            "b 0x3dd0",
            "mov r3, 0x2ac",
            "mla r6, r3, r6, r5",
            "ldrb r3, [r7, 0x252]",
            "strb r3, [r6, 0x2e6]",
            "ldrb r3, [r7, 0x253]",
            "strb r3, [r6, 0x2e7]",
            "ldrb r3, [r7, 0x254]",
            "strb r3, [r6, 0x2e8]",
            "ldrb r3, [r7, 0x255]",
            "strb r3, [r6, 0x2e9]",
            "b 0x3e18",
            "mov r3, 0x2ac",
            "add r1, r7, 0x254",
            "mul r6, r3, r6",
            "add r1, r1, 2",
            "add r6, r6, 0x2e0",
            "add r5, r5, r6",
            "add r0, r5, 0xa",
            "b 0x3e10",
            "mov r3, 0x2ac",
            "mla r6, r3, r6, r5",
            "ldrb r3, [r7, 0x29e]",
            "strb r3, [r6, 0x332]",
            "b 0x3e18",
            "mov r3, 0x2ac",
            "add r1, r7, 0x29c",
            "mul r6, r3, r6",
            "add r1, r1, 3",
            "mov r2, 9",
            "add r0, r6, 0x328",
            "add r6, r5, r6",
            "add r0, r5, r0",
            "add r6, r6, 0x330",
            "add r0, r0, 0xb",
            "add r6, r6, 1",
            "mov r5, 0",
            "bl sym.imp.strncpy",
            "strb r5, [r6, 0xb]",
            "b 0x3e9c",
            "mov r3, 0x2ac",
            "mla r6, r3, r6, r5",
            "ldr r3, [r7, 0x88]",
            "str r3, [r6, 0x11c]",
            "b 0x3e18",
            "mov r3, 0x2ac",
            "mla r6, r3, r6, r5",
            "ldr r3, [r7, 0x8c]",
            "str r3, [r6, 0x120]",
            "b 0x3e18",
            "cmp r8, 1",
            "ldr r0, [r4, sl]",
            "beq 0x3d00",
            "cmp r8, 3",
            "bne 0x3e98",
            "b 0x3d0c",
            "ldrb r3, [r7]",
            "strb r3, [r0, 0x48]",
            "b 0x3e18",
            "add r0, r0, 0x49",
            "add r1, r7, 1",
            "b 0x3e10",
            "cmp r6, 3",
            "bhi 0x3e98",
            "ldr r3, [0x00003eb8]",
            "ldr r3, [r4, r3]",
            "cmp r8, 0xf",
            "addls pc, pc, r8, lsl 2",
            "b 0x3e98",
            "b 0x3d74",
            "b 0x3d90",
            "b 0x3da4",
            "b 0x3e00",
            "b 0x3db8",
            "b 0x3e98",
            "b 0x3e98",
            "b 0x3e98",
            "b 0x3e98",
            "b 0x3e98",
            "b 0x3e98",
            "b 0x3e98",
            "b 0x3e98",
            "b 0x3e98",
            "b 0x3dec",
            "b 0x3dd8",
            "mov r2, 0x8c",
            "mul r6, r2, r6",
            "add r6, r6, 0x5e0",
            "add r3, r3, r6",
            "add r0, r3, 0xc",
            "mov r1, r7",
            "b 0x3e14",
            "mov r2, 0x8c",
            "mla r6, r2, r6, r3",
            "ldrb r3, [r7]",
            "strb r3, [r6, 0x5ec]",
            "b 0x3e18",
            "mov r2, 0x8c",
            "mla r6, r2, r6, r3",
            "ldrb r3, [r7, 1]",
            "strb r3, [r6, 0x5ed]",
            "b 0x3e18",
            "mov r2, 0x8c",
            "mul r6, r2, r6",
            "add r6, r6, 0x5e0",
            "add r3, r3, r6",
            "add r0, r3, 0xe",
            "add r1, r7, 2",
            "bl sym.imp.strcpy",
            "b 0x3e18",
            "mov r2, 0x8c",
            "mla r6, r2, r6, r3",
            "ldrb r3, [r7, 0x43]",
            "strb r3, [r6, 0x62f]",
            "b 0x3e18",
            "mov r2, 0x8c",
            "mla r6, r2, r6, r3",
            "ldrb r3, [r7, 0x42]",
            "strb r3, [r6, 0x62e]",
            "b 0x3e18",
            "mov r2, 0x8c",
            "add r1, r7, 0x44",
            "mla r6, r2, r6, r3",
            "add r0, r6, 0x630",
            "mov r2, 0x48",
            "bl sym.imp.memcpy",
            "mov r5, 0",
            "b 0x3e9c",
            "sub r8, r8, 0x10",
            "ldr sl, [0x00003eb8]",
            "cmp r8, 4",
            "addls pc, pc, r8, lsl 2",
            "b 0x3e98",
            "b 0x3e48",
            "b 0x3e58",
            "b 0x3e68",
            "b 0x3e78",
            "b 0x3e88",
            "ldr r3, [r4, sl]",
            "ldr r2, [r7]",
            "str r2, [r3, 0x81c]",
            "b 0x3e18",
            "ldr r3, [r4, sl]",
            "ldr r2, [r7]",
            "str r2, [r3, 0x820]",
            "b 0x3e18",
            "ldr r3, [r4, sl]",
            "ldr r2, [r7]",
            "str r2, [r3, 0x824]",
            "b 0x3e18",
            "ldr r3, [r4, sl]",
            "ldr r2, [r7]",
            "str r2, [r3, 0x828]",
            "b 0x3e18",
            "ldr r3, [r4, sl]",
            "ldr r2, [r7]",
            "str r2, [r3, 0x82c]",
            "b 0x3e18",
            "mvn r5, 0",
            "ldr r3, [0x00003eb8]",
            "add r4, r4, r3",
            "add r0, r4, 0xc",
            "bl rsym.zylog_unlock",
            "mov r0, r5",
            "pop {r3, r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "rsym.zyklog_nl_msg": {
        "function_address": "0x00001f10",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x25c]!"
        ]
    },
    "sym.imp.strncpy": {
        "function_address": "0x00001f94",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x204]!"
        ]
    },
    "sym.zylog_extension6": {
        "function_address": "0x000060f0",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "sub sp, sp, 0x560",
            "add r5, sp, 0x500",
            "ldr r6, [0x000061c8]",
            "ldrh lr, [r5, 0x70]",
            "ldrh ip, [r5, 0x78]",
            "add r5, sp, 0x18",
            "ldr r4, [sp, 0x580]",
            "add r6, pc, r6",
            "str lr, [sp]",
            "ldr lr, [sp, 0x574]",
            "str ip, [sp, 8]",
            "ldr ip, [sp, 0x57c]",
            "str lr, [sp, 4]",
            "str r5, [sp, 0x10]",
            "str ip, [sp, 0xc]",
            "bl rsym.zylog_prepare6",
            "cmp r0, 0",
            "bne 0x61c0",
            "cmp r4, 0",
            "beq 0x6194",
            "ldr r3, [0x000061cc]",
            "add r0, r5, 0x460",
            "mov r1, 0x10",
            "add r0, r0, 0xc",
            "add r6, r6, r3",
            "ldr r3, [r4]",
            "mov r2, r6",
            "bl sym.imp.snprintf",
            "add r0, r5, 0x470",
            "mov r1, 0x10",
            "mov r2, r6",
            "ldr r3, [r4, 4]",
            "add r0, r0, 0xc",
            "bl sym.imp.snprintf",
            "add r0, r5, 0x480",
            "mov r1, 0x10",
            "add r0, r0, 0xc",
            "mov r2, r6",
            "ldr r3, [r4, 8]",
            "bl sym.imp.snprintf",
            "add r0, sp, 0x20",
            "add r3, sp, 0x580",
            "add r3, r3, 8",
            "sub r4, r0, 8",
            "mov r1, 0x400",
            "add r0, r0, 0x24",
            "ldr r2, [sp, 0x584]",
            "str r3, [sp, 0x55c]",
            "bl sym.imp.vsnprintf",
            "mov r0, r4",
            "bl rsym.__zylog2",
            "add sp, sp, 0x560",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.zylog_notify_lock": {
        "function_address": "0x00006ea4",
        "instructions": [
            "ldr r3, [0x00006ef0]",
            "push {r0, r1, r2, r4, r5, lr}",
            "mov r4, 1",
            "ldr r2, [0x00006ef4]",
            "mov r1, sp",
            "add r3, pc, r3",
            "strh r4, [sp, 2]",
            "ldr r5, [r3, r2]",
            "mov r3, 0",
            "strh r3, [sp]",
            "mov r2, r4",
            "str r3, [r5]",
            "mov r3, 0x800",
            "ldr r0, [r0]",
            "strh r3, [sp, 4]",
            "bl sym.imp.semop",
            "cmp r0, 0",
            "strlt r4, [r5]",
            "pop {r1, r2, r3, r4, r5, pc}"
        ]
    },
    "sym.zylog_exit": {
        "function_address": "0x000047fc",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "ldr r4, case.0x38d0.1",
            "ldr r6, [0x00004844]",
            "add r4, pc, r4",
            "add r6, r4, r6",
            "add r5, r6, 0x2d8",
            "add r6, r6, 0x2e8",
            "ldr r0, [r5, 4]!",
            "bl sym.imp.close",
            "cmp r5, r6",
            "bne 0x4818",
            "ldr r3, [0x00004844]",
            "add r4, r4, r3",
            "ldr r0, [r4, 0x2ec]",
            "bl sym.imp.close",
            "mov r0, 0",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.log_counter_create_shm": {
        "function_address": "0x00006f8c",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r5, r0",
            "ldr r4, [0x00006ff4]",
            "mov r0, r1",
            "mov r1, r2",
            "movw r2, 0x7b6",
            "bl sym.imp.shmget",
            "subs r6, r0, 0",
            "add r4, pc, r4",
            "bge 0x6fc8",
            "ldr r0, [0x00006ff8]",
            "mov r7, 0",
            "add r0, r4, r0",
            "bl sym.imp.perror",
            "b 0x6fec",
            "mov r1, 0",
            "mov r2, r1",
            "bl sym.imp.shmat",
            "subs r7, r0, 0",
            "strne r6, [r5]",
            "bne 0x6fec",
            "ldr r0, [0x00006ffc]",
            "add r0, r4, r0",
            "bl sym.imp.perror",
            "mov r0, r7",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "sym.zylog_getid_by_pattern": {
        "function_address": "0x00006300",
        "instructions": [
            "ldr r3, [0x00006408]",
            "push {r0, r1, r2, r4, r5, r6, r7, r8, sl, lr}",
            "mov sl, r0",
            "ldr r0, [0x0000640c]",
            "add r3, pc, r3",
            "add r0, r3, r0",
            "ldr r1, [r0, 0x770]",
            "cmp r1, 0",
            "bne 0x6378",
            "ldr r4, [0x00006410]",
            "mov r5, 0x38",
            "ldr r2, [r0, 0x774]",
            "ldr ip, [r3, r4]",
            "b 0x635c",
            "ldr r6, [ip, 0xc]",
            "add ip, ip, 0x38",
            "cmp r6, 0",
            "ldrne r7, [r3, r4]",
            "addne r6, r0, r2, lsl 2",
            "addne r2, r2, 1",
            "mlane r7, r5, r1, r7",
            "add r1, r1, 1",
            "strne r7, [r6, 0x778]",
            "cmp r1, 0x1d",
            "bne 0x6338",
            "ldr r1, [0x0000640c]",
            "add r1, r3, r1",
            "str r2, [r1, 0x774]",
            "mov r2, 1",
            "str r2, [r1, 0x770]",
            "ldr r6, [0x0000640c]",
            "mov r4, 0",
            "mov r7, r4",
            "add r6, r3, r6",
            "add r8, r6, 0x770",
            "add r8, r8, 4",
            "b 0x63f0",
            "ldr r5, [r8, 4]!",
            "ldr r3, [r5, 0xc]",
            "cmp r3, 0",
            "beq 0x63ec",
            "add r0, r5, 0x18",
            "mov r1, sl",
            "mov r2, r7",
            "mov r3, r7",
            "str r7, [sp]",
            "bl sym.imp.regexec",
            "cmp r0, 0",
            "bne 0x63ec",
            "cmp r4, 0",
            "ble 0x6400",
            "sub r3, r4, 1",
            "add r4, r6, r4, lsl 2",
            "add r3, r6, r3, lsl 2",
            "ldr r1, [r4, 0x778]",
            "ldr r2, [r3, 0x778]",
            "str r1, [r3, 0x778]",
            "str r2, [r4, 0x778]",
            "b 0x6400",
            "add r4, r4, 1",
            "ldr r3, [r6, 0x774]",
            "cmp r4, r3",
            "blt 0x6394",
            "mov r5, 0",
            "mov r0, r5",
            "pop {r1, r2, r3, r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "sym.imp.regexec": {
        "function_address": "0x00002048",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x18c]!"
        ]
    },
    "sym.zylog_get_lock_val": {
        "function_address": "0x00006cac",
        "instructions": [
            "ldr r3, [0x00006ce8]",
            "mov r1, 0",
            "ldr r2, [0x00006cec]",
            "push {r4, lr}",
            "add r3, pc, r3",
            "ldr r4, [r3, r2]",
            "mov r3, r1",
            "mov r2, 0xc",
            "str r1, [r4]",
            "ldr r0, [r0]",
            "bl sym.imp.semctl",
            "cmp r0, 0",
            "movlt r3, 1",
            "strlt r3, [r4]",
            "pop {r4, pc}"
        ]
    },
    "sym.zylog_mail_event": {
        "function_address": "0x000045b8",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r5, r0",
            "ldr r4, [0x00004644]",
            "mov r6, r1",
            "ldr r3, [0x00004648]",
            "add r4, pc, r4",
            "add r3, r4, r3",
            "ldr r3, [r3, 0x2cc]",
            "cmp r3, 0",
            "beq 0x45e8",
            "cmp r3, 1",
            "b 0x45f0",
            "bl rsym.zylog_init",
            "cmp r0, 0",
            "bne 0x4638",
            "cmp r5, 1",
            "bhi 0x4638",
            "ldr r3, [0x00004648]",
            "add r4, r4, r3",
            "add r4, r4, 0xc",
            "mov r0, r4",
            "bl rsym.zylog_dolock",
            "cmn r0, 1",
            "moveq r5, r0",
            "beq 0x463c",
            "mov r0, r5",
            "mov r1, r6",
            "bl fcn.00002cb0",
            "mov r5, r0",
            "mov r0, r4",
            "bl rsym.zylog_unlock",
            "b 0x463c",
            "mvn r5, 0",
            "mov r0, r5",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.zylog2": {
        "function_address": "0x000061d0",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r4, r0",
            "ldr r5, [0x000062f4]",
            "sub sp, sp, 0x1c8",
            "mov r6, r1",
            "ldr r3, [0x000062f8]",
            "add r5, pc, r5",
            "add r3, r5, r3",
            "ldr r3, [r3, 0x2cc]",
            "cmp r3, 0",
            "beq 0x6204",
            "cmp r3, 1",
            "b 0x620c",
            "bl rsym.zylog_init",
            "cmp r0, 0",
            "bne 0x62e8",
            "ldrb r0, [r4, 0x530]",
            "cmp r0, 0x47",
            "bhi 0x62e8",
            "ldrb r3, [r4, 0x531]",
            "cmp r3, 0x47",
            "bhi 0x62e8",
            "bl fcn.00002890",
            "cmp r0, 0",
            "bne 0x62e8",
            "tst r6, 1",
            "beq 0x62b8",
            "tst r6, 4",
            "beq 0x6284",
            "ldr r3, [r4]",
            "cmp r3, 0",
            "bne 0x6274",
            "ldr r3, [r4, 4]",
            "cmp r3, 0",
            "bne 0x6274",
            "ldr r3, [r4, 8]",
            "cmp r3, 0",
            "bne 0x6274",
            "ldr r3, [r4, 0xc]",
            "cmp r3, 0",
            "beq 0x62a4",
            "mov r0, sp",
            "mov r1, r4",
            "bl sym.imp.uam_find_first_match_by_ip6",
            "b 0x6298",
            "ldr r1, [r4, 0x20]",
            "cmp r1, 0",
            "beq 0x62a4",
            "mov r0, sp",
            "bl sym.imp.uam_find_first_match_by_ip",
            "cmp r0, 0",
            "addgt r1, sp, 0x10",
            "bgt 0x62ac",
            "ldr r1, [0x000062fc]",
            "add r1, r5, r1",
            "add r0, r4, 0x440",
            "add r0, r0, 0xc",
            "bl sym.imp.strcpy",
            "tst r6, 2",
            "ldr r0, [r4, 0x534]",
            "ldrbne r3, [r4, 0x53a]",
            "orrne r3, r3, 0x10",
            "strbne r3, [r4, 0x53a]",
            "cmp r0, 0",
            "bne 0x62dc",
            "bl sym.imp.time",
            "str r0, [r4, 0x534]",
            "mov r0, r4",
            "bl rsym.__zylog2",
            "b 0x62ec",
            "mvn r0, 0",
            "add sp, sp, 0x1c8",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.imp.uam_find_first_match_by_ip6": {
        "function_address": "0x00002168",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0xcc]!"
        ]
    },
    "sym.zylog_get_current_num_file": {
        "function_address": "0x000065f8",
        "instructions": [
            "ldr r3, [0x00006668]",
            "cmp r0, 2",
            "str lr, [sp, -4]!",
            "sub sp, sp, 0x5c",
            "add r3, pc, r3",
            "beq 0x6624",
            "cmp r0, 3",
            "mvnne r2, 0",
            "mvnne r3, 0",
            "bne 0x6658",
            "b 0x662c",
            "ldr r0, [0x0000666c]",
            "b 0x6630",
            "ldr r0, [0x00006670]",
            "add r0, r3, r0",
            "mov r1, sp",
            "bl sym.imp.stat",
            "cmp r0, 0",
            "movw r1, 0x544",
            "ldreq r0, [sp, 0x2c]",
            "movne r0, 0",
            "bl fcn.000070a0",
            "mov r2, r0",
            "mov r3, 0",
            "mov r0, r2",
            "mov r1, r3",
            "add sp, sp, 0x5c",
            "ldm sp!, {pc}"
        ]
    },
    "fcn.000070a0": {
        "function_address": "0x000070a0",
        "instructions": [
            "subs r2, r1, 1",
            "bxeq lr",
            "blo 0x713c",
            "cmp r0, r1",
            "bls 0x7120",
            "tst r1, r2",
            "beq 0x712c",
            "clz r3, r1",
            "clz r2, r0",
            "sub r2, r3, r2",
            "mov r3, 1",
            "lsl r1, r1, r2",
            "lsl r3, r3, r2",
            "mov r2, 0",
            "cmp r0, r1",
            "subhs r0, r0, r1",
            "orrhs r2, r2, r3",
            "cmp r0, r1, lsr 1",
            "subhs r0, r0, r1, lsr 1",
            "orrhs r2, r2, r3, lsr 1",
            "cmp r0, r1, lsr 2",
            "subhs r0, r0, r1, lsr 2",
            "orrhs r2, r2, r3, lsr 2",
            "cmp r0, r1, lsr 3",
            "subhs r0, r0, r1, lsr 3",
            "orrhs r2, r2, r3, lsr 3",
            "cmp r0, 0",
            "lsrsne r3, r3, 4",
            "lsrne r1, r1, 4",
            "bne 0x70d8",
            "mov r0, r2",
            "bx lr",
            "moveq r0, 1",
            "movne r0, 0",
            "bx lr",
            "clz r2, r1",
            "rsb r2, r2, 0x1f",
            "lsr r0, r0, r2",
            "bx lr",
            "cmp r0, 0",
            "mvnne r0, 0",
            "b 0x7168",
            "push {r1, lr}",
            "mov r0, 8",
            "bl sym.imp.raise",
            "pop {r1, pc}"
        ]
    },
    "sym.imp.raise": {
        "function_address": "0x000021bc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x94]!"
        ]
    },
    "sym.zylog_notify_mail_delivery": {
        "function_address": "0x0000464c",
        "instructions": [
            "push {r3, lr}",
            "ldr r3, [0x0000469c]",
            "ldr r2, [0x000046a0]",
            "add r3, pc, r3",
            "add r3, r3, r2",
            "ldr r3, [r3, 0x2cc]",
            "cmp r3, 0",
            "beq 0x467c",
            "cmp r3, 1",
            "mvnne r0, 0",
            "popne {r3, pc}",
            "b 0x4688",
            "bl rsym.zylog_init",
            "cmp r0, 0",
            "bne 0x4694",
            "bl fcn.000026f8",
            "mov r0, 0",
            "pop {r3, pc}",
            "mvn r0, 0",
            "pop {r3, pc}"
        ]
    },
    "sym.log_counter_semaphore_unlock": {
        "function_address": "0x00007050",
        "instructions": [
            "mov r3, 0",
            "push {r0, r1, r4, lr}",
            "strh r3, [sp]",
            "mov r3, 1",
            "mov r1, sp",
            "mov r2, 1",
            "strh r3, [sp, 2]",
            "mov r3, 0x1000",
            "ldr r4, [0x00007098]",
            "strh r3, [sp, 4]",
            "bl sym.imp.semop",
            "cmn r0, 1",
            "add r4, pc, r4",
            "bne 0x7094",
            "ldr r0, [0x0000709c]",
            "add r0, r4, r0",
            "bl sym.imp.perror",
            "pop {r2, r3, r4, pc}"
        ]
    },
    "sym.init_zylog_identifier": {
        "function_address": "0x00006414",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x10c",
            "ldr r4, [0x000064bc]",
            "mov r5, 0",
            "mov r8, 0x38",
            "add r7, sp, 8",
            "ldr r3, [0x000064c0]",
            "ldr sb, [0x000064c4]",
            "add r4, pc, r4",
            "ldr fp, [0x000064c8]",
            "add r3, r4, r3",
            "ldr r6, [r4, sb]",
            "str r3, [sp, 4]",
            "b 0x64ac",
            "ldr r1, [r6, 0xc]",
            "cmp r1, 0",
            "beq 0x64a4",
            "mul sl, r8, r5",
            "ldr r3, [r4, sb]",
            "mov r2, 9",
            "add sl, sl, 0x18",
            "add sl, sl, r3",
            "mov r0, sl",
            "bl sym.imp.regcomp",
            "cmp r0, 0",
            "beq 0x64a4",
            "mov r1, sl",
            "mov r2, r7",
            "mov r3, 0x100",
            "bl sym.imp.regerror",
            "ldr r3, [r4, fp]",
            "ldr r1, [sp, 4]",
            "ldr r2, [r6, 0xc]",
            "ldr r0, [r3]",
            "mov r3, r7",
            "bl sym.imp.fprintf",
            "add r5, r5, 1",
            "add r6, r6, 0x38",
            "cmp r5, 0x1d",
            "bne 0x644c",
            "add sp, sp, 0x10c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.imp.regcomp": {
        "function_address": "0x00001ff4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x1c4]!"
        ]
    },
    "sym.imp.regerror": {
        "function_address": "0x00002090",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x15c]!"
        ]
    },
    "sym.zylog_init": {
        "function_address": "0x0000369c",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "ldr r4, [0x000037b8]",
            "ldr r5, [0x000037bc]",
            "add r4, pc, r4",
            "add r5, r4, r5",
            "ldr r3, [r5, 0x2cc]",
            "cmp r3, 0",
            "bne 0x37b0",
            "add r0, r5, 0xc",
            "ldr r1, [0x000037c0]",
            "bl rsym.zylog_init_lock",
            "cmp r0, 0",
            "mvnlt r3, 0",
            "movlt r0, 5",
            "strlt r3, [r5, 0x2cc]",
            "poplt {r4, r5, r6, pc}",
            "add r6, r5, 0x2d0",
            "ldr r1, [0x000037c4]",
            "mov r0, r6",
            "bl rsym.zylog_init_buffer",
            "cmp r0, 0",
            "mvnlt r3, 0",
            "movlt r0, 6",
            "strlt r3, [r5, 0x2cc]",
            "poplt {r4, r5, r6, pc}",
            "mov r0, r6",
            "bl rsym.zylog_attach_buffer",
            "cmp r0, 0",
            "mvnlt r3, 0",
            "movlt r0, 7",
            "strlt r3, [r5, 0x2cc]",
            "poplt {r4, r5, r6, pc}",
            "ldr r2, [r5, 0x2d4]",
            "ldr r3, [0x000037c8]",
            "str r2, [r5, 0x228]",
            "add r3, r2, r3",
            "str r3, [r5]",
            "bl fcn.0000293c",
            "bl fcn.0000238c",
            "cmp r0, 0",
            "str r0, [r5, 4]",
            "bge 0x375c",
            "ldr r3, [0x000037cc]",
            "ldr r0, [0x000037d0]",
            "ldr r3, [r4, r3]",
            "add r0, r4, r0",
            "ldr r1, [r3]",
            "bl sym.imp.fputs",
            "ldr r5, [0x000037bc]",
            "mov r1, 0",
            "mov r2, 0x40",
            "add r5, r4, r5",
            "add r6, r5, 0x28c",
            "mov r0, r6",
            "bl sym.imp.memset",
            "ldr r1, [0x000037d4]",
            "mov r0, r6",
            "add r1, r4, r1",
            "bl sym.imp.strcpy",
            "mvn r3, 0",
            "mov r0, 0",
            "str r3, [r5, 0x2dc]",
            "str r3, [r5, 0x2e0]",
            "str r3, [r5, 0x2e4]",
            "str r3, [r5, 0x2e8]",
            "str r3, [r5, 0x2ec]",
            "add r3, r3, 2",
            "str r3, [r5, 0x2cc]",
            "pop {r4, r5, r6, pc}",
            "mvn r0, 0",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "rsym.zylog_init_lock": {
        "function_address": "0x00001fdc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x1d4]!"
        ]
    },
    "rsym.zylog_init_buffer": {
        "function_address": "0x00001f40",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x23c]!"
        ]
    },
    "rsym.zylog_attach_buffer": {
        "function_address": "0x00001da8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x34c]!"
        ]
    },
    "fcn.0000293c": {
        "function_address": "0x0000293c",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "sub sp, sp, 0x100",
            "ldr r4, [0x000029d4]",
            "ldr r0, [0x000029d8]",
            "ldr r1, [0x000029dc]",
            "add r4, pc, r4",
            "ldr r6, [0x000029e0]",
            "add r0, r4, r0",
            "add r1, r4, r1",
            "bl sym.imp.fopen",
            "subs r5, r0, 0",
            "addeq r4, r4, r6",
            "strbeq r5, [r4, 0x14]",
            "beq 0x29cc",
            "mov r1, 0xf0",
            "mov r2, 1",
            "mov r3, r5",
            "add r0, sp, 0x10",
            "bl sym.imp.fread",
            "mov r0, r5",
            "bl sym.imp.fclose",
            "ldrb r1, [sp, 0xfa]",
            "add r0, r4, r6",
            "ldrb r2, [sp, 0xf8]",
            "add r0, r0, 0x14",
            "ldrb r3, [sp, 0xf9]",
            "str r1, [sp]",
            "ldrb r1, [sp, 0xfb]",
            "str r1, [sp, 4]",
            "ldrb r1, [sp, 0xfc]",
            "str r1, [sp, 8]",
            "ldrb r1, [sp, 0xfd]",
            "str r1, [sp, 0xc]",
            "ldr r1, [0x000029e4]",
            "add r1, r4, r1",
            "bl sym.imp.sprintf",
            "add sp, sp, 0x100",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.0000238c": {
        "function_address": "0x0000238c",
        "instructions": [
            "push {r0, r1, r2, r4, r5, lr}",
            "ldr r5, [0x000023d8]",
            "ldr r0, [0x000023dc]",
            "ldr r1, [0x000023e0]",
            "add r5, pc, r5",
            "add r0, r5, r0",
            "add r1, r5, r1",
            "bl sym.imp.fopen",
            "subs r4, r0, 0",
            "mvneq r0, 0",
            "beq 0x23d4",
            "ldr r1, [0x000023e4]",
            "add r2, sp, 4",
            "add r1, r5, r1",
            "bl sym.imp.fscanf",
            "mov r0, r4",
            "bl sym.imp.fclose",
            "ldr r0, [sp, 4]",
            "pop {r1, r2, r3, r4, r5, pc}"
        ]
    },
    "sym.imp.fputs": {
        "function_address": "0x00002180",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0xbc]!"
        ]
    },
    "sym.imp.fread": {
        "function_address": "0x00001fd0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x1dc]!"
        ]
    },
    "sym.imp.fscanf": {
        "function_address": "0x00001e2c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x2f4]!"
        ]
    },
    "sym.zylog_dolock": {
        "function_address": "0x00006db8",
        "instructions": [
            "push {r0, r1, r4, r5, r6, r7, r8, lr}",
            "mov r7, r0",
            "ldr r4, [0x00006e48]",
            "mov r6, sp",
            "mov r2, 0",
            "ldr r5, [0x00006e4c]",
            "add r4, pc, r4",
            "ldr r3, [r4, r5]",
            "str r2, [r3]",
            "mov r3, 0",
            "ldr r0, [r7]",
            "strh r3, [sp]",
            "mvn r3, 0",
            "strh r3, [sp, 2]",
            "mov r1, sp",
            "mov r3, 0x1000",
            "mov r2, 1",
            "strh r3, [sp, 4]",
            "bl sym.imp.semop",
            "subs r8, r0, 0",
            "bge 0x6e40",
            "bl sym.imp.__errno_location",
            "ldr r3, [r0]",
            "cmp r3, 4",
            "ldreq r2, [r4, r5]",
            "streq r3, [r2]",
            "beq 0x6ddc",
            "cmp r3, 0x2b",
            "ldr r3, [0x00006e4c]",
            "moveq r2, 3",
            "movne r2, 1",
            "ldreq r3, [r4, r3]",
            "ldrne r3, [r4, r3]",
            "str r2, [r3]",
            "mov r0, r8",
            "pop {r2, r3, r4, r5, r6, r7, r8, pc}"
        ]
    },
    "sym.zylog": {
        "function_address": "0x00005f20",
        "instructions": [
            "push {r4, r5, lr}",
            "sub sp, sp, 0x560",
            "sub sp, sp, 4",
            "add r4, sp, 0x500",
            "add r5, sp, 0x20",
            "ldrh lr, [r4, 0x70]",
            "ldrh ip, [r4, 0x78]",
            "sub r4, r5, 8",
            "str r4, [sp, 0x10]",
            "str lr, [sp]",
            "str ip, [sp, 8]",
            "ldr lr, [sp, 0x574]",
            "ldr ip, [sp, 0x57c]",
            "str lr, [sp, 4]",
            "str ip, [sp, 0xc]",
            "bl rsym.zylog_prepare",
            "cmp r0, 0",
            "bne 0x5f8c",
            "add r3, sp, 0x580",
            "add r0, r5, 0x24",
            "add r3, r3, 4",
            "mov r1, 0x400",
            "ldr r2, [sp, 0x580]",
            "str r3, [sp, 0x55c]",
            "bl sym.imp.vsnprintf",
            "mov r0, r4",
            "bl rsym.__zylog2",
            "add sp, sp, 0x164",
            "add sp, sp, 0x400",
            "pop {r4, r5, pc}"
        ]
    },
    "sym.zylog_unlock": {
        "function_address": "0x00006e50",
        "instructions": [
            "ldr r3, [0x00006e9c]",
            "push {r0, r1, r2, r4, r5, lr}",
            "mov r4, 1",
            "ldr r2, [0x00006ea0]",
            "mov r1, sp",
            "add r3, pc, r3",
            "strh r4, [sp, 2]",
            "ldr r5, [r3, r2]",
            "mov r3, 0",
            "strh r3, [sp]",
            "mov r2, r4",
            "str r3, [r5]",
            "mov r3, 0x1000",
            "ldr r0, [r0]",
            "strh r3, [sp, 4]",
            "bl sym.imp.semop",
            "cmp r0, 0",
            "strlt r4, [r5]",
            "pop {r1, r2, r3, r4, r5, pc}"
        ]
    },
    "sym.zylog_prepare6": {
        "function_address": "0x000042dc",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x1d4",
            "mov sl, r3",
            "add r3, sp, 0x100",
            "mov r7, r0",
            "mov fp, r1",
            "ldrh r3, [r3, 0xf8]",
            "mov r8, r2",
            "ldr r5, [0x00004478]",
            "ldr sb, [sp, 0x204]",
            "strh r3, [sp, 4]",
            "add r3, sp, 0x200",
            "ldrh r3, [r3]",
            "add r5, pc, r5",
            "ldr r4, [sp, 0x208]",
            "strh r3, [sp, 6]",
            "ldr r3, [0x0000447c]",
            "add r3, r5, r3",
            "ldr r3, [r3, 0x2cc]",
            "cmp r3, 0",
            "beq 0x4338",
            "cmp r3, 1",
            "b 0x4340",
            "bl rsym.zylog_init",
            "cmp r0, 0",
            "bne 0x446c",
            "cmp r7, 0x47",
            "bhi 0x446c",
            "cmp r8, 0x47",
            "bhi 0x446c",
            "mov r0, r7",
            "bl fcn.00002890",
            "cmp r0, 0",
            "bne 0x446c",
            "cmp sl, 0",
            "beq 0x439c",
            "ldr r3, [sl]",
            "cmp r3, 0",
            "bne 0x439c",
            "ldr r3, [sl, 4]",
            "cmp r3, 0",
            "bne 0x439c",
            "ldr r3, [sl, 8]",
            "cmp r3, 0",
            "bne 0x439c",
            "ldr r3, [sl, 0xc]",
            "cmp r3, 0",
            "beq 0x43b4",
            "add r0, sp, 8",
            "mov r1, sl",
            "bl sym.imp.uam_find_first_match_by_ip6",
            "cmp r0, 0",
            "addgt r6, sp, 0x18",
            "bgt 0x43bc",
            "ldr r6, [0x00004480]",
            "add r6, r5, r6",
            "mov r1, 0",
            "movw r2, 0x544",
            "mov r0, r4",
            "bl sym.imp.memset",
            "cmp sl, 0",
            "strb r7, [r4, 0x530]",
            "strb r8, [r4, 0x531]",
            "strb fp, [r4, 0x532]",
            "ldmne sl, {r0, r1, r2, r3}",
            "ldr lr, [sp, 0x1fc]",
            "stmne r4, {r0, r1, r2, r3}",
            "cmp lr, 0",
            "addne ip, r4, 0x10",
            "ldmne lr, {r0, r1, r2, r3}",
            "ldrh lr, [sp, 6]",
            "stmne ip, {r0, r1, r2, r3}",
            "mov r0, 0",
            "ldrh r3, [sp, 4]",
            "strh lr, [r4, 0x2a]",
            "strh r3, [r4, 0x28]",
            "bl sym.imp.time",
            "ldr r3, [0x00004484]",
            "mov r1, 0x20",
            "str r0, [r4, 0x534]",
            "add r0, r4, 0x440",
            "add r0, r0, 0xc",
            "add r5, r5, r3",
            "mov r3, r6",
            "mov r2, r5",
            "bl sym.imp.snprintf",
            "cmp sb, 0",
            "strbeq sb, [r4, 0x42c]",
            "beq 0x4458",
            "add r0, r4, 0x420",
            "mov r1, 0x20",
            "add r0, r0, 0xc",
            "mov r2, r5",
            "mov r3, sb",
            "bl sym.imp.snprintf",
            "ldr r3, [r4, 0x53c]",
            "mov r0, 0",
            "orr r3, r3, 4",
            "str r3, [r4, 0x53c]",
            "b 0x4470",
            "mvn r0, 0",
            "add sp, sp, 0x1d4",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.zylog_get_current_num": {
        "function_address": "0x00003fd8",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r5, r0",
            "ldr r6, [0x0000407c]",
            "ldr r3, [0x00004080]",
            "add r6, pc, r6",
            "add r3, r6, r3",
            "ldr r3, [r3, 0x2cc]",
            "cmp r3, 0",
            "beq 0x4004",
            "cmp r3, 1",
            "b 0x400c",
            "bl rsym.zylog_init",
            "cmp r0, 0",
            "bne 0x4068",
            "ldr r4, [0x00004080]",
            "add r4, r6, r4",
            "add r0, r4, 0xc",
            "bl rsym.zylog_dolock",
            "cmn r0, 1",
            "beq 0x4068",
            "cmp r5, 0",
            "ldreq r2, [r4, 0x228]",
            "ldreq r3, [0x00004084]",
            "beq 0x4050",
            "cmp r5, 1",
            "mvnne r4, 0",
            "mvnne r5, 0",
            "bne 0x4054",
            "ldr r2, [r4, 0x228]",
            "ldr r3, [0x00004088]",
            "ldrd r4, r5, [r2, r3]",
            "ldr r3, [0x00004080]",
            "add r6, r6, r3",
            "add r0, r6, 0xc",
            "bl rsym.zylog_unlock",
            "b 0x4070",
            "mvn r4, 0",
            "mvn r5, 0",
            "mov r0, r4",
            "mov r1, r5",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.zylog_init_log_system": {
        "function_address": "0x0000338c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r5, r0",
            "ldr r4, [0x00003670]",
            "sub sp, sp, 0x4c",
            "ldr r0, [0x00003674]",
            "ldr r1, [0x00003678]",
            "add r4, pc, r4",
            "add r0, r4, r0",
            "add r1, r4, r1",
            "bl sym.imp.fopen",
            "subs r6, r0, 0",
            "bne 0x3448",
            "ldr r3, [0x0000367c]",
            "ldr r0, [0x00003680]",
            "ldr r3, [r4, r3]",
            "add r0, r4, r0",
            "ldr r1, [r3]",
            "bl sym.imp.fputs",
            "b 0x3448",
            "mov r0, r7",
            "mov r1, r8",
            "bl sym.imp.strstr",
            "cmp r0, 0",
            "beq 0x3454",
            "add r7, r0, 0xd",
            "mov r8, 0",
            "b 0x341c",
            "bl sym.imp.__ctype_b_loc",
            "add r3, sp, 8",
            "ldr r2, [r0]",
            "ldrsb r3, [r3, r8]",
            "lsl r3, r3, 1",
            "ldrh r3, [r2, r3]",
            "tst r3, 0x20",
            "bne 0x3424",
            "add r8, r8, 1",
            "cmp r8, 0x40",
            "bne 0x33f8",
            "ldr r0, [0x00003684]",
            "sub r1, r8, 0xc",
            "ldr r2, [0x00003688]",
            "mov r3, r7",
            "add r0, r4, r0",
            "add r2, r4, r2",
            "add r0, r0, 0x26c",
            "bl sym.imp.snprintf",
            "b 0x346c",
            "ldr r8, [0x0000368c]",
            "add r7, sp, 8",
            "add r8, r4, r8",
            "mov r0, r7",
            "mov r1, 0x40",
            "mov r2, r6",
            "bl sym.imp.fgets",
            "cmp r0, 0",
            "bne 0x33d8",
            "mov r0, r6",
            "ldr r7, [0x00003690]",
            "bl sym.imp.fclose",
            "ldr r3, [0x00003684]",
            "add r7, r5, r7",
            "add r2, r4, r3",
            "str r7, [r4, r3]",
            "str r5, [r2, 0x228]",
            "mov r3, 0",
            "mov r2, 1",
            "strb r2, [r7, r3]",
            "add r3, r3, 1",
            "cmp r3, 0x48",
            "bne 0x3494",
            "ldr r3, [0x00003690]",
            "mov r2, 2",
            "mov r8, 0",
            "ldr ip, [0x00003694]",
            "mov r6, r8",
            "mov sb, 0x19",
            "strb r2, [r5, r3]",
            "add r3, r3, 0xa",
            "strb r8, [r5, r3]",
            "add r3, r3, 0x13",
            "strb r8, [r5, r3]",
            "sub r3, r3, 7",
            "strb r8, [r5, r3]",
            "add r3, r3, 0x31",
            "strb r8, [r5, r3]",
            "mov fp, 0x30",
            "mov r5, r7",
            "mov r3, 0x2ac",
            "add ip, r4, ip",
            "mul sl, r3, r8",
            "strb r6, [r5, 0x94]",
            "strb r6, [r5, 0x2a4]",
            "mov r1, ip",
            "strb r6, [r5, 0x2e6]",
            "mov r2, 9",
            "str sb, [r5, 0xd8]",
            "add r0, sl, 0x328",
            "str r6, [r5, 0x11c]",
            "add r0, r7, r0",
            "str r6, [r5, 0x120]",
            "strb r6, [r5, 0x2e9]",
            "add r0, r0, 0xb",
            "strb r6, [r5, 0x2e8]",
            "add sl, sl, 0x2dc",
            "strb r6, [r5, 0x2e7]",
            "add sl, r7, sl",
            "strb fp, [r5, 0x332]",
            "add sl, sl, 0xd",
            "str r3, [sp, 4]",
            "str ip, [sp]",
            "bl sym.imp.memcpy",
            "strb r6, [r5, 0x33c]",
            "mov r2, r6",
            "ldr ip, [sp]",
            "ldr r3, [sp, 4]",
            "add r2, r2, 1",
            "strb r6, [sl, 1]!",
            "cmp r2, 0x48",
            "bne 0x3558",
            "add r8, r8, 1",
            "add r5, r5, 0x2ac",
            "cmp r8, 2",
            "bne 0x34f0",
            "ldr r6, [0x00003684]",
            "mov r1, 0",
            "mov r2, 0x40",
            "add r8, r8, 0x2f",
            "mov fp, 0x8c",
            "mov sb, 0x11",
            "add r6, r4, r6",
            "add r5, r6, 0x28c",
            "mov r0, r5",
            "bl sym.imp.memset",
            "ldr r1, [0x00003698]",
            "mov r0, r5",
            "add r1, r4, r1",
            "mov r4, 0",
            "mov r7, r4",
            "bl sym.imp.strcpy",
            "uxtb sl, r8",
            "movw r1, 0x1ff",
            "mov r0, r5",
            "strb sl, [r6, 0x29b]",
            "bl sym.imp.mkfifo",
            "movw r1, 0x1ff",
            "strb sl, [r6, 0x29b]",
            "mov r0, r5",
            "bl sym.imp.chmod",
            "mul r0, fp, r4",
            "ldr r3, [r6]",
            "mov r1, 0",
            "add r2, r3, r0",
            "add r0, r0, 0x620",
            "add r0, r3, r0",
            "strb r7, [r2, 0x5ec]",
            "add r0, r0, 0xf",
            "strb r7, [r2, 0x62e]",
            "strb sb, [r2, 0x62f]",
            "add r1, r1, 1",
            "mov r2, 0",
            "cmp r1, 0x48",
            "strb r7, [r0, 1]!",
            "bne 0x3604",
            "add r4, r4, 1",
            "add r8, r8, 1",
            "cmp r4, 4",
            "uxtb r8, r8",
            "bne 0x35b8",
            "mov ip, r2",
            "mov r1, r3",
            "strb r2, [r1, 0x48]!",
            "add r2, r2, 1",
            "mov r0, 0",
            "cmp r2, 0x48",
            "strb ip, [r1, 1]!",
            "bne 0x3638",
            "mov r2, 0xa",
            "str r0, [r3, 0x81c]",
            "str r2, [r3, 0x820]",
            "str r2, [r3, 0x828]",
            "mov r2, 2",
            "str r0, [r3, 0x824]",
            "str r2, [r3, 0x82c]",
            "add sp, sp, 0x4c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.imp.strstr": {
        "function_address": "0x00001f58",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x22c]!"
        ]
    },
    "sym.imp.__ctype_b_loc": {
        "function_address": "0x000020a8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x14c]!"
        ]
    },
    "sym.imp.mkfifo": {
        "function_address": "0x00001f1c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x254]!"
        ]
    },
    "sym.imp.chmod": {
        "function_address": "0x00001ec8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x28c]!"
        ]
    },
    "entry.init0": {
        "function_address": "0x00002244",
        "instructions": [
            "push {r4, lr}",
            "ldr r4, [0x000022a0]",
            "ldr r3, [0x000022a4]",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "cmp r3, 0",
            "beq 0x2274",
            "ldr r0, [0x000022a8]",
            "ldr r1, [0x000022ac]",
            "add r0, r4, r0",
            "add r1, r4, r1",
            "bl loc.imp.__register_frame_info",
            "ldr r3, [0x000022b0]",
            "add r0, r4, r3",
            "ldr r3, [r4, r3]",
            "cmp r3, 0",
            "popeq {r4, pc}",
            "ldr r3, [0x000022b4]",
            "ldr r3, [r4, r3]",
            "cmp r3, 0",
            "popeq {r4, pc}",
            "blx r3",
            "pop {r4, pc}"
        ]
    },
    "loc.imp.__register_frame_info": {
        "function_address": "0x00002198",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0xac]!"
        ]
    },
    "fcn.000023e8": {
        "function_address": "0x000023e8",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r4, r2",
            "ldr r2, [r0]",
            "mov r3, r0",
            "mov r6, r1",
            "ldr r5, [0x00002490]",
            "cmp r2, 0",
            "add r5, pc, r5",
            "bne 0x2434",
            "ldr r2, [r0, 4]",
            "cmp r2, 0",
            "bne 0x2434",
            "ldr r2, [r0, 8]",
            "cmp r2, 0",
            "bne 0x2434",
            "ldr r2, [r0, 0xc]",
            "cmp r2, 0",
            "strbeq r2, [r4]",
            "beq 0x2488",
            "cmp r6, 0",
            "beq 0x2474",
            "mov r1, r3",
            "mov r0, 0xa",
            "mov r2, r4",
            "mov r3, 0x2e",
            "bl sym.imp.inet_ntop",
            "cmp r0, 0",
            "beq 0x2488",
            "ldr r1, [0x00002494]",
            "mov r0, r4",
            "mov r2, r4",
            "mov r3, r6",
            "add r1, r5, r1",
            "bl sym.imp.sprintf",
            "b 0x2488",
            "mov r1, r3",
            "mov r0, 0xa",
            "mov r2, r4",
            "mov r3, 0x2e",
            "bl sym.imp.inet_ntop",
            "mov r0, r4",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.0000268c": {
        "function_address": "0x0000268c",
        "instructions": [
            "push {r0, r1, r4, r5, r6, lr}",
            "subs r3, r0, 0",
            "ldr r5, [0x000026f0]",
            "mov r6, r1",
            "mov r4, r2",
            "str r0, [sp, 4]",
            "add r5, pc, r5",
            "strbeq r3, [r2]",
            "beq 0x26e8",
            "cmp r1, 0",
            "beq 0x26d8",
            "bl sym.imp.inet_ntoa",
            "ldr r1, [0x000026f4]",
            "mov r2, r0",
            "mov r3, r6",
            "mov r0, r4",
            "add r1, r5, r1",
            "bl sym.imp.sprintf",
            "b 0x26e8",
            "bl sym.imp.inet_ntoa",
            "mov r1, r0",
            "mov r0, r4",
            "bl sym.imp.strcpy",
            "mov r0, r4",
            "pop {r2, r3, r4, r5, r6, pc}"
        ]
    },
    "sym.imp.gethostname": {
        "function_address": "0x00002078",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x16c]!"
        ]
    },
    "sym.imp.localtime": {
        "function_address": "0x00002018",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x1ac]!"
        ]
    },
    "sym.imp.strftime": {
        "function_address": "0x000020cc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x134]!"
        ]
    },
    "sym.imp.localtime_r": {
        "function_address": "0x000020c0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x13c]!"
        ]
    },
    "rsym.zylog_transfer_severity": {
        "function_address": "0x00001eb0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x29c]!"
        ]
    },
    "sym.imp.kill": {
        "function_address": "0x00001ef8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x26c]!"
        ]
    },
    "sym.imp.fork": {
        "function_address": "0x00001fb8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x1ec]!"
        ]
    },
    "sym.imp.execv": {
        "function_address": "0x00001fc4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x1e4]!"
        ]
    },
    "sym.imp.exit": {
        "function_address": "0x00002114",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x104]!"
        ]
    },
    "sym.imp.waitpid": {
        "function_address": "0x00001db4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x344]!"
        ]
    },
    "sym.imp.ctime_r": {
        "function_address": "0x0000209c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x154]!"
        ]
    },
    "sym.imp.zykit_get_current_model_name": {
        "function_address": "0x00001fe8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0x1cc]!"
        ]
    },
    "sym.imp.strchr": {
        "function_address": "0x00002174",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x6000",
            "ldr pc, [ip, 0xc4]!"
        ]
    }
}