{
    "entry0": {
        "function_address": "0x00001758",
        "instructions": [
            "push {r4, lr}",
            "ldr r4, [0x000017bc]",
            "ldr r3, [0x000017c0]",
            "add r4, pc, r4",
            "ldrb r3, [r4, r3]",
            "cmp r3, 0",
            "popne {r4, pc}",
            "ldr r3, [0x000017c4]",
            "ldr r3, [r4, r3]",
            "cmp r3, 0",
            "beq 0x1790",
            "ldr r3, [0x000017c8]",
            "ldr r0, [r4, r3]",
            "bl sym.imp.__cxa_finalize",
            "ldr r3, [0x000017cc]",
            "ldr r3, [r4, r3]",
            "cmp r3, 0",
            "beq 0x17ac",
            "ldr r0, [0x000017d0]",
            "add r0, r4, r0",
            "bl loc.imp.__deregister_frame_info",
            "ldr r3, [0x000017c0]",
            "mov r2, 1",
            "strb r2, [r4, r3]",
            "pop {r4, pc}"
        ]
    },
    "sym.imp.__cxa_finalize": {
        "function_address": "0x0000141c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 12, 20",
            "ldr pc, [ip, 0xee4]!"
        ]
    },
    "loc.imp.__deregister_frame_info": {
        "function_address": "0x000014dc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 12, 20",
            "ldr pc, [ip, 0xe64]!"
        ]
    },
    "sym.pair_builtincompare_add": {
        "function_address": "0x000042f4",
        "instructions": [
            "push {r0, r1, r2, r4, r5, r6, r7, lr}",
            "mov r5, r0",
            "ldr r4, [0x00004438]",
            "mov r1, 0",
            "movw r0, 0x3eb",
            "ldr r6, [0x0000443c]",
            "add r4, pc, r4",
            "bl loc.imp.dict_attrbyvalue",
            "add r6, r4, r6",
            "mov r7, r0",
            "mov r1, 0",
            "mov r0, 1",
            "bl loc.imp.dict_attrbyvalue",
            "mov r3, r6",
            "mov r2, 0",
            "mov r1, r0",
            "mov r0, r7",
            "str r5, [sp]",
            "bl loc.imp.paircompare_register",
            "mov r1, 0",
            "mov r0, 0x3ec",
            "bl loc.imp.dict_attrbyvalue",
            "mov r1, 0",
            "mov r7, r0",
            "mov r0, 1",
            "bl loc.imp.dict_attrbyvalue",
            "mov r3, r6",
            "mov r2, 0",
            "mov r1, r0",
            "mov r0, r7",
            "str r5, [sp]",
            "bl loc.imp.paircompare_register",
            "mov r1, 0",
            "movw r0, 0x3ef",
            "bl loc.imp.dict_attrbyvalue",
            "mov r1, 0",
            "mov r6, r0",
            "mov r0, 0x4d",
            "bl loc.imp.dict_attrbyvalue",
            "ldr r3, [0x00004440]",
            "mov r1, r0",
            "mov r2, 0",
            "mov r0, r6",
            "str r5, [sp]",
            "add r3, r4, r3",
            "ldr r6, [0x00004444]",
            "bl loc.imp.paircompare_register",
            "mov r1, 0",
            "movw r0, 0x417",
            "bl loc.imp.dict_attrbyvalue",
            "ldr r3, [0x00004448]",
            "mov r2, 1",
            "mov r1, 0",
            "str r5, [sp]",
            "add r6, r4, r6",
            "add r3, r4, r3",
            "sub r6, r6, 4",
            "bl loc.imp.paircompare_register",
            "mov r1, 0",
            "movw r0, 0x438",
            "bl loc.imp.dict_attrbyvalue",
            "ldr r3, [0x0000444c]",
            "mov r1, 0",
            "mov r2, 1",
            "str r5, [sp]",
            "add r3, r4, r3",
            "bl loc.imp.paircompare_register",
            "ldr r3, [0x00004450]",
            "add r4, r4, r3",
            "b 0x4428",
            "mov r1, 0",
            "bl loc.imp.dict_attrbyvalue",
            "mov r1, 0",
            "mov r2, 1",
            "mov r3, r4",
            "str r5, [sp]",
            "bl loc.imp.paircompare_register",
            "ldr r0, [r6, 4]!",
            "cmp r0, 0",
            "bne 0x440c",
            "pop {r1, r2, r3, r4, r5, r6, r7, pc}"
        ]
    },
    "loc.imp.dict_attrbyvalue": {
        "function_address": "0x00001458",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 12, 20",
            "ldr pc, [ip, 0xebc]!"
        ]
    },
    "loc.imp.paircompare_register": {
        "function_address": "0x00001590",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 12, 20",
            "ldr pc, [ip, 0xdec]!"
        ]
    },
    "entry.init0": {
        "function_address": "0x000017d4",
        "instructions": [
            "push {r4, lr}",
            "ldr r4, [0x00001830]",
            "ldr r3, [0x00001834]",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "cmp r3, 0",
            "beq 0x1804",
            "ldr r0, [0x00001838]",
            "ldr r1, [0x0000183c]",
            "add r0, r4, r0",
            "add r1, r4, r1",
            "bl loc.imp.__register_frame_info",
            "ldr r3, [0x00001840]",
            "add r0, r4, r3",
            "ldr r3, [r4, r3]",
            "cmp r3, 0",
            "popeq {r4, pc}",
            "ldr r3, [0x00001844]",
            "ldr r3, [r4, r3]",
            "cmp r3, 0",
            "popeq {r4, pc}",
            "blx r3",
            "pop {r4, pc}"
        ]
    },
    "loc.imp.__register_frame_info": {
        "function_address": "0x00001728",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 12, 20",
            "ldr pc, [ip, 0xcdc]!"
        ]
    },
    "fcn.00001b9c": {
        "function_address": "0x00001b9c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x1c",
            "ldr fp, [sp, 0x40]",
            "mov r8, r1",
            "mov r5, r0",
            "str r3, [sp, 0xc]",
            "mov r3, 0x20",
            "str r2, [sp, 8]",
            "strb r3, [fp]",
            "bl sym.imp.__ctype_b_loc",
            "ldr r1, [r0]",
            "mov r7, r0",
            "ldr r4, [0x00001e44]",
            "mov r3, r8",
            "add r4, pc, r4",
            "mov sb, r3",
            "ldrsb r2, [r3], 1",
            "lsl r0, r2, 1",
            "ldrh sl, [r1, r0]",
            "ands sl, sl, 0x20",
            "bne 0x1bd8",
            "cmp r2, 0x26",
            "beq 0x1c34",
            "ldr r3, [0x00001e48]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "bne 0x1c18",
            "ldr r0, [r5, 0xa4]",
            "cmp r0, 0",
            "beq 0x1e3c",
            "ldr r3, [0x00001e4c]",
            "mov r0, 0x10",
            "mov r1, 1",
            "mov r2, r5",
            "add r3, r4, r3",
            "bl loc.imp.radlog_request",
            "b 0x1ccc",
            "ldr r2, [0x00001e50]",
            "mov r0, r5",
            "mov r1, 0xb8",
            "add r2, r4, r2",
            "bl loc.imp.talloc_named_const",
            "subs r6, r0, 0",
            "moveq r0, r6",
            "beq 0x1e3c",
            "mov r3, 1",
            "mov r1, sb",
            "mov r2, 2",
            "str sl, [sp]",
            "str sl, [sp, 4]",
            "bl loc.imp.tmpl_from_attr_substr",
            "cmp r0, 0",
            "ldrgt r3, [r7]",
            "addgt r8, r8, r0",
            "bgt 0x1cd4",
            "ldr r1, [0x00001e54]",
            "mov r0, r6",
            "add r1, r4, r1",
            "bl loc.imp._talloc_free",
            "ldr r3, [0x00001e48]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "bne 0x1cac",
            "ldr r0, [r5, 0xa4]",
            "cmp r0, 0",
            "beq 0x1e3c",
            "bl loc.imp.fr_strerror",
            "ldr r3, [0x00001e58]",
            "mov r1, 1",
            "str r0, [sp]",
            "mov r2, r5",
            "mov r0, 0x10",
            "add r3, r4, r3",
            "bl loc.imp.radlog_request",
            "mov r0, 0",
            "b 0x1e3c",
            "mov sl, r8",
            "ldrsb r2, [r8], 1",
            "lsl r2, r2, 1",
            "ldrh r2, [r3, r2]",
            "tst r2, 0x20",
            "bne 0x1cd4",
            "mov r0, sl",
            "add r1, sp, 0x14",
            "mov r2, 0xa",
            "bl sym.imp.strtoul",
            "cmp r0, 0x2000",
            "bls 0x1d4c",
            "ldr r1, [0x00001e5c]",
            "mov r0, r6",
            "add r1, r4, r1",
            "bl loc.imp._talloc_free",
            "ldr r3, [0x00001e48]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "bne 0x1d34",
            "ldr r0, [r5, 0xa4]",
            "cmp r0, 0",
            "beq 0x1e3c",
            "str sl, [sp]",
            "mov r0, 0x10",
            "mov r1, 1",
            "mov r2, r5",
            "ldr r3, [0x00001e60]",
            "b 0x1cc4",
            "ldr r3, [sp, 0x14]",
            "rsb r3, sl, r3",
            "add r8, sl, r3",
            "ldrb r3, [sl, r3]",
            "cmp r3, 0",
            "beq 0x1e28",
            "sxtb r3, r3",
            "ldr r2, [r7]",
            "lsl r3, r3, 1",
            "ldrh r3, [r2, r3]",
            "tst r3, 0x20",
            "bne 0x1db4",
            "ldr r1, [0x00001e64]",
            "mov r0, r6",
            "add r1, r4, r1",
            "bl loc.imp._talloc_free",
            "ldr r3, [0x00001e48]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "bne 0x1dac",
            "ldr r0, [r5, 0xa4]",
            "cmp r0, 0",
            "beq 0x1e3c",
            "str r8, [sp]",
            "b 0x1e14",
            "mov r7, r8",
            "ldrb r3, [r8], 1",
            "sxtb r1, r3",
            "lsl r1, r1, 1",
            "ldrh r1, [r2, r1]",
            "tst r1, 0x20",
            "bne 0x1db4",
            "ldrsb r2, [r7, 1]",
            "cmp r2, 0",
            "strbeq r3, [fp]",
            "beq 0x1e28",
            "ldr r1, [0x00001e68]",
            "mov r0, r6",
            "add r1, r4, r1",
            "bl loc.imp._talloc_free",
            "ldr r3, [0x00001e48]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "bne 0x1e10",
            "ldr r0, [r5, 0xa4]",
            "cmp r0, 0",
            "beq 0x1e3c",
            "str r7, [sp]",
            "mov r0, 0x10",
            "mov r1, 1",
            "mov r2, r5",
            "ldr r3, [0x00001e6c]",
            "b 0x1cc4",
            "ldr r3, [sp, 8]",
            "str r6, [r3]",
            "ldr r3, [sp, 0xc]",
            "str r0, [r3]",
            "mov r0, 1",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.imp.__ctype_b_loc": {
        "function_address": "0x0000165c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 12, 20",
            "ldr pc, [ip, 0xd64]!"
        ]
    },
    "loc.imp.radlog_request": {
        "function_address": "0x00001548",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 12, 20",
            "ldr pc, [ip, 0xe1c]!"
        ]
    },
    "loc.imp.talloc_named_const": {
        "function_address": "0x00001638",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 12, 20",
            "ldr pc, [ip, 0xd7c]!"
        ]
    },
    "loc.imp.tmpl_from_attr_substr": {
        "function_address": "0x00001674",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 12, 20",
            "ldr pc, [ip, 0xd54]!"
        ]
    },
    "loc.imp._talloc_free": {
        "function_address": "0x000013f8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 12, 20",
            "ldr pc, [ip, 0xefc]!"
        ]
    },
    "loc.imp.fr_strerror": {
        "function_address": "0x000015d8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 12, 20",
            "ldr pc, [ip, 0xdbc]!"
        ]
    },
    "sym.imp.strtoul": {
        "function_address": "0x0000144c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 12, 20",
            "ldr pc, [ip, 0xec4]!"
        ]
    },
    "fcn.000044fc": {
        "function_address": "0x000044fc",
        "instructions": [
            "cmp r0, 0",
            "mvnne r0, 0",
            "b fcn.00004694",
            "cmp r1, 0",
            "beq 0x44f0",
            "push {r0, r1, lr}",
            "bl fcn.00004454",
            "pop {r1, r2, lr}",
            "mul r3, r2, r0",
            "sub r1, r1, r3",
            "bx lr"
        ]
    },
    "fcn.00004454": {
        "function_address": "0x00004454",
        "instructions": [
            "subs r2, r1, 1",
            "bxeq lr",
            "blo 0x44f0",
            "cmp r0, r1",
            "bls 0x44d4",
            "tst r1, r2",
            "beq 0x44e0",
            "clz r3, r1",
            "clz r2, r0",
            "sub r2, r3, r2",
            "mov r3, 1",
            "lsl r1, r1, r2",
            "lsl r3, r3, r2",
            "mov r2, 0",
            "cmp r0, r1",
            "subhs r0, r0, r1",
            "orrhs r2, r2, r3",
            "cmp r0, r1, lsr 1",
            "subhs r0, r0, r1, lsr 1",
            "orrhs r2, r2, r3, lsr 1",
            "cmp r0, r1, lsr 2",
            "subhs r0, r0, r1, lsr 2",
            "orrhs r2, r2, r3, lsr 2",
            "cmp r0, r1, lsr 3",
            "subhs r0, r0, r1, lsr 3",
            "orrhs r2, r2, r3, lsr 3",
            "cmp r0, 0",
            "lsrsne r3, r3, 4",
            "lsrne r1, r1, 4",
            "bne 0x448c",
            "mov r0, r2",
            "bx lr",
            "moveq r0, 1",
            "movne r0, 0",
            "bx lr",
            "clz r2, r1",
            "rsb r2, r2, 0x1f",
            "lsr r0, r0, r2",
            "bx lr"
        ]
    },
    "fcn.00004694": {
        "function_address": "0x00004694",
        "instructions": [
            "push {r1, lr}",
            "mov r0, 8",
            "bl sym.imp.raise",
            "pop {r1, pc}"
        ]
    },
    "sym.imp.raise": {
        "function_address": "0x00001740",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 12, 20",
            "ldr pc, [ip, 0xccc]!"
        ]
    },
    "fcn.0000342c": {
        "function_address": "0x0000342c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x124",
            "str r1, [sp, 0x18]",
            "mov sb, r3",
            "mov r6, r0",
            "mov sl, r2",
            "ldr r3, [r1]",
            "ldr r7, [0x00003db4]",
            "str r3, [sp, 0x11c]",
            "add r7, pc, r7",
            "str r3, [sp, 0x118]",
            "bl sym.imp.__ctype_b_loc",
            "str r0, [sp, 0x1c]",
            "ldr r1, [r0]",
            "b 0x3470",
            "add r3, r3, 1",
            "str r3, [sp, 0x118]",
            "ldr r3, [sp, 0x118]",
            "ldrsb r2, [r3]",
            "lsl r0, r2, 1",
            "ldrh r5, [r1, r0]",
            "ands r5, r5, 0x20",
            "bne 0x3468",
            "cmp r2, 0x7e",
            "addeq r3, r3, 1",
            "moveq r5, 1",
            "streq r3, [sp, 0x118]",
            "ldr r0, [sp, 0x118]",
            "ldrsb r3, [r0]",
            "cmp r3, 0x30",
            "bne 0x34d4",
            "ldrsb r3, [r0, 1]",
            "cmp r3, 0x78",
            "bne 0x34e8",
            "add r1, sp, 0x114",
            "mov r2, 0x10",
            "mov r8, 0",
            "bl sym.imp.strtoul",
            "str r8, [sp, 0x104]",
            "str r0, [sp, 0x100]",
            "ldr r3, [sp, 0x114]",
            "b 0x37a8",
            "cmp r3, 0x2d",
            "addeq r0, r0, 1",
            "moveq r8, 1",
            "streq r0, [sp, 0x118]",
            "beq 0x34ec",
            "mov r8, 0",
            "ldr r1, [sp, 0x118]",
            "ldrb r3, [r1]",
            "sxtb r2, r3",
            "cmp r2, 0x26",
            "bne 0x3734",
            "add fp, sp, 0x28",
            "add r1, r1, 1",
            "mov r4, 0",
            "mov r3, 1",
            "mov r0, fp",
            "mov r2, 2",
            "str r1, [sp, 0x118]",
            "str r4, [sp]",
            "str r4, [sp, 4]",
            "bl loc.imp.tmpl_from_attr_substr",
            "cmp r0, 0",
            "ldr r3, [sp, 0x118]",
            "bgt 0x3564",
            "str r3, [sp, 0x10]",
            "bl loc.imp.fr_strerror",
            "ldr r3, [sp, 0x10]",
            "mov r1, 1",
            "str r0, [sp, 4]",
            "mov r2, r6",
            "mov r0, 0x12",
            "str r3, [sp]",
            "ldr r3, [0x00003db8]",
            "add r3, r7, r3",
            "bl loc.imp.radlog_request_error",
            "b 0x3654",
            "add r3, r3, r0",
            "mov r1, r6",
            "add r0, sp, 0x114",
            "mov r2, fp",
            "str r3, [sp, 0x118]",
            "bl loc.imp.tmpl_find_vp",
            "cmp r0, 0",
            "bge 0x35e0",
            "ldr r3, [0x00003dbc]",
            "ldr r3, [r7, r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "bne 0x35a4",
            "ldr r3, [r6, 0xa4]",
            "cmp r3, 0",
            "beq 0x35cc",
            "ldr r3, [sp, 0x30]",
            "mov r0, 0x11",
            "mov r1, 1",
            "mov r2, r6",
            "str r3, [sp]",
            "ldr r3, [sp, 0x2c]",
            "str r3, [sp, 4]",
            "ldr r3, [0x00003dc0]",
            "add r3, r7, r3",
            "bl loc.imp.radlog_request",
            "mov r2, 0",
            "mov r3, 0",
            "add r0, sp, 0x100",
            "strd r2, r3, [r0]",
            "b 0x385c",
            "ldr r0, [sp, 0x114]",
            "ldr r3, [r0]",
            "ldr r2, [r3, 4]",
            "cmp r2, 0x13",
            "beq 0x3718",
            "str r3, [sp, 4]",
            "add r3, r0, 0x20",
            "str r2, [sp]",
            "add r1, sp, 0xe0",
            "str r3, [sp, 8]",
            "mov r2, 0x13",
            "ldr r3, [r0, 0x18]",
            "str r3, [sp, 0xc]",
            "mov r3, r4",
            "bl loc.imp.value_data_cast",
            "cmp r0, 0",
            "bge 0x365c",
            "ldr r8, [sp, 0x30]",
            "ldr r5, [sp, 0x2c]",
            "bl loc.imp.fr_strerror",
            "ldr r3, [0x00003dc4]",
            "mov r1, 1",
            "str r0, [sp, 8]",
            "mov r2, r6",
            "mov r0, 0x12",
            "str r8, [sp]",
            "add r3, r7, r3",
            "str r5, [sp, 4]",
            "bl loc.imp.radlog_request_error",
            "mov r0, r4",
            "b 0x3dac",
            "ldr r3, [sp, 0xe4]",
            "ldr r2, [sp, 0xe0]",
            "cmp r3, 0",
            "blt 0x3698",
            "ldrb r1, [r6, 0xa8]",
            "str r2, [sp, 0x100]",
            "str r3, [sp, 0x104]",
            "add r1, r1, 2",
            "strb r1, [r6, 0xa8]",
            "ldr r1, [0x00003dbc]",
            "ldr r1, [r7, r1]",
            "ldr r1, [r1]",
            "cmp r1, 0",
            "beq 0x36cc",
            "b 0x36d8",
            "ldr r3, [sp, 0x30]",
            "mov r0, 0x12",
            "mov r1, 1",
            "str r3, [sp]",
            "ldr r3, [sp, 0x2c]",
            "str r3, [sp, 4]",
            "ldrd r2, r3, [sp, 0xe0]",
            "strd r2, r3, [sp, 8]",
            "mov r2, r6",
            "ldr r3, [0x00003dc8]",
            "add r3, r7, r3",
            "bl loc.imp.radlog_request_error",
            "b 0x39d4",
            "ldr r1, [r6, 0xa4]",
            "cmp r1, 0",
            "beq 0x3708",
            "ldr r1, [sp, 0x30]",
            "mov r0, 0x10",
            "str r3, [sp, 0xc]",
            "ldr r3, [0x00003dcc]",
            "str r1, [sp]",
            "ldr r1, [sp, 0x2c]",
            "str r2, [sp, 8]",
            "add r3, r7, r3",
            "mov r2, r6",
            "str r1, [sp, 4]",
            "mov r1, 3",
            "bl loc.imp.radlog_request",
            "ldrb r3, [r6, 0xa8]",
            "sub r3, r3, 2",
            "strb r3, [r6, 0xa8]",
            "b 0x385c",
            "ldr r3, [r0, 0x24]",
            "ldr r2, [r0, 0x20]",
            "cmp r3, 0",
            "strge r2, [sp, 0x100]",
            "strge r3, [sp, 0x104]",
            "bge 0x385c",
            "b 0x3698",
            "cmp r2, 0x28",
            "bne 0x37b0",
            "add r3, r1, 1",
            "add r1, sp, 0x120",
            "str r3, [r1, -8]!",
            "mov r0, r6",
            "add r2, sp, 0x100",
            "mov r3, 0",
            "bl fcn.0000342c",
            "cmp r0, 0",
            "beq 0x3dac",
            "ldr r3, [sp, 0x118]",
            "ldrsb r2, [r3]",
            "cmp r2, 0x29",
            "beq 0x37a4",
            "ldr r3, [0x00003dbc]",
            "ldr r3, [r7, r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "bne 0x3790",
            "ldr r0, [r6, 0xa4]",
            "cmp r0, 0",
            "beq 0x3dac",
            "mov r0, 0x10",
            "mov r1, 1",
            "mov r2, r6",
            "ldr r3, [0x00003dd0]",
            "b 0x3ad4",
            "add r3, r3, 1",
            "str r3, [sp, 0x118]",
            "b 0x385c",
            "sub r3, r3, 0x30",
            "uxtb r3, r3",
            "cmp r3, 9",
            "bls 0x37f8",
            "ldr r3, [0x00003dbc]",
            "ldr r3, [r7, r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "bne 0x37e0",
            "ldr r0, [r6, 0xa4]",
            "cmp r0, 0",
            "beq 0x3dac",
            "str r1, [sp]",
            "mov r0, 0x10",
            "mov r1, 2",
            "mov r2, r6",
            "ldr r3, [0x00003dd4]",
            "b 0x39cc",
            "mov r2, 0",
            "mov r3, 0",
            "add r1, sp, 0x100",
            "mov r0, 0xa",
            "strd r2, r3, [r1]",
            "b 0x3844",
            "ldr ip, [sp, 0x104]",
            "ldr r2, [sp, 0x100]",
            "umull r2, r3, r2, r0",
            "mla r3, r0, ip, r3",
            "add ip, sp, 0x100",
            "strd r2, r3, [ip]",
            "ldrsb ip, [r1], 1",
            "sub ip, ip, 0x30",
            "str r1, [sp, 0x118]",
            "adds r2, r2, ip",
            "adc r3, r3, ip, asr 31",
            "add ip, sp, 0x100",
            "strd r2, r3, [ip]",
            "ldr r1, [sp, 0x118]",
            "ldrb r3, [r1]",
            "sub r3, r3, 0x30",
            "uxtb r3, r3",
            "cmp r3, 9",
            "bls 0x3810",
            "cmp r5, 0",
            "addne r0, sp, 0x100",
            "ldrdne r2, r3, [r0]",
            "mvnne r2, r2",
            "mvnne r3, r3",
            "strdne r2, r3, [r0]",
            "cmp r8, 0",
            "beq 0x3890",
            "add r1, sp, 0x100",
            "ldrd r2, r3, [r1]",
            "rsbs r2, r2, 0",
            "rsc r3, r3, 0",
            "strd r2, r3, [r1]",
            "ldr r3, [sp, 0x118]",
            "add r2, sp, 0x100",
            "ldrd r4, r5, [r2]",
            "mov r8, r7",
            "add r0, sp, 0x11c",
            "add r1, sp, 0x108",
            "str r3, [sp, 0x11c]",
            "ldr r3, [0x00003dd8]",
            "str r0, [sp, 0x20]",
            "str r1, [sp, 0x24]",
            "add r3, r7, r3",
            "mov r7, r6",
            "str r3, [sp, 0x14]",
            "add r3, r3, 0xa0",
            "ldr ip, [sp, 0x14]",
            "mov fp, r3",
            "add sb, ip, sb, lsl 2",
            "ldr r3, [sp, 0x11c]",
            "ldr r2, [sp, 0x1c]",
            "ldrsb r1, [r3]",
            "ldr r0, [r2]",
            "lsl r2, r1, 1",
            "ldrh r2, [r0, r2]",
            "tst r2, 0x20",
            "addne r3, r3, 1",
            "strne r3, [sp, 0x11c]",
            "bne 0x38d4",
            "cmp r1, 0",
            "cmpne r1, 0x29",
            "movne r2, 0",
            "moveq r2, 1",
            "bne 0x393c",
            "ldr ip, [sp, 0x18]",
            "strd r4, r5, [sl]",
            "str r3, [ip]",
            "b 0x3a00",
            "ldrb r0, [fp, r2]",
            "add r2, r2, 8",
            "sxtb r0, r0",
            "cmp r1, r0",
            "addeq r2, r3, 1",
            "streq r2, [sp, 0x11c]",
            "beq 0x39dc",
            "add r0, fp, r2",
            "ldr r6, [r0, 4]",
            "cmp r6, 0xc",
            "bne 0x3920",
            "cmp r1, 0x3c",
            "bne 0x3970",
            "ldrsb r2, [r3, 1]",
            "cmp r2, 0x3c",
            "bne 0x3990",
            "add r2, r3, 2",
            "mov r6, 4",
            "str r2, [sp, 0x11c]",
            "b 0x39dc",
            "cmp r1, 0x3e",
            "bne 0x3990",
            "ldrsb r2, [r3, 1]",
            "cmp r2, 0x3e",
            "addeq r2, r3, 2",
            "moveq r6, 5",
            "streq r2, [sp, 0x11c]",
            "beq 0x39dc",
            "ldr r2, [0x00003dbc]",
            "mov r6, r7",
            "mov r7, r8",
            "ldr r2, [r8, r2]",
            "ldr r2, [r2]",
            "cmp r2, 0",
            "bne 0x39b8",
            "ldr r0, [r6, 0xa4]",
            "cmp r0, 0",
            "beq 0x3dac",
            "str r3, [sp]",
            "mov r0, 0x10",
            "ldr r3, [0x00003ddc]",
            "mov r1, 1",
            "mov r2, r6",
            "add r3, r7, r3",
            "bl loc.imp.radlog_request",
            "mov r0, 0",
            "b 0x3dac",
            "ldr r0, [sp, 0x14]",
            "add r2, r0, r6, lsl 2",
            "ldr r1, [r2, 0xe8]",
            "ldr r2, [sb, 0xe8]",
            "cmp r1, r2",
            "bgt 0x3a08",
            "ldr r1, [sp, 0x18]",
            "strd r4, r5, [sl]",
            "str r3, [r1]",
            "mov r0, 1",
            "b 0x3dac",
            "mov r0, r7",
            "ldr r1, [sp, 0x20]",
            "ldr r2, [sp, 0x24]",
            "mov r3, r6",
            "bl fcn.0000342c",
            "cmp r0, 0",
            "beq 0x3dac",
            "add ip, sp, 0x110",
            "sub r6, r6, 2",
            "ldrd r2, r3, [ip, -8]",
            "cmp r6, 9",
            "addls pc, pc, r6, lsl 2",
            "b 0x3a64",
            "b 0x3b98",
            "b 0x3ba4",
            "b 0x3b08",
            "b 0x3b2c",
            "b 0x3a64",
            "b 0x3a70",
            "b 0x3a7c",
            "b 0x3a94",
            "b 0x3af4",
            "b 0x3bb4",
            "adds r4, r4, r2",
            "adc r5, r5, r3",
            "b 0x3bac",
            "subs r4, r4, r2",
            "sbc r5, r5, r3",
            "b 0x3bac",
            "orrs r0, r2, r3",
            "beq 0x3a9c",
            "mov r0, r4",
            "mov r1, r5",
            "bl fcn.00004650",
            "b 0x3da0",
            "orrs r1, r2, r3",
            "bne 0x3ae0",
            "ldr r3, [0x00003dbc]",
            "mov r6, r7",
            "mov r7, r8",
            "ldr r3, [r8, r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "bne 0x3ac4",
            "ldr r0, [r6, 0xa4]",
            "cmp r0, 0",
            "beq 0x3dac",
            "ldr r3, [0x00003de0]",
            "mov r0, 0x10",
            "mov r1, 1",
            "mov r2, r6",
            "add r3, r7, r3",
            "bl loc.imp.radlog_request",
            "b 0x39d4",
            "mov r0, r4",
            "mov r1, r5",
            "bl fcn.00004650",
            "strd r2, r3, [sl]",
            "b 0x3da4",
            "mul r1, r4, r3",
            "mla r1, r2, r5, r1",
            "umull r4, r5, r4, r2",
            "add r5, r1, r5",
            "b 0x3bac",
            "cmp r3, 0",
            "bgt 0x3b40",
            "bne 0x3b1c",
            "cmp r2, 0x3f",
            "bhi 0x3b40",
            "mov r0, r4",
            "mov r1, r5",
            "bl fcn.00004634",
            "b 0x3da0",
            "cmp r3, 0",
            "bgt 0x3b40",
            "bne 0x3b88",
            "cmp r2, 0x3f",
            "bls 0x3b88",
            "mov sb, r3",
            "ldr r3, [0x00003dbc]",
            "mov r6, r7",
            "mov r7, r8",
            "mov r8, r2",
            "ldr r3, [r7, r3]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "bne 0x3b70",
            "ldr r0, [r6, 0xa4]",
            "cmp r0, 0",
            "beq 0x3dac",
            "strd r8, sb, [sp]",
            "mov r0, 0x10",
            "mov r1, 1",
            "mov r2, r6",
            "ldr r3, [0x00003de4]",
            "b 0x39cc",
            "mov r0, r4",
            "mov r1, r5",
            "bl fcn.00004618",
            "b 0x3da0",
            "and r4, r4, r2",
            "and r5, r5, r3",
            "b 0x3bac",
            "orr r4, r4, r2",
            "orr r5, r5, r3",
            "strd r4, r5, [sl]",
            "b 0x3da4",
            "cmp r3, 0",
            "bgt 0x3bc8",
            "bne 0x3bf0",
            "cmp r2, 0x3f",
            "bls 0x3bf0",
            "mov r6, r7",
            "mov sb, r3",
            "mov r7, r8",
            "mov r8, r2",
            "strd r8, sb, [sp]",
            "mov r0, 0x12",
            "mov r1, 1",
            "mov r2, r6",
            "ldr r3, [0x00003de8]",
            "b 0x3c24",
            "cmp r5, 0",
            "bgt 0x3c08",
            "bne 0x3c30",
            "movw ip, 0xffff",
            "cmp r4, ip",
            "bls 0x3c30",
            "ldr r3, [0x00003dec]",
            "mov r6, r7",
            "mov r0, 0x12",
            "mov r7, r8",
            "mov r1, 1",
            "mov r2, r6",
            "strd r4, r5, [sp]",
            "add r3, r7, r3",
            "bl loc.imp.radlog_request_error",
            "b 0x39d4",
            "ldr r0, [sp, 0x14]",
            "add r1, r0, r2",
            "ldrb r1, [r1, 0x11c]",
            "sub r1, r1, 1",
            "cmp r1, 5",
            "addls pc, pc, r1, lsl 2",
            "b 0x3d98",
            "b 0x3d74",
            "b 0x3d3c",
            "b 0x3d04",
            "b 0x3ccc",
            "b 0x3c94",
            "b 0x3c64",
            "mul ip, r4, r5",
            "and r1, r2, 1",
            "cmp r1, 0",
            "movne r0, r4",
            "movne r1, r5",
            "moveq r0, 1",
            "moveq r1, 0",
            "umull r4, r5, r4, r4",
            "asrs r3, r3, 1",
            "rrx r2, r2",
            "add r5, r5, ip, lsl 1",
            "b 0x3c9c",
            "mov r0, 1",
            "mov r1, 0",
            "and ip, r2, 1",
            "cmp ip, 0",
            "mulne ip, r0, r5",
            "mlane ip, r4, r1, ip",
            "umullne r0, r1, r0, r4",
            "addne r1, ip, r1",
            "mul ip, r4, r5",
            "asrs r3, r3, 1",
            "rrx r2, r2",
            "umull r4, r5, r4, r4",
            "add r5, r5, ip, lsl 1",
            "b 0x3cd4",
            "mov r0, 1",
            "mov r1, 0",
            "and ip, r2, 1",
            "cmp ip, 0",
            "mulne ip, r0, r5",
            "mlane ip, r4, r1, ip",
            "umullne r0, r1, r0, r4",
            "addne r1, ip, r1",
            "mul ip, r4, r5",
            "asrs r3, r3, 1",
            "rrx r2, r2",
            "umull r4, r5, r4, r4",
            "add r5, r5, ip, lsl 1",
            "b 0x3d0c",
            "mov r0, 1",
            "mov r1, 0",
            "and ip, r2, 1",
            "cmp ip, 0",
            "mulne ip, r0, r5",
            "mlane ip, r4, r1, ip",
            "umullne r0, r1, r0, r4",
            "addne r1, ip, r1",
            "mul ip, r4, r5",
            "asrs r3, r3, 1",
            "rrx r2, r2",
            "umull r4, r5, r4, r4",
            "add r5, r5, ip, lsl 1",
            "b 0x3d44",
            "mov r0, 1",
            "mov r1, 0",
            "and ip, r2, 1",
            "cmp ip, 0",
            "mulne ip, r0, r5",
            "mlane ip, r4, r1, ip",
            "umullne r0, r1, r0, r4",
            "addne r1, ip, r1",
            "mul ip, r4, r5",
            "asrs r3, r3, 1",
            "rrx r2, r2",
            "umull r4, r5, r4, r4",
            "add r5, r5, ip, lsl 1",
            "b 0x3d7c",
            "mov r0, 1",
            "mov r1, 0",
            "and r2, r2, 1",
            "cmp r2, 0",
            "mulne r3, r0, r5",
            "mlane r3, r4, r1, r3",
            "umullne r0, r1, r0, r4",
            "addne r1, r3, r1",
            "b 0x3da0",
            "mov r0, 1",
            "mov r1, 0",
            "strd r0, r1, [sl]",
            "ldrd r4, r5, [sl]",
            "b 0x38d4",
            "add sp, sp, 0x124",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "loc.imp.radlog_request_error": {
        "function_address": "0x00001398",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 12, 20",
            "ldr pc, [ip, 0xf3c]!"
        ]
    },
    "loc.imp.tmpl_find_vp": {
        "function_address": "0x000016e0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 12, 20",
            "ldr pc, [ip, 0xd0c]!"
        ]
    },
    "loc.imp.value_data_cast": {
        "function_address": "0x000016b0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 12, 20",
            "ldr pc, [ip, 0xd2c]!"
        ]
    },
    "fcn.00004650": {
        "function_address": "0x00004650",
        "instructions": [
            "cmp r3, 0",
            "cmpeq r2, 0",
            "bne 0x4678",
            "cmp r1, 0",
            "cmpeq r0, 0",
            "movlt r1, 0x80000000",
            "movlt r0, 0",
            "mvngt r1, 0x80000000",
            "mvngt r0, 0",
            "b fcn.00004694",
            "sub sp, sp, 8",
            "push {sp, lr}",
            "bl fcn.000046a4",
            "ldr lr, [sp, 4]",
            "add sp, sp, 8",
            "pop {r2, r3}",
            "bx lr"
        ]
    },
    "fcn.00004634": {
        "function_address": "0x00004634",
        "instructions": [
            "subs r3, r2, 0x20",
            "rsb ip, r2, 0x20",
            "lslmi r1, r1, r2",
            "lslpl r1, r0, r3",
            "orrmi r1, r1, r0, lsr ip",
            "lsl r0, r0, r2",
            "bx lr"
        ]
    },
    "fcn.00004618": {
        "function_address": "0x00004618",
        "instructions": [
            "subs r3, r2, 0x20",
            "rsb ip, r2, 0x20",
            "lsrmi r0, r0, r2",
            "asrpl r0, r1, r3",
            "orrmi r0, r0, r1, lsl ip",
            "asr r1, r1, r2",
            "bx lr"
        ]
    },
    "fcn.000046a4": {
        "function_address": "0x000046a4",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r7, r3",
            "mov r6, r2",
            "mov r4, r0",
            "mov r5, r1",
            "bl fcn.0000471c",
            "umull r2, r3, r0, r6",
            "mul r7, r0, r7",
            "ldr ip, [sp, 0x18]",
            "mla r7, r6, r1, r7",
            "add r3, r7, r3",
            "subs r2, r4, r2",
            "sbc r3, r5, r3",
            "strd r2, r3, [ip]",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.0000471c": {
        "function_address": "0x0000471c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x14",
            "subs r8, r1, 0",
            "mov r4, r0",
            "mov r7, r2",
            "mov ip, r3",
            "movge r1, 0",
            "bge 0x4750",
            "rsbs r0, r0, 0",
            "rsc r1, r1, 0",
            "mov r8, r1",
            "mov r4, r0",
            "mvn r1, 0",
            "cmp ip, 0",
            "str r1, [sp, 0xc]",
            "bge 0x4778",
            "ldr r1, [sp, 0xc]",
            "rsbs r2, r2, 0",
            "rsc r3, r3, 0",
            "mov r7, r2",
            "mov ip, r3",
            "mvn r1, r1",
            "str r1, [sp, 0xc]",
            "cmp ip, 0",
            "mov sb, r7",
            "mov fp, r4",
            "mov r5, r8",
            "bne 0x49e4",
            "cmp r7, r8",
            "bls 0x4854",
            "clz r3, r7",
            "cmp r3, 0",
            "rsbne r2, r3, 0x20",
            "lslne sb, r7, r3",
            "lsrne r2, r4, r2",
            "lslne fp, r4, r3",
            "lsr r6, sb, 0x10",
            "orrne r5, r2, r8, lsl r3",
            "uxth r8, sb",
            "mov r0, r5",
            "mov r1, r6",
            "bl fcn.000044fc",
            "mov r0, r5",
            "mov r7, r1",
            "mov r1, r6",
            "bl fcn.00004454",
            "lsr r3, fp, 0x10",
            "mul r5, r8, r0",
            "mov r4, r0",
            "orr r7, r3, r7, lsl 16",
            "cmp r7, r5",
            "bhs 0x4804",
            "adds r7, r7, sb",
            "sub r4, r0, 1",
            "bhs 0x4804",
            "cmp r7, r5",
            "sublo r4, r4, 1",
            "addlo r7, r7, sb",
            "rsb r5, r5, r7",
            "mov r1, r6",
            "mov r0, r5",
            "uxth fp, fp",
            "bl fcn.000044fc",
            "mov r0, r5",
            "mov sl, r1",
            "mov r1, r6",
            "orr sl, fp, sl, lsl 16",
            "bl fcn.00004454",
            "mul r8, r8, r0",
            "cmp sl, r8",
            "bhs 0x484c",
            "adds sl, sl, sb",
            "sub r0, r0, 1",
            "bhs 0x484c",
            "cmp sl, r8",
            "sublo r0, r0, 1",
            "orr r7, r0, r4, lsl 16",
            "b 0x4b44",
            "cmp r7, 0",
            "bne 0x486c",
            "mov r0, 1",
            "mov r1, ip",
            "bl fcn.00004454",
            "mov sb, r0",
            "clz r3, sb",
            "cmp r3, 0",
            "rsbeq r8, sb, r8",
            "moveq r6, 1",
            "beq 0x4940",
            "lsl sb, sb, r3",
            "rsb sl, r3, 0x20",
            "lsr r6, r8, sl",
            "lsr sl, r4, sl",
            "lsr r5, sb, 0x10",
            "lsl fp, r4, r3",
            "orr sl, sl, r8, lsl r3",
            "uxth r8, sb",
            "mov r0, r6",
            "mov r1, r5",
            "bl fcn.000044fc",
            "mov r0, r6",
            "mov r4, r1",
            "mov r1, r5",
            "bl fcn.00004454",
            "lsr r2, sl, 0x10",
            "mul r3, r8, r0",
            "mov r7, r0",
            "orr r4, r2, r4, lsl 16",
            "cmp r4, r3",
            "bhs 0x48ec",
            "adds r4, r4, sb",
            "sub r7, r0, 1",
            "bhs 0x48ec",
            "cmp r4, r3",
            "sublo r7, r7, 1",
            "addlo r4, r4, sb",
            "rsb r4, r3, r4",
            "mov r1, r5",
            "mov r0, r4",
            "uxth sl, sl",
            "bl fcn.000044fc",
            "mov r0, r4",
            "mov r6, r1",
            "mov r1, r5",
            "orr sl, sl, r6, lsl 16",
            "bl fcn.00004454",
            "mul r8, r8, r0",
            "cmp sl, r8",
            "bhs 0x4938",
            "adds sl, sl, sb",
            "sub r0, r0, 1",
            "bhs 0x4938",
            "cmp sl, r8",
            "sublo r0, r0, 1",
            "addlo sl, sl, sb",
            "orr r6, r0, r7, lsl 16",
            "rsb r8, r8, sl",
            "lsr r7, sb, 0x10",
            "mov r0, r8",
            "uxth r5, sb",
            "mov r1, r7",
            "bl fcn.000044fc",
            "mov r0, r8",
            "mov sl, r1",
            "mov r1, r7",
            "bl fcn.00004454",
            "lsr r3, fp, 0x10",
            "mul r8, r5, r0",
            "mov r4, r0",
            "orr sl, r3, sl, lsl 16",
            "cmp sl, r8",
            "bhs 0x4994",
            "adds sl, sl, sb",
            "sub r4, r0, 1",
            "bhs 0x4994",
            "cmp sl, r8",
            "sublo r4, r4, 1",
            "addlo sl, sl, sb",
            "rsb r8, r8, sl",
            "mov r1, r7",
            "mov r0, r8",
            "uxth fp, fp",
            "bl fcn.000044fc",
            "mov r0, r8",
            "mov sl, r1",
            "mov r1, r7",
            "orr sl, fp, sl, lsl 16",
            "bl fcn.00004454",
            "mul r5, r5, r0",
            "cmp sl, r5",
            "bhs 0x49dc",
            "adds sl, sl, sb",
            "sub r0, r0, 1",
            "bhs 0x49dc",
            "cmp sl, r5",
            "sublo r0, r0, 1",
            "orr r7, r0, r4, lsl 16",
            "b 0x4b54",
            "cmp ip, r8",
            "movhi r6, 0",
            "bhi 0x4b50",
            "clz r6, ip",
            "cmp r6, 0",
            "bne 0x4a18",
            "cmp r8, ip",
            "cmpls r4, r7",
            "movlo r4, 0",
            "movhs r4, 1",
            "movhs r7, 1",
            "bhs 0x4b54",
            "b 0x4b4c",
            "rsb sl, r6, 0x20",
            "lsr r5, r7, sl",
            "lsl r7, r7, r6",
            "orr r5, r5, ip, lsl r6",
            "str r7, [sp, 8]",
            "lsr r7, r8, sl",
            "lsr sl, r4, sl",
            "uxth sb, r5",
            "orr sl, sl, r8, lsl r6",
            "lsr r8, r5, 0x10",
            "mov r0, r7",
            "mov r1, r8",
            "bl fcn.000044fc",
            "mov r0, r7",
            "mov fp, r1",
            "mov r1, r8",
            "bl fcn.00004454",
            "lsr r2, sl, 0x10",
            "mul r3, sb, r0",
            "mov r7, r0",
            "orr fp, r2, fp, lsl 16",
            "cmp fp, r3",
            "bhs 0x4a8c",
            "adds fp, fp, r5",
            "sub r7, r0, 1",
            "bhs 0x4a8c",
            "cmp fp, r3",
            "sublo r7, r7, 1",
            "addlo fp, fp, r5",
            "rsb fp, r3, fp",
            "mov r1, r8",
            "mov r0, fp",
            "uxth sl, sl",
            "bl fcn.000044fc",
            "mov r0, fp",
            "mov r3, r1",
            "mov r1, r8",
            "str r3, [sp, 4]",
            "bl fcn.00004454",
            "ldr r3, [sp, 4]",
            "mul sb, sb, r0",
            "orr r3, sl, r3, lsl 16",
            "cmp r3, sb",
            "bhs 0x4ae0",
            "adds r3, r3, r5",
            "sub r0, r0, 1",
            "bhs 0x4ae0",
            "cmp r3, sb",
            "sublo r0, r0, 1",
            "addlo r3, r3, r5",
            "rsb r3, sb, r3",
            "orr r7, r0, r7, lsl 16",
            "ldr r8, [sp, 8]",
            "lsr r0, r7, 0x10",
            "lsr r1, r8, 0x10",
            "bic r5, r7, r0, lsl 16",
            "bic ip, r8, r1, lsl 16",
            "mul r2, r5, ip",
            "mul ip, r0, ip",
            "mul r5, r1, r5",
            "mul r1, r0, r1",
            "adds r5, ip, r5",
            "addhs r1, r1, 0x10000",
            "adds r2, r2, r5, lsl 16",
            "adc r1, r1, r5, lsr 16",
            "cmp r1, r3",
            "bhi 0x4b40",
            "movne r3, 0",
            "moveq r3, 1",
            "cmp r2, r4, lsl r6",
            "movls r6, 0",
            "andhi r6, r3, 1",
            "cmp r6, 0",
            "beq 0x4b54",
            "sub r7, r7, 1",
            "mov r6, 0",
            "b 0x4b54",
            "mov r6, r4",
            "mov r7, r6",
            "ldr r1, [sp, 0xc]",
            "mov r2, r7",
            "mov r3, r6",
            "cmp r1, 0",
            "beq 0x4b70",
            "rsbs r2, r2, 0",
            "rsc r3, r3, 0",
            "mov r0, r2",
            "mov r1, r3",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00004b80": {
        "function_address": "0x00004b80",
        "instructions": [
            "push {r0, r1, r2, r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "cmp r3, 0",
            "mov r5, r0",
            "mov r4, r1",
            "mov r8, r2",
            "mov sl, r0",
            "mov sb, r1",
            "bne 0x4df8",
            "cmp r2, r1",
            "bls 0x4c68",
            "clz r3, r2",
            "cmp r3, 0",
            "lslne r8, r2, r3",
            "rsbne r2, r3, 0x20",
            "lsrne r2, r0, r2",
            "lslne sl, r0, r3",
            "lsr r5, r8, 0x10",
            "uxth r6, r8",
            "orrne sb, r2, r1, lsl r3",
            "mov r1, r5",
            "mov r0, sb",
            "bl fcn.000044fc",
            "mov r0, sb",
            "mov fp, r1",
            "mov r1, r5",
            "bl fcn.00004454",
            "lsr r3, sl, 0x10",
            "mul r7, r6, r0",
            "mov r4, r0",
            "orr fp, r3, fp, lsl 16",
            "cmp fp, r7",
            "bhs 0x4c18",
            "adds fp, fp, r8",
            "sub r4, r0, 1",
            "bhs 0x4c18",
            "cmp fp, r7",
            "sublo r4, r4, 1",
            "addlo fp, fp, r8",
            "rsb r7, r7, fp",
            "mov r1, r5",
            "mov r0, r7",
            "uxth sl, sl",
            "bl fcn.000044fc",
            "mov r0, r7",
            "mov fp, r1",
            "mov r1, r5",
            "orr fp, sl, fp, lsl 16",
            "bl fcn.00004454",
            "mul r6, r6, r0",
            "cmp fp, r6",
            "bhs 0x4c60",
            "adds fp, fp, r8",
            "sub r0, r0, 1",
            "bhs 0x4c60",
            "cmp fp, r6",
            "sublo r0, r0, 1",
            "orr r4, r0, r4, lsl 16",
            "b 0x4f54",
            "cmp r2, 0",
            "bne 0x4c80",
            "mov r0, 1",
            "mov r1, r2",
            "bl fcn.00004454",
            "mov r8, r0",
            "clz r3, r8",
            "cmp r3, 0",
            "rsbeq r4, r8, r4",
            "moveq r7, 1",
            "beq 0x4d54",
            "lsl r8, r8, r3",
            "rsb sb, r3, 0x20",
            "lsr r7, r4, sb",
            "lsr sb, r5, sb",
            "lsr r6, r8, 0x10",
            "uxth fp, r8",
            "orr sb, sb, r4, lsl r3",
            "lsl sl, r5, r3",
            "mov r0, r7",
            "mov r1, r6",
            "bl fcn.000044fc",
            "mov r0, r7",
            "mov r4, r1",
            "mov r1, r6",
            "bl fcn.00004454",
            "lsr r3, sb, 0x10",
            "mul r7, fp, r0",
            "mov r5, r0",
            "orr r4, r3, r4, lsl 16",
            "cmp r4, r7",
            "bhs 0x4d00",
            "adds r4, r4, r8",
            "sub r5, r0, 1",
            "bhs 0x4d00",
            "cmp r4, r7",
            "sublo r5, r5, 1",
            "addlo r4, r4, r8",
            "rsb r7, r7, r4",
            "mov r1, r6",
            "mov r0, r7",
            "uxth sb, sb",
            "bl fcn.000044fc",
            "mov r0, r7",
            "mov r4, r1",
            "mov r1, r6",
            "orr r4, sb, r4, lsl 16",
            "bl fcn.00004454",
            "mul fp, fp, r0",
            "cmp r4, fp",
            "bhs 0x4d4c",
            "adds r4, r4, r8",
            "sub r0, r0, 1",
            "bhs 0x4d4c",
            "cmp r4, fp",
            "sublo r0, r0, 1",
            "addlo r4, r4, r8",
            "orr r7, r0, r5, lsl 16",
            "rsb r4, fp, r4",
            "lsr r5, r8, 0x10",
            "mov r0, r4",
            "uxth r6, r8",
            "mov r1, r5",
            "bl fcn.000044fc",
            "mov r0, r4",
            "mov fp, r1",
            "mov r1, r5",
            "bl fcn.00004454",
            "lsr r3, sl, 0x10",
            "mul sb, r6, r0",
            "mov r4, r0",
            "orr fp, r3, fp, lsl 16",
            "cmp fp, sb",
            "bhs 0x4da8",
            "adds fp, fp, r8",
            "sub r4, r0, 1",
            "bhs 0x4da8",
            "cmp fp, sb",
            "sublo r4, r4, 1",
            "addlo fp, fp, r8",
            "rsb sb, sb, fp",
            "mov r1, r5",
            "mov r0, sb",
            "uxth sl, sl",
            "bl fcn.000044fc",
            "mov r0, sb",
            "mov fp, r1",
            "mov r1, r5",
            "orr fp, sl, fp, lsl 16",
            "bl fcn.00004454",
            "mul r6, r6, r0",
            "cmp fp, r6",
            "bhs 0x4df0",
            "adds fp, fp, r8",
            "sub r0, r0, 1",
            "bhs 0x4df0",
            "cmp fp, r6",
            "sublo r0, r0, 1",
            "orr r4, r0, r4, lsl 16",
            "b 0x4f6c",
            "cmp r3, r1",
            "bhi 0x4f5c",
            "clz r7, r3",
            "cmp r7, 0",
            "bne 0x4e28",
            "cmp r1, r3",
            "cmpls r0, r2",
            "movlo r4, 0",
            "movhs r4, 1",
            "movhs r4, 1",
            "bhs 0x4f6c",
            "b 0x4f64",
            "rsb r1, r7, 0x20",
            "lsr r6, r2, r1",
            "lsr sb, r4, r1",
            "lsr r1, r0, r1",
            "lsl r2, r2, r7",
            "orr r6, r6, r3, lsl r7",
            "orr r4, r1, r4, lsl r7",
            "mov r0, sb",
            "lsr r8, r6, 0x10",
            "uxth sl, r6",
            "str r2, [sp, 4]",
            "mov r1, r8",
            "bl fcn.000044fc",
            "mov r0, sb",
            "mov fp, r1",
            "mov r1, r8",
            "bl fcn.00004454",
            "lsr r2, r4, 0x10",
            "mul r3, sl, r0",
            "mov sb, r0",
            "orr fp, r2, fp, lsl 16",
            "cmp fp, r3",
            "bhs 0x4e9c",
            "adds fp, fp, r6",
            "sub sb, r0, 1",
            "bhs 0x4e9c",
            "cmp fp, r3",
            "sublo sb, sb, 1",
            "addlo fp, fp, r6",
            "rsb fp, r3, fp",
            "mov r1, r8",
            "mov r0, fp",
            "uxth r4, r4",
            "bl fcn.000044fc",
            "mov r0, fp",
            "mov r3, r1",
            "mov r1, r8",
            "str r3, [sp]",
            "bl fcn.00004454",
            "ldr r3, [sp]",
            "mul sl, sl, r0",
            "orr r3, r4, r3, lsl 16",
            "cmp r3, sl",
            "bhs 0x4ef0",
            "adds r3, r3, r6",
            "sub r0, r0, 1",
            "bhs 0x4ef0",
            "cmp r3, sl",
            "sublo r0, r0, 1",
            "addlo r3, r3, r6",
            "rsb r3, sl, r3",
            "orr r4, r0, sb, lsl 16",
            "ldr r8, [sp, 4]",
            "lsr r0, r4, 0x10",
            "lsr r1, r8, 0x10",
            "bic ip, r4, r0, lsl 16",
            "bic r6, r8, r1, lsl 16",
            "mul r2, ip, r6",
            "mul r6, r0, r6",
            "mul ip, r1, ip",
            "mul r1, r0, r1",
            "adds ip, r6, ip",
            "addhs r1, r1, 0x10000",
            "adds r2, r2, ip, lsl 16",
            "adc r1, r1, ip, lsr 16",
            "cmp r1, r3",
            "bhi 0x4f50",
            "movne r3, 0",
            "moveq r3, 1",
            "cmp r2, r5, lsl r7",
            "movls r7, 0",
            "andhi r7, r3, 1",
            "cmp r7, 0",
            "beq 0x4f6c",
            "sub r4, r4, 1",
            "mov r7, 0",
            "b 0x4f6c",
            "mov r7, 0",
            "b 0x4f68",
            "mov r7, r4",
            "mov r4, r7",
            "mov r0, r4",
            "mov r1, r7",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    }
}