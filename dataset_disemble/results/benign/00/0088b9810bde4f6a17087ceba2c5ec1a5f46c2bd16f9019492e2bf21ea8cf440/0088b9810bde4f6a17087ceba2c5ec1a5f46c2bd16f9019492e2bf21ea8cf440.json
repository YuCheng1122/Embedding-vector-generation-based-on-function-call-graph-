{
    "entry0": {
        "function_address": "0x0000a1c4",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r4, 0",
            "ldr r6, [r0, 0x14]",
            "mov r5, r4",
            "ldr r7, [r6]",
            "b 0xa1ec",
            "ldr r0, [r7, -0x10]",
            "add r4, r4, 1",
            "bl sym.ffurl_close",
            "orr r5, r5, r0",
            "ldr r3, [r6, 4]",
            "add r7, r7, 0x10",
            "cmp r4, r3",
            "bne 0xa1dc",
            "mov r0, r6",
            "bl sym.imp.av_freep",
            "cmp r5, 0",
            "mvnlt r0, 0",
            "movge r0, 0",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "sym.ffurl_close": {
        "function_address": "0x00018ad8",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "subs r4, r0, 0",
            "moveq r5, r4",
            "beq 0x18b54",
            "ldr r5, [r4, 0x1c]",
            "cmp r5, 0",
            "beq 0x18b0c",
            "ldr r3, [r4, 4]",
            "ldr r5, [r3, 0x14]",
            "cmp r5, 0",
            "beq 0x18b0c",
            "blx r5",
            "mov r5, r0",
            "ldr r3, [r4, 4]",
            "ldr r3, [r3, 0x30]",
            "tst r3, 2",
            "beq 0x18b20",
            "bl fcn.00045c4c",
            "ldr r3, [r4, 4]",
            "ldr r2, [r3, 0x28]",
            "cmp r2, 0",
            "beq 0x18b4c",
            "ldr r3, [r3, 0x2c]",
            "cmp r3, 0",
            "beq 0x18b44",
            "ldr r0, [r4, 0x14]",
            "bl sym.imp.av_opt_free",
            "ldr r0, [r4, 0x14]",
            "bl sym.imp.av_free",
            "mov r0, r4",
            "bl sym.imp.av_free",
            "mov r0, r5",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.imp.av_freep": {
        "function_address": "0x00009abc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0xa60]!"
        ]
    },
    "sym.av_write_frame": {
        "function_address": "0x00072514",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "subs r5, r1, 0",
            "mov r4, r0",
            "bne 0x72540",
            "ldr r3, [r0, 8]",
            "ldr r2, [r3, 0x28]",
            "tst r2, 0x10000",
            "beq 0x725b0",
            "ldr r3, [r3, 0x20]",
            "blx r3",
            "pop {r3, r4, r5, pc}",
            "ldr r2, [r5, 0x18]",
            "ldr r3, [r0, 0x18]",
            "ldr r1, [r3, r2, lsl 2]",
            "mov r2, r5",
            "bl fcn.0006c2e0",
            "cmp r0, 0",
            "bge 0x7256c",
            "ldr r3, [r4, 8]",
            "ldr r3, [r3, 0x28]",
            "tst r3, 0x80",
            "popeq {r3, r4, r5, pc}",
            "ldr r3, [r4, 8]",
            "mov r0, r4",
            "mov r1, r5",
            "ldr r3, [r3, 0x20]",
            "blx r3",
            "cmp r0, 0",
            "poplt {r3, r4, r5, pc}",
            "ldr r2, [r5, 0x18]",
            "mov r5, 0",
            "ldr r3, [r4, 0x18]",
            "mov r4, 1",
            "ldr r1, [r3, r2, lsl 2]",
            "ldrd r2, r3, [r1, 0x90]",
            "adds r2, r2, r4",
            "adc r3, r3, r5",
            "strd r2, r3, [r1, 0x90]",
            "pop {r3, r4, r5, pc}",
            "mov r0, 1",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.0006c2e0": {
        "function_address": "0x0006c2e0",
        "instructions": [
            "ldr r3, [0x0006c86c]",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x24",
            "str r0, [sp, 0x14]",
            "mov r6, r1",
            "add r3, pc, r3",
            "mov r4, r2",
            "str r3, [sp, 0x10]",
            "ldr r3, [r1, 8]",
            "ldr r8, [r3, 0x68]",
            "ldr r3, [r3, 0xfc]",
            "subs r8, r8, 0",
            "movne r8, 1",
            "cmp r8, r3",
            "movlt r8, r3",
            "ldr r3, [r2, 0x28]",
            "cmp r3, 0",
            "bne 0x6c39c",
            "add r2, r2, 0x14",
            "add r1, sp, 0x18",
            "str r2, [sp]",
            "add r0, sp, 0x1c",
            "mov r2, r6",
            "bl fcn.0006c190",
            "ldr r1, [sp, 0x18]",
            "cmp r1, 0",
            "beq 0x6c39c",
            "ldr r3, [sp, 0x1c]",
            "cmp r3, 0",
            "beq 0x6c39c",
            "ldr r0, [r6, 8]",
            "ldr r2, [r6, 0x3c]",
            "smull r2, r3, r3, r2",
            "ldr r0, [r0, 0x354]",
            "mov sl, r0",
            "asr fp, sl, 0x1f",
            "mul ip, r2, fp",
            "mla ip, r0, r3, ip",
            "umull r2, r3, r2, r0",
            "ldr r0, [r6, 0x38]",
            "smull r0, r1, r1, r0",
            "strd r0, r1, [sp]",
            "mov r0, 1",
            "mov r1, 0",
            "add r3, ip, r3",
            "bl sym.imp.av_rescale",
            "str r0, [r4, 0x28]",
            "ldr r3, [r4]",
            "cmp r3, 0",
            "bne 0x6c3e8",
            "ldr r3, [r4, 4]",
            "cmp r3, 0x80000000",
            "bne 0x6c3e8",
            "ldrd r0, r1, [r4, 8]",
            "mov r2, 0",
            "mov r3, 0x80000000",
            "eor r3, r3, r1",
            "eor r2, r2, r0",
            "orrs ip, r2, r3",
            "moveq r3, 0",
            "movne r3, 1",
            "cmp r8, 0",
            "movne r3, 0",
            "andeq r3, r3, 1",
            "cmp r3, 0",
            "strdne r0, r1, [r4]",
            "ldrd r0, r1, [r4]",
            "mov sl, 0",
            "mov fp, 0x80000000",
            "eor r2, r0, sl",
            "eor r3, r1, fp",
            "orrs ip, r2, r3",
            "movne r3, 0",
            "moveq r3, 1",
            "orrs r2, r0, r1",
            "orreq r3, r3, 1",
            "cmp r3, 0",
            "beq 0x6c44c",
            "ldrd r2, r3, [r4, 8]",
            "eor r3, r3, fp",
            "eor r2, r2, sl",
            "orrs ip, r2, r3",
            "movne r3, 0",
            "moveq r3, 1",
            "cmp r8, 0",
            "movne r3, 0",
            "andeq r3, r3, 1",
            "cmp r3, 0",
            "ldrdne r2, r3, [r6, 0x20]",
            "strdne r2, r3, [r4]",
            "strdne r2, r3, [r4, 8]",
            "ldrd r0, r1, [r4]",
            "cmp r0, 0",
            "bne 0x6c460",
            "cmp r1, 0x80000000",
            "beq 0x6c53c",
            "ldrd sl, fp, [r4, 8]",
            "mov r2, 0",
            "mov r3, 0x80000000",
            "eor r3, r3, fp",
            "eor r2, r2, sl",
            "orrs ip, r2, r3",
            "movne r3, 0",
            "moveq r3, 1",
            "cmp r8, 0x10",
            "movgt r3, 0",
            "andle r3, r3, 1",
            "cmp r3, 0",
            "beq 0x6c53c",
            "mov ip, r6",
            "rsb r7, r8, 0",
            "strd r0, r1, [ip, 0xa8]!",
            "mov r5, 1",
            "mov sl, ip",
            "b 0x6c4c8",
            "ldr sb, [r4, 0x28]",
            "add r5, r5, 1",
            "mul sb, sb, r7",
            "add r7, r7, 1",
            "adds r2, r0, sb",
            "adc r3, r1, sb, asr 31",
            "strd r2, r3, [sl, 8]!",
            "cmp r8, r5",
            "blt 0x6c4e8",
            "ldr r3, [sl, 8]",
            "cmp r3, 0",
            "bne 0x6c4e8",
            "ldr r3, [sl, 0xc]",
            "cmp r3, 0x80000000",
            "beq 0x6c4ac",
            "add r3, r6, 0xb0",
            "mov r2, 0",
            "b 0x6c4fc",
            "stmdb r3, {r0, r5}",
            "stmdb ip, {r1, r7}",
            "cmp r2, r8",
            "bge 0x6c534",
            "ldr r5, [ip, 4]",
            "add r2, r2, 1",
            "ldr r7, [r3, 4]",
            "ldr r0, [ip]",
            "add ip, ip, 8",
            "ldr r1, [r3]",
            "add r3, r3, 8",
            "cmp r5, r7",
            "bgt 0x6c4f4",
            "bne 0x6c534",
            "cmp r0, r1",
            "bhi 0x6c4f4",
            "ldrd r2, r3, [r6, 0xa8]",
            "strd r2, r3, [r4, 8]",
            "ldrd r2, r3, [r6, 0x68]",
            "mov r0, 0",
            "mov r1, 0x80000000",
            "eor r0, r0, r2",
            "eor r1, r1, r3",
            "orrs ip, r0, r1",
            "moveq r1, 0",
            "movne r1, 1",
            "orrs r0, r2, r3",
            "moveq r1, 0",
            "andne r1, r1, 1",
            "cmp r1, 0",
            "beq 0x6c5e8",
            "ldr ip, [sp, 0x14]",
            "ldr r1, [ip, 8]",
            "ldr r1, [r1, 0x28]",
            "tst r1, 0x8000000",
            "bne 0x6c5a0",
            "ldr r1, [r4, 0xc]",
            "cmp r1, r3",
            "bgt 0x6c5a0",
            "bne 0x6c5bc",
            "ldr r1, [r4, 8]",
            "cmp r1, r2",
            "bls 0x6c5bc",
            "ldr r1, [r4, 0xc]",
            "cmp r1, r3",
            "blt 0x6c5bc",
            "bne 0x6c5e8",
            "ldr r1, [r4, 8]",
            "cmp r1, r2",
            "bhs 0x6c5e8",
            "strd r2, r3, [sp]",
            "mov r1, 0x10",
            "ldrd r2, r3, [r4, 8]",
            "ldr r0, [sp, 0x14]",
            "strd r2, r3, [sp, 8]",
            "ldr r3, [sp, 0x10]",
            "ldr r2, [0x0006c870]",
            "add r2, r3, r2",
            "ldr r3, [r6]",
            "bl sym.imp.av_log",
            "b 0x6c644",
            "ldrd r8, sb, [r4, 8]",
            "cmp r8, 0",
            "bne 0x6c5fc",
            "cmp sb, 0x80000000",
            "beq 0x6c64c",
            "ldr r3, [r4]",
            "ldr r2, [r4, 4]",
            "cmp r3, 0",
            "bne 0x6c614",
            "cmp r2, 0x80000000",
            "beq 0x6c64c",
            "cmp sb, r2",
            "bgt 0x6c628",
            "bne 0x6c64c",
            "cmp r8, r3",
            "bls 0x6c64c",
            "ldr r2, [0x0006c874]",
            "mov r1, 0x10",
            "ldr ip, [sp, 0x10]",
            "ldr r0, [sp, 0x14]",
            "ldr r3, [r6]",
            "add r2, ip, r2",
            "bl sym.imp.av_log",
            "mvn r0, 0x15",
            "b 0x6c864",
            "ldr r0, [r6, 8]",
            "strd r8, sb, [r6, 0x68]",
            "strd r8, sb, [r6, 0x20]",
            "ldr r3, [r0, 0xd0]",
            "cmp r3, 0",
            "beq 0x6c788",
            "cmp r3, 1",
            "bne 0x6c860",
            "ldr r1, [r4, 0x14]",
            "bl fcn.0006b448",
            "subs r1, r0, 0",
            "blt 0x6c860",
            "ldr r3, [r4, 0x14]",
            "cmp r3, 0",
            "bne 0x6c6bc",
            "ldrd r2, r3, [r6, 0x30]",
            "ldr r0, [r6, 0x28]",
            "asrs r3, r3, 1",
            "rrx r2, r2",
            "cmp r0, r2",
            "bne 0x6c6bc",
            "ldr r0, [r6, 0x2c]",
            "cmp r0, r3",
            "bne 0x6c6bc",
            "ldr r0, [r6, 0x20]",
            "ldr r3, [r6, 0x24]",
            "orrs r0, r0, r3",
            "beq 0x6c864",
            "ldr r3, [r6, 0x3c]",
            "ldrd r4, r5, [r6, 0x28]",
            "smlal r4, r5, r3, r1",
            "cmp r5, 0",
            "ldrd r8, sb, [r6, 0x30]",
            "blt 0x6c6e0",
            "cmp sb, r5",
            "ble 0x6c744",
            "b 0x6c85c",
            "mov r0, r4",
            "mov r1, r5",
            "mov r2, r8",
            "mov r3, sb",
            "bl fcn.0007ded0",
            "ldrd sl, fp, [r6, 0x20]",
            "mov r2, r8",
            "mov r3, sb",
            "adds sl, sl, r0",
            "mov r0, r4",
            "adc fp, fp, r1",
            "mov r1, r5",
            "strd sl, fp, [r6, 0x20]",
            "bl fcn.0007ded0",
            "cmp r3, 0",
            "mov r4, r2",
            "mov r5, r3",
            "bge 0x6c85c",
            "adds r4, r2, r8",
            "mvn r2, 0",
            "adc r5, r3, sb",
            "mvn r3, 0",
            "adds r2, r2, sl",
            "adc r3, r3, fp",
            "b 0x6c80c",
            "bne 0x6c750",
            "cmp r8, r4",
            "bhi 0x6c85c",
            "mov r2, r8",
            "mov r3, sb",
            "mov r0, r4",
            "mov r1, r5",
            "bl fcn.0007ded0",
            "ldrd r2, r3, [r6, 0x20]",
            "adds r2, r2, r0",
            "mov r0, r4",
            "adc r3, r3, r1",
            "mov r1, r5",
            "strd r2, r3, [r6, 0x20]",
            "mov r2, r8",
            "mov r3, sb",
            "b 0x6c850",
            "ldr r2, [r0, 0x20]",
            "ldr r3, [r6, 0x3c]",
            "ldrd r4, r5, [r6, 0x28]",
            "smlal r4, r5, r3, r2",
            "cmp r5, 0",
            "ldrd sl, fp, [r6, 0x30]",
            "blt 0x6c7b0",
            "cmp fp, r5",
            "bgt 0x6c85c",
            "b 0x6c814",
            "mov r0, r4",
            "mov r1, r5",
            "mov r2, sl",
            "mov r3, fp",
            "bl fcn.0007ded0",
            "adds r8, r8, r0",
            "mov r2, sl",
            "adc sb, sb, r1",
            "mov r0, r4",
            "mov r1, r5",
            "strd r8, sb, [r6, 0x20]",
            "mov r3, fp",
            "bl fcn.0007ded0",
            "cmp r3, 0",
            "mov r4, r2",
            "mov r5, r3",
            "bge 0x6c85c",
            "adds r4, r2, sl",
            "mvn r2, 0",
            "adc r5, r3, fp",
            "mvn r3, 0",
            "adds r2, r2, r8",
            "adc r3, r3, sb",
            "strd r2, r3, [r6, 0x20]",
            "b 0x6c85c",
            "bne 0x6c820",
            "cmp sl, r4",
            "bhi 0x6c85c",
            "mov r2, sl",
            "mov r3, fp",
            "mov r0, r4",
            "mov r1, r5",
            "bl fcn.0007ded0",
            "adds r8, r8, r0",
            "mov r2, sl",
            "adc sb, sb, r1",
            "mov r0, r4",
            "mov r1, r5",
            "mov r3, fp",
            "strd r8, sb, [r6, 0x20]",
            "bl fcn.0007ded0",
            "mov r4, r2",
            "mov r5, r3",
            "strd r4, r5, [r6, 0x28]",
            "mov r0, 0",
            "add sp, sp, 0x24",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0006c190": {
        "function_address": "0x0006c190",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r5, r1",
            "mov r1, r3",
            "mov r3, 0",
            "mov r4, r0",
            "mov r8, r2",
            "str r3, [r0]",
            "ldr r0, [r2, 8]",
            "str r3, [r5]",
            "ldr r3, [r0, 0xd0]",
            "cmp r3, 0",
            "beq 0x6c1cc",
            "cmp r3, 1",
            "popne {r4, r5, r6, r7, r8, sb, sl, pc}",
            "b 0x6c2ac",
            "ldr r3, [r2, 0xc]",
            "rsbs ip, r1, 1",
            "movlo ip, 0",
            "cmp r3, 0",
            "moveq r3, 0",
            "andne r3, ip, 1",
            "cmp r3, 0",
            "ldrne r3, [r2, 0x10]",
            "strne r3, [r4]",
            "ldrne r3, [r2, 0xc]",
            "bne 0x6c2d8",
            "ldr sb, [r8, 0x3c]",
            "ldr sl, [r2, 0x38]",
            "mov r2, 0x3e8",
            "smull r2, r3, sl, r2",
            "mov r6, sb",
            "asr r7, r6, 0x1f",
            "cmp r3, r7",
            "bgt 0x6c224",
            "bne 0x6c230",
            "cmp r2, sb",
            "bls 0x6c230",
            "str sl, [r4]",
            "ldr r3, [r8, 0x3c]",
            "b 0x6c2d8",
            "ldr sl, [r0, 0x24]",
            "mov r2, 0x3e8",
            "ldr r8, [r0, 0x20]",
            "smull r2, r3, r8, r2",
            "mov r6, sl",
            "asr r7, r6, 0x1f",
            "cmp r3, r7",
            "bgt 0x6c25c",
            "popne {r4, r5, r6, r7, r8, sb, sl, pc}",
            "cmp r2, sl",
            "popls {r4, r5, r6, r7, r8, sb, sl, pc}",
            "str r8, [r4]",
            "cmp r1, 0",
            "ldr r3, [r0, 0x24]",
            "str r3, [r5]",
            "beq 0x6c288",
            "ldr r3, [r1, 0x24]",
            "cmp r3, 0",
            "ldrne r2, [r4]",
            "addne r3, r3, 1",
            "mulne r3, r3, r2",
            "strne r3, [r4]",
            "ldr r3, [r0, 0x354]",
            "cmp r3, 1",
            "movle ip, 0",
            "andgt ip, ip, 1",
            "cmp ip, 0",
            "movne r3, 0",
            "strne r3, [r5]",
            "strne r3, [r4]",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}",
            "ldr r3, [sp, 0x20]",
            "ldr r1, [r3]",
            "bl fcn.0006b448",
            "cmp r0, 0",
            "pople {r4, r5, r6, r7, r8, sb, sl, pc}",
            "ldr r3, [r8, 8]",
            "ldr r2, [r3, 0x3c]",
            "cmp r2, 0",
            "pople {r4, r5, r6, r7, r8, sb, sl, pc}",
            "str r0, [r4]",
            "ldr r3, [r3, 0x3c]",
            "str r3, [r5]",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "sym.imp.av_rescale": {
        "function_address": "0x00009fe4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x6f0]!"
        ]
    },
    "sym.imp.av_log": {
        "function_address": "0x00009b7c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x9e0]!"
        ]
    },
    "fcn.0006b448": {
        "function_address": "0x0006b448",
        "instructions": [
            "ldr r3, [r0, 0xd4]",
            "ldr r2, [0x0006b4f4]",
            "push {r4, r5, r6, lr}",
            "mov r4, r0",
            "mov r6, r1",
            "cmp r3, r2",
            "beq 0x6b4e4",
            "ldr r0, [r0, 0x48]",
            "cmp r0, 1",
            "popgt {r4, r5, r6, pc}",
            "mov r0, r3",
            "bl sym.imp.av_get_bits_per_sample",
            "subs r1, r0, 0",
            "beq 0x6b49c",
            "ldr r3, [r4, 0x40]",
            "cmp r3, 0",
            "beq 0x6b4e4",
            "lsl r0, r6, 3",
            "mul r1, r3, r1",
            "bl fcn.0007d264",
            "pop {r4, r5, r6, pc}",
            "ldr r2, [r4, 4]",
            "cmp r2, 0",
            "beq 0x6b4ec",
            "ldr r0, [r4, 0x3c]",
            "mov r4, r0",
            "asr r5, r4, 0x1f",
            "lsl r3, r5, 3",
            "mov r4, r6",
            "asr r5, r4, 0x1f",
            "orr r3, r3, r0, lsr 29",
            "lsl r0, r0, 3",
            "mul r1, r0, r5",
            "mla r3, r6, r3, r1",
            "umull r0, r1, r0, r6",
            "add r1, r3, r1",
            "asr r3, r2, 0x1f",
            "bl fcn.0007ded0",
            "pop {r4, r5, r6, pc}",
            "mvn r0, 0",
            "pop {r4, r5, r6, pc}",
            "mvn r0, 0",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.0007ded0": {
        "function_address": "0x0007ded0",
        "instructions": [
            "cmp r3, 0",
            "cmpeq r2, 0",
            "bne 0x7def8",
            "cmp r1, 0",
            "cmpeq r0, 0",
            "movlt r1, 0x80000000",
            "movlt r0, 0",
            "mvngt r1, 0x80000000",
            "mvngt r0, 0",
            "b fcn.0007df50",
            "sub sp, sp, 8",
            "push {sp, lr}",
            "bl fcn.0007df60",
            "ldr lr, [sp, 4]",
            "add sp, sp, 8",
            "pop {r2, r3}",
            "bx lr"
        ]
    },
    "sym.av_hex_dump": {
        "function_address": "0x00073a84",
        "instructions": [
            "push {r0, r1, r2, lr}",
            "mov ip, r0",
            "mov r0, 0",
            "mov r3, r1",
            "mov r1, ip",
            "str r2, [sp]",
            "mov r2, r0",
            "bl fcn.0006b0a0",
            "pop {r1, r2, r3, pc}"
        ]
    },
    "fcn.0006b0a0": {
        "function_address": "0x0006b0a0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov sb, r3",
            "ldr r5, [0x0006b27c]",
            "sub sp, sp, 0x14",
            "mov r7, r0",
            "mov r4, r1",
            "ldr r3, [0x0006b280]",
            "mov r6, r2",
            "add r5, pc, r5",
            "mov r8, 0",
            "add r3, r5, r3",
            "str r3, [sp, 4]",
            "ldr r3, [0x0006b284]",
            "add r3, r5, r3",
            "str r3, [sp, 8]",
            "ldr r3, [0x0006b288]",
            "add r3, r5, r3",
            "str r3, [sp, 0xc]",
            "b 0x6b268",
            "ldr r2, [sp, 0x38]",
            "rsb r3, r8, r2",
            "ldr r2, [0x0006b28c]",
            "cmp r3, 0x10",
            "movge r3, 0x10",
            "cmp r4, 0",
            "str r3, [sp]",
            "bne 0x6b124",
            "mov r0, r7",
            "mov r1, r6",
            "add r2, r5, r2",
            "mov r3, r8",
            "bl sym.imp.av_log",
            "b 0x6b134",
            "add r1, r5, r2",
            "mov r0, r4",
            "mov r2, r8",
            "bl sym.imp.fprintf",
            "mov fp, sb",
            "mov sl, 0",
            "ldr r3, [sp]",
            "cmp sl, r3",
            "bge 0x6b17c",
            "cmp r4, 0",
            "ldrb r3, [fp]",
            "bne 0x6b168",
            "mov r0, r7",
            "mov r1, r6",
            "ldr r2, [sp, 8]",
            "bl sym.imp.av_log",
            "b 0x6b1a4",
            "mov r0, r4",
            "ldr r1, [sp, 8]",
            "mov r2, r3",
            "bl sym.imp.fprintf",
            "b 0x6b1a4",
            "cmp r4, 0",
            "bne 0x6b198",
            "mov r0, r7",
            "mov r1, r6",
            "ldr r2, [sp, 4]",
            "bl sym.imp.av_log",
            "b 0x6b1a4",
            "ldr r0, [sp, 4]",
            "mov r1, r4",
            "bl sym.imp.fputs",
            "add sl, sl, 1",
            "add fp, fp, 1",
            "cmp sl, 0x10",
            "bne 0x6b13c",
            "cmp r4, 0",
            "bne 0x6b1d4",
            "ldr r2, [0x0006b290]",
            "mov r0, r7",
            "mov r1, r6",
            "add r2, r5, r2",
            "bl sym.imp.av_log",
            "b 0x6b1e0",
            "mov r0, 0x20",
            "mov r1, r4",
            "bl sym.imp.fputc",
            "mov fp, sb",
            "mov sl, 0",
            "b 0x6b228",
            "ldrb r3, [fp], 1",
            "sub r2, r3, 0x20",
            "cmp r2, 0x5e",
            "movhi r3, 0x2e",
            "cmp r4, 0",
            "bne 0x6b218",
            "mov r0, r7",
            "mov r1, r6",
            "ldr r2, [sp, 0xc]",
            "bl sym.imp.av_log",
            "b 0x6b224",
            "mov r0, r3",
            "mov r1, r4",
            "bl sym.imp.fputc",
            "add sl, sl, 1",
            "ldr r2, [sp]",
            "cmp sl, r2",
            "blt 0x6b1ec",
            "cmp r4, 0",
            "bne 0x6b254",
            "ldr r2, [0x0006b294]",
            "mov r0, r7",
            "mov r1, r6",
            "add r2, r5, r2",
            "bl sym.imp.av_log",
            "b 0x6b260",
            "mov r0, 0xa",
            "mov r1, r4",
            "bl sym.imp.fputc",
            "add r8, r8, 0x10",
            "add sb, sb, 0x10",
            "ldr r3, [sp, 0x38]",
            "cmp r8, r3",
            "blt 0x6b0ec",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.imp.fprintf": {
        "function_address": "0x00009e28",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x818]!"
        ]
    },
    "sym.imp.fputs": {
        "function_address": "0x00009d8c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x880]!"
        ]
    },
    "sym.imp.fputc": {
        "function_address": "0x00009cfc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x8e0]!"
        ]
    },
    "sym.avformat_alloc_output_context": {
        "function_address": "0x00071f64",
        "instructions": [
            "mov ip, r0",
            "push {r0, r1, r2, lr}",
            "mov r3, r2",
            "add r0, sp, 4",
            "mov r2, ip",
            "bl sym.avformat_alloc_output_context2",
            "cmp r0, 0",
            "ldrge r0, [sp, 4]",
            "movlt r0, 0",
            "pop {r1, r2, r3, pc}"
        ]
    },
    "sym.avformat_alloc_output_context2": {
        "function_address": "0x00071e1c",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sl, lr}",
            "mov r7, r0",
            "ldr r5, [0x00071f54]",
            "mov sl, r3",
            "mov r8, r1",
            "mov r6, r2",
            "bl sym.avformat_alloc_context",
            "subs r4, r0, 0",
            "mov r3, 0",
            "add r5, pc, r5",
            "str r3, [r7]",
            "beq 0x71f2c",
            "cmp r8, r3",
            "bne 0x71ec4",
            "cmp r6, r3",
            "beq 0x71e8c",
            "mov r1, r8",
            "mov r2, r8",
            "mov r0, r6",
            "bl sym.av_guess_format",
            "subs r8, r0, 0",
            "bne 0x71ec4",
            "ldr r2, [0x00071f58]",
            "mov r0, r4",
            "mov r1, 0x10",
            "mov r3, r6",
            "add r2, r5, r2",
            "b 0x71eb8",
            "mov r0, r6",
            "mov r1, sl",
            "mov r2, r6",
            "bl sym.av_guess_format",
            "subs r8, r0, 0",
            "bne 0x71ec4",
            "ldr r2, [0x00071f5c]",
            "mov r0, r4",
            "mov r1, 0x10",
            "mov r3, sl",
            "add r2, r5, r2",
            "bl sym.imp.av_log",
            "mvn r5, 0x15",
            "b 0x71f44",
            "ldr r0, [r8, 0x10]",
            "str r8, [r4, 8]",
            "cmp r0, 0",
            "ble 0x71f00",
            "bl sym.imp.av_mallocz",
            "cmp r0, 0",
            "str r0, [r4, 0xc]",
            "beq 0x71f2c",
            "ldr r2, [r4, 8]",
            "ldr r2, [r2, 0x40]",
            "cmp r2, 0",
            "beq 0x71f08",
            "str r2, [r0]",
            "bl sym.imp.av_opt_set_defaults",
            "b 0x71f08",
            "mov r3, 0",
            "str r3, [r4, 0xc]",
            "cmp sl, 0",
            "beq 0x71f20",
            "add r0, r4, 0x1c",
            "mov r1, sl",
            "mov r2, 0x400",
            "bl sym.imp.av_strlcpy",
            "str r4, [r7]",
            "mov r5, 0",
            "b 0x71f4c",
            "ldr r2, [0x00071f60]",
            "mov r0, r4",
            "mov r1, 0x10",
            "add r2, r5, r2",
            "mvn r5, 0xb",
            "bl sym.imp.av_log",
            "mov r0, r4",
            "bl sym.avformat_free_context",
            "mov r0, r5",
            "pop {r3, r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "sym.avformat_alloc_context": {
        "function_address": "0x0004daec",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "movw r0, 0x4e8",
            "ldr r4, [0x0004db30]",
            "bl sym.imp.av_malloc",
            "subs r5, r0, 0",
            "add r4, pc, r4",
            "beq 0x4db28",
            "mov r1, 0",
            "movw r2, 0x4e8",
            "bl sym.imp.memset",
            "ldr r3, [0x0004db34]",
            "mov r0, r5",
            "add r4, r4, r3",
            "str r4, [r5]",
            "bl sym.imp.av_opt_set_defaults",
            "mov r0, r5",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.av_guess_format": {
        "function_address": "0x0006db20",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r8, 0",
            "mov r4, r0",
            "mov r5, r1",
            "mov sb, r2",
            "mov sl, r8",
            "mov r7, r8",
            "b 0x6dbbc",
            "ldr r0, [r7]",
            "cmp r4, 0",
            "cmpne r0, 0",
            "moveq r6, 0",
            "movne r6, 1",
            "beq 0x6db6c",
            "mov r1, r4",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "moveq r6, 0x64",
            "movne r6, 0",
            "ldr r0, [r7, 8]",
            "cmp sb, 0",
            "cmpne r0, 0",
            "beq 0x6db8c",
            "mov r1, sb",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "addeq r6, r6, 0xa",
            "cmp r5, 0",
            "beq 0x6dbb0",
            "ldr r1, [r7, 0xc]",
            "cmp r1, 0",
            "beq 0x6dbb0",
            "mov r0, r5",
            "bl sym.av_match_ext",
            "cmp r0, 0",
            "addne r6, r6, 5",
            "cmp r6, r8",
            "movgt r8, r6",
            "movgt sl, r7",
            "mov r0, r7",
            "bl sym.av_oformat_next",
            "subs r7, r0, 0",
            "bne 0x6db40",
            "mov r0, sl",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "sym.imp.av_mallocz": {
        "function_address": "0x00009ac8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0xa58]!"
        ]
    },
    "sym.imp.av_opt_set_defaults": {
        "function_address": "0x00009e64",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x7f0]!"
        ]
    },
    "sym.imp.av_strlcpy": {
        "function_address": "0x00009fd8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x6f8]!"
        ]
    },
    "sym.avformat_free_context": {
        "function_address": "0x00071a1c",
        "instructions": [
            "push {r0, r1, r4, r5, r6, lr}",
            "mov r4, r0",
            "bl sym.imp.av_opt_free",
            "ldr r3, [r4, 4]",
            "cmp r3, 0",
            "beq 0x71a50",
            "ldr r3, [r3, 0x44]",
            "cmp r3, 0",
            "beq 0x71a50",
            "ldr r0, [r4, 0xc]",
            "cmp r0, 0",
            "beq 0x71a50",
            "bl sym.imp.av_opt_free",
            "mov r5, 0",
            "add r6, sp, 4",
            "b 0x71aec",
            "ldr r3, [r4, 0x18]",
            "ldr r3, [r3, r5, lsl 2]",
            "ldr r0, [r3, 0x64]",
            "str r3, [sp, 4]",
            "cmp r0, 0",
            "beq 0x71a84",
            "bl sym.imp.av_parser_close",
            "ldr r0, [sp, 4]",
            "add r0, r0, 0x148",
            "bl sym.imp.av_free_packet",
            "ldr r0, [sp, 4]",
            "add r5, r5, 1",
            "add r0, r0, 0x138",
            "bl sym.imp.av_dict_free",
            "ldr r0, [sp, 4]",
            "add r0, r0, 0x80",
            "bl sym.imp.av_freep",
            "ldr r3, [sp, 4]",
            "ldr r0, [r3, 8]",
            "add r0, r0, 0x18",
            "bl sym.imp.av_freep",
            "ldr r3, [sp, 4]",
            "ldr r0, [r3, 8]",
            "add r0, r0, 0x3a0",
            "bl sym.imp.av_freep",
            "ldr r0, [sp, 4]",
            "add r0, r0, 8",
            "bl sym.imp.av_freep",
            "ldr r0, [sp, 4]",
            "add r0, r0, 0x14",
            "bl sym.imp.av_freep",
            "ldr r0, [sp, 4]",
            "add r0, r0, 0x1c0",
            "bl sym.imp.av_freep",
            "mov r0, r6",
            "bl sym.imp.av_freep",
            "ldr r3, [r4, 0x14]",
            "cmp r5, r3",
            "blo 0x71a5c",
            "ldr r6, [r4, 0x484]",
            "sub r5, r6, 0xc0000001",
            "lsl r5, r5, 2",
            "b 0x71b38",
            "ldr r3, [r4, 0x488]",
            "ldr r0, [r3, r5]",
            "add r0, r0, 0x14",
            "bl sym.imp.av_dict_free",
            "ldr r3, [r4, 0x488]",
            "ldr r0, [r3, r5]",
            "add r0, r0, 0xc",
            "bl sym.imp.av_freep",
            "ldr r0, [r4, 0x488]",
            "add r0, r0, r5",
            "sub r5, r5, 4",
            "bl sym.imp.av_freep",
            "subs r6, r6, 1",
            "bpl 0x71b08",
            "add r0, r4, 0x480",
            "add r0, r0, 8",
            "bl sym.imp.av_freep",
            "add r0, r4, 0xc",
            "b 0x71b70",
            "ldr r3, [r4, 0x4a4]",
            "ldr r0, [r3, r2, lsl 2]",
            "add r0, r0, 0x20",
            "bl sym.imp.av_dict_free",
            "ldr r0, [r4, 0x4a0]",
            "ldr r3, [r4, 0x4a4]",
            "add r0, r3, r0, lsl 2",
            "bl sym.imp.av_freep",
            "ldr r3, [r4, 0x4a0]",
            "cmp r3, 0",
            "sub r2, r3, 1",
            "str r2, [r4, 0x4a0]",
            "bne 0x71b54",
            "add r0, r4, 0x4a0",
            "add r0, r0, 4",
            "bl sym.imp.av_freep",
            "add r0, r4, 0x4b0",
            "add r0, r0, 8",
            "bl sym.imp.av_dict_free",
            "add r0, r4, 0x18",
            "bl sym.imp.av_freep",
            "mov r0, r4",
            "bl sym.imp.av_free",
            "pop {r2, r3, r4, r5, r6, pc}"
        ]
    },
    "sym.put_nbyte": {
        "function_address": "0x00019640",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r4, r0",
            "mov r7, r1",
            "mov r5, r2",
            "b 0x19470",
            "ldr r0, [r4, 8]",
            "mov r1, r7",
            "ldr r6, [r4, 0xc]",
            "rsb r6, r0, r6",
            "cmp r5, r6",
            "movlt r6, r5",
            "movge r6, r6",
            "mov r2, r6",
            "bl sym.imp.memset",
            "ldr r3, [r4, 8]",
            "ldr r2, [r4, 0xc]",
            "add r3, r3, r6",
            "cmp r3, r2",
            "str r3, [r4, 8]",
            "blo 0x1946c",
            "mov r0, r4",
            "bl fcn.00019018",
            "rsb r5, r6, r5",
            "cmp r5, 0",
            "bgt 0x19428",
            "pop {r3, r4, r5, r6, r7, pc}",
            "b 0x19414"
        ]
    },
    "sym.imp.memset": {
        "function_address": "0x00009de0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x848]!"
        ]
    },
    "fcn.00019018": {
        "function_address": "0x00019018",
        "instructions": [
            "ldr r2, [r0, 8]",
            "ldr r1, [r0]",
            "push {r4, lr}",
            "mov r4, r0",
            "cmp r2, r1",
            "bls 0x190a4",
            "ldr r3, [r0, 0x18]",
            "cmp r3, 0",
            "beq 0x1905c",
            "ldr r0, [r0, 0x48]",
            "cmp r0, 0",
            "bne 0x1905c",
            "ldr r0, [r4, 0x10]",
            "rsb r2, r1, r2",
            "blx r3",
            "cmp r0, 0",
            "strlt r0, [r4, 0x48]",
            "ldr r3, [r4, 0x44]",
            "cmp r3, 0",
            "beq 0x19088",
            "ldr r1, [r4, 0x40]",
            "ldr r2, [r4, 8]",
            "ldr r0, [r4, 0x3c]",
            "rsb r2, r1, r2",
            "blx r3",
            "ldr r3, [r4]",
            "str r0, [r4, 0x3c]",
            "str r3, [r4, 0x40]",
            "ldr r3, [r4]",
            "ldr r1, [r4, 8]",
            "rsb r1, r3, r1",
            "ldrd r2, r3, [r4, 0x20]",
            "adds r2, r2, r1",
            "adc r3, r3, r1, asr 31",
            "strd r2, r3, [r4, 0x20]",
            "ldr r3, [r4]",
            "str r3, [r4, 8]",
            "pop {r4, pc}"
        ]
    },
    "sym.ff_rtsp_parse_line": {
        "function_address": "0x0005e7d0",
        "instructions": [
            "push {r0, r1, r2, r4, r5, r6, r7, r8, sl, lr}",
            "add r5, sp, 8",
            "ldr r4, [0x0005ec88]",
            "mov r7, r0",
            "mov r0, r1",
            "mov r6, r2",
            "str r1, [r5, -4]!",
            "mov r2, r5",
            "ldr r1, [0x0005ec8c]",
            "add r4, pc, r4",
            "mov r8, r3",
            "add r1, r4, r1",
            "bl sym.imp.av_stristart",
            "subs sl, r0, 0",
            "beq 0x5e864",
            "ldr r2, [0x0005ec90]",
            "add r0, r7, 0x700",
            "add r0, r0, 4",
            "mov r1, 0x200",
            "mov r3, r5",
            "add r2, r4, r2",
            "bl fcn.0005cbec",
            "ldr r1, [0x0005ec94]",
            "mov r2, r5",
            "ldr r0, [sp, 4]",
            "add r1, r4, r1",
            "bl sym.imp.av_stristart",
            "cmp r0, 0",
            "beq 0x5ec84",
            "ldr r0, [sp, 4]",
            "mov r1, 0",
            "mov r2, 0xa",
            "bl sym.imp.strtol",
            "cmp r0, 0",
            "movwgt r3, 0x1984",
            "bgt 0x5ea00",
            "b 0x5ec84",
            "ldr r1, [0x0005ec98]",
            "mov r2, r5",
            "ldr r0, [sp, 4]",
            "add r1, r4, r1",
            "bl sym.imp.av_stristart",
            "cmp r0, 0",
            "beq 0x5e898",
            "ldr r0, [sp, 4]",
            "mov r1, sl",
            "mov r2, 0xa",
            "bl sym.imp.strtol",
            "str r0, [r7]",
            "b 0x5ec84",
            "ldr r1, [0x0005ec9c]",
            "mov r2, r5",
            "ldr r0, [sp, 4]",
            "add r1, r4, r1",
            "bl sym.imp.av_stristart",
            "subs sl, r0, 0",
            "beq 0x5e8c4",
            "mov r0, r7",
            "ldr r1, [sp, 4]",
            "bl fcn.0005cd24",
            "b 0x5ec84",
            "ldr r1, [0x0005eca0]",
            "mov r2, r5",
            "ldr r0, [sp, 4]",
            "add r1, r4, r1",
            "bl sym.imp.av_stristart",
            "cmp r0, 0",
            "beq 0x5e8f8",
            "ldr r0, [sp, 4]",
            "mov r1, sl",
            "mov r2, 0xa",
            "bl sym.imp.strtol",
            "str r0, [r7, 0x700]",
            "b 0x5ec84",
            "ldr r1, [0x0005eca4]",
            "mov r2, r5",
            "ldr r0, [sp, 4]",
            "add r1, r4, r1",
            "bl sym.imp.av_stristart",
            "cmp r0, 0",
            "beq 0x5e928",
            "ldr r0, [sp, 4]",
            "add r1, r7, 0x10",
            "add r2, r7, 0x18",
            "bl fcn.0005d1ec",
            "b 0x5ec84",
            "ldr r1, [0x0005eca8]",
            "mov r2, r5",
            "ldr r0, [sp, 4]",
            "add r1, r4, r1",
            "bl sym.imp.av_stristart",
            "cmp r0, 0",
            "beq 0x5e968",
            "ldr r5, [sp, 4]",
            "ldr r1, [0x0005ecac]",
            "mov r0, r5",
            "add r1, r4, r1",
            "bl sym.imp.strspn",
            "add r1, r5, r0",
            "add r0, r7, 0x1900",
            "str r1, [sp, 4]",
            "b 0x5e9a4",
            "ldr r1, [0x0005ecb0]",
            "mov r2, r5",
            "ldr r0, [sp, 4]",
            "add r1, r4, r1",
            "bl sym.imp.av_stristart",
            "cmp r0, 0",
            "beq 0x5e9b4",
            "ldr r5, [sp, 4]",
            "ldr r1, [0x0005ecac]",
            "mov r0, r5",
            "add r1, r4, r1",
            "bl sym.imp.strspn",
            "add r1, r5, r0",
            "add r0, r7, 0x1940",
            "str r1, [sp, 4]",
            "add r0, r0, 4",
            "mov r2, 0x40",
            "bl sym.imp.av_strlcpy",
            "b 0x5ec84",
            "ldr r1, [0x0005ecb4]",
            "mov r2, r5",
            "ldr r0, [sp, 4]",
            "add r1, r4, r1",
            "bl sym.imp.av_stristart",
            "cmp r0, 0",
            "bne 0x5e9ec",
            "ldr r1, [0x0005ecb8]",
            "mov r2, r5",
            "ldr r0, [sp, 4]",
            "add r1, r4, r1",
            "bl sym.imp.av_stristart",
            "cmp r0, 0",
            "beq 0x5ea08",
            "ldr r0, [sp, 4]",
            "mov r1, 0",
            "mov r2, 0xa",
            "bl sym.imp.strtol",
            "movw r3, 0x1988",
            "str r0, [r7, r3]",
            "b 0x5ec84",
            "ldr r1, [0x0005ecbc]",
            "mov r2, r5",
            "ldr r0, [sp, 4]",
            "add r1, r4, r1",
            "bl sym.imp.av_stristart",
            "cmp r0, 0",
            "beq 0x5ea50",
            "ldr r5, [sp, 4]",
            "ldr r1, [0x0005ecac]",
            "mov r0, r5",
            "add r1, r4, r1",
            "bl sym.imp.strspn",
            "add r1, r5, r0",
            "add r0, r7, 0x900",
            "str r1, [sp, 4]",
            "add r0, r0, 4",
            "mov r2, 0x1000",
            "b 0x5e9ac",
            "ldr r1, [0x0005ecc0]",
            "add r2, sp, 4",
            "ldr r0, [sp, 4]",
            "add r1, r4, r1",
            "bl sym.imp.av_stristart",
            "cmp r0, 0",
            "beq 0x5ea9c",
            "cmp r6, 0",
            "beq 0x5ea9c",
            "ldr r5, [sp, 4]",
            "ldr r1, [0x0005ecac]",
            "mov r0, r5",
            "add r1, r4, r1",
            "bl sym.imp.strspn",
            "add r2, r5, r0",
            "ldr r1, [0x0005ecc4]",
            "str r2, [sp, 4]",
            "add r0, r6, 0x2fc",
            "b 0x5eae4",
            "ldr r1, [0x0005ecc8]",
            "add r2, sp, 4",
            "ldr r0, [sp, 4]",
            "add r1, r4, r1",
            "bl sym.imp.av_stristart",
            "cmp r0, 0",
            "beq 0x5eaf0",
            "cmp r6, 0",
            "beq 0x5eaf0",
            "ldr r5, [sp, 4]",
            "ldr r1, [0x0005ecac]",
            "mov r0, r5",
            "add r1, r4, r1",
            "bl sym.imp.strspn",
            "ldr r1, [0x0005eccc]",
            "add r2, r5, r0",
            "add r0, r6, 0x2fc",
            "str r2, [sp, 4]",
            "add r1, r4, r1",
            "bl fcn.00028af4",
            "b 0x5ec84",
            "ldr r1, [0x0005ecd0]",
            "add r2, sp, 4",
            "ldr r0, [sp, 4]",
            "add r1, r4, r1",
            "bl sym.imp.av_stristart",
            "cmp r0, 0",
            "beq 0x5eb64",
            "cmp r6, 0",
            "beq 0x5eb64",
            "ldr r5, [sp, 4]",
            "ldr r1, [0x0005ecac]",
            "mov r0, r5",
            "add r1, r4, r1",
            "bl sym.imp.strspn",
            "cmp r8, 0",
            "add r5, r5, r0",
            "str r5, [sp, 4]",
            "beq 0x5ec84",
            "ldr r1, [0x0005ecd4]",
            "mov r0, r8",
            "add r1, r4, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x5ec84",
            "add r0, r6, 0x1240",
            "mov r1, r5",
            "add r0, r0, 0x28",
            "mov r2, 0x400",
            "b 0x5e9ac",
            "ldr r1, [0x0005ecd8]",
            "add r2, sp, 4",
            "ldr r0, [sp, 4]",
            "add r1, r4, r1",
            "bl sym.imp.av_stristart",
            "cmp r0, 0",
            "beq 0x5ebd4",
            "cmp r6, 0",
            "beq 0x5ebd4",
            "ldr r5, [sp, 4]",
            "ldr r1, [0x0005ecac]",
            "mov r0, r5",
            "add r1, r4, r1",
            "bl sym.imp.strspn",
            "cmp r8, 0",
            "add r5, r5, r0",
            "str r5, [sp, 4]",
            "beq 0x5ec84",
            "ldr r1, [0x0005ecdc]",
            "mov r0, r8",
            "add r1, r4, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x5ec84",
            "mov r0, r6",
            "mov r1, r5",
            "bl fcn.0005d344",
            "b 0x5ec84",
            "ldr r1, [0x0005ece0]",
            "add r2, sp, 4",
            "ldr r0, [sp, 4]",
            "add r1, r4, r1",
            "bl sym.imp.av_stristart",
            "cmp r0, 0",
            "beq 0x5ec38",
            "cmp r6, 0",
            "beq 0x5ec38",
            "ldr r1, [0x0005ece4]",
            "ldr r0, [sp, 4]",
            "add r1, r4, r1",
            "bl sym.imp.strstr",
            "cmp r0, 0",
            "cmpne r8, 0",
            "beq 0x5ec84",
            "ldr r1, [0x0005ece8]",
            "mov r0, r8",
            "add r1, r4, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "moveq r2, 1",
            "movweq r3, 0x168c",
            "streq r2, [r6, r3]",
            "b 0x5ec84",
            "ldr r1, [0x0005ecec]",
            "add r2, sp, 4",
            "ldr r0, [sp, 4]",
            "add r1, r4, r1",
            "bl sym.imp.av_stristart",
            "cmp r0, 0",
            "beq 0x5ec84",
            "cmp r6, 0",
            "beq 0x5ec84",
            "ldr r5, [sp, 4]",
            "ldr r1, [0x0005ecac]",
            "mov r0, r5",
            "add r1, r4, r1",
            "bl sym.imp.strspn",
            "add r0, r5, r0",
            "str r0, [sp, 4]",
            "bl sym.imp.atoi",
            "movw r3, 0x1698",
            "str r0, [r6, r3]",
            "pop {r1, r2, r3, r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "sym.imp.av_stristart": {
        "function_address": "0x00009f9c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x720]!"
        ]
    },
    "fcn.0005cbec": {
        "function_address": "0x0005cbec",
        "instructions": [
            "ldr ip, [0x0005cbc4]",
            "push {r0, r1, r2, r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r1",
            "ldr r7, [r3]",
            "mov r5, r0",
            "add ip, pc, ip",
            "mov sl, r3",
            "ldr r1, [0x0005cbc8]",
            "mov r6, r5",
            "mov r0, r7",
            "str r2, [sp, 4]",
            "sub fp, r4, 1",
            "add r1, ip, r1",
            "bl sym.imp.strspn",
            "add r7, r7, r0",
            "b 0x5cb8c",
            "rsb r3, r5, r6",
            "cmp r3, fp",
            "strblt r8, [r6], 1",
            "mov sb, r7",
            "ldrb r8, [r7], 1",
            "ldr r0, [sp, 4]",
            "mov r1, r8",
            "bl sym.imp.strchr",
            "cmp r0, 0",
            "bne 0x5cbb0",
            "cmp r8, 0",
            "bne 0x5cb80",
            "cmp r4, 0",
            "movgt r3, 0",
            "strbgt r3, [r6]",
            "str sb, [sl]",
            "pop {r1, r2, r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr ip, [r3]",
            "push {r4, lr}",
            "ldrb r4, [ip]",
            "cmp r4, 0x2f",
            "addeq ip, ip, 1",
            "streq ip, [r3]",
            "pop {r4, lr}",
            "b 0x5cb40"
        ]
    },
    "sym.imp.strtol": {
        "function_address": "0x00009a8c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0xa80]!"
        ]
    },
    "fcn.0005cd24": {
        "function_address": "0x0005cd24",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r3, 0",
            "ldr r4, [0x0005d1a4]",
            "sub sp, sp, 0x15c",
            "mov r5, r0",
            "str r3, [r0, 8]",
            "ldr r3, [0x0005d1a8]",
            "add r4, pc, r4",
            "ldr sb, [0x0005d1ac]",
            "str r1, [sp, 0x14]",
            "add r3, r4, r3",
            "str r3, [sp, 4]",
            "add sb, r4, sb",
            "ldr r3, [0x0005d1b0]",
            "add r3, r4, r3",
            "str r3, [sp, 8]",
            "ldr r3, [0x0005d1b4]",
            "add r3, r4, r3",
            "str r3, [sp, 0xc]",
            "ldr r3, [0x0005d1b8]",
            "add r3, r4, r3",
            "str r3, [sp, 0x10]",
            "ldr r6, [sp, 0x14]",
            "ldr r1, [sp, 4]",
            "mov r0, r6",
            "bl sym.imp.strspn",
            "add r3, r6, r0",
            "str r3, [sp, 0x14]",
            "ldrb r3, [r6, r0]",
            "cmp r3, 0",
            "beq 0x5d19c",
            "add r8, sp, 0x148",
            "add sl, sp, 0x14",
            "mov r0, r8",
            "mov r1, 0x10",
            "ldr r2, [sp, 8]",
            "mov r3, sl",
            "ldr r6, [r5, 8]",
            "bl fcn.0005cbec",
            "mov r0, r8",
            "ldr r1, [sp, 0xc]",
            "bl sym.imp.av_strcasecmp",
            "subs r7, r0, 0",
            "bne 0x5ce2c",
            "mov r3, sl",
            "add r0, sp, 0x138",
            "mov r1, 0x10",
            "mov r2, sb",
            "bl fcn.0005cbec",
            "ldr r3, [sp, 0x14]",
            "strb r7, [sp, 0x128]",
            "ldrb r3, [r3]",
            "cmp r3, 0x2f",
            "bne 0x5ce14",
            "ldr r2, [0x0005d1bc]",
            "add r0, sp, 0x128",
            "mov r1, 0x10",
            "mov r3, sl",
            "add r2, r4, r2",
            "bl fcn.0005cbec",
            "mov r3, 0xdc",
            "mov r2, 0",
            "mla r3, r3, r6, r5",
            "add r3, r3, 0xf0",
            "str r2, [r3, 4]",
            "b 0x5ce84",
            "mov r0, r8",
            "ldr r1, [sp, 0x10]",
            "bl sym.imp.av_strcasecmp",
            "cmp r0, 0",
            "beq 0x5ce58",
            "ldr r1, [0x0005d1c0]",
            "mov r0, r8",
            "add r1, r4, r1",
            "bl sym.imp.av_strcasecmp",
            "cmp r0, 0",
            "bne 0x5ce84",
            "mov r2, sb",
            "add r3, sp, 0x14",
            "add r0, sp, 0x128",
            "mov r1, 0x10",
            "bl fcn.0005cbec",
            "mov r3, 0",
            "mov r2, 1",
            "strb r3, [sp, 0x138]",
            "add r3, r3, 0xdc",
            "mla r3, r3, r6, r5",
            "str r2, [r3, 0xf4]",
            "ldr r1, [0x0005d1c4]",
            "add r0, sp, 0x128",
            "mov r7, 0xdc",
            "mul r7, r7, r6",
            "add r1, r4, r1",
            "bl sym.imp.av_strcasecmp",
            "cmp r0, 0",
            "add sl, r5, r7",
            "moveq r3, 0xdc",
            "movne r3, 0xdc",
            "mlaeq r3, r3, r6, r5",
            "moveq r2, 1",
            "mlane r3, r3, r6, r5",
            "movne r2, 0",
            "add fp, r5, r7",
            "add sl, sl, 0xc4",
            "str r2, [r3, 0xf8]",
            "add fp, fp, 0x44",
            "ldr r3, [sp, 0x14]",
            "ldrb r2, [r3]",
            "cmp r2, 0x3b",
            "addeq r3, r3, 1",
            "streq r3, [sp, 0x14]",
            "ldr r3, [0x0005d1c8]",
            "str r3, [sp]",
            "b 0x5d16c",
            "ldr r3, [sp]",
            "add r6, sp, 0x118",
            "add r8, sp, 0x14",
            "mov r0, r6",
            "mov r1, 0x10",
            "add r2, r4, r3",
            "mov r3, r8",
            "bl fcn.0005cbec",
            "ldr r1, [0x0005d1cc]",
            "mov r0, r6",
            "add r1, r4, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x5cf44",
            "ldr r3, [sp, 0x14]",
            "ldrb r2, [r3]",
            "cmp r2, 0x3d",
            "addeq r3, r3, 1",
            "addeq r0, r7, 0x28",
            "streq r3, [sp, 0x14]",
            "bne 0x5d138",
            "b 0x5cf78",
            "ldr r1, [0x0005d1d0]",
            "mov r0, r6",
            "add r1, r4, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x5cf8c",
            "ldr r3, [sp, 0x14]",
            "ldrb r2, [r3]",
            "cmp r2, 0x3d",
            "bne 0x5d138",
            "add r0, r7, 0x30",
            "add r3, r3, 1",
            "str r3, [sp, 0x14]",
            "add r0, r5, r0",
            "mov r2, r8",
            "add r1, r0, 4",
            "bl fcn.0005cc0c",
            "b 0x5d138",
            "ldr r1, [0x0005d1d4]",
            "mov r0, r6",
            "add r1, r4, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x5cfc4",
            "ldr r3, [sp, 0x14]",
            "ldrb r2, [r3]",
            "cmp r2, 0x3d",
            "addeq r3, r3, 1",
            "addeq r0, r7, 0x38",
            "streq r3, [sp, 0x14]",
            "bne 0x5d138",
            "b 0x5cf78",
            "ldr r1, [0x0005d1d8]",
            "mov r0, r6",
            "add r1, r4, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x5cffc",
            "ldr r3, [sp, 0x14]",
            "ldrb r2, [r3]",
            "cmp r2, 0x3d",
            "addeq r3, r3, 1",
            "addeq r0, r7, 0x20",
            "streq r3, [sp, 0x14]",
            "bne 0x5d138",
            "b 0x5cf78",
            "ldr r1, [0x0005d1dc]",
            "mov r0, r6",
            "add r1, r4, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x5d02c",
            "add r3, r5, r7",
            "ldr r2, [r3, 0xf8]",
            "cmp r2, 0",
            "addeq r2, r2, 2",
            "streq r2, [r3, 0xf8]",
            "b 0x5d138",
            "ldr r1, [0x0005d1e0]",
            "mov r0, r6",
            "add r1, r4, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x5d074",
            "ldr r0, [sp, 0x14]",
            "ldrb r3, [r0]",
            "cmp r3, 0x3d",
            "bne 0x5d138",
            "add r0, r0, 1",
            "mov r1, r8",
            "mov r2, 0xa",
            "str r0, [sp, 0x14]",
            "bl sym.imp.strtol",
            "add r3, r5, r7",
            "str r0, [r3, 0x40]",
            "b 0x5d138",
            "ldr r1, [0x0005d1e4]",
            "mov r0, r6",
            "add r1, r4, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x5d0d0",
            "ldr r3, [sp, 0x14]",
            "ldrb r2, [r3]",
            "cmp r2, 0x3d",
            "bne 0x5d138",
            "ldr r2, [0x0005d1bc]",
            "add r6, sp, 0x18",
            "add r3, r3, 1",
            "mov r0, r6",
            "str r3, [sp, 0x14]",
            "mov r1, 0x100",
            "add r2, r4, r2",
            "mov r3, r8",
            "bl fcn.0005cbec",
            "mov r0, r6",
            "mov r1, fp",
            "bl fcn.0005cca0",
            "b 0x5d138",
            "ldr r1, [0x0005d1e8]",
            "mov r0, r6",
            "add r1, r4, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x5d138",
            "ldr r3, [sp, 0x14]",
            "ldrb r2, [r3]",
            "cmp r2, 0x3d",
            "bne 0x5d138",
            "ldr r2, [0x0005d1bc]",
            "add r6, sp, 0x18",
            "add r3, r3, 1",
            "mov r0, r6",
            "str r3, [sp, 0x14]",
            "mov r1, 0x100",
            "add r2, r4, r2",
            "add r3, sp, 0x14",
            "bl fcn.0005cbec",
            "mov r0, sl",
            "mov r1, r6",
            "mov r2, 0x2f",
            "bl sym.imp.av_strlcpy",
            "b 0x5d138",
            "add r2, r2, 1",
            "str r2, [sp, 0x14]",
            "ldr r2, [sp, 0x14]",
            "ldrb r3, [r2]",
            "cmp r3, 0",
            "cmpne r3, 0x3b",
            "bne 0x5d158",
            "cmp r3, 0x3b",
            "bne 0x5d16c",
            "b 0x5d164",
            "cmp r3, 0x2c",
            "bne 0x5d130",
            "b 0x5d16c",
            "add r2, r2, 1",
            "str r2, [sp, 0x14]",
            "ldr r2, [sp, 0x14]",
            "ldrb r3, [r2]",
            "cmp r3, 0x2c",
            "cmpne r3, 0",
            "bne 0x5ceec",
            "cmp r3, 0x2c",
            "ldr r3, [r5, 8]",
            "addeq r2, r2, 1",
            "streq r2, [sp, 0x14]",
            "add r3, r3, 1",
            "str r3, [r5, 8]",
            "b 0x5cd7c",
            "add sp, sp, 0x15c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0005d1ec": {
        "function_address": "0x0005d1ec",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r7, r1",
            "ldr r6, [0x0005d2c0]",
            "sub sp, sp, 0x108",
            "mov r4, r0",
            "mov r8, r2",
            "ldr r1, [0x0005d2c4]",
            "add r6, pc, r6",
            "str r0, [sp, 4]",
            "add r1, r6, r1",
            "bl sym.imp.strspn",
            "ldr r1, [0x0005d2c8]",
            "add r0, r4, r0",
            "add r4, sp, 0x108",
            "str r0, [r4, -0x104]!",
            "mov r2, r4",
            "add r1, r6, r1",
            "bl sym.imp.av_stristart",
            "cmp r0, 0",
            "beq 0x5d2b8",
            "mov r2, 0",
            "mov r3, 0x80000000",
            "strd r2, r3, [r7]",
            "add r5, sp, 8",
            "strd r2, r3, [r8]",
            "mov r0, r5",
            "ldr r3, [0x0005d2cc]",
            "mov r1, 0x100",
            "add r6, r6, r3",
            "mov r3, r4",
            "mov r2, r6",
            "bl fcn.0005cbec",
            "mov r2, 1",
            "mov r0, r7",
            "mov r1, r5",
            "bl sym.imp.av_parse_time",
            "ldr r3, [sp, 4]",
            "ldrb r2, [r3]",
            "cmp r2, 0x2d",
            "bne 0x5d2b8",
            "add r3, r3, 1",
            "mov r0, r5",
            "str r3, [sp, 4]",
            "mov r1, 0x100",
            "mov r2, r6",
            "mov r3, r4",
            "bl fcn.0005cbec",
            "mov r0, r8",
            "mov r1, r5",
            "mov r2, 1",
            "bl sym.imp.av_parse_time",
            "add sp, sp, 0x108",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "sym.imp.strspn": {
        "function_address": "0x000098e8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0xb98]!"
        ]
    },
    "fcn.00028af4": {
        "function_address": "0x00028af4",
        "instructions": [
            "push {r0, r1, r4, r5, r6, r7, r8, lr}",
            "mov r5, r0",
            "ldr r4, [0x00028ca8]",
            "mov r0, r1",
            "mov r7, r1",
            "mov r6, r2",
            "ldr r1, [0x00028cac]",
            "add r4, pc, r4",
            "add r1, r4, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x28b3c",
            "ldr r1, [0x00028cb0]",
            "mov r0, r7",
            "add r1, r4, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x28c78",
            "ldr r1, [0x00028cb4]",
            "mov r0, r6",
            "add r2, sp, 4",
            "add r1, r4, r1",
            "bl sym.imp.av_stristart",
            "cmp r0, 0",
            "beq 0x28b80",
            "ldr r3, [r5]",
            "cmp r3, 1",
            "bhi 0x28b80",
            "mov r3, 1",
            "ldr r0, [sp, 4]",
            "str r3, [r5]",
            "mov r3, 0",
            "strb r3, [r5, 4]",
            "ldr r1, [0x00028cb8]",
            "b 0x28c98",
            "ldr r1, [0x00028cbc]",
            "mov r0, r6",
            "add r2, sp, 4",
            "add r1, r4, r1",
            "bl sym.imp.av_stristart",
            "cmp r0, 0",
            "beq 0x28ca4",
            "ldr r3, [r5]",
            "cmp r3, 2",
            "bhi 0x28ca4",
            "mov r3, 2",
            "mov r0, r5",
            "str r3, [r0], 0xcc",
            "mov r1, 0",
            "mov r2, 0x284",
            "add r6, r5, 0x200",
            "bl sym.imp.memset",
            "ldr r1, [0x00028cc0]",
            "mov r3, 0",
            "strb r3, [r5, 4]",
            "mov r2, r5",
            "ldr r0, [sp, 4]",
            "add r6, r6, 2",
            "add r1, r4, r1",
            "bl fcn.00074868",
            "ldr r1, [0x00028cc4]",
            "mov r0, r6",
            "add r1, r4, r1",
            "bl sym.imp.strstr",
            "subs r7, r0, 0",
            "beq 0x28c6c",
            "ldrb r8, [r7, 4]",
            "cmp r8, 0",
            "beq 0x28c28",
            "bl sym.imp.__ctype_b_loc",
            "ldr r2, [r0]",
            "lsl r3, r8, 1",
            "ldrh r3, [r2, r3]",
            "tst r3, 0x20",
            "bne 0x28c28",
            "cmp r8, 0x2c",
            "bne 0x28c6c",
            "cmp r7, r6",
            "beq 0x28c54",
            "bl sym.imp.__ctype_b_loc",
            "ldrb r3, [r7, -1]",
            "ldr r1, [r0]",
            "lsl r2, r3, 1",
            "ldrh r2, [r1, r2]",
            "tst r2, 0x20",
            "bne 0x28c54",
            "cmp r3, 0x2c",
            "bne 0x28c6c",
            "ldr r1, [0x00028cc4]",
            "mov r0, r6",
            "mov r2, 0x1e",
            "add r1, r4, r1",
            "bl sym.imp.av_strlcpy",
            "b 0x28ca4",
            "mov r3, 0",
            "strb r3, [r5, 0x202]",
            "b 0x28ca4",
            "ldr r1, [0x00028cc8]",
            "mov r0, r7",
            "add r1, r4, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x28ca4",
            "ldr r1, [0x00028ccc]",
            "mov r0, r6",
            "add r1, r4, r1",
            "mov r2, r5",
            "bl fcn.00074868",
            "pop {r2, r3, r4, r5, r6, r7, r8, pc}"
        ]
    },
    "sym.imp.strcmp": {
        "function_address": "0x0000a05c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x6a0]!"
        ]
    },
    "fcn.0005d344": {
        "function_address": "0x0005d344",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x830",
            "sub sp, sp, 4",
            "mov r5, 0",
            "mov fp, r0",
            "mov r2, 0x3fc",
            "str r1, [sp, 0x14]",
            "add r0, sp, 0x20",
            "ldr r4, [0x0005d518]",
            "mov r1, r5",
            "str r5, [sp, 0x1c]",
            "mov r8, r5",
            "bl sym.imp.memset",
            "ldr r3, [0x0005d51c]",
            "add r4, pc, r4",
            "mov r7, r4",
            "add r3, r4, r3",
            "str r3, [sp]",
            "ldr r3, [0x0005d520]",
            "add r3, r4, r3",
            "str r3, [sp, 4]",
            "ldr r3, [0x0005d524]",
            "add r3, r4, r3",
            "str r3, [sp, 8]",
            "ldr r3, [0x0005d528]",
            "add r3, r4, r3",
            "str r3, [sp, 0xc]",
            "ldr r3, [0x0005d52c]",
            "add r3, r4, r3",
            "str r3, [sp, 0x10]",
            "ldr r4, [sp, 0x14]",
            "ldr r1, [sp]",
            "mov r0, r4",
            "bl sym.imp.strspn",
            "add r3, r4, r0",
            "str r3, [sp, 0x14]",
            "ldrb r3, [r4, r0]",
            "cmp r3, 0",
            "beq 0x5d4f4",
            "add r6, sp, 0x810",
            "add sb, sp, 0x20",
            "add r6, r6, 0xc",
            "sub sl, sb, 0xc",
            "ldr r2, [sp, 4]",
            "mov r3, sl",
            "mov r0, r6",
            "mov r1, 0x14",
            "bl fcn.0005cbec",
            "ldr r3, [sp, 0x14]",
            "ldrb r2, [r3]",
            "cmp r2, 0x3d",
            "bne 0x5d4f4",
            "add r4, sp, 0x410",
            "add r3, r3, 1",
            "add r4, r4, 0xc",
            "str r3, [sp, 0x14]",
            "mov r0, r4",
            "mov r1, 0x400",
            "ldr r2, [sp, 8]",
            "mov r3, sl",
            "bl fcn.0005cbec",
            "mov r0, r6",
            "ldr r1, [sp, 0xc]",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x5d460",
            "sub r0, sb, 4",
            "mov r1, r4",
            "mov r2, 0x400",
            "bl sym.imp.av_strlcpy",
            "b 0x5d4ac",
            "ldr r1, [sp, 0x10]",
            "mov r0, r6",
            "bl sym.imp.strcmp",
            "subs r1, r0, 0",
            "bne 0x5d484",
            "mov r0, r4",
            "mov r2, 0xa",
            "bl sym.imp.strtoul",
            "b 0x5d4ac",
            "ldr r1, [0x0005d530]",
            "mov r0, r6",
            "add r1, r7, r1",
            "bl sym.imp.strcmp",
            "subs r1, r0, 0",
            "bne 0x5d4ac",
            "mov r0, r4",
            "mov r2, 0xa",
            "bl sym.imp.strtoul",
            "mov r5, r0",
            "ldr r3, [sp, 0x14]",
            "ldrb r3, [r3]",
            "cmp r3, 0x2c",
            "addne r8, r8, 1",
            "bne 0x5d4dc",
            "mov r2, r5",
            "mov r5, 0",
            "mov r8, r5",
            "mov r0, fp",
            "add r1, sp, 0x1c",
            "bl fcn.0005d2d0",
            "strb r5, [sp, 0x1c]",
            "ldr r3, [sp, 0x14]",
            "ldrb r2, [r3]",
            "cmp r2, 0",
            "addne r3, r3, 1",
            "strne r3, [sp, 0x14]",
            "b 0x5d3bc",
            "cmp r8, 0",
            "beq 0x5d50c",
            "mov r0, fp",
            "add r1, sp, 0x1c",
            "mov r2, r5",
            "bl fcn.0005d2d0",
            "add sp, sp, 0x34",
            "add sp, sp, 0x800",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.imp.strstr": {
        "function_address": "0x0000a02c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x6c0]!"
        ]
    },
    "sym.imp.atoi": {
        "function_address": "0x0000a08c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x680]!"
        ]
    },
    "sym.url_fgetc": {
        "function_address": "0x00019c84",
        "instructions": [
            "ldr r2, [r0, 8]",
            "ldr r3, [r0, 0xc]",
            "push {r4, lr}",
            "mov r4, r0",
            "cmp r2, r3",
            "blo 0x19ca0",
            "bl fcn.00019b4c",
            "ldr r3, [r4, 8]",
            "ldr r2, [r4, 0xc]",
            "cmp r3, r2",
            "ldrblo r0, [r3], 1",
            "mvnhs r0, 0",
            "strlo r3, [r4, 8]",
            "pop {r4, pc}"
        ]
    },
    "fcn.00019b4c": {
        "function_address": "0x00019b4c",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r4, r0",
            "ldr r6, [r0, 0x38]",
            "cmp r6, 0",
            "bne 0x19b74",
            "ldr r5, [r0, 0xc]",
            "ldm r0, {r2, r3}",
            "rsb r2, r2, r5",
            "cmp r2, r3",
            "blt 0x19b78",
            "ldr r5, [r4]",
            "ldm r4, {r3, r7}",
            "add r7, r3, r7",
            "cmp r6, 0",
            "ldr r3, [r4, 0x14]",
            "moveq r6, 0x8000",
            "rsb r7, r5, r7",
            "cmp r3, 0",
            "bne 0x19bac",
            "ldr r3, [r4, 0xc]",
            "ldr r2, [r4, 8]",
            "cmp r2, r3",
            "movhs r3, 1",
            "strhs r3, [r4, 0x2c]",
            "ldr r3, [r4, 0x2c]",
            "cmp r3, 0",
            "popne {r3, r4, r5, r6, r7, pc}",
            "ldr r3, [r4, 0x44]",
            "cmp r3, 0",
            "beq 0x19bf8",
            "ldr r2, [r4]",
            "cmp r5, r2",
            "bne 0x19bf8",
            "ldr r2, [r4, 0xc]",
            "ldr r1, [r4, 0x40]",
            "cmp r2, r1",
            "bls 0x19bf0",
            "ldr r0, [r4, 0x3c]",
            "rsb r2, r1, r2",
            "blx r3",
            "str r0, [r4, 0x3c]",
            "ldr r3, [r4]",
            "str r3, [r4, 0x40]",
            "ldr r3, [r4, 0x14]",
            "cmp r3, 0",
            "beq 0x19c24",
            "ldr r3, [r4, 4]",
            "cmp r3, r6",
            "ble 0x19c24",
            "mov r0, r4",
            "mov r1, r6",
            "bl fcn.00019ae0",
            "ldm r4, {r5, r7}",
            "str r5, [r4, 0x40]",
            "ldr r3, [r4, 0x14]",
            "cmp r3, 0",
            "beq 0x19c4c",
            "ldr r0, [r4, 0x10]",
            "mov r1, r5",
            "mov r2, r7",
            "blx r3",
            "cmp r0, 0",
            "bgt 0x19c64",
            "b 0x19c50",
            "mov r0, r3",
            "mov r3, 1",
            "cmp r0, 0",
            "str r3, [r4, 0x2c]",
            "strne r0, [r4, 0x48]",
            "pop {r3, r4, r5, r6, r7, pc}",
            "ldrd r2, r3, [r4, 0x20]",
            "str r5, [r4, 8]",
            "add r5, r5, r0",
            "str r5, [r4, 0xc]",
            "adds r2, r2, r0",
            "adc r3, r3, r0, asr 31",
            "strd r2, r3, [r4, 0x20]",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.00019ae0": {
        "function_address": "0x00019ae0",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r4, r0",
            "mov r0, r1",
            "mov r6, r1",
            "bl sym.imp.av_malloc",
            "subs r5, r0, 0",
            "beq 0x19b44",
            "ldr r0, [r4]",
            "bl sym.imp.av_free",
            "ldr r0, [r4, 0x30]",
            "str r5, [r4]",
            "str r5, [r4, 8]",
            "cmp r0, 0",
            "str r6, [r4, 4]",
            "movne r0, 2",
            "moveq r0, 0",
            "cmp r0, 0",
            "addne r5, r5, r6",
            "movne r3, 1",
            "strne r5, [r4, 0xc]",
            "movne r0, 0",
            "strne r3, [r4, 0x30]",
            "streq r5, [r4, 0xc]",
            "streq r0, [r4, 0x30]",
            "pop {r4, r5, r6, pc}",
            "mvn r0, 0xb",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.av_new_stream": {
        "function_address": "0x000745d0",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r1",
            "mov r1, 0",
            "bl sym.avformat_new_stream",
            "cmp r0, 0",
            "strne r4, [r0, 4]",
            "pop {r4, pc}"
        ]
    },
    "sym.avformat_new_stream": {
        "function_address": "0x000744b0",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sb, lr}",
            "mov r8, r1",
            "ldr r1, [r0, 0x14]",
            "mov r6, r0",
            "cmn r1, 0xe0000002",
            "movhi r5, 0",
            "bhi 0x745c4",
            "add r1, r1, 1",
            "ldr r0, [r0, 0x18]",
            "lsl r1, r1, 2",
            "bl sym.imp.av_realloc",
            "subs r5, r0, 0",
            "beq 0x745c4",
            "str r5, [r6, 0x18]",
            "mov r0, 0x1c8",
            "bl sym.imp.av_mallocz",
            "subs r4, r0, 0",
            "mov r5, r0",
            "beq 0x745c4",
            "movw r0, 0x5ac8",
            "bl sym.imp.av_mallocz",
            "cmp r0, 0",
            "mov r7, r0",
            "str r0, [r5, 0x1c0]",
            "bne 0x74524",
            "mov r0, r5",
            "mov r5, r7",
            "bl sym.imp.av_free",
            "b 0x745c4",
            "mov r0, r8",
            "mov sb, 0x80000000",
            "bl sym.imp.avcodec_alloc_context3",
            "ldr r3, [r6, 4]",
            "mov r2, 0",
            "str r0, [r4, 8]",
            "mov r8, 0",
            "mov r1, 0x21",
            "cmp r3, 0",
            "movne r3, 0",
            "strne r3, [r0, 4]",
            "mov r0, r4",
            "ldr r3, [r6, 0x14]",
            "strd r8, sb, [r4, 0x50]",
            "strd r8, sb, [r4, 0x58]",
            "str r3, [r4]",
            "mov r3, 0",
            "strd r2, r3, [r4, 0x68]",
            "movw r3, 0x9c4",
            "str r3, [r4, 0x198]",
            "mov r2, 1",
            "ldr r3, [0x000745cc]",
            "strd r8, sb, [r4, 0x18]",
            "bl sym.avpriv_set_pts_info",
            "add r2, r4, 0xa0",
            "mov r3, 0x11",
            "strd r8, sb, [r4, 0x78]",
            "subs r3, r3, 1",
            "strd r8, sb, [r2, 8]!",
            "bne 0x74590",
            "str r3, [r4, 0x130]",
            "mov r2, 0x190",
            "mov r3, 1",
            "strd r8, sb, [r4, r2]",
            "str r3, [r4, 0x134]",
            "ldr r2, [r6, 0x18]",
            "ldr r3, [r6, 0x14]",
            "str r4, [r2, r3, lsl 2]",
            "add r3, r3, 1",
            "str r3, [r6, 0x14]",
            "mov r0, r5",
            "pop {r3, r4, r5, r6, r7, r8, sb, pc}"
        ]
    },
    "sym.imp.av_realloc": {
        "function_address": "0x0000a0bc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x660]!"
        ]
    },
    "sym.imp.av_free": {
        "function_address": "0x00009948",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0xb58]!"
        ]
    },
    "sym.imp.avcodec_alloc_context3": {
        "function_address": "0x00009e7c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x7e0]!"
        ]
    },
    "sym.avpriv_set_pts_info": {
        "function_address": "0x000743b4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sl, lr}",
            "mov r5, r0",
            "sub sp, sp, 0x1c",
            "mvn r0, 0x80000000",
            "mov r8, r1",
            "mov r1, 0",
            "mov r6, 0",
            "strd r0, r1, [sp, 8]",
            "add r0, sp, 0x10",
            "str r3, [sp]",
            "ldr r4, [0x0007449c]",
            "add r1, r0, 4",
            "mov r3, r6",
            "mov r7, r2",
            "str r6, [sp, 4]",
            "bl sym.imp.av_reduce",
            "cmp r0, r6",
            "add r4, pc, r4",
            "beq 0x74438",
            "ldr r1, [sp, 0x10]",
            "cmp r1, r7",
            "beq 0x7444c",
            "ldr sl, [0x000744a0]",
            "mov r0, r7",
            "bl fcn.0007d19c",
            "mov r1, 0x30",
            "str r0, [sp]",
            "add sl, r4, sl",
            "mov r0, r6",
            "mov r2, sl",
            "ldr r3, [r5]",
            "bl sym.imp.av_log",
            "b 0x7444c",
            "ldr r2, [0x000744a4]",
            "mov r1, 0x18",
            "ldr r3, [r5]",
            "add r2, r4, r2",
            "bl sym.imp.av_log",
            "ldr r3, [sp, 0x10]",
            "cmp r3, 0",
            "ble 0x74464",
            "ldr r3, [sp, 0x14]",
            "cmp r3, 0",
            "bgt 0x74480",
            "ldr r2, [0x000744a8]",
            "mov r0, 0",
            "mov r1, 0x10",
            "ldr r3, [r5]",
            "add r2, r4, r2",
            "bl sym.imp.av_log",
            "b 0x74494",
            "add r2, sp, 0x10",
            "add r3, r5, 0x38",
            "ldm r2, {r0, r1}",
            "str r8, [r5, 0x40]",
            "stm r3, {r0, r1}",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "sym.avio_wb64": {
        "function_address": "0x000197b8",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r1, r3",
            "mov r4, r0",
            "mov r5, r2",
            "bl sym.avio_wb32",
            "mov r0, r4",
            "mov r1, r5",
            "pop {r4, r5, r6, lr}",
            "b sym.avio_wb32"
        ]
    },
    "sym.avio_wb32": {
        "function_address": "0x000195f4",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r5, r0",
            "mov r4, r1",
            "lsr r1, r1, 0x18",
            "bl sym.avio_w8",
            "mov r0, r5",
            "lsr r1, r4, 0x10",
            "bl sym.avio_w8",
            "mov r0, r5",
            "lsr r1, r4, 8",
            "bl sym.avio_w8",
            "mov r0, r5",
            "mov r1, r4",
            "pop {r4, r5, r6, lr}",
            "b sym.avio_w8"
        ]
    },
    "sym.avio_w8": {
        "function_address": "0x000193f8",
        "instructions": [
            "ldr r3, [r0, 8]",
            "strb r1, [r3], 1",
            "ldr r2, [r0, 0xc]",
            "str r3, [r0, 8]",
            "cmp r3, r2",
            "bxlo lr",
            "b fcn.00019018"
        ]
    },
    "sym.avio_rl64": {
        "function_address": "0x0001a178",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r6, r0",
            "bl sym.avio_rl32",
            "mov r4, r0",
            "mov r5, 0",
            "mov r0, r6",
            "bl sym.avio_rl32",
            "mov r2, 0",
            "orr r3, r0, r5",
            "orr r2, r2, r4",
            "mov r1, r3",
            "mov r0, r2",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.avio_rl32": {
        "function_address": "0x0001a158",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r5, r0",
            "bl sym.avio_rl16",
            "mov r4, r0",
            "mov r0, r5",
            "bl sym.avio_rl16",
            "orr r0, r4, r0, lsl 16",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.avio_rl16": {
        "function_address": "0x0001a00c",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r5, r0",
            "bl sym.avio_r8",
            "mov r4, r0",
            "mov r0, r5",
            "bl sym.avio_r8",
            "orr r0, r4, r0, lsl 8",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.avio_r8": {
        "function_address": "0x00019cbc",
        "instructions": [
            "ldr r2, [r0, 8]",
            "ldr r3, [r0, 0xc]",
            "push {r4, lr}",
            "mov r4, r0",
            "cmp r2, r3",
            "blo 0x19cd8",
            "bl fcn.00019b4c",
            "ldr r3, [r4, 8]",
            "ldr r2, [r4, 0xc]",
            "cmp r3, r2",
            "ldrblo r0, [r3], 1",
            "movhs r0, 0",
            "strlo r3, [r4, 8]",
            "pop {r4, pc}"
        ]
    },
    "sym.av_demuxer_open": {
        "function_address": "0x0006e018",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r4, r0",
            "ldr r3, [r0, 4]",
            "ldr r3, [r3, 0x10]",
            "cmp r3, 0",
            "beq 0x6e03c",
            "blx r3",
            "cmp r0, 0",
            "poplt {r3, r4, r5, pc}",
            "ldr r0, [r4, 0x10]",
            "cmp r0, 0",
            "popeq {r3, r4, r5, pc}",
            "ldr r5, [r4, 0x450]",
            "ldr r3, [r4, 0x454]",
            "orrs r5, r5, r3",
            "bne 0x6e06c",
            "bl fcn.0006b828",
            "mov r3, 0x450",
            "strd r0, r1, [r4, r3]",
            "mov r0, r5",
            "pop {r3, r4, r5, pc}",
            "mov r0, 0",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.0006b828": {
        "function_address": "0x0006b828",
        "instructions": [
            "mov r3, 1",
            "push {r0, r1, r2, lr}",
            "mov r2, 0",
            "str r3, [sp]",
            "mov r3, 0",
            "bl sym.avio_seek",
            "add sp, sp, 0xc",
            "ldm sp!, {pc}"
        ]
    },
    "sym.av_read_packet": {
        "function_address": "0x0006e298",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x2c",
            "ldr r7, [0x0006e680]",
            "mov r5, r0",
            "mov r6, r1",
            "ldr r3, [0x0006e684]",
            "add r7, pc, r7",
            "add r3, r7, r3",
            "str r3, [sp, 0x14]",
            "ldr r3, [0x0006e688]",
            "add r3, r7, r3",
            "str r3, [sp, 0x18]",
            "ldr r3, [0x0006e68c]",
            "add r3, r7, r3",
            "str r3, [sp, 0x1c]",
            "ldr r3, [0x0006e690]",
            "add r3, r7, r3",
            "str r3, [sp, 0x10]",
            "ldr r8, [r5, 0x4ac]",
            "cmp r8, 0",
            "beq 0x6e33c",
            "mov r2, 0x48",
            "mov r0, r6",
            "mov r1, r8",
            "bl sym.imp.memcpy",
            "ldr r2, [r6, 0x18]",
            "ldr r3, [r5, 0x18]",
            "ldr r3, [r3, r2, lsl 2]",
            "ldr r3, [r3, 0x1c4]",
            "cmp r3, 0",
            "bgt 0x6e33c",
            "ldr r3, [r8, 0x48]",
            "mov r0, r8",
            "ldr r2, [r5, 0x4bc]",
            "mov sl, 0",
            "str r3, [r5, 0x4ac]",
            "ldr r3, [r6, 0x14]",
            "add r3, r2, r3",
            "str r3, [r5, 0x4bc]",
            "bl sym.imp.av_free",
            "b 0x6e640",
            "mov r0, r6",
            "bl sym.imp.av_init_packet",
            "ldr r3, [r5, 4]",
            "mov r0, r5",
            "mov r1, r6",
            "ldr r3, [r3, 0x14]",
            "blx r3",
            "subs sl, r0, 0",
            "bge 0x6e3a4",
            "cmn sl, 0xb",
            "cmpne r8, 0",
            "movne r8, 0",
            "moveq r8, 1",
            "beq 0x6e640",
            "ldr r1, [r5, 0x14]",
            "mvn r2, 0",
            "b 0x6e398",
            "ldr r3, [r5, 0x18]",
            "ldr r3, [r3, r8, lsl 2]",
            "add r8, r8, 1",
            "ldr r0, [r3, 0x1c4]",
            "cmp r0, 0",
            "strgt r2, [r3, 0x1c4]",
            "cmp r8, r1",
            "bne 0x6e380",
            "b 0x6e2e0",
            "ldr r3, [r5, 0x46c]",
            "tst r3, 0x100",
            "beq 0x6e3e0",
            "ldr r2, [r6, 0x1c]",
            "tst r2, 2",
            "beq 0x6e3e0",
            "ldr r2, [0x0006e694]",
            "mov r0, r5",
            "mov r1, 0x18",
            "ldr r3, [r6, 0x18]",
            "add r2, r7, r2",
            "bl sym.imp.av_log",
            "mov r0, r6",
            "bl sym.imp.av_free_packet",
            "b 0x6e2e0",
            "tst r3, 0x40000",
            "bne 0x6e3f0",
            "mov r0, r6",
            "bl sym.imp.av_packet_merge_side_data",
            "ldr r3, [r6, 0x18]",
            "ldr r2, [r5, 0x14]",
            "cmp r3, r2",
            "ldrhs r2, [0x0006e698]",
            "movhs r0, r5",
            "movhs r1, 0x10",
            "addhs r2, r7, r2",
            "bhs 0x6e638",
            "ldr r2, [r5, 0x18]",
            "ldr r4, [r2, r3, lsl 2]",
            "ldr r3, [r4, 8]",
            "ldr r2, [r3, 0xd0]",
            "cmp r2, 1",
            "beq 0x6e440",
            "cmp r2, 3",
            "beq 0x6e448",
            "cmp r2, 0",
            "ldreq r2, [r5, 0x48c]",
            "beq 0x6e44c",
            "b 0x6e454",
            "ldr r2, [r5, 0x490]",
            "b 0x6e44c",
            "ldr r2, [r5, 0x494]",
            "cmp r2, 0",
            "strne r2, [r3, 0xd4]",
            "cmp r8, 0",
            "bne 0x6e468",
            "ldr r3, [r4, 0x1c4]",
            "cmp r3, 0",
            "ble 0x6e640",
            "add r0, r5, 0x4a0",
            "add r2, r5, 0x4b0",
            "add r0, r0, 0xc",
            "mov r1, r6",
            "bl fcn.0006b298",
            "ldr r2, [r5, 0x4bc]",
            "ldr r3, [r6, 0x14]",
            "rsb r3, r3, r2",
            "str r3, [r5, 0x4bc]",
            "ldr r3, [r4, 0x1c4]",
            "cmp r3, 0",
            "ble 0x6e2e0",
            "ldr r3, [r4, 0x198]",
            "mov r0, r5",
            "ldr r2, [sp, 0x14]",
            "mov r1, 0x30",
            "str r3, [sp]",
            "ldr r3, [r4]",
            "bl sym.imp.av_log",
            "ldr r3, [r4, 0x198]",
            "ldr r1, [r4, 0xa4]",
            "ldr r0, [r4, 0xa0]",
            "sub r3, r3, 1",
            "str r3, [r4, 0x198]",
            "ldr r3, [r6, 0x14]",
            "add r1, r1, r3",
            "add r1, r1, 0x20",
            "bl sym.imp.av_realloc",
            "ldr r3, [r4, 0xa4]",
            "str r0, [r4, 0xa0]",
            "ldr r1, [r6, 0x10]",
            "add r0, r0, r3",
            "ldr r2, [r6, 0x14]",
            "bl sym.imp.memcpy",
            "ldr r2, [r6, 0x14]",
            "mov r1, 0",
            "ldr r3, [r4, 0xa4]",
            "ldr r0, [r4, 0xa0]",
            "add r3, r2, r3",
            "mov r2, 0x20",
            "str r3, [r4, 0xa4]",
            "add r0, r0, r3",
            "bl sym.imp.memset",
            "ldr r3, [r5, 0x4bc]",
            "cmp r3, 0",
            "ble 0x6e52c",
            "ldr r3, [r4, 0x198]",
            "cmp r3, 0",
            "bgt 0x6e64c",
            "mov sl, 1",
            "add r0, r4, 0x9c",
            "mov r1, 1",
            "add r2, sp, 0x24",
            "bl sym.av_probe_input_format3",
            "subs r8, r0, 0",
            "beq 0x6e5d8",
            "ldr r3, [r4, 0x198]",
            "mov r0, r5",
            "ldr r2, [0x0006e69c]",
            "mov r1, 0x30",
            "mov sb, 0",
            "rsb r3, r3, 0x9c0",
            "mov fp, sb",
            "add r3, r3, 4",
            "add r2, r7, r2",
            "str r3, [sp]",
            "ldr r3, [r8]",
            "str r3, [sp, 4]",
            "ldr r3, [sp, 0x24]",
            "str r3, [sp, 8]",
            "ldr r3, [r4, 0xa4]",
            "bl sym.imp.av_log",
            "b 0x6e5c8",
            "ldr r0, [r8]",
            "add sb, sb, 0xc",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x6e5c4",
            "ldr r1, [sp, 0x10]",
            "mov r2, 0xc",
            "ldr r3, [r4, 8]",
            "mla fp, r2, fp, r1",
            "ldr r2, [fp, 4]",
            "str r2, [r3, 0xd4]",
            "ldr r2, [fp, 8]",
            "str r2, [r3, 0xd0]",
            "b 0x6e5d8",
            "add fp, fp, 1",
            "ldr r3, [sp, 0x10]",
            "ldr r1, [r3, sb]",
            "cmp r1, 0",
            "bne 0x6e58c",
            "ldr r3, [r4, 8]",
            "ldr r2, [sp, 0x24]",
            "ldr r3, [r3, 0xd4]",
            "cmp r3, 0",
            "cmpne r2, 0x19",
            "bgt 0x6e5f8",
            "cmp sl, 0",
            "beq 0x6e2e0",
            "mov r3, 0",
            "add r0, r4, 0xa0",
            "str r3, [r4, 0xa4]",
            "bl sym.imp.av_freep",
            "mvn r3, 0",
            "str r3, [r4, 0x1c4]",
            "ldr r3, [r4, 8]",
            "ldr r3, [r3, 0xd4]",
            "cmp r3, 0",
            "ldr r3, [r4]",
            "ldrne r2, [sp, 0x1c]",
            "movne r0, r5",
            "ldreq r2, [sp, 0x18]",
            "movne r1, 0x30",
            "moveq r0, r5",
            "moveq r1, 0x18",
            "bl sym.imp.av_log",
            "b 0x6e2e0",
            "mov r0, sl",
            "add sp, sp, 0x2c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r3, [r4, 0xa4]",
            "ldr r1, [r6, 0x14]",
            "orr r2, r3, 1",
            "rsb r3, r1, r3",
            "clz r2, r2",
            "orr r3, r3, 1",
            "rsb r2, r2, 0x1f",
            "clz r3, r3",
            "rsb r3, r3, 0x1f",
            "cmp r2, r3",
            "movne sl, 0",
            "bne 0x6e530",
            "b 0x6e2e0"
        ]
    },
    "sym.imp.memcpy": {
        "function_address": "0x00009858",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0xbf8]!"
        ]
    },
    "sym.imp.av_init_packet": {
        "function_address": "0x00009b04",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0xa30]!"
        ]
    },
    "sym.imp.av_free_packet": {
        "function_address": "0x00009f3c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x760]!"
        ]
    },
    "sym.imp.av_packet_merge_side_data": {
        "function_address": "0x00009fb4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x710]!"
        ]
    },
    "fcn.0006b298": {
        "function_address": "0x0006b298",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r5, r0",
            "mov r0, 0x50",
            "mov r6, r1",
            "mov r7, r2",
            "bl sym.imp.av_mallocz",
            "subs r4, r0, 0",
            "beq 0x6b2e0",
            "ldr r3, [r5]",
            "mov r0, r4",
            "mov r1, r6",
            "mov r2, 0x48",
            "cmp r3, 0",
            "ldrne r3, [r7]",
            "streq r4, [r5]",
            "strne r4, [r3, 0x48]",
            "str r4, [r7]",
            "bl sym.imp.memcpy",
            "mov r0, r4",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "sym.av_probe_input_format3": {
        "function_address": "0x0006de7c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r5, r1",
            "mov r4, r2",
            "sub sp, sp, 0x14",
            "add ip, sp, 4",
            "ldm r0, {r0, r1, r2}",
            "ldr r3, [0x0006dfd0]",
            "stm ip, {r0, r1, r2}",
            "ldr r2, [sp, 0xc]",
            "add r3, pc, r3",
            "cmp r2, 0xa",
            "ble 0x6def4",
            "ldr r1, [0x0006dfd4]",
            "ldr r0, [sp, 8]",
            "add r1, r3, r1",
            "bl fcn.0002a01c",
            "subs sl, r0, 0",
            "beq 0x6def8",
            "ldr r0, [sp, 8]",
            "bl fcn.0002a0a8",
            "ldr r3, [sp, 0xc]",
            "add r2, r0, 0x10",
            "cmp r3, r2",
            "movle sl, 1",
            "ble 0x6def8",
            "ldr r2, [sp, 8]",
            "add r2, r2, r0",
            "rsb r0, r0, r3",
            "str r2, [sp, 8]",
            "str r0, [sp, 0xc]",
            "mov sl, 0",
            "mov r8, 0",
            "add fp, sp, 4",
            "mov sb, r8",
            "mov r6, r8",
            "b 0x6dfb0",
            "ldr r3, [r6, 0x24]",
            "tst r3, 1",
            "movne r3, 0",
            "moveq r3, 1",
            "cmp r5, 0",
            "eorne r3, r3, 1",
            "cmp r3, 0",
            "bne 0x6dfb0",
            "ldr r3, [r6, 0xc]",
            "cmp r3, 0",
            "beq 0x6df78",
            "mov r0, fp",
            "blx r3",
            "ldr r1, [r6, 0x28]",
            "mov r7, r0",
            "cmp r1, 0",
            "beq 0x6df9c",
            "ldr r0, [sp, 4]",
            "bl sym.av_match_ext",
            "cmp r0, 0",
            "beq 0x6df9c",
            "cmp sl, 0",
            "moveq r3, 1",
            "movne r3, 0x18",
            "cmp r7, r3",
            "movlt r7, r3",
            "b 0x6df9c",
            "ldr r1, [r6, 0x28]",
            "cmp r1, 0",
            "moveq r7, r1",
            "beq 0x6df9c",
            "ldr r0, [sp, 4]",
            "bl sym.av_match_ext",
            "cmp r0, 0",
            "movne r7, 0x32",
            "moveq r7, 0",
            "cmp r7, r8",
            "movgt r8, r7",
            "movgt sb, r6",
            "bgt 0x6dfb0",
            "moveq sb, 0",
            "mov r0, r6",
            "bl sym.av_iformat_next",
            "subs r6, r0, 0",
            "bne 0x6df0c",
            "str r8, [r4]",
            "mov r0, sb",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.avio_wb16": {
        "function_address": "0x000198e0",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r5, r0",
            "mov r4, r1",
            "lsr r1, r1, 8",
            "bl sym.avio_w8",
            "mov r0, r5",
            "mov r1, r4",
            "pop {r4, r5, r6, lr}",
            "b sym.avio_w8"
        ]
    },
    "sym.imp.av_malloc": {
        "function_address": "0x000098a0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0xbc8]!"
        ]
    },
    "sym.av_close_input_file": {
        "function_address": "0x00071c68",
        "instructions": [
            "push {r0, r1, r2, lr}",
            "add r3, sp, 8",
            "str r0, [r3, -4]!",
            "mov r0, r3",
            "bl sym.avformat_close_input",
            "pop {r1, r2, r3, pc}"
        ]
    },
    "sym.avformat_close_input": {
        "function_address": "0x00071be4",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r6, r0",
            "ldr r4, [r0]",
            "ldr r3, [r4, 4]",
            "cmp r3, 0",
            "beq 0x71c08",
            "ldr r3, [r3, 0x24]",
            "tst r3, 1",
            "bne 0x71c18",
            "ldr r3, [r4, 0x46c]",
            "tst r3, 0x80",
            "ldreq r5, [r4, 0x10]",
            "beq 0x71c1c",
            "mov r5, 0",
            "mov r0, r4",
            "bl fcn.0006b3dc",
            "ldr r3, [r4, 4]",
            "cmp r3, 0",
            "beq 0x71c44",
            "ldr r3, [r3, 0x18]",
            "cmp r3, 0",
            "beq 0x71c44",
            "mov r0, r4",
            "blx r3",
            "mov r0, r4",
            "bl sym.avformat_free_context",
            "mov r3, 0",
            "cmp r5, r3",
            "str r3, [r6]",
            "popeq {r4, r5, r6, pc}",
            "mov r0, r5",
            "pop {r4, r5, r6, lr}",
            "b sym.avio_close"
        ]
    },
    "fcn.0006b3dc": {
        "function_address": "0x0006b3dc",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r4, r0",
            "ldr r5, [r4, 0x42c]",
            "cmp r5, 0",
            "beq 0x6b424",
            "ldr r3, [r5, 0x48]",
            "mov r0, r5",
            "str r3, [r4, 0x42c]",
            "bl sym.imp.av_free_packet",
            "mov r0, r5",
            "bl sym.imp.av_free",
            "b 0x6b3e4",
            "ldr r3, [r5, 0x48]",
            "mov r0, r5",
            "str r3, [r4, 0x4ac]",
            "bl sym.imp.av_free_packet",
            "mov r0, r5",
            "bl sym.imp.av_free",
            "ldr r5, [r4, 0x4ac]",
            "cmp r5, 0",
            "bne 0x6b40c",
            "ldr r3, [0x0006b444]",
            "str r5, [r4, 0x4b0]",
            "str r5, [r4, 0x4b4]",
            "str r3, [r4, 0x4bc]",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.avio_open": {
        "function_address": "0x0001a7ac",
        "instructions": [
            "push {r0, r1, r2, lr}",
            "mov r3, 0",
            "str r3, [sp]",
            "bl sym.avio_open2",
            "pop {r1, r2, r3, pc}"
        ]
    },
    "sym.avio_open2": {
        "function_address": "0x0001a75c",
        "instructions": [
            "push {r4, r5, lr}",
            "sub sp, sp, 0x14",
            "mov r4, r0",
            "ldr r0, [sp, 0x20]",
            "str r0, [sp]",
            "add r0, sp, 0xc",
            "bl sym.ffurl_open",
            "subs r5, r0, 0",
            "blt 0x1a7a0",
            "mov r0, r4",
            "ldr r1, [sp, 0xc]",
            "bl fcn.000199fc",
            "subs r5, r0, 0",
            "movge r5, 0",
            "bge 0x1a7a0",
            "ldr r0, [sp, 0xc]",
            "bl sym.ffurl_close",
            "mov r0, r5",
            "add sp, sp, 0x14",
            "pop {r4, r5, pc}"
        ]
    },
    "sym.ffurl_open": {
        "function_address": "0x00018b5c",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r4, r0",
            "ldr r5, [sp, 0x10]",
            "bl fcn.00018880",
            "subs r6, r0, 0",
            "bne 0x18bc8",
            "cmp r5, 0",
            "beq 0x18ba4",
            "ldr r3, [r4]",
            "ldr r2, [r3, 4]",
            "ldr r2, [r2, 0x2c]",
            "cmp r2, 0",
            "beq 0x18ba4",
            "ldr r0, [r3, 0x14]",
            "mov r1, r5",
            "bl sym.imp.av_opt_set_dict",
            "subs r6, r0, 0",
            "blt 0x18bb8",
            "ldr r0, [r4]",
            "mov r1, r5",
            "bl fcn.00018a38",
            "subs r6, r0, 0",
            "beq 0x18bc8",
            "ldr r0, [r4]",
            "bl sym.ffurl_close",
            "mov r3, 0",
            "str r3, [r4]",
            "mov r0, r6",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.000199fc": {
        "function_address": "0x000199fc",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sl, lr}",
            "mov r7, r0",
            "ldr r5, [r1, 0x10]",
            "sub sp, sp, 0x14",
            "mov r4, r1",
            "ldr r8, [0x00019acc]",
            "cmp r5, 0",
            "movne sl, r5",
            "moveq sl, 0x8000",
            "mov r0, sl",
            "add r8, pc, r8",
            "bl sym.imp.av_malloc",
            "subs r6, r0, 0",
            "beq 0x19ac0",
            "ldr r3, [0x00019ad0]",
            "mov r1, sl",
            "ldr r2, [r4, 8]",
            "ldr r3, [r8, r3]",
            "and r2, r2, 2",
            "str r3, [sp]",
            "ldr r3, [0x00019ad4]",
            "ldr r3, [r8, r3]",
            "str r3, [sp, 4]",
            "ldr r3, [0x00019ad8]",
            "ldr r3, [r8, r3]",
            "str r3, [sp, 8]",
            "mov r3, r4",
            "bl sym.avio_alloc_context",
            "cmp r0, 0",
            "str r0, [r7]",
            "bne 0x19a84",
            "mov r0, r6",
            "bl sym.imp.av_free",
            "b 0x19ac0",
            "ldr r3, [r4, 0xc]",
            "str r5, [r0, 0x38]",
            "str r3, [r0, 0x34]",
            "rsbs r3, r3, 1",
            "movlo r3, 0",
            "str r3, [r0, 0x54]",
            "ldr r3, [r4, 4]",
            "cmp r3, 0",
            "moveq r0, r3",
            "ldrne r2, [r3, 0x1c]",
            "ldrne r3, [r3, 0x20]",
            "strne r2, [r0, 0x4c]",
            "strne r3, [r0, 0x50]",
            "movne r0, 0",
            "b 0x19ac4",
            "mvn r0, 0xb",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "fcn.00018880": {
        "function_address": "0x00018880",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r6, r0",
            "ldr r4, [0x000189d4]",
            "mov r0, r1",
            "mov r5, r1",
            "sub sp, sp, 0x10c",
            "ldr r1, [0x000189d8]",
            "mov r8, r3",
            "add r4, pc, r4",
            "mov r7, r2",
            "add r1, r4, r1",
            "bl sym.imp.strspn",
            "ldr r3, [0x000189dc]",
            "mov sl, r0",
            "ldr r0, [r4, r3]",
            "cmp r0, 0",
            "bne 0x188d4",
            "ldr r2, [0x000189e0]",
            "mov r1, 0x18",
            "add r2, r4, r2",
            "bl sym.imp.av_log",
            "ldrb r3, [r5, sl]",
            "add r0, sp, 0x88",
            "cmp r3, 0x2c",
            "cmpne r3, 0x3a",
            "beq 0x188f8",
            "ldr r1, [0x000189e4]",
            "add r1, r4, r1",
            "bl sym.imp.strcpy",
            "b 0x1890c",
            "add r2, sl, 1",
            "mov r1, r5",
            "cmp r2, 0x80",
            "movhs r2, 0x80",
            "bl sym.imp.av_strlcpy",
            "mov r1, 0x2c",
            "add r0, sp, 0x88",
            "bl sym.imp.strchr",
            "cmp r0, 0",
            "add r4, sp, 8",
            "movne r3, 0",
            "add r1, sp, 0x88",
            "strbne r3, [r0]",
            "mov r2, 0x80",
            "mov r0, r4",
            "add fp, sp, 0x88",
            "bl sym.imp.av_strlcpy",
            "mov r0, r4",
            "mov r1, 0x2b",
            "bl sym.imp.strchr",
            "cmp r0, 0",
            "mov r4, 0",
            "movne r3, 0",
            "add sb, sp, 8",
            "strbne r3, [r0]",
            "b 0x189b4",
            "ldr sl, [r4]",
            "mov r0, fp",
            "mov r1, sl",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x18998",
            "ldr r3, [r4, 0x30]",
            "tst r3, 1",
            "beq 0x189b4",
            "mov r0, sb",
            "mov r1, sl",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x189b4",
            "mov r0, r6",
            "mov r1, r4",
            "mov r2, r5",
            "mov r3, r7",
            "str r8, [sp]",
            "bl fcn.000184c0",
            "b 0x189cc",
            "mov r0, r4",
            "bl fcn.00018734",
            "subs r4, r0, 0",
            "bne 0x18960",
            "mvn r0, 1",
            "str r4, [r6]",
            "add sp, sp, 0x10c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.imp.av_opt_set_dict": {
        "function_address": "0x00009a08",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0xad8]!"
        ]
    },
    "fcn.00018a38": {
        "function_address": "0x00018a38",
        "instructions": [
            "ldr r3, [r0, 4]",
            "push {r0, r1, r4, r5, r6, lr}",
            "mov r4, r0",
            "ldr r6, [0x00018ac8]",
            "ldr r3, [r3, 4]",
            "ldr r1, [r0, 0x18]",
            "add r6, pc, r6",
            "ldr r2, [r0, 8]",
            "blx r3",
            "subs r5, r0, 0",
            "bne 0x18ac0",
            "mov r3, 1",
            "str r3, [r4, 0x1c]",
            "ldr r3, [r4, 8]",
            "tst r3, 2",
            "bne 0x18a94",
            "ldr r3, [r4, 4]",
            "ldr r1, [0x00018acc]",
            "ldr r0, [r3]",
            "add r1, r6, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x18ac0",
            "ldr r3, [r4, 0xc]",
            "cmp r3, 0",
            "bne 0x18ac0",
            "str r3, [sp]",
            "mov r0, r4",
            "mov r3, 0",
            "mov r2, 0",
            "bl fcn.000189f0",
            "cmp r1, 0",
            "movlt r3, 1",
            "strlt r3, [r4, 0xc]",
            "mov r0, r5",
            "pop {r2, r3, r4, r5, r6, pc}"
        ]
    },
    "sym.avio_alloc_context": {
        "function_address": "0x000192e4",
        "instructions": [
            "push {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}",
            "mov r7, r0",
            "mov r0, 0x60",
            "mov r6, r1",
            "mov r5, r2",
            "mov r8, r3",
            "bl sym.imp.av_mallocz",
            "subs r4, r0, 0",
            "beq 0x19334",
            "ldr r3, [sp, 0x28]",
            "mov r1, r7",
            "mov r2, r6",
            "str r8, [sp]",
            "str r3, [sp, 4]",
            "ldr r3, [sp, 0x2c]",
            "str r3, [sp, 8]",
            "ldr r3, [sp, 0x30]",
            "str r3, [sp, 0xc]",
            "mov r3, r5",
            "bl fcn.00019224",
            "mov r0, r4",
            "add sp, sp, 0x10",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.00045c4c": {
        "function_address": "0x00045c4c",
        "instructions": [
            "bx lr"
        ]
    },
    "sym.imp.av_opt_free": {
        "function_address": "0x0000a0c8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x658]!"
        ]
    },
    "sym.av_pkt_dump": {
        "function_address": "0x00073f1c",
        "instructions": [
            "ldr ip, [0x00073f70]",
            "mov r3, r1",
            "ldr r1, [0x00073f74]",
            "push {r4, lr}",
            "mov r4, r0",
            "add ip, pc, ip",
            "sub sp, sp, 0x18",
            "add ip, ip, r1",
            "add lr, sp, 0x10",
            "add ip, ip, 0x104",
            "ldm ip, {r0, r1}",
            "mov ip, sp",
            "stm lr, {r0, r1}",
            "str r2, [ip], 4",
            "stm ip, {r0, r1}",
            "mov r0, 0",
            "mov r1, r4",
            "mov r2, r0",
            "bl fcn.00073aa8",
            "add sp, sp, 0x18",
            "pop {r4, pc}"
        ]
    },
    "fcn.00073aa8": {
        "function_address": "0x00073aa8",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x34",
            "mov r6, r3",
            "ldr r3, [sp, 0x58]",
            "subs r5, r1, 0",
            "mov r7, r2",
            "ldr r4, [0x00073ed0]",
            "mov r8, r0",
            "str r3, [sp, 0x2c]",
            "ldr r3, [0x00073ed4]",
            "add r4, pc, r4",
            "ldr sl, [sp, 0x5c]",
            "ldr sb, [sp, 0x60]",
            "str r3, [sp, 0x10]",
            "ldr r3, [0x00073ed8]",
            "ldr r2, [0x00073edc]",
            "ldr fp, [0x00073ee0]",
            "str r3, [sp, 0x18]",
            "bne 0x73b90",
            "mov r1, r7",
            "add r2, r4, r2",
            "ldr r3, [r6, 0x18]",
            "bl sym.imp.av_log",
            "ldr r3, [r6, 0x1c]",
            "add r2, r4, fp",
            "mov r0, r8",
            "mov r1, r7",
            "and r3, r3, 1",
            "bl sym.imp.av_log",
            "ldr r3, [sp, 0x10]",
            "ldr r0, [r6, 0x28]",
            "add fp, r4, r3",
            "bl fcn.0007d690",
            "strd r0, r1, [sp, 0x10]",
            "mov r0, sl",
            "bl fcn.0007d690",
            "strd r0, r1, [sp, 0x20]",
            "mov r0, sb",
            "bl fcn.0007d690",
            "mov r2, r0",
            "mov r3, r1",
            "ldrd r0, r1, [sp, 0x20]",
            "bl fcn.0007d9d8",
            "mov r3, r1",
            "mov r2, r0",
            "ldrd r0, r1, [sp, 0x10]",
            "bl fcn.0007d76c",
            "mov r2, fp",
            "strd r0, r1, [sp]",
            "mov r0, r8",
            "mov r1, r7",
            "bl sym.imp.av_log",
            "ldr r3, [sp, 0x18]",
            "mov r0, r8",
            "mov r1, r7",
            "add r2, r4, r3",
            "bl sym.imp.av_log",
            "b 0x73c20",
            "add r1, r4, r2",
            "mov r0, r5",
            "ldr r2, [r6, 0x18]",
            "bl sym.imp.fprintf",
            "ldr r2, [r6, 0x1c]",
            "add r1, r4, fp",
            "mov r0, r5",
            "and r2, r2, 1",
            "bl sym.imp.fprintf",
            "ldr r3, [sp, 0x10]",
            "ldr r0, [r6, 0x28]",
            "add fp, r4, r3",
            "bl fcn.0007d690",
            "strd r0, r1, [sp, 0x10]",
            "mov r0, sl",
            "bl fcn.0007d690",
            "strd r0, r1, [sp, 0x20]",
            "mov r0, sb",
            "bl fcn.0007d690",
            "mov r2, r0",
            "mov r3, r1",
            "ldrd r0, r1, [sp, 0x20]",
            "bl fcn.0007d9d8",
            "mov r2, r0",
            "mov r3, r1",
            "ldrd r0, r1, [sp, 0x10]",
            "bl fcn.0007d76c",
            "mov r3, r1",
            "mov r2, r0",
            "mov r1, fp",
            "mov r0, r5",
            "bl sym.imp.fprintf",
            "ldr r3, [sp, 0x18]",
            "mov r1, r5",
            "add r0, r4, r3",
            "bl sym.imp.fputs",
            "ldr r0, [r6, 8]",
            "ldr r1, [r6, 0xc]",
            "ldr fp, [0x00073ee4]",
            "cmp r0, 0",
            "bne 0x73c6c",
            "cmp r1, 0x80000000",
            "bne 0x73c6c",
            "cmp r5, 0",
            "ldr r2, [0x00073ee8]",
            "bne 0x73c5c",
            "mov r0, r8",
            "mov r1, r7",
            "add r2, r4, r2",
            "bl sym.imp.av_log",
            "b 0x73e88",
            "add r0, r4, r2",
            "mov r1, r5",
            "bl sym.imp.fputs",
            "b 0x73d34",
            "cmp r5, 0",
            "ldr ip, [0x00073eec]",
            "bne 0x73cd8",
            "add ip, r4, ip",
            "str ip, [sp, 0xc]",
            "bl fcn.0007d70c",
            "strd r0, r1, [sp, 0x10]",
            "mov r0, sl",
            "bl fcn.0007d690",
            "strd r0, r1, [sp, 0x18]",
            "mov r0, sb",
            "bl fcn.0007d690",
            "mov r2, r0",
            "mov r3, r1",
            "ldrd r0, r1, [sp, 0x18]",
            "bl fcn.0007d9d8",
            "mov r2, r0",
            "mov r3, r1",
            "ldrd r0, r1, [sp, 0x10]",
            "bl fcn.0007d76c",
            "ldr ip, [sp, 0xc]",
            "strd r0, r1, [sp]",
            "mov r0, r8",
            "mov r1, r7",
            "mov r2, ip",
            "bl sym.imp.av_log",
            "b 0x73e88",
            "add ip, r4, ip",
            "str ip, [sp, 0xc]",
            "bl fcn.0007d70c",
            "strd r0, r1, [sp, 0x10]",
            "mov r0, sl",
            "bl fcn.0007d690",
            "strd r0, r1, [sp, 0x18]",
            "mov r0, sb",
            "bl fcn.0007d690",
            "mov r2, r0",
            "mov r3, r1",
            "ldrd r0, r1, [sp, 0x18]",
            "bl fcn.0007d9d8",
            "mov r2, r0",
            "mov r3, r1",
            "ldrd r0, r1, [sp, 0x10]",
            "bl fcn.0007d76c",
            "ldr ip, [sp, 0xc]",
            "mov r2, r0",
            "mov r3, r1",
            "mov r0, r5",
            "mov r1, ip",
            "bl sym.imp.fprintf",
            "add r0, r4, fp",
            "mov r1, r5",
            "bl sym.imp.fputs",
            "ldm r6, {r0, r1}",
            "ldr fp, [0x00073ef0]",
            "cmp r0, 0",
            "bne 0x73d88",
            "cmp r1, 0x80000000",
            "bne 0x73d88",
            "cmp r5, 0",
            "ldr r2, [0x00073ee8]",
            "bne 0x73d78",
            "mov r0, r8",
            "mov r1, r7",
            "add r2, r4, r2",
            "bl sym.imp.av_log",
            "b 0x73e9c",
            "add r0, r4, r2",
            "mov r1, r5",
            "bl sym.imp.fputs",
            "b 0x73e48",
            "cmp r5, 0",
            "ldr ip, [0x00073eec]",
            "bne 0x73df4",
            "add ip, r4, ip",
            "str ip, [sp, 0xc]",
            "bl fcn.0007d70c",
            "strd r0, r1, [sp, 0x10]",
            "mov r0, sl",
            "bl fcn.0007d690",
            "strd r0, r1, [sp, 0x18]",
            "mov r0, sb",
            "bl fcn.0007d690",
            "mov r2, r0",
            "mov r3, r1",
            "ldrd r0, r1, [sp, 0x18]",
            "bl fcn.0007d9d8",
            "mov r2, r0",
            "mov r3, r1",
            "ldrd r0, r1, [sp, 0x10]",
            "bl fcn.0007d76c",
            "ldr ip, [sp, 0xc]",
            "strd r0, r1, [sp]",
            "mov r0, r8",
            "mov r1, r7",
            "mov r2, ip",
            "bl sym.imp.av_log",
            "b 0x73e9c",
            "add r7, r4, ip",
            "bl fcn.0007d70c",
            "strd r0, r1, [sp, 0x10]",
            "mov r0, sl",
            "bl fcn.0007d690",
            "strd r0, r1, [sp, 0x18]",
            "mov r0, sb",
            "bl fcn.0007d690",
            "mov r2, r0",
            "mov r3, r1",
            "ldrd r0, r1, [sp, 0x18]",
            "bl fcn.0007d9d8",
            "mov r2, r0",
            "mov r3, r1",
            "ldrd r0, r1, [sp, 0x10]",
            "bl fcn.0007d76c",
            "mov r2, r0",
            "mov r3, r1",
            "mov r0, r5",
            "mov r1, r7",
            "bl sym.imp.fprintf",
            "mov r1, r5",
            "mov r0, 0xa",
            "bl sym.imp.fputc",
            "mov r0, r5",
            "add r1, r4, fp",
            "ldr r2, [r6, 0x14]",
            "bl sym.imp.fprintf",
            "ldr r3, [sp, 0x2c]",
            "cmp r3, 0",
            "beq 0x73ec8",
            "mov r0, r5",
            "ldr r1, [r6, 0x10]",
            "ldr r2, [r6, 0x14]",
            "add sp, sp, 0x34",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "b sym.av_hex_dump",
            "mov r0, r8",
            "mov r1, r7",
            "add r2, r4, fp",
            "bl sym.imp.av_log",
            "b 0x73d40",
            "ldr r2, [0x00073ef4]",
            "mov r0, r8",
            "mov r1, r7",
            "add r2, r4, r2",
            "bl sym.imp.av_log",
            "mov r0, r8",
            "mov r1, r7",
            "add r2, r4, fp",
            "ldr r3, [r6, 0x14]",
            "bl sym.imp.av_log",
            "b 0x73e64",
            "add sp, sp, 0x34",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0007d690": {
        "function_address": "0x0007d690",
        "instructions": [
            "teq r0, 0",
            "moveq r1, 0",
            "bxeq lr",
            "push {r4, r5, lr}",
            "mov r4, 0x400",
            "add r4, r4, 0x32",
            "ands r5, r0, 0x80000000",
            "rsbmi r0, r0, 0",
            "mov r1, 0",
            "b 0x7d508"
        ]
    },
    "fcn.0007d9d8": {
        "function_address": "0x0007d9d8",
        "instructions": [
            "bgt 0x7d9b8",
            "cmn r4, 0x36",
            "movle r0, 0",
            "andle r1, r1, 0x80000000",
            "pople {r4, r5, r6, pc}",
            "rsb r4, r4, 0",
            "subs r4, r4, 0x20",
            "bge 0x7d8d4",
            "adds r4, r4, 0xc",
            "bgt 0x7d8a8",
            "add r4, r4, 0x14",
            "rsb r5, r4, 0x20",
            "lsl r3, r0, r5",
            "lsr r0, r0, r4",
            "orr r0, r0, r1, lsl r5",
            "and r2, r1, 0x80000000",
            "bic r1, r1, 0x80000000",
            "adds r0, r0, r3, lsr 31",
            "adc r1, r2, r1, lsr r4",
            "orrs lr, lr, r3, lsl 1",
            "biceq r0, r0, r3, lsr 31",
            "pop {r4, r5, r6, pc}",
            "rsb r4, r4, 0xc",
            "rsb r5, r4, 0x20",
            "lsl r3, r0, r4",
            "lsr r0, r0, r5",
            "orr r0, r0, r1, lsl r4",
            "and r1, r1, 0x80000000",
            "adds r0, r0, r3, lsr 31",
            "adc r1, r1, 0",
            "orrs lr, lr, r3, lsl 1",
            "biceq r0, r0, r3, lsr 31",
            "pop {r4, r5, r6, pc}",
            "rsb r5, r4, 0x20",
            "orr lr, lr, r0, lsl r5",
            "lsr r3, r0, r4",
            "orr r3, r3, r1, lsl r5",
            "lsr r0, r1, r4",
            "and r1, r1, 0x80000000",
            "bic r0, r0, r1, lsr r4",
            "add r0, r0, r3, lsr 31",
            "orrs lr, lr, r3, lsl 1",
            "biceq r0, r0, r3, lsr 31",
            "pop {r4, r5, r6, pc}",
            "and r1, r1, 0x80000000",
            "orr r1, r1, 0x7f000000",
            "orr r1, r1, 0xf00000",
            "mov r0, 0",
            "pop {r4, r5, r6, pc}",
            "push {r4, r5, r6, lr}",
            "mov ip, 0xff",
            "orr ip, ip, 0x700",
            "ands r4, ip, r1, lsr 20",
            "andsne r5, ip, r3, lsr 20",
            "teqne r4, ip",
            "teqne r5, ip",
            "bleq fcn.0007db6c",
            "sub r4, r4, r5",
            "eor lr, r1, r3",
            "orrs r5, r2, r3, lsl 12",
            "lsl r1, r1, 0xc",
            "beq 0x7db3c",
            "lsl r3, r3, 0xc",
            "mov r5, 0x10000000",
            "orr r3, r5, r3, lsr 4",
            "orr r3, r3, r2, lsr 24",
            "lsl r2, r2, 8",
            "orr r5, r5, r1, lsr 4",
            "orr r5, r5, r0, lsr 24",
            "lsl r6, r0, 8",
            "and r1, lr, 0x80000000",
            "cmp r5, r3",
            "cmpeq r6, r2",
            "adc r4, r4, 0xfd",
            "add r4, r4, 0x300",
            "bhs 0x7da4c",
            "lsrs r3, r3, 1",
            "rrx r2, r2",
            "subs r6, r6, r2",
            "sbc r5, r5, r3",
            "lsrs r3, r3, 1",
            "rrx r2, r2",
            "mov r0, 0x100000",
            "mov ip, 0x80000",
            "subs lr, r6, r2",
            "sbcs lr, r5, r3",
            "subhs r6, r6, r2",
            "movhs r5, lr",
            "orrhs r0, r0, ip",
            "lsrs r3, r3, 1",
            "rrx r2, r2",
            "subs lr, r6, r2",
            "sbcs lr, r5, r3",
            "subhs r6, r6, r2",
            "movhs r5, lr",
            "orrhs r0, r0, ip, lsr 1",
            "lsrs r3, r3, 1",
            "rrx r2, r2",
            "subs lr, r6, r2",
            "sbcs lr, r5, r3",
            "subhs r6, r6, r2",
            "movhs r5, lr",
            "orrhs r0, r0, ip, lsr 2",
            "lsrs r3, r3, 1",
            "rrx r2, r2",
            "subs lr, r6, r2",
            "sbcs lr, r5, r3",
            "subhs r6, r6, r2",
            "movhs r5, lr",
            "orrhs r0, r0, ip, lsr 3",
            "orrs lr, r5, r6",
            "beq 0x7db0c",
            "lsl r5, r5, 4",
            "orr r5, r5, r6, lsr 28",
            "lsl r6, r6, 4",
            "lsl r3, r3, 3",
            "orr r3, r3, r2, lsr 29",
            "lsl r2, r2, 3",
            "lsrs ip, ip, 4",
            "bne 0x7da64",
            "tst r1, 0x100000",
            "bne 0x7db18",
            "orr r1, r1, r0",
            "mov r0, 0",
            "mov ip, 0x80000000",
            "b 0x7da64",
            "tst r1, 0x100000",
            "orreq r1, r1, r0",
            "moveq r0, 0",
            "subs ip, r4, 0xfd",
            "cmphi ip, 0x700",
            "bhi 0x7d850",
            "subs ip, r5, r3",
            "subseq ip, r6, r2",
            "lsrseq ip, r0, 1",
            "adcs r0, r0, 0",
            "adc r1, r1, r4, lsl 20",
            "pop {r4, r5, r6, pc}",
            "and lr, lr, 0x80000000",
            "orr r1, lr, r1, lsr 12",
            "adds r4, r4, ip, lsr 1",
            "rsbsgt r5, r4, ip",
            "orrgt r1, r1, r4, lsl 20",
            "popgt {r4, r5, r6, pc}",
            "orr r1, r1, 0x100000",
            "mov lr, 0",
            "subs r4, r4, 1",
            "b 0x7d850"
        ]
    },
    "fcn.0007d76c": {
        "function_address": "0x0007d76c",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov ip, 0xff",
            "orr ip, ip, 0x700",
            "ands r4, ip, r1, lsr 20",
            "andsne r5, ip, r3, lsr 20",
            "teqne r4, ip",
            "teqne r5, ip",
            "bleq fcn.0007d94c",
            "add r4, r4, r5",
            "eor r6, r1, r3",
            "bic r1, r1, ip, lsl 21",
            "bic r3, r3, ip, lsl 21",
            "orrs r5, r0, r1, lsl 12",
            "orrsne r5, r2, r3, lsl 12",
            "orr r1, r1, 0x100000",
            "orr r3, r3, 0x100000",
            "beq 0x7d824",
            "umull ip, lr, r0, r2",
            "mov r5, 0",
            "umlal lr, r5, r1, r2",
            "and r2, r6, 0x80000000",
            "umlal lr, r5, r0, r3",
            "mov r6, 0",
            "umlal r5, r6, r1, r3",
            "teq ip, 0",
            "orrne lr, lr, 1",
            "sub r4, r4, 0xff",
            "cmp r6, 0x200",
            "sbc r4, r4, 0x300",
            "bhs 0x7d7f0",
            "lsls lr, lr, 1",
            "adcs r5, r5, r5",
            "adc r6, r6, r6",
            "orr r1, r2, r6, lsl 11",
            "orr r1, r1, r5, lsr 21",
            "lsl r0, r5, 0xb",
            "orr r0, r0, lr, lsr 21",
            "lsl lr, lr, 0xb",
            "subs ip, r4, 0xfd",
            "cmphi ip, 0x700",
            "bhi 0x7d850",
            "cmp lr, 0x80000000",
            "lsrseq lr, r0, 1",
            "adcs r0, r0, 0",
            "adc r1, r1, r4, lsl 20",
            "pop {r4, r5, r6, pc}",
            "and r6, r6, 0x80000000",
            "orr r1, r6, r1",
            "orr r0, r0, r2",
            "eor r1, r1, r3",
            "subs r4, r4, ip, lsr 1",
            "rsbsgt r5, r4, ip",
            "orrgt r1, r1, r4, lsl 20",
            "popgt {r4, r5, r6, pc}",
            "orr r1, r1, 0x100000",
            "mov lr, 0",
            "subs r4, r4, 1"
        ]
    },
    "fcn.0007d70c": {
        "function_address": "0x0007d70c",
        "instructions": [
            "orrs r2, r0, r1",
            "bxeq lr",
            "push {r4, r5, lr}",
            "ands r5, r1, 0x80000000",
            "bpl 0x7d728",
            "rsbs r0, r0, 0",
            "rsc r1, r1, 0"
        ]
    },
    "sym.url_fgets": {
        "function_address": "0x0001a864",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sl, lr}",
            "mov r4, r0",
            "mov r5, r1",
            "mov r8, r2",
            "bl sym.avio_r8",
            "mov r7, r0",
            "mov r0, r4",
            "bl sym.url_feof",
            "cmp r0, 0",
            "movne r5, 0",
            "bne 0x1a8d8",
            "mov r6, r5",
            "sub sl, r8, 1",
            "mov r0, r4",
            "bl sym.url_feof",
            "cmp r0, 0",
            "bne 0x1a8cc",
            "cmp r7, 0xa",
            "beq 0x1a8cc",
            "rsb r3, r5, r6",
            "mov r0, r4",
            "cmp r3, sl",
            "strblt r7, [r6], 1",
            "bl sym.avio_r8",
            "mov r7, r0",
            "b 0x1a898",
            "cmp r8, 0",
            "movgt r3, 0",
            "strbgt r3, [r6]",
            "mov r0, r5",
            "pop {r3, r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "sym.url_feof": {
        "function_address": "0x0001a1e0",
        "instructions": [
            "push {r4, lr}",
            "subs r4, r0, 0",
            "beq 0x1a20c",
            "ldr r3, [r4, 0x2c]",
            "cmp r3, 0",
            "beq 0x1a204",
            "mov r3, 0",
            "str r3, [r4, 0x2c]",
            "bl fcn.00019b4c",
            "ldr r0, [r4, 0x2c]",
            "pop {r4, pc}",
            "mov r0, r4",
            "pop {r4, pc}"
        ]
    },
    "fcn.00019224": {
        "function_address": "0x00019224",
        "instructions": [
            "push {r4, r5, lr}",
            "cmp r3, 0",
            "ldr r4, [sp, 0xc]",
            "mov r5, 0",
            "str r1, [r0]",
            "str r4, [r0, 0x10]",
            "movne r4, 2",
            "moveq r4, 0",
            "str r1, [r0, 8]",
            "cmp r4, 0",
            "ldr ip, [sp, 0x10]",
            "addne r1, r1, r2",
            "streq r1, [r0, 0xc]",
            "strne r1, [r0, 0xc]",
            "movne r1, 1",
            "strne r1, [r0, 0x30]",
            "ldr r1, [sp, 0x14]",
            "streq r4, [r0, 0x30]",
            "mov r4, 0",
            "strd r4, r5, [r0, 0x20]",
            "mov r4, 1",
            "str r1, [r0, 0x18]",
            "ldr r1, [sp, 0x18]",
            "str r2, [r0, 4]",
            "str ip, [r0, 0x14]",
            "str r1, [r0, 0x1c]",
            "mov r1, 0",
            "cmp ip, r1",
            "cmpeq r3, r1",
            "str r1, [r0, 0x28]",
            "str r1, [r0, 0x2c]",
            "str r1, [r0, 0x48]",
            "str r1, [r0, 0x34]",
            "str r4, [r0, 0x54]",
            "str r1, [r0, 0x38]",
            "str r1, [r0, 0x44]",
            "ldreq r3, [r0]",
            "moveq r4, r2",
            "asreq r5, r4, 0x1f",
            "strdeq r4, r5, [r0, 0x20]",
            "addeq r2, r3, r2",
            "streq r2, [r0, 0xc]",
            "mov r3, 0",
            "str r3, [r0, 0x4c]",
            "str r3, [r0, 0x50]",
            "mov r0, r3",
            "pop {r4, r5, pc}"
        ]
    },
    "sym.avformat_find_stream_info": {
        "function_address": "0x000700ac",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r0",
            "sub sp, sp, 0x244",
            "ldr r6, [0x00070d64]",
            "mov sl, 0",
            "ldr r0, [r0, 0x10]",
            "mov fp, sl",
            "str r1, [sp, 0x10]",
            "add r6, pc, r6",
            "bl fcn.0006b828",
            "ldr r3, [0x00070d68]",
            "mov r7, r6",
            "strd r0, r1, [sp, 0x58]",
            "ldr r0, [r4, 0x14]",
            "add r3, r6, r3",
            "ldr r8, [sp, 0x10]",
            "str r3, [sp, 0x20]",
            "ldr r3, [0x00070d6c]",
            "str r0, [sp, 0x34]",
            "add r3, r6, r3",
            "str r3, [sp, 0x18]",
            "b 0x70260",
            "ldr r3, [r4, 0x18]",
            "str fp, [sp, 0x23c]",
            "ldr r5, [r3, sl, lsl 2]",
            "ldr r3, [r5, 8]",
            "ldr r2, [r3, 0xd0]",
            "cmp r2, 0",
            "cmpne r2, 3",
            "bne 0x7013c",
            "ldr r2, [r3, 0x20]",
            "cmp r2, 0",
            "addeq r1, r5, 0x38",
            "addeq r2, r3, 0x20",
            "ldmeq r1, {r0, r1}",
            "stmeq r2, {r0, r1}",
            "ldr r2, [r5, 0x64]",
            "cmp r2, 0",
            "bne 0x7017c",
            "ldr r2, [r4, 0x46c]",
            "tst r2, 0x20",
            "bne 0x7017c",
            "ldr r0, [r3, 0xd4]",
            "bl sym.imp.av_parser_init",
            "ldr r3, [r5, 0x60]",
            "str r0, [r5, 0x64]",
            "cmp r3, 2",
            "bne 0x7017c",
            "cmp r0, 0",
            "ldrne r3, [r0, 0xb0]",
            "orrne r3, r3, 1",
            "strne r3, [r0, 0xb0]",
            "ldr r3, [r5, 8]",
            "ldr r6, [r3, 0x78]",
            "cmp r6, 0",
            "bne 0x70198",
            "ldr r0, [r3, 0xd4]",
            "bl sym.imp.avcodec_find_decoder",
            "mov r6, r0",
            "ldr r1, [sp, 0x10]",
            "mov r3, 0",
            "ldr r2, [sp, 0x18]",
            "cmp r1, 0",
            "ldr r1, [sp, 0x20]",
            "movne r0, r8",
            "addeq r0, sp, 0x23c",
            "bl sym.imp.av_dict_set",
            "ldr r0, [r5, 8]",
            "subs sb, r6, 0",
            "movne sb, 1",
            "ldr r3, [r0, 0xd0]",
            "cmp r3, 3",
            "movne r3, 0",
            "andeq r3, sb, 1",
            "cmp r3, 0",
            "beq 0x70200",
            "ldr r3, [r0, 0x78]",
            "cmp r3, 0",
            "bne 0x70200",
            "ldr r2, [sp, 0x10]",
            "mov r1, r6",
            "cmp r2, 0",
            "movne r2, r8",
            "addeq r2, sp, 0x23c",
            "bl sym.imp.avcodec_open2",
            "ldr r5, [r5, 8]",
            "mov r0, r5",
            "bl fcn.0006aee8",
            "cmp r0, 0",
            "bne 0x70244",
            "cmp sb, 0",
            "beq 0x70244",
            "ldr r3, [r5, 0x78]",
            "cmp r3, 0",
            "bne 0x70244",
            "ldr r3, [sp, 0x10]",
            "mov r0, r5",
            "mov r1, r6",
            "cmp r3, 0",
            "movne r2, r8",
            "addeq r2, sp, 0x23c",
            "bl sym.imp.avcodec_open2",
            "ldr ip, [sp, 0x10]",
            "cmp ip, 0",
            "bne 0x70258",
            "add r0, sp, 0x23c",
            "bl sym.imp.av_dict_free",
            "add sl, sl, 1",
            "add r8, r8, 4",
            "ldr r1, [r4, 0x14]",
            "cmp sl, r1",
            "blo 0x70104",
            "mov r6, r7",
            "mov r0, 0",
            "mov r2, 0",
            "mov r3, 0x80000000",
            "b 0x70294",
            "ldr ip, [r4, 0x18]",
            "ldr ip, [ip, r0, lsl 2]",
            "add r0, r0, 1",
            "ldr ip, [ip, 0x1c0]",
            "strd r2, r3, [ip]",
            "cmp r0, r1",
            "bne 0x70280",
            "add r3, r4, 0x420",
            "mov r0, 0",
            "add r3, r3, 0xc",
            "str r0, [sp, 0x38]",
            "str r3, [sp, 0x70]",
            "add r3, r4, 0x4b0",
            "add r3, r3, 4",
            "str r0, [sp, 0x40]",
            "str r3, [sp, 0x74]",
            "ldr r3, [0x00070ddc]",
            "str r6, [sp, 0x28]",
            "add r3, r6, r3",
            "str r3, [sp, 0x44]",
            "add r0, r4, 0x4d0",
            "bl fcn.00018de8",
            "subs r6, r0, 0",
            "beq 0x703fc",
            "ldr r6, [sp, 0x28]",
            "mov r0, r4",
            "ldr r2, [0x00070d70]",
            "mov r1, 0x30",
            "add r2, r6, r2",
            "bl sym.imp.av_log",
            "b 0x70954",
            "ldr r3, [r4, 0x18]",
            "ldr r5, [r3, r6, lsl 2]",
            "ldr r7, [r5, 8]",
            "mov r0, r7",
            "bl fcn.0006aee8",
            "cmp r0, 0",
            "beq 0x70408",
            "ldr r0, [r5, 0x38]",
            "bl fcn.0007d690",
            "mov sl, r0",
            "mov fp, r1",
            "ldr r0, [r5, 0x3c]",
            "bl fcn.0007d690",
            "mov r2, r0",
            "mov r3, r1",
            "mov r0, sl",
            "mov r1, fp",
            "bl fcn.0007d9d8",
            "ldr r2, [0x00070d74]",
            "ldr r3, [0x00070d78]",
            "bl fcn.0007dcf4",
            "ldr r3, [r4, 0x4c8]",
            "cmp r0, 0",
            "movne sl, 0x28",
            "moveq sl, 0x14",
            "mov r0, r7",
            "cmp r3, 0",
            "movge sl, r3",
            "bl fcn.0006b050",
            "cmp r0, 0",
            "beq 0x703ac",
            "ldr r3, [r5, 0xc]",
            "cmp r3, 0",
            "beq 0x70390",
            "ldr r3, [r5, 0x1a0]",
            "cmp r3, 0",
            "bne 0x703ac",
            "ldr r3, [r5, 0x1c0]",
            "ldr r3, [r3, 0x10]",
            "cmp r3, sl",
            "bge 0x703ac",
            "ldr r3, [r7, 0xd0]",
            "cmp r3, 0",
            "beq 0x70408",
            "ldr r3, [r5, 0x64]",
            "cmp r3, 0",
            "beq 0x703d4",
            "ldr r3, [r3, 4]",
            "ldr r3, [r3, 0x24]",
            "cmp r3, 0",
            "beq 0x703d4",
            "ldr r3, [r7, 0x18]",
            "cmp r3, 0",
            "beq 0x70408",
            "ldr r3, [r5, 0x18]",
            "cmp r3, 0",
            "bne 0x703f8",
            "ldr r3, [r5, 0x1c]",
            "cmp r3, 0x80000000",
            "bne 0x703f8",
            "ldr r3, [r7, 0xd0]",
            "cmp r3, 1",
            "bls 0x70408",
            "add r6, r6, 1",
            "ldr r8, [r4, 0x14]",
            "cmp r6, r8",
            "blo 0x702fc",
            "cmp r6, r8",
            "bne 0x70440",
            "ldr r3, [r4, 0x428]",
            "tst r3, 1",
            "bne 0x70440",
            "ldr r6, [sp, 0x28]",
            "mov r1, 0x30",
            "ldr r2, [0x00070d7c]",
            "mov r0, r4",
            "add r2, r6, r2",
            "bl sym.imp.av_log",
            "ldr r1, [sp, 0x40]",
            "str r1, [sp, 0x20]",
            "b 0x70a68",
            "ldr r3, [r4, 0x474]",
            "ldr r2, [sp, 0x38]",
            "cmp r2, r3",
            "blo 0x7046c",
            "ldr r6, [sp, 0x28]",
            "mov r0, r4",
            "ldr r2, [0x00070d80]",
            "mov r1, 0x30",
            "add r2, r6, r2",
            "bl sym.imp.av_log",
            "b 0x70954",
            "add r5, sp, 0x1c0",
            "mov r0, r4",
            "mov r1, r5",
            "bl fcn.0006ebc0",
            "cmn r0, 0xb",
            "beq 0x702d0",
            "cmp r0, 0",
            "blt 0x70950",
            "mov r1, r5",
            "ldr r2, [sp, 0x74]",
            "ldr r0, [sp, 0x70]",
            "bl fcn.0006b298",
            "mov r7, r0",
            "bl sym.imp.av_dup_packet",
            "cmp r0, 0",
            "str r0, [sp, 0x20]",
            "blt 0x71728",
            "ldr r3, [r7, 0x14]",
            "ldr r2, [r7, 0x18]",
            "str r3, [sp, 0x64]",
            "ldr r3, [r4, 0x18]",
            "ldr r5, [r3, r2, lsl 2]",
            "ldr sl, [r5, 0x1a8]",
            "cmp sl, 1",
            "ble 0x70638",
            "ldr r3, [r5, 0x3c]",
            "cmp r3, 0",
            "movle r0, 0",
            "movle r1, 0",
            "ble 0x70524",
            "ldr fp, [sp, 0x44]",
            "movw r3, 0x5ab8",
            "ldr r2, [r5, 0x1c0]",
            "add ip, sp, 0x234",
            "add r1, fp, 0xb0",
            "ldm r1, {r0, r1}",
            "add r2, r2, r3",
            "ldrd r2, r3, [r2]",
            "stm ip, {r0, r1}",
            "mov ip, sp",
            "stm ip, {r0, r1}",
            "mov r1, r3",
            "add r3, r5, 0x38",
            "mov r0, r2",
            "ldm r3, {r2, r3}",
            "bl sym.imp.av_rescale_q",
            "ldr r8, [r5, 0x1a0]",
            "strd r0, r1, [sp, 0x20]",
            "cmp r8, 0",
            "ble 0x705cc",
            "ldr fp, [sp, 0x44]",
            "mov r2, sl",
            "asr r3, r2, 0x1f",
            "strd r2, r3, [sp, 0x18]",
            "add r3, sp, 0x224",
            "ldr sl, [r5, 0x1a4]",
            "mov ip, sp",
            "add r2, fp, 0xb8",
            "str r8, [sp, 0x230]",
            "ldm r2, {r0, r1}",
            "str sl, [sp, 0x22c]",
            "stm r3, {r0, r1}",
            "add r3, sp, 0x22c",
            "stm ip, {r0, r1}",
            "ldm r3, {r2, r3}",
            "ldrd r0, r1, [sp, 0x18]",
            "bl sym.imp.av_rescale_q",
            "ldr r2, [sp, 0x24]",
            "cmp r2, r1",
            "bgt 0x705cc",
            "bne 0x70594",
            "ldr r3, [sp, 0x20]",
            "cmp r3, r0",
            "bhi 0x705cc",
            "str sl, [sp, 0x21c]",
            "add r3, sp, 0x214",
            "ldr sl, [sp, 0x44]",
            "mov fp, sp",
            "str r8, [sp, 0x220]",
            "add r2, sl, 0xc0",
            "ldm r2, {r0, r1}",
            "stm r3, {r0, r1}",
            "add r3, sp, 0x21c",
            "stm fp, {r0, r1}",
            "ldrd r0, r1, [sp, 0x18]",
            "ldm r3, {r2, r3}",
            "bl sym.imp.av_rescale_q",
            "strd r0, r1, [sp, 0x20]",
            "ldr ip, [r4, 0x478]",
            "ldr r0, [sp, 0x24]",
            "mov r2, ip",
            "asr r3, r2, 0x1f",
            "cmp r3, r0",
            "bgt 0x7061c",
            "bne 0x705f4",
            "ldr r1, [sp, 0x20]",
            "cmp ip, r1",
            "bhi 0x7061c",
            "ldrd r2, r3, [sp, 0x20]",
            "mov r0, r4",
            "ldr r6, [sp, 0x28]",
            "mov r1, 0x18",
            "strd r2, r3, [sp]",
            "mov r3, ip",
            "ldr r2, [0x00070d84]",
            "add r2, r6, r2",
            "bl sym.imp.av_log",
            "b 0x70954",
            "ldr r0, [r5, 0x1c0]",
            "movw r1, 0x5ab8",
            "ldr ip, [r7, 0x28]",
            "ldrd r2, r3, [r0, r1]",
            "adds r2, r2, ip",
            "adc r3, r3, ip, asr 31",
            "strd r2, r3, [r0, r1]",
            "ldr r8, [r5, 0x1c0]",
            "ldrd r0, r1, [r7, 8]",
            "ldrd sl, fp, [r8]",
            "strd r0, r1, [sp, 0x18]",
            "mov r0, 0",
            "mov r1, 0x80000000",
            "eor r3, fp, r1",
            "eor r2, sl, r0",
            "strd sl, fp, [sp, 0x20]",
            "orrs sl, r2, r3",
            "ldrd r2, r3, [sp, 0x18]",
            "moveq ip, 0",
            "movne ip, 1",
            "eor r2, r2, r0",
            "eor r3, r3, r1",
            "orrs fp, r2, r3",
            "moveq ip, 0",
            "andne ip, ip, 1",
            "cmp ip, 0",
            "beq 0x70834",
            "ldr ip, [sp, 0x1c]",
            "ldr r0, [sp, 0x24]",
            "cmp ip, r0",
            "bgt 0x706ac",
            "bne 0x7084c",
            "ldr r1, [sp, 0x18]",
            "ldr r2, [sp, 0x20]",
            "cmp r1, r2",
            "bls 0x7084c",
            "ldrd r0, r1, [sp, 0x18]",
            "mov r6, 1",
            "bl fcn.0007d70c",
            "strd r0, r1, [sp, 0x50]",
            "mov sb, r5",
            "ldr r0, [r5, 0x38]",
            "bl fcn.0007d690",
            "mov sl, r0",
            "mov fp, r1",
            "ldr r0, [r5, 0x3c]",
            "bl fcn.0007d690",
            "mov r2, r0",
            "mov r3, r1",
            "mov r0, sl",
            "mov r1, fp",
            "mov sl, r4",
            "mov fp, r7",
            "bl fcn.0007d9d8",
            "mov r2, r0",
            "mov r3, r1",
            "ldrd r0, r1, [sp, 0x50]",
            "bl fcn.0007d76c",
            "strd r0, r1, [sp, 0x68]",
            "mov r0, r6",
            "add r5, r6, 3",
            "add r4, r6, 0x2d8",
            "add r5, r8, r5, lsl 3",
            "add r4, r8, r4, lsl 3",
            "mov r7, 0",
            "bl fcn.0006afec",
            "bl fcn.0007d690",
            "mov r2, r0",
            "mov r3, r1",
            "ldrd r0, r1, [sp, 0x68]",
            "bl fcn.0007d76c",
            "mov r2, 0",
            "ldr r3, [0x00070dc0]",
            "bl fcn.0007d9d8",
            "strd r0, r1, [sp, 0x50]",
            "mov r0, r7",
            "add r7, r7, 1",
            "bl fcn.0007d690",
            "mov r2, 0",
            "ldr r3, [0x00070d88]",
            "bl fcn.0007d76c",
            "strd r0, r1, [sp, 0x48]",
            "ldrd r2, r3, [sp, 0x48]",
            "ldrd r0, r1, [sp, 0x50]",
            "bl fcn.0007d3c0",
            "bl fcn.0007ddb8",
            "bl sym.imp.lrintf",
            "bl fcn.0007d690",
            "mov r2, r0",
            "mov r3, r1",
            "ldrd r0, r1, [sp, 0x50]",
            "bl fcn.0007d3bc",
            "ldrd r2, r3, [sp, 0x48]",
            "bl fcn.0007d3c0",
            "strd r0, r1, [sp, 0x48]",
            "ldrd r2, r3, [sp, 0x48]",
            "ldrd r0, r1, [r5]",
            "bl fcn.0007d3c0",
            "strd r0, r1, [r5]",
            "add r5, r5, 0x2d40",
            "ldrd r0, r1, [sp, 0x48]",
            "add r5, r5, 0x10",
            "mov r2, r0",
            "mov r3, r1",
            "bl fcn.0007d76c",
            "mov r2, r0",
            "mov r3, r1",
            "ldrd r0, r1, [r4]",
            "bl fcn.0007d3c0",
            "cmp r7, 2",
            "strd r0, r1, [r4]",
            "add r4, r4, 0x2d40",
            "add r4, r4, 0x10",
            "bne 0x70748",
            "add r6, r6, 1",
            "movw r3, 0x2d5",
            "cmp r6, r3",
            "bne 0x70708",
            "ldr r3, [r8, 0x10]",
            "mov r7, fp",
            "mov r5, sb",
            "mov r4, sl",
            "add r3, r3, 1",
            "cmp r3, 3",
            "str r3, [r8, 0x10]",
            "ble 0x7084c",
            "ldrd r2, r3, [sp, 0x18]",
            "ldrd sl, fp, [sp, 0x20]",
            "ldrd r0, r1, [r8, 8]",
            "subs r2, r2, sl",
            "sbc r3, r3, fp",
            "bl sym.imp.av_gcd",
            "strd r0, r1, [r8, 8]",
            "b 0x7084c",
            "ldr fp, [sp, 0x20]",
            "cmp fp, 0",
            "bne 0x7084c",
            "ldr ip, [sp, 0x24]",
            "cmp ip, 0x80000000",
            "beq 0x7085c",
            "ldr r3, [r5, 0x1c0]",
            "ldr r3, [r3, 0x10]",
            "cmp r3, 1",
            "bgt 0x70868",
            "ldr r1, [r5, 0x1c0]",
            "ldrd r2, r3, [r7, 8]",
            "strd r2, r3, [r1]",
            "ldr r3, [r5, 0x64]",
            "cmp r3, 0",
            "beq 0x708fc",
            "ldr r3, [r3, 4]",
            "ldr r3, [r3, 0x24]",
            "cmp r3, 0",
            "beq 0x708fc",
            "ldr r0, [r5, 8]",
            "ldr sl, [r0, 0x18]",
            "cmp sl, 0",
            "bne 0x708fc",
            "ldr r2, [r7, 0x14]",
            "ldr r1, [r7, 0x10]",
            "blx r3",
            "ldr r3, [0x00070d8c]",
            "sub r2, r0, 1",
            "mov r8, r0",
            "cmp r2, r3",
            "bhi 0x708fc",
            "ldr sb, [r5, 8]",
            "str r0, [sb, 0x1c]",
            "add r0, r0, 0x10",
            "bl sym.imp.av_malloc",
            "ldr r3, [r5, 8]",
            "str r0, [sb, 0x18]",
            "ldr r0, [r3, 0x18]",
            "cmp r0, 0",
            "beq 0x71764",
            "ldr r2, [r3, 0x1c]",
            "ldr r1, [r7, 0x10]",
            "bl sym.imp.memcpy",
            "ldr r3, [r5, 8]",
            "mov r1, sl",
            "mov r2, 0x10",
            "ldr r0, [r3, 0x18]",
            "add r0, r0, r8",
            "bl sym.imp.memset",
            "ldr r1, [sp, 0x10]",
            "ldr r0, [sp, 0x34]",
            "ldr r3, [sp, 0x38]",
            "ldr sl, [sp, 0x64]",
            "cmp r1, 0",
            "cmpne r6, r0",
            "mov r0, r5",
            "movge r2, 0",
            "movlt r2, 1",
            "addlt r2, r1, r6, lsl 2",
            "add r3, r3, sl",
            "mov r1, r7",
            "str r3, [sp, 0x38]",
            "bl fcn.0006b848",
            "ldr r3, [r5, 0x1a8]",
            "ldr fp, [sp, 0x40]",
            "add r3, r3, 1",
            "add fp, fp, 1",
            "str r3, [r5, 0x1a8]",
            "str fp, [sp, 0x40]",
            "b 0x702d0",
            "ldr r6, [sp, 0x28]",
            "add fp, sp, 0x178",
            "mov r1, 0",
            "mov r2, 0x48",
            "mov r0, fp",
            "bl sym.imp.memset",
            "mov r0, fp",
            "mov r5, 0",
            "bl sym.imp.av_init_packet",
            "ldr r3, [0x00070d90]",
            "mvn ip, 0",
            "str ip, [sp, 0x20]",
            "mov r8, r5",
            "add sl, sp, 0x78",
            "mov r7, r6",
            "add r3, r6, r3",
            "str r3, [sp, 0x18]",
            "ldr r3, [0x00070d94]",
            "add r3, r6, r3",
            "str r3, [sp, 0x28]",
            "b 0x70a58",
            "ldr r3, [r4, 0x18]",
            "ldr r0, [sp, 0x10]",
            "ldr r6, [r3, r5]",
            "add sb, r0, r5",
            "ldr r1, [sp, 0x34]",
            "mov r0, r6",
            "ldr r3, [sp, 0x10]",
            "cmp r3, 0",
            "cmpne r8, r1",
            "mov r1, fp",
            "movge r2, 0",
            "movlt r2, 1",
            "movlt r2, sb",
            "bl fcn.0006b848",
            "cmp r0, 0",
            "ble 0x709f8",
            "ldr r0, [r6, 8]",
            "bl fcn.0006aee8",
            "cmp r0, 0",
            "beq 0x709b4",
            "b 0x70a10",
            "beq 0x70a10",
            "mov r0, r4",
            "mov r1, 0x18",
            "ldr r2, [sp, 0x18]",
            "ldr r3, [r6]",
            "bl sym.imp.av_log",
            "ldr r6, [r6, 8]",
            "mov r0, r6",
            "bl fcn.0006aee8",
            "subs r3, r0, 0",
            "movne ip, 0",
            "strne ip, [sp, 0x20]",
            "bne 0x70a50",
            "mov r0, sl",
            "mov r1, 0x100",
            "mov r2, r6",
            "bl sym.imp.avcodec_string",
            "mov r0, r4",
            "mov r1, 0x18",
            "ldr r2, [sp, 0x28]",
            "mov r3, sl",
            "bl sym.imp.av_log",
            "add r8, r8, 1",
            "add r5, r5, 4",
            "ldr r3, [r4, 0x14]",
            "cmp r8, r3",
            "blo 0x709a4",
            "mov r6, r7",
            "mov r5, 0",
            "b 0x70a84",
            "ldr r3, [r4, 0x18]",
            "ldr r3, [r3, r5, lsl 2]",
            "add r5, r5, 1",
            "ldr r0, [r3, 8]",
            "bl sym.imp.avcodec_close",
            "ldr r3, [r4, 0x14]",
            "cmp r5, r3",
            "blo 0x70a70",
            "ldr r3, [0x00070d98]",
            "mov r0, 0",
            "str r0, [sp, 0x10]",
            "str r6, [sp, 0x34]",
            "add r3, r6, r3",
            "str r3, [sp, 0x40]",
            "b 0x710d4",
            "ldr r3, [r4, 0x18]",
            "ldr r1, [sp, 0x10]",
            "ldr r5, [r3, r1, lsl 2]",
            "ldr r2, [r5, 0x1a8]",
            "cmp r2, 2",
            "ble 0x70b34",
            "ldr r3, [r5, 0x1a0]",
            "cmp r3, 0",
            "bne 0x70b34",
            "ldr r3, [r5, 0x1c0]",
            "movw r1, 0x5ab8",
            "ldr r1, [r3, r1]",
            "add r3, r3, 0x5a00",
            "add r3, r3, 0xb8",
            "ldr ip, [r3, 4]",
            "orrs r3, r1, ip",
            "beq 0x70b34",
            "ldr r0, [r5, 0x38]",
            "sub r2, r2, 2",
            "ldr r3, [r5, 0x3c]",
            "smull r2, r3, r2, r3",
            "mov r6, r0",
            "asr r7, r6, 0x1f",
            "mul ip, r0, ip",
            "mla ip, r1, r7, ip",
            "umull r0, r1, r0, r1",
            "add r1, ip, r1",
            "strd r0, r1, [sp]",
            "movw r0, 0xea60",
            "mov r1, 0",
            "strd r0, r1, [sp, 8]",
            "add r0, r5, 0x1a0",
            "add r1, r5, 0x1a4",
            "bl sym.imp.av_reduce",
            "ldr r6, [r5, 8]",
            "ldr r3, [r6, 0xd0]",
            "cmp r3, 0",
            "bne 0x71048",
            "ldr r3, [r6, 0xd4]",
            "cmp r3, 0xe",
            "bne 0x70b98",
            "ldr r3, [r6, 0xd8]",
            "cmp r3, 0",
            "bne 0x70b98",
            "ldr r3, [r6, 0x174]",
            "cmp r3, 0",
            "bne 0x70b98",
            "ldr r0, [r6, 0x34]",
            "bl sym.imp.avcodec_pix_fmt_to_codec_tag",
            "ldr r3, [0x00070d9c]",
            "mov r6, r0",
            "ldr sl, [sp, 0x34]",
            "mov r1, r6",
            "ldr r0, [sl, r3]",
            "bl sym.imp.ff_find_pix_fmt",
            "ldr r3, [r5, 8]",
            "ldr r2, [r3, 0x34]",
            "cmp r0, r2",
            "streq r6, [r3, 0xd8]",
            "ldr r0, [r5, 8]",
            "bl fcn.0006b050",
            "cmp r0, 0",
            "beq 0x70c64",
            "ldr r3, [r5, 0x1c0]",
            "ldr r2, [r3, 0x10]",
            "cmp r2, 0xf",
            "ble 0x70c64",
            "ldr r7, [r3, 8]",
            "ldr r8, [r3, 0xc]",
            "ldr r3, [r5, 0x3c]",
            "ldr r6, [r5, 0x38]",
            "mov r0, r3",
            "asr r1, r0, 0x1f",
            "strd r0, r1, [sp, 0x18]",
            "mov sl, r6",
            "asr fp, sl, 0x1f",
            "mov r1, 0x1f4",
            "umull r2, r3, r6, r1",
            "mla r3, r1, fp, r3",
            "ldrd r0, r1, [sp, 0x18]",
            "bl fcn.0007ded0",
            "cmp r1, 0",
            "mov r2, r0",
            "mov r3, r1",
            "bgt 0x70c14",
            "bne 0x70c0c",
            "cmp r0, 0",
            "bne 0x70c14",
            "mov r2, 1",
            "mov r3, 0",
            "cmp r8, r3",
            "bgt 0x70c28",
            "bne 0x70c64",
            "cmp r7, r2",
            "bls 0x70c64",
            "ldr r3, [r5, 0xc]",
            "cmp r3, 0",
            "bne 0x70c64",
            "mul r8, r6, r8",
            "mvn r2, 0x80000000",
            "mov r3, 0",
            "add r0, r5, 0xc",
            "strd r2, r3, [sp, 8]",
            "add r1, r5, 0x10",
            "ldrd r2, r3, [sp, 0x18]",
            "mla r8, r7, fp, r8",
            "umull r6, r7, r6, r7",
            "add r7, r8, r7",
            "strd r6, r7, [sp]",
            "bl sym.imp.av_reduce",
            "ldr r3, [r5, 0x1c0]",
            "ldr r3, [r3, 0x10]",
            "cmp r3, 0",
            "beq 0x70fec",
            "ldr r8, [r5, 0xc]",
            "cmp r8, 0",
            "bne 0x70fec",
            "ldr r0, [r5, 8]",
            "bl fcn.0006b050",
            "cmp r0, 0",
            "beq 0x70fec",
            "ldr r2, [0x00070db0]",
            "mov r6, 1",
            "ldr r3, [0x00070da0]",
            "mov sb, r4",
            "strd r2, r3, [sp, 0x18]",
            "ldr r3, [r5, 0x1c0]",
            "movw r2, 0x5ab8",
            "ldr sl, [r3, r2]",
            "add r3, r3, 0x5a00",
            "add r3, r3, 0xb8",
            "ldr r7, [r3, 4]",
            "orrs r3, sl, r7",
            "beq 0x70de4",
            "mov r0, r6",
            "bl fcn.0006afec",
            "mov r1, r7",
            "mov r4, r0",
            "mov r0, sl",
            "bl fcn.0007d70c",
            "strd r0, r1, [sp, 0x28]",
            "ldr r0, [r5, 0x38]",
            "bl fcn.0007d690",
            "mov sl, r0",
            "mov fp, r1",
            "ldr r0, [r5, 0x3c]",
            "bl fcn.0007d690",
            "mov r2, r0",
            "mov r3, r1",
            "mov r0, sl",
            "mov r1, fp",
            "bl fcn.0007d9d8",
            "mov r2, r0",
            "mov r3, r1",
            "ldrd r0, r1, [sp, 0x28]",
            "bl fcn.0007d76c",
            "mov sl, r0",
            "mov r0, r4",
            "mov fp, r1",
            "bl fcn.0007d690",
            "mov r2, r0",
            "mov r3, r1",
            "mov r0, 0",
            "ldr r1, [0x00070dc0]",
            "bl fcn.0007d9d8",
            "mov r2, r0",
            "mov r3, r1",
            "mov r0, sl",
            "mov r1, fp",
            "bl fcn.0007dcb8",
            "cmp r0, 0",
            "moveq r4, 0",
            "beq 0x70e18",
            "b 0x70f28",
            "mov r0, r6",
            "bl fcn.0006afec",
            "bl fcn.0007d690",
            "mov r2, r0",
            "mov r3, r1",
            "mov r0, 0",
            "ldr r1, [0x00070dc0]",
            "bl fcn.0007d9d8",
            "mov r2, 0",
            "ldr r3, [0x00070da4]",
            "bl fcn.0007dcf4",
            "subs r4, r0, 0",
            "bne 0x70f28",
            "movw fp, 0x5aa",
            "ldr sl, [r5, 0x1c0]",
            "mla r7, fp, r4, r6",
            "ldr r0, [sl, 0x10]",
            "bl fcn.0007d690",
            "add r3, sl, r7, lsl 3",
            "add r7, r7, 0x2d8",
            "strd r0, r1, [sp, 0x28]",
            "lsl r7, r7, 3",
            "ldrd r0, r1, [r3, 0x18]",
            "ldrd r2, r3, [sp, 0x28]",
            "bl fcn.0007d9d8",
            "ldrd r2, r3, [sp, 0x28]",
            "strd r0, r1, [sp, 0x38]",
            "ldrd r0, r1, [sl, r7]",
            "bl fcn.0007d9d8",
            "mov sl, r0",
            "mov fp, r1",
            "ldrd r0, r1, [sp, 0x38]",
            "mov r2, r0",
            "mov r3, r1",
            "bl fcn.0007d76c",
            "mov r2, r0",
            "mov r3, r1",
            "mov r0, sl",
            "mov r1, fp",
            "bl fcn.0007d3bc",
            "ldrd r2, r3, [sp, 0x18]",
            "mov sl, r0",
            "mov fp, r1",
            "bl fcn.0007dcb8",
            "cmp r0, 0",
            "beq 0x70ec4",
            "ldrd r0, r1, [sp, 0x18]",
            "ldr r2, [0x00070da8]",
            "ldr r3, [0x00070dac]",
            "bl fcn.0007dcf4",
            "cmp r0, 0",
            "beq 0x70ec4",
            "mov r0, r6",
            "bl fcn.0006afec",
            "mov r8, r0",
            "strd sl, fp, [sp, 0x18]",
            "mov r0, sl",
            "mov r1, fp",
            "ldr r2, [0x00070db0]",
            "ldr r3, [0x00070db4]",
            "bl fcn.0007dcb8",
            "cmp r0, 0",
            "beq 0x70f1c",
            "mov r0, r6",
            "bl fcn.0006afec",
            "bl fcn.0007d690",
            "mov r2, 0",
            "ldr r3, [0x00070db8]",
            "bl fcn.0007d9d8",
            "mov r2, 0",
            "ldr r3, [0x00070dbc]",
            "bl fcn.0007d9d8",
            "ldr r2, [sp, 0x40]",
            "strd r0, r1, [sp]",
            "mov r0, 0",
            "mov r1, 0x30",
            "strd sl, fp, [sp, 8]",
            "bl sym.imp.av_log",
            "add r4, r4, 1",
            "cmp r4, 2",
            "bne 0x70e18",
            "add r6, r6, 1",
            "movw r3, 0x2d5",
            "cmp r6, r3",
            "bne 0x70ca4",
            "cmp r8, 0",
            "mov r4, sb",
            "beq 0x70fec",
            "ldr r6, [r5, 0xc]",
            "cmp r6, 0",
            "beq 0x70fc0",
            "mov r0, r8",
            "bl fcn.0007d690",
            "mov r2, 0",
            "ldr r3, [0x00070dc0]",
            "bl fcn.0007d9d8",
            "mov sl, r0",
            "mov r0, r6",
            "mov fp, r1",
            "bl fcn.0007d690",
            "mov r6, r0",
            "mov r7, r1",
            "ldr r0, [r5, 0x10]",
            "bl fcn.0007d690",
            "mov r2, r0",
            "mov r3, r1",
            "mov r0, r6",
            "mov r1, r7",
            "bl fcn.0007d9d8",
            "ldr r2, [0x00070dc4]",
            "ldr r3, [0x00070dc8]",
            "bl fcn.0007d76c",
            "mov r2, r0",
            "mov r3, r1",
            "mov r0, sl",
            "mov r1, fp",
            "bl fcn.0007dcb8",
            "cmp r0, 0",
            "beq 0x70fec",
            "movw r2, 0x2eec",
            "mov r3, 0",
            "strd r2, r3, [sp]",
            "mvn r2, 0x80000000",
            "mov r3, 0",
            "add r0, r5, 0xc",
            "strd r2, r3, [sp, 8]",
            "add r1, r5, 0x10",
            "mov r2, r8",
            "asr r3, r2, 0x1f",
            "bl sym.imp.av_reduce",
            "ldr r3, [r5, 0xc]",
            "cmp r3, 0",
            "bne 0x710c8",
            "ldr r3, [r5, 8]",
            "ldr ip, [r5, 0x38]",
            "ldr lr, [r5, 0x3c]",
            "ldr r2, [r3, 0x354]",
            "ldr r6, [r3, 0x20]",
            "ldr r7, [r3, 0x24]",
            "smull r0, r1, ip, r7",
            "mul r6, r6, r2",
            "smull r2, r3, r6, lr",
            "cmp r1, r3",
            "bgt 0x7103c",
            "bne 0x71030",
            "cmp r0, r2",
            "bhi 0x7103c",
            "str r7, [r5, 0xc]",
            "str r6, [r5, 0x10]",
            "b 0x710c8",
            "str lr, [r5, 0xc]",
            "str ip, [r5, 0x10]",
            "b 0x710c8",
            "cmp r3, 1",
            "bne 0x710c8",
            "ldr r3, [r6, 0x174]",
            "cmp r3, 0",
            "bne 0x71068",
            "ldr r0, [r6, 0xd4]",
            "bl sym.imp.av_get_bits_per_sample",
            "str r0, [r6, 0x174]",
            "ldr r3, [r5, 8]",
            "ldr r3, [r3, 0x3c8]",
            "sub r3, r3, 1",
            "cmp r3, 7",
            "addls pc, pc, r3, lsl 2",
            "b 0x710c8",
            "b 0x710a0",
            "b 0x710a8",
            "b 0x710b0",
            "b 0x710c8",
            "b 0x710b8",
            "b 0x710c8",
            "b 0x710c8",
            "b 0x710c0",
            "mov r3, 0x200",
            "b 0x710c4",
            "mov r3, 0x100",
            "b 0x710c4",
            "mov r3, 0x80",
            "b 0x710c4",
            "mov r3, 8",
            "b 0x710c4",
            "mov r3, 0x20",
            "str r3, [r5, 0x98]",
            "ldr ip, [sp, 0x10]",
            "add ip, ip, 1",
            "str ip, [sp, 0x10]",
            "ldr r3, [r4, 0x14]",
            "ldr r0, [sp, 0x10]",
            "cmp r0, r3",
            "blo 0x70aac",
            "ldr r3, [r4, 4]",
            "ldr r6, [sp, 0x34]",
            "ldr r3, [r3, 0x24]",
            "tst r3, 1",
            "bne 0x71110",
            "ldr r0, [r4, 0x10]",
            "bl sym.avio_size",
            "cmp r1, 0",
            "mov r8, r0",
            "mov sb, r1",
            "bge 0x71118",
            "mov r8, 0",
            "mov sb, 0",
            "ldr r3, [r4, 4]",
            "ldr r1, [0x00070dcc]",
            "ldr r5, [r3]",
            "add r1, r6, r1",
            "mov r0, r5",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x71150",
            "ldr r1, [0x00070dd0]",
            "mov r0, r5",
            "add r1, r6, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x71460",
            "orrs r1, r8, sb",
            "beq 0x71460",
            "ldr r3, [r4, 0x10]",
            "ldr r3, [r3, 0x54]",
            "cmp r3, 0",
            "beq 0x71460",
            "ldr sl, [0x00070dd4]",
            "mov r7, 0",
            "str r7, [r4, 0x44c]",
            "mov r0, r4",
            "bl fcn.0006b3dc",
            "add sl, r6, sl",
            "mov r8, r7",
            "b 0x711f0",
            "ldr r3, [r4, 0x18]",
            "ldr r5, [r3, r7, lsl 2]",
            "ldr r3, [r5, 0x50]",
            "cmp r3, 0",
            "bne 0x711d0",
            "ldr r3, [r5, 0x54]",
            "cmp r3, 0x80000000",
            "bne 0x711d0",
            "ldr r3, [r5, 0x18]",
            "cmp r3, 0",
            "bne 0x711d0",
            "ldr r3, [r5, 0x1c]",
            "cmp r3, 0x80000000",
            "bne 0x711d0",
            "ldr r0, [r5, 8]",
            "mov r1, 0x18",
            "mov r2, sl",
            "bl sym.imp.av_log",
            "ldr r0, [r5, 0x64]",
            "cmp r0, 0",
            "beq 0x711ec",
            "bl sym.imp.av_parser_close",
            "str r8, [r5, 0x64]",
            "add r0, r5, 0x148",
            "bl sym.imp.av_free_packet",
            "add r7, r7, 1",
            "ldr r3, [r4, 0x14]",
            "cmp r7, r3",
            "blo 0x71188",
            "ldr r0, [r4, 0x10]",
            "cmp r0, 0",
            "beq 0x71214",
            "bl sym.avio_size",
            "strd r0, r1, [sp, 0x18]",
            "b 0x71220",
            "mov r2, 0",
            "mov r3, 0",
            "strd r2, r3, [sp, 0x18]",
            "mov r5, 0",
            "add r3, sp, 0x178",
            "str r3, [sp, 0x38]",
            "str r6, [sp, 0x44]",
            "ldr sl, fcn.0003d090",
            "mov r8, r5",
            "ldrd r2, r3, [sp, 0x18]",
            "ldr fp, fcn.0003d090",
            "lsl sl, sl, r5",
            "mov r0, sl",
            "asr r1, r0, 0x1f",
            "str sl, [sp, 0x34]",
            "subs r2, r2, r0",
            "sbc r3, r3, r1",
            "mov sl, 0",
            "cmp r3, 0",
            "str sl, [sp]",
            "strd r0, r1, [sp, 0x28]",
            "movlt r2, 0",
            "movlt r3, 0",
            "ldr r0, [r4, 0x10]",
            "bl sym.avio_seek",
            "sub r3, r5, 1",
            "mov r2, 0",
            "lsl r3, fp, r3",
            "mov sb, sl",
            "mov sl, r2",
            "str r3, [sp, 0x40]",
            "mov r3, 0x80000000",
            "mov fp, r3",
            "ldr ip, fcn.0003d090",
            "cmp r8, 1",
            "ldr r3, [sp, 0x40]",
            "movle r3, ip",
            "cmp sb, r3",
            "bge 0x713c0",
            "mov r0, r4",
            "ldr r1, [sp, 0x38]",
            "bl sym.av_read_packet",
            "cmn r0, 0xb",
            "beq 0x712b0",
            "cmp r0, 0",
            "bne 0x713c0",
            "ldr r3, [sp, 0x18c]",
            "add r1, sp, 0x180",
            "ldrd r0, r1, [r1, -8]",
            "ldr r2, [sp, 0x190]",
            "add sb, sb, r3",
            "ldr r3, [r4, 0x18]",
            "cmp r0, 0",
            "ldr r5, [r3, r2, lsl 2]",
            "strd r0, r1, [sp, 0x10]",
            "bne 0x712fc",
            "cmp r1, 0x80000000",
            "beq 0x713ac",
            "ldrd r6, r7, [r5, 0x50]",
            "cmp r6, 0",
            "bne 0x71328",
            "cmp r7, 0x80000000",
            "bne 0x71328",
            "ldrd r6, r7, [r5, 0x18]",
            "cmp r6, 0",
            "bne 0x71338",
            "cmp r7, 0x80000000",
            "bne 0x71338",
            "b 0x713ac",
            "ldrd r2, r3, [sp, 0x10]",
            "subs r6, r2, r6",
            "sbc r7, r3, r7",
            "b 0x71344",
            "ldrd sl, fp, [sp, 0x10]",
            "subs r6, sl, r6",
            "sbc r7, fp, r7",
            "cmp r7, 0",
            "bge 0x71364",
            "mov r0, 1",
            "mov r1, 0",
            "ldr r2, [r5, 0x40]",
            "bl fcn.0007d398",
            "adds r6, r6, r0",
            "adc r7, r7, r1",
            "cmp r7, 0",
            "bgt 0x71378",
            "bne 0x713b0",
            "cmp r6, 0",
            "beq 0x713b0",
            "ldr r3, [r5, 0x58]",
            "ldr r2, [r5, 0x5c]",
            "cmp r3, 0",
            "bne 0x71390",
            "cmp r2, 0x80000000",
            "beq 0x713a4",
            "cmp r7, r2",
            "bgt 0x713a4",
            "bne 0x713b0",
            "cmp r6, r3",
            "bls 0x713b0",
            "strd r6, r7, [r5, 0x58]",
            "b 0x713b0",
            "strd sl, fp, [sp, 0x10]",
            "ldr r0, [sp, 0x38]",
            "bl sym.imp.av_free_packet",
            "ldrd sl, fp, [sp, 0x10]",
            "b 0x71298",
            "cmp sl, 0",
            "mov r5, r8",
            "bne 0x71404",
            "cmp fp, 0x80000000",
            "bne 0x71404",
            "ldr fp, [sp, 0x1c]",
            "ldr ip, [sp, 0x2c]",
            "cmp fp, ip",
            "bgt 0x713f8",
            "bne 0x71404",
            "ldr r0, [sp, 0x18]",
            "ldr r1, [sp, 0x34]",
            "cmp r0, r1",
            "bls 0x71404",
            "add r5, r5, 1",
            "cmp r5, 4",
            "bne 0x71230",
            "mov r0, r4",
            "mov r5, 0",
            "ldr r6, [sp, 0x44]",
            "bl fcn.0006be04",
            "ldrd r2, r3, [sp, 0x58]",
            "str r5, [sp]",
            "ldr r0, [r4, 0x10]",
            "bl sym.avio_seek",
            "ldr r7, [r4, 0x14]",
            "mov r2, 0",
            "mov r3, 0x80000000",
            "mov lr, 0x190",
            "b 0x71454",
            "ldr r1, [r4, 0x18]",
            "ldr ip, [r1, r5, lsl 2]",
            "add r5, r5, 1",
            "ldrd r0, r1, [ip, 0x18]",
            "strd r2, r3, [ip, 0x78]",
            "strd r2, r3, [ip, lr]",
            "strd r0, r1, [ip, 0x68]",
            "cmp r5, r7",
            "bne 0x71438",
            "b 0x71594",
            "ldr r3, [r4, 0x438]",
            "cmp r3, 0",
            "bne 0x714b0",
            "ldr r2, [r4, 0x43c]",
            "cmp r2, 0x80000000",
            "ldreq r1, [r4, 0x14]",
            "bne 0x714b0",
            "b 0x714a4",
            "ldr r2, [r4, 0x18]",
            "ldr r2, [r2, r3, lsl 2]",
            "ldr r0, [r2, 0x58]",
            "cmp r0, 0",
            "bne 0x714b0",
            "ldr r2, [r2, 0x5c]",
            "cmp r2, 0x80000000",
            "bne 0x714b0",
            "add r3, r3, 1",
            "cmp r3, r1",
            "blo 0x71480",
            "b 0x71778",
            "mov r0, r4",
            "bl fcn.0006be04",
            "b 0x71594",
            "ldr r1, [r4, 0x18]",
            "ldr r1, [r1, r3, lsl 2]",
            "add r3, r3, 1",
            "ldr r1, [r1, 8]",
            "ldr r1, [r1, 4]",
            "cmp r1, 0",
            "addgt r2, r2, r1",
            "cmp r3, r0",
            "bne 0x714bc",
            "str r2, [r4, 0x448]",
            "ldr r3, [r4, 0x438]",
            "cmp r3, 0",
            "bne 0x71594",
            "ldr r3, [r4, 0x43c]",
            "cmp r3, 0x80000000",
            "bne 0x71594",
            "ldr r3, [r4, 0x448]",
            "cmp r3, 0",
            "beq 0x71594",
            "ldr r0, [r4, 0x10]",
            "cmp r0, 0",
            "beq 0x71594",
            "bl sym.avio_size",
            "cmp r1, 0",
            "bgt 0x7152c",
            "bne 0x71594",
            "cmp r0, 0",
            "beq 0x71594",
            "lsl r8, r1, 3",
            "lsl sl, r0, 3",
            "ldr sb, [r4, 0x14]",
            "orr r8, r8, r0, lsr 29",
            "mov r7, 0",
            "b 0x7158c",
            "ldr r3, [r4, 0x18]",
            "ldr r5, [r3, r7, lsl 2]",
            "ldr r3, [r4, 0x448]",
            "ldr r2, [r5, 0x3c]",
            "ldr r0, [r5, 0x38]",
            "smull r0, r1, r0, r3",
            "strd r0, r1, [sp]",
            "mov r0, sl",
            "asr r3, r2, 0x1f",
            "mov r1, r8",
            "bl sym.imp.av_rescale",
            "ldr r3, [r5, 0x58]",
            "cmp r3, 0",
            "bne 0x71588",
            "ldr r3, [r5, 0x5c]",
            "cmp r3, 0x80000000",
            "strdeq r0, r1, [r5, 0x58]",
            "add r7, r7, 1",
            "cmp r7, sb",
            "bne 0x71544",
            "mov r0, r4",
            "bl fcn.0006ba64",
            "movw r3, 0x438",
            "ldr r5, [r4, r3]",
            "add r3, r4, r3",
            "add r3, r3, 4",
            "ldr ip, [r3]",
            "mov r3, 0x430",
            "ldrd r2, r3, [r3, r4]",
            "cmp r2, 0",
            "bne 0x715cc",
            "cmp r3, 0x80000000",
            "moveq r2, 0",
            "moveq r3, 0",
            "adds r0, r5, r2",
            "mov r7, 0",
            "adc r1, ip, r3",
            "ldr r3, [0x00070ddc]",
            "orr r2, r0, r1",
            "strd r0, r1, [sp, 0x10]",
            "str r2, [sp, 0x28]",
            "add r3, r6, r3",
            "str r3, [sp, 0x34]",
            "b 0x7171c",
            "ldr r6, [r4, 0x4a4]",
            "ldr r5, [r6, r7, lsl 2]",
            "ldr r3, [r5, 0x18]",
            "cmp r3, 0",
            "bne 0x71718",
            "ldr r3, [r5, 0x1c]",
            "cmp r3, 0x80000000",
            "bne 0x71718",
            "ldr r3, [sp, 0x28]",
            "cmp r3, 0",
            "mvneq r8, 0",
            "mvneq sb, 0x80000000",
            "beq 0x71660",
            "ldr sl, [sp, 0x34]",
            "add r3, sp, 0x20c",
            "mov ip, sp",
            "add r2, sl, 0xc8",
            "ldm r2, {r0, r1}",
            "add r2, r5, 4",
            "stm r3, {r0, r1}",
            "ldm r2, {r0, r1}",
            "stm ip, {r0, r1}",
            "ldrd r0, r1, [sp, 0x10]",
            "ldm r3, {r2, r3}",
            "bl sym.imp.av_rescale_q",
            "mov r8, r0",
            "mov sb, r1",
            "mov sl, r6",
            "mov r6, 0",
            "b 0x716fc",
            "ldr r3, [sl], 4",
            "add r2, r5, 4",
            "ldrd r0, r1, [r3, 0x10]",
            "add r3, r3, 4",
            "strd r0, r1, [sp, 0x18]",
            "ldm r2, {r0, r1}",
            "mov r2, sp",
            "stm r2, {r0, r1}",
            "ldrd r0, r1, [sp, 0x18]",
            "ldm r3, {r2, r3}",
            "bl sym.imp.av_rescale_q",
            "cmp r6, r7",
            "beq 0x716f8",
            "cmp sb, r1",
            "mov r2, 1",
            "bgt 0x716bc",
            "bne 0x716b8",
            "cmp r8, r0",
            "bhi 0x716bc",
            "mov r2, 0",
            "ldr ip, [r5, 0x14]",
            "mov r3, 1",
            "cmp ip, r1",
            "blt 0x716e0",
            "bne 0x716dc",
            "ldr ip, [r5, 0x10]",
            "cmp ip, r0",
            "blo 0x716e0",
            "mov r3, 0",
            "and r3, r2, r3",
            "tst r3, 0xff",
            "movne r2, r0",
            "movne r3, r1",
            "movne r8, r2",
            "movne sb, r3",
            "add r6, r6, 1",
            "cmp r6, fp",
            "blo 0x7166c",
            "cmn r8, 1",
            "bne 0x71714",
            "cmn sb, 0x80000001",
            "ldrdeq r8, sb, [r5, 0x10]",
            "strd r8, sb, [r5, 0x18]",
            "add r7, r7, 1",
            "ldr fp, [r4, 0x4a0]",
            "cmp r7, fp",
            "blo 0x715f4",
            "mov r5, 0",
            "mov r6, r5",
            "b 0x71754",
            "ldr r3, [r4, 0x18]",
            "ldr r0, [r3, r5, lsl 2]",
            "add r5, r5, 1",
            "ldr r3, [r0, 8]",
            "add r0, r0, 0x1c0",
            "cmp r3, 0",
            "strne r6, [r3, 0x24c]",
            "bl sym.imp.av_freep",
            "ldr r3, [r4, 0x14]",
            "cmp r5, r3",
            "blo 0x71734",
            "b 0x7176c",
            "mvn r3, 0xb",
            "str r3, [sp, 0x20]",
            "ldr r0, [sp, 0x20]",
            "add sp, sp, 0x244",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r2, [0x00070de0]",
            "mov r0, r4",
            "mov r1, 0x18",
            "add r2, r6, r2",
            "bl sym.imp.av_log",
            "ldr r3, [r4, 0x448]",
            "cmp r3, 0",
            "movle r3, 0",
            "ldrle r0, [r4, 0x14]",
            "movle r2, r3",
            "bgt 0x714e4",
            "b 0x714d8"
        ]
    },
    "sym.imp.av_parser_init": {
        "function_address": "0x0000a098",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x678]!"
        ]
    },
    "sym.imp.avcodec_find_decoder": {
        "function_address": "0x00009888",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0xbd8]!"
        ]
    },
    "sym.imp.av_dict_set": {
        "function_address": "0x0000a0f8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x638]!"
        ]
    },
    "sym.imp.avcodec_open2": {
        "function_address": "0x00009930",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0xb68]!"
        ]
    },
    "fcn.0006aee8": {
        "function_address": "0x0006aee8",
        "instructions": [
            "ldr r3, [r0, 0xd0]",
            "push {r4, lr}",
            "cmp r3, 1",
            "beq 0x6af0c",
            "cmp r3, 2",
            "beq 0x6afac",
            "cmp r3, 0",
            "beq 0x6af90",
            "b 0x6afb8",
            "ldr r2, [r0, 0x3c]",
            "cmp r2, 0",
            "beq 0x6af30",
            "ldr r2, [r0, 0x40]",
            "cmp r2, 0",
            "beq 0x6af30",
            "ldr r2, [r0, 0x44]",
            "adds r2, r2, 1",
            "movne r2, 1",
            "ldr ip, [r0, 0x48]",
            "cmp ip, 0",
            "bne 0x6afbc",
            "ldr r3, [r0, 0xd4]",
            "ldr r1, [0x0006afe0]",
            "ldr r4, [0x0006afe4]",
            "cmp r3, r1",
            "cmpne r3, r4",
            "movne r1, 0",
            "moveq r1, 1",
            "moveq r0, ip",
            "popeq {r4, pc}",
            "ldr ip, [0x0006afe8]",
            "cmp r3, ip",
            "beq 0x6afd0",
            "cmp r3, 0x15000",
            "beq 0x6afd0",
            "sub ip, ip, 0x2c",
            "cmp r3, ip",
            "beq 0x6afd0",
            "add ip, ip, 0x35",
            "cmp r3, ip",
            "bne 0x6afbc",
            "b 0x6afd0",
            "ldr r2, [r0, 0x28]",
            "cmp r2, 0",
            "beq 0x6afbc",
            "ldr r2, [r0, 0x34]",
            "adds r2, r2, 1",
            "movne r2, 1",
            "b 0x6afbc",
            "ldr r3, [r0, 0xd4]",
            "cmp r3, 0",
            "beq 0x6afd8",
            "mov r2, 1",
            "ldr r0, [r0, 0xd4]",
            "cmp r0, 0",
            "moveq r0, 0",
            "andne r0, r2, 1",
            "pop {r4, pc}",
            "mov r0, r1",
            "pop {r4, pc}",
            "mov r0, 1",
            "pop {r4, pc}"
        ]
    },
    "sym.imp.av_dict_free": {
        "function_address": "0x00009da4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x870]!"
        ]
    },
    "fcn.00018de8": {
        "function_address": "0x00018de8",
        "instructions": [
            "push {r4, lr}",
            "cmp r0, 0",
            "ldr r4, [0x00018e2c]",
            "add r4, pc, r4",
            "beq 0x18e18",
            "ldr r3, [r0]",
            "cmp r3, 0",
            "beq 0x18e18",
            "ldr r0, [r0, 4]",
            "blx r3",
            "cmp r0, 0",
            "popne {r4, pc}",
            "ldr r3, [0x00018e30]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3]",
            "blx r3",
            "pop {r4, pc}"
        ]
    },
    "fcn.0007dcf4": {
        "function_address": "0x0007dcf4",
        "instructions": [
            "str lr, [sp, -8]!",
            "bl fcn.0007dc74",
            "movlo r0, 1",
            "movhs r0, 0",
            "ldr pc, [sp], 8"
        ]
    },
    "fcn.0006b050": {
        "function_address": "0x0006b050",
        "instructions": [
            "ldr r3, [r0, 0x20]",
            "mov r1, 0x65",
            "ldr r2, [r0, 0x24]",
            "mul r1, r1, r3",
            "cmp r2, r1",
            "bge 0x6b090",
            "add r3, r3, r3, lsl 2",
            "cmp r2, r3",
            "blt 0x6b090",
            "ldr r0, [r0, 0xd4]",
            "cmp r0, 2",
            "beq 0x6b098",
            "cmp r0, 0x1c",
            "movne r0, 0",
            "moveq r0, 1",
            "bx lr",
            "mov r0, 1",
            "bx lr",
            "mov r0, 1",
            "bx lr"
        ]
    },
    "fcn.0006ebc0": {
        "function_address": "0x0006ebc0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r6, r0",
            "sub sp, sp, 0x7c",
            "ldr r8, [0x0006f134]",
            "mov r0, r1",
            "mov r4, r1",
            "bl sym.imp.av_init_packet",
            "ldr r3, [0x0006f138]",
            "add r8, pc, r8",
            "mov fp, 0",
            "add sb, sp, 0x30",
            "mov r7, r4",
            "mov sl, r8",
            "add r3, r8, r3",
            "str r3, [sp, 0x24]",
            "ldr r3, [0x0006f13c]",
            "add r3, r8, r3",
            "str r3, [sp, 0x28]",
            "ldr r3, [0x0006f140]",
            "add r3, r8, r3",
            "str r3, [sp, 0x2c]",
            "ldr r5, [r6, 0x44c]",
            "cmp r5, 0",
            "beq 0x6ee9c",
            "ldr r3, [r5, 0x60]",
            "cmp r3, 0",
            "beq 0x6ec38",
            "ldr r0, [r5, 0x64]",
            "cmp r0, 0",
            "bne 0x6ece0",
            "mov r4, r7",
            "mov r0, r7",
            "add r1, r5, 0x148",
            "mov r7, 0",
            "mov r2, 0x48",
            "mov r8, sl",
            "bl sym.imp.memcpy",
            "mov r3, r4",
            "str r7, [r5, 0x158]",
            "str r7, [r5, 0x16c]",
            "mov r0, r6",
            "str r7, [r5, 0x168]",
            "mov r1, r5",
            "mov r2, r7",
            "bl fcn.0006c878",
            "ldr r3, [r6, 4]",
            "str r7, [r6, 0x44c]",
            "ldr r3, [r3, 0x24]",
            "tst r3, 0x100",
            "beq 0x6f0d8",
            "ldr r3, [r4, 0x1c]",
            "tst r3, 1",
            "beq 0x6f0d8",
            "ldr r3, [r4, 8]",
            "cmp r3, r7",
            "bne 0x6ecac",
            "ldr r3, [r4, 0xc]",
            "cmp r3, 0x80000000",
            "beq 0x6f0d8",
            "mov r0, r6",
            "ldr r1, [r5]",
            "bl fcn.0006e82c",
            "ldrd r0, r1, [r4, 8]",
            "ldrd r2, r3, [r4, 0x38]",
            "strd r0, r1, [sp]",
            "mov r1, 0",
            "str r1, [sp, 8]",
            "mov r0, r5",
            "str r1, [sp, 0xc]",
            "add r1, r1, 1",
            "str r1, [sp, 0x10]",
            "b 0x6ee84",
            "ldr r3, [r5, 0x140]",
            "cmp r3, 0",
            "ble 0x6ee8c",
            "ldr r2, [r5, 0x48]",
            "cmp r2, 0x2f",
            "bgt 0x6ee8c",
            "ldr r2, [r5, 0x13c]",
            "mov r4, 0x148",
            "str r3, [sp, 4]",
            "mov r8, 0x150",
            "str r2, [sp]",
            "ldrd r2, r3, [r5, r4]",
            "strd r2, r3, [sp, 8]",
            "ldrd r2, r3, [r5, r8]",
            "strd r2, r3, [sp, 0x10]",
            "mov r3, 0x180",
            "ldrd r2, r3, [r3, r5]",
            "strd r2, r3, [sp, 0x18]",
            "add r2, r7, 0x10",
            "add r3, r7, 0x14",
            "ldr r1, [r5, 8]",
            "bl sym.imp.av_parser_parse2",
            "mov r3, 0x80000000",
            "mov r2, 0",
            "strd r2, r3, [r5, r4]",
            "strd r2, r3, [r5, r8]",
            "ldr r3, [r5, 0x13c]",
            "add r3, r3, r0",
            "str r3, [r5, 0x13c]",
            "ldr r3, [r5, 0x140]",
            "rsb r0, r0, r3",
            "ldr r3, [r7, 0x14]",
            "str r0, [r5, 0x140]",
            "cmp r3, 0",
            "beq 0x6ec14",
            "mov r4, r7",
            "ldr r2, [r5]",
            "mov r3, 0",
            "mov r8, sl",
            "str r3, [r4, 0x28]",
            "str r2, [r4, 0x18]",
            "ldr r2, [r5, 0x64]",
            "ldrd r0, r1, [r2, 0x28]",
            "strd r0, r1, [r4]",
            "ldrd r0, r1, [r2, 0x30]",
            "strd r0, r1, [r4, 8]",
            "mov r1, 0x120",
            "ldrd r0, r1, [r1, r2]",
            "strd r0, r1, [r4, 0x38]",
            "ldr r0, [r4, 0x10]",
            "ldr r1, [r5, 0x158]",
            "cmp r0, r1",
            "bne 0x6ee08",
            "ldr r0, [r4, 0x14]",
            "ldr r1, [r5, 0x15c]",
            "cmp r0, r1",
            "bne 0x6ee08",
            "ldr r1, [r5, 0x174]",
            "str r3, [r6, 0x44c]",
            "str r3, [r5, 0x158]",
            "str r1, [r4, 0x2c]",
            "str r3, [r5, 0x174]",
            "ldr r3, [r5, 0x140]",
            "cmp r3, 0",
            "beq 0x6ee10",
            "ldr r3, [0x0006f144]",
            "movw r2, 0x4c8",
            "ldr r0, [0x0006f148]",
            "ldr r1, [0x0006f14c]",
            "add r3, sl, r3",
            "add r0, sl, r0",
            "add r3, r3, 0x60",
            "add r1, sl, r1",
            "bl sym.imp.__assert",
            "mov r3, 0",
            "str r3, [r4, 0x2c]",
            "mov r3, r4",
            "mov r0, r6",
            "mov r1, r5",
            "bl fcn.0006c878",
            "ldr r3, [r6, 4]",
            "ldr r3, [r3, 0x24]",
            "tst r3, 0x100",
            "beq 0x6f0d8",
            "ldr r3, [r4, 0x1c]",
            "tst r3, 1",
            "beq 0x6f0d8",
            "ldr r3, [r5, 0x64]",
            "ldr r2, [r3, 0xb0]",
            "tst r2, 1",
            "ldrdne sl, fp, [r4, 0x38]",
            "ldrdeq sl, fp, [r3, 8]",
            "mov r0, r6",
            "ldr r1, [r5]",
            "bl fcn.0006e82c",
            "ldrd r2, r3, [r4, 8]",
            "mov r0, r5",
            "strd r2, r3, [sp]",
            "mov r3, 0",
            "str r3, [sp, 8]",
            "mov r2, sl",
            "str r3, [sp, 0xc]",
            "add r3, r3, 1",
            "str r3, [sp, 0x10]",
            "mov r3, fp",
            "bl sym.av_add_index_entry",
            "b 0x6f0d8",
            "add r0, r5, 0x148",
            "bl sym.imp.av_free_packet",
            "str fp, [r6, 0x44c]",
            "b 0x6ec14",
            "mov r0, r6",
            "mov r1, sb",
            "bl sym.av_read_packet",
            "cmp r0, 0",
            "bge 0x6ef54",
            "cmn r0, 0xb",
            "mov r8, sl",
            "mov r4, r7",
            "mov sl, r0",
            "beq 0x6f128",
            "add ip, r4, 0x14",
            "mov sl, r8",
            "mov r7, r5",
            "add fp, r4, 0x10",
            "mov sb, r5",
            "str r0, [sp, 0x24]",
            "mov r8, ip",
            "b 0x6ef40",
            "ldr r3, [r6, 0x18]",
            "ldr r5, [r3, r7, lsl 2]",
            "ldr r0, [r5, 0x64]",
            "cmp r0, 0",
            "beq 0x6ef3c",
            "ldr r3, [r5, 0x60]",
            "cmp r3, 0",
            "beq 0x6ef3c",
            "mov r2, 0",
            "mov r3, 0x80000000",
            "strd r2, r3, [sp, 8]",
            "strd r2, r3, [sp, 0x10]",
            "strd r2, r3, [sp, 0x18]",
            "mov r3, r8",
            "str sb, [sp]",
            "mov r2, fp",
            "str sb, [sp, 4]",
            "ldr r1, [r5, 8]",
            "bl sym.imp.av_parser_parse2",
            "ldr r3, [r4, 0x14]",
            "cmp r3, 0",
            "bne 0x6ed70",
            "add r7, r7, 1",
            "ldr r3, [r6, 0x14]",
            "cmp r7, r3",
            "blo 0x6eee4",
            "ldr sl, [sp, 0x24]",
            "b 0x6f128",
            "ldr r5, [sp, 0x48]",
            "mov r1, sb",
            "ldr r3, [r6, 0x18]",
            "mov r2, 0x48",
            "ldr r4, [r3, r5, lsl 2]",
            "add r0, r4, 0x148",
            "bl sym.imp.memcpy",
            "ldr r0, [r4, 0x148]",
            "ldr r1, [r4, 0x14c]",
            "cmp r0, 0",
            "bne 0x6ef88",
            "cmp r1, 0x80000000",
            "beq 0x6efe0",
            "ldr r2, [r4, 0x150]",
            "ldr r3, [r4, 0x154]",
            "cmp r2, 0",
            "bne 0x6efa0",
            "cmp r3, 0x80000000",
            "beq 0x6efe0",
            "cmp r3, r1",
            "bgt 0x6efb4",
            "bne 0x6efe0",
            "cmp r2, r0",
            "bls 0x6efe0",
            "str r0, [sp]",
            "mov r0, r6",
            "str r1, [sp, 4]",
            "mov r1, 0x18",
            "str r2, [sp, 8]",
            "str r3, [sp, 0xc]",
            "ldr r3, [r4, 0x15c]",
            "ldr r2, [sp, 0x2c]",
            "str r3, [sp, 0x10]",
            "mov r3, r5",
            "bl sym.imp.av_log",
            "ldr r3, [r6, 0x4a8]",
            "tst r3, 1",
            "beq 0x6f030",
            "mov r3, 0x148",
            "mov r0, r6",
            "ldrd r2, r3, [r3, r4]",
            "mov r1, 0x30",
            "strd r2, r3, [sp]",
            "mov r3, 0x150",
            "ldrd r2, r3, [r3, r4]",
            "strd r2, r3, [sp, 8]",
            "ldr r3, [r4, 0x15c]",
            "ldr r2, [sp, 0x28]",
            "str r3, [sp, 0x10]",
            "ldr r3, [r4, 0x170]",
            "str r3, [sp, 0x14]",
            "ldr r3, [r4, 0x164]",
            "str r3, [sp, 0x18]",
            "ldr r3, [r4, 0x160]",
            "bl sym.imp.av_log",
            "ldr r3, [r4, 0x158]",
            "str r4, [r6, 0x44c]",
            "str r3, [r4, 0x13c]",
            "ldr r3, [r4, 0x15c]",
            "str r3, [r4, 0x140]",
            "ldr r3, [r4, 0x60]",
            "cmp r3, 0",
            "beq 0x6ec14",
            "ldr r3, [r4, 0x64]",
            "cmp r3, 0",
            "bne 0x6ec14",
            "ldr r3, [r6, 0x46c]",
            "tst r3, 0x20",
            "bne 0x6ec14",
            "ldr r3, [r4, 8]",
            "ldr r0, [r3, 0xd4]",
            "bl sym.imp.av_parser_init",
            "cmp r0, 0",
            "mov r5, r0",
            "str r0, [r4, 0x64]",
            "bne 0x6f0ac",
            "ldr r3, [r4, 8]",
            "ldr r0, [r3, 0xd4]",
            "bl sym.imp.avcodec_get_name",
            "mov r1, 0x28",
            "mov r3, r0",
            "ldr r2, [sp, 0x24]",
            "mov r0, r6",
            "bl sym.imp.av_log",
            "str r5, [r4, 0x60]",
            "b 0x6ec14",
            "ldr r3, [r4, 0x60]",
            "cmp r3, 2",
            "ldreq r3, [r0, 0xb0]",
            "orreq r3, r3, 1",
            "beq 0x6f0d0",
            "cmp r3, 4",
            "bne 0x6ec14",
            "ldr r3, [r0, 0xb0]",
            "orr r3, r3, 2",
            "str r3, [r5, 0xb0]",
            "b 0x6ec14",
            "ldr sl, [r6, 0x4a8]",
            "ands sl, sl, 1",
            "beq 0x6f128",
            "ldrd r2, r3, [r4]",
            "mov sl, 0",
            "mov r0, r6",
            "mov r1, 0x30",
            "strd r2, r3, [sp]",
            "ldrd r2, r3, [r4, 8]",
            "strd r2, r3, [sp, 8]",
            "ldr r3, [r4, 0x14]",
            "ldr r2, [0x0006f150]",
            "str r3, [sp, 0x10]",
            "ldr r3, [r4, 0x28]",
            "add r2, r8, r2",
            "str r3, [sp, 0x14]",
            "ldr r3, [r4, 0x1c]",
            "str r3, [sp, 0x18]",
            "ldr r3, [r4, 0x18]",
            "bl sym.imp.av_log",
            "mov r0, sl",
            "add sp, sp, 0x7c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.imp.av_dup_packet": {
        "function_address": "0x00009fcc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x700]!"
        ]
    },
    "sym.imp.av_rescale_q": {
        "function_address": "0x0000a080",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x688]!"
        ]
    },
    "fcn.0006afec": {
        "function_address": "0x0006afec",
        "instructions": [
            "ldr r3, [0x0006b048]",
            "cmp r0, 0x2d0",
            "push {r4, r5, lr}",
            "mov r4, r0",
            "movwlt r0, 0x3e9",
            "sub sp, sp, 0x1c",
            "add r3, pc, r3",
            "mullt r0, r0, r4",
            "blt 0x6b040",
            "ldr r5, [0x0006b04c]",
            "add ip, sp, 4",
            "add r5, r3, r5",
            "ldm r5!, {r0, r1, r2, r3}",
            "stm ip!, {r0, r1, r2, r3}",
            "movw r0, 0x2ee0",
            "ldr r3, [r5]",
            "str r3, [ip]",
            "add r3, sp, 0x18",
            "add r4, r3, r4, lsl 2",
            "ldr r3, [r4, -0xb54]",
            "mul r0, r0, r3",
            "add sp, sp, 0x1c",
            "pop {r4, r5, pc}"
        ]
    },
    "fcn.0007d3c0": {
        "function_address": "0x0007d3c0",
        "instructions": [
            "push {r4, r5, lr}",
            "lsl r4, r1, 1",
            "lsl r5, r3, 1",
            "teq r4, r5",
            "teqeq r0, r2",
            "orrsne ip, r4, r0",
            "orrsne ip, r5, r2",
            "mvnsne ip, r4, asr 21",
            "mvnsne ip, r5, asr 21",
            "beq 0x7d5d0",
            "lsr r4, r4, 0x15",
            "rsbs r5, r4, r5, lsr 21",
            "rsblt r5, r5, 0",
            "ble 0x7d414",
            "add r4, r4, r5",
            "eor r2, r0, r2",
            "eor r3, r1, r3",
            "eor r0, r2, r0",
            "eor r1, r3, r1",
            "eor r2, r0, r2",
            "eor r3, r1, r3",
            "cmp r5, 0x36",
            "pophi {r4, r5, pc}",
            "tst r1, 0x80000000",
            "lsl r1, r1, 0xc",
            "mov ip, 0x100000",
            "orr r1, ip, r1, lsr 12",
            "beq 0x7d438",
            "rsbs r0, r0, 0",
            "rsc r1, r1, 0",
            "tst r3, 0x80000000",
            "lsl r3, r3, 0xc",
            "orr r3, ip, r3, lsr 12",
            "beq 0x7d450",
            "rsbs r2, r2, 0",
            "rsc r3, r3, 0",
            "teq r4, r5",
            "beq 0x7d5b8",
            "sub r4, r4, 1",
            "rsbs lr, r5, 0x20",
            "blt 0x7d47c",
            "lsl ip, r2, lr",
            "adds r0, r0, r2, lsr r5",
            "adc r1, r1, 0",
            "adds r0, r0, r3, lsl lr",
            "adcs r1, r1, r3, asr r5",
            "b 0x7d498",
            "sub r5, r5, 0x20",
            "add lr, lr, 0x20",
            "cmp r2, 1",
            "lsl ip, r3, lr",
            "orrhs ip, ip, 2",
            "adds r0, r0, r3, asr r5",
            "adcs r1, r1, r3, asr 31",
            "and r5, r1, 0x80000000",
            "bpl 0x7d4ac",
            "rsbs ip, ip, 0",
            "rscs r0, r0, 0",
            "rsc r1, r1, 0",
            "teq r4, 0",
            "eor r3, r3, 0x100000",
            "eoreq r1, r1, 0x100000",
            "addeq r4, r4, 1",
            "subne r5, r5, 1",
            "b 0x7d458",
            "mvns ip, r4, asr 21",
            "mvnsne ip, r5, asr 21",
            "beq 0x7d640",
            "teq r4, r5",
            "teqeq r0, r2",
            "beq 0x7d5f8",
            "orrs ip, r4, r0",
            "moveq r1, r3",
            "moveq r0, r2",
            "pop {r4, r5, pc}",
            "teq r1, r3",
            "movne r1, 0",
            "movne r0, 0",
            "popne {r4, r5, pc}",
            "lsrs ip, r4, 0x15",
            "bne 0x7d620",
            "lsls r0, r0, 1",
            "adcs r1, r1, r1",
            "orrhs r1, r1, 0x80000000",
            "pop {r4, r5, pc}",
            "adds r4, r4, 0x400000",
            "addlo r1, r1, 0x100000",
            "poplo {r4, r5, pc}",
            "and r5, r1, 0x80000000",
            "mvns ip, r4, asr 21",
            "movne r1, r3",
            "movne r0, r2",
            "mvnseq ip, r5, asr 21",
            "movne r3, r1",
            "movne r2, r0",
            "orrs r4, r0, r1, lsl 12",
            "orrseq r5, r2, r3, lsl 12",
            "teqeq r1, r3",
            "orrne r1, r1, 0x80000",
            "pop {r4, r5, pc}"
        ]
    },
    "fcn.0007ddb8": {
        "function_address": "0x0007ddb8",
        "instructions": [
            "lsl r2, r1, 1",
            "subs r3, r2, 0x70000000",
            "subshs ip, r3, 0x200000",
            "rsbshs ip, ip, 0x1fc00000",
            "bls 0x7dde8",
            "and ip, r1, 0x80000000",
            "lsl r2, r0, 3",
            "orr r0, ip, r0, lsr 29",
            "cmp r2, 0x80000000",
            "adc r0, r0, r3, lsl 2",
            "biceq r0, r0, 1",
            "bx lr",
            "tst r1, 0x40000000",
            "bne 0x7de30",
            "adds r2, r3, 0x2e00000",
            "andlt r0, r1, 0x80000000",
            "bxlt lr",
            "orr r1, r1, 0x100000",
            "lsr r2, r2, 0x15",
            "rsb r2, r2, 0x18",
            "rsb ip, r2, 0x20",
            "lsls r3, r0, ip",
            "lsr r0, r0, r2",
            "orrne r0, r0, 1",
            "lsl r3, r1, 0xb",
            "lsr r3, r3, 0xb",
            "orr r0, r0, r3, lsl ip",
            "lsr r3, r3, r2",
            "lsl r3, r3, 1",
            "b 0x7ddcc",
            "mvns r3, r2, asr 21",
            "bne 0x7de48",
            "orrs r3, r0, r1, lsl 12",
            "movne r0, 0x7f000000",
            "orrne r0, r0, 0xc00000",
            "bxne lr",
            "and r0, r1, 0x80000000",
            "orr r0, r0, 0x7f000000",
            "orr r0, r0, 0x800000",
            "bx lr"
        ]
    },
    "sym.imp.lrintf": {
        "function_address": "0x00009e34",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x810]!"
        ]
    },
    "fcn.0007d3bc": {
        "function_address": "0x0007d3bc",
        "instructions": [
            "eor r3, r3, 0x80000000"
        ]
    },
    "sym.imp.av_gcd": {
        "function_address": "0x00009e1c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x820]!"
        ]
    },
    "fcn.0006b848": {
        "function_address": "0x0006b848",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x174",
            "mov r3, 1",
            "mov r4, r0",
            "mov r5, r2",
            "add r0, sp, 0x120",
            "mov r2, 0x48",
            "str r3, [sp, 0x16c]",
            "ldr r7, [0x0006ba58]",
            "bl sym.imp.memcpy",
            "ldr r0, [r4, 8]",
            "bl sym.imp.avcodec_is_open",
            "cmp r0, 0",
            "add r7, pc, r7",
            "beq 0x6b8a4",
            "mov sb, 0",
            "mov r3, sb",
            "movw r6, 0x5ac0",
            "mov r5, sp",
            "add r7, sp, 0x16c",
            "add r8, sp, 0x120",
            "mov sl, 0",
            "b 0x6b9b0",
            "ldr r3, [r4, 8]",
            "str r0, [sp, 0x168]",
            "ldr r6, [r3, 0x78]",
            "cmp r6, 0",
            "bne 0x6b8cc",
            "ldr r0, [r3, 0xd4]",
            "bl sym.imp.avcodec_find_decoder",
            "subs r6, r0, 0",
            "mvneq sb, 0",
            "beq 0x6ba4c",
            "ldr r1, [0x0006ba5c]",
            "cmp r5, 0",
            "ldr r2, [0x0006ba60]",
            "addeq r0, sp, 0x168",
            "movne r0, r5",
            "mov r3, 0",
            "add r1, r7, r1",
            "add r2, r7, r2",
            "bl sym.imp.av_dict_set",
            "cmp r5, 0",
            "ldr r0, [r4, 8]",
            "addeq r2, sp, 0x168",
            "movne r2, r5",
            "mov r1, r6",
            "bl sym.imp.avcodec_open2",
            "cmp r5, 0",
            "mov sb, r0",
            "bne 0x6b91c",
            "add r0, sp, 0x168",
            "bl sym.imp.av_dict_free",
            "cmp sb, 0",
            "bge 0x6b888",
            "b 0x6ba4c",
            "mov r0, sp",
            "str sl, [sp, 0x16c]",
            "bl sym.imp.avcodec_get_frame_defaults",
            "ldr r0, [r4, 8]",
            "ldr r3, [r0, 0xd0]",
            "cmp r3, 0",
            "beq 0x6b950",
            "cmp r3, 1",
            "bne 0x6b980",
            "b 0x6b964",
            "mov r1, sp",
            "mov r2, r7",
            "mov r3, r8",
            "bl sym.imp.avcodec_decode_video2",
            "b 0x6b974",
            "mov r1, sp",
            "mov r2, r7",
            "mov r3, r8",
            "bl sym.imp.avcodec_decode_audio4",
            "cmp r0, 0",
            "mov sb, r0",
            "blt 0x6b9b4",
            "ldr r3, [sp, 0x16c]",
            "cmp r3, 0",
            "ldrne r2, [r4, 0x1c0]",
            "ldrne r1, [r2, r6]",
            "addne r1, r1, 1",
            "strne r1, [r2, r6]",
            "ldr r2, [sp, 0x130]",
            "add r2, r2, sb",
            "str r2, [sp, 0x130]",
            "ldr r2, [sp, 0x134]",
            "rsb sb, sb, r2",
            "str sb, [sp, 0x134]",
            "mov sb, r3",
            "ldr r3, [sp, 0x134]",
            "cmp r3, 0",
            "bgt 0x6b9e0",
            "ldr r2, [sp, 0x130]",
            "ldr r3, [sp, 0x16c]",
            "subs r3, r3, 0",
            "movne r3, 1",
            "cmp r2, 0",
            "movne r3, 0",
            "cmp r3, 0",
            "beq 0x6ba34",
            "cmp sb, 0",
            "blt 0x6ba34",
            "ldr fp, [r4, 8]",
            "mov r0, fp",
            "bl fcn.0006aee8",
            "cmp r0, 0",
            "beq 0x6b928",
            "ldr r3, [fp, 0xd4]",
            "cmp r3, 0x1c",
            "bne 0x6ba18",
            "ldr r3, [r4, 0x1c0]",
            "ldr r3, [r3, r6]",
            "cmp r3, 5",
            "ble 0x6b928",
            "ldr r3, [r4, 0x1a8]",
            "cmp r3, 0",
            "bne 0x6ba34",
            "ldr r3, [fp, 0x78]",
            "ldr r3, [r3, 0x20]",
            "tst r3, 0x400",
            "bne 0x6b928",
            "ldr r3, [sp, 0x130]",
            "cmp r3, 0",
            "bne 0x6ba4c",
            "ldr r3, [sp, 0x16c]",
            "cmp r3, 0",
            "mvneq sb, 0",
            "mov r0, sb",
            "add sp, sp, 0x174",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.imp.avcodec_string": {
        "function_address": "0x0000a17c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x5e0]!"
        ]
    },
    "sym.imp.avcodec_close": {
        "function_address": "0x0000a014",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x6d0]!"
        ]
    },
    "sym.imp.av_reduce": {
        "function_address": "0x00009b40",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0xa08]!"
        ]
    },
    "sym.imp.avcodec_pix_fmt_to_codec_tag": {
        "function_address": "0x00009bdc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x9a0]!"
        ]
    },
    "sym.imp.ff_find_pix_fmt": {
        "function_address": "0x0000978c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0xc80]!"
        ]
    },
    "fcn.0007dcb8": {
        "function_address": "0x0007dcb8",
        "instructions": [
            "str lr, [sp, -8]!",
            "bl fcn.0007dc90",
            "movlo r0, 1",
            "movhs r0, 0",
            "ldr pc, [sp], 8"
        ]
    },
    "sym.imp.av_get_bits_per_sample": {
        "function_address": "0x00009720",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0xcc8]!"
        ]
    },
    "sym.avio_size": {
        "function_address": "0x00019500",
        "instructions": [
            "push {r0, r1, r4, r5, r6, lr}",
            "subs r6, r0, 0",
            "mvneq r4, 0x15",
            "beq 0x195a0",
            "ldr r1, [r6, 0x1c]",
            "cmp r1, 0",
            "beq 0x1959c",
            "mov r3, 0x10000",
            "mov r2, 0",
            "str r3, [sp]",
            "mov r3, 0",
            "ldr r0, [r6, 0x10]",
            "blx r1",
            "cmp r1, 0",
            "mov r4, r0",
            "mov r5, r1",
            "bge 0x195a4",
            "mov r3, 2",
            "mvn r2, 0",
            "str r3, [sp]",
            "mvn r3, 0",
            "ldr r1, [r6, 0x1c]",
            "ldr r0, [r6, 0x10]",
            "blx r1",
            "cmp r1, 0",
            "mov r4, r0",
            "mov r5, r1",
            "blt 0x195a4",
            "mov r2, 1",
            "mov r3, 0",
            "adds r4, r0, r2",
            "adc r5, r1, r3",
            "mov r1, 0",
            "ldrd r2, r3, [r6, 0x20]",
            "str r1, [sp]",
            "ldr r1, [r6, 0x1c]",
            "ldr r0, [r6, 0x10]",
            "blx r1",
            "b 0x195a4",
            "mvn r4, 0x25",
            "mvn r5, 0",
            "mov r0, r4",
            "mov r1, r5",
            "pop {r2, r3, r4, r5, r6, pc}"
        ]
    },
    "sym.imp.av_parser_close": {
        "function_address": "0x00009ffc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x6e0]!"
        ]
    },
    "sym.avio_seek": {
        "function_address": "0x0001a3d8",
        "instructions": [
            "push {r0, r1, r2, r4, r5, r6, r7, r8, sl, lr}",
            "subs r4, r0, 0",
            "mov r6, r2",
            "mov r7, r3",
            "beq 0x1a5cc",
            "ldr ip, [r4, 0x30]",
            "ldr r5, [sp, 0x28]",
            "ldrd r2, r3, [r4, 0x20]",
            "cmp ip, 0",
            "ldreq r0, [r4, 0xc]",
            "bic r5, r5, 0x20000",
            "ldreq r1, [r4]",
            "movne r0, 0",
            "movne r1, 0",
            "rsbeq r0, r1, r0",
            "asreq r1, r0, 0x1f",
            "cmp r5, 1",
            "bhi 0x1a5cc",
            "subs r0, r2, r0",
            "sbc r1, r3, r1",
            "cmp r5, 1",
            "bne 0x1a454",
            "ldr r3, [r4]",
            "ldr r5, [r4, 8]",
            "rsb r5, r3, r5",
            "adds r2, r0, r5",
            "adc r3, r1, r5, asr 31",
            "orrs r5, r6, r7",
            "beq 0x1a5ec",
            "adds r6, r6, r2",
            "adc r7, r7, r3",
            "mov r2, r6",
            "mov r3, r7",
            "subs r2, r2, r0",
            "sbc r3, r3, r1",
            "ldr r1, [r4, 0x28]",
            "mvn r8, r3",
            "lsr r8, r8, 0x1f",
            "cmp r3, 0",
            "cmpge r1, 0",
            "bne 0x1a4b0",
            "ldr r5, [r4]",
            "ldr sl, [r4, 0xc]",
            "rsb sl, r5, sl",
            "mov r0, sl",
            "asr r1, r0, 0x1f",
            "cmp r3, r1",
            "bgt 0x1a4b0",
            "bne 0x1a4a4",
            "cmp r2, sl",
            "bhi 0x1a4b0",
            "add r2, r5, r2",
            "str r2, [r4, 8]",
            "b 0x1a5b8",
            "ldr r1, [r4, 0x54]",
            "cmp r1, 0",
            "beq 0x1a4e8",
            "ldr r5, [r4, 0xc]",
            "ldr r1, [r4]",
            "add r5, r5, 0x1000",
            "rsb r5, r1, r5",
            "mov r0, r5",
            "asr r1, r0, 0x1f",
            "cmp r3, r1",
            "bgt 0x1a558",
            "bne 0x1a4e8",
            "cmp r2, r5",
            "bhi 0x1a558",
            "cmp ip, 0",
            "movne r8, 0",
            "andeq r8, r8, 1",
            "cmp r8, 0",
            "bne 0x1a508",
            "b 0x1a558",
            "mov r0, r4",
            "bl fcn.00019b4c",
            "ldr r2, [r4, 0x24]",
            "ldr r3, [r4, 0x20]",
            "cmp r7, r2",
            "bgt 0x1a524",
            "bne 0x1a530",
            "cmp r6, r3",
            "bls 0x1a530",
            "ldr r2, [r4, 0x2c]",
            "cmp r2, 0",
            "beq 0x1a500",
            "ldr r2, [r4, 0x2c]",
            "cmp r2, 0",
            "ldrne r2, [0x0001a5fc]",
            "movne r3, 0",
            "bne 0x1a5ec",
            "ldr r2, [r4, 0xc]",
            "rsb r3, r3, r6",
            "add r3, r2, r3",
            "str r3, [r4, 8]",
            "b 0x1a5b8",
            "cmp ip, 0",
            "beq 0x1a570",
            "mov r0, r4",
            "bl fcn.00019018",
            "mov r3, 1",
            "str r3, [r4, 0x28]",
            "ldr r1, [r4, 0x1c]",
            "cmp r1, 0",
            "beq 0x1a5d4",
            "mov r3, 0",
            "mov r2, r6",
            "str r3, [sp]",
            "mov r3, r7",
            "ldr r0, [r4, 0x10]",
            "blx r1",
            "cmp r1, 0",
            "blt 0x1a5e0",
            "ldr r3, [r4, 0x30]",
            "strd r6, r7, [r4, 0x20]",
            "cmp r3, 0",
            "ldreq r3, [r4]",
            "streq r3, [r4, 0xc]",
            "ldr r3, [r4]",
            "str r3, [r4, 8]",
            "mov r3, 0",
            "mov r2, r6",
            "str r3, [r4, 0x2c]",
            "mov r3, r7",
            "b 0x1a5ec",
            "mvn r2, 0x15",
            "b 0x1a5d8",
            "mvn r2, 0x1f",
            "mvn r3, 0",
            "b 0x1a5ec",
            "mov r4, r0",
            "mov r2, r0",
            "mov r3, r1",
            "mov r0, r2",
            "mov r1, r3",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "fcn.0007d398": {
        "function_address": "0x0007d398",
        "instructions": [
            "subs r3, r2, 0x20",
            "rsb ip, r2, 0x20",
            "lslmi r1, r1, r2",
            "lslpl r1, r0, r3",
            "orrmi r1, r1, r0, lsr ip",
            "lsl r0, r0, r2",
            "bx lr"
        ]
    },
    "fcn.0006be04": {
        "function_address": "0x0006be04",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sl, lr}",
            "mov r4, r0",
            "ldr r5, [0x0006bf04]",
            "sub sp, sp, 0x1c",
            "add sl, r4, 0x430",
            "mov r6, 0",
            "ldr r8, [0x0006bf08]",
            "add r7, sl, 8",
            "add r5, pc, r5",
            "bl fcn.0006ba64",
            "add r8, r5, r8",
            "b 0x6bef0",
            "ldr r3, [r4, 0x18]",
            "ldr r5, [r3, r6, lsl 2]",
            "ldr r3, [r5, 0x50]",
            "cmp r3, 0",
            "bne 0x6beec",
            "ldr r3, [r5, 0x54]",
            "cmp r3, 0x80000000",
            "bne 0x6beec",
            "ldr r2, [r4, 0x430]",
            "ldr r3, [sl, 4]",
            "cmp r2, 0",
            "bne 0x6be6c",
            "cmp r3, 0x80000000",
            "beq 0x6bea0",
            "add r1, r8, 0x3c",
            "add ip, sp, 0x10",
            "ldm r1, {r0, r1}",
            "mov lr, sp",
            "stm ip, {r0, r1}",
            "add r1, r5, 0x38",
            "ldm r1, {r0, r1}",
            "stm lr, {r0, r1}",
            "mov r0, r2",
            "mov r1, r3",
            "ldm ip, {r2, r3}",
            "bl sym.imp.av_rescale_q",
            "strd r0, r1, [r5, 0x50]",
            "ldr r2, [r4, 0x438]",
            "ldr r3, [r7, 4]",
            "cmp r2, 0",
            "bne 0x6beb8",
            "cmp r3, 0x80000000",
            "beq 0x6beec",
            "add r1, r8, 0x44",
            "add ip, sp, 8",
            "ldm r1, {r0, r1}",
            "mov lr, sp",
            "stm ip, {r0, r1}",
            "add r1, r5, 0x38",
            "ldm r1, {r0, r1}",
            "stm lr, {r0, r1}",
            "mov r0, r2",
            "mov r1, r3",
            "ldm ip, {r2, r3}",
            "bl sym.imp.av_rescale_q",
            "strd r0, r1, [r5, 0x58]",
            "add r6, r6, 1",
            "ldr r3, [r4, 0x14]",
            "cmp r6, r3",
            "blo 0x6be34",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "fcn.0006ba64": {
        "function_address": "0x0006ba64",
        "instructions": [
            "ldr r3, [0x0006bdf0]",
            "mvn r1, 0x80000000",
            "ldr r2, [0x0006bdf4]",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r7, r0",
            "sub sp, sp, 0x3c",
            "add r3, pc, r3",
            "mov r0, 0",
            "mov r4, 0",
            "mov r5, 0x80000000",
            "str r0, [sp, 0x18]",
            "add r2, r3, r2",
            "mvn r0, 0",
            "strd r4, r5, [sp, 0x10]",
            "mov sl, r0",
            "strd r0, r1, [sp, 8]",
            "mov fp, r1",
            "str r2, [sp, 0x1c]",
            "mov r8, r4",
            "mov sb, r5",
            "b 0x6bc54",
            "ldr r3, [r7, 0x18]",
            "ldr r1, [sp, 0x18]",
            "ldr r6, [r3, r1, lsl 2]",
            "ldr r2, [r6, 0x50]",
            "ldr r3, [r6, 0x54]",
            "cmp r2, 0",
            "bne 0x6badc",
            "cmp r3, 0x80000000",
            "beq 0x6bbe4",
            "ldr r1, [r6, 0x3c]",
            "cmp r1, 0",
            "beq 0x6bbe4",
            "ldr r0, [sp, 0x1c]",
            "add ip, sp, 0x30",
            "add r1, r0, 0x24",
            "ldm r1, {r0, r1}",
            "stm ip, {r0, r1}",
            "mov ip, sp",
            "stm ip, {r0, r1}",
            "mov r1, r3",
            "add r3, r6, 0x38",
            "mov r0, r2",
            "ldm r3, {r2, r3}",
            "bl sym.imp.av_rescale_q",
            "ldr r3, [r6, 8]",
            "mov r4, r0",
            "mov r5, r1",
            "ldr r3, [r3, 0xd0]",
            "cmp r3, 3",
            "bne 0x6bb50",
            "ldr r0, [sp, 0xc]",
            "cmp r0, r1",
            "bgt 0x6bb70",
            "bne 0x6bb74",
            "ldr r1, [sp, 8]",
            "cmp r1, r4",
            "bhi 0x6bb70",
            "b 0x6bb74",
            "cmp fp, r1",
            "bgt 0x6bb64",
            "bne 0x6bb74",
            "cmp sl, r0",
            "bls 0x6bb74",
            "mov sl, r4",
            "mov fp, r5",
            "b 0x6bb74",
            "strd r4, r5, [sp, 8]",
            "ldr r2, [r6, 0x58]",
            "ldr r3, [r6, 0x5c]",
            "cmp r2, 0",
            "bne 0x6bb8c",
            "cmp r3, 0x80000000",
            "beq 0x6bbe4",
            "ldr r0, [sp, 0x1c]",
            "add ip, sp, 0x28",
            "add r1, r0, 0x2c",
            "ldm r1, {r0, r1}",
            "stm ip, {r0, r1}",
            "mov ip, sp",
            "stm ip, {r0, r1}",
            "mov r1, r3",
            "add r3, r6, 0x38",
            "mov r0, r2",
            "ldm r3, {r2, r3}",
            "bl sym.imp.av_rescale_q",
            "adds r4, r4, r0",
            "ldr r0, [sp, 0x14]",
            "adc r5, r5, r1",
            "cmp r5, r0",
            "bgt 0x6bbe0",
            "bne 0x6bbe4",
            "ldr r1, [sp, 0x10]",
            "cmp r4, r1",
            "bls 0x6bbe4",
            "strd r4, r5, [sp, 0x10]",
            "ldr r2, [r6, 0x58]",
            "ldr r3, [r6, 0x5c]",
            "cmp r2, 0",
            "bne 0x6bbfc",
            "cmp r3, 0x80000000",
            "beq 0x6bc48",
            "ldr r0, [sp, 0x1c]",
            "add ip, sp, 0x20",
            "add r6, r6, 0x38",
            "add r1, r0, 0x34",
            "ldm r1, {r0, r1}",
            "stm ip, {r0, r1}",
            "mov ip, sp",
            "stm ip, {r0, r1}",
            "mov r0, r2",
            "mov r1, r3",
            "ldm r6, {r2, r3}",
            "bl sym.imp.av_rescale_q",
            "cmp r1, sb",
            "bgt 0x6bc40",
            "bne 0x6bc48",
            "cmp r0, r8",
            "bls 0x6bc48",
            "mov r8, r0",
            "mov sb, r1",
            "ldr r0, [sp, 0x18]",
            "add r0, r0, 1",
            "str r0, [sp, 0x18]",
            "ldr r3, [r7, 0x14]",
            "ldr r1, [sp, 0x18]",
            "cmp r1, r3",
            "blo 0x6bab8",
            "cmn sl, 1",
            "mov r4, r8",
            "mov r5, sb",
            "mov r8, sl",
            "mov sb, fp",
            "mov r0, r4",
            "mov r1, r5",
            "bne 0x6bc8c",
            "cmn fp, 0x80000001",
            "beq 0x6bccc",
            "ldr r2, [sp, 0xc]",
            "cmp sb, r2",
            "bgt 0x6bca8",
            "bne 0x6bce8",
            "ldr r3, [sp, 8]",
            "cmp r8, r3",
            "bls 0x6bce8",
            "ldrd r2, r3, [sp, 8]",
            "subs r2, r8, r2",
            "sbc r3, sb, r3",
            "cmp r3, 0",
            "bgt 0x6bce8",
            "bne 0x6bccc",
            "ldr ip, [0x0006bdf8]",
            "cmp r2, ip",
            "bhi 0x6bce8",
            "ldr ip, [sp, 8]",
            "cmn ip, 1",
            "bne 0x6bce4",
            "ldr r2, [sp, 0xc]",
            "cmn r2, 0x80000001",
            "beq 0x6bd30",
            "ldrd r8, sb, [sp, 8]",
            "mov r3, 0x430",
            "strd r8, sb, [r7, r3]",
            "ldr r3, [sp, 0x10]",
            "cmp r3, 0",
            "bne 0x6bd08",
            "ldr ip, [sp, 0x14]",
            "cmp ip, 0x80000000",
            "beq 0x6bd30",
            "ldrd r4, r5, [sp, 0x10]",
            "subs r4, r4, r8",
            "sbc r5, r5, sb",
            "cmp r1, r5",
            "bgt 0x6bd28",
            "bne 0x6bd30",
            "cmp r0, r4",
            "bls 0x6bd30",
            "mov r4, r0",
            "mov r5, r1",
            "cmp r4, 0",
            "bne 0x6bd40",
            "cmp r5, 0x80000000",
            "beq 0x6bd5c",
            "ldr r3, [r7, 0x438]",
            "cmp r3, 0",
            "bne 0x6bd5c",
            "ldr r3, [r7, 0x43c]",
            "cmp r3, 0x80000000",
            "movweq r3, 0x438",
            "strdeq r4, r5, [r7, r3]",
            "ldr r0, [r7, 0x10]",
            "cmp r0, 0",
            "beq 0x6bde8",
            "bl sym.avio_size",
            "cmp r1, 0",
            "bgt 0x6bd80",
            "bne 0x6bde8",
            "cmp r0, 0",
            "beq 0x6bde8",
            "mov r3, r7",
            "ldr r6, [r3, 0x438]!",
            "cmp r6, 0",
            "ldr r4, [r3, 4]",
            "bne 0x6bd9c",
            "cmp r4, 0x80000000",
            "beq 0x6bde8",
            "bl fcn.0007d70c",
            "mov r2, 0",
            "ldr r3, [0x0006bdfc]",
            "bl fcn.0007d76c",
            "mov r2, 0",
            "ldr r3, [0x0006be00]",
            "bl fcn.0007d76c",
            "mov r8, r0",
            "mov sb, r1",
            "mov r0, r6",
            "mov r1, r4",
            "bl fcn.0007d70c",
            "mov r2, r0",
            "mov r3, r1",
            "mov r0, r8",
            "mov r1, sb",
            "bl fcn.0007d9d8",
            "bl fcn.0007dd08",
            "str r0, [r7, 0x448]",
            "add sp, sp, 0x3c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.av_pkt_dump2": {
        "function_address": "0x00073f78",
        "instructions": [
            "push {r0, r1, r2, r3, r4, lr}",
            "add r3, r3, 0x38",
            "mov ip, sp",
            "mov r4, r0",
            "mov lr, r1",
            "str r2, [ip], 4",
            "ldm r3, {r0, r1}",
            "mov r3, lr",
            "stm ip, {r0, r1}",
            "mov r0, 0",
            "mov r1, r4",
            "mov r2, r0",
            "bl fcn.00073aa8",
            "pop {r0, r1, r2, r3, r4, pc}"
        ]
    },
    "sym.av_probe_input_format": {
        "function_address": "0x0006e000",
        "instructions": [
            "push {r0, r1, r2, lr}",
            "mov r3, 0",
            "add r2, sp, 8",
            "str r3, [r2, -4]!",
            "bl sym.av_probe_input_format2",
            "pop {r1, r2, r3, pc}"
        ]
    },
    "sym.av_probe_input_format2": {
        "function_address": "0x0006dfd8",
        "instructions": [
            "push {r0, r1, r4, lr}",
            "mov r4, r2",
            "add r2, sp, 4",
            "bl sym.av_probe_input_format3",
            "ldr r3, [sp, 4]",
            "ldr r2, [r4]",
            "cmp r3, r2",
            "strgt r3, [r4]",
            "movle r0, 0",
            "pop {r2, r3, r4, pc}"
        ]
    },
    "fcn.0002a01c": {
        "function_address": "0x0002a01c",
        "instructions": [
            "ldrb r2, [r0]",
            "ldrb r3, [r1]",
            "cmp r2, r3",
            "bne 0x2a098",
            "ldrb r2, [r0, 1]",
            "ldrb r3, [r1, 1]",
            "cmp r2, r3",
            "bne 0x2a098",
            "ldrb r2, [r0, 2]",
            "ldrb r3, [r1, 2]",
            "cmp r2, r3",
            "bne 0x2a098",
            "ldrb r3, [r0, 3]",
            "cmp r3, 0xff",
            "beq 0x2a098",
            "ldrb r3, [r0, 4]",
            "cmp r3, 0xff",
            "beq 0x2a098",
            "ldrsb r3, [r0, 6]",
            "cmp r3, 0",
            "blt 0x2a098",
            "ldrsb r3, [r0, 7]",
            "cmp r3, 0",
            "blt 0x2a098",
            "ldrsb r3, [r0, 8]",
            "cmp r3, 0",
            "blt 0x2a0a0",
            "ldrsb r0, [r0, 9]",
            "mvn r0, r0",
            "lsr r0, r0, 0x1f",
            "bx lr",
            "mov r0, 0",
            "bx lr",
            "mov r0, 0",
            "bx lr"
        ]
    },
    "fcn.0002a0a8": {
        "function_address": "0x0002a0a8",
        "instructions": [
            "ldrb ip, [r0, 9]",
            "mov r3, r0",
            "ldrb r1, [r0, 6]",
            "ldrb r2, [r0, 7]",
            "and ip, ip, 0x7f",
            "ldrb r0, [r0, 8]",
            "add ip, ip, 0xa",
            "and r1, r1, 0x7f",
            "add r1, ip, r1, lsl 21",
            "and r2, r2, 0x7f",
            "ldrb r3, [r3, 5]",
            "and r0, r0, 0x7f",
            "add r2, r1, r2, lsl 14",
            "add r0, r2, r0, lsl 7",
            "tst r3, 0x10",
            "addne r0, r0, 0xa",
            "bx lr"
        ]
    },
    "sym.av_match_ext": {
        "function_address": "0x0006da8c",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "subs r7, r0, 0",
            "sub sp, sp, 0x24",
            "mov r5, r1",
            "moveq r0, r7",
            "beq 0x6db18",
            "mov r1, 0x2e",
            "bl sym.imp.strrchr",
            "cmp r0, 0",
            "beq 0x6db18",
            "add r7, r0, 1",
            "mov r3, sp",
            "mov r4, sp",
            "mov r6, 0",
            "b 0x6dacc",
            "mov r3, sp",
            "ldrb r2, [r5], 1",
            "cmp r2, 0x2c",
            "cmpne r2, 0",
            "beq 0x6daec",
            "rsb r1, r4, r3",
            "cmp r1, 0x1e",
            "strbls r2, [r3], 1",
            "bls 0x6dacc",
            "strb r6, [r3]",
            "mov r0, sp",
            "mov r1, r7",
            "bl sym.imp.av_strcasecmp",
            "cmp r0, 0",
            "beq 0x6db14",
            "ldrb r0, [r5, -1]",
            "cmp r0, 0",
            "bne 0x6dac8",
            "b 0x6db18",
            "mov r0, 1",
            "add sp, sp, 0x24",
            "pop {r4, r5, r6, r7, pc}"
        ]
    },
    "sym.av_iformat_next": {
        "function_address": "0x0006d9c0",
        "instructions": [
            "ldr r3, [0x0006d9e0]",
            "cmp r0, 0",
            "ldrne r0, [r0, 0x48]",
            "add r3, pc, r3",
            "bxne lr",
            "ldr r2, [0x0006d9e4]",
            "ldr r0, [r3, r2]",
            "bx lr"
        ]
    },
    "sym.av_oformat_next": {
        "function_address": "0x0006d9e8",
        "instructions": [
            "ldr r3, [0x0006da0c]",
            "cmp r0, 0",
            "ldrne r0, [r0, 0x4c]",
            "add r3, pc, r3",
            "bxne lr",
            "ldr r2, [0x0006da10]",
            "add r3, r3, r2",
            "ldr r0, [r3, 4]",
            "bx lr"
        ]
    },
    "sym.av_find_input_format": {
        "function_address": "0x0006dc00",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r5, r0",
            "mov r4, 0",
            "b 0x6dc7c",
            "ldr r8, [r4]",
            "cmp r8, 0",
            "cmpne r5, 0",
            "beq 0x6dc7c",
            "mov r0, r5",
            "bl sym.imp.strlen",
            "mov r7, r0",
            "b 0x6dc54",
            "rsb r2, r8, r6",
            "mov r0, r5",
            "cmp r2, r7",
            "movlt r2, r7",
            "mov r1, r8",
            "bl sym.imp.av_strncasecmp",
            "cmp r0, 0",
            "beq 0x6dc8c",
            "add r8, r6, 1",
            "mov r0, r8",
            "mov r1, 0x2c",
            "bl sym.imp.strchr",
            "subs r6, r0, 0",
            "bne 0x6dc30",
            "mov r0, r5",
            "mov r1, r8",
            "bl sym.imp.av_strcasecmp",
            "cmp r0, 0",
            "beq 0x6dc8c",
            "mov r0, r4",
            "bl sym.av_iformat_next",
            "subs r4, r0, 0",
            "bne 0x6dc10",
            "mov r0, r4",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "sym.imp.strlen": {
        "function_address": "0x00009a38",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0xab8]!"
        ]
    },
    "sym.imp.av_strncasecmp": {
        "function_address": "0x00009a20",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0xac8]!"
        ]
    },
    "sym.imp.strchr": {
        "function_address": "0x0000a0a4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x670]!"
        ]
    },
    "sym.imp.av_strcasecmp": {
        "function_address": "0x0000a188",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x5d8]!"
        ]
    },
    "sym.url_exist": {
        "function_address": "0x00018c30",
        "instructions": [
            "push {r0, r1, r2, r3, r4, lr}",
            "mov r4, 0",
            "mov r1, r0",
            "mov r2, 1",
            "add r0, sp, 0xc",
            "mov r3, r4",
            "str r4, [sp]",
            "bl sym.ffurl_open",
            "cmp r0, r4",
            "movlt r0, r4",
            "blt 0x18c68",
            "ldr r0, [sp, 0xc]",
            "bl sym.ffurl_close",
            "mov r0, 1",
            "add sp, sp, 0x10",
            "pop {r4, pc}"
        ]
    },
    "sym.avio_skip": {
        "function_address": "0x0001a654",
        "instructions": [
            "push {r0, r1, r2, lr}",
            "mov r1, 1",
            "str r1, [sp]",
            "bl sym.avio_seek",
            "add sp, sp, 0xc",
            "ldm sp!, {pc}"
        ]
    },
    "sym.avformat_seek_file": {
        "function_address": "0x0006fe98",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x24",
            "ldrd r4, r5, [sp, 0x48]",
            "mov sl, r2",
            "mov r6, r0",
            "mov fp, r3",
            "ldrd r8, sb, [sp, 0x50]",
            "mov r2, 1",
            "ldr r7, [sp, 0x58]",
            "cmp r5, sb",
            "bgt 0x6fed4",
            "bne 0x6fed0",
            "cmp r4, r8",
            "bhi 0x6fed4",
            "mov r2, 0",
            "cmp fp, r5",
            "mov r3, 1",
            "bgt 0x6fef0",
            "bne 0x6feec",
            "cmp sl, r4",
            "bhi 0x6fef0",
            "mov r3, 0",
            "orr r3, r2, r3",
            "tst r3, 0xff",
            "bne 0x6ff90",
            "ldr r3, [r6, 4]",
            "ldr r3, [r3, 0x3c]",
            "cmp r3, 0",
            "beq 0x6ff44",
            "mov r0, r6",
            "str r1, [sp, 0x1c]",
            "bl fcn.0006e700",
            "ldr r3, [r6, 4]",
            "mov r0, r6",
            "strd r4, r5, [sp]",
            "mov r2, sl",
            "strd r8, sb, [sp, 8]",
            "str r7, [sp, 0x10]",
            "ldr r1, [sp, 0x1c]",
            "ldr ip, [r3, 0x3c]",
            "mov r3, fp",
            "blx ip",
            "b 0x6ff94",
            "subs sl, r4, sl",
            "sbc fp, r5, fp",
            "subs r8, r8, r4",
            "sbc sb, sb, r5",
            "cmp fp, sb",
            "mov r3, 1",
            "bhi 0x6ff70",
            "bne 0x6ff6c",
            "cmp sl, r8",
            "bhi 0x6ff70",
            "mov r3, 0",
            "orr r7, r3, r7",
            "mov r0, r6",
            "str r7, [sp, 0x48]",
            "mov r2, r4",
            "mov r3, r5",
            "add sp, sp, 0x24",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "b sym.av_seek_frame",
            "mvn r0, 0",
            "add sp, sp, 0x24",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0006e700": {
        "function_address": "0x0006e700",
        "instructions": [
            "push {r0, r1, r2, r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov fp, r0",
            "mov sl, 0",
            "mov r4, 0",
            "mov sb, sl",
            "mov r5, 0x80000000",
            "bl fcn.0006b3dc",
            "mov r6, 0",
            "str sl, [fp, 0x44c]",
            "mov r7, 0",
            "mov r2, 0x190",
            "movw r3, 0x9c4",
            "b 0x6e7b4",
            "ldr r1, [fp, 0x18]",
            "ldr r8, [r1, sl, lsl 2]",
            "ldr r0, [r8, 0x64]",
            "cmp r0, 0",
            "beq 0x6e768",
            "str r2, [sp, 4]",
            "str r3, [sp]",
            "bl sym.imp.av_parser_close",
            "str sb, [r8, 0x64]",
            "add r0, r8, 0x148",
            "bl sym.imp.av_free_packet",
            "ldr r3, [sp]",
            "ldr r2, [sp, 4]",
            "ldr r1, [r8, 0x18]",
            "strd r4, r5, [r8, 0x78]",
            "cmp r1, 0",
            "bne 0x6e788",
            "ldr r1, [r8, 0x1c]",
            "cmp r1, 0x80000000",
            "strdeq r6, r7, [r8, 0x68]",
            "beq 0x6e78c",
            "strd r4, r5, [r8, 0x68]",
            "strd r4, r5, [r8, r2]",
            "mov r1, 0x11",
            "str sb, [r8, 0x13c]",
            "str sb, [r8, 0x140]",
            "str r3, [r8, 0x198]",
            "add r8, r8, 0xa0",
            "subs r1, r1, 1",
            "strd r4, r5, [r8, 8]!",
            "bne 0x6e7a4",
            "add sl, sl, 1",
            "ldr r1, [fp, 0x14]",
            "cmp sl, r1",
            "blo 0x6e734",
            "pop {r1, r2, r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.avio_enum_protocols": {
        "function_address": "0x000187bc",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r4, r0",
            "mov r5, r1",
            "ldr r0, [r4]",
            "bl fcn.00018734",
            "cmp r0, 0",
            "str r0, [r4]",
            "popeq {r3, r4, r5, pc}",
            "cmp r5, 0",
            "ldrne r3, [r0, 0xc]",
            "ldreq r3, [r0, 8]",
            "cmp r3, 0",
            "beq 0x187c8",
            "ldr r0, [r0]",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.00018734": {
        "function_address": "0x00018734",
        "instructions": [
            "ldr r3, [0x00018754]",
            "cmp r0, 0",
            "ldrne r0, [r0, 0x18]",
            "add r3, pc, r3",
            "bxne lr",
            "ldr r2, [0x00018758]",
            "ldr r0, [r3, r2]",
            "bx lr"
        ]
    },
    "sym.avformat_query_codec": {
        "function_address": "0x00074c88",
        "instructions": [
            "push {r4, lr}",
            "subs r4, r0, 0",
            "ldreq r0, [0x00074d0c]",
            "popeq {r4, pc}",
            "ldr ip, [r4, 0x44]",
            "cmp ip, 0",
            "beq 0x74cb4",
            "mov r0, r1",
            "mov r1, r2",
            "blx ip",
            "pop {r4, pc}",
            "ldr r0, [r4, 0x34]",
            "cmp r0, 0",
            "beq 0x74cd0",
            "bl sym.av_codec_get_tag",
            "subs r0, r0, 0",
            "movne r0, 1",
            "pop {r4, pc}",
            "ldr r2, [r4, 0x18]",
            "cmp r1, r2",
            "moveq r0, 1",
            "popeq {r4, pc}",
            "ldr r2, [r4, 0x14]",
            "cmp r1, r2",
            "beq 0x74d04",
            "ldr r0, [r4, 0x38]",
            "ldr r2, [0x00074d0c]",
            "cmp r1, r0",
            "movne r0, r2",
            "moveq r0, 1",
            "pop {r4, pc}",
            "mov r0, 1",
            "pop {r4, pc}"
        ]
    },
    "sym.av_codec_get_tag": {
        "function_address": "0x0007003c",
        "instructions": [
            "cmp r0, 0",
            "push {r3, r4, r5, lr}",
            "mov r5, r1",
            "movne r4, r0",
            "bne 0x70064",
            "pop {r3, r4, r5, pc}",
            "mov r1, r5",
            "bl fcn.0006ff9c",
            "cmp r0, 0",
            "popne {r3, r4, r5, pc}",
            "ldr r0, [r4], 4",
            "cmp r0, 0",
            "bne 0x70054",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.0006ff9c": {
        "function_address": "0x0006ff9c",
        "instructions": [
            "b 0x6ffb4",
            "cmp r3, r1",
            "bne 0x6ffb0",
            "ldr r0, [r0, 4]",
            "bx lr",
            "add r0, r0, 8",
            "ldr r3, [r0]",
            "cmp r3, 0",
            "bne 0x6ffa0",
            "mov r0, r3",
            "bx lr"
        ]
    },
    "sym.avformat_network_init": {
        "function_address": "0x00074d10",
        "instructions": [
            "push {r3, lr}",
            "ldr r3, [0x00074d44]",
            "ldr r2, [0x00074d48]",
            "add r3, pc, r3",
            "ldr r3, [r3, r2]",
            "mov r2, 1",
            "str r2, [r3]",
            "bl fcn.00045ba8",
            "cmp r0, 0",
            "poplt {r3, pc}",
            "bl fcn.00045b88",
            "mov r0, 0",
            "pop {r3, pc}"
        ]
    },
    "fcn.00045ba8": {
        "function_address": "0x00045ba8",
        "instructions": [
            "push {r3, lr}",
            "ldr r3, [0x00045be0]",
            "ldr r2, [0x00045be4]",
            "add r3, pc, r3",
            "ldr r2, [r3, r2]",
            "ldr r0, [r2]",
            "cmp r0, 0",
            "bne 0x45bd8",
            "ldr r2, [0x00045be8]",
            "mov r1, 0x18",
            "add r2, r3, r2",
            "bl sym.imp.av_log",
            "mov r0, 1",
            "pop {r3, pc}"
        ]
    },
    "fcn.00045b88": {
        "function_address": "0x00045b88",
        "instructions": [
            "push {r4, lr}",
            "bl sym.imp.avpriv_lock_avformat",
            "pop {r4, lr}",
            "b sym.imp.avpriv_unlock_avformat"
        ]
    },
    "sym.imp.avpriv_lock_avformat": {
        "function_address": "0x0000a194",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x5d0]!"
        ]
    },
    "sym.av_register_rtp_dynamic_payload_handlers": {
        "function_address": "0x000576dc",
        "instructions": [
            "push {r4, lr}",
            "ldr r4, fcn.0003bcf4",
            "ldr r3, [0x0005781c]",
            "add r4, pc, r4",
            "ldr r0, [r4, r3]",
            "bl fcn.000576b8",
            "ldr r3, [0x00057820]",
            "ldr r0, [r4, r3]",
            "bl fcn.000576b8",
            "ldr r3, [0x00057824]",
            "ldr r0, [r4, r3]",
            "bl fcn.000576b8",
            "ldr r3, [0x00057828]",
            "ldr r0, [r4, r3]",
            "bl fcn.000576b8",
            "ldr r3, [0x0005782c]",
            "ldr r0, [r4, r3]",
            "bl fcn.000576b8",
            "ldr r3, [0x00057830]",
            "ldr r0, [r4, r3]",
            "bl fcn.000576b8",
            "ldr r3, [0x00057834]",
            "ldr r0, [r4, r3]",
            "bl fcn.000576b8",
            "ldr r3, [0x00057838]",
            "ldr r0, [r4, r3]",
            "bl fcn.000576b8",
            "ldr r3, [0x0005783c]",
            "ldr r0, [r4, r3]",
            "bl fcn.000576b8",
            "ldr r3, [0x00057840]",
            "ldr r0, [r4, r3]",
            "bl fcn.000576b8",
            "ldr r3, [0x00057844]",
            "ldr r0, [r4, r3]",
            "bl fcn.000576b8",
            "ldr r3, [0x00057848]",
            "ldr r0, [r4, r3]",
            "bl fcn.000576b8",
            "ldr r3, [0x0005784c]",
            "ldr r0, [r4, r3]",
            "bl fcn.000576b8",
            "ldr r3, [0x00057850]",
            "ldr r0, [r4, r3]",
            "bl fcn.000576b8",
            "ldr r0, [0x00057854]",
            "add r0, r4, r0",
            "bl fcn.000576b8",
            "ldr r3, [0x00057858]",
            "ldr r0, [r4, r3]",
            "bl fcn.000576b8",
            "ldr r3, [0x0005785c]",
            "ldr r0, [r4, r3]",
            "bl fcn.000576b8",
            "ldr r3, [0x00057860]",
            "ldr r0, [r4, r3]",
            "bl fcn.000576b8",
            "ldr r3, [0x00057864]",
            "ldr r0, [r4, r3]",
            "bl fcn.000576b8",
            "ldr r3, [0x00057868]",
            "ldr r0, [r4, r3]",
            "bl fcn.000576b8",
            "ldr r3, [0x0005786c]",
            "ldr r0, [r4, r3]",
            "bl fcn.000576b8",
            "ldr r3, [0x00057870]",
            "ldr r0, [r4, r3]",
            "bl fcn.000576b8",
            "ldr r3, [0x00057874]",
            "ldr r0, [r4, r3]",
            "bl fcn.000576b8",
            "ldr r3, [0x00057878]",
            "ldr r0, [r4, r3]",
            "bl fcn.000576b8",
            "ldr r3, [0x0005787c]",
            "ldr r0, [r4, r3]",
            "pop {r4, lr}",
            "b fcn.000576b8"
        ]
    },
    "fcn.000576b8": {
        "function_address": "0x000576b8",
        "instructions": [
            "ldr r3, [0x000576d4]",
            "ldr r2, [0x000576d8]",
            "add r3, pc, r3",
            "ldr r1, [r3, r2]",
            "str r0, [r3, r2]",
            "str r1, [r0, 0x54]",
            "bx lr"
        ]
    },
    "sym.avio_write": {
        "function_address": "0x0001947c",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r4, r0",
            "mov r7, r1",
            "mov r5, r2",
            "b 0x194dc",
            "ldr r0, [r4, 8]",
            "mov r1, r7",
            "ldr r6, [r4, 0xc]",
            "rsb r6, r0, r6",
            "cmp r5, r6",
            "movlt r6, r5",
            "movge r6, r6",
            "mov r2, r6",
            "bl sym.imp.memcpy",
            "ldr r3, [r4, 8]",
            "ldr r2, [r4, 0xc]",
            "add r3, r3, r6",
            "cmp r3, r2",
            "str r3, [r4, 8]",
            "blo 0x194d4",
            "mov r0, r4",
            "bl fcn.00019018",
            "add r7, r7, r6",
            "rsb r5, r6, r5",
            "cmp r5, 0",
            "bgt 0x19490",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "sym.av_open_input_file": {
        "function_address": "0x00073908",
        "instructions": [
            "push {r0, r1, r2, r4, r5, r6, r7, lr}",
            "mov r5, r0",
            "ldr r4, [sp, 0x20]",
            "mov r7, r1",
            "mov r6, r2",
            "mov r0, r4",
            "bl fcn.0006bf0c",
            "cmp r4, 0",
            "str r0, [sp, 4]",
            "beq 0x73944",
            "ldrb r3, [r4, 0x24]",
            "and r3, r3, 8",
            "uxtb r3, r3",
            "cmp r3, 0",
            "bne 0x7394c",
            "mov r3, 0",
            "str r3, [r5]",
            "add r4, sp, 4",
            "mov r1, r7",
            "mov r2, r6",
            "mov r3, r4",
            "mov r0, r5",
            "bl sym.avformat_open_input",
            "mov r5, r0",
            "mov r0, r4",
            "bl sym.imp.av_dict_free",
            "mov r0, r5",
            "pop {r1, r2, r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.0006bf0c": {
        "function_address": "0x0006bf0c",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "subs r5, r0, 0",
            "ldr r4, [0x0006c158]",
            "sub sp, sp, 0x410",
            "sub sp, sp, 4",
            "mov r6, 0",
            "str r6, [sp, 0x40c]",
            "moveq r0, r5",
            "add r4, pc, r4",
            "beq 0x6c14c",
            "ldr r3, [r5]",
            "cmp r3, r6",
            "beq 0x6bf7c",
            "ldr r2, [0x0006c15c]",
            "add r7, sp, 0xc",
            "str r3, [sp]",
            "mov r1, 0x400",
            "ldr r3, [r5, 4]",
            "mov r0, r7",
            "add r2, r4, r2",
            "bl sym.imp.snprintf",
            "ldr r1, [0x0006c160]",
            "add r0, sp, 0x400",
            "add r0, r0, 0xc",
            "mov r2, r7",
            "mov r3, r6",
            "add r1, r4, r1",
            "bl sym.imp.av_dict_set",
            "ldr r3, [r5, 8]",
            "cmp r3, 0",
            "beq 0x6bfbc",
            "ldr r2, [0x0006c164]",
            "add r6, sp, 0xc",
            "mov r1, 0x400",
            "mov r0, r6",
            "add r2, r4, r2",
            "bl sym.imp.snprintf",
            "ldr r1, [0x0006c168]",
            "add r0, sp, 0x400",
            "add r0, r0, 0xc",
            "mov r2, r6",
            "mov r3, 0",
            "add r1, r4, r1",
            "bl sym.imp.av_dict_set",
            "ldr r3, [r5, 0xc]",
            "cmp r3, 0",
            "beq 0x6bffc",
            "ldr r2, [0x0006c164]",
            "add r6, sp, 0xc",
            "mov r1, 0x400",
            "mov r0, r6",
            "add r2, r4, r2",
            "bl sym.imp.snprintf",
            "ldr r1, [0x0006c16c]",
            "add r0, sp, 0x400",
            "add r0, r0, 0xc",
            "mov r2, r6",
            "mov r3, 0",
            "add r1, r4, r1",
            "bl sym.imp.av_dict_set",
            "ldr r3, [r5, 0x10]",
            "cmp r3, 0",
            "bne 0x6c014",
            "ldr r2, [r5, 0x14]",
            "cmp r2, 0",
            "beq 0x6c050",
            "ldr r2, [r5, 0x14]",
            "add r6, sp, 0xc",
            "mov r1, 0x400",
            "mov r0, r6",
            "str r2, [sp]",
            "ldr r2, [0x0006c170]",
            "add r2, r4, r2",
            "bl sym.imp.snprintf",
            "ldr r1, [0x0006c174]",
            "add r0, sp, 0x400",
            "add r0, r0, 0xc",
            "mov r2, r6",
            "mov r3, 0",
            "add r1, r4, r1",
            "bl sym.imp.av_dict_set",
            "ldr r0, [r5, 0x18]",
            "cmn r0, 1",
            "beq 0x6c07c",
            "bl sym.imp.av_get_pix_fmt_name",
            "ldr r1, [0x0006c178]",
            "mov r2, r0",
            "add r0, sp, 0x400",
            "mov r3, 0",
            "add r0, r0, 0xc",
            "add r1, r4, r1",
            "bl sym.imp.av_dict_set",
            "ldr r3, [r5, 0x1c]",
            "cmp r3, 0",
            "beq 0x6c0bc",
            "ldr r2, [0x0006c164]",
            "add r6, sp, 0xc",
            "mov r1, 0x400",
            "mov r0, r6",
            "add r2, r4, r2",
            "bl sym.imp.snprintf",
            "ldr r1, [0x0006c17c]",
            "add r0, sp, 0x400",
            "add r0, r0, 0xc",
            "mov r2, r6",
            "mov r3, 0",
            "add r1, r4, r1",
            "bl sym.imp.av_dict_set",
            "ldr r2, [r5, 0x20]",
            "cmp r2, 0",
            "beq 0x6c0e0",
            "ldr r1, [0x0006c180]",
            "add r0, sp, 0x400",
            "add r0, r0, 0xc",
            "mov r3, 0",
            "add r1, r4, r1",
            "bl sym.imp.av_dict_set",
            "ldrb r3, [r5, 0x24]",
            "and r3, r3, 2",
            "uxtb r3, r3",
            "cmp r3, 0",
            "beq 0x6c114",
            "ldr r1, [0x0006c184]",
            "add r0, sp, 0x400",
            "ldr r2, [0x0006c188]",
            "add r0, r0, 0xc",
            "mov r3, 0",
            "add r1, r4, r1",
            "add r2, r4, r2",
            "bl sym.imp.av_dict_set",
            "ldrb r3, [r5, 0x24]",
            "and r3, r3, 4",
            "uxtb r3, r3",
            "cmp r3, 0",
            "beq 0x6c148",
            "ldr r1, [0x0006c18c]",
            "add r0, sp, 0x400",
            "ldr r2, [0x0006c188]",
            "add r0, r0, 0xc",
            "mov r3, 0",
            "add r1, r4, r1",
            "add r2, r4, r2",
            "bl sym.imp.av_dict_set",
            "ldr r0, [sp, 0x40c]",
            "add sp, sp, 0x14",
            "add sp, sp, 0x400",
            "pop {r4, r5, r6, r7, pc}"
        ]
    },
    "sym.avformat_open_input": {
        "function_address": "0x00073604",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sl, lr}",
            "sub sp, sp, 0x44",
            "ldr r4, [r0]",
            "mov r8, r0",
            "mov r5, r1",
            "mov sl, r2",
            "add r0, sp, 8",
            "mov r1, 0",
            "mov r2, 0x28",
            "mov r6, r3",
            "ldr r7, [0x000738f8]",
            "bl sym.imp.memset",
            "mov r3, 0",
            "cmp r4, r3",
            "add r7, pc, r7",
            "str r3, [sp, 0x3c]",
            "bne 0x73658",
            "bl sym.avformat_alloc_context",
            "subs r4, r0, 0",
            "mvneq sl, 0xb",
            "beq 0x738ec",
            "cmp sl, 0",
            "strne sl, [r4, 4]",
            "cmp r6, 0",
            "beq 0x73678",
            "add r0, sp, 0x3c",
            "ldr r1, [r6]",
            "mov r2, 0",
            "bl sym.imp.av_dict_copy",
            "mov r0, r4",
            "add r1, sp, 0x3c",
            "bl sym.imp.av_opt_set_dict",
            "subs sl, r0, 0",
            "blt 0x738b8",
            "ldr r0, [r4, 0x10]",
            "mov r3, 0",
            "str r5, [sp, 0x30]",
            "str r3, [sp, 0x34]",
            "cmp r0, r3",
            "str r3, [sp, 0x38]",
            "ldr r1, [r4, 4]",
            "beq 0x736ec",
            "ldr r3, [r4, 0x46c]",
            "cmp r1, 0",
            "orr r3, r3, 0x80",
            "str r3, [r4, 0x46c]",
            "streq r1, [sp]",
            "streq r1, [sp, 4]",
            "beq 0x73754",
            "ldr r3, [r1, 0x24]",
            "tst r3, 1",
            "beq 0x73770",
            "ldr r2, [0x000738fc]",
            "mov r0, r4",
            "mov r1, 0x18",
            "add r2, r7, r2",
            "bl sym.imp.av_log",
            "b 0x73770",
            "cmp r1, 0",
            "beq 0x73704",
            "ldr r3, [r1, 0x24]",
            "tst r3, 1",
            "beq 0x73718",
            "b 0x73770",
            "add r0, sp, 0x30",
            "bl sym.av_probe_input_format",
            "cmp r0, 0",
            "str r0, [r4, 4]",
            "bne 0x73770",
            "add r3, sp, 0x3c",
            "add r0, r4, 0x10",
            "str r3, [sp]",
            "mov r1, r5",
            "mov r2, 1",
            "add r3, r4, 0x4d0",
            "bl sym.avio_open2",
            "subs sl, r0, 0",
            "blt 0x738b8",
            "ldr r3, [r4, 4]",
            "cmp r3, 0",
            "bne 0x73770",
            "str r3, [sp]",
            "str r3, [sp, 4]",
            "ldr r0, [r4, 0x10]",
            "add r1, r4, 4",
            "mov r2, r5",
            "mov r3, r4",
            "bl sym.av_probe_input_buffer",
            "cmp r0, 0",
            "mov sl, r0",
            "blt 0x738b8",
            "ldr r3, [r4, 4]",
            "ldr r3, [r3, 0x24]",
            "tst r3, 2",
            "beq 0x73794",
            "mov r0, r5",
            "bl sym.av_filename_number_test",
            "cmp r0, 0",
            "mvneq sl, 0x15",
            "beq 0x738b8",
            "mov r3, 0x80000000",
            "mov r2, 0",
            "mov r1, 0x430",
            "add r0, r4, 0x1c",
            "strd r2, r3, [r4, r1]",
            "add r1, r1, 8",
            "strd r2, r3, [r4, r1]",
            "mov r1, r5",
            "mov r2, 0x400",
            "bl sym.imp.av_strlcpy",
            "ldr r3, [r4, 4]",
            "ldr r0, [r3, 8]",
            "cmp r0, 0",
            "ble 0x73808",
            "bl sym.imp.av_mallocz",
            "cmp r0, 0",
            "str r0, [r4, 0xc]",
            "beq 0x738b4",
            "ldr r2, [r4, 4]",
            "ldr r2, [r2, 0x44]",
            "cmp r2, 0",
            "beq 0x73808",
            "str r2, [r0]",
            "bl sym.imp.av_opt_set_defaults",
            "ldr r0, [r4, 0xc]",
            "add r1, sp, 0x3c",
            "bl sym.imp.av_opt_set_dict",
            "subs sl, r0, 0",
            "blt 0x738b8",
            "ldr r3, [r4, 0x10]",
            "cmp r3, 0",
            "beq 0x73824",
            "ldr r1, [0x00073900]",
            "mov r0, r4",
            "add r1, r7, r1",
            "bl fcn.0002ab28",
            "ldr r3, [r4, 0x46c]",
            "tst r3, 0x20000",
            "bne 0x73854",
            "ldr r3, [r4, 4]",
            "ldr r3, [r3, 0x10]",
            "cmp r3, 0",
            "beq 0x73854",
            "mov r0, r4",
            "add r1, sp, 8",
            "blx r3",
            "subs sl, r0, 0",
            "blt 0x738b8",
            "ldr r3, [r4, 0x46c]",
            "tst r3, 0x20000",
            "bne 0x73888",
            "ldr r0, [r4, 0x10]",
            "cmp r0, 0",
            "beq 0x73888",
            "ldr r2, [r4, 0x450]",
            "ldr r3, [r4, 0x454]",
            "orrs r3, r2, r3",
            "bne 0x73888",
            "bl fcn.0006b828",
            "mov r3, 0x450",
            "strd r0, r1, [r4, r3]",
            "ldr r3, [0x00073904]",
            "cmp r6, 0",
            "str r3, [r4, 0x4bc]",
            "beq 0x738a8",
            "mov r0, r6",
            "bl sym.imp.av_dict_free",
            "ldr r3, [sp, 0x3c]",
            "str r3, [r6]",
            "str r4, [r8]",
            "mov sl, 0",
            "b 0x738ec",
            "mvn sl, 0xb",
            "add r0, sp, 0x3c",
            "bl sym.imp.av_dict_free",
            "ldr r0, [r4, 0x10]",
            "cmp r0, 0",
            "beq 0x738dc",
            "ldr r3, [r4, 0x46c]",
            "tst r3, 0x80",
            "bne 0x738dc",
            "bl sym.avio_close",
            "mov r0, r4",
            "bl sym.avformat_free_context",
            "mov r3, 0",
            "str r3, [r8]",
            "mov r0, sl",
            "add sp, sp, 0x44",
            "pop {r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "sym.av_filename_number_test": {
        "function_address": "0x000735c8",
        "instructions": [
            "subs r2, r0, 0",
            "str lr, [sp, -4]!",
            "sub sp, sp, 0x400",
            "moveq r0, r2",
            "sub sp, sp, 4",
            "beq 0x735f8",
            "mov r0, sp",
            "mov r1, 0x400",
            "mov r3, 1",
            "bl sym.av_get_frame_filename",
            "mvn r0, r0",
            "lsr r0, r0, 0x1f",
            "add sp, sp, 4",
            "add sp, sp, 0x400",
            "ldm sp!, {pc}"
        ]
    },
    "sym.av_get_frame_filename": {
        "function_address": "0x00073494",
        "instructions": [
            "ldr ip, [0x000735c0]",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x2c",
            "ldr fp, [0x000735c4]",
            "mov r7, r0",
            "add ip, pc, ip",
            "mov r4, r0",
            "mov r5, r2",
            "mov sb, 0",
            "add r6, sp, 0x14",
            "add fp, ip, fp",
            "mov r8, r1",
            "sub r1, r1, 1",
            "str r3, [sp, 8]",
            "str r1, [sp, 0xc]",
            "ldrb sl, [r5]",
            "cmp sl, 0",
            "beq 0x7359c",
            "cmp sl, 0x25",
            "add r5, r5, 1",
            "bne 0x73588",
            "bl sym.imp.__ctype_b_loc",
            "mov r3, 0",
            "ldr ip, [r0]",
            "b 0x73504",
            "sub r2, r2, 0x30",
            "mov r1, 0xa",
            "mla r3, r1, r3, r2",
            "mov r1, r5",
            "ldrb r2, [r5], 1",
            "lsl r0, r2, 1",
            "ldrh r0, [ip, r0]",
            "tst r0, 8",
            "bne 0x734f8",
            "cmp r2, 0x25",
            "add r5, r1, 1",
            "beq 0x73588",
            "cmp r2, 0x64",
            "bne 0x735ac",
            "cmp sb, 0",
            "bne 0x735ac",
            "ldr r2, [sp, 8]",
            "mov r1, 0x14",
            "mov r0, r6",
            "str r2, [sp]",
            "mov r2, fp",
            "bl sym.imp.snprintf",
            "mov r0, r6",
            "bl sym.imp.strlen",
            "rsb r3, r7, r4",
            "mov sl, r0",
            "add r3, r3, r0",
            "cmp r8, r3",
            "ble 0x735ac",
            "mov r0, r4",
            "mov r1, r6",
            "mov r2, sl",
            "add r4, r4, sl",
            "bl sym.imp.memcpy",
            "add sb, sb, 1",
            "b 0x734d0",
            "ldr r1, [sp, 0xc]",
            "rsb r3, r7, r4",
            "cmp r3, r1",
            "strblt sl, [r4], 1",
            "b 0x734d0",
            "cmp sb, 0",
            "strbne sl, [r4]",
            "movne r0, sl",
            "bne 0x735b8",
            "mvn r0, 0",
            "mov r3, 0",
            "strb r3, [r4]",
            "add sp, sp, 0x2c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.imp.__ctype_b_loc": {
        "function_address": "0x00009828",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0xc18]!"
        ]
    },
    "sym.imp.snprintf": {
        "function_address": "0x00009ab0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0xa68]!"
        ]
    },
    "sym.avio_wl24": {
        "function_address": "0x00019908",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r5, r0",
            "mov r4, r1",
            "uxth r1, r1",
            "bl sym.avio_wl16",
            "mov r0, r5",
            "lsr r1, r4, 0x10",
            "pop {r4, r5, r6, lr}",
            "b sym.avio_w8"
        ]
    },
    "sym.avio_wl16": {
        "function_address": "0x000197e0",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r5, r0",
            "mov r4, r1",
            "bl sym.avio_w8",
            "mov r0, r5",
            "lsr r1, r4, 8",
            "pop {r4, r5, r6, lr}",
            "b sym.avio_w8"
        ]
    },
    "sym.avio_put_str16le": {
        "function_address": "0x00019800",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sl, lr}",
            "mov r6, r0",
            "mov r7, r1",
            "mov r5, 0",
            "mov sl, 0x7f",
            "movw r8, 0xffff",
            "b 0x198b8",
            "eor r3, r4, 0xff",
            "orr r3, r3, 1",
            "clz r3, r3",
            "sub r3, r3, 0x18",
            "cmp r3, 1",
            "beq 0x198c4",
            "and r4, r4, sl, asr r3",
            "add r2, r7, 1",
            "b 0x19858",
            "ldrb r1, [r2], 1",
            "sub r1, r1, 0x80",
            "mov r7, r2",
            "lsrs r0, r1, 6",
            "bne 0x19868",
            "add r4, r1, r4, lsl 6",
            "sub r3, r3, 1",
            "mov r7, r2",
            "cmp r3, 0",
            "bgt 0x19840",
            "cmp r4, r8",
            "bhi 0x19884",
            "mov r0, r6",
            "uxth r1, r4",
            "add r5, r5, 2",
            "bl sym.avio_wl16",
            "b 0x198b8",
            "sub r3, r4, 0x10000",
            "ldr r1, [0x000198d8]",
            "lsr r3, r3, 0xa",
            "lsl r4, r4, 0x16",
            "orr r1, r3, r1",
            "mov r0, r6",
            "uxth r1, r1",
            "add r5, r5, 4",
            "bl sym.avio_wl16",
            "lsr r1, r4, 0x16",
            "mov r0, r6",
            "orr r1, r1, 0xdc00",
            "bl sym.avio_wl16",
            "ldrb r4, [r7]",
            "cmp r4, 0",
            "bne 0x1981c",
            "mov r0, r6",
            "mov r1, 0",
            "bl sym.avio_wl16",
            "add r0, r5, 2",
            "pop {r3, r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "sym.avio_put_str": {
        "function_address": "0x000196b8",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "subs r5, r1, 0",
            "mov r6, r0",
            "beq 0x196e8",
            "mov r0, r5",
            "bl sym.imp.strlen",
            "add r4, r0, 1",
            "mov r1, r5",
            "mov r0, r6",
            "mov r2, r4",
            "bl sym.avio_write",
            "b 0x196f0",
            "mov r4, 1",
            "bl sym.avio_w8",
            "mov r0, r4",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.avio_wb24": {
        "function_address": "0x00019930",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r5, r0",
            "mov r4, r1",
            "lsr r1, r1, 8",
            "bl sym.avio_wb16",
            "mov r0, r5",
            "mov r1, r4",
            "pop {r4, r5, r6, lr}",
            "b sym.avio_w8"
        ]
    },
    "sym.av_new_program": {
        "function_address": "0x00071c80",
        "instructions": [
            "mov r3, 0",
            "push {r4, r5, r6, lr}",
            "mov r5, r1",
            "mov r6, r0",
            "mov r4, r3",
            "ldr r1, [r0, 0x484]",
            "b 0x71cb4",
            "ldr r2, [r6, 0x488]",
            "ldr r2, [r2, r3, lsl 2]",
            "add r3, r3, 1",
            "ldr r0, [r2]",
            "cmp r0, r5",
            "moveq r4, r2",
            "cmp r3, r1",
            "bne 0x71c9c",
            "cmp r4, 0",
            "bne 0x71cf0",
            "mov r0, 0x24",
            "bl sym.imp.av_mallocz",
            "subs r4, r0, 0",
            "beq 0x71cf4",
            "add r1, r6, 0x480",
            "mov r2, r4",
            "add r0, r1, 8",
            "add r1, r1, 4",
            "bl sym.imp.av_dynarray_add",
            "mvn r3, 0xf",
            "str r3, [r4, 8]",
            "str r5, [r4]",
            "mov r0, r4",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.imp.av_dynarray_add": {
        "function_address": "0x00009f54",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x750]!"
        ]
    },
    "sym.imp.av_dict_copy": {
        "function_address": "0x00009c9c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x920]!"
        ]
    },
    "sym.av_probe_input_buffer": {
        "function_address": "0x0006e074",
        "instructions": [
            "ldr ip, [0x0006e280]",
            "cmp r2, 0",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x34",
            "str r0, [sp, 0xc]",
            "mov r8, r1",
            "add ip, pc, ip",
            "mov sb, r3",
            "ldr r7, [sp, 0x58]",
            "ldr r6, [sp, 0x5c]",
            "ldreq r2, [0x0006e284]",
            "addeq r2, ip, r2",
            "mov r3, 0",
            "cmp r6, 0",
            "str r3, [sp, 0x24]",
            "rsb r3, r7, 0",
            "str r2, [sp, 0x20]",
            "str r3, [sp, 0x28]",
            "beq 0x6e0d4",
            "cmp r6, 0x100000",
            "bhi 0x6e0d4",
            "cmp r6, 0x800",
            "blo 0x6e270",
            "b 0x6e0d8",
            "mov r6, 0x100000",
            "cmp r7, r6",
            "bhs 0x6e270",
            "add r3, sp, 0x20",
            "mov r4, 0x800",
            "str r3, [sp, 0x10]",
            "add r3, sp, 0x2c",
            "str r3, [sp, 0x14]",
            "mov r5, 0",
            "ldr r3, [0x0006e288]",
            "add r3, ip, r3",
            "str r3, [sp, 0x18]",
            "ldr r3, [0x0006e28c]",
            "add r3, ip, r3",
            "str r3, [sp, 0x1c]",
            "b 0x6e21c",
            "cmp r4, r6",
            "movlo r3, 0x19",
            "movhs r3, 0",
            "cmp r4, 0x800",
            "str r3, [sp, 0x2c]",
            "asrne fp, r4, 1",
            "cmp r4, r7",
            "blo 0x6e204",
            "mov r0, r5",
            "add r1, r4, 0x20",
            "bl sym.imp.av_realloc",
            "subs sl, r0, 0",
            "bne 0x6e158",
            "mov r0, r5",
            "mvn fp, 0xb",
            "bl sym.imp.av_free",
            "b 0x6e274",
            "add r1, sl, fp",
            "rsb r2, fp, r4",
            "ldr r0, [sp, 0xc]",
            "mov r5, sl",
            "bl sym.avio_read",
            "subs fp, r0, 0",
            "bge 0x6e18c",
            "ldr r3, [0x0006e290]",
            "cmp fp, r3",
            "bne 0x6e264",
            "mov r3, 0",
            "mov fp, r3",
            "str r3, [sp, 0x2c]",
            "ldr r3, [sp, 0x28]",
            "add r0, sl, r7",
            "str r0, [sp, 0x24]",
            "mov r1, 0",
            "mov r2, 0x20",
            "add fp, fp, r3",
            "add r0, r0, fp",
            "str fp, [sp, 0x28]",
            "bl sym.imp.memset",
            "ldr r0, [sp, 0x10]",
            "mov r1, 1",
            "ldr r2, [sp, 0x14]",
            "bl sym.av_probe_input_format2",
            "cmp r0, 0",
            "mov r3, r0",
            "str r0, [r8]",
            "beq 0x6e204",
            "ldr r2, [sp, 0x2c]",
            "cmp r2, 0x19",
            "strle r2, [sp]",
            "movle r0, sb",
            "strgt r2, [sp, 4]",
            "movle r1, 0x18",
            "strgt r4, [sp]",
            "movgt r0, sb",
            "ldrle r2, [sp, 0x1c]",
            "movgt r1, 0x30",
            "ldrgt r2, [sp, 0x18]",
            "ldr r3, [r3]",
            "bl sym.imp.av_log",
            "add r3, r4, 1",
            "lsl r4, r4, 1",
            "cmp r3, r6",
            "movlo r3, r6",
            "cmp r3, r4",
            "movlo r4, r3",
            "cmp r4, r6",
            "bhi 0x6e230",
            "ldr fp, [r8]",
            "cmp fp, 0",
            "beq 0x6e114",
            "ldr r3, [r8]",
            "cmp r3, 0",
            "bne 0x6e24c",
            "mov r0, r5",
            "ldr fp, [0x0006e294]",
            "bl sym.imp.av_free",
            "b 0x6e274",
            "ldr r0, [sp, 0xc]",
            "mov r1, r5",
            "ldr r2, [sp, 0x28]",
            "bl fcn.0001a670",
            "subs fp, r0, 0",
            "bge 0x6e274",
            "mov r0, r5",
            "bl sym.imp.av_free",
            "b 0x6e274",
            "mvn fp, 0x15",
            "mov r0, fp",
            "add sp, sp, 0x34",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0002ab28": {
        "function_address": "0x0002ab28",
        "instructions": [
            "mov r2, 0",
            "b fcn.0002a0ec"
        ]
    },
    "sym.avio_close": {
        "function_address": "0x0001a7c4",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r4, r0",
            "ldr r5, [r0, 0x10]",
            "ldr r0, [r0]",
            "bl sym.imp.av_free",
            "mov r0, r4",
            "bl sym.imp.av_free",
            "mov r0, r5",
            "pop {r4, r5, r6, lr}",
            "b sym.ffurl_close"
        ]
    },
    "sym.avio_read": {
        "function_address": "0x0001a2a8",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r6, r0",
            "mov sl, r1",
            "mov sb, r2",
            "mov r8, r2",
            "b 0x1a394",
            "ldr r1, [r6, 8]",
            "ldr r7, [r6, 0xc]",
            "rsb r7, r1, r7",
            "cmp r7, r8",
            "movgt r7, r8",
            "bgt 0x1a374",
            "cmp r7, 0",
            "bne 0x1a374",
            "ldr r3, [r6, 4]",
            "cmp r8, r3",
            "ble 0x1a358",
            "ldr r3, [r6, 0x44]",
            "cmp r3, 0",
            "bne 0x1a358",
            "ldr r3, [r6, 0x14]",
            "cmp r3, 0",
            "beq 0x1a31c",
            "ldr r0, [r6, 0x10]",
            "mov r1, sl",
            "mov r2, r8",
            "blx r3",
            "subs r7, r0, 0",
            "bgt 0x1a330",
            "mov r3, 1",
            "cmp r7, 0",
            "str r3, [r6, 0x2c]",
            "strne r7, [r6, 0x48]",
            "b 0x1a39c",
            "ldrd r4, r5, [r6, 0x20]",
            "rsb r8, r7, r8",
            "ldr r3, [r6]",
            "add sl, sl, r7",
            "adds r4, r4, r7",
            "adc r5, r5, r7, asr 31",
            "str r3, [r6, 8]",
            "str r3, [r6, 0xc]",
            "strd r4, r5, [r6, 0x20]",
            "b 0x1a394",
            "mov r0, r6",
            "bl fcn.00019b4c",
            "ldr r2, [r6, 0xc]",
            "ldr r3, [r6, 8]",
            "cmp r2, r3",
            "bne 0x1a394",
            "b 0x1a39c",
            "mov r0, sl",
            "mov r2, r7",
            "bl sym.imp.memcpy",
            "ldr r3, [r6, 8]",
            "add sl, sl, r7",
            "rsb r8, r7, r8",
            "add r3, r3, r7",
            "str r3, [r6, 8]",
            "cmp r8, 0",
            "bgt 0x1a2c0",
            "cmp sb, r8",
            "bne 0x1a3c0",
            "ldr r0, [r6, 0x48]",
            "cmp r0, 0",
            "popne {r4, r5, r6, r7, r8, sb, sl, pc}",
            "mov r0, r6",
            "bl sym.url_feof",
            "cmp r0, 0",
            "bne 0x1a3c8",
            "rsb r0, r8, sb",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}",
            "ldr r0, [pc]",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "fcn.0001a670": {
        "function_address": "0x0001a670",
        "instructions": [
            "ldr r3, [r0, 0x30]",
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r6, r0",
            "mov r8, r1",
            "mov r7, r2",
            "cmp r3, 0",
            "bne 0x1a74c",
            "ldr r3, [r0]",
            "mov r4, r7",
            "asr r5, r4, 0x1f",
            "ldr sl, [r0, 0xc]",
            "rsb sl, r3, sl",
            "ldrd r2, r3, [r0, 0x20]",
            "subs r2, r2, sl",
            "sbc r3, r3, sl, asr 31",
            "cmp r3, r5",
            "bgt 0x1a74c",
            "bne 0x1a6c0",
            "cmp r2, r4",
            "bhi 0x1a74c",
            "ldr r4, [r6, 4]",
            "add r5, sl, r2",
            "rsb sb, r2, r7",
            "cmp r5, r4",
            "movge r4, r5",
            "movlt r4, r4",
            "cmp r4, r7",
            "ble 0x1a6f8",
            "mov r0, r8",
            "mov r1, 1",
            "mov r2, r4",
            "bl sym.imp.av_realloc_f",
            "subs r8, r0, 0",
            "beq 0x1a754",
            "cmp r5, r7",
            "ble 0x1a718",
            "ldr r1, [r6]",
            "add r0, r8, r7",
            "mov r7, r5",
            "rsb r2, sb, sl",
            "add r1, r1, sb",
            "bl sym.imp.memcpy",
            "ldr r0, [r6]",
            "bl sym.imp.av_free",
            "mov r2, r7",
            "asr r3, r2, 0x1f",
            "mov r0, 0",
            "add r7, r8, r7",
            "str r8, [r6]",
            "stmib r6, {r4, r8}",
            "strd r2, r3, [r6, 0x20]",
            "str r7, [r6, 0xc]",
            "str r0, [r6, 0x2c]",
            "str r0, [r6, 0x28]",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}",
            "mvn r0, 0x15",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}",
            "mvn r0, 0xb",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "sym.avpriv_new_chapter": {
        "function_address": "0x00071cfc",
        "instructions": [
            "push {r0, r1, r2, r4, r5, r6, r7, lr}",
            "mov r7, r1",
            "ldr r4, [0x00071db4]",
            "mov r1, sp",
            "mov r5, r0",
            "stm r1, {r2, r3}",
            "mov r3, 0",
            "add r4, pc, r4",
            "ldr r1, [r0, 0x4a0]",
            "mov r6, r3",
            "b 0x71d40",
            "ldr r2, [r5, 0x4a4]",
            "ldr r2, [r2, r3, lsl 2]",
            "add r3, r3, 1",
            "ldr r0, [r2]",
            "cmp r0, r7",
            "moveq r6, r2",
            "cmp r3, r1",
            "bne 0x71d28",
            "cmp r6, 0",
            "bne 0x71d70",
            "mov r0, 0x28",
            "bl sym.imp.av_mallocz",
            "subs r6, r0, 0",
            "beq 0x71dac",
            "add r1, r5, 0x4a0",
            "mov r2, r6",
            "add r0, r1, 4",
            "bl sym.imp.av_dynarray_add",
            "ldr r1, [0x00071db8]",
            "mov r3, 0",
            "ldr r2, [sp, 0x30]",
            "add r0, r6, 0x20",
            "add r1, r4, r1",
            "bl sym.imp.av_dict_set",
            "mov r2, sp",
            "mov r3, r6",
            "ldm r2, {r0, r1}",
            "str r7, [r3], 4",
            "ldrd r4, r5, [sp, 0x28]",
            "stm r3, {r0, r1}",
            "ldrd r2, r3, [sp, 0x20]",
            "strd r4, r5, [r6, 0x18]",
            "strd r2, r3, [r6, 0x10]",
            "mov r0, r6",
            "pop {r1, r2, r3, r4, r5, r6, r7, pc}"
        ]
    },
    "sym.av_register_all": {
        "function_address": "0x0000d468",
        "instructions": [
            "push {r4, lr}",
            "ldr r4, [0x0000dd64]",
            "ldr r3, [0x0000dd68]",
            "add r4, pc, r4",
            "ldr r2, [r4, r3]",
            "cmp r2, 0",
            "popne {r4, pc}",
            "add r2, r2, 1",
            "str r2, [r4, r3]",
            "bl sym.imp.avcodec_register_all",
            "ldr r3, [0x0000dd6c]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dd70]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dd74]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dd78]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dd7c]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dd80]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dd84]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dd88]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dd8c]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dd90]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dd94]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dd98]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dd9c]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dda0]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dda4]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dda8]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000ddac]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000ddb0]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000ddb4]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000ddb8]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000ddbc]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000ddc0]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000ddc4]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000ddc8]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000ddcc]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000ddd0]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000ddd4]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000ddd8]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dddc]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dde0]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dde4]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dde8]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000ddec]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000ddf0]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000ddf4]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000ddf8]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000ddfc]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de00]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de04]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de08]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de0c]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de10]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de14]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de18]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de1c]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de20]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de24]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de28]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de2c]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de30]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de34]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de38]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de3c]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de40]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de44]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de48]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de4c]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de50]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de54]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de58]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de5c]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de60]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de64]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de68]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de6c]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de70]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de74]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de78]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de7c]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de80]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de84]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de88]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de8c]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de90]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de94]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de98]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de9c]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dea0]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dea4]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dea8]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000deac]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000deb0]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000deb4]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000deb8]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000debc]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dec0]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dec4]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dec8]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000decc]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000ded0]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000ded4]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000ded8]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dedc]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dee0]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dee4]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dee8]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000deec]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000def0]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000def4]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000def8]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000defc]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df00]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df04]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df08]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df0c]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df10]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df14]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df18]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df1c]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df20]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df24]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df28]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df2c]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df30]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df34]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df38]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df3c]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df40]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df44]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df48]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df4c]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df50]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df54]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df58]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df5c]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df60]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df64]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df68]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df6c]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df70]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "bl sym.av_register_rtp_dynamic_payload_handlers",
            "bl sym.av_register_rdt_dynamic_payload_handlers",
            "ldr r3, [0x0000df74]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df78]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df7c]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df80]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df84]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df88]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df8c]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df90]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df94]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df98]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df9c]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dfa0]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dfa4]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dfa8]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dfac]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dfb0]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dfb4]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dfb8]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dfbc]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dfc0]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dfc4]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dfc8]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dfcc]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dfd0]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dfd4]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dfd8]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dfdc]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dfe0]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dfe4]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dfe8]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dfec]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dff0]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dff4]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dff8]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dffc]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000e000]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000e004]",
            "mov r1, 0x38",
            "ldr r0, [r4, r3]",
            "bl 0x187f8",
            "ldr r3, [0x0000e008]",
            "mov r1, 0x38",
            "ldr r0, [r4, r3]",
            "bl 0x187f8",
            "ldr r3, [0x0000e00c]",
            "mov r1, 0x38",
            "ldr r0, [r4, r3]",
            "bl 0x187f8",
            "ldr r3, [0x0000e010]",
            "mov r1, 0x38",
            "ldr r0, [r4, r3]",
            "bl 0x187f8",
            "ldr r3, [0x0000e014]",
            "mov r1, 0x38",
            "ldr r0, [r4, r3]",
            "bl 0x187f8",
            "ldr r3, [0x0000e018]",
            "mov r1, 0x38",
            "ldr r0, [r4, r3]",
            "bl 0x187f8",
            "ldr r3, [0x0000e01c]",
            "mov r1, 0x38",
            "ldr r0, [r4, r3]",
            "bl 0x187f8",
            "ldr r3, [0x0000e020]",
            "mov r1, 0x38",
            "ldr r0, [r4, r3]",
            "bl 0x187f8",
            "ldr r3, [0x0000e024]",
            "mov r1, 0x38",
            "ldr r0, [r4, r3]",
            "bl 0x187f8",
            "ldr r3, [0x0000e028]",
            "mov r1, 0x38",
            "ldr r0, [r4, r3]",
            "bl 0x187f8",
            "ldr r3, [0x0000e02c]",
            "mov r1, 0x38",
            "ldr r0, [r4, r3]",
            "bl 0x187f8",
            "ldr r3, [0x0000e030]",
            "mov r1, 0x38",
            "ldr r0, [r4, r3]",
            "bl 0x187f8",
            "ldr r3, [0x0000e034]",
            "mov r1, 0x38",
            "ldr r0, [r4, r3]",
            "bl 0x187f8",
            "ldr r3, [0x0000e038]",
            "mov r1, 0x38",
            "ldr r0, [r4, r3]",
            "bl 0x187f8",
            "ldr r3, [0x0000e03c]",
            "mov r1, 0x38",
            "ldr r0, [r4, r3]",
            "bl 0x187f8",
            "ldr r3, [0x0000e040]",
            "mov r1, 0x38",
            "ldr r0, [r4, r3]",
            "pop {r4, lr}",
            "b 0x187f8",
            "push {r3, r4, r5, r6, r7, lr}",
            "cmp r1, 0x37",
            "ldr r4, [0x0001885c]",
            "mov r6, r0",
            "mov r7, r1",
            "add r4, pc, r4",
            "bhi 0x18830",
            "mov r0, 0x38",
            "bl sym.imp.av_mallocz",
            "mov r5, r0",
            "mov r1, r6",
            "mov r6, r5",
            "mov r2, r7",
            "bl sym.imp.memcpy",
            "ldr r3, [0x00018860]",
            "ldr r0, [r4, r3]",
            "add r4, r4, r3",
            "b 0x18848",
            "add r4, r0, 0x18",
            "ldr r0, [r0, 0x18]",
            "cmp r0, 0",
            "bne 0x18840",
            "str r6, [r4]",
            "str r0, [r6, 0x18]",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "sym.imp.avcodec_register_all": {
        "function_address": "0x000098d0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0xba8]!"
        ]
    },
    "sym.av_register_input_format": {
        "function_address": "0x0006da14",
        "instructions": [
            "ldr r3, [0x0006da48]",
            "ldr r1, [0x0006da4c]",
            "add r3, pc, r3",
            "ldr r2, [r3, r1]",
            "add r3, r3, r1",
            "b 0x6da34",
            "add r3, r2, 0x48",
            "ldr r2, [r2, 0x48]",
            "cmp r2, 0",
            "bne 0x6da2c",
            "str r0, [r3]",
            "str r2, [r0, 0x48]",
            "bx lr"
        ]
    },
    "sym.av_register_rdt_dynamic_payload_handlers": {
        "function_address": "0x00050c1c",
        "instructions": [
            "ldr r3, [0x00050c54]",
            "push {r4, lr}",
            "ldr r4, [0x00050c58]",
            "add r3, pc, r3",
            "add r4, r3, r4",
            "mov r0, r4",
            "bl fcn.000576b8",
            "add r0, r4, 0x58",
            "bl fcn.000576b8",
            "add r0, r4, 0xb0",
            "bl fcn.000576b8",
            "add r0, r4, 0x108",
            "pop {r4, lr}",
            "b fcn.000576b8"
        ]
    },
    "unk.0x187f8": {
        "function_address": "0x000187f8",
        "instructions": [
            "push {r4, lr}",
            "ldr r4, [0x0000dd64]",
            "ldr r3, [0x0000dd68]",
            "add r4, pc, r4",
            "ldr r2, [r4, r3]",
            "cmp r2, 0",
            "popne {r4, pc}",
            "add r2, r2, 1",
            "str r2, [r4, r3]",
            "bl sym.imp.avcodec_register_all",
            "ldr r3, [0x0000dd6c]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dd70]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dd74]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dd78]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dd7c]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dd80]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dd84]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dd88]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dd8c]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dd90]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dd94]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dd98]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dd9c]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dda0]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dda4]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dda8]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000ddac]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000ddb0]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000ddb4]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000ddb8]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000ddbc]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000ddc0]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000ddc4]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000ddc8]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000ddcc]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000ddd0]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000ddd4]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000ddd8]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dddc]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dde0]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dde4]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dde8]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000ddec]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000ddf0]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000ddf4]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000ddf8]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000ddfc]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de00]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de04]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de08]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de0c]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de10]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de14]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de18]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de1c]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de20]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de24]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de28]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de2c]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de30]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de34]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de38]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de3c]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de40]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de44]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de48]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de4c]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de50]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de54]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de58]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de5c]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de60]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de64]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de68]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de6c]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de70]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de74]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de78]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de7c]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de80]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de84]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de88]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de8c]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de90]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de94]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de98]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000de9c]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dea0]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dea4]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dea8]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000deac]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000deb0]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000deb4]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000deb8]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000debc]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dec0]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dec4]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dec8]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000decc]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000ded0]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000ded4]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000ded8]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dedc]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dee0]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dee4]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dee8]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000deec]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000def0]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000def4]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000def8]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000defc]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df00]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df04]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df08]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df0c]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df10]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df14]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df18]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df1c]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df20]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df24]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df28]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df2c]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df30]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df34]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df38]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df3c]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df40]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df44]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df48]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df4c]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df50]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df54]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df58]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df5c]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df60]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df64]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df68]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df6c]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df70]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "bl sym.av_register_rtp_dynamic_payload_handlers",
            "bl sym.av_register_rdt_dynamic_payload_handlers",
            "ldr r3, [0x0000df74]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df78]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df7c]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df80]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df84]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df88]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df8c]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df90]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df94]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df98]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000df9c]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dfa0]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dfa4]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dfa8]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dfac]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dfb0]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dfb4]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dfb8]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dfbc]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dfc0]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dfc4]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dfc8]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dfcc]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dfd0]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dfd4]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dfd8]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dfdc]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dfe0]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dfe4]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dfe8]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dfec]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dff0]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dff4]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dff8]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000dffc]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000e000]",
            "ldr r0, [r4, r3]",
            "bl sym.av_register_input_format",
            "ldr r3, [0x0000e004]",
            "mov r1, 0x38",
            "ldr r0, [r4, r3]",
            "bl 0x187f8",
            "ldr r3, [0x0000e008]",
            "mov r1, 0x38",
            "ldr r0, [r4, r3]",
            "bl 0x187f8",
            "ldr r3, [0x0000e00c]",
            "mov r1, 0x38",
            "ldr r0, [r4, r3]",
            "bl 0x187f8",
            "ldr r3, [0x0000e010]",
            "mov r1, 0x38",
            "ldr r0, [r4, r3]",
            "bl 0x187f8",
            "ldr r3, [0x0000e014]",
            "mov r1, 0x38",
            "ldr r0, [r4, r3]",
            "bl 0x187f8",
            "ldr r3, [0x0000e018]",
            "mov r1, 0x38",
            "ldr r0, [r4, r3]",
            "bl 0x187f8",
            "ldr r3, [0x0000e01c]",
            "mov r1, 0x38",
            "ldr r0, [r4, r3]",
            "bl 0x187f8",
            "ldr r3, [0x0000e020]",
            "mov r1, 0x38",
            "ldr r0, [r4, r3]",
            "bl 0x187f8",
            "ldr r3, [0x0000e024]",
            "mov r1, 0x38",
            "ldr r0, [r4, r3]",
            "bl 0x187f8",
            "ldr r3, [0x0000e028]",
            "mov r1, 0x38",
            "ldr r0, [r4, r3]",
            "bl 0x187f8",
            "ldr r3, [0x0000e02c]",
            "mov r1, 0x38",
            "ldr r0, [r4, r3]",
            "bl 0x187f8",
            "ldr r3, [0x0000e030]",
            "mov r1, 0x38",
            "ldr r0, [r4, r3]",
            "bl 0x187f8",
            "ldr r3, [0x0000e034]",
            "mov r1, 0x38",
            "ldr r0, [r4, r3]",
            "bl 0x187f8",
            "ldr r3, [0x0000e038]",
            "mov r1, 0x38",
            "ldr r0, [r4, r3]",
            "bl 0x187f8",
            "ldr r3, [0x0000e03c]",
            "mov r1, 0x38",
            "ldr r0, [r4, r3]",
            "bl 0x187f8",
            "ldr r3, [0x0000e040]",
            "mov r1, 0x38",
            "ldr r0, [r4, r3]",
            "pop {r4, lr}",
            "b 0x187f8",
            "push {r3, r4, r5, r6, r7, lr}",
            "cmp r1, 0x37",
            "ldr r4, [0x0001885c]",
            "mov r6, r0",
            "mov r7, r1",
            "add r4, pc, r4",
            "bhi 0x18830",
            "mov r0, 0x38",
            "bl sym.imp.av_mallocz",
            "mov r5, r0",
            "mov r1, r6",
            "mov r6, r5",
            "mov r2, r7",
            "bl sym.imp.memcpy",
            "ldr r3, [0x00018860]",
            "ldr r0, [r4, r3]",
            "add r4, r4, r3",
            "b 0x18848",
            "add r4, r0, 0x18",
            "ldr r0, [r0, 0x18]",
            "cmp r0, 0",
            "bne 0x18840",
            "str r6, [r4]",
            "str r0, [r6, 0x18]",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "sym.av_open_input_stream": {
        "function_address": "0x00073978",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "sub sp, sp, 0x30",
            "ldr sb, [sp, 0x50]",
            "mov r6, r0",
            "mov r4, r1",
            "mov r7, r2",
            "ldr r5, [0x00073a7c]",
            "mov r8, r3",
            "cmp sb, 0",
            "add r5, pc, r5",
            "bne 0x739bc",
            "mov r1, sb",
            "mov sl, sp",
            "mov sb, sp",
            "mov r0, sp",
            "mov r2, 0x28",
            "bl sym.imp.memset",
            "mov r0, sb",
            "bl fcn.0006bf0c",
            "str r0, [sp, 0x2c]",
            "ldrb r3, [sb, 0x24]",
            "and r3, r3, 8",
            "uxtb r3, r3",
            "cmp r3, 0",
            "ldrne r3, [r6]",
            "strne r3, [sp, 0x28]",
            "bne 0x739f0",
            "bl sym.avformat_alloc_context",
            "str r0, [sp, 0x28]",
            "str r0, [r6]",
            "ldr r0, [sp, 0x28]",
            "cmp r0, 0",
            "mvneq r5, 0xb",
            "beq 0x73a60",
            "cmp r8, 0",
            "cmpne r4, 0",
            "beq 0x73a2c",
            "ldr r3, [r8, 0x24]",
            "tst r3, 1",
            "beq 0x73a2c",
            "ldr r2, [0x00073a80]",
            "mov r1, 0x18",
            "add r2, r5, r2",
            "bl sym.imp.av_log",
            "b 0x73a30",
            "str r4, [r0, 0x10]",
            "add r0, sp, 0x28",
            "mov r1, r7",
            "mov r2, r8",
            "add r3, sp, 0x2c",
            "bl sym.avformat_open_input",
            "subs r5, r0, 0",
            "blt 0x73a60",
            "ldr r3, [sp, 0x28]",
            "ldr r2, [r3, 0x10]",
            "cmp r2, 0",
            "movne r4, r2",
            "str r4, [r3, 0x10]",
            "ldr r3, [sp, 0x28]",
            "add r0, sp, 0x2c",
            "str r3, [r6]",
            "bl sym.imp.av_dict_free",
            "mov r0, r5",
            "add sp, sp, 0x30",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "sym.avpriv_dv_produce_packet": {
        "function_address": "0x0001fc30",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x6c",
            "str r1, [sp, 0x1c]",
            "mov r6, r3",
            "mov r4, r0",
            "mov r1, 0",
            "str r2, [sp, 0x14]",
            "add r0, sp, 0x50",
            "ldr r5, [0x00020400]",
            "mov r2, 0x10",
            "bl sym.imp.memset",
            "cmp r6, 0x1e0",
            "add r5, pc, r5",
            "blt 0x203f0",
            "ldr r0, [r4]",
            "mov r2, r6",
            "ldr r1, [sp, 0x14]",
            "bl sym.imp.avpriv_dv_frame_profile",
            "cmp r0, 0",
            "str r0, [r4]",
            "beq 0x203f0",
            "ldr r3, [r0, 8]",
            "cmp r6, r3",
            "blt 0x203f0",
            "ldr r0, [sp, 0x14]",
            "mov r1, 0x50",
            "bl fcn.0001f61c",
            "cmp r0, 0",
            "movweq r3, 0x8140",
            "streq r0, [sp, 0x20]",
            "streq r0, [r4, r3]",
            "beq 0x1fe90",
            "ldrb r1, [r0, 1]",
            "str r1, [sp, 0x20]",
            "ldrb lr, [r0, 4]",
            "ldrb ip, [r0, 3]",
            "ubfx sl, lr, 3, 3",
            "cmp sl, 2",
            "bls 0x1fcf0",
            "ldr r2, [0x00020404]",
            "mov r1, 0x10",
            "ldr r0, [r4, 4]",
            "mov r3, sl",
            "add r2, r5, r2",
            "bl sym.imp.av_log",
            "mov r2, 0",
            "str r2, [sp, 0x20]",
            "b 0x1fe90",
            "and ip, ip, 0x1f",
            "cmp ip, 3",
            "ble 0x1fd24",
            "ldr r2, [0x00020408]",
            "mov r3, ip",
            "ldr r0, [r4, 4]",
            "mov r1, 0x10",
            "add r2, r5, r2",
            "bl sym.imp.av_log",
            "mov r3, 0",
            "movw r2, 0x8140",
            "str r3, [r4, r2]",
            "b 0x1fe8c",
            "ldr r3, [0x0002040c]",
            "add r6, sp, 0x40",
            "ands lr, lr, 7",
            "movne lr, 1",
            "add r3, r5, r3",
            "add r3, r3, 8",
            "ldm r3, {r0, r1, r2, r3}",
            "stm r6, {r0, r1, r2, r3}",
            "add r3, sp, 0x68",
            "add ip, r3, ip, lsl 2",
            "ldr fp, [ip, -0x28]",
            "cmp fp, 1",
            "movne lr, 0",
            "andeq lr, lr, 1",
            "cmp lr, 0",
            "beq 0x1fd70",
            "cmp sl, 2",
            "moveq fp, 2",
            "movne fp, 1",
            "ldr r3, [0x0002040c]",
            "add ip, r4, 0x140",
            "add r7, r4, 8",
            "mov r6, r4",
            "mov r8, 0",
            "str ip, [sp, 0x18]",
            "add r3, r5, r3",
            "mov sb, r5",
            "add r3, r3, sl, lsl 2",
            "str r3, [sp, 0x24]",
            "b 0x1fe5c",
            "ldr r5, [r7, 4]",
            "cmp r5, 0",
            "bne 0x1fe24",
            "ldr r0, [r4, 4]",
            "mov r1, r5",
            "bl sym.avformat_new_stream",
            "cmp r0, 0",
            "str r0, [r7, 4]",
            "beq 0x1fe64",
            "mov r1, 0x40",
            "mov r2, 1",
            "movw r3, 0x7530",
            "bl sym.avpriv_set_pts_info",
            "ldr r3, [r7, 4]",
            "mov r1, 0x48",
            "mul r0, r1, r8",
            "mov r2, 1",
            "mov lr, 0x10000",
            "ldr r3, [r3, 8]",
            "add r0, r0, 0x20",
            "str r2, [r3, 0xd0]",
            "add r0, r4, r0",
            "str lr, [r3, 0xd4]",
            "bl sym.imp.av_init_packet",
            "ldr r2, [sp, 0x18]",
            "str r5, [r6, 0x34]",
            "add r3, r2, r8, lsl 13",
            "str r3, [r6, 0x30]",
            "ldr r3, [r7, 4]",
            "ldr r3, [r3]",
            "str r3, [r6, 0x38]",
            "ldr r3, [r6, 0x3c]",
            "orr r3, r3, 1",
            "str r3, [r6, 0x3c]",
            "ldr ip, [sp, 0x24]",
            "add r8, r8, 1",
            "ldr r2, [r7, 4]!",
            "add r6, r6, 0x48",
            "mov lr, 2",
            "mov r0, 0",
            "ldr r1, [ip, 0x18]",
            "ldr r3, [r2, 8]",
            "str r1, [r3, 0x3c]",
            "lsl r1, r1, 5",
            "str lr, [r3, 0x40]",
            "str r1, [r3, 4]",
            "mov r1, 0",
            "strd r0, r1, [r2, 0x50]",
            "cmp r8, fp",
            "blt 0x1fd9c",
            "movw r3, 0x8140",
            "add sl, sl, 0x14",
            "str r8, [r4, r3]",
            "mov r5, sb",
            "ldr r3, [r4]",
            "ldr r1, [sp, 0x20]",
            "ldr r3, [r3, sl, lsl 2]",
            "and r2, r1, 0x3f",
            "add r3, r2, r3",
            "lsl r3, r3, 2",
            "str r3, [sp, 0x20]",
            "movw r3, 0x8140",
            "add r8, r4, 0x8100",
            "ldr r3, [r4, r3]",
            "add r2, r4, 0x140",
            "mov r6, r4",
            "add sl, r4, 8",
            "add sb, sp, 0x4c",
            "mov r7, 0",
            "str r3, [sp, 0x18]",
            "movw fp, 0x8148",
            "add r8, r8, 0x48",
            "ldr ip, [0x00020410]",
            "str r2, [sp, 0x24]",
            "b 0x1ff18",
            "ldrd r0, r1, [sp, 0x90]",
            "strd r0, r1, [r6, 0x10]",
            "ldr r3, [r8, 4]",
            "ldr r1, [sp, 0x20]",
            "ldr r0, [r4, fp]",
            "str r1, [r6, -0x14]",
            "umull r0, r1, r0, ip",
            "mla r1, ip, r3, r1",
            "ldr r3, [sl, 4]!",
            "ldr r3, [r3, 8]",
            "ldr r2, [r3, 4]",
            "str ip, [sp, 0x10]",
            "asr r3, r2, 0x1f",
            "bl fcn.0007df14",
            "ldr r2, [sp, 0x24]",
            "ldr ip, [sp, 0x10]",
            "strd r0, r1, [r6, -0x28]",
            "add r3, r2, r7, lsl 13",
            "add r7, r7, 1",
            "str r3, [sb, 4]!",
            "ldr r3, [sp, 0x18]",
            "add r6, r6, 0x48",
            "cmp r7, r3",
            "blt 0x1fec8",
            "cmp r3, 0",
            "beq 0x20268",
            "ldr r0, [sp, 0x14]",
            "mov r1, 0x50",
            "bl fcn.0001f61c",
            "cmp r0, 0",
            "ldr r6, [r4]",
            "beq 0x20268",
            "ldrb r3, [r0, 4]",
            "ldrb r1, [r0, 1]",
            "and ip, r3, 7",
            "cmp ip, 1",
            "str ip, [sp, 0x18]",
            "bgt 0x20268",
            "ubfx r3, r3, 3, 3",
            "cmp r3, 2",
            "bhi 0x20268",
            "add r2, r3, 0x14",
            "and r3, r1, 0x3f",
            "ldr r2, [r6, r2, lsl 2]",
            "add r3, r3, r2",
            "lsl r3, r3, 2",
            "str r3, [sp, 0x30]",
            "ldr r3, [r6, 0xc]",
            "add r3, r3, r3, lsr 31",
            "asr r3, r3, 1",
            "str r3, [sp, 0x28]",
            "ldr r3, [r6, 0x20]",
            "cmp r3, 0x2d0",
            "movne sb, 0",
            "bne 0x1ffb8",
            "ldr lr, [sp, 0x14]",
            "ldrb r3, [lr, 1]",
            "tst r3, 0xc",
            "moveq sb, 2",
            "movne sb, 0",
            "mov r0, 0",
            "ldr sl, [sp, 0x14]",
            "str r0, [sp, 0x2c]",
            "str r5, [sp, 0x24]",
            "str r4, [sp, 0x34]",
            "b 0x20250",
            "cmp sb, 3",
            "bls 0x1fff0",
            "ldr r5, [sp, 0x24]",
            "ldr r3, [0x00020414]",
            "add r3, r5, r3",
            "str r3, [sp]",
            "mov r3, 0x8c",
            "b 0x20058",
            "add r1, sp, 0x68",
            "add r3, r1, sb, lsl 2",
            "ldr r4, [r3, -0x18]",
            "cmp r4, 0",
            "beq 0x20260",
            "add sb, sb, 1",
            "mov fp, 0",
            "uxtb sb, sb",
            "mov r8, fp",
            "b 0x20238",
            "ldr r3, [sp, 0x18]",
            "ldr r2, [sp, 0x28]",
            "str sl, [sp, 0x38]",
            "add sl, sl, 0x1e0",
            "cmp r8, r2",
            "movne r3, 0",
            "andeq r3, r3, 1",
            "cmp r3, 0",
            "beq 0x20098",
            "cmp sb, 3",
            "bls 0x2007c",
            "ldr r5, [sp, 0x24]",
            "ldr r3, [0x00020414]",
            "add r3, r5, r3",
            "str r3, [sp]",
            "mov r3, 0x96",
            "str r3, [sp, 4]",
            "mov r0, 0",
            "ldr r2, [0x00020418]",
            "mov r1, 8",
            "ldr r3, [0x0002041c]",
            "add r2, r5, r2",
            "add r3, r5, r3",
            "bl sym.imp.av_log",
            "bl sym.imp.abort",
            "add ip, sp, 0x68",
            "add r3, ip, sb, lsl 2",
            "add sb, sb, 1",
            "uxtb sb, sb",
            "ldr r4, [r3, -0x18]",
            "cmp r4, 0",
            "beq 0x20244",
            "mov r7, 0",
            "str sb, [sp, 0x3c]",
            "b 0x20218",
            "ldr lr, [sp, 0x18]",
            "cmp lr, 0",
            "bne 0x20110",
            "ldr r2, [r6, 0x70]",
            "sub r3, r5, 8",
            "ldr r1, [r6, 0x4c]",
            "asr r3, r3, 1",
            "ldr r0, [sp, 0x30]",
            "add r2, r2, fp",
            "ldrb r2, [r2, r7]",
            "mla r3, r1, r3, r2",
            "lsl r1, r3, 1",
            "cmp r1, r0",
            "bge 0x201fc",
            "add r2, sl, r5",
            "add r1, r1, 1",
            "ldrb r2, [r2, 1]",
            "add r0, r4, r1",
            "strb r2, [r4, r3, lsl 1]",
            "ldrb r2, [sl, r5]",
            "cmp r2, 0x80",
            "strb r2, [r4, r1]",
            "bne 0x201fc",
            "ldrb r3, [r4, r3, lsl 1]",
            "cmp r3, 0",
            "strbeq lr, [r0]",
            "b 0x201fc",
            "ldrb r0, [sl, r5]",
            "add r3, sl, r5",
            "ldrb r2, [r3, 2]",
            "ldrb r3, [r3, 1]",
            "lsl r0, r0, 4",
            "orr r0, r0, r2, lsr 4",
            "and r2, r2, 0xf",
            "orr r3, r2, r3, lsl 4",
            "cmp r0, 0x800",
            "moveq sb, 0",
            "beq 0x2014c",
            "str r3, [sp, 0x10]",
            "bl fcn.0001f5bc",
            "ldr r3, [sp, 0x10]",
            "mov sb, r0",
            "cmp r3, 0x800",
            "moveq r2, 0",
            "beq 0x20164",
            "mov r0, r3",
            "bl fcn.0001f5bc",
            "mov r2, r0",
            "mov r0, r8",
            "ldr r1, [sp, 0x28]",
            "str r2, [sp, 0xc]",
            "bl fcn.0007d340",
            "sub r0, r5, 8",
            "mov r3, r1",
            "mov r1, 3",
            "str r3, [sp, 0x10]",
            "bl fcn.0007d264",
            "ldr r3, [sp, 0x10]",
            "ldr lr, [r6, 0x70]",
            "ldr r1, [r6, 0x4c]",
            "ldr r2, [sp, 0xc]",
            "add ip, r3, r3, lsl 3",
            "add ip, lr, ip",
            "ldr lr, [sp, 0x30]",
            "ldrb ip, [ip, r7]",
            "mla r1, r1, r0, ip",
            "lsl ip, r1, 1",
            "cmp ip, lr",
            "bge 0x201fc",
            "strb sb, [r4, r1, lsl 1]",
            "lsr sb, sb, 8",
            "add ip, r4, ip",
            "strb sb, [ip, 1]",
            "add r5, r5, 1",
            "ldr ip, [sp, 0x28]",
            "ldr r1, [r6, 0x4c]",
            "add r3, r3, ip",
            "ldr ip, [r6, 0x70]",
            "add r3, r3, r3, lsl 3",
            "add r3, ip, r3",
            "ldrb r3, [r3, r7]",
            "mla r0, r1, r0, r3",
            "strb r2, [r4, r0, lsl 1]",
            "add r0, r4, r0, lsl 1",
            "lsr r2, r2, 8",
            "strb r2, [r0, 1]",
            "add r5, r5, 2",
            "cmp r5, 0x4f",
            "ble 0x200a4",
            "add r7, r7, 1",
            "add sl, sl, 0x500",
            "cmp r7, 9",
            "beq 0x20220",
            "mov r5, 8",
            "b 0x200a4",
            "ldr lr, [sp, 0x38]",
            "add r8, r8, 1",
            "ldr sb, [sp, 0x3c]",
            "add fp, fp, 9",
            "add sl, lr, 0x2ec0",
            "add sl, sl, 0x20",
            "ldr r3, [r6, 0xc]",
            "cmp r8, r3",
            "blt 0x20018",
            "ldr r0, [sp, 0x2c]",
            "add r0, r0, 1",
            "str r0, [sp, 0x2c]",
            "ldr r3, [r6, 0x10]",
            "ldr r1, [sp, 0x2c]",
            "cmp r1, r3",
            "blt 0x1ffd0",
            "ldr r5, [sp, 0x24]",
            "ldr r4, [sp, 0x34]",
            "ldr r3, [r4]",
            "ldr r2, [r3, 0x20]",
            "cmp r2, 0x2d0",
            "bne 0x202b4",
            "ldr ip, [sp, 0x14]",
            "ldrb r2, [ip, 1]",
            "ands r2, r2, 0xc",
            "movne r2, 0",
            "strne r2, [r4, 0x10c]",
            "strne r2, [r4, 0xc4]",
            "bne 0x202cc",
            "str r2, [r4, 0x7c]",
            "str r2, [r4, 0x34]",
            "movw r2, 0x8148",
            "ldrd r0, r1, [r4, r2]",
            "ldr lr, [sp, 0x20]",
            "adds r0, r0, lr",
            "adc r1, r1, lr, asr 31",
            "b 0x202c8",
            "movw r2, 0x8148",
            "ldr ip, [sp, 0x20]",
            "ldrd r0, r1, [r4, r2]",
            "adds r0, r0, ip",
            "adc r1, r1, ip, asr 31",
            "strd r0, r1, [r4, r2]",
            "ldr r0, [r4, 8]",
            "mov r1, 0x40",
            "ldr r2, [r3, 0x14]",
            "ldr r3, [r3, 0x18]",
            "ldr r7, [r0, 8]",
            "bl sym.avpriv_set_pts_info",
            "ldr r8, [r4]",
            "add r3, r7, 0x20",
            "add r2, r8, 0x14",
            "ldm r2, {r0, r1}",
            "stm r3, {r0, r1}",
            "mov r1, 0x61",
            "ldr r0, [sp, 0x14]",
            "bl fcn.0001f61c",
            "ldr lr, [sp, 0x14]",
            "cmp r0, 0",
            "ldrb r3, [lr, 4]",
            "beq 0x20340",
            "ldrb r0, [r0, 2]",
            "and r0, r0, 7",
            "cmp r0, 2",
            "moveq r0, 1",
            "beq 0x20340",
            "tst r3, 7",
            "movne r0, 0",
            "bne 0x20340",
            "cmp r0, 7",
            "movne r0, 0",
            "moveq r0, 1",
            "add r0, r0, 5",
            "ldr r3, [r4, 8]",
            "add r0, r8, r0, lsl 3",
            "ldr r6, [r8, 8]",
            "add r8, r8, 0x14",
            "ldm r0, {r0, r1}",
            "add r3, r3, 0x130",
            "mov r2, sp",
            "stm r3, {r0, r1}",
            "ldr r3, [0x0002040c]",
            "add r5, r5, r3",
            "add r3, sp, 0x60",
            "add r5, r5, 0x24",
            "ldm r5, {r0, r1}",
            "stm r3, {r0, r1}",
            "ldm r8, {r0, r1}",
            "stm r2, {r0, r1}",
            "mov r0, r6",
            "asr r1, r0, 0x1f",
            "ldm r3, {r2, r3}",
            "bl sym.imp.av_rescale_q",
            "str r0, [r7, 4]",
            "ldr r0, [sp, 0x1c]",
            "bl sym.imp.av_init_packet",
            "ldr ip, [sp, 0x1c]",
            "ldr r3, [sp, 0x14]",
            "ldrd r0, r1, [sp, 0x90]",
            "str r6, [ip, 0x14]",
            "str r3, [ip, 0x10]",
            "ldr r3, [ip, 0x1c]",
            "strd r0, r1, [ip, 0x38]",
            "movw r1, 0x8144",
            "ldr r0, [r4, r1]",
            "orr r3, r3, 1",
            "str r3, [ip, 0x1c]",
            "ldr r3, [r4, 8]",
            "ldr r3, [r3, 4]",
            "str r3, [ip, 0x18]",
            "mov r2, r0",
            "asr r3, r2, 0x1f",
            "add r0, r0, 1",
            "strd r2, r3, [ip]",
            "str r0, [r4, r1]",
            "b 0x203f4",
            "mvn r6, 0",
            "mov r0, r6",
            "add sp, sp, 0x6c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.imp.avpriv_dv_frame_profile": {
        "function_address": "0x000097c8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0xc58]!"
        ]
    },
    "fcn.0001f61c": {
        "function_address": "0x0001f61c",
        "instructions": [
            "cmp r1, 0x50",
            "beq 0x1f648",
            "bhi 0x1f634",
            "cmp r1, 0x13",
            "bne 0x1f678",
            "b 0x1f658",
            "cmp r1, 0x51",
            "beq 0x1f660",
            "cmp r1, 0x61",
            "bne 0x1f678",
            "b 0x1f650",
            "movw r3, 0x10e3",
            "b 0x1f664",
            "movw r3, 0x1c5",
            "b 0x1f664",
            "mov r3, 0x56",
            "b 0x1f664",
            "movw r3, 0x15e3",
            "ldrb r2, [r0, r3]",
            "cmp r2, r1",
            "addeq r0, r0, r3",
            "movne r0, 0",
            "bx lr",
            "mov r0, 0",
            "bx lr"
        ]
    },
    "fcn.0007df14": {
        "function_address": "0x0007df14",
        "instructions": [
            "cmp r3, 0",
            "cmpeq r2, 0",
            "bne 0x7df34",
            "cmp r1, 0",
            "cmpeq r0, 0",
            "mvnne r1, 0",
            "mvnne r0, 0",
            "b fcn.0007df50",
            "sub sp, sp, 8",
            "push {sp, lr}",
            "bl fcn.0007df9c",
            "ldr lr, [sp, 4]",
            "add sp, sp, 8",
            "pop {r2, r3}",
            "bx lr"
        ]
    },
    "sym.imp.abort": {
        "function_address": "0x00009e94",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x7d0]!"
        ]
    },
    "fcn.0001f5bc": {
        "function_address": "0x0001f5bc",
        "instructions": [
            "cmp r0, 0x800",
            "orrhs r0, r0, 0xf000",
            "ubfx r3, r0, 8, 4",
            "sub r2, r3, 2",
            "uxth r2, r2",
            "cmp r2, 0xb",
            "bxhi lr",
            "cmp r3, 7",
            "bhi 0x1f5fc",
            "sub r3, r3, 1",
            "mvn r2, 0xff",
            "uxth r3, r3",
            "mla r0, r2, r3, r0",
            "lsl r0, r0, r3",
            "uxth r0, r0",
            "bx lr",
            "rsb r3, r3, 0xe",
            "add r0, r0, 1",
            "uxth r3, r3",
            "add r0, r0, r3, lsl 8",
            "lsl r0, r0, r3",
            "sub r0, r0, 1",
            "uxth r0, r0",
            "bx lr"
        ]
    },
    "fcn.0007d340": {
        "function_address": "0x0007d340",
        "instructions": [
            "cmp r1, 0",
            "beq 0x7d330",
            "push {r0, r1, lr}",
            "bl fcn.0007d26c",
            "pop {r1, r2, lr}",
            "mul r3, r2, r0",
            "sub r1, r1, r3",
            "bx lr"
        ]
    },
    "fcn.0007d264": {
        "function_address": "0x0007d264",
        "instructions": [
            "cmp r1, 0",
            "beq 0x7d330",
            "cmp r0, 0",
            "mvngt r0, 0x80000000",
            "movlt r0, 0x80000000",
            "b fcn.0007df50"
        ]
    },
    "sym.url_open": {
        "function_address": "0x00018bd0",
        "instructions": [
            "push {r0, r1, r2, lr}",
            "mov r3, 0",
            "str r3, [sp]",
            "bl sym.ffurl_open",
            "pop {r1, r2, r3, pc}"
        ]
    },
    "sym.url_fprintf": {
        "function_address": "0x00019648",
        "instructions": [
            "push {r1, r2, r3}",
            "mov r1, 0x1000",
            "push {r4, r5, r6, lr}",
            "sub sp, sp, 0x1000",
            "sub sp, sp, 0xc",
            "mov r5, r0",
            "add r3, sp, 0x1000",
            "add r4, sp, 4",
            "add r3, r3, 0x20",
            "add r2, sp, 0x1000",
            "str r3, [r2, 4]",
            "mov r0, r4",
            "ldr r2, [r2, 0x1c]",
            "bl sym.imp.vsnprintf",
            "mov r6, r0",
            "mov r0, r4",
            "bl sym.imp.strlen",
            "mov r1, r4",
            "mov r2, r0",
            "mov r0, r5",
            "bl sym.avio_write",
            "mov r0, r6",
            "add sp, sp, 0xc",
            "add sp, sp, 0x1000",
            "pop {r4, r5, r6, lr}",
            "add sp, sp, 0xc",
            "bx lr"
        ]
    },
    "sym.imp.vsnprintf": {
        "function_address": "0x00009eb8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x7b8]!"
        ]
    },
    "sym.avformat_write_header": {
        "function_address": "0x00071f8c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "subs sl, r1, 0",
            "ldr r5, [0x000724d8]",
            "sub sp, sp, 0x54",
            "mov r2, 0",
            "mov r6, r0",
            "str r2, [sp, 0x4c]",
            "add r5, pc, r5",
            "beq 0x71fbc",
            "add r0, sp, 0x4c",
            "ldr r1, [sl]",
            "bl sym.imp.av_dict_copy",
            "add r4, sp, 0x4c",
            "mov r0, r6",
            "mov r1, r4",
            "bl sym.imp.av_opt_set_dict",
            "subs r7, r0, 0",
            "blt 0x724c4",
            "ldr r0, [r6, 0xc]",
            "cmp r0, 0",
            "beq 0x7200c",
            "ldr r3, [r6, 8]",
            "ldr r3, [r3, 0x40]",
            "cmp r3, 0",
            "beq 0x7200c",
            "ldr r2, [r0]",
            "cmp r2, r3",
            "bne 0x7200c",
            "mov r1, r4",
            "bl sym.imp.av_opt_set_dict",
            "subs r7, r0, 0",
            "blt 0x724c4",
            "ldr r8, [r6, 0x14]",
            "cmp r8, 0",
            "movne r8, 0",
            "bne 0x722f0",
            "ldr r3, [r6, 8]",
            "ldr r3, [r3, 0x28]",
            "tst r3, 0x1000",
            "bne 0x722f0",
            "mov r0, r6",
            "mov r1, 0x10",
            "ldr r2, [0x000724dc]",
            "b 0x72074",
            "ldr r3, [r6, 0x18]",
            "ldr r7, [r3, r8, lsl 2]",
            "ldr r4, [r7, 8]",
            "ldr r3, [r4, 0xd0]",
            "cmp r3, 0",
            "beq 0x720b4",
            "cmp r3, 1",
            "bne 0x721e4",
            "ldr r3, [r4, 0x3c]",
            "cmp r3, 0",
            "bgt 0x72084",
            "ldr r2, [0x000724e0]",
            "mov r0, r6",
            "mov r1, 0x10",
            "add r2, r5, r2",
            "mvn r7, 0x15",
            "bl sym.imp.av_log",
            "b 0x724c4",
            "ldr r3, [r4, 0x100]",
            "cmp r3, 0",
            "bne 0x721e4",
            "ldr r3, [r4, 0x40]",
            "ldr r0, [r4, 0xd4]",
            "str r3, [sp, 0xc]",
            "bl sym.imp.av_get_bits_per_sample",
            "ldr r3, [sp, 0xc]",
            "mul r3, r3, r0",
            "asr r3, r3, 3",
            "str r3, [r4, 0x100]",
            "b 0x721e4",
            "ldr r3, [r4, 0x20]",
            "cmp r3, 0",
            "ble 0x720cc",
            "ldr r3, [r4, 0x24]",
            "cmp r3, 0",
            "bgt 0x720dc",
            "mov r0, r6",
            "mov r1, 0x10",
            "ldr r2, [0x000724e4]",
            "b 0x72074",
            "ldr r3, [r4, 0x28]",
            "cmp r3, 0",
            "ble 0x720f4",
            "ldr r3, [r4, 0x2c]",
            "cmp r3, 0",
            "bgt 0x72110",
            "ldr r3, [r6, 8]",
            "ldr r3, [r3, 0x28]",
            "tst r3, 0x800",
            "moveq r0, r6",
            "moveq r1, 0x10",
            "ldreq r2, [0x000724e8]",
            "beq 0x72074",
            "add r3, r7, 0x130",
            "ldm r3, {r0, r1}",
            "add r3, r4, 0x17c",
            "ldm r3, {r2, r3}",
            "bl fcn.0006ace0",
            "cmp r0, 0",
            "beq 0x721e4",
            "ldr r0, [r7, 0x130]",
            "bl fcn.0007d690",
            "strd r0, r1, [sp, 0x10]",
            "ldr r0, [r7, 0x134]",
            "bl fcn.0007d690",
            "mov r2, r0",
            "mov r3, r1",
            "ldrd r0, r1, [sp, 0x10]",
            "bl fcn.0007d9d8",
            "strd r0, r1, [sp, 0x10]",
            "ldr r0, [r4, 0x17c]",
            "bl fcn.0007d690",
            "strd r0, r1, [sp, 0x18]",
            "ldr r0, [r4, 0x180]",
            "bl fcn.0007d690",
            "mov r2, r0",
            "mov r3, r1",
            "ldrd r0, r1, [sp, 0x18]",
            "bl fcn.0007d9d8",
            "strd r0, r1, [sp, 0x20]",
            "ldrd r2, r3, [sp, 0x20]",
            "ldrd r0, r1, [sp, 0x10]",
            "bl fcn.0007d3bc",
            "mov r2, 0",
            "mov r3, 0",
            "strd r0, r1, [sp, 0x18]",
            "bl fcn.0007dce0",
            "cmp r0, 0",
            "bne 0x721b0",
            "ldrd r0, r1, [sp, 0x20]",
            "ldrd r2, r3, [sp, 0x10]",
            "bl fcn.0007d3bc",
            "strd r0, r1, [sp, 0x18]",
            "ldr r2, [0x000724ec]",
            "ldr r3, [0x000724f0]",
            "ldrd r0, r1, [sp, 0x10]",
            "bl fcn.0007d76c",
            "mov r2, r0",
            "mov r3, r1",
            "ldrd r0, r1, [sp, 0x18]",
            "bl fcn.0007dcf4",
            "cmp r0, 0",
            "movne r0, r6",
            "movne r1, 0x10",
            "ldrne r2, [0x000724f4]",
            "bne 0x72074",
            "ldr r3, [r6, 8]",
            "ldr r0, [r3, 0x34]",
            "cmp r0, 0",
            "beq 0x722b4",
            "ldr r3, [r7, 8]",
            "ldr r2, [r3, 0xd8]",
            "cmp r2, 0",
            "beq 0x72234",
            "ldr r1, [r3, 0xd4]",
            "cmp r1, 0xe",
            "bne 0x72234",
            "bl sym.av_codec_get_tag",
            "cmp r0, 0",
            "bne 0x72234",
            "mov r0, sb",
            "add r1, r7, 8",
            "bl fcn.0006d1f4",
            "cmp r0, 0",
            "ldreq r3, [r7, 8]",
            "streq r0, [r3, 0xd8]",
            "ldr r4, [r7, 8]",
            "ldr r3, [r4, 0xd8]",
            "cmp r3, 0",
            "beq 0x722a0",
            "mov r0, sb",
            "add r1, r7, 8",
            "bl fcn.0006d1f4",
            "cmp r0, 0",
            "bne 0x722b4",
            "ldr r3, [r7, 8]",
            "add r4, sp, 0x2c",
            "mov r0, r4",
            "mov r1, 0x20",
            "ldr r2, [r3, 0xd8]",
            "bl sym.imp.av_get_codec_tag_string",
            "ldr r3, [r7, 8]",
            "mov r0, r6",
            "mov r1, 0x10",
            "ldr r2, [r3, 0xd8]",
            "str r2, [sp]",
            "ldr r2, [0x000724f8]",
            "ldr r3, [r3, 0xd4]",
            "add r2, r5, r2",
            "str r3, [sp, 4]",
            "mov r3, r4",
            "bl sym.imp.av_log",
            "b 0x724c0",
            "ldr r3, [r6, 8]",
            "ldr r1, [r4, 0xd4]",
            "ldr r0, [r3, 0x34]",
            "bl sym.av_codec_get_tag",
            "str r0, [r4, 0xd8]",
            "ldr r3, [r6, 8]",
            "ldr r3, [r3, 0x28]",
            "tst r3, 0x40",
            "beq 0x722e8",
            "ldr r3, [r7, 8]",
            "ldr r3, [r3, 0xc]",
            "tst r3, 0x400000",
            "bne 0x722e8",
            "mov r0, r6",
            "mov r1, 0x18",
            "mov r2, fp",
            "mov r3, r8",
            "bl sym.imp.av_log",
            "add r8, r8, 1",
            "b 0x722fc",
            "ldr fp, [0x000724fc]",
            "add sb, r6, 8",
            "add fp, r5, fp",
            "ldr r3, [r6, 0x14]",
            "cmp r8, r3",
            "blo 0x7203c",
            "ldr r3, [r6, 0xc]",
            "cmp r3, 0",
            "bne 0x72360",
            "ldr r3, [r6, 8]",
            "ldr r0, [r3, 0x10]",
            "cmp r0, 0",
            "ble 0x72360",
            "bl sym.imp.av_mallocz",
            "cmp r0, 0",
            "str r0, [r6, 0xc]",
            "beq 0x724b8",
            "ldr r2, [r6, 8]",
            "ldr r2, [r2, 0x40]",
            "cmp r2, 0",
            "beq 0x72360",
            "str r2, [r0]",
            "bl sym.imp.av_opt_set_defaults",
            "ldr r0, [r6, 0xc]",
            "add r1, sp, 0x4c",
            "bl sym.imp.av_opt_set_dict",
            "subs r7, r0, 0",
            "blt 0x724c4",
            "ldr r3, [r6, 0x14]",
            "cmp r3, 0",
            "beq 0x723a0",
            "ldr r3, [r6, 0x18]",
            "ldr r3, [r3]",
            "ldr r3, [r3, 8]",
            "ldr r3, [r3, 0xc]",
            "ands r3, r3, 0x800000",
            "bne 0x723a0",
            "ldr r1, [0x00072500]",
            "add r0, r6, 0x4b0",
            "ldr r2, [0x00072504]",
            "add r0, r0, 8",
            "add r1, r5, r1",
            "add r2, r5, r2",
            "bl sym.imp.av_dict_set",
            "ldr r3, [r6, 8]",
            "ldr r3, [r3, 0x1c]",
            "cmp r3, 0",
            "bne 0x723c0",
            "ldr sb, [r6, 0x14]",
            "mov r8, 0",
            "mov r5, sl",
            "b 0x72488",
            "mov r0, r6",
            "blx r3",
            "subs r7, r0, 0",
            "bge 0x723b0",
            "b 0x724c4",
            "ldr r3, [r6, 0x18]",
            "ldr r4, [r3, r8, lsl 2]",
            "ldr r3, [r4, 8]",
            "ldr r2, [r3, 0xd0]",
            "cmp r2, 0",
            "ldreq sl, [r3, 0x24]",
            "beq 0x723fc",
            "cmp r2, 1",
            "ldreq sl, [r3, 0x3c]",
            "bne 0x72484",
            "ldr r3, [r4, 0x38]",
            "smull sl, fp, sl, r3",
            "cmp fp, 0",
            "bgt 0x72418",
            "bne 0x724c0",
            "cmp sl, 0",
            "beq 0x724c0",
            "asrs r3, fp, 1",
            "rrx r2, sl",
            "cmp fp, r3",
            "strd r2, r3, [sp, 0x10]",
            "bgt 0x72464",
            "bne 0x72438",
            "cmp sl, r2",
            "bhi 0x72464",
            "ldrd r0, r1, [sp, 0x10]",
            "mov r2, sl",
            "mov r3, fp",
            "bl fcn.0007ded0",
            "mov r2, sl",
            "strd r0, r1, [sp, 0x18]",
            "mov r3, fp",
            "ldrd r0, r1, [sp, 0x10]",
            "bl fcn.0007ded0",
            "strd r2, r3, [sp, 0x10]",
            "b 0x72470",
            "mov r2, 0",
            "mov r3, 0",
            "strd r2, r3, [sp, 0x18]",
            "ldrd r2, r3, [sp, 0x18]",
            "strd sl, fp, [r4, 0x30]",
            "strd r2, r3, [r4, 0x20]",
            "ldrd r2, r3, [sp, 0x10]",
            "strd r2, r3, [r4, 0x28]",
            "add r8, r8, 1",
            "cmp r8, sb",
            "blo 0x723d4",
            "cmp r5, 0",
            "mov sl, r5",
            "moveq r7, r5",
            "beq 0x724cc",
            "mov r0, r5",
            "mov r7, 0",
            "bl sym.imp.av_dict_free",
            "ldr r3, [sp, 0x4c]",
            "str r3, [r5]",
            "b 0x724cc",
            "mvn r7, 0xb",
            "b 0x724c4",
            "ldr r7, [0x00072508]",
            "add r0, sp, 0x4c",
            "bl sym.imp.av_dict_free",
            "mov r0, r7",
            "add sp, sp, 0x54",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0006ace0": {
        "function_address": "0x0006ace0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x14",
            "add ip, sp, 8",
            "mov r7, r3",
            "mov sl, r3",
            "asr fp, sl, 0x1f",
            "umull r4, r5, r7, r0",
            "stm ip, {r0, r1}",
            "mov r1, sp",
            "stm r1, {r2, r3}",
            "mov r1, r2",
            "mov r2, r0",
            "asr r3, r2, 0x1f",
            "ldr r6, [sp, 0xc]",
            "mul r3, r7, r3",
            "mov ip, r0",
            "mov r8, r6",
            "asr sb, r8, 0x1f",
            "mla r3, r0, fp, r3",
            "add r5, r3, r5",
            "mov r2, r1",
            "asr r3, r2, 0x1f",
            "mul r0, r6, r3",
            "umull r2, r3, r6, r1",
            "mla r0, r1, sb, r0",
            "add r3, r0, r3",
            "subs r2, r4, r2",
            "sbc r3, r5, r3",
            "orrs r0, r2, r3",
            "beq 0x6ad70",
            "eor sb, sb, fp",
            "eor r8, r8, sl",
            "eor r3, r3, sb",
            "asr r0, r3, 0x1f",
            "orr r0, r0, 1",
            "b 0x6ad9c",
            "cmp r7, 0",
            "beq 0x6ad80",
            "cmp r6, 0",
            "bne 0x6ad9c",
            "cmp ip, 0",
            "beq 0x6ad98",
            "cmp r1, 0",
            "asrne ip, ip, 0x1f",
            "addne r0, ip, r1, lsr 31",
            "bne 0x6ad9c",
            "mov r0, 0x80000000",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0007dce0": {
        "function_address": "0x0007dce0",
        "instructions": [
            "str lr, [sp, -8]!",
            "bl fcn.0007dc74",
            "movls r0, 1",
            "movhi r0, 0",
            "ldr pc, [sp], 8"
        ]
    },
    "fcn.0006d1f4": {
        "function_address": "0x0006d1f4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r6, 0",
            "mov r4, r0",
            "mov r7, r1",
            "mov sl, r6",
            "mov r8, r6",
            "b 0x6d26c",
            "ldr r0, [r5, -4]",
            "bl sym.imp.avpriv_toupper4",
            "ldr r3, [r7]",
            "mov sb, r0",
            "ldr r0, [r3, 0xd8]",
            "bl sym.imp.avpriv_toupper4",
            "cmp sb, r0",
            "bne 0x6d244",
            "ldr r3, [r7]",
            "ldr r8, [r5, -8]",
            "ldr r3, [r3, 0xd4]",
            "cmp r8, r3",
            "beq 0x6d2a4",
            "ldr r3, [r7]",
            "ldr r2, [r5, -8]",
            "ldr r3, [r3, 0xd4]",
            "cmp r2, r3",
            "ldreq sl, [r5, -4]",
            "add r5, r5, 8",
            "ldr r3, [r5, -8]",
            "cmp r3, 0",
            "bne 0x6d210",
            "add r6, r6, 4",
            "ldr r3, [r4]",
            "ldr r3, [r3, 0x34]",
            "ldr r0, [r3, r6]",
            "cmp r0, 0",
            "addne r5, r0, 8",
            "bne 0x6d25c",
            "cmp r8, 0",
            "popne {r4, r5, r6, r7, r8, sb, sl, pc}",
            "cmp sl, 0",
            "ldrne r3, [r7]",
            "ldrne r0, [r3, 0xe8]",
            "lsrne r0, r0, 0x1f",
            "popne {r4, r5, r6, r7, r8, sb, sl, pc}",
            "b 0x6d2ac",
            "mov r0, 1",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}",
            "mov r0, 1",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "sym.imp.av_get_codec_tag_string": {
        "function_address": "0x00009dd4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x850]!"
        ]
    },
    "sym.avformat_network_deinit": {
        "function_address": "0x00074d4c",
        "instructions": [
            "push {r3, lr}",
            "bl fcn.00045c4c",
            "bl fcn.00045b98",
            "mov r0, 0",
            "pop {r3, pc}"
        ]
    },
    "fcn.00045b98": {
        "function_address": "0x00045b98",
        "instructions": [
            "push {r4, lr}",
            "bl sym.imp.avpriv_lock_avformat",
            "pop {r4, lr}",
            "b sym.imp.avpriv_unlock_avformat"
        ]
    },
    "sym.url_ftell": {
        "function_address": "0x0001a604",
        "instructions": [
            "mov r3, 1",
            "push {r0, r1, r2, lr}",
            "mov r2, 0",
            "str r3, [sp]",
            "mov r3, 0",
            "bl sym.avio_seek",
            "add sp, sp, 0xc",
            "ldm sp!, {pc}"
        ]
    },
    "sym.av_add_index_entry": {
        "function_address": "0x0006eb78",
        "instructions": [
            "push {r4, r5, lr}",
            "sub sp, sp, 0x24",
            "strd r2, r3, [sp]",
            "mov ip, r0",
            "add r1, ip, 0x84",
            "add r2, ip, 0x88",
            "ldr r3, [sp, 0x38]",
            "add r0, r0, 0x80",
            "ldrd r4, r5, [sp, 0x30]",
            "str r3, [sp, 0x10]",
            "ldr r3, [sp, 0x3c]",
            "strd r4, r5, [sp, 8]",
            "str r3, [sp, 0x14]",
            "ldr r3, [sp, 0x40]",
            "str r3, [sp, 0x18]",
            "bl fcn.0006e9ac",
            "add sp, sp, 0x24",
            "pop {r4, r5, pc}"
        ]
    },
    "fcn.0006e9ac": {
        "function_address": "0x0006e9ac",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x14",
            "ldr r3, [sp, 0x3c]",
            "mov r4, r1",
            "mov sl, r0",
            "ldr r5, [0x0006eb64]",
            "str r3, [sp, 0xc]",
            "ldr r3, [r1]",
            "ldr r1, [0x0006eb68]",
            "add r5, pc, r5",
            "ldr fp, [sp, 0x38]",
            "add r3, r3, 1",
            "ldr r6, [sp, 0x40]",
            "cmp r3, r1",
            "ldr sb, [sp, 0x44]",
            "bhi 0x6eb54",
            "mov r8, 0x18",
            "mov r1, r2",
            "ldr r0, [r0]",
            "mul r2, r8, r3",
            "bl sym.imp.av_fast_realloc",
            "subs r7, r0, 0",
            "beq 0x6eb54",
            "mov r3, 4",
            "str r7, [sl]",
            "ldr r1, [r4]",
            "mov r2, r6",
            "str r3, [sp]",
            "mov r3, sb",
            "bl fcn.0006e890",
            "subs sl, r0, 0",
            "bge 0x6ea84",
            "ldr sl, [r4]",
            "cmp sl, 0",
            "add r3, sl, 1",
            "str r3, [r4]",
            "mla r8, r8, sl, r7",
            "beq 0x6eb18",
            "ldr r3, [r8, -0xc]",
            "cmp r3, sb",
            "blt 0x6eb18",
            "bne 0x6ea60",
            "ldr r3, [r8, -0x10]",
            "cmp r3, r6",
            "blo 0x6eb18",
            "ldr r3, [0x0006eb6c]",
            "movw r2, 0x5f2",
            "ldr r0, [0x0006eb70]",
            "ldr r1, [0x0006eb74]",
            "add r3, r5, r3",
            "add r0, r5, r0",
            "add r3, r3, 0x4c",
            "add r1, r5, r1",
            "bl sym.imp.__assert",
            "mul r3, r8, sl",
            "add r8, r7, r3",
            "ldr r2, [r8, 8]",
            "ldr r1, [r8, 0xc]",
            "cmp r2, r6",
            "bne 0x6eaa4",
            "cmp r1, sb",
            "beq 0x6eae8",
            "cmp r1, sb",
            "bgt 0x6eab8",
            "bne 0x6eb54",
            "cmp r2, r6",
            "bls 0x6eb54",
            "ldr r2, [r4]",
            "mov r3, 0x18",
            "add r0, sl, 1",
            "mov r1, r8",
            "mla r0, r3, r0, r7",
            "rsb r2, sl, r2",
            "mul r2, r3, r2",
            "bl sym.imp.memmove",
            "ldr r3, [r4]",
            "add r3, r3, 1",
            "str r3, [r4]",
            "b 0x6eb18",
            "ldr r3, [r7, r3]",
            "cmp r3, fp",
            "bne 0x6eb18",
            "ldr r3, [r8, 4]",
            "ldr r2, [sp, 0xc]",
            "cmp r3, r2",
            "bne 0x6eb18",
            "ldr r2, [sp, 0x4c]",
            "ldr r3, [r8, 0x14]",
            "cmp r2, r3",
            "movlt r2, r3",
            "str r2, [sp, 0x4c]",
            "ldr r3, [sp, 0xc]",
            "ldr r2, [sp, 0x4c]",
            "str fp, [r8]",
            "str r3, [r8, 4]",
            "str r2, [r8, 0x14]",
            "ldr r3, [r8, 0x10]",
            "ldr r2, [sp, 0x48]",
            "str r6, [r8, 8]",
            "str sb, [r8, 0xc]",
            "bfi r3, r2, 2, 0x1e",
            "str r3, [r8, 0x10]",
            "ldr r2, [sp, 0x50]",
            "bfi r3, r2, 0, 2",
            "strb r3, [r8, 0x10]",
            "b 0x6eb58",
            "mvn sl, 0",
            "mov r0, sl",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.imp.av_fast_realloc": {
        "function_address": "0x0000975c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0xca0]!"
        ]
    },
    "fcn.0006e890": {
        "function_address": "0x0006e890",
        "instructions": [
            "cmp r1, 0",
            "push {r4, r5, r6, r7, r8, sl, lr}",
            "mov ip, r0",
            "ldr r4, [sp, 0x1c]",
            "beq 0x6e8d8",
            "mov r5, 0x18",
            "sub r0, r1, 1",
            "mla r0, r5, r0, ip",
            "ldr r5, [r0, 0xc]",
            "cmp r5, r3",
            "blt 0x6e8cc",
            "bne 0x6e8d8",
            "ldr r0, [r0, 8]",
            "cmp r0, r2",
            "bhs 0x6e8d8",
            "sub r5, r1, 1",
            "mov r0, r1",
            "b 0x6e934",
            "mov r0, r1",
            "mvn r5, 0",
            "b 0x6e934",
            "add r6, r0, r5",
            "asr r6, r6, 1",
            "mla r8, sl, r6, ip",
            "ldr r7, [r8, 8]",
            "ldr r8, [r8, 0xc]",
            "cmp r3, r8",
            "bgt 0x6e924",
            "bne 0x6e90c",
            "cmp r2, r7",
            "bhi 0x6e924",
            "cmp r8, r3",
            "bgt 0x6e92c",
            "bne 0x6e920",
            "cmp r7, r2",
            "bhi 0x6e92c",
            "mov r0, r6",
            "mov r5, r6",
            "b 0x6e938",
            "mov r0, r6",
            "b 0x6e938",
            "mov sl, 0x18",
            "rsb r6, r5, r0",
            "cmp r6, 1",
            "bgt 0x6e8e4",
            "ands r2, r4, 1",
            "movne r0, r5",
            "tst r4, 4",
            "bne 0x6e9a0",
            "b 0x6e96c",
            "cmp r2, 0",
            "moveq r4, 1",
            "mvnne r4, 0",
            "add r0, r0, r4",
            "b 0x6e970",
            "mov r3, 0x18",
            "cmp r0, r1",
            "movge r4, 0",
            "movlt r4, 1",
            "cmp r0, 0",
            "movlt r4, 0",
            "cmp r4, 0",
            "beq 0x6e9a0",
            "mla r4, r3, r0, ip",
            "ldrb r4, [r4, 0x10]",
            "tst r4, 1",
            "beq 0x6e958",
            "pop {r4, r5, r6, r7, r8, sl, pc}",
            "cmp r0, r1",
            "mvneq r0, 0",
            "pop {r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "sym.imp.__assert": {
        "function_address": "0x00009b4c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0xa00]!"
        ]
    },
    "sym.imp.memmove": {
        "function_address": "0x00009bc4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x9b0]!"
        ]
    },
    "sym.ffio_open_dyn_packet_buf": {
        "function_address": "0x0001aa48",
        "instructions": [
            "cmp r1, 0",
            "push {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}",
            "ldr r6, [0x000193e4]",
            "movne r8, r1",
            "moveq r8, 0x400",
            "mov r7, r0",
            "adds r0, r8, 0x18",
            "mov r4, r1",
            "add r6, pc, r6",
            "mvnhs r0, 0",
            "bhs 0x193dc",
            "bl sym.imp.av_mallocz",
            "subs r5, r0, 0",
            "beq 0x193d8",
            "cmp r4, 0",
            "str r8, [r5, 0x10]",
            "add r0, r5, 0x14",
            "ldreq r2, [0x000193e8]",
            "ldreq r3, [0x000193ec]",
            "addeq r2, r6, r2",
            "addeq r3, r6, r3",
            "ldrne r2, [0x000193f0]",
            "movne r3, 0",
            "addne r2, r6, r2",
            "mov r6, 0",
            "stmib sp, {r2, r3}",
            "mov r1, r8",
            "mov r2, 1",
            "mov r3, r5",
            "str r6, [sp]",
            "bl sym.avio_alloc_context",
            "cmp r0, r6",
            "str r0, [r7]",
            "strne r4, [r0, 0x38]",
            "movne r0, r6",
            "bne 0x193dc",
            "mov r0, r5",
            "bl sym.imp.av_free",
            "mvn r0, 0xb",
            "add sp, sp, 0x10",
            "pop {r4, r5, r6, r7, r8, pc}",
            "cmp r1, 0",
            "ble 0x1aa54",
            "b 0x19340",
            "mvn r0, 0",
            "bx lr"
        ]
    },
    "sym.av_append_packet": {
        "function_address": "0x0006de10",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r7, r0",
            "ldr r5, [r1, 0x14]",
            "mov r4, r1",
            "mov r6, r2",
            "cmp r5, 0",
            "bne 0x6de34",
            "pop {r4, r5, r6, r7, r8, lr}",
            "b sym.av_get_packet",
            "mov r0, r1",
            "mov r1, r2",
            "bl sym.imp.av_grow_packet",
            "subs r8, r0, 0",
            "blt 0x6de74",
            "ldr r1, [r4, 0x10]",
            "mov r0, r7",
            "mov r2, r6",
            "add r1, r1, r5",
            "bl sym.avio_read",
            "mov r8, r0",
            "mov r0, r4",
            "cmp r8, 0",
            "addge r1, r5, r8",
            "addlt r1, r5, 0",
            "bl sym.imp.av_shrink_packet",
            "mov r0, r8",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "sym.imp.av_grow_packet": {
        "function_address": "0x000099cc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0xb00]!"
        ]
    },
    "sym.imp.av_shrink_packet": {
        "function_address": "0x000098dc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0xba0]!"
        ]
    },
    "fcn.0007d19c": {
        "function_address": "0x0007d19c",
        "instructions": [
            "subs r2, r1, 1",
            "bxeq lr",
            "blo 0x7d238",
            "cmp r0, r1",
            "bls 0x7d21c",
            "tst r1, r2",
            "beq 0x7d228",
            "clz r3, r1",
            "clz r2, r0",
            "sub r2, r3, r2",
            "mov r3, 1",
            "lsl r1, r1, r2",
            "lsl r3, r3, r2",
            "mov r2, 0",
            "cmp r0, r1",
            "subhs r0, r0, r1",
            "orrhs r2, r2, r3",
            "cmp r0, r1, lsr 1",
            "subhs r0, r0, r1, lsr 1",
            "orrhs r2, r2, r3, lsr 1",
            "cmp r0, r1, lsr 2",
            "subhs r0, r0, r1, lsr 2",
            "orrhs r2, r2, r3, lsr 2",
            "cmp r0, r1, lsr 3",
            "subhs r0, r0, r1, lsr 3",
            "orrhs r2, r2, r3, lsr 3",
            "cmp r0, 0",
            "lsrsne r3, r3, 4",
            "lsrne r1, r1, 4",
            "bne 0x7d1d4",
            "mov r0, r2",
            "bx lr",
            "moveq r0, 1",
            "movne r0, 0",
            "bx lr",
            "clz r2, r1",
            "rsb r2, r2, 0x1f",
            "lsr r0, r0, r2",
            "bx lr",
            "cmp r0, 0",
            "mvnne r0, 0",
            "b fcn.0007df50"
        ]
    },
    "sym.av_hex_dump_log": {
        "function_address": "0x00073ef8",
        "instructions": [
            "push {r0, r1, r2, lr}",
            "mov ip, r2",
            "mov lr, r1",
            "str r3, [sp]",
            "mov r1, 0",
            "mov r2, lr",
            "mov r3, ip",
            "bl fcn.0006b0a0",
            "pop {r1, r2, r3, pc}"
        ]
    },
    "sym.avio_rb24": {
        "function_address": "0x00019fe8",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r5, r0",
            "bl sym.avio_rb16",
            "lsl r4, r0, 8",
            "mov r0, r5",
            "bl sym.avio_r8",
            "orr r0, r0, r4",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.avio_rb16": {
        "function_address": "0x00019e44",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r5, r0",
            "bl sym.avio_r8",
            "lsl r4, r0, 8",
            "mov r0, r5",
            "bl sym.avio_r8",
            "orr r0, r4, r0",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.parse_date": {
        "function_address": "0x0007346c",
        "instructions": [
            "mov r3, r0",
            "push {r0, r1, r2, lr}",
            "mov r2, r1",
            "mov r0, sp",
            "mov r1, r3",
            "bl sym.imp.av_parse_time",
            "ldm sp, {r0, r1}",
            "add sp, sp, 0xc",
            "ldm sp!, {pc}"
        ]
    },
    "sym.imp.av_parse_time": {
        "function_address": "0x00009d68",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x898]!"
        ]
    },
    "sym.av_set_parameters": {
        "function_address": "0x00071dbc",
        "instructions": [
            "ldr r3, [r0, 8]",
            "push {r4, lr}",
            "mov r4, r0",
            "ldr r0, [r3, 0x10]",
            "cmp r0, 0",
            "movle r0, 0",
            "strle r0, [r4, 0xc]",
            "pople {r4, pc}",
            "bl sym.imp.av_mallocz",
            "cmp r0, 0",
            "mov r2, r0",
            "str r0, [r4, 0xc]",
            "mvneq r0, 0xb",
            "popeq {r4, pc}",
            "ldr r3, [r4, 8]",
            "ldr r3, [r3, 0x40]",
            "cmp r3, 0",
            "beq 0x71e14",
            "str r3, [r2]",
            "bl sym.imp.av_opt_set_defaults",
            "mov r0, 0",
            "pop {r4, pc}",
            "mov r0, r3",
            "pop {r4, pc}"
        ]
    },
    "sym.avio_get_str16le": {
        "function_address": "0x0001a02c",
        "instructions": [
            "cmp r3, 0",
            "push {r0, r1, r2, r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r1",
            "str r0, [sp, 4]",
            "mov r5, r2",
            "mvnle r6, 0x15",
            "ble 0x1a14c",
            "mov r7, r2",
            "mov r6, 0",
            "movw sb, 0x3ff",
            "sub sl, r3, 1",
            "b 0x1a138",
            "add r6, r6, 2",
            "cmp r6, r4",
            "movgt r8, 0",
            "bgt 0x1a078",
            "ldr r0, [sp, 4]",
            "bl sym.avio_rl16",
            "mov r8, r0",
            "sub fp, r8, 0xd800",
            "movw r2, 0x7ff",
            "cmp fp, r2",
            "bhi 0x1a0b4",
            "add r6, r6, 2",
            "cmp r6, r4",
            "ldrgt r0, [0x0001a154]",
            "bgt 0x1a0a0",
            "ldr r0, [sp, 4]",
            "bl sym.avio_rl16",
            "cmp fp, sb",
            "cmpls r0, sb",
            "bhi 0x1a144",
            "add r8, r0, fp, lsl 10",
            "add r8, r8, 0x10000",
            "cmp r8, 0",
            "beq 0x1a144",
            "cmp r8, 0x7f",
            "rsb fp, r5, r7",
            "bhi 0x1a0d4",
            "cmp fp, sl",
            "strblt r8, [r7], 1",
            "b 0x1a138",
            "orr r0, r8, 1",
            "mov r1, 5",
            "clz r0, r0",
            "rsb r0, r0, 0x23",
            "bl fcn.0007d264",
            "cmp fp, sl",
            "sub r3, r0, 1",
            "mov r2, 6",
            "mul r3, r2, r3",
            "addlt r2, r2, 0xfa",
            "asrlt r0, r2, r0",
            "rsblt r0, r0, 0",
            "orrlt r0, r0, r8, lsr r3",
            "strblt r0, [r7], 1",
            "b 0x1a130",
            "rsb r2, r5, r7",
            "sub r3, r3, 6",
            "cmp r2, sl",
            "lsrlt r2, r8, r3",
            "andlt r2, r2, 0x3f",
            "mvnlt r2, r2, lsl 25",
            "mvnlt r2, r2, lsr 25",
            "strblt r2, [r7], 1",
            "cmp r3, 5",
            "bgt 0x1a110",
            "add r3, r6, 1",
            "cmp r3, r4",
            "blt 0x1a05c",
            "mov r3, 0",
            "strb r3, [r7]",
            "mov r0, r6",
            "pop {r1, r2, r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.imp.strrchr": {
        "function_address": "0x000099b4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0xb10]!"
        ]
    },
    "sym.url_fskip": {
        "function_address": "0x0001a624",
        "instructions": [
            "push {r0, r1, r4, lr}",
            "mov r1, 1",
            "str r1, [sp]",
            "bl sym.avio_seek",
            "cmp r1, 0",
            "mov r4, r0",
            "bgt 0x1a64c",
            "bne 0x1a650",
            "cmp r0, 0",
            "beq 0x1a650",
            "mov r0, 0",
            "pop {r2, r3, r4, pc}"
        ]
    },
    "sym.avio_get_str16be": {
        "function_address": "0x00019e64",
        "instructions": [
            "cmp r3, 0",
            "push {r0, r1, r2, r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r1",
            "str r0, [sp, 4]",
            "mov r5, r2",
            "mvnle r6, 0x15",
            "ble 0x19f84",
            "mov r7, r2",
            "mov r6, 0",
            "movw sb, 0x3ff",
            "sub sl, r3, 1",
            "b 0x19f70",
            "add r6, r6, 2",
            "cmp r6, r4",
            "movgt r8, 0",
            "bgt 0x19eb0",
            "ldr r0, [sp, 4]",
            "bl sym.avio_rb16",
            "mov r8, r0",
            "sub fp, r8, 0xd800",
            "movw r2, 0x7ff",
            "cmp fp, r2",
            "bhi 0x19eec",
            "add r6, r6, 2",
            "cmp r6, r4",
            "ldrgt r0, [0x00019f8c]",
            "bgt 0x19ed8",
            "ldr r0, [sp, 4]",
            "bl sym.avio_rb16",
            "cmp fp, sb",
            "cmpls r0, sb",
            "bhi 0x19f7c",
            "add r8, r0, fp, lsl 10",
            "add r8, r8, 0x10000",
            "cmp r8, 0",
            "beq 0x19f7c",
            "cmp r8, 0x7f",
            "rsb fp, r5, r7",
            "bhi 0x19f0c",
            "cmp fp, sl",
            "strblt r8, [r7], 1",
            "b 0x19f70",
            "orr r0, r8, 1",
            "mov r1, 5",
            "clz r0, r0",
            "rsb r0, r0, 0x23",
            "bl fcn.0007d264",
            "cmp fp, sl",
            "sub r3, r0, 1",
            "mov r2, 6",
            "mul r3, r2, r3",
            "addlt r2, r2, 0xfa",
            "asrlt r0, r2, r0",
            "rsblt r0, r0, 0",
            "orrlt r0, r0, r8, lsr r3",
            "strblt r0, [r7], 1",
            "b 0x19f68",
            "rsb r2, r5, r7",
            "sub r3, r3, 6",
            "cmp r2, sl",
            "lsrlt r2, r8, r3",
            "andlt r2, r2, 0x3f",
            "mvnlt r2, r2, lsl 25",
            "mvnlt r2, r2, lsr 25",
            "strblt r2, [r7], 1",
            "cmp r3, 5",
            "bgt 0x19f48",
            "add r3, r6, 1",
            "cmp r3, r4",
            "blt 0x19e94",
            "mov r3, 0",
            "strb r3, [r7]",
            "mov r0, r6",
            "pop {r1, r2, r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.avpriv_dv_get_packet": {
        "function_address": "0x0001fbb8",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "movw r3, 0x8140",
            "mov r4, r1",
            "add r2, r0, 8",
            "mov r5, 0",
            "ldr r1, [r0, r3]",
            "mov r3, r0",
            "b 0x1fc20",
            "ldr ip, [r2, 4]!",
            "cmp ip, 0",
            "beq 0x1fc18",
            "ldr ip, [r3, 0x34]",
            "cmp ip, 0",
            "beq 0x1fc18",
            "mov r2, 0x48",
            "mla r5, r2, r5, r0",
            "mov r0, r4",
            "add r1, r5, 0x20",
            "add r5, r5, 0x30",
            "bl sym.imp.memcpy",
            "mov r3, 0",
            "str r3, [r5, 4]",
            "ldr r0, [r4, 0x14]",
            "pop {r3, r4, r5, pc}",
            "add r5, r5, 1",
            "add r3, r3, 0x48",
            "cmp r5, r1",
            "blt 0x1fbd8",
            "mvn r0, 0",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.url_open_protocol": {
        "function_address": "0x00018be8",
        "instructions": [
            "push {r0, r1, r2, r4, r5, lr}",
            "mov ip, 0",
            "mov r4, r0",
            "str ip, [sp]",
            "bl fcn.000184c0",
            "subs r5, r0, 0",
            "bne 0x18c18",
            "mov r1, r5",
            "ldr r0, [r4]",
            "bl fcn.00018a38",
            "subs r5, r0, 0",
            "beq 0x18c28",
            "ldr r0, [r4]",
            "bl sym.ffurl_close",
            "mov r3, 0",
            "str r3, [r4]",
            "mov r0, r5",
            "pop {r1, r2, r3, r4, r5, pc}"
        ]
    },
    "fcn.000184c0": {
        "function_address": "0x000184c0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r7, r3",
            "ldr r3, [r1, 0x30]",
            "sub sp, sp, 0x1c",
            "mov r5, r1",
            "mov r6, r2",
            "ldr r8, [0x00018720]",
            "tst r3, 2",
            "str r0, [sp, 8]",
            "add r8, pc, r8",
            "beq 0x184fc",
            "bl fcn.00045ba8",
            "cmp r0, 0",
            "mvneq r0, 4",
            "beq 0x18718",
            "mov r0, r6",
            "bl sym.imp.strlen",
            "add r0, r0, 0x29",
            "bl sym.imp.av_mallocz",
            "cmp r0, 0",
            "mov r4, r0",
            "str r0, [sp, 0x14]",
            "beq 0x186f8",
            "ldr r3, [0x00018724]",
            "mov r1, r6",
            "ldr r3, [r8, r3]",
            "str r3, [r0], 0x28",
            "str r0, [r4, 0x18]",
            "bl sym.imp.strcpy",
            "ldr r0, [r5, 0x28]",
            "mov r3, 0",
            "stmib r4, {r5, r7}",
            "cmp r0, r3",
            "str r3, [r4, 0xc]",
            "str r3, [r4, 0x10]",
            "beq 0x186c8",
            "bl sym.imp.av_mallocz",
            "ldr r6, [r5, 0x2c]",
            "str r0, [r4, 0x14]",
            "cmp r6, 0",
            "beq 0x186c8",
            "ldr r0, [r5]",
            "bl sym.imp.strlen",
            "ldr r7, [sp, 0x14]",
            "mov r1, 0x2c",
            "mov r4, r0",
            "ldr r0, [r7, 0x18]",
            "bl sym.imp.strchr",
            "mov sl, r0",
            "ldr r0, [r7, 0x14]",
            "str r6, [r0]",
            "bl sym.imp.av_opt_set_defaults",
            "ldr r3, [sp, 0x14]",
            "mov r2, r4",
            "ldr r0, [r5]",
            "ldr r6, [r3, 0x18]",
            "mov r1, r6",
            "bl sym.imp.strncmp",
            "subs r7, r0, 0",
            "bne 0x186c8",
            "add r4, r6, r4",
            "cmp r4, sl",
            "bne 0x186c8",
            "ldr r3, [0x00018728]",
            "add r4, sl, 2",
            "ldrb sb, [sl, 1]",
            "add r3, r8, r3",
            "str r3, [sp, 0xc]",
            "b 0x18634",
            "mov r2, 0",
            "mov r1, r4",
            "strb r2, [r6]",
            "ldr r3, [sp, 4]",
            "strb r2, [r3]",
            "mov r2, fp",
            "ldr r3, [sp, 0x14]",
            "ldr r0, [r3, 0x14]",
            "mov r3, 0",
            "bl sym.imp.av_opt_set",
            "ldr r2, [0x0001872c]",
            "mov r7, r0",
            "cmp r0, r2",
            "bne 0x18620",
            "ldr r0, [sp, 0x14]",
            "mov r1, 0x10",
            "ldr r2, [sp, 0xc]",
            "mov r3, r4",
            "bl sym.imp.av_log",
            "strb sb, [r6]",
            "cmp r7, 0",
            "ldr r4, [sp, 4]",
            "strb sb, [r4], 1",
            "blt 0x1866c",
            "mov r0, r4",
            "mov r1, sb",
            "bl sym.imp.strchr",
            "subs r6, r0, 0",
            "beq 0x1866c",
            "cmp r4, r6",
            "bhs 0x1866c",
            "add fp, r6, 1",
            "mov r1, sb",
            "mov r0, fp",
            "bl sym.imp.strchr",
            "cmp r0, 0",
            "str r0, [sp, 4]",
            "bne 0x185d4",
            "subs r4, r4, r6",
            "movne r4, 1",
            "orrs r4, r4, r7, lsr 31",
            "beq 0x186b0",
            "ldr r2, [0x00018730]",
            "mov r1, 0x10",
            "ldr r0, [sp, 0x14]",
            "mov r3, sl",
            "add r4, sp, 0x18",
            "add r2, r8, r2",
            "bl sym.imp.av_log",
            "ldr r0, [r4, -4]!",
            "add r0, r0, 0x14",
            "bl sym.imp.av_freep",
            "mov r0, r4",
            "bl sym.imp.av_freep",
            "b 0x186f8",
            "mov r0, r6",
            "bl sym.imp.strlen",
            "add r1, r6, 1",
            "mov r2, r0",
            "mov r0, sl",
            "bl sym.imp.memmove",
            "ldr r3, [sp, 0x40]",
            "cmp r3, 0",
            "ldrne r2, [sp, 0x40]",
            "ldrne r3, [sp, 0x14]",
            "ldmne r2, {r0, r1}",
            "addne r3, r3, 0x20",
            "ldr r2, [sp, 8]",
            "stmne r3, {r0, r1}",
            "mov r0, 0",
            "ldr r3, [sp, 0x14]",
            "str r3, [r2]",
            "b 0x18718",
            "ldr r2, [sp, 8]",
            "mov r3, 0",
            "str r3, [r2]",
            "ldr r3, [r5, 0x30]",
            "tst r3, 2",
            "beq 0x18714",
            "bl fcn.00045c4c",
            "mvn r0, 0xb",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.get_strz": {
        "function_address": "0x00019dd0",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r1",
            "mov r3, r2",
            "mvn r1, 0x80000000",
            "mov r2, r4",
            "bl sym.avio_get_str",
            "mov r0, r4",
            "pop {r4, pc}"
        ]
    },
    "sym.avio_get_str": {
        "function_address": "0x00019d44",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "subs r8, r3, 0",
            "mov r5, r1",
            "mov r4, r0",
            "mov r6, r2",
            "mvnle r5, 0x15",
            "ble 0x19dc8",
            "sub r8, r8, 1",
            "mov r7, 0",
            "cmp r8, r5",
            "movge r8, r5",
            "b 0x19d90",
            "mov r0, r4",
            "bl sym.avio_r8",
            "uxtb r0, r0",
            "cmp r0, 0",
            "strb r0, [r6, r7]",
            "add r7, r7, 1",
            "beq 0x19db8",
            "cmp r7, r8",
            "blt 0x19d74",
            "mov r3, 0",
            "strb r3, [r6, r7]",
            "b 0x19dc0",
            "mov r0, r4",
            "add r7, r7, 1",
            "bl sym.avio_r8",
            "cmp r0, 0",
            "bne 0x19dc0",
            "mov r5, r7",
            "b 0x19dc8",
            "cmp r7, r5",
            "blt 0x19da4",
            "mov r0, r5",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.00018e34": {
        "function_address": "0x00018e34",
        "instructions": [
            "push {r0, r1, r2, r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r0",
            "str r1, [sp, 4]",
            "mov r5, r2",
            "mov sb, r3",
            "mov r7, 5",
            "mov r6, 0",
            "add fp, r0, 0x20",
            "b 0x18edc",
            "ldr r3, [sp, 4]",
            "rsb r8, r6, r5",
            "add sl, r3, r6",
            "mov r0, r4",
            "mov r1, sl",
            "mov r2, r8",
            "ldr r3, [sp, 0x30]",
            "blx r3",
            "cmn r0, 4",
            "beq 0x18e64",
            "ldr r3, [r4, 8]",
            "tst r3, 8",
            "bne 0x18ef0",
            "cmn r0, 0xb",
            "bne 0x18eac",
            "cmp r7, 0",
            "subne r7, r7, 1",
            "bne 0x18ebc",
            "mov r0, 0x3e8",
            "bl sym.imp.usleep",
            "b 0x18ebc",
            "cmp r0, 0",
            "bgt 0x18ef4",
            "beq 0x18ee4",
            "b 0x18ef0",
            "mov r0, 0",
            "add r6, r6, r0",
            "cmp r6, r5",
            "bge 0x18edc",
            "mov r0, fp",
            "bl fcn.00018de8",
            "cmp r0, 0",
            "bne 0x18eec",
            "cmp r6, sb",
            "blt 0x18e58",
            "mov r0, r6",
            "b 0x18ef0",
            "ldr r0, [0x00018f00]",
            "pop {r1, r2, r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "cmp r7, 2",
            "movlt r7, 2",
            "b 0x18ec0"
        ]
    },
    "sym.imp.usleep": {
        "function_address": "0x0000984c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0xc00]!"
        ]
    },
    "sym.av_find_best_stream": {
        "function_address": "0x00071820",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "lsr r8, r2, 0x1f",
            "sub sp, sp, 0x1c",
            "ldr r5, [r0, 0x14]",
            "cmp r3, 0",
            "movlt r8, 0",
            "andge r8, r8, 1",
            "mov r4, r0",
            "cmp r8, 0",
            "str r1, [sp, 0x10]",
            "mov ip, r2",
            "beq 0x71874",
            "mov r1, 0",
            "mov r2, r3",
            "str ip, [sp, 0xc]",
            "bl sym.av_find_program_from_stream",
            "cmp r0, 0",
            "ldr ip, [sp, 0xc]",
            "ldrne r8, [r0, 0xc]",
            "moveq r8, r0",
            "ldrne r5, [r0, 0x10]",
            "mov sb, 0",
            "mvn fp, 0",
            "cmp ip, sb",
            "movlt r2, 0",
            "movge r2, 1",
            "mov r0, sb",
            "ldr r6, [0x000719a0]",
            "mov r7, sb",
            "str r2, [sp, 0x14]",
            "mov r3, r4",
            "str ip, [sp, 4]",
            "b 0x71980",
            "cmp r8, 0",
            "ldr r2, [r3, 0x18]",
            "ldrne sl, [r8, r7, lsl 2]",
            "moveq sl, r7",
            "ldr r4, [r2, sl, lsl 2]",
            "ldr r2, [sp, 0x10]",
            "ldr r1, [r4, 8]",
            "ldr ip, [r1, 0xd0]",
            "cmp ip, r2",
            "bne 0x7197c",
            "ldr r2, [sp, 0x14]",
            "ldr ip, [sp, 4]",
            "cmp sl, ip",
            "moveq r2, 0",
            "andne r2, r2, 1",
            "cmp r2, 0",
            "bne 0x7197c",
            "ldr r2, [r4, 0x98]",
            "tst r2, 0x180",
            "bne 0x7197c",
            "ldr r2, [sp, 0x40]",
            "cmp r2, 0",
            "beq 0x71928",
            "ldr r0, [r1, 0xd4]",
            "str r3, [sp, 0xc]",
            "bl sym.imp.avcodec_find_decoder",
            "cmp r0, 0",
            "ldr r3, [sp, 0xc]",
            "bne 0x71928",
            "ldr ip, [0x000719a4]",
            "cmp r6, 0",
            "movlt r6, ip",
            "b 0x7197c",
            "ldr r2, [r4, 0x1a8]",
            "cmp fp, r2",
            "bge 0x7197c",
            "cmp r8, 0",
            "beq 0x71970",
            "sub r1, r5, 1",
            "cmp r7, r1",
            "movne r1, 0",
            "moveq r1, 1",
            "ands r1, r1, sl, lsr 31",
            "beq 0x71970",
            "mov r8, 0",
            "ldr r5, [r3, 0x14]",
            "mov sb, r0",
            "mov fp, r2",
            "mov r6, sl",
            "mov r7, r8",
            "b 0x7197c",
            "mov sb, r0",
            "mov fp, r2",
            "mov r6, sl",
            "add r7, r7, 1",
            "cmp r7, r5",
            "blt 0x718a4",
            "ldr r2, [sp, 0x40]",
            "mov r0, r6",
            "cmp r2, 0",
            "strne sb, [r2]",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.av_find_program_from_stream": {
        "function_address": "0x000717b0",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "mov r3, r0",
            "ldr r5, [r0, 0x484]",
            "mov ip, 0",
            "b 0x71810",
            "ldr r0, [r3, 0x488]",
            "ldr r0, [r0, ip, lsl 2]",
            "cmp r0, r1",
            "beq 0x71808",
            "cmp r1, 0",
            "ldreq r6, [r0, 0x10]",
            "moveq r4, r1",
            "beq 0x717fc",
            "b 0x7180c",
            "ldr r7, [r0, 0xc]",
            "ldr r7, [r7, r4, lsl 2]",
            "cmp r7, r2",
            "popeq {r4, r5, r6, r7, pc}",
            "add r4, r4, 1",
            "cmp r4, r6",
            "blo 0x717e8",
            "b 0x7180c",
            "mov r1, 0",
            "add ip, ip, 1",
            "cmp ip, r5",
            "blo 0x717c4",
            "mov r0, 0",
            "pop {r4, r5, r6, r7, pc}"
        ]
    },
    "sym.avio_rb32": {
        "function_address": "0x00019f90",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r5, r0",
            "bl sym.avio_rb16",
            "lsl r4, r0, 0x10",
            "mov r0, r5",
            "bl sym.avio_rb16",
            "orr r0, r4, r0",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.url_open_buf": {
        "function_address": "0x0001a9b0",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "mov r4, r0",
            "sub sp, sp, 0x14",
            "mov r0, 0x60",
            "mov r5, r3",
            "mov r7, r1",
            "mov r6, r2",
            "bl sym.imp.av_mallocz",
            "cmp r0, 0",
            "str r0, [r4]",
            "mvneq r5, 0xb",
            "beq 0x1aa14",
            "mov r3, 0",
            "mov r1, r7",
            "str r3, [sp]",
            "mov r2, r6",
            "str r3, [sp, 4]",
            "str r3, [sp, 8]",
            "str r3, [sp, 0xc]",
            "and r3, r5, 2",
            "bl fcn.00019224",
            "subs r5, r0, 0",
            "beq 0x1aa14",
            "mov r0, r4",
            "bl sym.imp.av_freep",
            "mov r0, r5",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, pc}"
        ]
    },
    "sym.ffurl_write": {
        "function_address": "0x00018f04",
        "instructions": [
            "ldr r3, [r0, 8]",
            "push {r0, r1, r2, lr}",
            "tst r3, 2",
            "beq 0x18f40",
            "ldr r3, [r0, 0x10]",
            "cmp r3, 0",
            "beq 0x18f28",
            "cmp r2, r3",
            "bgt 0x18f40",
            "ldr r3, [r0, 4]",
            "ldr r3, [r3, 0xc]",
            "str r3, [sp]",
            "mov r3, r2",
            "bl fcn.00018e34",
            "b 0x18f44",
            "mvn r0, 4",
            "pop {r1, r2, r3, pc}"
        ]
    },
    "sym.av_get_packet": {
        "function_address": "0x0006dda0",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r4, r1",
            "mov r1, r2",
            "mov r5, r0",
            "bl fcn.0006dc94",
            "mov r7, r0",
            "mov r0, r4",
            "mov r1, r7",
            "bl sym.imp.av_new_packet",
            "subs r6, r0, 0",
            "blt 0x6de08",
            "mov r0, r5",
            "bl fcn.0006b828",
            "mov r2, r7",
            "strd r0, r1, [r4, 0x38]",
            "mov r0, r5",
            "ldr r1, [r4, 0x10]",
            "bl sym.avio_read",
            "subs r6, r0, 0",
            "bgt 0x6ddfc",
            "mov r0, r4",
            "bl sym.imp.av_free_packet",
            "b 0x6de08",
            "mov r0, r4",
            "mov r1, r6",
            "bl sym.imp.av_shrink_packet",
            "mov r0, r6",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.0006dc94": {
        "function_address": "0x0006dc94",
        "instructions": [
            "push {r0, r1, r4, r5, r6, r7, r8, sl, fp, lr}",
            "mov r8, r0",
            "ldrd r4, r5, [r0, 0x58]",
            "mov r6, r1",
            "ldr r7, [0x0006dd98]",
            "cmp r5, 0",
            "add r7, pc, r7",
            "blt 0x6dd90",
            "bl fcn.0006b828",
            "mov sl, r6",
            "asr fp, sl, 0x1f",
            "subs r4, r4, r0",
            "sbc r5, r5, r1",
            "cmp fp, r5",
            "bgt 0x6dcdc",
            "bne 0x6dd40",
            "cmp sl, r4",
            "bls 0x6dd40",
            "mov r0, r8",
            "bl sym.avio_size",
            "ldr r3, [r8, 0x58]",
            "ldr r2, [r8, 0x5c]",
            "orrs ip, r3, r2",
            "beq 0x6dd08",
            "cmp r1, r2",
            "bgt 0x6dd08",
            "bne 0x6dd20",
            "cmp r0, r3",
            "bls 0x6dd20",
            "orrs r3, r0, r1",
            "movne r3, 0",
            "moveq r3, 1",
            "subs r0, r0, r3",
            "sbc r1, r1, 0",
            "strd r0, r1, [r8, 0x58]",
            "ldrd r4, r5, [r8, 0x58]",
            "mov r0, r8",
            "bl fcn.0006b828",
            "subs r4, r4, r0",
            "sbc r5, r5, r1",
            "cmp r5, 0",
            "movlt r4, 0",
            "movlt r5, 0",
            "ldr r3, [r8, 0x5c]",
            "cmp r3, 0",
            "blt 0x6dd90",
            "mov r0, 1",
            "mov r1, 0",
            "adds r0, r0, r4",
            "adc r1, r1, r5",
            "cmp fp, r1",
            "bgt 0x6dd70",
            "bne 0x6dd90",
            "cmp sl, r0",
            "bls 0x6dd90",
            "ldr r2, [0x0006dd9c]",
            "mov r3, r6",
            "add r6, r4, 1",
            "strd r0, r1, [sp]",
            "mov r0, 0",
            "mov r1, 0x10",
            "add r2, r7, r2",
            "bl sym.imp.av_log",
            "mov r0, r6",
            "pop {r2, r3, r4, r5, r6, r7, r8, sl, fp, pc}"
        ]
    },
    "sym.imp.av_new_packet": {
        "function_address": "0x0000999c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0xb20]!"
        ]
    },
    "sym.avio_printf": {
        "function_address": "0x0001a7f8",
        "instructions": [
            "push {r1, r2, r3}",
            "mov r1, 0x1000",
            "push {r4, r5, r6, lr}",
            "sub sp, sp, 0x1000",
            "sub sp, sp, 0xc",
            "mov r5, r0",
            "add r3, sp, 0x1000",
            "add r4, sp, 4",
            "add r3, r3, 0x20",
            "add r2, sp, 0x1000",
            "str r3, [r2, 4]",
            "mov r0, r4",
            "ldr r2, [r2, 0x1c]",
            "bl sym.imp.vsnprintf",
            "mov r6, r0",
            "mov r0, r4",
            "bl sym.imp.strlen",
            "mov r1, r4",
            "mov r2, r0",
            "mov r0, r5",
            "bl sym.avio_write",
            "mov r0, r6",
            "add sp, sp, 0xc",
            "add sp, sp, 0x1000",
            "pop {r4, r5, r6, lr}",
            "add sp, sp, 0xc",
            "bx lr"
        ]
    },
    "sym.av_dump_format": {
        "function_address": "0x00072e40",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r5, r0",
            "ldr r0, [r0, 0x14]",
            "sub sp, sp, 0x3c",
            "mov r6, r2",
            "mov r8, r3",
            "ldr r4, [0x00073390]",
            "cmp r0, 0",
            "str r1, [sp, 0x2c]",
            "add r4, pc, r4",
            "beq 0x72e70",
            "bl sym.imp.av_mallocz",
            "ldr r2, [r5, 0x14]",
            "rsbs r3, r0, 1",
            "movlo r3, 0",
            "mov sl, r0",
            "cmp r2, 0",
            "moveq r3, 0",
            "cmp r3, 0",
            "bne 0x73388",
            "cmp r8, 0",
            "beq 0x73370",
            "ldr r3, [r5, 8]",
            "ldr r2, [0x00073394]",
            "ldr r1, [r3]",
            "ldr r3, [0x00073398]",
            "add r3, r4, r3",
            "add r2, r4, r2",
            "ldr r0, [sp, 0x2c]",
            "str r2, [sp, 8]",
            "ldr r2, [0x0007339c]",
            "str r0, [sp]",
            "mov r0, 0",
            "str r1, [sp, 4]",
            "mov r1, 0x20",
            "add r2, r4, r2",
            "str r6, [sp, 0xc]",
            "bl sym.imp.av_log",
            "ldr r1, [0x000733a0]",
            "ldr r0, [r5, 0x4b8]",
            "add r1, r4, r1",
            "bl fcn.0006d348",
            "cmp r8, 0",
            "bne 0x730dc",
            "ldr r2, [0x000733a4]",
            "mov r0, r8",
            "mov r1, 0x20",
            "add r2, r4, r2",
            "bl sym.imp.av_log",
            "mov r3, r5",
            "ldr r6, [r3, 0x438]!",
            "cmp r6, 0",
            "ldr r7, [r3, 4]",
            "bne 0x72f20",
            "cmp r7, 0x80000000",
            "beq 0x72fbc",
            "ldr r2, [0x000733a8]",
            "mov r3, 0",
            "mov r0, r6",
            "mov r1, r7",
            "bl fcn.0007ded0",
            "mov r1, 0x3c",
            "mov fp, r0",
            "bl fcn.0007d264",
            "ldr ip, [0x000733ac]",
            "mov sb, r0",
            "mov r1, 0x3c",
            "add ip, r4, ip",
            "str ip, [sp, 0x14]",
            "bl fcn.0007d264",
            "mov r1, 0x3c",
            "str r0, [sp, 0x18]",
            "mov r0, sb",
            "bl fcn.0007d340",
            "mov r0, fp",
            "str r1, [sp]",
            "mov r1, 0x3c",
            "bl fcn.0007d340",
            "mov r0, r6",
            "str r1, [sp, 4]",
            "ldr r2, [0x000733a8]",
            "mov r1, r7",
            "mov r3, 0",
            "bl fcn.0007ded0",
            "movw r1, 0x2710",
            "mov r0, r2",
            "bl fcn.0007d264",
            "ldr ip, [sp, 0x14]",
            "mov r1, 0x20",
            "str r0, [sp, 8]",
            "mov r0, 0",
            "ldr r3, [sp, 0x18]",
            "mov r2, ip",
            "bl sym.imp.av_log",
            "b 0x72fd0",
            "ldr r2, [0x000733b0]",
            "mov r0, r8",
            "mov r1, 0x20",
            "add r2, r4, r2",
            "bl sym.imp.av_log",
            "ldr r3, [r5, 0x430]",
            "cmp r3, 0",
            "bne 0x72fe8",
            "ldr r3, [r5, 0x434]",
            "cmp r3, 0x80000000",
            "beq 0x73070",
            "ldr r2, [0x000733b4]",
            "mov r0, 0",
            "mov r1, 0x20",
            "ldr r6, [0x000733a8]",
            "ldr fp, [0x000733b8]",
            "mov r7, 0",
            "add r2, r4, r2",
            "bl sym.imp.av_log",
            "mov r3, 0x430",
            "ldr r2, [0x000733a8]",
            "ldrd r0, r1, [r5, r3]",
            "mov r3, 0",
            "add fp, r4, fp",
            "strd r0, r1, [sp, 0x18]",
            "bl fcn.0007ded0",
            "cmp r2, 0",
            "rsblt r2, r2, 0",
            "mov r3, r7",
            "mov r0, r2",
            "asr r1, r0, 0x1f",
            "strd r6, r7, [sp]",
            "mov r2, r6",
            "bl sym.imp.av_rescale",
            "mov r2, r6",
            "mov sb, r0",
            "mov r3, r7",
            "ldrd r0, r1, [sp, 0x18]",
            "bl fcn.0007ded0",
            "mov r1, 0x20",
            "mov r3, r0",
            "mov r2, fp",
            "mov r0, 0",
            "str sb, [sp]",
            "bl sym.imp.av_log",
            "ldr r2, [0x000733bc]",
            "mov r0, 0",
            "mov r1, 0x20",
            "add r2, r4, r2",
            "bl sym.imp.av_log",
            "ldr r0, [r5, 0x448]",
            "cmp r0, 0",
            "beq 0x730b8",
            "ldr r6, [0x000733c0]",
            "mov r1, 0x3e8",
            "bl fcn.0007d264",
            "mov r1, 0x20",
            "mov r3, r0",
            "add r6, r4, r6",
            "mov r0, 0",
            "mov r2, r6",
            "bl sym.imp.av_log",
            "b 0x730c8",
            "ldr r2, [0x000733b0]",
            "mov r1, 0x20",
            "add r2, r4, r2",
            "bl sym.imp.av_log",
            "ldr r2, [0x000733c4]",
            "mov r0, 0",
            "mov r1, 0x20",
            "add r2, r4, r2",
            "bl sym.imp.av_log",
            "ldr r3, [0x000733c8]",
            "mov r7, 0",
            "ldr sb, [0x000733cc]",
            "mov r6, r4",
            "ldr fp, [0x000733d0]",
            "add r3, r4, r3",
            "str r3, [sp, 0x30]",
            "add sb, r4, sb",
            "ldr r3, [0x000733d4]",
            "add fp, r4, fp",
            "add r3, r4, r3",
            "str r3, [sp, 0x34]",
            "b 0x731e8",
            "ldr r3, [r5, 0x4a4]",
            "mov r2, sb",
            "mov r0, 0",
            "mov r1, 0x20",
            "ldr r4, [r3, r7, lsl 2]",
            "ldr r3, [sp, 0x2c]",
            "str r7, [sp]",
            "add r7, r7, 1",
            "bl sym.imp.av_log",
            "ldrd r0, r1, [r4, 0x10]",
            "bl fcn.0007d70c",
            "strd r0, r1, [sp, 0x18]",
            "ldr r0, [r4, 4]",
            "bl fcn.0007d690",
            "strd r0, r1, [sp, 0x20]",
            "ldr r0, [r4, 8]",
            "bl fcn.0007d690",
            "mov r2, r0",
            "mov r3, r1",
            "ldrd r0, r1, [sp, 0x20]",
            "bl fcn.0007d9d8",
            "mov r3, r1",
            "mov r2, r0",
            "ldrd r0, r1, [sp, 0x18]",
            "bl fcn.0007d76c",
            "mov r2, fp",
            "strd r0, r1, [sp]",
            "mov r0, 0",
            "mov r1, 0x20",
            "bl sym.imp.av_log",
            "ldrd r0, r1, [r4, 0x18]",
            "bl fcn.0007d70c",
            "strd r0, r1, [sp, 0x18]",
            "ldr r0, [r4, 4]",
            "bl fcn.0007d690",
            "strd r0, r1, [sp, 0x20]",
            "ldr r0, [r4, 8]",
            "bl fcn.0007d690",
            "mov r2, r0",
            "mov r3, r1",
            "ldrd r0, r1, [sp, 0x20]",
            "bl fcn.0007d9d8",
            "mov r3, r1",
            "mov r2, r0",
            "ldrd r0, r1, [sp, 0x18]",
            "bl fcn.0007d76c",
            "ldr r2, [sp, 0x30]",
            "strd r0, r1, [sp]",
            "mov r0, 0",
            "mov r1, 0x20",
            "bl sym.imp.av_log",
            "ldr r0, [r4, 0x20]",
            "ldr r1, [sp, 0x34]",
            "bl fcn.0006d348",
            "ldr r3, [r5, 0x4a0]",
            "cmp r7, r3",
            "blo 0x73110",
            "ldr r3, [r5, 0x484]",
            "mov r4, r6",
            "cmp r3, 0",
            "beq 0x73328",
            "ldr r3, [0x000733d8]",
            "mov sb, 0",
            "mov r6, sb",
            "mov fp, r4",
            "add r3, r4, r3",
            "str r3, [sp, 0x18]",
            "ldr r3, [0x000733dc]",
            "add r3, r4, r3",
            "str r3, [sp, 0x20]",
            "ldr r3, [0x000733e0]",
            "add r3, r4, r3",
            "str r3, [sp, 0x30]",
            "ldr r3, [0x000733d4]",
            "add r3, r4, r3",
            "str r3, [sp, 0x34]",
            "b 0x732fc",
            "ldr r3, [r5, 0x488]",
            "mov r2, 0",
            "ldr r1, [sp, 0x18]",
            "lsl r7, r6, 2",
            "mov r4, 0",
            "ldr r3, [r3, r6, lsl 2]",
            "ldr r0, [r3, 0x14]",
            "mov r3, r2",
            "bl sym.imp.av_dict_get",
            "ldr r3, [r5, 0x488]",
            "cmp r0, 0",
            "ldrne r2, [r0, 4]",
            "mov r1, 0x20",
            "ldreq r2, [sp, 0x20]",
            "mov r0, 0",
            "ldr r3, [r3, r6, lsl 2]",
            "ldr r3, [r3]",
            "str r2, [sp]",
            "ldr r2, [sp, 0x30]",
            "bl sym.imp.av_log",
            "ldr r3, [r5, 0x488]",
            "ldr r1, [sp, 0x34]",
            "ldr r3, [r3, r7]",
            "ldr r0, [r3, 0x14]",
            "bl fcn.0006d348",
            "b 0x732e0",
            "ldr r3, [r2, 0xc]",
            "mov r0, r5",
            "ldr r2, [sp, 0x2c]",
            "ldr r1, [r3, r4, lsl 2]",
            "mov r3, r8",
            "bl fcn.0006d478",
            "ldr r3, [r5, 0x488]",
            "mov r1, 1",
            "ldr r3, [r3, r7]",
            "ldr r3, [r3, 0xc]",
            "ldr r3, [r3, r4, lsl 2]",
            "add r4, r4, 1",
            "strb r1, [sl, r3]",
            "ldr r3, [r5, 0x488]",
            "ldr r2, [r3, r7]",
            "ldr r3, [r2, 0x10]",
            "cmp r4, r3",
            "blo 0x732ac",
            "add sb, r3, sb",
            "add r6, r6, 1",
            "ldr r3, [r5, 0x484]",
            "cmp r6, r3",
            "blo 0x73244",
            "ldr r3, [r5, 0x14]",
            "cmp sb, r3",
            "bhs 0x73328",
            "ldr r2, [0x000733e4]",
            "mov r0, 0",
            "mov r1, 0x20",
            "add r2, fp, r2",
            "bl sym.imp.av_log",
            "mov r4, 0",
            "b 0x73354",
            "ldrb r3, [sl, r4]",
            "cmp r3, 0",
            "bne 0x73350",
            "mov r0, r5",
            "mov r1, r4",
            "ldr r2, [sp, 0x2c]",
            "mov r3, r8",
            "bl fcn.0006d478",
            "add r4, r4, 1",
            "ldr r3, [r5, 0x14]",
            "cmp r4, r3",
            "blo 0x73330",
            "mov r0, sl",
            "add sp, sp, 0x3c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "b sym.imp.av_free",
            "ldr r3, [r5, 4]",
            "ldr r2, [0x000733e8]",
            "ldr r1, [r3]",
            "ldr r3, [0x000733ec]",
            "add r3, r4, r3",
            "b 0x72eac",
            "add sp, sp, 0x3c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0006d348": {
        "function_address": "0x0006d348",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "subs r7, r0, 0",
            "ldr r4, [0x0006d464]",
            "sub sp, sp, 0x114",
            "mov r8, r1",
            "add r4, pc, r4",
            "beq 0x6d45c",
            "ldr r3, [r7]",
            "cmp r3, 1",
            "bne 0x6d38c",
            "ldr r1, [0x0006d468]",
            "mov r2, 0",
            "mov r3, r2",
            "add r1, r4, r1",
            "bl sym.imp.av_dict_get",
            "cmp r0, 0",
            "bne 0x6d45c",
            "ldr r2, [0x0006d46c]",
            "mov r3, r8",
            "mov r0, 0",
            "mov r1, 0x20",
            "ldr sl, [0x0006d470]",
            "mov r6, 0",
            "add r2, r4, r2",
            "ldr sb, [0x0006d468]",
            "bl sym.imp.av_log",
            "ldr r3, [0x0006d474]",
            "add sl, r4, sl",
            "add sb, r4, sb",
            "add r5, sp, 0x10",
            "mov fp, 0x20",
            "add r4, r4, r3",
            "b 0x6d440",
            "mov r0, sb",
            "ldr r1, [r6]",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x6d440",
            "mov r0, r5",
            "ldr r1, [r6, 4]",
            "mov r2, 0x100",
            "bl sym.imp.av_strlcpy",
            "mov r3, 0",
            "b 0x6d40c",
            "ldrb r2, [r5, r3]",
            "cmp r2, 0xd",
            "moveq r2, fp",
            "strbeq r2, [r5, r3]",
            "add r3, r3, 1",
            "mov r0, r5",
            "str r3, [sp, 0xc]",
            "bl sym.imp.strlen",
            "ldr r3, [sp, 0xc]",
            "cmp r3, r0",
            "blo 0x6d3f8",
            "ldr r3, [r6]",
            "mov r0, 0",
            "mov r1, 0x20",
            "mov r2, r4",
            "stm sp, {r3, r5}",
            "mov r3, r8",
            "bl sym.imp.av_log",
            "mov r2, r6",
            "mov r0, r7",
            "mov r1, sl",
            "mov r3, 2",
            "bl sym.imp.av_dict_get",
            "subs r6, r0, 0",
            "bne 0x6d3cc",
            "add sp, sp, 0x114",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.imp.av_dict_get": {
        "function_address": "0x0000a128",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x618]!"
        ]
    },
    "fcn.0006d478": {
        "function_address": "0x0006d478",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "subs sb, r3, 0",
            "ldrne r3, [r0, 8]",
            "mov fp, r2",
            "sub sp, sp, 0x11c",
            "mov r7, r1",
            "ldreq r3, [r0, 4]",
            "ldrne r6, [r3, 0x28]",
            "ldr r5, [0x0006d914]",
            "ldreq r6, [r3, 0x24]",
            "ldr r3, [r0, 0x18]",
            "add r5, pc, r5",
            "ldr r4, [r3, r1, lsl 2]",
            "ldr r0, [r4, 0x38]",
            "ldr r2, [r4, 0x3c]",
            "asr r1, r0, 0x1f",
            "asr r3, r2, 0x1f",
            "bl sym.imp.av_gcd",
            "ldr r1, [0x0006d918]",
            "mov r2, 0",
            "mov r3, r2",
            "mov sl, r0",
            "ldr r0, [r4, 0x138]",
            "add r1, r5, r1",
            "bl sym.imp.av_dict_get",
            "mov r1, 0x100",
            "ldr r2, [r4, 8]",
            "mov r3, sb",
            "mov r8, r0",
            "add r0, sp, 0x10",
            "bl sym.imp.avcodec_string",
            "ldr r2, [0x0006d91c]",
            "mov r0, 0",
            "mov r1, 0x20",
            "mov r3, fp",
            "str r7, [sp]",
            "add r2, r5, r2",
            "bl sym.imp.av_log",
            "tst r6, 8",
            "beq 0x6d530",
            "ldr r2, [0x0006d920]",
            "mov r0, 0",
            "mov r1, 0x20",
            "ldr r3, [r4, 4]",
            "add r2, r5, r2",
            "bl sym.imp.av_log",
            "cmp r8, 0",
            "beq 0x6d550",
            "ldr r2, [0x0006d924]",
            "mov r0, 0",
            "mov r1, 0x20",
            "ldr r3, [r8, 4]",
            "add r2, r5, r2",
            "bl sym.imp.av_log",
            "ldr r6, [0x0006d928]",
            "mov r1, sl",
            "ldr r0, [r4, 0x38]",
            "bl fcn.0007d264",
            "add r6, r5, r6",
            "str r0, [sp]",
            "mov r1, sl",
            "ldr r0, [r4, 0x3c]",
            "bl fcn.0007d264",
            "mov r1, 0x30",
            "str r0, [sp, 4]",
            "mov r2, r6",
            "mov r0, 0",
            "ldr r3, [r4, 0x1a8]",
            "bl sym.imp.av_log",
            "ldr r2, [0x0006d92c]",
            "mov r0, 0",
            "mov r1, 0x20",
            "add r3, sp, 0x10",
            "add r2, r5, r2",
            "bl sym.imp.av_log",
            "ldr r7, [r4, 0x130]",
            "cmp r7, 0",
            "beq 0x6d63c",
            "ldr r6, [r4, 8]",
            "add r3, r4, 0x130",
            "ldm r3, {r0, r1}",
            "add r3, r6, 0x17c",
            "ldm r3, {r2, r3}",
            "bl fcn.0006ace0",
            "cmp r0, 0",
            "beq 0x6d63c",
            "ldr r3, [r6, 0x28]",
            "ldr r0, [r6, 0x2c]",
            "mul r7, r3, r7",
            "ldr r3, [r4, 0x134]",
            "mul r0, r0, r3",
            "mov r2, r7",
            "asr r3, r2, 0x1f",
            "asr r1, r0, 0x1f",
            "strd r0, r1, [sp]",
            "mov r0, 0x100000",
            "mov r1, 0",
            "strd r0, r1, [sp, 8]",
            "add r0, sp, 0x110",
            "add r1, r0, 4",
            "bl sym.imp.av_reduce",
            "ldr r3, [r4, 0x134]",
            "mov r0, 0",
            "ldr r2, [0x0006d930]",
            "mov r1, 0x20",
            "str r3, [sp]",
            "ldr r3, [sp, 0x110]",
            "add r2, r5, r2",
            "str r3, [sp, 4]",
            "ldr r3, [sp, 0x114]",
            "str r3, [sp, 8]",
            "ldr r3, [r4, 0x130]",
            "bl sym.imp.av_log",
            "ldr r3, [r4, 8]",
            "ldr r3, [r3, 0xd0]",
            "cmp r3, 0",
            "bne 0x6d7a8",
            "ldr r8, [r4, 0x1a4]",
            "cmp r8, 0",
            "beq 0x6d698",
            "ldr r0, [r4, 0x1a0]",
            "cmp r0, 0",
            "beq 0x6d698",
            "bl fcn.0007d690",
            "mov r6, r0",
            "mov r7, r1",
            "mov r0, r8",
            "bl fcn.0007d690",
            "mov r2, r0",
            "mov r3, r1",
            "mov r0, r6",
            "mov r1, r7",
            "bl fcn.0007d9d8",
            "ldr r2, [0x0006d934]",
            "add r2, r5, r2",
            "bl fcn.0006b2e8",
            "ldr r8, [r4, 0x10]",
            "cmp r8, 0",
            "beq 0x6d6e4",
            "ldr r0, [r4, 0xc]",
            "cmp r0, 0",
            "beq 0x6d6e4",
            "bl fcn.0007d690",
            "mov r6, r0",
            "mov r7, r1",
            "mov r0, r8",
            "bl fcn.0007d690",
            "mov r2, r0",
            "mov r3, r1",
            "mov r0, r6",
            "mov r1, r7",
            "bl fcn.0007d9d8",
            "ldr r2, [0x0006d938]",
            "add r2, r5, r2",
            "bl fcn.0006b2e8",
            "ldr r8, [r4, 0x3c]",
            "cmp r8, 0",
            "beq 0x6d744",
            "ldr r0, [r4, 0x38]",
            "cmp r0, 0",
            "beq 0x6d744",
            "bl fcn.0007d690",
            "mov r6, r0",
            "mov r7, r1",
            "mov r0, r8",
            "bl fcn.0007d690",
            "mov r2, r0",
            "mov r3, r1",
            "mov r0, r6",
            "mov r1, r7",
            "bl fcn.0007d9d8",
            "mov r2, r0",
            "mov r3, r1",
            "mov r0, 0",
            "ldr r1, [0x0006d93c]",
            "bl fcn.0007d9d8",
            "ldr r2, [0x0006d940]",
            "add r2, r5, r2",
            "bl fcn.0006b2e8",
            "ldr r3, [r4, 8]",
            "ldr r8, [r3, 0x24]",
            "cmp r8, 0",
            "beq 0x6d7a8",
            "ldr r0, [r3, 0x20]",
            "cmp r0, 0",
            "beq 0x6d7a8",
            "bl fcn.0007d690",
            "mov r6, r0",
            "mov r7, r1",
            "mov r0, r8",
            "bl fcn.0007d690",
            "mov r2, r0",
            "mov r3, r1",
            "mov r0, r6",
            "mov r1, r7",
            "bl fcn.0007d9d8",
            "mov r2, r0",
            "mov r3, r1",
            "mov r0, 0",
            "ldr r1, [0x0006d93c]",
            "bl fcn.0007d9d8",
            "ldr r2, [0x0006d944]",
            "add r2, r5, r2",
            "bl fcn.0006b2e8",
            "ldr r3, [r4, 0x98]",
            "tst r3, 1",
            "beq 0x6d7c8",
            "ldr r2, [0x0006d948]",
            "mov r0, 0",
            "mov r1, 0x20",
            "add r2, r5, r2",
            "bl sym.imp.av_log",
            "ldr r3, [r4, 0x98]",
            "tst r3, 2",
            "beq 0x6d7e8",
            "ldr r2, [0x0006d94c]",
            "mov r0, 0",
            "mov r1, 0x20",
            "add r2, r5, r2",
            "bl sym.imp.av_log",
            "ldr r3, [r4, 0x98]",
            "tst r3, 4",
            "beq 0x6d808",
            "ldr r2, [0x0006d950]",
            "mov r0, 0",
            "mov r1, 0x20",
            "add r2, r5, r2",
            "bl sym.imp.av_log",
            "ldr r3, [r4, 0x98]",
            "tst r3, 8",
            "beq 0x6d828",
            "ldr r2, [0x0006d954]",
            "mov r0, 0",
            "mov r1, 0x20",
            "add r2, r5, r2",
            "bl sym.imp.av_log",
            "ldr r3, [r4, 0x98]",
            "tst r3, 0x10",
            "beq 0x6d848",
            "ldr r2, [0x0006d958]",
            "mov r0, 0",
            "mov r1, 0x20",
            "add r2, r5, r2",
            "bl sym.imp.av_log",
            "ldr r3, [r4, 0x98]",
            "tst r3, 0x20",
            "beq 0x6d868",
            "ldr r2, [0x0006d95c]",
            "mov r0, 0",
            "mov r1, 0x20",
            "add r2, r5, r2",
            "bl sym.imp.av_log",
            "ldr r3, [r4, 0x98]",
            "tst r3, 0x40",
            "beq 0x6d888",
            "ldr r2, [0x0006d960]",
            "mov r0, 0",
            "mov r1, 0x20",
            "add r2, r5, r2",
            "bl sym.imp.av_log",
            "ldr r3, [r4, 0x98]",
            "tst r3, 0x80",
            "beq 0x6d8a8",
            "ldr r2, [0x0006d964]",
            "mov r0, 0",
            "mov r1, 0x20",
            "add r2, r5, r2",
            "bl sym.imp.av_log",
            "ldr r3, [r4, 0x98]",
            "tst r3, 0x100",
            "beq 0x6d8c8",
            "ldr r2, [0x0006d968]",
            "mov r0, 0",
            "mov r1, 0x20",
            "add r2, r5, r2",
            "bl sym.imp.av_log",
            "ldr r3, [r4, 0x98]",
            "tst r3, 0x200",
            "beq 0x6d8e8",
            "ldr r2, [0x0006d96c]",
            "mov r0, 0",
            "mov r1, 0x20",
            "add r2, r5, r2",
            "bl sym.imp.av_log",
            "ldr r2, [0x0006d970]",
            "mov r0, 0",
            "mov r1, 0x20",
            "add r2, r5, r2",
            "bl sym.imp.av_log",
            "ldr r1, [0x0006d974]",
            "ldr r0, [r4, 0x138]",
            "add r1, r5, r1",
            "bl fcn.0006d348",
            "add sp, sp, 0x11c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.avio_close_dyn_buf": {
        "function_address": "0x0001aa60",
        "instructions": [
            "ldr r2, [r0, 0x38]",
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r4, r0",
            "ldr r3, [0x0001aac8]",
            "mov r6, r1",
            "cmp r2, 0",
            "ldr r5, [r0, 0x10]",
            "movne r7, 0",
            "add r3, pc, r3",
            "bne 0x1aa9c",
            "ldr r1, [0x0001aacc]",
            "mov r7, 0x10",
            "add r2, r2, 0x10",
            "add r1, r3, r1",
            "bl sym.avio_write",
            "mov r0, r4",
            "bl sym.avio_flush",
            "ldr r3, [r5, 0xc]",
            "mov r0, r5",
            "str r3, [r6]",
            "ldr r6, [r5, 4]",
            "bl sym.imp.av_free",
            "mov r0, r4",
            "bl sym.imp.av_free",
            "rsb r0, r7, r6",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "sym.avio_flush": {
        "function_address": "0x000194e8",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r0",
            "bl fcn.00019018",
            "mov r3, 0",
            "str r3, [r4, 0x28]",
            "pop {r4, pc}"
        ]
    },
    "sym.avio_wl32": {
        "function_address": "0x000195bc",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r5, r0",
            "mov r4, r1",
            "bl sym.avio_w8",
            "mov r0, r5",
            "lsr r1, r4, 8",
            "bl sym.avio_w8",
            "mov r0, r5",
            "lsr r1, r4, 0x10",
            "bl sym.avio_w8",
            "mov r0, r5",
            "lsr r1, r4, 0x18",
            "pop {r4, r5, r6, lr}",
            "b sym.avio_w8"
        ]
    },
    "sym.avpriv_dv_init_demux": {
        "function_address": "0x0001f7d8",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r6, r0",
            "movw r0, 0x8150",
            "bl sym.imp.av_mallocz",
            "subs r4, r0, 0",
            "beq 0x1f874",
            "mov r0, r6",
            "mov r1, 0",
            "bl sym.avformat_new_stream",
            "cmp r0, 0",
            "mov r5, r0",
            "str r0, [r4, 8]",
            "bne 0x1f81c",
            "mov r0, r4",
            "mov r4, r5",
            "bl sym.imp.av_free",
            "b 0x1f874",
            "mov r5, 0",
            "mov r2, 0x10",
            "mov r1, r5",
            "stm r4, {r5, r6}",
            "add r0, r4, 0xc",
            "bl sym.imp.memset",
            "ldr r0, [r4, 8]",
            "movw r3, 0x8140",
            "str r5, [r4, r3]",
            "add r3, r3, 4",
            "str r5, [r4, r3]",
            "mov r2, 0",
            "mov r3, 0",
            "movw r1, 0x8148",
            "strd r2, r3, [r4, r1]",
            "mov ip, 0x19",
            "ldr r1, [r0, 8]",
            "str ip, [r1, 0xd4]",
            "ldr ip, [0x0001f87c]",
            "str r5, [r1, 0xd0]",
            "str ip, [r1, 4]",
            "strd r2, r3, [r0, 0x50]",
            "mov r0, r4",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.av_url_split": {
        "function_address": "0x00074054",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x14",
            "ldr r6, [sp, 0x40]",
            "mov ip, r0",
            "str r1, [sp, 4]",
            "mov r1, 0x3a",
            "str r2, [sp, 8]",
            "cmp r6, 0",
            "ldr r2, [sp, 4]",
            "str r3, [sp, 0xc]",
            "mvnne r3, 0",
            "ldr r7, [sp, 0x3c]",
            "ldr sb, [sp, 0x48]",
            "ldr fp, [sp, 0x4c]",
            "ldr r8, [sp, 0x38]",
            "ldr sl, [sp, 0x44]",
            "strne r3, [r6]",
            "cmp r2, 0",
            "movgt r3, 0",
            "strbgt r3, [r0]",
            "mov r0, fp",
            "ldr r3, [sp, 0xc]",
            "cmp r3, 0",
            "ldrgt r2, [sp, 8]",
            "movgt r3, 0",
            "strbgt r3, [r2]",
            "cmp r7, 0",
            "movgt r3, 0",
            "strbgt r3, [r8]",
            "cmp sb, 0",
            "movgt r3, 0",
            "strbgt r3, [sl]",
            "str ip, [sp]",
            "bl sym.imp.strchr",
            "subs r5, r0, 0",
            "ldr ip, [sp]",
            "beq 0x74138",
            "ldr r3, [sp, 4]",
            "add r4, r5, 1",
            "rsb r2, fp, r4",
            "mov r0, ip",
            "mov r1, fp",
            "cmp r2, r3",
            "movge r2, r3",
            "bl sym.imp.av_strlcpy",
            "ldrb r3, [r5, 1]",
            "mov r1, 0x2f",
            "cmp r3, 0x2f",
            "addeq r4, r4, 1",
            "ldrb r3, [r4]",
            "cmp r3, 0x2f",
            "addeq r4, r4, 1",
            "mov r0, r4",
            "bl sym.imp.strchr",
            "subs r5, r0, 0",
            "bne 0x7415c",
            "b 0x74148",
            "mov r0, sl",
            "mov r1, fp",
            "mov r2, sb",
            "b 0x74294",
            "mov r0, r4",
            "mov r1, 0x3f",
            "bl sym.imp.strchr",
            "subs r5, r0, 0",
            "beq 0x74170",
            "mov r0, sl",
            "mov r1, r5",
            "mov r2, sb",
            "bl sym.imp.av_strlcpy",
            "b 0x7417c",
            "mov r0, r4",
            "bl sym.imp.strlen",
            "add r5, r4, r0",
            "cmp r5, r4",
            "beq 0x742a0",
            "mov r0, r4",
            "mov r1, 0x40",
            "bl sym.imp.strchr",
            "cmp r0, 0",
            "beq 0x741c4",
            "cmp r0, r5",
            "bhs 0x741c4",
            "ldr r3, [sp, 0xc]",
            "add sl, r0, 1",
            "rsb r2, r4, sl",
            "mov r1, r4",
            "mov r4, sl",
            "ldr r0, [sp, 8]",
            "cmp r2, r3",
            "movge r2, r3",
            "bl sym.imp.av_strlcpy",
            "ldrb r3, [r4]",
            "cmp r3, 0x5b",
            "bne 0x7422c",
            "mov r0, r4",
            "mov r1, 0x5d",
            "bl sym.imp.strchr",
            "subs sl, r0, 0",
            "beq 0x7422c",
            "cmp sl, r5",
            "bhs 0x7422c",
            "rsb r2, r4, sl",
            "mov r0, r8",
            "cmp r2, r7",
            "movge r2, r7",
            "add r1, r4, 1",
            "bl sym.imp.av_strlcpy",
            "ldrb r3, [sl, 1]",
            "cmp r3, 0x3a",
            "movne r3, 0",
            "moveq r3, 1",
            "cmp r6, 0",
            "moveq r3, 0",
            "cmp r3, 0",
            "addne r0, sl, 2",
            "bne 0x74270",
            "b 0x742a0",
            "mov r0, r4",
            "mov r1, 0x3a",
            "bl sym.imp.strchr",
            "cmp r0, 0",
            "beq 0x7427c",
            "cmp r0, r5",
            "bhs 0x7427c",
            "add r5, r0, 1",
            "mov r1, r4",
            "rsb r2, r4, r5",
            "mov r0, r8",
            "cmp r2, r7",
            "movge r2, r7",
            "bl sym.imp.av_strlcpy",
            "cmp r6, 0",
            "beq 0x742a0",
            "mov r0, r5",
            "bl sym.imp.atoi",
            "str r0, [r6]",
            "b 0x742a0",
            "add r5, r5, 1",
            "mov r0, r8",
            "rsb r2, r4, r5",
            "mov r1, r4",
            "cmp r2, r7",
            "movge r2, r7",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "b sym.imp.av_strlcpy",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.avio_rl24": {
        "function_address": "0x0001a1b8",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r5, r0",
            "bl sym.avio_rl16",
            "mov r4, r0",
            "mov r0, r5",
            "bl sym.avio_r8",
            "orr r0, r4, r0, lsl 16",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.av_pkt_dump_log": {
        "function_address": "0x00073fb0",
        "instructions": [
            "ldr ip, fcn.0001f418",
            "push {r4, r5, r6, lr}",
            "mov lr, r2",
            "ldr r2, [0x00074010]",
            "mov r5, r0",
            "add ip, pc, ip",
            "mov r4, r1",
            "sub sp, sp, 0x18",
            "add ip, ip, r2",
            "add r6, sp, 0x10",
            "add ip, ip, 0x10c",
            "mov r2, sp",
            "ldm ip, {r0, r1}",
            "stm r6, {r0, r1}",
            "str r3, [r2], 4",
            "mov r3, lr",
            "stm r2, {r0, r1}",
            "mov r0, r5",
            "mov r1, 0",
            "mov r2, r4",
            "bl fcn.00073aa8",
            "add sp, sp, 0x18",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.avio_rb64": {
        "function_address": "0x00019fb0",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r6, r0",
            "mov r4, 0",
            "bl sym.avio_rb32",
            "mov r5, r0",
            "mov r0, r6",
            "bl sym.avio_rb32",
            "orr r4, r4, r0",
            "mov r1, r5",
            "mov r0, r4",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.av_gettime": {
        "function_address": "0x000733f4",
        "instructions": [
            "push {r0, r1, r2, lr}",
            "mov r1, 0",
            "mov r0, sp",
            "bl sym.imp.gettimeofday",
            "ldm sp, {r0, r2}",
            "ldr r1, [0x00073424]",
            "asr r3, r2, 0x1f",
            "smlal r2, r3, r1, r0",
            "mov r0, r2",
            "mov r1, r3",
            "add sp, sp, 0xc",
            "ldm sp!, {pc}"
        ]
    },
    "sym.imp.gettimeofday": {
        "function_address": "0x0000990c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0xb80]!"
        ]
    },
    "sym.ff_socket_nonblock": {
        "function_address": "0x0004db58",
        "instructions": [
            "cmp r1, 0",
            "push {r4, lr}",
            "mov r4, r0",
            "beq 0x4db78",
            "mov r1, 3",
            "bl sym.imp.fcntl64",
            "orr r2, r0, 0x800",
            "b 0x4db84",
            "mov r1, 3",
            "bl sym.imp.fcntl64",
            "bic r2, r0, 0x800",
            "mov r0, r4",
            "mov r1, 4",
            "pop {r4, lr}",
            "b sym.imp.fcntl64"
        ]
    },
    "sym.imp.fcntl64": {
        "function_address": "0x000097ec",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0xc40]!"
        ]
    },
    "sym.av_convert_lang_to": {
        "function_address": "0x0001aad8",
        "instructions": [
            "ldr r3, [0x0001abd0]",
            "cmp r1, 2",
            "push {r0, r1, r2, r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov sb, r0",
            "mov r6, r1",
            "add r3, pc, r3",
            "bls 0x1ab00",
            "b 0x1abc8",
            "mov r6, r3",
            "b 0x1ab18",
            "ldr r5, [0x0001abd4]",
            "ldr r8, [0x0001abd8]",
            "ldr fp, [0x0001abdc]",
            "add r5, r3, r5",
            "add r8, r3, r8",
            "add fp, r3, fp",
            "mov r4, 0",
            "mov sl, 6",
            "mov r0, r4",
            "mov r7, r4",
            "b 0x1ab58",
            "sub r3, r8, 0xfd0",
            "add r7, r7, 1",
            "ldrh r1, [r3, r4]",
            "add r3, r3, 8",
            "ldrh r2, [r3, r4]",
            "add r4, r4, 2",
            "mov r0, sb",
            "mov r3, 6",
            "str fp, [sp]",
            "mla r1, sl, r1, r5",
            "bl sym.imp.bsearch",
            "cmp r7, 2",
            "cmple r0, 0",
            "beq 0x1ab2c",
            "cmp r0, 0",
            "beq 0x1abcc",
            "add r4, r8, r6, lsl 1",
            "mov r1, 6",
            "sub r3, r4, 0xfd0",
            "ldrh ip, [r3]",
            "mov r3, 3",
            "mla r7, r1, ip, r5",
            "cmp r0, r7",
            "blo 0x1aba8",
            "sub r2, r4, 0xfc0",
            "sub r2, r2, 8",
            "ldrh r2, [r2]",
            "add r2, r2, ip",
            "mla r2, r1, r2, r5",
            "cmp r0, r2",
            "blo 0x1abcc",
            "subs r3, r3, 1",
            "ldrh r0, [r0, 4]",
            "mlane r0, r1, r0, r5",
            "bne 0x1ab84",
            "cmp r6, 1",
            "beq 0x1aaf8",
            "mov r0, r3",
            "b 0x1abcc",
            "mov r0, 0",
            "pop {r1, r2, r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.imp.bsearch": {
        "function_address": "0x00009c0c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x980]!"
        ]
    },
    "sym.put_tag": {
        "function_address": "0x00019958",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r5, r0",
            "mov r4, r1",
            "b 0x19970",
            "mov r0, r5",
            "bl sym.avio_w8",
            "ldrb r1, [r4], 1",
            "cmp r1, 0",
            "bne 0x19968",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.av_read_frame": {
        "function_address": "0x0006f154",
        "instructions": [
            "push {r4, r5, lr}",
            "sub sp, sp, 0x14",
            "ldr r4, [r0]",
            "mov r5, r0",
            "ldr r3, [0x0006d338]",
            "cmp r4, 0",
            "str r4, [sp, 0xc]",
            "add r3, pc, r3",
            "bne 0x6d30c",
            "ldr r2, [0x0006d33c]",
            "mov r0, r4",
            "ldr ip, [0x0006d340]",
            "mov r1, 8",
            "add r2, r3, r2",
            "str r2, [sp]",
            "movw r2, 0x52d",
            "str r2, [sp, 4]",
            "ldr r2, [0x0006d344]",
            "add r2, r3, r2",
            "add r3, r3, ip",
            "bl sym.imp.av_log",
            "bl sym.imp.abort",
            "mov r2, 0x48",
            "mov r0, r1",
            "mov r1, r4",
            "bl sym.imp.memcpy",
            "ldr r3, [r4, 0x48]",
            "add r0, sp, 0xc",
            "str r3, [r5]",
            "bl sym.imp.av_freep",
            "mov r0, 0",
            "add sp, sp, 0x14",
            "pop {r4, r5, pc}",
            "ldr r3, [r0, 0x46c]",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r5, r0",
            "sub sp, sp, 0x14",
            "mov r7, r1",
            "tst r3, 1",
            "beq 0x6f18c",
            "add r3, r0, 0x4b0",
            "add fp, r0, 0x420",
            "add r3, r3, 4",
            "mov sb, 0",
            "add fp, fp, 0xc",
            "str r3, [sp, 0xc]",
            "b 0x6f1b0",
            "ldr r3, [r0, 0x42c]",
            "cmp r3, 0",
            "addne r0, r0, 0x420",
            "addne r0, r0, 0xc",
            "bne 0x6f2c0",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "b fcn.0006ebc0",
            "mov sb, 1",
            "ldr r4, [r5, 0x42c]",
            "cmp r4, 0",
            "beq 0x6f2cc",
            "ldr r3, [r4, 8]",
            "cmp r3, 0",
            "bne 0x6f1d8",
            "ldr r3, [r4, 0xc]",
            "cmp r3, 0x80000000",
            "moveq r6, r4",
            "beq 0x6f274",
            "ldr r2, [r4, 0x18]",
            "mov r0, 2",
            "ldr r3, [r5, 0x18]",
            "mov r1, 0",
            "mov r6, r4",
            "ldr r3, [r3, r2, lsl 2]",
            "ldr r2, [r3, 0x40]",
            "sub r2, r2, 1",
            "bl fcn.0007d398",
            "mov r8, r0",
            "mov sl, r1",
            "b 0x6f258",
            "ldr r2, [r6, 0x18]",
            "ldr r3, [r4, 0x18]",
            "cmp r2, r3",
            "bne 0x6f24c",
            "ldrd r0, r1, [r4, 8]",
            "ldrd r2, r3, [r6, 8]",
            "stm sp, {r8, sl}",
            "bl sym.imp.av_compare_mod",
            "cmp r1, 0",
            "bge 0x6f24c",
            "ldrd r2, r3, [r6, 8]",
            "stm sp, {r8, sl}",
            "ldrd r0, r1, [r6]",
            "bl sym.imp.av_compare_mod",
            "orrs r1, r0, r1",
            "ldrdne r2, r3, [r6, 8]",
            "strdne r2, r3, [r4]",
            "ldr r6, [r6, 0x48]",
            "cmp r6, 0",
            "beq 0x6f270",
            "ldr r3, [r4]",
            "cmp r3, 0",
            "bne 0x6f270",
            "ldr r3, [r4, 4]",
            "cmp r3, 0x80000000",
            "beq 0x6f208",
            "ldr r6, [r5, 0x42c]",
            "ldr r3, [r4]",
            "cmp r3, 0",
            "bne 0x6f2b4",
            "ldr r3, [r4, 4]",
            "cmp r3, 0x80000000",
            "bne 0x6f2b4",
            "ldrd r2, r3, [r4, 8]",
            "mov r1, 0x80000000",
            "mov r0, 0",
            "eor r3, r3, r1",
            "eor r2, r2, r0",
            "orrs r1, r2, r3",
            "movne r3, sb",
            "orreq r3, sb, 1",
            "cmp r3, 0",
            "beq 0x6f2d0",
            "add r0, r5, 0x420",
            "mov r1, r7",
            "add r0, r0, 0xc",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "b 0x6d2b4",
            "mov r6, r4",
            "mov r0, r5",
            "mov r1, r7",
            "bl fcn.0006ebc0",
            "cmp r0, 0",
            "bge 0x6f2f4",
            "cmp r6, 0",
            "cmnne r0, 0xb",
            "bne 0x6f1ac",
            "b 0x6f314",
            "mov r1, r7",
            "ldr r2, [sp, 0xc]",
            "mov r0, fp",
            "bl fcn.0006b298",
            "bl sym.imp.av_dup_packet",
            "cmp r0, 0",
            "bge 0x6f1b0",
            "mvn r0, 0xb",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.imp.av_compare_mod": {
        "function_address": "0x000097e0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0xc48]!"
        ]
    },
    "sym.av_seek_frame": {
        "function_address": "0x0006faa8",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x5c",
            "ldr fp, [sp, 0x80]",
            "mov r4, r0",
            "mov r8, r1",
            "mov r6, r2",
            "ldr sl, [0x0006fe80]",
            "mov r5, r3",
            "tst fp, 2",
            "add sl, pc, sl",
            "beq 0x6fb5c",
            "ldr r3, [r0, 4]",
            "ldr r3, [r3, 0x24]",
            "tst r3, 0x8000",
            "bne 0x6fe74",
            "bl fcn.0006e700",
            "ldr r7, [r4, 0x454]",
            "ldr r0, [r4, 0x10]",
            "ldr r8, [r4, 0x450]",
            "bl sym.avio_size",
            "cmp r7, r5",
            "bgt 0x6fb40",
            "bne 0x6fb0c",
            "cmp r8, r6",
            "bhi 0x6fb40",
            "mvn r2, 0",
            "mvn r3, 0",
            "adds r2, r2, r0",
            "adc r3, r3, r1",
            "mov r8, r2",
            "cmp r3, r5",
            "mov r7, r3",
            "bgt 0x6fb38",
            "bne 0x6fb40",
            "cmp r2, r6",
            "bls 0x6fb40",
            "mov r8, r6",
            "mov r7, r5",
            "mov r5, 0",
            "ldr r0, [r4, 0x10]",
            "mov r2, r8",
            "mov r3, r7",
            "str r5, [sp]",
            "bl sym.avio_seek",
            "b 0x6fe64",
            "cmp r1, 0",
            "bge 0x6fba4",
            "bl sym.av_find_default_stream_index",
            "subs r8, r0, 0",
            "blt 0x6fe74",
            "ldr r3, [r4, 0x18]",
            "ldr r3, [r3, r8, lsl 2]",
            "ldr r2, [r3, 0x3c]",
            "ldr r0, [r3, 0x38]",
            "ldr r3, [0x0006fe84]",
            "smull r0, r1, r0, r3",
            "asr r3, r2, 0x1f",
            "strd r0, r1, [sp]",
            "mov r0, r6",
            "mov r1, r5",
            "bl sym.imp.av_rescale",
            "mov r6, r0",
            "mov r5, r1",
            "ldr r3, [r4, 4]",
            "ldr r3, [r3, 0x1c]",
            "cmp r3, 0",
            "beq 0x6fbe4",
            "mov r0, r4",
            "bl fcn.0006e700",
            "ldr r3, [r4, 4]",
            "mov r0, r4",
            "str fp, [sp]",
            "mov r1, r8",
            "mov r2, r6",
            "ldr ip, [r3, 0x1c]",
            "mov r3, r5",
            "blx ip",
            "cmp r0, 0",
            "bge 0x6fe6c",
            "ldr r3, [r4, 4]",
            "ldr r2, [r3, 0x20]",
            "cmp r2, 0",
            "beq 0x6fc24",
            "ldr r2, [r3, 0x24]",
            "tst r2, 0x2000",
            "bne 0x6fc24",
            "mov r0, r4",
            "bl fcn.0006e700",
            "mov r0, r4",
            "mov r1, r8",
            "mov r2, r6",
            "mov r3, r5",
            "str fp, [sp]",
            "bl fcn.0006f824",
            "b 0x6fe78",
            "ldr r3, [r3, 0x24]",
            "tst r3, 0x4000",
            "bne 0x6fe74",
            "mov r0, r4",
            "bl fcn.0006e700",
            "ldr r3, [r4, 0x18]",
            "mov r2, r6",
            "ldr r7, [r3, r8, lsl 2]",
            "mov r3, r5",
            "str fp, [sp]",
            "mov r0, r7",
            "bl sym.av_index_search_timestamp",
            "subs sb, r0, 0",
            "ldr r3, [r7, 0x84]",
            "bge 0x6fc8c",
            "cmp r3, 0",
            "beq 0x6fc98",
            "ldr r3, [r7, 0x80]",
            "ldr r2, [r3, 0xc]",
            "cmp r2, r5",
            "bgt 0x6fe74",
            "bne 0x6fc98",
            "ldr r3, [r3, 8]",
            "cmp r3, r6",
            "bls 0x6fc98",
            "b 0x6fe74",
            "sub r3, r3, 1",
            "cmp sb, r3",
            "bne 0x6fdf0",
            "ldr r1, [r7, 0x84]",
            "cmp r1, 0",
            "beq 0x6fd24",
            "ldr r3, [r7, 0x80]",
            "cmp r3, 0",
            "bne 0x6fcd4",
            "ldr r3, [0x0006fe88]",
            "movw r2, 0x72f",
            "ldr r0, [0x0006fe8c]",
            "ldr r1, [0x0006fe90]",
            "add r3, sl, r3",
            "add r0, sl, r0",
            "add r3, r3, 0x9c",
            "add r1, sl, r1",
            "bl sym.imp.__assert",
            "sub r1, r1, 1",
            "mov r2, 0x18",
            "mul r2, r2, r1",
            "mov r1, 0",
            "str r1, [sp]",
            "ldr r0, [r4, 0x10]",
            "add sb, r3, r2",
            "add r2, r3, r2",
            "ldrd r2, r3, [r2]",
            "bl sym.avio_seek",
            "cmp r1, 0",
            "blt 0x6fe78",
            "mov r0, r4",
            "mov r1, r7",
            "ldrd r2, r3, [sb, 8]",
            "bl fcn.0006e7c4",
            "add r3, sp, 0x10",
            "mov sb, 0",
            "str r3, [sp, 0xc]",
            "b 0x6fd4c",
            "mov r3, 0x450",
            "ldr r0, [r4, 0x10]",
            "ldrd r2, r3, [r3, r4]",
            "str r1, [sp]",
            "bl sym.avio_seek",
            "cmp r1, 0",
            "blt 0x6fe78",
            "b 0x6fd14",
            "mov r3, sb",
            "mov sb, r3",
            "mov r0, r4",
            "ldr r1, [sp, 0xc]",
            "bl sym.av_read_frame",
            "cmn r0, 0xb",
            "beq 0x6fd4c",
            "cmp r0, 0",
            "blt 0x6fdd4",
            "ldr r0, [sp, 0xc]",
            "bl sym.imp.av_free_packet",
            "ldr r3, [sp, 0x28]",
            "cmp r8, r3",
            "bne 0x6fd44",
            "ldr r3, [sp, 0x1c]",
            "cmp r3, r5",
            "bgt 0x6fd98",
            "bne 0x6fd44",
            "ldr r3, [sp, 0x18]",
            "cmp r3, r6",
            "bls 0x6fd44",
            "ldr r3, [sp, 0x2c]",
            "tst r3, 1",
            "bne 0x6fdd4",
            "cmp sb, 0x3e8",
            "add r3, sb, 1",
            "ble 0x6fd48",
            "ldr r2, [r7, 8]",
            "ldr r2, [r2, 0xd4]",
            "cmp r2, 0x89",
            "beq 0x6fd48",
            "ldr r2, [0x0006fe94]",
            "mov r0, r4",
            "mov r1, 0x10",
            "add r2, sl, r2",
            "bl sym.imp.av_log",
            "mov r0, r7",
            "mov r2, r6",
            "mov r3, r5",
            "str fp, [sp]",
            "bl sym.av_index_search_timestamp",
            "subs sb, r0, 0",
            "blt 0x6fe74",
            "mov r0, r4",
            "bl fcn.0006e700",
            "ldr r3, [r4, 4]",
            "ldr ip, [r3, 0x1c]",
            "cmp ip, 0",
            "beq 0x6fe28",
            "str fp, [sp]",
            "mov r0, r4",
            "mov r1, r8",
            "mov r2, r6",
            "mov r3, r5",
            "blx ip",
            "cmp r0, 0",
            "bge 0x6fe6c",
            "mov r3, 0x18",
            "mov r5, 0",
            "mul sb, r3, sb",
            "ldr r3, [r7, 0x80]",
            "ldr r0, [r4, 0x10]",
            "str r5, [sp]",
            "add r6, r3, sb",
            "ldrd r2, r3, [r3, sb]",
            "bl sym.avio_seek",
            "cmp r1, r5",
            "blt 0x6fe78",
            "mov r0, r4",
            "mov r1, r7",
            "ldrd r2, r3, [r6, 8]",
            "bl fcn.0006e7c4",
            "mov r0, r5",
            "b 0x6fe78",
            "mov r0, 0",
            "b 0x6fe78",
            "mvn r0, 0",
            "add sp, sp, 0x5c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.av_find_default_stream_index": {
        "function_address": "0x0006e6a0",
        "instructions": [
            "ldr r1, [r0, 0x14]",
            "cmp r1, 0",
            "movne r3, 0",
            "mvnne r2, 0",
            "bne 0x6e6e4",
            "b 0x6e6f4",
            "ldr ip, [r0, 0x18]",
            "ldr ip, [ip, r3, lsl 2]",
            "ldr ip, [ip, 8]",
            "ldr ip, [ip, 0xd0]",
            "cmp ip, 0",
            "beq 0x6e6f8",
            "cmn r2, 1",
            "bne 0x6e6e0",
            "cmp ip, 1",
            "moveq r2, r3",
            "add r3, r3, 1",
            "cmp r3, r1",
            "blo 0x6e6b8",
            "bic r3, r2, r2, asr 31",
            "b 0x6e6f8",
            "mvn r3, 0",
            "mov r0, r3",
            "bx lr"
        ]
    },
    "fcn.0006f824": {
        "function_address": "0x0006f824",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r6, r0",
            "ldr r4, [0x0006fa8c]",
            "subs sb, r1, 0",
            "sub sp, sp, 0x6c",
            "mov r7, r2",
            "ldr r0, [r0, 4]",
            "mov r8, r3",
            "add r4, pc, r4",
            "str r0, [sp, 0x54]",
            "blt 0x6fa80",
            "ldr r1, [r6, 0x18]",
            "ldr r5, [r1, sb, lsl 2]",
            "ldr r1, [r5, 0x80]",
            "cmp r1, 0",
            "beq 0x6f9cc",
            "ldr sl, [sp, 0x90]",
            "mov r0, r5",
            "orr r1, sl, 1",
            "str r1, [sp]",
            "bl sym.av_index_search_timestamp",
            "mov r3, 0x18",
            "bic r0, r0, r0, asr 31",
            "mul r3, r3, r0",
            "ldr r2, [r5, 0x80]",
            "add r1, r2, r3",
            "ldrd sl, fp, [r1, 8]",
            "cmp fp, r8",
            "strd sl, fp, [sp, 0x38]",
            "bgt 0x6f8a8",
            "bne 0x6f8d0",
            "cmp sl, r7",
            "bls 0x6f8d0",
            "ldr ip, [r1, 0x14]",
            "ldr lr, [r2, r3]",
            "mov sl, ip",
            "asr fp, sl, 0x1f",
            "cmp lr, ip",
            "strd sl, fp, [sp, 0x58]",
            "bne 0x6f8dc",
            "ldr r1, [r1, 4]",
            "cmp r1, fp",
            "bne 0x6f8dc",
            "ldrd r0, r1, [r2, r3]",
            "strd r0, r1, [sp, 0x48]",
            "b 0x6f910",
            "cmp r0, 0",
            "beq 0x6f904",
            "ldr r3, [0x0006fa90]",
            "movw r2, 0x65e",
            "ldr r0, [0x0006fa94]",
            "ldr r1, [0x0006fa98]",
            "add r3, r4, r3",
            "add r0, r4, r0",
            "add r1, r4, r1",
            "b 0x6f954",
            "mov r2, 0",
            "mov r3, 0x80000000",
            "strd r2, r3, [sp, 0x38]",
            "ldr sl, [sp, 0x90]",
            "mov r0, r5",
            "mov r2, r7",
            "bic r3, sl, 1",
            "str r3, [sp]",
            "mov r3, r8",
            "bl sym.av_index_search_timestamp",
            "ldr r3, [r5, 0x84]",
            "cmp r0, r3",
            "blt 0x6f95c",
            "ldr r3, [0x0006fa90]",
            "movw r2, 0x662",
            "ldr r0, [0x0006fa9c]",
            "ldr r1, [0x0006fa98]",
            "add r3, r4, r3",
            "add r0, r4, r0",
            "add r1, r4, r1",
            "add r3, r3, 0x84",
            "bl sym.imp.__assert",
            "cmp r0, 0",
            "blt 0x6f9dc",
            "mov r3, 0x18",
            "ldr ip, [r5, 0x80]",
            "mul r0, r3, r0",
            "add r1, ip, r0",
            "ldrd r2, r3, [r1, 8]",
            "cmp r8, r3",
            "bgt 0x6f98c",
            "bne 0x6f9ac",
            "cmp r7, r2",
            "bls 0x6f9ac",
            "ldr r3, [0x0006fa90]",
            "movw r2, 0x665",
            "ldr r0, [0x0006faa0]",
            "ldr r1, [0x0006fa98]",
            "add r3, r4, r3",
            "add r0, r4, r0",
            "add r1, r4, r1",
            "b 0x6f954",
            "ldrd sl, fp, [ip, r0]",
            "ldr ip, [r1, 0x14]",
            "mov r0, sl",
            "mov r1, fp",
            "strd sl, fp, [sp, 0x40]",
            "subs r0, r0, ip",
            "sbc r1, r1, ip, asr 31",
            "b 0x6f9ec",
            "mov r2, 0",
            "mov r3, 0x80000000",
            "strd r2, r3, [sp, 0x38]",
            "b 0x6f9e4",
            "mov r2, 0",
            "mov r3, 0x80000000",
            "mvn r0, 0",
            "mvn r1, 0",
            "ldrd sl, fp, [sp, 0x48]",
            "strd r0, r1, [sp, 0x10]",
            "ldrd r0, r1, [sp, 0x38]",
            "strd r2, r3, [sp, 0x20]",
            "add r3, sp, 0x60",
            "strd sl, fp, [sp]",
            "strd r0, r1, [sp, 0x18]",
            "mov r0, r6",
            "ldr r1, [sp, 0x90]",
            "ldr r2, [sp, 0x54]",
            "ldrd sl, fp, [sp, 0x40]",
            "str r1, [sp, 0x28]",
            "mov r1, sb",
            "str r3, [sp, 0x2c]",
            "strd sl, fp, [sp, 8]",
            "ldr r3, [r2, 0x20]",
            "mov r2, r7",
            "str r3, [sp, 0x30]",
            "mov r3, r8",
            "bl fcn.0006f32c",
            "subs r3, r1, 0",
            "mov r2, r0",
            "blt 0x6fa80",
            "mov r4, 0",
            "ldr r0, [r6, 0x10]",
            "str r4, [sp]",
            "bl sym.avio_seek",
            "cmp r1, r4",
            "blt 0x6fa84",
            "mov r0, r6",
            "bl fcn.0006e700",
            "mov r0, r6",
            "mov r1, r5",
            "ldrd r2, r3, [sp, 0x60]",
            "bl fcn.0006e7c4",
            "mov r0, r4",
            "b 0x6fa84",
            "mvn r0, 0",
            "add sp, sp, 0x6c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.av_index_search_timestamp": {
        "function_address": "0x0006f31c",
        "instructions": [
            "mov r1, r0",
            "ldr r0, [r0, 0x80]",
            "ldr r1, [r1, 0x84]",
            "b fcn.0006e890"
        ]
    },
    "fcn.0006e7c4": {
        "function_address": "0x0006e7c4",
        "instructions": [
            "push {r0, r1, r4, r5, r6, r7, r8, sl, fp, lr}",
            "mov r6, r0",
            "mov r7, r1",
            "mov sl, r2",
            "mov fp, r3",
            "mov r4, 0",
            "ldr r8, [r0, 0x14]",
            "b 0x6e81c",
            "ldr r3, [r6, 0x18]",
            "ldr r2, [r7, 0x38]",
            "ldr r0, [r7, 0x3c]",
            "ldr r5, [r3, r4, lsl 2]",
            "add r4, r4, 1",
            "ldr r3, [r5, 0x3c]",
            "smull r2, r3, r2, r3",
            "ldr r1, [r5, 0x38]",
            "smull r0, r1, r0, r1",
            "strd r0, r1, [sp]",
            "mov r0, sl",
            "mov r1, fp",
            "bl sym.imp.av_rescale",
            "strd r0, r1, [r5, 0x68]",
            "cmp r4, r8",
            "bne 0x6e7e4",
            "pop {r2, r3, r4, r5, r6, r7, r8, sl, fp, pc}"
        ]
    },
    "sym.av_interleave_packet_per_dts": {
        "function_address": "0x00072840",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov fp, r1",
            "ldr r7, [0x00072a98]",
            "subs r1, r2, 0",
            "sub sp, sp, 0x4c",
            "mov r4, r0",
            "mov r6, r3",
            "add r7, pc, r7",
            "beq 0x72878",
            "ldr r2, [0x00072a9c]",
            "add r2, r7, r2",
            "bl fcn.000725b8",
            "cmp r0, 0",
            "blt 0x72a90",
            "mov r3, 0",
            "ldr sl, [r4, 0x14]",
            "mov sb, r3",
            "mov r5, r3",
            "b 0x728b8",
            "ldr r2, [r4, 0x18]",
            "ldr r2, [r2, r3, lsl 2]",
            "ldr r1, [r2, 0x19c]",
            "cmp r1, 0",
            "addne r5, r5, 1",
            "bne 0x728b4",
            "ldr r2, [r2, 8]",
            "ldr r2, [r2, 0xd0]",
            "cmp r2, 3",
            "addeq sb, sb, 1",
            "add r3, r3, 1",
            "cmp r3, sl",
            "bne 0x7288c",
            "cmp sl, r5",
            "beq 0x72a18",
            "cmp r6, 0",
            "beq 0x7299c",
            "b 0x72a1c",
            "ldr ip, [r4, 0x18]",
            "ldr r2, [ip, r8, lsl 2]",
            "ldr r3, [r2, 0x19c]",
            "cmp r3, 0",
            "beq 0x72994",
            "ldrd r0, r1, [r3, 8]",
            "add r3, sp, 0x3c",
            "add r2, r2, 0x38",
            "strd r0, r1, [sp, 0x18]",
            "ldr r0, [sp, 0x24]",
            "add r1, r0, 0xf4",
            "ldm r1, {r0, r1}",
            "stm r3, {r0, r1}",
            "mov r3, sp",
            "stm r3, {r0, r1}",
            "ldm r2, {r2, r3}",
            "ldrd r0, r1, [sp, 0x18]",
            "str ip, [sp, 0xc]",
            "bl sym.imp.av_rescale_q",
            "ldr r3, [r4, 0x42c]",
            "strd r0, r1, [sp, 0x18]",
            "ldr ip, [sp, 0xc]",
            "ldrd r0, r1, [r3, 8]",
            "ldr r3, [r3, 0x18]",
            "strd r0, r1, [sp, 0x28]",
            "ldr r0, [sp, 0x24]",
            "ldr r2, [ip, r3, lsl 2]",
            "add r3, sp, 0x34",
            "add r1, r0, 0xfc",
            "ldm r1, {r0, r1}",
            "add r2, r2, 0x38",
            "stm r3, {r0, r1}",
            "mov r3, sp",
            "stm r3, {r0, r1}",
            "ldm r2, {r2, r3}",
            "ldrd r0, r1, [sp, 0x28]",
            "bl sym.imp.av_rescale_q",
            "ldrd r2, r3, [sp, 0x18]",
            "subs r2, r2, r0",
            "sbc r3, r3, r1",
            "ldr r0, [sp, 0x14]",
            "cmp r3, r0",
            "bgt 0x72990",
            "bne 0x72994",
            "ldr r1, [sp, 0x10]",
            "cmp r2, r1",
            "bls 0x72994",
            "strd r2, r3, [sp, 0x10]",
            "add r8, r8, 1",
            "b 0x729b8",
            "mov r3, 0",
            "mov r2, 0",
            "strd r2, r3, [sp, 0x10]",
            "mov r8, r6",
            "ldr r3, [0x00072aa0]",
            "add r3, r7, r3",
            "str r3, [sp, 0x24]",
            "cmp r8, sl",
            "bne 0x728d4",
            "ldr r0, [sp, 0x14]",
            "mov r3, 1",
            "cmp r0, 0",
            "bgt 0x729e8",
            "bne 0x729e4",
            "ldr r2, [0x00072aa4]",
            "ldr r1, [sp, 0x10]",
            "cmp r1, r2",
            "bhi 0x729e8",
            "mov r3, 0",
            "add r2, r5, sb",
            "cmp sl, r2",
            "movne sl, 0",
            "andeq sl, r3, 1",
            "cmp sl, 0",
            "beq 0x72a1c",
            "ldr r2, [0x00072aa8]",
            "mov r0, r4",
            "mov r1, 0x30",
            "mov r3, sb",
            "add r2, r7, r2",
            "bl sym.imp.av_log",
            "mov r6, 1",
            "cmp r6, 0",
            "cmpne r5, 0",
            "moveq r5, 0",
            "movne r5, 1",
            "beq 0x72a84",
            "ldr r5, [r4, 0x42c]",
            "mov r2, 0x48",
            "mov r0, fp",
            "mov r1, r5",
            "str r5, [sp, 0x44]",
            "bl sym.imp.memcpy",
            "ldr r3, [r5, 0x48]",
            "add r0, sp, 0x44",
            "ldr r2, [fp, 0x18]",
            "cmp r3, 0",
            "str r3, [r4, 0x42c]",
            "streq r3, [r4, 0x4b4]",
            "ldr r3, [r4, 0x18]",
            "ldr r3, [r3, r2, lsl 2]",
            "ldr r2, [r3, 0x19c]",
            "cmp r2, r5",
            "moveq r2, 0",
            "streq r2, [r3, 0x19c]",
            "bl sym.imp.av_freep",
            "mov r0, 1",
            "b 0x72a90",
            "mov r0, fp",
            "bl sym.imp.av_init_packet",
            "mov r0, r5",
            "add sp, sp, 0x4c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.000725b8": {
        "function_address": "0x000725b8",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov fp, r2",
            "ldr r3, [r0, 0x18]",
            "sub sp, sp, 0x2c",
            "mov r4, r0",
            "mov r6, r1",
            "ldr r2, [r1, 0x18]",
            "ldr sl, [0x00072830]",
            "ldr r7, [r3, r2, lsl 2]",
            "ldr r3, [r0, 0x4e4]",
            "add sl, pc, sl",
            "cmp r3, 0",
            "movne sb, 1",
            "bne 0x725fc",
            "ldr sb, [r0, 0x4e0]",
            "subs sb, sb, 0",
            "movne sb, 1",
            "mov r0, 0x50",
            "bl sym.imp.av_mallocz",
            "subs r8, r0, 0",
            "beq 0x72824",
            "mov r2, 0x48",
            "mov r1, r6",
            "bl sym.imp.memcpy",
            "mov r3, 0",
            "mov r0, r8",
            "str r3, [r6, 0x2c]",
            "bl sym.imp.av_dup_packet",
            "ldr r2, [r6, 0x18]",
            "ldr r3, [r4, 0x18]",
            "ldr r3, [r3, r2, lsl 2]",
            "ldr r3, [r3, 0x19c]",
            "cmp r3, 0",
            "ldrne r3, [r7, 0x19c]",
            "addeq r5, r4, 0x420",
            "ldreq r3, [r4, 0x42c]",
            "addeq r5, r5, 0xc",
            "addne r5, r3, 0x48",
            "ldrne r3, [r3, 0x48]",
            "cmp r3, 0",
            "beq 0x727cc",
            "cmp sb, 0",
            "beq 0x72760",
            "ldr r1, [0x00072834]",
            "add r3, sp, 0x20",
            "ldr r2, [r4, 0x4e0]",
            "mov ip, sp",
            "add r1, sl, r1",
            "add r1, r1, 0xd0",
            "ldm r1, {r0, r1}",
            "stm r3, {r0, r1}",
            "add r1, r7, 0x38",
            "ldm r1, {r0, r1}",
            "stm ip, {r0, r1}",
            "mov r0, r2",
            "asr r1, r0, 0x1f",
            "ldm r3, {r2, r3}",
            "bl sym.imp.av_rescale_q",
            "mov r3, 0x1b0",
            "ldr ip, [r6, 0x14]",
            "ldrd r2, r3, [r3, r7]",
            "strd r0, r1, [sp, 0x18]",
            "adds r0, r2, ip",
            "adc r1, r3, ip, asr 31",
            "ldr r3, [r4, 0x4e4]",
            "cmp r1, 0",
            "strd r0, r1, [sp, 0x10]",
            "sub r3, r3, 1",
            "bgt 0x7273c",
            "bne 0x726d8",
            "cmp r0, r3",
            "bhi 0x7273c",
            "mov r3, 0x1b8",
            "ldr ip, [r6, 0x28]",
            "ldrd r2, r3, [r3, r7]",
            "adds r0, r2, ip",
            "mvn r2, 0",
            "adc r1, r3, ip, asr 31",
            "mvn r3, 0",
            "strd r0, r1, [sp, 8]",
            "ldrd r0, r1, [sp, 0x18]",
            "adds r2, r2, r0",
            "adc r3, r3, r1",
            "ldr r1, [sp, 0xc]",
            "cmp r1, r3",
            "bhi 0x7273c",
            "bne 0x72720",
            "ldr ip, [sp, 8]",
            "cmp ip, r2",
            "bhi 0x7273c",
            "ldrd r0, r1, [sp, 0x10]",
            "mov r3, 0x1b0",
            "strd r0, r1, [r7, r3]",
            "add r3, r3, 8",
            "ldrd r0, r1, [sp, 8]",
            "strd r0, r1, [r7, r3]",
            "b 0x72800",
            "mov r3, 0",
            "mov r2, 0",
            "mov r1, 0x1b8",
            "strd r2, r3, [r7, r1]",
            "mov r1, 0x1b0",
            "strd r2, r3, [r7, r1]",
            "ldr r3, [r8, 0x1c]",
            "orr r3, r3, 0x1000",
            "str r3, [r8, 0x1c]",
            "mov r0, r4",
            "ldr r1, [r4, 0x4b4]",
            "mov r2, r6",
            "blx fp",
            "cmp r0, 0",
            "ldreq r5, [r4, 0x4b4]",
            "addeq r5, r5, 0x48",
            "beq 0x727cc",
            "b 0x7278c",
            "ldr r5, [r5]",
            "add r5, r5, 0x48",
            "ldr r1, [r5]",
            "cmp r1, 0",
            "beq 0x727c0",
            "cmp sb, 0",
            "beq 0x727ac",
            "ldr r3, [r1, 0x1c]",
            "tst r3, 0x1000",
            "beq 0x72784",
            "mov r0, r4",
            "mov r2, r6",
            "blx fp",
            "cmp r0, 0",
            "beq 0x72784",
            "ldr r3, [r5]",
            "cmp r3, 0",
            "bne 0x72800",
            "ldr r3, [r5]",
            "cmp r3, 0",
            "streq r8, [r4, 0x4b4]",
            "beq 0x72800",
            "ldr r3, [0x00072834]",
            "movw r2, 0xd57",
            "ldr r0, [0x00072838]",
            "ldr r1, [0x0007283c]",
            "add r3, sl, r3",
            "add r0, sl, r0",
            "add r3, r3, 0xd8",
            "add r1, sl, r1",
            "bl sym.imp.__assert",
            "ldr r3, [r5]",
            "mov r0, 0",
            "ldr r2, [r6, 0x18]",
            "str r3, [r8, 0x48]",
            "ldr r3, [r4, 0x18]",
            "ldr r3, [r3, r2, lsl 2]",
            "str r8, [r5]",
            "str r8, [r3, 0x19c]",
            "b 0x72828",
            "mvn r0, 0xb",
            "add sp, sp, 0x2c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.av_close_input_stream": {
        "function_address": "0x00071bb4",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r0",
            "bl fcn.0006b3dc",
            "ldr r3, [r4, 4]",
            "ldr r3, [r3, 0x18]",
            "cmp r3, 0",
            "beq 0x71bd8",
            "mov r0, r4",
            "blx r3",
            "mov r0, r4",
            "pop {r4, lr}",
            "b sym.avformat_free_context"
        ]
    },
    "sym.av_write_trailer": {
        "function_address": "0x00072c20",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "sub sp, sp, 0x48",
            "mov r6, r0",
            "mov r7, sp",
            "mov r4, 1",
            "mov r5, 0",
            "mov r0, r6",
            "mov r1, sp",
            "mov r2, 0",
            "mov r3, 1",
            "bl fcn.00072aac",
            "subs r8, r0, 0",
            "blt 0x72ce8",
            "ldr r3, [r6, 8]",
            "beq 0x72cbc",
            "ldr r3, [r3, 0x20]",
            "mov r0, r6",
            "mov r1, sp",
            "blx r3",
            "subs r8, r0, 0",
            "blt 0x72c90",
            "ldr r3, [r6, 0x18]",
            "ldr r2, [sp, 0x18]",
            "ldr r1, [r3, r2, lsl 2]",
            "ldrd r2, r3, [r1, 0x90]",
            "adds r2, r2, r4",
            "adc r3, r3, r5",
            "strd r2, r3, [r1, 0x90]",
            "mov r0, sp",
            "bl sym.imp.av_free_packet",
            "cmp r8, 0",
            "blt 0x72ce8",
            "ldr r3, [r6, 0x10]",
            "cmp r3, 0",
            "beq 0x72c38",
            "ldr r3, [r3, 0x48]",
            "cmp r3, 0",
            "beq 0x72c38",
            "b 0x72cd4",
            "ldr r3, [r3, 0x24]",
            "cmp r3, 0",
            "beq 0x72cdc",
            "mov r0, r6",
            "blx r3",
            "mov r8, r0",
            "cmp r8, 0",
            "bne 0x72ce8",
            "ldr r8, [r6, 0x10]",
            "cmp r8, 0",
            "ldrne r8, [r8, 0x48]",
            "mov r4, 0",
            "b 0x72d14",
            "ldr r3, [r6, 0x18]",
            "ldr r0, [r3, r4, lsl 2]",
            "add r0, r0, 0x14",
            "bl sym.imp.av_freep",
            "ldr r3, [r6, 0x18]",
            "ldr r0, [r3, r4, lsl 2]",
            "add r4, r4, 1",
            "add r0, r0, 0x80",
            "bl sym.imp.av_freep",
            "ldr r3, [r6, 0x14]",
            "cmp r4, r3",
            "blo 0x72cf0",
            "ldr r3, [r6, 8]",
            "ldr r3, [r3, 0x40]",
            "cmp r3, 0",
            "beq 0x72d38",
            "ldr r0, [r6, 0xc]",
            "bl sym.imp.av_opt_free",
            "add r0, r6, 0xc",
            "bl sym.imp.av_freep",
            "mov r0, r8",
            "add sp, sp, 0x48",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.00072aac": {
        "function_address": "0x00072aac",
        "instructions": [
            "ldr ip, [r0, 8]",
            "push {r4, r5, r6, lr}",
            "mov r4, r2",
            "ldr ip, [ip, 0x30]",
            "cmp ip, 0",
            "beq 0x72ae0",
            "blx ip",
            "cmp r4, 0",
            "mov r5, r0",
            "beq 0x72ae8",
            "mov r0, r4",
            "bl sym.imp.av_free_packet",
            "b 0x72ae8",
            "pop {r4, r5, r6, lr}",
            "b sym.av_interleave_packet_per_dts",
            "mov r0, r5",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.av_codec_get_id": {
        "function_address": "0x00070074",
        "instructions": [
            "cmp r0, 0",
            "push {r3, r4, r5, lr}",
            "mov r5, r1",
            "movne r4, r0",
            "bne 0x7009c",
            "pop {r3, r4, r5, pc}",
            "mov r1, r5",
            "bl fcn.0006ffc8",
            "cmp r0, 0",
            "popne {r3, r4, r5, pc}",
            "ldr r0, [r4], 4",
            "cmp r0, 0",
            "bne 0x7008c",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.0006ffc8": {
        "function_address": "0x0006ffc8",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r4, r0",
            "mov r5, r1",
            "mov r3, 0",
            "b 0x6fff0",
            "add r2, r4, r3",
            "add r3, r3, 8",
            "ldr r2, [r2, 4]",
            "cmp r5, r2",
            "popeq {r3, r4, r5, r6, r7, pc}",
            "ldr r0, [r4, r3]",
            "cmp r0, 0",
            "bne 0x6ffdc",
            "b 0x70028",
            "mov r0, r5",
            "bl sym.imp.avpriv_toupper4",
            "mov r7, r0",
            "ldr r0, [r4, 4]",
            "bl sym.imp.avpriv_toupper4",
            "cmp r7, r0",
            "add r4, r4, 8",
            "bne 0x70028",
            "ldr r0, [r6]",
            "pop {r3, r4, r5, r6, r7, pc}",
            "ldr r0, [r4]",
            "mov r6, r4",
            "cmp r0, 0",
            "bne 0x70000",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "sym.imp.avpriv_toupper4": {
        "function_address": "0x00009918",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0xb78]!"
        ]
    },
    "sym.av_interleaved_write_frame": {
        "function_address": "0x00072af0",
        "instructions": [
            "ldr r3, [r0, 0x18]",
            "ldr r2, [r1, 0x18]",
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r8, r1",
            "sub sp, sp, 0x48",
            "mov r6, r0",
            "ldr r1, [r3, r2, lsl 2]",
            "ldr r3, [r1, 8]",
            "ldr r3, [r3, 0xd0]",
            "cmp r3, 1",
            "bne 0x72b28",
            "ldr r0, [r8, 0x14]",
            "cmp r0, 0",
            "beq 0x72c18",
            "mov r0, r6",
            "mov r2, r8",
            "bl fcn.0006c2e0",
            "cmp r0, 0",
            "bge 0x72b4c",
            "ldr r3, [r6, 8]",
            "ldr r3, [r3, 0x28]",
            "tst r3, 0x80",
            "beq 0x72c18",
            "ldr r3, [r8, 8]",
            "cmp r3, 0",
            "bne 0x72b80",
            "ldr r3, [r8, 0xc]",
            "cmp r3, 0x80000000",
            "bne 0x72b80",
            "ldr r3, [r6, 8]",
            "ldr r3, [r3, 0x28]",
            "tst r3, 0x80",
            "bne 0x72b80",
            "b 0x72c0c",
            "mov r8, r0",
            "b 0x72b8c",
            "mov r7, sp",
            "mov r4, 1",
            "mov r5, 0",
            "mov r0, r6",
            "mov r1, sp",
            "mov r2, r8",
            "mov r3, 0",
            "bl fcn.00072aac",
            "cmp r0, 0",
            "ble 0x72c18",
            "ldr r3, [r6, 8]",
            "mov r0, r6",
            "mov r1, sp",
            "ldr r3, [r3, 0x20]",
            "blx r3",
            "subs r8, r0, 0",
            "blt 0x72be0",
            "ldr r3, [r6, 0x18]",
            "ldr r2, [sp, 0x18]",
            "ldr r1, [r3, r2, lsl 2]",
            "ldrd r2, r3, [r1, 0x90]",
            "adds r2, r2, r4",
            "adc r3, r3, r5",
            "strd r2, r3, [r1, 0x90]",
            "mov r0, sp",
            "bl sym.imp.av_free_packet",
            "cmp r8, 0",
            "blt 0x72c14",
            "ldr r8, [r6, 0x10]",
            "cmp r8, 0",
            "beq 0x72b8c",
            "ldr r0, [r8, 0x48]",
            "cmp r0, 0",
            "beq 0x72b78",
            "b 0x72c18",
            "mvn r0, 0x15",
            "b 0x72c18",
            "mov r0, r8",
            "add sp, sp, 0x48",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "sym.url_close_buf": {
        "function_address": "0x0001aa20",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r0",
            "bl sym.avio_flush",
            "ldr r0, [r4, 8]",
            "ldr r3, [r4]",
            "rsb r0, r3, r0",
            "pop {r4, pc}"
        ]
    },
    "sym.avio_check": {
        "function_address": "0x00018c70",
        "instructions": [
            "push {r0, r1, r2, r4, r5, lr}",
            "mov r3, r0",
            "mov r4, r1",
            "add r0, sp, 4",
            "mov r1, r3",
            "mov r2, r4",
            "mov r3, 0",
            "bl fcn.00018880",
            "subs r5, r0, 0",
            "bne 0x18cd8",
            "ldr r0, [sp, 4]",
            "ldr r3, [r0, 4]",
            "ldr r3, [r3, 0x34]",
            "cmp r3, 0",
            "beq 0x18cbc",
            "mov r1, r4",
            "blx r3",
            "mov r5, r0",
            "b 0x18cd0",
            "mov r1, r5",
            "bl fcn.00018a38",
            "cmp r0, 0",
            "movlt r5, r0",
            "movge r5, r4",
            "ldr r0, [sp, 4]",
            "bl sym.ffurl_close",
            "mov r0, r5",
            "pop {r1, r2, r3, r4, r5, pc}"
        ]
    },
    "sym.av_pkt_dump_log2": {
        "function_address": "0x00074014",
        "instructions": [
            "push {r0, r1, r2, r3, r4, lr}",
            "mov ip, r2",
            "mov r2, sp",
            "mov r4, r0",
            "mov lr, r1",
            "str r3, [r2], 4",
            "ldr r3, [sp, 0x18]",
            "add r3, r3, 0x38",
            "ldm r3, {r0, r1}",
            "mov r3, ip",
            "stm r2, {r0, r1}",
            "mov r0, r4",
            "mov r1, 0",
            "mov r2, lr",
            "bl fcn.00073aa8",
            "pop {r0, r1, r2, r3, r4, pc}"
        ]
    },
    "sym.avio_wl64": {
        "function_address": "0x00019790",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r1, r2",
            "mov r4, r0",
            "mov r5, r3",
            "bl sym.avio_wl32",
            "mov r0, r4",
            "mov r1, r5",
            "pop {r4, r5, r6, lr}",
            "b sym.avio_wl32"
        ]
    },
    "entry.init0": {
        "function_address": "0x0000b998",
        "instructions": [
            "push {r4, lr}",
            "ldr r4, [0x0000b9f4]",
            "ldr r3, [0x0000b9f8]",
            "add r4, pc, r4",
            "ldr r3, [r4, r3]",
            "cmp r3, 0",
            "beq 0xb9c8",
            "ldr r0, [0x0000b9fc]",
            "ldr r1, [0x0000ba00]",
            "add r0, r4, r0",
            "add r1, r4, r1",
            "bl loc.imp.__register_frame_info",
            "ldr r3, [0x0000ba04]",
            "add r0, r4, r3",
            "ldr r3, [r4, r3]",
            "cmp r3, 0",
            "popeq {r4, pc}",
            "ldr r3, [0x0000ba08]",
            "ldr r3, [r4, r3]",
            "cmp r3, 0",
            "popeq {r4, pc}",
            "blx r3",
            "pop {r4, pc}"
        ]
    },
    "loc.imp.__register_frame_info": {
        "function_address": "0x00009768",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0xc98]!"
        ]
    },
    "entry.fini0": {
        "function_address": "0x0000b91c",
        "instructions": [
            "push {r4, lr}",
            "ldr r4, [0x0000b980]",
            "ldr r3, [0x0000b984]",
            "add r4, pc, r4",
            "ldrb r3, [r4, r3]",
            "cmp r3, 0",
            "popne {r4, pc}",
            "ldr r3, [0x0000b988]",
            "ldr r3, [r4, r3]",
            "cmp r3, 0",
            "beq 0xb954",
            "ldr r3, [0x0000b98c]",
            "ldr r0, [r4, r3]",
            "bl sym.imp.__cxa_finalize",
            "ldr r3, [0x0000b990]",
            "ldr r3, [r4, r3]",
            "cmp r3, 0",
            "beq 0xb970",
            "ldr r0, [0x0000b994]",
            "add r0, r4, r0",
            "bl loc.imp.__deregister_frame_info",
            "ldr r3, [0x0000b984]",
            "mov r2, 1",
            "strb r2, [r4, r3]",
            "pop {r4, pc}"
        ]
    },
    "sym.imp.__cxa_finalize": {
        "function_address": "0x00009960",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0xb48]!"
        ]
    },
    "loc.imp.__deregister_frame_info": {
        "function_address": "0x0000a170",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x5e8]!"
        ]
    },
    "fcn.00018ce0": {
        "function_address": "0x00018ce0",
        "instructions": [
            "mov r3, 0x10000",
            "push {r0, r1, r4, r5, r6, r8, sb, lr}",
            "mov r2, 0",
            "str r3, [sp]",
            "mov r3, 0",
            "mov r6, r0",
            "bl fcn.000189f0",
            "cmp r1, 0",
            "mov r4, r0",
            "mov r5, r1",
            "bge 0x18d7c",
            "mov r3, 1",
            "mov r2, 0",
            "str r3, [sp]",
            "mov r0, r6",
            "mov r3, 0",
            "bl fcn.000189f0",
            "mov r3, 2",
            "mov r8, r0",
            "str r3, [sp]",
            "mov r0, r6",
            "mvn r2, 0",
            "mvn r3, 0",
            "mov sb, r1",
            "bl fcn.000189f0",
            "cmp r1, 0",
            "mov r4, r0",
            "mov r5, r1",
            "blt 0x18d7c",
            "mov r2, 1",
            "mov r3, 0",
            "adds r4, r0, r2",
            "mov r0, r6",
            "adc r5, r1, r3",
            "mov r3, 0",
            "str r3, [sp]",
            "mov r2, r8",
            "mov r3, sb",
            "bl fcn.000189f0",
            "mov r0, r4",
            "mov r1, r5",
            "pop {r2, r3, r4, r5, r6, r8, sb, pc}"
        ]
    },
    "fcn.000189f0": {
        "function_address": "0x000189f0",
        "instructions": [
            "push {r0, r1, r2, lr}",
            "ldr r1, [r0, 4]",
            "ldr r1, [r1, 0x10]",
            "cmp r1, 0",
            "mvneq r2, 0x25",
            "mvneq r3, 0",
            "beq 0x18a24",
            "ldr ip, [sp, 0x10]",
            "bic ip, ip, 0x20000",
            "str ip, [sp]",
            "blx r1",
            "mov r2, r0",
            "mov r3, r1",
            "mov r0, r2",
            "mov r1, r3",
            "add sp, sp, 0xc",
            "ldm sp!, {pc}"
        ]
    },
    "fcn.0002d530": {
        "function_address": "0x0002d530",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r4, r0",
            "mov r6, r1",
            "mov r5, 0",
            "b 0x2d558",
            "cmp r0, 0x20",
            "beq 0x2d570",
            "cmp r5, 0x12",
            "strble r0, [r6, r5]",
            "addle r5, r5, 1",
            "mov r0, r4",
            "bl sym.avio_r8",
            "uxtb r0, r0",
            "cmp r0, 0",
            "bne 0x2d544",
            "b 0x2d57c",
            "mov r3, 0",
            "strb r3, [r6, r5]",
            "pop {r4, r5, r6, pc}",
            "mov r0, r4",
            "bl sym.avio_r8",
            "b 0x2d570"
        ]
    },
    "fcn.00062a6c": {
        "function_address": "0x00062a6c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x16c",
            "add r6, sp, 0x28",
            "mov r4, r1",
            "mov r7, r2",
            "mov r1, 0",
            "str r0, [sp, 0x18]",
            "mov r2, 0x110",
            "mov r0, r6",
            "str r3, [sp, 0x24]",
            "bl sym.imp.memset",
            "ldr r0, [sp, 0x18]",
            "mov r2, 0",
            "ldr r1, [0x0006355c]",
            "mov r3, 0x80000000",
            "ldr r5, [0x00063560]",
            "add r7, r4, r7",
            "str r0, [sp, 0x28]",
            "add r0, sp, 0x168",
            "strd r2, r3, [r0, r1]",
            "mov r3, 0",
            "ldr r2, [0x00063564]",
            "add r1, r1, 0x108",
            "add r0, sp, 0xbc",
            "str r7, [sp, 0x30]",
            "str r4, [sp, 0x2c]",
            "add r5, pc, r5",
            "strd r2, r3, [sp, 0x70]",
            "movw r3, 0xac44",
            "str r3, [sp, 0x84]",
            "mov r2, 0x7c",
            "mov r3, 1",
            "str r4, [sp, 0x34]",
            "str r3, [sp, 0xb4]",
            "add r7, sp, 0x148",
            "bl sym.imp.memset",
            "mov r0, r6",
            "add sb, sp, 0x164",
            "bl fcn.0006201c",
            "add r1, r6, 0x50",
            "mov sl, r5",
            "str r1, [sp, 0x20]",
            "b 0x62edc",
            "ldrb r3, [r3]",
            "cmp r3, 0x2d",
            "addeq r2, sp, 0x60",
            "moveq r5, 0",
            "streq r2, [sp, 0x1c]",
            "bne 0x62ecc",
            "b 0x62e40",
            "ldrb r1, [r3]",
            "cmp r1, 0x54",
            "beq 0x62c70",
            "bhi 0x62b70",
            "cmp r1, 0x46",
            "beq 0x62bb4",
            "bhi 0x62b5c",
            "cmp r1, 0x45",
            "bne 0x62df8",
            "b 0x62bac",
            "cmp r1, 0x4c",
            "beq 0x62c28",
            "cmp r1, 0x53",
            "bne 0x62df8",
            "b 0x62ba4",
            "cmp r1, 0x70",
            "beq 0x62e18",
            "bhi 0x62b90",
            "cmp r1, 0x69",
            "beq 0x62e18",
            "cmp r1, 0x6d",
            "bne 0x62df8",
            "b 0x62cb8",
            "cmp r1, 0x71",
            "beq 0x62d20",
            "cmp r1, 0x72",
            "bne 0x62df8",
            "b 0x62d88",
            "strb fp, [sp, 0x88]",
            "b 0x62e1c",
            "strb fp, [sp, 0x89]",
            "b 0x62e1c",
            "mov r0, r6",
            "mov r2, r7",
            "bl fcn.00062470",
            "subs r4, r0, 0",
            "ble 0x62d9c",
            "ldr r0, [sp, 0x148]",
            "mov r1, sb",
            "bl sym.imp.strtod",
            "ldr r3, [sp, 0x164]",
            "ldr r2, [sp, 0x14c]",
            "cmp r2, r3",
            "beq 0x62c04",
            "ldr r2, [0x00063568]",
            "mov r5, sl",
            "add r0, r6, 0x90",
            "mov r1, 0x80",
            "add r2, r5, r2",
            "bl sym.imp.snprintf",
            "ldr r4, [0x0006356c]",
            "b 0x633fc",
            "mov r2, 0",
            "ldr r3, [0x00063570]",
            "bl fcn.0007d76c",
            "mov r2, 0",
            "ldr r3, [0x00063574]",
            "bl fcn.0007d9d8",
            "bl sym.imp.__aeabi_d2lz",
            "strd r0, r1, [sp, 0x70]",
            "b 0x62e1c",
            "mov r0, r6",
            "mov r2, r7",
            "bl fcn.00062470",
            "subs r4, r0, 0",
            "ble 0x62d9c",
            "ldr r0, [sp, 0x148]",
            "ldr r1, [sp, 0x20]",
            "bl fcn.000625b8",
            "ldr r3, [sp, 0x148]",
            "ldr r2, [sp, 0x14c]",
            "add r3, r3, r0",
            "cmp r2, r3",
            "beq 0x62e1c",
            "mov r5, sl",
            "add r0, r6, 0x90",
            "mov r1, 0x80",
            "ldr r2, [0x00063578]",
            "b 0x62bf4",
            "mov r0, r6",
            "mov r2, r7",
            "bl fcn.00062470",
            "subs r4, r0, 0",
            "ble 0x62d9c",
            "ldr r0, [sp, 0x148]",
            "ldr r1, [sp, 0x1c]",
            "bl fcn.000625b8",
            "ldr r3, [sp, 0x148]",
            "ldr r2, [sp, 0x14c]",
            "add r3, r3, r0",
            "cmp r2, r3",
            "beq 0x62e1c",
            "mov r5, sl",
            "add r0, r6, 0x90",
            "mov r1, 0x80",
            "ldr r2, [0x0006357c]",
            "b 0x62bf4",
            "mov r0, r6",
            "mov r2, r7",
            "bl fcn.00062470",
            "subs r4, r0, 0",
            "ble 0x62d9c",
            "ldr r0, [sp, 0x14c]",
            "ldr r3, [sp, 0x148]",
            "add r0, r0, 1",
            "rsb r0, r3, r0",
            "bl sym.imp.av_malloc",
            "cmp r0, 0",
            "mov r8, r0",
            "str r0, [sp, 0x164]",
            "beq 0x63538",
            "ldr r1, [sp, 0x148]",
            "ldr r4, [sp, 0x14c]",
            "rsb r4, r1, r4",
            "mov r2, r4",
            "bl sym.imp.memcpy",
            "mov r1, 0",
            "strb r1, [r8, r4]",
            "ldr r0, [sp, 0x80]",
            "bl sym.imp.av_free",
            "ldr r3, [sp, 0x164]",
            "str r3, [sp, 0x80]",
            "b 0x62e1c",
            "mov r0, r6",
            "mov r2, r7",
            "bl fcn.00062470",
            "subs r4, r0, 0",
            "ble 0x62d9c",
            "ldr r0, [sp, 0x148]",
            "mov r1, sb",
            "bl sym.imp.strtod",
            "ldr r3, [sp, 0x164]",
            "ldr r2, [sp, 0x14c]",
            "cmp r2, r3",
            "movne r5, sl",
            "addne r0, r6, 0x90",
            "movne r1, 0x80",
            "ldrne r2, [0x00063580]",
            "bne 0x62bf4",
            "mov r2, 0",
            "ldr r3, [0x00063584]",
            "bl fcn.0007dca4",
            "cmp r0, 0",
            "bne 0x62e1c",
            "mov r5, sl",
            "add r0, r6, 0x90",
            "mov r1, 0x80",
            "ldr r2, [0x00063588]",
            "b 0x62fb0",
            "mov r0, r6",
            "mov r2, r7",
            "bl fcn.00062470",
            "subs r4, r0, 0",
            "bgt 0x62da8",
            "mov r5, sl",
            "bne 0x633fc",
            "b 0x62bfc",
            "mov r2, 0xa",
            "ldr r0, [sp, 0x148]",
            "mov r1, sb",
            "bl sym.imp.strtol",
            "ldr r3, [sp, 0x164]",
            "ldr r2, [sp, 0x14c]",
            "cmp r2, r3",
            "movne r5, sl",
            "addne r0, r6, 0x90",
            "movne r1, 0x80",
            "ldrne r2, [0x0006358c]",
            "bne 0x62bf4",
            "cmp r0, 0x27",
            "movle r5, sl",
            "addle r0, sp, 0xb8",
            "movle r1, 0x80",
            "ldrle r2, [0x00063590]",
            "ble 0x62fb0",
            "str r0, [sp, 0x84]",
            "b 0x62e1c",
            "ldr r2, [0x00063594]",
            "mov r3, r1",
            "add r0, sp, 0xb8",
            "mov r1, 0x80",
            "mov r5, sl",
            "add r2, sl, r2",
            "bl sym.imp.snprintf",
            "b 0x62bfc",
            "mov r5, r1",
            "ldr r3, [sp, 0x150]",
            "add r3, r3, 1",
            "str r3, [sp, 0x150]",
            "b 0x62e30",
            "mov fp, 1",
            "ldr r3, [sp, 0x150]",
            "ldr r2, [sp, 0x154]",
            "cmp r3, r2",
            "blo 0x62b34",
            "mov r0, r6",
            "mov r1, 0x2d",
            "bl fcn.00062064",
            "cmp r0, 0",
            "beq 0x62e68",
            "mov r0, r6",
            "add r1, sp, 0x150",
            "bl fcn.00062118",
            "cmp r0, 0",
            "bne 0x62e2c",
            "cmp r5, 0x69",
            "beq 0x62e8c",
            "cmp r5, 0x70",
            "beq 0x62ea0",
            "cmp r5, 0",
            "beq 0x62eb4",
            "mov r5, sl",
            "ldr r4, [0x00063598]",
            "b 0x633fc",
            "mov r5, sl",
            "add r0, sp, 0xb8",
            "mov r1, 0x80",
            "ldr r2, [0x0006359c]",
            "b 0x62fb0",
            "mov r5, sl",
            "add r0, sp, 0xb8",
            "mov r1, 0x80",
            "ldr r2, [0x000635a0]",
            "b 0x62fb0",
            "mov r0, r6",
            "bl fcn.00062098",
            "cmp r0, 0",
            "bne 0x62edc",
            "mov r5, sl",
            "b 0x62bfc",
            "mov r0, r6",
            "bl fcn.00062098",
            "cmp r0, 0",
            "beq 0x633ac",
            "ldr r3, [sp, 0x34]",
            "ldr r2, [sp, 0x30]",
            "cmp r3, r2",
            "blo 0x62b18",
            "b 0x633ac",
            "add r4, sp, 0x28",
            "add r1, sp, 0x148",
            "mov r0, r4",
            "bl fcn.00062190",
            "cmp r0, 0",
            "beq 0x62f2c",
            "mov r0, r4",
            "mov r1, 0x3a",
            "bl fcn.00062064",
            "cmp r0, 0",
            "beq 0x62f2c",
            "mov r0, r4",
            "bl fcn.0006201c",
            "cmp r0, 0",
            "bne 0x62f4c",
            "str r6, [sp, 0x34]",
            "add r6, sp, 0x28",
            "mov r0, r6",
            "mov r1, 0",
            "bl fcn.000627a0",
            "subs r4, r0, 0",
            "bne 0x633a4",
            "b 0x63390",
            "ldr r4, [sp, 0x148]",
            "ldr r3, [sp, 0x14c]",
            "rsb r3, r4, r3",
            "cmp r3, 6",
            "bne 0x62fc0",
            "ldr r1, [0x000635a4]",
            "mov r0, r4",
            "mov r2, 4",
            "add r1, r5, r1",
            "bl sym.imp.memcmp",
            "cmp r0, 0",
            "bne 0x62fc0",
            "ldrb r3, [r4, 4]",
            "cmp r3, 0x2f",
            "bls 0x62fc0",
            "cmp r3, 0x39",
            "bhi 0x62fc0",
            "ldrb r3, [r4, 5]",
            "cmp r3, 0x2f",
            "bls 0x62fc0",
            "cmp r3, 0x39",
            "bhi 0x62fc0",
            "ldr r2, [0x000635a8]",
            "add r0, sp, 0xb8",
            "mov r1, 0x80",
            "add r2, r5, r2",
            "ldr r4, [0x000635ac]",
            "bl sym.imp.snprintf",
            "b 0x633fc",
            "add r4, sp, 0x28",
            "add r0, sp, 0x38",
            "mov r1, 0x14",
            "add r2, sp, 0x4c",
            "add r3, r4, 0x7c",
            "bl fcn.00062700",
            "subs r8, r0, 0",
            "beq 0x63554",
            "ldr r3, [sp, 0x148]",
            "mov r0, r4",
            "mov r1, 0x7b",
            "str r3, [r8]",
            "ldr r2, [sp, 0x14c]",
            "rsb r3, r3, r2",
            "str r3, [r8, 4]",
            "bl fcn.00062064",
            "cmp r0, 0",
            "beq 0x6308c",
            "mov r0, r4",
            "bl fcn.0006201c",
            "mov r0, r4",
            "bl fcn.00062098",
            "cmp r0, 0",
            "beq 0x62bfc",
            "ldr r6, [sp, 0xa0]",
            "mov r7, r4",
            "mov r0, r7",
            "mov r1, 1",
            "bl fcn.000627a0",
            "subs r4, r0, 0",
            "blt 0x633fc",
            "bne 0x63028",
            "mov r0, r7",
            "mov r1, 0x7d",
            "bl fcn.00062064",
            "cmp r0, 0",
            "beq 0x62bfc",
            "mov r0, r7",
            "bl fcn.0006201c",
            "mov r0, r7",
            "bl fcn.00062098",
            "cmp r0, 0",
            "beq 0x62bfc",
            "mov r3, 0x42",
            "str r6, [r8, 8]",
            "strb r3, [r8, 0x10]",
            "ldr r3, [sp, 0xa0]",
            "rsb r6, r6, r3",
            "str r6, [r8, 0xc]",
            "cmp r6, 0",
            "b 0x6339c",
            "ldr sb, [0x000635b0]",
            "mov r7, r5",
            "ldr sl, [sp, 0x58]",
            "add sb, r5, sb",
            "add r6, sp, 0x28",
            "add r0, sp, 0x3c",
            "mov r1, 0x18",
            "add r2, sp, 0x58",
            "add r3, r6, 0x80",
            "bl fcn.00062700",
            "subs r5, r0, 0",
            "beq 0x63388",
            "mov r0, r6",
            "mov r1, 0x2d",
            "bl fcn.00062064",
            "subs r4, r0, 0",
            "bne 0x63314",
            "mov r0, r6",
            "mov r1, fp",
            "mov r2, 4",
            "bl fcn.000626bc",
            "cmp r0, 0",
            "beq 0x634ec",
            "mov r0, r6",
            "add r1, sp, 0x158",
            "bl fcn.00062544",
            "subs r4, r0, 0",
            "movgt r3, 2",
            "strgt r3, [r5, 0xc]",
            "bgt 0x6330c",
            "b 0x63294",
            "mov r0, r6",
            "add r1, sp, 0x138",
            "bl fcn.000624c8",
            "cmp r0, 0",
            "beq 0x63540",
            "mov r0, r6",
            "add r1, sp, 0x158",
            "bl fcn.00062544",
            "subs r4, r0, 0",
            "ble 0x63294",
            "ldr r3, [0x00063584]",
            "mov r2, 0",
            "add r1, sp, 0x140",
            "ldr r0, [sp, 0x28]",
            "strd r2, r3, [sp]",
            "add r3, sp, 0x15c",
            "str r3, [sp, 8]",
            "ldrd r2, r3, [r1, -8]",
            "bl fcn.00062364",
            "cmp r0, 0",
            "blt 0x6354c",
            "mov r3, 3",
            "str r3, [r5, 0xc]",
            "ldr r3, [sp, 0x15c]",
            "str r3, [r5]",
            "b 0x6330c",
            "mov r0, r6",
            "add r1, sp, 0x15c",
            "bl fcn.00062544",
            "subs r4, r0, 0",
            "movgt r3, 4",
            "strgt r3, [r5, 0xc]",
            "ldrgt r3, [sp, 0x15c]",
            "bgt 0x63244",
            "b 0x63294",
            "mov r0, r6",
            "add r1, sp, 0x138",
            "bl fcn.000624c8",
            "cmp r0, 0",
            "beq 0x63540",
            "mov r0, r6",
            "add r1, sp, 0x140",
            "bl fcn.000624c8",
            "cmp r0, 0",
            "beq 0x63540",
            "mov r0, r6",
            "add r1, sp, 0x160",
            "bl fcn.00062544",
            "subs r4, r0, 0",
            "ble 0x63294",
            "ldr r3, [0x00063584]",
            "mov r2, 0",
            "add r1, sp, 0x140",
            "ldr r0, [sp, 0x28]",
            "strd r2, r3, [sp]",
            "add r3, sp, 0x158",
            "str r3, [sp, 8]",
            "ldrd r2, r3, [r1, -8]",
            "bl fcn.00062364",
            "cmp r0, 0",
            "blt 0x6354c",
            "ldr r3, [0x00063584]",
            "mov r2, 0",
            "add r1, sp, 0x140",
            "ldr r0, [sp, 0x28]",
            "strd r2, r3, [sp]",
            "add r3, sp, 0x15c",
            "str r3, [sp, 8]",
            "ldrd r2, r3, [r1]",
            "bl fcn.00062364",
            "cmp r0, 0",
            "blt 0x6354c",
            "mov r3, 5",
            "str r3, [r5, 0xc]",
            "ldr r3, [sp, 0x158]",
            "str r3, [r5]",
            "ldr r3, [sp, 0x15c]",
            "str r3, [r5, 4]",
            "ldr r3, [sp, 0x160]",
            "str r3, [r5, 8]",
            "b 0x63330",
            "mov r0, r6",
            "add r1, sp, 0x140",
            "bl fcn.000624c8",
            "cmp r0, 0",
            "beq 0x63544",
            "mov r0, r6",
            "add r1, sp, 0x138",
            "bl fcn.000624c8",
            "cmp r0, 0",
            "moveq r2, 0",
            "moveq r3, 0",
            "addeq r0, sp, 0x140",
            "strdeq r2, r3, [r0, -8]",
            "add r0, sp, 0x28",
            "add r1, sp, 0x158",
            "bl fcn.00062544",
            "subs r4, r0, 0",
            "bgt 0x6329c",
            "bne 0x63314",
            "b 0x63540",
            "ldr r3, [0x00063584]",
            "mov r2, 0",
            "add r1, sp, 0x140",
            "ldr r0, [sp, 0x28]",
            "strd r2, r3, [sp]",
            "add r3, sp, 0x160",
            "str r3, [sp, 8]",
            "ldrd r2, r3, [r1]",
            "bl fcn.00062364",
            "cmp r0, 0",
            "blt 0x6354c",
            "ldr r3, [0x00063584]",
            "mov r2, 0",
            "add r1, sp, 0x140",
            "ldr r0, [sp, 0x28]",
            "strd r2, r3, [sp]",
            "add r3, sp, 0x15c",
            "str r3, [sp, 8]",
            "ldrd r2, r3, [r1, -8]",
            "bl fcn.00062364",
            "cmp r0, 0",
            "blt 0x6354c",
            "mov r3, 1",
            "str r3, [r5, 0xc]",
            "ldr r3, [sp, 0x160]",
            "str r3, [r5]",
            "ldr r3, [sp, 0x15c]",
            "str r3, [r5, 4]",
            "ldr r3, [sp, 0x158]",
            "b 0x63244",
            "cmp r4, 0",
            "bgt 0x63330",
            "ldr r3, [sp, 0x58]",
            "sub r3, r3, 1",
            "str r3, [sp, 0x58]",
            "blt 0x633f8",
            "beq 0x63340",
            "add r0, sp, 0x28",
            "bl fcn.0006201c",
            "cmp r0, 0",
            "bne 0x6309c",
            "add r4, sp, 0x28",
            "mov r5, r7",
            "mov r0, r4",
            "bl fcn.0006201c",
            "ldr r3, [sp, 0x58]",
            "cmp sl, r3",
            "beq 0x62bfc",
            "mov r0, r4",
            "bl fcn.00062098",
            "cmp r0, 0",
            "beq 0x62bfc",
            "mov r3, 0x53",
            "str sl, [r8, 8]",
            "strb r3, [r8, 0x10]",
            "ldr r3, [sp, 0x58]",
            "rsb sl, sl, r3",
            "str sl, [r8, 0xc]",
            "b 0x633d0",
            "mov r5, r7",
            "b 0x63554",
            "mov r0, r6",
            "bl fcn.00062098",
            "cmp r0, 0",
            "bne 0x633d0",
            "b 0x62bfc",
            "bge 0x633d0",
            "b 0x633fc",
            "ldr r3, [0x000635b4]",
            "mov r5, sl",
            "ldr fp, [0x000635b8]",
            "add r3, sl, r3",
            "str r3, [sp, 0x1c]",
            "add fp, sl, fp",
            "ldr r3, [0x000635bc]",
            "add r3, sl, r3",
            "str r3, [sp, 0x20]",
            "ldr r6, [sp, 0x34]",
            "ldr r3, [sp, 0x30]",
            "cmp r6, r3",
            "blo 0x62ef0",
            "ldr r0, [sp, 0x24]",
            "add r1, sp, 0x38",
            "mov r2, 0x58",
            "mov r4, 1",
            "bl sym.imp.memcpy",
            "b 0x634e0",
            "mov r5, r7",
            "add r0, sp, 0x38",
            "bl fcn.00062438",
            "ldrb r3, [sp, 0xb8]",
            "cmp r3, 0",
            "bne 0x63434",
            "ldr r3, [0x0006356c]",
            "cmp r4, r3",
            "bne 0x63434",
            "ldr r2, [0x000635c0]",
            "add r0, sp, 0x28",
            "add r0, r0, 0x90",
            "mov r1, 0x80",
            "add r2, r5, r2",
            "bl sym.imp.snprintf",
            "ldr r2, [sp, 0x18]",
            "cmp r2, 0",
            "beq 0x634e0",
            "ldrb r3, [sp, 0xb8]",
            "cmp r3, 0",
            "beq 0x634e0",
            "ldr r6, [sp, 0x34]",
            "mov r1, 0xa",
            "ldr r7, [sp, 0x30]",
            "mov r0, r6",
            "rsb r2, r6, r7",
            "bl sym.imp.memchr",
            "cmp r0, 0",
            "movne r7, r0",
            "rsb r7, r6, r7",
            "cmp r7, 0",
            "ble 0x6348c",
            "add r3, r6, r7",
            "ldrb r3, [r3, -1]",
            "cmp r3, 0xd",
            "bne 0x63494",
            "sub r7, r7, 1",
            "cmp r7, 0",
            "beq 0x634a0",
            "ldr r3, [0x000635c4]",
            "add r3, r5, r3",
            "b 0x634b4",
            "ldr r3, [0x000635c8]",
            "mov r7, 0xf",
            "ldr r6, [0x000635cc]",
            "add r3, r5, r3",
            "add r6, r5, r6",
            "add r2, sp, 0xb8",
            "stm sp, {r2, r3}",
            "mov r1, 0x10",
            "ldr r2, [0x000635d0]",
            "str r3, [sp, 0x10]",
            "ldr r0, [sp, 0x18]",
            "add r2, r5, r2",
            "ldr r3, [sp, 0xb4]",
            "str r7, [sp, 8]",
            "str r6, [sp, 0xc]",
            "bl sym.imp.av_log",
            "mov r0, r4",
            "add sp, sp, 0x16c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "mov r0, r6",
            "ldr r1, [sp, 0x1c]",
            "mov r2, 4",
            "bl fcn.000626bc",
            "cmp r0, 0",
            "bne 0x63108",
            "mov r0, r6",
            "ldr r1, [sp, 0x20]",
            "mov r2, 3",
            "bl fcn.000626bc",
            "cmp r0, 0",
            "bne 0x63170",
            "mov r0, r6",
            "mov r1, sb",
            "mov r2, 5",
            "bl fcn.000626bc",
            "cmp r0, 0",
            "beq 0x6324c",
            "b 0x63194",
            "mov r5, sl",
            "b 0x63554",
            "ldr r4, [0x0006356c]",
            "cmp r4, 0",
            "b 0x6331c",
            "mvn r4, 0x20",
            "b 0x63544",
            "mvn r4, 0xb",
            "b 0x633fc"
        ]
    },
    "fcn.0006201c": {
        "function_address": "0x0006201c",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r5, r0",
            "ldr r6, [r0, 0xc]",
            "ldr r7, [r0, 8]",
            "b 0x62038",
            "add r4, r4, 1",
            "str r4, [r5, 0xc]",
            "ldr r4, [r5, 0xc]",
            "cmp r4, r7",
            "bhs 0x62054",
            "ldrb r0, [r4]",
            "bl fcn.00061ff8",
            "cmp r0, 0",
            "bne 0x62030",
            "cmp r4, r6",
            "movls r0, 0",
            "movhi r0, 1",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.00062470": {
        "function_address": "0x00062470",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r5, r1",
            "ldr r4, [0x000624bc]",
            "mov r1, r2",
            "mov r6, r0",
            "bl fcn.00062118",
            "cmp r0, 0",
            "add r4, pc, r4",
            "bne 0x624b4",
            "ldr r2, [0x000624c0]",
            "add r0, r6, 0x90",
            "mov r1, 0x80",
            "mov r3, r5",
            "add r2, r4, r2",
            "bl sym.imp.snprintf",
            "ldr r0, [0x000624c4]",
            "pop {r4, r5, r6, pc}",
            "mov r0, 1",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.imp.strtod": {
        "function_address": "0x00009a50",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0xaa8]!"
        ]
    },
    "sym.imp.__aeabi_d2lz": {
        "function_address": "0x00009cb4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x910]!"
        ]
    },
    "fcn.000625b8": {
        "function_address": "0x000625b8",
        "instructions": [
            "push {r0, r1, r2, r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r7, r0",
            "ldrb r3, [r0]",
            "mov fp, r1",
            "sub r3, r3, 0x30",
            "uxtb r3, r3",
            "cmp r3, 9",
            "bhi 0x626b0",
            "add r4, sp, 4",
            "mov r2, 0xa",
            "mov r1, r4",
            "bl sym.imp.strtol",
            "ldr r3, [sp, 4]",
            "mov r8, r0",
            "cmp r3, r7",
            "beq 0x626b0",
            "ldrb r2, [r3]",
            "cmp r2, 0x3a",
            "bne 0x626b0",
            "add r5, r3, 1",
            "ldrb r3, [r3, 1]",
            "cmp r3, 0x2f",
            "bls 0x626b0",
            "cmp r3, 0x39",
            "bhi 0x626b0",
            "mov r0, r5",
            "mov r1, r4",
            "mov r2, 0xa",
            "bl sym.imp.strtol",
            "ldr r6, [sp, 4]",
            "mov sl, r0",
            "cmp r6, r5",
            "beq 0x626b0",
            "ldrb r3, [r6]",
            "cmp r3, 0x3a",
            "movne r4, 0",
            "movne r5, 0",
            "bne 0x62674",
            "add sb, r6, 1",
            "mov r1, r4",
            "mov r0, sb",
            "bl sym.imp.strtod",
            "ldr r3, [sp, 4]",
            "mov r4, r0",
            "mov r5, r1",
            "cmp r3, sb",
            "movhi r6, r3",
            "mov r3, 0xe10",
            "mov r0, 0x3c",
            "mul r8, r3, r8",
            "mla r0, r0, sl, r8",
            "bl fcn.0007d690",
            "mov r2, r4",
            "mov r3, r5",
            "bl fcn.0007d3c0",
            "mov r2, 0",
            "ldr r3, [0x000626b8]",
            "bl fcn.0007d76c",
            "bl sym.imp.__aeabi_d2lz",
            "strd r0, r1, [fp]",
            "rsb r0, r7, r6",
            "b 0x626b4",
            "mov r0, 0",
            "pop {r1, r2, r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0007dca4": {
        "function_address": "0x0007dca4",
        "instructions": [
            "str lr, [sp, -8]!",
            "bl fcn.0007dc90",
            "moveq r0, 1",
            "movne r0, 0",
            "ldr pc, [sp], 8"
        ]
    },
    "fcn.00062064": {
        "function_address": "0x00062064",
        "instructions": [
            "ldr r2, [r0, 0xc]",
            "mov r3, r0",
            "ldr r0, [r0, 8]",
            "cmp r2, r0",
            "movhs r0, 0",
            "bhs 0x6208c",
            "ldrb r0, [r2]",
            "cmp r0, r1",
            "movne r0, 0",
            "moveq r0, 1",
            "add r2, r2, r0",
            "str r2, [r3, 0xc]",
            "bx lr"
        ]
    },
    "fcn.00062118": {
        "function_address": "0x00062118",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sl, lr}",
            "mov r4, r0",
            "ldr r5, [r0, 0xc]",
            "mov r7, r1",
            "ldr sl, [r0, 8]",
            "cmp r5, sl",
            "moveq r0, 0",
            "popeq {r3, r4, r5, r6, r7, r8, sl, pc}",
            "ldrb r3, [r5]",
            "cmp r3, 0xa",
            "beq 0x62188",
            "mov r6, r5",
            "cmp r6, sl",
            "mov r8, r6",
            "bhs 0x6216c",
            "ldrb r0, [r6], 1",
            "cmp r0, 0xa",
            "beq 0x6216c",
            "bl fcn.00061ff8",
            "cmp r0, 0",
            "beq 0x62148",
            "str r5, [r7]",
            "mov r0, r4",
            "str r8, [r4, 0xc]",
            "str r8, [r7, 4]",
            "bl fcn.0006201c",
            "mov r0, 1",
            "pop {r3, r4, r5, r6, r7, r8, sl, pc}",
            "mov r0, 0",
            "pop {r3, r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "fcn.00062098": {
        "function_address": "0x00062098",
        "instructions": [
            "push {r3, lr}",
            "ldr r2, [r0, 8]",
            "ldr r3, [r0, 0xc]",
            "cmp r3, r2",
            "bhs 0x620d8",
            "ldrb r1, [r3]",
            "cmp r1, 0x23",
            "bne 0x620d8",
            "add r3, r3, 1",
            "str r3, [r0, 0xc]",
            "ldr r3, [r0, 0xc]",
            "cmp r3, r2",
            "bhs 0x620d8",
            "ldrb r1, [r3]",
            "cmp r1, 0xa",
            "bne 0x620b8",
            "ldr r3, [r0, 0xc]",
            "cmp r3, r2",
            "beq 0x62108",
            "ldrb r2, [r3]",
            "cmp r2, 0xa",
            "bne 0x62110",
            "add r3, r3, 1",
            "str r3, [r0, 0xc]",
            "ldr r3, [r0, 0x8c]",
            "add r3, r3, 1",
            "str r3, [r0, 0x8c]",
            "bl fcn.0006201c",
            "mov r0, 1",
            "pop {r3, pc}",
            "mov r0, 0",
            "pop {r3, pc}"
        ]
    },
    "fcn.00062190": {
        "function_address": "0x00062190",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "ldr r4, [r0, 0xc]",
            "ldr r5, [r0, 8]",
            "mov r2, r4",
            "cmp r2, r5",
            "mov ip, r2",
            "bhs 0x621ec",
            "ldrb r3, [r2], 1",
            "sub r7, r3, 0x41",
            "sub r6, r3, 0x61",
            "uxtb r7, r7",
            "uxtb r6, r6",
            "cmp r6, 0x19",
            "cmphi r7, 0x19",
            "bls 0x621a0",
            "sub r6, r3, 0x30",
            "uxtb r6, r6",
            "cmp r6, 9",
            "bls 0x621a0",
            "cmp r3, 0x5f",
            "beq 0x621a0",
            "cmp r3, 0x2d",
            "beq 0x621a0",
            "cmp ip, r4",
            "strne r4, [r1]",
            "moveq r0, 0",
            "strne ip, [r0, 0xc]",
            "movne r0, 1",
            "strne ip, [r1, 4]",
            "pop {r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.000627a0": {
        "function_address": "0x000627a0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov sl, r1",
            "ldr r6, [0x00062a58]",
            "sub sp, sp, 0x28",
            "mov r2, 0",
            "mov r3, 0",
            "ldr r1, [0x00062a5c]",
            "mov r8, r0",
            "add r6, pc, r6",
            "strd r2, r3, [sp, 0x18]",
            "mov r2, 3",
            "add r1, r6, r1",
            "bl fcn.000626bc",
            "subs r7, r0, 0",
            "movne r7, 1",
            "movne r4, 0x4e",
            "bne 0x6280c",
            "ldr r0, [r8, 0xc]",
            "add r1, sp, 0x18",
            "bl fcn.000625b8",
            "ldr r3, [r8, 0xc]",
            "cmp r0, 0",
            "movgt r7, 1",
            "movgt r4, 0x54",
            "movle r4, r7",
            "add r3, r3, r0",
            "str r3, [r8, 0xc]",
            "mov r0, 0",
            "mov r1, 0",
            "strd r0, r1, [sp]",
            "add r5, sp, 0x10",
            "b 0x62858",
            "ldr r0, [r8, 0xc]",
            "mov r1, r5",
            "bl fcn.000625b8",
            "ldr r3, [r8, 0xc]",
            "cmp r0, 0",
            "add r3, r3, r0",
            "str r3, [r8, 0xc]",
            "ble 0x62a48",
            "ldrd r0, r1, [sp]",
            "mov r7, 1",
            "ldrd r2, r3, [sp, 0x10]",
            "adds r0, r0, r2",
            "adc r1, r1, r3",
            "strd r0, r1, [sp]",
            "mov r0, r8",
            "mov r1, 0x2b",
            "bl fcn.00062064",
            "cmp r0, 0",
            "bne 0x62820",
            "cmp r7, 0",
            "beq 0x62a4c",
            "mov r0, r8",
            "bl fcn.0006201c",
            "cmp r0, 0",
            "beq 0x62a48",
            "cmp r4, 0",
            "ldrd r2, r3, [sp, 0x18]",
            "beq 0x628a4",
            "cmp sl, 0",
            "bne 0x62a48",
            "strb r4, [r8, 0x70]",
            "strd r2, r3, [r8, 0x68]",
            "b 0x628d0",
            "cmp sl, 0",
            "bne 0x628d0",
            "ldrb r3, [r8, 0x70]",
            "cmp r3, 0",
            "bne 0x628d0",
            "ldr r2, [0x00062a60]",
            "add r0, r8, 0x90",
            "mov r1, 0x80",
            "add r2, r6, r2",
            "bl sym.imp.snprintf",
            "b 0x62a48",
            "ldrd r2, r3, [r8, 0x68]",
            "mov r0, r8",
            "mov r1, 0x3c",
            "ldrb r7, [r8, 0x70]",
            "strd r2, r3, [sp, 8]",
            "bl fcn.00062064",
            "cmp r0, 0",
            "movne r5, 0",
            "bne 0x62924",
            "mov r0, r8",
            "mov r1, 0x2d",
            "bl fcn.00062064",
            "cmp r0, 0",
            "movne r5, 1",
            "bne 0x62924",
            "mov r0, r8",
            "mov r1, 0x3d",
            "bl fcn.00062064",
            "cmp r0, 0",
            "movne r5, 3",
            "beq 0x62970",
            "mov r0, r8",
            "mov r1, 0x3e",
            "bl fcn.00062064",
            "cmp r0, 0",
            "movne r4, 0",
            "bne 0x62978",
            "mov r0, r8",
            "mov r1, 0x2d",
            "bl fcn.00062064",
            "cmp r0, 0",
            "movne r4, 1",
            "bne 0x62978",
            "mov r0, r8",
            "mov r1, 0x3d",
            "bl fcn.00062064",
            "cmp r0, 0",
            "movne r4, 3",
            "bne 0x62978",
            "b 0x62a48",
            "mov r4, 1",
            "mov r5, r4",
            "mov r0, r8",
            "bl fcn.0006201c",
            "mov r0, r8",
            "add r1, sp, 0x20",
            "bl fcn.00062190",
            "cmp r0, 0",
            "beq 0x62a48",
            "mov r0, r8",
            "bl fcn.0006201c",
            "ldr r1, [0x00062a64]",
            "mov r0, r8",
            "mov r2, 2",
            "add r1, r6, r1",
            "bl fcn.000626bc",
            "subs r6, r0, 0",
            "beq 0x629c4",
            "mov r6, 3",
            "mov r0, r8",
            "bl fcn.0006201c",
            "mov r0, r8",
            "bl fcn.00062098",
            "cmp r0, 0",
            "beq 0x62a48",
            "cmp sl, 0",
            "addne r0, r8, 0x1c",
            "movne r1, 0x20",
            "addne r2, r8, 0x78",
            "addne r3, r8, 0x88",
            "addeq r0, r8, 0x18",
            "moveq r1, 0x20",
            "addeq r2, r8, 0x28",
            "addeq r3, r8, 0x84",
            "bl fcn.00062700",
            "cmp r0, 0",
            "mvneq r7, 0xb",
            "beq 0x62a4c",
            "ldrd r2, r3, [sp]",
            "ldrd r8, sb, [sp, 8]",
            "strb r7, [r0, 8]",
            "mov r7, 1",
            "strb r5, [r0, 0x1c]",
            "adds r2, r2, r8",
            "strb r4, [r0, 0x1d]",
            "adc r3, r3, sb",
            "strb r6, [r0, 0x1e]",
            "strd r2, r3, [r0]",
            "ldr r3, [sp, 0x20]",
            "ldr r2, [sp, 0x24]",
            "str r3, [r0, 0x10]",
            "rsb r3, r3, r2",
            "str r3, [r0, 0x14]",
            "b 0x62a4c",
            "ldr r7, [0x00062a68]",
            "mov r0, r7",
            "add sp, sp, 0x28",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "sym.imp.memcmp": {
        "function_address": "0x00009eac",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x7c0]!"
        ]
    },
    "fcn.00062700": {
        "function_address": "0x00062700",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r8, r3",
            "mov r4, r2",
            "ldr r3, [r2]",
            "mov r6, r0",
            "mov r5, r1",
            "ldr r2, [r8]",
            "cmp r3, r2",
            "bne 0x62770",
            "mvn r7, 0xc0000000",
            "cmp r3, r7",
            "movlt r7, r3",
            "movge r7, r7",
            "lsl r7, r7, 1",
            "cmp r7, 0x20",
            "movlt r7, 0x20",
            "cmp r3, r7",
            "movge r6, 0",
            "bge 0x62798",
            "ldr r0, [r6]",
            "mov r1, r7",
            "mov r2, r5",
            "bl sym.imp.av_realloc_f",
            "cmp r0, 0",
            "str r0, [r6]",
            "moveq r6, r0",
            "beq 0x62798",
            "str r7, [r8]",
            "ldr r2, [r4]",
            "mov r1, 0",
            "ldr r3, [r6]",
            "mla r6, r2, r5, r3",
            "mov r2, r5",
            "mov r0, r6",
            "bl sym.imp.memset",
            "ldr r3, [r4]",
            "add r3, r3, 1",
            "str r3, [r4]",
            "mov r0, r6",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.000626bc": {
        "function_address": "0x000626bc",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r4, r0",
            "ldr r5, [r0, 0xc]",
            "mov r6, r2",
            "ldr r3, [r0, 8]",
            "rsb r3, r5, r3",
            "cmp r3, r2",
            "movlt r0, 0",
            "poplt {r4, r5, r6, pc}",
            "mov r0, r5",
            "bl sym.imp.memcmp",
            "cmp r0, 0",
            "addeq r5, r5, r6",
            "addeq r0, r0, 1",
            "streq r5, [r4, 0xc]",
            "movne r0, 0",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.00062544": {
        "function_address": "0x00062544",
        "instructions": [
            "push {r4, r5, lr}",
            "mov r5, r1",
            "sub sp, sp, 0x1c",
            "mov r1, 0x2f",
            "mov r4, r0",
            "bl fcn.00062064",
            "cmp r0, 0",
            "beq 0x625a4",
            "mov r0, r4",
            "add r1, sp, 0x10",
            "bl fcn.000624c8",
            "cmp r0, 0",
            "ldreq r0, [0x000625ac]",
            "beq 0x625a4",
            "ldr r2, [0x000625b0]",
            "ldr r3, [0x000625b4]",
            "ldr r0, [r4]",
            "str r5, [sp, 8]",
            "strd r2, r3, [sp]",
            "ldrd r2, r3, [sp, 0x10]",
            "bl fcn.00062364",
            "cmp r0, 0",
            "moveq r0, 1",
            "mvnne r0, 0x21",
            "add sp, sp, 0x1c",
            "pop {r4, r5, pc}"
        ]
    },
    "fcn.000624c8": {
        "function_address": "0x000624c8",
        "instructions": [
            "push {r0, r1, r4, r5, r6, r7, r8, lr}",
            "mov r4, r0",
            "ldr r7, [r0, 0xc]",
            "mov r6, r1",
            "ldr r3, [r0, 8]",
            "cmp r7, r3",
            "beq 0x62534",
            "ldrb r8, [r7]",
            "mov r0, r8",
            "bl fcn.00061ff8",
            "subs r5, r0, 0",
            "bne 0x62534",
            "cmp r8, 0xa",
            "beq 0x6253c",
            "mov r0, r7",
            "add r1, sp, 4",
            "bl sym.imp.strtod",
            "mov r2, r0",
            "mov r3, r1",
            "ldr r0, [r4, 0xc]",
            "ldr r1, [sp, 4]",
            "cmp r1, r0",
            "bls 0x6253c",
            "strd r2, r3, [r6]",
            "mov r0, 1",
            "str r1, [r4, 0xc]",
            "b 0x62540",
            "mov r0, 0",
            "b 0x62540",
            "mov r0, r5",
            "pop {r2, r3, r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.00062364": {
        "function_address": "0x00062364",
        "instructions": [
            "push {r0, r1, r2, r4, r5, r6, r7, r8, sb, lr}",
            "mov r1, r3",
            "mov r7, r0",
            "mov r8, r2",
            "mov r0, r2",
            "mov sb, r3",
            "mov r2, 0",
            "ldr r3, [0x00062420]",
            "bl fcn.0007d76c",
            "mov r2, r0",
            "mov r3, r1",
            "ldrd r0, r1, [sp, 0x28]",
            "bl fcn.0007d76c",
            "ldr r6, [0x00062424]",
            "mov r2, 0",
            "ldr r3, [0x00062428]",
            "mov r4, r0",
            "mov r5, r1",
            "bl fcn.0007dcb8",
            "cmp r0, 0",
            "add r6, pc, r6",
            "bne 0x623d8",
            "mov r0, r4",
            "mov r1, r5",
            "ldr r2, [0x0006242c]",
            "ldr r3, [0x00062430]",
            "bl fcn.0007dce0",
            "cmp r0, 0",
            "beq 0x623fc",
            "cmp r7, 0",
            "beq 0x62418",
            "ldr r2, [0x00062434]",
            "mov r0, r7",
            "mov r1, 0x10",
            "strd r8, sb, [sp]",
            "add r2, r6, r2",
            "bl sym.imp.av_log",
            "b 0x62418",
            "mov r0, r4",
            "mov r1, r5",
            "bl fcn.0007dd08",
            "ldr r3, [sp, 0x30]",
            "str r0, [r3]",
            "mov r0, 0",
            "b 0x6241c",
            "mvn r0, 0x20",
            "pop {r1, r2, r3, r4, r5, r6, r7, r8, sb, pc}"
        ]
    },
    "fcn.00062438": {
        "function_address": "0x00062438",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r0",
            "bl sym.imp.av_freep",
            "add r0, r4, 4",
            "bl sym.imp.av_freep",
            "add r0, r4, 8",
            "bl sym.imp.av_freep",
            "add r0, r4, 0xc",
            "bl sym.imp.av_freep",
            "add r0, r4, 0x10",
            "bl sym.imp.av_freep",
            "add r0, r4, 0x48",
            "pop {r4, lr}",
            "b sym.imp.av_freep"
        ]
    },
    "sym.imp.memchr": {
        "function_address": "0x00009f60",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x748]!"
        ]
    },
    "fcn.0007d26c": {
        "function_address": "0x0007d26c",
        "instructions": [
            "eor ip, r0, r1",
            "rsbmi r1, r1, 0",
            "subs r2, r1, 1",
            "beq 0x7d2fc",
            "movs r3, r0",
            "rsbmi r3, r0, 0",
            "cmp r3, r1",
            "bls 0x7d308",
            "tst r1, r2",
            "beq 0x7d318",
            "clz r2, r1",
            "clz r0, r3",
            "sub r0, r2, r0",
            "mov r2, 1",
            "lsl r1, r1, r0",
            "lsl r2, r2, r0",
            "mov r0, 0",
            "cmp r3, r1",
            "subhs r3, r3, r1",
            "orrhs r0, r0, r2",
            "cmp r3, r1, lsr 1",
            "subhs r3, r3, r1, lsr 1",
            "orrhs r0, r0, r2, lsr 1",
            "cmp r3, r1, lsr 2",
            "subhs r3, r3, r1, lsr 2",
            "orrhs r0, r0, r2, lsr 2",
            "cmp r3, r1, lsr 3",
            "subhs r3, r3, r1, lsr 3",
            "orrhs r0, r0, r2, lsr 3",
            "cmp r3, 0",
            "lsrsne r2, r2, 4",
            "lsrne r1, r1, 4",
            "bne 0x7d2b0",
            "cmp ip, 0",
            "rsbmi r0, r0, 0",
            "bx lr",
            "teq ip, r0",
            "rsbmi r0, r0, 0",
            "bx lr",
            "movlo r0, 0",
            "asreq r0, ip, 0x1f",
            "orreq r0, r0, 1",
            "bx lr",
            "clz r2, r1",
            "rsb r2, r2, 0x1f",
            "cmp ip, 0",
            "lsr r0, r3, r2",
            "rsbmi r0, r0, 0",
            "bx lr"
        ]
    },
    "fcn.0007df60": {
        "function_address": "0x0007df60",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r7, r3",
            "mov r6, r2",
            "mov r4, r0",
            "mov r5, r1",
            "bl fcn.0007dfd8",
            "umull r2, r3, r0, r6",
            "mul r7, r0, r7",
            "ldr ip, [sp, 0x18]",
            "mla r7, r6, r1, r7",
            "add r3, r7, r3",
            "subs r2, r4, r2",
            "sbc r3, r5, r3",
            "strd r2, r3, [ip]",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.000635d4": {
        "function_address": "0x000635d4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x1c",
            "ldr r4, [sp, 0x48]",
            "mov sb, r0",
            "mov r5, r1",
            "mov fp, r2",
            "ldr r6, [0x00063758]",
            "ldr r7, [r4, 0x18]",
            "add r6, pc, r6",
            "cmp r7, 0",
            "add r3, r7, 1",
            "str r3, [r4, 0x18]",
            "ldrne r3, [r4, 0x10]",
            "movne r1, 0x10",
            "ldrne r2, [0x0006375c]",
            "strne r3, [sp]",
            "bne 0x636a0",
            "ldrd r0, r1, [r4]",
            "mov r8, r7",
            "ldrd r2, r3, [sp, 0x40]",
            "adds r0, r0, r2",
            "adc r1, r1, r3",
            "strd r0, r1, [sp, 0x10]",
            "b 0x63680",
            "ldr sl, [r5]",
            "add r3, sl, r7",
            "ldr r2, [r3, 4]",
            "ldr r3, [r4, 0x14]",
            "cmp r2, r3",
            "bne 0x63678",
            "ldr r0, [sl, r7]",
            "ldr r1, [r4, 0x10]",
            "bl sym.imp.memcmp",
            "cmp r0, 0",
            "bne 0x63678",
            "mov r3, 0x14",
            "mla r8, r3, r8, sl",
            "ldrb r3, [r8, 0x10]",
            "cmp r3, 0x42",
            "bne 0x63704",
            "b 0x636b4",
            "add r8, r8, 1",
            "add r7, r7, 0x14",
            "ldr r3, [r5, 0x14]",
            "cmp r8, r3",
            "blt 0x63634",
            "ldr r2, [0x00063760]",
            "mov r0, sb",
            "ldr r3, [r4, 0x10]",
            "mov r1, 0x10",
            "str r3, [sp]",
            "add r2, r6, r2",
            "ldr r3, [r4, 0x14]",
            "bl sym.imp.av_log",
            "mvn r0, 0x15",
            "b 0x63750",
            "ldr r7, [r8, 8]",
            "mov r6, r0",
            "ldr r3, [r5, 0xc]",
            "add r7, r3, r7, lsl 5",
            "b 0x636f4",
            "ldrd r2, r3, [sp, 0x10]",
            "mov r0, sb",
            "mov r1, r5",
            "str r7, [sp, 8]",
            "add r7, r7, 0x20",
            "strd r2, r3, [sp]",
            "mov r2, fp",
            "bl fcn.000635d4",
            "cmp r0, 0",
            "blt 0x63750",
            "add r6, r6, 1",
            "ldr r3, [r8, 0xc]",
            "cmp r6, r3",
            "blt 0x636c8",
            "b 0x63740",
            "add r2, r5, 0x1c",
            "mov r3, fp",
            "add r0, r5, 0x10",
            "mov r1, 0x30",
            "bl fcn.00062700",
            "ldrd r2, r3, [r4]",
            "strd r2, r3, [r0]",
            "ldr r3, [r8, 8]",
            "str r3, [r0, 0x20]",
            "ldr r3, [r8, 0xc]",
            "str r3, [r0, 0x24]",
            "ldr r3, [r4, 0x1c]",
            "strh r3, [r0, 0x28]",
            "lsr r3, r3, 0x10",
            "strb r3, [r0, 0x2a]",
            "ldr r3, [r4, 0x18]",
            "mov r0, 0",
            "sub r3, r3, 1",
            "str r3, [r4, 0x18]",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00063890": {
        "function_address": "0x00063890",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x6c",
            "mov r8, r2",
            "ldr r6, [sp, 0x9c]",
            "ldr r2, [sp, 0x94]",
            "ldr r3, [0x00063c60]",
            "ldr r7, [sp, 0x98]",
            "cmp r6, r2",
            "ldr r5, [sp, 0xa0]",
            "add r3, pc, r3",
            "ldr r4, [sp, 0xa4]",
            "ldr sl, [sp, 0xa8]",
            "bgt 0x638d4",
            "bne 0x63c54",
            "ldr sb, [sp, 0x90]",
            "cmp r7, sb",
            "bls 0x63c54",
            "ldr r2, [r5, 8]",
            "cmp r2, 0",
            "bne 0x638f0",
            "ldr ip, [r4, 8]",
            "cmp ip, 0",
            "moveq r0, ip",
            "beq 0x63c58",
            "ldr ip, [r5, 0xc]",
            "cmp ip, 5",
            "addls pc, pc, ip, lsl 2",
            "b 0x63c38",
            "b 0x63c54",
            "b 0x63918",
            "b 0x63bc4",
            "b 0x63a28",
            "b 0x63c38",
            "b 0x63bb4",
            "ldr r3, [r5, 4]",
            "cmp r3, 0",
            "bne 0x63968",
            "ldr sl, [r4, 4]",
            "cmp sl, 0",
            "bne 0x63968",
            "ldrd r0, r1, [sp, 0x90]",
            "strd r0, r1, [sp]",
            "mov r0, r8",
            "ldr r3, [r5]",
            "str r2, [sp, 0xc]",
            "str r7, [sp, 0x10]",
            "str r3, [sp, 8]",
            "str r6, [sp, 0x14]",
            "ldr r3, [r4]",
            "ldr r1, [0x00063c64]",
            "str r3, [sp, 0x18]",
            "ldr r3, [r4, 8]",
            "str r3, [sp, 0x1c]",
            "b 0x63c18",
            "ldrd r0, r1, [sp, 0x90]",
            "add r3, r3, r3, lsr 31",
            "strd r0, r1, [sp]",
            "mov r0, r8",
            "ldr r1, [r5]",
            "str r2, [sp, 0xc]",
            "str r7, [sp, 0x10]",
            "str r6, [sp, 0x14]",
            "add r3, r1, r3, asr 1",
            "ldr r1, [0x00063c64]",
            "str r3, [sp, 8]",
            "ldm r4, {r2, r3}",
            "add r3, r3, r3, lsr 31",
            "add r3, r2, r3, asr 1",
            "mov r2, 1",
            "str r3, [sp, 0x18]",
            "ldr r3, [r4, 8]",
            "str r3, [sp, 0x1c]",
            "ldr r3, [r5, 0x10]",
            "bl fcn.00063764",
            "cmp r0, 0",
            "blt 0x63c58",
            "ldrd r2, r3, [sp, 0x90]",
            "str r0, [r4, 0x10]",
            "mov r0, r8",
            "ldr r1, [0x00063c64]",
            "strd r2, r3, [sp]",
            "ldm r5, {r2, r3}",
            "add r3, r3, r3, lsr 31",
            "sub r3, r2, r3, asr 1",
            "str r3, [sp, 8]",
            "ldr r3, [r5, 8]",
            "str r7, [sp, 0x10]",
            "str r6, [sp, 0x14]",
            "str r3, [sp, 0xc]",
            "ldm r4, {r2, r3}",
            "add r3, r3, r3, lsr 31",
            "sub r3, r2, r3, asr 1",
            "mov r2, 2",
            "str r3, [sp, 0x18]",
            "ldr r3, [r4, 8]",
            "str r3, [sp, 0x1c]",
            "ldr r3, [r5, 0x14]",
            "bl fcn.00063764",
            "cmp r0, 0",
            "strge r0, [r4, 0x14]",
            "bge 0x63c54",
            "b 0x63c58",
            "cmp sl, 2",
            "bne 0x63c54",
            "ldr fp, [r4, 8]",
            "mov r3, 4",
            "ldr r4, [r1]",
            "mov r1, 0xa",
            "str r3, [sp, 0x38]",
            "cmp fp, 0",
            "add r3, fp, 3",
            "movge r3, fp",
            "ldr r5, [r5]",
            "sub r2, fp, r3, asr 2",
            "asr r3, r3, 2",
            "str sl, [sp, 0x30]",
            "str r2, [sp, 0x3c]",
            "mov r2, 8",
            "str r2, [sp, 0x40]",
            "add r2, fp, fp, lsr 31",
            "str r3, [sp, 0x4c]",
            "mov r0, fp",
            "asr r2, r2, 1",
            "mov r3, 0x19",
            "str r5, [sp, 0x28]",
            "mov sl, r8",
            "str r2, [sp, 0x44]",
            "mov r2, 0x10",
            "str r2, [sp, 0x48]",
            "str r3, [sp, 0x50]",
            "str fp, [sp, 0x34]",
            "bl fcn.0007d264",
            "mov r3, 0x32",
            "str r0, [sp, 0x54]",
            "mov r1, 0x50",
            "mov r0, fp",
            "str r3, [sp, 0x58]",
            "bl fcn.0007d264",
            "mov r3, 0x4b",
            "str r0, [sp, 0x5c]",
            "str r3, [sp, 0x60]",
            "mov r0, r4",
            "mov r3, 0",
            "mov r1, 0x14",
            "str r3, [sp, 0x64]",
            "bl fcn.0007d264",
            "mov r4, r0",
            "asr r5, r4, 0x1f",
            "ldr r1, [sp, 0x90]",
            "strd r4, r5, [sp, 0x20]",
            "add r5, sp, 0x68",
            "add r4, sp, 0x30",
            "str r5, [sp, 0x2c]",
            "ldr r0, [sp, 0x94]",
            "b 0x63ba4",
            "ldr r2, [r4]",
            "ldr lr, [sp, 0x20]",
            "ldr r3, [sp, 0x24]",
            "mov r8, r2",
            "asr sb, r8, 0x1f",
            "mul ip, lr, sb",
            "ldrd r8, sb, [sp, 0x90]",
            "mla ip, r2, r3, ip",
            "umull r2, r3, lr, r2",
            "adds r2, r2, r8",
            "mov r5, r2",
            "add r3, ip, r3",
            "adc r3, r3, sb",
            "cmp r3, r6",
            "mov r8, r3",
            "bgt 0x63b48",
            "bne 0x63b50",
            "cmp r2, r7",
            "bls 0x63b50",
            "mov r5, r7",
            "mov r8, r6",
            "ldr sb, [r4, 4]",
            "mov r2, 3",
            "ldr lr, [sp, 0x28]",
            "mvn r3, 0",
            "str r1, [sp]",
            "add r4, r4, 8",
            "str r0, [sp, 4]",
            "mov r0, sl",
            "ldr r1, [0x00063c64]",
            "str lr, [sp, 8]",
            "str fp, [sp, 0xc]",
            "str r5, [sp, 0x10]",
            "str r8, [sp, 0x14]",
            "str lr, [sp, 0x18]",
            "str sb, [sp, 0x1c]",
            "bl fcn.00063764",
            "cmp r0, 0",
            "blt 0x63c58",
            "mov r1, r5",
            "mov r0, r8",
            "mov fp, sb",
            "ldr r2, [sp, 0x2c]",
            "cmp r4, r2",
            "bne 0x63afc",
            "b 0x63c54",
            "ldr r2, [0x00063c68]",
            "mov r1, 0x18",
            "add r2, r3, r2",
            "bl sym.imp.av_log",
            "ldr r2, [r5, 8]",
            "mov sl, 0",
            "ldrd r0, r1, [sp, 0x90]",
            "ldr r3, [r4, 8]",
            "cmp r2, sl",
            "str sl, [sp, 8]",
            "strd r0, r1, [sp]",
            "add r1, r2, 3",
            "movge r1, r2",
            "cmp r3, sl",
            "sub r2, r2, r1, asr 2",
            "ldr r1, [0x00063c6c]",
            "mov r0, r8",
            "str r7, [sp, 0x10]",
            "str r2, [sp, 0xc]",
            "add r2, r3, 3",
            "movge r2, r3",
            "str r6, [sp, 0x14]",
            "sub r3, r3, r2, asr 2",
            "str sl, [sp, 0x18]",
            "str r3, [sp, 0x1c]",
            "mov r2, 3",
            "ldr r3, [r5, 0x10]",
            "bl fcn.00063764",
            "cmp r0, 0",
            "strge r0, [r4, 0x14]",
            "strge r0, [r4, 0x10]",
            "movge r0, sl",
            "b 0x63c58",
            "ldr r2, [0x00063c70]",
            "mov r1, 0x10",
            "add r2, r3, r2",
            "mov r3, ip",
            "bl sym.imp.av_log",
            "ldr r0, [0x00063c74]",
            "b 0x63c58",
            "mov r0, 0",
            "add sp, sp, 0x6c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00063764": {
        "function_address": "0x00063764",
        "instructions": [
            "push {r0, r1, r2, r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "subs r4, r3, 0",
            "mov r5, r0",
            "mov r8, r1",
            "mov sl, r2",
            "ldr r7, [sp, 0x30]",
            "add r6, sp, 0x34",
            "ldm r6, {r6, sb, fp}",
            "ldr ip, [sp, 0x48]",
            "blt 0x6380c",
            "ldr r3, [r0]",
            "mov r2, 0x30",
            "mla r3, r2, r4, r3",
            "ldr r2, [r3, 0x10]",
            "cmp r2, r1",
            "bne 0x6380c",
            "ldr r2, [r3, 0x14]",
            "cmp r2, sl",
            "bne 0x6380c",
            "ldr r2, [r3, 0x18]",
            "ldr r1, [r3, 0x1c]",
            "cmp r2, r1",
            "bne 0x6380c",
            "cmp sb, ip",
            "cmpeq r2, sb",
            "bne 0x6380c",
            "ldr r2, [r3, 0x20]",
            "ldr r1, [r3, 0x24]",
            "cmp r2, r1",
            "bne 0x6380c",
            "ldr r0, [sp, 0x4c]",
            "cmp fp, r0",
            "cmpeq r2, fp",
            "bne 0x6380c",
            "ldr r2, [r3, 8]",
            "cmp r2, r7",
            "bne 0x6380c",
            "ldr r2, [r3, 0xc]",
            "cmp r2, r6",
            "ldrdeq r0, r1, [sp, 0x40]",
            "strdeq r0, r1, [r3, 8]",
            "beq 0x63884",
            "mov r0, r5",
            "mov r1, 0x30",
            "add r2, r5, 4",
            "add r3, r5, 8",
            "str ip, [sp, 4]",
            "bl fcn.00062700",
            "cmp r0, 0",
            "ldr ip, [sp, 4]",
            "mvneq r4, 0xb",
            "beq 0x63884",
            "ldrd r2, r3, [sp, 0x40]",
            "cmp r4, 0",
            "orrge r4, r4, 0x80000000",
            "movlt r4, 0",
            "str r4, [r0, 0x28]",
            "strd r2, r3, [r0, 8]",
            "ldr r4, [r5]",
            "ldr r3, [sp, 0x4c]",
            "str r7, [r0]",
            "str r6, [r0, 4]",
            "str r8, [r0, 0x10]",
            "str sl, [r0, 0x14]",
            "str sb, [r0, 0x18]",
            "str ip, [r0, 0x1c]",
            "str fp, [r0, 0x20]",
            "str r3, [r0, 0x24]",
            "rsb r0, r4, r0",
            "ldr r4, [0x0006388c]",
            "asr r0, r0, 4",
            "mul r4, r4, r0",
            "mov r0, r4",
            "pop {r1, r2, r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00029794": {
        "function_address": "0x00029794",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, lr}",
            "mov r3, 1",
            "sub sp, sp, 0x94",
            "mov r4, r0",
            "mov r2, 0",
            "str r3, [sp]",
            "mov r3, 0",
            "ldr r0, [r0, 0x10]",
            "bl sym.avio_seek",
            "mov r8, r0",
            "ldr r0, [r4, 0x10]",
            "ldr r5, [0x0002996c]",
            "mov sb, r1",
            "ldr r3, [r0, 0x54]",
            "add r5, pc, r5",
            "cmp r3, 0",
            "beq 0x29964",
            "bl sym.avio_size",
            "cmp r1, 0",
            "mov r2, r0",
            "mov r3, r1",
            "bgt 0x297f8",
            "bne 0x29964",
            "cmp r0, 0x80",
            "bls 0x29964",
            "mvn r6, 0x7f",
            "mvn r7, 0",
            "adds r2, r2, r6",
            "mov r1, 0",
            "adc r3, r3, r7",
            "ldr r0, [r4, 0x10]",
            "add r6, sp, 8",
            "str r1, [sp]",
            "bl sym.avio_seek",
            "ldr r0, [r4, 0x10]",
            "mov r1, r6",
            "mov r2, 0x80",
            "bl sym.avio_read",
            "cmp r0, 0x80",
            "bne 0x2994c",
            "ldrb r3, [sp, 8]",
            "cmp r3, 0x54",
            "bne 0x2994c",
            "ldrb r3, [sp, 9]",
            "cmp r3, 0x41",
            "bne 0x2994c",
            "ldrb r3, [sp, 0xa]",
            "cmp r3, 0x47",
            "bne 0x2994c",
            "ldr r1, [0x00029970]",
            "add r2, r6, 3",
            "mov r0, r4",
            "mov r3, 0x1e",
            "add r1, r5, r1",
            "bl fcn.00029724",
            "ldr r1, [0x00029974]",
            "add r2, r6, 0x21",
            "mov r0, r4",
            "mov r3, 0x1e",
            "add r1, r5, r1",
            "bl fcn.00029724",
            "ldr r1, [0x00029978]",
            "add r2, r6, 0x3f",
            "mov r0, r4",
            "mov r3, 0x1e",
            "add r1, r5, r1",
            "bl fcn.00029724",
            "ldr r1, [0x0002997c]",
            "add r2, r6, 0x5d",
            "mov r0, r4",
            "mov r3, 4",
            "add r1, r5, r1",
            "bl fcn.00029724",
            "ldr r1, [0x00029980]",
            "add r2, r6, 0x61",
            "mov r0, r4",
            "mov r3, 0x1e",
            "add r1, r5, r1",
            "bl fcn.00029724",
            "ldrb r6, [sp, 0x85]",
            "cmp r6, 0",
            "bne 0x2991c",
            "ldrb r3, [sp, 0x86]",
            "cmp r3, 0",
            "beq 0x2991c",
            "ldr r2, [0x00029984]",
            "add r7, sp, 0x88",
            "mov r1, 5",
            "mov r0, r7",
            "add r2, r5, r2",
            "bl sym.imp.snprintf",
            "ldr r1, [0x00029988]",
            "add r0, r4, 0x4b0",
            "add r0, r0, 8",
            "mov r2, r7",
            "mov r3, r6",
            "add r1, r5, r1",
            "bl sym.imp.av_dict_set",
            "ldrb r3, [sp, 0x87]",
            "cmp r3, 0x93",
            "bgt 0x2994c",
            "ldr r2, [0x0002998c]",
            "add r0, r4, 0x4b0",
            "ldr r1, [0x00029990]",
            "add r0, r0, 8",
            "ldr r2, [r5, r2]",
            "add r1, r5, r1",
            "ldr r2, [r2, r3, lsl 2]",
            "mov r3, 0",
            "bl sym.imp.av_dict_set",
            "mov r3, 0",
            "ldr r0, [r4, 0x10]",
            "str r3, [sp]",
            "mov r2, r8",
            "mov r3, sb",
            "bl sym.avio_seek",
            "add sp, sp, 0x94",
            "pop {r4, r5, r6, r7, r8, sb, pc}"
        ]
    },
    "fcn.00029724": {
        "function_address": "0x00029724",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "sub sp, sp, 0x200",
            "mov ip, sp",
            "mov r4, 0",
            "mov r7, sp",
            "movw r6, 0x1fe",
            "b 0x29760",
            "ldrb r5, [r2, r4]",
            "cmp r5, 0",
            "beq 0x29768",
            "rsb r8, r7, ip",
            "cmp r8, r6",
            "bhi 0x29768",
            "add r4, r4, 1",
            "strb r5, [ip], 1",
            "cmp r4, r3",
            "blt 0x29740",
            "mov r3, 0",
            "strb r3, [ip]",
            "ldrb r2, [sp]",
            "cmp r2, r3",
            "beq 0x2978c",
            "add r0, r0, 0x4b0",
            "mov r2, sp",
            "add r0, r0, 8",
            "bl sym.imp.av_dict_set",
            "add sp, sp, 0x200",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.00050ec4": {
        "function_address": "0x00050ec4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sl, lr}",
            "sub sp, sp, 0x64",
            "mov r4, r1",
            "mov r6, r2",
            "mov r5, r0",
            "bl sym.avio_rl16",
            "mov r3, 1",
            "mov sl, r0",
            "str r3, [r4, 0xd0]",
            "mov r0, r5",
            "bl sym.avio_rl16",
            "str r0, [r4, 0x40]",
            "mov r0, r5",
            "bl sym.avio_rl32",
            "str r0, [r4, 0x3c]",
            "mov r0, r5",
            "bl sym.avio_rl32",
            "lsl r0, r0, 3",
            "ldr r8, [0x00051170]",
            "str r0, [r4, 4]",
            "mov r0, r5",
            "bl sym.avio_rl16",
            "cmp r6, 0xe",
            "add r8, pc, r8",
            "moveq r3, 8",
            "str r0, [r4, 0x100]",
            "streq r3, [r4, 0x174]",
            "beq 0x50f40",
            "mov r0, r5",
            "bl sym.avio_rl16",
            "str r0, [r4, 0x174]",
            "movw r3, 0xfffe",
            "cmp sl, r3",
            "moveq r3, 0",
            "streq r3, [r4, 0xd8]",
            "beq 0x50f68",
            "str sl, [r4, 0xd8]",
            "mov r0, sl",
            "ldr r1, [r4, 0x174]",
            "bl fcn.00050c5c",
            "str r0, [r4, 0xd4]",
            "cmp r6, 0x11",
            "ble 0x5112c",
            "mov r0, r5",
            "sub r6, r6, 0x12",
            "bl sym.avio_rl16",
            "movw r2, 0xfffe",
            "cmp r0, r6",
            "movlt r7, r0",
            "movge r7, r6",
            "cmp r7, 0x15",
            "movle r3, 0",
            "movgt r3, 1",
            "cmp sl, r2",
            "movne r3, 0",
            "cmp r3, 0",
            "beq 0x510d0",
            "mov r0, r5",
            "add sl, sp, 0x44",
            "bl sym.avio_rl16",
            "str r0, [r4, 0x174]",
            "mov r0, r5",
            "bl sym.avio_rl32",
            "mov r3, 0",
            "str r0, [r4, 0x338]",
            "str r3, [r4, 0x33c]",
            "mov r0, r5",
            "mov r1, sl",
            "bl fcn.00050e58",
            "ldr r2, [0x00051174]",
            "add r3, sp, 0x54",
            "add r2, r8, r2",
            "ldm r2, {r0, r1, r2}",
            "stm r3, {r0, r1, r2}",
            "add r0, sl, 4",
            "mov r1, r3",
            "mov r2, 0xc",
            "bl sym.imp.memcmp",
            "cmp r0, 0",
            "bne 0x5101c",
            "ldr r0, [sp, 0x44]",
            "ldr r1, [r4, 0x174]",
            "str r0, [r4, 0xd8]",
            "bl fcn.00050c5c",
            "str r0, [r4, 0xd4]",
            "b 0x510c8",
            "ldr r3, [0x00051178]",
            "mov r1, sl",
            "ldr r0, [r8, r3]",
            "bl fcn.00050e84",
            "cmp r0, 0",
            "str r0, [r4, 0xd4]",
            "bne 0x510c8",
            "ldrb r2, [sp, 0x45]",
            "mov r0, r4",
            "ldrb r3, [sp, 0x44]",
            "mov r1, 0x18",
            "str r2, [sp]",
            "ldrb r2, [sp, 0x46]",
            "str r2, [sp, 4]",
            "ldrb r2, [sp, 0x47]",
            "str r2, [sp, 8]",
            "ldrb r2, [sp, 0x48]",
            "str r2, [sp, 0xc]",
            "ldrb r2, [sp, 0x49]",
            "str r2, [sp, 0x10]",
            "ldrb r2, [sp, 0x4a]",
            "str r2, [sp, 0x14]",
            "ldrb r2, [sp, 0x4b]",
            "str r2, [sp, 0x18]",
            "ldrb r2, [sp, 0x4c]",
            "str r2, [sp, 0x1c]",
            "ldrb r2, [sp, 0x4d]",
            "str r2, [sp, 0x20]",
            "ldrb r2, [sp, 0x4e]",
            "str r2, [sp, 0x24]",
            "ldrb r2, [sp, 0x4f]",
            "str r2, [sp, 0x28]",
            "ldrb r2, [sp, 0x50]",
            "str r2, [sp, 0x2c]",
            "ldrb r2, [sp, 0x51]",
            "str r2, [sp, 0x30]",
            "ldrb r2, [sp, 0x52]",
            "str r2, [sp, 0x34]",
            "ldrb r2, [sp, 0x53]",
            "str r2, [sp, 0x38]",
            "ldr r2, [0x0005117c]",
            "add r2, r8, r2",
            "bl sym.imp.av_log",
            "sub r7, r7, 0x16",
            "sub r6, r6, 0x16",
            "cmp r7, 0",
            "str r7, [r4, 0x1c]",
            "ble 0x51114",
            "ldr r0, [r4, 0x18]",
            "bl sym.imp.av_free",
            "ldr r0, [r4, 0x1c]",
            "add r0, r0, 0x10",
            "bl sym.imp.av_mallocz",
            "cmp r0, 0",
            "mov r1, r0",
            "str r0, [r4, 0x18]",
            "mvneq r0, 0xb",
            "beq 0x51168",
            "rsb r6, r7, r6",
            "mov r0, r5",
            "ldr r2, [r4, 0x1c]",
            "bl sym.avio_read",
            "cmp r6, 0",
            "ble 0x5112c",
            "mov r0, r5",
            "mov r2, r6",
            "asr r3, r2, 0x1f",
            "bl sym.avio_skip",
            "ldr r3, [r4, 0xd4]",
            "ldr r2, [0x00051180]",
            "cmp r3, r2",
            "moveq r0, 0",
            "streq r0, [r4, 0x40]",
            "streq r0, [r4, 0x3c]",
            "beq 0x51168",
            "ldr r2, [0x00051184]",
            "cmp r3, r2",
            "bne 0x51164",
            "ldr r0, [r4, 4]",
            "ldr r1, [r4, 0x3c]",
            "bl fcn.0007d264",
            "str r0, [r4, 0x174]",
            "mov r0, 0",
            "add sp, sp, 0x64",
            "pop {r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "fcn.00050c5c": {
        "function_address": "0x00050c5c",
        "instructions": [
            "ldr r3, [0x00050d00]",
            "mov r2, r0",
            "push {r4, lr}",
            "mov r4, r1",
            "ldr r1, [0x00050d04]",
            "add r3, pc, r3",
            "ldr r0, [r3, r1]",
            "mov r1, r2",
            "bl fcn.0006ffc8",
            "cmp r0, 0",
            "popeq {r4, pc}",
            "cmp r4, 8",
            "movne r3, 0",
            "moveq r3, 1",
            "ldr r2, [0x00050d08]",
            "cmp r0, 0x10000",
            "movne r1, 0",
            "andeq r1, r3, 1",
            "cmp r1, 0",
            "movne r0, r2",
            "add r2, r2, 7",
            "cmp r0, 0x10000",
            "cmpeq r4, 0x18",
            "moveq r0, r2",
            "sub r2, r2, 4",
            "cmp r0, 0x10000",
            "cmpeq r4, 0x20",
            "moveq r0, r2",
            "add r2, r2, 0xd",
            "cmp r0, r2",
            "cmpeq r4, 0x40",
            "add r2, r2, 2",
            "moveq r0, r2",
            "ldr r2, [0x00050d0c]",
            "cmp r0, r2",
            "movne r3, 0",
            "andeq r3, r3, 1",
            "sub r2, r2, 0xff0",
            "cmp r3, 0",
            "movne r0, r2",
            "pop {r4, pc}"
        ]
    },
    "fcn.00050e58": {
        "function_address": "0x00050e58",
        "instructions": [
            "push {r4, lr}",
            "mov r2, 0x10",
            "mov r4, r1",
            "bl sym.avio_read",
            "cmp r0, 0xf",
            "popgt {r4, pc}",
            "mov r0, r4",
            "mov r1, 0",
            "mov r2, 0x10",
            "pop {r4, lr}",
            "b sym.imp.memset"
        ]
    },
    "fcn.00050e84": {
        "function_address": "0x00050e84",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r6, r1",
            "mov r4, r0",
            "b 0x50eb0",
            "add r0, r4, 4",
            "mov r1, r6",
            "mov r2, 0x10",
            "add r4, r4, 0x14",
            "bl sym.imp.memcmp",
            "cmp r0, 0",
            "beq 0x50ebc",
            "ldr r5, [r4]",
            "cmp r5, 0",
            "bne 0x50e94",
            "mov r0, r5",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.0000ccd0": {
        "function_address": "0x0000ccd0",
        "instructions": [
            "mov r3, 1",
            "push {r0, r1, r2, lr}",
            "mov r2, 0",
            "str r3, [sp]",
            "mov r3, 0",
            "bl sym.avio_seek",
            "add sp, sp, 0xc",
            "ldm sp!, {pc}"
        ]
    },
    "fcn.0000cd9c": {
        "function_address": "0x0000cd9c",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r4, r0",
            "mov r5, r1",
            "bl sym.url_feof",
            "cmp r0, 0",
            "bne 0xcdd4",
            "mov r0, r4",
            "bl sym.avio_rl32",
            "str r0, [r5]",
            "mov r0, r4",
            "bl sym.avio_rb32",
            "cmp r0, 0",
            "mvnlt r0, 0x80000000",
            "pop {r3, r4, r5, pc}",
            "mvn r0, 4",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.0000cddc": {
        "function_address": "0x0000cddc",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r4, r0",
            "add r0, r2, 1",
            "mov r7, r1",
            "mov r5, r2",
            "bl sym.imp.av_malloc",
            "subs r6, r0, 0",
            "beq 0xce50",
            "ldr r0, [r4, 0x10]",
            "mov r1, r6",
            "mov r2, r5",
            "bl sym.avio_read",
            "cmp r0, 0",
            "bge 0xce20",
            "mov r0, r6",
            "pop {r4, r5, r6, r7, r8, lr}",
            "b sym.imp.av_free",
            "and r3, r5, 1",
            "mov r1, r7",
            "add r5, r3, r5",
            "mov r3, 0",
            "strb r3, [r6, r0]",
            "rsb r5, r0, r5",
            "add r0, r4, 0x4b0",
            "mov r2, r6",
            "add r3, r3, 8",
            "add r0, r0, 8",
            "bl sym.imp.av_dict_set",
            "b 0xce58",
            "and r3, r5, 1",
            "add r5, r3, r5",
            "ldr r0, [r4, 0x10]",
            "mov r2, r5",
            "asr r3, r2, 0x1f",
            "pop {r4, r5, r6, r7, r8, lr}",
            "b sym.avio_skip"
        ]
    },
    "fcn.0002d2cc": {
        "function_address": "0x0002d2cc",
        "instructions": [
            "push {r0, r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r2",
            "ldr r7, [r0, 0x10]",
            "mov r8, r0",
            "mvn sl, 3",
            "mov r5, r3",
            "ldr r6, [0x0002d3c0]",
            "mvn fp, 0",
            "mov r0, r7",
            "ldr sb, [sp, 0x28]",
            "bl sym.avio_rb32",
            "adds r4, r4, sl",
            "add r6, pc, r6",
            "adc r5, r5, fp",
            "cmp r0, 0",
            "bne 0x2d320",
            "ldr r1, [0x0002d3c4]",
            "mov r0, r8",
            "add r1, r6, r1",
            "bl sym.imp.av_log_ask_for_sample",
            "b 0x2d3a8",
            "cmp r0, 0x10000",
            "ldrne r3, [0x0002d3c8]",
            "addne r3, r6, r3",
            "addne r3, r3, 0x270",
            "bne 0x2d370",
            "mov r0, r7",
            "bl sym.avio_rb32",
            "mov r3, 0",
            "adds r2, r4, sl",
            "str r0, [sb, 0x338]",
            "mov r0, r7",
            "str r3, [sb, 0x33c]",
            "adc r3, r5, fp",
            "b 0x2d3b4",
            "ldr ip, [ip, -8]",
            "add r3, r3, 0x10",
            "cmp r0, ip",
            "streq r1, [sb, 0x338]",
            "streq r2, [sb, 0x33c]",
            "beq 0x2d384",
            "ldr r1, [r3, -0x10]",
            "mov ip, r3",
            "ldr r2, [r3, -0xc]",
            "orrs sl, r1, r2",
            "bne 0x2d358",
            "ldr r2, [sb, 0x338]",
            "ldr r3, [sb, 0x33c]",
            "orrs r3, r2, r3",
            "bne 0x2d3a8",
            "ldr r2, [0x0002d3cc]",
            "mov r0, r8",
            "mov r1, 0x18",
            "add r2, r6, r2",
            "bl sym.imp.av_log",
            "mov r0, r7",
            "mov r2, r4",
            "mov r3, r5",
            "add sp, sp, 4",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "b sym.avio_skip"
        ]
    },
    "sym.imp.av_log_ask_for_sample": {
        "function_address": "0x00009aa4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0xa70]!"
        ]
    },
    "fcn.0000f2f8": {
        "function_address": "0x0000f2f8",
        "instructions": [
            "push {r0, r1, r2, r3, r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r6, r0",
            "ldr r4, [r0, 0x10]",
            "ldr r5, [0x0000f444]",
            "mov r0, r4",
            "bl sym.avio_size",
            "cmp r0, 0x1f",
            "add r5, pc, r5",
            "mov sl, r0",
            "ble 0xf440",
            "sub r2, r0, 0x20",
            "mov r3, 0",
            "str r3, [sp]",
            "add r7, sp, 8",
            "asr r3, r2, 0x1f",
            "mov r0, r4",
            "bl sym.avio_seek",
            "mov r1, r7",
            "mov r2, 8",
            "mov r0, r4",
            "bl sym.avio_read",
            "ldr r1, [0x0000f448]",
            "mov r0, r7",
            "mov r2, 8",
            "add r1, r5, r1",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "bne 0xf440",
            "mov r0, r4",
            "bl sym.avio_rl32",
            "cmp r0, 0x7d0",
            "bls 0xf390",
            "ldr r2, [0x0000f44c]",
            "mov r0, r6",
            "mov r1, 0x10",
            "mov r3, 0x7d0",
            "add r2, r5, r2",
            "b 0xf3dc",
            "mov r0, r4",
            "bl sym.avio_rl32",
            "sub r3, r0, 0x20",
            "mov sb, r0",
            "cmp r3, 0x1000000",
            "movhi r0, r6",
            "movhi r1, 0x10",
            "ldrhi r2, [0x0000f450]",
            "bhi 0xf400",
            "mov r0, r4",
            "bl sym.avio_rl32",
            "cmp r0, 0x10000",
            "mov r8, r0",
            "bls 0xf3e4",
            "ldr r2, [0x0000f454]",
            "mov r0, r6",
            "mov r1, 0x10",
            "mov r3, r8",
            "add r2, r5, r2",
            "bl sym.imp.av_log",
            "b 0xf440",
            "mov r0, r4",
            "bl sym.avio_rl32",
            "ands r7, r0, 0x20000000",
            "beq 0xf40c",
            "ldr r2, [0x0000f458]",
            "mov r0, r6",
            "mov r1, 0x10",
            "add r2, r5, r2",
            "bl sym.imp.av_log",
            "b 0xf440",
            "mov r0, r4",
            "rsb r2, sb, sl",
            "mov r3, r7",
            "str r7, [sp]",
            "bl sym.avio_seek",
            "b 0xf438",
            "mov r0, r6",
            "bl fcn.0000f1f8",
            "cmp r0, 0",
            "blt 0xf440",
            "add r7, r7, 1",
            "cmp r7, r8",
            "blo 0xf424",
            "pop {r0, r1, r2, r3, r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "sym.imp.strncmp": {
        "function_address": "0x000099d8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0xaf8]!"
        ]
    },
    "fcn.0000f1f8": {
        "function_address": "0x0000f1f8",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r8, r0",
            "ldr r6, [r0, 0x10]",
            "sub sp, sp, 0x400",
            "mov sl, 0",
            "movw sb, 0x3ff",
            "ldr r7, [0x0000f2f0]",
            "mov r0, r6",
            "bl sym.avio_rl32",
            "mov r2, 4",
            "mov r4, r0",
            "mov r3, 0",
            "mov r0, r6",
            "add r7, pc, r7",
            "bl sym.avio_skip",
            "mov r0, r6",
            "bl sym.avio_r8",
            "sub r3, r0, 0x20",
            "mov r5, r0",
            "cmp r3, 0x5e",
            "bhi 0xf260",
            "mov r3, sp",
            "strb r0, [r3, sl]",
            "add sl, sl, 1",
            "cmp sl, sb",
            "bne 0xf234",
            "add r3, sp, 0x400",
            "add sl, r3, sl",
            "mov r3, 0",
            "cmp r5, r3",
            "strb r3, [sl, -0x400]",
            "beq 0xf298",
            "ldr r2, [0x0000f2f4]",
            "mov r0, r8",
            "mov r1, 0x18",
            "mov r3, sp",
            "add r2, r7, r2",
            "bl sym.imp.av_log",
            "mvn r0, 0",
            "b 0xf2e8",
            "cmn r4, 1",
            "moveq r0, r4",
            "beq 0xf2e8",
            "add r0, r4, 1",
            "bl sym.imp.av_malloc",
            "subs r7, r0, 0",
            "mvneq r0, 0xb",
            "beq 0xf2e8",
            "mov r1, r7",
            "mov r2, r4",
            "mov r0, r6",
            "bl sym.avio_read",
            "add r0, r8, 0x4b0",
            "strb r5, [r7, r4]",
            "add r0, r0, 8",
            "mov r1, sp",
            "mov r2, r7",
            "mov r3, 8",
            "bl sym.imp.av_dict_set",
            "mov r0, r5",
            "add sp, sp, 0x400",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "fcn.0007df50": {
        "function_address": "0x0007df50",
        "instructions": [
            "push {r1, lr}",
            "mov r0, 8",
            "bl sym.imp.raise",
            "pop {r1, pc}"
        ]
    },
    "sym.imp.raise": {
        "function_address": "0x0000a008",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x6d8]!"
        ]
    },
    "fcn.0000f6f8": {
        "function_address": "0x0000f6f8",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r4, r0",
            "mov r5, 0",
            "movw r7, 0x10d8",
            "movw r6, 0x10dc",
            "b 0xf720",
            "ldr r3, [r4, r6]",
            "ldr r0, [r3, r5, lsl 2]",
            "add r5, r5, 1",
            "bl sym.imp.av_free",
            "ldr r3, [r4, r7]",
            "cmp r5, r3",
            "blt 0xf710",
            "add r0, r4, 0x10c0",
            "add r0, r0, 0x1c",
            "bl sym.imp.av_freep",
            "mov r2, 0",
            "movw r3, 0x10d8",
            "str r2, [r4, r3]",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.0000f748": {
        "function_address": "0x0000f748",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r5, 0",
            "mov r6, r0",
            "movw sb, 0x1008",
            "movw sl, 0x106c",
            "movw r8, 0x1078",
            "mov r7, r5",
            "b 0xf7c0",
            "ldr r3, [r6, 4]",
            "ldr r4, [r3, r5, lsl 2]",
            "mov r0, r4",
            "bl fcn.0000f6f8",
            "add r0, r4, 0x1080",
            "bl sym.imp.av_free_packet",
            "ldr r0, [r4, sb]",
            "bl sym.imp.av_free",
            "ldr r0, [r4, sl]",
            "cmp r0, 0",
            "beq 0xf798",
            "bl sym.ffurl_close",
            "ldr r3, [r4, r8]",
            "cmp r3, 0",
            "beq 0xf7b4",
            "add r0, r4, 0x1040",
            "str r7, [r3, 0x10]",
            "add r0, r0, 0x38",
            "bl sym.avformat_close_input",
            "add r5, r5, 1",
            "mov r0, r4",
            "bl sym.imp.av_free",
            "ldr r3, [r6]",
            "cmp r5, r3",
            "blt 0xf768",
            "add r0, r6, 4",
            "bl sym.imp.av_freep",
            "mov r3, 0",
            "str r3, [r6]",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "fcn.0000f7f4": {
        "function_address": "0x0000f7f4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r2, 0",
            "ldr r5, [r0, 0xc]",
            "mov r6, r0",
            "mov sb, r1",
            "sub sp, sp, 0x14",
            "ldr r3, [0x0000f974]",
            "movw r0, 0x10e4",
            "ldr ip, [r5]",
            "mov r1, r2",
            "add r3, pc, r3",
            "b 0xf834",
            "ldr r4, [r5, 4]",
            "ldr r4, [r4, r2, lsl 2]",
            "add r2, r2, 1",
            "str r1, [r4, r0]",
            "cmp r2, ip",
            "blt 0xf824",
            "ldr r4, [r6, 0x14]",
            "mov r2, 0",
            "movw ip, 0x10e4",
            "mov r0, 1",
            "b 0xf874",
            "ldr r1, [r6, 0x18]",
            "ldr r7, [r5, 4]",
            "ldr r1, [r1, r2, lsl 2]",
            "add r2, r2, 1",
            "ldr r8, [r1, 4]",
            "ldr r1, [r1, 0x48]",
            "ldr r7, [r7, r8, lsl 2]",
            "cmp r1, 0x2f",
            "strle r0, [r7, ip]",
            "cmp r2, r4",
            "bne 0xf850",
            "ldr r2, [0x0000f978]",
            "mov r0, 0",
            "mov r4, r0",
            "movw fp, 0x10e4",
            "movw r7, 0x10e0",
            "movw sl, 0x106c",
            "add r2, r3, r2",
            "str r2, [sp, 8]",
            "ldr r2, [0x0000f97c]",
            "add r2, r3, r2",
            "str r2, [sp, 0xc]",
            "b 0xf960",
            "ldr r3, [r5, 4]",
            "ldr r3, [r3, r4, lsl 2]",
            "ldr r2, [r3, fp]",
            "cmp r2, 0",
            "beq 0xf904",
            "ldr r1, [r3, r7]",
            "cmp r1, 0",
            "bne 0xf904",
            "ldr r2, [r5, 8]",
            "movw r0, 0x10e8",
            "mov r8, 1",
            "str r8, [r3, r7]",
            "str r2, [r3, r0]",
            "movw r2, 0x1034",
            "str r1, [r3, r2]",
            "mov r0, r6",
            "add r1, r1, 0x20",
            "ldr r2, [sp, 0xc]",
            "mov r3, r4",
            "bl sym.imp.av_log",
            "mov r0, r8",
            "b 0xf95c",
            "cmp sb, 0",
            "beq 0xf95c",
            "cmp r2, 0",
            "bne 0xf95c",
            "ldr r2, [r3, r7]",
            "cmp r2, 0",
            "beq 0xf95c",
            "ldr r0, [r3, sl]",
            "cmp r0, 0",
            "beq 0xf938",
            "str r3, [sp, 4]",
            "bl sym.ffurl_close",
            "ldr r3, [sp, 4]",
            "mov r2, 0",
            "mov r0, r6",
            "str r2, [r3, sl]",
            "mov r1, 0x20",
            "str r2, [r3, r7]",
            "mov r3, r4",
            "ldr r2, [sp, 8]",
            "bl sym.imp.av_log",
            "mov r0, 1",
            "add r4, r4, 1",
            "ldr r3, [r5]",
            "cmp r4, r3",
            "blt 0xf8ac",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00074a20": {
        "function_address": "0x00074a20",
        "instructions": [
            "push {r0, r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "subs r8, r2, 0",
            "ldr r5, [0x00074bc4]",
            "mov r4, r0",
            "mov r6, r1",
            "mov r7, r3",
            "add r5, pc, r5",
            "beq 0x74ad4",
            "ldr r1, [0x00074bc8]",
            "mov r0, r8",
            "add r1, r5, r1",
            "bl sym.imp.strstr",
            "cmp r0, 0",
            "beq 0x74ab0",
            "ldrb r3, [r7]",
            "cmp r3, 0x2f",
            "bne 0x74ab0",
            "cmp r8, r4",
            "beq 0x74a7c",
            "mov r0, r4",
            "mov r1, r8",
            "mov r2, r6",
            "bl sym.imp.av_strlcpy",
            "ldr r1, [0x00074bc8]",
            "mov r0, r4",
            "add r1, r5, r1",
            "bl sym.imp.strstr",
            "cmp r0, 0",
            "beq 0x74bac",
            "add r0, r0, 3",
            "mov r1, 0x2f",
            "bl sym.imp.strchr",
            "cmp r0, 0",
            "movne r3, 0",
            "strbne r3, [r0]",
            "b 0x74bac",
            "ldr r1, [0x00074bc8]",
            "mov r0, r7",
            "add r1, r5, r1",
            "bl sym.imp.strstr",
            "cmp r0, 0",
            "bne 0x74ad4",
            "ldrb r3, [r7]",
            "cmp r3, 0x2f",
            "bne 0x74aec",
            "mov r0, r4",
            "mov r1, r7",
            "mov r2, r6",
            "add sp, sp, 4",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "b sym.imp.av_strlcpy",
            "cmp r8, r4",
            "beq 0x74b04",
            "mov r0, r4",
            "mov r1, r8",
            "mov r2, r6",
            "bl sym.imp.av_strlcpy",
            "mov r0, r4",
            "mov r1, 0x2f",
            "ldr sb, [0x00074bcc]",
            "mov sl, 0",
            "ldr fp, [0x00074bd0]",
            "bl sym.imp.strrchr",
            "subs r8, r0, 0",
            "add sb, r5, sb",
            "movne r3, 0",
            "strbeq r8, [r4]",
            "strbne r3, [r8, 1]",
            "add fp, r5, fp",
            "b 0x74b8c",
            "strb sl, [r8]",
            "mov r1, 0x2f",
            "mov r0, r4",
            "bl sym.imp.strrchr",
            "subs r8, r0, 0",
            "mov r1, fp",
            "addne r0, r8, 1",
            "moveq r0, r4",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x74b7c",
            "ldr r1, [0x00074bd4]",
            "mov r0, r4",
            "mov r2, r6",
            "add r1, r5, r1",
            "bl sym.imp.av_strlcat",
            "b 0x74bac",
            "add r7, r7, 3",
            "cmp r8, 0",
            "strbne sl, [r8, 1]",
            "strbeq r8, [r4]",
            "mov r0, r7",
            "mov r1, sb",
            "mov r2, 0",
            "bl sym.imp.av_strstart",
            "cmp r0, 0",
            "beq 0x74bac",
            "cmp r8, 0",
            "bne 0x74b38",
            "mov r0, r4",
            "mov r1, r7",
            "mov r2, r6",
            "add sp, sp, 4",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "b sym.imp.av_strlcat"
        ]
    },
    "sym.imp.av_strlcat": {
        "function_address": "0x0000a134",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x610]!"
        ]
    },
    "sym.imp.av_strstart": {
        "function_address": "0x00009edc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x7a0]!"
        ]
    },
    "fcn.00018f4c": {
        "function_address": "0x00018f4c",
        "instructions": [
            "push {r0, r1, r4, lr}",
            "mov ip, r0",
            "ldr r4, [r0, 8]",
            "mov r3, r2",
            "tst r4, 1",
            "mvneq r0, 4",
            "beq 0x18f78",
            "ldr ip, [ip, 4]",
            "ldr ip, [ip, 8]",
            "str ip, [sp]",
            "bl fcn.00018e34",
            "pop {r2, r3, r4, pc}"
        ]
    },
    "sym.imp.strcpy": {
        "function_address": "0x0000a164",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x5f0]!"
        ]
    },
    "fcn.00019df0": {
        "function_address": "0x00019df0",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r4, r0",
            "mov r6, r1",
            "mov r5, 0",
            "sub r7, r2, 1",
            "mov r0, r4",
            "bl sym.avio_r8",
            "uxtb r0, r0",
            "cmp r0, 0",
            "beq 0x19e24",
            "cmp r5, r7",
            "strblt r0, [r6, r5]",
            "addlt r5, r5, 1",
            "cmp r0, 0",
            "cmpne r0, 0xa",
            "moveq r0, 0",
            "movne r0, 1",
            "bne 0x19e04",
            "strb r0, [r6, r5]",
            "mov r0, r5",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.00010068": {
        "function_address": "0x00010068",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r2, 0x400",
            "mov r4, r1",
            "mov r6, 0",
            "bl fcn.00019df0",
            "mov r5, r0",
            "add r4, r4, r0",
            "b 0x10090",
            "sub r5, r5, 1",
            "strb r6, [r4, -1]!",
            "cmp r5, 0",
            "ble 0x100b4",
            "bl sym.imp.__ctype_b_loc",
            "ldrb r3, [r4, -1]",
            "ldr r2, [r0]",
            "lsl r3, r3, 1",
            "ldrh r3, [r2, r3]",
            "tst r3, 0x20",
            "bne 0x10088",
            "mov r0, r5",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.00074868": {
        "function_address": "0x00074868",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x1c",
            "mov r8, r1",
            "mov sl, r2",
            "mov r4, 0",
            "add sb, sp, 0x14",
            "add r3, sp, 0x10",
            "str r3, [sp, 0xc]",
            "mov r5, r0",
            "str r4, [sp, 0x14]",
            "str r4, [sp, 0x10]",
            "mov fp, r5",
            "ldrb r7, [r5], 1",
            "cmp r7, 0",
            "beq 0x749e0",
            "bl sym.imp.__ctype_b_loc",
            "ldr r2, [r0]",
            "lsl r3, r7, 1",
            "mov r6, r0",
            "ldrh r3, [r2, r3]",
            "tst r3, 0x20",
            "bne 0x74894",
            "cmp r7, 0x2c",
            "beq 0x74894",
            "mov r0, fp",
            "mov r1, 0x3d",
            "bl sym.imp.strchr",
            "subs r7, r0, 0",
            "beq 0x749e0",
            "ldr r3, [sp, 0xc]",
            "add r5, r7, 1",
            "mov r0, sl",
            "rsb r2, fp, r5",
            "mov r1, fp",
            "str r3, [sp]",
            "mov r3, sb",
            "blx r8",
            "ldr r2, [sp, 0x10]",
            "ldr r3, [sp, 0x14]",
            "sub r2, r2, 1",
            "add r2, r3, r2",
            "ldrb r3, [r7, 1]",
            "cmp r3, 0x22",
            "addeq r0, r5, 1",
            "bne 0x749a4",
            "b 0x74970",
            "cmp r3, 0x5c",
            "bne 0x74954",
            "ldrb r1, [r0, 1]",
            "cmp r1, 0",
            "beq 0x749d0",
            "ldr r3, [sp, 0x14]",
            "cmp r3, 0",
            "beq 0x7494c",
            "cmp r3, r2",
            "strblo r1, [r3], 1",
            "strlo r3, [sp, 0x14]",
            "add r0, r0, 2",
            "b 0x74970",
            "ldr r1, [sp, 0x14]",
            "cmp r1, 0",
            "beq 0x7496c",
            "cmp r1, r2",
            "strblo r3, [r1], 1",
            "strlo r1, [sp, 0x14]",
            "add r0, r0, 1",
            "ldrb r3, [r0]",
            "cmp r3, 0x22",
            "cmpne r3, 0",
            "bne 0x74920",
            "cmp r3, 0x22",
            "addeq r0, r0, 1",
            "b 0x749d0",
            "ldr r1, [sp, 0x14]",
            "cmp r1, 0",
            "beq 0x749a4",
            "cmp r1, r2",
            "strblo r3, [r1], 1",
            "strlo r1, [sp, 0x14]",
            "mov r0, r5",
            "ldrb r3, [r5], 1",
            "cmp r3, 0",
            "beq 0x749d0",
            "ldr ip, [r6]",
            "lsl r1, r3, 1",
            "ldrh r1, [ip, r1]",
            "tst r1, 0x20",
            "bne 0x749d0",
            "cmp r3, 0x2c",
            "bne 0x7498c",
            "ldr r3, [sp, 0x14]",
            "cmp r3, 0",
            "strbne r4, [r3]",
            "b 0x74888",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00074310": {
        "function_address": "0x00074310",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sl, lr}",
            "mov r7, r0",
            "ldr r3, [0x000743ac]",
            "mov r6, r1",
            "mov r4, 1",
            "mov r5, 0",
            "ldr r8, [0x000743b0]",
            "add r3, pc, r3",
            "add r8, r3, r8",
            "b 0x7433c",
            "add r6, sl, 1",
            "mov r0, r6",
            "mov r1, r8",
            "bl sym.imp.strspn",
            "add sl, r6, r0",
            "ldrb r6, [r6, r0]",
            "cmp r6, 0",
            "beq 0x743a4",
            "bl sym.imp.__ctype_toupper_loc",
            "ldr r3, [r0]",
            "lsl r6, r6, 1",
            "ldrsh r3, [r3, r6]",
            "sub r2, r3, 0x30",
            "cmp r2, 9",
            "bls 0x74384",
            "sub r2, r3, 0x41",
            "cmp r2, 5",
            "bhi 0x743a4",
            "sub r2, r3, 0x37",
            "orr r4, r2, r4, lsl 4",
            "tst r4, 0x100",
            "beq 0x74338",
            "cmp r7, 0",
            "strbne r4, [r7, r5]",
            "add r5, r5, 1",
            "mov r4, 1",
            "b 0x74338",
            "mov r0, r5",
            "pop {r3, r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "sym.imp.__ctype_toupper_loc": {
        "function_address": "0x000099e4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0xaf0]!"
        ]
    },
    "fcn.0000fcd8": {
        "function_address": "0x0000fcd8",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r5, r0",
            "movw r0, 0x2108",
            "mov r7, r1",
            "mov r6, r2",
            "mov r8, r3",
            "bl sym.imp.av_mallocz",
            "subs r4, r0, 0",
            "beq 0xfd38",
            "add r0, r4, 0x1080",
            "bl sym.imp.av_init_packet",
            "mov r0, r4",
            "mov r2, 0",
            "movw r3, 0x1090",
            "str r7, [r0], 4",
            "str r2, [r4, r3]",
            "mov r1, 0x1000",
            "mov r2, r8",
            "mov r3, r6",
            "bl fcn.00074a20",
            "add r0, r5, 4",
            "mov r1, r5",
            "mov r2, r4",
            "bl sym.imp.av_dynarray_add",
            "mov r0, r4",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.000100bc": {
        "function_address": "0x000100bc",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x2480",
            "sub sp, sp, 0x24",
            "mov r7, r3",
            "mov r4, r2",
            "add r2, sp, 0x2480",
            "ldr r3, [0x0001064c]",
            "add r2, r2, 0x20",
            "mov r6, 0",
            "str r0, [sp, 0x10]",
            "add r0, sp, 0x2480",
            "mov sb, r1",
            "str r7, [r2, r3]",
            "add r3, sp, 0x2000",
            "str r6, [r3, 0x48c]",
            "mov r1, r6",
            "mov r2, 0xc",
            "add r0, r0, 0x10",
            "bl sym.imp.memset",
            "ldr r3, [0x00010650]",
            "add ip, sp, 0x2480",
            "add ip, ip, 0x20",
            "add r0, sp, 0x1040",
            "ldr r5, [0x00010654]",
            "add r0, r0, 0x3c",
            "str r6, [ip, r3]",
            "mov r1, r6",
            "movw r2, 0xffc",
            "bl sym.imp.memset",
            "cmp r7, 0",
            "add r5, pc, r5",
            "strne r6, [sp, 0x1c]",
            "movne r7, r6",
            "bne 0x10170",
            "ldr ip, [sp, 0x10]",
            "mov r2, 1",
            "str r7, [sp]",
            "add r0, sp, 0x44",
            "mov r1, sb",
            "ldr r3, [ip, 0x2c]",
            "bl sym.avio_open2",
            "subs r7, r0, 0",
            "movge r2, 1",
            "strge r2, [sp, 0x1c]",
            "blt 0x1063c",
            "ldr r3, [0x0001064c]",
            "add r6, sp, 0x2040",
            "add ip, sp, 0x2480",
            "add r6, r6, 0x38",
            "add ip, ip, 0x20",
            "mov r1, r6",
            "ldr r0, [ip, r3]",
            "bl fcn.00010068",
            "ldr r1, [0x00010658]",
            "mov r0, r6",
            "add r1, r5, r1",
            "bl sym.imp.strcmp",
            "subs r6, r0, 0",
            "ldrne r7, [0x0001065c]",
            "bne 0x1061c",
            "cmp r4, 0",
            "beq 0x101c4",
            "mov r0, r4",
            "bl fcn.0000f6f8",
            "movw r3, 0x10cc",
            "str r6, [r4, r3]",
            "ldr r3, [0x00010660]",
            "add r2, sp, 0x48",
            "mov r6, 0",
            "str r2, [sp, 0x20]",
            "str r6, [sp, 0x28]",
            "mov fp, r6",
            "add r3, r5, r3",
            "str r6, [sp, 0x18]",
            "str r3, [sp, 0x38]",
            "add r3, r2, 0x1000",
            "add ip, r3, 0xa",
            "str r3, [sp, 0x2c]",
            "add r3, r3, 0xc",
            "str r6, [sp, 0x14]",
            "str r6, [sp, 0x24]",
            "mov r8, r6",
            "str ip, [sp, 0x30]",
            "str r2, [sp, 0x34]",
            "str r3, [sp, 0x3c]",
            "str r7, [sp, 0x40]",
            "b 0x105e0",
            "add ip, sp, 0x2480",
            "add r6, sp, 0x2040",
            "add ip, ip, 0x20",
            "add r6, r6, 0x38",
            "ldr r0, [ip, r7]",
            "add r7, sp, 0x2480",
            "mov r1, r6",
            "add r7, r7, 0x1c",
            "str r3, [sp, 0xc]",
            "bl fcn.00010068",
            "mov r0, r6",
            "ldr r1, [sp, 0x38]",
            "mov r2, r7",
            "bl sym.imp.av_strstart",
            "subs sl, r0, 0",
            "ldr r3, [sp, 0xc]",
            "beq 0x102a0",
            "add r6, sp, 0x2440",
            "mov r1, r3",
            "add r6, r6, 0x38",
            "mov r2, 0x14",
            "mov r0, r6",
            "mov fp, 1",
            "bl sym.imp.memset",
            "ldr r1, [0x00010664]",
            "add r2, sp, 0x2000",
            "ldr r0, [r2, 0x49c]",
            "mov r2, r6",
            "add r1, r5, r1",
            "bl fcn.00074868",
            "mov r0, r6",
            "bl sym.imp.atoi",
            "str r0, [sp, 0x18]",
            "b 0x105e0",
            "ldr r1, [0x00010668]",
            "mov r0, r6",
            "mov r2, r7",
            "add r1, r5, r1",
            "bl sym.imp.av_strstart",
            "cmp r0, 0",
            "beq 0x10368",
            "mov r1, sl",
            "movw r2, 0x102d",
            "ldr r0, [sp, 0x20]",
            "bl sym.imp.memset",
            "ldr r1, [0x0001066c]",
            "add r3, sp, 0x2000",
            "ldr r0, [r3, 0x49c]",
            "ldr r2, [sp, 0x20]",
            "add r1, r5, r1",
            "bl fcn.00074868",
            "ldr r1, [0x00010670]",
            "ldr r0, [sp, 0x2c]",
            "add r1, r5, r1",
            "bl sym.imp.strcmp",
            "ldr r1, [0x00010674]",
            "rsbs r0, r0, 1",
            "movlo r0, 0",
            "str r0, [sp, 0x28]",
            "mov r2, 2",
            "ldr r0, [sp, 0x30]",
            "add r1, r5, r1",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "beq 0x1033c",
            "ldr r1, [0x00010678]",
            "mov r2, 2",
            "ldr r0, [sp, 0x30]",
            "add r1, r5, r1",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "movne r8, sl",
            "bne 0x10350",
            "add r0, sp, 0x2480",
            "mov r8, 1",
            "add r0, r0, 0xc",
            "ldr r1, [sp, 0x3c]",
            "bl fcn.00074310",
            "add r0, sp, 0x1040",
            "ldr r1, [sp, 0x34]",
            "mov r2, 0x1000",
            "add r0, r0, 0x38",
            "bl sym.imp.av_strlcpy",
            "b 0x105e0",
            "ldr r1, [0x0001067c]",
            "mov r0, r6",
            "mov r2, r7",
            "add r1, r5, r1",
            "bl sym.imp.av_strstart",
            "cmp r0, 0",
            "beq 0x103bc",
            "cmp r4, 0",
            "bne 0x103a8",
            "mov r1, r4",
            "mov r3, r4",
            "ldr r0, [sp, 0x10]",
            "mov r2, sb",
            "bl fcn.0000fcd8",
            "subs r4, r0, 0",
            "beq 0x10618",
            "add ip, sp, 0x2000",
            "ldr r0, [ip, 0x49c]",
            "bl sym.imp.atoi",
            "movw r3, 0x10d0",
            "b 0x1040c",
            "ldr r1, [0x00010680]",
            "mov r0, r6",
            "mov r2, r7",
            "add r1, r5, r1",
            "bl sym.imp.av_strstart",
            "cmp r0, 0",
            "beq 0x10414",
            "cmp r4, 0",
            "bne 0x103fc",
            "mov r1, r4",
            "mov r3, r4",
            "ldr r0, [sp, 0x10]",
            "mov r2, sb",
            "bl fcn.0000fcd8",
            "subs r4, r0, 0",
            "beq 0x10618",
            "add r2, sp, 0x2000",
            "ldr r0, [r2, 0x49c]",
            "bl sym.imp.atoi",
            "movw r3, 0x10d4",
            "str r0, [r4, r3]",
            "b 0x105e0",
            "ldr r1, [0x00010684]",
            "mov r0, r6",
            "mov r2, r7",
            "add r1, r5, r1",
            "bl sym.imp.av_strstart",
            "cmp r0, 0",
            "beq 0x10444",
            "cmp r4, 0",
            "movne r2, 1",
            "movwne r3, 0x10cc",
            "strne r2, [r4, r3]",
            "b 0x105e0",
            "ldr r1, [0x00010688]",
            "mov r2, r7",
            "mov r0, r6",
            "add r1, r5, r1",
            "bl sym.imp.av_strstart",
            "subs r2, r0, 0",
            "beq 0x1047c",
            "add r3, sp, 0x2000",
            "ldr r0, [r3, 0x49c]",
            "bl sym.imp.atoi",
            "mov ip, 1",
            "str r0, [sp, 0x24]",
            "str ip, [sp, 0x14]",
            "b 0x105e0",
            "ldr r1, [0x0001068c]",
            "mov r0, r6",
            "add r1, r5, r1",
            "bl sym.imp.av_strstart",
            "cmp r0, 0",
            "bne 0x105e0",
            "add r2, sp, 0x2000",
            "ldrb r3, [r2, 0x78]",
            "cmp r3, 0",
            "beq 0x105e0",
            "cmp fp, 0",
            "beq 0x104d4",
            "add r2, sp, 0x2040",
            "ldr r0, [sp, 0x10]",
            "ldr r1, [sp, 0x18]",
            "add r2, r2, 0x38",
            "mov r3, sb",
            "bl fcn.0000fcd8",
            "cmp r0, 0",
            "beq 0x10618",
            "mov r3, 0",
            "str r3, [sp, 0x18]",
            "ldr ip, [sp, 0x14]",
            "cmp ip, 0",
            "ldreq fp, [sp, 0x14]",
            "beq 0x105e0",
            "cmp r4, 0",
            "bne 0x10508",
            "mov r1, r4",
            "mov r3, r4",
            "ldr r0, [sp, 0x10]",
            "mov r2, sb",
            "bl fcn.0000fcd8",
            "subs r4, r0, 0",
            "beq 0x10618",
            "movw r0, 0x2018",
            "bl sym.imp.av_malloc",
            "subs r6, r0, 0",
            "beq 0x10618",
            "ldr r2, [sp, 0x24]",
            "cmp r8, 0",
            "ldr ip, [sp, 0x28]",
            "movw r3, 0x2004",
            "add r7, r6, 0x2000",
            "str r2, [r6]",
            "add r7, r7, 8",
            "str ip, [r6, r3]",
            "addne r3, sp, 0x2480",
            "addne r3, r3, 0xc",
            "ldmne r3, {r0, r1, r2, r3}",
            "stmne r7, {r0, r1, r2, r3}",
            "bne 0x10590",
            "movw r3, 0x10d8",
            "mov r2, 0x10",
            "ldr sl, [r4, r3]",
            "sub r3, r3, 4",
            "ldr r3, [r4, r3]",
            "mov r0, r7",
            "mov r1, r8",
            "add sl, sl, r3",
            "bl sym.imp.memset",
            "lsr r3, sl, 8",
            "ubfx r2, sl, 8, 8",
            "and r3, r3, 0xff00",
            "orr r3, r3, sl, lsr 24",
            "lsl sl, sl, 0x18",
            "orr sl, r2, sl, lsr 16",
            "orr sl, r3, sl, lsl 16",
            "str sl, [r7, 0xc]",
            "add r0, r6, 0x1000",
            "add r3, sp, 0x1040",
            "add r0, r0, 4",
            "mov r1, 0x1000",
            "mov r2, sb",
            "add r3, r3, 0x38",
            "bl fcn.00074a20",
            "add r3, sp, 0x2040",
            "add r0, r6, 4",
            "mov r1, 0x1000",
            "mov r2, sb",
            "add r3, r3, 0x38",
            "mov fp, 0",
            "bl fcn.00074a20",
            "add r1, r4, 0x10c0",
            "mov r2, r6",
            "add r0, r1, 0x1c",
            "add r1, r1, 0x18",
            "bl sym.imp.av_dynarray_add",
            "str fp, [sp, 0x14]",
            "ldr r7, [0x0001064c]",
            "add r2, sp, 0x2480",
            "add r2, r2, 0x20",
            "ldr r0, [r2, r7]",
            "bl sym.url_feof",
            "subs r3, r0, 0",
            "beq 0x10218",
            "cmp r4, 0",
            "ldr r7, [sp, 0x40]",
            "beq 0x1061c",
            "bl sym.av_gettime",
            "movw r3, 0x10f0",
            "strd r0, r1, [r4, r3]",
            "b 0x1061c",
            "mvn r7, 0xb",
            "ldr r3, [sp, 0x1c]",
            "cmp r3, 0",
            "beq 0x1063c",
            "ldr r3, [0x0001064c]",
            "add ip, sp, 0x2480",
            "add ip, ip, 0x20",
            "ldr r0, [ip, r3]",
            "bl sym.avio_close",
            "mov r0, r7",
            "add sp, sp, 0xa4",
            "add sp, sp, 0x2400",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0000fde0": {
        "function_address": "0x0000fde0",
        "instructions": [
            "movw r3, 0x10e8",
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "ldr r2, [r0, r3]",
            "sub r3, r3, 0x14",
            "sub sp, sp, 0x1040",
            "mov r4, r0",
            "ldr r3, [r0, r3]",
            "sub sp, sp, 0x18",
            "ldr r5, [0x00010048]",
            "rsb r2, r3, r2",
            "movw r3, 0x10dc",
            "ldr r3, [r0, r3]",
            "add r5, pc, r5",
            "ldr r6, [r3, r2, lsl 2]",
            "movw r3, 0x2004",
            "ldr sb, [r6, r3]",
            "cmp sb, 0",
            "bne 0xfe54",
            "movw r3, 0x1070",
            "add r0, r0, 0x1040",
            "ldr r3, [r4, r3]",
            "add r0, r0, 0x2c",
            "add r1, r6, 4",
            "mov r2, 1",
            "str sb, [sp]",
            "add r3, r3, 0x4d0",
            "bl sym.ffurl_open",
            "mov r7, r0",
            "b 0x10038",
            "cmp sb, 1",
            "mvnne r7, 0x25",
            "bne 0x10038",
            "add sl, r0, 0x10c0",
            "add r7, r6, 0x1000",
            "add r7, r7, 4",
            "add sl, sl, 0x38",
            "mov r0, r7",
            "mov r1, sl",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0xff24",
            "movw r3, 0x1070",
            "add r0, sp, 0x1040",
            "ldr r3, [r4, r3]",
            "mov r2, sb",
            "mov r8, 0",
            "add r0, r0, 0x14",
            "mov r1, r7",
            "str r8, [sp]",
            "add r3, r3, 0x4d0",
            "bl sym.ffurl_open",
            "subs sb, r0, 0",
            "bne 0xfefc",
            "add r2, sp, 0x1000",
            "add r1, r4, 0x20c0",
            "ldr r0, [r2, 0x54]",
            "add r1, r1, 0x38",
            "mov r2, 0x10",
            "bl fcn.00018f4c",
            "cmp r0, 0x10",
            "beq 0xfeec",
            "ldr r2, [0x0001004c]",
            "mov r0, sb",
            "mov r1, 0x10",
            "mov r3, r7",
            "add r2, r5, r2",
            "bl sym.imp.av_log",
            "add r3, sp, 0x1000",
            "ldr r0, [r3, 0x54]",
            "bl sym.ffurl_close",
            "b 0xff14",
            "ldr r2, [0x00010050]",
            "mov r0, r8",
            "mov r1, 0x10",
            "mov r3, r7",
            "add r2, r5, r2",
            "bl sym.imp.av_log",
            "mov r0, sl",
            "mov r1, r7",
            "mov r2, 0x1000",
            "bl sym.imp.av_strlcpy",
            "add r1, r6, 0x2000",
            "add r0, sp, 0x1000",
            "add r1, r1, 8",
            "mov r2, 0x10",
            "mov r3, 0",
            "add r0, r0, 0x30",
            "bl fcn.000742a8",
            "add r1, r4, 0x20c0",
            "add r0, sp, 0x1000",
            "add r1, r1, 0x38",
            "mov r2, 0x10",
            "mov r3, 0",
            "add r0, r0, 0xc",
            "bl fcn.000742a8",
            "ldr r1, [0x00010054]",
            "mov r3, 0",
            "add r2, sp, 0x1000",
            "add r6, r6, 4",
            "strb r3, [r2, 0x2c]",
            "mov r0, r6",
            "strb r3, [r2, 0x50]",
            "add r1, r5, r1",
            "bl sym.imp.strstr",
            "cmp r0, 0",
            "add r0, sp, 0xc",
            "movne r1, 0x1000",
            "ldrne r2, [0x00010058]",
            "ldreq r2, [0x0001005c]",
            "moveq r1, 0x1000",
            "add r2, r5, r2",
            "mov r3, r6",
            "bl sym.imp.snprintf",
            "movw r3, 0x1070",
            "add r0, r4, 0x1040",
            "ldr r3, [r4, r3]",
            "add r0, r0, 0x2c",
            "add r1, sp, 0xc",
            "mov r2, 1",
            "add r3, r3, 0x4d0",
            "bl fcn.00018880",
            "subs r7, r0, 0",
            "blt 0x10038",
            "movw r6, 0x106c",
            "ldr r1, [0x00010060]",
            "ldr r3, [r4, r6]",
            "add r2, sp, 0x1000",
            "add r2, r2, 0xc",
            "add r1, r5, r1",
            "ldr r0, [r3, 0x14]",
            "mov r3, 0",
            "bl sym.imp.av_opt_set",
            "ldr r3, [r4, r6]",
            "add r2, sp, 0x1000",
            "ldr r1, [0x00010064]",
            "add r2, r2, 0x30",
            "ldr r0, [r3, 0x14]",
            "mov r3, 0",
            "add r1, r5, r1",
            "bl sym.imp.av_opt_set",
            "ldr r0, [r4, r6]",
            "mov r1, 0",
            "bl fcn.00018a38",
            "subs r7, r0, 0",
            "movge r7, 0",
            "bge 0x10038",
            "ldr r0, [r4, r6]",
            "bl sym.ffurl_close",
            "mov r3, 0",
            "str r3, [r4, r6]",
            "mov r0, r7",
            "add sp, sp, 0x58",
            "add sp, sp, 0x1000",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "fcn.000742a8": {
        "function_address": "0x000742a8",
        "instructions": [
            "ldr ip, [0x00074308]",
            "cmp r3, 0",
            "ldr r3, [0x0007430c]",
            "push {r4, r5, lr}",
            "mov r4, r0",
            "add ip, pc, ip",
            "addne ip, ip, r3",
            "addeq ip, ip, r3",
            "addne ip, ip, 0x114",
            "addeq ip, ip, 0x124",
            "mov r3, 0",
            "b 0x742f8",
            "ldrb r5, [r1, r3]",
            "ldrb r5, [ip, r5, lsr 4]",
            "strb r5, [r4, -2]",
            "ldrb r5, [r1, r3]",
            "add r3, r3, 1",
            "and r5, r5, 0xf",
            "ldrb r5, [ip, r5]",
            "strb r5, [r4, -1]",
            "cmp r3, r2",
            "add r4, r4, 2",
            "blt 0x742d8",
            "pop {r4, r5, pc}"
        ]
    },
    "sym.imp.av_opt_set": {
        "function_address": "0x00009d08",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x8d8]!"
        ]
    },
    "fcn.00018f80": {
        "function_address": "0x00018f80",
        "instructions": [
            "ldr ip, [r0, 8]",
            "mov r3, r0",
            "push {r0, r1, r2, lr}",
            "tst ip, 1",
            "mvneq r0, 4",
            "beq 0x18fac",
            "ldr r3, [r3, 4]",
            "ldr r3, [r3, 8]",
            "str r3, [sp]",
            "mov r3, 1",
            "bl fcn.00018e34",
            "pop {r1, r2, r3, pc}"
        ]
    },
    "fcn.00010d20": {
        "function_address": "0x00010d20",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r4, r0",
            "mov r5, 0",
            "movw r7, 0x100c",
            "movw r6, 0x1010",
            "b 0x10d48",
            "ldr r3, [r4, r6]",
            "ldr r0, [r3, r5, lsl 2]",
            "add r5, r5, 1",
            "bl sym.imp.av_free",
            "ldr r3, [r4, r7]",
            "cmp r5, r3",
            "blt 0x10d38",
            "add r0, r4, 0x1000",
            "add r0, r0, 0x10",
            "bl sym.imp.av_freep",
            "mov r2, 0",
            "movw r3, 0x100c",
            "str r2, [r4, r3]",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.00010e1c": {
        "function_address": "0x00010e1c",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r2, 0x400",
            "mov r4, r1",
            "mov r6, 0",
            "bl fcn.00019df0",
            "mov r5, r0",
            "add r4, r4, r0",
            "b 0x10e44",
            "sub r5, r5, 1",
            "strb r6, [r4, -1]!",
            "cmp r5, 0",
            "ble 0x10e68",
            "bl sym.imp.__ctype_b_loc",
            "ldrb r3, [r4, -1]",
            "ldr r2, [r0]",
            "lsl r3, r3, 1",
            "ldrh r3, [r2, r3]",
            "tst r3, 0x20",
            "bne 0x10e3c",
            "mov r0, r5",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.00010e70": {
        "function_address": "0x00010e70",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x440",
            "sub sp, sp, 0xc",
            "ldr r5, [r0, 0x14]",
            "mov r3, r0",
            "mov r2, 0",
            "add r0, sp, 0x440",
            "str r2, [sp]",
            "ldr r4, [0x00011158]",
            "add r0, r0, 4",
            "add r2, r2, 1",
            "add r3, r3, 0x20",
            "str r1, [sp, 0x10]",
            "bl sym.avio_open2",
            "subs r7, r0, 0",
            "add r4, pc, r4",
            "blt 0x11148",
            "add r6, sp, 0x2c",
            "ldr r0, [sp, 0x444]",
            "mov r1, r6",
            "bl fcn.00010e1c",
            "ldr r1, [0x0001115c]",
            "mov r0, r6",
            "add r1, r4, r1",
            "bl sym.imp.strcmp",
            "subs r6, r0, 0",
            "ldrne r7, [0x00011160]",
            "bne 0x11148",
            "mov r0, r5",
            "mov sb, r6",
            "bl fcn.00010d20",
            "movw r3, 0x1008",
            "mov fp, r6",
            "str r6, [r5, r3]",
            "mov r8, r6",
            "ldr r3, [0x00011164]",
            "mov sl, r7",
            "str r6, [sp, 0xc]",
            "add r3, r4, r3",
            "str r3, [sp, 0x14]",
            "ldr r3, [0x00011168]",
            "add r3, r4, r3",
            "str r3, [sp, 0x18]",
            "ldr r3, [0x0001116c]",
            "add r3, r4, r3",
            "str r3, [sp, 0x1c]",
            "ldr r3, [0x00011170]",
            "add r3, r4, r3",
            "str r3, [sp, 0x20]",
            "ldr r3, [0x00011174]",
            "str r3, [sp, 0x24]",
            "b 0x11118",
            "add r6, sp, 0x2c",
            "ldr r0, [sp, 0x444]",
            "mov r1, r6",
            "add r7, sp, 0x440",
            "str r3, [sp, 8]",
            "bl fcn.00010e1c",
            "mov r0, r6",
            "ldr r1, [sp, 0x14]",
            "mov r2, r7",
            "bl sym.imp.av_strstart",
            "cmp r0, 0",
            "ldr r3, [sp, 8]",
            "beq 0x10fb4",
            "add r6, sp, 0x420",
            "mov r1, r3",
            "add r6, r6, 0xc",
            "mov r2, 0x14",
            "mov r0, r6",
            "mov sb, 1",
            "bl sym.imp.memset",
            "ldr r1, [0x00011178]",
            "mov r2, r6",
            "ldr r0, [sp, 0x440]",
            "add r1, r4, r1",
            "bl fcn.00074868",
            "mov r0, r6",
            "bl sym.imp.atoi",
            "mov r8, r0",
            "b 0x11118",
            "mov r0, r6",
            "ldr r1, [sp, 0x18]",
            "mov r2, r7",
            "bl sym.imp.av_strstart",
            "cmp r0, 0",
            "beq 0x10fdc",
            "ldr r0, [sp, 0x440]",
            "bl sym.imp.atoi",
            "mov r3, 0x1000",
            "b 0x11000",
            "mov r0, r6",
            "ldr r1, [sp, 0x1c]",
            "mov r2, r7",
            "bl sym.imp.av_strstart",
            "cmp r0, 0",
            "beq 0x11008",
            "ldr r0, [sp, 0x440]",
            "bl sym.imp.atoi",
            "movw r3, 0x1004",
            "str r0, [r5, r3]",
            "b 0x11118",
            "mov r0, r6",
            "ldr r1, [sp, 0x20]",
            "mov r2, r7",
            "bl sym.imp.av_strstart",
            "cmp r0, 0",
            "movne r2, 1",
            "movwne r3, 0x1008",
            "strne r2, [r5, r3]",
            "bne 0x11118",
            "ldr r3, [sp, 0x24]",
            "mov r2, r7",
            "mov r0, r6",
            "add r1, r4, r3",
            "bl sym.imp.av_strstart",
            "subs r2, r0, 0",
            "beq 0x1105c",
            "ldr r0, [sp, 0x440]",
            "mov fp, 1",
            "bl sym.imp.atoi",
            "str r0, [sp, 0xc]",
            "b 0x11118",
            "ldr r1, [0x0001117c]",
            "mov r0, r6",
            "add r1, r4, r1",
            "bl sym.imp.av_strstart",
            "cmp r0, 0",
            "bne 0x11118",
            "ldrb r3, [sp, 0x2c]",
            "cmp r3, 0",
            "beq 0x11118",
            "cmp fp, 0",
            "beq 0x110d0",
            "movw r0, 0x1004",
            "bl sym.imp.av_malloc",
            "subs r6, r0, 0",
            "beq 0x1113c",
            "ldr r3, [sp, 0xc]",
            "mov r0, r6",
            "mov r1, 0x1000",
            "ldr r2, [sp, 0x10]",
            "mov fp, 0",
            "str r3, [r0], 4",
            "add r3, sp, 0x2c",
            "bl fcn.00074a20",
            "add r1, r5, 0x1000",
            "mov r2, r6",
            "add r0, r1, 0x10",
            "add r1, r1, 0xc",
            "bl sym.imp.av_dynarray_add",
            "b 0x11118",
            "cmp sb, 0",
            "beq 0x11118",
            "movw r0, 0x1004",
            "bl sym.imp.av_malloc",
            "subs r6, r0, 0",
            "beq 0x1113c",
            "mov r0, r6",
            "mov r1, 0x1000",
            "str r8, [r0], 4",
            "add r3, sp, 0x2c",
            "ldr r2, [sp, 0x10]",
            "mov sb, 0",
            "bl fcn.00074a20",
            "add r1, r5, 0x1000",
            "mov r2, r6",
            "add r0, r1, 0x18",
            "add r1, r1, 0x14",
            "bl sym.imp.av_dynarray_add",
            "ldr r0, [sp, 0x444]",
            "bl sym.url_feof",
            "subs r3, r0, 0",
            "beq 0x10f40",
            "bl sym.av_gettime",
            "movw r3, 0x1028",
            "mov r7, sl",
            "strd r0, r1, [r5, r3]",
            "b 0x11140",
            "mvn r7, 0xb",
            "ldr r0, [sp, 0x444]",
            "bl sym.avio_close",
            "mov r0, r7",
            "add sp, sp, 0x4c",
            "add sp, sp, 0x400",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00010d70": {
        "function_address": "0x00010d70",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r5, 0",
            "ldr r4, [r0, 0x14]",
            "movw r7, 0x1014",
            "movw r6, 0x1018",
            "mov r0, r4",
            "bl fcn.00010d20",
            "b 0x10da0",
            "ldr r3, [r4, r6]",
            "ldr r0, [r3, r5, lsl 2]",
            "add r5, r5, 1",
            "bl sym.imp.av_free",
            "ldr r3, [r4, r7]",
            "cmp r5, r3",
            "blt 0x10d90",
            "add r0, r4, 0x1000",
            "mov r5, 0",
            "add r0, r0, 0x18",
            "bl sym.imp.av_freep",
            "movw r3, 0x1014",
            "str r5, [r4, r3]",
            "add r3, r3, 0xc",
            "ldr r0, [r4, r3]",
            "bl sym.ffurl_close",
            "mov r0, r5",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.00011950": {
        "function_address": "0x00011950",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r5, 0",
            "ldr r4, [r0, 0xc]",
            "mov r2, 0",
            "mov r6, r0",
            "mov r8, r5",
            "ldr r3, [0x00011a34]",
            "ldr r1, [0x00011a38]",
            "str r5, [r4, r3]",
            "add r3, r3, 0x80",
            "str r5, [r4, r3]",
            "sub r3, r3, 0x10",
            "str r5, [r4, r3]",
            "add r3, r3, 4",
            "str r5, [r4, r3]",
            "add r3, r3, 4",
            "str r5, [r4, r3]",
            "add r3, r3, 4",
            "str r5, [r4, r3]",
            "add r3, r3, 8",
            "str r5, [r4, r3]",
            "add r3, r3, 4",
            "str r5, [r4, r3]",
            "add r3, r3, 4",
            "str r5, [r4, r3]",
            "add r3, r3, 4",
            "str r5, [r4, r3]",
            "add r3, r3, 4",
            "str r5, [r4, r3]",
            "add r3, r3, 4",
            "str r5, [r4, r3]",
            "mov r3, 0",
            "strd r2, r3, [r4, r1]",
            "ldr r3, [0x00011a3c]",
            "str r5, [r4, r3]",
            "add r3, r3, 4",
            "str r5, [r4, r3]",
            "add r3, r3, 4",
            "str r5, [r4, r3]",
            "add r3, r3, 4",
            "str r5, [r4, r3]",
            "b 0x11a18",
            "ldr r3, [r6, 0x18]",
            "ldr r3, [r3, r5, lsl 2]",
            "add r5, r5, 1",
            "ldr r7, [r3, 0x14]",
            "add r0, r7, 8",
            "bl sym.imp.av_free_packet",
            "str r8, [r7, 0x50]",
            "strb r8, [r7, 4]",
            "ldr r3, [r6, 0x14]",
            "cmp r5, r3",
            "blo 0x119f8",
            "ldr r3, [0x00011a40]",
            "mov r2, 0",
            "str r2, [r4, r3]",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.00011930": {
        "function_address": "0x00011930",
        "instructions": [
            "mov r3, 1",
            "push {r0, r1, r2, lr}",
            "mov r2, 0",
            "str r3, [sp]",
            "mov r3, 0",
            "bl sym.avio_seek",
            "add sp, sp, 0xc",
            "ldm sp!, {pc}"
        ]
    },
    "fcn.0006f32c": {
        "function_address": "0x0006f32c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x44",
            "ldrd r8, sb, [sp, 0x80]",
            "ldr ip, [0x0006f800]",
            "cmp r8, 0",
            "str r0, [sp, 0x1c]",
            "str r1, [sp, 0x28]",
            "add ip, pc, ip",
            "strd r2, r3, [sp, 8]",
            "str ip, [sp, 0x18]",
            "ldrd sl, fp, [sp, 0x78]",
            "ldrd r4, r5, [sp, 0x88]",
            "bne 0x6f3a4",
            "cmp sb, 0x80000000",
            "bne 0x6f3a4",
            "mov r3, 0x450",
            "add r2, sp, 0x64",
            "ldrd r6, r7, [r0, r3]",
            "ldr r3, [sp, 0x98]",
            "strd r6, r7, [r2, 4]!",
            "mvn r6, 0",
            "mvn r7, 0x80000000",
            "strd r6, r7, [sp]",
            "blx r3",
            "cmp r0, 0",
            "mov r8, r0",
            "mov sb, r1",
            "bne 0x6f3a4",
            "cmp r1, 0x80000000",
            "beq 0x6f7e8",
            "ldr ip, [sp, 0xc]",
            "cmp ip, sb",
            "bgt 0x6f3d0",
            "bne 0x6f3c0",
            "ldr r0, [sp, 8]",
            "cmp r0, r8",
            "bhi 0x6f3d0",
            "ldr r1, [sp, 0x94]",
            "strd r8, sb, [r1]",
            "ldrd r6, r7, [sp, 0x68]",
            "b 0x6f7f0",
            "cmp r4, 0",
            "bne 0x6f51c",
            "cmp r5, 0x80000000",
            "bne 0x6f51c",
            "ldr r2, [sp, 0x1c]",
            "mov r6, 0x400",
            "add sl, sp, 0x64",
            "ldr r0, [r2, 0x10]",
            "bl sym.avio_size",
            "mvn r2, 0",
            "mvn r3, 0",
            "adds r2, r2, r0",
            "strd r0, r1, [sp, 0x10]",
            "adc r3, r3, r1",
            "strd r2, r3, [sl, 0xc]!",
            "ldrd r2, r3, [sp, 0x70]",
            "mov r0, r6",
            "asr r1, r0, 0x1f",
            "subs r2, r2, r0",
            "sbc r3, r3, r1",
            "strd r2, r3, [sp, 0x70]",
            "adds r2, r2, r0",
            "adc r3, r3, r1",
            "ldr r0, [sp, 0x1c]",
            "strd r2, r3, [sp]",
            "mov r2, sl",
            "ldr r1, [sp, 0x28]",
            "ldr r3, [sp, 0x98]",
            "blx r3",
            "cmp r0, 0",
            "mov r4, r0",
            "mov r5, r1",
            "bne 0x6f494",
            "cmp r1, 0x80000000",
            "bne 0x6f494",
            "lsl r6, r6, 1",
            "ldr r1, [sp, 0x74]",
            "mov r2, r6",
            "asr r3, r2, 0x1f",
            "cmp r1, r3",
            "blt 0x6f7e8",
            "bne 0x6f40c",
            "ldr r1, [sp, 0x70]",
            "cmp r1, r2",
            "bhs 0x6f40c",
            "b 0x6f7e8",
            "mov r4, r0",
            "mov r5, r1",
            "b 0x6f4a0",
            "mov sl, 1",
            "mov fp, 0",
            "add r6, sp, 0x30",
            "ldrd r2, r3, [sp, 0x70]",
            "mvn r0, 0",
            "mvn r1, 0x80000000",
            "strd r0, r1, [sp]",
            "adds r2, r2, sl",
            "ldr r0, [sp, 0x1c]",
            "adc r3, r3, fp",
            "ldr r1, [sp, 0x28]",
            "strd r2, r3, [sp, 0x30]",
            "mov r2, r6",
            "ldr r3, [sp, 0x98]",
            "blx r3",
            "cmp r0, 0",
            "bne 0x6f4e0",
            "cmp r1, 0x80000000",
            "beq 0x6f518",
            "ldr r2, [sp, 0x34]",
            "ldr ip, [sp, 0x14]",
            "ldr r3, [sp, 0x30]",
            "str r2, [sp, 0x74]",
            "cmp ip, r2",
            "str r3, [sp, 0x70]",
            "bgt 0x6f488",
            "bne 0x6f50c",
            "ldr r2, [sp, 0x10]",
            "cmp r2, r3",
            "bhi 0x6f488",
            "mov r2, r0",
            "mov r4, r0",
            "mov r5, r1",
            "ldrd sl, fp, [sp, 0x70]",
            "ldr r3, [sp, 0xc]",
            "cmp r5, r3",
            "bgt 0x6f548",
            "bne 0x6f538",
            "ldr ip, [sp, 8]",
            "cmp r4, ip",
            "bhi 0x6f548",
            "ldr r0, [sp, 0x94]",
            "strd r4, r5, [r0]",
            "ldrd r6, r7, [sp, 0x70]",
            "b 0x6f7f0",
            "cmp sb, r5",
            "bgt 0x6f7e8",
            "bne 0x6f55c",
            "cmp r8, r4",
            "bhi 0x6f7e8",
            "cmp r8, r4",
            "bne 0x6f574",
            "cmp sb, r5",
            "ldrdeq sl, fp, [sp, 0x68]",
            "moveq r4, r8",
            "moveq r5, sb",
            "mov ip, 0",
            "add r1, sp, 0x38",
            "strd r4, r5, [sp, 0x20]",
            "mov r4, ip",
            "str r1, [sp, 0x2c]",
            "strd r8, sb, [sp, 0x10]",
            "b 0x6f7a0",
            "ldrd r8, sb, [sp, 0x70]",
            "cmp fp, sb",
            "bgt 0x6f5a8",
            "bne 0x6f5d0",
            "cmp sl, r8",
            "bls 0x6f5d0",
            "ldr r2, [sp, 0x18]",
            "ldr r3, [0x0006f804]",
            "ldr r0, [0x0006f808]",
            "ldr r1, [0x0006f80c]",
            "add r3, r2, r3",
            "add r0, r2, r0",
            "add r3, r3, 0x74",
            "add r1, r2, r1",
            "movw r2, 0x6c7",
            "bl sym.imp.__assert",
            "cmp r4, 0",
            "bne 0x6f634",
            "ldrd r0, r1, [sp, 0x10]",
            "ldrd r2, r3, [sp, 0x20]",
            "subs r2, r2, r0",
            "sbc r3, r3, r1",
            "ldrd r0, r1, [sp, 8]",
            "strd r2, r3, [sp]",
            "ldrd r2, r3, [sp, 0x10]",
            "subs r0, r0, r2",
            "sbc r1, r1, r3",
            "mov r2, r8",
            "mov r3, sb",
            "subs r2, r2, r6",
            "sbc r3, r3, r7",
            "bl sym.imp.av_rescale",
            "mov r2, r8",
            "mov r3, sb",
            "subs r2, r2, sl",
            "sbc r3, r3, fp",
            "subs r2, r6, r2",
            "sbc r3, r7, r3",
            "adds r2, r2, r0",
            "adc r3, r3, r1",
            "b 0x6f64c",
            "cmp r4, 1",
            "bne 0x6f654",
            "adds r2, sl, r6",
            "adc r3, fp, r7",
            "asrs r3, r3, 1",
            "rrx r2, r2",
            "strd r2, r3, [sp, 0x38]",
            "b 0x6f658",
            "strd r6, r7, [sp, 0x38]",
            "ldr r2, [sp, 0x3c]",
            "ldr r3, [sp, 0x38]",
            "cmp r2, r7",
            "bgt 0x6f68c",
            "bne 0x6f674",
            "cmp r3, r6",
            "bhi 0x6f68c",
            "mov r0, 1",
            "mov r1, 0",
            "adds r6, r6, r0",
            "adc r7, r7, r1",
            "strd r6, r7, [sp, 0x38]",
            "b 0x6f6a4",
            "cmp r2, fp",
            "bgt 0x6f6a0",
            "bne 0x6f6a4",
            "cmp r3, sl",
            "bls 0x6f6a4",
            "strd sl, fp, [sp, 0x38]",
            "mvn r2, 0",
            "mvn r3, 0x80000000",
            "strd r2, r3, [sp]",
            "ldr r0, [sp, 0x1c]",
            "ldr r3, [sp, 0x98]",
            "ldr r1, [sp, 0x28]",
            "ldr r2, [sp, 0x2c]",
            "ldrd r8, sb, [sp, 0x38]",
            "blx r3",
            "ldr r6, [sp, 0x38]",
            "ldr r3, [sp, 0x70]",
            "ldr ip, [sp, 0x3c]",
            "cmp r3, r6",
            "bne 0x6f6ec",
            "ldr r3, [sp, 0x74]",
            "cmp r3, ip",
            "addeq r4, r4, 1",
            "beq 0x6f6f0",
            "mov r4, 0",
            "cmp r0, 0",
            "bne 0x6f71c",
            "cmp r1, 0x80000000",
            "bne 0x6f71c",
            "ldr ip, [sp, 0x18]",
            "add r1, r1, 0x80000010",
            "ldr r2, [0x0006f810]",
            "ldr r0, [sp, 0x1c]",
            "add r2, ip, r2",
            "bl sym.imp.av_log",
            "b 0x6f7e8",
            "ldr r2, [sp, 0xc]",
            "cmp r2, r1",
            "bgt 0x6f77c",
            "bne 0x6f738",
            "ldr r3, [sp, 8]",
            "cmp r3, r0",
            "bhi 0x6f77c",
            "ldr r2, [sp, 0xc]",
            "mvn sl, 0",
            "adds sl, sl, r8",
            "mvn fp, 0",
            "adc fp, fp, sb",
            "str r6, [sp, 0x70]",
            "cmp r1, r2",
            "str ip, [sp, 0x74]",
            "bgt 0x6f794",
            "bne 0x6f76c",
            "ldr r3, [sp, 8]",
            "cmp r0, r3",
            "bhi 0x6f794",
            "mov r5, r0",
            "mov r2, r0",
            "mov r3, r1",
            "strd r2, r3, [sp, 0x20]",
            "mov r2, r0",
            "mov r3, r1",
            "str r6, [sp, 0x68]",
            "str ip, [sp, 0x6c]",
            "strd r2, r3, [sp, 0x10]",
            "b 0x6f7a0",
            "mov r2, r0",
            "mov r3, r1",
            "strd r2, r3, [sp, 0x20]",
            "ldrd r6, r7, [sp, 0x68]",
            "cmp fp, r7",
            "bgt 0x6f590",
            "bne 0x6f7b8",
            "cmp sl, r6",
            "bhi 0x6f590",
            "ldr r3, [sp, 0x90]",
            "ldrd r8, sb, [sp, 0x10]",
            "ldrd r4, r5, [sp, 0x20]",
            "tst r3, 1",
            "movne r2, r8",
            "movne r3, sb",
            "ldrdeq r6, r7, [sp, 0x70]",
            "moveq r2, r4",
            "moveq r3, r5",
            "ldr ip, [sp, 0x94]",
            "stm ip, {r2, r3}",
            "b 0x6f7f0",
            "mvn r6, 0",
            "mvn r7, 0",
            "mov r0, r6",
            "mov r1, r7",
            "add sp, sp, 0x44",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.000116cc": {
        "function_address": "0x000116cc",
        "instructions": [
            "cmp r2, 0xf",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "movle r3, 0",
            "sub sp, sp, 0x324",
            "mov r5, r0",
            "mov r4, r1",
            "mov sl, r2",
            "ble 0x11704",
            "b 0x11710",
            "ldrb r1, [r5, r3]",
            "ldrb r2, [r4, r3]",
            "eor r2, r1, r2",
            "strb r2, [r4, r3]",
            "add r3, r3, 1",
            "cmp r3, sl",
            "blt 0x116f0",
            "b 0x11928",
            "add r7, sp, 0x2a8",
            "mov r1, 0",
            "mov r2, 0x40",
            "add r8, sp, 0x1a0",
            "mov r0, r7",
            "mov r6, 0",
            "bl sym.imp.memset",
            "mov r1, r5",
            "mov r2, 0x60",
            "mov r3, 1",
            "mov r0, r8",
            "bl sym.imp.av_rc4_init",
            "mov r3, 1",
            "mov r0, r8",
            "str r3, [sp, 4]",
            "mov r1, r7",
            "add r3, r3, 0x3f",
            "mov r2, r6",
            "str r6, [sp]",
            "bl sym.imp.av_rc4_crypt",
            "add r3, sp, 0x2e4",
            "ldr r2, [r7, r6, lsl 2]",
            "add r6, r6, 1",
            "orr r2, r2, 1",
            "cmp r6, 0xc",
            "str r2, [r3, 4]!",
            "bne 0x11764",
            "asr sb, sl, 3",
            "add ip, sp, 0x2e0",
            "add r7, sp, 0x18",
            "sub sb, sb, 1",
            "add r6, sp, 0x318",
            "add r3, r4, sb, lsl 3",
            "mov r8, 0",
            "ldr r0, [r3]",
            "ldr r1, [r3, 4]",
            "ldrd r2, r3, [ip]",
            "eor r2, r2, r0",
            "eor r3, r3, r1",
            "add r1, sp, 0x320",
            "mov r0, r7",
            "strd r2, r3, [r1, -8]",
            "add r1, r5, 0xc",
            "mov r2, 0x40",
            "mov r5, 1",
            "mov r3, 1",
            "bl sym.imp.av_des_init",
            "mov r0, r7",
            "mov r1, r6",
            "mov r2, r6",
            "mov r3, r5",
            "str r5, [sp, 4]",
            "add r7, sp, 0x1a0",
            "str r8, [sp]",
            "bl sym.imp.av_des_crypt",
            "add ip, sp, 0x320",
            "add r3, sp, 0x2e0",
            "ldrd r0, r1, [r3, -8]",
            "ldrd r2, r3, [ip, -8]",
            "eor r2, r2, r0",
            "eor r3, r3, r1",
            "strd r2, r3, [ip, -8]",
            "mov r1, r6",
            "mov r3, r5",
            "mov r0, r7",
            "mov r2, 0x40",
            "mov r6, 0",
            "bl sym.imp.av_rc4_init",
            "str r5, [sp, 4]",
            "mov r0, r7",
            "mov r1, r4",
            "mov r2, r4",
            "mov r3, sl",
            "add r5, sp, 0x2e8",
            "str r8, [sp]",
            "mov r7, 0",
            "bl sym.imp.av_rc4_crypt",
            "add r1, r5, 0x18",
            "str r1, [sp, 0x14]",
            "b 0x1189c",
            "ldr r2, [r4]",
            "ldr r3, [r4, 4]",
            "mov r0, r5",
            "add r1, r2, r6",
            "mov sl, r3",
            "add r8, r8, 1",
            "bl fcn.00011668",
            "mov fp, r0",
            "ldr r0, [sp, 0x14]",
            "add r1, sl, fp",
            "add r4, r4, 8",
            "bl fcn.00011668",
            "add fp, fp, r0",
            "mov r3, 0",
            "add fp, fp, r7",
            "str r3, [sp, 8]",
            "str fp, [sp, 0xc]",
            "ldrd r6, r7, [sp, 8]",
            "orr r6, r6, r0",
            "cmp r8, sb",
            "blt 0x11850",
            "mov r8, r5",
            "add sl, r5, 0x14",
            "ldr r0, [r8]",
            "bl fcn.00011638",
            "str r0, [r8], 4",
            "cmp r8, sl",
            "bne 0x118ac",
            "add r8, sp, 0x300",
            "add r5, r5, 0x2c",
            "ldr r0, [r8]",
            "bl fcn.00011638",
            "str r0, [r8], 4",
            "cmp r8, r5",
            "bne 0x118c8",
            "ldr r1, [sp, 0x31c]",
            "add r8, sp, 0x2e8",
            "ldr r5, [sp, 0x318]",
            "add r0, r8, 0x18",
            "str r1, [sp, 0x318]",
            "str r5, [sp, 0x31c]",
            "rsb r5, r1, r5",
            "rsb r5, r7, r5",
            "bl fcn.0001169c",
            "mov r1, r5",
            "mov sl, r0",
            "mov r0, r8",
            "bl fcn.0001169c",
            "mov r2, 0",
            "rsb r0, r6, r0",
            "rsb r3, r5, sl",
            "orr r2, r2, r0",
            "str r2, [r4]",
            "str r3, [r4, 4]",
            "add sp, sp, 0x324",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.imp.av_rc4_init": {
        "function_address": "0x00009ca8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x918]!"
        ]
    },
    "sym.imp.av_rc4_crypt": {
        "function_address": "0x0000a1b8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x5b8]!"
        ]
    },
    "sym.imp.av_des_init": {
        "function_address": "0x0000a110",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x628]!"
        ]
    },
    "sym.imp.av_des_crypt": {
        "function_address": "0x0000a158",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x5f8]!"
        ]
    },
    "fcn.00011668": {
        "function_address": "0x00011668",
        "instructions": [
            "ldr r3, [r0]",
            "mov r2, 1",
            "mul r3, r3, r1",
            "mov r1, r0",
            "ldr ip, [r1, 4]!",
            "add r2, r2, 1",
            "ror r3, r3, 0x10",
            "cmp r2, 5",
            "mul r3, ip, r3",
            "bne 0x11678",
            "ldr r0, [r0, 0x14]",
            "add r0, r3, r0",
            "bx lr"
        ]
    },
    "fcn.00011638": {
        "function_address": "0x00011638",
        "instructions": [
            "mul r1, r0, r0",
            "mul r1, r0, r1",
            "mul r2, r0, r1",
            "rsb r2, r2, 2",
            "mul r2, r1, r2",
            "mul r3, r0, r2",
            "rsb r3, r3, 2",
            "mul r3, r2, r3",
            "mul r0, r0, r3",
            "rsb r0, r0, 2",
            "mul r0, r3, r0",
            "bx lr"
        ]
    },
    "fcn.0001169c": {
        "function_address": "0x0001169c",
        "instructions": [
            "ldr r3, [r0, 0x14]",
            "mov r2, 4",
            "rsb r3, r3, r1",
            "add r1, r0, 0x14",
            "ldr ip, [r1, -4]!",
            "subs r2, r2, 1",
            "mul r3, ip, r3",
            "ror r3, r3, 0x10",
            "bne 0x116ac",
            "ldr r0, [r0]",
            "mul r0, r0, r3",
            "bx lr"
        ]
    },
    "fcn.00011c18": {
        "function_address": "0x00011c18",
        "instructions": [
            "sub r1, r1, 2",
            "push {r4, lr}",
            "cmp r1, 3",
            "addls pc, pc, r1, lsl 2",
            "b 0x11c54",
            "b 0x11c3c",
            "b 0x11c3c",
            "b 0x11c44",
            "b 0x11c4c",
            "pop {r4, lr}",
            "b sym.avio_rl32",
            "bl sym.avio_rl64",
            "pop {r4, pc}",
            "pop {r4, lr}",
            "b sym.avio_rl16",
            "mov r0, 0x80000000",
            "pop {r4, pc}"
        ]
    },
    "fcn.000131b0": {
        "function_address": "0x000131b0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sl, lr}",
            "mov r4, r3",
            "sub sp, sp, 0x1c",
            "ldr r7, [0x000132f0]",
            "mov r5, r0",
            "mov r8, r1",
            "ldr r0, [r0, 0x10]",
            "mov r6, r2",
            "bl fcn.00011930",
            "cmn r4, 0x80000002",
            "add r7, pc, r7",
            "strd r0, r1, [sp, 8]",
            "bhi 0x132e8",
            "lsl sl, r4, 1",
            "add sl, sl, 1",
            "mov r0, sl",
            "bl sym.imp.av_malloc",
            "cmp r0, 0",
            "mov r2, r0",
            "str r0, [sp, 0x14]",
            "beq 0x132c4",
            "cmp r6, 0",
            "bne 0x13220",
            "ldr r0, [r5, 0x10]",
            "mov r1, r4",
            "mov r3, sl",
            "bl sym.avio_get_str16le",
            "b 0x132a0",
            "cmn r6, 1",
            "bne 0x13248",
            "mov r1, r2",
            "ldr r0, [r5, 0x10]",
            "mov r2, r4",
            "bl sym.avio_read",
            "ldr r3, [sp, 0x14]",
            "mov r2, 0",
            "strb r2, [r3, r4]",
            "b 0x132a0",
            "sub r3, r6, 2",
            "cmp r3, 3",
            "bhi 0x13280",
            "mov r1, r6",
            "ldr r0, [r5, 0x10]",
            "bl fcn.00011c18",
            "ldr r2, [0x000132f4]",
            "asr r1, r0, 0x1f",
            "strd r0, r1, [sp]",
            "mov r1, r4",
            "ldr r0, [sp, 0x14]",
            "add r2, r7, r2",
            "bl sym.imp.snprintf",
            "b 0x132a0",
            "ldr r2, [0x000132f8]",
            "mov r0, r5",
            "mov r1, 0x30",
            "mov r3, r6",
            "str r8, [sp]",
            "add r2, r7, r2",
            "bl sym.imp.av_log",
            "b 0x132c4",
            "ldr r2, [sp, 0x14]",
            "ldrb r3, [r2]",
            "cmp r3, 0",
            "beq 0x132c4",
            "add r0, r5, 0x4b0",
            "mov r1, r8",
            "add r0, r0, 8",
            "mov r3, 0",
            "bl sym.imp.av_dict_set",
            "add r0, sp, 0x14",
            "bl sym.imp.av_freep",
            "mov r3, 0",
            "ldr r0, [r5, 0x10]",
            "str r3, [sp]",
            "ldrd r2, r3, [sp, 8]",
            "adds r2, r2, r4",
            "adc r3, r3, r4, asr 31",
            "bl sym.avio_seek",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "fcn.0007df9c": {
        "function_address": "0x0007df9c",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r7, r3",
            "mov r6, r2",
            "mov r4, r0",
            "mov r5, r1",
            "bl fcn.0007e43c",
            "umull r2, r3, r0, r6",
            "mul r7, r0, r7",
            "ldr ip, [sp, 0x18]",
            "mla r7, r6, r1, r7",
            "add r3, r7, r3",
            "subs r2, r4, r2",
            "sbc r3, r5, r3",
            "strd r2, r3, [ip]",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.0007e43c": {
        "function_address": "0x0007e43c",
        "instructions": [
            "push {r0, r1, r2, r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "cmp r3, 0",
            "mov r5, r0",
            "mov r4, r1",
            "mov r8, r2",
            "mov sl, r0",
            "mov sb, r1",
            "bne 0x7e6b4",
            "cmp r2, r1",
            "bls 0x7e524",
            "clz r3, r2",
            "cmp r3, 0",
            "lslne r8, r2, r3",
            "rsbne r2, r3, 0x20",
            "lsrne r2, r0, r2",
            "lslne sl, r0, r3",
            "lsr r5, r8, 0x10",
            "uxth r6, r8",
            "orrne sb, r2, r1, lsl r3",
            "mov r1, r5",
            "mov r0, sb",
            "bl fcn.0007d244",
            "mov r0, sb",
            "mov fp, r1",
            "mov r1, r5",
            "bl fcn.0007d19c",
            "lsr r3, sl, 0x10",
            "mul r7, r6, r0",
            "mov r4, r0",
            "orr fp, r3, fp, lsl 16",
            "cmp fp, r7",
            "bhs 0x7e4d4",
            "adds fp, fp, r8",
            "sub r4, r0, 1",
            "bhs 0x7e4d4",
            "cmp fp, r7",
            "sublo r4, r4, 1",
            "addlo fp, fp, r8",
            "rsb r7, r7, fp",
            "mov r1, r5",
            "mov r0, r7",
            "uxth sl, sl",
            "bl fcn.0007d244",
            "mov r0, r7",
            "mov fp, r1",
            "mov r1, r5",
            "orr fp, sl, fp, lsl 16",
            "bl fcn.0007d19c",
            "mul r6, r6, r0",
            "cmp fp, r6",
            "bhs 0x7e51c",
            "adds fp, fp, r8",
            "sub r0, r0, 1",
            "bhs 0x7e51c",
            "cmp fp, r6",
            "sublo r0, r0, 1",
            "orr r4, r0, r4, lsl 16",
            "b 0x7e810",
            "cmp r2, 0",
            "bne 0x7e53c",
            "mov r0, 1",
            "mov r1, r2",
            "bl fcn.0007d19c",
            "mov r8, r0",
            "clz r3, r8",
            "cmp r3, 0",
            "rsbeq r4, r8, r4",
            "moveq r7, 1",
            "beq 0x7e610",
            "lsl r8, r8, r3",
            "rsb sb, r3, 0x20",
            "lsr r7, r4, sb",
            "lsr sb, r5, sb",
            "lsr r6, r8, 0x10",
            "uxth fp, r8",
            "orr sb, sb, r4, lsl r3",
            "lsl sl, r5, r3",
            "mov r0, r7",
            "mov r1, r6",
            "bl fcn.0007d244",
            "mov r0, r7",
            "mov r4, r1",
            "mov r1, r6",
            "bl fcn.0007d19c",
            "lsr r3, sb, 0x10",
            "mul r7, fp, r0",
            "mov r5, r0",
            "orr r4, r3, r4, lsl 16",
            "cmp r4, r7",
            "bhs 0x7e5bc",
            "adds r4, r4, r8",
            "sub r5, r0, 1",
            "bhs 0x7e5bc",
            "cmp r4, r7",
            "sublo r5, r5, 1",
            "addlo r4, r4, r8",
            "rsb r7, r7, r4",
            "mov r1, r6",
            "mov r0, r7",
            "uxth sb, sb",
            "bl fcn.0007d244",
            "mov r0, r7",
            "mov r4, r1",
            "mov r1, r6",
            "orr r4, sb, r4, lsl 16",
            "bl fcn.0007d19c",
            "mul fp, fp, r0",
            "cmp r4, fp",
            "bhs 0x7e608",
            "adds r4, r4, r8",
            "sub r0, r0, 1",
            "bhs 0x7e608",
            "cmp r4, fp",
            "sublo r0, r0, 1",
            "addlo r4, r4, r8",
            "orr r7, r0, r5, lsl 16",
            "rsb r4, fp, r4",
            "lsr r5, r8, 0x10",
            "mov r0, r4",
            "uxth r6, r8",
            "mov r1, r5",
            "bl fcn.0007d244",
            "mov r0, r4",
            "mov fp, r1",
            "mov r1, r5",
            "bl fcn.0007d19c",
            "lsr r3, sl, 0x10",
            "mul sb, r6, r0",
            "mov r4, r0",
            "orr fp, r3, fp, lsl 16",
            "cmp fp, sb",
            "bhs 0x7e664",
            "adds fp, fp, r8",
            "sub r4, r0, 1",
            "bhs 0x7e664",
            "cmp fp, sb",
            "sublo r4, r4, 1",
            "addlo fp, fp, r8",
            "rsb sb, sb, fp",
            "mov r1, r5",
            "mov r0, sb",
            "uxth sl, sl",
            "bl fcn.0007d244",
            "mov r0, sb",
            "mov fp, r1",
            "mov r1, r5",
            "orr fp, sl, fp, lsl 16",
            "bl fcn.0007d19c",
            "mul r6, r6, r0",
            "cmp fp, r6",
            "bhs 0x7e6ac",
            "adds fp, fp, r8",
            "sub r0, r0, 1",
            "bhs 0x7e6ac",
            "cmp fp, r6",
            "sublo r0, r0, 1",
            "orr r4, r0, r4, lsl 16",
            "b 0x7e828",
            "cmp r3, r1",
            "bhi 0x7e818",
            "clz r7, r3",
            "cmp r7, 0",
            "bne 0x7e6e4",
            "cmp r1, r3",
            "cmpls r0, r2",
            "movlo r4, 0",
            "movhs r4, 1",
            "movhs r4, 1",
            "bhs 0x7e828",
            "b 0x7e820",
            "rsb r1, r7, 0x20",
            "lsr r6, r2, r1",
            "lsr sb, r4, r1",
            "lsr r1, r0, r1",
            "lsl r2, r2, r7",
            "orr r6, r6, r3, lsl r7",
            "orr r4, r1, r4, lsl r7",
            "mov r0, sb",
            "lsr r8, r6, 0x10",
            "uxth sl, r6",
            "str r2, [sp, 4]",
            "mov r1, r8",
            "bl fcn.0007d244",
            "mov r0, sb",
            "mov fp, r1",
            "mov r1, r8",
            "bl fcn.0007d19c",
            "lsr r2, r4, 0x10",
            "mul r3, sl, r0",
            "mov sb, r0",
            "orr fp, r2, fp, lsl 16",
            "cmp fp, r3",
            "bhs 0x7e758",
            "adds fp, fp, r6",
            "sub sb, r0, 1",
            "bhs 0x7e758",
            "cmp fp, r3",
            "sublo sb, sb, 1",
            "addlo fp, fp, r6",
            "rsb fp, r3, fp",
            "mov r1, r8",
            "mov r0, fp",
            "uxth r4, r4",
            "bl fcn.0007d244",
            "mov r0, fp",
            "mov r3, r1",
            "mov r1, r8",
            "str r3, [sp]",
            "bl fcn.0007d19c",
            "ldr r3, [sp]",
            "mul sl, sl, r0",
            "orr r3, r4, r3, lsl 16",
            "cmp r3, sl",
            "bhs 0x7e7ac",
            "adds r3, r3, r6",
            "sub r0, r0, 1",
            "bhs 0x7e7ac",
            "cmp r3, sl",
            "sublo r0, r0, 1",
            "addlo r3, r3, r6",
            "rsb r3, sl, r3",
            "orr r4, r0, sb, lsl 16",
            "ldr r8, [sp, 4]",
            "lsr r0, r4, 0x10",
            "lsr r1, r8, 0x10",
            "bic ip, r4, r0, lsl 16",
            "bic r6, r8, r1, lsl 16",
            "mul r2, ip, r6",
            "mul r6, r0, r6",
            "mul ip, r1, ip",
            "mul r1, r0, r1",
            "adds ip, r6, ip",
            "addhs r1, r1, 0x10000",
            "adds r2, r2, ip, lsl 16",
            "adc r1, r1, ip, lsr 16",
            "cmp r1, r3",
            "bhi 0x7e80c",
            "movne r3, 0",
            "moveq r3, 1",
            "cmp r2, r5, lsl r7",
            "movls r7, 0",
            "andhi r7, r3, 1",
            "cmp r7, 0",
            "beq 0x7e828",
            "sub r4, r4, 1",
            "mov r7, 0",
            "b 0x7e828",
            "mov r7, 0",
            "b 0x7e824",
            "mov r7, r4",
            "mov r4, r7",
            "mov r0, r4",
            "mov r1, r7",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0007d244": {
        "function_address": "0x0007d244",
        "instructions": [
            "cmp r1, 0",
            "beq 0x7d238",
            "push {r0, r1, lr}",
            "bl fcn.0007d19c",
            "pop {r1, r2, lr}",
            "mul r3, r2, r0",
            "sub r1, r1, r3",
            "bx lr"
        ]
    },
    "fcn.00013588": {
        "function_address": "0x00013588",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x400",
            "ldr r4, [r0, 0x10]",
            "sub sp, sp, 0xc",
            "mov r6, r0",
            "mov r8, 0",
            "ldr sl, [r0, 0xc]",
            "add r7, sp, 8",
            "ldr r5, [0x000136c8]",
            "mov r0, r4",
            "bl sym.avio_rl16",
            "ldr r3, [0x000136cc]",
            "mov sb, r0",
            "add r5, pc, r5",
            "add r3, r5, r3",
            "str r3, [sp]",
            "ldr r3, [0x000136d0]",
            "add r3, r5, r3",
            "str r3, [sp, 4]",
            "b 0x136b0",
            "mov r0, r4",
            "bl sym.avio_rl16",
            "tst r0, 1",
            "mov r5, r0",
            "addne r5, r0, 1",
            "mov r2, r7",
            "mov r0, r4",
            "mov r1, r5",
            "mov r3, 0x400",
            "bl sym.avio_get_str16le",
            "cmp r0, r5",
            "bge 0x1361c",
            "rsb r5, r0, r5",
            "mov r0, r4",
            "mov r2, r5",
            "asr r3, r2, 0x1f",
            "bl sym.avio_skip",
            "mov r0, r4",
            "bl sym.avio_rl16",
            "mov fp, r0",
            "mov r0, r4",
            "bl sym.avio_rl16",
            "cmp fp, 0",
            "mov r5, r0",
            "bne 0x13644",
            "tst r0, 1",
            "addne r5, r0, 1",
            "mov r0, r7",
            "ldr r1, [sp]",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x1366c",
            "ldr r0, [r6, 0x10]",
            "mov r1, fp",
            "bl fcn.00011c18",
            "mov r3, 0x24400",
            "b 0x13690",
            "mov r0, r7",
            "ldr r1, [sp, 4]",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x13698",
            "ldr r0, [r6, 0x10]",
            "mov r1, fp",
            "bl fcn.00011c18",
            "ldr r3, [0x000136d4]",
            "str r0, [sl, r3]",
            "b 0x136ac",
            "mov r0, r6",
            "mov r1, r7",
            "mov r2, fp",
            "mov r3, r5",
            "bl fcn.000131b0",
            "add r8, r8, 1",
            "cmp r8, sb",
            "blt 0x135d8",
            "mov r0, 0",
            "add sp, sp, 0xc",
            "add sp, sp, 0x400",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.000132fc": {
        "function_address": "0x000132fc",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x400",
            "ldr r4, [r0, 0x10]",
            "sub sp, sp, 0xc",
            "mov r5, 0",
            "add r8, sp, 8",
            "ldr sl, [r0, 0xc]",
            "ldr r6, [0x00013430]",
            "mov r0, r4",
            "bl sym.avio_rl16",
            "ldr r3, [0x00013434]",
            "mov fp, r0",
            "add r6, pc, r6",
            "add r3, r6, r3",
            "str r3, [sp]",
            "ldr r3, [0x00013438]",
            "add r3, r6, r3",
            "str r3, [sp, 4]",
            "b 0x13418",
            "mov r0, r4",
            "bl sym.avio_rl16",
            "mov r0, r4",
            "bl sym.avio_rl16",
            "mov r7, r0",
            "mov r0, r4",
            "bl sym.avio_rl16",
            "mov r2, 2",
            "mov r6, r0",
            "mov r3, 0",
            "mov r0, r4",
            "bl sym.avio_skip",
            "mov r0, r4",
            "bl sym.avio_rl32",
            "mov r1, r6",
            "mov sb, r0",
            "mov r2, r8",
            "mov r0, r4",
            "mov r3, 0x400",
            "bl sym.avio_get_str16le",
            "cmp r0, r6",
            "bge 0x133b4",
            "rsb r6, r0, r6",
            "mov r0, r4",
            "mov r2, r6",
            "asr r3, r2, 0x1f",
            "bl sym.avio_skip",
            "mov r0, r4",
            "bl sym.avio_rl16",
            "sub r2, sb, 2",
            "mov r6, r0",
            "asr r3, r2, 0x1f",
            "mov r0, r4",
            "bl sym.avio_skip",
            "cmp r7, 0x7f",
            "bgt 0x13414",
            "mov r0, r8",
            "ldr r1, [sp]",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "addeq r7, r7, 0x4800",
            "addeq r7, r7, 0x80",
            "streq r6, [sl, r7, lsl 3]",
            "beq 0x13414",
            "mov r0, r8",
            "ldr r1, [sp, 4]",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "addeq r7, sl, r7, lsl 3",
            "addeq r7, r7, 0x24400",
            "streq r6, [r7, 4]",
            "add r5, r5, 1",
            "cmp r5, fp",
            "blt 0x13348",
            "mov r0, 0",
            "add sp, sp, 0xc",
            "add sp, sp, 0x400",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0001343c": {
        "function_address": "0x0001343c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x420",
            "ldr r4, [r0, 0x10]",
            "sub sp, sp, 0xc",
            "mov r8, r0",
            "mov r5, 0",
            "ldr r6, [0x00013580]",
            "mov r0, r4",
            "bl sym.avio_rl64",
            "mov r0, r4",
            "add r6, pc, r6",
            "bl sym.avio_rl64",
            "mov r0, r4",
            "bl sym.avio_rl32",
            "mov fp, r0",
            "mov r0, r4",
            "bl sym.avio_rl16",
            "mov r0, r4",
            "bl sym.avio_rl16",
            "mov r7, r0",
            "b 0x1349c",
            "add r5, r5, 1",
            "mov r0, r4",
            "bl sym.avio_r8",
            "cmp r5, r7",
            "blt 0x13490",
            "ldr r3, [0x00013584]",
            "mov r5, 0",
            "add r7, sp, 0x20",
            "add r3, r6, r3",
            "str r3, [sp, 0x1c]",
            "b 0x13568",
            "mov r0, r4",
            "bl sym.avio_rl64",
            "mov r0, r4",
            "bl sym.avio_rl64",
            "mov sl, r0",
            "mov r0, r4",
            "mov sb, r1",
            "bl sym.avio_rl16",
            "mov r0, r4",
            "bl sym.avio_rl32",
            "mov r0, r4",
            "bl sym.avio_rl32",
            "mov r0, r4",
            "bl sym.avio_rl32",
            "mov r6, r0",
            "mov r2, r7",
            "mov r0, r4",
            "lsl r1, r6, 1",
            "mov r3, 0x400",
            "bl sym.avio_get_str16le",
            "cmp r0, r6",
            "bge 0x13528",
            "rsb r6, r0, r6",
            "mov r0, r4",
            "mov r2, r6",
            "asr r3, r2, 0x1f",
            "bl sym.avio_skip",
            "ldr r0, [sp, 0x1c]",
            "add r3, sp, 0x420",
            "add r2, r0, 0x34",
            "ldm r2, {r0, r1}",
            "stm r3, {r0, r1}",
            "mov r0, 0",
            "mov r1, 0x80000000",
            "str sl, [sp]",
            "strd r0, r1, [sp, 8]",
            "mov r1, r5",
            "add r5, r5, 1",
            "str sb, [sp, 4]",
            "str r7, [sp, 0x10]",
            "mov r0, r8",
            "ldm r3, {r2, r3}",
            "bl sym.avpriv_new_chapter",
            "cmp r5, fp",
            "blt 0x134bc",
            "mov r0, 0",
            "add sp, sp, 0x2c",
            "add sp, sp, 0x400",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.000327c4": {
        "function_address": "0x000327c4",
        "instructions": [
            "ldr r3, [0x000328b0]",
            "cmp r1, r2",
            "push {r0, r1, r2, r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, 0",
            "mov r5, r0",
            "mov r6, r1",
            "add r3, pc, r3",
            "mov r7, r2",
            "str r4, [sp, 4]",
            "beq 0x328ac",
            "ldr r8, [0x000328b4]",
            "add sl, sp, 4",
            "add r8, r3, r8",
            "b 0x32880",
            "cmp r7, 0",
            "ldr sb, [r4]",
            "movne fp, r7",
            "bne 0x32828",
            "b 0x32834",
            "mov r0, sb",
            "bl sym.imp.av_strcasecmp",
            "cmp r0, 0",
            "ldreq sb, [fp, 4]",
            "beq 0x32834",
            "add fp, fp, 8",
            "ldr r1, [fp]",
            "cmp r1, 0",
            "bne 0x32810",
            "cmp r6, 0",
            "movne fp, r6",
            "bne 0x32860",
            "b 0x3286c",
            "mov r0, sb",
            "ldr r1, [fp, 4]",
            "bl sym.imp.av_strcasecmp",
            "cmp r0, 0",
            "ldreq sb, [fp]",
            "beq 0x3286c",
            "add fp, fp, 8",
            "ldr r3, [fp]",
            "cmp r3, 0",
            "bne 0x32844",
            "mov r0, sl",
            "mov r1, sb",
            "ldr r2, [r4, 4]",
            "mov r3, 0",
            "bl sym.imp.av_dict_set",
            "mov r2, r4",
            "ldr r0, [r5]",
            "mov r1, r8",
            "mov r3, 2",
            "bl sym.imp.av_dict_get",
            "subs r4, r0, 0",
            "bne 0x327fc",
            "mov r0, r5",
            "bl sym.imp.av_dict_free",
            "ldr r3, [sp, 4]",
            "str r3, [r5]",
            "pop {r1, r2, r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.000146fc": {
        "function_address": "0x000146fc",
        "instructions": [
            "push {r0, r1, r2, r3, r4, r5, r6, lr}",
            "add r2, sp, 0xc",
            "ldr r3, [0x00014774]",
            "ldr r1, [0x00014778]",
            "add r3, pc, r3",
            "str r2, [sp]",
            "add r2, sp, 8",
            "str r2, [sp, 4]",
            "add r1, r3, r1",
            "add r2, sp, 0x14",
            "add r3, sp, 0x10",
            "bl sym.imp.sscanf",
            "cmp r0, 4",
            "movne r2, 0",
            "movne r3, 0x80000000",
            "bne 0x14764",
            "ldr r1, [sp, 0x14]",
            "mov r3, 0x3c",
            "ldr r2, [sp, 0x10]",
            "mla r2, r3, r1, r2",
            "ldr r1, [sp, 0xc]",
            "mla r3, r3, r2, r1",
            "ldr r1, [sp, 8]",
            "mov r2, 0x64",
            "mla r2, r2, r3, r1",
            "asr r3, r2, 0x1f",
            "mov r0, r2",
            "mov r1, r3",
            "add sp, sp, 0x1c",
            "ldm sp!, {pc}"
        ]
    },
    "sym.imp.sscanf": {
        "function_address": "0x00009d38",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x8b8]!"
        ]
    },
    "fcn.000149bc": {
        "function_address": "0x000149bc",
        "instructions": [
            "push {r4, lr}",
            "ldr r4, [r0, 0xc]",
            "mov r0, r4",
            "bl sym.imp.av_freep",
            "add r0, r4, 4",
            "bl sym.imp.av_freep",
            "mov r0, 0",
            "pop {r4, pc}"
        ]
    },
    "fcn.00014fd8": {
        "function_address": "0x00014fd8",
        "instructions": [
            "mov r3, 1",
            "push {r0, r1, r2, lr}",
            "mov r2, 0",
            "str r3, [sp]",
            "mov r3, 0",
            "bl sym.avio_seek",
            "add sp, sp, 0xc",
            "ldm sp!, {pc}"
        ]
    },
    "fcn.00014f54": {
        "function_address": "0x00014f54",
        "instructions": [
            "push {r3, lr}",
            "mov r3, r0",
            "ldr r2, [r3, 0x18]",
            "mov r0, r1",
            "cmp r2, 0",
            "popne {r3, pc}",
            "ldr r3, [r3, 0x434]",
            "cmp r3, 0",
            "beq 0x14f8c",
            "sub r2, r3, 1",
            "add r0, r2, r1",
            "mov r1, r3",
            "bl fcn.0007d264",
            "pop {r3, pc}",
            "mov r0, 1",
            "pop {r3, pc}"
        ]
    },
    "fcn.00014ff8": {
        "function_address": "0x00014ff8",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x6c",
            "str r1, [sp, 0x34]",
            "add r1, sp, 0x48",
            "add r2, r1, 0x1c",
            "mov r5, r0",
            "ldr r3, [0x00015554]",
            "str r2, [sp, 0x3c]",
            "ldr r2, [0x00015558]",
            "add r3, pc, r3",
            "ldr r4, [r5, 0x10]",
            "ldr r0, [r0, 0xc]",
            "add r2, r3, r2",
            "str r1, [sp, 0x24]",
            "str r2, [sp, 0x40]",
            "ldr r2, [0x0001555c]",
            "str r0, [sp, 0x38]",
            "add r2, r3, r2",
            "str r2, [sp, 0x44]",
            "mov r2, 0x20",
            "mvn r1, 0",
            "ldr r0, [sp, 0x24]",
            "bl sym.imp.memset",
            "mov r0, r4",
            "bl fcn.00014fd8",
            "strd r0, r1, [sp, 0x18]",
            "mov r0, 8",
            "ldrd r2, r3, [sp, 0x18]",
            "mov r1, 0",
            "ldr sl, [sp, 0x38]",
            "adds r2, r2, r0",
            "adc r3, r3, r1",
            "strd r2, r3, [sp, 0x28]",
            "b 0x1551c",
            "ldr r2, [r3, 4]",
            "ldr ip, [sp, 0x3c]",
            "str r2, [r3], 4",
            "cmp r3, ip",
            "bne 0x15080",
            "mov r0, r4",
            "bl sym.avio_r8",
            "ldr r6, [sp, 0x60]",
            "ldr r3, [sp, 0x5c]",
            "ldr r1, [sp, 0x24]",
            "str r0, [sp, 0x64]",
            "lsl r6, r6, 0x10",
            "add r6, r6, r3, lsl 8",
            "ldr r3, [sp, 0x58]",
            "add r6, r6, r3",
            "add r6, r6, r0, lsl 24",
            "add r0, r1, 8",
            "bl fcn.00014f94",
            "ldrd r2, r3, [sp, 0x18]",
            "ldr r1, [sl, 0x1c]",
            "adds r2, r2, r6",
            "adc r3, r3, 0",
            "cmp r1, r3",
            "blo 0x15504",
            "bne 0x150f0",
            "ldr r1, [sl, 0x18]",
            "cmp r1, r2",
            "blo 0x15504",
            "ldr r3, [sp, 0x48]",
            "cmp r3, 0x7f",
            "bhi 0x15504",
            "cmp r3, 0x69",
            "bne 0x15120",
            "ldr r3, [sp, 0x4c]",
            "cmp r3, 0x78",
            "bne 0x1514c",
            "ldr r3, [r5, 0x14]",
            "cmp r0, r3",
            "bhs 0x151a4",
            "b 0x15334",
            "cmp r3, 0x4a",
            "bne 0x15170",
            "ldr r3, [sp, 0x4c]",
            "cmp r3, 0x55",
            "bne 0x151a4",
            "ldr r3, [sp, 0x50]",
            "cmp r3, 0x4e",
            "bne 0x151a4",
            "ldr r3, [sp, 0x54]",
            "cmp r3, 0x4b",
            "b 0x15168",
            "cmp r3, 0x64",
            "bne 0x151a4",
            "ldr r3, [sp, 0x50]",
            "cmp r3, 0x78",
            "bne 0x151a4",
            "ldr r3, [sp, 0x54]",
            "cmp r3, 0x31",
            "bne 0x151a4",
            "b 0x15334",
            "cmp r3, 0x4c",
            "bne 0x151a4",
            "ldr r3, [sp, 0x4c]",
            "cmp r3, 0x49",
            "bne 0x151a4",
            "ldr r3, [sp, 0x50]",
            "cmp r3, 0x53",
            "bne 0x151a4",
            "ldr r3, [sp, 0x54]",
            "cmp r3, 0x54",
            "moveq r0, r4",
            "moveq r2, 4",
            "beq 0x1533c",
            "ldr r0, [sp, 0x24]",
            "bl fcn.00014f94",
            "ldrd r2, r3, [sp, 0x18]",
            "mov r7, r0",
            "ldrd r0, r1, [sl, 0x28]",
            "subs r0, r2, r0",
            "sbc r1, r3, r1",
            "mov r2, 1",
            "mov r3, 0",
            "and r2, r2, r0",
            "and r3, r3, r1",
            "orrs ip, r2, r3",
            "bne 0x151f0",
            "ldr r1, [sp, 0x24]",
            "add r0, r1, 4",
            "bl fcn.00014f94",
            "ldr r3, [r5, 0x14]",
            "cmp r0, r3",
            "blo 0x15504",
            "ldr r3, [sp, 0x50]",
            "cmp r3, 0x69",
            "bne 0x15214",
            "ldr r2, [sp, 0x54]",
            "cmp r2, 0x78",
            "bne 0x15214",
            "ldr r2, [r5, 0x14]",
            "cmp r7, r2",
            "blo 0x15334",
            "ldr r0, [r5, 0x14]",
            "cmp r7, r0",
            "bhs 0x15504",
            "ldr r2, [r5, 0x18]",
            "ldr sb, [r2, r7, lsl 2]",
            "ldr r1, [sb, 0x14]",
            "cmp r1, 0",
            "bne 0x1524c",
            "mov r0, r5",
            "add r1, r1, 0x18",
            "ldr r2, [sp, 0x44]",
            "mov r3, r7",
            "bl sym.imp.av_log",
            "b 0x15504",
            "cmp r0, 1",
            "bls 0x152e4",
            "ldr r8, [r2, 4]",
            "cmp r3, 0x77",
            "ldr fp, [r8, 0x14]",
            "bne 0x152e4",
            "ldr r3, [sp, 0x54]",
            "cmp r7, 0",
            "cmpeq r3, 0x62",
            "bne 0x152e4",
            "ldr r3, [sb, 8]",
            "ldr r7, [r3, 0xd0]",
            "cmp r7, 0",
            "bne 0x152e0",
            "ldr r3, [r8, 8]",
            "ldr r3, [r3, 0xd0]",
            "cmp r3, 1",
            "bne 0x152e4",
            "ldr r2, [r1, 0x28]",
            "movw r3, 0x6463",
            "cmp r2, r3",
            "bne 0x152e4",
            "ldr r2, [fp, 0x28]",
            "movw r3, 0x7762",
            "cmp r2, r3",
            "beq 0x152c0",
            "ldr r3, [fp, 0x2c]",
            "cmp r3, 0",
            "bne 0x152e0",
            "mov r1, 0x18",
            "mov r0, r5",
            "ldr r2, [sp, 0x40]",
            "mov sb, r8",
            "bl sym.imp.av_log",
            "mov r7, 1",
            "mov r1, fp",
            "b 0x152e4",
            "mov r7, 0",
            "ldr r3, [sb, 0x48]",
            "cmp r3, 0",
            "cmpge r6, 0",
            "beq 0x15304",
            "cmp r3, 0x2f",
            "ble 0x15348",
            "mov sl, r1",
            "b 0x1530c",
            "mov sl, r1",
            "mov r6, 0",
            "ldr r2, [sp, 0x34]",
            "cmp r2, 0",
            "bne 0x15334",
            "mov r0, sl",
            "mov r1, r6",
            "bl fcn.00014f54",
            "ldrd r2, r3, [sl]",
            "adds r2, r2, r0",
            "adc r3, r3, r0, asr 31",
            "strd r2, r3, [sl]",
            "mov r0, r4",
            "mov r2, r6",
            "mov r3, 0",
            "bl sym.avio_skip",
            "b 0x15044",
            "ldr r3, [sp, 0x50]",
            "cmp r3, 0x70",
            "bne 0x153cc",
            "ldr r2, [sp, 0x54]",
            "movw ip, 0x404",
            "cmp r6, ip",
            "cmpls r2, 0x63",
            "bne 0x153cc",
            "mov r0, r4",
            "mov sl, r1",
            "bl sym.avio_r8",
            "mov r6, r0",
            "mov r0, r4",
            "bl sym.avio_r8",
            "add r8, r6, r0",
            "add r7, r6, 0xb",
            "sub r8, r8, 1",
            "mov r0, r4",
            "and r8, r8, 0xff",
            "add r7, sl, r7, lsl 2",
            "bl sym.avio_rl16",
            "b 0x153b8",
            "mov r0, r4",
            "add r6, r6, 1",
            "bl sym.avio_rb32",
            "lsr r0, r0, 8",
            "orr r0, r0, 0xff000000",
            "str r0, [r7, 4]!",
            "cmp r6, r8",
            "ble 0x153a0",
            "mov r3, 1",
            "str r3, [sl, 0x430]",
            "b 0x15044",
            "ldr r2, [r1, 0x2c]",
            "cmp r2, 4",
            "ble 0x153fc",
            "ldr r0, [sp, 0x1c]",
            "ldr ip, [sp, 0x2c]",
            "cmp r0, ip",
            "bgt 0x15410",
            "bne 0x153fc",
            "ldr r0, [sp, 0x18]",
            "ldr ip, [sp, 0x28]",
            "cmp r0, ip",
            "bhi 0x15410",
            "cmp r3, 0x7f",
            "bhi 0x15410",
            "ldr r0, [sp, 0x54]",
            "cmp r0, 0x7f",
            "bls 0x15424",
            "ldr ip, [sp, 0x54]",
            "ldr r0, [r1, 0x28]",
            "add ip, ip, r3, lsl 8",
            "cmp ip, r0",
            "bne 0x15504",
            "ldr r0, [sp, 0x34]",
            "mov sl, r1",
            "cmp r0, 0",
            "bne 0x15544",
            "ldr r1, [sp, 0x54]",
            "add r3, r1, r3, lsl 8",
            "ldr r1, [sl, 0x28]",
            "cmp r3, r1",
            "ldrne r1, [sp, 0x34]",
            "addeq r2, r2, 1",
            "streq r2, [sl, 0x2c]",
            "ldr r2, [sp, 0x38]",
            "strne r3, [sl, 0x28]",
            "add r3, r6, 8",
            "strne r1, [sl, 0x2c]",
            "cmp r6, 0",
            "str r7, [r2, 0x3c]",
            "str r3, [sl, 0xc]",
            "str r6, [sl, 8]",
            "bne 0x15480",
            "ldr r3, [sl, 0x18]",
            "cmp r3, 0",
            "bne 0x15548",
            "mov r0, r4",
            "bl fcn.00014fd8",
            "mvn r2, 7",
            "mvn r3, 0",
            "adds r2, r2, r0",
            "adc r3, r3, r1",
            "ldr r1, [sb, 0x80]",
            "cmp r1, 0",
            "beq 0x154dc",
            "ldr r0, [sb, 0x84]",
            "cmp r0, 0",
            "beq 0x154dc",
            "mov ip, 0x18",
            "sub r0, r0, 1",
            "mul r0, ip, r0",
            "add ip, r1, r0",
            "ldr ip, [ip, 4]",
            "cmp ip, r3",
            "blo 0x154dc",
            "bne 0x15544",
            "ldr r1, [r1, r0]",
            "cmp r1, r2",
            "bhs 0x15544",
            "ldrd r0, r1, [sl]",
            "str r6, [sp, 8]",
            "mov r6, 0",
            "str r6, [sp, 0xc]",
            "strd r0, r1, [sp]",
            "mov r1, 1",
            "mov r0, sb",
            "str r1, [sp, 0x10]",
            "bl sym.av_add_index_entry",
            "b 0x15548",
            "ldrd r0, r1, [sp, 0x18]",
            "mov r2, 1",
            "mov r3, 0",
            "adds r0, r0, r2",
            "adc r1, r1, r3",
            "strd r0, r1, [sp, 0x18]",
            "mov r0, r4",
            "bl sym.url_feof",
            "cmp r0, 0",
            "ldreq r3, [sp, 0x24]",
            "beq 0x15080",
            "ldr r6, [r4, 0x48]",
            "ldr r3, [0x00015560]",
            "cmp r6, 0",
            "moveq r6, r3",
            "b 0x15548",
            "mov r6, 0",
            "mov r0, r6",
            "add sp, sp, 0x6c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00014f94": {
        "function_address": "0x00014f94",
        "instructions": [
            "ldr r2, [r0]",
            "sub r3, r2, 0x30",
            "cmp r3, 9",
            "bhi 0x14fc8",
            "ldr r3, [r0, 4]",
            "cmp r3, 0x2f",
            "ble 0x14fc8",
            "cmp r3, 0x39",
            "bgt 0x14fd0",
            "mov r0, 0xa",
            "mla r0, r0, r2, r3",
            "sub r0, r0, 0x210",
            "bx lr",
            "mov r0, 0x64",
            "bx lr",
            "mov r0, 0x64",
            "bx lr"
        ]
    },
    "fcn.00015564": {
        "function_address": "0x00015564",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r6, r0",
            "ldr r5, [r6, 0x10]",
            "sub sp, sp, 0x6c",
            "mov fp, 0",
            "ldr r0, [r0, 0xc]",
            "str r0, [sp, 0x40]",
            "mov r0, r5",
            "bl fcn.00014fd8",
            "strd r0, r1, [sp, 0x58]",
            "mov r0, r5",
            "ldr r1, [sp, 0x40]",
            "ldrd r2, r3, [r1, 0x10]",
            "str fp, [sp]",
            "bl sym.avio_seek",
            "cmp r1, fp",
            "blt 0x15848",
            "mov r7, r5",
            "mov r0, r7",
            "bl sym.url_feof",
            "subs r5, r0, 0",
            "bne 0x15844",
            "mov r0, r7",
            "bl sym.avio_rl32",
            "mov r4, r0",
            "mov r0, r7",
            "bl sym.avio_rl32",
            "ldr r2, [0x0001586c]",
            "mov sl, r0",
            "cmp r4, r2",
            "bne 0x15828",
            "ldr r3, [r6, 0xc]",
            "cmp r0, 0",
            "ldr r4, [r6, 0x10]",
            "str r3, [sp, 0x38]",
            "add r3, r0, 0xf",
            "movge r3, r0",
            "asr r3, r3, 4",
            "cmp r3, 0",
            "str r3, [sp, 0x44]",
            "ble 0x15828",
            "mov r0, r4",
            "mov sb, 0",
            "bl fcn.00014fd8",
            "ldr r8, [sp, 0x38]",
            "strd r0, r1, [sp, 0x48]",
            "mov r0, r4",
            "ldrd r2, r3, [r8, 0x20]",
            "mov r8, 4",
            "str r5, [sp]",
            "adds r2, r2, r8",
            "adc r3, r3, sb",
            "bl sym.avio_seek",
            "mov r0, r6",
            "mov r1, 1",
            "bl fcn.00014ff8",
            "cmp r0, 0",
            "bne 0x1566c",
            "mov r0, r4",
            "bl fcn.00014fd8",
            "mvn r2, 7",
            "mvn r3, 0",
            "adds r2, r2, r0",
            "adc r3, r3, r1",
            "strd r2, r3, [sp, 0x28]",
            "b 0x15678",
            "mov r8, 0",
            "mov sb, 0",
            "strd r8, sb, [sp, 0x28]",
            "ldr sb, [sp, 0x38]",
            "mvn ip, 0",
            "ldrd r2, r3, [sp, 0x48]",
            "mov r0, r4",
            "str ip, [sb, 0x3c]",
            "mov sb, 1",
            "str fp, [sp]",
            "bl sym.avio_seek",
            "ldr r2, [sp, 0x28]",
            "mov r1, 0",
            "ldr r3, [sp, 0x2c]",
            "mov r0, 0",
            "strd r0, r1, [sp, 0x48]",
            "mvn r1, 0",
            "str fp, [sp, 0x3c]",
            "orr r2, r2, r3",
            "str r1, [sp, 0x34]",
            "str r2, [sp, 0x64]",
            "str r7, [sp, 0x54]",
            "mov r0, r4",
            "bl sym.url_feof",
            "subs r3, r0, 0",
            "bne 0x15824",
            "mov r0, r4",
            "str r3, [sp, 0x20]",
            "bl sym.avio_rl32",
            "mov r5, r0",
            "mov r0, r4",
            "bl sym.avio_rl32",
            "str r0, [sp, 0x1c]",
            "mov r0, r4",
            "bl sym.avio_rl32",
            "mov r2, r0",
            "mov r0, r4",
            "str r2, [sp, 0x24]",
            "mov r8, 0xa",
            "bl sym.avio_rl32",
            "and r1, r5, 0xff",
            "ubfx r5, r5, 8, 8",
            "mla r5, r8, r1, r5",
            "ldr r1, [r6, 0x14]",
            "ldr r2, [sp, 0x24]",
            "mov r7, r0",
            "ldr r3, [sp, 0x20]",
            "sub r5, r5, 0x210",
            "cmp r5, r1",
            "bhs 0x157f4",
            "ldr r1, [r6, 0x18]",
            "ldr ip, [sp, 0x64]",
            "ldr r0, [r1, r5, lsl 2]",
            "cmp ip, 0",
            "moveq r1, 0",
            "andne r1, sb, 1",
            "cmp r1, 0",
            "ldr r5, [r0, 0x14]",
            "beq 0x15778",
            "cmp r7, 0",
            "moveq sb, 1",
            "beq 0x15778",
            "ldrd r8, sb, [sp, 0x28]",
            "subs r8, r8, r2",
            "sbc sb, sb, 0",
            "strd r8, sb, [sp, 0x48]",
            "mov sb, r3",
            "ldr ip, [sp, 0x48]",
            "ldr r1, [sp, 0x34]",
            "add r8, r2, ip",
            "cmp r1, r8",
            "ldreq r2, [sp, 0x38]",
            "moveq r3, 1",
            "streq r3, [r2, 0x38]",
            "beq 0x157d4",
            "cmp r7, 0",
            "bne 0x157ac",
            "ldr r3, [r5, 0x18]",
            "cmp r3, 0",
            "bne 0x157d4",
            "ldrd r2, r3, [r5, 0x20]",
            "str r7, [sp, 8]",
            "str fp, [sp, 0xc]",
            "strd r2, r3, [sp]",
            "ldr r3, [sp, 0x1c]",
            "ubfx r2, r3, 4, 1",
            "mov r3, fp",
            "str r2, [sp, 0x10]",
            "mov r2, r8",
            "bl sym.av_add_index_entry",
            "mov r0, r5",
            "mov r1, r7",
            "bl fcn.00014f54",
            "ldrd r2, r3, [r5, 0x20]",
            "str r8, [sp, 0x34]",
            "adds r2, r2, r0",
            "adc r3, r3, r0, asr 31",
            "strd r2, r3, [r5, 0x20]",
            "ldr r8, [sp, 0x3c]",
            "ldr ip, [sp, 0x44]",
            "add r8, r8, 1",
            "cmp r8, ip",
            "str r8, [sp, 0x3c]",
            "blt 0x156c4",
            "ldr r0, [sp, 0x40]",
            "mov r3, 2",
            "ldr r5, [sp, 0x54]",
            "mov r4, 0",
            "str r3, [r0, 0x30]",
            "b 0x1584c",
            "ldr r7, [sp, 0x54]",
            "and r2, sl, 1",
            "mov r0, r7",
            "add r2, r2, sl",
            "mov r3, 0",
            "bl sym.avio_skip",
            "cmp r1, 0",
            "bge 0x155ac",
            "mov r5, r7",
            "mvn r4, 0",
            "mov r3, 0",
            "mov r0, r5",
            "str r3, [sp]",
            "ldrd r2, r3, [sp, 0x58]",
            "bl sym.avio_seek",
            "mov r0, r4",
            "add sp, sp, 0x6c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.000204a4": {
        "function_address": "0x000204a4",
        "instructions": [
            "push {r0, r1, r2, r3, r4, lr}",
            "movw r3, 0x8144",
            "str r2, [r0, r3]",
            "sub r3, r3, 4",
            "mov r4, r0",
            "ldr r3, [r0, r3]",
            "cmp r3, 0",
            "beq 0x2050c",
            "ldr r1, [r0, 0xc]",
            "mov ip, sp",
            "ldr r3, [r0]",
            "mov r0, 8",
            "str r0, [sp, 8]",
            "ldr r1, [r1, 8]",
            "add r3, r3, 0x14",
            "ldr r1, [r1, 4]",
            "str r1, [sp, 0xc]",
            "add r1, sp, r0",
            "ldm r1, {r0, r1}",
            "stm ip, {r0, r1}",
            "mov r0, r2",
            "asr r1, r0, 0x1f",
            "ldm r3, {r2, r3}",
            "bl sym.imp.av_rescale_q",
            "movw r3, 0x8148",
            "strd r0, r1, [r4, r3]",
            "mov r3, 0",
            "str r3, [r4, 0x7c]",
            "str r3, [r4, 0x34]",
            "str r3, [r4, 0x10c]",
            "str r3, [r4, 0xc4]",
            "pop {r0, r1, r2, r3, r4, pc}"
        ]
    },
    "fcn.00015dc8": {
        "function_address": "0x00015dc8",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r7, r1",
            "ldr r6, [0x00015fbc]",
            "sub sp, sp, 0x128",
            "mov r8, r0",
            "ldr sl, [r1, 0x10]",
            "ldr r1, [0x00015fc0]",
            "add r6, pc, r6",
            "mov r0, sl",
            "add r1, r6, r1",
            "bl sym.imp.strcmp",
            "subs r4, r0, 0",
            "bne 0x15fb0",
            "ldrh r3, [sl, 5]",
            "cmp r3, 2",
            "movne r0, r4",
            "bne 0x15fb4",
            "ldr r1, [r7, 0x14]",
            "add r3, r3, 0x30",
            "mov r2, r4",
            "str r3, [sp, 0x124]",
            "add r0, sl, 7",
            "mov r3, r4",
            "sub r1, r1, 7",
            "ldr r5, [r8, 0x14]",
            "str r4, [sp]",
            "str r4, [sp, 4]",
            "str r4, [sp, 8]",
            "bl sym.avio_alloc_context",
            "str r0, [sp, 0x120]",
            "bl sym.avio_rl32",
            "mov sl, r0",
            "ldr r0, [sp, 0x120]",
            "ldr r2, [r0, 0xc]",
            "ldr r3, [r0, 8]",
            "rsb r3, r3, r2",
            "cmp sl, r3",
            "bhi 0x15fa8",
            "add sb, sp, 0x14",
            "mov r1, sl",
            "mov r2, sb",
            "mov r3, 0x100",
            "bl sym.avio_get_str16le",
            "mov r3, r4",
            "rsb r2, r0, sl",
            "ldr r0, [sp, 0x120]",
            "bl sym.avio_skip",
            "ldrb r3, [sp, 0x14]",
            "cmp r3, 0",
            "beq 0x15ea8",
            "ldr r1, [0x00015fc4]",
            "add r0, r8, 0x138",
            "mov r2, sb",
            "mov r3, r4",
            "add r1, r6, r1",
            "bl sym.imp.av_dict_set",
            "ldr r0, [sp, 0x120]",
            "add r4, sp, 0x114",
            "bl sym.avio_rl16",
            "ldr r0, [sp, 0x120]",
            "bl sym.avio_rl32",
            "ldr r3, [sp, 0x120]",
            "mov r0, r4",
            "mov r1, 0",
            "mov r2, 0xc",
            "ldr sl, [r3, 8]",
            "ldr sb, [r3, 0xc]",
            "bl sym.imp.memset",
            "mov r0, r4",
            "mov r1, 1",
            "rsb sb, sl, sb",
            "add r2, sp, 0x124",
            "str sl, [sp, 0x118]",
            "str sb, [sp, 0x11c]",
            "bl sym.av_probe_input_format2",
            "subs r4, r0, 0",
            "beq 0x15fa8",
            "bl sym.avformat_alloc_context",
            "cmp r0, 0",
            "str r0, [r5, 0x438]",
            "beq 0x15fa8",
            "ldr r3, [sp, 0x120]",
            "mov r2, r4",
            "ldr r1, [0x00015fc8]",
            "str r3, [r0, 0x10]",
            "add r0, r5, 0x430",
            "add r0, r0, 8",
            "add r1, r6, r1",
            "mov r3, 0",
            "bl sym.avformat_open_input",
            "subs r4, r0, 0",
            "bne 0x15f88",
            "add r1, r5, 0x440",
            "ldr r0, [r5, 0x438]",
            "bl sym.av_read_packet",
            "ldr r3, [r5, 0x438]",
            "mov r2, 0x400",
            "ldr r0, [r8, 8]",
            "ldr r3, [r3, 0x18]",
            "ldr r3, [r3]",
            "ldr r1, [r3, 8]",
            "bl sym.imp.memcpy",
            "ldr r3, [r5, 0x438]",
            "mov r0, r8",
            "mov r1, 0x40",
            "ldr r3, [r3, 0x18]",
            "ldr r3, [r3]",
            "ldr r2, [r3, 8]",
            "str r4, [r2, 0x18]",
            "ldr r2, [r3, 0x38]",
            "ldr r3, [r3, 0x3c]",
            "bl sym.avpriv_set_pts_info",
            "ldr r3, [r7, 0x10]",
            "mov r0, r7",
            "mov r1, 0",
            "mov r2, 0x48",
            "str r3, [r5, 0x488]",
            "bl sym.imp.memset",
            "mov r0, 1",
            "b 0x15fb4",
            "add r0, sp, 0x120",
            "bl sym.imp.av_freep",
            "mov r0, 0",
            "add sp, sp, 0x128",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "fcn.000168d8": {
        "function_address": "0x000168d8",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r6, r0",
            "ldr r4, [r0, 0x10]",
            "sub sp, sp, 0x64",
            "ldr r2, [0x00016d18]",
            "ldr r5, [r0, 0xc]",
            "mov r0, r4",
            "str r1, [sp, 0x48]",
            "add r2, pc, r2",
            "str r2, [sp, 0x34]",
            "bl sym.avio_rl16",
            "mov sb, r0",
            "mov r0, r4",
            "bl sym.avio_r8",
            "mov sl, r0",
            "mov r0, r4",
            "bl sym.avio_r8",
            "mov r8, r0",
            "mov r0, r4",
            "bl sym.avio_rl32",
            "str r0, [sp, 0x54]",
            "mov r0, r4",
            "bl sym.avio_rl32",
            "mov r7, r0",
            "mov r0, r4",
            "bl sym.avio_rl64",
            "and r3, r7, 0xff",
            "mov fp, r1",
            "ubfx r7, r7, 8, 8",
            "mov r1, 0xa",
            "mla r7, r1, r3, r7",
            "ldr r3, [r6, 0x14]",
            "mov r2, r0",
            "ldrd r0, r1, [r5, 0x18]",
            "sub r7, r7, 0x210",
            "cmp r7, r3",
            "movlo r3, 0",
            "movhs r3, 1",
            "strd r0, r1, [sp, 0x28]",
            "orrs r3, r3, r7, lsr 31",
            "bne 0x16d0c",
            "ldr r3, [r6, 0x18]",
            "cmp sl, 0",
            "ldr r3, [r3, r7, lsl 2]",
            "str r3, [sp, 0x4c]",
            "ldr r7, [r3, 0x14]",
            "bne 0x16d0c",
            "mov r0, r4",
            "str r2, [sp, 0x24]",
            "bl sym.avio_rl32",
            "subs r1, r8, 0",
            "movne r1, 1",
            "cmp sb, 2",
            "cmpne r8, 0",
            "str r1, [sp, 0x50]",
            "ldr r2, [sp, 0x24]",
            "bne 0x16d0c",
            "cmp r8, 1",
            "bgt 0x16d0c",
            "mov r3, fp",
            "mov sl, r2",
            "strd r2, r3, [sp, 0x38]",
            "mov r8, fp",
            "ldr r2, [sp, 0x2c]",
            "mov ip, 1",
            "cmp r2, fp",
            "bgt 0x169f4",
            "bne 0x169f8",
            "ldr r3, [sp, 0x28]",
            "cmp r3, sl",
            "bls 0x169f8",
            "mov ip, 0",
            "ldr r1, [sp, 0x2c]",
            "ldrd r2, r3, [sp, 0x28]",
            "asr r1, r1, 0x1f",
            "str r1, [sp, 0x40]",
            "str r1, [sp, 0x44]",
            "ldrd r0, r1, [sp, 0x40]",
            "subs r0, r0, r2",
            "sbc r1, r1, r3",
            "strd r0, r1, [sp, 0x40]",
            "ands r1, ip, r1, lsr 31",
            "beq 0x16aa0",
            "ldr r3, [sp, 0x34]",
            "mov r0, r6",
            "ldr r2, [0x00016d1c]",
            "mov r1, 0x10",
            "mov fp, 0",
            "add r2, r3, r2",
            "bl sym.imp.av_log",
            "mov r3, r8",
            "asr r8, r8, 0x1f",
            "cmp r3, sl",
            "bne 0x16d0c",
            "cmp r8, fp",
            "bne 0x16d0c",
            "ldr sb, [sp, 0x2c]",
            "mov r2, 1",
            "cmp sb, r8",
            "bgt 0x16a7c",
            "bne 0x16a78",
            "ldr r0, [sp, 0x28]",
            "cmp r0, r3",
            "bhi 0x16a7c",
            "mov r2, 0",
            "ldr r1, [sp, 0x2c]",
            "cmp r1, 0",
            "movgt r2, 0",
            "andle r2, r2, 1",
            "cmp r2, 0",
            "beq 0x16d0c",
            "mov r2, r3",
            "mov r3, r8",
            "strd r2, r3, [sp, 0x38]",
            "ldrd r0, r1, [sp, 0x38]",
            "mvn r2, 0",
            "mvn r3, 0",
            "mov r8, 0",
            "strd r2, r3, [sp, 0x40]",
            "mov r2, 8",
            "mov r3, 0",
            "mov fp, r8",
            "subs r0, r0, r2",
            "sbc r1, r1, r3",
            "str r8, [sp, 0x1c]",
            "strd r0, r1, [sp, 0x38]",
            "mov sl, r6",
            "b 0x16cec",
            "ldr r3, [sp, 0x50]",
            "cmp r3, 0",
            "beq 0x16be8",
            "mov r0, r4",
            "bl sym.avio_rl32",
            "mov r6, r0",
            "mov r0, r4",
            "bl sym.avio_rl32",
            "mov sb, r0",
            "mov r0, r4",
            "bl sym.url_feof",
            "cmp r0, 0",
            "bne 0x16d0c",
            "ldrd r0, r1, [sp, 0x38]",
            "adds r0, r0, r6",
            "bic r6, sb, 0x80000000",
            "adc r1, r1, 0",
            "strd r0, r1, [sp, 0x28]",
            "ldr r1, [sp, 0x40]",
            "cmp r1, r0",
            "bne 0x16b3c",
            "ldr r2, [sp, 0x44]",
            "ldr r3, [sp, 0x2c]",
            "cmp r2, r3",
            "beq 0x16b5c",
            "ldr r8, [sp, 0x28]",
            "ldr r0, [sp, 0x38]",
            "cmp r8, r0",
            "bne 0x16b84",
            "ldr r1, [sp, 0x2c]",
            "ldr r2, [sp, 0x3c]",
            "cmp r1, r2",
            "bne 0x16b84",
            "ldr r8, [sp, 0x40]",
            "mov r3, 1",
            "ldr r0, [sp, 0x28]",
            "str r3, [r5, 0x38]",
            "cmp r8, r0",
            "bne 0x16b84",
            "ldr r1, [sp, 0x44]",
            "ldr r2, [sp, 0x2c]",
            "cmp r1, r2",
            "beq 0x16bc0",
            "cmp r6, 0",
            "bne 0x16b98",
            "ldr r3, [r7, 0x18]",
            "cmp r3, 0",
            "bne 0x16bc0",
            "ldrd r2, r3, [r7, 0x20]",
            "mvn sb, sb",
            "lsr sb, sb, 0x1f",
            "ldr r0, [sp, 0x4c]",
            "str r6, [sp, 8]",
            "strd r2, r3, [sp]",
            "ldrd r2, r3, [sp, 0x28]",
            "str fp, [sp, 0xc]",
            "str sb, [sp, 0x10]",
            "bl sym.av_add_index_entry",
            "mov r0, r7",
            "mov r1, r6",
            "bl fcn.00014f54",
            "ldrd r2, r3, [r7, 0x20]",
            "ldrd r8, sb, [sp, 0x28]",
            "adds r2, r2, r0",
            "adc r3, r3, r0, asr 31",
            "strd r8, sb, [sp, 0x40]",
            "strd r2, r3, [r7, 0x20]",
            "b 0x16ce0",
            "mov r0, r4",
            "bl sym.avio_rl64",
            "strd r0, r1, [sp, 0x28]",
            "mov r0, r4",
            "bl sym.avio_rl32",
            "mov r0, r4",
            "bl sym.avio_rl32",
            "mov r6, r0",
            "mov r0, r4",
            "bl sym.url_feof",
            "cmp r0, 0",
            "bne 0x16d0c",
            "mov r0, r4",
            "bl fcn.00014fd8",
            "ldr r3, [r5, 0x44]",
            "strd r0, r1, [sp, 0x58]",
            "cmp r3, 0x3e8",
            "ble 0x16c4c",
            "ldr r2, [0x00016d20]",
            "mov r6, sl",
            "ldr sb, [sp, 0x34]",
            "mov r0, sl",
            "mov r1, 0x10",
            "add r2, sb, r2",
            "b 0x16cd8",
            "ldrd r2, r3, [sp, 0x28]",
            "mov r8, 8",
            "ldr r0, [sp, 0x50]",
            "mov sb, 0",
            "adds r2, r2, r8",
            "str r0, [sp]",
            "adc r3, r3, sb",
            "mov r0, r4",
            "bl sym.avio_seek",
            "cmp r1, 0",
            "blt 0x16d0c",
            "ldr r3, [r5, 0x44]",
            "mov r0, sl",
            "ldr r1, [sp, 0x48]",
            "add r3, r3, 1",
            "str r3, [r5, 0x44]",
            "bl fcn.000168d8",
            "ldr r3, [r5, 0x44]",
            "mov r0, r4",
            "sub r3, r3, 1",
            "str r3, [r5, 0x44]",
            "ldrd r2, r3, [sp, 0x58]",
            "str fp, [sp]",
            "bl sym.avio_seek",
            "cmp r1, 0",
            "ldrge sb, [sp, 0x48]",
            "addge sb, sb, r6",
            "strge sb, [sp, 0x48]",
            "bge 0x16ce0",
            "ldr r2, [0x00016d24]",
            "mov r6, sl",
            "ldr r3, [sp, 0x34]",
            "mov r0, sl",
            "mov r1, 0x10",
            "add r2, r3, r2",
            "bl sym.imp.av_log",
            "b 0x16d0c",
            "ldr r8, [sp, 0x1c]",
            "add r8, r8, 1",
            "str r8, [sp, 0x1c]",
            "ldr sb, [sp, 0x1c]",
            "ldr r0, [sp, 0x54]",
            "cmp sb, r0",
            "blt 0x16ad8",
            "mov r3, 2",
            "mov r0, 0",
            "str r3, [r5, 0x30]",
            "b 0x16d10",
            "mvn r0, 0",
            "add sp, sp, 0x64",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00051188": {
        "function_address": "0x00051188",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x3c",
            "ldr r6, [r0, 0x10]",
            "mov r5, r0",
            "mov r7, 1",
            "strd r2, r3, [sp, 8]",
            "mov r2, 0",
            "mov r3, 0",
            "mov r0, r6",
            "str r7, [sp]",
            "bl sym.avio_seek",
            "ldrd r2, r3, [sp, 8]",
            "ldr r4, [0x0005139c]",
            "adds r2, r2, r0",
            "mvn r0, 6",
            "adc r3, r3, r1",
            "mvn r1, 0",
            "strd r2, r3, [sp, 8]",
            "adds r2, r2, r0",
            "adc r3, r3, r1",
            "add r1, sp, 0x2c",
            "strd r2, r3, [sp, 0x10]",
            "add r3, r5, 0x4b0",
            "add r3, r3, 8",
            "add r4, pc, r4",
            "str r1, [sp, 0x1c]",
            "str r3, [sp, 0x24]",
            "b 0x51350",
            "mov r2, 0",
            "mov r0, r6",
            "str r2, [sp, 0x2c]",
            "strb r2, [sp, 0x30]",
            "bl sym.avio_rl32",
            "str r0, [sp, 0x20]",
            "mov r0, r6",
            "bl sym.avio_rl32",
            "ldr ip, [sp, 0xc]",
            "mov r2, r0",
            "mov r3, 0",
            "cmp r3, ip",
            "bgt 0x51284",
            "bne 0x5123c",
            "ldr r1, [sp, 8]",
            "cmp r0, r1",
            "bhi 0x51284",
            "ldrd r8, sb, [sp, 8]",
            "mov r7, 1",
            "subs r8, r8, r2",
            "sbc sb, sb, r3",
            "cmp fp, sb",
            "bgt 0x51264",
            "bne 0x51260",
            "cmp sl, r8",
            "bhi 0x51264",
            "mov r7, 0",
            "mvn r0, 0",
            "mov r1, 0",
            "eor r0, r0, r2",
            "eor r1, r1, r3",
            "orrs ip, r0, r1",
            "orreq r7, r7, 1",
            "tst r7, 1",
            "beq 0x51294",
            "mov r0, r5",
            "mov r1, 0x10",
            "ldr r2, [0x000513a0]",
            "b 0x51324",
            "mov r8, 1",
            "mov sb, 0",
            "and r8, r8, r2",
            "and sb, sb, r3",
            "adds r8, r8, r2",
            "add r0, r8, 1",
            "adc sb, sb, r3",
            "bl sym.imp.av_malloc",
            "cmp r0, 0",
            "mov r1, r0",
            "str r0, [sp, 0x34]",
            "bne 0x512e0",
            "ldr r2, [0x000513a4]",
            "mov r0, r5",
            "add r1, r1, 0x10",
            "add r2, r4, r2",
            "bl sym.imp.av_log",
            "mvn r0, 0xb",
            "b 0x51394",
            "ldr r0, [sp, 0x20]",
            "ldr r2, [sp, 0x1c]",
            "str r0, [r2]",
            "mov r2, r8",
            "mov r0, r6",
            "bl sym.avio_read",
            "cmp r0, r8",
            "mov r2, r0",
            "asr r3, r2, 0x1f",
            "bne 0x51310",
            "cmp r3, sb",
            "beq 0x51334",
            "add r0, sp, 0x34",
            "bl sym.imp.av_freep",
            "ldr r2, [0x000513a8]",
            "mov r0, r5",
            "mov r1, 0x10",
            "add r2, r4, r2",
            "bl sym.imp.av_log",
            "ldr r0, [0x000513ac]",
            "b 0x51394",
            "ldr r3, [sp, 0x34]",
            "strb r7, [r3, r0]",
            "mov r3, 8",
            "ldr r0, [sp, 0x24]",
            "ldr r1, [sp, 0x1c]",
            "ldr r2, [sp, 0x34]",
            "bl sym.imp.av_dict_set",
            "mov r3, 1",
            "mov r0, r6",
            "str r3, [sp]",
            "mov r2, 0",
            "mov r3, 0",
            "bl sym.avio_seek",
            "subs fp, r1, 0",
            "mov sl, r0",
            "blt 0x51390",
            "ldr ip, [sp, 0x14]",
            "cmp ip, fp",
            "bgt 0x511f8",
            "bne 0x51390",
            "ldr r0, [sp, 0x10]",
            "cmp r0, sl",
            "bhi 0x511f8",
            "mov r0, 0",
            "add sp, sp, 0x3c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00050d10": {
        "function_address": "0x00050d10",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r5, r1",
            "mov r4, r0",
            "bl sym.avio_rl32",
            "ldr r6, [r5, 8]",
            "mov r0, r4",
            "bl sym.avio_rl32",
            "str r0, [r6, 0x28]",
            "mov r0, r4",
            "ldr r6, [r5, 8]",
            "bl sym.avio_rl32",
            "str r0, [r6, 0x2c]",
            "mov r0, r4",
            "bl sym.avio_rl16",
            "ldr r5, [r5, 8]",
            "mov r0, r4",
            "bl sym.avio_rl16",
            "str r0, [r5, 0x174]",
            "mov r0, r4",
            "bl sym.avio_rl32",
            "mov r5, r0",
            "mov r0, r4",
            "bl sym.avio_rl32",
            "mov r0, r4",
            "bl sym.avio_rl32",
            "mov r0, r4",
            "bl sym.avio_rl32",
            "mov r0, r4",
            "bl sym.avio_rl32",
            "mov r0, r4",
            "bl sym.avio_rl32",
            "mov r0, r5",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.000328b8": {
        "function_address": "0x000328b8",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r4, r0",
            "add r0, r0, 0x4b0",
            "mov r6, r1",
            "add r0, r0, 8",
            "mov r7, r2",
            "mov r5, 0",
            "bl fcn.000327c4",
            "b 0x328f8",
            "ldr r3, [r4, 0x18]",
            "mov r1, r6",
            "mov r2, r7",
            "ldr r0, [r3, r5, lsl 2]",
            "add r5, r5, 1",
            "add r0, r0, 0x138",
            "bl fcn.000327c4",
            "ldr r3, [r4, 0x14]",
            "cmp r5, r3",
            "blo 0x328dc",
            "mov r5, 0",
            "b 0x32928",
            "ldr r3, [r4, 0x4a4]",
            "mov r1, r6",
            "mov r2, r7",
            "ldr r0, [r3, r5, lsl 2]",
            "add r5, r5, 1",
            "add r0, r0, 0x20",
            "bl fcn.000327c4",
            "ldr r3, [r4, 0x4a0]",
            "cmp r5, r3",
            "blo 0x3290c",
            "mov r5, 0",
            "b 0x32958",
            "ldr r3, [r4, 0x488]",
            "mov r1, r6",
            "mov r2, r7",
            "ldr r0, [r3, r5, lsl 2]",
            "add r5, r5, 1",
            "add r0, r0, 0x14",
            "bl fcn.000327c4",
            "ldr r3, [r4, 0x484]",
            "cmp r5, r3",
            "blo 0x3293c",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.00019104": {
        "function_address": "0x00019104",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r7, r2",
            "ldr r2, [r0]",
            "mov r8, r1",
            "mov r4, r0",
            "ldr r3, [r0, 8]",
            "add r6, r7, r2",
            "cmn r6, 0xc0000001",
            "movls r1, 0",
            "movhi r1, 1",
            "cmp r6, r2",
            "movhs r2, r1",
            "orrlo r2, r1, 1",
            "cmp r2, 0",
            "moveq r5, r3",
            "beq 0x19158",
            "b 0x191c0",
            "cmp r5, 0",
            "beq 0x19164",
            "add r5, r5, r5, lsr 1",
            "add r5, r5, 1",
            "cmp r6, r5",
            "bhi 0x19148",
            "b 0x19168",
            "mov r5, r6",
            "cmp r5, r3",
            "bls 0x19194",
            "ldr r0, [r4, 0xc]",
            "mov r1, 1",
            "mov r2, r5",
            "bl sym.imp.av_realloc_f",
            "cmp r0, 0",
            "str r0, [r4, 0xc]",
            "mvneq r7, 0xb",
            "beq 0x191c4",
            "str r5, [r4, 8]",
            "ldr r3, [r4]",
            "mov r1, r8",
            "ldr r0, [r4, 0xc]",
            "mov r2, r7",
            "add r0, r0, r3",
            "bl sym.imp.memcpy",
            "ldr r3, [r4, 4]",
            "str r6, [r4]",
            "cmp r6, r3",
            "strgt r6, [r4, 4]",
            "b 0x191c4",
            "mvn r7, 0",
            "mov r0, r7",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "sym.imp.av_realloc_f": {
        "function_address": "0x000099c0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0xb08]!"
        ]
    },
    "fcn.000751c0": {
        "function_address": "0x000751c0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x24",
            "ldr fp, [0x000754f8]",
            "mov sb, r0",
            "mov sl, r3",
            "str r1, [sp, 0x1c]",
            "mov r1, 0",
            "ldr r6, [r0, 0xc]",
            "add fp, pc, fp",
            "ldr r7, [r2, 8]",
            "mvn r2, 0",
            "ldr r8, [r0, 0x10]",
            "mov r0, 1",
            "str r0, [sp, 0xc]",
            "str r1, [sp, 0x14]",
            "str r2, [sp, 0x10]",
            "b 0x753e8",
            "mov r0, r8",
            "bl sym.avio_r8",
            "cmp r0, 0",
            "str r0, [sp, 0x18]",
            "beq 0x754ec",
            "mov r0, r8",
            "bl sym.avio_rl24",
            "cmp r0, 0",
            "stm r6, {r0, r4}",
            "bne 0x75270",
            "ldr r3, [sb, 0x10]",
            "ldr r3, [r3, 0x54]",
            "cmp r3, 0",
            "beq 0x754ec",
            "mov r0, r8",
            "bl sym.avio_size",
            "mov r3, 1",
            "mov r4, r0",
            "mov r5, r1",
            "str r3, [sp]",
            "mov r0, r8",
            "mov r2, 0",
            "mov r3, 0",
            "bl sym.avio_seek",
            "subs r4, r4, r0",
            "sbc r5, r5, r1",
            "strd r4, r5, [r6]",
            "ldr r0, [sp, 0x18]",
            "sub sl, sl, 4",
            "sub r3, r0, 1",
            "cmp r3, 8",
            "addls pc, pc, r3, lsl 2",
            "b 0x753c8",
            "b 0x752ac",
            "b 0x753e8",
            "b 0x753c8",
            "b 0x753c8",
            "b 0x753c8",
            "b 0x753c8",
            "b 0x753c8",
            "b 0x75318",
            "b 0x75368",
            "mov r0, r8",
            "sub sl, sl, 2",
            "bl sym.avio_r8",
            "rsb r1, r0, 0x100",
            "ldr r0, [0x000754fc]",
            "bl fcn.0007d264",
            "ldr r1, [sp, 0x14]",
            "ldr r2, [sp, 0xc]",
            "cmp r1, 0",
            "movne r0, r1",
            "str r2, [r7, 0x40]",
            "str r0, [r7, 0x3c]",
            "mov r0, r8",
            "bl sym.avio_r8",
            "str r0, [sp, 0x10]",
            "ldr r0, [r7, 0xd4]",
            "bl sym.imp.av_get_bits_per_sample",
            "ldrd r2, r3, [r6]",
            "mvn r1, 0",
            "str r0, [r7, 0x174]",
            "mvn r0, 1",
            "adds r2, r2, r0",
            "adc r3, r3, r1",
            "mov r1, 1",
            "strd r2, r3, [r6]",
            "str r1, [sp, 0xc]",
            "b 0x753e8",
            "mov r0, r8",
            "sub sl, sl, 4",
            "bl sym.avio_rl16",
            "mov r4, r0",
            "mov r0, r8",
            "bl sym.avio_r8",
            "mov r0, r8",
            "bl sym.avio_r8",
            "add r0, r0, 1",
            "rsb r1, r4, 0x10000",
            "str r0, [sp, 0xc]",
            "ldr r2, [sp, 0xc]",
            "ldr r0, [0x00075500]",
            "mul r1, r2, r1",
            "bl fcn.0007d264",
            "mov r1, 0",
            "str r0, [sp, 0x14]",
            "mov r0, 0",
            "strd r0, r1, [r6]",
            "b 0x753e8",
            "mov r0, r8",
            "sub sl, sl, 0xc",
            "bl sym.avio_rl32",
            "str r0, [r7, 0x3c]",
            "mov r0, r8",
            "bl sym.avio_r8",
            "str r0, [r7, 0x174]",
            "mov r0, r8",
            "bl sym.avio_r8",
            "str r0, [r7, 0x40]",
            "mov r0, r8",
            "bl sym.avio_rl16",
            "mov r2, 4",
            "str r0, [sp, 0x10]",
            "mov r3, 0",
            "mov r0, r8",
            "bl sym.avio_skip",
            "ldrd r2, r3, [r6]",
            "mvn r0, 0xb",
            "mvn r1, 0",
            "adds r2, r2, r0",
            "adc r3, r3, r1",
            "strd r2, r3, [r6]",
            "b 0x753e8",
            "ldrd r2, r3, [r6]",
            "mov r0, r8",
            "bl sym.avio_skip",
            "ldr r3, [r6]",
            "mov r2, 0",
            "rsb sl, r3, sl",
            "mov r3, 0",
            "strd r2, r3, [r6]",
            "ldm r6, {r3, r4}",
            "orr r4, r3, r4",
            "cmp r4, 0",
            "beq 0x75204",
            "ldr r0, [sp, 0x10]",
            "cmp r0, 0",
            "blt 0x75484",
            "ldr r3, [0x00075504]",
            "ldr r1, [sp, 0x10]",
            "ldr r0, [fp, r3]",
            "bl fcn.0006ffc8",
            "ldr r3, [r7, 0xd4]",
            "cmp r3, 0",
            "streq r0, [r7, 0xd4]",
            "beq 0x75440",
            "cmp r3, r0",
            "beq 0x75440",
            "ldr r2, [0x00075508]",
            "mov r0, sb",
            "mov r1, 0x18",
            "add r2, fp, r2",
            "bl sym.imp.av_log",
            "ldr r3, [r7, 0xd4]",
            "cmp r3, 0",
            "bne 0x75484",
            "ldr r3, [sb, 0x490]",
            "ldr r2, [0x0007550c]",
            "cmp r3, 0",
            "bne 0x75474",
            "mov r0, sb",
            "mov r1, 0x10",
            "add r2, fp, r2",
            "bl sym.imp.av_log",
            "mvn r0, 0x15",
            "b 0x754f0",
            "mov r0, sb",
            "mov r1, 0x18",
            "add r2, fp, r2",
            "bl sym.imp.av_log",
            "ldr r2, [r7, 0x3c]",
            "cmp sl, 0",
            "ldr r3, [r7, 0x40]",
            "movle sl, 0x800",
            "ldrd r0, r1, [r6]",
            "mov r4, sl",
            "asr r5, r4, 0x1f",
            "mul r3, r2, r3",
            "ldr r2, [r7, 0x174]",
            "cmp r5, r1",
            "mul r3, r2, r3",
            "mov r2, sl",
            "str r3, [r7, 4]",
            "bgt 0x754c8",
            "bne 0x754cc",
            "cmp sl, r0",
            "bls 0x754cc",
            "mov r2, r0",
            "subs r0, r0, r2",
            "sbc r1, r1, r2, asr 31",
            "strd r0, r1, [r6]",
            "mov r0, r8",
            "ldr r1, [sp, 0x1c]",
            "add sp, sp, 0x24",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "b sym.av_get_packet",
            "mvn r0, 4",
            "add sp, sp, 0x24",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0001ac34": {
        "function_address": "0x0001ac34",
        "instructions": [
            "push {r0, r1, r2, r4, r5, r6, r7, r8, sl, lr}",
            "mov r8, 1",
            "ldr r5, [r0, 0xc]",
            "mov r7, r0",
            "mov r6, r1",
            "mov r2, 0",
            "str r8, [sp]",
            "mov r3, 0",
            "ldr r0, [r0, 0x10]",
            "bl sym.avio_seek",
            "mov r1, r6",
            "mov sl, r0",
            "ldr r2, [r5, 0xc]",
            "mov r0, r7",
            "ldr r3, [r5, 0x28]",
            "bl fcn.000751c0",
            "mov r3, 0",
            "mov r4, r0",
            "mov r2, 0",
            "ldr r0, [r7, 0x10]",
            "str r8, [sp]",
            "bl sym.avio_seek",
            "ldr r3, [r5, 0x28]",
            "rsb r0, sl, r0",
            "cmn r4, 5",
            "moveq r4, 0",
            "rsb r3, r0, r3",
            "str r3, [r5, 0x28]",
            "beq 0x1accc",
            "cmp r4, 0",
            "blt 0x1accc",
            "ldr r3, [r5, 0xc]",
            "mov r4, r0",
            "ldr r3, [r3]",
            "str r3, [r6, 0x18]",
            "ldr r3, [r6, 0x1c]",
            "orr r3, r3, r8",
            "str r3, [r6, 0x1c]",
            "mov r0, r4",
            "pop {r1, r2, r3, r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "fcn.0007db6c": {
        "function_address": "0x0007db6c",
        "instructions": [
            "and r5, ip, r3, lsr 20",
            "teq r4, ip",
            "teqeq r5, ip",
            "beq 0x7d9cc",
            "teq r4, ip",
            "bne 0x7dba0",
            "orrs r4, r0, r1, lsl 12",
            "bne 0x7d9cc",
            "teq r5, ip",
            "bne 0x7d9b4",
            "mov r0, r2",
            "mov r1, r3",
            "b 0x7d9cc",
            "teq r5, ip",
            "bne 0x7dbbc",
            "orrs r5, r2, r3, lsl 12",
            "beq 0x7d968",
            "mov r0, r2",
            "mov r1, r3",
            "b 0x7d9cc",
            "orrs r6, r0, r1, lsl 1",
            "orrsne r6, r2, r3, lsl 1",
            "bne 0x7d900",
            "orrs r4, r0, r1, lsl 1",
            "bne 0x7d9b4",
            "orrs r5, r2, r3, lsl 1",
            "bne 0x7d968",
            "b 0x7d9cc"
        ]
    },
    "fcn.0007d94c": {
        "function_address": "0x0007d94c",
        "instructions": [
            "teq r4, 0",
            "bne 0x7d92c",
            "and r6, r1, 0x80000000",
            "lsls r0, r0, 1",
            "adc r1, r1, r1",
            "tst r1, 0x100000",
            "subeq r4, r4, 1",
            "beq 0x7d90c",
            "orr r1, r1, r6",
            "teq r5, 0",
            "bxne lr",
            "and r6, r3, 0x80000000",
            "lsls r2, r2, 1",
            "adc r3, r3, r3",
            "tst r3, 0x100000",
            "subeq r5, r5, 1",
            "beq 0x7d930",
            "orr r3, r3, r6",
            "bx lr",
            "teq r4, ip",
            "and r5, ip, r3, lsr 20",
            "teqne r5, ip",
            "beq 0x7d978",
            "orrs r6, r0, r1, lsl 1",
            "orrsne r6, r2, r3, lsl 1",
            "bne 0x7d900",
            "eor r1, r1, r3",
            "and r1, r1, 0x80000000",
            "mov r0, 0",
            "pop {r4, r5, r6, pc}",
            "orrs r6, r0, r1, lsl 1",
            "moveq r0, r2",
            "moveq r1, r3",
            "orrsne r6, r2, r3, lsl 1",
            "beq 0x7d9cc",
            "teq r4, ip",
            "bne 0x7d99c",
            "orrs r6, r0, r1, lsl 12",
            "bne 0x7d9cc",
            "teq r5, ip",
            "bne 0x7d9b4",
            "orrs r6, r2, r3, lsl 12",
            "movne r0, r2",
            "movne r1, r3",
            "bne 0x7d9cc",
            "eor r1, r1, r3",
            "orr r1, r1, 0x7f000000",
            "orr r1, r1, 0xf80000",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.0007dc74": {
        "function_address": "0x0007dc74",
        "instructions": [
            "mov ip, r0",
            "mov r0, r2",
            "mov r2, ip",
            "mov ip, r1",
            "mov r1, r3",
            "mov r3, ip",
            "b fcn.0007dc90"
        ]
    },
    "fcn.0001bf88": {
        "function_address": "0x0001bf88",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r5, r1",
            "mov r1, 0",
            "ldr sl, [r0, 0xc]",
            "bl sym.avformat_new_stream",
            "subs r4, r0, 0",
            "beq 0x1c0a8",
            "ldr r3, [r4, 8]",
            "mov r2, 0",
            "str r2, [r3, 0xd8]",
            "str r2, [r3, 0xd0]",
            "ldr r2, [r5]",
            "cmp r2, 0",
            "addeq r2, r2, 1",
            "moveq r3, 0x19",
            "ldrne r3, [r5, 4]",
            "moveq r1, 0x3c",
            "movne r1, 0x3c",
            "bl sym.avpriv_set_pts_info",
            "ldr r0, [r4, 0x38]",
            "bl fcn.0007d690",
            "mov r6, r0",
            "mov r7, r1",
            "ldr r0, [r4, 0x3c]",
            "bl fcn.0007d690",
            "mov r2, r0",
            "mov r3, r1",
            "mov r0, r6",
            "mov r1, r7",
            "bl fcn.0007d9d8",
            "ldr r6, [r5, 8]",
            "mov r8, r0",
            "mov sb, r1",
            "cmp r6, 0",
            "moveq r2, 0",
            "ldreq r3, [0x0001c0b0]",
            "beq 0x1c02c",
            "mov r0, r6",
            "bl fcn.0007d690",
            "mov r2, r0",
            "mov r3, r1",
            "mov r0, r8",
            "mov r1, sb",
            "bl fcn.0007d76c",
            "mov r2, 0",
            "ldr r3, [0x0001c0b4]",
            "bl fcn.0007dcf4",
            "cmp r0, 0",
            "moveq r0, 1",
            "beq 0x1c080",
            "cmp r6, 0",
            "moveq r2, 0",
            "ldreq r3, [0x0001c0b0]",
            "beq 0x1c070",
            "mov r0, r6",
            "bl fcn.0007d690",
            "mov r2, r0",
            "mov r3, r1",
            "mov r0, r8",
            "mov r1, sb",
            "bl fcn.0007d76c",
            "bl fcn.0007dd08",
            "ldr r3, [r5, 0x10]",
            "ldr r2, [r4, 8]",
            "str r0, [sl]",
            "cmp r3, 0",
            "moveq r3, 0x280",
            "str r3, [r2, 0x28]",
            "ldr r3, [r5, 0x14]",
            "cmp r3, 0",
            "moveq r3, 0x190",
            "str r3, [r2, 0x2c]",
            "mov r0, r4",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "fcn.0007dd08": {
        "function_address": "0x0007dd08",
        "instructions": [
            "lsl r2, r1, 1",
            "adds r2, r2, 0x200000",
            "bhs 0x7dd48",
            "bpl 0x7dd40",
            "mvn r3, 0x3e0",
            "subs r2, r3, r2, asr 21",
            "bls 0x7dd50",
            "lsl r3, r1, 0xb",
            "orr r3, r3, 0x80000000",
            "orr r3, r3, r0, lsr 21",
            "tst r1, 0x80000000",
            "lsr r0, r3, r2",
            "rsbne r0, r0, 0",
            "bx lr",
            "mov r0, 0",
            "bx lr",
            "orrs r0, r0, r1, lsl 12",
            "bne 0x7dd5c",
            "ands r0, r1, 0x80000000",
            "mvneq r0, 0x80000000",
            "bx lr",
            "mov r0, 0",
            "bx lr"
        ]
    },
    "fcn.00061b6c": {
        "function_address": "0x00061b6c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r5, r0",
            "ldr r4, [r0, 0x10]",
            "sub sp, sp, 0x4c",
            "mov sb, r2",
            "add r7, sp, 0x24",
            "str r3, [sp, 0x1c]",
            "mov r0, r4",
            "str r1, [sp, 0x14]",
            "bl sym.avio_size",
            "mvn r2, 0x7f",
            "mvn r3, 0",
            "adds r2, r2, r0",
            "mov r0, r4",
            "adc r3, r3, r1",
            "ldr r6, [0x00061fd4]",
            "strd r2, r3, [sp, 8]",
            "mov r3, 0",
            "str r3, [sp]",
            "ldrd r2, r3, [sp, 8]",
            "add r6, pc, r6",
            "bl sym.avio_seek",
            "mov r2, 7",
            "mov r0, r4",
            "mov r1, r7",
            "bl sym.avio_read",
            "cmp r0, 7",
            "mov r2, r0",
            "bne 0x61fc4",
            "ldr r1, [0x00061fd8]",
            "mov r0, r7",
            "add r1, r6, r1",
            "bl sym.imp.memcmp",
            "subs r8, r0, 0",
            "bne 0x61fc4",
            "mov r0, r4",
            "mov r1, r7",
            "mov r2, 0x23",
            "bl sym.avio_read",
            "cmp r0, 0x23",
            "bne 0x61c3c",
            "ldrb r3, [sp, 0x24]",
            "cmp r3, 0",
            "beq 0x61c3c",
            "ldr r1, [0x00061fdc]",
            "add r0, r5, 0x4b0",
            "add r0, r0, 8",
            "mov r2, r7",
            "mov r3, r8",
            "strb r8, [sp, 0x47]",
            "add r1, r6, r1",
            "bl sym.imp.av_dict_set",
            "add r7, sp, 0x24",
            "mov r0, r4",
            "mov r1, r7",
            "mov r2, 0x14",
            "bl sym.avio_read",
            "cmp r0, 0x14",
            "bne 0x61c84",
            "ldrb r3, [sp, 0x24]",
            "cmp r3, 0",
            "beq 0x61c84",
            "ldr r1, [0x00061fe0]",
            "add r0, r5, 0x4b0",
            "mov r3, 0",
            "add r0, r0, 8",
            "mov r2, r7",
            "strb r3, [sp, 0x38]",
            "add r1, r6, r1",
            "bl sym.imp.av_dict_set",
            "add r7, sp, 0x24",
            "mov r0, r4",
            "mov r1, r7",
            "mov r2, 0x14",
            "bl sym.avio_read",
            "cmp r0, 0x14",
            "bne 0x61ccc",
            "ldrb r3, [sp, 0x24]",
            "cmp r3, 0",
            "beq 0x61ccc",
            "ldr r1, [0x00061fe4]",
            "add r0, r5, 0x4b0",
            "mov r3, 0",
            "add r0, r0, 8",
            "mov r2, r7",
            "strb r3, [sp, 0x38]",
            "add r1, r6, r1",
            "bl sym.imp.av_dict_set",
            "add r7, sp, 0x24",
            "mov r0, r4",
            "mov r1, r7",
            "mov r2, 8",
            "bl sym.avio_read",
            "cmp r0, 8",
            "bne 0x61d14",
            "ldrb r3, [sp, 0x24]",
            "cmp r3, 0",
            "beq 0x61d14",
            "ldr r1, [0x00061fe8]",
            "add r0, r5, 0x4b0",
            "mov r3, 0",
            "add r0, r0, 8",
            "mov r2, r7",
            "strb r3, [sp, 0x2c]",
            "add r1, r6, r1",
            "bl sym.imp.av_dict_set",
            "mov r2, 4",
            "mov r3, 0",
            "mov r0, r4",
            "add fp, sp, 0x24",
            "bl sym.avio_skip",
            "mov r0, r4",
            "bl sym.avio_r8",
            "mov r7, r0",
            "mov r0, r4",
            "bl sym.avio_r8",
            "mov r8, r0",
            "mov r0, r4",
            "bl sym.avio_rl16",
            "str r0, [sp, 0x18]",
            "mov r0, r4",
            "bl sym.avio_rl16",
            "mov sl, r0",
            "mov r0, r4",
            "bl sym.avio_r8",
            "mov r2, 1",
            "str r0, [sp, 0x10]",
            "mov r3, 0",
            "mov r0, r4",
            "bl sym.avio_skip",
            "mov r2, 4",
            "mov r3, 0",
            "mov r0, r4",
            "bl sym.avio_skip",
            "mov r0, r4",
            "mov r1, fp",
            "mov r2, 0x16",
            "bl sym.avio_read",
            "cmp r0, 0x16",
            "bne 0x61dc8",
            "ldrb r3, [sp, 0x24]",
            "cmp r3, 0",
            "beq 0x61dc8",
            "ldr r1, [0x00061fec]",
            "add r0, r5, 0x4b0",
            "mov r3, 0",
            "add r0, r0, 8",
            "mov r2, fp",
            "strb r3, [sp, 0x3a]",
            "add r1, r6, r1",
            "bl sym.imp.av_dict_set",
            "cmp r7, 0",
            "cmpne sb, 0",
            "beq 0x61e90",
            "cmp r8, 0",
            "beq 0x61e90",
            "cmp r8, 2",
            "cmple r7, 1",
            "beq 0x61e08",
            "cmp r7, 5",
            "movne r3, 0",
            "moveq r3, 1",
            "cmp r8, 0xff",
            "cmpeq r7, 5",
            "beq 0x61e08",
            "cmp r7, 6",
            "bne 0x61e44",
            "ldr r3, [sp, 0x18]",
            "cmp r3, 0",
            "beq 0x61e34",
            "ldr r3, [r5, 0x18]",
            "ldr r0, [sp, 0x18]",
            "ldr r3, [r3]",
            "lsl r2, r0, 3",
            "ldr r3, [r3, 8]",
            "str r2, [r3, 0x28]",
            "mov r3, 1",
            "str r3, [sb]",
            "ldr r1, [sp, 0x1c]",
            "cmp sl, 0",
            "cmpne r1, 0",
            "b 0x61e7c",
            "cmp r3, 0",
            "beq 0x61e90",
            "cmp r8, 1",
            "ble 0x61e70",
            "ldr r3, [r5, 0x18]",
            "lsl r8, r8, 4",
            "ldr r3, [r3]",
            "ldr r3, [r3, 8]",
            "str r8, [r3, 0x28]",
            "mov r3, 1",
            "str r3, [sb]",
            "ldr r2, [sp, 0x1c]",
            "cmp sl, 0",
            "cmpne r2, 0",
            "ldrne r3, [r5, 0x18]",
            "lslne sl, sl, 4",
            "ldrne r3, [r3]",
            "ldrne r3, [r3, 8]",
            "strne sl, [r3, 0x2c]",
            "ldr r3, [sp, 0x14]",
            "mvn r2, 0x7f",
            "ldrd r0, r1, [r3]",
            "mvn r3, 0",
            "adds r0, r0, r2",
            "ldr r2, [sp, 0x14]",
            "adc r1, r1, r3",
            "ldr r3, [sp, 0x10]",
            "strd r0, r1, [r2]",
            "cmp r3, 0",
            "movle r8, 0",
            "ble 0x61fc8",
            "ldrd r0, r1, [sp, 8]",
            "mvn r2, 4",
            "lsl r7, r3, 6",
            "mvn r3, 0",
            "mov r8, 0",
            "adds r2, r2, r0",
            "add sl, sp, 0x24",
            "adc r3, r3, r1",
            "mov r0, r4",
            "subs r2, r2, r7",
            "sbc r3, r3, r7, asr 31",
            "str r8, [sp]",
            "bl sym.avio_seek",
            "mov r2, 5",
            "mov r0, r4",
            "mov r1, sl",
            "bl sym.avio_read",
            "cmp r0, 5",
            "mov r2, r0",
            "bne 0x61fc8",
            "ldr r1, [0x00061ff0]",
            "mov r0, sl",
            "add r1, r6, r1",
            "bl sym.imp.memcmp",
            "subs sb, r0, 0",
            "bne 0x61fc8",
            "ldr r1, [sp, 0x10]",
            "add r0, r7, r1",
            "add r7, r7, 5",
            "add r0, r0, 1",
            "bl sym.imp.av_malloc",
            "ldr r1, [sp, 0x14]",
            "ldrd r2, r3, [r1]",
            "subs r2, r2, r7",
            "sbc r3, r3, r7, asr 31",
            "subs r8, r0, 0",
            "strd r2, r3, [r1]",
            "beq 0x61fc8",
            "mov r7, sb",
            "mov sl, r8",
            "mov sb, 0xa",
            "mov r0, r4",
            "mov r1, sl",
            "mov r2, 0x40",
            "bl sym.avio_read",
            "cmp r0, 0x40",
            "bne 0x61f94",
            "strb sb, [sl, 0x40]",
            "add r7, r7, 1",
            "ldr r2, [sp, 0x10]",
            "add sl, sl, 0x41",
            "cmp r7, r2",
            "blt 0x61f64",
            "ldr r1, [0x00061ff4]",
            "add r7, r7, r7, lsl 6",
            "mov r4, 0",
            "add r0, r5, 0x4b0",
            "strb r4, [r8, r7]",
            "mov r2, r8",
            "add r0, r0, 8",
            "add r1, r6, r1",
            "mov r3, 8",
            "bl sym.imp.av_dict_set",
            "mov r8, r4",
            "b 0x61fc8",
            "mvn r8, 0",
            "mov r0, r8",
            "add sp, sp, 0x4c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0001d7d8": {
        "function_address": "0x0001d7d8",
        "instructions": [
            "mov r3, 1",
            "push {r0, r1, r2, lr}",
            "mov r2, 0",
            "str r3, [sp]",
            "mov r3, 0",
            "bl sym.avio_seek",
            "add sp, sp, 0xc",
            "ldm sp!, {pc}"
        ]
    },
    "fcn.0003a7b4": {
        "function_address": "0x0003a7b4",
        "instructions": [
            "sub sp, sp, 8",
            "push {r0, r1, r4, r5, r6, lr}",
            "mov r4, r1",
            "add r1, sp, 0x18",
            "mov r5, r0",
            "stm r1, {r2, r3}",
            "ldr r3, [r0, 0x14]",
            "cmp r3, 0",
            "beq 0x3a84c",
            "ldr r2, [r0, 0x18]",
            "sub r3, r3, 1",
            "mov r0, r4",
            "ldr r6, [r2, r3, lsl 2]",
            "bl sym.avio_rb32",
            "mov r0, r5",
            "mov r1, r4",
            "add r2, sp, 4",
            "bl fcn.0002d0b4",
            "ldr r3, [sp, 4]",
            "cmp r3, 3",
            "bne 0x3a818",
            "mov r0, r4",
            "mov r1, 0",
            "bl fcn.0002d0d8",
            "b 0x3a820",
            "mov r0, r4",
            "bl sym.avio_rb16",
            "mov r0, r5",
            "mov r1, r4",
            "add r2, sp, 4",
            "bl fcn.0002d0b4",
            "ldr r3, [sp, 4]",
            "cmp r3, 4",
            "bne 0x3a84c",
            "mov r0, r5",
            "mov r1, r6",
            "mov r2, r4",
            "bl fcn.0002d148",
            "mov r0, 0",
            "pop {r2, r3, r4, r5, r6, lr}",
            "add sp, sp, 8",
            "bx lr"
        ]
    },
    "fcn.0002d0b4": {
        "function_address": "0x0002d0b4",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r0, r1",
            "mov r4, r1",
            "mov r5, r2",
            "bl sym.avio_r8",
            "str r0, [r5]",
            "mov r0, r4",
            "pop {r4, r5, r6, lr}",
            "b fcn.0002d078"
        ]
    },
    "fcn.0002d0d8": {
        "function_address": "0x0002d0d8",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "subs r5, r1, 0",
            "mov r4, r0",
            "beq 0x2d0f4",
            "bl sym.avio_rb16",
            "str r0, [r5]",
            "b 0x2d0f8",
            "bl sym.avio_rb16",
            "mov r0, r4",
            "bl sym.avio_r8",
            "tst r0, 0x80",
            "mov r5, r0",
            "beq 0x2d114",
            "mov r0, r4",
            "bl sym.avio_rb16",
            "tst r5, 0x40",
            "beq 0x2d134",
            "mov r0, r4",
            "bl sym.avio_r8",
            "mov r2, r0",
            "asr r3, r2, 0x1f",
            "mov r0, r4",
            "bl sym.avio_skip",
            "tst r5, 0x20",
            "popeq {r4, r5, r6, pc}",
            "mov r0, r4",
            "pop {r4, r5, r6, lr}",
            "b sym.avio_rb16"
        ]
    },
    "fcn.0002d148": {
        "function_address": "0x0002d148",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sl, lr}",
            "mov r6, r2",
            "sub sp, sp, 0x34",
            "mov r7, r0",
            "mov r0, r2",
            "mov r4, r1",
            "bl sym.avio_r8",
            "mov sl, r0",
            "mov r0, r6",
            "bl sym.avio_r8",
            "mov r0, r6",
            "ldr r5, [0x0002d2b8]",
            "bl sym.avio_rb24",
            "mov r0, r6",
            "bl sym.avio_rb32",
            "mov r0, r6",
            "add r5, pc, r5",
            "bl sym.avio_rb32",
            "ldr r3, [0x0002d2bc]",
            "mov r1, sl",
            "ldr r8, [r4, 8]",
            "ldr r0, [r5, r3]",
            "bl fcn.0006ffc8",
            "mov r1, r6",
            "str r0, [r8, 0xd4]",
            "add r2, sp, 0x2c",
            "mov r0, r7",
            "bl fcn.0002d0b4",
            "ldr r3, [sp, 0x2c]",
            "mov r7, r0",
            "cmp r3, 5",
            "bne 0x2d2ac",
            "sub r3, r0, 1",
            "cmn r3, 0xc0000001",
            "mvnhi r0, 0",
            "bhi 0x2d2b0",
            "ldr r3, [r4, 8]",
            "ldr r0, [r3, 0x18]",
            "bl sym.imp.av_free",
            "add r0, r7, 0x10",
            "ldr r8, [r4, 8]",
            "bl sym.imp.av_mallocz",
            "ldr r3, [r4, 8]",
            "str r0, [r8, 0x18]",
            "ldr r1, [r3, 0x18]",
            "cmp r1, 0",
            "mvneq r0, 0xb",
            "beq 0x2d2b0",
            "mov r2, r7",
            "mov r0, r6",
            "bl sym.avio_read",
            "ldr r3, [r4, 8]",
            "ldr r2, [0x0002d2c0]",
            "ldr r1, [r3, 0xd4]",
            "str r7, [r3, 0x1c]",
            "cmp r1, r2",
            "bne 0x2d2ac",
            "ldr r1, [r3, 0x18]",
            "mov r0, sp",
            "mov r3, 1",
            "lsl r2, r7, 3",
            "bl sym.imp.avpriv_mpeg4audio_get_config",
            "ldr r1, [sp]",
            "ldr r6, [r4, 8]",
            "ldr r3, [sp, 0x24]",
            "cmp r1, 0x1d",
            "str r3, [r6, 0x40]",
            "bne 0x2d274",
            "ldr r3, [sp, 4]",
            "cmp r3, 2",
            "ldrle r2, [0x0002d2c4]",
            "lslle r3, r3, 1",
            "ldrle r2, [r5, r2]",
            "ldrhle r3, [r2, r3]",
            "ble 0x2d280",
            "ldr r3, [sp, 0x1c]",
            "cmp r3, 0",
            "ldreq r3, [sp, 8]",
            "str r3, [r6, 0x3c]",
            "ldr r3, [0x0002d2c8]",
            "add r5, r5, r3",
            "add r0, r5, 0x22c",
            "bl fcn.0006ffc8",
            "cmp r0, 0",
            "str r0, [r6, 0xd4]",
            "ldreq r3, [r4, 8]",
            "ldreq r2, [0x0002d2c0]",
            "streq r2, [r3, 0xd4]",
            "beq 0x2d2b0",
            "mov r0, 0",
            "add sp, sp, 0x34",
            "pop {r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "fcn.0002d078": {
        "function_address": "0x0002d078",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r6, r0",
            "mov r5, 4",
            "mov r4, 0",
            "b 0x2d0a4",
            "mov r0, r6",
            "bl sym.avio_r8",
            "tst r0, 0x80",
            "and r3, r0, 0x7f",
            "orr r4, r3, r4, lsl 7",
            "beq 0x2d0ac",
            "subs r5, r5, 1",
            "bhs 0x2d08c",
            "mov r0, r4",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.0001f7a0": {
        "function_address": "0x0001f7a0",
        "instructions": [
            "mov r3, 1",
            "push {r0, r1, r2, lr}",
            "mov r2, 0",
            "str r3, [sp]",
            "mov r3, 0",
            "bl sym.avio_seek",
            "add sp, sp, 0xc",
            "ldm sp!, {pc}"
        ]
    },
    "fcn.00020700": {
        "function_address": "0x00020700",
        "instructions": [
            "mov r3, 1",
            "push {r0, r1, r2, lr}",
            "mov r2, 0",
            "str r3, [sp]",
            "mov r3, 0",
            "bl sym.avio_seek",
            "add sp, sp, 0xc",
            "ldm sp!, {pc}"
        ]
    },
    "fcn.000213ac": {
        "function_address": "0x000213ac",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r4, 0",
            "mov r7, r0",
            "mov r5, r4",
            "bl sym.avio_r8",
            "uxtb r6, r0",
            "b 0x213dc",
            "mov r0, r7",
            "add r5, r5, 1",
            "bl sym.avio_r8",
            "uxtb r0, r0",
            "orr r4, r0, r4, lsl 8",
            "cmp r5, r6",
            "blt 0x213c8",
            "mov r0, r4",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.00021e78": {
        "function_address": "0x00021e78",
        "instructions": [
            "push {r0, r1, r2, r4, r5, r6, r7, lr}",
            "mov r1, r0",
            "ldr r1, [r1, 0xc]",
            "mvn r5, 0",
            "ldr r4, [0x00021ef0]",
            "ldrd r6, r7, [r1, 8]",
            "ldr r0, [r0, 0x10]",
            "adds r4, r4, r6",
            "adc r5, r5, r7",
            "cmp r5, r3",
            "bgt 0x21ec0",
            "bne 0x21eb0",
            "cmp r4, r2",
            "bhi 0x21ec0",
            "ldr r2, [0x00021ef4]",
            "mvn r3, 0",
            "adds r2, r2, r6",
            "adc r3, r3, r7",
            "cmp r3, 0",
            "blt 0x21ed4",
            "bne 0x21edc",
            "cmp r2, 0x1000",
            "bhs 0x21edc",
            "mov r2, 0x1000",
            "mov r3, 0",
            "mov r1, 0",
            "str r1, [sp]",
            "bl sym.avio_seek",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.00021ef8": {
        "function_address": "0x00021ef8",
        "instructions": [
            "push {r4, lr}",
            "ldr r4, [r0, 0x10]",
            "bl fcn.00021e78",
            "mov r0, r4",
            "mov r2, 4",
            "mov r3, 0",
            "bl sym.avio_skip",
            "mov r0, r4",
            "pop {r4, lr}",
            "b sym.avio_rb64"
        ]
    },
    "fcn.0002220c": {
        "function_address": "0x0002220c",
        "instructions": [
            "mov r3, 1",
            "push {r0, r1, r2, lr}",
            "mov r2, 0",
            "str r3, [sp]",
            "mov r3, 0",
            "bl sym.avio_seek",
            "add sp, sp, 0xc",
            "ldm sp!, {pc}"
        ]
    },
    "fcn.0002222c": {
        "function_address": "0x0002222c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r4, r1",
            "ldr r5, [r0, 0xc]",
            "ldr r8, [r5, 0x44]",
            "ldr r3, [r5, 0x40]",
            "rsb r8, r3, r8",
            "cmp r1, r8",
            "ble 0x2232c",
            "ldr r0, [r0, 0x10]",
            "bl fcn.0002220c",
            "ldrd r6, r7, [r5]",
            "mov r3, r1",
            "mov r2, r0",
            "orrs r1, r6, r7",
            "bne 0x22284",
            "ldrd r0, r1, [r5, 8]",
            "cmp r2, r0",
            "bne 0x222d4",
            "cmp r3, r1",
            "ldreq r0, [0x0002233c]",
            "bne 0x222d4",
            "pop {r4, r5, r6, r7, r8, pc}",
            "cmp r2, r6",
            "bne 0x22298",
            "cmp r3, r7",
            "mvneq r0, 0xa",
            "popeq {r4, r5, r6, r7, r8, pc}",
            "cmp r7, r3",
            "bgt 0x222ac",
            "bne 0x222b8",
            "cmp r6, r2",
            "bls 0x222b8",
            "mov r0, r6",
            "mov r1, r7",
            "b 0x222d4",
            "ldrd r0, r1, [r5, 8]",
            "adds r0, r0, r6",
            "ldr r6, [0x00022340]",
            "adc r1, r1, r7",
            "mvn r7, 0",
            "adds r0, r0, r6",
            "adc r1, r1, r7",
            "ldr r5, [r5, 0x2c]",
            "subs r0, r0, r2",
            "sbc r1, r1, r3",
            "mov r2, r5",
            "asr r3, r2, 0x1f",
            "sub r5, r5, 0xe",
            "bl fcn.0007ded0",
            "mov r2, r5",
            "asr r3, r2, 0x1f",
            "mul r3, r0, r3",
            "mla r3, r5, r1, r3",
            "umull r0, r1, r0, r5",
            "adds r0, r0, r8",
            "add r1, r3, r1",
            "mov r2, r4",
            "asr r3, r2, 0x1f",
            "adc r1, r1, r8, asr 31",
            "cmp r3, r1",
            "bgt 0x22334",
            "bne 0x2232c",
            "cmp r4, r0",
            "bhi 0x22334",
            "mov r0, 1",
            "pop {r4, r5, r6, r7, r8, pc}",
            "mvn r0, 0xa",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.00022380": {
        "function_address": "0x00022380",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x24",
            "ldr r8, [0x00022634]",
            "mov r6, r0",
            "mov fp, r1",
            "mov r7, r2",
            "str r3, [sp, 0x10]",
            "ldr r3, [0x00022638]",
            "add r8, pc, r8",
            "str r2, [sp, 0xc]",
            "ldr r4, [r0, 0xc]",
            "add r3, r8, r3",
            "ldr r5, [r0, 0x10]",
            "str r3, [sp, 0x18]",
            "str r8, [sp, 0x1c]",
            "b 0x2260c",
            "ldr r1, [r4, 0x40]",
            "ldr r8, [r4, 0x44]",
            "subs r8, r8, r1",
            "bmi 0x22628",
            "cmp r8, r7",
            "bgt 0x225e0",
            "cmp r8, 0",
            "bne 0x225e4",
            "mov r0, r5",
            "bl fcn.0002220c",
            "ldr r3, [r4, 8]",
            "cmp r3, r0",
            "bne 0x22414",
            "ldr r3, [r4, 0xc]",
            "cmp r3, r1",
            "bne 0x22414",
            "ldr r2, [r4, 0x2c]",
            "mov r0, r5",
            "str r8, [sp]",
            "asr r3, r2, 0x1f",
            "bl sym.avio_seek",
            "add sl, r4, 0x48",
            "str r7, [sp, 0x14]",
            "ldr r2, [r5, 4]",
            "ldr r3, [r4, 0x2c]",
            "cmp r2, r3",
            "beq 0x22460",
            "mov r0, r5",
            "bl fcn.0002220c",
            "mov r8, r0",
            "mov sb, r1",
            "mov r0, r5",
            "ldr r1, [r4, 0x2c]",
            "bl sym.url_setbufsize",
            "mov r3, 0",
            "mov r0, r5",
            "str r3, [sp]",
            "mov r2, r8",
            "mov r3, sb",
            "bl sym.avio_seek",
            "mov r0, r5",
            "bl sym.avio_rb16",
            "movw r3, 0x666d",
            "mov r7, r0",
            "cmp r0, r3",
            "beq 0x224d0",
            "mov r0, r6",
            "mov r1, 0x10",
            "ldr r2, [sp, 0x18]",
            "bl sym.imp.av_log",
            "ldr r0, [r6, 0x10]",
            "bl sym.url_feof",
            "cmp r0, 0",
            "beq 0x224b4",
            "ldr r8, [sp, 0x1c]",
            "mov r0, r6",
            "ldr r2, [0x0002263c]",
            "mov r1, 0x10",
            "add r2, r8, r2",
            "bl sym.imp.av_log",
            "b 0x22628",
            "lsl r7, r7, 8",
            "ldr r0, [r6, 0x10]",
            "bl sym.avio_r8",
            "movw r3, 0x666d",
            "orr r7, r0, r7",
            "cmp r7, r3",
            "bne 0x22488",
            "mov r0, r5",
            "bl sym.avio_rb16",
            "mov r7, r0",
            "mov r0, r5",
            "bl sym.avio_rb64",
            "strd r0, r1, [r4, 0x38]",
            "mov r0, r5",
            "bl sym.avio_rb16",
            "ldr r2, [r4, 0x2c]",
            "mov r8, r0",
            "mov r1, sl",
            "mov r0, r5",
            "sub r2, r2, 0xe",
            "bl sym.avio_read",
            "ldr r3, [r4, 0x2c]",
            "rsb r3, r7, r3",
            "add r3, r3, 0x3a",
            "add r3, r4, r3",
            "str r3, [r4, 0x44]",
            "cmp r3, sl",
            "movhs r3, 0",
            "movlo r3, 1",
            "orrs r3, r3, r8, lsr 31",
            "bne 0x22628",
            "ldr r3, [r4, 0x28]",
            "cmp r3, 0",
            "bne 0x2254c",
            "tst r8, 0x8000",
            "ldr r7, [sp, 0x14]",
            "bne 0x225a4",
            "b 0x225d8",
            "cmp r8, 0",
            "bne 0x225a0",
            "mov r0, r5",
            "bl fcn.0002220c",
            "ldr r2, [r4, 0x2c]",
            "add r3, r2, r2, lsl 1",
            "mov r8, r3",
            "asr sb, r8, 0x1f",
            "cmp sb, r1",
            "bgt 0x22620",
            "bne 0x22580",
            "cmp r3, r0",
            "bhi 0x22620",
            "mvn r3, 1",
            "mov r0, r5",
            "mul r2, r3, r2",
            "add r3, r3, 3",
            "str r3, [sp]",
            "asr r3, r2, 0x1f",
            "bl sym.avio_seek",
            "b 0x2241c",
            "ldr r7, [sp, 0x14]",
            "lsl r8, r8, 0x11",
            "mov r3, 0",
            "str r3, [r4, 0x28]",
            "lsr r8, r8, 0x11",
            "cmp r8, 0xd",
            "ble 0x22628",
            "ldr r3, [sp, 0x10]",
            "add r8, r8, 0x3a",
            "add r8, r4, r8",
            "str r8, [r4, 0x40]",
            "cmp r3, 0",
            "bne 0x223c0",
            "b 0x22614",
            "str sl, [r4, 0x40]",
            "b 0x223c0",
            "mov r8, r7",
            "mov r0, fp",
            "mov r2, r8",
            "bl sym.imp.memcpy",
            "ldr r3, [r4, 0x40]",
            "add fp, fp, r8",
            "rsb r7, r8, r7",
            "add r3, r3, r8",
            "str r3, [r4, 0x40]",
            "mov r3, 0",
            "str r3, [sp, 0x10]",
            "cmp r7, 0",
            "bgt 0x223c0",
            "ldr r3, [sp, 0xc]",
            "rsb r0, r7, r3",
            "b 0x2262c",
            "mov r0, 0",
            "b 0x2262c",
            "mvn r0, 0",
            "add sp, sp, 0x24",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.url_setbufsize": {
        "function_address": "0x0001a66c",
        "instructions": [
            "b fcn.00019ae0"
        ]
    },
    "fcn.00022344": {
        "function_address": "0x00022344",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r5, r0",
            "mov r4, 0",
            "b 0x2236c",
            "ldr r3, [r5, 0x18]",
            "ldr r3, [r3, r4, lsl 2]",
            "add r4, r4, 1",
            "ldr r0, [r3, 8]",
            "add r0, r0, 0x128",
            "bl sym.imp.av_freep",
            "ldr r3, [r5, 0x14]",
            "cmp r4, r3",
            "blo 0x22354",
            "mov r0, 0",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.00022f0c": {
        "function_address": "0x00022f0c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r5, 0",
            "mov r4, r0",
            "mov r6, r1",
            "sub r7, r2, 1",
            "mov r8, r5",
            "b 0x22f68",
            "cmp r0, 0x5c",
            "bne 0x22f4c",
            "cmp r5, r7",
            "strblt r0, [r6, r5]",
            "mov r0, r4",
            "addlt r5, r5, 1",
            "bl sym.avio_r8",
            "uxtb r0, r0",
            "b 0x22f54",
            "cmp r0, 0xa",
            "beq 0x22f7c",
            "cmp r5, r7",
            "strblt r0, [r6, r5]",
            "addlt r5, r5, 1",
            "b 0x22f68",
            "mov r5, r3",
            "mov r0, r4",
            "bl sym.avio_r8",
            "uxtb r0, r0",
            "cmp r0, 0",
            "bne 0x22f28",
            "strb r8, [r6, r5]",
            "mov r0, r4",
            "bl sym.url_feof",
            "subs r5, r0, 0",
            "popne {r4, r5, r6, r7, r8, pc}",
            "ldrb r3, [r6]",
            "cmp r3, 0x3b",
            "cmpne r3, 0x23",
            "beq 0x22f68",
            "cmp r3, 0",
            "beq 0x22f64",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.00022fac": {
        "function_address": "0x00022fac",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r4, r0",
            "add r0, r1, 1",
            "mov r5, r1",
            "bl sym.imp.av_malloc",
            "cmp r0, 0",
            "movne r3, r0",
            "addne r5, r4, r5",
            "bne 0x22fe8",
            "pop {r3, r4, r5, pc}",
            "ldrb r2, [r4]",
            "cmp r2, 0x5c",
            "addeq r4, r4, 1",
            "ldrb r2, [r4], 1",
            "strb r2, [r3], 1",
            "cmp r4, r5",
            "blo 0x22fd4",
            "mov r2, 0",
            "strb r2, [r3]",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.0004c69c": {
        "function_address": "0x0004c69c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "cmp r3, 7",
            "ldr r4, [0x0004ca34]",
            "sub sp, sp, 0x6c",
            "mov r5, r0",
            "str r1, [sp, 0x24]",
            "add r4, pc, r4",
            "ble 0x4ca28",
            "add r6, r2, r3",
            "add r1, r2, 4",
            "ldr r3, [r2]",
            "mvn r2, 2",
            "rsb r2, r1, r2",
            "add r2, r2, r6",
            "cmp r2, r3",
            "movgt r2, 0",
            "movle r2, 1",
            "orrs r2, r2, r3, lsr 31",
            "bne 0x4ca28",
            "add r3, r1, r3",
            "ldr r2, [0x0004ca38]",
            "ldr sb, [r3]",
            "add r7, r3, 4",
            "ldr r3, [0x0004ca3c]",
            "str r2, [sp, 0x3c]",
            "mov sl, r4",
            "add r3, r4, r3",
            "str r3, [sp, 0x2c]",
            "ldr r3, [0x0004ca40]",
            "add r3, r4, r3",
            "str r3, [sp, 0x30]",
            "ldr r3, [0x0004ca44]",
            "add r3, r4, r3",
            "str r3, [sp, 0x34]",
            "ldr r3, [0x0004ca48]",
            "add r3, r4, r3",
            "str r3, [sp, 0x38]",
            "b 0x4c9ac",
            "add r8, r7, 4",
            "rsb r3, r8, r6",
            "ldr r4, [r7]",
            "cmp r3, r4",
            "movge r3, 0",
            "movlt r3, 1",
            "orrs r3, r3, r4, lsr 31",
            "bne 0x4c9c4",
            "add r3, r8, r4",
            "mov r0, r8",
            "mov r1, 0x3d",
            "mov r2, r4",
            "str r3, [sp, 0x28]",
            "sub sb, sb, 1",
            "bl sym.imp.memchr",
            "cmp r0, 0",
            "str r0, [sp, 0x20]",
            "beq 0x4c9a8",
            "rsb r8, r8, r0",
            "rsb r4, r8, r4",
            "cmp r4, 1",
            "cmpne r8, 0",
            "sub fp, r4, 1",
            "beq 0x4c9a8",
            "add r0, r8, 1",
            "bl sym.imp.av_malloc",
            "str r0, [sp, 0x64]",
            "mov r0, r4",
            "bl sym.imp.av_malloc",
            "ldr r4, [sp, 0x64]",
            "str r0, [sp, 0x60]",
            "cmp r4, 0",
            "cmpne r0, 0",
            "addne r3, r7, 3",
            "movne ip, r5",
            "movne r4, 0",
            "moveq r4, 1",
            "movne r5, r3",
            "bne 0x4c818",
            "add r0, sp, 0x64",
            "bl sym.imp.av_freep",
            "add r0, sp, 0x60",
            "bl sym.imp.av_freep",
            "mov r0, r5",
            "mov r1, 0x18",
            "ldr r2, [sp, 0x2c]",
            "bl sym.imp.av_log",
            "b 0x4c9a8",
            "str ip, [sp, 0x1c]",
            "bl sym.imp.__ctype_toupper_loc",
            "ldrb r2, [r5, 1]!",
            "ldr r1, [r0]",
            "lsl r2, r2, 1",
            "ldrsh r2, [r1, r2]",
            "strb r2, [r7, r4]",
            "add r4, r4, 1",
            "ldr ip, [sp, 0x1c]",
            "cmp r4, r8",
            "ldr r7, [sp, 0x64]",
            "blo 0x4c7f4",
            "mov r2, 0",
            "mov r5, ip",
            "strb r2, [r7, r8]",
            "mov r2, fp",
            "ldr r3, [sp, 0x20]",
            "ldr r0, [sp, 0x60]",
            "add r1, r3, 1",
            "bl sym.imp.memcpy",
            "ldr r3, [sp, 0x60]",
            "mov r2, 0",
            "strb r2, [r3, fp]",
            "ldr r4, [sp, 0x64]",
            "ldr r8, [sp, 0x60]",
            "mov r0, r4",
            "bl sym.imp.strlen",
            "cmp r0, 8",
            "mov r7, r0",
            "ble 0x4c994",
            "mov r0, r4",
            "ldr r1, [sp, 0x30]",
            "add r2, sp, 0x5c",
            "bl sym.imp.sscanf",
            "cmp r0, 1",
            "bne 0x4c994",
            "cmp r7, 9",
            "bne 0x4c92c",
            "add r3, sp, 0x50",
            "mov r0, r8",
            "str r3, [sp]",
            "add r3, sp, 0x4c",
            "str r3, [sp, 4]",
            "add r2, sp, 0x58",
            "ldr r3, [sp, 0x3c]",
            "add r1, sl, r3",
            "add r3, sp, 0x54",
            "bl sym.imp.sscanf",
            "cmp r0, 3",
            "ble 0x4c994",
            "ldr r3, [0x0004ca4c]",
            "add ip, sp, 0x44",
            "ldr r2, [sp, 0x54]",
            "add r3, sl, r3",
            "ldm r3, {r0, r1}",
            "mov r3, 0x3c",
            "stm ip, {r0, r1}",
            "mov r0, r5",
            "ldr r1, [sp, 0x58]",
            "mla r1, r3, r1, r2",
            "ldr r2, [sp, 0x50]",
            "mla r3, r3, r1, r2",
            "ldr r1, [sp, 0x4c]",
            "mov r2, 0x3e8",
            "mla r2, r2, r3, r1",
            "ldr r1, [sp, 0x5c]",
            "asr r3, r2, 0x1f",
            "strd r2, r3, [sp]",
            "mov r2, 0",
            "mov r3, 0x80000000",
            "strd r2, r3, [sp, 8]",
            "mov r2, 0",
            "str r2, [sp, 0x10]",
            "ldm ip, {r2, r3}",
            "bl sym.avpriv_new_chapter",
            "mov r0, r8",
            "bl sym.imp.av_free",
            "b 0x4c988",
            "ldr r1, [sp, 0x34]",
            "add r0, r4, 9",
            "bl sym.imp.strcmp",
            "subs r3, r0, 0",
            "ldreq r1, [r5, 0x4a0]",
            "ldreq r2, [sp, 0x5c]",
            "beq 0x4c97c",
            "b 0x4c994",
            "ldr r0, [r5, 0x4a4]",
            "ldr r0, [r0, r3, lsl 2]",
            "ldr ip, [r0]",
            "cmp ip, r2",
            "bne 0x4c978",
            "ldr r1, [sp, 0x38]",
            "mov r2, r8",
            "mov r3, 8",
            "add r0, r0, 0x20",
            "bl sym.imp.av_dict_set",
            "b 0x4c988",
            "add r3, r3, 1",
            "cmp r3, r1",
            "blo 0x4c94c",
            "b 0x4c994",
            "mov r0, r4",
            "bl sym.imp.av_free",
            "b 0x4c9a8",
            "ldr r0, [sp, 0x24]",
            "mov r3, 0xc",
            "ldr r1, [sp, 0x64]",
            "ldr r2, [sp, 0x60]",
            "bl sym.imp.av_dict_set",
            "ldr r7, [sp, 0x28]",
            "rsb r3, r7, r6",
            "cmp sb, 0",
            "cmpne r3, 3",
            "bgt 0x4c734",
            "mov r4, sl",
            "b 0x4c9cc",
            "mov r4, sl",
            "mov r7, r8",
            "cmp r7, r6",
            "beq 0x4c9ec",
            "ldr r2, [0x0004ca50]",
            "mov r0, r5",
            "mov r1, 0x20",
            "rsb r3, r7, r6",
            "add r2, r4, r2",
            "bl sym.imp.av_log",
            "cmp sb, 0",
            "beq 0x4ca0c",
            "ldr r2, [0x0004ca54]",
            "mov r0, r5",
            "mov r1, 0x20",
            "mov r3, sb",
            "add r2, r4, r2",
            "bl sym.imp.av_log",
            "ldr r3, [0x0004ca58]",
            "mov r1, 0",
            "ldr r0, [sp, 0x24]",
            "ldr r2, [r4, r3]",
            "bl fcn.000327c4",
            "mov r0, 0",
            "b 0x4ca2c",
            "mvn r0, 0",
            "add sp, sp, 0x6c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0002418c": {
        "function_address": "0x0002418c",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r7, r2",
            "mov r6, r0",
            "mov r5, r1",
            "bl sym.avio_rb16",
            "cmp r0, r7",
            "mov r4, r0",
            "blt 0x241c4",
            "mov r2, r4",
            "asr r3, r2, 0x1f",
            "mov r0, r6",
            "bl sym.avio_skip",
            "mvn r4, 0",
            "b 0x241dc",
            "mov r0, r6",
            "mov r1, r5",
            "mov r2, r4",
            "bl sym.avio_read",
            "mov r3, 0",
            "strb r3, [r5, r4]",
            "mov r0, r4",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.0002416c": {
        "function_address": "0x0002416c",
        "instructions": [
            "mov r3, 1",
            "push {r0, r1, r2, lr}",
            "mov r2, 0",
            "str r3, [sp]",
            "mov r3, 0",
            "bl sym.avio_seek",
            "add sp, sp, 0xc",
            "ldm sp!, {pc}"
        ]
    },
    "fcn.000241e4": {
        "function_address": "0x000241e4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r6, r0",
            "ldr r8, [r0, 0x10]",
            "sub sp, sp, 0x27c",
            "mov r5, r3",
            "ldr r4, [0x00024cfc]",
            "mov r0, r8",
            "str r1, [sp, 0x38]",
            "str r2, [sp, 0x34]",
            "add r4, pc, r4",
            "bl sym.avio_r8",
            "str r0, [sp, 0x1c]",
            "cmp r0, 0xd",
            "addls pc, pc, r0, lsl 2",
            "b 0x24ce8",
            "b 0x24258",
            "b 0x24264",
            "b 0x2427c",
            "b 0x24298",
            "b 0x24ce8",
            "b 0x24978",
            "b 0x24978",
            "b 0x24ce8",
            "b 0x24804",
            "b 0x24ce8",
            "b 0x248c4",
            "b 0x24960",
            "b 0x24ce8",
            "b 0x24978",
            "mov r0, r8",
            "bl sym.avio_rb64",
            "b 0x24270",
            "mov r0, r8",
            "bl sym.avio_r8",
            "bl fcn.0007d690",
            "mov r8, r0",
            "mov sb, r1",
            "b 0x24980",
            "mov r0, r8",
            "add r1, sp, 0x170",
            "mov r2, 0x100",
            "bl fcn.0002418c",
            "cmp r0, 0",
            "bge 0x24978",
            "b 0x24ce8",
            "ldr r0, [sp, 0x34]",
            "ldr r1, [sp, 0x38]",
            "subs r7, r0, 0",
            "movne r7, 1",
            "cmp r0, 0",
            "cmpeq r1, 0",
            "beq 0x247a4",
            "ldr r3, [r8, 0x54]",
            "cmp r5, 0",
            "cmpne r3, 0",
            "beq 0x247a4",
            "ldr r0, [0x00024d00]",
            "mov r1, r5",
            "add r0, r4, r0",
            "bl sym.imp.strcmp",
            "ldr r2, [sp, 0x2a8]",
            "cmp r0, 0",
            "cmpeq r2, 1",
            "bne 0x247a4",
            "ldr sl, [sp, 0x38]",
            "cmp r7, 0",
            "ldr r3, [sp, 0x34]",
            "mov r7, 0",
            "mov r0, r8",
            "str r7, [sp, 0x274]",
            "moveq r3, sl",
            "str r7, [sp, 0x270]",
            "str r3, [sp, 0x5c]",
            "bl fcn.0002416c",
            "ldr fp, [sp, 0x5c]",
            "strd r0, r1, [sp, 0x60]",
            "ldr r3, [fp, 0x84]",
            "cmp r3, r7",
            "bgt 0x24388",
            "add sl, sp, 0x2a0",
            "mvn r0, 1",
            "ldrd r2, r3, [sl]",
            "mvn r1, 0",
            "add fp, sp, 0x70",
            "str r7, [sp, 0x3c]",
            "str fp, [sp, 0x58]",
            "adds r2, r2, r0",
            "ldr fp, [sp, 0x1c]",
            "adc r3, r3, r1",
            "mvn r0, 0",
            "strd r2, r3, [sp, 0x40]",
            "mvn r1, 0",
            "ldr r3, [0x00024d04]",
            "str r7, [sp, 0x54]",
            "str fp, [sp, 0x28]",
            "add r3, r4, r3",
            "str r3, [sp, 0x68]",
            "ldr r3, [0x00024d08]",
            "add r3, r4, r3",
            "str r3, [sp, 0x6c]",
            "ldrd r2, r3, [sl]",
            "adds r2, r2, r0",
            "adc r3, r3, r1",
            "strd r2, r3, [sp, 0x48]",
            "b 0x2449c",
            "mov r0, r6",
            "mov r1, 0x18",
            "ldr r2, [0x00024d0c]",
            "b 0x2475c",
            "mov r0, r8",
            "bl sym.avio_r8",
            "cmp r0, 0xa",
            "bne 0x244e4",
            "mov r0, r8",
            "bl sym.avio_rb32",
            "mov r7, r0",
            "lsrs r0, r7, 0x1c",
            "bne 0x244f0",
            "ldr r0, [sp, 0x68]",
            "ldr r1, [sp, 0x58]",
            "bl sym.imp.strcmp",
            "ldr r3, [sp, 0x274]",
            "cmp r0, 0",
            "cmpeq r3, 0",
            "beq 0x24400",
            "ldr r0, [sp, 0x6c]",
            "ldr r1, [sp, 0x58]",
            "bl sym.imp.strcmp",
            "ldr r3, [sp, 0x270]",
            "cmp r0, 0",
            "cmpeq r3, 0",
            "bne 0x244fc",
            "str r7, [sp, 0x3c]",
            "add sb, sp, 0x270",
            "b 0x24408",
            "add sb, sp, 0x274",
            "str r7, [sp, 0x54]",
            "lsl r0, r7, 3",
            "bl sym.imp.av_mallocz",
            "cmp r0, 0",
            "str r0, [sb]",
            "beq 0x24718",
            "mov sl, 0",
            "b 0x24458",
            "mov r0, r8",
            "bl sym.avio_r8",
            "cmp r0, 0",
            "bne 0x246f4",
            "lsl r3, sl, 3",
            "mov r0, r8",
            "ldr fp, [sb]",
            "add sl, sl, 1",
            "str r3, [sp, 0x24]",
            "bl sym.avio_rb64",
            "bl sym.imp.__aeabi_d2lz",
            "ldr r3, [sp, 0x24]",
            "strd r0, r1, [fp, r3]",
            "cmp sl, r7",
            "bhs 0x24484",
            "mov r0, r8",
            "bl fcn.0002416c",
            "ldr r2, [sp, 0x4c]",
            "cmp r2, r1",
            "bgt 0x24424",
            "bne 0x24484",
            "ldr r3, [sp, 0x48]",
            "cmp r3, r0",
            "bhi 0x24424",
            "ldr r3, [sp, 0x274]",
            "cmp r3, 0",
            "beq 0x2449c",
            "ldr r3, [sp, 0x270]",
            "cmp r3, 0",
            "bne 0x24508",
            "mov r0, r8",
            "bl fcn.0002416c",
            "ldr sl, [sp, 0x44]",
            "cmp sl, r1",
            "bgt 0x244c0",
            "bne 0x24518",
            "ldr fp, [sp, 0x40]",
            "cmp fp, r0",
            "bls 0x24518",
            "mov r0, r8",
            "ldr r1, [sp, 0x58]",
            "mov r2, 0x100",
            "bl fcn.0002418c",
            "cmp r0, 0",
            "bgt 0x24398",
            "ldr r0, [sp, 0x28]",
            "str r0, [sp, 0x1c]",
            "b 0x24520",
            "ldr r1, [sp, 0x28]",
            "str r1, [sp, 0x1c]",
            "b 0x24520",
            "ldr r2, [sp, 0x28]",
            "str r2, [sp, 0x1c]",
            "b 0x24520",
            "ldr r3, [sp, 0x28]",
            "str r3, [sp, 0x1c]",
            "b 0x24520",
            "ldr sl, [sp, 0x28]",
            "mov r7, 0",
            "str sl, [sp, 0x1c]",
            "b 0x24524",
            "ldr fp, [sp, 0x28]",
            "str fp, [sp, 0x1c]",
            "mvn r7, 0x25",
            "ldr r0, [sp, 0x3c]",
            "ldr r1, [sp, 0x54]",
            "cmp r0, 1",
            "movls r3, 0",
            "movhi r3, 1",
            "cmp r1, r0",
            "movne r3, 0",
            "cmp r3, 0",
            "beq 0x24700",
            "ldr r3, [sp, 0x270]",
            "ldr r1, [sp, 0x2a4]",
            "ldr r2, [r3, 4]",
            "cmp r2, r1",
            "blt 0x24700",
            "bne 0x24570",
            "ldr r2, [r3]",
            "ldr sl, [sp, 0x2a0]",
            "cmp r2, sl",
            "blo 0x24700",
            "ldrd r0, r1, [r3, 8]",
            "mvn r2, 3",
            "mov r3, 0",
            "str r3, [sp]",
            "mvn r3, 0",
            "strd r0, r1, [sp, 0x28]",
            "mov r0, r8",
            "ldrd sl, fp, [sp, 0x28]",
            "adds r2, r2, sl",
            "adc r3, r3, fp",
            "bl sym.avio_seek",
            "mov r0, r8",
            "bl sym.avio_rb32",
            "mov sb, r0",
            "mov r0, r8",
            "bl sym.avio_r8",
            "mov r0, r8",
            "bl sym.avio_rb24",
            "mov r0, r8",
            "bl sym.avio_rb24",
            "mov sl, r0",
            "mov r0, r8",
            "bl sym.avio_r8",
            "ldr r3, [sp, 0x270]",
            "ldr r2, [r3, 0xc]",
            "cmp r2, 0",
            "blt 0x24700",
            "bne 0x245ec",
            "ldr r3, [r3, 8]",
            "cmp r3, sb",
            "blo 0x24700",
            "lsl r2, r0, 0x18",
            "asr r3, r2, 0x1f",
            "mov r1, r3",
            "ldr r3, [sp, 0x274]",
            "orr r0, r2, sl",
            "strd r0, r1, [sp, 0x28]",
            "ldr r2, [r3, 8]",
            "ldr ip, [r3, 0xc]",
            "ldr r0, [0x00024d10]",
            "rsb r3, r2, 0",
            "ldrd sl, fp, [sp, 0x28]",
            "mla r3, r0, ip, r3",
            "umull r0, r1, r2, r0",
            "adds r0, r0, sl",
            "add r1, r3, r1",
            "adc r1, r1, fp",
            "cmp r1, 0",
            "blt 0x24648",
            "bgt 0x24700",
            "bne 0x24678",
            "movw r3, 0x1388",
            "cmp r0, r3",
            "b 0x24674",
            "mov r1, 0x3e8",
            "umull r2, r3, r2, r1",
            "mla r3, r1, ip, r3",
            "ldrd r0, r1, [sp, 0x28]",
            "subs r2, r2, r0",
            "sbc r3, r3, r1",
            "cmp r3, 0",
            "bgt 0x24700",
            "bne 0x24678",
            "movw r1, 0x1388",
            "cmp r2, r1",
            "bhi 0x24700",
            "mov sl, 0",
            "mov sb, 0x3e8",
            "mov ip, 1",
            "ldr fp, [sp, 0x1c]",
            "b 0x246e0",
            "ldr r3, [sp, 0x270]",
            "lsl r2, sl, 3",
            "ldrd r0, r1, [r3, r2]",
            "ldr r3, [sp, 0x274]",
            "strd r0, r1, [sp, 0x28]",
            "mov r1, 0",
            "add r2, r3, r2",
            "ldr r0, [r2, 4]",
            "ldr r2, [r3, sl, lsl 3]",
            "umull r2, r3, r2, sb",
            "str ip, [sp, 0x10]",
            "add sl, sl, 1",
            "str ip, [sp, 0x24]",
            "mla r3, sb, r0, r3",
            "ldr r0, [sp, 0x5c]",
            "str r1, [sp, 8]",
            "str r1, [sp, 0xc]",
            "strd r2, r3, [sp]",
            "ldrd r2, r3, [sp, 0x28]",
            "bl sym.av_add_index_entry",
            "ldr ip, [sp, 0x24]",
            "ldr r2, [sp, 0x54]",
            "cmp sl, r2",
            "blo 0x2468c",
            "str fp, [sp, 0x1c]",
            "b 0x24724",
            "ldr r3, [sp, 0x28]",
            "mvn r7, 0x25",
            "str r3, [sp, 0x1c]",
            "ldr r2, [0x00024d14]",
            "mov r0, r6",
            "mov r1, 0x18",
            "add r2, r4, r2",
            "bl sym.imp.av_log",
            "b 0x24724",
            "ldr sl, [sp, 0x28]",
            "mvn r7, 0xb",
            "str sl, [sp, 0x1c]",
            "add r0, sp, 0x274",
            "bl sym.imp.av_freep",
            "add r0, sp, 0x270",
            "bl sym.imp.av_freep",
            "mov r3, 0",
            "mov r0, r8",
            "str r3, [sp]",
            "ldrd r2, r3, [sp, 0x60]",
            "bl sym.avio_seek",
            "cmp r7, 0",
            "bge 0x247a4",
            "ldr r2, [0x00024d18]",
            "mov r0, r6",
            "mov r1, 0x10",
            "add r2, r4, r2",
            "bl sym.imp.av_log",
            "b 0x247a4",
            "mov r3, 0",
            "mov r0, r8",
            "bl sym.avio_skip",
            "add r1, sp, 0x2a0",
            "ldrd r0, r1, [r1]",
            "str r7, [sp, 8]",
            "strd r0, r1, [sp]",
            "mov r1, 0",
            "mov r0, r6",
            "mov r2, r1",
            "mov r3, r1",
            "bl fcn.000241e4",
            "cmp r0, 0",
            "bge 0x247cc",
            "b 0x24ce8",
            "add r0, sp, 0x2a0",
            "mvn r2, 1",
            "ldrd sl, fp, [r0]",
            "mvn r3, 0",
            "ldr r1, [sp, 0x2a8]",
            "adds sl, sl, r2",
            "adc fp, fp, r3",
            "add r7, r1, 1",
            "strd sl, fp, [sp, 0x28]",
            "ldr fp, [sp, 0x1c]",
            "mov r0, r8",
            "bl fcn.0002416c",
            "ldr r2, [sp, 0x2c]",
            "cmp r2, r1",
            "bgt 0x247f0",
            "bne 0x248ac",
            "ldr r3, [sp, 0x28]",
            "cmp r3, r0",
            "bls 0x248ac",
            "mov r0, r8",
            "bl sym.avio_rb16",
            "subs r2, r0, 0",
            "bne 0x24768",
            "b 0x248ac",
            "mov r2, 4",
            "mov r3, 0",
            "mov r0, r8",
            "mvn sl, 1",
            "bl sym.avio_skip",
            "add r2, sp, 0x2a0",
            "ldr r3, [sp, 0x2a8]",
            "ldrd r0, r1, [r2]",
            "mvn fp, 0",
            "add r7, sp, 0x170",
            "adds r0, r0, sl",
            "add sl, r3, 1",
            "adc r1, r1, fp",
            "ldr fp, [sp, 0x1c]",
            "strd r0, r1, [sp, 0x28]",
            "b 0x24870",
            "add r1, sp, 0x2a0",
            "ldr r2, [sp, 0x34]",
            "ldrd r0, r1, [r1]",
            "mov r3, r7",
            "str sl, [sp, 8]",
            "strd r0, r1, [sp]",
            "mov r0, r6",
            "ldr r1, [sp, 0x38]",
            "bl fcn.000241e4",
            "cmp r0, 0",
            "blt 0x24ce8",
            "mov r0, r8",
            "bl fcn.0002416c",
            "ldr r2, [sp, 0x2c]",
            "cmp r2, r1",
            "bgt 0x24894",
            "bne 0x248ac",
            "ldr r3, [sp, 0x28]",
            "cmp r3, r0",
            "bls 0x248ac",
            "mov r0, r8",
            "mov r1, r7",
            "mov r2, 0x100",
            "bl fcn.0002418c",
            "cmp r0, 0",
            "bgt 0x24844",
            "mov r0, r8",
            "str fp, [sp, 0x1c]",
            "bl sym.avio_r8",
            "cmp r0, 9",
            "bne 0x24ce8",
            "b 0x24978",
            "add fp, sp, 0x2a0",
            "mov r0, r8",
            "bl sym.avio_rb32",
            "ldrd r2, r3, [fp]",
            "mov sl, r0",
            "mvn r0, 0",
            "mvn r1, 0",
            "mov r7, 0",
            "ldr fp, [sp, 0x1c]",
            "adds r2, r2, r0",
            "ldr r0, [sp, 0x2a8]",
            "adc r3, r3, r1",
            "strd r2, r3, [sp, 0x28]",
            "add sb, r0, 1",
            "b 0x24930",
            "add r3, sp, 0x2a0",
            "mov r1, 0",
            "ldrd r2, r3, [r3]",
            "mov r0, r6",
            "str sb, [sp, 8]",
            "strd r2, r3, [sp]",
            "mov r2, r1",
            "mov r3, r1",
            "bl fcn.000241e4",
            "cmp r0, 0",
            "blt 0x24ce8",
            "add r7, r7, 1",
            "cmp r7, sl",
            "bhs 0x24974",
            "mov r0, r8",
            "bl fcn.0002416c",
            "ldr r2, [sp, 0x2c]",
            "cmp r2, r1",
            "bgt 0x24900",
            "bne 0x24974",
            "ldr r3, [sp, 0x28]",
            "cmp r3, r0",
            "bhi 0x24900",
            "b 0x24974",
            "mov r0, r8",
            "mov r2, 0xa",
            "mov r3, 0",
            "bl sym.avio_skip",
            "b 0x24978",
            "str fp, [sp, 0x1c]",
            "mov r8, 0",
            "mov sb, 0",
            "ldr sl, [sp, 0x2a8]",
            "cmp sl, 1",
            "movne r0, 0",
            "moveq r0, 1",
            "cmp r5, 0",
            "moveq r0, 0",
            "cmp r0, 0",
            "beq 0x24cf4",
            "ldr fp, [sp, 0x38]",
            "ldr r0, [sp, 0x34]",
            "ldr r1, [sp, 0x1c]",
            "cmp fp, 0",
            "ldrne r7, [fp, 8]",
            "ldreq r7, [sp, 0x38]",
            "cmp r0, 0",
            "ldrne sl, [r0, 8]",
            "ldreq sl, [sp, 0x34]",
            "cmp r1, 0",
            "bne 0x24aa0",
            "ldr r1, [0x00024d1c]",
            "mov r0, r5",
            "add r1, r4, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x24a08",
            "ldr r3, [0x00024d20]",
            "mov r2, 0",
            "mov r0, r8",
            "mov r1, sb",
            "bl fcn.0007d76c",
            "bl sym.imp.__aeabi_d2lz",
            "movw r3, 0x438",
            "strd r0, r1, [r6, r3]",
            "b 0x24b04",
            "ldr r1, [0x00024d24]",
            "mov r0, r5",
            "add r1, r4, r1",
            "bl sym.imp.strcmp",
            "rsbs r0, r0, 1",
            "movlo r0, 0",
            "cmp sl, 0",
            "moveq r0, 0",
            "cmp r0, 0",
            "beq 0x24a54",
            "mov r2, 0",
            "ldr r3, [0x00024d28]",
            "mov r0, r8",
            "mov r1, sb",
            "bl fcn.0007d76c",
            "bl fcn.0007dd08",
            "cmp r0, 0",
            "strge r0, [sl, 4]",
            "bge 0x24b04",
            "ldr r1, [0x00024d2c]",
            "mov r0, r5",
            "add r1, r4, r1",
            "bl sym.imp.strcmp",
            "rsbs r0, r0, 1",
            "movlo r0, 0",
            "cmp r7, 0",
            "moveq r0, 0",
            "cmp r0, 0",
            "beq 0x24b04",
            "mov r2, 0",
            "ldr r3, [0x00024d28]",
            "mov r0, r8",
            "mov r1, sb",
            "bl fcn.0007d76c",
            "bl fcn.0007dd08",
            "cmp r0, 0",
            "strge r0, [r7, 4]",
            "b 0x24b04",
            "ldr r2, [sp, 0x1c]",
            "cmp r2, 3",
            "bne 0x24b04",
            "ldr r3, [r6, 0x14]",
            "cmp r3, 1",
            "bne 0x24b04",
            "cmp r7, 0",
            "bne 0x24ad8",
            "ldr r1, [0x00024d30]",
            "mov r0, r5",
            "add r1, r4, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x24af8",
            "cmp sl, 0",
            "bne 0x24b04",
            "ldr r1, [0x00024d34]",
            "mov r0, r5",
            "add r1, r4, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x24b04",
            "ldr r3, [r6, 0x428]",
            "bic r3, r3, 1",
            "str r3, [r6, 0x428]",
            "ldr r1, [0x00024d1c]",
            "mov r0, r5",
            "add r1, r4, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x24cf4",
            "ldr r1, [0x00024d38]",
            "mov r0, r5",
            "add r1, r4, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x24cf4",
            "ldr r1, [0x00024d3c]",
            "mov r0, r5",
            "add r1, r4, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x24cf4",
            "ldr r1, [0x00024d40]",
            "mov r0, r5",
            "add r1, r4, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x24cf4",
            "ldr r1, [0x00024d24]",
            "mov r0, r5",
            "add r1, r4, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x24cf4",
            "ldr r1, [0x00024d44]",
            "mov r0, r5",
            "add r1, r4, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x24cf4",
            "ldr r1, [0x00024d34]",
            "mov r0, r5",
            "add r1, r4, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x24cf4",
            "ldr r1, [0x00024d2c]",
            "mov r0, r5",
            "add r1, r4, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x24cf4",
            "ldr r1, [0x00024d48]",
            "mov r0, r5",
            "add r1, r4, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x24cf4",
            "ldr r1, [0x00024d4c]",
            "mov r0, r5",
            "add r1, r4, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x24cf0",
            "ldr r1, [0x00024d50]",
            "mov r0, r5",
            "add r1, r4, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x24cf4",
            "ldr r1, [0x00024d30]",
            "mov r0, r5",
            "add r1, r4, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x24cf4",
            "ldr r3, [sp, 0x1c]",
            "cmp r3, 1",
            "bne 0x24c80",
            "mov r1, sb",
            "mov r0, r8",
            "mov r2, 0",
            "mov r3, 0",
            "bl fcn.0007dcf4",
            "cmp r0, 0",
            "ldr r1, [0x00024d54]",
            "ldreq r1, [0x00024d58]",
            "add r7, sp, 0x170",
            "add r1, r4, r1",
            "mov r2, 0x100",
            "mov r0, r7",
            "bl sym.imp.av_strlcpy",
            "add r0, r6, 0x4b0",
            "mov r1, r5",
            "add r0, r0, 8",
            "mov r2, r7",
            "mov r3, 0",
            "bl sym.imp.av_dict_set",
            "b 0x24cf0",
            "ldr sl, [sp, 0x1c]",
            "cmp sl, 0",
            "bne 0x24cc8",
            "ldr r2, [0x00024d5c]",
            "add r7, sp, 0x170",
            "mov r1, 0x100",
            "mov r0, r7",
            "strd r8, sb, [sp]",
            "add r2, r4, r2",
            "bl sym.imp.snprintf",
            "add r0, r6, 0x4b0",
            "mov r1, r5",
            "add r0, r0, 8",
            "mov r2, r7",
            "ldr r3, [sp, 0x1c]",
            "bl sym.imp.av_dict_set",
            "ldr r0, [sp, 0x1c]",
            "b 0x24cf4",
            "ldr fp, [sp, 0x1c]",
            "cmp fp, 2",
            "bne 0x24cf0",
            "add r0, r6, 0x4b0",
            "mov r1, r5",
            "add r0, r0, 8",
            "add r2, sp, 0x170",
            "b 0x24c74",
            "mvn r0, 0",
            "b 0x24cf4",
            "mov r0, 0",
            "add sp, sp, 0x27c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00024d60": {
        "function_address": "0x00024d60",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r6, r1",
            "ldr r7, [0x00024e34]",
            "mov r1, 0",
            "mov r5, r0",
            "bl sym.avformat_new_stream",
            "subs r4, r0, 0",
            "add r7, pc, r7",
            "beq 0x24e2c",
            "cmp r6, 1",
            "str r6, [r4, 4]",
            "beq 0x24da0",
            "cmp r6, 2",
            "beq 0x24dac",
            "cmp r6, 0",
            "bne 0x24dd0",
            "ldr r3, [r4, 8]",
            "str r6, [r3, 0xd0]",
            "b 0x24dd0",
            "ldr r3, [r4, 8]",
            "mov r2, 0",
            "mov r0, r5",
            "mov r1, 0x30",
            "str r2, [r3, 0xd4]",
            "ldr r2, [0x00024e38]",
            "str r6, [r3, 0xd0]",
            "add r2, r7, r2",
            "bl sym.imp.av_log",
            "ldr r3, [r5, 0x14]",
            "cmp r3, 2",
            "bhi 0x24e0c",
            "bne 0x24e18",
            "ldr r3, [r5, 0x18]",
            "ldr r2, [r3]",
            "ldr r2, [r2, 8]",
            "ldr r2, [r2, 0xd0]",
            "cmp r2, 2",
            "beq 0x24e18",
            "ldr r3, [r3, 4]",
            "ldr r3, [r3, 8]",
            "ldr r3, [r3, 0xd0]",
            "cmp r3, 2",
            "beq 0x24e18",
            "ldr r3, [r5, 0x428]",
            "bic r3, r3, 1",
            "str r3, [r5, 0x428]",
            "mov r0, r4",
            "mov r1, 0x20",
            "mov r2, 1",
            "mov r3, 0x3e8",
            "bl sym.avpriv_set_pts_info",
            "mov r0, r4",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.00024f20": {
        "function_address": "0x00024f20",
        "instructions": [
            "ldr ip, [0x00025018]",
            "cmp r3, 0x40",
            "push {r3, r4, r5, lr}",
            "mov r4, r2",
            "add ip, pc, ip",
            "beq 0x24fe4",
            "bgt 0x24f64",
            "cmp r3, 0x10",
            "beq 0x24fac",
            "bgt 0x24f50",
            "cmp r3, 0",
            "b 0x24f5c",
            "cmp r3, 0x20",
            "beq 0x24fc8",
            "cmp r3, 0x30",
            "bne 0x24ff8",
            "b 0x24f90",
            "cmp r3, 0x60",
            "beq 0x24fec",
            "bgt 0x24f7c",
            "cmp r3, 0x50",
            "bne 0x24ff8",
            "b 0x24fdc",
            "cmp r3, 0xa0",
            "beq 0x24fa4",
            "cmp r3, 0xb0",
            "bne 0x24ff8",
            "b 0x24fb4",
            "ldr r2, [r4, 0x174]",
            "ldr r3, [0x0002501c]",
            "cmp r2, 8",
            "movne r3, 0x10000",
            "b 0x24ff0",
            "ldr r3, [0x00025020]",
            "b 0x24ff0",
            "ldr r3, [0x00025024]",
            "b 0x24ff0",
            "ldr r3, [0x00025028]",
            "str r3, [r2, 0xd4]",
            "mov r3, 0x3e80",
            "str r3, [r2, 0x3c]",
            "pop {r3, r4, r5, pc}",
            "ldr r3, [0x0002502c]",
            "str r3, [r2, 0xd4]",
            "sub r3, r3, 0x15000",
            "str r3, [r1]",
            "pop {r3, r4, r5, pc}",
            "mov r3, 0x1f40",
            "b 0x24fe8",
            "mov r3, 0x3e80",
            "str r3, [r4, 0x3c]",
            "ldr r3, [0x00025030]",
            "str r3, [r4, 0xd4]",
            "pop {r3, r4, r5, pc}",
            "ldr r2, [0x00025034]",
            "asr r5, r3, 4",
            "mov r1, 0x20",
            "mov r3, r5",
            "add r2, ip, r2",
            "bl sym.imp.av_log",
            "str r5, [r4, 0xd8]",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.00074d60": {
        "function_address": "0x00074d60",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "cmp r0, 0",
            "mov r6, r1",
            "mov r4, r2",
            "mov r5, r3",
            "mvneq r0, 0x15",
            "add r8, sp, 0x28",
            "ldm r8, {r8, sb, fp}",
            "popeq {r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "cmp r1, 0",
            "movne r2, 8",
            "moveq r2, 4",
            "moveq r7, r1",
            "movne r7, 1",
            "orrs r3, r4, r5",
            "mov r1, 2",
            "addne r2, r2, 8",
            "orrne r7, r7, 2",
            "cmp r8, 0",
            "addne r2, r2, 4",
            "orrne r7, r7, 4",
            "orrs sl, fp, sb",
            "addne r2, r2, 8",
            "orrne r7, r7, 8",
            "bl sym.imp.av_packet_new_side_data",
            "cmp r0, 0",
            "mvneq r0, 0xb",
            "popeq {r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "cmp r6, 0",
            "mov r3, r0",
            "str r7, [r3], 4",
            "beq 0x74de8",
            "add r3, r3, 4",
            "str r6, [r0, 4]",
            "orrs r2, r4, r5",
            "beq 0x74dfc",
            "str r4, [r3]",
            "str r5, [r3, 4]",
            "add r3, r3, 8",
            "cmp r8, 0",
            "beq 0x74e08",
            "str r8, [r3], 4",
            "cmp sl, 0",
            "beq 0x74e20",
            "str sb, [r3]",
            "str fp, [r3, 4]",
            "mov r0, 0",
            "pop {r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "mov r0, sl",
            "pop {r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.imp.av_packet_new_side_data": {
        "function_address": "0x00009b88",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x9d8]!"
        ]
    },
    "fcn.000745ec": {
        "function_address": "0x000745ec",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r7, r3",
            "sub sp, sp, 0x28",
            "mov r3, 0",
            "mov r4, r0",
            "mov r5, r1",
            "ldr r6, [0x00074768]",
            "ldr r8, [sp, 0x48]",
            "ldr sl, [sp, 0x4c]",
            "ldr sb, [sp, 0x50]",
            "add r6, pc, r6",
            "strb r3, [r0]",
            "subs r3, r2, 0",
            "beq 0x74630",
            "ldr r2, [0x0007476c]",
            "add r2, r6, r2",
            "bl sym.imp.av_strlcatf",
            "cmp r7, 0",
            "beq 0x7465c",
            "ldrb r3, [r7]",
            "cmp r3, 0",
            "beq 0x7465c",
            "ldr r2, [0x00074770]",
            "mov r0, r4",
            "mov r1, r5",
            "mov r3, r7",
            "add r2, r6, r2",
            "bl sym.imp.av_strlcatf",
            "mov r1, 0",
            "mov r2, 0x20",
            "mov r0, sp",
            "mov r7, sp",
            "bl sym.imp.memset",
            "mov r3, 4",
            "mov r0, r8",
            "str r3, [sp]",
            "mov r1, 0",
            "mov r2, sp",
            "add r3, sp, 0x24",
            "bl sym.imp.getaddrinfo",
            "cmp r0, 0",
            "bne 0x746f0",
            "ldr r3, [sp, 0x24]",
            "ldr r3, [r3, 4]",
            "cmp r3, 0xa",
            "movne r0, r4",
            "movne r1, r8",
            "bne 0x746dc",
            "ldr r1, [0x00074774]",
            "mov r2, r5",
            "mov r0, r4",
            "add r1, r6, r1",
            "bl sym.imp.av_strlcat",
            "mov r1, r8",
            "mov r0, r4",
            "mov r2, r5",
            "bl sym.imp.av_strlcat",
            "ldr r1, [0x00074778]",
            "mov r0, r4",
            "add r1, r6, r1",
            "mov r2, r5",
            "bl sym.imp.av_strlcat",
            "ldr r0, [sp, 0x24]",
            "bl sym.imp.freeaddrinfo",
            "b 0x74700",
            "mov r0, r4",
            "mov r1, r8",
            "mov r2, r5",
            "bl sym.imp.av_strlcat",
            "cmp sl, 0",
            "blt 0x74720",
            "ldr r2, [0x0007477c]",
            "mov r0, r4",
            "mov r1, r5",
            "mov r3, sl",
            "add r2, r6, r2",
            "bl sym.imp.av_strlcatf",
            "cmp sb, 0",
            "beq 0x74758",
            "mov r0, r4",
            "bl sym.imp.strlen",
            "add r3, sp, 0x54",
            "mov r1, r0",
            "cmp r5, r1",
            "str r3, [sp, 0x20]",
            "add r0, r4, r0",
            "rsbgt r1, r1, r5",
            "movle r1, 0",
            "mov r2, sb",
            "ldr r3, [sp, 0x20]",
            "bl sym.imp.vsnprintf",
            "mov r0, r4",
            "bl sym.imp.strlen",
            "add sp, sp, 0x28",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "sym.imp.av_strlcatf": {
        "function_address": "0x00009fc0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x708]!"
        ]
    },
    "sym.imp.getaddrinfo": {
        "function_address": "0x0000a14c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x600]!"
        ]
    },
    "sym.imp.freeaddrinfo": {
        "function_address": "0x0000996c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0xb40]!"
        ]
    },
    "fcn.00025bc8": {
        "function_address": "0x00025bc8",
        "instructions": [
            "push {r4, lr}",
            "ldr r4, [r0, 0x14]",
            "ldr r0, [r4]",
            "cmp r0, 0",
            "beq 0x25be8",
            "bl sym.ffurl_close",
            "mov r3, 0",
            "str r3, [r4]",
            "mov r0, 0",
            "pop {r4, pc}"
        ]
    },
    "fcn.00025ed0": {
        "function_address": "0x00025ed0",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r4, r0",
            "mov r5, r1",
            "mov r7, r2",
            "bl sym.avio_rb32",
            "subs r6, r0, 0",
            "movne r6, 0",
            "bne 0x25f6c",
            "mov r0, r4",
            "bl sym.avio_r8",
            "cmp r0, 1",
            "bne 0x25f6c",
            "mov r0, r4",
            "bl sym.avio_r8",
            "str r0, [r5]",
            "mov r0, r4",
            "bl sym.avio_rb32",
            "asrs r5, r0, 0x18",
            "str r0, [r7]",
            "bne 0x25f6c",
            "cmp r0, 0xf",
            "ble 0x25f68",
            "sub r0, r0, 0x10",
            "str r0, [r7]",
            "mov r0, r4",
            "bl sym.avio_rb32",
            "subs r6, r0, 0",
            "bne 0x25f68",
            "mov r0, r4",
            "bl sym.avio_r8",
            "cmp r0, 0xe1",
            "bne 0x25f6c",
            "mov r0, r4",
            "bl sym.avio_r8",
            "cmp r0, 0xe2",
            "movne r6, 0",
            "moveq r6, 1",
            "b 0x25f6c",
            "mov r6, r5",
            "mov r0, r6",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.00025f74": {
        "function_address": "0x00025f74",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r7, r0",
            "ldr r4, [r0, 0x10]",
            "sub sp, sp, 0x34",
            "mov r8, r1",
            "ldr r3, [r0, 0x18]",
            "sub r8, r8, 8",
            "mov r0, r4",
            "ldr r6, [0x000260c4]",
            "ldr sb, [r3]",
            "bl sym.avio_rl32",
            "str r0, [sp, 0x1c]",
            "mov r0, r4",
            "bl sym.avio_rl32",
            "ldr r3, [r7, 0x46c]",
            "add r6, pc, r6",
            "mov r5, r0",
            "tst r3, 2",
            "bne 0x260ac",
            "cmp r0, 0x3e8",
            "bls 0x25fe8",
            "ldr r2, [0x000260c8]",
            "mov r3, r5",
            "mov r5, 0x3e8",
            "str r0, [sp]",
            "mov r1, 0x10",
            "mov r0, r7",
            "add r2, r6, r2",
            "bl sym.imp.av_log",
            "lsl r3, r5, 2",
            "cmp r8, r3",
            "bhs 0x2600c",
            "ldr r2, [0x000260cc]",
            "mov r0, r7",
            "mov r1, 0x10",
            "add r2, r6, r2",
            "bl sym.imp.av_log",
            "b 0x260ac",
            "mov r6, 0",
            "mov r2, 0",
            "rsb r8, r3, r8",
            "mov r0, sb",
            "mov r3, 0",
            "str r6, [sp, 8]",
            "strd r2, r3, [sp]",
            "mov r7, r6",
            "str r6, [sp, 0xc]",
            "str r6, [sp, 0x10]",
            "bl sym.av_add_index_entry",
            "b 0x260a4",
            "mov r0, r4",
            "bl sym.avio_rl32",
            "mov r1, r0",
            "ldr r0, [sp, 0x1c]",
            "mov r2, r6",
            "asr r3, r2, 0x1f",
            "ldr fp, [sp, 0x1c]",
            "strd r2, r3, [sp, 0x28]",
            "umull sl, fp, r6, fp",
            "strd sl, fp, [sp, 0x20]",
            "mov sl, 1",
            "mla r3, r0, r3, fp",
            "str r7, [sp, 8]",
            "str r7, [sp, 0xc]",
            "mov fp, 0",
            "str r7, [sp, 0x10]",
            "add r6, r6, 1",
            "mov r0, sb",
            "str r3, [sp, 0x24]",
            "ldrd r2, r3, [sp, 0x20]",
            "adds r2, r2, sl",
            "adc r3, r3, fp",
            "strd r2, r3, [sp]",
            "lsl r2, r1, 0xa",
            "lsr r3, r1, 0x16",
            "bl sym.av_add_index_entry",
            "cmp r6, r5",
            "blo 0x2603c",
            "mov r0, r4",
            "mov r2, r8",
            "asr r3, r2, 0x1f",
            "add sp, sp, 0x34",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "b sym.avio_skip"
        ]
    },
    "fcn.000260d0": {
        "function_address": "0x000260d0",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r4, r0",
            "mov r5, r1",
            "mov r6, r2",
            "bl fcn.000749e8",
            "cmp r0, 0",
            "popge {r4, r5, r6, pc}",
            "mov r0, r4",
            "mov r1, 0",
            "bl sym.avformat_new_stream",
            "cmp r0, 0",
            "beq 0x26280",
            "sub r6, r6, 3",
            "str r5, [r0, 4]",
            "ldr r3, [r0, 8]",
            "cmp r6, 0x15",
            "addls pc, pc, r6, lsl 2",
            "b 0x26264",
            "b 0x26170",
            "b 0x26170",
            "b 0x26264",
            "b 0x26264",
            "b 0x26254",
            "b 0x26254",
            "b 0x261c4",
            "b 0x261f8",
            "b 0x26190",
            "b 0x26190",
            "b 0x26180",
            "b 0x26180",
            "b 0x26180",
            "b 0x26180",
            "b 0x26230",
            "b 0x26264",
            "b 0x26264",
            "b 0x26190",
            "b 0x26264",
            "b 0x261a8",
            "b 0x261a8",
            "b 0x26254",
            "mov r2, 0",
            "str r2, [r3, 0xd0]",
            "add r2, r2, 8",
            "b 0x26270",
            "mov r2, 0",
            "str r2, [r3, 0xd0]",
            "add r2, r2, 0x19",
            "b 0x26270",
            "mov r2, 0",
            "str r2, [r3, 0xd0]",
            "add r2, r2, 2",
            "str r2, [r3, 0xd4]",
            "str r2, [r0, 0x60]",
            "b 0x26274",
            "mov r2, 0",
            "str r2, [r3, 0xd0]",
            "add r2, r2, 1",
            "str r2, [r3, 0xd4]",
            "mov r3, 2",
            "str r3, [r0, 0x60]",
            "b 0x26274",
            "mov r2, 1",
            "ldr r1, [0x00026288]",
            "str r2, [r3, 0xd0]",
            "str r2, [r3, 0x40]",
            "movw r2, 0xbb80",
            "str r2, [r3, 0x3c]",
            "ldr r2, [0x0002628c]",
            "str r1, [r3, 0xd4]",
            "str r2, [r3, 4]",
            "mov r2, 3",
            "str r2, [r3, 0x100]",
            "add r2, r2, 0x15",
            "b 0x26228",
            "mov r2, 1",
            "mov r1, 0x10000",
            "str r2, [r3, 0xd0]",
            "str r2, [r3, 0x40]",
            "movw r2, 0xbb80",
            "str r2, [r3, 0x3c]",
            "ldr r2, [0x00026290]",
            "str r1, [r3, 0xd4]",
            "str r2, [r3, 4]",
            "mov r2, 2",
            "str r2, [r3, 0x100]",
            "add r2, r2, 0xe",
            "str r2, [r3, 0x174]",
            "b 0x26274",
            "mov r2, 1",
            "str r2, [r3, 0xd0]",
            "ldr r2, [0x00026294]",
            "str r2, [r3, 0xd4]",
            "mov r2, 2",
            "str r2, [r3, 0x40]",
            "movw r2, 0xbb80",
            "str r2, [r3, 0x3c]",
            "b 0x26274",
            "mov r2, 2",
            "str r2, [r3, 0xd0]",
            "mov r2, 0",
            "b 0x26270",
            "mvn r2, 0",
            "str r2, [r3, 0xd0]",
            "add r2, r2, 1",
            "str r2, [r3, 0xd4]",
            "ldr r0, [r4, 0x14]",
            "sub r0, r0, 1",
            "pop {r4, r5, r6, pc}",
            "mvn r0, 0xb",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.000749e8": {
        "function_address": "0x000749e8",
        "instructions": [
            "mov r3, r0",
            "ldr r2, [r0, 0x14]",
            "mov r0, 0",
            "b 0x74a10",
            "ldr ip, [r3, 0x18]",
            "ldr ip, [ip, r0, lsl 2]",
            "ldr ip, [ip, 4]",
            "cmp ip, r1",
            "bxeq lr",
            "add r0, r0, 1",
            "cmp r0, r2",
            "blo 0x749f8",
            "mvn r0, 0",
            "bx lr"
        ]
    },
    "fcn.00026508": {
        "function_address": "0x00026508",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r8, r1",
            "ldr r5, [0x0002659c]",
            "subs r1, r3, 0",
            "mov r7, r0",
            "sub sp, sp, 0x90",
            "mov r4, r2",
            "and r0, r2, 0xff",
            "add r5, pc, r5",
            "beq 0x26534",
            "bl fcn.0007d264",
            "cmp r4, 0",
            "movlt r0, 0",
            "blt 0x26594",
            "ubfx r2, r4, 0x10, 8",
            "tst r4, 0x20000000",
            "str r2, [sp]",
            "ubfx r2, r4, 8, 8",
            "str r2, [sp, 4]",
            "moveq r3, 0x3a",
            "movne r3, 0x3b",
            "ldr r2, [0x000265a0]",
            "add r6, sp, 0x10",
            "str r3, [sp, 8]",
            "mov r1, 0x80",
            "str r0, [sp, 0xc]",
            "ubfx r3, r4, 0x18, 5",
            "add r2, r5, r2",
            "mov r0, r6",
            "bl sym.imp.snprintf",
            "mov r0, r7",
            "mov r1, r8",
            "mov r2, r6",
            "mov r3, 0",
            "bl sym.imp.av_dict_set",
            "add sp, sp, 0x90",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.00025eb0": {
        "function_address": "0x00025eb0",
        "instructions": [
            "mov r3, 1",
            "push {r0, r1, r2, lr}",
            "mov r2, 0",
            "str r3, [sp]",
            "mov r3, 0",
            "bl sym.avio_seek",
            "add sp, sp, 0xc",
            "ldm sp!, {pc}"
        ]
    },
    "fcn.00026c70": {
        "function_address": "0x00026c70",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x3c",
            "mov r4, r2",
            "mov r5, r3",
            "mov r6, r0",
            "add fp, sp, 0x30",
            "ldr sl, [sp, 0x60]",
            "mov r8, 0",
            "bl sym.avio_rb32",
            "mov r2, 0",
            "mov r3, 0x80000000",
            "strd r2, r3, [sp, 0x10]",
            "mov r2, 0",
            "mov r3, 0",
            "mov r7, r0",
            "strd r2, r3, [sp, 8]",
            "add r3, sp, 0x34",
            "str r3, [sp, 0x24]",
            "mov r2, sl",
            "asr r3, r2, 0x1f",
            "strd r2, r3, [sp, 0x28]",
            "b 0x26d00",
            "orrs r3, r4, r5",
            "beq 0x26dfc",
            "mov r0, r6",
            "bl sym.url_feof",
            "cmp r0, 0",
            "bne 0x26dfc",
            "lsl r7, r7, 8",
            "mov r0, r6",
            "bl sym.avio_r8",
            "orr r7, r0, r7",
            "mvn r2, 0",
            "mvn r3, 0",
            "adds r4, r4, r2",
            "adc r5, r5, r3",
            "cmp r7, 0",
            "bne 0x26cc8",
            "orrs r3, r4, r5",
            "beq 0x26dfc",
            "mov r0, r6",
            "bl sym.url_feof",
            "cmp r0, 0",
            "bne 0x26dfc",
            "mov r0, r6",
            "bl sym.avio_r8",
            "cmp r0, 1",
            "mov r7, r0",
            "bne 0x26cf0",
            "mov r0, r6",
            "bl fcn.00025eb0",
            "mvn r2, 4",
            "strd r0, r1, [sp, 0x18]",
            "mvn r3, 0",
            "mov r0, r6",
            "str r7, [sp]",
            "bl sym.avio_seek",
            "cmp r1, 0",
            "blt 0x26dfc",
            "mov r0, r6",
            "mov r1, fp",
            "ldr r2, [sp, 0x24]",
            "bl fcn.00025ed0",
            "cmp r0, 0",
            "beq 0x26de4",
            "ldr r3, [sp, 0x30]",
            "cmp r3, 0xbf",
            "bne 0x26de4",
            "mov r0, r6",
            "bl sym.avio_r8",
            "mov r0, r6",
            "bl sym.avio_r8",
            "mov r0, r6",
            "bl sym.avio_rb32",
            "mov r2, r0",
            "mov r3, 0",
            "mov sb, r0",
            "mov r0, r6",
            "strd r2, r3, [sp, 0x10]",
            "bl fcn.00025eb0",
            "mvn r2, 0x15",
            "mvn r3, 0",
            "adds r2, r2, r0",
            "adc r3, r3, r1",
            "cmp sl, 0",
            "strd r2, r3, [sp, 8]",
            "blt 0x26dfc",
            "ldr r3, [sp, 0x2c]",
            "cmp r3, 0",
            "bgt 0x26de4",
            "bne 0x26dfc",
            "cmp sl, sb",
            "bls 0x26dfc",
            "mov r0, r6",
            "ldrd r2, r3, [sp, 0x18]",
            "str r8, [sp]",
            "bl sym.avio_seek",
            "cmp r1, 0",
            "bge 0x26cf0",
            "ldr r2, [sp, 8]",
            "ldr r3, [sp, 0xc]",
            "orrs r2, r2, r3",
            "beq 0x26e20",
            "mov r3, 0",
            "mov r0, r6",
            "str r3, [sp]",
            "ldrd r2, r3, [sp, 8]",
            "bl sym.avio_seek",
            "ldr r0, [sp, 0x10]",
            "ldr r1, [sp, 0x14]",
            "add sp, sp, 0x3c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00028cd0": {
        "function_address": "0x00028cd0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "subs r7, r1, 0",
            "ldr r4, [0x000292c8]",
            "sub sp, sp, 0xec",
            "mov r5, r0",
            "mov fp, r3",
            "str r2, [sp, 0x28]",
            "moveq r8, r7",
            "add r4, pc, r4",
            "beq 0x292bc",
            "mov r0, r7",
            "mov r1, 0x3a",
            "bl sym.imp.strchr",
            "subs r8, r0, 0",
            "beq 0x292bc",
            "ldr r3, [r5]",
            "cmp r3, 1",
            "bne 0x28d9c",
            "mov r0, r7",
            "bl sym.imp.strlen",
            "mov r1, 3",
            "add r0, r0, 2",
            "bl fcn.0007d19c",
            "lsl r0, r0, 2",
            "add r5, r0, 0x1f",
            "add sl, r0, 1",
            "mov r0, r5",
            "bl sym.imp.av_malloc",
            "subs r8, r0, 0",
            "beq 0x292bc",
            "ldr r2, [0x000292cc]",
            "mov r1, r5",
            "add r2, r4, r2",
            "bl sym.imp.snprintf",
            "mov r0, r8",
            "bl sym.imp.strlen",
            "add r6, r8, r0",
            "mov r0, r7",
            "bl sym.imp.strlen",
            "mov r1, sl",
            "mov r3, r0",
            "mov r2, r7",
            "mov r0, r6",
            "bl sym.imp.av_base64_encode",
            "ldr r1, [0x000292d0]",
            "add r2, r8, r5",
            "mov r0, r6",
            "rsb r2, r6, r2",
            "add r1, r4, r1",
            "bl sym.imp.av_strlcat",
            "b 0x292bc",
            "cmp r3, 2",
            "movne r8, 0",
            "bne 0x292bc",
            "mov r0, r7",
            "bl sym.imp.av_strdup",
            "subs sb, r0, 0",
            "moveq r8, sb",
            "beq 0x292bc",
            "mov r1, 0x3a",
            "bl sym.imp.strchr",
            "subs r8, r0, 0",
            "beq 0x292b4",
            "mov r7, 0",
            "ldr r2, [0x000292d4]",
            "strb r7, [r8]",
            "mov r1, 9",
            "ldr r3, [r5, 0x34c]",
            "add r0, sp, 0xd4",
            "add r2, r4, r2",
            "add r3, r3, 1",
            "str r3, [r5, 0x34c]",
            "bl sym.imp.snprintf",
            "bl sym.imp.av_get_random_seed",
            "str r0, [sp, 0xe0]",
            "bl sym.imp.av_get_random_seed",
            "add r1, sp, 0xe0",
            "str r0, [sp, 0xe4]",
            "mov r2, 8",
            "mov r3, 1",
            "add r0, sp, 0xb0",
            "bl fcn.000742a8",
            "ldr r3, [0x000292d8]",
            "strb r7, [sp, 0xc0]",
            "ldr r3, [r4, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.av_malloc",
            "subs r6, r0, 0",
            "moveq r8, r6",
            "beq 0x292b4",
            "bl sym.imp.av_md5_init",
            "ldr r2, [0x000292dc]",
            "add r0, r5, 4",
            "str r0, [sp, 0x24]",
            "add r8, r8, 1",
            "ldr r3, [sp, 0x24]",
            "mov r0, r6",
            "add r2, r4, r2",
            "str r8, [sp, 4]",
            "mov r1, sb",
            "add r8, sp, 0xc4",
            "str r2, [sp]",
            "str r7, [sp, 8]",
            "bl fcn.0002890c",
            "mov r0, r6",
            "mov r1, r8",
            "bl sym.imp.av_md5_final",
            "mov r3, 1",
            "add r0, sp, 0x8c",
            "mov r1, r8",
            "mov r2, 0x10",
            "bl fcn.000742a8",
            "strb r7, [sp, 0xac]",
            "ldrb r3, [r5, 0x1f8]",
            "cmp r3, r7",
            "beq 0x28f48",
            "ldr r1, [0x000292e0]",
            "add r7, r5, 0x1f8",
            "mov r0, r7",
            "add r1, r4, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x28f48",
            "ldr r1, [0x000292e4]",
            "mov r0, r7",
            "add r1, r4, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x28f38",
            "mov r0, r6",
            "add r7, sp, 0x8c",
            "bl sym.imp.av_md5_init",
            "ldr r2, [0x000292dc]",
            "add r3, sp, 0xb0",
            "str r3, [sp, 4]",
            "mov r8, 0",
            "add r3, r5, 0xcc",
            "mov r0, r6",
            "add r2, r4, r2",
            "mov r1, r7",
            "add sl, sp, 0xc4",
            "str r2, [sp]",
            "str r8, [sp, 8]",
            "bl fcn.0002890c",
            "mov r0, r6",
            "mov r1, sl",
            "bl sym.imp.av_md5_final",
            "mov r0, r7",
            "mov r1, sl",
            "mov r2, 0x10",
            "mov r3, 1",
            "bl fcn.000742a8",
            "strb r8, [sp, 0xac]",
            "b 0x28f48",
            "mov r0, r6",
            "mov r8, 0",
            "bl sym.imp.av_free",
            "b 0x292b4",
            "ldr r8, [0x000292dc]",
            "mov r0, r6",
            "bl sym.imp.av_md5_init",
            "mov r7, 0",
            "mov r1, fp",
            "add r8, r4, r8",
            "ldr r3, [sp, 0x28]",
            "mov r2, r8",
            "add sl, sp, 0xc4",
            "mov r0, r6",
            "str r7, [sp]",
            "bl fcn.0002890c",
            "mov r1, sl",
            "mov r0, r6",
            "bl sym.imp.av_md5_final",
            "mov r1, sl",
            "mov r2, 0x10",
            "mov r3, 1",
            "add r0, sp, 0x68",
            "bl fcn.000742a8",
            "add fp, r5, 0xcc",
            "mov r0, r6",
            "strb r7, [sp, 0x88]",
            "add sl, r5, 0x200",
            "bl sym.imp.av_md5_init",
            "mov r0, r6",
            "add r1, sp, 0x8c",
            "mov r2, r8",
            "mov r3, fp",
            "str r7, [sp]",
            "add sl, sl, 2",
            "bl fcn.0002890c",
            "ldr r1, [0x000292e8]",
            "mov r0, sl",
            "add r1, r4, r1",
            "bl sym.imp.strcmp",
            "cmp r0, r7",
            "beq 0x28ff8",
            "ldr r1, [0x000292ec]",
            "mov r0, sl",
            "add r1, r4, r1",
            "bl sym.imp.strcmp",
            "cmp r0, r7",
            "bne 0x29024",
            "ldr r1, [0x000292dc]",
            "add r3, sp, 0xb0",
            "str r3, [sp]",
            "mov r3, 0",
            "str r3, [sp, 0xc]",
            "mov r0, r6",
            "add r1, r4, r1",
            "add r2, sp, 0xd4",
            "mov r3, r1",
            "stmib sp, {r1, sl}",
            "bl fcn.0002890c",
            "ldr r1, [0x000292dc]",
            "add r2, sp, 0x68",
            "mov r3, 0",
            "mov r0, r6",
            "add r7, sp, 0xc4",
            "mov r8, 0",
            "add r1, r4, r1",
            "bl fcn.0002890c",
            "mov r0, r6",
            "mov r1, r7",
            "bl sym.imp.av_md5_final",
            "mov r3, 1",
            "mov r1, r7",
            "mov r2, 0x10",
            "add r0, sp, 0x44",
            "bl fcn.000742a8",
            "mov r0, r6",
            "strb r8, [sp, 0x64]",
            "bl sym.imp.av_free",
            "ldrb r3, [r5, 0x202]",
            "cmp r3, r8",
            "beq 0x29094",
            "ldr r1, [0x000292e8]",
            "mov r0, sl",
            "add r1, r4, r1",
            "bl sym.imp.strcmp",
            "cmp r0, r8",
            "bne 0x292b4",
            "mov r0, sb",
            "bl sym.imp.strlen",
            "mov r3, r0",
            "ldr r0, [sp, 0x24]",
            "str r3, [sp, 0x14]",
            "bl sym.imp.strlen",
            "mov r8, r0",
            "mov r0, fp",
            "bl sym.imp.strlen",
            "mov r7, r0",
            "ldr r0, [sp, 0x28]",
            "bl sym.imp.strlen",
            "add r1, sp, 0x44",
            "mov r6, r0",
            "mov r0, r1",
            "str r1, [sp, 0x34]",
            "bl sym.imp.strlen",
            "mov r2, r0",
            "add r0, r5, 0x1f8",
            "str r2, [sp, 0x18]",
            "str r0, [sp, 0x2c]",
            "bl sym.imp.strlen",
            "mov r1, r0",
            "add r0, r5, 0x220",
            "str r1, [sp, 0x1c]",
            "str r0, [sp, 0x30]",
            "bl sym.imp.strlen",
            "mov ip, r0",
            "mov r0, sl",
            "str ip, [sp, 0x20]",
            "bl sym.imp.strlen",
            "str r0, [sp, 0x38]",
            "add r0, sp, 0xb0",
            "bl sym.imp.strlen",
            "str r0, [sp, 0x3c]",
            "add r0, sp, 0xd4",
            "bl sym.imp.strlen",
            "ldr r3, [sp, 0x14]",
            "ldr r2, [sp, 0x18]",
            "ldr r1, [sp, 0x1c]",
            "add r3, r3, r8",
            "ldr ip, [sp, 0x20]",
            "add r3, r3, 0x96",
            "add r3, r3, r7",
            "add r3, r3, r6",
            "add r3, r3, r2",
            "ldr r2, [sp, 0x3c]",
            "add r3, r3, r1",
            "ldr r1, [sp, 0x38]",
            "add r3, r3, ip",
            "add r3, r3, r1",
            "add r6, r3, r2",
            "add r6, r6, r0",
            "mov r0, r6",
            "bl sym.imp.av_malloc",
            "subs r8, r0, 0",
            "mov r7, r0",
            "beq 0x292b4",
            "ldr r2, [0x000292f0]",
            "mov r1, r6",
            "add r2, r4, r2",
            "bl sym.imp.snprintf",
            "ldr r2, [0x000292f4]",
            "mov r1, r6",
            "mov r3, sb",
            "mov r0, r7",
            "add r2, r4, r2",
            "bl sym.imp.av_strlcatf",
            "ldr r2, [0x000292f8]",
            "mov r1, r6",
            "ldr r3, [sp, 0x24]",
            "mov r0, r7",
            "add r2, r4, r2",
            "bl sym.imp.av_strlcatf",
            "ldr r2, [0x000292fc]",
            "mov r1, r6",
            "mov r3, fp",
            "mov r0, r7",
            "add r2, r4, r2",
            "bl sym.imp.av_strlcatf",
            "ldr r2, [0x00029300]",
            "mov r1, r6",
            "ldr r3, [sp, 0x28]",
            "mov r0, r7",
            "add r2, r4, r2",
            "bl sym.imp.av_strlcatf",
            "ldr r2, [0x00029304]",
            "mov r0, r7",
            "ldr r3, [sp, 0x34]",
            "mov r1, r6",
            "add r2, r4, r2",
            "bl sym.imp.av_strlcatf",
            "ldrb r3, [r5, 0x1f8]",
            "cmp r3, 0",
            "beq 0x29228",
            "ldr r2, [0x00029308]",
            "mov r0, r7",
            "mov r1, r6",
            "ldr r3, [sp, 0x2c]",
            "add r2, r4, r2",
            "bl sym.imp.av_strlcatf",
            "ldrb r3, [r5, 0x220]",
            "cmp r3, 0",
            "beq 0x2924c",
            "ldr r2, [0x0002930c]",
            "mov r0, r7",
            "mov r1, r6",
            "ldr r3, [sp, 0x30]",
            "add r2, r4, r2",
            "bl sym.imp.av_strlcatf",
            "ldrb r3, [r5, 0x202]",
            "cmp r3, 0",
            "beq 0x292a0",
            "ldr r2, [0x00029310]",
            "mov r1, r6",
            "mov r3, sl",
            "mov r0, r7",
            "add r2, r4, r2",
            "bl sym.imp.av_strlcatf",
            "ldr r2, [0x00029314]",
            "mov r1, r6",
            "add r3, sp, 0xb0",
            "mov r0, r7",
            "add r2, r4, r2",
            "bl sym.imp.av_strlcatf",
            "ldr r2, [0x00029318]",
            "mov r0, r7",
            "mov r1, r6",
            "add r3, sp, 0xd4",
            "add r2, r4, r2",
            "bl sym.imp.av_strlcatf",
            "ldr r2, [0x000292d0]",
            "mov r0, r7",
            "mov r1, r6",
            "add r2, r4, r2",
            "bl sym.imp.av_strlcatf",
            "mov r0, sb",
            "bl sym.imp.av_free",
            "mov r0, r8",
            "add sp, sp, 0xec",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.imp.av_base64_encode": {
        "function_address": "0x000097bc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0xc60]!"
        ]
    },
    "sym.imp.av_strdup": {
        "function_address": "0x00009bb8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x9b8]!"
        ]
    },
    "sym.imp.av_get_random_seed": {
        "function_address": "0x00009f30",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x768]!"
        ]
    },
    "sym.imp.av_md5_init": {
        "function_address": "0x00009a5c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0xaa0]!"
        ]
    },
    "fcn.0002890c": {
        "function_address": "0x0002890c",
        "instructions": [
            "push {r0, r1, r2, r3}",
            "push {r0, r1, r2, r4, r5, lr}",
            "add r3, sp, 0x1c",
            "ldr r4, [sp, 0x18]",
            "str r3, [sp, 4]",
            "ldr r3, [sp, 4]",
            "ldr r5, [r3]",
            "add r2, r3, 4",
            "str r2, [sp, 4]",
            "cmp r5, 0",
            "beq 0x28954",
            "mov r0, r5",
            "bl sym.imp.strlen",
            "mov r1, r5",
            "mov r2, r0",
            "mov r0, r4",
            "bl sym.imp.av_md5_update",
            "b 0x28920",
            "pop {r1, r2, r3, r4, r5, lr}",
            "add sp, sp, 0x10",
            "bx lr"
        ]
    },
    "sym.imp.av_md5_final": {
        "function_address": "0x00009db0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x868]!"
        ]
    },
    "fcn.00027584": {
        "function_address": "0x00027584",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r4, r0",
            "mov r6, r1",
            "mov r5, r1",
            "add r7, r0, 8",
            "sub r8, r2, 1",
            "ldr r2, [r4, 0x408]",
            "ldr r3, [r4, 0x40c]",
            "cmp r2, r3",
            "blo 0x275d4",
            "ldr r0, [r4, 4]",
            "mov r1, r7",
            "mov r2, 0x400",
            "bl fcn.00018f80",
            "subs r3, r0, 0",
            "ble 0x27618",
            "add r3, r3, 8",
            "str r7, [r4, 0x408]",
            "add r3, r4, r3",
            "str r3, [r4, 0x40c]",
            "ldr r3, [r4, 0x408]",
            "ldrb r2, [r3], 1",
            "cmp r2, 0xa",
            "str r3, [r4, 0x408]",
            "bne 0x27608",
            "cmp r5, r6",
            "bls 0x275fc",
            "ldrb r3, [r5, -1]",
            "cmp r3, 0xd",
            "subeq r5, r5, 1",
            "mov r0, 0",
            "strb r0, [r5]",
            "pop {r4, r5, r6, r7, r8, pc}",
            "rsb r3, r6, r5",
            "cmp r3, r8",
            "strblt r2, [r5], 1",
            "b 0x2759c",
            "mvn r0, 4",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.0002771c": {
        "function_address": "0x0002771c",
        "instructions": [
            "push {r0, r1, r2, r3, r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r7, r0",
            "ldr r5, [r0, 0x14]",
            "mov r6, r1",
            "mov sl, r3",
            "ldrb r0, [r1]",
            "ldr r4, [0x00027aa8]",
            "cmp r0, 0",
            "add r4, pc, r4",
            "beq 0x27aa0",
            "cmp r2, 0",
            "movne r2, r1",
            "bne 0x2781c",
            "bl sym.imp.__ctype_b_loc",
            "ldr r2, [r0]",
            "mov r3, r6",
            "ldrb r1, [r6], 1",
            "lsl r0, r1, 1",
            "ldrh r0, [r2, r0]",
            "tst r0, 0x20",
            "bne 0x27778",
            "cmp r1, 0",
            "bne 0x27758",
            "mov r0, r3",
            "ldrb r1, [r3], 1",
            "lsl r1, r1, 1",
            "ldrh r1, [r2, r1]",
            "tst r1, 0x20",
            "bne 0x27778",
            "add r1, sp, 0xc",
            "mov r2, 0xa",
            "bl sym.imp.strtol",
            "sub r3, r0, 0x190",
            "mov r6, r0",
            "cmp r3, 0xc7",
            "str r0, [r5, 0x414]",
            "bhi 0x27a9c",
            "movw r3, 0x191",
            "cmp r0, r3",
            "movweq r3, 0x1438",
            "beq 0x277d0",
            "movw r3, 0x197",
            "cmp r0, r3",
            "bne 0x277dc",
            "movw r3, 0x1788",
            "ldr r3, [r5, r3]",
            "cmp r3, 0",
            "beq 0x27a9c",
            "ldr r5, [sp, 0xc]",
            "ldr r1, [0x00027aac]",
            "mov r0, r5",
            "add r1, r4, r1",
            "bl sym.imp.strspn",
            "ldr r2, [0x00027ab0]",
            "add r0, r5, r0",
            "str r0, [sp, 0xc]",
            "mov r1, 0x18",
            "str r0, [sp]",
            "mov r3, r6",
            "mov r0, r7",
            "add r2, r4, r2",
            "bl sym.imp.av_log",
            "mvn r0, 0",
            "b 0x27aa0",
            "mov sb, r2",
            "ldrb r3, [r2], 1",
            "cmp r3, 0x3a",
            "cmpne r3, 0",
            "moveq r1, 0",
            "movne r1, 1",
            "bne 0x2781c",
            "cmp r3, 0x3a",
            "bne 0x27a9c",
            "strb r1, [sb], 1",
            "bl sym.imp.__ctype_b_loc",
            "ldr r3, [r0]",
            "mov r8, sb",
            "ldrb r2, [sb], 1",
            "lsl r2, r2, 1",
            "ldrh r2, [r3, r2]",
            "tst r2, 0x20",
            "bne 0x2784c",
            "ldr r1, [0x00027ab4]",
            "mov r0, r6",
            "add r1, r4, r1",
            "bl sym.imp.av_strcasecmp",
            "cmp r0, 0",
            "bne 0x27898",
            "add r0, r5, 0x430",
            "mov r1, r8",
            "add r0, r0, 8",
            "bl sym.imp.strcpy",
            "mov r0, 1",
            "str r0, [sl]",
            "b 0x27aa0",
            "ldr r1, [0x00027ab8]",
            "mov r0, r6",
            "add r1, r4, r1",
            "bl sym.imp.av_strcasecmp",
            "cmp r0, 0",
            "bne 0x278dc",
            "ldr r3, [r5, 0x430]",
            "cmn r3, 1",
            "bne 0x278dc",
            "ldr r3, [r5, 0x434]",
            "cmn r3, 1",
            "bne 0x278dc",
            "mov r0, r8",
            "bl sym.imp.atoll",
            "mov r3, 0x430",
            "strd r0, r1, [r5, r3]",
            "b 0x27a9c",
            "ldr r1, [0x00027abc]",
            "mov r0, r6",
            "add r1, r4, r1",
            "bl sym.imp.av_strcasecmp",
            "cmp r0, 0",
            "bne 0x27960",
            "ldr r1, [0x00027ac0]",
            "mov r0, r8",
            "mov r2, 6",
            "add r1, r4, r1",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "bne 0x27954",
            "add r8, r8, 6",
            "mov r0, r8",
            "bl sym.imp.atoll",
            "movw r3, 0x428",
            "strd r0, r1, [r5, r3]",
            "mov r0, r8",
            "mov r1, 0x2f",
            "bl sym.imp.strchr",
            "cmp r0, 0",
            "beq 0x27954",
            "ldrb r3, [r0]",
            "cmp r3, 0",
            "beq 0x27954",
            "add r0, r0, 1",
            "bl sym.imp.atoll",
            "mov r3, 0x430",
            "strd r0, r1, [r5, r3]",
            "mov r3, 0",
            "str r3, [r7, 0xc]",
            "b 0x27a9c",
            "ldr r1, [0x00027ac4]",
            "mov r0, r6",
            "add r1, r4, r1",
            "bl sym.imp.av_strcasecmp",
            "cmp r0, 0",
            "bne 0x27998",
            "ldr r1, [0x00027ac8]",
            "mov r0, r8",
            "mov r2, 5",
            "add r1, r4, r1",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "streq r0, [r7, 0xc]",
            "beq 0x27a9c",
            "ldr r1, [0x00027acc]",
            "mov r0, r6",
            "add r1, r4, r1",
            "bl sym.imp.av_strcasecmp",
            "cmp r0, 0",
            "bne 0x279f4",
            "ldr r1, [0x00027ad0]",
            "mov r0, r8",
            "mov r2, 7",
            "add r1, r4, r1",
            "bl sym.imp.av_strncasecmp",
            "cmp r0, 0",
            "bne 0x279f4",
            "mvn r2, 0",
            "mvn r3, 0",
            "mov r1, 0x430",
            "add r0, r0, 1",
            "strd r2, r3, [r5, r1]",
            "mov r2, 0",
            "mov r3, 0",
            "sub r1, r1, 0x18",
            "strd r2, r3, [r5, r1]",
            "b 0x27aa0",
            "ldr r1, [0x00027ad4]",
            "mov r0, r6",
            "add r1, r4, r1",
            "bl sym.imp.av_strcasecmp",
            "cmp r0, 0",
            "beq 0x27a24",
            "ldr r1, [0x00027ad8]",
            "mov r0, r6",
            "add r1, r4, r1",
            "bl sym.imp.av_strcasecmp",
            "cmp r0, 0",
            "bne 0x27a30",
            "add r0, r5, 0x1400",
            "add r0, r0, 0x38",
            "b 0x27a50",
            "ldr r1, [0x00027adc]",
            "mov r0, r6",
            "add r1, r4, r1",
            "bl sym.imp.av_strcasecmp",
            "cmp r0, 0",
            "bne 0x27a60",
            "add r0, r5, 0x1780",
            "add r0, r0, 8",
            "mov r1, r6",
            "mov r2, r8",
            "bl fcn.00028af4",
            "b 0x27a9c",
            "ldr r1, [0x00027ae0]",
            "mov r0, r6",
            "add r1, r4, r1",
            "bl sym.imp.av_strcasecmp",
            "cmp r0, 0",
            "bne 0x27a9c",
            "ldr r1, [0x00027ae4]",
            "mov r0, r8",
            "add r1, r4, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "addeq r0, r0, 1",
            "movweq r3, 0x1adc",
            "streq r0, [r5, r3]",
            "beq 0x27aa0",
            "mov r0, 1",
            "add sp, sp, 0x10",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "sym.imp.atoll": {
        "function_address": "0x00009c90",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x928]!"
        ]
    },
    "fcn.000273d0": {
        "function_address": "0x000273d0",
        "instructions": [
            "push {r3, lr}",
            "ldr r3, [r0, 0x14]",
            "ldr r0, [r3, 4]",
            "cmp r0, 0",
            "beq 0x273e8",
            "bl sym.ffurl_close",
            "mov r0, 0",
            "pop {r3, pc}"
        ]
    },
    "fcn.00027dcc": {
        "function_address": "0x00027dcc",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "subs r4, r0, 0",
            "mov r5, r1",
            "moveq r0, r4",
            "popeq {r3, r4, r5, pc}",
            "add r1, r1, 2",
            "mov r2, 0",
            "bl sym.imp.av_stristart",
            "cmp r0, 0",
            "bne 0x27e0c",
            "mov r0, r4",
            "mov r1, r5",
            "bl sym.imp.av_stristr",
            "subs r0, r0, 0",
            "movne r0, 1",
            "pop {r3, r4, r5, pc}",
            "mov r0, 1",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.imp.av_stristr": {
        "function_address": "0x00009a68",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0xa98]!"
        ]
    },
    "fcn.00027e14": {
        "function_address": "0x00027e14",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x2440",
            "sub sp, sp, 0x2c",
            "ldr r3, [0x000285a0]",
            "mov r8, r0",
            "add r0, sp, 0x2440",
            "mov sb, 0",
            "add r0, r0, 0x28",
            "str sb, [r0, r3]",
            "add r0, sp, 0x1440",
            "mov r1, sb",
            "mov r2, 0x3fc",
            "ldr r5, [0x000285a4]",
            "add r0, r0, 0xc",
            "bl sym.imp.memset",
            "ldr r0, [0x000285a8]",
            "add r1, sp, 0x2000",
            "add r5, pc, r5",
            "str sb, [r1, 0x460]",
            "str sb, [r1, 0x45c]",
            "add r0, r5, r0",
            "ldr r7, [r8, 0x14]",
            "bl sym.imp.getenv",
            "cmp r0, 0",
            "str r0, [sp, 0x24]",
            "ldreq sb, [sp, 0x24]",
            "beq 0x27eac",
            "ldr r0, [0x000285ac]",
            "add r0, r5, r0",
            "bl sym.imp.getenv",
            "subs r2, r0, 0",
            "bne 0x27eac",
            "ldr r1, [0x000285b0]",
            "ldr r0, [sp, 0x24]",
            "add r1, r5, r1",
            "bl sym.imp.av_strstart",
            "subs sb, r0, sb",
            "movne sb, 1",
            "ldr r3, [0x000285b4]",
            "mov r2, 0",
            "ldr fp, [0x000285b8]",
            "str r2, [sp, 0x20]",
            "add r3, r5, r3",
            "str r3, [sp, 0x1c]",
            "add fp, r5, fp",
            "ldr r3, [0x000285bc]",
            "add r3, r5, r3",
            "str r3, [sp, 0x40]",
            "ldr r3, [0x000285c0]",
            "add r3, r5, r3",
            "str r3, [sp, 0x34]",
            "add r3, sp, 0x440",
            "add r3, r3, 8",
            "str r3, [sp, 0x44]",
            "add r3, sp, 0x2440",
            "add sl, sp, 0x2440",
            "add r3, r3, 0x24",
            "mov r4, 0x400",
            "str r3, [sp, 8]",
            "add r3, sp, 0x1040",
            "add r3, r3, 8",
            "add sl, sl, 8",
            "str r3, [sp, 0xc]",
            "add r3, r7, 0x430",
            "add r3, r3, 8",
            "add r6, sp, 0x2040",
            "add r2, sp, 0x1840",
            "add r6, r6, 8",
            "str r3, [sp, 0x14]",
            "mov r0, sl",
            "mov r1, 0xa",
            "add r2, r2, 8",
            "mov r3, r4",
            "str r6, [sp]",
            "str r4, [sp, 4]",
            "str r4, [sp, 0x10]",
            "bl sym.av_url_split",
            "add ip, sp, 0x2000",
            "str r6, [sp]",
            "ldr r3, [ip, 0x464]",
            "mov r2, 0",
            "add r0, sp, 0x1c40",
            "mov r1, r4",
            "add r0, r0, 8",
            "str r2, [sp, 8]",
            "str r3, [sp, 4]",
            "mov r3, r2",
            "bl fcn.000745ec",
            "mov r0, sl",
            "ldr r1, [sp, 0x40]",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x27fb4",
            "add r1, sp, 0x2000",
            "ldr r3, [r1, 0x464]",
            "cmp r3, 0",
            "ldrlt r2, [sp, 0x34]",
            "movlt sb, r0",
            "ldrge r3, [sp, 0x34]",
            "movge sb, r0",
            "movwlt r3, 0x1bb",
            "strlt r3, [r1, 0x464]",
            "strlt r2, [sp, 0x1c]",
            "strge r3, [sp, 0x1c]",
            "add ip, sp, 0x2000",
            "add r0, sp, 0x2440",
            "ldr r3, [ip, 0x464]",
            "add r0, r0, 0x28",
            "cmp r3, 0",
            "movlt r3, 0x50",
            "strlt r3, [ip, 0x464]",
            "ldr r3, [0x000285c4]",
            "ldrb r3, [r0, r3]",
            "cmp r3, 0",
            "addne sl, sp, 0x1040",
            "addne sl, sl, 8",
            "ldreq sl, [0x000285c8]",
            "addeq sl, r5, sl",
            "cmp sb, 0",
            "streq sl, [sp, 0x2c]",
            "beq 0x28088",
            "add r4, sp, 0x2040",
            "add r1, sp, 0x2000",
            "add r4, r4, 8",
            "add r6, sp, 0x840",
            "str r4, [sp]",
            "add r6, r6, 8",
            "ldr r3, [r1, 0x464]",
            "add r2, sp, 0x2440",
            "mov r1, 0x400",
            "add r2, r2, 8",
            "mov r0, r6",
            "str r3, [sp, 4]",
            "ldr r3, [0x000285cc]",
            "add r3, r5, r3",
            "str r3, [sp, 8]",
            "add r3, sp, 0x1040",
            "add r3, r3, 8",
            "str r3, [sp, 0xc]",
            "mov r3, 0",
            "bl fcn.000745ec",
            "add r2, sp, 0x2440",
            "mov r0, 0",
            "add r2, r2, 0x24",
            "mov r3, 0x400",
            "str r2, [sp, 8]",
            "mov r1, r0",
            "ldr r2, [sp, 0x24]",
            "str r4, [sp]",
            "str r3, [sp, 4]",
            "str r2, [sp, 0x14]",
            "add r2, sp, 0x1440",
            "add r2, r2, 8",
            "str r0, [sp, 0xc]",
            "str r0, [sp, 0x10]",
            "bl sym.av_url_split",
            "str r6, [sp, 0x2c]",
            "add r3, sp, 0x2040",
            "add ip, sp, 0x2000",
            "add r3, r3, 8",
            "add r4, sp, 0xc40",
            "str r3, [sp]",
            "mov r6, 0",
            "ldr r3, [ip, 0x464]",
            "add r4, r4, 8",
            "mov r1, 0x400",
            "ldr r2, [sp, 0x1c]",
            "mov r0, r4",
            "stmib sp, {r3, r6}",
            "mov r3, r6",
            "bl fcn.000745ec",
            "add r0, sp, 0x2440",
            "mov r1, r4",
            "add r0, r0, 0x1c",
            "mov r2, 3",
            "add r3, r8, 0x20",
            "str r6, [sp]",
            "bl sym.ffurl_open",
            "cmp r0, r6",
            "blt 0x28554",
            "add r0, sp, 0x2000",
            "ldr r4, [r8, 0x14]",
            "ldr r3, [r0, 0x45c]",
            "add r1, sp, 0x2440",
            "add r1, r1, 0x28",
            "mov r2, 0x3fc",
            "add r0, sp, 0x4c",
            "str r3, [r7, 4]",
            "movw r3, 0x1438",
            "ldr r3, [r7, r3]",
            "str r3, [sp, 0x30]",
            "ldr r3, [0x000285d0]",
            "str r6, [r1, r3]",
            "mov r1, r6",
            "bl sym.imp.memset",
            "ldr r3, [r4, 0x428]",
            "add r2, sp, 0x2000",
            "ldr ip, [r4, 0x42c]",
            "str r6, [r2, 0x458]",
            "str r3, [sp, 0x38]",
            "ldr r3, [r8, 8]",
            "str r6, [r2, 0x454]",
            "str ip, [sp, 0x3c]",
            "ands r3, r3, 2",
            "str r3, [sp, 0x28]",
            "ldrne r3, [0x000285d4]",
            "ldreq r3, [0x000285d8]",
            "add r3, r5, r3",
            "add r0, r4, 0x1400",
            "str r3, [sp, 0x18]",
            "add r1, sp, 0x1840",
            "add r1, r1, 8",
            "mov r2, sl",
            "ldr r3, [sp, 0x18]",
            "add r0, r0, 0x38",
            "bl fcn.00028cd0",
            "add r1, sp, 0x2000",
            "mov r2, sl",
            "str r0, [r1, 0x458]",
            "add r0, r4, 0x1780",
            "add r1, sp, 0x1440",
            "ldr r3, [sp, 0x18]",
            "add r1, r1, 8",
            "add r0, r0, 8",
            "bl fcn.00028cd0",
            "ldr r1, [0x000285dc]",
            "add r2, sp, 0x2000",
            "movw r3, 0x1ad8",
            "str r0, [r2, 0x454]",
            "ldr r0, [r4, r3]",
            "add r1, r5, r1",
            "bl fcn.00027dcc",
            "cmp r0, 0",
            "movne r6, 0",
            "bne 0x281e8",
            "ldr r3, [r4, 0x420]",
            "cmp r3, 0",
            "ldreq r3, [0x000285e0]",
            "addeq r3, r5, r3",
            "ldr r2, [0x000285e4]",
            "add r0, sp, 0x48",
            "mov r1, 0x400",
            "add r2, r5, r2",
            "bl sym.imp.av_strlcatf",
            "mov r6, r0",
            "ldr r1, [0x000285e8]",
            "movw r3, 0x1ad8",
            "ldr r0, [r4, r3]",
            "add r1, r5, r1",
            "bl fcn.00027dcc",
            "cmp r0, 0",
            "bne 0x28220",
            "ldr r1, [0x000285ec]",
            "add r0, sp, 0x48",
            "add r0, r0, r6",
            "rsb r2, r6, 0x400",
            "add r1, r5, r1",
            "bl sym.imp.av_strlcpy",
            "add r6, r0, r6",
            "ldr r1, [0x000285f0]",
            "movw r3, 0x1ad8",
            "ldr r0, [r4, r3]",
            "add r1, r5, r1",
            "bl fcn.00027dcc",
            "cmp r0, 0",
            "bne 0x28270",
            "ldr r3, [sp, 0x28]",
            "cmp r3, 0",
            "bne 0x28270",
            "movw r3, 0x428",
            "add r0, sp, 0x48",
            "ldrd r2, r3, [r3, r4]",
            "add r0, r0, r6",
            "rsb r1, r6, 0x400",
            "strd r2, r3, [sp]",
            "ldr r2, [0x000285f4]",
            "add r2, r5, r2",
            "bl sym.imp.av_strlcatf",
            "add r6, r0, r6",
            "ldr r1, [0x000285f8]",
            "movw r3, 0x1ad8",
            "ldr r0, [r4, r3]",
            "add r1, r5, r1",
            "bl fcn.00027dcc",
            "cmp r0, 0",
            "bne 0x282a8",
            "ldr r1, [0x000285fc]",
            "add r0, sp, 0x48",
            "add r0, r0, r6",
            "rsb r2, r6, 0x400",
            "add r1, r5, r1",
            "bl sym.imp.av_strlcpy",
            "add r6, r0, r6",
            "ldr r1, [0x00028600]",
            "movw r3, 0x1ad8",
            "ldr r0, [r4, r3]",
            "add r1, r5, r1",
            "bl fcn.00027dcc",
            "cmp r0, 0",
            "bne 0x282e8",
            "ldr r2, [0x00028604]",
            "add r0, sp, 0x48",
            "add r3, sp, 0x1c40",
            "add r0, r0, r6",
            "rsb r1, r6, 0x400",
            "add r3, r3, 8",
            "add r2, r5, r2",
            "bl sym.imp.av_strlcatf",
            "add r6, r0, r6",
            "movw r3, 0x1ad8",
            "ldr r1, [r4, r3]",
            "cmp r1, 0",
            "beq 0x28308",
            "add r0, sp, 0x48",
            "rsb r2, r6, 0x400",
            "add r0, r0, r6",
            "bl sym.imp.av_strlcpy",
            "ldr ip, [sp, 0x28]",
            "add r6, r4, 8",
            "cmp ip, 0",
            "beq 0x28328",
            "movw r3, 0x1ae0",
            "ldr r3, [r4, r3]",
            "cmp r3, 0",
            "bne 0x28330",
            "mov r1, fp",
            "b 0x28338",
            "ldr r1, [0x00028608]",
            "add r1, r5, r1",
            "add r0, sp, 0x2000",
            "ldr r3, [r0, 0x458]",
            "ldr r2, [r0, 0x454]",
            "cmp r3, 0",
            "moveq r3, fp",
            "cmp r2, 0",
            "moveq r0, fp",
            "moveq r2, fp",
            "ldrne r0, [0x0002860c]",
            "addne r0, r5, r0",
            "str r2, [sp, 0x14]",
            "ldr r2, [0x00028610]",
            "ldr ip, [sp, 0x2c]",
            "str r1, [sp, 4]",
            "add r1, sp, 0x48",
            "add r2, r5, r2",
            "str r1, [sp, 8]",
            "str r3, [sp, 0xc]",
            "mov r1, 0x400",
            "ldr r3, [sp, 0x18]",
            "str r0, [sp, 0x10]",
            "mov r0, r6",
            "str ip, [sp]",
            "bl sym.imp.snprintf",
            "add r0, sp, 0x2440",
            "add r0, r0, 0x18",
            "bl sym.imp.av_freep",
            "add r0, sp, 0x2440",
            "add r0, r0, 0x14",
            "bl sym.imp.av_freep",
            "mov r0, r6",
            "bl sym.imp.strlen",
            "mov r1, r6",
            "mov r2, r0",
            "ldr r0, [r4, 4]",
            "bl sym.ffurl_write",
            "cmp r0, 0",
            "blt 0x28554",
            "mov r2, 0",
            "mov r3, 0",
            "movw r0, 0x428",
            "mov r1, 0",
            "strd r2, r3, [r4, r0]",
            "mvn r3, 0",
            "add r0, r0, 8",
            "mvn r2, 0",
            "strd r2, r3, [r4, r0]",
            "movw r0, 0x1adc",
            "str r1, [r4, r0]",
            "ldr r0, [sp, 0x28]",
            "str r6, [r4, 0x408]",
            "str r6, [r4, 0x40c]",
            "cmp r0, r1",
            "str r1, [r4, 0x410]",
            "movne r3, 0xc8",
            "strne r3, [r4, 0x414]",
            "bne 0x2858c",
            "ldr sl, [sp, 0x44]",
            "add r6, sp, 0x2440",
            "add r6, r6, 0x20",
            "movw r1, 0x418",
            "strd r2, r3, [r4, r1]",
            "mov r0, r4",
            "mov r1, sl",
            "mov r2, 0x400",
            "bl fcn.00027584",
            "cmp r0, 0",
            "blt 0x28554",
            "mov r0, r8",
            "mov r1, sl",
            "ldr r2, [r4, 0x410]",
            "mov r3, r6",
            "bl fcn.0002771c",
            "cmp r0, 0",
            "blt 0x28554",
            "ldrne r3, [r4, 0x410]",
            "addne r3, r3, 1",
            "strne r3, [r4, 0x410]",
            "bne 0x28430",
            "ldr r3, [r4, 0x428]",
            "ldr r1, [sp, 0x38]",
            "cmp r3, r1",
            "bne 0x28554",
            "ldr r3, [r4, 0x42c]",
            "ldr r2, [sp, 0x3c]",
            "cmp r3, r2",
            "bne 0x28554",
            "b 0x2858c",
            "ldr r3, [sp, 0x30]",
            "cmp r3, 0",
            "bne 0x28554",
            "movw r3, 0x1438",
            "ldr r3, [r7, r3]",
            "cmp r3, 0",
            "beq 0x28554",
            "add ip, sp, 0x2000",
            "ldr r0, [ip, 0x45c]",
            "b 0x284f0",
            "movw r2, 0x197",
            "cmp r3, r2",
            "bne 0x284f8",
            "ldr r0, [sp, 0x30]",
            "cmp r0, 0",
            "bne 0x28554",
            "movw r3, 0x1788",
            "ldr r3, [r7, r3]",
            "cmp r3, 0",
            "beq 0x28554",
            "add r1, sp, 0x2000",
            "ldr r0, [r1, 0x45c]",
            "bl sym.ffurl_close",
            "b 0x27eec",
            "sub r2, r3, 0x12c",
            "movw r0, 0x133",
            "sub r2, r2, 1",
            "cmp r3, r0",
            "cmpne r2, 2",
            "movhi r0, 0",
            "movls r0, 1",
            "bhi 0x28580",
            "add r2, sp, 0x2000",
            "ldr r3, [r2, 0x460]",
            "cmp r3, 1",
            "bne 0x28574",
            "ldr r0, [r2, 0x45c]",
            "bl sym.ffurl_close",
            "ldr r3, [sp, 0x20]",
            "cmp r3, 7",
            "bgt 0x2857c",
            "add r3, r3, 1",
            "add ip, sp, 0x2000",
            "str r3, [sp, 0x20]",
            "mov r3, 0",
            "str r3, [ip, 0x460]",
            "b 0x27eec",
            "add r1, sp, 0x2000",
            "ldr r0, [r1, 0x45c]",
            "cmp r0, 0",
            "beq 0x28568",
            "bl sym.ffurl_close",
            "mov r3, 0",
            "str r3, [r7, 4]",
            "b 0x2857c",
            "mov r0, 0",
            "b 0x28580",
            "mvn r0, 4",
            "add sp, sp, 0x6c",
            "add sp, sp, 0x2400",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r3, [r7, 0x414]",
            "movw r2, 0x191",
            "cmp r3, r2",
            "bne 0x284c0",
            "b 0x28498"
        ]
    },
    "sym.imp.getenv": {
        "function_address": "0x00009810",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0xc28]!"
        ]
    },
    "fcn.0002747c": {
        "function_address": "0x0002747c",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sl, lr}",
            "ldr r8, [r0, 0x14]",
            "ldr r3, [r8, 0x408]",
            "ldr sl, [r8, 0x40c]",
            "rsb sl, r3, sl",
            "cmp sl, 0",
            "ble 0x274c4",
            "cmp r2, sl",
            "movlt sl, r2",
            "movge sl, sl",
            "mov r0, r1",
            "mov r2, sl",
            "mov r1, r3",
            "bl sym.imp.memcpy",
            "ldr r3, [r8, 0x408]",
            "add r3, r3, sl",
            "str r3, [r8, 0x408]",
            "b 0x2750c",
            "movw r3, 0x1adc",
            "ldr r3, [r8, r3]",
            "cmp r3, 0",
            "bne 0x27500",
            "ldr r3, [r8, 0x434]",
            "ldr r0, [r8, 0x430]",
            "cmp r3, 0",
            "blt 0x27500",
            "ldr ip, [r8, 0x42c]",
            "cmp ip, r3",
            "blt 0x27500",
            "bne 0x27574",
            "ldr r3, [r8, 0x428]",
            "cmp r3, r0",
            "bhs 0x27574",
            "ldr r0, [r8, 4]",
            "bl fcn.00018f80",
            "mov sl, r0",
            "cmp sl, 0",
            "ble 0x27578",
            "movw r1, 0x428",
            "mov r6, sl",
            "asr r7, r6, 0x1f",
            "ldrd r2, r3, [r8, r1]",
            "adds r2, r2, r6",
            "adc r3, r3, r7",
            "strd r2, r3, [r8, r1]",
            "movw r3, 0x418",
            "ldr r2, [r8, r3]",
            "add r3, r8, r3",
            "add r3, r3, 4",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "bgt 0x27558",
            "bne 0x27578",
            "cmp r2, 0",
            "beq 0x27578",
            "mov r5, r3",
            "mov r4, r2",
            "subs r4, r4, r6",
            "sbc r5, r5, r7",
            "movw r3, 0x418",
            "strd r4, r5, [r8, r3]",
            "b 0x27578",
            "ldr sl, [0x00027580]",
            "mov r0, sl",
            "pop {r3, r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "sym.imp.av_md5_update": {
        "function_address": "0x00009f90",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x728]!"
        ]
    },
    "fcn.00029a50": {
        "function_address": "0x00029a50",
        "instructions": [
            "push {r0, r1, r2, r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r6, r0",
            "ldr sb, [sp, 0x30]",
            "add r0, sp, 4",
            "mov r5, r1",
            "mov fp, r2",
            "ldr r4, [0x00029d50]",
            "mov r8, r3",
            "ldr r7, [sb]",
            "bl sym.avio_open_dyn_buf",
            "subs sl, r0, 0",
            "add r4, pc, r4",
            "bge 0x29a9c",
            "ldr r2, [0x00029d54]",
            "mov r0, r6",
            "mov r1, 0x10",
            "add r2, r4, r2",
            "bl sym.imp.av_log",
            "b 0x29d48",
            "cmp fp, 3",
            "addls pc, pc, fp, lsl 2",
            "b 0x29d08",
            "b 0x29ac0",
            "b 0x29b5c",
            "b 0x29bb4",
            "b 0x29ab8",
            "mov r4, 1",
            "b 0x29cf8",
            "mov r4, 1",
            "mov fp, 6",
            "mov sl, 0x100",
            "b 0x29b4c",
            "mov r0, r5",
            "bl sym.avio_r8",
            "cmp r0, 0x7f",
            "mov r4, r0",
            "bhi 0x29af4",
            "ldr r0, [sp, 4]",
            "uxtb r1, r4",
            "bl sym.avio_w8",
            "b 0x29b48",
            "orr r0, r0, 1",
            "mov r1, 5",
            "clz r0, r0",
            "rsb r0, r0, 0x23",
            "bl fcn.0007d264",
            "sub r6, r0, 1",
            "asr r1, sl, r0",
            "mul r6, fp, r6",
            "ldr r0, [sp, 4]",
            "rsb r1, r1, 0",
            "orr r1, r1, r4, lsr r6",
            "uxtb r1, r1",
            "b 0x29b3c",
            "sub r6, r6, 6",
            "ldr r0, [sp, 4]",
            "lsr r1, r4, r6",
            "and r1, r1, 0x3f",
            "orr r1, r1, 0x80",
            "bl sym.avio_w8",
            "cmp r6, 5",
            "bgt 0x29b28",
            "sub r7, r7, 1",
            "cmp r4, 0",
            "cmpne r7, 0",
            "bne 0x29ad0",
            "b 0x29d20",
            "subs r7, r7, 2",
            "bpl 0x29b90",
            "ldr r2, [0x00029d58]",
            "mov r0, r6",
            "mov r1, 0x10",
            "add r2, r4, r2",
            "bl sym.imp.av_log",
            "ldr r0, [sp, 4]",
            "mov r1, r8",
            "bl sym.avio_close_dyn_buf",
            "mov r0, r8",
            "bl sym.imp.av_freep",
            "b 0x29bfc",
            "mov r0, r5",
            "bl sym.avio_rb16",
            "movw r3, 0xfeff",
            "cmp r0, r3",
            "beq 0x29bb4",
            "add r3, r3, 0xff",
            "cmp r0, r3",
            "bne 0x29bd0",
            "b 0x29bbc",
            "ldr r3, [0x00029d5c]",
            "b 0x29bc0",
            "ldr r3, [0x00029d60]",
            "ldr sl, [r4, r3]",
            "movw fp, 0x3ff",
            "mov r4, 1",
            "b 0x29cc4",
            "ldr r2, [0x00029d64]",
            "mov r0, r6",
            "mov r1, 0x10",
            "add r2, r4, r2",
            "bl sym.imp.av_log",
            "mov r1, r8",
            "ldr r0, [sp, 4]",
            "bl sym.avio_close_dyn_buf",
            "mov r0, r8",
            "bl sym.imp.av_freep",
            "str r7, [sb]",
            "ldr sl, [0x00029d68]",
            "b 0x29d48",
            "mov r0, r5",
            "sub r7, r7, 2",
            "blx sl",
            "movw r3, 0x7ff",
            "sub r6, r0, 0xd800",
            "cmp r6, r3",
            "mov r4, r0",
            "bhi 0x29c50",
            "subs r7, r7, 2",
            "ldrmi r4, [0x00029d6c]",
            "bmi 0x29c3c",
            "mov r0, r5",
            "blx sl",
            "sub r4, r0, 0xdc00",
            "cmp r6, fp",
            "cmpls r4, fp",
            "bhi 0x29cd0",
            "add r4, r4, r6, lsl 10",
            "add r4, r4, 0x10000",
            "cmp r4, 0x7f",
            "bhi 0x29c68",
            "ldr r0, [sp, 4]",
            "uxtb r1, r4",
            "bl sym.avio_w8",
            "b 0x29cc4",
            "orr r0, r4, 1",
            "mov r1, 5",
            "clz r0, r0",
            "rsb r0, r0, 0x23",
            "bl fcn.0007d264",
            "mov r3, 6",
            "sub r6, r0, 1",
            "mul r6, r3, r6",
            "add r3, r3, 0xfa",
            "asr r1, r3, r0",
            "ldr r0, [sp, 4]",
            "rsb r1, r1, 0",
            "orr r1, r1, r4, lsr r6",
            "uxtb r1, r1",
            "b 0x29cb8",
            "sub r6, r6, 6",
            "ldr r0, [sp, 4]",
            "lsr r1, r4, r6",
            "and r1, r1, 0x3f",
            "orr r1, r1, 0x80",
            "bl sym.avio_w8",
            "cmp r6, 5",
            "bgt 0x29ca4",
            "cmp r4, 0",
            "cmpne r7, 1",
            "bgt 0x29c04",
            "cmp r7, 0",
            "addlt r7, r7, 2",
            "b 0x29d20",
            "mov r0, r5",
            "sub r7, r7, 1",
            "bl sym.avio_r8",
            "mov r4, r0",
            "ldr r0, [sp, 4]",
            "mov r1, r4",
            "bl sym.avio_w8",
            "cmp r4, 0",
            "cmpne r7, 0",
            "bne 0x29cdc",
            "b 0x29d20",
            "ldr r2, [0x00029d70]",
            "mov r0, r6",
            "mov r1, 0x18",
            "add r2, r4, r2",
            "bl sym.imp.av_log",
            "b 0x29d28",
            "cmp r4, 0",
            "beq 0x29d34",
            "ldr r0, [sp, 4]",
            "mov r1, 0",
            "bl sym.avio_w8",
            "mov sl, 0",
            "ldr r0, [sp, 4]",
            "mov r1, r8",
            "bl sym.avio_close_dyn_buf",
            "str r7, [sb]",
            "mov r0, sl",
            "pop {r1, r2, r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.avio_open_dyn_buf": {
        "function_address": "0x0001aa3c",
        "instructions": [
            "mov r1, 0",
            "b 0x19340"
        ]
    },
    "fcn.00029a1c": {
        "function_address": "0x00029a1c",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r0",
            "ldr r0, [r0, 4]",
            "bl sym.imp.av_free",
            "ldr r0, [r4, 8]",
            "bl sym.imp.av_free",
            "ldr r0, [r4, 0xc]",
            "bl sym.imp.av_free",
            "ldr r0, [r4, 0x10]",
            "bl sym.imp.av_free",
            "mov r0, r4",
            "pop {r4, lr}",
            "b sym.imp.av_free"
        ]
    },
    "fcn.00029f74": {
        "function_address": "0x00029f74",
        "instructions": [
            "mov r3, 1",
            "push {r0, r1, r2, lr}",
            "mov r2, 0",
            "str r3, [sp]",
            "mov r3, 0",
            "bl sym.avio_seek",
            "add sp, sp, 0xc",
            "ldm sp!, {pc}"
        ]
    },
    "fcn.00029fe8": {
        "function_address": "0x00029fe8",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r5, r0",
            "mov r4, 4",
            "mov r0, 0",
            "b 0x2a010",
            "lsl r6, r0, 7",
            "mov r0, r5",
            "bl sym.avio_r8",
            "and r0, r0, 0x7f",
            "add r0, r0, r6",
            "subs r4, r4, 1",
            "bhs 0x29ffc",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.00029994": {
        "function_address": "0x00029994",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sl, lr}",
            "mov r5, 0",
            "ldr r4, [0x00029a14]",
            "mov r8, r0",
            "mov sl, r1",
            "mov r6, r5",
            "ldr r7, [0x00029a18]",
            "add r4, pc, r4",
            "add r7, r4, r7",
            "b 0x29a00",
            "cmp r8, 0",
            "beq 0x299f8",
            "cmp sl, 0",
            "mov r0, r8",
            "addne r3, r7, r5",
            "movne r2, 4",
            "ldrne r1, [r3, 4]",
            "moveq r2, 3",
            "bl sym.imp.memcmp",
            "cmp r0, 0",
            "bne 0x299f8",
            "ldr r0, [0x00029a18]",
            "add r4, r4, r0",
            "add r0, r4, r6, lsl 4",
            "pop {r3, r4, r5, r6, r7, r8, sl, pc}",
            "add r6, r6, 1",
            "add r5, r5, 0x10",
            "ldr r1, [r7, r5]",
            "cmp r1, 0",
            "bne 0x299bc",
            "mov r0, r1",
            "pop {r3, r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "fcn.00029f94": {
        "function_address": "0x00029f94",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r2, 0",
            "mov r3, 1",
            "bl sym.imp.av_dict_get",
            "subs r4, r0, 0",
            "beq 0x29fe0",
            "ldr r5, [r4, 4]",
            "mov r0, r5",
            "bl sym.imp.strlen",
            "cmp r0, 4",
            "movne r4, 0",
            "bne 0x29fe0",
            "ldrb r3, [r5], 1",
            "sub r2, r3, 0x30",
            "uxtb r2, r2",
            "cmp r2, 9",
            "bls 0x29fc4",
            "cmp r3, 0",
            "movne r4, 0",
            "mov r0, r4",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.0002b5bc": {
        "function_address": "0x0002b5bc",
        "instructions": [
            "mov r3, 1",
            "push {r0, r1, r2, lr}",
            "mov r2, 0",
            "str r3, [sp]",
            "mov r3, 0",
            "bl sym.avio_seek",
            "add sp, sp, 0xc",
            "ldm sp!, {pc}"
        ]
    },
    "fcn.0002c08c": {
        "function_address": "0x0002c08c",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r1, 0x2e",
            "ldr r4, [0x0002c0e8]",
            "bl sym.imp.strrchr",
            "cmp r0, 0",
            "add r4, pc, r4",
            "popeq {r3, r4, r5, pc}",
            "ldr r3, [0x0002c0ec]",
            "add r5, r0, 1",
            "add r4, r4, r3",
            "b 0x2c0d8",
            "mov r0, r5",
            "ldr r1, [r4, 4]",
            "bl sym.imp.av_strcasecmp",
            "cmp r0, 0",
            "bne 0x2c0d4",
            "ldr r0, [r4]",
            "pop {r3, r4, r5, pc}",
            "add r4, r4, 8",
            "ldr r0, [r4]",
            "cmp r0, 0",
            "bne 0x2c0b8",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.0002bf84": {
        "function_address": "0x0002bf84",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x400",
            "sub sp, sp, 4",
            "mov sb, r0",
            "mov fp, r1",
            "mov r8, r2",
            "mov r4, 0",
            "mov sl, sp",
            "mov r0, sp",
            "mov r1, 0x400",
            "mov r2, r8",
            "mov r3, r4",
            "bl sym.av_get_frame_filename",
            "cmp r0, 0",
            "bge 0x2bfe4",
            "mov r1, 1",
            "mov r0, sp",
            "str r1, [fp]",
            "str r1, [sb]",
            "bl sym.avio_check",
            "cmp r0, 0",
            "mvnle r0, 0",
            "movgt r0, 0",
            "b 0x2c080",
            "mov r0, sp",
            "mov r1, 1",
            "bl sym.avio_check",
            "cmp r0, 0",
            "movgt r7, r4",
            "movgt sl, sp",
            "bgt 0x2c010",
            "add r4, r4, 1",
            "cmp r4, 5",
            "bne 0x2bfa4",
            "b 0x2c07c",
            "mov r6, 0",
            "mov r5, 1",
            "b 0x2c024",
            "mov r6, r5",
            "lsl r5, r5, 1",
            "mov r0, sl",
            "mov r1, 0x400",
            "mov r2, r8",
            "add r3, r5, r7",
            "bl sym.av_get_frame_filename",
            "cmp r0, 0",
            "blt 0x2c07c",
            "mov r0, sl",
            "mov r1, 1",
            "bl sym.avio_check",
            "cmp r0, 0",
            "ble 0x2c060",
            "cmn r5, 0xc0000001",
            "ble 0x2c01c",
            "b 0x2c07c",
            "cmp r6, 0",
            "addne r7, r7, r6",
            "bne 0x2c010",
            "str r4, [sb]",
            "mov r0, r6",
            "str r7, [fp]",
            "b 0x2c080",
            "mvn r0, 0",
            "add sp, sp, 4",
            "add sp, sp, 0x400",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0002c51c": {
        "function_address": "0x0002c51c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r6, r1",
            "mov r1, 0x450",
            "ldr r3, [0x0002c7c4]",
            "mov r5, r2",
            "sub sp, sp, 0x14",
            "ldrd r8, sb, [r0, r1]",
            "mov r4, r0",
            "add r3, pc, r3",
            "orrs r2, r8, sb",
            "beq 0x2c648",
            "ldr r2, [r0, 0x434]",
            "cmp r2, 0",
            "beq 0x2c648",
            "ldr r2, [r0, 0x430]",
            "cmp r2, 0",
            "beq 0x2c648",
            "ldr r0, [r0, 0x43c]",
            "cmp r0, 0",
            "bne 0x2c584",
            "ldr r2, [0x0002c7c8]",
            "sub r1, r1, 0x440",
            "add r2, r3, r2",
            "bl sym.imp.av_log",
            "movw r0, 0xffff",
            "b 0x2c7bc",
            "ldr r3, [0x0002c7cc]",
            "cmp r0, r3",
            "beq 0x2c5b0",
            "mov r2, 6",
            "mov r3, 0",
            "adds r2, r2, r8",
            "adc r3, r3, sb",
            "strd r2, r3, [r4, r1]",
            "ldr r3, [r4, 0x458]",
            "sub r3, r3, 6",
            "str r3, [r4, 0x458]",
            "mov r7, 0x450",
            "mov r8, 0",
            "ldrd r2, r3, [r4, r7]",
            "mov r0, r6",
            "str r8, [sp]",
            "bl sym.avio_seek",
            "mov r2, 0",
            "mov r3, 0",
            "strd r2, r3, [r4, r7]",
            "mov r0, r6",
            "ldr r7, [r4, 0x458]",
            "mov r1, r5",
            "mov r2, r7",
            "bl sym.av_get_packet",
            "cmp r7, r0",
            "bne 0x2c7b8",
            "ldr r3, [r4, 0x448]",
            "ldr r2, [r4, 0x43c]",
            "ldr r6, [r4, 0x440]",
            "str r3, [r5, 0x18]",
            "ldr r3, [0x0002c7cc]",
            "stm r5, {r6, r8}",
            "cmp r2, r3",
            "beq 0x2c628",
            "ldr r1, [r4, 0x434]",
            "ldr r0, [r4, 0x458]",
            "bl fcn.0007d19c",
            "ldr r1, [r4, 0x430]",
            "lsr r1, r1, 3",
            "b 0x2c638",
            "ldr r1, [r4, 0x434]",
            "ldr r0, [r4, 0x458]",
            "rsb r0, r1, r0",
            "sub r0, r0, 6",
            "bl fcn.0007d19c",
            "add r0, r0, r6",
            "str r0, [r4, 0x440]",
            "b 0x2c794",
            "ldr r1, [r4, 0x470]",
            "ldr r3, [r4, 0x474]",
            "orrs r1, r1, r3",
            "beq 0x2c79c",
            "ldr r1, [r4, 0x468]",
            "mov r0, r5",
            "ldr r3, [r4, 0x478]",
            "add r1, r1, r3",
            "bl sym.imp.av_new_packet",
            "subs r7, r0, 0",
            "movwne r0, 0xfffd",
            "bne 0x2c7bc",
            "ldr r3, [r4, 0x428]",
            "cmp r3, 0",
            "beq 0x2c6ac",
            "mov r0, r5",
            "mov r1, r7",
            "mov r2, 0x400",
            "bl sym.imp.av_packet_new_side_data",
            "cmp r0, 0",
            "beq 0x2c6ac",
            "add r1, r4, 0x28",
            "mov r2, 0x400",
            "bl sym.imp.memcpy",
            "str r7, [r4, 0x428]",
            "ldr r3, [r4, 0x42c]",
            "cmp r3, 0",
            "beq 0x2c6e8",
            "ldr r3, [r4, 0x14]",
            "mov r7, 0",
            "mov r0, r5",
            "mov r1, r7",
            "mov r2, 0",
            "str r7, [sp]",
            "str r3, [sp, 4]",
            "ldr r3, [r4, 0x18]",
            "str r3, [sp, 8]",
            "mov r3, 0",
            "bl fcn.00074d60",
            "str r7, [r4, 0x42c]",
            "mov r7, 0x470",
            "mov r8, 0",
            "ldrd r2, r3, [r4, r7]",
            "mov r0, r6",
            "mov sl, 0",
            "mov fp, 0",
            "str r8, [sp]",
            "strd r2, r3, [r5, 0x38]",
            "bl sym.avio_seek",
            "strd sl, fp, [r4, r7]",
            "mov r0, r6",
            "ldr r1, [r5, 0x10]",
            "ldr r2, [r4, 0x478]",
            "bl sym.avio_read",
            "ldr r3, [r4, 0x478]",
            "cmp r0, r3",
            "bne 0x2c768",
            "mov r7, 0x460",
            "mov r0, r6",
            "ldrd r2, r3, [r4, r7]",
            "str r8, [sp]",
            "bl sym.avio_seek",
            "ldr r3, [r4, 0x478]",
            "mov r0, r6",
            "ldr r1, [r5, 0x10]",
            "strd sl, fp, [r4, r7]",
            "ldr r2, [r4, 0x468]",
            "add r1, r1, r3",
            "bl sym.avio_read",
            "ldr r3, [r4, 0x468]",
            "cmp r0, r3",
            "beq 0x2c774",
            "mov r0, r5",
            "bl sym.imp.av_free_packet",
            "b 0x2c7b8",
            "ldr r3, [r4, 0x444]",
            "ldrd r0, r1, [r4, 0x20]",
            "str r3, [r5, 0x18]",
            "ldrd r2, r3, [r4, 8]",
            "strd r0, r1, [r5]",
            "adds r2, r2, r0",
            "adc r3, r3, r1",
            "strd r2, r3, [r4, 0x20]",
            "mov r0, 3",
            "b 0x2c7bc",
            "mov r3, 0x480",
            "mov r0, r6",
            "ldrd r2, r3, [r3, r4]",
            "str r1, [sp]",
            "bl sym.avio_seek",
            "movw r0, 0xfffc",
            "b 0x2c7bc",
            "movw r0, 0xfffe",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0002c4fc": {
        "function_address": "0x0002c4fc",
        "instructions": [
            "mov r3, 1",
            "push {r0, r1, r2, lr}",
            "mov r2, 0",
            "str r3, [sp]",
            "mov r3, 0",
            "bl sym.avio_seek",
            "add sp, sp, 0xc",
            "ldm sp!, {pc}"
        ]
    },
    "fcn.0002c7d0": {
        "function_address": "0x0002c7d0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x410",
            "sub sp, sp, 4",
            "mov r4, r0",
            "mov r6, r1",
            "str r2, [sp, 4]",
            "bl fcn.0002c51c",
            "movw r3, 0xfffc",
            "mov r5, r0",
            "cmp r0, r3",
            "bne 0x2cbac",
            "mov r0, r6",
            "bl sym.url_feof",
            "cmp r0, 0",
            "movwne r5, 0xfffe",
            "bne 0x2cbac",
            "add r1, sp, 0x400",
            "mov r0, r6",
            "add r1, r1, 0xc",
            "mov r2, 4",
            "bl sym.avio_read",
            "cmp r0, 4",
            "movwne r5, 0xffff",
            "bne 0x2cbac",
            "add r3, sp, 0x400",
            "add fp, sp, 0x400",
            "ldrh r5, [r3, 0xe]",
            "ldrh sb, [r3, 0xc]",
            "cmp r5, 5",
            "movw r3, 0xffff",
            "movhi r5, r3",
            "add fp, fp, 8",
            "add r7, sp, 8",
            "b 0x2cb5c",
            "mov r0, r6",
            "bl sym.url_feof",
            "cmp r0, 0",
            "bne 0x2cb70",
            "mov r0, r6",
            "mov r1, fp",
            "mov r2, 4",
            "bl sym.avio_read",
            "cmp r0, 4",
            "bne 0x2cb78",
            "mvn r3, 3",
            "ldrb r2, [sp, 0x40a]",
            "ldrh r8, [fp]",
            "rsb r3, r8, r3",
            "ldrb sl, [sp, 0x40b]",
            "adds sb, sb, r3",
            "bmi 0x2cb78",
            "cmp r2, 0x15",
            "addls pc, pc, r2, lsl 2",
            "b 0x2cb58",
            "b 0x2cb44",
            "b 0x2cb44",
            "b 0x2c900",
            "b 0x2c938",
            "b 0x2cb44",
            "b 0x2c9bc",
            "b 0x2cb44",
            "b 0x2cb44",
            "b 0x2ca54",
            "b 0x2cb44",
            "b 0x2cb44",
            "b 0x2cb44",
            "b 0x2ca6c",
            "b 0x2cb44",
            "b 0x2cb44",
            "b 0x2cb18",
            "b 0x2cb44",
            "b 0x2cb30",
            "b 0x2cb44",
            "b 0x2cb44",
            "b 0x2cb44",
            "b 0x2cb44",
            "cmp r8, 6",
            "cmple sl, 0",
            "bne 0x2cb58",
            "mov r0, r6",
            "mov r1, r7",
            "mov r2, r8",
            "bl sym.avio_read",
            "cmp r0, r8",
            "bne 0x2cb58",
            "ldr r3, [r7]",
            "ldrh r2, [r7, 4]",
            "umull r2, r3, r2, r3",
            "strd r2, r3, [r4, 8]",
            "b 0x2cb5c",
            "cmp sl, 1",
            "movls r3, 0",
            "movhi r3, 1",
            "cmp r8, 0xa",
            "orrgt r3, r3, 1",
            "cmp r3, 0",
            "bne 0x2cb58",
            "mov r0, r6",
            "mov r1, r7",
            "mov r2, r8",
            "bl sym.avio_read",
            "cmp r0, r8",
            "bne 0x2cb58",
            "ldrh r3, [r7, 4]",
            "str r3, [r4, 0x438]",
            "cmp sl, 1",
            "ldrh r3, [r7, 2]",
            "and r2, r3, 1",
            "add r2, r2, 1",
            "str r2, [r4, 0x434]",
            "ubfx r2, r3, 1, 1",
            "add r2, r2, 1",
            "lsl r2, r2, 3",
            "str r2, [r4, 0x430]",
            "bne 0x2c9a8",
            "tst r3, 4",
            "ldrne r3, [0x0002cbbc]",
            "bne 0x2c9b4",
            "cmp r2, 0x10",
            "ldrne r3, [0x0002cbc0]",
            "moveq r3, 0x10000",
            "str r3, [r4, 0x43c]",
            "b 0x2cb5c",
            "cmp sl, 2",
            "movls r3, 0",
            "movhi r3, 1",
            "cmp r8, 8",
            "orrgt r3, r3, 1",
            "cmp r3, 0",
            "bne 0x2cb58",
            "mov r0, r6",
            "mov r1, r7",
            "mov r2, r8",
            "bl sym.avio_read",
            "cmp r0, r8",
            "bne 0x2cb58",
            "ldr r1, [r4, 0x14]",
            "ldrh r2, [r7]",
            "lsl r2, r2, 3",
            "ldrh r3, [r7, 2]",
            "cmp r2, r1",
            "lsl r3, r3, 3",
            "strne r2, [r4, 0x14]",
            "ldrne r2, [r4, 0x42c]",
            "addne r2, r2, 1",
            "strne r2, [r4, 0x42c]",
            "ldr r2, [r4, 0x18]",
            "cmp r3, r2",
            "strne r3, [r4, 0x18]",
            "ldrne r3, [r4, 0x42c]",
            "addne r3, r3, 1",
            "strne r3, [r4, 0x42c]",
            "cmp sl, 2",
            "bne 0x2ca48",
            "ldrh r3, [r7, 6]",
            "cmp r3, 0",
            "movne r3, 0x10",
            "bne 0x2ca4c",
            "mov r3, 8",
            "str r3, [r4, 0x10]",
            "b 0x2cb5c",
            "mov r0, r6",
            "bl fcn.0002c4fc",
            "mov r3, 0x450",
            "str r8, [r4, 0x458]",
            "strd r0, r1, [r4, r3]",
            "b 0x2cb44",
            "cmp r8, 0x304",
            "bgt 0x2cb58",
            "mov r0, r6",
            "mov r1, r7",
            "mov r2, r8",
            "bl sym.avio_read",
            "cmp r0, r8",
            "bne 0x2cb58",
            "ldrh r2, [r7]",
            "ldrh ip, [r7, 2]",
            "add ip, r2, ip",
            "sub ip, ip, 1",
            "cmp r2, 0xff",
            "cmple ip, 0xff",
            "addle r0, r2, 9",
            "addle r3, r7, 4",
            "addle r0, r4, r0, lsl 2",
            "ble 0x2cb00",
            "b 0x2cb58",
            "ldrb lr, [r3, -1]",
            "add r2, r2, 1",
            "ldrb r1, [r3, -3]",
            "lsl lr, lr, 2",
            "lsl r1, r1, 0x12",
            "uxtb lr, lr",
            "and r1, r1, 0xfc0000",
            "orr lr, lr, 0xff000000",
            "orr lr, lr, r1",
            "ldrb r1, [r3, -2]",
            "lsl r1, r1, 0xa",
            "and r1, r1, 0xfc00",
            "orr lr, lr, r1",
            "ldr r1, [0x0002cbc4]",
            "lsr r8, lr, 6",
            "and r1, r8, r1",
            "orr r1, r1, lr",
            "str r1, [r0, 4]!",
            "cmp r2, ip",
            "add r3, r3, 3",
            "ble 0x2cab8",
            "mov r3, 1",
            "str r3, [r4, 0x428]",
            "b 0x2cb5c",
            "mov r0, r6",
            "bl fcn.0002c4fc",
            "mov r3, 0x470",
            "str r8, [r4, 0x478]",
            "strd r0, r1, [r4, r3]",
            "b 0x2cb44",
            "mov r0, r6",
            "bl fcn.0002c4fc",
            "mov r3, 0x460",
            "str r8, [r4, 0x468]",
            "strd r0, r1, [r4, r3]",
            "mov r0, r6",
            "mov r2, r8",
            "asr r3, r2, 0x1f",
            "bl sym.avio_skip",
            "b 0x2cb5c",
            "movw r5, 0xffff",
            "movw r3, 0xffff",
            "cmp r5, r3",
            "cmpne sb, 0",
            "bgt 0x2c858",
            "b 0x2cb7c",
            "movw r5, 0xfffe",
            "b 0x2cb7c",
            "movw r5, 0xffff",
            "mov r0, r6",
            "bl fcn.0002c4fc",
            "cmp r5, 3",
            "cmpne r5, 1",
            "mov r3, 0x480",
            "strd r0, r1, [r4, r3]",
            "bne 0x2cbac",
            "mov r0, r4",
            "mov r1, r6",
            "ldr r2, [sp, 4]",
            "bl fcn.0002c51c",
            "mov r5, r0",
            "mov r0, r5",
            "add sp, sp, 0x14",
            "add sp, sp, 0x400",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0002e2cc": {
        "function_address": "0x0002e2cc",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x14",
            "ldr sl, [r0, 0x10]",
            "add sb, sp, 8",
            "mov r6, r0",
            "mov r5, r1",
            "ldr r7, [0x0002e5a8]",
            "mov r8, r2",
            "mov r0, sl",
            "mov r1, sb",
            "mov r2, 8",
            "bl sym.avio_read",
            "cmp r0, 8",
            "add r7, pc, r7",
            "mov r4, r0",
            "bne 0x2e3a8",
            "b 0x2e340",
            "ldr r0, [r6, 0x10]",
            "bl sym.url_feof",
            "cmp r0, 0",
            "bne 0x2e3a0",
            "mov r1, fp",
            "mov r2, 7",
            "mov r0, sb",
            "bl sym.imp.memmove",
            "ldr r0, [r6, 0x10]",
            "bl sym.avio_r8",
            "strb r0, [sp, 0xf]",
            "b 0x2e34c",
            "ldr r4, [0x0002e5ac]",
            "add fp, sb, 1",
            "add r4, r7, r4",
            "mov r0, sb",
            "mov r1, r4",
            "mov r2, 8",
            "bl sym.imp.memcmp",
            "subs r3, r0, 0",
            "bne 0x2e310",
            "mov r1, r4",
            "mov r2, 8",
            "mov r0, r5",
            "str r3, [sp, 4]",
            "bl sym.imp.memcpy",
            "mov r2, 0x34",
            "mov r0, sl",
            "add r1, r5, 8",
            "bl sym.avio_read",
            "ldr r3, [sp, 4]",
            "cmp r0, 0x34",
            "mov r4, r0",
            "moveq r2, r3",
            "bne 0x2e3a8",
            "b 0x2e3b8",
            "ldr r4, [0x0002e5b0]",
            "b 0x2e59c",
            "ldr r3, [0x0002e5b0]",
            "cmp r4, 0",
            "movge r4, r3",
            "b 0x2e59c",
            "ldr r1, [r5, r2]",
            "add r2, r2, 4",
            "add r3, r3, r1",
            "cmp r2, 0x3c",
            "bne 0x2e3b8",
            "cmp r3, 0",
            "beq 0x2e3e8",
            "ldr r2, [0x0002e5b4]",
            "mov r0, r6",
            "mov r1, 0x10",
            "add r2, r7, r2",
            "bl sym.imp.av_log",
            "ldr r3, [r5, 0x20]",
            "str r3, [r8]",
            "ldr r3, [r5, 0x10]",
            "cmp r3, 0",
            "ldr r4, [r5, 0x24]",
            "beq 0x2e40c",
            "cmp r3, 1",
            "bne 0x2e59c",
            "b 0x2e42c",
            "ldr r2, [r5, 0x2c]",
            "mov r3, 0",
            "mov r0, sl",
            "ldr r1, [r5, 0x34]",
            "adds r2, r2, r1",
            "adc r3, r3, 0",
            "bl sym.avio_skip",
            "b 0x2e59c",
            "ldr r3, [r6, 0x18]",
            "ldr r3, [r3, 4]",
            "cmp r3, 0",
            "bne 0x2e454",
            "ldr r2, [0x0002e5b8]",
            "mov r0, r6",
            "mov r1, 0x20",
            "add r2, r7, r2",
            "bl sym.imp.av_log",
            "b 0x2e59c",
            "ldr r3, [r3, 8]",
            "ldr r1, [r5, 0x28]",
            "str r1, [r8]",
            "ubfx r1, r1, 6, 6",
            "str r1, [r3, 0x174]",
            "ldr r2, [r8]",
            "and r2, r2, 0x3f",
            "cmp r1, r2",
            "movne r0, r6",
            "movne r1, 0x18",
            "ldrne r2, [0x0002e5bc]",
            "bne 0x2e4f8",
            "cmp r1, 0x14",
            "beq 0x2e4b8",
            "bgt 0x2e49c",
            "cmp r1, 0x10",
            "bne 0x2e4ec",
            "b 0x2e4b0",
            "cmp r1, 0x18",
            "beq 0x2e4c0",
            "cmp r1, 0x20",
            "bne 0x2e4ec",
            "b 0x2e4c8",
            "mov r2, 0x10000",
            "b 0x2e4cc",
            "ldr r2, [0x0002e5c0]",
            "b 0x2e4cc",
            "ldr r2, [0x0002e5c4]",
            "b 0x2e4cc",
            "ldr r2, [0x0002e5c8]",
            "str r2, [r3, 0xd4]",
            "ldr r8, [r5, 0x30]",
            "lsl r0, r8, 3",
            "bl fcn.0007d264",
            "movw r3, 0x1f48",
            "cmp r0, r3",
            "bne 0x2e520",
            "b 0x2e508",
            "ldr r2, [0x0002e5cc]",
            "mov r0, r6",
            "mov r1, 0x18",
            "add r2, r7, r2",
            "ldr r4, [0x0002e5d0]",
            "bl sym.imp.av_log",
            "b 0x2e59c",
            "ldr r3, [r6, 0x18]",
            "mov r1, 0x40",
            "movw r2, 0x3e9",
            "ldr r0, [r3]",
            "movw r3, 0x7530",
            "b 0x2e550",
            "cmp r0, 0x780",
            "beq 0x2e53c",
            "ldr r2, [0x0002e5d4]",
            "mov r0, r6",
            "mov r1, 0x18",
            "add r2, r7, r2",
            "bl sym.imp.av_log",
            "ldr r3, [r6, 0x18]",
            "mov r1, 0x40",
            "mov r2, 1",
            "ldr r0, [r3]",
            "mov r3, 0x19",
            "bl sym.avpriv_set_pts_info",
            "ldr r3, [0x0002e5d8]",
            "ldr r2, [r5, 0x2c]",
            "lsr r1, r2, 1",
            "ldr r4, [0x0002e5dc]",
            "and r3, r1, r3",
            "rsb r2, r3, r2",
            "ldr r3, [0x0002e5e0]",
            "lsr r1, r2, 2",
            "and r3, r2, r3",
            "ldr r2, [0x0002e5e0]",
            "and r2, r1, r2",
            "add r3, r2, r3",
            "add r3, r3, r3, lsr 4",
            "and r4, r3, r4",
            "add r4, r4, r4, lsr 8",
            "add r4, r4, r4, lsr 16",
            "and r4, r4, 0x3f",
            "mul r4, r8, r4",
            "mov r0, r4",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0002ebe8": {
        "function_address": "0x0002ebe8",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r8, r1",
            "mov r4, r0",
            "b 0x2ec90",
            "ldr r3, [r4, 4]",
            "ldr r5, [r4, 0xc]",
            "sub r3, r3, 3",
            "add r5, r8, r5",
            "cmp r3, 3",
            "addls pc, pc, r3, lsl 2",
            "b 0x2ec8c",
            "b 0x2ec24",
            "b 0x2ec24",
            "b 0x2ec2c",
            "b 0x2ec38",
            "mov r0, r5",
            "b 0x2ec30",
            "add r0, r5, 4",
            "bl sym.imp.av_freep",
            "b 0x2ec8c",
            "ldr r3, [r4, 8]",
            "cmp r3, 0",
            "ldrne r7, [r5, 4]",
            "movne r6, 0",
            "bne 0x2ec68",
            "b 0x2ec80",
            "mov r1, r7",
            "ldr r0, [r4, 0x10]",
            "bl fcn.0002ebe8",
            "ldr r3, [r4, 8]",
            "add r6, r6, 1",
            "add r7, r7, r3",
            "ldr r3, [r5]",
            "cmp r6, r3",
            "blt 0x2ec50",
            "ldr r0, [r5, 4]",
            "bl sym.imp.av_free",
            "b 0x2ec8c",
            "ldr r0, [r4, 0x10]",
            "mov r1, r5",
            "bl fcn.0002ebe8",
            "add r4, r4, 0x18",
            "ldr r3, [r4]",
            "cmp r3, 0",
            "bne 0x2ebf8",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.0002eb6c": {
        "function_address": "0x0002eb6c",
        "instructions": [
            "ldr r2, [0x0002ebe0]",
            "mov ip, 0",
            "push {r3, r4, r5, r6, r7, r8, sl, lr}",
            "mov r3, r1",
            "ldr r7, [r0, 0x124]",
            "mov r4, r3",
            "asr r5, r4, 0x1f",
            "add r2, pc, r2",
            "ldr r1, [r0, 0x128]",
            "b 0x2ebb8",
            "ldr sl, [r1]",
            "mov r6, r1",
            "ldr r8, [r1, 4]",
            "add r1, r1, 0x108",
            "cmp sl, r3",
            "bne 0x2ebb4",
            "cmp r8, r5",
            "beq 0x2ebd8",
            "add ip, ip, 1",
            "cmp ip, r7",
            "blt 0x2eb94",
            "ldr ip, [0x0002ebe4]",
            "mov r6, 0",
            "ldr r0, [r0]",
            "mov r1, 0x10",
            "add r2, r2, ip",
            "bl sym.imp.av_log",
            "mov r0, r6",
            "pop {r3, r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "fcn.0002ee00": {
        "function_address": "0x0002ee00",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r4, r0",
            "ldr r3, [r0, 0x160]",
            "cmp r3, 0",
            "movne r5, 0",
            "bne 0x2ee38",
            "pop {r3, r4, r5, pc}",
            "ldr r3, [r4, 0x160]",
            "ldr r0, [r3, r5, lsl 2]",
            "bl sym.imp.av_free_packet",
            "ldr r3, [r4, 0x160]",
            "ldr r0, [r3, r5, lsl 2]",
            "add r5, r5, 1",
            "bl sym.imp.av_free",
            "ldr r3, [r4, 0x164]",
            "cmp r5, r3",
            "blt 0x2ee1c",
            "add r0, r4, 0x160",
            "bl sym.imp.av_freep",
            "mov r3, 0",
            "str r3, [r4, 0x164]",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.0002eed0": {
        "function_address": "0x0002eed0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x420",
            "sub sp, sp, 4",
            "ldr r5, [0x0002f08c]",
            "mov sl, r0",
            "mov sb, r1",
            "str r3, [sp, 0xc]",
            "mov r8, r2",
            "ldr r3, [0x0002f090]",
            "add r5, pc, r5",
            "ldr r4, [r1, 4]",
            "mov fp, 0",
            "add r6, sp, 0x20",
            "mov r7, r5",
            "add r3, r5, r3",
            "str r3, [sp, 0x10]",
            "ldr r3, [0x0002f094]",
            "add r3, r5, r3",
            "str r3, [sp, 0x14]",
            "ldr r3, [0x0002f098]",
            "add r3, r5, r3",
            "str r3, [sp, 0x18]",
            "ldr r3, [0x0002f09c]",
            "add r3, r5, r3",
            "str r3, [sp, 0x1c]",
            "b 0x2f05c",
            "ldr r5, [r4, 8]",
            "ldr r1, [sp, 0x10]",
            "mov r0, r5",
            "bl sym.imp.strcmp",
            "ldr r1, [r4]",
            "cmp r0, 0",
            "moveq r5, 0",
            "cmp r1, 0",
            "bne 0x2ef70",
            "mov r0, sl",
            "add r1, r1, 0x18",
            "ldr r2, [sp, 0x1c]",
            "bl sym.imp.av_log",
            "b 0x2f054",
            "ldr r3, [sp, 0xc]",
            "cmp r3, 0",
            "beq 0x2ef94",
            "str r1, [sp]",
            "mov r0, r6",
            "mov r1, 0x400",
            "ldr r2, [sp, 0x18]",
            "bl sym.imp.snprintf",
            "b 0x2efa0",
            "mov r0, r6",
            "mov r2, 0x400",
            "bl sym.imp.av_strlcpy",
            "ldr r3, [r4, 0x14]",
            "ldr r2, [r4, 0x10]",
            "orrs r3, r2, r3",
            "moveq r3, 0",
            "movne r3, 1",
            "cmp r5, 0",
            "orreq r3, r3, 1",
            "cmp r3, 0",
            "beq 0x2eff8",
            "mov r3, 0",
            "mov r0, r8",
            "mov r1, r6",
            "ldr r2, [r4, 4]",
            "bl sym.imp.av_dict_set",
            "ldr r3, [r4, 0x18]",
            "cmp r3, 0",
            "beq 0x2eff8",
            "mov r0, sl",
            "add r1, r4, 0x18",
            "mov r2, r8",
            "mov r3, r6",
            "bl fcn.0002eed0",
            "cmp r5, 0",
            "beq 0x2f054",
            "ldr r1, [sp, 0x14]",
            "mov r2, 0x400",
            "mov r0, r6",
            "bl sym.imp.av_strlcat",
            "mov r1, r5",
            "mov r2, 0x400",
            "mov r0, r6",
            "bl sym.imp.av_strlcat",
            "mov r3, 0",
            "mov r0, r8",
            "mov r1, r6",
            "ldr r2, [r4, 4]",
            "bl sym.imp.av_dict_set",
            "ldr r3, [r4, 0x18]",
            "cmp r3, 0",
            "beq 0x2f054",
            "mov r0, sl",
            "add r1, r4, 0x18",
            "mov r2, r8",
            "mov r3, r6",
            "bl fcn.0002eed0",
            "add fp, fp, 1",
            "add r4, r4, 0x20",
            "ldr r3, [sb]",
            "cmp fp, r3",
            "blt 0x2ef38",
            "ldr r3, [0x0002f0a0]",
            "mov r0, r8",
            "mov r1, 0",
            "mov r5, r7",
            "ldr r2, [r7, r3]",
            "bl fcn.000327c4",
            "add sp, sp, 0x24",
            "add sp, sp, 0x400",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0002eb4c": {
        "function_address": "0x0002eb4c",
        "instructions": [
            "mov r3, 1",
            "push {r0, r1, r2, lr}",
            "mov r2, 0",
            "str r3, [sp]",
            "mov r3, 0",
            "bl sym.avio_seek",
            "add sp, sp, 0xc",
            "ldm sp!, {pc}"
        ]
    },
    "fcn.0002f280": {
        "function_address": "0x0002f280",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r7, r0",
            "sub sp, sp, 0x1c",
            "mov r0, r1",
            "mov sl, r2",
            "mov fp, r3",
            "ldr r6, [0x0002f3ac]",
            "mov r8, r1",
            "bl sym.avio_r8",
            "mov r2, r0",
            "asr r3, r2, 0x1f",
            "strd r2, r3, [sp, 0x10]",
            "orrs r3, r0, r3",
            "add r6, pc, r6",
            "bne 0x2f2f4",
            "mov r0, r8",
            "bl sym.url_feof",
            "cmp r0, 0",
            "bne 0x2f39c",
            "mov r0, r8",
            "bl fcn.0002eb4c",
            "ldr r2, [0x0002f3b0]",
            "strd r0, r1, [sp]",
            "strd r0, r1, [sp, 8]",
            "mov r1, 0x10",
            "ldr r0, [r7]",
            "add r2, r6, r2",
            "bl sym.imp.av_log",
            "b 0x2f39c",
            "ldr r3, [0x0002f3b4]",
            "ldr r3, [r6, r3]",
            "ldrb r3, [r3, r0]",
            "rsb sb, r3, 8",
            "cmp sb, sl",
            "ble 0x2f350",
            "mov r0, r8",
            "ldr sb, [0x0002f3b8]",
            "bl fcn.0002eb4c",
            "mvn r2, 0",
            "mvn r3, 0",
            "adds r2, r2, r0",
            "ldrb ip, [sp, 0x10]",
            "adc r3, r3, r1",
            "ldr r0, [r7]",
            "strd r2, r3, [sp]",
            "mov r1, 0x10",
            "strd r2, r3, [sp, 8]",
            "ldr r2, [0x0002f3bc]",
            "uxtb r3, ip",
            "add r2, r6, r2",
            "bl sym.imp.av_log",
            "b 0x2f3a0",
            "mov r1, 1",
            "mov r6, 0",
            "lsl r1, r1, r3",
            "ldrd r2, r3, [sp, 0x10]",
            "eor r2, r2, r1",
            "eor r3, r3, r1, asr 31",
            "b 0x2f388",
            "lsl r5, r3, 8",
            "lsl r4, r2, 8",
            "orr r5, r5, r2, lsr 24",
            "mov r0, r8",
            "bl sym.avio_r8",
            "orr r3, r5, r0, asr 31",
            "orr r2, r4, r0",
            "add r6, r6, 1",
            "cmp r6, sb",
            "blt 0x2f36c",
            "strd r2, r3, [fp]",
            "b 0x2f3a0",
            "mvn sb, 4",
            "mov r0, sb",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0002f428": {
        "function_address": "0x0002f428",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov ip, r2",
            "ldr r8, [0x0002f9b8]",
            "sub sp, sp, 0x3c",
            "mov r4, r0",
            "mov sl, r3",
            "add r8, pc, r8",
            "b 0x2f454",
            "cmp ip, r3",
            "add r1, r1, 0x18",
            "beq 0x2f464",
            "ldr r3, [r1]",
            "mov r6, r1",
            "cmp r3, 0",
            "bne 0x2f448",
            "ldr r1, [0x0002f9bc]",
            "rsbs r2, r3, 1",
            "movlo r2, 0",
            "cmp ip, r1",
            "cmpeq r3, 0",
            "bne 0x2f4a8",
            "ldr r3, [r4, 4]",
            "cmp r3, 0",
            "ble 0x2f4a8",
            "add r1, r4, r3, lsl 4",
            "ldr r3, [r4, r3, lsl 4]",
            "cmn r3, 1",
            "bne 0x2f4a8",
            "ldr r1, [r1, 4]",
            "add r3, r3, 0x1000000",
            "cmp r1, r3",
            "beq 0x2f970",
            "cmp ip, 0xec",
            "moveq r3, 0",
            "andne r3, r2, 1",
            "cmp r3, 0",
            "beq 0x2f4dc",
            "cmp ip, 0xbf",
            "beq 0x2f4dc",
            "ldr r2, [0x0002f9c0]",
            "mov r1, 0x20",
            "ldr r0, [r4]",
            "mov r3, ip",
            "add r2, r8, r2",
            "bl sym.imp.av_log",
            "ldr r3, [r4]",
            "ldr r0, [r6]",
            "ldr fp, [r6, 0xc]",
            "ldr r7, [r3, 0x10]",
            "ldr r3, [r6, 8]",
            "str r0, [sp, 0x2c]",
            "add r5, sl, fp",
            "cmp r3, 0",
            "beq 0x2f548",
            "ldr r1, [sl, fp]",
            "mov sb, r5",
            "ldr r0, [r5, 4]",
            "add r1, r1, 1",
            "mul r1, r3, r1",
            "bl sym.imp.av_realloc",
            "cmp r0, 0",
            "beq 0x2f960",
            "str r0, [r5, 4]",
            "mov r1, 0",
            "ldr r2, [r6, 8]",
            "ldr r5, [sl, fp]",
            "mla r5, r5, r2, r0",
            "mov r0, r5",
            "bl sym.imp.memset",
            "ldr r3, [sb]",
            "add r3, r3, 1",
            "str r3, [sb]",
            "ldr r3, [r6, 4]",
            "sub r3, r3, 7",
            "cmp r3, 1",
            "bls 0x2f638",
            "mov r3, 0",
            "mov r0, r4",
            "str r3, [r4, 0x10c]",
            "mov r1, r7",
            "add r3, sp, 0x30",
            "mov r2, 8",
            "bl fcn.0002f280",
            "subs r3, r0, 0",
            "ble 0x2f5cc",
            "ldrd r0, r1, [sp, 0x30]",
            "mov sl, 1",
            "mov fp, 0",
            "mov r2, 7",
            "mul r2, r2, r3",
            "adds r0, r0, sl",
            "adc r1, r1, fp",
            "strd r0, r1, [sp, 0x20]",
            "mov r0, sl",
            "mov r1, fp",
            "bl fcn.0007d398",
            "ldr r2, [sp, 0x20]",
            "cmp r0, r2",
            "bne 0x2f5d0",
            "ldr r3, [sp, 0x24]",
            "cmp r3, r1",
            "mvneq r2, 0",
            "mvneq r3, 0xff000000",
            "strdeq r2, r3, [sp, 0x30]",
            "b 0x2f5d0",
            "bne 0x2f974",
            "ldr r3, [r6, 4]",
            "ldr r2, [0x0002f9c4]",
            "add r2, r8, r2",
            "add r0, r2, r3, lsl 3",
            "ldr r1, [r2, r3, lsl 3]",
            "ldr r2, [r0, 4]",
            "orrs r0, r1, r2",
            "beq 0x2f638",
            "ldr r0, [sp, 0x34]",
            "ldr ip, [sp, 0x30]",
            "cmp r0, r2",
            "bhi 0x2f60c",
            "bne 0x2f638",
            "cmp ip, r1",
            "bls 0x2f638",
            "str r2, [sp, 0xc]",
            "ldr r2, [0x0002f9c8]",
            "str r1, [sp, 8]",
            "mov r1, 0x10",
            "str ip, [sp]",
            "str r0, [sp, 4]",
            "add r2, r8, r2",
            "str r3, [sp, 0x10]",
            "ldr r0, [r4]",
            "bl sym.imp.av_log",
            "b 0x2f994",
            "ldr r3, [r6, 4]",
            "sub r3, r3, 1",
            "cmp r3, 7",
            "addls pc, pc, r3, lsl 2",
            "b 0x2f944",
            "b 0x2f66c",
            "b 0x2f6d8",
            "b 0x2f724",
            "b 0x2f724",
            "b 0x2f778",
            "b 0x2f7cc",
            "b 0x2f928",
            "b 0x2f968",
            "ldr r6, [sp, 0x30]",
            "cmp r6, 8",
            "bgt 0x2f980",
            "mov r2, 0",
            "mov r3, 0",
            "strd r2, r3, [r5]",
            "mov r4, 0",
            "b 0x2f6cc",
            "ldr r2, [r5, 4]",
            "mov r0, r7",
            "ldr r3, [r5]",
            "add r4, r4, 1",
            "lsl r2, r2, 8",
            "orr r1, r2, r3, lsr 24",
            "lsl r3, r3, 8",
            "str r1, [sp, 0x1c]",
            "str r3, [sp, 0x18]",
            "bl sym.avio_r8",
            "ldrd r2, r3, [sp, 0x18]",
            "orr r2, r2, r0",
            "orr r3, r3, r0, asr 31",
            "mov r0, r2",
            "mov r1, r3",
            "strd r0, r1, [r5]",
            "cmp r4, r6",
            "blt 0x2f68c",
            "b 0x2f970",
            "ldr r1, [sp, 0x30]",
            "cmp r1, 0",
            "moveq r3, 0",
            "moveq r2, 0",
            "strdeq r2, r3, [r5]",
            "moveq r3, r1",
            "beq 0x2f974",
            "cmp r1, 4",
            "bne 0x2f70c",
            "mov r0, r7",
            "bl sym.avio_rb32",
            "bl fcn.0007d6b8",
            "b 0x2f71c",
            "cmp r1, 8",
            "bne 0x2f980",
            "mov r0, r7",
            "bl sym.avio_rb64",
            "strd r0, r1, [r5]",
            "b 0x2f970",
            "ldr sl, [sp, 0x30]",
            "add r0, sl, 1",
            "bl sym.imp.av_malloc",
            "subs r6, r0, 0",
            "beq 0x2f960",
            "mov r0, r7",
            "mov r1, r6",
            "mov r2, sl",
            "bl sym.avio_read",
            "cmp r0, sl",
            "beq 0x2f75c",
            "mov r0, r6",
            "bl sym.imp.av_free",
            "b 0x2f99c",
            "mov r4, 0",
            "strb r4, [r6, r0]",
            "ldr r0, [r5]",
            "bl sym.imp.av_free",
            "str r6, [r5]",
            "mov r3, r4",
            "b 0x2f974",
            "ldr r6, [sp, 0x30]",
            "ldr r0, [r5, 4]",
            "bl sym.imp.av_free",
            "mov r0, r6",
            "bl sym.imp.av_malloc",
            "cmp r0, 0",
            "str r0, [r5, 4]",
            "beq 0x2f960",
            "str r6, [r5]",
            "mov r0, r7",
            "bl fcn.0002eb4c",
            "mov r2, r6",
            "strd r0, r1, [r5, 8]",
            "mov r0, r7",
            "ldr r1, [r5, 4]",
            "bl sym.avio_read",
            "cmp r0, r6",
            "beq 0x2f970",
            "add r0, r5, 4",
            "bl sym.imp.av_freep",
            "b 0x2f99c",
            "ldm r4, {r3, r7}",
            "ldrd sl, fp, [sp, 0x30]",
            "cmp r7, 0xf",
            "ldr r0, [r3, 0x10]",
            "ble 0x2f800",
            "ldr r2, [0x0002f9cc]",
            "mov r1, 0x10",
            "mov r0, r3",
            "mov r3, r1",
            "add r2, r8, r2",
            "bl sym.imp.av_log",
            "mvn r3, 0x25",
            "b 0x2f974",
            "add r8, r7, 1",
            "add r7, r4, r7, lsl 4",
            "str r8, [r4, 4]",
            "lsl r8, r8, 4",
            "bl fcn.0002eb4c",
            "ldr r3, [0x0002f9d0]",
            "strd r0, r1, [r7, 8]",
            "ldr r0, [sp, 0x2c]",
            "strd sl, fp, [r4, r8]",
            "cmp r0, r3",
            "bne 0x2f840",
            "ldr r3, [r4]",
            "ldr r0, [r3, 0x10]",
            "bl fcn.0002eb4c",
            "mov r3, 0x158",
            "strd r0, r1, [r4, r3]",
            "ldr r6, [r6, 0x10]",
            "mov r7, r6",
            "b 0x2f8a4",
            "ldr r3, [r7, 4]",
            "sub r3, r3, 1",
            "cmp r3, 3",
            "addls pc, pc, r3, lsl 2",
            "b 0x2f8a0",
            "b 0x2f870",
            "b 0x2f880",
            "b 0x2f890",
            "b 0x2f890",
            "ldr r1, [r7, 0xc]",
            "ldrd r2, r3, [r7, 0x10]",
            "strd r2, r3, [r5, r1]",
            "b 0x2f8a0",
            "ldr r1, [r7, 0xc]",
            "ldrd r2, r3, [r7, 0x10]",
            "strd r2, r3, [r5, r1]",
            "b 0x2f8a0",
            "ldr r8, [r7, 0xc]",
            "ldr r0, [r7, 0x10]",
            "bl sym.imp.av_strdup",
            "str r0, [r5, r8]",
            "add r7, r7, 0x18",
            "ldr r3, [r7]",
            "cmp r3, 0",
            "bne 0x2f84c",
            "ldr r3, [r4]",
            "ldr r0, [r3, 0x10]",
            "bl fcn.0002eb4c",
            "ldr ip, [r4, 4]",
            "cmp ip, 0",
            "ble 0x2f90c",
            "add r7, r4, ip, lsl 4",
            "ldrd r2, r3, [r7, -8]",
            "subs r2, r0, r2",
            "sbc r3, r1, r3",
            "ldr r1, [r7, 4]",
            "cmp r1, r3",
            "bhi 0x2f8f4",
            "bne 0x2f900",
            "ldr r1, [r4, ip, lsl 4]",
            "cmp r1, r2",
            "bls 0x2f900",
            "ldr r3, [r4, 0x10c]",
            "cmp r3, 0",
            "beq 0x2f90c",
            "sub ip, ip, 1",
            "str ip, [r4, 4]",
            "b 0x2f970",
            "mov r0, r4",
            "mov r1, r6",
            "mov r2, r5",
            "bl fcn.0002f3c0",
            "subs r3, r0, 0",
            "beq 0x2f8b0",
            "b 0x2f974",
            "mov r3, r5",
            "mov r0, r4",
            "ldr r1, [r6, 0x10]",
            "ldr r2, [sp, 0x2c]",
            "bl fcn.0002f428",
            "mov r3, r0",
            "b 0x2f974",
            "ldrd r2, r3, [sp, 0x30]",
            "mov r0, r7",
            "bl sym.avio_skip",
            "cmp r1, 0",
            "mvnlt r3, 4",
            "movge r3, 0",
            "b 0x2f974",
            "mvn r3, 0xb",
            "b 0x2f974",
            "mov r3, 1",
            "b 0x2f974",
            "mov r3, 0",
            "mov r0, r3",
            "add sp, sp, 0x3c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r2, [0x0002f9d4]",
            "mov r1, 0x10",
            "ldr r0, [r4]",
            "add r2, r8, r2",
            "bl sym.imp.av_log",
            "ldr r3, [0x0002f9d8]",
            "b 0x2f974",
            "ldr r2, [0x0002f9dc]",
            "mov r1, 0x10",
            "ldr r0, [r4]",
            "add r2, r8, r2",
            "bl sym.imp.av_log",
            "mvn r3, 4",
            "b 0x2f974"
        ]
    },
    "fcn.0007d6b8": {
        "function_address": "0x0007d6b8",
        "instructions": [
            "lsls r2, r0, 1",
            "asr r1, r2, 3",
            "rrx r1, r1",
            "lsl r0, r2, 0x1c",
            "andsne r3, r2, 0xff000000",
            "teqne r3, 0xff000000",
            "eorne r1, r1, 0x38000000",
            "bxne lr",
            "teq r2, 0",
            "teqne r3, 0xff000000",
            "bxeq lr",
            "push {r4, r5, lr}",
            "mov r4, 0x380",
            "and r5, r1, 0x80000000",
            "bic r1, r1, 0x80000000",
            "b 0x7d508"
        ]
    },
    "fcn.0002f3c0": {
        "function_address": "0x0002f3c0",
        "instructions": [
            "ldr r3, [r0, 0x10c]",
            "push {r0, r1, r4, r5, r6, lr}",
            "mov r4, r0",
            "mov r6, r1",
            "mov r5, r2",
            "cmp r3, 0",
            "bne 0x2f410",
            "ldr r3, [r0]",
            "mov r2, 4",
            "ldr r1, [r3, 0x10]",
            "mov r3, sp",
            "bl fcn.0002f280",
            "cmp r0, 0",
            "blt 0x2f424",
            "mov r3, 7",
            "mov r2, 1",
            "mul r0, r3, r0",
            "ldr r3, [sp]",
            "orr r0, r3, r2, lsl r0",
            "str r0, [r4, 0x10c]",
            "mov r0, r4",
            "mov r1, r6",
            "ldr r2, [r4, 0x10c]",
            "mov r3, r5",
            "bl fcn.0002f428",
            "pop {r2, r3, r4, r5, r6, pc}"
        ]
    },
    "fcn.0002f9e0": {
        "function_address": "0x0002f9e0",
        "instructions": [
            "push {r0, r1, r2, r3, r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r6, r0",
            "ldr r3, [r0]",
            "mov r4, r1",
            "ldr r8, [r0, 0x150]",
            "ldr sl, [r0, 0x108]",
            "ldr r0, [r3, 0x10]",
            "bl fcn.0002eb4c",
            "ldr r3, [r6, 0x14c]",
            "ldr r7, [0x0002fb6c]",
            "strd r0, r1, [sp, 8]",
            "cmp r4, r3",
            "ldr sb, [r6, 0x10c]",
            "add r7, pc, r7",
            "movge r4, 0",
            "bge 0x2fb60",
            "ldr r2, [r8, r4, lsl 4]",
            "add r3, r8, r4, lsl 4",
            "ldr r1, [0x0002fb70]",
            "ldr r4, [r3, 4]",
            "cmp r2, r1",
            "bne 0x2fa40",
            "cmp r4, 0",
            "beq 0x2fb60",
            "ldr r1, [0x0002fb74]",
            "cmp r2, r1",
            "bne 0x2fa54",
            "cmp r4, 0",
            "beq 0x2fb60",
            "mov r2, 0x158",
            "mov r8, 0",
            "ldrd r4, r5, [r6, r2]",
            "ldrd r2, r3, [r3, 8]",
            "str r8, [sp]",
            "adds r4, r4, r2",
            "adc r5, r5, r3",
            "ldr r3, [r6]",
            "mov r2, r4",
            "ldr r0, [r3, 0x10]",
            "mov r3, r5",
            "bl sym.avio_seek",
            "cmp r0, r4",
            "bne 0x2fb3c",
            "cmp r1, r5",
            "bne 0x2fb3c",
            "ldr ip, [r6, 4]",
            "cmp ip, 0x10",
            "bne 0x2fac0",
            "ldr r2, [0x0002fb78]",
            "mov r1, 0x20",
            "ldr r0, [r6]",
            "mov r3, ip",
            "ldr r4, [0x0002fb7c]",
            "add r2, r7, r2",
            "bl sym.imp.av_log",
            "b 0x2fb40",
            "add r1, r6, ip, lsl 4",
            "mov r2, 0",
            "add ip, ip, 1",
            "str r8, [r6, 0x10c]",
            "mov r3, 0",
            "str ip, [r6, 4]",
            "strd r2, r3, [r1, 8]",
            "lsl r1, ip, 4",
            "mvn r2, 0",
            "mvn r3, 0",
            "mov r0, r6",
            "strd r2, r3, [r6, r1]",
            "mov r2, r6",
            "ldr r1, [0x0002fb80]",
            "add r1, r7, r1",
            "bl fcn.0002f3c0",
            "mov r4, r0",
            "b 0x2fb2c",
            "sub r2, r3, 1",
            "str r2, [r6, 4]",
            "add r2, r6, r3, lsl 4",
            "ldr r3, [r6, r3, lsl 4]",
            "cmn r3, 1",
            "bne 0x2fb2c",
            "ldr r3, [r2, 4]",
            "cmn r3, 1",
            "beq 0x2fb40",
            "ldr r3, [r6, 4]",
            "cmp r3, 0",
            "bne 0x2fb08",
            "b 0x2fb40",
            "mov r4, 0",
            "ldr r3, [r6]",
            "mov r2, 0",
            "str r2, [sp]",
            "ldr r0, [r3, 0x10]",
            "ldrd r2, r3, [sp, 8]",
            "bl sym.avio_seek",
            "str sl, [r6, 0x108]",
            "str sb, [r6, 0x10c]",
            "mov r0, r4",
            "add sp, sp, 0x10",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "fcn.0007dc90": {
        "function_address": "0x0007dc90",
        "instructions": [
            "push {r0, lr}",
            "bl fcn.0007dbec",
            "cmp r0, 0",
            "cmnmi r0, 0",
            "pop {r0, pc}"
        ]
    },
    "fcn.0007dbec": {
        "function_address": "0x0007dbec",
        "instructions": [
            "mov ip, 1",
            "str ip, [sp, -4]!",
            "lsl ip, r1, 1",
            "mvns ip, ip, asr 21",
            "lsl ip, r3, 1",
            "mvnsne ip, ip, asr 21",
            "beq 0x7dc44",
            "add sp, sp, 4",
            "orrs ip, r0, r1, lsl 1",
            "orrseq ip, r2, r3, lsl 1",
            "teqne r1, r3",
            "teqeq r0, r2",
            "moveq r0, 0",
            "bxeq lr",
            "cmn r0, 0",
            "teq r1, r3",
            "cmppl r1, r3",
            "cmpeq r0, r2",
            "asrhs r0, r3, 0x1f",
            "mvnlo r0, r3, asr 31",
            "orr r0, r0, 1",
            "bx lr",
            "lsl ip, r1, 1",
            "mvns ip, ip, asr 21",
            "bne 0x7dc58",
            "orrs ip, r0, r1, lsl 12",
            "bne 0x7dc6c",
            "lsl ip, r3, 1",
            "mvns ip, ip, asr 21",
            "bne 0x7dc08",
            "orrs ip, r2, r3, lsl 12",
            "beq 0x7dc08",
            "pop {r0}",
            "bx lr"
        ]
    },
    "fcn.0002fbdc": {
        "function_address": "0x0002fbdc",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x44",
            "ldr r4, [r1]",
            "mov r6, r0",
            "mov r8, r1",
            "ldr fp, [0x0002fd74]",
            "ldr sl, [0x0002fd78]",
            "ldr r7, [r0]",
            "cmp r4, fp",
            "str r4, [sp, 0x3c]",
            "add sl, pc, sl",
            "bgt 0x2fd68",
            "ldr r1, [r2, 0x10]",
            "ldr r5, [r2, 0x14]",
            "cmp r1, 2",
            "bne 0x2fc28",
            "cmp r5, 0",
            "bne 0x2fc3c",
            "b 0x2fc48",
            "cmp r1, 3",
            "bne 0x2fc3c",
            "cmp r5, 0",
            "ldreq r0, [r2, 0x18]",
            "beq 0x2fd6c",
            "orrs r1, r1, r5",
            "beq 0x2fc98",
            "b 0x2fd68",
            "add sl, sp, 0x38",
            "add sb, sp, 0x3c",
            "add r4, r4, r4, lsl 1",
            "mov r0, r5",
            "add r1, r4, 0xc",
            "str r4, [sp, 0x38]",
            "bl sym.imp.av_realloc",
            "mov r1, sl",
            "mov r2, r7",
            "mov r3, sb",
            "mov r5, r0",
            "bl sym.imp.av_lzo1x_decode",
            "cmp r4, fp",
            "cmple r0, 2",
            "beq 0x2fc50",
            "cmp r0, 0",
            "ldreq r3, [sp, 0x38]",
            "rsbeq r4, r3, r4",
            "beq 0x2fd50",
            "b 0x2fd60",
            "mov r2, 0x38",
            "mov r0, sp",
            "bl sym.imp.memset",
            "ldr r1, [0x0002fd7c]",
            "mov r0, sp",
            "mov r2, 0x38",
            "mov sb, sp",
            "add r1, sl, r1",
            "bl sym.imp.inflateInit_",
            "cmp r0, 0",
            "bne 0x2fd68",
            "ldr r3, [sp, 0x3c]",
            "mov sb, sp",
            "str r7, [sp]",
            "mov r7, r0",
            "ldr sl, [0x0002fd74]",
            "str r3, [sp, 4]",
            "b 0x2fce4",
            "mov r7, r5",
            "add r4, r4, r4, lsl 1",
            "mov r0, r7",
            "mov r1, r4",
            "bl sym.imp.av_realloc",
            "subs r5, r0, 0",
            "bne 0x2fd0c",
            "mov r0, sp",
            "mov r5, r7",
            "bl sym.imp.inflateEnd",
            "b 0x2fd60",
            "ldr r3, [sp, 0x14]",
            "mov r0, sp",
            "mov r1, 0",
            "rsb r2, r3, r4",
            "add r3, r5, r3",
            "str r2, [sp, 0x10]",
            "str r3, [sp, 0xc]",
            "bl sym.imp.inflate",
            "cmp r4, sl",
            "cmple r0, 0",
            "mov r7, r0",
            "beq 0x2fce0",
            "mov r0, sp",
            "ldr r4, [sp, 0x14]",
            "bl sym.imp.inflateEnd",
            "cmp r7, 1",
            "bne 0x2fd60",
            "str r5, [r6]",
            "mov r0, 0",
            "str r4, [r8]",
            "b 0x2fd6c",
            "mov r0, r5",
            "bl sym.imp.av_free",
            "mvn r0, 0",
            "add sp, sp, 0x44",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.imp.av_lzo1x_decode": {
        "function_address": "0x0000a1a0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x5c8]!"
        ]
    },
    "sym.imp.inflateInit_": {
        "function_address": "0x00009f18",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x778]!"
        ]
    },
    "sym.imp.inflateEnd": {
        "function_address": "0x000097f8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0xc38]!"
        ]
    },
    "sym.imp.inflate": {
        "function_address": "0x00009ad4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0xa50]!"
        ]
    },
    "fcn.0002eca0": {
        "function_address": "0x0002eca0",
        "instructions": [
            "ldr r3, [r0, 0x13c]",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r0",
            "ldr r6, [0x0002edf0]",
            "sub sp, sp, 0x2c",
            "cmp r3, 0",
            "ldr r5, [r0, 0x140]",
            "add r6, pc, r6",
            "beq 0x2ed2c",
            "ldrd r0, r1, [r5]",
            "bl fcn.0007d6f8",
            "mov r3, 0x110",
            "mov r8, r0",
            "mov sb, r1",
            "ldrd r0, r1, [r4, r3]",
            "bl fcn.0007d6f8",
            "mov r2, r0",
            "mov r3, r1",
            "ldr r0, [0x0002edf4]",
            "ldr r1, [0x0002edf8]",
            "bl fcn.0007d9d8",
            "mov r2, r0",
            "mov r3, r1",
            "mov r0, r8",
            "mov r1, sb",
            "bl fcn.0007dcf4",
            "cmp r0, 0",
            "beq 0x2ed2c",
            "ldr r2, [0x0002edfc]",
            "mov r1, 0x18",
            "ldr r0, [r4]",
            "add r2, r6, r2",
            "bl sym.imp.av_log",
            "ldr r3, [r4, 0x110]",
            "b 0x2ed30",
            "mov r3, 1",
            "mov r6, 0",
            "mov r0, r3",
            "asr r1, r0, 0x1f",
            "mov fp, 0x158",
            "strd r0, r1, [sp, 0x20]",
            "mov sb, r6",
            "b 0x2eddc",
            "ldr r7, [r5, 0xc]",
            "mov r8, 0",
            "b 0x2edc8",
            "mov r0, r4",
            "ldr r1, [r7]",
            "bl fcn.0002eb6c",
            "cmp r0, 0",
            "beq 0x2edc0",
            "ldr sl, [r0, 0xf0]",
            "cmp sl, 0",
            "beq 0x2edc0",
            "ldrd r2, r3, [r4, fp]",
            "strd r2, r3, [sp, 0x18]",
            "ldrd r0, r1, [sp, 0x18]",
            "ldrd r2, r3, [r7, 8]",
            "adds r0, r0, r2",
            "adc r1, r1, r3",
            "ldrd r2, r3, [sp, 0x20]",
            "strd r0, r1, [sp, 0x18]",
            "ldrd r0, r1, [r5]",
            "bl fcn.0007df14",
            "ldrd r2, r3, [sp, 0x18]",
            "strd r0, r1, [sp]",
            "mov r1, 1",
            "mov r0, sl",
            "str sb, [sp, 8]",
            "str sb, [sp, 0xc]",
            "str r1, [sp, 0x10]",
            "bl sym.av_add_index_entry",
            "add r8, r8, 1",
            "add r7, r7, 0x10",
            "ldr r3, [r5, 8]",
            "cmp r8, r3",
            "blt 0x2ed58",
            "add r6, r6, 1",
            "add r5, r5, 0x10",
            "ldr r3, [r4, 0x13c]",
            "cmp r6, r3",
            "blt 0x2ed4c",
            "add sp, sp, 0x2c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0007d6f8": {
        "function_address": "0x0007d6f8",
        "instructions": [
            "cmp r1, 0x100000",
            "blo 0x7d4f0",
            "cmp r1, 0x200000",
            "blo 0x7d4d8",
            "lsrs r1, r1, 1",
            "rrxs r0, r0",
            "rrx ip, ip",
            "add r4, r4, 1",
            "lsl r2, r4, 0x15",
            "cmn r2, 0x400000",
            "bhs 0x7d630",
            "cmp ip, 0x80000000",
            "lsrseq ip, r0, 1",
            "adcs r0, r0, 0",
            "adc r1, r1, r4, lsl 20",
            "orr r1, r1, r5",
            "pop {r4, r5, pc}",
            "lsls ip, ip, 1",
            "adcs r0, r0, r0",
            "adc r1, r1, r1",
            "tst r1, 0x100000",
            "sub r4, r4, 1",
            "bne 0x7d4d8",
            "teq r1, 0",
            "moveq r1, r0",
            "moveq r0, 0",
            "clz r3, r1",
            "addeq r3, r3, 0x20",
            "sub r3, r3, 0xb",
            "subs r2, r3, 0x20",
            "bge 0x7d548",
            "adds r2, r2, 0xc",
            "ble 0x7d544",
            "add ip, r2, 0x14",
            "rsb r2, r2, 0xc",
            "lsl r0, r1, ip",
            "lsr r1, r1, r2",
            "b 0x7d558",
            "add r2, r2, 0x14",
            "rsble ip, r2, 0x20",
            "lsl r1, r1, r2",
            "orrle r1, r1, r0, lsr ip",
            "lslle r0, r0, r2",
            "subs r4, r4, r3",
            "addge r1, r1, r4, lsl 20",
            "orrge r1, r1, r5",
            "popge {r4, r5, pc}",
            "mvn r4, r4",
            "subs r4, r4, 0x1f",
            "bge 0x7d5ac",
            "adds r4, r4, 0xc",
            "bgt 0x7d594",
            "add r4, r4, 0x14",
            "rsb r2, r4, 0x20",
            "lsr r0, r0, r4",
            "orr r0, r0, r1, lsl r2",
            "orr r1, r5, r1, lsr r4",
            "pop {r4, r5, pc}",
            "rsb r4, r4, 0xc",
            "rsb r2, r4, 0x20",
            "lsr r0, r0, r2",
            "orr r0, r0, r1, lsl r4",
            "mov r1, r5",
            "pop {r4, r5, pc}",
            "lsr r0, r1, r4",
            "mov r1, r5",
            "pop {r4, r5, pc}",
            "orr r1, r5, 0x7f000000",
            "orr r1, r1, 0xf00000",
            "mov r0, 0",
            "pop {r4, r5, pc}",
            "orrs r2, r0, r1",
            "bxeq lr",
            "push {r4, r5, lr}",
            "mov r5, 0",
            "b 0x7d728",
            "mov r4, 0x400",
            "add r4, r4, 0x32",
            "lsrs ip, r1, 0x16",
            "beq 0x7d4ac",
            "mov r2, 3",
            "lsrs ip, ip, 3",
            "addne r2, r2, 3",
            "lsrs ip, ip, 3",
            "addne r2, r2, 3",
            "add r2, r2, ip, lsr 3",
            "rsb r3, r2, 0x20",
            "lsl ip, r0, r3",
            "lsr r0, r0, r2",
            "orr r0, r0, r1, lsl r3",
            "lsr r1, r1, r2",
            "add r4, r4, r2",
            "b 0x7d4ac"
        ]
    },
    "fcn.0002fb84": {
        "function_address": "0x0002fb84",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "sub sp, sp, 0x74",
            "add r4, sp, 0x10",
            "mov r7, r0",
            "mov r6, r2",
            "mov r5, r3",
            "mov r0, r4",
            "mov r3, 0",
            "str r3, [sp]",
            "str r3, [sp, 4]",
            "str r3, [sp, 8]",
            "str r3, [sp, 0xc]",
            "bl fcn.00019224",
            "mov r0, r7",
            "mov r1, r4",
            "cmp r6, 8",
            "movlo r2, r6",
            "movhs r2, 8",
            "mov r3, r5",
            "bl fcn.0002f280",
            "add sp, sp, 0x74",
            "pop {r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.00052a74": {
        "function_address": "0x00052a74",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r0",
            "sub sp, sp, 0x14",
            "mul r0, r1, r2",
            "mov r1, 0x30",
            "ldr r5, [0x00052b54]",
            "bl fcn.0007d264",
            "ldr r3, [0x00052b58]",
            "add r5, pc, r5",
            "add r3, r5, r3",
            "add r1, r3, 0x4c",
            "str r1, [sp, 0xc]",
            "ldrb r2, [r3]",
            "mul r2, r2, r0",
            "str r2, [sp, 4]",
            "ldrb r2, [r3, 1]",
            "mul r2, r2, r0",
            "str r2, [sp, 8]",
            "mov r2, 0",
            "b 0x52b24",
            "ldrb sb, [r4, r1, asr 1]",
            "and r6, r1, 1",
            "lsl r5, r6, 2",
            "and sl, ip, 1",
            "ldrb r8, [r4, ip, asr 1]",
            "cmp sl, 0",
            "lsl r7, sl, 2",
            "moveq sl, 0xf0",
            "asr sb, sb, r5",
            "movne sl, 0xf",
            "and sl, sl, r8",
            "and sb, sb, 0xf",
            "cmp r6, 0",
            "orr sl, sl, sb, lsl r7",
            "asr fp, r8, r7",
            "strb sl, [r4, ip, asr 1]",
            "moveq r6, 0xf0",
            "ldrb ip, [r4, r1, asr 1]",
            "movne r6, 0xf",
            "and fp, fp, 0xf",
            "add r2, r2, 1",
            "and r6, r6, ip",
            "orr r5, r6, fp, lsl r5",
            "strb r5, [r4, r1, asr 1]",
            "ldr r5, [sp, 8]",
            "cmp r2, r0",
            "add ip, r2, r5",
            "ldr r5, [sp, 4]",
            "add r1, r2, r5",
            "blt 0x52ac4",
            "ldr r1, [sp, 0xc]",
            "add r3, r3, 2",
            "cmp r3, r1",
            "bne 0x52aa4",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00031374": {
        "function_address": "0x00031374",
        "instructions": [
            "ldr r1, [0x000321fc]",
            "mov r2, 0x10",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0xdc",
            "mov r5, r0",
            "add r0, sp, 0xb0",
            "add r1, pc, r1",
            "str r1, [sp, 0x48]",
            "mov r1, 0",
            "bl sym.imp.memset",
            "ldr r3, [r5]",
            "ldr r0, [r3, 0x10]",
            "bl fcn.0002eb4c",
            "mov r3, 0",
            "strd r0, r1, [sp, 0x88]",
            "str r3, [r5, 0x168]",
            "ldr r3, [r5, 0x10c]",
            "cmp r3, 0",
            "beq 0x313d4",
            "mvn r2, 3",
            "mvn r3, 0",
            "adds r0, r0, r2",
            "adc r1, r1, r3",
            "strd r0, r1, [sp, 0x88]",
            "ldr r2, [sp, 0x48]",
            "mov r0, r5",
            "ldr r1, [0x00032200]",
            "mov r6, 0",
            "add r1, r2, r1",
            "add r2, sp, 0xb0",
            "add r1, r1, 0x150",
            "bl fcn.0002f3c0",
            "ldr r3, [sp, 0xbc]",
            "mov r7, r0",
            "ldr ip, [sp, 0x48]",
            "ldr lr, [0x00032204]",
            "str r3, [sp, 0x5c]",
            "ldr r3, [0x00032208]",
            "str r6, [sp, 0x84]",
            "str lr, [sp, 0xac]",
            "add r3, ip, r3",
            "str r3, [sp, 0xa4]",
            "ldr r3, [0x0003220c]",
            "add r3, ip, r3",
            "str r3, [sp, 0xa8]",
            "b 0x321bc",
            "ldr r0, [sp, 0x5c]",
            "ldr fp, [r0, 0x18]",
            "cmp fp, 0",
            "ble 0x321a4",
            "ldr r6, [r0, 0x1c]",
            "cmp r6, 0",
            "beq 0x321a4",
            "ldr r2, [r0, 0x10]",
            "ldr r3, [r0, 0x14]",
            "orrs r3, r2, r3",
            "mvneq r2, 0",
            "streq r2, [sp, 0x6c]",
            "beq 0x31478",
            "ldr r2, [r0, 8]",
            "ldr r3, [r0, 0xc]",
            "orrs r3, r2, r3",
            "movne r1, 0",
            "moveq r1, 1",
            "str r1, [sp, 0x6c]",
            "ldr r1, [sp, 0x5c]",
            "ldrd r2, r3, [sp, 0xb0]",
            "ldrd r0, r1, [r1, 0x20]",
            "strd r2, r3, [sp, 0x40]",
            "mov r2, fp",
            "add r3, sp, 0xc8",
            "strd r0, r1, [sp, 0x90]",
            "ldr r1, [sp, 0x5c]",
            "ldrd r0, r1, [r1]",
            "strd r0, r1, [sp, 0x50]",
            "mov r0, r5",
            "mov r1, r6",
            "bl fcn.0002fb84",
            "subs r7, r0, 0",
            "bge 0x314d0",
            "ldr r3, [sp, 0x48]",
            "mov r1, 0x10",
            "ldr r2, [0x00032210]",
            "ldr r0, [r5]",
            "add r2, r3, r2",
            "bl sym.imp.av_log",
            "b 0x321a0",
            "mov r0, r5",
            "ldr r1, [sp, 0xc8]",
            "bl fcn.0002eb6c",
            "subs r4, r0, 0",
            "rsb fp, r7, fp",
            "beq 0x314f4",
            "ldr sb, [r4, 0xf0]",
            "cmp sb, 0",
            "bne 0x31514",
            "ldrd r2, r3, [sp, 0xc8]",
            "mov r1, 0x20",
            "ldr r0, [r5]",
            "str fp, [sp, 8]",
            "strd r2, r3, [sp]",
            "ldr r2, [sp, 0xa4]",
            "bl sym.imp.av_log",
            "b 0x321a0",
            "cmp fp, 3",
            "ble 0x321a0",
            "ldr r3, [sb, 0x48]",
            "cmp r3, 0x2f",
            "bgt 0x321a0",
            "ldr ip, [sp, 0x50]",
            "ldr lr, [sp, 0x54]",
            "orrs ip, ip, lr",
            "bne 0x31550",
            "mov r3, 0x110",
            "ldrd r0, r1, [r4, 0x40]",
            "ldrd r2, r3, [r3, r5]",
            "bl fcn.0007df14",
            "mov r3, r1",
            "strd r0, r1, [sp, 0x50]",
            "add r6, r6, r7",
            "ldr r2, [sp, 0x6c]",
            "ldrb r1, [r6, 2]",
            "mov sl, r6",
            "ldr r6, [sp, 0x40]",
            "cmn r2, 1",
            "ldrh r0, [sl], 2",
            "lsreq r3, r1, 7",
            "rev16 r0, r0",
            "streq r3, [sp, 0x6c]",
            "cmn r6, 1",
            "bne 0x3158c",
            "ldr r7, [sp, 0x44]",
            "cmn r7, 1",
            "beq 0x3169c",
            "uxth r0, r0",
            "sxth ip, r0",
            "cmp ip, 0",
            "bge 0x315c4",
            "ldr lr, [sp, 0x44]",
            "rsb ip, ip, 0",
            "mov r2, ip",
            "asr r3, r2, 0x1f",
            "cmp r3, lr",
            "bhi 0x316ac",
            "bne 0x315c4",
            "ldr r2, [sp, 0x40]",
            "cmp ip, r2",
            "bhi 0x316ac",
            "ldrd r6, r7, [sp, 0x40]",
            "sxth r0, r0",
            "ldr r3, [r4, 0x10]",
            "adds r6, r6, r0",
            "adc r7, r7, r0, asr 31",
            "cmp r3, 0x11",
            "strd r6, r7, [sp, 0x40]",
            "bne 0x3160c",
            "ldr r3, [r4, 0x14]",
            "cmp r3, 0",
            "bne 0x3160c",
            "ldr r3, [r4, 0xfc]",
            "cmp r3, r7",
            "bhi 0x31650",
            "bne 0x3160c",
            "ldr r3, [r4, 0xf8]",
            "cmp r3, r6",
            "bhi 0x31650",
            "ldr r7, [sp, 0x6c]",
            "cmp r7, 0",
            "beq 0x31658",
            "ldrd r2, r3, [sp, 0x40]",
            "mov r6, 1",
            "mov r0, sb",
            "str r1, [sp, 0x34]",
            "str r6, [sp, 0x10]",
            "strd r2, r3, [sp]",
            "mov r3, 0",
            "str r3, [sp, 8]",
            "str r3, [sp, 0xc]",
            "ldrd r2, r3, [sp, 0x88]",
            "bl sym.av_add_index_entry",
            "str r6, [sp, 0x6c]",
            "ldr r1, [sp, 0x34]",
            "b 0x31658",
            "mov r3, 0",
            "str r3, [sp, 0x6c]",
            "ldrd r2, r3, [sp, 0x40]",
            "ldrd r6, r7, [sp, 0x50]",
            "ldr ip, [r4, 0xfc]",
            "ldr lr, [r4, 0xf8]",
            "adds r2, r2, r6",
            "adc r3, r3, r7",
            "mov r0, r2",
            "cmp ip, r3",
            "bhi 0x31688",
            "bne 0x31690",
            "cmp lr, r2",
            "bls 0x31690",
            "mov r0, lr",
            "mov r3, ip",
            "str r0, [r4, 0xf8]",
            "str r3, [r4, 0xfc]",
            "b 0x316b8",
            "mov r2, 0",
            "mov r3, 0x80000000",
            "strd r2, r3, [sp, 0x40]",
            "b 0x316b8",
            "mov r6, 0",
            "mov r7, 0x80000000",
            "strd r6, r7, [sp, 0x40]",
            "ldr r3, [r5, 0x170]",
            "cmp r3, 0",
            "beq 0x31718",
            "ldr r3, [r4, 0x10]",
            "cmp r3, 0x11",
            "bne 0x316dc",
            "ldr r3, [r4, 0x14]",
            "cmp r3, 0",
            "beq 0x31718",
            "ldr r7, [sp, 0x6c]",
            "cmp r7, 0",
            "ldreq r7, [sp, 0x6c]",
            "beq 0x321a4",
            "ldr r3, [r5, 0x17c]",
            "ldr ip, [sp, 0x44]",
            "cmp r3, ip",
            "bhi 0x321a0",
            "bne 0x31710",
            "ldr r3, [r5, 0x178]",
            "ldr lr, [sp, 0x40]",
            "cmp r3, lr",
            "bhi 0x321a0",
            "mov r3, 0",
            "str r3, [r5, 0x170]",
            "ubfx r6, r1, 1, 2",
            "add r8, sl, 1",
            "sub r3, r6, 1",
            "sub r7, fp, 3",
            "cmp r3, 2",
            "bls 0x3174c",
            "mov r0, 4",
            "bl sym.imp.av_mallocz",
            "str r0, [sp, 0x58]",
            "str r7, [r0]",
            "mov r0, 1",
            "str r0, [sp, 0x80]",
            "b 0x3195c",
            "ldrb sl, [sl, 1]",
            "add r8, r8, 1",
            "sub r7, fp, 4",
            "add r1, sl, 1",
            "str sl, [sp, 0x38]",
            "lsl r0, r1, 2",
            "str r1, [sp, 0x80]",
            "bl sym.imp.av_mallocz",
            "cmp r6, 2",
            "str r0, [sp, 0x58]",
            "str r0, [sp, 0x70]",
            "beq 0x31820",
            "cmp r6, 3",
            "beq 0x3184c",
            "mov r2, 0",
            "sub r1, r0, 4",
            "mov r3, r2",
            "b 0x317e4",
            "cmp r7, 0",
            "mov r8, r0",
            "beq 0x317cc",
            "ldrb ip, [r0]",
            "add r0, r0, 1",
            "ldr lr, [r1, 4]",
            "mov r8, r0",
            "sub r7, r7, 1",
            "cmp ip, 0xff",
            "add lr, lr, ip",
            "str lr, [r1, 4]",
            "beq 0x31794",
            "mov r0, 0",
            "b 0x317d0",
            "mvn r0, 0",
            "ldr ip, [r1, 4]!",
            "cmp r0, 0",
            "add r3, r3, 1",
            "add r2, r2, ip",
            "bne 0x317f8",
            "ldr r6, [sp, 0x38]",
            "cmp r3, r6",
            "bge 0x31800",
            "mov r0, r8",
            "b 0x31794",
            "mvn r1, 0",
            "b 0x31804",
            "mov r1, 0",
            "ldr ip, [sp, 0x70]",
            "cmp r1, 0",
            "rsb r2, r2, r7",
            "mvnne r7, 0",
            "str r2, [ip, r3, lsl 2]",
            "bne 0x32194",
            "b 0x3195c",
            "mov r0, r7",
            "ldr r1, [sp, 0x80]",
            "bl fcn.0007d264",
            "ldr r2, [sp, 0x58]",
            "mov r3, 0",
            "ldr lr, [sp, 0x80]",
            "add r3, r3, 1",
            "str r0, [r2], 4",
            "cmp r3, lr",
            "blt 0x31834",
            "b 0x3195c",
            "mov r0, r5",
            "mov r1, r8",
            "mov r2, r7",
            "add r3, sp, 0xc8",
            "bl fcn.0002fb84",
            "cmp r0, 0",
            "bge 0x31884",
            "ldr r3, [sp, 0x48]",
            "mov r1, 0x20",
            "ldr r2, [0x00032210]",
            "ldr r0, [r5]",
            "add r2, r3, r2",
            "bl sym.imp.av_log",
            "b 0x3195c",
            "ldr sl, [sp, 0xc8]",
            "add ip, sp, 0xc0",
            "ldr r6, [sp, 0x58]",
            "add r8, r8, r0",
            "rsb r7, r0, r7",
            "mov fp, 1",
            "str sl, [r6]",
            "str ip, [sp, 0x4c]",
            "b 0x3193c",
            "mov r0, r5",
            "mov r1, r8",
            "mov r2, r7",
            "ldr r3, [sp, 0x4c]",
            "bl fcn.0002fb84",
            "subs ip, r0, 0",
            "blt 0x31920",
            "ldrd r0, r1, [sp, 0xc0]",
            "mov r2, 1",
            "mov r3, 0",
            "add r8, r8, ip",
            "rsb r7, ip, r7",
            "add fp, fp, 1",
            "adds r0, r0, r2",
            "adc r1, r1, r3",
            "mov r3, 7",
            "mul r2, r3, ip",
            "strd r0, r1, [sp, 0x60]",
            "mov r0, 1",
            "mov r1, 0",
            "sub r2, r2, 1",
            "bl fcn.0007d398",
            "ldrd r2, r3, [sp, 0x60]",
            "subs r2, r2, r0",
            "sbc r3, r3, r1",
            "ldr r1, [r6]",
            "add r2, r1, r2",
            "str r2, [r6, 4]!",
            "add sl, sl, r2",
            "b 0x3193c",
            "ldr r6, [sp, 0x48]",
            "mov r1, 0x20",
            "ldr r2, [0x00032210]",
            "ldr r0, [r5]",
            "add r2, r6, r2",
            "bl sym.imp.av_log",
            "b 0x31948",
            "ldr ip, [sp, 0x38]",
            "cmp fp, ip",
            "blt 0x318a8",
            "ldr lr, [sp, 0x80]",
            "rsb sl, sl, r7",
            "ldr r0, [sp, 0x70]",
            "sub r3, lr, 1",
            "str sl, [r0, r3, lsl 2]",
            "ldr r2, [sp, 0x50]",
            "mov r1, 0",
            "ldr r3, [sp, 0x54]",
            "mov sl, r8",
            "str r1, [sp, 0x60]",
            "str r7, [sp, 0x70]",
            "orr r2, r2, r3",
            "str r2, [sp, 0xa0]",
            "b 0x32180",
            "ldr r3, [sb, 8]",
            "ldr r6, [0x00032214]",
            "ldr r7, [0x00032218]",
            "ldr r2, [r3, 0xd4]",
            "ldr ip, [0x00032214]",
            "cmp r2, r6",
            "movne r6, 0",
            "moveq r6, 1",
            "cmp r2, ip",
            "cmpne r2, r7",
            "str r6, [sp, 0x38]",
            "beq 0x319c8",
            "ldr r1, [0x0003221c]",
            "cmp r2, r1",
            "beq 0x319c8",
            "sub r1, r1, 0xb",
            "cmp r2, r1",
            "bne 0x31ccc",
            "ldr fp, [r3, 0x100]",
            "cmp fp, 0",
            "beq 0x31ccc",
            "ldr r8, [r4, 0xc4]",
            "cmp r8, 0",
            "beq 0x31ccc",
            "ldr r1, [r4, 0xcc]",
            "ldr ip, [r4, 0xb8]",
            "ldr r7, [r4, 0xbc]",
            "cmp r1, 0",
            "ldr r3, [r4, 0xc8]",
            "ldr r6, [r4, 0xc0]",
            "bne 0x31c2c",
            "cmp r3, 0",
            "ldrdeq r0, r1, [sp, 0x40]",
            "strdeq r0, r1, [r4, 0xd0]",
            "ldr r1, [sp, 0x38]",
            "cmp r1, 0",
            "beq 0x31abc",
            "mul r2, ip, r7",
            "ldr lr, [sp, 0x70]",
            "add r2, r2, r2, lsr 31",
            "cmp lr, r2, asr 1",
            "blt 0x31a64",
            "add r2, r7, r7, lsr 31",
            "lsl r0, r6, 1",
            "mul r8, ip, r3",
            "str sb, [sp, 0x74]",
            "asr r2, r2, 1",
            "mov r3, sl",
            "str sl, [sp, 0x78]",
            "mov r1, 0",
            "mov sb, r7",
            "str r2, [sp, 0x7c]",
            "mov sl, ip",
            "str r0, [sp, 0x4c]",
            "mov r7, r3",
            "str r1, [sp, 0x38]",
            "b 0x31a9c",
            "ldr r0, [r5]",
            "mov r1, 0x10",
            "ldr r2, [0x00032220]",
            "b 0x31b78",
            "ldr ip, [sp, 0x4c]",
            "rsb r1, sl, r7",
            "ldr r0, [r4, 0xd8]",
            "rsb r2, ip, r8",
            "add r0, r0, r2",
            "mov r2, sl",
            "bl sym.imp.memcpy",
            "ldr lr, [sp, 0x38]",
            "add lr, lr, 1",
            "str lr, [sp, 0x38]",
            "ldr r1, [sp, 0x38]",
            "add r7, r7, sl",
            "ldr r2, [sp, 0x7c]",
            "ldr r0, [sp, 0x4c]",
            "cmp r1, r2",
            "add r8, r8, r0",
            "blt 0x31a74",
            "b 0x31bd0",
            "ldr r1, [0x0003221c]",
            "cmp r2, r1",
            "bne 0x31b04",
            "ldr ip, [sp, 0x70]",
            "cmp ip, r6",
            "bge 0x31aec",
            "ldr r2, [0x00032224]",
            "mov r1, 0x10",
            "ldr lr, [sp, 0x48]",
            "ldr r0, [r5]",
            "add r2, lr, r2",
            "b 0x31b80",
            "ldr r0, [r4, 0xd8]",
            "mov r1, sl",
            "mov r2, r6",
            "mla r0, r3, r6, r0",
            "bl sym.imp.memcpy",
            "b 0x31bdc",
            "mov r1, r8",
            "mul r0, r8, r6",
            "str r3, [sp, 0x30]",
            "bl fcn.0007d264",
            "ldr r1, [sp, 0x70]",
            "cmp r1, r0",
            "blt 0x31b6c",
            "mov r1, r8",
            "mov r0, r6",
            "bl fcn.0007d264",
            "mul r2, r8, r7",
            "ldr r3, [sp, 0x30]",
            "str sb, [sp, 0x74]",
            "mov sb, r7",
            "str r0, [sp, 0x7c]",
            "and r1, r3, 1",
            "str sl, [sp, 0x78]",
            "str r2, [sp, 0x4c]",
            "add r2, r7, 1",
            "add r2, r2, r2, lsr 31",
            "asr r3, r3, 1",
            "asr r2, r2, 1",
            "mla r3, r1, r2, r3",
            "mul r3, r8, r3",
            "mov r7, r3",
            "b 0x31bb4",
            "ldr r0, [r5]",
            "mov r1, 0x10",
            "ldr r2, [0x00032228]",
            "ldr r3, [sp, 0x48]",
            "add r2, r3, r2",
            "bl sym.imp.av_log",
            "ldr r7, [0x0003222c]",
            "b 0x321a4",
            "ldr ip, [sp, 0x4c]",
            "rsb r1, r8, sl",
            "ldr r0, [r4, 0xd8]",
            "rsb r2, ip, r7",
            "add r0, r0, r2",
            "mov r2, r8",
            "bl sym.imp.memcpy",
            "ldr lr, [sp, 0x38]",
            "add lr, lr, 1",
            "str lr, [sp, 0x38]",
            "ldr r1, [sp, 0x38]",
            "add sl, sl, r8",
            "ldr r2, [sp, 0x7c]",
            "ldr r0, [sp, 0x4c]",
            "cmp r1, r2",
            "add r7, r7, r0",
            "blt 0x31b8c",
            "mov r7, sb",
            "ldr sl, [sp, 0x78]",
            "ldr sb, [sp, 0x74]",
            "ldr r3, [r4, 0xc8]",
            "add r3, r3, 1",
            "cmp r3, r7",
            "str r3, [r4, 0xc8]",
            "blt 0x31c2c",
            "ldr r3, [sb, 8]",
            "ldr r2, [r3, 0xd4]",
            "ldr r3, [0x0003221c]",
            "cmp r2, r3",
            "bne 0x31c14",
            "ldr r0, [r4, 0xd8]",
            "mov r1, r7",
            "mov r2, r6",
            "bl fcn.00052a74",
            "mov r3, 0",
            "mul r0, r7, r6",
            "str r3, [r4, 0xc8]",
            "mov r1, fp",
            "bl fcn.0007d264",
            "str r0, [r4, 0xcc]",
            "mul r8, r7, r6",
            "add r3, r5, 0x160",
            "add r6, r5, 0x164",
            "str r3, [sp, 0x4c]",
            "str r6, [sp, 0x7c]",
            "b 0x31cbc",
            "mov r0, 0x48",
            "bl sym.imp.av_mallocz",
            "mov r1, fp",
            "mov r6, r0",
            "bl sym.imp.av_new_packet",
            "mov r1, fp",
            "mov r0, r8",
            "bl fcn.0007d264",
            "ldr r7, [r4, 0xcc]",
            "mov r2, fp",
            "ldr r3, [r4, 0xd8]",
            "rsb r1, r7, r0",
            "sub r7, r7, 1",
            "str r7, [r4, 0xcc]",
            "mla r1, fp, r1, r3",
            "ldr r0, [r6, 0x10]",
            "bl sym.imp.memcpy",
            "ldrd r2, r3, [r4, 0xd0]",
            "mov r0, 0",
            "mov r1, 0x80000000",
            "strd r2, r3, [r6]",
            "ldrd r2, r3, [sp, 0x90]",
            "strd r0, r1, [r4, 0xd0]",
            "ldr r0, [sp, 0x4c]",
            "strd r2, r3, [r6, 0x38]",
            "mov r2, r6",
            "ldr r3, [sb]",
            "ldr r1, [sp, 0x7c]",
            "str r3, [r6, 0x18]",
            "bl sym.imp.av_dynarray_add",
            "ldr r3, [r4, 0xcc]",
            "cmp r3, 0",
            "bne 0x31c44",
            "b 0x32110",
            "ldr r6, [sp, 0x60]",
            "ldr ip, [sp, 0x58]",
            "ldr lr, [sp, 0x70]",
            "ldr r7, [r4, 0xec]",
            "ldr r3, [ip, r6, lsl 2]",
            "str sl, [sp, 0xd0]",
            "cmp r3, lr",
            "str r3, [sp, 0xd4]",
            "ble 0x31d0c",
            "ldr r3, [sp, 0x48]",
            "mov r1, 0x10",
            "ldr r6, [sp, 0xac]",
            "ldr r0, [r5]",
            "add r2, r3, r6",
            "bl sym.imp.av_log",
            "b 0x32190",
            "cmp r7, 0",
            "beq 0x31d3c",
            "ldr r8, [r7]",
            "ands r8, r8, 1",
            "beq 0x31d40",
            "add r0, sp, 0xd0",
            "add r1, sp, 0xd4",
            "mov r2, r7",
            "bl fcn.0002fbdc",
            "subs r8, r0, 0",
            "bge 0x31d40",
            "b 0x32174",
            "mov r8, r7",
            "mov r0, 0x48",
            "bl sym.imp.av_mallocz",
            "ldr r1, [sp, 0xd4]",
            "mov r6, r0",
            "add r1, r8, r1",
            "bl sym.imp.av_new_packet",
            "cmp r0, 0",
            "bge 0x31d70",
            "mov r0, r6",
            "mvn r7, 0xb",
            "bl sym.imp.av_free",
            "b 0x32194",
            "cmp r8, 0",
            "beq 0x31d88",
            "ldr r0, [r6, 0x10]",
            "mov r2, r8",
            "ldr r1, [r7, 0x1c]",
            "bl sym.imp.memcpy",
            "ldr r0, [r6, 0x10]",
            "ldr r1, [sp, 0xd0]",
            "ldr r2, [sp, 0xd4]",
            "add r0, r0, r8",
            "bl sym.imp.memcpy",
            "ldr r0, [sp, 0xd0]",
            "cmp r0, sl",
            "beq 0x31dac",
            "bl sym.imp.av_free",
            "ldr r7, [sp, 0x60]",
            "ldr r3, [sb]",
            "cmp r7, 0",
            "ldreq ip, [sp, 0x6c]",
            "str r3, [r6, 0x18]",
            "ldr r3, [r4, 0x100]",
            "streq ip, [r6, 0x1c]",
            "cmp r3, 0",
            "ldrdne r0, r1, [sp, 0x40]",
            "strdne r0, r1, [r6, 8]",
            "ldrdeq r2, r3, [sp, 0x40]",
            "strdeq r2, r3, [r6]",
            "ldrd r0, r1, [sp, 0x90]",
            "ldr r3, [sb, 8]",
            "strd r0, r1, [r6, 0x38]",
            "ldr r3, [r3, 0xd4]",
            "ldr r1, [0x00032230]",
            "cmp r3, r1",
            "ldrdeq r2, r3, [sp, 0x50]",
            "strdeq r2, r3, [r6, 0x40]",
            "beq 0x32028",
            "ldr r2, [r4, 0x10]",
            "cmp r2, 0x11",
            "bne 0x31e18",
            "ldr r2, [r4, 0x14]",
            "cmp r2, 0",
            "beq 0x31e20",
            "ldr r7, [sp, 0x50]",
            "str r7, [r6, 0x28]",
            "ldr r2, [0x00032234]",
            "cmp r3, r2",
            "bne 0x32028",
            "ldr r7, [r6, 0x10]",
            "ldr r2, [r6, 0x14]",
            "add r2, r7, r2",
            "sub r3, r2, 1",
            "b 0x31e44",
            "add r7, r7, 1",
            "ldrb r1, [r7]",
            "cmp r1, 0x2c",
            "addeq r7, r7, 1",
            "beq 0x31e5c",
            "cmp r7, r3",
            "blo 0x31e40",
            "mov ip, r7",
            "sub r3, r2, 1",
            "b 0x31e6c",
            "add ip, ip, 1",
            "ldrb r1, [ip]",
            "cmp r1, 0x2c",
            "bne 0x31ec8",
            "ldr lr, [r5, 0x114]",
            "mov r1, 0",
            "ldr r3, [r6, 4]",
            "add r2, r2, 0x42",
            "ldr fp, [r6]",
            "ldr r8, [r5, 0x110]",
            "str lr, [sp, 0x74]",
            "strb r1, [ip], 1",
            "rsb r2, ip, r2",
            "mov r0, r2",
            "str r3, [sp, 0x30]",
            "str ip, [sp, 0x2c]",
            "str r2, [sp, 0x7c]",
            "bl sym.imp.av_malloc",
            "cmp r0, 0",
            "ldr r3, [sp, 0x30]",
            "str r0, [sp, 0x4c]",
            "ldr ip, [sp, 0x2c]",
            "bne 0x31ed4",
            "b 0x32028",
            "cmp ip, r3",
            "blo 0x31e68",
            "b 0x32028",
            "ldr r1, [sp, 0x74]",
            "str r3, [sp, 0x3c]",
            "ldr r2, [sp, 0x3c]",
            "str ip, [sp, 0x2c]",
            "mul r3, fp, r1",
            "umull r0, r1, fp, r8",
            "str fp, [sp, 0x38]",
            "ldr fp, [0x00032238]",
            "mla r3, r8, r2, r3",
            "ldr r2, [0x0003223c]",
            "add r1, r3, r1",
            "mov r3, 0",
            "bl fcn.0007df14",
            "ldr lr, [sp, 0x74]",
            "ldrd r2, r3, [sp, 0x38]",
            "str r0, [sp, 0x78]",
            "ldrd r0, r1, [sp, 0x50]",
            "adds r0, r0, r2",
            "ldr r2, [0x0003223c]",
            "adc r1, r1, r3",
            "mul r3, r0, lr",
            "mla r3, r8, r1, r3",
            "umull r0, r1, r0, r8",
            "add r1, r3, r1",
            "mov r3, 0",
            "bl fcn.0007df14",
            "ldr r1, fcn.00057e40",
            "str r0, [sp, 0x9c]",
            "ldr r0, [sp, 0x78]",
            "bl fcn.0007d264",
            "ldr r1, [sp, 0x78]",
            "str r0, [sp]",
            "mla r8, fp, r0, r1",
            "movw r1, 0x1770",
            "mov r0, r8",
            "bl fcn.0007d264",
            "ldr r3, [0x00032244]",
            "mov r1, 0x64",
            "str r0, [sp, 4]",
            "str r3, [sp, 0x30]",
            "mla r8, r3, r0, r8",
            "mov r0, r8",
            "str r8, [sp, 0x38]",
            "bl fcn.0007d264",
            "ldr r1, fcn.00057e40",
            "mov r2, r0",
            "ldr r0, [sp, 0x9c]",
            "str r2, [sp, 0x34]",
            "bl fcn.0007d264",
            "ldr lr, [sp, 0x9c]",
            "movw r1, 0x1770",
            "str r0, [sp, 0x10]",
            "mla fp, fp, r0, lr",
            "mov r0, fp",
            "bl fcn.0007d264",
            "ldr r3, [sp, 0x30]",
            "mov r8, r0",
            "mov r1, 0x64",
            "mla fp, r3, r0, fp",
            "mov r0, fp",
            "bl fcn.0007d264",
            "ldr r2, [sp, 0x34]",
            "mvn r3, 0x63",
            "ldr r1, [sp, 0x38]",
            "mla fp, r3, r0, fp",
            "ldr ip, [sp, 0x2c]",
            "str r2, [sp, 8]",
            "str r0, [sp, 0x18]",
            "mla r2, r3, r2, r1",
            "ldr r0, [sp, 0x4c]",
            "ldr r1, [sp, 0x7c]",
            "mov r3, r7",
            "str ip, [sp, 0x20]",
            "str r8, [sp, 0x14]",
            "str r2, [sp, 0xc]",
            "ldr r2, [sp, 0xa8]",
            "str fp, [sp, 0x1c]",
            "bl sym.imp.snprintf",
            "ldr r0, [r6, 0x10]",
            "bl sym.imp.av_free",
            "ldr r2, [sp, 0x4c]",
            "str r2, [r6, 0x10]",
            "mov r0, r2",
            "bl sym.imp.strlen",
            "str r0, [r6, 0x14]",
            "ldrd r2, r3, [sp, 0x40]",
            "mov r1, 0x80000000",
            "mov r0, 0",
            "ldr r7, [r5, 0x168]",
            "eor r3, r3, r1",
            "eor r2, r2, r0",
            "orrs r1, r2, r3",
            "moveq r3, 0",
            "movne r3, 1",
            "cmp r7, 0",
            "moveq r3, 0",
            "andne r3, r3, 1",
            "cmp r3, 0",
            "beq 0x320fc",
            "ldr r3, [r7]",
            "ldr r2, [sp, 0x40]",
            "cmp r3, r2",
            "bne 0x320fc",
            "ldr r3, [r7, 4]",
            "ldr ip, [sp, 0x44]",
            "cmp r3, ip",
            "bne 0x320fc",
            "ldr r2, [r7, 0x18]",
            "ldr r3, [sb]",
            "cmp r2, r3",
            "bne 0x320fc",
            "ldr r3, [sb, 8]",
            "ldr r2, [r3, 0xd4]",
            "ldr r3, [0x00032234]",
            "cmp r2, r3",
            "bne 0x320fc",
            "ldr r1, [r6, 0x14]",
            "ldr r3, [r7, 0x14]",
            "ldr r0, [r7, 0x10]",
            "add r1, r1, r3",
            "bl sym.imp.av_realloc",
            "cmp r0, 0",
            "beq 0x32128",
            "ldr r3, [r7, 0x14]",
            "str r0, [r7, 0x10]",
            "ldr r2, [r6, 0x14]",
            "ldr r1, [r6, 0x10]",
            "add r0, r0, r3",
            "bl sym.imp.memcpy",
            "ldr r2, [r7, 0x14]",
            "mov r0, r6",
            "ldr r3, [r6, 0x14]",
            "add r3, r2, r3",
            "str r3, [r7, 0x14]",
            "bl sym.imp.av_destruct_packet",
            "mov r0, r6",
            "bl sym.imp.av_free",
            "b 0x32128",
            "add r0, r5, 0x160",
            "add r1, r5, 0x164",
            "mov r2, r6",
            "bl sym.imp.av_dynarray_add",
            "str r6, [r5, 0x168]",
            "ldr lr, [sp, 0x40]",
            "cmp lr, 0",
            "bne 0x32128",
            "ldr r0, [sp, 0x44]",
            "cmp r0, 0x80000000",
            "beq 0x32158",
            "ldr r1, [sp, 0xa0]",
            "cmp r1, 0",
            "beq 0x3214c",
            "ldrd r2, r3, [sp, 0x40]",
            "ldrd r6, r7, [sp, 0x50]",
            "adds r2, r2, r6",
            "adc r3, r3, r7",
            "strd r2, r3, [sp, 0x40]",
            "b 0x32158",
            "mov r0, 0",
            "mov r1, 0x80000000",
            "strd r0, r1, [sp, 0x40]",
            "ldr r1, [sp, 0x60]",
            "ldr r2, [sp, 0x58]",
            "ldr r6, [sp, 0x70]",
            "ldr r3, [r2, r1, lsl 2]",
            "add sl, sl, r3",
            "rsb r6, r3, r6",
            "str r6, [sp, 0x70]",
            "ldr r7, [sp, 0x60]",
            "add r7, r7, 1",
            "str r7, [sp, 0x60]",
            "ldr ip, [sp, 0x60]",
            "ldr lr, [sp, 0x80]",
            "cmp ip, lr",
            "blt 0x31980",
            "mov r7, 0",
            "ldr r0, [sp, 0x58]",
            "bl sym.imp.av_free",
            "b 0x321a4",
            "mov r7, 0",
            "ldr r0, [sp, 0x84]",
            "ldr r1, [sp, 0x5c]",
            "add r0, r0, 1",
            "add r1, r1, 0x28",
            "str r0, [sp, 0x84]",
            "str r1, [sp, 0x5c]",
            "ldr r3, [sp, 0xb8]",
            "ldr r2, [sp, 0x84]",
            "cmp r2, r3",
            "blt 0x3142c",
            "ldr r3, [sp, 0x48]",
            "add r1, sp, 0xb0",
            "ldr r0, [0x00032200]",
            "add r0, r3, r0",
            "add r0, r0, 0x1e0",
            "bl fcn.0002ebe8",
            "cmp r7, 0",
            "mov r0, r7",
            "movlt r3, 1",
            "strlt r3, [r5, 0x16c]",
            "add sp, sp, 0xdc",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.imp.av_destruct_packet": {
        "function_address": "0x000098f4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0xb90]!"
        ]
    },
    "fcn.0003399c": {
        "function_address": "0x0003399c",
        "instructions": [
            "push {r0, r1, r2, r3, r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r7, r0",
            "ldr r5, [0x00033aac]",
            "mov sb, r1",
            "mov r2, 4",
            "add r1, sp, 0xc",
            "ldr r0, [r0]",
            "bl fcn.00018f4c",
            "cmp r0, 4",
            "add r5, pc, r5",
            "movne r0, 0",
            "movne r1, 0x10",
            "ldrne r2, [0x00033ab0]",
            "bne 0x33a68",
            "movw r3, 0x4424",
            "ldrh r4, [sp, 0xc]",
            "cmp r4, r3",
            "ldrh sl, [sp, 0xe]",
            "beq 0x33a3c",
            "bhi 0x339fc",
            "sub r3, r3, 0x100",
            "cmp r4, r3",
            "bne 0x33a14",
            "b 0x33a34",
            "movw r3, 0x4524",
            "cmp r4, r3",
            "beq 0x33a34",
            "add r3, r3, 0x300",
            "cmp r4, r3",
            "beq 0x33a3c",
            "ldr r2, [0x00033ab4]",
            "mov r0, 0",
            "mov r1, 0x10",
            "mov r3, r4",
            "add r2, r5, r2",
            "bl sym.imp.av_log",
            "ldr r0, [0x00033ab8]",
            "b 0x33aa4",
            "mov r6, 4",
            "b 0x33a40",
            "mov r6, 8",
            "add r8, sp, 4",
            "ldr r0, [r7]",
            "mov r1, r8",
            "mov r2, r6",
            "bl fcn.00018f4c",
            "cmp r0, r6",
            "beq 0x33a78",
            "ldr r2, [0x00033abc]",
            "mov r0, 0",
            "mov r1, 0x10",
            "add r2, r5, r2",
            "bl sym.imp.av_log",
            "mvn r0, 4",
            "b 0x33aa4",
            "movw r3, 0x4524",
            "movw r2, 0x4424",
            "cmp r4, r3",
            "cmpne r4, r2",
            "rsb r6, r6, sl",
            "str r6, [sb]",
            "bne 0x33aa0",
            "ldr r3, [0x00033ac0]",
            "ldr r2, [r8]",
            "str r2, [r7, r3]",
            "mov r0, r4",
            "add sp, sp, 0x10",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "fcn.0003352c": {
        "function_address": "0x0003352c",
        "instructions": [
            "ldr r3, [0x000338a8]",
            "mov r2, 0",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r8, r0",
            "ldr r6, [0x000338ac]",
            "sub sp, sp, 0x2c",
            "ldr r7, [r0, r3]",
            "add r3, r3, 0x14",
            "str r2, [r0, r3]",
            "sub r3, r3, 0x10",
            "ldr sb, [r0, r3]",
            "add r6, pc, r6",
            "cmp sb, 0x35",
            "bls 0x33580",
            "ldr r3, [0x000338b0]",
            "mov r0, r7",
            "add r2, r2, 0x10",
            "ldr r1, [r6, r3]",
            "bl sym.imp.memcmp",
            "cmp r0, 0",
            "beq 0x33598",
            "ldr r2, [0x000338b4]",
            "mov r0, 0",
            "mov r1, 0x10",
            "mov r3, sb",
            "add r2, r6, r2",
            "b 0x33684",
            "ldr r3, [0x000338b8]",
            "add sb, r7, sb",
            "ldr r1, [0x000338bc]",
            "add r7, r7, 0x1e",
            "ldr r2, [0x000338c0]",
            "str r3, [sp, 0x20]",
            "add r3, r8, 0x10000",
            "add r3, r3, 0x22c",
            "str r1, [sp, 0x18]",
            "str r2, [sp, 0x1c]",
            "str r3, [sp, 0x24]",
            "b 0x33890",
            "ldr r5, [sp, 0x18]",
            "mov r0, r7",
            "mov r2, 0x10",
            "ldr r1, [r6, r5]",
            "bl sym.imp.memcmp",
            "cmp r0, 0",
            "moveq sl, 0x32",
            "moveq fp, 0",
            "beq 0x335fc",
            "ldr sl, [r7, 0x10]",
            "ldr fp, [r7, 0x14]",
            "orrs ip, sl, fp",
            "beq 0x3361c",
            "mov r2, r4",
            "asr r3, r2, 0x1f",
            "cmp fp, r3",
            "strd r2, r3, [sp, 0x10]",
            "bhi 0x3361c",
            "bne 0x3363c",
            "cmp sl, r4",
            "bls 0x3363c",
            "ldr r2, [0x000338c4]",
            "mov r0, 0",
            "mov r1, 0x10",
            "strd sl, fp, [sp]",
            "add r2, r6, r2",
            "bl sym.imp.av_log",
            "ldr r0, [0x000338c8]",
            "b 0x338a0",
            "ldr r3, [sp, 0x1c]",
            "mov r0, r7",
            "mov r2, 0x10",
            "ldr r1, [r6, r3]",
            "bl sym.imp.memcmp",
            "cmp r0, 0",
            "bne 0x3368c",
            "cmp r4, 0x64",
            "bls 0x3388c",
            "ldr r2, [0x000338cc]",
            "ldr r3, [r7, 0x60]",
            "str r3, [r8, r2]",
            "sub r2, r3, 1",
            "cmp r2, 0x10000",
            "blo 0x3388c",
            "ldr r2, [0x000338d0]",
            "mov r1, 0x10",
            "add r2, r6, r2",
            "bl sym.imp.av_log",
            "b 0x33634",
            "ldr r5, [sp, 0x20]",
            "mov r0, r7",
            "mov r2, 0x10",
            "ldr r1, [r6, r5]",
            "bl sym.imp.memcmp",
            "cmp r0, 0",
            "bne 0x33710",
            "ldr r4, [0x000338d4]",
            "ldrh r5, [r7, 0x48]",
            "ldr r2, [r8, r4]",
            "cmp r2, 0xff",
            "bgt 0x33700",
            "mov r3, 6",
            "mul r3, r3, r2",
            "add r3, r3, 0x2e",
            "cmp r3, 0x200",
            "bhs 0x33700",
            "add r2, r2, 1",
            "ldr r0, [r8, 4]",
            "ldr r1, [sp, 0x24]",
            "lsl r2, r2, 2",
            "and r5, r5, 0x7f",
            "bl sym.imp.av_fast_realloc",
            "ldr r3, [r8, r4]",
            "str r0, [r8, 4]",
            "str r5, [r0, r3, lsl 2]",
            "add r3, r3, 1",
            "str r3, [r8, r4]",
            "b 0x3388c",
            "mov r0, 0",
            "mov r1, 0x10",
            "ldr r2, [0x000338d8]",
            "b 0x33830",
            "ldr r3, [0x000338dc]",
            "mov r0, r7",
            "mov r2, 0x10",
            "ldr r1, [r6, r3]",
            "bl sym.imp.memcmp",
            "cmp r0, 0",
            "bne 0x33860",
            "cmp r4, 0x57",
            "ble 0x3388c",
            "ldrh r5, [r7, 0x54]",
            "ldrh ip, [r7, 0x56]",
            "mov r2, 0x58",
            "mov r3, 0",
            "str ip, [sp, 0xc]",
            "b 0x337a0",
            "mov r0, 4",
            "ldr ip, [sp, 0x14]",
            "adds r0, r0, r2",
            "mov r1, 0",
            "adc r1, r1, r3",
            "sub r5, r5, 1",
            "cmp r1, ip",
            "bhi 0x3377c",
            "bne 0x3378c",
            "ldr ip, [sp, 0x10]",
            "cmp r0, ip",
            "bls 0x3378c",
            "mov r0, 0",
            "mov r1, 0x10",
            "ldr r2, [0x000338e0]",
            "b 0x33830",
            "add r1, r7, r2",
            "ldrh r1, [r1, 2]",
            "add r1, r1, 4",
            "adds r2, r2, r1",
            "adc r3, r3, 0",
            "cmp r5, 0",
            "bne 0x3374c",
            "ldr ip, [sp, 0xc]",
            "b 0x33804",
            "mov r0, 0x16",
            "ldr r5, [sp, 0x14]",
            "adds r0, r0, r2",
            "mov r1, 0",
            "adc r1, r1, r3",
            "sub ip, ip, 1",
            "cmp r1, r5",
            "bhi 0x337e0",
            "bne 0x337f0",
            "ldr r5, [sp, 0x10]",
            "cmp r0, r5",
            "bls 0x337f0",
            "mov r0, 0",
            "mov r1, 0x10",
            "ldr r2, [0x000338e4]",
            "b 0x33830",
            "add r1, r7, r2",
            "ldr r1, [r1, 0x12]",
            "add r1, r1, 0x16",
            "adds r2, r2, r1",
            "adc r3, r3, 0",
            "cmp ip, 0",
            "bne 0x337b0",
            "ldr ip, [sp, 0x14]",
            "cmp r3, ip",
            "bhi 0x33824",
            "bne 0x3383c",
            "cmp r2, r4",
            "bls 0x3383c",
            "ldr r2, [0x000338e8]",
            "mov r0, 0",
            "mov r1, 0x10",
            "add r2, r6, r2",
            "bl sym.imp.av_log",
            "b 0x33634",
            "mov r4, sl",
            "mov r5, fp",
            "subs r4, r4, r2",
            "sbc r5, r5, r3",
            "cmp r5, 0",
            "bne 0x33884",
            "cmp r4, 0x18",
            "bhi 0x33884",
            "b 0x3388c",
            "ldr r3, [0x000338ec]",
            "mov r0, r7",
            "mov r2, 0x10",
            "ldr r1, [r6, r3]",
            "bl sym.imp.memcmp",
            "cmp r0, 0",
            "moveq sl, 0x2e",
            "moveq fp, 0",
            "b 0x3388c",
            "mov sl, r2",
            "mov fp, r3",
            "add r7, r7, sl",
            "rsb r4, r7, sb",
            "cmp r4, 0x17",
            "bhi 0x335c8",
            "mov r0, 0",
            "add sp, sp, 0x2c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00033ac4": {
        "function_address": "0x00033ac4",
        "instructions": [
            "push {r0, r1, r2, r4, r5, r6, r7, lr}",
            "cmp r1, 0x10000",
            "ldr r5, [0x00033b9c]",
            "mov r4, r0",
            "mov r6, r1",
            "add r5, pc, r5",
            "bls 0x33b04",
            "ldr r2, [0x00033ba0]",
            "mov r3, 0x10000",
            "str r3, [sp]",
            "mov r0, 0",
            "mov r1, 0x10",
            "mov r3, r6",
            "add r2, r5, r2",
            "bl sym.imp.av_log",
            "b 0x33b38",
            "add r7, r0, 0x20c",
            "mov r2, r6",
            "ldr r0, [r0]",
            "mov r1, r7",
            "bl fcn.00018f4c",
            "cmp r0, r6",
            "mov r3, r0",
            "beq 0x33b40",
            "ldr r2, [0x00033ba4]",
            "mov r0, 0",
            "mov r1, 0x10",
            "add r2, r5, r2",
            "bl sym.imp.av_log",
            "mvn r0, 4",
            "b 0x33b98",
            "ldr r6, [0x00033ba8]",
            "ldr r2, [r4, r6]",
            "cmp r0, r2",
            "ble 0x33b70",
            "str r2, [sp]",
            "mov r0, 0",
            "ldr r2, [0x00033bac]",
            "mov r1, 0x10",
            "add r2, r5, r2",
            "bl sym.imp.av_log",
            "ldr r0, [0x00033bb0]",
            "b 0x33b98",
            "rsb r2, r3, r2",
            "add r0, r7, r0",
            "mov r1, 0",
            "bl sym.imp.memset",
            "ldr r3, [0x00033bb4]",
            "mov r0, 0",
            "ldr r2, [r4, r6]",
            "str r7, [r4, r3]",
            "add r3, r3, 4",
            "str r2, [r4, r3]",
            "pop {r1, r2, r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.00033454": {
        "function_address": "0x00033454",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r4, r0",
            "ldr r7, [0x000334c8]",
            "ldr r6, [0x000334cc]",
            "ldr r3, [r0, r7]",
            "ldr r5, [r0, r6]",
            "rsb r5, r3, r5",
            "cmp r2, r5",
            "movlt r5, r2",
            "movge r5, r5",
            "ldr r2, [0x000334d0]",
            "ldr r2, [r0, r2]",
            "mov r0, r1",
            "add r1, r2, r3",
            "mov r2, r5",
            "bl sym.imp.memcpy",
            "ldr r2, [r4, r7]",
            "ldr r3, [r4, r6]",
            "cmp r2, r3",
            "bne 0x334b0",
            "add r0, r4, 0x10000",
            "add r0, r0, 0x214",
            "bl sym.imp.av_freep",
            "ldr r3, [0x000334c8]",
            "mov r0, r5",
            "ldr r2, [r4, r3]",
            "add r2, r5, r2",
            "str r2, [r4, r3]",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.00033bb8": {
        "function_address": "0x00033bb8",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x1c",
            "ldr sl, [0x00033d6c]",
            "add r3, r0, 0x10000",
            "mov r4, r0",
            "mov r7, 0",
            "ldr r6, [0x00033d70]",
            "add sb, sp, 0x14",
            "ldr r8, [0x00033d74]",
            "movw fp, 0x4824",
            "ldr r5, [0x00033d78]",
            "add r3, r3, 0x214",
            "str r3, [sp, 0xc]",
            "add r5, pc, r5",
            "mov r0, r4",
            "mov r1, sb",
            "str r7, [sp, 0x14]",
            "bl fcn.0003399c",
            "cmp r0, 0",
            "blt 0x33d64",
            "cmp r0, fp",
            "bne 0x33cd8",
            "ldr r3, [r4, sl]",
            "cmp r3, 0",
            "bne 0x33c60",
            "ldr r3, [r4, r8]",
            "cmp r3, 0",
            "beq 0x33c44",
            "ldr r3, [sp, 0x14]",
            "ldr r2, [r4, r6]",
            "cmp r3, r2",
            "beq 0x33c44",
            "str r3, [r4, r6]",
            "ldr r0, [sp, 0xc]",
            "bl sym.imp.av_freep",
            "ldr r0, [sp, 0x14]",
            "bl sym.imp.av_mallocz",
            "cmp r0, 0",
            "str r0, [r4, r8]",
            "beq 0x33d60",
            "ldr r3, [sp, 0x14]",
            "str r3, [r4, r6]",
            "ldr r3, [sp, 0x14]",
            "ldr r2, [r4, r6]",
            "cmp r3, r2",
            "strgt r2, [sp]",
            "movgt r0, 0",
            "movgt r1, 0x10",
            "ldrgt r2, [0x00033d7c]",
            "bgt 0x33d1c",
            "mov r2, r3",
            "ldr r0, [r4]",
            "ldr r1, [r4, r8]",
            "bl fcn.00018f4c",
            "ldr r2, [sp, 0x14]",
            "mov r3, r0",
            "cmp r0, r2",
            "strne r2, [sp]",
            "movne r0, 0",
            "movne r1, 0x10",
            "ldrne r2, [0x00033d80]",
            "bne 0x33d1c",
            "ldr r3, [r4, sl]",
            "str r0, [r4, r6]",
            "cmp r3, 0",
            "bne 0x33bf0",
            "mov r0, r4",
            "bl fcn.0003352c",
            "ldr r3, [0x00033d6c]",
            "mov r2, 1",
            "str r2, [r4, r3]",
            "b 0x33d64",
            "movw r3, 0x4424",
            "cmp r0, r3",
            "bne 0x33cf4",
            "mov r0, r4",
            "ldr r1, [sp, 0x14]",
            "bl fcn.00033ac4",
            "b 0x33d64",
            "ldr r3, [sp, 0x14]",
            "cmp r3, 0",
            "beq 0x33bf0",
            "cmp r3, 0x10000",
            "bls 0x33d28",
            "mov r2, 0x10000",
            "mov r0, r7",
            "str r2, [sp]",
            "mov r1, 0x10",
            "ldr r2, [0x00033d84]",
            "add r2, r5, r2",
            "bl sym.imp.av_log",
            "b 0x33d58",
            "mov r2, r3",
            "ldr r0, [r4]",
            "add r1, r4, 0x20c",
            "bl fcn.00018f4c",
            "ldr r3, [sp, 0x14]",
            "cmp r0, r3",
            "beq 0x33bf0",
            "ldr r2, [0x00033d88]",
            "mov r0, r7",
            "mov r1, 0x10",
            "add r2, r5, r2",
            "bl sym.imp.av_log",
            "mvn r0, 4",
            "b 0x33d64",
            "mvn r0, 0xb",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.000334d4": {
        "function_address": "0x000334d4",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r4, r0",
            "ldr r7, [0x00033524]",
            "ldr r6, [0x00033528]",
            "ldr r5, [r0, r7]",
            "mov r0, r1",
            "ldr r1, [r4, r6]",
            "cmp r2, r5",
            "movlt r5, r2",
            "movge r5, r5",
            "mov r2, r5",
            "bl sym.imp.memcpy",
            "ldr r3, [r4, r7]",
            "mov r0, r5",
            "rsb r3, r5, r3",
            "str r3, [r4, r7]",
            "ldr r3, [r4, r6]",
            "add r3, r3, r5",
            "str r3, [r4, r6]",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.00033964": {
        "function_address": "0x00033964",
        "instructions": [
            "push {r4, lr}",
            "ldr r4, [r0, 0x14]",
            "ldr r0, [r4]",
            "cmp r0, 0",
            "beq 0x3397c",
            "bl sym.ffurl_close",
            "ldr r0, [r4, 4]",
            "bl sym.imp.av_free",
            "ldr r3, [0x00033998]",
            "ldr r0, [r4, r3]",
            "bl sym.imp.av_free",
            "mov r0, 0",
            "pop {r4, pc}"
        ]
    },
    "fcn.00033f04": {
        "function_address": "0x00033f04",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x6c0",
            "ldr r4, [r0, 0x14]",
            "sub sp, sp, 4",
            "mov r3, 1",
            "mov r6, 0",
            "str r2, [sp, 0x1c]",
            "mov sl, r0",
            "ldr r2, [0x00034238]",
            "add r7, r4, 0x10000",
            "add r7, r7, 0x230",
            "str r3, [r0, 0xc]",
            "mov r0, r7",
            "str r6, [sp, 0x6b8]",
            "str r3, [r4, r2]",
            "mov r2, 0x400",
            "bl sym.imp.av_strlcpy",
            "add r3, sp, 0x620",
            "mov r0, r6",
            "add r3, r3, 4",
            "mov r1, r6",
            "str r3, [sp]",
            "mov r3, 0x80",
            "str r3, [sp, 4]",
            "add r3, sp, 0x6b0",
            "add r3, r3, 0xc",
            "mov r2, r6",
            "str r3, [sp, 8]",
            "add r3, sp, 0x420",
            "add r3, r3, 4",
            "str r7, [sp, 0x14]",
            "str r3, [sp, 0xc]",
            "mov r3, 0x100",
            "str r3, [sp, 0x10]",
            "mov r3, r6",
            "bl sym.av_url_split",
            "ldr r3, [sp, 0x6bc]",
            "add r8, sp, 0x620",
            "ldr r5, [0x0003423c]",
            "add r8, r8, 4",
            "ldr r2, [0x00034240]",
            "mov r1, 0x100",
            "cmp r3, r6",
            "add r6, sp, 0x520",
            "movlt r3, 0x50",
            "add r5, pc, r5",
            "strlt r3, [sp, 0x6bc]",
            "add r6, r6, 4",
            "ldr r3, [sp, 0x6bc]",
            "add r2, r5, r2",
            "mov r0, r6",
            "add sb, sl, 0x20",
            "str r8, [sp]",
            "str r3, [sp, 4]",
            "ldr r3, [0x00034244]",
            "add r3, r5, r3",
            "str r3, [sp, 8]",
            "add r3, sp, 0x420",
            "add r3, r3, 4",
            "str r3, [sp, 0xc]",
            "mov r3, 0",
            "bl fcn.000745ec",
            "mov r0, r4",
            "mov r1, r6",
            "mov r2, 1",
            "mov r3, sb",
            "bl fcn.00018880",
            "cmp r0, 0",
            "mvnlt r8, 4",
            "blt 0x34228",
            "ldr r2, [0x00034238]",
            "add r7, sp, 0x24",
            "mov r0, r7",
            "ldr r3, [r4, r2]",
            "add r1, r3, 1",
            "str r1, [r4, r2]",
            "mov r1, 0x400",
            "ldr r2, [sp, 0x6bc]",
            "str r3, [sp, 4]",
            "mov r3, r8",
            "str r2, [sp]",
            "ldr r2, [0x00034248]",
            "add r2, r5, r2",
            "bl sym.imp.snprintf",
            "ldr r3, [r4]",
            "mov r2, r7",
            "ldr r1, [0x0003424c]",
            "ldr r0, [r3, 0x14]",
            "mov r3, 0",
            "add r1, r5, r1",
            "bl sym.imp.av_opt_set",
            "ldr r0, [r4]",
            "mov r1, 0",
            "bl fcn.00018a38",
            "subs r8, r0, 0",
            "bne 0x34214",
            "mov r0, r4",
            "bl fcn.00033bb8",
            "subs r8, r0, 0",
            "bne 0x34200",
            "ldr r0, [r4]",
            "bl sym.ffurl_close",
            "mov r1, r8",
            "mov r2, 0x400",
            "mov r0, r7",
            "bl sym.imp.memset",
            "mov r0, r4",
            "mov r1, r6",
            "mov r2, 1",
            "mov r3, sb",
            "bl fcn.00018880",
            "subs r8, r0, 0",
            "blt 0x34214",
            "ldr r7, [0x00034250]",
            "mov r8, 0x13",
            "ldr r0, [r4, r7]",
            "mul r0, r8, r0",
            "add r0, r0, 1",
            "bl sym.imp.av_mallocz",
            "cmp r0, 0",
            "str r0, [sp, 0x6b8]",
            "mvneq r8, 0xb",
            "beq 0x34228",
            "ldr fp, [0x00034254]",
            "add sb, sp, 0x6a0",
            "mov r6, 0",
            "add sb, sb, 4",
            "add fp, r5, fp",
            "b 0x34148",
            "ldr r3, [r4, 4]",
            "mov r0, sb",
            "mov r1, 0x14",
            "mov r2, fp",
            "ldr r3, [r3, r6, lsl 2]",
            "bl sym.imp.snprintf",
            "subs r8, r0, 0",
            "blt 0x34214",
            "ldr r2, [r4, r7]",
            "mov r3, 0x13",
            "add r6, r6, 1",
            "ldr r0, [sp, 0x6b8]",
            "mov r1, sb",
            "mul r2, r3, r2",
            "add r2, r2, 1",
            "bl sym.imp.av_strlcat",
            "ldr r3, [r4, r7]",
            "cmp r6, r3",
            "blt 0x34108",
            "ldr r1, [0x00034238]",
            "add r6, sp, 0x6c0",
            "add r7, sp, 0x24",
            "ldr r2, [r4, r1]",
            "add r0, r2, 1",
            "str r0, [r4, r1]",
            "mov r0, r7",
            "ldr r1, [sp, 0x6bc]",
            "stm sp, {r1, r2, r3}",
            "mov r1, 0x400",
            "ldr r3, [r6, -8]!",
            "ldr r2, [0x00034258]",
            "str r3, [sp, 0xc]",
            "ldr r3, [sp, 0x1c]",
            "add r2, r5, r2",
            "str r3, [sp, 0x10]",
            "add r3, sp, 0x620",
            "add r3, r3, 4",
            "bl sym.imp.snprintf",
            "mov r8, r0",
            "mov r0, r6",
            "bl sym.imp.av_freep",
            "cmp r8, 0",
            "movlt r0, 0",
            "movlt r1, 0x10",
            "ldrlt r2, [0x0003425c]",
            "blt 0x3420c",
            "ldr r3, [r4]",
            "mov r2, r7",
            "ldr r1, [0x0003424c]",
            "ldr r0, [r3, 0x14]",
            "mov r3, 0",
            "add r1, r5, r1",
            "bl sym.imp.av_opt_set",
            "ldr r0, [r4]",
            "mov r1, 0",
            "bl fcn.00018a38",
            "subs r8, r0, 0",
            "bne 0x34214",
            "mov r0, r4",
            "bl fcn.00033bb8",
            "subs r8, r0, 0",
            "beq 0x34228",
            "ldr r2, [0x00034260]",
            "mov r0, 0",
            "mov r1, 0x10",
            "add r2, r5, r2",
            "bl sym.imp.av_log",
            "add r0, sp, 0x6b0",
            "add r0, r0, 8",
            "bl sym.imp.av_freep",
            "mov r0, sl",
            "bl fcn.00033964",
            "mov r0, r8",
            "add sp, sp, 0x2c4",
            "add sp, sp, 0x400",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0003436c": {
        "function_address": "0x0003436c",
        "instructions": [
            "push {r0, r1, r2, r4, r5, r6, r7, lr}",
            "add r6, r0, 0xc",
            "mov r7, r0",
            "ldr r0, [r0, 8]",
            "ldr r5, [0x00034420]",
            "rsb r2, r6, r0",
            "add r4, r2, 7",
            "bic r4, r4, 7",
            "add r5, pc, r5",
            "sub r3, r4, 0x10",
            "rsb r2, r2, r4",
            "cmp r3, 0",
            "add r1, r3, 7",
            "movge r1, r3",
            "asr r1, r1, 3",
            "str r3, [r6, 8]",
            "str r1, [r6, 0x10]",
            "sub r1, r1, 2",
            "str r1, [r6, 0x20]",
            "mov r1, 0",
            "bl sym.imp.memset",
            "mov r1, r6",
            "ldr r0, [r7]",
            "mov r2, r4",
            "bl sym.ffurl_write",
            "cmp r0, r4",
            "mov r6, r0",
            "moveq r0, 0",
            "beq 0x3441c",
            "cmp r6, 0",
            "bge 0x343f0",
            "bl sym.imp.strerror",
            "b 0x343f8",
            "ldr r0, [0x00034424]",
            "add r0, r5, r0",
            "ldr r2, [0x00034428]",
            "mov r1, 0x10",
            "str r0, [sp, 4]",
            "mov r3, r4",
            "mov r0, 0",
            "str r6, [sp]",
            "add r2, r5, r2",
            "bl sym.imp.av_log",
            "mvn r0, 4",
            "pop {r1, r2, r3, r4, r5, r6, r7, pc}"
        ]
    },
    "sym.imp.strerror": {
        "function_address": "0x0000a0d4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x650]!"
        ]
    },
    "fcn.000346ac": {
        "function_address": "0x000346ac",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "cmp r1, 0",
            "ldr r4, [0x00034ab0]",
            "sub sp, sp, 0x14",
            "mov r6, r0",
            "str r2, [sp, 0xc]",
            "add r4, pc, r4",
            "beq 0x346d8",
            "blx r1",
            "cmp r0, 0",
            "blt 0x34aa0",
            "ldr sb, [0x00034ab4]",
            "ldr r8, [0x00034ab8]",
            "add r7, r6, 0x20c",
            "ldr r0, [r6]",
            "mov r1, r7",
            "mov r2, 8",
            "bl fcn.00018f4c",
            "cmp r0, 8",
            "mov r5, r0",
            "beq 0x3474c",
            "cmp r0, 0",
            "bge 0x34730",
            "bl sym.imp.strerror",
            "ldr r2, [0x00034abc]",
            "mov r1, 0x10",
            "str r0, [sp]",
            "mov r3, r5",
            "mov r0, 0",
            "mvn sl, 0",
            "add r2, r4, r2",
            "bl sym.imp.av_log",
            "b 0x34a70",
            "ldr r2, [0x00034ac0]",
            "mov r0, 0",
            "mov r1, 0x10",
            "mvn sl, 1",
            "add r2, r4, r2",
            "bl sym.imp.av_log",
            "b 0x34a70",
            "ldr r2, [0x00034ac4]",
            "ldr r3, [r7, 4]",
            "cmp r3, r2",
            "bne 0x3487c",
            "ldrb r3, [r6, 0x20f]",
            "add r1, r6, 0x214",
            "ldr r0, [r6]",
            "mov r2, 4",
            "str r3, [r6, sb]",
            "bl fcn.00018f4c",
            "cmp r0, 4",
            "mov r5, r0",
            "beq 0x347b4",
            "cmp r0, 0",
            "bge 0x34790",
            "bl sym.imp.strerror",
            "b 0x34798",
            "ldr r0, [0x00034ac8]",
            "add r0, r4, r0",
            "ldr r2, [0x00034acc]",
            "mov r1, 0x10",
            "str r0, [sp]",
            "mov r3, r5",
            "mov r0, 0",
            "add r2, r4, r2",
            "b 0x34828",
            "ldr sl, [r7, 8]",
            "movw r3, 0xfff4",
            "add sl, sl, 4",
            "cmp sl, r3",
            "strhi r3, [sp]",
            "movhi r0, 0",
            "movhi r1, 0x10",
            "ldrhi r2, [0x00034ad0]",
            "bhi 0x348c0",
            "ldr r0, [r6]",
            "add r1, r6, 0x218",
            "mov r2, sl",
            "bl fcn.00018f4c",
            "cmp r0, sl",
            "mov r5, r0",
            "beq 0x3483c",
            "cmp r0, 0",
            "bge 0x34804",
            "bl sym.imp.strerror",
            "b 0x3480c",
            "ldr r0, [0x00034ac8]",
            "add r0, r4, r0",
            "ldr r2, [0x00034ad4]",
            "mov r1, 0x10",
            "str r0, [sp, 4]",
            "mov r0, 0",
            "str r5, [sp]",
            "add r2, r4, r2",
            "mov r3, sl",
            "bl sym.imp.av_log",
            "cmp r5, 0",
            "movlt sl, r5",
            "mvnge sl, 4",
            "b 0x34a70",
            "cmp r0, 0x2b",
            "ldrh sl, [r7, 0x24]",
            "mov r1, sl",
            "ble 0x349d8",
            "ldr r3, [r7, 0x28]",
            "cmp r3, 0",
            "beq 0x349d8",
            "ldr r2, [0x00034ad8]",
            "mov r0, 0",
            "str r3, [sp]",
            "mov r1, 0x10",
            "mov r3, sl",
            "mvn sl, 0x15",
            "add r2, r4, r2",
            "bl sym.imp.av_log",
            "b 0x34a70",
            "ldr r2, [0x00034adc]",
            "ldrh sl, [r7, 6]",
            "ldr r3, [r6, 0x20c]",
            "str r3, [r6, r2]",
            "sub sl, sl, 8",
            "ldrb r3, [r6, 0x211]",
            "uxth sl, sl",
            "ldrb fp, [r6, 0x210]",
            "str r3, [r6, sb]",
            "movw r3, 0xfff8",
            "cmp sl, r3",
            "bls 0x348d4",
            "ldr r2, [0x00034ae0]",
            "mov r0, 0",
            "mov r1, 0x10",
            "add r3, r3, 8",
            "str r3, [sp]",
            "mov r3, sl",
            "add r2, r4, r2",
            "bl sym.imp.av_log",
            "ldr sl, [0x00034ae4]",
            "b 0x34a70",
            "ldr r2, [0x00034ae8]",
            "mov r1, r7",
            "str sl, [r6, r8]",
            "ldr r0, [r6]",
            "str r7, [r6, r2]",
            "mov r2, sl",
            "bl fcn.00018f4c",
            "cmp r0, sl",
            "mov r5, r0",
            "beq 0x3492c",
            "cmp r0, 0",
            "bge 0x3490c",
            "bl sym.imp.strerror",
            "b 0x34914",
            "ldr r0, [0x00034ac8]",
            "add r0, r4, r0",
            "str r0, [sp, 4]",
            "mov r1, 0x10",
            "str r5, [sp]",
            "mov r0, 0",
            "ldr r2, [0x00034aec]",
            "b 0x34820",
            "ldr r2, [0x00034af0]",
            "ldr r3, [r6, r2]",
            "cmp fp, r3",
            "bne 0x349c4",
            "sub r2, r2, 0x1a4",
            "ldr r3, [r6, r2]",
            "cmp r3, 0",
            "bne 0x349b0",
            "ldr r5, [0x00034af4]",
            "ldr r1, [r6, r8]",
            "ldr sl, [0x00034af8]",
            "ldr r3, [r6, r5]",
            "ldr r0, [r6, sl]",
            "add r1, r1, r3",
            "bl sym.imp.av_realloc",
            "cmp r0, 0",
            "bne 0x34984",
            "add r0, r6, 0x10000",
            "mvn sl, 0xb",
            "add r0, r0, 0x214",
            "bl sym.imp.av_freep",
            "b 0x34a70",
            "ldr r3, [r6, r5]",
            "str r0, [r6, sl]",
            "ldr r2, [r6, r8]",
            "add r0, r0, r3",
            "ldr r3, [0x00034ae8]",
            "ldr r1, [r6, r3]",
            "bl sym.imp.memcpy",
            "ldr r3, [r6, r5]",
            "ldr r2, [r6, r8]",
            "add r3, r2, r3",
            "str r3, [r6, r5]",
            "ldr r3, [r6, sb]",
            "cmp r3, 4",
            "beq 0x346e0",
            "mov sl, 0x10000",
            "b 0x34a2c",
            "ldr r2, [0x00034afc]",
            "ldr r3, [r6, r2]",
            "cmp fp, r3",
            "bne 0x346e0",
            "b 0x34aa8",
            "cmp r1, 0x1b",
            "bne 0x34a14",
            "mov r0, r6",
            "bl fcn.000342f8",
            "ldr r2, [r6, 8]",
            "mov r1, 1",
            "mov r0, r6",
            "mov r3, r2",
            "str r1, [r3], 4",
            "add r3, r3, 4",
            "ldr r1, [0x00034b00]",
            "str r1, [r2, 4]",
            "str r3, [r6, 8]",
            "bl fcn.0003436c",
            "b 0x346e0",
            "cmp r1, 0x20",
            "bne 0x34a2c",
            "ldr r3, [0x00034af0]",
            "ldr r2, [r7, 0x2f]",
            "str r2, [r6, r3]",
            "b 0x34a70",
            "ldr r3, [0x00034b04]",
            "cmp sl, r3",
            "bne 0x34a70",
            "ldr r5, [0x00034ab8]",
            "ldr r3, [0x00034b08]",
            "ldr r0, [r6, r5]",
            "ldr r8, [r6, r3]",
            "cmp r0, r8",
            "bge 0x34a70",
            "rsb r8, r0, r8",
            "mov r1, 0",
            "mov r2, r8",
            "add r0, r7, r0",
            "bl sym.imp.memset",
            "ldr r3, [r6, r5]",
            "add r8, r8, r3",
            "str r8, [r6, r5]",
            "ldr r3, [sp, 0xc]",
            "cmp sl, r3",
            "moveq r0, 0",
            "beq 0x34aa0",
            "ldr r2, [0x00034b0c]",
            "mov r0, 0",
            "str r3, [sp]",
            "mov r1, 0x10",
            "mov r3, sl",
            "add r2, r4, r2",
            "bl sym.imp.av_log",
            "ldr r0, [0x00034ae4]",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr sl, [0x00034b04]",
            "b 0x34a2c"
        ]
    },
    "fcn.000342f8": {
        "function_address": "0x000342f8",
        "instructions": [
            "ldr r2, [0x00034360]",
            "mov ip, 0",
            "mov r3, 1",
            "push {r4, lr}",
            "str r3, [r0, 0xc]",
            "str ip, [r0, 0x14]",
            "ldr r3, [0x00034364]",
            "str ip, [r0, 0x1c]",
            "str r3, [r0, 0x10]",
            "ldr r3, [0x00034368]",
            "str r3, [r0, 0x18]",
            "ldr r3, [r0, r2]",
            "add r4, r3, 1",
            "str r4, [r0, r2]",
            "mov r2, 0",
            "str r3, [r0, 0x20]",
            "mov r3, 0",
            "str r2, [r0, 0x24]",
            "str r3, [r0, 0x28]",
            "mov r3, 3",
            "strh r3, [r0, 0x32]",
            "add r3, r0, 0x34",
            "str ip, [r0, 0x2c]",
            "strh r1, [r0, 0x30]",
            "str r3, [r0, 8]",
            "pop {r4, pc}"
        ]
    },
    "fcn.0003442c": {
        "function_address": "0x0003442c",
        "instructions": [
            "push {r4, lr}",
            "ldr r4, [r0, 0x14]",
            "ldr r3, [r4]",
            "cmp r3, 0",
            "beq 0x34478",
            "mov r0, r4",
            "mov r1, 0xd",
            "bl fcn.000342f8",
            "ldr r2, [r4, 8]",
            "mov r1, 1",
            "mov r0, r4",
            "mov r3, r2",
            "str r1, [r3], 4",
            "add r3, r3, 4",
            "str r1, [r2, 4]",
            "str r3, [r4, 8]",
            "bl fcn.0003436c",
            "ldr r0, [r4]",
            "bl sym.ffurl_close",
            "ldr r0, [r4, 4]",
            "bl sym.imp.av_free",
            "ldr r3, [0x00034494]",
            "ldr r0, [r4, r3]",
            "bl sym.imp.av_free",
            "mov r0, 0",
            "pop {r4, pc}"
        ]
    },
    "fcn.00034e88": {
        "function_address": "0x00034e88",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r6, r1",
            "ldr r1, [r0, 8]",
            "sub sp, sp, 0x70",
            "mov r3, 0",
            "add r5, sp, 0x10",
            "mov r4, r0",
            "str r3, [sp]",
            "rsb r2, r1, r0",
            "str r3, [sp, 4]",
            "str r3, [sp, 8]",
            "add r2, r2, 0x20c",
            "str r3, [sp, 0xc]",
            "mov r0, r5",
            "add r3, r3, 1",
            "bl fcn.00019224",
            "mov r0, r5",
            "mov r1, r6",
            "bl sym.avio_put_str16le",
            "ldr r3, [r4, 8]",
            "add r3, r3, r0",
            "str r3, [r4, 8]",
            "add sp, sp, 0x70",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.00035384": {
        "function_address": "0x00035384",
        "instructions": [
            "mov r3, 1",
            "push {r0, r1, r2, lr}",
            "mov r2, 0",
            "str r3, [sp]",
            "mov r3, 0",
            "bl sym.avio_seek",
            "add sp, sp, 0xc",
            "ldm sp!, {pc}"
        ]
    },
    "fcn.0003554c": {
        "function_address": "0x0003554c",
        "instructions": [
            "sub sp, sp, 8",
            "ldr ip, [0x00035888]",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x44",
            "ldrd r8, sb, [sp, 0x70]",
            "mov r6, r1",
            "add r1, sp, 0x68",
            "add ip, pc, ip",
            "stm r1, {r2, r3}",
            "mov r2, 0",
            "cmp sb, 0",
            "mov r3, 0",
            "mvnlt r8, 0",
            "strd r2, r3, [sp, 8]",
            "mov r2, 8",
            "mvnlt sb, 0x80000000",
            "mov r3, 0",
            "adds r2, r2, r8",
            "adc r3, r3, sb",
            "strd r8, sb, [sp, 0x10]",
            "strd r2, r3, [sp, 0x20]",
            "mov fp, r0",
            "ldr r3, [0x0003588c]",
            "add r3, ip, r3",
            "str r3, [sp, 0x1c]",
            "ldr r3, [0x00035890]",
            "add r3, ip, r3",
            "str r3, [sp, 0x2c]",
            "b 0x357e8",
            "ldr r3, [sp, 0x14]",
            "cmp r3, 0",
            "bgt 0x355dc",
            "bne 0x35650",
            "ldr r0, [sp, 0x10]",
            "cmp r0, 7",
            "bls 0x35650",
            "mov r0, r6",
            "bl sym.avio_rb32",
            "mov r4, r0",
            "mov r8, r0",
            "mov sb, 0",
            "mov r0, r6",
            "bl sym.avio_rl32",
            "ldrd r2, r3, [sp, 8]",
            "mov sl, r0",
            "mov r0, 8",
            "mov r1, 0",
            "adds r2, r2, r0",
            "adc r3, r3, r1",
            "cmp r4, 1",
            "strd r2, r3, [sp, 8]",
            "bne 0x35658",
            "mov r0, r6",
            "mov r8, 8",
            "bl sym.avio_rb64",
            "ldrd r2, r3, [sp, 8]",
            "mov sb, 0",
            "subs r8, r0, r8",
            "sbc sb, r1, sb",
            "mov r0, 8",
            "mov r1, 0",
            "adds r2, r2, r0",
            "adc r3, r3, r1",
            "strd r2, r3, [sp, 8]",
            "b 0x35658",
            "ldrd r8, sb, [sp, 0x10]",
            "mov sl, 0",
            "orrs r1, r8, sb",
            "bne 0x35670",
            "ldrd r8, sb, [sp, 0x20]",
            "ldrd r2, r3, [sp, 8]",
            "subs r8, r8, r2",
            "sbc sb, sb, r3",
            "mvn r4, 7",
            "mvn r5, 0",
            "adds r4, r4, r8",
            "adc r5, r5, sb",
            "cmp r5, 0",
            "blt 0x35828",
            "ldrd r2, r3, [sp, 0x10]",
            "ldrd r0, r1, [sp, 8]",
            "subs r2, r2, r0",
            "sbc r3, r3, r1",
            "cmp r5, r3",
            "bgt 0x356ac",
            "bne 0x356b4",
            "cmp r4, r2",
            "bls 0x356b4",
            "mov r4, r2",
            "mov r5, r3",
            "mov r3, 0",
            "b 0x356e0",
            "cmp r2, sl",
            "bne 0x356dc",
            "ldr r2, [sp, 0x1c]",
            "add r1, r2, r1",
            "ldr r7, [r1, 4]",
            "cmp r7, 0",
            "bne 0x3571c",
            "b 0x356f4",
            "add r3, r3, 1",
            "ldr r0, [sp, 0x1c]",
            "lsl r1, r3, 3",
            "ldr r2, [r0, r3, lsl 3]",
            "cmp r2, 0",
            "bne 0x356bc",
            "ldr r3, [sp, 0x68]",
            "ldr r2, [0x00035894]",
            "ldr r1, [0x00035898]",
            "cmp r3, r2",
            "cmpne r3, r1",
            "ldreq r7, [sp, 0x2c]",
            "movne r0, r6",
            "movne r2, r4",
            "movne r3, r5",
            "bne 0x357d4",
            "mov r0, r6",
            "bl fcn.00035384",
            "add r3, sp, 0x40",
            "mov r8, r0",
            "strd r4, r5, [r3, -8]!",
            "mov sb, r1",
            "ldm r3, {r0, r1}",
            "mov r3, sp",
            "str sl, [sp, 0x30]",
            "stm r3, {r0, r1}",
            "add r3, sp, 0x30",
            "ldm r3, {r2, r3}",
            "mov r0, fp",
            "mov r1, r6",
            "blx r7",
            "cmp r0, 0",
            "blt 0x35878",
            "ldr r3, [fp, 0x18]",
            "cmp r3, 0",
            "beq 0x357a4",
            "ldr r3, [fp, 0x1c]",
            "cmp r3, 0",
            "beq 0x357a4",
            "ldr r0, [r6, 0x54]",
            "cmp r0, 0",
            "beq 0x35878",
            "mov r0, r6",
            "bl sym.avio_size",
            "adds r2, r8, r4",
            "adc r3, sb, r5",
            "cmp r0, r2",
            "bne 0x357a4",
            "cmp r3, r1",
            "beq 0x35874",
            "mov r0, r6",
            "bl fcn.00035384",
            "adds r2, r8, r4",
            "adc r3, sb, r5",
            "subs r2, r2, r0",
            "sbc r3, r3, r1",
            "cmp r3, 0",
            "bgt 0x357d0",
            "bne 0x357d8",
            "cmp r2, 0",
            "beq 0x357d8",
            "mov r0, r6",
            "bl sym.avio_skip",
            "ldrd r0, r1, [sp, 8]",
            "adds r0, r0, r4",
            "adc r1, r1, r5",
            "strd r0, r1, [sp, 8]",
            "ldrd r0, r1, [sp, 8]",
            "mov r2, 7",
            "mov r3, 0",
            "adds r2, r2, r0",
            "adc r3, r3, r1",
            "ldr r1, [sp, 0x14]",
            "cmp r1, r3",
            "bgt 0x35818",
            "bne 0x35828",
            "ldr r0, [sp, 0x10]",
            "cmp r0, r2",
            "bls 0x35828",
            "mov r0, r6",
            "bl sym.url_feof",
            "cmp r0, 0",
            "beq 0x355c0",
            "ldrd r8, sb, [sp, 0x10]",
            "ldr r1, [sp, 0xc]",
            "cmp sb, r1",
            "bgt 0x35848",
            "bne 0x35874",
            "ldr r2, [sp, 8]",
            "cmp r8, r2",
            "bls 0x35874",
            "cmp sb, 0",
            "bgt 0x35874",
            "bne 0x35860",
            "ldr r3, [0x0003589c]",
            "cmp r8, r3",
            "bhi 0x35874",
            "ldrd r2, r3, [sp, 8]",
            "mov r0, r6",
            "subs r2, r8, r2",
            "sbc r3, sb, r3",
            "bl sym.avio_skip",
            "mov r0, 0",
            "add sp, sp, 0x44",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "add sp, sp, 8",
            "bx lr"
        ]
    },
    "fcn.000350bc": {
        "function_address": "0x000350bc",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r4, r0",
            "ldr r5, [r0, 8]",
            "mov r6, r1",
            "ldr r3, [r0]",
            "ldr r0, [r3, r5, lsr 3]",
            "bl fcn.000350b4",
            "add r2, r6, r5",
            "ldr r3, [r4, 0x10]",
            "and r5, r5, 7",
            "rsb r6, r6, 0x20",
            "lsl r0, r0, r5",
            "cmp r2, r3",
            "strls r2, [r4, 8]",
            "strhi r3, [r4, 8]",
            "lsr r0, r0, r6",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.000350b4": {
        "function_address": "0x000350b4",
        "instructions": [
            "rev r0, r0",
            "bx lr"
        ]
    },
    "fcn.000377b4": {
        "function_address": "0x000377b4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov sb, r3",
            "ldrh sl, [r2, 0x68]",
            "sub sp, sp, 0x410",
            "sub sp, sp, 4",
            "mov fp, r0",
            "ldr r5, [0x0003794c]",
            "mov r6, r1",
            "mov r4, r2",
            "sxth r3, sl",
            "add r5, pc, r5",
            "cmp r3, 0",
            "ble 0x378f4",
            "ldrsh r3, [r2, 0x6a]",
            "cmp r3, 0",
            "ble 0x378f4",
            "mov r0, r1",
            "mov r1, 0x2f",
            "bl sym.imp.strrchr",
            "ldr r3, [r4, 4]",
            "subs r8, r0, 0",
            "addne r8, r8, 1",
            "moveq r8, r6",
            "mov r0, r3",
            "str r3, [sp, 0xc]",
            "bl sym.imp.strlen",
            "sxth r1, sl",
            "sub r7, r0, 1",
            "mov r2, 0",
            "ldr r3, [sp, 0xc]",
            "sub r1, r1, 1",
            "b 0x37850",
            "ldrb r0, [r3, r7]",
            "cmp r0, 0x2f",
            "bne 0x3784c",
            "cmp r2, r1",
            "beq 0x37858",
            "add r2, r2, 1",
            "sub r7, r7, 1",
            "cmp r7, 0",
            "bge 0x37834",
            "sxth sl, sl",
            "sub sl, sl, 1",
            "cmp r2, sl",
            "bne 0x3793c",
            "rsb r8, r6, r8",
            "cmp r8, 0x400",
            "bhs 0x3793c",
            "add sl, sp, 0x10",
            "mov r1, r6",
            "mov r2, r8",
            "mov r0, sl",
            "bl sym.imp.memcpy",
            "add r3, sp, 0x410",
            "mov r6, 1",
            "add r8, r3, r8",
            "mov r3, 0",
            "strb r3, [r8, -0x400]",
            "ldr r3, [0x00037950]",
            "add r5, r5, r3",
            "b 0x378bc",
            "add r6, r6, 1",
            "mov r0, sl",
            "mov r1, r5",
            "mov r2, 0x400",
            "bl sym.imp.av_strlcat",
            "ldrsh r3, [r4, 0x6a]",
            "cmp r6, r3",
            "blt 0x378a8",
            "ldr r1, [r4, 4]",
            "add r7, r7, 1",
            "mov r0, sl",
            "mov r2, 0x400",
            "add r1, r1, r7",
            "bl sym.imp.av_strlcat",
            "mov r3, 0",
            "mov r0, fp",
            "str r3, [sp]",
            "mov r1, sl",
            "b 0x37924",
            "ldr r3, [sp, 0x438]",
            "cmp r3, 0",
            "beq 0x3793c",
            "ldr r2, [0x00037954]",
            "mov r1, 0x18",
            "ldr r0, [sp, 0x43c]",
            "add r2, r5, r2",
            "bl sym.imp.av_log",
            "ldr r1, [r4, 4]",
            "mov r0, fp",
            "mov r3, 0",
            "str r3, [sp]",
            "mov r2, 1",
            "mov r3, sb",
            "bl sym.avio_open2",
            "cmp r0, 0",
            "mvnne r0, 1",
            "b 0x37940",
            "mvn r0, 1",
            "add sp, sp, 0x14",
            "add sp, sp, 0x400",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00038b20": {
        "function_address": "0x00038b20",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "cmp r1, 0",
            "ldr r4, [0x00038b90]",
            "sub sp, sp, 0x28",
            "mov r6, r0",
            "add r4, pc, r4",
            "beq 0x38b88",
            "ldr r3, [0x00038b94]",
            "add r0, sp, 0x28",
            "add r3, r1, r3",
            "str r3, [r0, -0x24]!",
            "bl sym.imp.gmtime",
            "subs r3, r0, 0",
            "beq 0x38b88",
            "ldr r2, [0x00038b98]",
            "add r5, sp, 8",
            "mov r1, 0x20",
            "mov r0, r5",
            "add r2, r4, r2",
            "bl sym.imp.strftime",
            "ldr r1, [0x00038b9c]",
            "mov r0, r6",
            "mov r2, r5",
            "mov r3, 0",
            "add r1, r4, r1",
            "bl sym.imp.av_dict_set",
            "add sp, sp, 0x28",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "sym.imp.gmtime": {
        "function_address": "0x00009a98",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0xa78]!"
        ]
    },
    "sym.imp.strftime": {
        "function_address": "0x00009780",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0xc88]!"
        ]
    },
    "fcn.0002cff4": {
        "function_address": "0x0002cff4",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r2, 4",
            "mov r4, r0",
            "ldr r5, [0x0002d070]",
            "mov r0, r1",
            "mov r6, r1",
            "mov r1, 0",
            "bl sym.imp.memset",
            "cmp r4, 0x8a",
            "add r5, pc, r5",
            "bls 0x2d044",
            "mov r3, 2",
            "and r2, r4, 0x1f",
            "lsr r4, r4, 5",
            "add r2, r2, 0x60",
            "strb r2, [r6, r3]",
            "subs r3, r3, 1",
            "bhs 0x2d024",
            "mov r0, 1",
            "pop {r4, r5, r6, pc}",
            "ldr r3, [0x0002d074]",
            "add r5, r5, r3",
            "ldrb r0, [r5, r4, lsl 2]",
            "cmp r0, 0",
            "popeq {r4, r5, r6, pc}",
            "mov r0, r6",
            "add r1, r5, r4, lsl 2",
            "mov r2, 4",
            "bl sym.imp.memcpy",
            "mov r0, 1",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.00039d1c": {
        "function_address": "0x00039d1c",
        "instructions": [
            "push {r0, r1, r2, r4, r5, r6, r7, lr}",
            "mov r5, r0",
            "ldr r1, [sp, 0x20]",
            "mov r6, r2",
            "mov r7, r3",
            "ldr r4, [r0, 0x14]",
            "str r1, [sp]",
            "bl sym.av_index_search_timestamp",
            "cmp r0, 0",
            "bge 0x39d74",
            "ldr r3, [r5, 0x84]",
            "cmp r3, 0",
            "beq 0x39dc4",
            "ldr r3, [r5, 0x80]",
            "ldr r2, [r3, 0xc]",
            "cmp r2, r7",
            "bgt 0x39d70",
            "bne 0x39dc4",
            "ldr r3, [r3, 8]",
            "cmp r3, r6",
            "bls 0x39dc4",
            "mov r0, 0",
            "ldr r1, [r4, 0x20]",
            "str r0, [r4, 0x70]",
            "cmp r1, 0",
            "movne r3, 0",
            "ldrne r5, [r4, 0x1c]",
            "movne r2, r3",
            "bne 0x39db8",
            "b 0x39dc8",
            "ldr ip, [r1, r3, lsl 3]",
            "add ip, r2, ip",
            "cmp ip, r0",
            "rsbgt r2, r2, r0",
            "strgt r3, [r4, 0x34]",
            "strgt r2, [r4, 0x38]",
            "bgt 0x39dc8",
            "add r3, r3, 1",
            "mov r2, ip",
            "cmp r3, r5",
            "blo 0x39d94",
            "b 0x39dc8",
            "ldr r0, [pc]",
            "pop {r1, r2, r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.00039ea4": {
        "function_address": "0x00039ea4",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov fp, r1",
            "ldr r3, [r0, 0x14]",
            "mov sl, r2",
            "ldr r6, [sp, 0x28]",
            "cmp r3, 0",
            "ldr r8, [sp, 0x2c]",
            "moveq r0, r3",
            "popeq {r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r2, [r0, 0x18]",
            "sub r3, r3, 1",
            "ldr r7, [r2, r3, lsl 2]",
            "ldr r2, [sp, 0x30]",
            "ldr r3, [r7, 8]",
            "ldr r1, [r3, 0xd4]",
            "cmp r1, r2",
            "movne r0, 0",
            "popne {r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r2, [r3, 0x1c]",
            "mov r4, 0x18",
            "mov r5, 0",
            "adds r4, r4, r2",
            "adc r5, r5, r2, asr 31",
            "adds r4, r4, r6",
            "adc r5, r5, r8",
            "cmp r5, 0",
            "bne 0x39f80",
            "cmn r4, 0x80000001",
            "bhi 0x39f80",
            "cmp r8, 0",
            "bne 0x39f80",
            "cmn r6, 0x80000001",
            "bhi 0x39f80",
            "ldr r0, [r3, 0x18]",
            "mov r1, r4",
            "bl sym.imp.av_realloc",
            "cmp r0, 0",
            "mov sb, r4",
            "beq 0x39f88",
            "ldr r3, [r7, 8]",
            "sub sb, sb, 0x10",
            "ldr r4, [r3, 0x1c]",
            "str r0, [r3, 0x18]",
            "str sb, [r3, 0x1c]",
            "add r4, r0, r4",
            "add r0, r6, 8",
            "bl fcn.000350b4",
            "str sl, [r4, 4]",
            "str r0, [r4]",
            "add r1, r4, 8",
            "mov r0, fp",
            "mov r2, r6",
            "bl sym.avio_read",
            "mov r0, r8",
            "pop {r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r0, [0x00039f90]",
            "pop {r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "mvn r0, 0xb",
            "pop {r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0003a04c": {
        "function_address": "0x0003a04c",
        "instructions": [
            "ldr ip, [0x0003a14c]",
            "sub r3, r3, 1",
            "push {r0, r1, r2, r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r2",
            "ldr fp, [0x0003a150]",
            "add r8, r2, r3",
            "add ip, pc, ip",
            "mov r5, r2",
            "str r0, [sp]",
            "mov r7, 0",
            "str r1, [sp, 4]",
            "add fp, ip, fp",
            "mov sb, 6",
            "b 0x3a130",
            "ldr r0, [sp]",
            "bl sym.avio_r8",
            "uxtb r0, r0",
            "cmp r5, r8",
            "movhs r3, 0",
            "movlo r3, 1",
            "mvn r2, r0",
            "ands r2, r3, r2, lsr 7",
            "strbne r0, [r5], 1",
            "bne 0x3a12c",
            "cmp r3, 0",
            "beq 0x3a12c",
            "add r0, fp, r0, lsl 2",
            "add sl, r5, 1",
            "ldr r6, [r0, -0x1a0]",
            "cmp r6, 0x7f",
            "strbls r6, [r5]",
            "movls r5, sl",
            "bls 0x3a12c",
            "orr r0, r6, 1",
            "mov r1, 5",
            "clz r0, r0",
            "rsb r0, r0, 0x23",
            "bl fcn.0007d264",
            "sub r3, r0, 1",
            "mov r2, 0x100",
            "mul r3, sb, r3",
            "asr r0, r2, r0",
            "rsb r0, r0, 0",
            "orr r0, r0, r6, lsr r3",
            "strb r0, [r5]",
            "mov r5, sl",
            "b 0x3a124",
            "cmp r5, r8",
            "sub r3, r3, 6",
            "lsrlo r2, r6, r3",
            "andlo r2, r2, 0x3f",
            "mvnlo r2, r2, lsl 25",
            "mvnlo r2, r2, lsr 25",
            "strblo r2, [r5], 1",
            "cmp r3, 5",
            "bgt 0x3a108",
            "add r7, r7, 1",
            "ldr r3, [sp, 4]",
            "cmp r7, r3",
            "blt 0x3a084",
            "mov r3, 0",
            "rsb r0, r4, r5",
            "strb r3, [r5]",
            "pop {r1, r2, r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.imp.avpriv_mpeg4audio_get_config": {
        "function_address": "0x0000a104",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x630]!"
        ]
    },
    "fcn.00037214": {
        "function_address": "0x00037214",
        "instructions": [
            "sub sp, sp, 8",
            "push {r0, r1, r4, r5, r6, r7, r8, sb, sl, lr}",
            "add r6, sp, 0x28",
            "stm r6, {r2, r3}",
            "mov r8, r0",
            "mov r5, r1",
            "ldr r3, [r0, 4]",
            "ldr r4, [sp, 0x30]",
            "ldr r2, [sp, 0x34]",
            "ldr r0, [r3, 0x14]",
            "cmp r0, 0",
            "beq 0x3731c",
            "ldr r3, [r3, 0x18]",
            "cmp r2, 0",
            "sub r0, r0, 1",
            "ldr r7, [r3, r0, lsl 2]",
            "bne 0x37318",
            "cmp r4, 0x40000000",
            "bhi 0x37318",
            "cmp r4, 9",
            "bls 0x372d0",
            "mov r0, r1",
            "bl sym.avio_rb32",
            "mov sb, r0",
            "mov r0, r5",
            "bl sym.avio_rl32",
            "mov r3, 1",
            "mov sl, r0",
            "str r3, [sp]",
            "mov r0, r5",
            "mvn r3, 0",
            "mvn r2, 7",
            "bl sym.avio_seek",
            "ldr r3, [0x00037328]",
            "cmp sl, r3",
            "bne 0x372d0",
            "cmp sb, r4",
            "bne 0x372d0",
            "add r3, sp, 0x30",
            "ldm r3, {r0, r1}",
            "mov r3, sp",
            "stm r3, {r0, r1}",
            "mov r0, r8",
            "ldm r6, {r2, r3}",
            "mov r1, r5",
            "bl fcn.0003554c",
            "b 0x3731c",
            "ldr r3, [r7, 8]",
            "ldr r0, [r3, 0x18]",
            "bl sym.imp.av_free",
            "add r0, r4, 0x10",
            "ldr r6, [r7, 8]",
            "bl sym.imp.av_mallocz",
            "ldr r3, [r7, 8]",
            "str r0, [r6, 0x18]",
            "ldr r1, [r3, 0x18]",
            "cmp r1, 0",
            "mvneq r0, 0xb",
            "beq 0x3731c",
            "str r4, [r3, 0x1c]",
            "mov r0, r5",
            "mov r2, r4",
            "bl sym.avio_read",
            "mov r0, 0",
            "b 0x3731c",
            "ldr r0, [0x0003732c]",
            "pop {r2, r3, r4, r5, r6, r7, r8, sb, sl, lr}",
            "add sp, sp, 8",
            "bx lr"
        ]
    },
    "fcn.0003c564": {
        "function_address": "0x0003c564",
        "instructions": [
            "mov r3, 1",
            "push {r0, r1, r2, lr}",
            "mov r2, 0",
            "str r3, [sp]",
            "mov r3, 0",
            "bl sym.avio_seek",
            "add sp, sp, 0xc",
            "ldm sp!, {pc}"
        ]
    },
    "fcn.00019cf4": {
        "function_address": "0x00019cf4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov sl, r0",
            "mov r4, 0",
            "mov r5, 0",
            "mov r8, 0x7f",
            "mov sb, 0",
            "lsl r7, r5, 7",
            "lsl r6, r4, 7",
            "mov r0, sl",
            "orr r7, r7, r4, lsr 25",
            "mov r5, 0",
            "bl sym.avio_r8",
            "and r4, r8, r0",
            "adds r4, r4, r6",
            "adc r5, r5, r7",
            "tst r0, 0x80",
            "bne 0x19d0c",
            "mov r0, r4",
            "mov r1, r5",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "fcn.0003c584": {
        "function_address": "0x0003c584",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sl, lr}",
            "mov r8, r0",
            "mov sl, r2",
            "mov r4, r1",
            "bl fcn.0003c564",
            "mov r6, r0",
            "mov r0, r8",
            "mov r7, r1",
            "bl sym.avio_rl16",
            "str r0, [r4]",
            "mov r0, r8",
            "bl fcn.00019cf4",
            "mov r4, r0",
            "mov r5, r1",
            "strd r4, r5, [sl]",
            "mov r0, r8",
            "bl fcn.0003c564",
            "subs r4, r4, r0",
            "sbc r5, r5, r1",
            "adds r4, r4, r6",
            "adc r5, r5, r7",
            "strd r4, r5, [sl]",
            "pop {r3, r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "fcn.0003c454": {
        "function_address": "0x0003c454",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r2, 0",
            "mov r6, r0",
            "mov r7, 0",
            "mov r3, 0",
            "b 0x3c490",
            "lsl r5, r3, 7",
            "lsl r4, r2, 7",
            "orr r5, r5, r2, lsr 25",
            "mov r0, r6",
            "mov r1, 7",
            "bl fcn.0003c2c8",
            "add r7, r7, 7",
            "orr r2, r4, r0",
            "mov r3, r5",
            "ldr r1, [r6, 8]",
            "ldr r0, [r6]",
            "ldrb ip, [r0, r1, lsr 3]",
            "and r0, r1, 7",
            "lsl r0, ip, r0",
            "ldr ip, [r6, 0x10]",
            "ubfx r0, r0, 7, 1",
            "cmp r1, ip",
            "addlt r1, r1, 1",
            "cmp r0, 0",
            "str r1, [r6, 8]",
            "beq 0x3c4c8",
            "cmp r7, 0x3f",
            "bne 0x3c46c",
            "lsl r5, r3, 7",
            "lsl r4, r2, 7",
            "orr r5, r5, r2, lsr 25",
            "mov r0, r6",
            "mov r1, 7",
            "bl fcn.0003c2c8",
            "orr r4, r4, r0",
            "mov r1, r5",
            "mov r0, r4",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.0003c2c8": {
        "function_address": "0x0003c2c8",
        "instructions": [
            "ldr r3, [r0, 8]",
            "ldr ip, [r0, 0x10]",
            "push {r4, lr}",
            "ldr r2, [r0]",
            "add r4, r1, r3",
            "ldr r2, [r2, r3, lsr 3]",
            "and r3, r3, 7",
            "rev r2, r2",
            "cmp r4, ip",
            "strls r4, [r0, 8]",
            "strhi ip, [r0, 8]",
            "lsl r0, r2, r3",
            "rsb r1, r1, 0x20",
            "lsr r0, r0, r1",
            "pop {r4, pc}"
        ]
    },
    "fcn.0003c5e0": {
        "function_address": "0x0003c5e0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r0",
            "ldr r5, [0x0003c900]",
            "sub sp, sp, 0x7c",
            "ldr r8, [r0, 0x10]",
            "movw r0, 0x4f53",
            "cmp r1, r0",
            "add r5, pc, r5",
            "ldrd r6, r7, [sp, 0xa0]",
            "bne 0x3c8e8",
            "mov r0, r8",
            "str r2, [sp, 0x1c]",
            "str r3, [sp, 0x18]",
            "bl fcn.0003c564",
            "adds sl, r0, r6",
            "mov r0, r8",
            "adc fp, r1, r7",
            "mov r6, 0",
            "strd sl, fp, [sp, 0x30]",
            "bl fcn.00019cf4",
            "ldr r2, [sp, 0x1c]",
            "ldr r3, [sp, 0x18]",
            "ldr fp, [r4, 0xc]",
            "adds r2, r2, r0",
            "ldr r0, [r4, 0x10]",
            "adc r3, r3, r1",
            "str r6, [sp]",
            "bl sym.avio_seek",
            "add r2, sp, 0x68",
            "ldr r0, [r4, 0x10]",
            "add r1, sp, 0x74",
            "bl fcn.0003c584",
            "ldr r2, [sp, 0x74]",
            "movw r3, 0x5453",
            "cmp r2, r3",
            "movne r0, r4",
            "movne r1, 0x10",
            "ldrne r2, [0x0003c904]",
            "bne 0x3c740",
            "ldr r0, [sp, 0x68]",
            "add r0, r0, 0x10",
            "bl sym.imp.av_malloc",
            "cmp r0, 0",
            "str r0, [sp, 0x2c]",
            "beq 0x3c8d0",
            "ldr r1, [sp, 0x2c]",
            "ldr r2, [sp, 0x68]",
            "ldr r0, [r4, 0x10]",
            "bl sym.avio_read",
            "ldr r3, [sp, 0x68]",
            "add r0, sp, 0x44",
            "lsl r3, r3, 3",
            "cmp r3, 0",
            "asr r2, r3, 3",
            "ldrge r1, [sp, 0x2c]",
            "movlt r2, r6",
            "movlt r3, r2",
            "movlt r1, r2",
            "str r3, [sp, 0x50]",
            "add r3, r3, 8",
            "str r3, [sp, 0x54]",
            "add r2, r1, r2",
            "mov r3, 0",
            "str r1, [sp, 0x44]",
            "str r2, [sp, 0x48]",
            "str r3, [sp, 0x4c]",
            "bl fcn.0003c454",
            "cmp r1, 0",
            "mov r6, r0",
            "mov r7, r1",
            "str r0, [sp, 0x68]",
            "str r1, [sp, 0x6c]",
            "bgt 0x3c734",
            "bne 0x3c710",
            "cmn r0, 0xc0000001",
            "bhi 0x3c734",
            "ldrd r0, r1, [fp, 0x10]",
            "mov r2, 0x480",
            "mov r3, 0",
            "bl fcn.0007ded0",
            "cmp r7, r1",
            "bgt 0x3c734",
            "bne 0x3c74c",
            "cmp r6, r0",
            "bls 0x3c74c",
            "ldr r2, [0x0003c908]",
            "mov r0, r4",
            "mov r1, 0x10",
            "add r2, r5, r2",
            "bl sym.imp.av_log",
            "b 0x3c8d0",
            "mov r5, 0",
            "add sl, sp, 0x44",
            "mov r6, 2",
            "mov r7, r5",
            "mov sb, 1",
            "mov r0, sl",
            "mov r1, 4",
            "bl fcn.0003c2c8",
            "str r0, [sp, 0x3c]",
            "mov r0, sl",
            "bl fcn.0003c454",
            "ldrd r2, r3, [fp, 8]",
            "adds r2, r2, r0",
            "add r0, sp, 0x78",
            "adc r3, r3, r1",
            "strd r2, r3, [sp, 0x20]",
            "rsb r3, r5, 1",
            "add r3, r0, r3, lsl 3",
            "ldrd r0, r1, [sp, 0x20]",
            "strd r0, r1, [r3, -0x20]",
            "mov r2, r5",
            "asr r3, r2, 0x1f",
            "ldr r1, [r4, 0x18]",
            "add r5, r5, 1",
            "strd r2, r3, [sp]",
            "str r7, [sp, 8]",
            "str r7, [sp, 0xc]",
            "str sb, [sp, 0x10]",
            "ldrd r2, r3, [sp, 0x20]",
            "ldr r0, [r1]",
            "bl sym.av_add_index_entry",
            "subs r6, r6, 1",
            "bne 0x3c770",
            "mov r5, 2",
            "mov r7, sl",
            "b 0x3c894",
            "add sl, sl, 1",
            "cmp sl, 0x21",
            "beq 0x3c810",
            "ldr r3, [sp, 0x4c]",
            "ldrb ip, [r1, r3, lsr 3]",
            "and r0, r3, 7",
            "cmp r3, r2",
            "addlt r3, r3, 1",
            "str r3, [sp, 0x4c]",
            "lsl r0, ip, r0",
            "ubfx r0, r0, 7, 1",
            "cmp r0, 1",
            "bne 0x3c7dc",
            "mov r1, 0xc",
            "mov r0, r7",
            "bl fcn.0003c2c8",
            "add r0, r0, sl, lsl 12",
            "ldrd r2, r3, [sp, 0x58]",
            "ldr r1, [r4, 0x18]",
            "tst r0, 1",
            "str r6, [sp, 8]",
            "bicne r0, r0, 1",
            "strd r2, r3, [sp, 0x20]",
            "rsbne r0, r0, 0",
            "adds sl, r2, r2",
            "adc fp, r3, r3",
            "ldrd r2, r3, [sp, 0x60]",
            "asr r0, r0, 1",
            "str r6, [sp, 0xc]",
            "str sb, [sp, 0x10]",
            "subs sl, sl, r2",
            "sbc fp, fp, r3",
            "ldr r3, [sp, 0x3c]",
            "adds sl, sl, r0",
            "adc fp, fp, r0, asr 31",
            "lsl r2, r5, r3",
            "add r5, r5, 1",
            "asr r3, r2, 0x1f",
            "strd r2, r3, [sp]",
            "mov r2, sl",
            "ldr r0, [r1]",
            "mov r3, fp",
            "bl sym.av_add_index_entry",
            "ldrd r0, r1, [sp, 0x20]",
            "strd sl, fp, [sp, 0x58]",
            "strd r0, r1, [sp, 0x60]",
            "ldr r1, [sp, 0x6c]",
            "mov r2, r5",
            "asr r3, r2, 0x1f",
            "cmp r1, r3",
            "bgt 0x3c8b8",
            "bne 0x3c8c8",
            "ldr r1, [sp, 0x68]",
            "cmp r1, r2",
            "bls 0x3c8c8",
            "ldr r1, [sp, 0x44]",
            "mov sl, 0",
            "ldr r2, [sp, 0x54]",
            "b 0x3c7e8",
            "ldr r0, [sp, 0x2c]",
            "bl sym.imp.av_free",
            "mov r3, 0",
            "mov r0, r8",
            "str r3, [sp]",
            "ldrd r2, r3, [sp, 0x30]",
            "bl sym.avio_seek",
            "b 0x3c8f8",
            "mov r0, r8",
            "mov r2, r6",
            "mov r3, r7",
            "bl sym.avio_skip",
            "add sp, sp, 0x7c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0003cf50": {
        "function_address": "0x0003cf50",
        "instructions": [
            "mov r3, 1",
            "push {r0, r1, r2, lr}",
            "mov r2, 0",
            "str r3, [sp]",
            "mov r3, 0",
            "bl sym.avio_seek",
            "add sp, sp, 0xc",
            "ldm sp!, {pc}"
        ]
    },
    "fcn.0003cf70": {
        "function_address": "0x0003cf70",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r4, r0",
            "mov r5, r1",
            "mov r8, r2",
            "ldr r6, [r2]",
            "ldr r7, [r1]",
            "b 0x3cfc4",
            "mov r0, r4",
            "bl sym.url_feof",
            "cmp r0, 0",
            "bne 0x3cfcc",
            "mov r0, r4",
            "sub r7, r7, 1",
            "bl sym.avio_r8",
            "cmp r6, 1",
            "orreq r6, r0, 0x100",
            "biceq r6, r6, 0xff000000",
            "moveq r0, r6",
            "beq 0x3cfd0",
            "orr r6, r0, r6, lsl 8",
            "bic r6, r6, 0xff000000",
            "cmp r7, 0",
            "bgt 0x3cf8c",
            "mvn r0, 0",
            "str r6, [r8]",
            "str r7, [r5]",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.0003d090": {
        "function_address": "0x0003d090",
        "instructions": [
            "push {r0, r1, r4, lr}",
            "cmp r1, 0",
            "mov r4, r0",
            "uxtbge r0, r1",
            "bge 0x3d0ac",
            "bl sym.avio_r8",
            "uxtb r0, r0",
            "add r1, sp, 8",
            "mov r2, 4",
            "strb r0, [r1, -8]!",
            "mov r0, r4",
            "add r1, r1, 1",
            "bl sym.avio_read",
            "ldrb r0, [sp]",
            "mov r1, 0",
            "mov r2, 0xe",
            "ldrh r3, [sp, 3]",
            "rev16 r3, r3",
            "lsr r4, r3, 1",
            "mov r3, 0",
            "and r0, r0, r2",
            "ldrh ip, [sp, 1]",
            "and r1, r1, r3",
            "lsl r2, r0, 0x1d",
            "rev16 ip, ip",
            "lsr ip, ip, 1",
            "lsl r3, r1, 0x1d",
            "lsl ip, ip, 0xf",
            "orr r3, r3, r0, lsr 3",
            "orr r2, r2, r4",
            "mov r1, r3",
            "orr r2, r2, ip",
            "mov r0, r2",
            "pop {r2, r3, r4, pc}"
        ]
    },
    "fcn.0006e82c": {
        "function_address": "0x0006e82c",
        "instructions": [
            "ldr r3, [r0, 0x18]",
            "push {r4, r5, r6, r7, r8, lr}",
            "ldr r0, [r0, 0x498]",
            "ldr r6, [r3, r1, lsl 2]",
            "mov r1, 0x18",
            "bl fcn.0007d19c",
            "ldr r8, [r6, 0x84]",
            "cmp r8, r0",
            "movhs r4, 0",
            "movhs r5, r4",
            "bhs 0x6e880",
            "pop {r4, r5, r6, r7, r8, pc}",
            "ldr ip, [r6, 0x80]",
            "add r5, r5, 1",
            "add r7, ip, r4",
            "add ip, ip, r4, lsl 1",
            "add r4, r4, 0x18",
            "ldm ip!, {r0, r1, r2, r3}",
            "stm r7!, {r0, r1, r2, r3}",
            "ldm ip, {r0, r1}",
            "stm r7, {r0, r1}",
            "cmp r8, r5, lsl 1",
            "bgt 0x6e85c",
            "str r5, [r6, 0x84]",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.0003d118": {
        "function_address": "0x0003d118",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r0",
            "sub sp, sp, 0x64",
            "ldr r7, [r0, 0xc]",
            "ldr r5, [0x0003d75c]",
            "ldr r0, [r0, 0x10]",
            "str r3, [sp, 0x3c]",
            "str r1, [sp, 0x2c]",
            "add r5, pc, r5",
            "str r2, [sp, 0x40]",
            "bl fcn.0003cf50",
            "ldr r3, [0x0003d760]",
            "strd r0, r1, [sp, 0x30]",
            "add r3, r5, r3",
            "str r3, [sp, 0x44]",
            "ldr r3, [0x0003d764]",
            "add r3, r5, r3",
            "str r3, [sp, 0x48]",
            "ldr r3, [0x0003d768]",
            "add r3, r5, r3",
            "str r3, [sp, 0x4c]",
            "mov r3, 0",
            "add sl, sp, 0x5c",
            "movw sb, 0x1ba",
            "movw fp, 0x1bb",
            "str r3, [sp]",
            "ldr r0, [r4, 0x10]",
            "ldrd r2, r3, [sp, 0x30]",
            "bl sym.avio_seek",
            "ldr r0, [0x0003d76c]",
            "mov r3, 0xff",
            "str r3, [r7]",
            "mov r1, sl",
            "mov r2, r7",
            "str r0, [sp, 0x5c]",
            "ldr r0, [r4, 0x10]",
            "bl fcn.0003cf70",
            "mov r6, r0",
            "ldr r0, [r4, 0x10]",
            "bl fcn.0003cf50",
            "cmp r6, 0",
            "strd r0, r1, [sp, 0x30]",
            "bge 0x3d1dc",
            "ldr r5, [0x0003d770]",
            "ldr r0, [r4, 0x10]",
            "bl sym.url_feof",
            "cmp r0, 0",
            "mvneq r5, 0xa",
            "b 0x3d750",
            "cmp r6, sb",
            "beq 0x3d18c",
            "cmp r6, fp",
            "beq 0x3d18c",
            "movw r1, 0x1be",
            "cmp r6, r1",
            "bne 0x3d214",
            "ldr r5, [r4, 0x10]",
            "mov r0, r5",
            "bl sym.avio_rb16",
            "mov r3, 0",
            "mov r2, r0",
            "mov r0, r5",
            "b 0x3d2b0",
            "movw r2, 0x1bf",
            "cmp r6, r2",
            "bne 0x3d2b8",
            "ldr r0, [r4, 0x10]",
            "bl sym.avio_rb16",
            "ldr r3, [r7, 0x104]",
            "mov r5, r0",
            "cmp r3, 0",
            "beq 0x3d284",
            "b 0x3d2a4",
            "ldr r0, [r4, 0x10]",
            "bl sym.avio_r8",
            "cmp r0, 0x53",
            "bne 0x3d284",
            "add r6, sp, 0x54",
            "mov r2, 5",
            "mov r1, r6",
            "ldr r0, [r4, 0x10]",
            "bl sym.avio_read",
            "mov r0, r6",
            "ldr r1, [sp, 0x44]",
            "mov r2, 5",
            "sub r5, r5, 5",
            "bl sym.imp.memcmp",
            "rsbs r0, r0, 1",
            "movlo r0, 0",
            "str r0, [r7, 0x104]",
            "b 0x3d294",
            "sub r5, r5, 1",
            "add r3, r5, 1",
            "cmp r3, 5",
            "bgt 0x3d23c",
            "ldr r3, [r7, 0x104]",
            "cmp r3, 0",
            "subeq r3, r3, 1",
            "str r3, [r7, 0x104]",
            "ldr r0, [r4, 0x10]",
            "mov r2, r5",
            "asr r3, r2, 0x1f",
            "bl sym.avio_skip",
            "b 0x3d18c",
            "cmp r6, 0x1bc",
            "bne 0x3d370",
            "ldr r5, [r4, 0x10]",
            "mov r0, r5",
            "bl sym.avio_rb16",
            "mov r0, r5",
            "bl sym.avio_r8",
            "mov r0, r5",
            "bl sym.avio_r8",
            "mov r0, r5",
            "bl sym.avio_rb16",
            "mov r2, r0",
            "asr r3, r2, 0x1f",
            "mov r0, r5",
            "bl sym.avio_skip",
            "mov r0, r5",
            "bl sym.avio_rb16",
            "mov r6, r0",
            "b 0x3d35c",
            "mov r0, r5",
            "bl sym.avio_r8",
            "mov r3, r0",
            "mov r0, r5",
            "str r3, [sp, 0x18]",
            "bl sym.avio_r8",
            "mov r2, r0",
            "mov r0, r5",
            "str r2, [sp, 0x1c]",
            "bl sym.avio_rb16",
            "ldr r2, [sp, 0x1c]",
            "uxth r8, r0",
            "ldr r3, [sp, 0x18]",
            "mov r0, r5",
            "uxtab r2, r7, r2",
            "strb r3, [r2, 4]",
            "mov r3, 0",
            "mov r2, r8",
            "bl sym.avio_skip",
            "mvn r3, 3",
            "rsb r3, r8, r3",
            "add r6, r6, r3",
            "cmp r6, 3",
            "bgt 0x3d304",
            "mov r0, r5",
            "bl sym.avio_rb32",
            "b 0x3d18c",
            "sub r3, r6, 0x1c0",
            "movw r0, 0x1bd",
            "cmp r6, r0",
            "cmpne r3, 0x2f",
            "bls 0x3d390",
            "movw r3, 0x1fd",
            "cmp r6, r3",
            "bne 0x3d18c",
            "ldr r1, [sp, 0x2c]",
            "cmp r1, 0",
            "beq 0x3d3bc",
            "ldr r0, [r4, 0x10]",
            "bl fcn.0003cf50",
            "mvn r2, 3",
            "mvn r3, 0",
            "adds r2, r2, r0",
            "ldr r0, [sp, 0x2c]",
            "adc r3, r3, r1",
            "strd r2, r3, [r0]",
            "ldr r0, [r4, 0x10]",
            "bl sym.avio_rb16",
            "mov r5, r0",
            "cmp r5, 0",
            "ble 0x3d16c",
            "ldr r0, [r4, 0x10]",
            "sub r5, r5, 1",
            "bl sym.avio_r8",
            "cmp r0, 0xff",
            "beq 0x3d3c8",
            "and r3, r0, 0xc0",
            "cmp r3, 0x40",
            "bne 0x3d404",
            "ldr r0, [r4, 0x10]",
            "sub r5, r5, 2",
            "bl sym.avio_r8",
            "ldr r0, [r4, 0x10]",
            "bl sym.avio_r8",
            "and r3, r0, 0xe0",
            "cmp r3, 0x20",
            "bne 0x3d44c",
            "mov r8, r0",
            "ldr r0, [r4, 0x10]",
            "mov r1, r8",
            "sub r5, r5, 4",
            "bl fcn.0003d090",
            "tst r8, 0x10",
            "mov sb, r0",
            "str r1, [sp, 0x28]",
            "beq 0x3d5fc",
            "ldr r0, [r4, 0x10]",
            "mvn r1, 0",
            "bl fcn.0003d090",
            "sub r5, r5, 5",
            "strd r0, r1, [sp, 0x20]",
            "b 0x3d608",
            "and r3, r0, 0xc0",
            "cmp r3, 0x80",
            "bne 0x3d5dc",
            "ldr r0, [r4, 0x10]",
            "sub r5, r5, 2",
            "bl sym.avio_r8",
            "mov sl, r0",
            "ldr r0, [r4, 0x10]",
            "bl sym.avio_r8",
            "cmp r0, r5",
            "mov fp, r0",
            "str r5, [sp, 0x38]",
            "bgt 0x3d16c",
            "tst sl, 0x80",
            "beq 0x3d4c0",
            "ldr r0, [r4, 0x10]",
            "mvn r1, 0",
            "bl fcn.0003d090",
            "tst sl, 0x40",
            "mov sb, r0",
            "str r1, [sp, 0x28]",
            "sub r8, fp, 5",
            "beq 0x3d4dc",
            "ldr r0, [r4, 0x10]",
            "mvn r1, 0",
            "bl fcn.0003d090",
            "sub r8, fp, 0xa",
            "strd r0, r1, [sp, 0x20]",
            "b 0x3d4e8",
            "mov r2, 0",
            "mov r3, 0x80000000",
            "mov r8, r0",
            "strd r2, r3, [sp, 0x20]",
            "mov sb, r2",
            "str r3, [sp, 0x28]",
            "b 0x3d4e8",
            "ldr r3, [sp, 0x28]",
            "mov r2, r0",
            "strd r2, r3, [sp, 0x20]",
            "ands r3, sl, 0x3f",
            "movne r3, 1",
            "cmp r8, 0",
            "movne r3, 0",
            "andeq r3, r3, 1",
            "cmp r3, 0",
            "beq 0x3d518",
            "mov r0, r4",
            "mov r1, 0x18",
            "ldr r2, [sp, 0x4c]",
            "and sl, sl, 0xc0",
            "bl sym.imp.av_log",
            "tst sl, 1",
            "beq 0x3d5b8",
            "ldr r0, [r4, 0x10]",
            "sub sl, r8, 1",
            "bl sym.avio_r8",
            "asr r3, r0, 4",
            "mov r5, r0",
            "and r2, r3, 0xb",
            "and r8, r3, 9",
            "add r8, r8, r2",
            "ubfx r3, r0, 6, 1",
            "cmp r8, sl",
            "orrgt r3, r3, 1",
            "cmp r3, 0",
            "beq 0x3d570",
            "mov r3, r5",
            "mov r5, 0",
            "mov r8, r5",
            "mov r0, r4",
            "mov r1, 0x18",
            "ldr r2, [sp, 0x48]",
            "bl sym.imp.av_log",
            "mov r2, r8",
            "asr r3, r2, 0x1f",
            "ldr r0, [r4, 0x10]",
            "bl sym.avio_skip",
            "tst r5, 1",
            "rsb r8, r8, sl",
            "beq 0x3d5b8",
            "ldr r0, [r4, 0x10]",
            "sub r8, r8, 1",
            "bl sym.avio_r8",
            "tst r0, 0x7f",
            "beq 0x3d5b8",
            "ldr r0, [r4, 0x10]",
            "sub r8, r8, 1",
            "bl sym.avio_r8",
            "tst r0, 0x80",
            "lsleq r6, r6, 0x18",
            "orreq r6, r0, r6, lsr 16",
            "cmp r8, 0",
            "blt 0x3d16c",
            "ldr r3, [sp, 0x38]",
            "ldr r0, [r4, 0x10]",
            "rsb r5, fp, r3",
            "mov r2, r8",
            "asr r3, r2, 0x1f",
            "bl sym.avio_skip",
            "b 0x3d608",
            "cmp r0, 0xf",
            "bne 0x3d18c",
            "mov r0, 0",
            "mov r1, 0x80000000",
            "strd r0, r1, [sp, 0x20]",
            "mov sb, r0",
            "str r1, [sp, 0x28]",
            "b 0x3d608",
            "ldr r3, [sp, 0x28]",
            "mov r2, r0",
            "strd r2, r3, [sp, 0x20]",
            "movw r3, 0x1bd",
            "cmp r6, r3",
            "bne 0x3d670",
            "ldrb r3, [r7, 0xc1]",
            "cmp r3, 0",
            "bne 0x3d670",
            "ldr r0, [r4, 0x10]",
            "sub r5, r5, 1",
            "bl sym.avio_r8",
            "sub r3, r0, 0x80",
            "mov r6, r0",
            "cmp r3, 0x4f",
            "bhi 0x3d670",
            "ldr r0, [r4, 0x10]",
            "sub r5, r5, 3",
            "bl sym.avio_r8",
            "ldr r0, [r4, 0x10]",
            "bl sym.avio_r8",
            "ldr r0, [r4, 0x10]",
            "bl sym.avio_r8",
            "sub r3, r6, 0xb0",
            "cmp r3, 0xf",
            "bhi 0x3d670",
            "sub r5, r5, 1",
            "ldr r0, [r4, 0x10]",
            "bl sym.avio_r8",
            "cmp r5, 0",
            "blt 0x3d16c",
            "ldrd r0, r1, [sp, 0x20]",
            "mov r2, 0",
            "mov r3, 0x80000000",
            "eor r2, r2, r0",
            "eor r3, r3, r1",
            "orrs r1, r2, r3",
            "ldr r2, [sp, 0x2c]",
            "moveq r3, 0",
            "movne r3, 1",
            "cmp r2, 0",
            "moveq r3, 0",
            "andne r3, r3, 1",
            "cmp r3, 0",
            "movne r7, 0",
            "movne fp, 1",
            "movne r8, r7",
            "bne 0x3d720",
            "b 0x3d72c",
            "ldr r3, [r4, 0x18]",
            "lsl sl, r7, 2",
            "ldr r3, [r3, r7, lsl 2]",
            "ldr r3, [r3, 4]",
            "cmp r6, r3",
            "bne 0x3d71c",
            "ldr r3, [r4, 0x10]",
            "ldr r3, [r3, 0x54]",
            "cmp r3, 0",
            "beq 0x3d71c",
            "mov r0, r4",
            "mov r1, r7",
            "bl fcn.0006e82c",
            "ldrd r0, r1, [sp, 0x20]",
            "ldr r3, [r4, 0x18]",
            "str r8, [sp, 8]",
            "strd r0, r1, [sp]",
            "ldr r1, [sp, 0x2c]",
            "str r8, [sp, 0xc]",
            "str fp, [sp, 0x10]",
            "ldr r0, [r3, sl]",
            "ldrd r2, r3, [r1]",
            "bl sym.av_add_index_entry",
            "add r7, r7, 1",
            "ldr r3, [r4, 0x14]",
            "cmp r7, r3",
            "blo 0x3d6c0",
            "ldr r2, [sp, 0x40]",
            "ldr r3, [sp, 0x3c]",
            "ldr r0, [sp, 0x28]",
            "str r6, [r2]",
            "str sb, [r3]",
            "str r0, [r3, 4]",
            "ldr r3, [sp, 0x88]",
            "ldrd r0, r1, [sp, 0x20]",
            "strd r0, r1, [r3]",
            "mov r0, r5",
            "add sp, sp, 0x64",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0003ddb0": {
        "function_address": "0x0003ddb0",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r4, r0",
            "ldr r5, [r0, 8]",
            "mov r6, r1",
            "ldr r3, [r0]",
            "ldr r0, [r3, r5, lsr 3]",
            "bl fcn.0003dd78",
            "add r2, r6, r5",
            "ldr r3, [r4, 0x10]",
            "and r5, r5, 7",
            "rsb r6, r6, 0x20",
            "lsl r0, r0, r5",
            "cmp r2, r3",
            "strls r2, [r4, 8]",
            "strhi r3, [r4, 8]",
            "lsr r0, r0, r6",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.0003dd78": {
        "function_address": "0x0003dd78",
        "instructions": [
            "rev r0, r0",
            "bx lr"
        ]
    },
    "fcn.0003e104": {
        "function_address": "0x0003e104",
        "instructions": [
            "mov r3, 1",
            "push {r0, r1, r2, lr}",
            "mov r2, 0",
            "str r3, [sp]",
            "mov r3, 0",
            "bl sym.avio_seek",
            "add sp, sp, 0xc",
            "ldm sp!, {pc}"
        ]
    },
    "fcn.0003e124": {
        "function_address": "0x0003e124",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r6, r0",
            "ldr r5, [r0, 0x10]",
            "sub sp, sp, 0x14",
            "mov r7, r1",
            "mov sl, r2",
            "ldr r4, [0x0003e22c]",
            "mov r8, 1",
            "add r4, pc, r4",
            "mov r0, r5",
            "mov r1, r7",
            "mov r2, 0xbc",
            "bl sym.avio_read",
            "cmp r0, 0xbc",
            "beq 0x3e170",
            "ldr r3, [0x0003e230]",
            "cmp r0, 0",
            "movge r0, r3",
            "b 0x3e224",
            "ldrb r3, [r7]",
            "cmp r3, 0x47",
            "beq 0x3e1fc",
            "mov r0, r5",
            "mvn r2, 0xbb",
            "mvn r3, 0",
            "str r8, [sp]",
            "bl sym.avio_seek",
            "ldr sb, [r6, 0x10]",
            "mov fp, 0x10000",
            "mov r0, sb",
            "bl sym.avio_r8",
            "mov r3, r0",
            "mov r0, sb",
            "str r3, [sp, 0xc]",
            "bl sym.url_feof",
            "cmp r0, 0",
            "ldr r3, [sp, 0xc]",
            "bne 0x3e218",
            "cmp r3, 0x47",
            "bne 0x3e1dc",
            "mov r0, sb",
            "mvn r2, 0",
            "mvn r3, 0",
            "str r8, [sp]",
            "bl sym.avio_seek",
            "b 0x3e148",
            "subs fp, fp, 1",
            "bne 0x3e198",
            "ldr r2, [0x0003e234]",
            "mov r0, r6",
            "mov r1, 0x10",
            "add r2, r4, r2",
            "bl sym.imp.av_log",
            "b 0x3e218",
            "sub r2, sl, 0xbc",
            "cmp r2, 0",
            "ble 0x3e220",
            "mov r0, r5",
            "asr r3, r2, 0x1f",
            "bl sym.avio_skip",
            "b 0x3e220",
            "mvn r0, 0xa",
            "b 0x3e224",
            "mov r0, 0",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0003e06c": {
        "function_address": "0x0003e06c",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sl, lr}",
            "mov r6, r0",
            "ldrb r3, [r2, 3]",
            "mov r7, r1",
            "mov r8, r2",
            "ubfx r3, r3, 4, 2",
            "cmp r3, 1",
            "ble 0x3e0f4",
            "ldrb r3, [r2, 4]",
            "cmp r3, 0",
            "beq 0x3e0f4",
            "ldrb r2, [r2, 5]",
            "tst r2, 0x10",
            "beq 0x3e0f4",
            "cmp r3, 6",
            "ble 0x3e0fc",
            "ldr r0, [r8, 6]",
            "bl fcn.0003dd78",
            "ldrb r3, [r8, 0xa]",
            "mov r4, r0",
            "mov r5, 0",
            "adds r4, r4, r4",
            "add sl, r8, 6",
            "adc r5, r5, r5",
            "mov r0, 0",
            "lsr r3, r3, 7",
            "orr r4, r4, r3",
            "strd r4, r5, [r6]",
            "ldrb r3, [r8, 0xa]",
            "ldrb r2, [sl, 5]",
            "and r3, r3, 1",
            "orr r3, r2, r3, lsl 8",
            "str r3, [r7]",
            "pop {r3, r4, r5, r6, r7, r8, sl, pc}",
            "mvn r0, 0",
            "pop {r3, r4, r5, r6, r7, r8, sl, pc}",
            "mvn r0, 0",
            "pop {r3, r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "fcn.0003e578": {
        "function_address": "0x0003e578",
        "instructions": [
            "ldr r3, [r1, 0xc]",
            "push {r4, r5, r6, lr}",
            "mov r4, r0",
            "mov r5, r1",
            "ldr r6, [r1]",
            "cmp r3, 1",
            "addeq r0, r1, 0x18",
            "beq 0x3e5c0",
            "cmp r3, 0",
            "bne 0x3e5c4",
            "ldr r0, [r1, 0x14]",
            "add r0, r0, 0x158",
            "bl sym.imp.av_freep",
            "ldr r3, [r5, 0x14]",
            "ldr r3, [r3, 0x14]",
            "cmp r3, 0",
            "bne 0x3e5c4",
            "add r0, r5, 0x14",
            "bl sym.imp.av_freep",
            "mov r0, r5",
            "add r6, r6, 0x10",
            "bl sym.imp.av_free",
            "mov r3, 0",
            "str r3, [r4, r6, lsl 2]",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.0003e624": {
        "function_address": "0x0003e624",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r4, r0",
            "ldr r6, [0x0003e728]",
            "mov r0, r1",
            "mov r5, r1",
            "bl sym.imp.av_init_packet",
            "ldr r3, [0x0003e72c]",
            "add r6, pc, r6",
            "ldr r2, [r4, 0x20]",
            "ldr r3, [r6, r3]",
            "str r3, [r5, 0x2c]",
            "ldr r3, [r4, 0x158]",
            "str r2, [r5, 0x14]",
            "str r3, [r5, 0x10]",
            "ldr r3, [r4, 0x28]",
            "cmp r3, 0x32000",
            "beq 0x3e69c",
            "ldr r1, [r4, 0x2c]",
            "add r3, r3, 6",
            "add r2, r2, r1",
            "cmp r2, r3",
            "beq 0x3e69c",
            "ldr r2, [0x0003e730]",
            "mov r1, 0x18",
            "ldr r0, [r4, 0x10]",
            "add r2, r6, r2",
            "bl sym.imp.av_log",
            "ldr r3, [r4, 0x24]",
            "orr r3, r3, 2",
            "str r3, [r4, 0x24]",
            "ldr r3, [r5, 0x14]",
            "mov r1, 0",
            "ldr r0, [r5, 0x10]",
            "mov r2, 0x10",
            "add r0, r0, r3",
            "bl sym.imp.memset",
            "ldr r3, [r4, 0x18]",
            "cmp r3, 0",
            "beq 0x3e6d8",
            "ldr r2, [r4, 8]",
            "cmp r2, 0x83",
            "bne 0x3e6d8",
            "ldr r2, [r4, 0x30]",
            "cmp r2, 0x76",
            "beq 0x3e6dc",
            "ldr r3, [r4, 0x14]",
            "ldr r3, [r3]",
            "str r3, [r5, 0x18]",
            "ldrd r2, r3, [r4, 0x38]",
            "strd r2, r3, [r5]",
            "ldrd r2, r3, [r4, 0x40]",
            "strd r2, r3, [r5, 8]",
            "ldrd r2, r3, [r4, 0x48]",
            "strd r2, r3, [r5, 0x38]",
            "mov r2, 0",
            "ldr r3, [r4, 0x24]",
            "str r3, [r5, 0x1c]",
            "mov r3, 0x80000000",
            "strd r2, r3, [r4, 0x38]",
            "strd r2, r3, [r4, 0x40]",
            "mov r3, 0",
            "str r3, [r4, 0x158]",
            "str r3, [r4, 0x20]",
            "str r3, [r4, 0x24]",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.0003e858": {
        "function_address": "0x0003e858",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "sub sp, sp, 0x18",
            "add r7, sp, 0x18",
            "mov r4, r0",
            "mov r5, r1",
            "mov r8, r2",
            "str r3, [r7, -4]!",
            "mov r1, 0x21",
            "ldr r3, [r0, 8]",
            "mov r2, 1",
            "ldr r6, [0x0003ea2c]",
            "ldr sb, [r3, 0xd0]",
            "ldr sl, [r3, 0xd4]",
            "add r6, pc, r6",
            "ldr r3, [0x0003ea30]",
            "bl sym.avpriv_set_pts_info",
            "ldr r3, [r4, 8]",
            "mov r2, 2",
            "str r5, [r4, 0x14]",
            "mov r1, 0x30",
            "ldr r0, [r5, 0x10]",
            "str r2, [r3, 0xd0]",
            "mov r2, 0",
            "str r2, [r3, 0xd4]",
            "mov r3, 1",
            "str r3, [r4, 0x60]",
            "ldr r2, [0x0003ea34]",
            "ldr r3, [r5]",
            "str r4, [r5, 0x14]",
            "add r2, r6, r2",
            "str r8, [r5, 8]",
            "str r3, [sp, 4]",
            "ldr r3, [r4]",
            "str r8, [sp]",
            "str r7, [sp, 8]",
            "bl sym.imp.av_log",
            "ldr r3, [r4, 8]",
            "mov r0, r4",
            "ldr r1, [r5, 8]",
            "ldr r2, [0x0003ea38]",
            "str r1, [r3, 0xd8]",
            "add r2, r6, r2",
            "bl fcn.0003dfb8",
            "ldr r3, [sp, 0x14]",
            "ldr r2, [0x0003ea3c]",
            "ldr r2, [r6, r2]",
            "cmp r3, r2",
            "beq 0x3e928",
            "ldr r2, [0x0003ea40]",
            "ldr r2, [r6, r2]",
            "cmp r3, r2",
            "bne 0x3e9d4",
            "ldr r3, [r4, 8]",
            "ldr r7, [r3, 0xd4]",
            "cmp r7, 0",
            "bne 0x3e9d4",
            "ldr r2, [0x0003ea38]",
            "mov r0, r4",
            "ldr r1, [r5, 8]",
            "add r2, r6, r2",
            "add r2, r2, 0x78",
            "bl fcn.0003dfb8",
            "ldr r3, [r5, 8]",
            "cmp r3, 0x83",
            "bne 0x3e9d4",
            "mov r0, 0x198",
            "bl sym.imp.av_malloc",
            "subs r8, r0, 0",
            "beq 0x3ea18",
            "mov r1, r5",
            "mov r2, 0x198",
            "bl sym.imp.memcpy",
            "mov r1, r7",
            "ldr r0, [r5, 0x10]",
            "bl sym.avformat_new_stream",
            "subs r7, r0, 0",
            "bne 0x3e998",
            "mov r0, r8",
            "bl sym.imp.av_free",
            "b 0x3ea18",
            "ldr r3, [r5]",
            "mov r1, 0x21",
            "mov r2, 1",
            "str r3, [r7, 4]",
            "ldr r3, [0x0003ea30]",
            "bl sym.avpriv_set_pts_info",
            "ldr r2, [r7, 8]",
            "mov r3, 1",
            "ldr r1, [0x0003ea44]",
            "str r8, [r7, 0x14]",
            "str r3, [r2, 0xd0]",
            "str r1, [r2, 0xd4]",
            "str r3, [r7, 0x60]",
            "str r7, [r5, 0x18]",
            "str r7, [r8, 0x18]",
            "ldr r3, [r4, 8]",
            "ldr r3, [r3, 0xd4]",
            "cmp r3, 0",
            "bne 0x3e9fc",
            "ldr r3, [0x0003ea38]",
            "mov r0, r4",
            "ldr r1, [r5, 8]",
            "add r6, r6, r3",
            "add r2, r6, 0xfc",
            "bl fcn.0003dfb8",
            "ldr r3, [r4, 8]",
            "ldr r0, [r3, 0xd4]",
            "cmp r0, 0",
            "streq sl, [r3, 0xd4]",
            "streq sb, [r3, 0xd0]",
            "beq 0x3ea24",
            "b 0x3ea20",
            "mvn r0, 0xb",
            "b 0x3ea24",
            "mov r0, 0",
            "add sp, sp, 0x18",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "fcn.0003dfb8": {
        "function_address": "0x0003dfb8",
        "instructions": [
            "b 0x3dfe8",
            "cmp r1, r3",
            "bne 0x3dfe4",
            "ldr r1, [r2, 4]",
            "ldr r3, [r0, 8]",
            "ldr r2, [r2, 8]",
            "str r1, [r3, 0xd0]",
            "str r2, [r3, 0xd4]",
            "mov r3, 0",
            "str r3, [r0, 0x1c4]",
            "bx lr",
            "add r2, r2, 0xc",
            "ldr r3, [r2]",
            "cmp r3, 0",
            "bne 0x3dfbc",
            "bx lr"
        ]
    },
    "fcn.0003dff8": {
        "function_address": "0x0003dff8",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r7, r0",
            "mov r6, r1",
            "mov r0, 0",
            "mov r1, 0",
            "b 0x3e038",
            "lsl r5, r1, 0x11",
            "lsl r4, r0, 0x11",
            "orr r5, r5, r0, lsr 15",
            "mov r1, 0x11",
            "mov r0, r7",
            "bl fcn.0003ddb0",
            "orr r2, r4, r0",
            "mov r1, r5",
            "mov r0, r2",
            "sub r6, r6, 0x11",
            "cmp r6, 0x11",
            "bgt 0x3e010",
            "mov r2, r6",
            "bl fcn.0007d398",
            "mov r5, r1",
            "mov r4, r0",
            "mov r1, r6",
            "mov r0, r7",
            "bl fcn.0003ddb0",
            "orr r4, r4, r0",
            "mov r1, r5",
            "mov r0, r4",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.0003df08": {
        "function_address": "0x0003df08",
        "instructions": [
            "ldr r3, [r1]",
            "push {r4, r5, r6, lr}",
            "mov r5, r0",
            "mov r4, r1",
            "mov r6, r2",
            "cmp r3, r2",
            "bhs 0x3dfa8",
            "ldrb r2, [r3], 1",
            "str r3, [r1]",
            "strb r2, [r0]",
            "mov r0, r1",
            "ldr r3, [r1]",
            "add r3, r3, 2",
            "str r3, [r1]",
            "mov r1, r6",
            "bl fcn.0003dedc",
            "cmp r0, 0",
            "blt 0x3dfa8",
            "ldr r3, [r4]",
            "strh r0, [r5, 2]",
            "cmp r3, r6",
            "bhs 0x3dfa8",
            "ldrb r2, [r3], 1",
            "str r3, [r4]",
            "ubfx r3, r2, 1, 5",
            "strb r3, [r5, 4]",
            "ldr r3, [r4]",
            "cmp r3, r6",
            "bhs 0x3dfa8",
            "ldrb r2, [r3], 1",
            "str r3, [r4]",
            "strb r2, [r5, 5]",
            "ldr r3, [r4]",
            "cmp r3, r6",
            "bhs 0x3dfb0",
            "ldrb r2, [r3], 1",
            "mov r0, 0",
            "str r3, [r4]",
            "strb r2, [r5, 6]",
            "pop {r4, r5, r6, pc}",
            "mvn r0, 0",
            "pop {r4, r5, r6, pc}",
            "mvn r0, 0",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.0003dedc": {
        "function_address": "0x0003dedc",
        "instructions": [
            "ldr r2, [r0]",
            "mov r3, r0",
            "add r0, r2, 1",
            "cmp r0, r1",
            "bhs 0x3df00",
            "ldrh r0, [r2], 2",
            "rev16 r0, r0",
            "str r2, [r3]",
            "bx lr",
            "mvn r0, 0",
            "bx lr"
        ]
    },
    "fcn.0003e7fc": {
        "function_address": "0x0003e7fc",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r6, r0",
            "ldr r8, [r0]",
            "cmp r8, r1",
            "bhs 0x3e84c",
            "ldrb r5, [r8], 1",
            "add r7, r8, r5",
            "cmp r7, r1",
            "bhi 0x3e84c",
            "add r0, r5, 1",
            "bl sym.imp.av_malloc",
            "subs r4, r0, 0",
            "beq 0x3e850",
            "mov r1, r8",
            "mov r2, r5",
            "bl sym.imp.memcpy",
            "mov r3, 0",
            "strb r3, [r4, r5]",
            "str r7, [r6]",
            "b 0x3e850",
            "mov r4, 0",
            "mov r0, r4",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.0003e734": {
        "function_address": "0x0003e734",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r5, r0",
            "ldr r4, [0x0003e7f4]",
            "mov r0, 0x198",
            "mov r6, r1",
            "mov r8, r2",
            "bl sym.imp.av_mallocz",
            "subs sb, r0, 0",
            "add r4, pc, r4",
            "mov r7, r0",
            "beq 0x3e7ec",
            "ldr r3, [r5, 4]",
            "cmp r6, 0x2000",
            "mov r2, 0",
            "str r5, [r0, 0xc]",
            "str r6, [r0]",
            "str r3, [r0, 0x10]",
            "mov r3, 4",
            "str r3, [r0, 0x1c]",
            "mov r3, 0x80000000",
            "str r8, [r0, 4]",
            "strd r2, r3, [r0, 0x38]",
            "strd r2, r3, [r0, 0x40]",
            "bhs 0x3e7e0",
            "add sl, r6, 0x10",
            "ldr r8, [r5, sl, lsl 2]",
            "cmp r8, 0",
            "bne 0x3e7e0",
            "mov r0, 0x28",
            "bl sym.imp.av_mallocz",
            "cmp r0, 0",
            "beq 0x3e7e0",
            "mvn r3, 0",
            "str r0, [r5, sl, lsl 2]",
            "str r3, [r0, 4]",
            "str r3, [r0, 8]",
            "ldr r3, [0x0003e7f8]",
            "str r8, [r0, 0xc]",
            "str r6, [r0]",
            "add r4, r4, r3",
            "str r7, [r0, 0x14]",
            "str r4, [r0, 0x10]",
            "b 0x3e7ec",
            "mov r7, 0",
            "mov r0, sb",
            "bl sym.imp.av_free",
            "mov r0, r7",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "fcn.0003f388": {
        "function_address": "0x0003f388",
        "instructions": [
            "cmp r3, 0",
            "push {r3, r4, r5, lr}",
            "mov r4, r0",
            "mov r5, r2",
            "beq 0x3f3c0",
            "ldr r0, [r0, 0x18]",
            "bl sym.imp.memcpy",
            "mvn r3, 0",
            "str r5, [r4, 0x10]",
            "str r3, [r4, 0x14]",
            "ldrb r3, [r4, 0x1c]",
            "bfc r3, 1, 1",
            "strb r3, [r4, 0x1c]",
            "b 0x3f400",
            "ldrb r3, [r0, 0x1c]",
            "and r3, r3, 2",
            "uxtb r3, r3",
            "cmp r3, 0",
            "popne {r3, r4, r5, pc}",
            "ldr r3, [r0, 0x10]",
            "ldr r0, [r0, 0x18]",
            "rsb r2, r3, 0x1000",
            "cmp r5, r2",
            "movge r5, r2",
            "add r0, r0, r3",
            "mov r2, r5",
            "bl sym.imp.memcpy",
            "ldr r3, [r4, 0x10]",
            "add r5, r3, r5",
            "str r5, [r4, 0x10]",
            "ldr r3, [r4, 0x14]",
            "cmn r3, 1",
            "bne 0x3f43c",
            "ldr r3, [r4, 0x10]",
            "cmp r3, 2",
            "ble 0x3f43c",
            "ldr r3, [r4, 0x18]",
            "ldrh r3, [r3, 1]",
            "rev16 r3, r3",
            "lsl r3, r3, 0x14",
            "lsr r3, r3, 0x14",
            "add r3, r3, 3",
            "cmp r3, 0x1000",
            "popgt {r3, r4, r5, pc}",
            "str r3, [r4, 0x14]",
            "ldr r3, [r4, 0x14]",
            "cmn r3, 1",
            "popeq {r3, r4, r5, pc}",
            "ldr r2, [r4, 0x10]",
            "cmp r2, r3",
            "poplt {r3, r4, r5, pc}",
            "ldrb r3, [r4, 0x1c]",
            "orr r3, r3, 2",
            "tst r3, 1",
            "strb r3, [r4, 0x1c]",
            "beq 0x3f488",
            "mov r0, 3",
            "bl sym.imp.av_crc_get_table",
            "mvn r1, 0",
            "ldr r2, [r4, 0x18]",
            "ldr r3, [r4, 0x14]",
            "bl sym.imp.av_crc",
            "cmp r0, 0",
            "popne {r3, r4, r5, pc}",
            "ldr r3, [r4, 0x20]",
            "mov r0, r4",
            "ldr r1, [r4, 0x18]",
            "ldr r2, [r4, 0x14]",
            "blx r3",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "sym.imp.av_crc_get_table": {
        "function_address": "0x00009d5c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x8a0]!"
        ]
    },
    "sym.imp.av_crc": {
        "function_address": "0x00009798",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0xc78]!"
        ]
    },
    "fcn.0003f4a0": {
        "function_address": "0x0003f4a0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x34",
            "ldrh fp, [r1, 1]",
            "rev16 fp, fp",
            "lsl fp, fp, 0x13",
            "ldr r2, [0x0003f7fc]",
            "mov r5, r0",
            "lsrs fp, fp, 0x13",
            "mov r6, r1",
            "add r2, pc, r2",
            "str r2, [sp, 0x10]",
            "beq 0x3f5bc",
            "ldr r3, [r0, 0x38]",
            "mov sb, r6",
            "str r3, [sp, 0x28]",
            "mov r3, 0",
            "mov r0, r3",
            "mov r1, r3",
            "mov ip, r3",
            "b 0x3f594",
            "ldr r6, [r5, 0x3c]",
            "mov r4, 0",
            "mov sl, ip",
            "add r6, r6, r3",
            "ldr r8, [r6, 4]",
            "add r7, r6, 4",
            "str r7, [sp, 0x18]",
            "str r8, [sp, 0x2c]",
            "b 0x3f580",
            "ldr ip, [sp, 0x18]",
            "ldr r2, [ip, 4]!",
            "cmp r2, fp",
            "str ip, [sp, 0x18]",
            "bne 0x3f57c",
            "ldr ip, [r5, 4]",
            "str r3, [sp, 0xc]",
            "ldr r2, [ip, 0x484]",
            "str r2, [sp, 0x24]",
            "mov r2, 0",
            "b 0x3f56c",
            "ldr r7, [ip, 0x488]",
            "ldr r8, [r6]",
            "ldr r7, [r7, r2, lsl 2]",
            "ldr r3, [r7]",
            "cmp r3, r8",
            "bne 0x3f568",
            "ldr r7, [r7, 8]",
            "cmp r7, 0x30",
            "addeq r0, r0, 1",
            "addne r1, r1, 1",
            "add r2, r2, 1",
            "ldr r3, [sp, 0x24]",
            "cmp r2, r3",
            "bne 0x3f540",
            "ldr r3, [sp, 0xc]",
            "add r4, r4, 1",
            "ldr r7, [sp, 0x2c]",
            "cmp r4, r7",
            "bne 0x3f514",
            "add ip, sl, 1",
            "add r3, r3, 0x108",
            "ldr r8, [sp, 0x28]",
            "cmp ip, r8",
            "bne 0x3f4f0",
            "subs r0, r0, 0",
            "movne r0, 1",
            "cmp r1, 0",
            "movne r0, 0",
            "mov r6, sb",
            "cmp r0, 0",
            "bne 0x3f7ec",
            "add r7, fp, 0x10",
            "ldr r2, [r5, 0x10]",
            "ldr r4, [r5, r7, lsl 2]",
            "ldrb r8, [r6, 1]",
            "rsbs r3, r4, 1",
            "movlo r3, 0",
            "cmp r2, 0",
            "moveq r3, 0",
            "and r8, r8, 0x40",
            "cmp r3, 0",
            "beq 0x3f604",
            "cmp r8, 0",
            "beq 0x3f7f0",
            "mov r0, r5",
            "mov r1, fp",
            "mvn r2, 0",
            "bl fcn.0003e734",
            "ldr r4, [r5, r7, lsl 2]",
            "cmp r4, 0",
            "moveq r8, r4",
            "beq 0x3f7f0",
            "ldrb r3, [r6, 3]",
            "lsr sb, r3, 4",
            "ands r7, sb, 3",
            "beq 0x3f7e4",
            "and r7, sb, 1",
            "ands sb, sb, 2",
            "moveq r1, sb",
            "beq 0x3f640",
            "ldrb r1, [r6, 4]",
            "cmp r1, 0",
            "ldrsbne r1, [r6, 5]",
            "lsrne r1, r1, 0x1f",
            "ldr r2, [r4, 8]",
            "cmp r7, 0",
            "movw r0, 0x1fff",
            "and r3, r3, 0xf",
            "addne r2, r2, 1",
            "andne r2, r2, 0xf",
            "cmp fp, r0",
            "orreq r1, r1, 1",
            "cmp r1, 0",
            "movne sl, 1",
            "bne 0x3f67c",
            "ldr sl, [r4, 8]",
            "lsr sl, sl, 0x1f",
            "cmp r2, r3",
            "orreq sl, sl, 1",
            "cmp sl, 0",
            "str r3, [r4, 8]",
            "bne 0x3f6c4",
            "str r2, [sp]",
            "mov r1, 0x30",
            "ldr ip, [sp, 0x10]",
            "ldr r2, [0x0003f800]",
            "str r3, [sp, 4]",
            "mov r3, fp",
            "ldr r0, [r5, 4]",
            "add r2, ip, r2",
            "bl sym.imp.av_log",
            "ldr r3, [r4, 0xc]",
            "cmp r3, 0",
            "ldreq r3, [r4, 0x14]",
            "ldreq r2, [r3, 0x24]",
            "orreq r2, r2, 2",
            "streq r2, [r3, 0x24]",
            "cmp r7, 0",
            "beq 0x3f7e4",
            "cmp sb, 0",
            "add r7, r6, 4",
            "ldrbne r3, [r6, 4]",
            "add r6, r6, 0xbc",
            "addne r3, r3, 1",
            "addne r7, r7, r3",
            "cmp r7, r6",
            "bhs 0x3f7ec",
            "ldr r3, [r5, 4]",
            "ldr r0, [r3, 0x10]",
            "bl fcn.0003e104",
            "ldr ip, [r5, 8]",
            "strd r0, r1, [sp, 0x18]",
            "mov r2, ip",
            "asr r3, r2, 0x1f",
            "strd r2, r3, [sp, 0x10]",
            "bl fcn.0007ded0",
            "ldr r3, [r4, 0xc]",
            "str r2, [r5, 0xc]",
            "cmp r3, 1",
            "bne 0x3f7b0",
            "cmp r8, 0",
            "beq 0x3f78c",
            "mov r1, r7",
            "ldrb r2, [r1], 1",
            "add sb, r1, r2",
            "cmp sb, r6",
            "bhi 0x3f7ec",
            "cmp r2, 0",
            "moveq sl, 0",
            "andne sl, sl, 1",
            "cmp sl, 0",
            "beq 0x3f76c",
            "mov r0, r4",
            "mov r3, 0",
            "add fp, fp, 0x10",
            "bl fcn.0003f388",
            "ldr r8, [r5, fp, lsl 2]",
            "cmp r8, 0",
            "beq 0x3f7f0",
            "cmp sb, r6",
            "bhs 0x3f7ec",
            "mov r0, r4",
            "mov r1, sb",
            "rsb r2, sb, r6",
            "mov r3, 1",
            "bl fcn.0003f388",
            "b 0x3f7ec",
            "cmp sl, 0",
            "moveq r8, sl",
            "beq 0x3f7f0",
            "mov r0, r4",
            "mov r1, r7",
            "rsb r2, r7, r6",
            "mov r3, r8",
            "bl fcn.0003f388",
            "b 0x3f7f0",
            "ldrd r0, r1, [sp, 0x10]",
            "ldrd r2, r3, [sp, 0x18]",
            "subs r2, r2, r0",
            "sbc r3, r3, r1",
            "mov r0, r4",
            "strd r2, r3, [sp]",
            "mov r1, r7",
            "mov r3, r8",
            "ldr ip, [r4, 0x10]",
            "rsb r2, r7, r6",
            "blx ip",
            "and r8, r0, r0, asr 31",
            "b 0x3f7f0",
            "mov r8, r7",
            "b 0x3f7f0",
            "mov r8, 0",
            "mov r0, r8",
            "add sp, sp, 0x34",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0003f804": {
        "function_address": "0x0003f804",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r0",
            "ldr r5, [r0, 4]",
            "sub sp, sp, 0xdc",
            "mov r8, r1",
            "ldr r0, [r5, 0x10]",
            "bl fcn.0003e104",
            "ldr r3, [r4, 0x30]",
            "cmp r3, r0",
            "bne 0x3f838",
            "ldr r3, [r4, 0x34]",
            "cmp r3, r1",
            "beq 0x3f88c",
            "add r7, r4, 0x40",
            "mov r6, 0x2000",
            "mvn r3, 0",
            "mov fp, 4",
            "ldr r2, [r7], 4",
            "cmp r2, 0",
            "beq 0x3f884",
            "ldr sb, [r2, 0xc]",
            "cmp sb, 0",
            "bne 0x3f87c",
            "ldr sl, [r2, 0x14]",
            "str r3, [sp, 4]",
            "add r0, sl, 0x158",
            "bl sym.imp.av_freep",
            "ldr r3, [sp, 4]",
            "str sb, [sl, 0x20]",
            "str fp, [sl, 0x1c]",
            "ldr r2, [r7, -4]",
            "str r3, [r2, 8]",
            "subs r6, r6, 1",
            "bne 0x3f848",
            "mov r6, 0",
            "add r7, sp, 0xc",
            "str r6, [r4, 0x24]",
            "add r0, r7, 0xbc",
            "mov r1, r6",
            "mov r2, 0x10",
            "bl sym.imp.memset",
            "add r6, r6, 1",
            "cmp r6, r8",
            "movlt sl, 0",
            "movge sl, 1",
            "cmp r8, 0",
            "moveq sl, 0",
            "cmp sl, 0",
            "bne 0x3f908",
            "ldr r3, [r4, 0x24]",
            "cmp r3, 1",
            "bgt 0x3f908",
            "beq 0x3f90c",
            "mov r0, r5",
            "mov r1, r7",
            "ldr r2, [r4, 8]",
            "bl fcn.0003e124",
            "subs sl, r0, 0",
            "bne 0x3f90c",
            "mov r0, r4",
            "mov r1, r7",
            "bl fcn.0003f4a0",
            "subs sl, r0, 0",
            "beq 0x3f8a8",
            "b 0x3f90c",
            "mvn sl, 0xa",
            "ldr r0, [r5, 0x10]",
            "bl fcn.0003e104",
            "strd r0, r1, [r4, 0x30]",
            "mov r0, sl",
            "add sp, sp, 0xdc",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0003fd48": {
        "function_address": "0x0003fd48",
        "instructions": [
            "push {r0, r1, r4, r5, r6, r7, r8, lr}",
            "mov r6, r0",
            "mov r5, r2",
            "ldr r4, [sp, 0x20]",
            "mov r7, 0",
            "add r8, r0, 8",
            "b 0x3fd94",
            "mov r0, r6",
            "mov r2, r5",
            "stm sp, {r4, r7}",
            "bl fcn.0003f9ac",
            "cmp r0, 0",
            "blt 0x3fda4",
            "add r4, r4, r5",
            "mov r0, r8",
            "bl fcn.0003e104",
            "rsb r4, r0, r4",
            "mov r5, r0",
            "mov r3, r1",
            "cmp r4, 0",
            "bgt 0x3fd64",
            "mov r0, 0",
            "b 0x3fda8",
            "mvn r0, 0",
            "pop {r2, r3, r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.0003f9ac": {
        "function_address": "0x0003f9ac",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "add r4, r0, 8",
            "sub sp, sp, 0x18",
            "mov sb, r2",
            "mov r1, r4",
            "add r2, sp, 0x14",
            "mov r5, r0",
            "ldr r0, [r0]",
            "ldr sl, [sp, 0x3c]",
            "bl fcn.0002d0b4",
            "mov r6, r0",
            "mov r0, r4",
            "bl fcn.0003e104",
            "ldr r3, [sp, 0x38]",
            "strd r0, r1, [sp, 8]",
            "ldr r8, [sp, 8]",
            "ldr r7, [0x0003fd34]",
            "add sb, r3, sb",
            "subs sb, sb, r8",
            "add r7, pc, r7",
            "bmi 0x3fa1c",
            "cmp r6, 0",
            "movgt r3, 0",
            "movle r3, 1",
            "cmp r6, sb",
            "orrgt r3, r3, 1",
            "cmp r3, 0",
            "beq 0x3fa40",
            "ldr r2, [0x0003fd38]",
            "mov r1, 0x10",
            "stm sp, {r6, sb}",
            "add r2, r7, r2",
            "ldr r0, [r5]",
            "ldr r3, [sp, 0x14]",
            "bl sym.imp.av_log",
            "mvn r0, 0",
            "b 0x3fd2c",
            "ldr r3, [r5, 0x78]",
            "cmp r3, 3",
            "add r2, r3, 1",
            "str r2, [r5, 0x78]",
            "ble 0x3fa6c",
            "ldr r2, [0x0003fd3c]",
            "mov r1, 0x10",
            "ldr r0, [r5]",
            "add r2, r7, r2",
            "bl sym.imp.av_log",
            "b 0x3fd00",
            "cmp sl, 0",
            "beq 0x3fa9c",
            "ldr r3, [sp, 0x14]",
            "cmp r3, sl",
            "beq 0x3fa9c",
            "ldr r2, [0x0003fd40]",
            "mov r1, 0x10",
            "str sl, [sp]",
            "ldr r0, [r5]",
            "add r2, r7, r2",
            "bl sym.imp.av_log",
            "b 0x3fd00",
            "ldr r3, [sp, 0x14]",
            "sub r3, r3, 1",
            "cmp r3, 5",
            "addls pc, pc, r3, lsl 2",
            "b 0x3fd00",
            "b 0x3fafc",
            "b 0x3fac8",
            "b 0x3fb3c",
            "b 0x3fbf8",
            "b 0x3fd00",
            "b 0x3fc30",
            "mov r0, r4",
            "bl sym.avio_rb16",
            "mov r0, r4",
            "bl sym.avio_r8",
            "mov r0, r4",
            "bl sym.avio_r8",
            "mov r0, r4",
            "bl sym.avio_r8",
            "mov r0, r4",
            "bl sym.avio_r8",
            "mov r0, r4",
            "bl sym.avio_r8",
            "b 0x3fb14",
            "cmp r6, 1",
            "beq 0x3fd00",
            "mov r0, r4",
            "bl sym.avio_rb16",
            "tst r0, 0x20",
            "bne 0x3fd00",
            "mov r0, r4",
            "add r8, r6, r8",
            "bl fcn.0003e104",
            "rsb r8, r0, r8",
            "mov r2, r0",
            "mov r3, r1",
            "mov r0, r5",
            "str r8, [sp]",
            "bl fcn.0003fd48",
            "b 0x3fd00",
            "mov r3, 0",
            "ldr r2, [r5, 0x70]",
            "str r3, [sp, 0x10]",
            "ldr r3, [r5, 0x74]",
            "cmp r2, r3",
            "bge 0x3fd00",
            "mov r0, r4",
            "add r1, sp, 0x10",
            "bl fcn.0002d0d8",
            "ldr r1, [r5, 0x70]",
            "mov r3, 0x44",
            "ldr r2, [r5, 0x68]",
            "add r8, r6, r8",
            "mul r3, r3, r1",
            "add r1, r1, 1",
            "str r1, [r5, 0x70]",
            "ldr r1, [sp, 0x10]",
            "add r0, r2, r3",
            "str r0, [r5, 0x6c]",
            "mov r0, r4",
            "str r1, [r2, r3]",
            "bl fcn.0003e104",
            "mov r3, 4",
            "mov r7, r0",
            "mov r2, r7",
            "rsb r8, r0, r8",
            "str r3, [sp, 4]",
            "mov r0, r5",
            "mov r3, r1",
            "str r8, [sp]",
            "bl fcn.0003f9ac",
            "mov r0, r4",
            "bl fcn.0003e104",
            "rsb r7, r0, r7",
            "mov r2, r0",
            "add r8, r7, r8",
            "mov r3, r1",
            "cmp r8, 0",
            "ble 0x3fbec",
            "mov r1, 6",
            "mov r0, r5",
            "str r8, [sp]",
            "str r1, [sp, 4]",
            "bl fcn.0003f9ac",
            "mov r3, 0",
            "str r3, [r5, 0x6c]",
            "b 0x3fd00",
            "ldr r7, [r5, 0x6c]",
            "cmp r7, 0",
            "beq 0x3fd00",
            "mov r0, r6",
            "bl sym.imp.av_malloc",
            "cmp r0, 0",
            "mov r1, r0",
            "str r0, [r7, 8]",
            "beq 0x3fd00",
            "str r6, [r7, 4]",
            "mov r0, r4",
            "mov r2, r6",
            "bl sym.avio_read",
            "b 0x3fd00",
            "ldr r8, [r5, 0x6c]",
            "cmp r8, 0",
            "beq 0x3fd00",
            "mov r0, r4",
            "bl sym.avio_r8",
            "cmp r0, 0",
            "bne 0x3fcec",
            "mov r0, r4",
            "bl sym.avio_r8",
            "ubfx r3, r0, 7, 1",
            "str r3, [r8, 0xc]",
            "ubfx r3, r0, 6, 1",
            "str r3, [r8, 0x10]",
            "ubfx r3, r0, 5, 1",
            "str r3, [r8, 0x14]",
            "ubfx r3, r0, 3, 1",
            "str r3, [r8, 0x18]",
            "ubfx r3, r0, 2, 1",
            "ubfx r0, r0, 1, 1",
            "str r3, [r8, 0x1c]",
            "str r0, [r8, 0x20]",
            "mov r0, r4",
            "bl sym.avio_rb32",
            "str r0, [r8, 0x24]",
            "mov r0, r4",
            "bl sym.avio_rb32",
            "mov r0, r4",
            "bl sym.avio_r8",
            "str r0, [r8, 0x28]",
            "mov r0, r4",
            "bl sym.avio_r8",
            "str r0, [r8, 0x2c]",
            "mov r0, r4",
            "bl sym.avio_r8",
            "str r0, [r8, 0x30]",
            "mov r0, r4",
            "bl sym.avio_r8",
            "str r0, [r8, 0x34]",
            "mov r0, r4",
            "bl sym.avio_rb16",
            "asr r3, r0, 0xc",
            "str r3, [r8, 0x38]",
            "ubfx r3, r0, 7, 5",
            "ubfx r0, r0, 2, 5",
            "str r3, [r8, 0x3c]",
            "str r0, [r8, 0x40]",
            "b 0x3fd00",
            "ldr r1, [0x0003fd44]",
            "mov r2, 0",
            "ldr r0, [r5]",
            "add r1, r7, r1",
            "bl sym.imp.av_log_missing_feature",
            "ldr r3, [r5, 0x78]",
            "mov r0, r4",
            "sub r3, r3, 1",
            "str r3, [r5, 0x78]",
            "mov r5, 0",
            "ldrd r2, r3, [sp, 8]",
            "str r5, [sp]",
            "adds r2, r2, r6",
            "adc r3, r3, r6, asr 31",
            "bl sym.avio_seek",
            "mov r0, r5",
            "add sp, sp, 0x18",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "sym.imp.av_log_missing_feature": {
        "function_address": "0x00009d44",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x8b0]!"
        ]
    },
    "fcn.00040068": {
        "function_address": "0x00040068",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "sub sp, sp, 0x330",
            "mov r5, r1",
            "mov r6, r0",
            "mov r4, r2",
            "mov r0, sp",
            "lsl r2, r2, 2",
            "mov r1, 0",
            "sub r5, r5, 3",
            "bl sym.imp.memset",
            "mov r0, 0",
            "mov r3, r0",
            "mov r2, r0",
            "b 0x400f0",
            "ldrb r1, [r6], 1",
            "cmp r1, 0x47",
            "bne 0x400e0",
            "ldrsb r1, [r6]",
            "cmp r1, 0",
            "blt 0x400e0",
            "ldrb r1, [r6, 2]",
            "cmp r1, 0x47",
            "beq 0x400e0",
            "add r1, sp, 0x330",
            "add ip, r1, r3, lsl 2",
            "ldr r1, [ip, -0x330]",
            "add r1, r1, 1",
            "cmp r0, r1",
            "movlt r0, r1",
            "str r1, [ip, -0x330]",
            "add r3, r3, 1",
            "add r2, r2, 1",
            "cmp r3, r4",
            "moveq r3, 0",
            "cmp r2, r5",
            "blt 0x400a0",
            "add sp, sp, 0x330",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.000401c4": {
        "function_address": "0x000401c4",
        "instructions": [
            "cmp r1, 0x2000",
            "push {r3, r4, r5, r6, r7, r8, sl, lr}",
            "mov r4, r0",
            "mov r5, r1",
            "mov r6, r2",
            "mov sl, r3",
            "bhs 0x40258",
            "add r8, r1, 0x10",
            "ldr r3, [r0, r8, lsl 2]",
            "cmp r3, 0",
            "bne 0x40258",
            "mov r0, 0x28",
            "bl sym.imp.av_mallocz",
            "subs r7, r0, 0",
            "beq 0x4025c",
            "mov r3, 1",
            "str r7, [r4, r8, lsl 2]",
            "str r3, [r7, 0xc]",
            "mvn r3, 0",
            "str r3, [r7, 4]",
            "mov r0, 0x1000",
            "str r3, [r7, 8]",
            "str r5, [r7]",
            "str r6, [r7, 0x20]",
            "str sl, [r7, 0x24]",
            "bl sym.imp.av_malloc",
            "ldrb r3, [r7, 0x1c]",
            "cmp r0, 0",
            "mov r4, r0",
            "str r0, [r7, 0x18]",
            "orr r3, r3, 1",
            "strb r3, [r7, 0x1c]",
            "bne 0x4025c",
            "mov r0, r7",
            "mov r7, r4",
            "bl sym.imp.av_free",
            "b 0x4025c",
            "mov r7, 0",
            "mov r0, r7",
            "pop {r3, r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "fcn.00072d80": {
        "function_address": "0x00072d80",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r4, r2",
            "ldr r2, [r0, 0x14]",
            "mov ip, r0",
            "ldr r3, [0x00072e38]",
            "cmp r4, r2",
            "ldrlo r2, [r0, 0x484]",
            "add r3, pc, r3",
            "movlo r3, 0",
            "blo 0x72e2c",
            "ldr r2, [0x00072e3c]",
            "mov r1, 0x10",
            "add r2, r3, r2",
            "mov r3, r4",
            "pop {r4, r5, r6, lr}",
            "b sym.imp.av_log",
            "ldr r0, [ip, 0x488]",
            "ldr r5, [r0, r3, lsl 2]",
            "ldr r0, [r5]",
            "cmp r0, r1",
            "addne r3, r3, 1",
            "bne 0x72e2c",
            "ldr r1, [r5, 0x10]",
            "mov r3, 0",
            "b 0x72df8",
            "ldr r2, [r5, 0xc]",
            "ldr r2, [r2, r3, lsl 2]",
            "cmp r2, r4",
            "popeq {r4, r5, r6, pc}",
            "add r3, r3, 1",
            "cmp r3, r1",
            "blo 0x72de4",
            "add r1, r1, 1",
            "ldr r0, [r5, 0xc]",
            "lsl r1, r1, 2",
            "bl sym.imp.av_realloc",
            "cmp r0, 0",
            "ldrne r3, [r5, 0x10]",
            "strne r0, [r5, 0xc]",
            "strne r4, [r0, r3, lsl 2]",
            "addne r3, r3, 1",
            "strne r3, [r5, 0x10]",
            "pop {r4, r5, r6, pc}",
            "cmp r3, r2",
            "blo 0x72dc0",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.00040714": {
        "function_address": "0x00040714",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r3",
            "sub sp, sp, 0x184",
            "mov r5, r1",
            "ldr r3, [sp, 0x1a8]",
            "ldr r1, [r4]",
            "ldr r7, [0x00040c68]",
            "str r0, [sp, 0x14]",
            "cmp r1, r3",
            "ldr r8, [sp, 0x1ac]",
            "add r7, pc, r7",
            "ldr fp, [sp, 0x1b8]",
            "bhs 0x40c5c",
            "mov r6, r1",
            "ldrb sl, [r6], 1",
            "cmp r6, r3",
            "str r6, [r4]",
            "bhs 0x40c5c",
            "ldrb sb, [r1, 1]",
            "add r6, r6, 1",
            "str r6, [r4]",
            "add r6, r6, sb",
            "cmp r6, r3",
            "bhi 0x40c5c",
            "ldr r3, [r5, 8]",
            "ldr r1, [r3, 0xd4]",
            "cmp r2, 6",
            "movne r3, 0",
            "moveq r3, 1",
            "cmp r1, 0",
            "cmpeq r2, 6",
            "bne 0x407b4",
            "ldr r2, [0x00040c6c]",
            "mov r0, r5",
            "mov r1, sl",
            "str r3, [sp, 0x10]",
            "add r2, r7, r2",
            "add r2, r2, 0x120",
            "bl fcn.0003dfb8",
            "ldr r3, [sp, 0x10]",
            "cmp sl, 0x1f",
            "beq 0x40900",
            "bhi 0x407dc",
            "cmp sl, 0xa",
            "beq 0x407f8",
            "cmp sl, 0x1e",
            "beq 0x40810",
            "cmp sl, 5",
            "bne 0x40c50",
            "b 0x40bf0",
            "cmp sl, 0x56",
            "beq 0x409bc",
            "cmp sl, 0x59",
            "beq 0x40a10",
            "cmp sl, 0x52",
            "bne 0x40c50",
            "b 0x40c38",
            "add r3, sp, 0x24",
            "lsr sb, sb, 2",
            "add r3, r3, 2",
            "add ip, r3, sb, lsl 2",
            "mov r0, 0x2c",
            "b 0x40bbc",
            "mov r0, r4",
            "mov r1, r6",
            "bl fcn.0003dedc",
            "cmp fp, 0",
            "str r0, [sp, 0x18]",
            "beq 0x4083c",
            "ldr r1, [sp, 0x1b4]",
            "add r3, r1, 0x10",
            "ldr r3, [fp, r3, lsl 2]",
            "cmp r3, 0",
            "strne r0, [r3, 4]",
            "ldr r3, [0x00040c70]",
            "mov sb, 0",
            "add r2, sp, 0x120",
            "mov sl, sb",
            "str r2, [sp, 0x1c]",
            "add r7, r7, r3",
            "b 0x408f0",
            "ldr r2, [r8, 4]",
            "cmp r2, 0",
            "beq 0x408e8",
            "ldr r3, [r8]",
            "ldr r1, [sp, 0x18]",
            "cmp r3, r1",
            "bne 0x408e8",
            "mov r3, sl",
            "str sl, [sp]",
            "str sl, [sp, 4]",
            "str sl, [sp, 8]",
            "str sl, [sp, 0xc]",
            "ldr r0, [sp, 0x1c]",
            "ldr r1, [r8, 8]",
            "bl fcn.00019224",
            "mov r1, r5",
            "ldr r2, [sp, 0x1c]",
            "ldr r0, [sp, 0x14]",
            "bl fcn.0002d148",
            "ldr r2, [r5, 8]",
            "ldr r1, [0x00040c74]",
            "ldr r3, [r2, 0xd4]",
            "cmp r3, r1",
            "bne 0x408c8",
            "ldr r3, [r2, 0x1c]",
            "cmp r3, 0",
            "strgt sl, [r5, 0x60]",
            "b 0x408e8",
            "ldr r2, [0x00040c78]",
            "cmp r3, r2",
            "bne 0x408e8",
            "mov r0, fp",
            "ldr r1, [sp, 0x1b4]",
            "mov r2, r7",
            "mov r3, fp",
            "bl fcn.000401c4",
            "add sb, sb, 1",
            "add r8, r8, 0x44",
            "ldr r3, [sp, 0x1b0]",
            "cmp sb, r3",
            "blt 0x40858",
            "b 0x40c50",
            "mov r1, r6",
            "mov r0, r4",
            "bl fcn.0003dedc",
            "ldr r1, [sp, 0x1b0]",
            "cmp r1, 0",
            "ble 0x40c50",
            "ldr r3, [r5, 8]",
            "ldr r2, [r3, 0xd4]",
            "ldr r3, [0x00040c7c]",
            "cmp r2, r3",
            "beq 0x40938",
            "ldr r3, [r5, 0x1c4]",
            "cmp r3, 0",
            "ble 0x40c50",
            "ldr r2, [r8, 4]",
            "cmp r2, 0",
            "beq 0x40c50",
            "ldr r3, [r8]",
            "ldr r1, [sp, 0x1b4]",
            "cmp r3, r1",
            "bne 0x40c50",
            "mov r7, 0",
            "add sl, sp, 0x120",
            "mov r3, r7",
            "str r7, [sp]",
            "str r7, [sp, 4]",
            "mov r0, sl",
            "str r7, [sp, 8]",
            "str r7, [sp, 0xc]",
            "ldr r1, [r8, 8]",
            "bl fcn.00019224",
            "mov r1, r5",
            "mov r2, sl",
            "ldr r0, [sp, 0x14]",
            "bl fcn.0002d148",
            "ldr r3, [r5, 8]",
            "ldr r2, [0x00040c74]",
            "ldr r1, [r3, 0xd4]",
            "cmp r1, r2",
            "bne 0x40c50",
            "ldr r2, [r3, 0x1c]",
            "cmp r2, r7",
            "movgt r2, 1",
            "strgt r7, [r5, 0x60]",
            "strgt r7, [r5, 0x1c4]",
            "strgt r2, [r3, 0xd0]",
            "b 0x40c50",
            "ldr r3, [r4]",
            "cmp r3, r6",
            "ldrblo r2, [r3], 1",
            "mvnhs r2, 0",
            "strlo r3, [r4]",
            "ldr r3, [r4]",
            "strb r2, [sp, 0x24]",
            "cmp r3, r6",
            "ldrblo r2, [r3], 1",
            "mvnhs r2, 0",
            "strlo r3, [r4]",
            "ldr r3, [r4]",
            "strb r2, [sp, 0x25]",
            "cmp r3, r6",
            "ldrblo r2, [r3], 1",
            "mvnhs r2, 0",
            "strlo r3, [r4]",
            "mov r3, 0",
            "strb r2, [sp, 0x26]",
            "strb r3, [sp, 0x27]",
            "b 0x40bdc",
            "ldr r3, [r4]",
            "cmp r3, r6",
            "ldrblo r2, [r3], 1",
            "mvnhs r2, 0",
            "strlo r3, [r4]",
            "ldr r3, [r4]",
            "strb r2, [sp, 0x24]",
            "cmp r3, r6",
            "ldrblo r2, [r3], 1",
            "mvnhs r2, 0",
            "strlo r3, [r4]",
            "ldr r3, [r4]",
            "strb r2, [sp, 0x25]",
            "cmp r3, r6",
            "ldrblo r2, [r3], 1",
            "mvnhs r2, 0",
            "strlo r3, [r4]",
            "mov r3, 0",
            "strb r3, [sp, 0x27]",
            "ldr r3, [r4]",
            "strb r2, [sp, 0x26]",
            "cmp r3, r6",
            "bhs 0x40a88",
            "ldrb r2, [r3], 1",
            "str r3, [r4]",
            "sub r3, r2, 0x20",
            "cmp r3, 5",
            "ldrls r3, [r5, 0x98]",
            "orrls r3, r3, 0x80",
            "strls r3, [r5, 0x98]",
            "ldr r8, [r5, 8]",
            "ldr r0, [r8, 0x18]",
            "cmp r0, 0",
            "beq 0x40ac8",
            "ldr r2, [r8, 0x1c]",
            "cmp r2, 4",
            "bne 0x40af4",
            "ldr r1, [r4]",
            "bl sym.imp.memcmp",
            "cmp r0, 0",
            "beq 0x40af4",
            "ldr r1, [0x00040c80]",
            "ldr r0, [sp, 0x14]",
            "add r1, r7, r1",
            "bl sym.imp.av_log_ask_for_sample",
            "b 0x40af4",
            "mov r0, 0x14",
            "bl sym.imp.av_malloc",
            "ldr r3, [r5, 8]",
            "str r0, [r8, 0x18]",
            "ldr r0, [r3, 0x18]",
            "cmp r0, 0",
            "beq 0x40af4",
            "mov r2, 4",
            "ldr r1, [r4]",
            "str r2, [r3, 0x1c]",
            "bl sym.imp.memcpy",
            "ldr r3, [r4]",
            "add r0, r5, 0x138",
            "ldr r1, [0x00040c84]",
            "add r2, sp, 0x24",
            "add r3, r3, 4",
            "str r3, [r4]",
            "add r1, r7, r1",
            "mov r3, 0",
            "bl sym.imp.av_dict_set",
            "b 0x40c50",
            "ldr r2, [r4]",
            "cmp r2, r6",
            "ldrblo r1, [r2], 1",
            "mvnhs r1, 0",
            "strlo r2, [r4]",
            "strb r1, [r3, -2]",
            "ldr r2, [r4]",
            "cmp r2, r6",
            "ldrblo r1, [r2], 1",
            "mvnhs r1, 0",
            "strlo r2, [r4]",
            "strb r1, [r3, -1]",
            "ldr r2, [r4]",
            "cmp r2, r6",
            "ldrblo r1, [r2], 1",
            "mvnhs r1, 0",
            "strlo r2, [r4]",
            "strb r1, [r3]",
            "strb r0, [r3, 1]",
            "ldr r1, [r4]",
            "cmp r1, r6",
            "bhs 0x40bb8",
            "ldrb r2, [r1], 1",
            "cmp r2, 2",
            "str r1, [r4]",
            "beq 0x40ba0",
            "cmp r2, 3",
            "beq 0x40bac",
            "cmp r2, 1",
            "ldreq r2, [r5, 0x98]",
            "orreq r2, r2, 0x200",
            "bne 0x40bb8",
            "b 0x40bb4",
            "ldr r2, [r5, 0x98]",
            "orr r2, r2, 0x80",
            "b 0x40bb4",
            "ldr r2, [r5, 0x98]",
            "orr r2, r2, 0x100",
            "str r2, [r5, 0x98]",
            "add r3, r3, 4",
            "cmp r3, ip",
            "bne 0x40b1c",
            "lsls sb, sb, 2",
            "beq 0x40c50",
            "add r2, sp, 0x180",
            "mov r3, 0",
            "add sb, r2, sb",
            "strb r3, [sb, -0x15d]",
            "ldr r1, [0x00040c84]",
            "add r0, r5, 0x138",
            "add r2, sp, 0x24",
            "add r1, r7, r1",
            "b 0x40b14",
            "ldr r1, [r4]",
            "ldr r2, [r5, 8]",
            "add r0, r1, 4",
            "str r0, [r4]",
            "ldr r1, [r1]",
            "str r1, [r2, 0xd8]",
            "ldr r2, [r2, 0xd4]",
            "cmp r2, 0",
            "movne r3, 0",
            "andeq r3, r3, 1",
            "cmp r3, 0",
            "beq 0x40c50",
            "ldr r3, [0x00040c6c]",
            "mov r0, r5",
            "add r7, r7, r3",
            "add r2, r7, 0x168",
            "bl fcn.0003dfb8",
            "b 0x40c50",
            "ldr r3, [r4]",
            "cmp r3, r6",
            "ldrblo r3, [r3]",
            "mvnhs r3, 0",
            "add r3, r3, 1",
            "str r3, [r5, 0x1ac]",
            "str r6, [r4]",
            "mov r0, 0",
            "b 0x40c60",
            "mvn r0, 0",
            "add sp, sp, 0x184",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00041f08": {
        "function_address": "0x00041f08",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r5, r0",
            "ldr r6, [0x000421c0]",
            "sub sp, sp, 0x2c",
            "mov fp, r2",
            "mov sl, r3",
            "ldr r0, [r1, 0x1c]",
            "mov r2, 0",
            "mov r3, 0",
            "add r6, pc, r6",
            "mov ip, r1",
            "strd r2, r3, [sp, 0x10]",
            "str r0, [sp, 0x24]",
            "mov r7, 0",
            "b 0x42178",
            "ldr r3, [ip, 0x20]",
            "mov r2, fp",
            "ldr r4, [r3, r7, lsl 2]",
            "mov r3, sl",
            "ldrd r8, sb, [r4, 0x28]",
            "cmp sb, sl",
            "strd r8, sb, [sp, 0x18]",
            "bhi 0x41f70",
            "bne 0x41f74",
            "cmp r8, fp",
            "bls 0x41f74",
            "ldrd r2, r3, [sp, 0x18]",
            "ldrd r8, sb, [r4, 0x30]",
            "mov fp, r2",
            "ldrd r0, r1, [sp, 0x18]",
            "mov sl, r3",
            "adds r0, r0, r8",
            "adc r1, r1, sb",
            "cmp r1, r3",
            "bhi 0x41fa0",
            "bne 0x42148",
            "cmp r0, r2",
            "bls 0x42148",
            "ldrd r0, r1, [sp, 0x18]",
            "ldr r7, [r4, 0x14]",
            "subs r2, r2, r0",
            "sbc r3, r3, r1",
            "cmp r7, 0",
            "beq 0x41fe0",
            "mov r0, r7",
            "asr r1, r0, 0x1f",
            "ldrd r8, sb, [sp, 0x10]",
            "mul r1, r2, r1",
            "mla r1, r7, r3, r1",
            "umull r2, r3, r2, r7",
            "adds r8, r8, r2",
            "add r3, r1, r3",
            "adc sb, sb, r3",
            "b 0x42074",
            "ldr r7, [r4, 0x44]",
            "cmp r7, 0",
            "beq 0x420a0",
            "mov r0, r7",
            "asr r1, r0, 0x1f",
            "adds r8, r8, r8",
            "strd r0, r1, [sp, 0x10]",
            "mov r0, 1",
            "adc sb, sb, sb",
            "mov r1, 0",
            "adds r8, r8, r0",
            "adc sb, sb, r1",
            "cmp r7, r8",
            "bne 0x4202c",
            "ldr r1, [sp, 0x14]",
            "cmp r1, sb",
            "bne 0x4202c",
            "adds r2, r2, r2",
            "adc r3, r3, r3",
            "cmp r3, 0",
            "blt 0x42050",
            "mov r0, r7",
            "asr r1, r0, 0x1f",
            "cmp r3, r1",
            "bgt 0x42050",
            "bne 0x42068",
            "cmp r2, r7",
            "bls 0x42068",
            "ldrd r2, r3, [sp, 0x18]",
            "mov r1, 0x10",
            "ldr r0, [r5, 0x1c]",
            "strd r2, r3, [sp]",
            "ldr r2, [0x000421c4]",
            "b 0x420b4",
            "ldr r1, [r4, 0x40]",
            "lsl r2, r2, 3",
            "ldrd r8, sb, [r1, r2]",
            "ldr r1, [sp, 0x50]",
            "strd r8, sb, [sp, 0x10]",
            "ldr r8, [ip, 4]",
            "mov ip, 0",
            "cmp r1, 0",
            "ldrd r2, r3, [sp, 0x10]",
            "strne sl, [r1, 4]",
            "mov r7, ip",
            "strne fp, [r1]",
            "ldr sl, [r5, 4]",
            "b 0x42124",
            "ldrd r0, r1, [sp, 0x18]",
            "ldr r2, [0x000421c8]",
            "strd r0, r1, [sp]",
            "mov r1, 0x10",
            "ldr r0, [r5, 0x1c]",
            "add r2, r6, r2",
            "ldr r3, [ip]",
            "bl sym.imp.av_log",
            "b 0x421b4",
            "ldr r4, [r5]",
            "add r4, r4, ip",
            "ldr r1, [r4, 0x1c]",
            "cmp r1, r8",
            "bne 0x4211c",
            "ldrd r0, r1, [r4, 0x30]",
            "cmp r1, r3",
            "bgt 0x420f8",
            "bne 0x420f0",
            "cmp r0, r2",
            "bhi 0x420f8",
            "orrs sb, r0, r1",
            "bne 0x42114",
            "ldrd r0, r1, [r4, 0x28]",
            "adds r0, r0, r2",
            "adc r1, r1, r3",
            "ldr r3, [sp, 0x54]",
            "strd r0, r1, [r3]",
            "mov r0, 0",
            "b 0x421b8",
            "subs r2, r2, r0",
            "sbc r3, r3, r1",
            "add r7, r7, 1",
            "add ip, ip, 0x58",
            "cmp r7, sl",
            "blo 0x420c4",
            "ldrd r0, r1, [sp, 0x10]",
            "str r8, [sp, 8]",
            "ldr r2, [0x000421cc]",
            "strd r0, r1, [sp]",
            "mov r1, 0x10",
            "ldr r0, [r5, 0x1c]",
            "b 0x421ac",
            "ldr r1, [r4, 0x14]",
            "add r7, r7, 1",
            "mov r2, r1",
            "asr r3, r2, 0x1f",
            "mul r0, r1, sb",
            "mla r3, r8, r3, r0",
            "umull r8, sb, r1, r8",
            "add sb, r3, sb",
            "ldrd r2, r3, [sp, 0x10]",
            "adds r2, r2, r8",
            "adc r3, r3, sb",
            "strd r2, r3, [sp, 0x10]",
            "ldr r3, [sp, 0x24]",
            "cmp r7, r3",
            "blt 0x41f44",
            "ldr r3, [sp, 0x58]",
            "cmp r3, 0",
            "beq 0x421b4",
            "ldr r0, [r5, 0x1c]",
            "mov r1, 0x10",
            "ldr r2, [0x000421d0]",
            "str fp, [sp]",
            "str sl, [sp, 4]",
            "ldr r3, [ip]",
            "str r3, [sp, 8]",
            "add r2, r6, r2",
            "bl sym.imp.av_log",
            "ldr r0, [0x000421d4]",
            "add sp, sp, 0x2c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00042680": {
        "function_address": "0x00042680",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r4, r0",
            "mov r5, r1",
            "mov r7, r2",
            "mov r6, 0",
            "b 0x426c0",
            "mov r0, r4",
            "bl sym.avio_r8",
            "ldrb r3, [r5]",
            "cmp r0, r3",
            "moveq r6, r8",
            "beq 0x426bc",
            "ldrb r3, [r5, r6]",
            "cmp r0, r3",
            "mvnne r6, 0",
            "add r6, r6, 1",
            "cmp r6, r7",
            "bhs 0x426d8",
            "mov r0, r4",
            "bl sym.url_feof",
            "subs r8, r0, 0",
            "beq 0x42698",
            "cmp r6, r7",
            "movne r0, 0",
            "moveq r0, 1",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.00041e7c": {
        "function_address": "0x00041e7c",
        "instructions": [
            "mov r3, 1",
            "push {r0, r1, r2, lr}",
            "mov r2, 0",
            "str r3, [sp]",
            "mov r3, 0",
            "bl sym.avio_seek",
            "add sp, sp, 0xc",
            "ldm sp!, {pc}"
        ]
    },
    "fcn.000426e8": {
        "function_address": "0x000426e8",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r8, r0",
            "mov r6, 0x80",
            "mov r7, 0",
            "bl sym.avio_r8",
            "mov r2, r0",
            "asr r3, r2, 0x1f",
            "and r6, r6, r2",
            "and r7, r7, r3",
            "orrs r1, r6, r7",
            "beq 0x42760",
            "and r6, r0, 0x7f",
            "cmp r6, 8",
            "movle r2, 0",
            "movle r3, 0",
            "ble 0x4274c",
            "b 0x42758",
            "lsl r5, r3, 8",
            "lsl r4, r2, 8",
            "orr r5, r5, r2, lsr 24",
            "mov r0, r8",
            "sub r6, r6, 1",
            "bl sym.avio_r8",
            "orr r3, r5, r0, asr 31",
            "orr r2, r4, r0",
            "cmp r6, 0",
            "bne 0x4272c",
            "b 0x42760",
            "ldr r2, [0x0004276c]",
            "mov r3, 0",
            "mov r0, r2",
            "mov r1, r3",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.00041dc4": {
        "function_address": "0x00041dc4",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sl, lr}",
            "mov sl, r0",
            "ldr r3, [0x00041e24]",
            "mov r6, r1",
            "mov r4, 0",
            "mov r7, 0x14",
            "ldr r8, [0x00041e28]",
            "add r3, pc, r3",
            "add r8, r3, r8",
            "mla r5, r7, r4, r8",
            "mov r0, sl",
            "mov r2, 0x10",
            "add r1, r5, 4",
            "bl sym.imp.memcmp",
            "cmp r0, 0",
            "bne 0x41e10",
            "ldr r3, [r5]",
            "str r3, [r6]",
            "pop {r3, r4, r5, r6, r7, r8, sl, pc}",
            "add r4, r4, 1",
            "cmp r4, 0xd",
            "bne 0x41de8",
            "mvn r0, 0",
            "pop {r3, r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "fcn.00042770": {
        "function_address": "0x00042770",
        "instructions": [
            "ldr r3, [0x00042814]",
            "mov r2, 4",
            "push {r4, r5, r6, lr}",
            "mov r4, r0",
            "ldr r6, [0x00042818]",
            "mov r0, r1",
            "add r3, pc, r3",
            "mov r5, r1",
            "add r6, r3, r6",
            "add r6, r6, 0x20",
            "mov r1, r6",
            "bl fcn.00042680",
            "cmp r0, 0",
            "ldreq r0, [0x0004281c]",
            "popeq {r4, r5, r6, pc}",
            "mov r0, r5",
            "bl fcn.00041e7c",
            "mvn r2, 3",
            "mvn r3, 0",
            "adds r2, r2, r0",
            "mov r0, r4",
            "adc r3, r3, r1",
            "mov r1, r6",
            "strd r2, r3, [r4, 0x10]",
            "mov r2, 4",
            "bl sym.imp.memcpy",
            "add r1, r4, 4",
            "mov r2, 0xc",
            "mov r0, r5",
            "bl sym.avio_read",
            "mov r0, r5",
            "bl fcn.000426e8",
            "cmn r0, 1",
            "str r0, [r4, 0x18]",
            "str r1, [r4, 0x1c]",
            "bne 0x4280c",
            "cmn r1, 1",
            "moveq r0, r1",
            "popeq {r4, r5, r6, pc}",
            "mov r0, 0",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.000424d0": {
        "function_address": "0x000424d0",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r5, r0",
            "mov r4, 0",
            "add r6, r1, 0xc",
            "b 0x4250c",
            "ldr r3, [r5, 0x18]",
            "mov r0, r6",
            "mov r2, 4",
            "ldr r3, [r3, r4, lsl 2]",
            "ldr r1, [r3, 0x14]",
            "add r1, r1, 0x2c",
            "bl sym.imp.memcmp",
            "cmp r0, 0",
            "beq 0x42524",
            "add r4, r4, 1",
            "ldr r3, [r5, 0x14]",
            "cmp r4, r3",
            "blo 0x424e4",
            "cmp r3, 1",
            "mvnne r4, 0",
            "moveq r4, 0",
            "mov r0, r4",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.00041e9c": {
        "function_address": "0x00041e9c",
        "instructions": [
            "ldr r3, [r0, 0x1c]",
            "push {r0, r1, r2, r4, r5, lr}",
            "mov r4, r0",
            "ldr r0, [r3, 0x10]",
            "ldr r3, [r4, 0x60]",
            "cmp r3, 0",
            "moveq r0, r3",
            "beq 0x41f04",
            "ldr r1, [r4, 0x5c]",
            "ldrd r2, r3, [r3, 0x10]",
            "adds r2, r2, r1",
            "adc r3, r3, r1, asr 31",
            "ldr r1, [r4, 0x6c]",
            "cmp r1, r3",
            "blo 0x41ee8",
            "bne 0x41f00",
            "ldr r1, [r4, 0x68]",
            "cmp r1, r2",
            "bhs 0x41f00",
            "mov r5, 0",
            "str r5, [sp]",
            "bl sym.avio_seek",
            "str r5, [r4, 0x60]",
            "mov r0, 1",
            "b 0x41f04",
            "mov r0, 0",
            "pop {r1, r2, r3, r4, r5, pc}"
        ]
    },
    "fcn.0004252c": {
        "function_address": "0x0004252c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "subs r6, r1, 0",
            "mov r7, r0",
            "mov r8, r2",
            "movne r4, 0",
            "beq 0x4259c",
            "b 0x42588",
            "ldr r3, [r7, 0x14]",
            "mov r0, r6",
            "mov r2, 0x10",
            "ldr r5, [r3, r4, lsl 2]",
            "mov r1, r5",
            "bl sym.imp.memcmp",
            "cmp r0, 0",
            "bne 0x42584",
            "cmp r8, 0",
            "beq 0x4257c",
            "ldr r3, [r5, 0x10]",
            "cmp r3, r8",
            "bne 0x42584",
            "mov r0, r5",
            "pop {r4, r5, r6, r7, r8, pc}",
            "add r4, r4, 1",
            "ldr r3, [r7, 0x18]",
            "cmp r4, r3",
            "blt 0x42548",
            "mov r0, 0",
            "pop {r4, r5, r6, r7, r8, pc}",
            "mov r0, r6",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.000455e4": {
        "function_address": "0x000455e4",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sl, lr}",
            "mov r8, r0",
            "ldr r4, [r0, 0xc]",
            "mov r5, r1",
            "ldm r4, {r6, r7}",
            "rsb r7, r6, r7",
            "adds r2, r1, r7",
            "mvnhs r0, 0xb",
            "pophs {r3, r4, r5, r6, r7, r8, sl, pc}",
            "mov r0, r6",
            "add r1, r4, 0xc",
            "add r2, r2, 0x10",
            "ldr sl, [r4, 8]",
            "bl sym.imp.av_fast_realloc",
            "cmp r0, 0",
            "str r0, [r4]",
            "beq 0x4566c",
            "ldr r3, [r4, 8]",
            "add r1, r0, r7",
            "ldr r2, [r4, 0x18]",
            "str r1, [r4, 4]",
            "cmp r3, 0",
            "rsbne r6, r6, sl",
            "add r1, r1, r2",
            "addne r0, r0, r6",
            "rsb r2, r2, r5",
            "strne r0, [r4, 8]",
            "ldr r0, [r8, 0x10]",
            "bl sym.avio_read",
            "cmp r0, 0",
            "ldrge r3, [r4, 0x18]",
            "addge r3, r3, r0",
            "strge r3, [r4, 0x18]",
            "pop {r3, r4, r5, r6, r7, r8, sl, pc}",
            "mvn r0, 0xb",
            "pop {r3, r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "fcn.00045d60": {
        "function_address": "0x00045d60",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r7, 0x7d000",
            "ldr r5, [r0, 0xc]",
            "mov r4, 0",
            "movw fp, 0xefbe",
            "ldr r8, [r0, 0x10]",
            "ldr sb, [0x00045dec]",
            "ldr sl, [0x00045df0]",
            "mov r0, r8",
            "bl sym.url_feof",
            "subs r6, r0, 0",
            "movne r3, 0",
            "strne r3, [r5, 0x10]",
            "bne 0x45de0",
            "lsl r4, r4, 8",
            "mov r0, r8",
            "bl sym.avio_r8",
            "orr r4, r0, r4",
            "uxth r3, r4",
            "cmp r3, fp",
            "moveq r3, 5",
            "beq 0x45dd0",
            "cmp r4, sb",
            "moveq r3, 1",
            "beq 0x45dd0",
            "cmp r4, sl",
            "bne 0x45dd8",
            "mov r3, 3",
            "str r3, [r5, 0x10]",
            "b 0x45de4",
            "subs r7, r7, 1",
            "bne 0x45d80",
            "mvn r6, 0",
            "mov r0, r6",
            "pop {r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00045f00": {
        "function_address": "0x00045f00",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x3c",
            "ldr r7, [r0, 0x10]",
            "ldr r1, [0x00046254]",
            "str r0, [sp, 0x1c]",
            "ldr r4, [r0, 0xc]",
            "mov r0, r7",
            "add r1, pc, r1",
            "str r1, [sp, 0x20]",
            "bl sym.avio_rl32",
            "mov sl, r0",
            "mov r0, r7",
            "bl sym.avio_rl32",
            "str r0, [sp, 0x24]",
            "mov r0, r7",
            "bl sym.avio_rl16",
            "mov sb, r0",
            "mov r0, r7",
            "bl sym.avio_rl16",
            "str r0, [sp, 0x28]",
            "mov r0, r7",
            "bl sym.avio_r8",
            "tst r0, 0x80",
            "mov r5, r0",
            "moveq r6, 1",
            "beq 0x45fb4",
            "ubfx r6, r0, 2, 5",
            "and r5, r0, 3",
            "cmp r6, 0xf",
            "subgt r3, r6, 0xf",
            "addle r6, r6, 1",
            "movle r3, 1",
            "movgt r6, 1",
            "tst r0, 1",
            "movne r2, 0x3e8",
            "mulne r3, r2, r3",
            "addne r2, r2, 1",
            "mulne r6, r2, r6",
            "cmp r5, 3",
            "addeq r5, r5, 0x15",
            "beq 0x45fb0",
            "cmp r5, 2",
            "addeq r5, r5, 0x17",
            "movne r5, 0x1e",
            "mul r5, r5, r3",
            "mov r0, r7",
            "bl sym.avio_rl16",
            "ldr r2, [sp, 0x1c]",
            "strh r0, [r4, 0xbc]",
            "str r5, [r4, 0xc0]",
            "ldr r8, [r2, 0x14]",
            "str r6, [r4, 0xc4]",
            "cmp r8, 0",
            "bne 0x46230",
            "ldr r3, [sp, 0x24]",
            "uxth sb, sb",
            "str sl, [r4, 0xb0]",
            "strh sb, [r4, 0xb8]",
            "str r3, [r4, 0xb4]",
            "ldr r3, [0x00046258]",
            "strh sb, [r4, 0xba]",
            "cmp sl, r3",
            "beq 0x46178",
            "mov r0, r2",
            "mov r1, r8",
            "bl sym.avformat_new_stream",
            "subs r7, r0, 0",
            "beq 0x46240",
            "str r8, [r7, 4]",
            "mov r0, 0x1c",
            "bl sym.imp.av_mallocz",
            "cmp r0, 0",
            "beq 0x46240",
            "str r0, [r7, 0x14]",
            "ldr fp, [r7, 8]",
            "ldr r1, [sp, 0x20]",
            "ldr r0, [0x0004625c]",
            "str r8, [fp, 0xd0]",
            "str sl, [fp, 0xd8]",
            "add r0, r1, r0",
            "mov r1, sl",
            "bl fcn.0006ffc8",
            "ldr r1, [sp, 0x28]",
            "mov sl, r8",
            "ldr r3, [r7, 8]",
            "str r0, [fp, 0xd4]",
            "mov r0, r7",
            "uxth r2, r1",
            "str sb, [r3, 0x28]",
            "mov r1, 0x40",
            "str r2, [r3, 0x2c]",
            "mov r2, 0x18",
            "str r2, [r3, 0x174]",
            "mov r2, r6",
            "mov r3, r5",
            "mov sb, 1",
            "bl sym.avpriv_set_pts_info",
            "mov r2, 0",
            "mov r3, 0",
            "strd r2, r3, [r7, 0x50]",
            "mov r2, r5",
            "asr r3, r2, 0x1f",
            "strd r2, r3, [sp, 0x28]",
            "mov r3, 0x3e8",
            "mul r6, r3, r6",
            "ldrd r0, r1, [r4, 0xa8]",
            "mov r2, r6",
            "asr r3, r2, 0x1f",
            "mov r6, r8",
            "strd r2, r3, [sp, 0x30]",
            "mov r8, r5",
            "strd r2, r3, [sp]",
            "ldrd r2, r3, [sp, 0x28]",
            "bl sym.imp.av_rescale",
            "strd r0, r1, [r7, 0x58]",
            "b 0x46168",
            "ldr r5, [r4, 0xc8]",
            "cmp r5, 0",
            "beq 0x46108",
            "ldr r3, [r4, 8]",
            "mov r0, r7",
            "ldr r2, [r3, r6, lsl 2]",
            "ldr r3, [r5, r6, lsl 2]",
            "str sl, [sp, 4]",
            "str sl, [sp, 8]",
            "str r3, [sp]",
            "mov r3, sl",
            "str sl, [sp, 0xc]",
            "str sb, [sp, 0x10]",
            "b 0x46160",
            "ldr ip, [r4, 0xac]",
            "mov r0, r6",
            "asr r1, r0, 0x1f",
            "ldr r3, [r4, 0xa8]",
            "mul ip, r6, ip",
            "mla ip, r3, r1, ip",
            "umull r0, r1, r3, r6",
            "asr r3, r2, 0x1f",
            "add r1, ip, r1",
            "bl fcn.0007ded0",
            "ldrd r2, r3, [sp, 0x30]",
            "strd r2, r3, [sp]",
            "ldrd r2, r3, [sp, 0x28]",
            "bl sym.imp.av_rescale",
            "ldr r3, [r4, 8]",
            "ldr r2, [r3, r6, lsl 2]",
            "mov r3, r5",
            "strd r0, r1, [sp]",
            "mov r0, r7",
            "str r5, [sp, 8]",
            "str r5, [sp, 0xc]",
            "str sb, [sp, 0x10]",
            "add r6, r6, 1",
            "bl sym.av_add_index_entry",
            "ldr r2, [r4, 0xc]",
            "cmp r6, r2",
            "blt 0x460d0",
            "mov r5, r8",
            "ldr r3, [0x00046258]",
            "ldr r1, [sp, 0x24]",
            "cmp r1, r3",
            "beq 0x46230",
            "ldr r0, [sp, 0x1c]",
            "mov r1, 0",
            "bl sym.avformat_new_stream",
            "subs r6, r0, 0",
            "beq 0x46240",
            "mov r7, 1",
            "mov r0, 0x1c",
            "str r7, [r6, 4]",
            "bl sym.imp.av_mallocz",
            "cmp r0, 0",
            "beq 0x46240",
            "str r0, [r6, 0x14]",
            "ldr r3, [sp, 0x20]",
            "ldr r0, [0x0004625c]",
            "ldr r8, [r6, 8]",
            "ldr r2, [sp, 0x24]",
            "add r0, r3, r0",
            "str r7, [r8, 0xd0]",
            "add r0, r0, 0x68",
            "mov r1, r2",
            "str r2, [r8, 0xd8]",
            "bl fcn.0006ffc8",
            "mov r3, 0x3e8",
            "str r0, [r8, 0xd4]",
            "mov r1, 0x40",
            "mov r0, r6",
            "mov r2, r7",
            "mul r3, r3, r5",
            "str r7, [r6, 0x60]",
            "bl sym.avpriv_set_pts_info",
            "mov r2, 0",
            "mov r3, 0",
            "strd r2, r3, [r6, 0x50]",
            "mov r0, r5",
            "asr r1, r0, 0x1f",
            "ldr r3, [r4, 0xac]",
            "ldr r2, [r4, 0xa8]",
            "mul r3, r5, r3",
            "mla r1, r2, r1, r3",
            "umull r2, r3, r2, r5",
            "add r3, r1, r3",
            "strd r2, r3, [r6, 0x58]",
            "mov r3, 4",
            "mov r0, 0",
            "str r3, [r4, 0x10]",
            "b 0x4624c",
            "mvn r0, 0",
            "mov r3, 0",
            "str r3, [r4, 0x10]",
            "add sp, sp, 0x3c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00046260": {
        "function_address": "0x00046260",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r3, 0",
            "ldr r4, [r0, 0xc]",
            "sub sp, sp, 0x1c",
            "mov r7, r0",
            "str r1, [sp, 0xc]",
            "ldr r2, [r4, 0x28]",
            "ldr r5, [r0, 0x10]",
            "str r3, [sp, 0x10]",
            "cmp r2, r3",
            "str r3, [sp, 0x14]",
            "movne r6, r3",
            "bne 0x465d4",
            "ldr r6, [r4, 0x70]",
            "cmp r6, r3",
            "movne r6, r2",
            "bne 0x465d4",
            "mov r0, r5",
            "bl sym.url_feof",
            "cmp r0, 0",
            "bne 0x465d0",
            "mov r8, 0x12c",
            "b 0x462d0",
            "mov r0, r7",
            "bl fcn.00045d60",
            "subs r8, r8, 1",
            "mov r6, r0",
            "beq 0x462e0",
            "ldr r3, [r4, 0x10]",
            "cmp r3, 2",
            "cmpls r6, 0",
            "beq 0x462bc",
            "cmp r6, 0",
            "blt 0x465d4",
            "ldr r3, [r4, 0x10]",
            "cmp r3, 3",
            "bne 0x46304",
            "mov r0, r7",
            "bl fcn.00045f00",
            "subs r6, r0, 0",
            "blt 0x465d4",
            "ldr r3, [r4, 0x10]",
            "sub r3, r3, 4",
            "cmp r3, 1",
            "bhi 0x465d0",
            "mov r0, r5",
            "mov sl, 0",
            "bl sym.avio_r8",
            "uxtb fp, r0",
            "mov r0, r5",
            "bl sym.avio_rl16",
            "mov r8, r0",
            "mov r0, r5",
            "bl sym.avio_rl16",
            "lsr r3, fp, 4",
            "str r0, [sp, 8]",
            "and fp, fp, 0xf",
            "orr r8, r3, r8, lsl 4",
            "b 0x46380",
            "mov r0, r5",
            "add sl, sl, 1",
            "bl sym.avio_rl16",
            "uxth sb, r0",
            "mov r0, r5",
            "bl sym.avio_rl32",
            "mov r3, 0",
            "mov r0, r5",
            "mov r2, sb",
            "bl sym.avio_skip",
            "mvn r3, 5",
            "rsb r3, sb, r3",
            "add r8, r8, r3",
            "cmp sl, fp",
            "blt 0x4634c",
            "mov r0, r5",
            "bl sym.url_feof",
            "cmp r0, 0",
            "bne 0x465d0",
            "ldr r1, [sp, 8]",
            "uxth sl, r1",
            "cmp r8, 0",
            "cmpeq sl, 0",
            "streq r0, [r4, 0x10]",
            "beq 0x462a4",
            "ldr r2, [r7, 0x14]",
            "cmp r2, 0",
            "beq 0x463e8",
            "ldr r3, [r7, 0x18]",
            "add ip, sp, 0x18",
            "cmp r2, 1",
            "ldr r1, [r3]",
            "ldr r0, [r1, 4]",
            "add r0, ip, r0, lsl 2",
            "str r1, [r0, -8]",
            "ldrhi r3, [r3, 4]",
            "ldrhi r2, [r3, 4]",
            "addhi r2, ip, r2, lsl 2",
            "strhi r3, [r2, -8]",
            "cmp r8, 0",
            "beq 0x46454",
            "ldr r6, [sp, 0x10]",
            "cmp r6, 0",
            "beq 0x46454",
            "ldr r7, [r6, 0x14]",
            "mov r2, r8",
            "mov r0, r5",
            "add r1, r4, 0x18",
            "bl sym.av_get_packet",
            "ldr r3, [r6]",
            "cmp r8, 8",
            "movhs r8, 8",
            "ldr r2, [r7]",
            "str r3, [r4, 0x30]",
            "asr r3, r2, 0x1f",
            "strd r2, r3, [r4, 0x20]",
            "ldr r3, [r4, 0x34]",
            "ldr r2, [r4, 0x10]",
            "cmp r2, 4",
            "orreq r3, r3, 1",
            "str r3, [r4, 0x34]",
            "mov r3, 0",
            "b 0x4644c",
            "add r3, r3, 1",
            "cmp r3, r8",
            "blo 0x46448",
            "ldr r3, [sp, 0x10]",
            "cmp r3, 0",
            "ldrne r3, [r3, 0x14]",
            "ldrne r2, [r3]",
            "addne r2, r2, 1",
            "strne r2, [r3]",
            "cmp sl, 0",
            "beq 0x465c4",
            "ldr r7, [sp, 0x14]",
            "cmp r7, 0",
            "beq 0x465c4",
            "ldr r3, [r7, 8]",
            "add r8, r4, 0x60",
            "ldr r6, [r7, 0x14]",
            "ldr r2, [r3, 0xd8]",
            "ldr r3, [0x000465e0]",
            "cmp r2, r3",
            "bne 0x46518",
            "mov r0, r5",
            "sub sl, sl, 4",
            "bl sym.avio_r8",
            "mov r3, r0",
            "mov r0, r5",
            "str r3, [sp, 4]",
            "uxth sl, sl",
            "bl sym.avio_r8",
            "mov fp, r0",
            "mov r0, r5",
            "bl sym.avio_rl16",
            "ldr r1, [sp, 0xc]",
            "mov sb, r0",
            "ldr r3, [sp, 4]",
            "cmp r1, 0",
            "beq 0x46518",
            "mov r2, 0",
            "uxtb r0, r3",
            "str r2, [r7, 0x60]",
            "uxtb r1, fp",
            "ubfx sb, sb, 2, 0xe",
            "bl fcn.0007d19c",
            "uxtb r0, r0",
            "cmp r0, 8",
            "ldreq r3, [r7, 8]",
            "ldreq r2, [0x000465e4]",
            "streq r2, [r3, 0xd4]",
            "mov r2, 1",
            "ldr r3, [r7, 8]",
            "str r2, [r3, 0x40]",
            "str sb, [r3, 0x3c]",
            "mov r0, r5",
            "mov r1, r8",
            "mov r2, sl",
            "bl sym.av_get_packet",
            "ldr r3, [r7]",
            "str r3, [r4, 0x78]",
            "ldr r3, [r4, 0x10]",
            "cmp r3, 4",
            "ldr r3, [r4, 0x7c]",
            "orreq r3, r3, 1",
            "str r3, [r4, 0x7c]",
            "bne 0x465b8",
            "ldr r3, [sp, 0x10]",
            "cmp r3, 0",
            "beq 0x465b8",
            "ldr r3, [r3, 0x14]",
            "mov r2, 0x3e8",
            "ldr r0, [r4, 0xc4]",
            "smull r0, r1, r0, r2",
            "ldr r5, [r4, 0xc0]",
            "ldr r2, [r3]",
            "sub r2, r2, 1",
            "mov r8, r2",
            "asr sb, r8, 0x1f",
            "mul ip, r0, sb",
            "mov r8, r5",
            "asr sb, r8, 0x1f",
            "mla ip, r2, r1, ip",
            "umull r2, r3, r0, r2",
            "add r3, ip, r3",
            "ldrsh ip, [r4, 0xbc]",
            "mov r0, ip",
            "asr r1, r0, 0x1f",
            "mul r7, r5, r1",
            "umull r0, r1, r5, ip",
            "adds r2, r2, r0",
            "mla r7, ip, sb, r7",
            "add r1, r7, r1",
            "adc r3, r3, r1",
            "strd r2, r3, [r4, 0x68]",
            "ldr r3, [r6]",
            "add r3, r3, 1",
            "str r3, [r6]",
            "mov r6, 0",
            "str r6, [r4, 0x10]",
            "b 0x465d4",
            "mvn r6, 0",
            "mov r0, r6",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00046c7c": {
        "function_address": "0x00046c7c",
        "instructions": [
            "mov r3, 1",
            "push {r0, r1, r2, lr}",
            "mov r2, 0",
            "str r3, [sp]",
            "mov r3, 0",
            "bl sym.avio_seek",
            "add sp, sp, 0xc",
            "ldm sp!, {pc}"
        ]
    },
    "fcn.00046d0c": {
        "function_address": "0x00046d0c",
        "instructions": [
            "cmp r3, 0",
            "push {r0, r1, r2, r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r6, r0",
            "blt 0x46d28",
            "mov r1, 0",
            "str r1, [sp]",
            "bl sym.avio_seek",
            "mov r4, 0",
            "mov r5, 0",
            "ldr r7, [0x00046e18]",
            "ldr sl, [0x00046e1c]",
            "ldr fp, [0x00046e20]",
            "b 0x46df0",
            "lsl sb, r5, 8",
            "mov r0, r6",
            "lsl r8, r4, 8",
            "orr sb, sb, r4, lsr 24",
            "bl sym.avio_r8",
            "orr r5, sb, r0, asr 31",
            "orr r4, r8, r0",
            "lsr r3, r5, 0x18",
            "cmp r3, 0x4e",
            "bne 0x46df0",
            "cmp r4, r7",
            "bne 0x46d7c",
            "ldr r3, [0x00046e24]",
            "cmp r5, r3",
            "beq 0x46e08",
            "mov r0, r4",
            "mov r1, r5",
            "ldr r2, [0x00046e18]",
            "ldr r3, [0x00046e24]",
            "bl fcn.0007deac",
            "add r0, r0, 1",
            "cmp r0, 1",
            "bhi 0x46dc8",
            "ldr r3, [0x00046e28]",
            "cmp r4, r3",
            "bne 0x46db4",
            "ldr r3, [0x00046e2c]",
            "cmp r5, r3",
            "beq 0x46e08",
            "ldr r3, [0x00046e30]",
            "cmp r4, r3",
            "ldreq r3, [0x00046e34]",
            "bne 0x46df0",
            "b 0x46de8",
            "cmp r4, sl",
            "bne 0x46ddc",
            "ldr r3, [0x00046e38]",
            "cmp r5, r3",
            "beq 0x46e08",
            "cmp r4, fp",
            "bne 0x46df0",
            "ldr r3, [0x00046e3c]",
            "cmp r5, r3",
            "beq 0x46e08",
            "mov r0, r6",
            "bl sym.url_feof",
            "cmp r0, 0",
            "beq 0x46d40",
            "mov r4, 0",
            "mov r5, 0",
            "mov r0, r4",
            "mov r1, r5",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0007deac": {
        "function_address": "0x0007deac",
        "instructions": [
            "cmp r1, r3",
            "mvnlo r0, 0",
            "movhi r0, 1",
            "bxne lr",
            "cmp r0, r2",
            "mvnlo r0, 0",
            "movhi r0, 1",
            "moveq r0, 0",
            "bx lr"
        ]
    },
    "fcn.00046e40": {
        "function_address": "0x00046e40",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r6, r2",
            "mov r5, r3",
            "mov r4, r0",
            "ldrd r2, r3, [sp, 0x10]",
            "b 0x46e60",
            "mvn r2, 0",
            "mvn r3, 0",
            "mov r0, r4",
            "bl fcn.00046d0c",
            "cmp r0, r6",
            "bne 0x46e94",
            "cmp r1, r5",
            "bne 0x46e94",
            "mov r0, r4",
            "bl fcn.00046c7c",
            "mvn r2, 7",
            "mvn r3, 0",
            "adds r2, r2, r0",
            "adc r3, r3, r1",
            "b 0x46ea4",
            "orrs r1, r0, r1",
            "bne 0x46e58",
            "mvn r2, 0",
            "mvn r3, 0",
            "mov r0, r2",
            "mov r1, r3",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.00046bc4": {
        "function_address": "0x00046bc4",
        "instructions": [
            "ldr r3, [0x00046bf8]",
            "mov r1, 0",
            "ldr ip, [0x00046bfc]",
            "mov r2, r1",
            "push {r4, lr}",
            "mov r4, r0",
            "add r3, pc, r3",
            "ldr r0, [r0, 0xeb0]",
            "add r3, r3, ip",
            "bl sym.imp.av_tree_enumerate",
            "ldr r0, [r4, 0xeb0]",
            "pop {r4, lr}",
            "b sym.imp.av_tree_destroy"
        ]
    },
    "sym.imp.av_tree_enumerate": {
        "function_address": "0x00009f0c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x780]!"
        ]
    },
    "fcn.00019980": {
        "function_address": "0x00019980",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r5, r1",
            "mov r4, r2",
            "mov r6, r0",
            "mov r0, 3",
            "bl sym.imp.av_crc_get_table",
            "mov r1, r6",
            "mov r2, r5",
            "mov r3, r4",
            "pop {r4, r5, r6, lr}",
            "b sym.imp.av_crc"
        ]
    },
    "fcn.000473c4": {
        "function_address": "0x000473c4",
        "instructions": [
            "push {r0, r1, r2, r4, r5, r6, r7, r8, sl, lr}",
            "mov r6, r0",
            "mov r0, r2",
            "strd r2, r3, [sp]",
            "mov r4, 0",
            "mov r8, r1",
            "bl fcn.00046c00",
            "mov sl, r0",
            "ldr r0, [sp, 4]",
            "bl fcn.00046c00",
            "orr r2, r4, r0",
            "add r3, sp, 8",
            "mov r0, r2",
            "mov r1, sl",
            "strd r0, r1, [r3, -8]!",
            "mov r2, 8",
            "mov r0, r4",
            "mov r1, sp",
            "ldr r7, [0x000474ac]",
            "bl fcn.00019980",
            "ldr r3, [0x000474b0]",
            "mov r2, r0",
            "add r7, pc, r7",
            "str r0, [sp]",
            "mov r0, r6",
            "str r4, [sp, 4]",
            "ldr r1, [r7, r3]",
            "bl fcn.000199e0",
            "mov r0, r6",
            "bl fcn.00019cf4",
            "subs r5, r1, 0",
            "mov r4, r0",
            "bgt 0x47454",
            "bne 0x4745c",
            "cmp r0, 0x1000",
            "bls 0x4745c",
            "mov r0, r6",
            "bl sym.avio_rb32",
            "mov r0, r6",
            "bl fcn.000199ac",
            "cmp r0, 0",
            "beq 0x47480",
            "cmp r5, 0",
            "bgt 0x474a4",
            "bne 0x47480",
            "cmp r4, 0x1000",
            "bhi 0x474a4",
            "cmp r8, 0",
            "moveq r1, r8",
            "ldrne r3, [0x000474b0]",
            "ldrne r1, [r7, r3]",
            "mov r0, r6",
            "mov r2, 0",
            "bl fcn.000199e0",
            "mov r0, r4",
            "b 0x474a8",
            "mvn r0, 0",
            "pop {r1, r2, r3, r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "fcn.00046c00": {
        "function_address": "0x00046c00",
        "instructions": [
            "rev r0, r0",
            "bx lr"
        ]
    },
    "fcn.000199e0": {
        "function_address": "0x000199e0",
        "instructions": [
            "cmp r1, 0",
            "str r1, [r0, 0x44]",
            "ldrne r3, [r0, 8]",
            "strne r2, [r0, 0x3c]",
            "strne r3, [r0, 0x40]",
            "bx lr"
        ]
    },
    "fcn.000199ac": {
        "function_address": "0x000199ac",
        "instructions": [
            "ldr r1, [r0, 0x40]",
            "ldr r2, [r0, 8]",
            "push {r4, lr}",
            "mov r4, r0",
            "ldr r3, [r0, 0x44]",
            "rsb r2, r1, r2",
            "ldr r0, [r0, 0x3c]",
            "blx r3",
            "mov r3, 0",
            "str r0, [r4, 0x3c]",
            "str r3, [r4, 0x44]",
            "pop {r4, pc}"
        ]
    },
    "fcn.000469dc": {
        "function_address": "0x000469dc",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x34",
            "add r3, sp, 0x28",
            "mov r8, r1",
            "asr sb, r8, 0x1f",
            "mov r4, 0",
            "mov r6, r0",
            "stm r3, {r1, r2}",
            "mov r5, r4",
            "ldr r3, [r0]",
            "ldr sl, [sp, 0x2c]",
            "strd r8, sb, [sp, 0x18]",
            "ldr ip, [r3, 0x14]",
            "asr fp, sl, 0x1f",
            "mov r7, ip",
            "b 0x46a9c",
            "ldr r8, [r6, 0xe90]",
            "add r5, r5, 1",
            "ldr lr, [sp, 0x1c]",
            "add r8, r8, r4",
            "add r4, r4, 0x28",
            "ldr r1, [r8, 0x14]",
            "ldr r0, [r1, 4]",
            "mov r2, r0",
            "asr r3, r2, 0x1f",
            "mul ip, r0, lr",
            "ldr lr, [sp, 0x18]",
            "mla ip, lr, r3, ip",
            "umull r2, r3, r0, lr",
            "strd r2, r3, [sp, 0x10]",
            "ldr r2, [r1]",
            "mov lr, 2",
            "str lr, [sp, 8]",
            "add r3, ip, r3",
            "mov r0, r2",
            "asr r1, r0, 0x1f",
            "str r3, [sp, 0x14]",
            "strd r0, r1, [sp, 0x20]",
            "mul r1, r2, fp",
            "ldr r3, [sp, 0x24]",
            "mla r1, sl, r3, r1",
            "umull r2, r3, r2, sl",
            "add r3, r1, r3",
            "ldrd r0, r1, [sp, 0x58]",
            "strd r2, r3, [sp]",
            "ldrd r2, r3, [sp, 0x10]",
            "bl sym.imp.av_rescale_rnd",
            "strd r0, r1, [r8, 8]",
            "cmp r5, r7",
            "bne 0x46a1c",
            "add sp, sp, 0x34",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.imp.av_rescale_rnd": {
        "function_address": "0x0000993c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0xb60]!"
        ]
    },
    "fcn.00046c9c": {
        "function_address": "0x00046c9c",
        "instructions": [
            "push {r0, r1, r4, r5, r6, r8, sb, lr}",
            "mov r4, r2",
            "mov r5, r3",
            "mov r6, r0",
            "bl fcn.00046c7c",
            "mov r2, r4",
            "mov r3, r5",
            "subs r2, r2, r0",
            "sbc r3, r3, r1",
            "cmp r3, 0",
            "movge r4, r2",
            "movge r5, r3",
            "mvnge r8, 0",
            "mvnge sb, 0",
            "bge 0x46d00",
            "mov r1, 1",
            "mov r0, r6",
            "str r1, [sp]",
            "bl sym.avio_seek",
            "mvn r0, 0",
            "b 0x46d08",
            "mov r0, r6",
            "bl sym.avio_r8",
            "adds r4, r4, r8",
            "adc r5, r5, sb",
            "orrs r0, r4, r5",
            "bne 0x46cf0",
            "pop {r2, r3, r4, r5, r6, r8, sb, pc}"
        ]
    },
    "fcn.00046b30": {
        "function_address": "0x00046b30",
        "instructions": [
            "push {r0, r1, r4, r5, r6, r7, r8, lr}",
            "mov r8, r0",
            "ldr r7, [0x00046bb8]",
            "mov r0, 0x18",
            "mov r4, r2",
            "mov r5, r3",
            "bl sym.imp.av_mallocz",
            "ldr r3, [0x00046bbc]",
            "add r7, pc, r7",
            "mov r6, r0",
            "ldr r3, [r7, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.av_mallocz",
            "ldrd r2, r3, [sp, 0x20]",
            "add ip, sp, 8",
            "str r0, [ip, -4]!",
            "mov r1, r6",
            "add r0, r8, 0xeb0",
            "strd r4, r5, [r6]",
            "strd r2, r3, [r6, 8]",
            "ldrd r2, r3, [sp, 0x28]",
            "strd r2, r3, [r6, 0x10]",
            "ldr r3, [0x00046bc0]",
            "ldr r2, [r7, r3]",
            "mov r3, ip",
            "bl sym.imp.av_tree_insert",
            "ldr r3, [sp, 4]",
            "cmp r3, 0",
            "beq 0x46bb4",
            "mov r0, r6",
            "bl sym.imp.av_free",
            "ldr r0, [sp, 4]",
            "bl sym.imp.av_free",
            "pop {r2, r3, r4, r5, r6, r7, r8, pc}"
        ]
    },
    "sym.imp.av_tree_insert": {
        "function_address": "0x00009ea0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x7c8]!"
        ]
    },
    "fcn.000474b4": {
        "function_address": "0x000474b4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r0",
            "ldr sb, [r0]",
            "sub sp, sp, 0x44",
            "mov fp, 0xea0",
            "str r2, [sp, 0x2c]",
            "ldr r5, [sb, 0x10]",
            "str r1, [sp, 0x3c]",
            "ldr sl, [0x000476cc]",
            "mov r0, r5",
            "bl fcn.00046c7c",
            "mvn r2, 7",
            "mvn r3, 0",
            "adds r2, r2, r0",
            "mov r0, r5",
            "adc r3, r3, r1",
            "mov r1, 1",
            "strd r2, r3, [r4, fp]",
            "add sl, pc, sl",
            "ldr r2, [0x000476d0]",
            "ldr r3, [0x000476d4]",
            "bl fcn.000473c4",
            "str r0, [sp, 0x18]",
            "mov r0, r5",
            "bl fcn.00046c7c",
            "strd r0, r1, [sp, 0x30]",
            "mov r0, r5",
            "bl fcn.00019cf4",
            "mov r6, r0",
            "mov r8, r1",
            "ldrd r0, r1, [r4, fp]",
            "strd r0, r1, [sp, 0x20]",
            "mov r0, r5",
            "bl fcn.00019cf4",
            "lsl r3, r1, 4",
            "lsl r2, r0, 4",
            "orr r3, r3, r0, lsr 28",
            "ldrd r0, r1, [sp, 0x20]",
            "subs r2, r0, r2",
            "sbc r3, r1, r3",
            "ldr r1, [sp, 0x2c]",
            "cmp r3, 0",
            "strd r2, r3, [r1]",
            "blt 0x476c0",
            "ldr ip, [r4, 0xe9c]",
            "mov r0, r6",
            "mov r1, r8",
            "mov r3, 0",
            "mov r2, ip",
            "str ip, [sp, 0x14]",
            "bl fcn.0007ded0",
            "ldr ip, [sp, 0x14]",
            "mov r3, 0",
            "str r2, [sp, 0x20]",
            "mov r0, r6",
            "mov r1, r8",
            "ldr r7, [r4, 0xeac]",
            "mov r2, ip",
            "bl fcn.0007ded0",
            "ldr r2, [sp, 0x20]",
            "strd r0, r1, [sp]",
            "mov r0, r4",
            "add r7, r7, r2, lsl 3",
            "ldm r7, {r1, r2}",
            "bl fcn.000469dc",
            "ldrd r2, r3, [sp, 0x30]",
            "mov r0, r5",
            "ldr ip, [sp, 0x18]",
            "adds r2, r2, ip",
            "adc r3, r3, ip, asr 31",
            "bl fcn.00046c9c",
            "cmp r0, 0",
            "bne 0x475e8",
            "mov r0, r5",
            "bl fcn.000199ac",
            "subs r5, r0, 0",
            "beq 0x47600",
            "ldr r2, [0x000476d8]",
            "mov r0, sb",
            "mov r1, 0x10",
            "add r2, sl, r2",
            "bl sym.imp.av_log",
            "b 0x476c0",
            "ldr r7, [sb, 0x14]",
            "mov r0, r6",
            "mov r1, r8",
            "mov r3, r5",
            "mov r2, r7",
            "bl fcn.0007ded0",
            "ldr sb, [r4, 0xeac]",
            "mov r3, r5",
            "mov sl, r2",
            "mov r0, r6",
            "mov r1, r8",
            "add ip, sb, r2, lsl 3",
            "mov r2, r7",
            "str ip, [sp, 0x14]",
            "bl fcn.0007ded0",
            "bl fcn.0007d70c",
            "strd r0, r1, [sp, 0x18]",
            "ldr r0, [sb, sl, lsl 3]",
            "bl fcn.0007d690",
            "ldr ip, [sp, 0x14]",
            "mov r6, r0",
            "mov r7, r1",
            "ldr r0, [ip, 4]",
            "bl fcn.0007d690",
            "mov r2, r0",
            "mov r3, r1",
            "mov r0, r6",
            "mov r1, r7",
            "bl fcn.0007d9d8",
            "mov r2, r0",
            "mov r3, r1",
            "ldrd r0, r1, [sp, 0x18]",
            "bl fcn.0007d76c",
            "mov r2, 0",
            "ldr r3, [0x000476dc]",
            "bl fcn.0007d76c",
            "bl sym.imp.__aeabi_d2lz",
            "ldr r2, [sp, 0x3c]",
            "ldr ip, [sp, 0x2c]",
            "strd r0, r1, [r2]",
            "ldrd r6, r7, [ip]",
            "ldrd r2, r3, [r4, fp]",
            "strd r0, r1, [sp, 8]",
            "mov r0, r4",
            "strd r6, r7, [sp]",
            "bl fcn.00046b30",
            "mov r0, r5",
            "b 0x476c4",
            "mvn r0, 0",
            "add sp, sp, 0x44",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0004729c": {
        "function_address": "0x0004729c",
        "instructions": [
            "push {r3, lr}",
            "bl fcn.00019cf4",
            "mov r2, 1",
            "mov r3, 0",
            "adds r2, r2, r0",
            "adc r3, r3, r1",
            "and r1, r2, 1",
            "cmp r1, 0",
            "beq 0x472d4",
            "asrs r3, r3, 1",
            "rrx r2, r2",
            "rsbs r2, r2, 0",
            "rsc r3, r3, 0",
            "b 0x472dc",
            "asrs r3, r3, 1",
            "rrx r2, r2",
            "mov r0, r2",
            "mov r1, r3",
            "pop {r3, pc}"
        ]
    },
    "fcn.0004733c": {
        "function_address": "0x0004733c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r5, r2",
            "mov r7, r0",
            "mov r6, r1",
            "subs r8, r5, 0",
            "movne r8, 1",
            "bl fcn.00019cf4",
            "cmp r0, 0",
            "cmpne r5, 0",
            "mov r4, r0",
            "beq 0x47390",
            "mov r0, r7",
            "mov r1, r6",
            "cmp r4, r5",
            "movlo r2, r4",
            "movhs r2, r5",
            "bl sym.avio_read",
            "b 0x47390",
            "sub r4, r4, 1",
            "mov r0, r7",
            "bl sym.avio_r8",
            "cmp r4, r5",
            "bhi 0x47384",
            "cmp r8, 0",
            "beq 0x473b4",
            "sub r3, r5, 1",
            "mov r2, 0",
            "cmp r4, r3",
            "movlo r3, r4",
            "strb r2, [r6, r3]",
            "cmp r5, r4",
            "mvneq r0, 0",
            "movne r0, 0",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.000478c0": {
        "function_address": "0x000478c0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x660",
            "ldr r6, [r0]",
            "sub sp, sp, 0xc",
            "mov r1, 1",
            "mov r8, r0",
            "ldr r3, [0x00047d64]",
            "ldr r5, [r6, 0x10]",
            "ldr r2, [0x00047d68]",
            "ldr r4, [0x00047d6c]",
            "mov r0, r5",
            "bl fcn.000473c4",
            "str r0, [sp, 0x3c]",
            "mov r0, r5",
            "bl fcn.00046c7c",
            "strd r0, r1, [sp, 0x40]",
            "mov r0, r5",
            "bl fcn.00019cf4",
            "cmp r1, 0",
            "add r4, pc, r4",
            "mov r7, r0",
            "ldr r3, [r6, 0x14]",
            "bhi 0x47928",
            "bne 0x47948",
            "cmp r7, r3",
            "bls 0x47948",
            "ldr r2, [0x00047d70]",
            "mov r0, r6",
            "str r1, [sp, 4]",
            "mov r1, 0x10",
            "str r7, [sp]",
            "add r2, r4, r2",
            "bl sym.imp.av_log",
            "b 0x47d54",
            "mov r0, r5",
            "bl fcn.0004729c",
            "str r0, [sp, 0x50]",
            "mov r0, r5",
            "bl fcn.00019cf4",
            "strd r0, r1, [sp, 0x28]",
            "mov r0, r5",
            "bl fcn.00019cf4",
            "strd r0, r1, [sp, 0x30]",
            "mov r0, r5",
            "bl fcn.00019cf4",
            "str r0, [sp, 0x4c]",
            "ldr r0, [sp, 0x50]",
            "subs r3, r0, 0",
            "movne r3, 1",
            "cmp r7, 0",
            "movne r3, 0",
            "cmp r3, 0",
            "beq 0x47a08",
            "ldr fp, [r8, 0xe9c]",
            "mov sl, 0",
            "mov r3, sl",
            "ldrd r0, r1, [sp, 0x28]",
            "mov r2, fp",
            "bl fcn.0007df14",
            "mov r3, sl",
            "str r0, [sp, 0x20]",
            "str r1, [sp, 0x24]",
            "mov r2, fp",
            "ldrd r0, r1, [sp, 0x28]",
            "bl fcn.0007df14",
            "ldr r3, [r8, 0xeac]",
            "ldrd r8, sb, [sp, 0x20]",
            "str sl, [sp, 0x10]",
            "strd r8, sb, [sp]",
            "mov r0, r8",
            "mov r1, sb",
            "ldrd r8, sb, [sp, 0x30]",
            "add r3, r3, r2, lsl 3",
            "adds r0, r0, r8",
            "adc r1, r1, sb",
            "strd r0, r1, [sp, 8]",
            "mov r0, r6",
            "ldr r1, [sp, 0x50]",
            "ldm r3, {r2, r3}",
            "bl sym.avpriv_new_chapter",
            "add sl, r0, 0x20",
            "b 0x47a24",
            "cmp r7, 0",
            "ldrne r3, [r6, 0x18]",
            "subne r2, r7, 1",
            "addeq sl, r6, 0x4b0",
            "addeq sl, sl, 8",
            "ldrne sl, [r3, r2, lsl 2]",
            "addne sl, sl, 0x138",
            "ldr r3, [0x00047d74]",
            "mov sb, 0",
            "ldr r0, [0x00047d78]",
            "str sb, [sp, 0x20]",
            "add r3, r4, r3",
            "ldr sb, [sp, 0x50]",
            "str r3, [sp, 0x54]",
            "ldr r3, [0x00047d7c]",
            "str r0, [sp, 0x28]",
            "add r3, r4, r3",
            "str r3, [sp, 0x58]",
            "ldr r3, [0x00047d80]",
            "add r3, r4, r3",
            "str r3, [sp, 0x5c]",
            "ldr r3, [0x00047d84]",
            "add r3, r4, r3",
            "str r3, [sp, 0x60]",
            "b 0x47d00",
            "add r1, sp, 0x560",
            "mov r2, 0x100",
            "add r1, r1, 8",
            "mov r0, r5",
            "bl fcn.0004733c",
            "mov r0, r5",
            "bl fcn.0004729c",
            "cmn r0, 1",
            "bne 0x47ab4",
            "cmn r1, 1",
            "bne 0x47b34",
            "add r1, sp, 0x68",
            "mov r0, r5",
            "mov r2, 0x400",
            "bl fcn.0004733c",
            "ldr r1, [sp, 0x28]",
            "add r0, r4, r1",
            "b 0x47b5c",
            "cmn r0, 2",
            "bne 0x47af4",
            "cmn r1, 1",
            "bne 0x47b34",
            "add r8, sp, 0x460",
            "mov r2, 0x100",
            "add r8, r8, 8",
            "mov r0, r5",
            "mov r1, r8",
            "bl fcn.0004733c",
            "mov r0, r5",
            "add r1, sp, 0x68",
            "mov r2, 0x400",
            "bl fcn.0004733c",
            "mov r0, r8",
            "b 0x47b5c",
            "cmn r0, 3",
            "bne 0x47b14",
            "cmn r1, 1",
            "bne 0x47b34",
            "mov r0, r5",
            "bl fcn.0004729c",
            "ldr r0, [sp, 0x60]",
            "b 0x47b5c",
            "cmn r0, 4",
            "bne 0x47b34",
            "cmn r1, 1",
            "bne 0x47b34",
            "mov r0, r5",
            "bl fcn.00019cf4",
            "ldr r0, [sp, 0x5c]",
            "b 0x47b5c",
            "cmn r1, 1",
            "blt 0x47b48",
            "bne 0x47b58",
            "cmn r0, 4",
            "bhs 0x47b58",
            "mov r0, r5",
            "bl fcn.0004729c",
            "ldr r0, [sp, 0x54]",
            "b 0x47b5c",
            "ldr r0, [sp, 0x58]",
            "ldr r3, [r6, 0x14]",
            "cmp r7, r3",
            "bls 0x47b80",
            "ldr r2, [0x00047d88]",
            "mov r0, r6",
            "mov r1, 0x10",
            "add r2, r4, r2",
            "bl sym.imp.av_log",
            "b 0x47cf4",
            "ldr r2, [sp, 0x28]",
            "add r1, r4, r2",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x47cf4",
            "cmp sb, 0",
            "bne 0x47c88",
            "ldr r1, [0x00047d8c]",
            "add r0, sp, 0x560",
            "add r0, r0, 8",
            "add r1, r4, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x47c88",
            "ldr ip, [0x00047d90]",
            "sub r3, r7, 1",
            "add r0, sp, 0x68",
            "mov r2, sl",
            "str r6, [sp, 0x64]",
            "mov r8, sb",
            "str r3, [sp, 0x30]",
            "mov r6, sb",
            "ldr fp, [r4, ip]",
            "mov sl, ip",
            "str r0, [sp, 0x50]",
            "b 0x47c18",
            "ldr r0, [r4, sl]",
            "add fp, fp, 0x10",
            "ldr r1, [sp, 0x50]",
            "str r2, [sp, 0x18]",
            "str ip, [sp, 0x1c]",
            "add r0, r0, r6, lsl 4",
            "add r6, r6, 1",
            "bl sym.imp.strcmp",
            "ldr ip, [sp, 0x1c]",
            "cmp r0, 0",
            "ldr r2, [sp, 0x18]",
            "moveq r8, ip",
            "ldr ip, [fp, 0xc]",
            "cmp ip, 0",
            "bne 0x47be8",
            "cmp r8, 0",
            "mov sl, r2",
            "ldr r6, [sp, 0x64]",
            "bne 0x47c4c",
            "ldr r2, [0x00047d94]",
            "mov r0, r6",
            "mov r1, 0x20",
            "add r3, sp, 0x68",
            "add r2, r4, r2",
            "bl sym.imp.av_log",
            "ldr r1, [r6, 0x14]",
            "mov r3, 0",
            "ldr r0, [sp, 0x30]",
            "b 0x47c7c",
            "cmn r0, 1",
            "cmpne r0, r3",
            "ldreq r2, [r6, 0x18]",
            "ldreq r2, [r2, r3, lsl 2]",
            "add r3, r3, 1",
            "ldreq ip, [r2, 0x98]",
            "orreq ip, ip, r8",
            "streq ip, [r2, 0x98]",
            "cmp r3, r1",
            "bne 0x47c5c",
            "b 0x47cf4",
            "cmp sl, 0",
            "beq 0x47cf4",
            "ldr r1, [0x00047d98]",
            "add r8, sp, 0x560",
            "add r8, r8, 8",
            "mov r0, r8",
            "add r1, r4, r1",
            "bl sym.imp.av_strcasecmp",
            "cmp r0, 0",
            "beq 0x47cf4",
            "ldr r1, [0x00047d9c]",
            "mov r0, r8",
            "add r1, r4, r1",
            "bl sym.imp.av_strcasecmp",
            "cmp r0, 0",
            "beq 0x47cf4",
            "ldr r1, [0x00047da0]",
            "mov r0, r8",
            "add r1, r4, r1",
            "bl sym.imp.av_strcasecmp",
            "cmp r0, 0",
            "beq 0x47cf4",
            "mov r0, sl",
            "mov r1, r8",
            "add r2, sp, 0x68",
            "mov r3, 0",
            "bl sym.imp.av_dict_set",
            "ldr r1, [sp, 0x20]",
            "add r1, r1, 1",
            "str r1, [sp, 0x20]",
            "ldr r2, [sp, 0x20]",
            "ldr r3, [sp, 0x4c]",
            "cmp r2, r3",
            "blo 0x47a6c",
            "ldrd r2, r3, [sp, 0x40]",
            "mov r0, r5",
            "ldr r8, [sp, 0x3c]",
            "adds r2, r2, r8",
            "adc r3, r3, r8, asr 31",
            "bl fcn.00046c9c",
            "cmp r0, 0",
            "bne 0x47d40",
            "mov r0, r5",
            "bl fcn.000199ac",
            "cmp r0, 0",
            "beq 0x47d58",
            "ldr r2, [0x00047da4]",
            "mov r0, r6",
            "mov r1, 0x10",
            "add r2, r4, r2",
            "bl sym.imp.av_log",
            "mvn r0, 0",
            "add sp, sp, 0x26c",
            "add sp, sp, 0x400",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0004977c": {
        "function_address": "0x0004977c",
        "instructions": [
            "mov r3, 1",
            "push {r0, r1, r2, lr}",
            "mov r2, 0",
            "str r3, [sp]",
            "mov r3, 0",
            "bl sym.avio_seek",
            "add sp, sp, 0xc",
            "ldm sp!, {pc}"
        ]
    },
    "fcn.0004a2d4": {
        "function_address": "0x0004a2d4",
        "instructions": [
            "mov r3, 1",
            "push {r0, r1, r2, lr}",
            "mov r2, 0",
            "str r3, [sp]",
            "mov r3, 0",
            "bl sym.avio_seek",
            "add sp, sp, 0xc",
            "ldm sp!, {pc}"
        ]
    },
    "fcn.0004a408": {
        "function_address": "0x0004a408",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov sb, 0x170",
            "ldr r5, [r0, 0xc]",
            "mov sl, r1",
            "mov r7, r0",
            "mov r8, r2",
            "ldm r5, {r0, r4}",
            "add r1, r4, 1",
            "mul r6, sb, r4",
            "str r1, [r5, 4]",
            "mul r1, sb, r1",
            "bl sym.imp.av_realloc",
            "mov r2, sb",
            "str r0, [r5]",
            "mov r1, 0",
            "add r0, r0, r6",
            "bl sym.imp.memset",
            "ldr sb, [r5]",
            "movw r0, 0xff1b",
            "add r5, sb, r6",
            "str sl, [r5, 0x1c]",
            "str r0, [r5, 4]",
            "bl sym.imp.av_malloc",
            "cmp r8, 0",
            "mvn r3, 0",
            "str r0, [sb, r6]",
            "str r3, [r5, 0x50]",
            "beq 0x4a4a4",
            "mov r0, r7",
            "mov r1, 0",
            "bl sym.avformat_new_stream",
            "subs r3, r0, 0",
            "mvneq r4, 0xb",
            "beq 0x4a4a4",
            "str r4, [r3, 4]",
            "mov r1, 0x40",
            "mov r2, 1",
            "ldr r3, [0x0004a4ac]",
            "bl sym.avpriv_set_pts_info",
            "mov r0, r4",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "fcn.0004a4b0": {
        "function_address": "0x0004a4b0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x24",
            "ldr r4, [r0, 0x10]",
            "mov r6, r0",
            "mov r2, 4",
            "str r1, [sp, 8]",
            "add r1, sp, 0x1c",
            "ldr r5, [r0, 0xc]",
            "mov r0, r4",
            "ldr r7, [0x0004a8d4]",
            "bl sym.avio_read",
            "cmp r0, 3",
            "add r7, pc, r7",
            "movgt r8, 0",
            "movwgt sb, 0xff1c",
            "ble 0x4a858",
            "and sl, r8, 3",
            "add r2, sp, 0x20",
            "add r3, r2, sl",
            "ldrb r3, [r3, -4]",
            "cmp r3, 0x4f",
            "bne 0x4a560",
            "add r3, r8, 1",
            "and r3, r3, 3",
            "add r3, r2, r3",
            "ldrb r3, [r3, -4]",
            "cmp r3, 0x67",
            "bne 0x4a560",
            "add r3, r8, 2",
            "and r3, r3, 3",
            "add r3, r2, r3",
            "ldrb r3, [r3, -4]",
            "cmp r3, 0x67",
            "bne 0x4a560",
            "add r3, r8, 3",
            "and r3, r3, 3",
            "add r3, r2, r3",
            "ldrb r3, [r3, -4]",
            "cmp r3, 0x53",
            "bne 0x4a560",
            "movw r3, 0xff1a",
            "cmp r8, r3",
            "ble 0x4a5ac",
            "b 0x4a594",
            "mov r0, r4",
            "bl sym.avio_r8",
            "mov fp, r0",
            "mov r0, r4",
            "bl sym.url_feof",
            "cmp r0, 0",
            "bne 0x4a89c",
            "add r8, r8, 1",
            "add r3, sp, 0x20",
            "cmp r8, sb",
            "add sl, r3, sl",
            "strb fp, [sl, -4]",
            "bne 0x4a4f0",
            "ldr r2, [0x0004a8d8]",
            "mov r0, r6",
            "mov r1, 0x20",
            "add r2, r7, r2",
            "bl sym.imp.av_log",
            "b 0x4a8a4",
            "mov r0, r4",
            "bl sym.avio_r8",
            "subs r8, r0, 0",
            "bne 0x4a8a4",
            "mov r0, r4",
            "bl sym.avio_r8",
            "str r0, [sp, 0xc]",
            "mov r0, r4",
            "bl sym.avio_rl64",
            "strd r0, r1, [sp, 0x10]",
            "mov r0, r4",
            "bl sym.avio_rl32",
            "mov r2, 8",
            "mov r3, 0",
            "mov r7, r0",
            "mov r0, r4",
            "bl sym.avio_skip",
            "mov r0, r4",
            "bl sym.avio_r8",
            "ldr r2, [r5, 4]",
            "mov fp, r0",
            "mov r3, r8",
            "b 0x4a624",
            "ldr r1, [r5]",
            "add r1, r1, r3",
            "add r3, r3, 0x170",
            "ldr r1, [r1, 0x1c]",
            "cmp r1, r7",
            "beq 0x4a6c4",
            "add r8, r8, 1",
            "cmp r8, r2",
            "blt 0x4a608",
            "b 0x4a8b8",
            "ldr r0, [r5]",
            "add r0, r0, r8",
            "bl sym.imp.av_freep",
            "ldr r3, [r5, 0x10]",
            "cmp r3, 0",
            "beq 0x4a664",
            "mla r3, sb, sl, r3",
            "ldr r1, [r5]",
            "add r1, r1, r8",
            "ldr r2, [r3, 0x184]",
            "ldr r3, [r1, 0x16c]",
            "cmp r2, r3",
            "beq 0x4a674",
            "ldr r0, [r5]",
            "add r0, r0, r8",
            "add r0, r0, 0x16c",
            "bl sym.imp.av_freep",
            "add sl, sl, 1",
            "add r8, r8, 0x170",
            "ldr r3, [r5, 4]",
            "cmp sl, r3",
            "blt 0x4a630",
            "mvn r3, 0",
            "mov r2, 0",
            "str r3, [r5, 0xc]",
            "mov r0, r6",
            "str r2, [r5, 4]",
            "mov r1, r7",
            "b 0x4a6b0",
            "mov r0, r6",
            "mov r1, r7",
            "mov r2, 1",
            "bl fcn.0004a408",
            "cmp r0, 0",
            "mov r8, r0",
            "movlt r0, r0",
            "blt 0x4a8b0",
            "mov r7, 0x170",
            "ldr sb, [r5]",
            "mul r7, r7, r8",
            "mov r0, r4",
            "bl fcn.0004a2d4",
            "mvn r2, 0x1a",
            "mvn r3, 0",
            "adds r2, r2, r0",
            "add r6, sb, r7",
            "adc r3, r3, r1",
            "strd r2, r3, [r6, 0x40]",
            "ldr r3, [r6, 0x10]",
            "cmp r3, 0",
            "beq 0x4a758",
            "ldr sl, [r5]",
            "add r5, sl, r7",
            "ldr r0, [r5, 4]",
            "bl sym.imp.av_malloc",
            "ldr r1, [sl, r7]",
            "mov ip, r0",
            "ldr r2, [r5, 0xc]",
            "ldr r3, [r5, 8]",
            "cmp r1, 0",
            "rsb r3, r2, r3",
            "beq 0x4a748",
            "add r1, r1, r2",
            "mov r2, r3",
            "stm sp, {r0, r3}",
            "bl sym.imp.memcpy",
            "ldr r0, [sl, r7]",
            "bl sym.imp.av_free",
            "ldr ip, [sp]",
            "ldr r3, [sp, 4]",
            "str r3, [r5, 8]",
            "mov r3, 0",
            "str ip, [sl, r7]",
            "str r3, [r5, 0xc]",
            "mov r0, r4",
            "add r1, r6, 0x5c",
            "mov r2, fp",
            "bl sym.avio_read",
            "cmp r0, fp",
            "blt 0x4a858",
            "mov r5, 0",
            "str fp, [r6, 0x54]",
            "str r5, [r6, 0x58]",
            "add r2, r6, 0x5b",
            "mov r3, r5",
            "b 0x4a794",
            "ldrb r1, [r2, 1]!",
            "add r3, r3, 1",
            "add r5, r5, r1",
            "cmp r3, fp",
            "blt 0x4a788",
            "ldr r2, [sp, 0xc]",
            "tst r2, 1",
            "bne 0x4a7b8",
            "ldr r3, [r6, 0x15c]",
            "cmp r3, 0",
            "streq r3, [r6, 0x10]",
            "beq 0x4a7f8",
            "ldr r3, [r6, 0x10]",
            "cmp r3, 0",
            "beq 0x4a7ec",
            "b 0x4a800",
            "add r2, r6, r3",
            "add r3, r3, 1",
            "ldrb r2, [r2, 0x5c]",
            "str r3, [r6, 0x58]",
            "ldr r3, [r6, 0xc]",
            "cmp r2, 0xff",
            "add r3, r3, r2",
            "str r3, [r6, 0xc]",
            "bne 0x4a7f8",
            "ldr r3, [r6, 0x58]",
            "cmp r3, fp",
            "blt 0x4a7c8",
            "ldrd r2, r3, [r6, 0x40]",
            "strd r2, r3, [r6, 0x38]",
            "ldmib r6, {r0, r3}",
            "rsb r3, r3, r0",
            "cmp r3, r5",
            "bhs 0x4a838",
            "lsl r0, r0, 1",
            "str r0, [r6, 4]",
            "bl sym.imp.av_malloc",
            "ldr r1, [sb, r7]",
            "mov sl, r0",
            "ldr r2, [r6, 8]",
            "bl sym.imp.memcpy",
            "ldr r0, [sb, r7]",
            "bl sym.imp.av_free",
            "str sl, [sb, r7]",
            "ldr r1, [sb, r7]",
            "mov r0, r4",
            "ldr r3, [r6, 8]",
            "mov r2, r5",
            "add r1, r1, r3",
            "bl sym.avio_read",
            "cmp r0, r5",
            "bge 0x4a868",
            "ldr r3, [0x0004a8dc]",
            "cmp r0, 0",
            "movge r0, r3",
            "b 0x4a8b0",
            "ldr r3, [r6, 8]",
            "add r5, r3, r5",
            "ldrd r2, r3, [sp, 0x10]",
            "str r5, [r6, 8]",
            "strd r2, r3, [r6, 0x20]",
            "ldr r2, [sp, 8]",
            "ldr r3, [sp, 0xc]",
            "cmp r2, 0",
            "str r3, [r6, 0x48]",
            "movne r0, 0",
            "strne r8, [r2]",
            "bne 0x4a8b0",
            "b 0x4a8ac",
            "ldr r0, [0x0004a8dc]",
            "b 0x4a8b0",
            "ldr r0, [0x0004a8e0]",
            "b 0x4a8b0",
            "ldr r0, [sp, 8]",
            "add sp, sp, 0x24",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r3, [r5, 8]",
            "cmp r3, 0",
            "movne r8, 0",
            "movne sb, 0x170",
            "movne sl, r8",
            "bne 0x4a67c",
            "b 0x4a6a4"
        ]
    },
    "fcn.0004a1e4": {
        "function_address": "0x0004a1e4",
        "instructions": [
            "ldr r3, [r0, 0xc]",
            "subs ip, r2, 0",
            "push {r0, r1, r4, r5, r6, r8, sb, lr}",
            "mov r4, 0x170",
            "ldr r3, [r3]",
            "mla r4, r4, r1, r3",
            "movne r2, 0",
            "movne r3, 0x80000000",
            "strdne r2, r3, [ip]",
            "ldr r6, [r4, 0x28]",
            "ldr r5, [r4, 0x2c]",
            "cmp r6, 0",
            "bne 0x4a220",
            "cmp r5, 0x80000000",
            "beq 0x4a22c",
            "mov r8, 0",
            "mov sb, 0x80000000",
            "strd r8, sb, [r4, 0x28]",
            "ldr r2, [r4, 0x30]",
            "ldr r3, [r4, 0x34]",
            "cmp r2, 0",
            "bne 0x4a244",
            "cmp r3, 0x80000000",
            "beq 0x4a25c",
            "cmp ip, 0",
            "mov r8, 0",
            "mov sb, 0x80000000",
            "strne r2, [ip]",
            "strne r3, [ip, 4]",
            "strd r8, sb, [r4, 0x30]",
            "ldr r3, [r4, 0x160]",
            "cmp r3, 0",
            "beq 0x4a2c8",
            "ldr r2, [r4, 0x20]",
            "ldr r3, [r4, 0x24]",
            "cmn r2, 1",
            "bne 0x4a280",
            "cmn r3, 1",
            "beq 0x4a2c8",
            "ldr lr, [r4, 0x4c]",
            "cmp lr, 0",
            "beq 0x4a2ac",
            "ldr lr, [lr, 0x18]",
            "cmp lr, 0",
            "beq 0x4a2ac",
            "str ip, [sp]",
            "bl fcn.0004a100",
            "mov r6, r0",
            "mov r5, r1",
            "b 0x4a2bc",
            "add ip, r4, 0x30",
            "str ip, [sp]",
            "bl fcn.0004a100",
            "strd r0, r1, [r4, 0x28]",
            "mvn r2, 0",
            "mvn r3, 0",
            "strd r2, r3, [r4, 0x20]",
            "mov r0, r6",
            "mov r1, r5",
            "pop {r2, r3, r4, r5, r6, r8, sb, pc}"
        ]
    },
    "fcn.0004a100": {
        "function_address": "0x0004a100",
        "instructions": [
            "push {r0, r1, r2, r4, r5, r6, r7, lr}",
            "mov r5, r2",
            "ldr r6, [r0, 0xc]",
            "mov r4, r3",
            "ldr ip, [sp, 0x20]",
            "ldr r7, [r6]",
            "mov r6, 0x170",
            "mla r6, r6, r1, r7",
            "ldr r6, [r6, 0x4c]",
            "cmp r6, 0",
            "beq 0x4a144",
            "ldr r6, [r6, 0x14]",
            "cmp r6, 0",
            "beq 0x4a144",
            "str ip, [sp]",
            "blx r6",
            "b 0x4a158",
            "mov r0, r5",
            "mov r1, r4",
            "cmp ip, 0",
            "strne r5, [ip]",
            "strne r4, [ip, 4]",
            "add sp, sp, 0xc",
            "pop {r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.0004a8e4": {
        "function_address": "0x0004a8e4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov sb, r3",
            "ldr r5, [0x0004ac58]",
            "sub sp, sp, 0x2c",
            "mov r4, r0",
            "mov fp, r1",
            "ldr r3, [0x0004ac5c]",
            "add r1, sp, 0x24",
            "ldr r7, [r0, 0xc]",
            "add r5, pc, r5",
            "str r2, [sp, 0xc]",
            "add r3, r5, r3",
            "str r1, [sp, 0x10]",
            "str r3, [sp, 0x14]",
            "ldr r3, [r7, 0xc]",
            "str r3, [sp, 0x24]",
            "b 0x4a93c",
            "mov r0, r4",
            "ldr r1, [sp, 0x10]",
            "bl fcn.0004a4b0",
            "cmp r0, 0",
            "blt 0x4ac50",
            "ldr r3, [sp, 0x24]",
            "cmp r3, 0",
            "blt 0x4a928",
            "mov r2, 0x170",
            "mul r3, r2, r3",
            "ldr r2, [r7]",
            "add r6, r2, r3",
            "ldr r8, [r6, 0x4c]",
            "cmp r8, 0",
            "bne 0x4a9f8",
            "ldr r1, [r6, 0x50]",
            "cmp r1, 0",
            "bge 0x4ac4c",
            "ldr r3, [r2, r3]",
            "ldr ip, [r6, 8]",
            "ldr r1, [sp, 0x14]",
            "str r7, [sp, 0x18]",
            "mov r7, r4",
            "str r6, [sp, 0x1c]",
            "mov r4, r3",
            "sub sl, r1, 4",
            "mov r6, ip",
            "b 0x4a9b8",
            "ldrb r2, [r8, 4]",
            "cmp r6, r2",
            "blt 0x4a9b8",
            "mov r0, r4",
            "ldr r1, [r8]",
            "bl sym.imp.memcmp",
            "cmp r0, 0",
            "beq 0x4a9c4",
            "ldr r8, [sl, 4]!",
            "cmp r8, 0",
            "bne 0x4a998",
            "ldr r6, [sp, 0x1c]",
            "cmp r8, 0",
            "mov r4, r7",
            "ldr r7, [sp, 0x18]",
            "str r8, [r6, 0x4c]",
            "bne 0x4a9f8",
            "ldr r2, [0x0004ac60]",
            "mov r0, r4",
            "mov r1, 0x18",
            "add r2, r5, r2",
            "bl sym.imp.av_log",
            "str r8, [r6, 0x50]",
            "b 0x4ac4c",
            "ldr r8, [r6, 0x58]",
            "ldr sl, [r6, 0x10]",
            "ldr r1, [r6, 0x54]",
            "b 0x4aa2c",
            "add r2, r6, r3",
            "add r3, r3, 1",
            "ldrb r2, [r2, 0x5c]",
            "str r3, [r6, 0x58]",
            "ldr r3, [r6, 0x10]",
            "cmp r2, 0xff",
            "add r3, r3, r2",
            "str r3, [r6, 0x10]",
            "bne 0x4aa4c",
            "ldr r3, [r6, 0x58]",
            "cmp r3, r1",
            "blt 0x4aa08",
            "mvneq r2, 0",
            "moveq r3, 1",
            "streq r2, [r7, 0xc]",
            "streq r3, [r6, 0x15c]",
            "b 0x4a91c",
            "ldr r3, [r6, 0x20]",
            "cmn r3, 1",
            "bne 0x4aa80",
            "ldr r3, [r6, 0x24]",
            "cmn r3, 1",
            "bne 0x4aa80",
            "ldrd r2, r3, [r6, 0x40]",
            "mov r0, r4",
            "mov r1, 0x18",
            "strd r2, r3, [sp]",
            "ldr r2, [0x0004ac64]",
            "add r2, r5, r2",
            "bl sym.imp.av_log",
            "ldr r2, [r6, 0x50]",
            "mov r5, 0",
            "ldr r1, [sp, 0x24]",
            "ldr r3, [r6, 0x4c]",
            "cmp r2, r5",
            "str r1, [r7, 0xc]",
            "str r5, [r6, 0x15c]",
            "beq 0x4ab68",
            "ldr r3, [r3, 0xc]",
            "mov r0, r4",
            "blx r3",
            "cmp r0, r5",
            "str r0, [r6, 0x50]",
            "bne 0x4ab50",
            "mov r3, 1",
            "str r8, [r6, 0x58]",
            "str sl, [r6, 0x10]",
            "ldr r2, [r4, 0x450]",
            "str r3, [r7, 8]",
            "ldr r3, [r4, 0x454]",
            "orrs r3, r2, r3",
            "ldrdeq r2, r3, [r6, 0x38]",
            "moveq r1, 0x450",
            "strdeq r2, r3, [r4, r1]",
            "mov r3, 0",
            "ldr sl, [r7, 4]",
            "mov r2, r3",
            "add ip, r4, 0x450",
            "b 0x4ab44",
            "ldr r1, [r7]",
            "add r1, r1, r3",
            "ldr r0, [r1, 0x15c]",
            "cmp r0, 0",
            "beq 0x4ab3c",
            "ldr r5, [ip, 4]",
            "ldr r0, [r1, 0x38]",
            "ldr r1, [r1, 0x3c]",
            "ldr r8, [r4, 0x450]",
            "cmp r1, r5",
            "bgt 0x4ab2c",
            "bne 0x4ab34",
            "cmp r0, r8",
            "bls 0x4ab34",
            "mov r0, r8",
            "mov r1, r5",
            "str r0, [r4, 0x450]",
            "str r1, [ip, 4]",
            "add r2, r2, 1",
            "add r3, r3, 0x170",
            "cmp r2, sl",
            "blt 0x4aaf4",
            "b 0x4abf8",
            "ldr r2, [r6, 0xc]",
            "ldr r3, [r6, 0x10]",
            "str r5, [r6, 0x10]",
            "add r3, r2, r3",
            "str r3, [r6, 0xc]",
            "b 0x4abf8",
            "cmp r3, 0",
            "str r2, [r6, 0x14]",
            "str r2, [r6, 0x18]",
            "beq 0x4ab8c",
            "ldr r3, [r3, 0x10]",
            "cmp r3, 0",
            "beq 0x4ab8c",
            "mov r0, r4",
            "blx r3",
            "cmp fp, 0",
            "ldr r1, [sp, 0xc]",
            "ldrne r3, [sp, 0x24]",
            "ldr r2, [sp, 0x50]",
            "strne r3, [fp]",
            "cmp r1, 0",
            "ldrne r3, [r6, 0xc]",
            "strne r3, [r1]",
            "cmp sb, 0",
            "ldrne r3, [r6, 0x10]",
            "strne r3, [sb]",
            "cmp r2, 0",
            "ldrdne r2, r3, [r6, 0x38]",
            "ldrne r1, [sp, 0x50]",
            "strdne r2, r3, [r1]",
            "ldr r3, [r6, 0xc]",
            "ldr r2, [r6, 0x10]",
            "ldr r1, [r6, 8]",
            "add r2, r2, r3",
            "mov r3, 0",
            "cmp r2, r1",
            "str r2, [r6, 0xc]",
            "str r3, [r6, 0x10]",
            "streq r3, [r6, 0xc]",
            "streq r3, [r6, 8]",
            "ldrd r2, r3, [r6, 0x40]",
            "strd r2, r3, [r6, 0x38]",
            "mov r3, 1",
            "ldr r1, [r6, 0x54]",
            "str r3, [r6, 0x160]",
            "ldr r3, [r6, 0x58]",
            "add r0, r6, r3",
            "mov r2, r3",
            "add r0, r0, 0x5b",
            "b 0x4ac30",
            "ldrb ip, [r0, 1]!",
            "cmp ip, 0xff",
            "movne r2, 0",
            "strne r2, [r6, 0x160]",
            "bne 0x4ac38",
            "add r2, r2, 1",
            "cmp r2, r1",
            "blt 0x4ac18",
            "cmp r3, r1",
            "mov r0, 0",
            "mvneq r3, 0",
            "streq r3, [r7, 0xc]",
            "b 0x4ac50",
            "mov r0, r8",
            "add sp, sp, 0x2c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0004a348": {
        "function_address": "0x0004a348",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r7, r0",
            "ldr r4, [r0, 0xc]",
            "mov r6, 0x170",
            "ldr r0, [r4, 4]",
            "sub r0, r0, 1",
            "mul r0, r6, r0",
            "add r0, r0, 0x188",
            "bl sym.imp.av_malloc",
            "mov r5, r0",
            "ldr r0, [r7, 0x10]",
            "bl fcn.0004a2d4",
            "ldr r3, [r4, 0xc]",
            "mov r7, r5",
            "ldr r2, [r4, 4]",
            "strd r0, r1, [r5]",
            "add r0, r5, 0x18",
            "str r3, [r5, 8]",
            "ldr r3, [r4, 0x10]",
            "ldr r1, [r4]",
            "str r2, [r5, 0x10]",
            "mul r2, r6, r2",
            "sub r6, r6, 0x170",
            "str r3, [r5, 0xc]",
            "mov sb, r6",
            "bl sym.imp.memcpy",
            "b 0x4a3ec",
            "ldr sl, [r4]",
            "add sb, sb, 1",
            "add r8, sl, r6",
            "ldr r0, [r8, 4]",
            "bl sym.imp.av_malloc",
            "mov r1, 0",
            "str r0, [sl, r6]",
            "ldr r2, [r8, 4]",
            "bl sym.imp.memset",
            "ldr r0, [sl, r6]",
            "add r6, r6, 0x170",
            "ldr r1, [r7, -0x158]",
            "ldr r2, [r8, 8]",
            "bl sym.imp.memcpy",
            "ldr r3, [r4, 4]",
            "add r7, r7, 0x170",
            "cmp sb, r3",
            "blt 0x4a3b4",
            "str r5, [r4, 0x10]",
            "mov r0, 0",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "fcn.0004af4c": {
        "function_address": "0x0004af4c",
        "instructions": [
            "push {r0, r1, r2, r4, r5, r6, r7, r8, sl, lr}",
            "ldr r4, [r0, 0xc]",
            "ldr sl, [r0, 0x10]",
            "ldr r5, [r4, 0x10]",
            "cmp r5, 0",
            "beq 0x4b008",
            "ldr r3, [r5, 0xc]",
            "mov r7, 0",
            "ldr r6, [r4]",
            "mov r8, r7",
            "str r3, [r4, 0x10]",
            "b 0x4af90",
            "ldr r3, [r4]",
            "add r8, r8, 1",
            "ldr r0, [r3, r7]",
            "add r7, r7, 0x170",
            "bl sym.imp.av_free",
            "ldr r3, [r4, 4]",
            "cmp r8, r3",
            "blt 0x4af7c",
            "mov r3, 0",
            "mov r0, sl",
            "str r3, [sp]",
            "mov r7, 0x170",
            "ldrd r2, r3, [r5]",
            "bl sym.avio_seek",
            "ldr r1, [r5, 0x10]",
            "ldr r3, [r5, 8]",
            "ldr r0, [r4]",
            "str r1, [r4, 4]",
            "str r3, [r4, 0xc]",
            "mul r1, r7, r1",
            "bl sym.imp.av_realloc",
            "cmp r0, 0",
            "mov r8, r0",
            "str r0, [r4]",
            "beq 0x4aff4",
            "ldr r2, [r5, 0x10]",
            "add r1, r5, 0x18",
            "mul r2, r7, r2",
            "bl sym.imp.memcpy",
            "b 0x4b000",
            "mov r0, r6",
            "bl sym.imp.av_free",
            "str r8, [r4, 4]",
            "mov r0, r5",
            "bl sym.imp.av_free",
            "mov r0, 0",
            "pop {r1, r2, r3, r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "fcn.0004c1d4": {
        "function_address": "0x0004c1d4",
        "instructions": [
            "cmp r1, 0x19",
            "push {r4, r5, r6, lr}",
            "mov r6, r0",
            "mov r4, r1",
            "bgt 0x4c1f0",
            "pop {r4, r5, r6, lr}",
            "b fcn.0004c198",
            "sub r4, r4, 0x10",
            "mov r1, 0x10",
            "bl fcn.0004c198",
            "mov r1, r4",
            "mov r5, r0",
            "mov r0, r6",
            "bl fcn.0004c198",
            "orr r0, r0, r5, lsl r4",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.0004c198": {
        "function_address": "0x0004c198",
        "instructions": [
            "ldr r3, [r0, 8]",
            "ldr ip, [r0, 0x10]",
            "push {r4, lr}",
            "ldr r2, [r0]",
            "add r4, r1, r3",
            "ldr r2, [r2, r3, lsr 3]",
            "and r3, r3, 7",
            "rev r2, r2",
            "cmp r4, ip",
            "strls r4, [r0, 8]",
            "strhi ip, [r0, 8]",
            "lsl r0, r2, r3",
            "rsb r1, r1, 0x20",
            "lsr r0, r0, r1",
            "pop {r4, pc}"
        ]
    },
    "fcn.0004db94": {
        "function_address": "0x0004db94",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sl, fp, lr}",
            "mov sl, r3",
            "ldr r3, [r0, 0x18]",
            "sub sp, sp, 0x20",
            "mov r7, r0",
            "mov r8, r2",
            "ldr r6, [r3]",
            "ldr r3, [r6, 8]",
            "ldr ip, [r3, 0x100]",
            "cmp ip, 0",
            "bne 0x4dbd8",
            "ldr r0, [r3, 0xd4]",
            "bl sym.imp.av_get_bits_per_sample",
            "ldr r3, [r6, 8]",
            "ldr ip, [r3, 0x40]",
            "mul ip, ip, r0",
            "asr ip, ip, 3",
            "ldr r3, [r6, 8]",
            "ldr r4, [r3, 4]",
            "cmp r4, 0",
            "ldreq r4, [r3, 0x3c]",
            "asrne r4, r4, 3",
            "muleq r4, r4, ip",
            "cmp ip, 0",
            "cmpgt r4, 0",
            "ble 0x4dce8",
            "cmp sl, 0",
            "asr r5, r4, 0x1f",
            "mov r1, sl",
            "movlt r1, 0",
            "mul r3, r4, r1",
            "mov r0, r8",
            "movlt r0, 0",
            "ldr r8, [r6, 0x38]",
            "mla r3, r0, r5, r3",
            "umull r0, r1, r4, r0",
            "add r1, r3, r1",
            "mov r2, r8",
            "asr r3, r2, 0x1f",
            "strd r2, r3, [sp, 0x10]",
            "ldr r2, [r6, 0x3c]",
            "mov sl, r2",
            "asr fp, sl, 0x1f",
            "strd sl, fp, [sp, 0x18]",
            "mov sl, ip",
            "asr fp, sl, 0x1f",
            "ldr r3, [sp, 0x1c]",
            "mul lr, ip, r3",
            "mla lr, r2, fp, lr",
            "umull r2, r3, ip, r2",
            "ldr ip, [sp, 0x40]",
            "tst ip, 1",
            "add r3, lr, r3",
            "moveq ip, 3",
            "movne ip, 2",
            "strd r2, r3, [sp]",
            "str ip, [sp, 8]",
            "ldrd r2, r3, [sp, 0x10]",
            "bl sym.imp.av_rescale_rnd",
            "mul r3, r0, fp",
            "ldr r2, [sp, 0x14]",
            "mla r3, r1, sl, r3",
            "umull sl, fp, r0, sl",
            "mov r0, sl",
            "add fp, r3, fp",
            "mul r3, r4, r2",
            "mov r1, fp",
            "mla r3, r8, r5, r3",
            "umull r4, r5, r4, r8",
            "add r5, r3, r5",
            "ldrd r2, r3, [sp, 0x18]",
            "strd r4, r5, [sp]",
            "bl sym.imp.av_rescale",
            "mov r3, 0x450",
            "strd r0, r1, [r6, 0x68]",
            "ldrd r2, r3, [r3, r7]",
            "mov r1, 0",
            "ldr r0, [r7, 0x10]",
            "str r1, [sp]",
            "adds r2, r2, sl",
            "adc r3, r3, fp",
            "bl sym.avio_seek",
            "cmp r1, 0",
            "movge r0, 0",
            "b 0x4dcec",
            "mvn r0, 0",
            "add sp, sp, 0x20",
            "pop {r4, r5, r6, r7, r8, sl, fp, pc}"
        ]
    },
    "fcn.0004cf20": {
        "function_address": "0x0004cf20",
        "instructions": [
            "cmp r2, 0",
            "cmpeq r1, 0",
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r4, r0",
            "mov r6, r1",
            "mov r5, r2",
            "movne r1, 0",
            "moveq r1, 1",
            "mvneq r0, 0",
            "popeq {r4, r5, r6, r7, r8, pc}",
            "cmp r3, 0x10",
            "movlt r8, r3",
            "movge r8, 0x10",
            "cmp r6, 0",
            "beq 0x4cf94",
            "add r7, r4, 0x18",
            "cmp r6, r7",
            "beq 0x4cf84",
            "mov r2, 0x18",
            "mov r0, r7",
            "bl sym.imp.memset",
            "mov r0, r7",
            "mov r1, r6",
            "mov r2, r8",
            "bl sym.imp.memcpy",
            "add r0, r4, 0x28",
            "mov r1, r6",
            "mov r2, 8",
            "bl sym.imp.memcpy",
            "cmp r5, 0",
            "beq 0x4cfe0",
            "add r6, r4, 0x30",
            "cmp r5, r6",
            "beq 0x4cfc8",
            "mov r1, 0",
            "mov r2, 0x18",
            "mov r0, r6",
            "bl sym.imp.memset",
            "mov r0, r6",
            "mov r1, r5",
            "mov r2, r8",
            "bl sym.imp.memcpy",
            "add r0, r4, 0x40",
            "mov r1, r5",
            "mov r2, 8",
            "bl sym.imp.memcpy",
            "mov r0, 0",
            "pop {r4, r5, r6, r7, r8, pc}",
            "mov r0, r5",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.0004cfe8": {
        "function_address": "0x0004cfe8",
        "instructions": [
            "cmp r1, 0",
            "cmpne r2, 0",
            "push {r4, r5, r6, r7, r8, sl, lr}",
            "mov r4, r0",
            "sub sp, sp, 0x194",
            "mov r7, r1",
            "movne r6, 0",
            "moveq r6, 1",
            "mvneq r0, 0",
            "beq 0x4d0dc",
            "add r5, sp, 8",
            "mov r8, 1",
            "mov r1, r2",
            "add sl, r4, 0x48",
            "mov r2, 0xc0",
            "mov r3, 1",
            "mov r0, r5",
            "bl sym.imp.av_des_init",
            "mov r1, sl",
            "mov r3, r8",
            "mov r0, r5",
            "add r2, r7, 0x30",
            "stm sp, {r6, r8}",
            "bl sym.imp.av_des_crypt",
            "mov r1, sl",
            "mov r3, r6",
            "mov r2, 0x40",
            "add sl, r4, 0x50",
            "mov r0, r5",
            "bl sym.imp.av_des_init",
            "mov r2, r6",
            "mov r3, r8",
            "mov r0, r5",
            "mov r1, sl",
            "str r6, [sp]",
            "str r6, [sp, 4]",
            "bl sym.imp.av_des_crypt",
            "ldrh r3, [r4, 0xe]",
            "mov r1, sl",
            "ldrh r8, [r4, 0xc]",
            "mov r2, 0x40",
            "mov r0, r5",
            "add r8, r8, r3",
            "mov r3, r6",
            "bl sym.imp.av_des_init",
            "ldrh r3, [r4, 0x10]",
            "add r8, r8, 0x10",
            "add r6, r4, 0x58",
            "add r2, r7, r8",
            "mov r0, r5",
            "mov r1, r6",
            "lsr r3, r3, 3",
            "bl sym.imp.av_des_mac",
            "ldrh r3, [r4, 0x10]",
            "mov r1, r6",
            "mov r2, 8",
            "add r8, r8, r3",
            "add r0, r7, r8",
            "bl sym.imp.memcmp",
            "cmp r0, 0",
            "mvnne r0, 0",
            "add sp, sp, 0x194",
            "pop {r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "sym.imp.av_des_mac": {
        "function_address": "0x00009f6c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x740]!"
        ]
    },
    "fcn.0002a0ec": {
        "function_address": "0x0002a0ec",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x10c",
            "ldr r4, [0x0002aa98]",
            "mov r5, r0",
            "ldr r3, [0x0002aa9c]",
            "add r4, pc, r4",
            "str r1, [sp, 0x4c]",
            "str r2, [sp, 0x34]",
            "add r3, r4, r3",
            "str r3, [sp, 0x58]",
            "ldr r3, [0x0002aaa0]",
            "add r3, r4, r3",
            "str r3, [sp, 0x5c]",
            "ldr r3, [0x0002aaa4]",
            "add r3, r4, r3",
            "str r3, [sp, 0x38]",
            "ldr r0, [r5, 0x10]",
            "add sl, sp, 0xd8",
            "bl fcn.00029f74",
            "mov r2, 0xa",
            "mov r6, r0",
            "mov r7, r1",
            "ldr r0, [r5, 0x10]",
            "mov r1, sl",
            "bl sym.avio_read",
            "cmp r0, 0xa",
            "mov r8, r0",
            "bne 0x2a888",
            "mov r0, sl",
            "ldr r1, [sp, 0x4c]",
            "bl fcn.0002a01c",
            "cmp r0, 0",
            "beq 0x2a874",
            "ldrb r3, [sp, 0xdf]",
            "ldrb sb, [sp, 0xde]",
            "ldrb r2, [sp, 0xe1]",
            "and r3, r3, 0x7f",
            "ldrb r0, [sp, 0xdd]",
            "lsl r3, r3, 0xe",
            "and sb, sb, 0x7f",
            "and r2, r2, 0x7f",
            "ldrb fp, [sp, 0xdb]",
            "orr r3, r3, sb, lsl 21",
            "ldrb sb, [sp, 0xe0]",
            "str r0, [sp, 0x1c]",
            "orr r3, r3, r2",
            "ldr r0, [r5, 0x10]",
            "and sb, sb, 0x7f",
            "orr sb, r3, sb, lsl 7",
            "bl fcn.00029f74",
            "adds r2, r0, sb",
            "adc r3, r1, sb, asr 31",
            "cmp fp, 2",
            "strd r2, r3, [sp, 0x20]",
            "mov r3, 0",
            "str r3, [sp, 0x104]",
            "str r3, [sp, 0x100]",
            "str r3, [sp, 0xfc]",
            "str r3, [sp, 0xf8]",
            "beq 0x2a1ec",
            "blo 0x2a828",
            "cmp fp, 4",
            "bhi 0x2a828",
            "b 0x2a204",
            "ldr r3, [sp, 0x1c]",
            "ands r8, r3, 0x40",
            "moveq r0, 6",
            "streq r0, [sp, 0x28]",
            "beq 0x2a20c",
            "b 0x2aa78",
            "str r8, [sp, 0x28]",
            "mov r8, 1",
            "ldr r1, [sp, 0x1c]",
            "cmp r8, 0",
            "and r1, r1, 0x80",
            "str r1, [sp, 0x3c]",
            "bne 0x2a244",
            "ldr r3, [0x0002aaa8]",
            "mov r2, 0",
            "str r2, [sp, 0x30]",
            "str fp, [sp, 0x18]",
            "add r3, r4, r3",
            "str r3, [sp, 0x50]",
            "ldr r3, [0x0002aaac]",
            "str r3, [sp, 0x54]",
            "b 0x2a7e8",
            "ldr r0, [sp, 0x1c]",
            "tst r0, 0x40",
            "beq 0x2a220",
            "ldr r0, [r5, 0x10]",
            "bl fcn.00029fe8",
            "cmp fp, 4",
            "mov r6, r0",
            "subeq r6, r0, 4",
            "cmp r6, 0",
            "blt 0x2aa80",
            "ldr r0, [r5, 0x10]",
            "mov r2, r6",
            "asr r3, r2, 0x1f",
            "sub sb, sb, 4",
            "bl sym.avio_skip",
            "subs sb, sb, r6",
            "bpl 0x2a220",
            "b 0x2aa88",
            "cmp r8, 0",
            "add r3, sp, 0xc4",
            "beq 0x2a2ec",
            "mov r1, r3",
            "ldr r0, [r5, 0x10]",
            "mov r2, 4",
            "bl sym.avio_read",
            "ldr r1, [sp, 0x18]",
            "mov r3, 0",
            "strb r3, [sp, 0xc8]",
            "cmp r1, 3",
            "bne 0x2a2c8",
            "ldr r0, [r5, 0x10]",
            "bl sym.avio_rb32",
            "b 0x2a2d0",
            "ldr r0, [r5, 0x10]",
            "bl fcn.00029fe8",
            "mov r7, r0",
            "ldr r0, [r5, 0x10]",
            "bl sym.avio_rb16",
            "and r2, r0, 2",
            "mov fp, r0",
            "str r2, [sp, 0x2c]",
            "b 0x2a314",
            "mov r1, r3",
            "mov r2, 3",
            "ldr r0, [r5, 0x10]",
            "mov fp, r8",
            "bl sym.avio_read",
            "ldr r0, [r5, 0x10]",
            "strb r8, [sp, 0xc7]",
            "bl sym.avio_rb24",
            "mov r7, r0",
            "str r8, [sp, 0x2c]",
            "cmp r7, 0x10000000",
            "bhi 0x2a7f4",
            "ldr r3, [sp, 0x28]",
            "rsb sb, r3, sb",
            "subs sb, sb, r7",
            "bmi 0x2a7f4",
            "ldr r0, [r5, 0x10]",
            "bl fcn.00029f74",
            "cmp r7, 0",
            "strd r0, r1, [sp, 0x40]",
            "bne 0x2a368",
            "ldrb r3, [sp, 0xc4]",
            "cmp r3, 0",
            "beq 0x2a7e8",
            "ldr r2, [0x0002aab0]",
            "mov r0, r5",
            "mov r1, 0x30",
            "add r3, sp, 0xc4",
            "add r2, r4, r2",
            "bl sym.imp.av_log",
            "b 0x2a7e8",
            "tst fp, 1",
            "streq r7, [sp, 0xf4]",
            "moveq r6, r7",
            "beq 0x2a390",
            "cmp r7, 3",
            "bls 0x2a7f4",
            "sub r6, r7, 4",
            "ldr r0, [r5, 0x10]",
            "bl sym.avio_rb32",
            "str r0, [sp, 0xf4]",
            "tst fp, 4",
            "and sl, fp, 8",
            "beq 0x2a3dc",
            "cmp sl, 0",
            "ldr r3, [0x0002aab4]",
            "ldrne r3, [0x0002aab8]",
            "add r2, sp, 0xc4",
            "add r3, r4, r3",
            "str r2, [sp]",
            "mov r0, r5",
            "ldr r2, [0x0002aabc]",
            "mov r1, 0x18",
            "add r2, r4, r2",
            "bl sym.imp.av_log",
            "ldr r0, [r5, 0x10]",
            "mov r2, r6",
            "mov r3, 0",
            "bl sym.avio_skip",
            "b 0x2a7cc",
            "ldrb fp, [sp, 0xc4]",
            "cmp fp, 0x54",
            "beq 0x2a40c",
            "ldr r0, [sp, 0x34]",
            "cmp r0, 0",
            "beq 0x2a78c",
            "add r0, sp, 0xc4",
            "mov r1, r8",
            "bl fcn.00029994",
            "cmp r0, 0",
            "str r0, [sp, 0x30]",
            "beq 0x2a78c",
            "ldr r1, [sp, 0x2c]",
            "ldr r2, [sp, 0x3c]",
            "orr r3, r1, r2",
            "orrs r3, r3, sl",
            "ldreq sl, [r5, 0x10]",
            "beq 0x2a5ac",
            "add r0, sp, 0x104",
            "add r1, sp, 0x100",
            "ldr r2, [sp, 0xf4]",
            "bl sym.imp.av_fast_malloc",
            "ldr r3, [sp, 0x104]",
            "cmp r3, 0",
            "bne 0x2a458",
            "ldr r2, [0x0002aac0]",
            "mov r0, r5",
            "mov r1, 0x10",
            "ldr r3, [sp, 0xf4]",
            "add r2, r4, r2",
            "b 0x2a4b4",
            "cmp sl, 0",
            "beq 0x2a500",
            "ldr r3, [sp, 0xf4]",
            "mov r0, r5",
            "ldr r2, [0x0002aac4]",
            "mov r1, 0x30",
            "str r6, [sp]",
            "str r3, [sp, 4]",
            "add r3, sp, 0xc4",
            "add r2, r4, r2",
            "bl sym.imp.av_log",
            "add r1, sp, 0xf8",
            "add r0, sp, 0xfc",
            "mov r2, r6",
            "bl sym.imp.av_fast_malloc",
            "ldr r1, [sp, 0xfc]",
            "cmp r1, 0",
            "bne 0x2a4bc",
            "ldr r2, [0x0002aac8]",
            "mov r0, r5",
            "add r1, r1, 0x10",
            "mov r3, r6",
            "add r2, r4, r2",
            "bl sym.imp.av_log",
            "b 0x2a7cc",
            "ldr r0, [r5, 0x10]",
            "mov r2, r6",
            "bl sym.avio_read",
            "subs r3, r0, 0",
            "bge 0x2a4e8",
            "ldr r2, [0x0002aacc]",
            "mov r0, r5",
            "mov r1, 0x10",
            "add r2, r4, r2",
            "bl sym.imp.av_log",
            "b 0x2a7cc",
            "ldr r0, [sp, 0x104]",
            "add r1, sp, 0xf4",
            "ldr r2, [sp, 0xfc]",
            "bl sym.imp.uncompress",
            "subs r3, r0, 0",
            "bne 0x2a510",
            "mov r6, 0",
            "mov r3, r4",
            "mov fp, r6",
            "b 0x2a574",
            "ldr r2, [0x0002aad0]",
            "mov r0, r5",
            "mov r1, 0x10",
            "add r2, r4, r2",
            "b 0x2a4b4",
            "cmp sl, 0",
            "bne 0x2a544",
            "ldr r4, [sp, 0x104]",
            "ldr r0, [r5, 0x10]",
            "str r3, [sp, 0x14]",
            "bl sym.avio_r8",
            "strb r0, [r4, r6]",
            "ldr r3, [sp, 0x14]",
            "cmp r6, 0",
            "beq 0x2a56c",
            "ldr r2, [sp, 0x104]",
            "ldrb r1, [r2, r6]",
            "cmp r1, 0",
            "bne 0x2a56c",
            "add r2, r2, r6",
            "ldrb r2, [r2, -1]",
            "cmp r2, 0xff",
            "subeq r6, r6, 1",
            "add fp, fp, 1",
            "add r6, r6, 1",
            "ldr r2, [sp, 0xf4]",
            "cmp fp, r2",
            "blo 0x2a524",
            "add sl, sp, 0x60",
            "mov r4, r3",
            "mov r0, sl",
            "mov r3, 0",
            "ldr r1, [sp, 0x104]",
            "mov r2, r6",
            "str r3, [sp]",
            "str r3, [sp, 4]",
            "str r3, [sp, 8]",
            "str r3, [sp, 0xc]",
            "bl fcn.00019224",
            "add r3, sp, 0x108",
            "ldrb r2, [r3, -0x44]!",
            "cmp r2, 0x54",
            "bne 0x2a768",
            "cmp r6, 0",
            "str r6, [sp, 0xf0]",
            "str r3, [sp, 0xec]",
            "ble 0x2a7cc",
            "mov r0, sl",
            "bl sym.avio_r8",
            "ldr r3, [sp, 0xf0]",
            "mov fp, r0",
            "mov r1, sl",
            "mov r0, r5",
            "mov r2, fp",
            "sub r3, r3, 1",
            "str r3, [sp, 0xf0]",
            "add r3, sp, 0xf0",
            "str r3, [sp]",
            "add r3, sp, 0xe8",
            "bl fcn.00029a50",
            "cmp r0, 0",
            "movlt r0, r5",
            "movlt r1, 0x10",
            "ldrlt r2, [sp, 0x38]",
            "ldrlt r3, [sp, 0xec]",
            "blt 0x2a4b4",
            "ldr r6, [sp, 0xec]",
            "ldr r1, [sp, 0x58]",
            "mov r0, r6",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x2a648",
            "ldr r1, [0x0002aad4]",
            "mov r0, r6",
            "add r1, r4, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x2a6b4",
            "ldr r3, [sp, 0x54]",
            "add r6, sp, 0xe4",
            "ldr r0, [sp, 0xe8]",
            "mov r2, r6",
            "add r1, r4, r3",
            "bl sym.imp.sscanf",
            "cmp r0, 1",
            "beq 0x2a684",
            "ldr r1, [0x0002aad8]",
            "mov r2, r6",
            "ldr r0, [sp, 0xe8]",
            "add r1, r4, r1",
            "bl sym.imp.sscanf",
            "cmp r0, 1",
            "bne 0x2a6b4",
            "ldr r3, [sp, 0xe4]",
            "cmp r3, 0x93",
            "bhi 0x2a6b4",
            "add r0, sp, 0xe8",
            "bl sym.imp.av_freep",
            "ldr r3, [0x0002aadc]",
            "ldr r2, [sp, 0xe4]",
            "ldr r3, [r4, r3]",
            "ldr r3, [r3, r2, lsl 2]",
            "str r3, [sp, 0xe8]",
            "mov r3, 0x10",
            "b 0x2a748",
            "ldr r6, [sp, 0xec]",
            "ldr r1, [sp, 0x5c]",
            "mov r0, r6",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x2a6e0",
            "mov r0, r6",
            "ldr r1, [sp, 0x50]",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x2a734",
            "ldr r3, [sp, 0xe8]",
            "mov r0, r5",
            "mov r1, sl",
            "mov r2, fp",
            "str r3, [sp, 0xec]",
            "add r3, sp, 0xf0",
            "str r3, [sp]",
            "add r3, sp, 0xe8",
            "bl fcn.00029a50",
            "cmp r0, 0",
            "movge r3, 0x1c",
            "bge 0x2a748",
            "add r6, sp, 0x108",
            "mov r0, r5",
            "ldr r3, [r6, -0x1c]!",
            "mov r1, 0x10",
            "ldr r2, [sp, 0x38]",
            "bl sym.imp.av_log",
            "mov r0, r6",
            "bl sym.imp.av_freep",
            "b 0x2a7cc",
            "ldr r3, [sp, 0xe8]",
            "ldrb r3, [r3]",
            "cmp r3, 0",
            "movne r3, 0x18",
            "moveq r3, 0x10",
            "ldr r2, [sp, 0xe8]",
            "cmp r2, 0",
            "beq 0x2a7cc",
            "add r0, r5, 0x4b0",
            "ldr r1, [sp, 0xec]",
            "add r0, r0, 8",
            "bl sym.imp.av_dict_set",
            "b 0x2a7cc",
            "ldr r0, [sp, 0x34]",
            "mov r2, r6",
            "ldr r1, [sp, 0x30]",
            "str r0, [sp]",
            "mov r0, r5",
            "ldr ip, [r1, 8]",
            "mov r1, sl",
            "blx ip",
            "b 0x2a7cc",
            "cmp fp, 0",
            "bne 0x2a7cc",
            "ldrb r3, [sp, 0xc5]",
            "ldr fp, [sp, 0x18]",
            "cmp r3, 0",
            "beq 0x2a7b8",
            "ldr r2, [0x0002aae0]",
            "mov r0, r5",
            "mov r1, 0x18",
            "add r2, r4, r2",
            "bl sym.imp.av_log",
            "ldr r0, [r5, 0x10]",
            "mov r2, r6",
            "mov r3, 0",
            "bl sym.avio_skip",
            "b 0x2a7f8",
            "mov r3, 0",
            "ldr r0, [r5, 0x10]",
            "str r3, [sp]",
            "ldrd r2, r3, [sp, 0x40]",
            "adds r2, r2, r7",
            "adc r3, r3, 0",
            "bl sym.avio_seek",
            "ldr r2, [sp, 0x28]",
            "cmp sb, r2",
            "bge 0x2a28c",
            "ldr fp, [sp, 0x18]",
            "cmp fp, 4",
            "bne 0x2a84c",
            "ldr r3, [sp, 0x1c]",
            "tst r3, 0x10",
            "beq 0x2a84c",
            "ldrd r0, r1, [sp, 0x20]",
            "mov r2, 0xa",
            "mov r3, 0",
            "adds r0, r0, r2",
            "adc r1, r1, r3",
            "strd r0, r1, [sp, 0x20]",
            "b 0x2a84c",
            "ldr r3, [0x0002aae4]",
            "ldr r2, [0x0002aae8]",
            "add r3, r4, r3",
            "str r3, [sp]",
            "mov r0, r5",
            "mov r1, 0x20",
            "mov r3, fp",
            "add r2, r4, r2",
            "bl sym.imp.av_log",
            "mov r3, 0",
            "ldr r0, [r5, 0x10]",
            "str r3, [sp]",
            "ldrd r2, r3, [sp, 0x20]",
            "bl sym.avio_seek",
            "ldr r0, [sp, 0x104]",
            "bl sym.imp.av_free",
            "ldr r0, [sp, 0xfc]",
            "bl sym.imp.av_free",
            "b 0x2a12c",
            "str r0, [sp]",
            "mov r2, r6",
            "ldr r0, [r5, 0x10]",
            "mov r3, r7",
            "bl sym.avio_seek",
            "ldr r3, [0x0002aaec]",
            "add r6, r5, 0x4b0",
            "add r6, r6, 8",
            "mov r1, 0",
            "mov r0, r6",
            "ldr r2, [r4, r3]",
            "bl fcn.000327c4",
            "ldr r2, [0x0002aaf0]",
            "mov r0, r6",
            "mov r1, 0",
            "add r2, r4, r2",
            "add r2, r2, 0x20",
            "bl fcn.000327c4",
            "ldr r3, [0x0002aaf4]",
            "mov r0, r6",
            "mov r1, 0",
            "ldr r2, [r4, r3]",
            "bl fcn.000327c4",
            "mov r1, 0",
            "mov r2, 0x11",
            "add r0, sp, 0xc4",
            "bl sym.imp.memset",
            "ldr r1, [0x0002aaf8]",
            "ldr r0, [r5, 0x4b8]",
            "add r1, r4, r1",
            "bl fcn.00029f94",
            "subs r3, r0, 0",
            "bne 0x2a910",
            "ldr r1, [0x0002aafc]",
            "ldr r0, [r5, 0x4b8]",
            "add r1, r4, r1",
            "bl fcn.00029f94",
            "subs r3, r0, 0",
            "beq 0x2aa90",
            "ldr r1, [r3, 4]",
            "mov r2, 5",
            "add r0, sp, 0xc4",
            "bl sym.imp.av_strlcpy",
            "ldr r1, [0x0002aaf8]",
            "mov r2, 0",
            "mov r3, r2",
            "mov r0, r6",
            "add r1, r4, r1",
            "bl sym.imp.av_dict_set",
            "ldr r1, [0x0002aafc]",
            "mov r2, 0",
            "mov r3, r2",
            "mov r0, r6",
            "add r1, r4, r1",
            "bl sym.imp.av_dict_set",
            "ldr r1, [0x0002ab00]",
            "ldr r0, [r5, 0x4b8]",
            "add r1, r4, r1",
            "bl fcn.00029f94",
            "cmp r0, 0",
            "bne 0x2a980",
            "ldr r1, [0x0002ab04]",
            "ldr r0, [r5, 0x4b8]",
            "add r1, r4, r1",
            "bl fcn.00029f94",
            "cmp r0, 0",
            "beq 0x2aa50",
            "ldr r3, [r0, 4]",
            "mov r1, 0xd",
            "ldr r2, [0x0002ab08]",
            "add r0, sp, 0xc8",
            "str r3, [sp]",
            "add r3, r3, 2",
            "add r2, r4, r2",
            "bl sym.imp.snprintf",
            "ldr r1, [0x0002ab00]",
            "mov r2, 0",
            "mov r3, r2",
            "mov r0, r6",
            "add r1, r4, r1",
            "bl sym.imp.av_dict_set",
            "ldr r1, [0x0002ab04]",
            "mov r2, 0",
            "mov r3, r2",
            "mov r0, r6",
            "add r1, r4, r1",
            "bl sym.imp.av_dict_set",
            "ldr r1, [0x0002ab0c]",
            "ldr r0, [r5, 0x4b8]",
            "add r1, r4, r1",
            "bl fcn.00029f94",
            "cmp r0, 0",
            "bne 0x2aa00",
            "ldr r1, [0x0002ab10]",
            "ldr r0, [r5, 0x4b8]",
            "add r1, r4, r1",
            "bl fcn.00029f94",
            "cmp r0, 0",
            "beq 0x2aa50",
            "ldr r3, [r0, 4]",
            "mov r1, 7",
            "add r0, sp, 0xce",
            "add r2, r3, 2",
            "str r2, [sp]",
            "ldr r2, [0x0002ab14]",
            "add r2, r4, r2",
            "bl sym.imp.snprintf",
            "ldr r1, [0x0002ab0c]",
            "mov r2, 0",
            "mov r3, r2",
            "mov r0, r6",
            "add r1, r4, r1",
            "bl sym.imp.av_dict_set",
            "ldr r1, [0x0002ab10]",
            "mov r2, 0",
            "mov r0, r6",
            "mov r3, r2",
            "add r1, r4, r1",
            "bl sym.imp.av_dict_set",
            "ldrb r3, [sp, 0xc4]",
            "cmp r3, 0",
            "beq 0x2aa90",
            "ldr r1, [0x0002ab18]",
            "mov r0, r6",
            "add r2, sp, 0xc4",
            "mov r3, 0",
            "add r1, r4, r1",
            "bl sym.imp.av_dict_set",
            "b 0x2aa90",
            "ldr r3, [0x0002ab1c]",
            "b 0x2a82c",
            "ldr r3, [0x0002ab20]",
            "b 0x2a82c",
            "ldr r3, [0x0002ab24]",
            "b 0x2a82c",
            "add sp, sp, 0x10c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.imp.av_fast_malloc": {
        "function_address": "0x00009e88",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x7d8]!"
        ]
    },
    "sym.imp.uncompress": {
        "function_address": "0x0000a11c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x620]!"
        ]
    },
    "fcn.0004d270": {
        "function_address": "0x0004d270",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "sub sp, sp, 0x30",
            "ldr r4, [0x0004d2dc]",
            "mov r7, r0",
            "mov r6, r1",
            "mov r8, r2",
            "bl sym.imp.av_log_get_level",
            "cmp r0, 0x2f",
            "add r4, pc, r4",
            "ble 0x4d2d4",
            "add r5, sp, 0xc",
            "mov r1, r8",
            "mov r2, 8",
            "mov r3, 1",
            "mov r0, r5",
            "bl fcn.000742a8",
            "ldr r2, [0x0004d2e0]",
            "mov r3, 0",
            "strb r3, [sp, 0x1c]",
            "mov r0, r7",
            "mov r1, 0x30",
            "mov r3, r6",
            "add r2, r4, r2",
            "str r5, [sp]",
            "bl sym.imp.av_log",
            "add sp, sp, 0x30",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "sym.imp.av_log_get_level": {
        "function_address": "0x00009738",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0xcb8]!"
        ]
    },
    "fcn.0004d0e4": {
        "function_address": "0x0004d0e4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "cmp r1, 0",
            "cmpne r3, 0",
            "ldr r7, [0x0004d264]",
            "sub sp, sp, 0x19c",
            "mov sl, r0",
            "mov fp, r2",
            "ldr r5, [r0, 0xc]",
            "mov r4, r1",
            "add r7, pc, r7",
            "str r3, [sp, 0xc]",
            "beq 0x4d250",
            "ldrh r8, [r5, 0xc]",
            "mov r2, 4",
            "add r6, r8, 0x10",
            "add r0, r1, r6",
            "ldr r1, [0x0004d268]",
            "add r1, r7, r1",
            "bl sym.imp.memcmp",
            "cmp r0, 0",
            "addeq r6, r8, 0x30",
            "ldr r0, [r4, r6]",
            "bl fcn.0004cd1c",
            "ldr r3, [r5, 0x14]",
            "cmp r0, r3",
            "beq 0x4d160",
            "ldr r2, [0x0004d26c]",
            "mov r0, sl",
            "mov r1, 0x30",
            "add r2, r7, r2",
            "bl sym.imp.av_log",
            "add r7, r4, r6",
            "mov r8, 0x2c",
            "ldr r0, [r7, 0x20]",
            "bl fcn.0004cd1c",
            "str r0, [sp, 8]",
            "mov sb, 0",
            "ldr r0, [r7, 0x24]",
            "bl fcn.0004cd1c",
            "ldr r3, [sp, 8]",
            "lsr r7, r0, 4",
            "mov r1, 0",
            "lsl r0, r7, 4",
            "adds r8, r8, r3",
            "adc sb, sb, 0",
            "adds r8, r8, r0",
            "adc sb, sb, r1",
            "mov r2, fp",
            "asr r3, r2, 0x1f",
            "cmp sb, r3",
            "bhi 0x4d250",
            "bne 0x4d1bc",
            "cmp r8, fp",
            "bhi 0x4d250",
            "add r8, sp, 0x10",
            "mov r3, 1",
            "mov r0, r8",
            "ldr r1, [sp, 0xc]",
            "mov r2, 0xc0",
            "add r6, r6, 0x2c",
            "bl sym.imp.av_des_init",
            "ldr r3, [sp, 8]",
            "mov sb, r8",
            "add r5, r5, 0x18",
            "mov r8, 0",
            "mov fp, 1",
            "add r6, r6, r3",
            "add r6, r4, r6",
            "b 0x4d248",
            "mov r2, r6",
            "mov r0, sb",
            "mov r1, r5",
            "mov r3, 2",
            "str r8, [sp]",
            "sub r7, r7, 1",
            "str fp, [sp, 4]",
            "add r6, r6, 0x10",
            "bl sym.imp.av_des_crypt",
            "mov r1, r5",
            "mov r2, r8",
            "mov r3, 0x10",
            "ldr r0, [sl, 0xc]",
            "bl fcn.0004cf20",
            "ldr r0, [sl, 0xc]",
            "mov r1, r4",
            "mov r2, r5",
            "bl fcn.0004cfe8",
            "cmp r0, 0",
            "beq 0x4d258",
            "cmp r7, 0",
            "bne 0x4d1f8",
            "mvn r0, 0",
            "b 0x4d25c",
            "mov r0, r8",
            "add sp, sp, 0x19c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0004cd1c": {
        "function_address": "0x0004cd1c",
        "instructions": [
            "rev r0, r0",
            "bx lr"
        ]
    },
    "fcn.0002ab30": {
        "function_address": "0x0002ab30",
        "instructions": [
            "ldr r3, [r0]",
            "push {r0, r1, r2, r4, r5, lr}",
            "add r4, sp, 8",
            "str r3, [r4, -4]!",
            "b 0x2ab78",
            "ldr r0, [r5]",
            "mov r1, 1",
            "bl fcn.00029994",
            "cmp r0, 0",
            "beq 0x2ab64",
            "ldr r3, [r0, 0xc]",
            "ldr r0, [r5, 4]",
            "blx r3",
            "ldr r3, [sp, 4]",
            "mov r0, r4",
            "ldr r5, [r3, 8]",
            "bl sym.imp.av_freep",
            "str r5, [sp, 4]",
            "ldr r5, [sp, 4]",
            "cmp r5, 0",
            "bne 0x2ab44",
            "pop {r1, r2, r3, r4, r5, pc}"
        ]
    },
    "fcn.0004e830": {
        "function_address": "0x0004e830",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x154",
            "ldr r6, [0x0004ebac]",
            "mov r5, r0",
            "str r3, [sp, 0x44]",
            "ldr r3, [0x0004ebb0]",
            "add r6, pc, r6",
            "ldr sb, [sp, 0x178]",
            "ldr r4, [r0, 0x10]",
            "add r3, r6, r3",
            "ldr r7, [r0, 0xc]",
            "str r3, [sp, 0x48]",
            "ldr r3, [0x0004ebb4]",
            "str r1, [sp, 0x3c]",
            "str r2, [sp, 0x40]",
            "add r3, r6, r3",
            "str r3, [sp, 0x4c]",
            "mov r3, 0",
            "mov r2, 0",
            "mov r1, 1",
            "mov r0, r4",
            "str r1, [sp]",
            "bl sym.avio_seek",
            "strd r0, r1, [sp, 0x30]",
            "mov r0, r4",
            "bl sym.avio_rb16",
            "mov r2, r0",
            "mov r0, r4",
            "str r2, [sp, 0x18]",
            "bl sym.avio_r8",
            "mov r8, r0",
            "mov r0, r4",
            "bl sym.avio_r8",
            "mov r0, r4",
            "bl sym.avio_r8",
            "mov r3, r0",
            "mov r0, r4",
            "str r3, [sp, 0x1c]",
            "bl sym.avio_r8",
            "mov fp, r0",
            "mov r0, r4",
            "bl sym.avio_rb16",
            "ldr r2, [sp, 0x18]",
            "movw r1, 0x4156",
            "mov sl, r0",
            "ldr r3, [sp, 0x1c]",
            "cmp r2, r1",
            "beq 0x4e908",
            "cmp sb, 0",
            "beq 0x4eba0",
            "mov r0, r5",
            "mov r1, 0x10",
            "ldr r2, [0x0004ebb8]",
            "b 0x4e92c",
            "sub r2, r8, 1",
            "str r8, [sp, 0x24]",
            "cmp r2, 1",
            "bls 0x4e938",
            "cmp sb, 0",
            "beq 0x4eba0",
            "ldr r2, [0x0004ebbc]",
            "mov r0, r5",
            "mov r1, 0x10",
            "add r2, r6, r2",
            "bl sym.imp.av_log",
            "b 0x4eba0",
            "cmp r3, 0x55",
            "beq 0x4e958",
            "cmp sb, 0",
            "beq 0x4e958",
            "mov r0, r5",
            "mov r1, 0x18",
            "ldr r2, [sp, 0x48]",
            "bl sym.imp.av_log",
            "movw r2, 0x17f8",
            "str sl, [sp, 0x20]",
            "cmp sl, r2",
            "ble 0x4e98c",
            "cmp sb, 0",
            "beq 0x4eba0",
            "ldr r2, [0x0004ebc0]",
            "mov r0, r5",
            "mov r1, 0x10",
            "mov r3, sl",
            "add r2, r6, r2",
            "bl sym.imp.av_log",
            "b 0x4eba0",
            "cmp r8, 1",
            "movne r3, 0",
            "moveq r3, 1",
            "ands r3, r3, fp, lsr 4",
            "beq 0x4e9c4",
            "mov r0, r4",
            "mov r8, 1",
            "bl sym.avio_rb32",
            "ldr r3, [sp, 0x20]",
            "mov sl, r0",
            "mov fp, 0",
            "sub r3, r3, 4",
            "str r3, [sp, 0x20]",
            "b 0x4eb3c",
            "cmp r8, 2",
            "bne 0x4eb70",
            "ldr r3, [r7]",
            "cmp r3, 0",
            "bne 0x4eae8",
            "mov r0, r4",
            "bl sym.avio_rb24",
            "mov fp, r0",
            "mov r0, r4",
            "bl sym.avio_r8",
            "mov r0, r4",
            "bl sym.avio_rb16",
            "str r0, [sp, 0x28]",
            "mov r0, r4",
            "bl sym.avio_rb16",
            "str r0, [sp, 0x2c]",
            "mov r0, r4",
            "bl sym.avio_r8",
            "cmp fp, 1",
            "beq 0x4ea48",
            "cmp sb, 0",
            "beq 0x4ea2c",
            "mov r0, r5",
            "mov r1, 0x18",
            "ldr r2, [sp, 0x4c]",
            "bl sym.imp.av_log",
            "sub r2, sl, 9",
            "mov r0, r4",
            "asr r3, r2, 0x1f",
            "bl sym.avio_skip",
            "cmp sb, 0",
            "bne 0x4e874",
            "b 0x4eba0",
            "mov fp, r0",
            "add sl, sp, 0x50",
            "mov r2, fp",
            "mov r1, sl",
            "mov r0, r4",
            "bl sym.avio_read",
            "ldr r1, [sp, 0x20]",
            "ldr r2, [sp, 0x28]",
            "sub r3, r1, 9",
            "rsb r3, fp, r3",
            "str r3, [sp, 0x20]",
            "sub r3, r2, 3",
            "rsb fp, fp, r3",
            "ldr r3, [sp, 0x2c]",
            "str fp, [r7]",
            "tst r3, 0x80",
            "beq 0x4eae8",
            "ldrb r2, [sp, 0x50]",
            "and r3, r2, 0xf0",
            "cmp r3, 0x20",
            "bne 0x4eae8",
            "ldrh r1, [sl, 1]",
            "ldrh r0, [sl, 3]",
            "and sl, r2, 0xff",
            "mov fp, 0",
            "mov r2, 0xe",
            "and r2, r2, sl",
            "mov r3, 0",
            "rev16 r1, r1",
            "lsr r1, r1, 1",
            "and r3, r3, fp",
            "rev16 r0, r0",
            "lsl sl, r2, 0x1d",
            "lsr r0, r0, 1",
            "lsl fp, r3, 0x1d",
            "lsl r1, r1, 0xf",
            "orr sl, sl, r0",
            "orr fp, fp, r2, lsr 3",
            "orr sl, sl, r1",
            "b 0x4eaf0",
            "mov sl, 0",
            "mov fp, 0x80000000",
            "ldr r3, [r7]",
            "ldr r1, [sp, 0x20]",
            "rsb r3, r1, r3",
            "cmp r3, 0",
            "str r3, [r7]",
            "bge 0x4eb2c",
            "cmp sb, 0",
            "beq 0x4eb24",
            "ldr r2, [0x0004ebc4]",
            "mov r0, r5",
            "mov r1, 0x18",
            "add r2, r6, r2",
            "bl sym.imp.av_log",
            "mov r3, 0",
            "str r3, [r7]",
            "cmp sl, 0",
            "bne 0x4eb3c",
            "cmp fp, 0x80000000",
            "beq 0x4eb7c",
            "ldr r2, [sp, 0x24]",
            "mov r3, 0",
            "str r3, [sp, 8]",
            "str r3, [sp, 0xc]",
            "add r3, r3, 1",
            "sub r1, r2, 1",
            "ldr r2, [r5, 0x18]",
            "str r3, [sp, 0x10]",
            "strd sl, fp, [sp]",
            "ldr r0, [r2, r1, lsl 2]",
            "ldrd r2, r3, [sp, 0x30]",
            "bl sym.av_add_index_entry",
            "b 0x4eb7c",
            "mov r8, 1",
            "mov sl, 0",
            "mov fp, 0x80000000",
            "ldr r3, [sp, 0x3c]",
            "mov r0, 0",
            "ldr r1, [sp, 0x20]",
            "ldr r2, [sp, 0x40]",
            "strd sl, fp, [r3]",
            "ldr r3, [sp, 0x44]",
            "str r1, [r2]",
            "str r8, [r3]",
            "b 0x4eba4",
            "mvn r0, 4",
            "add sp, sp, 0x154",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0004f318": {
        "function_address": "0x0004f318",
        "instructions": [
            "mov r3, 1",
            "push {r0, r1, r2, lr}",
            "mov r2, 0",
            "str r3, [sp]",
            "mov r3, 0",
            "bl sym.avio_seek",
            "add sp, sp, 0xc",
            "ldm sp!, {pc}"
        ]
    },
    "fcn.0004f568": {
        "function_address": "0x0004f568",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r4, r1",
            "mov r5, r0",
            "ldr r0, [r0]",
            "bl fcn.0004f318",
            "strd r0, r1, [r4, 8]",
            "ldr r0, [r5]",
            "bl sym.avio_rb32",
            "cmp r0, 7",
            "str r0, [r4]",
            "bls 0x4f5a8",
            "ldr r0, [r5]",
            "bl sym.avio_rl32",
            "str r0, [r4, 4]",
            "ldr r0, [r4]",
            "pop {r3, r4, r5, pc}",
            "mvn r0, 0",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.0004f400": {
        "function_address": "0x0004f400",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r1, 0",
            "sub sp, sp, 0x108",
            "ldr r6, [0x0004f55c]",
            "mov r4, r0",
            "bl sym.avformat_new_stream",
            "subs r5, r0, 0",
            "add r6, pc, r6",
            "beq 0x4f550",
            "ldr r3, [r5, 8]",
            "mov r2, 0x5a",
            "mov r7, 0",
            "ldr r0, [r4, 0x10]",
            "str r2, [r3, 0xd4]",
            "str r7, [r3, 0xd0]",
            "bl sym.avio_r8",
            "ldr r0, [r4, 0x10]",
            "bl sym.avio_r8",
            "ldr r0, [r4, 0x10]",
            "bl sym.avio_rb16",
            "ldr r0, [r4, 0x10]",
            "bl sym.avio_rb32",
            "mov r1, 0x20",
            "mov r3, r0",
            "mov r2, 1",
            "mov r0, r5",
            "bl sym.avpriv_set_pts_info",
            "ldr r0, [r4, 0x10]",
            "bl sym.avio_rb32",
            "mov r2, 0x20",
            "mov r3, 0",
            "ldr r0, [r4, 0x10]",
            "bl sym.avio_skip",
            "ldr r8, [r5, 8]",
            "ldr r0, [r4, 0x10]",
            "bl sym.avio_rb32",
            "str r0, [r8, 0x28]",
            "ldr r8, [r5, 8]",
            "ldr r0, [r4, 0x10]",
            "bl sym.avio_rb32",
            "str r0, [r8, 0x2c]",
            "ldr r0, [r4, 0x10]",
            "bl sym.avio_rb16",
            "ldr r8, [r5, 8]",
            "ldr r0, [r4, 0x10]",
            "bl sym.avio_rb16",
            "str r0, [r8, 0x24]",
            "ldr r8, [r5, 8]",
            "ldr r0, [r4, 0x10]",
            "bl sym.avio_rb16",
            "str r0, [r8, 0x20]",
            "ldr r0, [r4, 0x10]",
            "bl sym.avio_r8",
            "subs r8, r0, 0",
            "ble 0x4f514",
            "mov r0, r4",
            "mov r1, r7",
            "bl sym.avformat_new_stream",
            "subs r3, r0, 0",
            "beq 0x4f550",
            "ldr r3, [r3, 8]",
            "mov r2, 1",
            "ldr r1, [0x0004f560]",
            "str r2, [r3, 0xd0]",
            "str r1, [r3, 0xd4]",
            "mov r1, 0x20",
            "str r8, [r3, 0x40]",
            "ldr r3, [r5, 0x3c]",
            "bl sym.avpriv_set_pts_info",
            "add r7, sp, 4",
            "ldr r0, [r4, 0x10]",
            "mov r1, r7",
            "movw r2, 0x101",
            "bl sym.avio_read",
            "ldr r1, [0x0004f564]",
            "mov r4, 0",
            "add r0, r5, 0x138",
            "mov r2, r7",
            "mov r3, r4",
            "strb r4, [sp, 0x105]",
            "add r1, r6, r1",
            "bl sym.imp.av_dict_set",
            "mov r0, r4",
            "b 0x4f554",
            "mvn r0, 0xb",
            "add sp, sp, 0x108",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.0001a214": {
        "function_address": "0x0001a214",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "subs r7, r2, 0",
            "mov r4, r0",
            "mov r6, r1",
            "mvnlt r5, 0",
            "blt 0x1a298",
            "ldr r5, [r0, 0xc]",
            "ldr r3, [r0, 8]",
            "subs r5, r5, r3",
            "bne 0x1a24c",
            "bl fcn.00019b4c",
            "ldr r5, [r4, 0xc]",
            "ldr r3, [r4, 8]",
            "rsb r5, r3, r5",
            "cmp r5, r7",
            "movge r5, r7",
            "mov r0, r6",
            "ldr r1, [r4, 8]",
            "mov r2, r5",
            "bl sym.imp.memcpy",
            "ldr r3, [r4, 8]",
            "cmp r5, 0",
            "add r3, r3, r5",
            "str r3, [r4, 8]",
            "bne 0x1a298",
            "ldr r5, [r4, 0x48]",
            "cmp r5, 0",
            "bne 0x1a298",
            "mov r0, r4",
            "ldr r5, [0x0001a2a0]",
            "bl sym.url_feof",
            "cmp r0, 0",
            "moveq r5, 0",
            "mov r0, r5",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.00052b5c": {
        "function_address": "0x00052b5c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r5, r2",
            "mov r6, r3",
            "ldr r3, [r5, 8]",
            "sub sp, sp, 0x24",
            "mov r4, r1",
            "ldr r2, [sp, 0x48]",
            "ldr sb, [r3, 0xd0]",
            "ldr r7, [sp, 0x4c]",
            "ldr r8, [r0, 0xc]",
            "cmp sb, 0",
            "bne 0x52e8c",
            "ldr r3, [r5, 4]",
            "mov r0, r1",
            "str r2, [sp, 0x1c]",
            "str r3, [r8, 8]",
            "bl sym.avio_r8",
            "ldr r3, [sp, 0x1c]",
            "asr sl, r0, 6",
            "str r0, [sp, 8]",
            "cmp sl, 3",
            "sub r3, r3, 1",
            "str r3, [sp, 0x1c]",
            "beq 0x52be8",
            "mov r0, r4",
            "bl sym.avio_r8",
            "ldr r3, [sp, 0x1c]",
            "cmp sl, 1",
            "mov fp, r0",
            "moveq r2, sb",
            "sub r3, r3, 1",
            "str r3, [sp, 0x1c]",
            "moveq r3, sb",
            "beq 0x52c30",
            "b 0x52bec",
            "mov fp, sb",
            "add sb, sp, 0x1c",
            "mov r0, r4",
            "mov r1, sb",
            "bl fcn.00051720",
            "mov r1, sb",
            "mov r3, r0",
            "mov r0, r4",
            "str r3, [sp, 4]",
            "bl fcn.00051720",
            "mov sb, r0",
            "mov r0, r4",
            "bl sym.avio_r8",
            "ldr r1, [sp, 0x1c]",
            "mov r2, r0",
            "ldr r3, [sp, 4]",
            "sub r1, r1, 1",
            "str r1, [sp, 0x1c]",
            "ldr r0, [sp, 0x1c]",
            "cmp r0, 0",
            "blt 0x531b8",
            "tst sl, 1",
            "str r0, [r8, 0xc]",
            "beq 0x52cb4",
            "cmp sl, 3",
            "streq r3, [sp, 0x1c]",
            "moveq r2, sb",
            "asreq r3, r2, 0x1f",
            "strdeq r2, r3, [sp, 0x58]",
            "ldr r1, [sp, 0x1c]",
            "cmp r0, r1",
            "blt 0x531b8",
            "rsb r0, r1, r0",
            "add r1, r1, 9",
            "str r0, [r8, 0xc]",
            "mov r0, r7",
            "bl sym.imp.av_new_packet",
            "cmp r0, 0",
            "blt 0x531b8",
            "ldr r2, [r7, 0x10]",
            "mov r3, 0",
            "mov r0, r4",
            "strb r3, [r2]",
            "mov r2, 1",
            "ldr r1, [r7, 0x10]",
            "str r3, [r1, 5]",
            "str r2, [r1, 1]",
            "ldr r2, [sp, 0x1c]",
            "add r1, r1, 9",
            "bl sym.avio_read",
            "b 0x5317c",
            "ldr r1, [sp, 0x50]",
            "str fp, [r1]",
            "and fp, fp, 0x7f",
            "cmp fp, 1",
            "beq 0x52cd4",
            "ldr r1, [r6, 0x50]",
            "cmp r1, r2",
            "beq 0x52d40",
            "ldr r0, [sp, 8]",
            "str r2, [sp, 4]",
            "and r1, r0, 0x3f",
            "mov r0, r6",
            "lsl r1, r1, 1",
            "add r1, r1, 1",
            "add r3, r3, r1, lsl 3",
            "str r1, [r6, 0x58]",
            "add r3, r3, 1",
            "str r3, [r6, 0x48]",
            "bl sym.imp.av_free_packet",
            "mov r0, r6",
            "ldr r1, [r6, 0x48]",
            "bl sym.imp.av_new_packet",
            "cmp r0, 0",
            "ldr r2, [sp, 4]",
            "blt 0x531b8",
            "ldr r3, [r6, 0x58]",
            "mov r0, r4",
            "str r2, [r6, 0x50]",
            "lsl r3, r3, 3",
            "add r3, r3, 1",
            "str r3, [r6, 0x4c]",
            "mov r3, 0",
            "str r3, [r6, 0x54]",
            "bl fcn.00051688",
            "strd r0, r1, [r6, 0x60]",
            "cmp sl, 2",
            "bne 0x52d58",
            "ldr r3, [sp, 0x1c]",
            "cmp r3, sb",
            "strle r3, [sp, 0x1c]",
            "strgt sb, [sp, 0x1c]",
            "ldr r2, [r6, 0x54]",
            "ldr r3, [r6, 0x58]",
            "add r2, r2, 1",
            "cmp r2, r3",
            "str r2, [r6, 0x54]",
            "bgt 0x531b8",
            "ldr r3, [r6, 0x10]",
            "mov r1, 1",
            "mvn ip, 7",
            "add r2, r3, r2, lsl 3",
            "str r1, [r2, -7]",
            "ldr r0, [r6, 0x58]",
            "ldr r2, [r6, 0x54]",
            "ldr r1, [r6, 0x4c]",
            "sub r1, r1, 1",
            "add r2, r3, r2, lsl 3",
            "mla r1, ip, r0, r1",
            "str r1, [r2, -3]",
            "ldr r2, [sp, 0x1c]",
            "ldr r1, [r6, 0x4c]",
            "ldr r0, [r6, 0x48]",
            "add ip, r2, r1",
            "cmp ip, r0",
            "bgt 0x531b8",
            "add r1, r3, r1",
            "mov r0, r4",
            "bl sym.avio_read",
            "ldr r3, [sp, 0x1c]",
            "cmp r0, r3",
            "bne 0x531b8",
            "ldr r3, [r6, 0x4c]",
            "cmp sl, 2",
            "ldr r2, [r8, 0xc]",
            "add r3, r0, r3",
            "rsb r0, r0, r2",
            "str r3, [r6, 0x4c]",
            "str r0, [r8, 0xc]",
            "beq 0x52dfc",
            "ldr r2, [r6, 0x48]",
            "cmp r3, r2",
            "bne 0x531b8",
            "ldr r2, [r6, 0x54]",
            "mov r0, r7",
            "ldr r3, [r6, 0x10]",
            "mov r1, r6",
            "sub r2, r2, 1",
            "strb r2, [r3]",
            "mov r2, 0x48",
            "bl sym.imp.memcpy",
            "mov r3, 0",
            "ldr r0, [r6, 0x54]",
            "str r3, [r6, 0x10]",
            "str r3, [r6, 0x14]",
            "ldr r3, [r6, 0x58]",
            "cmp r3, r0",
            "beq 0x52e60",
            "ldr r1, [r7, 0x10]",
            "mvn ip, 7",
            "ldr r2, [r6, 0x4c]",
            "add r0, r1, r0, lsl 3",
            "add r1, r1, r3, lsl 3",
            "sub r2, r2, 1",
            "add r0, r0, 1",
            "add r1, r1, 1",
            "mla r2, ip, r3, r2",
            "bl sym.imp.memmove",
            "ldr r2, [r6, 0x54]",
            "ldr r3, [r6, 0x58]",
            "rsb r3, r3, r2",
            "ldr r2, [r6, 0x4c]",
            "add r3, r2, r3, lsl 3",
            "str r3, [r7, 0x14]",
            "ldrd r2, r3, [r6, 0x60]",
            "strd r2, r3, [r7, 0x38]",
            "mov r3, 0",
            "str r3, [r6, 0x58]",
            "b 0x5317c",
            "cmp sb, 1",
            "bne 0x53170",
            "ldr sb, [0x000531cc]",
            "ldr r1, [r6, 0xc4]",
            "ldr r3, [0x000531d0]",
            "cmp r1, r3",
            "cmpne r1, sb",
            "movne sb, 0",
            "moveq sb, 1",
            "beq 0x52ec0",
            "ldr r3, [0x000531d4]",
            "cmp r1, r3",
            "bne 0x530b0",
            "ldr r0, [sp, 0x54]",
            "ldr r2, [r6, 0x74]",
            "ldr r3, [r6, 0x7c]",
            "tst r0, 2",
            "ldr fp, [r6, 0x70]",
            "str r2, [sp, 0x14]",
            "movne r2, 0",
            "str r3, [sp, 8]",
            "ldr sl, [r6, 0x78]",
            "ldr sb, [r6, 0x80]",
            "strne r2, [r6, 0x70]",
            "bne 0x52ef8",
            "cmp fp, 0",
            "bne 0x52f04",
            "ldrd r2, r3, [sp, 0x58]",
            "mov fp, 0",
            "strd r2, r3, [r6, 0x68]",
            "ldr r2, [0x000531d0]",
            "cmp r1, r2",
            "beq 0x52f2c",
            "ldr r3, [0x000531d4]",
            "cmp r1, r3",
            "beq 0x53040",
            "ldr r3, [0x000531cc]",
            "cmp r1, r3",
            "bne 0x53054",
            "b 0x52f84",
            "ldr r1, [sp, 0x14]",
            "mov r0, sb",
            "bl fcn.0007d264",
            "add r2, sl, 1",
            "ldr r3, [sp, 0x14]",
            "add r2, r2, r2, lsr 31",
            "and r1, fp, 1",
            "asr fp, fp, 1",
            "str r0, [sp, 0xc]",
            "asr r2, r2, 1",
            "ldr r0, [sp, 0x14]",
            "mul r3, r3, sl",
            "mov ip, 0",
            "str r8, [sp, 0x10]",
            "mov r8, r0",
            "mla fp, r2, r1, fp",
            "str r3, [sp, 8]",
            "mov r3, sl",
            "mov sl, r5",
            "mov r5, ip",
            "mul fp, r0, fp",
            "b 0x5301c",
            "add r3, sl, sl, lsr 31",
            "ldr r1, [sp, 8]",
            "lsl ip, sb, 1",
            "str r8, [sp, 0x10]",
            "asr r3, r3, 1",
            "str sl, [sp, 0x14]",
            "mov r8, ip",
            "str r3, [sp, 0xc]",
            "mov r3, 0",
            "mov sl, r5",
            "mul fp, r1, fp",
            "mov r5, r3",
            "b 0x52fd4",
            "ldr r1, [r6, 0x10]",
            "rsb r2, r8, fp",
            "add r5, r5, 1",
            "mov r0, r4",
            "add r1, r1, r2",
            "ldr r2, [sp, 8]",
            "bl sym.avio_read",
            "ldr r2, [sp, 0xc]",
            "add fp, fp, r8",
            "cmp r5, r2",
            "blt 0x52fb8",
            "mov r5, sl",
            "ldr r8, [sp, 0x10]",
            "ldr sl, [sp, 0x14]",
            "b 0x53054",
            "ldr r0, [sp, 8]",
            "add r5, r5, 1",
            "ldr r1, [r6, 0x10]",
            "str r3, [sp, 4]",
            "rsb r2, r0, fp",
            "mov r0, r4",
            "add r1, r1, r2",
            "mov r2, r8",
            "bl sym.avio_read",
            "ldr r3, [sp, 4]",
            "ldr r2, [sp, 0xc]",
            "ldr r1, [sp, 8]",
            "cmp r5, r2",
            "add fp, fp, r1",
            "blt 0x52ff4",
            "mov r5, sl",
            "ldr r8, [sp, 0x10]",
            "mov sl, r3",
            "b 0x53054",
            "ldr r1, [r6, 0x10]",
            "mov r0, r4",
            "mov r2, sb",
            "mla r1, sb, fp, r1",
            "bl sym.avio_read",
            "ldr r3, [r6, 0x70]",
            "add r3, r3, 1",
            "cmp r3, sl",
            "str r3, [r6, 0x70]",
            "blt 0x531b8",
            "ldr r2, [r6, 0xc4]",
            "ldr r3, [0x000531d4]",
            "cmp r2, r3",
            "bne 0x53088",
            "ldr r0, [r6, 0x10]",
            "mov r1, sl",
            "mov r2, sb",
            "bl fcn.00052a74",
            "mov r3, 0",
            "mul r0, sl, sb",
            "str r3, [r6, 0x70]",
            "ldr r3, [r5]",
            "str r3, [r8, 0x10]",
            "ldr r3, [r5, 8]",
            "ldr r1, [r3, 0x100]",
            "bl fcn.0007d264",
            "str r0, [r8, 0x14]",
            "b 0x5317c",
            "ldr sl, [0x000531d8]",
            "ldr r3, [0x000531dc]",
            "cmp r1, r3",
            "cmpne r1, sl",
            "movne sl, 0",
            "moveq sl, 1",
            "bne 0x53120",
            "ldr r3, [r5]",
            "mov r0, r4",
            "str r3, [r8, 0x10]",
            "bl sym.avio_rb16",
            "ubfx r0, r0, 4, 4",
            "cmp r0, 0",
            "str r0, [r6, 0x70]",
            "addne sl, r6, 0x80",
            "bne 0x53104",
            "b 0x531b8",
            "add sb, sb, 1",
            "mov r0, r4",
            "bl sym.avio_rb16",
            "str r0, [sl, 4]!",
            "ldr r3, [r6, 0x70]",
            "cmp sb, r3",
            "blt 0x530f4",
            "ldrd r0, r1, [sp, 0x58]",
            "str r3, [r8, 0x14]",
            "strd r0, r1, [r6, 0x68]",
            "b 0x5317c",
            "mov r0, r4",
            "mov r1, r7",
            "bl sym.av_get_packet",
            "ldr r3, [r5, 8]",
            "ldr r2, [r3, 0xd4]",
            "ldr r3, [0x000531e0]",
            "cmp r2, r3",
            "ldreq r3, [r7, 0x10]",
            "bne 0x5317c",
            "b 0x5315c",
            "ldrb r2, [r3, -1]",
            "add sl, sl, 2",
            "ldrb r1, [r3, -2]",
            "strb r2, [r3, -2]",
            "strb r1, [r3, -1]",
            "ldr r2, [r7, 0x14]",
            "add r3, r3, 2",
            "cmp sl, r2",
            "blt 0x53148",
            "b 0x5317c",
            "mov r0, r1",
            "mov r1, r7",
            "bl sym.av_get_packet",
            "ldr r3, [r5]",
            "str r3, [r7, 0x18]",
            "ldrd r2, r3, [sp, 0x58]",
            "strd r2, r3, [r7]",
            "ldr r3, [sp, 0x54]",
            "tst r3, 2",
            "ldrne r3, [r7, 0x1c]",
            "orrne r3, r3, 1",
            "strne r3, [r7, 0x1c]",
            "ldr r3, [r5, 8]",
            "ldr r3, [r3, 0xd0]",
            "cmp r3, 1",
            "ldreq r0, [r8, 0x14]",
            "bne 0x531c0",
            "b 0x531c4",
            "mvn r0, 0",
            "b 0x531c4",
            "mov r0, 0",
            "add sp, sp, 0x24",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00051720": {
        "function_address": "0x00051720",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r5, r1",
            "mov r4, r0",
            "bl sym.avio_rb16",
            "lsl r0, r0, 0x11",
            "ldr r3, [r5]",
            "lsr r6, r0, 0x11",
            "sub r3, r3, 2",
            "cmp r6, 0x4000",
            "str r3, [r5]",
            "subge r0, r6, 0x4000",
            "popge {r4, r5, r6, pc}",
            "mov r0, r4",
            "bl sym.avio_rb16",
            "ldr r3, [r5]",
            "orr r0, r0, r6, lsl 16",
            "sub r3, r3, 2",
            "str r3, [r5]",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.00051688": {
        "function_address": "0x00051688",
        "instructions": [
            "mov r3, 1",
            "push {r0, r1, r2, lr}",
            "mov r2, 0",
            "str r3, [sp]",
            "mov r3, 0",
            "bl sym.avio_seek",
            "add sp, sp, 0xc",
            "ldm sp!, {pc}"
        ]
    },
    "fcn.000531e4": {
        "function_address": "0x000531e4",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sl, lr}",
            "mov r6, r2",
            "mov r7, r3",
            "ldr r4, [r0, 0xc]",
            "ldr r3, [r3, 0xc4]",
            "ldr r2, [0x000532cc]",
            "ldr r0, [0x000532d0]",
            "ldr r8, [sp, 0x20]",
            "cmp r3, r2",
            "cmpne r3, r0",
            "bne 0x53234",
            "ldr r2, [r7, 0x70]",
            "mov r0, r1",
            "ldr r3, [r4, 0x14]",
            "mov r1, r8",
            "rsb r3, r3, r2",
            "add r3, r7, r3, lsl 2",
            "ldr r2, [r3, 0x84]",
            "bl sym.av_get_packet",
            "b 0x53280",
            "ldr r3, [r6, 8]",
            "mov r0, r8",
            "ldr r1, [r3, 0x100]",
            "bl sym.imp.av_new_packet",
            "ldr r3, [r6, 8]",
            "ldr r0, [r7, 0x78]",
            "ldr sl, [r8, 0x10]",
            "ldr r5, [r3, 0x100]",
            "ldr r3, [r7, 0x80]",
            "mov r1, r5",
            "mul r0, r0, r3",
            "bl fcn.0007d264",
            "ldr r1, [r4, 0x14]",
            "mov r2, r5",
            "ldr r3, [r7, 0x10]",
            "rsb r1, r1, r0",
            "mov r0, sl",
            "mla r1, r5, r1, r3",
            "bl sym.imp.memcpy",
            "ldr r3, [r7, 0x68]",
            "ldr r0, [r4, 0x14]",
            "ldr r2, [r7, 0x6c]",
            "cmp r3, 0",
            "sub r0, r0, 1",
            "str r0, [r4, 0x14]",
            "str r3, [r8]",
            "str r2, [r8, 4]",
            "bne 0x532ac",
            "cmp r2, 0x80000000",
            "beq 0x532bc",
            "mov r3, 1",
            "mov r4, 0",
            "mov r5, 0x80000000",
            "strd r4, r5, [r7, 0x68]",
            "str r3, [r8, 0x1c]",
            "ldr r3, [r6]",
            "str r3, [r8, 0x18]",
            "pop {r3, r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "fcn.000521e4": {
        "function_address": "0x000521e4",
        "instructions": [
            "push {r3, lr}",
            "mov r0, 0xc8",
            "bl sym.imp.av_mallocz",
            "mvn r3, 0",
            "str r3, [r0, 0x50]"
        ]
    },
    "fcn.00052238": {
        "function_address": "0x00052238",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r1",
            "sub sp, sp, 0x14",
            "mov r1, 0x40",
            "mov r7, r0",
            "mov r5, r2",
            "mov r0, r2",
            "mov sb, r3",
            "mov r2, 1",
            "mov r3, 0x3e8",
            "ldr fp, [sp, 0x38]",
            "bl sym.avpriv_set_pts_info",
            "mov r0, r4",
            "ldr r6, [0x00052418]",
            "bl fcn.00051688",
            "mov r8, r0",
            "mov r0, r4",
            "bl sym.avio_rb32",
            "ldr r3, [0x0005241c]",
            "add r6, pc, r6",
            "mov sl, r0",
            "cmp r0, r3",
            "bne 0x522bc",
            "mov r3, 0",
            "mov r0, r7",
            "str r3, [sp]",
            "mov r1, r4",
            "mov r2, r5",
            "mov r3, sb",
            "bl fcn.00051bd4",
            "cmp r0, 0",
            "beq 0x523e4",
            "b 0x5240c",
            "mov r0, r4",
            "bl sym.avio_rl32",
            "ldr r3, [0x00052420]",
            "cmp r0, r3",
            "beq 0x522ec",
            "ldr r2, [0x00052424]",
            "mov r0, r7",
            "mov r1, 0x18",
            "mov r3, sl",
            "add r2, r6, r2",
            "bl sym.imp.av_log",
            "b 0x523e4",
            "ldr sb, [r5, 8]",
            "mov r0, r4",
            "bl sym.avio_rl32",
            "ldr r3, [0x00052428]",
            "str r0, [sb, 0xd8]",
            "ldr sb, [r5, 8]",
            "ldr r0, [r6, r3]",
            "ldr r1, [sb, 0xd8]",
            "bl fcn.0006ffc8",
            "str r0, [sb, 0xd4]",
            "ldr sb, [r5, 8]",
            "ldr r3, [sb, 0xd4]",
            "cmp r3, 0",
            "beq 0x522d0",
            "mov r0, r4",
            "bl sym.avio_rb16",
            "ldr r6, [r5, 8]",
            "str r0, [sb, 0x28]",
            "mov r0, r4",
            "bl sym.avio_rb16",
            "mov r2, 2",
            "str r0, [r6, 0x2c]",
            "mov r3, 0",
            "mov r0, r4",
            "bl sym.avio_skip",
            "mov r2, 4",
            "mov r3, 0",
            "mov r0, r4",
            "bl sym.avio_skip",
            "ldr r3, [r5, 8]",
            "mov r2, 0",
            "mov r0, r4",
            "str r2, [r3, 0xd0]",
            "mov r3, 3",
            "str r3, [r5, 0x60]",
            "bl sym.avio_rb32",
            "ldr r6, [r5, 8]",
            "mov r7, r0",
            "mov r0, r4",
            "bl fcn.00051688",
            "add r2, fp, r8",
            "mov r1, r6",
            "rsb r2, r0, r2",
            "mov r0, r4",
            "bl fcn.00051ac4",
            "cmp r0, 0",
            "blt 0x52410",
            "add r6, r5, 0xc",
            "mov r0, r7",
            "asr r1, r0, 0x1f",
            "mvn r2, 0xc0000000",
            "mov r3, 0",
            "strd r0, r1, [sp]",
            "add r0, r5, 0x10",
            "strd r2, r3, [sp, 8]",
            "mov r1, r6",
            "mov r2, 0x10000",
            "mov r3, 0",
            "bl sym.imp.av_reduce",
            "ldm r6, {r0, r1}",
            "add r5, r5, 0x1a0",
            "stm r5, {r0, r1}",
            "mov r0, r4",
            "bl fcn.00051688",
            "rsb r8, r8, r0",
            "mov r0, r4",
            "rsb fp, r8, fp",
            "mov r2, fp",
            "asr r3, r2, 0x1f",
            "bl sym.avio_skip",
            "mov r0, 0",
            "b 0x52410",
            "mvn r0, 0",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00051bd4": {
        "function_address": "0x00051bd4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov sl, r0",
            "sub sp, sp, 0x114",
            "ldr r4, [0x00052198]",
            "mov r0, r1",
            "mov r6, r1",
            "mov r8, r2",
            "mov r7, r3",
            "bl sym.avio_rb16",
            "cmp r0, 3",
            "add r4, pc, r4",
            "mov sb, r0",
            "bne 0x51cf4",
            "mov r0, r6",
            "bl sym.avio_rb16",
            "mov sb, r0",
            "mov r0, r6",
            "bl fcn.00051688",
            "mov r2, 0xe",
            "mov r3, 0",
            "mov r4, r0",
            "mov r0, r6",
            "mov r5, r1",
            "bl sym.avio_skip",
            "mov r0, sl",
            "mov r1, 0",
            "bl fcn.00051b38",
            "mov r0, r6",
            "bl fcn.00051688",
            "adds r4, r4, sb",
            "mov r2, 1",
            "adc r5, r5, sb, asr 31",
            "mov r3, 0",
            "adds r2, r2, r0",
            "adc r3, r3, r1",
            "cmp r5, r3",
            "bgt 0x51c74",
            "bne 0x51c8c",
            "cmp r4, r2",
            "bls 0x51c8c",
            "mov r0, r6",
            "bl sym.avio_r8",
            "mov r0, r6",
            "add r1, sp, 0x10",
            "mov r2, 0x100",
            "bl fcn.000516f4",
            "mov r0, r6",
            "bl fcn.00051688",
            "cmp r5, r1",
            "bgt 0x51ca8",
            "bne 0x51cc8",
            "cmp r4, r0",
            "bls 0x51cc8",
            "mov r0, r6",
            "bl fcn.00051688",
            "mov r2, r4",
            "mov r3, r5",
            "subs r2, r2, r0",
            "sbc r3, r3, r1",
            "mov r0, r6",
            "bl sym.avio_skip",
            "ldr r3, [r8, 8]",
            "mov r2, 0x1f40",
            "str r2, [r3, 0x3c]",
            "mov r2, 1",
            "str r2, [r3, 0x40]",
            "str r2, [r3, 0xd0]",
            "mov r2, 0x13000",
            "str r2, [r3, 0xd4]",
            "ldr r3, [0x0005219c]",
            "str r3, [r7, 0xc4]",
            "b 0x52184",
            "mov r2, 2",
            "mov r3, 0",
            "mov r0, r6",
            "bl sym.avio_skip",
            "mov r0, r6",
            "bl sym.avio_rb32",
            "mov r0, r6",
            "bl sym.avio_rb32",
            "mov r0, r6",
            "bl sym.avio_rb16",
            "mov r0, r6",
            "bl sym.avio_rb32",
            "mov r0, r6",
            "bl sym.avio_rb16",
            "str r0, [sp, 4]",
            "mov r0, r6",
            "bl sym.avio_rb32",
            "str r0, [sp, 8]",
            "str r0, [r7, 0x7c]",
            "mov r0, r6",
            "bl sym.avio_rb32",
            "mov r0, r6",
            "bl sym.avio_rb32",
            "mov r0, r6",
            "bl sym.avio_rb32",
            "mov r0, r6",
            "bl sym.avio_rb16",
            "ldr fp, [r8, 8]",
            "mov r5, r0",
            "str r0, [r7, 0x78]",
            "mov r0, r6",
            "bl sym.avio_rb16",
            "str r0, [fp, 0x100]",
            "mov r0, r6",
            "bl sym.avio_rb16",
            "str r0, [sp, 0xc]",
            "str r0, [r7, 0x74]",
            "mov r0, r6",
            "bl sym.avio_rb16",
            "cmp sb, 5",
            "bne 0x51db0",
            "mov r0, r6",
            "bl sym.avio_rb16",
            "mov r0, r6",
            "bl sym.avio_rb16",
            "mov r0, r6",
            "bl sym.avio_rb16",
            "ldr fp, [r8, 8]",
            "mov r0, r6",
            "bl sym.avio_rb16",
            "str r0, [fp, 0x3c]",
            "mov r0, r6",
            "bl sym.avio_rb32",
            "ldr fp, [r8, 8]",
            "mov r0, r6",
            "bl sym.avio_rb16",
            "cmp sb, 5",
            "str r0, [fp, 0x40]",
            "add fp, sp, 0x10",
            "bne 0x51e0c",
            "mov r0, r6",
            "bl sym.avio_rl32",
            "mov r1, fp",
            "str r0, [r7, 0xc4]",
            "mov r2, 4",
            "mov r0, r6",
            "bl sym.avio_read",
            "mov r3, 0",
            "strb r3, [sp, 0x14]",
            "b 0x51e34",
            "mov r0, r6",
            "mov r1, fp",
            "mov r2, 0x100",
            "bl fcn.000516f4",
            "ldr r3, [sp, 0x10]",
            "mov r0, r6",
            "str r3, [r7, 0xc4]",
            "mov r1, fp",
            "mov r2, 0x100",
            "bl fcn.000516f4",
            "ldr fp, [r8, 8]",
            "mov r3, 1",
            "ldr r2, [0x000521a0]",
            "ldr r1, [sp, 0x10]",
            "str r3, [fp, 0xd0]",
            "str r1, [fp, 0xd8]",
            "ldr r0, [r4, r2]",
            "str r3, [sp]",
            "bl fcn.0006ffc8",
            "str r0, [fp, 0xd4]",
            "ldr r0, [r8, 8]",
            "ldr r1, [0x000521a4]",
            "ldr r3, [sp]",
            "ldr r2, [r0, 0xd4]",
            "cmp r2, r1",
            "beq 0x51ebc",
            "bhi 0x51e94",
            "ldr r3, [0x000521a8]",
            "cmp r2, r3",
            "beq 0x51ec4",
            "ldr r3, [0x000521ac]",
            "cmp r2, r3",
            "bne 0x5201c",
            "b 0x51fa8",
            "ldr r3, [0x000521b0]",
            "cmp r2, r3",
            "beq 0x51ee0",
            "add r3, r3, 0xb",
            "cmp r2, r3",
            "beq 0x51ee0",
            "sub r3, r3, 0x16",
            "cmp r2, r3",
            "bne 0x5201c",
            "b 0x51ee0",
            "str r3, [r8, 0x60]",
            "b 0x5202c",
            "mov r3, 0",
            "str r3, [r0, 0x1c]",
            "ldr r3, [r0, 0x100]",
            "str r3, [r7, 0x80]",
            "ldr r3, [sp, 8]",
            "str r3, [r0, 0x100]",
            "b 0x5202c",
            "mov r0, r6",
            "bl sym.avio_rb16",
            "mov r0, r6",
            "bl sym.avio_r8",
            "cmp sb, 5",
            "bne 0x51f00",
            "mov r0, r6",
            "bl sym.avio_r8",
            "mov r0, r6",
            "bl sym.avio_rb32",
            "add r3, r0, 0x10",
            "mov r2, r0",
            "cmp r3, r0",
            "bls 0x51fe0",
            "ldr r1, [r8, 8]",
            "ldr r3, [r1, 0x100]",
            "ldr r0, [r1, 0xd4]",
            "str r3, [r7, 0x80]",
            "ldr r3, [0x000521b4]",
            "cmp r0, r3",
            "bne 0x51f74",
            "ldr r0, [sp, 4]",
            "cmp r0, 3",
            "ble 0x51f60",
            "ldr r2, [0x000521b8]",
            "mov r0, sl",
            "mov r1, 0x10",
            "ldr r3, [sp, 4]",
            "add r2, r4, r2",
            "bl sym.imp.av_log",
            "mvn r0, 0",
            "b 0x52190",
            "ldr r3, [0x000521bc]",
            "ldr r0, [sp, 4]",
            "ldr r3, [r4, r3]",
            "ldrb r3, [r3, r0]",
            "b 0x51f9c",
            "ldr r3, [sp, 0xc]",
            "cmp r3, 0",
            "ldrgt r3, [r7, 0x74]",
            "bgt 0x51f9c",
            "ldr r2, [0x000521c0]",
            "mov r0, sl",
            "mov r1, 0x10",
            "add r2, r4, r2",
            "bl sym.imp.av_log",
            "b 0x51f58",
            "str r3, [r1, 0x100]",
            "mov r0, r6",
            "b 0x5200c",
            "mov r0, r6",
            "bl sym.avio_rb16",
            "mov r0, r6",
            "bl sym.avio_r8",
            "cmp sb, 5",
            "bne 0x51fc8",
            "mov r0, r6",
            "bl sym.avio_r8",
            "mov r0, r6",
            "bl sym.avio_rb32",
            "add r3, r0, 0x10",
            "mov sb, r0",
            "cmp r3, r0",
            "bhi 0x51ff0",
            "mov r0, sl",
            "mov r1, 0x10",
            "ldr r2, [0x000521c4]",
            "b 0x51f90",
            "cmp r0, 0",
            "ble 0x5202c",
            "mov r0, r6",
            "bl sym.avio_r8",
            "ldr r1, [r8, 8]",
            "mov r0, r6",
            "sub r2, sb, 1",
            "bl fcn.00051ac4",
            "cmp r0, 0",
            "bge 0x5202c",
            "b 0x52190",
            "add r0, r0, 0xb0",
            "add r1, sp, 0x10",
            "mov r2, 0x20",
            "bl sym.imp.av_strlcpy",
            "ldr r3, [r7, 0xc4]",
            "ldr r2, [0x000521c8]",
            "ldr r1, [0x000521cc]",
            "cmp r3, r2",
            "cmpne r3, r1",
            "beq 0x52050",
            "ldr r2, [0x000521d0]",
            "cmp r3, r2",
            "bne 0x52088",
            "ldr r3, [r8, 8]",
            "ldr r3, [r3, 0x100]",
            "cmp r3, 0",
            "ble 0x5218c",
            "ldr r1, [r7, 0x80]",
            "muls r1, r1, r5",
            "bmi 0x5218c",
            "cmp r1, r3",
            "blt 0x5218c",
            "mov r0, r7",
            "bl sym.imp.av_new_packet",
            "cmp r0, 0",
            "mvnlt r0, 0xb",
            "blt 0x52190",
            "ldr r3, [r7, 0xc4]",
            "ldr r2, [0x000521d4]",
            "cmp r3, r2",
            "beq 0x52150",
            "bgt 0x520b8",
            "ldr r2, [0x0005219c]",
            "cmp r3, r2",
            "beq 0x52150",
            "add r2, r2, 0x4000000",
            "cmp r3, r2",
            "bne 0x52138",
            "b 0x520e0",
            "ldr r2, [0x000521d0]",
            "cmp r3, r2",
            "beq 0x52150",
            "ldr r2, [0x000521d8]",
            "cmp r3, r2",
            "beq 0x52150",
            "ldr r2, [0x000521cc]",
            "cmp r3, r2",
            "bne 0x52138",
            "b 0x5211c",
            "ldr r2, [r7, 0x7c]",
            "ldr r3, [r7, 0x80]",
            "cmp r2, r3",
            "movle r1, 0",
            "movgt r1, 1",
            "cmp r5, 1",
            "orrle r1, r1, 1",
            "cmp r1, 0",
            "bne 0x5218c",
            "mul r2, r2, r5",
            "and r5, r5, 1",
            "add r5, r5, 2",
            "mul r3, r3, r5",
            "cmp r2, r3",
            "b 0x52130",
            "ldr r3, [r7, 0x74]",
            "cmp r3, 0",
            "ble 0x5218c",
            "ldr r2, [r7, 0x80]",
            "cmp r3, r2",
            "ble 0x52150",
            "b 0x5218c",
            "ldr r2, [0x000521dc]",
            "mov r0, 0",
            "mov r1, r0",
            "add r2, r4, r2",
            "bl sym.imp.av_log",
            "b 0x5218c",
            "ldr r0, [sp, 0x138]",
            "cmp r0, 0",
            "ldreq r0, [sp, 0x138]",
            "beq 0x52190",
            "mov r0, r6",
            "bl sym.avio_r8",
            "mov r0, r6",
            "bl sym.avio_r8",
            "mov r0, r6",
            "bl sym.avio_r8",
            "mov r0, sl",
            "mov r1, 0",
            "bl fcn.00051b38",
            "mov r0, 0",
            "b 0x52190",
            "ldr r0, [0x000521e0]",
            "add sp, sp, 0x114",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00051ac4": {
        "function_address": "0x00051ac4",
        "instructions": [
            "cmp r2, 0x1000000",
            "push {r4, r5, r6, lr}",
            "mov r6, r0",
            "mov r5, r1",
            "mov r4, r2",
            "mvnhs r0, 0",
            "pophs {r4, r5, r6, pc}",
            "add r0, r2, 0x10",
            "bl sym.imp.av_malloc",
            "cmp r0, 0",
            "mov r1, r0",
            "str r0, [r5, 0x18]",
            "beq 0x51b30",
            "mov r2, r4",
            "mov r0, r6",
            "bl sym.avio_read",
            "ldr r3, [r5, 0x18]",
            "mov r1, 0",
            "str r0, [r5, 0x1c]",
            "mov r2, 0x10",
            "add r0, r3, r0",
            "bl sym.imp.memset",
            "ldr r3, [r5, 0x1c]",
            "cmp r3, r4",
            "moveq r0, 0",
            "mvnne r0, 4",
            "pop {r4, r5, r6, pc}",
            "mvn r0, 0xb",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.00051b38": {
        "function_address": "0x00051b38",
        "instructions": [
            "ldr r3, [0x00051bcc]",
            "push {r4, r5, r6, r7, r8, sl, lr}",
            "sub sp, sp, 0x400",
            "ldr r8, [0x00051bd0]",
            "sub sp, sp, 4",
            "add r3, pc, r3",
            "add sl, r0, 0x4b0",
            "mov r4, r0",
            "mov r7, r1",
            "ldr r8, [r3, r8]",
            "mov r6, sp",
            "add sl, sl, 8",
            "sub r5, r8, 4",
            "add r8, r8, 0xc",
            "b 0x51bb8",
            "cmp r7, 0",
            "beq 0x51b88",
            "ldr r0, [r4, 0x10]",
            "bl sym.avio_rb16",
            "b 0x51b90",
            "ldr r0, [r4, 0x10]",
            "bl sym.avio_r8",
            "mov r3, r0",
            "mov r1, sp",
            "ldr r0, [r4, 0x10]",
            "mov r2, 0x400",
            "bl fcn.000516a8",
            "mov r0, sl",
            "ldr r1, [r5, 4]!",
            "mov r2, sp",
            "mov r3, 0",
            "bl sym.imp.av_dict_set",
            "cmp r5, r8",
            "bne 0x51b74",
            "add sp, sp, 4",
            "add sp, sp, 0x400",
            "pop {r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "fcn.000516f4": {
        "function_address": "0x000516f4",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r4, r0",
            "mov r6, r1",
            "mov r5, r2",
            "bl sym.avio_r8",
            "mov r1, r6",
            "mov r3, r0",
            "mov r2, r5",
            "mov r0, r4",
            "pop {r4, r5, r6, lr}",
            "b fcn.000516a8"
        ]
    },
    "fcn.00050740": {
        "function_address": "0x00050740",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r2",
            "sub sp, sp, 0x2c",
            "mov sl, r3",
            "mov r6, 0",
            "b 0x50778",
            "ldrsb r3, [r0]",
            "cmp r3, 0",
            "bge 0x5094c",
            "ldrh r3, [r0, 3]",
            "rev16 r3, r3",
            "add r0, r0, r3",
            "rsb r1, r3, r1",
            "add r6, r6, r3",
            "cmp r1, 4",
            "ble 0x5094c",
            "ldrb r3, [r0, 1]",
            "cmp r3, 0xff",
            "beq 0x50758",
            "cmp r1, 0xf",
            "ble 0x5094c",
            "lsl r1, r1, 3",
            "add r7, sp, 0x14",
            "lsr r3, r1, 0x1f",
            "cmp r3, 0",
            "movne r3, 0",
            "asreq r3, r1, 3",
            "movne r0, 0",
            "movne r1, 0",
            "str r0, [sp, 0x14]",
            "add r0, r0, r3",
            "str r1, [sp, 0x20]",
            "mov r3, 0",
            "add r1, r1, 8",
            "str r0, [sp, 0x18]",
            "mov r0, r7",
            "str r3, [sp, 0x1c]",
            "str r1, [sp, 0x24]",
            "bl fcn.0004ff84",
            "mov r5, r0",
            "mov r0, r7",
            "bl fcn.0004ff84",
            "mov r1, 5",
            "mov fp, r0",
            "mov r0, r7",
            "bl fcn.0004ff48",
            "ldr r2, [sp, 0x1c]",
            "mov r8, r0",
            "ldr r3, [sp, 0x24]",
            "mov r0, r7",
            "mov r1, 0x10",
            "add r2, r2, 1",
            "cmp r2, r3",
            "strls r2, [sp, 0x1c]",
            "strhi r3, [sp, 0x1c]",
            "bl fcn.0004ff48",
            "cmp r5, 0",
            "mov sb, r0",
            "beq 0x50844",
            "ldr r2, [sp, 0x1c]",
            "ldr r3, [sp, 0x24]",
            "add r2, r2, 0x10",
            "cmp r2, r3",
            "strls r2, [sp, 0x1c]",
            "strhi r3, [sp, 0x1c]",
            "ldr r2, [sp, 0x1c]",
            "add r5, sp, 0x14",
            "ldr r3, [sp, 0x24]",
            "mov r1, 5",
            "mov r0, r5",
            "add r2, r2, 2",
            "cmp r2, r3",
            "strls r2, [sp, 0x1c]",
            "strhi r3, [sp, 0x1c]",
            "bl fcn.0004ff48",
            "mov r7, r0",
            "mov r0, r5",
            "bl fcn.0004ff84",
            "mov r1, 0x10",
            "str r0, [sp, 4]",
            "mov r0, r5",
            "bl fcn.0004ff48",
            "mov r1, 0x10",
            "str r0, [sp, 8]",
            "mov r0, r5",
            "bl fcn.0004ff48",
            "cmp r8, 0x1f",
            "str r0, [sp, 0xc]",
            "bne 0x508b4",
            "mov r0, r5",
            "mov r1, 0x10",
            "bl fcn.0004ff48",
            "mov r8, r0",
            "cmp fp, 0",
            "beq 0x508d4",
            "ldr r2, [sp, 0x1c]",
            "ldr r3, [sp, 0x24]",
            "add r2, r2, 0x10",
            "cmp r2, r3",
            "strls r2, [sp, 0x1c]",
            "strhi r3, [sp, 0x1c]",
            "cmp r7, 0x1f",
            "bne 0x508ec",
            "add r0, sp, 0x14",
            "mov r1, 0x10",
            "bl fcn.0004ff48",
            "mov r7, r0",
            "ldr r1, [sp, 0x50]",
            "cmp r4, 0",
            "ldr r2, [sp, 0x54]",
            "strne r8, [r4]",
            "cmp sl, 0",
            "strne sb, [sl]",
            "cmp r1, 0",
            "strne r7, [r1]",
            "cmp r2, 0",
            "beq 0x50924",
            "ldr r1, [sp, 4]",
            "rsbs r3, r1, 1",
            "movlo r3, 0",
            "str r3, [r2]",
            "ldr r2, [sp, 0x58]",
            "cmp r2, 0",
            "ldrne r1, [sp, 0xc]",
            "ldrne r2, [sp, 8]",
            "orrne r3, r1, r2, lsl 16",
            "ldrne r1, [sp, 0x58]",
            "strne r3, [r1]",
            "ldr r0, [sp, 0x1c]",
            "add r0, r6, r0, asr 3",
            "b 0x50950",
            "mvn r0, 0",
            "add sp, sp, 0x2c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0004ff84": {
        "function_address": "0x0004ff84",
        "instructions": [
            "ldr r3, [r0, 8]",
            "mov r2, r0",
            "ldr r1, [r0]",
            "ldrb r0, [r1, r3, lsr 3]",
            "and r1, r3, 7",
            "lsl r0, r0, r1",
            "ldr r1, [r2, 0x10]",
            "ubfx r0, r0, 7, 1",
            "cmp r3, r1",
            "addlt r3, r3, 1",
            "str r3, [r2, 8]",
            "bx lr"
        ]
    },
    "fcn.0004ff48": {
        "function_address": "0x0004ff48",
        "instructions": [
            "ldr r3, [r0, 8]",
            "ldr ip, [r0, 0x10]",
            "push {r4, lr}",
            "ldr r2, [r0]",
            "add r4, r1, r3",
            "ldr r2, [r2, r3, lsr 3]",
            "and r3, r3, 7",
            "rev r2, r2",
            "cmp r4, ip",
            "strls r4, [r0, 8]",
            "strhi ip, [r0, 8]",
            "lsl r0, r2, r3",
            "rsb r1, r1, 0x20",
            "lsr r0, r0, r1",
            "pop {r4, pc}"
        ]
    },
    "fcn.0005176c": {
        "function_address": "0x0005176c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x1c",
            "ldr ip, [0x00051968]",
            "mov r6, r0",
            "mov r8, r1",
            "mov sb, r2",
            "str r3, [sp, 0xc]",
            "mvn r5, 0",
            "ldr r3, [0x0005196c]",
            "add ip, pc, ip",
            "ldr sl, [r0, 0xc]",
            "ldr r4, [r0, 0x10]",
            "add r3, ip, r3",
            "str r3, [sp, 0x10]",
            "ldr r3, [0x00051970]",
            "add r3, ip, r3",
            "str r3, [sp, 0x14]",
            "b 0x51948",
            "mov r0, r4",
            "bl fcn.00051688",
            "ldr r7, [sl, 0xc]",
            "mvn r2, 2",
            "adds r2, r2, r0",
            "mvn r3, 0",
            "ldr r0, [sp, 0x40]",
            "adc r3, r3, r1",
            "cmp r7, 0",
            "strd r2, r3, [r0]",
            "ble 0x517f8",
            "mov r0, 0",
            "mov r1, 0x80000000",
            "ldr r3, [sl, 8]",
            "strd r0, r1, [r8]",
            "str fp, [sb]",
            "b 0x518ec",
            "mov r0, r4",
            "lsl r5, r5, 8",
            "bl sym.avio_r8",
            "ldr r1, [0x00051974]",
            "add r5, r0, r5",
            "cmp r5, r1",
            "bne 0x51880",
            "mov r0, r4",
            "bl sym.avio_rb32",
            "mov r3, 0",
            "mov r7, r0",
            "mov r2, 2",
            "mov r0, r4",
            "bl sym.avio_skip",
            "mov r0, r4",
            "bl sym.avio_rb32",
            "mov r3, 0xe",
            "cmp r7, 0x14",
            "mul r3, r3, r0",
            "add r3, r3, 0x14",
            "moveq r7, r3",
            "beq 0x51874",
            "cmp r7, r3",
            "beq 0x51874",
            "str r0, [sp]",
            "mov r1, 0x18",
            "str r3, [sp, 4]",
            "mov r0, r6",
            "ldr r2, [sp, 0x14]",
            "mov r3, r7",
            "bl sym.imp.av_log",
            "subs r7, r7, 0xe",
            "bpl 0x51920",
            "b 0x51948",
            "ldr r2, [0x00051978]",
            "cmp r5, r2",
            "bne 0x5189c",
            "mov r0, r6",
            "mov r1, 0x18",
            "ldr r2, [sp, 0x10]",
            "bl sym.imp.av_log",
            "sub r3, r5, 0xd",
            "movw r0, 0xfff2",
            "cmp r3, r0",
            "bhi 0x51948",
            "mov r0, r4",
            "sub r7, r5, 0xc",
            "bl sym.avio_rb16",
            "mov r3, r0",
            "mov r0, r4",
            "str r3, [sp, 8]",
            "mvn r5, 0",
            "bl sym.avio_rb32",
            "mov r2, 0",
            "stm r8, {r0, r2}",
            "mov r0, r4",
            "bl sym.avio_r8",
            "mov r0, r4",
            "bl sym.avio_r8",
            "ldr r3, [sp, 8]",
            "str r0, [sb]",
            "ldr r1, [r6, 0x14]",
            "mov r2, 0",
            "b 0x51910",
            "ldr r0, [r6, 0x18]",
            "ldr r0, [r0, r2, lsl 2]",
            "ldr r0, [r0, 4]",
            "cmp r3, r0",
            "beq 0x51918",
            "add r2, r2, 1",
            "cmp r2, r1",
            "blo 0x518f8",
            "cmp r2, r1",
            "bne 0x5193c",
            "mov r2, r7",
            "asr r3, r2, 0x1f",
            "mov r0, r4",
            "bl sym.avio_skip",
            "mov r3, 0",
            "str r3, [sl, 0xc]",
            "b 0x51948",
            "ldr r1, [sp, 0xc]",
            "str r2, [r1]",
            "b 0x5195c",
            "mov r0, r4",
            "bl sym.url_feof",
            "subs fp, r0, 0",
            "beq 0x517b4",
            "mvn r7, 0",
            "mov r0, r7",
            "add sp, sp, 0x1c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.000516a8": {
        "function_address": "0x000516a8",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sl, lr}",
            "mov r4, r0",
            "mov r5, r2",
            "mov r6, r3",
            "mov r8, r1",
            "mov r7, 0",
            "sub sl, r2, 1",
            "b 0x516dc",
            "mov r0, r4",
            "bl sym.avio_r8",
            "cmp r7, sl",
            "add r7, r7, 1",
            "strblt r0, [r8], 1",
            "cmp r7, r6",
            "blt 0x516c8",
            "cmp r5, 0",
            "movgt r3, 0",
            "strbgt r3, [r8]",
            "pop {r3, r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "fcn.000536b4": {
        "function_address": "0x000536b4",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r4, r0",
            "mov r6, r1",
            "mov r5, 0",
            "mov r0, r4",
            "bl sym.avio_r8",
            "cmp r0, 0",
            "beq 0x53708",
            "cmp r0, 0xa",
            "bne 0x536f8",
            "mov r3, 0",
            "mov r0, r4",
            "strb r3, [r6, r5]",
            "bl sym.url_feof",
            "cmp r0, 0",
            "mvnne r0, 0",
            "pop {r4, r5, r6, pc}",
            "strb r0, [r6, r5]",
            "add r5, r5, 1",
            "cmp r5, 0xff",
            "bne 0x536c4",
            "mov r3, 0",
            "mvn r0, 0",
            "strb r3, [r6, r5]",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.00053718": {
        "function_address": "0x00053718",
        "instructions": [
            "push {r4, r5, lr}",
            "sub sp, sp, 0x104",
            "ldr r5, [r1]",
            "mov r4, r1",
            "mov r1, sp",
            "bl fcn.000536b4",
            "orr r0, r0, r5",
            "sub r3, sp, 1",
            "str r0, [r4]",
            "mov ip, 0xa",
            "mov r0, 0",
            "ldr r5, [0x00053780]",
            "b 0x53764",
            "sub r2, r2, 0x30",
            "cmp r0, r5",
            "mla r0, ip, r0, r2",
            "ldrls r1, [r4]",
            "mvnhi r1, 0",
            "str r1, [r4]",
            "ldrb r2, [r3, 1]!",
            "sub r1, r2, 0x30",
            "uxtb r1, r1",
            "cmp r1, 9",
            "bls 0x5374c",
            "add sp, sp, 0x104",
            "pop {r4, r5, pc}"
        ]
    },
    "fcn.00053f98": {
        "function_address": "0x00053f98",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r5, r1",
            "bl fcn.00053f90",
            "mov r4, r0",
            "mov r0, r5",
            "bl fcn.00053f90",
            "mov r2, 0",
            "mov r1, r4",
            "orr r2, r2, r0",
            "mov r0, r2",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.00053f90": {
        "function_address": "0x00053f90",
        "instructions": [
            "rev r0, r0",
            "bx lr"
        ]
    },
    "fcn.000543b0": {
        "function_address": "0x000543b0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r4, r0",
            "ldr r7, [sp, 0x18]",
            "mov r5, r1",
            "mov r6, r2",
            "mov r8, r3",
            "cmp r7, 0",
            "beq 0x543e4",
            "mov r0, r7",
            "bl sym.imp.av_malloc",
            "cmp r0, 0",
            "str r0, [r4, 0x14]",
            "beq 0x543fc",
            "mov r0, 0",
            "str r7, [r4, 0x18]",
            "stm r4, {r5, r6, r8}",
            "str r0, [r4, 0x10]",
            "str r0, [r4, 0xc]",
            "pop {r4, r5, r6, r7, r8, pc}",
            "mvn r0, 0xb",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.00054404": {
        "function_address": "0x00054404",
        "instructions": [
            "push {r4, lr}",
            "subs r4, r0, 0",
            "popeq {r4, pc}",
            "add r0, r4, 0x14",
            "bl sym.imp.av_freep",
            "mov r3, 0",
            "str r3, [r4, 0x18]",
            "pop {r4, pc}"
        ]
    },
    "fcn.0005470c": {
        "function_address": "0x0005470c",
        "instructions": [
            "cmp r0, r1",
            "push {r4, r5, r6, lr}",
            "mov r4, r0",
            "mov r5, r1",
            "bhs 0x54800",
            "ldrb r3, [r4]",
            "add r0, r0, 1",
            "cmp r3, 0xc",
            "addls pc, pc, r3, lsl 2",
            "b 0x54800",
            "b 0x54768",
            "b 0x547f8",
            "b 0x54770",
            "b 0x54794",
            "b 0x54800",
            "b 0x547f0",
            "b 0x54800",
            "b 0x54800",
            "b 0x54800",
            "b 0x547f0",
            "b 0x54790",
            "b 0x54800",
            "b 0x54780",
            "mov r0, 9",
            "pop {r4, r5, r6, pc}",
            "ldrh r0, [r4, 1]",
            "rev16 r0, r0",
            "add r0, r0, 3",
            "pop {r4, r5, r6, pc}",
            "ldr r0, [r4, 1]",
            "bl fcn.00053f90",
            "add r0, r0, 5",
            "pop {r4, r5, r6, pc}",
            "add r0, r0, 4",
            "ldrh r3, [r0]",
            "rev16 r3, r3",
            "cmp r3, 0",
            "add r6, r0, 2",
            "bne 0x547b4",
            "add r0, r0, 3",
            "rsb r0, r4, r0",
            "pop {r4, r5, r6, pc}",
            "add r6, r6, r3",
            "cmp r6, r5",
            "movlo r2, 0",
            "movhs r2, 1",
            "orrs r2, r2, r3, lsr 31",
            "bne 0x54800",
            "mov r0, r6",
            "mov r1, r5",
            "bl fcn.0005470c",
            "cmp r0, 0",
            "blt 0x54800",
            "add r0, r6, r0",
            "cmp r0, r5",
            "blo 0x54794",
            "b 0x54808",
            "mov r0, 1",
            "pop {r4, r5, r6, pc}",
            "mov r0, 2",
            "pop {r4, r5, r6, pc}",
            "mvn r0, 0",
            "pop {r4, r5, r6, pc}",
            "mvn r0, 0",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.00054810": {
        "function_address": "0x00054810",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "cmp r1, r2",
            "ldr r4, [0x00054a10]",
            "sub sp, sp, 0x410",
            "sub sp, sp, 4",
            "mov r5, r0",
            "mov r3, r1",
            "mov r6, r2",
            "add r4, pc, r4",
            "bhs 0x54a04",
            "mov r7, r1",
            "ldrb r2, [r7], 1",
            "cmp r2, 0xc",
            "addls pc, pc, r2, lsl 2",
            "b 0x54a04",
            "b 0x54880",
            "b 0x548a8",
            "b 0x548bc",
            "b 0x54938",
            "b 0x54a04",
            "b 0x54928",
            "b 0x54a04",
            "b 0x54a04",
            "b 0x54a04",
            "b 0x549f0",
            "b 0x54934",
            "b 0x54a04",
            "b 0x548bc",
            "ldr r0, [r3, 1]",
            "ldr r1, [r7, 4]",
            "bl fcn.00053f98",
            "ldr r2, [0x00054a14]",
            "strd r0, r1, [sp]",
            "mov r0, r5",
            "mov r1, 0x30",
            "add r2, r4, r2",
            "bl sym.imp.av_log",
            "b 0x54a04",
            "ldr r2, [0x00054a18]",
            "mov r1, 0x30",
            "ldrb r3, [r3, 1]",
            "add r2, r4, r2",
            "b 0x54920",
            "cmp r2, 2",
            "bne 0x548d0",
            "ldrh r0, [r7], 2",
            "rev16 r0, r0",
            "b 0x548d8",
            "ldr r0, [r7], 4",
            "bl fcn.00053f90",
            "movw r8, 0x3ff",
            "add r6, sp, 0x10",
            "cmp r0, r8",
            "movlt r8, r0",
            "movge r8, r8",
            "mov r1, r7",
            "mov r2, r8",
            "mov r0, r6",
            "bl sym.imp.memcpy",
            "ldr r2, [0x00054a1c]",
            "add r1, sp, 0x410",
            "add r8, r1, r8",
            "mov r3, 0",
            "strb r3, [r8, -0x400]",
            "mov r0, r5",
            "mov r1, 0x30",
            "add r2, r4, r2",
            "mov r3, r6",
            "bl sym.imp.av_log",
            "b 0x54a04",
            "mov r1, 0x30",
            "ldr r2, [0x00054a20]",
            "b 0x549fc",
            "add r7, r7, 4",
            "ldr r2, [0x00054a24]",
            "mov r0, r5",
            "mov r1, 0x30",
            "add r8, sp, 0x10",
            "mov fp, 0",
            "add r2, r4, r2",
            "bl sym.imp.av_log",
            "ldr r3, [0x00054a28]",
            "add r3, r4, r3",
            "str r3, [sp, 0xc]",
            "add sb, r7, 2",
            "mov r0, r8",
            "ldrh sl, [r7]",
            "mov r1, sb",
            "rev16 sl, sl",
            "mov r2, sl",
            "bl sym.imp.memcpy",
            "add r2, sp, 0x410",
            "cmp sl, 0",
            "add r3, r2, sl",
            "strb fp, [r3, -0x400]",
            "beq 0x549f0",
            "add r7, sb, sl",
            "cmp r7, r6",
            "movlo r3, 0",
            "movhs r3, 1",
            "orrs r3, r3, sl, lsr 31",
            "bne 0x54a04",
            "mov r3, r8",
            "mov r0, r5",
            "mov r1, 0x30",
            "ldr r2, [sp, 0xc]",
            "bl sym.imp.av_log",
            "mov r0, r5",
            "mov r1, r7",
            "mov r2, r6",
            "bl fcn.00054810",
            "mov r0, r7",
            "mov r1, r6",
            "bl fcn.0005470c",
            "cmp r0, 0",
            "blt 0x54a04",
            "add r7, r7, r0",
            "cmp r7, r6",
            "blo 0x54960",
            "b 0x54a04",
            "ldr r2, [0x00054a2c]",
            "mov r0, r5",
            "mov r1, 0x30",
            "add r2, r4, r2",
            "bl sym.imp.av_log",
            "add sp, sp, 0x14",
            "add sp, sp, 0x400",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00054060": {
        "function_address": "0x00054060",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r2, 2",
            "ldr r3, [r0]",
            "mov r4, r0",
            "mov r6, r1",
            "strb r2, [r3]",
            "ldr r5, [r0]",
            "add r3, r5, 1",
            "add r7, r5, 3",
            "str r3, [r0]",
            "mov r0, r1",
            "bl sym.imp.strlen",
            "rev16 r0, r0",
            "strh r0, [r5, 1]",
            "str r7, [r4]",
            "mov r0, r6",
            "bl sym.imp.strlen",
            "mov r5, r0",
            "mov r1, r6",
            "mov r2, r5",
            "mov r0, r7",
            "bl sym.imp.memcpy",
            "ldr r3, [r4]",
            "add r5, r3, r5",
            "str r5, [r4]",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.00054020": {
        "function_address": "0x00054020",
        "instructions": [
            "ldr r1, [r0]",
            "push {r4, r5, r6, lr}",
            "mov r4, r0",
            "mov r0, 0",
            "strb r0, [r1]",
            "mov r0, r2",
            "ldr r5, [r4]",
            "mov r1, r3",
            "add r6, r5, 1",
            "str r6, [r4]",
            "bl fcn.00053f98",
            "str r0, [r5, 1]",
            "str r1, [r6, 4]",
            "add r5, r5, 9",
            "str r5, [r4]",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.00054158": {
        "function_address": "0x00054158",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r7, r3",
            "ldr r3, [r1]",
            "mov r5, r0",
            "mov r0, 0x1c",
            "mov sb, r2",
            "ldr r6, [r1, 8]",
            "mov r4, r1",
            "sub sp, sp, 0x18",
            "mul r0, r0, r3",
            "add r2, r7, r0",
            "ldr r1, [r2, 8]",
            "rsb r1, r1, r6",
            "ldr r6, [r7, r0]",
            "str r1, [r4, 0xc]",
            "cmp r6, 0",
            "beq 0x541e8",
            "ldr ip, [r4, 0x10]",
            "ldr r0, [r2, 0x10]",
            "cmp ip, r0",
            "movne r6, 0",
            "bne 0x541e8",
            "ldr ip, [r4, 4]",
            "ldr r0, [r2, 4]",
            "cmp ip, r0",
            "bne 0x541e4",
            "ldr ip, [r4, 0x18]",
            "ldr r0, [r2, 0x18]",
            "cmp ip, r0",
            "bne 0x541e4",
            "ldr r6, [r2, 0xc]",
            "cmp r1, r6",
            "moveq r6, 3",
            "movne r6, 2",
            "b 0x541e8",
            "mov r6, 1",
            "cmp r3, 0x3f",
            "orrle r3, r3, r6, lsl 6",
            "addle r2, sp, 0x18",
            "strble r3, [r2, -0x18]!",
            "addle r2, r2, 1",
            "ble 0x54230",
            "cmp r3, 0x140",
            "lsl r1, r6, 6",
            "sub r3, r3, 0x40",
            "mov r2, sp",
            "strblt r1, [sp]",
            "strblt r3, [sp, 1]",
            "addlt r2, sp, 2",
            "blt 0x54230",
            "add r2, r2, 3",
            "orr r1, r1, 1",
            "strb r1, [sp]",
            "strh r3, [sp, 1]",
            "cmp r6, 3",
            "str r2, [sp, 0x10]",
            "beq 0x542c4",
            "cmp r6, 0",
            "ldr r8, [r4, 8]",
            "ldrne r8, [r4, 0xc]",
            "add sl, sp, 0x10",
            "mvn r1, 0xff000000",
            "mov r0, sl",
            "cmp r8, r1",
            "movlo r1, r8",
            "bl fcn.00053fc4",
            "cmp r6, 2",
            "beq 0x542a4",
            "mov r0, sl",
            "ldr r1, [r4, 0x18]",
            "bl fcn.00053fc4",
            "ldr r3, [sp, 0x10]",
            "cmp r6, 0",
            "ldr r2, [r4, 4]",
            "strb r2, [r3]",
            "ldr r3, [sp, 0x10]",
            "add r2, r3, 1",
            "str r2, [sp, 0x10]",
            "bne 0x542a4",
            "ldr r2, [r4, 0x10]",
            "str r2, [r3, 1]",
            "add r3, r3, 5",
            "str r3, [sp, 0x10]",
            "ldr r3, [0x000543ac]",
            "cmp r8, r3",
            "bls 0x542c4",
            "mov r0, r8",
            "bl fcn.00053f90",
            "ldr r3, [sp, 0x10]",
            "str r0, [r3], 4",
            "str r3, [sp, 0x10]",
            "ldr r2, [r4]",
            "mov r3, 0x1c",
            "cmp r6, 0",
            "mov r6, sp",
            "mov r0, r5",
            "add sl, sp, 0x17",
            "mul r1, r3, r2",
            "str r2, [r7, r1]",
            "mov r1, sp",
            "ldr r2, [r4]",
            "mla r7, r3, r2, r7",
            "ldr r3, [r4, 4]",
            "ldr r2, [sp, 0x10]",
            "str r3, [r7, 4]",
            "rsb r2, r6, r2",
            "ldr r3, [r4, 0x18]",
            "str r3, [r7, 0x18]",
            "ldr r3, [r4, 8]",
            "str r3, [r7, 8]",
            "ldrne r3, [r4, 0xc]",
            "ldreq r3, [r4, 8]",
            "str r3, [r7, 0xc]",
            "ldr r3, [r4, 0x10]",
            "str r3, [r7, 0x10]",
            "bl sym.ffurl_write",
            "ldr r7, [sp, 0x10]",
            "ldr r3, [r4, 0x18]",
            "rsb r7, r6, r7",
            "mov r6, 0",
            "add r7, r7, r3",
            "b 0x54394",
            "ldr r1, [r4, 0x14]",
            "rsb r8, r6, r8",
            "cmp r8, sb",
            "movge r8, sb",
            "mov r0, r5",
            "mov r2, r8",
            "add r1, r1, r6",
            "add r6, r6, r8",
            "bl sym.ffurl_write",
            "ldr r3, [r4, 0x18]",
            "cmp r6, r3",
            "bge 0x54394",
            "ldr r3, [r4]",
            "add r7, r7, 1",
            "mov r0, r5",
            "mov r1, sl",
            "mov r2, 1",
            "mvn r3, r3, lsl 26",
            "mvn r3, r3, lsr 26",
            "strb r3, [sp, 0x17]",
            "bl sym.ffurl_write",
            "ldr r8, [r4, 0x18]",
            "cmp r6, r8",
            "blt 0x54340",
            "mov r0, r7",
            "add sp, sp, 0x18",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "fcn.00053fc4": {
        "function_address": "0x00053fc4",
        "instructions": [
            "ldr r3, [r0]",
            "lsr r2, r1, 8",
            "strb r1, [r3, 2]",
            "lsr r1, r1, 0x10",
            "ldr r3, [r0]",
            "strb r2, [r3, 1]",
            "ldr r3, [r0]",
            "strb r1, [r3]",
            "ldr r3, [r0]",
            "add r3, r3, 3",
            "str r3, [r0]",
            "bx lr"
        ]
    },
    "fcn.00054424": {
        "function_address": "0x00054424",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x44",
            "mov fp, r1",
            "mov sb, r2",
            "add r1, sp, 0x3f",
            "mov r2, 1",
            "mov r7, r0",
            "str r3, [sp, 0x14]",
            "bl fcn.00018f80",
            "cmp r0, 1",
            "bne 0x546f4",
            "ldrb sl, [sp, 0x3f]",
            "and sl, sl, 0x3f",
            "cmp sl, 1",
            "movgt r4, r0",
            "bgt 0x54494",
            "add sl, sl, 1",
            "mov r3, 0",
            "mov r0, r7",
            "add r1, sp, 0x2c",
            "mov r2, sl",
            "strb r3, [sp, 0x2d]",
            "bl fcn.00018f4c",
            "cmp r0, sl",
            "bne 0x546f4",
            "ldrh sl, [sp, 0x2c]",
            "add r4, r0, 1",
            "add sl, sl, 0x40",
            "mov r3, 0x1c",
            "ldr r2, [sp, 0x14]",
            "mul r3, r3, sl",
            "add r5, r2, r3",
            "str r3, [sp, 0x18]",
            "ldr r3, [r5, 4]",
            "ldr r2, [r5, 0x10]",
            "ldr r8, [r5, 0x18]",
            "str r3, [sp, 0x10]",
            "ldrb r3, [sp, 0x3f]",
            "str r2, [sp, 0xc]",
            "lsr r3, r3, 6",
            "cmp r3, 3",
            "strb r3, [sp, 0x3f]",
            "ldreq r6, [r5, 0xc]",
            "beq 0x545e4",
            "add r6, sp, 0x2c",
            "mov r2, 3",
            "mov r0, r7",
            "mov r1, r6",
            "bl fcn.00018f4c",
            "cmp r0, 3",
            "mov r2, r0",
            "bne 0x546f4",
            "ldrb r3, [sp, 0x2c]",
            "add r4, r4, 3",
            "str r3, [sp, 0x1c]",
            "ldrb r3, [sp, 0x2d]",
            "str r3, [sp, 0x20]",
            "ldrb r3, [sp, 0x2e]",
            "str r3, [sp, 0x24]",
            "ldrb r3, [sp, 0x3f]",
            "cmp r3, 2",
            "beq 0x5459c",
            "mov r0, r7",
            "mov r1, r6",
            "bl fcn.00018f4c",
            "cmp r0, 3",
            "bne 0x546f4",
            "ldrb r8, [sp, 0x2d]",
            "mov r0, r7",
            "ldrb r3, [sp, 0x2c]",
            "mov r1, r6",
            "mov r2, 1",
            "lsl r8, r8, 8",
            "orr r8, r8, r3, lsl 16",
            "ldrb r3, [sp, 0x2e]",
            "orr r8, r8, r3",
            "bl fcn.00018f4c",
            "cmp r0, 1",
            "bne 0x546f4",
            "ldrb r3, [sp, 0x3f]",
            "add r4, r4, 4",
            "ldrb r2, [sp, 0x2c]",
            "cmp r3, 0",
            "str r2, [sp, 0x10]",
            "bne 0x5459c",
            "mov r0, r7",
            "mov r1, r6",
            "mov r2, 4",
            "bl fcn.00018f4c",
            "cmp r0, 4",
            "bne 0x546f4",
            "add r4, r4, 4",
            "ldr r3, [r6]",
            "str r3, [sp, 0xc]",
            "ldr r2, [sp, 0x20]",
            "ldr r3, [sp, 0x1c]",
            "lsl r6, r2, 8",
            "ldr r2, [sp, 0x24]",
            "orr r6, r6, r3, lsl 16",
            "mvn r3, 0xff000000",
            "orr r6, r6, r2",
            "cmp r6, r3",
            "bne 0x545e4",
            "mov r0, r7",
            "add r1, sp, 0x2c",
            "mov r2, 4",
            "bl fcn.00018f4c",
            "cmp r0, 4",
            "bne 0x546f4",
            "ldr r0, [sp, 0x2c]",
            "bl fcn.00053f90",
            "mov r6, r0",
            "ldrb r3, [sp, 0x3f]",
            "mov r0, fp",
            "mov r1, sl",
            "ldr r2, [sp, 0x10]",
            "cmp r3, 0",
            "ldrne r3, [r5, 8]",
            "str r8, [sp]",
            "addne r6, r6, r3",
            "mov r3, r6",
            "bl fcn.000543b0",
            "cmp r0, 0",
            "bne 0x546fc",
            "ldr r3, [sp, 0xc]",
            "ldr r2, [sp, 0x18]",
            "str r8, [r5, 0x18]",
            "str r3, [fp, 0x10]",
            "ldr r3, [sp, 0x14]",
            "str sl, [r3, r2]",
            "add sl, sl, 0xc0",
            "ldr r3, [r5, 8]",
            "ldr r2, [sp, 0x10]",
            "str r6, [r5, 8]",
            "rsb r3, r3, r6",
            "str sl, [sp, 0x14]",
            "str r3, [r5, 0xc]",
            "mov r6, r0",
            "ldr r3, [sp, 0xc]",
            "str r2, [r5, 4]",
            "rsb r2, sb, 0",
            "str r2, [sp, 0xc]",
            "str r3, [r5, 0x10]",
            "add r3, sp, 0x3e",
            "rsb r5, sb, r8",
            "str r3, [sp, 0x10]",
            "b 0x546e8",
            "ldr r1, [fp, 0x14]",
            "cmp r8, sb",
            "movlt sl, r8",
            "movge sl, sb",
            "mov r0, r7",
            "mov r2, sl",
            "add r1, r1, r6",
            "bl fcn.00018f4c",
            "cmp r0, sl",
            "beq 0x546a4",
            "mov r0, fp",
            "bl fcn.00054404",
            "b 0x546f4",
            "ldr r2, [sp, 0xc]",
            "cmp r5, 0",
            "add r4, r4, sb",
            "add r8, r8, r2",
            "ble 0x546dc",
            "mov r2, 1",
            "mov r0, r7",
            "ldr r1, [sp, 0x10]",
            "bl fcn.00018f4c",
            "ldrb r3, [sp, 0x3e]",
            "ldr r2, [sp, 0x14]",
            "cmp r3, r2",
            "bne 0x546fc",
            "add r4, r4, 1",
            "ldr r3, [sp, 0xc]",
            "add r6, r6, sb",
            "add r5, r5, r3",
            "cmp r8, 0",
            "bgt 0x54670",
            "b 0x54700",
            "mvn r4, 4",
            "b 0x54700",
            "mvn r4, 0",
            "mov r0, r4",
            "add sp, sp, 0x44",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00054e8c": {
        "function_address": "0x00054e8c",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r0",
            "mov r0, r1",
            "bl fcn.00054e84",
            "ldr r3, [r4]",
            "str r0, [r3], 4",
            "str r3, [r4]",
            "pop {r4, pc}"
        ]
    },
    "fcn.00054e84": {
        "function_address": "0x00054e84",
        "instructions": [
            "rev r0, r0",
            "bx lr"
        ]
    },
    "fcn.00054a30": {
        "function_address": "0x00054a30",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r0",
            "ldr r5, [0x00054bc8]",
            "sub sp, sp, 0x14",
            "mov r0, r2",
            "mov r6, r1",
            "mov sb, r2",
            "mov r8, r3",
            "add r5, pc, r5",
            "ldr r7, [sp, 0x38]",
            "bl sym.imp.strlen",
            "mov sl, r0",
            "b 0x54a7c",
            "mov r0, r4",
            "mov r1, r6",
            "bl fcn.0005470c",
            "cmp r0, 0",
            "rsblt r0, r4, r6",
            "add r4, r4, r0",
            "ldrb r3, [r4]",
            "cmp r3, 3",
            "cmpne r4, r6",
            "blo 0x54a64",
            "rsb r3, r4, r6",
            "cmp r3, 2",
            "ble 0x54bbc",
            "add r4, r4, 1",
            "rsb fp, sl, 0",
            "ldrh r3, [r4]",
            "rev16 r3, r3",
            "cmp r3, 0",
            "beq 0x54bbc",
            "add r4, r4, 2",
            "add r4, r4, r3",
            "cmp r4, r6",
            "movlo r2, 0",
            "movhs r2, 1",
            "orrs r2, r2, r3, lsr 31",
            "bne 0x54bbc",
            "cmp r3, sl",
            "bne 0x54b9c",
            "add r0, r4, fp",
            "mov r1, sb",
            "mov r2, sl",
            "bl sym.imp.memcmp",
            "subs r3, r0, 0",
            "bne 0x54b9c",
            "ldrb r2, [r4]",
            "add r1, r4, 1",
            "cmp r2, 1",
            "beq 0x54b48",
            "blo 0x54b0c",
            "cmp r2, 2",
            "bne 0x54bbc",
            "b 0x54b74",
            "ldr sl, [r4, 1]",
            "ldr fp, [r1, 4]",
            "mov r0, sl",
            "mov r1, fp",
            "str r3, [sp, 0xc]",
            "bl fcn.00053f98",
            "ldr r2, [0x00054bcc]",
            "strd r0, r1, [sp]",
            "mov r0, r8",
            "mov r1, r7",
            "add r2, r5, r2",
            "bl sym.imp.snprintf",
            "ldr r3, [sp, 0xc]",
            "mov r0, r3",
            "b 0x54bc0",
            "ldrb r3, [r4, 1]",
            "cmp r3, 0",
            "ldrne r3, [0x00054bd0]",
            "ldreq r3, [0x00054bd4]",
            "ldr r2, [0x00054bd8]",
            "add r3, r5, r3",
            "mov r0, r8",
            "mov r1, r7",
            "add r2, r5, r2",
            "bl sym.imp.snprintf",
            "b 0x54b94",
            "add r1, r4, 3",
            "mov r0, r8",
            "ldrh r2, [r1, -2]",
            "rev16 r2, r2",
            "cmp r2, r7",
            "movge r2, r7",
            "addlt r2, r2, 1",
            "bl sym.imp.av_strlcpy",
            "mov r0, 0",
            "b 0x54bc0",
            "mov r0, r4",
            "mov r1, r6",
            "bl fcn.0005470c",
            "cmp r0, 0",
            "blt 0x54bbc",
            "add r4, r4, r0",
            "cmp r4, r6",
            "blo 0x54aa0",
            "mvn r0, 0",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00055424": {
        "function_address": "0x00055424",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x164",
            "ldr r4, [r0, 0x14]",
            "mov r6, r0",
            "ldr r3, [0x000560e0]",
            "ldr r5, [0x000560e4]",
            "str r1, [sp, 0x24]",
            "ldr r3, [r4, r3]",
            "add r5, pc, r5",
            "cmp r3, 8",
            "beq 0x5606c",
            "ldr r3, [0x000560e8]",
            "add r2, r4, 4",
            "ldr r8, [0x000560ec]",
            "str r2, [sp, 0x28]",
            "add r3, r5, r3",
            "str r3, [sp, 0x2c]",
            "add r8, r4, r8",
            "ldr r3, [0x000560f0]",
            "add r3, r5, r3",
            "str r3, [sp, 0x30]",
            "ldr r3, [0x000560f4]",
            "add r3, r5, r3",
            "str r3, [sp, 0xc]",
            "add r3, r3, 0xa",
            "str r3, [sp, 0x34]",
            "ldr fp, [0x000560f8]",
            "add r7, sp, 0x138",
            "mov r1, 0",
            "mov r2, 0x1c",
            "mov r0, r7",
            "bl sym.imp.memset",
            "ldr r0, [r4]",
            "mov r1, r7",
            "ldr r2, [r4, fp]",
            "ldr r3, [sp, 0x28]",
            "bl fcn.00054424",
            "cmp r0, 0",
            "bgt 0x554cc",
            "mvneq r0, 0xa",
            "beq 0x56078",
            "b 0x56074",
            "ldr r7, [0x000560fc]",
            "ldr sb, [0x00056100]",
            "ldr r3, [r4, r7]",
            "add r0, r0, r3",
            "ldr r3, [r4, sb]",
            "str r0, [r4, r7]",
            "rsb r0, r3, r0",
            "ldr r3, [0x00056104]",
            "ldr r3, [r4, r3]",
            "cmp r0, r3",
            "bls 0x55564",
            "mov r0, r6",
            "mov r1, 0x30",
            "ldr r2, [sp, 0x2c]",
            "add sl, sp, 0x38",
            "bl sym.imp.av_log",
            "mov r3, 4",
            "mov r2, 3",
            "str r3, [sp]",
            "mov r1, 2",
            "ldr r3, [sp, 0x140]",
            "mov r0, sl",
            "add r3, r3, 1",
            "bl fcn.000543b0",
            "ldr r3, [sp, 0x4c]",
            "add r0, sp, 0x160",
            "ldr r1, [r4, r7]",
            "str r3, [r0, -0xc]!",
            "bl fcn.00054e8c",
            "mov r3, r8",
            "mov r1, sl",
            "ldr r2, [r4, fp]",
            "ldr r0, [r4]",
            "bl fcn.00054158",
            "mov r0, sl",
            "bl fcn.00054404",
            "ldr r3, [r4, r7]",
            "str r3, [r4, sb]",
            "ldr r2, [sp, 0x13c]",
            "ldr sl, [sp, 0x14c]",
            "ldr r3, [sp, 0x150]",
            "cmp r2, 4",
            "beq 0x5561c",
            "bhi 0x55588",
            "cmp r2, 1",
            "bne 0x55e18",
            "b 0x5559c",
            "cmp r2, 6",
            "beq 0x55694",
            "cmp r2, 0x14",
            "bne 0x55e18",
            "b 0x556e8",
            "cmp r3, 4",
            "movne r0, r6",
            "movne r1, 0x10",
            "ldrne r2, [0x00056108]",
            "bne 0x556a8",
            "ldr r3, [0x0005610c]",
            "ldr r3, [r4, r3]",
            "cmp r3, 0",
            "bne 0x555d8",
            "ldr r3, [0x000560f8]",
            "add r1, sp, 0x138",
            "ldr r0, [r4]",
            "ldr r2, [r4, r3]",
            "mov r3, r8",
            "bl fcn.00054158",
            "ldr r3, [sp, 0x14c]",
            "ldr r0, [r3]",
            "bl fcn.00054e84",
            "ldr r2, [0x000560f8]",
            "cmp r0, 0",
            "mov r3, r0",
            "str r0, [r4, r2]",
            "movle r0, r6",
            "movle r1, 0x10",
            "ldrle r2, [0x00056110]",
            "ble 0x556a8",
            "ldr r2, [0x00056114]",
            "mov r0, r6",
            "mov r1, 0x30",
            "add r2, r5, r2",
            "bl sym.imp.av_log",
            "b 0x55e18",
            "ldrh r3, [sl]",
            "rev16 r3, r3",
            "cmp r3, 6",
            "bne 0x55e18",
            "str r3, [sp]",
            "add r7, sp, 0x38",
            "ldr r3, [sp, 0x140]",
            "mov r1, 2",
            "mov r0, r7",
            "add r3, r3, 1",
            "bl fcn.000543b0",
            "ldr r3, [sp, 0x4c]",
            "mov r2, 7",
            "rev16 r2, r2",
            "strh r2, [r3], 2",
            "str r3, [sp, 0x154]",
            "ldr r3, [sp, 0x14c]",
            "ldr r0, [r3, 2]",
            "bl fcn.00054e84",
            "mov r1, r0",
            "add r0, sp, 0x154",
            "bl fcn.00054e8c",
            "ldr r3, [0x000560f8]",
            "mov r1, r7",
            "ldr r0, [r4]",
            "ldr r2, [r4, r3]",
            "mov r3, r8",
            "bl fcn.00054158",
            "mov r0, r7",
            "b 0x559b4",
            "cmp r3, 3",
            "bgt 0x556b0",
            "ldr r2, [0x00056118]",
            "mov r0, r6",
            "mov r1, 0x10",
            "add r2, r5, r2",
            "b 0x55d98",
            "ldr r0, [sl]",
            "bl fcn.00054e84",
            "mov r1, 0x30",
            "mov r3, r0",
            "ldr r2, [sp, 0x30]",
            "mov r0, r6",
            "bl sym.imp.av_log",
            "ldr r3, [sp, 0x14c]",
            "ldr r0, [r3]",
            "bl fcn.00054e84",
            "ldr r3, [0x00056104]",
            "lsr r0, r0, 1",
            "str r0, [r4, r3]",
            "b 0x55e18",
            "mov r0, sl",
            "ldr r1, [sp, 0xc]",
            "mov r2, 9",
            "add r7, sl, r3",
            "bl sym.imp.memcmp",
            "cmp r0, 0",
            "bne 0x55748",
            "ldr r2, [0x0005611c]",
            "mov r3, 0x100",
            "add r4, sp, 0x38",
            "str r3, [sp]",
            "add r0, sl, 9",
            "mov r1, r7",
            "add r2, r5, r2",
            "mov r3, r4",
            "bl fcn.00054a30",
            "cmp r0, 0",
            "bne 0x560d0",
            "ldr r2, [0x00056120]",
            "mov r0, r6",
            "mov r1, 0x10",
            "mov r3, r4",
            "add r2, r5, r2",
            "b 0x55d98",
            "mov r0, sl",
            "ldr r1, [sp, 0x34]",
            "mov r2, 0xa",
            "bl sym.imp.memcmp",
            "cmp r0, 0",
            "bne 0x55cc8",
            "ldr r3, [0x000560e0]",
            "ldr r3, [r4, r3]",
            "sub r3, r3, 1",
            "cmp r3, 3",
            "addls pc, pc, r3, lsl 2",
            "b 0x55e18",
            "b 0x55788",
            "b 0x559c4",
            "b 0x559bc",
            "b 0x55a48",
            "ldr r3, [0x0005610c]",
            "ldr ip, [r4, r3]",
            "cmp ip, 0",
            "movne r2, 4",
            "bne 0x55908",
            "ldr sb, [0x00056124]",
            "add fp, sp, 0x38",
            "str ip, [sp, 8]",
            "add r7, sp, 0x160",
            "ldr sl, [0x00056128]",
            "add sb, r4, sb",
            "mov r0, sb",
            "bl sym.imp.strlen",
            "ldr ip, [sp, 8]",
            "add r0, r0, 0x1d",
            "str r0, [sp]",
            "mov r1, 3",
            "mov r2, 0x14",
            "mov r0, fp",
            "mov r3, ip",
            "bl fcn.000543b0",
            "ldr r2, [0x0005612c]",
            "mov r0, r6",
            "mov r1, 0x30",
            "add r2, r5, r2",
            "bl sym.imp.av_log",
            "ldr r3, [sp, 0x4c]",
            "ldr r1, [0x00056130]",
            "str r3, [r7, -0xc]!",
            "mov r0, r7",
            "add r1, r5, r1",
            "bl fcn.00054060",
            "ldr r0, [r4, sl]",
            "add r0, r0, 1",
            "str r0, [r4, sl]",
            "bl fcn.0007d690",
            "mov r2, r0",
            "mov r3, r1",
            "mov r0, r7",
            "bl fcn.00054020",
            "mov r0, r7",
            "bl fcn.000540c8",
            "mov r0, r7",
            "mov r1, sb",
            "bl fcn.00054060",
            "ldr r3, [0x000560f8]",
            "mov r1, fp",
            "ldr r0, [r4]",
            "ldr r2, [r4, r3]",
            "mov r3, r8",
            "bl fcn.00054158",
            "mov r0, fp",
            "bl fcn.00054404",
            "mov r0, sb",
            "bl sym.imp.strlen",
            "ldr ip, [sp, 8]",
            "add r0, r0, 0x19",
            "str r0, [sp]",
            "mov r1, 3",
            "mov r2, 0x14",
            "mov r0, fp",
            "mov r3, ip",
            "bl fcn.000543b0",
            "ldr r2, [0x00056134]",
            "mov r0, r6",
            "mov r1, 0x30",
            "add r2, r5, r2",
            "bl sym.imp.av_log",
            "ldr r1, [0x00056138]",
            "mov r0, r7",
            "ldr r3, [sp, 0x4c]",
            "add r1, r5, r1",
            "str r3, [sp, 0x154]",
            "bl fcn.00054060",
            "ldr r0, [r4, sl]",
            "add r0, r0, 1",
            "str r0, [r4, sl]",
            "bl fcn.0007d690",
            "mov r2, r0",
            "mov r3, r1",
            "mov r0, r7",
            "bl fcn.00054020",
            "mov r0, r7",
            "bl fcn.000540c8",
            "mov r0, r7",
            "mov r1, sb",
            "bl fcn.00054060",
            "ldr r3, [0x000560f8]",
            "mov r1, fp",
            "ldr r0, [r4]",
            "ldr r2, [r4, r3]",
            "mov r3, r8",
            "bl fcn.00054158",
            "mov r0, fp",
            "bl fcn.00054404",
            "mov r2, 2",
            "ldr r3, [0x000560e0]",
            "mov r0, r6",
            "mov r1, 0x30",
            "add sb, sp, 0x38",
            "ldr sl, [0x00056128]",
            "add r7, sp, 0x160",
            "str r2, [r4, r3]",
            "ldr r2, [0x0005613c]",
            "add r2, r5, r2",
            "bl sym.imp.av_log",
            "mov r3, 0x19",
            "mov r2, 0x14",
            "str r3, [sp]",
            "mov r1, 3",
            "mov r3, 0",
            "mov r0, sb",
            "bl fcn.000543b0",
            "ldr r3, [sp, 0x4c]",
            "ldr r1, [0x00056140]",
            "str r3, [r7, -0xc]!",
            "mov r0, r7",
            "add r1, r5, r1",
            "bl fcn.00054060",
            "ldr r0, [r4, sl]",
            "add r0, r0, 1",
            "str r0, [r4, sl]",
            "bl fcn.0007d690",
            "mov r2, r0",
            "mov r3, r1",
            "mov r0, r7",
            "bl fcn.00054020",
            "mov r0, r7",
            "bl fcn.000540c8",
            "ldr r2, [r4, sl]",
            "mov r1, sb",
            "ldr r3, [0x00056144]",
            "ldr r0, [r4]",
            "str r2, [r4, r3]",
            "sub r3, r3, 0x1dc",
            "ldr r2, [r4, r3]",
            "mov r3, r8",
            "bl fcn.00054158",
            "mov r0, sb",
            "bl fcn.00054404",
            "b 0x55e18",
            "mov r2, 4",
            "b 0x55e10",
            "ldr r7, [0x000560e0]",
            "mov r3, 3",
            "str r3, [r4, r7]",
            "ldrb sb, [sl, 0xa]",
            "cmp sb, 0",
            "bne 0x55a38",
            "ldr r2, [sl, 0xb]",
            "ldr r3, [sl, 0xf]",
            "mov fp, r3",
            "mov r0, r2",
            "mov sl, r2",
            "bl fcn.00054e84",
            "mov r3, r0",
            "mov r0, fp",
            "str r3, [sp, 8]",
            "bl fcn.00054e84",
            "ldr r3, [sp, 8]",
            "str sb, [sp, 0x10]",
            "str r3, [sp, 0x14]",
            "ldrd r2, r3, [sp, 0x10]",
            "orr r2, r2, r0",
            "mov r1, r3",
            "mov r0, r2",
            "bl fcn.0007dd08",
            "ldr r3, [0x00056144]",
            "ldr r3, [r4, r3]",
            "cmp r0, r3",
            "moveq r3, 4",
            "streq r3, [r4, r7]",
            "ldr r3, [0x000560e0]",
            "ldr r3, [r4, r3]",
            "cmp r3, 4",
            "bne 0x55e18",
            "ldr r3, [sp, 0x14c]",
            "ldrb r2, [r3, 0xa]",
            "cmp r2, 0",
            "bne 0x55a70",
            "ldrb r2, [r3, 0x13]",
            "cmp r2, 5",
            "bne 0x55a70",
            "ldrb r7, [r3, 0x14]",
            "cmp r7, 0",
            "beq 0x55a88",
            "ldr r2, [0x00056148]",
            "mov r0, r6",
            "mov r1, 0x18",
            "add r2, r5, r2",
            "bl sym.imp.av_log",
            "b 0x55ac8",
            "ldr sl, [r3, 0x15]",
            "ldr fp, [r3, 0x19]",
            "mov r0, sl",
            "bl fcn.00054e84",
            "mov sb, r0",
            "mov r0, fp",
            "bl fcn.00054e84",
            "str sb, [sp, 0x1c]",
            "str r7, [sp, 0x18]",
            "ldrd r2, r3, [sp, 0x18]",
            "orr r2, r2, r0",
            "mov r1, r3",
            "mov r0, r2",
            "bl fcn.0007dd08",
            "ldr r3, [0x0005614c]",
            "str r0, [r4, r3]",
            "ldr r3, [0x0005610c]",
            "add sl, sp, 0x38",
            "ldr sb, [0x00056124]",
            "add r7, sp, 0x154",
            "ldr fp, [r4, r3]",
            "add sb, r4, sb",
            "cmp fp, 0",
            "beq 0x55bf8",
            "ldr r2, [0x00056150]",
            "mov r3, sb",
            "mov r1, 0x30",
            "mov r0, r6",
            "add r2, r5, r2",
            "bl sym.imp.av_log",
            "mov r0, sb",
            "bl sym.imp.strlen",
            "add r0, r0, 0x14",
            "mov r2, 0x14",
            "str r0, [sp]",
            "mov r1, 8",
            "mov r3, 0",
            "mov r0, sl",
            "bl fcn.000543b0",
            "ldr r3, [0x0005614c]",
            "mov r0, r7",
            "ldr r1, [0x00056154]",
            "ldr r3, [r4, r3]",
            "add r1, r5, r1",
            "str r3, [sp, 0x48]",
            "ldr r3, [sp, 0x4c]",
            "str r3, [sp, 0x154]",
            "bl fcn.00054060",
            "ldr r3, [0x00056128]",
            "ldr r0, [r4, r3]",
            "add r0, r0, 1",
            "str r0, [r4, r3]",
            "bl fcn.0007d690",
            "mov r2, r0",
            "mov r3, r1",
            "mov r0, r7",
            "bl fcn.00054020",
            "mov r0, r7",
            "bl fcn.000540c8",
            "mov r1, sb",
            "ldr sb, [0x000560f8]",
            "mov r0, r7",
            "bl fcn.00054060",
            "mov r1, sl",
            "ldr r2, [r4, sb]",
            "mov r3, r8",
            "ldr r0, [r4]",
            "bl fcn.00054158",
            "mov r0, sl",
            "bl fcn.00054404",
            "mov r3, 0xa",
            "mov r1, 2",
            "str r3, [sp]",
            "mov r2, 4",
            "mov r3, 1",
            "mov r0, sl",
            "bl fcn.000543b0",
            "ldr r3, [sp, 0x4c]",
            "mov r0, r7",
            "mov r1, 1",
            "mov r2, 3",
            "rev16 r2, r2",
            "strh r2, [r3], 2",
            "str r3, [sp, 0x154]",
            "bl fcn.00054e8c",
            "mov r0, r7",
            "mov r1, 0x100",
            "bl fcn.00054e8c",
            "ldr r0, [r4]",
            "mov r1, sl",
            "ldr r2, [r4, sb]",
            "b 0x55cb0",
            "ldr r2, [0x00056158]",
            "mov r1, 0x30",
            "mov r3, sb",
            "mov r0, r6",
            "add r2, r5, r2",
            "bl sym.imp.av_log",
            "mov r0, sb",
            "bl sym.imp.strlen",
            "add r0, r0, 0x1e",
            "mov r2, 0x14",
            "str r0, [sp]",
            "mov r1, 4",
            "mov r3, fp",
            "mov r0, sl",
            "bl fcn.000543b0",
            "ldr r3, [0x0005614c]",
            "mov r0, r7",
            "ldr r1, [0x0005615c]",
            "ldr r3, [r4, r3]",
            "add r1, r5, r1",
            "str r3, [sp, 0x48]",
            "ldr r3, [sp, 0x4c]",
            "str r3, [sp, 0x154]",
            "bl fcn.00054060",
            "ldr r3, [0x00056128]",
            "ldr r0, [r4, r3]",
            "add r0, r0, 1",
            "str r0, [r4, r3]",
            "bl fcn.0007d690",
            "mov r2, r0",
            "mov r3, r1",
            "mov r0, r7",
            "bl fcn.00054020",
            "mov r0, r7",
            "bl fcn.000540c8",
            "mov r0, r7",
            "mov r1, sb",
            "bl fcn.00054060",
            "ldr r1, [0x00056160]",
            "mov r0, r7",
            "add r1, r5, r1",
            "bl fcn.00054060",
            "ldr r3, [0x000560f8]",
            "mov r1, sl",
            "ldr r0, [r4]",
            "ldr r2, [r4, r3]",
            "mov r3, r8",
            "bl fcn.00054158",
            "mov r0, sl",
            "bl fcn.00054404",
            "mov r2, 5",
            "b 0x55e10",
            "ldr r3, [sp, 0xc]",
            "mov r0, sl",
            "mov r2, 0xb",
            "add r1, r3, 0x15",
            "bl sym.imp.memcmp",
            "cmp r0, 0",
            "bne 0x55e18",
            "add sl, sl, 0xb",
            "mov r1, r7",
            "mov r0, sl",
            "bl fcn.0005470c",
            "cmp r0, 0",
            "blt 0x55e18",
            "add sl, sl, r0",
            "mov r1, r7",
            "mov r0, sl",
            "bl fcn.0005470c",
            "cmp r0, 0",
            "blt 0x55e18",
            "ldr r2, [0x00056164]",
            "mov r3, 0x100",
            "add sl, sl, r0",
            "str r3, [sp]",
            "mov r0, sl",
            "mov r1, r7",
            "add r2, r5, r2",
            "add r3, sp, 0x38",
            "bl fcn.00054a30",
            "cmp r0, 0",
            "bne 0x55da0",
            "ldr r1, [0x00056168]",
            "add sb, sp, 0x38",
            "mov r0, sb",
            "add r1, r5, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x55da0",
            "ldr r2, [0x0005611c]",
            "mov r3, 0x100",
            "str r3, [sp]",
            "mov r0, sl",
            "mov r1, r7",
            "mov r3, sb",
            "add r2, r5, r2",
            "bl fcn.00054a30",
            "cmp r0, 0",
            "bne 0x560d0",
            "ldr r2, [0x00056120]",
            "mov r0, r6",
            "mov r1, 0x10",
            "mov r3, sb",
            "add r2, r5, r2",
            "bl sym.imp.av_log",
            "b 0x560d0",
            "ldr r2, [0x0005616c]",
            "mov r3, 0x100",
            "add sb, sp, 0x38",
            "str r3, [sp]",
            "mov r0, sl",
            "mov r1, r7",
            "add r2, r5, r2",
            "mov r3, sb",
            "bl fcn.00054a30",
            "cmp r0, 0",
            "bne 0x55e18",
            "ldr r1, [0x00056170]",
            "mov r0, sb",
            "add r1, r5, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "ldreq r3, [0x000560e0]",
            "moveq r2, 6",
            "streq r2, [r4, r3]",
            "b 0x56080",
            "ldr r3, [0x000560e0]",
            "mov r2, 8",
            "str r2, [r4, r3]",
            "b 0x56098",
            "ldr r3, [0x000560e0]",
            "mov r2, 8",
            "str r2, [r4, r3]",
            "b 0x560b0",
            "ldr r3, [0x000560e0]",
            "str r2, [r4, r3]",
            "ldr r3, [0x000560e0]",
            "ldr r3, [r4, r3]",
            "cmp r3, 8",
            "bne 0x55e34",
            "add r0, sp, 0x138",
            "bl fcn.00054404",
            "b 0x5606c",
            "ldr r2, [sp, 0x24]",
            "cmp r2, 0",
            "beq 0x55e4c",
            "sub r3, r3, 6",
            "cmp r3, 1",
            "bls 0x56050",
            "ldr r7, [sp, 0x150]",
            "cmp r7, 0",
            "beq 0x56060",
            "ldr r3, [0x0005610c]",
            "ldr r3, [r4, r3]",
            "cmp r3, 0",
            "beq 0x56060",
            "ldr r3, [sp, 0x13c]",
            "sub r2, r3, 8",
            "cmp r2, 1",
            "bls 0x55e9c",
            "cmp r3, 0x12",
            "bne 0x55f5c",
            "ldr r3, [sp, 0xc]",
            "mov r2, 0xd",
            "ldr r1, [sp, 0x14c]",
            "add r0, r3, 0x21",
            "bl sym.imp.memcmp",
            "cmp r0, 0",
            "bne 0x56060",
            "ldr r3, [0x00056174]",
            "mov r5, 0",
            "ldr r8, [0x00056178]",
            "add r1, r7, 0xf",
            "ldr r6, [sp, 0x140]",
            "str r5, [r4, r3]",
            "sub r3, r3, 4",
            "str r1, [r4, r3]",
            "ldr r0, [r4, r8]",
            "bl sym.imp.av_realloc",
            "ldr r3, [sp, 0x13c]",
            "str r0, [sp, 0x15c]",
            "str r0, [r4, r8]",
            "add r4, sp, 0x160",
            "strb r3, [r0]",
            "ldr r3, [sp, 0x15c]",
            "ldr r1, [sp, 0x150]",
            "add r3, r3, 1",
            "str r3, [r4, -4]!",
            "mov r0, r4",
            "bl fcn.00054ed0",
            "mov r1, r6",
            "mov r0, r4",
            "bl fcn.00054ed0",
            "ldr r3, [sp, 0x15c]",
            "lsr r6, r6, 0x18",
            "mov r0, r4",
            "mov r1, r5",
            "strb r6, [r3]",
            "ldr r3, [sp, 0x15c]",
            "add r3, r3, 1",
            "str r3, [sp, 0x15c]",
            "bl fcn.00054ed0",
            "ldr r6, [sp, 0x150]",
            "ldr r1, [sp, 0x14c]",
            "ldr r0, [sp, 0x15c]",
            "mov r2, r6",
            "bl sym.imp.memcpy",
            "ldr r3, [sp, 0x15c]",
            "mov r0, r4",
            "mov r1, r5",
            "add r6, r3, r6",
            "str r6, [sp, 0x15c]",
            "bl fcn.00054e8c",
            "add r0, sp, 0x138",
            "bl fcn.00054404",
            "mov r0, r5",
            "b 0x56078",
            "cmp r3, 0x16",
            "bne 0x56060",
            "ldr r3, [0x00056174]",
            "mov r6, 0",
            "ldr r5, [0x00056178]",
            "mov r1, r7",
            "mov sb, r6",
            "add r8, sp, 0x15c",
            "str r6, [r4, r3]",
            "sub r3, r3, 4",
            "str r7, [r4, r3]",
            "add r7, sp, 0x158",
            "ldr r0, [r4, r5]",
            "bl sym.imp.av_realloc",
            "ldr r3, [sp, 0x14c]",
            "str r0, [r4, r5]",
            "ldr r5, [sp, 0x140]",
            "str r3, [sp, 0x158]",
            "b 0x56028",
            "add r3, r3, 1",
            "mov r0, r7",
            "str r3, [sp, 0x158]",
            "bl fcn.00054eac",
            "ldr r3, [sp, 0x158]",
            "mov sl, r0",
            "mov r0, r7",
            "add sl, sl, 7",
            "str r3, [sp, 0x15c]",
            "bl fcn.00054eac",
            "ldr r3, [sp, 0x158]",
            "cmp sb, 0",
            "add r2, r3, 1",
            "str r2, [sp, 0x158]",
            "ldrb r6, [r3]",
            "orr r6, r0, r6, lsl 24",
            "mov r0, r8",
            "moveq sb, r6",
            "rsb sb, sb, r6",
            "add r5, r5, sb",
            "mov sb, r6",
            "mov r1, r5",
            "bl fcn.00054ed0",
            "ldr r3, [sp, 0x15c]",
            "lsr r2, r5, 0x18",
            "strb r2, [r3]",
            "ldr r3, [sp, 0x15c]",
            "add r3, r3, 1",
            "str r3, [sp, 0x15c]",
            "ldr r3, [sp, 0x158]",
            "add sl, r3, sl",
            "str sl, [sp, 0x158]",
            "ldr r3, [sp, 0x158]",
            "ldr r1, [sp, 0x14c]",
            "ldr r2, [sp, 0x150]",
            "rsb ip, r1, r3",
            "sub r0, r2, 0xb",
            "cmp ip, r0",
            "blt 0x55fa8",
            "ldr r3, [0x00056178]",
            "ldr r0, [r4, r3]",
            "bl sym.imp.memcpy",
            "add r0, sp, 0x138",
            "bl fcn.00054404",
            "mov r0, 0",
            "b 0x56078",
            "add r0, sp, 0x138",
            "bl fcn.00054404",
            "b 0x5548c",
            "ldr r0, [0x0005617c]",
            "b 0x56078",
            "mvn r0, 4",
            "add sp, sp, 0x164",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r1, [0x00056180]",
            "add r0, sp, 0x38",
            "add r1, r5, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x55df0",
            "ldr r1, [0x00056184]",
            "add r0, sp, 0x38",
            "add r1, r5, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x55e00",
            "ldr r1, [0x00056188]",
            "add r0, sp, 0x38",
            "add r1, r5, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "moveq r2, 7",
            "beq 0x55e10",
            "b 0x55e18",
            "add r0, sp, 0x138",
            "bl fcn.00054404",
            "mvn r0, 0",
            "b 0x56078"
        ]
    },
    "fcn.000540c8": {
        "function_address": "0x000540c8",
        "instructions": [
            "ldr r3, [r0]",
            "mov r2, 5",
            "strb r2, [r3]",
            "ldr r3, [r0]",
            "add r3, r3, 1",
            "str r3, [r0]",
            "bx lr"
        ]
    },
    "fcn.00054ed0": {
        "function_address": "0x00054ed0",
        "instructions": [
            "ldr r3, [r0]",
            "lsr r2, r1, 8",
            "strb r1, [r3, 2]",
            "lsr r1, r1, 0x10",
            "ldr r3, [r0]",
            "strb r2, [r3, 1]",
            "ldr r3, [r0]",
            "strb r1, [r3]",
            "ldr r3, [r0]",
            "add r3, r3, 3",
            "str r3, [r0]",
            "bx lr"
        ]
    },
    "fcn.00054eac": {
        "function_address": "0x00054eac",
        "instructions": [
            "ldr r2, [r0]",
            "add r3, r2, 3",
            "str r3, [r0]",
            "ldrb r1, [r3, -1]",
            "ldrb r2, [r2]",
            "ldrb r0, [r3, -2]",
            "orr r2, r1, r2, lsl 16",
            "orr r0, r2, r0, lsl 8",
            "bx lr"
        ]
    },
    "fcn.00056248": {
        "function_address": "0x00056248",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "sub sp, sp, 0x60",
            "ldr r5, [0x000563a0]",
            "mov r6, r0",
            "mov sb, r1",
            "mov r4, r2",
            "mov r1, 0",
            "mov r2, 0x60",
            "mov r0, sp",
            "mov sl, r3",
            "ldr r8, [sp, 0x80]",
            "add r5, pc, r5",
            "bl sym.imp.memset",
            "ldr r3, [0x000563a4]",
            "ldr r3, [r5, r3]",
            "ldr r0, [r3]",
            "bl sym.imp.av_mallocz",
            "cmp r8, 0x3f",
            "mov r5, r0",
            "bgt 0x562ac",
            "mov r0, sp",
            "mov r1, sl",
            "mov r2, r8",
            "bl sym.imp.memcpy",
            "b 0x562d0",
            "mov r1, 0x100",
            "bl sym.imp.av_sha_init",
            "mov r0, r5",
            "mov r1, sl",
            "mov r2, r8",
            "bl sym.imp.av_sha_update",
            "mov r0, r5",
            "mov r1, sp",
            "bl sym.imp.av_sha_final",
            "mov r7, sp",
            "add r8, sp, 0x40",
            "mov r3, sp",
            "ldrb r2, [r3]",
            "eor r2, r2, 0x36",
            "strb r2, [r3], 1",
            "cmp r3, r8",
            "bne 0x562dc",
            "mov r1, 0x100",
            "mov r0, r5",
            "bl sym.imp.av_sha_init",
            "mov r0, r5",
            "mov r1, sp",
            "mov r2, 0x40",
            "bl sym.imp.av_sha_update",
            "cmp r4, 0",
            "movle r0, r5",
            "movle r1, r6",
            "movle r2, sb",
            "ble 0x56344",
            "mov r0, r5",
            "mov r1, r6",
            "mov r2, r4",
            "bl sym.imp.av_sha_update",
            "add r1, r4, 0x20",
            "sub r2, sb, 0x20",
            "mov r0, r5",
            "add r1, r6, r1",
            "rsb r2, r4, r2",
            "bl sym.imp.av_sha_update",
            "mov r0, r5",
            "add r1, sp, 0x40",
            "bl sym.imp.av_sha_final",
            "ldrb r3, [r7]",
            "eor r3, r3, 0x6a",
            "strb r3, [r7], 1",
            "cmp r7, r8",
            "bne 0x56354",
            "mov r0, r5",
            "mov r1, 0x100",
            "bl sym.imp.av_sha_init",
            "mov r0, r5",
            "mov r1, sp",
            "mov r2, 0x60",
            "bl sym.imp.av_sha_update",
            "mov r0, r5",
            "ldr r1, [sp, 0x84]",
            "bl sym.imp.av_sha_final",
            "mov r0, r5",
            "bl sym.imp.av_free",
            "add sp, sp, 0x60",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "sym.imp.av_sha_init": {
        "function_address": "0x00009b10",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0xa28]!"
        ]
    },
    "sym.imp.av_sha_update": {
        "function_address": "0x00009a14",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0xad0]!"
        ]
    },
    "sym.imp.av_sha_final": {
        "function_address": "0x00009744",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0xcb0]!"
        ]
    },
    "fcn.000563a8": {
        "function_address": "0x000563a8",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "add r2, r0, r1",
            "ldr r6, [0x00056440]",
            "mov r5, r0",
            "mov r0, 0",
            "sub sp, sp, 0x28",
            "mov r4, r1",
            "mov r3, r0",
            "add r6, pc, r6",
            "ldrb r1, [r2], 1",
            "add r3, r3, 1",
            "cmp r3, 4",
            "add r0, r0, r1",
            "bne 0x563cc",
            "mov r1, 0x2d8",
            "add r4, r4, 4",
            "bl fcn.0007d340",
            "ldr r3, [0x00056444]",
            "add r4, r4, r1",
            "mov r2, 0x24",
            "mov r0, r5",
            "str r2, [sp]",
            "mov r1, 0x600",
            "add r3, r6, r3",
            "mov r2, r4",
            "add r6, sp, 8",
            "add r3, r3, 0x30",
            "str r6, [sp, 4]",
            "bl fcn.00056248",
            "mov r0, r6",
            "add r1, r5, r4",
            "mov r2, 0x20",
            "bl sym.imp.memcmp",
            "cmp r0, 0",
            "moveq r0, r4",
            "movne r0, 0",
            "add sp, sp, 0x28",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.00054100": {
        "function_address": "0x00054100",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r4, r0",
            "mov r0, r1",
            "mov r7, r1",
            "bl sym.imp.strlen",
            "ldr r6, [r4]",
            "rev16 r0, r0",
            "strh r0, [r6], 2",
            "mov r0, r7",
            "str r6, [r4]",
            "bl sym.imp.strlen",
            "mov r5, r0",
            "mov r1, r7",
            "mov r2, r5",
            "mov r0, r6",
            "bl sym.imp.memcpy",
            "ldr r3, [r4]",
            "add r5, r3, r5",
            "str r5, [r4]",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.00054f00": {
        "function_address": "0x00054f00",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sl, lr}",
            "mov sl, r0",
            "ldr r4, [r0, 0x14]",
            "sub sp, sp, 0x2c",
            "ldr r3, [0x00055104]",
            "ldr r5, [0x00055108]",
            "ldr r3, [r4, r3]",
            "add r5, pc, r5",
            "cmp r3, 0",
            "bne 0x55018",
            "ldr r2, [0x0005510c]",
            "str r3, [r4, r2]",
            "ldr r3, [0x00055110]",
            "ldr r3, [r4, r3]",
            "cmp r3, 0",
            "beq 0x54f4c",
            "ldr r0, [0x00055114]",
            "add r0, r4, r0",
            "bl fcn.00054404",
            "ldr r3, [0x00055118]",
            "ldr r3, [r4, r3]",
            "cmp r3, 3",
            "bls 0x55018",
            "ldr r7, [0x0005511c]",
            "add r8, sp, 8",
            "add r6, sp, 0x28",
            "add r7, r4, r7",
            "mov r0, r7",
            "bl sym.imp.strlen",
            "add r0, r0, 0x1b",
            "mov r3, 0",
            "str r0, [sp]",
            "mov r1, 3",
            "mov r2, 0x14",
            "mov r0, r8",
            "bl fcn.000543b0",
            "ldr r2, [0x00055120]",
            "mov r0, sl",
            "mov r1, 0x30",
            "add r2, r5, r2",
            "bl sym.imp.av_log",
            "ldr r3, [sp, 0x1c]",
            "ldr r1, [0x00055124]",
            "str r3, [r6, -4]!",
            "mov r0, r6",
            "add r1, r5, r1",
            "bl fcn.00054060",
            "ldr r3, [0x00055128]",
            "ldr r0, [r4, r3]",
            "add r0, r0, 1",
            "str r0, [r4, r3]",
            "bl fcn.0007d690",
            "mov r2, r0",
            "mov r3, r1",
            "mov r0, r6",
            "bl fcn.00054020",
            "mov r0, r6",
            "bl fcn.000540c8",
            "mov r0, r6",
            "mov r1, r7",
            "bl fcn.00054060",
            "ldr r3, [0x0005512c]",
            "mov r1, r8",
            "ldr r0, [r4]",
            "ldr r2, [r4, r3]",
            "ldr r3, [0x00055130]",
            "add r3, r4, r3",
            "bl fcn.00054158",
            "mov r0, r8",
            "bl fcn.00054404",
            "ldr r3, [0x00055118]",
            "ldr r3, [r4, r3]",
            "cmp r3, 1",
            "bls 0x550e4",
            "ldr r2, [0x00055134]",
            "mov r0, sl",
            "mov r1, 0x30",
            "add r7, sp, 8",
            "add r6, sp, 0x28",
            "add r2, r5, r2",
            "bl sym.imp.av_log",
            "mov r3, 0x22",
            "mov r2, 0x14",
            "str r3, [sp]",
            "mov r1, 3",
            "mov r3, 0",
            "mov r0, r7",
            "bl fcn.000543b0",
            "ldr r3, [sp, 0x1c]",
            "ldr r1, [0x00055138]",
            "str r3, [r6, -4]!",
            "mov r0, r6",
            "add r1, r5, r1",
            "bl fcn.00054060",
            "ldr r3, [0x00055128]",
            "ldr r0, [r4, r3]",
            "add r0, r0, 1",
            "str r0, [r4, r3]",
            "bl fcn.0007d690",
            "mov r2, r0",
            "mov r3, r1",
            "mov r0, r6",
            "bl fcn.00054020",
            "mov r0, r6",
            "bl fcn.000540c8",
            "ldr r3, [0x0005513c]",
            "ldr r0, [r4, r3]",
            "bl fcn.0007d690",
            "mov r2, r0",
            "mov r3, r1",
            "mov r0, r6",
            "bl fcn.00054020",
            "ldr r3, [0x0005512c]",
            "mov r1, r7",
            "ldr r0, [r4]",
            "ldr r2, [r4, r3]",
            "ldr r3, [0x00055130]",
            "add r3, r4, r3",
            "bl fcn.00054158",
            "mov r0, r7",
            "bl fcn.00054404",
            "ldr r0, [0x0005510c]",
            "add r0, r4, r0",
            "bl sym.imp.av_freep",
            "ldr r0, [r4]",
            "bl sym.ffurl_close",
            "mov r0, 0",
            "add sp, sp, 0x2c",
            "pop {r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "fcn.00041240": {
        "function_address": "0x00041240",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r4, r0",
            "mov r5, r2",
            "mov r7, r3",
            "mov r6, r3",
            "mov r8, 0",
            "str r1, [r0, 0x28]",
            "b 0x41264",
            "add r5, r5, 0xbc",
            "cmp r6, 0xbb",
            "str r8, [r4, 0x24]",
            "ble 0x412a8",
            "ldrb r3, [r5]",
            "cmp r3, 0x47",
            "addne r5, r5, 1",
            "subne r6, r6, 1",
            "bne 0x41264",
            "mov r0, r4",
            "mov r1, r5",
            "bl fcn.0003f4a0",
            "ldr r3, [r4, 0x24]",
            "sub r6, r6, 0xbc",
            "cmp r3, 1",
            "bne 0x41260",
            "rsb r0, r6, r7",
            "pop {r4, r5, r6, r7, r8, pc}",
            "mvn r0, 0",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.0005714c": {
        "function_address": "0x0005714c",
        "instructions": [
            "ldr r3, [r1]",
            "push {r0, r1, r4, r5, r6, r8, sb, lr}",
            "mov r4, r0",
            "mov r5, r1",
            "mov r6, r2",
            "cmp r3, 0",
            "bne 0x5727c",
            "ldr r3, [r1, 4]",
            "cmp r3, 0x80000000",
            "bne 0x5727c",
            "ldr r3, [r1, 8]",
            "cmp r3, 0",
            "bne 0x5727c",
            "ldr r3, [r1, 0xc]",
            "cmp r3, 0x80000000",
            "bne 0x5727c",
            "cmn r2, 1",
            "beq 0x5727c",
            "mov r3, 0x180",
            "ldrd r0, r1, [r0, r3]",
            "cmp r0, 0",
            "bne 0x571ac",
            "cmp r1, 0x80000000",
            "beq 0x57220",
            "ldr r3, [r4]",
            "ldr r3, [r3, 0x14]",
            "cmp r3, 1",
            "bls 0x57220",
            "ldr r3, [r4, 4]",
            "mov r2, 0x188",
            "ldrd r8, sb, [r4, r2]",
            "mov ip, 0",
            "ldr r2, [r3, 0x3c]",
            "ldr r3, [r3, 0x38]",
            "subs r0, r0, r8",
            "sbc r1, r1, sb",
            "str ip, [sp]",
            "str r3, [sp, 4]",
            "asr r3, r2, 0x1f",
            "bl sym.imp.av_rescale",
            "mov r3, 0x198",
            "ldrd r8, sb, [r4, r3]",
            "ldrd r2, r3, [r4, 0x28]",
            "adds r8, r8, r2",
            "adc sb, sb, r3",
            "ldr r3, [r4, 0x190]",
            "rsb r6, r3, r6",
            "adds r8, r8, r6",
            "adc sb, sb, r6, asr 31",
            "adds r8, r8, r0",
            "adc sb, sb, r1",
            "strd r8, sb, [r5]",
            "b 0x5727c",
            "ldr r3, [r4, 0x18]",
            "ldr r1, [r4, 0x14]",
            "cmp r3, 0",
            "ldrd r2, r3, [r4, 0x20]",
            "streq r6, [r4, 0x18]",
            "cmp r1, 0",
            "bne 0x57248",
            "adds r2, r2, r6",
            "adc r3, r3, 0",
            "b 0x57254",
            "rsb r1, r1, r6",
            "adds r2, r2, r1",
            "adc r3, r3, r1, asr 31",
            "strd r2, r3, [r4, 0x20]",
            "ldrd r2, r3, [r4, 0x28]",
            "ldrd r0, r1, [r4, 0x20]",
            "str r6, [r4, 0x14]",
            "adds r2, r2, r0",
            "adc r3, r3, r1",
            "ldr r1, [r4, 0x18]",
            "subs r2, r2, r1",
            "sbc r3, r3, 0",
            "strd r2, r3, [r5]",
            "pop {r2, r3, r4, r5, r6, r8, sb, pc}"
        ]
    },
    "fcn.00057280": {
        "function_address": "0x00057280",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r8, r2",
            "ldrb r2, [r2]",
            "sub sp, sp, 0x2c",
            "mov r5, r3",
            "mov r4, r0",
            "ldr r0, [r8, 4]",
            "str r2, [sp, 0x1c]",
            "mov r6, r1",
            "ldrb r3, [r8, 1]",
            "ldrh sb, [r8, 2]",
            "ldr sl, [0x000575e4]",
            "tst r3, 0x80",
            "and r2, r3, 0x7f",
            "movne r3, 2",
            "moveq r3, 0",
            "str r2, [sp, 0x14]",
            "str r3, [sp, 0x18]",
            "add sl, pc, sl",
            "bl fcn.00057144",
            "str r0, [sp, 0x24]",
            "ldr r0, [r8, 8]",
            "bl fcn.00057144",
            "ldr r3, [r4, 8]",
            "ldr r2, [sp, 0x14]",
            "rev16 sb, sb",
            "str r0, [r4, 0xc]",
            "cmp r3, r2",
            "bne 0x575d4",
            "ldr r2, [r4, 0x154]",
            "mov r1, 0x144",
            "ldr r7, [r4, 4]",
            "uxth r3, sb",
            "ldrh r0, [r4, r1]",
            "cmp r2, 0",
            "beq 0x57360",
            "add ip, r0, 1",
            "cmp r3, ip",
            "movne r2, 1",
            "strhne r3, [r4, r1]",
            "strne r2, [r4, 0x154]",
            "bne 0x573f4",
            "sub r2, r2, 1",
            "strh r3, [r4, r1]",
            "cmp r2, 0",
            "str r2, [r4, 0x154]",
            "bne 0x573f4",
            "ldr r1, [0x000575e8]",
            "str r2, [r4, 0x148]",
            "str r0, [r4, 0x14c]",
            "str r1, [r4, 0x150]",
            "str r2, [r4, 0x15c]",
            "str r2, [r4, 0x160]",
            "str r2, [r4, 0x168]",
            "str r2, [r4, 0x164]",
            "b 0x573f8",
            "rsb fp, r0, r3",
            "movw ip, 0xbb7",
            "uxth fp, fp",
            "cmp fp, ip",
            "bgt 0x57390",
            "cmp r3, r0",
            "ldrlo r2, [r4, 0x148]",
            "addlo r2, r2, 0x10000",
            "strlo r2, [r4, 0x148]",
            "mov r2, 0x144",
            "strh r3, [r4, r2]",
            "b 0x573f4",
            "movw r0, 0xff9c",
            "cmp fp, r0",
            "bgt 0x573f4",
            "ldr r0, [r4, 0x150]",
            "cmp r3, r0",
            "bne 0x573d8",
            "strh r3, [r4, r1]",
            "sub r1, r3, 1",
            "str r1, [r4, 0x14c]",
            "ldr r1, [0x000575e8]",
            "str r2, [r4, 0x148]",
            "str r2, [r4, 0x158]",
            "str r1, [r4, 0x150]",
            "str r2, [r4, 0x15c]",
            "str r2, [r4, 0x160]",
            "str r2, [r4, 0x168]",
            "str r2, [r4, 0x164]",
            "b 0x573f4",
            "add r3, r3, 1",
            "cmp r7, 0",
            "uxth r3, r3",
            "moveq r0, r7",
            "str r3, [r4, 0x150]",
            "bne 0x57410",
            "b 0x57414",
            "ldr r2, [r4, 0x158]",
            "add r2, r2, 1",
            "str r2, [r4, 0x158]",
            "ldrb r2, [r8]",
            "tst r2, 0x20",
            "bne 0x57440",
            "b 0x57454",
            "ldr r0, [r7, 8]",
            "ldrh r3, [r4, 0x10]",
            "mov r1, 0x10",
            "ldr r2, [0x000575ec]",
            "str sb, [sp]",
            "add r3, r3, 1",
            "uxth r3, r3",
            "add r2, sl, r2",
            "str r3, [sp, 4]",
            "ldr r3, [sp, 0x14]",
            "bl sym.imp.av_log",
            "b 0x575d4",
            "add r2, r8, r5",
            "ldrb r2, [r2, -1]",
            "add r1, r2, 0xb",
            "cmp r1, r5",
            "rsblt r5, r2, r5",
            "strh r3, [r4, 0x10]",
            "sub r5, r5, 0xc",
            "ldr r3, [sp, 0x1c]",
            "add r8, r8, 0xc",
            "tst r3, 0x10",
            "beq 0x57494",
            "cmp r5, 3",
            "ble 0x575d4",
            "ldrh r3, [r8, 2]",
            "rev16 r3, r3",
            "add r3, r3, 1",
            "lsl r3, r3, 2",
            "cmp r5, r3",
            "blt 0x575d4",
            "rsb r5, r3, r5",
            "add r8, r8, r3",
            "cmp r7, 0",
            "bne 0x574e4",
            "mov r1, r6",
            "ldr r0, [r4, 0x34]",
            "mov r2, r8",
            "mov r3, r5",
            "bl fcn.00041240",
            "subs r1, r0, 0",
            "mvnlt r7, 0xa",
            "blt 0x575d8",
            "cmp r1, r5",
            "bge 0x575d8",
            "rsb r2, r1, r5",
            "add r0, r4, 0x1b0",
            "str r2, [r4, 0x3c]",
            "add r1, r8, r1",
            "bl sym.imp.memcpy",
            "str r7, [r4, 0x38]",
            "add r7, r7, 1",
            "b 0x575d8",
            "ldr ip, [r4, 0x790]",
            "cmp ip, 0",
            "beq 0x57524",
            "ldr r2, [sp, 0x18]",
            "add r3, sp, 0x24",
            "str r3, [sp]",
            "mov r3, r6",
            "str r8, [sp, 4]",
            "str r2, [sp, 0xc]",
            "str r5, [sp, 8]",
            "ldr r0, [r4]",
            "ldr r1, [r4, 0x794]",
            "ldr r2, [r4, 4]",
            "blx ip",
            "mov r7, r0",
            "b 0x575c0",
            "ldr r3, [r7, 8]",
            "ldr r3, [r3, 0xd4]",
            "cmp r3, 1",
            "blo 0x57598",
            "cmp r3, 2",
            "bls 0x5756c",
            "sub r3, r3, 0x15000",
            "cmp r3, 1",
            "bhi 0x57598",
            "cmp r5, 4",
            "ble 0x575d4",
            "sub r5, r5, 4",
            "mov r0, r6",
            "mov r1, r5",
            "bl sym.imp.av_new_packet",
            "ldr r0, [r6, 0x10]",
            "add r1, r8, 4",
            "b 0x575ac",
            "cmp r5, 4",
            "ble 0x575d4",
            "ldr r0, [r8], 4",
            "bl fcn.00057144",
            "tst r0, 0x4000000",
            "sub r5, r5, 4",
            "beq 0x57598",
            "cmp r5, 4",
            "ble 0x575d4",
            "add r8, r8, 4",
            "sub r5, r5, 4",
            "mov r1, r5",
            "mov r0, r6",
            "bl sym.imp.av_new_packet",
            "ldr r0, [r6, 0x10]",
            "mov r1, r8",
            "mov r2, r5",
            "bl sym.imp.memcpy",
            "ldr r3, [r7]",
            "mov r7, 0",
            "str r3, [r6, 0x18]",
            "mov r0, r4",
            "mov r1, r6",
            "ldr r2, [sp, 0x24]",
            "bl fcn.0005714c",
            "b 0x575d8",
            "mvn r7, 0",
            "mov r0, r7",
            "add sp, sp, 0x2c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00057144": {
        "function_address": "0x00057144",
        "instructions": [
            "rev r0, r0",
            "bx lr"
        ]
    },
    "fcn.000411cc": {
        "function_address": "0x000411cc",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r6, r0",
            "ldr r5, fcn.000521f8",
            "movw r0, 0x8040",
            "bl sym.imp.av_mallocz",
            "subs r4, r0, 0",
            "add r5, pc, r5",
            "beq 0x4122c",
            "ldr r2, [0x00041238]",
            "mov r3, 0xbc",
            "str r3, [r4, 8]",
            "mov r3, 1",
            "str r3, [r4, 0x10]",
            "mov r1, 0x11",
            "add r2, r5, r2",
            "mov r3, r4",
            "str r6, [r4, 4]",
            "bl fcn.000401c4",
            "ldr r2, [0x0004123c]",
            "mov r0, r4",
            "mov r1, 0",
            "mov r3, r4",
            "add r2, r5, r2",
            "bl fcn.000401c4",
            "mov r0, r4",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.000575f0": {
        "function_address": "0x000575f0",
        "instructions": [
            "ldr r3, [r0, 0x174]",
            "ldr r2, [0x000576b0]",
            "push {r4, r5, r6, lr}",
            "mov r5, r1",
            "cmp r3, 0",
            "mov r4, r0",
            "add r2, pc, r2",
            "mvnle r5, 0",
            "ble 0x57678",
            "ldr r3, [r0, 0x170]",
            "cmp r3, 0",
            "beq 0x57680",
            "ldrh r1, [r0, 0x10]",
            "ldrh r0, [r3]",
            "add r1, r1, 1",
            "uxth r1, r1",
            "cmp r0, r1",
            "bne 0x57680",
            "ldr r3, [r4, 0x170]",
            "mov r1, r5",
            "mov r0, r4",
            "ldmib r3, {r2, r3}",
            "bl fcn.00057280",
            "ldr r3, [r4, 0x170]",
            "mov r5, r0",
            "ldr r0, [r3, 4]",
            "ldr r6, [r3, 0x18]",
            "bl sym.imp.av_free",
            "ldr r0, [r4, 0x170]",
            "bl sym.imp.av_free",
            "ldr r3, [r4, 0x174]",
            "str r6, [r4, 0x170]",
            "sub r3, r3, 1",
            "str r3, [r4, 0x174]",
            "mov r0, r5",
            "pop {r4, r5, r6, pc}",
            "ldr r0, [r4, 4]",
            "mov r1, 0x18",
            "ldrh ip, [r3]",
            "ldr lr, [0x000576b4]",
            "ldrh r3, [r4, 0x10]",
            "cmp r0, 0",
            "sub ip, ip, 1",
            "ldrne r0, [r0, 8]",
            "add r2, r2, lr",
            "rsb r3, r3, ip",
            "bl sym.imp.av_log",
            "b 0x57638"
        ]
    },
    "fcn.00057e00": {
        "function_address": "0x00057e00",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r4, r0",
            "b 0x57e24",
            "ldr r5, [r3, 0x18]",
            "ldr r0, [r3, 4]",
            "bl sym.imp.av_free",
            "ldr r0, [r4, 0x170]",
            "bl sym.imp.av_free",
            "str r5, [r4, 0x170]",
            "ldr r3, [r4, 0x170]",
            "cmp r3, 0",
            "bne 0x57e0c",
            "strh r3, [r4, 0x10]",
            "str r3, [r4, 0x174]",
            "str r3, [r4, 0x16c]",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.000412b0": {
        "function_address": "0x000412b0",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r5, r0",
            "add r6, r0, 0x3c",
            "mov r4, 0x2000",
            "ldr r0, [r6, 4]!",
            "bl sym.imp.av_free",
            "subs r4, r4, 1",
            "bne 0x412c0",
            "mov r0, r5",
            "pop {r4, r5, r6, lr}",
            "b sym.imp.av_free"
        ]
    },
    "fcn.0005d534": {
        "function_address": "0x0005d534",
        "instructions": [
            "push {r3, r4, r5, r6, r7, r8, sl, lr}",
            "mov r7, r1",
            "ldr r5, [0x0005d5dc]",
            "mov r4, r0",
            "mov r6, r3",
            "mov r8, r2",
            "ldr sl, [r0]",
            "ldr r1, [0x0005d5e0]",
            "add r5, pc, r5",
            "mov r0, sl",
            "add r1, r5, r1",
            "bl sym.imp.strspn",
            "add r3, sl, r0",
            "str r3, [r4]",
            "ldrb r0, [sl, r0]",
            "cmp r0, 0",
            "popeq {r3, r4, r5, r6, r7, r8, sl, pc}",
            "ldr r2, [0x0005d5e4]",
            "mov r0, r7",
            "mov r1, r8",
            "mov r3, r4",
            "add r2, r5, r2",
            "bl fcn.0005cbec",
            "ldr r3, [r4]",
            "mov r0, r6",
            "ldr r1, [sp, 0x20]",
            "ldrb r2, [r3]",
            "cmp r2, 0x3d",
            "ldr r2, [0x0005d5e8]",
            "addeq r3, r3, 1",
            "streq r3, [r4]",
            "mov r3, r4",
            "add r2, r5, r2",
            "bl fcn.0005cbec",
            "ldr r3, [r4]",
            "ldrb r2, [r3]",
            "cmp r2, 0x3b",
            "addeq r3, r3, 1",
            "moveq r0, 1",
            "streq r3, [r4]",
            "movne r0, 1",
            "pop {r3, r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "fcn.000582b8": {
        "function_address": "0x000582b8",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r7, r0",
            "sub sp, sp, 0x114",
            "mov r0, r2",
            "mov fp, r1",
            "mov sb, r3",
            "str r2, [sp, 0xc]",
            "bl sym.imp.strlen",
            "add r6, r0, 1",
            "ldr r5, [0x000583e4]",
            "mov r0, r6",
            "bl sym.imp.av_malloc",
            "subs r4, r0, 0",
            "add r5, pc, r5",
            "bne 0x58318",
            "ldr r2, [0x000583e8]",
            "mov r0, r7",
            "mov r1, 0x10",
            "add r2, r5, r2",
            "bl sym.imp.av_log",
            "mvn r3, 0xb",
            "b 0x583d8",
            "add r3, r3, 1",
            "str r3, [sp, 0xc]",
            "ldr r3, [sp, 0xc]",
            "ldrb r2, [r3]",
            "cmp r2, 0x20",
            "beq 0x58310",
            "b 0x58334",
            "add r2, r2, 1",
            "str r2, [sp, 0xc]",
            "ldr r2, [sp, 0xc]",
            "ldrb r3, [r2]",
            "cmp r3, 0x20",
            "cmpne r3, 0",
            "bne 0x5832c",
            "b 0x58354",
            "add r3, r3, 1",
            "str r3, [sp, 0xc]",
            "ldr r3, [sp, 0xc]",
            "ldrb r2, [r3]",
            "cmp r2, 0x20",
            "beq 0x5834c",
            "b 0x5839c",
            "mov r2, r5",
            "mov r3, r4",
            "mov r0, r7",
            "mov r1, fp",
            "blx sb",
            "lsr r2, r0, 0x1f",
            "mov r3, r0",
            "cmp r0, sl",
            "moveq r2, 0",
            "andne r2, r2, 1",
            "cmp r2, 0",
            "beq 0x583a8",
            "b 0x583c8",
            "ldr sl, [0x000583ec]",
            "add r8, sp, 0xc",
            "add r5, sp, 0x10",
            "mov r3, r4",
            "mov r0, r8",
            "mov r1, r5",
            "mov r2, 0x100",
            "str r6, [sp]",
            "bl fcn.0005d534",
            "subs r3, r0, 0",
            "bne 0x58368",
            "mov r0, r4",
            "str r3, [sp, 8]",
            "bl sym.imp.av_free",
            "ldr r3, [sp, 8]",
            "mov r0, r3",
            "add sp, sp, 0x114",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00058814": {
        "function_address": "0x00058814",
        "instructions": [
            "mov r3, 1",
            "push {r0, r1, r2, lr}",
            "mov r2, 0",
            "str r3, [sp]",
            "mov r3, 0",
            "bl sym.avio_seek",
            "add sp, sp, 0xc",
            "ldm sp!, {pc}"
        ]
    },
    "fcn.00059cc8": {
        "function_address": "0x00059cc8",
        "instructions": [
            "cmp r1, 0x19",
            "push {r4, r5, r6, lr}",
            "mov r6, r0",
            "mov r4, r1",
            "bgt 0x59ce4",
            "pop {r4, r5, r6, lr}",
            "b fcn.00059c8c",
            "sub r4, r4, 0x10",
            "mov r1, 0x10",
            "bl fcn.00059c8c",
            "mov r1, r4",
            "mov r5, r0",
            "mov r0, r6",
            "bl fcn.00059c8c",
            "orr r0, r0, r5, lsl r4",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.00059c8c": {
        "function_address": "0x00059c8c",
        "instructions": [
            "ldr r3, [r0, 8]",
            "ldr ip, [r0, 0x10]",
            "push {r4, lr}",
            "ldr r2, [r0]",
            "add r4, r1, r3",
            "ldr r2, [r2, r3, lsr 3]",
            "and r3, r3, 7",
            "rev r2, r2",
            "cmp r4, ip",
            "strls r4, [r0, 8]",
            "strhi ip, [r0, 8]",
            "lsl r0, r2, r3",
            "rsb r1, r1, 0x20",
            "lsr r0, r0, r1",
            "pop {r4, pc}"
        ]
    },
    "fcn.0005a1c4": {
        "function_address": "0x0005a1c4",
        "instructions": [
            "ldr ip, [r1, 0x7a0]",
            "push {r0, r1, r2, r3, r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r4, r1",
            "ldr r7, [0x0005a1b8]",
            "mov r8, r2",
            "cmp ip, 0",
            "mov r5, r3",
            "ldr sl, [sp, 0x30]",
            "add r7, pc, r7",
            "ldr r6, [r1, 4]",
            "beq 0x5a0a0",
            "cmp r6, 0",
            "bne 0x5a0a0",
            "ldr ip, [r1, 0x908]",
            "str ip, [sl]",
            "add ip, r1, 0x7a0",
            "add ip, ip, 4",
            "stm sp, {sl, ip}",
            "ldr ip, [r1, 0x904]",
            "str ip, [sp, 8]",
            "bl fcn.0005a1c4",
            "str r6, [r4, 0x904]",
            "b 0x5a1b0",
            "mov r3, 0x144",
            "mul r6, r3, r6",
            "add sl, r4, r6",
            "ldr sb, [sl, 0xc]",
            "cmp sb, 0",
            "bne 0x5a0d8",
            "mov r0, r5",
            "mov r1, 1",
            "bl sym.imp.av_new_packet",
            "cmp r0, 0",
            "ldrge r3, [r5, 0x10]",
            "strbge sb, [r3]",
            "bge 0x5a15c",
            "b 0x5a1b0",
            "ldr r3, [sl, 8]",
            "cmp r3, sb",
            "bge 0x5a1a4",
            "add r2, sl, r3",
            "ldrb r2, [r2, 0x10]",
            "cmp r2, 4",
            "bhi 0x5a1a4",
            "ldr r1, [0x0005a1bc]",
            "add r7, r7, r1",
            "ldrb r7, [r7, r2]",
            "add r3, r7, r3",
            "cmp r3, sb",
            "bgt 0x5a1a4",
            "mov r0, r5",
            "mov r1, r7",
            "bl sym.imp.av_new_packet",
            "cmp r0, 0",
            "blt 0x5a1b0",
            "ldr r3, [sl, 8]",
            "add r6, r6, 0x10",
            "add r1, r4, r6",
            "mov r2, r7",
            "ldr r0, [r5, 0x10]",
            "add r1, r1, r3",
            "bl sym.imp.memcpy",
            "ldr r3, [sl, 8]",
            "add r7, r7, r3",
            "ldr r3, [sl, 0xc]",
            "str r7, [sl, 8]",
            "cmp r7, r3",
            "movlt r7, 0",
            "movge r7, 1",
            "str r7, [r4, 0x7a0]",
            "ldr r3, [r8]",
            "ldr r2, [r4]",
            "str r3, [r5, 0x18]",
            "ldr r3, [r4, 4]",
            "cmp r3, r2",
            "addne r3, r3, 1",
            "strne r3, [r4, 4]",
            "bne 0x5a1ac",
            "mov r3, 0",
            "str r3, [r4, 4]",
            "ldr r3, [r4, 0x7a0]",
            "cmp r3, 0",
            "beq 0x5a1ac",
            "ldr r0, [r4, 0x904]",
            "cmp r0, 0",
            "movle r0, 0",
            "movgt r0, 1",
            "b 0x5a1b0",
            "ldr r0, [0x0005a1c0]",
            "b 0x5a1b0",
            "mov r0, 1",
            "add sp, sp, 0x10",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x14",
            "ldr r7, [sp, 0x40]",
            "mov fp, r0",
            "mov r4, r1",
            "mov sb, r3",
            "ldr ip, [0x0005a434]",
            "cmp r7, 1",
            "str r2, [sp, 0xc]",
            "ldr sl, [sp, 0x38]",
            "add ip, pc, ip",
            "ldr r8, [sp, 0x3c]",
            "ble 0x5a428",
            "ldrb r6, [r8]",
            "ubfx r5, r6, 3, 3",
            "cmp r5, 5",
            "ble 0x5a220",
            "ldr r2, [0x0005a438]",
            "mov r1, 0x10",
            "mov r3, r5",
            "add r2, ip, r2",
            "bl sym.imp.av_log",
            "b 0x5a428",
            "and r6, r6, 7",
            "cmp r6, r5",
            "ble 0x5a248",
            "ldr r2, [0x0005a43c]",
            "mov r1, 0x10",
            "mov r3, r6",
            "str r5, [sp]",
            "add r2, ip, r2",
            "bl sym.imp.av_log",
            "b 0x5a428",
            "ldr r3, [r1]",
            "cmp r5, r3",
            "beq 0x5a278",
            "mov r3, 0",
            "str r5, [r1]",
            "str r3, [r1, 4]",
            "str r3, [r1, 0xc]",
            "str r3, [r1, 0x150]",
            "str r3, [r1, 0x294]",
            "str r3, [r1, 0x3d8]",
            "str r3, [r1, 0x51c]",
            "str r3, [r1, 0x660]",
            "ldr r3, [r4, 4]",
            "cmp r6, r3",
            "bge 0x5a31c",
            "ldr r3, [r4, 0x7a0]",
            "cmp r3, 0",
            "movne r3, 0",
            "strne r3, [r4, 4]",
            "bne 0x5a31c",
            "b 0x5a2b0",
            "mla r0, r1, r3, r4",
            "add r3, r3, 1",
            "str r3, [r4, 4]",
            "str r2, [r0, 0xc]",
            "b 0x5a2b8",
            "mov r1, 0x144",
            "mov r2, r3",
            "ldr r3, [r4, 4]",
            "cmp r3, r5",
            "ble 0x5a29c",
            "cmp r7, 0x160",
            "bhs 0x5a428",
            "add r0, r4, 0x7a0",
            "mov r1, r8",
            "mov r2, r7",
            "add r0, r0, 4",
            "bl sym.imp.memcpy",
            "str r7, [r4, 0x904]",
            "mov r0, fp",
            "ldr r3, [sl]",
            "mov r1, r4",
            "ldr r2, [sp, 0xc]",
            "str r3, [r4, 0x908]",
            "mvn r3, 0",
            "str r3, [sl]",
            "add r3, r3, 1",
            "str r3, [r4, 4]",
            "mov r3, sb",
            "str sl, [sp, 0x38]",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "b 0x5a044",
            "ldr r3, [r4, 4]",
            "cmp r6, r3",
            "movgt r1, 0x144",
            "movgt r2, 0",
            "bgt 0x5a344",
            "b 0x5a350",
            "mla r0, r1, r3, r4",
            "add r3, r3, 1",
            "str r3, [r4, 4]",
            "str r2, [r0, 0xc]",
            "ldr r3, [r4, 4]",
            "cmp r3, r6",
            "blt 0x5a334",
            "str r6, [r4, 4]",
            "add r3, r8, 1",
            "ldrb r2, [r8, 1]",
            "cmp r2, 4",
            "bhi 0x5a428",
            "ldr r1, [0x0005a440]",
            "add ip, ip, r1",
            "ldrb sl, [ip, r2]",
            "cmp sl, r7",
            "bge 0x5a428",
            "sub r7, r7, 1",
            "rsb fp, sl, r7",
            "cmp fp, 0x13c",
            "bhs 0x5a428",
            "mov r0, sb",
            "mov r1, sl",
            "str r3, [sp, 8]",
            "bl sym.imp.av_new_packet",
            "cmp r0, 0",
            "ldr r3, [sp, 8]",
            "blt 0x5a42c",
            "mov r1, r3",
            "ldr r0, [sb, 0x10]",
            "mov r2, sl",
            "bl sym.imp.memcpy",
            "ldr r2, [sp, 0xc]",
            "mov r0, 0x144",
            "add r1, sl, 1",
            "add r1, r8, r1",
            "ldr r3, [r2]",
            "mov r2, fp",
            "str r3, [sb, 0x18]",
            "mov sb, 0",
            "ldr r3, [r4, 4]",
            "mul r0, r0, r3",
            "add r7, r4, r0",
            "add r0, r0, 0x10",
            "str fp, [r7, 0xc]",
            "add r0, r4, r0",
            "str sb, [r7, 8]",
            "bl sym.imp.memcpy",
            "ldr r0, [r7, 0xc]",
            "cmp r0, sb",
            "movne r0, 0",
            "moveq r0, 1",
            "cmp r6, r5",
            "ldrne r3, [r4, 4]",
            "str r0, [r4, 0x7a0]",
            "eoreq r0, r0, 1",
            "streq sb, [r4, 4]",
            "movne r0, sb",
            "addne r3, r3, 1",
            "strne r3, [r4, 4]",
            "b 0x5a42c",
            "ldr r0, [0x0005a444]",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0005aa34": {
        "function_address": "0x0005aa34",
        "instructions": [
            "mov r3, 1",
            "push {r0, r1, r2, lr}",
            "mov r2, 0",
            "str r3, [sp]",
            "mov r3, 0",
            "bl sym.avio_seek",
            "add sp, sp, 0xc",
            "ldm sp!, {pc}"
        ]
    },
    "fcn.0003a990": {
        "function_address": "0x0003a990",
        "instructions": [
            "ldr r3, [r0, 4]",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r8, r0",
            "ldr r7, [0x0003b590]",
            "sub sp, sp, 0x6c",
            "mov r4, r1",
            "ldr r0, [r3, 0x14]",
            "add r7, pc, r7",
            "str r2, [sp, 0x34]",
            "cmp r0, 0",
            "beq 0x3b588",
            "ldr r3, [r3, 0x18]",
            "sub r0, r0, 1",
            "ldr r1, [0x0003b594]",
            "mov sb, r7",
            "ldr r5, [r3, r0, lsl 2]",
            "mov r0, 0",
            "ldr r3, [0x0003b598]",
            "str r0, [sp, 0x24]",
            "ldr r6, [r5, 0x14]",
            "add r3, r7, r3",
            "str r1, [sp, 0x3c]",
            "str r3, [sp, 0x38]",
            "ldr r3, [0x0003b59c]",
            "add r3, r7, r3",
            "str r3, [sp, 0x40]",
            "ldr r3, [0x0003b5a0]",
            "add r3, r7, r3",
            "str r3, [sp, 0x44]",
            "ldr r3, [0x0003b5a4]",
            "add r3, r7, r3",
            "str r3, [sp, 0x30]",
            "b 0x3b3a8",
            "ldr r2, [sp, 0x38]",
            "mov r1, 0",
            "ldr r7, [r2]",
            "add r0, sp, 0x58",
            "mov r2, 0x10",
            "bl sym.imp.memset",
            "mov r0, r4",
            "str r7, [sp, 0x58]",
            "bl fcn.00035384",
            "strd r0, r1, [sp, 0x28]",
            "mov r0, r4",
            "bl sym.avio_rb32",
            "mov fp, r0",
            "mov r0, r4",
            "bl sym.avio_rl32",
            "cmp fp, 0xf",
            "mov sl, r0",
            "ble 0x3aa7c",
            "mov r0, r4",
            "bl sym.avio_rb32",
            "mov r0, r4",
            "bl sym.avio_rb16",
            "mov r0, r4",
            "bl sym.avio_rb16",
            "mov r7, r0",
            "b 0x3aaac",
            "cmp fp, 0",
            "bgt 0x3aaa8",
            "ldr r2, [0x0003b5a8]",
            "mov r1, 0x10",
            "ldr r0, [r8, 4]",
            "mov r3, fp",
            "mov r7, sb",
            "add r2, sb, r2",
            "bl sym.imp.av_log",
            "mvn r0, 0",
            "b 0x3b588",
            "mov r7, 1",
            "ldr r3, [r5, 8]",
            "ldr r3, [r3, 0xd8]",
            "cmp r3, 0",
            "beq 0x3ab34",
            "cmp r3, sl",
            "beq 0x3ab34",
            "ldr r2, [r8, 4]",
            "ldr r2, [r2, 0x48c]",
            "cmp r2, 0",
            "ldreq r0, [0x0003b5ac]",
            "beq 0x3aaf0",
            "ldr r3, [0x0003b5b0]",
            "mov r1, sl",
            "ldr r0, [sb, r3]",
            "bl fcn.0006ffc8",
            "ldr r3, [r8, 4]",
            "ldr r3, [r3, 0x48c]",
            "subs r3, r3, r0",
            "movne r3, 1",
            "cmp r3, 0",
            "beq 0x3ab34",
            "ldr r2, [0x0003b5b4]",
            "mov r1, 0x18",
            "ldr r0, [r8, 4]",
            "add r2, sb, r2",
            "bl sym.imp.av_log",
            "mov r0, r4",
            "bl fcn.00035384",
            "ldrd r2, r3, [sp, 0x28]",
            "adds r2, r2, fp",
            "adc r3, r3, fp, asr 31",
            "subs r2, r2, r0",
            "sbc r3, r3, r1",
            "b 0x3b394",
            "ldr r3, [r5, 8]",
            "ldr r2, [r3, 0xd8]",
            "cmp r2, 0",
            "ldreq r2, [sp, 0x24]",
            "beq 0x3ab5c",
            "ldr r1, [0x0003b5b8]",
            "ldr r1, [sb, r1]",
            "cmp r2, r1",
            "mvnne r2, 0",
            "beq 0x3ab00",
            "str r7, [r6, 0x90]",
            "mov r1, sl",
            "str r2, [r6, 0x80]",
            "str sl, [r3, 0xd8]",
            "ldr r3, [sp, 0x3c]",
            "ldr r0, [sb, r3]",
            "bl fcn.0006ffc8",
            "subs r7, r0, 0",
            "bne 0x3abb4",
            "uxth r3, sl",
            "movw r2, 0x736d",
            "movw r1, 0x5354",
            "cmp r3, r2",
            "cmpne r3, r1",
            "bne 0x3abb4",
            "mov r0, sl",
            "bl fcn.000350b4",
            "ldr r3, [0x0003b5bc]",
            "uxth r1, r0",
            "ldr r0, [sb, r3]",
            "bl fcn.0006ffc8",
            "mov r7, r0",
            "ldr r2, [r5, 8]",
            "ldr r3, [r2, 0xd0]",
            "cmp r7, 0",
            "cmpne r3, 0",
            "movne r3, 1",
            "strne r3, [r2, 0xd0]",
            "bne 0x3ac58",
            "cmp sl, 0",
            "cmpne r3, 1",
            "beq 0x3ac58",
            "ldr r3, [0x0003b5c0]",
            "cmp sl, r3",
            "beq 0x3ac58",
            "ldr r3, [0x0003b5b0]",
            "mov r1, sl",
            "ldr r0, [sb, r3]",
            "bl fcn.0006ffc8",
            "subs r7, r0, 0",
            "bne 0x3ac18",
            "ldr r3, [0x0003b5c4]",
            "mov r1, sl",
            "ldr r0, [sb, r3]",
            "bl fcn.0006ffc8",
            "subs r7, r0, 0",
            "beq 0x3ac24",
            "ldr r3, [r5, 8]",
            "mov r2, 0",
            "b 0x3ac54",
            "ldr r3, [r5, 8]",
            "ldr r3, [r3, 0xd0]",
            "cmp r3, 2",
            "bne 0x3ac58",
            "ldr r3, [0x0003b5c8]",
            "mov r1, sl",
            "ldr r0, [sb, r3]",
            "bl fcn.0006ffc8",
            "subs r7, r0, 0",
            "beq 0x3ac58",
            "ldr r3, [r5, 8]",
            "mov r2, 3",
            "str r2, [r3, 0xd0]",
            "ldr r3, [r5, 8]",
            "ldr ip, [r3, 0xd0]",
            "cmp ip, 0",
            "bne 0x3af80",
            "str r7, [r3, 0xd4]",
            "mov r0, r4",
            "str ip, [sp, 8]",
            "bl sym.avio_rb16",
            "mov r0, r4",
            "bl sym.avio_rb16",
            "mov r0, r4",
            "bl sym.avio_rb32",
            "mov r0, r4",
            "bl sym.avio_rb32",
            "mov r0, r4",
            "bl sym.avio_rb32",
            "ldr sl, [r5, 8]",
            "mov r0, r4",
            "bl sym.avio_rb16",
            "str r0, [sl, 0x28]",
            "mov r0, r4",
            "ldr sl, [r5, 8]",
            "bl sym.avio_rb16",
            "str r0, [sl, 0x2c]",
            "mov r0, r4",
            "bl sym.avio_rb32",
            "mov r0, r4",
            "bl sym.avio_rb32",
            "mov r0, r4",
            "bl sym.avio_rb32",
            "mov r0, r4",
            "bl sym.avio_rb16",
            "mov r0, r4",
            "bl sym.avio_r8",
            "ldr r2, [r5, 8]",
            "cmp r0, 0x1f",
            "movlo sl, r0",
            "movhs sl, 0x1f",
            "mov r1, sl",
            "mov r0, r4",
            "mov r3, 0x20",
            "add r2, r2, 0xb0",
            "bl fcn.0003a04c",
            "cmp sl, 0x1f",
            "ldr ip, [sp, 8]",
            "beq 0x3ad20",
            "mov r0, r4",
            "rsb r2, sl, 0x1f",
            "mov r3, ip",
            "bl sym.avio_skip",
            "ldr sl, [r5, 8]",
            "mov r2, 0x19",
            "ldr r1, [sp, 0x44]",
            "add r0, sl, 0xb0",
            "bl sym.imp.memcmp",
            "cmp r0, 0",
            "mov r0, r4",
            "ldreq r3, [0x0003b5cc]",
            "streq r3, [sl, 0xd8]",
            "bl sym.avio_rb16",
            "str r0, [sl, 0x174]",
            "mov r0, r4",
            "ldr sl, [r5, 8]",
            "bl sym.avio_rb16",
            "ldr r2, [r5, 8]",
            "str r0, [sl, 0x1ec]",
            "ldr ip, [r2, 0x174]",
            "and r3, ip, 0x1f",
            "cmp r3, 2",
            "movne r0, 0",
            "moveq r0, 1",
            "cmp r3, 4",
            "movne r1, 0",
            "moveq r1, 1",
            "orrs lr, r1, r0",
            "bne 0x3ad90",
            "cmp r3, 8",
            "bne 0x3b31c",
            "tst ip, 0x20",
            "beq 0x3ae0c",
            "mov sl, 1",
            "str r3, [r2, 0x174]",
            "lsl sl, sl, r3",
            "mov r0, 0x100",
            "sub r3, sl, 1",
            "mov r1, r3",
            "str r3, [sp, 0xc]",
            "bl fcn.0007d19c",
            "ldr r3, [sp, 0xc]",
            "add ip, r6, 0xa0",
            "mov r2, 0xff",
            "mov r1, 0",
            "str r3, [sp, 0x18]",
            "b 0x3ae00",
            "cmp r7, 0x2c",
            "add r1, r1, 1",
            "ldreq lr, [sp, 0x18]",
            "uxtbne r3, r2",
            "rsbeq r3, r2, lr",
            "rsb r2, r0, r2",
            "uxtbeq r3, r3",
            "bic r2, r2, r2, asr 31",
            "orr lr, r3, 0xff000000",
            "orr lr, lr, r3, lsl 16",
            "orr r3, lr, r3, lsl 8",
            "str r3, [ip, 4]!",
            "cmp r1, sl",
            "bne 0x3add0",
            "b 0x3af74",
            "ldr r2, [r2, 0x1ec]",
            "cmp r2, 0",
            "beq 0x3ae80",
            "cmp r0, 0",
            "mov sl, 1",
            "ldrne r1, [sp, 0x30]",
            "lsl r3, sl, r3",
            "addne r2, r1, 0x260",
            "bne 0x3ae44",
            "cmp r1, 0",
            "ldrne r0, [sp, 0x30]",
            "ldreq lr, [sp, 0x30]",
            "addne r2, r0, 0x26c",
            "addeq r2, lr, 0x29c",
            "add r0, r6, 0xa0",
            "mov r1, 0",
            "b 0x3ae70",
            "ldrb lr, [r2, -3]",
            "add r1, r1, 1",
            "ldrb ip, [r2, -1]",
            "orr ip, ip, 0xff000000",
            "orr ip, ip, lr, lsl 16",
            "ldrb lr, [r2, -2]",
            "orr ip, ip, lr, lsl 8",
            "str ip, [r0, 4]!",
            "cmp r1, r3",
            "add r2, r2, 3",
            "bne 0x3ae50",
            "b 0x3af74",
            "mov r0, r4",
            "bl sym.avio_rb32",
            "mov r7, r0",
            "mov r0, r4",
            "bl sym.avio_rb16",
            "mov r0, r4",
            "bl sym.avio_rb16",
            "cmp r0, 0xff",
            "cmpls r7, 0xff",
            "bhi 0x3af74",
            "add sl, r6, r7, lsl 2",
            "mov r2, r8",
            "str sb, [sp, 0x18]",
            "mov r8, r5",
            "mov sb, r6",
            "add sl, sl, 0xa0",
            "mov r6, r0",
            "b 0x3af5c",
            "mov r0, r4",
            "str r2, [sp, 0x14]",
            "bl sym.avio_r8",
            "mov r1, r0",
            "mov r0, r4",
            "str r1, [sp, 0x10]",
            "add r7, r7, 1",
            "bl sym.avio_r8",
            "mov r0, r4",
            "bl sym.avio_r8",
            "mov r5, r0",
            "mov r0, r4",
            "bl sym.avio_r8",
            "mov r0, r4",
            "uxtb r5, r5",
            "bl sym.avio_r8",
            "mov r3, r0",
            "mov r0, r4",
            "str r3, [sp, 0xc]",
            "lsl r5, r5, 0x10",
            "bl sym.avio_r8",
            "mov r0, r4",
            "bl sym.avio_r8",
            "mov ip, r0",
            "mov r0, r4",
            "str ip, [sp, 8]",
            "bl sym.avio_r8",
            "ldr r1, [sp, 0x10]",
            "ldr ip, [sp, 8]",
            "ldr r3, [sp, 0xc]",
            "ldr r2, [sp, 0x14]",
            "orr r1, r5, r1, lsl 24",
            "uxtb ip, ip",
            "orr r1, r1, ip",
            "uxtb ip, r3",
            "orr r1, r1, ip, lsl 8",
            "str r1, [sl, 4]!",
            "cmp r7, r6",
            "bls 0x3aec8",
            "mov r6, sb",
            "ldr sb, [sp, 0x18]",
            "mov r5, r8",
            "mov r8, r2",
            "mov r3, 1",
            "str r3, [r6, 0x4a4]",
            "b 0x3b31c",
            "cmp ip, 1",
            "bne 0x3b200",
            "mov r0, r4",
            "bl sym.avio_rb16",
            "ldr r2, [r5, 8]",
            "mov r3, r0",
            "mov r0, r4",
            "str r7, [r2, 0xd4]",
            "str r3, [sp, 0xc]",
            "bl sym.avio_rb16",
            "mov r0, r4",
            "bl sym.avio_rb32",
            "ldr r7, [r5, 8]",
            "mov r0, r4",
            "bl sym.avio_rb16",
            "str r0, [r7, 0x40]",
            "mov r0, r4",
            "ldr r7, [r5, 8]",
            "bl sym.avio_rb16",
            "str r0, [r7, 0x174]",
            "mov r0, r4",
            "bl sym.avio_rb16",
            "strh r0, [r6, 0x84]",
            "mov r0, r4",
            "bl sym.avio_rb16",
            "mov r0, r4",
            "ldr r7, [r5, 8]",
            "bl sym.avio_rb32",
            "ldr r2, [r8, 0x28]",
            "lsr r0, r0, 0x10",
            "ldr r3, [sp, 0xc]",
            "str r0, [r7, 0x3c]",
            "cmp r2, 0",
            "bne 0x3b0d4",
            "uxth r3, r3",
            "cmp r3, 1",
            "bne 0x3b040",
            "mov r0, r4",
            "bl sym.avio_rb32",
            "str r0, [r6, 0x78]",
            "mov r0, r4",
            "bl sym.avio_rb32",
            "mov r0, r4",
            "bl sym.avio_rb32",
            "str r0, [r6, 0x74]",
            "mov r0, r4",
            "bl sym.avio_rb32",
            "b 0x3b0d4",
            "cmp r3, 2",
            "bne 0x3b0d4",
            "mov r0, r4",
            "bl sym.avio_rb32",
            "ldr r7, [r5, 8]",
            "mov r0, r4",
            "bl sym.avio_rb64",
            "bl fcn.0007dd08",
            "str r0, [r7, 0x3c]",
            "mov r0, r4",
            "ldr r7, [r5, 8]",
            "bl sym.avio_rb32",
            "str r0, [r7, 0x40]",
            "mov r0, r4",
            "bl sym.avio_rb32",
            "ldr r7, [r5, 8]",
            "mov r0, r4",
            "bl sym.avio_rb32",
            "str r0, [r7, 0x174]",
            "mov r0, r4",
            "bl sym.avio_rb32",
            "mov r1, r0",
            "mov r0, r4",
            "str r1, [sp, 0x10]",
            "bl sym.avio_rb32",
            "str r0, [r6, 0x74]",
            "mov r0, r4",
            "bl sym.avio_rb32",
            "ldr r3, [0x0003b5d0]",
            "str r0, [r6, 0x78]",
            "ldr r1, [sp, 0x10]",
            "cmp sl, r3",
            "bne 0x3b0d4",
            "ldr r7, [r5, 8]",
            "ldr r0, [r7, 0x174]",
            "bl fcn.0003a8a0",
            "str r0, [r7, 0xd4]",
            "ldr r3, [r5, 8]",
            "ldr r1, [0x0003b5d4]",
            "ldr r2, [r3, 0xd4]",
            "cmp r2, r1",
            "bhi 0x3b104",
            "ldr r0, [0x0003b5d8]",
            "cmp r2, r0",
            "bhs 0x3b13c",
            "sub r1, r2, 0x10000",
            "cmp r1, 1",
            "bhi 0x3b1d4",
            "b 0x3b150",
            "ldr r1, [0x0003b5dc]",
            "cmp r2, r1",
            "beq 0x3b188",
            "bhi 0x3b120",
            "cmp r2, 0x11000",
            "bne 0x3b1d4",
            "b 0x3b1ac",
            "ldr r1, [0x0003b5e0]",
            "cmp r2, r1",
            "beq 0x3b19c",
            "add r1, r1, 0xa",
            "cmp r2, r1",
            "bne 0x3b1d4",
            "b 0x3b1c4",
            "ldr r2, [r3, 0x174]",
            "cmp r2, 0x10",
            "ldreq r2, [0x0003b5e4]",
            "bne 0x3b1d4",
            "b 0x3b180",
            "ldr r1, [r3, 0x174]",
            "cmp r1, 8",
            "streq r0, [r3, 0xd4]",
            "beq 0x3b1d4",
            "cmp r1, 0x18",
            "bne 0x3b1d4",
            "ldr ip, [0x0003b5e4]",
            "ldr r1, [0x0003b5e8]",
            "ldr r0, [0x0003b5ec]",
            "cmp r2, ip",
            "moveq r2, r1",
            "movne r2, r0",
            "str r2, [r3, 0xd4]",
            "b 0x3b1d4",
            "mov r2, 6",
            "str r2, [r6, 0x78]",
            "ldr r2, [r3, 0x40]",
            "lsl r2, r2, 1",
            "b 0x3b1d0",
            "mov r2, 6",
            "str r2, [r6, 0x78]",
            "ldr r2, [r3, 0x40]",
            "b 0x3b1d0",
            "mov r2, 0x40",
            "mov r1, 0x22",
            "str r2, [r6, 0x78]",
            "ldr r2, [r3, 0x40]",
            "mul r2, r1, r2",
            "b 0x3b1d0",
            "mov r2, 0xa0",
            "str r2, [r6, 0x78]",
            "mov r2, 0x21",
            "str r2, [r6, 0x74]",
            "ldr r0, [r3, 0xd4]",
            "bl sym.imp.av_get_bits_per_sample",
            "cmp r0, 0",
            "beq 0x3b31c",
            "ldr r3, [r5, 8]",
            "str r0, [r3, 0x174]",
            "asr r0, r0, 3",
            "ldr r3, [r3, 0x40]",
            "mul r0, r3, r0",
            "str r0, [r6, 0x3c]",
            "b 0x3b31c",
            "cmp ip, 3",
            "bne 0x3b298",
            "mov r0, r4",
            "bl fcn.00035384",
            "add ip, sp, 0x48",
            "strd r0, r1, [sp, 0x18]",
            "mov r2, 0x10",
            "mov r0, ip",
            "mov r1, 0",
            "str ip, [sp, 8]",
            "bl sym.imp.memset",
            "ldrd r2, r3, [sp, 0x28]",
            "ldrd r0, r1, [sp, 0x18]",
            "ldr ip, [sp, 8]",
            "adds r2, r2, fp",
            "adc r3, r3, fp, asr 31",
            "subs r2, r2, r0",
            "sbc r3, r3, r1",
            "ldr r1, [sp, 0x40]",
            "strd r2, r3, [sp, 0x50]",
            "ldr r3, [r1]",
            "cmp sl, r3",
            "beq 0x3b27c",
            "add r3, sp, 0x50",
            "mov r2, sp",
            "ldm r3, {r0, r1}",
            "stm r2, {r0, r1}",
            "mov r0, r8",
            "ldm ip, {r2, r3}",
            "mov r1, r4",
            "bl fcn.00037214",
            "ldr r3, [r5, 8]",
            "ldr r2, [r6, 0x98]",
            "str r7, [r3, 0xd4]",
            "str r2, [r3, 0x28]",
            "ldr r2, [r6, 0x9c]",
            "str r2, [r3, 0x2c]",
            "b 0x3b31c",
            "ldr r2, [r3, 0xd8]",
            "ldr r3, [0x0003b5f0]",
            "cmp r2, r3",
            "bne 0x3b2f8",
            "mov r0, r4",
            "bl sym.avio_rb32",
            "mov r0, r4",
            "bl sym.avio_rb32",
            "tst r0, 1",
            "mov r0, r4",
            "ldrne r3, [r5, 8]",
            "ldrne r2, [r3, 0x23c]",
            "orrne r2, r2, 0x2000",
            "strne r2, [r3, 0x23c]",
            "bl sym.avio_rb32",
            "mov r0, r4",
            "bl sym.avio_rb32",
            "mov r0, r4",
            "ldr r7, [r5, 8]",
            "bl sym.avio_r8",
            "ldr r3, [r5, 8]",
            "mov r2, 1",
            "str r0, [r7, 0x24]",
            "str r2, [r3, 0x20]",
            "mov r0, r4",
            "bl fcn.00035384",
            "ldrd r2, r3, [sp, 0x28]",
            "adds r2, r2, fp",
            "adc r3, r3, fp, asr 31",
            "subs r2, r2, r0",
            "sbc r3, r3, r1",
            "mov r0, r4",
            "bl sym.avio_skip",
            "mov r0, r4",
            "bl fcn.00035384",
            "ldrd r2, r3, [sp, 0x28]",
            "adds r2, r2, fp",
            "adc r3, r3, fp, asr 31",
            "subs r2, r2, r0",
            "sbc r3, r3, r1",
            "cmp r3, 0",
            "bgt 0x3b34c",
            "bne 0x3b380",
            "cmp r2, 8",
            "bls 0x3b380",
            "add r1, sp, 0x68",
            "strd r2, r3, [r1, -8]!",
            "mov r3, sp",
            "ldm r1, {r0, r1}",
            "stm r3, {r0, r1}",
            "add r3, sp, 0x58",
            "ldm r3, {r2, r3}",
            "mov r0, r8",
            "mov r1, r4",
            "bl fcn.0003554c",
            "cmp r0, 0",
            "bge 0x3b39c",
            "b 0x3b588",
            "cmp r3, 0",
            "bgt 0x3b394",
            "bne 0x3b39c",
            "cmp r2, 0",
            "beq 0x3b39c",
            "mov r0, r4",
            "bl sym.avio_skip",
            "ldr r0, [sp, 0x24]",
            "add r0, r0, 1",
            "str r0, [sp, 0x24]",
            "ldr r1, [sp, 0x24]",
            "ldr r2, [sp, 0x34]",
            "cmp r1, r2",
            "blt 0x3aa14",
            "ldr r4, [r5, 8]",
            "mov r7, sb",
            "ldr r3, [r4, 0xd0]",
            "cmp r3, 1",
            "bne 0x3b3e4",
            "ldr r3, [r4, 0x3c]",
            "cmp r3, 0",
            "bne 0x3b3e4",
            "ldr r3, [r6, 0x50]",
            "cmp r3, 1",
            "strgt r3, [r4, 0x3c]",
            "ldr r3, [r4, 0xd4]",
            "ldr r2, [0x0003b5f4]",
            "cmp r3, r2",
            "bhi 0x3b444",
            "cmp r3, 0x15000",
            "movhs r3, 1",
            "strhs r3, [r4, 0xd0]",
            "bhs 0x3b580",
            "ldr r2, [0x0003b5f8]",
            "cmp r3, r2",
            "beq 0x3b534",
            "bhi 0x3b42c",
            "cmp r3, 1",
            "beq 0x3b580",
            "sub r2, r2, 5",
            "cmp r3, r2",
            "bne 0x3b584",
            "b 0x3b534",
            "cmp r3, 0x12000",
            "beq 0x3b500",
            "ldr r2, [0x0003b5fc]",
            "cmp r3, r2",
            "bne 0x3b584",
            "b 0x3b518",
            "ldr r2, [0x0003b600]",
            "cmp r3, r2",
            "beq 0x3b548",
            "bhi 0x3b470",
            "sub r2, r2, 0xf",
            "cmp r3, r2",
            "beq 0x3b57c",
            "add r2, r2, 3",
            "cmp r3, r2",
            "bne 0x3b584",
            "b 0x3b48c",
            "ldr r2, [0x0003b604]",
            "cmp r3, r2",
            "beq 0x3b534",
            "add r2, r2, 6",
            "cmp r3, r2",
            "bne 0x3b584",
            "b 0x3b4d8",
            "bl sym.avformat_alloc_context",
            "str r0, [r8, 0x24]",
            "bl sym.avpriv_dv_init_demux",
            "cmp r0, 0",
            "str r0, [r8, 0x20]",
            "bne 0x3b4c0",
            "ldr r2, [0x0003b608]",
            "mov r1, 0x10",
            "ldr r0, [r8, 4]",
            "add r2, r7, r2",
            "bl sym.imp.av_log",
            "mvn r0, 0xb",
            "b 0x3b588",
            "mov r3, 1",
            "mov r2, 0x10000",
            "str r3, [r6, 0x7c]",
            "ldr r3, [r5, 8]",
            "str r2, [r3, 0xd4]",
            "b 0x3b584",
            "ldr r3, [0x0003b60c]",
            "ldr r2, [r4, 0xd8]",
            "cmp r2, r3",
            "movne r3, 0x1f40",
            "strne r3, [r4, 0x3c]",
            "mov r3, 0xa0",
            "str r3, [r4, 0x48]",
            "mov r3, 1",
            "str r3, [r4, 0x40]",
            "b 0x3b584",
            "mov r3, 1",
            "str r3, [r4, 0x40]",
            "mov r3, 0x1f40",
            "str r3, [r4, 0x3c]",
            "mov r3, 0xa0",
            "b 0x3b52c",
            "mov r3, 1",
            "str r3, [r4, 0x40]",
            "mov r3, 0x3e80",
            "str r3, [r4, 0x3c]",
            "sub r3, r3, 0x3d40",
            "str r3, [r4, 0x48]",
            "b 0x3b584",
            "ldr r3, [r6, 0x78]",
            "str r3, [r4, 0x48]",
            "ldr r3, [r6, 0x74]",
            "str r3, [r4, 0x100]",
            "b 0x3b584",
            "ldr r3, [r4, 0x1c]",
            "cmp r3, 0x24",
            "bne 0x3b584",
            "ldr r5, [r4, 0x18]",
            "ldr r0, [r5, 0xc]",
            "bl fcn.000350b4",
            "str r0, [r4, 0x48]",
            "ldrb r3, [r5, 0x15]",
            "str r3, [r4, 0x40]",
            "ldr r0, [r5, 0x20]",
            "bl fcn.000350b4",
            "str r0, [r4, 0x3c]",
            "b 0x3b584",
            "mov r3, 1",
            "str r3, [r5, 0x60]",
            "mov r0, 0",
            "add sp, sp, 0x6c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0003a8a0": {
        "function_address": "0x0003a8a0",
        "instructions": [
            "tst r1, 1",
            "and r3, r1, 2",
            "beq 0x3a8dc",
            "cmp r3, 0",
            "beq 0x3a8c4",
            "cmp r0, 0x20",
            "ldrne r3, [0x0003a964]",
            "bne 0x3a8d4",
            "b 0x3a94c",
            "cmp r0, 0x20",
            "ldreq r0, [0x0003a968]",
            "bxeq lr",
            "ldr r3, [0x0003a96c]",
            "cmp r0, 0x40",
            "b 0x3a940",
            "cmp r3, 0",
            "beq 0x3a908",
            "cmp r0, 8",
            "beq 0x3a910",
            "cmp r0, 0x10",
            "ldreq r0, [0x0003a970]",
            "bxeq lr",
            "cmp r0, 0x18",
            "ldrne r3, [0x0003a974]",
            "bne 0x3a93c",
            "b 0x3a954",
            "cmp r0, 8",
            "bne 0x3a924",
            "ldr r3, [0x0003a978]",
            "tst r1, 4",
            "ldr r0, [0x0003a97c]",
            "movne r0, r3",
            "bx lr",
            "cmp r0, 0x10",
            "moveq r0, 0x10000",
            "bxeq lr",
            "cmp r0, 0x18",
            "beq 0x3a95c",
            "ldr r3, [0x0003a980]",
            "cmp r0, 0x20",
            "moveq r0, r3",
            "movne r0, 0",
            "bx lr",
            "ldr r0, [0x0003a984]",
            "bx lr",
            "ldr r0, [0x0003a988]",
            "bx lr",
            "ldr r0, [0x0003a98c]",
            "bx lr"
        ]
    },
    "fcn.0005b768": {
        "function_address": "0x0005b768",
        "instructions": [
            "push {r0, r1, r4, lr}",
            "mov r4, r0",
            "ldr r0, [r0]",
            "cmp r0, 0",
            "beq 0x5b794",
            "add r1, sp, 4",
            "bl sym.avio_close_dyn_buf",
            "ldr r0, [sp, 4]",
            "bl sym.imp.av_free",
            "mov r3, 0",
            "str r3, [r4]",
            "pop {r2, r3, r4, pc}"
        ]
    },
    "fcn.0005c0f8": {
        "function_address": "0x0005c0f8",
        "instructions": [
            "push {r2, r3}",
            "push {r4, r5, r6, lr}",
            "sub sp, sp, 0x400",
            "sub sp, sp, 8",
            "mov r4, r1",
            "add r3, sp, 0x410",
            "mov r1, 0x3f",
            "add r3, r3, 0xc",
            "ldr r6, [0x0005c188]",
            "mov r5, r0",
            "str r3, [sp, 0x404]",
            "bl sym.imp.strchr",
            "cmp r0, 0",
            "add r6, pc, r6",
            "movne r0, r5",
            "ldrne r1, [0x0005c18c]",
            "ldreq r1, [0x0005c190]",
            "moveq r0, r5",
            "add r1, r6, r1",
            "mov r2, r4",
            "add r6, sp, 4",
            "bl sym.imp.av_strlcat",
            "ldr r2, [sp, 0x418]",
            "mov r0, r6",
            "mov r1, 0x400",
            "ldr r3, [sp, 0x404]",
            "bl sym.imp.vsnprintf",
            "mov r0, r5",
            "mov r1, r6",
            "mov r2, r4",
            "bl sym.imp.av_strlcat",
            "add sp, sp, 8",
            "add sp, sp, 0x400",
            "pop {r4, r5, r6, lr}",
            "add sp, sp, 8",
            "bx lr"
        ]
    },
    "fcn.0005c194": {
        "function_address": "0x0005c194",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sl, lr}",
            "sub sp, sp, 0x14",
            "ldr r4, [0x0005c270]",
            "mov r7, r3",
            "mov r3, 0",
            "mov r5, r0",
            "str r2, [sp, 4]",
            "ldr r2, [0x0005c274]",
            "add r4, pc, r4",
            "str r1, [sp]",
            "mov r1, 0x400",
            "ldr r6, [sp, 0x30]",
            "add r2, r4, r2",
            "ldr r8, [sp, 0x34]",
            "ldr sl, [sp, 0x38]",
            "str r3, [sp, 8]",
            "bl fcn.000745ec",
            "cmp r7, 0",
            "blt 0x5c1f8",
            "ldr r2, [0x0005c278]",
            "mov r0, r5",
            "mov r1, 0x400",
            "mov r3, r7",
            "add r2, r4, r2",
            "bl fcn.0005c0f8",
            "cmp r6, 0",
            "blt 0x5c218",
            "ldr r2, [0x0005c27c]",
            "mov r0, r5",
            "mov r1, 0x400",
            "mov r3, r6",
            "add r2, r4, r2",
            "bl fcn.0005c0f8",
            "cmp r8, 0",
            "blt 0x5c238",
            "ldr r2, [0x0005c280]",
            "mov r0, r5",
            "mov r1, 0x400",
            "mov r3, r8",
            "add r2, r4, r2",
            "bl fcn.0005c0f8",
            "cmp sl, 0",
            "beq 0x5c254",
            "ldr r2, [0x0005c284]",
            "mov r0, r5",
            "mov r1, 0x400",
            "add r2, r4, r2",
            "bl fcn.0005c0f8",
            "ldr r2, [0x0005c288]",
            "mov r0, r5",
            "mov r1, 0x400",
            "add r2, r4, r2",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sl, lr}",
            "b fcn.0005c0f8"
        ]
    },
    "fcn.0006a254": {
        "function_address": "0x0006a254",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r3, 0x100",
            "sub sp, sp, 0x128",
            "ldr r4, [r0, 0x14]",
            "mov r5, 0",
            "add r8, sp, 0x18",
            "str r3, [sp, 4]",
            "add r3, sp, 0x124",
            "mov r2, r5",
            "str r3, [sp, 8]",
            "str r1, [sp, 0x14]",
            "mov r3, r5",
            "mov sb, r0",
            "mov sl, r1",
            "mov r0, r5",
            "mov r1, r5",
            "str r8, [sp]",
            "add r7, r4, 0x18",
            "str r5, [sp, 0xc]",
            "str r5, [sp, 0x10]",
            "ldr r6, [0x0006a3bc]",
            "bl sym.av_url_split",
            "mov r0, r8",
            "mov r2, r5",
            "mov r3, r5",
            "ldr r1, [sp, 0x124]",
            "bl fcn.0006a164",
            "subs r5, r0, 0",
            "add r6, pc, r6",
            "mvneq r8, 4",
            "beq 0x6a2ec",
            "mov r0, r7",
            "ldr r1, [r5, 0x14]",
            "ldr r2, [r5, 0x10]",
            "bl sym.imp.memcpy",
            "mov r0, r5",
            "ldr r8, [r5, 0x10]",
            "bl sym.imp.freeaddrinfo",
            "cmp r8, 0",
            "str r8, [r4, 0x98]",
            "blt 0x6a3b0",
            "mov r0, r7",
            "bl fcn.00045c50",
            "mov r1, 0x3f",
            "str r0, [r4, 0xc]",
            "mov r0, sl",
            "bl sym.imp.strchr",
            "subs r3, r0, 0",
            "moveq r0, r3",
            "beq 0x6a3b4",
            "ldr r2, [0x0006a3c0]",
            "add r5, sp, 0x118",
            "mov r0, r5",
            "mov r1, 0xa",
            "add r2, r6, r2",
            "bl sym.imp.av_find_info_tag",
            "cmp r0, 0",
            "beq 0x6a3b4",
            "ldr r8, [r4, 0x9c]",
            "mov r0, r5",
            "mov r1, 0",
            "mov r2, 0xa",
            "bl sym.imp.strtol",
            "str r0, [r4, 0x9c]",
            "subs r0, r0, 0",
            "movne r0, 1",
            "cmp r8, 0",
            "movne r0, 0",
            "cmp r0, 0",
            "beq 0x6a3b4",
            "ldr r0, [r4]",
            "mov r1, r7",
            "ldr r2, [r4, 0x98]",
            "bl sym.imp.connect",
            "cmp r0, 0",
            "beq 0x6a3b4",
            "mov r3, 0",
            "str r3, [r4, 0x9c]",
            "bl sym.imp.__errno_location",
            "ldr r0, [r0]",
            "bl sym.imp.strerror",
            "ldr r2, [0x0006a3c4]",
            "mov r3, r0",
            "mov r1, 0x10",
            "mov r0, sb",
            "add r2, r6, r2",
            "bl sym.imp.av_log",
            "mvn r0, 4",
            "add sp, sp, 0x128",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "fcn.0006a164": {
        "function_address": "0x0006a164",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sl, lr}",
            "mov r8, r3",
            "sub sp, sp, 0x3c",
            "mov r3, 0",
            "mov r5, r0",
            "mov r7, r2",
            "ldr r4, [0x0006a244]",
            "str r3, [sp, 0x34]",
            "subs r3, r1, 0",
            "add r4, pc, r4",
            "ble 0x6a1ac",
            "ldr r2, [0x0006a248]",
            "add r6, sp, 0x24",
            "mov r0, r6",
            "mov r1, 0x10",
            "add r2, r4, r2",
            "bl sym.imp.snprintf",
            "b 0x6a1b4",
            "ldr r6, [0x0006a24c]",
            "add r6, r4, r6",
            "cmp r5, 0",
            "beq 0x6a1d4",
            "ldrb r3, [r5]",
            "cmp r3, 0",
            "moveq r5, r3",
            "beq 0x6a1d4",
            "cmp r3, 0x3f",
            "moveq r5, 0",
            "add sl, sp, 4",
            "mov r1, 0",
            "mov r2, 0x20",
            "mov r0, sl",
            "bl sym.imp.memset",
            "mov r3, 2",
            "mov r0, r5",
            "str r3, [sp, 0xc]",
            "mov r1, r6",
            "mov r2, sl",
            "add r3, sp, 0x34",
            "str r7, [sp, 8]",
            "str r8, [sp, 4]",
            "bl sym.imp.getaddrinfo",
            "cmp r0, 0",
            "beq 0x6a238",
            "mov r5, 0",
            "str r5, [sp, 0x34]",
            "bl sym.imp.gai_strerror",
            "ldr r2, [0x0006a250]",
            "mov r3, r0",
            "mov r1, 0x10",
            "mov r0, r5",
            "add r2, r4, r2",
            "bl sym.imp.av_log",
            "ldr r0, [sp, 0x34]",
            "add sp, sp, 0x3c",
            "pop {r4, r5, r6, r7, r8, sl, pc}"
        ]
    },
    "fcn.00045c50": {
        "function_address": "0x00045c50",
        "instructions": [
            "ldrh r3, [r0]",
            "cmp r3, 2",
            "bne 0x45c78",
            "ldr r0, [r0, 4]",
            "rev r0, r0",
            "and r0, r0, 0xf0000000",
            "cmp r0, 0xe0000000",
            "movne r0, 0",
            "moveq r0, 1",
            "bx lr",
            "cmp r3, 0xa",
            "bne 0x45c94",
            "ldrb r0, [r0, 8]",
            "cmp r0, 0xff",
            "movne r0, 0",
            "moveq r0, 1",
            "bx lr",
            "mov r0, 0",
            "bx lr"
        ]
    },
    "sym.imp.av_find_info_tag": {
        "function_address": "0x00009cc0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x908]!"
        ]
    },
    "sym.imp.connect": {
        "function_address": "0x00009870",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0xbe8]!"
        ]
    },
    "sym.imp.__errno_location": {
        "function_address": "0x000097a4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0xc70]!"
        ]
    },
    "fcn.00050554": {
        "function_address": "0x00050554",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r4, r0",
            "mov r0, 0x20",
            "mov r5, r1",
            "mov r6, r2",
            "mov r7, r3",
            "bl sym.imp.av_mallocz",
            "cmp r0, 0",
            "popeq {r4, r5, r6, r7, r8, pc}",
            "ldr r2, [r4, 0x18]",
            "ldr r3, [r0, 8]",
            "ldr ip, [r4, 0x14]",
            "str r4, [r0]",
            "add r2, r2, r5, lsl 2",
            "add r1, r2, r3, lsl 2",
            "str r2, [r0, 4]",
            "add r3, r3, 1",
            "add r4, r3, r5",
            "cmp r4, ip",
            "bhs 0x505bc",
            "ldr r8, [r1, 4]!",
            "ldr r4, [r2]",
            "ldr r8, [r8, 4]",
            "ldr r4, [r4, 4]",
            "cmp r8, r4",
            "beq 0x50594",
            "cmp r7, 0",
            "str r3, [r0, 8]",
            "ldrne r7, [r7, 0x50]",
            "mvn r3, 0",
            "str r3, [r0, 0x18]",
            "str r3, [r0, 0x1c]",
            "str r3, [r0, 0x14]",
            "str r7, [r0, 0x10]",
            "str r6, [r0, 0xc]",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.00057ca4": {
        "function_address": "0x00057ca4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r6, r0",
            "ldr r4, [0x00057de4]",
            "mov r0, 0x7a0",
            "mov r5, r1",
            "mov sb, r2",
            "mov sl, r3",
            "bl sym.imp.av_mallocz",
            "subs r8, r0, 0",
            "add r4, pc, r4",
            "mov r7, r0",
            "beq 0x57ddc",
            "mov r2, 0",
            "mov r3, 0x80000000",
            "mov r1, 0x180",
            "str sl, [r0, 8]",
            "strd r2, r3, [r0, r1]",
            "add r1, r1, 8",
            "strd r2, r3, [r0, r1]",
            "sub r1, r1, 0x188",
            "ldr r3, [sp, 0x20]",
            "mov r2, 0x28",
            "str r6, [r0]",
            "str r5, [r0, 4]",
            "str r3, [r0, 0x178]",
            "add r0, r0, 0x144",
            "bl sym.imp.memset",
            "mov r3, 1",
            "mov r0, sl",
            "str r3, [r7, 0x154]",
            "bl fcn.00057064",
            "ldr r1, [0x00057de8]",
            "add r1, r4, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x57d5c",
            "ldr r0, [r7]",
            "bl fcn.000411cc",
            "cmp r0, 0",
            "mov r4, r0",
            "str r0, [r7, 0x34]",
            "bne 0x57dcc",
            "mov r0, r7",
            "mov r7, r4",
            "bl sym.imp.av_free",
            "b 0x57ddc",
            "ldr r2, [r5, 8]",
            "ldr r3, [r2, 0xd4]",
            "cmp r3, 0xd",
            "beq 0x57db0",
            "bhi 0x57d88",
            "cmp r3, 1",
            "blo 0x57dcc",
            "cmp r3, 2",
            "bls 0x57db0",
            "cmp r3, 5",
            "b 0x57d9c",
            "ldr r1, [0x00057dec]",
            "cmp r3, r1",
            "beq 0x57dbc",
            "bhi 0x57da4",
            "cmp r3, 0x1c",
            "bne 0x57dcc",
            "b 0x57db0",
            "sub r3, r3, 0x15000",
            "cmp r3, 1",
            "bhi 0x57dcc",
            "mov r3, 1",
            "str r3, [r5, 0x60]",
            "b 0x57dcc",
            "ldr r3, [r2, 0x3c]",
            "cmp r3, 0x1f40",
            "addeq r3, r3, 0x1f40",
            "streq r3, [r2, 0x3c]",
            "str sb, [r8, 0x40]",
            "add r0, r8, 0x44",
            "mov r1, 0x100",
            "bl sym.imp.gethostname",
            "mov r0, r7",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "fcn.00057064": {
        "function_address": "0x00057064",
        "instructions": [
            "ldr r3, [0x000570bc]",
            "mov r2, 0",
            "ldr ip, [0x000570c0]",
            "mov r1, r2",
            "push {r4, lr}",
            "add r3, pc, r3",
            "add ip, r3, ip",
            "b 0x570a4",
            "cmp r4, r0",
            "add r2, r2, 0x1c",
            "bne 0x570a0",
            "mov r0, 0x1c",
            "mla r1, r0, r1, ip",
            "add r0, r1, 4",
            "pop {r4, pc}",
            "add r1, r1, 1",
            "ldr r4, [ip, r2]",
            "cmp r4, 0",
            "bge 0x57084",
            "ldr r0, [0x000570c4]",
            "add r0, r3, r0",
            "pop {r4, pc}"
        ]
    },
    "sym.imp.gethostname": {
        "function_address": "0x00009c30",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x968]!"
        ]
    },
    "fcn.0005cc0c": {
        "function_address": "0x0005cc0c",
        "instructions": [
            "ldr r3, [0x0005cc98]",
            "push {r0, r1, r2, r4, r5, r6, r7, lr}",
            "mov r6, r1",
            "ldr r4, [r2]",
            "mov r7, r0",
            "add r3, pc, r3",
            "mov r5, r2",
            "ldr r1, [0x0005cc9c]",
            "mov r0, r4",
            "str r4, [sp, 4]",
            "add r1, r3, r1",
            "bl sym.imp.strspn",
            "add r0, r4, r0",
            "add r4, sp, 8",
            "str r0, [r4, -4]!",
            "mov r2, 0xa",
            "mov r1, r4",
            "bl sym.imp.strtol",
            "mov r3, r0",
            "ldr r0, [sp, 4]",
            "ldrb r2, [r0]",
            "cmp r2, 0x2d",
            "strne r3, [r7]",
            "strne r3, [r6]",
            "bne 0x5cc8c",
            "add r0, r0, 1",
            "str r3, [r7]",
            "mov r1, r4",
            "mov r2, 0xa",
            "str r0, [sp, 4]",
            "bl sym.imp.strtol",
            "str r0, [r6]",
            "ldr r3, [sp, 4]",
            "str r3, [r5]",
            "pop {r1, r2, r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.0005cca0": {
        "function_address": "0x0005cca0",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "sub sp, sp, 0x2c",
            "mov r5, 0",
            "add r6, sp, 4",
            "mov r7, r0",
            "mov r2, 0x20",
            "mov r0, r6",
            "mov r4, r1",
            "mov r1, r5",
            "str r5, [sp, 0x24]",
            "bl sym.imp.memset",
            "mov r3, 4",
            "mov r2, r6",
            "str r3, [sp, 4]",
            "mov r0, r7",
            "mov r1, r5",
            "add r3, sp, 0x24",
            "bl sym.imp.getaddrinfo",
            "subs r6, r0, 0",
            "mvnne r0, 0",
            "bne 0x5cd1c",
            "ldr r5, [sp, 0x24]",
            "mov r0, r4",
            "ldr r2, [r5, 0x10]",
            "ldr r1, [r5, 0x14]",
            "cmp r2, 0x80",
            "movhs r2, 0x80",
            "bl sym.imp.memcpy",
            "mov r0, r5",
            "bl sym.imp.freeaddrinfo",
            "mov r0, r6",
            "add sp, sp, 0x2c",
            "pop {r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.0005d2d0": {
        "function_address": "0x0005d2d0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "subs r8, r2, 0",
            "mov r4, r0",
            "mov r5, r1",
            "popeq {r4, r5, r6, r7, r8, pc}",
            "ldrb r3, [r1]",
            "cmp r3, 0",
            "popeq {r4, r5, r6, r7, r8, pc}",
            "ldr r6, [r0, 0x230]",
            "cmp r6, 0",
            "beq 0x5d334",
            "pop {r4, r5, r6, r7, r8, pc}",
            "ldr r3, [r4, 0xc]",
            "ldr r0, [r3, r6, lsl 2]",
            "ldr r7, [r0, 4]",
            "cmp r7, 0",
            "beq 0x5d330",
            "add r0, r0, 0x14",
            "mov r1, r5",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x5d330",
            "str r8, [r7, 0x18]",
            "pop {r4, r5, r6, r7, r8, pc}",
            "add r6, r6, 1",
            "ldr r3, [r4, 8]",
            "cmp r6, r3",
            "blt 0x5d300",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.00057880": {
        "function_address": "0x00057880",
        "instructions": [
            "ldr r3, [0x000578d4]",
            "ldr r2, [0x000578d8]",
            "push {r4, r5, r6, lr}",
            "mov r6, r0",
            "add r3, pc, r3",
            "mov r5, r1",
            "ldr r4, [r3, r2]",
            "b 0x578c4",
            "mov r0, r6",
            "mov r1, r4",
            "bl sym.imp.av_strcasecmp",
            "cmp r0, 0",
            "bne 0x578c0",
            "ldr r3, [r4, 0x34]",
            "cmp r5, r3",
            "beq 0x578cc",
            "ldr r4, [r4, 0x54]",
            "cmp r4, 0",
            "bne 0x578a0",
            "mov r0, r4",
            "pop {r4, r5, r6, pc}"
        ]
    },
    "fcn.000570c8": {
        "function_address": "0x000570c8",
        "instructions": [
            "ldr r3, [0x0005713c]",
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov sb, r0",
            "ldr r4, [0x00057140]",
            "mov sl, r1",
            "add r3, pc, r3",
            "mov r5, 0",
            "mov r7, 0x1c",
            "add r4, r3, r4",
            "mov r8, r4",
            "b 0x57128",
            "mla r6, r7, r5, r8",
            "mov r0, sb",
            "add r1, r6, 4",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x57120",
            "ldr r3, [r4, 0xc]",
            "cmp sl, r3",
            "bne 0x57120",
            "ldr r0, [r6, 0x10]",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}",
            "add r5, r5, 1",
            "add r4, r4, 0x1c",
            "ldr r3, [r4]",
            "cmp r3, 0",
            "bge 0x570f4",
            "mov r0, 0",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "fcn.00058cd4": {
        "function_address": "0x00058cd4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x84",
            "add r2, sp, 0x80",
            "ldr r4, [0x00058ef4]",
            "mov sb, r0",
            "mov r0, r1",
            "str r1, [r2, -0x64]!",
            "ldr r1, [0x00058ef8]",
            "add r4, pc, r4",
            "add r1, r4, r1",
            "bl sym.imp.av_strstart",
            "cmp r0, 0",
            "moveq r4, r0",
            "beq 0x58ee8",
            "ldr r0, [sp, 0x1c]",
            "mov r6, 6",
            "bl sym.imp.strlen",
            "mul r6, r6, r0",
            "ldr r5, [sb, 0xc]",
            "lsr r6, r6, 3",
            "mov r0, r6",
            "bl sym.imp.av_mallocz",
            "ldr r1, [sp, 0x1c]",
            "mov r2, r6",
            "mov r7, r0",
            "bl sym.imp.av_base64_decode",
            "cmp r6, 0x35",
            "add r8, r7, r6",
            "bls 0x58dfc",
            "ldr r3, [0x00058efc]",
            "mov r0, r7",
            "mov r2, 0x10",
            "ldr r1, [r4, r3]",
            "bl sym.imp.memcmp",
            "cmp r0, 0",
            "bne 0x58dfc",
            "ldr r3, [0x00058f00]",
            "add sl, r7, 0x1e",
            "ldr r3, [r4, r3]",
            "str r3, [sp, 0x18]",
            "ldr r2, [sl, 0x10]",
            "ldr r3, [sl, 0x14]",
            "mov r0, sl",
            "mov fp, r2",
            "ldr r1, [sp, 0x18]",
            "mov r2, 0x10",
            "str r3, [sp, 0x14]",
            "bl sym.imp.memcmp",
            "cmp r0, 0",
            "ldr ip, [sp, 0x14]",
            "beq 0x58dd4",
            "rsb r1, sl, r8",
            "mov r2, r1",
            "asr r3, r2, 0x1f",
            "cmp ip, r3",
            "bhi 0x58dfc",
            "bne 0x58dc0",
            "cmp fp, r1",
            "bhi 0x58dfc",
            "add sl, sl, fp",
            "rsb r3, sl, r8",
            "cmp r3, 0x17",
            "bhi 0x58d74",
            "b 0x58dfc",
            "add r2, sl, 0x64",
            "add r3, sl, 0x5c",
            "cmp r8, r2",
            "blo 0x58dfc",
            "ldr r1, [sl, 0x5c]",
            "ldr r2, [r3, 4]",
            "cmp r1, r2",
            "bne 0x58dfc",
            "str r0, [r3]",
            "b 0x58e10",
            "ldr r2, [0x00058f04]",
            "mov r0, sb",
            "mov r1, 0x10",
            "add r2, r4, r2",
            "bl sym.imp.av_log",
            "ldr r2, [0x00058f08]",
            "mov r3, 0",
            "add r0, sp, 0x20",
            "mov r1, r7",
            "str r3, [sp]",
            "add r2, r4, r2",
            "stmib sp, {r2, r3}",
            "mov r2, r6",
            "str r3, [sp, 0xc]",
            "bl fcn.00019224",
            "mov r2, r6",
            "asr r3, r2, 0x1f",
            "str r8, [sp, 0x2c]",
            "strd r2, r3, [sp, 0x40]",
            "movw r3, 0x125c",
            "ldr r3, [r5, r3]",
            "cmp r3, 0",
            "beq 0x58e64",
            "add r0, r5, 0x1240",
            "add r0, r0, 0x1c",
            "bl sym.avformat_close_input",
            "bl sym.avformat_alloc_context",
            "cmp r0, 0",
            "movw r6, 0x125c",
            "str r0, [r5, r6]",
            "mvneq r4, 0xb",
            "beq 0x58ee8",
            "ldr r3, [0x00058f0c]",
            "add r8, sp, 0x20",
            "ldr r1, [0x00058f10]",
            "str r8, [r0, 0x10]",
            "add r0, r5, 0x1240",
            "ldr r2, [r4, r3]",
            "add r0, r0, 0x1c",
            "add r1, r4, r1",
            "mov r3, 0",
            "bl sym.avformat_open_input",
            "subs r4, r0, 0",
            "blt 0x58ee8",
            "ldr r3, [r5, r6]",
            "add r0, sb, 0x4b0",
            "mov r2, 0",
            "add r0, r0, 8",
            "ldr r1, [r3, 0x4b8]",
            "bl sym.imp.av_dict_copy",
            "mov r0, r8",
            "bl fcn.00058814",
            "movw r3, 0x1260",
            "strd r0, r1, [r5, r3]",
            "mov r0, r7",
            "bl sym.imp.av_free",
            "ldr r3, [r5, r6]",
            "mov r2, 0",
            "str r2, [r3, 0x10]",
            "mov r0, r4",
            "add sp, sp, 0x84",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.imp.av_base64_decode": {
        "function_address": "0x00009804",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0xc30]!"
        ]
    },
    "fcn.00050adc": {
        "function_address": "0x00050adc",
        "instructions": [
            "push {r0, r1, r2, r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r1",
            "ldr r6, [0x00050c10]",
            "add r3, sp, 8",
            "mov sl, r0",
            "mov r0, r2",
            "ldr r1, [0x00050c14]",
            "add r6, pc, r6",
            "str r2, [r3, -4]!",
            "mov r2, r3",
            "add r1, r6, r1",
            "bl sym.imp.av_strstart",
            "cmp r0, 0",
            "beq 0x50c0c",
            "ldr r3, [sl, 0x18]",
            "mov r8, 0",
            "ldr fp, [0x00050c18]",
            "mov sb, r8",
            "ldr r5, [r3, r4, lsl 2]",
            "ldr r4, [sp, 4]",
            "add fp, r6, fp",
            "ldrb r3, [r4]",
            "cmp r3, 0x22",
            "addeq r4, r4, 1",
            "mov r0, r4",
            "mov r1, 0x3b",
            "bl sym.imp.strchr",
            "subs r6, r0, 0",
            "beq 0x50c0c",
            "subs r3, r6, r4",
            "movne r3, 1",
            "cmp r8, 0",
            "movne r3, 0",
            "cmp r3, 0",
            "beq 0x50c00",
            "cmp sb, 0",
            "beq 0x50ba8",
            "mov r0, sl",
            "mov r1, 0",
            "bl sym.avformat_new_stream",
            "subs r7, r0, 0",
            "beq 0x50c0c",
            "ldr r3, [r5, 4]",
            "ldr r2, [r5, 8]",
            "str r3, [r7, 4]",
            "ldr r2, [r2, 0xd0]",
            "ldr r3, [r7, 8]",
            "str r2, [r3, 0xd0]",
            "ldrd r2, r3, [r5, 0x18]",
            "strd r2, r3, [r7, 0x18]",
            "b 0x50bb4",
            "cmp r5, 0",
            "beq 0x50c0c",
            "mov r7, r5",
            "ldr r2, [r7, 8]",
            "mov r0, r4",
            "mov r1, fp",
            "add r2, r2, 4",
            "bl sym.imp.sscanf",
            "cmp r0, 1",
            "beq 0x50bfc",
            "mov r0, r4",
            "mov r1, 0x2c",
            "bl sym.imp.strchr",
            "subs r4, r0, 0",
            "moveq r4, r6",
            "beq 0x50bf0",
            "cmp r4, r6",
            "movhs r4, r6",
            "add r4, r4, 1",
            "cmp r4, r6",
            "blo 0x50bb4",
            "add sb, sb, 1",
            "add r4, r6, 1",
            "eor r8, r8, 1",
            "b 0x50b3c",
            "pop {r1, r2, r3, r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0005826c": {
        "function_address": "0x0005826c",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r4, r0",
            "ldr r5, [0x000582b0]",
            "bl fcn.00057e00",
            "ldr r0, [r4, 8]",
            "add r5, pc, r5",
            "bl fcn.00057064",
            "ldr r1, [0x000582b4]",
            "add r1, r5, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x582a4",
            "ldr r0, [r4, 0x34]",
            "bl fcn.000412b0",
            "mov r0, r4",
            "pop {r4, r5, r6, lr}",
            "b sym.imp.av_free"
        ]
    },
    "fcn.0005e1b0": {
        "function_address": "0x0005e1b0",
        "instructions": [
            "push {r0, r1, r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r5, 0",
            "mov sl, r0",
            "ldr r7, [r0, 0xc]",
            "mov r8, r5",
            "add sb, sp, 4",
            "b 0x5e270",
            "ldr r3, [r7, 0xc]",
            "ldr r6, [r3, r5, lsl 2]",
            "cmp r6, 0",
            "beq 0x5e26c",
            "ldr r4, [r6, 4]",
            "cmp r4, 0",
            "beq 0x5e254",
            "ldr r3, [sl, 8]",
            "cmp r3, 0",
            "beq 0x5e234",
            "mov r0, r4",
            "bl sym.av_write_trailer",
            "ldr r3, [r7, 0x234]",
            "cmp r3, 1",
            "bne 0x5e220",
            "ldr r0, [r4, 0x10]",
            "mov r1, sb",
            "bl sym.avio_close_dyn_buf",
            "ldr r0, [sp, 4]",
            "bl sym.imp.av_free",
            "b 0x5e228",
            "ldr r0, [r4, 0x10]",
            "bl sym.avio_close",
            "mov r0, r4",
            "bl sym.avformat_free_context",
            "b 0x5e254",
            "ldr r3, [r7, 0x230]",
            "cmp r3, 1",
            "bne 0x5e24c",
            "mov r0, r4",
            "bl fcn.000505e4",
            "b 0x5e254",
            "mov r0, r4",
            "bl fcn.0005826c",
            "ldr r0, [r6]",
            "str r8, [r6, 4]",
            "cmp r0, 0",
            "beq 0x5e268",
            "bl sym.ffurl_close",
            "str r8, [r6]",
            "add r5, r5, 1",
            "ldr r3, [r7, 8]",
            "cmp r5, r3",
            "blt 0x5e1cc",
            "pop {r2, r3, r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "fcn.000505e4": {
        "function_address": "0x000505e4",
        "instructions": [
            "b sym.imp.av_free"
        ]
    },
    "fcn.0005e280": {
        "function_address": "0x0005e280",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r5, 0",
            "ldr r4, [r0, 0xc]",
            "bl fcn.0005e1b0",
            "b 0x5e2d0",
            "ldr r3, [r4, 0xc]",
            "ldr r6, [r3, r5, lsl 2]",
            "cmp r6, 0",
            "beq 0x5e2cc",
            "ldr r3, [r6, 0x4a0]",
            "cmp r3, 0",
            "beq 0x5e2c4",
            "ldr r0, [r6, 0x4a4]",
            "cmp r0, 0",
            "beq 0x5e2c4",
            "ldr r3, [r3, 0x4c]",
            "blx r3",
            "mov r0, r6",
            "bl sym.imp.av_free",
            "add r5, r5, 1",
            "ldr r3, [r4, 8]",
            "cmp r5, r3",
            "blt 0x5e294",
            "ldr r0, [r4, 0xc]",
            "bl sym.imp.av_free",
            "movw r3, 0x125c",
            "ldr r3, [r4, r3]",
            "cmp r3, 0",
            "beq 0x5e300",
            "add r0, r4, 0x1240",
            "add r0, r0, 0x1c",
            "bl sym.avformat_close_input",
            "movw r3, 0x1688",
            "ldr r0, [r4, r3]",
            "bl sym.imp.av_free",
            "movw r3, 0x1674",
            "ldr r0, [r4, r3]",
            "pop {r4, r5, r6, lr}",
            "b sym.imp.av_free"
        ]
    },
    "fcn.0005d5ec": {
        "function_address": "0x0005d5ec",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r6, r1",
            "sub sp, sp, 0x4200",
            "ldr r1, [r0, 0xc]",
            "sub sp, sp, 0xe4",
            "mov r5, r0",
            "add r0, sp, 0x4100",
            "ldr r4, [0x0005e148]",
            "str r1, [sp, 0x1c]",
            "add r0, r0, 0x40",
            "mov r1, 0",
            "mov r2, 0x88",
            "bl sym.imp.memset",
            "ldr r3, [0x0005e14c]",
            "add r4, pc, r4",
            "add r3, r4, r3",
            "str r3, [sp, 0x2c]",
            "ldr r3, [0x0005e150]",
            "add r3, r4, r3",
            "str r3, [sp, 0x30]",
            "ldr r3, [0x0005e154]",
            "add r3, r4, r3",
            "str r3, [sp, 0x34]",
            "ldr r3, [0x0005e158]",
            "add r3, r4, r3",
            "str r3, [sp, 0x38]",
            "ldr r3, [0x0005e15c]",
            "add r3, r4, r3",
            "str r3, [sp, 0x3c]",
            "mov r0, r6",
            "ldr r1, [sp, 0x2c]",
            "bl sym.imp.strspn",
            "ldrb r3, [r6, r0]",
            "add r2, r6, r0",
            "cmp r3, 0",
            "beq 0x5e100",
            "add ip, r2, 1",
            "str ip, [sp, 0x20]",
            "ldrb r1, [r2, 1]",
            "cmp r1, 0x3d",
            "bne 0x5de70",
            "add r0, r2, 2",
            "add r2, sp, 0x40",
            "mov lr, r2",
            "movw ip, 0x3ffe",
            "b 0x5d6b0",
            "rsb r6, lr, r2",
            "cmp r6, ip",
            "strbls r1, [r2], 1",
            "str r0, [sp, 0x20]",
            "ldrb r1, [r0], 1",
            "cmp r1, 0xd",
            "cmpne r1, 0xa",
            "beq 0x5d6cc",
            "cmp r1, 0",
            "bne 0x5d6a4",
            "mov r1, 0",
            "strb r1, [r2]",
            "add r1, sp, 0x4000",
            "ldr r7, [r1, 0x1c4]",
            "add r2, sp, 0x40",
            "ldr r6, [r5, 0xc]",
            "str r2, [r1, 0x2dc]",
            "cmp r3, 0x6d",
            "cmpne r7, 0",
            "moveq r7, 0",
            "movne r7, 1",
            "bne 0x5de70",
            "cmp r3, 0x69",
            "beq 0x5d8a0",
            "bhi 0x5d71c",
            "cmp r3, 0x61",
            "beq 0x5dad8",
            "cmp r3, 0x63",
            "bne 0x5de70",
            "b 0x5d730",
            "cmp r3, 0x6d",
            "beq 0x5d8c0",
            "cmp r3, 0x73",
            "bne 0x5de70",
            "b 0x5d888",
            "add r7, sp, 0x4200",
            "add r8, sp, 0x4200",
            "add r7, r7, 0x88",
            "add r8, r8, 0xdc",
            "mov r0, r7",
            "mov r1, 0x40",
            "mov r2, r8",
            "bl fcn.0005cbcc",
            "ldr r1, [0x0005e160]",
            "mov r0, r7",
            "add r1, r4, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x5de70",
            "mov r0, r7",
            "mov r1, 0x40",
            "mov r2, r8",
            "bl fcn.0005cbcc",
            "ldr r1, [0x0005e164]",
            "mov r0, r7",
            "add r1, r4, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x5d7a8",
            "ldr r1, [0x0005e168]",
            "mov r0, r7",
            "add r1, r4, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x5de70",
            "ldr r8, [0x0005e16c]",
            "add r7, sp, 0x4200",
            "add sl, sp, 0x4200",
            "add r7, r7, 0x88",
            "add sl, sl, 0xdc",
            "mov r0, r7",
            "add r8, r4, r8",
            "mov r1, 0x40",
            "mov r2, r8",
            "mov r3, sl",
            "bl fcn.0005cbec",
            "add r1, sp, 0x4100",
            "mov r0, r7",
            "add r1, r1, 0xc8",
            "bl fcn.0005cca0",
            "cmp r0, 0",
            "bne 0x5de70",
            "add r2, sp, 0x4000",
            "ldr r3, [r2, 0x2dc]",
            "ldrb r2, [r3]",
            "cmp r2, 0x2f",
            "movne r7, 0x10",
            "bne 0x5d830",
            "add ip, sp, 0x4000",
            "add r3, r3, 1",
            "str r3, [ip, 0x2dc]",
            "mov r0, r7",
            "mov r1, 0x40",
            "mov r2, r8",
            "mov r3, sl",
            "bl fcn.0005cbec",
            "mov r0, r7",
            "bl sym.imp.atoi",
            "mov r7, r0",
            "ldr r3, [r5, 0x14]",
            "add r1, sp, 0x4100",
            "add r1, r1, 0xc8",
            "cmp r3, 0",
            "bne 0x5d860",
            "add r0, sp, 0x4100",
            "mov r2, 0x80",
            "add r0, r0, 0x40",
            "bl sym.imp.memcpy",
            "add r1, sp, 0x4000",
            "str r7, [r1, 0x1c0]",
            "b 0x5de70",
            "ldr r2, [r6, 8]",
            "ldr r3, [r6, 0xc]",
            "sub r2, r2, 1",
            "ldr r6, [r3, r2, lsl 2]",
            "mov r2, 0x80",
            "add r0, r6, 0x410",
            "add r0, r0, 8",
            "bl sym.imp.memcpy",
            "str r7, [r6, 0x498]",
            "b 0x5de70",
            "ldr r1, [0x0005e170]",
            "add r0, r5, 0x4b0",
            "add r0, r0, 8",
            "mov r3, r7",
            "add r1, r4, r1",
            "b 0x5d8b8",
            "ldr r3, [r5, 0x14]",
            "cmp r3, 0",
            "bne 0x5de70",
            "ldr r1, [sp, 0x30]",
            "add r0, r5, 0x4b0",
            "add r0, r0, 8",
            "bl sym.imp.av_dict_set",
            "b 0x5de70",
            "add r2, sp, 0x4000",
            "mov r1, 0x40",
            "str r7, [r2, 0x1c4]",
            "add r7, sp, 0x4200",
            "add r7, r7, 0x48",
            "add r2, sp, 0x4200",
            "mov r0, r7",
            "add r2, r2, 0xdc",
            "bl fcn.0005cbcc",
            "mov r0, r7",
            "ldr r1, [sp, 0x34]",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "moveq sb, 1",
            "beq 0x5d92c",
            "mov r0, r7",
            "ldr r1, [sp, 0x3c]",
            "bl sym.imp.strcmp",
            "subs sb, r0, 0",
            "beq 0x5d92c",
            "ldr r1, [0x0005e174]",
            "mov r0, r7",
            "add r1, r4, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "moveq sb, 2",
            "bne 0x5d940",
            "movw r3, 0x16a0",
            "ldr r3, [r6, r3]",
            "asr r3, r3, sb",
            "tst r3, 1",
            "bne 0x5d950",
            "mov r3, 1",
            "add ip, sp, 0x4000",
            "str r3, [ip, 0x1c4]",
            "b 0x5de70",
            "movw r0, 0x4a8",
            "bl sym.imp.av_mallocz",
            "subs r7, r0, 0",
            "beq 0x5de70",
            "mvn r3, 0",
            "add r0, r6, 0xc",
            "str r3, [r7, 8]",
            "add r1, r6, 8",
            "mov r2, r7",
            "add r8, sp, 0x4200",
            "bl sym.imp.av_dynarray_add",
            "add r0, r7, 0x410",
            "add r1, sp, 0x4100",
            "add r1, r1, 0x40",
            "mov r2, 0x80",
            "add r0, r0, 8",
            "add sl, sp, 0x4200",
            "bl sym.imp.memcpy",
            "add r1, sp, 0x4000",
            "add r8, r8, 0x88",
            "ldr r3, [r1, 0x1c0]",
            "add sl, sl, 0xdc",
            "mov r1, 0x40",
            "mov r2, sl",
            "mov r0, r8",
            "str r3, [r7, 0x498]",
            "bl fcn.0005cbcc",
            "mov r0, r8",
            "bl sym.imp.atoi",
            "mov r1, 0x40",
            "str r0, [r7, 0x414]",
            "mov r2, sl",
            "mov r0, r8",
            "bl fcn.0005cbcc",
            "mov r1, 0x40",
            "mov r2, sl",
            "mov r0, r8",
            "bl fcn.0005cbcc",
            "mov r0, r8",
            "bl sym.imp.atoi",
            "str r0, [r7, 0x49c]",
            "bl fcn.00057064",
            "ldr r1, [sp, 0x38]",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x5dac8",
            "mov r0, r5",
            "mov r1, 0",
            "bl sym.avformat_new_stream",
            "subs r8, r0, 0",
            "beq 0x5de70",
            "ldr r3, [r6, 8]",
            "ldr r1, [r7, 0x49c]",
            "ldr r0, [r8, 8]",
            "sub r3, r3, 1",
            "str r3, [r8, 4]",
            "cmp r1, 0x5f",
            "ldr r3, [r8]",
            "str r3, [r7, 8]",
            "str sb, [r0, 0xd0]",
            "bgt 0x5dac8",
            "bl fcn.00056ee8",
            "ldr r3, [r8, 8]",
            "ldr r2, [r3, 0xd0]",
            "cmp r2, 1",
            "bne 0x5da70",
            "ldr r3, [r3, 0x3c]",
            "cmp r3, 0",
            "ble 0x5da70",
            "mov r0, r8",
            "mov r1, 0x20",
            "bl sym.avpriv_set_pts_info",
            "ldr r3, [r8, 8]",
            "ldr r0, [r7, 0x49c]",
            "ldr r1, [r3, 0xd0]",
            "bl fcn.000578dc",
            "subs sl, r0, 0",
            "ldr r3, [r8, 8]",
            "beq 0x5dac8",
            "ldr r2, [sl, 0x38]",
            "str r2, [r3, 0xd4]",
            "ldr r3, [sl, 0x48]",
            "str sl, [r7, 0x4a0]",
            "cmp r3, 0",
            "beq 0x5e138",
            "blx r3",
            "cmp r0, 0",
            "str r0, [r7, 0x4a4]",
            "streq r0, [r7, 0x4a0]",
            "b 0x5e138",
            "mov r0, r5",
            "ldr r1, [r8]",
            "ldr r2, [r7, 0x4a4]",
            "blx r3",
            "add r1, r6, 0x1240",
            "add r0, r7, 0x14",
            "add r1, r1, 0x28",
            "b 0x5dbe0",
            "ldr r1, [0x0005e178]",
            "add r8, sp, 0x4200",
            "add r8, r8, 0xdc",
            "mov r0, r2",
            "mov r2, r8",
            "add r1, r4, r1",
            "bl sym.imp.av_strstart",
            "cmp r0, 0",
            "beq 0x5dbec",
            "ldr r3, [r5, 0x14]",
            "add r2, sp, 0x4000",
            "ldr r8, [r2, 0x2dc]",
            "cmp r3, 0",
            "bne 0x5db3c",
            "ldr r1, [0x0005e17c]",
            "mov r0, r8",
            "mov r2, 7",
            "add r1, r4, r1",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "addeq r0, r6, 0x1240",
            "moveq r1, r8",
            "addeq r0, r0, 0x28",
            "bne 0x5de70",
            "b 0x5dbe0",
            "ldr r2, [r6, 8]",
            "add r0, sp, 0x4000",
            "ldr r3, [r6, 0xc]",
            "add r0, r0, 0x40",
            "mov r1, 0x20",
            "sub r2, r2, 1",
            "ldr r6, [r3, r2, lsl 2]",
            "mov r3, r7",
            "mov r2, r7",
            "str r7, [sp]",
            "str r7, [sp, 4]",
            "str r7, [sp, 8]",
            "str r7, [sp, 0xc]",
            "str r7, [sp, 0x10]",
            "add r7, r6, 0x14",
            "str r8, [sp, 0x14]",
            "bl sym.av_url_split",
            "add ip, sp, 0x4000",
            "ldrb r3, [ip, 0x40]",
            "cmp r3, 0",
            "bne 0x5dbd4",
            "mov r0, r7",
            "bl sym.imp.strlen",
            "add r0, r6, r0",
            "ldrb r3, [r0, 0x13]",
            "cmp r3, 0x2f",
            "beq 0x5dbbc",
            "ldr r1, [0x0005e16c]",
            "mov r0, r7",
            "mov r2, 0x400",
            "add r1, r4, r1",
            "bl sym.imp.av_strlcat",
            "add r2, sp, 0x4000",
            "mov r0, r7",
            "ldr r1, [r2, 0x2dc]",
            "mov r2, 0x400",
            "bl sym.imp.av_strlcat",
            "b 0x5de70",
            "add r3, sp, 0x4000",
            "mov r0, r7",
            "ldr r1, [r3, 0x2dc]",
            "mov r2, 0x400",
            "bl sym.imp.av_strlcpy",
            "b 0x5de70",
            "ldr r1, [0x0005e180]",
            "add ip, sp, 0x4000",
            "ldr r0, [ip, 0x2dc]",
            "mov r2, r8",
            "add r1, r4, r1",
            "bl sym.imp.av_strstart",
            "cmp r0, 0",
            "beq 0x5de78",
            "ldr r3, [r5, 0x14]",
            "cmp r3, 0",
            "beq 0x5de78",
            "add r7, sp, 0x4200",
            "mov r2, r8",
            "add r7, r7, 0x88",
            "mov r1, 0x40",
            "mov r0, r7",
            "add r8, sp, 0x4000",
            "bl fcn.0005cbcc",
            "mov r0, r7",
            "add r8, r8, 0x40",
            "bl sym.imp.atoi",
            "ldr r2, [r5, 0x14]",
            "add r1, sp, 0x4000",
            "ldr r3, [r5, 0x18]",
            "mov sl, r0",
            "mov r0, r8",
            "sub r2, r2, 1",
            "ldr r3, [r3, r2, lsl 2]",
            "ldr r2, [r6, 8]",
            "str r3, [sp, 0x18]",
            "ldr r3, [r6, 0xc]",
            "sub r2, r2, 1",
            "ldr r7, [r3, r2, lsl 2]",
            "ldr r2, [sp, 0x18]",
            "ldr r3, [r1, 0x2dc]",
            "ldr r6, [r2, 8]",
            "ldr r2, [0x0005e184]",
            "str r3, [r1, 0x2d8]",
            "add r3, sp, 0x4200",
            "mov r1, 0x100",
            "add r3, r3, 0xd8",
            "add r2, r4, r2",
            "bl fcn.0005cbec",
            "cmp sl, 0x5f",
            "movle r0, r8",
            "ble 0x5dcf4",
            "mov r0, r8",
            "ldr r1, [r6, 0xd0]",
            "bl fcn.00057880",
            "cmp r0, 0",
            "beq 0x5dce0",
            "ldr r3, [r0, 0x38]",
            "str r3, [r6, 0xd4]",
            "ldr r3, [r0, 0x48]",
            "str r0, [r7, 0x4a0]",
            "cmp r3, 0",
            "beq 0x5dce0",
            "blx r3",
            "cmp r0, 0",
            "str r0, [r7, 0x4a4]",
            "streq r0, [r7, 0x4a0]",
            "ldr r3, [r7, 0x4a0]",
            "cmp r3, 0",
            "addeq r0, sp, 0x4000",
            "addeq r0, r0, 0x40",
            "bne 0x5dd00",
            "ldr r1, [r6, 0xd0]",
            "bl fcn.000570c8",
            "str r0, [r6, 0xd4]",
            "ldr r0, [r6, 0xd4]",
            "bl sym.imp.avcodec_find_decoder",
            "cmp r0, 0",
            "beq 0x5dd1c",
            "ldr r8, [r0]",
            "cmp r8, 0",
            "bne 0x5dd24",
            "ldr r8, [0x0005e188]",
            "add r8, r4, r8",
            "ldr r3, [0x0005e16c]",
            "add fp, sp, 0x4000",
            "add fp, fp, 0x40",
            "mov r1, 0x100",
            "mov r0, fp",
            "add r3, r4, r3",
            "str r3, [sp, 0x24]",
            "add r3, sp, 0x4200",
            "add r3, r3, 0xd8",
            "ldr r2, [sp, 0x24]",
            "str r3, [sp, 0x28]",
            "bl fcn.0005cbec",
            "mov r0, fp",
            "bl sym.imp.atoi",
            "ldr sb, [r6, 0xd0]",
            "mov sl, r0",
            "cmp sb, 0",
            "beq 0x5de10",
            "cmp sb, 1",
            "bne 0x5de44",
            "ldr r2, [0x0005e18c]",
            "mov r3, r8",
            "mov r0, r5",
            "mov r1, 0x30",
            "add r2, r4, r2",
            "bl sym.imp.av_log",
            "cmp sl, 0",
            "movw r3, 0xac44",
            "str r3, [r6, 0x3c]",
            "str sb, [r6, 0x40]",
            "ble 0x5dddc",
            "ldr r0, [sp, 0x18]",
            "mov r1, 0x20",
            "mov r2, sb",
            "mov r3, sl",
            "str sl, [r6, 0x3c]",
            "bl sym.avpriv_set_pts_info",
            "mov r0, fp",
            "mov r1, 0x100",
            "ldr r2, [sp, 0x24]",
            "ldr r3, [sp, 0x28]",
            "bl fcn.0005cbec",
            "mov r0, fp",
            "bl sym.imp.atoi",
            "cmp r0, 0",
            "strgt r0, [r6, 0x40]",
            "ldr r2, [0x0005e190]",
            "mov r0, r5",
            "ldr r3, [r6, 0x3c]",
            "mov r1, 0x30",
            "add r2, r4, r2",
            "bl sym.imp.av_log",
            "ldr r2, [0x0005e194]",
            "mov r0, r5",
            "mov r1, 0x30",
            "ldr r3, [r6, 0x40]",
            "add r2, r4, r2",
            "bl sym.imp.av_log",
            "b 0x5de44",
            "ldr r2, [0x0005e198]",
            "mov r0, r5",
            "mov r1, 0x30",
            "mov r3, r8",
            "add r2, r4, r2",
            "bl sym.imp.av_log",
            "cmp sl, 0",
            "ble 0x5de44",
            "ldr r0, [sp, 0x18]",
            "mov r1, 0x20",
            "mov r2, 1",
            "mov r3, sl",
            "bl sym.avpriv_set_pts_info",
            "ldr r3, [r7, 0x4a0]",
            "cmp r3, 0",
            "beq 0x5de70",
            "ldr r3, [r3, 0x40]",
            "cmp r3, 0",
            "beq 0x5de70",
            "ldr ip, [sp, 0x18]",
            "mov r0, r5",
            "ldr r2, [r7, 0x4a4]",
            "ldr r1, [ip]",
            "blx r3",
            "ldr r3, [sp, 0x20]",
            "b 0x5e0dc",
            "add r1, sp, 0x4000",
            "add r7, sp, 0x4200",
            "ldr r0, [r1, 0x2dc]",
            "add r7, r7, 0xdc",
            "ldr r1, [0x0005e19c]",
            "mov r2, r7",
            "add r1, r4, r1",
            "bl sym.imp.av_strstart",
            "cmp r0, 0",
            "bne 0x5dec0",
            "ldr r1, [0x0005e1a0]",
            "add r2, sp, 0x4000",
            "ldr r0, [r2, 0x2dc]",
            "mov r2, r7",
            "add r1, r4, r1",
            "bl sym.imp.av_strstart",
            "cmp r0, 0",
            "beq 0x5df48",
            "add r7, sp, 0x4200",
            "add r2, sp, 0x4200",
            "add r7, r7, 0x88",
            "mov r1, 0x40",
            "mov r0, r7",
            "add r2, r2, 0xdc",
            "bl fcn.0005cbcc",
            "mov r0, r7",
            "add r8, sp, 0x40",
            "bl sym.imp.atoi",
            "mov r7, 0",
            "mov sl, r0",
            "b 0x5df38",
            "ldr r3, [r6, 0xc]",
            "ldr r3, [r3, r7, lsl 2]",
            "ldr r2, [r3, 0x49c]",
            "cmp r2, sl",
            "bne 0x5df34",
            "ldr r2, [r3, 0x4a0]",
            "cmp r2, 0",
            "beq 0x5df34",
            "ldr ip, [r2, 0x44]",
            "cmp ip, 0",
            "beq 0x5df34",
            "ldr r2, [r3, 0x4a4]",
            "mov r0, r5",
            "mov r1, r7",
            "mov r3, r8",
            "blx ip",
            "add r7, r7, 1",
            "ldr r3, [r6, 8]",
            "cmp r7, r3",
            "blt 0x5def4",
            "b 0x5de70",
            "ldr r1, [0x0005e1a4]",
            "add r3, sp, 0x4000",
            "ldr r0, [r3, 0x2dc]",
            "mov r2, r7",
            "add r1, r4, r1",
            "bl sym.imp.av_strstart",
            "cmp r0, 0",
            "beq 0x5dfc8",
            "add ip, sp, 0x4000",
            "add r1, sp, 0x4200",
            "add r2, sp, 0x4200",
            "ldr r0, [ip, 0x2dc]",
            "add r1, r1, 0xd0",
            "add r2, r2, 0xc8",
            "bl fcn.0005d1ec",
            "add r2, sp, 0x4200",
            "mov r3, 0x430",
            "add r2, r2, 0xd0",
            "ldrd r0, r1, [r2]",
            "strd r0, r1, [r5, r3]",
            "ldrd r2, r3, [r2, -8]",
            "cmp r2, 0",
            "bne 0x5dfb4",
            "cmp r3, 0x80000000",
            "moveq r2, 0",
            "moveq r3, 0x80000000",
            "beq 0x5dfbc",
            "subs r2, r2, r0",
            "sbc r3, r3, r1",
            "movw r1, 0x438",
            "strd r2, r3, [r5, r1]",
            "b 0x5de70",
            "ldr r1, [0x0005e1a8]",
            "add r3, sp, 0x4000",
            "ldr r0, [r3, 0x2dc]",
            "mov r2, r7",
            "add r1, r4, r1",
            "bl sym.imp.av_strstart",
            "cmp r0, 0",
            "beq 0x5e000",
            "add ip, sp, 0x4000",
            "ldr r0, [ip, 0x2dc]",
            "bl sym.imp.atoi",
            "cmp r0, 1",
            "streq r0, [r6, 0x230]",
            "b 0x5de70",
            "add r1, sp, 0x4000",
            "mov r2, r7",
            "ldr r0, [r1, 0x2dc]",
            "ldr r1, [0x0005e1ac]",
            "add r1, r4, r1",
            "bl sym.imp.av_strstart",
            "cmp r0, 0",
            "beq 0x5e050",
            "ldr r7, [r5, 0x14]",
            "cmp r7, 0",
            "beq 0x5e050",
            "add r2, sp, 0x4000",
            "sub r7, r7, 1",
            "ldr r0, [r2, 0x2dc]",
            "bl sym.imp.atoi",
            "ldr r3, [r5, 0x18]",
            "ldr r3, [r3, r7, lsl 2]",
            "ldr r3, [r3, 8]",
            "str r0, [r3, 0x3c]",
            "b 0x5de70",
            "ldr r3, [r6, 0x238]",
            "cmp r3, 2",
            "bne 0x5e06c",
            "add r3, sp, 0x4000",
            "mov r0, r5",
            "ldr r1, [r3, 0x2dc]",
            "bl fcn.00058cd4",
            "ldr r1, [r5, 0x14]",
            "cmp r1, 0",
            "beq 0x5de70",
            "ldr r3, [r6, 0x238]",
            "cmp r3, 1",
            "bne 0x5e098",
            "add ip, sp, 0x4000",
            "mov r0, r5",
            "sub r1, r1, 1",
            "ldr r2, [ip, 0x2dc]",
            "bl fcn.00050adc",
            "ldr r2, [r6, 8]",
            "ldr r3, [r6, 0xc]",
            "sub r2, r2, 1",
            "ldr r3, [r3, r2, lsl 2]",
            "ldr r2, [r3, 0x4a0]",
            "cmp r2, 0",
            "beq 0x5de70",
            "ldr ip, [r2, 0x44]",
            "cmp ip, 0",
            "beq 0x5de70",
            "ldr r1, [r5, 0x14]",
            "mov r0, r5",
            "ldr r2, [r3, 0x4a4]",
            "add r3, sp, 0x40",
            "sub r1, r1, 1",
            "blx ip",
            "b 0x5de70",
            "ldrb r2, [r3]",
            "mov r6, r3",
            "add r3, r3, 1",
            "cmp r2, 0",
            "cmpne r2, 0xa",
            "bne 0x5e0dc",
            "cmp r2, 0xa",
            "moveq r6, r3",
            "b 0x5d660",
            "ldr r1, [sp, 0x1c]",
            "ldr r0, [r1, 8]",
            "add r0, r0, 1",
            "lsl r0, r0, 4",
            "bl sym.imp.av_malloc",
            "ldr r2, [sp, 0x1c]",
            "movw r3, 0x1688",
            "cmp r0, 0",
            "str r0, [r2, r3]",
            "mvneq r0, 0xb",
            "movne r0, 0",
            "add sp, sp, 0x2e4",
            "add sp, sp, 0x4000",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldr r3, [sl, 0x40]",
            "cmp r3, 0",
            "bne 0x5dab8",
            "b 0x5dac8"
        ]
    },
    "fcn.0005cbcc": {
        "function_address": "0x0005cbcc",
        "instructions": [
            "ldr ip, [0x0005cbe4]",
            "mov r3, r2",
            "ldr r2, [0x0005cbe8]",
            "add ip, pc, ip",
            "add r2, ip, r2",
            "b 0x5cb40"
        ]
    },
    "fcn.00056ee8": {
        "function_address": "0x00056ee8",
        "instructions": [
            "ldr r3, [0x00056f8c]",
            "mov r2, 0",
            "ldr ip, [0x00056f90]",
            "push {r4, lr}",
            "add r3, pc, r3",
            "add ip, r3, ip",
            "b 0x56f70",
            "cmp r4, r1",
            "bne 0x56f68",
            "ldr r4, [ip, 0x10]",
            "cmp r4, 0",
            "beq 0x56f68",
            "ldr r1, [0x00056f90]",
            "mov ip, 0x1c",
            "str r4, [r0, 0xd4]",
            "add r1, r3, r1",
            "mla r1, ip, r2, r1",
            "ldr ip, [r1, 0xc]",
            "ldr r1, [r1, 0x18]",
            "str ip, [r0, 0xd0]",
            "cmp r1, 0",
            "strgt r1, [r0, 0x40]",
            "ldr r1, [0x00056f90]",
            "add r3, r3, r1",
            "mov r1, 0x1c",
            "mla r2, r1, r2, r3",
            "ldr r3, [r2, 0x14]",
            "cmp r3, 0",
            "strgt r3, [r0, 0x3c]",
            "movgt r0, 0",
            "popgt {r4, pc}",
            "b 0x56f84",
            "add r2, r2, 1",
            "add ip, ip, 0x1c",
            "ldr r4, [ip]",
            "cmp r4, 0",
            "bge 0x56f04",
            "mvn r0, 0",
            "pop {r4, pc}",
            "mov r0, 0",
            "pop {r4, pc}"
        ]
    },
    "fcn.000578dc": {
        "function_address": "0x000578dc",
        "instructions": [
            "ldr r3, [0x00057924]",
            "mov r2, r0",
            "ldr r0, [0x00057928]",
            "add r3, pc, r3",
            "ldr r0, [r3, r0]",
            "b 0x57918",
            "ldr r3, [r0, 0x3c]",
            "cmp r3, 0",
            "beq 0x57914",
            "cmp r3, r2",
            "bne 0x57914",
            "ldr r3, [r0, 0x34]",
            "cmp r1, r3",
            "bxeq lr",
            "ldr r0, [r0, 0x54]",
            "cmp r0, 0",
            "bne 0x578f4",
            "bx lr"
        ]
    },
    "fcn.0005c82c": {
        "function_address": "0x0005c82c",
        "instructions": [
            "ldr r3, [r1, 8]",
            "push {r0, r1, r2, r4, r5, lr}",
            "mov r4, r1",
            "ldr r5, [r0, 0xc]",
            "cmp r3, 0",
            "blt 0x5c854",
            "ldr r2, [r0, 0x18]",
            "ldr r1, [r2, r3, lsl 2]",
            "cmp r1, 0",
            "bne 0x5c864",
            "ldr r3, [r0, 0x428]",
            "mov r1, 0",
            "orr r3, r3, 1",
            "str r3, [r0, 0x428]",
            "ldr r3, [r5, 0x230]",
            "cmp r3, 1",
            "bne 0x5c884",
            "ldr r1, [r1]",
            "ldr r2, [r4, 0x4a4]",
            "ldr r3, [r4, 0x4a0]",
            "bl fcn.00050554",
            "b 0x5c8b4",
            "ldr ip, [r5, 0x234]",
            "ldr r2, [r4]",
            "ldr r3, [r4, 0x49c]",
            "cmp ip, 1",
            "moveq ip, 0",
            "beq 0x5c8ac",
            "ldr ip, [r0, 0x464]",
            "cmp ip, 0",
            "movne ip, 0xa",
            "moveq ip, 0",
            "str ip, [sp]",
            "bl fcn.00057ca4",
            "str r0, [r4, 4]",
            "ldr r0, [r4, 4]",
            "cmp r0, 0",
            "mvneq r0, 0xb",
            "beq 0x5c8f0",
            "ldr r3, [r5, 0x230]",
            "cmp r3, 1",
            "beq 0x5c8ec",
            "ldr r2, [r4, 0x4a0]",
            "cmp r2, 0",
            "moveq r0, r2",
            "beq 0x5c8f0",
            "ldr r1, [r4, 0x4a4]",
            "bl fcn.00057df0",
            "mov r0, 0",
            "pop {r1, r2, r3, r4, r5, pc}"
        ]
    },
    "fcn.00057df0": {
        "function_address": "0x00057df0",
        "instructions": [
            "ldr r3, [r2, 0x50]",
            "str r1, [r0, 0x794]",
            "str r3, [r0, 0x790]",
            "bx lr"
        ]
    },
    "fcn.0005e330": {
        "function_address": "0x0005e330",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x460",
            "sub sp, sp, 4",
            "ldr r6, [0x0005e4dc]",
            "mov r5, r0",
            "ldr r7, [r0, 0xc]",
            "bl fcn.00045ba8",
            "cmp r0, 0",
            "add r6, pc, r6",
            "mvneq r4, 4",
            "beq 0x5e4cc",
            "mov r0, 0x4000",
            "bl sym.imp.av_malloc",
            "mov r8, r0",
            "movw r2, 0x3fff",
            "ldr r0, [r5, 0x10]",
            "mov r1, r8",
            "bl sym.avio_read",
            "cmp r0, 0",
            "bgt 0x5e390",
            "mov r0, r8",
            "ldr r4, [0x0005e4e0]",
            "bl sym.imp.av_free",
            "b 0x5e4cc",
            "mov r3, 0",
            "mov r1, r8",
            "strb r3, [r8, r0]",
            "mov r0, r5",
            "bl fcn.0005d5ec",
            "mov r4, r0",
            "mov r0, r8",
            "bl sym.imp.av_free",
            "cmp r4, 0",
            "bne 0x5e4c0",
            "ldr r3, [0x0005e4e4]",
            "add r2, sp, 0x420",
            "add r2, r2, 0xc",
            "mov r8, r4",
            "str r2, [sp, 0x1c]",
            "mov sl, r4",
            "add r3, r6, r3",
            "add fp, sp, 0x2c",
            "str r3, [sp, 0x20]",
            "movw sb, 0x169c",
            "ldr r3, [0x0005e4e8]",
            "add r3, r6, r3",
            "mov r6, r4",
            "str r3, [sp, 0x24]",
            "b 0x5e4a0",
            "ldr r3, [r7, 0xc]",
            "mov r1, 0x80",
            "ldr r2, [sp, 0x1c]",
            "ldr r4, [r3, r8, lsl 2]",
            "mov r3, 1",
            "str r3, [sp, 8]",
            "add r3, r3, 0x31",
            "str sl, [sp]",
            "add r0, r4, 0x410",
            "str sl, [sp, 4]",
            "add r0, r0, 8",
            "bl sym.imp.getnameinfo",
            "ldr r2, [sp, 0x1c]",
            "mov r1, 0x400",
            "ldr r3, [r4, 0x414]",
            "mov r0, fp",
            "str r2, [sp]",
            "ldr r2, [sp, 0x24]",
            "str r3, [sp, 4]",
            "str r3, [sp, 0xc]",
            "str r2, [sp, 8]",
            "ldr r3, [r4, 0x498]",
            "ldr r2, [sp, 0x20]",
            "str r3, [sp, 0x10]",
            "ldr r3, [r7, sb]",
            "and r3, r3, 1",
            "str r3, [sp, 0x14]",
            "mov r3, sl",
            "bl fcn.000745ec",
            "mov r0, r4",
            "mov r1, fp",
            "mov r2, 3",
            "add r3, r5, 0x4d0",
            "str sl, [sp]",
            "bl sym.ffurl_open",
            "cmp r0, 0",
            "blt 0x5e4b4",
            "mov r0, r5",
            "mov r1, r4",
            "bl fcn.0005c82c",
            "cmp r0, 0",
            "bne 0x5e4bc",
            "add r8, r8, 1",
            "ldr r3, [r7, 8]",
            "cmp r8, r3",
            "blt 0x5e3f4",
            "mov r4, r6",
            "b 0x5e4cc",
            "ldr r4, [0x0005e4e0]",
            "b 0x5e4c0",
            "mov r4, r0",
            "mov r0, r5",
            "bl fcn.0005e280",
            "bl fcn.00045c4c",
            "mov r0, r4",
            "add sp, sp, 0x64",
            "add sp, sp, 0x400",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.imp.getnameinfo": {
        "function_address": "0x00009954",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0xb50]!"
        ]
    },
    "sym.imp.strtoul": {
        "function_address": "0x00009978",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0xb38]!"
        ]
    },
    "fcn.0005ecf0": {
        "function_address": "0x0005ecf0",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "sub sp, sp, 0x400",
            "ldr r6, [r0, 0xc]",
            "sub sp, sp, 4",
            "mov r1, sp",
            "mov r2, 3",
            "mov r5, sp",
            "ldr r0, [r6, 4]",
            "bl fcn.00018f4c",
            "cmp r0, 3",
            "bne 0x5ed5c",
            "ldrh r4, [sp, 1]",
            "mov r5, sp",
            "rev16 r4, r4",
            "b 0x5ed54",
            "cmp r4, 0x400",
            "movlo r7, r4",
            "movhs r7, 0x400",
            "ldr r0, [r6, 4]",
            "mov r1, sp",
            "mov r2, r7",
            "bl fcn.00018f4c",
            "cmp r0, r7",
            "bne 0x5ed5c",
            "rsb r4, r0, r4",
            "cmp r4, 0",
            "bgt 0x5ed2c",
            "add sp, sp, 4",
            "add sp, sp, 0x400",
            "pop {r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.0005ed68": {
        "function_address": "0x0005ed68",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x1400",
            "ldr r6, [0x0005f01c]",
            "sub sp, sp, 0x24",
            "mov sb, r0",
            "mov r5, r1",
            "ldr r4, [r0, 0xc]",
            "mov fp, r2",
            "mov r0, r1",
            "movw r2, 0x1a90",
            "mov r1, 0",
            "str r3, [sp, 8]",
            "bl sym.imp.memset",
            "ldr r3, [0x0005f020]",
            "add r6, pc, r6",
            "add r7, sp, 0x1000",
            "add r1, sp, 0x1400",
            "add r7, r7, 0x18",
            "mov sl, r6",
            "mov r8, 0",
            "add r1, r1, 0x1f",
            "add r3, r6, r3",
            "strb r8, [r4, 0x64c]",
            "str r1, [sp, 0x10]",
            "str r3, [sp, 0x14]",
            "add r6, sp, 0x18",
            "str r6, [sp, 0xc]",
            "ldr r0, [r4, 4]",
            "mov r2, 1",
            "ldr r1, [sp, 0x10]",
            "bl fcn.00018f4c",
            "cmp r0, 1",
            "bne 0x5f00c",
            "add r2, sp, 0x1400",
            "ldrb r3, [r2, 0x1f]",
            "cmp r3, 0xa",
            "beq 0x5ee3c",
            "cmp r3, 0x24",
            "bne 0x5ee1c",
            "ldr r3, [sp, 8]",
            "cmp r3, 0",
            "bne 0x5f010",
            "mov r0, sb",
            "bl fcn.0005ecf0",
            "b 0x5edd4",
            "cmp r3, 0xd",
            "beq 0x5edd4",
            "ldr ip, [sp, 0xc]",
            "movw r1, 0xffe",
            "rsb r2, ip, r6",
            "cmp r2, r1",
            "strbls r3, [r6], 1",
            "b 0x5edd4",
            "mov r3, 0",
            "strb r3, [r6]",
            "ldrb r3, [sp, 0x18]",
            "cmp r3, 0",
            "beq 0x5eefc",
            "cmp r8, 0",
            "add r1, sp, 0x18",
            "add r2, sp, 0x1000",
            "str r1, [r2, 0x418]",
            "bne 0x5eeb4",
            "add r6, sp, 0x1400",
            "mov r0, r7",
            "add r6, r6, 0x18",
            "mov r1, 0x400",
            "mov r2, r6",
            "bl fcn.0005cbcc",
            "mov r2, r6",
            "mov r0, r7",
            "mov r1, 0x400",
            "bl fcn.0005cbcc",
            "mov r0, r7",
            "bl sym.imp.atoi",
            "add r3, sp, 0x1000",
            "str r0, [r5, 4]",
            "add r0, r5, 0x1980",
            "ldr r1, [r3, 0x418]",
            "mov r2, 0x100",
            "add r0, r0, 0xc",
            "bl sym.imp.av_strlcpy",
            "b 0x5eef4",
            "add ip, sp, 0x1000",
            "mov r0, r5",
            "mov r2, r4",
            "ldr r3, [ip, 0x448]",
            "add r6, r4, 0x640",
            "bl sym.ff_rtsp_parse_line",
            "add r6, r6, 0xc",
            "add r2, sp, 0x1000",
            "ldr r1, [r2, 0x418]",
            "mov r0, r6",
            "mov r2, 0x800",
            "bl sym.imp.av_strlcat",
            "mov r0, r6",
            "ldr r1, [sp, 0x14]",
            "mov r2, 0x800",
            "bl sym.imp.av_strlcat",
            "add r8, r8, 1",
            "b 0x5edcc",
            "ldrb r3, [r4, 0x24]",
            "mov r6, sl",
            "cmp r3, 0",
            "bne 0x5ef2c",
            "ldrb r3, [r5, 0x704]",
            "cmp r3, 0",
            "beq 0x5ef2c",
            "add r1, r5, 0x700",
            "add r0, r4, 0x24",
            "add r1, r1, 4",
            "mov r2, 0x200",
            "bl sym.imp.av_strlcpy",
            "ldr r8, [r5]",
            "cmp r8, 0",
            "movle r7, 0",
            "ble 0x5ef60",
            "add r0, r8, 1",
            "bl sym.imp.av_malloc",
            "mov r7, r0",
            "mov r2, r8",
            "ldr r0, [r4, 4]",
            "mov r1, r7",
            "bl fcn.00018f4c",
            "mov r3, 0",
            "strb r3, [r7, r8]",
            "cmp fp, 0",
            "strne r7, [fp]",
            "bne 0x5ef74",
            "mov r0, r7",
            "bl sym.imp.av_free",
            "ldr r3, [r4, 0x20]",
            "ldr r2, [r5, 0x700]",
            "cmp r3, r2",
            "beq 0x5ef9c",
            "str r2, [sp]",
            "mov r0, sb",
            "ldr r2, [0x0005f024]",
            "mov r1, 0x18",
            "add r2, r6, r2",
            "bl sym.imp.av_log",
            "movw r3, 0x1988",
            "movw r2, 0x835",
            "ldr r3, [r5, r3]",
            "movw r1, 0x838",
            "cmp r3, r2",
            "cmpne r3, r1",
            "beq 0x5efc4",
            "add r2, r2, 0xcd",
            "cmp r3, r2",
            "bne 0x5efd0",
            "mov r0, 0",
            "str r0, [r4, 0x10]",
            "b 0x5f010",
            "sub r2, r3, 0x1100",
            "movw r1, 0x44b",
            "sub r2, r2, 0x30",
            "cmp r2, r1",
            "mvnls r0, 4",
            "bls 0x5f010",
            "sub r2, r3, 0x1540",
            "movw r0, 0x961",
            "sub r2, r2, 0x3c",
            "cmp r3, r0",
            "cmpne r2, 0x63",
            "movhi r0, 0",
            "movls r0, 1",
            "mvnls r0, 0",
            "b 0x5f010",
            "ldr r0, [0x0005f028]",
            "add sp, sp, 0x24",
            "add sp, sp, 0x1400",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00050958": {
        "function_address": "0x00050958",
        "instructions": [
            "ldr ip, [r0, 0x10]",
            "push {r4, r5, r6, r7, lr}",
            "subs r5, r2, 0",
            "ldrne r5, [r5]",
            "sub sp, sp, 0x2c",
            "cmp ip, 0",
            "mov r4, r0",
            "mov r7, r1",
            "mov r6, r3",
            "beq 0x50a8c",
            "cmp r5, 0",
            "bne 0x509b0",
            "ldr r3, [r0, 0x1c]",
            "cmn r3, 1",
            "beq 0x509b0",
            "add r1, sp, 0x28",
            "ldr r2, [r0, 4]",
            "str r5, [r1, -0x14]!",
            "stm sp, {r1, r5}",
            "str r5, [sp, 8]",
            "str r5, [sp, 0xc]",
            "b 0x50a74",
            "cmp r6, 0xb",
            "ble 0x50a8c",
            "add r3, sp, 0x20",
            "mov r0, r5",
            "str r3, [sp]",
            "add r3, sp, 0x18",
            "str r3, [sp, 4]",
            "add r3, sp, 0x14",
            "str r3, [sp, 8]",
            "mov r1, r6",
            "add r2, sp, 0x1c",
            "add r3, sp, 0x24",
            "bl fcn.00050740",
            "cmp r0, 0",
            "blt 0x50a90",
            "ldr r1, [sp, 0x18]",
            "cmp r1, 0",
            "beq 0x50a3c",
            "ldr r3, [sp, 0x1c]",
            "ldr r2, [r4, 0x18]",
            "cmp r3, r2",
            "bne 0x50a2c",
            "ldr r2, [r4, 0x14]",
            "ldr r1, [sp, 0x14]",
            "cmp r1, r2",
            "bne 0x50a2c",
            "ldr r1, [sp, 0x20]",
            "ldr r2, [r4, 0x1c]",
            "cmp r1, r2",
            "moveq r1, 0",
            "beq 0x50a3c",
            "str r3, [r4, 0x18]",
            "mov r1, 1",
            "ldr r3, [sp, 0x14]",
            "str r3, [r4, 0x14]",
            "ldr r3, [sp, 0x20]",
            "ldr r2, [r4, 8]",
            "str r3, [r4, 0x1c]",
            "cmp r3, r2",
            "mvnge r0, 0",
            "strge r0, [r4, 0x1c]",
            "bge 0x50a90",
            "ldr r2, [r4, 4]",
            "rsb r6, r0, r6",
            "ldr ip, [r4, 0x10]",
            "add r5, r5, r0",
            "add r0, sp, 0x14",
            "stm sp, {r0, r5, r6}",
            "str r1, [sp, 0xc]",
            "ldr r2, [r2, r3, lsl 2]",
            "mov r3, r7",
            "ldr r0, [r4]",
            "ldr r1, [r4, 0xc]",
            "blx ip",
            "b 0x50a90",
            "mvn r0, 0",
            "add sp, sp, 0x2c",
            "pop {r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.00057e60": {
        "function_address": "0x00057e60",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "cmp r2, 0",
            "ldr r6, [0x0005825c]",
            "sub sp, sp, 0x34",
            "mov r4, r0",
            "mov r5, r1",
            "mov r7, r3",
            "str r2, [sp, 0x1c]",
            "add r6, pc, r6",
            "beq 0x57e94",
            "ldr r8, [r2]",
            "cmp r8, 0",
            "bne 0x57f50",
            "ldr r3, [r4, 0x16c]",
            "cmp r3, 0",
            "ble 0x581b4",
            "ldr r2, [r4, 4]",
            "cmp r2, 0",
            "beq 0x57f00",
            "ldr ip, [r4, 0x790]",
            "cmp ip, 0",
            "beq 0x57f00",
            "add r3, sp, 0x30",
            "mvn r1, 0",
            "str r1, [r3, -4]!",
            "str r3, [sp]",
            "mov r3, 0",
            "str r3, [sp, 4]",
            "str r3, [sp, 8]",
            "str r3, [sp, 0xc]",
            "mov r3, r5",
            "ldr r1, [r4, 0x794]",
            "ldr r0, [r4]",
            "blx ip",
            "mov r1, r5",
            "mov r6, r0",
            "ldr r2, [sp, 0x2c]",
            "mov r0, r4",
            "bl fcn.0005714c",
            "b 0x581d0",
            "ldr r3, [r4, 0x38]",
            "ldr ip, [r4, 0x3c]",
            "cmp r3, ip",
            "bge 0x581c4",
            "add r2, r3, 0x1b0",
            "ldr r0, [r4, 0x34]",
            "mov r1, r5",
            "add r2, r4, r2",
            "rsb r3, r3, ip",
            "bl fcn.00041240",
            "subs r6, r0, 0",
            "blt 0x581c4",
            "ldr r3, [r4, 0x38]",
            "add r6, r6, r3",
            "ldr r3, [r4, 0x3c]",
            "str r6, [r4, 0x38]",
            "cmp r6, r3",
            "movge r6, 0",
            "movlt r6, 1",
            "b 0x581d0",
            "cmp r3, 0xb",
            "ble 0x581cc",
            "ldrb r3, [r8]",
            "and r3, r3, 0xc0",
            "cmp r3, 0x80",
            "bne 0x581cc",
            "ldrb r3, [r8, 1]",
            "add r3, r3, 0x38",
            "uxtb r3, r3",
            "cmp r3, 4",
            "bhi 0x580a8",
            "mov fp, 0x188",
            "mov sb, 0",
            "mov sl, r0",
            "mov ip, r1",
            "str r6, [sp, 0x1c]",
            "ldrh r6, [r8, 2]",
            "ldrb r1, [r8, 1]",
            "rev16 r6, r6",
            "add r6, r6, 1",
            "lsl r6, r6, 2",
            "cmp r6, r7",
            "movhs r6, r7",
            "cmp r1, 0xc8",
            "beq 0x57fcc",
            "cmp r1, 0xcb",
            "bne 0x5808c",
            "mov r4, sl",
            "mov r5, ip",
            "mvn r6, 0xca",
            "b 0x581d0",
            "cmp r6, 0x13",
            "bgt 0x57ffc",
            "ldr r6, [sp, 0x1c]",
            "mov r0, 0",
            "ldr r2, [0x00058260]",
            "mov r1, 0x10",
            "mov r5, ip",
            "mov r4, sl",
            "add r2, r6, r2",
            "ldr r6, [0x00058264]",
            "bl sym.imp.av_log",
            "b 0x581d0",
            "ldr r2, [r8, 8]",
            "ldr r3, [r8, 0xc]",
            "mov r0, r2",
            "str ip, [sp, 0x10]",
            "str r2, [sp, 0x18]",
            "str r3, [sp, 0x14]",
            "bl fcn.00057144",
            "ldr r3, [sp, 0x14]",
            "mov r4, r0",
            "mov r0, r3",
            "bl fcn.00057144",
            "mov r2, 0",
            "str r4, [sp, 0x24]",
            "str r2, [sp, 0x20]",
            "mov r3, 0x180",
            "ldrd r4, r5, [sp, 0x20]",
            "orr r4, r4, r0",
            "strd r4, r5, [sl, r3]",
            "ldr r0, [r8, 0x10]",
            "bl fcn.00057144",
            "ldr r1, [sl, 0x188]",
            "str r0, [sl, 0x190]",
            "ldr ip, [sp, 0x10]",
            "cmp r1, 0",
            "bne 0x5808c",
            "ldr r1, [sl, 0x18c]",
            "cmp r1, 0x80000000",
            "bne 0x5808c",
            "ldr r1, [sl, 0x18]",
            "strd r4, r5, [sl, fp]",
            "str sb, [sl, 0x19c]",
            "cmp r1, 0",
            "streq r0, [sl, 0x18]",
            "ldr r1, [sl, 0x18]",
            "rsb r0, r1, r0",
            "str r0, [sl, 0x198]",
            "rsb r7, r6, r7",
            "cmp r7, 3",
            "addgt r8, r8, r6",
            "bgt 0x57f90",
            "mov r4, sl",
            "mov r5, ip",
            "b 0x581cc",
            "ldrh r3, [r0, 0x10]",
            "cmp r3, 0",
            "bne 0x580c0",
            "ldr r2, [r0, 0x170]",
            "cmp r2, 0",
            "beq 0x5810c",
            "ldr r2, [r4, 0x178]",
            "cmp r2, 1",
            "ble 0x5810c",
            "ldrh fp, [r8, 2]",
            "rev16 fp, fp",
            "rsb r3, r3, fp",
            "sxth r3, r3",
            "cmp r3, 0",
            "bge 0x58104",
            "ldr r0, [r4, 4]",
            "mov r1, 0x18",
            "ldr r2, [0x00058268]",
            "cmp r0, 0",
            "ldrne r0, [r0, 8]",
            "add r2, r6, r2",
            "bl sym.imp.av_log",
            "b 0x581cc",
            "cmp r3, 1",
            "bgt 0x58128",
            "mov r0, r4",
            "mov r1, r5",
            "mov r2, r8",
            "mov r3, r7",
            "bl fcn.00057280",
            "mov r6, r0",
            "b 0x581d0",
            "uxth fp, fp",
            "ldr sl, [r4, 0x170]",
            "mov sb, 0",
            "b 0x58150",
            "ldrh r3, [sl]",
            "rsb r3, r3, fp",
            "tst r3, 0x8000",
            "bne 0x58158",
            "mov sb, sl",
            "ldr sl, [sl, 0x18]",
            "cmp sl, 0",
            "bne 0x58138",
            "mov r0, 0x20",
            "bl sym.imp.av_mallocz",
            "subs r6, r0, 0",
            "beq 0x58198",
            "bl sym.av_gettime",
            "ldr r3, [r4, 0x174]",
            "cmp sb, 0",
            "str sl, [r6, 0x18]",
            "strd r0, r1, [r6, 0x10]",
            "add r3, r3, 1",
            "strh fp, [r6]",
            "str r7, [r6, 8]",
            "str r8, [r6, 4]",
            "strne r6, [sb, 0x18]",
            "streq r6, [r4, 0x170]",
            "str r3, [r4, 0x174]",
            "ldr r2, [sp, 0x1c]",
            "mov r3, 0",
            "str r3, [r2]",
            "ldr r2, [r4, 0x174]",
            "ldr r3, [r4, 0x178]",
            "cmp r2, r3",
            "blt 0x581cc",
            "mov r0, r4",
            "mov r1, r5",
            "bl fcn.000575f0",
            "b 0x58120",
            "mvn r6, 0xa",
            "b 0x581d0",
            "mvn r6, 0",
            "mov r0, r6",
            "str r6, [r4, 0x16c]",
            "cmn r0, 0xb",
            "bne 0x58214",
            "ldr r3, [r4, 0x170]",
            "cmp r3, 0",
            "beq 0x5824c",
            "ldrh r1, [r4, 0x10]",
            "ldrh r2, [r3]",
            "add r1, r1, 1",
            "uxth r3, r1",
            "cmp r2, r3",
            "bne 0x5824c",
            "mov r0, r4",
            "mov r1, r5",
            "bl fcn.000575f0",
            "b 0x581d8",
            "cmp r0, 0",
            "mov r6, r0",
            "bne 0x58250",
            "ldr r3, [r4, 0x170]",
            "cmp r3, 0",
            "beq 0x58250",
            "ldrh r6, [r4, 0x10]",
            "ldrh r3, [r3]",
            "add r6, r6, 1",
            "uxth r6, r6",
            "cmp r3, r6",
            "movne r6, 0",
            "moveq r6, 1",
            "b 0x58250",
            "mov r6, r0",
            "mov r0, r6",
            "add sp, sp, 0x34",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00061400": {
        "function_address": "0x00061400",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x1a80",
            "ldr r6, [r0, 0xc]",
            "sub sp, sp, 0x34",
            "mov r7, r2",
            "mov r8, r0",
            "add r2, sp, 0x1a80",
            "mov fp, r3",
            "add sb, sp, 0x18",
            "mov r5, 0",
            "mov sl, r0",
            "add r2, r2, 0x2c",
            "str r1, [sp, 0x10]",
            "str r2, [sp, 0x14]",
            "mov r0, sl",
            "mov r1, sb",
            "mov r2, r5",
            "mov r3, 1",
            "str r5, [sp]",
            "bl fcn.0005ed68",
            "subs r4, r0, 0",
            "blt 0x61564",
            "cmp r4, 1",
            "beq 0x61470",
            "ldr r3, [r6, 0x10]",
            "cmp r3, 1",
            "beq 0x61438",
            "b 0x61558",
            "ldr r0, [r6, 4]",
            "mov r1, r7",
            "mov r2, 3",
            "bl fcn.00018f4c",
            "cmp r0, 3",
            "bne 0x61560",
            "ldrb r3, [r7]",
            "add r2, sp, 0x1000",
            "ldrh r8, [r7, 1]",
            "rev16 r8, r8",
            "str r3, [r2, 0xaac]",
            "cmp r8, fp",
            "movle r3, 0",
            "movgt r3, 1",
            "cmp r8, 7",
            "orrle r3, r3, 1",
            "cmp r3, 0",
            "bne 0x61438",
            "ldr r0, [r6, 4]",
            "mov r1, r7",
            "mov r2, r8",
            "bl fcn.00018f4c",
            "cmp r0, r8",
            "mov r4, r0",
            "bne 0x61560",
            "ldr r3, [r6, 0x230]",
            "cmp r3, 1",
            "bne 0x61508",
            "mov r0, r7",
            "mov r1, r4",
            "ldr r2, [sp, 0x14]",
            "mov r3, r5",
            "str r5, [sp]",
            "str r5, [sp, 4]",
            "str r5, [sp, 8]",
            "bl fcn.00050740",
            "cmp r0, 0",
            "blt 0x61560",
            "add r3, sp, 0x1000",
            "ldr r0, [r6, 8]",
            "ldr r1, [r3, 0xaac]",
            "mov r3, 0",
            "b 0x61540",
            "ldr r2, [r6, 0xc]",
            "ldr r2, [r2, r3, lsl 2]",
            "ldr ip, [r2, 0xc]",
            "cmp r1, ip",
            "blt 0x6153c",
            "ldr ip, [r2, 0x10]",
            "cmp r1, ip",
            "ble 0x6154c",
            "add r3, r3, 1",
            "cmp r3, r0",
            "blt 0x6151c",
            "b 0x61438",
            "ldr r3, [sp, 0x10]",
            "str r2, [r3]",
            "b 0x61564",
            "mov r4, r5",
            "b 0x61564",
            "mvn r4, 0",
            "mov r0, r4",
            "add sp, sp, 0x2b4",
            "add sp, sp, 0x1800",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0005f02c": {
        "function_address": "0x0005f02c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x1a80",
            "ldr r5, [r0, 0xc]",
            "sub sp, sp, 0x3c",
            "movw r3, 0x1688",
            "mov r7, 0",
            "str r2, [sp, 0x18]",
            "add r2, sp, 0x1000",
            "ldr r4, [r5, r3]",
            "add r3, sp, 0x1000",
            "ldr r2, [r2, 0xae0]",
            "add ip, sp, 0x28",
            "ldr r3, [r3, 0xae4]",
            "mov sb, r0",
            "str r1, [sp, 0x14]",
            "add r1, r0, 0x4d0",
            "str r1, [sp, 0x1c]",
            "mov r6, r7",
            "orr r2, r2, r3",
            "str ip, [sp, 0x24]",
            "str r2, [sp, 0x20]",
            "b 0x5f088",
            "mov r7, 0",
            "ldr r0, [sp, 0x1c]",
            "bl fcn.00018de8",
            "cmp r0, 0",
            "bne 0x5f280",
            "ldr r1, [sp, 0x20]",
            "cmp r1, 0",
            "beq 0x5f0c4",
            "bl sym.av_gettime",
            "add ip, sp, 0x1ac0",
            "add ip, ip, 0x20",
            "ldrd r2, r3, [ip]",
            "subs r2, r2, r0",
            "sbc r3, r3, r1",
            "cmp r3, 0",
            "blt 0x5f288",
            "ldr r0, [r5, 4]",
            "cmp r0, 0",
            "moveq r8, r0",
            "mvneq sl, 0",
            "beq 0x5f0f0",
            "bl fcn.00018d8c",
            "mov r8, 1",
            "mov sl, r0",
            "mov r1, 1",
            "str r0, [r4]",
            "strh r1, [r4, 4]",
            "mov r3, sb",
            "mov fp, 0",
            "mov sb, r7",
            "mov r7, r5",
            "b 0x5f168",
            "ldr r2, [r7, 0xc]",
            "ldr r5, [r2, fp, lsl 2]",
            "ldr r0, [r5]",
            "cmp r0, 0",
            "beq 0x5f164",
            "add r2, r4, r8, lsl 3",
            "str r3, [sp, 0xc]",
            "str r2, [sp, 0x10]",
            "bl fcn.00018d8c",
            "ldr r2, [sp, 0x10]",
            "mov ip, 1",
            "str r0, [r4, r8, lsl 3]",
            "add r8, r8, 1",
            "ldr r0, [r5]",
            "strh ip, [r2, 4]",
            "add r2, r4, r8, lsl 3",
            "str r2, [sp, 0x10]",
            "bl fcn.0005c738",
            "ldr r3, [sp, 0xc]",
            "mov r1, 1",
            "ldr r2, [sp, 0x10]",
            "str r0, [r4, r8, lsl 3]",
            "add r8, r8, 1",
            "strh r1, [r2, 4]",
            "add fp, fp, 1",
            "ldr r2, [r7, 8]",
            "cmp fp, r2",
            "blt 0x5f104",
            "mov r0, r4",
            "mov r1, r8",
            "mov r2, 0x64",
            "mov r5, r7",
            "mov r7, sb",
            "mov sb, r3",
            "bl sym.imp.poll",
            "cmp r0, 0",
            "ble 0x5f254",
            "adds r8, sl, 1",
            "movne r8, 1",
            "mov r7, 0",
            "b 0x5f200",
            "ldr r3, [r5, 0xc]",
            "ldr fp, [r3, r7, lsl 2]",
            "ldr r0, [fp]",
            "cmp r0, 0",
            "beq 0x5f1fc",
            "add r3, r4, r8, lsl 3",
            "ldrh r3, [r3, 6]",
            "tst r3, 1",
            "bne 0x5f1dc",
            "add r3, r4, r8, lsl 3",
            "ldrh r3, [r3, 0xe]",
            "tst r3, 1",
            "beq 0x5f1f8",
            "ldr r1, [sp, 0x18]",
            "movw r2, 0x3a98",
            "bl fcn.00018f80",
            "cmp r0, 0",
            "ldrgt r2, [sp, 0x14]",
            "strgt fp, [r2]",
            "bgt 0x5f29c",
            "add r8, r8, 2",
            "add r7, r7, 1",
            "ldr r3, [r5, 8]",
            "cmp r7, r3",
            "blt 0x5f1a8",
            "cmn sl, 1",
            "beq 0x5f084",
            "ldrh r7, [r4, 6]",
            "ands r7, r7, 1",
            "beq 0x5f088",
            "mov r0, sb",
            "ldr r1, [sp, 0x24]",
            "mov r2, r6",
            "mov r3, r6",
            "str r6, [sp]",
            "bl fcn.0005ed68",
            "cmp r0, 0",
            "blt 0x5f29c",
            "ldr r3, [r5, 0x10]",
            "cmp r3, 1",
            "bne 0x5f290",
            "mov r7, r6",
            "b 0x5f088",
            "bne 0x5f268",
            "add r7, r7, 1",
            "cmp r7, 0x63",
            "ble 0x5f088",
            "b 0x5f298",
            "bl sym.imp.__errno_location",
            "ldr r0, [r0]",
            "cmp r0, 4",
            "beq 0x5f088",
            "rsb r0, r0, 0",
            "b 0x5f29c",
            "ldr r0, [0x0005f2a8]",
            "b 0x5f29c",
            "mvn r0, 0xa",
            "b 0x5f29c",
            "mov r0, r6",
            "b 0x5f29c",
            "mvn r0, 0x6d",
            "add sp, sp, 0x2bc",
            "add sp, sp, 0x1800",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00018d8c": {
        "function_address": "0x00018d8c",
        "instructions": [
            "push {r3, lr}",
            "ldr r3, [r0, 4]",
            "ldr r3, [r3, 0x24]",
            "cmp r3, 0",
            "beq 0x18da8",
            "blx r3",
            "pop {r3, pc}",
            "mvn r0, 0",
            "pop {r3, pc}"
        ]
    },
    "fcn.0005c738": {
        "function_address": "0x0005c738",
        "instructions": [
            "ldr r3, [r0, 0x14]",
            "ldr r0, [r3, 0xc]",
            "bx lr"
        ]
    },
    "sym.imp.poll": {
        "function_address": "0x0000972c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0xcc0]!"
        ]
    },
    "fcn.0005792c": {
        "function_address": "0x0005792c",
        "instructions": [
            "push {r0, r1, r4, r5, r6, r7, r8, lr}",
            "mov r4, r0",
            "ldr r8, [r0, 0x40]",
            "ldr r6, [r0, 0x180]",
            "cmp r8, 0",
            "cmpne r1, 0",
            "movgt r8, 0",
            "movle r8, 1",
            "ble 0x57b90",
            "ldr r5, [r0, 0x1a4]",
            "add r5, r1, r5",
            "mov r1, 0x3e8",
            "str r5, [r0, 0x1a4]",
            "ldr r0, [r0, 0x1a8]",
            "rsb r0, r0, r5",
            "add r0, r0, r0, lsl 2",
            "bl fcn.0007d19c",
            "movw r3, 0x577",
            "cmp r0, r3",
            "ble 0x57b90",
            "str r5, [r4, 0x1a8]",
            "add r0, sp, 4",
            "bl sym.avio_open_dyn_buf",
            "cmp r0, 0",
            "blt 0x57b90",
            "ldr r0, [sp, 4]",
            "mov r1, 0x81",
            "bl sym.avio_w8",
            "ldr r0, [sp, 4]",
            "mov r1, 0xc9",
            "bl sym.avio_w8",
            "ldr r0, [sp, 4]",
            "mov r1, 7",
            "bl sym.avio_wb16",
            "ldr r1, [r4, 0xc]",
            "ldr r0, [sp, 4]",
            "add r1, r1, 1",
            "bl sym.avio_wb32",
            "ldr r0, [sp, 4]",
            "ldr r1, [r4, 0xc]",
            "bl sym.avio_wb32",
            "mov r3, 0x144",
            "ldr r2, [r4, 0x14c]",
            "ldrh r5, [r4, r3]",
            "mvn r1, 0xff000000",
            "ldr r3, [r4, 0x148]",
            "rsb r2, r2, 1",
            "add r5, r5, r3",
            "ldr r3, [r4, 0x158]",
            "add r2, r2, r5",
            "rsb r7, r3, r2",
            "cmp r7, r1",
            "movhs r7, r1",
            "ldr r1, [r4, 0x15c]",
            "str r2, [r4, 0x15c]",
            "rsb r1, r1, r2",
            "ldr r2, [r4, 0x160]",
            "str r3, [r4, 0x160]",
            "rsb r2, r2, r3",
            "cmp r1, 0",
            "cmpne r1, r2",
            "rsb r0, r2, r1",
            "beq 0x57a34",
            "lsl r0, r0, 8",
            "bl fcn.0007d19c",
            "mov r8, r0",
            "ldr r0, [sp, 4]",
            "orr r1, r7, r8, lsl 24",
            "bl sym.avio_wb32",
            "mov r1, r5",
            "ldr r0, [sp, 4]",
            "bl sym.avio_wb32",
            "ldr r1, [r4, 0x168]",
            "ldr r0, [sp, 4]",
            "lsr r1, r1, 4",
            "bl sym.avio_wb32",
            "ldr r5, [r4, 0x180]",
            "ldr r3, [r4, 0x184]",
            "cmp r5, 0",
            "bne 0x57a8c",
            "cmp r3, 0x80000000",
            "bne 0x57a8c",
            "ldr r0, [sp, 4]",
            "mov r1, r5",
            "bl sym.avio_wb32",
            "ldr r0, [sp, 4]",
            "mov r1, r5",
            "b 0x57aa4",
            "lsr r1, r5, 0x10",
            "ldr r0, [sp, 4]",
            "orr r1, r1, r3, lsl 16",
            "bl sym.avio_wb32",
            "ldr r0, [sp, 4]",
            "rsb r1, r5, r6",
            "bl sym.avio_wb32",
            "ldr r0, [sp, 4]",
            "mov r1, 0x81",
            "bl sym.avio_w8",
            "add r6, r4, 0x44",
            "mov r1, 0xca",
            "ldr r0, [sp, 4]",
            "bl sym.avio_w8",
            "mov r0, r6",
            "bl sym.imp.strlen",
            "adds r1, r0, 9",
            "mov r5, r0",
            "addmi r1, r0, 0xc",
            "ldr r0, [sp, 4]",
            "asr r1, r1, 2",
            "bl sym.avio_wb16",
            "ldr r1, [r4, 0xc]",
            "ldr r0, [sp, 4]",
            "add r1, r1, 1",
            "bl sym.avio_wb32",
            "ldr r0, [sp, 4]",
            "mov r1, 1",
            "bl sym.avio_w8",
            "mov r1, r5",
            "ldr r0, [sp, 4]",
            "bl sym.avio_w8",
            "mov r2, r5",
            "ldr r0, [sp, 4]",
            "mov r1, r6",
            "add r5, r5, 6",
            "bl sym.avio_write",
            "ands r5, r5, 0x80000003",
            "bpl 0x57b48",
            "sub r5, r5, 1",
            "mvn r5, r5, lsl 30",
            "mvn r5, r5, lsr 30",
            "b 0x57b44",
            "ldr r0, [sp, 4]",
            "mov r1, 0",
            "bl sym.avio_w8",
            "add r5, r5, 1",
            "ands r6, r5, 3",
            "bne 0x57b38",
            "ldr r0, [sp, 4]",
            "bl sym.avio_flush",
            "ldr r0, [sp, 4]",
            "mov r1, sp",
            "bl sym.avio_close_dyn_buf",
            "subs r2, r0, 0",
            "ble 0x57b94",
            "ldr r1, [sp]",
            "cmp r1, 0",
            "moveq r6, r1",
            "beq 0x57b94",
            "ldr r0, [r4, 0x40]",
            "bl sym.ffurl_write",
            "ldr r0, [sp]",
            "bl sym.imp.av_free",
            "b 0x57b94",
            "mvn r6, 0",
            "mov r0, r6",
            "pop {r2, r3, r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.0005c8f4": {
        "function_address": "0x0005c8f4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x2540",
            "ldr r4, [r0, 0xc]",
            "sub sp, sp, 0x2c",
            "mov r8, r2",
            "mov r6, r3",
            "add r2, sp, 0x2000",
            "ldr r5, [0x0005cb1c]",
            "ldr r3, [r4, 0x20]",
            "add r7, sp, 0x1540",
            "ldr fp, [r2, 0x594]",
            "mov sl, r1",
            "ldr r2, [0x0005cb20]",
            "add r5, pc, r5",
            "add r3, r3, 1",
            "add r7, r7, 0x28",
            "str r3, [r4, 0x20]",
            "mov sb, r0",
            "mov r1, 0x1000",
            "mov r0, r7",
            "add r2, r5, r2",
            "mov r3, sl",
            "str r8, [sp]",
            "bl sym.imp.snprintf",
            "cmp r6, 0",
            "beq 0x5c96c",
            "mov r0, r7",
            "mov r1, r6",
            "mov r2, 0x1000",
            "bl sym.imp.av_strlcat",
            "ldr r2, [0x0005cb24]",
            "add r0, sp, 0x1540",
            "ldr r3, [r4, 0x20]",
            "add r0, r0, 0x28",
            "mov r1, 0x1000",
            "add r2, r5, r2",
            "bl sym.imp.av_strlcatf",
            "ldrb r3, [r4, 0x24]",
            "cmp r3, 0",
            "beq 0x5c9d0",
            "cmp r6, 0",
            "beq 0x5c9b4",
            "ldr r1, [0x0005cb28]",
            "mov r0, r6",
            "add r1, r5, r1",
            "bl sym.imp.strstr",
            "cmp r0, 0",
            "bne 0x5c9d0",
            "ldr r2, [0x0005cb2c]",
            "add r0, sp, 0x1540",
            "add r0, r0, 0x28",
            "mov r1, 0x1000",
            "add r3, r4, 0x24",
            "add r2, r5, r2",
            "bl sym.imp.av_strlcatf",
            "ldrb r3, [r4, 0x27c]",
            "cmp r3, 0",
            "beq 0x5ca14",
            "add r0, r4, 0x2fc",
            "add r1, r4, 0x27c",
            "mov r2, r8",
            "mov r3, sl",
            "bl fcn.00028cd0",
            "subs r6, r0, 0",
            "beq 0x5ca0c",
            "add r0, sp, 0x1540",
            "mov r1, r6",
            "add r0, r0, 0x28",
            "mov r2, 0x1000",
            "bl sym.imp.av_strlcat",
            "mov r0, r6",
            "bl sym.imp.av_free",
            "add r3, sp, 0x2000",
            "ldr r3, [r3, 0x590]",
            "cmp r3, 0",
            "cmpne fp, 0",
            "movle r8, 0",
            "movgt r8, 1",
            "ble 0x5ca4c",
            "ldr r2, [0x0005cb30]",
            "add r0, sp, 0x1540",
            "add r0, r0, 0x28",
            "mov r1, 0x1000",
            "mov r3, fp",
            "add r2, r5, r2",
            "bl sym.imp.av_strlcatf",
            "ldr r1, [0x0005cb34]",
            "add r7, sp, 0x1540",
            "add r7, r7, 0x28",
            "mov r2, 0x1000",
            "mov r0, r7",
            "add r1, r5, r1",
            "bl sym.imp.av_strlcat",
            "movw r3, 0x166c",
            "ldr r3, [r4, r3]",
            "cmp r3, 1",
            "movne r6, r7",
            "bne 0x5ca9c",
            "mov r0, r7",
            "add r6, sp, 0xc",
            "bl sym.imp.strlen",
            "movw r1, 0x1559",
            "mov r3, r0",
            "mov r2, r7",
            "mov r0, r6",
            "bl sym.imp.av_base64_encode",
            "mov r0, r6",
            "movw sl, 0x1668",
            "bl sym.imp.strlen",
            "mov r1, r6",
            "mov r2, r0",
            "ldr r0, [r4, sl]",
            "bl sym.ffurl_write",
            "cmp r8, 0",
            "beq 0x5cb00",
            "movw r3, 0x166c",
            "ldr r3, [r4, r3]",
            "cmp r3, 1",
            "bne 0x5caec",
            "ldr r2, [0x0005cb38]",
            "mov r0, sb",
            "mov r1, 0x10",
            "add r2, r5, r2",
            "bl sym.imp.av_log",
            "ldr r0, [0x0005cb3c]",
            "b 0x5cb10",
            "add r2, sp, 0x2000",
            "ldr r0, [r4, sl]",
            "ldr r1, [r2, 0x590]",
            "mov r2, fp",
            "bl sym.ffurl_write",
            "bl sym.av_gettime",
            "mov r3, 0x228",
            "strd r0, r1, [r4, r3]",
            "mov r0, 0",
            "add sp, sp, 0x16c",
            "add sp, sp, 0x2400",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0005f6cc": {
        "function_address": "0x0005f6cc",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x14",
            "ldr sl, [sp, 0x38]",
            "mov r5, r0",
            "mov r7, r1",
            "mov fp, r2",
            "ldr r6, [r0, 0xc]",
            "ldr r4, [0x0005f7cc]",
            "str r3, [sp, 0xc]",
            "add r4, pc, r4",
            "ldr r2, [sp, 0x40]",
            "mov r0, r5",
            "ldr r3, [sp, 0x44]",
            "mov r1, r7",
            "ldr sb, [r6, 0x2fc]",
            "str r2, [sp]",
            "mov r2, fp",
            "str r3, [sp, 4]",
            "ldr r3, [sp, 0xc]",
            "bl fcn.0005c8f4",
            "subs r8, r0, 0",
            "bne 0x5f7c0",
            "mov r0, r5",
            "mov r1, sl",
            "ldr r2, [sp, 0x3c]",
            "mov r3, r8",
            "str r7, [sp]",
            "bl fcn.0005ed68",
            "cmp r0, 0",
            "blt 0x5f7bc",
            "ldr r3, [sl, 4]",
            "movw r2, 0x191",
            "cmp sb, 0",
            "cmpeq r3, r2",
            "beq 0x5f764",
            "cmp r3, 0x190",
            "bls 0x5f7c0",
            "b 0x5f774",
            "ldr r3, [r6, 0x2fc]",
            "cmp r3, 0",
            "bne 0x5f6f4",
            "movw r3, 0x191",
            "ldr r2, [0x0005f7d0]",
            "add sl, sl, 0x1980",
            "str r3, [sp]",
            "mov r0, r5",
            "mov r3, r7",
            "add sl, sl, 0xc",
            "add r2, r4, r2",
            "mov r1, 0x10",
            "str sl, [sp, 4]",
            "bl sym.imp.av_log",
            "ldr r2, [0x0005f7d4]",
            "add r3, r6, 0x640",
            "mov r0, r5",
            "mov r1, 0x30",
            "add r3, r3, 0xc",
            "add r2, r4, r2",
            "bl sym.imp.av_log",
            "b 0x5f7c0",
            "mov r8, r0",
            "mov r0, r8",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.000505e8": {
        "function_address": "0x000505e8",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r5, r0",
            "sub sp, sp, 0x78",
            "mov r0, r2",
            "mov r8, r1",
            "mov r6, r2",
            "bl sym.imp.strlen",
            "mov r1, 0",
            "mov r7, r0",
            "mov r2, 0x40",
            "mov r0, sp",
            "bl sym.imp.memset",
            "mvn r3, 0x5e",
            "ldr r4, [0x00050734]",
            "strb r3, [sp]",
            "add r3, r3, 0x48",
            "strb r3, [sp, 1]",
            "add r3, r3, 0x2b",
            "strb r3, [sp, 2]",
            "mvn r3, 0x62",
            "strb r3, [sp, 3]",
            "add r3, r3, 0x71",
            "ldr lr, [0x00050738]",
            "add r4, pc, r4",
            "strb r3, [sp, 4]",
            "add r3, r3, 0x5d",
            "strb r3, [sp, 5]",
            "mov r3, 0x3b",
            "strb r3, [sp, 6]",
            "add lr, r4, lr",
            "add r3, r3, 0x1e",
            "add ip, sp, 0x40",
            "strb r3, [sp, 7]",
            "cmp r7, 0x28",
            "ldm lr!, {r0, r1, r2, r3}",
            "stm ip!, {r0, r1, r2, r3}",
            "ldm lr!, {r0, r1, r2, r3}",
            "stm ip!, {r0, r1, r2, r3}",
            "moveq r2, 0x20",
            "ldm lr, {r0, r1}",
            "str r0, [ip], 4",
            "strb r1, [ip]",
            "beq 0x506a0",
            "cmp r7, 0x38",
            "movlt r2, r7",
            "movge r2, 0x38",
            "add sb, sp, 8",
            "mov r1, r6",
            "mov r0, sb",
            "add sl, sp, 0x2d",
            "bl sym.imp.memcpy",
            "add r3, sp, 0x3f",
            "ldrb r1, [sb]",
            "ldrb r2, [r3, 1]!",
            "eor r2, r1, r2",
            "strb r2, [sb], 1",
            "cmp sb, sl",
            "bne 0x506b8",
            "add r6, sp, 0x68",
            "mov r1, sp",
            "mov r0, r6",
            "mov r2, 0x40",
            "bl sym.imp.av_md5_sum",
            "mov r2, 0x10",
            "mov r3, 1",
            "mov r1, r6",
            "mov r0, r5",
            "bl fcn.000742a8",
            "ldr r1, [0x0005073c]",
            "add r0, r5, 0x20",
            "add r1, r4, r1",
            "bl sym.imp.strcpy",
            "mov r2, r8",
            "mov r3, 0",
            "ldrb r1, [r5, r3]",
            "add r3, r3, 4",
            "cmp r3, 0x20",
            "strb r1, [r2], 1",
            "bne 0x50710",
            "mov r3, 0",
            "strb r3, [r8, 8]",
            "add sp, sp, 0x78",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "sym.imp.av_md5_sum": {
        "function_address": "0x00009b70",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x9e8]!"
        ]
    },
    "fcn.0005f7d8": {
        "function_address": "0x0005f7d8",
        "instructions": [
            "push {r0, r1, r2, r3, r4, lr}",
            "ldr ip, [sp, 0x18]",
            "str ip, [sp]",
            "ldr ip, [sp, 0x1c]",
            "str ip, [sp, 4]",
            "mov ip, 0",
            "str ip, [sp, 8]",
            "str ip, [sp, 0xc]",
            "bl fcn.0005f6cc",
            "add sp, sp, 0x14",
            "ldm sp!, {pc}"
        ]
    },
    "fcn.0005c62c": {
        "function_address": "0x0005c62c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r3, 0x100",
            "sub sp, sp, 0x920",
            "ldr sb, [r0, 0x14]",
            "add r7, sp, 0x810",
            "mov r0, 0",
            "str r3, [sp, 4]",
            "add r3, sp, 0x910",
            "add r3, r3, 0xc",
            "add r7, r7, 0xc",
            "add r6, sp, 0x1c",
            "mov r8, 0x400",
            "str r3, [sp, 8]",
            "mov r2, r0",
            "str r1, [sp, 0x14]",
            "mov r3, r0",
            "mov r1, r0",
            "str r7, [sp]",
            "str r6, [sp, 0xc]",
            "add r5, sp, 0x410",
            "str r8, [sp, 0x10]",
            "add r5, r5, 0xc",
            "bl sym.av_url_split",
            "ldr r3, [sp, 0x91c]",
            "mov r1, r8",
            "ldr r4, [0x0005c714]",
            "mov r0, r5",
            "ldr sl, [0x0005c718]",
            "str r3, [sp, 4]",
            "ldr r3, [0x0005c71c]",
            "add r4, pc, r4",
            "add sl, r4, sl",
            "str r7, [sp]",
            "mov r2, sl",
            "str r6, [sp, 0xc]",
            "add r4, r4, r3",
            "mov r3, 0",
            "str r4, [sp, 8]",
            "bl fcn.000745ec",
            "mov r1, r5",
            "ldr r0, [sb]",
            "bl fcn.0006a254",
            "ldr r3, [sp, 0x91c]",
            "mov r1, r8",
            "mov r2, sl",
            "mov r0, r5",
            "str r7, [sp]",
            "add r3, r3, 1",
            "stmib sp, {r3, r4}",
            "mov r3, 0",
            "str r6, [sp, 0xc]",
            "bl fcn.000745ec",
            "ldr r0, [sb, 4]",
            "mov r1, r5",
            "bl fcn.0006a254",
            "mov r0, 0",
            "add sp, sp, 0x920",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "fcn.00057b9c": {
        "function_address": "0x00057b9c",
        "instructions": [
            "push {r0, r1, r4, lr}",
            "mov r4, r0",
            "add r0, sp, 4",
            "bl sym.avio_open_dyn_buf",
            "cmp r0, 0",
            "blt 0x57ca0",
            "ldr r0, [sp, 4]",
            "mov r1, 0x80",
            "bl sym.avio_w8",
            "ldr r0, [sp, 4]",
            "mov r1, 0",
            "bl sym.avio_w8",
            "ldr r0, [sp, 4]",
            "mov r1, 0",
            "bl sym.avio_wb16",
            "ldr r0, [sp, 4]",
            "mov r1, 0",
            "bl sym.avio_wb32",
            "mov r1, 0",
            "ldr r0, [sp, 4]",
            "bl sym.avio_wb32",
            "ldr r0, [sp, 4]",
            "bl sym.avio_flush",
            "ldr r0, [sp, 4]",
            "mov r1, sp",
            "bl sym.avio_close_dyn_buf",
            "subs r2, r0, 0",
            "ble 0x57c20",
            "ldr r1, [sp]",
            "cmp r1, 0",
            "beq 0x57c20",
            "mov r0, r4",
            "bl sym.ffurl_write",
            "ldr r0, [sp]",
            "bl sym.imp.av_free",
            "add r0, sp, 4",
            "bl sym.avio_open_dyn_buf",
            "cmp r0, 0",
            "blt 0x57ca0",
            "ldr r0, [sp, 4]",
            "mov r1, 0x80",
            "bl sym.avio_w8",
            "ldr r0, [sp, 4]",
            "mov r1, 0xc9",
            "bl sym.avio_w8",
            "ldr r0, [sp, 4]",
            "mov r1, 1",
            "bl sym.avio_wb16",
            "mov r1, 0",
            "ldr r0, [sp, 4]",
            "bl sym.avio_wb32",
            "ldr r0, [sp, 4]",
            "bl sym.avio_flush",
            "ldr r0, [sp, 4]",
            "mov r1, sp",
            "bl sym.avio_close_dyn_buf",
            "subs r2, r0, 0",
            "ble 0x57c98",
            "ldr r1, [sp]",
            "cmp r1, 0",
            "beq 0x57c98",
            "mov r0, r4",
            "bl sym.ffurl_write",
            "ldr r0, [sp]",
            "bl sym.imp.av_free",
            "pop {r2, r3, r4, pc}"
        ]
    },
    "fcn.000288b8": {
        "function_address": "0x000288b8",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r6, r0",
            "mov r5, r1",
            "ldr r0, [r0, 0x14]",
            "mov r4, 0x350",
            "ldr r1, [r1, 0x14]",
            "mov r2, r4",
            "add r0, r0, 0x1400",
            "add r0, r0, 0x38",
            "add r1, r1, 0x1400",
            "add r1, r1, 0x38",
            "bl sym.imp.memcpy",
            "ldr r0, [r6, 0x14]",
            "mov r2, r4",
            "ldr r1, [r5, 0x14]",
            "add r0, r0, 0x1780",
            "add r1, r1, 0x1780",
            "add r0, r0, 8",
            "add r1, r1, 8",
            "pop {r4, r5, r6, lr}",
            "b sym.imp.memcpy"
        ]
    },
    "fcn.000612fc": {
        "function_address": "0x000612fc",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "sub sp, sp, 0x410",
            "ldr r4, [0x000613e8]",
            "add r8, sp, 0xc",
            "mov r3, 0",
            "mov r5, r0",
            "ldr r2, [0x000613ec]",
            "mov r7, r1",
            "ldr r6, [r0, 0xc]",
            "add r4, pc, r4",
            "mov r0, r8",
            "mov r1, 0x400",
            "add r2, r4, r2",
            "str r3, [sp, 0x40c]",
            "bl sym.imp.snprintf",
            "ldr r3, [r6, 0x238]",
            "cmp r3, 1",
            "bne 0x61358",
            "ldr r1, [0x000613f0]",
            "mov r0, r8",
            "mov r2, 0x400",
            "add r1, r4, r1",
            "bl sym.imp.av_strlcat",
            "ldr r1, [0x000613f4]",
            "add r2, r6, 0x1240",
            "add r6, sp, 0x400",
            "add r3, sp, 0xc",
            "add r6, r6, 0xc",
            "mov r0, r5",
            "add r1, r4, r1",
            "add r2, r2, 0x28",
            "str r7, [sp]",
            "str r6, [sp, 4]",
            "bl fcn.0005f7d8",
            "ldr r3, [sp, 0x40c]",
            "cmp r3, 0",
            "beq 0x613dc",
            "ldr r2, [r7, 4]",
            "cmp r2, 0xc8",
            "beq 0x613a8",
            "mov r0, r6",
            "bl sym.imp.av_freep",
            "b 0x613dc",
            "ldr r2, [0x000613f8]",
            "mov r0, r5",
            "mov r1, 0x28",
            "add r2, r4, r2",
            "bl sym.imp.av_log",
            "ldr r1, [sp, 0x40c]",
            "mov r0, r5",
            "bl fcn.0005d5ec",
            "mov r4, r0",
            "mov r0, r6",
            "bl sym.imp.av_freep",
            "and r0, r4, r4, asr 31",
            "b 0x613e0",
            "ldr r0, [0x000613fc]",
            "add sp, sp, 0x410",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.0005f804": {
        "function_address": "0x0005f804",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x33c0",
            "ldr r4, [r0, 0xc]",
            "sub sp, sp, 0x1c",
            "mov r7, r0",
            "str r3, [sp, 0x18]",
            "ldr r3, [r4, 0x230]",
            "ldr r5, [0x00060068]",
            "str r1, [sp, 0x34]",
            "cmp r3, 1",
            "add r5, pc, r5",
            "ldreq r3, [0x0006006c]",
            "ldrne r3, [0x00060070]",
            "add r3, r5, r3",
            "mov sb, 0",
            "str r3, [sp, 0x28]",
            "mov r3, 0x3c",
            "str r3, [r4, 0x224]",
            "mov r8, sb",
            "bl sym.imp.av_get_random_seed",
            "movw r3, 0x16a4",
            "mov fp, sb",
            "ldr r6, [r4, r3]",
            "add r3, r3, 4",
            "ldr r1, [r4, r3]",
            "rsb r1, r6, r1",
            "add r1, r1, r1, lsr 31",
            "asr r1, r1, 1",
            "bl fcn.0007d244",
            "ldr r3, [0x00060074]",
            "bic r1, r1, 1",
            "ldr r2, [0x00060078]",
            "add r1, r1, r6",
            "str r1, [sp, 0x20]",
            "add r3, r5, r3",
            "str sb, [sp, 0x24]",
            "str r3, [sp, 0x38]",
            "ldr r3, [0x0006007c]",
            "str r2, [sp, 0x3c]",
            "add r3, r5, r3",
            "str r3, [sp, 0x40]",
            "ldr r3, [0x00060080]",
            "add r3, r5, r3",
            "str r3, [sp, 0x44]",
            "b 0x60008",
            "ldr r3, [sp, 0x18]",
            "cmp r3, 0",
            "bne 0x5f948",
            "ldr r3, [r4, 0x238]",
            "cmp r3, 2",
            "bne 0x5f948",
            "cmp r8, 0",
            "moveq fp, r8",
            "bne 0x5f930",
            "b 0x5f914",
            "ldr r3, [r4, 0xc]",
            "ldr sl, [r3, fp, lsl 2]",
            "add r0, sl, 0x14",
            "bl sym.imp.strlen",
            "cmp r0, 3",
            "ble 0x5f910",
            "add r0, sl, r0",
            "ldr r1, [sp, 0x44]",
            "add r0, r0, 0x10",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x5f91c",
            "add fp, fp, 1",
            "cmp fp, r6",
            "blt 0x5f8e0",
            "cmp fp, r6",
            "beq 0x60054",
            "ldr r3, [r4, 0xc]",
            "ldr r6, [r3, fp, lsl 2]",
            "b 0x5f95c",
            "ldr r2, [r4, 0xc]",
            "cmp r8, fp",
            "suble r3, sb, 4",
            "movgt r3, sb",
            "ldr r6, [r2, r3]",
            "b 0x5f95c",
            "ldr sl, [sp, 0x18]",
            "ldr r3, [r4, 0xc]",
            "cmp sl, 0",
            "ldr r6, [r3, sb]",
            "bne 0x5fb20",
            "ldr r2, [r4, 0x238]",
            "cmp r8, 1",
            "movle r3, 0",
            "movgt r3, 1",
            "cmp r2, 2",
            "movne r3, 0",
            "cmp r3, 0",
            "addne r3, sp, 0x48",
            "ldrne sl, [r3, 0x30]",
            "bne 0x5fa6c",
            "b 0x5f9f0",
            "ldr ip, [sp, 0x34]",
            "mvn r2, 0",
            "ldr r3, [sp, 0x40]",
            "mov r1, 0x100",
            "str r2, [sp, 4]",
            "mov r2, r5",
            "str ip, [sp]",
            "ldr ip, [sp, 0x20]",
            "str r3, [sp, 8]",
            "mov r3, 0",
            "ldr r0, [sp, 0x1c]",
            "str ip, [sp, 0xc]",
            "bl fcn.000745ec",
            "ldr r2, [sp, 0x20]",
            "mov r3, 0",
            "str r3, [sp]",
            "mov r0, r6",
            "ldr r1, [sp, 0x1c]",
            "add r2, r2, 2",
            "ldr r3, [sp, 0x2c]",
            "str r2, [sp, 0x20]",
            "mov r2, 3",
            "bl sym.ffurl_open",
            "cmp r0, 0",
            "bne 0x5fa20",
            "b 0x5fa54",
            "ldr ip, [0x00060084]",
            "add r2, r7, 0x4d0",
            "add r3, sp, 0x32c0",
            "str r8, [sp, 0x30]",
            "movw sl, 0x16a8",
            "mov r8, r7",
            "add ip, r5, ip",
            "mov r7, r5",
            "mov r5, ip",
            "add r3, r3, 0x18",
            "str r3, [sp, 0x1c]",
            "str r2, [sp, 0x2c]",
            "ldr r3, [r4, sl]",
            "ldr ip, [sp, 0x20]",
            "cmp ip, r3",
            "ble 0x5f988",
            "ldr r2, [0x00060088]",
            "mov r5, r7",
            "mov r0, r8",
            "mov r1, 0x10",
            "mov r7, r8",
            "mvn r6, 4",
            "add r2, r5, r2",
            "bl sym.imp.av_log",
            "b 0x60048",
            "ldr r0, [r6]",
            "mov r5, r7",
            "mov r7, r8",
            "ldr r8, [sp, 0x30]",
            "bl sym.ff_rtp_get_local_rtp_port",
            "mov sl, r0",
            "ldr r2, [0x0006008c]",
            "add ip, sp, 0x1ac0",
            "add ip, ip, 0x18",
            "ldr r3, [sp, 0x28]",
            "mov r0, ip",
            "movw r1, 0x7ff",
            "add r2, r5, r2",
            "str ip, [sp, 0x14]",
            "bl sym.imp.snprintf",
            "ldr r3, [r4, 0x238]",
            "ldr ip, [sp, 0x14]",
            "cmp r3, 1",
            "beq 0x5fab4",
            "ldr r1, [0x00060090]",
            "mov r0, ip",
            "mov r2, 0x800",
            "add r1, r5, r1",
            "bl sym.imp.av_strlcat",
            "ldr r2, [0x00060094]",
            "add ip, sp, 0x1ac0",
            "add ip, ip, 0x18",
            "mov r3, sl",
            "mov r0, ip",
            "mov r1, 0x800",
            "add r2, r5, r2",
            "str ip, [sp, 0x14]",
            "bl sym.imp.av_strlcatf",
            "ldr r3, [r4, 0x230]",
            "ldr ip, [sp, 0x14]",
            "cmp r3, 0",
            "bne 0x5fbf0",
            "ldr r3, [r4, 0x238]",
            "subs r3, r3, 2",
            "movne r3, 1",
            "cmp r8, 0",
            "orrle r3, r3, 1",
            "cmp r3, 0",
            "beq 0x5fbf0",
            "ldr r2, [0x00060098]",
            "mov r0, ip",
            "mov r1, 0x800",
            "add r3, sl, 1",
            "add r2, r5, r2",
            "bl sym.imp.av_strlcatf",
            "b 0x5fbf0",
            "ldr r2, [sp, 0x18]",
            "cmp r2, 1",
            "bne 0x5fbc8",
            "ldr r3, [r4, 0x238]",
            "cmp r3, 2",
            "bne 0x5fb54",
            "ldr r2, [r6, 8]",
            "ldr r3, [r7, 0x18]",
            "ldr r3, [r3, r2, lsl 2]",
            "ldr r3, [r3, 8]",
            "ldr r3, [r3, 0xd0]",
            "cmp r3, 2",
            "beq 0x60000",
            "ldr r2, [0x0006009c]",
            "add sl, sp, 0x1ac0",
            "add sl, sl, 0x18",
            "ldr r3, [sp, 0x28]",
            "mov r0, sl",
            "movw r1, 0x7ff",
            "add r2, r5, r2",
            "bl sym.imp.snprintf",
            "ldr r3, [r4, 0x230]",
            "cmp r3, 1",
            "beq 0x5fb94",
            "ldr r1, [0x00060090]",
            "mov r0, sl",
            "mov r2, 0x800",
            "add r1, r5, r1",
            "bl sym.imp.av_strlcat",
            "ldr sl, [sp, 0x24]",
            "add r0, sp, 0x1ac0",
            "ldr r2, [0x000600a0]",
            "add r0, r0, 0x18",
            "mov r1, 0x800",
            "add r3, sl, 1",
            "str r3, [sp]",
            "add r2, r5, r2",
            "mov r3, sl",
            "add sl, sl, 2",
            "bl sym.imp.av_strlcatf",
            "str sl, [sp, 0x24]",
            "b 0x5fbf0",
            "ldr ip, [sp, 0x18]",
            "cmp ip, 2",
            "bne 0x5fbf0",
            "ldr r2, [0x000600a4]",
            "add r0, sp, 0x1ac0",
            "add r0, r0, 0x18",
            "movw r1, 0x7ff",
            "ldr r3, [sp, 0x28]",
            "add r2, r5, r2",
            "bl sym.imp.snprintf",
            "ldr r3, [r7, 8]",
            "cmp r3, 0",
            "addne r0, sp, 0x1ac0",
            "ldrne r1, [0x000600a8]",
            "addne r0, r0, 0x18",
            "bne 0x5fc24",
            "ldr r3, [r4, 0x238]",
            "sub r3, r3, 1",
            "cmp r3, 1",
            "bhi 0x5fc30",
            "ldr r1, [0x000600ac]",
            "add r0, sp, 0x1ac0",
            "add r0, r0, 0x18",
            "add r1, r5, r1",
            "mov r2, 0x800",
            "bl sym.imp.av_strlcat",
            "add sl, sp, 0x22c0",
            "add r3, sp, 0x1ac0",
            "add sl, sl, 0x18",
            "add r3, r3, 0x18",
            "mov r0, sl",
            "mov r1, 0x800",
            "ldr r2, [sp, 0x38]",
            "bl sym.imp.snprintf",
            "movw r3, 0x1698",
            "ldr r3, [r4, r3]",
            "cmp r3, 0",
            "beq 0x5fc74",
            "ldr r1, [0x000600b0]",
            "mov r0, sl",
            "mov r2, 0x800",
            "add r1, r5, r1",
            "bl sym.imp.av_strlcat",
            "cmp r8, 0",
            "bne 0x5fcd4",
            "ldr r3, [r4, 0x238]",
            "cmp r3, 1",
            "bne 0x5fcd4",
            "add r3, sp, 0x2ec0",
            "add sl, sp, 0x32c0",
            "add r3, r3, 0x18",
            "add sl, sl, 0x18",
            "add ip, sp, 0x3000",
            "mov r0, r3",
            "ldr r2, [ip, 0x400]",
            "mov r1, sl",
            "str r3, [sp, 0x14]",
            "bl fcn.000505e8",
            "ldr r3, [sp, 0x14]",
            "add r0, sp, 0x22c0",
            "ldr r2, [0x000600b4]",
            "add r0, r0, 0x18",
            "mov r1, 0x800",
            "stm sp, {r3, sl}",
            "add r3, r4, 0x24",
            "add r2, r5, r2",
            "bl sym.imp.av_strlcatf",
            "ldr r2, [sp, 0x3c]",
            "mov r3, 0",
            "add sl, sp, 0x58",
            "str r3, [sp, 4]",
            "add r3, sp, 0x22c0",
            "sub ip, sl, 0x10",
            "add r1, r5, r2",
            "add r3, r3, 0x18",
            "add r2, r6, 0x14",
            "mov r0, r7",
            "str ip, [sp]",
            "str ip, [sp, 0x14]",
            "bl fcn.0005f7d8",
            "ldr r3, [sl, -0xc]",
            "movw r2, 0x1cd",
            "ldr ip, [sp, 0x14]",
            "cmp r8, 0",
            "cmpeq r3, r2",
            "beq 0x6003c",
            "cmp r3, 0xc8",
            "bne 0x60044",
            "ldr r3, [ip, 8]",
            "cmp r3, 1",
            "bne 0x60044",
            "cmp r8, 0",
            "ble 0x5fd60",
            "ldr r2, [sl, 0xe8]",
            "ldr r3, [r4, 0x234]",
            "cmp r2, r3",
            "bne 0x60044",
            "ldr r2, [sl, 0xe4]",
            "ldr r3, [r4, 0x230]",
            "cmp r2, r3",
            "beq 0x5fd70",
            "b 0x60044",
            "ldr r3, [sl, 0xe8]",
            "str r3, [r4, 0x234]",
            "ldr r3, [sl, 0xe4]",
            "str r3, [r4, 0x230]",
            "add sl, sp, 0x48",
            "ldr ip, [sp, 0x18]",
            "ldr r3, [sl, 0xf8]",
            "cmp r3, ip",
            "beq 0x5fd9c",
            "ldr r2, [0x000600b8]",
            "mov r0, r7",
            "mov r1, 0x10",
            "add r2, r5, r2",
            "bl sym.imp.av_log",
            "b 0x60044",
            "ldr r2, [sp, 0x18]",
            "cmp r2, 1",
            "beq 0x5fdb8",
            "blo 0x5fdcc",
            "cmp r2, 2",
            "bne 0x5ffec",
            "b 0x5fef8",
            "ldr r3, [sl, 0x20]",
            "str r3, [r6, 0xc]",
            "ldr r3, [sl, 0x24]",
            "str r3, [r6, 0x10]",
            "b 0x5ffec",
            "add r3, sp, 0x3000",
            "mov r1, 0",
            "add r0, sp, 0x32c0",
            "str r1, [r3, 0x2d8]",
            "add r0, r0, 0x1c",
            "mov r2, 0x1a",
            "bl sym.imp.memset",
            "movw r3, 0x169c",
            "ldr r3, [r4, r3]",
            "tst r3, 1",
            "beq 0x5fe10",
            "ldr r1, [0x000600bc]",
            "add r0, sp, 0x32c0",
            "add r0, r0, 0x18",
            "mov r2, 0x1e",
            "add r1, r5, r1",
            "bl sym.imp.av_strlcpy",
            "add r1, sp, 0x48",
            "add r0, sp, 0x32c0",
            "ldrb r3, [r1, 0xc4]",
            "add ip, sp, 0x2ec0",
            "add r0, r0, 0x18",
            "ldr r2, [0x00060084]",
            "add ip, ip, 0x18",
            "ldr lr, [0x000600c0]",
            "cmp r3, 0",
            "beq 0x5fe68",
            "add r3, sp, 0x58",
            "add lr, r5, lr",
            "add r3, r3, 0xb4",
            "add r2, r5, r2",
            "str r3, [sp]",
            "ldr r3, [r1, 0x38]",
            "mov r1, 0x400",
            "str r0, [sp, 0xc]",
            "mov r0, ip",
            "stmib sp, {r3, lr}",
            "mov r3, 0",
            "b 0x5fe8c",
            "ldr sl, [sp, 0x34]",
            "add r2, r5, r2",
            "add lr, r5, lr",
            "str sl, [sp]",
            "ldr r1, [r1, 0x38]",
            "str r0, [sp, 0xc]",
            "mov r0, ip",
            "stmib sp, {r1, lr}",
            "mov r1, 0x400",
            "bl fcn.000745ec",
            "ldr r3, [r4, 0x238]",
            "cmp r8, 1",
            "movgt sl, 0",
            "movle sl, 1",
            "cmp r3, 2",
            "moveq r3, sl",
            "orrne r3, sl, 1",
            "cmp r3, 0",
            "beq 0x5fecc",
            "add r1, sp, 0x2ec0",
            "ldr r0, [r6]",
            "add r1, r1, 0x18",
            "bl fcn.0005c62c",
            "cmp r0, 0",
            "blt 0x60044",
            "ldr r3, [r4, 0x238]",
            "cmp r3, 2",
            "orrne sl, sl, 1",
            "cmp sl, 0",
            "beq 0x5ffec",
            "ldr r3, [r7, 4]",
            "cmp r3, 0",
            "beq 0x5ffec",
            "ldr r0, [r6]",
            "bl fcn.00057b9c",
            "b 0x5ffec",
            "ldrh r3, [sl, 0x44]",
            "add r0, sp, 0x32c0",
            "add r1, sl, 0x44",
            "add r0, r0, 0x18",
            "cmp r3, 0",
            "beq 0x5ff2c",
            "mov r2, 0x80",
            "bl sym.imp.memcpy",
            "ldr ip, [sl, 0x28]",
            "ldr sl, [sl, 0x40]",
            "str ip, [sp, 0x1c]",
            "str sl, [sp, 0x2c]",
            "b 0x5ff4c",
            "add r1, r6, 0x410",
            "mov r2, 0x80",
            "add r1, r1, 8",
            "bl sym.imp.memcpy",
            "ldr r2, [r6, 0x414]",
            "ldr r3, [r6, 0x498]",
            "str r2, [sp, 0x1c]",
            "str r3, [sp, 0x2c]",
            "add ip, sp, 0x2ec0",
            "mov r3, 1",
            "add ip, ip, 0x18",
            "add r0, sp, 0x32c0",
            "mov sl, 0",
            "mov r2, ip",
            "str r3, [sp, 8]",
            "mov r1, 0x80",
            "add r3, r3, 0x31",
            "add r0, r0, 0x18",
            "str ip, [sp, 0x14]",
            "str sl, [sp]",
            "str sl, [sp, 4]",
            "bl sym.imp.getnameinfo",
            "ldr r3, [sp, 0x1c]",
            "add r2, sp, 0x2ac0",
            "ldr ip, [sp, 0x14]",
            "add r2, r2, 0x18",
            "str r2, [sp, 0x30]",
            "mov r0, r2",
            "str r3, [sp, 4]",
            "mov r1, 0x400",
            "ldr r3, [0x000600c4]",
            "ldr r2, [0x00060084]",
            "str ip, [sp]",
            "ldr ip, [sp, 0x2c]",
            "add r3, r5, r3",
            "str r3, [sp, 8]",
            "add r2, r5, r2",
            "mov r3, sl",
            "str ip, [sp, 0xc]",
            "bl fcn.000745ec",
            "mov r0, r6",
            "ldr r1, [sp, 0x30]",
            "mov r2, 3",
            "add r3, r7, 0x4d0",
            "str sl, [sp]",
            "bl sym.ffurl_open",
            "cmp r0, sl",
            "blt 0x60044",
            "mov r1, r6",
            "mov r0, r7",
            "bl fcn.0005c82c",
            "subs r6, r0, 0",
            "bne 0x60048",
            "add r8, r8, 1",
            "add sb, sb, 4",
            "ldr r6, [r4, 8]",
            "cmp r8, r6",
            "blt 0x5f8b8",
            "add r2, sp, 0x48",
            "movw r3, 0x1984",
            "ldr r3, [r2, r3]",
            "mov r6, 0",
            "cmp r3, 0",
            "strgt r3, [r4, 0x224]",
            "ldr r3, [r4, 0x238]",
            "cmp r3, 1",
            "streq r3, [r4, 0xe50]",
            "b 0x60058",
            "mov r6, 1",
            "b 0x60048",
            "ldr r6, [0x000600c8]",
            "mov r0, r7",
            "bl fcn.0005e1b0",
            "b 0x60058",
            "mvn r6, 0",
            "mov r0, r6",
            "add sp, sp, 0x3dc",
            "add sp, sp, 0x3000",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.ff_rtp_get_local_rtp_port": {
        "function_address": "0x0005c720",
        "instructions": [
            "ldr r3, [r0, 0x14]",
            "ldr r0, [r3]",
            "b fcn.0006acd4"
        ]
    },
    "fcn.000600cc": {
        "function_address": "0x000600cc",
        "instructions": [
            "push {r4, lr}",
            "movw r3, 0x1668",
            "ldr r4, [r0, 0xc]",
            "ldr r0, [r4, r3]",
            "ldr r3, [r4, 4]",
            "cmp r0, r3",
            "beq 0x600ec",
            "bl sym.ffurl_close",
            "ldr r0, [r4, 4]",
            "bl sym.ffurl_close",
            "mov r3, 0",
            "movw r2, 0x1668",
            "str r3, [r4, r2]",
            "str r3, [r4, 4]",
            "pop {r4, pc}"
        ]
    },
    "fcn.000609a8": {
        "function_address": "0x000609a8",
        "instructions": [
            "push {r4, r5, lr}",
            "sub sp, sp, 0x1a80",
            "ldr r4, [r0, 0xc]",
            "sub sp, sp, 0x1c",
            "ldr r1, [0x00060a30]",
            "ldr r3, [r4, 0x10]",
            "add r1, pc, r1",
            "cmp r3, 1",
            "bne 0x60a20",
            "ldr r3, [r4, 0x238]",
            "cmp r3, 1",
            "bne 0x609e4",
            "ldr r3, [r4, 0xe50]",
            "cmp r3, 0",
            "bne 0x60a18",
            "ldr ip, [0x00060a34]",
            "add r2, r4, 0x1240",
            "mov r3, 0",
            "add r5, sp, 8",
            "add r2, r2, 0x28",
            "str r3, [sp, 4]",
            "add r1, r1, ip",
            "str r5, [sp]",
            "bl fcn.0005f7d8",
            "ldr r3, [r5, 4]",
            "cmp r3, 0xc8",
            "mvnne r0, 0",
            "bne 0x60a24",
            "mov r3, 2",
            "str r3, [r4, 0x10]",
            "mov r0, 0",
            "add sp, sp, 0x29c",
            "add sp, sp, 0x1800",
            "pop {r4, r5, pc}"
        ]
    },
    "fcn.00060a38": {
        "function_address": "0x00060a38",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x1e80",
            "ldr r5, [0x00060c74]",
            "sub sp, sp, 0x34",
            "mov r1, 0x30",
            "mov r7, r0",
            "ldr r4, [r0, 0xc]",
            "ldr r2, [0x00060c78]",
            "add r5, pc, r5",
            "ldr r3, [r4, 0x10]",
            "add r2, r5, r2",
            "bl sym.imp.av_log",
            "movw r3, 0x1670",
            "mov r2, 0",
            "str r2, [r4, r3]",
            "ldr r3, [r4, 0x238]",
            "cmp r3, 1",
            "bne 0x60a8c",
            "ldr r3, [r4, 0xe50]",
            "cmp r3, r2",
            "bne 0x60c5c",
            "ldr r8, [r4, 0x230]",
            "cmp r8, 0",
            "bne 0x60b08",
            "mov r3, 0x180",
            "mov fp, 0x188",
            "mov sl, r8",
            "mov sb, 0x198",
            "b 0x60afc",
            "ldr r2, [r4, 0xc]",
            "ldr r2, [r2, r8, lsl 2]",
            "ldr r6, [r2, 4]",
            "cmp r6, 0",
            "beq 0x60af8",
            "mov r0, r6",
            "str r3, [sp, 0x14]",
            "bl fcn.00057e00",
            "ldr r3, [sp, 0x14]",
            "mov r0, 0",
            "mov r1, 0x80000000",
            "str sl, [r6, 0x18]",
            "strd r0, r1, [r6, fp]",
            "strd r0, r1, [r6, r3]",
            "mov r0, 0",
            "mov r1, 0",
            "str sl, [r6, 0x14]",
            "strd r0, r1, [r6, 0x20]",
            "strd r0, r1, [r6, sb]",
            "add r8, r8, 1",
            "ldr r2, [r4, 8]",
            "cmp r8, r2",
            "blt 0x60aac",
            "ldr r3, [r4, 0x10]",
            "cmp r3, 2",
            "moveq r3, 0",
            "addeq r1, sp, 0x1a00",
            "strbeq r3, [r1, 0xa8]",
            "beq 0x60b7c",
            "ldrd r8, sb, [r4, 0x18]",
            "mov r3, 0",
            "ldr r2, [0x00060c7c]",
            "ldr r6, [0x00060c80]",
            "mov r0, r8",
            "mov r1, sb",
            "bl fcn.0007ded0",
            "mov r2, 0x3e8",
            "strd r0, r1, [sp]",
            "mov r3, 0",
            "mov r0, r8",
            "mov r1, sb",
            "add r6, r5, r6",
            "bl fcn.0007ded0",
            "mov r2, 0x3e8",
            "mov r3, 0",
            "bl fcn.0007ded0",
            "add r0, sp, 0x1a80",
            "strd r2, r3, [sp, 8]",
            "add r0, r0, 0x28",
            "mov r1, 0x400",
            "mov r2, r6",
            "bl sym.imp.snprintf",
            "ldr r1, [0x00060c84]",
            "mov r3, 0",
            "str r3, [sp, 4]",
            "add r2, r4, 0x1240",
            "add r3, sp, 0x1a80",
            "add r6, sp, 0x18",
            "add r3, r3, 0x28",
            "mov r0, r7",
            "add r1, r5, r1",
            "add r2, r2, 0x28",
            "str r6, [sp]",
            "bl fcn.0005f7d8",
            "ldr r3, [r6, 4]",
            "cmp r3, 0xc8",
            "mvnne r0, 0",
            "bne 0x60c68",
            "ldr r3, [r4, 0x230]",
            "cmp r3, 0",
            "bne 0x60c5c",
            "ldr sl, [r6, 0x10]",
            "ldr r8, [r6, 0x14]",
            "cmp sl, 0",
            "bne 0x60be0",
            "cmp r8, 0x80000000",
            "beq 0x60c5c",
            "ldr sb, [0x00060c88]",
            "mov r6, 0",
            "add sb, r5, sb",
            "b 0x60c50",
            "ldr r3, [r4, 0xc]",
            "ldr r3, [r3, r6, lsl 2]",
            "ldr r5, [r3, 4]",
            "cmp r5, 0",
            "beq 0x60c4c",
            "ldr r3, [r3, 8]",
            "cmp r3, 0",
            "blt 0x60c4c",
            "ldr r2, [r7, 0x18]",
            "ldm sb, {r0, r1}",
            "ldr r2, [r2, r3, lsl 2]",
            "add r3, sp, 0x1e80",
            "add r3, r3, 0x28",
            "stm r3, {r0, r1}",
            "add r2, r2, 0x38",
            "ldm r2, {r0, r1}",
            "mov r2, sp",
            "stm r2, {r0, r1}",
            "mov r0, sl",
            "mov r1, r8",
            "ldm r3, {r2, r3}",
            "bl sym.imp.av_rescale_q",
            "strd r0, r1, [r5, 0x28]",
            "add r6, r6, 1",
            "ldr r3, [r4, 8]",
            "cmp r6, r3",
            "blt 0x60bf0",
            "mov r0, 0",
            "mov r3, 1",
            "str r3, [r4, 0x10]",
            "add sp, sp, 0x2b4",
            "add sp, sp, 0x1c00",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0005f6b4": {
        "function_address": "0x0005f6b4",
        "instructions": [
            "push {r0, r1, r2, lr}",
            "mov ip, 0",
            "str ip, [sp]",
            "str ip, [sp, 4]",
            "bl fcn.0005c8f4",
            "pop {r1, r2, r3, pc}"
        ]
    },
    "fcn.00050a98": {
        "function_address": "0x00050a98",
        "instructions": [
            "ldr ip, [0x00050ad4]",
            "push {r0, r1, r2, r3, r4, lr}",
            "mov lr, r2",
            "lsl r3, r3, 1",
            "str r2, [sp, 4]",
            "add ip, pc, ip",
            "ldr r2, [0x00050ad8]",
            "str r3, [sp]",
            "add r3, r3, 1",
            "str r3, [sp, 8]",
            "mov r3, lr",
            "add r2, ip, r2",
            "bl sym.imp.av_strlcatf",
            "add sp, sp, 0x14",
            "ldm sp!, {pc}"
        ]
    },
    "fcn.0005f2ac": {
        "function_address": "0x0005f2ac",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "movw r3, 0x1670",
            "ldr r4, [r0, 0xc]",
            "sub sp, sp, 0x2c",
            "mov r5, r0",
            "ldr sb, [0x0005f6a8]",
            "ldr r2, [r4, r3]",
            "ldr r3, [r4, 8]",
            "add sb, pc, sb",
            "str r1, [sp, 0x14]",
            "cmp r2, r3",
            "beq 0x5f698",
            "ldr r0, [r4, 0xe4c]",
            "cmp r0, 0",
            "beq 0x5f334",
            "ldr r3, [r4, 0x230]",
            "cmp r3, 1",
            "bne 0x5f304",
            "mov r2, 0",
            "mov r3, r2",
            "bl fcn.00050958",
            "b 0x5f310",
            "mov r2, 0",
            "mov r3, r2",
            "bl fcn.00057e60",
            "cmp r0, 0",
            "streq r0, [r4, 0xe4c]",
            "moveq r8, r0",
            "beq 0x5f69c",
            "cmp r0, 1",
            "moveq r8, 0",
            "beq 0x5f69c",
            "mov r3, 0",
            "str r3, [r4, 0xe4c]",
            "ldr r8, [r4, 0x230]",
            "cmp r8, 0",
            "moveq r6, 0",
            "moveq r7, 0",
            "moveq sl, r8",
            "beq 0x5f3a8",
            "b 0x5f3d4",
            "ldr r3, [r4, 0xc]",
            "lsl fp, r8, 2",
            "ldr r3, [r3, r8, lsl 2]",
            "ldr r0, [r3, 4]",
            "cmp r0, 0",
            "beq 0x5f3a4",
            "bl fcn.00057e40",
            "orrs r2, r0, r1",
            "beq 0x5f3a4",
            "mov r2, r0",
            "mov r3, r1",
            "subs r2, r2, r6",
            "sbc r3, r3, r7",
            "orrs ip, r6, r7",
            "movne ip, 0",
            "moveq ip, 1",
            "orrs ip, ip, r3, lsr 31",
            "ldrne r3, [r4, 0xc]",
            "movne r6, r0",
            "movne r7, r1",
            "ldrne sl, [r3, fp]",
            "add r8, r8, 1",
            "ldr r3, [r4, 8]",
            "cmp r8, r3",
            "blt 0x5f350",
            "orrs r0, r6, r7",
            "moveq r0, 0",
            "moveq r1, 0",
            "beq 0x5f3e8",
            "ldr r3, [r5, 0x464]",
            "adds r0, r6, r3",
            "adc r1, r7, r3, asr 31",
            "b 0x5f3e8",
            "mov r2, 0",
            "mov r3, 0",
            "strd r2, r3, [sp, 8]",
            "mov sl, 0",
            "b 0x5f3ec",
            "strd r0, r1, [sp, 8]",
            "ldr r3, [0x0005f6ac]",
            "add fp, r4, 0x1640",
            "add fp, fp, 0x34",
            "add r3, sb, r3",
            "str r3, [sp, 0x18]",
            "movw r6, 0x1674",
            "ldr r3, [r4, r6]",
            "cmp r3, 0",
            "bne 0x5f424",
            "movw r0, 0x3a98",
            "bl sym.imp.av_malloc",
            "cmp r0, 0",
            "str r0, [r4, r6]",
            "beq 0x5f688",
            "ldr r3, [r4, 0x234]",
            "cmp r3, 0",
            "beq 0x5f458",
            "cmp r3, 2",
            "beq 0x5f458",
            "movw r3, 0x1674",
            "mov r0, r5",
            "ldr r2, [r4, r3]",
            "add r1, sp, 0x24",
            "movw r3, 0x3a98",
            "bl fcn.00061400",
            "mov r8, r0",
            "b 0x5f4a0",
            "ldrd r2, r3, [sp, 8]",
            "mov r0, r5",
            "add r1, sp, 0x24",
            "strd r2, r3, [sp]",
            "movw r3, 0x1674",
            "ldr r2, [r4, r3]",
            "bl fcn.0005f02c",
            "subs r8, r0, 0",
            "ble 0x5f4a0",
            "ldr r3, [sp, 0x24]",
            "ldr r0, [r3, 4]",
            "cmp r0, 0",
            "beq 0x5f4a0",
            "ldr r3, [r4, 0x230]",
            "cmp r3, 0",
            "bne 0x5f4a0",
            "mov r1, r8",
            "bl fcn.0005792c",
            "subs r3, sl, 0",
            "movne r3, 1",
            "cmn r8, 0xb",
            "movne r3, 0",
            "cmp r3, 0",
            "beq 0x5f4dc",
            "ldr r2, [r4, 0x230]",
            "cmp r2, 0",
            "bne 0x5f690",
            "ldr r0, [sl, 4]",
            "mov r3, r2",
            "ldr r1, [sp, 0x14]",
            "str sl, [sp, 0x24]",
            "bl fcn.00057e60",
            "b 0x5f50c",
            "cmp r8, 0",
            "blt 0x5f69c",
            "beq 0x5f698",
            "ldr r3, [r4, 0x230]",
            "cmp r3, 1",
            "ldr r3, [sp, 0x24]",
            "bne 0x5f51c",
            "ldr r0, [r3, 4]",
            "mov r2, fp",
            "ldr r1, [sp, 0x14]",
            "mov r3, r8",
            "bl fcn.00050958",
            "cmp r0, 0",
            "mov r8, r0",
            "blt 0x5f400",
            "b 0x5f674",
            "ldr r0, [r3, 4]",
            "mov r2, fp",
            "mov r3, r8",
            "ldr r1, [sp, 0x14]",
            "bl fcn.00057e60",
            "subs r8, r0, 0",
            "bge 0x5f674",
            "ldr r3, [sp, 0x24]",
            "ldr r7, [r3, 4]",
            "ldr r2, [r7, 0x188]",
            "cmp r2, 0",
            "bne 0x5f558",
            "ldr r2, [r7, 0x18c]",
            "cmp r2, 0x80000000",
            "beq 0x5f624",
            "ldr r3, [r3, 8]",
            "mov sb, 0",
            "mov r6, r5",
            "cmp r3, 0",
            "ldrge r2, [r5, 0x18]",
            "movlt ip, 0",
            "ldrge ip, [r2, r3, lsl 2]",
            "str r8, [sp, 0x1c]",
            "mov r8, ip",
            "b 0x5f610",
            "ldr r3, [r4, 0xc]",
            "ldr r3, [r3, sb, lsl 2]",
            "ldr r5, [r3, 4]",
            "ldr r3, [r3, 8]",
            "cmp r3, 0",
            "ldrge r2, [r6, 0x18]",
            "movlt r1, 0",
            "ldrge r1, [r2, r3, lsl 2]",
            "cmp r8, 0",
            "cmpne r5, 0",
            "beq 0x5f60c",
            "cmp r1, 0",
            "beq 0x5f60c",
            "ldr r3, [r5, 0x188]",
            "cmp r3, 0",
            "bne 0x5f60c",
            "ldr r3, [r5, 0x18c]",
            "cmp r3, 0x80000000",
            "bne 0x5f60c",
            "mov ip, 0x188",
            "mov r0, 0x198",
            "ldrd r2, r3, [r7, ip]",
            "add r1, r1, 0x38",
            "strd r2, r3, [r5, ip]",
            "mov ip, sp",
            "ldrd r2, r3, [r7, r0]",
            "ldm r1, {r0, r1}",
            "stm ip, {r0, r1}",
            "mov r1, r3",
            "add r3, r8, 0x38",
            "mov r0, r2",
            "ldm r3, {r2, r3}",
            "bl sym.imp.av_rescale_q",
            "mov r2, 0x198",
            "strd r0, r1, [r5, r2]",
            "add sb, sb, 1",
            "ldr r3, [r4, 8]",
            "cmp sb, r3",
            "blt 0x5f580",
            "ldr r8, [sp, 0x1c]",
            "mov r5, r6",
            "cmn r8, 0xcb",
            "bne 0x5f400",
            "movw r6, 0x1670",
            "ldr r2, [sp, 0x18]",
            "ldr r3, [r4, r6]",
            "mov r0, r5",
            "mov r1, 0x30",
            "add r3, r3, 1",
            "str r3, [r4, r6]",
            "str r3, [sp]",
            "ldr r3, [r4, 8]",
            "str r3, [sp, 4]",
            "ldr r3, [sp, 0x24]",
            "ldr r3, [r3, 8]",
            "bl sym.imp.av_log",
            "ldr r2, [r4, r6]",
            "ldr r3, [r4, 8]",
            "cmp r2, r3",
            "bne 0x5f400",
            "b 0x5f698",
            "cmp r8, 1",
            "ldreq r3, [sp, 0x24]",
            "ldreq r3, [r3, 4]",
            "streq r3, [r4, 0xe4c]",
            "b 0x5f69c",
            "mvn r8, 0xb",
            "b 0x5f69c",
            "mvn r8, 0xa",
            "b 0x5f69c",
            "ldr r8, [0x0005f6b0]",
            "mov r0, r8",
            "add sp, sp, 0x2c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00057e40": {
        "function_address": "0x00057e40",
        "instructions": [
            "ldr r3, [r0, 0x170]",
            "cmp r3, 0",
            "moveq r2, 0",
            "moveq r3, 0",
            "ldrdne r2, r3, [r3, 0x10]",
            "mov r0, r2",
            "mov r1, r3",
            "bx lr"
        ]
    },
    "fcn.00060108": {
        "function_address": "0x00060108",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x3840",
            "sub sp, sp, 4",
            "ldr r4, [r0, 0xc]",
            "mov r1, 0",
            "movw r2, 0x1a90",
            "mov r7, r0",
            "add r0, sp, 0x50",
            "bl sym.imp.memset",
            "mov r6, 0",
            "add r2, sp, 0x3000",
            "add r0, sp, 0x37c0",
            "str r6, [r2, 0x7e4]",
            "add r0, r0, 0x28",
            "mov r2, 0x3c",
            "mov r1, r6",
            "ldr r5, [0x0006094c]",
            "bl sym.imp.memset",
            "mov r3, 0x80",
            "add r2, sp, 0x3000",
            "str r3, [r2, 0x838]",
            "movw r3, 0x16a8",
            "movw r2, 0x16a4",
            "ldr r3, [r4, r3]",
            "ldr r2, [r4, r2]",
            "add r5, pc, r5",
            "cmp r3, r2",
            "bge 0x60198",
            "str r2, [sp]",
            "mov r0, r7",
            "ldr r2, [0x00060950]",
            "mov r1, 0x10",
            "mvn r8, 0x15",
            "add r2, r5, r2",
            "bl sym.imp.av_log",
            "b 0x6093c",
            "bl fcn.00045ba8",
            "cmp r0, 0",
            "mvneq r8, 4",
            "beq 0x6093c",
            "movw r2, 0x1678",
            "movw r3, 0x166c",
            "ldr r1, [r4, r2]",
            "add sb, sp, 0x32c0",
            "str r6, [r4, r3]",
            "add sb, sb, 0x24",
            "tst r1, 0x100",
            "movne r1, 2",
            "strne r1, [r4, r2]",
            "movne r2, 1",
            "strne r2, [r4, r3]",
            "movw r3, 0x1678",
            "ldr r2, [r4, r3]",
            "and r2, r2, 7",
            "str r2, [r4, r3]",
            "ldr r3, [0x00060954]",
            "add r3, r5, r3",
            "str r3, [sp, 0x44]",
            "add r3, sp, 0x80",
            "sub r2, r3, 0x30",
            "str r3, [sp, 0x3c]",
            "add r3, r3, 0x18c0",
            "str r2, [sp, 0x2c]",
            "add r3, r3, 0x14",
            "str r3, [sp, 0x40]",
            "movw r3, 0x1678",
            "add r2, r7, 0x1c",
            "ldr r6, [r4, r3]",
            "mov r3, 0x400",
            "str r2, [sp, 0x38]",
            "add r2, sp, 0x3800",
            "str r3, [sp, 4]",
            "add r2, r2, 0x3c",
            "str r3, [sp, 0x10]",
            "add sl, sp, 0x3740",
            "ldr r3, [sp, 0x38]",
            "mov r0, 0",
            "str r2, [sp, 8]",
            "add r2, sp, 0x2ec0",
            "add r2, r2, 0x24",
            "add sl, sl, 0x24",
            "str r2, [sp, 0xc]",
            "mov r1, r0",
            "str r3, [sp, 0x14]",
            "mov r2, sl",
            "mov r3, 0x80",
            "str sb, [sp]",
            "bl sym.av_url_split",
            "add r2, sp, 0x3700",
            "ldrb r3, [r2, 0x64]",
            "cmp r3, 0",
            "beq 0x60288",
            "add r0, r4, 0x27c",
            "mov r1, sl",
            "mov r2, 0x80",
            "bl sym.imp.av_strlcpy",
            "add r2, sp, 0x3000",
            "add r0, sp, 0x2ec0",
            "ldr r3, [r2, 0x83c]",
            "add r0, r0, 0x24",
            "mov r1, 0x3f",
            "cmp r3, 0",
            "movwlt r3, 0x22a",
            "strlt r3, [r2, 0x83c]",
            "bl sym.imp.strrchr",
            "subs sl, r0, 0",
            "beq 0x6040c",
            "ldr r3, [0x00060958]",
            "str sl, [sp, 0x20]",
            "str r8, [sp, 0x48]",
            "add r3, r5, r3",
            "str sb, [sp, 0x4c]",
            "str r3, [sp, 0x24]",
            "ldr r3, [0x0006095c]",
            "add r3, r5, r3",
            "str r3, [sp, 0x30]",
            "ldr r3, [0x00060960]",
            "add r3, r5, r3",
            "str r3, [sp, 0x34]",
            "ldr r3, [0x00060964]",
            "add r3, r5, r3",
            "str r3, [sp, 0x28]",
            "add fp, sl, 1",
            "mov r1, 0x26",
            "mov r0, fp",
            "bl sym.imp.strchr",
            "subs sl, r0, 0",
            "mov r0, fp",
            "movne r3, 0",
            "strbne r3, [sl]",
            "ldr r1, [sp, 0x44]",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "orreq r6, r6, 1",
            "beq 0x603e0",
            "mov r0, fp",
            "ldr r1, [sp, 0x30]",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "orreq r6, r6, 4",
            "beq 0x603e0",
            "mov r0, fp",
            "ldr r1, [sp, 0x34]",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "orreq r6, r6, 2",
            "beq 0x603e0",
            "mov r0, fp",
            "ldr r1, [sp, 0x28]",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "orreq r6, r6, 2",
            "moveq r2, 1",
            "movweq r3, 0x166c",
            "beq 0x60398",
            "ldr r1, [0x00060968]",
            "mov r0, fp",
            "add r1, r5, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x603a0",
            "movw r3, 0x169c",
            "ldr r2, [r4, r3]",
            "orr r2, r2, 1",
            "str r2, [r4, r3]",
            "b 0x603e0",
            "mov r0, fp",
            "bl sym.imp.strlen",
            "ldr r3, [sp, 0x20]",
            "mov sb, r0",
            "mov r2, sb",
            "mov r1, fp",
            "add r8, r3, 1",
            "mov r0, r8",
            "bl sym.imp.memmove",
            "cmp sl, 0",
            "add r2, r8, sb",
            "str r2, [sp, 0x20]",
            "beq 0x603f8",
            "mov r3, 0x26",
            "strb r3, [r8, sb]",
            "b 0x603f0",
            "mov r0, r7",
            "mov r1, 0x18",
            "ldr r2, [sp, 0x24]",
            "bl sym.imp.av_log",
            "cmp sl, 0",
            "bne 0x602f0",
            "ldr r2, [sp, 0x20]",
            "mov r3, 0",
            "ldr r8, [sp, 0x48]",
            "ldr sb, [sp, 0x4c]",
            "strb r3, [r2]",
            "ldr r3, [r7, 8]",
            "cmp r6, 0",
            "moveq r6, 7",
            "cmp r3, 0",
            "beq 0x60454",
            "ands r6, r6, 3",
            "beq 0x60438",
            "movw r3, 0x166c",
            "ldr r3, [r4, r3]",
            "cmp r3, 1",
            "bne 0x60454",
            "ldr r2, [0x0006096c]",
            "mov r0, r7",
            "mov r1, 0x10",
            "mvn r8, 0x15",
            "add r2, r5, r2",
            "bl sym.imp.av_log",
            "b 0x608cc",
            "add r3, r4, 0x1240",
            "add r2, sp, 0x3000",
            "add r3, r3, 0x28",
            "str sb, [sp]",
            "str r3, [sp, 0x34]",
            "add ip, sp, 0x2ec0",
            "ldr r3, [r2, 0x83c]",
            "add ip, ip, 0x24",
            "ldr fp, [0x00060970]",
            "mov r1, 0x400",
            "ldr r2, [0x00060974]",
            "str r3, [sp, 4]",
            "mov r3, 0",
            "add fp, r5, fp",
            "ldr r0, [sp, 0x34]",
            "add r2, r5, r2",
            "str ip, [sp, 0xc]",
            "str ip, [sp, 0x1c]",
            "str fp, [sp, 8]",
            "bl fcn.000745ec",
            "movw r3, 0x166c",
            "add r2, sp, 0x3000",
            "ldr r3, [r4, r3]",
            "ldr ip, [sp, 0x1c]",
            "str r3, [sp, 0x20]",
            "cmp r3, 1",
            "ldr r3, [r2, 0x83c]",
            "add r2, r7, 0x4d0",
            "str r2, [sp, 0x30]",
            "add r2, r4, 4",
            "str r2, [sp, 0x28]",
            "bne 0x6064c",
            "ldr r2, [0x00060964]",
            "add sl, sp, 0x26c0",
            "add sl, sl, 0x24",
            "str r3, [sp, 4]",
            "add r3, sp, 0x3740",
            "mov r1, 0x400",
            "add r2, r5, r2",
            "add r3, r3, 0x24",
            "mov r0, sl",
            "str ip, [sp, 0xc]",
            "str fp, [sp, 8]",
            "str sb, [sp]",
            "bl fcn.000745ec",
            "bl sym.imp.av_get_random_seed",
            "mov fp, r0",
            "bl sym.imp.av_get_random_seed",
            "ldr r2, [0x00060978]",
            "add r3, sp, 0x3800",
            "add r3, r3, 0x24",
            "str r0, [sp]",
            "str r3, [sp, 0x24]",
            "mov r0, r3",
            "mov r1, 0x11",
            "add r2, r5, r2",
            "mov r3, fp",
            "bl sym.imp.snprintf",
            "ldr r0, [sp, 0x28]",
            "mov r1, sl",
            "ldr r2, [sp, 0x20]",
            "ldr r3, [sp, 0x30]",
            "bl fcn.00018880",
            "cmp r0, 0",
            "blt 0x608b8",
            "ldr r2, [0x0006097c]",
            "add fp, sp, 0x22c0",
            "add fp, fp, 0x24",
            "mov r1, 0x400",
            "ldr r3, [sp, 0x24]",
            "mov r0, fp",
            "add r2, r5, r2",
            "bl sym.imp.snprintf",
            "ldr r2, [0x00060980]",
            "ldr r3, [r4, 4]",
            "add r2, r5, r2",
            "mov r1, r2",
            "str r2, [sp, 0x28]",
            "ldr r0, [r3, 0x14]",
            "mov r2, fp",
            "mov r3, 0",
            "bl sym.imp.av_opt_set",
            "ldr r0, [r4, 4]",
            "mov r1, 0",
            "bl fcn.00018a38",
            "cmp r0, 0",
            "str r0, [sp, 0x20]",
            "bne 0x608b8",
            "add r0, r4, 0x1640",
            "mov r1, sl",
            "add r0, r0, 0x28",
            "mov r2, 2",
            "ldr r3, [sp, 0x30]",
            "bl fcn.00018880",
            "cmp r0, 0",
            "blt 0x608b8",
            "ldr r2, [0x00060984]",
            "movw sl, 0x1668",
            "mov r1, 0x400",
            "ldr r3, [sp, 0x24]",
            "mov r0, fp",
            "add r2, r5, r2",
            "bl sym.imp.snprintf",
            "ldr r3, [r4, sl]",
            "mov r2, fp",
            "ldr r1, [sp, 0x28]",
            "ldr r0, [r3, 0x14]",
            "ldr r3, [sp, 0x20]",
            "bl sym.imp.av_opt_set",
            "ldr r3, [r4, sl]",
            "ldr r1, [0x00060988]",
            "ldr r2, [0x0006098c]",
            "ldr r0, [r3, 0x14]",
            "add r1, r5, r1",
            "ldr r3, [sp, 0x20]",
            "add r2, r5, r2",
            "bl sym.imp.av_opt_set",
            "ldr r0, [r4, sl]",
            "ldr r1, [r4, 4]",
            "bl fcn.000288b8",
            "ldr r0, [r4, sl]",
            "ldr r1, [sp, 0x20]",
            "bl fcn.00018a38",
            "cmp r0, 0",
            "bne 0x608b8",
            "b 0x606a8",
            "ldr r2, [0x00060960]",
            "add fp, sp, 0x2ac0",
            "mov sl, 0",
            "add fp, fp, 0x24",
            "str r3, [sp, 4]",
            "mov r1, 0x400",
            "add r2, r5, r2",
            "mov r3, sl",
            "mov r0, fp",
            "str sb, [sp]",
            "str sl, [sp, 8]",
            "bl fcn.000745ec",
            "ldr r0, [sp, 0x28]",
            "mov r1, fp",
            "mov r2, 3",
            "ldr r3, [sp, 0x30]",
            "str sl, [sp]",
            "bl sym.ffurl_open",
            "cmp r0, sl",
            "blt 0x608b8",
            "ldr r2, [r4, 4]",
            "movw r3, 0x1668",
            "str r2, [r4, r3]",
            "mov r3, 0",
            "ldr r0, [r4, 4]",
            "str r3, [r4, 0x20]",
            "add sl, sp, 0x36c0",
            "bl fcn.00018d8c",
            "add sl, sl, 0x24",
            "add r2, sp, 0x3800",
            "mov r1, sl",
            "add r2, r2, 0x38",
            "bl sym.imp.getpeername",
            "cmp r0, 0",
            "bne 0x60700",
            "mov r3, 1",
            "add r2, sp, 0x3000",
            "str r0, [sp]",
            "str r0, [sp, 4]",
            "mov r0, sl",
            "str r3, [sp, 8]",
            "mov r3, 0x400",
            "ldr r1, [r2, 0x838]",
            "mov r2, sb",
            "bl sym.imp.getnameinfo",
            "ldr r3, [0x00060990]",
            "add sl, sp, 0x1ac0",
            "add sl, sl, 0x24",
            "mov fp, 0",
            "str fp, [r4, 0x238]",
            "add r3, r5, r3",
            "str r3, [sp, 0x20]",
            "ldr r3, [0x00060994]",
            "add r3, r5, r3",
            "str r3, [sp, 0x24]",
            "mov r3, 0",
            "add r2, sp, 0x1a00",
            "strb r3, [r2, 0xe4]",
            "ldr r3, [r4, 0x238]",
            "cmp r3, 1",
            "bne 0x60750",
            "mov r0, sl",
            "ldr r1, [sp, 0x20]",
            "mov r2, 0x800",
            "bl sym.imp.av_strlcat",
            "ldr r3, [sp, 0x2c]",
            "mov r0, r7",
            "ldr r2, [sp, 0x34]",
            "ldr r1, [sp, 0x24]",
            "str r3, [sp]",
            "mov r3, sl",
            "str fp, [sp, 4]",
            "bl fcn.0005f7d8",
            "ldr r2, [sp, 0x2c]",
            "ldr r3, [r2, 4]",
            "cmp r3, 0xc8",
            "bne 0x608c0",
            "ldr r3, [r4, 0x238]",
            "cmp r3, 1",
            "beq 0x607a4",
            "ldr r2, [sp, 0x40]",
            "ldrb r3, [r2]",
            "cmp r3, 0",
            "movne r3, 1",
            "strne r3, [r4, 0x238]",
            "bne 0x60728",
            "ldr r3, [sp, 0x2c]",
            "mov r2, 9",
            "ldr r1, [0x00060998]",
            "add r0, r3, 0x1940",
            "add r0, r0, 4",
            "add r1, r5, r1",
            "bl sym.imp.av_strncasecmp",
            "cmp r0, 0",
            "moveq r3, 2",
            "streq r3, [r4, 0x238]",
            "beq 0x607f4",
            "ldr r3, [r4, 0x238]",
            "cmp r3, 1",
            "bne 0x607f4",
            "ldr r2, [sp, 0x2c]",
            "add r0, sp, 0x37c0",
            "add r0, r0, 0x24",
            "add r1, r2, 0x1900",
            "add r1, r1, 4",
            "bl sym.imp.strcpy",
            "ldr r3, [r7, 4]",
            "cmp r3, 0",
            "beq 0x60810",
            "mov r0, r7",
            "ldr r1, [sp, 0x2c]",
            "bl fcn.000612fc",
            "mov r8, r0",
            "cmp r8, 0",
            "bne 0x608cc",
            "ldr r3, [0x0006099c]",
            "mov ip, 1",
            "ldr fp, [r5, r3]",
            "rsb r3, r6, 0",
            "mov r0, r7",
            "and r3, r3, r6",
            "mov r1, sb",
            "ldrb sl, [fp, r3]",
            "add r3, sp, 0x3000",
            "ldr r2, [r3, 0x83c]",
            "ldr r3, [r4, 0x238]",
            "str ip, [sp, 0x1c]",
            "cmp r3, 1",
            "addeq r3, sp, 0x37c0",
            "movne r3, 0",
            "addeq r3, r3, 0x24",
            "str r3, [sp]",
            "mov r3, sl",
            "bl fcn.0005f804",
            "subs r8, r0, 0",
            "ldr ip, [sp, 0x1c]",
            "blt 0x608cc",
            "bic r6, r6, ip, lsl sl",
            "cmp r8, 1",
            "cmpeq r6, 0",
            "beq 0x608c8",
            "cmp r8, 0",
            "bne 0x60824",
            "movw r3, 0x1678",
            "add r1, sp, 0x37c0",
            "str r6, [r4, r3]",
            "mov r2, 0x40",
            "add r0, r4, 0x23c",
            "add r1, r1, 0x24",
            "bl sym.imp.av_strlcpy",
            "mov r2, 0",
            "mov r3, 0",
            "str r8, [r4, 0x10]",
            "strd r2, r3, [r4, 0x18]",
            "b 0x6093c",
            "mvn r8, 4",
            "b 0x608cc",
            "ldr r8, [0x000609a0]",
            "b 0x608cc",
            "mvn r8, 0x5c",
            "mov r0, r7",
            "add r6, sp, 0x50",
            "bl fcn.0005e280",
            "mov r0, r7",
            "bl fcn.000600cc",
            "ldr r3, [r6, 4]",
            "sub r3, r3, 0x12c",
            "cmp r3, 0x63",
            "bhi 0x60938",
            "ldr r3, [r7, 4]",
            "cmp r3, 0",
            "beq 0x60938",
            "ldr r2, [sp, 0x3c]",
            "ldr r0, [sp, 0x38]",
            "add r1, r2, 0x8d0",
            "mov r2, 0x400",
            "add r1, r1, 4",
            "bl sym.imp.av_strlcpy",
            "ldr r3, [sp, 0x38]",
            "mov r0, r7",
            "ldr r2, [0x000609a4]",
            "mov r1, 0x20",
            "str r3, [sp]",
            "add r2, r5, r2",
            "ldr r3, [r6, 4]",
            "bl sym.imp.av_log",
            "b 0x6020c",
            "bl fcn.00045c4c",
            "mov r0, r8",
            "add sp, sp, 0x44",
            "add sp, sp, 0x3800",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "sym.imp.getpeername": {
        "function_address": "0x00009c48",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x958]!"
        ]
    },
    "fcn.00061574": {
        "function_address": "0x00061574",
        "instructions": [
            "push {r4, lr}",
            "ldr r4, [r0, 0xc]",
            "ldr r3, [r4, 4]",
            "cmp r3, 0",
            "beq 0x61590",
            "add r0, r4, 4",
            "bl sym.avformat_close_input",
            "ldr r0, [r4]",
            "cmp r0, 0",
            "beq 0x615a0",
            "bl sym.ffurl_close",
            "add r0, r4, 0x6c",
            "bl sym.imp.av_freep",
            "bl fcn.00045c4c",
            "mov r0, 0",
            "pop {r4, pc}"
        ]
    },
    "fcn.00061ff8": {
        "function_address": "0x00061ff8",
        "instructions": [
            "cmp r0, 0x20",
            "cmpne r0, 9",
            "beq 0x62014",
            "cmp r0, 0xd",
            "movne r0, 0",
            "moveq r0, 1",
            "bx lr",
            "mov r0, 1",
            "bx lr"
        ]
    },
    "fcn.00063c88": {
        "function_address": "0x00063c88",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r4, r0",
            "b 0x63cac",
            "ldr r5, [r4, 0x48]",
            "mov r0, r4",
            "bl sym.imp.av_free_packet",
            "mov r0, r4",
            "mov r4, r5",
            "bl sym.imp.av_free",
            "cmp r4, 0",
            "bne 0x63c94",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.00065a7c": {
        "function_address": "0x00065a7c",
        "instructions": [
            "push {r4, lr}",
            "mov r4, r1",
            "mov r1, 0",
            "bl sym.avformat_new_stream",
            "subs r3, r0, 0",
            "beq 0x65ad4",
            "ldr r1, [r3, 8]",
            "mov r2, 1",
            "ldr r3, [0x00065adc]",
            "ldr ip, [r4, 0x10]",
            "str r2, [r1, 0xd0]",
            "str r3, [r1, 0xd4]",
            "ldr r3, [r4, 0xc]",
            "str r2, [r1, 0x40]",
            "str r3, [r1, 0x174]",
            "ldr r3, [r4, 8]",
            "str ip, [r1, 0x48]",
            "str r3, [r1, 0x3c]",
            "mov r1, 0x10",
            "bl sym.avpriv_set_pts_info",
            "mov r0, 0",
            "pop {r4, pc}",
            "mvn r0, 0",
            "pop {r4, pc}"
        ]
    },
    "fcn.00065e38": {
        "function_address": "0x00065e38",
        "instructions": [
            "mov r3, 1",
            "push {r0, r1, r2, lr}",
            "mov r2, 0",
            "str r3, [sp]",
            "mov r3, 0",
            "bl sym.avio_seek",
            "add sp, sp, 0xc",
            "ldm sp!, {pc}"
        ]
    },
    "fcn.0007dccc": {
        "function_address": "0x0007dccc",
        "instructions": [
            "str lr, [sp, -8]!",
            "bl fcn.0007dc90",
            "movls r0, 1",
            "movhi r0, 0",
            "ldr pc, [sp], 8"
        ]
    },
    "fcn.00067278": {
        "function_address": "0x00067278",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "mov r7, r3",
            "ldr r4, [0x0006740c]",
            "and r3, r1, 0xff",
            "sub sp, sp, 0x2c",
            "sub r3, r3, 1",
            "mov r5, r0",
            "mov ip, r1",
            "add r4, pc, r4",
            "ldr r6, [sp, 0x40]",
            "cmp r3, 0xc",
            "addls pc, pc, r3, lsl 2",
            "b 0x673c4",
            "b 0x672e0",
            "b 0x673c4",
            "b 0x673c4",
            "b 0x672f0",
            "b 0x672f8",
            "b 0x6738c",
            "b 0x67300",
            "b 0x6736c",
            "b 0x6737c",
            "b 0x6738c",
            "b 0x6739c",
            "b 0x673a4",
            "b 0x673ac",
            "mov r3, 0x1800",
            "str r3, [r7]",
            "ldr r3, [0x00067410]",
            "b 0x673b8",
            "mov r3, 0x600",
            "b 0x67370",
            "mov r3, 0x600",
            "b 0x67390",
            "mov r3, 0x38",
            "str r2, [sp]",
            "str r3, [sp, 0xc]",
            "add r3, r3, 8",
            "str r3, [sp, 0x10]",
            "add r2, r2, 7",
            "mov r3, 0",
            "mov r0, sp",
            "add r1, sp, 0x14",
            "stmib sp, {r2, r3}",
            "bl sym.imp.avpriv_aac_parse_header",
            "cmp r0, 0",
            "beq 0x67354",
            "cmp r5, 0",
            "beq 0x673f8",
            "ldr r2, [0x00067414]",
            "mov r0, r5",
            "mov r1, 0x10",
            "add r2, r4, r2",
            "bl sym.imp.av_log",
            "b 0x673f8",
            "ldr r3, [sp, 0x18]",
            "lsl r3, r3, 2",
            "str r3, [r7]",
            "ldr r3, [0x00067418]",
            "str r3, [r6]",
            "b 0x67404",
            "mov r3, 0xc00",
            "str r3, [r7]",
            "ldr r3, [0x0006741c]",
            "b 0x673b8",
            "mov r3, 0x2400",
            "str r3, [r7]",
            "add r3, r3, 0x12c00",
            "b 0x673b8",
            "mov r3, 0x1200",
            "str r3, [r7]",
            "ldr r3, [0x00067420]",
            "b 0x673b8",
            "mov r3, 0x800",
            "b 0x673b0",
            "mov r3, 0x1000",
            "b 0x673b0",
            "mov r3, 0x2000",
            "str r3, [r7]",
            "ldr r3, [0x00067424]",
            "str r3, [r6]",
            "mov r0, 0",
            "b 0x67404",
            "cmp r0, 0",
            "beq 0x67400",
            "ldr r2, [0x00067428]",
            "mov r1, 0x18",
            "mov r3, ip",
            "add r2, r4, r2",
            "bl sym.imp.av_log",
            "ldr r1, [0x0006742c]",
            "mov r0, r5",
            "mov r2, 1",
            "add r1, r4, r1",
            "bl sym.imp.av_log_missing_feature",
            "b 0x67400",
            "ldr r0, [0x00067430]",
            "b 0x67404",
            "ldr r0, [0x00067434]",
            "add sp, sp, 0x2c",
            "pop {r4, r5, r6, r7, pc}"
        ]
    },
    "sym.imp.avpriv_aac_parse_header": {
        "function_address": "0x00009d80",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x888]!"
        ]
    },
    "fcn.00045bec": {
        "function_address": "0x00045bec",
        "instructions": [
            "cmp r1, 0",
            "push {r0, r1, r4, lr}",
            "mov r3, 0",
            "moveq r4, 1",
            "movne r4, 4",
            "mov r1, 1",
            "str r0, [sp]",
            "mov r2, 0x64",
            "mov r0, sp",
            "strh r4, [sp, 4]",
            "strh r3, [sp, 6]",
            "bl sym.imp.poll",
            "cmp r0, 0",
            "bge 0x45c34",
            "bl sym.imp.__errno_location",
            "ldr r0, [r0]",
            "rsb r0, r0, 0",
            "b 0x45c48",
            "ldrsh r3, [sp, 6]",
            "orr r4, r4, 0x18",
            "tst r4, r3",
            "mvneq r0, 0xa",
            "movne r0, 0",
            "pop {r2, r3, r4, pc}"
        ]
    },
    "fcn.000689c0": {
        "function_address": "0x000689c0",
        "instructions": [
            "ldr r2, [r0, 0xc]",
            "mov r3, 0",
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x2c",
            "mov r4, r0",
            "mov r5, r1",
            "add r2, r2, 0x1800",
            "add r6, sp, 4",
            "str r2, [r0, 0xc]",
            "mov r0, r1",
            "str r3, [sp]",
            "asr r3, r2, 0x1f",
            "bl sym.avio_seek",
            "mov r0, r5",
            "add r7, sp, 0x14",
            "bl sym.avio_rl16",
            "cmp r0, 0",
            "str r0, [r4, 0x180]",
            "movwne r3, 0x6e4",
            "streq r0, [r4, 0x17c]",
            "strne r3, [r4, 0x17c]",
            "mov r0, r5",
            "bl sym.avio_rl16",
            "cmp r0, 0",
            "str r0, [r4, 0x188]",
            "movne r3, 0x300",
            "streq r0, [r4, 0x184]",
            "strne r3, [r4, 0x184]",
            "mov r0, r5",
            "bl sym.avio_r8",
            "str r0, [r6, 4]!",
            "cmp r6, r7",
            "bne 0x68a30",
            "add sl, sp, 0x14",
            "add r7, sp, 0x24",
            "mov r6, sl",
            "mov r0, r5",
            "bl sym.avio_rl16",
            "str r0, [r6, 4]!",
            "cmp r6, r7",
            "bne 0x68a50",
            "mov r6, 1",
            "add sb, sp, 0x18",
            "mov fp, 0xc",
            "ldr r2, [sl, 4]!",
            "sub r1, r6, 1",
            "cmp r2, 0",
            "movne r3, r6",
            "addne r1, sb, r1, lsl 2",
            "bne 0x68a90",
            "b 0x68b38",
            "add r3, r3, 1",
            "cmp r3, 2",
            "bgt 0x68aa4",
            "ldr r0, [r1, 4]!",
            "cmp r0, 0",
            "beq 0x68a8c",
            "add r1, sp, 8",
            "ldr r7, [r1, r6, lsl 2]",
            "add r1, sp, 0x28",
            "add r3, r1, r3, lsl 2",
            "cmp r7, 0x1d",
            "ldr r8, [r3, -0x10]",
            "bgt 0x68b88",
            "mla r7, fp, r7, r4",
            "rsb r8, r2, r8",
            "cmp r8, 0",
            "movgt r1, 0",
            "movle r1, 1",
            "ldr r3, [r7, 0x10]",
            "ldr r0, [r7, 0x14]",
            "add r3, r8, r3",
            "cmp r3, r0",
            "movle r3, r1",
            "orrgt r3, r1, 1",
            "cmp r3, 0",
            "bne 0x68b88",
            "ldr r1, [r4, 0xc]",
            "mov r0, r5",
            "str r3, [sp]",
            "add r2, r2, r1",
            "bl sym.avio_seek",
            "ldr r1, [r7, 0x18]",
            "mov r0, r5",
            "ldr r3, [r7, 0x10]",
            "mov r2, r8",
            "add r1, r1, r3",
            "bl sym.avio_read",
            "cmp r0, r8",
            "ldreq r3, [r7, 0x10]",
            "addeq r0, r0, r3",
            "streq r0, [r7, 0x10]",
            "mvnne r0, 4",
            "bne 0x68b8c",
            "add r6, r6, 1",
            "cmp r6, 4",
            "bne 0x68a70",
            "ldr r3, [sp, 8]",
            "cmp r3, 0xff",
            "moveq r0, 0",
            "streq r0, [r4, 0x18c]",
            "streq r0, [r4, 0x190]",
            "beq 0x68b8c",
            "cmp r3, 0x1d",
            "bhi 0x68b88",
            "mov r2, 0xc",
            "mov r0, 0",
            "mla r3, r2, r3, r4",
            "ldr r2, [r3, 0x10]",
            "str r0, [r3, 0x10]",
            "str r2, [r4, 0x18c]",
            "ldr r2, [r3, 0x18]",
            "str r2, [r4, 0x190]",
            "b 0x68b8c",
            "ldr r0, [0x00068b94]",
            "add sp, sp, 0x2c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00069310": {
        "function_address": "0x00069310",
        "instructions": [
            "mov r3, 1",
            "push {r0, r1, r2, lr}",
            "mov r2, 0",
            "str r3, [sp]",
            "mov r3, 0",
            "bl sym.avio_seek",
            "add sp, sp, 0xc",
            "ldm sp!, {pc}"
        ]
    },
    "sym.imp.gai_strerror": {
        "function_address": "0x00009d20",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x8c8]!"
        ]
    },
    "fcn.0006b2e8": {
        "function_address": "0x0006b2e8",
        "instructions": [
            "push {r0, r1, r2, r3, r4, r5, r6, r7, r8, sl, fp, lr}",
            "mov r7, r2",
            "ldr r3, [0x0006b3c0]",
            "mov r2, 0",
            "mov r4, r0",
            "mov r5, r1",
            "bl fcn.0007d76c",
            "bl fcn.0007ddb8",
            "bl sym.imp.lrintf",
            "mov sl, r0",
            "asr fp, sl, 0x1f",
            "ldr r6, [0x0006b3c4]",
            "mov r0, sl",
            "mov r1, fp",
            "mov r2, 0x64",
            "mov r3, 0",
            "bl fcn.0007df14",
            "orrs r8, r2, r3",
            "add r6, pc, r6",
            "beq 0x6b350",
            "strd r4, r5, [sp]",
            "mov r0, 0",
            "str r7, [sp, 8]",
            "mov r1, 0x20",
            "ldr r2, [0x0006b3c8]",
            "b 0x6b380",
            "mov r0, sl",
            "mov r1, fp",
            "ldr r2, [0x0006b3cc]",
            "mov r3, 0",
            "bl fcn.0007df14",
            "orrs sl, r2, r3",
            "beq 0x6b388",
            "ldr r2, [0x0006b3d0]",
            "mov r0, r8",
            "mov r1, 0x20",
            "strd r4, r5, [sp]",
            "str r7, [sp, 8]",
            "add r2, r6, r2",
            "b 0x6b3b8",
            "ldr r3, [0x0006b3d4]",
            "mov r2, 0",
            "mov r0, r4",
            "mov r1, r5",
            "add r6, r6, r3",
            "ldr r3, [0x0006b3d8]",
            "bl fcn.0007d9d8",
            "mov r2, r6",
            "strd r0, r1, [sp]",
            "mov r0, sl",
            "mov r1, 0x20",
            "str r7, [sp, 8]",
            "bl sym.imp.av_log",
            "pop {r0, r1, r2, r3, r4, r5, r6, r7, r8, sl, fp, pc}"
        ]
    },
    "fcn.0006c878": {
        "function_address": "0x0006c878",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r4, r3",
            "ldr r3, [r0, 0x46c]",
            "sub sp, sp, 0x3c",
            "mov r5, r1",
            "mov r6, r2",
            "ldr sb, [0x0006d1ec]",
            "tst r3, 0x10",
            "str r0, [sp, 0x20]",
            "add sb, pc, sb",
            "bne 0x6d1e4",
            "tst r3, 8",
            "beq 0x6c8d0",
            "ldr r3, [r4]",
            "cmp r3, 0",
            "bne 0x6c8c4",
            "ldr r3, [r4, 4]",
            "cmp r3, 0x80000000",
            "beq 0x6c8d0",
            "mov r2, 0",
            "mov r3, 0x80000000",
            "strd r2, r3, [r4, 8]",
            "ldr r3, [r5, 8]",
            "subs r0, r6, 0",
            "movne r0, 1",
            "str r0, [sp, 0x24]",
            "ldr r2, [r3, 0xd4]",
            "cmp r2, 0x1c",
            "cmpne r6, 0",
            "beq 0x6c900",
            "ldr r2, [r6, 0x20]",
            "cmp r2, 3",
            "moveq r2, 1",
            "streq r2, [r3, 0xfc]",
            "ldr r3, [r3, 0xfc]",
            "str r3, [sp, 0x1c]",
            "ldr r1, [sp, 0x1c]",
            "ldr r3, [sp, 0x24]",
            "cmp r1, 0",
            "moveq r3, 0",
            "andne r3, r3, 1",
            "cmp r3, 0",
            "beq 0x6c930",
            "ldr r3, [r6, 0x20]",
            "subs r3, r3, 3",
            "movne r3, 1",
            "ldr sl, [r4]",
            "str r3, [sp, 0x28]",
            "ldr r7, [r4, 4]",
            "cmp sl, 0",
            "bne 0x6c94c",
            "cmp r7, 0x80000000",
            "beq 0x6c9c0",
            "ldrd r2, r3, [r4, 8]",
            "cmp r2, 0",
            "strd r2, r3, [sp, 0x10]",
            "bne 0x6c964",
            "cmp r3, 0x80000000",
            "beq 0x6c9c0",
            "ldr r8, [r5, 0x40]",
            "mov r0, 1",
            "mov r1, 0",
            "sub r2, r8, 1",
            "bl fcn.0007d398",
            "ldrd r2, r3, [sp, 0x10]",
            "subs r0, r2, r0",
            "sbc r1, r3, r1",
            "cmp r1, r7",
            "bgt 0x6c998",
            "bne 0x6c9c0",
            "cmp r0, sl",
            "bls 0x6c9c0",
            "cmp r8, 0x3e",
            "bgt 0x6c9c0",
            "mov r2, r8",
            "mov r0, 1",
            "mov r1, 0",
            "bl fcn.0007d398",
            "ldrd r2, r3, [sp, 0x10]",
            "subs r2, r2, r0",
            "sbc r3, r3, r1",
            "strd r2, r3, [r4, 8]",
            "ldr r3, [sp, 0x1c]",
            "cmp r3, 1",
            "bne 0x6ca2c",
            "ldrd r0, r1, [r4, 8]",
            "ldr r3, [r4]",
            "cmp r3, r0",
            "bne 0x6ca2c",
            "ldr r3, [r4, 4]",
            "cmp r3, r1",
            "bne 0x6ca2c",
            "mov sl, 0",
            "mov fp, 0x80000000",
            "ldr r8, [sp, 0x28]",
            "eor r3, r1, fp",
            "eor r2, r0, sl",
            "orrs r7, r2, r3",
            "moveq r3, 0",
            "andne r3, r8, 1",
            "cmp r3, 0",
            "beq 0x6ca2c",
            "ldr r2, [0x0006d1f0]",
            "strd r0, r1, [sp]",
            "mov r1, 0x30",
            "ldr r0, [sp, 0x20]",
            "add r2, sb, r2",
            "bl sym.imp.av_log",
            "strd sl, fp, [r4, 8]",
            "ldr r3, [r4, 0x28]",
            "cmp r3, 0",
            "bne 0x6cbe8",
            "add r3, r4, 0x14",
            "add r1, sp, 0x30",
            "str r3, [sp]",
            "add r0, sp, 0x34",
            "mov r2, r5",
            "mov r3, r6",
            "bl fcn.0006c190",
            "ldr r1, [sp, 0x30]",
            "cmp r1, 0",
            "beq 0x6cbe8",
            "ldr r3, [sp, 0x34]",
            "cmp r3, 0",
            "beq 0x6cbe8",
            "ldr r0, [r5, 0x38]",
            "smull r0, r1, r1, r0",
            "strd r0, r1, [sp]",
            "mov r1, 2",
            "ldr r2, [r5, 0x3c]",
            "mov r0, 1",
            "str r1, [sp, 8]",
            "smull r2, r3, r3, r2",
            "mov r1, 0",
            "bl sym.imp.av_rescale_rnd",
            "cmp r0, 0",
            "str r0, [r4, 0x28]",
            "beq 0x6cbe8",
            "ldr sb, [sp, 0x20]",
            "ldr r1, [sb, 0x42c]",
            "cmp r1, 0",
            "beq 0x6cbe8",
            "ldrd r2, r3, [r5, 0x18]",
            "cmp r2, 0",
            "bne 0x6cac4",
            "cmp r3, 0x80000000",
            "beq 0x6cb44",
            "ldr r8, [r4, 0x18]",
            "mov ip, r1",
            "mov sl, r0",
            "asr fp, sl, 0x1f",
            "strd sl, fp, [sp, 0x10]",
            "ldr r0, [ip, 0x18]",
            "cmp r0, r8",
            "bne 0x6cb2c",
            "ldr r0, [ip]",
            "ldr r7, [ip, 8]",
            "ldr sl, [ip, 4]",
            "cmp r7, r0",
            "bne 0x6cb38",
            "ldr r0, [ip, 0xc]",
            "cmp r0, sl",
            "bne 0x6cb38",
            "cmp r7, 0",
            "bne 0x6cb38",
            "cmp r0, 0x80000000",
            "bne 0x6cb38",
            "ldr r0, [ip, 0x28]",
            "cmp r0, 0",
            "bne 0x6cb38",
            "ldrd sl, fp, [sp, 0x10]",
            "subs r2, r2, sl",
            "sbc r3, r3, fp",
            "ldr ip, [ip, 0x48]",
            "cmp ip, 0",
            "bne 0x6cad8",
            "strd r2, r3, [r5, 0x18]",
            "ldr r7, [r4, 0x18]",
            "b 0x6cb60",
            "ldr r2, [r5, 0x68]",
            "ldr r3, [r5, 0x6c]",
            "orrs r3, r2, r3",
            "moveq r2, 0",
            "moveq r3, 0",
            "beq 0x6cb3c",
            "b 0x6cbe8",
            "ldr r0, [r1, 0x18]",
            "cmp r0, r7",
            "bne 0x6cbc4",
            "ldm r1, {r0, r8, ip}",
            "cmp ip, r0",
            "bne 0x6cbd0",
            "ldr r0, [r1, 0xc]",
            "cmp r0, r8",
            "bne 0x6cbd0",
            "cmp ip, 0",
            "bne 0x6cbd0",
            "cmp r0, 0x80000000",
            "bne 0x6cbd0",
            "ldr r0, [r1, 0x28]",
            "cmp r0, 0",
            "bne 0x6cbd0",
            "ldr r0, [r5, 8]",
            "strd r2, r3, [r1, 8]",
            "ldr r0, [r0, 0xfc]",
            "cmp r0, 0",
            "strdeq r2, r3, [r1]",
            "ldr r0, [r4, 0x28]",
            "adds r2, r2, r0",
            "str r0, [r1, 0x28]",
            "adc r3, r3, r0, asr 31",
            "ldr r1, [r1, 0x48]",
            "cmp r1, 0",
            "bne 0x6cb60",
            "ldr r1, [r5, 0x18]",
            "cmp r1, 0",
            "bne 0x6cbe8",
            "ldr r1, [r5, 0x1c]",
            "cmp r1, 0x80000000",
            "strdeq r2, r3, [r5, 0x68]",
            "ldr fp, [sp, 0x24]",
            "cmp fp, 0",
            "beq 0x6cd98",
            "ldr r3, [r5, 0x60]",
            "cmp r3, 3",
            "bne 0x6cc64",
            "ldr r8, [r4, 0x14]",
            "cmp r8, 0",
            "beq 0x6cc64",
            "ldr r2, [r4, 0x28]",
            "asr sb, r8, 0x1f",
            "ldrd r0, r1, [r6, 0xb8]",
            "strd r8, sb, [sp]",
            "asr r3, r2, 0x1f",
            "bl sym.imp.av_rescale",
            "ldrd r2, r3, [r4]",
            "cmp r2, 0",
            "bne 0x6cc38",
            "cmp r3, 0x80000000",
            "beq 0x6cc44",
            "adds r2, r2, r0",
            "adc r3, r3, r1",
            "strd r2, r3, [r4]",
            "ldrd r2, r3, [r4, 8]",
            "cmp r2, 0",
            "bne 0x6cc58",
            "cmp r3, 0x80000000",
            "beq 0x6cc64",
            "adds r2, r2, r0",
            "adc r3, r3, r1",
            "strd r2, r3, [r4, 8]",
            "ldr ip, [r6, 0xf0]",
            "cmp ip, 0",
            "str ip, [sp, 0x2c]",
            "blt 0x6cd98",
            "ldr r3, [r5, 8]",
            "ldr r1, [r5, 0x38]",
            "ldr r2, [r3, 0x24]",
            "smull r8, sb, r1, r2",
            "cmp sb, 0",
            "strd r8, sb, [sp, 0x10]",
            "bgt 0x6cc9c",
            "bne 0x6cd98",
            "cmp r8, 0",
            "beq 0x6cd98",
            "ldrd sl, fp, [r4, 8]",
            "ldr r2, [r5, 0x3c]",
            "ldr r8, [r3, 0x20]",
            "smull r8, sb, r2, r8",
            "cmp sl, 0",
            "bne 0x6ccbc",
            "cmp fp, 0x80000000",
            "beq 0x6ccfc",
            "ldr r0, [r6, 0xf4]",
            "mov r2, r0",
            "asr r3, r2, 0x1f",
            "mul r3, r8, r3",
            "mla r3, r0, sb, r3",
            "umull r0, r1, r8, r0",
            "add r1, r3, r1",
            "ldrd r2, r3, [sp, 0x10]",
            "bl fcn.0007ded0",
            "mov r2, sl",
            "mov r3, fp",
            "subs r2, r2, r0",
            "sbc r3, r3, r1",
            "mov r1, 0x190",
            "strd r2, r3, [r5, r1]",
            "b 0x6cd54",
            "mov r3, 0x190",
            "ldr r7, [r5, r3]",
            "add r3, r5, r3",
            "add r3, r3, 4",
            "ldr sl, [r3]",
            "cmp r7, 0",
            "bne 0x6cd20",
            "cmp sl, 0x80000000",
            "beq 0x6cd84",
            "ldr r0, [r6, 0xf4]",
            "mov r2, r0",
            "asr r3, r2, 0x1f",
            "mul r3, r8, r3",
            "mla r3, r0, sb, r3",
            "umull r0, r1, r8, r0",
            "add r1, r3, r1",
            "ldrd r2, r3, [sp, 0x10]",
            "bl fcn.0007ded0",
            "mov r3, sl",
            "adds sl, r7, r0",
            "adc fp, r3, r1",
            "strd sl, fp, [r4, 8]",
            "ldr r0, [r6, 0xf8]",
            "mov r2, r0",
            "asr r3, r2, 0x1f",
            "mul r3, r8, r3",
            "mla r3, r0, sb, r3",
            "umull r0, r1, r8, r0",
            "add r1, r3, r1",
            "ldrd r2, r3, [sp, 0x10]",
            "bl fcn.0007ded0",
            "adds sl, sl, r0",
            "adc fp, fp, r1",
            "strd sl, fp, [r4]",
            "ldr sb, [sp, 0x2c]",
            "cmp sb, 0",
            "ldrdne r2, r3, [r4, 8]",
            "movne r1, 0x190",
            "strdne r2, r3, [r5, r1]",
            "ldr r2, [r4, 8]",
            "ldr r3, [r4, 0xc]",
            "cmp r2, 0",
            "bne 0x6cdb0",
            "cmp r3, 0x80000000",
            "beq 0x6cde4",
            "ldr r1, [r4]",
            "ldr r0, [r4, 4]",
            "cmp r1, 0",
            "bne 0x6cdc8",
            "cmp r0, 0x80000000",
            "beq 0x6cde4",
            "cmp r0, r3",
            "bgt 0x6cddc",
            "bne 0x6cde4",
            "cmp r1, r2",
            "bls 0x6cde4",
            "mov sl, 1",
            "str sl, [sp, 0x28]",
            "ldr fp, [sp, 0x1c]",
            "cmp fp, 0",
            "beq 0x6ce08",
            "ldr r1, [sp, 0x24]",
            "cmp fp, 1",
            "movne r1, 0",
            "andeq r1, r1, 1",
            "cmp r1, 0",
            "beq 0x6d008",
            "ldr r1, [r5, 8]",
            "ldr r1, [r1, 0xd4]",
            "cmp r1, 0x1c",
            "beq 0x6d008",
            "ldr ip, [sp, 0x28]",
            "cmp ip, 0",
            "beq 0x6ceb4",
            "cmp r2, 0",
            "bne 0x6ce38",
            "cmp r3, 0x80000000",
            "ldrdeq r2, r3, [r5, 0x78]",
            "strdeq r2, r3, [r4, 8]",
            "ldrd r0, r1, [r4]",
            "ldrd r2, r3, [r4, 8]",
            "strd r0, r1, [sp]",
            "ldr r0, [sp, 0x20]",
            "ldr r1, [r4, 0x18]",
            "bl fcn.0006ada4",
            "ldr r3, [r4, 8]",
            "cmp r3, 0",
            "bne 0x6ce6c",
            "ldr r3, [r4, 0xc]",
            "cmp r3, 0x80000000",
            "ldrdeq r2, r3, [r5, 0x68]",
            "strdeq r2, r3, [r4, 8]",
            "ldr r3, [r5, 0x70]",
            "cmp r3, 0",
            "ldreq r3, [r4, 0x28]",
            "streq r3, [r5, 0x70]",
            "ldrd r2, r3, [r4, 8]",
            "cmp r2, 0",
            "bne 0x6ce90",
            "cmp r3, 0x80000000",
            "beq 0x6cea0",
            "ldr r1, [r5, 0x70]",
            "adds r2, r2, r1",
            "adc r3, r3, r1, asr 31",
            "strd r2, r3, [r5, 0x68]",
            "ldr r3, [r4, 0x28]",
            "str r3, [r5, 0x70]",
            "ldrd r2, r3, [r4]",
            "strd r2, r3, [r5, 0x78]",
            "b 0x6d008",
            "ldrd sl, fp, [r4]",
            "cmp sl, 0",
            "bne 0x6cee8",
            "cmp fp, 0x80000000",
            "bne 0x6cee8",
            "cmp r2, 0",
            "bne 0x6cf94",
            "cmp r3, 0x80000000",
            "bne 0x6cf94",
            "ldr r3, [r4, 0x28]",
            "cmp r3, 0",
            "bne 0x6cf94",
            "b 0x6d008",
            "ldr ip, [r4, 0x28]",
            "cmp ip, 0",
            "beq 0x6cf94",
            "ldrd r0, r1, [r5, 0x68]",
            "mov r2, ip",
            "asr r3, r2, 0x1f",
            "strd r2, r3, [sp, 0x10]",
            "subs r2, r0, r2",
            "sbc r3, r1, r3",
            "subs r2, r2, sl",
            "sbc r3, r3, fp",
            "cmp r3, 0",
            "bge 0x6cf30",
            "ldrd r2, r3, [sp, 0x10]",
            "subs r2, r2, r0",
            "sbc r3, r3, r1",
            "adds r2, r2, sl",
            "adc r3, r3, fp",
            "subs r0, r0, sl",
            "sbc r1, r1, fp",
            "asr r8, r1, 0x1f",
            "mov sb, r8",
            "eor r0, r0, r8",
            "eor r1, r1, r8",
            "subs r0, r0, r8",
            "sbc r1, r1, sb",
            "cmp r1, r3",
            "bgt 0x6cf64",
            "bne 0x6cf94",
            "cmp r0, r2",
            "bls 0x6cf94",
            "asr ip, ip, 3",
            "mov r0, ip",
            "asr r1, r0, 0x1f",
            "cmp r1, r3",
            "bgt 0x6cf84",
            "bne 0x6cf94",
            "cmp ip, r2",
            "bls 0x6cf94",
            "ldrd r8, sb, [sp, 0x10]",
            "adds sl, sl, r8",
            "adc fp, fp, sb",
            "strd sl, fp, [r4]",
            "ldr r3, [r4]",
            "cmp r3, 0",
            "bne 0x6cfb0",
            "ldr r3, [r4, 4]",
            "cmp r3, 0x80000000",
            "ldrdeq r2, r3, [r4, 8]",
            "strdeq r2, r3, [r4]",
            "ldrd r2, r3, [r4]",
            "ldr r0, [sp, 0x20]",
            "ldr r1, [r4, 0x18]",
            "strd r2, r3, [sp]",
            "bl fcn.0006ada4",
            "ldr r3, [r4]",
            "cmp r3, 0",
            "bne 0x6cfe0",
            "ldr r3, [r4, 4]",
            "cmp r3, 0x80000000",
            "ldrdeq r2, r3, [r5, 0x68]",
            "strdeq r2, r3, [r4]",
            "ldrd r2, r3, [r4]",
            "cmp r2, 0",
            "strd r2, r3, [r4, 8]",
            "bne 0x6cff8",
            "cmp r3, 0x80000000",
            "beq 0x6d008",
            "ldr r1, [r4, 0x28]",
            "adds r2, r2, r1",
            "adc r3, r3, r1, asr 31",
            "strd r2, r3, [r5, 0x68]",
            "ldrd r0, r1, [r4]",
            "mov r2, 0",
            "mov r3, 0x80000000",
            "ldr sl, [sp, 0x1c]",
            "eor r3, r3, r1",
            "eor r2, r2, r0",
            "orrs sb, r2, r3",
            "moveq r3, 0",
            "movne r3, 1",
            "cmp sl, 0x10",
            "movgt r3, 0",
            "andle r3, r3, 1",
            "cmp r3, 0",
            "beq 0x6d104",
            "strd r0, r1, [r5, 0xa8]",
            "add r2, r5, 0xb0",
            "add r3, r5, 0xa8",
            "mov ip, 0",
            "b 0x6d05c",
            "stmdb r2, {r8, sl}",
            "stmdb r3, {r7, sb}",
            "ldr fp, [sp, 0x1c]",
            "cmp ip, fp",
            "bge 0x6d098",
            "ldr sl, [r3, 4]",
            "add ip, ip, 1",
            "ldr sb, [r2, 4]",
            "ldr r8, [r3]",
            "add r3, r3, 8",
            "ldr r7, [r2]",
            "add r2, r2, 8",
            "cmp sl, sb",
            "bgt 0x6d054",
            "bne 0x6d098",
            "cmp r8, r7",
            "bhi 0x6d054",
            "ldr r3, [r4, 8]",
            "cmp r3, 0",
            "bne 0x6d0b4",
            "ldr r3, [r4, 0xc]",
            "cmp r3, 0x80000000",
            "ldrdeq r2, r3, [r5, 0xa8]",
            "strdeq r2, r3, [r4, 8]",
            "ldr r3, [r5, 8]",
            "ldr r3, [r3, 0xd4]",
            "cmp r3, 0x1c",
            "bne 0x6d0d8",
            "strd r0, r1, [sp]",
            "ldrd r2, r3, [r4, 8]",
            "ldr r0, [sp, 0x20]",
            "ldr r1, [r4, 0x18]",
            "bl fcn.0006ada4",
            "ldr r3, [r4, 0xc]",
            "ldr r1, [r5, 0x6c]",
            "ldr r2, [r4, 8]",
            "cmp r1, r3",
            "blt 0x6d0fc",
            "bne 0x6d104",
            "ldr r1, [r5, 0x68]",
            "cmp r1, r2",
            "bhs 0x6d104",
            "str r2, [r5, 0x68]",
            "str r3, [r5, 0x6c]",
            "ldr r3, [r5, 8]",
            "ldr r2, [r3, 0xd0]",
            "cmp r2, 1",
            "beq 0x6d184",
            "cmp r2, 0",
            "bne 0x6d1d8",
            "ldr r3, [r3, 0xd4]",
            "cmp r3, 0x21",
            "bhi 0x6d158",
            "cmp r3, 0x20",
            "bhs 0x6d184",
            "cmp r3, 0xe",
            "beq 0x6d184",
            "bhi 0x6d148",
            "sub r3, r3, 8",
            "cmp r3, 2",
            "b 0x6d150",
            "sub r3, r3, 0x19",
            "cmp r3, 1",
            "bhi 0x6d1d8",
            "b 0x6d184",
            "cmp r3, 0x5a",
            "beq 0x6d184",
            "bhi 0x6d174",
            "cmp r3, 0x24",
            "beq 0x6d184",
            "cmp r3, 0x45",
            "b 0x6d180",
            "cmp r3, 0x66",
            "beq 0x6d184",
            "cmp r3, 0x99",
            "bne 0x6d1d8",
            "ldr ip, [sp, 0x24]",
            "ldr r3, [r4, 0x1c]",
            "cmp ip, 0",
            "orr r3, r3, 1",
            "str r3, [r4, 0x1c]",
            "bne 0x6d1cc",
            "b 0x6d1e4",
            "mov r3, 0",
            "str r3, [r4, 0x1c]",
            "ldr r3, [r6, 0xe0]",
            "cmp r3, 1",
            "beq 0x6d1c8",
            "cmn r3, 1",
            "bne 0x6d1cc",
            "ldr r3, [r6, 0x20]",
            "cmp r3, 1",
            "bne 0x6d1cc",
            "str r3, [r4, 0x1c]",
            "ldrd r2, r3, [r6, 0xe8]",
            "strd r2, r3, [r4, 0x40]",
            "b 0x6d1e4",
            "ldr r0, [sp, 0x24]",
            "cmp r0, 0",
            "bne 0x6d1a0",
            "add sp, sp, 0x3c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0006ada4": {
        "function_address": "0x0006ada4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r7, r1",
            "ldr r1, [r0, 0x18]",
            "ldr r6, [r0, 0x42c]",
            "mov r0, 0",
            "ldr ip, [r1, r7, lsl 2]",
            "mov r1, 0x80000000",
            "eor r4, r2, r0",
            "eor r5, r3, r1",
            "orrs r8, r4, r5",
            "ldrd r4, r5, [ip, 0x18]",
            "movne r8, 0",
            "moveq r8, 1",
            "eor r1, r1, r5",
            "eor r0, r0, r4",
            "orrs r4, r0, r1",
            "moveq r1, r8",
            "orrne r1, r8, 1",
            "cmp r1, 0",
            "popne {r4, r5, r6, r7, r8, pc}",
            "ldrd r0, r1, [ip, 0x68]",
            "cmp r0, 0",
            "bne 0x6ae08",
            "cmp r1, 0x80000000",
            "popeq {r4, r5, r6, r7, r8, pc}",
            "subs r0, r2, r0",
            "sbc r1, r3, r1",
            "strd r2, r3, [ip, 0x68]",
            "strd r0, r1, [ip, 0x18]",
            "b 0x6aec0",
            "ldr r3, [r6, 0x18]",
            "cmp r3, r7",
            "bne 0x6aebc",
            "ldrd r2, r3, [r6]",
            "cmp r2, 0",
            "bne 0x6ae3c",
            "cmp r3, 0x80000000",
            "beq 0x6ae64",
            "ldr r1, [r6, 8]",
            "cmp r1, r2",
            "bne 0x6ae64",
            "ldr r1, [r6, 0xc]",
            "cmp r1, r3",
            "bne 0x6ae64",
            "ldrd r0, r1, [ip, 0x18]",
            "adds r0, r0, r2",
            "adc r1, r1, r3",
            "strd r0, r1, [r6]",
            "ldrd r0, r1, [r6, 8]",
            "cmp r0, 0",
            "bne 0x6ae78",
            "cmp r1, 0x80000000",
            "beq 0x6ae88",
            "ldrd r2, r3, [ip, 0x18]",
            "adds r2, r2, r0",
            "adc r3, r3, r1",
            "strd r2, r3, [r6, 8]",
            "ldr r3, [ip, 0x50]",
            "cmp r3, 0",
            "bne 0x6aebc",
            "ldr r3, [ip, 0x54]",
            "cmp r3, 0x80000000",
            "bne 0x6aebc",
            "ldm r6, {r2, r3}",
            "cmp r2, 0",
            "bne 0x6aeb4",
            "cmp r3, 0x80000000",
            "beq 0x6aebc",
            "str r2, [ip, 0x50]",
            "str r3, [ip, 0x54]",
            "ldr r6, [r6, 0x48]",
            "cmp r6, 0",
            "bne 0x6ae1c",
            "ldr r3, [ip, 0x50]",
            "cmp r3, 0",
            "popne {r4, r5, r6, r7, r8, pc}",
            "ldr r3, [ip, 0x54]",
            "cmp r3, 0x80000000",
            "ldrdeq r2, r3, [sp, 0x18]",
            "strdeq r2, r3, [ip, 0x50]",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "sym.imp.av_parser_parse2": {
        "function_address": "0x00009d14",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x8d0]!"
        ]
    },
    "sym.imp.avcodec_get_name": {
        "function_address": "0x00009e4c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x800]!"
        ]
    },
    "sym.imp.avcodec_is_open": {
        "function_address": "0x00009dbc",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x860]!"
        ]
    },
    "sym.imp.avcodec_get_frame_defaults": {
        "function_address": "0x00009bac",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x9c0]!"
        ]
    },
    "sym.imp.avcodec_decode_video2": {
        "function_address": "0x000099f0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0xae8]!"
        ]
    },
    "sym.imp.avcodec_decode_audio4": {
        "function_address": "0x00009e40",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0x808]!"
        ]
    },
    "sym.imp.av_get_pix_fmt_name": {
        "function_address": "0x00009984",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 0x89000",
            "ldr pc, [ip, 0xb30]!"
        ]
    },
    "fcn.00075f7c": {
        "function_address": "0x00075f7c",
        "instructions": [
            "push {r0, r1, r2, r3, r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r6, r0",
            "mov sl, r1",
            "mov r7, sp",
            "b 0x76018",
            "mov r1, sp",
            "mov r2, 0x10",
            "mov r0, r6",
            "bl sym.avio_read",
            "mov r0, r6",
            "bl sym.avio_rl64",
            "subs sb, r1, 0",
            "mov r4, r0",
            "mov r5, r1",
            "mov r8, r0",
            "bgt 0x75fc8",
            "bne 0x76028",
            "cmp r0, 0x18",
            "bls 0x76028",
            "mov r0, sp",
            "mov r1, sl",
            "mov r2, 0x10",
            "bl sym.imp.memcmp",
            "cmp r0, 0",
            "beq 0x76030",
            "mov r0, 7",
            "mov r1, 0",
            "adds r4, r4, r0",
            "mvn r0, 7",
            "adc r5, r5, r1",
            "and r2, r4, r0",
            "mvn r1, 0",
            "mvn r4, 0x17",
            "and r3, r5, r1",
            "adds r2, r2, r4",
            "mvn r5, 0",
            "mov r0, r6",
            "adc r3, r3, r5",
            "bl sym.avio_skip",
            "mov r0, r6",
            "bl sym.url_feof",
            "cmp r0, 0",
            "beq 0x75f90",
            "mvn r8, 0",
            "mvn sb, 0",
            "mov r0, r8",
            "mov r1, sb",
            "add sp, sp, 0x10",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "fcn.00076040": {
        "function_address": "0x00076040",
        "instructions": [
            "mov r3, 1",
            "push {r0, r1, r2, lr}",
            "mov r2, 0",
            "str r3, [sp]",
            "mov r3, 0",
            "bl sym.avio_seek",
            "add sp, sp, 0xc",
            "ldm sp!, {pc}"
        ]
    },
    "fcn.00076728": {
        "function_address": "0x00076728",
        "instructions": [
            "push {r4, r5, r6, r7, lr}",
            "mov r7, r1",
            "ldr r3, [0x000767d4]",
            "movw r1, 0x101",
            "cmp r2, r1",
            "sub sp, sp, 0x114",
            "mov r5, r0",
            "mov r6, r2",
            "add r3, pc, r3",
            "bls 0x76784",
            "ldr r2, [0x000767d8]",
            "mov r0, 0",
            "ldr ip, [0x000767dc]",
            "mov r1, 8",
            "add r2, r3, r2",
            "str r2, [sp]",
            "mov r2, 0x130",
            "str r2, [sp, 4]",
            "ldr r2, [0x000767e0]",
            "add r2, r3, r2",
            "add r3, r3, ip",
            "bl sym.imp.av_log",
            "bl sym.imp.abort",
            "add r4, sp, 0xc",
            "ldr r0, [r0, 0x10]",
            "mov r1, r4",
            "bl sym.avio_read",
            "cmp r0, 0",
            "blt 0x767cc",
            "add r3, sp, 0x110",
            "add r6, r3, r6",
            "mov r3, 0",
            "strb r3, [r6, -0x104]",
            "ldrb r0, [sp, 0xc]",
            "cmp r0, r3",
            "beq 0x767cc",
            "add r0, r5, 0x4b0",
            "mov r1, r7",
            "add r0, r0, 8",
            "mov r2, r4",
            "bl sym.imp.av_dict_set",
            "add sp, sp, 0x114",
            "pop {r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.000783ac": {
        "function_address": "0x000783ac",
        "instructions": [
            "push {r4, r5, r6, lr}",
            "mov r5, r0",
            "ldr r3, [r5, 0x10]!",
            "mov r4, r0",
            "ldr r0, [r3, 8]",
            "bl sym.imp.av_free",
            "mov r0, r5",
            "bl sym.imp.av_freep",
            "mov r0, r4",
            "bl sym.imp.av_freep",
            "mov r0, r4",
            "pop {r4, r5, r6, lr}",
            "b sym.imp.av_free"
        ]
    },
    "fcn.00078564": {
        "function_address": "0x00078564",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r7, r3",
            "ldr r3, [r0, 0xc]",
            "sub sp, sp, 0x104",
            "mov r8, r0",
            "ldr r6, [0x00078fb8]",
            "ldr r5, [sp, 0x128]",
            "ldr sb, [r3]",
            "ldr r3, [0x00078fbc]",
            "add r6, pc, r6",
            "str r1, [sp, 0xc0]",
            "mov r0, r5",
            "str r2, [sp, 0xc4]",
            "ldr r1, [r6, r3]",
            "bl fcn.000782d8",
            "cmp r0, 0",
            "ldr r4, [sp, 0x12c]",
            "ldr fp, [sp, 0x130]",
            "bne 0x78674",
            "ldr r3, [0x00078fc0]",
            "mov r0, r4",
            "ldr r1, [r6, r3]",
            "bl fcn.000782d8",
            "subs sl, r0, 0",
            "bne 0x78674",
            "cmp fp, 0x1f",
            "bgt 0x785f8",
            "ldr r2, [0x00078fc4]",
            "mov r0, r8",
            "mov r1, 0x18",
            "add r2, r6, r2",
            "bl sym.imp.av_log",
            "mov r0, sb",
            "mov r2, fp",
            "asr r3, r2, 0x1f",
            "bl sym.avio_skip",
            "b 0x78fa8",
            "sub r6, fp, 0x20",
            "add r4, sp, 0xd8",
            "mov r2, r6",
            "asr r3, r2, 0x1f",
            "mov r0, sb",
            "bl sym.avio_skip",
            "add r5, sp, 0xc8",
            "mov r0, sb",
            "mov r1, r4",
            "bl fcn.00050e58",
            "mov r0, sb",
            "mov r1, r5",
            "bl fcn.00050e58",
            "rsb r2, fp, 0",
            "mov r3, 1",
            "str r3, [sp]",
            "mov r0, sb",
            "asr r3, r2, 0x1f",
            "bl sym.avio_seek",
            "ldr r2, [sp, 0xc4]",
            "mov r3, r7",
            "mov r0, r8",
            "ldr r1, [sp, 0xc0]",
            "stm sp, {r4, r5, r6}",
            "bl fcn.00078564",
            "mov r2, 0x20",
            "mov r7, r0",
            "mov r3, 0",
            "mov r0, sb",
            "bl sym.avio_skip",
            "b 0x78fac",
            "ldr r3, [0x00078fc8]",
            "mov r0, r7",
            "ldr r1, [r6, r3]",
            "bl fcn.000782d8",
            "cmp r0, 0",
            "bne 0x788b0",
            "mov r0, r8",
            "ldr r1, [sp, 0xc0]",
            "ldr r2, [sp, 0xc4]",
            "mov r3, 1",
            "bl fcn.00078314",
            "subs r7, r0, 0",
            "beq 0x78fac",
            "ldr r3, [0x00078fcc]",
            "mov r0, r4",
            "ldr r1, [r6, r3]",
            "bl fcn.000782d8",
            "subs sl, r0, 0",
            "bne 0x786dc",
            "mov r0, sb",
            "ldr r1, [r7, 8]",
            "mov r2, fp",
            "bl fcn.00050ec4",
            "cmp r0, 0",
            "bge 0x78794",
            "b 0x78fa8",
            "ldr r3, [0x00078fd0]",
            "mov r0, r4",
            "ldr r1, [r6, r3]",
            "bl fcn.000782d8",
            "cmp r0, 0",
            "beq 0x78784",
            "ldrb r2, [r4, 1]",
            "mov r0, r8",
            "ldrb r3, [r4]",
            "mov r1, 0x18",
            "str r2, [sp]",
            "ldrb r2, [r4, 2]",
            "str r2, [sp, 4]",
            "ldrb r2, [r4, 3]",
            "str r2, [sp, 8]",
            "ldrb r2, [r4, 4]",
            "str r2, [sp, 0xc]",
            "ldrb r2, [r4, 5]",
            "str r2, [sp, 0x10]",
            "ldrb r2, [r4, 6]",
            "str r2, [sp, 0x14]",
            "ldrb r2, [r4, 7]",
            "str r2, [sp, 0x18]",
            "ldrb r2, [r4, 8]",
            "str r2, [sp, 0x1c]",
            "ldrb r2, [r4, 9]",
            "str r2, [sp, 0x20]",
            "ldrb r2, [r4, 0xa]",
            "str r2, [sp, 0x24]",
            "ldrb r2, [r4, 0xb]",
            "str r2, [sp, 0x28]",
            "ldrb r2, [r4, 0xc]",
            "str r2, [sp, 0x2c]",
            "ldrb r2, [r4, 0xd]",
            "str r2, [sp, 0x30]",
            "ldrb r2, [r4, 0xe]",
            "str r2, [sp, 0x34]",
            "ldrb r2, [r4, 0xf]",
            "str r2, [sp, 0x38]",
            "ldr r2, [0x00078fd4]",
            "add r2, r6, r2",
            "bl sym.imp.av_log",
            "mov r0, sb",
            "mov r2, fp",
            "asr r3, r2, 0x1f",
            "bl sym.avio_skip",
            "ldr r4, [0x00078fd8]",
            "add r3, sp, 0xf4",
            "add r4, r6, r4",
            "ldm r4, {r0, r1, r2}",
            "stm r3, {r0, r1, r2}",
            "add r0, r5, 4",
            "mov r1, r3",
            "mov r2, 0xc",
            "bl sym.imp.memcmp",
            "cmp r0, 0",
            "bne 0x787d8",
            "ldr r4, [r7, 8]",
            "ldr r0, [r5]",
            "ldr r1, [r4, 0x174]",
            "bl fcn.00050c5c",
            "str r0, [r4, 0xd4]",
            "b 0x78fac",
            "add r1, r4, 0xc",
            "mov r0, r5",
            "bl fcn.000782d8",
            "cmp r0, 0",
            "ldr r4, [r7, 8]",
            "bne 0x788a8",
            "ldr r3, [r4, 0x18]",
            "cmp r3, 0",
            "beq 0x78890",
            "ldr r2, [r4, 0x1c]",
            "cmp r2, 0x15",
            "ble 0x78890",
            "ldrh r3, [r3]",
            "cmp r3, 2",
            "beq 0x7882c",
            "cmp r3, 4",
            "beq 0x78834",
            "cmp r3, 1",
            "ldreq r3, [0x00078fdc]",
            "bne 0x7883c",
            "b 0x78838",
            "mov r3, 0x15000",
            "b 0x78838",
            "ldr r3, [0x00078fe0]",
            "str r3, [r4, 0xd4]",
            "ldr r3, [r4, 0x18]",
            "ldr r2, [r3, 2]",
            "ldrh r3, [r3, 6]",
            "sub r3, r3, 1",
            "str r2, [r4, 4]",
            "cmp r3, 7",
            "addls pc, pc, r3, lsl 2",
            "b 0x78fac",
            "b 0x7887c",
            "b 0x7887c",
            "b 0x78fac",
            "b 0x7887c",
            "b 0x78fac",
            "b 0x78fac",
            "b 0x78fac",
            "b 0x78884",
            "mov r3, 2",
            "b 0x78888",
            "mov r3, 1",
            "str r3, [r4, 0x40]",
            "b 0x78fac",
            "ldr r2, [0x00078fe4]",
            "mov r0, r8",
            "mov r1, 0x18",
            "add r2, r6, r2",
            "bl sym.imp.av_log",
            "b 0x78fac",
            "ldr r3, [0x00078fe8]",
            "b 0x78a38",
            "ldr r3, [0x00078fec]",
            "mov r0, r7",
            "ldr r1, [r6, r3]",
            "bl fcn.000782d8",
            "subs r3, r0, 0",
            "bne 0x78aec",
            "mov r0, r8",
            "ldr r1, [sp, 0xc0]",
            "ldr r2, [sp, 0xc4]",
            "bl fcn.00078314",
            "subs r7, r0, 0",
            "beq 0x78fac",
            "ldr r1, [0x00078fd8]",
            "mov r0, r4",
            "add r1, r6, r1",
            "add r1, r1, 0x1c",
            "bl fcn.000782d8",
            "cmp r0, 0",
            "beq 0x78914",
            "ldr r3, [0x00078ff0]",
            "mov r0, r4",
            "ldr r1, [r6, r3]",
            "bl fcn.000782d8",
            "cmp r0, 0",
            "bne 0x78934",
            "ldr r0, [r8, 0xc]",
            "mov r1, r7",
            "bl fcn.00078534",
            "rsb r2, r0, fp",
            "mov r0, sb",
            "bic r2, r2, r2, asr 31",
            "asr r3, r2, 0x1f",
            "b 0x789e8",
            "ldr r3, [0x00078fd0]",
            "mov r0, r4",
            "ldr r1, [r6, r3]",
            "bl fcn.000782d8",
            "cmp r0, 0",
            "beq 0x789dc",
            "ldrb r2, [r4, 1]",
            "mov r0, r8",
            "ldrb r3, [r4]",
            "mov r1, 0x18",
            "str r2, [sp]",
            "ldrb r2, [r4, 2]",
            "str r2, [sp, 4]",
            "ldrb r2, [r4, 3]",
            "str r2, [sp, 8]",
            "ldrb r2, [r4, 4]",
            "str r2, [sp, 0xc]",
            "ldrb r2, [r4, 5]",
            "str r2, [sp, 0x10]",
            "ldrb r2, [r4, 6]",
            "str r2, [sp, 0x14]",
            "ldrb r2, [r4, 7]",
            "str r2, [sp, 0x18]",
            "ldrb r2, [r4, 8]",
            "str r2, [sp, 0x1c]",
            "ldrb r2, [r4, 9]",
            "str r2, [sp, 0x20]",
            "ldrb r2, [r4, 0xa]",
            "str r2, [sp, 0x24]",
            "ldrb r2, [r4, 0xb]",
            "str r2, [sp, 0x28]",
            "ldrb r2, [r4, 0xc]",
            "str r2, [sp, 0x2c]",
            "ldrb r2, [r4, 0xd]",
            "str r2, [sp, 0x30]",
            "ldrb r2, [r4, 0xe]",
            "str r2, [sp, 0x34]",
            "ldrb r2, [r4, 0xf]",
            "str r2, [sp, 0x38]",
            "ldr r2, [0x00078fd4]",
            "add r2, r6, r2",
            "bl sym.imp.av_log",
            "mov r0, sb",
            "mov r2, fp",
            "asr r3, r2, 0x1f",
            "bl sym.avio_skip",
            "ldr r2, [0x00078fd8]",
            "add r3, sp, 0xe8",
            "add r2, r6, r2",
            "add r2, r2, 0x2c",
            "ldm r2, {r0, r1, r2}",
            "stm r3, {r0, r1, r2}",
            "add r0, r5, 4",
            "mov r1, r3",
            "mov r2, 0xc",
            "bl sym.imp.memcmp",
            "cmp r0, 0",
            "ldr r4, [r7, 8]",
            "bne 0x78a34",
            "ldr r3, [0x00078ff4]",
            "ldr r1, [r5]",
            "ldr r0, [r6, r3]",
            "bl fcn.0006ffc8",
            "b 0x78a44",
            "ldr r3, [0x00078ff8]",
            "ldr r0, [r6, r3]",
            "mov r1, r5",
            "bl fcn.00050e84",
            "ldr r3, [r7, 8]",
            "str r0, [r4, 0xd4]",
            "ldr r3, [r3, 0xd4]",
            "cmp r3, 0",
            "bne 0x78fac",
            "ldrb r2, [r5, 1]",
            "mov r0, r8",
            "ldrb r3, [r5]",
            "mov r1, 0x18",
            "str r2, [sp]",
            "ldrb r2, [r5, 2]",
            "str r2, [sp, 4]",
            "ldrb r2, [r5, 3]",
            "str r2, [sp, 8]",
            "ldrb r2, [r5, 4]",
            "str r2, [sp, 0xc]",
            "ldrb r2, [r5, 5]",
            "str r2, [sp, 0x10]",
            "ldrb r2, [r5, 6]",
            "str r2, [sp, 0x14]",
            "ldrb r2, [r5, 7]",
            "str r2, [sp, 0x18]",
            "ldrb r2, [r5, 8]",
            "str r2, [sp, 0x1c]",
            "ldrb r2, [r5, 9]",
            "str r2, [sp, 0x20]",
            "ldrb r2, [r5, 0xa]",
            "str r2, [sp, 0x24]",
            "ldrb r2, [r5, 0xb]",
            "str r2, [sp, 0x28]",
            "ldrb r2, [r5, 0xc]",
            "str r2, [sp, 0x2c]",
            "ldrb r2, [r5, 0xd]",
            "str r2, [sp, 0x30]",
            "ldrb r2, [r5, 0xe]",
            "str r2, [sp, 0x34]",
            "ldrb r2, [r5, 0xf]",
            "str r2, [sp, 0x38]",
            "ldr r2, [0x00078ffc]",
            "add r2, r6, r2",
            "bl sym.imp.av_log",
            "b 0x78fac",
            "ldr sl, [0x00078fd8]",
            "mov r0, r7",
            "add sl, r6, sl",
            "add r1, sl, 0x38",
            "bl fcn.000782d8",
            "cmp r0, 0",
            "bne 0x78bfc",
            "mov r0, r5",
            "add r1, sl, 0x48",
            "bl fcn.000782d8",
            "cmp r0, 0",
            "bne 0x78bfc",
            "mov r0, r8",
            "ldr r1, [sp, 0xc0]",
            "ldr r2, [sp, 0xc4]",
            "mov r3, 3",
            "bl fcn.00078314",
            "subs r7, r0, 0",
            "beq 0x78fac",
            "ldr r3, [0x00078fd0]",
            "mov r0, r4",
            "ldr r1, [r6, r3]",
            "bl fcn.000782d8",
            "cmp r0, 0",
            "beq 0x78be0",
            "ldrb r2, [r4, 1]",
            "mov r0, r8",
            "ldrb r3, [r4]",
            "mov r1, 0x18",
            "str r2, [sp]",
            "ldrb r2, [r4, 2]",
            "str r2, [sp, 4]",
            "ldrb r2, [r4, 3]",
            "str r2, [sp, 8]",
            "ldrb r2, [r4, 4]",
            "str r2, [sp, 0xc]",
            "ldrb r2, [r4, 5]",
            "str r2, [sp, 0x10]",
            "ldrb r2, [r4, 6]",
            "str r2, [sp, 0x14]",
            "ldrb r2, [r4, 7]",
            "str r2, [sp, 0x18]",
            "ldrb r2, [r4, 8]",
            "str r2, [sp, 0x1c]",
            "ldrb r2, [r4, 9]",
            "str r2, [sp, 0x20]",
            "ldrb r2, [r4, 0xa]",
            "str r2, [sp, 0x24]",
            "ldrb r2, [r4, 0xb]",
            "str r2, [sp, 0x28]",
            "ldrb r2, [r4, 0xc]",
            "str r2, [sp, 0x2c]",
            "ldrb r2, [r4, 0xd]",
            "str r2, [sp, 0x30]",
            "ldrb r2, [r4, 0xe]",
            "str r2, [sp, 0x34]",
            "ldrb r2, [r4, 0xf]",
            "str r2, [sp, 0x38]",
            "ldr r2, [0x00078fd4]",
            "add r2, r6, r2",
            "bl sym.imp.av_log",
            "mov r2, fp",
            "asr r3, r2, 0x1f",
            "mov r0, sb",
            "bl sym.avio_skip",
            "ldr r3, [r7, 8]",
            "ldr r2, [0x00079000]",
            "b 0x78d1c",
            "ldr sl, [0x00078fd8]",
            "mov r0, r7",
            "add sl, r6, sl",
            "add r1, sl, 0x58",
            "bl fcn.000782d8",
            "cmp r0, 0",
            "bne 0x78d24",
            "mov r0, r5",
            "add r1, sl, 0x68",
            "bl fcn.000782d8",
            "cmp r0, 0",
            "beq 0x78c40",
            "mov r0, r5",
            "add r1, sl, 0x78",
            "bl fcn.000782d8",
            "cmp r0, 0",
            "bne 0x78d24",
            "mov r0, r8",
            "ldr r1, [sp, 0xc0]",
            "ldr r2, [sp, 0xc4]",
            "mov r3, 3",
            "bl fcn.00078314",
            "subs r7, r0, 0",
            "beq 0x78fac",
            "ldr r3, [0x00078fd0]",
            "mov r0, r4",
            "ldr r1, [r6, r3]",
            "bl fcn.000782d8",
            "cmp r0, 0",
            "beq 0x78d04",
            "ldrb r2, [r4, 1]",
            "mov r0, r8",
            "ldrb r3, [r4]",
            "mov r1, 0x18",
            "str r2, [sp]",
            "ldrb r2, [r4, 2]",
            "str r2, [sp, 4]",
            "ldrb r2, [r4, 3]",
            "str r2, [sp, 8]",
            "ldrb r2, [r4, 4]",
            "str r2, [sp, 0xc]",
            "ldrb r2, [r4, 5]",
            "str r2, [sp, 0x10]",
            "ldrb r2, [r4, 6]",
            "str r2, [sp, 0x14]",
            "ldrb r2, [r4, 7]",
            "str r2, [sp, 0x18]",
            "ldrb r2, [r4, 8]",
            "str r2, [sp, 0x1c]",
            "ldrb r2, [r4, 9]",
            "str r2, [sp, 0x20]",
            "ldrb r2, [r4, 0xa]",
            "str r2, [sp, 0x24]",
            "ldrb r2, [r4, 0xb]",
            "str r2, [sp, 0x28]",
            "ldrb r2, [r4, 0xc]",
            "str r2, [sp, 0x2c]",
            "ldrb r2, [r4, 0xd]",
            "str r2, [sp, 0x30]",
            "ldrb r2, [r4, 0xe]",
            "str r2, [sp, 0x34]",
            "ldrb r2, [r4, 0xf]",
            "str r2, [sp, 0x38]",
            "ldr r2, [0x00078fd4]",
            "add r2, r6, r2",
            "bl sym.imp.av_log",
            "mov r2, fp",
            "asr r3, r2, 0x1f",
            "mov r0, sb",
            "bl sym.avio_skip",
            "ldr r3, [r7, 8]",
            "ldr r2, [0x00079004]",
            "str r2, [r3, 0xd4]",
            "b 0x78fac",
            "ldr sl, [0x00078fd8]",
            "mov r0, r7",
            "add sl, r6, sl",
            "add r1, sl, 0x88",
            "bl fcn.000782d8",
            "cmp r0, 0",
            "bne 0x78e00",
            "mov r0, r5",
            "add r1, sl, 0x98",
            "bl fcn.000782d8",
            "cmp r0, 0",
            "bne 0x78e00",
            "ldr r3, [0x00078fd0]",
            "mov r0, r4",
            "ldr r1, [r6, r3]",
            "bl fcn.000782d8",
            "cmp r0, 0",
            "beq 0x78f90",
            "ldrb r2, [r4, 1]",
            "mov r0, r8",
            "ldrb r3, [r4]",
            "mov r1, 0x18",
            "str r2, [sp]",
            "ldrb r2, [r4, 2]",
            "str r2, [sp, 4]",
            "ldrb r2, [r4, 3]",
            "str r2, [sp, 8]",
            "ldrb r2, [r4, 4]",
            "str r2, [sp, 0xc]",
            "ldrb r2, [r4, 5]",
            "str r2, [sp, 0x10]",
            "ldrb r2, [r4, 6]",
            "str r2, [sp, 0x14]",
            "ldrb r2, [r4, 7]",
            "str r2, [sp, 0x18]",
            "ldrb r2, [r4, 8]",
            "str r2, [sp, 0x1c]",
            "ldrb r2, [r4, 9]",
            "str r2, [sp, 0x20]",
            "ldrb r2, [r4, 0xa]",
            "str r2, [sp, 0x24]",
            "ldrb r2, [r4, 0xb]",
            "str r2, [sp, 0x28]",
            "ldrb r2, [r4, 0xc]",
            "str r2, [sp, 0x2c]",
            "ldrb r2, [r4, 0xd]",
            "str r2, [sp, 0x30]",
            "ldrb r2, [r4, 0xe]",
            "str r2, [sp, 0x34]",
            "ldrb r2, [r4, 0xf]",
            "str r2, [sp, 0x38]",
            "ldr r2, [0x00078fd4]",
            "add r2, r6, r2",
            "bl sym.imp.av_log",
            "b 0x78f90",
            "ldrb r2, [r7, 1]",
            "mov r0, r8",
            "ldrb r3, [r7]",
            "mov r1, 0x18",
            "str r2, [sp]",
            "ldrb r2, [r7, 2]",
            "str r2, [sp, 4]",
            "ldrb r2, [r7, 3]",
            "str r2, [sp, 8]",
            "ldrb r2, [r7, 4]",
            "str r2, [sp, 0xc]",
            "ldrb r2, [r7, 5]",
            "str r2, [sp, 0x10]",
            "ldrb r2, [r7, 6]",
            "str r2, [sp, 0x14]",
            "ldrb r2, [r7, 7]",
            "str r2, [sp, 0x18]",
            "ldrb r2, [r7, 8]",
            "str r2, [sp, 0x1c]",
            "ldrb r2, [r7, 9]",
            "str r2, [sp, 0x20]",
            "ldrb r2, [r7, 0xa]",
            "str r2, [sp, 0x24]",
            "ldrb r2, [r7, 0xb]",
            "str r2, [sp, 0x28]",
            "ldrb r2, [r7, 0xc]",
            "str r2, [sp, 0x2c]",
            "ldrb r2, [r7, 0xd]",
            "str r2, [sp, 0x30]",
            "ldrb r2, [r7, 0xe]",
            "str r2, [sp, 0x34]",
            "ldrb r2, [r7, 0xf]",
            "str r2, [sp, 0x38]",
            "ldrb r2, [r5]",
            "str r2, [sp, 0x3c]",
            "ldrb r2, [r5, 1]",
            "str r2, [sp, 0x40]",
            "ldrb r2, [r5, 2]",
            "str r2, [sp, 0x44]",
            "ldrb r2, [r5, 3]",
            "str r2, [sp, 0x48]",
            "ldrb r2, [r5, 4]",
            "str r2, [sp, 0x4c]",
            "ldrb r2, [r5, 5]",
            "str r2, [sp, 0x50]",
            "ldrb r2, [r5, 6]",
            "str r2, [sp, 0x54]",
            "ldrb r2, [r5, 7]",
            "str r2, [sp, 0x58]",
            "ldrb r2, [r5, 8]",
            "str r2, [sp, 0x5c]",
            "ldrb r2, [r5, 9]",
            "str r2, [sp, 0x60]",
            "ldrb r2, [r5, 0xa]",
            "str r2, [sp, 0x64]",
            "ldrb r2, [r5, 0xb]",
            "str r2, [sp, 0x68]",
            "ldrb r2, [r5, 0xc]",
            "str r2, [sp, 0x6c]",
            "ldrb r2, [r5, 0xd]",
            "str r2, [sp, 0x70]",
            "ldrb r2, [r5, 0xe]",
            "str r2, [sp, 0x74]",
            "ldrb r2, [r5, 0xf]",
            "str r2, [sp, 0x78]",
            "ldrb r2, [r4]",
            "str r2, [sp, 0x7c]",
            "ldrb r2, [r4, 1]",
            "str r2, [sp, 0x80]",
            "ldrb r2, [r4, 2]",
            "str r2, [sp, 0x84]",
            "ldrb r2, [r4, 3]",
            "str r2, [sp, 0x88]",
            "ldrb r2, [r4, 4]",
            "str r2, [sp, 0x8c]",
            "ldrb r2, [r4, 5]",
            "str r2, [sp, 0x90]",
            "ldrb r2, [r4, 6]",
            "str r2, [sp, 0x94]",
            "ldrb r2, [r4, 7]",
            "str r2, [sp, 0x98]",
            "ldrb r2, [r4, 8]",
            "str r2, [sp, 0x9c]",
            "ldrb r2, [r4, 9]",
            "str r2, [sp, 0xa0]",
            "ldrb r2, [r4, 0xa]",
            "str r2, [sp, 0xa4]",
            "ldrb r2, [r4, 0xb]",
            "str r2, [sp, 0xa8]",
            "ldrb r2, [r4, 0xc]",
            "str r2, [sp, 0xac]",
            "ldrb r2, [r4, 0xd]",
            "str r2, [sp, 0xb0]",
            "ldrb r2, [r4, 0xe]",
            "str r2, [sp, 0xb4]",
            "ldrb r2, [r4, 0xf]",
            "str r2, [sp, 0xb8]",
            "ldr r2, [0x00079008]",
            "add r2, r6, r2",
            "bl sym.imp.av_log",
            "mov r0, sb",
            "mov r2, fp",
            "asr r3, r2, 0x1f",
            "bl sym.avio_skip",
            "mov r7, 0",
            "b 0x78fac",
            "mov r7, sl",
            "mov r0, r7",
            "add sp, sp, 0x104",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.000782d8": {
        "function_address": "0x000782d8",
        "instructions": [
            "mov r2, 0x10",
            "b sym.imp.memcmp"
        ]
    },
    "fcn.00078314": {
        "function_address": "0x00078314",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "subs r4, r1, 0",
            "mov r5, r0",
            "mov r6, r2",
            "mov r7, r3",
            "beq 0x78354",
            "ldr r0, [r4, 8]",
            "ldr r3, [r0, 0x18]",
            "cmp r3, 0",
            "beq 0x78380",
            "add r0, r0, 0x18",
            "bl sym.imp.av_freep",
            "ldr r3, [r4, 8]",
            "mov r2, 0",
            "str r2, [r3, 0x1c]",
            "b 0x78380",
            "mov r0, 4",
            "bl sym.imp.av_mallocz",
            "subs r8, r0, 0",
            "beq 0x783a0",
            "mov r1, r4",
            "mov r0, r5",
            "bl sym.avformat_new_stream",
            "subs r4, r0, 0",
            "beq 0x783a0",
            "str r6, [r4, 4]",
            "str r8, [r4, 0x14]",
            "ldr r3, [r4, 8]",
            "mov r2, 1",
            "mov r0, r4",
            "mov r1, 0x40",
            "str r7, [r3, 0xd0]",
            "str r2, [r4, 0x60]",
            "ldr r3, [0x000783a8]",
            "bl sym.avpriv_set_pts_info",
            "mov r0, r4",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "fcn.00078534": {
        "function_address": "0x00078534",
        "instructions": [
            "push {r3, r4, r5, lr}",
            "mov r2, 0x48",
            "ldr r4, [r0]",
            "mov r5, r1",
            "mov r3, 0",
            "mov r0, r4",
            "bl sym.avio_skip",
            "mov r0, r4",
            "mov r1, r5",
            "bl fcn.00050d10",
            "mov r0, 0x70",
            "pop {r3, r4, r5, pc}"
        ]
    },
    "fcn.0007900c": {
        "function_address": "0x0007900c",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x2cc",
            "ldr r8, [0x00079a1c]",
            "mov r7, r0",
            "str r3, [sp, 0x5c]",
            "ldr r3, [0x00079a20]",
            "add r8, pc, r8",
            "ldr r6, [0x00079a24]",
            "mov sl, r8",
            "ldr sb, [r0, 0xc]",
            "add r3, r8, r3",
            "str r2, [sp, 0x58]",
            "str r3, [sp, 0x64]",
            "add r6, r8, r6",
            "ldr r3, [0x00079a28]",
            "add r2, r6, 0xa8",
            "str r1, [sp, 0x54]",
            "ldr r5, [sb]",
            "add r3, r8, r3",
            "str r2, [sp, 0x60]",
            "str r3, [sp, 0x68]",
            "ldr r3, [0x00079a2c]",
            "add r3, r8, r3",
            "str r3, [sp, 0x6c]",
            "b 0x79a00",
            "add r4, sp, 0x2b4",
            "mov r0, r5",
            "mov r1, r4",
            "bl fcn.00050e58",
            "mov r0, r5",
            "bl sym.avio_rl32",
            "cmp r0, 0x1f",
            "str r0, [sp, 0x48]",
            "ble 0x79a10",
            "mov r0, r5",
            "bl sym.avio_rl32",
            "lsl r0, r0, 0x11",
            "mov r2, 8",
            "mov r3, 0",
            "lsr r8, r0, 0x11",
            "mov r0, r5",
            "bl sym.avio_skip",
            "ldr r3, [0x00079a30]",
            "mov r0, r4",
            "ldr r1, [sl, r3]",
            "bl fcn.000782d8",
            "cmp r0, 0",
            "str r0, [sp, 0x50]",
            "bne 0x79174",
            "mov r0, r7",
            "mov r1, r8",
            "bl fcn.000749e8",
            "cmp r0, 0",
            "bge 0x799dc",
            "mov r2, 0x1c",
            "mov r3, 0",
            "mov r0, r5",
            "add fp, sp, 0x2a4",
            "bl sym.avio_skip",
            "add r3, sp, 0x70",
            "mov r0, r5",
            "mov r1, r3",
            "str r3, [sp, 0x4c]",
            "bl fcn.00050e58",
            "add ip, sp, 0x294",
            "mov r0, r5",
            "mov r1, ip",
            "str ip, [sp, 0x44]",
            "bl fcn.00050e58",
            "mov r2, 0xc",
            "mov r3, 0",
            "mov r0, r5",
            "bl sym.avio_skip",
            "mov r1, fp",
            "mov r0, r5",
            "bl fcn.00050e58",
            "mov r0, r5",
            "bl sym.avio_rl32",
            "ldr ip, [sp, 0x44]",
            "mov r4, r0",
            "str r0, [sp, 8]",
            "mov r2, r8",
            "mov r0, r7",
            "ldr r1, [sp, 0x50]",
            "ldr r3, [sp, 0x4c]",
            "add r4, r4, 0x7c",
            "str ip, [sp]",
            "str fp, [sp, 4]",
            "bl fcn.00078564",
            "b 0x799e0",
            "ldr r3, [0x00079a34]",
            "mov r0, r4",
            "ldr r1, [sl, r3]",
            "bl fcn.000782d8",
            "cmp r0, 0",
            "bne 0x79250",
            "mov r0, r7",
            "mov r1, r8",
            "bl fcn.000749e8",
            "subs ip, r0, 0",
            "blt 0x799dc",
            "ldr r3, [r7, 0x18]",
            "ldr r3, [r3, ip, lsl 2]",
            "ldr r3, [r3, 0x14]",
            "ldr r3, [r3]",
            "cmp r3, 0",
            "bne 0x799dc",
            "mov r3, 0",
            "mov r2, 0xc",
            "mov r0, r5",
            "str ip, [sp, 0x44]",
            "bl sym.avio_skip",
            "add r2, sp, 0x2a4",
            "add r4, sp, 0x294",
            "mov r1, r2",
            "mov r0, r5",
            "str r2, [sp, 0x50]",
            "add fp, sp, 0x70",
            "bl fcn.00050e58",
            "mov r1, r4",
            "mov r0, r5",
            "bl fcn.00050e58",
            "mov r2, 0xc",
            "mov r3, 0",
            "mov r0, r5",
            "bl sym.avio_skip",
            "mov r1, fp",
            "mov r0, r5",
            "bl fcn.00050e58",
            "mov r0, r5",
            "bl sym.avio_rl32",
            "ldr r3, [r7, 0x18]",
            "mov r2, r8",
            "ldr ip, [sp, 0x44]",
            "str r4, [sp]",
            "str r0, [sp, 8]",
            "str r0, [sp, 0x4c]",
            "mov r0, r7",
            "str fp, [sp, 4]",
            "ldr r1, [r3, ip, lsl 2]",
            "ldr r3, [sp, 0x50]",
            "bl fcn.00078564",
            "ldr r3, [sp, 0x4c]",
            "add r4, r3, 0x6c",
            "b 0x799e0",
            "mov r0, r4",
            "ldr r1, [sp, 0x60]",
            "bl fcn.000782d8",
            "cmp r0, 0",
            "beq 0x792c8",
            "mov r0, r4",
            "add r1, r6, 0xb8",
            "bl fcn.000782d8",
            "cmp r0, 0",
            "beq 0x792c8",
            "mov r0, r4",
            "add r1, r6, 0xc8",
            "bl fcn.000782d8",
            "cmp r0, 0",
            "beq 0x792c8",
            "mov r0, r4",
            "add r1, r6, 0xd8",
            "bl fcn.000782d8",
            "cmp r0, 0",
            "beq 0x792c8",
            "mov r0, r4",
            "add r1, r6, 0xe8",
            "bl fcn.000782d8",
            "cmp r0, 0",
            "beq 0x792c8",
            "mov r0, r4",
            "add r1, r6, 0xf8",
            "bl fcn.000782d8",
            "cmp r0, 0",
            "bne 0x793a0",
            "mov r0, r7",
            "mov r1, r8",
            "bl fcn.000749e8",
            "cmp r0, 0",
            "blt 0x799dc",
            "ldr r3, [r7, 0x18]",
            "mov r2, 8",
            "add r4, sp, 0x2b4",
            "ldr r3, [r3, r0, lsl 2]",
            "mov r0, r5",
            "str r3, [sp, 0x4c]",
            "add r3, sp, 0x70",
            "str r3, [sp, 0x2c4]",
            "mov r3, 0",
            "bl sym.avio_skip",
            "mov r0, r4",
            "add r1, r6, 0xb8",
            "bl fcn.000782d8",
            "cmp r0, 0",
            "beq 0x79330",
            "mov r0, r4",
            "add r1, r6, 0xc8",
            "bl fcn.000782d8",
            "cmp r0, 0",
            "movne r4, 0x28",
            "bne 0x79344",
            "mov r4, 0x2e",
            "mov r0, r5",
            "mov r2, 6",
            "mov r3, 0",
            "bl sym.avio_skip",
            "ldr r2, [sp, 0x48]",
            "movw r3, 0x102",
            "add fp, sp, 0x70",
            "mov r0, r5",
            "mov r1, fp",
            "rsb r8, r4, r2",
            "cmp r8, r3",
            "movhs r8, r3",
            "mov r2, r8",
            "add r4, r8, r4",
            "bl sym.avio_read",
            "add r8, fp, r8",
            "mov r2, 0",
            "mov r0, r7",
            "ldr r1, [sp, 0x4c]",
            "add r3, sp, 0x2c4",
            "str r8, [sp]",
            "str r2, [sp, 4]",
            "str r2, [sp, 8]",
            "str r2, [sp, 0xc]",
            "str r2, [sp, 0x10]",
            "bl fcn.00040714",
            "b 0x799e0",
            "add r4, sp, 0x2b4",
            "add r1, r6, 0x108",
            "mov r0, r4",
            "bl fcn.000782d8",
            "cmp r0, 0",
            "bne 0x79414",
            "mov r0, r7",
            "mov r1, r8",
            "bl fcn.000749e8",
            "cmp r0, 0",
            "blt 0x799dc",
            "ldr r3, [r7, 0x18]",
            "mov r2, 8",
            "ldr r4, [r3, r0, lsl 2]",
            "mov r3, 0",
            "mov r0, r5",
            "bl sym.avio_skip",
            "mov r0, r5",
            "bl sym.avio_r8",
            "cmp r0, 2",
            "ldreq r3, [r4, 0x98]",
            "orreq r3, r3, 0x80",
            "beq 0x7940c",
            "cmp r0, 3",
            "bne 0x799bc",
            "ldr r3, [r4, 0x98]",
            "orr r3, r3, 0x100",
            "str r3, [r4, 0x98]",
            "b 0x799bc",
            "mov r0, r4",
            "add r1, r6, 0x118",
            "bl fcn.000782d8",
            "cmp r0, 0",
            "bne 0x79478",
            "mov r0, r7",
            "mov r1, r8",
            "bl fcn.000749e8",
            "subs r4, r0, 0",
            "blt 0x799dc",
            "mov r2, 0xc",
            "mov r3, 0",
            "mov r0, r5",
            "bl sym.avio_skip",
            "mov r0, r5",
            "bl sym.avio_rl32",
            "cmp r0, 0",
            "beq 0x799cc",
            "ldr r2, [0x00079a38]",
            "mov r0, r7",
            "mov r1, 0x18",
            "mov r3, r4",
            "add r2, sl, r2",
            "bl sym.imp.av_log",
            "b 0x799cc",
            "mov r0, r4",
            "add r1, r6, 0x128",
            "bl fcn.000782d8",
            "subs fp, r0, 0",
            "bne 0x7952c",
            "mov r0, r7",
            "mov r1, r8",
            "bl fcn.000749e8",
            "cmp r0, 0",
            "blt 0x799dc",
            "ldr r3, [r7, 0x18]",
            "mov r2, 0xc",
            "add r4, sp, 0x70",
            "ldr r8, [r3, r0, lsl 2]",
            "mov r3, 0",
            "mov r0, r5",
            "bl sym.avio_skip",
            "mov r0, r5",
            "mov r1, r4",
            "mov r2, 3",
            "bl sym.avio_read",
            "ldrb r3, [sp, 0x70]",
            "cmp r3, 0",
            "beq 0x799c4",
            "ldr r1, [sp, 0x68]",
            "mov r2, r4",
            "mov r3, fp",
            "add r0, r8, 0x138",
            "strb fp, [sp, 0x73]",
            "bl sym.imp.av_dict_set",
            "mov r0, r4",
            "ldr r1, [sp, 0x6c]",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "beq 0x7951c",
            "ldr r1, [0x00079a3c]",
            "mov r0, r4",
            "add r1, sl, r1",
            "bl sym.imp.strcmp",
            "cmp r0, 0",
            "bne 0x799c4",
            "ldr r3, [r8, 0x98]",
            "orr r3, r3, 0x100",
            "str r3, [r8, 0x98]",
            "b 0x799c4",
            "ldr r3, [0x00079a40]",
            "mov r0, r4",
            "ldr r1, [sl, r3]",
            "bl fcn.000782d8",
            "cmp r0, 0",
            "bne 0x7961c",
            "mov r0, r7",
            "mov r1, r8",
            "bl fcn.000749e8",
            "cmp r0, 0",
            "blt 0x799dc",
            "mov r2, 8",
            "mov r3, 0",
            "mov r0, r5",
            "bl sym.avio_skip",
            "mov r0, r5",
            "bl sym.avio_rl64",
            "cmn r0, 1",
            "str r0, [sb, 0x10]",
            "str r1, [sb, 0x14]",
            "bne 0x79594",
            "cmn r1, 1",
            "moveq r2, 0",
            "moveq r3, 0x80000000",
            "strdeq r2, r3, [sb, 0x10]",
            "beq 0x799cc",
            "ldr r3, [sb, 8]",
            "str r0, [sb, 0x18]",
            "str r1, [sb, 0x1c]",
            "cmp r3, 0",
            "ldr r2, [sb, 0xc]",
            "bne 0x795b4",
            "cmp r2, 0x80000000",
            "beq 0x795c8",
            "cmp r2, r1",
            "bgt 0x795c8",
            "bne 0x795d0",
            "cmp r3, r0",
            "bls 0x795d0",
            "str r0, [sb, 8]",
            "str r1, [sb, 0xc]",
            "ldr r2, [sp, 0x54]",
            "cmp r2, 1",
            "bne 0x799cc",
            "ldr r3, [sp, 0x5c]",
            "cmp r3, r1",
            "bgt 0x799cc",
            "bne 0x795f8",
            "ldr r2, [sp, 0x58]",
            "cmp r2, r0",
            "bhi 0x799cc",
            "ldr r3, [sp, 0x48]",
            "mov r0, r5",
            "add r2, r3, 7",
            "bic r2, r2, 7",
            "sub r2, r2, 0x30",
            "asr r3, r2, 0x1f",
            "bl sym.avio_skip",
            "mov r0, 0",
            "b 0x79a14",
            "ldr r3, [0x00079a44]",
            "mov r0, r4",
            "ldr r1, [sl, r3]",
            "bl fcn.000782d8",
            "cmp r0, 0",
            "bne 0x79684",
            "mov r0, r7",
            "mov r1, r8",
            "bl fcn.000749e8",
            "ldr r2, [sp, 0x54]",
            "cmp r0, 0",
            "cmpge r2, 0",
            "bne 0x799dc",
            "ldr r3, [sp, 0x48]",
            "cmp r3, 0x20",
            "beq 0x799d4",
            "ldr r3, [r7, 0x18]",
            "mov r2, 1",
            "ldr r3, [r3, r0, lsl 2]",
            "ldr r3, [r3, 0x14]",
            "str r2, [r3]",
            "ldr r2, [sp, 0x2f0]",
            "cmp r2, 0",
            "ldrne r3, [sp, 0x48]",
            "strne r3, [r2]",
            "b 0x79a14",
            "add r3, r6, 0x138",
            "add ip, sp, 0x284",
            "ldm r3, {r0, r1, r2, r3}",
            "stm ip, {r0, r1, r2, r3}",
            "mov r0, r4",
            "mov r1, ip",
            "bl fcn.000782d8",
            "cmp r0, 0",
            "beq 0x799dc",
            "add r3, r6, 0x148",
            "add ip, sp, 0x274",
            "ldm r3, {r0, r1, r2, r3}",
            "stm ip, {r0, r1, r2, r3}",
            "mov r0, r4",
            "mov r1, ip",
            "bl fcn.000782d8",
            "cmp r0, 0",
            "beq 0x799dc",
            "ldr r3, [0x00079a48]",
            "mov r0, r4",
            "ldr r1, [sl, r3]",
            "bl fcn.000782d8",
            "cmp r0, 0",
            "beq 0x799dc",
            "add r3, r6, 0x158",
            "add ip, sp, 0x264",
            "ldm r3, {r0, r1, r2, r3}",
            "stm ip, {r0, r1, r2, r3}",
            "mov r0, r4",
            "mov r1, ip",
            "bl fcn.000782d8",
            "cmp r0, 0",
            "beq 0x799dc",
            "add r3, r6, 0x168",
            "add ip, sp, 0x254",
            "ldm r3, {r0, r1, r2, r3}",
            "stm ip, {r0, r1, r2, r3}",
            "mov r0, r4",
            "mov r1, ip",
            "bl fcn.000782d8",
            "cmp r0, 0",
            "beq 0x799dc",
            "add r3, r6, 0x178",
            "add ip, sp, 0x244",
            "ldm r3, {r0, r1, r2, r3}",
            "add r4, sp, 0x2b4",
            "stm ip, {r0, r1, r2, r3}",
            "mov r0, r4",
            "mov r1, ip",
            "bl fcn.000782d8",
            "cmp r0, 0",
            "beq 0x799dc",
            "add r3, r6, 0x188",
            "add ip, sp, 0x234",
            "ldm r3, {r0, r1, r2, r3}",
            "stm ip, {r0, r1, r2, r3}",
            "mov r0, r4",
            "mov r1, ip",
            "bl fcn.000782d8",
            "cmp r0, 0",
            "beq 0x799dc",
            "add r3, r6, 0x198",
            "add ip, sp, 0x224",
            "ldm r3, {r0, r1, r2, r3}",
            "stm ip, {r0, r1, r2, r3}",
            "mov r0, r4",
            "mov r1, ip",
            "bl fcn.000782d8",
            "cmp r0, 0",
            "beq 0x799dc",
            "add r3, r6, 0x1a8",
            "add ip, sp, 0x214",
            "ldm r3, {r0, r1, r2, r3}",
            "stm ip, {r0, r1, r2, r3}",
            "mov r0, r4",
            "mov r1, ip",
            "bl fcn.000782d8",
            "cmp r0, 0",
            "beq 0x799dc",
            "add r3, r6, 0x1b8",
            "add ip, sp, 0x204",
            "ldm r3, {r0, r1, r2, r3}",
            "stm ip, {r0, r1, r2, r3}",
            "mov r0, r4",
            "mov r1, ip",
            "bl fcn.000782d8",
            "cmp r0, 0",
            "beq 0x799dc",
            "add r3, r6, 0x1c8",
            "add ip, sp, 0x1f4",
            "ldm r3, {r0, r1, r2, r3}",
            "stm ip, {r0, r1, r2, r3}",
            "mov r0, r4",
            "mov r1, ip",
            "bl fcn.000782d8",
            "cmp r0, 0",
            "beq 0x799dc",
            "add r3, r6, 0x1d8",
            "add ip, sp, 0x1e4",
            "ldm r3, {r0, r1, r2, r3}",
            "stm ip, {r0, r1, r2, r3}",
            "mov r0, r4",
            "mov r1, ip",
            "bl fcn.000782d8",
            "cmp r0, 0",
            "beq 0x799dc",
            "add r3, r6, 0x1e8",
            "add ip, sp, 0x1d4",
            "ldm r3, {r0, r1, r2, r3}",
            "stm ip, {r0, r1, r2, r3}",
            "mov r0, r4",
            "mov r1, ip",
            "bl fcn.000782d8",
            "cmp r0, 0",
            "beq 0x799dc",
            "add r3, r6, 0x1f8",
            "add ip, sp, 0x1c4",
            "ldm r3, {r0, r1, r2, r3}",
            "stm ip, {r0, r1, r2, r3}",
            "mov r0, r4",
            "mov r1, ip",
            "bl fcn.000782d8",
            "cmp r0, 0",
            "beq 0x799dc",
            "add r3, r6, 0x208",
            "add ip, sp, 0x1b4",
            "ldm r3, {r0, r1, r2, r3}",
            "stm ip, {r0, r1, r2, r3}",
            "mov r0, r4",
            "mov r1, ip",
            "bl fcn.000782d8",
            "cmp r0, 0",
            "beq 0x799dc",
            "add r3, r6, 0x218",
            "add ip, sp, 0x1a4",
            "ldm r3, {r0, r1, r2, r3}",
            "add r4, sp, 0x2b4",
            "stm ip, {r0, r1, r2, r3}",
            "mov r0, r4",
            "mov r1, ip",
            "bl fcn.000782d8",
            "cmp r0, 0",
            "beq 0x799dc",
            "add r3, r6, 0x228",
            "add ip, sp, 0x194",
            "ldm r3, {r0, r1, r2, r3}",
            "stm ip, {r0, r1, r2, r3}",
            "mov r0, r4",
            "mov r1, ip",
            "bl fcn.000782d8",
            "cmp r0, 0",
            "beq 0x799dc",
            "add r3, r6, 0x238",
            "add ip, sp, 0x184",
            "ldm r3, {r0, r1, r2, r3}",
            "stm ip, {r0, r1, r2, r3}",
            "mov r0, r4",
            "mov r1, ip",
            "bl fcn.000782d8",
            "cmp r0, 0",
            "beq 0x799dc",
            "add r3, r6, 0x248",
            "add ip, sp, 0x174",
            "ldm r3, {r0, r1, r2, r3}",
            "stm ip, {r0, r1, r2, r3}",
            "mov r0, r4",
            "mov r1, ip",
            "bl fcn.000782d8",
            "cmp r0, 0",
            "beq 0x799dc",
            "ldrb r2, [sp, 0x2b5]",
            "mov r0, r7",
            "ldrb r3, [sp, 0x2b4]",
            "mov r1, 0x18",
            "str r2, [sp]",
            "ldrb r2, [sp, 0x2b6]",
            "str r2, [sp, 4]",
            "ldrb r2, [sp, 0x2b7]",
            "str r2, [sp, 8]",
            "ldrb r2, [sp, 0x2b8]",
            "str r2, [sp, 0xc]",
            "ldrb r2, [sp, 0x2b9]",
            "str r2, [sp, 0x10]",
            "ldrb r2, [sp, 0x2ba]",
            "str r2, [sp, 0x14]",
            "ldrb r2, [sp, 0x2bb]",
            "str r2, [sp, 0x18]",
            "ldrb r2, [sp, 0x2bc]",
            "str r2, [sp, 0x1c]",
            "ldrb r2, [sp, 0x2bd]",
            "str r2, [sp, 0x20]",
            "ldrb r2, [sp, 0x2be]",
            "str r2, [sp, 0x24]",
            "ldrb r2, [sp, 0x2bf]",
            "str r2, [sp, 0x28]",
            "ldrb r2, [sp, 0x2c0]",
            "str r2, [sp, 0x2c]",
            "ldrb r2, [sp, 0x2c1]",
            "str r2, [sp, 0x30]",
            "ldrb r2, [sp, 0x2c2]",
            "str r2, [sp, 0x34]",
            "ldrb r2, [sp, 0x2c3]",
            "str r2, [sp, 0x38]",
            "ldr r2, [sp, 0x64]",
            "bl sym.imp.av_log",
            "b 0x799dc",
            "mov r4, 0x29",
            "b 0x799e0",
            "mov r4, 0x2f",
            "b 0x799e0",
            "mov r4, 0x30",
            "b 0x799e0",
            "ldr r4, [sp, 0x48]",
            "b 0x799e0",
            "mov r4, 0x20",
            "ldr r2, [sp, 0x48]",
            "mov r0, r5",
            "add r3, r2, 7",
            "bic r3, r3, 7",
            "rsb r4, r4, r3",
            "mov r2, r4",
            "asr r3, r2, 0x1f",
            "bl sym.avio_skip",
            "mov r0, r5",
            "bl sym.url_feof",
            "cmp r0, 0",
            "beq 0x79070",
            "ldr r0, [0x00079a4c]",
            "add sp, sp, 0x2cc",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00079c98": {
        "function_address": "0x00079c98",
        "instructions": [
            "push {r3, r4, r5, r6, r7, lr}",
            "mov r4, r0",
            "mov r7, r1",
            "mov r6, 0x400",
            "mov r5, 0",
            "mov r0, r4",
            "bl sym.avio_rl32",
            "cmp r0, 0",
            "str r0, [r7, r5, lsl 2]",
            "addne r5, r5, 1",
            "subs r6, r6, 1",
            "bne 0x79cac",
            "mov r0, r5",
            "pop {r3, r4, r5, r6, r7, pc}"
        ]
    },
    "fcn.00079cd0": {
        "function_address": "0x00079cd0",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x1000",
            "sub sp, sp, 0x1c",
            "mov r8, 0",
            "mov sl, r0",
            "strd r2, r3, [sp, 0x10]",
            "add r3, sp, 0x1000",
            "ldr r5, [r3, 0x44]",
            "lsl r2, r0, 0xc",
            "ldr r7, [r3, 0x40]",
            "ldr r6, [0x00079fc0]",
            "asr r3, r2, 0x1f",
            "str r8, [sp]",
            "ldr r0, [r5, 0x10]",
            "bl sym.avio_seek",
            "cmp r1, r8",
            "add r6, pc, r6",
            "blt 0x79fb0",
            "mov r0, 0x28",
            "bl sym.imp.av_mallocz",
            "subs r4, r0, 0",
            "moveq r8, r4",
            "beq 0x79fb0",
            "cmp r7, r8",
            "bne 0x79d5c",
            "mov r0, 4",
            "bl sym.imp.av_malloc",
            "cmp r0, 0",
            "str r0, [r4, 8]",
            "movne r3, 1",
            "strne sl, [r0]",
            "mov r8, r0",
            "strne r3, [r4, 0xc]",
            "bne 0x79e4c",
            "b 0x79fa8",
            "cmp r7, 1",
            "bne 0x79d90",
            "mov r0, 0x1000",
            "bl sym.imp.av_malloc",
            "cmp r0, 0",
            "mov r8, r0",
            "str r0, [r4, 8]",
            "beq 0x79fa8",
            "ldr r0, [r5, 0x10]",
            "mov r1, r8",
            "bl fcn.00079c98",
            "str r0, [r4, 0xc]",
            "b 0x79e4c",
            "cmp r7, 2",
            "bne 0x79e30",
            "add sl, sp, 0x18",
            "ldr r0, [r5, 0x10]",
            "mov r1, sl",
            "bl fcn.00079c98",
            "mov r7, r0",
            "lsl r0, r0, 0xc",
            "bl sym.imp.av_malloc",
            "cmp r0, 0",
            "mov sb, r0",
            "str r0, [r4, 8]",
            "bne 0x79dd4",
            "mov r0, r4",
            "mov r8, sb",
            "bl sym.imp.av_free",
            "b 0x79fb0",
            "str r8, [r4, 0xc]",
            "sub sl, sl, 4",
            "mov sb, r8",
            "b 0x79e24",
            "ldr r3, [sl, 4]!",
            "str sb, [sp]",
            "ldr r0, [r5, 0x10]",
            "lsl r2, r3, 0xc",
            "lsr r3, r3, 0x14",
            "bl sym.avio_seek",
            "cmp r1, 0",
            "blt 0x79e4c",
            "ldr r1, [r4, 8]",
            "ldr fp, [r4, 0xc]",
            "ldr r0, [r5, 0x10]",
            "add r1, r1, r8, lsl 12",
            "add r8, r8, 1",
            "bl fcn.00079c98",
            "add r0, r0, fp",
            "str r0, [r4, 0xc]",
            "cmp r8, r7",
            "blt 0x79de4",
            "b 0x79e4c",
            "ldr r2, [0x00079fc4]",
            "mov r0, r5",
            "mov r1, 0x10",
            "mov r3, r7",
            "add r2, r6, r2",
            "bl sym.imp.av_log",
            "b 0x79fa8",
            "ldr r3, [sp, 0x14]",
            "ldr r7, [r4, 0xc]",
            "cmp r3, 0",
            "movlt r2, 0xc",
            "movge r2, 0x12",
            "cmp r7, 0",
            "str r2, [r4, 4]",
            "bne 0x79e84",
            "ldr r0, [r4, 8]",
            "mov r8, r7",
            "bl sym.imp.av_free",
            "mov r0, r4",
            "bl sym.imp.av_free",
            "b 0x79fb0",
            "ldrd r8, sb, [sp, 0x10]",
            "movw fp, 0xffff",
            "mov r0, r7",
            "asr r1, r0, 0x1f",
            "mvn sl, 0",
            "bl fcn.0007d398",
            "and sb, sb, fp",
            "and r8, r8, sl",
            "cmp sb, r1",
            "bhi 0x79eb8",
            "bne 0x79ef0",
            "cmp r8, r0",
            "bls 0x79ef0",
            "ldr r2, [0x00079fc8]",
            "str r0, [sp, 8]",
            "mov r0, r5",
            "str r1, [sp, 0xc]",
            "mov r1, 0x18",
            "add r2, r6, r2",
            "strd r8, sb, [sp]",
            "bl sym.imp.av_log",
            "ldr r0, [r4, 0xc]",
            "ldr r2, [r4, 4]",
            "asr r1, r0, 0x1f",
            "bl fcn.0007d398",
            "mov r8, r0",
            "mov sb, r1",
            "mov r2, 0",
            "mov r3, 0",
            "strd r2, r3, [r4, 0x18]",
            "ldr r3, [r4, 8]",
            "strd r8, sb, [r4, 0x20]",
            "mov r8, 0",
            "ldr r3, [r3]",
            "str r8, [sp]",
            "ldr r0, [r5, 0x10]",
            "lsl r2, r3, 0xc",
            "lsr r3, r3, 0x14",
            "bl sym.avio_seek",
            "cmp r1, r8",
            "blt 0x79fa0",
            "ldr r0, [r4, 4]",
            "mov r7, 1",
            "ldr r3, [r5, 0x10]",
            "lsl r0, r7, r0",
            "str r3, [r4]",
            "bl sym.imp.av_malloc",
            "subs r5, r0, 0",
            "bne 0x79f60",
            "ldr r0, [r4, 8]",
            "mov r8, r5",
            "bl sym.imp.av_free",
            "mov r0, r4",
            "bl sym.imp.av_free",
            "b 0x79fb0",
            "ldr r3, [0x00079fcc]",
            "mov r2, r8",
            "ldr r1, [r4, 4]",
            "str r8, [sp, 4]",
            "add r3, r6, r3",
            "str r3, [sp]",
            "ldr r3, [0x00079fd0]",
            "lsl r1, r7, r1",
            "add r6, r6, r3",
            "mov r3, r4",
            "str r6, [sp, 8]",
            "bl sym.avio_alloc_context",
            "subs r8, r0, 0",
            "bne 0x79fb0",
            "mov r0, r5",
            "bl sym.imp.av_free",
            "ldr r0, [r4, 8]",
            "bl sym.imp.av_free",
            "mov r0, r4",
            "bl sym.imp.av_free",
            "mov r0, r8",
            "add sp, sp, 0x1c",
            "add sp, sp, 0x1000",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00079fd4": {
        "function_address": "0x00079fd4",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x64",
            "ldr r5, [0x0007a1b0]",
            "add sb, r1, r2",
            "mov r6, r0",
            "mov r4, r1",
            "ldr r7, [sp, 0x88]",
            "ldr r2, [0x0007a1b4]",
            "add r5, pc, r5",
            "str r3, [sp, 0x50]",
            "mov r8, r5",
            "add r3, r7, 1",
            "str r0, [sp, 0x4c]",
            "str r2, [sp, 0x58]",
            "str r3, [sp, 0x5c]",
            "b 0x7a198",
            "ldr r2, [sp, 0x58]",
            "mov r0, r4",
            "ldr r1, [r8, r2]",
            "bl fcn.000782d8",
            "cmp r0, 0",
            "beq 0x7a0c8",
            "ldrb r2, [r4, 1]",
            "mov r1, 0x10",
            "ldr r6, [sp, 0x4c]",
            "mov r5, r8",
            "ldrb r3, [r4]",
            "str r2, [sp]",
            "ldrb r2, [r4, 2]",
            "mov r0, r6",
            "str r2, [sp, 4]",
            "ldrb r2, [r4, 3]",
            "str r2, [sp, 8]",
            "ldrb r2, [r4, 4]",
            "str r2, [sp, 0xc]",
            "ldrb r2, [r4, 5]",
            "str r2, [sp, 0x10]",
            "ldrb r2, [r4, 6]",
            "str r2, [sp, 0x14]",
            "ldrb r2, [r4, 7]",
            "str r2, [sp, 0x18]",
            "ldrb r2, [r4, 8]",
            "str r2, [sp, 0x1c]",
            "ldrb r2, [r4, 9]",
            "str r2, [sp, 0x20]",
            "ldrb r2, [r4, 0xa]",
            "str r2, [sp, 0x24]",
            "ldrb r2, [r4, 0xb]",
            "str r2, [sp, 0x28]",
            "ldrb r2, [r4, 0xc]",
            "str r2, [sp, 0x2c]",
            "ldrb r2, [r4, 0xd]",
            "str r2, [sp, 0x30]",
            "ldrb r2, [r4, 0xe]",
            "str r2, [sp, 0x34]",
            "ldrb r2, [r4, 0xf]",
            "str r2, [sp, 0x38]",
            "ldr r2, [0x0007a1b8]",
            "add r2, r8, r2",
            "bl sym.imp.av_log",
            "b 0x7a1a4",
            "ldr r5, [r4, 0x20]",
            "lsl r5, r5, 1",
            "ldr r2, [r4, 0x18]",
            "ldr r3, [r4, 0x1c]",
            "mov sl, r3",
            "add r3, r5, 0x30",
            "add r3, r4, r3",
            "str r2, [sp, 0x54]",
            "cmp sb, r3",
            "ldrh ip, [r4, 0x10]",
            "bhs 0x7a11c",
            "ldr r6, [sp, 0x4c]",
            "mov sl, r0",
            "ldr r2, [0x0007a1bc]",
            "mov r1, 0x10",
            "mov r5, r8",
            "mov r0, r6",
            "add r2, r8, r2",
            "bl sym.imp.av_log",
            "mov r0, sl",
            "b 0x7a1a8",
            "cmp r5, r7",
            "add r2, r4, r5",
            "ldr r3, [r2, 0x28]",
            "ldr fp, [r2, 0x2c]",
            "blt 0x7a194",
            "add r6, r4, 0x28",
            "ldr r1, [sp, 0x50]",
            "mov r0, r6",
            "mov r2, r7",
            "str r3, [sp, 0x44]",
            "str ip, [sp, 0x48]",
            "bl sym.imp.memcmp",
            "cmp r0, 0",
            "ldr r3, [sp, 0x44]",
            "ldr ip, [sp, 0x48]",
            "bne 0x7a194",
            "ldr r2, [sp, 0x5c]",
            "cmp r2, r5",
            "bge 0x7a174",
            "ldrh r2, [r6, r7]",
            "cmp r2, 0",
            "bne 0x7a194",
            "ldr r6, [sp, 0x4c]",
            "mov r0, r3",
            "ldr r2, [sp, 0x54]",
            "mov r3, sl",
            "str fp, [sp]",
            "str r6, [sp, 4]",
            "bl fcn.00079cd0",
            "b 0x7a1a8",
            "add r4, r4, ip",
            "add r3, r4, 0x30",
            "cmp sb, r3",
            "bhs 0x7a014",
            "mov r0, 0",
            "add sp, sp, 0x64",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.00078400": {
        "function_address": "0x00078400",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, lr}",
            "mov r3, 1",
            "sub sp, sp, 0x810",
            "mov r4, r1",
            "add r6, sp, 0x410",
            "mov r7, r0",
            "str r3, [sp]",
            "mov sb, r2",
            "mov r3, 0",
            "mov r2, 0",
            "mov r0, r1",
            "ldr r5, [0x00078528]",
            "bl sym.avio_seek",
            "mov r2, r6",
            "strd r0, r1, [sp, 8]",
            "mov r3, 0x400",
            "mvn r1, 0x80000000",
            "mov r0, r4",
            "add r5, pc, r5",
            "bl sym.avio_get_str16le",
            "ldr r1, [0x0007852c]",
            "mov r0, r6",
            "add r1, r5, r1",
            "bl sym.imp.strcmp",
            "subs sl, r0, 0",
            "bne 0x78504",
            "mov r0, r4",
            "add r8, sp, 0x10",
            "bl sym.avio_r8",
            "mvn r1, 0x80000000",
            "mov r2, r8",
            "mov r3, 0x400",
            "mov r0, r4",
            "bl sym.avio_get_str16le",
            "mov r0, r4",
            "bl sym.avio_rl32",
            "subs r6, r0, 0",
            "beq 0x78504",
            "mov r0, r7",
            "mov r1, sl",
            "bl sym.avformat_new_stream",
            "subs r7, r0, 0",
            "beq 0x78504",
            "ldr r1, [0x00078530]",
            "mov r2, r8",
            "mov r3, sl",
            "add r0, r7, 0x138",
            "add r1, r5, r1",
            "bl sym.imp.av_dict_set",
            "ldr r5, [r7, 8]",
            "mov r3, 8",
            "mov r0, r6",
            "str r3, [r5, 0xd4]",
            "mov r3, 4",
            "str r3, [r5, 0xd0]",
            "bl sym.imp.av_mallocz",
            "ldr r3, [r7, 8]",
            "str r0, [r5, 0x18]",
            "ldr r1, [r3, 0x18]",
            "cmp r1, 0",
            "beq 0x78504",
            "str r6, [r3, 0x1c]",
            "mov r0, r4",
            "mov r2, r6",
            "bl sym.avio_read",
            "mov r3, 0",
            "mov r0, r4",
            "str r3, [sp]",
            "ldrd r2, r3, [sp, 8]",
            "adds r2, r2, sb",
            "adc r3, r3, sb, asr 31",
            "bl sym.avio_seek",
            "add sp, sp, 0x810",
            "pop {r4, r5, r6, r7, r8, sb, sl, pc}"
        ]
    },
    "fcn.0007ab50": {
        "function_address": "0x0007ab50",
        "instructions": [
            "mov r3, 1",
            "push {r0, r1, r2, lr}",
            "mov r2, 0",
            "str r3, [sp]",
            "mov r3, 0",
            "bl sym.avio_seek",
            "add sp, sp, 0xc",
            "ldm sp!, {pc}"
        ]
    },
    "fcn.0007aca8": {
        "function_address": "0x0007aca8",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov r8, r2",
            "ldr r4, [r0, 0xc]",
            "sub sp, sp, 0x2c",
            "mov r7, r0",
            "mov r0, r1",
            "mov r5, r1",
            "ldr r6, [0x0007b144]",
            "bl fcn.0007ab50",
            "cmp r8, 0",
            "strd r0, r1, [r4, 0x38]",
            "ldrne r2, [r4]",
            "add r6, pc, r6",
            "strne r2, [sp, 0x14]",
            "bne 0x7ada0",
            "mov r0, r5",
            "bl sym.avio_rl32",
            "ldr r3, [0x0007b148]",
            "cmp r0, r3",
            "bne 0x7b138",
            "mov r0, r5",
            "bl sym.avio_rl32",
            "ldr r3, [0x0007b14c]",
            "sub r2, r0, 0x18",
            "str r0, [sp, 0x14]",
            "cmp r2, r3",
            "bls 0x7ad2c",
            "ldr r2, [0x0007b150]",
            "mov r0, r7",
            "mov r1, 0x10",
            "ldr r3, [sp, 0x14]",
            "add r2, r6, r2",
            "b 0x7ad60",
            "ldr r1, [sp, 0x14]",
            "mov r0, r5",
            "str r1, [r4]",
            "bl sym.avio_rl16",
            "sub r2, r0, 0x400",
            "mov r3, r0",
            "sub r2, r2, 2",
            "cmp r2, 0xe",
            "bls 0x7ad68",
            "ldr r2, [0x0007b154]",
            "mov r0, r7",
            "mov r1, 0x10",
            "add r2, r6, r2",
            "bl sym.imp.av_log",
            "b 0x7b138",
            "mov r0, r5",
            "bl sym.avio_r8",
            "mov r0, r5",
            "bl sym.avio_r8",
            "mov r0, r5",
            "bl sym.avio_rl32",
            "str r0, [r4, 0x18]",
            "mov r0, r5",
            "bl sym.avio_rl32",
            "add r1, r4, 0x28",
            "str r0, [r4, 0x1c]",
            "mov r2, 0xc",
            "mov r0, r5",
            "bl sym.avio_read",
            "ldr r0, [r4, 0x28]",
            "cmp r0, 0",
            "ldr r3, [r4, 0x2c]",
            "str r3, [sp, 0x24]",
            "str r3, [r4, 4]",
            "beq 0x7b13c",
            "mov r8, r3",
            "and r3, r3, 4",
            "cmp r3, 0",
            "ldr r3, [0x0007b158]",
            "ubfx r2, r8, 0x17, 4",
            "moveq sb, 2",
            "movne sb, 1",
            "moveq fp, 3",
            "movne fp, 4",
            "str sb, [sp, 0xc]",
            "add r3, r6, r3",
            "ldr sl, [r3, r2, lsl 2]",
            "and r3, r8, 0x1800",
            "subs r3, r3, 0x1800",
            "movne r3, 1",
            "cmp r3, 0",
            "str r3, [r4, 0x20]",
            "ldrne r1, [r4, 0xc]",
            "ldrne fp, [r4, 0x14]",
            "strne r1, [sp, 0xc]",
            "ldr r2, [sp, 0xc]",
            "cmn sl, 1",
            "cmpne r2, 0",
            "bne 0x7b040",
            "ldr r3, [r4, 0x24]",
            "cmp r3, 0",
            "bne 0x7b040",
            "mov r0, r5",
            "mvn r8, 0x17",
            "bl fcn.0007ab50",
            "ldr ip, [r4]",
            "mvn sb, 0",
            "adds r2, r8, ip",
            "adc r3, sb, 0",
            "adds r2, r2, r0",
            "adc r3, r3, r1",
            "strd r2, r3, [sp, 0x18]",
            "ldr r3, [r5, 0x54]",
            "cmp r3, 0",
            "ldrne r8, [sp, 0xc]",
            "bne 0x7afc4",
            "mov r0, r7",
            "mov r1, 0x10",
            "ldr r2, [0x0007b15c]",
            "b 0x7aed8",
            "mov r0, r5",
            "bl sym.avio_r8",
            "tst r0, 0x80",
            "mov r3, r0",
            "beq 0x7ae90",
            "mov r0, r5",
            "str r3, [sp, 0x10]",
            "bl sym.avio_rl24",
            "b 0x7ae9c",
            "mov r0, r5",
            "str r3, [sp, 0x10]",
            "bl sym.avio_r8",
            "ldr r3, [sp, 0x10]",
            "lsl r2, r0, 1",
            "ands sb, r3, 0x40",
            "and r3, r3, 0x3f",
            "subne r2, r2, 1",
            "cmp r3, 0xd",
            "beq 0x7aec4",
            "cmp r3, 0x27",
            "bne 0x7afa0",
            "b 0x7af90",
            "cmp r2, 1",
            "bgt 0x7aee4",
            "ldr r2, [0x0007b160]",
            "mov r0, r7",
            "mov r1, 0x10",
            "add r2, r6, r2",
            "bl sym.imp.av_log",
            "b 0x7b138",
            "mov r0, r5",
            "str r2, [sp, 0x10]",
            "bl sym.avio_r8",
            "ldr r2, [sp, 0x10]",
            "mov r8, r0",
            "sub r3, r2, 2",
            "cmp r3, 5",
            "addls pc, pc, r3, lsl 2",
            "b 0x7af74",
            "b 0x7af20",
            "b 0x7af2c",
            "b 0x7af64",
            "b 0x7af38",
            "b 0x7af74",
            "b 0x7af44",
            "mov r0, r5",
            "bl sym.avio_r8",
            "b 0x7af6c",
            "mov r0, r5",
            "bl sym.avio_rl16",
            "b 0x7af6c",
            "mov r0, r5",
            "bl sym.avio_rl32",
            "b 0x7af6c",
            "mov r2, 1",
            "mov r3, 0",
            "mov r0, r5",
            "bl sym.avio_skip",
            "mov r0, r5",
            "bl sym.avio_r8",
            "and r0, r0, 0xf",
            "orr r8, r8, r0, lsl 8",
            "mov r0, r5",
            "bl sym.avio_rl24",
            "mov fp, r0",
            "b 0x7afac",
            "mov sb, r2",
            "ldr r2, [0x0007b164]",
            "mov r0, r7",
            "mov r1, 0x10",
            "mov r3, sb",
            "add r2, r6, r2",
            "b 0x7ad60",
            "mov r0, r5",
            "bl sym.avio_rl24",
            "mov sl, r0",
            "b 0x7afac",
            "mov r0, r5",
            "asr r3, r2, 0x1f",
            "bl sym.avio_skip",
            "cmp sb, 0",
            "beq 0x7afc4",
            "mov r0, r5",
            "mov r2, 1",
            "mov r3, 0",
            "bl sym.avio_skip",
            "mov r0, r5",
            "bl fcn.0007ab50",
            "ldr r3, [sp, 0x1c]",
            "cmp r3, r1",
            "bgt 0x7ae6c",
            "bne 0x7afe8",
            "ldr sb, [sp, 0x18]",
            "cmp sb, r0",
            "bhi 0x7ae6c",
            "cmn sl, 1",
            "str r8, [sp, 0xc]",
            "bne 0x7b010",
            "ldr r2, [0x0007b168]",
            "mov r0, r7",
            "mov r1, 0x10",
            "add r2, r6, r2",
            "bl sym.imp.av_log",
            "mov r0, sl",
            "b 0x7b13c",
            "ldr r1, [r4]",
            "mov r2, 0x18",
            "ldrd r8, sb, [sp, 0x18]",
            "mov r3, 0",
            "mov r0, r5",
            "subs r2, r2, r1",
            "sbc r3, r3, 0",
            "mov r1, 0",
            "adds r2, r2, r8",
            "str r1, [sp]",
            "adc r3, r3, sb",
            "bl sym.avio_seek",
            "ldr sb, [sp, 0x24]",
            "ldr r2, [r4, 0x10]",
            "and r3, sb, 3",
            "cmp r2, 0",
            "add r3, r3, 1",
            "ldr r2, [r4, 0xc]",
            "lsl r3, r3, 3",
            "streq r3, [r4, 0x10]",
            "cmp r2, 0",
            "ldr r2, [r4, 0x14]",
            "ldreq r1, [sp, 0xc]",
            "streq r1, [r4, 0xc]",
            "cmp r2, 0",
            "ldr r2, [r4, 8]",
            "streq fp, [r4, 0x14]",
            "cmp r2, 0",
            "ldr r2, [r4, 4]",
            "streq sl, [r4, 8]",
            "cmp r2, 0",
            "beq 0x7b0ec",
            "ldr r1, [r4, 0x10]",
            "cmp r3, r1",
            "beq 0x7b0b4",
            "ldr r2, [0x0007b16c]",
            "mov r0, r7",
            "str r1, [sp]",
            "mov r1, 0x10",
            "add r2, r6, r2",
            "b 0x7b11c",
            "ldr r3, [r4, 0x20]",
            "cmp r3, 0",
            "bne 0x7b0ec",
            "ldr r3, [r4, 0xc]",
            "ldr r8, [sp, 0xc]",
            "cmp r8, r3",
            "beq 0x7b0ec",
            "ldr r2, [0x0007b170]",
            "mov r0, r7",
            "str r3, [sp]",
            "mov r1, 0x10",
            "mov r3, r8",
            "add r2, r6, r2",
            "b 0x7b11c",
            "cmp r2, 0",
            "cmnne sl, 1",
            "beq 0x7b124",
            "ldr r3, [r4, 8]",
            "cmp sl, r3",
            "beq 0x7b124",
            "ldr r2, [0x0007b174]",
            "mov r0, r7",
            "str r3, [sp]",
            "mov r1, 0x10",
            "mov r3, sl",
            "add r2, r6, r2",
            "bl sym.imp.av_log",
            "b 0x7b138",
            "ldr sb, [sp, 0x14]",
            "mov r0, 0",
            "sub r3, sb, 0x18",
            "str r3, [r4]",
            "b 0x7b13c",
            "mvn r0, 0",
            "add sp, sp, 0x2c",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    },
    "fcn.0007c030": {
        "function_address": "0x0007c030",
        "instructions": [
            "mov r3, 1",
            "push {r0, r1, r2, lr}",
            "mov r2, 0",
            "str r3, [sp]",
            "mov r3, 0",
            "bl sym.avio_seek",
            "add sp, sp, 0xc",
            "ldm sp!, {pc}"
        ]
    },
    "fcn.0007dfd8": {
        "function_address": "0x0007dfd8",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "sub sp, sp, 0x14",
            "subs r8, r1, 0",
            "mov r4, r0",
            "mov r7, r2",
            "mov ip, r3",
            "movge r1, 0",
            "bge 0x7e00c",
            "rsbs r0, r0, 0",
            "rsc r1, r1, 0",
            "mov r8, r1",
            "mov r4, r0",
            "mvn r1, 0",
            "cmp ip, 0",
            "str r1, [sp, 0xc]",
            "bge 0x7e034",
            "ldr r1, [sp, 0xc]",
            "rsbs r2, r2, 0",
            "rsc r3, r3, 0",
            "mov r7, r2",
            "mov ip, r3",
            "mvn r1, r1",
            "str r1, [sp, 0xc]",
            "cmp ip, 0",
            "mov sb, r7",
            "mov fp, r4",
            "mov r5, r8",
            "bne 0x7e2a0",
            "cmp r7, r8",
            "bls 0x7e110",
            "clz r3, r7",
            "cmp r3, 0",
            "rsbne r2, r3, 0x20",
            "lslne sb, r7, r3",
            "lsrne r2, r4, r2",
            "lslne fp, r4, r3",
            "lsr r6, sb, 0x10",
            "orrne r5, r2, r8, lsl r3",
            "uxth r8, sb",
            "mov r0, r5",
            "mov r1, r6",
            "bl fcn.0007d244",
            "mov r0, r5",
            "mov r7, r1",
            "mov r1, r6",
            "bl fcn.0007d19c",
            "lsr r3, fp, 0x10",
            "mul r5, r8, r0",
            "mov r4, r0",
            "orr r7, r3, r7, lsl 16",
            "cmp r7, r5",
            "bhs 0x7e0c0",
            "adds r7, r7, sb",
            "sub r4, r0, 1",
            "bhs 0x7e0c0",
            "cmp r7, r5",
            "sublo r4, r4, 1",
            "addlo r7, r7, sb",
            "rsb r5, r5, r7",
            "mov r1, r6",
            "mov r0, r5",
            "uxth fp, fp",
            "bl fcn.0007d244",
            "mov r0, r5",
            "mov sl, r1",
            "mov r1, r6",
            "orr sl, fp, sl, lsl 16",
            "bl fcn.0007d19c",
            "mul r8, r8, r0",
            "cmp sl, r8",
            "bhs 0x7e108",
            "adds sl, sl, sb",
            "sub r0, r0, 1",
            "bhs 0x7e108",
            "cmp sl, r8",
            "sublo r0, r0, 1",
            "orr r7, r0, r4, lsl 16",
            "b 0x7e400",
            "cmp r7, 0",
            "bne 0x7e128",
            "mov r0, 1",
            "mov r1, ip",
            "bl fcn.0007d19c",
            "mov sb, r0",
            "clz r3, sb",
            "cmp r3, 0",
            "rsbeq r8, sb, r8",
            "moveq r6, 1",
            "beq 0x7e1fc",
            "lsl sb, sb, r3",
            "rsb sl, r3, 0x20",
            "lsr r6, r8, sl",
            "lsr sl, r4, sl",
            "lsr r5, sb, 0x10",
            "lsl fp, r4, r3",
            "orr sl, sl, r8, lsl r3",
            "uxth r8, sb",
            "mov r0, r6",
            "mov r1, r5",
            "bl fcn.0007d244",
            "mov r0, r6",
            "mov r4, r1",
            "mov r1, r5",
            "bl fcn.0007d19c",
            "lsr r2, sl, 0x10",
            "mul r3, r8, r0",
            "mov r7, r0",
            "orr r4, r2, r4, lsl 16",
            "cmp r4, r3",
            "bhs 0x7e1a8",
            "adds r4, r4, sb",
            "sub r7, r0, 1",
            "bhs 0x7e1a8",
            "cmp r4, r3",
            "sublo r7, r7, 1",
            "addlo r4, r4, sb",
            "rsb r4, r3, r4",
            "mov r1, r5",
            "mov r0, r4",
            "uxth sl, sl",
            "bl fcn.0007d244",
            "mov r0, r4",
            "mov r6, r1",
            "mov r1, r5",
            "orr sl, sl, r6, lsl 16",
            "bl fcn.0007d19c",
            "mul r8, r8, r0",
            "cmp sl, r8",
            "bhs 0x7e1f4",
            "adds sl, sl, sb",
            "sub r0, r0, 1",
            "bhs 0x7e1f4",
            "cmp sl, r8",
            "sublo r0, r0, 1",
            "addlo sl, sl, sb",
            "orr r6, r0, r7, lsl 16",
            "rsb r8, r8, sl",
            "lsr r7, sb, 0x10",
            "mov r0, r8",
            "uxth r5, sb",
            "mov r1, r7",
            "bl fcn.0007d244",
            "mov r0, r8",
            "mov sl, r1",
            "mov r1, r7",
            "bl fcn.0007d19c",
            "lsr r3, fp, 0x10",
            "mul r8, r5, r0",
            "mov r4, r0",
            "orr sl, r3, sl, lsl 16",
            "cmp sl, r8",
            "bhs 0x7e250",
            "adds sl, sl, sb",
            "sub r4, r0, 1",
            "bhs 0x7e250",
            "cmp sl, r8",
            "sublo r4, r4, 1",
            "addlo sl, sl, sb",
            "rsb r8, r8, sl",
            "mov r1, r7",
            "mov r0, r8",
            "uxth fp, fp",
            "bl fcn.0007d244",
            "mov r0, r8",
            "mov sl, r1",
            "mov r1, r7",
            "orr sl, fp, sl, lsl 16",
            "bl fcn.0007d19c",
            "mul r5, r5, r0",
            "cmp sl, r5",
            "bhs 0x7e298",
            "adds sl, sl, sb",
            "sub r0, r0, 1",
            "bhs 0x7e298",
            "cmp sl, r5",
            "sublo r0, r0, 1",
            "orr r7, r0, r4, lsl 16",
            "b 0x7e410",
            "cmp ip, r8",
            "movhi r6, 0",
            "bhi 0x7e40c",
            "clz r6, ip",
            "cmp r6, 0",
            "bne 0x7e2d4",
            "cmp r8, ip",
            "cmpls r4, r7",
            "movlo r4, 0",
            "movhs r4, 1",
            "movhs r7, 1",
            "bhs 0x7e410",
            "b 0x7e408",
            "rsb sl, r6, 0x20",
            "lsr r5, r7, sl",
            "lsl r7, r7, r6",
            "orr r5, r5, ip, lsl r6",
            "str r7, [sp, 8]",
            "lsr r7, r8, sl",
            "lsr sl, r4, sl",
            "uxth sb, r5",
            "orr sl, sl, r8, lsl r6",
            "lsr r8, r5, 0x10",
            "mov r0, r7",
            "mov r1, r8",
            "bl fcn.0007d244",
            "mov r0, r7",
            "mov fp, r1",
            "mov r1, r8",
            "bl fcn.0007d19c",
            "lsr r2, sl, 0x10",
            "mul r3, sb, r0",
            "mov r7, r0",
            "orr fp, r2, fp, lsl 16",
            "cmp fp, r3",
            "bhs 0x7e348",
            "adds fp, fp, r5",
            "sub r7, r0, 1",
            "bhs 0x7e348",
            "cmp fp, r3",
            "sublo r7, r7, 1",
            "addlo fp, fp, r5",
            "rsb fp, r3, fp",
            "mov r1, r8",
            "mov r0, fp",
            "uxth sl, sl",
            "bl fcn.0007d244",
            "mov r0, fp",
            "mov r3, r1",
            "mov r1, r8",
            "str r3, [sp, 4]",
            "bl fcn.0007d19c",
            "ldr r3, [sp, 4]",
            "mul sb, sb, r0",
            "orr r3, sl, r3, lsl 16",
            "cmp r3, sb",
            "bhs 0x7e39c",
            "adds r3, r3, r5",
            "sub r0, r0, 1",
            "bhs 0x7e39c",
            "cmp r3, sb",
            "sublo r0, r0, 1",
            "addlo r3, r3, r5",
            "rsb r3, sb, r3",
            "orr r7, r0, r7, lsl 16",
            "ldr r8, [sp, 8]",
            "lsr r0, r7, 0x10",
            "lsr r1, r8, 0x10",
            "bic r5, r7, r0, lsl 16",
            "bic ip, r8, r1, lsl 16",
            "mul r2, r5, ip",
            "mul ip, r0, ip",
            "mul r5, r1, r5",
            "mul r1, r0, r1",
            "adds r5, ip, r5",
            "addhs r1, r1, 0x10000",
            "adds r2, r2, r5, lsl 16",
            "adc r1, r1, r5, lsr 16",
            "cmp r1, r3",
            "bhi 0x7e3fc",
            "movne r3, 0",
            "moveq r3, 1",
            "cmp r2, r4, lsl r6",
            "movls r6, 0",
            "andhi r6, r3, 1",
            "cmp r6, 0",
            "beq 0x7e410",
            "sub r7, r7, 1",
            "mov r6, 0",
            "b 0x7e410",
            "mov r6, r4",
            "mov r7, r6",
            "ldr r1, [sp, 0xc]",
            "mov r2, r7",
            "mov r3, r6",
            "cmp r1, 0",
            "beq 0x7e42c",
            "rsbs r2, r2, 0",
            "rsc r3, r3, 0",
            "mov r0, r2",
            "mov r1, r3",
            "add sp, sp, 0x14",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}"
        ]
    }
}