{
    "entry0": {
        "function_address": "0x000086e8",
        "instructions": [
            "ldr ip, aav.0x00008e68",
            "mov fp, 0",
            "pop {r1}",
            "mov r2, sp",
            "str r2, [sp, -4]!",
            "str r0, [sp, -4]!",
            "ldr r0, main",
            "ldr r3, fcn.00008e08",
            "str ip, [sp, -4]!",
            "bl sym.imp.__libc_start_main"
        ]
    },
    "sym.imp.__libc_start_main": {
        "function_address": "0x00008628",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 8, 20",
            "ldr pc, [ip, 0xb7c]!"
        ]
    },
    "main": {
        "function_address": "0x000088d8",
        "instructions": [
            "push {r4, r5, r6, r7, r8, sb, sl, fp, lr}",
            "mov sl, r1",
            "mov fp, 0",
            "mov sb, fp",
            "ldr r3, [r1]",
            "ldr r1, [0x00008dac]",
            "sub sp, sp, 0x44",
            "str r3, [r1]",
            "mov r1, 0x2f",
            "str r0, [sp, 0x18]",
            "ldr r5, [sl]",
            "str fp, [sp, 0x1c]",
            "mov r0, r5",
            "bl sym.imp.strrchr",
            "cmp r0, fp",
            "addne r4, r0, 1",
            "moveq r4, r5",
            "ldr r1, str.mount.fuse.",
            "mov r2, 0xb",
            "str fp, [sp, 0xc]",
            "mov r0, r4",
            "bl sym.imp.strncmp",
            "ldr r1, str.mount.fuseblk.",
            "cmp r0, 0",
            "mov r2, 0xe",
            "mov r0, r4",
            "addeq sb, r4, 0xb",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "addeq sb, r4, 0xe",
            "cmp sb, 0",
            "beq 0x8964",
            "ldrb r3, [sb]",
            "cmp r3, 0",
            "moveq sb, 0",
            "ldr r2, [sp, 0x18]",
            "cmp r2, 2",
            "ble 0x8d80",
            "ldr r2, [sl, 4]",
            "ldrb r3, [r2]",
            "cmp r3, 0",
            "moveq r2, 0",
            "str r2, [sp, 0x14]",
            "ldr r3, [sp, 0x18]",
            "mov r8, 3",
            "cmp r8, r3",
            "ldr r1, [sl, 8]",
            "str r1, [sp, 0x10]",
            "bge 0x89d8",
            "ldr r2, [sl, r8, lsl 2]",
            "ldrb r3, [r2]",
            "cmp r3, 0x2d",
            "sub r3, r3, 0x2d",
            "bne 0x89c0",
            "ldrb r3, [r2, 1]",
            "cmp r3, 0x76",
            "sub r3, r3, 0x76",
            "ldrbeq r3, [r2, 2]",
            "cmp r3, 0",
            "bne 0x8aac",
            "ldr r3, [sp, 0x18]",
            "add r8, r8, 1",
            "cmp r8, r3",
            "blt 0x899c",
            "cmp sb, 0",
            "beq 0x8d18",
            "add r5, sp, 0x1c",
            "mov r1, sb",
            "mov r0, r5",
            "bl fcn.00008820",
            "ldr r1, [sp, 0x14]",
            "cmp r1, 0",
            "beq 0x8a04",
            "mov r0, r5",
            "bl fcn.00008820",
            "ldr r1, [sp, 0x10]",
            "mov r0, r5",
            "bl fcn.00008820",
            "cmp fp, 0",
            "beq 0x8a30",
            "mov r0, r5",
            "ldr r1, aav.0x00008f3c",
            "bl fcn.00008820",
            "mov r0, r5",
            "mov r1, fp",
            "bl fcn.00008820",
            "ldr r2, [sp, 0xc]",
            "cmp r2, 0",
            "beq 0x8a48",
            "ldrb r3, [r2]",
            "cmp r3, 0",
            "bne 0x8cb8",
            "ldr r0, str.HOME",
            "bl sym.imp.getenv",
            "cmp r0, 0",
            "beq 0x8d04",
            "ldr r1, str._bin_sh",
            "ldr r3, [sp, 0x1c]",
            "mov ip, 0",
            "ldr r2, aav.0x00008f50",
            "mov r0, r1",
            "str ip, [sp]",
            "bl sym.imp.execl",
            "bl sym.imp.__errno_location",
            "ldr r0, [r0]",
            "bl sym.imp.strerror",
            "ldr r3, obj.stderr",
            "mov ip, r0",
            "ldr r0, [r3]",
            "ldr r3, [0x00008dac]",
            "ldr r1, str._s:_failed_to_execute__bin_sh:__s_n",
            "ldr r2, [r3]",
            "mov r3, ip",
            "bl sym.imp.fprintf",
            "mov r0, 1",
            "add sp, sp, 0x44",
            "pop {r4, r5, r6, r7, r8, sb, sl, fp, pc}",
            "ldrb r3, [r2]",
            "cmp r3, 0x2d",
            "sub r3, r3, 0x2d",
            "bne 0x8acc",
            "ldrb r3, [r2, 1]",
            "cmp r3, 0x74",
            "sub r3, r3, 0x74",
            "ldrbeq r3, [r2, 2]",
            "cmp r3, 0",
            "bne 0x8b48",
            "ldr r2, [sp, 0x18]",
            "add r8, r8, 1",
            "cmp r8, r2",
            "beq 0x8d68",
            "ldr sb, [sl, r8, lsl 2]",
            "ldr r1, str.fuse.",
            "mov r0, sb",
            "mov r2, 5",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "addeq sb, sb, 5",
            "beq 0x8b1c",
            "mov r0, sb",
            "ldr r1, str.fuseblk.",
            "mov r2, 8",
            "bl sym.imp.strncmp",
            "cmp r0, 0",
            "addeq sb, sb, 8",
            "ldrb r3, [sb]",
            "cmp r3, 0",
            "bne 0x89c8",
            "ldr r1, [0x00008dac]",
            "ldr r3, obj.stderr",
            "ldr r2, [r1]",
            "ldr r0, [r3]",
            "ldr r1, str._s:_empty_type_given_as_argument_to_option__t_n",
            "bl sym.imp.fprintf",
            "mov r0, 1",
            "bl sym.imp.exit",
            "ldrb r3, [r2]",
            "cmp r3, 0x2d",
            "sub r3, r3, 0x2d",
            "bne 0x8b68",
            "ldrb r3, [r2, 1]",
            "cmp r3, 0x6f",
            "sub r3, r3, 0x6f",
            "ldrbeq r3, [r2, 2]",
            "cmp r3, 0",
            "bne 0x89c8",
            "ldr r2, [sp, 0x18]",
            "add r8, r8, 1",
            "cmp r8, r2",
            "beq 0x89d8",
            "ldr r0, [sl, r8, lsl 2]",
            "bl fcn.00008790",
            "ldr r1, aav.0x00008fc0",
            "bl sym.imp.strtok",
            "cmp r0, 0",
            "mov r6, r0",
            "beq 0x89c8",
            "add r7, sp, 0x20",
            "ldr ip, aav.0x00009070",
            "mov lr, ip",
            "ldm lr!, {r0, r1, r2, r3}",
            "mov r4, r7",
            "stm r4!, {r0, r1, r2, r3}",
            "ldm lr, {r0, r1, r2, r3}",
            "mov r5, 0",
            "stm r4, {r0, r1, r2, r3}",
            "mov r0, r6",
            "ldr r1, str.setuid",
            "mov r2, 7",
            "bl sym.imp.strncmp",
            "cmp r0, r5",
            "beq 0x8c8c",
            "ldr r3, [sp, 0x20]",
            "cmp r3, 0",
            "mov r4, 0",
            "beq 0x8c24",
            "mov r1, r4",
            "add r2, sp, 0x40",
            "add r3, r1, r2",
            "ldr r1, [r3, -0x20]",
            "mov r0, r6",
            "bl sym.imp.strcmp",
            "add r4, r4, 1",
            "add r2, sp, 0x40",
            "lsl r1, r4, 2",
            "add r3, r1, r2",
            "ldr r2, [r3, -0x20]",
            "cmp r0, 0",
            "moveq r5, 1",
            "cmp r2, 0",
            "bne 0x8bec",
            "cmp r5, 0",
            "bne 0x8c70",
            "cmp fp, 0",
            "moveq r4, fp",
            "beq 0x8c44",
            "mov r0, fp",
            "bl sym.imp.strlen",
            "mov r4, r0",
            "mov r0, r6",
            "bl sym.imp.strlen",
            "add r2, r0, r4",
            "add r1, r2, 2",
            "mov r0, fp",
            "bl fcn.000087d8",
            "cmp r4, 0",
            "mov fp, r0",
            "bne 0x8ca0",
            "mov r1, r6",
            "bl sym.imp.strcpy",
            "mov r0, 0",
            "ldr r1, aav.0x00008fc0",
            "bl sym.imp.strtok",
            "cmp r0, 0",
            "mov r6, r0",
            "bne 0x8ba0",
            "b 0x89c8",
            "add r0, r6, 7",
            "bl fcn.00008790",
            "add r5, r5, 1",
            "str r0, [sp, 0xc]",
            "b 0x8bd8",
            "ldr r1, aav.0x00008fc0",
            "bl sym.imp.strcat",
            "mov r0, fp",
            "mov r1, r6",
            "bl sym.imp.strcat",
            "b 0x8c70",
            "mov r3, 0",
            "mov r0, r5",
            "ldr r1, aav.0x00008fcc",
            "ldr r4, [sp, 0x1c]",
            "str r3, [sp, 0x1c]",
            "bl fcn.00008820",
            "mov r0, r5",
            "ldr r1, aav.0x00008fd0",
            "bl fcn.00008820",
            "mov r0, r5",
            "ldr r1, [sp, 0xc]",
            "bl fcn.00008820",
            "mov r0, r5",
            "ldr r1, aav.0x00008f50",
            "bl fcn.00008820",
            "mov r0, r5",
            "mov r1, r4",
            "bl fcn.00008820",
            "b 0x8a58",
            "mov r2, r0",
            "ldr r1, str._root",
            "ldr r0, str.HOME",
            "bl sym.imp.setenv",
            "b 0x8a58",
            "ldr r0, [sp, 0x14]",
            "bl fcn.00008790",
            "mov r1, 0x23",
            "mov sb, r0",
            "bl sym.imp.strchr",
            "cmp r0, 0",
            "movne r3, 0",
            "movne r1, r0",
            "str r0, [sp, 0x14]",
            "strbne r3, [r1], 1",
            "strne r1, [sp, 0x14]",
            "ldrb r3, [sb]",
            "cmp r3, 0",
            "bne 0x89e0",
            "ldr r3, obj.stderr",
            "ldr r0, [r3]",
            "ldr r3, [0x00008dac]",
            "ldr r1, str._s:_empty_filesystem_type_n",
            "ldr r2, [r3]",
            "b 0x8b3c",
            "ldr r3, obj.stderr",
            "ldr r0, [r3]",
            "ldr r3, [0x00008dac]",
            "ldr r1, str._s:_missing_argument_to_option__t_n",
            "ldr r2, [r3]",
            "b 0x8b3c",
            "ldr r3, obj.stderr",
            "ldr r2, str.type_source_",
            "ldr r1, [0x00008dac]",
            "cmp sb, 0",
            "ldr r0, [r3]",
            "ldr r3, str.source",
            "moveq r3, r2",
            "ldr r2, [r1]",
            "ldr r1, str.usage:__s__s_destination___t_type____o_opt__opts...___n",
            "bl sym.imp.fprintf",
            "b 0x8b40"
        ]
    },
    "sym.imp.strrchr": {
        "function_address": "0x00008640",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 8, 20",
            "ldr pc, [ip, 0xb6c]!"
        ]
    },
    "sym.imp.strncmp": {
        "function_address": "0x00008610",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 8, 20",
            "ldr pc, [ip, 0xb8c]!"
        ]
    },
    "fcn.00008820": {
        "function_address": "0x00008820",
        "instructions": [
            "push {r4, r5, r6, r7, r8, lr}",
            "mov r8, r0",
            "mov r0, r1",
            "mov r5, r1",
            "bl sym.imp.strlen",
            "ldr r4, [r8]",
            "cmp r4, 0",
            "mov r7, r0",
            "moveq r6, r4",
            "beq 0x8854",
            "mov r0, r4",
            "bl sym.imp.strlen",
            "mov r6, r0",
            "add r1, r6, r7, lsl 2",
            "add r1, r1, 4",
            "mov r0, r4",
            "bl fcn.000087d8",
            "ldr r3, [r8]",
            "cmp r3, 0",
            "movne r3, 0x20",
            "add r1, r0, r6",
            "strbne r3, [r0, r6]",
            "addne r1, r1, 1",
            "mov r3, 0x27",
            "strb r3, [r1], 1",
            "ldrb r2, [r5]",
            "and r3, r2, 0xff",
            "cmp r3, 0",
            "beq 0x88c0",
            "mov ip, 0x5c",
            "cmp r3, 0x27",
            "strbeq r3, [r1], 1",
            "strbeq ip, [r1], 1",
            "strbeq r3, [r1], 1",
            "strbne r2, [r1], 1",
            "strbeq r3, [r1], 1",
            "ldrb r2, [r5, 1]!",
            "and r3, r2, 0xff",
            "cmp r3, 0",
            "bne 0x8898",
            "mov r3, 0x27",
            "strb r3, [r1], 1",
            "mov r2, 0",
            "strb r2, [r1]",
            "str r0, [r8]",
            "pop {r4, r5, r6, r7, r8, pc}"
        ]
    },
    "sym.imp.getenv": {
        "function_address": "0x00008688",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 8, 20",
            "ldr pc, [ip, 0xb3c]!"
        ]
    },
    "sym.imp.execl": {
        "function_address": "0x0000864c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 8, 20",
            "ldr pc, [ip, 0xb64]!"
        ]
    },
    "sym.imp.__errno_location": {
        "function_address": "0x00008664",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 8, 20",
            "ldr pc, [ip, 0xb54]!"
        ]
    },
    "sym.imp.strerror": {
        "function_address": "0x000086b8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 8, 20",
            "ldr pc, [ip, 0xb1c]!"
        ]
    },
    "sym.imp.fprintf": {
        "function_address": "0x00008694",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 8, 20",
            "ldr pc, [ip, 0xb34]!"
        ]
    },
    "sym.imp.exit": {
        "function_address": "0x000086ac",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 8, 20",
            "ldr pc, [ip, 0xb24]!"
        ]
    },
    "fcn.00008790": {
        "function_address": "0x00008790",
        "instructions": [
            "str lr, [sp, -4]!",
            "sub sp, sp, 4",
            "bl sym.imp.__strdup",
            "cmp r0, 0",
            "beq 0x87ac",
            "add sp, sp, 4",
            "ldm sp!, {pc}",
            "ldr r3, obj.stderr",
            "ldr r0, [r3]",
            "ldr r3, [0x000087d0]",
            "ldr r1, str._s:_failed_to_allocate_memory_n",
            "ldr r2, [r3]",
            "bl sym.imp.fprintf",
            "mov r0, 1",
            "bl sym.imp.exit"
        ]
    },
    "sym.imp.strtok": {
        "function_address": "0x000086c4",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 8, 20",
            "ldr pc, [ip, 0xb14]!"
        ]
    },
    "sym.imp.strcmp": {
        "function_address": "0x00008634",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 8, 20",
            "ldr pc, [ip, 0xb74]!"
        ]
    },
    "sym.imp.strlen": {
        "function_address": "0x00008658",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 8, 20",
            "ldr pc, [ip, 0xb5c]!"
        ]
    },
    "fcn.000087d8": {
        "function_address": "0x000087d8",
        "instructions": [
            "str lr, [sp, -4]!",
            "sub sp, sp, 4",
            "bl sym.imp.realloc",
            "cmp r0, 0",
            "beq 0x87f4",
            "add sp, sp, 4",
            "ldm sp!, {pc}",
            "ldr r3, obj.stderr",
            "ldr r0, [r3]",
            "ldr r3, [0x00008818]",
            "ldr r1, str._s:_failed_to_allocate_memory_n",
            "ldr r2, [r3]",
            "bl sym.imp.fprintf",
            "mov r0, 1",
            "bl sym.imp.exit"
        ]
    },
    "sym.imp.strcpy": {
        "function_address": "0x00008670",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 8, 20",
            "ldr pc, [ip, 0xb4c]!"
        ]
    },
    "sym.imp.strcat": {
        "function_address": "0x0000861c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 8, 20",
            "ldr pc, [ip, 0xb84]!"
        ]
    },
    "sym.imp.setenv": {
        "function_address": "0x000086d0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 8, 20",
            "ldr pc, [ip, 0xb0c]!"
        ]
    },
    "sym.imp.strchr": {
        "function_address": "0x000085f8",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 8, 20",
            "ldr pc, [ip, 0xb9c]!"
        ]
    },
    "fcn.00008e08": {
        "function_address": "0x00008e08",
        "instructions": [
            "push {r4, r5, r6, sl, lr}",
            "ldr sl, aav.0x00008378",
            "add sl, pc, sl",
            "mov r4, 0",
            "sub sp, sp, 4",
            "bl fcn.000085d0",
            "ldr r2, [0x00008e60]",
            "ldr r3, [0x00008e64]",
            "rsb r3, r2, r3",
            "cmp r4, r3, asr 2",
            "add r2, sl, r2",
            "bhs 0x8e54",
            "mov r6, r2",
            "mov r5, r3",
            "mov lr, pc",
            "ldr pc, [r6, r4, lsl 2]",
            "add sp, sp, 4",
            "pop {r4, r5, r6, sl, pc}"
        ]
    },
    "fcn.000085d0": {
        "function_address": "0x000085d0",
        "instructions": [
            "str lr, [sp, -4]!",
            "sub sp, sp, 4",
            "bl fcn.00008720",
            "add sp, sp, 4",
            "ldm sp!, {pc}"
        ]
    },
    "fcn.00008720": {
        "function_address": "0x00008720",
        "instructions": [
            "push {sl, lr}",
            "ldr sl, aav.0x00008a5c",
            "ldr r3, [0x00008748]",
            "add sl, pc, sl",
            "ldr r3, [sl, r3]",
            "cmp r3, 0",
            "popeq {sl, pc}",
            "blx r3",
            "pop {sl, pc}"
        ]
    },
    "sym.imp.realloc": {
        "function_address": "0x000086a0",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 8, 20",
            "ldr pc, [ip, 0xb2c]!"
        ]
    },
    "sym.imp.__strdup": {
        "function_address": "0x0000867c",
        "instructions": [
            "add ip, pc, 0, 12",
            "add ip, ip, 8, 20",
            "ldr pc, [ip, 0xb44]!"
        ]
    }
}